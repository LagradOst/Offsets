namespace off {
	constexpr auto GNames = 0x7376940;
	constexpr auto GObjects = 0x738f320;
	constexpr auto GWorld = 0x74d7d80;
	constexpr auto GetDecryptArgFn = 0x29ad2e0;
	constexpr auto DecryptNameEntryFn = 0x2800a30;

	namespace n_UButtonSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UGizmoRectangleComponent {
		constexpr auto DirectionX = 0x4d0; // FVector
		constexpr auto DirectionY = 0x4dc; // FVector
		constexpr auto OffsetX = 0x4e8; // float
		constexpr auto OffsetY = 0x4ec; // float
		constexpr auto LengthX = 0x4f0; // float
		constexpr auto LengthY = 0x4f4; // float
		constexpr auto Thickness = 0x4f8; // float
		constexpr auto SegmentFlags = 0x4fc; // char
	}

	namespace n_UShaderPlatformQualitySettings {
		constexpr auto QualityOverrides = 0x28; // FMaterialQualityOverrides [0x3]
	}

	namespace n_UUW-ReplayEventMarker_WhenReported_C {
		constexpr auto UberGraphFrame = 0x2a0; // FPointerToUberGraphFrame
		constexpr auto EventInform = 0x2a8; // UTextBlock*
		constexpr auto VisualBorder = 0x2b0; // UBorder*
	}

	namespace n_UAISystemBase {
		constexpr auto AISystemClassName = 0x28; // FSoftClassPath
		constexpr auto AISystemModuleName = 0x40; // FName
		constexpr auto bInstantiateAISystemOnClient = 0x50; // bool
	}

	namespace n_UUW-ListWidget_KillMessage_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Anim_Down = 0x268; // UWidgetAnimation*
		constexpr auto CanvasPanel_Main = 0x270; // UCanvasPanel*
		constexpr auto Img_Back = 0x278; // UImage*
		constexpr auto Img_BroadType = 0x280; // UImage*
		constexpr auto Img_DamegeType = 0x288; // UImage*
		constexpr auto Img_Weapon = 0x290; // UImage*
		constexpr auto ScaleBox_Weapon = 0x298; // UScaleBox*
		constexpr auto SizeBox_BroadType = 0x2a0; // USizeBox*
		constexpr auto SizeBox_DamageType = 0x2a8; // USizeBox*
		constexpr auto SizeBox_HeadShot = 0x2b0; // USizeBox*
		constexpr auto T_Context = 0x2b8; // UTextBlock*
		constexpr auto UW-DiedInfoWidget = 0x2c0; // UUW-ListWidget_KillMessage_Item_C*
		constexpr auto UW-KillerInfoWidget = 0x2c8; // UUW-ListWidget_KillMessage_Item_C*
		constexpr auto BroadcastDamageType = 0x2d0; // TMap<EBroadCastKillMessageType, UPaperSprite*>
		constexpr auto MyTeamColor = 0x320; // FSlateColor
		constexpr auto MyTeamKnockOutColor = 0x348; // FSlateColor
		constexpr auto EnermyTeamColor = 0x370; // FSlateColor
		constexpr auto EnermyTeamKnockOutColor = 0x398; // FSlateColor
		constexpr auto DefaultColor = 0x3c0; // FSlateColor
		constexpr auto DefaultKnockColor = 0x3e8; // FSlateColor
		constexpr auto ResuscatedColor = 0x410; // FSlateColor
		constexpr auto CurrentInfoColor = 0x438; // FSlateColor
	}

	namespace n_UParticleModuleLocationDirect {
		constexpr auto Location = 0x30; // FRawDistributionVector
		constexpr auto LocationOffset = 0x78; // FRawDistributionVector
		constexpr auto ScaleFactor = 0xc0; // FRawDistributionVector
		constexpr auto Direction = 0x108; // FRawDistributionVector
	}

	namespace n_UGamePlayWidget_C {
		constexpr auto UberGraphFrame = 0x298; // FPointerToUberGraphFrame
		constexpr auto AmmoEffect = 0x2a0; // USlotItemWidget_C*
		constexpr auto AR = 0x2a8; // USlotItemWidget_C*
		constexpr auto AutoLadder = 0x2b0; // USlotItemWidget_C*
		constexpr auto autoReload = 0x2b8; // USlotItemWidget_C*
		constexpr auto AutoUseMedicalLv1 = 0x2c0; // USlotItemWidget_C*
		constexpr auto AutoUseMedicalLv2 = 0x2c8; // USlotItemWidget_C*
		constexpr auto AutoUseMedicalLv3 = 0x2d0; // USlotItemWidget_C*
		constexpr auto BlueBoostEffect = 0x2d8; // USlotItemWidget_C*
		constexpr auto CrossHair = 0x2e0; // USlotItemWidget_C*
		constexpr auto CustsomUseItem = 0x2e8; // USubTitleSlotWidget_C*
		constexpr auto DMR = 0x2f0; // USlotItemWidget_C*
		constexpr auto GreenBoostEffect = 0x2f8; // USlotItemWidget_C*
		constexpr auto ImmediateAttachment = 0x300; // USlotItemWidget_C*
		constexpr auto InheritAttachment = 0x308; // USlotItemWidget_C*
		constexpr auto inventory = 0x310; // USubTitleSlotWidget_C*
		constexpr auto InventoryOrder = 0x318; // USlotItemWidget_C*
		constexpr auto InventoryScrollSpeed = 0x320; // USlotItemWidget_C*
		constexpr auto MedicalLv1Effect = 0x328; // USlotItemWidget_C*
		constexpr auto MedicalLv2Effect = 0x330; // USlotItemWidget_C*
		constexpr auto MedicalLv3Effect = 0x338; // USlotItemWidget_C*
		constexpr auto NetworkDebug = 0x340; // USlotItemWidget_C*
		constexpr auto Pistol = 0x348; // USlotItemWidget_C*
		constexpr auto RedBoostEffect = 0x350; // USlotItemWidget_C*
		constexpr auto ScrollBox_55 = 0x358; // UScrollBox*
		constexpr auto SearchExpertWeaponMaterialItem = 0x360; // USlotItemWidget_C*
		constexpr auto SearchMaterialItem = 0x368; // USlotItemWidget_C*
		constexpr auto ShowDamageLog = 0x370; // USlotItemWidget_C*
		constexpr auto ShowGuideWidget = 0x378; // USlotItemWidget_C*
		constexpr auto ShowPerkSlot = 0x380; // USlotItemWidget_C*
		constexpr auto ShowSmartPing = 0x388; // USlotItemWidget_C*
		constexpr auto ShowSmartPingLightPole = 0x390; // USlotItemWidget_C*
		constexpr auto ShowSmartPingSupplyBox = 0x398; // USlotItemWidget_C*
		constexpr auto ShowUseaableItemEffect = 0x3a0; // USlotItemWidget_C*
		constexpr auto SMG = 0x3a8; // USlotItemWidget_C*
		constexpr auto SR = 0x3b0; // USlotItemWidget_C*
		constexpr auto Tutorial = 0x3b8; // USlotItemWidget_C*
		constexpr auto Tutorial_RePlay = 0x3c0; // USlotItemWidget_C*
		constexpr auto UseItem1 = 0x3c8; // USlotItemWidget_C*
		constexpr auto UseItem2 = 0x3d0; // USlotItemWidget_C*
		constexpr auto UseItem3 = 0x3d8; // USlotItemWidget_C*
		constexpr auto UseItem4 = 0x3e0; // USlotItemWidget_C*
		constexpr auto UseItem5 = 0x3e8; // USlotItemWidget_C*
		constexpr auto UseItem6 = 0x3f0; // USlotItemWidget_C*
		constexpr auto UseItem7 = 0x3f8; // USlotItemWidget_C*
		constexpr auto UseItem8 = 0x400; // USlotItemWidget_C*
		constexpr auto VerticalBox_154 = 0x408; // UVerticalBox*
		constexpr auto 40 = 0x410; // USubTitleSlotWidget_C*
		constexpr auto ß± = 0x418; // USubTitleSlotWidget_C*
		constexpr auto D; = 0x420; // USubTitleSlotWidget_C*
		constexpr auto ScrollBarTimer = 0x428; // FTimerHandle
	}

	namespace n_UOnlinePIESettings {
		constexpr auto bOnlinePIEEnabled = 0x38; // bool
		constexpr auto Logins = 0x40; // TArray<FPIELoginSettingsInternal>
	}

	namespace n_UUW-RoutePingWidget_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Canvas = 0x250; // UCanvasPanel*
		constexpr auto OnMarkerClicked = 0x258; // FMulticastInlineDelegate
		constexpr auto PlayerState = 0x268; // ABravoHotelPlayerState*
		constexpr auto PointsArray = 0x270; // TArray<FVector2D>
		constexpr auto StartPosition = 0x280; // FVector2D
		constexpr auto PointWidgets = 0x288; // TArray<UUW-RoutePingWidget_Point_C*>
		constexpr auto LineWidgets = 0x298; // TArray<UUW-RoutePingWidget_Line_C*>
		constexpr auto UW-MapCompRef = 0x2a8; // UUW-MapComp_C*
		constexpr auto IsDrawing = 0x2b0; // bool
		constexpr auto GuideLineWidgetRef = 0x2b8; // UUW-RoutePingWidget_Line_C*
		constexpr auto GuideLinePos = 0x2c0; // FVector2D
		constexpr auto IsUpdate = 0x2c8; // bool
	}

	namespace n_UVerticalBoxSlot {
		constexpr auto Size = 0x38; // FSlateChildSize
		constexpr auto Padding = 0x40; // FMargin
		constexpr auto HorizontalAlignment = 0x58; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x59; // EVerticalAlignment
	}

	namespace n_UBravoHotelAppAudioStateManager {
		constexpr auto StateConditionMap = 0x28; // TMap<EAppAudioState, FString>
	}

	namespace n_ULightmassPrimitiveSettingsObject {
		constexpr auto LightmassSettings = 0x28; // FLightmassPrimitiveSettings
	}

	namespace n_UNiagaraPreviewAxis_InterpParamLinearColor {
		constexpr auto Min = 0x38; // FLinearColor
		constexpr auto MAX = 0x48; // FLinearColor
	}

	namespace n_UMaterialExpressionLandscapeLayerWeight {
		constexpr auto Base = 0x40; // FExpressionInput
		constexpr auto Layer = 0x54; // FExpressionInput
		constexpr auto ParameterName = 0x68; // FName
		constexpr auto PreviewWeight = 0x70; // float
		constexpr auto ConstBase = 0x74; // FVector
		constexpr auto ExpressionGUID = 0x80; // FGuid
	}

	namespace n_APhysicsVolume {
		constexpr auto TerminalVelocity = 0x350; // float
		constexpr auto Priority = 0x354; // int32_t
		constexpr auto FluidFriction = 0x358; // float
		constexpr auto bWaterVolume = 0x35c; // char : 1
		constexpr auto bPhysicsOnContact = 0x35c; // char : 1
	}

	namespace n_UFontImportOptions {
		constexpr auto Data = 0x28; // FFontImportOptionsData
	}

	namespace n_UAssetMappingTable {
		constexpr auto MappedAssets = 0x28; // TArray<FAssetMapping>
	}

	namespace n_ACoherentUIGTInputActor {
		constexpr auto OnCoherentUIGTInputActorMouseButtonDown = 0x318; // FMulticastInlineDelegate
		constexpr auto OnCoherentUIGTInputActorMouseButtonUp = 0x328; // FMulticastInlineDelegate
		constexpr auto OnCoherentUIGTInputActorKeyDown = 0x338; // FMulticastInlineDelegate
		constexpr auto OnCoherentUIGTInputActorKeyUp = 0x348; // FMulticastInlineDelegate
	}

	namespace n_USlider {
		constexpr auto Value = 0x108; // float
		constexpr auto ValueDelegate = 0x10c; // FDelegate
		constexpr auto MinValue = 0x11c; // float
		constexpr auto MaxValue = 0x120; // float
		constexpr auto WidgetStyle = 0x128; // FSliderStyle
		constexpr auto Orientation = 0x468; // EOrientation
		constexpr auto SliderBarColor = 0x46c; // FLinearColor
		constexpr auto SliderHandleColor = 0x47c; // FLinearColor
		constexpr auto IndentHandle = 0x48c; // bool
		constexpr auto Locked = 0x48d; // bool
		constexpr auto MouseUsesStep = 0x48e; // bool
		constexpr auto RequiresControllerLock = 0x48f; // bool
		constexpr auto StepSize = 0x490; // float
		constexpr auto IsFocusable = 0x494; // bool
		constexpr auto OnMouseCaptureBegin = 0x498; // FMulticastInlineDelegate
		constexpr auto OnMouseCaptureEnd = 0x4a8; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureBegin = 0x4b8; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureEnd = 0x4c8; // FMulticastInlineDelegate
		constexpr auto OnValueChanged = 0x4d8; // FMulticastInlineDelegate
	}

	namespace n_USubmixEffectFilterPreset {
		constexpr auto Settings = 0x74; // FSubmixEffectFilterSettings
	}

	namespace n_UPhysicsConstraintTemplate {
		constexpr auto DefaultInstance = 0x28; // FConstraintInstance
		constexpr auto ProfileHandles = 0x1e0; // TArray<FPhysicsConstraintProfileHandle>
		constexpr auto DefaultProfile = 0x1f0; // FConstraintProfileProperties
	}

	namespace n_UDLSSSettings {
		constexpr auto bEnableDLSSD3D12 = 0x28; // bool
		constexpr auto bEnableDLSSD3D11 = 0x29; // bool
		constexpr auto bEnableDLSSVulkan = 0x2a; // bool
		constexpr auto bEnableDLSSInEditorViewports = 0x2b; // bool
		constexpr auto bEnableScreenpercentageManipulationInDLSSEditorViewports = 0x2c; // bool
		constexpr auto bEnableDLSSInPlayInEditorViewports = 0x2d; // bool
		constexpr auto bShowDLSSSDebugOnScreenMessages = 0x2e; // bool
		constexpr auto GenericDLSSBinaryPath = 0x30; // FString
		constexpr auto bGenericDLSSBinaryExists = 0x40; // bool
		constexpr auto NVIDIANGXApplicationId = 0x44; // uint32_t
		constexpr auto CustomDLSSBinaryPath = 0x48; // FString
		constexpr auto bCustomDLSSBinaryExists = 0x58; // bool
	}

	namespace n_UParticleModuleVelocityOverLifetime {
		constexpr auto VelOverLife = 0x38; // FRawDistributionVector
		constexpr auto Absolute = 0x80; // char : 1
	}

	namespace n_UAkGameObject {
		constexpr auto AkAudioEvent = 0x230; // UAkAudioEvent*
		constexpr auto EventName = 0x238; // FString
		constexpr auto bAutoRegisterWithWwise = 0x248; // bool
	}

	namespace n_UStateMachineComponent {
		constexpr auto FSM_ExitArguments = 0xb8; // FSM_ExitEvent
		constexpr auto FSM_BeginArguments = 0xc4; // FSM_BeginEvent
		constexpr auto FSM_UpdateArguments = 0xd0; // FSM_UpdateEvent
		constexpr auto IsOverriden = 0xe0; // bool
		constexpr auto IsFullyInitialized = 0xe1; // bool
		constexpr auto StateID = 0xe2; // char
		constexpr auto PreviousStateID = 0xe3; // char
		constexpr auto StateTime = 0xe4; // float
		constexpr auto STATE_Null = 0xe8; // FSM_State
		constexpr auto State = 0x128; // TMap<char, FSM_State>
		constexpr auto InBegin = 0x178; // FDelegate
		constexpr auto InUpdate = 0x188; // FDelegate
		constexpr auto InExit = 0x198; // FDelegate
		constexpr auto StartupState = 0x1a8; // FName
		constexpr auto States = 0x1b0; // TArray<FName>
		constexpr auto LINKS = 0x1c0; // TMap<FName, FSM_Link>
		constexpr auto UseEnumFromCPP = 0x210; // bool
		constexpr auto CPP_EnumName = 0x218; // FString
		constexpr auto K2_Enumerator = 0x228; // UEnum*
		constexpr auto ReplicationMode = 0x230; // ELifetimeCondition
		constexpr auto BlueprintAutoFlowFSM = 0x231; // bool
		constexpr auto BlueprintAutoFlowTransitions = 0x232; // bool
		constexpr auto AlwaysTickFSM = 0x233; // bool
		constexpr auto ReplicateStateID = 0x234; // bool
		constexpr auto ReplicatePreviousStateID = 0x235; // bool
		constexpr auto ReplicateStateTime = 0x236; // bool
		constexpr auto Debug = 0x237; // bool
		constexpr auto OnInitialized = 0x238; // FMulticastInlineDelegate
		constexpr auto OnBegin = 0x248; // FMulticastInlineDelegate
		constexpr auto OnUpdate = 0x258; // FMulticastInlineDelegate
		constexpr auto OnExit = 0x268; // FMulticastInlineDelegate
	}

	namespace n_UAudioComponent {
		constexpr auto Sound = 0x230; // USoundBase*
		constexpr auto InstanceParameters = 0x238; // TArray<FAudioComponentParam>
		constexpr auto SoundClassOverride = 0x248; // USoundClass*
		constexpr auto bAutoDestroy = 0x250; // char : 1
		constexpr auto bStopWhenOwnerDestroyed = 0x250; // char : 1
		constexpr auto bShouldRemainActiveIfDropped = 0x250; // char : 1
		constexpr auto bAllowSpatialization = 0x250; // char : 1
		constexpr auto bOverrideAttenuation = 0x250; // char : 1
		constexpr auto bOverrideSubtitlePriority = 0x250; // char : 1
		constexpr auto bIsUISound = 0x250; // char : 1
		constexpr auto bEnableLowPassFilter = 0x250; // char : 1
		constexpr auto bOverridePriority = 0x251; // char : 1
		constexpr auto bSuppressSubtitles = 0x251; // char : 1
		constexpr auto bAutoManageAttachment = 0x252; // char : 1
		constexpr auto AudioComponentUserID = 0x258; // FName
		constexpr auto PitchModulationMin = 0x260; // float
		constexpr auto PitchModulationMax = 0x264; // float
		constexpr auto VolumeModulationMin = 0x268; // float
		constexpr auto VolumeModulationMax = 0x26c; // float
		constexpr auto VolumeMultiplier = 0x270; // float
		constexpr auto EnvelopeFollowerAttackTime = 0x274; // int32_t
		constexpr auto EnvelopeFollowerReleaseTime = 0x278; // int32_t
		constexpr auto Priority = 0x27c; // float
		constexpr auto SubtitlePriority = 0x280; // float
		constexpr auto SourceEffectChain = 0x288; // USoundEffectSourcePresetChain*
		constexpr auto PitchMultiplier = 0x290; // float
		constexpr auto LowPassFilterFrequency = 0x294; // float
		constexpr auto AttenuationSettings = 0x2a0; // USoundAttenuation*
		constexpr auto AttenuationOverrides = 0x2a8; // FSoundAttenuationSettings
		constexpr auto ConcurrencySettings = 0x648; // USoundConcurrency*
		constexpr auto ConcurrencySet = 0x650; // TSet<USoundConcurrency*>
		constexpr auto AutoAttachLocationRule = 0x6ac; // EAttachmentRule
		constexpr auto AutoAttachRotationRule = 0x6ad; // EAttachmentRule
		constexpr auto AutoAttachScaleRule = 0x6ae; // EAttachmentRule
		constexpr auto OnAudioFinished = 0x6b0; // FMulticastInlineDelegate
		constexpr auto OnAudioPlaybackPercent = 0x6d8; // FMulticastInlineDelegate
		constexpr auto OnAudioSingleEnvelopeValue = 0x700; // FMulticastInlineDelegate
		constexpr auto OnAudioMultiEnvelopeValue = 0x728; // FMulticastInlineDelegate
		constexpr auto Modulation = 0x750; // FSoundModulation
		constexpr auto OnQueueSubtitles = 0x760; // FDelegate
		constexpr auto AutoAttachParent = 0x770; // TWeakObjectPtr<USceneComponent>
		constexpr auto AutoAttachSocketName = 0x778; // FName
	}

	namespace n_UCullingField {
		constexpr auto Culling = 0xb0; // UFieldNodeBase*
		constexpr auto Field = 0xb8; // UFieldNodeBase*
		constexpr auto Operation = 0xc0; // EFieldCullingOperationType
	}

	namespace n_UUW-ListWidget_ItemBase_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Anim_Remove = 0x250; // UWidgetAnimation*
		constexpr auto Timer_StartRemove = 0x258; // FTimerHandle
	}

	namespace n_ULevelSequencePlayer {
		constexpr auto OnCameraCut = 0x890; // FMulticastInlineDelegate
	}

	namespace n_UUW-GameBuffSlot_BoostCover_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto UW-GameBuffSlot_Boost = 0x250; // UUW-GameBuffSlot_Boost_C*
		constexpr auto HoverWidget = 0x258; // UUW-Inventory_ItemSlotHover_C*
	}

	namespace n_ULightmassPortalComponent {
		constexpr auto PreviewBox = 0x230; // UBoxComponent*
	}

	namespace n_UUdpMessagingSettings {
		constexpr auto EnableTransport = 0x28; // bool
		constexpr auto bAutoRepair = 0x29; // bool
		constexpr auto bStopServiceWhenAppDeactivates = 0x2a; // bool
		constexpr auto UnicastEndpoint = 0x30; // FString
		constexpr auto MulticastEndpoint = 0x40; // FString
		constexpr auto MessageFormat = 0x50; // EUdpMessageFormat
		constexpr auto MulticastTimeToLive = 0x51; // char
		constexpr auto StaticEndpoints = 0x58; // TArray<FString>
		constexpr auto EnableTunnel = 0x68; // bool
		constexpr auto TunnelUnicastEndpoint = 0x70; // FString
		constexpr auto TunnelMulticastEndpoint = 0x80; // FString
		constexpr auto RemoteTunnelEndpoints = 0x90; // TArray<FString>
	}

	namespace n_ABravoHotelProjectileGrenadeFlashbang {
		constexpr auto AngleCurve = 0x678; // UCurveFloat*
		constexpr auto TimeCurve = 0x680; // UCurveFloat*
		constexpr auto PostProcessFlashBangClass = 0x688; // UCameraPostProcessPreset*
		constexpr auto PostProcessDurationTime = 0x690; // float
		constexpr auto PostProcessRateTime = 0x694; // float
		constexpr auto BlindCharacters = 0x698; // TArray<FBlindCharacter>
		constexpr auto TimeHandler_ActiveFlashBang = 0x6a8; // FTimerHandle
		constexpr auto BoobyTrapEffect = 0x6c0; // UParticleSystemComponent*
		constexpr auto BoobyTrapTriggerEffect = 0x6c8; // UParticleSystem*
		constexpr auto BoobyTrapDestoryEffect = 0x6d0; // UParticleSystem*
		constexpr auto BoobyTrapLoopStartEvent = 0x6d8; // UAkAudioEvent*
		constexpr auto BoobyTrapLoopStopEvent = 0x6e0; // UAkAudioEvent*
		constexpr auto BoobyTrapTriggerEvent = 0x6e8; // UAkAudioEvent*
		constexpr auto BoobyTrapLoopSoundHandle = 0x6f0; // FAudioPlayingHandle
	}

	namespace n_UNiagaraDataInterfaceSpline {
		constexpr auto Source = 0x30; // AActor*
	}

	namespace n_UBuffControlState {
		constexpr auto ActiveBuffs = 0x70; // TArray<uint16_t>
		constexpr auto BravoHotelCharacter = 0x80; // ABravoHotelCharacter*
		constexpr auto BravoHotelAbilityComponent = 0x88; // UBravoHotelAbilityComponent*
	}

	namespace n_UUW-Inventory_Weapon_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Image = 0x250; // UImage*
		constexpr auto Image_1 = 0x258; // UImage*
		constexpr auto Image_2 = 0x260; // UImage*
		constexpr auto Image_3 = 0x268; // UImage*
		constexpr auto Image_4 = 0x270; // UImage*
		constexpr auto Image_5 = 0x278; // UImage*
		constexpr auto Image_6 = 0x280; // UImage*
		constexpr auto Image_7 = 0x288; // UImage*
		constexpr auto Image_773 = 0x290; // UImage*
		constexpr auto WeaponSlot01 = 0x298; // UUW-Inventory_WeaponSlot_C*
		constexpr auto WeaponSlot02 = 0x2a0; // UUW-Inventory_WeaponSlot_C*
		constexpr auto WeaponSlot03 = 0x2a8; // UUW-Inventory_WeaponSlot_C*
		constexpr auto WeaponSlot04 = 0x2b0; // UUW-Inventory_WeaponSlot_C*
		constexpr auto WeaponSlot05 = 0x2b8; // UUW-Inventory_WeaponSlot_C*
		constexpr auto WeaponSlots = 0x2c0; // TMap<int32_t, UUW-Inventory_WeaponSlot_C*>
	}

	namespace n_UAISenseConfig_Damage {
		constexpr auto Implementation = 0x48; // UAISense_Damage*
	}

	namespace n_UReplicationGraphNode {
		constexpr auto AllChildNodes = 0x28; // TArray<UReplicationGraphNode*>
	}

	namespace n_UNiagaraEmitter {
		constexpr auto bLocalSpace = 0x28; // bool
		constexpr auto bDeterminism = 0x29; // bool
		constexpr auto RandomSeed = 0x2c; // int32_t
		constexpr auto AllocationMode = 0x30; // EParticleAllocationMode
		constexpr auto PreAllocationCount = 0x34; // int32_t
		constexpr auto UpdateScriptProps = 0x38; // FNiagaraEmitterScriptProperties
		constexpr auto SpawnScriptProps = 0x60; // FNiagaraEmitterScriptProperties
		constexpr auto EmitterSpawnScriptProps = 0x88; // FNiagaraEmitterScriptProperties
		constexpr auto EmitterUpdateScriptProps = 0xb0; // FNiagaraEmitterScriptProperties
		constexpr auto SimTarget = 0xd8; // ENiagaraSimTarget
		constexpr auto FixedBounds = 0xdc; // FBox
		constexpr auto MinDetailLevel = 0xf8; // int32_t
		constexpr auto MaxDetailLevel = 0xfc; // int32_t
		constexpr auto GlobalSpawnCountScaleOverrides = 0x100; // FNiagaraDetailsLevelScaleOverrides
		constexpr auto Platforms = 0x118; // FNiagaraPlatformSet
		constexpr auto ScalabilityOverrides = 0x138; // FNiagaraEmitterScalabilityOverrides
		constexpr auto bInterpolatedSpawning = 0x148; // char : 1
		constexpr auto bFixedBounds = 0x148; // char : 1
		constexpr auto bUseMinDetailLevel = 0x148; // char : 1
		constexpr auto bUseMaxDetailLevel = 0x148; // char : 1
		constexpr auto bOverrideGlobalSpawnCountScale = 0x148; // char : 1
		constexpr auto bRequiresPersistentIDs = 0x148; // char : 1
		constexpr auto MaxDeltaTimePerTick = 0x14c; // float
		constexpr auto DefaultShaderStageIndex = 0x150; // uint32_t
		constexpr auto MaxUpdateIterations = 0x154; // uint32_t
		constexpr auto SpawnStages = 0x158; // TSet<uint32_t>
		constexpr auto bSimulationStagesEnabled = 0x1a8; // char : 1
		constexpr auto bDeprecatedShaderStagesEnabled = 0x1a8; // char : 1
		constexpr auto bLimitDeltaTime = 0x1a8; // char : 1
		constexpr auto UniqueEmitterName = 0x1b0; // FString
		constexpr auto RendererProperties = 0x1c0; // TArray<UNiagaraRendererProperties*>
		constexpr auto EventHandlerScriptProps = 0x1d0; // TArray<FNiagaraEventScriptProperties>
		constexpr auto SimulationStages = 0x1e0; // TArray<UNiagaraSimulationStageBase*>
		constexpr auto GPUComputeScript = 0x1f0; // UNiagaraScript*
		constexpr auto SharedEventGeneratorIds = 0x1f8; // TArray<FName>
	}

	namespace n_UWB_ClassicSettingsText_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto TextField = 0x250; // UTextBlock*
		constexpr auto Text = 0x258; // FText
	}

	namespace n_UParticleModuleKillHeight {
		constexpr auto Height = 0x30; // FRawDistributionFloat
		constexpr auto bAbsolute = 0x60; // char : 1
		constexpr auto bFloor = 0x60; // char : 1
		constexpr auto bApplyPSysScale = 0x60; // char : 1
	}

	namespace n_USynthComponent {
		constexpr auto bAutoDestroy = 0x230; // char : 1
		constexpr auto bStopWhenOwnerDestroyed = 0x230; // char : 1
		constexpr auto bAllowSpatialization = 0x230; // char : 1
		constexpr auto bOverrideAttenuation = 0x230; // char : 1
		constexpr auto bOutputToBusOnly = 0x234; // char : 1
		constexpr auto AttenuationSettings = 0x238; // USoundAttenuation*
		constexpr auto AttenuationOverrides = 0x240; // FSoundAttenuationSettings
		constexpr auto ConcurrencySettings = 0x5e0; // USoundConcurrency*
		constexpr auto ConcurrencySet = 0x5e8; // TSet<USoundConcurrency*>
		constexpr auto SoundClass = 0x638; // USoundClass*
		constexpr auto SourceEffectChain = 0x640; // USoundEffectSourcePresetChain*
		constexpr auto SoundSubmix = 0x648; // USoundSubmixBase*
		constexpr auto SoundSubmixSends = 0x650; // TArray<FSoundSubmixSendInfo>
		constexpr auto BusSends = 0x660; // TArray<FSoundSourceBusSendInfo>
		constexpr auto Modulation = 0x670; // FSoundModulation
		constexpr auto PreEffectBusSends = 0x680; // TArray<FSoundSourceBusSendInfo>
		constexpr auto bIsUISound = 0x690; // char : 1
		constexpr auto bIsPreviewSound = 0x690; // char : 1
		constexpr auto EnvelopeFollowerAttackTime = 0x694; // int32_t
		constexpr auto EnvelopeFollowerReleaseTime = 0x698; // int32_t
		constexpr auto OnAudioEnvelopeValue = 0x6a0; // FMulticastInlineDelegate
		constexpr auto Synth = 0x6d0; // USynthSound*
		constexpr auto AudioComponent = 0x6d8; // UAudioComponent*
	}

	namespace n_ABravoHotelAircraftBomber {
		constexpr auto MovementComponent = 0x318; // UInterpToMovementComponent*
		constexpr auto LoopCount = 0x320; // int32_t
	}

	namespace n_ABravoHotelBootyBoxActor {
		constexpr auto RarityParticle = 0x398; // UParticleSystem*
		constexpr auto RarityParticleComponent = 0x3a0; // UParticleSystemComponent*
		constexpr auto HighestRarityOfCurrentItems = 0x3a8; // EItemRarity
		constexpr auto TimerHandle_Deactivate = 0x3b8; // FTimerHandle
	}

	namespace n_UUW-BlackMarket_SubTabCell_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Button_Tab = 0x250; // UButton*
		constexpr auto Image_Check = 0x258; // UImage*
		constexpr auto TextBlock_TabName = 0x260; // UTextBlock*
		constexpr auto BlackMarket_SubTab = 0x268; // UUW-BlackMarket_SubTab_C*
		constexpr auto TabType = 0x270; // EBlackmarketTabType
		constexpr auto TabName = 0x278; // FText
		constexpr auto TabIndex = 0x290; // FName
		constexpr auto Selected = 0x298; // bool
	}

	namespace n_AController {
		constexpr auto bAttachToPawn = 0x32c; // char : 1
		constexpr auto TransformComponent = 0x350; // USceneComponent*
		constexpr auto StateName = 0x35c; // FName
		constexpr auto Character = 0x368; // ACharacter*
		constexpr auto Pawn = 0x378; // APawn*
		constexpr auto PlayerState = 0x390; // APlayerState*
		constexpr auto OnInstigatedAnyDamage = 0x3a0; // FMulticastInlineDelegate
		constexpr auto ControlRotation = 0x3b0; // FRotator
	}

	namespace n_UMovementComponent {
		constexpr auto UpdatedComponent = 0xb0; // USceneComponent*
		constexpr auto UpdatedPrimitive = 0xb8; // UPrimitiveComponent*
		constexpr auto Velocity = 0xc4; // FVector
		constexpr auto PlaneConstraintNormal = 0xd0; // FVector
		constexpr auto PlaneConstraintOrigin = 0xdc; // FVector
		constexpr auto bUpdateOnlyIfRendered = 0xe8; // char : 1
		constexpr auto bAutoUpdateTickRegistration = 0xe8; // char : 1
		constexpr auto bTickBeforeOwner = 0xe8; // char : 1
		constexpr auto bAutoRegisterUpdatedComponent = 0xe8; // char : 1
		constexpr auto bConstrainToPlane = 0xe8; // char : 1
		constexpr auto bSnapToPlaneAtStart = 0xe8; // char : 1
		constexpr auto bAutoRegisterPhysicsVolumeUpdates = 0xe8; // char : 1
		constexpr auto bComponentShouldUpdatePhysicsVolume = 0xe8; // char : 1
		constexpr auto PlaneConstraintAxisSetting = 0xeb; // EPlaneConstraintAxisSetting
	}

	namespace n_UPawnActionsComponent {
		constexpr auto ControlledPawn = 0xb0; // APawn*
		constexpr auto ActionStacks = 0xb8; // TArray<FPawnActionStack>
		constexpr auto ActionEvents = 0xc8; // TArray<FPawnActionEvent>
		constexpr auto CurrentAction = 0xd8; // UPawnAction*
	}

	namespace n_UUW-Lobby_WeaponInfo_OptionList_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto UW-Lobby_WeaponInfo_Option_Slot = 0x250; // UUW-Lobby_WeaponInfo_Option_Slot_C*
		constexpr auto UW-Lobby_WeaponInfo_Option_Slot_2 = 0x258; // UUW-Lobby_WeaponInfo_Option_Slot_C*
		constexpr auto UW-Lobby_WeaponInfo_Option_Slot_3 = 0x260; // UUW-Lobby_WeaponInfo_Option_Slot_C*
		constexpr auto UW-Lobby_WeaponInfo_Option_Slot_4 = 0x268; // UUW-Lobby_WeaponInfo_Option_Slot_C*
		constexpr auto VerticalBox_OptionList = 0x270; // UVerticalBox*
	}

	namespace n_ULuminRuntimeSettings {
		constexpr auto PackageName = 0x28; // FString
		constexpr auto ApplicationDisplayName = 0x38; // FString
		constexpr auto FrameTimingHint = 0x48; // ELuminFrameTimingHint
		constexpr auto bProtectedContent = 0x49; // bool
		constexpr auto bManualCallToAppReady = 0x4a; // bool
		constexpr auto bUseMobileRendering = 0x4b; // bool
		constexpr auto bUseVulkan = 0x4c; // bool
		constexpr auto Certificate = 0x50; // FFilePath
		constexpr auto IconModelPath = 0x60; // FDirectoryPath
		constexpr auto IconPortalPath = 0x70; // FDirectoryPath
		constexpr auto LocalizedIconInfos = 0x80; // FLocalizedIconInfos
		constexpr auto VersionCode = 0x90; // int32_t
		constexpr auto MinimumAPILevel = 0x94; // int32_t
		constexpr auto AppPrivileges = 0x98; // TArray<ELuminPrivilege>
		constexpr auto ExtraComponentSubElements = 0xa8; // TArray<FLuminComponentSubElement>
		constexpr auto ExtraComponentElements = 0xb8; // TArray<FLuminComponentElement>
		constexpr auto SpatializationPlugin = 0xc8; // FString
		constexpr auto ReverbPlugin = 0xd8; // FString
		constexpr auto OcclusionPlugin = 0xe8; // FString
		constexpr auto SoundCueCookQualityIndex = 0xf8; // int32_t
		constexpr auto bRemoveDebugInfo = 0xfc; // bool
		constexpr auto VulkanValidationLayerLibs = 0x100; // FDirectoryPath
		constexpr auto bFrameVignette = 0x110; // bool
		constexpr auto LocalizedAppNames = 0x118; // TArray<FLocalizedAppName>
	}

	namespace n_UAnimSet {
		constexpr auto bAnimRotationOnly = 0x28; // char : 1
		constexpr auto TrackBoneNames = 0x30; // TArray<FName>
		constexpr auto LinkupCache = 0x40; // TArray<FAnimSetMeshLinkup>
		constexpr auto BoneUseAnimTranslation = 0x50; // TArray<char>
		constexpr auto ForceUseMeshTranslation = 0x60; // TArray<char>
		constexpr auto UseTranslationBoneNames = 0x70; // TArray<FName>
		constexpr auto ForceMeshTranslationBoneNames = 0x80; // TArray<FName>
		constexpr auto PreviewSkelMeshName = 0x90; // FName
		constexpr auto BestRatioSkelMeshName = 0x98; // FName
	}

	namespace n_UMovieSceneAkAudioRTPCSection {
		constexpr auto RTPC = 0xe0; // UAkRtpc*
		constexpr auto Name = 0xe8; // FString
		constexpr auto FloatCurve = 0xf8; // FRichCurve
		constexpr auto FloatChannelSerializationHelper = 0x178; // FMovieSceneFloatChannelSerializationHelper
		constexpr auto RTPCChannel = 0x1a8; // FMovieSceneFloatChannel
	}

	namespace n_ABravoHotelEquippableActor {
		constexpr auto ReplicatedComponent = 0x318; // UEquippableComponent*
		constexpr auto StaticMesh = 0x320; // UStaticMeshComponent*
		constexpr auto SkelMesh = 0x328; // USkeletalMeshComponent*
		constexpr auto ItemDetailInfo = 0x330; // FInventoryItemDetailInfo
		constexpr auto EquipTime_L = 0x7c0; // float
		constexpr auto EquipTime_R = 0x7c4; // float
		constexpr auto UnEquipTime = 0x7c8; // float
		constexpr auto EquipAnimationPlayRate_L = 0x7cc; // float
		constexpr auto EquipAnimationPlayRate_R = 0x7d0; // float
		constexpr auto UnequipAnimationPlayRate = 0x7d4; // float
		constexpr auto bPendingEquip = 0x7d8; // char : 1
		constexpr auto bPendingUnEquip = 0x7d8; // char : 1
		constexpr auto OverrideAttachSocketName = 0x800; // FName
		constexpr auto OverrideAttachSocketName_Backpack = 0x808; // FName
		constexpr auto OverrideEquipAnimMontage_StandSlot = 0x810; // FAnimSlot
		constexpr auto OverrideEquipAnimMontage_ProneSlot = 0x820; // FAnimSlot
		constexpr auto OverrideUnequipAnimMontage_StandSlot = 0x830; // FAnimSlot
		constexpr auto OverrideUnequipAnimMontage_ProneSlot = 0x840; // FAnimSlot
		constexpr auto bIsEquipped = 0x858; // char : 1
	}

	namespace n_UAnimClassData {
		constexpr auto GraphBlendOptions = 0x30; // TMap<FName, FAnimGraphBlendOptions>
		constexpr auto AnimBlueprintFunctionData = 0x80; // TArray<FAnimBlueprintFunctionData>
		constexpr auto LinkedAnimLayerNodeProperties = 0x90; // TArray<TFieldPath<FStructProperty>>
		constexpr auto AnimNotifies = 0xa0; // TArray<FAnimNotifyEvent>
		constexpr auto SyncGroupNames = 0xc0; // TArray<FName>
		constexpr auto DynamicResetNodeProperties = 0xe0; // TArray<TFieldPath<FStructProperty>>
		constexpr auto StateMachineNodeProperties = 0xf0; // TArray<TFieldPath<FStructProperty>>
		constexpr auto TargetSkeleton = 0x100; // USkeleton*
		constexpr auto AnimBlueprintFunctions = 0x108; // TArray<FAnimBlueprintFunction>
		constexpr auto EvaluateGraphExposedInputs = 0x128; // TArray<FExposedValueHandler>
		constexpr auto PreUpdateNodeProperties = 0x148; // TArray<TFieldPath<FStructProperty>>
		constexpr auto GraphNameAssetPlayers = 0x158; // TMap<FName, FGraphAssetPlayerInformation>
		constexpr auto OrderedSavedPoseIndicesMap = 0x1b8; // TMap<FName, FCachedPoseIndices>
		constexpr auto BakedStateMachines = 0x218; // TArray<FBakedAnimationStateMachine>
		constexpr auto LinkedAnimGraphNodeProperties = 0x238; // TArray<TFieldPath<FStructProperty>>
		constexpr auto AnimNodeProperties = 0x248; // TArray<TFieldPath<FStructProperty>>
		constexpr auto InitializationNodeProperties = 0x258; // TArray<TFieldPath<FStructProperty>>
	}

	namespace n_UMaterialExpressionLandscapeLayerBlend {
		constexpr auto Layers = 0x40; // TArray<FLayerBlendInput>
		constexpr auto ExpressionGUID = 0x50; // FGuid
	}

	namespace n_UParticleModuleLocationPrimitiveSphere_Seeded {
		constexpr auto RandomSeedInfo = 0xe0; // FParticleRandomSeedInfo
	}

	namespace n_UMovieSceneNiagaraParameterTrack {
		constexpr auto Parameter = 0x68; // FNiagaraVariable
	}

	namespace n_UEditableGameplayTagQueryExpression_AnyTagsMatch {
		constexpr auto Tags = 0x28; // FGameplayTagContainer
	}

	namespace n_USoundNodeDistanceCrossFade {
		constexpr auto CrossFadeInput = 0x48; // TArray<FDistanceDatum>
	}

	namespace n_UParticleModuleTypeDataBeam2 {
		constexpr auto BeamMethod = 0x30; // EBeam2Method
		constexpr auto TextureTile = 0x34; // int32_t
		constexpr auto TextureTileDistance = 0x38; // float
		constexpr auto Sheets = 0x3c; // int32_t
		constexpr auto MaxBeamCount = 0x40; // int32_t
		constexpr auto Speed = 0x44; // float
		constexpr auto InterpolationPoints = 0x48; // int32_t
		constexpr auto bAlwaysOn = 0x4c; // char : 1
		constexpr auto UpVectorStepSize = 0x50; // int32_t
		constexpr auto BranchParentName = 0x54; // FName
		constexpr auto Distance = 0x60; // FRawDistributionFloat
		constexpr auto TaperMethod = 0x90; // EBeamTaperMethod
		constexpr auto TaperFactor = 0x98; // FRawDistributionFloat
		constexpr auto TaperScale = 0xc8; // FRawDistributionFloat
		constexpr auto RenderGeometry = 0xf8; // char : 1
		constexpr auto RenderDirectLine = 0xf8; // char : 1
		constexpr auto RenderLines = 0xf8; // char : 1
		constexpr auto RenderTessellation = 0xf8; // char : 1
	}

	namespace n_UChat_DialogBox_C {
		constexpr auto Chat Scrollbox = 0x248; // UScrollBox*
		constexpr auto Group = 0x250; // FString
	}

	namespace n_AStaticMeshActor {
		constexpr auto StaticMeshComponent = 0x318; // UStaticMeshComponent*
		constexpr auto bStaticMeshReplicateMovement = 0x320; // bool
		constexpr auto NavigationGeometryGatheringMode = 0x321; // ENavDataGatheringMode
	}

	namespace n_UVectorField {
		constexpr auto Bounds = 0x28; // FBox
		constexpr auto Intensity = 0x44; // float
	}

	namespace n_UTextPropertyTestObject {
		constexpr auto DefaultedText = 0x28; // FText
		constexpr auto UndefaultedText = 0x40; // FText
		constexpr auto TransientText = 0x58; // FText
	}

	namespace n_USimplygonGeometryDataCaster {
		constexpr auto GeometryDataCasterSettings = 0x30; // FGeometryDataCasterSettings
	}

	namespace n_UVideoCaptureProtocol {
		constexpr auto bUseCompression = 0x68; // bool
		constexpr auto CompressionQuality = 0x6c; // float
	}

	namespace n_ADatasmithImportedSequencesActor {
		constexpr auto ImportedSequences = 0x318; // TArray<ULevelSequence*>
	}

	namespace n_UFoliageInstancedStaticMeshComponent {
		constexpr auto OnInstanceTakePointDamage = 0x710; // FMulticastInlineDelegate
		constexpr auto OnInstanceTakeRadialDamage = 0x720; // FMulticastInlineDelegate
		constexpr auto GenerationGuid = 0x730; // FGuid
	}

	namespace n_UAxisAngleGizmo {
		constexpr auto AxisSource = 0x48; // TScriptInterface<IGizmoAxisSource>
		constexpr auto AngleSource = 0x58; // TScriptInterface<IGizmoFloatParameterSource>
		constexpr auto HitTarget = 0x68; // TScriptInterface<IGizmoClickTarget>
		constexpr auto StateTarget = 0x78; // TScriptInterface<IGizmoStateTarget>
		constexpr auto bInInteraction = 0x88; // bool
		constexpr auto RotationOrigin = 0x8c; // FVector
		constexpr auto RotationAxis = 0x98; // FVector
		constexpr auto RotationPlaneX = 0xa4; // FVector
		constexpr auto RotationPlaneY = 0xb0; // FVector
		constexpr auto InteractionStartPoint = 0xbc; // FVector
		constexpr auto InteractionCurPoint = 0xc8; // FVector
		constexpr auto InteractionStartAngle = 0xd4; // float
		constexpr auto InteractionCurAngle = 0xd8; // float
	}

	namespace n_UUW-ListWidget_KillMessage_Item_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Anim_Hide = 0x250; // UWidgetAnimation*
		constexpr auto Anim_Down = 0x258; // UWidgetAnimation*
		constexpr auto HorizontalBox_Killer = 0x260; // UHorizontalBox*
		constexpr auto ScaleBox_KillerIcon = 0x268; // UScaleBox*
		constexpr auto T_ClassIcon = 0x270; // UImage*
		constexpr auto T_Level = 0x278; // UTextBlock*
		constexpr auto T_LV = 0x280; // UTextBlock*
		constexpr auto T_Name = 0x288; // UTextBlock*
		constexpr auto OnTimeOut = 0x290; // FMulticastInlineDelegate
		constexpr auto LocalPlayerState = 0x2a0; // ABravoHotelPlayerState*
	}

	namespace n_ACameraRig_Crane {
		constexpr auto CranePitch = 0x318; // float
		constexpr auto CraneYaw = 0x31c; // float
		constexpr auto CraneArmLength = 0x320; // float
		constexpr auto bLockMountPitch = 0x324; // bool
		constexpr auto bLockMountYaw = 0x325; // bool
		constexpr auto TransformComponent = 0x328; // USceneComponent*
		constexpr auto CraneYawControl = 0x330; // USceneComponent*
		constexpr auto CranePitchControl = 0x338; // USceneComponent*
		constexpr auto CraneCameraMount = 0x340; // USceneComponent*
	}

	namespace n_UGizmoBaseComponent {
		constexpr auto Color = 0x4b0; // FLinearColor
		constexpr auto HoverSizeMultiplier = 0x4c0; // float
		constexpr auto PixelHitDistanceThreshold = 0x4c4; // float
	}

	namespace n_UIntervalGizmo {
		constexpr auto StateTarget = 0x38; // UGizmoTransformChangeStateTarget*
		constexpr auto TransformProxy = 0x50; // UTransformProxy*
		constexpr auto ActiveComponents = 0x58; // TArray<UPrimitiveComponent*>
		constexpr auto ActiveGizmos = 0x68; // TArray<UInteractiveGizmo*>
		constexpr auto AxisYSource = 0x90; // UGizmoComponentAxisSource*
		constexpr auto AxisZSource = 0x98; // UGizmoComponentAxisSource*
	}

	namespace n_UChat_GameInstance_C {
		constexpr auto Players in Chat = 0x568; // TArray<AChat_System_C*>
		constexpr auto Chat Groups = 0x578; // TArray<FString>
	}

	namespace n_UStaticMeshSocket {
		constexpr auto SocketName = 0x28; // FName
		constexpr auto RelativeLocation = 0x30; // FVector
		constexpr auto RelativeRotation = 0x3c; // FRotator
		constexpr auto RelativeScale = 0x48; // FVector
		constexpr auto Tag = 0x58; // FString
	}

	namespace n_UMovieScene {
		constexpr auto Spawnables = 0x50; // TArray<FMovieSceneSpawnable>
		constexpr auto Possessables = 0x60; // TArray<FMovieScenePossessable>
		constexpr auto ObjectBindings = 0x70; // TArray<FMovieSceneBinding>
		constexpr auto BindingGroups = 0x80; // TMap<FName, FMovieSceneObjectBindingIDs>
		constexpr auto MasterTracks = 0xd0; // TArray<UMovieSceneTrack*>
		constexpr auto CameraCutTrack = 0xe0; // UMovieSceneTrack*
		constexpr auto SelectionRange = 0xe8; // FMovieSceneFrameRange
		constexpr auto PlaybackRange = 0xf8; // FMovieSceneFrameRange
		constexpr auto TickResolution = 0x108; // FFrameRate
		constexpr auto DisplayRate = 0x110; // FFrameRate
		constexpr auto EvaluationType = 0x118; // EMovieSceneEvaluationType
		constexpr auto ClockSource = 0x119; // EUpdateClockSource
		constexpr auto CustomClockSourcePath = 0x120; // FSoftObjectPath
		constexpr auto MarkedFrames = 0x138; // TArray<FMovieSceneMarkedFrame>
	}

	namespace n_UNetAnalyticsAggregatorConfig {
		constexpr auto NetAnalyticsData = 0x28; // TArray<FNetAnalyticsDataConfig>
	}

	namespace n_UConsoleSettings {
		constexpr auto MaxScrollbackSize = 0x28; // int32_t
		constexpr auto ManualAutoCompleteList = 0x30; // TArray<FAutoCompleteCommand>
		constexpr auto AutoCompleteMapPaths = 0x40; // TArray<FString>
		constexpr auto BackgroundOpacityPercentage = 0x50; // float
		constexpr auto bOrderTopToBottom = 0x54; // bool
		constexpr auto bDisplayHelpInAutoComplete = 0x55; // bool
		constexpr auto InputColor = 0x58; // FColor
		constexpr auto HistoryColor = 0x5c; // FColor
		constexpr auto AutoCompleteCommandColor = 0x60; // FColor
		constexpr auto AutoCompleteCVarColor = 0x64; // FColor
		constexpr auto AutoCompleteFadedColor = 0x68; // FColor
	}

	namespace n_UHierarchicalLODSetup {
		constexpr auto HierarchicalLODSetup = 0x28; // TArray<FHierarchicalSimplification>
		constexpr auto OverrideBaseMaterial = 0x38; // TSoftObjectPtr<UMaterialInterface>
	}

	namespace n_UBravoHotelVehicleSeatComponent {
		constexpr auto SeatSocketName = 0x4d8; // FName
		constexpr auto bIsForDriver = 0x4e0; // bool
		constexpr auto Index = 0x4e4; // int32_t
		constexpr auto Occupant = 0x4e8; // ABravoHotelCharacter*
		constexpr auto SortedSeats = 0x4f0; // TArray<UBravoHotelVehicleSeatComponent*>
		constexpr auto OccupantCollision = 0x500; // UBravoHotelVehicleSeatCollisionComponent*
		constexpr auto OnOccupantEntered = 0x508; // FMulticastInlineDelegate
		constexpr auto OnOccupantExited = 0x518; // FMulticastInlineDelegate
		constexpr auto Data = 0x528; // UVehicleSeatData*
		constexpr auto ExitSideWeight = 0x534; // float
		constexpr auto ExitDistanceFromSeatBound = 0x538; // float
	}

	namespace n_UNavCollision {
		constexpr auto CylinderCollision = 0x80; // TArray<FNavCollisionCylinder>
		constexpr auto BoxCollision = 0x90; // TArray<FNavCollisionBox>
		constexpr auto AreaClass = 0xa0; // UNavArea*
		constexpr auto bGatherConvexGeometry = 0xa8; // char : 1
		constexpr auto bCreateOnClient = 0xa8; // char : 1
	}

	namespace n_UGizmoLineHandleComponent {
		constexpr auto Normal = 0x4d0; // FVector
		constexpr auto HandleSize = 0x4dc; // float
		constexpr auto Thickness = 0x4e0; // float
		constexpr auto Direction = 0x4e4; // FVector
		constexpr auto Length = 0x4f0; // float
		constexpr auto bImageScale = 0x4f4; // bool
	}

	namespace n_USkeletalMeshLODSettings {
		constexpr auto MinLOD = 0x30; // FPerPlatformInt
		constexpr auto DisableBelowMinLodStripping = 0x34; // FPerPlatformBool
		constexpr auto bSupportLODStreaming = 0x35; // FPerPlatformBool
		constexpr auto MaxNumStreamedLODs = 0x38; // FPerPlatformInt
		constexpr auto MaxNumOptionalLODs = 0x3c; // FPerPlatformInt
		constexpr auto LODGroups = 0x40; // TArray<FSkeletalMeshLODGroupSettings>
	}

	namespace n_ABP-OutGameParachute_C {
		constexpr auto UberGraphFrame = 0x318; // FPointerToUberGraphFrame
		constexpr auto ParachuteBag_SkeletalMesh = 0x320; // USkeletalMeshComponent*
		constexpr auto Parachute_SkeletalMesh = 0x328; // USkeletalMeshComponent*
		constexpr auto DefaultSceneRoot = 0x330; // USceneComponent*
	}

	namespace n_UAsyncActionChangePrimaryAssetBundles {
		constexpr auto Completed = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UInterpTrackColorProp {
		constexpr auto PropertyName = 0x90; // FName
	}

	namespace n_UInterpTrackInstSlomo {
		constexpr auto OldTimeDilation = 0x28; // float
	}

	namespace n_UCustomizedChara_DataAsset_C {
		constexpr auto CharacterRotationVelocity = 0x30; // float
		constexpr auto CameraMoveVelocity = 0x34; // float
		constexpr auto CameraTop = 0x38; // float
		constexpr auto CameraBottom = 0x3c; // float
		constexpr auto CameraZoomVelocity = 0x40; // float
		constexpr auto CameraInterpSpeed = 0x44; // float
		constexpr auto CharacterRotationInterpSpeed = 0x48; // float
		constexpr auto CameraMove = 0x50; // UCurveFloat*
	}

	namespace n_UGridPanel {
		constexpr auto ColumnFill = 0x120; // TArray<float>
		constexpr auto RowFill = 0x130; // TArray<float>
	}

	namespace n_UAkWwiseTree {
		constexpr auto OnSelectionChanged = 0x108; // FMulticastInlineDelegate
		constexpr auto OnItemDragged = 0x118; // FMulticastInlineDelegate
	}

	namespace n_UWeaponReplicatedComponent {
		constexpr auto AttachmentIndices = 0x170; // TArray<uint16_t>
	}

	namespace n_AOnlineBeacon {
		constexpr auto BeaconConnectionInitialTimeout = 0x320; // float
		constexpr auto BeaconConnectionTimeout = 0x324; // float
		constexpr auto NetDriver = 0x328; // UNetDriver*
	}

	namespace n_USimpleConstructionScript {
		constexpr auto RootNodes = 0x28; // TArray<USCS_Node*>
		constexpr auto AllNodes = 0x38; // TArray<USCS_Node*>
		constexpr auto DefaultSceneRootNode = 0x48; // USCS_Node*
	}

	namespace n_UInterpTrackDirector {
		constexpr auto CutTrack = 0x70; // TArray<FDirectorTrackCut>
		constexpr auto bSimulateCameraCutsOnClients = 0x80; // char : 1
	}

	namespace n_USourceEffectSimpleDelayPreset {
		constexpr auto Settings = 0x80; // FSourceEffectSimpleDelaySettings
	}

	namespace n_UAISense_Sight {
		constexpr auto MaxTracesPerTick = 0x148; // int32_t
		constexpr auto MinQueriesPerTimeSliceCheck = 0x14c; // int32_t
		constexpr auto MaxTimeSlicePerTick = 0x150; // double
		constexpr auto HighImportanceQueryDistanceThreshold = 0x158; // float
		constexpr auto MaxQueryImportance = 0x160; // float
		constexpr auto SightLimitQueryImportance = 0x164; // float
	}

	namespace n_ULandscapeSplineSegment {
		constexpr auto Connections = 0x28; // FLandscapeSplineSegmentConnection [0x2]
		constexpr auto SplineInfo = 0x58; // FInterpCurveVector
		constexpr auto Points = 0x70; // TArray<FLandscapeSplineInterpPoint>
		constexpr auto Bounds = 0x80; // FBox
		constexpr auto LocalMeshComponents = 0xa0; // TArray<USplineMeshComponent*>
	}

	namespace n_UAkWwiseTreeSelector {
		constexpr auto OnSelectionChanged = 0x108; // FMulticastInlineDelegate
		constexpr auto OnItemDragged = 0x118; // FMulticastInlineDelegate
	}

	namespace n_ULightComponent {
		constexpr auto Temperature = 0x268; // float
		constexpr auto MaxDrawDistance = 0x26c; // float
		constexpr auto MaxDistanceFadeRange = 0x270; // float
		constexpr auto bUseTemperature = 0x274; // char : 1
		constexpr auto ShadowMapChannel = 0x278; // int32_t
		constexpr auto MinRoughness = 0x280; // float
		constexpr auto SpecularScale = 0x284; // float
		constexpr auto ShadowResolutionScale = 0x288; // float
		constexpr auto ShadowBias = 0x28c; // float
		constexpr auto ShadowSlopeBias = 0x290; // float
		constexpr auto ShadowSharpen = 0x294; // float
		constexpr auto ContactShadowLength = 0x298; // float
		constexpr auto ContactShadowLengthInWS = 0x29c; // char : 1
		constexpr auto ContactShadowStartDistance = 0x2a0; // float
		constexpr auto ContactShadowFadeDistance = 0x2a4; // float
		constexpr auto ShadowStrength = 0x2a8; // float
		constexpr auto TranslucentShadowDensity = 0x2ac; // float
		constexpr auto InverseSquaredFalloff = 0x2b0; // char : 1
		constexpr auto CastTranslucentShadows = 0x2b0; // char : 1
		constexpr auto bCastShadowsFromCinematicObjectsOnly = 0x2b0; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x2b0; // char : 1
		constexpr auto bForceCachedShadowsFromMovablePrimitivesAsStatic = 0x2b0; // char : 1
		constexpr auto bForceCachedShadowsForMovablePrimitives = 0x2b0; // char : 1
		constexpr auto LightingChannels = 0x2b4; // FLightingChannels
		constexpr auto LightFunctionMaterial = 0x2b8; // UMaterialInterface*
		constexpr auto LightFunctionScale = 0x2c0; // FVector
		constexpr auto IESTexture = 0x2d0; // UTextureLightProfile*
		constexpr auto bUseIESBrightness = 0x2d8; // char : 1
		constexpr auto IESBrightnessScale = 0x2dc; // float
		constexpr auto LightFunctionFadeDistance = 0x2e0; // float
		constexpr auto DisabledBrightness = 0x2e4; // float
		constexpr auto bEnableLightShaftBloom = 0x2e8; // char : 1
		constexpr auto BloomScale = 0x2ec; // float
		constexpr auto BloomThreshold = 0x2f0; // float
		constexpr auto BloomMaxBrightness = 0x2f4; // float
		constexpr auto BloomTint = 0x2f8; // FColor
		constexpr auto bUseFoliageLighting = 0x2fc; // bool
		constexpr auto bUseRayTracedDistanceFieldShadows = 0x2fd; // bool
		constexpr auto RayStartOffsetDepthScale = 0x300; // float
	}

	namespace n_UBravoHotelPerkComponent {
		constexpr auto RepPerkInfos = 0xc0; // FPerkInfoArray
		constexpr auto OnPerkInfoChanged = 0x1d8; // FMulticastInlineDelegate
	}

	namespace n_UComboBox {
		constexpr auto Items = 0x108; // TArray<UObject*>
		constexpr auto OnGenerateWidgetEvent = 0x118; // FDelegate
		constexpr auto bIsFocusable = 0x128; // bool
	}

	namespace n_UScrollBox {
		constexpr auto WidgetStyle = 0x120; // FScrollBoxStyle
		constexpr auto WidgetBarStyle = 0x348; // FScrollBarStyle
		constexpr auto Style = 0x818; // USlateWidgetStyleAsset*
		constexpr auto BarStyle = 0x820; // USlateWidgetStyleAsset*
		constexpr auto Orientation = 0x828; // EOrientation
		constexpr auto ScrollBarVisibility = 0x829; // ESlateVisibility
		constexpr auto ConsumeMouseWheel = 0x82a; // EConsumeMouseWheel
		constexpr auto ScrollbarThickness = 0x82c; // FVector2D
		constexpr auto ScrollbarPadding = 0x834; // FMargin
		constexpr auto AlwaysShowScrollbar = 0x844; // bool
		constexpr auto AlwaysShowScrollbarTrack = 0x845; // bool
		constexpr auto AllowOverscroll = 0x846; // bool
		constexpr auto bAnimateWheelScrolling = 0x847; // bool
		constexpr auto NavigationDestination = 0x848; // EDescendantScrollDestination
		constexpr auto NavigationScrollPadding = 0x84c; // float
		constexpr auto ScrollWhenFocusChanges = 0x850; // EScrollWhenFocusChanges
		constexpr auto bAllowRightClickDragScrolling = 0x851; // bool
		constexpr auto WheelScrollMultiplier = 0x854; // float
		constexpr auto OnUserScrolled = 0x858; // FMulticastInlineDelegate
	}

	namespace n_UInterpTrackFloatAnimBPParam {
		constexpr auto AnimBlueprintClass = 0x90; // UObject*
		constexpr auto AnimClass = 0x98; // UAnimInstance*
		constexpr auto ParamName = 0xa0; // FName
	}

	namespace n_UInteractiveToolPropertySet {
		constexpr auto CachedProperties = 0x40; // UObject*
		constexpr auto bIsPropertySetEnabled = 0x48; // bool
	}

	namespace n_UChildConnection {
		constexpr auto Parent = 0x1aa0; // UNetConnection*
	}

	namespace n_URichTextBlock {
		constexpr auto Text = 0x128; // FText
		constexpr auto TextStyleSet = 0x140; // UDataTable*
		constexpr auto DecoratorClasses = 0x148; // TArray<URichTextBlockDecorator*>
		constexpr auto bOverrideDefaultStyle = 0x158; // bool
		constexpr auto DefaultTextStyleOverride = 0x160; // FTextBlockStyle
		constexpr auto MinDesiredWidth = 0x3c8; // float
		constexpr auto InstanceDecorators = 0x638; // TArray<URichTextBlockDecorator*>
	}

	namespace n_UButtomButtonWidget_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto ApplyBtn = 0x250; // UOverlay*
		constexpr auto ApplyDisable = 0x258; // UImage*
		constexpr auto ApplyNormalBg = 0x260; // UImage*
		constexpr auto ApplyOverBg = 0x268; // UImage*
		constexpr auto ApplyPressBg = 0x270; // UImage*
		constexpr auto Button_31 = 0x278; // UButton*
		constexpr auto Lock = 0x280; // UImage*
		constexpr auto NormalBg = 0x288; // UImage*
		constexpr auto NormalBtn = 0x290; // UOverlay*
		constexpr auto OverBG = 0x298; // UImage*
		constexpr auto PressBg = 0x2a0; // UImage*
		constexpr auto Title_Text = 0x2a8; // UTextBlock*
		constexpr auto Title = 0x2b0; // FText
		constexpr auto OnClickEventDispatcher = 0x2c8; // FMulticastInlineDelegate
		constexpr auto IsDisableBnt = 0x2d8; // bool
		constexpr auto CurType = 0x2dc; // int32_t
		constexpr auto ColorType = 0x2e0; // bool
		constexpr auto Applytype = 0x2e1; // bool
		constexpr auto NewVar_1 = 0x2e2; // bool
	}

	namespace n_UMKActorEx {
		constexpr auto ReplaySamplable = 0x28; // EMKReplaySampling
		constexpr auto ReplaySampleClass = 0x30; // UReplaySampleBase*
		constexpr auto ReplaySamplingFrequency = 0x38; // float
		constexpr auto ClientReplaySamplingGUID = 0x3c; // uint32_t
		constexpr auto bReplayLevelAttached = 0x44; // bool
		constexpr auto ReplaySamplesForPlayback = 0x68; // TArray<UReplaySampleBase*>
		constexpr auto SelfActor = 0x88; // AActor*
	}

	namespace n_UUniformGridSlot {
		constexpr auto HorizontalAlignment = 0x38; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x39; // EVerticalAlignment
		constexpr auto Row = 0x3c; // int32_t
		constexpr auto Column = 0x40; // int32_t
	}

	namespace n_UBHBAdditiveCrosshairBase {
		constexpr auto CrosshairTableRow = 0x2b8; // FName
	}

	namespace n_UTreeView {
		constexpr auto BP_OnGetItemChildren = 0x378; // FDelegate
		constexpr auto BP_OnItemExpansionChanged = 0x388; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionParameter {
		constexpr auto ParameterName = 0x40; // FName
		constexpr auto ExpressionGUID = 0x48; // FGuid
	}

	namespace n_UFSM_FinishState_Async {
		constexpr auto Target = 0x30; // UStateMachineComponent*
		constexpr auto Timer = 0x38; // float
		constexpr auto TimerHandle = 0x40; // FTimerHandle
		constexpr auto OnSuccess = 0x48; // FMulticastInlineDelegate
		constexpr auto OnAborted = 0x58; // FMulticastInlineDelegate
	}

	namespace n_UMotionControllerComponent {
		constexpr auto PlayerIndex = 0x4b0; // int32_t
		constexpr auto Hand = 0x4b4; // EControllerHand
		constexpr auto MotionSource = 0x4b8; // FName
		constexpr auto bDisableLowLatencyUpdate = 0x4c0; // char : 1
		constexpr auto CurrentTrackingStatus = 0x4c4; // ETrackingStatus
		constexpr auto bDisplayDeviceModel = 0x4c5; // bool
		constexpr auto DisplayModelSource = 0x4c8; // FName
		constexpr auto CustomDisplayMesh = 0x4d0; // UStaticMesh*
		constexpr auto DisplayMeshMaterialOverrides = 0x4d8; // TArray<UMaterialInterface*>
		constexpr auto DisplayComponent = 0x550; // UPrimitiveComponent*
	}

	namespace n_UMaterialExpressionWorldPosition {
		constexpr auto WorldPositionShaderOffset = 0x40; // EWorldPositionIncludedOffsets
	}

	namespace n_UParticleModuleAttractorLine {
		constexpr auto EndPoint0 = 0x30; // FVector
		constexpr auto EndPoint1 = 0x3c; // FVector
		constexpr auto Range = 0x48; // FRawDistributionFloat
		constexpr auto Strength = 0x78; // FRawDistributionFloat
	}

	namespace n_UAsyncStaticMeshComponent {
		constexpr auto SoftMeshPtr = 0x548; // TSoftObjectPtr<UStaticMesh>
	}

	namespace n_UAsyncActionLoadPrimaryAssetList {
		constexpr auto Completed = 0x78; // FMulticastInlineDelegate
	}

	namespace n_USubmixEffectTapDelayPreset {
		constexpr auto Settings = 0x80; // FSubmixEffectTapDelaySettings
	}

	namespace n_UBP-BlackmarketSaveGame_C {
		constexpr auto bHideWorkInProgress = 0x28; // bool
		constexpr auto MainTab = 0x29; // EBlackmarketTabType
		constexpr auto WeaponSubTab = 0x2a; // EWeaponType
		constexpr auto AttachmentSubTab = 0x2b; // EWeaponAttachmentType
		constexpr auto WearableSubTab = 0x2c; // EWearableItemType
		constexpr auto CustomSubTab = 0x2d; // EWearableItemType
		constexpr auto GearSubTab = 0x2e; // EWearableItemType
	}

	namespace n_UUW-PlayerInfoWidget_Renew_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto Lung_Red = 0x2c8; // UWidgetAnimation*
		constexpr auto Weaving_Stand = 0x2d0; // UWidgetAnimation*
		constexpr auto Weaving_Sit = 0x2d8; // UWidgetAnimation*
		constexpr auto HorizontalBox_Backpack_Star = 0x2e0; // UHorizontalBox*
		constexpr auto HorizontalBox_Chest_Star = 0x2e8; // UHorizontalBox*
		constexpr auto HorizontalBox_Damage = 0x2f0; // UHorizontalBox*
		constexpr auto HorizontalBox_Helmet_Star = 0x2f8; // UHorizontalBox*
		constexpr auto HorizontalBox_Levels = 0x300; // UHorizontalBox*
		constexpr auto Image_BackPack_Star = 0x308; // UImage*
		constexpr auto Image_C4 = 0x310; // UImage*
		constexpr auto Image_Chest_Star = 0x318; // UImage*
		constexpr auto Image_DamageBg = 0x320; // UImage*
		constexpr auto Image_FireMode = 0x328; // UImage*
		constexpr auto Image_Helmet_Star = 0x330; // UImage*
		constexpr auto Image_Time = 0x338; // UImage*
		constexpr auto Image_Timer = 0x340; // UImage*
		constexpr auto Image_Weapon = 0x348; // UImage*
		constexpr auto Overlay_Tab = 0x350; // UOverlay*
		constexpr auto ProgressBar_Backpack = 0x358; // UProgressBar*
		constexpr auto ProgressBar_Chest = 0x360; // UProgressBar*
		constexpr auto ProgressBar_Helmet = 0x368; // UProgressBar*
		constexpr auto SizeBox_Backpack = 0x370; // USizeBox*
		constexpr auto SizeBox_Chest = 0x378; // USizeBox*
		constexpr auto SizeBox_Helmet = 0x380; // USizeBox*
		constexpr auto T_C4Time = 0x388; // UTextBlock*
		constexpr auto T_Damage = 0x390; // UTextBlock*
		constexpr auto T_PerkWeaponAmmo = 0x398; // UTextBlock*
		constexpr auto T_SlotIndex = 0x3a0; // UTextBlock*
		constexpr auto T_WeaponName = 0x3a8; // UTextBlock*
		constexpr auto TextBlock_bulletCount = 0x3b0; // UTextBlock*
		constexpr auto TextBlock_bulletMaxCount = 0x3b8; // UTextBlock*
		constexpr auto UW-GameBuffSlot = 0x3c0; // UUW-GameBuffSlot_C*
		constexpr auto UW-GameBuffSlot_2 = 0x3c8; // UUW-GameBuffSlot_C*
		constexpr auto UW-GameBuffSlot_3 = 0x3d0; // UUW-GameBuffSlot_C*
		constexpr auto UW-GameBuffSlot_4 = 0x3d8; // UUW-GameBuffSlot_C*
		constexpr auto UW-GameBuffSlot_5 = 0x3e0; // UUW-GameBuffSlot_C*
		constexpr auto UW-GameBuffSlot_6 = 0x3e8; // UUW-GameBuffSlot_C*
		constexpr auto UW-GameBuffSlot_BoostCover = 0x3f0; // UUW-GameBuffSlot_BoostCover_C*
		constexpr auto UW-PlayerInfo_Progress_Renew = 0x3f8; // UUW-PlayerInfo_Progress_Renew_C*
		constexpr auto WidgetSwitcher_Bullet = 0x400; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_C4 = 0x408; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_Stance = 0x410; // UWidgetSwitcher*
		constexpr auto Anim_LastHeadbanging = 0x418; // UWidgetAnimation*
		constexpr auto Timer_UpdateInfos = 0x420; // FTimerHandle
		constexpr auto bIsCoolTimeWeapon = 0x428; // bool
		constexpr auto CurrentWeapon = 0x430; // ABravoHotelWeaponBase*
		constexpr auto TargetPawnRef = 0x438; // ABravoHotelCharacter*
		constexpr auto CoolTimeMaterial = 0x440; // UMaterialInstanceDynamic*
		constexpr auto WeaponInfo = 0x448; // FWeaponWidgetInfo
		constexpr auto SlotIndex = 0x4f0; // int32_t
	}

	namespace n_ABravoHotelSmartPingActor {
		constexpr auto LocationActor = 0x318; // AActor*
		constexpr auto LightPoleMesh = 0x320; // UStaticMeshComponent*
		constexpr auto IsBook = 0x328; // bool
		constexpr auto IsTempActor = 0x329; // bool
		constexpr auto IsPersonalSupplyBoxActor = 0x32a; // bool
		constexpr auto IsMaterialItemActor = 0x32b; // bool
		constexpr auto bIsExpertWeaponItemActor = 0x32c; // bool
		constexpr auto bIsLocalActor = 0x32d; // bool
		constexpr auto MaterialPingInfo = 0x330; // FMaterialItemPingInfo
		constexpr auto ExpertWeaponPingInfo = 0x360; // FExpertWeaponPingInfo
		constexpr auto LocalPingInfo = 0x388; // FBravoHotelLocalPingInfo
		constexpr auto OwnerState = 0x3b8; // ABravoHotelPlayerState*
		constexpr auto PingInfo = 0x3c0; // FBravoHotelPingInfo
		constexpr auto PlayerController = 0x3f8; // ABravoHotelPlayerController*
		constexpr auto PingSettings = 0x400; // FBravoHotelSmartPingIconSettings
		constexpr auto ScreenRot = 0x4b8; // float
		constexpr auto TargetPingLocation = 0x4c0; // FVector
		constexpr auto Active = 0x4cc; // bool
		constexpr auto PingWidget = 0x4d0; // UBravoHotelSmartPingIconWidget*
		constexpr auto WidgetSize = 0x4d8; // float
		constexpr auto ShowLine = 0x4dc; // bool
		constexpr auto InNm = 0x4dd; // bool
		constexpr auto CurrentWidgetSpace = 0x4de; // EWidgetSpace
		constexpr auto PingWidgetCompentSapceWorld = 0x4e0; // UWidgetComponent*
		constexpr auto PingWidgetCompentSapceScreen = 0x4e8; // UWidgetComponent*
		constexpr auto PingIconWidgetWorld = 0x4f0; // UBravoHotelSmartPingIconWidget*
		constexpr auto PingIconWidgetScreen = 0x4f8; // UBravoHotelSmartPingIconWidget*
		constexpr auto SmartPingLineScale = 0x500; // UCurveFloat*
		constexpr auto CheckHieght = 0x508; // float
		constexpr auto CheckDistance = 0x50c; // float
		constexpr auto SmartPingSystem = 0x510; // UBravoHotelSmartPingSystem*
		constexpr auto CompleteBindingOptin = 0x582; // bool
		constexpr auto PingAlphaCurve = 0x588; // UCurveFloat*
		constexpr auto PingLightAimPoleAlphaCurve = 0x590; // UCurveFloat*
		constexpr auto PingLightPoleDistanceAlphaCurve = 0x598; // UCurveFloat*
		constexpr auto PingLightPoleDistanceRadiusCurve = 0x5a0; // UCurveFloat*
		constexpr auto PingLightPoleFovRadiusCurve = 0x5a8; // UCurveFloat*
		constexpr auto PingReSizeCurve = 0x5b0; // UCurveFloat*
		constexpr auto ForceOpacity1DurationTime = 0x5b8; // float
		constexpr auto AddCenterPoint = 0x5bc; // FVector2D
	}

	namespace n_AHUD {
		constexpr auto PlayerOwner = 0x318; // APlayerController*
		constexpr auto bLostFocusPaused = 0x320; // char : 1
		constexpr auto bShowHUD = 0x320; // char : 1
		constexpr auto bShowDebugInfo = 0x320; // char : 1
		constexpr auto CurrentTargetIndex = 0x324; // int32_t
		constexpr auto bShowHitBoxDebugInfo = 0x328; // char : 1
		constexpr auto bShowOverlays = 0x328; // char : 1
		constexpr auto bEnableDebugTextShadow = 0x328; // char : 1
		constexpr auto PostRenderedActors = 0x330; // TArray<AActor*>
		constexpr auto DebugDisplay = 0x348; // TArray<FName>
		constexpr auto ToggledDebugCategories = 0x358; // TArray<FName>
		constexpr auto Canvas = 0x368; // UCanvas*
		constexpr auto DebugCanvas = 0x370; // UCanvas*
		constexpr auto DebugTextList = 0x378; // TArray<FDebugTextInfo>
		constexpr auto ShowDebugTargetDesiredClass = 0x388; // AActor*
		constexpr auto ShowDebugTargetActor = 0x390; // AActor*
	}

	namespace n_UMovieSceneObjectPropertySection {
		constexpr auto ObjectChannel = 0xe0; // FMovieSceneObjectPathChannel
	}

	namespace n_UBuildPatchManifest {
		constexpr auto ManifestFileVersion = 0x28; // char
		constexpr auto bIsFileData = 0x29; // bool
		constexpr auto AppID = 0x2c; // uint32_t
		constexpr auto AppName = 0x30; // FString
		constexpr auto BuildVersion = 0x40; // FString
		constexpr auto LaunchExe = 0x50; // FString
		constexpr auto LaunchCommand = 0x60; // FString
		constexpr auto PrereqIds = 0x70; // TSet<FString>
		constexpr auto PrereqName = 0xc0; // FString
		constexpr auto PrereqPath = 0xd0; // FString
		constexpr auto PrereqArgs = 0xe0; // FString
		constexpr auto FileManifestList = 0xf0; // TArray<FFileManifestData>
		constexpr auto ChunkList = 0x100; // TArray<FChunkInfoData>
		constexpr auto CustomFields = 0x110; // TArray<FCustomFieldData>
	}

	namespace n_UUW-MatchEnd_Animation_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Infos_ani = 0x250; // UWidgetAnimation*
		constexpr auto SimpleResult_Events = 0x258; // UWidgetAnimation*
		constexpr auto Lose_ani = 0x260; // UWidgetAnimation*
		constexpr auto Win_ani = 0x268; // UWidgetAnimation*
		constexpr auto Lose_Events = 0x270; // UWidgetAnimation*
		constexpr auto Win_Events = 0x278; // UWidgetAnimation*
		constexpr auto ClassName = 0x280; // UTextBlock*
		constexpr auto ClassWeaponName = 0x288; // UTextBlock*
		constexpr auto HeadShot = 0x290; // UTextBlock*
		constexpr auto HorizontalBox_KillerWeaponInfo = 0x298; // UHorizontalBox*
		constexpr auto HorizontalBox_Rarity = 0x2a0; // UHorizontalBox*
		constexpr auto Icon_KillerClass = 0x2a8; // UImage*
		constexpr auto Image_894 = 0x2b0; // UImage*
		constexpr auto Image_2002 = 0x2b8; // UImage*
		constexpr auto Level = 0x2c0; // UTextBlock*
		constexpr auto LoseMessage = 0x2c8; // UTextBlock*
		constexpr auto Overlay_DropItems = 0x2d0; // UOverlay*
		constexpr auto Overlay_KillerInfo = 0x2d8; // UOverlay*
		constexpr auto Overlay_WeaponLevel = 0x2e0; // UOverlay*
		constexpr auto T_DamageType = 0x2e8; // UTextBlock*
		constexpr auto T_WeaponLevel = 0x2f0; // UTextBlock*
		constexpr auto TextBlock_ItemCount = 0x2f8; // UTextBlock*
		constexpr auto Uniform_ItemList = 0x300; // UUniformGridPanel*
		constexpr auto UserName = 0x308; // UTextBlock*
		constexpr auto UW-MatchEnd_RewardSlot_C_1 = 0x310; // UUW-MatchEnd_RewardSlot_C*
		constexpr auto UW-SkipButton = 0x318; // UUW-MatchEnd_ButtonBase_C*
		constexpr auto WeaponName = 0x320; // UTextBlock*
		constexpr auto WidgetSwitcher_DamageCauser = 0x328; // UWidgetSwitcher*
		constexpr auto AnimationData = 0x330; // FMatchEndAnimation
		constexpr auto MatchEndWidgetRef = 0x338; // UUW-MatchEndWidget_C*
		constexpr auto SimpleResult = 0x340; // FMatchEndSimpleResult
		constexpr auto MatchEnd = 0x450; // bool
	}

	namespace n_UMKWorldEx {
		constexpr auto SelfWorld = 0x38; // UWorld*
	}

	namespace n_UInputComponent {
		constexpr auto CachedKeyToActionInfo = 0x120; // TArray<FCachedKeyToActionInfo>
	}

	namespace n_UWidgetNavigation {
		constexpr auto Up = 0x28; // FWidgetNavigationData
		constexpr auto Down = 0x4c; // FWidgetNavigationData
		constexpr auto Left = 0x70; // FWidgetNavigationData
		constexpr auto Right = 0x94; // FWidgetNavigationData
		constexpr auto Next = 0xb8; // FWidgetNavigationData
		constexpr auto Previous = 0xdc; // FWidgetNavigationData
	}

	namespace n_UBravoHotelBuffBase {
		constexpr auto BravoHotelCharacter = 0x240; // ABravoHotelCharacter*
		constexpr auto BravoHotelAbilityComponent = 0x248; // UBravoHotelAbilityComponent*
		constexpr auto TimerHandles = 0x280; // TArray<FTimerHandle>
		constexpr auto CharacterParticles = 0x290; // TArray<UParticleSystemComponent*>
		constexpr auto AttackerPC = 0x2a0; // AController*
		constexpr auto AttackerActor = 0x2a8; // AActor*
	}

	namespace n_UBHBUltimate_Recon {
		constexpr auto CurrentActiveCount = 0x2c0; // int32_t
		constexpr auto MaxActiveCount = 0x2c4; // int32_t
	}

	namespace n_ACameraShakeSourceActor {
		constexpr auto CameraShakeSourceComponent = 0x318; // UCameraShakeSourceComponent*
	}

	namespace n_UUW-MatchEnd_RewardSlot_02_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto HorizontalBox = 0x250; // UHorizontalBox*
		constexpr auto HorizontalBox_2 = 0x258; // UHorizontalBox*
		constexpr auto Image = 0x260; // UImage*
		constexpr auto Image_2 = 0x268; // UImage*
		constexpr auto Image_3 = 0x270; // UImage*
		constexpr auto Image_4 = 0x278; // UImage*
		constexpr auto Image_5 = 0x280; // UImage*
		constexpr auto Image_6 = 0x288; // UImage*
		constexpr auto Image_7 = 0x290; // UImage*
		constexpr auto Image_8 = 0x298; // UImage*
		constexpr auto Image_9 = 0x2a0; // UImage*
		constexpr auto Image_10 = 0x2a8; // UImage*
		constexpr auto Image_11 = 0x2b0; // UImage*
		constexpr auto Image_12 = 0x2b8; // UImage*
		constexpr auto Image_13 = 0x2c0; // UImage*
		constexpr auto Image_14 = 0x2c8; // UImage*
		constexpr auto Image_15 = 0x2d0; // UImage*
		constexpr auto Image_72 = 0x2d8; // UImage*
		constexpr auto Image_164 = 0x2e0; // UImage*
		constexpr auto Image_352 = 0x2e8; // UImage*
		constexpr auto Image_659 = 0x2f0; // UImage*
		constexpr auto Overlay_4 = 0x2f8; // UOverlay*
		constexpr auto SizeBox = 0x300; // USizeBox*
		constexpr auto SizeBox_54 = 0x308; // USizeBox*
		constexpr auto T_WeaponType = 0x310; // UTextBlock*
		constexpr auto TextBlock_176 = 0x318; // UTextBlock*
		constexpr auto TextBlock_258 = 0x320; // UTextBlock*
		constexpr auto TextBlock_331 = 0x328; // UTextBlock*
		constexpr auto WidgetSwitcher_1 = 0x330; // UWidgetSwitcher*
		constexpr auto ItemInfo = 0x338; // FRewardItemInfo
		constexpr auto ItemDetailInfo = 0x340; // FInventoryItemDetailInfo
		constexpr auto LocalText = 0x7d0; // FText
		constexpr auto bIsSmallIcon = 0x7e8; // bool
	}

	namespace n_UUW-MinimapWidget_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto PlayerIconOnDamagingAnimation = 0x268; // UWidgetAnimation*
		constexpr auto ShirinkingAnimation = 0x270; // UWidgetAnimation*
		constexpr auto AlertIcon = 0x278; // UImage*
		constexpr auto BP-CheckWeightMap = 0x280; // UBP-CheckWeightMap_C*
		constexpr auto BP-MapComp = 0x288; // UUW-MapComp_C*
		constexpr auto CircleInfoGroup = 0x290; // UCanvasPanel*
		constexpr auto CP-MapComp = 0x298; // UCanvasPanel*
		constexpr auto CurrentProgressBar = 0x2a0; // UProgressBar*
		constexpr auto Image_174 = 0x2a8; // UImage*
		constexpr auto Image_766 = 0x2b0; // UImage*
		constexpr auto InvalidationBox_2 = 0x2b8; // UInvalidationBox*
		constexpr auto LulledGroup = 0x2c0; // UCanvasPanel*
		constexpr auto PhaseText = 0x2c8; // UTextBlock*
		constexpr auto PlayerIconGroup = 0x2d0; // UCanvasPanel*
		constexpr auto SB-MapComp = 0x2d8; // USizeBox*
		constexpr auto SB_CircleInfo = 0x2e0; // USizeBox*
		constexpr auto ShrinkingGroup = 0x2e8; // UCanvasPanel*
		constexpr auto Switcher = 0x2f0; // UWidgetSwitcher*
		constexpr auto UW-Inventory_Recipe = 0x2f8; // UUW-Inventory_Recipe_C*
		constexpr auto UW-SearchingMaterial = 0x300; // UUW-SearchingMaterial_C*
		constexpr auto State = 0x308; // int32_t
		constexpr auto MapSize_Default = 0x30c; // FVector2D
		constexpr auto MapSize_Extend = 0x314; // FVector2D
		constexpr auto InitializeCount = 0x31c; // int32_t
		constexpr auto bExtendMode = 0x320; // bool
		constexpr auto RecipeCount = 0x324; // int32_t
		constexpr auto TargetCharacter = 0x328; // ABravoHotelCharacter*
	}

	namespace n_UDebugCameraControllerSettings {
		constexpr auto CycleViewModes = 0x38; // TArray<FDebugCameraControllerSettingsViewModeIndex>
	}

	namespace n_URotatingMovementComponent {
		constexpr auto RotationRate = 0xf0; // FRotator
		constexpr auto PivotTranslation = 0xfc; // FVector
		constexpr auto bRotationInLocalSpace = 0x108; // char : 1
	}

	namespace n_UParticleModuleLight_Seeded {
		constexpr auto RandomSeedInfo = 0x120; // FParticleRandomSeedInfo
	}

	namespace n_UBTTask_WaitBlackboardTime {
		constexpr auto BlackboardKey = 0x78; // FBlackboardKeySelector
	}

	namespace n_UParticleModuleRotationRate_Seeded {
		constexpr auto RandomSeedInfo = 0x60; // FParticleRandomSeedInfo
	}

	namespace n_UPhysicsSpringComponent {
		constexpr auto SpringStiffness = 0x230; // float
		constexpr auto SpringDamping = 0x234; // float
		constexpr auto SpringLengthAtRest = 0x238; // float
		constexpr auto SpringRadius = 0x23c; // float
		constexpr auto SpringChannel = 0x240; // ECollisionChannel
		constexpr auto bIgnoreSelf = 0x241; // bool
		constexpr auto SpringCompression = 0x244; // float
	}

	namespace n_UMaterialExpressionTextureCoordinate {
		constexpr auto CoordinateIndex = 0x40; // int32_t
		constexpr auto UTiling = 0x44; // float
		constexpr auto VTiling = 0x48; // float
		constexpr auto UnMirrorU = 0x4c; // char : 1
		constexpr auto UnMirrorV = 0x4c; // char : 1
	}

	namespace n_UDamageType {
		constexpr auto bCausedByWorld = 0x28; // char : 1
		constexpr auto bScaleMomentumByMass = 0x28; // char : 1
		constexpr auto bRadialDamageVelChange = 0x28; // char : 1
		constexpr auto DamageImpulse = 0x2c; // float
		constexpr auto DestructibleImpulse = 0x30; // float
		constexpr auto DestructibleDamageSpreadScale = 0x34; // float
		constexpr auto DamageFalloff = 0x38; // float
	}

	namespace n_UMaterialExpressionArctangent {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UBP-WidgetDrag_C {
		constexpr auto WidgetReference = 0x88; // UUserWidget*
		constexpr auto InventorySlotWidgetKind = 0x90; // ItemWidgetDragType
	}

	namespace n_UEnvQueryGenerator_Donut {
		constexpr auto InnerRadius = 0x80; // FAIDataProviderFloatValue
		constexpr auto OuterRadius = 0xb8; // FAIDataProviderFloatValue
		constexpr auto NumberOfRings = 0xf0; // FAIDataProviderIntValue
		constexpr auto PointsPerRing = 0x128; // FAIDataProviderIntValue
		constexpr auto ArcDirection = 0x160; // FEnvDirection
		constexpr auto ArcAngle = 0x180; // FAIDataProviderFloatValue
		constexpr auto bUseSpiralPattern = 0x1b8; // bool
		constexpr auto Center = 0x1c0; // UEnvQueryContext*
		constexpr auto bDefineArc = 0x1c8; // char : 1
	}

	namespace n_UEquippableComponent {
		constexpr auto OwningPawn = 0xc0; // ACharacter*
		constexpr auto ItemInfo = 0xc8; // FInventoryItemInfo
		constexpr auto OriginItemIndex = 0x160; // uint16_t
		constexpr auto EquippedSlotIndex = 0x164; // int32_t
		constexpr auto AttachedSlotIndex = 0x168; // int32_t
	}

	namespace n_UUW-Lobby_Main_Web_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto NewAnimation_2 = 0x250; // UWidgetAnimation*
		constexpr auto BackgroundBlur_1 = 0x258; // UBackgroundBlur*
		constexpr auto Blur = 0x260; // UBackgroundBlur*
		constexpr auto CanvasPanel_1 = 0x268; // UCanvasPanel*
		constexpr auto Focus = 0x270; // UImage*
		constexpr auto FocusPanel = 0x278; // UCanvasPanel*
		constexpr auto Lobby = 0x280; // UCoherentUIGTWidget*
		constexpr auto UW-ArmoryWidget = 0x288; // UUW-ArmoryWidget_C*
		constexpr auto UW-CustomizedCharacter = 0x290; // UUW-CustomizedCharacter_C*
		constexpr auto UW-Exit_Popup = 0x298; // UUW-Exit_Popup_C*
		constexpr auto UW-Lobby_ArmoryMain = 0x2a0; // UUW-Lobby_ArmoryMain_C*
		constexpr auto UW-ReplayListWidget = 0x2a8; // UUW-ReplayListWidget_C*
		constexpr auto UW-Volume = 0x2b0; // UUW-Volume_C*
		constexpr auto NormalTextColor = 0x2b8; // FSlateColor
		constexpr auto HoverTextColor = 0x2e0; // FSlateColor
		constexpr auto LobbyWidgetRef = 0x308; // UBP-LobbyWidget_Web_C*
		constexpr auto NormalSelectedTextColor = 0x310; // FSlateColor
		constexpr auto HoverSelectedTextColor = 0x338; // FSlateColor
		constexpr auto NormalOptionButtonColor = 0x360; // FLinearColor
		constexpr auto HoverOptionButtonColor = 0x370; // FLinearColor
		constexpr auto MatchingPopupTimerHandle = 0x380; // FTimerHandle
		constexpr auto PopupKey = 0x388; // FKey
		constexpr auto bExitPopupOpen = 0x3a0; // bool
		constexpr auto bOptionPopupOpen = 0x3a1; // bool
		constexpr auto BattleMode = 0x3a2; // char
		constexpr auto LobbyCoherentSprite = 0x3a8; // UDataTable*
		constexpr auto SettingWidget = 0x3b0; // USettingMainWidget_C*
		constexpr auto LobbySound = 0x3b8; // UAkComponent*
		constexpr auto CurrentTab = 0x3c0; // FString
		constexpr auto UW-Inventory_ItemSlotHover = 0x3d0; // UUW-Inventory_ItemSlotHover_C*
		constexpr auto LobbyCoherent2DTexture = 0x3d8; // UDataTable*
	}

	namespace n_UBHBWaterGhillie {
		constexpr auto BuffMutableString = 0x2b8; // FString
	}

	namespace n_UHoudiniCSV {
		constexpr auto Filename = 0x28; // FString
		constexpr auto NumberOfRows = 0x38; // int32_t
		constexpr auto NumberOfColumns = 0x3c; // int32_t
		constexpr auto NumberOfPoints = 0x40; // int32_t
		constexpr auto SourceTitleRow = 0x48; // FString
		constexpr auto ColumnTitleArray = 0x58; // TArray<FString>
		constexpr auto FloatCSVData = 0x68; // TArray<float>
		constexpr auto SpawnTimes = 0x78; // TArray<float>
		constexpr auto LifeValues = 0x88; // TArray<float>
		constexpr auto PointTypes = 0x98; // TArray<int32_t>
		constexpr auto SpecialAttributesColumnIndexes = 0xa8; // TArray<int32_t>
		constexpr auto PointValueIndexes = 0xb8; // TArray<FPointIndexes>
		constexpr auto UseCustomTitleRow = 0xc8; // bool
	}

	namespace n_UBravoHotelReplayPlayerListGroup {
		constexpr auto PlayerState = 0x250; // ABravoHotelPlayerState*
		constexpr auto VBPlayerList = 0x258; // UVerticalBox*
	}

	namespace n_UBTDecorator_TagCooldown {
		constexpr auto CooldownTag = 0x68; // FGameplayTag
		constexpr auto CooldownDuration = 0x70; // float
		constexpr auto bAddToExistingDuration = 0x74; // bool
		constexpr auto bActivatesCooldown = 0x75; // bool
	}

	namespace n_UInterpTrackToggle {
		constexpr auto ToggleTrack = 0x70; // TArray<FToggleTrackKey>
		constexpr auto bActivateSystemEachUpdate = 0x80; // char : 1
		constexpr auto bActivateWithJustAttachedFlag = 0x80; // char : 1
		constexpr auto bFireEventsWhenForwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenJumpingForwards = 0x80; // char : 1
	}

	namespace n_UMovieSceneEventSection {
		constexpr auto Events = 0xe0; // FNameCurve
		constexpr auto eventData = 0x158; // FMovieSceneEventSectionData
	}

	namespace n_UMaterialExpressionLandscapeGrassOutput {
		constexpr auto GrassTypes = 0x40; // TArray<FGrassInput>
	}

	namespace n_UImageSequenceProtocol_EXR {
		constexpr auto bCompressed = 0xd8; // bool
		constexpr auto CaptureGamut = 0xd9; // EHDRCaptureGamut
	}

	namespace n_UMaterialExpressionStaticBool {
		constexpr auto Value = 0x40; // char : 1
	}

	namespace n_UGizmoTransformProxyTransformSource {
		constexpr auto Proxy = 0x48; // UTransformProxy*
	}

	namespace n_UAnimSingleNodeInstance {
		constexpr auto CurrentAsset = 0x268; // UAnimationAsset*
		constexpr auto PostEvaluateAnimEvent = 0x270; // FDelegate
	}

	namespace n_UParticleModuleOrbit {
		constexpr auto ChainMode = 0x38; // EOrbitChainMode
		constexpr auto OffsetAmount = 0x40; // FRawDistributionVector
		constexpr auto OffsetOptions = 0x88; // FOrbitOptions
		constexpr auto RotationAmount = 0x90; // FRawDistributionVector
		constexpr auto RotationOptions = 0xd8; // FOrbitOptions
		constexpr auto RotationRateAmount = 0xe0; // FRawDistributionVector
		constexpr auto RotationRateOptions = 0x128; // FOrbitOptions
	}

	namespace n_UParticleModuleVectorFieldRotation {
		constexpr auto MinInitialRotation = 0x30; // FVector
		constexpr auto MaxInitialRotation = 0x3c; // FVector
	}

	namespace n_UBravoHotelLayerBase {
		constexpr auto ZOrder = 0x28; // int32_t
		constexpr auto WidgetList = 0x30; // TArray<FPopupWidgetInfo>
	}

	namespace n_UUW-Lobby_WeaponInfo_RandomOption_C {
		constexpr auto T_Desc = 0x248; // UTextBlock*
		constexpr auto UW-Lobby_WeaponInfo_Buff = 0x250; // UUW-Lobby_WeaponInfo_Option_Slot_Icon_C*
		constexpr auto UW-Lobby_WeaponInfo_Buff_2 = 0x258; // UUW-Lobby_WeaponInfo_Option_Slot_Icon_C*
		constexpr auto UW-Lobby_WeaponInfo_Buff_3 = 0x260; // UUW-Lobby_WeaponInfo_Option_Slot_Icon_C*
		constexpr auto UW-Lobby_WeaponInfo_Buff_4 = 0x268; // UUW-Lobby_WeaponInfo_Option_Slot_Icon_C*
		constexpr auto UW-Lobby_WeaponInfo_Buff_5 = 0x270; // UUW-Lobby_WeaponInfo_Option_Slot_Icon_C*
		constexpr auto UW-Lobby_WeaponInfo_Buff_6 = 0x278; // UUW-Lobby_WeaponInfo_Option_Slot_Icon_C*
		constexpr auto UW-Lobby_WeaponInfo_Buff_7 = 0x280; // UUW-Lobby_WeaponInfo_Option_Slot_Icon_C*
		constexpr auto UW-Lobby_WeaponInfo_Buff_8 = 0x288; // UUW-Lobby_WeaponInfo_Option_Slot_Icon_C*
		constexpr auto UW-Lobby_WeaponInfo_Buff_9 = 0x290; // UUW-Lobby_WeaponInfo_Option_Slot_Icon_C*
		constexpr auto UW-Lobby_WeaponInfo_Buff_10 = 0x298; // UUW-Lobby_WeaponInfo_Option_Slot_Icon_C*
		constexpr auto WrapBox_Options = 0x2a0; // UWrapBox*
	}

	namespace n_USubstanceInstanceFactory {
		constexpr auto mGraphInstances = 0x28; // TArray<USubstanceGraphInstance*>
		constexpr auto RelativeSourceFilePath = 0x50; // FString
		constexpr auto AbsoluteSourceFilePath = 0x60; // FString
		constexpr auto SourceFileTimestamp = 0x70; // FString
		constexpr auto GenerationMode = 0x80; // ESubstanceGenerationMode
	}

	namespace n_ABP-ProjectileGrenade_MolotovCocktail_C {
		constexpr auto UberGraphFrame = 0x830; // FPointerToUberGraphFrame
		constexpr auto TextureScale = 0x838; // float
		constexpr auto CollisionSize = 0x83c; // float
	}

	namespace n_ULowEntryDouble {
		constexpr auto Bytes = 0x28; // TArray<char>
	}

	namespace n_UMovieSceneParticleTrack {
		constexpr auto ParticleSections = 0x58; // TArray<UMovieSceneSection*>
	}

	namespace n_UWidgetBlueprintGeneratedClass {
		constexpr auto WidgetTree = 0x3c8; // UWidgetTree*
		constexpr auto bAllowTemplate = 0x3d0; // char : 1
		constexpr auto bAllowDynamicCreation = 0x3d0; // char : 1
		constexpr auto bValidTemplate = 0x3d0; // char : 1
		constexpr auto bTemplateInitialized = 0x3d0; // char : 1
		constexpr auto bCookedTemplate = 0x3d0; // char : 1
		constexpr auto bClassRequiresNativeTick = 0x3d0; // char : 1
		constexpr auto Bindings = 0x3d8; // TArray<FDelegateRuntimeBinding>
		constexpr auto Animations = 0x3e8; // TArray<UWidgetAnimation*>
		constexpr auto NamedSlots = 0x3f8; // TArray<FName>
		constexpr auto TemplateAsset = 0x408; // TSoftObjectPtr<UUserWidget>
		constexpr auto Template = 0x430; // UUserWidget*
	}

	namespace n_AAmbientSoundVolume {
		constexpr auto Ambience = 0x350; // FString
		constexpr auto Priority = 0x360; // int32_t
	}

	namespace n_UBlueprintCore {
		constexpr auto SkeletonGeneratedClass = 0x28; // UObject*
		constexpr auto GeneratedClass = 0x30; // UObject*
		constexpr auto bLegacyNeedToPurgeSkelRefs = 0x38; // bool
		constexpr auto BlueprintGuid = 0x3c; // FGuid
	}

	namespace n_UBravoHotelTeamInfoSlotWidget {
		constexpr auto TimerHandle_CheckValue = 0x248; // FTimerHandle
		constexpr auto SlotIndex = 0x2dc; // int32_t
		constexpr auto PlayerState = 0x2e0; // ABravoHotelPlayerState*
		constexpr auto PlayedFireAnimationCnt = 0x2e8; // int32_t
		constexpr auto bPlayingFireAnimation = 0x2ec; // bool
		constexpr auto FireCnt = 0x2f0; // int32_t
		constexpr auto StartDownTime = 0x2f4; // float
		constexpr auto TotalDownTime = 0x2f8; // float
		constexpr auto DownTickTime = 0x2fc; // float
		constexpr auto CurrentState = 0x300; // ECharacterState
		constexpr auto bIsLocalState = 0x301; // bool
	}

	namespace n_UInteractiveTool {
		constexpr auto InputBehaviors = 0x48; // UInputBehaviorSet*
		constexpr auto ToolPropertyObjects = 0x50; // TArray<UObject*>
	}

	namespace n_USkeletalMeshSimulationComponent {
		constexpr auto PhysicalMaterial = 0xb8; // UChaosPhysicalMaterial*
		constexpr auto ChaosSolverActor = 0xc0; // AChaosSolverActor*
		constexpr auto OverridePhysicsAsset = 0xc8; // UPhysicsAsset*
		constexpr auto bSimulating = 0xd0; // bool
		constexpr auto bNotifyCollisions = 0xd1; // bool
		constexpr auto ObjectType = 0xd2; // EObjectStateTypeEnum
		constexpr auto Density = 0xd4; // float
		constexpr auto MinMass = 0xd8; // float
		constexpr auto MaxMass = 0xdc; // float
		constexpr auto CollisionType = 0xe0; // ECollisionTypeEnum
		constexpr auto ImplicitShapeParticlesPerUnitArea = 0xe4; // float
		constexpr auto ImplicitShapeMinNumParticles = 0xe8; // int32_t
		constexpr auto ImplicitShapeMaxNumParticles = 0xec; // int32_t
		constexpr auto MinLevelSetResolution = 0xf0; // int32_t
		constexpr auto MaxLevelSetResolution = 0xf4; // int32_t
		constexpr auto CollisionGroup = 0xf8; // int32_t
		constexpr auto InitialVelocityType = 0xfc; // EInitialVelocityTypeEnum
		constexpr auto InitialLinearVelocity = 0x100; // FVector
		constexpr auto InitialAngularVelocity = 0x10c; // FVector
		constexpr auto OnChaosPhysicsCollision = 0x118; // FMulticastInlineDelegate
	}

	namespace n_UParticleModuleCollisionGPU {
		constexpr auto Resilience = 0x30; // FRawDistributionFloat
		constexpr auto ResilienceScaleOverLife = 0x60; // FRawDistributionFloat
		constexpr auto Friction = 0x90; // float
		constexpr auto RandomSpread = 0x94; // float
		constexpr auto RandomDistribution = 0x98; // float
		constexpr auto RadiusScale = 0x9c; // float
		constexpr auto RadiusBias = 0xa0; // float
		constexpr auto Response = 0xa4; // EParticleCollisionResponse
		constexpr auto CollisionMode = 0xa5; // EParticleCollisionMode
	}

	namespace n_UMaterialExpressionTruncate {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UBravoHotelScenarioCallbackProxy {
		constexpr auto Finished = 0x28; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionPanner {
		constexpr auto Coordinate = 0x40; // FExpressionInput
		constexpr auto Time = 0x54; // FExpressionInput
		constexpr auto Speed = 0x68; // FExpressionInput
		constexpr auto SpeedX = 0x7c; // float
		constexpr auto SpeedY = 0x80; // float
		constexpr auto ConstCoordinate = 0x84; // uint32_t
		constexpr auto bFractionalPart = 0x88; // bool
	}

	namespace n_USkyLightComponent {
		constexpr auto SourceType = 0x268; // ESkyLightSourceType
		constexpr auto Cubemap = 0x270; // UTextureCube*
		constexpr auto SourceCubemapAngle = 0x278; // float
		constexpr auto CubemapResolution = 0x27c; // int32_t
		constexpr auto SkyDistanceThreshold = 0x280; // float
		constexpr auto bCaptureEmissiveOnly = 0x284; // bool
		constexpr auto bLowerHemisphereIsBlack = 0x285; // bool
		constexpr auto LowerHemisphereColor = 0x288; // FLinearColor
		constexpr auto bAffectDynamicIndirectLighting = 0x298; // char : 1
		constexpr auto OcclusionMaxDistance = 0x29c; // float
		constexpr auto Contrast = 0x2a0; // float
		constexpr auto OcclusionExponent = 0x2a4; // float
		constexpr auto OcclusionFoliageTint = 0x2a8; // FColor
		constexpr auto MinOcclusion = 0x2ac; // float
		constexpr auto OcclusionBarkTint = 0x2b0; // FColor
		constexpr auto OcclusionTint = 0x2b4; // FColor
		constexpr auto OcclusionCombineMode = 0x2b8; // EOcclusionCombineMode
		constexpr auto SpecularOcclusionMode = 0x2b9; // ESpecularOcclusionMode
		constexpr auto SpecularOcclusionStrength = 0x2bc; // float
		constexpr auto SelfShadowBiasForObjectAO = 0x2c0; // float
		constexpr auto OcclusionTranslucencyForTwoSidedFoliages = 0x2c4; // float
		constexpr auto BlendDestinationCubemap = 0x388; // UTextureCube*
	}

	namespace n_UCameraModifier {
		constexpr auto bDebug = 0x28; // char : 1
		constexpr auto bExclusive = 0x28; // char : 1
		constexpr auto Priority = 0x2c; // char
		constexpr auto CameraOwner = 0x30; // APlayerCameraManager*
		constexpr auto AlphaInTime = 0x38; // float
		constexpr auto AlphaOutTime = 0x3c; // float
		constexpr auto ALPHA = 0x40; // float
	}

	namespace n_UMaterialExpressionSkyAtmosphereLightDiskLuminance {
		constexpr auto LightIndex = 0x40; // int32_t
	}

	namespace n_UInheritableComponentHandler {
		constexpr auto Records = 0x28; // TArray<FComponentOverrideRecord>
		constexpr auto UnnecessaryComponents = 0x38; // TArray<UActorComponent*>
	}

	namespace n_UWrapBox {
		constexpr auto InnerSlotPadding = 0x120; // FVector2D
		constexpr auto WrapWidth = 0x128; // float
		constexpr auto bExplicitWrapWidth = 0x12c; // bool
		constexpr auto HorizontalAlignment = 0x12d; // EHorizontalAlignment
	}

	namespace n_UBasicReplicationGraph {
		constexpr auto GridNode = 0x578; // UReplicationGraphNode_GridSpatialization2D*
		constexpr auto AlwaysRelevantNode = 0x580; // UReplicationGraphNode_ActorList*
		constexpr auto AlwaysRelevantForConnectionList = 0x588; // TArray<FConnectionAlwaysRelevantNodePair>
		constexpr auto ActorsWithoutNetConnection = 0x598; // TArray<AActor*>
	}

	namespace n_UParticleModuleParameterDynamic {
		constexpr auto DynamicParams = 0x30; // TArray<FEmitterDynamicParameter>
		constexpr auto UpdateFlags = 0x40; // int32_t
		constexpr auto bUsesVelocity = 0x44; // char : 1
	}

	namespace n_USettingSubButtonWidget_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Border = 0x250; // UBorder*
		constexpr auto Button_222 = 0x258; // UButton*
		constexpr auto Image_192 = 0x260; // UImage*
		constexpr auto Title_Text = 0x268; // UTextBlock*
		constexpr auto Index = 0x270; // int32_t
		constexpr auto DeActive = 0x274; // FLinearColor
		constexpr auto Active = 0x284; // FLinearColor
		constexpr auto ClickEventDispatcher = 0x298; // FMulticastInlineDelegate
		constexpr auto Title = 0x2a8; // FText
		constexpr auto Type = 0x2c0; // ESettingBigType
		constexpr auto IsActive = 0x2c1; // bool
		constexpr auto Over = 0x2c4; // FLinearColor
	}

	namespace n_UCoherentUIGTSettings {
		constexpr auto EnableLiveReload = 0x28; // bool
		constexpr auto InspectorPort = 0x2c; // int32_t
		constexpr auto WebdriverPort = 0x30; // int32_t
		constexpr auto EnableWebSecurity = 0x34; // bool
		constexpr auto EnableLocalization = 0x35; // bool
		constexpr auto RunAsynchronous = 0x36; // bool
		constexpr auto AllowPerformanceWarningsInEditor = 0x37; // bool
		constexpr auto ShowWarningsOnScreen = 0x38; // bool
		constexpr auto LogSeverity = 0x39; // ECoherentUIGTSettingsSeverity
		constexpr auto bPaintToBackBuffer = 0x3a; // bool
		constexpr auto bRespectTitleSafeZone = 0x3b; // bool
		constexpr auto bRespectLetterboxing = 0x3c; // bool
		constexpr auto HUDMaterialName = 0x40; // FString
		constexpr auto CoUIResourcesRoot = 0x50; // FString
		constexpr auto TickWhileGameIsPaused = 0x60; // bool
		constexpr auto bUseLowerCaseNamesForAutoExposedProperties = 0x61; // bool
		constexpr auto MSAA = 0x62; // ECoherentUIGTMSAA
		constexpr auto CookiesResource = 0x68; // FString
		constexpr auto LocalStorageFolder = 0x78; // FString
		constexpr auto UseCacheFile = 0x88; // bool
		constexpr auto UseReceivedFromServerUrl = 0x89; // bool
	}

	namespace n_UNiagaraDataInterfaceTexture {
		constexpr auto Texture = 0x30; // UTexture*
	}

	namespace n_UPostEventAtLocationAsync {
		constexpr auto Completed = 0x30; // FMulticastInlineDelegate
	}

	namespace n_UAISense {
		constexpr auto DefaultExpirationAge = 0x28; // float
		constexpr auto NotifyType = 0x2c; // EAISenseNotifyType
		constexpr auto bWantsNewPawnNotification = 0x30; // char : 1
		constexpr auto bAutoRegisterAllPawnsAsSources = 0x30; // char : 1
		constexpr auto PerceptionSystemInstance = 0x38; // UAIPerceptionSystem*
	}

	namespace n_UPhysicalMaterialMask {
		constexpr auto UVChannelIndex = 0x28; // int32_t
		constexpr auto AddressX = 0x2c; // TextureAddress
		constexpr auto AddressY = 0x2d; // TextureAddress
	}

	namespace n_UParticleModuleMeshMaterial {
		constexpr auto MeshMaterials = 0x30; // TArray<UMaterialInterface*>
	}

	namespace n_UParticleModuleEventReceiverKillParticles {
		constexpr auto bStopSpawning = 0x40; // char : 1
	}

	namespace n_UAnimNotifyState_TimedParticleEffect {
		constexpr auto PSTemplate = 0x30; // UParticleSystem*
		constexpr auto SocketName = 0x38; // FName
		constexpr auto LocationOffset = 0x40; // FVector
		constexpr auto RotationOffset = 0x4c; // FRotator
		constexpr auto bDestroyAtEnd = 0x58; // bool
	}

	namespace n_UDeviceProfileManager {
		constexpr auto Profiles = 0x28; // TArray<UObject*>
	}

	namespace n_UInterpGroupCamera {
		constexpr auto CameraAnimInst = 0x50; // UCameraAnim*
		constexpr auto CompressTolerance = 0x58; // float
	}

	namespace n_UAISenseConfig {
		constexpr auto DebugColor = 0x28; // FColor
		constexpr auto MaxAge = 0x2c; // float
		constexpr auto bStartsEnabled = 0x30; // char : 1
	}

	namespace n_UNiagaraDataInterfaceVectorField {
		constexpr auto Field = 0x30; // UVectorField*
		constexpr auto bTileX = 0x38; // bool
		constexpr auto bTileY = 0x39; // bool
		constexpr auto bTileZ = 0x3a; // bool
	}

	namespace n_UUW-ScenarioQuest_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto EndQuest = 0x250; // UWidgetAnimation*
		constexpr auto StartQuest = 0x258; // UWidgetAnimation*
		constexpr auto Idle = 0x260; // UWidgetAnimation*
		constexpr auto Bg = 0x268; // UImage*
		constexpr auto Image_308 = 0x270; // UImage*
		constexpr auto Image_697 = 0x278; // UImage*
		constexpr auto Image_839 = 0x280; // UImage*
		constexpr auto TextBlock_QuestDesc = 0x288; // UTextBlock*
		constexpr auto TextBlock_QuestTitle = 0x290; // UTextBlock*
		constexpr auto UW-ScenarioQuestCell = 0x298; // UUW-ScenarioQuestCell_C*
		constexpr auto UW-ScenarioQuestCell_2 = 0x2a0; // UUW-ScenarioQuestCell_C*
		constexpr auto UW-ScenarioQuestCell_94 = 0x2a8; // UUW-ScenarioQuestCell_C*
		constexpr auto VerticalBox_Tasks = 0x2b0; // UVerticalBox*
		constexpr auto QuestInfo = 0x2b8; // FQuestInfo
		constexpr auto QuestData = 0x2e8; // FQuestData
		constexpr auto ActiveQuest = 0x340; // bool
		constexpr auto PendingQuestInfo = 0x348; // TArray<FQuestInfo>
	}

	namespace n_UAsyncActionLoadPrimaryAssetClass {
		constexpr auto Completed = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UAISystem {
		constexpr auto PerceptionSystemClassName = 0x58; // FSoftClassPath
		constexpr auto HotSpotManagerClassName = 0x70; // FSoftClassPath
		constexpr auto AcceptanceRadius = 0x88; // float
		constexpr auto PathfollowingRegularPathPointAcceptanceRadius = 0x8c; // float
		constexpr auto PathfollowingNavLinkAcceptanceRadius = 0x90; // float
		constexpr auto bFinishMoveOnGoalOverlap = 0x94; // bool
		constexpr auto bAcceptPartialPaths = 0x95; // bool
		constexpr auto bAllowStrafing = 0x96; // bool
		constexpr auto bEnableBTAITasks = 0x97; // bool
		constexpr auto bAllowControllersAsEQSQuerier = 0x98; // bool
		constexpr auto bEnableDebuggerPlugin = 0x99; // bool
		constexpr auto bForgetStaleActors = 0x9a; // bool
		constexpr auto DefaultSightCollisionChannel = 0x9b; // ECollisionChannel
		constexpr auto BehaviorTreeManager = 0xa0; // UBehaviorTreeManager*
		constexpr auto EnvironmentQueryManager = 0xa8; // UEnvQueryManager*
		constexpr auto PerceptionSystem = 0xb0; // UAIPerceptionSystem*
		constexpr auto AllProxyObjects = 0xb8; // TArray<UAIAsyncTaskBlueprintProxy*>
		constexpr auto HotSpotManager = 0xc8; // UAIHotSpotManager*
		constexpr auto NavLocalGrids = 0xd0; // UNavLocalGridManager*
	}

	namespace n_UMaterialExpressionFresnel {
		constexpr auto ExponentIn = 0x40; // FExpressionInput
		constexpr auto Exponent = 0x54; // float
		constexpr auto BaseReflectFractionIn = 0x58; // FExpressionInput
		constexpr auto BaseReflectFraction = 0x6c; // float
		constexpr auto Normal = 0x70; // FExpressionInput
	}

	namespace n_UMaterialExpressionDynamicParameter {
		constexpr auto ParamNames = 0x40; // TArray<FString>
		constexpr auto DefaultValue = 0x50; // FLinearColor
		constexpr auto ParameterIndex = 0x60; // uint32_t
	}

	namespace n_UHorizontalBoxSlot {
		constexpr auto Padding = 0x40; // FMargin
		constexpr auto Size = 0x50; // FSlateChildSize
		constexpr auto HorizontalAlignment = 0x58; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x59; // EVerticalAlignment
	}

	namespace n_UFieldSystemMetaDataIteration {
		constexpr auto Iterations = 0xb0; // int32_t
	}

	namespace n_USoundNodeSoundClass {
		constexpr auto SoundClassOverride = 0x48; // USoundClass*
	}

	namespace n_UNiagaraLightRendererProperties {
		constexpr auto bUseInverseSquaredFalloff = 0x50; // char : 1
		constexpr auto bAffectsTranslucency = 0x50; // char : 1
		constexpr auto bOverrideRenderingEnabled = 0x50; // char : 1
		constexpr auto RadiusScale = 0x54; // float
		constexpr auto ColorAdd = 0x58; // FVector
		constexpr auto LightRenderingEnabledBinding = 0x68; // FNiagaraVariableAttributeBinding
		constexpr auto LightExponentBinding = 0xe0; // FNiagaraVariableAttributeBinding
		constexpr auto PositionBinding = 0x158; // FNiagaraVariableAttributeBinding
		constexpr auto ColorBinding = 0x1d0; // FNiagaraVariableAttributeBinding
		constexpr auto RadiusBinding = 0x248; // FNiagaraVariableAttributeBinding
		constexpr auto VolumetricScatteringBinding = 0x2c0; // FNiagaraVariableAttributeBinding
	}

	namespace n_UNavigationPath {
		constexpr auto PathUpdatedNotifier = 0x28; // FMulticastInlineDelegate
		constexpr auto PathPoints = 0x38; // TArray<FVector>
		constexpr auto RecalculateOnInvalidation = 0x48; // ENavigationOptionFlag
	}

	namespace n_UMagicLeapSettings {
		constexpr auto bEnableZI = 0x28; // bool
		constexpr auto bUseVulkanForZI = 0x29; // bool
		constexpr auto bUseMLAudioForZI = 0x2a; // bool
	}

	namespace n_UDatasmithGLTFSceneImportData {
		constexpr auto Generator = 0x28; // FString
		constexpr auto Version = 0x38; // float
		constexpr auto Author = 0x40; // FString
		constexpr auto License = 0x50; // FString
		constexpr auto Source = 0x60; // FString
	}

	namespace n_UTexture2D {
		constexpr auto LevelIndex = 0xb8; // int32_t
		constexpr auto FirstResourceMemMip = 0xbc; // int32_t
		constexpr auto bTemporarilyDisableStreaming = 0xc0; // char : 1
		constexpr auto AddressX = 0xc1; // TextureAddress
		constexpr auto AddressY = 0xc2; // TextureAddress
		constexpr auto ImportedSize = 0xc4; // FIntPoint
	}

	namespace n_URuntimeVirtualTextureComponent {
		constexpr auto VirtualTexture = 0x230; // URuntimeVirtualTexture*
		constexpr auto bUseStreamingLowMipsInEditor = 0x238; // bool
		constexpr auto BoundsSourceActor = 0x240; // AActor*
	}

	namespace n_UMovieSceneSignedObject {
		constexpr auto Signature = 0x28; // FGuid
	}

	namespace n_USubmixEffectSubmixEQPreset {
		constexpr auto Settings = 0x78; // FSubmixEffectSubmixEQSettings
	}

	namespace n_UBHPersonalSupplySystemComponent {
		constexpr auto CurrentSupplyBox = 0xc0; // ABHPersonalSupplyBox*
		constexpr auto CurrentSupplyBoxDummy = 0xc8; // ABHPersonalSupplyBoxDummy*
		constexpr auto SupplyBoxClass = 0xd0; // ABHPersonalSupplyBox*
		constexpr auto SupplyBoxDummyClass = 0xd8; // ABHPersonalSupplyBoxDummy*
		constexpr auto CurrentAssignmentInfo = 0xe0; // FSupplyBoxAssignmentInfo
		constexpr auto CountOpenSupplyBox = 0x110; // int32_t
		constexpr auto SupplyBoxCost = 0x114; // int32_t
		constexpr auto CurrentPSBState = 0x118; // EPersonalSupplyBoxState
		constexpr auto AssignReason = 0x119; // EAssignReason
		constexpr auto ShowPingByHUD = 0x122; // bool
	}

	namespace n_ULandscapeSplinesComponent {
		constexpr auto ControlPoints = 0x4b0; // TArray<ULandscapeSplineControlPoint*>
		constexpr auto Segments = 0x4c0; // TArray<ULandscapeSplineSegment*>
		constexpr auto CookedForeignMeshComponents = 0x4d0; // TArray<UMeshComponent*>
	}

	namespace n_UToIntegerField {
		constexpr auto FloatField = 0xb0; // UFieldNodeFloat*
	}

	namespace n_AGameMode {
		constexpr auto MatchState = 0x3b8; // FName
		constexpr auto bDelayedStart = 0x3c0; // char : 1
		constexpr auto NumSpectators = 0x3c4; // int32_t
		constexpr auto NumPlayers = 0x3c8; // int32_t
		constexpr auto NumBots = 0x3cc; // int32_t
		constexpr auto MinRespawnDelay = 0x3d0; // float
		constexpr auto NumTravellingPlayers = 0x3d4; // int32_t
		constexpr auto EngineMessageClass = 0x3d8; // ULocalMessage*
		constexpr auto InactivePlayerArray = 0x3e0; // TArray<APlayerState*>
		constexpr auto InactivePlayerStateLifeSpan = 0x3f0; // float
		constexpr auto MaxInactivePlayers = 0x3f4; // int32_t
		constexpr auto bHandleDedicatedServerReplays = 0x3f8; // bool
	}

	namespace n_UAggregationPipeline {
		constexpr auto Settings = 0x28; // FAggregationPipelineSettings
	}

	namespace n_UBravoHotelAnimInstance {
		constexpr auto bIsVehicleDriver = 0x268; // bool
		constexpr auto MeleeWeapon_Stand_Idle = 0x270; // UAnimSequence*
		constexpr auto CollideUpsideAnim = 0x278; // UAnimSequence*
		constexpr auto bIsFallingOrLanding = 0x280; // bool
		constexpr auto TurnInPlaceBlendInTime = 0x284; // float
		constexpr auto AOS_Weight = 0x288; // float
		constexpr auto VehicleIdleAimOffset = 0x290; // UBlendSpaceBase*
		constexpr auto JumpAnim_Rifle_Moving = 0x2a0; // UAnimSequence*
		constexpr auto bUseFallingAnimation = 0x2a8; // bool
		constexpr auto DescentIdlePicthMin = 0x2ac; // float
		constexpr auto BS_HandlebarVehicle = 0x2b0; // UBlendSpaceBase*
		constexpr auto HeadBangingAnimIndex = 0x2b8; // int32_t
		constexpr auto AS_Ladder_Up_Loop = 0x2c0; // UAnimSequence*
		constexpr auto ThrowingWeapon_Crouch_ThrowUnder_Idle_Additive = 0x2c8; // UAnimSequence*
		constexpr auto ThrowingWeapon_Stand_ThrowUnder_Idle_Additive = 0x2d0; // UAnimSequence*
		constexpr auto JumpAnim_Rifle_NotMoving = 0x2d8; // UAnimSequence*
		constexpr auto LadderIKLocation_FootL = 0x2e4; // FVector
		constexpr auto IsLadderAnim = 0x2f0; // bool
		constexpr auto CriticalTimeIdle = 0x2f8; // UAnimSequence*
		constexpr auto bEnableDriverIK_HandR = 0x304; // bool
		constexpr auto VehicleHandlingRightAnim = 0x308; // UAnimSequence*
		constexpr auto CurrentAOSAnim = 0x310; // UAnimSequence*
		constexpr auto bEnableSprintAimOffset = 0x318; // bool
		constexpr auto DownsideBlendTime = 0x31c; // float
		constexpr auto SprintReadyEnteredTime = 0x324; // float
		constexpr auto TurnInPlaceBlendOutTime = 0x328; // float
		constexpr auto LeanInAir = 0x330; // float
		constexpr auto bIsJumpAttack = 0x338; // bool
		constexpr auto RightSteeringPlayRate = 0x344; // float
		constexpr auto LadderIKLocation_HandR = 0x348; // FVector
		constexpr auto bEnableDriverIK_HandL = 0x354; // bool
		constexpr auto JumpAnimSequence_Rifle = 0x358; // UAnimSequence*
		constexpr auto ThrowingWeapon_Crouch_Idle = 0x360; // UAnimSequence*
		constexpr auto VehicleHandlingLeftAnim = 0x368; // UAnimSequence*
		constexpr auto VehicleAOSBlendingPlayRate = 0x370; // float
		constexpr auto MovementDirection = 0x374; // EMovementDirection
		constexpr auto BS_SprintSpeed = 0x378; // float
		constexpr auto CollideDownsideAnim = 0x380; // UAnimSequence*
		constexpr auto BS_SprintSpeedLimit = 0x388; // float
		constexpr auto AimOffsetInterpSpeed = 0x390; // float
		constexpr auto ThrowingWeapon_Crouch_PinOff_Idle = 0x398; // UAnimSequence*
		constexpr auto WeaponHandAnimAlpha = 0x3a4; // float
		constexpr auto ThrowingWeapon_Prone_PinOff_Idle_ThrowUnder = 0x3a8; // UAnimSequence*
		constexpr auto WeaponHandAnim = 0x3b8; // UAnimSequence*
		constexpr auto CharacterMovementComponent = 0x3c0; // UBravoHotelCharacterMovementComponent*
		constexpr auto bUseVehicleStandAnimation = 0x3c8; // bool
		constexpr auto bIsEquippingThrowWeapon = 0x3c9; // bool
		constexpr auto bIsLocallyPlaying = 0x3d1; // bool
		constexpr auto bIsAirWalking = 0x3d2; // bool
		constexpr auto bIsCriticalTime = 0x3d4; // bool
		constexpr auto bIsLeftSteering = 0x3d6; // bool
		constexpr auto EvaluateAnimSequence = 0x3dc; // float
		constexpr auto bHitPredictedInAirTime = 0x3e4; // bool
		constexpr auto FinalSwimRotation = 0x3e8; // FRotator
		constexpr auto Hurt_Additive_RightHandAlpha = 0x3f4; // float
		constexpr auto bIsAmplifier = 0x3f8; // bool
		constexpr auto VehicleAimBlending = 0x400; // UBlendSpaceBase*
		constexpr auto bIsProneColliding = 0x40c; // bool
		constexpr auto TurnInPlaceRepeatTriggerTime = 0x410; // float
		constexpr auto bIsUnarmedHeadBanging = 0x414; // bool
		constexpr auto ThrowingWeaponState = 0x415; // EThrowingWeaponState
		constexpr auto bUseSpecialProneAnimation = 0x416; // bool
		constexpr auto ThrowWeaponCookingAnimAlpha = 0x418; // float
		constexpr auto CharacterRotationCorrectionValueByLeanState = 0x41c; // FVector2D
		constexpr auto bEnableLadderIK_HandL = 0x428; // bool
		constexpr auto SimpleWeaponAnimType = 0x429; // ESimpleWeaponAnimationType
		constexpr auto MeleeWeapon_Crouch_Idle = 0x430; // UAnimSequence*
		constexpr auto bIsAimingDownside = 0x438; // bool
		constexpr auto bEnableAimOffset = 0x43a; // bool
		constexpr auto JumpAnim_Unarmed_NotMoving = 0x448; // UAnimSequence*
		constexpr auto SpecialProneAnimation = 0x450; // UBlendSpaceBase*
		constexpr auto ParticleSystem_WaterDust = 0x458; // UParticleSystem*
		constexpr auto SwimDirection = 0x460; // float
		constexpr auto FallSpeed = 0x464; // float
		constexpr auto DebuffAlpha_Burn_FullBody = 0x47c; // float
		constexpr auto LadderIKLocation_FootR = 0x480; // FVector
		constexpr auto bUseSprintAnimation = 0x48c; // bool
		constexpr auto DriverAimOffsetAlpha = 0x4a0; // float
		constexpr auto IsLadderSliding = 0x4a4; // bool
		constexpr auto bIsPlayingCollideWeaponMontage = 0x4b0; // bool
		constexpr auto ThrowingWeapon_Stand_Idle_Under = 0x4b8; // UAnimSequence*
		constexpr auto CurrentADSAnim = 0x4c0; // UAnimSequence*
		constexpr auto WeaponCollideAlpha = 0x4c8; // float
		constexpr auto LadderIdleIsLeft = 0x4cc; // bool
		constexpr auto BS_DescentRotationInput = 0x4d0; // float
		constexpr auto VehicleADSBlendTime = 0x4d4; // float
		constexpr auto HeadBangingAlpha = 0x4dc; // float
		constexpr auto HeadBangingCurrentPlayRate = 0x4e0; // float
		constexpr auto LadderIdleMotion = 0x4f4; // bool
		constexpr auto EquipAnimAlpha = 0x4f8; // float
		constexpr auto HandlebarDirection = 0x4fc; // float
		constexpr auto LadderIKLocation_HandL = 0x500; // FVector
		constexpr auto DebuffAlpha_Hurt_Additive = 0x510; // float
		constexpr auto bIsWeaponColliding = 0x514; // bool
		constexpr auto IsPawnOnLadder = 0x515; // bool
		constexpr auto ThrowingWeapon_Prone_Idle = 0x518; // UAnimSequence*
		constexpr auto BS_IdleSpeed = 0x524; // float
		constexpr auto ToCriticalTime = 0x530; // UAnimSequence*
		constexpr auto SwimTransformAlpha = 0x538; // float
		constexpr auto IsVehicleAimingMotion = 0x53c; // bool
		constexpr auto ThrowingWeapon_Stand_PinOff_Idle = 0x540; // UAnimSequence*
		constexpr auto WeaponMontageCollideAlpha = 0x548; // float
		constexpr auto VehicleAnimAOS = 0x550; // UAnimSequence*
		constexpr auto ExplicitTime_FallingAnim = 0x55c; // float
		constexpr auto bUseRightFootAnimation = 0x561; // bool
		constexpr auto MeleeWeapon_Prone_Idle = 0x568; // UAnimSequence*
		constexpr auto GrenadeThrowingType = 0x574; // EGrenadeThrowingType
		constexpr auto SecondaryWeapon_Stand_Idle = 0x578; // UAnimSequence*
		constexpr auto AOS_Weight_InterpSpeed = 0x580; // float
		constexpr auto bIsInVehicle = 0x584; // bool
		constexpr auto bIsMelee = 0x58c; // bool
		constexpr auto VehicleUnderThrowAimOffset = 0x590; // UBlendSpaceBase*
		constexpr auto SecondaryWeapon_Crouch_Idle = 0x5a0; // UAnimSequence*
		constexpr auto bCanEnterSprintReadyState = 0x5ab; // bool
		constexpr auto VehicleUnarmedAnimStand = 0x5c8; // UAnimSequence*
		constexpr auto WeaponHandAnim_InVehicle = 0x5d0; // UAnimSequence*
		constexpr auto bIsIdleSteering = 0x5d8; // bool
		constexpr auto bIsResuscitating = 0x5d9; // bool
		constexpr auto ParachuteInputForward = 0x5dc; // float
		constexpr auto DebuffAlpha_Burn_UpperBody = 0x5ec; // float
		constexpr auto FootPosition = 0x5f4; // float
		constexpr auto JumpAnimSequence_Pistol = 0x5f8; // UAnimSequence*
		constexpr auto HitPredictedZ = 0x600; // float
		constexpr auto bIsFreeLook = 0x604; // bool
		constexpr auto LeftSteeringPlayRate = 0x608; // float
		constexpr auto WaterSurfaceHeight = 0x610; // float
		constexpr auto Resuscitated = 0x618; // UAnimSequence*
		constexpr auto VehicleAnimIdleForMontagePlay = 0x620; // UAnimSequence*
		constexpr auto ParachuteInputRight = 0x628; // float
		constexpr auto Direction = 0x62c; // float
		constexpr auto FallingAnimParams = 0x630; // FBravoHotelFallingAnimParameters
		constexpr auto DebuffAlpha_Hurt_Layered = 0x63c; // float
		constexpr auto WeaponAnimType = 0x640; // EWeaponAnimationType
		constexpr auto bIsProne = 0x648; // bool
		constexpr auto UpperBodySlotAlpha = 0x64c; // float
		constexpr auto bUseVehicleAimingAimOffset = 0x658; // bool
		constexpr auto VehicleHandlingIdleAnim = 0x660; // UAnimSequence*
		constexpr auto LeanAcceleration = 0x674; // float
		constexpr auto SpecialSprintAnimation = 0x680; // UBlendSpaceBase*
		constexpr auto JumpAnim_Pistol_NotMoving = 0x688; // UAnimSequence*
		constexpr auto TurnInPlaceRepeatTimeCrouch = 0x690; // float
		constexpr auto bIsHandlebar = 0x694; // bool
		constexpr auto JumpAnim_Unarmed_Moving = 0x698; // UAnimSequence*
		constexpr auto bIsAccelerating = 0x6a4; // bool
		constexpr auto bUseSpecialSprintAnimation = 0x6a5; // bool
		constexpr auto ThrowingWeapon_Stand_Idle = 0x6a8; // UAnimSequence*
		constexpr auto AimOffsetAlpha = 0x6b0; // float
		constexpr auto bUsePredictedAirTime = 0x6b4; // bool
		constexpr auto RightArmAnimAlpha = 0x6bc; // float
		constexpr auto SpecialSprintReadyAnimation = 0x6c8; // UAnimSequence*
		constexpr auto AimOffset = 0x6d0; // FVector2D
		constexpr auto ThrowingWeapon_Crouch_PinOff_Idle_Additive = 0x6d8; // UAnimSequence*
		constexpr auto CastingRemainTime = 0x6e0; // float
		constexpr auto FootPositionDirection = 0x6e4; // float
		constexpr auto bEnableLadderIK_HandR = 0x6e8; // bool
		constexpr auto TurnInPlaceRepeatTimeProne = 0x6ec; // float
		constexpr auto TurnInPlaceRepeatTime = 0x6f8; // float
		constexpr auto LeanRotation = 0x6fc; // float
		constexpr auto bEnableLadderIK_FootR = 0x704; // bool
		constexpr auto bIsClimbing = 0x705; // bool
		constexpr auto VehicleAimingAimOffset = 0x708; // UBlendSpaceBase*
		constexpr auto LadderBlendTime = 0x720; // float
		constexpr auto ThrowingWeapon_Crouch_ThrowUnder_Idle = 0x728; // UAnimSequence*
		constexpr auto SpecialCrouchSprintAnimation = 0x730; // UBlendSpaceBase*
		constexpr auto JumpAnimSequence_Unarmed = 0x738; // UAnimSequence*
		constexpr auto bIsKnockbackRolling = 0x740; // bool
		constexpr auto TurnInPlaceInfo = 0x748; // FTurnAnims
		constexpr auto ThrowingWeapon_Prone_PinOff_Idle_ThrowOver = 0xb48; // UAnimSequence*
		constexpr auto bIsRightSteering = 0xb50; // bool
		constexpr auto TurnInPlaceRepeatTriggerAngle = 0xb54; // float
		constexpr auto WeaponHandAnim_Crouch = 0xb60; // UAnimSequence*
		constexpr auto bIsADS = 0xb74; // bool
		constexpr auto ThrowingWeapon_Stand_ThrowUnder_Idle = 0xb80; // UAnimSequence*
		constexpr auto VehicleAnimIdle = 0xb88; // UAnimSequence*
		constexpr auto bEnableLadderIK_FootL = 0xb90; // bool
		constexpr auto VehicleUnarmedAnimIdle = 0xb98; // UAnimSequence*
		constexpr auto bMoving = 0xba0; // bool
		constexpr auto bTurnInPlaceRepeatCheat = 0xba1; // bool
		constexpr auto TurnInPlaceRepeatAngle = 0xba4; // float
		constexpr auto bLockRotation = 0xbaa; // bool
		constexpr auto DescentForwardPicthMin = 0xbac; // float
		constexpr auto JumpAnim_Pistol_Moving = 0xbb0; // UAnimSequence*
		constexpr auto ThrowingWeapon_Stand_PinOff_Idle_Additive = 0xbb8; // UAnimSequence*
		constexpr auto VehicleADSBlendDirectTime = 0xbcc; // float
		constexpr auto WeaponHandAnim_Prone = 0xbe0; // UAnimSequence*
		constexpr auto AimOffsetBlendTime = 0xbe8; // float
		constexpr auto WeaponType = 0xbec; // EWeaponType
		constexpr auto CollideProneAnim = 0xbf0; // UAnimSequence*
		constexpr auto Character = 0xc00; // ABravoHotelCharacter*
		constexpr auto bUseSpecialCrouchSprintAnimation = 0xc08; // bool
		constexpr auto bIsSprintStop = 0xc18; // bool
		constexpr auto VehicleAimingBlendTime = 0xc1c; // float
		constexpr auto bUnderWaterSurface = 0xc20; // bool
		constexpr auto IdleNum = 0xc24; // int32_t
		constexpr auto bIsCrouch = 0xc28; // bool
		constexpr auto UseSprintAnimBlendTime = 0xc2c; // float
		constexpr auto DoorAnimAlpha = 0xc30; // float
		constexpr auto VehicleAimingBlendDirectTime = 0xc34; // float
		constexpr auto DescentBackwardMontage = 0xc40; // UAnimMontage*
		constexpr auto bIsPlayingWeaponMontage = 0xc4c; // bool
		constexpr auto HandlebarSpeed = 0xc50; // float
		constexpr auto VehicleAOSBlendingAngle = 0xc54; // float
		constexpr auto bIsParachuteLanding = 0xc58; // bool
		constexpr auto bMovedWhileMontage = 0xc59; // bool
	}

	namespace n_UMKGameInstanceEx {
		constexpr auto ReplayListItemInfos = 0x28; // TArray<FMKReplayListItemInfo>
		constexpr auto OnEnumerateReplayListCompleteEvent = 0x38; // FMulticastInlineDelegate
		constexpr auto OnDeleteReplayCompleteEvent = 0x48; // FMulticastInlineDelegate
		constexpr auto OnKeepAndDeleteOldetsReplaysCompleteEvent = 0x58; // FMulticastInlineDelegate
		constexpr auto OnKeepAndDeleteOldVersionReplaysCompleteEvent = 0x68; // FMulticastInlineDelegate
		constexpr auto SelfGameInstance = 0x80; // UGameInstance*
		constexpr auto bLoadingWidgetVisible = 0x88; // bool
	}

	namespace n_UPlatformInterfaceWebResponse {
		constexpr auto OriginalURL = 0x28; // FString
		constexpr auto responsecode = 0x38; // int32_t
		constexpr auto Tag = 0x3c; // int32_t
		constexpr auto StringResponse = 0x40; // FString
		constexpr auto BinaryResponse = 0x50; // TArray<char>
	}

	namespace n_UBravoHotelAnimNotifyState_Melee {
		constexpr auto UpdateFrequency = 0x30; // float
		constexpr auto TraceStartSocketName = 0x34; // FName
		constexpr auto TraceEndSocketName = 0x3c; // FName
		constexpr auto TraceRadius = 0x44; // float
		constexpr auto ApplyDamage_EndTime = 0x48; // float
	}

	namespace n_UScrollBarWidgetStyle {
		constexpr auto ScrollBarStyle = 0x30; // FScrollBarStyle
	}

	namespace n_UInterpTrackFloatBase {
		constexpr auto FloatTrack = 0x70; // FInterpCurveFloat
		constexpr auto CurveTension = 0x88; // float
	}

	namespace n_UParticleModuleBeamModifier {
		constexpr auto ModifierType = 0x30; // BeamModifierType
		constexpr auto PositionOptions = 0x34; // FBeamModifierOptions
		constexpr auto Position = 0x38; // FRawDistributionVector
		constexpr auto TangentOptions = 0x80; // FBeamModifierOptions
		constexpr auto Tangent = 0x88; // FRawDistributionVector
		constexpr auto bAbsoluteTangent = 0xd0; // char : 1
		constexpr auto StrengthOptions = 0xd4; // FBeamModifierOptions
		constexpr auto Strength = 0xd8; // FRawDistributionFloat
	}

	namespace n_UBaseBrushTool {
		constexpr auto BrushProperties = 0xc0; // UBrushBaseProperties*
		constexpr auto bInBrushStroke = 0xc8; // bool
		constexpr auto LastBrushStamp = 0xcc; // FBrushStampData
		constexpr auto PropertyClass = 0x188; // TSoftClassPtr<UObject>
		constexpr auto BrushStampIndicator = 0x1b0; // UBrushStampIndicator*
	}

	namespace n_UControlWidget_C {
		constexpr auto UberGraphFrame = 0x298; // FPointerToUberGraphFrame
		constexpr auto 15XSensitivity = 0x2a0; // USlotItemWidget_C*
		constexpr auto 2XSensitivity = 0x2a8; // USlotItemWidget_C*
		constexpr auto 4XSensitivity = 0x2b0; // USlotItemWidget_C*
		constexpr auto 6XSensitivity = 0x2b8; // USlotItemWidget_C*
		constexpr auto 8XSensitivity = 0x2c0; // USlotItemWidget_C*
		constexpr auto ADSSensitivity = 0x2c8; // USlotItemWidget_C*
		constexpr auto GeneralSensitivity = 0x2d0; // USlotItemWidget_C*
		constexpr auto ReverseLeftAndRight = 0x2d8; // USlotItemWidget_C*
		constexpr auto ReverseUpAndDown = 0x2e0; // USlotItemWidget_C*
		constexpr auto ScrollBox_55 = 0x2e8; // UScrollBox*
		constexpr auto TargetingSensitivity = 0x2f0; // USlotItemWidget_C*
		constexpr auto ToggleADS = 0x2f8; // USlotItemWidget_C*
		constexpr auto ToggleAOS = 0x300; // USlotItemWidget_C*
		constexpr auto ToggleCrouch = 0x308; // USlotItemWidget_C*
		constexpr auto ToggleExLean = 0x310; // USlotItemWidget_C*
		constexpr auto ToggleFreeLook = 0x318; // USlotItemWidget_C*
		constexpr auto ToggleSprint = 0x320; // USlotItemWidget_C*
		constexpr auto ToggleSteadyAim = 0x328; // USlotItemWidget_C*
		constexpr auto ToggleWalk = 0x330; // USlotItemWidget_C*
		constexpr auto TotalSensitivity = 0x338; // USlotItemWidget_C*
		constexpr auto UsingDetailSensitivity = 0x340; // USlotItemWidget_C*
		constexpr auto VehicleDriverSensitivity = 0x348; // USlotItemWidget_C*
		constexpr auto VerticalBox_1 = 0x350; // UVerticalBox*
		constexpr auto VerticlaModifier = 0x358; // USlotItemWidget_C*
		constexpr auto Wi = 0x360; // USubTitleSlotWidget_C*
		constexpr auto S*5Û = 0x368; // USubTitleSlotWidget_C*
		constexpr auto Û = 0x370; // USubTitleSlotWidget_C*
		constexpr auto ScrollBarTimer = 0x378; // FTimerHandle
	}

	namespace n_UUW-DeathUserWidget_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto EnemySkull = 0x250; // UWidgetAnimation*
		constexpr auto Image_436 = 0x258; // UImage*
		constexpr auto Pawn = 0x260; // AActor*
	}

	namespace n_UAsyncActionLoadPrimaryAssetClassList {
		constexpr auto Completed = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionTime {
		constexpr auto bIgnorePause = 0x40; // char : 1
		constexpr auto bOverride_Period = 0x40; // char : 1
		constexpr auto Period = 0x44; // float
	}

	namespace n_UReplaySampleBase {
		constexpr auto DataVersion = 0x30; // char
		constexpr auto Time = 0x34; // float
	}

	namespace n_UPawnAction_Move {
		constexpr auto GoalActor = 0x98; // AActor*
		constexpr auto GoalLocation = 0xa0; // FVector
		constexpr auto AcceptableRadius = 0xac; // float
		constexpr auto FilterClass = 0xb0; // UNavigationQueryFilter*
		constexpr auto bAllowStrafe = 0xb8; // char : 1
		constexpr auto bFinishOnOverlap = 0xb8; // char : 1
		constexpr auto bUsePathfinding = 0xb8; // char : 1
		constexpr auto bAllowPartialPath = 0xb8; // char : 1
		constexpr auto bProjectGoalToNavigation = 0xb8; // char : 1
		constexpr auto bUpdatePathToGoal = 0xb8; // char : 1
		constexpr auto bAbortChildActionOnPathChange = 0xb8; // char : 1
	}

	namespace n_UAnimCompress_RemoveTrivialKeys {
		constexpr auto MaxPosDiff = 0x40; // float
		constexpr auto MaxAngleDiff = 0x44; // float
		constexpr auto MaxScaleDiff = 0x48; // float
	}

	namespace n_UButton {
		constexpr auto Style = 0x160; // USlateWidgetStyleAsset*
		constexpr auto WidgetStyle = 0x168; // FButtonStyle
		constexpr auto ColorAndOpacity = 0x3e0; // FLinearColor
		constexpr auto BackgroundColor = 0x3f0; // FLinearColor
		constexpr auto ClickMethod = 0x400; // EButtonClickMethod
		constexpr auto TouchMethod = 0x401; // EButtonTouchMethod
		constexpr auto PressMethod = 0x402; // EButtonPressMethod
		constexpr auto IsFocusable = 0x403; // bool
		constexpr auto OnClicked = 0x408; // FMulticastInlineDelegate
		constexpr auto OnPressed = 0x418; // FMulticastInlineDelegate
		constexpr auto OnReleased = 0x428; // FMulticastInlineDelegate
		constexpr auto OnHovered = 0x438; // FMulticastInlineDelegate
		constexpr auto OnUnhovered = 0x448; // FMulticastInlineDelegate
	}

	namespace n_USynth2DSlider {
		constexpr auto ValueX = 0x108; // float
		constexpr auto ValueY = 0x10c; // float
		constexpr auto ValueXDelegate = 0x110; // FDelegate
		constexpr auto ValueYDelegate = 0x120; // FDelegate
		constexpr auto WidgetStyle = 0x130; // FSynth2DSliderStyle
		constexpr auto SliderHandleColor = 0x3e8; // FLinearColor
		constexpr auto IndentHandle = 0x3f8; // bool
		constexpr auto Locked = 0x3f9; // bool
		constexpr auto StepSize = 0x3fc; // float
		constexpr auto IsFocusable = 0x400; // bool
		constexpr auto OnMouseCaptureBegin = 0x408; // FMulticastInlineDelegate
		constexpr auto OnMouseCaptureEnd = 0x418; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureBegin = 0x428; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureEnd = 0x438; // FMulticastInlineDelegate
		constexpr auto OnValueChangedX = 0x448; // FMulticastInlineDelegate
		constexpr auto OnValueChangedY = 0x458; // FMulticastInlineDelegate
	}

	namespace n_UEnvQueryTest_Project {
		constexpr auto ProjectionData = 0x1f8; // FEnvTraceData
	}

	namespace n_UBravoHotelAudioEventDescription {
		constexpr auto EventAssetDataMap = 0x30; // TMap<TSoftObjectPtr<UAkAudioEvent>, FAudioEventAssetData>
	}

	namespace n_UOculusMR_BoundaryMeshComponent {
		constexpr auto BoundaryType = 0x4e0; // EOculusMR_BoundaryType
		constexpr auto BottomZ = 0x4e4; // float
		constexpr auto TopZ = 0x4e8; // float
		constexpr auto WhiteMaterial = 0x4f0; // UMaterial*
		constexpr auto CastingCameraActor = 0x4f8; // AOculusMR_CastingCameraActor*
	}

	namespace n_ABravoHotelBlueZone {
		constexpr auto BlueZoneMesh = 0x318; // UStaticMeshComponent*
		constexpr auto PainCausingComponent = 0x320; // UBravoHotelPainCausingComponent*
		constexpr auto TransportPawnClass = 0x328; // APawn*
		constexpr auto CurrentPhase = 0x330; // int32_t
		constexpr auto OriginSurvivalCirclePos = 0x334; // FVector
		constexpr auto OriginSurvivalCircleRadius = 0x340; // float
		constexpr auto TargetSurvivalCirclePos = 0x344; // FVector
		constexpr auto TargetSurvivalCircleRadius = 0x350; // float
		constexpr auto TimeToStartShrinking = 0x354; // float
		constexpr auto TimeToEndShrinking = 0x358; // float
		constexpr auto eState = 0x35c; // EBluseZoneState
		constexpr auto IsVisibleTargetCircle = 0x35d; // bool
		constexpr auto IsVisibleBlueZone = 0x35e; // bool
		constexpr auto CurrentSurvivalCirclePos = 0x370; // FVector
		constexpr auto CurrentSurvivalCircleRadius = 0x37c; // float
		constexpr auto OnBlueZoneStateChanged = 0x380; // FMulticastInlineDelegate
		constexpr auto OnSurvivalCirclePhaseChanged = 0x390; // FMulticastInlineDelegate
		constexpr auto OnBlueZoneEnd = 0x3a0; // FMulticastInlineDelegate
		constexpr auto DefaultRadiusRate = 0x3b0; // float
		constexpr auto GameData = 0x3b8; // FBravoHotelGameData
		constexpr auto SetVisibleBlueZone = 0x6d8; // bool
		constexpr auto WeightMapInfo = 0x6f0; // UBravoHotelWeightMapData*
		constexpr auto InBlueZoneCharacters = 0x730; // TArray<ABravoHotelCharacter*>
		constexpr auto OutBlueZoneCharacters = 0x740; // TArray<ABravoHotelCharacter*>
		constexpr auto OuterCirclePos = 0x7a0; // FVector2D
		constexpr auto SelectedPlayZoneName = 0x7a8; // FName
		constexpr auto SelectedPlayZoneInfoIndex = 0x7b0; // int32_t
		constexpr auto ClientPlayZonePhaseList = 0x7b8; // TArray<FBattleRoyalPhaseInfo>
	}

	namespace n_UBravoHotelCheatManager {
		constexpr auto OpenedWidget = 0x78; // UUserWidget*
	}

	namespace n_UProceduralFoliageSpawner {
		constexpr auto RandomSeed = 0x28; // int32_t
		constexpr auto TileSize = 0x2c; // float
		constexpr auto NumUniqueTiles = 0x30; // int32_t
		constexpr auto MinimumQuadTreeSize = 0x34; // float
		constexpr auto FoliageTypes = 0x40; // TArray<FFoliageTypeObject>
	}

	namespace n_UProjectileTrajectoryComponent_C {
		constexpr auto UberGraphFrame = 0xb0; // FPointerToUberGraphFrame
		constexpr auto BeamsArray = 0xb8; // TArray<UParticleSystemComponent*>
		constexpr auto Decal = 0xc8; // UDecalComponent*
		constexpr auto StartLocation = 0xd0; // FVector
		constexpr auto InitialVelocity = 0xdc; // FVector
		constexpr auto PathLifeTime = 0xe8; // float
		constexpr auto TimeInterval = 0xec; // float
		constexpr auto DrawingType = 0xf0; // E_DrawingType
		constexpr auto DesiredStartLocation = 0xf4; // FVector
		constexpr auto InitialLocalVelocity = 0x100; // FVector
		constexpr auto BeamParticle = 0x110; // UParticleSystem*
		constexpr auto DebugColor = 0x118; // FLinearColor
		constexpr auto DebugThickness = 0x128; // float
		constexpr auto ParticleColor = 0x12c; // FLinearColor
		constexpr auto ParticleColorMultipler = 0x13c; // float
		constexpr auto DecalMaterial = 0x140; // UMaterialInterface*
		constexpr auto DecalColor = 0x148; // FLinearColor
		constexpr auto DecalScale = 0x158; // FVector
		constexpr auto ConstantScale? = 0x164; // bool
		constexpr auto ResizerTimer = 0x168; // FTimerHandle
		constexpr auto DecalScaleMin = 0x170; // FVector
		constexpr auto DecalScaleMax = 0x17c; // FVector
		constexpr auto ScaleTime = 0x188; // float
		constexpr auto ScaleStart? = 0x18c; // bool
		constexpr auto Gravity = 0x190; // FVector
		constexpr auto InitXAxisValue = 0x19c; // float
		constexpr auto CreateBeam = 0x1a0; // bool
		constexpr auto HitBeamIndex = 0x1a4; // int32_t
		constexpr auto SplineStaticMesh = 0x1a8; // USplineMeshComponent*
		constexpr auto SplineMeshArray = 0x1b0; // TArray<USplineMeshComponent*>
		constexpr auto SM-IndicatorScale = 0x1c0; // FVector
		constexpr auto SM-Indicator = 0x1d0; // UStaticMeshComponent*
		constexpr auto Hit = 0x1d8; // bool
		constexpr auto bForceStop = 0x1d9; // bool
		constexpr auto FPSMode = 0x1da; // bool
	}

	namespace n_UWBP_SPS_UseItemSelectionIcon_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto IconImage = 0x250; // UImage*
		constexpr auto Hovered = 0x258; // FMulticastInlineDelegate
		constexpr auto Unhovered = 0x268; // FMulticastInlineDelegate
		constexpr auto Pressed = 0x278; // FMulticastInlineDelegate
		constexpr auto SmartPingComponent = 0x288; // USmartPingSystem_C*
		constexpr auto Index = 0x290; // int32_t
		constexpr auto TintColorToUse = 0x294; // FLinearColor
		constexpr auto Found Setting = 0x2a4; // bool
		constexpr auto Settings = 0x2a8; // FBravoHotelSmartPingIconSettings
		constexpr auto TableID = 0x360; // FName
		constexpr auto Image = 0x368; // TSoftObjectPtr<UPaperSprite>
	}

	namespace n_AGameNetworkManager {
		constexpr auto BadPacketLossThreshold = 0x318; // float
		constexpr auto SeverePacketLossThreshold = 0x31c; // float
		constexpr auto BadPingThreshold = 0x320; // int32_t
		constexpr auto SeverePingThreshold = 0x324; // int32_t
		constexpr auto AdjustedNetSpeed = 0x328; // int32_t
		constexpr auto LastNetSpeedUpdateTime = 0x32c; // float
		constexpr auto TotalNetBandwidth = 0x330; // int32_t
		constexpr auto MinDynamicBandwidth = 0x334; // int32_t
		constexpr auto MaxDynamicBandwidth = 0x338; // int32_t
		constexpr auto bIsStandbyCheckingEnabled = 0x33c; // char : 1
		constexpr auto bHasStandbyCheatTriggered = 0x33c; // char : 1
		constexpr auto StandbyRxCheatTime = 0x340; // float
		constexpr auto StandbyTxCheatTime = 0x344; // float
		constexpr auto PercentMissingForRxStandby = 0x348; // float
		constexpr auto PercentMissingForTxStandby = 0x34c; // float
		constexpr auto PercentForBadPing = 0x350; // float
		constexpr auto JoinInProgressStandbyWaitTime = 0x354; // float
		constexpr auto MoveRepSize = 0x358; // float
		constexpr auto MAXPOSITIONERRORSQUARED = 0x35c; // float
		constexpr auto MAXNEARZEROVELOCITYSQUARED = 0x360; // float
		constexpr auto CLIENTADJUSTUPDATECOST = 0x364; // float
		constexpr auto MAXCLIENTUPDATEINTERVAL = 0x368; // float
		constexpr auto MaxClientForcedUpdateDuration = 0x36c; // float
		constexpr auto ServerForcedUpdateHitchThreshold = 0x370; // float
		constexpr auto ServerForcedUpdateHitchCooldown = 0x374; // float
		constexpr auto MaxMoveDeltaTime = 0x378; // float
		constexpr auto MaxClientSmoothingDeltaTime = 0x37c; // float
		constexpr auto ClientNetSendMoveDeltaTime = 0x380; // float
		constexpr auto ClientNetSendMoveDeltaTimeThrottled = 0x384; // float
		constexpr auto ClientNetSendMoveDeltaTimeStationary = 0x388; // float
		constexpr auto ClientNetSendMoveThrottleAtNetSpeed = 0x38c; // int32_t
		constexpr auto ClientNetSendMoveThrottleOverPlayerCount = 0x390; // int32_t
		constexpr auto ClientAuthorativePosition = 0x394; // bool
		constexpr auto ClientErrorUpdateRateLimit = 0x398; // float
		constexpr auto ClientNetCamUpdateDeltaTime = 0x39c; // float
		constexpr auto ClientNetCamUpdatePositionLimit = 0x3a0; // float
		constexpr auto bMovementTimeDiscrepancyDetection = 0x3a4; // bool
		constexpr auto bMovementTimeDiscrepancyResolution = 0x3a5; // bool
		constexpr auto MovementTimeDiscrepancyMaxTimeMargin = 0x3a8; // float
		constexpr auto MovementTimeDiscrepancyMinTimeMargin = 0x3ac; // float
		constexpr auto MovementTimeDiscrepancyResolutionRate = 0x3b0; // float
		constexpr auto MovementTimeDiscrepancyDriftAllowance = 0x3b4; // float
		constexpr auto bMovementTimeDiscrepancyForceCorrectionsDuringResolution = 0x3b8; // bool
		constexpr auto bUseDistanceBasedRelevancy = 0x3b9; // bool
	}

	namespace n_UAkSettingsPerUser {
		constexpr auto WwiseProjectPath = 0x28; // FFilePath
		constexpr auto WwiseWindowsInstallationPath = 0x38; // FDirectoryPath
		constexpr auto WwiseMacInstallationPath = 0x48; // FFilePath
		constexpr auto EnableAutomaticAssetSynchronization = 0x58; // bool
		constexpr auto WaapiIPAddress = 0x60; // FString
		constexpr auto WaapiPort = 0x70; // uint32_t
		constexpr auto bAutoConnectToWAAPI = 0x74; // bool
		constexpr auto AutoSyncSelection = 0x75; // bool
		constexpr auto SuppressWwiseProjectPathWarnings = 0x76; // bool
		constexpr auto SoundDataGenerationSkipLanguage = 0x77; // bool
	}

	namespace n_UUW-TopInfoWidget_C {
		constexpr auto UberGraphFrame = 0x278; // FPointerToUberGraphFrame
		constexpr auto Anim_HideWidget = 0x280; // UWidgetAnimation*
		constexpr auto Canvas = 0x288; // UCanvasPanel*
		constexpr auto Canvas_Minimap = 0x290; // UCanvasPanel*
		constexpr auto CanvasPanel_StatupFirst = 0x298; // UCanvasPanel*
		constexpr auto CanvasPanel_StatupThird = 0x2a0; // UCanvasPanel*
		constexpr auto T_GameVersion = 0x2a8; // UTextBlock*
		constexpr auto UW-CastingWidget = 0x2b0; // UUW-CastingWidget_C*
		constexpr auto UW-HUDMessageWidget = 0x2b8; // UUW-HUDMessageWidget_C*
		constexpr auto UW-Inventory_Perk = 0x2c0; // UUW-Inventory_Perk_C*
		constexpr auto UW-ListWidget_DamageLog = 0x2c8; // UUW-ListWidget_C*
		constexpr auto UW-ListWidget_GainPerk = 0x2d0; // UUW-ListWidget_C*
		constexpr auto UW-ListWidget_KillMessage = 0x2d8; // UUW-ListWidget_C*
		constexpr auto UW-MinimapWidget = 0x2e0; // UUW-MinimapWidget_C*
		constexpr auto UW-PlayerInfoWidget_02 = 0x2e8; // UUW-PlayerInfoWidget_Renew_C*
		constexpr auto UW-StatupWidget = 0x2f0; // UUW-StatupWidget_C*
		constexpr auto UW-TeamInfoWidget = 0x2f8; // UUW-TeamInfoWidget_C*
		constexpr auto UW-Volume = 0x300; // UUW-Volume_C*
		constexpr auto Vertical_MinimapAndTeamInfo = 0x308; // UVerticalBox*
		constexpr auto PlayerController = 0x310; // ABravoHotelPlayerController*
		constexpr auto UW-Inventory_ItemSlotHover = 0x318; // UUW-Inventory_ItemSlotHover_C*
		constexpr auto MainWidget = 0x320; // UBravoHotelMainWidget*
		constexpr auto CurrentState = 0x328; // EPlayerState
		constexpr auto LastDisplayAbility = 0x32c; // FDisplayAbility
	}

	namespace n_UGizmoComponentAxisSource {
		constexpr auto Component = 0x30; // USceneComponent*
		constexpr auto AxisIndex = 0x38; // int32_t
		constexpr auto bLocalAxes = 0x3c; // bool
	}

	namespace n_UProxyLODMeshSimplificationSettings {
		constexpr auto ProxyLODMeshReductionModuleName = 0x38; // FName
	}

	namespace n_UGizmoPlaneTranslationParameterSource {
		constexpr auto AxisSource = 0x90; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0xa0; // TScriptInterface<IGizmoTransformSource>
		constexpr auto Parameter = 0xb0; // FVector2D
		constexpr auto LastChange = 0xb8; // FGizmoVec2ParameterChange
		constexpr auto CurTranslationOrigin = 0xc8; // FVector
		constexpr auto CurTranslationNormal = 0xd4; // FVector
		constexpr auto CurTranslationAxisX = 0xe0; // FVector
		constexpr auto CurTranslationAxisY = 0xec; // FVector
		constexpr auto InitialTransform = 0x100; // FTransform
	}

	namespace n_AMKPawnEx {
		constexpr auto SelfPawn = 0x320; // APawn*
	}

	namespace n_UAISenseConfig_Blueprint {
		constexpr auto Implementation = 0x48; // UAISense_Blueprint*
	}

	namespace n_UParticleModuleAttractorPoint {
		constexpr auto Position = 0x30; // FRawDistributionVector
		constexpr auto Range = 0x78; // FRawDistributionFloat
		constexpr auto Strength = 0xa8; // FRawDistributionFloat
		constexpr auto StrengthByDistance = 0xd8; // char : 1
		constexpr auto bAffectBaseVelocity = 0xd8; // char : 1
		constexpr auto bOverrideVelocity = 0xd8; // char : 1
		constexpr auto bUseWorldSpacePosition = 0xd8; // char : 1
		constexpr auto Positive_X = 0xd8; // char : 1
		constexpr auto Positive_Y = 0xd8; // char : 1
		constexpr auto Positive_Z = 0xd8; // char : 1
		constexpr auto Negative_X = 0xd8; // char : 1
		constexpr auto Negative_Y = 0xd9; // char : 1
		constexpr auto Negative_Z = 0xd9; // char : 1
	}

	namespace n_UExcelWorkbook {
		constexpr auto mSheets = 0x28; // TArray<UExcelWorksheet*>
		constexpr auto mActiveSheet = 0x38; // UExcelWorksheet*
	}

	namespace n_UUW-Lobby_ComboBoxItem_C {
		constexpr auto TXT-Item = 0x248; // UTextBlock*
	}

	namespace n_ABP-VehicleWaterPlane_C {
		constexpr auto Box = 0x318; // UBoxComponent*
	}

	namespace n_ARoadActor {
		constexpr auto SplineMeshAxis = 0x318; // ESplineMeshAxis
		constexpr auto LocalOffset = 0x31c; // FVector
		constexpr auto Father = 0x328; // ARoadActor*
		constexpr auto UniqueKey = 0x330; // FString
		constexpr auto Spline = 0x340; // USplineComponent*
		constexpr auto Index = 0x348; // int32_t
		constexpr auto Segmentation = 0x34c; // int32_t
		constexpr auto StepGeneration = 0x350; // int32_t
		constexpr auto Size = 0x354; // float
		constexpr auto RoadMesh = 0x358; // UStaticMesh*
		constexpr auto RoadMeshesComp = 0x360; // TArray<USplineMeshComponent*>
		constexpr auto SideActors = 0x370; // TArray<FSideActorManager>
		constexpr auto SideMeshes = 0x380; // TArray<FSideMeshManager>
		constexpr auto SideCurbs = 0x390; // TArray<FCurbsManager>
	}

	namespace n_UImgMediaSettings {
		constexpr auto DefaultFrameRate = 0x28; // FFrameRate
		constexpr auto CacheBehindPercentage = 0x30; // float
		constexpr auto CacheSizeGB = 0x34; // float
		constexpr auto CacheThreads = 0x38; // int32_t
		constexpr auto CacheThreadStackSizeKB = 0x3c; // int32_t
		constexpr auto GlobalCacheSizeGB = 0x40; // float
		constexpr auto UseGlobalCache = 0x44; // bool
		constexpr auto ExrDecoderThreads = 0x48; // uint32_t
		constexpr auto DefaultProxy = 0x50; // FString
		constexpr auto UseDefaultProxy = 0x60; // bool
	}

	namespace n_URetainerBox {
		constexpr auto RenderOnInvalidation = 0x120; // bool
		constexpr auto RenderOnPhase = 0x121; // bool
		constexpr auto Phase = 0x124; // int32_t
		constexpr auto PhaseCount = 0x128; // int32_t
		constexpr auto EffectMaterial = 0x130; // UMaterialInterface*
		constexpr auto TextureParameter = 0x138; // FName
	}

	namespace n_UBravoHotelDamageType {
		constexpr auto Name = 0x40; // FName
		constexpr auto Names = 0x48; // TArray<FName>
		constexpr auto bApplyHurtCondition = 0x58; // char : 1
		constexpr auto bShouldCalculatePerBoneDamage = 0x58; // char : 1
		constexpr auto bSpawnBlood = 0x58; // char : 1
		constexpr auto bSpawnDust = 0x58; // char : 1
		constexpr auto bPlayDamageEffect = 0x58; // char : 1
		constexpr auto bDrawBloodPostProcess = 0x58; // char : 1
		constexpr auto IconPath = 0x60; // FString
		constexpr auto Icon = 0x70; // TSoftObjectPtr<UPaperSprite>
		constexpr auto CauserText = 0x98; // FText
		constexpr auto MultiplyRatio = 0xb0; // float
	}

	namespace n_UUW-MatchEnd_ItemIcon_C {
		constexpr auto Image_59 = 0x248; // UImage*
		constexpr auto Image_397 = 0x250; // UImage*
		constexpr auto Image_426 = 0x258; // UImage*
	}

	namespace n_UClothPhysicalMeshDataBase_Legacy {
		constexpr auto Vertices = 0x28; // TArray<FVector>
		constexpr auto Normals = 0x38; // TArray<FVector>
		constexpr auto Indices = 0x48; // TArray<uint32_t>
		constexpr auto InverseMasses = 0x58; // TArray<float>
		constexpr auto BoneData = 0x68; // TArray<FClothVertBoneData>
		constexpr auto NumFixedVerts = 0x78; // int32_t
		constexpr auto MaxBoneWeights = 0x7c; // int32_t
		constexpr auto SelfCollisionIndices = 0x80; // TArray<uint32_t>
	}

	namespace n_UBTTask_FSM_RemoveState {
		constexpr auto FSM = 0x98; // UStateMachineComponent*
		constexpr auto TargetFSM = 0xa0; // FName
		constexpr auto StateName = 0xa8; // FName
		constexpr auto Debug = 0xb0; // bool
		constexpr auto ForceSuccess = 0xb1; // bool
	}

	namespace n_ABravoHotelMoveElevator {
		constexpr auto CurrentStateType = 0x320; // EMoveElevatorStateType
		constexpr auto CurrentMovingTime = 0x324; // float
	}

	namespace n_UPacketHandlerProfileConfig {
		constexpr auto Components = 0x28; // TArray<FString>
	}

	namespace n_ABravoHotelProjectileGrenadeDynamite {
		constexpr auto ExplosionGroundDecalMaterial = 0x678; // UMaterialInterface*
		constexpr auto ExplosionGroundDecalSize = 0x680; // FVector
		constexpr auto ExplosionGroundDecalComponent = 0x690; // UDecalComponent*
	}

	namespace n_UTestMovieSceneTrack {
		constexpr auto bHighPassFilter = 0x58; // bool
		constexpr auto SectionArray = 0x60; // TArray<UMovieSceneSection*>
	}

	namespace n_UMovieScene3DConstraintSection {
		constexpr auto ConstraintId = 0xe0; // FGuid
		constexpr auto ConstraintBindingID = 0xf0; // FMovieSceneObjectBindingID
	}

	namespace n_UGridSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
		constexpr auto Row = 0x4c; // int32_t
		constexpr auto RowSpan = 0x50; // int32_t
		constexpr auto Column = 0x54; // int32_t
		constexpr auto ColumnSpan = 0x58; // int32_t
		constexpr auto Layer = 0x5c; // int32_t
		constexpr auto Nudge = 0x60; // FVector2D
	}

	namespace n_UMaterialExpressionCosine {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Period = 0x54; // float
	}

	namespace n_UChat_Message_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Message TextBlock = 0x250; // UTextBlock*
		constexpr auto Username TextBlock = 0x258; // UTextBlock*
		constexpr auto UserName = 0x260; // FText
		constexpr auto Text = 0x278; // FText
		constexpr auto Username Color = 0x290; // FLinearColor
		constexpr auto Message Color = 0x2a0; // FLinearColor
	}

	namespace n_UDrawFrustumComponent {
		constexpr auto FrustumColor = 0x4b0; // FColor
		constexpr auto FrustumAngle = 0x4b4; // float
		constexpr auto FrustumAspectRatio = 0x4b8; // float
		constexpr auto FrustumStartDist = 0x4bc; // float
		constexpr auto FrustumEndDist = 0x4c0; // float
		constexpr auto Texture = 0x4c8; // UTexture*
	}

	namespace n_UJoinSessionCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UInterpData {
		constexpr auto InterpLength = 0x28; // float
		constexpr auto PathBuildTime = 0x2c; // float
		constexpr auto InterpGroups = 0x30; // TArray<UInterpGroup*>
		constexpr auto CurveEdSetup = 0x40; // UInterpCurveEdSetup*
		constexpr auto EdSectionStart = 0x48; // float
		constexpr auto EdSectionEnd = 0x4c; // float
		constexpr auto bShouldBakeAndPrune = 0x50; // char : 1
		constexpr auto CachedDirectorGroup = 0x58; // UInterpGroupDirector*
		constexpr auto AllEventNames = 0x60; // TArray<FName>
	}

	namespace n_ABravoHotelWorldSettings {
		constexpr auto bUseRedZone = 0x4a0; // bool
		constexpr auto SeaLevelZ = 0x4a4; // float
		constexpr auto ProjectileHeightLimit = 0x4a8; // float
		constexpr auto bUseMatchEndSequence = 0x4ac; // bool
		constexpr auto MatchEndSequenceRef = 0x4b0; // ALevelSequenceActor*
		constexpr auto AudioEventDescription = 0x4b8; // UBravoHotelAudioEventDescription*
	}

	namespace n_UUW-Inventory_ItemSlotHover_C {
		constexpr auto UberGraphFrame = 0x280; // FPointerToUberGraphFrame
		constexpr auto UpArrow = 0x288; // UWidgetAnimation*
		constexpr auto FadeIn = 0x290; // UWidgetAnimation*
		constexpr auto Ammo_Compare = 0x298; // UImage*
		constexpr auto Ammo_Value = 0x2a0; // UTextBlock*
		constexpr auto AmmoIcon = 0x2a8; // UImage*
		constexpr auto AmmoInfo = 0x2b0; // UTextBlock*
		constexpr auto Arrow_01 = 0x2b8; // UImage*
		constexpr auto Arrow_02 = 0x2c0; // UImage*
		constexpr auto BuffList = 0x2c8; // UWrapBox*
		constexpr auto BuffList_2 = 0x2d0; // UWrapBox*
		constexpr auto EffectiveRange_Compare = 0x2d8; // UImage*
		constexpr auto EffectiveRange_Value = 0x2e0; // UTextBlock*
		constexpr auto FiringRate_Compare = 0x2e8; // UImage*
		constexpr auto FiringRate_Value = 0x2f0; // UTextBlock*
		constexpr auto HorizontalBox_ItemRarity = 0x2f8; // UHorizontalBox*
		constexpr auto HorizontalBox_MaterialRarity = 0x300; // UHorizontalBox*
		constexpr auto HorizontalBox_WeaponRarity = 0x308; // UHorizontalBox*
		constexpr auto Image = 0x310; // UImage*
		constexpr auto Image_2 = 0x318; // UImage*
		constexpr auto Image_3 = 0x320; // UImage*
		constexpr auto Image_8 = 0x328; // UImage*
		constexpr auto Image_9 = 0x330; // UImage*
		constexpr auto Image_10 = 0x338; // UImage*
		constexpr auto Image_11 = 0x340; // UImage*
		constexpr auto Image_12 = 0x348; // UImage*
		constexpr auto Image_13 = 0x350; // UImage*
		constexpr auto Image_14 = 0x358; // UImage*
		constexpr auto Image_15 = 0x360; // UImage*
		constexpr auto Image_16 = 0x368; // UImage*
		constexpr auto Image_20 = 0x370; // UImage*
		constexpr auto Image_22 = 0x378; // UImage*
		constexpr auto Image_23 = 0x380; // UImage*
		constexpr auto Image_24 = 0x388; // UImage*
		constexpr auto Image_25 = 0x390; // UImage*
		constexpr auto Image_26 = 0x398; // UImage*
		constexpr auto Image_27 = 0x3a0; // UImage*
		constexpr auto Image_28 = 0x3a8; // UImage*
		constexpr auto Image_29 = 0x3b0; // UImage*
		constexpr auto Image_30 = 0x3b8; // UImage*
		constexpr auto Image_31 = 0x3c0; // UImage*
		constexpr auto Image_32 = 0x3c8; // UImage*
		constexpr auto Image_310 = 0x3d0; // UImage*
		constexpr auto Image_557 = 0x3d8; // UImage*
		constexpr auto Image_WeaponLock = 0x3e0; // UImage*
		constexpr auto Img_MaterialBG = 0x3e8; // UImage*
		constexpr auto IMG_MaterialIcon = 0x3f0; // UImage*
		constexpr auto IMG_Stat = 0x3f8; // UImage*
		constexpr auto ItemBg = 0x400; // UImage*
		constexpr auto ItemBg_01 = 0x408; // UImage*
		constexpr auto ItemBg_02 = 0x410; // UImage*
		constexpr auto ItemSlot-BG = 0x418; // UImage*
		constexpr auto ItemSlot-Capacity = 0x420; // UTextBlock*
		constexpr auto ItemSlot-Capacity_2 = 0x428; // UTextBlock*
		constexpr auto ItemSlot-Description = 0x430; // UTextBlock*
		constexpr auto ItemSlot-Description_2 = 0x438; // UTextBlock*
		constexpr auto ItemSlot-ItemImage = 0x440; // UImage*
		constexpr auto ItemSlot-ItemName = 0x448; // UTextBlock*
		constexpr auto ItemSlot-ItemType = 0x450; // UTextBlock*
		constexpr auto ItemSlot-ItemTypeMark = 0x458; // UImage*
		constexpr auto ItemSlotHover = 0x460; // UCanvasPanel*
		constexpr auto PerkBG = 0x468; // UImage*
		constexpr auto PerkImage = 0x470; // UImage*
		constexpr auto PerkLevelText = 0x478; // UTextBlock*
		constexpr auto PerkName = 0x480; // UTextBlock*
		constexpr auto PerkSlotHover = 0x488; // UCanvasPanel*
		constexpr auto PopupHover-BG_2 = 0x490; // UImage*
		constexpr auto Power_Compare = 0x498; // UImage*
		constexpr auto Power_Value = 0x4a0; // UTextBlock*
		constexpr auto SizeBox = 0x4a8; // USizeBox*
		constexpr auto SizeBox_7 = 0x4b0; // USizeBox*
		constexpr auto SizeBox_ComparingText = 0x4b8; // USizeBox*
		constexpr auto SizeBox_ItemDivide = 0x4c0; // USizeBox*
		constexpr auto Stability_Compare = 0x4c8; // UImage*
		constexpr auto Stability_Value = 0x4d0; // UTextBlock*
		constexpr auto StatSlotHover = 0x4d8; // UCanvasPanel*
		constexpr auto T_BindPlayerName = 0x4e0; // UTextBlock*
		constexpr auto T_Material = 0x4e8; // UTextBlock*
		constexpr auto T_MaterialDesc = 0x4f0; // UTextBlock*
		constexpr auto T_PerkDescLv1 = 0x4f8; // UTextBlock*
		constexpr auto T_PerkDescLv2 = 0x500; // UTextBlock*
		constexpr auto T_PerkDescLv3 = 0x508; // UTextBlock*
		constexpr auto T_Stat = 0x510; // UTextBlock*
		constexpr auto T_StatDesc = 0x518; // UTextBlock*
		constexpr auto T_TooltipDesc = 0x520; // URichTextBlock*
		constexpr auto T_UltimateDesc = 0x528; // UTextBlock*
		constexpr auto T_UnlockUltimateLevel = 0x530; // UTextBlock*
		constexpr auto Text_CombineTarget = 0x538; // UTextBlock*
		constexpr auto TextBlock_3 = 0x540; // UTextBlock*
		constexpr auto TextBlock_4 = 0x548; // UTextBlock*
		constexpr auto TextBlock_5 = 0x550; // UTextBlock*
		constexpr auto TextBlock_6 = 0x558; // UTextBlock*
		constexpr auto UpArrowAni = 0x560; // UCanvasPanel*
		constexpr auto UW-Inventory_ItemSlotHover_WeaponSlot = 0x568; // UUW-Inventory_ItemSlotHover_WeaponSlot_C*
		constexpr auto UW-Inventory_ItemSlotHover_WeaponSlot_2 = 0x570; // UUW-Inventory_ItemSlotHover_WeaponSlot_C*
		constexpr auto UW-Inventory_ItemSlotHover_WeaponSlot_C = 0x578; // UUW-Inventory_ItemSlotHover_WeaponSlot_C*
		constexpr auto UW-Inventory_ItemSlotHover_WeaponSlot_C_2 = 0x580; // UUW-Inventory_ItemSlotHover_WeaponSlot_C*
		constexpr auto UW-Inventory_ItemSlotHover_WeaponSlot_C_3 = 0x588; // UUW-Inventory_ItemSlotHover_WeaponSlot_C*
		constexpr auto UW-Inventory_ItemSlotHover_WeaponSlot_C_4 = 0x590; // UUW-Inventory_ItemSlotHover_WeaponSlot_C*
		constexpr auto VerticalBox_3 = 0x598; // UVerticalBox*
		constexpr auto VerticalBox_BuffList = 0x5a0; // UVerticalBox*
		constexpr auto VerticalBox_BuffList_2 = 0x5a8; // UVerticalBox*
		constexpr auto VerticalBox_CombineTarget = 0x5b0; // UVerticalBox*
		constexpr auto VerticalBox_Divide = 0x5b8; // UVerticalBox*
		constexpr auto VerticalBox_ItemDivide = 0x5c0; // UVerticalBox*
		constexpr auto VerticalBox_WeaponBindedInfo = 0x5c8; // UVerticalBox*
		constexpr auto WeaponItemCapacity = 0x5d0; // UTextBlock*
		constexpr auto WeaponItemComparingName = 0x5d8; // UTextBlock*
		constexpr auto WeaponItemDescription = 0x5e0; // UTextBlock*
		constexpr auto WeaponItemImage = 0x5e8; // UImage*
		constexpr auto WeaponItemSlot-BG = 0x5f0; // UImage*
		constexpr auto WeaponItemSlotHover = 0x5f8; // UCanvasPanel*
		constexpr auto WeaponItemType = 0x600; // UTextBlock*
		constexpr auto WeaponLockImage = 0x608; // UImage*
		constexpr auto WeaponName = 0x610; // UTextBlock*
		constexpr auto WidgetSwitcher = 0x618; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_1 = 0x620; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_2 = 0x628; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_3 = 0x630; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_4 = 0x638; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_Main = 0x640; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_PerkUltimate = 0x648; // UWidgetSwitcher*
		constexpr auto ItemInfo = 0x650; // FInventoryItemInfo
		constexpr auto WeaponInfo = 0x6e8; // FBravoHotelWeaponInfo
		constexpr auto bCompare = 0x1210; // bool
		constexpr auto NormalSlateColor = 0x1218; // FSlateColor
		constexpr auto UpSlateColor = 0x1240; // FSlateColor
		constexpr auto DownSlateColor = 0x1268; // FSlateColor
		constexpr auto UpLinearColor = 0x1290; // FLinearColor
		constexpr auto DownLinearColor = 0x12a0; // FLinearColor
		constexpr auto WeaponObjectRef = 0x12b0; // ABravoHotelWeaponBase*
		constexpr auto ItemDetailInfo = 0x12b8; // FInventoryItemDetailInfo
		constexpr auto PerkInfo = 0x1748; // FPerkUIInfo
		constexpr auto PerkData = 0x1778; // FPerkData
		constexpr auto Ammo = 0x1858; // FName
		constexpr auto DragType = 0x1860; // ItemWidgetDragType
		constexpr auto HoveredWidget = 0x1868; // UWidget*
		constexpr auto CurrentShowingWidgetRef = 0x1870; // UUserWidget*
		constexpr auto IsUltimatePerk = 0x1878; // bool
		constexpr auto UltimateName = 0x1880; // FText
		constexpr auto UltimateLinearColor = 0x1898; // FLinearColor
		constexpr auto UltimateImage = 0x18a8; // TSoftObjectPtr<UObject>
		constexpr auto HoverTimerHandle = 0x18d0; // FTimerHandle
		constexpr auto NeedCheckVisibility = 0x18d8; // bool
		constexpr auto IsVisualMode = 0x18d9; // bool
		constexpr auto IsRandomPerk = 0x18da; // bool
		constexpr auto ItemRarityImages = 0x18e0; // TArray<UImage*>
		constexpr auto WeaponRarityImages = 0x18f0; // TArray<UImage*>
	}

	namespace n_UBP-LobbyWidget_Web_C {
		constexpr auto UberGraphFrame = 0x4d8; // FPointerToUberGraphFrame
		constexpr auto FadeOutNotice = 0x4e0; // UWidgetAnimation*
		constexpr auto Bg = 0x4e8; // UImage*
		constexpr auto Bg_2 = 0x4f0; // UImage*
		constexpr auto CanvasPanel_GameNotice = 0x4f8; // UCanvasPanel*
		constexpr auto CanvasPanel_PrefetchingProgress = 0x500; // UCanvasPanel*
		constexpr auto Image = 0x508; // UImage*
		constexpr auto Image_145 = 0x510; // UImage*
		constexpr auto ProgressText = 0x518; // UTextBlock*
		constexpr auto UW-Lobby_Main_Web = 0x520; // UUW-Lobby_Main_Web_C*
		constexpr auto WeaponList_1 = 0x528; // TArray<FFLobbyWeaponInfo>
		constexpr auto CharacterInfoWidgetList = 0x538; // TArray<UUserWidget*>
		constexpr auto PartySize = 0x548; // int32_t
		constexpr auto EquipmentTransition = 0x550; // UParticleSystem*
		constexpr auto BindParticle = 0x558; // bool
		constexpr auto EffectPool = 0x560; // TArray<FVector4>
		constexpr auto EventDispatcher_MoveToCrafting = 0x570; // FMulticastInlineDelegate
		constexpr auto CurrentTab = 0x580; // FString
	}

	namespace n_ABP-Projectile_FlameThrowerFireCell_C {
		constexpr auto TextureScale = 0x3a0; // float
		constexpr auto BurnArea = 0x3a4; // float
	}

	namespace n_AArchVisCharacter {
		constexpr auto LookUpAxisName = 0x5d8; // FString
		constexpr auto LookUpAtRateAxisName = 0x5e8; // FString
		constexpr auto TurnAxisName = 0x5f8; // FString
		constexpr auto TurnAtRateAxisName = 0x608; // FString
		constexpr auto MoveForwardAxisName = 0x618; // FString
		constexpr auto MoveRightAxisName = 0x628; // FString
		constexpr auto MouseSensitivityScale_Pitch = 0x638; // float
		constexpr auto MouseSensitivityScale_Yaw = 0x63c; // float
	}

	namespace n_USmartPingSystem_C {
		constexpr auto UberGraphFrame = 0x128; // FPointerToUberGraphFrame
		constexpr auto RequestOnServer = 0x130; // FMulticastInlineDelegate
		constexpr auto SelectionMode = 0x140; // E_SPS_MenuSelectionType
		constexpr auto TimeoutBetweenPings = 0x144; // float
		constexpr auto PingTimeouts = 0x148; // TArray<float>
		constexpr auto ExecutingMenuIconIDs = 0x158; // TArray<FName>
		constexpr auto ExecutingMenuIconSettings = 0x168; // TArray<FBravoHotelSmartPingIconSettings>
		constexpr auto OwningPawn = 0x178; // APawn*
		constexpr auto SelectionMenu = 0x180; // UWBP_SPS_SelectionMenu_C*
		constexpr auto ExecuteOwningClient = 0x188; // FMulticastInlineDelegate
		constexpr auto TraceMethod = 0x198; // E_SPS_TraceMethod
		constexpr auto TraceLength = 0x19c; // float
		constexpr auto TraceRadius = 0x1a0; // float
		constexpr auto TraceChannel = 0x1a4; // ETraceTypeQuery
		constexpr auto TraceComplex = 0x1a5; // bool
		constexpr auto MenuActivated = 0x1a8; // FMulticastInlineDelegate
		constexpr auto MenuDeactivated = 0x1b8; // FMulticastInlineDelegate
		constexpr auto PingReceivedOnServer = 0x1c8; // FMulticastInlineDelegate
		constexpr auto ExecutingPingInfo2 = 0x1d8; // FBravoHotelPingInfo
		constexpr auto NoneHitActor = 0x210; // bool
		constexpr auto IgnorInput = 0x211; // bool
		constexpr auto TempItemPingTableIndex = 0x214; // FName
		constexpr auto Enable Show = 0x21c; // bool
		constexpr auto NewVar_1 = 0x220; // FName
		constexpr auto MainWidget = 0x228; // UBravoHotelMainWidget*
		constexpr auto EnableEndPingType = 0x230; // EPingType
		constexpr auto IsSelectionMenuOnMap = 0x231; // bool
		constexpr auto TmpLocationByMap = 0x234; // FVector
		constexpr auto TmpMousePosition = 0x240; // FVector2D
		constexpr auto IsVisibleSelectionMenu = 0x248; // bool
		constexpr auto IsPressedCtrl = 0x249; // bool
		constexpr auto FindPickUpItem = 0x24a; // bool
	}

	namespace n_UBravoHotelVehicleStandardGroupBoxComponent {
		constexpr auto VehicleStandardGroupInfo = 0x4d8; // FDataTableRowHandle
		constexpr auto EmptyBoxInfos = 0x4e8; // FVehicleSpawnBoxList
		constexpr auto DivisionBoxInfos = 0x4f8; // FVehicleSpawnBoxList
		constexpr auto AllBoxInfos = 0x508; // FVehicleSpawnBoxList
	}

	namespace n_UAkGeometryComponent {
		constexpr auto MeshType = 0x230; // AkMeshType
		constexpr auto LOD = 0x234; // int32_t
		constexpr auto WeldingThreshold = 0x238; // float
		constexpr auto StaticMeshSurfaceOverride = 0x240; // TMap<UMaterialInterface*, FAkGeometrySurfaceOverride>
		constexpr auto CollisionMeshSurfaceOverride = 0x290; // FAkGeometrySurfaceOverride
		constexpr auto bEnableDiffraction = 0x2a0; // char : 1
		constexpr auto bEnableDiffractionOnBoundaryEdges = 0x2a0; // char : 1
		constexpr auto AssociatedRoom = 0x2a8; // AActor*
		constexpr auto GeometryData = 0x2c0; // FAkGeometryData
	}

	namespace n_UAIPerceptionStimuliSourceComponent {
		constexpr auto bAutoRegisterAsSource = 0xb0; // char : 1
		constexpr auto RegisterAsSourceForSenses = 0xb8; // TArray<UAISense*>
	}

	namespace n_UUW-Inventory_Perk_C {
		constexpr auto UberGraphFrame = 0x2e8; // FPointerToUberGraphFrame
		constexpr auto Anim_Glow = 0x2f0; // UWidgetAnimation*
		constexpr auto HideFreeSupply = 0x2f8; // UWidgetAnimation*
		constexpr auto ShowFreeSupply = 0x300; // UWidgetAnimation*
		constexpr auto LevelUp = 0x308; // UWidgetAnimation*
		constexpr auto Ability_Defense = 0x310; // UWidgetAnimation*
		constexpr auto Ability_Speed = 0x318; // UWidgetAnimation*
		constexpr auto Ability_Power = 0x320; // UWidgetAnimation*
		constexpr auto Survive_FadeInOut = 0x328; // UWidgetAnimation*
		constexpr auto Anim_LevelUpDefense = 0x330; // UWidgetAnimation*
		constexpr auto Anim_LevelUpSpeed = 0x338; // UWidgetAnimation*
		constexpr auto Anim_LevelUpPower = 0x340; // UWidgetAnimation*
		constexpr auto btn_ItemTree = 0x348; // UButton*
		constexpr auto btn_PerkDeckDisabled = 0x350; // UButton*
		constexpr auto btn_PerkDeckDisabled_2 = 0x358; // UButton*
		constexpr auto btn_PerkDeckEnabled = 0x360; // UButton*
		constexpr auto btn_PerkDeckEnabled_2 = 0x368; // UButton*
		constexpr auto Canvas_BG = 0x370; // UCanvasPanel*
		constexpr auto Canvas_ChangeClass = 0x378; // UCanvasPanel*
		constexpr auto Canvas_ChangeDisable = 0x380; // UCanvasPanel*
		constexpr auto Canvas_ChangeDisable_2 = 0x388; // UCanvasPanel*
		constexpr auto Canvas_ChangeEnable = 0x390; // UCanvasPanel*
		constexpr auto Canvas_ChangeEnable_2 = 0x398; // UCanvasPanel*
		constexpr auto Canvas_ChangeSupply = 0x3a0; // UCanvasPanel*
		constexpr auto Canvas_LevelupEffect = 0x3a8; // UCanvasPanel*
		constexpr auto Canvas_Main = 0x3b0; // UCanvasPanel*
		constexpr auto Canvas_Perk = 0x3b8; // UCanvasPanel*
		constexpr auto Canvas_SupplyButton = 0x3c0; // UCanvasPanel*
		constexpr auto Canvas_UltimateEffect = 0x3c8; // UCanvasPanel*
		constexpr auto Canvas_UltimateLightEffect = 0x3d0; // UCanvasPanel*
		constexpr auto HorizontalBox_300 = 0x3d8; // UHorizontalBox*
		constexpr auto HorizontalBox_303 = 0x3e0; // UHorizontalBox*
		constexpr auto HorizontalBox_Stat = 0x3e8; // UHorizontalBox*
		constexpr auto HorizontalBox_UnlockLevel = 0x3f0; // UHorizontalBox*
		constexpr auto Image = 0x3f8; // UImage*
		constexpr auto Image_5 = 0x400; // UImage*
		constexpr auto Image_86 = 0x408; // UImage*
		constexpr auto Image_126 = 0x410; // UImage*
		constexpr auto Image_163 = 0x418; // UImage*
		constexpr auto Image_180 = 0x420; // UImage*
		constexpr auto Image_200 = 0x428; // UImage*
		constexpr auto Image_203 = 0x430; // UImage*
		constexpr auto Image_222 = 0x438; // UImage*
		constexpr auto Image_384 = 0x440; // UImage*
		constexpr auto Image_387 = 0x448; // UImage*
		constexpr auto Image_388 = 0x450; // UImage*
		constexpr auto Image_389 = 0x458; // UImage*
		constexpr auto Image_485 = 0x460; // UImage*
		constexpr auto Image_571 = 0x468; // UImage*
		constexpr auto Image_1098 = 0x470; // UImage*
		constexpr auto Image_1100 = 0x478; // UImage*
		constexpr auto Image_1104 = 0x480; // UImage*
		constexpr auto Image_Cycle = 0x488; // UImage*
		constexpr auto Image_Cycle_2 = 0x490; // UImage*
		constexpr auto IMG_ClassIcon = 0x498; // UImage*
		constexpr auto Img_PerkDeckIcon = 0x4a0; // UImage*
		constexpr auto IMG_Supply = 0x4a8; // UImage*
		constexpr auto IMG_UltimatedSkill = 0x4b0; // UImage*
		constexpr auto InvalidationBox_1 = 0x4b8; // UInvalidationBox*
		constexpr auto KeyImageWidget = 0x4c0; // UKeyImageWidget_C*
		constexpr auto NotEnoughGold = 0x4c8; // UCanvasPanel*
		constexpr auto Over_Ultimate = 0x4d0; // UOverlay*
		constexpr auto Overlay_UltimateKey = 0x4d8; // UOverlay*
		constexpr auto Spacer_251 = 0x4e0; // USpacer*
		constexpr auto T_ClassName = 0x4e8; // UTextBlock*
		constexpr auto T_Defense = 0x4f0; // UTextBlock*
		constexpr auto T_DefenseAnim = 0x4f8; // UTextBlock*
		constexpr auto T_Power = 0x500; // UTextBlock*
		constexpr auto T_PowerAnim = 0x508; // UTextBlock*
		constexpr auto T_Speed = 0x510; // UTextBlock*
		constexpr auto T_SpeedAnim = 0x518; // UTextBlock*
		constexpr auto T_UltimateName = 0x520; // UTextBlock*
		constexpr auto T_UnlockLevel = 0x528; // UTextBlock*
		constexpr auto T_UnlockLevel2 = 0x530; // UTextBlock*
		constexpr auto T_WeaponName = 0x538; // UTextBlock*
		constexpr auto TextBlock_2 = 0x540; // UTextBlock*
		constexpr auto TextBlock_3 = 0x548; // UTextBlock*
		constexpr auto TextBlock_4 = 0x550; // UTextBlock*
		constexpr auto TextBlock_9 = 0x558; // UTextBlock*
		constexpr auto TextBlock_ClassLevel = 0x560; // UTextBlock*
		constexpr auto TextBlock_Count_Blue = 0x568; // UTextBlock*
		constexpr auto TextBlock_Count_Green = 0x570; // UTextBlock*
		constexpr auto TextBlock_Count_Red = 0x578; // UTextBlock*
		constexpr auto TextBlock_Defense = 0x580; // UTextBlock*
		constexpr auto TextBlock_Power = 0x588; // UTextBlock*
		constexpr auto TextBlock_Price = 0x590; // UTextBlock*
		constexpr auto TextBlock_Price_2 = 0x598; // UTextBlock*
		constexpr auto TextBlock_Select = 0x5a0; // UTextBlock*
		constexpr auto TextBlock_Select_2 = 0x5a8; // UTextBlock*
		constexpr auto TextBlock_Speed = 0x5b0; // UTextBlock*
		constexpr auto TextBlock_SurviveMessage01 = 0x5b8; // UTextBlock*
		constexpr auto TextBlock_SurviveMessage02 = 0x5c0; // UTextBlock*
		constexpr auto TextBlock_UltimateDesc = 0x5c8; // UTextBlock*
		constexpr auto Title = 0x5d0; // UHorizontalBox*
		constexpr auto UltiLight_001 = 0x5d8; // UImage*
		constexpr auto UltiLight_002 = 0x5e0; // UImage*
		constexpr auto UltiLight_003 = 0x5e8; // UImage*
		constexpr auto UW-Inventory_PerkSlot = 0x5f0; // UUW-Inventory_PerkSlot_C*
		constexpr auto UW-Inventory_PerkSlot_2 = 0x5f8; // UUW-Inventory_PerkSlot_C*
		constexpr auto UW-Inventory_PerkSlot_3 = 0x600; // UUW-Inventory_PerkSlot_C*
		constexpr auto UW-Inventory_PerkSlot_4 = 0x608; // UUW-Inventory_PerkSlot_C*
		constexpr auto UW-Inventory_PerkSlot_5 = 0x610; // UUW-Inventory_PerkSlot_C*
		constexpr auto UW-Inventory_PerkSlot_6 = 0x618; // UUW-Inventory_PerkSlot_C*
		constexpr auto UW-Inventory_PerkSlot_7 = 0x620; // UUW-Inventory_PerkSlot_C*
		constexpr auto UW-Inventory_PerkSlot_8 = 0x628; // UUW-Inventory_PerkSlot_C*
		constexpr auto UW-Inventory_PerkSlot_9 = 0x630; // UUW-Inventory_PerkSlot_C*
		constexpr auto VB_Health = 0x638; // UVerticalBox*
		constexpr auto VB_Power = 0x640; // UVerticalBox*
		constexpr auto VB_Speed = 0x648; // UVerticalBox*
		constexpr auto VerticalBox_Blue = 0x650; // UVerticalBox*
		constexpr auto VerticalBox_Green = 0x658; // UVerticalBox*
		constexpr auto VerticalBox_Red = 0x660; // UVerticalBox*
		constexpr auto WidgetSwitcher_ChangeClass = 0x668; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_ChangeSupply = 0x670; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_TreeAndClass = 0x678; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_Ultimate = 0x680; // UWidgetSwitcher*
		constexpr auto CurrentPerkDeckName = 0x688; // FName
		constexpr auto CurrentPerkInfos = 0x690; // TArray<UUW-Inventory_PerkSlot_C*>
		constexpr auto ExpertWeaponKey = 0x6a0; // FName
		constexpr auto CurrentPerkCells = 0x6a8; // TMap<FName, UUW-Inventory_PerkSlot_C*>
		constexpr auto PerkMode = 0x6f8; // int32_t
		constexpr auto HoverWidget = 0x700; // UUW-Inventory_ItemSlotHover_C*
		constexpr auto PowerValue = 0x708; // int32_t
		constexpr auto TimerHandle_Power = 0x710; // FTimerHandle
		constexpr auto SpeedValue = 0x718; // int32_t
		constexpr auto TimerHandle_Speed = 0x720; // FTimerHandle
		constexpr auto DefenseValue = 0x728; // int32_t
		constexpr auto TimerHandle_Defense = 0x730; // FTimerHandle
		constexpr auto bPlayAbilityCountSoundStart = 0x738; // bool
		constexpr auto bPlayAbilityCountSoundEnd = 0x739; // bool
		constexpr auto LevelUpSound = 0x740; // UAkAudioEvent*
		constexpr auto EnableSupplyBtn = 0x748; // bool
		constexpr auto FreeSupplyTimer = 0x750; // FTimerHandle
		constexpr auto NotEnoughtGoldTimer = 0x758; // FTimerHandle
		constexpr auto GainPerkPopups = 0x760; // TArray<UUW-ListWidget_GainPerk_C*>
		constexpr auto IsPlayingUltimateSound = 0x770; // bool
		constexpr auto LastLevel = 0x774; // int32_t
		constexpr auto PerkDeckClassInfo = 0x778; // FPerkDeckClassInfo
	}

	namespace n_UInterpTrackSound {
		constexpr auto Sounds = 0x90; // TArray<FSoundTrackKey>
		constexpr auto bPlayOnReverse = 0xa0; // char : 1
		constexpr auto bContinueSoundOnMatineeEnd = 0xa0; // char : 1
		constexpr auto bSuppressSubtitles = 0xa0; // char : 1
		constexpr auto bTreatAsDialogue = 0xa0; // char : 1
		constexpr auto bAttach = 0xa0; // char : 1
	}

	namespace n_UDistributionVectorUniformCurve {
		constexpr auto ConstantCurve = 0x38; // FInterpCurveTwoVectors
		constexpr auto bLockAxes1 = 0x50; // char : 1
		constexpr auto bLockAxes2 = 0x50; // char : 1
		constexpr auto LockedAxes = 0x54; // EDistributionVectorLockFlags [0x2]
		constexpr auto MirrorFlags = 0x56; // EDistributionVectorMirrorFlags [0x3]
		constexpr auto bUseExtremes = 0x5c; // char : 1
	}

	namespace n_UMaterialParameterCollectionInstance {
		constexpr auto Collection = 0x30; // UMaterialParameterCollection*
	}

	namespace n_UABP-SupplyHelicopter_C {
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x278; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer = 0x2a8; // FAnimNode_SequencePlayer
	}

	namespace n_UARPin {
		constexpr auto TrackedGeometry = 0x28; // UARTrackedGeometry*
		constexpr auto PinnedComponent = 0x30; // USceneComponent*
		constexpr auto LocalToTrackingTransform = 0x40; // FTransform
		constexpr auto LocalToAlignedTrackingTransform = 0x70; // FTransform
		constexpr auto TrackingState = 0xa0; // EARTrackingState
		constexpr auto OnARTrackingStateChanged = 0xc0; // FMulticastInlineDelegate
		constexpr auto OnARTransformUpdated = 0xd0; // FMulticastInlineDelegate
	}

	namespace n_UUW-ListWidget_GainPerk_C {
		constexpr auto UpAnim = 0x260; // UWidgetAnimation*
		constexpr auto LevelUp = 0x268; // UWidgetAnimation*
		constexpr auto FadeIn = 0x270; // UWidgetAnimation*
		constexpr auto Idle = 0x278; // UWidgetAnimation*
		constexpr auto CanvasPanel_New = 0x280; // UCanvasPanel*
		constexpr auto Image_336 = 0x288; // UImage*
		constexpr auto Image_Back = 0x290; // UImage*
		constexpr auto Overlay_Level = 0x298; // UOverlay*
		constexpr auto PerkLastLevel = 0x2a0; // UTextBlock*
		constexpr auto PerkSlotHover = 0x2a8; // UCanvasPanel*
		constexpr auto RichTextBlock_Desc = 0x2b0; // URichTextBlock*
		constexpr auto T_LV = 0x2b8; // UTextBlock*
		constexpr auto T_PerkLevel = 0x2c0; // UTextBlock*
		constexpr auto T_PerkName = 0x2c8; // UTextBlock*
		constexpr auto TextBlock_1 = 0x2d0; // UTextBlock*
		constexpr auto UW-Inventory_PerkSlot = 0x2d8; // UUW-Inventory_PerkSlot_C*
		constexpr auto PerkUIInfo = 0x2e0; // FPerkUIInfo
		constexpr auto CurrentLevel = 0x30c; // int32_t
		constexpr auto LastLevel = 0x310; // int32_t
		constexpr auto PerkLevel = 0x314; // int32_t
		constexpr auto IsPlayingUltimateSound = 0x318; // bool
		constexpr auto PerkData = 0x320; // FPerkData
		constexpr auto PerInGameData = 0x400; // FPerkInGameData
		constexpr auto DefaultPosition = 0x5c8; // FVector2D
	}

	namespace n_USubmixEffectConvolutionReverbPreset {
		constexpr auto Settings = 0x40; // FSubmixEffectConvolutionReverbSettings
		constexpr auto ImpulseResponse = 0x60; // UAudioImpulseResponse*
		constexpr auto BlockSize = 0x68; // ESubmixEffectConvolutionReverbBlockSize
		constexpr auto bEnableHardwareAcceleration = 0x69; // bool
	}

	namespace n_UBackgroundBlur {
		constexpr auto Padding = 0x120; // FMargin
		constexpr auto HorizontalAlignment = 0x130; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x131; // EVerticalAlignment
		constexpr auto bApplyAlphaToBlur = 0x132; // bool
		constexpr auto BlurStrength = 0x134; // float
		constexpr auto bOverrideAutoRadiusCalculation = 0x138; // bool
		constexpr auto BlurRadius = 0x13c; // int32_t
		constexpr auto LowQualityFallbackBrush = 0x140; // FSlateBrush
	}

	namespace n_UChaosSolverSettings {
		constexpr auto DefaultChaosSolverActorClass = 0x40; // FSoftClassPath
	}

	namespace n_AMatineeActor {
		constexpr auto MatineeData = 0x318; // UInterpData*
		constexpr auto MatineeControllerName = 0x320; // FName
		constexpr auto PlayRate = 0x328; // float
		constexpr auto bPlayOnLevelLoad = 0x32c; // char : 1
		constexpr auto bForceStartPos = 0x32c; // char : 1
		constexpr auto ForceStartPosition = 0x330; // float
		constexpr auto bLooping = 0x334; // char : 1
		constexpr auto bRewindOnPlay = 0x334; // char : 1
		constexpr auto bNoResetOnRewind = 0x334; // char : 1
		constexpr auto bRewindIfAlreadyPlaying = 0x334; // char : 1
		constexpr auto bDisableRadioFilter = 0x334; // char : 1
		constexpr auto bClientSideOnly = 0x334; // char : 1
		constexpr auto bSkipUpdateIfNotVisible = 0x334; // char : 1
		constexpr auto bIsSkippable = 0x334; // char : 1
		constexpr auto PreferredSplitScreenNum = 0x338; // int32_t
		constexpr auto bDisableMovementInput = 0x33c; // char : 1
		constexpr auto bDisableLookAtInput = 0x33c; // char : 1
		constexpr auto bHidePlayer = 0x33c; // char : 1
		constexpr auto bHideHud = 0x33c; // char : 1
		constexpr auto GroupActorInfos = 0x340; // TArray<FInterpGroupActorInfo>
		constexpr auto bShouldShowGore = 0x350; // char : 1
		constexpr auto GroupInst = 0x358; // TArray<UInterpGroupInst*>
		constexpr auto CameraCuts = 0x368; // TArray<FCameraCutInfo>
		constexpr auto bIsPlaying = 0x378; // char : 1
		constexpr auto bReversePlayback = 0x378; // char : 1
		constexpr auto bPaused = 0x378; // char : 1
		constexpr auto bPendingStop = 0x378; // char : 1
		constexpr auto InterpPosition = 0x37c; // float
		constexpr auto ReplicationForceIsPlaying = 0x384; // char
		constexpr auto OnPlay = 0x388; // FMulticastInlineDelegate
		constexpr auto OnStop = 0x398; // FMulticastInlineDelegate
		constexpr auto OnPause = 0x3a8; // FMulticastInlineDelegate
	}

	namespace n_USourceEffectWaveShaperPreset {
		constexpr auto Settings = 0x70; // FSourceEffectWaveShaperSettings
	}

	namespace n_UPreviewMeshCollection {
		constexpr auto Skeleton = 0x40; // USkeleton*
		constexpr auto SkeletalMeshes = 0x50; // TArray<FPreviewMeshCollectionEntry>
	}

	namespace n_UAkSlider {
		constexpr auto Value = 0x108; // float
		constexpr auto ValueDelegate = 0x10c; // FDelegate
		constexpr auto WidgetStyle = 0x120; // FSliderStyle
		constexpr auto Orientation = 0x460; // EOrientation
		constexpr auto SliderBarColor = 0x464; // FLinearColor
		constexpr auto SliderHandleColor = 0x474; // FLinearColor
		constexpr auto IndentHandle = 0x484; // bool
		constexpr auto Locked = 0x485; // bool
		constexpr auto StepSize = 0x488; // float
		constexpr auto IsFocusable = 0x48c; // bool
		constexpr auto ThePropertyToControl = 0x490; // FAkPropertyToControl
		constexpr auto ItemToControl = 0x4a0; // FAkWwiseItemToControl
		constexpr auto OnValueChanged = 0x4e0; // FMulticastInlineDelegate
		constexpr auto OnItemDropped = 0x4f0; // FMulticastInlineDelegate
		constexpr auto OnPropertyDropped = 0x500; // FMulticastInlineDelegate
	}

	namespace n_APaperFlipbookActor {
		constexpr auto RenderComponent = 0x318; // UPaperFlipbookComponent*
	}

	namespace n_UInterpTrackFade {
		constexpr auto bPersistFade = 0x90; // char : 1
		constexpr auto bFadeAudio = 0x90; // char : 1
		constexpr auto FadeColor = 0x94; // FLinearColor
	}

	namespace n_UAISubsystem {
		constexpr auto AISystem = 0x30; // UAISystem*
	}

	namespace n_USoundNodeGroupControl {
		constexpr auto GroupSizes = 0x48; // TArray<int32_t>
	}

	namespace n_USourceEffectEnvelopeFollowerPreset {
		constexpr auto Settings = 0x74; // FSourceEffectEnvelopeFollowerSettings
	}

	namespace n_UBravoHotelPlayerIconWidget {
		constexpr auto Canvas_Main = 0x248; // UCanvasPanel*
		constexpr auto RotationGroup = 0x250; // UCanvasPanel*
		constexpr auto Canvas_Replay = 0x258; // UCanvasPanel*
		constexpr auto IconSwitcher = 0x260; // UWidgetSwitcher*
		constexpr auto Text_PlayerNum = 0x268; // UTextBlock*
		constexpr auto Text_PlayerName = 0x270; // UTextBlock*
		constexpr auto Img_Disconnect = 0x278; // UImage*
		constexpr auto Img_KnockDown = 0x280; // UImage*
		constexpr auto Img_Alive = 0x288; // UImage*
		constexpr auto Img_Death = 0x290; // UImage*
		constexpr auto Img_Vehicle = 0x298; // UImage*
		constexpr auto Img_Parachute = 0x2a0; // UImage*
		constexpr auto Img_Critical = 0x2a8; // UImage*
		constexpr auto Img_Sight = 0x2b0; // UImage*
		constexpr auto Img_Arrow = 0x2b8; // UImage*
		constexpr auto Img_BackRound = 0x2c0; // UImage*
		constexpr auto Img_TargetCam = 0x2c8; // UImage*
		constexpr auto Img_TargetCamDummy = 0x2d0; // UImage*
		constexpr auto SizeBox_RequestResuscitation = 0x2d8; // USizeBox*
		constexpr auto BT_UserName = 0x2e0; // UButton*
		constexpr auto Anim_Bouncing = 0x2e8; // UWidgetAnimation*
		constexpr auto PlayerStateRef = 0x2f0; // ABravoHotelPlayerState*
		constexpr auto TeamColorTableRef = 0x2f8; // UDataTable*
		constexpr auto bIsFreeCam = 0x300; // bool
		constexpr auto bIsReplaying = 0x301; // bool
		constexpr auto bIsKillCam = 0x302; // bool
		constexpr auto bIsInNetCullDistance = 0x303; // bool
		constexpr auto bIsRequestResuscitation = 0x304; // bool
	}

	namespace n_UUW-Radar_Cursor_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Escape_Cursor_Reset = 0x250; // UWidgetAnimation*
		constexpr auto MiniNuke_Cursor_Reset = 0x258; // UWidgetAnimation*
		constexpr auto Escape_Cursor = 0x260; // UWidgetAnimation*
		constexpr auto MiniNuke_Cursor = 0x268; // UWidgetAnimation*
		constexpr auto Image_390 = 0x270; // UImage*
		constexpr auto Image_519 = 0x278; // UImage*
		constexpr auto Img_CursorNuclear = 0x280; // UImage*
		constexpr auto SizeBox_Nuclear = 0x288; // USizeBox*
		constexpr auto WidgetSwitcher_1 = 0x290; // UWidgetSwitcher*
		constexpr auto Anim_MouseClicked = 0x298; // UWidgetAnimation*
		constexpr auto DummyWidgetRef = 0x2a0; // UUW-Radar_Cursor_Dummy_C*
	}

	namespace n_UParticleModuleVectorFieldLocal {
		constexpr auto VectorField = 0x30; // UVectorField*
		constexpr auto RelativeTranslation = 0x38; // FVector
		constexpr auto RelativeRotation = 0x44; // FRotator
		constexpr auto RelativeScale3D = 0x50; // FVector
		constexpr auto Intensity = 0x5c; // float
		constexpr auto Tightness = 0x60; // float
		constexpr auto bIgnoreComponentTransform = 0x64; // char : 1
		constexpr auto bTileX = 0x64; // char : 1
		constexpr auto bTileY = 0x64; // char : 1
		constexpr auto bTileZ = 0x64; // char : 1
		constexpr auto bUseFixDT = 0x64; // char : 1
	}

	namespace n_ULowEntryBitDataEntry {
		constexpr auto Type = 0x28; // char
		constexpr auto ByteValue = 0x29; // char
		constexpr auto IntegerValue = 0x2c; // int32_t
		constexpr auto LongBytesValue = 0x30; // ULowEntryLong*
		constexpr auto FloatValue = 0x38; // float
		constexpr auto DoubleBytesValue = 0x40; // ULowEntryDouble*
		constexpr auto BooleanValue = 0x48; // bool
		constexpr auto StringUtf8Value = 0x50; // FString
		constexpr auto ByteArrayValue = 0x60; // TArray<char>
		constexpr auto IntegerArrayValue = 0x70; // TArray<int32_t>
		constexpr auto LongBytesArrayValue = 0x80; // TArray<ULowEntryLong*>
		constexpr auto FloatArrayValue = 0x90; // TArray<float>
		constexpr auto DoubleBytesArrayValue = 0xa0; // TArray<ULowEntryDouble*>
		constexpr auto BooleanArrayValue = 0xb0; // TArray<bool>
		constexpr auto StringUtf8ArrayValue = 0xc0; // TArray<FString>
	}

	namespace n_AMagicLeapSharedWorldGameState {
		constexpr auto SharedWorldData = 0x388; // FMagicLeapSharedWorldSharedData
		constexpr auto AlignmentTransforms = 0x398; // FMagicLeapSharedWorldAlignmentTransforms
		constexpr auto OnSharedWorldDataUpdated = 0x3a8; // FMulticastInlineDelegate
		constexpr auto OnAlignmentTransformsUpdated = 0x3b8; // FMulticastInlineDelegate
	}

	namespace n_AARSharedWorldGameState {
		constexpr auto PreviewImageData = 0x388; // TArray<char>
		constexpr auto ARWorldData = 0x398; // TArray<char>
		constexpr auto PreviewImageBytesTotal = 0x3a8; // int32_t
		constexpr auto ARWorldBytesTotal = 0x3ac; // int32_t
		constexpr auto PreviewImageBytesDelivered = 0x3b0; // int32_t
		constexpr auto ARWorldBytesDelivered = 0x3b4; // int32_t
	}

	namespace n_UEnvQueryGenerator_ActorsOfClass {
		constexpr auto SearchedActorClass = 0x50; // AActor*
		constexpr auto GenerateOnlyActorsInRadius = 0x58; // FAIDataProviderBoolValue
		constexpr auto SearchRadius = 0x90; // FAIDataProviderFloatValue
		constexpr auto SearchCenter = 0xc8; // UEnvQueryContext*
	}

	namespace n_UMaterialExpressionLogarithm10 {
		constexpr auto X = 0x40; // FExpressionInput
	}

	namespace n_UBravoHotelAnimInstanceParachute {
		constexpr auto CharacterRef = 0x268; // ABravoHotelCharacter*
		constexpr auto DeltaTime = 0x270; // float
		constexpr auto InputForward = 0x274; // float
		constexpr auto InputRight = 0x278; // float
		constexpr auto CharacterState = 0x27c; // ECharacterState
		constexpr auto bIsDescentFalling = 0x27d; // bool
		constexpr auto LeftHandleTransition = 0x280; // FVector
		constexpr auto RightHandleTransition = 0x28c; // FVector
		constexpr auto bNeedToSkipTransitionBlend = 0x298; // bool
		constexpr auto Transition_InDescentToStart = 0x299; // bool
		constexpr auto Transition_Stand_NotMovingToMoving = 0x29a; // bool
		constexpr auto Transition_StartToMovement_3 = 0x29b; // bool
		constexpr auto Transition_MovementToEnd = 0x29c; // bool
		constexpr auto Transition_EndToInDescent = 0x29d; // bool
		constexpr auto ParachuteSeparationAnim_OnLand = 0x2a0; // UAnimationAsset*
		constexpr auto ParachuteSeparationAnim_OnAir = 0x2a8; // UAnimationAsset*
		constexpr auto SpawnedParachuteActor = 0x2b0; // ASkeletalMeshActor*
		constexpr auto SpawnedParachuteDissolveValue = 0x2b8; // float
		constexpr auto SpawnedParachuteDissolveStartTime = 0x2bc; // float
		constexpr auto SpawnedParachuteDissolveDuration = 0x2c0; // float
		constexpr auto ParachuteSpawnTime = 0x2c4; // float
	}

	namespace n_ABravoHotelSkillTargetingNuclear {
		constexpr auto NuclearInfo = 0x338; // FNuclearInfo
		constexpr auto NuclearWarningEvent = 0x348; // UAkAudioEvent*
		constexpr auto BroadcastDelayTime = 0x350; // float
		constexpr auto NuclearDelayTime = 0x354; // float
		constexpr auto NuclearHeight = 0x358; // float
		constexpr auto bBroadcastNuclear = 0x35c; // bool
	}

	namespace n_UEnvQueryTest {
		constexpr auto TestOrder = 0x30; // int32_t
		constexpr auto TestPurpose = 0x34; // EEnvTestPurpose
		constexpr auto TestComment = 0x38; // FString
		constexpr auto MultipleContextFilterOp = 0x48; // EEnvTestFilterOperator
		constexpr auto MultipleContextScoreOp = 0x49; // EEnvTestScoreOperator
		constexpr auto FilterType = 0x4a; // EEnvTestFilterType
		constexpr auto BoolValue = 0x50; // FAIDataProviderBoolValue
		constexpr auto FloatValueMin = 0x88; // FAIDataProviderFloatValue
		constexpr auto FloatValueMax = 0xc0; // FAIDataProviderFloatValue
		constexpr auto ScoringEquation = 0xf9; // EEnvTestScoreEquation
		constexpr auto ClampMinType = 0xfa; // EEnvQueryTestClamping
		constexpr auto ClampMaxType = 0xfb; // EEnvQueryTestClamping
		constexpr auto NormalizationType = 0xfc; // EEQSNormalizationType
		constexpr auto ScoreClampMin = 0x100; // FAIDataProviderFloatValue
		constexpr auto ScoreClampMax = 0x138; // FAIDataProviderFloatValue
		constexpr auto ScoringFactor = 0x170; // FAIDataProviderFloatValue
		constexpr auto ReferenceValue = 0x1a8; // FAIDataProviderFloatValue
		constexpr auto bDefineReferenceValue = 0x1e0; // bool
		constexpr auto bWorkOnFloatValues = 0x1f0; // char : 1
	}

	namespace n_UBravoHotelSignificanceManager {
		constexpr auto DefaultCriteriaSetup = 0x170; // FSignificanceCriteriaSetup
		constexpr auto bIsEnabled = 0x198; // bool
		constexpr auto CachedCameraManager = 0x1a0; // APlayerCameraManager*
	}

	namespace n_UParticleModuleLocationPrimitiveCylinder {
		constexpr auto RadialVelocity = 0xb0; // char : 1
		constexpr auto StartRadius = 0xb8; // FRawDistributionFloat
		constexpr auto StartHeight = 0xe8; // FRawDistributionFloat
		constexpr auto HeightAxis = 0x118; // CylinderHeightAxis
	}

	namespace n_UUserInterfaceSettings {
		constexpr auto RenderFocusRule = 0x38; // ERenderFocusRule
		constexpr auto HardwareCursors = 0x40; // TMap<EMouseCursor, FHardwareCursorReference>
		constexpr auto SoftwareCursors = 0x90; // TMap<EMouseCursor, FSoftClassPath>
		constexpr auto DefaultCursor = 0xe0; // FSoftClassPath
		constexpr auto TextEditBeamCursor = 0xf8; // FSoftClassPath
		constexpr auto CrosshairsCursor = 0x110; // FSoftClassPath
		constexpr auto HandCursor = 0x128; // FSoftClassPath
		constexpr auto GrabHandCursor = 0x140; // FSoftClassPath
		constexpr auto GrabHandClosedCursor = 0x158; // FSoftClassPath
		constexpr auto SlashedCircleCursor = 0x170; // FSoftClassPath
		constexpr auto ApplicationScale = 0x188; // float
		constexpr auto UIScaleRule = 0x18c; // EUIScalingRule
		constexpr auto CustomScalingRuleClass = 0x190; // FSoftClassPath
		constexpr auto UIScaleCurve = 0x1a8; // FRuntimeFloatCurve
		constexpr auto bAllowHighDPIInGameMode = 0x230; // bool
		constexpr auto bLoadWidgetsOnDedicatedServer = 0x231; // bool
		constexpr auto CursorClasses = 0x238; // TArray<UObject*>
		constexpr auto CustomScalingRuleClassInstance = 0x248; // UObject*
		constexpr auto CustomScalingRule = 0x250; // UDPICustomScalingRule*
	}

	namespace n_UAkAuxBus {
		constexpr auto RequiredBank = 0x50; // UAkAudioBank*
	}

	namespace n_UInAppPurchaseCallbackProxy2 {
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_URealisticProjectileComponent {
		constexpr auto MaterialPropertiesTable = 0xf0; // TSoftObjectPtr<UDataTable>
		constexpr auto InitialConditions = 0x118; // FTrajectoryInitialConditions
		constexpr auto InitialConditionHistory = 0x168; // TArray<FTrajectoryInitialConditions>
		constexpr auto TrajectoryNumber = 0x178; // int32_t
		constexpr auto CurrentPenetrationDeceleration = 0x17c; // float
		constexpr auto AngularVelocity = 0x180; // FRotator
		constexpr auto ObjectsPenetrated = 0x190; // TArray<FHitResult>
		constexpr auto IgnoreActors = 0x1a0; // TArray<AActor*>
		constexpr auto TerminalVelocity = 0x1b0; // float
		constexpr auto CurrentGravity = 0x1b4; // float
		constexpr auto bUseEmbed = 0x1b8; // char : 1
		constexpr auto EmbedDepth = 0x1bc; // float
		constexpr auto ImpulseScale = 0x1c0; // float
		constexpr auto InitialSpeed = 0x1c4; // float
		constexpr auto MaxSpeed = 0x1c8; // float
		constexpr auto PenetrationModifier = 0x1cc; // float
		constexpr auto bRotationFollowsVelocity = 0x1d0; // char : 1
		constexpr auto AngularVelocityMin = 0x1d4; // FRotator
		constexpr auto AngularVelocityMax = 0x1e0; // FRotator
		constexpr auto ProjectileBehavior = 0x1ec; // EProjectileBehavior
		constexpr auto bInitialVelocityInLocalSpace = 0x1f0; // char : 1
		constexpr auto bForceSubStepping = 0x1f0; // char : 1
		constexpr auto bDrawDebugLine = 0x1f0; // char : 1
		constexpr auto bDebugLineColorFromVelocity = 0x1f0; // char : 1
		constexpr auto DebugLineThickness = 0x1f4; // float
		constexpr auto DebugLineDuration = 0x1f8; // float
		constexpr auto DebugLineAuxiliaryColor = 0x1fc; // FColor
		constexpr auto Bounciness = 0x200; // float
		constexpr auto bUseFriction = 0x204; // char : 1
		constexpr auto Friction = 0x208; // float
		constexpr auto FrictionVelocityLimit = 0x20c; // float
		constexpr auto BounceVelocityMin = 0x210; // float
		constexpr auto OnProjectileAnyHit = 0x218; // FMulticastInlineDelegate
		constexpr auto OnProjectileBounce = 0x228; // FMulticastInlineDelegate
		constexpr auto OnProjectilePenetrate = 0x238; // FMulticastInlineDelegate
		constexpr auto OnPenetrationExit = 0x248; // FMulticastInlineDelegate
		constexpr auto OnProjectileStop = 0x258; // FMulticastInlineDelegate
		constexpr auto OnProjectileEmbed = 0x268; // FMulticastInlineDelegate
		constexpr auto OnComponentBeginOverlap = 0x278; // FMulticastInlineDelegate
		constexpr auto RandStream = 0x288; // FRandomStream
		constexpr auto bIsFluidFriction = 0x290; // bool
		constexpr auto bInFluid = 0x291; // bool
		constexpr auto FluidFriction = 0x294; // float
		constexpr auto MaxSimulationTimeStep = 0x298; // float
	}

	namespace n_UHapticFeedbackEffect_Buffer {
		constexpr auto Amplitudes = 0x28; // TArray<char>
		constexpr auto SampleRate = 0x38; // int32_t
	}

	namespace n_AActor {
		constexpr auto bIgnoresOriginShifting = 0x90; // char : 1
		constexpr auto bCanBeDamaged = 0x90; // char : 1
		constexpr auto OnTakePointDamage = 0x91; // FMulticastSparseDelegate
		constexpr auto NetTag = 0xa8; // int32_t
		constexpr auto Owner = 0xb0; // AActor*
		constexpr auto bEnableAutoLODGeneration = 0xb8; // char : 1
		constexpr auto NetDormancy = 0xb9; // ENetDormancy
		constexpr auto bEnableRerunConstructionScript = 0xba; // char : 1
		constexpr auto Layers = 0xc0; // TArray<FName>
		constexpr auto Children = 0xd0; // TArray<AActor*>
		constexpr auto bReplicateMovement = 0xe0; // char : 1
		constexpr auto OnInputTouchLeave = 0xe1; // FMulticastSparseDelegate
		constexpr auto OnEndCursorOver = 0xe2; // FMulticastSparseDelegate
		constexpr auto AttachmentReplication = 0xe8; // FRepAttachment
		constexpr auto NetUpdateFrequency = 0x128; // float
		constexpr auto OnActorHit = 0x12c; // FMulticastSparseDelegate
		constexpr auto Tags = 0x130; // TArray<FName>
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x140; // char : 1
		constexpr auto ParentComponent = 0x144; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto AutoReceiveInput = 0x14c; // EAutoReceiveInput
		constexpr auto BlueprintCreatedComponents = 0x150; // TArray<UActorComponent*>
		constexpr auto bOnlyRelevantToOwner = 0x160; // char : 1
		constexpr auto OnReleased = 0x161; // FMulticastSparseDelegate
		constexpr auto bAlwaysRelevant = 0x162; // char : 1
		constexpr auto OnActorBeginOverlap = 0x163; // FMulticastSparseDelegate
		constexpr auto OnActorEndOverlap = 0x164; // FMulticastSparseDelegate
		constexpr auto RootComponent = 0x170; // USceneComponent*
		constexpr auto bAutoDestroyWhenFinished = 0x190; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x190; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x190; // char : 1
		constexpr auto OnTakeAnyDamage = 0x191; // FMulticastSparseDelegate
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x192; // char : 1
		constexpr auto NetPriority = 0x194; // float
		constexpr auto bBlockInput = 0x198; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x198; // char : 1
		constexpr auto OnTakeRadialDamage = 0x199; // FMulticastSparseDelegate
		constexpr auto OnInputTouchBegin = 0x19a; // FMulticastSparseDelegate
		constexpr auto Instigator = 0x1a0; // APawn*
		constexpr auto OnBeginCursorOver = 0x1a8; // FMulticastSparseDelegate
		constexpr auto bIsEditorOnlyActor = 0x1a9; // char : 1
		constexpr auto bNetStartup = 0x1a9; // char : 1
		constexpr auto ReplicatedMovement = 0x1ac; // FRepMovement
		constexpr auto bExchangedRoles = 0x1e0; // char : 1
		constexpr auto LoadedObjects = 0x1e8; // TArray<UObject*>
		constexpr auto bTearOff = 0x1f8; // char : 1
		constexpr auto bReplayRewindable = 0x200; // char : 1
		constexpr auto InitialLifeSpan = 0x204; // float
		constexpr auto OnEndPlay = 0x208; // FMulticastSparseDelegate
		constexpr auto InputPriority = 0x20c; // int32_t
		constexpr auto NetCullDistanceSquared = 0x210; // float
		constexpr auto bCollideWhenPlacing = 0x214; // char : 1
		constexpr auto OnInputTouchEnter = 0x215; // FMulticastSparseDelegate
		constexpr auto ControllingMatineeActors = 0x218; // TArray<AMatineeActor*>
		constexpr auto bReplicates = 0x228; // char : 1
		constexpr auto SpawnCollisionHandlingMethod = 0x229; // ESpawnActorCollisionHandlingMethod
		constexpr auto InputComponent = 0x230; // UInputComponent*
		constexpr auto OnInputTouchEnd = 0x288; // FMulticastSparseDelegate
		constexpr auto RemoteRole = 0x289; // ENetRole
		constexpr auto UpdateOverlapsMethodDuringLevelStreaming = 0x28a; // EActorUpdateOverlapsMethod
		constexpr auto CustomTimeDilation = 0x28c; // float
		constexpr auto bActorSeamlessTraveled = 0x290; // char : 1
		constexpr auto PrimaryActorTick = 0x298; // FActorTickFunction
		constexpr auto bNetTemporary = 0x2c8; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x2c8; // char : 1
		constexpr auto OnDestroyed = 0x2c9; // FMulticastSparseDelegate
		constexpr auto Role = 0x2ca; // ENetRole
		constexpr auto bHidden = 0x2e0; // char : 1
		constexpr auto MinNetUpdateFrequency = 0x2e4; // float
		constexpr auto bActorEnableCollision = 0x2e8; // char : 1
		constexpr auto bRelevantForLevelBounds = 0x2e8; // char : 1
		constexpr auto InstanceComponents = 0x2f0; // TArray<UActorComponent*>
		constexpr auto bAllowTickBeforeBeginPlay = 0x300; // char : 1
		constexpr auto bCanBeInCluster = 0x300; // char : 1
		constexpr auto OnClicked = 0x301; // FMulticastSparseDelegate
		constexpr auto bNetLoadOnClient = 0x302; // char : 1
		constexpr auto NetDriverName = 0x308; // FName
		constexpr auto DefaultUpdateOverlapsMethodDuringLevelStreaming = 0x310; // EActorUpdateOverlapsMethod
	}

	namespace n_USoundConcurrency {
		constexpr auto Concurrency = 0x28; // FSoundConcurrencySettings
	}

	namespace n_UMaterialExpressionLandscapeVisibilityMask {
		constexpr auto ExpressionGUID = 0x40; // FGuid
	}

	namespace n_USettingDevWidget_C {
		constexpr auto UberGraphFrame = 0x298; // FPointerToUberGraphFrame
		constexpr auto ButtonGod = 0x2a0; // UButton*
		constexpr auto DevWidget = 0x2a8; // UDevWidget_C*
		constexpr auto ScrollBox_55 = 0x2b0; // UScrollBox*
	}

	namespace n_UBravoHotelTestWidget {
		constexpr auto SpawnResultInfo = 0x248; // TArray<FString>
		constexpr auto SpawnResultData = 0x258; // TArray<FSpawnItems_DEBUG>
		constexpr auto SpawnActorInfos = 0x268; // TArray<FString>
		constexpr auto SpawnActors = 0x278; // TMap<FString, FSpawnActors_DEBUG>
		constexpr auto SpawnActorList = 0x2c8; // TArray<FSpawnActors_DEBUG>
		constexpr auto SpawnBuildingList = 0x2d8; // TArray<FString>
		constexpr auto SpawnBuildingList2 = 0x2e8; // TArray<FBuildingItemSpawnLog>
		constexpr auto TotalLogCnt = 0x2f8; // int32_t
		constexpr auto CurPercent = 0x2fc; // float
		constexpr auto CurCount = 0x300; // float
	}

	namespace n_UUW-InteractionWidget_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto UpArrow = 0x250; // UWidgetAnimation*
		constexpr auto InteractivePopup_motion = 0x258; // UWidgetAnimation*
		constexpr auto AmmoCnt = 0x260; // UTextBlock*
		constexpr auto AmmoDown = 0x268; // UImage*
		constexpr auto AmmoUp = 0x270; // UImage*
		constexpr auto Attack = 0x278; // UTextBlock*
		constexpr auto AttackDown = 0x280; // UImage*
		constexpr auto AttackUp = 0x288; // UImage*
		constexpr auto BuffListWithText = 0x290; // UWrapBox*
		constexpr auto CanvasPanel_17 = 0x298; // UCanvasPanel*
		constexpr auto CP_Key = 0x2a0; // UCanvasPanel*
		constexpr auto CustomWidgetSwitcher = 0x2a8; // UWidgetSwitcher*
		constexpr auto fill = 0x2b0; // UImage*
		constexpr auto Firingrate = 0x2b8; // UTextBlock*
		constexpr auto FiringrateDown = 0x2c0; // UImage*
		constexpr auto FiringrateUp = 0x2c8; // UImage*
		constexpr auto HB_BuffList = 0x2d0; // UHorizontalBox*
		constexpr auto HorizontalBox_Rarity = 0x2d8; // UHorizontalBox*
		constexpr auto HorizontalBox_WeaponRarity = 0x2e0; // UHorizontalBox*
		constexpr auto Image = 0x2e8; // UImage*
		constexpr auto Image_4 = 0x2f0; // UImage*
		constexpr auto Image_10 = 0x2f8; // UImage*
		constexpr auto Image_152 = 0x300; // UImage*
		constexpr auto Image_ItemIcon = 0x308; // UImage*
		constexpr auto Image_WeaponLock = 0x310; // UImage*
		constexpr auto Interactive = 0x318; // UCanvasPanel*
		constexpr auto ItemBg_01 = 0x320; // UImage*
		constexpr auto Key_Bomb = 0x328; // UKeyImageWidget_C*
		constexpr auto KeyImageWidget_C_1 = 0x330; // UKeyImageWidget_C*
		constexpr auto NeedItem = 0x338; // UImage*
		constexpr auto PickUpBg = 0x340; // UImage*
		constexpr auto PickupItem = 0x348; // USizeBox*
		constexpr auto Range = 0x350; // UTextBlock*
		constexpr auto RangeDown = 0x358; // UImage*
		constexpr auto RangeUp = 0x360; // UImage*
		constexpr auto RichT_Action = 0x368; // URichTextBlock*
		constexpr auto RichT_ActionDescription = 0x370; // URichTextBlock*
		constexpr auto SizeBox_WeaponOwner = 0x378; // USizeBox*
		constexpr auto Stability = 0x380; // UTextBlock*
		constexpr auto StabilityDown = 0x388; // UImage*
		constexpr auto StabilityUp = 0x390; // UImage*
		constexpr auto Switcher_Item = 0x398; // UWidgetSwitcher*
		constexpr auto T_BombCancel = 0x3a0; // UTextBlock*
		constexpr auto T_ComparingWeaponName = 0x3a8; // UTextBlock*
		constexpr auto T_PickupItemName = 0x3b0; // UTextBlock*
		constexpr auto T_WeaponName = 0x3b8; // UTextBlock*
		constexpr auto Text_CombineTarget = 0x3c0; // UTextBlock*
		constexpr auto TextBlock_5 = 0x3c8; // UTextBlock*
		constexpr auto UW-InteractionWidget_WeaponPerkSlot = 0x3d0; // UUW-InteractionWidget_WeaponPerkSlot_C*
		constexpr auto UW-InteractionWidget_WeaponPerkSlot_2 = 0x3d8; // UUW-InteractionWidget_WeaponPerkSlot_C*
		constexpr auto UW-InteractionWidget_WeaponPerkSlot_3 = 0x3e0; // UUW-InteractionWidget_WeaponPerkSlot_C*
		constexpr auto UW-Inventory_ItemSlotHover_WeaponSlot = 0x3e8; // UUW-Inventory_ItemSlotHover_WeaponSlot_C*
		constexpr auto UW-Inventory_ItemSlotHover_WeaponSlot_C_2 = 0x3f0; // UUW-Inventory_ItemSlotHover_WeaponSlot_C*
		constexpr auto UW-Inventory_ItemSlotHover_WeaponSlot_C_3 = 0x3f8; // UUW-Inventory_ItemSlotHover_WeaponSlot_C*
		constexpr auto VerticalBox_CombineTarget = 0x400; // UVerticalBox*
		constexpr auto VerticalBox_StatUp = 0x408; // UVerticalBox*
		constexpr auto WeaponDesc = 0x410; // UTextBlock*
		constexpr auto WeaponItemImage = 0x418; // UImage*
		constexpr auto WeaponItemSlot-BG = 0x420; // UImage*
		constexpr auto WeaponItemSlot-BG_2 = 0x428; // UImage*
		constexpr auto WeaponItemSlotHover = 0x430; // UCanvasPanel*
		constexpr auto WidgetSwitcher_123 = 0x438; // UWidgetSwitcher*
		constexpr auto DisableTextColor = 0x440; // FSlateColor
		constexpr auto EnableTextColor = 0x468; // FSlateColor
		constexpr auto IsDisable = 0x490; // bool
		constexpr auto PickupItemInfo_1 = 0x498; // FInventoryItemInfo
		constexpr auto UpLinearColor = 0x530; // FLinearColor
		constexpr auto DownLinearColor = 0x540; // FLinearColor
		constexpr auto NormalSlateColor = 0x550; // FSlateColor
		constexpr auto UpSlateColor = 0x578; // FSlateColor
		constexpr auto DownSlateColor = 0x5a0; // FSlateColor
		constexpr auto bAction = 0x5c8; // bool
		constexpr auto bCompare = 0x5c9; // bool
		constexpr auto CompareWeaponInfo = 0x5d0; // FBravoHotelWeaponInfo
		constexpr auto IsNoHide = 0x10f8; // bool
		constexpr auto bWeapon = 0x10f9; // bool
		constexpr auto bPlayAnimation_WeaponCompare = 0x10fa; // bool
		constexpr auto VisibleTextColor = 0x1100; // FSlateColor
		constexpr auto BrushActionKeyWhite = 0x1128; // FSlateBrush
		constexpr auto BrushActionKeyRed = 0x11b0; // FSlateBrush
		constexpr auto TempName = 0x1238; // FName
		constexpr auto AvailableAmmoQuantity = 0x1240; // FText
	}

	namespace n_UMediaSoundComponent {
		constexpr auto Channels = 0x710; // EMediaSoundChannels
		constexpr auto DynamicRateAdjustment = 0x714; // bool
		constexpr auto RateAdjustmentFactor = 0x718; // float
		constexpr auto RateAdjustmentRange = 0x71c; // FFloatRange
		constexpr auto MediaPlayer = 0x730; // UMediaPlayer*
	}

	namespace n_UEnvQueryTest_Pathfinding {
		constexpr auto TestMode = 0x1f8; // EEnvTestPathfinding
		constexpr auto Context = 0x200; // UEnvQueryContext*
		constexpr auto PathFromContext = 0x208; // FAIDataProviderBoolValue
		constexpr auto SkipUnreachable = 0x240; // FAIDataProviderBoolValue
		constexpr auto FilterClass = 0x278; // UNavigationQueryFilter*
	}

	namespace n_UMovieSceneMediaPlayerPropertySection {
		constexpr auto MediaSource = 0xe0; // UMediaSource*
		constexpr auto bLoop = 0xe8; // bool
	}

	namespace n_UMK3DKillcamComponent {
		constexpr auto OnMK3DKillcamCompleteEvent = 0xb0; // FMulticastInlineDelegate
		constexpr auto MK3DKillEvents = 0xd8; // TArray<FMK3DHighlightKillEvent>
		constexpr auto KillcamBeforeSec = 0xe8; // float
		constexpr auto KillcamAfterSec = 0xec; // float
	}

	namespace n_UBehaviorTreeManager {
		constexpr auto MaxDebuggerSteps = 0x28; // int32_t
		constexpr auto LoadedTemplates = 0x30; // TArray<FBehaviorTreeTemplateInfo>
		constexpr auto ActiveComponents = 0x40; // TArray<UBehaviorTreeComponent*>
	}

	namespace n_UChaosDestructionListener {
		constexpr auto bIsCollisionEventListeningEnabled = 0x230; // char : 1
		constexpr auto bIsBreakingEventListeningEnabled = 0x230; // char : 1
		constexpr auto bIsTrailingEventListeningEnabled = 0x230; // char : 1
		constexpr auto CollisionEventRequestSettings = 0x234; // FChaosCollisionEventRequestSettings
		constexpr auto BreakingEventRequestSettings = 0x24c; // FChaosBreakingEventRequestSettings
		constexpr auto TrailingEventRequestSettings = 0x264; // FChaosTrailingEventRequestSettings
		constexpr auto ChaosSolverActors = 0x280; // TSet<AChaosSolverActor*>
		constexpr auto GeometryCollectionActors = 0x2d0; // TSet<AGeometryCollectionActor*>
		constexpr auto OnCollisionEvents = 0x320; // FMulticastInlineDelegate
		constexpr auto OnBreakingEvents = 0x330; // FMulticastInlineDelegate
		constexpr auto OnTrailingEvents = 0x340; // FMulticastInlineDelegate
	}

	namespace n_UUW-BlackMarket_Slot_Base_C {
		constexpr auto ItemRowName = 0x248; // FName
		constexpr auto ConsoleCommandString = 0x250; // FString
		constexpr auto GiveCount = 0x260; // FString
		constexpr auto ItemType = 0x270; // EItemType
		constexpr auto Icon = 0x278; // UImage*
		constexpr auto bSlot = 0x280; // bool
		constexpr auto Count = 0x284; // int32_t
		constexpr auto AmmoName = 0x288; // FName
		constexpr auto AmmoCommandString = 0x290; // FString
		constexpr auto AmmoCount = 0x2a0; // int32_t
		constexpr auto BlackMarketMainRef = 0x2a8; // UBravoHotelDevelopmentBlackMarket*
		constexpr auto BlackmarketDataInfo = 0x2b0; // FBravoHotelBlackMarketDataType
		constexpr auto ConsoleMultiCommandString = 0x3c8; // TArray<FString>
	}

	namespace n_UAnimCompress {
		constexpr auto bNeedsSkeleton = 0x38; // char : 1
		constexpr auto TranslationCompressionFormat = 0x3c; // AnimationCompressionFormat
		constexpr auto RotationCompressionFormat = 0x3d; // AnimationCompressionFormat
		constexpr auto ScaleCompressionFormat = 0x3e; // AnimationCompressionFormat
	}

	namespace n_UBravoHotelCrosshairManager {
		constexpr auto Map = 0x28; // TMap<FName, UBravoHotelCrosshair*>
		constexpr auto AdditiveMap = 0x78; // TMap<FName, UBravoHotelCrosshair*>
		constexpr auto ActiveAdditiveCroshairList = 0xc8; // TArray<FName>
	}

	namespace n_UDatasmithSpotLightComponentTemplate {
		constexpr auto InnerConeAngle = 0x30; // float
		constexpr auto OuterConeAngle = 0x34; // float
	}

	namespace n_ABP-TutorialEndCam_C {
		constexpr auto UberGraphFrame = 0x318; // FPointerToUberGraphFrame
		constexpr auto WorldViewCamera = 0x320; // UCameraComponent*
		constexpr auto FarCamera = 0x328; // UCameraComponent*
		constexpr auto NearCamera = 0x330; // UCameraComponent*
		constexpr auto DefaultSceneRoot = 0x338; // USceneComponent*
		constexpr auto CharacterRef = 0x340; // ABravoHotelCharacter*
		constexpr auto TargetNearCameraTransform = 0x350; // FTransform
		constexpr auto DeltaTime = 0x380; // float
		constexpr auto TargetFarCameraTransform = 0x390; // FTransform
		constexpr auto PlayerControllerRef = 0x3c0; // ABravoHotelPlayerController*
		constexpr auto bIsBackgroundScene = 0x3c8; // bool
		constexpr auto WinTeamCharacters = 0x3d0; // TArray<ABravoHotelCharacter*>
		constexpr auto DuoLocation_Near = 0x3e0; // TArray<FVector>
		constexpr auto CharacterOriginLocation = 0x3f0; // FVector
		constexpr auto DuoRotation_Near = 0x400; // TArray<FRotator>
		constexpr auto DuoLocation_Far = 0x410; // TArray<FVector>
		constexpr auto DuoRotation_Far = 0x420; // TArray<FRotator>
		constexpr auto TrioLocation_Near = 0x430; // TArray<FVector>
		constexpr auto TrioRotation_Near = 0x440; // TArray<FRotator>
		constexpr auto TrioLocation_Far = 0x450; // TArray<FVector>
		constexpr auto TrioRotation_Far = 0x460; // TArray<FRotator>
		constexpr auto SquadLocation_Near = 0x470; // TArray<FVector>
		constexpr auto SquadRotation_Near = 0x480; // TArray<FRotator>
		constexpr auto SquadLocation_Far = 0x490; // TArray<FVector>
		constexpr auto SquadRotation_Far = 0x4a0; // TArray<FRotator>
		constexpr auto CharacterOriginRotation = 0x4b0; // FRotator
	}

	namespace n_ULandscapeMeshCollisionComponent {
		constexpr auto MeshGuid = 0x590; // FGuid
	}

	namespace n_UAppleImageUtilsBaseAsyncTaskBlueprintProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
		constexpr auto ConversionResult = 0x60; // FAppleImageUtilsImageConversionResult
	}

	namespace n_AAtmosphericFog {
		constexpr auto AtmosphericFogComponent = 0x318; // UAtmosphericFogComponent*
	}

	namespace n_UMovieSceneCameraCutSection {
		constexpr auto CameraGuid = 0xe0; // FGuid
		constexpr auto CameraBindingID = 0xf0; // FMovieSceneObjectBindingID
	}

	namespace n_UBravoHotelCoherentBaseWidget {
		constexpr auto CoherentWidget = 0x248; // UCoherentUIGTWidget*
		constexpr auto AudioEvent = 0x250; // UAkAudioEvent*
		constexpr auto ObjectArray = 0x258; // TArray<UBravoHotelCoherentObject*>
		constexpr auto WidgetName = 0x270; // FString
		constexpr auto bInvisibleAfterLoading = 0x280; // bool
	}

	namespace n_ACableActor {
		constexpr auto CableComponent = 0x318; // UCableComponent*
	}

	namespace n_AMKPlayerStateEx {
		constexpr auto SelfPlayerState = 0x318; // APlayerState*
	}

	namespace n_ADestructibleActor {
		constexpr auto DestructibleComponent = 0x318; // UDestructibleComponent*
		constexpr auto OnActorFracture = 0x320; // FMulticastInlineDelegate
	}

	namespace n_UNiagaraPreviewAxis_InterpParamVector4 {
		constexpr auto Min = 0x40; // FVector4
		constexpr auto MAX = 0x50; // FVector4
	}

	namespace n_ULoadTableAsset {
		constexpr auto ItemTables = 0x30; // TArray<TSoftObjectPtr<UDataTable>>
		constexpr auto ItemValueTables = 0x40; // TArray<TSoftObjectPtr<UDataTable>>
	}

	namespace n_UBrushComponent {
		constexpr auto Brush = 0x4b0; // UModel*
		constexpr auto BrushBodySetup = 0x4b8; // UBodySetup*
	}

	namespace n_UParticleModuleRotation {
		constexpr auto StartRotation = 0x30; // FRawDistributionFloat
	}

	namespace n_UUW-BlackMarket_Slot_Perk_C {
		constexpr auto UberGraphFrame = 0x3d8; // FPointerToUberGraphFrame
		constexpr auto BTN-Menu02 = 0x3e0; // UButton*
		constexpr auto BTN-Menu03 = 0x3e8; // UButton*
		constexpr auto BTN-Menu04 = 0x3f0; // UButton*
		constexpr auto CP-SlotInfo = 0x3f8; // UCanvasPanel*
		constexpr auto IMG-BG = 0x400; // UImage*
		constexpr auto IMG-BG-Border = 0x408; // UImage*
		constexpr auto IMG-Item = 0x410; // UImage*
		constexpr auto IMG-Mask = 0x418; // UImage*
		constexpr auto IMG-Over = 0x420; // UImage*
		constexpr auto IMG-Over-Border = 0x428; // UImage*
		constexpr auto Menu02 = 0x430; // UOverlay*
		constexpr auto Menu03 = 0x438; // UOverlay*
		constexpr auto Menu04 = 0x440; // UOverlay*
		constexpr auto Overlay_Mask = 0x448; // UOverlay*
		constexpr auto TXT-ItemDesc = 0x450; // UTextBlock*
		constexpr auto TXT-ItemName = 0x458; // UTextBlock*
		constexpr auto TXT-ItemSlot = 0x460; // UTextBlock*
		constexpr auto TXT-Menu01 = 0x468; // UTextBlock*
		constexpr auto TXT-Menu02 = 0x470; // UTextBlock*
		constexpr auto TXT-Menu03 = 0x478; // UTextBlock*
		constexpr auto TXT-Menu04 = 0x480; // UTextBlock*
		constexpr auto PerkSlot = 0x488; // FText
	}

	namespace n_UComboBoxText_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Button_43 = 0x250; // UButton*
		constexpr auto Image_269 = 0x258; // UImage*
		constexpr auto TextBlock_67 = 0x260; // UTextBlock*
		constexpr auto Text = 0x268; // FText
	}

	namespace n_UAkIOSInitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettingsWithSampleRate
		constexpr auto AudioSession = 0x90; // FAkAudioSession
		constexpr auto CommunicationSettings = 0xa0; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xc8; // FAkAdvancedInitializationSettings
	}

	namespace n_UPrimaryAssetLabel {
		constexpr auto Rules = 0x30; // FPrimaryAssetRules
		constexpr auto bLabelAssetsInMyDirectory = 0x3c; // char : 1
		constexpr auto bIsRuntimeLabel = 0x3c; // char : 1
		constexpr auto ExplicitAssets = 0x40; // TArray<TSoftObjectPtr<UObject>>
		constexpr auto ExplicitBlueprints = 0x50; // TArray<TSoftClassPtr<UObject>>
		constexpr auto AssetCollection = 0x60; // FCollectionReference
	}

	namespace n_UEnvQueryManager {
		constexpr auto InstanceCache = 0xa8; // TArray<FEnvQueryInstanceCache>
		constexpr auto LocalContexts = 0xb8; // TArray<UEnvQueryContext*>
		constexpr auto GCShieldedWrappers = 0xc8; // TArray<UEnvQueryInstanceBlueprintWrapper*>
		constexpr auto MaxAllowedTestingTime = 0x12c; // float
		constexpr auto bTestQueriesUsingBreadth = 0x130; // bool
		constexpr auto QueryCountWarningThreshold = 0x134; // int32_t
		constexpr auto QueryCountWarningInterval = 0x138; // double
	}

	namespace n_USafeZone {
		constexpr auto PadLeft = 0x120; // bool
		constexpr auto PadRight = 0x121; // bool
		constexpr auto PadTop = 0x122; // bool
		constexpr auto PadBottom = 0x123; // bool
	}

	namespace n_UInterpTrackInstColorProp {
		constexpr auto ResetColor = 0x58; // FColor
	}

	namespace n_ULandscapeMeshProxyComponent {
		constexpr auto LandscapeGuid = 0x548; // FGuid
		constexpr auto ProxyComponentBases = 0x558; // TArray<FIntPoint>
		constexpr auto ProxyLOD = 0x568; // int8_t
	}

	namespace n_UUniformInteger {
		constexpr auto Magnitude = 0xb0; // int32_t
	}

	namespace n_ALine_WidgetActor_C {
		constexpr auto UberGraphFrame = 0x318; // FPointerToUberGraphFrame
		constexpr auto Widget1 = 0x320; // UWidgetComponent*
		constexpr auto DefaultSceneRoot = 0x328; // USceneComponent*
	}

	namespace n_UPawnAction_Sequence {
		constexpr auto ActionSequence = 0x98; // TArray<UPawnAction*>
		constexpr auto ChildFailureHandlingMode = 0xa8; // EPawnActionFailHandling
		constexpr auto RecentActionCopy = 0xb0; // UPawnAction*
	}

	namespace n_USplineComponent {
		constexpr auto SplineCurves = 0x4b0; // FSplineCurves
		constexpr auto SplineInfo = 0x518; // FInterpCurveVector
		constexpr auto SplineRotInfo = 0x530; // FInterpCurveQuat
		constexpr auto SplineScaleInfo = 0x548; // FInterpCurveVector
		constexpr auto SplineReparamTable = 0x560; // FInterpCurveFloat
		constexpr auto bAllowSplineEditingPerInstance = 0x578; // bool
		constexpr auto ReparamStepsPerSegment = 0x57c; // int32_t
		constexpr auto Duration = 0x580; // float
		constexpr auto bStationaryEndpoints = 0x584; // bool
		constexpr auto bSplineHasBeenEdited = 0x585; // bool
		constexpr auto bModifiedByConstructionScript = 0x586; // bool
		constexpr auto bInputSplinePointsToConstructionScript = 0x587; // bool
		constexpr auto bDrawDebug = 0x588; // bool
		constexpr auto bClosedLoop = 0x589; // bool
		constexpr auto bLoopPositionOverride = 0x58a; // bool
		constexpr auto LoopPosition = 0x58c; // float
		constexpr auto DefaultUpVector = 0x590; // FVector
	}

	namespace n_UMaterialBillboardComponent {
		constexpr auto Elements = 0x4b0; // TArray<FMaterialSpriteElement>
	}

	namespace n_UDragDropOperation {
		constexpr auto Tag = 0x28; // FString
		constexpr auto payload = 0x38; // UObject*
		constexpr auto DefaultDragVisual = 0x40; // UWidget*
		constexpr auto Pivot = 0x48; // EDragPivot
		constexpr auto Offset = 0x4c; // FVector2D
		constexpr auto bUseMoveAnimation = 0x54; // bool
		constexpr auto OnDrop = 0x58; // FMulticastInlineDelegate
		constexpr auto OnDragCancelled = 0x68; // FMulticastInlineDelegate
		constexpr auto OnDragged = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UAkAssetData {
		constexpr auto CachedHash = 0x28; // uint32_t
	}

	namespace n_UWB_ClassicComboBoxItem_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto TextComboBoxItem = 0x250; // UTextBlock*
		constexpr auto WB_ClassicComboBoxButton = 0x258; // UWB_ClassicComboBoxButton_C*
		constexpr auto ItemOption = 0x260; // FString
		constexpr auto Resolution = 0x270; // FSVideoResolution
	}

	namespace n_UNodeMappingContainer {
		constexpr auto SourceItems = 0x28; // TMap<FName, FNodeItem>
		constexpr auto TargetItems = 0x78; // TMap<FName, FNodeItem>
		constexpr auto SourceToTarget = 0xc8; // TMap<FName, FName>
		constexpr auto SourceAsset = 0x118; // TSoftObjectPtr<UObject>
		constexpr auto TargetAsset = 0x140; // TSoftObjectPtr<UObject>
	}

	namespace n_ULowEntryLatentActionNone {
		constexpr auto Finished = 0x28; // bool
		constexpr auto KeepAliveCount = 0x2c; // int32_t
	}

	namespace n_UMaterialExpressionSphereMask {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto Radius = 0x68; // FExpressionInput
		constexpr auto Hardness = 0x7c; // FExpressionInput
		constexpr auto AttenuationRadius = 0x90; // float
		constexpr auto HardnessPercent = 0x94; // float
	}

	namespace n_APartyBeaconHost {
		constexpr auto State = 0x340; // UPartyBeaconState*
		constexpr auto bLogoutOnSessionTimeout = 0x3a8; // bool
		constexpr auto SessionTimeoutSecs = 0x3ac; // float
		constexpr auto TravelSessionTimeoutSecs = 0x3b0; // float
	}

	namespace n_AMKPlayerControllerEx {
		constexpr auto SelfPlayerController = 0x3c0; // APlayerController*
	}

	namespace n_UAISenseConfig_Sight {
		constexpr auto Implementation = 0x48; // UAISense_Sight*
		constexpr auto SightRadius = 0x50; // float
		constexpr auto LoseSightRadius = 0x54; // float
		constexpr auto PeripheralVisionAngleDegrees = 0x58; // float
		constexpr auto DetectionByAffiliation = 0x5c; // FAISenseAffiliationFilter
		constexpr auto AutoSuccessRangeFromLastSeenLocation = 0x60; // float
	}

	namespace n_ABravoHotelProjectileGrenade {
		constexpr auto bIgnoreOwner = 0x318; // bool
		constexpr auto Damage = 0x31c; // float
		constexpr auto MinimumDamage = 0x320; // float
		constexpr auto DamageFalloff = 0x324; // float
		constexpr auto ImpulseStrength = 0x328; // float
		constexpr auto bCanApplyImpulseByBounce = 0x32c; // bool
		constexpr auto bOverrideDropSpeed = 0x32d; // bool
		constexpr auto DropSpeed = 0x330; // float
		constexpr auto HitDamageTypeClass = 0x338; // UDamageType*
		constexpr auto DamageTypeClass = 0x340; // UDamageType*
		constexpr auto bIgnoreCharacterVelocityOnRangedWeapon = 0x348; // bool
		constexpr auto SphereCollision = 0x350; // USphereComponent*
		constexpr auto Projectile = 0x358; // UStaticMeshComponent*
		constexpr auto TrailParticleComponent = 0x360; // UParticleSystemComponent*
		constexpr auto ProjectileMovement = 0x368; // UBravoHotelThrowingWeaponMovementComponent*
		constexpr auto TimerHandle_GrenadeExplosion = 0x370; // FTimerHandle
		constexpr auto GrenadeExplosionEffectScale = 0x378; // FVector
		constexpr auto bUseActorRotationGrenadeExplosionEffect = 0x384; // bool
		constexpr auto GrenadeExplosionEffect = 0x388; // UParticleSystem*
		constexpr auto GrenadeExplosionEffectInWater = 0x390; // UParticleSystem*
		constexpr auto TrailEffectInWater = 0x398; // UParticleSystem*
		constexpr auto SuperTrailEffect = 0x3a0; // UParticleSystem*
		constexpr auto NormalTrailEffect = 0x3a8; // UParticleSystem*
		constexpr auto bNeedToDeactiveTrailParticle = 0x3b0; // bool
		constexpr auto SuperTrailViewDistance = 0x3b4; // float
		constexpr auto ShiningEffectComponent = 0x3b8; // UParticleSystemComponent*
		constexpr auto ShiningEffect = 0x3c0; // UParticleSystem*
		constexpr auto ShiningEffectViewDistance = 0x3c8; // float
		constexpr auto GrenadeTrailEffectInWater = 0x3d0; // UParticleSystemComponent*
		constexpr auto AkAudioComponent = 0x3d8; // UAkComponent*
		constexpr auto ExplodeEvent = 0x3e0; // UAkAudioEvent*
		constexpr auto ExplodeEventInWater = 0x3e8; // UAkAudioEvent*
		constexpr auto BoundEvent = 0x3f0; // UAkAudioEvent*
		constexpr auto RemainExplodeTime = 0x3f8; // float
		constexpr auto InsideEffectRange = 0x3fc; // float
		constexpr auto EffectRange = 0x400; // float
		constexpr auto TriggerRange = 0x404; // float
		constexpr auto LoopSoundHandle = 0x408; // FAudioPlayingHandle
		constexpr auto bEnableActiveGrenade = 0x40c; // bool
		constexpr auto bLocalSameTeam = 0x40d; // bool
		constexpr auto OverlapCharacters = 0x410; // TArray<ABravoHotelCharacter*>
		constexpr auto DotDamagedActors = 0x420; // TArray<AActor*>
		constexpr auto GrenadeWeaponName = 0x430; // FName
		constexpr auto HitDamage = 0x438; // float
		constexpr auto HitDamageToCharacter = 0x43c; // float
		constexpr auto PenetrateDamage = 0x440; // float
		constexpr auto bInWater = 0x444; // bool
		constexpr auto BounceCount = 0x448; // int32_t
		constexpr auto bUseCookingTime = 0x44c; // bool
		constexpr auto bUseBoobyTrap = 0x44d; // bool
		constexpr auto bActiveByHit = 0x44e; // bool
		constexpr auto bNeedServerDamage = 0x44f; // bool
		constexpr auto BoobyTrapDelayTime = 0x450; // float
		constexpr auto InitialSpeed = 0x454; // float
		constexpr auto InitialVelocity = 0x458; // FVector
		constexpr auto bUseRotaionProjectileMesh = 0x464; // bool
		constexpr auto RotationSpeed = 0x468; // FRotator
		constexpr auto bIsStopSimulate = 0x474; // bool
		constexpr auto GuidedLocation = 0x478; // FVector
		constexpr auto TimerHandle_BoobyTrap = 0x488; // FTimerHandle
		constexpr auto ProjectileGrenadeState = 0x490; // EProjectileGrenadeState
		constexpr auto bUseActiveTriggerActorLocation = 0x491; // bool
		constexpr auto TriggerActor = 0x498; // AActor*
		constexpr auto bApplyShortRangeHitDamage = 0x4b8; // bool
		constexpr auto ShortRangeHitDamageDistance = 0x4bc; // float
		constexpr auto ShortRangeHitDamageMultiply = 0x4c0; // float
		constexpr auto WeaponId = 0x4c8; // FName
		constexpr auto ItemId = 0x4d0; // FName
		constexpr auto bMarkActiveGrenade = 0x4d8; // bool
		constexpr auto DamageAffectedByObstacle = 0x588; // bool
		constexpr auto ExplosionEffectRange = 0x58c; // float
		constexpr auto ExplosionCameraShakeScaleMin = 0x590; // float
		constexpr auto ExplosionCameraShakeScaleMax = 0x594; // float
		constexpr auto ExplosionDeafenDurationMin = 0x598; // float
		constexpr auto ExplosionDeafenDutationMax = 0x59c; // float
		constexpr auto ExplosionDeafenDistanceLevelClose = 0x5a0; // float
		constexpr auto ExplosionDeafenDistanceLevelMid = 0x5a4; // float
		constexpr auto ExplosionCameraShake = 0x5a8; // UCameraShake*
		constexpr auto ConditionedWeaponInfo = 0x5b0; // FConditionedWeaponInfo
		constexpr auto DecalRotation = 0x5d0; // FRotator
		constexpr auto AllowedDamageType = 0x5f0; // TArray<UBravoHotelDamageType*>
		constexpr auto Health = 0x600; // float
		constexpr auto OnExplosion = 0x638; // FMulticastInlineDelegate
		constexpr auto OnActiveBoobyTrapDelegate = 0x648; // FMulticastInlineDelegate
		constexpr auto TimerHandle_CheckWarningVoiceEvent = 0x658; // FTimerHandle
		constexpr auto ExplosionOriginDeltaLocation = 0x660; // FVector
	}

	namespace n_UBravoHotelSmartPingSystem {
		constexpr auto PingActorList = 0xb0; // TArray<ABravoHotelSmartPingActor*>
		constexpr auto PersonalSupplyBoxActor = 0xc0; // ABravoHotelSmartPingActor*
		constexpr auto GuideActor = 0xc8; // ABravoHotelSmartPingActor*
		constexpr auto BookActor = 0xd0; // ABravoHotelSmartPingActor*
		constexpr auto ExpertWeaponActor = 0xd8; // ABravoHotelSmartPingActor*
		constexpr auto MaterialActors = 0xe0; // TArray<ABravoHotelSmartPingActor*>
		constexpr auto LocalPingActors = 0xf0; // TArray<ABravoHotelSmartPingActor*>
		constexpr auto DetectedInteractionCancleActors = 0x100; // TArray<AActor*>
		constexpr auto LightPoleHeight = 0x110; // float
		constexpr auto LightPoleRadius = 0x114; // float
		constexpr auto DelayAfterLanding = 0x118; // float
		constexpr auto LightPoleEffect = 0x120; // UParticleSystem*
	}

	namespace n_ULogoutCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UAtmosphericFogComponent {
		constexpr auto SunMultiplier = 0x230; // float
		constexpr auto FogMultiplier = 0x234; // float
		constexpr auto DensityMultiplier = 0x238; // float
		constexpr auto DensityOffset = 0x23c; // float
		constexpr auto DistanceScale = 0x240; // float
		constexpr auto AltitudeScale = 0x244; // float
		constexpr auto DistanceOffset = 0x248; // float
		constexpr auto GroundOffset = 0x24c; // float
		constexpr auto StartDistance = 0x250; // float
		constexpr auto SunDiscScale = 0x254; // float
		constexpr auto DefaultBrightness = 0x258; // float
		constexpr auto DefaultLightColor = 0x25c; // FColor
		constexpr auto bDisableSunDisk = 0x260; // char : 1
		constexpr auto bAtmosphereAffectsSunIlluminance = 0x260; // char : 1
		constexpr auto bDisableGroundScattering = 0x260; // char : 1
		constexpr auto PrecomputeParams = 0x264; // FAtmospherePrecomputeParameters
		constexpr auto TransmittanceTexture = 0x290; // UTexture2D*
		constexpr auto IrradianceTexture = 0x298; // UTexture2D*
	}

	namespace n_UUW-MatchEnd_Ranking2_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Hide = 0x250; // UWidgetAnimation*
		constexpr auto RankDown = 0x258; // UWidgetAnimation*
		constexpr auto RankUp = 0x260; // UWidgetAnimation*
		constexpr auto Anim_Reward = 0x268; // UWidgetAnimation*
		constexpr auto Arrow_3 = 0x270; // UImage*
		constexpr auto ArrowLine_3 = 0x278; // UImage*
		constexpr auto BottomLine_3 = 0x280; // UImage*
		constexpr auto BrightSpot_01 = 0x288; // UImage*
		constexpr auto BrightSpot_02 = 0x290; // UImage*
		constexpr auto BrightSpot_03 = 0x298; // UImage*
		constexpr auto BrightSpot_04 = 0x2a0; // UImage*
		constexpr auto BrightSpot_05 = 0x2a8; // UImage*
		constexpr auto Button_DamageInfo = 0x2b0; // UButton*
		constexpr auto Button_DeathCam_2 = 0x2b8; // UButton*
		constexpr auto Button_Exit = 0x2c0; // UButton*
		constexpr auto Button_KillCam = 0x2c8; // UButton*
		constexpr auto Button_Report = 0x2d0; // UButton*
		constexpr auto Button_Spectate = 0x2d8; // UButton*
		constexpr auto CanvasPanel_3 = 0x2e0; // UCanvasPanel*
		constexpr auto CanvasPanel_9 = 0x2e8; // UCanvasPanel*
		constexpr auto CanvasPanel_1174 = 0x2f0; // UCanvasPanel*
		constexpr auto CanvasPanel_1384 = 0x2f8; // UCanvasPanel*
		constexpr auto Glow1 = 0x300; // UImage*
		constexpr auto Glow2 = 0x308; // UImage*
		constexpr auto Glow3 = 0x310; // UImage*
		constexpr auto Glow_01 = 0x318; // UImage*
		constexpr auto GlowLine = 0x320; // UImage*
		constexpr auto Gold = 0x328; // UImage*
		constexpr auto Image_26 = 0x330; // UImage*
		constexpr auto Image_27 = 0x338; // UImage*
		constexpr auto Image_28 = 0x340; // UImage*
		constexpr auto Image_29 = 0x348; // UImage*
		constexpr auto Image_216 = 0x350; // UImage*
		constexpr auto Image_223 = 0x358; // UImage*
		constexpr auto Image_458 = 0x360; // UImage*
		constexpr auto Image_559 = 0x368; // UImage*
		constexpr auto Image_CurrentRANK = 0x370; // UImage*
		constexpr auto Image_DownRANK = 0x378; // UImage*
		constexpr auto Image_UpRANK = 0x380; // UImage*
		constexpr auto L_Wing01 = 0x388; // UImage*
		constexpr auto L_Wing01_2 = 0x390; // UImage*
		constexpr auto L_Wing01_5 = 0x398; // UImage*
		constexpr auto L_Wing02 = 0x3a0; // UImage*
		constexpr auto L_Wing02_2 = 0x3a8; // UImage*
		constexpr auto L_Wing02_5 = 0x3b0; // UImage*
		constexpr auto L_Wing03 = 0x3b8; // UImage*
		constexpr auto L_Wing03_2 = 0x3c0; // UImage*
		constexpr auto L_Wing03_5 = 0x3c8; // UImage*
		constexpr auto L_WingLine = 0x3d0; // UImage*
		constexpr auto L_WingLine_3 = 0x3d8; // UImage*
		constexpr auto Light_2 = 0x3e0; // UImage*
		constexpr auto Light_01 = 0x3e8; // UImage*
		constexpr auto Light_02 = 0x3f0; // UImage*
		constexpr auto Light_03 = 0x3f8; // UImage*
		constexpr auto Light_04 = 0x400; // UImage*
		constexpr auto Light_05 = 0x408; // UImage*
		constexpr auto Light_06 = 0x410; // UImage*
		constexpr auto Overlay_264 = 0x418; // UOverlay*
		constexpr auto Overlay_DamageInfo = 0x420; // UOverlay*
		constexpr auto Overlay_KillCam = 0x428; // UOverlay*
		constexpr auto Overlay_KillCamReplay = 0x430; // UOverlay*
		constexpr auto Overlay_Report = 0x438; // UOverlay*
		constexpr auto Overlay_Spectate = 0x440; // UOverlay*
		constexpr auto R_Wing01 = 0x448; // UImage*
		constexpr auto R_Wing01_2 = 0x450; // UImage*
		constexpr auto R_Wing01_5 = 0x458; // UImage*
		constexpr auto R_Wing01_6 = 0x460; // UImage*
		constexpr auto R_Wing02 = 0x468; // UImage*
		constexpr auto R_Wing02_2 = 0x470; // UImage*
		constexpr auto R_Wing02_5 = 0x478; // UImage*
		constexpr auto R_Wing02_6 = 0x480; // UImage*
		constexpr auto R_Wing03 = 0x488; // UImage*
		constexpr auto R_Wing03_2 = 0x490; // UImage*
		constexpr auto R_Wing03_5 = 0x498; // UImage*
		constexpr auto R_Wing03_6 = 0x4a0; // UImage*
		constexpr auto R_WingLine = 0x4a8; // UImage*
		constexpr auto R_WingLine_3 = 0x4b0; // UImage*
		constexpr auto Ribbon = 0x4b8; // UImage*
		constexpr auto Ring = 0x4c0; // UImage*
		constexpr auto RIng_Glow_01 = 0x4c8; // UImage*
		constexpr auto ScrollBox_2 = 0x4d0; // UScrollBox*
		constexpr auto ScrollBox_199 = 0x4d8; // UScrollBox*
		constexpr auto SizeBox_8 = 0x4e0; // USizeBox*
		constexpr auto T_RemainTime_2 = 0x4e8; // UTextBlock*
		constexpr auto Text_Report = 0x4f0; // UTextBlock*
		constexpr auto TextBlock_3 = 0x4f8; // UTextBlock*
		constexpr auto TextBlock_4 = 0x500; // UTextBlock*
		constexpr auto TextBlock_12 = 0x508; // UTextBlock*
		constexpr auto TextBlock_13 = 0x510; // UTextBlock*
		constexpr auto TextBlock_14 = 0x518; // UTextBlock*
		constexpr auto TextBlock_25 = 0x520; // UTextBlock*
		constexpr auto TextBlock_27 = 0x528; // UTextBlock*
		constexpr auto TextBlock_1425 = 0x530; // UTextBlock*
		constexpr auto TextBlock_2242 = 0x538; // UTextBlock*
		constexpr auto TextBlock_2769 = 0x540; // UTextBlock*
		constexpr auto TextBlock_3056 = 0x548; // UTextBlock*
		constexpr auto TextBlock_LocalMatchRP = 0x550; // UTextBlock*
		constexpr auto TextGlow01 = 0x558; // UImage*
		constexpr auto TextGlow02 = 0x560; // UImage*
		constexpr auto TextGlow03 = 0x568; // UImage*
		constexpr auto TopLine_3 = 0x570; // UImage*
		constexpr auto UW-MatchEnd_GoldList = 0x578; // UUW-MatchEnd_GoldList_C*
		constexpr auto UW-MatchEnd_GoldList_2 = 0x580; // UUW-MatchEnd_GoldList_C*
		constexpr auto UW-MatchEnd_GoldList_3 = 0x588; // UUW-MatchEnd_GoldList_C*
		constexpr auto UW-MatchEnd_RewardSlot_02_2 = 0x590; // UUW-MatchEnd_RewardSlot_02_C*
		constexpr auto UW-MatchEnd_RewardSlot_02_3 = 0x598; // UUW-MatchEnd_RewardSlot_02_C*
		constexpr auto UW-MatchEnd_RewardSlot_02_4 = 0x5a0; // UUW-MatchEnd_RewardSlot_02_C*
		constexpr auto UW-MatchEnd_RewardSlot_02_5 = 0x5a8; // UUW-MatchEnd_RewardSlot_02_C*
		constexpr auto UW-MatchEnd_RewardSlot_02_369 = 0x5b0; // UUW-MatchEnd_RewardSlot_02_C*
		constexpr auto UW-RankPoint = 0x5b8; // UUW-RankPoint_C*
		constexpr auto UW-RewardGoldSlot_02 = 0x5c0; // UUW-RewardGoldSlot_02_C*
		constexpr auto VerticalBox_191 = 0x5c8; // UVerticalBox*
		constexpr auto WidgetSwitcher_2 = 0x5d0; // UWidgetSwitcher*
		constexpr auto MatchEnd = 0x5d8; // bool
		constexpr auto AnimationData = 0x5d9; // FMatchEndAnimation
		constexpr auto MatchEndWidgetRef = 0x5e0; // UUW-MatchEndWidget_C*
		constexpr auto SimpleResult = 0x5e8; // FMatchEndSimpleResult
		constexpr auto SimpleTimer = 0x6f8; // FTimerHandle
		constexpr auto IsWinningCam = 0x700; // bool
		constexpr auto StartSound = 0x704; // FAudioPlayingHandle
		constexpr auto GainGoldHandle = 0x708; // FTimerHandle
		constexpr auto GoldHandle = 0x710; // FTimerHandle
		constexpr auto FinalResultData = 0x718; // FMatchEndFinalResult
		constexpr auto RandomGold = 0x71c; // int32_t
		constexpr auto GainGoldValue = 0x720; // int32_t
		constexpr auto LocalWidget = 0x728; // UTextBlock*
		constexpr auto PlayerState = 0x730; // ABravoHotelPlayerState*
		constexpr auto Timehandle_Rank = 0x738; // FTimerHandle
		constexpr auto Increase = 0x740; // bool
		constexpr auto bMaxPrograssbar = 0x741; // bool
		constexpr auto CurrentRP = 0x744; // int32_t
		constexpr auto PlayerOriRP = 0x748; // int32_t
		constexpr auto TargetRP = 0x74c; // int32_t
		constexpr auto NextTireRP = 0x750; // int32_t
		constexpr auto CurrentTierID = 0x754; // int32_t
		constexpr auto IsGiveUp = 0x758; // bool
		constexpr auto TempRank = 0x75c; // int32_t
		constexpr auto TempKill = 0x760; // int32_t
		constexpr auto TempHit = 0x764; // int32_t
		constexpr auto TempSuvival = 0x768; // int32_t
		constexpr auto SeasonRP = 0x76c; // int32_t
		constexpr auto GainedRP = 0x770; // int32_t
		constexpr auto AminRPText = 0x774; // int32_t
		constexpr auto StartRP = 0x778; // int32_t
		constexpr auto EndRP = 0x77c; // int32_t
		constexpr auto ShowTime = 0x780; // float
		constexpr auto IsTargetCameraKiller = 0x784; // bool
		constexpr auto EventDispatcher_MoveToDamageInfo = 0x788; // FMulticastInlineDelegate
	}

	namespace n_UFSMSettings {
		constexpr auto EnableInterfaceStatePropagation = 0x28; // bool
		constexpr auto SuppressRPCWarnings = 0x29; // bool
		constexpr auto DefaultTickInterval = 0x2c; // float
		constexpr auto DefaultStates = 0x30; // TArray<FName>
	}

	namespace n_UScaleBox {
		constexpr auto Stretch = 0x120; // EStretch
		constexpr auto StretchDirection = 0x121; // EStretchDirection
		constexpr auto UserSpecifiedScale = 0x124; // float
		constexpr auto IgnoreInheritedScale = 0x128; // bool
	}

	namespace n_UEdGraphNode_Documentation {
		constexpr auto Link = 0x98; // FString
		constexpr auto Excerpt = 0xa8; // FString
	}

	namespace n_UUW-ReplayTimelineBasic_C {
		constexpr auto UberGraphFrame = 0x360; // FPointerToUberGraphFrame
		constexpr auto Bg = 0x368; // UImage*
		constexpr auto Border_Timeline = 0x370; // UTimelineBorder*
		constexpr auto Border_TimeToGo = 0x378; // UBorder*
		constexpr auto BT_FreeCam = 0x380; // UButton*
		constexpr auto BT_ReplayPause = 0x388; // UButton*
		constexpr auto BT_ReplayResume = 0x390; // UButton*
		constexpr auto BT_SpeedDown = 0x398; // UButton*
		constexpr auto BT_SpeedUp = 0x3a0; // UButton*
		constexpr auto BT_TimelineScaleDown = 0x3a8; // UButton*
		constexpr auto BT_TimelineScaleUp = 0x3b0; // UButton*
		constexpr auto Canvas_EventMarkers = 0x3b8; // UCanvasPanel*
		constexpr auto Chk_ShowKill = 0x3c0; // UCheckBox*
		constexpr auto Chk_ShowKnockout = 0x3c8; // UCheckBox*
		constexpr auto Chk_ShowMyKill = 0x3d0; // UCheckBox*
		constexpr auto Chk_ShowMyKnockout = 0x3d8; // UCheckBox*
		constexpr auto Chk_ShowMyResuscitated = 0x3e0; // UCheckBox*
		constexpr auto Chk_ShowResuscitated = 0x3e8; // UCheckBox*
		constexpr auto ReplayTimelineSlider = 0x3f0; // USlider*
		constexpr auto ScrollBox_Timeline = 0x3f8; // UScrollBox*
		constexpr auto SizeBox_Timeline = 0x400; // USizeBox*
		constexpr auto Slider_TimelineScale = 0x408; // USlider*
		constexpr auto T_CameraType = 0x410; // UTextBlock*
		constexpr auto T_CurrentTime = 0x418; // UTextBlock*
		constexpr auto T_PlaySpeed = 0x420; // UTextBlock*
		constexpr auto T_TimeToGo = 0x428; // UTextBlock*
		constexpr auto T_TotalTime = 0x430; // UTextBlock*
		constexpr auto TimelineSizeBoxOffset = 0x438; // float
		constexpr auto Class_EventMarker_Kill = 0x440; // UUserWidget*
		constexpr auto Class_EventMarker_Knockout = 0x448; // UUserWidget*
		constexpr auto LastViewportSize = 0x450; // float
		constexpr auto IsMouseOnBorder = 0x454; // bool
		constexpr auto Class_EventMarker_Resuscitated = 0x458; // UUserWidget*
		constexpr auto Class_EventMarker_WhenReported = 0x460; // UUserWidget*
		constexpr auto CameraType = 0x468; // ECameraType
		constexpr auto ViewMode = 0x469; // EReplayViewMode
	}

	namespace n_UDistributionVectorConstant {
		constexpr auto Constant = 0x38; // FVector
		constexpr auto bLockAxes = 0x44; // char : 1
		constexpr auto LockedAxes = 0x48; // EDistributionVectorLockFlags
	}

	namespace n_UUW-BlackMarket_Slot_Wearable_C {
		constexpr auto UberGraphFrame = 0x3d8; // FPointerToUberGraphFrame
		constexpr auto BTN-Menu02 = 0x3e0; // UButton*
		constexpr auto BTN-Menu03 = 0x3e8; // UButton*
		constexpr auto BTN-Menu04 = 0x3f0; // UButton*
		constexpr auto BTN-Menu05 = 0x3f8; // UButton*
		constexpr auto BTN-Menu06 = 0x400; // UButton*
		constexpr auto CP-SlotInfo = 0x408; // UCanvasPanel*
		constexpr auto IMG-BG = 0x410; // UImage*
		constexpr auto IMG-BG-Border = 0x418; // UImage*
		constexpr auto IMG-Item = 0x420; // UImage*
		constexpr auto IMG-Mask = 0x428; // UImage*
		constexpr auto IMG-Over = 0x430; // UImage*
		constexpr auto IMG-Over-Border = 0x438; // UImage*
		constexpr auto Menu02 = 0x440; // UOverlay*
		constexpr auto Menu03 = 0x448; // UOverlay*
		constexpr auto Menu04 = 0x450; // UOverlay*
		constexpr auto Menu05 = 0x458; // UOverlay*
		constexpr auto Menu06 = 0x460; // UOverlay*
		constexpr auto Overlay_Mask = 0x468; // UOverlay*
		constexpr auto TXT-Armor = 0x470; // UTextBlock*
		constexpr auto TXT-Capacity = 0x478; // UTextBlock*
		constexpr auto TXT-DecreaseReloadTime = 0x480; // UTextBlock*
		constexpr auto TXT-ItemName = 0x488; // UTextBlock*
		constexpr auto TXT-Menu01 = 0x490; // UTextBlock*
		constexpr auto TXT-Menu02 = 0x498; // UTextBlock*
		constexpr auto TXT-Menu03 = 0x4a0; // UTextBlock*
		constexpr auto TXT-Menu04 = 0x4a8; // UTextBlock*
		constexpr auto TXT-Menu05 = 0x4b0; // UTextBlock*
		constexpr auto TXT-Menu06 = 0x4b8; // UTextBlock*
		constexpr auto TXT-Type = 0x4c0; // UTextBlock*
	}

	namespace n_UMovieSceneBindingOverrides {
		constexpr auto BindingData = 0x28; // TArray<FMovieSceneBindingOverrideData>
	}

	namespace n_ABravoHotelProjectileGrenadeBomb {
		constexpr auto LandHeight = 0x678; // float
		constexpr auto bUsingActiveGrenadeByTick = 0x67c; // bool
		constexpr auto DamageCollisionType = 0x67d; // ECollisionChannel
		constexpr auto bIgnoreCollision = 0x67e; // bool
		constexpr auto ExplosionGroundDecalMaterial = 0x690; // UMaterialInterface*
		constexpr auto ExplosionGroundDecalSize = 0x698; // FVector
		constexpr auto ExplosionGroundDecalComponent = 0x6a8; // UDecalComponent*
		constexpr auto AuthorController = 0x6b0; // APlayerController*
	}

	namespace n_UComboBoxString {
		constexpr auto DefaultOptions = 0x108; // TArray<FString>
		constexpr auto SelectedOption = 0x118; // FString
		constexpr auto WidgetStyle = 0x128; // FComboBoxStyle
		constexpr auto ItemStyle = 0x518; // FTableRowStyle
		constexpr auto ContentPadding = 0xce0; // FMargin
		constexpr auto MaxListHeight = 0xcf0; // float
		constexpr auto HasDownArrow = 0xcf4; // bool
		constexpr auto EnableGamepadNavigationMode = 0xcf5; // bool
		constexpr auto Font = 0xcf8; // FSlateFontInfo
		constexpr auto ForegroundColor = 0xd48; // FSlateColor
		constexpr auto bIsFocusable = 0xd70; // bool
		constexpr auto OnGenerateWidgetEvent = 0xd74; // FDelegate
		constexpr auto OnSelectionChanged = 0xd88; // FMulticastInlineDelegate
		constexpr auto OnOpening = 0xd98; // FMulticastInlineDelegate
	}

	namespace n_AInstancedStaticCollisionActor {
		constexpr auto InstancedCollisionComponentMap = 0x318; // TMap<UStaticMesh*, UInstancedCollisionComponent*>
	}

	namespace n_ALevelVariantSetsActor {
		constexpr auto LevelVariantSets = 0x318; // FSoftObjectPath
	}

	namespace n_UStaticMesh {
		constexpr auto bUseAsOccluderForSoftwareOcclusion = 0x60; // char : 1
		constexpr auto LODGroup = 0x64; // FName
		constexpr auto MeshStreamingGroup = 0x6c; // FName
		constexpr auto MinLOD = 0x80; // FPerPlatformInt
		constexpr auto LpvBiasMultiplier = 0x84; // float
		constexpr auto StaticMaterials = 0x88; // TArray<FStaticMaterial>
		constexpr auto LightmapUVDensity = 0x98; // float
		constexpr auto LightMapResolution = 0x9c; // int32_t
		constexpr auto LightMapCoordinateIndex = 0xa0; // int32_t
		constexpr auto DistanceFieldSelfShadowBias = 0xa4; // float
		constexpr auto BodySetup = 0xa8; // UBodySetup*
		constexpr auto LODForCollision = 0xb0; // int32_t
		constexpr auto bGenerateMeshDistanceField = 0xb4; // char : 1
		constexpr auto bStripComplexCollisionForConsole = 0xb4; // char : 1
		constexpr auto bHasNavigationData = 0xb4; // char : 1
		constexpr auto bSupportUniformlyDistributedSampling = 0xb4; // char : 1
		constexpr auto bSupportPhysicalMaterialMasks = 0xb4; // char : 1
		constexpr auto bIsBuiltAtRuntime = 0xb4; // char : 1
		constexpr auto bAllowCPUAccess = 0xb4; // char : 1
		constexpr auto bSupportGpuUniformlyDistributedSampling = 0xb5; // char : 1
		constexpr auto Sockets = 0xd8; // TArray<UStaticMeshSocket*>
		constexpr auto PositiveBoundsExtension = 0xf8; // FVector
		constexpr auto NegativeBoundsExtension = 0x104; // FVector
		constexpr auto ExtendedBounds = 0x110; // FBoxSphereBounds
		constexpr auto ElementToIgnoreForTexFactor = 0x12c; // int32_t
		constexpr auto AssetUserData = 0x130; // TArray<UAssetUserData*>
		constexpr auto EditableMesh = 0x148; // UObject*
		constexpr auto NavCollision = 0x150; // UNavCollisionBase*
	}

	namespace n_UUW-ScenarioQuestCell_Sub_C {
		constexpr auto Complete = 0x248; // UImage*
		constexpr auto Image_161 = 0x250; // UImage*
		constexpr auto WidgetSwitcher_2 = 0x258; // UWidgetSwitcher*
	}

	namespace n_UInterpTrackFloatProp {
		constexpr auto PropertyName = 0x90; // FName
	}

	namespace n_UBTNode {
		constexpr auto NodeName = 0x30; // FString
		constexpr auto TreeAsset = 0x40; // UBehaviorTree*
		constexpr auto ParentNode = 0x48; // UBTCompositeNode*
	}

	namespace n_UNativeReplayEventMarkerBasic {
		constexpr auto EventBorder = 0x248; // UReplayEventBorder*
		constexpr auto VisualBorder = 0x250; // UBorder*
		constexpr auto EventInform = 0x258; // UTextBlock*
	}

	namespace n_ULowEntryRawSocketConnectionListenerCode {
		constexpr auto Stopped = 0x28; // bool
		constexpr auto RunExec = 0x29; // bool
		constexpr auto ConnectionSuccess = 0x2a; // bool
		constexpr auto JustConnected = 0x38; // bool
		constexpr auto WaitingForConnectionTime = 0x3c; // float
		constexpr auto SocketConnection = 0x40; // ULowEntryRawSocketConnection*
		constexpr auto LatentUUID = 0x48; // int32_t
	}

	namespace n_UTimelineTemplate {
		constexpr auto TimelineLength = 0x28; // float
		constexpr auto LengthMode = 0x2c; // ETimelineLengthMode
		constexpr auto bAutoPlay = 0x2d; // char : 1
		constexpr auto bLoop = 0x2d; // char : 1
		constexpr auto bReplicated = 0x2d; // char : 1
		constexpr auto bIgnoreTimeDilation = 0x2d; // char : 1
		constexpr auto EventTracks = 0x30; // TArray<FTTEventTrack>
		constexpr auto FloatTracks = 0x40; // TArray<FTTFloatTrack>
		constexpr auto VectorTracks = 0x50; // TArray<FTTVectorTrack>
		constexpr auto LinearColorTracks = 0x60; // TArray<FTTLinearColorTrack>
		constexpr auto MetaDataArray = 0x70; // TArray<FBPVariableMetaDataEntry>
		constexpr auto TimelineGuid = 0x80; // FGuid
		constexpr auto VariableName = 0x90; // FName
		constexpr auto DirectionPropertyName = 0x98; // FName
		constexpr auto UpdateFunctionName = 0xa0; // FName
		constexpr auto FinishedFunctionName = 0xa8; // FName
	}

	namespace n_UParticleModuleLocationPrimitiveTriangle {
		constexpr auto StartOffset = 0x30; // FRawDistributionVector
		constexpr auto Height = 0x78; // FRawDistributionFloat
		constexpr auto Angle = 0xa8; // FRawDistributionFloat
		constexpr auto Thickness = 0xd8; // FRawDistributionFloat
	}

	namespace n_UMaterialExpressionSobol {
		constexpr auto cell = 0x40; // FExpressionInput
		constexpr auto Index = 0x54; // FExpressionInput
		constexpr auto Seed = 0x68; // FExpressionInput
		constexpr auto ConstIndex = 0x7c; // uint32_t
		constexpr auto ConstSeed = 0x80; // FVector2D
	}

	namespace n_UMaterialExpressionReroute {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_ULiveLinkSourceSettings {
		constexpr auto Mode = 0x28; // ELiveLinkSourceMode
		constexpr auto BufferSettings = 0x30; // FLiveLinkSourceBufferManagementSettings
		constexpr auto ConnectionString = 0x80; // FString
		constexpr auto Factory = 0x90; // ULiveLinkSourceFactory*
	}

	namespace n_UAudioImpulseResponse {
		constexpr auto ImpulseResponse = 0x28; // TArray<float>
		constexpr auto NumChannels = 0x38; // int32_t
		constexpr auto SampleRate = 0x3c; // int32_t
		constexpr auto NormalizationVolumeDb = 0x40; // float
		constexpr auto IRData = 0x48; // TArray<float>
	}

	namespace n_UARFaceGeometry {
		constexpr auto LookAtTarget = 0xe8; // FVector
		constexpr auto bIsTracked = 0xf4; // bool
		constexpr auto BlendShapes = 0xf8; // TMap<EARFaceBlendShape, float>
	}

	namespace n_UUW-ArmoryResultListWidget_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Armory_Repair_M = 0x250; // UWidgetAnimation*
		constexpr auto Armory_Strengthen_M = 0x258; // UWidgetAnimation*
		constexpr auto Armory_Failed_M = 0x260; // UWidgetAnimation*
		constexpr auto Armory_Break_M = 0x268; // UWidgetAnimation*
		constexpr auto Armory_Failed_Break_M = 0x270; // UWidgetAnimation*
		constexpr auto Armory_Failed_Down_M = 0x278; // UWidgetAnimation*
		constexpr auto Armory_Awesome_M = 0x280; // UWidgetAnimation*
		constexpr auto Armory_Success_M = 0x288; // UWidgetAnimation*
		constexpr auto Armory_Awesome = 0x290; // UCanvasPanel*
		constexpr auto Armory_Break = 0x298; // UCanvasPanel*
		constexpr auto Armory_Failed = 0x2a0; // UCanvasPanel*
		constexpr auto Armory_Failed_Break = 0x2a8; // UCanvasPanel*
		constexpr auto Armory_Failed_Down = 0x2b0; // UCanvasPanel*
		constexpr auto Armory_Repair = 0x2b8; // UCanvasPanel*
		constexpr auto Armory_Strengthen = 0x2c0; // UCanvasPanel*
		constexpr auto Armory_Success = 0x2c8; // UCanvasPanel*
		constexpr auto Awesome_Damage1 = 0x2d0; // UTextBlock*
		constexpr auto Awesome_Damage2 = 0x2d8; // UTextBlock*
		constexpr auto Awesome_ItemName = 0x2e0; // UTextBlock*
		constexpr auto Awesome_Level1 = 0x2e8; // UTextBlock*
		constexpr auto Awesome_Level2 = 0x2f0; // UTextBlock*
		constexpr auto Awesome_MagSize1 = 0x2f8; // UTextBlock*
		constexpr auto Awesome_MagSize2 = 0x300; // UTextBlock*
		constexpr auto Awesome_Spread1 = 0x308; // UTextBlock*
		constexpr auto Awesome_Spread2 = 0x310; // UTextBlock*
		constexpr auto Awesome_UpLevel = 0x318; // UTextBlock*
		constexpr auto Break_Count = 0x320; // UTextBlock*
		constexpr auto Break_ItemName = 0x328; // UTextBlock*
		constexpr auto BreakTitle = 0x330; // UTextBlock*
		constexpr auto Button_1 = 0x338; // UButton*
		constexpr auto Button_2 = 0x340; // UButton*
		constexpr auto Button_228 = 0x348; // UButton*
		constexpr auto Button_230 = 0x350; // UButton*
		constexpr auto Button_232 = 0x358; // UButton*
		constexpr auto Button_233 = 0x360; // UButton*
		constexpr auto Button_EnchanceCancle = 0x368; // UButton*
		constexpr auto Button_Enhance = 0x370; // UButton*
		constexpr auto Button_Fatigue = 0x378; // UButton*
		constexpr auto Empty = 0x380; // UCanvasPanel*
		constexpr auto FB_Damage1 = 0x388; // UTextBlock*
		constexpr auto FB_Damage2 = 0x390; // UTextBlock*
		constexpr auto FB_Level1 = 0x398; // UTextBlock*
		constexpr auto FB_Level2 = 0x3a0; // UTextBlock*
		constexpr auto FB_MagSize1 = 0x3a8; // UTextBlock*
		constexpr auto FB_MagSize2 = 0x3b0; // UTextBlock*
		constexpr auto FB_Spread1 = 0x3b8; // UTextBlock*
		constexpr auto FB_Spread2 = 0x3c0; // UTextBlock*
		constexpr auto FD_Damage1 = 0x3c8; // UTextBlock*
		constexpr auto FD_Damage2 = 0x3d0; // UTextBlock*
		constexpr auto FD_DownLevel = 0x3d8; // UTextBlock*
		constexpr auto FD_Level1 = 0x3e0; // UTextBlock*
		constexpr auto FD_Level2 = 0x3e8; // UTextBlock*
		constexpr auto FD_MagSize1 = 0x3f0; // UTextBlock*
		constexpr auto FD_MagSize2 = 0x3f8; // UTextBlock*
		constexpr auto FD_Spread1 = 0x400; // UTextBlock*
		constexpr auto FD_Spread2 = 0x408; // UTextBlock*
		constexpr auto HorizontalBox_Awesome_Damage = 0x410; // UHorizontalBox*
		constexpr auto HorizontalBox_Awesome_MagSize = 0x418; // UHorizontalBox*
		constexpr auto HorizontalBox_Awesome_Spread = 0x420; // UHorizontalBox*
		constexpr auto HorizontalBox_FB_Damage = 0x428; // UHorizontalBox*
		constexpr auto HorizontalBox_FB_MagSize = 0x430; // UHorizontalBox*
		constexpr auto HorizontalBox_FB_Spread = 0x438; // UHorizontalBox*
		constexpr auto HorizontalBox_FD_Damage = 0x440; // UHorizontalBox*
		constexpr auto HorizontalBox_FD_MasSize = 0x448; // UHorizontalBox*
		constexpr auto HorizontalBox_FD_Spread = 0x450; // UHorizontalBox*
		constexpr auto HorizontalBox_Strengthen_Damage = 0x458; // UHorizontalBox*
		constexpr auto HorizontalBox_Strengthen_MagSize = 0x460; // UHorizontalBox*
		constexpr auto HorizontalBox_Strengthen_Spread = 0x468; // UHorizontalBox*
		constexpr auto HorizontalBox_Success_Damage = 0x470; // UHorizontalBox*
		constexpr auto HorizontalBox_Success_Durable = 0x478; // UHorizontalBox*
		constexpr auto HorizontalBox_Success_Fatigue = 0x480; // UHorizontalBox*
		constexpr auto HorizontalBox_Success_MagSize = 0x488; // UHorizontalBox*
		constexpr auto HorizontalBox_Success_Spread = 0x490; // UHorizontalBox*
		constexpr auto Image = 0x498; // UImage*
		constexpr auto Image_2 = 0x4a0; // UImage*
		constexpr auto Image_3 = 0x4a8; // UImage*
		constexpr auto Image_4 = 0x4b0; // UImage*
		constexpr auto Image_8 = 0x4b8; // UImage*
		constexpr auto Image_14 = 0x4c0; // UImage*
		constexpr auto Image_15 = 0x4c8; // UImage*
		constexpr auto Image_16 = 0x4d0; // UImage*
		constexpr auto Image_17 = 0x4d8; // UImage*
		constexpr auto Image_18 = 0x4e0; // UImage*
		constexpr auto Image_20 = 0x4e8; // UImage*
		constexpr auto Image_27 = 0x4f0; // UImage*
		constexpr auto Image_167 = 0x4f8; // UImage*
		constexpr auto Image_501 = 0x500; // UImage*
		constexpr auto Image_503 = 0x508; // UImage*
		constexpr auto Image_817 = 0x510; // UImage*
		constexpr auto Image_820 = 0x518; // UImage*
		constexpr auto Image_821 = 0x520; // UImage*
		constexpr auto Image_822 = 0x528; // UImage*
		constexpr auto Image_823 = 0x530; // UImage*
		constexpr auto Image_824 = 0x538; // UImage*
		constexpr auto Image_825 = 0x540; // UImage*
		constexpr auto Image_826 = 0x548; // UImage*
		constexpr auto Image_827 = 0x550; // UImage*
		constexpr auto Image_828 = 0x558; // UImage*
		constexpr auto Image_829 = 0x560; // UImage*
		constexpr auto Image_830 = 0x568; // UImage*
		constexpr auto Image_831 = 0x570; // UImage*
		constexpr auto Image_832 = 0x578; // UImage*
		constexpr auto Image_833 = 0x580; // UImage*
		constexpr auto Image_834 = 0x588; // UImage*
		constexpr auto Image_835 = 0x590; // UImage*
		constexpr auto Image_836 = 0x598; // UImage*
		constexpr auto Image_837 = 0x5a0; // UImage*
		constexpr auto Image_838 = 0x5a8; // UImage*
		constexpr auto Image_839 = 0x5b0; // UImage*
		constexpr auto Image_840 = 0x5b8; // UImage*
		constexpr auto Image_841 = 0x5c0; // UImage*
		constexpr auto Image_842 = 0x5c8; // UImage*
		constexpr auto Image_843 = 0x5d0; // UImage*
		constexpr auto Image_845 = 0x5d8; // UImage*
		constexpr auto Image_846 = 0x5e0; // UImage*
		constexpr auto Image_847 = 0x5e8; // UImage*
		constexpr auto Image_848 = 0x5f0; // UImage*
		constexpr auto Image_849 = 0x5f8; // UImage*
		constexpr auto Image_850 = 0x600; // UImage*
		constexpr auto Image_851 = 0x608; // UImage*
		constexpr auto Image_852 = 0x610; // UImage*
		constexpr auto Image_853 = 0x618; // UImage*
		constexpr auto Image_854 = 0x620; // UImage*
		constexpr auto Image_855 = 0x628; // UImage*
		constexpr auto Image_856 = 0x630; // UImage*
		constexpr auto Image_857 = 0x638; // UImage*
		constexpr auto Image_858 = 0x640; // UImage*
		constexpr auto Image_859 = 0x648; // UImage*
		constexpr auto Image_860 = 0x650; // UImage*
		constexpr auto Image_861 = 0x658; // UImage*
		constexpr auto Image_862 = 0x660; // UImage*
		constexpr auto Image_863 = 0x668; // UImage*
		constexpr auto Image_864 = 0x670; // UImage*
		constexpr auto Image_865 = 0x678; // UImage*
		constexpr auto Image_866 = 0x680; // UImage*
		constexpr auto Image_867 = 0x688; // UImage*
		constexpr auto Image_868 = 0x690; // UImage*
		constexpr auto Image_921 = 0x698; // UImage*
		constexpr auto Image_1264 = 0x6a0; // UImage*
		constexpr auto Image_1266 = 0x6a8; // UImage*
		constexpr auto Image_1269 = 0x6b0; // UImage*
		constexpr auto Image_1270 = 0x6b8; // UImage*
		constexpr auto Image_1271 = 0x6c0; // UImage*
		constexpr auto Image_1272 = 0x6c8; // UImage*
		constexpr auto Image_1273 = 0x6d0; // UImage*
		constexpr auto Image_1277 = 0x6d8; // UImage*
		constexpr auto Image_1278 = 0x6e0; // UImage*
		constexpr auto Image_1279 = 0x6e8; // UImage*
		constexpr auto Image_1280 = 0x6f0; // UImage*
		constexpr auto Image_1284 = 0x6f8; // UImage*
		constexpr auto Image_1285 = 0x700; // UImage*
		constexpr auto Image_1318 = 0x708; // UImage*
		constexpr auto Image_1319 = 0x710; // UImage*
		constexpr auto Image_1320 = 0x718; // UImage*
		constexpr auto Image_1321 = 0x720; // UImage*
		constexpr auto Image_1322 = 0x728; // UImage*
		constexpr auto Image_1323 = 0x730; // UImage*
		constexpr auto Image_1324 = 0x738; // UImage*
		constexpr auto Image_1329 = 0x740; // UImage*
		constexpr auto Image_1330 = 0x748; // UImage*
		constexpr auto Image_1335 = 0x750; // UImage*
		constexpr auto Image_1336 = 0x758; // UImage*
		constexpr auto Image_1341 = 0x760; // UImage*
		constexpr auto Image_1342 = 0x768; // UImage*
		constexpr auto Image_1343 = 0x770; // UImage*
		constexpr auto Image_1344 = 0x778; // UImage*
		constexpr auto Image_1345 = 0x780; // UImage*
		constexpr auto Image_1346 = 0x788; // UImage*
		constexpr auto Image_1347 = 0x790; // UImage*
		constexpr auto Image_1348 = 0x798; // UImage*
		constexpr auto Image_1349 = 0x7a0; // UImage*
		constexpr auto Image_1350 = 0x7a8; // UImage*
		constexpr auto Image_1351 = 0x7b0; // UImage*
		constexpr auto Image_1352 = 0x7b8; // UImage*
		constexpr auto Image_1353 = 0x7c0; // UImage*
		constexpr auto Image_1354 = 0x7c8; // UImage*
		constexpr auto Image_1355 = 0x7d0; // UImage*
		constexpr auto Image_1356 = 0x7d8; // UImage*
		constexpr auto Image_1358 = 0x7e0; // UImage*
		constexpr auto Image_1359 = 0x7e8; // UImage*
		constexpr auto Image_1361 = 0x7f0; // UImage*
		constexpr auto Image_1362 = 0x7f8; // UImage*
		constexpr auto Image_1363 = 0x800; // UImage*
		constexpr auto Image_1364 = 0x808; // UImage*
		constexpr auto Image_1366 = 0x810; // UImage*
		constexpr auto Image_1368 = 0x818; // UImage*
		constexpr auto Image_1369 = 0x820; // UImage*
		constexpr auto Image_1370 = 0x828; // UImage*
		constexpr auto Image_1372 = 0x830; // UImage*
		constexpr auto Image_1374 = 0x838; // UImage*
		constexpr auto Image_1375 = 0x840; // UImage*
		constexpr auto Image_1376 = 0x848; // UImage*
		constexpr auto Image_1378 = 0x850; // UImage*
		constexpr auto Image_1380 = 0x858; // UImage*
		constexpr auto Image_1381 = 0x860; // UImage*
		constexpr auto Image_1382 = 0x868; // UImage*
		constexpr auto Image_1384 = 0x870; // UImage*
		constexpr auto Image_1972 = 0x878; // UImage*
		constexpr auto ImageTX_Complete_Fail = 0x880; // UImage*
		constexpr auto ItemList = 0x888; // UOverlay*
		constexpr auto Overlay_FB_ItemList = 0x890; // UOverlay*
		constexpr auto Strengthen_Cost = 0x898; // UTextBlock*
		constexpr auto Strengthen_Count = 0x8a0; // UTextBlock*
		constexpr auto Strengthen_CurrentDamageText1 = 0x8a8; // UTextBlock*
		constexpr auto Strengthen_CurrentDamageText2 = 0x8b0; // UTextBlock*
		constexpr auto Strengthen_CurrentMagSizeText1 = 0x8b8; // UTextBlock*
		constexpr auto Strengthen_CurrentMagSizeText2 = 0x8c0; // UTextBlock*
		constexpr auto Strengthen_CurrentSpreadText1 = 0x8c8; // UTextBlock*
		constexpr auto Strengthen_CurrentSpreadText2 = 0x8d0; // UTextBlock*
		constexpr auto Strengthen_Icon = 0x8d8; // UImage*
		constexpr auto Strengthen_IconType1 = 0x8e0; // UImage*
		constexpr auto Strengthen_IconType2 = 0x8e8; // UImage*
		constexpr auto Strengthen_IconType3 = 0x8f0; // UImage*
		constexpr auto Strengthen_Level1 = 0x8f8; // UTextBlock*
		constexpr auto Strengthen_Level2 = 0x900; // UTextBlock*
		constexpr auto Strengthen_Name = 0x908; // UTextBlock*
		constexpr auto Strengthen_TextType1 = 0x910; // UTextBlock*
		constexpr auto Strengthen_TextType2 = 0x918; // UTextBlock*
		constexpr auto Strengthen_TextType3 = 0x920; // UTextBlock*
		constexpr auto Success_Damage1 = 0x928; // UTextBlock*
		constexpr auto Success_Damage2 = 0x930; // UTextBlock*
		constexpr auto Success_ItemName = 0x938; // UTextBlock*
		constexpr auto Success_ItemName_2 = 0x940; // UTextBlock*
		constexpr auto Success_Level1 = 0x948; // UTextBlock*
		constexpr auto Success_Level2 = 0x950; // UTextBlock*
		constexpr auto Success_MagSize1 = 0x958; // UTextBlock*
		constexpr auto Success_MagSize2 = 0x960; // UTextBlock*
		constexpr auto Success_Spread1 = 0x968; // UTextBlock*
		constexpr auto Success_Spread2 = 0x970; // UTextBlock*
		constexpr auto Success_UpLevel = 0x978; // UTextBlock*
		constexpr auto T_Durability = 0x980; // UTextBlock*
		constexpr auto T_Fatigue = 0x988; // UTextBlock*
		constexpr auto T_PreFatigue = 0x990; // UTextBlock*
		constexpr auto TerrainHeight = 0x998; // UProgressBar*
		constexpr auto TextBlock_2089 = 0x9a0; // UTextBlock*
		constexpr auto TextBlock_FB_ItemCount = 0x9a8; // UTextBlock*
		constexpr auto TextBlock_FB_ItemName = 0x9b0; // UTextBlock*
		constexpr auto TextBlock_FB_Title = 0x9b8; // UTextBlock*
		constexpr auto WidgetSwitcher_1 = 0x9c0; // UWidgetSwitcher*
		constexpr auto ResultInfo = 0x9c8; // FCoh_ResultInfo
		constexpr auto CurrentDurability = 0xa00; // float
	}

	namespace n_ULowEntryLatentActionObject {
		constexpr auto Finished = 0x28; // bool
		constexpr auto Result = 0x30; // UObject*
		constexpr auto KeepAliveCount = 0x38; // int32_t
	}

	namespace n_UMovieSceneFadeSection {
		constexpr auto FadeColor = 0x180; // FLinearColor
		constexpr auto bFadeAudio = 0x190; // char : 1
	}

	namespace n_UInterpTrackVectorBase {
		constexpr auto VectorTrack = 0x70; // FInterpCurveVector
		constexpr auto CurveTension = 0x88; // float
	}

	namespace n_UGameUserSettings {
		constexpr auto bUseVSync = 0x28; // bool
		constexpr auto bIsSmoothFrameRate = 0x29; // bool
		constexpr auto bUseDynamicResolution = 0x2a; // bool
		constexpr auto ResolutionSizeX = 0x80; // uint32_t
		constexpr auto ResolutionSizeY = 0x84; // uint32_t
		constexpr auto LastUserConfirmedResolutionSizeX = 0x88; // uint32_t
		constexpr auto LastUserConfirmedResolutionSizeY = 0x8c; // uint32_t
		constexpr auto WindowPosX = 0x90; // int32_t
		constexpr auto WindowPosY = 0x94; // int32_t
		constexpr auto FullscreenMode = 0x98; // int32_t
		constexpr auto LastConfirmedFullscreenMode = 0x9c; // int32_t
		constexpr auto PreferredFullscreenMode = 0xa0; // int32_t
		constexpr auto Version = 0xa4; // uint32_t
		constexpr auto AudioQualityLevel = 0xa8; // int32_t
		constexpr auto LastConfirmedAudioQualityLevel = 0xac; // int32_t
		constexpr auto FrameRateLimit = 0xb0; // float
		constexpr auto LobbyFrameRateLimit = 0xb4; // float
		constexpr auto DesiredScreenWidth = 0xbc; // int32_t
		constexpr auto bUseDesiredScreenHeight = 0xc0; // bool
		constexpr auto DesiredScreenHeight = 0xc4; // int32_t
		constexpr auto LastUserConfirmedDesiredScreenWidth = 0xc8; // int32_t
		constexpr auto LastUserConfirmedDesiredScreenHeight = 0xcc; // int32_t
		constexpr auto LastRecommendedScreenWidth = 0xd0; // float
		constexpr auto LastRecommendedScreenHeight = 0xd4; // float
		constexpr auto LastCPUBenchmarkResult = 0xd8; // float
		constexpr auto LastGPUBenchmarkResult = 0xdc; // float
		constexpr auto LastCPUBenchmarkSteps = 0xe0; // TArray<float>
		constexpr auto LastGPUBenchmarkSteps = 0xf0; // TArray<float>
		constexpr auto LastCPUBrand = 0x100; // FString
		constexpr auto LastGPUBrand = 0x110; // FString
		constexpr auto LastInstallStorageType = 0x120; // int32_t
		constexpr auto LastTotalGraphicsMemory = 0x128; // int64_t
		constexpr auto LastGPUBenchmarkMultiplier = 0x130; // float
		constexpr auto bUseHDRDisplayOutput = 0x134; // bool
		constexpr auto HDRDisplayOutputNits = 0x138; // int32_t
		constexpr auto ShowHUD = 0x13c; // bool
		constexpr auto OnGameUserSettingsUINeedsUpdate = 0x140; // FMulticastInlineDelegate
	}

	namespace n_UTransformProxy {
		constexpr auto bRotatePerObject = 0x70; // bool
		constexpr auto bSetPivotMode = 0x71; // bool
		constexpr auto SharedTransform = 0x90; // FTransform
		constexpr auto InitialSharedTransform = 0xc0; // FTransform
	}

	namespace n_UDistributionFloatConstant {
		constexpr auto Constant = 0x38; // float
	}

	namespace n_UDatasmithCineCameraActorTemplate {
		constexpr auto LookatTrackingSettings = 0x30; // FDatasmithCameraLookatTrackingSettingsTemplate
	}

	namespace n_ABP-PersonalSupplyBox_C {
		constexpr auto UberGraphFrame = 0x380; // FPointerToUberGraphFrame
		constexpr auto StaticMeshUnassigned = 0x388; // UStaticMeshComponent*
		constexpr auto StaticMeshAssigned = 0x390; // UStaticMeshComponent*
		constexpr auto LandingTimer = 0x398; // float
		constexpr auto bLanding = 0x39c; // bool
		constexpr auto ItemResult = 0x3a0; // TArray<FSpawnItemResult>
		constexpr auto ParachuteTimer = 0x3b0; // float
		constexpr auto VisibleValue = 0x3b4; // float
		constexpr auto VisibleAnimationState = 0x3b8; // bool
	}

	namespace n_UAISense_Blueprint {
		constexpr auto ListenerDataType = 0x80; // UUserDefinedStruct*
		constexpr auto ListenerContainer = 0x88; // TArray<UAIPerceptionComponent*>
		constexpr auto UnprocessedEvents = 0x98; // TArray<UAISenseEvent*>
	}

	namespace n_UEditableGameplayTagQuery {
		constexpr auto UserDescription = 0x28; // FString
		constexpr auto RootExpression = 0x48; // UEditableGameplayTagQueryExpression*
		constexpr auto TagQueryExportText_Helper = 0x50; // FGameplayTagQuery
	}

	namespace n_UBTDecorator_BlackboardBase {
		constexpr auto BlackboardKey = 0x68; // FBlackboardKeySelector
	}

	namespace n_UNiagaraDataInterfaceCurlNoise {
		constexpr auto Seed = 0x30; // uint32_t
	}

	namespace n_UUW-ReplayGuideWidget_C {
		constexpr auto FollowCamGuide = 0x248; // UOverlay*
		constexpr auto FreeCamGuide = 0x250; // UOverlay*
		constexpr auto KeyImageWidget_C_1 = 0x258; // UKeyImageWidget_C*
		constexpr auto KeyImageWidget_C_2 = 0x260; // UKeyImageWidget_C*
		constexpr auto KeyImageWidget_C_3 = 0x268; // UKeyImageWidget_C*
		constexpr auto KeyImageWidget_C_4 = 0x270; // UKeyImageWidget_C*
		constexpr auto KeyImageWidget_C_5 = 0x278; // UKeyImageWidget_C*
		constexpr auto KeyImageWidget_C_6 = 0x280; // UKeyImageWidget_C*
		constexpr auto KeyImageWidget_C_7 = 0x288; // UKeyImageWidget_C*
		constexpr auto KeyImageWidget_C_8 = 0x290; // UKeyImageWidget_C*
		constexpr auto KeyImageWidget_C_10 = 0x298; // UKeyImageWidget_C*
		constexpr auto KeyImageWidget_C_153 = 0x2a0; // UKeyImageWidget_C*
		constexpr auto KeyImageWidget_C_154 = 0x2a8; // UKeyImageWidget_C*
		constexpr auto KeyImageWidget_C_155 = 0x2b0; // UKeyImageWidget_C*
		constexpr auto KeyImageWidget_C_157 = 0x2b8; // UKeyImageWidget_C*
		constexpr auto KeyImageWidget_C_158 = 0x2c0; // UKeyImageWidget_C*
		constexpr auto KeyImageWidget_C_159 = 0x2c8; // UKeyImageWidget_C*
		constexpr auto KeyImageWidget_C_160 = 0x2d0; // UKeyImageWidget_C*
		constexpr auto KillCamGuide = 0x2d8; // UOverlay*
		constexpr auto T_Guide = 0x2e0; // UTextBlock*
		constexpr auto TextBlock_1 = 0x2e8; // UTextBlock*
		constexpr auto TextBlock_2 = 0x2f0; // UTextBlock*
		constexpr auto TextBlock_4 = 0x2f8; // UTextBlock*
		constexpr auto TextBlock_5 = 0x300; // UTextBlock*
		constexpr auto TextBlock_6 = 0x308; // UTextBlock*
		constexpr auto TextBlock_7 = 0x310; // UTextBlock*
		constexpr auto TextBlock_8 = 0x318; // UTextBlock*
		constexpr auto TextBlock_9 = 0x320; // UTextBlock*
		constexpr auto TextBlock_10 = 0x328; // UTextBlock*
		constexpr auto TextBlock_11 = 0x330; // UTextBlock*
		constexpr auto TextBlock_13 = 0x338; // UTextBlock*
		constexpr auto TextBlock_14 = 0x340; // UTextBlock*
		constexpr auto TextBlock_15 = 0x348; // UTextBlock*
		constexpr auto TextBlock_16 = 0x350; // UTextBlock*
		constexpr auto TextBlock_17 = 0x358; // UTextBlock*
		constexpr auto WidgetSwitcher_132 = 0x360; // UWidgetSwitcher*
	}

	namespace n_UABP-InventoryPawn_C {
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_LayeredBoneBlend_8 = 0x278; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_33 = 0x338; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_32 = 0x3b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_31 = 0x428; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_7 = 0x4a0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_HandIKRetargeting_2 = 0x560; // FAnimNode_HandIKRetargeting
		constexpr auto AnimGraphNode_TwoBoneIK_4 = 0x680; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_LocalToComponentSpace_3 = 0x860; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_TwoBoneIK_3 = 0x880; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_ModifyBone_2 = 0xa60; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_3 = 0xb68; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_SaveCachedPose_8 = 0xb88; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_ApplyAdditive_6 = 0xc40; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SequencePlayer_30 = 0xd08; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_29 = 0xd80; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_28 = 0xdf8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_6 = 0xe70; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_27 = 0xf30; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_26 = 0xfa8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_5 = 0x1020; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_25 = 0x10e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_4 = 0x1158; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SaveCachedPose_7 = 0x1208; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_8 = 0x12c0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_8 = 0x12e8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_24 = 0x1388; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SaveCachedPose_6 = 0x1400; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_23 = 0x14b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_7 = 0x1530; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_22 = 0x15d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_6 = 0x1648; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose_5 = 0x16e8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_21 = 0x17a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_5 = 0x1818; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_20 = 0x18b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SaveCachedPose_4 = 0x1930; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_19 = 0x19e8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_4 = 0x1a60; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_18 = 0x1b00; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_3 = 0x1b78; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_7 = 0x1c18; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_6 = 0x1c40; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_5 = 0x1c68; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_HandIKRetargeting = 0x1c90; // FAnimNode_HandIKRetargeting
		constexpr auto AnimGraphNode_TwoBoneIK_2 = 0x1db0; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_LocalToComponentSpace_2 = 0x1f90; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_TwoBoneIK = 0x1fb0; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_ModifyBone = 0x2190; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_2 = 0x2298; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_SequencePlayer_17 = 0x22b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_5 = 0x2330; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SequencePlayer_16 = 0x23f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x2470; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_AnimDynamics_11 = 0x2490; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_10 = 0x28d0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x2d10; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_AnimDynamics_9 = 0x2d30; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_8 = 0x3170; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_7 = 0x35b0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_6 = 0x39f0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_5 = 0x3e30; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_4 = 0x4270; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_3 = 0x46b0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_2 = 0x4af0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics = 0x4f30; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_SequencePlayer_15 = 0x5370; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x53e8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_14 = 0x5488; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_13 = 0x5500; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool = 0x5578; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_12 = 0x5618; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_KawaiiPhysics_26 = 0x5690; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_KawaiiPhysics_25 = 0x58e0; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_KawaiiPhysics_24 = 0x5b30; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_KawaiiPhysics_23 = 0x5d80; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_KawaiiPhysics_22 = 0x5fd0; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_KawaiiPhysics_21 = 0x6220; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_SequencePlayer_11 = 0x6470; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_4 = 0x64e8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByEnum_3 = 0x65a8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_10 = 0x6658; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_2 = 0x66d0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_LayeredBoneBlend_3 = 0x6780; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_9 = 0x6840; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_4 = 0x68b8; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SequencePlayer_8 = 0x6980; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_7 = 0x69f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_2 = 0x6a70; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_6 = 0x6b30; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_3 = 0x6ba8; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0x6c70; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x6ce8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x6d60; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_2 = 0x6dd8; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x6ea0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BoneDrivenController_8 = 0x6f18; // FAnimNode_BoneDrivenController
		constexpr auto AnimGraphNode_BoneDrivenController_7 = 0x7030; // FAnimNode_BoneDrivenController
		constexpr auto AnimGraphNode_BoneDrivenController_6 = 0x7148; // FAnimNode_BoneDrivenController
		constexpr auto AnimGraphNode_BoneDrivenController_5 = 0x7260; // FAnimNode_BoneDrivenController
		constexpr auto AnimGraphNode_BoneDrivenController_4 = 0x7378; // FAnimNode_BoneDrivenController
		constexpr auto AnimGraphNode_BoneDrivenController_3 = 0x7490; // FAnimNode_BoneDrivenController
		constexpr auto AnimGraphNode_BoneDrivenController_2 = 0x75a8; // FAnimNode_BoneDrivenController
		constexpr auto AnimGraphNode_BoneDrivenController = 0x76c0; // FAnimNode_BoneDrivenController
		constexpr auto AnimGraphNode_KawaiiPhysics_20 = 0x77e0; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_KawaiiPhysics_19 = 0x7a30; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_KawaiiPhysics_18 = 0x7c80; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_KawaiiPhysics_17 = 0x7ed0; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_KawaiiPhysics_16 = 0x8120; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_KawaiiPhysics_15 = 0x8370; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_KawaiiPhysics_14 = 0x85c0; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_KawaiiPhysics_13 = 0x8810; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_KawaiiPhysics_12 = 0x8a60; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_KawaiiPhysics_11 = 0x8cb0; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_KawaiiPhysics_10 = 0x8f00; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_KawaiiPhysics_9 = 0x9150; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_KawaiiPhysics_8 = 0x93a0; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_KawaiiPhysics_7 = 0x95f0; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_SequencePlayer = 0x9840; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive = 0x98b8; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_UseCachedPose_4 = 0x9980; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_3 = 0x99a8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0x99d0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose = 0x99f8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_3 = 0x9a20; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend = 0x9ad8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SaveCachedPose_2 = 0x9b98; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose = 0x9c50; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByEnum = 0x9d08; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_Root = 0x9db8; // FAnimNode_Root
		constexpr auto AnimGraphNode_KawaiiPhysics_6 = 0x9df0; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_KawaiiPhysics_5 = 0xa040; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_KawaiiPhysics_4 = 0xa290; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_KawaiiPhysics_3 = 0xa4e0; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_KawaiiPhysics_2 = 0xa730; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_KawaiiPhysics = 0xa980; // FAnimNode_KawaiiPhysics
		constexpr auto Character = 0xabd0; // ABravoHotelCharacter*
		constexpr auto WeaponAnimType = 0xabd8; // EWeaponAnimationType
		constexpr auto HandAnim = 0xabe0; // UAnimSequence*
		constexpr auto HandL_Location = 0xabe8; // FVector
		constexpr auto HandL_Rotation = 0xabf4; // FRotator
		constexpr auto Recorder = 0xac00; // ABP-CharacterRecording_C*
		constexpr auto GripType = 0xac08; // EWeaponAttachmentGrip
		constexpr auto IsEquippingNormalGrip = 0xac09; // bool
		constexpr auto UnarmedIdlePose = 0xac10; // UAnimSequence*
		constexpr auto IdleNum = 0xac18; // int32_t
		constexpr auto bIsMale = 0xac1c; // bool
		constexpr auto bIsEquippingGatling = 0xac1d; // bool
		constexpr auto bIsEquippingRPG = 0xac1e; // bool
		constexpr auto InventoryCharacter = 0xac20; // ABravoHotelInventoryCharacter*
		constexpr auto AnimDynamicsForce = 0xac28; // FVector
		constexpr auto PrevMeshRotationYaw = 0xac34; // float
		constexpr auto BoneDrivenValue = 0xac38; // float
	}

	namespace n_UMovieSceneEventTrack {
		constexpr auto bFireEventsWhenForwards = 0x58; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0x58; // char : 1
		constexpr auto EventPosition = 0x5c; // EFireEventsAtPosition
		constexpr auto EventReceivers = 0x60; // TArray<FMovieSceneObjectBindingID>
		constexpr auto Sections = 0x70; // TArray<UMovieSceneSection*>
	}

	namespace n_UUserDefinedCaptureProtocol {
		constexpr auto World = 0x58; // UWorld*
	}

	namespace n_UUW-ListWidget_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto UniformGridPanel_List = 0x250; // UUniformGridPanel*
		constexpr auto WidgetClass = 0x258; // UUserWidget*
		constexpr auto bStartFromTop = 0x260; // bool
		constexpr auto MaxWidgetCount = 0x264; // int32_t
		constexpr auto Alignment = 0x268; // EHorizontalAlignment
		constexpr auto SlotPadding = 0x26c; // FMargin
	}

	namespace n_UWorld {
		constexpr auto PersistentLevel = 0x48; // ULevel*
		constexpr auto NetDriver = 0x50; // UNetDriver*
		constexpr auto LineBatcher = 0x58; // ULineBatchComponent*
		constexpr auto PersistentLineBatcher = 0x60; // ULineBatchComponent*
		constexpr auto ForegroundLineBatcher = 0x68; // ULineBatchComponent*
		constexpr auto NetworkManager = 0x70; // AGameNetworkManager*
		constexpr auto PhysicsCollisionHandler = 0x78; // UPhysicsCollisionHandler*
		constexpr auto ExtraReferencedObjects = 0x80; // TArray<UObject*>
		constexpr auto PerModuleDataObjects = 0x90; // TArray<UObject*>
		constexpr auto LevelSequenceActors = 0xa0; // TArray<AActor*>
		constexpr auto StreamingLevels = 0xb0; // TArray<ULevelStreaming*>
		constexpr auto StreamingLevelsToConsider = 0xc0; // FStreamingLevelsToConsider
		constexpr auto StreamingLevelsPrefix = 0x120; // FString
		constexpr auto CurrentLevelPendingVisibility = 0x130; // ULevel*
		constexpr auto CurrentLevelPendingInvisibility = 0x138; // ULevel*
		constexpr auto DemoNetDriver = 0x140; // UDemoNetDriver*
		constexpr auto MyParticleEventManager = 0x148; // AParticleEventManager*
		constexpr auto DefaultPhysicsVolume = 0x150; // APhysicsVolume*
		constexpr auto bAreConstraintsDirty = 0x16e; // char : 1
		constexpr auto NavigationSystem = 0x170; // UNavigationSystemBase*
		constexpr auto AuthorityGameMode = 0x178; // AGameModeBase*
		constexpr auto GameState = 0x180; // AGameStateBase*
		constexpr auto AISystem = 0x188; // UAISystemBase*
		constexpr auto AvoidanceManager = 0x190; // UAvoidanceManager*
		constexpr auto Levels = 0x198; // TArray<ULevel*>
		constexpr auto LevelCollections = 0x1a8; // TArray<FLevelCollection>
		constexpr auto OwningGameInstance = 0x1d8; // UGameInstance*
		constexpr auto ParameterCollectionInstances = 0x1e0; // TArray<UMaterialParameterCollectionInstance*>
		constexpr auto CanvasForRenderingToTarget = 0x1f0; // UCanvas*
		constexpr auto CanvasForDrawMaterialToRenderTarget = 0x1f8; // UCanvas*
		constexpr auto ComponentsThatNeedEndOfFrameUpdate = 0x250; // TArray<UActorComponent*>
		constexpr auto ComponentsThatNeedEndOfFrameUpdate_OnGameThread = 0x260; // TArray<UActorComponent*>
		constexpr auto WorldComposition = 0x5b0; // UWorldComposition*
		constexpr auto PSCPool = 0x650; // FWorldPSCPool
	}

	namespace n_AControlPointMeshActor {
		constexpr auto ControlPointMeshComponent = 0x318; // UControlPointMeshComponent*
	}

	namespace n_UBravoHotelBTServiceDetectTarget {
		constexpr auto BlackboardComponent = 0x70; // UBlackboardComponent*
	}

	namespace n_UProceduralMeshComponent {
		constexpr auto bUseComplexAsSimpleCollision = 0x4e8; // bool
		constexpr auto bUseAsyncCooking = 0x4e9; // bool
		constexpr auto ProcMeshBodySetup = 0x4f0; // UBodySetup*
		constexpr auto ProcMeshSections = 0x4f8; // TArray<FProcMeshSection>
		constexpr auto CollisionConvexElems = 0x508; // TArray<FKConvexElem>
		constexpr auto LocalBounds = 0x518; // FBoxSphereBounds
		constexpr auto AsyncBodySetupQueue = 0x538; // TArray<UBodySetup*>
	}

	namespace n_ULowEntryRawSocketConnection {
		constexpr auto ListenerCode = 0x38; // ULowEntryRawSocketConnectionListenerCode*
		constexpr auto Host = 0x40; // FString
		constexpr auto Port = 0x50; // int32_t
		constexpr auto PortUdp = 0x54; // int32_t
		constexpr auto SendingBytes = 0x58; // TArray<char>
		constexpr auto ReceivedBytes = 0x68; // TArray<char>
		constexpr auto ReceivingBuffer = 0x78; // TArray<char>
		constexpr auto CanCallOnDisconnect = 0x98; // bool
		constexpr auto OnConnectEvent = 0x9c; // FDelegate
		constexpr auto OnDisconnectEvent = 0xac; // FDelegate
		constexpr auto OnReceiveMessageEvent = 0xbc; // FDelegate
		constexpr auto OnReceiveUnreliableMessageEvent = 0xcc; // FDelegate
	}

	namespace n_UInterpTrackInstProperty {
		constexpr auto InterpProperty = 0x28; // TFieldPath<FProperty>
		constexpr auto PropertyOuterObjectInst = 0x48; // UObject*
	}

	namespace n_UParticleSystemComponent {
		constexpr auto Template = 0x4b0; // UParticleSystem*
		constexpr auto EmitterMaterials = 0x4b8; // TArray<UMaterialInterface*>
		constexpr auto SkelMeshComponents = 0x4c8; // TArray<USkeletalMeshComponent*>
		constexpr auto bResetOnDetach = 0x4d9; // char : 1
		constexpr auto bUpdateOnDedicatedServer = 0x4d9; // char : 1
		constexpr auto bAllowRecycling = 0x4d9; // char : 1
		constexpr auto bAutoManageAttachment = 0x4d9; // char : 1
		constexpr auto bAutoAttachWeldSimulatedBodies = 0x4d9; // char : 1
		constexpr auto bWarmingUp = 0x4da; // char : 1
		constexpr auto bOverrideLODMethod = 0x4da; // char : 1
		constexpr auto bSkipUpdateDynamicDataDuringTick = 0x4da; // char : 1
		constexpr auto LODMethod = 0x4e5; // ParticleSystemLODMethod
		constexpr auto RequiredSignificance = 0x4e6; // EParticleSignificanceLevel
		constexpr auto InstanceParameters = 0x4e8; // TArray<FParticleSysParam>
		constexpr auto OnParticleSpawn = 0x4f8; // FMulticastInlineDelegate
		constexpr auto OnParticleBurst = 0x508; // FMulticastInlineDelegate
		constexpr auto OnParticleDeath = 0x518; // FMulticastInlineDelegate
		constexpr auto OnParticleCollide = 0x528; // FMulticastInlineDelegate
		constexpr auto bOldPositionValid = 0x538; // bool
		constexpr auto OldPosition = 0x53c; // FVector
		constexpr auto PartSysVelocity = 0x548; // FVector
		constexpr auto WarmupTime = 0x554; // float
		constexpr auto WarmupTickRate = 0x558; // float
		constexpr auto SecondsBeforeInactive = 0x570; // float
		constexpr auto MaxTimeBeforeForceUpdateTransform = 0x578; // float
		constexpr auto ReplayClips = 0x598; // TArray<UParticleSystemReplay*>
		constexpr auto CustomTimeDilation = 0x5b0; // float
		constexpr auto AutoAttachParent = 0x608; // TWeakObjectPtr<USceneComponent>
		constexpr auto AutoAttachSocketName = 0x610; // FName
		constexpr auto AutoAttachLocationRule = 0x618; // EAttachmentRule
		constexpr auto AutoAttachRotationRule = 0x619; // EAttachmentRule
		constexpr auto AutoAttachScaleRule = 0x61a; // EAttachmentRule
		constexpr auto OnSystemFinished = 0x648; // FMulticastInlineDelegate
	}

	namespace n_URuntimeVirtualTextureStreamingProxy {
		constexpr auto Settings = 0xe8; // FVirtualTextureBuildSettings
		constexpr auto bSinglePhysicalSpace = 0xf4; // bool
		constexpr auto BuildHash = 0xf8; // uint32_t
	}

	namespace n_UAkAssetDataSwitchContainer {
		constexpr auto SwitchContainers = 0x70; // TArray<UAkAssetDataSwitchContainerData*>
		constexpr auto DefaultGroupValue = 0x80; // UAkGroupValue*
	}

	namespace n_UMaterialExpressionShadowReplace {
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto Shadow = 0x54; // FExpressionInput
	}

	namespace n_UUW-StatupWidget_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Anim_MoveUp_HUD = 0x250; // UWidgetAnimation*
		constexpr auto Anim_MoveRight = 0x258; // UWidgetAnimation*
		constexpr auto Anim_MoveUp = 0x260; // UWidgetAnimation*
		constexpr auto UW-StatupWidget_Item_Attack = 0x268; // UUW-StatupWidget_Item_C*
		constexpr auto UW-StatupWidget_Item_Capacity = 0x270; // UUW-StatupWidget_Item_C*
		constexpr auto UW-StatupWidget_Item_Damage = 0x278; // UUW-StatupWidget_Item_C*
		constexpr auto UW-StatupWidget_Item_Decrement = 0x280; // UUW-StatupWidget_Item_C*
		constexpr auto UW-StatupWidget_Item_Health = 0x288; // UUW-StatupWidget_Item_C*
		constexpr auto UW-StatupWidget_Item_Speed = 0x290; // UUW-StatupWidget_Item_C*
		constexpr auto VerticalBox_Stats = 0x298; // UVerticalBox*
	}

	namespace n_APlayerState {
		constexpr auto Score = 0x320; // float
		constexpr auto PlayerId = 0x324; // int32_t
		constexpr auto Ping = 0x328; // char
		constexpr auto bShouldUpdateReplicatedPing = 0x32a; // char : 1
		constexpr auto bIsSpectator = 0x32a; // char : 1
		constexpr auto bOnlySpectator = 0x32a; // char : 1
		constexpr auto bIsABot = 0x32a; // char : 1
		constexpr auto bIsInactive = 0x32a; // char : 1
		constexpr auto bFromPreviousLevel = 0x32a; // char : 1
		constexpr auto StartTime = 0x32c; // int32_t
		constexpr auto EngineMessageClass = 0x330; // ULocalMessage*
		constexpr auto SavedNetworkAddress = 0x340; // FString
		constexpr auto UniqueID = 0x350; // FUniqueNetIdRepl
		constexpr auto PawnPrivate = 0x380; // APawn*
		constexpr auto PlayerNamePrivate = 0x400; // FString
	}

	namespace n_UAkSwitchInitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettingsWithSampleRate
		constexpr auto CommunicationSettings = 0x90; // FAkCommunicationSettingsWithCommSelection
		constexpr auto AdvancedSettings = 0xb8; // FAkAdvancedInitializationSettingsWithMultiCoreRendering
	}

	namespace n_ULuminARCandidateImage {
		constexpr auto bUseUnreliablePose = 0x58; // bool
		constexpr auto bImageIsStationary = 0x59; // bool
	}

	namespace n_UMagicLeapPlanesComponent {
		constexpr auto QueryFlags = 0x230; // TArray<EMagicLeapPlaneQueryFlags>
		constexpr auto SearchVolume = 0x240; // UBoxComponent*
		constexpr auto MaxResults = 0x248; // int32_t
		constexpr auto MinHolePerimeter = 0x24c; // float
		constexpr auto MinPlaneArea = 0x250; // float
		constexpr auto QueryType = 0x254; // EMagicLeapPlaneQueryType
		constexpr auto SimilarityThreshold = 0x258; // float
		constexpr auto OnPlanesQueryResult = 0x260; // FMulticastInlineDelegate
		constexpr auto OnPersistentPlanesQueryResult = 0x270; // FMulticastInlineDelegate
	}

	namespace n_URandomVector {
		constexpr auto Magnitude = 0xb0; // float
	}

	namespace n_UTexture {
		constexpr auto LightingGuid = 0x48; // FGuid
		constexpr auto LODBias = 0x58; // int32_t
		constexpr auto CompressionSettings = 0x5c; // TextureCompressionSettings
		constexpr auto Filter = 0x5d; // TextureFilter
		constexpr auto MipLoadOptions = 0x5e; // ETextureMipLoadOptions
		constexpr auto LODGroup = 0x5f; // TextureGroup
		constexpr auto SRGB = 0x60; // char : 1
		constexpr auto bNoTiling = 0x60; // char : 1
		constexpr auto VirtualTextureStreaming = 0x60; // char : 1
		constexpr auto CompressionYCoCg = 0x60; // char : 1
		constexpr auto bAsyncResourceReleaseHasBeenStarted = 0x60; // char : 1
		constexpr auto AssetUserData = 0x68; // TArray<UAssetUserData*>
	}

	namespace n_ATriggerBase {
		constexpr auto CollisionComponent = 0x318; // UShapeComponent*
	}

	namespace n_UMaterialExpressionLandscapeLayerSample {
		constexpr auto ParameterName = 0x40; // FName
		constexpr auto PreviewWeight = 0x48; // float
		constexpr auto ExpressionGUID = 0x4c; // FGuid
	}

	namespace n_ABravoHotelHISMMesh {
		constexpr auto RootNode = 0x318; // USceneComponent*
		constexpr auto ActionLink = 0x320; // bool
	}

	namespace n_UMaterialInstance {
		constexpr auto PhysMaterial = 0x88; // UPhysicalMaterial*
		constexpr auto PhysicalMaterialMap = 0x90; // UPhysicalMaterial* [0x8]
		constexpr auto Parent = 0xd0; // UMaterialInterface*
		constexpr auto bHasStaticPermutationResource = 0xd8; // char : 1
		constexpr auto bOverrideSubsurfaceProfile = 0xd8; // char : 1
		constexpr auto ScalarParameterValues = 0xe0; // TArray<FScalarParameterValue>
		constexpr auto VectorParameterValues = 0xf0; // TArray<FVectorParameterValue>
		constexpr auto TextureParameterValues = 0x100; // TArray<FTextureParameterValue>
		constexpr auto RuntimeVirtualTextureParameterValues = 0x110; // TArray<FRuntimeVirtualTextureParameterValue>
		constexpr auto FontParameterValues = 0x120; // TArray<FFontParameterValue>
		constexpr auto BasePropertyOverrides = 0x130; // FMaterialInstanceBasePropertyOverrides
		constexpr auto StaticParameters = 0x148; // FStaticParameterSet
		constexpr auto CachedLayerParameters = 0x188; // FMaterialCachedParameters
		constexpr auto CachedReferencedTextures = 0x328; // TArray<UObject*>
	}

	namespace n_UAISenseConfig_Hearing {
		constexpr auto Implementation = 0x48; // UAISense_Hearing*
		constexpr auto HearingRange = 0x50; // float
		constexpr auto LoSHearingRange = 0x54; // float
		constexpr auto bUseLoSHearing = 0x58; // char : 1
		constexpr auto DetectionByAffiliation = 0x5c; // FAISenseAffiliationFilter
	}

	namespace n_UInAppPurchaseComponent {
		constexpr auto InAppPurchaseLogMessage = 0xb0; // FMulticastInlineDelegate
		constexpr auto GetItemsDetailsSuccess = 0xc0; // FMulticastInlineDelegate
		constexpr auto GetItemsDetailsFailure = 0xd0; // FMulticastInlineDelegate
		constexpr auto PurchaseConfirmationSuccess = 0xe0; // FMulticastInlineDelegate
		constexpr auto PurchaseConfirmationFailure = 0xf0; // FMulticastInlineDelegate
		constexpr auto GetPurchaseHistorySuccess = 0x100; // FMulticastInlineDelegate
		constexpr auto GetPurchaseHistoryFailure = 0x110; // FMulticastInlineDelegate
	}

	namespace n_UActorComponent {
		constexpr auto PrimaryComponentTick = 0x30; // FActorComponentTickFunction
		constexpr auto ComponentTags = 0x60; // TArray<FName>
		constexpr auto AssetUserData = 0x70; // TArray<UAssetUserData*>
		constexpr auto UCSSerializationIndex = 0x84; // int32_t
		constexpr auto bNetAddressable = 0x88; // char : 1
		constexpr auto bReplicates = 0x88; // char : 1
		constexpr auto bAutoActivate = 0x89; // char : 1
		constexpr auto bIsActive = 0x8a; // char : 1
		constexpr auto bEditableWhenInherited = 0x8a; // char : 1
		constexpr auto bCanEverAffectNavigation = 0x8a; // char : 1
		constexpr auto bIsEditorOnly = 0x8a; // char : 1
		constexpr auto CreationMethod = 0x8c; // EComponentCreationMethod
		constexpr auto OnComponentActivated = 0x8d; // FMulticastSparseDelegate
		constexpr auto OnComponentDeactivated = 0x8e; // FMulticastSparseDelegate
		constexpr auto UCSModifiedProperties = 0x90; // TArray<FSimpleMemberReference>
	}

	namespace n_USoundCue {
		constexpr auto bPrimeOnLoad = 0x160; // char : 1
		constexpr auto FirstNode = 0x168; // USoundNode*
		constexpr auto VolumeMultiplier = 0x170; // float
		constexpr auto PitchMultiplier = 0x174; // float
		constexpr auto AttenuationOverrides = 0x178; // FSoundAttenuationSettings
		constexpr auto SubtitlePriority = 0x518; // float
		constexpr auto bOverrideAttenuation = 0x520; // char : 1
		constexpr auto bExcludeFromRandomNodeBranchCulling = 0x520; // char : 1
		constexpr auto CookedQualityIndex = 0x524; // int32_t
		constexpr auto bHasPlayWhenSilent = 0x528; // char : 1
	}

	namespace n_UBasicOverlays {
		constexpr auto Overlays = 0x28; // TArray<FOverlayItem>
	}

	namespace n_ABP-LobbyController_C {
		constexpr auto UberGraphFrame = 0x748; // FPointerToUberGraphFrame
		constexpr auto BP-HUDInteractionComponentBase = 0x750; // UBP-HUDInteractionComponentBase_C*
		constexpr auto EventDispatcher_PlayLobbySound = 0x758; // FMulticastInlineDelegate
		constexpr auto EventDispatcher_StopLobbySound = 0x768; // FMulticastInlineDelegate
		constexpr auto MediaSoundComponent = 0x778; // UMediaSoundComponent*
		constexpr auto OperationMessageWidget = 0x780; // UUserWidget*
		constexpr auto CurrentSceneType = 0x788; // ESceneType
		constexpr auto LobbyWidgetRef = 0x790; // UBP-LobbyWidget_Web_C*
	}

	namespace n_UAnimBoneCompressionSettings {
		constexpr auto Codecs = 0x28; // TArray<UAnimBoneCompressionCodec*>
	}

	namespace n_UWidgetSwitcherSlot {
		constexpr auto Padding = 0x40; // FMargin
		constexpr auto HorizontalAlignment = 0x50; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x51; // EVerticalAlignment
	}

	namespace n_UParticleModuleVectorFieldGlobal {
		constexpr auto bOverrideGlobalVectorFieldTightness = 0x30; // char : 1
		constexpr auto GlobalVectorFieldScale = 0x34; // float
		constexpr auto GlobalVectorFieldTightness = 0x38; // float
	}

	namespace n_UPaperTerrainComponent {
		constexpr auto TerrainMaterial = 0x4b0; // UPaperTerrainMaterial*
		constexpr auto bClosedSpline = 0x4b8; // bool
		constexpr auto bFilledSpline = 0x4b9; // bool
		constexpr auto AssociatedSpline = 0x4c0; // UPaperTerrainSplineComponent*
		constexpr auto RandomSeed = 0x4c8; // int32_t
		constexpr auto SegmentOverlapAmount = 0x4cc; // float
		constexpr auto TerrainColor = 0x4d0; // FLinearColor
		constexpr auto ReparamStepsPerSegment = 0x4e0; // int32_t
		constexpr auto SpriteCollisionDomain = 0x4e4; // ESpriteCollisionMode
		constexpr auto CollisionThickness = 0x4e8; // float
		constexpr auto CachedBodySetup = 0x4f0; // UBodySetup*
	}

	namespace n_UEnvQueryGenerator_PathingGrid {
		constexpr auto PathToItem = 0xf8; // FAIDataProviderBoolValue
		constexpr auto NavigationFilter = 0x130; // UNavigationQueryFilter*
		constexpr auto ScanRangeMultiplier = 0x138; // FAIDataProviderFloatValue
	}

	namespace n_UExponentialHeightFogComponent {
		constexpr auto FogDensity = 0x230; // float
		constexpr auto FogHeightFalloff = 0x234; // float
		constexpr auto SecondFogData = 0x238; // FExponentialHeightFogData
		constexpr auto FogInscatteringColor = 0x244; // FLinearColor
		constexpr auto InscatteringColorCubemap = 0x258; // UTextureCube*
		constexpr auto InscatteringColorCubemapAngle = 0x260; // float
		constexpr auto InscatteringTextureTint = 0x264; // FLinearColor
		constexpr auto FullyDirectionalInscatteringColorDistance = 0x274; // float
		constexpr auto NonDirectionalInscatteringColorDistance = 0x278; // float
		constexpr auto DirectionalInscatteringExponent = 0x27c; // float
		constexpr auto DirectionalInscatteringStartDistance = 0x280; // float
		constexpr auto DirectionalInscatteringColor = 0x284; // FLinearColor
		constexpr auto FogMaxOpacity = 0x294; // float
		constexpr auto StartDistance = 0x298; // float
		constexpr auto FogCutoffDistance = 0x29c; // float
		constexpr auto bEnableVolumetricFog = 0x2a0; // bool
		constexpr auto VolumetricFogScatteringDistribution = 0x2a4; // float
		constexpr auto VolumetricFogAlbedo = 0x2a8; // FColor
		constexpr auto VolumetricFogEmissive = 0x2ac; // FLinearColor
		constexpr auto VolumetricFogExtinctionScale = 0x2bc; // float
		constexpr auto VolumetricFogDistance = 0x2c0; // float
		constexpr auto VolumetricFogStaticLightingScatteringIntensity = 0x2c4; // float
		constexpr auto bOverrideLightColorsWithFogInscatteringColors = 0x2c8; // bool
	}

	namespace n_UBravoHotelInventoryHoverWidget {
		constexpr auto CanvasItemSlotHover = 0x248; // UCanvasPanel*
		constexpr auto CanvasWeaponItemSlotHover = 0x250; // UCanvasPanel*
		constexpr auto CanvasPerkSlotHover = 0x258; // UCanvasPanel*
		constexpr auto CanvasStatSlotHover = 0x260; // UCanvasPanel*
		constexpr auto CanvasMaterialSlotHover = 0x268; // UCanvasPanel*
		constexpr auto CanvasTooltipSlotHover = 0x270; // UCanvasPanel*
		constexpr auto bNeedUpdateHover = 0x278; // bool
		constexpr auto HoverType = 0x27c; // int32_t
	}

	namespace n_UTileView {
		constexpr auto EntryHeight = 0x368; // float
		constexpr auto EntryWidth = 0x36c; // float
		constexpr auto TileAlignment = 0x370; // EListItemAlignment
		constexpr auto bWrapHorizontalNavigation = 0x371; // bool
	}

	namespace n_UMaterialExpressionConstant4Vector {
		constexpr auto Constant = 0x40; // FLinearColor
	}

	namespace n_UWB_ToolTipDesign_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto My Tool Tip Text = 0x250; // FText
	}

	namespace n_UUW-CheatReplayListItem_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Button_98 = 0x250; // UButton*
		constexpr auto Time_2 = 0x258; // UTextBlock*
		constexpr auto SavedEvent = 0x260; // FMKReplayReportInfo
		constexpr auto SavedReplayFileName = 0x288; // FString
		constexpr auto ReplayListWidget = 0x298; // UBravoHotelReplayListWidget*
	}

	namespace n_UBookMark2D {
		constexpr auto Zoom2D = 0x28; // float
		constexpr auto Location = 0x2c; // FIntPoint
	}

	namespace n_UNiagaraDataInterfaceHoudiniCSV {
		constexpr auto HoudiniCSVAsset = 0x30; // UHoudiniCSV*
		constexpr auto LastSpawnedPointID = 0x38; // int32_t
		constexpr auto LastSpawnTime = 0x3c; // float
	}

	namespace n_UNavArea {
		constexpr auto DefaultCost = 0x30; // float
		constexpr auto FixedAreaEnteringCost = 0x34; // float
		constexpr auto DrawColor = 0x38; // FColor
		constexpr auto SupportedAgents = 0x3c; // FNavAgentSelector
		constexpr auto bSupportsAgent0 = 0x40; // char : 1
		constexpr auto bSupportsAgent1 = 0x40; // char : 1
		constexpr auto bSupportsAgent2 = 0x40; // char : 1
		constexpr auto bSupportsAgent3 = 0x40; // char : 1
		constexpr auto bSupportsAgent4 = 0x40; // char : 1
		constexpr auto bSupportsAgent5 = 0x40; // char : 1
		constexpr auto bSupportsAgent6 = 0x40; // char : 1
		constexpr auto bSupportsAgent7 = 0x40; // char : 1
		constexpr auto bSupportsAgent8 = 0x41; // char : 1
		constexpr auto bSupportsAgent9 = 0x41; // char : 1
		constexpr auto bSupportsAgent10 = 0x41; // char : 1
		constexpr auto bSupportsAgent11 = 0x41; // char : 1
		constexpr auto bSupportsAgent12 = 0x41; // char : 1
		constexpr auto bSupportsAgent13 = 0x41; // char : 1
		constexpr auto bSupportsAgent14 = 0x41; // char : 1
		constexpr auto bSupportsAgent15 = 0x41; // char : 1
	}

	namespace n_UParticleModuleVelocityBase {
		constexpr auto bInWorldSpace = 0x30; // char : 1
		constexpr auto bApplyOwnerScale = 0x30; // char : 1
	}

	namespace n_UUW-DebugCharacterWidget_C {
		constexpr auto TextBlock_DebugString = 0x258; // UTextBlock*
	}

	namespace n_UAmbisonicsEncodingSettings {
		constexpr auto AmbisonicsOrder = 0x28; // int32_t
	}

	namespace n_UUW-RewardGoldSlot_02_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Anim_Bouns = 0x250; // UWidgetAnimation*
		constexpr auto 1 = 0x258; // UTextBlock*
		constexpr auto 10 = 0x260; // UTextBlock*
		constexpr auto 100 = 0x268; // UTextBlock*
		constexpr auto 1000 = 0x270; // UTextBlock*
		constexpr auto Empty = 0x278; // UTextBlock*
		constexpr auto Image_7 = 0x280; // UImage*
		constexpr auto Image_11 = 0x288; // UImage*
		constexpr auto Image_14 = 0x290; // UImage*
		constexpr auto Image_15 = 0x298; // UImage*
		constexpr auto Image_16 = 0x2a0; // UImage*
		constexpr auto Image_17 = 0x2a8; // UImage*
		constexpr auto Image_18 = 0x2b0; // UImage*
		constexpr auto Image_20 = 0x2b8; // UImage*
		constexpr auto Image_21 = 0x2c0; // UImage*
		constexpr auto Image_22 = 0x2c8; // UImage*
		constexpr auto Image_23 = 0x2d0; // UImage*
		constexpr auto Image_1473 = 0x2d8; // UImage*
		constexpr auto TextBlock_4 = 0x2e0; // UTextBlock*
		constexpr auto TextLight_3 = 0x2e8; // UImage*
		constexpr auto Save = 0x2f0; // int32_t
		constexpr auto LoopSound = 0x2f4; // FAudioPlayingHandle
		constexpr auto IsStopSound = 0x2f8; // bool
	}

	namespace n_USceneComponent {
		constexpr auto Mobility = 0xd0; // EComponentMobility
		constexpr auto PhysicsVolumeChangedDelegate = 0xf0; // FMulticastSparseDelegate
		constexpr auto AttachChildren = 0xf8; // TArray<USceneComponent*>
		constexpr auto bAbsoluteLocation = 0x108; // char : 1
		constexpr auto bShouldUpdatePhysicsVolume = 0x138; // char : 1
		constexpr auto bUseAttachParentBound = 0x138; // char : 1
		constexpr auto AttachParent = 0x160; // USceneComponent*
		constexpr auto DetailMode = 0x168; // EDetailMode
		constexpr auto bAbsoluteScale = 0x169; // char : 1
		constexpr auto AttachSocketName = 0x16c; // FName
		constexpr auto bHiddenInGame = 0x174; // char : 1
		constexpr auto RelativeLocation = 0x178; // FVector
		constexpr auto RelativeRotation = 0x184; // FRotator
		constexpr auto ComponentVelocity = 0x1a8; // FVector
		constexpr auto RelativeScale3D = 0x1f0; // FVector
		constexpr auto PhysicsVolume = 0x200; // TWeakObjectPtr<APhysicsVolume>
		constexpr auto bComponentToWorldUpdated = 0x208; // char : 1
		constexpr auto bVisible = 0x208; // char : 1
		constexpr auto bShouldBeAttached = 0x208; // char : 1
		constexpr auto bBoundsChangeTriggersStreamingDataRebuild = 0x208; // char : 1
		constexpr auto ClientAttachedChildren = 0x210; // TArray<USceneComponent*>
		constexpr auto bAbsoluteRotation = 0x221; // char : 1
		constexpr auto bShouldSnapLocationWhenAttached = 0x221; // char : 1
		constexpr auto bShouldSnapRotationWhenAttached = 0x221; // char : 1
	}

	namespace n_UAkWindowsInitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettingsWithSampleRate
		constexpr auto CommunicationSettings = 0x90; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xb8; // FAkWindowsAdvancedInitializationSettings
	}

	namespace n_UGeometryCacheComponent {
		constexpr auto GeometryCache = 0x4e0; // UGeometryCache*
		constexpr auto bRunning = 0x4e8; // bool
		constexpr auto bLooping = 0x4e9; // bool
		constexpr auto StartTimeOffset = 0x4ec; // float
		constexpr auto PlaybackSpeed = 0x4f0; // float
		constexpr auto NumTracks = 0x4f4; // int32_t
		constexpr auto ElapsedTime = 0x4f8; // float
		constexpr auto Duration = 0x52c; // float
		constexpr auto bManualTick = 0x530; // bool
	}

	namespace n_ABravoHotelParachuteTriggerBox {
		constexpr auto BoxComponent = 0x318; // UBoxComponent*
		constexpr auto ArrowComponent = 0x320; // UArrowComponent*
		constexpr auto bLaunch = 0x328; // bool
		constexpr auto LaunchForce = 0x32c; // float
		constexpr auto ParachuteDelayTime = 0x330; // float
		constexpr auto ParachuteDelayTimeByFalling = 0x334; // float
	}

	namespace n_ANavModifierVolume {
		constexpr auto AreaClass = 0x358; // UNavArea*
	}

	namespace n_UARTrackedObject {
		constexpr auto DetectedObject = 0xe8; // UARCandidateObject*
	}

	namespace n_UNavRelevantComponent {
		constexpr auto bAttachToOwnersRoot = 0xd4; // char : 1
		constexpr auto CachedNavParent = 0xd8; // UObject*
	}

	namespace n_UBravoHotelAudioListenerComponent {
		constexpr auto AmbientMapData = 0x4b8; // UBravoHotelAudioAmbientMapData*
	}

	namespace n_UBlendSpace1D {
		constexpr auto bScaleAnimation = 0x158; // bool
	}

	namespace n_ULowEntryByteDataReader {
		constexpr auto Bytes = 0x28; // TArray<char>
		constexpr auto Position = 0x38; // int32_t
	}

	namespace n_UNiagaraEffectType {
		constexpr auto UpdateFrequency = 0x28; // ENiagaraScalabilityUpdateFrequency
		constexpr auto CullReaction = 0x2c; // ENiagaraCullReaction
		constexpr auto DetailLevelScalabilitySettings = 0x30; // TArray<FNiagaraSystemScalabilitySettings>
		constexpr auto SystemScalabilitySettings = 0x40; // FNiagaraSystemScalabilitySettingsArray
		constexpr auto EmitterScalabilitySettings = 0x50; // FNiagaraEmitterScalabilitySettingsArray
	}

	namespace n_ALevelSequenceActor {
		constexpr auto PlaybackSettings = 0x328; // FMovieSceneSequencePlaybackSettings
		constexpr auto SequencePlayer = 0x340; // ULevelSequencePlayer*
		constexpr auto LevelSequence = 0x348; // FSoftObjectPath
		constexpr auto AdditionalEventReceivers = 0x360; // TArray<AActor*>
		constexpr auto CameraSettings = 0x370; // FLevelSequenceCameraSettings
		constexpr auto BurnInOptions = 0x378; // ULevelSequenceBurnInOptions*
		constexpr auto BindingOverrides = 0x380; // UMovieSceneBindingOverrides*
		constexpr auto bAutoPlay = 0x388; // char : 1
		constexpr auto bOverrideInstanceData = 0x388; // char : 1
		constexpr auto bReplicatePlayback = 0x388; // char : 1
		constexpr auto DefaultInstanceData = 0x390; // UObject*
		constexpr auto BurnInInstance = 0x398; // ULevelSequenceBurnIn*
		constexpr auto bShowBurnin = 0x3a0; // bool
	}

	namespace n_USoundEffectSourcePresetChain {
		constexpr auto Chain = 0x28; // TArray<FSourceEffectChainEntry>
		constexpr auto bPlayEffectChainTails = 0x38; // char : 1
	}

	namespace n_UNiagaraRendererProperties {
		constexpr auto SortOrderHint = 0x28; // int32_t
		constexpr auto bIsEnabled = 0x2c; // bool
		constexpr auto bMotionBlurEnabled = 0x2d; // bool
	}

	namespace n_USubstanceSettings {
		constexpr auto MemoryBudgetMb = 0x28; // int32_t
		constexpr auto CPUCores = 0x2c; // int32_t
		constexpr auto AsyncLoadMipClip = 0x30; // int32_t
		constexpr auto MaxAsyncSubstancesRenderedPerFrame = 0x34; // int32_t
		constexpr auto SubstanceEngine = 0x38; // ESubstanceEngineType
		constexpr auto DefaultSubstanceOutputSizeX = 0x39; // EDefaultSubstanceTextureSize
		constexpr auto DefaultSubstanceOutputSizeY = 0x3a; // EDefaultSubstanceTextureSize
		constexpr auto DefaultTemplateMaterial = 0x40; // TSoftObjectPtr<UMaterialInterface>
	}

	namespace n_ALight {
		constexpr auto LightComponent = 0x318; // ULightComponent*
		constexpr auto bEnabled = 0x320; // char : 1
	}

	namespace n_UAnimInstance {
		constexpr auto OnMontageBlendingOut = 0x28; // FMulticastInlineDelegate
		constexpr auto OnMontageStarted = 0x38; // FMulticastInlineDelegate
		constexpr auto OnMontageEnded = 0x48; // FMulticastInlineDelegate
		constexpr auto OnAllMontageInstancesEnded = 0x58; // FMulticastInlineDelegate
		constexpr auto NotifyQueue = 0xf0; // FAnimNotifyQueue
		constexpr auto ActiveAnimNotifyState = 0x160; // TArray<FAnimNotifyEvent>
		constexpr auto bUseMultiThreadedAnimationUpdate = 0x258; // char : 1
		constexpr auto RootMotionMode = 0x259; // ERootMotionMode
		constexpr auto bUsingCopyPoseFromMesh = 0x25a; // char : 1
		constexpr auto bReceiveNotifiesFromLinkedInstances = 0x25a; // char : 1
		constexpr auto bPropagateNotifiesToLinkedInstances = 0x25a; // char : 1
		constexpr auto bQueueMontageEvents = 0x25a; // char : 1
		constexpr auto CurrentSkeleton = 0x260; // USkeleton*
	}

	namespace n_ABP-WinCam_C {
		constexpr auto UberGraphFrame = 0x318; // FPointerToUberGraphFrame
		constexpr auto WorldViewCamera = 0x320; // UCameraComponent*
		constexpr auto FarCamera = 0x328; // UCameraComponent*
		constexpr auto NearCamera = 0x330; // UCameraComponent*
		constexpr auto DefaultSceneRoot = 0x338; // USceneComponent*
		constexpr auto CharacterRef = 0x340; // ABravoHotelCharacter*
		constexpr auto TargetNearCameraTransform = 0x350; // FTransform
		constexpr auto DeltaTime = 0x380; // float
		constexpr auto TargetFarCameraTransform = 0x390; // FTransform
		constexpr auto PlayerControllerRef = 0x3c0; // ABravoHotelPlayerController*
		constexpr auto bIsBackgroundScene = 0x3c8; // bool
		constexpr auto WinTeamCharacters = 0x3d0; // TArray<ABravoHotelCharacter*>
		constexpr auto DuoLocation_Near = 0x3e0; // TArray<FVector>
		constexpr auto CharacterOriginLocation = 0x3f0; // FVector
		constexpr auto DuoRotation_Near = 0x400; // TArray<FRotator>
		constexpr auto DuoLocation_Far = 0x410; // TArray<FVector>
		constexpr auto DuoRotation_Far = 0x420; // TArray<FRotator>
		constexpr auto TrioLocation_Near = 0x430; // TArray<FVector>
		constexpr auto TrioRotation_Near = 0x440; // TArray<FRotator>
		constexpr auto TrioLocation_Far = 0x450; // TArray<FVector>
		constexpr auto TrioRotation_Far = 0x460; // TArray<FRotator>
		constexpr auto SquadLocation_Near = 0x470; // TArray<FVector>
		constexpr auto SquadRotation_Near = 0x480; // TArray<FRotator>
		constexpr auto SquadLocation_Far = 0x490; // TArray<FVector>
		constexpr auto SquadRotation_Far = 0x4a0; // TArray<FRotator>
		constexpr auto CharacterOriginRotation = 0x4b0; // FRotator
	}

	namespace n_UGizmoWorldAxisSource {
		constexpr auto Origin = 0x30; // FVector
		constexpr auto AxisIndex = 0x3c; // int32_t
	}

	namespace n_UUW-TeamPositionWidget_C {
		constexpr auto UberGraphFrame = 0x290; // FPointerToUberGraphFrame
		constexpr auto Anim_Bouncing = 0x298; // UWidgetAnimation*
		constexpr auto CanvasRequestResuscitation = 0x2a0; // UCanvasPanel*
		constexpr auto CriticalGuage = 0x2a8; // UImage*
		constexpr auto DyingGuage = 0x2b0; // UImage*
		constexpr auto Img_StateDeath = 0x2b8; // UImage*
		constexpr auto Img_StateDisconnect = 0x2c0; // UImage*
		constexpr auto Img_StateParachute = 0x2c8; // UImage*
		constexpr auto Img_StateRevival = 0x2d0; // UImage*
		constexpr auto Img_StateVehicle = 0x2d8; // UImage*
		constexpr auto Img_TeamColor = 0x2e0; // UImage*
		constexpr auto KnockDownBar = 0x2e8; // UProgressBar*
		constexpr auto MoveParameter = 0x2f0; // UTextBlock*
		constexpr auto RevivingGuage = 0x2f8; // UImage*
		constexpr auto Switcher_Guage = 0x300; // UWidgetSwitcher*
		constexpr auto Switcher_Icon = 0x308; // UWidgetSwitcher*
		constexpr auto TextBlock_Name = 0x310; // UTextBlock*
		constexpr auto TextBlock_PlayerIndex = 0x318; // UTextBlock*
		constexpr auto RevivingTimerHandle = 0x320; // FTimerHandle
		constexpr auto TotalRevivingTime = 0x328; // float
		constexpr auto CurrentRevivingTime = 0x32c; // float
		constexpr auto IsRequestResuscitation = 0x330; // bool
	}

	namespace n_UCoherentUIGTBaseComponent {
		constexpr auto ReadyForBindings = 0xb0; // FMulticastInlineDelegate
		constexpr auto BindingsReleased = 0xc0; // FMulticastInlineDelegate
		constexpr auto FinishLoad = 0xd0; // FMulticastInlineDelegate
		constexpr auto FailLoad = 0xe0; // FMulticastInlineDelegate
		constexpr auto StartLoading = 0xf0; // FMulticastInlineDelegate
		constexpr auto NavigateTo = 0x100; // FMulticastInlineDelegate
		constexpr auto JavaScriptEvent = 0x110; // FMulticastInlineDelegate
		constexpr auto UIGTScriptingReady = 0x120; // FMulticastInlineDelegate
		constexpr auto LiveViewSizeRequested = 0x130; // FDelegate
		constexpr auto Texture = 0x158; // UTextureRenderTarget2D*
		constexpr auto Filter = 0x160; // TextureFilter
		constexpr auto bReceiveInput = 0x161; // bool
		constexpr auto bReceiveInputWhenTransparent = 0x162; // bool
		constexpr auto AllowPerformanceWarnings = 0x163; // bool
		constexpr auto ExecuteJSTimersThresholdMs = 0x164; // float
		constexpr auto UpdateStylesAndLayoutThresholdMs = 0x168; // float
		constexpr auto RecordRenderingCommandsThresholdMs = 0x16c; // float
		constexpr auto PaintWarningThresholdMs = 0x170; // float
		constexpr auto LayersCountThreshold = 0x174; // int32_t
		constexpr auto LayerWidthThreshold = 0x178; // int32_t
		constexpr auto LayerHeightThreshold = 0x17c; // int32_t
		constexpr auto bEnableAdditionalDefaultStyles = 0x180; // bool
		constexpr auto bDelayedUpdate = 0x181; // bool
		constexpr auto AudioWrapper = 0x1f8; // UCoherentUIGTAudioWrapper*
	}

	namespace n_UParticleModuleLocationWorldOffset_Seeded {
		constexpr auto RandomSeedInfo = 0x80; // FParticleRandomSeedInfo
	}

	namespace n_ASpectatorBeaconHost {
		constexpr auto State = 0x340; // USpectatorBeaconState*
		constexpr auto bLogoutOnSessionTimeout = 0x3a8; // bool
		constexpr auto SessionTimeoutSecs = 0x3ac; // float
		constexpr auto TravelSessionTimeoutSecs = 0x3b0; // float
	}

	namespace n_UMaterialExpressionPerInstanceCustomData {
		constexpr auto DefaultValue = 0x40; // FExpressionInput
		constexpr auto ConstDefaultValue = 0x54; // float
		constexpr auto DataIndex = 0x58; // uint32_t
	}

	namespace n_UNiagaraSettings {
		constexpr auto AdditionalParameterTypes = 0x38; // TArray<FSoftObjectPath>
		constexpr auto AdditionalPayloadTypes = 0x48; // TArray<FSoftObjectPath>
		constexpr auto AdditionalParameterEnums = 0x58; // TArray<FSoftObjectPath>
		constexpr auto DefaultEffectType = 0x68; // FSoftObjectPath
		constexpr auto QualityLevels = 0x80; // TArray<FText>
		constexpr auto DefaultEffectTypePtr = 0x90; // UNiagaraEffectType*
	}

	namespace n_USubmixEffectDynamicsProcessorPreset {
		constexpr auto Settings = 0xb8; // FSubmixEffectDynamicsProcessorSettings
	}

	namespace n_UTexture2DDynamic {
		constexpr auto Format = 0xc0; // EPixelFormat
	}

	namespace n_UControlPointMeshComponent {
		constexpr auto VirtualTextureMainPassMaxDrawDistance = 0x548; // float
	}

	namespace n_UTemplateSequence {
		constexpr auto MovieScene = 0x348; // UMovieScene*
		constexpr auto BoundActorClass = 0x350; // TSoftClassPtr<UObject>
		constexpr auto BoundPreviewActor = 0x378; // TSoftObjectPtr<AActor>
		constexpr auto BoundActorComponents = 0x3a0; // TMap<FGuid, FName>
	}

	namespace n_UNetworkSettings {
		constexpr auto bVerifyPeer = 0x38; // char : 1
		constexpr auto bEnableMultiplayerWorldOriginRebasing = 0x38; // char : 1
		constexpr auto MaxRepArraySize = 0x3c; // int32_t
		constexpr auto MaxRepArrayMemory = 0x40; // int32_t
		constexpr auto NetworkEmulationProfiles = 0x48; // TArray<FNetworkEmulationProfileDescription>
	}

	namespace n_APointLight {
		constexpr auto PointLightComponent = 0x328; // UPointLightComponent*
	}

	namespace n_UMovieSceneAudioTrack {
		constexpr auto AudioSections = 0x58; // TArray<UMovieSceneSection*>
	}

	namespace n_AGameSession {
		constexpr auto MaxSpectators = 0x318; // int32_t
		constexpr auto MaxPlayers = 0x31c; // int32_t
		constexpr auto MaxPartySize = 0x320; // int32_t
		constexpr auto MaxSplitscreensPerConnection = 0x324; // char
		constexpr auto bRequiresPushToTalk = 0x325; // bool
		constexpr auto SessionName = 0x328; // FName
	}

	namespace n_UParticleModuleEventReceiverSpawn {
		constexpr auto SpawnCount = 0x40; // FRawDistributionFloat
		constexpr auto bUseParticleTime = 0x70; // char : 1
		constexpr auto bUsePSysLocation = 0x70; // char : 1
		constexpr auto bInheritVelocity = 0x70; // char : 1
		constexpr auto InheritVelocityScale = 0x78; // FRawDistributionVector
		constexpr auto PhysicalMaterials = 0xc0; // TArray<UPhysicalMaterial*>
		constexpr auto bBanPhysicalMaterials = 0xd0; // char : 1
	}

	namespace n_UMediaComponent {
		constexpr auto MediaTexture = 0xb0; // UMediaTexture*
		constexpr auto MediaPlayer = 0xb8; // UMediaPlayer*
	}

	namespace n_UBTTask_FSM_SetState {
		constexpr auto FSM = 0x98; // UStateMachineComponent*
		constexpr auto TargetFSM = 0xa0; // FName
		constexpr auto StateName = 0xa8; // FName
		constexpr auto Debug = 0xb0; // bool
		constexpr auto ForceSuccess = 0xb1; // bool
	}

	namespace n_UWidgetSwitcher {
		constexpr auto ActiveWidgetIndex = 0x120; // int32_t
	}

	namespace n_UClothPhysicalMeshDataNv_Legacy {
		constexpr auto MaxDistances = 0xe0; // TArray<float>
		constexpr auto BackstopDistances = 0xf0; // TArray<float>
		constexpr auto BackstopRadiuses = 0x100; // TArray<float>
		constexpr auto AnimDriveMultipliers = 0x110; // TArray<float>
	}

	namespace n_UInterpTrackLinearColorProp {
		constexpr auto PropertyName = 0x90; // FName
	}

	namespace n_UGizmoBoxComponent {
		constexpr auto Origin = 0x4d0; // FVector
		constexpr auto Rotation = 0x4e0; // FQuat
		constexpr auto Dimensions = 0x4f0; // FVector
		constexpr auto LineThickness = 0x4fc; // float
		constexpr auto bRemoveHiddenLines = 0x500; // bool
		constexpr auto bEnableAxisFlip = 0x501; // bool
	}

	namespace n_UInterpTrackInstAkAudioEvent {
		constexpr auto LastUpdatePosition = 0x28; // float
	}

	namespace n_UCanvasPanelSlot {
		constexpr auto LayoutData = 0x38; // FAnchorData
		constexpr auto bAutoSize = 0x60; // bool
		constexpr auto ZOrder = 0x64; // int32_t
	}

	namespace n_UDatasmithStaticMeshGLTFImportData {
		constexpr auto SourceMeshName = 0x28; // FString
	}

	namespace n_AWorldSettings {
		constexpr auto VisibilityCellSize = 0x320; // int32_t
		constexpr auto VisibilityAggressiveness = 0x324; // EVisibilityAggressiveness
		constexpr auto bPrecomputeVisibility = 0x325; // char : 1
		constexpr auto bPlaceCellsOnlyAlongCameraTracks = 0x325; // char : 1
		constexpr auto bEnableWorldBoundsChecks = 0x325; // char : 1
		constexpr auto bEnableNavigationSystem = 0x325; // char : 1
		constexpr auto bEnableAISystem = 0x325; // char : 1
		constexpr auto bEnableWorldComposition = 0x325; // char : 1
		constexpr auto bUseClientSideLevelStreamingVolumes = 0x325; // char : 1
		constexpr auto bEnableWorldOriginRebasing = 0x325; // char : 1
		constexpr auto bWorldGravitySet = 0x326; // char : 1
		constexpr auto bGlobalGravitySet = 0x326; // char : 1
		constexpr auto bMinimizeBSPSections = 0x326; // char : 1
		constexpr auto bForceNoPrecomputedLighting = 0x326; // char : 1
		constexpr auto bHighPriorityLoading = 0x326; // char : 1
		constexpr auto bHighPriorityLoadingLocal = 0x326; // char : 1
		constexpr auto bOverrideDefaultBroadphaseSettings = 0x326; // char : 1
		constexpr auto NavigationSystemConfig = 0x328; // UNavigationSystemConfig*
		constexpr auto NavigationSystemConfigOverride = 0x330; // UNavigationSystemConfig*
		constexpr auto WorldToMeters = 0x338; // float
		constexpr auto KillZ = 0x33c; // float
		constexpr auto KillZDamageType = 0x340; // UDamageType*
		constexpr auto WorldGravityZ = 0x348; // float
		constexpr auto GlobalGravityZ = 0x34c; // float
		constexpr auto DefaultPhysicsVolumeClass = 0x350; // ADefaultPhysicsVolume*
		constexpr auto PhysicsCollisionHandlerClass = 0x358; // UPhysicsCollisionHandler*
		constexpr auto DefaultGameMode = 0x360; // AGameModeBase*
		constexpr auto GameNetworkManagerClass = 0x368; // AGameNetworkManager*
		constexpr auto PackedLightAndShadowMapTextureSize = 0x370; // int32_t
		constexpr auto DefaultColorScale = 0x374; // FVector
		constexpr auto DefaultMaxDistanceFieldOcclusionDistance = 0x380; // float
		constexpr auto GlobalDistanceFieldViewDistance = 0x384; // float
		constexpr auto DynamicIndirectShadowsSelfShadowingIntensity = 0x388; // float
		constexpr auto DefaultReverbSettings = 0x390; // FReverbSettings
		constexpr auto DefaultAmbientZoneSettings = 0x3b0; // FInteriorSettings
		constexpr auto MonoCullingDistance = 0x3d4; // float
		constexpr auto DefaultBaseSoundMix = 0x3d8; // USoundMix*
		constexpr auto TimeDilation = 0x3e0; // float
		constexpr auto MatineeTimeDilation = 0x3e4; // float
		constexpr auto DemoPlayTimeDilation = 0x3e8; // float
		constexpr auto MinGlobalTimeDilation = 0x3ec; // float
		constexpr auto MaxGlobalTimeDilation = 0x3f0; // float
		constexpr auto MinUndilatedFrameTime = 0x3f4; // float
		constexpr auto MaxUndilatedFrameTime = 0x3f8; // float
		constexpr auto BroadphaseSettings = 0x3fc; // FBroadphaseSettings
		constexpr auto Pauser = 0x440; // APlayerState*
		constexpr auto ReplicationViewers = 0x448; // TArray<FNetViewer>
		constexpr auto AssetUserData = 0x458; // TArray<UAssetUserData*>
		constexpr auto PauserPlayerState = 0x468; // APlayerState*
		constexpr auto MaxNumberOfBookmarks = 0x470; // int32_t
		constexpr auto DefaultBookmarkClass = 0x478; // UBookmarkBase*
		constexpr auto BookmarkArray = 0x480; // TArray<UBookmarkBase*>
		constexpr auto LastBookmarkClass = 0x490; // UBookmarkBase*
		constexpr auto bUseInstancedStaticCollision = 0x498; // bool
	}

	namespace n_UParticleModuleSizeScaleBySpeed {
		constexpr auto SpeedScale = 0x30; // FVector2D
		constexpr auto MaxScale = 0x38; // FVector2D
	}

	namespace n_UUW-PlayerIconWidget_C {
		constexpr auto UberGraphFrame = 0x318; // FPointerToUberGraphFrame
		constexpr auto Anim_OnNotifyPos = 0x320; // UWidgetAnimation*
		constexpr auto Anim_OnAttacked = 0x328; // UWidgetAnimation*
		constexpr auto Canvas_Attacked = 0x330; // UCanvasPanel*
		constexpr auto Canvas_Fire = 0x338; // UCanvasPanel*
		constexpr auto Canvas_NotifyPos = 0x340; // UCanvasPanel*
		constexpr auto Img_FreeCam = 0x348; // UImage*
		constexpr auto PlayerState = 0x350; // ABravoHotelPlayerState*
	}

	namespace n_UAnimNotify_PlayNiagaraEffect {
		constexpr auto Template = 0x38; // UNiagaraSystem*
		constexpr auto LocationOffset = 0x40; // FVector
		constexpr auto RotationOffset = 0x4c; // FRotator
		constexpr auto Scale = 0x58; // FVector
		constexpr auto Attached = 0x80; // char : 1
		constexpr auto SocketName = 0x84; // FName
	}

	namespace n_UNativeReplayTimelineBasicWidget {
		constexpr auto ReplayTimelineScrollBox = 0x248; // UScrollBox*
		constexpr auto ReplayTimelineSizeBox = 0x250; // USizeBox*
		constexpr auto ReplayTimelineBorder = 0x258; // UTimelineBorder*
		constexpr auto ReplayTimelineSlider = 0x260; // USlider*
		constexpr auto ReplayTimeToGoBorder = 0x268; // UBorder*
		constexpr auto ReplayTimeToGoText = 0x270; // UTextBlock*
		constexpr auto ReplayCurrentTimeTextBlock = 0x278; // UTextBlock*
		constexpr auto ReplayTotalTimeTextBlock = 0x280; // UTextBlock*
		constexpr auto ReplayPauseButton = 0x288; // UButton*
		constexpr auto ReplayResumeButton = 0x290; // UButton*
		constexpr auto ReplaySpeedUpButton = 0x298; // UButton*
		constexpr auto ReplaySpeedDownButton = 0x2a0; // UButton*
		constexpr auto ReplaySpeedTextBlock = 0x2a8; // UTextBlock*
		constexpr auto ShowKillChkBox = 0x2b0; // UCheckBox*
		constexpr auto ShowKnockoutChkBox = 0x2b8; // UCheckBox*
		constexpr auto TimelineScaleUpButton = 0x2c0; // UButton*
		constexpr auto TimelineScaleDownButton = 0x2c8; // UButton*
		constexpr auto TimelineScaleTextBlock = 0x2d0; // UTextBlock*
		constexpr auto TimelineScaleDelta = 0x2d8; // float
		constexpr auto TimelineMaxScale = 0x2dc; // float
		constexpr auto KillEventMarkers = 0x300; // TArray<UNativeReplayEventMarkerBasic*>
		constexpr auto KnockoutEventMarkers = 0x310; // TArray<UNativeReplayEventMarkerBasic*>
		constexpr auto MK3DKillEvents = 0x320; // TArray<FMK3DHighlightKillEvent>
		constexpr auto MK3DKnockoutEvents = 0x330; // TArray<FMK3DHighlightKillEvent>
	}

	namespace n_UParticleModuleAcceleration {
		constexpr auto Acceleration = 0x38; // FRawDistributionVector
		constexpr auto bApplyOwnerScale = 0x80; // char : 1
	}

	namespace n_UInAppPurchaseRestoreCallbackProxy {
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UExpandableArea {
		constexpr auto Style = 0x110; // FExpandableAreaStyle
		constexpr auto BorderBrush = 0x230; // FSlateBrush
		constexpr auto BorderColor = 0x2b8; // FSlateColor
		constexpr auto bIsExpanded = 0x2e0; // bool
		constexpr auto MaxHeight = 0x2e4; // float
		constexpr auto HeaderPadding = 0x2e8; // FMargin
		constexpr auto AreaPadding = 0x2f8; // FMargin
		constexpr auto OnExpansionChanged = 0x308; // FMulticastInlineDelegate
		constexpr auto HeaderContent = 0x318; // UWidget*
		constexpr auto BodyContent = 0x320; // UWidget*
	}

	namespace n_UUW-Inventory_WeaponPerkSlot_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto WeaponPerk_ani = 0x250; // UWidgetAnimation*
		constexpr auto Image_102 = 0x258; // UImage*
		constexpr auto Image_254 = 0x260; // UImage*
		constexpr auto Image_Grade_Color_Line = 0x268; // UImage*
	}

	namespace n_UUW-Inventory_DragItem_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto BGImage = 0x250; // UImage*
		constexpr auto BorderImage = 0x258; // UImage*
		constexpr auto DisableImage = 0x260; // UImage*
		constexpr auto Image_177 = 0x268; // UImage*
		constexpr auto ItemCount = 0x270; // UTextBlock*
		constexpr auto ItemImage = 0x278; // UImage*
		constexpr auto WidgetReference = 0x280; // UUserWidget*
		constexpr auto Lock = 0x288; // bool
		constexpr auto InventoryDragType = 0x289; // ItemWidgetDragType
		constexpr auto ChangeTarget = 0x290; // UUserWidget*
		constexpr auto PlayerHUDRef = 0x298; // ABravoHotelPlayerHUD*
	}

	namespace n_UAudioCaptureComponent {
		constexpr auto JitterLatencyFrames = 0x710; // int32_t
	}

	namespace n_APingLocationActor_C {
		constexpr auto StaticMesh = 0x318; // UStaticMeshComponent*
		constexpr auto DefaultSceneRoot = 0x320; // USceneComponent*
	}

	namespace n_UUW-MatchEndWidget_C {
		constexpr auto UberGraphFrame = 0x3c8; // FPointerToUberGraphFrame
		constexpr auto UW-MatchEnd_Animation_02 = 0x3d0; // UUW-MatchEnd_Animation_02_C*
		constexpr auto UW-MatchEnd_Ranking2 = 0x3d8; // UUW-MatchEnd_Ranking2_C*
		constexpr auto WidgetSwitcher_Type = 0x3e0; // UWidgetSwitcher*
		constexpr auto UW_SimpleResult = 0x3e8; // UUW-MatchEnd_Animation_C*
		constexpr auto MainWidgetRef = 0x3f0; // UUW-MainWidget_C*
		constexpr auto PlayerHUDRef = 0x3f8; // ABravoHotelPlayerHUD*
		constexpr auto UW_FinalResult = 0x400; // UUW-MatchEnd_Ranking_C*
		constexpr auto UW_Animation = 0x408; // UUW-MatchEnd_Animation_C*
		constexpr auto PlayerControllerRef = 0x410; // ABravoHotelPlayerController*
		constexpr auto NewResult = 0x418; // bool
		constexpr auto ResultData = 0x419; // FMatchEndFinalResult
		constexpr auto IsGiveUp = 0x41d; // bool
		constexpr auto WinMatchEndResultShowTime = 0x420; // float
		constexpr auto ResultMatchEndAnimation = 0x424; // FMatchEndAnimation
	}

	namespace n_ABravoHotelAIPlayerController {
		constexpr auto AutoRotateSpeed = 0x450; // float
		constexpr auto DefaultWeaponName = 0x454; // FName
		constexpr auto NearPlayerController = 0x478; // AController*
		constexpr auto NearTargetPawn = 0x480; // APawn*
		constexpr auto AttackTargetPawn = 0x488; // APawn*
	}

	namespace n_UMagicLeapARPinComponent {
		constexpr auto ObjectUID = 0x230; // FString
		constexpr auto UserIndex = 0x240; // int32_t
		constexpr auto AutoPinType = 0x244; // EMagicLeapAutoPinType
		constexpr auto bShouldPinActor = 0x245; // bool
		constexpr auto PinDataClass = 0x248; // UMagicLeapARPinSaveGame*
		constexpr auto OnPersistentEntityPinned = 0x250; // FMulticastInlineDelegate
		constexpr auto OnPersistentEntityPinLost = 0x260; // FMulticastInlineDelegate
		constexpr auto PinnedCFUID = 0x270; // FGuid
		constexpr auto PinnedSceneComponent = 0x280; // USceneComponent*
		constexpr auto PinData = 0x288; // UMagicLeapARPinSaveGame*
	}

	namespace n_UMaterialExpressionRebaseToZeroOrigin {
		constexpr auto InputVector = 0x40; // FExpressionInput
	}

	namespace n_UCoherentUIGTJSEvent {
		constexpr auto StructTypes = 0xa8; // TArray<UStruct*>
	}

	namespace n_UParticleModuleRotationRateMultiplyLife {
		constexpr auto LifeMultiplier = 0x30; // FRawDistributionFloat
	}

	namespace n_USoundNodeAttenuation {
		constexpr auto AttenuationSettings = 0x48; // USoundAttenuation*
		constexpr auto AttenuationOverrides = 0x50; // FSoundAttenuationSettings
		constexpr auto bOverrideAttenuation = 0x3f0; // char : 1
	}

	namespace n_USynthSamplePlayer {
		constexpr auto SoundWave = 0x710; // USoundWave*
		constexpr auto OnSampleLoaded = 0x718; // FMulticastInlineDelegate
		constexpr auto OnSamplePlaybackProgress = 0x728; // FMulticastInlineDelegate
	}

	namespace n_AGeometryCollectionActor {
		constexpr auto GeometryCollectionComponent = 0x318; // UGeometryCollectionComponent*
		constexpr auto GeometryCollectionDebugDrawComponent = 0x320; // UGeometryCollectionDebugDrawComponent*
	}

	namespace n_UUW-GameNoticePopupWidget_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Image_2 = 0x250; // UImage*
		constexpr auto Notice = 0x258; // UTextBlock*
		constexpr auto WidgetSwitcher_1 = 0x260; // UWidgetSwitcher*
	}

	namespace n_UAIAsyncTaskBlueprintProxy {
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFail = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UInAppPurchaseRestoreCallbackProxy2 {
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_APlayerCameraManager {
		constexpr auto PCOwner = 0x318; // APlayerController*
		constexpr auto TransformComponent = 0x320; // USceneComponent*
		constexpr auto DefaultFOV = 0x330; // float
		constexpr auto DefaultOrthoWidth = 0x338; // float
		constexpr auto DefaultAspectRatio = 0x340; // float
		constexpr auto CameraCache = 0x390; // FCameraCacheEntry
		constexpr auto LastFrameCameraCache = 0x9f0; // FCameraCacheEntry
		constexpr auto ViewTarget = 0x1050; // FTViewTarget
		constexpr auto PendingViewTarget = 0x16c0; // FTViewTarget
		constexpr auto CameraCachePrivate = 0x1d60; // FCameraCacheEntry
		constexpr auto LastFrameCameraCachePrivate = 0x23c0; // FCameraCacheEntry
		constexpr auto ModifierList = 0x2a20; // TArray<UCameraModifier*>
		constexpr auto DefaultModifiers = 0x2a30; // TArray<UCameraModifier*>
		constexpr auto FreeCamDistance = 0x2a40; // float
		constexpr auto FreeCamOffset = 0x2a44; // FVector
		constexpr auto ViewTargetOffset = 0x2a50; // FVector
		constexpr auto CameraLensEffects = 0x2a70; // TArray<AEmitterCameraLensEffectBase*>
		constexpr auto CachedCameraShakeMod = 0x2a80; // UCameraModifier_CameraShake*
		constexpr auto AnimInstPool = 0x2a88; // UCameraAnimInst* [0x8]
		constexpr auto PostProcessBlendCache = 0x2ac8; // TArray<FPostProcessSettings>
		constexpr auto ActiveAnims = 0x2ae8; // TArray<UCameraAnimInst*>
		constexpr auto FreeAnims = 0x2af8; // TArray<UCameraAnimInst*>
		constexpr auto AnimCameraActor = 0x2b08; // ACameraActor*
		constexpr auto bIsOrthographic = 0x2b10; // char : 1
		constexpr auto bDefaultConstrainAspectRatio = 0x2b10; // char : 1
		constexpr auto bClientSimulatingViewTarget = 0x2b10; // char : 1
		constexpr auto bUseClientSideCameraUpdates = 0x2b10; // char : 1
		constexpr auto bGameCameraCutThisFrame = 0x2b11; // char : 1
		constexpr auto ViewPitchMin = 0x2b14; // float
		constexpr auto ViewPitchMax = 0x2b18; // float
		constexpr auto ViewYawMin = 0x2b1c; // float
		constexpr auto ViewYawMax = 0x2b20; // float
		constexpr auto ViewRollMin = 0x2b24; // float
		constexpr auto ViewRollMax = 0x2b28; // float
		constexpr auto ServerUpdateCameraTimeout = 0x2b30; // float
	}

	namespace n_USubTitleSlotWidget_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Image = 0x250; // UImage*
		constexpr auto Image_2 = 0x258; // UImage*
		constexpr auto Image_4 = 0x260; // UImage*
		constexpr auto Image_5 = 0x268; // UImage*
		constexpr auto Image_6 = 0x270; // UImage*
		constexpr auto Image_473 = 0x278; // UImage*
		constexpr auto TextBlock_1 = 0x280; // UTextBlock*
		constexpr auto Title = 0x288; // FText
	}

	namespace n_UOutGameArmoryDataType_C {
		constexpr auto SpinVelocity = 0x30; // float
		constexpr auto RotationInterpSpeed = 0x34; // float
	}

	namespace n_UBrushBuilder {
		constexpr auto BitmapFilename = 0x28; // FString
		constexpr auto Tooltip = 0x38; // FString
		constexpr auto NotifyBadParams = 0x48; // char : 1
		constexpr auto Vertices = 0x50; // TArray<FVector>
		constexpr auto Polys = 0x60; // TArray<FBuilderPoly>
		constexpr auto Layer = 0x70; // FName
		constexpr auto MergeCoplanars = 0x78; // char : 1
	}

	namespace n_UParticleModulePivotOffset {
		constexpr auto PivotOffset = 0x30; // FVector2D
	}

	namespace n_UParticleModuleKillBox {
		constexpr auto LowerLeftCorner = 0x30; // FRawDistributionVector
		constexpr auto UpperRightCorner = 0x78; // FRawDistributionVector
		constexpr auto bAbsolute = 0xc0; // char : 1
		constexpr auto bKillInside = 0xc0; // char : 1
		constexpr auto bAxisAlignedAndFixedSize = 0xc0; // char : 1
	}

	namespace n_USceneCaptureComponent {
		constexpr auto PrimitiveRenderMode = 0x230; // ESceneCapturePrimitiveRenderMode
		constexpr auto bTonemapPropagateAlpha = 0x231; // char : 1
		constexpr auto bUsePostProcessMaterial = 0x231; // char : 1
		constexpr auto bUseDirectionalLights = 0x231; // char : 1
		constexpr auto CaptureSource = 0x232; // ESceneCaptureSource
		constexpr auto bCaptureEveryFrame = 0x233; // char : 1
		constexpr auto bCaptureOnMovement = 0x233; // char : 1
		constexpr auto bAlwaysPersistRenderingState = 0x234; // bool
		constexpr auto HiddenComponents = 0x238; // TArray<TWeakObjectPtr<UPrimitiveComponent>>
		constexpr auto HiddenActors = 0x248; // TArray<AActor*>
		constexpr auto ShowOnlyComponents = 0x258; // TArray<TWeakObjectPtr<UPrimitiveComponent>>
		constexpr auto ShowOnlyActors = 0x268; // TArray<AActor*>
		constexpr auto LODDistanceFactor = 0x278; // float
		constexpr auto MaxViewDistanceOverride = 0x27c; // float
		constexpr auto CaptureSortPriority = 0x280; // int32_t
		constexpr auto bUseRayTracingIfEnabled = 0x284; // bool
		constexpr auto ShowFlagSettings = 0x288; // TArray<FEngineShowFlagsSetting>
		constexpr auto ProfilingEventName = 0x2a8; // FString
	}

	namespace n_UInterpTrackInstFloatAnimBPParam {
		constexpr auto AnimScriptInstance = 0x28; // UAnimInstance*
		constexpr auto ResetFloat = 0x30; // float
	}

	namespace n_UNiagaraPreviewAxis_InterpParamFloat {
		constexpr auto Min = 0x38; // float
		constexpr auto MAX = 0x3c; // float
	}

	namespace n_UHLODProxy {
		constexpr auto ProxyMeshes = 0x28; // TArray<FHLODProxyMesh>
	}

	namespace n_UObjectLibrary {
		constexpr auto ObjectBaseClass = 0x28; // UObject*
		constexpr auto bHasBlueprintClasses = 0x30; // bool
		constexpr auto Objects = 0x38; // TArray<UObject*>
		constexpr auto WeakObjects = 0x48; // TArray<TWeakObjectPtr<UObject>>
		constexpr auto bUseWeakReferences = 0x58; // bool
		constexpr auto bIsFullyLoaded = 0x59; // bool
	}

	namespace n_UNiagaraDataInterfaceSkeletalMesh {
		constexpr auto Source = 0x30; // AActor*
		constexpr auto MeshUserParameter = 0x38; // FNiagaraUserParameterBinding
		constexpr auto SourceComponent = 0x60; // USkeletalMeshComponent*
		constexpr auto SkinningMode = 0x68; // ENDISkeletalMesh_SkinningMode
		constexpr auto SamplingRegions = 0x70; // TArray<FName>
		constexpr auto WholeMeshLOD = 0x80; // int32_t
		constexpr auto FilteredBones = 0x88; // TArray<FName>
		constexpr auto FilteredSockets = 0x98; // TArray<FName>
		constexpr auto ExcludeBoneName = 0xa8; // FName
		constexpr auto bExcludeBone = 0xb0; // char : 1
	}

	namespace n_UActorSequence {
		constexpr auto MovieScene = 0x348; // UMovieScene*
		constexpr auto ObjectReferences = 0x350; // FActorSequenceObjectReferenceMap
	}

	namespace n_ULevelStreaming {
		constexpr auto WorldAsset = 0x28; // TSoftObjectPtr<UWorld>
		constexpr auto PackageNameToLoad = 0x50; // FName
		constexpr auto LODPackageNames = 0x58; // TArray<FName>
		constexpr auto LevelTransform = 0x80; // FTransform
		constexpr auto LevelLODIndex = 0xb0; // int32_t
		constexpr auto StreamingPriority = 0xb4; // int32_t
		constexpr auto bShouldBeVisible = 0xc0; // char : 1
		constexpr auto bShouldBeLoaded = 0xc0; // char : 1
		constexpr auto bLocked = 0xc0; // char : 1
		constexpr auto bIsStatic = 0xc0; // char : 1
		constexpr auto bShouldBlockOnLoad = 0xc0; // char : 1
		constexpr auto bShouldBlockOnUnload = 0xc0; // char : 1
		constexpr auto bDisableDistanceStreaming = 0xc0; // char : 1
		constexpr auto bDrawOnLevelStatusMap = 0xc0; // char : 1
		constexpr auto LevelColor = 0xc4; // FLinearColor
		constexpr auto EditorStreamingVolumes = 0xd8; // TArray<ALevelStreamingVolume*>
		constexpr auto MinTimeBetweenVolumeUnloadRequests = 0xe8; // float
		constexpr auto OnLevelLoaded = 0xf0; // FMulticastInlineDelegate
		constexpr auto OnLevelUnloaded = 0x100; // FMulticastInlineDelegate
		constexpr auto OnLevelShown = 0x110; // FMulticastInlineDelegate
		constexpr auto OnLevelHidden = 0x120; // FMulticastInlineDelegate
		constexpr auto LoadedLevel = 0x130; // ULevel*
		constexpr auto PendingUnloadLevel = 0x138; // ULevel*
	}

	namespace n_UParticleModuleColorScaleOverLife {
		constexpr auto ColorScaleOverLife = 0x30; // FRawDistributionVector
		constexpr auto AlphaScaleOverLife = 0x78; // FRawDistributionFloat
		constexpr auto bEmitterTime = 0xa8; // char : 1
	}

	namespace n_UBehaviorTree {
		constexpr auto RootNode = 0x30; // UBTCompositeNode*
		constexpr auto BlackboardAsset = 0x38; // UBlackboardData*
		constexpr auto RootDecorators = 0x40; // TArray<UBTDecorator*>
		constexpr auto RootDecoratorOps = 0x50; // TArray<FBTDecoratorLogic>
	}

	namespace n_UBillboardComponent {
		constexpr auto Sprite = 0x4b0; // UTexture2D*
		constexpr auto bIsScreenSizeScaled = 0x4b8; // char : 1
		constexpr auto ScreenSize = 0x4bc; // float
		constexpr auto U = 0x4c0; // float
		constexpr auto UL = 0x4c4; // float
		constexpr auto V = 0x4c8; // float
		constexpr auto VL = 0x4cc; // float
	}

	namespace n_UChaosClothConfig {
		constexpr auto MassMode = 0x28; // EClothMassMode
		constexpr auto UniformMass = 0x2c; // float
		constexpr auto TotalMass = 0x30; // float
		constexpr auto Density = 0x34; // float
		constexpr auto MinPerParticleMass = 0x38; // float
		constexpr auto EdgeStiffness = 0x3c; // float
		constexpr auto BendingStiffness = 0x40; // float
		constexpr auto AreaStiffness = 0x44; // float
		constexpr auto VolumeStiffness = 0x48; // float
		constexpr auto StrainLimitingStiffness = 0x4c; // float
		constexpr auto LimitScale = 0x50; // float
		constexpr auto bUseGeodesicDistance = 0x54; // bool
		constexpr auto ShapeTargetStiffness = 0x58; // float
		constexpr auto CollisionThickness = 0x5c; // float
		constexpr auto FrictionCoefficient = 0x60; // float
		constexpr auto DampingCoefficient = 0x64; // float
		constexpr auto DragCoefficient = 0x68; // float
		constexpr auto AnimDriveSpringStiffness = 0x6c; // float
		constexpr auto bUseBendingElements = 0x70; // bool
		constexpr auto bUseTetrahedralConstraints = 0x71; // bool
		constexpr auto bUseThinShellVolumeConstraints = 0x72; // bool
		constexpr auto bUseSelfCollisions = 0x73; // bool
		constexpr auto bUseContinuousCollisionDetection = 0x74; // bool
		constexpr auto LinearVelocityScale = 0x78; // FVector
		constexpr auto AngularVelocityScale = 0x84; // float
	}

	namespace n_ABP-CharacterRecording_C {
		constexpr auto UberGraphFrame = 0x318; // FPointerToUberGraphFrame
		constexpr auto PointLight3 = 0x320; // UPointLightComponent*
		constexpr auto PointLight2 = 0x328; // UPointLightComponent*
		constexpr auto SpotLight = 0x330; // USpotLightComponent*
		constexpr auto PointLight1 = 0x338; // UPointLightComponent*
		constexpr auto BravoHotelSceneCaptureComponent2D = 0x340; // UBravoHotelSceneCaptureComponent2D*
		constexpr auto PointLight = 0x348; // UPointLightComponent*
		constexpr auto SpotLight2 = 0x350; // USpotLightComponent*
		constexpr auto Cube = 0x358; // UStaticMeshComponent*
		constexpr auto CustomizableSkeletal = 0x360; // UCustomizableSkeletalComponent*
		constexpr auto SkeletalMesh = 0x368; // USkeletalMeshComponent*
		constexpr auto Camera = 0x370; // UCameraComponent*
		constexpr auto Scene = 0x378; // USceneComponent*
		constexpr auto CharacterRef = 0x380; // ABravoHotelCharacter*
		constexpr auto PreviewWeapons = 0x388; // TArray<ABravoHotelWeaponBase*>
		constexpr auto EnableTick = 0x398; // bool
		constexpr auto TargetAccel = 0x39c; // FRotator
		constexpr auto CurrentAccel = 0x3a8; // FRotator
	}

	namespace n_UEditableText {
		constexpr auto Text = 0x108; // FText
		constexpr auto TextDelegate = 0x120; // FDelegate
		constexpr auto HintText = 0x130; // FText
		constexpr auto HintTextDelegate = 0x148; // FDelegate
		constexpr auto WidgetStyle = 0x158; // FEditableTextStyle
		constexpr auto Style = 0x370; // USlateWidgetStyleAsset*
		constexpr auto BackgroundImageSelected = 0x378; // USlateBrushAsset*
		constexpr auto BackgroundImageComposing = 0x380; // USlateBrushAsset*
		constexpr auto CaretImage = 0x388; // USlateBrushAsset*
		constexpr auto Font = 0x390; // FSlateFontInfo
		constexpr auto ColorAndOpacity = 0x3e0; // FSlateColor
		constexpr auto IsReadOnly = 0x408; // bool
		constexpr auto IsPassword = 0x409; // bool
		constexpr auto MinimumDesiredWidth = 0x40c; // float
		constexpr auto IsCaretMovedWhenGainFocus = 0x410; // bool
		constexpr auto SelectAllTextWhenFocused = 0x411; // bool
		constexpr auto RevertTextOnEscape = 0x412; // bool
		constexpr auto ClearKeyboardFocusOnCommit = 0x413; // bool
		constexpr auto SelectAllTextOnCommit = 0x414; // bool
		constexpr auto AllowContextMenu = 0x415; // bool
		constexpr auto KeyboardType = 0x416; // EVirtualKeyboardType
		constexpr auto VirtualKeyboardOptions = 0x417; // FVirtualKeyboardOptions
		constexpr auto VirtualKeyboardTrigger = 0x418; // EVirtualKeyboardTrigger
		constexpr auto VirtualKeyboardDismissAction = 0x419; // EVirtualKeyboardDismissAction
		constexpr auto Justification = 0x41a; // ETextJustify
		constexpr auto ShapedTextOptions = 0x41b; // FShapedTextOptions
		constexpr auto OnTextChanged = 0x420; // FMulticastInlineDelegate
		constexpr auto OnTextCommitted = 0x430; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionDotProduct {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_UAudioCurveSourceComponent {
		constexpr auto CurveSourceBindingName = 0x818; // FName
		constexpr auto CurveSyncOffset = 0x820; // float
	}

	namespace n_APaperGroupedSpriteActor {
		constexpr auto RenderComponent = 0x318; // UPaperGroupedSpriteComponent*
	}

	namespace n_ABravoHotelGameState {
		constexpr auto MatchWinnerTeam = 0x388; // char
		constexpr auto WinnerPlayerState = 0x390; // ABravoHotelPlayerState*
		constexpr auto TimeRemaining = 0x398; // int32_t
		constexpr auto CurrentSeasonID = 0x39c; // FName
		constexpr auto PerkMode = 0x3a4; // int32_t
		constexpr auto RecipeMode = 0x3a8; // int32_t
		constexpr auto MaxPerkCount = 0x3ac; // int32_t
		constexpr auto OverrideUltimateLevel = 0x3b0; // int32_t
		constexpr auto PerkClassNumCap = 0x3b8; // TMap<FName, int32_t>
		constexpr auto PerkClassWeightModifier = 0x408; // TMap<FName, float>
		constexpr auto PerkClassBlock = 0x458; // TArray<FName>
		constexpr auto bBlockSpawnVehicle = 0x468; // bool
		constexpr auto bBlockRedZone = 0x469; // bool
		constexpr auto PerkLevelUpAllUserSame = 0x46a; // bool
		constexpr auto CQRKey = 0x470; // FString
		constexpr auto GameViewType = 0x480; // EGameViewType
		constexpr auto MatchingType = 0x481; // EMatchingType
		constexpr auto StartGameTime = 0x488; // FDateTime
		constexpr auto ExpertWeaponTableID = 0x490; // FName
		constexpr auto PersonalSupplyBoxPositionType = 0x498; // int32_t
		constexpr auto NoDelaySpawnPersonalSupplyBox = 0x49c; // bool
		constexpr auto MustSpawnPersonalSupplyBox = 0x49d; // bool
		constexpr auto RetiredPlayerCount = 0x4a0; // int32_t
		constexpr auto UniqueIDPlayerStates = 0x4a8; // TMap<int32_t, ABravoHotelPlayerState*>
		constexpr auto MatchID = 0x4f8; // FGuid
		constexpr auto GameServerID = 0x508; // FString
		constexpr auto DefaultClassSelectInfo = 0x528; // FGameSettingClassSelectInfoElement
		constexpr auto DefaultClassChangeInfo = 0x550; // FGameSettingClassChangeInfoElement
		constexpr auto CurrentGameSettingInfo = 0x598; // FGameSettingInfo
		constexpr auto IsUsingOuterAreaBlueZone = 0x620; // bool
		constexpr auto BlueZone = 0x628; // ABravoHotelBlueZone*
		constexpr auto OnBlueZoneDelegate = 0x630; // FMulticastInlineDelegate
		constexpr auto OnChangePerkModeDelegate = 0x640; // FMulticastInlineDelegate
		constexpr auto RecoilModifier_AR = 0x66c; // float
		constexpr auto RecoilModifier_SMG = 0x670; // float
		constexpr auto RecoilModifier_SG = 0x674; // float
		constexpr auto RecoilModifier_DMR = 0x678; // float
		constexpr auto RecoilModifier_SR = 0x67c; // float
	}

	namespace n_UBravoHotelDebugWidget {
		constexpr auto DebugString = 0x248; // FString
	}

	namespace n_UUW-BlackMarket_Slot_Weapon_C {
		constexpr auto UberGraphFrame = 0x3d8; // FPointerToUberGraphFrame
		constexpr auto BTN-Menu02 = 0x3e0; // UButton*
		constexpr auto BTN-Menu03 = 0x3e8; // UButton*
		constexpr auto BTN-Menu04 = 0x3f0; // UButton*
		constexpr auto BTN-Menu05 = 0x3f8; // UButton*
		constexpr auto BTN-Menu06 = 0x400; // UButton*
		constexpr auto BTN-Menu07 = 0x408; // UButton*
		constexpr auto BTN-Menu08 = 0x410; // UButton*
		constexpr auto BTN-Menu09 = 0x418; // UButton*
		constexpr auto BTN-Menu10 = 0x420; // UButton*
		constexpr auto BTN-Menu11 = 0x428; // UButton*
		constexpr auto CP-SlotInfo = 0x430; // UCanvasPanel*
		constexpr auto IMG-BG = 0x438; // UImage*
		constexpr auto IMG-BG-Border = 0x440; // UImage*
		constexpr auto IMG-Item = 0x448; // UImage*
		constexpr auto IMG-Mask = 0x450; // UImage*
		constexpr auto IMG-Over = 0x458; // UImage*
		constexpr auto IMG-Over-Border = 0x460; // UImage*
		constexpr auto Menu02 = 0x468; // UOverlay*
		constexpr auto Menu03 = 0x470; // UOverlay*
		constexpr auto Menu04 = 0x478; // UOverlay*
		constexpr auto Menu05 = 0x480; // UOverlay*
		constexpr auto Menu06 = 0x488; // UOverlay*
		constexpr auto Menu07 = 0x490; // UOverlay*
		constexpr auto Menu08 = 0x498; // UOverlay*
		constexpr auto Menu09 = 0x4a0; // UOverlay*
		constexpr auto Menu10 = 0x4a8; // UOverlay*
		constexpr auto Menu11 = 0x4b0; // UOverlay*
		constexpr auto Overlay_Mask = 0x4b8; // UOverlay*
		constexpr auto TXT-Ammo = 0x4c0; // UTextBlock*
		constexpr auto TXT-Damage = 0x4c8; // UTextBlock*
		constexpr auto TXT-FireMode = 0x4d0; // UTextBlock*
		constexpr auto TXT-FireRate = 0x4d8; // UTextBlock*
		constexpr auto TXT-ItemName = 0x4e0; // UTextBlock*
		constexpr auto TXT-MagSize = 0x4e8; // UTextBlock*
		constexpr auto TXT-Menu01 = 0x4f0; // UTextBlock*
		constexpr auto TXT-Menu02 = 0x4f8; // UTextBlock*
		constexpr auto TXT-Menu03 = 0x500; // UTextBlock*
		constexpr auto TXT-Menu04 = 0x508; // UTextBlock*
		constexpr auto TXT-Menu05 = 0x510; // UTextBlock*
		constexpr auto TXT-Menu06 = 0x518; // UTextBlock*
		constexpr auto TXT-Menu07 = 0x520; // UTextBlock*
		constexpr auto TXT-Menu08 = 0x528; // UTextBlock*
		constexpr auto TXT-Menu09 = 0x530; // UTextBlock*
		constexpr auto TXT-Menu10 = 0x538; // UTextBlock*
		constexpr auto TXT-Menu11 = 0x540; // UTextBlock*
		constexpr auto TXT-MoveSpeed = 0x548; // UTextBlock*
		constexpr auto TXT-ProjectileVelocity = 0x550; // UTextBlock*
		constexpr auto TXT-ReloadTime = 0x558; // UTextBlock*
		constexpr auto TXT-Weight = 0x560; // UTextBlock*
	}

	namespace n_UPlaneFalloff {
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto MinRange = 0xb4; // float
		constexpr auto MaxRange = 0xb8; // float
		constexpr auto Default = 0xbc; // float
		constexpr auto Distance = 0xc0; // float
		constexpr auto Position = 0xc4; // FVector
		constexpr auto Normal = 0xd0; // FVector
		constexpr auto Falloff = 0xdc; // EFieldFalloffType
	}

	namespace n_UUW-BlackMarket_Slot_Consumable_C {
		constexpr auto UberGraphFrame = 0x3d8; // FPointerToUberGraphFrame
		constexpr auto BTN-Menu02 = 0x3e0; // UButton*
		constexpr auto BTN-Menu03 = 0x3e8; // UButton*
		constexpr auto BTN-Menu04 = 0x3f0; // UButton*
		constexpr auto BTN-Menu05 = 0x3f8; // UButton*
		constexpr auto BTN-Menu06 = 0x400; // UButton*
		constexpr auto CP-SlotInfo = 0x408; // UCanvasPanel*
		constexpr auto IMG-BG = 0x410; // UImage*
		constexpr auto IMG-BG-Border = 0x418; // UImage*
		constexpr auto IMG-Item = 0x420; // UImage*
		constexpr auto IMG-Mask = 0x428; // UImage*
		constexpr auto IMG-Over = 0x430; // UImage*
		constexpr auto IMG-Over-Border = 0x438; // UImage*
		constexpr auto Menu02 = 0x440; // UOverlay*
		constexpr auto Menu03 = 0x448; // UOverlay*
		constexpr auto Menu04 = 0x450; // UOverlay*
		constexpr auto Menu05 = 0x458; // UOverlay*
		constexpr auto Menu06 = 0x460; // UOverlay*
		constexpr auto Overlay_Mask = 0x468; // UOverlay*
		constexpr auto TXT-Adrenaline = 0x470; // UTextBlock*
		constexpr auto TXT-Fuel = 0x478; // UTextBlock*
		constexpr auto TXT-Health = 0x480; // UTextBlock*
		constexpr auto TXT-ItemName = 0x488; // UTextBlock*
		constexpr auto TXT-Menu01 = 0x490; // UTextBlock*
		constexpr auto TXT-Menu02 = 0x498; // UTextBlock*
		constexpr auto TXT-Menu03 = 0x4a0; // UTextBlock*
		constexpr auto TXT-Menu04 = 0x4a8; // UTextBlock*
		constexpr auto TXT-Menu05 = 0x4b0; // UTextBlock*
		constexpr auto TXT-Menu06 = 0x4b8; // UTextBlock*
		constexpr auto TXT-Weight = 0x4c0; // UTextBlock*
	}

	namespace n_UUW-GamePopupWidget_C {
		constexpr auto UberGraphFrame = 0x250; // FPointerToUberGraphFrame
		constexpr auto BTN-Exit = 0x258; // UButton*
		constexpr auto BTN-LobbyRestart = 0x260; // UButton*
		constexpr auto BTN-Resume = 0x268; // UButton*
		constexpr auto BTN-ReturnToTitle = 0x270; // UButton*
		constexpr auto BTN-Settings = 0x278; // UButton*
		constexpr auto Button_1 = 0x280; // UButton*
		constexpr auto Button_2 = 0x288; // UButton*
		constexpr auto Button_4 = 0x290; // UButton*
		constexpr auto Image_2 = 0x298; // UImage*
		constexpr auto IMG-BG = 0x2a0; // UImage*
		constexpr auto Overlay_Exit = 0x2a8; // UOverlay*
		constexpr auto TextBlock = 0x2b0; // UTextBlock*
		constexpr auto TextBlock_2 = 0x2b8; // UTextBlock*
		constexpr auto UW-VoiceTalk = 0x2c0; // UUW-VoiceTalk_C*
		constexpr auto VerticalBox_InGame = 0x2c8; // UVerticalBox*
		constexpr auto VerticalBox_Lobby = 0x2d0; // UVerticalBox*
		constexpr auto MapNameToExit = 0x2d8; // FName
		constexpr auto IsLobby = 0x2e0; // bool
	}

	namespace n_UUW-Lobby_Armory_Recipe_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Button_Crapting_Btn = 0x250; // UButton*
		constexpr auto Button_Crapting_Btn_dis = 0x258; // UButton*
		constexpr auto Image_112 = 0x260; // UImage*
		constexpr auto Img_Gold = 0x268; // UImage*
		constexpr auto Img_Gold_Inert = 0x270; // UImage*
		constexpr auto Img_Gold_Inert_2 = 0x278; // UImage*
		constexpr auto RichTextBlock_578 = 0x280; // URichTextBlock*
		constexpr auto T_GoldCost = 0x288; // UTextBlock*
		constexpr auto T_GoldCost_2 = 0x290; // UTextBlock*
		constexpr auto UW-Lobby_Craft_GuideWidget = 0x298; // UUW-Lobby_Craft_GuideWidget_C*
		constexpr auto UW-Lobby_Craft_List = 0x2a0; // UUW-Lobby_Craft_List_C*
		constexpr auto UW-Lobby_Weapon_Recipe = 0x2a8; // UUW-Lobby_Craft_Recipe_C*
		constexpr auto UW-Lobby_WeaponInfo = 0x2b0; // UUW-Lobby_WeaponInfo_C*
		constexpr auto UW-Lobby_WeaponInfo_RandomOption = 0x2b8; // UUW-Lobby_WeaponInfo_RandomOption_C*
		constexpr auto WidgetSwitcher_179 = 0x2c0; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_Gold = 0x2c8; // UWidgetSwitcher*
		constexpr auto CraftingInfo = 0x2d0; // FItemCrafting
		constexpr auto SelectedButton = 0x3f8; // UUW-Lobby_Craft_List_Category_Slot_C*
	}

	namespace n_UBravoHotelInventoryWidget {
		constexpr auto WeaponAmmoDelegate = 0x250; // FMulticastInlineDelegate
	}

	namespace n_UInterpTrackLinearColorBase {
		constexpr auto LinearColorTrack = 0x70; // FInterpCurveLinearColor
		constexpr auto CurveTension = 0x88; // float
	}

	namespace n_UMaterialExpressionIf {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto AGreaterThanB = 0x68; // FExpressionInput
		constexpr auto AEqualsB = 0x7c; // FExpressionInput
		constexpr auto ALessThanB = 0x90; // FExpressionInput
		constexpr auto EqualsThreshold = 0xa4; // float
		constexpr auto ConstB = 0xa8; // float
		constexpr auto ConstAEqualsB = 0xac; // float
	}

	namespace n_UGeometryCacheTrackStreamable {
		constexpr auto Codec = 0x58; // UGeometryCacheCodecBase*
		constexpr auto StartSampleTime = 0xc8; // float
	}

	namespace n_ULocalLightComponent {
		constexpr auto IntensityUnits = 0x378; // ELightUnits
		constexpr auto Radius = 0x37c; // float
		constexpr auto AttenuationRadius = 0x380; // float
		constexpr auto LightmassSettings = 0x384; // FLightmassPointLightSettings
	}

	namespace n_UClothingAssetCommon {
		constexpr auto PhysicsAsset = 0x48; // UPhysicsAsset*
		constexpr auto ClothConfigs = 0x50; // TMap<FName, UClothConfigBase*>
		constexpr auto ClothSharedSimConfig = 0xa0; // UClothConfigBase*
		constexpr auto ClothSimConfig = 0xa8; // UClothConfigBase*
		constexpr auto ChaosClothSimConfig = 0xb0; // UClothConfigBase*
		constexpr auto ClothLODData = 0xb8; // TArray<UClothLODDataCommon_Legacy*>
		constexpr auto LODData = 0xc8; // TArray<FClothLODDataCommon>
		constexpr auto LodMap = 0xd8; // TArray<int32_t>
		constexpr auto UsedBoneNames = 0xe8; // TArray<FName>
		constexpr auto UsedBoneIndices = 0xf8; // TArray<int32_t>
		constexpr auto ReferenceBoneIndex = 0x108; // int32_t
		constexpr auto CustomData = 0x110; // UClothingAssetCustomData*
		constexpr auto ClothConfig = 0x118; // FClothConfig_Legacy
	}

	namespace n_UUW-InventoryWidget_C {
		constexpr auto UberGraphFrame = 0x278; // FPointerToUberGraphFrame
		constexpr auto FadeIn = 0x280; // UWidgetAnimation*
		constexpr auto BackgroundBlur_1 = 0x288; // UBackgroundBlur*
		constexpr auto BackPackBound_begin = 0x290; // UCanvasPanel*
		constexpr auto BackPackBound_end = 0x298; // UCanvasPanel*
		constexpr auto BlackMarketOverlay = 0x2a0; // UOverlay*
		constexpr auto BTN-BlackMarket = 0x2a8; // UButton*
		constexpr auto Button_SortByTime = 0x2b0; // UButton*
		constexpr auto Button_SortByType = 0x2b8; // UButton*
		constexpr auto CanvasPanel_1 = 0x2c0; // UCanvasPanel*
		constexpr auto CanvasPanel_7 = 0x2c8; // UCanvasPanel*
		constexpr auto CanvasPanel_16 = 0x2d0; // UCanvasPanel*
		constexpr auto Carried_Area = 0x2d8; // UImage*
		constexpr auto CarriedBound_begin = 0x2e0; // UCanvasPanel*
		constexpr auto CarriedBound_end = 0x2e8; // UCanvasPanel*
		constexpr auto CarriedList = 0x2f0; // UUW-Inventory_Carried_C*
		constexpr auto CarriedList_StrongBox = 0x2f8; // UUW-Inventory_Carried_C*
		constexpr auto CheckBox = 0x300; // UCheckBox*
		constexpr auto CheckBox_1 = 0x308; // UCheckBox*
		constexpr auto CheckBox_2 = 0x310; // UCheckBox*
		constexpr auto CombineRecipe = 0x318; // UCanvasPanel*
		constexpr auto EquippedList = 0x320; // UUW-Inventory_Equipped_C*
		constexpr auto HorizontalBox = 0x328; // UHorizontalBox*
		constexpr auto HorizontalBox_7 = 0x330; // UHorizontalBox*
		constexpr auto HorizontalBox_ShowCharacter = 0x338; // UHorizontalBox*
		constexpr auto HorizontalBox_WeightMax = 0x340; // UHorizontalBox*
		constexpr auto Image = 0x348; // UImage*
		constexpr auto Image_2 = 0x350; // UImage*
		constexpr auto Image_3 = 0x358; // UImage*
		constexpr auto Image_5 = 0x360; // UImage*
		constexpr auto Image_6 = 0x368; // UImage*
		constexpr auto Image_7 = 0x370; // UImage*
		constexpr auto Image_8 = 0x378; // UImage*
		constexpr auto Image_9 = 0x380; // UImage*
		constexpr auto Image_10 = 0x388; // UImage*
		constexpr auto Image_223 = 0x390; // UImage*
		constexpr auto Image_227 = 0x398; // UImage*
		constexpr auto Image_271 = 0x3a0; // UImage*
		constexpr auto Image_324 = 0x3a8; // UImage*
		constexpr auto Image_489 = 0x3b0; // UImage*
		constexpr auto Image_556 = 0x3b8; // UImage*
		constexpr auto Image_Guess = 0x3c0; // UImage*
		constexpr auto Image_ItemInfo = 0x3c8; // UImage*
		constexpr auto IMG-BG = 0x3d0; // UImage*
		constexpr auto IMG-BlackMarketBorder = 0x3d8; // UImage*
		constexpr auto InputMaskImage = 0x3e0; // UImage*
		constexpr auto Material_Area = 0x3e8; // UImage*
		constexpr auto MaterialBound_begin = 0x3f0; // UCanvasPanel*
		constexpr auto MaterialBound_end = 0x3f8; // UCanvasPanel*
		constexpr auto ProgressBar_MaxWeight = 0x400; // UProgressBar*
		constexpr auto ProgressBar_Weight = 0x408; // UProgressBar*
		constexpr auto ProgressBar_WeightBag = 0x410; // UProgressBar*
		constexpr auto ProximityBound = 0x418; // UCanvasPanel*
		constexpr auto ProximityList = 0x420; // UUW-Inventory_Proximity_C*
		constexpr auto StrongBox_Area = 0x428; // UImage*
		constexpr auto T_AdditionalMaxWeight = 0x430; // UTextBlock*
		constexpr auto T_AdditionalMaxWeightSymbol = 0x438; // UTextBlock*
		constexpr auto T_AdditionalWeight = 0x440; // UTextBlock*
		constexpr auto T_AdditionalWeightSymbol = 0x448; // UTextBlock*
		constexpr auto T_MaxWeight = 0x450; // UTextBlock*
		constexpr auto T_StrongboxCount = 0x458; // UTextBlock*
		constexpr auto T_Weight = 0x460; // UTextBlock*
		constexpr auto T_WeightSlash = 0x468; // UTextBlock*
		constexpr auto TextBlock_11 = 0x470; // UTextBlock*
		constexpr auto TextBlock_CurrentGold = 0x478; // UTextBlock*
		constexpr auto TextBlock_SortByTime = 0x480; // UTextBlock*
		constexpr auto TextBlock_SortByType = 0x488; // UTextBlock*
		constexpr auto UW-Inventory_FreeSupplyToolTip = 0x490; // UUW-Inventory_FreeSupplyToolTip_C*
		constexpr auto UW-Inventory_ItemInfoTooltip = 0x498; // UUW-Inventory_ItemInfoTooltip_C*
		constexpr auto UW-Inventory_Keeped = 0x4a0; // UUW-Inventory_Keeped_C*
		constexpr auto UW-Inventory_Material = 0x4a8; // UUW-Inventory_Material_C*
		constexpr auto UW-Inventory_Recipe = 0x4b0; // UUW-Inventory_Recipe_C*
		constexpr auto UW-SearchingMaterial = 0x4b8; // UUW-SearchingMaterial_C*
		constexpr auto WeaponBound = 0x4c0; // UCanvasPanel*
		constexpr auto WeaponList = 0x4c8; // UUW-Inventory_Weapon_C*
		constexpr auto WeightPerCent = 0x4d0; // UTextBlock*
		constexpr auto PlayerController = 0x4d8; // ABP-BravoHotel-PlayerController_C*
		constexpr auto bItemDrag = 0x4e0; // bool
		constexpr auto DropPopup = 0x4e8; // UUW-ItemDropPopup_C*
		constexpr auto MaximumWeight = 0x4f0; // float
		constexpr auto OldProximityItemCount = 0x4f4; // int32_t
		constexpr auto ProximityGround = 0x4f8; // UUW-Inventory_ProximityBoxSlot_C*
		constexpr auto DefaultPawnRef = 0x500; // ABP-DefaultPawn_C*
		constexpr auto ProximityGroundPool = 0x508; // TArray<UUW-Inventory_ProximitySlot_C*>
		constexpr auto OldDefaultPawnRef = 0x518; // ABP-DefaultPawn_C*
		constexpr auto CharacterTimerHandle = 0x520; // FTimerHandle
		constexpr auto DropBoxWidgetList = 0x528; // TArray<FDropBoxInfo>
		constexpr auto DropBoxParentWidget = 0x538; // UObject*
		constexpr auto SavedInventorySettings = 0x540; // UBP-SavedInventorySettings_C*
		constexpr auto EquipedWeapon = 0x548; // ABravoHotelWeaponBase*
		constexpr auto OldWeaponList = 0x550; // TArray<ABravoHotelWeaponBase*>
		constexpr auto ChangeAttachments = 0x560; // bool
		constexpr auto ItemHoverWidget = 0x568; // UUW-Inventory_ItemSlotHover_C*
		constexpr auto MainWidget = 0x570; // UBravoHotelMainWidget*
		constexpr auto EventDispatcher_OnCloseInventory = 0x578; // FMulticastInlineDelegate
		constexpr auto StealableWidgetList = 0x588; // TArray<UUW-Inventory_ProximityBoxSlot_C*>
		constexpr auto bItemInfoHovered = 0x598; // bool
		constexpr auto bFirstTimeNotifyItemInfo = 0x599; // bool
		constexpr auto Timer_ItemInfoTooltip = 0x5a0; // FTimerHandle
		constexpr auto IsShowingItemInfoTooltip = 0x5a8; // bool
		constexpr auto FirstTimeCapsuleItem = 0x5ac; // int32_t
		constexpr auto FirstTimeCraft = 0x5b0; // int32_t
		constexpr auto bGoldWarning = 0x5b4; // bool
		constexpr auto DefaultWeightColor = 0x5b8; // FSlateColor
		constexpr auto MinusWeightColor = 0x5e0; // FSlateColor
		constexpr auto PlusWeightColor = 0x608; // FSlateColor
	}

	namespace n_UPaperGroupedSpriteComponent {
		constexpr auto InstanceMaterials = 0x4e0; // TArray<UMaterialInterface*>
		constexpr auto PerInstanceSpriteData = 0x4f0; // TArray<FSpriteInstanceData>
	}

	namespace n_UUW-ReportUser_C {
		constexpr auto UberGraphFrame = 0x278; // FPointerToUberGraphFrame
		constexpr auto btn_Cancel = 0x280; // UButton*
		constexpr auto btn_report = 0x288; // UButton*
		constexpr auto combobox_button_overlay = 0x290; // UOverlay*
		constexpr auto combobox_string = 0x298; // UComboBoxString*
		constexpr auto Image = 0x2a0; // UImage*
		constexpr auto Image_2 = 0x2a8; // UImage*
		constexpr auto Image_545 = 0x2b0; // UImage*
		constexpr auto NormalArrow = 0x2b8; // UButton*
		constexpr auto OpeningArrow = 0x2c0; // UButton*
		constexpr auto popup-bg = 0x2c8; // UImage*
		constexpr auto txt_description = 0x2d0; // UTextBlock*
		constexpr auto txt_nickname = 0x2d8; // UTextBlock*
		constexpr auto uw-bg = 0x2e0; // UImage*
		constexpr auto DescriptionText = 0x2e8; // FText
		constexpr auto ReportIndexText = 0x300; // TArray<FText>
		constexpr auto DefaultComboString = 0x310; // FText
		constexpr auto CurrentSelectIndex = 0x328; // int32_t
		constexpr auto SelectIndexFromProgram = 0x32c; // int32_t
		constexpr auto CheckCloseComboArrow = 0x330; // bool
	}

	namespace n_UDatasmithSkyLightComponentTemplate {
		constexpr auto SourceType = 0x30; // ESkyLightSourceType
		constexpr auto CubemapResolution = 0x34; // int32_t
		constexpr auto Cubemap = 0x38; // UTextureCube*
	}

	namespace n_UWmfMediaSettings {
		constexpr auto AllowNonStandardCodecs = 0x28; // bool
		constexpr auto LowLatency = 0x29; // bool
		constexpr auto NativeAudioOut = 0x2a; // bool
		constexpr auto HardwareAcceleratedVideoDecoding = 0x2b; // bool
	}

	namespace n_UNiagaraDataInterfaceVolumeTexture {
		constexpr auto Texture = 0x30; // UVolumeTexture*
	}

	namespace n_ULevel {
		constexpr auto OwningWorld = 0xb8; // UWorld*
		constexpr auto Model = 0xc0; // UModel*
		constexpr auto ModelComponents = 0xc8; // TArray<UModelComponent*>
		constexpr auto ActorCluster = 0xd8; // ULevelActorContainer*
		constexpr auto NumTextureStreamingUnbuiltComponents = 0xe0; // int32_t
		constexpr auto NumTextureStreamingDirtyResources = 0xe4; // int32_t
		constexpr auto LevelScriptActor = 0xe8; // ALevelScriptActor*
		constexpr auto NavListStart = 0xf0; // ANavigationObjectBase*
		constexpr auto NavListEnd = 0xf8; // ANavigationObjectBase*
		constexpr auto NavDataChunks = 0x100; // TArray<UNavigationDataChunk*>
		constexpr auto LightmapTotalSize = 0x110; // float
		constexpr auto ShadowmapTotalSize = 0x114; // float
		constexpr auto StaticNavigableGeometry = 0x118; // TArray<FVector>
		constexpr auto StreamingTextureGuids = 0x128; // TArray<FGuid>
		constexpr auto LevelBuildDataId = 0x1d0; // FGuid
		constexpr auto MapBuildData = 0x1e0; // UMapBuildDataRegistry*
		constexpr auto LightBuildLevelOffset = 0x1e8; // FIntVector
		constexpr auto bIsLightingScenario = 0x1f4; // char : 1
		constexpr auto bTextureStreamingRotationChanged = 0x1f4; // char : 1
		constexpr auto bStaticComponentsRegisteredInStreamingManager = 0x1f4; // char : 1
		constexpr auto bIsVisible = 0x1f4; // char : 1
		constexpr auto WorldSettings = 0x240; // AWorldSettings*
		constexpr auto AssetUserData = 0x250; // TArray<UAssetUserData*>
		constexpr auto DestroyedReplicatedStaticActors = 0x270; // TArray<FReplicatedStaticActorDestructionInfo>
	}

	namespace n_UMaterialExpressionSphericalParticleOpacity {
		constexpr auto Density = 0x40; // FExpressionInput
		constexpr auto ConstantDensity = 0x54; // float
	}

	namespace n_UNiagaraParameterCollectionInstance {
		constexpr auto Collection = 0x28; // UNiagaraParameterCollection*
		constexpr auto OverridenParameters = 0x30; // TArray<FNiagaraVariable>
		constexpr auto ParameterStorage = 0x40; // FNiagaraParameterStore
	}

	namespace n_ATemplateSequenceActor {
		constexpr auto PlaybackSettings = 0x320; // FMovieSceneSequencePlaybackSettings
		constexpr auto SequencePlayer = 0x338; // UTemplateSequencePlayer*
		constexpr auto TemplateSequence = 0x340; // FSoftObjectPath
		constexpr auto BindingOverride = 0x358; // FTemplateSequenceBindingOverrideData
	}

	namespace n_UBravoHotelReplayListWidget {
		constexpr auto TotalPages = 0x248; // int32_t
		constexpr auto CurrentPage = 0x24c; // int32_t
		constexpr auto PageSize = 0x250; // int32_t
		constexpr auto TotalReplays = 0x254; // int32_t
		constexpr auto ReplaysToKeep = 0x258; // int32_t
	}

	namespace n_UEditableTextWidgetStyle {
		constexpr auto EditableTextStyle = 0x30; // FEditableTextStyle
	}

	namespace n_UParticleModuleSize {
		constexpr auto StartSize = 0x30; // FRawDistributionVector
	}

	namespace n_UBravoHotelVehicleWidget {
		constexpr auto IsShow = 0x248; // bool
		constexpr auto Fuel = 0x24c; // float
		constexpr auto hp = 0x250; // float
		constexpr auto Speed = 0x258; // FString
		constexpr auto Name = 0x268; // FString
		constexpr auto SeatInfoList = 0x278; // TArray<FSeatInfo>
		constexpr auto WheelInfoList = 0x288; // TArray<FWheelInfo>
		constexpr auto Vehicle = 0x298; // ABravoHotelVehicle*
	}

	namespace n_UAkXboxOneInitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettings
		constexpr auto ApuHeapSettings = 0x88; // FAkXboxOneApuHeapInitializationSettings
		constexpr auto CommunicationSettings = 0x90; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xb8; // FAkXboxOneAdvancedInitializationSettings
	}

	namespace n_ABravoHotelWindow {
		constexpr auto HIWindowComponents = 0x328; // TArray<UBravoHotelHIDestructibleComponent*>
		constexpr auto WindowComponents = 0x338; // TArray<UBravoHotelDestructibleComponent*>
		constexpr auto bCreateAudioPortal = 0x348; // bool
		constexpr auto SpawnedAudioPortalsOnClient = 0x350; // TArray<UBravoHotelAudioPortalComponent*>
	}

	namespace n_ABravoHotelC4RemoteController {
		constexpr auto ThrownC4 = 0x1c10; // ABravoHotelProjectileGrenadeC4*
		constexpr auto EnableDistance = 0x1c18; // float
		constexpr auto UpdateCheckTime = 0x1c28; // float
		constexpr auto bEnableRemoteController = 0x1c2c; // bool
	}

	namespace n_UBlackboardComponent {
		constexpr auto BrainComp = 0xb0; // UBrainComponent*
		constexpr auto DefaultBlackboardAsset = 0xb8; // UBlackboardData*
		constexpr auto BlackboardAsset = 0xc0; // UBlackboardData*
		constexpr auto KeyInstances = 0xe8; // TArray<UBlackboardKeyType*>
	}

	namespace n_UNavLinkComponent {
		constexpr auto LINKS = 0x4b8; // TArray<FNavigationLink>
	}

	namespace n_UUW-Volume_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Img_Voice = 0x250; // UImage*
		constexpr auto Img_VoiceX = 0x258; // UImage*
		constexpr auto SizeBox_2 = 0x260; // USizeBox*
		constexpr auto TextBlock = 0x268; // UTextBlock*
		constexpr auto WidgetSwitcher_LogOut = 0x270; // UWidgetSwitcher*
		constexpr auto Timer = 0x278; // FTimerHandle
	}

	namespace n_UBTService_DefaultFocus {
		constexpr auto FocusPriority = 0x98; // char
	}

	namespace n_UParticleModuleBeamSource {
		constexpr auto SourceMethod = 0x30; // Beam2SourceTargetMethod
		constexpr auto SourceName = 0x34; // FName
		constexpr auto bSourceAbsolute = 0x3c; // char : 1
		constexpr auto Source = 0x40; // FRawDistributionVector
		constexpr auto bLockSource = 0x88; // char : 1
		constexpr auto SourceTangentMethod = 0x8c; // Beam2SourceTargetTangentMethod
		constexpr auto SourceTangent = 0x90; // FRawDistributionVector
		constexpr auto bLockSourceTangent = 0xd8; // char : 1
		constexpr auto SourceStrength = 0xe0; // FRawDistributionFloat
		constexpr auto bLockSourceStength = 0x110; // char : 1
	}

	namespace n_UGizmoArrowComponent {
		constexpr auto Direction = 0x4d0; // FVector
		constexpr auto Gap = 0x4dc; // float
		constexpr auto Length = 0x4e0; // float
		constexpr auto Thickness = 0x4e4; // float
	}

	namespace n_UHudSettings {
		constexpr auto bShowHUD = 0x28; // char : 1
		constexpr auto DebugDisplay = 0x30; // TArray<FName>
	}

	namespace n_UBravoHotelAnimNotifyState_BreakDestructable {
		constexpr auto UpdateFrequency = 0x30; // float
		constexpr auto CheckBoneName = 0x34; // FName
		constexpr auto TraceRadius = 0x3c; // float
	}

	namespace n_UInteractiveGizmo {
		constexpr auto InputBehaviors = 0x30; // UInputBehaviorSet*
	}

	namespace n_UCameraShakeSourceComponent {
		constexpr auto Attenuation = 0x230; // ECameraShakeAttenuation
		constexpr auto InnerAttenuationRadius = 0x234; // float
		constexpr auto OuterAttenuationRadius = 0x238; // float
		constexpr auto CameraShake = 0x240; // UCameraShake*
		constexpr auto bAutoPlay = 0x248; // bool
	}

	namespace n_UAkAssetBase {
		constexpr auto PlatformAssetData = 0x40; // UAkAssetPlatformData*
	}

	namespace n_UAnimMontage {
		constexpr auto BlendIn = 0xb8; // FAlphaBlend
		constexpr auto BlendInTime = 0xe8; // float
		constexpr auto BlendOut = 0xf0; // FAlphaBlend
		constexpr auto BlendOutTime = 0x120; // float
		constexpr auto BlendOutTriggerTime = 0x124; // float
		constexpr auto SyncGroup = 0x128; // FName
		constexpr auto SyncSlotIndex = 0x130; // int32_t
		constexpr auto MarkerData = 0x138; // FMarkerSyncData
		constexpr auto CompositeSections = 0x158; // TArray<FCompositeSection>
		constexpr auto SlotAnimTracks = 0x168; // TArray<FSlotAnimationTrack>
		constexpr auto BranchingPoints = 0x178; // TArray<FBranchingPoint>
		constexpr auto bEnableRootMotionTranslation = 0x188; // bool
		constexpr auto bEnableRootMotionRotation = 0x189; // bool
		constexpr auto bEnableAutoBlendOut = 0x18a; // bool
		constexpr auto RootMotionRootLock = 0x18b; // ERootMotionRootLock
		constexpr auto BranchingPointMarkers = 0x190; // TArray<FBranchingPointMarker>
		constexpr auto BranchingPointStateNotifyIndices = 0x1a0; // TArray<int32_t>
		constexpr auto TimeStretchCurve = 0x1b0; // FTimeStretchCurve
		constexpr auto TimeStretchCurveName = 0x1d8; // FName
	}

	namespace n_UMaterialExpressionSubtract {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_USimplygonDisplacementCaster {
		constexpr auto DisplacementCasterSettings = 0x28; // FDisplacementCasterSettings
	}

	namespace n_UInterpToMovementComponent {
		constexpr auto Duration = 0xf0; // float
		constexpr auto bPauseOnImpact = 0xf4; // char : 1
		constexpr auto bSweep = 0xf8; // bool
		constexpr auto TeleportType = 0xf9; // ETeleportType
		constexpr auto BehaviourType = 0xfa; // EInterpToBehaviourType
		constexpr auto bCheckIfStillInWorld = 0xfb; // bool
		constexpr auto bForceSubStepping = 0xfc; // char : 1
		constexpr auto OnInterpToReverse = 0x100; // FMulticastInlineDelegate
		constexpr auto OnInterpToStop = 0x110; // FMulticastInlineDelegate
		constexpr auto OnWaitBeginDelegate = 0x120; // FMulticastInlineDelegate
		constexpr auto OnWaitEndDelegate = 0x130; // FMulticastInlineDelegate
		constexpr auto OnResetDelegate = 0x140; // FMulticastInlineDelegate
		constexpr auto MaxSimulationTimeStep = 0x150; // float
		constexpr auto MaxSimulationIterations = 0x154; // int32_t
		constexpr auto ControlPoints = 0x158; // TArray<FInterpControlPoint>
	}

	namespace n_UInterpTrackInstAkAudioRTPC {
		constexpr auto LastUpdatePosition = 0x28; // float
	}

	namespace n_UMaterialExpressionSkyAtmosphereLightDirection {
		constexpr auto LightIndex = 0x40; // int32_t
	}

	namespace n_UAnimSharingTransitionInstance {
		constexpr auto FromComponent = 0x268; // TWeakObjectPtr<USkeletalMeshComponent>
		constexpr auto ToComponent = 0x270; // TWeakObjectPtr<USkeletalMeshComponent>
		constexpr auto BlendTime = 0x278; // float
		constexpr auto bBlendBool = 0x27c; // bool
	}

	namespace n_UStaticMeshSimulationComponent {
		constexpr auto Simulating = 0xb8; // bool
		constexpr auto bNotifyCollisions = 0xb9; // bool
		constexpr auto ObjectType = 0xba; // EObjectStateTypeEnum
		constexpr auto Mass = 0xbc; // float
		constexpr auto CollisionType = 0xc0; // ECollisionTypeEnum
		constexpr auto ImplicitType = 0xc1; // EImplicitTypeEnum
		constexpr auto MinLevelSetResolution = 0xc4; // int32_t
		constexpr auto MaxLevelSetResolution = 0xc8; // int32_t
		constexpr auto InitialVelocityType = 0xcc; // EInitialVelocityTypeEnum
		constexpr auto InitialLinearVelocity = 0xd0; // FVector
		constexpr auto InitialAngularVelocity = 0xdc; // FVector
		constexpr auto DamageThreshold = 0xe8; // float
		constexpr auto PhysicalMaterial = 0xf0; // UChaosPhysicalMaterial*
		constexpr auto ChaosSolverActor = 0xf8; // AChaosSolverActor*
		constexpr auto OnChaosPhysicsCollision = 0x100; // FMulticastInlineDelegate
		constexpr auto SimulatedComponents = 0x120; // TArray<UPrimitiveComponent*>
	}

	namespace n_UParticleModuleTypeDataAnimTrail {
		constexpr auto bDeadTrailsOnDeactivate = 0x30; // char : 1
		constexpr auto bEnablePreviousTangentRecalculation = 0x30; // char : 1
		constexpr auto bTangentRecalculationEveryFrame = 0x30; // char : 1
		constexpr auto TilingDistance = 0x34; // float
		constexpr auto DistanceTessellationStepSize = 0x38; // float
		constexpr auto TangentTessellationStepSize = 0x3c; // float
		constexpr auto WidthTessellationStepSize = 0x40; // float
	}

	namespace n_UGizmoCircleComponent {
		constexpr auto Normal = 0x4d0; // FVector
		constexpr auto Radius = 0x4dc; // float
		constexpr auto Thickness = 0x4e0; // float
		constexpr auto NumSides = 0x4e4; // int32_t
		constexpr auto bViewAligned = 0x4e8; // bool
		constexpr auto bOnlyAllowFrontFacingHits = 0x4e9; // bool
	}

	namespace n_UGameplayTagsManager {
		constexpr auto TagSources = 0xc0; // TArray<FGameplayTagSource>
		constexpr auto GameplayTagTables = 0x1b0; // TArray<UDataTable*>
	}

	namespace n_ASwitchActor {
		constexpr auto SceneComponent = 0x330; // USceneComponent*
		constexpr auto LastSelectedOption = 0x338; // int32_t
	}

	namespace n_UInterpTrackInstLinearColorProp {
		constexpr auto ResetColor = 0x58; // FLinearColor
	}

	namespace n_UDestructibleFractureSettings {
		constexpr auto CellSiteCount = 0x28; // int32_t
		constexpr auto FractureMaterialDesc = 0x2c; // FFractureMaterial
		constexpr auto RandomSeed = 0x50; // int32_t
		constexpr auto VoronoiSites = 0x58; // TArray<FVector>
		constexpr auto OriginalSubmeshCount = 0x68; // int32_t
		constexpr auto Materials = 0x70; // TArray<UMaterialInterface*>
		constexpr auto ChunkParameters = 0x80; // TArray<FDestructibleChunkParameters>
	}

	namespace n_ANavigationObjectBase {
		constexpr auto CapsuleComponent = 0x320; // UCapsuleComponent*
		constexpr auto GoodSprite = 0x328; // UBillboardComponent*
		constexpr auto BadSprite = 0x330; // UBillboardComponent*
		constexpr auto bIsPIEPlayerStart = 0x338; // char : 1
	}

	namespace n_ABravoHotelAircraftViewer {
		constexpr auto SpringArm = 0x388; // USpringArmComponent*
		constexpr auto Camera = 0x390; // UCameraComponent*
		constexpr auto StartYaw = 0x398; // float
	}

	namespace n_UAIDataProvider_QueryParams {
		constexpr auto ParamName = 0x28; // FName
		constexpr auto FloatValue = 0x30; // float
		constexpr auto IntValue = 0x34; // int32_t
		constexpr auto BoolValue = 0x38; // bool
	}

	namespace n_USimplygonNormalCaster {
		constexpr auto NormalCasterSettings = 0x28; // FNormalCasterSettings
	}

	namespace n_UBravoHotelCustomizeWardrobeWidget {
		constexpr auto WearableList = 0x248; // TArray<FBravoHotelWardrobeDataType>
	}

	namespace n_UUW-ReplayPlayerListWidget_C {
		constexpr auto UberGraphFrame = 0x2e0; // FPointerToUberGraphFrame
		constexpr auto Bt_ListNext = 0x2e8; // UButton*
		constexpr auto BT_ListPrev = 0x2f0; // UButton*
		constexpr auto ScrollBox_PlayerItem = 0x2f8; // UScrollBox*
		constexpr auto T_SortType = 0x300; // UTextBlock*
		constexpr auto VB_ListMain = 0x308; // UVerticalBox*
	}

	namespace n_UModularSynthPresetBank {
		constexpr auto Presets = 0x28; // TArray<FModularSynthPresetBankEntry>
	}

	namespace n_UUW-ClassinfoitemBoardWidget_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Anim_Show_classinfo = 0x250; // UWidgetAnimation*
		constexpr auto Button_SpreadList = 0x258; // UButton*
		constexpr auto Image_323 = 0x260; // UImage*
		constexpr auto UW-ClassinfoitemWidget = 0x268; // UUW-ClassinfoitemWidget_C*
		constexpr auto UW-ClassinfoitemWidget_2 = 0x270; // UUW-ClassinfoitemWidget_C*
		constexpr auto UW-ClassinfoitemWidget_3 = 0x278; // UUW-ClassinfoitemWidget_C*
		constexpr auto UW-ClassinfoitemWidget_4 = 0x280; // UUW-ClassinfoitemWidget_C*
		constexpr auto UW-ClassinfoitemWidget_5 = 0x288; // UUW-ClassinfoitemWidget_C*
		constexpr auto UW-ClassinfoitemWidget_6 = 0x290; // UUW-ClassinfoitemWidget_C*
		constexpr auto UW-ClassinfoitemWidget_7 = 0x298; // UUW-ClassinfoitemWidget_C*
		constexpr auto UW-ClassinfoitemWidget_8 = 0x2a0; // UUW-ClassinfoitemWidget_C*
		constexpr auto UW-ClassinfoitemWidget_9 = 0x2a8; // UUW-ClassinfoitemWidget_C*
		constexpr auto UW-ClassinfoitemWidget_10 = 0x2b0; // UUW-ClassinfoitemWidget_C*
		constexpr auto UW-ClassinfoitemWidget_11 = 0x2b8; // UUW-ClassinfoitemWidget_C*
		constexpr auto UW-ClassinfoitemWidget_12 = 0x2c0; // UUW-ClassinfoitemWidget_C*
		constexpr auto VerticalBox_ClassBox = 0x2c8; // UVerticalBox*
		constexpr auto VerticalBox_ClassList = 0x2d0; // UVerticalBox*
		constexpr auto VerticalBox_Description = 0x2d8; // UVerticalBox*
		constexpr auto VerticalBox_Main = 0x2e0; // UVerticalBox*
		constexpr auto LastTableRow = 0x2e8; // int32_t
		constexpr auto ClassInfoItemMap = 0x2f0; // TMap<FName, UUW-ClassinfoitemWidget_C*>
		constexpr auto ListVisibility = 0x340; // bool
	}

	namespace n_UDistributionFloatUniformCurve {
		constexpr auto ConstantCurve = 0x38; // FInterpCurveVector2D
	}

	namespace n_ABravoHotelWeaponBase {
		constexpr auto Anim_SecondaryWeapon_Crouch_Idle = 0x890; // UAnimSequence*
		constexpr auto bIsNoDamageWeapon = 0x898; // bool
		constexpr auto SpecialProneAnimation_1P = 0x8a0; // UBlendSpaceBase*
		constexpr auto ADSAnim = 0x8a8; // UAnimSequence*
		constexpr auto TimerHandle_UpdateActorHiddenInGame_TPPOnly = 0x8b0; // FTimerHandle
		constexpr auto SpecialSprintReadyAnimation = 0x8b8; // UAnimSequence*
		constexpr auto WeaponDataTable = 0x8c0; // FDataTableRowHandle
		constexpr auto CurrentPlayerMontage_1P = 0x8d0; // UAnimMontage*
		constexpr auto magazine = 0x910; // int32_t
		constexpr auto SpecialProneAnimation = 0x9f0; // UBlendSpaceBase*
		constexpr auto PausedMontagePosition = 0x9f8; // float
		constexpr auto IdlePositionDeltaArray_FPP = 0xa00; // TMap<EWeaponAttachmentItem, FVector>
		constexpr auto Anim_SecondaryWeapon_Stand_Idle = 0xa80; // UAnimSequence*
		constexpr auto ShiningEffect = 0xa88; // UParticleSystem*
		constexpr auto SkelMesh1P = 0xa90; // UClientSkeletalMeshComponent*
		constexpr auto CurrentWeaponMontage_1P = 0xb28; // UAnimMontage*
		constexpr auto bUseSpecialCrouchSprintAnimation = 0xb30; // bool
		constexpr auto AttachmentItemEnums = 0xb38; // TArray<EWeaponAttachmentItem>
		constexpr auto AimOffsetMaxY_TPP = 0xb48; // float
		constexpr auto UI_CurrentDamage = 0xb4c; // float
		constexpr auto AttachmentItems = 0xb70; // TArray<FInventoryItemInfo>
		constexpr auto BackPackInTotalAmmoCount = 0xb80; // int32_t
		constexpr auto CollideUpsideAnim = 0xb88; // UAnimSequence*
		constexpr auto IdleHandAnim_InVehicle = 0xb90; // UAnimSequence*
		constexpr auto bAlwaysMaxCollideAlpha = 0xb98; // bool
		constexpr auto AimOffsetMinY_TPP = 0xbf0; // float
		constexpr auto bUseSpecialSprintAnimation = 0xc30; // bool
		constexpr auto SprintAnim_1P = 0xc70; // UAnimSequence*
		constexpr auto bIsPerkWeapon = 0xc78; // bool
		constexpr auto ProneHandAnim_3p = 0xc80; // UAnimSequence*
		constexpr auto bUseOneHandSprintAnimation = 0xc94; // bool
		constexpr auto AOSPositionDeltaArray_FPP = 0xc98; // TMap<EWeaponAttachmentItem, FVector>
		constexpr auto bHideMagazineWhenEmpty = 0xd20; // bool
		constexpr auto WeaponBaseData = 0xd28; // FWeaponBaseData
		constexpr auto WeaponInfo = 0xe70; // FBravoHotelWeaponInfo
		constexpr auto AOSPositionInterpSpeed_FPP = 0x19a0; // float
		constexpr auto IdleHandAnim_Crouch = 0x19a8; // UAnimSequence*
		constexpr auto CollideDownsideAnim = 0x19b0; // UAnimSequence*
		constexpr auto CurrentWeaponMontage_3P = 0x19b8; // UAnimMontage*
		constexpr auto AttachmentInfoModifier = 0x19c8; // FBravoHotelAttachmentInfo
		constexpr auto bVisibleAbsolutely = 0x1a30; // bool
		constexpr auto bDisableHandAnimDuringProneCollide = 0x1a70; // bool
		constexpr auto SpecialCrouchSprintAnimation = 0x1a78; // UBlendSpaceBase*
		constexpr auto PerkIndex = 0x1a80; // FName
		constexpr auto CollideProneAnim = 0x1a88; // UAnimSequence*
		constexpr auto bIsTrueDamageWeapon = 0x1ac0; // bool
		constexpr auto bUseSpecialProneAnimation = 0x1ad9; // bool
		constexpr auto LastFireTime = 0x1adc; // float
		constexpr auto SpecialSprintAnimation = 0x1ae0; // UBlendSpaceBase*
		constexpr auto CurrentMontageState = 0x1ae8; // EWeaponState
		constexpr auto MagazineCapacity = 0x1aec; // int32_t
		constexpr auto CurrentPlayerMontage_3P = 0x1b20; // UAnimMontage*
		constexpr auto ShiningEffectComponent = 0x1b28; // UParticleSystemComponent*
		constexpr auto WeaponReplicatedComponent = 0x1b30; // UWeaponReplicatedComponent*
		constexpr auto UI_CurrentRPM = 0x1b38; // int32_t
		constexpr auto bDisableHandAnimDuringSprint = 0x1b3c; // bool
		constexpr auto ProhibitedforUseInVehicle = 0x1b3d; // bool
		constexpr auto OnFireDelegate = 0x1b48; // FMulticastInlineDelegate
		constexpr auto IdleHandAnim_3p = 0x1b58; // UAnimSequence*
		constexpr auto IdleHandAnim_1p = 0x1b60; // UAnimSequence*
		constexpr auto bDisableHandAnimDuringCollide = 0x1b68; // bool
		constexpr auto AOSAnim = 0x1be8; // UAnimSequence*
	}

	namespace n_UDeviceProfile {
		constexpr auto DeviceType = 0x38; // FString
		constexpr auto BaseProfileName = 0x48; // FString
		constexpr auto Parent = 0x58; // UObject*
		constexpr auto CVars = 0x78; // TArray<FString>
	}

	namespace n_UMovieSceneEventTriggerSection {
		constexpr auto EventChannel = 0xe0; // FMovieSceneEventChannel
	}

	namespace n_ULocationServicesImpl {
		constexpr auto OnLocationChanged = 0x28; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionMapARPassthroughCameraUV {
		constexpr auto Coordinates = 0x40; // FExpressionInput
	}

	namespace n_UAREnvironmentCaptureProbe {
		constexpr auto EnvironmentCaptureTexture = 0xf8; // UAREnvironmentCaptureProbeTexture*
	}

	namespace n_UComboButtonWidgetStyle {
		constexpr auto ComboButtonStyle = 0x30; // FComboButtonStyle
	}

	namespace n_ABravoHotelAreaSkillZoneWetFog {
		constexpr auto WetFogZoneInfo = 0x390; // FWetFogZoneInfo
		constexpr auto EffectActiveCharacters = 0x3a0; // TArray<ABravoHotelCharacter*>
	}

	namespace n_UBrainComponent {
		constexpr auto BlackboardComp = 0xb8; // UBlackboardComponent*
		constexpr auto AIOwner = 0xc0; // AAIController*
	}

	namespace n_AEmitter {
		constexpr auto ParticleSystemComponent = 0x318; // UParticleSystemComponent*
		constexpr auto bDestroyOnSystemFinish = 0x320; // char : 1
		constexpr auto bPostUpdateTickGroup = 0x320; // char : 1
		constexpr auto bCurrentlyActive = 0x320; // char : 1
		constexpr auto OnParticleSpawn = 0x328; // FMulticastInlineDelegate
		constexpr auto OnParticleBurst = 0x338; // FMulticastInlineDelegate
		constexpr auto OnParticleDeath = 0x348; // FMulticastInlineDelegate
		constexpr auto OnParticleCollide = 0x358; // FMulticastInlineDelegate
	}

	namespace n_UEdGraphNode {
		constexpr auto DeprecatedPins = 0x38; // TArray<UEdGraphPin_Deprecated*>
		constexpr auto NodePosX = 0x48; // int32_t
		constexpr auto NodePosY = 0x4c; // int32_t
		constexpr auto NodeWidth = 0x50; // int32_t
		constexpr auto NodeHeight = 0x54; // int32_t
		constexpr auto AdvancedPinDisplay = 0x58; // ENodeAdvancedPins
		constexpr auto EnabledState = 0x59; // ENodeEnabledState
		constexpr auto bDisplayAsDisabled = 0x5b; // char : 1
		constexpr auto bUserSetEnabledState = 0x5b; // char : 1
		constexpr auto bIsNodeEnabled = 0x5b; // char : 1
		constexpr auto bHasCompilerMessage = 0x5b; // char : 1
		constexpr auto NodeComment = 0x60; // FString
		constexpr auto ErrorType = 0x70; // int32_t
		constexpr auto ErrorMsg = 0x78; // FString
		constexpr auto NodeGuid = 0x88; // FGuid
	}

	namespace n_UTextLayoutWidget {
		constexpr auto ShapedTextOptions = 0x108; // FShapedTextOptions
		constexpr auto Justification = 0x10b; // ETextJustify
		constexpr auto WrappingPolicy = 0x10c; // ETextWrappingPolicy
		constexpr auto AutoWrapText = 0x10d; // char : 1
		constexpr auto WrapTextAt = 0x110; // float
		constexpr auto Margin = 0x114; // FMargin
		constexpr auto LineHeightPercentage = 0x124; // float
	}

	namespace n_UBravoHotelInventoryPerkSlotWidget {
		constexpr auto PlayerCharacter = 0x248; // ABravoHotelCharacter*
		constexpr auto PerkInfo = 0x250; // FPerkUIInfo
		constexpr auto bIsJustVisual = 0x27c; // bool
		constexpr auto OverlayCoolTime = 0x280; // UOverlay*
		constexpr auto TextCoolTime = 0x288; // UTextBlock*
		constexpr auto ImgCoolTime = 0x290; // UImage*
		constexpr auto Img_Active = 0x298; // UImage*
	}

	namespace n_UUW-Inventory_Material_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Character_BG_Motion = 0x250; // UWidgetAnimation*
		constexpr auto Image_308 = 0x258; // UImage*
		constexpr auto ScrollBox_KeepedList = 0x260; // UScrollBox*
		constexpr auto TextBlock_Count = 0x268; // UTextBlock*
		constexpr auto PlayerController = 0x270; // ABP-BravoHotel-PlayerController_C*
	}

	namespace n_UUW-BlackMarket_SubTab_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto BTN-Amplifier = 0x250; // UButton*
		constexpr auto BTN-Attachment-ALL = 0x258; // UButton*
		constexpr auto BTN-Attachment-Barrel = 0x260; // UButton*
		constexpr auto BTN-Attachment-Grip = 0x268; // UButton*
		constexpr auto BTN-Attachment-Mag = 0x270; // UButton*
		constexpr auto BTN-Attachment-Muzzle = 0x278; // UButton*
		constexpr auto BTN-Attachment-Sight = 0x280; // UButton*
		constexpr auto BTN-Attachment-Stock = 0x288; // UButton*
		constexpr auto BTN-Consumable_Chest = 0x290; // UButton*
		constexpr auto BTN-Consumable_Material = 0x298; // UButton*
		constexpr auto BTN-Consumable_Recipe = 0x2a0; // UButton*
		constexpr auto BTN-Consumable_Usable = 0x2a8; // UButton*
		constexpr auto BTN-Custom-ALL = 0x2b0; // UButton*
		constexpr auto BTN-Custom-Face = 0x2b8; // UButton*
		constexpr auto BTN-Custom-Hair = 0x2c0; // UButton*
		constexpr auto BTN-Gear-All = 0x2c8; // UButton*
		constexpr auto BTN-Gear-Armor = 0x2d0; // UButton*
		constexpr auto BTN-Gear-Bag = 0x2d8; // UButton*
		constexpr auto BTN-Gear-Ghillie = 0x2e0; // UButton*
		constexpr auto BTN-Gear-Helmet = 0x2e8; // UButton*
		constexpr auto BTN-ResetHair = 0x2f0; // UButton*
		constexpr auto BTN-WeaponALL = 0x2f8; // UButton*
		constexpr auto BTN-Wearable-ALL = 0x300; // UButton*
		constexpr auto BTN-Wearable-Bottom = 0x308; // UButton*
		constexpr auto BTN-Wearable-EyeWear = 0x310; // UButton*
		constexpr auto BTN-Wearable-Gloves = 0x318; // UButton*
		constexpr auto BTN-Wearable-Hat = 0x320; // UButton*
		constexpr auto BTN-Wearable-Mask = 0x328; // UButton*
		constexpr auto BTN-Wearable-Outer = 0x330; // UButton*
		constexpr auto BTN-Wearable-Shoes = 0x338; // UButton*
		constexpr auto BTN-Wearable-Top = 0x340; // UButton*
		constexpr auto BTN-WepaonAR = 0x348; // UButton*
		constexpr auto BTN-WepaonDMR = 0x350; // UButton*
		constexpr auto BTN-WepaonMelee = 0x358; // UButton*
		constexpr auto BTN-WepaonPistol = 0x360; // UButton*
		constexpr auto BTN-WepaonShotgun = 0x368; // UButton*
		constexpr auto BTN-WepaonSMG = 0x370; // UButton*
		constexpr auto BTN-WepaonSR = 0x378; // UButton*
		constexpr auto BTN-WepaonThrowing = 0x380; // UButton*
		constexpr auto Button_1 = 0x388; // UButton*
		constexpr auto Button_2 = 0x390; // UButton*
		constexpr auto Button_3 = 0x398; // UButton*
		constexpr auto Button_4 = 0x3a0; // UButton*
		constexpr auto Image_1 = 0x3a8; // UImage*
		constexpr auto Image_2 = 0x3b0; // UImage*
		constexpr auto Image_3 = 0x3b8; // UImage*
		constexpr auto Image_4 = 0x3c0; // UImage*
		constexpr auto IMG-Attach-Check01 = 0x3c8; // UImage*
		constexpr auto IMG-Attach-Check02 = 0x3d0; // UImage*
		constexpr auto IMG-Attach-Check03 = 0x3d8; // UImage*
		constexpr auto IMG-Attach-Check04 = 0x3e0; // UImage*
		constexpr auto IMG-Attach-Check05 = 0x3e8; // UImage*
		constexpr auto IMG-Attach-Check06 = 0x3f0; // UImage*
		constexpr auto IMG-Attachment-ALL = 0x3f8; // UImage*
		constexpr auto IMG-Check02 = 0x400; // UImage*
		constexpr auto IMG-Check03 = 0x408; // UImage*
		constexpr auto IMG-Check04 = 0x410; // UImage*
		constexpr auto IMG-Check05 = 0x418; // UImage*
		constexpr auto IMG-Check06 = 0x420; // UImage*
		constexpr auto IMG-Check07 = 0x428; // UImage*
		constexpr auto IMG-Check08 = 0x430; // UImage*
		constexpr auto IMG-Check09 = 0x438; // UImage*
		constexpr auto IMG-Check10 = 0x440; // UImage*
		constexpr auto IMG-Check11 = 0x448; // UImage*
		constexpr auto IMG-Consumable_Chest_Check = 0x450; // UImage*
		constexpr auto IMG-Consumable_Material_Check = 0x458; // UImage*
		constexpr auto IMG-Consumable_Recipe_Check = 0x460; // UImage*
		constexpr auto IMG-Consumable_Usable_Check = 0x468; // UImage*
		constexpr auto IMG-Custom-ALL = 0x470; // UImage*
		constexpr auto IMG-Custom-Face = 0x478; // UImage*
		constexpr auto IMG-Custom-Hair = 0x480; // UImage*
		constexpr auto IMG-Gear-All = 0x488; // UImage*
		constexpr auto IMG-Gear-Armor = 0x490; // UImage*
		constexpr auto IMG-Gear-Bag = 0x498; // UImage*
		constexpr auto IMG-Gear-Ghillie = 0x4a0; // UImage*
		constexpr auto IMG-Gear-Helmet = 0x4a8; // UImage*
		constexpr auto IMG-Wearable-Check01 = 0x4b0; // UImage*
		constexpr auto IMG-Wearable-Check02 = 0x4b8; // UImage*
		constexpr auto IMG-Wearable-Check03 = 0x4c0; // UImage*
		constexpr auto IMG-Wearable-Check04 = 0x4c8; // UImage*
		constexpr auto IMG-Wearable-Check05 = 0x4d0; // UImage*
		constexpr auto IMG-Wearable-Check06 = 0x4d8; // UImage*
		constexpr auto IMG-Wearable-Check09 = 0x4e0; // UImage*
		constexpr auto IMG-Wearable-Check10 = 0x4e8; // UImage*
		constexpr auto IMG-Wearable-Check12 = 0x4f0; // UImage*
		constexpr auto SB-Attachment = 0x4f8; // USizeBox*
		constexpr auto SB-Consumable = 0x500; // USizeBox*
		constexpr auto SB-Custom = 0x508; // USizeBox*
		constexpr auto SB-Gear = 0x510; // USizeBox*
		constexpr auto SB-Perk = 0x518; // USizeBox*
		constexpr auto SB-Weapon = 0x520; // USizeBox*
		constexpr auto SB-Wearable = 0x528; // USizeBox*
		constexpr auto TextBlock_2 = 0x530; // UTextBlock*
		constexpr auto TextBlock_3 = 0x538; // UTextBlock*
		constexpr auto TextBlock_4 = 0x540; // UTextBlock*
		constexpr auto TextBlock_5 = 0x548; // UTextBlock*
		constexpr auto TXT-Attachment-ALL = 0x550; // UTextBlock*
		constexpr auto TXT-Attachment-Barrel = 0x558; // UTextBlock*
		constexpr auto TXT-Attachment-Grip = 0x560; // UTextBlock*
		constexpr auto TXT-Attachment-Mag = 0x568; // UTextBlock*
		constexpr auto TXT-Attachment-Muzzle = 0x570; // UTextBlock*
		constexpr auto TXT-Attachment-Sight = 0x578; // UTextBlock*
		constexpr auto TXT-Attachment-Stock = 0x580; // UTextBlock*
		constexpr auto TXT-Consumable_Chest = 0x588; // UTextBlock*
		constexpr auto TXT-Consumable_Material = 0x590; // UTextBlock*
		constexpr auto TXT-Consumable_Recipe = 0x598; // UTextBlock*
		constexpr auto TXT-Consumable_Usable = 0x5a0; // UTextBlock*
		constexpr auto TXT-Custom-ALL = 0x5a8; // UTextBlock*
		constexpr auto TXT-Custom-Face = 0x5b0; // UTextBlock*
		constexpr auto TXT-Custom-Hair = 0x5b8; // UTextBlock*
		constexpr auto TXT-Gear-All = 0x5c0; // UTextBlock*
		constexpr auto TXT-Gear-Armor = 0x5c8; // UTextBlock*
		constexpr auto TXT-Gear-Bag = 0x5d0; // UTextBlock*
		constexpr auto TXT-Gear-Ghillie = 0x5d8; // UTextBlock*
		constexpr auto TXT-Gear-Helmet = 0x5e0; // UTextBlock*
		constexpr auto TXT-Wearable-ALL = 0x5e8; // UTextBlock*
		constexpr auto TXT-Wearable-Bottom = 0x5f0; // UTextBlock*
		constexpr auto TXT-Wearable-Eyewear = 0x5f8; // UTextBlock*
		constexpr auto TXT-Wearable-Gloves = 0x600; // UTextBlock*
		constexpr auto TXT-Wearable-Mask = 0x608; // UTextBlock*
		constexpr auto TXT-Wearable-Outer = 0x610; // UTextBlock*
		constexpr auto TXT-Wearable-Shoes = 0x618; // UTextBlock*
		constexpr auto TXT-Wearable-Top = 0x620; // UTextBlock*
		constexpr auto TXT-Wearable_Hat = 0x628; // UTextBlock*
		constexpr auto TXT-WepaonALL = 0x630; // UTextBlock*
		constexpr auto TXT-WepaonAmplifier = 0x638; // UTextBlock*
		constexpr auto TXT-WepaonAR = 0x640; // UTextBlock*
		constexpr auto TXT-WepaonDMR = 0x648; // UTextBlock*
		constexpr auto TXT-WepaonMelee = 0x650; // UTextBlock*
		constexpr auto TXT-WepaonPistol = 0x658; // UTextBlock*
		constexpr auto TXT-WepaonShotgun = 0x660; // UTextBlock*
		constexpr auto TXT-WepaonSMG = 0x668; // UTextBlock*
		constexpr auto TXT-WepaonSR = 0x670; // UTextBlock*
		constexpr auto TXT-WepaonThrowing = 0x678; // UTextBlock*
		constexpr auto VerticalBox_Perk = 0x680; // UVerticalBox*
		constexpr auto NormalSlateColor = 0x688; // FSlateColor
		constexpr auto SelectedSlateColor = 0x6b0; // FSlateColor
		constexpr auto BlackMarketMainRef = 0x6d8; // UUW-BlackMarket_Main_C*
	}

	namespace n_UVectorFieldAnimated {
		constexpr auto Texture = 0x48; // UTexture2D*
		constexpr auto ConstructionOp = 0x50; // EVectorFieldConstructionOp
		constexpr auto VolumeSizeX = 0x54; // int32_t
		constexpr auto VolumeSizeY = 0x58; // int32_t
		constexpr auto VolumeSizeZ = 0x5c; // int32_t
		constexpr auto SubImagesX = 0x60; // int32_t
		constexpr auto SubImagesY = 0x64; // int32_t
		constexpr auto FrameCount = 0x68; // int32_t
		constexpr auto FramesPerSecond = 0x6c; // float
		constexpr auto bLoop = 0x70; // char : 1
		constexpr auto NoiseField = 0x78; // UVectorFieldStatic*
		constexpr auto NoiseScale = 0x80; // float
		constexpr auto NoiseMax = 0x84; // float
	}

	namespace n_UMaterialExpressionRotator {
		constexpr auto Coordinate = 0x40; // FExpressionInput
		constexpr auto Time = 0x54; // FExpressionInput
		constexpr auto CenterX = 0x68; // float
		constexpr auto CenterY = 0x6c; // float
		constexpr auto Speed = 0x70; // float
		constexpr auto ConstCoordinate = 0x74; // uint32_t
	}

	namespace n_UUW-ListWidget_CoreInfo_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Anim_AddCoreInfo = 0x268; // UWidgetAnimation*
		constexpr auto HB_Smartping = 0x270; // UHorizontalBox*
		constexpr auto Img_Back = 0x278; // UImage*
		constexpr auto Img_MarkerIcon = 0x280; // UImage*
		constexpr auto Img_PerkDeckIcon = 0x288; // UImage*
		constexpr auto T_Message = 0x290; // UTextBlock*
		constexpr auto T_PingType = 0x298; // UTextBlock*
		constexpr auto T_PlayerName = 0x2a0; // UTextBlock*
		constexpr auto WidgetSwitcher_MessageType = 0x2a8; // UWidgetSwitcher*
	}

	namespace n_UMaterialExpressionSceneTexture {
		constexpr auto Coordinates = 0x40; // FExpressionInput
		constexpr auto SceneTextureId = 0x54; // ESceneTextureId
		constexpr auto bFiltered = 0x55; // bool
	}

	namespace n_AARSkyLight {
		constexpr auto CaptureProbe = 0x328; // UAREnvironmentCaptureProbe*
	}

	namespace n_UUW-CastingWidget_CancelText_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto TextBlock = 0x250; // UTextBlock*
		constexpr auto SetText = 0x258; // FText
	}

	namespace n_UGizmoAxisTranslationParameterSource {
		constexpr auto AxisSource = 0x90; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0xa0; // TScriptInterface<IGizmoTransformSource>
		constexpr auto Parameter = 0xb0; // float
		constexpr auto LastChange = 0xb4; // FGizmoFloatParameterChange
		constexpr auto CurTranslationAxis = 0xbc; // FVector
		constexpr auto CurTranslationOrigin = 0xc8; // FVector
		constexpr auto InitialTransform = 0xe0; // FTransform
	}

	namespace n_ABravoHotelRedZoneManager {
		constexpr auto Usable = 0x318; // bool
		constexpr auto TableRedZoneID = 0x31c; // FName
		constexpr auto DefaultRedZoneData = 0x328; // FRedZoneData
		constexpr auto ArrayRedZoneData = 0x380; // TArray<FRedZoneData>
		constexpr auto BeginPhase = 0x390; // int32_t
		constexpr auto EndPhase = 0x394; // int32_t
		constexpr auto CurrentRedZone = 0x3f8; // ABravoHotelRedZone*
	}

	namespace n_UInAppPurchaseQueryCallbackProxy2 {
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UParticleModuleParameterDynamic_Seeded {
		constexpr auto RandomSeedInfo = 0x48; // FParticleRandomSeedInfo
	}

	namespace n_UMaterialExpressionDDY {
		constexpr auto Value = 0x40; // FExpressionInput
	}

	namespace n_UDatasmithActorTemplate {
		constexpr auto Layers = 0x30; // TSet<FName>
		constexpr auto Tags = 0x80; // TSet<FName>
	}

	namespace n_UMaterialExpression {
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UParticleModuleColor_Seeded {
		constexpr auto RandomSeedInfo = 0xb0; // FParticleRandomSeedInfo
	}

	namespace n_UNoiseField {
		constexpr auto MinRange = 0xb0; // float
		constexpr auto MaxRange = 0xb4; // float
		constexpr auto Transform = 0xc0; // FTransform
	}

	namespace n_UGameplayTask {
		constexpr auto InstanceName = 0x30; // FName
		constexpr auto ResourceOverlapPolicy = 0x3a; // ETaskResourceOverlapPolicy
		constexpr auto ChildTask = 0x60; // UGameplayTask*
	}

	namespace n_UBrushStampIndicator {
		constexpr auto BrushRadius = 0x38; // float
		constexpr auto BrushFalloff = 0x3c; // float
		constexpr auto BrushPosition = 0x40; // FVector
		constexpr auto BrushNormal = 0x4c; // FVector
		constexpr auto bDrawIndicatorLines = 0x58; // bool
		constexpr auto bDrawRadiusCircle = 0x59; // bool
		constexpr auto bDrawFalloffCircle = 0x5a; // bool
		constexpr auto SampleStepCount = 0x5c; // int32_t
		constexpr auto LineColor = 0x60; // FLinearColor
		constexpr auto LineThickness = 0x70; // float
		constexpr auto bDepthTested = 0x74; // bool
		constexpr auto bDrawSecondaryLines = 0x75; // bool
		constexpr auto SecondaryLineThickness = 0x78; // float
		constexpr auto SecondaryLineColor = 0x7c; // FLinearColor
		constexpr auto AttachedComponent = 0x90; // UPrimitiveComponent*
	}

	namespace n_UMKDemoNetConnectionEx {
		constexpr auto SelfDemoNetConnection = 0x1be8; // UDemoNetConnection*
	}

	namespace n_UTimecodeProvider {
		constexpr auto FrameDelay = 0x28; // float
	}

	namespace n_UAIPerceptionComponent {
		constexpr auto SensesConfig = 0xb0; // TArray<UAISenseConfig*>
		constexpr auto DominantSense = 0xc0; // UAISense*
		constexpr auto AIOwner = 0xd8; // AAIController*
		constexpr auto OnPerceptionUpdated = 0x160; // FMulticastInlineDelegate
		constexpr auto OnTargetPerceptionUpdated = 0x170; // FMulticastInlineDelegate
	}

	namespace n_UStandinProxyContainer {
		constexpr auto Standins = 0x28; // TArray<FStandinProxyEntry>
	}

	namespace n_ANiagaraPreviewGrid {
		constexpr auto System = 0x318; // UNiagaraSystem*
		constexpr auto ResetMode = 0x320; // ENiagaraPreviewGridResetMode
		constexpr auto PreviewAxisX = 0x328; // UNiagaraPreviewAxis*
		constexpr auto PreviewAxisY = 0x330; // UNiagaraPreviewAxis*
		constexpr auto PreviewClass = 0x338; // ANiagaraPreviewBase*
		constexpr auto SpacingX = 0x340; // float
		constexpr auto SpacingY = 0x344; // float
		constexpr auto NumX = 0x348; // int32_t
		constexpr auto NumY = 0x34c; // int32_t
		constexpr auto PreviewComponents = 0x350; // TArray<UChildActorComponent*>
	}

	namespace n_UDatasmithCommonTessellationOptions {
		constexpr auto options = 0x28; // FDatasmithTessellationOptions
	}

	namespace n_UBravoHotelLobbyWidget_Web {
		constexpr auto MousePos = 0x364; // FVector2D
		constexpr auto CheckPreLoad = 0x36c; // bool
		constexpr auto bShowReconnectAlarm = 0x36d; // bool
		constexpr auto ExitDelegate = 0x370; // FMulticastInlineDelegate
		constexpr auto OptionDelegate = 0x380; // FMulticastInlineDelegate
		constexpr auto UIButtonOverSoundDelegate = 0x390; // FMulticastInlineDelegate
		constexpr auto UIButtonClickSoundDelegate = 0x3a0; // FMulticastInlineDelegate
		constexpr auto StoreDelegate = 0x3b0; // FMulticastInlineDelegate
		constexpr auto PartyInfoDelegate = 0x3c0; // FMulticastInlineDelegate
		constexpr auto DefaultMapSetting = 0x3d0; // FBravoHotelLobbyMapSetting
		constexpr auto DevMapSetting = 0x3e0; // FBravoHotelLobbyMapSetting
		constexpr auto MapSetting = 0x3f0; // FBravoHotelLobbyMapSetting
		constexpr auto CustomizedCharacterComponent = 0x400; // UBravoHotelCustomizedCharacter*
		constexpr auto SupplyBoxComponent = 0x408; // UBravoHotelSupplyBox*
		constexpr auto ArmoryComponent = 0x410; // UBravoHotelArmory*
		constexpr auto SeasonComponent = 0x418; // UBravoHotelSeason*
		constexpr auto TabDelegate = 0x420; // FMulticastInlineDelegate
		constexpr auto OnPrefetchingProgress = 0x430; // FMulticastInlineDelegate
		constexpr auto SupplyBoxSpawnEffect = 0x440; // UParticleSystem*
		constexpr auto PP_Preset_PickupOutline = 0x448; // UCameraPostProcessPreset*
		constexpr auto GamePlayTime_Hours = 0x450; // int32_t
		constexpr auto PrefetchingProgressPercentage = 0x454; // int32_t
		constexpr auto bTryMatchingConnected = 0x459; // bool
		constexpr auto SoftReplayWidgetClass = 0x460; // TSoftClassPtr<UObject>
		constexpr auto ReMatchingByDS_TimerHandle = 0x488; // FTimerHandle
		constexpr auto Gold = 0x4a0; // int32_t
		constexpr auto WeaponList = 0x4a8; // TArray<FResponse_Weapon_List_Data>
		constexpr auto MaterialList = 0x4b8; // TArray<FResponse_MaterialList_Data>
		constexpr auto MaxServerWaitingTime = 0x4c8; // float
		constexpr auto bCraftServerWaiting = 0x4cc; // bool
	}

	namespace n_UUW-Inventory_Background_C {
		constexpr auto Image_112 = 0x248; // UImage*
	}

	namespace n_UProceduralFoliageTile {
		constexpr auto FoliageSpawner = 0x28; // UProceduralFoliageSpawner*
		constexpr auto InstancesArray = 0xd0; // TArray<FProceduralFoliageInstance>
	}

	namespace n_UMeshComponent {
		constexpr auto MipStreamingScale = 0x4b0; // float
		constexpr auto OverrideMaterials = 0x4b8; // TArray<UMaterialInterface*>
		constexpr auto bEnableMaterialParameterCaching = 0x4d8; // char : 1
	}

	namespace n_UParticleModuleTrailSource {
		constexpr auto SourceMethod = 0x30; // ETrail2SourceMethod
		constexpr auto SourceName = 0x34; // FName
		constexpr auto SourceStrength = 0x40; // FRawDistributionFloat
		constexpr auto bLockSourceStength = 0x70; // char : 1
		constexpr auto SourceOffsetCount = 0x74; // int32_t
		constexpr auto SourceOffsetDefaults = 0x78; // TArray<FVector>
		constexpr auto SelectionMethod = 0x88; // EParticleSourceSelectionMethod
		constexpr auto bInheritRotation = 0x8c; // char : 1
	}

	namespace n_APaperTerrainActor {
		constexpr auto DummyRoot = 0x318; // USceneComponent*
		constexpr auto SplineComponent = 0x320; // UPaperTerrainSplineComponent*
		constexpr auto RenderComponent = 0x328; // UPaperTerrainComponent*
	}

	namespace n_UAnimSharingInstance {
		constexpr auto RegisteredActors = 0x28; // TArray<AActor*>
		constexpr auto StateProcessor = 0xa8; // UAnimationSharingStateProcessor*
		constexpr auto UsedAnimationSequences = 0xe8; // TArray<UAnimSequence*>
		constexpr auto StateEnum = 0x108; // UEnum*
		constexpr auto SharingActor = 0x110; // AActor*
	}

	namespace n_AOculusMR_BoundaryActor {
		constexpr auto BoundaryMeshComponent = 0x318; // UOculusMR_BoundaryMeshComponent*
	}

	namespace n_ULuminApplicationLifecycleComponent {
		constexpr auto DeviceHasReactivatedDelegate = 0x140; // FMulticastInlineDelegate
		constexpr auto DeviceWillEnterRealityModeDelegate = 0x150; // FMulticastInlineDelegate
		constexpr auto DeviceWillGoInStandbyDelegate = 0x160; // FMulticastInlineDelegate
		constexpr auto FocusLostDelegate = 0x170; // FMulticastInlineDelegate
		constexpr auto FocusGainedDelegate = 0x180; // FMulticastInlineDelegate
	}

	namespace n_UPlayerInput {
		constexpr auto DebugExecBindings = 0x120; // TArray<FKeyBind>
		constexpr auto InvertedAxis = 0x160; // TArray<FName>
	}

	namespace n_UInDoorVolumeComponent {
		constexpr auto AdjustmentTargets = 0x4d8; // char
	}

	namespace n_UReplayEventBorder {
		constexpr auto OnMouseEnterEvent = 0x270; // FDelegate
	}

	namespace n_UMaterialExpressionSquareRoot {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UCrowdFollowingComponent {
		constexpr auto CharacterMovement = 0x260; // UCharacterMovementComponent*
		constexpr auto CrowdAgentMoveDirection = 0x268; // FVector
	}

	namespace n_ABravoHotelRemoteController {
		constexpr auto ActiveAnim = 0x1bf0; // FAnimSlot
		constexpr auto ActiveSound = 0x1c00; // UAkAudioEvent*
		constexpr auto RemoteControlState = 0x1c08; // ERemoteControlState
		constexpr auto SwitchOnSimulation = 0x1c0c; // int32_t
	}

	namespace n_UMRMeshComponent {
		constexpr auto Material = 0x4b8; // UMaterialInterface*
		constexpr auto bCreateMeshProxySections = 0x4c0; // bool
		constexpr auto bUpdateNavMeshOnMeshUpdate = 0x4c1; // bool
		constexpr auto bNeverCreateCollisionMesh = 0x4c2; // bool
		constexpr auto CachedBodySetup = 0x4c8; // UBodySetup*
		constexpr auto BodySetups = 0x4d0; // TArray<UBodySetup*>
		constexpr auto WireframeMaterial = 0x4e0; // UMaterialInterface*
	}

	namespace n_UBravoHotelPopupManager {
		constexpr auto WidgetLayer = 0x30; // TArray<UBravoHotelLayerBase*>
		constexpr auto NetworkDelayPopupWidgetRef = 0x40; // UUserWidget*
	}

	namespace n_UUW-HittedDamageWidget_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto FadeOut = 0x250; // UWidgetAnimation*
		constexpr auto HitImage = 0x258; // UImage*
		constexpr auto SizeBox_1 = 0x260; // USizeBox*
		constexpr auto InstigatorLocation = 0x268; // FVector
		constexpr auto InstigatorCharacter = 0x278; // ABravoHotelCharacter*
	}

	namespace n_UUW-ItemDropPopup_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto BlockMouse = 0x250; // UButton*
		constexpr auto Button_Accept = 0x258; // UButton*
		constexpr auto Button_Cancel = 0x260; // UButton*
		constexpr auto Button_Close = 0x268; // UButton*
		constexpr auto Button_Max = 0x270; // UButton*
		constexpr auto Button_Min = 0x278; // UButton*
		constexpr auto Image_9 = 0x280; // UImage*
		constexpr auto Slider_137 = 0x288; // USlider*
		constexpr auto TextBlock_Accept = 0x290; // UTextBlock*
		constexpr auto TextBlock_MaxCount = 0x298; // UTextBlock*
		constexpr auto TextBlock_MinCount = 0x2a0; // UTextBlock*
		constexpr auto TextBlock_Title = 0x2a8; // UTextBlock*
		constexpr auto TextBox_DropCount = 0x2b0; // UEditableTextBox*
		constexpr auto CurrentCount = 0x2b8; // int32_t
		constexpr auto MaxCount = 0x2bc; // int32_t
		constexpr auto LastEnteredText = 0x2c0; // FText
		constexpr auto ItemInfo = 0x2d8; // FInventoryItemInfo
		constexpr auto ItemDetailInfo = 0x370; // FInventoryItemDetailInfo
		constexpr auto PickupRef = 0x800; // ABravoHotelPickup*
		constexpr auto DropBoxRef = 0x808; // ABravoHotelDropBoxActor*
		constexpr auto InventoryWidget = 0x810; // UUW-InventoryWidget_C*
		constexpr auto bClosing = 0x818; // bool
		constexpr auto MaterialSlot = 0x820; // UUW-Inventory_MaterialSlot_C*
	}

	namespace n_USourceEffectBitCrusherPreset {
		constexpr auto Settings = 0x70; // FSourceEffectBitCrusherSettings
	}

	namespace n_UAkAndroidInitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettingsWithSampleRate
		constexpr auto CommunicationSettings = 0x90; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xb8; // FAkAndroidAdvancedInitializationSettings
	}

	namespace n_UTouchInterface {
		constexpr auto Controls = 0x28; // TArray<FTouchInputControl>
		constexpr auto ActiveOpacity = 0x38; // float
		constexpr auto InactiveOpacity = 0x3c; // float
		constexpr auto TimeUntilDeactive = 0x40; // float
		constexpr auto TimeUntilReset = 0x44; // float
		constexpr auto ActivationDelay = 0x48; // float
		constexpr auto bPreventRecenter = 0x4c; // bool
		constexpr auto StartupDelay = 0x50; // float
	}

	namespace n_ABravoHotelLadder {
		constexpr auto RootScene = 0x318; // USceneComponent*
		constexpr auto InteractiveCheckBox = 0x320; // UBoxComponent*
		constexpr auto UpStart = 0x328; // USceneComponent*
		constexpr auto UpEnd = 0x330; // USceneComponent*
		constexpr auto DownStart = 0x338; // USceneComponent*
		constexpr auto DownEnd = 0x340; // USceneComponent*
		constexpr auto LadderPoint = 0x348; // UArrowComponent*
		constexpr auto StepMinCount = 0x350; // int32_t
		constexpr auto StepCount = 0x354; // int32_t
		constexpr auto StepHeight = 0x358; // float
		constexpr auto StepHalfWidth = 0x35c; // float
		constexpr auto StepWidthScale = 0x360; // float
		constexpr auto StepWidthMargin = 0x364; // float
		constexpr auto StepMesh = 0x368; // UStaticMesh*
		constexpr auto OnlySnapToCenter = 0x370; // bool
		constexpr auto TestLadderHiddenInGame = 0x371; // bool
		constexpr auto DebugMode = 0x372; // bool
		constexpr auto AvailableDistanceAtTop = 0x374; // float
		constexpr auto AvailableDistanceAtBottom = 0x378; // float
		constexpr auto AvailableDistanceInAir = 0x37c; // float
		constexpr auto AvailableMinYawAtTop = 0x380; // float
		constexpr auto AvailableMaxYawAtTop = 0x384; // float
		constexpr auto AvailableMinYawAtBottom = 0x388; // float
		constexpr auto AvailableMaxYawAtBottom = 0x38c; // float
		constexpr auto BottomAdjustedHeight = 0x390; // float
		constexpr auto TopRelativeX = 0x394; // float
		constexpr auto BottomRelativeX = 0x398; // float
		constexpr auto IsTopOccupied = 0x39c; // bool
		constexpr auto IsBottomOccupied = 0x39d; // bool
		constexpr auto UsingPlayers = 0x3b8; // TArray<ABravoHotelCharacter*>
	}

	namespace n_UWrapBoxSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto bFillEmptySpace = 0x48; // bool
		constexpr auto FillSpanWhenLessThan = 0x4c; // float
		constexpr auto HorizontalAlignment = 0x50; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x51; // EVerticalAlignment
	}

	namespace n_UUW-ImageText_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto WrapBox_Main = 0x250; // UWrapBox*
		constexpr auto DefaultTextStyle = 0x258; // FTextBlockStyle
		constexpr auto TextString = 0x4c0; // FText
		constexpr auto Game Settings = 0x4d8; // UBP_GameSettings_C*
		constexpr auto HorizontalAlignment = 0x4e0; // EHorizontalAlignment
		constexpr auto KeyImageScale = 0x4e4; // float
	}

	namespace n_UTextBlockWidgetStyle {
		constexpr auto TextBlockStyle = 0x30; // FTextBlockStyle
	}

	namespace n_UAnimNotify_PlayMontageNotify {
		constexpr auto NotifyName = 0x38; // FName
	}

	namespace n_UStreamMediaSource {
		constexpr auto StreamUrl = 0x88; // FString
	}

	namespace n_UShapeComponent {
		constexpr auto ShapeBodySetup = 0x4b0; // UBodySetup*
		constexpr auto AreaClass = 0x4b8; // UNavAreaBase*
		constexpr auto ShapeColor = 0x4c0; // FColor
		constexpr auto bDrawOnlyIfSelected = 0x4c4; // char : 1
		constexpr auto bShouldCollideWhenPlacing = 0x4c4; // char : 1
		constexpr auto bDynamicObstacle = 0x4c4; // char : 1
	}

	namespace n_UMaterialInterface {
		constexpr auto SubsurfaceProfile = 0x38; // USubsurfaceProfile*
		constexpr auto LightmassSettings = 0x50; // FLightmassMaterialInterfaceSettings
		constexpr auto TextureStreamingData = 0x60; // TArray<FMaterialTextureInfo>
		constexpr auto AssetUserData = 0x70; // TArray<UAssetUserData*>
	}

	namespace n_ASceneCaptureCube {
		constexpr auto CaptureComponentCube = 0x328; // USceneCaptureComponentCube*
	}

	namespace n_UNamedInterfaces {
		constexpr auto NamedInterfaces = 0x28; // TArray<FNamedInterface>
		constexpr auto NamedInterfaceDefs = 0x38; // TArray<FNamedInterfaceDef>
	}

	namespace n_UAkAudioType {
		constexpr auto ShortID = 0x28; // uint32_t
		constexpr auto UserData = 0x30; // TArray<UObject*>
	}

	namespace n_UUW-ArmoryWidget_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Ellipsis_M = 0x250; // UWidgetAnimation*
		constexpr auto CanvasPanel_123 = 0x258; // UCanvasPanel*
		constexpr auto Enhancing = 0x260; // UCanvasPanel*
		constexpr auto Image_305 = 0x268; // UImage*
		constexpr auto Image_841 = 0x270; // UImage*
		constexpr auto InputEventBox = 0x278; // UCanvasPanel*
		constexpr auto Skip = 0x280; // UButton*
		constexpr auto TextBlock_335 = 0x288; // UTextBlock*
		constexpr auto TextBlock_336 = 0x290; // UTextBlock*
		constexpr auto TextBlock_337 = 0x298; // UTextBlock*
		constexpr auto TextBlock_362 = 0x2a0; // UTextBlock*
		constexpr auto TextEnhanceing = 0x2a8; // UTextBlock*
		constexpr auto UW-ArmoryInput = 0x2b0; // UUW-ArmoryInput_C*
		constexpr auto UW-ArmoryResultListWidget = 0x2b8; // UUW-ArmoryResultListWidget_C*
		constexpr auto EnhanceResultTimerHandle = 0x2c0; // FTimerHandle
	}

	namespace n_UClothConfigNv {
		constexpr auto ClothingWindMethod = 0x28; // EClothingWindMethodNv
		constexpr auto VerticalConstraint = 0x2c; // FClothConstraintSetupNv
		constexpr auto HorizontalConstraint = 0x3c; // FClothConstraintSetupNv
		constexpr auto BendConstraint = 0x4c; // FClothConstraintSetupNv
		constexpr auto ShearConstraint = 0x5c; // FClothConstraintSetupNv
		constexpr auto SelfCollisionRadius = 0x6c; // float
		constexpr auto SelfCollisionStiffness = 0x70; // float
		constexpr auto SelfCollisionCullScale = 0x74; // float
		constexpr auto Damping = 0x78; // FVector
		constexpr auto Friction = 0x84; // float
		constexpr auto WindDragCoefficient = 0x88; // float
		constexpr auto WindLiftCoefficient = 0x8c; // float
		constexpr auto LinearDrag = 0x90; // FVector
		constexpr auto AngularDrag = 0x9c; // FVector
		constexpr auto LinearInertiaScale = 0xa8; // FVector
		constexpr auto AngularInertiaScale = 0xb4; // FVector
		constexpr auto CentrifugalInertiaScale = 0xc0; // FVector
		constexpr auto SolverFrequency = 0xcc; // float
		constexpr auto StiffnessFrequency = 0xd0; // float
		constexpr auto GravityScale = 0xd4; // float
		constexpr auto GravityOverride = 0xd8; // FVector
		constexpr auto bUseGravityOverride = 0xe4; // bool
		constexpr auto TetherStiffness = 0xe8; // float
		constexpr auto TetherLimit = 0xec; // float
		constexpr auto CollisionThickness = 0xf0; // float
		constexpr auto AnimDriveSpringStiffness = 0xf4; // float
		constexpr auto AnimDriveDamperStiffness = 0xf8; // float
		constexpr auto WindMethod = 0xfc; // EClothingWindMethod_Legacy
		constexpr auto VerticalConstraintConfig = 0x100; // FClothConstraintSetup_Legacy
		constexpr auto HorizontalConstraintConfig = 0x110; // FClothConstraintSetup_Legacy
		constexpr auto BendConstraintConfig = 0x120; // FClothConstraintSetup_Legacy
		constexpr auto ShearConstraintConfig = 0x130; // FClothConstraintSetup_Legacy
	}

	namespace n_UARTexture {
		constexpr auto TextureType = 0xb8; // EARTextureType
		constexpr auto Timestamp = 0xbc; // float
		constexpr auto ExternalTextureGuid = 0xc0; // FGuid
		constexpr auto Size = 0xd0; // FVector2D
	}

	namespace n_ACullDistanceVolume {
		constexpr auto CullDistances = 0x350; // TArray<FCullDistanceSizePair>
		constexpr auto bEnabled = 0x360; // char : 1
	}

	namespace n_UCurveFloat {
		constexpr auto FloatCurve = 0x30; // FRichCurve
		constexpr auto bIsEventCurve = 0xb0; // bool
	}

	namespace n_USourceEffectStereoDelayPreset {
		constexpr auto Settings = 0x7c; // FSourceEffectStereoDelaySettings
	}

	namespace n_ABravoHotelSkillTargetingBombing {
		constexpr auto BombingSound = 0x338; // UAkAudioEvent*
	}

	namespace n_UDestroySessionCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UBHBCamouflage {
		constexpr auto BuffMutableString = 0x2b8; // FString
	}

	namespace n_USlateWidgetStyleAsset {
		constexpr auto CustomStyle = 0x28; // USlateWidgetStyleContainerBase*
	}

	namespace n_UOverlaySlot {
		constexpr auto Padding = 0x40; // FMargin
		constexpr auto HorizontalAlignment = 0x50; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x51; // EVerticalAlignment
	}

	namespace n_UCoherentUIGTAudioWrapper {
		constexpr auto Owner = 0x28; // UObject*
		constexpr auto Sounds = 0x30; // TMap<int32_t, FCoherentSound>
	}

	namespace n_ULandscapeHeightfieldCollisionComponent {
		constexpr auto ComponentLayerInfos = 0x4b0; // TArray<ULandscapeLayerInfoObject*>
		constexpr auto SectionBaseX = 0x4c0; // int32_t
		constexpr auto SectionBaseY = 0x4c4; // int32_t
		constexpr auto CollisionSizeQuads = 0x4c8; // int32_t
		constexpr auto CollisionScale = 0x4cc; // float
		constexpr auto SimpleCollisionSizeQuads = 0x4d0; // int32_t
		constexpr auto CollisionQuadFlags = 0x4d8; // TArray<char>
		constexpr auto HeightfieldGuid = 0x4e8; // FGuid
		constexpr auto CachedLocalBox = 0x4f8; // FBox
		constexpr auto RenderComponent = 0x514; // LazyObjectProperty
		constexpr auto CookedPhysicalMaterials = 0x540; // TArray<UPhysicalMaterial*>
	}

	namespace n_UInterpGroup {
		constexpr auto InterpTracks = 0x30; // TArray<UInterpTrack*>
		constexpr auto GroupName = 0x40; // FName
		constexpr auto GroupColor = 0x48; // FColor
		constexpr auto bCollapsed = 0x4c; // char : 1
		constexpr auto bVisible = 0x4c; // char : 1
		constexpr auto bIsFolder = 0x4c; // char : 1
		constexpr auto bIsParented = 0x4c; // char : 1
		constexpr auto bIsSelected = 0x4c; // char : 1
	}

	namespace n_UBTTask_PlayAnimation {
		constexpr auto AnimationToPlay = 0x70; // UAnimationAsset*
		constexpr auto bLooping = 0x78; // char : 1
		constexpr auto bNonBlocking = 0x78; // char : 1
		constexpr auto MyOwnerComp = 0x80; // UBehaviorTreeComponent*
		constexpr auto CachedSkelMesh = 0x88; // USkeletalMeshComponent*
	}

	namespace n_UBoneMaskFilter {
		constexpr auto BlendPoses = 0x28; // TArray<FInputBlendPose>
	}

	namespace n_UBravoHotelVoiceComponent {
		constexpr auto Table = 0x1a0; // UDataTable*
	}

	namespace n_UPanelWidget {
		constexpr auto Slots = 0x108; // TArray<UPanelSlot*>
	}

	namespace n_UBravoHotelCoherentObject {
		constexpr auto CoherentWidget = 0x28; // UCoherentUIGTWidget*
	}

	namespace n_UUserDefinedImageCaptureProtocol {
		constexpr auto Format = 0xd8; // EDesiredImageFormat
		constexpr auto bEnableCompression = 0xd9; // bool
		constexpr auto CompressionQuality = 0xdc; // int32_t
	}

	namespace n_UUW-Lobby_Craft_Recipe_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Canvas_Recipe1 = 0x250; // UCanvasPanel*
		constexpr auto Canvas_Recipe2 = 0x258; // UCanvasPanel*
		constexpr auto UW-Lobby_Craft_Recipe_Weapon = 0x260; // UUW-Lobby_Craft_Recipe_Weapon_C*
		constexpr auto UW-Lobby_Weapon_Recipe_Item_2 = 0x268; // UUW-Lobby_Craft_Recipe_Item_C*
		constexpr auto UW-Lobby_Weapon_Recipe_Item_3 = 0x270; // UUW-Lobby_Craft_Recipe_Item_C*
		constexpr auto UW-Lobby_Weapon_Recipe_Item_4 = 0x278; // UUW-Lobby_Craft_Recipe_Item_C*
		constexpr auto UW-Lobby_Weapon_Recipe_Item_5 = 0x280; // UUW-Lobby_Craft_Recipe_Item_C*
		constexpr auto UW-Lobby_Weapon_Recipe_Item_6 = 0x288; // UUW-Lobby_Craft_Recipe_Item_C*
		constexpr auto UW-Lobby_Weapon_Recipe_Item_7 = 0x290; // UUW-Lobby_Craft_Recipe_Item_C*
		constexpr auto UW-Lobby_Weapon_Recipe_Item_8 = 0x298; // UUW-Lobby_Craft_Recipe_Item_C*
		constexpr auto UW-Lobby_Weapon_Recipe_Item_9 = 0x2a0; // UUW-Lobby_Craft_Recipe_Item_C*
		constexpr auto UW-Lobby_Weapon_Recipe_Item_10 = 0x2a8; // UUW-Lobby_Craft_Recipe_Item_C*
		constexpr auto UW-Lobby_Weapon_Recipe_Item_11 = 0x2b0; // UUW-Lobby_Craft_Recipe_Item_C*
		constexpr auto WidgetSwitcher_68 = 0x2b8; // UWidgetSwitcher*
		constexpr auto Recipe_ItemArray = 0x2c0; // TArray<UUW-Lobby_Craft_Recipe_Item_C*>
		constexpr auto Recipe_ItemArray2 = 0x2d0; // TArray<UUW-Lobby_Craft_Recipe_Item_C*>
		constexpr auto HasWeapon = 0x2e0; // bool
		constexpr auto ArmoryInputRef = 0x2e8; // UUW-ArmoryInput_C*
		constexpr auto CurrentOpacity = 0x2f0; // float
	}

	namespace n_UBTService_RunEQS {
		constexpr auto EQSRequest = 0x98; // FEQSParametrizedQueryExecutionRequest
	}

	namespace n_UNiagaraSystem {
		constexpr auto bDumpDebugSystemInfo = 0x31; // bool
		constexpr auto bDumpDebugEmitterInfo = 0x32; // bool
		constexpr auto bFixedBounds = 0x34; // char : 1
		constexpr auto EffectType = 0x38; // UNiagaraEffectType*
		constexpr auto bOverrideScalabilitySettings = 0x40; // bool
		constexpr auto ScalabilityOverrides = 0x48; // TArray<FNiagaraSystemScalabilityOverride>
		constexpr auto SystemScalabilityOverrides = 0x58; // FNiagaraSystemScalabilityOverrides
		constexpr auto EmitterHandles = 0x68; // TArray<FNiagaraEmitterHandle>
		constexpr auto ParameterCollectionOverrides = 0x78; // TArray<UNiagaraParameterCollectionInstance*>
		constexpr auto SystemSpawnScript = 0x88; // UNiagaraScript*
		constexpr auto SystemUpdateScript = 0x90; // UNiagaraScript*
		constexpr auto SystemCompiledData = 0xa8; // FNiagaraSystemCompiledData
		constexpr auto ExposedParameters = 0x300; // FNiagaraUserRedirectionParameterStore
		constexpr auto FixedBounds = 0x408; // FBox
		constexpr auto bAutoDeactivate = 0x424; // bool
		constexpr auto WarmupTime = 0x428; // float
		constexpr auto WarmupTickCount = 0x42c; // int32_t
		constexpr auto WarmupTickDelta = 0x430; // float
		constexpr auto bHasSystemScriptDIsWithPerInstanceData = 0x434; // bool
		constexpr auto UserDINamesReadInSystemScripts = 0x438; // TArray<FName>
	}

	namespace n_UMaterialExpressionLinearInterpolate {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ALPHA = 0x68; // FExpressionInput
		constexpr auto ConstA = 0x7c; // float
		constexpr auto ConstB = 0x80; // float
		constexpr auto ConstAlpha = 0x84; // float
	}

	namespace n_UWBP-HeartBeatSensorEffect_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto HeartBeat = 0x250; // UWidgetAnimation*
		constexpr auto FadeOut = 0x258; // UWidgetAnimation*
		constexpr auto FadeIn = 0x260; // UWidgetAnimation*
		constexpr auto Image = 0x268; // UImage*
		constexpr auto Image_95 = 0x270; // UImage*
		constexpr auto Image_140 = 0x278; // UImage*
		constexpr auto NewVar_1 = 0x280; // UUMGSequencePlayer*
		constexpr auto IsFadeInOutEvent = 0x288; // bool
		constexpr auto CurrentFade = 0x28c; // float
	}

	namespace n_UFoliageType {
		constexpr auto UpdateGuid = 0x28; // FGuid
		constexpr auto Density = 0x38; // float
		constexpr auto DensityAdjustmentFactor = 0x3c; // float
		constexpr auto Radius = 0x40; // float
		constexpr auto bSingleInstanceModeOverrideRadius = 0x44; // bool
		constexpr auto SingleInstanceModeRadius = 0x48; // float
		constexpr auto Scaling = 0x4c; // EFoliageScaling
		constexpr auto ScaleX = 0x50; // FFloatInterval
		constexpr auto ScaleY = 0x58; // FFloatInterval
		constexpr auto ScaleZ = 0x60; // FFloatInterval
		constexpr auto VertexColorMaskByChannel = 0x68; // FFoliageVertexColorChannelMask [0x4]
		constexpr auto VertexColorMask = 0x98; // FoliageVertexColorMask
		constexpr auto VertexColorMaskThreshold = 0x9c; // float
		constexpr auto VertexColorMaskInvert = 0xa0; // char : 1
		constexpr auto ZOffset = 0xa4; // FFloatInterval
		constexpr auto AlignToNormal = 0xac; // char : 1
		constexpr auto AlignMaxAngle = 0xb0; // float
		constexpr auto RandomYaw = 0xb4; // char : 1
		constexpr auto RandomPitchAngle = 0xb8; // float
		constexpr auto GroundSlopeAngle = 0xbc; // FFloatInterval
		constexpr auto Height = 0xc4; // FFloatInterval
		constexpr auto LandscapeLayers = 0xd0; // TArray<FName>
		constexpr auto MinimumLayerWeight = 0xe0; // float
		constexpr auto ExclusionLandscapeLayers = 0xe8; // TArray<FName>
		constexpr auto MinimumExclusionLayerWeight = 0xf8; // float
		constexpr auto LandscapeLayer = 0xfc; // FName
		constexpr auto CollisionWithWorld = 0x104; // char : 1
		constexpr auto CollisionScale = 0x108; // FVector
		constexpr auto MeshBounds = 0x114; // FBoxSphereBounds
		constexpr auto LowBoundOriginRadius = 0x130; // FVector
		constexpr auto Mobility = 0x13c; // EComponentMobility
		constexpr auto CullDistancePreset = 0x13d; // ECullDistancePreset
		constexpr auto bOverrideCullDistance = 0x13e; // bool
		constexpr auto CullDistance = 0x140; // FInt32Interval
		constexpr auto MinScreenSizeScale = 0x148; // float
		constexpr auto bEnableStaticLighting = 0x14c; // char : 1
		constexpr auto CastShadow = 0x14c; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x14c; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x14c; // char : 1
		constexpr auto bCastDynamicShadow = 0x14c; // char : 1
		constexpr auto bCastStaticShadow = 0x14c; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x14c; // char : 1
		constexpr auto bReceivesDecals = 0x14c; // char : 1
		constexpr auto bOverrideLightMapRes = 0x14d; // char : 1
		constexpr auto OverriddenLightMapRes = 0x150; // int32_t
		constexpr auto LightmapType = 0x154; // ELightmapType
		constexpr auto bUseAsOccluder = 0x158; // char : 1
		constexpr auto BodyInstance = 0x160; // FBodyInstance
		constexpr auto CustomNavigableGeometry = 0x2f0; // EHasCustomNavigableGeometry
		constexpr auto InstanceBodiesSplitRatio = 0x2f1; // char
		constexpr auto LightingChannels = 0x2f2; // FLightingChannels
		constexpr auto bRenderCustomDepth = 0x2f4; // char : 1
		constexpr auto CustomDepthStencilValue = 0x2f8; // int32_t
		constexpr auto TranslucencySortPriority = 0x2fc; // int32_t
		constexpr auto CollisionRadius = 0x300; // float
		constexpr auto ShadeRadius = 0x304; // float
		constexpr auto NumSteps = 0x308; // int32_t
		constexpr auto InitialSeedDensity = 0x30c; // float
		constexpr auto AverageSpreadDistance = 0x310; // float
		constexpr auto SpreadVariance = 0x314; // float
		constexpr auto SeedsPerStep = 0x318; // int32_t
		constexpr auto DistributionSeed = 0x31c; // int32_t
		constexpr auto MaxInitialSeedOffset = 0x320; // float
		constexpr auto bCanGrowInShade = 0x324; // bool
		constexpr auto bSpawnsInShade = 0x325; // bool
		constexpr auto MaxInitialAge = 0x328; // float
		constexpr auto MaxAge = 0x32c; // float
		constexpr auto OverlapPriority = 0x330; // float
		constexpr auto ProceduralScale = 0x334; // FFloatInterval
		constexpr auto ScaleCurve = 0x340; // FRuntimeFloatCurve
		constexpr auto ChangeCount = 0x3c8; // int32_t
		constexpr auto ReapplyDensity = 0x3cc; // char : 1
		constexpr auto ReapplyRadius = 0x3cc; // char : 1
		constexpr auto ReapplyAlignToNormal = 0x3cc; // char : 1
		constexpr auto ReapplyRandomYaw = 0x3cc; // char : 1
		constexpr auto ReapplyScaling = 0x3cc; // char : 1
		constexpr auto ReapplyScaleX = 0x3cc; // char : 1
		constexpr auto ReapplyScaleY = 0x3cc; // char : 1
		constexpr auto ReapplyScaleZ = 0x3cc; // char : 1
		constexpr auto ReapplyRandomPitchAngle = 0x3cd; // char : 1
		constexpr auto ReapplyGroundSlope = 0x3cd; // char : 1
		constexpr auto ReapplyHeight = 0x3cd; // char : 1
		constexpr auto ReapplyLandscapeLayers = 0x3cd; // char : 1
		constexpr auto ReapplyZOffset = 0x3cd; // char : 1
		constexpr auto ReapplyCollisionWithWorld = 0x3cd; // char : 1
		constexpr auto ReapplyVertexColorMask = 0x3cd; // char : 1
		constexpr auto bEnableDensityScaling = 0x3cd; // char : 1
		constexpr auto RuntimeVirtualTextures = 0x3d0; // TArray<URuntimeVirtualTexture*>
		constexpr auto VirtualTextureCullMips = 0x3e0; // int32_t
		constexpr auto VirtualTextureRenderPassType = 0x3e4; // ERuntimeVirtualTextureMainPassType
	}

	namespace n_UAkCallbackInfo {
		constexpr auto AkComponent = 0x28; // UAkComponent*
	}

	namespace n_UBTTask_RotateToFaceBBEntry {
		constexpr auto Precision = 0x98; // float
	}

	namespace n_UVariantObjectBinding {
		constexpr auto CachedActorLabel = 0x28; // FString
		constexpr auto ObjectPtr = 0x38; // FSoftObjectPath
		constexpr auto LazyObjectPtr = 0x50; // LazyObjectProperty
		constexpr auto CapturedProperties = 0x70; // TArray<UPropertyValue*>
		constexpr auto FunctionCallers = 0x80; // TArray<FFunctionCaller>
	}

	namespace n_UEditableGameplayTagQueryExpression_AllTagsMatch {
		constexpr auto Tags = 0x28; // FGameplayTagContainer
	}

	namespace n_UAkMusicSyncCallbackInfo {
		constexpr auto PlayingID = 0x30; // int32_t
		constexpr auto SegmentInfo = 0x34; // FAkSegmentInfo
		constexpr auto MusicSyncType = 0x58; // EAkCallbackType
		constexpr auto UserCueName = 0x60; // FString
	}

	namespace n_UMovieSceneCameraShakeSection {
		constexpr auto ShakeData = 0xe0; // FMovieSceneCameraShakeSectionData
		constexpr auto ShakeClass = 0x100; // UCameraShake*
		constexpr auto PlayScale = 0x108; // float
		constexpr auto PlaySpace = 0x10c; // ECameraAnimPlaySpace
		constexpr auto UserDefinedPlaySpace = 0x110; // FRotator
	}

	namespace n_UUW-PerkLevelUp_02_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Level_Up_New = 0x250; // UWidgetAnimation*
		constexpr auto VSkill_Motion = 0x258; // UWidgetAnimation*
		constexpr auto FinalitySkill_Motion = 0x260; // UWidgetAnimation*
		constexpr auto LEVEL_UP = 0x268; // UWidgetAnimation*
		constexpr auto CanvasPanel_294 = 0x270; // UCanvasPanel*
		constexpr auto FSkill_Info = 0x278; // UTextBlock*
		constexpr auto FSkill_Title = 0x280; // UTextBlock*
		constexpr auto HorizontalBox_290 = 0x288; // UHorizontalBox*
		constexpr auto Image_1 = 0x290; // UImage*
		constexpr auto Image_2 = 0x298; // UImage*
		constexpr auto Image_4 = 0x2a0; // UImage*
		constexpr auto Image_5 = 0x2a8; // UImage*
		constexpr auto Image_6 = 0x2b0; // UImage*
		constexpr auto Image_9 = 0x2b8; // UImage*
		constexpr auto Image_10 = 0x2c0; // UImage*
		constexpr auto Image_245 = 0x2c8; // UImage*
		constexpr auto Image_247 = 0x2d0; // UImage*
		constexpr auto Image_413 = 0x2d8; // UImage*
		constexpr auto Image_458 = 0x2e0; // UImage*
		constexpr auto Image_602 = 0x2e8; // UImage*
		constexpr auto Image_UltimateGetMat = 0x2f0; // UImage*
		constexpr auto IMG_FinalitySkill = 0x2f8; // UImage*
		constexpr auto Img_UltimateMaterial = 0x300; // UImage*
		constexpr auto Light = 0x308; // UImage*
		constexpr auto T_Desc = 0x310; // UTextBlock*
		constexpr auto T_Level = 0x318; // UTextBlock*
		constexpr auto T_PerkName = 0x320; // UTextBlock*
		constexpr auto TextBlock_LevelUpNewText = 0x328; // UTextBlock*
		constexpr auto UW-Inventory_PerkSlot_LevelUp = 0x330; // UUW-Inventory_PerkSlot_C*
		constexpr auto UW-Inventory_PerkSlot_VSkill = 0x338; // UUW-Inventory_PerkSlot_C*
		constexpr auto VSkill_Info = 0x340; // UTextBlock*
		constexpr auto VSkill_Titile = 0x348; // UTextBlock*
		constexpr auto VSkillThumbStroke_02 = 0x350; // UImage*
		constexpr auto WidgetSwitcher_LevelUpInfo = 0x358; // UWidgetSwitcher*
		constexpr auto Handle_LevelUpEffect = 0x360; // FTimerHandle
		constexpr auto EffectDelay = 0x368; // float
		constexpr auto PerkInfoQue = 0x370; // TArray<FPerkUIInfo>
		constexpr auto CurrentPerkInfo = 0x380; // FPerkUIInfo
		constexpr auto PerkLevelUpInfo = 0x3b0; // TArray<BP-PerkLevelUpInfoEnum>
		constexpr auto PerkLevelUpData = 0x3c0; // FPerkLevelUpData
		constexpr auto CurrentPerkData = 0x538; // FPerkData
		constexpr auto CurrentLevel = 0x618; // int32_t
		constexpr auto IsAlreadyUnlockedUltimate = 0x61c; // bool
		constexpr auto CurrentLevelUpInfo = 0x61d; // BP-PerkLevelUpInfoEnum
		constexpr auto CurrentLevelQue = 0x620; // TArray<int32_t>
		constexpr auto CurrentUltimateMaterialValue = 0x630; // float
		constexpr auto UltimateUpdate = 0x634; // bool
		constexpr auto UltimateMaterialInstance = 0x638; // UMaterialInstanceDynamic*
		constexpr auto UltimateAnimTime = 0x640; // float
		constexpr auto UltimateGetMaterialInstance = 0x648; // UMaterialInstanceDynamic*
	}

	namespace n_UUW-Route_C {
		constexpr auto UberGraphFrame = 0x2b0; // FPointerToUberGraphFrame
		constexpr auto Propeller1 = 0x2b8; // UWidgetAnimation*
		constexpr auto Aircraft = 0x2c0; // UCanvasPanel*
		constexpr auto Image_156 = 0x2c8; // UImage*
		constexpr auto Image_236 = 0x2d0; // UImage*
		constexpr auto Image_237 = 0x2d8; // UImage*
		constexpr auto MapCompRef = 0x2e0; // UUW-MapComp_C*
	}

	namespace n_UHierarchicalInstancedStaticMeshComponent {
		constexpr auto SortedInstances = 0x620; // TArray<int32_t>
		constexpr auto NumBuiltInstances = 0x630; // int32_t
		constexpr auto BuiltInstanceBounds = 0x638; // FBox
		constexpr auto UnbuiltInstanceBounds = 0x654; // FBox
		constexpr auto UnbuiltInstanceBoundsList = 0x670; // TArray<FBox>
		constexpr auto bEnableDensityScaling = 0x680; // char : 1
		constexpr auto OcclusionLayerNumNodes = 0x688; // int32_t
		constexpr auto CacheMeshExtendedBounds = 0x68c; // FBoxSphereBounds
		constexpr auto bDisableCollision = 0x6a8; // bool
		constexpr auto InstanceCountToRender = 0x6ac; // int32_t
	}

	namespace n_UBravoHotelItemSpawnDebugWidget {
		constexpr auto WorldCenter = 0x248; // FVector
		constexpr auto WorldSize = 0x254; // FVector2D
		constexpr auto BaseMapSize = 0x25c; // FVector2D
		constexpr auto RecordInfo = 0x268; // FDebugRecordInfo
		constexpr auto ItemDataInfoData = 0x3f0; // FItemDataInfo
		constexpr auto SlotList = 0x4d8; // TArray<UUserWidget*>
		constexpr auto BuildingData = 0x4e8; // TMap<FString, FBuildingData>
		constexpr auto ItemDivisionCnt = 0x538; // TMap<FString, int32_t>
		constexpr auto ItemSpawnCnt = 0x588; // TMap<FString, int32_t>
		constexpr auto ItemRateAddCnt = 0x5d8; // TMap<FString, int32_t>
		constexpr auto ItemRateRemoveCnt = 0x628; // TMap<FString, int32_t>
		constexpr auto SelectedBuildingName = 0x678; // FString
		constexpr auto SelectedStandardGroupName = 0x688; // FString
	}

	namespace n_UBravoHotelAttackUserWidget {
		constexpr auto Enemy_Lv_Motion_FadeIn = 0x248; // UWidgetAnimation*
		constexpr auto Enemy_Lv_Motion_FadeOut = 0x250; // UWidgetAnimation*
		constexpr auto TimerHandle_EventRemoveWidget = 0x258; // FTimerHandle
		constexpr auto PawnRef = 0x260; // ABravoHotelCharacter*
		constexpr auto Enemy_Name = 0x268; // UOverlay*
		constexpr auto TextBlock_Level = 0x270; // UTextBlock*
		constexpr auto TextBlock_Level2 = 0x278; // UTextBlock*
		constexpr auto TextBlock_Name = 0x280; // UTextBlock*
		constexpr auto TextBlock_Name2 = 0x288; // UTextBlock*
		constexpr auto Image_Icon = 0x290; // UImage*
		constexpr auto Image_Icon2 = 0x298; // UImage*
	}

	namespace n_UEnvQueryTest_Volume {
		constexpr auto VolumeContext = 0x1f8; // UEnvQueryContext*
		constexpr auto VolumeClass = 0x200; // AVolume*
		constexpr auto bDoComplexVolumeTest = 0x208; // char : 1
	}

	namespace n_UPawnAction {
		constexpr auto ChildAction = 0x28; // UPawnAction*
		constexpr auto ParentAction = 0x30; // UPawnAction*
		constexpr auto OwnerComponent = 0x38; // UPawnActionsComponent*
		constexpr auto Instigator = 0x40; // UObject*
		constexpr auto BrainComp = 0x48; // UBrainComponent*
		constexpr auto bAllowNewSameClassInstance = 0x80; // char : 1
		constexpr auto bReplaceActiveSameClassInstance = 0x80; // char : 1
		constexpr auto bShouldPauseMovement = 0x80; // char : 1
		constexpr auto bAlwaysNotifyOnFinished = 0x80; // char : 1
	}

	namespace n_UMaterialExpressionBlendMaterialAttributes {
		constexpr auto A = 0x40; // FMaterialAttributesInput
		constexpr auto B = 0x58; // FMaterialAttributesInput
		constexpr auto ALPHA = 0x70; // FExpressionInput
		constexpr auto PixelAttributeBlendType = 0x84; // EMaterialAttributeBlend
		constexpr auto VertexAttributeBlendType = 0x85; // EMaterialAttributeBlend
	}

	namespace n_UBP_KeyMapping_C {
		constexpr auto Name = 0x28; // FString
		constexpr auto Scale = 0x38; // float
		constexpr auto Primary Combination = 0x40; // UBP_KeyCombination_C*
		constexpr auto Secondary Combination = 0x48; // UBP_KeyCombination_C*
		constexpr auto Parent Action = 0x50; // UBP_KeyAction_C*
	}

	namespace n_ABravoHotelProjectileBullet {
		constexpr auto BeginOverlapHitResults = 0x4c8; // TArray<FHitResult>
		constexpr auto HitActors = 0x4e0; // TArray<AActor*>
		constexpr auto ImpulsePowerRate = 0x4f0; // float
		constexpr auto ProjectileDamageType = 0x4f8; // UBravoHotelDamageType*
		constexpr auto FlybyAudioEvent = 0x500; // UAkAudioEvent*
		constexpr auto BulletSpawnLocation = 0x508; // FVector
		constexpr auto FlybyTargetActor = 0x518; // AActor*
		constexpr auto bStopUpdateFlyby = 0x520; // bool
		constexpr auto TimerHandle_UpdateFlyby = 0x528; // FTimerHandle
		constexpr auto TargetPawn = 0x538; // ABravoHotelCharacter*
	}

	namespace n_UUniformScalar {
		constexpr auto Magnitude = 0xb0; // float
	}

	namespace n_UParticleModuleAttractorParticle {
		constexpr auto EmitterName = 0x30; // FName
		constexpr auto Range = 0x38; // FRawDistributionFloat
		constexpr auto bStrengthByDistance = 0x68; // char : 1
		constexpr auto Strength = 0x70; // FRawDistributionFloat
		constexpr auto bAffectBaseVelocity = 0xa0; // char : 1
		constexpr auto SelectionMethod = 0xa4; // EAttractorParticleSelectionMethod
		constexpr auto bRenewSource = 0xa8; // char : 1
		constexpr auto bInheritSourceVel = 0xa8; // char : 1
		constexpr auto LastSelIndex = 0xac; // int32_t
	}

	namespace n_UPoseAsset {
		constexpr auto PoseContainer = 0x90; // FPoseDataContainer
		constexpr auto bAdditivePose = 0x120; // bool
		constexpr auto BasePoseIndex = 0x124; // int32_t
		constexpr auto RetargetSource = 0x128; // FName
	}

	namespace n_UBTDecorator_CompareBBEntries {
		constexpr auto Operator = 0x68; // EBlackBoardEntryComparison
		constexpr auto BlackboardKeyA = 0x70; // FBlackboardKeySelector
		constexpr auto BlackboardKeyB = 0x98; // FBlackboardKeySelector
	}

	namespace n_UBlendSpace {
		constexpr auto AxisToScaleAnimation = 0x158; // EBlendSpaceAxis
	}

	namespace n_UMaterialExpressionDivide {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_UNavigationQueryFilter {
		constexpr auto Areas = 0x28; // TArray<FNavigationFilterArea>
		constexpr auto IncludeFlags = 0x38; // FNavigationFilterFlags
		constexpr auto ExcludeFlags = 0x3c; // FNavigationFilterFlags
	}

	namespace n_USplineMeshComponent {
		constexpr auto SplineParams = 0x550; // FSplineMeshParams
		constexpr auto SplineUpDir = 0x5a8; // FVector
		constexpr auto SplineBoundaryMin = 0x5b4; // float
		constexpr auto CachedMeshBodySetupGuid = 0x5b8; // FGuid
		constexpr auto BodySetup = 0x5c8; // UBodySetup*
		constexpr auto SplineBoundaryMax = 0x5d0; // float
		constexpr auto bAllowSplineEditingPerInstance = 0x5d4; // char : 1
		constexpr auto bSmoothInterpRollScale = 0x5d4; // char : 1
		constexpr auto bMeshDirty = 0x5d4; // char : 1
		constexpr auto ForwardAxis = 0x5d5; // ESplineMeshAxis
		constexpr auto VirtualTextureMainPassMaxDrawDistance = 0x5d8; // float
	}

	namespace n_UEditableGameplayTagQueryExpression_AnyExprMatch {
		constexpr auto Expressions = 0x28; // TArray<UEditableGameplayTagQueryExpression*>
	}

	namespace n_USystemTimeTimecodeProvider {
		constexpr auto FrameRate = 0x30; // FFrameRate
		constexpr auto bGenerateFullFrame = 0x38; // bool
		constexpr auto bUseHighPerformanceClock = 0x39; // bool
	}

	namespace n_UBTTask_FinishWithResult {
		constexpr auto Result = 0x70; // EBTNodeResult
	}

	namespace n_UCharacterMovementComponent {
		constexpr auto PostPhysicsTickFunction = 0x148; // FCharacterMovementComponentPostPhysicsTickFunction
		constexpr auto NetworkSimulatedSmoothRotationTime = 0x218; // float
		constexpr auto bImpartBaseAngularVelocity = 0x21c; // char : 1
		constexpr auto ServerLastClientGoodMoveAckTime = 0x220; // float
		constexpr auto bCheatFlying = 0x224; // char : 1
		constexpr auto bProjectNavMeshOnBothWorldChannels = 0x224; // char : 1
		constexpr auto bEnableScopedMovementUpdates = 0x224; // char : 1
		constexpr auto AvoidanceConsiderationRadius = 0x228; // float
		constexpr auto NavWalkingFloorDistTolerance = 0x22c; // float
		constexpr auto bFastAttachedMove = 0x23c; // char : 1
		constexpr auto bNotifyApex = 0x23c; // char : 1
		constexpr auto ListenServerNetworkSimulatedSmoothRotationTime = 0x240; // float
		constexpr auto MaxCustomMovementSpeed = 0x244; // float
		constexpr auto bForceNextFloorCheck = 0x248; // char : 1
		constexpr auto ListenServerNetworkSimulatedSmoothLocationTime = 0x24c; // float
		constexpr auto bRunPhysicsWithNoController = 0x250; // char : 1
		constexpr auto WalkableFloorAngle = 0x254; // float
		constexpr auto Buoyancy = 0x258; // float
		constexpr auto MaxFlySpeed = 0x25c; // float
		constexpr auto bUseRVOAvoidance = 0x260; // char : 1
		constexpr auto bImpartBaseVelocityX = 0x260; // char : 1
		constexpr auto bCanWalkOffLedges = 0x260; // char : 1
		constexpr auto MaxDepenetrationWithGeometryAsProxy = 0x264; // float
		constexpr auto GroundFriction = 0x268; // float
		constexpr auto LastUpdateVelocity = 0x26c; // FVector
		constexpr auto BrakingFriction = 0x278; // float
		constexpr auto MaxOutOfWaterStepHeight = 0x27c; // float
		constexpr auto JumpZVelocity = 0x280; // float
		constexpr auto BrakingSubStepTime = 0x284; // float
		constexpr auto DeferredUpdatedMoveComponent = 0x288; // USceneComponent*
		constexpr auto bUseFlatBaseForFloorChecks = 0x290; // char : 1
		constexpr auto MaxDepenetrationWithPawnAsProxy = 0x294; // float
		constexpr auto bServerAcceptClientAuthoritativePosition = 0x298; // char : 1
		constexpr auto bWasAvoidanceUpdated = 0x2a0; // char : 1
		constexpr auto bWantsToCrouch = 0x2a0; // char : 1
		constexpr auto MaxJumpApexAttemptsPerSimulation = 0x2a4; // int32_t
		constexpr auto bEnableServerDualMoveScopedMovementUpdates = 0x2b8; // char : 1
		constexpr auto CustomMovementMode = 0x2b9; // char
		constexpr auto TouchForceFactor = 0x2bc; // float
		constexpr auto bImpartBaseVelocityY = 0x2c0; // char : 1
		constexpr auto NetworkNoSmoothUpdateDistance = 0x2c4; // float
		constexpr auto BrakingDecelerationFalling = 0x2d4; // float
		constexpr auto MaxSimulationTimeStep = 0x2d8; // float
		constexpr auto GroupsToAvoid = 0x2dc; // FNavAvoidanceMask
		constexpr auto AnalogInputModifier = 0x2e0; // float
		constexpr auto NetworkMinTimeBetweenClientAdjustmentsLargeCorrection = 0x2e4; // float
		constexpr auto MaxStepHeight = 0x2e8; // float
		constexpr auto ServerLastClientAdjustmentTime = 0x2ec; // float
		constexpr auto BlockingHit_SlideAccelerator = 0x2f0; // float
		constexpr auto bProjectNavMeshWalking = 0x2f8; // char : 1
		constexpr auto MaxDepenetrationWithGeometry = 0x2fc; // float
		constexpr auto NavMeshProjectionHeightScaleUp = 0x300; // float
		constexpr auto PushForceFactor = 0x304; // float
		constexpr auto Mass = 0x310; // float
		constexpr auto NetProxyShrinkRadius = 0x314; // float
		constexpr auto FallingLateralFriction = 0x318; // float
		constexpr auto bNetworkUpdateReceived = 0x31c; // char : 1
		constexpr auto MaxWalkSpeedCrouched = 0x320; // float
		constexpr auto RootMotionParams = 0x340; // FRootMotionMovementParams
		constexpr auto MaxSimulationIterations = 0x380; // int32_t
		constexpr auto NavMeshProjectionHeightScaleDown = 0x384; // float
		constexpr auto JumpOffJumpZFactor = 0x390; // float
		constexpr auto CharacterOwner = 0x398; // ACharacter*
		constexpr auto MinTimeBetweenTimeStampResets = 0x3a0; // float
		constexpr auto BrakingDecelerationWalking = 0x3a8; // float
		constexpr auto NetworkMinTimeBetweenClientAckGoodMoves = 0x3ac; // float
		constexpr auto NavMeshProjectionTimer = 0x3b0; // float
		constexpr auto bNetworkSkipProxyPredictionOnNetUpdate = 0x3b4; // char : 1
		constexpr auto bForceMaxAccel = 0x3b4; // char : 1
		constexpr auto MaxSwimSpeed = 0x3b8; // float
		constexpr auto bScalePushForceToVelocity = 0x3bc; // char : 1
		constexpr auto PendingImpulseToApply = 0x3c0; // FVector
		constexpr auto GravityScale = 0x3cc; // float
		constexpr auto bMaintainHorizontalGroundVelocity = 0x3d0; // char : 1
		constexpr auto AnimRootMotionVelocity = 0x3d4; // FVector
		constexpr auto WalkableFloorZ = 0x3e0; // float
		constexpr auto bAlwaysCheckFloor = 0x3e4; // char : 1
		constexpr auto PendingLaunchVelocity = 0x3e8; // FVector
		constexpr auto AvoidanceWeight = 0x3f4; // float
		constexpr auto NetworkMaxSmoothUpdateDistance = 0x3f8; // float
		constexpr auto bMovementInProgress = 0x3fc; // char : 1
		constexpr auto bHasRequestedVelocity = 0x3fc; // char : 1
		constexpr auto Acceleration = 0x400; // FVector
		constexpr auto bImpartBaseVelocityZ = 0x40c; // char : 1
		constexpr auto bIgnoreClientMovementErrorChecksAndCorrection = 0x40c; // char : 1
		constexpr auto PendingForceToApply = 0x410; // FVector
		constexpr auto NetworkLargeClientCorrectionDistance = 0x41c; // float
		constexpr auto GroupsToIgnore = 0x420; // FNavAvoidanceMask
		constexpr auto NetworkSimulatedSmoothLocationTime = 0x424; // float
		constexpr auto PerchAdditionalHeight = 0x428; // float
		constexpr auto BrakingFrictionFactor = 0x42c; // float
		constexpr auto bNetworkAlwaysReplicateTransformUpdateTimestamp = 0x430; // char : 1
		constexpr auto AirControlBoostVelocityThreshold = 0x434; // float
		constexpr auto bOrientRotationToMovement = 0x438; // char : 1
		constexpr auto ServerLastTransformUpdateTimeStamp = 0x43c; // float
		constexpr auto RepulsionForce = 0x4cc; // float
		constexpr auto CurrentRootMotion = 0x4d0; // FRootMotionSourceGroup
		constexpr auto bAllowPhysicsRotationDuringAnimRootMotion = 0x508; // char : 1
		constexpr auto NetworkSmoothingMode = 0x509; // ENetworkSmoothingMode
		constexpr auto BlockingPhysMaterial = 0x510; // UPhysicalMaterial*
		constexpr auto AvoidanceUID = 0x518; // int32_t
		constexpr auto DefaultWaterMovementMode = 0x51c; // EMovementMode
		constexpr auto StandingDownwardForceScale = 0x520; // float
		constexpr auto bShrinkProxyCapsule = 0x524; // char : 1
		constexpr auto JumpOutOfWaterPitch = 0x528; // float
		constexpr auto bCanWalkOffLedgesWhenCrouching = 0x530; // char : 1
		constexpr auto NetProxyShrinkHalfHeight = 0x534; // float
		constexpr auto bPushForceScaledToMass = 0x538; // char : 1
		constexpr auto bUseSeparateBrakingFriction = 0x538; // char : 1
		constexpr auto NavMeshProjectionInterpSpeed = 0x53c; // float
		constexpr auto PushForcePointZOffsetFactor = 0x540; // float
		constexpr auto MaxDepenetrationWithPawn = 0x544; // float
		constexpr auto GroundMovementMode = 0x548; // EMovementMode
		constexpr auto AirControlBoostMultiplier = 0x54c; // float
		constexpr auto NetworkMinTimeBetweenClientAdjustments = 0x550; // float
		constexpr auto MaxWalkSpeed = 0x554; // float
		constexpr auto bIgnoreBaseRotation = 0x558; // char : 1
		constexpr auto MinAnalogWalkSpeed = 0x55c; // float
		constexpr auto OutofWaterZ = 0x560; // float
		constexpr auto AvoidanceGroup = 0x564; // FNavAvoidanceMask
		constexpr auto bPushForceUsingZOffset = 0x568; // char : 1
		constexpr auto bWasSimulatingRootMotion = 0x570; // char : 1
		constexpr auto bDeferUpdateMoveComponent = 0x570; // char : 1
		constexpr auto CrouchedHalfHeight = 0x574; // float
		constexpr auto PerchRadiusThreshold = 0x578; // float
		constexpr auto bCrouchMaintainsBaseLocation = 0x57c; // char : 1
		constexpr auto LastUpdateRotation = 0x580; // FQuat
		constexpr auto bApplyGravityWhileJumping = 0x591; // char : 1
		constexpr auto LedgeCheckThreshold = 0x594; // float
		constexpr auto MovementMode = 0x598; // EMovementMode
		constexpr auto bUseControllerDesiredRotation = 0x599; // char : 1
		constexpr auto bTouchForceScaledToMass = 0x5a8; // char : 1
		constexpr auto RotationRate = 0x5ac; // FRotator
		constexpr auto ClientAutonomuousBase = 0x5b8; // UPrimitiveComponent*
		constexpr auto DefaultLandMovementMode = 0x5c0; // EMovementMode
		constexpr auto bWantsToLeaveNavWalking = 0x5c1; // char : 1
		constexpr auto MaxAcceleration = 0x5c4; // float
		constexpr auto BrakingDecelerationSwimming = 0x5c8; // float
		constexpr auto bPerformingJumpOff = 0x5cc; // char : 1
		constexpr auto bNetworkMovementModeChanged = 0x5cc; // char : 1
		constexpr auto bRequestedMoveUseAcceleration = 0x5d4; // char : 1
		constexpr auto RequestedVelocity = 0x5d8; // FVector
		constexpr auto AirControl = 0x5e4; // float
		constexpr auto bEnablePhysicsInteraction = 0x5e8; // char : 1
		constexpr auto bRequestedMoveWithMaxSpeed = 0x5e8; // char : 1
		constexpr auto bSweepWhileNavWalking = 0x5e8; // char : 1
		constexpr auto LastUpdateLocation = 0x5ec; // FVector
		constexpr auto NavMeshProjectionInterval = 0x5f8; // float
		constexpr auto BrakingDecelerationFlying = 0x5fc; // float
		constexpr auto MaxTouchForce = 0x614; // float
		constexpr auto MinTouchForce = 0x618; // float
		constexpr auto InitialPushForceFactor = 0x61c; // float
		constexpr auto CurrentFloor = 0x620; // FFindFloorResult
		constexpr auto bJustTeleported = 0x6d0; // char : 1
	}

	namespace n_UParticleModuleEventReceiverBase {
		constexpr auto EventGeneratorType = 0x30; // EParticleEventType
		constexpr auto EventName = 0x34; // FName
	}

	namespace n_UUW-ReplayEventMarker_Knockout_C {
		constexpr auto UberGraphFrame = 0x2a0; // FPointerToUberGraphFrame
		constexpr auto VisualBorder = 0x2a8; // UBorder*
	}

	namespace n_UDDGIVolumeComponent {
		constexpr auto RaysPerProbe = 0x238; // EDDGIRaysPerProbe
		constexpr auto ProbeCounts = 0x23c; // FIntVector
		constexpr auto LightingPriority = 0x248; // int32_t
		constexpr auto UpdatePriority = 0x24c; // float
		constexpr auto ProbeMaxRayDistance = 0x250; // float
		constexpr auto ProbeHysteresis = 0x254; // float
		constexpr auto ViewBias = 0x258; // float
		constexpr auto NormalBias = 0x25c; // float
		constexpr auto LightingChannels = 0x260; // FLightingChannels
		constexpr auto VolumeBlendDistance = 0x264; // float
		constexpr auto VolumeBlendDistanceBlack = 0x268; // float
		constexpr auto EnableProbeRelocation = 0x26c; // bool
		constexpr auto EnableProbeScrolling = 0x26d; // bool
		constexpr auto EnableViewDependentVolumeScrolling = 0x26e; // bool
		constexpr auto ViewDependentVolumeScrollingOffset = 0x270; // float
		constexpr auto EnableVolume = 0x274; // bool
		constexpr auto RuntimeStatic = 0x275; // bool
		constexpr auto probeDistanceExponent = 0x278; // float
		constexpr auto probeIrradianceEncodingGamma = 0x27c; // float
		constexpr auto probeChangeThreshold = 0x280; // float
		constexpr auto probeBrightnessThreshold = 0x284; // float
		constexpr auto ProbeMinFrontfaceDistance = 0x288; // float
		constexpr auto ProbeBackfaceThreshold = 0x28c; // float
		constexpr auto LightMultiplier = 0x290; // float
		constexpr auto EmissiveMultiplier = 0x294; // float
		constexpr auto IrradianceScalar = 0x298; // float
		constexpr auto SkyLight = 0x29c; // bool
		constexpr auto LastOrigin = 0x2a0; // FVector
		constexpr auto ProbeScrollOffset = 0x2ac; // FIntVector
	}

	namespace n_UModelComponent {
		constexpr auto ModelBodySetup = 0x4c8; // UBodySetup*
	}

	namespace n_ASkyAtmosphere {
		constexpr auto SkyAtmosphereComponent = 0x318; // USkyAtmosphereComponent*
	}

	namespace n_UMaterialExpressionVirtualTextureFeatureSwitch {
		constexpr auto No = 0x40; // FExpressionInput
		constexpr auto Yes = 0x54; // FExpressionInput
	}

	namespace n_USizeBoxSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x58; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x59; // EVerticalAlignment
	}

	namespace n_UPaperRuntimeSettings {
		constexpr auto bEnableSpriteAtlasGroups = 0x28; // bool
		constexpr auto bEnableTerrainSplineEditing = 0x29; // bool
		constexpr auto bResizeSpriteDataToMatchTextures = 0x2a; // bool
	}

	namespace n_UReverbEffect {
		constexpr auto Density = 0x28; // float
		constexpr auto Diffusion = 0x2c; // float
		constexpr auto Gain = 0x30; // float
		constexpr auto GainHF = 0x34; // float
		constexpr auto DecayTime = 0x38; // float
		constexpr auto DecayHFRatio = 0x3c; // float
		constexpr auto ReflectionsGain = 0x40; // float
		constexpr auto ReflectionsDelay = 0x44; // float
		constexpr auto LateGain = 0x48; // float
		constexpr auto LateDelay = 0x4c; // float
		constexpr auto AirAbsorptionGainHF = 0x50; // float
		constexpr auto RoomRolloffFactor = 0x54; // float
	}

	namespace n_UInterpTrackInstEvent {
		constexpr auto LastUpdatePosition = 0x28; // float
	}

	namespace n_UUW-ReplayListItemWidget_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto AdministratorPanel = 0x250; // UCanvasPanel*
		constexpr auto Cheat = 0x258; // UVerticalBox*
		constexpr auto Image_Lock = 0x260; // UImage*
		constexpr auto Image_Version = 0x268; // UImage*
		constexpr auto ReplayListItemBtn_ = 0x270; // UButton*
		constexpr auto TextBlock_BattleMode = 0x278; // UTextBlock*
		constexpr auto TextBlock_Day = 0x280; // UTextBlock*
		constexpr auto TextBlock_FileSize = 0x288; // UTextBlock*
		constexpr auto TextBlock_FPP = 0x290; // UTextBlock*
		constexpr auto TextBlock_MapName = 0x298; // UTextBlock*
		constexpr auto TextBlock_Month = 0x2a0; // UTextBlock*
		constexpr auto TextBlock_PlayerRank = 0x2a8; // UTextBlock*
		constexpr auto TextBlock_PlayTime = 0x2b0; // UTextBlock*
		constexpr auto TextBlock_Time = 0x2b8; // UTextBlock*
		constexpr auto TextBlock_TotalCount = 0x2c0; // UTextBlock*
		constexpr auto TextBlock_TotalPlayerCount = 0x2c8; // UTextBlock*
		constexpr auto TextBlock_Year = 0x2d0; // UTextBlock*
		constexpr auto Click = 0x2d8; // FMulticastInlineDelegate
		constexpr auto ReplayItemInfo = 0x2e8; // FMKReplayListItemInfo
		constexpr auto Style = 0x410; // FButtonStyle
		constexpr auto ReplayListWidget = 0x688; // UBravoHotelReplayListWidget*
	}

	namespace n_UUW-PersonalSupplyBoxConsumableItemSlotWidget_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Cont = 0x250; // UTextBlock*
		constexpr auto DropHoverImage = 0x258; // UImage*
		constexpr auto EmptyImage = 0x260; // UImage*
		constexpr auto EquipImage = 0x268; // UImage*
		constexpr auto HoverImage2 = 0x270; // UImage*
		constexpr auto ItemImage = 0x278; // UImage*
		constexpr auto WidgetSwitcher_2 = 0x280; // UWidgetSwitcher*
		constexpr auto Index = 0x288; // int32_t
		constexpr auto OnDropEventDispatcher = 0x290; // FMulticastInlineDelegate
		constexpr auto Data = 0x2a0; // FSupplyItem
		constexpr auto DraggedWidget = 0x3a0; // UUW-Inventory_DragItem_C*
		constexpr auto IsEmpty = 0x3a8; // bool
		constexpr auto ShowToolTipEventDispatcher = 0x3b0; // FMulticastInlineDelegate
		constexpr auto OnChangeSlotEventDispatcher = 0x3c0; // FMulticastInlineDelegate
		constexpr auto OnRightClickEventDispatcher = 0x3d0; // FMulticastInlineDelegate
		constexpr auto SaveKey = 0x3e0; // FKey
		constexpr auto ClickNum = 0x3f8; // int32_t
	}

	namespace n_ABP-BrokenHelmet_C {
		constexpr auto UberGraphFrame = 0x338; // FPointerToUberGraphFrame
		constexpr auto Power_Min = 0x340; // float
		constexpr auto Power_Max = 0x344; // float
		constexpr auto FlyAngle = 0x348; // float
	}

	namespace n_USoundGroups {
		constexpr auto SoundGroupProfiles = 0x28; // TArray<FSoundGroup>
	}

	namespace n_UIpNetDriver {
		constexpr auto LogPortUnreach = 0x748; // char : 1
		constexpr auto AllowPlayerPortUnreach = 0x748; // char : 1
		constexpr auto MaxPortCountToTry = 0x74c; // uint32_t
		constexpr auto ServerDesiredSocketReceiveBufferBytes = 0x75c; // uint32_t
		constexpr auto ServerDesiredSocketSendBufferBytes = 0x760; // uint32_t
		constexpr auto ClientDesiredSocketReceiveBufferBytes = 0x764; // uint32_t
		constexpr auto ClientDesiredSocketSendBufferBytes = 0x768; // uint32_t
		constexpr auto MaxSecondsInReceive = 0x770; // double
		constexpr auto NbPacketsBetweenReceiveTimeTest = 0x778; // int32_t
		constexpr auto ResolutionConnectionTimeout = 0x77c; // float
	}

	namespace n_UCompressedImageSequenceProtocol {
		constexpr auto CompressionQuality = 0xd8; // int32_t
	}

	namespace n_ABravoHotelCharacter {
		constexpr auto Delegate_OnCameraViewModeChanged = 0x5e8; // FMulticastInlineDelegate
		constexpr auto OnPickableItemDetected = 0x628; // FMulticastInlineDelegate
		constexpr auto bIsDisarming = 0x668; // bool
		constexpr auto BodyBaseSkeletalMesh = 0x678; // USkeletalMesh*
		constexpr auto OnUpdateCastingDelegate = 0x6c0; // FMulticastInlineDelegate
		constexpr auto Delegate_OnEnteredVehicle = 0x6d0; // FMulticastInlineDelegate
		constexpr auto OnMovementInputPressedDelegate = 0x718; // FMulticastInlineDelegate
		constexpr auto OnCanProneFailedDelegate = 0x730; // FMulticastInlineDelegate
		constexpr auto BravoHotelCharacterMovement = 0x760; // UBravoHotelCharacterMovementComponent*
		constexpr auto TimerHandle_HideParachute = 0x768; // FTimerHandle
		constexpr auto TimeHandle_SkyDive = 0x788; // FTimerHandle
		constexpr auto OuterDamage = 0x790; // float
		constexpr auto TimerHandle_InOuterArea = 0x798; // FTimerHandle
		constexpr auto TimerHandle_UpdateInOuterArea = 0x7a0; // FTimerHandle
		constexpr auto InventoryScrollSpeed = 0x7a8; // float
		constexpr auto FPSK_WeaponShadow = 0x7b0; // USkeletalMeshComponent*
		constexpr auto LastMeleeAttackTime = 0x7b8; // float
		constexpr auto Camera3P_HeartBeatSensor_FOV_InterpSpeed = 0x7c0; // float
		constexpr auto AirWalkGravity = 0x7c4; // float
		constexpr auto OverlappedCantProneComponent = 0x7c8; // TSet<UPrimitiveComponent*>
		constexpr auto LastTimeHittedDamage = 0x818; // float
		constexpr auto KillAssistValidTime = 0x81c; // float
		constexpr auto IsInReduceSpeedExplosionRange = 0x820; // bool
		constexpr auto FPSK_ADSAlpha = 0x824; // float
		constexpr auto ParticleSystem_MeteorJump = 0x840; // UParticleSystem*
		constexpr auto IsBlind = 0x848; // bool
		constexpr auto CurrentReadyToSnipeGrade = 0x84c; // int32_t
		constexpr auto DefaultTargetArmLength_AOS = 0x850; // float
		constexpr auto ResurrectionCameraBlendTime = 0x854; // float
		constexpr auto bIsMelee = 0x858; // bool
		constexpr auto UnequipAnim_HeartBeatSensor = 0x860; // FAnimSlot
		constexpr auto CoolDownTimeForUseLadder = 0x8e0; // float
		constexpr auto CastingSupplyTimer = 0x8e8; // FTimerHandle
		constexpr auto CurrentOutlineThickness = 0x8f4; // float
		constexpr auto MeleeAnim_Pistol_Idle = 0x8f8; // TArray<FAnimSlot>
		constexpr auto MeleeDamageTable = 0x908; // UDataTable*
		constexpr auto Parachute = 0x910; // USkeletalMeshComponent*
		constexpr auto CurrentResuscitationAnimSlot = 0x918; // FAnimSlot
		constexpr auto bInputKeyJump = 0x928; // bool
		constexpr auto TimeHandle_Ultimate_Recon = 0x930; // FTimerHandle
		constexpr auto PreShootDeltaSecond = 0x93c; // float
		constexpr auto MeteorTarget = 0x948; // AActor*
		constexpr auto DamagedDissolveAnimationCurve = 0x950; // UCurveFloat*
		constexpr auto ActorsToIgnore_Melee = 0x958; // TArray<AActor*>
		constexpr auto MinDamageableFallingSpeed = 0x968; // float
		constexpr auto PostProcessDust = 0x970; // UCameraPostProcessPreset*
		constexpr auto CurrentCameraCurve = 0x978; // UCurveFloat*
		constexpr auto FPSK_CameraBone_Idle = 0x980; // FName
		constexpr auto RocketJumpGravity = 0x988; // float
		constexpr auto ArmsLagDeltaMax = 0x98c; // float
		constexpr auto MovementAnim_GetUpFromFront = 0x990; // FAnimSlot
		constexpr auto StartFireTime = 0x9a4; // float
		constexpr auto ParachuteInputForward = 0x9a8; // float
		constexpr auto SecuredCache = 0x9ac; // FSecuredVariablesCache
		constexpr auto Delegate_OnExitFallingState = 0x9b0; // FMulticastInlineDelegate
		constexpr auto FPSK_Curve_Sway_Scale_With_Fov = 0x9c0; // UCurveFloat*
		constexpr auto FPSK_CurrentMagnificationFactor = 0x9c8; // float
		constexpr auto InputAxisOnLockMovement = 0x9cc; // FVector2D
		constexpr auto ParticleSystem_MeteorJumpTrail = 0x9d8; // UParticleSystem*
		constexpr auto Mutable_FemaleInstance = 0x9e0; // UCustomizableObjectInstance*
		constexpr auto DefaultSocketOffset_VehicleAOS = 0x9e8; // FVector
		constexpr auto UsingSimulationBox = 0x9f4; // bool
		constexpr auto TargetHealth = 0x9f8; // float
		constexpr auto FPSK_DefaultFOV = 0xa00; // float
		constexpr auto VelocityZ_Falling = 0xa04; // float
		constexpr auto FlashBangAngle = 0xa08; // float
		constexpr auto PickUpAnim_Rifle_Crouch = 0xa10; // FAnimSlot
		constexpr auto ZoomAudioEventLastPlayTime = 0xa24; // float
		constexpr auto ActiveWetFogAreas = 0xa30; // TArray<ABravoHotelAreaSkillZone*>
		constexpr auto ParachuteTurnChangeSpeedYaw = 0xa50; // float
		constexpr auto FPSK_SightShadow = 0xa60; // UStaticMeshComponent*
		constexpr auto DefaultSocketOffset_LeftLeanAOS = 0xa68; // FVector
		constexpr auto UnequipAnim_Prone_ThrowingWeapon = 0xa78; // FAnimSlot
		constexpr auto SurfaceType_LastTick = 0xa88; // EPhysicalSurface
		constexpr auto UnarmedMeleeDamage_Jump = 0xa8c; // float
		constexpr auto NeedFindPersonalSupplyBoxLocation = 0xa90; // bool
		constexpr auto DescentCameraShake = 0xa98; // UCameraShake*
		constexpr auto PickUpAnim_Rifle_Prone = 0xaa8; // FAnimSlot
		constexpr auto FPSK_WeaponAttachments = 0xab8; // TArray<UMeshComponent*>
		constexpr auto ARsDamageTable = 0xac8; // UDataTable*
		constexpr auto bNeedToUpdatePreviewPawn = 0xad0; // bool
		constexpr auto UnequipAnim_MainWeapon2 = 0xad8; // FAnimSlot
		constexpr auto KnockOutAssistValidTime = 0xae8; // float
		constexpr auto ForceFieldInfo = 0xaf0; // FAreaSkillZoneInfo
		constexpr auto bIsInsideBlueZone = 0xb10; // bool
		constexpr auto PreviousVehicleSeat = 0xb18; // UBravoHotelVehicleSeatComponent*
		constexpr auto RadialOnDescentCurve = 0xb38; // UCurveFloat*
		constexpr auto ParachuteTargetArmLengthSpeedEnd = 0xb40; // float
		constexpr auto PickUpBackpackEvent = 0xb48; // UAkAudioEvent*
		constexpr auto PickUpAnim_Unarmed_Table = 0xb58; // FAnimSlot
		constexpr auto bIsCastingItem = 0xb6c; // bool
		constexpr auto CurrentCameraHeightCurve = 0xb70; // UCurveFloat*
		constexpr auto ParachuteTriggerBox = 0xb80; // ABravoHotelParachuteTriggerBox*
		constexpr auto PickUpAnim_Pistol_Prone = 0xb88; // FAnimSlot
		constexpr auto ParachuteTargetCameraLocation = 0xb98; // FVector
		constexpr auto Delegate_OnInSmoke = 0xba8; // FMulticastInlineDelegate
		constexpr auto FPSK_StartCameraHeight = 0xbb8; // FVector
		constexpr auto bShowAutoAimDebug = 0xbc8; // bool
		constexpr auto CurrentAirWalkVelocityZ = 0xbcc; // float
		constexpr auto DefaultTargetOffset_HipShot = 0xbd0; // FVector
		constexpr auto AttachInAircraftOffset = 0xbdc; // FVector
		constexpr auto MutableBuffList = 0xbe8; // TArray<FMutableData>
		constexpr auto UnequipAnim_MainWeapon1_Prone = 0xbf8; // FAnimSlot
		constexpr auto ParticleSystem_RocketJumpTrail = 0xc08; // UParticleSystem*
		constexpr auto OverlapWaterVolume = 0xc18; // ABravoHotelWaterPhysicsVolume*
		constexpr auto AccelerationPPInst = 0xc20; // UCameraPostProcessPreset*
		constexpr auto EquipAnim_MainWeapon1_Prone = 0xc28; // FAnimSlot
		constexpr auto ForwardMomentumRangeMax = 0xc38; // float
		constexpr auto DeathAnim_Grenade = 0xc48; // TArray<FAnimSlot>
		constexpr auto BreathParticle_Idle = 0xc58; // UParticleSystem*
		constexpr auto BrokenEquipmentLevel = 0xc60; // float
		constexpr auto bNeedToSpawnBrokenEquipment = 0xc64; // bool
		constexpr auto DefaultSocketOffset_LeftAOS_Prone = 0xc68; // FVector
		constexpr auto InteractionType = 0xc74; // EInteractionType
		constexpr auto PickUpStartEvent = 0xc78; // UAkAudioEvent*
		constexpr auto FPSK_Curves_TunnelEffect = 0xc80; // TMap<EWeaponAttachmentItem, UCurveFloat*>
		constexpr auto LogList = 0xcd0; // TArray<FString>
		constexpr auto BrokenEquipmentDamagedDirection = 0xce0; // FVector
		constexpr auto StuntmanRollingDir = 0xcec; // FVector
		constexpr auto DescentInputVectorAcc = 0xcfc; // float
		constexpr auto bPendingOpenDoor = 0xd04; // bool
		constexpr auto MaxVehicleEscapeSpeed = 0xd08; // float
		constexpr auto FPSK_CameraLocation_CollideAlpha = 0xd0c; // float
		constexpr auto ForwardAxisValue = 0xd10; // float
		constexpr auto ParachuteSocketOffsetY = 0xd14; // float
		constexpr auto ReplayInputRightAxisValue = 0xd38; // float
		constexpr auto PP_Preset_PickupOutline = 0xd40; // UCameraPostProcessPreset*
		constexpr auto TimerHandle_BlackOut = 0xd60; // FTimerHandle
		constexpr auto DescentXYAcc = 0xd70; // float
		constexpr auto TimeHandle_MolotovDotDamage = 0xd78; // FTimerHandle
		constexpr auto AttachInAircraftCameraLocaiton = 0xd80; // FVector
		constexpr auto BreathStopEvent = 0xd90; // UAkAudioEvent*
		constexpr auto BasicSetting_hair_color = 0xd98; // int32_t
		constexpr auto ParachuteVelocityChangeZDecRate = 0xda0; // float
		constexpr auto Curve_TunnelEffect = 0xdb8; // TMap<EWeaponAttachmentItem, UCurveFloat*>
		constexpr auto DoorAnim_Open = 0xe10; // FAnimSlot
		constexpr auto CurrentYawSpeed = 0xe24; // float
		constexpr auto bDescentCameraShakeLoop = 0xe28; // bool
		constexpr auto bMovementInputLock = 0xe29; // bool
		constexpr auto bEnabledFur = 0xe2a; // bool
		constexpr auto DustReset = 0xe2b; // bool
		constexpr auto ResuscitationAnimSets = 0xe30; // TArray<FResuscitationAnimSet>
		constexpr auto TeleportFxTemplate = 0xe40; // UParticleSystem*
		constexpr auto bMovementKeyPushed = 0xe5c; // bool
		constexpr auto ShortTimeHealthMap = 0xe60; // TMap<UObject*, float>
		constexpr auto BasicSettingItemInfos = 0xeb0; // TArray<FInventoryItemInfo>
		constexpr auto CurrentTerrainType = 0xec0; // int32_t
		constexpr auto ParachuteQuickLandingVelocityModifierXY = 0xec4; // float
		constexpr auto PostProcessMagneticHitClass = 0xed0; // UCameraPostProcessPreset*
		constexpr auto DescentCameraShakeDelay = 0xed8; // float
		constexpr auto RequestResuscitationCoolTime = 0xee0; // float
		constexpr auto bIsMeleeJumpAttack = 0xee4; // bool
		constexpr auto DefaultWearableSetting = 0xef8; // FBravoHotelDefaultWearableSetting
		constexpr auto CineDurationTimeMax = 0xf10; // float
		constexpr auto SupplyBoxNotifyAlertMe = 0xf18; // UAkAudioEvent*
		constexpr auto SimulationBoxHeight = 0xf24; // float
		constexpr auto DescentCameraLocation = 0xf28; // FVector
		constexpr auto MeleeAnim_Pistol_Crouch = 0xf40; // TArray<FAnimSlot>
		constexpr auto SprintingBeginRange = 0xf50; // FVector2D
		constexpr auto DefaultsArmsLagRotationMax = 0xf58; // float
		constexpr auto HeadShotHelmetFxEmitterTemplate = 0xf60; // UParticleSystem*
		constexpr auto VelocityZ_LandStop = 0xf68; // float
		constexpr auto DetectedBoxList = 0xf70; // TArray<ABravoHotelDropBoxActor*>
		constexpr auto MagneticDamagedDissolveAnimaitionMaxTime = 0xf80; // float
		constexpr auto MeleeAnim_Rifle_Crouch = 0xf90; // TArray<FAnimSlot>
		constexpr auto HeartBeatSensorEnterEvent = 0xfa0; // UAkAudioEvent*
		constexpr auto DescentDeacceleration = 0xfac; // float
		constexpr auto AirWalkBestRecord = 0xfb0; // float
		constexpr auto FPSK_CollideAngle = 0xfbc; // float
		constexpr auto FPSK_SwayRotationIdle = 0xfc0; // FRotator
		constexpr auto CharacterBackLightSecond = 0xfd0; // UPointLightComponent*
		constexpr auto PostProcessBuffList = 0xfd8; // TArray<UCameraPostProcessPreset*>
		constexpr auto UsingPersonalSupplyBoxWeightMap = 0xfe8; // bool
		constexpr auto KillAssistMaxCount = 0xfec; // int32_t
		constexpr auto MaxDamageableFallingSpeed = 0xff0; // float
		constexpr auto MaxDamageableFallingSpeedFromVehicle = 0xff4; // float
		constexpr auto FPSK_CurrentWeaponTransform = 0x1000; // FTransform
		constexpr auto ArmsLagDeltaMin = 0x1030; // float
		constexpr auto DustDissolveDelayTime = 0x1048; // float
		constexpr auto MedipackUseEvent = 0x1050; // UAkAudioEvent*
		constexpr auto FPSK_CurrentCollideWeaponTransform = 0x10b0; // FTransform
		constexpr auto DeathBeginTime = 0x10e0; // float
		constexpr auto FlameDamageParticleComponent = 0x10e8; // UParticleSystemComponent*
		constexpr auto bUpdateRenderSettings = 0x10f4; // bool
		constexpr auto BlueZoneDroneStopEvent = 0x10f8; // UAkAudioEvent*
		constexpr auto MeleeAnim_Rifle_Idle = 0x1100; // TArray<FAnimSlot>
		constexpr auto DeathAnim_ClosedEyes = 0x1118; // UAnimationAsset*
		constexpr auto ZoomOutAudioEvent_Digital = 0x1120; // UAkAudioEvent*
		constexpr auto DescentSpeed = 0x1128; // float
		constexpr auto DefaultSocketOffset_Hipshot = 0x112c; // FVector
		constexpr auto FPSK_CollideAngle_LocalCache = 0x1138; // float
		constexpr auto TargetArmLengthInterpSpeed = 0x113c; // float
		constexpr auto StartBomingEvent = 0x1140; // UAkAudioEvent*
		constexpr auto AvoidHeadShotMontage = 0x1148; // UAnimMontage*
		constexpr auto OnCompleteActiveSkillDelegate = 0x1158; // FMulticastInlineDelegate
		constexpr auto NearbyVehicles = 0x11c8; // TArray<ABravoHotelVehicle*>
		constexpr auto PostProcessDustClass = 0x11e0; // UCameraPostProcessPreset*
		constexpr auto ADSExitEvent = 0x11f8; // UAkAudioEvent*
		constexpr auto NPCNickName = 0x1200; // FString
		constexpr auto DefaultSocketOffset_LeftLeanHeartBeatSensor = 0x1210; // FVector
		constexpr auto TimerHandle_CheckDetectedItemList = 0x1220; // FTimerHandle
		constexpr auto ADSDeltaRotation = 0x1228; // FRotator
		constexpr auto WetFogZoneInfo = 0x1234; // FWetFogZoneInfo
		constexpr auto LandingAnim_Pistol = 0x1240; // FAnimSlot
		constexpr auto CriticalTimeComponentTickIntervals = 0x1250; // TMap<UActorComponent*, float>
		constexpr auto FPSK_Curve_Sway_Move_Default = 0x12a0; // UCurveVector*
		constexpr auto BackLightIntensity_ADS = 0x12a8; // float
		constexpr auto FireTypeComplete = 0x12b0; // EFireType
		constexpr auto bShouldAdjustOverHead = 0x12b1; // bool
		constexpr auto bThirdPerson = 0x12b8; // bool
		constexpr auto TakeDamageMontageList = 0x12c0; // TArray<FAnimSlot>
		constexpr auto bUseFPSK_Sway = 0x12d4; // bool
		constexpr auto IsDustDissolve = 0x12d5; // bool
		constexpr auto DetectedPickableItem = 0x12d8; // ABravoHotelPickup*
		constexpr auto WaterParticleSystem = 0x12e0; // UParticleSystemComponent*
		constexpr auto RepairAnim_Prone = 0x12f0; // FAnimSlot
		constexpr auto CheckFreezeDistance = 0x1300; // float
		constexpr auto LastDamagedType = 0x1308; // UBravoHotelDamageType*
		constexpr auto InternalReduceCharacterSpeedTime = 0x1310; // float
		constexpr auto PP_Preset_ShortHealth = 0x1318; // UCameraPostProcessPreset*
		constexpr auto MagneticHitBlinkTime = 0x1320; // float
		constexpr auto SeaLevelZ = 0x1328; // float
		constexpr auto PostProcessForceFieldClass = 0x1330; // UCameraPostProcessPreset*
		constexpr auto ParticleSystem_Sliding = 0x1340; // UParticleSystem*
		constexpr auto BoostPercent = 0x1350; // int8_t
		constexpr auto FPSK_Curve_Sway_Move = 0x1358; // UCurveVector*
		constexpr auto InternalMagneticHitBlinkTime = 0x1360; // float
		constexpr auto SRsDamageTable = 0x1368; // UDataTable*
		constexpr auto ArmsLagWeaponRotation = 0x1370; // FRotator
		constexpr auto BombingTargetActor = 0x1380; // ABravoHotelSkillTargetingBase*
		constexpr auto KickTargetDoor = 0x1388; // ABravoHotelDoor*
		constexpr auto CurrentParachuteMaxMomentum = 0x1394; // float
		constexpr auto FPSK_CameraBone_Parkour = 0x1398; // FName
		constexpr auto InWaterParticle = 0x13a0; // UParticleSystem*
		constexpr auto PostProcessWetFogClass = 0x13a8; // UCameraPostProcessPreset*
		constexpr auto CurrentPickupMontage = 0x13b0; // UAnimMontage*
		constexpr auto ParachuteLandingVelocityXY = 0x13b8; // float
		constexpr auto FPSK_CameraLocation_Parkour = 0x13bc; // FVector
		constexpr auto InputMovementAttenuationTimeIdleToProne = 0x13c8; // float
		constexpr auto BreachingAudioEvent = 0x13d0; // UAkAudioEvent*
		constexpr auto AudioComponent = 0x13e0; // UAkComponent*
		constexpr auto ParachuteTurnSpeedYaw = 0x13e8; // float
		constexpr auto DetectedInteractionComponet = 0x13f0; // UPrimitiveComponent*
		constexpr auto OnChangeProjectilePredictPath = 0x13f8; // FMulticastInlineDelegate
		constexpr auto SmokeActors = 0x1408; // TArray<AActor*>
		constexpr auto Camera3PInterpSrc = 0x1418; // FVector
		constexpr auto CurrentPerkCards = 0x1428; // TArray<FPerkDeckElement>
		constexpr auto ParachuteFoldEvent = 0x1438; // UAkAudioEvent*
		constexpr auto ParachuteMomentumAcc = 0x1444; // float
		constexpr auto CompletedCastingInfo = 0x1448; // FCompletedCasting
		constexpr auto TimerHandle_HurtCondition = 0x1450; // FTimerHandle
		constexpr auto TimerHandle_NoCarLandingDamageToTeam = 0x1458; // FTimerHandle
		constexpr auto RenderSettingsTable = 0x1460; // UDataTable*
		constexpr auto FPSK_Curve_Sway_Idle = 0x1468; // UCurveVector*
		constexpr auto SlidingStartTime = 0x1470; // float
		constexpr auto ArmsLagRotation = 0x1474; // FRotator
		constexpr auto DefaultBuffName = 0x1480; // TArray<FName>
		constexpr auto UltimatePerkInfo = 0x1490; // FPerkInfo
		constexpr auto bNeedToBeADS = 0x14b8; // bool
		constexpr auto MeleeAnim_Punch_Crouch = 0x14c0; // TArray<FAnimSlot>
		constexpr auto InternalDamagedTermTime = 0x14d0; // float
		constexpr auto FPSK_TargetMagnificationFactor = 0x14dc; // float
		constexpr auto SurfaceType = 0x14e0; // EPhysicalSurface
		constexpr auto SprintingRange = 0x14f8; // FVector2D
		constexpr auto DMRsDamageTable = 0x1500; // UDataTable*
		constexpr auto CheckDroneDistance = 0x150c; // float
		constexpr auto TimerHandle_SetIsFired = 0x1520; // FTimerHandle
		constexpr auto FPSK_SwayAlphaMin = 0x1528; // float
		constexpr auto FPSK_TargetADSAlpha = 0x152c; // float
		constexpr auto PrevBloomIntensity = 0x1530; // float
		constexpr auto ParachuteSpeed = 0x1534; // float
		constexpr auto PostProcessBloodHitClass = 0x1538; // UCameraPostProcessPreset*
		constexpr auto TargetHealthMap = 0x1548; // TMap<ETargetHealthType, FTargetHealthInfo>
		constexpr auto DefaultSocketOffset_LeftAMP = 0x1598; // FVector
		constexpr auto SaveLeanState = 0x15a5; // ELeanState
		constexpr auto UltimateUIInfo = 0x15b8; // FPerkUIInfo
		constexpr auto FirstTimeHittedDamage = 0x15e4; // float
		constexpr auto CastingItemTimer = 0x1638; // FTimerHandle
		constexpr auto FPSK_IdleWeaponTransform = 0x1640; // FTransform
		constexpr auto PerBoneDamageTable = 0x1670; // UDataTable*
		constexpr auto TimerHandle_Stuntman = 0x1680; // FTimerHandle
		constexpr auto ReturnCameraLag = 0x1690; // float
		constexpr auto AMPExitEvent = 0x16a8; // UAkAudioEvent*
		constexpr auto AirWalkStartTime = 0x16b0; // float
		constexpr auto bFinishMeteorJump = 0x16b4; // bool
		constexpr auto TimeHandle_RequestBuildingInfo = 0x16c8; // FTimerHandle
		constexpr auto CurrentPerkInfos = 0x16d0; // TArray<FPerkInfo>
		constexpr auto HeightToGetInParachuteFromLand = 0x16e0; // float
		constexpr auto Camera3P_DeltaTargetOffsets = 0x16e8; // TMap<FName, FVector>
		constexpr auto InventoryCharacter = 0x1738; // ABravoHotelInventoryCharacter*
		constexpr auto ThrownMolotovCocktails = 0x1740; // TArray<ABravoHotelProjectileGrenadeMolotovCocktail*>
		constexpr auto ParachuteQuickLandingDMGRate = 0x1760; // float
		constexpr auto bActiveCriticalTime = 0x1764; // bool
		constexpr auto DeathAnim_Rifle = 0x1768; // TArray<FAnimSlot>
		constexpr auto ParachuteGravity = 0x177c; // float
		constexpr auto UnequipAnim_MainWeapon2_Prone = 0x1780; // FAnimSlot
		constexpr auto SkyLightCurrentPriority = 0x1790; // float
		constexpr auto CharacterReplication = 0x1798; // UBHCharacterReplication*
		constexpr auto bIsUltimate_Recon = 0x17a0; // bool
		constexpr auto PostProcessFlashBangClass = 0x17a8; // UCameraPostProcessPreset*
		constexpr auto FPSK_Arms = 0x17b0; // USkeletalMeshComponent*
		constexpr auto UnequipAnim_Amplifier_Prone = 0x17b8; // FAnimSlot
		constexpr auto IsBombing = 0x17cc; // bool
		constexpr auto PistolsDamageTable = 0x17d0; // UDataTable*
		constexpr auto HeartBeatSensorNoiseEvent = 0x17d8; // UAkAudioEvent*
		constexpr auto InventoryComponent = 0x17e0; // UPlayerInventoryComponent*
		constexpr auto AssistInfo = 0x17f0; // TArray<FAssistInfo>
		constexpr auto Camera3P_FOV_InterpSpeed = 0x1800; // float
		constexpr auto ParachuteQuickLandingStartRadius = 0x1804; // float
		constexpr auto DetectedVehicleSeatComponent = 0x1808; // USceneComponent*
		constexpr auto bIsUltimateSprint = 0x1810; // bool
		constexpr auto MeleeAnim_Punch_Jump = 0x1870; // FAnimSlot
		constexpr auto FPSK_CameraHeight = 0x1880; // FVector
		constexpr auto OnCharacterGroundStateChangeDelegate = 0x1890; // FMulticastInlineDelegate
		constexpr auto ReplicatedParachuteVelocity = 0x18a0; // FVector_NetQuantize
		constexpr auto bFPSK_IsFPSMode = 0x18ad; // bool
		constexpr auto HitPartsIndex = 0x18b0; // TMap<FName, int32_t>
		constexpr auto FPSK_SwayRotationDeltaForSteadyAim = 0x1900; // FRotator
		constexpr auto GroundStateBeforeSliding = 0x190c; // ECharacterGroundState
		constexpr auto UnequipAnim_HeartBeatSensor_Prone = 0x1910; // FAnimSlot
		constexpr auto CriticalTimeTickInterval = 0x1920; // float
		constexpr auto NitroBoomDuration = 0x1924; // float
		constexpr auto DescentBlurWidth = 0x1928; // float
		constexpr auto bIsLanded = 0x192c; // bool
		constexpr auto UnequipAnim_ThrowingWeapon = 0x1938; // FAnimSlot
		constexpr auto TimerHandle_BlueZone = 0x1948; // FTimerHandle
		constexpr auto DefaultTargetArmLength_Hipshot = 0x1950; // float
		constexpr auto ParachuteMomentumZ = 0x1964; // float
		constexpr auto SprintingMoveRightModifier = 0x1968; // float
		constexpr auto DefaultsArmsLagRotationSpeed = 0x196c; // float
		constexpr auto TimerHandle_BreathEffect = 0x1970; // FTimerHandle
		constexpr auto LeanDegreeMax = 0x197c; // float
		constexpr auto StartDescendingEvent = 0x1980; // UAkAudioEvent*
		constexpr auto RollingAnim = 0x1988; // FAnimSlot
		constexpr auto InventoryCharacterClass = 0x19b0; // ABravoHotelInventoryCharacter*
		constexpr auto CurrentCameraModifyerX = 0x19b8; // float
		constexpr auto DoorAnim_Close = 0x19c0; // FAnimSlot
		constexpr auto IsMagneticDissolve = 0x19d0; // bool
		constexpr auto BuffParticleComponents = 0x19d8; // TArray<UParticleSystemComponent*>
		constexpr auto TargetSpringArmLengthInAircraft = 0x19e8; // float
		constexpr auto GetPerkOnStartTime = 0x19ec; // float
		constexpr auto LeanValue = 0x19f8; // float
		constexpr auto bCanJumpMeleeAttack = 0x1a08; // bool
		constexpr auto bMeteorStrikeBlockingHit = 0x1a0a; // bool
		constexpr auto TimerHandle_MinTimeJumpingBeforeLand = 0x1a10; // FTimerHandle
		constexpr auto FPSK_CameraLocation_LeftLeanDelta = 0x1a18; // FVector
		constexpr auto BravoHotelPlayerController = 0x1a28; // ABravoHotelPlayerController*
		constexpr auto FPSK_ADS_DefaultWeaponTransform_BasicSightCache = 0x1a30; // FTransform
		constexpr auto Mutable_MaleInstance = 0x1a60; // UCustomizableObjectInstance*
		constexpr auto TimerHandle_WetFog = 0x1a78; // FTimerHandle
		constexpr auto ZoomAudioEventRepeatDelay = 0x1a80; // float
		constexpr auto ParticleSystem_RocketJump = 0x1a88; // UParticleSystem*
		constexpr auto UnequipAnim_Melee_Prone = 0x1a98; // FAnimSlot
		constexpr auto ParachuteInputVectorAcc = 0x1aa8; // float
		constexpr auto SnowAreaEnteringEvent = 0x1ab0; // UAkAudioEvent*
		constexpr auto MeteorJumpAudioEvent = 0x1ab8; // UAkAudioEvent*
		constexpr auto BlueZoneDroneEvent = 0x1ad0; // UAkAudioEvent*
		constexpr auto LeanUpdateSpeed = 0x1ad8; // float
		constexpr auto ParachuteVelocityChangeFinalRate = 0x1adc; // float
		constexpr auto LogRequestSize = 0x1ae0; // int32_t
		constexpr auto StandSprintDeltaHeightCamera3P = 0x1ae4; // float
		constexpr auto BlackOutInfo = 0x1ae8; // FAreaSkillZoneInfo
		constexpr auto bIsSpectated = 0x1b08; // bool
		constexpr auto LastPickup = 0x1b10; // ABravoHotelPickup*
		constexpr auto BreachingAudioEvent_Silence = 0x1b18; // UAkAudioEvent*
		constexpr auto InputMovementAttenuationValue = 0x1b20; // float
		constexpr auto IsMagneticHit = 0x1b34; // bool
		constexpr auto Timeline_TunnelEffect = 0x1b38; // FTimeline
		constexpr auto bIsParachuteLanding = 0x1bd0; // bool
		constexpr auto DefaultTargetOffset_AOS_Crouch_Lean = 0x1be0; // FVector
		constexpr auto CameraAssistant3P = 0x1bf0; // USpringArmComponent*
		constexpr auto DetectedInteractionCancleActors = 0x1bf8; // TArray<AActor*>
		constexpr auto BlueZoneFreezeEvent = 0x1c08; // UAkAudioEvent*
		constexpr auto AOSExitEvent = 0x1c10; // UAkAudioEvent*
		constexpr auto ParachutePitchCurve = 0x1c18; // UCurveFloat*
		constexpr auto WearableEquipEvents = 0x1c20; // TArray<UAkAudioEvent*>
		constexpr auto DebuffHitDamageType = 0x1c30; // UBravoHotelDamageType*
		constexpr auto HitBlinkState = 0x1c3c; // int32_t
		constexpr auto DefaultSocketOffset_RightLeanAMP = 0x1c40; // FVector
		constexpr auto ParachuteTurnChangeSpeedPitch = 0x1c4c; // float
		constexpr auto FPSK_GripShadow = 0x1c50; // UStaticMeshComponent*
		constexpr auto AirWalkDuration = 0x1c5c; // float
		constexpr auto FPSK_BarrelShadow = 0x1c60; // USkeletalMeshComponent*
		constexpr auto bLastMovementKeyPushed = 0x1c68; // bool
		constexpr auto PostProcessResurrectionClass = 0x1c70; // UCameraPostProcessPreset*
		constexpr auto ParachuteInputRight = 0x1c78; // float
		constexpr auto DefaultSocketOffset_LeftAOS_Crouch = 0x1c7c; // FVector
		constexpr auto BlueZoneGameRule = 0x1c88; // UBravoHotelBlueZoneGameRule*
		constexpr auto BloomStartDelayTimeInAirCraft = 0x1c90; // float
		constexpr auto SteadyAimReadyEvent = 0x1c98; // UAkAudioEvent*
		constexpr auto LandingAnim_LandStop = 0x1cb0; // FAnimSlot
		constexpr auto WindowBreachingParticle = 0x1cc0; // UParticleSystem*
		constexpr auto AbilityComponent = 0x1cc8; // UBravoHotelAbilityComponent*
		constexpr auto LogJsonList = 0x1cd0; // TArray<FString>
		constexpr auto IdleWaitingTime = 0x1ce0; // float
		constexpr auto EquipAnim_SubWeapon_Prone = 0x1ce8; // FAnimSlot
		constexpr auto TargetBloomIntensityInAirCraft = 0x1cf8; // float
		constexpr auto CombineAnim_Prone = 0x1d00; // FAnimSlot
		constexpr auto PickUpAnim_Unarmed_Crouch = 0x1d18; // FAnimSlot
		constexpr auto TimerHandle_ForceField = 0x1d28; // FTimerHandle
		constexpr auto DefaultSocketOffset_LeftHipshot = 0x1d34; // FVector
		constexpr auto OnChangeFireType = 0x1d40; // FMulticastInlineDelegate
		constexpr auto DamagedDissolveRateTime = 0x1d50; // float
		constexpr auto ParachuteEnableHieght = 0x1d54; // float
		constexpr auto ADSEndLocation = 0x1d58; // FVector
		constexpr auto bNeedToUpdateNitroBoom = 0x1d64; // bool
		constexpr auto BloodSplatterEffect = 0x1d70; // UParticleSystem*
		constexpr auto OverlappedInDoorVolumes = 0x1d78; // TArray<UInDoorVolumeComponent*>
		constexpr auto MPC_WeaponFov = 0x1d88; // UMaterialParameterCollection*
		constexpr auto Ragdoll_ZOffset = 0x1d90; // float
		constexpr auto AirWalkAudioEvent = 0x1d98; // UAkAudioEvent*
		constexpr auto ActiveSkillInitIndex = 0x1da0; // int32_t
		constexpr auto TeamInfoUpdaterComponentRef = 0x1da8; // UTeamInfoUpdaterComponent*
		constexpr auto ShortTimeHealth = 0x1db0; // float
		constexpr auto InputMovementAttenuationTime = 0x1db4; // float
		constexpr auto bForceMoving = 0x1db8; // char : 1
		constexpr auto ShotgunsDamageTable = 0x1dc0; // UDataTable*
		constexpr auto CombineAnim_Stand = 0x1dc8; // FAnimSlot
		constexpr auto PickUpAnim_Unarmed_Prone = 0x1dd8; // FAnimSlot
		constexpr auto DetectedItemList = 0x1de8; // TArray<ABravoHotelPickup*>
		constexpr auto FPSK_Timeline_Sway_Idle = 0x1df8; // FTimeline
		constexpr auto MovementInputVector = 0x1e90; // FVector
		constexpr auto ParticleSystem_MeteorJumpLanded = 0x1ea0; // UParticleSystem*
		constexpr auto RocketJumpTrailEffect = 0x1eb0; // UParticleSystemComponent*
		constexpr auto WetFogInfo = 0x1eb8; // FAreaSkillZoneInfo
		constexpr auto DefaultCameraLag = 0x1ed8; // float
		constexpr auto Stand_FlameDotDamageAnim = 0x1ee0; // FAnimSlot
		constexpr auto MovementAnim_GetUpFromBack = 0x1ef8; // FAnimSlot
		constexpr auto ParachuteLandingVelocityZ = 0x1f08; // float
		constexpr auto bCanQuickLanding = 0x1f18; // bool
		constexpr auto ThrowingWeaponDirectHitEffect = 0x1f20; // UParticleSystem*
		constexpr auto MeshesToIgnore_Melee = 0x1f28; // TArray<UPrimitiveComponent*>
		constexpr auto DeathAnim_Falling = 0x1f38; // TArray<FAnimSlot>
		constexpr auto ParachuteSocketDeltaOffsetZ = 0x1f48; // float
		constexpr auto DescentGravityScale = 0x1f4c; // float
		constexpr auto MeteorJumpGravity = 0x1f50; // float
		constexpr auto CameraFocusDistanceAOS = 0x1f54; // float
		constexpr auto LastSimulatedTakeDamageInfo = 0x1f58; // FBravoHotelTakeDamageInfo
		constexpr auto DeathAnim_Natural = 0x1fa0; // TArray<FAnimSlot>
		constexpr auto ConsumablesEvents = 0x1fb8; // TArray<UAkAudioEvent*>
		constexpr auto AnimSlot_Ultimate_Recon = 0x1fc8; // FAnimSlot
		constexpr auto FPSK_ADS_DefaultWeaponTransform_CurrentSightCache = 0x1fe0; // FTransform
		constexpr auto DelegateCheckSupplyCost = 0x2010; // FMulticastInlineDelegate
		constexpr auto LandingAnim_Unarmed = 0x2020; // FAnimSlot
		constexpr auto SwimDiveEvent = 0x2030; // UAkAudioEvent*
		constexpr auto DustDissolveAnimationCurve = 0x2040; // UCurveFloat*
		constexpr auto ParachuteTargetArmLengthSpeedStart = 0x2048; // float
		constexpr auto UnequipAnim_SubWeapon_Prone = 0x2050; // FAnimSlot
		constexpr auto LastHitType = 0x2068; // UBravoHotelDamageType*
		constexpr auto FPSK_MuzzleShadow = 0x2078; // USkeletalMeshComponent*
		constexpr auto HeartBeatSensorFocusDistance = 0x2080; // float
		constexpr auto InputMovementAttenuationValueIdleToProne = 0x2084; // float
		constexpr auto WearableNameHasFur = 0x2088; // FName
		constexpr auto DescentMaxAcceleration = 0x2098; // float
		constexpr auto bNeedToUpdateUltimate_Driver = 0x209c; // bool
		constexpr auto LastDamageType = 0x20a0; // UDamageType*
		constexpr auto BloodEffectNearbyDist = 0x20a8; // float
		constexpr auto PostProcessBlueZoneHitClass = 0x20b0; // UCameraPostProcessPreset*
		constexpr auto CurrentParachuteSkin = 0x20b8; // UMaterialInterface*
		constexpr auto SteadyAimEndEvent = 0x20d0; // UAkAudioEvent*
		constexpr auto ParticleSystemComponent_Sliding = 0x20d8; // UParticleSystemComponent*
		constexpr auto Prone_FlameDotDamageAnim = 0x20e0; // FAnimSlot
		constexpr auto SlidingBuffIndex = 0x20f4; // int16_t
		constexpr auto ArmsLags = 0x20f8; // TMap<EWeaponAttachmentItem, FBravoHotelArmsLag>
		constexpr auto BravoHotelGameState = 0x2148; // ABravoHotelGameState*
		constexpr auto PickUpAnim_Rifle_Floor = 0x2150; // FAnimSlot
		constexpr auto InteractionTraceDistance = 0x2160; // float
		constexpr auto UltimateSprintEvent = 0x2168; // UAkAudioEvent*
		constexpr auto EquipAnim_HeartBeatSensor = 0x2170; // FAnimSlot
		constexpr auto InternalHitBlinkTime = 0x2190; // float
		constexpr auto BrokenHelmetClass = 0x21a8; // ABravoHotelBrokenEquipment*
		constexpr auto OnSpawnBlackOutDelegate = 0x21b0; // FMulticastInlineDelegate
		constexpr auto SaveMaxWalkSpeed = 0x21c0; // float
		constexpr auto DefaultSocketOffset_LeftAOS_Idle = 0x21c8; // FVector
		constexpr auto TeamPosition = 0x21d8; // UWidgetComponent*
		constexpr auto DoubleTapDelay_ToggleLean = 0x21e0; // float
		constexpr auto AIBot_SearchedEnemyList = 0x21f0; // TArray<ABravoHotelCharacter*>
		constexpr auto FlameDamageInfos = 0x2210; // TArray<FMolotovFlameDotDamageInfo>
		constexpr auto ZoomInAudioEvent_Digital = 0x2220; // UAkAudioEvent*
		constexpr auto HeadShotBloodEffectDistance = 0x2228; // float
		constexpr auto ADSEnterEvent_Digital = 0x2230; // UAkAudioEvent*
		constexpr auto bShouldSprint = 0x2238; // bool
		constexpr auto IsOnDust = 0x2239; // bool
		constexpr auto FPSK_MutableArms = 0x2240; // UCustomizableSkeletalComponent*
		constexpr auto BoltActionDelayTime = 0x2250; // float
		constexpr auto PostProcessBloodHit = 0x2258; // UCameraPostProcessPreset*
		constexpr auto EquipAnim_ThrowingWeapon = 0x2268; // FAnimSlot
		constexpr auto ParachuteLandingHeight = 0x2278; // float
		constexpr auto ADSEnterEvent = 0x2280; // UAkAudioEvent*
		constexpr auto InteractionDistRatioMap = 0x2288; // TMap<UObject*, float>
		constexpr auto SteadyAimStartEvent = 0x22d8; // UAkAudioEvent*
		constexpr auto PrevMovementMode = 0x22e0; // EMovementMode
		constexpr auto MinRollInParachute = 0x22e4; // float
		constexpr auto VoiceComponent = 0x22f0; // UBravoHotelVoiceComponent*
		constexpr auto GrenadeFlashBangEndEvent = 0x22f8; // UAkAudioEvent*
		constexpr auto AdditionalTeamPositionWidgetHeight = 0x2300; // float
		constexpr auto InputMovementAttenuationTimeProneToIdle = 0x2304; // float
		constexpr auto DescentStartZPosition = 0x2308; // float
		constexpr auto InternalDustDissolveDelayTime = 0x2318; // float
		constexpr auto AMPNoiseEvent = 0x2320; // UAkAudioEvent*
		constexpr auto ParachuteTurnSpeedPitch = 0x2328; // float
		constexpr auto bPendingStopSliding = 0x232c; // bool
		constexpr auto IdleNum = 0x2330; // int32_t
		constexpr auto BasicSetting_makeup = 0x2334; // int32_t
		constexpr auto StuntmanStartTime = 0x2338; // float
		constexpr auto StandDeltaHeightCamera3P = 0x234c; // float
		constexpr auto bIsParachuteAvailable = 0x2350; // bool
		constexpr auto PostProcessEffectsTable = 0x2358; // UDataTable*
		constexpr auto CurrentTeamPositionHeight = 0x2360; // float
		constexpr auto MutableComponent = 0x2368; // UCustomizableSkeletalComponent*
		constexpr auto DeathAnim_Sprint = 0x2378; // TArray<FAnimSlot>
		constexpr auto DebuffHitResult = 0x2388; // FHitResult
		constexpr auto bFixLeanDegreeMax = 0x2410; // bool
		constexpr auto EquipAnim_SubWeapon = 0x2418; // FAnimSlot
		constexpr auto bFPSK_IsDefaultTransformUpdated = 0x2428; // bool
		constexpr auto TargetArmLengthInterpSpeed_AMP = 0x242c; // float
		constexpr auto CurrentEMouseSensitivityState = 0x2434; // EMouseSensitivityState
		constexpr auto NewMovementMode = 0x2435; // EMovementMode
		constexpr auto MagneticDamagedDissolveAnimationValue = 0x2438; // float
		constexpr auto UsedTrapList = 0x2440; // TArray<AActor*>
		constexpr auto ArmsLagWeaponModify = 0x2450; // float
		constexpr auto TimerHandle_Sequnce = 0x2478; // FTimerHandle
		constexpr auto bReplaceFreeLook = 0x2480; // bool
		constexpr auto FPSK_SwayScale = 0x2484; // float
		constexpr auto AMPNoiseStopEvent = 0x2488; // UAkAudioEvent*
		constexpr auto DefaultSocketOffset_RightAOS_Crouch = 0x249c; // FVector
		constexpr auto AOSEnterEvent = 0x24a8; // UAkAudioEvent*
		constexpr auto MeteorJumpLandedAudioEvent = 0x24c0; // UAkAudioEvent*
		constexpr auto PersonalSupplySystemComponent = 0x24d8; // UBHPersonalSupplySystemComponent*
		constexpr auto EquipAnim_MainWeapon1 = 0x24e0; // FAnimSlot
		constexpr auto DefaultSocketOffset_LeftHeartBeatSensor = 0x24f0; // FVector
		constexpr auto CloudFxEmitterTemplate = 0x2500; // UParticleSystem*
		constexpr auto MeleeAnim_Punch_Idle = 0x2508; // TArray<FAnimSlot>
		constexpr auto UnequipAnim_SubWeapon = 0x2518; // FAnimSlot
		constexpr auto BreathParticle_Moving = 0x2528; // UParticleSystem*
		constexpr auto ParachuteForwardMomentum = 0x2554; // float
		constexpr auto TargetArmLength = 0x255c; // float
		constexpr auto BasicSetting_gender = 0x2560; // int32_t
		constexpr auto BlackMarketItemPresetList = 0x2568; // TArray<FBravoHotelItemPresetForBlackMarket>
		constexpr auto DefaultSocketOffset_RightAOS_Prone = 0x2578; // FVector
		constexpr auto ADSExitEvent_Digital = 0x2588; // UAkAudioEvent*
		constexpr auto PendingReleaseMutableMesh_FPP = 0x25a0; // TArray<USkeletalMesh*>
		constexpr auto OnUpdateMutableDelegate = 0x25b0; // FMulticastInlineDelegate
		constexpr auto NitroBoomTargetLocation = 0x25c0; // FVector
		constexpr auto PosToGetInParachute = 0x25cc; // float
		constexpr auto CombineTargetMaterials = 0x25d0; // TArray<FName>
		constexpr auto DamagedTermTime = 0x25e0; // float
		constexpr auto MaxRollInParachute = 0x25e4; // float
		constexpr auto Delegate_OnEndSearchInstinct = 0x25e8; // FMulticastInlineDelegate
		constexpr auto bIsAutoSprint = 0x2608; // bool
		constexpr auto EquipAnim_HeartBeatSensor_Prone = 0x2610; // FAnimSlot
		constexpr auto LogIntervalTime = 0x2620; // float
		constexpr auto OverHealHealth = 0x2624; // float
		constexpr auto GodParticle = 0x2628; // UParticleSystemComponent*
		constexpr auto FPSK_AOSFOV = 0x2630; // float
		constexpr auto NitroBoostTorqueScale = 0x2634; // float
		constexpr auto ResuscitationStopEvents = 0x2638; // UAkAudioEvent*
		constexpr auto ADSReturnEnableTime = 0x2640; // float
		constexpr auto DetectedStealableList = 0x2648; // TArray<ABravoHotelCharacter*>
		constexpr auto PronedEyeHeight = 0x2658; // float
		constexpr auto StationaryCharInfo = 0x2660; // UBHStationaryCharInfo*
		constexpr auto bIsMeleeAttackBlocked = 0x2668; // bool
		constexpr auto SpeedSpringArmLengthDesecnt = 0x266c; // float
		constexpr auto bIsEnterIndoorVolume = 0x2670; // bool
		constexpr auto BombingInfo = 0x2674; // FBombingInfo
		constexpr auto CurrentCameraModifyerY = 0x26b0; // float
		constexpr auto InputMovementAttenuationValueProneToIdle = 0x26b4; // float
		constexpr auto ParachuteTargetCameraSpeed = 0x27c0; // float
		constexpr auto CriticalTimeMeshLocaiton = 0x27d0; // FVector
		constexpr auto ActiveForceFields = 0x27e0; // TArray<ABravoHotelAreaSkillZone*>
		constexpr auto DescentAirControl = 0x27f8; // float
		constexpr auto AttachInAircraftRotationOffset = 0x27fc; // FRotator
		constexpr auto CriticalTimeLimitTime = 0x2808; // float
		constexpr auto NewCustomMovementMode = 0x280c; // ECustomMovementMode
		constexpr auto PostProcessOuterPlayZoneClass = 0x2810; // UCameraPostProcessPreset*
		constexpr auto RepSimulatedHittedDamage = 0x2828; // FRepSimulatedHittedDamage
		constexpr auto UnequipAnim_MainWeapon1 = 0x2838; // FAnimSlot
		constexpr auto PunchEffect = 0x2850; // UParticleSystem*
		constexpr auto EquipAnim_Melee = 0x2860; // FAnimSlot
		constexpr auto MP_SnowInterpSpeed = 0x2870; // float
		constexpr auto InitSpringArmLengthInAircraft = 0x2874; // float
		constexpr auto ShowTimePostProcessOuterPlayZone = 0x2878; // float
		constexpr auto AttachmentEquipEvents = 0x2880; // TArray<UAkAudioEvent*>
		constexpr auto AutoAimDistance = 0x2890; // float
		constexpr auto OnAirCraftDelegate = 0x2898; // FMulticastInlineDelegate
		constexpr auto Timeline_CameraInterp = 0x28a8; // FTimeline
		constexpr auto ParkourComponent = 0x2940; // UParkourComponent*
		constexpr auto OutlineThicknessInterpSpeed = 0x2948; // float
		constexpr auto BasicSetting_face_color = 0x294c; // int32_t
		constexpr auto FPSK_SwayRotationMove = 0x2950; // FRotator
		constexpr auto PrevMeshRelativeZ = 0x295c; // float
		constexpr auto GrenadeFragmentExplosionSineStopEvent = 0x2960; // UAkAudioEvent*
		constexpr auto MinTimeJumpingBeforeLand = 0x2968; // float
		constexpr auto bWantsToFire = 0x29a0; // bool
		constexpr auto UpdateAnimationDistance = 0x29a4; // float
		constexpr auto ResurrectionEffectCurve = 0x29a8; // UCurveFloat*
		constexpr auto RollingStartTime = 0x29b4; // float
		constexpr auto bIsADSFireToCamera = 0x29c0; // char : 1
		constexpr auto Camera3P_AMP_FOV_InterpSpeed = 0x29d0; // float
		constexpr auto SteadyPoint = 0x29ec; // float
		constexpr auto DefaultSocketOffset_RightHeartBeatSensor = 0x29f0; // FVector
		constexpr auto DetectedInteractionActor = 0x2a00; // AActor*
		constexpr auto DamagedEvent = 0x2a10; // UAkAudioEvent*
		constexpr auto TimerHandle_StopAirWalk = 0x2a20; // FTimerHandle
		constexpr auto DoorBreachingParticle = 0x2a38; // UParticleSystem*
		constexpr auto ParachuteTurnSpeedRoll = 0x2a50; // float
		constexpr auto BrokenEquipmentType = 0x2a54; // EWearableItemType
		constexpr auto ArmsLagBaseModify = 0x2a58; // float
		constexpr auto FlameDamageParticle = 0x2a60; // UParticleSystem*
		constexpr auto ResurrectionMaterialController = 0x2a68; // TScriptInterface<IMaterialControllableInterface>
		constexpr auto OverHeadTraceDistance = 0x2a78; // float
		constexpr auto CooldownTimeForEnterVehicle = 0x2a80; // float
		constexpr auto ParachuteUnfoldCameraShake = 0x2a88; // UCameraShake*
		constexpr auto LoadedClasses = 0x2a98; // TArray<UObject*>
		constexpr auto IsHit = 0x2aaa; // bool
		constexpr auto RocketJumpLandedAudioEvent = 0x2ab0; // UAkAudioEvent*
		constexpr auto bApplyRagdollForce = 0x2abc; // bool
		constexpr auto MaxRollInParachuteVelocity = 0x2ac0; // float
		constexpr auto RocketJumpAudioEvent = 0x2b10; // UAkAudioEvent*
		constexpr auto AnimInstance_FPP = 0x2b18; // UBravoHotelAnimInstanceFPP*
		constexpr auto ParachuteLastRotator = 0x2b20; // FRotator
		constexpr auto TimerHandle_OuterPlayZone = 0x2b30; // FTimerHandle
		constexpr auto STMComponent = 0x2b40; // UBravoHotelSTMComponent*
		constexpr auto FPSK_CurrentCameraRelativeLocation = 0x2b48; // FVector
		constexpr auto Default3PFOV_SkillMAP = 0x2b54; // float
		constexpr auto Delay_AOSToADS = 0x2b5c; // float
		constexpr auto SlidingAnim = 0x2b70; // FAnimSlot
		constexpr auto bUpdateDeathRotation = 0x2b80; // bool
		constexpr auto InAircraftNearClipPlane = 0x2b90; // float
		constexpr auto bSteadyAim = 0x2b94; // bool
		constexpr auto CrouchMovedDeltaHeightCamera3P = 0x2b9c; // float
		constexpr auto IgnoreInteraction = 0x2ba2; // bool
		constexpr auto SkyLightRef = 0x2ba8; // USkyLightComponent*
		constexpr auto PickUpAnim_Unarmed_Floor = 0x2bb0; // FAnimSlot
		constexpr auto FPSK_LeanLocation = 0x2bc0; // FVector
		constexpr auto AirWalkTotalRecord = 0x2bcc; // float
		constexpr auto TeleportTraceFxTemplate = 0x2be0; // UParticleSystem*
		constexpr auto CombineCompleteAudioEvent = 0x2be8; // UAkAudioEvent*
		constexpr auto DustDissolveAnimationValue = 0x2bf0; // float
		constexpr auto NitroBoomLastVehicleSetTime = 0x2c08; // float
		constexpr auto Delegate_OnViewCameraInWater = 0x2c10; // FMulticastInlineDelegate
		constexpr auto PostProcessMagneticHit = 0x2c70; // UCameraPostProcessPreset*
		constexpr auto TargetSpringArmLengthDescent = 0x2c78; // float
		constexpr auto RadialRate = 0x2c7c; // float
		constexpr auto DissolveCount = 0x2c84; // int32_t
		constexpr auto CurrentPitchSpeed = 0x2c8c; // float
		constexpr auto OverlappedPhysicMaterials = 0x2c90; // TArray<TWeakObjectPtr<UBravoHotelPhysicalMaterial>>
		constexpr auto ParachuteDeacceleration = 0x2ca0; // float
		constexpr auto SteelHelmetSound = 0x2ca8; // UAkAudioEvent*
		constexpr auto bFixFPPFoV = 0x2cc8; // bool
		constexpr auto ThrowingWeaponFireDelay = 0x2ce0; // float
		constexpr auto UnequipAnim_Amplifier = 0x2ce8; // FAnimSlot
		constexpr auto CurrentDisplayAbility = 0x2cf8; // FDisplayAbility
		constexpr auto SupplyBoxNotifyAlertOther = 0x2d08; // UAkAudioEvent*
		constexpr auto UsingPersonalSupplyBoxRePosition = 0x2d10; // bool
		constexpr auto MagneticDamageReset = 0x2d11; // bool
		constexpr auto RepairAnim_Stand = 0x2d18; // FAnimSlot
		constexpr auto AMPEnterEvent = 0x2d28; // UAkAudioEvent*
		constexpr auto PickUpAnim_Pistol_Floor = 0x2d30; // FAnimSlot
		constexpr auto PostProcessBlackOutClass = 0x2d40; // UCameraPostProcessPreset*
		constexpr auto InteractiveSphereComponent = 0x2d58; // USphereComponent*
		constexpr auto SMGsDamageTable = 0x2d60; // UDataTable*
		constexpr auto IsEndTermTime = 0x2d68; // bool
		constexpr auto HitBlinkTime = 0x2d6c; // float
		constexpr auto Camera3P = 0x2d70; // UBravoHotelCameraComponent*
		constexpr auto FiredTimeCount = 0x2d7c; // float
		constexpr auto BreathEndEvent = 0x2d88; // UAkAudioEvent*
		constexpr auto ProjectileGrenades = 0x2d98; // TArray<ABravoHotelProjectileGrenade*>
		constexpr auto PendingReleaseMutableMesh_TPP = 0x2da8; // TArray<USkeletalMesh*>
		constexpr auto bInSmoke = 0x2db8; // bool
		constexpr auto DeathCamClass = 0x2dc0; // AActor*
		constexpr auto MeteorJumpTrailEffect = 0x2dd8; // UParticleSystemComponent*
		constexpr auto TargetSocketOffset = 0x2de0; // FVector
		constexpr auto MinPitchInParachute = 0x2dec; // float
		constexpr auto FPSK_CameraHeight_Prone = 0x2df0; // float
		constexpr auto SuperBarrierClass = 0x2df8; // ABravoHotelSuperBarrier*
		constexpr auto PerkUIInfos = 0x2e00; // TArray<FPerkUIInfo>
		constexpr auto PrevBloomThreshold = 0x2e10; // float
		constexpr auto AmplifierFocusDistance = 0x2e1c; // float
		constexpr auto ParachuteAirControl = 0x2e20; // float
		constexpr auto ParachuteTurnChangeSpeedRoll = 0x2e24; // float
		constexpr auto Default3PFOV = 0x2e2c; // float
		constexpr auto FPSK_ADS_DefaultWeaponTransform = 0x2e30; // FTransform
		constexpr auto OnChangeDetectedItems = 0x2e60; // FMulticastInlineDelegate
		constexpr auto PrevCustomMovementMode = 0x2e70; // ECustomMovementMode
		constexpr auto LandingAnim_Parachute = 0x2e78; // FAnimSlot
		constexpr auto DefaultTargetArmLength_HeartBeatSensor = 0x2e88; // float
		constexpr auto KnockbackRollingAnim = 0x2e90; // FAnimSlot
		constexpr auto DamageReset = 0x2ea0; // bool
		constexpr auto AccelerationPPClass = 0x2ea8; // UCameraPostProcessPreset*
		constexpr auto ParachuteCameraLocation = 0x2eb0; // FVector
		constexpr auto FPSK_ADS_TargetWeaponTransform = 0x2ec0; // FTransform
		constexpr auto bWantsToAOS = 0x2ef4; // bool
		constexpr auto DeathAnim_Shotgun = 0x2ef8; // TArray<FAnimSlot>
		constexpr auto bIsProneWeaponIdle = 0x2f08; // bool
		constexpr auto FPSK_CollideAlpha = 0x2f0c; // float
		constexpr auto MaxOutlineThickness = 0x2f10; // float
		constexpr auto Camera3P_Lean_InterpSpeed = 0x2f14; // float
		constexpr auto CastingItemMontageTimer = 0x2f20; // FTimerHandle
		constexpr auto FPSK_CameraLocation_RightLeanDelta = 0x2f28; // FVector
		constexpr auto LastSwayRotationOnSteadyAim = 0x2f34; // FVector
		constexpr auto DefaultItemSetting = 0x2f40; // FBravoHotelDefaultItemSetting
		constexpr auto DefaultTargetOffset_AOS_Stand_Idle = 0x2f78; // FVector
		constexpr auto ActiveSkillCount = 0x2f88; // int32_t
		constexpr auto BandageTargetHealth = 0x2f98; // float
		constexpr auto OnChangeCharacterStateDelegate = 0x2fa0; // FMulticastInlineDelegate
		constexpr auto FPSK_CollideWeaponTransform = 0x2fb0; // FTransform
		constexpr auto Default3PFOV_HeartBeatSensor = 0x2fe0; // float
		constexpr auto DustDissolveAnimaitionMaxTime = 0x2fe4; // float
		constexpr auto IsDissolve = 0x2fe9; // bool
		constexpr auto Curve_Sliding = 0x2ff0; // UCurveFloat*
		constexpr auto IsMagneticEndTermTime = 0x2ff8; // bool
		constexpr auto FPSK_ADSFOV = 0x2ffc; // float
		constexpr auto BushSoundSpawnDelay = 0x3000; // float
		constexpr auto CurHit = 0x301c; // FHitResult
		constexpr auto LastCastingItemAnimSlot_Stand = 0x30a8; // FAnimSlot
		constexpr auto AutoAimRadius = 0x30b8; // float
		constexpr auto GodEffect2 = 0x30c0; // UParticleSystem*
		constexpr auto PerkLevelUpType = 0x30e8; // EPerkLevelUpType
		constexpr auto ForceHeightToGetInParachuteFromLand = 0x30ec; // float
		constexpr auto PerkComponent = 0x30f0; // UBravoHotelPerkComponent*
		constexpr auto CurrentSkillType = 0x30f8; // EBuffEventType
		constexpr auto ConditionAnim_ShakeOut_Unarmed = 0x3100; // FAnimSlot
		constexpr auto bIsArmedBeforeAction = 0x3110; // bool
		constexpr auto bIsFired = 0x3111; // bool
		constexpr auto bEnableCustomDepth = 0x3112; // bool
		constexpr auto PrevSkyLightOcclusionTintCache = 0x3114; // FColor
		constexpr auto bAllowToggleCamera = 0x3118; // bool
		constexpr auto LadderComponent = 0x3120; // ULadderComponent*
		constexpr auto DefaultSocketOffset_RightLeanHeartBeatSensor = 0x3128; // FVector
		constexpr auto HitEvent = 0x3138; // UAkAudioEvent*
		constexpr auto LastQuickLandingAllowedLocation = 0x3140; // FVector
		constexpr auto MaxPitchInParachute = 0x314c; // float
		constexpr auto bIsMoving = 0x3150; // char : 1
		constexpr auto PickUpAnim_Pistol_Crouch = 0x3158; // FAnimSlot
		constexpr auto FPSK_StartFOV_Delta = 0x3168; // float
		constexpr auto CloudFxInDescent = 0x3170; // UParticleSystemComponent*
		constexpr auto FPSK_CameraHeight_Stand = 0x3178; // float
		constexpr auto UberUser = 0x3188; // TArray<FString>
		constexpr auto FPSK_StockShadow = 0x3198; // UStaticMeshComponent*
		constexpr auto AircraftFlightRef = 0x31a0; // ABravoHotelAircraftFlight*
		constexpr auto ParachuteMomentumDeacc = 0x31a8; // float
		constexpr auto BluezoneMaterialOnTime = 0x31ac; // float
		constexpr auto FPSK_CameraHeight_Crouch = 0x31b0; // float
		constexpr auto PrevLeanState = 0x31b8; // ELeanState
		constexpr auto FPSK_CameraLocation_Collide = 0x31c0; // FVector
		constexpr auto MagneticDamagedDissolveAnimationCurve = 0x31d0; // UCurveFloat*
		constexpr auto FPSK_SwayInterpSpeed = 0x31d8; // float
		constexpr auto DefaultSocketOffset_RightLeanAOS = 0x31dc; // FVector
		constexpr auto FPSK_DestCameraHeight = 0x31f4; // FVector
		constexpr auto PPInst_ShortHealth = 0x3208; // UCameraPostProcessPreset*
		constexpr auto FPSK_TacticalAttachmentShadow = 0x3210; // UStaticMeshComponent*
		constexpr auto LandingAnim_Rifle = 0x3218; // FAnimSlot
		constexpr auto TargetArmLengthInterpSpeed_HeartBeatSensor = 0x3238; // float
		constexpr auto LastDamagedAmount = 0x323c; // float
		constexpr auto ParachuteQuickLandingVelocityModifierZ = 0x3240; // float
		constexpr auto DefaultSocketOffset_RightAMP = 0x3248; // FVector
		constexpr auto PersonalSupplyBoxRePositionCount = 0x3268; // int32_t
		constexpr auto MinDamageableFallingSpeedFromVehicle = 0x326c; // float
		constexpr auto DefaultTargetArmLength_AMP = 0x3270; // float
		constexpr auto PP_PickupOutlineRef = 0x3278; // UCameraPostProcessPreset*
		constexpr auto Health = 0x3280; // float
		constexpr auto FPSK_LeanRotation = 0x3284; // FRotator
		constexpr auto CameraBase = 0x3290; // USceneComponent*
		constexpr auto RightAxisValue = 0x3298; // float
		constexpr auto RagdollLocation = 0x329c; // FVector
		constexpr auto UnarmedMeleeDamage_Ground = 0x32b4; // float
		constexpr auto ReplicateIndexPerkMap = 0x32b8; // TMap<int16_t, int32_t>
		constexpr auto DetectedItemHideList = 0x3310; // TArray<ABravoHotelPickup*>
		constexpr auto SpeedBloomIntensityInAirCraft = 0x3320; // float
		constexpr auto PronedDeltaHeightCamera3P = 0x3328; // float
		constexpr auto InteractiveCancleSphereComponent = 0x3330; // USphereComponent*
		constexpr auto Oxygen = 0x333c; // float
		constexpr auto EquipAnim_Amplifier = 0x3340; // FAnimSlot
		constexpr auto FPSK_Timeline_Sway_Move = 0x3350; // FTimeline
		constexpr auto DeathAnim_HeadShot = 0x33f0; // TArray<FAnimSlot>
		constexpr auto TimerHandle_ADSProcess = 0x3400; // FTimerHandle
		constexpr auto bFPSK_UseCustomCurve = 0x3409; // bool
		constexpr auto KnockOutAssistMaxCount = 0x340c; // int32_t
		constexpr auto ThrownC4s = 0x3410; // TArray<ABravoHotelProjectileGrenadeC4*>
		constexpr auto PlosiveSoundDetection3LvEvent = 0x3420; // UAkAudioEvent*
		constexpr auto SaveCameraBoomLocationZ = 0x3428; // float
		constexpr auto ParachuteSkinMaterials = 0x3430; // TArray<TSoftObjectPtr<UMaterialInterface>>
		constexpr auto PerkDeckChangingCount = 0x3440; // int32_t
		constexpr auto CastingStopEvents = 0x3448; // TArray<UAkAudioEvent*>
		constexpr auto BasicSetting_hair = 0x34d0; // int32_t
		constexpr auto InputMovementAttenuationValueIdleToCrouch = 0x34d4; // float
		constexpr auto Camera3PInterpDst = 0x34e8; // FVector
		constexpr auto ParachuteAvailableFallingDistance = 0x34fc; // float
		constexpr auto EquipAnim_Prone_ThrowingWeapon = 0x3500; // FAnimSlot
		constexpr auto Delegate_OnViewCameraOutWater = 0x3510; // FMulticastInlineDelegate
		constexpr auto AnimInstance = 0x3520; // UBravoHotelAnimInstance*
		constexpr auto FPSK_CameraLocation_Idle = 0x3538; // FVector
		constexpr auto StartBlackOutParticleComponent = 0x3548; // UParticleSystemComponent*
		constexpr auto TeleportDisappearTime = 0x3568; // float
		constexpr auto SpeedSpringArmLengthInAirCraft = 0x356c; // float
		constexpr auto MagneticDamagedTermTime = 0x3570; // float
		constexpr auto BreathParticleComponent = 0x3578; // UParticleSystemComponent*
		constexpr auto EnteredElevatorRef = 0x3580; // ABravoHotelMoveElevator*
		constexpr auto IsPlayingDamage = 0x3588; // bool
		constexpr auto CurrentMeleeAnimSlot = 0x3590; // FAnimSlot
		constexpr auto DoorComponent = 0x35a0; // UBravoHotelDoorComponent*
		constexpr auto DescentZ = 0x35a8; // float
		constexpr auto ParachuteMaxMomentum = 0x35ac; // float
		constexpr auto LevelUpEffectBuffName = 0x35b0; // FName
		constexpr auto NitroBoomTargetVehicle = 0x35b8; // ABravoHotelVehicle*
		constexpr auto ParachuteQuickLandingStartHeight = 0x35c0; // float
		constexpr auto HiddenSimulationBox = 0x35d0; // bool
		constexpr auto PrevNetworkSmoothingMode = 0x35d1; // ENetworkSmoothingMode
		constexpr auto DefaultSocketOffset_RightAOS_Idle = 0x35d4; // FVector
		constexpr auto EquipAnim_Melee_Prone = 0x35e0; // FAnimSlot
		constexpr auto ADSCameraScene = 0x35f0; // USceneComponent*
		constexpr auto FPSK_SwayAlpha = 0x35f8; // float
		constexpr auto TargetFieldOfView = 0x3600; // float
		constexpr auto PersonalSupplyBoxRePositionDistance = 0x3604; // float
		constexpr auto ConditionAnim_ShakeOut_Rifle = 0x3608; // FAnimSlot
		constexpr auto FPSK_MagazineShadow = 0x3620; // UStaticMeshComponent*
		constexpr auto DefaultTargetOffset_AOS_Crouch_Idle = 0x3628; // FVector
		constexpr auto CurrentDamageCount = 0x3634; // int32_t
		constexpr auto ReduceCharacterSpeedTime = 0x3640; // float
		constexpr auto DeathAnim_Crouch = 0x3648; // TArray<FAnimSlot>
		constexpr auto ThrownFlashbangs = 0x3658; // TArray<ABravoHotelProjectileGrenadeFlashbang*>
		constexpr auto CombineTargetRecipe = 0x3668; // FName
		constexpr auto ItemInterruptInputSeconds = 0x3670; // float
		constexpr auto ParticleSystem_RocketJumpLanded = 0x3678; // UParticleSystem*
		constexpr auto BushLandingDamageMultiplier = 0x3684; // float
		constexpr auto InternalMagneticDamagedTermTime = 0x3688; // float
		constexpr auto ParachuteReadyToLandHeight = 0x368c; // float
		constexpr auto EquipAnim_MainWeapon2 = 0x3690; // FAnimSlot
		constexpr auto PostprocessAnimInstance = 0x3700; // UBravoHotelAnimInstancePostprocess*
		constexpr auto FireToCameraLocationCorrection = 0x3708; // float
		constexpr auto ParachuteMaxAcceleration = 0x370c; // float
		constexpr auto bNeedToCheckPlosiveSoundDetection = 0x3720; // bool
		constexpr auto InputMovementAttenuationTimeIdleToCrouch = 0x3724; // float
		constexpr auto DefaultSocketOffset_LeftLeanAMP = 0x372c; // FVector
		constexpr auto HeartBeatSensorNoiseStopEvent = 0x3738; // UAkAudioEvent*
		constexpr auto UnequipAnim_Melee = 0x3740; // FAnimSlot
		constexpr auto SimulationBoxClass = 0x3750; // TSoftClassPtr<UObject>
		constexpr auto LastCastingItemAnimSlot_Prone = 0x3778; // FAnimSlot
		constexpr auto ReplayInputForwardAxisValue = 0x3798; // float
		constexpr auto FPSK_CameraProbe = 0x379c; // float
		constexpr auto UsingBackpackItemIndex = 0x37a0; // int32_t
		constexpr auto BlueZoneFreezeStopEvent = 0x37a8; // UAkAudioEvent*
		constexpr auto bNeedToDrawNitroBoomTarget = 0x37b0; // bool
		constexpr auto StartBlackOutParticle = 0x37b8; // UParticleSystem*
		constexpr auto DefaultTargetOffset_AOS_Stand_Lean = 0x37c4; // FVector
		constexpr auto WeaponEquipEvents = 0x37d0; // TArray<UAkAudioEvent*>
		constexpr auto PickUpAnim_Rifle_Table = 0x37e0; // FAnimSlot
		constexpr auto LandingReason = 0x37f0; // ELandingReason
		constexpr auto BasicSetting_face = 0x37f8; // int32_t
		constexpr auto LastSteppedSurface = 0x3800; // UBravoHotelPhysicalMaterial*
		constexpr auto FPSK_SwayAlphaMax = 0x3808; // float
		constexpr auto Default3PFOV_AOS = 0x381c; // float
		constexpr auto FPSK_CameraPitchDeltaX = 0x3820; // float
		constexpr auto ProneDamageScaleInRedZone = 0x3830; // float
		constexpr auto Curve_CameraInterp = 0x3848; // UCurveFloat*
		constexpr auto PickUpAnim_Pistol_Table = 0x3850; // FAnimSlot
		constexpr auto StartBlackOutAudioEvent = 0x3860; // UAkAudioEvent*
		constexpr auto Default3PFOV_AMP = 0x3868; // float
		constexpr auto DeathAnim_FlameDamage = 0x3870; // TArray<FAnimSlot>
		constexpr auto CurrentInputAxis = 0x3880; // FVector2D
		constexpr auto Delegate_OnOutSmoke = 0x3888; // FMulticastInlineDelegate
		constexpr auto Camera1PInterpSrc = 0x3898; // FVector
		constexpr auto PrevSkyLightIntensityCache = 0x38a4; // float
		constexpr auto ParticleSystem_Knockout = 0x38a8; // UParticleSystem*
		constexpr auto bNeedToUpdateNitroBoost = 0x38b0; // bool
		constexpr auto IsMagneticDamage = 0x38b1; // bool
		constexpr auto FPSK_Camera = 0x38b8; // UBravoHotelCameraComponent*
		constexpr auto EquipAnim_MainWeapon2_Prone = 0x38c0; // FAnimSlot
		constexpr auto Curve_AdsCameraInterp = 0x38d0; // UCurveFloat*
		constexpr auto DamagedDissolveAnimaitionMaxTime = 0x38d8; // float
		constexpr auto bWaitingADSReturn = 0x38dc; // bool
		constexpr auto FPSK_Curve_Sway_Idle_Default = 0x38e0; // UCurveVector*
		constexpr auto PP_Preset_ADS = 0x38e8; // UCameraPostProcessPreset*
		constexpr auto RagdollVelocity = 0x3908; // FVector
		constexpr auto FPSK_TargetFOV = 0x3914; // float
		constexpr auto PPInst_ADS = 0x3918; // UCameraPostProcessPreset*
		constexpr auto ActivePowerInterruptions = 0x3920; // TArray<ABravoHotelAreaSkillZone*>
		constexpr auto CharacterBackLight = 0x3930; // UPointLightComponent*
		constexpr auto GrenadeFlashBangStartEvent = 0x3938; // UAkAudioEvent*
		constexpr auto DefaultPerkInfo = 0x3940; // TArray<FPerkInfo>
		constexpr auto CineTextAnimationAppearTime = 0x3950; // float
		constexpr auto FPSK_ADS_WeaponTransform = 0x3960; // FTransform
		constexpr auto DamageCorrectValueByPenetrationDepthCurve = 0x3990; // UCurveFloat*
		constexpr auto DefaultSocketOffset_RightHipshot = 0x3998; // FVector
		constexpr auto LogSize = 0x39a4; // int32_t
		constexpr auto ItemDropEvent = 0x39a8; // UAkAudioEvent*
		constexpr auto DamagedDissolveAnimationValue = 0x39bc; // float
		constexpr auto GodEffect1 = 0x39c0; // UParticleSystem*
		constexpr auto PostProcessAssignedList = 0x39c8; // TMap<FName, FBravoHotelPostProcessSettings>
		constexpr auto CurrentRollSpeed = 0x3a18; // float
		constexpr auto AdsCameraInterpPlayRate = 0x3a1c; // float
		constexpr auto HeartBeatSensorExitEvent = 0x3a28; // UAkAudioEvent*
		constexpr auto GlidePitchInParachute = 0x3a30; // float
		constexpr auto BreathStartEvent = 0x3a38; // UAkAudioEvent*
		constexpr auto CrouchedDeltaHeightCamera3P = 0x3a40; // float
		constexpr auto ActionComponent = 0x3a48; // UBravoHotelActionComponent*
		constexpr auto BackLightIntensity_FPP = 0x3a50; // float
		constexpr auto bFPSK_IsCollide = 0x3a78; // bool
		constexpr auto MeteorGrenadeProjectileClass = 0x3a80; // TArray<ABravoHotelProjectileGrenade*>
		constexpr auto EquipAnim_Amplifier_Prone = 0x3a98; // FAnimSlot
		constexpr auto ForwardMomentumRangeMin = 0x3aa8; // float
		constexpr auto TeleportAppearTime = 0x3aac; // float
		constexpr auto TeamPositionWidgetInterpSpeed = 0x3ab0; // float
		constexpr auto DoorAnim_Kick = 0x3ad0; // FAnimSlot
		constexpr auto FPSK_CameraLocation_ADS = 0x3ae0; // FVector
		constexpr auto bChangeNearClipPlane = 0x3aec; // bool
		constexpr auto CameraInterpPlayRate = 0x3af0; // float
		constexpr auto ResuscitatingCharacter = 0x3b00; // ABravoHotelCharacter*
	}

	namespace n_UGizmoPlaneScaleParameterSource {
		constexpr auto AxisSource = 0x90; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0xa0; // TScriptInterface<IGizmoTransformSource>
		constexpr auto ScaleMultiplier = 0xb0; // float
		constexpr auto Parameter = 0xb4; // FVector2D
		constexpr auto LastChange = 0xbc; // FGizmoVec2ParameterChange
		constexpr auto CurScaleOrigin = 0xcc; // FVector
		constexpr auto CurScaleNormal = 0xd8; // FVector
		constexpr auto CurScaleAxisX = 0xe4; // FVector
		constexpr auto CurScaleAxisY = 0xf0; // FVector
		constexpr auto InitialTransform = 0x100; // FTransform
	}

	namespace n_UBravoHotelSupplyBoxSpawnComponent {
		constexpr auto TraceLand = 0x4d8; // bool
		constexpr auto CustomIndex = 0x4e0; // int32_t
	}

	namespace n_ULevelSequence {
		constexpr auto MovieScene = 0x348; // UMovieScene*
		constexpr auto ObjectReferences = 0x350; // FLevelSequenceObjectReferenceMap
		constexpr auto BindingReferences = 0x3a0; // FLevelSequenceBindingReferences
		constexpr auto PossessedObjects = 0x440; // TMap<FString, FLevelSequenceObject>
		constexpr auto DirectorClass = 0x490; // UObject*
	}

	namespace n_UMeshSelectionSet {
		constexpr auto Vertices = 0x40; // TArray<int32_t>
		constexpr auto Edges = 0x50; // TArray<int32_t>
		constexpr auto Faces = 0x60; // TArray<int32_t>
		constexpr auto Groups = 0x70; // TArray<int32_t>
	}

	namespace n_ABattleRoyaleGameMode {
		constexpr auto RemovePendingPlayerArray = 0x580; // TArray<APlayerState*>
		constexpr auto GameViewType = 0x590; // EGameViewType
		constexpr auto MatchingType = 0x591; // EMatchingType
		constexpr auto TeamSize = 0x594; // int32_t
		constexpr auto Training = 0x598; // FString
		constexpr auto Clean = 0x5a8; // FString
		constexpr auto AIGrade = 0x5b8; // int32_t
		constexpr auto UpdateSurvivalCircleDelegate = 0x5c0; // FMulticastInlineDelegate
		constexpr auto TeamInfoMap = 0x610; // TMap<char, FTeamInfo>
		constexpr auto WinnerTeamIndex = 0x660; // char
		constexpr auto SendPlayerEndedEvent = 0x668; // TArray<FName>
		constexpr auto SendPlayerRankedEvent = 0x678; // TArray<int32_t>
		constexpr auto AircraftViewPawnClass = 0x6a0; // APawn*
		constexpr auto AircraftFlightPawnClass = 0x6a8; // APawn*
		constexpr auto bAutoStart = 0x6b0; // bool
		constexpr auto StartingPlayerCountRate = 0x6b4; // float
		constexpr auto WaitingTime = 0x6b8; // int32_t
		constexpr auto ReadyTime = 0x6bc; // int32_t
		constexpr auto DescentDelay = 0x6c0; // int32_t
		constexpr auto DescentableTime = 0x6c4; // int32_t
		constexpr auto AircraftFlight = 0x6c8; // ABravoHotelAircraftFlight*
		constexpr auto bIsUseAircraft = 0x6d0; // bool
		constexpr auto bUseAircraftViewPawn = 0x6e5; // bool
		constexpr auto bEndlessGame = 0x6e6; // bool
		constexpr auto DamageInfoArray = 0x700; // TArray<FDamageInfo>
		constexpr auto RedZoneManagerClass = 0x718; // ABravoHotelRedZoneManager*
		constexpr auto RedZoneManager = 0x720; // ABravoHotelRedZoneManager*
		constexpr auto PersonalSupplyBoxManagerClass = 0x7b8; // ABHPersonalSupplyBoxManager*
		constexpr auto PersonalSupplyBoxManager = 0x7c0; // ABHPersonalSupplyBoxManager*
		constexpr auto DivisionItemCountResult = 0x7c8; // FLogBuildCountData
		constexpr auto DisivisonComplete = 0x7d8; // bool
		constexpr auto StandardGroupKeyCountInfo = 0x9c0; // FStandardGroupKeyCountInfo
		constexpr auto AreaSpawnRateList = 0xa18; // TMap<FName, FAreaSpawnRateInfo>
		constexpr auto BlueZoneSpawnRateInfo = 0xa68; // FAreaSpawnRateInfo
		constexpr auto BlueZoneSpawnRateKey = 0xaf0; // FName
		constexpr auto NoneData = 0xaf8; // FAreaSpawnRateInfo
		constexpr auto VehicleAreaSpawnRateList = 0xb80; // TMap<FName, FVehicleAreaSpawnRateInfo>
		constexpr auto VehicleBlueZoneSpawnRateInfo = 0xbd0; // FVehicleAreaSpawnRateInfo
		constexpr auto VehicleBlueZoneSpawnRateKey = 0xc48; // FName
		constexpr auto NoneVehicleData = 0xc50; // FVehicleAreaSpawnRateInfo
		constexpr auto CustomBlueZoneSpawnRateInfo = 0xcc8; // FLocalSpawnRate
		constexpr auto CustomAreaSpawnRateList = 0xcf0; // TMap<FName, FLocalSpawnRate>
		constexpr auto CustomVehicleBlueZoneSpawnRateInfo = 0xd40; // FLocalSpawnRate
		constexpr auto CustomVehicleAreaSpawnRateList = 0xd68; // TMap<FName, FLocalSpawnRate>
		constexpr auto ItemDivisionDelay = 0xdc0; // float
		constexpr auto UsingWorldItemSpawnTalbeInBlueZone = 0xdc4; // bool
		constexpr auto ItemSpawnInBlueZone = 0xdc5; // bool
		constexpr auto UnlimitItemSpawnCnt = 0xdc6; // bool
		constexpr auto MaxItemDivisionCountAtOnce = 0xdc8; // int32_t
		constexpr auto ItemDivisionLevelLoadComplet = 0xdcc; // bool
		constexpr auto ItemDivisionGameReady = 0xdcd; // bool
		constexpr auto UsingMaxPickUpItemSpawnCount = 0xdce; // bool
		constexpr auto MaxPickUpItemSpawnCount = 0xdd0; // int32_t
		constexpr auto UsingMaxVehicleSpawnCount = 0xdd4; // bool
		constexpr auto MaxVehicleSpawnCount = 0xdd8; // int32_t
		constexpr auto MaxPickUpVehicleSpawnCount = 0xddc; // int32_t
		constexpr auto UsingDynamicMaxPickUpItemSpawnCount = 0xde0; // bool
		constexpr auto ItemSpawnLimitInfo = 0xde4; // FItemSpawnLimitInfo
		constexpr auto GCRecordData = 0xdf8; // bool
		constexpr auto GCRecordDataTitle = 0xe00; // FString
		constexpr auto RecordBuildingData = 0xe10; // bool
		constexpr auto RecordPersonalSupplyBoxData = 0xe11; // bool
		constexpr auto LimitCountOfDamageInfo = 0xe14; // int32_t
		constexpr auto ItemSpawnRateCurve = 0xe18; // UCurveFloat*
		constexpr auto VehicleSpawnRateCurve = 0xe20; // UCurveFloat*
		constexpr auto CurrentSpawnVehicleCount = 0xe28; // int32_t
		constexpr auto CurrentDivisionItemCount = 0xe2c; // int32_t
		constexpr auto CheckCharacters = 0xe48; // TArray<ABravoHotelCharacter*>
		constexpr auto LoadCompleteList = 0xe68; // TArray<FLoadBuildingInfo>
		constexpr auto AutoBotIds = 0xe80; // TArray<int32_t>
		constexpr auto AutoBotInfoSendIDList = 0xe90; // TArray<int32_t>
	}

	namespace n_UDatasmithFBXSceneImportData {
		constexpr auto bGenerateLightmapUVs = 0x28; // bool
		constexpr auto TexturesDir = 0x30; // FString
		constexpr auto IntermediateSerialization = 0x40; // char
		constexpr auto bColorizeMaterials = 0x41; // bool
	}

	namespace n_UUW-ReplayPlayerListItemWidget_C {
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
		constexpr auto BT_PlayerName = 0x278; // UButton*
		constexpr auto PB_HP = 0x280; // UProgressBar*
		constexpr auto T_PlayerName = 0x288; // UTextBlock*
		constexpr auto T_PlayerNameHighlight = 0x290; // UTextBlock*
		constexpr auto T_SortInfo = 0x298; // UTextBlock*
		constexpr auto bIsTargetPawn = 0x2a0; // bool
		constexpr auto bIsAlive = 0x2a1; // bool
	}

	namespace n_UEnvQueryGenerator_CurrentLocation {
		constexpr auto QueryContext = 0x50; // UEnvQueryContext*
	}

	namespace n_UMaterialExpressionLightmassReplace {
		constexpr auto Realtime = 0x40; // FExpressionInput
		constexpr auto Lightmass = 0x54; // FExpressionInput
	}

	namespace n_USceneCaptureComponent2D {
		constexpr auto ProjectionType = 0x2c8; // ECameraProjectionMode
		constexpr auto FOVAngle = 0x2cc; // float
		constexpr auto OrthoWidth = 0x2d0; // float
		constexpr auto TextureTarget = 0x2d8; // UTextureRenderTarget2D*
		constexpr auto CompositeMode = 0x2e0; // ESceneCaptureCompositeMode
		constexpr auto PostProcessSettings = 0x2f0; // FPostProcessSettings
		constexpr auto PostProcessBlendWeight = 0x8b0; // float
		constexpr auto bOverride_CustomNearClippingPlane = 0x8b4; // char : 1
		constexpr auto CustomNearClippingPlane = 0x8b8; // float
		constexpr auto bUseCustomProjectionMatrix = 0x8bc; // bool
		constexpr auto CustomProjectionMatrix = 0x8c0; // FMatrix
		constexpr auto bEnableClipPlane = 0x900; // bool
		constexpr auto ClipPlaneBase = 0x904; // FVector
		constexpr auto ClipPlaneNormal = 0x910; // FVector
		constexpr auto bCameraCutThisFrame = 0x91c; // char : 1
		constexpr auto bConsiderUnrenderedOpaquePixelAsFullyTranslucent = 0x91c; // char : 1
		constexpr auto bDisableFlipCopyGLES = 0x920; // bool
	}

	namespace n_UBTDecorator_CheckGameplayTagsOnActor {
		constexpr auto ActorToCheck = 0x68; // FBlackboardKeySelector
		constexpr auto TagsToMatch = 0x90; // EGameplayContainerMatchType
		constexpr auto GameplayTags = 0x98; // FGameplayTagContainer
		constexpr auto CachedDescription = 0xb8; // FString
	}

	namespace n_UNativePlayerListItem {
		constexpr auto Button_PlayerName = 0x248; // UButton*
		constexpr auto Text_PlayerName = 0x250; // UTextBlock*
	}

	namespace n_UAsyncSkeletalMeshComponent {
		constexpr auto SoftMeshPtr = 0xb80; // TSoftObjectPtr<USkeletalMesh>
	}

	namespace n_UBravoHotelItemSpawnRateWidget {
		constexpr auto SelectAreaKey = 0x248; // FName
		constexpr auto IsBlueZoneSpawnRate = 0x250; // bool
		constexpr auto AreaSpawnRateList = 0x258; // TMap<FName, FLocalSpawnRate>
		constexpr auto BlueZoneSpawnRate = 0x2a8; // FLocalSpawnRate
	}

	namespace n_URadialForceComponent {
		constexpr auto Radius = 0x230; // float
		constexpr auto Falloff = 0x234; // ERadialImpulseFalloff
		constexpr auto ImpulseStrength = 0x238; // float
		constexpr auto bImpulseVelChange = 0x23c; // char : 1
		constexpr auto bIgnoreOwningActor = 0x23c; // char : 1
		constexpr auto ForceStrength = 0x240; // float
		constexpr auto DestructibleDamage = 0x244; // float
		constexpr auto ObjectTypesToAffect = 0x248; // TArray<EObjectTypeQuery>
	}

	namespace n_UBravoHotelVehicleMovementComponent {
		constexpr auto OnWheelFloated = 0x3f8; // FMulticastInlineDelegate
		constexpr auto OnWheelLanded = 0x408; // FMulticastInlineDelegate
		constexpr auto OnFloatingInAirChanged = 0x418; // FMulticastInlineDelegate
		constexpr auto OnWheelTypeChanged = 0x428; // FMulticastInlineDelegate
		constexpr auto OnSteeringInputChanged = 0x438; // FMulticastInlineDelegate
		constexpr auto RepControlStates = 0x480; // FRepVehicleControlStates
		constexpr auto PxAuthority = 0x490; // ABravoHotelPlayerController*
		constexpr auto GroundWheelClasses = 0x498; // TArray<UVehicleWheel*>
		constexpr auto InwaterWheelClasses = 0x4a8; // TArray<UVehicleWheel*>
		constexpr auto WreckedWheelClasses = 0x4b8; // TArray<UVehicleWheel*>
		constexpr auto DefaultWheelType = 0x4c8; // EVehicleWheelType
		constexpr auto ParticleIntoWater = 0x4d0; // UParticleSystem*
		constexpr auto DefaultDamping = 0x4d8; // float
		constexpr auto DefaultAngularDamping = 0x4dc; // float
		constexpr auto DefaultDampSpeed = 0x4e0; // float
		constexpr auto WaterDamping = 0x4e4; // float
		constexpr auto WaterDampSpeed = 0x4e8; // float
		constexpr auto WaterFloodedDamping = 0x4ec; // float
		constexpr auto ChangingModeDamping = 0x4f0; // float
		constexpr auto ChangingModeDampSpeed = 0x4f4; // float
		constexpr auto StuntDamping = 0x4f8; // float
		constexpr auto StuntDampSpeed = 0x4fc; // float
		constexpr auto bUseAirControl = 0x500; // bool
		constexpr auto InAirRollForce = 0x504; // float
		constexpr auto InAirPitchForce = 0x508; // float
		constexpr auto bIsInWater = 0x522; // bool
		constexpr auto bOverridesPhysicsNetCorrection = 0x523; // bool
		constexpr auto NetErrorCorrection = 0x524; // FVehicleErrorCorrection
		constexpr auto AliveWheelMask = 0x570; // char
		constexpr auto ParkingBrakeInput = 0x574; // float
		constexpr auto SideBrakeInput = 0x578; // float
		constexpr auto WheelProxies = 0x580; // TArray<TWeakObjectPtr<UBravoHotelVehicleWheelProxy>>
		constexpr auto bUseBooster = 0x5e0; // bool
		constexpr auto MinNormalizedTireloadFilteredCurveOnBoosting = 0x5e8; // UCurveFloat*
		constexpr auto MaxNormalizedTireloadFilteredCurveOnBoosting = 0x5f0; // UCurveFloat*
		constexpr auto TorqueScaleOnBoosting = 0x5f8; // float
		constexpr auto MaxRPMOnBoosting = 0x5fc; // float
		constexpr auto bIsBoosting = 0x600; // bool
		constexpr auto LastOverrideController = 0x608; // AController*
	}

	namespace n_UUW-MyKillCountMessageWidget_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Anim_HideKillAssist = 0x250; // UWidgetAnimation*
		constexpr auto Anim_ShowAssist = 0x258; // UWidgetAnimation*
		constexpr auto Anim_ShowKill = 0x260; // UWidgetAnimation*
		constexpr auto T_AssistCount = 0x268; // UTextBlock*
		constexpr auto T_KillCount = 0x270; // UTextBlock*
		constexpr auto DefaultFontSize = 0x278; // int32_t
		constexpr auto MiniFontSize = 0x27c; // int32_t
		constexpr auto IsShowingKillCount = 0x280; // bool
		constexpr auto Timer_HideKillCountText = 0x288; // FTimerHandle
		constexpr auto RemainTime = 0x290; // float
	}

	namespace n_UFoliageType_Actor {
		constexpr auto ActorClass = 0x3e8; // AActor*
		constexpr auto bShouldAttachToBaseComponent = 0x3f0; // bool
	}

	namespace n_UAnimStreamable {
		constexpr auto NumFrames = 0xb8; // int32_t
		constexpr auto Interpolation = 0xbc; // EAnimInterpolationType
		constexpr auto RetargetSource = 0xc0; // FName
		constexpr auto BoneCompressionSettings = 0xd8; // UAnimBoneCompressionSettings*
		constexpr auto CurveCompressionSettings = 0xe0; // UAnimCurveCompressionSettings*
		constexpr auto bEnableRootMotion = 0xe8; // bool
		constexpr auto RootMotionRootLock = 0xe9; // ERootMotionRootLock
		constexpr auto bForceRootLock = 0xea; // bool
		constexpr auto bUseNormalizedRootMotionScale = 0xeb; // bool
	}

	namespace n_UTemp_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Image_66 = 0x250; // UImage*
		constexpr auto Image_113 = 0x258; // UImage*
		constexpr auto Image_181 = 0x260; // UImage*
		constexpr auto Image_246 = 0x268; // UImage*
		constexpr auto Image_312 = 0x270; // UImage*
		constexpr auto Image_314 = 0x278; // UImage*
		constexpr auto Image_315 = 0x280; // UImage*
		constexpr auto Image_316 = 0x288; // UImage*
		constexpr auto Image_317 = 0x290; // UImage*
		constexpr auto Image_318 = 0x298; // UImage*
		constexpr auto Image_319 = 0x2a0; // UImage*
	}

	namespace n_UInterpTrackInstAnimControl {
		constexpr auto LastUpdatePosition = 0x28; // float
	}

	namespace n_UUW-Inventory_Proximity_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto DropBoxPanel = 0x250; // UWrapBox*
		constexpr auto ScrollBox_2 = 0x258; // UScrollBox*
		constexpr auto WB-BoxList = 0x260; // UWrapBox*
		constexpr auto InventoryWidget = 0x268; // UUW-InventoryWidget_C*
	}

	namespace n_UDevWidget_C {
		constexpr auto UberGraphFrame = 0x298; // FPointerToUberGraphFrame
		constexpr auto ButtonClearStats = 0x2a0; // UButton*
		constexpr auto ButtonDebugVehicle = 0x2a8; // UButton*
		constexpr auto ButtonEngine = 0x2b0; // UButton*
		constexpr auto ButtonFPS = 0x2b8; // UButton*
		constexpr auto ButtonGameplayTick = 0x2c0; // UButton*
		constexpr auto ButtonMemory = 0x2c8; // UButton*
		constexpr auto ButtonNetwork = 0x2d0; // UButton*
		constexpr auto ButtonParticles = 0x2d8; // UButton*
		constexpr auto ButtonSceneRendering = 0x2e0; // UButton*
		constexpr auto ButtonStatSlow = 0x2e8; // UButton*
		constexpr auto ButtonUnitGraph = 0x2f0; // UButton*
		constexpr auto ComboBoxViewModes = 0x2f8; // UComboBoxString*
		constexpr auto ComboBoxViewModes1 = 0x300; // UComboBoxString*
		constexpr auto DeleteSettingsSaveFile = 0x308; // UButton*
		constexpr auto GameSpeed = 0x310; // USlider*
		constexpr auto GameSpeedEdit = 0x318; // UEditableText*
		constexpr auto HorizontalBox_8 = 0x320; // UHorizontalBox*
		constexpr auto HorizontalBox_9 = 0x328; // UHorizontalBox*
		constexpr auto HorizontalBox_10 = 0x330; // UHorizontalBox*
		constexpr auto HorizontalBox_11 = 0x338; // UHorizontalBox*
		constexpr auto HorizontalBox_12 = 0x340; // UHorizontalBox*
		constexpr auto HorizontalBox_13 = 0x348; // UHorizontalBox*
		constexpr auto PauseGame = 0x350; // UCheckBox*
		constexpr auto TemporalAACatmullRomCheck = 0x358; // UCheckBox*
		constexpr auto TemporalAACurrentFrameWeightEdit = 0x360; // UEditableText*
		constexpr auto TemporalAAFilterSizeEdit = 0x368; // UEditableText*
		constexpr auto TemporalAAPauseCorrectChek = 0x370; // UCheckBox*
		constexpr auto TemporalAASamplesEdit = 0x378; // UEditableText*
		constexpr auto TonemapperSharpenEdit = 0x380; // UEditableText*
		constexpr auto ToolTip_DeleteSettings = 0x388; // UHorizontalBox*
		constexpr auto ToolTip_GameSpeed = 0x390; // UHorizontalBox*
		constexpr auto ToolTip_PauseGame = 0x398; // UHorizontalBox*
		constexpr auto ToolTip_StatCommands = 0x3a0; // UVerticalBox*
		constexpr auto ToolTip_ViewModes = 0x3a8; // UVerticalBox*
		constexpr auto ToolTip_ViewModes_2 = 0x3b0; // UVerticalBox*
		constexpr auto Game Settings = 0x3b8; // UBP_GameSettings_C*
		constexpr auto Time Dilation Value Binding = 0x3c0; // float
		constexpr auto Time Dilation Text Binding = 0x3c8; // FText
		constexpr auto Settings File Deleted = 0x3e0; // FMulticastInlineDelegate
		constexpr auto Pause Game When Menu Open = 0x3f0; // FMulticastInlineDelegate
		constexpr auto TemporalAAFilterSizeTextBinding = 0x400; // FText
		constexpr auto TemporalAACurrentFrameWeightTextBinding = 0x418; // FText
		constexpr auto TemporalAASamplesTextBinding = 0x430; // FText
		constexpr auto TonemapperSharpenTextBinding = 0x448; // FText
		constexpr auto TemporalAAFilterSizeValue = 0x460; // float
		constexpr auto TemporalAACurrentFrameWeightValue = 0x464; // float
		constexpr auto TemporalAASamplesValue = 0x468; // int32_t
		constexpr auto TonemapperSharpenValue = 0x46c; // float
		constexpr auto TempKey = 0x470; // FName
		constexpr auto Temp = 0x478; // TMap<FName, FString>
		constexpr auto Type = 0x4c8; // ESettingType
		constexpr auto TempValue2 = 0x4cc; // float
		constexpr auto IsOnDebugVehicle = 0x4d0; // bool
	}

	namespace n_UReplicationPingComponet {
		constexpr auto PingCounter = 0xb0; // int32_t
		constexpr auto bEnabled = 0xb4; // bool
		constexpr auto PlayerState = 0xb8; // APlayerState*
	}

	namespace n_UBravoHotelNetworkManager {
		constexpr auto NetworkSocket = 0x28; // FNetworkSocket
		constexpr auto NetworkWebSocket = 0x38; // FNetworkWebSocket
		constexpr auto HttpService = 0x58; // UBravoHotelHttpClient*
		constexpr auto bHttpServiceEnable = 0x60; // bool
		constexpr auto UserInfo = 0x220; // FBravoHotelUserInfo
		constexpr auto FriendList = 0x2b0; // TArray<FBravoHotelFriendInfo>
		constexpr auto PartyInfo = 0x2d8; // FBravoHotelPartyInfo
		constexpr auto PartyInvitaion = 0x300; // FBravoHotelPartyInvitation
		constexpr auto OnlineSubsystemFriends = 0x330; // FOnlineSubsystemFriends
		constexpr auto ParentGameInstance = 0x4f8; // UGameInstance*
	}

	namespace n_UParticleModuleVelocityInheritParent {
		constexpr auto Scale = 0x38; // FRawDistributionVector
	}

	namespace n_UUW-Lobby_ItemName_C {
		constexpr auto HorizontalBox_Rarity = 0x248; // UHorizontalBox*
		constexpr auto T_WeaponName = 0x250; // UTextBlock*
	}

	namespace n_UAsyncTaskDownloadImage {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFail = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UBravoHotelSettingSlotWidget {
		constexpr auto ParentWidget = 0x298; // UBravoHotelSettingSubWidget*
		constexpr auto ActionName = 0x2a0; // FName
		constexpr auto AxisActionName = 0x2a8; // FName
		constexpr auto AxisScale = 0x2b0; // float
		constexpr auto SettingData = 0x2b8; // FSettingInfo
		constexpr auto SettingType = 0x340; // FDataTableRowHandle
		constexpr auto CurValue = 0x350; // float
		constexpr auto OrgValue = 0x354; // float
		constexpr auto OrgKeyInfo = 0x358; // FInputActionKeyMapping
		constexpr auto CurKeyInfo = 0x380; // FInputActionKeyMapping
		constexpr auto SubOrgKeyInfo = 0x3a8; // FInputActionKeyMapping
		constexpr auto SubCurKeyInfo = 0x3d0; // FInputActionKeyMapping
		constexpr auto OrgAxisKeyInfo = 0x3f8; // FInputAxisKeyMapping
		constexpr auto CurAxisKeyInfo = 0x428; // FInputAxisKeyMapping
		constexpr auto SubOrgAxisKeyInfo = 0x458; // FInputAxisKeyMapping
		constexpr auto SubCurAxisKeyInfo = 0x488; // FInputAxisKeyMapping
		constexpr auto SettingWidget = 0x4b8; // UBravoHotelSettingWidget*
		constexpr auto EnableKeyInputState = 0x4c0; // int32_t
		constexpr auto DelegateKeyChangedNotiMessage = 0x4c8; // FMulticastInlineDelegate
		constexpr auto DelegateChangeInput = 0x4d8; // FMulticastInlineDelegate
	}

	namespace n_UGeneralProjectSettings {
		constexpr auto CompanyName = 0x28; // FString
		constexpr auto CompanyDistinguishedName = 0x38; // FString
		constexpr auto CopyrightNotice = 0x48; // FString
		constexpr auto Description = 0x58; // FString
		constexpr auto Homepage = 0x68; // FString
		constexpr auto LicensingTerms = 0x78; // FString
		constexpr auto PrivacyPolicy = 0x88; // FString
		constexpr auto ProjectID = 0x98; // FGuid
		constexpr auto ProjectName = 0xa8; // FString
		constexpr auto ProjectVersion = 0xb8; // FString
		constexpr auto SupportContact = 0xc8; // FString
		constexpr auto ProjectDisplayedTitle = 0xd8; // FText
		constexpr auto ProjectDebugTitleInfo = 0xf0; // FText
		constexpr auto bShouldWindowPreserveAspectRatio = 0x108; // bool
		constexpr auto bUseBorderlessWindow = 0x109; // bool
		constexpr auto bStartInVR = 0x10a; // bool
		constexpr auto bStartInAR = 0x10b; // bool
		constexpr auto bSupportAR = 0x10c; // bool
		constexpr auto bAllowWindowResize = 0x10d; // bool
		constexpr auto bAllowClose = 0x10e; // bool
		constexpr auto bAllowMaximize = 0x10f; // bool
		constexpr auto bAllowMinimize = 0x110; // bool
	}

	namespace n_ULevelSequenceBurnInOptions {
		constexpr auto bUseBurnIn = 0x28; // bool
		constexpr auto BurnInClass = 0x30; // FSoftClassPath
		constexpr auto Settings = 0x48; // ULevelSequenceBurnInInitSettings*
	}

	namespace n_UAutoDestroySubsystem {
		constexpr auto ActorsToPoll = 0x38; // TArray<AActor*>
	}

	namespace n_UPhysicsCollisionHandler {
		constexpr auto ImpactThreshold = 0x28; // float
		constexpr auto ImpactReFireDelay = 0x2c; // float
		constexpr auto DefaultImpactSound = 0x30; // USoundBase*
		constexpr auto LastImpactSoundTime = 0x38; // float
	}

	namespace n_ABattleRoyaleGameState {
		constexpr auto IsNewItemSpawnMode = 0x680; // bool
		constexpr auto TeamSize = 0x684; // int32_t
		constexpr auto GameRule = 0x688; // EGameMode
		constexpr auto BattleRoyaleState = 0x689; // EBattleRoyaleState
		constexpr auto TotalPlayerCount = 0x68c; // int32_t
		constexpr auto TotalAIPlayerCount = 0x690; // int32_t
		constexpr auto CurrentPlayerCount = 0x694; // int32_t
		constexpr auto CurrentTeamCount = 0x698; // int32_t
		constexpr auto TotalTeamCount = 0x69c; // int32_t
		constexpr auto OnBattleRoyalStateChanged = 0x6a0; // FMulticastInlineDelegate
		constexpr auto OnRocketLaunch = 0x6b0; // FMulticastInlineDelegate
		constexpr auto OnItemSpawnModeChanged = 0x6c0; // FMulticastInlineDelegate
		constexpr auto OnChangeRemainTime = 0x6d0; // FMulticastInlineDelegate
		constexpr auto bCheckSeaLevelZ = 0x6e0; // bool
		constexpr auto SeaLevelZ = 0x6e4; // float
		constexpr auto GhostPlayerCountForTest = 0x6ec; // int32_t
		constexpr auto OnRepTeamSize = 0x6f0; // FMulticastInlineDelegate
		constexpr auto CharacterDiedInfos = 0x700; // TArray<FCharacterDiedInfo>
		constexpr auto TeamEndInfos = 0x710; // TArray<FTeamEndInfo>
		constexpr auto AirCraftBoardingInfos = 0x720; // TArray<FAirCraftBoardingPlayerList>
		constexpr auto redzone = 0x730; // ABravoHotelRedZone*
		constexpr auto RedZoneManager = 0x738; // ABravoHotelRedZoneManager*
		constexpr auto AirCraftDescentPlayerInfoEvent = 0x798; // FMulticastInlineDelegate
		constexpr auto EndAirCraftBoardingPlayerEvent = 0x7a8; // FMulticastInlineDelegate
		constexpr auto AircraftFlightRef = 0x7b8; // ABravoHotelAircraftFlight*
		constexpr auto OnRepCurrentPlayerCount = 0x7c0; // FMulticastInlineDelegate
		constexpr auto OnRepCurrentTeamCount = 0x7d0; // FMulticastInlineDelegate
		constexpr auto OnUpdateClassCount = 0x7e0; // FMulticastInlineDelegate
		constexpr auto RestoreList = 0x7f0; // TArray<UObject*>
		constexpr auto TimerHandle_MoveToLobbyLevel = 0x808; // FTimerHandle
		constexpr auto CurrentClassCounts = 0x810; // TMap<FName, int32_t>
		constexpr auto AutoBotCount = 0x860; // int32_t
	}

	namespace n_UMaterialParameterCollection {
		constexpr auto StateID = 0x28; // FGuid
		constexpr auto ScalarParameters = 0x38; // TArray<FCollectionScalarParameter>
		constexpr auto VectorParameters = 0x48; // TArray<FCollectionVectorParameter>
	}

	namespace n_UConfirmPopupWidget_C {
		constexpr auto UberGraphFrame = 0x250; // FPointerToUberGraphFrame
		constexpr auto Bg = 0x258; // UImage*
		constexpr auto btn_Cancel = 0x260; // UButton*
		constexpr auto btn_OK = 0x268; // UButton*
		constexpr auto Image_2 = 0x270; // UImage*
		constexpr auto Overlay_2 = 0x278; // UOverlay*
		constexpr auto TextBlock_1 = 0x280; // UTextBlock*
		constexpr auto TextBlock_17 = 0x288; // UTextBlock*
		constexpr auto TextBlock_18 = 0x290; // UTextBlock*
		constexpr auto TextBlock_19 = 0x298; // UTextBlock*
		constexpr auto PopupType = 0x2a0; // ConfirmPopupType
		constexpr auto SettingWidget = 0x2a8; // USettingMainWidget_C*
		constexpr auto CurrentSelectIndex = 0x2b0; // int32_t
		constexpr auto CurrentSelectType = 0x2b4; // ESettingBigType
		constexpr auto BackupSlots = 0x2b8; // TArray<FBackupSlotData>
		constexpr auto Timer = 0x2c8; // FTimerHandle
		constexpr auto TimerCount = 0x2d0; // int32_t
	}

	namespace n_UCameraModifier_PostProcess {
		constexpr auto PresetInstances = 0x48; // TArray<UCameraPostProcessPreset*>
	}

	namespace n_UUW-KeyControl_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Action = 0x250; // USizeBox*
		constexpr auto Image_14 = 0x258; // UImage*
		constexpr auto LeftBtn = 0x260; // UImage*
		constexpr auto MidBtn = 0x268; // UImage*
		constexpr auto Mouse = 0x270; // UOverlay*
		constexpr auto RightBtn = 0x278; // UImage*
		constexpr auto ScaleBox_2 = 0x280; // UScaleBox*
		constexpr auto SideDown = 0x288; // UImage*
		constexpr auto SideUp = 0x290; // UImage*
		constexpr auto Text_Action = 0x298; // UTextBlock*
		constexpr auto Text_Action_UsingAlphaBg = 0x2a0; // UTextBlock*
		constexpr auto Turn = 0x2a8; // UImage*
		constexpr auto WheelDown = 0x2b0; // UImage*
		constexpr auto WheelUp = 0x2b8; // UImage*
		constexpr auto WidgetSwitcher_TextStyle = 0x2c0; // UWidgetSwitcher*
		constexpr auto X = 0x2c8; // UImage*
		constexpr auto Y = 0x2d0; // UImage*
		constexpr auto Temp = 0x2d8; // UObject*
		constexpr auto NewVar_1 = 0x2e0; // bool
		constexpr auto DefalutScale = 0x2e4; // float
	}

	namespace n_UUW-FallingWidget_C {
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
		constexpr auto Parachute_Loop = 0x278; // UWidgetAnimation*
		constexpr auto Parachute_Open = 0x280; // UWidgetAnimation*
		constexpr auto Canvas = 0x288; // UCanvasPanel*
		constexpr auto HorizontalBox_Ground = 0x290; // UHorizontalBox*
		constexpr auto HorizontalBox_Parachute = 0x298; // UHorizontalBox*
		constexpr auto HorizontalBox_Sea = 0x2a0; // UHorizontalBox*
		constexpr auto Image_797 = 0x2a8; // UImage*
		constexpr auto Image_798 = 0x2b0; // UImage*
		constexpr auto Overlay_Speed = 0x2b8; // UOverlay*
		constexpr auto Parachute = 0x2c0; // UImage*
		constexpr auto Player = 0x2c8; // UImage*
		constexpr auto PlayerGroup = 0x2d0; // UCanvasPanel*
		constexpr auto SeaHeight = 0x2d8; // UProgressBar*
		constexpr auto Speed = 0x2e0; // UTextBlock*
		constexpr auto TerrainHeight = 0x2e8; // UProgressBar*
		constexpr auto IsParachute = 0x2f0; // bool
	}

	namespace n_ABravoHotelVehicle {
		constexpr auto BravoHotelWheeledVehicleMovementComponent = 0x3a8; // UBravoHotelVehicleMovementComponent*
		constexpr auto PreSeatInfos = 0x480; // TArray<FRepVehicleSeatInfo>
		constexpr auto OnExitFromWaterParticle = 0x4a0; // UParticleSystem*
		constexpr auto bIsAmphibiousMode = 0x4a8; // bool
		constexpr auto WaterLevelZ = 0x4b0; // float
		constexpr auto EngineStartEvent = 0x4b8; // UAkAudioEvent*
		constexpr auto bIsOnTheWater = 0x4c0; // bool
		constexpr auto AfterExplosionEffects = 0x4c8; // TArray<UParticleSystem*>
		constexpr auto DamagedStopSound = 0x4d8; // UAkAudioEvent*
		constexpr auto BoosterParticleComponents = 0x4e0; // TArray<UParticleSystemComponent*>
		constexpr auto NitroJumpMaxSpeedKmH = 0x4f0; // float
		constexpr auto OnWheelWrecked = 0x4f8; // FMulticastInlineDelegate
		constexpr auto CameraShakeScale = 0x508; // float
		constexpr auto OnEnterToWaterSound = 0x510; // UAkAudioEvent*
		constexpr auto MinCrashSoundImpulse = 0x518; // float
		constexpr auto CachedVehicleSeats = 0x520; // TArray<UBravoHotelVehicleSeatComponent*>
		constexpr auto LongSlipThreshold = 0x534; // float
		constexpr auto BoosterTargetArmLength = 0x590; // float
		constexpr auto RearCamera = 0x598; // UCameraComponent*
		constexpr auto WaterPlaneFx = 0x5a0; // UParticleSystemComponent*
		constexpr auto ExplosionImpulseStrength = 0x5a8; // float
		constexpr auto TiringResumeAudioEvent = 0x5b0; // UAkAudioEvent*
		constexpr auto CrashAudioEvent = 0x5b8; // UAkAudioEvent*
		constexpr auto NetDormantComponent = 0x5c8; // UNetDormantComponent*
		constexpr auto VehicleHornStop = 0x5d0; // UAkAudioEvent*
		constexpr auto NitroBoomParticle = 0x5d8; // UParticleSystem*
		constexpr auto IsHandlebar = 0x638; // bool
		constexpr auto WheelPhysicalMaterials = 0x640; // TArray<UBravoHotelPhysicalMaterial*>
		constexpr auto ReplaceFreeLookDurationTime = 0x650; // float
		constexpr auto OnBoosterChangedDelegate = 0x658; // FMulticastInlineDelegate
		constexpr auto bUseInterpCameraRot = 0x668; // bool
		constexpr auto AdditionalWaterParticle = 0x670; // TMap<FName, UParticleSystem*>
		constexpr auto FloodedCheckSocketNames = 0x6c0; // TArray<FName>
		constexpr auto bOverridePhysicsErrorCorrection = 0x6d4; // bool
		constexpr auto bIsFlameDamaged = 0x6f8; // bool
		constexpr auto InBlueZoneDirtColor = 0x708; // FLinearColor
		constexpr auto bWannaInterpCam = 0x719; // bool
		constexpr auto bIsNitroJumping = 0x71a; // bool
		constexpr auto SavedArmLength = 0x71c; // float
		constexpr auto AdditionalFxs = 0x728; // TArray<UParticleSystemComponent*>
		constexpr auto HandbrakeStopAudioEvent = 0x738; // UAkAudioEvent*
		constexpr auto OnAppearLanding = 0x740; // UParticleSystem*
		constexpr auto WaterPlaneParticle = 0x748; // UParticleSystem*
		constexpr auto CrashDamageAbusingList = 0x758; // TArray<ABravoHotelCharacter*>
		constexpr auto TimerHandle_FlashingLights = 0x7a0; // FTimerHandle
		constexpr auto UpdateDirtMatTargetSeconds = 0x7ac; // float
		constexpr auto BeforeExplosionEffects = 0x7b0; // TArray<UParticleSystem*>
		constexpr auto bUseInterpCameraRot_Pitch = 0x7c4; // bool
		constexpr auto AkComponent = 0x7c8; // UAkComponent*
		constexpr auto TimerHandle_TurnOnFrontBackLight = 0x7d0; // FTimerHandle
		constexpr auto SuspensionSoundVolumeCurve = 0x7d8; // UCurveFloat*
		constexpr auto VehicleSeats = 0x7e8; // USceneComponent*
		constexpr auto WaterSurfaceOffsetZ = 0x7f4; // float
		constexpr auto FrontLightValue = 0x7f8; // float
		constexpr auto ImpulseDamageType = 0x800; // UBravoHotelDamageType_Impulse*
		constexpr auto LightTurnOnSpeed = 0x808; // float
		constexpr auto OnExitFromWaterSound = 0x810; // UAkAudioEvent*
		constexpr auto VehicleErrorCorrection = 0x818; // FRigidBodyErrorCorrection
		constexpr auto TimerHandle_UpdateFrontBackLight = 0x850; // FTimerHandle
		constexpr auto SeatInfos = 0x868; // TArray<FRepVehicleSeatInfo>
		constexpr auto AnimRate_BaseNonRenderedUpdateRate = 0x878; // int32_t
		constexpr auto CrashCameraShake = 0x890; // UCameraShake*
		constexpr auto HandbrakeSoundVolumeCurve = 0x898; // UCurveFloat*
		constexpr auto TireHealthPoints = 0x8a8; // TArray<int16_t>
		constexpr auto bFreecam = 0x8b8; // char : 1
		constexpr auto CurrentDirtColor = 0x8bc; // FLinearColor
		constexpr auto ReplicatedBaseAimRotation = 0x8ec; // FRotator
		constexpr auto bResetPhysicsOnWater = 0x8f8; // bool
		constexpr auto PostPhysicsTick = 0x900; // FVehiclePostPhysicsTickFunction
		constexpr auto DisappearEffectActorClass = 0x930; // ABravoHotelMaterialEffectActor*
		constexpr auto AppearComponent = 0x948; // USceneComponent*
		constexpr auto BrakeLightValue = 0x950; // float
		constexpr auto ExplosionEffectSocketName = 0x954; // FName
		constexpr auto bAllOfWheelsInTheWater = 0x964; // bool
		constexpr auto DriverSeatComponent = 0x970; // UBravoHotelVehicleSeatComponent*
		constexpr auto InterpTargetArmLength = 0x978; // float
		constexpr auto CurInstigator = 0x9b0; // AController*
		constexpr auto VehicleData = 0x9b8; // UBravoHotelVehicleData*
		constexpr auto ReplicatedVehicleState = 0x9d0; // EVehicleState
		constexpr auto bIsFPPMode = 0x9d1; // bool
		constexpr auto EngineStopEvent = 0x9e0; // UAkAudioEvent*
		constexpr auto HandbrakeAudioEvent = 0x9e8; // UAkAudioEvent*
		constexpr auto STMComponent = 0x9f8; // UBravoHotelSTMComponent*
		constexpr auto NitroJumpImpulseModifier = 0xa04; // float
		constexpr auto NitroJumpRotationInterpSpeed = 0xa08; // float
		constexpr auto DamagedSounds = 0xa10; // TArray<UAkAudioEvent*>
		constexpr auto CachedTireComponents = 0xa20; // TArray<UBravoHotelVehicleTireComponent*>
		constexpr auto LatSlipThreshold = 0xa34; // float
		constexpr auto NearbyCharacaters = 0xa38; // TArray<ABravoHotelCharacter*>
		constexpr auto AfterExplosionEffectLifeTimes = 0xa48; // TArray<float>
		constexpr auto DamagedEffectComponent = 0xa60; // UParticleSystemComponent*
		constexpr auto CurrentInputMoveRight = 0xa68; // float
		constexpr auto SpringArm = 0xa70; // USpringArmComponent*
		constexpr auto FloodedTimeForBreakDown = 0xa78; // float
		constexpr auto MaxCrashSoundImpulse = 0xa7c; // float
		constexpr auto BoosterCameraInterpSpeed = 0xa84; // float
		constexpr auto NitroJumpStartRotationCache = 0xa88; // FRotator
		constexpr auto OutBlueZoneDirtColor = 0xa94; // FLinearColor
		constexpr auto ExplosionUpwardSpeed = 0xaa4; // float
		constexpr auto ModeChangingTime = 0xaa8; // float
		constexpr auto DamagedEffects = 0xab0; // TArray<UParticleSystem*>
		constexpr auto WreckedMeshComponent = 0xad8; // UStaticMeshComponent*
		constexpr auto LandingAudioEvent = 0xae8; // UAkAudioEvent*
		constexpr auto NitroBoomTargetUiOffset = 0xafc; // FVector
		constexpr auto LastPhysicalMaterial = 0xb08; // UBravoHotelPhysicalMaterial*
		constexpr auto VehicleHornMute = 0xb10; // UAkAudioEvent*
		constexpr auto AnimRate_LODToFrameSkipMap = 0xb18; // TMap<int32_t, int32_t>
		constexpr auto DamagedEffectSocketName = 0xb6c; // FName
		constexpr auto LastDamageInstigator = 0xb80; // AController*
		constexpr auto OccupiedLocalPawn = 0xb90; // ABravoHotelCharacter*
		constexpr auto TiringPauseAudioEvent = 0xba0; // UAkAudioEvent*
		constexpr auto AppearEffectActorClass = 0xba8; // ABravoHotelMaterialEffectActor*
		constexpr auto TeamInfoUpdaterComponentRef = 0xbb0; // UTeamInfoUpdaterComponent*
		constexpr auto NitroJumpEndParticle = 0xbb8; // UParticleSystem*
		constexpr auto NitroBoomAlarmSound = 0xbc8; // UAkAudioEvent*
		constexpr auto RearLightValue = 0xbd4; // float
		constexpr auto bWannaFreecamInterpToOrigin = 0xc38; // char : 1
		constexpr auto FlameDamageInfos = 0xc48; // TArray<FMolotovFlameDotDamageInfo>
		constexpr auto StartReplaceFreeLookTime = 0xc58; // float
		constexpr auto SaveYawValue = 0xc60; // float
		constexpr auto Curve_FlashingLights = 0xc68; // UCurveFloat*
		constexpr auto ExplosionSound = 0xc70; // UAkAudioEvent*
		constexpr auto OnAppearLandingSound = 0xc80; // UAkAudioEvent*
		constexpr auto ExplosionEffect = 0xc90; // UParticleSystem*
		constexpr auto Timeline_FlashingLights = 0xca0; // FTimeline
		constexpr auto HealthPoint = 0xd3c; // float
		constexpr auto VehicleHorn = 0xd40; // UAkAudioEvent*
		constexpr auto AppearTime = 0xd48; // float
		constexpr auto FuelAmount = 0xd50; // float
		constexpr auto OnEnterToWaterParticle = 0xd58; // UParticleSystem*
		constexpr auto TimerHandle_NitroBoom = 0xd60; // FTimerHandle
	}

	namespace n_URadialFalloff {
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto MinRange = 0xb4; // float
		constexpr auto MaxRange = 0xb8; // float
		constexpr auto Default = 0xbc; // float
		constexpr auto Radius = 0xc0; // float
		constexpr auto Position = 0xc4; // FVector
		constexpr auto Falloff = 0xd0; // EFieldFalloffType
	}

	namespace n_UInterpTrackMoveAxis {
		constexpr auto MoveAxis = 0x90; // EInterpMoveAxis
		constexpr auto LookupTrack = 0x98; // FInterpLookupTrack
	}

	namespace n_UMKDemoActorChannel {
		constexpr auto PendingNetObjectsHolder = 0x2f0; // TArray<UObject*>
	}

	namespace n_UMaterialExpressionVectorNoise {
		constexpr auto Position = 0x40; // FExpressionInput
		constexpr auto NoiseFunction = 0x54; // EVectorNoiseFunction
		constexpr auto Quality = 0x58; // int32_t
		constexpr auto bTiling = 0x5c; // char : 1
		constexpr auto TileSize = 0x60; // uint32_t
	}

	namespace n_UAkItemBoolProperties {
		constexpr auto OnSelectionChanged = 0x108; // FMulticastInlineDelegate
		constexpr auto OnPropertyDragged = 0x118; // FMulticastInlineDelegate
	}

	namespace n_UUW-NitroBoomTargetWidget_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Image_73 = 0x250; // UImage*
		constexpr auto KeyImageWidget = 0x258; // UKeyImageWidget_C*
	}

	namespace n_UInterpTrackFloatParticleParam {
		constexpr auto ParamName = 0x90; // FName
	}

	namespace n_UImgMediaSource {
		constexpr auto FrameRateOverride = 0x88; // FFrameRate
		constexpr auto ProxyOverride = 0x90; // FString
		constexpr auto SequencePath = 0xa0; // FDirectoryPath
	}

	namespace n_UAISense_Hearing {
		constexpr auto NoiseEvents = 0x80; // TArray<FAINoiseEvent>
		constexpr auto SpeedOfSoundSq = 0x90; // float
	}

	namespace n_UParticleModuleLocationBoneSocket {
		constexpr auto SourceType = 0x30; // ELocationBoneSocketSource
		constexpr auto UniversalOffset = 0x34; // FVector
		constexpr auto SourceLocations = 0x40; // TArray<FLocationBoneSocketInfo>
		constexpr auto SelectionMethod = 0x50; // ELocationBoneSocketSelectionMethod
		constexpr auto bUpdatePositionEachFrame = 0x54; // char : 1
		constexpr auto bOrientMeshEmitters = 0x54; // char : 1
		constexpr auto bInheritBoneVelocity = 0x54; // char : 1
		constexpr auto InheritVelocityScale = 0x58; // float
		constexpr auto SkelMeshActorParamName = 0x5c; // FName
		constexpr auto NumPreSelectedIndices = 0x64; // int32_t
	}

	namespace n_UDLSSOverrideSettings {
		constexpr auto EnableDLSSInEditorViewportsOverride = 0x28; // EDLSSSettingOverride
		constexpr auto EnableScreenpercentageManipulationInDLSSEditorViewportsOverride = 0x29; // EDLSSSettingOverride
		constexpr auto EnableDLSSInPlayInEditorViewportsOverride = 0x2a; // EDLSSSettingOverride
		constexpr auto bShowDLSSIncompatiblePluginsToolsWarnings = 0x2b; // bool
		constexpr auto ShowDLSSSDebugOnScreenMessages = 0x2c; // EDLSSSettingOverride
	}

	namespace n_UMaterialExpressionCollectionParameter {
		constexpr auto Collection = 0x40; // UMaterialParameterCollection*
		constexpr auto ParameterName = 0x48; // FName
		constexpr auto ParameterId = 0x50; // FGuid
	}

	namespace n_UStandinFarPipeline {
		constexpr auto Settings = 0x28; // FRemeshingPipelineSettings
	}

	namespace n_UEnvQueryNode {
		constexpr auto VerNum = 0x28; // int32_t
	}

	namespace n_ULowEntryByteDataEntry {
		constexpr auto Type = 0x28; // char
		constexpr auto ByteValue = 0x29; // char
		constexpr auto IntegerValue = 0x2c; // int32_t
		constexpr auto LongBytesValue = 0x30; // ULowEntryLong*
		constexpr auto FloatValue = 0x38; // float
		constexpr auto DoubleBytesValue = 0x40; // ULowEntryDouble*
		constexpr auto BooleanValue = 0x48; // bool
		constexpr auto StringUtf8Value = 0x50; // FString
		constexpr auto ByteArrayValue = 0x60; // TArray<char>
		constexpr auto IntegerArrayValue = 0x70; // TArray<int32_t>
		constexpr auto LongBytesArrayValue = 0x80; // TArray<ULowEntryLong*>
		constexpr auto FloatArrayValue = 0x90; // TArray<float>
		constexpr auto DoubleBytesArrayValue = 0xa0; // TArray<ULowEntryDouble*>
		constexpr auto BooleanArrayValue = 0xb0; // TArray<bool>
		constexpr auto StringUtf8ArrayValue = 0xc0; // TArray<FString>
	}

	namespace n_UBHCharacterReplication {
		constexpr auto bIsFreeLook = 0xc0; // char : 1
		constexpr auto bFPSK_WantToFPSMode = 0xc0; // char : 1
		constexpr auto bIsFlameDamaged = 0xc0; // char : 1
		constexpr auto bIsChargingGauge = 0xc0; // char : 1
		constexpr auto bIsShowingLandingPosition = 0xc0; // char : 1
		constexpr auto KnockOutCount = 0xc4; // int32_t
		constexpr auto CriticalTimeCount = 0xc8; // int32_t
		constexpr auto ReplicatedStateID = 0xcc; // char
		constexpr auto CastingItemInfo = 0xd0; // FInventoryItemInfo
		constexpr auto SearchInstinctLocation = 0x168; // FVector_NetQuantize
		constexpr auto CastingInfo = 0x178; // FCastingInfo
		constexpr auto RevivingActor = 0x190; // AActor*
		constexpr auto ResuscitatedTargetActor = 0x198; // AActor*
		constexpr auto InteractedTargetActor = 0x1a0; // AActor*
		constexpr auto Revivers = 0x1a8; // TArray<ACharacter*>
		constexpr auto Resuscitaters = 0x1b8; // TArray<ACharacter*>
		constexpr auto OccupyingVehicleSeat = 0x1c8; // UBravoHotelVehicleSeatComponent*
	}

	namespace n_AStandInMeshActor {
		constexpr auto StaticMeshComponent = 0x318; // UStaticMeshComponent*
	}

	namespace n_USubstanceOutputData {
		constexpr auto ConnectedObject = 0x28; // UObject*
		constexpr auto ParamInfo = 0x30; // FMaterialParameterInfo
		constexpr auto ParentInstance = 0x40; // USubstanceGraphInstance*
		constexpr auto CacheGuid = 0x48; // FGuid
	}

	namespace n_UMaterialExpressionLandscapeLayerCoords {
		constexpr auto MappingType = 0x40; // ETerrainCoordMappingType
		constexpr auto CustomUVType = 0x41; // ELandscapeCustomizedCoordType
		constexpr auto MappingScale = 0x44; // float
		constexpr auto MappingRotation = 0x48; // float
		constexpr auto MappingPanU = 0x4c; // float
		constexpr auto MappingPanV = 0x50; // float
	}

	namespace n_UMovieSceneWidgetMaterialTrack {
		constexpr auto BrushPropertyNamePath = 0x68; // TArray<FName>
		constexpr auto TrackName = 0x78; // FName
	}

	namespace n_UBTTask_MoveTo {
		constexpr auto AcceptableRadius = 0x98; // float
		constexpr auto FilterClass = 0xa0; // UNavigationQueryFilter*
		constexpr auto ObservedBlackboardValueTolerance = 0xa8; // float
		constexpr auto bObserveBlackboardValue = 0xac; // char : 1
		constexpr auto bAllowStrafe = 0xac; // char : 1
		constexpr auto bAllowPartialPath = 0xac; // char : 1
		constexpr auto bTrackMovingGoal = 0xac; // char : 1
		constexpr auto bProjectGoalLocation = 0xac; // char : 1
		constexpr auto bReachTestIncludesAgentRadius = 0xac; // char : 1
		constexpr auto bReachTestIncludesGoalRadius = 0xac; // char : 1
		constexpr auto bStopOnOverlap = 0xac; // char : 1
		constexpr auto bStopOnOverlapNeedsUpdate = 0xad; // char : 1
	}

	namespace n_UWindowTitleBarArea {
		constexpr auto bWindowButtonsEnabled = 0x120; // bool
		constexpr auto bDoubleClickTogglesFullscreen = 0x121; // bool
	}

	namespace n_UParticleModuleSubUVMovie {
		constexpr auto bUseEmitterTime = 0x70; // char : 1
		constexpr auto FrameRate = 0x78; // FRawDistributionFloat
		constexpr auto StartingFrame = 0xa8; // int32_t
	}

	namespace n_UNavigationSystemModuleConfig {
		constexpr auto bStrictlyStatic = 0x50; // char : 1
		constexpr auto bCreateOnClient = 0x50; // char : 1
		constexpr auto bAutoSpawnMissingNavData = 0x50; // char : 1
		constexpr auto bSpawnNavDataInNavBoundsLevel = 0x50; // char : 1
	}

	namespace n_UAkInitBank {
		constexpr auto AvailableAudioCultures = 0x50; // TArray<FString>
		constexpr auto DefaultLanguage = 0x60; // FString
	}

	namespace n_UUW-Lobby_CharacterInfo_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Button_306 = 0x250; // UButton*
		constexpr auto CanvasPanel_Line = 0x258; // UCanvasPanel*
		constexpr auto CanvasPanel_Position = 0x260; // UCanvasPanel*
		constexpr auto Image_Leader = 0x268; // UImage*
		constexpr auto Image_Rank = 0x270; // UImage*
		constexpr auto Img_Cut = 0x278; // UImage*
		constexpr auto Img_MS = 0x280; // UImage*
		constexpr auto Img_MS_2 = 0x288; // UImage*
		constexpr auto Img_MS_3 = 0x290; // UImage*
		constexpr auto Img_PlayerLine = 0x298; // UImage*
		constexpr auto Img_PlayerPoint = 0x2a0; // UImage*
		constexpr auto Img_Voice = 0x2a8; // UImage*
		constexpr auto Img_VoiceElimination = 0x2b0; // UImage*
		constexpr auto Overlay_OnReady = 0x2b8; // UOverlay*
		constexpr auto Overlay_Position = 0x2c0; // UOverlay*
		constexpr auto Overlay_TeamOnReady = 0x2c8; // UOverlay*
		constexpr auto T_PlayerName = 0x2d0; // UTextBlock*
		constexpr auto T_PlayerName_2 = 0x2d8; // UTextBlock*
		constexpr auto WidgetSwitcher_3 = 0x2e0; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_IsTeam = 0x2e8; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_State = 0x2f0; // UWidgetSwitcher*
		constexpr auto LastSeaponTierId = 0x2f8; // int32_t
		constexpr auto WidgetHalfSizeX = 0x2fc; // float
	}

	namespace n_UScaleBoxSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UGeometryCacheTrack {
		constexpr auto Duration = 0x28; // float
	}

	namespace n_UMaterialExpressionMakeMaterialAttributes {
		constexpr auto BaseColor = 0x40; // FExpressionInput
		constexpr auto Metallic = 0x54; // FExpressionInput
		constexpr auto Specular = 0x68; // FExpressionInput
		constexpr auto Roughness = 0x7c; // FExpressionInput
		constexpr auto Anisotropy = 0x90; // FExpressionInput
		constexpr auto EmissiveColor = 0xa4; // FExpressionInput
		constexpr auto Opacity = 0xb8; // FExpressionInput
		constexpr auto OpacityMask = 0xcc; // FExpressionInput
		constexpr auto Normal = 0xe0; // FExpressionInput
		constexpr auto Tangent = 0xf4; // FExpressionInput
		constexpr auto WorldPositionOffset = 0x108; // FExpressionInput
		constexpr auto WorldDisplacement = 0x11c; // FExpressionInput
		constexpr auto TessellationMultiplier = 0x130; // FExpressionInput
		constexpr auto SubsurfaceColor = 0x144; // FExpressionInput
		constexpr auto ClearCoat = 0x158; // FExpressionInput
		constexpr auto ClearCoatRoughness = 0x16c; // FExpressionInput
		constexpr auto AmbientOcclusion = 0x180; // FExpressionInput
		constexpr auto Refraction = 0x194; // FExpressionInput
		constexpr auto CustomizedUVs = 0x1a8; // FExpressionInput [0x8]
		constexpr auto PixelDepthOffset = 0x248; // FExpressionInput
		constexpr auto ShadingModel = 0x25c; // FExpressionInput
	}

	namespace n_UCameraAnim {
		constexpr auto CameraInterpGroup = 0x28; // UInterpGroup*
		constexpr auto AnimLength = 0x30; // float
		constexpr auto BoundingBox = 0x34; // FBox
		constexpr auto bRelativeToInitialTransform = 0x50; // char : 1
		constexpr auto bRelativeToInitialFOV = 0x50; // char : 1
		constexpr auto BaseFOV = 0x54; // float
		constexpr auto BasePostProcessSettings = 0x60; // FPostProcessSettings
		constexpr auto BasePostProcessBlendWeight = 0x620; // float
	}

	namespace n_UMovieSceneObjectPropertyTrack {
		constexpr auto PropertyClass = 0x88; // UObject*
	}

	namespace n_UGizmoConstantFrameAxisSource {
		constexpr auto Origin = 0x30; // FVector
		constexpr auto Direction = 0x3c; // FVector
		constexpr auto TangentX = 0x48; // FVector
		constexpr auto TangentY = 0x54; // FVector
	}

	namespace n_ADatasmithAreaLightActor {
		constexpr auto LightType = 0x318; // EDatasmithAreaLightActorType
		constexpr auto LightShape = 0x319; // EDatasmithAreaLightActorShape
		constexpr auto Dimensions = 0x31c; // FVector2D
		constexpr auto Intensity = 0x324; // float
		constexpr auto IntensityUnits = 0x328; // ELightUnits
		constexpr auto Color = 0x32c; // FLinearColor
		constexpr auto Temperature = 0x33c; // float
		constexpr auto IESTexture = 0x340; // UTextureLightProfile*
		constexpr auto bUseIESBrightness = 0x348; // bool
		constexpr auto IESBrightnessScale = 0x34c; // float
		constexpr auto Rotation = 0x350; // FRotator
		constexpr auto SourceRadius = 0x35c; // float
		constexpr auto SourceLength = 0x360; // float
		constexpr auto AttenuationRadius = 0x364; // float
		constexpr auto SpotlightInnerAngle = 0x368; // float
		constexpr auto SpotlightOuterAngle = 0x36c; // float
	}

	namespace n_UNiagaraSimulationStageGeneric {
		constexpr auto IterationSource = 0x38; // ENiagaraIterationSource
		constexpr auto Iterations = 0x3c; // int32_t
		constexpr auto bSpawnOnly = 0x40; // char : 1
		constexpr auto DataInterface = 0x48; // FNiagaraVariableDataInterfaceBinding
	}

	namespace n_ABravoHotelPlayerSubState {
		constexpr auto PingInfo = 0x318; // FBravoHotelPingInfo
		constexpr auto PingLocalLocation = 0x350; // FVector
		constexpr auto RoutePingInfo = 0x360; // TArray<FVector>
		constexpr auto Location = 0x388; // FVector_NetQuantize
		constexpr auto RotationYaw = 0x394; // uint16_t
		constexpr auto Health = 0x398; // int32_t
		constexpr auto bIsDisconnect = 0x39c; // bool
		constexpr auto bIsRetired = 0x39d; // bool
		constexpr auto MaxHealth = 0x3a0; // int32_t
		constexpr auto CurrentState = 0x3a4; // EPlayerState
		constexpr auto CharacterState = 0x3a5; // ECharacterState
		constexpr auto FireCount = 0x3a8; // int32_t
		constexpr auto CurrentEquipWeaponID = 0x3ac; // int32_t
		constexpr auto bIsFireWeapon = 0x3b0; // bool
		constexpr auto RemainGoldentime = 0x3b4; // int32_t
		constexpr auto MaxGoldentime = 0x3b8; // int32_t
		constexpr auto bRequestResuscitation = 0x3bc; // bool
		constexpr auto VoiceTeamTalk = 0x3bd; // bool
		constexpr auto VoiceAreaTalk = 0x3be; // bool
	}

	namespace n_USoundNodeRandom {
		constexpr auto Weights = 0x48; // TArray<float>
		constexpr auto HasBeenUsed = 0x58; // TArray<bool>
		constexpr auto NumRandomUsed = 0x68; // int32_t
		constexpr auto PreselectAtLevelLoad = 0x6c; // int32_t
		constexpr auto bShouldExcludeFromBranchCulling = 0x70; // char : 1
		constexpr auto bSoundCueExcludedFromBranchCulling = 0x70; // char : 1
		constexpr auto bRandomizeWithoutReplacement = 0x70; // char : 1
	}

	namespace n_UAnimCompress_RemoveLinearKeys {
		constexpr auto MaxPosDiff = 0x40; // float
		constexpr auto MaxAngleDiff = 0x44; // float
		constexpr auto MaxScaleDiff = 0x48; // float
		constexpr auto MaxEffectorDiff = 0x4c; // float
		constexpr auto MinEffectorDiff = 0x50; // float
		constexpr auto EffectorDiffSocket = 0x54; // float
		constexpr auto ParentKeyScale = 0x58; // float
		constexpr auto bRetarget = 0x5c; // char : 1
		constexpr auto bActuallyFilterLinearKeys = 0x5c; // char : 1
	}

	namespace n_UCloudStorageBase {
		constexpr auto LocalCloudFiles = 0x38; // TArray<FString>
		constexpr auto bSuppressDelegateCalls = 0x48; // char : 1
	}

	namespace n_UBravoHotelTopInfoWidget {
		constexpr auto CharacterState = 0x250; // ECharacterState
		constexpr auto PreCharacterState = 0x251; // ECharacterState
		constexpr auto FallingWidget = 0x258; // UUserWidget*
		constexpr auto UW_AliveInfoWidget = 0x260; // UBravoHotelAliveInfoWidget*
		constexpr auto DamageLogWidgetRef = 0x268; // UUserWidget*
		constexpr auto bPerkDeckInitialized = 0x270; // bool
	}

	namespace n_UWheeledVehicleMovementComponentMotor {
		constexpr auto EngineSetup = 0x290; // FVehicleEngineData
		constexpr auto TransmissionSetup = 0x330; // FVehicleTransmissionData
		constexpr auto SteeringCurve = 0x360; // FRuntimeFloatCurve
	}

	namespace n_UUW-JetpackWidget_C {
		constexpr auto UberGraphFrame = 0x268; // FPointerToUberGraphFrame
		constexpr auto FuelGauge = 0x270; // UProgressBar*
		constexpr auto FuelIcon = 0x278; // UImage*
		constexpr auto FuelText = 0x280; // UTextBlock*
	}

	namespace n_ULowEntryParsedHashcash {
		constexpr auto Valid = 0x28; // bool
		constexpr auto Resource = 0x30; // FString
		constexpr auto Date = 0x40; // FDateTime
		constexpr auto Bits = 0x48; // int32_t
	}

	namespace n_UUW-Lobby_Craft_Success_Perk_Slot_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto perk_Icon_Scale = 0x250; // UWidgetAnimation*
		constexpr auto HorizontalBox_Rarity = 0x258; // UHorizontalBox*
		constexpr auto Image = 0x260; // UImage*
		constexpr auto Image_2 = 0x268; // UImage*
		constexpr auto Image_3 = 0x270; // UImage*
		constexpr auto Image_4 = 0x278; // UImage*
		constexpr auto Image_5 = 0x280; // UImage*
		constexpr auto Image_6 = 0x288; // UImage*
		constexpr auto Image_7 = 0x290; // UImage*
		constexpr auto Image_328 = 0x298; // UImage*
		constexpr auto Img_GradeBG = 0x2a0; // UImage*
		constexpr auto Img_Icon = 0x2a8; // UImage*
		constexpr auto ItemOptionInfo = 0x2b0; // FItemOption
	}

	namespace n_ANavSystemConfigOverride {
		constexpr auto NavigationSystemConfig = 0x318; // UNavigationSystemConfig*
		constexpr auto OverridePolicy = 0x320; // ENavSystemOverridePolicy
		constexpr auto bLoadOnClient = 0x321; // char : 1
	}

	namespace n_AAmbientSound {
		constexpr auto AudioComponent = 0x318; // UAudioComponent*
	}

	namespace n_UUW-PlayerMarkerWidget_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Anim_OnShow = 0x250; // UWidgetAnimation*
		constexpr auto Canvas_Move = 0x258; // UCanvasPanel*
		constexpr auto IconImage = 0x260; // UIconImage_C*
		constexpr auto Overlay_1 = 0x268; // UOverlay*
		constexpr auto PlayerMarker = 0x270; // UImage*
		constexpr auto SizeBox_IconImage = 0x278; // USizeBox*
		constexpr auto TeamIndex = 0x280; // UTextBlock*
		constexpr auto UW-CompassWidget_Item_Resuscitation = 0x288; // UUW-CompassWidget_Item_Resuscitation_C*
		constexpr auto WidgetSwitcher_Icon = 0x290; // UWidgetSwitcher*
		constexpr auto IsShowingAnimReserved = 0x298; // bool
		constexpr auto OnMarkerClicked = 0x2a0; // FMulticastInlineDelegate
		constexpr auto CurrentMarker = 0x2b0; // UImage*
		constexpr auto Map_PingTypeTexture = 0x2b8; // TMap<EPingType, UObject*>
		constexpr auto Map_PingItemTypeTexture = 0x308; // TMap<EItemPingIconType, UObject*>
		constexpr auto SupplyBoxNotOpen = 0x358; // UObject*
		constexpr auto SupplyBoxOpened = 0x360; // UObject*
		constexpr auto PlayerState = 0x368; // ABravoHotelPlayerState*
		constexpr auto IsOnMap = 0x370; // bool
		constexpr auto Selected = 0x371; // bool
		constexpr auto MyPing = 0x372; // bool
		constexpr auto OnMouseUp = 0x378; // FMulticastInlineDelegate
	}

	namespace n_UScrollBoxSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UMoviePlayerSettings {
		constexpr auto bWaitForMoviesToComplete = 0x28; // bool
		constexpr auto bMoviesAreSkippable = 0x29; // bool
		constexpr auto StartupMovies = 0x30; // TArray<FString>
	}

	namespace n_ABravoHotelMutiplayerPhysicsActor {
		constexpr auto RootNode = 0x318; // USceneComponent*
		constexpr auto SendController = 0x320; // APlayerController*
		constexpr auto BoxMesh = 0x360; // UStaticMeshComponent*
		constexpr auto LoopAction = 0x368; // bool
		constexpr auto StartAction = 0x369; // bool
		constexpr auto RepMoveTransform = 0x370; // FTransform
	}

	namespace n_ULowEntrySocketConnectionListenerCode {
		constexpr auto Stopped = 0x28; // bool
		constexpr auto RunExec = 0x29; // bool
		constexpr auto ConnectionSuccess = 0x2a; // bool
		constexpr auto JustConnected = 0x38; // bool
		constexpr auto WaitingForConnectionTime = 0x3c; // float
		constexpr auto SocketConnection = 0x40; // ULowEntrySocketConnection*
		constexpr auto LatentUUID = 0x48; // int32_t
	}

	namespace n_UUW-MatchEnd_DamageList_Item_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto HorizontalBox_HitPoint_Reversible = 0x250; // UHorizontalBox*
		constexpr auto HorizontalBox_Main_Reversible = 0x258; // UHorizontalBox*
		constexpr auto HorizontalBox_Rarity = 0x260; // UHorizontalBox*
		constexpr auto Image_DamegeType = 0x268; // UImage*
		constexpr auto Image_Sidebar = 0x270; // UImage*
		constexpr auto Image_Sidebar2 = 0x278; // UImage*
		constexpr auto Image_Weapon = 0x280; // UImage*
		constexpr auto Overlay_HitPoint = 0x288; // UOverlay*
		constexpr auto T_Damage_Reversible = 0x290; // UTextBlock*
		constexpr auto T_HitCount = 0x298; // UTextBlock*
		constexpr auto T_WeaponName_Reversible = 0x2a0; // UTextBlock*
		constexpr auto WidgetSwitcher_DamageIcon = 0x2a8; // UWidgetSwitcher*
	}

	namespace n_UARBasicLightEstimate {
		constexpr auto AmbientIntensityLumens = 0x28; // float
		constexpr auto AmbientColorTemperatureKelvin = 0x2c; // float
		constexpr auto AmbientColor = 0x30; // FLinearColor
	}

	namespace n_UBravoHotelJetpackWidget {
		constexpr auto GauageProgress = 0x248; // UProgressBar*
		constexpr auto GauageText = 0x250; // UTextBlock*
	}

	namespace n_UDatasmithStaticMeshIFCImportData {
		constexpr auto SourceGlobalId = 0x28; // FString
	}

	namespace n_APlayerStart {
		constexpr auto PlayerStartTag = 0x340; // FName
	}

	namespace n_ABravoHotelRangedWeapon {
		constexpr auto JointTargetLocationR = 0x1c00; // FVector
		constexpr auto MainWidgetRef = 0x1c10; // UBravoHotelMainWidget*
		constexpr auto CollideAlpha = 0x1c18; // float
		constexpr auto bCanSkipSpawnProjectile = 0x1c1c; // bool
		constexpr auto RecoilComponent = 0x1c20; // UBravoHotelRecoilComponent*
		constexpr auto FPSK_DeltaSocketLocation = 0x1c28; // FVector
		constexpr auto OnFinishSimulateBoltAction = 0x1c38; // FMulticastInlineDelegate
		constexpr auto bIsADS = 0x1c48; // bool
		constexpr auto BoltActionWeaponAnim = 0x1c50; // FAnimSlot
		constexpr auto bUseOverrideReloadMessage = 0x1c64; // bool
		constexpr auto CurrentOverrideMuzzleSmoke_NoAttach = 0x1c68; // UParticleSystem*
		constexpr auto ShellCasingArrows = 0x1c70; // TArray<UBravoHotelShellCasingArrowComponent*>
		constexpr auto ProjectileClass = 0x1c88; // ABravoHotelProjectileBase*
		constexpr auto bIsOneByOneReloading = 0x1ce0; // bool
		constexpr auto FPSK_DeltaSocketRotation = 0x1ce4; // FRotator
		constexpr auto OverrideMuzzleSmokeList = 0x1cf0; // TMap<FName, UParticleSystem*>
		constexpr auto WarmupTime = 0x1d44; // float
		constexpr auto CurrentState = 0x1d58; // EWeaponState
		constexpr auto MuzzleEffectComponent = 0x1d60; // UBravoHotelMuzzleEffectComponent*
		constexpr auto CollideTraceLength = 0x1d68; // float
		constexpr auto SwayGetter = 0x1d70; // UConditionedAbilityGetter*
		constexpr auto DamgeCorrectCurveByVelocity = 0x1d78; // UCurveFloat*
		constexpr auto OnEndSimulateFire = 0x1d80; // FMulticastInlineDelegate
		constexpr auto SpawnedFireCells = 0x1db0; // TArray<ABravoHotelProjectileMolotovFireCell*>
		constexpr auto bReady = 0x1e05; // bool
		constexpr auto HorizontalRecoilGetter = 0x1e08; // UConditionedAbilityGetter*
		constexpr auto bIsHeatScanActive = 0x1e14; // bool
		constexpr auto SpreadScaleFactorsOnFiring = 0x1e18; // TArray<float>
		constexpr auto ProneCollideTraceStartDelta = 0x1e28; // FVector
		constexpr auto bIsNeedBoltAction = 0x1e34; // char : 1
		constexpr auto SpreadScaleFactorsOnDefault = 0x1e88; // TArray<float>
		constexpr auto VerticalRecoilGetter = 0x1e98; // UConditionedAbilityGetter*
		constexpr auto FiringCountToLoop = 0x1ea4; // int32_t
		constexpr auto NoAmmoEvent = 0x1eb0; // UAkAudioEvent*
		constexpr auto TrailEffectName = 0x1eb8; // FString
		constexpr auto ZeroPointAngles = 0x1ec8; // TArray<FZeroPoint>
		constexpr auto RecoilCurve = 0x1ee0; // UCurveVector*
		constexpr auto OnStartSimulateFire = 0x1ee8; // FMulticastInlineDelegate
		constexpr auto ExplosionInfo = 0x1ef8; // FExplosionInfo
		constexpr auto bSpawnBulletParticleOnFire = 0x1f08; // bool
		constexpr auto AccuracyGetter = 0x1f68; // UConditionedAbilityGetter*
		constexpr auto JointTargetLocationL = 0x1f70; // FVector
		constexpr auto bIsFiring = 0x1f7c; // char : 1
		constexpr auto bWarmingUp = 0x1f7d; // bool
		constexpr auto bSpawnTrailEffect = 0x1f7e; // bool
		constexpr auto bPendingBurstFire = 0x1f7f; // char : 1
		constexpr auto BoltActionProneWeaponAnim = 0x1f80; // FAnimSlot
		constexpr auto OverrideReloadSuccessMessageTableIndex = 0x1fa8; // int32_t
		constexpr auto AutoReloadTimeStamp = 0x1fac; // float
		constexpr auto FireModePlayerAnim = 0x1fb0; // TMap<EWeaponFireMode, FAnimSlot>
		constexpr auto bIsEquippingVerticalgrip = 0x2000; // bool
		constexpr auto BoltActionDelayTime = 0x2004; // float
		constexpr auto bIsAimingDownside = 0x2008; // bool
		constexpr auto IncendiaryInfo = 0x200c; // FIncendiaryInfo
		constexpr auto CurrentZeroPointIndex = 0x2028; // int32_t
		constexpr auto AttachmentComponent = 0x2030; // UWeaponAttachmentComponent*
		constexpr auto ProjectileRandomSeed = 0x2040; // int32_t
		constexpr auto bAttachToCamera = 0x2044; // bool
		constexpr auto bPendingBoltAction = 0x2045; // char : 1
		constexpr auto bIsColliding = 0x2050; // bool
		constexpr auto OnReloadDelegate = 0x2058; // FMulticastInlineDelegate
		constexpr auto FireAnim = 0x2068; // FAnimSlot
		constexpr auto bWantsToFire = 0x2078; // char : 1
		constexpr auto bAutoAim = 0x20d0; // bool
		constexpr auto FireWeaponAnim = 0x20d8; // FAnimSlot
		constexpr auto bIsKeepingADS_WhileBoltAction = 0x20ec; // bool
		constexpr auto bPendingReload = 0x20ed; // char : 1
		constexpr auto CollideTraceStartDelta = 0x20f0; // FVector
		constexpr auto CrouchCollideTraceStartDelta = 0x2104; // FVector
		constexpr auto OverrideReloadFailMessageTableIndex = 0x2110; // int32_t
		constexpr auto BulletParticleSpawnArrow = 0x2190; // UBravoHotelShellCasingArrowComponent*
		constexpr auto WarmupPlayingHandle = 0x2198; // FAudioPlayingHandle
		constexpr auto bDrawCollideTraceSphereForDebug = 0x219c; // bool
		constexpr auto FireLoopSoundHandle = 0x21a0; // FAudioPlayingHandle
		constexpr auto FireSounds1P = 0x21a8; // FRangedWeaponFireSound
		constexpr auto FireModeWeaponAnim = 0x21c8; // TMap<EWeaponFireMode, FAnimSlot>
		constexpr auto DamageDistanceCurve = 0x2218; // UCurveFloat*
		constexpr auto BoltActionPlayerAnim = 0x2228; // FAnimSlot
		constexpr auto OverrideMuzzleFlashList = 0x2248; // TMap<FName, UParticleSystem*>
		constexpr auto OnAmmoReloadedDelegate = 0x2298; // FMulticastInlineDelegate
		constexpr auto bIsADSColliding = 0x22a8; // bool
		constexpr auto EffectorLocationR = 0x22ac; // FVector
		constexpr auto bLoopedFireAnim = 0x22b8; // char : 1
		constexpr auto bSpawnAutoAimTrailEffect = 0x22c8; // bool
		constexpr auto WeaponRecoilType = 0x22c9; // EWeaponRecoilType
		constexpr auto FireSounds3P = 0x22d0; // FRangedWeaponFireSound
		constexpr auto CurrentOverrideMuzzleFlash_NoAttach = 0x22f0; // UParticleSystem*
		constexpr auto bIsGatlingWeapon = 0x22f8; // bool
		constexpr auto OnFinishSimulateReload = 0x2300; // FMulticastInlineDelegate
		constexpr auto DeltaCollideHandIKDistance = 0x2310; // float
		constexpr auto DefaultZeroingDistance = 0x2318; // TArray<int32_t>
		constexpr auto FireMode = 0x2328; // EWeaponFireMode
		constexpr auto FireSocketName = 0x232c; // FName
		constexpr auto bServerShot = 0x2334; // bool
		constexpr auto BoltActionPronePlayerAnim = 0x2338; // FAnimSlot
	}

	namespace n_UInGameAdManager {
		constexpr auto bShouldPauseWhileAdOpen = 0x38; // char : 1
		constexpr auto ClickedBannerDelegates = 0x40; // TArray<FDelegate>
		constexpr auto ClosedAdDelegates = 0x50; // TArray<FDelegate>
	}

	namespace n_UMovieSceneAkTrack {
		constexpr auto Sections = 0x58; // TArray<UMovieSceneSection*>
		constexpr auto bIsAMasterTrack = 0x68; // char : 1
	}

	namespace n_ABravoHotelEjectingClip {
		constexpr auto EjectingSound = 0x338; // UAkAudioEvent*
	}

	namespace n_UMovieSceneSection {
		constexpr auto EvalOptions = 0x50; // FMovieSceneSectionEvalOptions
		constexpr auto Easing = 0x58; // FMovieSceneEasingSettings
		constexpr auto SectionRange = 0x90; // FMovieSceneFrameRange
		constexpr auto PreRollFrames = 0xa0; // FFrameNumber
		constexpr auto PostRollFrames = 0xa4; // FFrameNumber
		constexpr auto rowIndex = 0xa8; // int32_t
		constexpr auto OverlapPriority = 0xac; // int32_t
		constexpr auto bIsActive = 0xb0; // char : 1
		constexpr auto bIsLocked = 0xb0; // char : 1
		constexpr auto StartTime = 0xb4; // float
		constexpr auto EndTime = 0xb8; // float
		constexpr auto PrerollTime = 0xbc; // float
		constexpr auto PostrollTime = 0xc0; // float
		constexpr auto bIsInfinite = 0xc4; // char : 1
		constexpr auto bSupportsInfiniteRange = 0xc8; // bool
		constexpr auto BlendType = 0xc9; // FOptionalMovieSceneBlendType
	}

	namespace n_UUW-CompassRulerWidget_C {
		constexpr auto Image_2 = 0x248; // UImage*
		constexpr auto InvalidationBox_1 = 0x250; // UInvalidationBox*
		constexpr auto Switcher = 0x258; // UWidgetSwitcher*
		constexpr auto OwnDirection = 0x260; // float
	}

	namespace n_USlotItemWidget_C {
		constexpr auto UberGraphFrame = 0x4e8; // FPointerToUberGraphFrame
		constexpr auto Over = 0x4f0; // UWidgetAnimation*
		constexpr auto Button_107 = 0x4f8; // UButton*
		constexpr auto Button_441 = 0x500; // UButton*
		constexpr auto Button_Type = 0x508; // UButton*
		constexpr auto ButtonType = 0x510; // UCanvasPanel*
		constexpr auto ComboBoxString_237 = 0x518; // UComboBoxString*
		constexpr auto ComboBoxType = 0x520; // UCanvasPanel*
		constexpr auto Down = 0x528; // UImage*
		constexpr auto EditableText_80 = 0x530; // UEditableText*
		constexpr auto HorizontalBox_1 = 0x538; // UHorizontalBox*
		constexpr auto HorizontalBox_191 = 0x540; // UHorizontalBox*
		constexpr auto Image_153 = 0x548; // UImage*
		constexpr auto Image_204 = 0x550; // UImage*
		constexpr auto Image_414 = 0x558; // UImage*
		constexpr auto Key = 0x560; // UCanvasPanel*
		constexpr auto KeyImageMain = 0x568; // UKeyImageWidget_C*
		constexpr auto KeyImageSub = 0x570; // UKeyImageWidget_C*
		constexpr auto KeyLock = 0x578; // UTextBlock*
		constexpr auto LeftA = 0x580; // UArrowBtn_C*
		constexpr auto LeftA_2 = 0x588; // UArrowBtn_C*
		constexpr auto LockMain = 0x590; // UImage*
		constexpr auto LockSub = 0x598; // UImage*
		constexpr auto MainBG = 0x5a0; // UImage*
		constexpr auto MainKeyInput = 0x5a8; // UInputKeySelector*
		constexpr auto Overlay_215 = 0x5b0; // UOverlay*
		constexpr auto ProgressBar_150 = 0x5b8; // UProgressBar*
		constexpr auto RightA = 0x5c0; // UArrowBtn_C*
		constexpr auto RightA_2 = 0x5c8; // UArrowBtn_C*
		constexpr auto SelectBtn1 = 0x5d0; // UselectTypeBtn_C*
		constexpr auto SelectBtn2 = 0x5d8; // UselectTypeBtn_C*
		constexpr auto SelectBtn3 = 0x5e0; // UselectTypeBtn_C*
		constexpr auto SelectBtn4 = 0x5e8; // UselectTypeBtn_C*
		constexpr auto SelectBtn5 = 0x5f0; // UselectTypeBtn_C*
		constexpr auto SelectBtn6 = 0x5f8; // UselectTypeBtn_C*
		constexpr auto SelectType = 0x600; // UCanvasPanel*
		constexpr auto SelectValue = 0x608; // UTextBlock*
		constexpr auto Slider_139 = 0x610; // USlider*
		constexpr auto SliderType = 0x618; // UCanvasPanel*
		constexpr auto SubBG = 0x620; // UImage*
		constexpr auto SubKeyInput = 0x628; // UInputKeySelector*
		constexpr auto T_Button = 0x630; // UTextBlock*
		constexpr auto Title_Text = 0x638; // UTextBlock*
		constexpr auto Up = 0x640; // UImage*
		constexpr auto Value = 0x648; // UTextBlock*
		constexpr auto Value_2 = 0x650; // UTextBlock*
		constexpr auto WidgetSwitcher_1 = 0x658; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_281 = 0x660; // UWidgetSwitcher*
		constexpr auto Lock = 0x668; // bool
		constexpr auto Selected SeleteValue = 0x66c; // int32_t
		constexpr auto TotalListSize = 0x670; // int32_t
		constexpr auto Empty = 0x678; // TArray<TSoftObjectPtr<UTexture2D>>
		constexpr auto ButtonStyle = 0x688; // FButtonStyle
		constexpr auto NewVar_1 = 0x900; // FPointerEvent
		constexpr auto SliderIsInit = 0x970; // bool
		constexpr auto EmptyText = 0x978; // FText
		constexpr auto TempSaveComboBoxIndex = 0x990; // int32_t
		constexpr auto Temp = 0x998; // FInputChord
		constexpr auto TempValue = 0x9b8; // float
		constexpr auto PreSliderText = 0x9c0; // FText
		constexpr auto LResultString = 0x9d8; // FString
		constexpr auto have. = 0x9e8; // bool
		constexpr auto IsOnEditableText = 0x9e9; // bool
		constexpr auto CompletSettingData = 0x9ea; // bool
		constexpr auto CompleteSettingInfo = 0x9f0; // FSettingInfo
		constexpr auto TempSetting = 0xa78; // FSettingInfo
		constexpr auto ReMarkComboBox = 0xb00; // bool
	}

	namespace n_ABP-SpectatorPawn_C {
		constexpr auto UberGraphFrame = 0x3d8; // FPointerToUberGraphFrame
		constexpr auto Camera = 0x3e0; // UCameraComponent*
		constexpr auto SpringArm = 0x3e8; // USpringArmComponent*
		constexpr auto bKillCam = 0x3f0; // bool
	}

	namespace n_UAnimNotifyState_Trail {
		constexpr auto PSTemplate = 0x30; // UParticleSystem*
		constexpr auto FirstSocketName = 0x38; // FName
		constexpr auto SecondSocketName = 0x40; // FName
		constexpr auto WidthScaleMode = 0x48; // ETrailWidthMode
		constexpr auto WidthScaleCurve = 0x4c; // FName
		constexpr auto bRecycleSpawnedSystems = 0x54; // char : 1
	}

	namespace n_UParticleModuleLifetime_Seeded {
		constexpr auto RandomSeedInfo = 0x60; // FParticleRandomSeedInfo
	}

	namespace n_AWindDirectionalSource {
		constexpr auto Component = 0x318; // UWindDirectionalSourceComponent*
	}

	namespace n_UGizmoLocalFloatParameterSource {
		constexpr auto Value = 0x48; // float
		constexpr auto LastChange = 0x4c; // FGizmoFloatParameterChange
	}

	namespace n_UBravoHotelSceneCaptureComponent2D {
		constexpr auto TickRate = 0x938; // float
	}

	namespace n_ABravoHotelProjectileFireAx {
		constexpr auto SimulationActorClass = 0x678; // ABravoHotelSimulationActor*
		constexpr auto bAttachAbsolutely = 0x680; // bool
		constexpr auto FlybyEvent = 0x688; // UAkAudioEvent*
		constexpr auto FlybySoundHandle = 0x690; // FAudioPlayingHandle
	}

	namespace n_UMaterialExpressionDepthOfFieldFunction {
		constexpr auto FunctionValue = 0x40; // EDepthOfFieldFunctionValue
		constexpr auto Depth = 0x44; // FExpressionInput
	}

	namespace n_UParticleModuleLifetime {
		constexpr auto LifeTime = 0x30; // FRawDistributionFloat
	}

	namespace n_UMaterialExpressionSkyAtmosphereAerialPerspective {
		constexpr auto WorldPosition = 0x40; // FExpressionInput
	}

	namespace n_USubmixEffectReverbFastPreset {
		constexpr auto Settings = 0xa0; // FSubmixEffectReverbFastSettings
	}

	namespace n_UDistributionVectorParameterBase {
		constexpr auto ParameterName = 0x50; // FName
		constexpr auto MinInput = 0x58; // FVector
		constexpr auto MaxInput = 0x64; // FVector
		constexpr auto MinOutput = 0x70; // FVector
		constexpr auto MaxOutput = 0x7c; // FVector
		constexpr auto ParamModes = 0x88; // DistributionParamMode [0x3]
	}

	namespace n_UGeometryCacheCodecBase {
		constexpr auto TopologyRanges = 0x28; // TArray<int32_t>
	}

	namespace n_ULandscapeWeightmapUsage {
		constexpr auto ChannelUsage = 0x28; // ULandscapeComponent* [0x4]
		constexpr auto LayerGuid = 0x48; // FGuid
	}

	namespace n_UBP-CreateCharacterWidget_Web_C {
		constexpr auto UberGraphFrame = 0x308; // FPointerToUberGraphFrame
		constexpr auto CoherentUIGTWidget_90 = 0x310; // UCoherentUIGTWidget*
		constexpr auto UW-CustomizedCharacter = 0x318; // UUW-CustomizedCharacter_C*
		constexpr auto CurrentSceneType = 0x320; // ESceneType
	}

	namespace n_UUW-Matchend_DamageListBox_C {
		constexpr auto ScrollBox_DamageList = 0x248; // UScrollBox*
		constexpr auto UW-Matchend_BuffList_Popup = 0x250; // UUW-Matchend_BuffList_Popup_C*
		constexpr auto Timer_PlayDamageListAnim = 0x258; // FTimerHandle
		constexpr auto DamageListAnimDelayTime = 0x260; // float
		constexpr auto CurrentAnimIndex = 0x264; // int32_t
		constexpr auto BuffListPopupWidgetRef = 0x268; // UUW-Matchend_BuffList_Popup_C*
		constexpr auto Handle_ShowBuffListPopup = 0x270; // FTimerHandle
		constexpr auto HoverdWidgetIndex = 0x278; // int32_t
	}

	namespace n_UMediaPlaylist {
		constexpr auto Items = 0x28; // TArray<UMediaSource*>
	}

	namespace n_UDistributionFloatUniform {
		constexpr auto Min = 0x38; // float
		constexpr auto MAX = 0x3c; // float
	}

	namespace n_UParticleModuleSubUV {
		constexpr auto Animation = 0x30; // USubUVAnimation*
		constexpr auto SubImageIndex = 0x38; // FRawDistributionFloat
		constexpr auto bUseRealTime = 0x68; // char : 1
	}

	namespace n_UNavigationSystemConfig {
		constexpr auto NavigationSystemClass = 0x28; // FSoftClassPath
		constexpr auto SupportedAgentsMask = 0x40; // FNavAgentSelector
		constexpr auto DefaultAgentName = 0x44; // FName
		constexpr auto bIsOverriden = 0x4c; // char : 1
	}

	namespace n_USynthSound {
		constexpr auto OwningSynthComponent = 0x360; // USynthComponent*
	}

	namespace n_UAnimationSharingStateProcessor {
		constexpr auto AnimationStateEnum = 0x28; // TSoftObjectPtr<UEnum>
	}

	namespace n_UTextureRenderTarget {
		constexpr auto TargetGamma = 0xb8; // float
	}

	namespace n_UBravoHotelArmory {
		constexpr auto ArmoryMeshMap = 0x30; // TMap<FString, ABravoHotelArmoryMeshActor*>
		constexpr auto ChangeSceneDelegate = 0x80; // FMulticastInlineDelegate
		constexpr auto MouseEventDelegate = 0x90; // FMulticastInlineDelegate
		constexpr auto ResultInfo = 0xa0; // FCoh_ResultInfo
		constexpr auto CurrentMaterialCount = 0xd8; // int32_t
		constexpr auto SkipIdentifiedDelegate = 0xe0; // FMulticastInlineDelegate
		constexpr auto ArmoryTabDelegate = 0xf0; // FMulticastInlineDelegate
	}

	namespace n_UInputRouter {
		constexpr auto bAutoInvalidateOnHover = 0x28; // bool
		constexpr auto bAutoInvalidateOnCapture = 0x29; // bool
		constexpr auto ActiveInputBehaviors = 0x38; // UInputBehaviorSet*
	}

	namespace n_APawn {
		constexpr auto bUseControllerRotationPitch = 0x330; // char : 1
		constexpr auto bUseControllerRotationYaw = 0x330; // char : 1
		constexpr auto bUseControllerRotationRoll = 0x330; // char : 1
		constexpr auto bCanAffectNavigationGeneration = 0x330; // char : 1
		constexpr auto BaseEyeHeight = 0x334; // float
		constexpr auto AutoPossessPlayer = 0x338; // EAutoReceiveInput
		constexpr auto AutoPossessAI = 0x339; // EAutoPossessAI
		constexpr auto RemoteViewPitch = 0x33a; // uint16_t
		constexpr auto RemoteViewYaw = 0x33c; // uint16_t
		constexpr auto AIControllerClass = 0x340; // AController*
		constexpr auto PlayerState = 0x348; // APlayerState*
		constexpr auto LastHitBy = 0x358; // AController*
		constexpr auto Controller = 0x360; // AController*
		constexpr auto ControlInputVector = 0x36c; // FVector
		constexpr auto LastControlInputVector = 0x378; // FVector
	}

	namespace n_UMaterialExpressionAntialiasedTextureMask {
		constexpr auto threshold = 0xf0; // float
		constexpr auto Channel = 0xf4; // ETextureColorChannel
	}

	namespace n_UUW-Revival_PayPopup_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Bg = 0x250; // UImage*
		constexpr auto Button_Cancle = 0x258; // UButton*
		constexpr auto Button_OK = 0x260; // UButton*
		constexpr auto Image = 0x268; // UImage*
		constexpr auto Image_168 = 0x270; // UImage*
		constexpr auto Image_423 = 0x278; // UImage*
		constexpr auto Image_853 = 0x280; // UImage*
		constexpr auto Image_1449 = 0x288; // UImage*
		constexpr auto Image_1451 = 0x290; // UImage*
		constexpr auto Image_1452 = 0x298; // UImage*
		constexpr auto Image_1453 = 0x2a0; // UImage*
		constexpr auto Image_1454 = 0x2a8; // UImage*
		constexpr auto Image_1965 = 0x2b0; // UImage*
		constexpr auto Image_1967 = 0x2b8; // UImage*
		constexpr auto Image_1968 = 0x2c0; // UImage*
		constexpr auto Image_1969 = 0x2c8; // UImage*
		constexpr auto Image_1970 = 0x2d0; // UImage*
		constexpr auto Image_1971 = 0x2d8; // UImage*
		constexpr auto Image_1972 = 0x2e0; // UImage*
		constexpr auto Image_1973 = 0x2e8; // UImage*
		constexpr auto Image_1974 = 0x2f0; // UImage*
		constexpr auto Image_1975 = 0x2f8; // UImage*
		constexpr auto Image_1976 = 0x300; // UImage*
		constexpr auto Image_1977 = 0x308; // UImage*
		constexpr auto Image_1978 = 0x310; // UImage*
		constexpr auto Image_2324 = 0x318; // UImage*
		constexpr auto TextBlock_CurrentGold = 0x320; // UTextBlock*
		constexpr auto TextBlock_Price = 0x328; // UTextBlock*
		constexpr auto TargetCharacter = 0x330; // ABravoHotelCharacter*
	}

	namespace n_UMaterialExpressionLandscapeLayerSwitch {
		constexpr auto LayerUsed = 0x40; // FExpressionInput
		constexpr auto LayerNotUsed = 0x54; // FExpressionInput
		constexpr auto ParameterName = 0x68; // FName
		constexpr auto PreviewUsed = 0x70; // char : 1
		constexpr auto ExpressionGUID = 0x74; // FGuid
	}

	namespace n_UParticleModuleLocation_Seeded {
		constexpr auto RandomSeedInfo = 0x80; // FParticleRandomSeedInfo
	}

	namespace n_UMagicLeapHeadTrackingNotificationsComponent {
		constexpr auto OnHeadTrackingLost = 0x140; // FMulticastInlineDelegate
		constexpr auto OnHeadTrackingRecovered = 0x150; // FMulticastInlineDelegate
		constexpr auto OnHeadTrackingRecoveryFailed = 0x160; // FMulticastInlineDelegate
		constexpr auto OnHeadTrackingNewSessionStarted = 0x170; // FMulticastInlineDelegate
	}

	namespace n_USoundNodeBranch {
		constexpr auto BoolParameterName = 0x48; // FName
	}

	namespace n_UInterpTrackInstDirector {
		constexpr auto OldViewTarget = 0x28; // AActor*
	}

	namespace n_UPoseWatch {
		constexpr auto Node = 0x28; // UEdGraphNode*
		constexpr auto PoseWatchColour = 0x30; // FColor
	}

	namespace n_UPropertyValue {
		constexpr auto Properties = 0x88; // TArray<TFieldPath<FProperty>>
		constexpr auto PropertyIndices = 0x98; // TArray<int32_t>
		constexpr auto CapturedPropSegments = 0xa8; // TArray<FCapturedPropSegment>
		constexpr auto FullDisplayString = 0xb8; // FString
		constexpr auto PropertySetterName = 0xc8; // FName
		constexpr auto PropertySetterParameterDefaults = 0xd0; // TMap<FString, FString>
		constexpr auto bHasRecordedData = 0x120; // bool
		constexpr auto LeafPropertyClass = 0x128; // UObject*
		constexpr auto ValueBytes = 0x138; // TArray<char>
		constexpr auto PropCategory = 0x148; // EPropertyValueCategory
	}

	namespace n_UUW-Tutorial_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Bg = 0x250; // UImage*
		constexpr auto btn_Cancel = 0x258; // UButton*
		constexpr auto btn_OK = 0x260; // UButton*
		constexpr auto Button_Focus = 0x268; // UButton*
		constexpr auto Button_Focus2 = 0x270; // UButton*
		constexpr auto CanvasPanel_Exit = 0x278; // UCanvasPanel*
		constexpr auto HorizontalBox_1 = 0x280; // UHorizontalBox*
		constexpr auto Image_2 = 0x288; // UImage*
		constexpr auto Image_223 = 0x290; // UImage*
		constexpr auto Img_Movie = 0x298; // UImage*
		constexpr auto RichTextBlock_244 = 0x2a0; // URichTextBlock*
		constexpr auto MediaPlayer = 0x2a8; // UMediaPlayer*
		constexpr auto bPopup = 0x2b0; // bool
		constexpr auto MediaSoundComp = 0x2b8; // UMediaSoundComponent*
		constexpr auto GammaIntensity = 0x2c0; // float
		constexpr auto Game Settings = 0x2c8; // UBP_GameSettings_C*
		constexpr auto SkipNoticeTimer = 0x2d0; // FTimerHandle
		constexpr auto MediaTexture = 0x2d8; // UMediaTexture*
		constexpr auto Media = 0x2e0; // UFileMediaSource*
		constexpr auto NextScene = 0x2e8; // bool
	}

	namespace n_UMovieSceneGeometryCollectionTrack {
		constexpr auto AnimationSections = 0x58; // TArray<UMovieSceneSection*>
	}

	namespace n_UBravoHotelWorldMapWidget {
		constexpr auto OnChangeWorldMapZoomLevelDelegate = 0x250; // FMulticastInlineDelegate
		constexpr auto ServerTestPoint = 0x260; // FTestPoint
	}

	namespace n_UParticleModuleAccelerationDrag {
		constexpr auto DragCoefficient = 0x38; // UDistributionFloat*
		constexpr auto DragCoefficientRaw = 0x40; // FRawDistributionFloat
	}

	namespace n_UARTrackedGeometry {
		constexpr auto UniqueID = 0x28; // FGuid
		constexpr auto LocalToTrackingTransform = 0x40; // FTransform
		constexpr auto LocalToAlignedTrackingTransform = 0x70; // FTransform
		constexpr auto TrackingState = 0xa0; // EARTrackingState
		constexpr auto UnderlyingMesh = 0xb0; // UMRMeshComponent*
		constexpr auto ObjectClassification = 0xb8; // EARObjectClassification
		constexpr auto LastUpdateFrameNumber = 0xd0; // int32_t
		constexpr auto DebugName = 0xe0; // FName
	}

	namespace n_UForceFeedbackAttenuation {
		constexpr auto Attenuation = 0x28; // FForceFeedbackAttenuationSettings
	}

	namespace n_ACameraRig_Rail {
		constexpr auto CurrentPositionOnRail = 0x318; // float
		constexpr auto bLockOrientationToRail = 0x31c; // bool
		constexpr auto TransformComponent = 0x320; // USceneComponent*
		constexpr auto RailSplineComponent = 0x328; // USplineComponent*
		constexpr auto RailCameraMount = 0x330; // USceneComponent*
	}

	namespace n_UParticleModuleVelocity_Seeded {
		constexpr auto RandomSeedInfo = 0xb0; // FParticleRandomSeedInfo
	}

	namespace n_UBravoHotelAnimNotifyState_AttachWeaponToLHand {
		constexpr auto WeaponBone = 0x30; // FName
	}

	namespace n_ABP-DefaultWheeledVehicle_C {
		constexpr auto UberGraphFrame = 0xd68; // FPointerToUberGraphFrame
		constexpr auto TeamInfoUpdater = 0xd70; // UTeamInfoUpdaterComponent*
		constexpr auto Timeline_0_NewTrack_0_FB4F6B44434A25E409AE66987076220A = 0xd78; // float
		constexpr auto Timeline_0__Direction_FB4F6B44434A25E409AE66987076220A = 0xd7c; // ETimelineDirection
		constexpr auto Timeline_1 = 0xd80; // UTimelineComponent*
		constexpr auto EngineSound = 0xd88; // UAudioComponent*
	}

	namespace n_UUW-Matchend_DamageList_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Anim = 0x250; // UWidgetAnimation*
		constexpr auto Button_CheckHover = 0x258; // UButton*
		constexpr auto Button_CheckHover_2 = 0x260; // UButton*
		constexpr auto CanvasPanel_BuffBottom = 0x268; // UCanvasPanel*
		constexpr auto CanvasPanel_BuffTop = 0x270; // UCanvasPanel*
		constexpr auto CanvasPanel_Killer = 0x278; // UCanvasPanel*
		constexpr auto CanvasPanel_Main = 0x280; // UCanvasPanel*
		constexpr auto CanvasPanel_Me = 0x288; // UCanvasPanel*
		constexpr auto CanvasPanel_None = 0x290; // UCanvasPanel*
		constexpr auto Image_9 = 0x298; // UImage*
		constexpr auto Image_124 = 0x2a0; // UImage*
		constexpr auto Image_681 = 0x2a8; // UImage*
		constexpr auto Image_992 = 0x2b0; // UImage*
		constexpr auto Image_Last = 0x2b8; // UImage*
		constexpr auto Image_OutLine_Killer = 0x2c0; // UImage*
		constexpr auto Image_OutLine_Me = 0x2c8; // UImage*
		constexpr auto SizeBox_Last = 0x2d0; // USizeBox*
		constexpr auto UW-MatchEnd_DamageList_Item_Killer = 0x2d8; // UUW-MatchEnd_DamageList_Item_C*
		constexpr auto UW-MatchEnd_DamageList_Item_Me = 0x2e0; // UUW-MatchEnd_DamageList_Item_C*
		constexpr auto UW-MatchEnd_DamageList_Item_None = 0x2e8; // UUW-MatchEnd_DamageList_Item_C*
		constexpr auto WidgetSwitcher_DamageCauser = 0x2f0; // UWidgetSwitcher*
		constexpr auto DiedDamageInfo = 0x2f8; // FDiedDamageInfo
		constexpr auto bIsLast = 0xed0; // bool
		constexpr auto EventDispatcher_HoverDamageList = 0xed8; // FMulticastInlineDelegate
		constexpr auto WidgetIndex = 0xee8; // int32_t
	}

	namespace n_UParticleModuleMeshRotationRateOverLife {
		constexpr auto RotRate = 0x30; // FRawDistributionVector
		constexpr auto bScaleRotRate = 0x78; // char : 1
	}

	namespace n_UNavigationGraphNodeComponent {
		constexpr auto Node = 0x230; // FNavGraphNode
		constexpr auto NextNodeComponent = 0x248; // UNavigationGraphNodeComponent*
		constexpr auto PrevNodeComponent = 0x250; // UNavigationGraphNodeComponent*
	}

	namespace n_UBTDecorator_TimeLimit {
		constexpr auto TimeLimit = 0x68; // float
	}

	namespace n_UARTrackedQRCode {
		constexpr auto QRCode = 0xf8; // FString
		constexpr auto Version = 0x108; // int32_t
	}

	namespace n_USkeletalMeshSimplificationSettings {
		constexpr auto SkeletalMeshReductionModuleName = 0x38; // FName
	}

	namespace n_UGizmoConstantAxisSource {
		constexpr auto Origin = 0x30; // FVector
		constexpr auto Direction = 0x3c; // FVector
	}

	namespace n_UBTTask_GameplayTaskBase {
		constexpr auto bWaitForGameplayTask = 0x70; // char : 1
	}

	namespace n_ULowEntryLatentActionInteger {
		constexpr auto Finished = 0x28; // bool
		constexpr auto Result = 0x2c; // int32_t
		constexpr auto KeepAliveCount = 0x30; // int32_t
	}

	namespace n_UNiagaraPreviewAxis_InterpParamInt32 {
		constexpr auto Min = 0x38; // int32_t
		constexpr auto MAX = 0x3c; // int32_t
	}

	namespace n_UMagicLeapARPinSettings {
		constexpr auto UpdateCheckFrequency = 0x28; // float
		constexpr auto OnUpdatedEventTriggerDelta = 0x2c; // FMagicLeapARPinState
	}

	namespace n_UDatasmithStaticMeshTemplate {
		constexpr auto SectionInfoMap = 0x30; // FDatasmithMeshSectionInfoMapTemplate
		constexpr auto LightMapCoordinateIndex = 0x80; // int32_t
		constexpr auto LightMapResolution = 0x84; // int32_t
		constexpr auto BuildSettings = 0x88; // TArray<FDatasmithMeshBuildSettingsTemplate>
		constexpr auto StaticMaterials = 0x98; // TArray<FDatasmithStaticMaterialTemplate>
	}

	namespace n_ULandscapeComponent {
		constexpr auto SectionBaseX = 0x4b0; // int32_t
		constexpr auto SectionBaseY = 0x4b4; // int32_t
		constexpr auto ComponentSizeQuads = 0x4b8; // int32_t
		constexpr auto SubsectionSizeQuads = 0x4bc; // int32_t
		constexpr auto NumSubsections = 0x4c0; // int32_t
		constexpr auto OverrideMaterial = 0x4c8; // UMaterialInterface*
		constexpr auto OverrideHoleMaterial = 0x4d0; // UMaterialInterface*
		constexpr auto OverrideMaterials = 0x4d8; // TArray<FLandscapeComponentMaterialOverride>
		constexpr auto MaterialInstances = 0x4e8; // TArray<UMaterialInstanceConstant*>
		constexpr auto MaterialInstancesDynamic = 0x4f8; // TArray<UMaterialInstanceDynamic*>
		constexpr auto LODIndexToMaterialIndex = 0x508; // TArray<int8_t>
		constexpr auto MaterialIndexToDisabledTessellationMaterial = 0x518; // TArray<int8_t>
		constexpr auto XYOffsetmapTexture = 0x528; // UTexture2D*
		constexpr auto WeightmapScaleBias = 0x530; // FVector4
		constexpr auto WeightmapSubsectionOffset = 0x540; // float
		constexpr auto HeightmapScaleBias = 0x550; // FVector4
		constexpr auto CachedLocalBox = 0x560; // FBox
		constexpr auto CollisionComponent = 0x57c; // LazyObjectProperty
		constexpr auto HeightmapTexture = 0x598; // UTexture2D*
		constexpr auto WeightmapLayerAllocations = 0x5a0; // TArray<FWeightmapLayerAllocationInfo>
		constexpr auto WeightmapTextures = 0x5b0; // TArray<UTexture2D*>
		constexpr auto MapBuildDataId = 0x5c0; // FGuid
		constexpr auto IrrelevantLights = 0x5d0; // TArray<FGuid>
		constexpr auto CollisionMipLevel = 0x5e0; // int32_t
		constexpr auto SimpleCollisionMipLevel = 0x5e4; // int32_t
		constexpr auto NegativeZBoundsExtension = 0x5e8; // float
		constexpr auto PositiveZBoundsExtension = 0x5ec; // float
		constexpr auto StaticLightingResolution = 0x5f0; // float
		constexpr auto ForcedLOD = 0x5f4; // int32_t
		constexpr auto LODBias = 0x5f8; // int32_t
		constexpr auto StateID = 0x5fc; // FGuid
		constexpr auto BakedTextureMaterialGuid = 0x60c; // FGuid
		constexpr auto GIBakedBaseColorTexture = 0x620; // UTexture2D*
		constexpr auto MobileBlendableLayerMask = 0x628; // char
		constexpr auto MobileMaterialInterface = 0x630; // UMaterialInterface*
		constexpr auto MobileMaterialInterfaces = 0x638; // TArray<UMaterialInterface*>
		constexpr auto MobileWeightmapTextures = 0x648; // TArray<UTexture2D*>
	}

	namespace n_UGameplayTagsList {
		constexpr auto ConfigFileName = 0x28; // FString
		constexpr auto GameplayTagList = 0x38; // TArray<FGameplayTagTableRow>
	}

	namespace n_UUW-Matchend_BuffList_C {
		constexpr auto CanvasPanel_Buff = 0x248; // UCanvasPanel*
		constexpr auto Image_Icon_Buff = 0x250; // UImage*
		constexpr auto Image_Icon_BuffBg = 0x258; // UImage*
		constexpr auto Image_Icon_Ultimate = 0x260; // UImage*
		constexpr auto SizeBox_Perk = 0x268; // USizeBox*
		constexpr auto SizeBox_Ultimate = 0x270; // USizeBox*
		constexpr auto T_Desc = 0x278; // UTextBlock*
		constexpr auto UW-Inventory_PerkSlot = 0x280; // UUW-Inventory_PerkSlot_C*
		constexpr auto UW-MatchEnd_ItemIcon = 0x288; // UUW-MatchEnd_ItemIcon_C*
		constexpr auto WidgetSwitcher_BuffType = 0x290; // UWidgetSwitcher*
	}

	namespace n_UMovieSceneEasingExternalCurve {
		constexpr auto Curve = 0x30; // UCurveFloat*
	}

	namespace n_UUW-VehicleSubInfo_Base_C {
		constexpr auto MySeatColor = 0x248; // FLinearColor
		constexpr auto WheelGroup = 0x258; // UCanvasPanel*
		constexpr auto SeatGroup = 0x260; // UCanvasPanel*
	}

	namespace n_UMaterialExpressionVertexInterpolator {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_ABravoHotelMagazineForDrop {
		constexpr auto MagazineMeshComponent = 0x318; // UStaticMeshComponent*
		constexpr auto SpawnedSocketTransform = 0x320; // FTransform
		constexpr auto OwnerWeaponRef = 0x350; // ABravoHotelRangedWeapon*
	}

	namespace n_UBravoHotelCustomizedCharacter {
		constexpr auto MoveLobbyCharacterWearableDelegate = 0x30; // FMulticastInlineDelegate
		constexpr auto MoveLobbyCharacterAppearanceDelegate = 0x40; // FMulticastInlineDelegate
		constexpr auto MouseEventDelegate = 0x50; // FMulticastInlineDelegate
		constexpr auto WearableMenu = 0x60; // FString
	}

	namespace n_UMaterialExpressionCustom {
		constexpr auto Code = 0x40; // FString
		constexpr auto OutputType = 0x50; // ECustomMaterialOutputType
		constexpr auto Description = 0x58; // FString
		constexpr auto Inputs = 0x68; // TArray<FCustomInput>
		constexpr auto AdditionalDefines = 0x78; // TArray<FCustomDefine>
		constexpr auto IncludeFilePaths = 0x88; // TArray<FString>
	}

	namespace n_UMovieSceneIntegerSection {
		constexpr auto IntegerCurve = 0xe0; // FMovieSceneIntegerChannel
	}

	namespace n_UParticleModuleAccelerationBase {
		constexpr auto bAlwaysInWorldSpace = 0x30; // char : 1
	}

	namespace n_AAkSpatialAudioVolume {
		constexpr auto SurfaceReflectorSet = 0x350; // UAkSurfaceReflectorSetComponent*
		constexpr auto LateReverb = 0x358; // UAkLateReverbComponent*
		constexpr auto Room = 0x360; // UAkRoomComponent*
	}

	namespace n_UBravoHotelVehicleMovementComponent4W {
		constexpr auto DifferentialSetup = 0x618; // FVehicleDifferential4WData
		constexpr auto WreckedDifferentialLateralWeights = 0x638; // TArray<float>
		constexpr auto AckermannAccuracy = 0x648; // float
	}

	namespace n_UBravoHotelAudioEmitterComponent {
		constexpr auto bUseEventRadiusAsMinBounds = 0x480; // bool
		constexpr auto MinBoundsRadius = 0x484; // float
		constexpr auto EmitterRegisteredEvent = 0x498; // FMulticastInlineDelegate
		constexpr auto EmitterUnregisteredEvent = 0x4a8; // FMulticastInlineDelegate
	}

	namespace n_UAIPerceptionSystem {
		constexpr auto Senses = 0x88; // TArray<UAISense*>
		constexpr auto PerceptionAgingRate = 0x98; // float
	}

	namespace n_UMaterialExpressionDistance {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_UEnvQueryGenerator_Composite {
		constexpr auto Generators = 0x50; // TArray<UEnvQueryGenerator*>
		constexpr auto bAllowDifferentItemTypes = 0x60; // char : 1
		constexpr auto bHasMatchingItemType = 0x60; // char : 1
		constexpr auto ForcedItemType = 0x68; // UEnvQueryItemType*
	}

	namespace n_UNiagaraComponent {
		constexpr auto Asset = 0x4b0; // UNiagaraSystem*
		constexpr auto TickBehavior = 0x4b8; // ENiagaraTickBehavior
		constexpr auto OverrideParameters = 0x4c0; // FNiagaraUserRedirectionParameterStore
		constexpr auto bForceSolo = 0x5c8; // char : 1
		constexpr auto bAutoDestroy = 0x5f4; // char : 1
		constexpr auto bRenderingEnabled = 0x5f4; // char : 1
		constexpr auto bAutoManageAttachment = 0x5f4; // char : 1
		constexpr auto bAutoAttachWeldSimulatedBodies = 0x5f4; // char : 1
		constexpr auto MaxTimeBeforeForceUpdateTransform = 0x5f8; // float
		constexpr auto OnSystemFinished = 0x600; // FMulticastInlineDelegate
		constexpr auto AutoAttachParent = 0x610; // TWeakObjectPtr<USceneComponent>
		constexpr auto AutoAttachSocketName = 0x618; // FName
		constexpr auto AutoAttachLocationRule = 0x620; // EAttachmentRule
		constexpr auto AutoAttachRotationRule = 0x621; // EAttachmentRule
		constexpr auto AutoAttachScaleRule = 0x622; // EAttachmentRule
	}

	namespace n_USoundNodeLooping {
		constexpr auto LoopCount = 0x48; // int32_t
		constexpr auto bLoopIndefinitely = 0x4c; // char : 1
	}

	namespace n_UThrobber {
		constexpr auto NumberOfPieces = 0x108; // int32_t
		constexpr auto bAnimateHorizontally = 0x10c; // bool
		constexpr auto bAnimateVertically = 0x10d; // bool
		constexpr auto bAnimateOpacity = 0x10e; // bool
		constexpr auto PieceImage = 0x110; // USlateBrushAsset*
		constexpr auto Image = 0x118; // FSlateBrush
	}

	namespace n_UMovieScenePrimitiveMaterialSection {
		constexpr auto MaterialChannel = 0xe0; // FMovieSceneObjectPathChannel
	}

	namespace n_ABravoHotelArmoryMeshActor {
		constexpr auto ArmoryMesh = 0x318; // UStaticMeshComponent*
		constexpr auto DefaultTransform = 0x320; // FTransform
		constexpr auto LocationOffset = 0x350; // FVector
		constexpr auto RotationOffset = 0x35c; // FRotator
		constexpr auto ScaleOffset = 0x368; // FVector
	}

	namespace n_ABravoHotelProjectileFlame {
		constexpr auto OverlappedVehicles = 0x678; // TSet<TWeakObjectPtr<AActor>>
		constexpr auto FlameParticle = 0x6c8; // UParticleSystemComponent*
		constexpr auto FlameEndParticle = 0x6d0; // UParticleSystemComponent*
		constexpr auto FireCellClass = 0x6d8; // AActor*
		constexpr auto LifeTime = 0x6e0; // float
		constexpr auto DamageTime = 0x6e4; // float
		constexpr auto FireDamage = 0x6e8; // float
		constexpr auto FireShrinkTime = 0x6ec; // float
		constexpr auto FireCellSpawnTime = 0x6f0; // float
		constexpr auto FirePropagationRange = 0x6f4; // float
		constexpr auto FirePropagationLevelMax = 0x6f8; // int32_t
		constexpr auto FirePropagationLevelWidth = 0x6fc; // float
		constexpr auto FirePropagationDivideAnglePerLevel = 0x700; // TArray<float>
		constexpr auto FlybyEvent = 0x710; // UAkAudioEvent*
		constexpr auto FlybySoundHandle = 0x718; // FAudioPlayingHandle
		constexpr auto WeaponName = 0x71c; // FName
		constexpr auto NewWeaponName = 0x728; // FString
	}

	namespace n_UAchievementWriteCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UBHReplicatedAppearanceInfo {
		constexpr auto AppearanceInfo = 0xc0; // FRepCharacterAppearanceInfo
		constexpr auto TimerHandle_ReplicatedAppearanceInfo = 0xd8; // FTimerHandle
	}

	namespace n_AFieldSystemActor {
		constexpr auto FieldSystemComponent = 0x318; // UFieldSystemComponent*
	}

	namespace n_UPlatformInterfaceBase {
		constexpr auto AllDelegates = 0x28; // TArray<FDelegateArray>
	}

	namespace n_UAkItemProperties {
		constexpr auto OnSelectionChanged = 0x108; // FMulticastInlineDelegate
		constexpr auto OnPropertyDragged = 0x118; // FMulticastInlineDelegate
	}

	namespace n_UBravoHotelAudioRoomComponent {
		constexpr auto ParentMeshComponent = 0x288; // UStaticMeshComponent*
		constexpr auto OcclusionMethod = 0x290; // EOcclusionMethod
		constexpr auto AmbienceState = 0x298; // FString
		constexpr auto bIsOnRoof = 0x2a8; // bool
		constexpr auto OcclusionHeightLevel = 0x2a9; // int8_t
		constexpr auto OcclusionDepthLevel = 0x2aa; // char
		constexpr auto IndoorConditionTargets = 0x2ab; // char
		constexpr auto HighestLevelInGroup = 0x2c0; // int8_t
		constexpr auto MeshType = 0x2d9; // AkMeshType
		constexpr auto LOD = 0x2dc; // int32_t
		constexpr auto WeldingThreshold = 0x2e0; // float
		constexpr auto StaticMeshSurfaceOverride = 0x2e8; // TMap<UMaterialInterface*, FAkGeometrySurfaceOverride>
		constexpr auto CollisionMeshSurfaceOverride = 0x338; // FAkGeometrySurfaceOverride
		constexpr auto bEnableDiffraction = 0x348; // char : 1
		constexpr auto bEnableDiffractionOnBoundaryEdges = 0x348; // char : 1
		constexpr auto GeometryData = 0x350; // FAudioGeometryData
		constexpr auto AuxBus = 0x400; // UAkAuxBus*
		constexpr auto AuxBusName = 0x408; // FString
		constexpr auto SendLevel = 0x418; // float
		constexpr auto FadeRate = 0x41c; // float
	}

	namespace n_ARectLight {
		constexpr auto RectLightComponent = 0x328; // URectLightComponent*
	}

	namespace n_USimplygonVertexColorCaster {
		constexpr auto VertexColorCasterSettings = 0x28; // FVertexColorCasterSettings
	}

	namespace n_UUW-ListWidget_DamageLog_C {
		constexpr auto NewRichText = 0x260; // URichTextBlock*
		constexpr auto T_Damage = 0x268; // UTextBlock*
		constexpr auto T_DamageCauser = 0x270; // UTextBlock*
		constexpr auto T_DamageResult = 0x278; // UTextBlock*
		constexpr auto T_HeadShot = 0x280; // UTextBlock*
		constexpr auto T_HitCount = 0x288; // UTextBlock*
		constexpr auto T_HitType = 0x290; // UTextBlock*
		constexpr auto T_TargetClass = 0x298; // UTextBlock*
		constexpr auto T_TargetLevel = 0x2a0; // UTextBlock*
		constexpr auto T_TargetName = 0x2a8; // UTextBlock*
		constexpr auto T_TargetWeapon = 0x2b0; // UTextBlock*
		constexpr auto T_WeaponLevel = 0x2b8; // UTextBlock*
		constexpr auto DamageLogInfo = 0x2c0; // FHitDamageLogInfo
		constexpr auto LogTime = 0xe10; // float
		constexpr auto LogStackValidTime = 0xe14; // float
	}

	namespace n_UNavMovementComponent {
		constexpr auto NavAgentProps = 0xf0; // FNavAgentProperties
		constexpr auto FixedPathBrakingDistance = 0x120; // float
		constexpr auto bUpdateNavAgentWithOwnersCollision = 0x124; // char : 1
		constexpr auto bUseAccelerationForPaths = 0x124; // char : 1
		constexpr auto bUseFixedBrakingDistanceForPaths = 0x124; // char : 1
		constexpr auto MovementState = 0x125; // FMovementProperties
		constexpr auto PathFollowingComp = 0x128; // UObject*
	}

	namespace n_AGeometryCollectionRenderLevelSetActor {
		constexpr auto TargetVolumeTexture = 0x318; // UVolumeTexture*
		constexpr auto RayMarchMaterial = 0x320; // UMaterial*
		constexpr auto SurfaceTolerance = 0x328; // float
		constexpr auto Isovalue = 0x32c; // float
		constexpr auto Enabled = 0x330; // bool
		constexpr auto RenderVolumeBoundingBox = 0x331; // bool
	}

	namespace n_ULightMapVirtualTexture2D {
		constexpr auto TypeToLayer = 0xe8; // TArray<int8_t>
	}

	namespace n_UFXSystemAsset {
		constexpr auto MaxPoolSize = 0x28; // uint32_t
	}

	namespace n_ABP-AmplifierEffect_C {
		constexpr auto UberGraphFrame = 0x318; // FPointerToUberGraphFrame
		constexpr auto Widget = 0x320; // UWidgetComponent*
		constexpr auto DefaultSceneRoot = 0x328; // USceneComponent*
		constexpr auto TargetCharacter = 0x330; // ABravoHotelCharacter*
		constexpr auto LoudnessCurve = 0x338; // UCurveFloat*
		constexpr auto AmplifierLength = 0x340; // float
		constexpr auto TagetGroundState = 0x344; // ECharacterGroundState
		constexpr auto IsFiring = 0x345; // bool
		constexpr auto CurrentWeapon = 0x348; // ABravoHotelRangedWeapon*
		constexpr auto SingleTimerEvent = 0x350; // FTimerHandle
		constexpr auto IsSingleFiring = 0x358; // bool
	}

	namespace n_UMaterialExpressionClearCoatNormalCustomOutput {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_AGeometryCacheActor {
		constexpr auto GeometryCacheComponent = 0x318; // UGeometryCacheComponent*
	}

	namespace n_UUserDefinedEnum {
		constexpr auto DisplayNameMap = 0x60; // TMap<FName, FText>
	}

	namespace n_USimplygonAmbientOcclusionCaster {
		constexpr auto AmbientOcclusionCasterSettings = 0x28; // FAmbientOcclusionCasterSettings
	}

	namespace n_UBravoHotelAutoMoveSaveGame {
		constexpr auto StartPos = 0x28; // FVector
		constexpr auto RotationKeyTime = 0x38; // TArray<float>
		constexpr auto RotationData = 0x48; // TArray<FRotator>
		constexpr auto MoveKeyTime = 0x58; // TArray<float>
		constexpr auto MoveData = 0x68; // TArray<FVector>
		constexpr auto RunKeyTime = 0x78; // TArray<float>
		constexpr auto RunData = 0x88; // TArray<bool>
		constexpr auto ActionKeyTime = 0x98; // TArray<float>
		constexpr auto ActionData = 0xa8; // TArray<EAutoMoveSnapshotActionType>
		constexpr auto ActionLocationData = 0xb8; // TArray<FVector>
	}

	namespace n_UMovieScene3DAttachSection {
		constexpr auto AttachSocketName = 0x108; // FName
		constexpr auto AttachComponentName = 0x110; // FName
		constexpr auto AttachmentLocationRule = 0x118; // EAttachmentRule
		constexpr auto AttachmentRotationRule = 0x119; // EAttachmentRule
		constexpr auto AttachmentScaleRule = 0x11a; // EAttachmentRule
		constexpr auto DetachmentLocationRule = 0x11b; // EDetachmentRule
		constexpr auto DetachmentRotationRule = 0x11c; // EDetachmentRule
		constexpr auto DetachmentScaleRule = 0x11d; // EDetachmentRule
	}

	namespace n_UBravoHotelSettingBaseWidget {
		constexpr auto DelegateShowInfo = 0x248; // FMulticastInlineDelegate
		constexpr auto DelegateChangeValue = 0x258; // FMulticastInlineDelegate
		constexpr auto DelegateChangeValueDirect = 0x268; // FMulticastInlineDelegate
		constexpr auto DelegateChangeKeyValue = 0x278; // FMulticastInlineDelegate
		constexpr auto DelegateButtonClick = 0x288; // FMulticastInlineDelegate
	}

	namespace n_ADefaultPawn {
		constexpr auto BaseTurnRate = 0x388; // float
		constexpr auto BaseLookUpRate = 0x38c; // float
		constexpr auto MovementComponent = 0x390; // UPawnMovementComponent*
		constexpr auto CollisionComponent = 0x398; // USphereComponent*
		constexpr auto MeshComponent = 0x3a0; // UStaticMeshComponent*
		constexpr auto bAddDefaultMovementBindings = 0x3a8; // char : 1
	}

	namespace n_UARTrackedImage {
		constexpr auto DetectedImage = 0xe8; // UARCandidateImage*
		constexpr auto EstimatedSize = 0xf0; // FVector2D
	}

	namespace n_UBravoHotelPhysicalMaterial {
		constexpr auto Friction_OutBlueZone = 0x80; // float
		constexpr auto AllowPenetration = 0x84; // bool
		constexpr auto bAllowPenetrationToThrowWeapon = 0x85; // bool
		constexpr auto Toughness = 0x88; // float
		constexpr auto RefrationOnPenetration = 0x8c; // float
		constexpr auto bUseDefaultNoImpactEffect = 0x90; // bool
		constexpr auto ImpactEffect = 0x98; // UParticleSystem*
		constexpr auto ImpactDecalMaterial = 0xa0; // TArray<UMaterialInterface*>
		constexpr auto ImpactEffect_OutBlueZone = 0xb0; // UParticleSystem*
		constexpr auto ImpactDecalMaterial_OutBlueZone = 0xb8; // TArray<UMaterialInterface*>
		constexpr auto ImpactDecalSize = 0xc8; // float
		constexpr auto ImpactDecalScale = 0xcc; // FVector
		constexpr auto PlayFootstepEffectWhenMovementInteractionTriggered = 0xd8; // bool
		constexpr auto OverrideFootstepEffects = 0xe0; // TMap<FName, UParticleSystem*>
		constexpr auto FootstepEffect = 0x130; // UParticleSystem*
		constexpr auto FootstepEffect_OutBlueZone = 0x138; // UParticleSystem*
		constexpr auto FootstepDecalMaterial = 0x140; // TArray<UMaterial*>
		constexpr auto FootstepDecalMaterial_OutBlueZone = 0x150; // TArray<UMaterial*>
		constexpr auto VehicleEffect = 0x160; // UParticleSystem*
		constexpr auto VehicleEffect_OutBlueZone = 0x168; // UParticleSystem*
		constexpr auto VehicleWreckEffect = 0x170; // UParticleSystem*
		constexpr auto VehicleWreckEffect_OutBlueZone = 0x178; // UParticleSystem*
		constexpr auto OverlapSound = 0x180; // UAkAudioEvent*
		constexpr auto bUseSurfaceAsSnowfield = 0x188; // bool
		constexpr auto bCanProne = 0x189; // bool
		constexpr auto SlopeSpeedModifier = 0x18c; // float
		constexpr auto TerrainType = 0x190; // int32_t
		constexpr auto ImpactAudioEvents = 0x198; // TMap<UBravoHotelDamageType*, UAkAudioEvent*>
	}

	namespace n_UAnimNotify_PlayMontageNotifyWindow {
		constexpr auto NotifyName = 0x30; // FName
	}

	namespace n_UEnvQueryTest_Overlap {
		constexpr auto OverlapData = 0x1f8; // FEnvOverlapData
	}

	namespace n_UBravoHotelReplayPlayerListItem {
		constexpr auto ReplayController = 0x250; // ABravoHotelMK3DReplayController*
		constexpr auto PlayerState = 0x258; // ABravoHotelPlayerState*
		constexpr auto playerName = 0x260; // FString
	}

	namespace n_UMaterialExpressionBumpOffset {
		constexpr auto Coordinate = 0x40; // FExpressionInput
		constexpr auto Height = 0x54; // FExpressionInput
		constexpr auto HeightRatioInput = 0x68; // FExpressionInput
		constexpr auto HeightRatio = 0x7c; // float
		constexpr auto ReferencePlane = 0x80; // float
		constexpr auto ConstCoordinate = 0x84; // uint32_t
	}

	namespace n_APrecomputedVisibilityOverrideVolume {
		constexpr auto OverrideVisibleActors = 0x350; // TArray<AActor*>
		constexpr auto OverrideInvisibleActors = 0x360; // TArray<AActor*>
		constexpr auto OverrideInvisibleLevels = 0x370; // TArray<FName>
	}

	namespace n_UBTDecorator_Cooldown {
		constexpr auto CoolDownTime = 0x68; // float
	}

	namespace n_UPawnAction_Repeat {
		constexpr auto ActionToRepeat = 0x98; // UPawnAction*
		constexpr auto RecentActionCopy = 0xa0; // UPawnAction*
		constexpr auto ChildFailureHandlingMode = 0xa8; // EPawnActionFailHandling
	}

	namespace n_UMovieSceneParticleParameterTrack {
		constexpr auto Sections = 0x58; // TArray<UMovieSceneSection*>
	}

	namespace n_UDistributionFloatConstantCurve {
		constexpr auto ConstantCurve = 0x38; // FInterpCurveFloat
	}

	namespace n_UBravoHotelGameSingleton {
		constexpr auto BravoHotelNetworkManager = 0x28; // UBravoHotelNetworkManager*
		constexpr auto BravoHotelItemSpawnStatisticManager = 0x30; // UBravoHotelItemSpawnStatisticManager*
		constexpr auto BravoHotelDataManager = 0x128; // UBravoHotelDataManager*
		constexpr auto BravoHotelReportDataManager = 0x130; // UBravoHotelReportDataManager*
		constexpr auto BravoHotelOutGameDataManager = 0x138; // UBravoHotelOutGameDataManager*
		constexpr auto BravoHotelQuestManager = 0x140; // UBravoHotelQuestManager*
		constexpr auto BravoHotelAchievementManager = 0x148; // UBravoHotelAchievementManager*
		constexpr auto BravoHotelAppAudioStateManager = 0x158; // UBravoHotelAppAudioStateManager*
		constexpr auto CachedLocalSaves = 0x178; // TMap<FString, UBravoHotelLocalSaveBase*>
	}

	namespace n_UBravoHotelItemRecipeTreeWidget {
		constexpr auto ItemRecipeTreeInfo = 0x248; // TArray<FRecipeTreeWidgetInfo>
	}

	namespace n_UAnimBlueprint {
		constexpr auto bWarnAboutBlueprintUsage = 0xa8; // bool
		constexpr auto Groups = 0xb0; // TArray<FAnimGroupInfo>
		constexpr auto bUseMultiThreadedAnimationUpdate = 0xc0; // bool
		constexpr auto TargetSkeleton = 0xc8; // USkeleton*
	}

	namespace n_USourceEffectFoldbackDistortionPreset {
		constexpr auto Settings = 0x74; // FSourceEffectFoldbackDistortionSettings
	}

	namespace n_ABravoHotelVehicleSpawnActor {
		constexpr auto CheckVehicleSpawnDistance = 0x318; // float
		constexpr auto VehicleAreaSpawnRateTableKey = 0x31c; // FName
	}

	namespace n_UFontFace {
		constexpr auto SourceFilename = 0x30; // FString
		constexpr auto Hinting = 0x40; // EFontHinting
		constexpr auto LoadingPolicy = 0x41; // EFontLoadingPolicy
		constexpr auto LayoutMethod = 0x42; // EFontLayoutMethod
	}

	namespace n_UBravoHotelWorldMapAreaWidget {
		constexpr auto redzone = 0x248; // UCanvasPanel*
		constexpr auto Nuclear = 0x250; // UCanvasPanel*
		constexpr auto FindLandingPosition = 0x258; // UCanvasPanel*
		constexpr auto FindLandingPositionTry = 0x260; // UCanvasPanel*
		constexpr auto SearchInstinct = 0x268; // UCanvasPanel*
		constexpr auto SpatialSense = 0x270; // UCanvasPanel*
		constexpr auto CarScan = 0x278; // UCanvasPanel*
		constexpr auto CarScanTry = 0x280; // UCanvasPanel*
		constexpr auto UltimateVehicle = 0x288; // UCanvasPanel*
		constexpr auto NitroBoom = 0x290; // UCanvasPanel*
		constexpr auto TransportAircraft = 0x298; // UCanvasPanel*
		constexpr auto TransportDropBox = 0x2a0; // UCanvasPanel*
		constexpr auto MaterialItem = 0x2a8; // UCanvasPanel*
		constexpr auto Amplifier = 0x2b0; // UCanvasPanel*
		constexpr auto HeartBeatSensor = 0x2b8; // UCanvasPanel*
		constexpr auto Trap = 0x2c0; // UCanvasPanel*
		constexpr auto Driver_Sounds = 0x2c8; // UOverlay*
		constexpr auto LocalPing = 0x2d0; // UCanvasPanel*
		constexpr auto ExpertWeaponItem = 0x2d8; // UCanvasPanel*
		constexpr auto Img_RedZone = 0x2e0; // UImage*
		constexpr auto Img_Nuclear = 0x2e8; // UImage*
		constexpr auto Img_FindLandingPosition = 0x2f0; // UImage*
		constexpr auto Img_FindLandingPositionTry = 0x2f8; // UImage*
		constexpr auto Img_FindLandingPositionAnim = 0x300; // UImage*
		constexpr auto Img_SearchInstinct = 0x308; // UImage*
		constexpr auto Img_SpatialSense = 0x310; // UImage*
		constexpr auto Img_CarScan = 0x318; // UImage*
		constexpr auto Img_CarScanTry = 0x320; // UImage*
		constexpr auto Img_UltimateVehicle = 0x328; // UImage*
		constexpr auto Img_NitroBoom = 0x330; // UImage*
		constexpr auto Img_Amplifier = 0x338; // UImage*
		constexpr auto Img_HeartBeatSensor = 0x340; // UImage*
		constexpr auto Img_DropBoxCap_Open = 0x348; // UImage*
		constexpr auto Img_DropBoxCap_Close = 0x350; // UImage*
		constexpr auto LocalPingImg = 0x358; // UImage*
		constexpr auto Img_DropBoxChute = 0x360; // UImage*
		constexpr auto IconImage = 0x368; // UBravoHotelIconImageWidget*
		constexpr auto IconImage_2 = 0x370; // UBravoHotelIconImageWidget*
		constexpr auto Overlay_TransportAircraft = 0x378; // UOverlay*
		constexpr auto WidgetType = 0x380; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_TrapState = 0x388; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_Icon = 0x390; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_Icon2 = 0x398; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_DropBoxCap = 0x3a0; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_Icon2_2 = 0x3a8; // UWidgetSwitcher*
		constexpr auto Anim_RedZone = 0x3b0; // UWidgetAnimation*
		constexpr auto Anim_Nuclear = 0x3b8; // UWidgetAnimation*
		constexpr auto Anim_FindLandingPosition = 0x3c0; // UWidgetAnimation*
		constexpr auto Anim_SearchInstinct = 0x3c8; // UWidgetAnimation*
		constexpr auto Anim_SpatialSense = 0x3d0; // UWidgetAnimation*
		constexpr auto Anim_Propeller = 0x3d8; // UWidgetAnimation*
		constexpr auto Anim_TrapStick = 0x3e0; // UWidgetAnimation*
		constexpr auto Anim_Trapped = 0x3e8; // UWidgetAnimation*
		constexpr auto Anim_DriverSounds = 0x3f0; // UWidgetAnimation*
		constexpr auto AudioEvent_ActiveTrap = 0x3f8; // UAkAudioEvent*
		constexpr auto TimerHandle_UpdateLocation = 0x400; // FTimerHandle
		constexpr auto TimerHandle_CheckValid = 0x418; // FTimerHandle
		constexpr auto TimerHandle_OnAnimationFinished = 0x430; // FTimerHandle
		constexpr auto TimerHandle_OnAutoRemove = 0x438; // FTimerHandle
		constexpr auto SpatialSenseDuration = 0x440; // float
		constexpr auto CurrentWidget = 0x448; // UWidget*
		constexpr auto CurrentImg = 0x450; // UWidget*
		constexpr auto CurrentAnim = 0x458; // UWidgetAnimation*
		constexpr auto AreaWidgetType = 0x460; // EWorldMapAreaWidgetType
		constexpr auto AreaWidgetInfo = 0x468; // FAreaWidgetInfo
		constexpr auto MapCompWidgetRef = 0x4f0; // UBravoHotelMapCompWidget*
		constexpr auto MainWidgetRef = 0x4f8; // UBravoHotelMainWidget*
		constexpr auto PlayerHUDRef = 0x500; // ABravoHotelPlayerHUD*
		constexpr auto CarScanTime = 0x508; // float
	}

	namespace n_AInteractiveFoliageActor {
		constexpr auto CapsuleComponent = 0x328; // UCapsuleComponent*
		constexpr auto TouchingActorEntryPosition = 0x330; // FVector
		constexpr auto FoliageVelocity = 0x33c; // FVector
		constexpr auto FoliageForce = 0x348; // FVector
		constexpr auto FoliagePosition = 0x354; // FVector
		constexpr auto FoliageDamageImpulseScale = 0x360; // float
		constexpr auto FoliageTouchImpulseScale = 0x364; // float
		constexpr auto FoliageStiffness = 0x368; // float
		constexpr auto FoliageStiffnessQuadratic = 0x36c; // float
		constexpr auto FoliageDamping = 0x370; // float
		constexpr auto MaxDamageImpulse = 0x374; // float
		constexpr auto MaxTouchImpulse = 0x378; // float
		constexpr auto MaxForce = 0x37c; // float
		constexpr auto Mass = 0x380; // float
	}

	namespace n_UUW-ItemRecipeTree_C {
		constexpr auto UberGraphFrame = 0x258; // FPointerToUberGraphFrame
		constexpr auto HorizontalBox_11 = 0x260; // UHorizontalBox*
		constexpr auto HorizontalBox_12 = 0x268; // UHorizontalBox*
		constexpr auto HorizontalBox_13 = 0x270; // UHorizontalBox*
		constexpr auto HorizontalBox_14 = 0x278; // UHorizontalBox*
		constexpr auto HorizontalBox_15 = 0x280; // UHorizontalBox*
		constexpr auto HorizontalBox_16 = 0x288; // UHorizontalBox*
		constexpr auto HorizontalBox_00 = 0x290; // UHorizontalBox*
		constexpr auto HorizontalBox_02 = 0x298; // UHorizontalBox*
		constexpr auto HorizontalBox_03 = 0x2a0; // UHorizontalBox*
		constexpr auto HorizontalBox_04 = 0x2a8; // UHorizontalBox*
		constexpr auto HorizontalBox_05 = 0x2b0; // UHorizontalBox*
		constexpr auto HorizontalBox_06 = 0x2b8; // UHorizontalBox*
		constexpr auto HorizontalBox_07 = 0x2c0; // UHorizontalBox*
		constexpr auto HorizontalBox_08 = 0x2c8; // UHorizontalBox*
		constexpr auto HorizontalBox_09 = 0x2d0; // UHorizontalBox*
		constexpr auto Line00 = 0x2d8; // UVerticalBox*
		constexpr auto Line01 = 0x2e0; // UHorizontalBox*
		constexpr auto Line02 = 0x2e8; // UVerticalBox*
		constexpr auto Line03 = 0x2f0; // UVerticalBox*
		constexpr auto Line04 = 0x2f8; // UVerticalBox*
		constexpr auto Line05 = 0x300; // UVerticalBox*
		constexpr auto Line06 = 0x308; // UVerticalBox*
		constexpr auto Line07 = 0x310; // UVerticalBox*
		constexpr auto Line08 = 0x318; // UVerticalBox*
		constexpr auto Line09 = 0x320; // UVerticalBox*
		constexpr auto Line10 = 0x328; // UVerticalBox*
		constexpr auto Line11 = 0x330; // UVerticalBox*
		constexpr auto Line12 = 0x338; // UVerticalBox*
		constexpr auto Line13 = 0x340; // UVerticalBox*
		constexpr auto Line14 = 0x348; // UVerticalBox*
		constexpr auto Line15 = 0x350; // UVerticalBox*
		constexpr auto Overlay_Main = 0x358; // UOverlay*
		constexpr auto Slot00 = 0x360; // UUW-ItemRecipeTreeSlot_C*
		constexpr auto Slot01 = 0x368; // UUW-ItemRecipeTreeSlot_C*
		constexpr auto Slot02 = 0x370; // UUW-ItemRecipeTreeSlot_C*
		constexpr auto Slot03 = 0x378; // UUW-ItemRecipeTreeSlot_C*
		constexpr auto Slot04 = 0x380; // UUW-ItemRecipeTreeSlot_C*
		constexpr auto Slot05 = 0x388; // UUW-ItemRecipeTreeSlot_C*
		constexpr auto Slot06 = 0x390; // UUW-ItemRecipeTreeSlot_C*
		constexpr auto Slot07 = 0x398; // UUW-ItemRecipeTreeSlot_C*
		constexpr auto Slot08 = 0x3a0; // UUW-ItemRecipeTreeSlot_C*
		constexpr auto Slot09 = 0x3a8; // UUW-ItemRecipeTreeSlot_C*
		constexpr auto Slot10 = 0x3b0; // UUW-ItemRecipeTreeSlot_C*
		constexpr auto Slot11 = 0x3b8; // UUW-ItemRecipeTreeSlot_C*
		constexpr auto Slot12 = 0x3c0; // UUW-ItemRecipeTreeSlot_C*
		constexpr auto Slot13 = 0x3c8; // UUW-ItemRecipeTreeSlot_C*
		constexpr auto Slot14 = 0x3d0; // UUW-ItemRecipeTreeSlot_C*
		constexpr auto Slot15 = 0x3d8; // UUW-ItemRecipeTreeSlot_C*
		constexpr auto Slot16 = 0x3e0; // UUW-ItemRecipeTreeSlot_C*
		constexpr auto Slot17 = 0x3e8; // UUW-ItemRecipeTreeSlot_C*
		constexpr auto Slot18 = 0x3f0; // UUW-ItemRecipeTreeSlot_C*
		constexpr auto Slot19 = 0x3f8; // UUW-ItemRecipeTreeSlot_C*
		constexpr auto Slot20 = 0x400; // UUW-ItemRecipeTreeSlot_C*
		constexpr auto Slot21 = 0x408; // UUW-ItemRecipeTreeSlot_C*
		constexpr auto Slot22 = 0x410; // UUW-ItemRecipeTreeSlot_C*
		constexpr auto Slot23 = 0x418; // UUW-ItemRecipeTreeSlot_C*
		constexpr auto Slot24 = 0x420; // UUW-ItemRecipeTreeSlot_C*
		constexpr auto Slot25 = 0x428; // UUW-ItemRecipeTreeSlot_C*
		constexpr auto Slot26 = 0x430; // UUW-ItemRecipeTreeSlot_C*
		constexpr auto Slot27 = 0x438; // UUW-ItemRecipeTreeSlot_C*
		constexpr auto Slot28 = 0x440; // UUW-ItemRecipeTreeSlot_C*
		constexpr auto Slot29 = 0x448; // UUW-ItemRecipeTreeSlot_C*
		constexpr auto Slot30 = 0x450; // UUW-ItemRecipeTreeSlot_C*
		constexpr auto Slot31 = 0x458; // UUW-ItemRecipeTreeSlot_C*
		constexpr auto VerticalBox_2438 = 0x460; // UVerticalBox*
		constexpr auto HoverWidget = 0x468; // UUW-Inventory_ItemSlotHover_C*
		constexpr auto HaveItemKey = 0x470; // FName
		constexpr auto TargetItemKey = 0x478; // FName
		constexpr auto IsSearchExpertWeapon = 0x480; // bool
	}

	namespace n_URectLightComponent {
		constexpr auto SourceWidth = 0x390; // float
		constexpr auto SourceHeight = 0x394; // float
		constexpr auto BarnDoorAngle = 0x398; // float
		constexpr auto BarnDoorLength = 0x39c; // float
		constexpr auto SourceTexture = 0x3a0; // UTexture*
	}

	namespace n_USoundNodeModulatorContinuous {
		constexpr auto PitchModulationParams = 0x48; // FModulatorContinuousParams
		constexpr auto VolumeModulationParams = 0x68; // FModulatorContinuousParams
	}

	namespace n_UListViewBase {
		constexpr auto EntryWidgetClass = 0x108; // UUserWidget*
		constexpr auto WheelScrollMultiplier = 0x110; // float
		constexpr auto bEnableScrollAnimation = 0x114; // bool
		constexpr auto bEnableFixedLineOffset = 0x115; // bool
		constexpr auto FixedLineScrollOffset = 0x118; // float
		constexpr auto BP_OnEntryGenerated = 0x120; // FMulticastInlineDelegate
		constexpr auto BP_OnEntryReleased = 0x130; // FMulticastInlineDelegate
		constexpr auto EntryWidgetPool = 0x140; // FUserWidgetPool
	}

	namespace n_UDemoNetDriver {
		constexpr auto RollbackNetStartupActors = 0xa50; // TMap<FString, FRollbackNetStartupActorInfo>
		constexpr auto CheckpointSaveMaxMSPerFrame = 0xecc; // float
		constexpr auto MulticastRecordOptions = 0xf00; // TArray<FMulticastRecordOptions>
		constexpr auto bIsLocalReplay = 0xf60; // bool
		constexpr auto SpectatorControllers = 0xf68; // TArray<APlayerController*>
	}

	namespace n_UMovieSceneCameraShakeTrack {
		constexpr auto CameraShakeSections = 0x58; // TArray<UMovieSceneSection*>
	}

	namespace n_UInteractiveToolsContext {
		constexpr auto InputRouter = 0x58; // UInputRouter*
		constexpr auto ToolManager = 0x60; // UInteractiveToolManager*
		constexpr auto GizmoManager = 0x68; // UInteractiveGizmoManager*
		constexpr auto ToolManagerClass = 0x70; // TSoftClassPtr<UObject>
	}

	namespace n_UUW-VehicleSeatWidget_C {
		constexpr auto Image_81 = 0x248; // UImage*
		constexpr auto Image_86 = 0x250; // UImage*
		constexpr auto Image_88 = 0x258; // UImage*
		constexpr auto Image_89 = 0x260; // UImage*
		constexpr auto Image_90 = 0x268; // UImage*
		constexpr auto Image_91 = 0x270; // UImage*
		constexpr auto Image_92 = 0x278; // UImage*
		constexpr auto Image_93 = 0x280; // UImage*
		constexpr auto Image_94 = 0x288; // UImage*
		constexpr auto Image_95 = 0x290; // UImage*
		constexpr auto Image_96 = 0x298; // UImage*
		constexpr auto Image_97 = 0x2a0; // UImage*
		constexpr auto Image_98 = 0x2a8; // UImage*
		constexpr auto Image_99 = 0x2b0; // UImage*
		constexpr auto Image_100 = 0x2b8; // UImage*
		constexpr auto Image_101 = 0x2c0; // UImage*
		constexpr auto Image_102 = 0x2c8; // UImage*
		constexpr auto Image_103 = 0x2d0; // UImage*
		constexpr auto Image_104 = 0x2d8; // UImage*
		constexpr auto Image_107 = 0x2e0; // UImage*
		constexpr auto Image_108 = 0x2e8; // UImage*
		constexpr auto Image_119 = 0x2f0; // UImage*
		constexpr auto Image_120 = 0x2f8; // UImage*
		constexpr auto Image_121 = 0x300; // UImage*
		constexpr auto Image_122 = 0x308; // UImage*
		constexpr auto Image_123 = 0x310; // UImage*
		constexpr auto Image_134 = 0x318; // UImage*
		constexpr auto Image_137 = 0x320; // UImage*
		constexpr auto Image_138 = 0x328; // UImage*
		constexpr auto Image_139 = 0x330; // UImage*
		constexpr auto Image_140 = 0x338; // UImage*
		constexpr auto Image_141 = 0x340; // UImage*
		constexpr auto Image_142 = 0x348; // UImage*
		constexpr auto Image_143 = 0x350; // UImage*
		constexpr auto Image_144 = 0x358; // UImage*
		constexpr auto Image_145 = 0x360; // UImage*
		constexpr auto Image_146 = 0x368; // UImage*
		constexpr auto Image_147 = 0x370; // UImage*
		constexpr auto Image_148 = 0x378; // UImage*
		constexpr auto Image_149 = 0x380; // UImage*
		constexpr auto Image_152 = 0x388; // UImage*
		constexpr auto Image_153 = 0x390; // UImage*
		constexpr auto Image_154 = 0x398; // UImage*
		constexpr auto Image_155 = 0x3a0; // UImage*
		constexpr auto Image_156 = 0x3a8; // UImage*
		constexpr auto Image_157 = 0x3b0; // UImage*
		constexpr auto Image_158 = 0x3b8; // UImage*
		constexpr auto Image_159 = 0x3c0; // UImage*
		constexpr auto Image_160 = 0x3c8; // UImage*
		constexpr auto Image_161 = 0x3d0; // UImage*
		constexpr auto Image_162 = 0x3d8; // UImage*
		constexpr auto Image_163 = 0x3e0; // UImage*
		constexpr auto Image_164 = 0x3e8; // UImage*
		constexpr auto WidgetSwitcher_1 = 0x3f0; // UWidgetSwitcher*
	}

	namespace n_UUW-Lobby_Craft_List_Category_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Button_Category = 0x250; // UButton*
		constexpr auto CanvasPanel_SlotList = 0x258; // UCanvasPanel*
		constexpr auto Image_New = 0x260; // UImage*
		constexpr auto T_CategoryName = 0x268; // UTextBlock*
		constexpr auto UW-Lobby_RecipeList_Category_Item_4 = 0x270; // UUW-Lobby_Craft_List_Category_Slot_C*
		constexpr auto UW-Lobby_RecipeList_Category_Item_5 = 0x278; // UUW-Lobby_Craft_List_Category_Slot_C*
		constexpr auto UW-Lobby_RecipeList_Category_Item_6 = 0x280; // UUW-Lobby_Craft_List_Category_Slot_C*
		constexpr auto VerticalBox_ItemList = 0x288; // UVerticalBox*
		constexpr auto WidgetSwitcher_Own = 0x290; // UWidgetSwitcher*
		constexpr auto WeaponType = 0x298; // FString
		constexpr auto IsPressed = 0x2a8; // bool
		constexpr auto IsOwn = 0x2a9; // bool
		constexpr auto IsOwnAny = 0x2aa; // bool
		constexpr auto ParentWidgetRef = 0x2b0; // UUW-Lobby_Craft_List_C*
		constexpr auto SlotSize = 0x2b8; // float
		constexpr auto CurrentListSize = 0x2bc; // float
		constexpr auto DefaultImage = 0x2c0; // UPaperSprite*
		constexpr auto HoverImage = 0x2c8; // UPaperSprite*
		constexpr auto PressedDefaultImage = 0x2d0; // UPaperSprite*
		constexpr auto PressedHoverImage = 0x2d8; // UPaperSprite*
	}

	namespace n_UMaterialExpressionArctangent2Fast {
		constexpr auto Y = 0x40; // FExpressionInput
		constexpr auto X = 0x54; // FExpressionInput
	}

	namespace n_ABHPersonalSupplyBox {
		constexpr auto NeedInit = 0x318; // bool
		constexpr auto RootBoxComponent = 0x328; // UBoxComponent*
		constexpr auto InteractiveSphereComponent = 0x330; // USphereComponent*
		constexpr auto InteractiveCancleSphereComponent = 0x338; // UBoxComponent*
		constexpr auto BoxName = 0x340; // FName
		constexpr auto RelatedPlayerIds = 0x348; // TArray<int32_t>
		constexpr auto RefClientDummy = 0x358; // ABHPersonalSupplyBoxDummy*
		constexpr auto CurrentStateType = 0x361; // EBoxStateType
		constexpr auto CheckRePosition = 0x362; // bool
		constexpr auto TimeHandle_CheckRePosition = 0x368; // FTimerHandle
		constexpr auto CustomIndex = 0x370; // int32_t
		constexpr auto TraceLand = 0x374; // bool
		constexpr auto TimerHandle_Destroy = 0x378; // FTimerHandle
	}

	namespace n_UStateMachineABP {
		constexpr auto FSM = 0x268; // UStateMachineComponent*
		constexpr auto OverrideFSM = 0x270; // bool
		constexpr auto TargetFSM = 0x274; // FName
		constexpr auto TargetASM = 0x27c; // FName
	}

	namespace n_UUW-PersonalSupplyBoxWidget_C {
		constexpr auto UberGraphFrame = 0x3f8; // FPointerToUberGraphFrame
		constexpr auto Ani_PadOn = 0x400; // UWidgetAnimation*
		constexpr auto BG_Pad = 0x408; // UImage*
		constexpr auto btn_PerkDeckEnabled = 0x410; // UButton*
		constexpr auto Canvas_ChangeEnable = 0x418; // UCanvasPanel*
		constexpr auto CanvasPanel = 0x420; // UCanvasPanel*
		constexpr auto CanvasPanel_3 = 0x428; // UCanvasPanel*
		constexpr auto ComboBoxString_237 = 0x430; // UComboBoxString*
		constexpr auto CurHaveGoldValue = 0x438; // UTextBlock*
		constexpr auto CurPriceText = 0x440; // UTextBlock*
		constexpr auto Down = 0x448; // UImage*
		constexpr auto EquipBg = 0x450; // UImage*
		constexpr auto Free = 0x458; // UOverlay*
		constexpr auto GoldImage = 0x460; // UImage*
		constexpr auto GoldImage_2 = 0x468; // UImage*
		constexpr auto GoldLack = 0x470; // UOverlay*
		constexpr auto HaveWeaponText = 0x478; // UTextBlock*
		constexpr auto HorizontalBox_1 = 0x480; // UHorizontalBox*
		constexpr auto Image = 0x488; // UImage*
		constexpr auto Image_2 = 0x490; // UImage*
		constexpr auto Image_3 = 0x498; // UImage*
		constexpr auto Image_4 = 0x4a0; // UImage*
		constexpr auto Image_5 = 0x4a8; // UImage*
		constexpr auto Image_91 = 0x4b0; // UImage*
		constexpr auto Image_119 = 0x4b8; // UImage*
		constexpr auto Image_172 = 0x4c0; // UImage*
		constexpr auto Image_192 = 0x4c8; // UImage*
		constexpr auto Image_251 = 0x4d0; // UImage*
		constexpr auto Image_362 = 0x4d8; // UImage*
		constexpr auto Image_400 = 0x4e0; // UImage*
		constexpr auto Image_545 = 0x4e8; // UImage*
		constexpr auto Image_552 = 0x4f0; // UImage*
		constexpr auto Image_614 = 0x4f8; // UImage*
		constexpr auto Image_722 = 0x500; // UImage*
		constexpr auto Image_1025 = 0x508; // UImage*
		constexpr auto Image_1262 = 0x510; // UImage*
		constexpr auto ItemIcon = 0x518; // UImage*
		constexpr auto Items_1Text = 0x520; // UTextBlock*
		constexpr auto ItemScroll = 0x528; // UScrollBox*
		constexpr auto ItemsText = 0x530; // UTextBlock*
		constexpr auto OkText = 0x538; // UTextBlock*
		constexpr auto Overlay_4 = 0x540; // UOverlay*
		constexpr auto Overlay_215 = 0x548; // UOverlay*
		constexpr auto PriceBg = 0x550; // UImage*
		constexpr auto PriceBg_2 = 0x558; // UImage*
		constexpr auto PriceText = 0x560; // UTextBlock*
		constexpr auto PriceValue = 0x568; // UTextBlock*
		constexpr auto RichTextBlock = 0x570; // URichTextBlock*
		constexpr auto RichTextBlock_74 = 0x578; // URichTextBlock*
		constexpr auto SizeBox_4 = 0x580; // USizeBox*
		constexpr auto SlotBg = 0x588; // UImage*
		constexpr auto SortText = 0x590; // UTextBlock*
		constexpr auto SpecialWeaponText = 0x598; // UTextBlock*
		constexpr auto TextBlock_3 = 0x5a0; // UTextBlock*
		constexpr auto Up = 0x5a8; // UImage*
		constexpr auto UW-PersonalSupplyBoxConsumableItemSlotWidget_2 = 0x5b0; // UUW-PersonalSupplyBoxConsumableItemSlotWidget_C*
		constexpr auto UW-PersonalSupplyBoxConsumableItemSlotWidget_3 = 0x5b8; // UUW-PersonalSupplyBoxConsumableItemSlotWidget_C*
		constexpr auto UW-PersonalSupplyBoxConsumableItemSlotWidget_4 = 0x5c0; // UUW-PersonalSupplyBoxConsumableItemSlotWidget_C*
		constexpr auto UW-PersonalSupplyBoxConsumableItemSlotWidget_5 = 0x5c8; // UUW-PersonalSupplyBoxConsumableItemSlotWidget_C*
		constexpr auto UW-PersonalSupplyBoxConsumableItemSlotWidget_6 = 0x5d0; // UUW-PersonalSupplyBoxConsumableItemSlotWidget_C*
		constexpr auto UW-PersonalSupplyBoxWeaponInfoWidget_186 = 0x5d8; // UUW-PersonalSupplyBoxWeaponInfoWidget_C*
		constexpr auto UW-SupplyToolTip = 0x5e0; // UUW-SupplyToolTip_C*
		constexpr auto UW-Timer = 0x5e8; // UUW-Timer_C*
		constexpr auto VerticalBox_1 = 0x5f0; // UVerticalBox*
		constexpr auto WeaponScroll = 0x5f8; // UScrollBox*
		constexpr auto WidgetSwitcher_1 = 0x600; // UWidgetSwitcher*
		constexpr auto SortType = 0x608; // TArray<FText>
		constexpr auto RarityList = 0x618; // TArray<UImage*>
		constexpr auto ComboxList = 0x628; // TMap<FString, UUW-ComboBoxText_C*>
		constexpr auto SelectComboBox = 0x678; // FString
		constexpr auto IsShowAni = 0x688; // bool
		constexpr auto IsFree = 0x689; // bool
		constexpr auto SaveSupplyItem = 0x690; // FSupplyItem
		constexpr auto CurOwnGold = 0x790; // int32_t
		constexpr auto TotalPrice = 0x794; // int32_t
	}

	namespace n_UInputBehaviorSet {
		constexpr auto Behaviors = 0x28; // TArray<FBehaviorInfo>
	}

	namespace n_UInterpCurveEdSetup {
		constexpr auto Tabs = 0x28; // TArray<FCurveEdTab>
		constexpr auto ActiveTab = 0x38; // int32_t
	}

	namespace n_UMaterialExpressionMultiply {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_UNiagaraDataInterfaceAudioSubmix {
		constexpr auto Submix = 0x30; // USoundSubmix*
	}

	namespace n_UPendingNetGame {
		constexpr auto NetDriver = 0x30; // UNetDriver*
		constexpr auto DemoNetDriver = 0x38; // UDemoNetDriver*
	}

	namespace n_UMaterialExpressionSaturate {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UMovieSceneCaptureProtocolBase {
		constexpr auto State = 0x50; // EMovieSceneCaptureProtocolState
	}

	namespace n_ULandscapeInfo {
		constexpr auto LandscapeActor = 0x28; // LazyObjectProperty
		constexpr auto LandscapeGuid = 0x44; // FGuid
		constexpr auto ComponentSizeQuads = 0x54; // int32_t
		constexpr auto SubsectionSizeQuads = 0x58; // int32_t
		constexpr auto ComponentNumSubsections = 0x5c; // int32_t
		constexpr auto DrawScale = 0x60; // FVector
		constexpr auto Proxies = 0x110; // TArray<ALandscapeStreamingProxy*>
	}

	namespace n_UUW-ReplayItemList_C {
		constexpr auto ArmorSlot = 0x248; // UUW-Inventory_EquippedSlot_C*
		constexpr auto BagSlot = 0x250; // UUW-Inventory_EquippedSlot_C*
		constexpr auto BottomSlot = 0x258; // UUW-Inventory_EquippedSlot_C*
		constexpr auto EyeWearSlot = 0x260; // UUW-Inventory_EquippedSlot_C*
		constexpr auto GhillieSlot = 0x268; // UUW-Inventory_EquippedSlot_C*
		constexpr auto GlovesSlot = 0x270; // UUW-Inventory_EquippedSlot_C*
		constexpr auto HatSlot = 0x278; // UUW-Inventory_EquippedSlot_C*
		constexpr auto HelmetSlot = 0x280; // UUW-Inventory_EquippedSlot_C*
		constexpr auto MaskSlot = 0x288; // UUW-Inventory_EquippedSlot_C*
		constexpr auto OuterSlot = 0x290; // UUW-Inventory_EquippedSlot_C*
		constexpr auto ShoesSlot = 0x298; // UUW-Inventory_EquippedSlot_C*
		constexpr auto TopSlot = 0x2a0; // UUW-Inventory_EquippedSlot_C*
		constexpr auto UW-Inventory_Weapon = 0x2a8; // UUW-Inventory_Weapon_C*
		constexpr auto Timer_UpdateItemList = 0x2b0; // FTimerHandle
	}

	namespace n_UBravoHotelWorldTeleportWidget {
		constexpr auto WorldCenter = 0x248; // FVector
		constexpr auto WorldSize = 0x254; // FVector2D
		constexpr auto BaseMapSize = 0x25c; // FVector2D
	}

	namespace n_UInputAxisKeyDelegateBinding {
		constexpr auto InputAxisKeyDelegateBindings = 0x28; // TArray<FBlueprintInputAxisKeyDelegateBinding>
	}

	namespace n_UBravoHotelPersonalSupplyBoxWidget {
		constexpr auto HaveWeaponList = 0x248; // TArray<UBravoHotelPersonalSupplyBoxSlotItemWidget*>
		constexpr auto ConsumableItemList = 0x258; // TArray<UBravoHotelPersonalSupplyBoxSlotItemWidget*>
		constexpr auto CurSortType = 0x268; // EItemSortType
		constexpr auto CurConsumableItemDatas = 0x270; // TMap<int32_t, FSupplyItem>
		constexpr auto CurWeapon = 0x2c0; // FInventoryItemInfo
		constexpr auto DefaultWeapon = 0x358; // FInventoryItemInfo
		constexpr auto IsFreeSupply = 0x3f0; // bool
		constexpr auto bIsDefaultWeapon = 0x3f1; // bool
	}

	namespace n_URichTextBlockImageDecorator {
		constexpr auto ImageSet = 0x28; // UDataTable*
	}

	namespace n_UAnimSequenceBase {
		constexpr auto Notifies = 0x90; // TArray<FAnimNotifyEvent>
		constexpr auto SequenceLength = 0xa0; // float
		constexpr auto RateScale = 0xa4; // float
		constexpr auto RawCurveData = 0xa8; // FRawCurveTracks
	}

	namespace n_UParticleModuleAttractorPointGravity {
		constexpr auto Position = 0x30; // FVector
		constexpr auto Radius = 0x3c; // float
		constexpr auto Strength = 0x40; // UDistributionFloat*
		constexpr auto StrengthRaw = 0x48; // FRawDistributionFloat
	}

	namespace n_UPrefabToolComponent {
		constexpr auto bConnected = 0x4b0; // char : 1
		constexpr auto bLockSelection = 0x4b0; // char : 1
		constexpr auto Prefab = 0x4b8; // UPrefabAsset*
		constexpr auto GeneratedBlueprint = 0x4c0; // UBlueprint*
		constexpr auto SimplifiedMesh = 0x4c8; // UStaticMesh*
		constexpr auto PrefabInstancesMap = 0x4d0; // TMap<FName, AActor*>
		constexpr auto VariantRulesOverwrite = 0x520; // TArray<FPrefabVariantRule>
		constexpr auto bTransient = 0x530; // char : 1
		constexpr auto ParentClass = 0x538; // AActor*
	}

	namespace n_UUW-SkillMapWidget_C {
		constexpr auto UberGraphFrame = 0x250; // FPointerToUberGraphFrame
		constexpr auto Tutorial_MouseCursor = 0x258; // UWidgetAnimation*
		constexpr auto Tutorial_Arrow_Loop2 = 0x260; // UWidgetAnimation*
		constexpr auto RadarDecoLight = 0x268; // UWidgetAnimation*
		constexpr auto RadarCircle_M = 0x270; // UWidgetAnimation*
		constexpr auto BackgroundBlur_154 = 0x278; // UBackgroundBlur*
		constexpr auto BP-MapComp = 0x280; // UUW-MapComp_C*
		constexpr auto Button_Nuclear = 0x288; // UButton*
		constexpr auto CP_RealMapSize = 0x290; // UCanvasPanel*
		constexpr auto Image = 0x298; // UImage*
		constexpr auto Image_2 = 0x2a0; // UImage*
		constexpr auto Image_3 = 0x2a8; // UImage*
		constexpr auto Image_4 = 0x2b0; // UImage*
		constexpr auto Image_5 = 0x2b8; // UImage*
		constexpr auto Image_6 = 0x2c0; // UImage*
		constexpr auto Image_7 = 0x2c8; // UImage*
		constexpr auto Image_171 = 0x2d0; // UImage*
		constexpr auto Image_181 = 0x2d8; // UImage*
		constexpr auto Image_228 = 0x2e0; // UImage*
		constexpr auto Image_326 = 0x2e8; // UImage*
		constexpr auto Image_405 = 0x2f0; // UImage*
		constexpr auto Image_508 = 0x2f8; // UImage*
		constexpr auto Img_MapBackGround = 0x300; // UImage*
		constexpr auto Img_MapCenter = 0x308; // UImage*
		constexpr auto Img_RadarDummy = 0x310; // UImage*
		constexpr auto Tutorial = 0x318; // UOverlay*
		constexpr auto UW-Radar_tutorial = 0x320; // UUW-Radar_tutorial_C*
		constexpr auto MapBackGroundPosition = 0x328; // FVector2D
		constexpr auto RadarDummyPosition = 0x330; // FVector2D
	}

	namespace n_UBookMark {
		constexpr auto Location = 0x28; // FVector
		constexpr auto Rotation = 0x34; // FRotator
		constexpr auto HiddenLevels = 0x40; // TArray<FString>
	}

	namespace n_UTextureRenderTarget2D {
		constexpr auto SizeX = 0xc0; // int32_t
		constexpr auto SizeY = 0xc4; // int32_t
		constexpr auto ClearColor = 0xc8; // FLinearColor
		constexpr auto AddressX = 0xd8; // TextureAddress
		constexpr auto AddressY = 0xd9; // TextureAddress
		constexpr auto bForceLinearGamma = 0xda; // char : 1
		constexpr auto bHDR = 0xda; // char : 1
		constexpr auto bGPUSharedFlag = 0xda; // char : 1
		constexpr auto RenderTargetFormat = 0xdb; // ETextureRenderTargetFormat
		constexpr auto bAutoGenerateMips = 0xdc; // char : 1
		constexpr auto MipsSamplerFilter = 0xdd; // TextureFilter
		constexpr auto MipsAddressU = 0xde; // TextureAddress
		constexpr auto MipsAddressV = 0xdf; // TextureAddress
		constexpr auto OverrideFormat = 0xe0; // EPixelFormat
	}

	namespace n_UParticleModuleAccelerationConstant {
		constexpr auto Acceleration = 0x38; // FVector
	}

	namespace n_UEnvQueryTest_Distance {
		constexpr auto TestMode = 0x1f8; // EEnvTestDistance
		constexpr auto DistanceTo = 0x200; // UEnvQueryContext*
	}

	namespace n_ANavLinkProxy {
		constexpr auto PointLinks = 0x328; // TArray<FNavigationLink>
		constexpr auto SegmentLinks = 0x338; // TArray<FNavigationSegmentLink>
		constexpr auto SmartLinkComp = 0x348; // UNavLinkCustomComponent*
		constexpr auto bSmartLinkIsRelevant = 0x350; // bool
		constexpr auto OnSmartLinkReached = 0x358; // FMulticastInlineDelegate
	}

	namespace n_UDatasmithStaticMeshComponentTemplate {
		constexpr auto StaticMesh = 0x30; // UStaticMesh*
		constexpr auto OverrideMaterials = 0x38; // TArray<UMaterialInterface*>
	}

	namespace n_UBravoHotelScenarioComponent {
		constexpr auto StartScenarioClass = 0xb0; // UBravoHotelScenarioBase*
		constexpr auto CurrentScenario = 0xb8; // UBravoHotelScenarioBase*
		constexpr auto TimeHandle_ForceStart = 0x118; // FTimerHandle
	}

	namespace n_UUW-Inventory_Equipped_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Character_BG_Motion = 0x250; // UWidgetAnimation*
		constexpr auto ArmorSlot = 0x258; // UUW-Inventory_EquippedSlot_C*
		constexpr auto BagSlot = 0x260; // UUW-Inventory_EquippedSlot_C*
		constexpr auto BottomSlot = 0x268; // UUW-Inventory_EquippedSlot_C*
		constexpr auto Character_BG = 0x270; // UImage*
		constexpr auto EyeWearSlot = 0x278; // UUW-Inventory_EquippedSlot_C*
		constexpr auto GhillieSlot = 0x280; // UUW-Inventory_EquippedSlot_C*
		constexpr auto GlovesSlot = 0x288; // UUW-Inventory_EquippedSlot_C*
		constexpr auto HatSlot = 0x290; // UUW-Inventory_EquippedSlot_C*
		constexpr auto HelmetSlot = 0x298; // UUW-Inventory_EquippedSlot_C*
		constexpr auto MaskSlot = 0x2a0; // UUW-Inventory_EquippedSlot_C*
		constexpr auto OuterSlot = 0x2a8; // UUW-Inventory_EquippedSlot_C*
		constexpr auto ShoesSlot = 0x2b0; // UUW-Inventory_EquippedSlot_C*
		constexpr auto TopSlot = 0x2b8; // UUW-Inventory_EquippedSlot_C*
		constexpr auto UW-Inventory_CharacterPreView = 0x2c0; // UUW-Inventory_CharacterPreView_C*
		constexpr auto PlayerController = 0x2c8; // ABP-BravoHotel-PlayerController_C*
		constexpr auto EquipedSlots = 0x2d0; // TMap<EWearableItemType, UUW-Inventory_EquippedSlot_C*>
	}

	namespace n_UDatasmithPointLightComponentTemplate {
		constexpr auto IntensityUnits = 0x30; // ELightUnits
		constexpr auto SourceRadius = 0x34; // float
		constexpr auto SourceLength = 0x38; // float
		constexpr auto AttenuationRadius = 0x3c; // float
	}

	namespace n_UNativeReplayKillEventMarker {
		constexpr auto KillEvent = 0x270; // FMK3DHighlightKillEvent
		constexpr auto ClickToJumpDeltaSec = 0x2a8; // float
	}

	namespace n_UUW-CustomizedCharacter_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto CurrentAccel = 0x250; // FRotator
		constexpr auto TargetAccel = 0x25c; // FRotator
		constexpr auto CurrentCameraActor = 0x268; // ACineCameraActor*
		constexpr auto OldCameraLocation = 0x270; // FVector
		constexpr auto CurrentCameraLocation = 0x27c; // FVector
		constexpr auto OriginCameraLocation = 0x288; // FVector
		constexpr auto TargetCameraLocation = 0x294; // FVector
		constexpr auto DataAsset = 0x2a0; // UCustomizedChara_DataAsset_C*
		constexpr auto ResetOriginTransform = 0x2a8; // bool
		constexpr auto BeginFocusDist = 0x2ac; // float
		constexpr auto EndFocusDist = 0x2b0; // float
		constexpr auto CurrentFocusDist = 0x2b4; // float
	}

	namespace n_ALevelSequenceMediaController {
		constexpr auto Sequence = 0x320; // ALevelSequenceActor*
		constexpr auto MediaComponent = 0x328; // UMediaComponent*
		constexpr auto ServerStartTimeSeconds = 0x330; // float
	}

	namespace n_UDistributionFloatParameterBase {
		constexpr auto ParameterName = 0x40; // FName
		constexpr auto MinInput = 0x48; // float
		constexpr auto MaxInput = 0x4c; // float
		constexpr auto MinOutput = 0x50; // float
		constexpr auto MaxOutput = 0x54; // float
		constexpr auto ParamMode = 0x58; // DistributionParamMode
	}

	namespace n_UArrowComponent {
		constexpr auto ArrowColor = 0x4b0; // FColor
		constexpr auto ArrowSize = 0x4b4; // float
		constexpr auto ScreenSize = 0x4b8; // float
		constexpr auto bIsScreenSizeScaled = 0x4bc; // char : 1
		constexpr auto bTreatAsASprite = 0x4bc; // char : 1
	}

	namespace n_ARadialForceActor {
		constexpr auto ForceComponent = 0x318; // URadialForceComponent*
	}

	namespace n_ADatasmithSceneActor {
		constexpr auto Scene = 0x318; // UDatasmithScene*
		constexpr auto RelatedActors = 0x320; // TMap<FName, TSoftObjectPtr<AActor>>
	}

	namespace n_UToFloatField {
		constexpr auto IntField = 0xb0; // UFieldNodeInt*
	}

	namespace n_UUW-Inventory_WeaponSlot_C {
		constexpr auto UberGraphFrame = 0x1358; // FPointerToUberGraphFrame
		constexpr auto Anim_LoopHintMainWeapon = 0x1360; // UWidgetAnimation*
		constexpr auto Anim_Material_Get = 0x1368; // UWidgetAnimation*
		constexpr auto Anim_Material_Hover = 0x1370; // UWidgetAnimation*
		constexpr auto Anim_Upgrade = 0x1378; // UWidgetAnimation*
		constexpr auto Anim_Progress = 0x1380; // UWidgetAnimation*
		constexpr auto WeaponPerk_fadeIn = 0x1388; // UWidgetAnimation*
		constexpr auto Anim_LoopNotifySubWeapon = 0x1390; // UWidgetAnimation*
		constexpr auto Anim_StartNotifySubWeapon = 0x1398; // UWidgetAnimation*
		constexpr auto Anim_LoopNotifyMainWeapon = 0x13a0; // UWidgetAnimation*
		constexpr auto Anim_StartNotifyMainWeapon = 0x13a8; // UWidgetAnimation*
		constexpr auto Ammo01 = 0x13b0; // UTextBlock*
		constexpr auto Ammo02 = 0x13b8; // UTextBlock*
		constexpr auto AmmoInfo01 = 0x13c0; // UTextBlock*
		constexpr auto AmmoInfo02 = 0x13c8; // UTextBlock*
		constexpr auto Barrel01 = 0x13d0; // UUW-Inventory_WeaponAttachmentSlot_C*
		constexpr auto BG01 = 0x13d8; // UImage*
		constexpr auto BG02 = 0x13e0; // UImage*
		constexpr auto BorderImage02 = 0x13e8; // UImage*
		constexpr auto btn_RecipeTree = 0x13f0; // UButton*
		constexpr auto ButtStockSlot01 = 0x13f8; // UUW-Inventory_WeaponAttachmentSlot_C*
		constexpr auto ButtStockSlot02 = 0x1400; // UUW-Inventory_WeaponAttachmentSlot_C*
		constexpr auto Canvas_AnimMain = 0x1408; // UCanvasPanel*
		constexpr auto Canvas_AnimMain_Progress = 0x1410; // UCanvasPanel*
		constexpr auto Canvas_AnimMain_Upgrade = 0x1418; // UCanvasPanel*
		constexpr auto Canvas_AnimSub = 0x1420; // UCanvasPanel*
		constexpr auto Choice_BG01 = 0x1428; // UImage*
		constexpr auto Choice_BG02 = 0x1430; // UImage*
		constexpr auto GripSlot01 = 0x1438; // UUW-Inventory_WeaponAttachmentSlot_C*
		constexpr auto HorizontalBox_Perk = 0x1440; // UHorizontalBox*
		constexpr auto HorizontalBox_Rarity1 = 0x1448; // UHorizontalBox*
		constexpr auto HorizontalBox_Rarity2 = 0x1450; // UHorizontalBox*
		constexpr auto Image_2 = 0x1458; // UImage*
		constexpr auto Image_3 = 0x1460; // UImage*
		constexpr auto Image_5 = 0x1468; // UImage*
		constexpr auto Image_7 = 0x1470; // UImage*
		constexpr auto Image_48 = 0x1478; // UImage*
		constexpr auto Image_85 = 0x1480; // UImage*
		constexpr auto Image_86 = 0x1488; // UImage*
		constexpr auto Image_175 = 0x1490; // UImage*
		constexpr auto Image_202 = 0x1498; // UImage*
		constexpr auto Image_212 = 0x14a0; // UImage*
		constexpr auto Image_214 = 0x14a8; // UImage*
		constexpr auto Image_217 = 0x14b0; // UImage*
		constexpr auto Image_219 = 0x14b8; // UImage*
		constexpr auto Image_234 = 0x14c0; // UImage*
		constexpr auto Image_356 = 0x14c8; // UImage*
		constexpr auto Image_369 = 0x14d0; // UImage*
		constexpr auto Image_371 = 0x14d8; // UImage*
		constexpr auto Image_372 = 0x14e0; // UImage*
		constexpr auto Image_682 = 0x14e8; // UImage*
		constexpr auto Image_805 = 0x14f0; // UImage*
		constexpr auto Image_807 = 0x14f8; // UImage*
		constexpr auto Image_808 = 0x1500; // UImage*
		constexpr auto Image_809 = 0x1508; // UImage*
		constexpr auto Image_1071 = 0x1510; // UImage*
		constexpr auto Image_Bindable = 0x1518; // UImage*
		constexpr auto Image_Supply = 0x1520; // UImage*
		constexpr auto ImageAmmo01 = 0x1528; // UImage*
		constexpr auto ImageAmmo02 = 0x1530; // UImage*
		constexpr auto Info01 = 0x1538; // USizeBox*
		constexpr auto Info02 = 0x1540; // USizeBox*
		constexpr auto Line01 = 0x1548; // UImage*
		constexpr auto Line02 = 0x1550; // UImage*
		constexpr auto MagazineSlot01 = 0x1558; // UUW-Inventory_WeaponAttachmentSlot_C*
		constexpr auto MagazineSlot02 = 0x1560; // UUW-Inventory_WeaponAttachmentSlot_C*
		constexpr auto MainWeaponSlot = 0x1568; // USizeBox*
		constexpr auto MuzzleDeviceSlot01 = 0x1570; // UUW-Inventory_WeaponAttachmentSlot_C*
		constexpr auto MuzzleDeviceSlot02 = 0x1578; // UUW-Inventory_WeaponAttachmentSlot_C*
		constexpr auto Overlay_2 = 0x1580; // UOverlay*
		constexpr auto Perk01 = 0x1588; // UUW-Inventory_WeaponAttachmentSlot_C*
		constexpr auto Perk01_Sub = 0x1590; // UUW-Inventory_WeaponAttachmentSlot_C*
		constexpr auto Perk02 = 0x1598; // UUW-Inventory_WeaponAttachmentSlot_C*
		constexpr auto Perk02_Sub = 0x15a0; // UUW-Inventory_WeaponAttachmentSlot_C*
		constexpr auto Perk03 = 0x15a8; // UUW-Inventory_WeaponAttachmentSlot_C*
		constexpr auto Perk03_Sub = 0x15b0; // UUW-Inventory_WeaponAttachmentSlot_C*
		constexpr auto Perk04 = 0x15b8; // UUW-Inventory_WeaponAttachmentSlot_C*
		constexpr auto Perk04_Sub = 0x15c0; // UUW-Inventory_WeaponAttachmentSlot_C*
		constexpr auto SightSlot01 = 0x15c8; // UUW-Inventory_WeaponAttachmentSlot_C*
		constexpr auto SightSlot02 = 0x15d0; // UUW-Inventory_WeaponAttachmentSlot_C*
		constexpr auto SubWeaponSlot = 0x15d8; // USizeBox*
		constexpr auto TextBlock_1 = 0x15e0; // UTextBlock*
		constexpr auto TextBlock_Range01 = 0x15e8; // UTextBlock*
		constexpr auto TopNameBG01 = 0x15f0; // UImage*
		constexpr auto TopNameBG02 = 0x15f8; // UImage*
		constexpr auto UW-Inventory_MaterialIconSlot = 0x1600; // UUW-Inventory_MaterialIconSlot_C*
		constexpr auto UW-Inventory_WeaponPerkSlot = 0x1608; // UUW-Inventory_WeaponPerkSlot_C*
		constexpr auto UW-Inventory_WeaponPerkSlot_C_2 = 0x1610; // UUW-Inventory_WeaponPerkSlot_C*
		constexpr auto UW-Inventory_WeaponPerkSlot_C_3 = 0x1618; // UUW-Inventory_WeaponPerkSlot_C*
		constexpr auto UW-StatupWidget = 0x1620; // UUW-StatupWidget_C*
		constexpr auto WeaponImage01 = 0x1628; // UImage*
		constexpr auto WeaponImage02 = 0x1630; // UImage*
		constexpr auto WeaponIndex01 = 0x1638; // UTextBlock*
		constexpr auto WeaponIndex02 = 0x1640; // UTextBlock*
		constexpr auto WeaponName01 = 0x1648; // UTextBlock*
		constexpr auto WeaponName02 = 0x1650; // UTextBlock*
		constexpr auto WeaponTitle01 = 0x1658; // UOverlay*
		constexpr auto WeaponTitle02 = 0x1660; // UOverlay*
		constexpr auto WidgetSwitcher_1 = 0x1668; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_Rarity = 0x1670; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_SpecialWeapon = 0x1678; // UWidgetSwitcher*
		constexpr auto WeaponType = 0x1680; // EWeaponType
		constexpr auto SlotIndex = 0x1684; // int32_t
		constexpr auto WeaponBase = 0x1688; // ABravoHotelWeaponBase*
		constexpr auto bCanEquip = 0x1690; // bool
		constexpr auto WeaponAttachmentSlots01 = 0x1698; // TMap<EWeaponAttachmentType, UUW-Inventory_WeaponAttachmentSlot_C*>
		constexpr auto WeaponAttachmentSlots02 = 0x16e8; // TMap<EWeaponAttachmentType, UUW-Inventory_WeaponAttachmentSlot_C*>
		constexpr auto WeaponIconHeight = 0x1738; // float
		constexpr auto bHover = 0x173c; // bool
		constexpr auto HoverWidget = 0x1740; // UUW-Inventory_ItemSlotHover_C*
		constexpr auto NotifyAnimLoopNum = 0x1748; // int32_t
	}

	namespace n_UMockDataMeshTrackerComponent {
		constexpr auto OnMeshTrackerUpdated = 0x230; // FMulticastInlineDelegate
		constexpr auto ScanWorld = 0x240; // bool
		constexpr auto RequestNormals = 0x241; // bool
		constexpr auto RequestVertexConfidence = 0x242; // bool
		constexpr auto VertexColorMode = 0x243; // EMeshTrackerVertexColorMode
		constexpr auto BlockVertexColors = 0x248; // TArray<FColor>
		constexpr auto VertexColorFromConfidenceZero = 0x258; // FLinearColor
		constexpr auto VertexColorFromConfidenceOne = 0x268; // FLinearColor
		constexpr auto UpdateInterval = 0x278; // float
		constexpr auto MRMesh = 0x280; // UMRMeshComponent*
	}

	namespace n_USphereReflectionCaptureComponent {
		constexpr auto InfluenceRadius = 0x2b8; // float
		constexpr auto CaptureDistanceScale = 0x2bc; // float
		constexpr auto PreviewInfluenceRadius = 0x2c0; // UDrawSphereComponent*
	}

	namespace n_AARSharedWorldGameMode {
		constexpr auto BufferSizePerChunk = 0x400; // int32_t
	}

	namespace n_UAnimationDataSourceRegistry {
		constexpr auto DataSources = 0x28; // TMap<FName, TWeakObjectPtr<UObject>>
	}

	namespace n_AEmitterCameraLensEffectBase {
		constexpr auto PS_CameraEffect = 0x368; // UParticleSystem*
		constexpr auto PS_CameraEffectNonExtremeContent = 0x370; // UParticleSystem*
		constexpr auto BaseCamera = 0x378; // APlayerCameraManager*
		constexpr auto RelativeTransform = 0x380; // FTransform
		constexpr auto BaseFOV = 0x3b0; // float
		constexpr auto bAllowMultipleInstances = 0x3b4; // char : 1
		constexpr auto bResetWhenRetriggered = 0x3b4; // char : 1
		constexpr auto EmittersToTreatAsSame = 0x3b8; // TArray<AEmitterCameraLensEffectBase*>
		constexpr auto DistFromCamera = 0x3c8; // float
	}

	namespace n_ULightmappedSurfaceCollection {
		constexpr auto SourceModel = 0x28; // UModel*
		constexpr auto Surfaces = 0x30; // TArray<int32_t>
	}

	namespace n_UAkAudioEventData {
		constexpr auto MaxAttenuationRadius = 0x88; // float
		constexpr auto IsInfinite = 0x8c; // bool
		constexpr auto MinimumDuration = 0x90; // float
		constexpr auto MaximumDuration = 0x94; // float
		constexpr auto LocalizedMedia = 0x98; // TMap<FString, UAkAssetDataSwitchContainer*>
		constexpr auto PostedEvents = 0xe8; // TSet<UAkAudioEvent*>
		constexpr auto UserDefinedSends = 0x138; // TSet<UAkAuxBus*>
		constexpr auto PostedTriggers = 0x188; // TSet<UAkTrigger*>
		constexpr auto GroupValues = 0x1d8; // TSet<UAkGroupValue*>
	}

	namespace n_UPlayerInventoryComponent {
		constexpr auto KeepedItemSlots = 0x2b8; // TArray<FKeepedItemInfo>
		constexpr auto WearableItemSlots = 0x2c8; // TArray<FInventoryItemInfo>
		constexpr auto DefualtKeepedItemSlotCount = 0x2d8; // int32_t
		constexpr auto ItemDropRateRangeByRank = 0x2e0; // TMap<int32_t, FFloatInterval>
		constexpr auto CurrentAbilityWeapon = 0x350; // ABravoHotelWeaponBase*
		constexpr auto DefaultMaterialItemSlotCount = 0x358; // int32_t
		constexpr auto OnChangeWearableItemDelegate = 0x3b0; // FMulticastInlineDelegate
		constexpr auto bDropAttachmentToGroundWhenDropWeapon = 0x3c0; // bool
		constexpr auto CompleteCombineItemList = 0x3c8; // TArray<FName>
		constexpr auto OnChangeMaterialDelegate = 0x3d8; // FMulticastInlineDelegate
		constexpr auto TopHelmetName = 0x3e8; // FName
		constexpr auto DefaultWeaponSlots = 0x3f0; // TArray<FWeaponSlot>
		constexpr auto PrimaryMaterialList = 0x410; // TMap<FName, int32_t>
		constexpr auto CombinableRecipeList = 0x4b8; // TArray<FName>
		constexpr auto DefaultItemDropRateRange = 0x4c8; // FFloatInterval
		constexpr auto InventorySettingData = 0x4e0; // FSettingData
		constexpr auto TopArmorName = 0x550; // FName
		constexpr auto ItemDropDistance = 0x558; // FFloatInterval
		constexpr auto OnChangeCurrentWeaponDelegate = 0x560; // FMulticastInlineDelegate
		constexpr auto ItemDropRateByTime = 0x570; // UCurveFloat*
		constexpr auto bPendingEquipWeapon = 0x578; // bool
		constexpr auto OnChangeWeaponAttachmentsDelgate = 0x580; // FMulticastInlineDelegate
		constexpr auto PickupTraceDistance = 0x590; // float
		constexpr auto PrimaryRecipeList = 0x598; // TArray<FName>
		constexpr auto CurrentWearableKeys = 0x5a8; // TMap<EWearableItemType, FName>
		constexpr auto LoadedClasses = 0x600; // TArray<UObject*>
		constexpr auto StatupAnimData = 0x610; // FStatupAnimData
		constexpr auto ItemDropRateByRank = 0x628; // UCurveFloat*
		constexpr auto CurrentWeapon = 0x630; // ABravoHotelWeaponBase*
		constexpr auto bPendingUnEquipWeapon = 0x640; // bool
		constexpr auto TopBagName = 0x644; // FName
		constexpr auto DropToFloorSound = 0x650; // UAkAudioEvent*
		constexpr auto OnChangeWeaponsDelegate = 0x658; // FMulticastInlineDelegate
		constexpr auto MaterialItemSlots = 0x668; // TArray<FInventoryItemInfo>
		constexpr auto WeaponActorSlots = 0x678; // TArray<ABravoHotelWeaponBase*>
		constexpr auto PendingWeapon = 0x6a0; // ABravoHotelWeaponBase*
		constexpr auto bIsPlayingEquipAnimMontage = 0x6a8; // bool
		constexpr auto CurrentEquipAnimSlot = 0x6b0; // FAnimSlot
		constexpr auto bDropWeaponWithAttachment = 0x6c0; // bool
		constexpr auto AllowedWeaponSlots = 0x6e0; // TArray<FWeaponSlot>
		constexpr auto PrimaryMaterialTargetTextList = 0x6f0; // TMap<FName, FText>
		constexpr auto bEquippingWeapon = 0x740; // bool
	}

	namespace n_UParticleModuleLocationEmitter {
		constexpr auto EmitterName = 0x30; // FName
		constexpr auto SelectionMethod = 0x38; // ELocationEmitterSelectionMethod
		constexpr auto InheritSourceVelocity = 0x3c; // char : 1
		constexpr auto InheritSourceVelocityScale = 0x40; // float
		constexpr auto bInheritSourceRotation = 0x44; // char : 1
		constexpr auto InheritSourceRotationScale = 0x48; // float
	}

	namespace n_ULowEntryByteDataWriter {
		constexpr auto Bytes = 0x28; // TArray<char>
	}

	namespace n_UButtonWidgetStyle {
		constexpr auto ButtonStyle = 0x30; // FButtonStyle
	}

	namespace n_APlayerController {
		constexpr auto PlayerCameraManager = 0x3e8; // APlayerCameraManager*
		constexpr auto bShouldPerformFullTickWhenPaused = 0x408; // char : 1
		constexpr auto PlayerInput = 0x410; // UPlayerInput*
		constexpr auto MyHUD = 0x418; // AHUD*
		constexpr auto ClientCap = 0x420; // int32_t
		constexpr auto LastCompletedSeamlessTravelCount = 0x424; // uint16_t
		constexpr auto DefaultMouseCursor = 0x426; // EMouseCursor
		constexpr auto SeamlessTravelCount = 0x428; // uint16_t
		constexpr auto bPlayerIsWaiting = 0x42c; // char : 1
		constexpr auto CheatManager = 0x430; // UCheatManager*
		constexpr auto NetConnection = 0x478; // UNetConnection*
		constexpr auto bForceFeedbackEnabled = 0x480; // char : 1
		constexpr auto ClickEventKeys = 0x488; // TArray<FKey>
		constexpr auto bShowMouseCursor = 0x498; // char : 1
		constexpr auto HitResultTraceDistance = 0x49c; // float
		constexpr auto bEnableMouseOverEvents = 0x4ac; // char : 1
		constexpr auto bIsLocalPlayerController = 0x4b4; // bool
		constexpr auto ActiveForceFeedbackEffects = 0x4c8; // TArray<FActiveForceFeedbackEffect>
		constexpr auto InputYawScale = 0x4d8; // float
		constexpr auto bEnableTouchOverEvents = 0x4e8; // char : 1
		constexpr auto LastSpectatorSyncRotation = 0x4ec; // FRotator
		constexpr auto ControllingDirTrackInst = 0x4f8; // UInterpTrackInstDirector*
		constexpr auto NetPlayerIndex = 0x510; // char
		constexpr auto LastSpectatorSyncLocation = 0x514; // FVector
		constexpr auto HiddenPrimitiveComponents = 0x540; // TArray<TWeakObjectPtr<UPrimitiveComponent>>
		constexpr auto bEnableClickEvents = 0x550; // char : 1
		constexpr auto CurrentTouchInterface = 0x598; // UTouchInterface*
		constexpr auto InputPitchScale = 0x5a0; // float
		constexpr auto SpectatorPawn = 0x5b0; // ASpectatorPawn*
		constexpr auto LastSpectatorStateSynchTime = 0x5bc; // float
		constexpr auto bEnableTouchEvents = 0x5c0; // char : 1
		constexpr auto AcknowledgedPawn = 0x5c8; // APawn*
		constexpr auto PendingSwapConnection = 0x5d0; // UNetConnection*
		constexpr auto DefaultClickTraceChannel = 0x5dc; // ECollisionChannel
		constexpr auto Player = 0x5e0; // UPlayer*
		constexpr auto TargetViewRotation = 0x5f0; // FRotator
		constexpr auto SmoothTargetViewRotationSpeed = 0x5fc; // float
		constexpr auto InputRollScale = 0x604; // float
		constexpr auto CheatClass = 0x608; // UCheatManager*
		constexpr auto SpawnLocation = 0x61c; // FVector
		constexpr auto CurrentMouseCursor = 0x629; // EMouseCursor
		constexpr auto bAutoManageActiveCameraTarget = 0x684; // bool
		constexpr auto CurrentClickTraceChannel = 0x694; // ECollisionChannel
		constexpr auto HiddenActors = 0x6a8; // TArray<AActor*>
		constexpr auto InactiveStateInputComponent = 0x6c8; // UInputComponent*
		constexpr auto PlayerCameraManagerClass = 0x6e8; // APlayerCameraManager*
		constexpr auto ForceFeedbackScale = 0x700; // float
	}

	namespace n_UUW-Lobby_Craft_List_Category_Slot_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Button_Weapon = 0x250; // UButton*
		constexpr auto HorizontalBox_Rarity = 0x258; // UHorizontalBox*
		constexpr auto Image_2 = 0x260; // UImage*
		constexpr auto Image_3 = 0x268; // UImage*
		constexpr auto Image_4 = 0x270; // UImage*
		constexpr auto Image_5 = 0x278; // UImage*
		constexpr auto Image_6 = 0x280; // UImage*
		constexpr auto Image_7 = 0x288; // UImage*
		constexpr auto Image_8 = 0x290; // UImage*
		constexpr auto Image_310 = 0x298; // UImage*
		constexpr auto Image_Item_Weapon = 0x2a0; // UImage*
		constexpr auto Image_New = 0x2a8; // UImage*
		constexpr auto T_Name = 0x2b0; // UTextBlock*
		constexpr auto WidgetSwitcher_Own = 0x2b8; // UWidgetSwitcher*
		constexpr auto ParentWidgetRef = 0x2c0; // UUW-Lobby_Craft_List_Category_C*
		constexpr auto CraftingInfo = 0x2c8; // FItemCrafting
		constexpr auto CraftMaterialItemIDList = 0x3f0; // TArray<int32_t>
		constexpr auto CraftMaterialWeaponID = 0x400; // int32_t
		constexpr auto IsOwn = 0x404; // bool
		constexpr auto IsOwnAny = 0x405; // bool
		constexpr auto DefaultImage = 0x408; // UPaperSprite*
		constexpr auto PressedDefaultImage = 0x410; // UPaperSprite*
		constexpr auto IsNew = 0x418; // bool
	}

	namespace n_UMaterialExpressionOneMinus {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UFindSessionsCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UGeometryCache {
		constexpr auto Materials = 0x30; // TArray<UMaterialInterface*>
		constexpr auto Tracks = 0x40; // TArray<UGeometryCacheTrack*>
		constexpr auto StartFrame = 0x60; // int32_t
		constexpr auto EndFrame = 0x64; // int32_t
	}

	namespace n_APaperCharacter {
		constexpr auto Sprite = 0x5d8; // UPaperFlipbookComponent*
	}

	namespace n_UMaterialExpressionArcsine {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_ABP_MoveElevator_C {
		constexpr auto UberGraphFrame = 0x328; // FPointerToUberGraphFrame
		constexpr auto Box2 = 0x330; // UBoxComponent*
		constexpr auto Box1 = 0x338; // UBoxComponent*
		constexpr auto BravoHotelAudioEmitter = 0x340; // UBravoHotelAudioEmitterComponent*
		constexpr auto Upper_Rear_Display_Sub = 0x348; // UStaticMeshComponent*
		constexpr auto Upper_Front_Display_Sub = 0x350; // UStaticMeshComponent*
		constexpr auto Lower_Rear_Display_Sub = 0x358; // UStaticMeshComponent*
		constexpr auto Lower_Front_Display_Sub = 0x360; // UStaticMeshComponent*
		constexpr auto PointBox = 0x368; // UBoxComponent*
		constexpr auto FloorBox = 0x370; // UBoxComponent*
		constexpr auto Main_Display = 0x378; // UStaticMeshComponent*
		constexpr auto Box = 0x380; // UBoxComponent*
		constexpr auto TextRender5 = 0x388; // UTextRenderComponent*
		constexpr auto TextRender7 = 0x390; // UTextRenderComponent*
		constexpr auto TextRender6 = 0x398; // UTextRenderComponent*
		constexpr auto TextRender1 = 0x3a0; // UTextRenderComponent*
		constexpr auto TextRender4 = 0x3a8; // UTextRenderComponent*
		constexpr auto TextRender3 = 0x3b0; // UTextRenderComponent*
		constexpr auto TextRender = 0x3b8; // UTextRenderComponent*
		constexpr auto TextRender2 = 0x3c0; // UTextRenderComponent*
		constexpr auto Upper_Front_Button_Area = 0x3c8; // UBoxComponent*
		constexpr auto Upper_Rear_Button_Area = 0x3d0; // UBoxComponent*
		constexpr auto Lower_Rear_Button_Area = 0x3d8; // UBoxComponent*
		constexpr auto Lower_Front_Button_Area = 0x3e0; // UBoxComponent*
		constexpr auto Main_Rear_Button_Area = 0x3e8; // UBoxComponent*
		constexpr auto Main_Front_Button_Area = 0x3f0; // UBoxComponent*
		constexpr auto Main_Front_Button = 0x3f8; // UStaticMeshComponent*
		constexpr auto Main_Rear_Button = 0x400; // UStaticMeshComponent*
		constexpr auto Upper_Rear_Display = 0x408; // UStaticMeshComponent*
		constexpr auto Upper_Front_Display = 0x410; // UStaticMeshComponent*
		constexpr auto Lower_Rear_Display = 0x418; // UStaticMeshComponent*
		constexpr auto Lower_Front_Display = 0x420; // UStaticMeshComponent*
		constexpr auto Upper_Rear_Button = 0x428; // UStaticMeshComponent*
		constexpr auto Upper_Front_Button = 0x430; // UStaticMeshComponent*
		constexpr auto Lower_Rear_Button = 0x438; // UStaticMeshComponent*
		constexpr auto Lower_Front_Button = 0x440; // UStaticMeshComponent*
		constexpr auto Upper_Rear_Left = 0x448; // UStaticMeshComponent*
		constexpr auto Upper_Rear_Right = 0x450; // UStaticMeshComponent*
		constexpr auto Upper_Front_Left = 0x458; // UStaticMeshComponent*
		constexpr auto Upper_Front_Right = 0x460; // UStaticMeshComponent*
		constexpr auto Lower_Rear_Right = 0x468; // UStaticMeshComponent*
		constexpr auto Lower_Front_Right = 0x470; // UStaticMeshComponent*
		constexpr auto Lower_Front_Left = 0x478; // UStaticMeshComponent*
		constexpr auto Lower_Rear_Left = 0x480; // UStaticMeshComponent*
		constexpr auto Upper_Rear = 0x488; // USceneComponent*
		constexpr auto Upper_Front = 0x490; // USceneComponent*
		constexpr auto Lower_Rear = 0x498; // USceneComponent*
		constexpr auto Lower_Front = 0x4a0; // USceneComponent*
		constexpr auto Upper_Floor = 0x4a8; // USceneComponent*
		constexpr auto Front_Door = 0x4b0; // USceneComponent*
		constexpr auto Rear_Door = 0x4b8; // USceneComponent*
		constexpr auto Lower_Floor = 0x4c0; // USceneComponent*
		constexpr auto Main_Front_Right = 0x4c8; // UStaticMeshComponent*
		constexpr auto Main_Front_Left = 0x4d0; // UStaticMeshComponent*
		constexpr auto Main_Body = 0x4d8; // UStaticMeshComponent*
		constexpr auto Scene1 = 0x4e0; // USceneComponent*
		constexpr auto Main_Rear_Right = 0x4e8; // UStaticMeshComponent*
		constexpr auto Main_Rear_Left = 0x4f0; // UStaticMeshComponent*
		constexpr auto ElevatorCloseDoor______0_70C4393D45E164D3C8B473964F68015B = 0x4f8; // float
		constexpr auto ElevatorCloseDoor__Direction_70C4393D45E164D3C8B473964F68015B = 0x4fc; // ETimelineDirection
		constexpr auto ElevatorCloseDoor = 0x500; // UTimelineComponent*
		constexpr auto LowerMoving______0_95D3AE1045ABFF7C4CC7778EAC04BCDA = 0x508; // float
		constexpr auto LowerMoving__Direction_95D3AE1045ABFF7C4CC7778EAC04BCDA = 0x50c; // ETimelineDirection
		constexpr auto LowerMoving = 0x510; // UTimelineComponent*
		constexpr auto ElevatorOpenDoor______0_5DABF5354368A8D3121A6FB4685095FB = 0x518; // float
		constexpr auto ElevatorOpenDoor__Direction_5DABF5354368A8D3121A6FB4685095FB = 0x51c; // ETimelineDirection
		constexpr auto ElevatorOpenDoor = 0x520; // UTimelineComponent*
		constexpr auto UpperMoving______0_B6B6057A44D35DFC9C1FCDB8B065C5D0 = 0x528; // float
		constexpr auto UpperMoving__Direction_B6B6057A44D35DFC9C1FCDB8B065C5D0 = 0x52c; // ETimelineDirection
		constexpr auto UpperMoving = 0x530; // UTimelineComponent*
		constexpr auto Upper_Location = 0x538; // FVector
		constexpr auto Body_Position = 0x544; // FVector
		constexpr auto IsLower = 0x550; // bool
		constexpr auto DoorTravel = 0x554; // float
		constexpr auto DoorMoveTime = 0x558; // float
		constexpr auto IsMoving = 0x55c; // bool
		constexpr auto RoomPos = 0x560; // FVector
		constexpr auto MoveFloor = 0x570; // USceneComponent*
		constexpr auto AddCharacters = 0x578; // TArray<ABravoHotelCharacter*>
		constexpr auto AddMoveOffest = 0x588; // float
		constexpr auto OpenDoorCompleted = 0x590; // UAkAudioEvent*
		constexpr auto OpeningDoor = 0x598; // UAkAudioEvent*
		constexpr auto ClosingDoor = 0x5a0; // UAkAudioEvent*
		constexpr auto CloseDoorCompleted = 0x5a8; // UAkAudioEvent*
		constexpr auto SoundEventForMoved = 0x5b0; // UAkAudioEvent*
		constexpr auto SoundEventForMoving = 0x5b8; // UAkAudioEvent*
		constexpr auto IsTraceMoving = 0x5c0; // bool
		constexpr auto TraceLocation = 0x5c4; // FVector
		constexpr auto AttachActors = 0x5d0; // TArray<AActor*>
		constexpr auto NewVar_1 = 0x5e0; // bool
		constexpr auto NewVar_2 = 0x5e1; // bool
		constexpr auto ElevatorAKComponent = 0x5e8; // UAkComponent*
		constexpr auto ButtonSound = 0x5f0; // UAkAudioEvent*
	}

	namespace n_UMonoWaveTableSynthPreset {
		constexpr auto PresetName = 0x28; // FString
		constexpr auto bLockKeyframesToGridBool = 0x38; // char : 1
		constexpr auto LockKeyframesToGrid = 0x3c; // int32_t
		constexpr auto WaveTableResolution = 0x40; // int32_t
		constexpr auto WaveTable = 0x48; // TArray<FRuntimeFloatCurve>
		constexpr auto bNormalizeWaveTables = 0x58; // char : 1
	}

	namespace n_UMaterialExpressionRound {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UAkGroupValue {
		constexpr auto MediaDependencies = 0x40; // TArray<TSoftObjectPtr<UAkMediaAsset>>
		constexpr auto GroupShortID = 0x50; // uint32_t
	}

	namespace n_UMovieSceneCameraCutTrack {
		constexpr auto bCanBlend = 0x58; // bool
		constexpr auto Sections = 0x60; // TArray<UMovieSceneSection*>
	}

	namespace n_UUW-WorldMapWidget_C {
		constexpr auto UberGraphFrame = 0x2b8; // FPointerToUberGraphFrame
		constexpr auto FadeIn = 0x2c0; // UWidgetAnimation*
		constexpr auto NewAnimation_2 = 0x2c8; // UWidgetAnimation*
		constexpr auto Bg = 0x2d0; // UImage*
		constexpr auto BP-CheckWeightMap = 0x2d8; // UBP-CheckWeightMap_C*
		constexpr auto BP-MapComp = 0x2e0; // UUW-MapComp_C*
		constexpr auto CloseButton = 0x2e8; // UButton*
		constexpr auto ShowHelBoxButton = 0x2f0; // UButton*
		constexpr auto UW-ClassinfoitemBoardWidget = 0x2f8; // UUW-ClassinfoitemBoardWidget_C*
		constexpr auto WidgetSwitcher_1 = 0x300; // UWidgetSwitcher*
		constexpr auto MAX_ZOOM_LEVEL = 0x308; // int32_t
		constexpr auto ZoomLevel = 0x30c; // int32_t
		constexpr auto MAX_SCALE_FACTOR = 0x310; // float
		constexpr auto InitializeCount = 0x314; // int32_t
		constexpr auto PosOnViewport = 0x318; // FVector2D
		constexpr auto CurrentScaleFactor = 0x320; // float
		constexpr auto MouseButtonDownPos = 0x324; // FVector2D
		constexpr auto SelectPingMenuTimer = 0x330; // FTimerHandle
		constexpr auto SelectionMenu = 0x338; // UWBP_SPS_SelectionMenu_C*
		constexpr auto IsRoutePing = 0x340; // bool
		constexpr auto MaxRoutePointCount = 0x344; // int32_t
		constexpr auto RoutePointArray = 0x348; // TArray<FVector>
	}

	namespace n_UBravoHotelAnimNotify_TimedPostProcess {
		constexpr auto EffectRowName = 0x38; // FName
		constexpr auto Duration = 0x40; // float
		constexpr auto bFPPOnly = 0x44; // bool
	}

	namespace n_UApplicationLifecycleComponent {
		constexpr auto ApplicationWillDeactivateDelegate = 0xb0; // FMulticastInlineDelegate
		constexpr auto ApplicationHasReactivatedDelegate = 0xc0; // FMulticastInlineDelegate
		constexpr auto ApplicationWillEnterBackgroundDelegate = 0xd0; // FMulticastInlineDelegate
		constexpr auto ApplicationHasEnteredForegroundDelegate = 0xe0; // FMulticastInlineDelegate
		constexpr auto ApplicationWillTerminateDelegate = 0xf0; // FMulticastInlineDelegate
		constexpr auto ApplicationShouldUnloadResourcesDelegate = 0x100; // FMulticastInlineDelegate
		constexpr auto ApplicationReceivedStartupArgumentsDelegate = 0x110; // FMulticastInlineDelegate
		constexpr auto OnTemperatureChangeDelegate = 0x120; // FMulticastInlineDelegate
		constexpr auto OnLowPowerModeDelegate = 0x130; // FMulticastInlineDelegate
	}

	namespace n_UMKChannelEx {
		constexpr auto SelfChannel = 0x30; // UChannel*
	}

	namespace n_UMovieSceneParameterSection {
		constexpr auto BoolParameterNamesAndCurves = 0xe0; // TArray<FBoolParameterNameAndCurve>
		constexpr auto ScalarParameterNamesAndCurves = 0xf0; // TArray<FScalarParameterNameAndCurve>
		constexpr auto Vector2DParameterNamesAndCurves = 0x100; // TArray<FVector2DParameterNameAndCurves>
		constexpr auto VectorParameterNamesAndCurves = 0x110; // TArray<FVectorParameterNameAndCurves>
		constexpr auto ColorParameterNamesAndCurves = 0x120; // TArray<FColorParameterNameAndCurves>
		constexpr auto TransformParameterNamesAndCurves = 0x130; // TArray<FTransformParameterNameAndCurves>
	}

	namespace n_UUW-MouseRightClick_C {
		constexpr auto Ani_MouseRight = 0x248; // UWidgetAnimation*
		constexpr auto Image = 0x250; // UImage*
		constexpr auto Image_2 = 0x258; // UImage*
		constexpr auto Image_292 = 0x260; // UImage*
		constexpr auto Image_503 = 0x268; // UImage*
	}

	namespace n_ASphereReflectionCapture {
		constexpr auto DrawCaptureRadius = 0x320; // UDrawSphereComponent*
	}

	namespace n_UMovieSceneSequence {
		constexpr auto PrecompiledEvaluationTemplate = 0x50; // FMovieSceneEvaluationTemplate
		constexpr auto DefaultCompletionMode = 0x340; // EMovieSceneCompletionMode
		constexpr auto bParentContextsAreSignificant = 0x341; // bool
		constexpr auto bPlayableDirectly = 0x342; // bool
	}

	namespace n_UParticleModuleSourceMovement {
		constexpr auto SourceMovementScale = 0x30; // FRawDistributionVector
	}

	namespace n_USpectatorPawnMovement {
		constexpr auto bIgnoreTimeDilation = 0x150; // char : 1
	}

	namespace n_UInterpTrackInstVectorMaterialParam {
		constexpr auto MaterialInstances = 0x28; // TArray<UMaterialInstanceDynamic*>
		constexpr auto ResetVectors = 0x38; // TArray<FVector>
		constexpr auto PrimitiveMaterialRefs = 0x48; // TArray<FPrimitiveMaterialRef>
		constexpr auto InstancedTrack = 0x58; // UInterpTrackVectorMaterialParam*
	}

	namespace n_ABravoHotelMaterialEffectActor {
		constexpr auto DestructTime = 0x318; // float
		constexpr auto ColorValues = 0x320; // TMap<FName, FLinearColor>
		constexpr auto FloatValues = 0x370; // TMap<FName, float>
		constexpr auto ColorCurves = 0x3c0; // TMap<FName, UCurveLinearColor*>
		constexpr auto FloatCurves = 0x410; // TMap<FName, UCurveFloat*>
	}

	namespace n_UMovieSceneSubSection {
		constexpr auto Parameters = 0xe0; // FMovieSceneSectionParameters
		constexpr auto StartOffset = 0x104; // float
		constexpr auto TimeScale = 0x108; // float
		constexpr auto PrerollTime = 0x10c; // float
		constexpr auto SubSequence = 0x110; // UMovieSceneSequence*
		constexpr auto ActorToRecord = 0x118; // LazyObjectProperty
		constexpr auto TargetSequenceName = 0x138; // FString
		constexpr auto TargetPathToRecordTo = 0x148; // FDirectoryPath
	}

	namespace n_UFont {
		constexpr auto FontCacheType = 0x30; // EFontCacheType
		constexpr auto Characters = 0x38; // TArray<FFontCharacter>
		constexpr auto Textures = 0x48; // TArray<UTexture2D*>
		constexpr auto IsRemapped = 0x58; // int32_t
		constexpr auto EmScale = 0x5c; // float
		constexpr auto Ascent = 0x60; // float
		constexpr auto Descent = 0x64; // float
		constexpr auto Leading = 0x68; // float
		constexpr auto Kerning = 0x6c; // int32_t
		constexpr auto ImportOptions = 0x70; // FFontImportOptionsData
		constexpr auto NumCharacters = 0x120; // int32_t
		constexpr auto MaxCharHeight = 0x128; // TArray<int32_t>
		constexpr auto ScalingFactor = 0x138; // float
		constexpr auto LegacyFontSize = 0x13c; // int32_t
		constexpr auto LegacyFontName = 0x140; // FName
		constexpr auto CompositeFont = 0x148; // FCompositeFont
	}

	namespace n_UUW-MatchEnd_RewardSlot_02_Blank_C {
		constexpr auto Image_24 = 0x248; // UImage*
	}

	namespace n_ABravoHotelBrokenEquipment {
		constexpr auto WorldStaticMesh = 0x318; // UStaticMeshComponent*
		constexpr auto WorldSkelMesh = 0x320; // USkeletalMeshComponent*
		constexpr auto Equipmentlevel = 0x328; // int32_t
		constexpr auto DamageImpulseDir = 0x32c; // FVector
	}

	namespace n_UUW-PopupWidget_C {
		constexpr auto UberGraphFrame = 0x268; // FPointerToUberGraphFrame
		constexpr auto Bg = 0x270; // UImage*
		constexpr auto btn_Cancel = 0x278; // UButton*
		constexpr auto btn_OK = 0x280; // UButton*
		constexpr auto Desc = 0x288; // UTextBlock*
		constexpr auto Image_2 = 0x290; // UImage*
		constexpr auto Overlay = 0x298; // UOverlay*
		constexpr auto Overlay_1 = 0x2a0; // UOverlay*
		constexpr auto Overlay_2 = 0x2a8; // UOverlay*
		constexpr auto RichTextBlock_244 = 0x2b0; // URichTextBlock*
		constexpr auto TextBlock_17 = 0x2b8; // UTextBlock*
		constexpr auto Throbber_159 = 0x2c0; // UThrobber*
		constexpr auto Title = 0x2c8; // UTextBlock*
		constexpr auto WidgetSwitcher_1 = 0x2d0; // UWidgetSwitcher*
		constexpr auto MapNameToExit = 0x2d8; // FName
		constexpr auto IsExitGame = 0x2e0; // bool
		constexpr auto ControllerRef = 0x2e8; // ABravoHotelPlayerController*
		constexpr auto IsTutorial = 0x2f0; // bool
		constexpr auto IsDeathCam = 0x2f1; // bool
		constexpr auto EventDispatcher_MoveToDeathCam = 0x2f8; // FMulticastInlineDelegate
		constexpr auto ErrorType = 0x308; // bool
		constexpr auto IsPerkDeckSelectMode = 0x309; // bool
		constexpr auto EventDispatcher_TrySelectMode = 0x310; // FMulticastInlineDelegate
		constexpr auto OkayType = 0x320; // bool
	}

	namespace n_UBravoHotelWeightMapData {
		constexpr auto BitDataArray = 0x30; // TArray<char>
		constexpr auto WorldSize = 0x40; // FVector2D
		constexpr auto WorldCenter = 0x48; // FVector2D
		constexpr auto BaseMapSize = 0x50; // FVector2D
		constexpr auto WeightMapRadiusCheckCount = 0x58; // int32_t
	}

	namespace n_UPaperSpriteComponent {
		constexpr auto SourceSprite = 0x4e0; // UPaperSprite*
		constexpr auto MaterialOverride = 0x4e8; // UMaterialInterface*
		constexpr auto SpriteColor = 0x4f0; // FLinearColor
	}

	namespace n_UAnimationSettings {
		constexpr auto CompressCommandletVersion = 0x38; // int32_t
		constexpr auto KeyEndEffectorsMatchNameArray = 0x40; // TArray<FString>
		constexpr auto ForceRecompression = 0x50; // bool
		constexpr auto bOnlyCheckForMissingSkeletalMeshes = 0x51; // bool
		constexpr auto bForceBelowThreshold = 0x52; // bool
		constexpr auto bFirstRecompressUsingCurrentOrDefault = 0x53; // bool
		constexpr auto bRaiseMaxErrorToExisting = 0x54; // bool
		constexpr auto bEnablePerformanceLog = 0x55; // bool
		constexpr auto bStripAnimationDataOnDedicatedServer = 0x56; // bool
		constexpr auto bTickAnimationOnSkeletalMeshInit = 0x57; // bool
	}

	namespace n_ABP-Projectile_MolotovFireCell_C {
		constexpr auto TextureScale = 0x3a0; // float
		constexpr auto BurnArea = 0x3a4; // float
	}

	namespace n_ULowEntryBitDataReader {
		constexpr auto Bytes = 0x28; // TArray<char>
		constexpr auto Position = 0x38; // int32_t
		constexpr auto CurrentByte = 0x3c; // char
		constexpr auto CurrentBytePosition = 0x40; // int32_t
	}

	namespace n_UChannel {
		constexpr auto Connection = 0x38; // UNetConnection*
	}

	namespace n_USoundNode {
		constexpr auto ChildNodes = 0x28; // TArray<USoundNode*>
	}

	namespace n_UEnvQueryTest_Dot {
		constexpr auto LineA = 0x1f8; // FEnvDirection
		constexpr auto LineB = 0x218; // FEnvDirection
		constexpr auto TestMode = 0x238; // EEnvTestDot
		constexpr auto bAbsoluteValue = 0x239; // bool
	}

	namespace n_ABravoHotelRotorRunner {
		constexpr auto RotorActor = 0x318; // AActor*
		constexpr auto RotorSpeed = 0x320; // float
		constexpr auto TickEnableDistance = 0x324; // float
	}

	namespace n_UInputKeyDelegateBinding {
		constexpr auto InputKeyDelegateBindings = 0x28; // TArray<FBlueprintInputKeyDelegateBinding>
	}

	namespace n_UClothingAssetBase {
		constexpr auto ImportedFilePath = 0x28; // FString
		constexpr auto AssetGuid = 0x38; // FGuid
	}

	namespace n_APainCausingVolume {
		constexpr auto bPainCausing = 0x360; // char : 1
		constexpr auto DamagePerSec = 0x364; // float
		constexpr auto DamageType = 0x368; // UDamageType*
		constexpr auto PainInterval = 0x370; // float
		constexpr auto bEntryPain = 0x374; // char : 1
		constexpr auto BACKUP_bPainCausing = 0x374; // char : 1
		constexpr auto DamageInstigator = 0x378; // AController*
	}

	namespace n_USoundAttenuation {
		constexpr auto Attenuation = 0x28; // FSoundAttenuationSettings
	}

	namespace n_UMaterialExpressionParticleSubUV {
		constexpr auto bBlend = 0xd0; // char : 1
	}

	namespace n_ULevelVariantSets {
		constexpr auto DirectorClass = 0x28; // UObject*
		constexpr auto VariantSets = 0x30; // TArray<UVariantSet*>
	}

	namespace n_UCustomizableSkeletalComponent {
		constexpr auto SkippedLastRenderTime = 0x234; // float
		constexpr auto CustomizableObjectInstance = 0x238; // UCustomizableObjectInstance*
	}

	namespace n_UFixedFrameRateCustomTimeStep {
		constexpr auto FixedFrameRate = 0x28; // FFrameRate
	}

	namespace n_UPlatformGameInstance {
		constexpr auto ApplicationWillDeactivateDelegate = 0x218; // FMulticastInlineDelegate
		constexpr auto ApplicationHasReactivatedDelegate = 0x228; // FMulticastInlineDelegate
		constexpr auto ApplicationWillEnterBackgroundDelegate = 0x238; // FMulticastInlineDelegate
		constexpr auto ApplicationHasEnteredForegroundDelegate = 0x248; // FMulticastInlineDelegate
		constexpr auto ApplicationWillTerminateDelegate = 0x258; // FMulticastInlineDelegate
		constexpr auto ApplicationShouldUnloadResourcesDelegate = 0x268; // FMulticastInlineDelegate
		constexpr auto ApplicationReceivedStartupArgumentsDelegate = 0x278; // FMulticastInlineDelegate
		constexpr auto ApplicationRegisteredForRemoteNotificationsDelegate = 0x288; // FMulticastInlineDelegate
		constexpr auto ApplicationRegisteredForUserNotificationsDelegate = 0x298; // FMulticastInlineDelegate
		constexpr auto ApplicationFailedToRegisterForRemoteNotificationsDelegate = 0x2a8; // FMulticastInlineDelegate
		constexpr auto ApplicationReceivedRemoteNotificationDelegate = 0x2b8; // FMulticastInlineDelegate
		constexpr auto ApplicationReceivedLocalNotificationDelegate = 0x2c8; // FMulticastInlineDelegate
		constexpr auto ApplicationReceivedScreenOrientationChangedNotificationDelegate = 0x2d8; // FMulticastInlineDelegate
	}

	namespace n_UBTDecorator {
		constexpr auto bInverseCondition = 0x60; // char : 1
		constexpr auto FlowAbortMode = 0x64; // EBTFlowAbortMode
	}

	namespace n_UMaterialExpressionTextureBase {
		constexpr auto Texture = 0x40; // UTexture*
		constexpr auto SamplerType = 0x48; // EMaterialSamplerType
		constexpr auto IsDefaultMeshpaintTexture = 0x49; // char : 1
	}

	namespace n_UMaterialExpressionArctangentFast {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UGizmoScaledTransformSource {
		constexpr auto ChildTransformSource = 0x48; // TScriptInterface<IGizmoTransformSource>
	}

	namespace n_UABP-Parachute_C {
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2d8; // FAnimNode_Root
		constexpr auto AnimGraphNode_TransitionResult_5 = 0x308; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_4 = 0x330; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_3 = 0x358; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x380; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult = 0x3a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x3d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_4 = 0x448; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer = 0x478; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_3 = 0x558; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x588; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_2 = 0x600; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer = 0x630; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult = 0x6a8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x6d8; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x788; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x7a8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ModifyBone_2 = 0x7c8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone = 0x8d0; // FAnimNode_ModifyBone
		constexpr auto RightHandleLocation = 0x9d8; // FVector
		constexpr auto LeftHandleLocation = 0x9e4; // FVector
	}

	namespace n_UChildActorComponent {
		constexpr auto ChildActorClass = 0x230; // AActor*
		constexpr auto ChildActor = 0x238; // AActor*
		constexpr auto ChildActorTemplate = 0x240; // AActor*
	}

	namespace n_UClickDragInputBehavior {
		constexpr auto bUpdateModifiersDuringDrag = 0x120; // bool
	}

	namespace n_USoundMix {
		constexpr auto bApplyEQ = 0x28; // char : 1
		constexpr auto EQPriority = 0x2c; // float
		constexpr auto EQSettings = 0x30; // FAudioEQEffect
		constexpr auto SoundClassEffects = 0x70; // TArray<FSoundClassAdjuster>
		constexpr auto InitialDelay = 0x80; // float
		constexpr auto FadeInTime = 0x84; // float
		constexpr auto Duration = 0x88; // float
		constexpr auto FadeOutTime = 0x8c; // float
	}

	namespace n_UPhysicalMaterial {
		constexpr auto Friction = 0x28; // float
		constexpr auto FrictionCombineMode = 0x2c; // EFrictionCombineMode
		constexpr auto bOverrideFrictionCombineMode = 0x2d; // bool
		constexpr auto Restitution = 0x30; // float
		constexpr auto RestitutionCombineMode = 0x34; // EFrictionCombineMode
		constexpr auto bOverrideRestitutionCombineMode = 0x35; // bool
		constexpr auto Density = 0x38; // float
		constexpr auto RaiseMassToPower = 0x3c; // float
		constexpr auto DestructibleDamageThresholdScale = 0x40; // float
		constexpr auto PhysicalMaterialProperty = 0x48; // UPhysicalMaterialPropertyBase*
		constexpr auto SurfaceType = 0x50; // EPhysicalSurface
		constexpr auto TireFrictionScale = 0x54; // float
		constexpr auto TireFrictionScales = 0x58; // TArray<FTireFrictionScalePair>
	}

	namespace n_UMovieSceneEnumTrack {
		constexpr auto Enum = 0x88; // UEnum*
	}

	namespace n_UMaterialExpressionScalarParameter {
		constexpr auto DefaultValue = 0x58; // float
		constexpr auto bUseCustomPrimitiveData = 0x5c; // bool
		constexpr auto PrimitiveDataIndex = 0x5d; // char
	}

	namespace n_ABravoHotelAttachedUsableItem {
		constexpr auto WorldStaticMesh = 0x318; // UStaticMeshComponent*
		constexpr auto WorldSkelMesh = 0x320; // USkeletalMeshComponent*
		constexpr auto ShadowStaticMesh = 0x328; // UStaticMeshComponent*
		constexpr auto ShadowSkelMesh = 0x330; // USkeletalMeshComponent*
		constexpr auto bTurnOnPhysicsWhenDetach = 0x338; // bool
		constexpr auto LoadedAssets = 0x340; // TArray<UObject*>
	}

	namespace n_UPlatformMediaSource {
		constexpr auto MediaSource = 0x80; // UMediaSource*
	}

	namespace n_UEnvQueryInstanceBlueprintWrapper {
		constexpr auto QueryID = 0x30; // int32_t
		constexpr auto ItemType = 0x58; // UEnvQueryItemType*
		constexpr auto OptionIndex = 0x60; // int32_t
		constexpr auto OnQueryFinishedEvent = 0x68; // FMulticastInlineDelegate
	}

	namespace n_UNiagaraDataInterfaceChaosDestruction {
		constexpr auto ChaosSolverActorSet = 0x30; // TSet<AChaosSolverActor*>
		constexpr auto DataSourceType = 0x80; // EDataSourceTypeEnum
		constexpr auto DataProcessFrequency = 0x84; // int32_t
		constexpr auto MaxNumberOfDataEntriesToSpawn = 0x88; // int32_t
		constexpr auto DoSpawn = 0x8c; // bool
		constexpr auto SpawnMultiplierMinMax = 0x90; // FVector2D
		constexpr auto SpawnChance = 0x98; // float
		constexpr auto ImpulseToSpawnMinMax = 0x9c; // FVector2D
		constexpr auto SpeedToSpawnMinMax = 0xa4; // FVector2D
		constexpr auto MassToSpawnMinMax = 0xac; // FVector2D
		constexpr auto ExtentMinToSpawnMinMax = 0xb4; // FVector2D
		constexpr auto ExtentMaxToSpawnMinMax = 0xbc; // FVector2D
		constexpr auto VolumeToSpawnMinMax = 0xc4; // FVector2D
		constexpr auto SolverTimeToSpawnMinMax = 0xcc; // FVector2D
		constexpr auto SurfaceTypeToSpawn = 0xd4; // int32_t
		constexpr auto LocationFilteringMode = 0xd8; // ELocationFilteringModeEnum
		constexpr auto LocationXToSpawn = 0xd9; // ELocationXToSpawnEnum
		constexpr auto LocationXToSpawnMinMax = 0xdc; // FVector2D
		constexpr auto LocationYToSpawn = 0xe4; // ELocationYToSpawnEnum
		constexpr auto LocationYToSpawnMinMax = 0xe8; // FVector2D
		constexpr auto LocationZToSpawn = 0xf0; // ELocationZToSpawnEnum
		constexpr auto LocationZToSpawnMinMax = 0xf4; // FVector2D
		constexpr auto DataSortingType = 0xfc; // EDataSortTypeEnum
		constexpr auto bGetExternalCollisionData = 0xfd; // bool
		constexpr auto DoSpatialHash = 0xfe; // bool
		constexpr auto SpatialHashVolumeMin = 0x100; // FVector
		constexpr auto SpatialHashVolumeMax = 0x10c; // FVector
		constexpr auto SpatialHashVolumeCellSize = 0x118; // FVector
		constexpr auto MaxDataPerCell = 0x124; // int32_t
		constexpr auto bApplyMaterialsFilter = 0x128; // bool
		constexpr auto ChaosBreakingMaterialSet = 0x130; // TSet<UPhysicalMaterial*>
		constexpr auto bGetExternalBreakingData = 0x180; // bool
		constexpr auto bGetExternalTrailingData = 0x181; // bool
		constexpr auto RandomPositionMagnitudeMinMax = 0x184; // FVector2D
		constexpr auto InheritedVelocityMultiplier = 0x18c; // float
		constexpr auto RandomVelocityGenerationType = 0x190; // ERandomVelocityGenerationTypeEnum
		constexpr auto RandomVelocityMagnitudeMinMax = 0x194; // FVector2D
		constexpr auto SpreadAngleMax = 0x19c; // float
		constexpr auto VelocityOffsetMin = 0x1a0; // FVector
		constexpr auto VelocityOffsetMax = 0x1ac; // FVector
		constexpr auto FinalVelocityMagnitudeMinMax = 0x1b8; // FVector2D
		constexpr auto MaxLatency = 0x1c0; // float
		constexpr auto DebugType = 0x1c4; // EDebugTypeEnum
		constexpr auto LastSpawnedPointID = 0x1c8; // int32_t
		constexpr auto LastSpawnTime = 0x1cc; // float
		constexpr auto SolverTime = 0x1e0; // float
		constexpr auto TimeStampOfLastProcessedData = 0x1e4; // float
	}

	namespace n_UParticleModuleSpawnBase {
		constexpr auto bProcessSpawnRate = 0x30; // char : 1
		constexpr auto bProcessBurstList = 0x30; // char : 1
	}

	namespace n_UBravoHotelReplayTimelineWidget {
		constexpr auto CurrentTimeMS = 0x248; // int32_t
		constexpr auto TotalTimeMS = 0x24c; // int32_t
		constexpr auto SliderValue = 0x250; // float
		constexpr auto bIsCapturedSlider = 0x254; // bool
		constexpr auto NormalizedMousePosInX = 0x258; // float
		constexpr auto ToolTipDefaultPosition = 0x25c; // FVector2D
		constexpr auto ReplayController = 0x268; // ABravoHotelMK3DReplayController*
		constexpr auto TextReplaySpeed = 0x270; // FText
		constexpr auto TimelineScaleDelta = 0x288; // float
		constexpr auto TimelineMaxScale = 0x28c; // float
		constexpr auto TimelineScale = 0x290; // float
		constexpr auto KillEventMarkers = 0x298; // TArray<UBravoHotelReplayTimelineEventMarker*>
		constexpr auto KnockoutEventMarkers = 0x2a8; // TArray<UBravoHotelReplayTimelineEventMarker*>
		constexpr auto ResuscitatedEventMarkers = 0x2b8; // TArray<UBravoHotelReplayTimelineEventMarker*>
		constexpr auto ReportedEventMarkers = 0x2c8; // TArray<UBravoHotelReplayTimelineEventMarker*>
		constexpr auto bShowKillChkBox = 0x2d8; // bool
		constexpr auto bShowMyKillChkBox = 0x2d9; // bool
		constexpr auto bShowKnockChkBox = 0x2da; // bool
		constexpr auto bShowMyKnockChkBox = 0x2db; // bool
		constexpr auto bShowResusChkBox = 0x2dc; // bool
		constexpr auto bShowMyResusChkBox = 0x2dd; // bool
		constexpr auto MK3DKillEvents = 0x2e0; // TArray<FMK3DHighlightKillEvent>
		constexpr auto MK3DKnockoutEvents = 0x2f0; // TArray<FMK3DHighlightKillEvent>
		constexpr auto MK3DResuscitatedEvents = 0x300; // TArray<FMK3DHighlightKillEvent>
		constexpr auto MK3DReportedEvents = 0x310; // TArray<FMK3DHighlightKillEvent>
	}

	namespace n_UBravoHotelDestructibleComponent {
		constexpr auto AllowedDamageType = 0x568; // TArray<UBravoHotelDamageType*>
		constexpr auto bForceDestructionByVehicleDamage = 0x578; // bool
		constexpr auto ImpulseStrength = 0x57c; // float
		constexpr auto hp = 0x580; // float
		constexpr auto CurrentHP = 0x584; // int32_t
		constexpr auto DestructedSound = 0x588; // UAkAudioEvent*
		constexpr auto bIsWindowComponent = 0x590; // bool
		constexpr auto DestructibleActorClass = 0x598; // ADestructibleActor*
		constexpr auto DestructibleMesh = 0x5a0; // TSoftObjectPtr<UDestructibleMesh>
		constexpr auto bIsDestruct = 0x605; // bool
	}

	namespace n_ABP-BravoHotel-PlayerController_C {
		constexpr auto UberGraphFrame = 0x14a8; // FPointerToUberGraphFrame
		constexpr auto BP-HUDInteractionComponent = 0x14b0; // UBP-HUDInteractionComponent_C*
		constexpr auto SmartPingSystemComponent = 0x14b8; // USmartPingSystem_C*
		constexpr auto MapSize = 0x14c0; // FVector
		constexpr auto IsInWidget = 0x14cc; // bool
		constexpr auto InputActionsToBlock = 0x14d0; // TArray<FName>
		constexpr auto BlueZone = 0x14e0; // ABravoHotelBlueZone*
		constexpr auto PhoneticAlphabetTable_NATO = 0x14e8; // TArray<FText>
		constexpr auto bHasJustClosed = 0x14f8; // bool
		constexpr auto bLineTrace = 0x14f9; // bool
		constexpr auto UI-BlackMarket = 0x1500; // UUW-BlackMarket_C*
		constexpr auto LocalScreenPosition = 0x1508; // FVector2D
		constexpr auto MaxViewportSize = 0x1510; // FVector2D
		constexpr auto ReverseSide = 0x1518; // bool
		constexpr auto SavedInventory = 0x1520; // UBP-SavedPlayerInventory_C*
		constexpr auto DefaultItemList = 0x1528; // TArray<FString>
		constexpr auto SavedInventorySlotName = 0x1538; // FString
		constexpr auto bLoadInventoryData = 0x1548; // bool
		constexpr auto bOpenSystemMenu = 0x1549; // bool
		constexpr auto MinBrightness = 0x154c; // float
		constexpr auto MaxBrightness = 0x1550; // float
		constexpr auto Contrast = 0x1554; // float
		constexpr auto bUsePostProcessVolumeOption = 0x1558; // bool
		constexpr auto FilmToeIntensity = 0x155c; // float
		constexpr auto ColorGradingGlobalGamma = 0x1560; // float
		constexpr auto bInputModeUI = 0x1564; // bool
		constexpr auto Timer = 0x1568; // FTimerHandle
		constexpr auto DoubleclickTimer = 0x1570; // FTimerHandle
		constexpr auto CheckTime = 0x1578; // float
		constexpr auto DoubleClickTime = 0x157c; // float
		constexpr auto CheckDoubleClick = 0x1580; // bool
		constexpr auto TempLocation = 0x1584; // FVector
		constexpr auto NameWidgets = 0x1590; // TArray<UUW_UserNameTooltip_C*>
		constexpr auto CurrentNameWidgetCount = 0x15a0; // int32_t
		constexpr auto bNameTooltipMode = 0x15a4; // bool
		constexpr auto SmartPingTypeIndex = 0x15a8; // int32_t
		constexpr auto EableSmartPing = 0x15ac; // bool
		constexpr auto PingLock = 0x15ad; // bool
		constexpr auto OperationMessageWidget = 0x15b0; // UUserWidget*
		constexpr auto SelectionMenu = 0x15b8; // UWBP_SPS_UseItemSelectionMenu_C*
		constexpr auto IsVisibleSelectionMenu = 0x15c0; // bool
		constexpr auto BoostItemList = 0x15c8; // TMap<int32_t, FName>
		constexpr auto IgnoreMenu = 0x1618; // bool
	}

	namespace n_UParticleModuleTypeDataGpu {
		constexpr auto EmitterInfo = 0x30; // FGPUSpriteEmitterInfo
		constexpr auto ResourceData = 0x2b0; // FGPUSpriteResourceData
		constexpr auto CameraMotionBlurAmount = 0x410; // float
		constexpr auto bClearExistingParticlesOnInit = 0x414; // char : 1
	}

	namespace n_UBTTask_PushPawnAction {
		constexpr auto Action = 0x70; // UPawnAction*
	}

	namespace n_URealRepGraphNode_AlwaysRelevant_ForConnection {
		constexpr auto LastViewer = 0x50; // AActor*
		constexpr auto LastViewTarget = 0x58; // AActor*
	}

	namespace n_ABP_SPS_WidgetActor_C {
		constexpr auto UberGraphFrame = 0x5c8; // FPointerToUberGraphFrame
		constexpr auto Widget_Screen = 0x5d0; // UWidgetComponent*
		constexpr auto Widget_World = 0x5d8; // UWidgetComponent*
		constexpr auto DefaultSceneRoot = 0x5e0; // USceneComponent*
		constexpr auto SmartPingWidget_World = 0x5e8; // UWBP_SPS_Icon_C*
		constexpr auto DeactivateTimer = 0x5f0; // FTimerHandle
		constexpr auto SmartPingComponent = 0x5f8; // USmartPingSystem_C*
		constexpr auto ScreenToWorldLocation = 0x600; // FVector
		constexpr auto ScreenRotation = 0x60c; // float
		constexpr auto HoldSound = 0x610; // UAudioComponent*
		constexpr auto PhaseTimer = 0x618; // FTimerHandle
		constexpr auto TempWidget = 0x620; // UTemp_C*
		constexpr auto PingIndex = 0x628; // int32_t
		constexpr auto SaveTempPingInfo = 0x630; // FBravoHotelPingInfo
		constexpr auto LineActor = 0x668; // ALine_WidgetActor_C*
		constexpr auto SmartPingWidget_Screen = 0x670; // UWBP_SPS_Icon_C*
		constexpr auto EnableShow = 0x678; // bool
	}

	namespace n_UUW_UserNameTooltip_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto BT_UserName = 0x250; // UButton*
		constexpr auto CP_Main = 0x258; // UCanvasPanel*
		constexpr auto HB_ItemInfo = 0x260; // UHorizontalBox*
		constexpr auto Image_264 = 0x268; // UImage*
		constexpr auto Image_265 = 0x270; // UImage*
		constexpr auto Image_1163 = 0x278; // UImage*
		constexpr auto IMG_Frontbar = 0x280; // UImage*
		constexpr auto IMG_Item = 0x288; // UImage*
		constexpr auto Img_TeamColor = 0x290; // UImage*
		constexpr auto PB_HP = 0x298; // UProgressBar*
		constexpr auto PB_ItemCasting = 0x2a0; // UProgressBar*
		constexpr auto T_Item = 0x2a8; // UTextBlock*
		constexpr auto T_Quantity = 0x2b0; // UTextBlock*
		constexpr auto T_TeamNum = 0x2b8; // UTextBlock*
		constexpr auto T_UserName = 0x2c0; // UTextBlock*
		constexpr auto PlayerState = 0x2c8; // ABravoHotelPlayerState*
		constexpr auto ReplayController = 0x2d0; // APlayerController*
		constexpr auto TargetCharacter = 0x2d8; // ABravoHotelCharacter*
		constexpr auto MaxViewportSize = 0x2e0; // FVector2D
		constexpr auto LocalScreenPosition = 0x2e8; // FVector2D
		constexpr auto IsPositionUpdated = 0x2f0; // bool
		constexpr auto DefaultCharacterZLocation = 0x2f4; // float
	}

	namespace n_ABravoHotelProjectileGrenadeNuclear {
		constexpr auto ExplosionGroundDecalMaterial = 0x678; // UMaterialInterface*
		constexpr auto ExplosionGroundDecalSize = 0x680; // FVector
		constexpr auto FallingEvent = 0x690; // UAkAudioEvent*
		constexpr auto FallingSoundDelayTime = 0x698; // float
		constexpr auto ExplosionGroundDecalComponent = 0x6a0; // UDecalComponent*
		constexpr auto LandHeight = 0x6c0; // float
		constexpr auto AuthorController = 0x6c8; // APlayerController*
	}

	namespace n_USourceEffectDynamicsProcessorPreset {
		constexpr auto Settings = 0x90; // FSourceEffectDynamicsProcessorSettings
	}

	namespace n_ABravoHotelAircraftPoint {
		constexpr auto NextPoint = 0x318; // ABravoHotelAircraftPoint*
	}

	namespace n_UAsyncTask_LoadXRDeviceVisComponent {
		constexpr auto OnModelLoaded = 0x30; // FMulticastInlineDelegate
		constexpr auto OnLoadFailure = 0x40; // FMulticastInlineDelegate
		constexpr auto SpawnedComponent = 0x58; // UPrimitiveComponent*
	}

	namespace n_USourceEffectRingModulationPreset {
		constexpr auto Settings = 0x7c; // FSourceEffectRingModulationSettings
	}

	namespace n_UParticleModule {
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x29; // char : 1
		constexpr auto LODDuplicate = 0x29; // char : 1
		constexpr auto bSupportsRandomSeed = 0x29; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x29; // char : 1
		constexpr auto LODValidity = 0x2a; // char
	}

	namespace n_UBTDecorator_IsBBEntryOfClass {
		constexpr auto TestClass = 0x90; // UObject*
	}

	namespace n_ABattleRoyaleGameMode_Login {
		constexpr auto MatchingTimeout = 0x400; // float
		constexpr auto PlayerPawnList = 0x408; // TArray<FPlayerPawnList>
		constexpr auto CustomizeCharacter = 0x418; // ACharacter*
		constexpr auto RankingCharacter = 0x420; // ACharacter*
		constexpr auto AppearingMotionCharacter = 0x428; // USkeletalMeshComponent*
		constexpr auto Loading_TimerHandle = 0x540; // FTimerHandle
		constexpr auto PartyInfo_TimerHandle = 0x548; // FTimerHandle
		constexpr auto Ping_TimerHandle = 0x550; // FTimerHandle
		constexpr auto GeeGeeLoginToken_TimerHandle = 0x558; // FTimerHandle
		constexpr auto SteamLoginToken_TimerHandle = 0x560; // FTimerHandle
		constexpr auto AveragePingRequest_TimerHandle = 0x568; // FTimerHandle
		constexpr auto DuplicatedReconnectTimeout_TimerHandle = 0x570; // FTimerHandle
		constexpr auto OnLoginSucceeded = 0x580; // FMulticastInlineDelegate
		constexpr auto OnLoginNotify = 0x590; // FMulticastInlineDelegate
		constexpr auto OnLoginFailed = 0x5a0; // FMulticastInlineDelegate
		constexpr auto OnMatchingPending = 0x5b0; // FMulticastInlineDelegate
		constexpr auto OnMatchingStarted = 0x5c0; // FMulticastInlineDelegate
		constexpr auto OnMatchingSucceeded = 0x5d0; // FMulticastInlineDelegate
		constexpr auto OnMatchingFailed = 0x5e0; // FMulticastInlineDelegate
		constexpr auto OnPartyInvited = 0x5f0; // FMulticastInlineDelegate
		constexpr auto OnPartyInfoChanged = 0x600; // FMulticastInlineDelegate
		constexpr auto OnPartyMemberInfoChanged = 0x610; // FMulticastInlineDelegate
		constexpr auto OnMatchingSettingsChanged = 0x620; // FMulticastInlineDelegate
		constexpr auto OnCreateCharacter = 0x630; // FMulticastInlineDelegate
		constexpr auto OnTrainingModeOffDelegate = 0x640; // FMulticastInlineDelegate
	}

	namespace n_UNiagaraRibbonRendererProperties {
		constexpr auto Material = 0x50; // UMaterialInterface*
		constexpr auto MaterialUserParamBinding = 0x58; // FNiagaraUserParameterBinding
		constexpr auto FacingMode = 0x80; // ENiagaraRibbonFacingMode
		constexpr auto UV0TilingDistance = 0x84; // float
		constexpr auto UV0Scale = 0x88; // FVector2D
		constexpr auto UV0Offset = 0x90; // FVector2D
		constexpr auto UV0AgeOffsetMode = 0x98; // ENiagaraRibbonAgeOffsetMode
		constexpr auto UV1TilingDistance = 0x9c; // float
		constexpr auto UV1Scale = 0xa0; // FVector2D
		constexpr auto UV1Offset = 0xa8; // FVector2D
		constexpr auto UV1AgeOffsetMode = 0xb0; // ENiagaraRibbonAgeOffsetMode
		constexpr auto DrawDirection = 0xb1; // ENiagaraRibbonDrawDirection
		constexpr auto CurveTension = 0xb4; // float
		constexpr auto TessellationMode = 0xb8; // ENiagaraRibbonTessellationMode
		constexpr auto TessellationFactor = 0xbc; // int32_t
		constexpr auto bUseConstantFactor = 0xc0; // bool
		constexpr auto TessellationAngle = 0xc4; // float
		constexpr auto bScreenSpaceTessellation = 0xc8; // bool
		constexpr auto PositionBinding = 0xd0; // FNiagaraVariableAttributeBinding
		constexpr auto ColorBinding = 0x148; // FNiagaraVariableAttributeBinding
		constexpr auto VelocityBinding = 0x1c0; // FNiagaraVariableAttributeBinding
		constexpr auto NormalizedAgeBinding = 0x238; // FNiagaraVariableAttributeBinding
		constexpr auto RibbonTwistBinding = 0x2b0; // FNiagaraVariableAttributeBinding
		constexpr auto RibbonWidthBinding = 0x328; // FNiagaraVariableAttributeBinding
		constexpr auto RibbonFacingBinding = 0x3a0; // FNiagaraVariableAttributeBinding
		constexpr auto RibbonIdBinding = 0x418; // FNiagaraVariableAttributeBinding
		constexpr auto RibbonLinkOrderBinding = 0x490; // FNiagaraVariableAttributeBinding
		constexpr auto MaterialRandomBinding = 0x508; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterialBinding = 0x580; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial1Binding = 0x5f8; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial2Binding = 0x670; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial3Binding = 0x6e8; // FNiagaraVariableAttributeBinding
	}

	namespace n_UWBP_SPS_UseItemSelectionMenu_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Bg1 = 0x250; // UImage*
		constexpr auto bg2 = 0x258; // UImage*
		constexpr auto Bg3 = 0x260; // UImage*
		constexpr auto Bg4 = 0x268; // UImage*
		constexpr auto Bg5 = 0x270; // UImage*
		constexpr auto Bg6 = 0x278; // UImage*
		constexpr auto Bg7 = 0x280; // UImage*
		constexpr auto Bg8 = 0x288; // UImage*
		constexpr auto Canvas = 0x290; // UCanvasPanel*
		constexpr auto CenterCursor = 0x298; // UImage*
		constexpr auto DisplayText = 0x2a0; // UTextBlock*
		constexpr auto IconImage = 0x2a8; // UImage*
		constexpr auto Index1 = 0x2b0; // UImage*
		constexpr auto Index2 = 0x2b8; // UImage*
		constexpr auto Index3 = 0x2c0; // UImage*
		constexpr auto Index4 = 0x2c8; // UImage*
		constexpr auto Index5 = 0x2d0; // UImage*
		constexpr auto Index6 = 0x2d8; // UImage*
		constexpr auto Index7 = 0x2e0; // UImage*
		constexpr auto Index8 = 0x2e8; // UImage*
		constexpr auto Key1 = 0x2f0; // UTextBlock*
		constexpr auto Key2 = 0x2f8; // UTextBlock*
		constexpr auto Key3 = 0x300; // UTextBlock*
		constexpr auto Key4 = 0x308; // UTextBlock*
		constexpr auto Key5 = 0x310; // UTextBlock*
		constexpr auto Key6 = 0x318; // UTextBlock*
		constexpr auto Key7 = 0x320; // UTextBlock*
		constexpr auto Key8 = 0x328; // UTextBlock*
		constexpr auto Message2 = 0x330; // UTextBlock*
		constexpr auto Message3 = 0x338; // UTextBlock*
		constexpr auto Message3_1 = 0x340; // UTextBlock*
		constexpr auto Message3_2 = 0x348; // UTextBlock*
		constexpr auto Message3_3 = 0x350; // UTextBlock*
		constexpr auto Message3_4 = 0x358; // UTextBlock*
		constexpr auto Message3_5 = 0x360; // UTextBlock*
		constexpr auto Message3_6 = 0x368; // UTextBlock*
		constexpr auto Message3_7 = 0x370; // UTextBlock*
		constexpr auto Message3_8 = 0x378; // UTextBlock*
		constexpr auto Message4 = 0x380; // UTextBlock*
		constexpr auto Message5 = 0x388; // UTextBlock*
		constexpr auto Message6 = 0x390; // UTextBlock*
		constexpr auto Message7 = 0x398; // UTextBlock*
		constexpr auto Message8 = 0x3a0; // UTextBlock*
		constexpr auto Messgae1 = 0x3a8; // UTextBlock*
		constexpr auto Over1 = 0x3b0; // UImage*
		constexpr auto Over2 = 0x3b8; // UImage*
		constexpr auto Over3 = 0x3c0; // UImage*
		constexpr auto Over4 = 0x3c8; // UImage*
		constexpr auto Over5 = 0x3d0; // UImage*
		constexpr auto Over6 = 0x3d8; // UImage*
		constexpr auto Over7 = 0x3e0; // UImage*
		constexpr auto Over8 = 0x3e8; // UImage*
		constexpr auto UseSlot1 = 0x3f0; // UWBP_SPS_UseItemSelectionIcon_C*
		constexpr auto UseSlot2 = 0x3f8; // UWBP_SPS_UseItemSelectionIcon_C*
		constexpr auto UseSlot3 = 0x400; // UWBP_SPS_UseItemSelectionIcon_C*
		constexpr auto UseSlot4 = 0x408; // UWBP_SPS_UseItemSelectionIcon_C*
		constexpr auto UseSlot5 = 0x410; // UWBP_SPS_UseItemSelectionIcon_C*
		constexpr auto UseSlot6 = 0x418; // UWBP_SPS_UseItemSelectionIcon_C*
		constexpr auto UseSlot7 = 0x420; // UWBP_SPS_UseItemSelectionIcon_C*
		constexpr auto UseSlot8 = 0x428; // UWBP_SPS_UseItemSelectionIcon_C*
		constexpr auto UW-PlayerMarkerWidget = 0x430; // UUW-PlayerMarkerWidget_C*
		constexpr auto WidgetSwitcher_133 = 0x438; // UWidgetSwitcher*
		constexpr auto SelectionWidgets = 0x440; // TArray<UWBP_SPS_SelectionIcon_C*>
		constexpr auto MenuCenter = 0x450; // FVector2D
		constexpr auto ReferenceVector = 0x458; // FVector
		constexpr auto Selected = 0x468; // FMulticastInlineDelegate
		constexpr auto SelectedIndex = 0x478; // int32_t
		constexpr auto AngleSize = 0x47c; // float
		constexpr auto DistanceFromCenter = 0x480; // float
		constexpr auto Divisions = 0x484; // int32_t
		constexpr auto SelectionToleranceFromCenter = 0x488; // float
		constexpr auto Hovered = 0x490; // FMulticastInlineDelegate
		constexpr auto ClearPing = 0x4a0; // FMulticastInlineDelegate
		constexpr auto Title = 0x4b0; // FText
		constexpr auto ItemKey = 0x4c8; // FName
		constexpr auto OverOpacity = 0x4d0; // float
		constexpr auto BgOpacity = 0x4d4; // float
		constexpr auto List = 0x4d8; // TMap<int32_t, FName>
		constexpr auto IndexTextVisible = 0x528; // ESlateVisibility
		constexpr auto NewVar_1 = 0x529; // bool
		constexpr auto Image = 0x530; // TSoftObjectPtr<UPaperSprite>
		constexpr auto TextOpacity = 0x558; // float
	}

	namespace n_ABP-PlayerHUD_C {
		constexpr auto UberGraphFrame = 0x868; // FPointerToUberGraphFrame
		constexpr auto DefaultSceneRoot = 0x870; // USceneComponent*
		constexpr auto TableInfo = 0x878; // TMap<EHUDMessageTableType, UDataTable*>
		constexpr auto NewVar_1 = 0x8c8; // TArray<UBravoHotelDamageType*>
		constexpr auto GuideWidgetStack = 0x8d8; // TArray<EGuideWidgetType>
		constexpr auto NewVar_2 = 0x8e8; // EHUDMessageType
	}

	namespace n_UMaterialExpressionFrac {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UBP-LoadingScreenWidget_C {
		constexpr auto UberGraphFrame = 0x2a0; // FPointerToUberGraphFrame
		constexpr auto HorizontalBox_1 = 0x2a8; // UHorizontalBox*
		constexpr auto Image_bg = 0x2b0; // UImage*
		constexpr auto RichTextBlock = 0x2b8; // URichTextBlock*
		constexpr auto RichTextBlock_Title = 0x2c0; // URichTextBlock*
		constexpr auto Throbber_1 = 0x2c8; // UThrobber*
		constexpr auto VerticalBox_2 = 0x2d0; // UVerticalBox*
		constexpr auto Textures = 0x2d8; // TArray<UTexture2D*>
		constexpr auto Game Settings = 0x2e8; // UBP_GameSettings_C*
		constexpr auto TempString = 0x2f0; // FString
		constexpr auto Key = 0x300; // bool
		constexpr auto RandomTemp = 0x304; // int32_t
		constexpr auto ImageIndex = 0x308; // int32_t
		constexpr auto TitleIndex = 0x30c; // int32_t
	}

	namespace n_UUW-ReplayPlayerListGroupWidget_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Img_TeamColor = 0x268; // UImage*
		constexpr auto T_TeamNum = 0x270; // UTextBlock*
		constexpr auto VB_PlayerList = 0x278; // UVerticalBox*
	}

	namespace n_ABravoHotelElevatorDoor {
		constexpr auto bDoorUIEnable = 0x360; // bool
		constexpr auto BoxTrigger = 0x368; // UBoxComponent*
		constexpr auto PushBox = 0x370; // UBoxComponent*
		constexpr auto LeftDoorPivot = 0x378; // USceneComponent*
		constexpr auto RightDoorPivot = 0x380; // USceneComponent*
		constexpr auto ElevatorPivot = 0x388; // USceneComponent*
		constexpr auto ElevatorUI = 0x390; // UStaticMeshComponent*
		constexpr auto ButtonUI = 0x398; // UStaticMeshComponent*
		constexpr auto CurrentStateType = 0x3a0; // EElevatorDoorStateType
		constexpr auto DoorID = 0x3a4; // int32_t
		constexpr auto MatchingDoorID = 0x3a8; // int32_t
		constexpr auto LeftOpenLocation = 0x3ac; // FVector
		constexpr auto RightOpenLocation = 0x3b8; // FVector
		constexpr auto DoorSpeed = 0x3c4; // float
		constexpr auto bCalled = 0x3c8; // bool
		constexpr auto AkAudioComponent = 0x3d0; // UAkComponent*
		constexpr auto SoundEventForOpening = 0x3d8; // UAkAudioEvent*
		constexpr auto SoundEventForOpened = 0x3e0; // UAkAudioEvent*
		constexpr auto SoundEventForClosing = 0x3e8; // UAkAudioEvent*
		constexpr auto SoundEventForClosed = 0x3f0; // UAkAudioEvent*
	}

	namespace n_UBTService {
		constexpr auto Interval = 0x60; // float
		constexpr auto RandomDeviation = 0x64; // float
		constexpr auto bCallTickOnSearchStart = 0x68; // char : 1
		constexpr auto bRestartTimerOnEachActivation = 0x68; // char : 1
	}

	namespace n_UParticleModuleAccelerationDragScaleOverLife {
		constexpr auto DragScale = 0x38; // UDistributionFloat*
		constexpr auto DragScaleRaw = 0x40; // FRawDistributionFloat
	}

	namespace n_ATransportAircraftPawn {
		constexpr auto HealthPoint = 0x5d8; // float
		constexpr auto MaxHealthPoint = 0x5dc; // float
		constexpr auto DropBoxActorClass = 0x5e0; // ABravoHotelDropBoxActor*
		constexpr auto FlightSpeed = 0x5e8; // float
		constexpr auto HeightSpeed = 0x5ec; // float
		constexpr auto FlightHeight = 0x5f0; // float
		constexpr auto SpawnDistance = 0x5f4; // float
		constexpr auto DamagedEffectComponent = 0x600; // UParticleSystemComponent*
		constexpr auto AudioComponent = 0x608; // UBravoHotelAudioEmitterComponent*
		constexpr auto DamagedLevelRatios = 0x610; // TArray<float>
		constexpr auto DamagedEffects = 0x620; // TArray<UParticleSystem*>
		constexpr auto DamagedSounds = 0x630; // TArray<UAkAudioEvent*>
		constexpr auto DamagedEffectSocketName = 0x640; // FName
		constexpr auto ExplosionEffect = 0x648; // UParticleSystem*
		constexpr auto ExplosionSound = 0x650; // UAkAudioEvent*
		constexpr auto ExplosionEffectSocketName = 0x658; // FName
		constexpr auto FlyingSoundHandle = 0x660; // FAudioPlayingHandle
		constexpr auto DropDistances = 0x6b0; // TArray<float>
		constexpr auto DropBoxes = 0x6c0; // TArray<ABravoHotelDropBoxActor*>
	}

	namespace n_UParticleModuleMeshRotationRate_Seeded {
		constexpr auto RandomSeedInfo = 0x78; // FParticleRandomSeedInfo
	}

	namespace n_UUW-Lobby_Craft_Recipe_Item_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto HorizontalBox_Rarity = 0x250; // UHorizontalBox*
		constexpr auto HorizontalBox_Rarity_NotOwn = 0x258; // UHorizontalBox*
		constexpr auto Img_BG = 0x260; // UImage*
		constexpr auto Img_Icon = 0x268; // UImage*
		constexpr auto RetainerBox_2 = 0x270; // URetainerBox*
		constexpr auto T_CurrentCount = 0x278; // UTextBlock*
		constexpr auto T_MaxCount = 0x280; // UTextBlock*
		constexpr auto T_RecipeNum = 0x288; // UTextBlock*
		constexpr auto WidgetSwitcher_Rarity = 0x290; // UWidgetSwitcher*
		constexpr auto MaterialInfo = 0x298; // FItemMaterialData
		constexpr auto ItemId = 0x368; // int32_t
		constexpr auto MaxCount = 0x36c; // int32_t
		constexpr auto CurrentCount = 0x370; // int32_t
	}

	namespace n_UMaterialExpressionSceneColor {
		constexpr auto InputMode = 0x40; // EMaterialSceneAttributeInputMode
		constexpr auto Input = 0x44; // FExpressionInput
		constexpr auto OffsetFraction = 0x58; // FExpressionInput
		constexpr auto ConstInput = 0x6c; // FVector2D
	}

	namespace n_UFSM_SetState_Async {
		constexpr auto Target = 0x30; // UStateMachineComponent*
		constexpr auto StateName = 0x38; // FName
		constexpr auto Timer = 0x40; // float
		constexpr auto Repeat = 0x44; // bool
		constexpr auto TimerHandle = 0x48; // FTimerHandle
		constexpr auto OnSuccess = 0x50; // FMulticastInlineDelegate
		constexpr auto OnAborted = 0x60; // FMulticastInlineDelegate
	}

	namespace n_UCustomizableObject {
		constexpr auto ReferenceSkeletalMesh = 0x28; // USkeletalMesh*
		constexpr auto ReferenceStaticMesh = 0x30; // UStaticMesh*
		constexpr auto Relevancy = 0x38; // ECustomizableObjectRelevancy
		constexpr auto bDisableTextureLayoutManagement = 0x39; // bool
		constexpr auto ReferencedMaterials = 0x40; // TArray<TSoftObjectPtr<UMaterialInterface>>
		constexpr auto ImageProperties = 0x50; // TArray<FMutableModelImageProperties>
		constexpr auto GroupNodeMap = 0x60; // TMap<FString, FCustomizableObjectIdPair>
		constexpr auto ContributingMorphTargets = 0xb0; // TArray<UMorphTarget*>
		constexpr auto MorphTargetReconstructionInfo = 0xc0; // TArray<FMorphTargetVertexIndex>
		constexpr auto VersionId = 0xd0; // FGuid
		constexpr auto ParameterProperties = 0xe0; // TArray<FMutableModelParameterProperties>
		constexpr auto ParameterUIDataMap = 0x140; // TMap<FString, FParameterUIData>
		constexpr auto StateUIDataMap = 0x190; // TMap<FString, FParameterUIData>
		constexpr auto PhysicsAssetsMap = 0x1e0; // TMap<FString, TSoftObjectPtr<UPhysicsAsset>>
		constexpr auto MaskOutCache = 0x230; // TSoftObjectPtr<UMutableMaskOutCache>
		constexpr auto bIsChildObject = 0x258; // bool
		constexpr auto MaskOutCache_HardRef = 0x260; // UMutableMaskOutCache*
	}

	namespace n_UMaterialExpressionConstant3Vector {
		constexpr auto Constant = 0x40; // FLinearColor
	}

	namespace n_UUW-NetworkDelay_C {
		constexpr auto Image_350 = 0x260; // UImage*
		constexpr auto Image_409 = 0x268; // UImage*
		constexpr auto Image_479 = 0x270; // UImage*
		constexpr auto Image_564 = 0x278; // UImage*
	}

	namespace n_UDatasmithPostProcessVolumeTemplate {
		constexpr auto Settings = 0x30; // FDatasmithPostProcessSettingsTemplate
		constexpr auto bEnabled = 0x70; // char : 1
		constexpr auto bUnbound = 0x70; // char : 1
	}

	namespace n_UCreateSessionCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UUW-BlackMarket_Slot_Gear_C {
		constexpr auto UberGraphFrame = 0x3d8; // FPointerToUberGraphFrame
		constexpr auto BTN-Menu02 = 0x3e0; // UButton*
		constexpr auto BTN-Menu03 = 0x3e8; // UButton*
		constexpr auto BTN-Menu04 = 0x3f0; // UButton*
		constexpr auto BTN-Menu05 = 0x3f8; // UButton*
		constexpr auto BTN-Menu06 = 0x400; // UButton*
		constexpr auto CP-SlotInfo = 0x408; // UCanvasPanel*
		constexpr auto IMG-BG = 0x410; // UImage*
		constexpr auto IMG-BG-Border = 0x418; // UImage*
		constexpr auto IMG-Item = 0x420; // UImage*
		constexpr auto IMG-Mask = 0x428; // UImage*
		constexpr auto IMG-Over = 0x430; // UImage*
		constexpr auto IMG-Over-Border = 0x438; // UImage*
		constexpr auto Menu02 = 0x440; // UOverlay*
		constexpr auto Menu03 = 0x448; // UOverlay*
		constexpr auto Menu04 = 0x450; // UOverlay*
		constexpr auto Menu05 = 0x458; // UOverlay*
		constexpr auto Menu06 = 0x460; // UOverlay*
		constexpr auto Overlay_Mask = 0x468; // UOverlay*
		constexpr auto TXT-Armor = 0x470; // UTextBlock*
		constexpr auto TXT-Capacity = 0x478; // UTextBlock*
		constexpr auto TXT-DecreaseReloadTime = 0x480; // UTextBlock*
		constexpr auto TXT-ItemName = 0x488; // UTextBlock*
		constexpr auto TXT-Menu01 = 0x490; // UTextBlock*
		constexpr auto TXT-Menu02 = 0x498; // UTextBlock*
		constexpr auto TXT-Menu03 = 0x4a0; // UTextBlock*
		constexpr auto TXT-Menu04 = 0x4a8; // UTextBlock*
		constexpr auto TXT-Menu05 = 0x4b0; // UTextBlock*
		constexpr auto TXT-Menu06 = 0x4b8; // UTextBlock*
		constexpr auto TXT-Type = 0x4c0; // UTextBlock*
	}

	namespace n_ABHPersonalSupplyBoxManager {
		constexpr auto SupplyBoxClass = 0x318; // ABHPersonalSupplyBox*
		constexpr auto ListPhaseInfo = 0x320; // TArray<FPersonalSupplyPhaseInfo>
		constexpr auto CurrentPhaseNum = 0x330; // int32_t
		constexpr auto ListUsableSupplyBox = 0x338; // TArray<ABHPersonalSupplyBox*>
		constexpr auto MapSupplyBox = 0x348; // TMap<int32_t, ABHPersonalSupplyBox*>
		constexpr auto TestRandomTableID = 0x398; // FName
		constexpr auto UseTestRandom = 0x3a0; // bool
		constexpr auto SpawnedSupplyBoxList = 0x3b8; // TArray<ABHPersonalSupplyBox*>
		constexpr auto ForceSpawnedSupplyBoxList = 0x3c8; // TArray<ABHPersonalSupplyBox*>
	}

	namespace n_UMaterialExpressionTextureProperty {
		constexpr auto TextureObject = 0x40; // FExpressionInput
		constexpr auto Property = 0x54; // EMaterialExposedTextureProperty
	}

	namespace n_ABP-MagazineBase_C {
		constexpr auto UberGraphFrame = 0x360; // FPointerToUberGraphFrame
		constexpr auto PhysicsSimulateTime = 0x368; // float
		constexpr auto LifeTime = 0x36c; // float
		constexpr auto AddImpulse = 0x370; // float
		constexpr auto Stance = 0x374; // char
		constexpr auto AddImpulse_Crouched = 0x378; // float
		constexpr auto AddImpulse_Proned = 0x37c; // float
	}

	namespace n_UBravoHotelReportUserProgramWidget {
		constexpr auto ReportButton = 0x248; // UButton*
		constexpr auto CancelButton = 0x250; // UButton*
		constexpr auto SelectedUserNickName = 0x258; // UTextBlock*
	}

	namespace n_UBravoHotelCreateCharacterWidget {
		constexpr auto CustomizedCharacterComponent = 0x298; // UBravoHotelCustomizedCharacter*
	}

	namespace n_APlanarReflection {
		constexpr auto PlanarReflectionComponent = 0x328; // UPlanarReflectionComponent*
		constexpr auto bShowPreviewPlane = 0x330; // bool
	}

	namespace n_ULandscapeLayerInfoObject {
		constexpr auto LayerName = 0x28; // FName
		constexpr auto PhysMaterial = 0x30; // UPhysicalMaterial*
		constexpr auto Hardness = 0x38; // float
		constexpr auto LayerUsageDebugColor = 0x3c; // FLinearColor
	}

	namespace n_UEndpointSubmix {
		constexpr auto EndpointType = 0x38; // FName
		constexpr auto EndpointSettingsClass = 0x40; // UAudioEndpointSettingsBase*
		constexpr auto EndpointSettings = 0x48; // UAudioEndpointSettingsBase*
	}

	namespace n_UUW-CompassWidget_C {
		constexpr auto UberGraphFrame = 0x350; // FPointerToUberGraphFrame
		constexpr auto CanvasPanel_3 = 0x358; // UCanvasPanel*
		constexpr auto CanvasPanel_4 = 0x360; // UCanvasPanel*
		constexpr auto grid = 0x368; // UCanvasPanel*
		constexpr auto Image = 0x370; // UImage*
		constexpr auto Image_1 = 0x378; // UImage*
		constexpr auto Image_2 = 0x380; // UImage*
		constexpr auto Image_234 = 0x388; // UImage*
		constexpr auto Image_582 = 0x390; // UImage*
		constexpr auto InvalidationBox_1 = 0x398; // UInvalidationBox*
		constexpr auto RetainerBox_108 = 0x3a0; // URetainerBox*
		constexpr auto SupplyBoxMarker = 0x3a8; // UUW-PlayerMarkerWidget_C*
		constexpr auto UnitParent = 0x3b0; // UCanvasPanel*
		constexpr auto UW-CompassUnitWidget = 0x3b8; // UUW-CompassUnitWidget_C*
		constexpr auto UW-CompassUnitWidget_C_2 = 0x3c0; // UUW-CompassUnitWidget_C*
		constexpr auto UW-CompassUnitWidget_C_3 = 0x3c8; // UUW-CompassUnitWidget_C*
		constexpr auto UW-CompassUnitWidget_C_4 = 0x3d0; // UUW-CompassUnitWidget_C*
		constexpr auto UW-CompassUnitWidget_C_5 = 0x3d8; // UUW-CompassUnitWidget_C*
		constexpr auto UW-CompassUnitWidget_C_6 = 0x3e0; // UUW-CompassUnitWidget_C*
		constexpr auto UW-CompassUnitWidget_C_7 = 0x3e8; // UUW-CompassUnitWidget_C*
		constexpr auto UW-CompassUnitWidget_C_8 = 0x3f0; // UUW-CompassUnitWidget_C*
		constexpr auto UW-CompassUnitWidget_C_9 = 0x3f8; // UUW-CompassUnitWidget_C*
		constexpr auto UW-CompassUnitWidget_C_10 = 0x400; // UUW-CompassUnitWidget_C*
		constexpr auto UW-CompassUnitWidget_C_11 = 0x408; // UUW-CompassUnitWidget_C*
		constexpr auto UW-CompassUnitWidget_C_12 = 0x410; // UUW-CompassUnitWidget_C*
		constexpr auto UW-CompassUnitWidget_C_13 = 0x418; // UUW-CompassUnitWidget_C*
		constexpr auto UW-CompassUnitWidget_C_14 = 0x420; // UUW-CompassUnitWidget_C*
		constexpr auto UW-PlayerMarkerWidget_C_1 = 0x428; // UUW-PlayerMarkerWidget_C*
		constexpr auto ViewAngle = 0x430; // UTextBlock*
		constexpr auto ScaleForAngleToDistance = 0x438; // float
		constexpr auto PositionCurveOffset = 0x43c; // float
		constexpr auto PositionCurve = 0x440; // UCurveFloat*
		constexpr auto PositionCurveWeight = 0x448; // float
		constexpr auto ScaleCurveWeight = 0x44c; // float
		constexpr auto ScaleCurveOffset = 0x450; // float
		constexpr auto NormalDirectionFontSize = 0x454; // int32_t
		constexpr auto SpecialDirectionFontSize = 0x458; // int32_t
		constexpr auto ArrayPlayerMarkerWidget = 0x460; // TArray<UUW-PlayerMarkerWidget_C*>
		constexpr auto NorthColor = 0x470; // FLinearColor
		constexpr auto Angle0To360 = 0x480; // int32_t
		constexpr auto TempMarkerPosition = 0x484; // float
		constexpr auto ArrangedAngle = 0x488; // float
	}

	namespace n_ABravoHotelCarKey {
		constexpr auto FindVehicles = 0x1c10; // TArray<ABravoHotelVehicle*>
		constexpr auto CarKeySound = 0x1c20; // UAkAudioEvent*
		constexpr auto TimerHandle_DeactiveCarKey = 0x1c28; // FTimerHandle
		constexpr auto Timer_UpdateUltimateVehicleLocation = 0x1c30; // FTimerHandle
		constexpr auto UltimateParticleComponent = 0x1c38; // UParticleSystemComponent*
		constexpr auto UltimateDecalComponent = 0x1c40; // UDecalComponent*
		constexpr auto UltimateParticle = 0x1c48; // UParticleSystem*
		constexpr auto UltimateDecal = 0x1c50; // UMaterialInterface*
		constexpr auto CanSpawnColor = 0x1c58; // TMap<FName, FLinearColor>
		constexpr auto CannotSpawnColor = 0x1ca8; // TMap<FName, FLinearColor>
		constexpr auto UltimateParticle_DeltaHeight = 0x1cf8; // float
		constexpr auto ActiveBuffs = 0x1d00; // TArray<FName>
		constexpr auto UltimateActiveBuffs = 0x1d10; // TArray<FName>
		constexpr auto UltimateSpawnVehicle = 0x1d20; // ABravoHotelVehicle*
		constexpr auto UltimateSpawnVehicleLocation = 0x1d28; // FVector_NetQuantize
	}

	namespace n_ULuminARSessionConfig {
		constexpr auto PlanesQuery = 0xb0; // FMagicLeapPlanesQuery
		constexpr auto MaxPlaneQueryResults = 0x110; // int32_t
		constexpr auto MinPlaneArea = 0x114; // int32_t
		constexpr auto bArbitraryOrientationPlaneDetection = 0x118; // bool
		constexpr auto PlaneSearchExtents = 0x11c; // FVector
		constexpr auto PlaneQueryFlags = 0x128; // TArray<EMagicLeapPlaneQueryFlags>
		constexpr auto bDiscardZeroExtentPlanes = 0x138; // bool
		constexpr auto bDefaultUseUnreliablePose = 0x139; // bool
	}

	namespace n_UUW-Lobby_WeaponInfo_Stat_C {
		constexpr auto Image = 0x248; // UImage*
		constexpr auto Image_2 = 0x250; // UImage*
		constexpr auto Image_3 = 0x258; // UImage*
		constexpr auto Image_4 = 0x260; // UImage*
		constexpr auto Image_5 = 0x268; // UImage*
		constexpr auto Image_6 = 0x270; // UImage*
		constexpr auto Image_7 = 0x278; // UImage*
		constexpr auto Image_8 = 0x280; // UImage*
		constexpr auto Image_9 = 0x288; // UImage*
		constexpr auto Image_106 = 0x290; // UImage*
		constexpr auto T_Accuracy = 0x298; // UTextBlock*
		constexpr auto T_EffectiveRange = 0x2a0; // UTextBlock*
		constexpr auto T_FireRate = 0x2a8; // UTextBlock*
		constexpr auto T_MagSize = 0x2b0; // UTextBlock*
		constexpr auto T_Power = 0x2b8; // UTextBlock*
	}

	namespace n_UMovieSceneMediaSection {
		constexpr auto MediaSource = 0xe0; // UMediaSource*
		constexpr auto bLooping = 0xe8; // bool
		constexpr auto StartFrameOffset = 0xec; // FFrameNumber
		constexpr auto MediaTexture = 0xf0; // UMediaTexture*
		constexpr auto MediaSoundComponent = 0xf8; // UMediaSoundComponent*
		constexpr auto bUseExternalMediaPlayer = 0x100; // bool
		constexpr auto ExternalMediaPlayer = 0x108; // UMediaPlayer*
	}

	namespace n_UBHBMaterialEffectBase {
		constexpr auto CameraPostProcessPreset = 0x380; // UCameraPostProcessPreset*
		constexpr auto TargetMeshs = 0x388; // TArray<UMeshComponent*>
	}

	namespace n_UGameViewportClient {
		constexpr auto ViewportConsole = 0x40; // UConsole*
		constexpr auto DebugProperties = 0x48; // TArray<FDebugDisplayProperty>
		constexpr auto MaxSplitscreenPlayers = 0x68; // int32_t
		constexpr auto World = 0x78; // UWorld*
		constexpr auto GameInstance = 0x80; // UGameInstance*
	}

	namespace n_UBravoHotelReportUserCompletedWidget {
		constexpr auto ConfirmButton = 0x248; // UButton*
	}

	namespace n_UBravoHotelSupplyBox {
		constexpr auto SupplyBoxSpawnEffect = 0x38; // UParticleSystem*
		constexpr auto PP_Preset_PickupOutline = 0x40; // UCameraPostProcessPreset*
		constexpr auto EffectEquipmentTransitionDelegate = 0x48; // FMulticastInlineDelegate
		constexpr auto EquipmentSounedDelegate = 0x58; // FMulticastInlineDelegate
		constexpr auto SlotHoverSounedDelegate = 0x68; // FMulticastInlineDelegate
		constexpr auto SupplyItemList = 0x78; // TArray<FSupplyBoxItemInfo>
		constexpr auto TargetPointList = 0x88; // TArray<AActor*>
		constexpr auto PP_PickupOutlineRef = 0x98; // UCameraPostProcessPreset*
		constexpr auto CurrentActor = 0xa0; // FSupplyBoxItemInfo
		constexpr auto CurrentSlot = 0xd0; // FSupplySlotInfo
		constexpr auto TransitionList = 0xe0; // TArray<FEffectTransitionInfo>
	}

	namespace n_UPaperSprite {
		constexpr auto AdditionalSourceTextures = 0x38; // TArray<UTexture*>
		constexpr auto BakedSourceUV = 0x48; // FVector2D
		constexpr auto BakedSourceDimension = 0x50; // FVector2D
		constexpr auto BakedSourceTexture = 0x58; // UTexture2D*
		constexpr auto DefaultMaterial = 0x60; // UMaterialInterface*
		constexpr auto AlternateMaterial = 0x68; // UMaterialInterface*
		constexpr auto Sockets = 0x70; // TArray<FPaperSpriteSocket>
		constexpr auto SpriteCollisionDomain = 0x80; // ESpriteCollisionMode
		constexpr auto PixelsPerUnrealUnit = 0x84; // float
		constexpr auto BodySetup = 0x88; // UBodySetup*
		constexpr auto AlternateMaterialSplitIndex = 0x90; // int32_t
		constexpr auto BakedRenderData = 0x98; // TArray<FVector4>
	}

	namespace n_UMaterialExpressionFmod {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_UBravoHotelHIDestructibleComponent {
		constexpr auto MeshClassType = 0x728; // FName
		constexpr auto AllowedDamageType = 0x730; // TArray<UBravoHotelDamageType*>
		constexpr auto ImpulseStrength = 0x740; // float
		constexpr auto HpList = 0x748; // TArray<float>
		constexpr auto CurrentHpList = 0x758; // TArray<int16_t>
		constexpr auto DestructedSound = 0x768; // UAkAudioEvent*
		constexpr auto DestructedEffect = 0x770; // UParticleSystem*
		constexpr auto EffectPositionDelta = 0x778; // FVector
		constexpr auto EffectRotationDelta = 0x784; // FVector
		constexpr auto bOverrideMaterial = 0x790; // bool
		constexpr auto DestructibleMaterialIndex = 0x794; // int32_t
		constexpr auto DestructibleMaterial = 0x798; // UMaterialInterface*
		constexpr auto bIsWindowComponent = 0x7a0; // bool
		constexpr auto DestructibleActorClass = 0x7a8; // ADestructibleActor*
		constexpr auto DestructibleMesh = 0x7b0; // TSoftObjectPtr<UDestructibleMesh>
		constexpr auto DisableInstanceArray = 0x840; // TArray<char>
	}

	namespace n_UTextRenderComponent {
		constexpr auto Text = 0x4b0; // FText
		constexpr auto TextMaterial = 0x4c8; // UMaterialInterface*
		constexpr auto Font = 0x4d0; // UFont*
		constexpr auto HorizontalAlignment = 0x4d8; // EHorizTextAligment
		constexpr auto VerticalAlignment = 0x4d9; // EVerticalTextAligment
		constexpr auto TextRenderColor = 0x4dc; // FColor
		constexpr auto XScale = 0x4e0; // float
		constexpr auto YScale = 0x4e4; // float
		constexpr auto WorldSize = 0x4e8; // float
		constexpr auto InvDefaultSize = 0x4ec; // float
		constexpr auto HorizSpacingAdjust = 0x4f0; // float
		constexpr auto VertSpacingAdjust = 0x4f4; // float
		constexpr auto bAlwaysRenderAsText = 0x4f8; // char : 1
	}

	namespace n_UBravoHotelReportUserWidget {
		constexpr auto ReportButton = 0x248; // UButton*
		constexpr auto CancelButton = 0x250; // UButton*
		constexpr auto SelectedUserNickName = 0x258; // UTextBlock*
	}

	namespace n_UParticleModuleRotation_Seeded {
		constexpr auto RandomSeedInfo = 0x60; // FParticleRandomSeedInfo
	}

	namespace n_ASceneCapture2D {
		constexpr auto CaptureComponent2D = 0x328; // USceneCaptureComponent2D*
	}

	namespace n_ATextRenderActor {
		constexpr auto TextRender = 0x318; // UTextRenderComponent*
	}

	namespace n_UMaterialExpressionNormalize {
		constexpr auto VectorInput = 0x40; // FExpressionInput
	}

	namespace n_UBlendProfile {
		constexpr auto OwningSkeleton = 0x38; // USkeleton*
		constexpr auto ProfileEntries = 0x48; // TArray<FBlendProfileBoneEntry>
	}

	namespace n_UMeshSimplificationSettings {
		constexpr auto MeshReductionModuleName = 0x38; // FName
	}

	namespace n_UTextureLightProfile {
		constexpr auto Brightness = 0xe8; // float
		constexpr auto TextureMultiplier = 0xec; // float
	}

	namespace n_UNiagaraDataInterfaceRWBase {
		constexpr auto OutputShaderStages = 0x30; // TSet<int32_t>
		constexpr auto IterationShaderStages = 0x80; // TSet<int32_t>
	}

	namespace n_UMovieSceneSkeletalAnimationTrack {
		constexpr auto AnimationSections = 0x58; // TArray<UMovieSceneSection*>
		constexpr auto bUseLegacySectionIndexBlend = 0x68; // bool
	}

	namespace n_UMaterialExpressionSkyAtmosphereLightIlluminance {
		constexpr auto LightIndex = 0x40; // int32_t
		constexpr auto WorldPosition = 0x44; // FExpressionInput
	}

	namespace n_UUW-BlackMarket_Main_C {
		constexpr auto UberGraphFrame = 0x2e8; // FPointerToUberGraphFrame
		constexpr auto AllItem = 0x2f0; // UButton*
		constexpr auto Button_1004 = 0x2f8; // UButton*
		constexpr auto CheckBox_1 = 0x300; // UCheckBox*
		constexpr auto CP-Column = 0x308; // UCanvasPanel*
		constexpr auto IMG-Ammo = 0x310; // UImage*
		constexpr auto IMG-Attachment = 0x318; // UImage*
		constexpr auto IMG-Consumable = 0x320; // UImage*
		constexpr auto IMG-Custom = 0x328; // UImage*
		constexpr auto IMG-Gear = 0x330; // UImage*
		constexpr auto IMG-Perk = 0x338; // UImage*
		constexpr auto IMG-Preset = 0x340; // UImage*
		constexpr auto IMG-TopBG = 0x348; // UImage*
		constexpr auto IMG-Vehicle = 0x350; // UImage*
		constexpr auto IMG-Weapon = 0x358; // UImage*
		constexpr auto IMG-Wearable = 0x360; // UImage*
		constexpr auto Text_culture = 0x368; // UTextBlock*
		constexpr auto UW-BlackMarket_Character = 0x370; // UUW-BlackMarket_Character_C*
		constexpr auto UW-BlackMarket_SubTab = 0x378; // UUW-BlackMarket_SubTab_C*
		constexpr auto WB-ItemList = 0x380; // UWrapBox*
		constexpr auto WrapBox_6 = 0x388; // UWrapBox*
		constexpr auto CurrentTab = 0x390; // EBlackmarketTabType
		constexpr auto SelectTabColor = 0x394; // FLinearColor
		constexpr auto UnSelectTabColor = 0x3a4; // FLinearColor
		constexpr auto ShowWorkInProcess = 0x3b4; // bool
		constexpr auto ItemList = 0x3b8; // TArray<FInventoryItemDetailInfo>
		constexpr auto SelectedWeaponSubTab = 0x3c8; // EWeaponType
		constexpr auto SelectedAttachmentSubTab = 0x3c9; // EWeaponAttachmentType
		constexpr auto SelectedWearableSubTab = 0x3ca; // EWearableItemType
		constexpr auto SelectedGearSubTab = 0x3cb; // EWearableItemType
		constexpr auto SelectedCustomSubTab = 0x3cc; // EWearableItemType
		constexpr auto SortTypeList = 0x3d0; // TArray<int32_t>
		constexpr auto WeaponAscendList = 0x3e0; // TArray<bool>
		constexpr auto CurrentWeaponSortType = 0x3f0; // int32_t
		constexpr auto AmmoAscendList = 0x3f8; // TArray<bool>
		constexpr auto CurrentAmmoSortType = 0x408; // int32_t
		constexpr auto AttachmentAscendList = 0x410; // TArray<bool>
		constexpr auto CurrentAttachmentSortType = 0x420; // int32_t
		constexpr auto CurrentWearableSortType = 0x424; // int32_t
		constexpr auto CurrentConsumableSortType = 0x428; // int32_t
		constexpr auto CurrentCustomSortType = 0x42c; // int32_t
		constexpr auto CurrentVehicleSortType = 0x430; // int32_t
		constexpr auto WearableAscendList = 0x438; // TArray<bool>
		constexpr auto ConsumableAscendList = 0x448; // TArray<bool>
		constexpr auto CustomAscendList = 0x458; // TArray<bool>
		constexpr auto VehicleAscendList = 0x468; // TArray<bool>
		constexpr auto SaveData = 0x478; // UBP-BlackmarketSaveGame_C*
		constexpr auto GearAscendList = 0x480; // TArray<bool>
		constexpr auto CurrentGearSortType = 0x490; // int32_t
		constexpr auto BlackmarketSaveSlotName = 0x498; // FString
		constexpr auto TestIndex = 0x4a8; // int32_t
		constexpr auto PerkAscendList = 0x4b0; // TArray<bool>
		constexpr auto CurrentPerkSortType = 0x4c0; // int32_t
		constexpr auto SelectedPerkSubTab = 0x4c4; // EPerkSlotFlag
		constexpr auto CurrentPresetSortType = 0x4c8; // int32_t
		constexpr auto PresetAscendList = 0x4d0; // TArray<bool>
		constexpr auto SelectedPerkClass = 0x4e0; // FName
		constexpr auto SelectedConsumableSubTab = 0x4e8; // EItemType
	}

	namespace n_UUW-Inventory_Recipe_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Character_BG_Motion = 0x250; // UWidgetAnimation*
		constexpr auto Image_308 = 0x258; // UImage*
		constexpr auto ScrollBox_KeepedList = 0x260; // UScrollBox*
		constexpr auto SizeBox_KeepedList = 0x268; // USizeBox*
		constexpr auto PlayerController = 0x270; // ABP-BravoHotel-PlayerController_C*
		constexpr auto SlotMaxHeight = 0x278; // float
	}

	namespace n_UOculusSceneCaptureCubemap {
		constexpr auto CaptureComponents = 0x38; // TArray<USceneCaptureComponent2D*>
	}

	namespace n_UConsole {
		constexpr auto ConsoleTargetPlayer = 0x38; // ULocalPlayer*
		constexpr auto DefaultTexture_Black = 0x40; // UTexture2D*
		constexpr auto DefaultTexture_White = 0x48; // UTexture2D*
		constexpr auto HistoryBuffer = 0x68; // TArray<FString>
	}

	namespace n_URendererSettings {
		constexpr auto bMobileDisableVertexFog = 0x38; // char : 1
		constexpr auto MaxMobileCascades = 0x3c; // int32_t
		constexpr auto MobileMSAASampleCount = 0x40; // EMobileMSAASampleCount
		constexpr auto bMobileUseLegacyShadingModel = 0x44; // char : 1
		constexpr auto bMobileAllowDitheredLODTransition = 0x44; // char : 1
		constexpr auto bMobileAllowSoftwareOcclusionCulling = 0x44; // char : 1
		constexpr auto bMobileVirtualTextures = 0x44; // char : 1
		constexpr auto bDiscardUnusedQualityLevels = 0x44; // char : 1
		constexpr auto bOcclusionCulling = 0x44; // char : 1
		constexpr auto MinScreenRadiusForLights = 0x48; // float
		constexpr auto MinScreenRadiusForEarlyZPass = 0x4c; // float
		constexpr auto MinScreenRadiusForCSMdepth = 0x50; // float
		constexpr auto bPrecomputedVisibilityWarning = 0x54; // char : 1
		constexpr auto bUseCullDistanceVolumes = 0x54; // char : 1
		constexpr auto bTextureStreaming = 0x54; // char : 1
		constexpr auto bUseDXT5NormalMaps = 0x54; // char : 1
		constexpr auto bVirtualTextures = 0x54; // char : 1
		constexpr auto bVirtualTexturedLightmaps = 0x54; // char : 1
		constexpr auto VirtualTextureTileSize = 0x58; // uint32_t
		constexpr auto VirtualTextureTileBorderSize = 0x5c; // uint32_t
		constexpr auto VirtualTextureFeedbackFactor = 0x60; // uint32_t
		constexpr auto bVirtualTextureEnableCompressZlib = 0x64; // char : 1
		constexpr auto bVirtualTextureEnableCompressCrunch = 0x64; // char : 1
		constexpr auto bClearCoatEnableSecondNormal = 0x64; // char : 1
		constexpr auto bPreIntegratedSkinBRDF = 0x64; // char : 1
		constexpr auto bAnisotropicBRDF = 0x64; // char : 1
		constexpr auto ReflectionCaptureResolution = 0x68; // int32_t
		constexpr auto ReflectionEnvironmentLightmapMixBasedOnRoughness = 0x6c; // char : 1
		constexpr auto bForwardShading = 0x6c; // char : 1
		constexpr auto bVertexFoggingForOpaque = 0x6c; // char : 1
		constexpr auto bAllowStaticLighting = 0x6c; // char : 1
		constexpr auto bUseNormalMapsForStaticLighting = 0x6c; // char : 1
		constexpr auto bGenerateMeshDistanceFields = 0x6c; // char : 1
		constexpr auto bEightBitMeshDistanceFields = 0x6c; // char : 1
		constexpr auto bGenerateLandscapeGIData = 0x6c; // char : 1
		constexpr auto bCompressMeshDistanceFields = 0x6d; // char : 1
		constexpr auto TessellationAdaptivePixelsPerTriangle = 0x70; // float
		constexpr auto bSeparateTranslucency = 0x74; // char : 1
		constexpr auto TranslucentSortPolicy = 0x78; // ETranslucentSortPolicy
		constexpr auto TranslucentSortAxis = 0x7c; // FVector
		constexpr auto CustomDepthStencil = 0x88; // ECustomDepthStencil
		constexpr auto bCustomDepthTaaJitter = 0x8c; // char : 1
		constexpr auto bEnableAlphaChannelInPostProcessing = 0x90; // EAlphaChannelMode
		constexpr auto bDefaultFeatureBloom = 0x94; // char : 1
		constexpr auto bDefaultFeatureAmbientOcclusion = 0x94; // char : 1
		constexpr auto bDefaultFeatureAmbientOcclusionStaticFraction = 0x94; // char : 1
		constexpr auto bDefaultFeatureAutoExposure = 0x94; // char : 1
		constexpr auto DefaultFeatureAutoExposure = 0x98; // EAutoExposureMethodUI
		constexpr auto DefaultFeatureAutoExposureBias = 0x9c; // float
		constexpr auto bExtendDefaultLuminanceRangeInAutoExposureSettings = 0xa0; // char : 1
		constexpr auto bUsePreExposure = 0xa0; // char : 1
		constexpr auto bEnablePreExposureOnlyInTheEditor = 0xa0; // char : 1
		constexpr auto bDefaultFeatureMotionBlur = 0xa0; // char : 1
		constexpr auto bDefaultFeatureLensFlare = 0xa0; // char : 1
		constexpr auto bTemporalUpsampling = 0xa0; // char : 1
		constexpr auto bSSGI = 0xa0; // char : 1
		constexpr auto DefaultFeatureAntiAliasing = 0xa4; // EAntiAliasingMethod
		constexpr auto DefaultLightUnits = 0xa5; // ELightUnits
		constexpr auto DefaultBackBufferPixelFormat = 0xa6; // EDefaultBackBufferPixelFormat
		constexpr auto bRenderUnbuiltPreviewShadowsInGame = 0xa8; // char : 1
		constexpr auto bStencilForLODDither = 0xa8; // char : 1
		constexpr auto EarlyZPass = 0xac; // EEarlyZPass
		constexpr auto bEarlyZPassOnlyMaterialMasking = 0xb0; // char : 1
		constexpr auto bDBuffer = 0xb0; // char : 1
		constexpr auto ClearSceneMethod = 0xb4; // EClearSceneOptions
		constexpr auto bBasePassOutputsVelocity = 0xb8; // char : 1
		constexpr auto bVertexDeformationOutputsVelocity = 0xb8; // char : 1
		constexpr auto bSelectiveBasePassOutputs = 0xb8; // char : 1
		constexpr auto bDefaultParticleCutouts = 0xb8; // char : 1
		constexpr auto GPUSimulationTextureSizeX = 0xbc; // int32_t
		constexpr auto GPUSimulationTextureSizeY = 0xc0; // int32_t
		constexpr auto bGlobalClipPlane = 0xc4; // char : 1
		constexpr auto GBufferFormat = 0xc8; // EGBufferFormat
		constexpr auto bUseGPUMorphTargets = 0xcc; // char : 1
		constexpr auto bNvidiaAftermathEnabled = 0xcc; // char : 1
		constexpr auto bMultiView = 0xcc; // char : 1
		constexpr auto bMobilePostProcessing = 0xcc; // char : 1
		constexpr auto bMobileMultiView = 0xcc; // char : 1
		constexpr auto bMobileUseHWsRGBEncoding = 0xcc; // char : 1
		constexpr auto bRoundRobinOcclusion = 0xcc; // char : 1
		constexpr auto bODSCapture = 0xcc; // char : 1
		constexpr auto bMeshStreaming = 0xcd; // char : 1
		constexpr auto WireframeCullThreshold = 0xd0; // float
		constexpr auto bEnableRayTracing = 0xd4; // char : 1
		constexpr auto bEnableRayTracingTextureLOD = 0xd4; // char : 1
		constexpr auto bSupportStationarySkylight = 0xd4; // char : 1
		constexpr auto bSupportLowQualityLightmaps = 0xd4; // char : 1
		constexpr auto bSupportPointLightWholeSceneShadows = 0xd4; // char : 1
		constexpr auto bSupportAtmosphericFog = 0xd4; // char : 1
		constexpr auto bSupportSkyAtmosphere = 0xd4; // char : 1
		constexpr auto bSupportSkyAtmosphereAffectsHeightFog = 0xd4; // char : 1
		constexpr auto bSupportSkinCacheShaders = 0xd5; // char : 1
		constexpr auto DefaultSkinCacheBehavior = 0xd8; // ESkinCacheDefaultBehavior
		constexpr auto SkinCacheSceneMemoryLimitInMB = 0xdc; // float
		constexpr auto bMobileEnableStaticAndCSMShadowReceivers = 0xe0; // char : 1
		constexpr auto bMobileEnableMovableLightCSMShaderCulling = 0xe0; // char : 1
		constexpr auto bMobileAllowDistanceFieldShadows = 0xe0; // char : 1
		constexpr auto bMobileAllowMovableDirectionalLights = 0xe0; // char : 1
		constexpr auto MobileNumDynamicPointLights = 0xe4; // uint32_t
		constexpr auto bMobileDynamicPointLightsUseStaticBranch = 0xe8; // char : 1
		constexpr auto bMobileAllowMovableSpotlights = 0xe8; // char : 1
		constexpr auto bSupport16BitBoneIndex = 0xe8; // char : 1
		constexpr auto bGPUSkinLimit2BoneInfluences = 0xe8; // char : 1
		constexpr auto bSupportDepthOnlyIndexBuffers = 0xe8; // char : 1
		constexpr auto bSupportReversedIndexBuffers = 0xe8; // char : 1
		constexpr auto bSupportMaterialLayers = 0xe8; // char : 1
		constexpr auto bLPV = 0xe8; // char : 1
	}

	namespace n_UGeometryCollectionComponent {
		constexpr auto ChaosSolverActor = 0x4e8; // AChaosSolverActor*
		constexpr auto RestCollection = 0x5d0; // UGeometryCollection*
		constexpr auto InitializationFields = 0x5d8; // TArray<AFieldSystemActor*>
		constexpr auto Simulating = 0x5e8; // bool
		constexpr auto ObjectType = 0x5f0; // EObjectStateTypeEnum
		constexpr auto EnableClustering = 0x5f1; // bool
		constexpr auto ClusterGroupIndex = 0x5f4; // int32_t
		constexpr auto MaxClusterLevel = 0x5f8; // int32_t
		constexpr auto DamageThreshold = 0x600; // TArray<float>
		constexpr auto ClusterConnectionType = 0x610; // EClusterConnectionTypeEnum
		constexpr auto CollisionGroup = 0x614; // int32_t
		constexpr auto CollisionSampleFraction = 0x618; // float
		constexpr auto LinearEtherDrag = 0x61c; // float
		constexpr auto AngularEtherDrag = 0x620; // float
		constexpr auto PhysicalMaterial = 0x628; // UChaosPhysicalMaterial*
		constexpr auto InitialVelocityType = 0x630; // EInitialVelocityTypeEnum
		constexpr auto InitialLinearVelocity = 0x634; // FVector
		constexpr auto InitialAngularVelocity = 0x640; // FVector
		constexpr auto CacheParameters = 0x650; // FGeomComponentCacheParameters
		constexpr auto NotifyGeometryCollectionPhysicsStateChange = 0x6a0; // FMulticastInlineDelegate
		constexpr auto NotifyGeometryCollectionPhysicsLoadingStateChange = 0x6b0; // FMulticastInlineDelegate
		constexpr auto OnChaosBreakEvent = 0x6d8; // FMulticastInlineDelegate
		constexpr auto DesiredCacheTime = 0x6e8; // float
		constexpr auto CachePlayback = 0x6ec; // bool
		constexpr auto OnChaosPhysicsCollision = 0x6f0; // FMulticastInlineDelegate
		constexpr auto bNotifyBreaks = 0x700; // bool
		constexpr auto bNotifyCollisions = 0x701; // bool
		constexpr auto DummyBodySetup = 0x960; // UBodySetup*
	}

	namespace n_UEdGraphPin_Deprecated {
		constexpr auto PinName = 0x28; // FString
		constexpr auto PinToolTip = 0x38; // FString
		constexpr auto Direction = 0x48; // EEdGraphPinDirection
		constexpr auto PinType = 0x50; // FEdGraphPinType
		constexpr auto DefaultValue = 0xa8; // FString
		constexpr auto AutogeneratedDefaultValue = 0xb8; // FString
		constexpr auto DefaultObject = 0xc8; // UObject*
		constexpr auto DefaultTextValue = 0xd0; // FText
		constexpr auto LinkedTo = 0xe8; // TArray<UEdGraphPin_Deprecated*>
		constexpr auto SubPins = 0xf8; // TArray<UEdGraphPin_Deprecated*>
		constexpr auto ParentPin = 0x108; // UEdGraphPin_Deprecated*
		constexpr auto ReferencePassThroughConnection = 0x110; // UEdGraphPin_Deprecated*
	}

	namespace n_UVOIPTalker {
		constexpr auto Settings = 0xb0; // FVoiceSettings
	}

	namespace n_UInterpTrackInstBoolProp {
		constexpr auto ResetBool = 0x60; // bool
	}

	namespace n_UMaterialExpressionTangent {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Period = 0x54; // float
	}

	namespace n_UBravoHotelConfirmPopupWidget {
		constexpr auto ParantWidget = 0x248; // UUserWidget*
	}

	namespace n_UGameplayTaskResource {
		constexpr auto ManualResourceID = 0x28; // int32_t
		constexpr auto AutoResourceID = 0x2c; // int8_t
		constexpr auto bManuallySetID = 0x30; // char : 1
	}

	namespace n_UBravoHotelTeamInfoWidget {
		constexpr auto SlotList = 0x248; // TArray<UBravoHotelTeamInfoSlotWidget*>
	}

	namespace n_ABravoHotelPlayerController {
		constexpr auto ConversationComponent = 0x720; // UBravoHotelConversationComponent*
		constexpr auto QuestComponent = 0x728; // UBravoHotelQuestComponent*
		constexpr auto Delegate_OnFinishMatchEndAnimation = 0x730; // FMulticastInlineDelegate
		constexpr auto OnResetTeamPlayersInfo = 0x740; // FMulticastInlineDelegate
		constexpr auto DelegateAddLog = 0x758; // FMulticastInlineDelegate
		constexpr auto DelegateDataEventCharacte = 0x8f0; // FMulticastInlineDelegate
		constexpr auto DelegateDataEventCharacteUidList = 0x900; // FMulticastInlineDelegate
		constexpr auto DelegateOnKillOtherPlayer = 0x910; // FMulticastInlineDelegate
		constexpr auto DelegateOnKnockDownOtherPlayer = 0x920; // FMulticastInlineDelegate
		constexpr auto DelegateOnWhoKilledMe = 0x930; // FMulticastInlineDelegate
		constexpr auto DuplicatedReconnectTimeout_TimerHandle = 0x940; // FTimerHandle
		constexpr auto RequestResuscitationTimeStamp = 0x94c; // float
		constexpr auto bIsResuscitated = 0x950; // bool
		constexpr auto DelegateShowWeightMap = 0xba0; // FMulticastInlineDelegate
		constexpr auto DelegateInventoryState = 0xbb0; // FMulticastInlineDelegate
		constexpr auto ShowUseBoostItemMenuDelayTime = 0xbc0; // float
		constexpr auto DelegateEnableExpertWeaponMaterialSearch = 0xbc8; // FMulticastInlineDelegate
		constexpr auto TimeHandle_MaterialSearchDelay = 0xbd8; // FTimerHandle
		constexpr auto PerkDeckPopup = 0xbe0; // UBravoHotelPerkDeckWidget*
		constexpr auto bUseLevelStreamimngPriorityByZ = 0xbec; // bool
		constexpr auto SpawnedResusciatedCam = 0xc18; // AActor*
		constexpr auto SelectDeckPrice = 0xc20; // int32_t
		constexpr auto DeathCamFocus = 0xc28; // AActor*
		constexpr auto AutoNameTooltipDistance = 0xc30; // float
		constexpr auto RedZoneExplosionCameraShake = 0xc38; // UCameraShake*
		constexpr auto bIgnoreInputCloseUI = 0xca9; // bool
		constexpr auto HideObjectStack = 0xcb0; // TArray<FHideObjectInfo>
		constexpr auto FragmentCloseExplosionSoundDistance = 0xcc0; // float
		constexpr auto bEnableHideGun = 0xcd0; // bool
		constexpr auto FragmentFarExplosionSoundDistance = 0xcd8; // float
		constexpr auto ItemRecipeTreeWidgetClass = 0xce0; // UUserWidget*
		constexpr auto FragmentCloseExplosionSoundTime = 0xce8; // float
		constexpr auto FragmentFarExplosionSoundTime = 0xcf0; // float
		constexpr auto DelegatePayGoldOnSelectDeck = 0xcf8; // FMulticastInlineDelegate
		constexpr auto MinMaterialItemSearchDistance = 0xd0c; // float
		constexpr auto DelegateSelectSearchMaterialItem = 0xd18; // FMulticastInlineDelegate
		constexpr auto SpawnedItemList = 0xd28; // TMap<FName, FMaterialItemList>
		constexpr auto TimerHandle_SetStateSpectator = 0xd78; // FTimerHandle
		constexpr auto DelegateChoosePerkDeck = 0xd98; // FMulticastInlineDelegate
		constexpr auto MaterialItemSearchShowCount = 0xda8; // float
		constexpr auto DeathCamTime = 0xdac; // float
		constexpr auto FragmentMidExplosionSoundTime = 0xdd8; // float
		constexpr auto Resuscitater = 0xde0; // ABravoHotelCharacter*
		constexpr auto PreSpectatorTargetPawn = 0xe00; // APawn*
		constexpr auto SpawnedSupplyBoxList = 0xe08; // TMap<int32_t, ABHPersonalSupplyBox*>
		constexpr auto bEnableLevelStreamimngDistanceScaleByZ = 0xe58; // bool
		constexpr auto DeathCamClass = 0xe60; // AActor*
		constexpr auto SelectRecipeItem = 0xe68; // FSelecteSearchMaterialItemInfo
		constexpr auto LevelStreamingPrioritiesByZ = 0xe78; // TArray<FLevelStreamimgPriorityByZ>
		constexpr auto DelegateEnableMaterialSearch = 0xe88; // FMulticastInlineDelegate
		constexpr auto PlayerStateList = 0xe98; // TArray<ABravoHotelPlayerState*>
		constexpr auto PaidAccountGold = 0xea8; // uint32_t
		constexpr auto FragmentMidExplosionSoundDistance = 0xeac; // float
		constexpr auto WatchingPCs = 0xeb0; // TArray<APlayerController*>
		constexpr auto MatchEndSimpleResult = 0xee8; // FMatchEndSimpleResult
		constexpr auto RadialDamageInfos = 0x1020; // TArray<FRepRadialDamageInfo>
		constexpr auto LastSpectatorTargetPawn = 0x1030; // APawn*
		constexpr auto bHideActorMode = 0x103c; // bool
		constexpr auto NoResponseNetworkClass = 0x1040; // UUserWidget*
		constexpr auto SoftCheatWidgetClass = 0x1050; // TSoftClassPtr<UObject>
		constexpr auto PingComponent = 0x1078; // UReplicationPingComponet*
		constexpr auto AuthorizedRigidBodiesOnClient = 0x1088; // TArray<AActor*>
		constexpr auto SmartPingMenuDelayTime = 0x1098; // float
		constexpr auto AutoNameTooltipSecond = 0x109c; // float
		constexpr auto SpectatingPlayerHUD = 0x10a0; // ABravoHotelPlayerHUD*
		constexpr auto OnDamagedADSCameraShake = 0x10b0; // UCameraShake*
		constexpr auto RemoveMaterialItemDistance = 0x10b8; // float
		constexpr auto MaterialItemPingLifeTime = 0x10c0; // float
		constexpr auto SpectatorHUDClass = 0x10c8; // AHUD*
		constexpr auto bSearchExpertWeaponMaterialItem = 0x10d4; // bool
		constexpr auto ChangeDeckMultiflier = 0x10d8; // float
		constexpr auto MovePointList = 0x10e0; // TArray<FBravoHotelMovePoint>
		constexpr auto LastEquipItemLifeTime = 0x10f0; // float
		constexpr auto ResetTeamPlayersInfo = 0x1120; // bool
		constexpr auto CheatWidget = 0x1128; // UUserWidget*
		constexpr auto SavedCharacterPawn = 0x1150; // ABravoHotelCharacter*
		constexpr auto TimeHandle_ScreenCapture = 0x1158; // FTimerHandle
		constexpr auto bInfiniteAmmo = 0x1160; // bool
		constexpr auto TempResuscitater = 0x1168; // ABravoHotelCharacter*
		constexpr auto DebugInfo = 0x1180; // UBravoHotelDebugInfo*
		constexpr auto SelectedPersonalSupplyBoxOwnerID = 0x1190; // int32_t
		constexpr auto SpawnedWinCam = 0x1198; // AActor*
		constexpr auto MaxChangeDeckListCount = 0x11a4; // int32_t
		constexpr auto SpawnedFieldViewCam = 0x11a8; // AActor*
		constexpr auto ChangeDeckBasePrice = 0x11b0; // int32_t
		constexpr auto TimeHandle_CheckLastEquipItemInit = 0x11c0; // FTimerHandle
		constexpr auto FragmentMidExplosionCameraShakeScale = 0x121c; // float
		constexpr auto NameTooltips = 0x1220; // TArray<FName>
		constexpr auto PP_BlueZone = 0x1230; // UCameraPostProcessPreset*
		constexpr auto bSearchMaterialItem = 0x1238; // bool
		constexpr auto EquipItemMaterialItemAutorSearchTime = 0x123c; // float
		constexpr auto DelegatePayGoldOnChangeDeckList = 0x1240; // FMulticastInlineDelegate
		constexpr auto CurrentSpectatingMode = 0x1251; // ESpectatingMode
		constexpr auto LoseWidgetShowDelay = 0x1254; // float
		constexpr auto MaxMaterialItemSearchDistance = 0x126c; // float
		constexpr auto bEnableDestroyGun = 0x1270; // bool
		constexpr auto TimeHandle_SearchMaterialPing = 0x1278; // FTimerHandle
		constexpr auto ClientBlueZone = 0x12a8; // ABravoHotelBlueZone*
		constexpr auto TempResuscitatedTarget = 0x1300; // ABravoHotelCharacter*
		constexpr auto TimeHandle_RemoveMaterialPing = 0x1308; // FTimerHandle
		constexpr auto FragmentMidExplosionDistance = 0x1310; // float
		constexpr auto DelegateMaterialSearchNoti = 0x1318; // FMulticastInlineDelegate
		constexpr auto FragmentFarExplosionDistance = 0x1328; // float
		constexpr auto TeleportPointList = 0x1330; // TArray<FBravoHotelMovePoint>
		constexpr auto OnDamagedCameraShake = 0x1340; // UCameraShake*
		constexpr auto bIsTeamSpectator = 0x1348; // bool
		constexpr auto SpawnBookLocation = 0x134c; // FVector
		constexpr auto ThrowingWeaponExplosionCameraShake = 0x1358; // UCameraShake*
		constexpr auto SpawnedDeathCam = 0x13b0; // AActor*
		constexpr auto FragmentCloseExplosionCameraShakeScale = 0x13bc; // float
		constexpr auto HasSpawnBook = 0x13d0; // bool
		constexpr auto SearchDelayTime = 0x13d4; // float
		constexpr auto LastEquipItem = 0x13dc; // FName
		constexpr auto DelegatePayGoldOnChangeDeck = 0x13e8; // FMulticastInlineDelegate
		constexpr auto IgnoreStartStateSearchMaterial = 0x13f8; // bool
		constexpr auto FragmentCloseExplosionDistance = 0x13fc; // float
		constexpr auto FragmentChangeStateDelayTime = 0x1400; // float
		constexpr auto SuspectController = 0x1408; // ABravoHotelPlayerController*
		constexpr auto ImmediatelyRemovePing = 0x1411; // bool
		constexpr auto MaxChangeDeckCount = 0x1414; // int32_t
		constexpr auto ReSearchWaitingTime = 0x1418; // float
		constexpr auto AccountGold = 0x1428; // uint32_t
		constexpr auto UseItemMenuList = 0x1438; // TMap<int32_t, FName>
		constexpr auto CurrentVictimPlayerState = 0x1490; // ABravoHotelPlayerState*
		constexpr auto FragmentFarExplosionCameraShakeScale = 0x1498; // float
		constexpr auto bForceCheckSearchMaterialItems = 0x149c; // bool
		constexpr auto TimeHandle_CheckEquipItemMaterialItemAutorSearch = 0x14a0; // FTimerHandle
	}

	namespace n_UARSessionConfig {
		constexpr auto bGenerateMeshDataFromTrackedGeometry = 0x30; // bool
		constexpr auto bGenerateCollisionForMeshData = 0x31; // bool
		constexpr auto bGenerateNavMeshForMeshData = 0x32; // bool
		constexpr auto bUseMeshDataForOcclusion = 0x33; // bool
		constexpr auto bRenderMeshDataInWireframe = 0x34; // bool
		constexpr auto bTrackSceneObjects = 0x35; // bool
		constexpr auto bUsePersonSegmentationForOcclusion = 0x36; // bool
		constexpr auto WorldAlignment = 0x37; // EARWorldAlignment
		constexpr auto SessionType = 0x38; // EARSessionType
		constexpr auto PlaneDetectionMode = 0x39; // EARPlaneDetectionMode
		constexpr auto bHorizontalPlaneDetection = 0x3a; // bool
		constexpr auto bVerticalPlaneDetection = 0x3b; // bool
		constexpr auto bEnableAutoFocus = 0x3c; // bool
		constexpr auto LightEstimationMode = 0x3d; // EARLightEstimationMode
		constexpr auto FrameSyncMode = 0x3e; // EARFrameSyncMode
		constexpr auto bEnableAutomaticCameraOverlay = 0x3f; // bool
		constexpr auto bEnableAutomaticCameraTracking = 0x40; // bool
		constexpr auto bResetCameraTracking = 0x41; // bool
		constexpr auto bResetTrackedObjects = 0x42; // bool
		constexpr auto CandidateImages = 0x48; // TArray<UARCandidateImage*>
		constexpr auto MaxNumSimultaneousImagesTracked = 0x58; // int32_t
		constexpr auto EnvironmentCaptureProbeType = 0x5c; // EAREnvironmentCaptureProbeType
		constexpr auto WorldMapData = 0x60; // TArray<char>
		constexpr auto CandidateObjects = 0x70; // TArray<UARCandidateObject*>
		constexpr auto DesiredVideoFormat = 0x80; // FARVideoFormat
		constexpr auto FaceTrackingDirection = 0x8c; // EARFaceTrackingDirection
		constexpr auto FaceTrackingUpdate = 0x8d; // EARFaceTrackingUpdate
		constexpr auto SerializedARCandidateImageDatabase = 0x90; // TArray<char>
		constexpr auto EnabledSessionTrackingFeature = 0xa0; // EARSessionTrackingFeature
	}

	namespace n_UPawnMovementComponent {
		constexpr auto PawnOwner = 0x130; // APawn*
	}

	namespace n_UAISense_Team {
		constexpr auto RegisteredEvents = 0x80; // TArray<FAITeamStimulusEvent>
	}

	namespace n_UMaterialExpressionMaterialProxyReplace {
		constexpr auto Realtime = 0x40; // FExpressionInput
		constexpr auto MaterialProxy = 0x54; // FExpressionInput
	}

	namespace n_URealReplicationGraph {
		constexpr auto GridNode = 0x5c8; // UReplicationGraphNode_GridSpatialization2D*
		constexpr auto SpatializedClasses = 0x5d0; // TArray<UObject*>
		constexpr auto NonSpatializedChildClasses = 0x5e0; // TArray<UObject*>
		constexpr auto AlwaysRelevantNode = 0x5f0; // UReplicationGraphNode_ActorList*
		constexpr auto ExplicitlySetClasses = 0x940; // TArray<UObject*>
	}

	namespace n_UBHBHeadBanging {
		constexpr auto HeadBangingStartTime = 0x2c8; // float
		constexpr auto HeadBangingEndTime = 0x2cc; // float
	}

	namespace n_UParkourComponent {
		constexpr auto DrawDebugTrace = 0xb1; // bool
		constexpr auto ShowLog = 0xb2; // bool
		constexpr auto ParkourDebugTypes = 0xb3; // char
		constexpr auto bNoCameraMove = 0xb4; // bool
		constexpr auto DefaultParkourWindowComponent = 0xb8; // UParkourWindowComponent*
		constexpr auto bOffReplicateMovement = 0xc0; // bool
		constexpr auto bEnableMidJump = 0xc1; // bool
		constexpr auto bNoInputMove = 0xc2; // bool
		constexpr auto ParkourSocketNames = 0xc8; // TArray<FName>
		constexpr auto TraceObjectTypes = 0xd8; // TArray<EObjectTypeQuery>
		constexpr auto CheckWide = 0xe8; // float
		constexpr auto WindowCheckWide = 0xec; // float
		constexpr auto LimiteNormalAngle = 0xf0; // float
		constexpr auto DetectNormalAngle = 0xf4; // float
		constexpr auto BottomCheckPlus = 0xf8; // float
		constexpr auto ThicknessCheckPlus = 0xfc; // float
		constexpr auto WindowBreakRange = 0x100; // float
		constexpr auto SprintSpeed = 0x104; // float
		constexpr auto BaseTraceLength = 0x108; // float
		constexpr auto SprintTraceLength = 0x10c; // float
		constexpr auto CheckHoldRadius = 0x110; // float
		constexpr auto CheckHoldDepth = 0x114; // float
		constexpr auto BaseJumpOverThickness = 0x118; // float
		constexpr auto SprintJumpOverThickness = 0x11c; // float
		constexpr auto JumpOverPlaceDepth = 0x120; // float
		constexpr auto ClimbUpHighHeight = 0x124; // float
		constexpr auto ClimbUpBaseHeight = 0x128; // float
		constexpr auto ClimbUpFallingHeight = 0x12c; // float
		constexpr auto SlideSpeed = 0x130; // float
		constexpr auto LedgeGrabTranceLength = 0x134; // float
		constexpr auto LedgeGrabMinHeight = 0x138; // float
		constexpr auto LedgeGrabMinAttachTime = 0x13c; // float
		constexpr auto BackDistance = 0x140; // float
		constexpr auto DisableCollisionTime = 0x144; // float
		constexpr auto SkipJumpVector = 0x148; // FVector
		constexpr auto InnerEdgeRange = 0x154; // float
		constexpr auto ArmIKPosition = 0x158; // FVector
		constexpr auto Curve_SlideSpeed = 0x168; // UCurveFloat*
		constexpr auto Curve_CameraIn = 0x170; // UCurveFloat*
		constexpr auto Curve_CameraInHeight = 0x178; // UCurveFloat*
		constexpr auto Curve_CameraSecond = 0x180; // UCurveFloat*
		constexpr auto Curve_CameraSecondHeight = 0x188; // UCurveFloat*
		constexpr auto Curve_CameraOut = 0x190; // UCurveFloat*
		constexpr auto ClimbTargetPosition = 0x198; // FVector
		constexpr auto ClimbWallNormal = 0x1a4; // FVector
		constexpr auto LastWallThickness = 0x1b0; // float
		constexpr auto bClimbing = 0x1b4; // bool
		constexpr auto bRevertingClimb = 0x1b5; // bool
		constexpr auto bCanRevertClimb = 0x1b6; // bool
		constexpr auto bBreakWindow = 0x1b7; // bool
		constexpr auto bCanJump = 0x1b8; // bool
		constexpr auto bArmIK = 0x1b9; // bool
		constexpr auto ClimbOverDatas = 0x1c0; // TArray<FClimbData>
		constexpr auto ClimbUpDatas = 0x1d0; // TArray<FClimbData>
		constexpr auto SprintOverDatas = 0x1e0; // TArray<FClimbData>
		constexpr auto SprintUpDatas = 0x1f0; // TArray<FClimbData>
		constexpr auto LedgeGrabClimbOverDatas = 0x200; // TArray<FClimbData>
		constexpr auto LedgeGrabClimbUpDatas = 0x210; // TArray<FClimbData>
		constexpr auto LedgeGrabBlockedClimbOverDatas = 0x220; // TArray<FClimbData>
		constexpr auto LedgeGrabBlockedClimbUpDatas = 0x230; // TArray<FClimbData>
		constexpr auto GroundingDatas = 0x240; // TArray<FClimbData>
		constexpr auto SlideData = 0x250; // FClimbData
		constexpr auto OverrideDatas = 0x2e8; // TMap<FName, FClimbData>
		constexpr auto bUseFootInParkour = 0x388; // bool
		constexpr auto bUseDummyInParkour = 0x389; // bool
		constexpr auto bIsSlideOn = 0x38a; // bool
		constexpr auto ParkourEvents = 0x5c0; // TArray<FParkourEvent>
	}

	namespace n_UBTComposite_SimpleParallel {
		constexpr auto FinishMode = 0x90; // EBTParallelMode
	}

	namespace n_UUW-ReplayEventMarkerBasic_C {
		constexpr auto UberGraphFrame = 0x290; // FPointerToUberGraphFrame
		constexpr auto MarkerBorder = 0x298; // UBorder*
	}

	namespace n_UNiagaraDataInterfaceParticleRead {
		constexpr auto EmitterName = 0x30; // FString
	}

	namespace n_UMaterialExpressionArccosineFast {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UStandinNearPipeline {
		constexpr auto Settings = 0x28; // FAggregationPipelineSettings
	}

	namespace n_UMovieSceneNiagaraTrack {
		constexpr auto Sections = 0x58; // TArray<UMovieSceneSection*>
	}

	namespace n_UMovieSceneColorTrack {
		constexpr auto bIsSlateColor = 0x88; // bool
	}

	namespace n_ABP-DeathCam_C {
		constexpr auto UberGraphFrame = 0x318; // FPointerToUberGraphFrame
		constexpr auto FirstCamera = 0x320; // UCameraComponent*
		constexpr auto FirstSpringArm = 0x328; // USpringArmComponent*
		constexpr auto ThirdCamera = 0x330; // UCameraComponent*
		constexpr auto SecondCamera = 0x338; // UCameraComponent*
		constexpr auto DefaultSceneRoot = 0x340; // USceneComponent*
		constexpr auto DeltaSeconds = 0x348; // float
		constexpr auto TargetDeltaLocation = 0x34c; // FVector
		constexpr auto Character = 0x358; // ABravoHotelCharacter*
		constexpr auto LowerBoundCameraHeightDelta = 0x360; // float
		constexpr auto bHeightUpdateFinished = 0x364; // bool
		constexpr auto ThridCameraRotationYawDelta = 0x368; // float
		constexpr auto ThirdCameraMinHeight = 0x36c; // float
		constexpr auto FirstSpringArmDeltaZ = 0x370; // float
	}

	namespace n_UInterpFilter {
		constexpr auto Caption = 0x28; // FString
	}

	namespace n_UBravoHotelNetworkDelayWidget {
		constexpr auto DefaultTableIndex = 0x250; // int32_t
		constexpr auto T_DelayMessage = 0x258; // UTextBlock*
	}

	namespace n_UCanvasRenderTarget2D {
		constexpr auto OnCanvasRenderTargetUpdate = 0xe8; // FMulticastInlineDelegate
		constexpr auto World = 0xf8; // TWeakObjectPtr<UWorld>
		constexpr auto bShouldClearRenderTargetOnReceiveUpdate = 0x100; // bool
	}

	namespace n_UMaterialExpressionAtmosphericFogColor {
		constexpr auto WorldPosition = 0x40; // FExpressionInput
	}

	namespace n_UParticleModuleLocationSkelVertSurface {
		constexpr auto SourceType = 0x30; // ELocationSkelVertSurfaceSource
		constexpr auto UniversalOffset = 0x34; // FVector
		constexpr auto bUpdatePositionEachFrame = 0x40; // char : 1
		constexpr auto bOrientMeshEmitters = 0x40; // char : 1
		constexpr auto bInheritBoneVelocity = 0x40; // char : 1
		constexpr auto InheritVelocityScale = 0x44; // float
		constexpr auto SkelMeshActorParamName = 0x48; // FName
		constexpr auto ValidAssociatedBones = 0x50; // TArray<FName>
		constexpr auto bEnforceNormalCheck = 0x60; // char : 1
		constexpr auto NormalToCompare = 0x64; // FVector
		constexpr auto NormalCheckToleranceDegrees = 0x70; // float
		constexpr auto NormalCheckTolerance = 0x74; // float
		constexpr auto ValidMaterialIndices = 0x78; // TArray<int32_t>
		constexpr auto bInheritVertexColor = 0x88; // char : 1
		constexpr auto bInheritUV = 0x88; // char : 1
		constexpr auto InheritUVChannel = 0x8c; // uint32_t
	}

	namespace n_UPawnNoiseEmitterComponent {
		constexpr auto bAIPerceptionSystemCompatibilityMode = 0xb0; // char : 1
		constexpr auto LastRemoteNoisePosition = 0xb4; // FVector
		constexpr auto NoiseLifetime = 0xc0; // float
		constexpr auto LastRemoteNoiseVolume = 0xc4; // float
		constexpr auto LastRemoteNoiseTime = 0xc8; // float
		constexpr auto LastLocalNoiseVolume = 0xcc; // float
		constexpr auto LastLocalNoiseTime = 0xd0; // float
	}

	namespace n_UReductionPipeline {
		constexpr auto Settings = 0x28; // FReductionPipelineSettings
	}

	namespace n_UDataAsset {
		constexpr auto NativeClass = 0x28; // UDataAsset*
	}

	namespace n_UBravoHotelItemSpawnBoxComponent {
		constexpr auto BoxID = 0x4d8; // int32_t
		constexpr auto UsingRandomRotation = 0x4dc; // bool
		constexpr auto IsCompleteSpawn = 0x4dd; // bool
		constexpr auto NoneItem = 0x580; // FDivisionItem
		constexpr auto ParentsStandardGroupBoxComponent = 0x5c8; // UBravoHotelItemStandardGroupBoxComponent*
		constexpr auto LoadedClasses = 0x5d0; // TArray<UObject*>
	}

	namespace n_UDatasmithVREDSceneImportData {
		constexpr auto bMergeNodes = 0x48; // bool
		constexpr auto bOptimizeDuplicatedNodes = 0x49; // bool
		constexpr auto bImportMats = 0x4a; // bool
		constexpr auto MatsPath = 0x50; // FString
		constexpr auto bImportVar = 0x60; // bool
		constexpr auto bCleanVar = 0x61; // bool
		constexpr auto VarPath = 0x68; // FString
		constexpr auto bImportLightInfo = 0x78; // bool
		constexpr auto LightInfoPath = 0x80; // FString
		constexpr auto bImportClipInfo = 0x90; // bool
		constexpr auto ClipInfoPath = 0x98; // FString
	}

	namespace n_UUW-Lobby_Craft_WeaponSelect_Slot_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Button_ItemSlotHover_4 = 0x250; // UButton*
		constexpr auto UW-Inventory_ItemSlotHover_4 = 0x258; // UUW-Inventory_ItemSlotHover_C*
		constexpr auto ItemWeaponInfo = 0x260; // FResponse_Weapon_List_Data
		constexpr auto ParentWidget = 0x2e8; // UUW-Lobby_Craft_WeaponSelect_C*
	}

	namespace n_UShowLoginUICallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_AAIController {
		constexpr auto bStartAILogicOnPossess = 0x3f8; // char : 1
		constexpr auto bStopAILogicOnUnposses = 0x3f8; // char : 1
		constexpr auto bLOSflag = 0x3f8; // char : 1
		constexpr auto bSkipExtraLOSChecks = 0x3f8; // char : 1
		constexpr auto bAllowStrafe = 0x3f8; // char : 1
		constexpr auto bWantsPlayerState = 0x3f8; // char : 1
		constexpr auto bSetControlRotationFromPawnOrientation = 0x3f8; // char : 1
		constexpr auto PathFollowingComponent = 0x400; // UPathFollowingComponent*
		constexpr auto BrainComponent = 0x408; // UBrainComponent*
		constexpr auto PerceptionComponent = 0x410; // UAIPerceptionComponent*
		constexpr auto ActionsComp = 0x418; // UPawnActionsComponent*
		constexpr auto Blackboard = 0x420; // UBlackboardComponent*
		constexpr auto CachedGameplayTasksComponent = 0x428; // UGameplayTasksComponent*
		constexpr auto DefaultNavigationFilterClass = 0x430; // UNavigationQueryFilter*
		constexpr auto ReceiveMoveCompleted = 0x438; // FMulticastInlineDelegate
	}

	namespace n_UBravoHotelReplayPlayerListWidget {
		constexpr auto ReplayController = 0x248; // ABravoHotelMK3DReplayController*
		constexpr auto SB_PlayerList = 0x250; // UScrollBox*
		constexpr auto PlayerListSortType = 0x258; // EPlayerListSortType
		constexpr auto PlayerListItemArray = 0x260; // TArray<UUserWidget*>
		constexpr auto PlayerListGroupMap = 0x270; // TMap<int32_t, UUserWidget*>
		constexpr auto PlayerListGroupArrayForSort = 0x2c0; // TArray<UUserWidget*>
	}

	namespace n_UChaosGameplayEventDispatcher {
		constexpr auto CollisionEventRegistrations = 0x1c8; // TMap<UPrimitiveComponent*, FChaosHandlerSet>
		constexpr auto BreakEventRegistrations = 0x218; // TMap<UPrimitiveComponent*, FBreakEventCallbackWrapper>
	}

	namespace n_UUW-Inventory_MaterialIconSlot_C {
		constexpr auto UberGraphFrame = 0x1358; // FPointerToUberGraphFrame
		constexpr auto Complete_ani = 0x1360; // UWidgetAnimation*
		constexpr auto Serching_ani = 0x1368; // UWidgetAnimation*
		constexpr auto Button = 0x1370; // UButton*
		constexpr auto IconBox = 0x1378; // UImage*
		constexpr auto Image = 0x1380; // UImage*
		constexpr auto Image_2 = 0x1388; // UImage*
		constexpr auto Image_3 = 0x1390; // UImage*
		constexpr auto Image_4 = 0x1398; // UImage*
		constexpr auto Image_5 = 0x13a0; // UImage*
		constexpr auto Image_6 = 0x13a8; // UImage*
		constexpr auto Image_7 = 0x13b0; // UImage*
		constexpr auto Image_8 = 0x13b8; // UImage*
		constexpr auto Image_9 = 0x13c0; // UImage*
		constexpr auto Image_10 = 0x13c8; // UImage*
		constexpr auto Image_149 = 0x13d0; // UImage*
		constexpr auto Image_170 = 0x13d8; // UImage*
		constexpr auto Image_253 = 0x13e0; // UImage*
		constexpr auto Image_305 = 0x13e8; // UImage*
		constexpr auto Image_Full = 0x13f0; // UImage*
		constexpr auto IMG_ItemIcon = 0x13f8; // UImage*
		constexpr auto MaterialIcon = 0x1400; // UImage*
		constexpr auto MouseHover_2 = 0x1408; // USizeBox*
		constexpr auto MouseHover_ = 0x1410; // USizeBox*
		constexpr auto MousePress_2 = 0x1418; // USizeBox*
		constexpr auto MousePress_ = 0x1420; // USizeBox*
		constexpr auto Searching_ = 0x1428; // USizeBox*
		constexpr auto Stroke = 0x1430; // UImage*
		constexpr auto Stroke_2 = 0x1438; // UImage*
		constexpr auto Stroke_3 = 0x1440; // UImage*
		constexpr auto Stroke_4 = 0x1448; // UImage*
		constexpr auto PreHoveredWidget = 0x1450; // UWidget*
		constexpr auto PreDragType = 0x1458; // ItemWidgetDragType
		constexpr auto Selected = 0x1459; // bool
		constexpr auto NeedCount = 0x145c; // int32_t
		constexpr auto ItemKey = 0x1460; // FName
		constexpr auto SelectItem = 0x1468; // FSelecteSearchMaterialItemInfo
		constexpr auto BindSelectSearch = 0x1478; // bool
		constexpr auto EnableSearch = 0x1479; // bool
	}

	namespace n_UABP-Mannequin-PostProcess_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_BlendListByBool_21 = 0x528; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ModifyBone_21 = 0x5c8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_TwoBoneIK_11 = 0x6d0; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_ModifyBone_20 = 0x8b0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_TwoBoneIK_10 = 0x9c0; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_LocalToComponentSpace_20 = 0xba0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_19 = 0xbc0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_20 = 0xcc8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_SaveCachedPose_20 = 0xce8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_19 = 0xda0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_ModifyBone_18 = 0xe58; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_19 = 0xf60; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_BlendListByBool_20 = 0xf80; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose_18 = 0x1020; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_LocalToComponentSpace_19 = 0x10d8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_UseCachedPose_43 = 0x10f8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_42 = 0x1120; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_41 = 0x1148; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_19 = 0x1170; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_40 = 0x1210; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LocalToComponentSpace_18 = 0x1238; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_17 = 0x1258; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_18 = 0x1360; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ModifyBone_16 = 0x1380; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_15 = 0x1488; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_14 = 0x1590; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_SaveCachedPose_17 = 0x1698; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_39 = 0x1750; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LocalToComponentSpace_17 = 0x1778; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_BlendListByBool_18 = 0x1798; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_17 = 0x1838; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_38 = 0x18d8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ModifyBone_13 = 0x1900; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_BlendListByBool_16 = 0x1a08; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_17 = 0x1aa8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_16 = 0x1ac8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_UseCachedPose_37 = 0x1ae8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ModifyBone_12 = 0x1b10; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_16 = 0x1c18; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_15 = 0x1c38; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_15 = 0x1c58; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_UseCachedPose_36 = 0x1c78; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LocalToComponentSpace_14 = 0x1ca0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_AnimDynamics_13 = 0x1cc0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_12 = 0x2100; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_SaveCachedPose_16 = 0x2540; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_ComponentToLocalSpace_14 = 0x25f8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ModifyBone_11 = 0x2618; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_10 = 0x2720; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_9 = 0x2828; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_13 = 0x2930; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_SubInput = 0x2950; // FAnimNode_LinkedInputPose
		constexpr auto AnimGraphNode_Root = 0x29c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_UseCachedPose_35 = 0x29f8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_34 = 0x2a20; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_HandIKRetargeting_3 = 0x2a48; // FAnimNode_HandIKRetargeting
		constexpr auto AnimGraphNode_TwoBoneIK_9 = 0x2b70; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_LocalToComponentSpace_12 = 0x2d50; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_13 = 0x2d70; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_SaveCachedPose_15 = 0x2d90; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_15 = 0x2e48; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose_14 = 0x2ee8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_TwoBoneIK_8 = 0x2fa0; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_LocalToComponentSpace_11 = 0x3180; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_12 = 0x31a0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ModifyBone_8 = 0x31c0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_7 = 0x32c8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_10 = 0x33d0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_TwoBoneIK_7 = 0x33f0; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_ComponentToLocalSpace_11 = 0x35d0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_HandIKRetargeting_2 = 0x35f0; // FAnimNode_HandIKRetargeting
		constexpr auto AnimGraphNode_BlendListByBool_14 = 0x3710; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_33 = 0x37b0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_32 = 0x37d8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_13 = 0x3800; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_ModifyBone_6 = 0x38b8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_UseCachedPose_31 = 0x39c0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_30 = 0x39e8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_2 = 0x3a10; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x3ad0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SaveCachedPose_12 = 0x3b48; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_29 = 0x3c00; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_28 = 0x3c28; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend = 0x3c50; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer = 0x3d10; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_13 = 0x3d88; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose_11 = 0x3e28; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByEnum = 0x3ee0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_UseCachedPose_27 = 0x3f90; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_26 = 0x3fb8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_25 = 0x3fe0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_24 = 0x4008; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_AnimDynamics_11 = 0x4030; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_10 = 0x4470; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_9 = 0x48b0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_8 = 0x4cf0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_7 = 0x5130; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_6 = 0x5570; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_5 = 0x59b0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_ModifyBone_5 = 0x5df0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_HandIKRetargeting = 0x5ef8; // FAnimNode_HandIKRetargeting
		constexpr auto AnimGraphNode_TwoBoneIK_6 = 0x6020; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_LocalToComponentSpace_9 = 0x6200; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_10 = 0x6220; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_SaveCachedPose_10 = 0x6240; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_TwoBoneIK_5 = 0x6300; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_LocalToComponentSpace_8 = 0x64e0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_9 = 0x6500; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_SaveCachedPose_9 = 0x6520; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_23 = 0x65d8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_22 = 0x6600; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_12 = 0x6628; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_21 = 0x66c8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_11 = 0x66f0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_20 = 0x6790; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_19 = 0x67b8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LocalToComponentSpace_7 = 0x67e0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_8 = 0x6800; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_SaveCachedPose_8 = 0x6820; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_TwoBoneIK_4 = 0x68e0; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_TwoBoneIK_3 = 0x6ac0; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_TwoBoneIK_2 = 0x6ca0; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_TwoBoneIK = 0x6e80; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_ModifyBone_4 = 0x7060; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_3 = 0x7168; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_2 = 0x7270; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone = 0x7378; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_AnimDynamics_4 = 0x7480; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_3 = 0x78c0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_KawaiiPhysics_26 = 0x7d00; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_KawaiiPhysics_25 = 0x7f50; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_KawaiiPhysics_24 = 0x81a0; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_KawaiiPhysics_23 = 0x83f0; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_KawaiiPhysics_22 = 0x8640; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_KawaiiPhysics_21 = 0x8890; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_BoneDrivenController_20 = 0x8ae0; // FAnimNode_BoneDrivenController
		constexpr auto AnimGraphNode_BoneDrivenController_19 = 0x8bf8; // FAnimNode_BoneDrivenController
		constexpr auto AnimGraphNode_BoneDrivenController_18 = 0x8d10; // FAnimNode_BoneDrivenController
		constexpr auto AnimGraphNode_BoneDrivenController_17 = 0x8e28; // FAnimNode_BoneDrivenController
		constexpr auto AnimGraphNode_BoneDrivenController_16 = 0x8f40; // FAnimNode_BoneDrivenController
		constexpr auto AnimGraphNode_BoneDrivenController_15 = 0x9058; // FAnimNode_BoneDrivenController
		constexpr auto AnimGraphNode_BoneDrivenController_14 = 0x9170; // FAnimNode_BoneDrivenController
		constexpr auto AnimGraphNode_BoneDrivenController_13 = 0x9288; // FAnimNode_BoneDrivenController
		constexpr auto AnimGraphNode_KawaiiPhysics_20 = 0x93a0; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_KawaiiPhysics_19 = 0x95f0; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_KawaiiPhysics_18 = 0x9840; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_KawaiiPhysics_17 = 0x9a90; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_KawaiiPhysics_16 = 0x9ce0; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_BoneDrivenController_12 = 0x9f30; // FAnimNode_BoneDrivenController
		constexpr auto AnimGraphNode_BoneDrivenController_11 = 0xa048; // FAnimNode_BoneDrivenController
		constexpr auto AnimGraphNode_KawaiiPhysics_15 = 0xa160; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_BoneDrivenController_10 = 0xa3b0; // FAnimNode_BoneDrivenController
		constexpr auto AnimGraphNode_BoneDrivenController_9 = 0xa4c8; // FAnimNode_BoneDrivenController
		constexpr auto AnimGraphNode_BoneDrivenController_8 = 0xa5e0; // FAnimNode_BoneDrivenController
		constexpr auto AnimGraphNode_BoneDrivenController_7 = 0xa6f8; // FAnimNode_BoneDrivenController
		constexpr auto AnimGraphNode_BoneDrivenController_6 = 0xa810; // FAnimNode_BoneDrivenController
		constexpr auto AnimGraphNode_BoneDrivenController_5 = 0xa928; // FAnimNode_BoneDrivenController
		constexpr auto AnimGraphNode_BoneDrivenController_4 = 0xaa40; // FAnimNode_BoneDrivenController
		constexpr auto AnimGraphNode_BoneDrivenController_3 = 0xab58; // FAnimNode_BoneDrivenController
		constexpr auto AnimGraphNode_BoneDrivenController_2 = 0xac70; // FAnimNode_BoneDrivenController
		constexpr auto AnimGraphNode_BoneDrivenController = 0xad88; // FAnimNode_BoneDrivenController
		constexpr auto AnimGraphNode_KawaiiPhysics_14 = 0xaea0; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_KawaiiPhysics_13 = 0xb0f0; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_KawaiiPhysics_12 = 0xb340; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_KawaiiPhysics_11 = 0xb590; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_KawaiiPhysics_10 = 0xb7e0; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_KawaiiPhysics_9 = 0xba30; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_KawaiiPhysics_8 = 0xbc80; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_KawaiiPhysics_7 = 0xbed0; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_KawaiiPhysics_6 = 0xc120; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_KawaiiPhysics_5 = 0xc370; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_KawaiiPhysics_4 = 0xc5c0; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_KawaiiPhysics_3 = 0xc810; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_KawaiiPhysics_2 = 0xca60; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_KawaiiPhysics = 0xccb0; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_AnimDynamics_2 = 0xcf00; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics = 0xd340; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_BlendListByBool_10 = 0xd780; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_18 = 0xd820; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_9 = 0xd848; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_17 = 0xd8e8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_16 = 0xd910; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_8 = 0xd938; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_7 = 0xd9d8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_UseCachedPose_15 = 0xd9f8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_7 = 0xda20; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_14 = 0xdad8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LocalToComponentSpace_6 = 0xdb00; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_BlendListByBool_7 = 0xdb20; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_6 = 0xdbc0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_UseCachedPose_13 = 0xdbe0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_6 = 0xdc08; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_12 = 0xdcc0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LocalToComponentSpace_5 = 0xdce8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_BlendListByBool_6 = 0xdd08; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_5 = 0xdda8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_UseCachedPose_11 = 0xddc8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_5 = 0xddf0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_5 = 0xdea8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_10 = 0xdf48; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_9 = 0xdf70; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LocalToComponentSpace_4 = 0xdf98; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_BlendListByBool_4 = 0xdfb8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_4 = 0xe058; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_UseCachedPose_8 = 0xe078; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_4 = 0xe0a0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_7 = 0xe158; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_6 = 0xe180; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_3 = 0xe1a8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose_3 = 0xe248; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_LocalToComponentSpace_3 = 0xe300; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_3 = 0xe320; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0xe340; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_5 = 0xe3e0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_2 = 0xe408; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_4 = 0xe4c0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LocalToComponentSpace_2 = 0xe4e8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_2 = 0xe508; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_BlendListByBool = 0xe528; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose = 0xe5c8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_3 = 0xe680; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0xe6a8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0xe6d0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0xe6f0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_UseCachedPose = 0xe710; // FAnimNode_UseCachedPose
	}

	namespace n_UFloatingPawnMovement {
		constexpr auto MaxSpeed = 0x138; // float
		constexpr auto Acceleration = 0x13c; // float
		constexpr auto Deceleration = 0x140; // float
		constexpr auto TurningBoost = 0x144; // float
		constexpr auto bPositionCorrected = 0x148; // char : 1
	}

	namespace n_UKeyImageWidget_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Alt = 0x250; // UUW-KeyControl_C*
		constexpr auto Alt+ = 0x258; // UTextBlock*
		constexpr auto Ctrl = 0x260; // UUW-KeyControl_C*
		constexpr auto Ctrl+ = 0x268; // UTextBlock*
		constexpr auto HorizontalBox_169 = 0x270; // UHorizontalBox*
		constexpr auto Key = 0x278; // UUW-KeyControl_C*
		constexpr auto ScaleBox_1 = 0x280; // UScaleBox*
		constexpr auto Shift = 0x288; // UUW-KeyControl_C*
		constexpr auto Shift+ = 0x290; // UTextBlock*
		constexpr auto Horizontal Alignment = 0x298; // EHorizontalAlignment
		constexpr auto vertical Alignment = 0x299; // EVerticalAlignment
		constexpr auto UsingAlphaBg = 0x29a; // bool
		constexpr auto PreKeyType = 0x29b; // EKeySettingType
		constexpr auto PreKeyMappingData = 0x2a0; // FInputActionKeyMapping
		constexpr auto UsingKeyMappingData = 0x2c8; // bool
		constexpr auto DefaultScale = 0x2cc; // float
		constexpr auto OverrideFontSize = 0x2d0; // bool
		constexpr auto FontSize = 0x2d4; // int32_t
	}

	namespace n_USoundBase {
		constexpr auto SoundClassObject = 0x28; // USoundClass*
		constexpr auto bDebug = 0x30; // char : 1
		constexpr auto bOverrideConcurrency = 0x30; // char : 1
		constexpr auto bOutputToBusOnly = 0x30; // char : 1
		constexpr auto bHasDelayNode = 0x30; // char : 1
		constexpr auto bHasConcatenatorNode = 0x30; // char : 1
		constexpr auto bBypassVolumeScaleForPriority = 0x30; // char : 1
		constexpr auto VirtualizationMode = 0x31; // EVirtualizationMode
		constexpr auto ConcurrencySet = 0x88; // TSet<USoundConcurrency*>
		constexpr auto ConcurrencyOverrides = 0xd8; // FSoundConcurrencySettings
		constexpr auto Duration = 0xf8; // float
		constexpr auto MaxDistance = 0xfc; // float
		constexpr auto TotalSamples = 0x100; // float
		constexpr auto Priority = 0x104; // float
		constexpr auto AttenuationSettings = 0x108; // USoundAttenuation*
		constexpr auto Modulation = 0x110; // FSoundModulation
		constexpr auto SoundSubmixObject = 0x120; // USoundSubmixBase*
		constexpr auto SoundSubmixSends = 0x128; // TArray<FSoundSubmixSendInfo>
		constexpr auto SourceEffectChain = 0x138; // USoundEffectSourcePresetChain*
		constexpr auto BusSends = 0x140; // TArray<FSoundSourceBusSendInfo>
		constexpr auto PreEffectBusSends = 0x150; // TArray<FSoundSourceBusSendInfo>
	}

	namespace n_UCapsuleComponent {
		constexpr auto CapsuleHalfHeight = 0x4c8; // float
		constexpr auto CapsuleRadius = 0x4cc; // float
	}

	namespace n_UMovieSceneMarginSection {
		constexpr auto TopCurve = 0xe0; // FMovieSceneFloatChannel
		constexpr auto LeftCurve = 0x180; // FMovieSceneFloatChannel
		constexpr auto RightCurve = 0x220; // FMovieSceneFloatChannel
		constexpr auto BottomCurve = 0x2c0; // FMovieSceneFloatChannel
	}

	namespace n_UGizmoAxisIntervalParameterSource {
		constexpr auto FloatParameterSource = 0x48; // TScriptInterface<IGizmoFloatParameterSource>
		constexpr auto MinParameter = 0x58; // float
		constexpr auto MaxParameter = 0x5c; // float
	}

	namespace n_UChaosClothSharedSimConfig {
		constexpr auto IterationCount = 0x28; // int32_t
		constexpr auto SubdivisionCount = 0x2c; // int32_t
		constexpr auto SelfCollisionThickness = 0x30; // float
		constexpr auto CollisionThickness = 0x34; // float
		constexpr auto bUseDampingOverride = 0x38; // bool
		constexpr auto Damping = 0x3c; // float
		constexpr auto bUseGravityOverride = 0x40; // bool
		constexpr auto GravityScale = 0x44; // float
		constexpr auto Gravity = 0x48; // FVector
		constexpr auto bUseLocalSpaceSimulation = 0x54; // bool
		constexpr auto bUseXPBDConstraints = 0x55; // bool
	}

	namespace n_UBoxComponent {
		constexpr auto BoxExtent = 0x4c8; // FVector
		constexpr auto LineThickness = 0x4d4; // float
	}

	namespace n_UDynamicEntryBox {
		constexpr auto EntryWidgetClass = 0x1c8; // UUserWidget*
	}

	namespace n_UMovieSceneMaterialTrack {
		constexpr auto Sections = 0x58; // TArray<UMovieSceneSection*>
	}

	namespace n_UAITask_MoveTo {
		constexpr auto OnRequestFailed = 0x70; // FMulticastInlineDelegate
		constexpr auto OnMoveFinished = 0x80; // FMulticastInlineDelegate
		constexpr auto MoveRequest = 0x90; // FAIMoveRequest
	}

	namespace n_UMyPluginObject {
		constexpr auto MyStruct = 0x28; // FMyPluginStruct
	}

	namespace n_UDatasmithLandscapeTemplate {
		constexpr auto LandscapeMaterial = 0x30; // UMaterialInterface*
		constexpr auto StaticLightingLOD = 0x38; // int32_t
	}

	namespace n_UBravoHotelPoolingActorComponent {
		constexpr auto DefaultPoolingActor = 0xb0; // TMap<AActor*, int32_t>
		constexpr auto ActorPoolInfos = 0x100; // TMap<UObject*, FActorPoolInfo>
	}

	namespace n_USpinBoxWidgetStyle {
		constexpr auto SpinBoxStyle = 0x30; // FSpinBoxStyle
	}

	namespace n_ATransformGizmoActor {
		constexpr auto TranslateX = 0x318; // UPrimitiveComponent*
		constexpr auto TranslateY = 0x320; // UPrimitiveComponent*
		constexpr auto TranslateZ = 0x328; // UPrimitiveComponent*
		constexpr auto TranslateYZ = 0x330; // UPrimitiveComponent*
		constexpr auto TranslateXZ = 0x338; // UPrimitiveComponent*
		constexpr auto TranslateXY = 0x340; // UPrimitiveComponent*
		constexpr auto RotateX = 0x348; // UPrimitiveComponent*
		constexpr auto RotateY = 0x350; // UPrimitiveComponent*
		constexpr auto RotateZ = 0x358; // UPrimitiveComponent*
		constexpr auto UniformScale = 0x360; // UPrimitiveComponent*
		constexpr auto AxisScaleX = 0x368; // UPrimitiveComponent*
		constexpr auto AxisScaleY = 0x370; // UPrimitiveComponent*
		constexpr auto AxisScaleZ = 0x378; // UPrimitiveComponent*
		constexpr auto PlaneScaleYZ = 0x380; // UPrimitiveComponent*
		constexpr auto PlaneScaleXZ = 0x388; // UPrimitiveComponent*
		constexpr auto PlaneScaleXY = 0x390; // UPrimitiveComponent*
	}

	namespace n_UUW-RoutePingWidget_Point_C {
		constexpr auto Anim_OnShow = 0x248; // UWidgetAnimation*
		constexpr auto BackColor = 0x250; // UImage*
		constexpr auto T_Num = 0x258; // UTextBlock*
		constexpr auto OnMarkerClicked = 0x260; // FMulticastInlineDelegate
	}

	namespace n_UMKNetConnectionEx {
		constexpr auto SelfNetConnection = 0xb0; // UNetConnection*
	}

	namespace n_UBP-GameSettingManager_C {
		constexpr auto UberGraphFrame = 0x38; // FPointerToUberGraphFrame
		constexpr auto Game Settings Wrapper = 0x40; // UBP_GameSettingsWrapper_C*
	}

	namespace n_UUW-MatchEnd_Animation_02_DamagePlayerInfo_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto HorizontalBox_Equip = 0x250; // UHorizontalBox*
		constexpr auto Overlay_Health = 0x258; // UOverlay*
		constexpr auto ProgressBar_Health = 0x260; // UProgressBar*
		constexpr auto T_Class = 0x268; // UTextBlock*
		constexpr auto T_ExpertWeapon = 0x270; // UTextBlock*
		constexpr auto T_Health = 0x278; // UTextBlock*
		constexpr auto T_KilledBy = 0x280; // UTextBlock*
		constexpr auto T_Level = 0x288; // UTextBlock*
		constexpr auto T_MaxHealth = 0x290; // UTextBlock*
		constexpr auto T_Name = 0x298; // UTextBlock*
		constexpr auto TextBlock_21 = 0x2a0; // UTextBlock*
		constexpr auto UW-Inventory_EquippedSlot_Armor = 0x2a8; // UUW-Inventory_EquippedSlot_C*
		constexpr auto UW-Inventory_EquippedSlot_Bag = 0x2b0; // UUW-Inventory_EquippedSlot_C*
		constexpr auto UW-Inventory_EquippedSlot_Helmet = 0x2b8; // UUW-Inventory_EquippedSlot_C*
		constexpr auto TargetHealth = 0x2c0; // float
		constexpr auto CurrentHealth = 0x2c4; // float
		constexpr auto MaxHealth = 0x2c8; // float
	}

	namespace n_UParticleLODLevel {
		constexpr auto Level = 0x28; // int32_t
		constexpr auto bEnabled = 0x2c; // char : 1
		constexpr auto RequiredModule = 0x30; // UParticleModuleRequired*
		constexpr auto Modules = 0x38; // TArray<UParticleModule*>
		constexpr auto TypeDataModule = 0x48; // UParticleModuleTypeDataBase*
		constexpr auto SpawnModule = 0x50; // UParticleModuleSpawn*
		constexpr auto EventGenerator = 0x58; // UParticleModuleEventGenerator*
		constexpr auto SpawningModules = 0x60; // TArray<UParticleModuleSpawnBase*>
		constexpr auto SpawnModules = 0x70; // TArray<UParticleModule*>
		constexpr auto UpdateModules = 0x80; // TArray<UParticleModule*>
		constexpr auto OrbitModules = 0x90; // TArray<UParticleModuleOrbit*>
		constexpr auto EventReceiverModules = 0xa0; // TArray<UParticleModuleEventReceiverBase*>
		constexpr auto ConvertedModules = 0xb0; // char : 1
		constexpr auto PeakActiveParticles = 0xb4; // int32_t
	}

	namespace n_UMovieSceneCinematicShotSection {
		constexpr auto ShotDisplayName = 0x158; // FString
		constexpr auto DisplayName = 0x168; // FText
	}

	namespace n_UUW-MatchEnd_Animation_02_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Anim_DamageList = 0x250; // UWidgetAnimation*
		constexpr auto Event2 = 0x258; // UWidgetAnimation*
		constexpr auto Event = 0x260; // UWidgetAnimation*
		constexpr auto Anim_Second = 0x268; // UWidgetAnimation*
		constexpr auto Hide = 0x270; // UWidgetAnimation*
		constexpr auto Infos_ani = 0x278; // UWidgetAnimation*
		constexpr auto Anim_Defeat = 0x280; // UWidgetAnimation*
		constexpr auto Anim_Victory = 0x288; // UWidgetAnimation*
		constexpr auto Arrow = 0x290; // UImage*
		constexpr auto Arrow_2 = 0x298; // UImage*
		constexpr auto ArrowLine = 0x2a0; // UImage*
		constexpr auto ArrowLine_2 = 0x2a8; // UImage*
		constexpr auto BackgroundBlur = 0x2b0; // UBackgroundBlur*
		constexpr auto BackgroundBlur_447 = 0x2b8; // UBackgroundBlur*
		constexpr auto BlackBG01 = 0x2c0; // UImage*
		constexpr auto BlackBG02 = 0x2c8; // UImage*
		constexpr auto BottomLine = 0x2d0; // UImage*
		constexpr auto BottomLine_2 = 0x2d8; // UImage*
		constexpr auto Button_2 = 0x2e0; // UButton*
		constexpr auto Button_104 = 0x2e8; // UButton*
		constexpr auto Button_MatchEnd = 0x2f0; // UButton*
		constexpr auto Button_Skip = 0x2f8; // UButton*
		constexpr auto CanvasPanel_49 = 0x300; // UCanvasPanel*
		constexpr auto CanvasPanel_488 = 0x308; // UCanvasPanel*
		constexpr auto CanvasPanel_DropItem = 0x310; // UCanvasPanel*
		constexpr auto CanvasPanel_DropItem2 = 0x318; // UCanvasPanel*
		constexpr auto CanvasPanel_Enemy = 0x320; // UCanvasPanel*
		constexpr auto CanvasPanel_KillerInfo_Renew = 0x328; // UCanvasPanel*
		constexpr auto CanvasPanel_Skip = 0x330; // UCanvasPanel*
		constexpr auto Defeat = 0x338; // UScaleBox*
		constexpr auto Glow1 = 0x340; // UImage*
		constexpr auto Glow1_2 = 0x348; // UImage*
		constexpr auto Glow2 = 0x350; // UImage*
		constexpr auto Glow3 = 0x358; // UImage*
		constexpr auto Glow3_2 = 0x360; // UImage*
		constexpr auto GlowLine = 0x368; // UImage*
		constexpr auto HeadShot = 0x370; // UTextBlock*
		constexpr auto HorizontalBox_KillerWeaponInfo = 0x378; // UHorizontalBox*
		constexpr auto HorizontalBox_Rarity = 0x380; // UHorizontalBox*
		constexpr auto Image_3 = 0x388; // UImage*
		constexpr auto Image_4 = 0x390; // UImage*
		constexpr auto Image_5 = 0x398; // UImage*
		constexpr auto Image_6 = 0x3a0; // UImage*
		constexpr auto Image_7 = 0x3a8; // UImage*
		constexpr auto Image_8 = 0x3b0; // UImage*
		constexpr auto Image_10 = 0x3b8; // UImage*
		constexpr auto Image_11 = 0x3c0; // UImage*
		constexpr auto Image_12 = 0x3c8; // UImage*
		constexpr auto Image_13 = 0x3d0; // UImage*
		constexpr auto Image_14 = 0x3d8; // UImage*
		constexpr auto Image_15 = 0x3e0; // UImage*
		constexpr auto Image_16 = 0x3e8; // UImage*
		constexpr auto Image_17 = 0x3f0; // UImage*
		constexpr auto Image_18 = 0x3f8; // UImage*
		constexpr auto Image_19 = 0x400; // UImage*
		constexpr auto Image_20 = 0x408; // UImage*
		constexpr auto Image_21 = 0x410; // UImage*
		constexpr auto Image_22 = 0x418; // UImage*
		constexpr auto Image_23 = 0x420; // UImage*
		constexpr auto Image_24 = 0x428; // UImage*
		constexpr auto Image_25 = 0x430; // UImage*
		constexpr auto Image_26 = 0x438; // UImage*
		constexpr auto Image_252 = 0x440; // UImage*
		constexpr auto Image_505 = 0x448; // UImage*
		constexpr auto Image_605 = 0x450; // UImage*
		constexpr auto Image_816 = 0x458; // UImage*
		constexpr auto Image_1091 = 0x460; // UImage*
		constexpr auto Image_1443 = 0x468; // UImage*
		constexpr auto Image_1558 = 0x470; // UImage*
		constexpr auto Image_KillerClassIcon = 0x478; // UImage*
		constexpr auto Image_MyClassIcon = 0x480; // UImage*
		constexpr auto L_Wing01 = 0x488; // UImage*
		constexpr auto L_Wing01_2 = 0x490; // UImage*
		constexpr auto L_Wing01_3 = 0x498; // UImage*
		constexpr auto L_Wing01_4 = 0x4a0; // UImage*
		constexpr auto L_Wing02 = 0x4a8; // UImage*
		constexpr auto L_Wing02_2 = 0x4b0; // UImage*
		constexpr auto L_Wing02_3 = 0x4b8; // UImage*
		constexpr auto L_Wing02_4 = 0x4c0; // UImage*
		constexpr auto L_Wing03 = 0x4c8; // UImage*
		constexpr auto L_Wing03_2 = 0x4d0; // UImage*
		constexpr auto L_Wing03_3 = 0x4d8; // UImage*
		constexpr auto L_Wing03_4 = 0x4e0; // UImage*
		constexpr auto L_WingLine = 0x4e8; // UImage*
		constexpr auto L_WingLine_2 = 0x4f0; // UImage*
		constexpr auto Logo = 0x4f8; // UImage*
		constexpr auto Logo_2 = 0x500; // UImage*
		constexpr auto Overlay_1 = 0x508; // UOverlay*
		constexpr auto Overlay_WeaponLevel = 0x510; // UOverlay*
		constexpr auto PosX = 0x518; // UEditableText*
		constexpr auto PosY = 0x520; // UEditableText*
		constexpr auto PosZ = 0x528; // UEditableText*
		constexpr auto R_Wing01 = 0x530; // UImage*
		constexpr auto R_Wing01_2 = 0x538; // UImage*
		constexpr auto R_Wing01_3 = 0x540; // UImage*
		constexpr auto R_Wing01_4 = 0x548; // UImage*
		constexpr auto R_Wing02 = 0x550; // UImage*
		constexpr auto R_Wing02_2 = 0x558; // UImage*
		constexpr auto R_Wing02_3 = 0x560; // UImage*
		constexpr auto R_Wing02_4 = 0x568; // UImage*
		constexpr auto R_Wing03 = 0x570; // UImage*
		constexpr auto R_Wing03_2 = 0x578; // UImage*
		constexpr auto R_Wing03_3 = 0x580; // UImage*
		constexpr auto R_Wing03_4 = 0x588; // UImage*
		constexpr auto R_WingLine = 0x590; // UImage*
		constexpr auto R_WingLine_2 = 0x598; // UImage*
		constexpr auto Ribbon = 0x5a0; // UImage*
		constexpr auto Ribbon_2 = 0x5a8; // UImage*
		constexpr auto Ring = 0x5b0; // UImage*
		constexpr auto ScrollBox_DropItem = 0x5b8; // UScrollBox*
		constexpr auto ScrollBox_DropItem2 = 0x5c0; // UScrollBox*
		constexpr auto T_DamageType = 0x5c8; // UTextBlock*
		constexpr auto T_DropCount = 0x5d0; // UTextBlock*
		constexpr auto T_DropCount2 = 0x5d8; // UTextBlock*
		constexpr auto T_WeaponLevel = 0x5e0; // UTextBlock*
		constexpr auto TextBlock_3 = 0x5e8; // UTextBlock*
		constexpr auto TextBlock_4 = 0x5f0; // UTextBlock*
		constexpr auto TextBlock_5 = 0x5f8; // UTextBlock*
		constexpr auto TextBlock_6 = 0x600; // UTextBlock*
		constexpr auto TextBlock_8 = 0x608; // UTextBlock*
		constexpr auto TextBlock_9 = 0x610; // UTextBlock*
		constexpr auto TextBlock_10 = 0x618; // UTextBlock*
		constexpr auto TextBlock_900 = 0x620; // UTextBlock*
		constexpr auto TopLine = 0x628; // UImage*
		constexpr auto TopLine_2 = 0x630; // UImage*
		constexpr auto UW-MatchEnd_Animation_02_DamagePlayerInfo = 0x638; // UUW-MatchEnd_Animation_02_DamagePlayerInfo_C*
		constexpr auto UW-MatchEnd_Animation_02_DamagePlayerInfo_2 = 0x640; // UUW-MatchEnd_Animation_02_DamagePlayerInfo_C*
		constexpr auto UW-Matchend_DamageListBox = 0x648; // UUW-Matchend_DamageListBox_C*
		constexpr auto UW-MatchEnd_RewardSlot = 0x650; // UUW-MatchEnd_RewardSlot_02_C*
		constexpr auto UW-MatchEnd_RewardSlot_2 = 0x658; // UUW-MatchEnd_RewardSlot_02_C*
		constexpr auto UW-MatchEnd_RewardSlot_3 = 0x660; // UUW-MatchEnd_RewardSlot_02_C*
		constexpr auto UW-MatchEnd_RewardSlot_02 = 0x668; // UUW-MatchEnd_RewardSlot_02_C*
		constexpr auto WeaponName = 0x670; // UTextBlock*
		constexpr auto WidgetSwitcher_DamageCauser = 0x678; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_KillerInfo = 0x680; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_SkipButton = 0x688; // UWidgetSwitcher*
		constexpr auto WinText1 = 0x690; // UTextBlock*
		constexpr auto WinText1_2 = 0x698; // UTextBlock*
		constexpr auto WinText1_3 = 0x6a0; // UTextBlock*
		constexpr auto WinText1_4 = 0x6a8; // UTextBlock*
		constexpr auto WinText2 = 0x6b0; // UTextBlock*
		constexpr auto WinText3 = 0x6b8; // UTextBlock*
		constexpr auto MatchEnd = 0x6c0; // bool
		constexpr auto AnimationData = 0x6c1; // FMatchEndAnimation
		constexpr auto MatchEndWidgetRef = 0x6c8; // UUW-MatchEndWidget_C*
		constexpr auto SimpleResult = 0x6d0; // FMatchEndSimpleResult
		constexpr auto SimpleTimer = 0x7e0; // TArray<FTimerHandle>
		constexpr auto EventDispatcher_HideComplete = 0x7f0; // FMulticastInlineDelegate
		constexpr auto bSuccessWinEventCall = 0x800; // bool
		constexpr auto PlayingAudio = 0x808; // TArray<FAudioPlayingHandle>
		constexpr auto bTestMode = 0x818; // bool
		constexpr auto bTestIsWin = 0x819; // bool
		constexpr auto MatchFinalResultShowTime = 0x81c; // float
		constexpr auto EventDispatcher_MoveToMatchEnd = 0x820; // FMulticastInlineDelegate
	}

	namespace n_UBHBWindowBreaching {
		constexpr auto TimerHandle_EndBuff = 0x2b8; // FTimerHandle
	}

	namespace n_ULightComponentBase {
		constexpr auto LightGuid = 0x230; // FGuid
		constexpr auto Brightness = 0x240; // float
		constexpr auto Intensity = 0x244; // float
		constexpr auto LightColor = 0x248; // FColor
		constexpr auto bAffectsWorld = 0x24c; // char : 1
		constexpr auto CastShadows = 0x24c; // char : 1
		constexpr auto CastStaticShadows = 0x24c; // char : 1
		constexpr auto CastDynamicShadows = 0x24c; // char : 1
		constexpr auto bAffectTranslucentLighting = 0x24c; // char : 1
		constexpr auto bTransmission = 0x24c; // char : 1
		constexpr auto bCastVolumetricShadow = 0x24c; // char : 1
		constexpr auto bCastDeepShadow = 0x24c; // char : 1
		constexpr auto bCastRaytracedShadow = 0x24d; // char : 1
		constexpr auto bAffectReflection = 0x24d; // char : 1
		constexpr auto bAffectGlobalIllumination = 0x24d; // char : 1
		constexpr auto IndirectLightingIntensity = 0x250; // float
		constexpr auto VolumetricScatteringIntensity = 0x254; // float
		constexpr auto VolumetricAttenuationScale = 0x258; // float
		constexpr auto VolumetricSourceRadiusScale = 0x25c; // float
		constexpr auto SamplesPerPixel = 0x260; // int32_t
	}

	namespace n_UScrollBar {
		constexpr auto WidgetStyle = 0x108; // FScrollBarStyle
		constexpr auto Style = 0x5d8; // USlateWidgetStyleAsset*
		constexpr auto bAlwaysShowScrollbar = 0x5e0; // bool
		constexpr auto bAlwaysShowScrollbarTrack = 0x5e1; // bool
		constexpr auto Orientation = 0x5e2; // EOrientation
		constexpr auto Thickness = 0x5e4; // FVector2D
		constexpr auto Padding = 0x5ec; // FMargin
	}

	namespace n_UNetDormantComponent {
		constexpr auto DelayTimeToSleep = 0xb0; // float
	}

	namespace n_UAnimationSharingSetup {
		constexpr auto SkeletonSetups = 0x28; // TArray<FPerSkeletonAnimationSharingSetup>
		constexpr auto ScalabilitySettings = 0x38; // FAnimationSharingScalability
	}

	namespace n_UEnvQueryTest_GameplayTags {
		constexpr auto TagQueryToMatch = 0x1f8; // FGameplayTagQuery
		constexpr auto bUpdatedToUseQuery = 0x240; // bool
		constexpr auto TagsToMatch = 0x241; // EGameplayContainerMatchType
		constexpr auto GameplayTags = 0x248; // FGameplayTagContainer
	}

	namespace n_UBravoHotelRecoilComponent {
		constexpr auto OwningWeaponRef = 0xb0; // ABravoHotelRangedWeapon*
		constexpr auto CharacterRef = 0xb8; // ABravoHotelCharacter*
		constexpr auto GameStateRef = 0xc0; // ABravoHotelGameState*
		constexpr auto DeltaTime = 0xc8; // float
		constexpr auto RecoilLocation = 0xcc; // FVector
		constexpr auto RecoilRotation = 0xd8; // FRotator
		constexpr auto BackRecoilLocation = 0xe4; // float
		constexpr auto VerticalRecoilLocation = 0xe8; // float
		constexpr auto HorizonRecoilLocation = 0xec; // float
		constexpr auto VerticalRecoilRotation = 0xf0; // float
		constexpr auto HorizonRecoilRotation = 0xf4; // float
		constexpr auto bIsOnHold = 0xf8; // bool
		constexpr auto bNeedToInterp_BackRecoilLocation = 0xf9; // bool
		constexpr auto Timeline_BackRecoilLocation = 0x100; // FTimeline
		constexpr auto bNeedToInterp_VerticalRecoilLocation = 0x198; // bool
		constexpr auto bNeedToInterp_VerticalRecoilRotation = 0x199; // bool
		constexpr auto Timeline_VerticalRecoilLocation = 0x1a0; // FTimeline
		constexpr auto Timeline_VerticalRecoilRotation = 0x238; // FTimeline
		constexpr auto bIsLeftSideRecoil = 0x2d0; // bool
		constexpr auto bNeedToInterp_HorizonRecoilLocation = 0x2d1; // bool
		constexpr auto bNeedToInterp_HorizonRecoilRotation = 0x2d2; // bool
		constexpr auto Timeline_HorizonRecoilLocation = 0x2d8; // FTimeline
		constexpr auto Timeline_HorizonRecoilRotation = 0x370; // FTimeline
	}

	namespace n_UBTService_BlueprintBase {
		constexpr auto AIOwner = 0x70; // AAIController*
		constexpr auto ActorOwner = 0x78; // AActor*
		constexpr auto bShowPropertyDetails = 0x90; // char : 1
		constexpr auto bShowEventDetails = 0x90; // char : 1
	}

	namespace n_ABravoHotelBaseHUD {
		constexpr auto MainWidgetClass = 0x408; // UUserWidget*
		constexpr auto MainWidget = 0x410; // UUserWidget*
	}

	namespace n_USlateBrushAsset {
		constexpr auto Brush = 0x28; // FSlateBrush
	}

	namespace n_USpacer {
		constexpr auto Size = 0x108; // FVector2D
	}

	namespace n_UAREnvironmentCaptureProbeTexture {
		constexpr auto TextureType = 0x110; // EARTextureType
		constexpr auto Timestamp = 0x114; // float
		constexpr auto ExternalTextureGuid = 0x118; // FGuid
		constexpr auto Size = 0x128; // FVector2D
	}

	namespace n_AProceduralFoliageVolume {
		constexpr auto ProceduralComponent = 0x350; // UProceduralFoliageComponent*
	}

	namespace n_UFSM_SetState_ConditionalAsyncWithCallbacks {
		constexpr auto Target = 0x30; // UStateMachineComponent*
		constexpr auto Conditional = 0x38; // FSM_Transition
		constexpr auto InBegin = 0x3c; // FDelegate
		constexpr auto InExit = 0x4c; // FDelegate
		constexpr auto StateName = 0x5c; // FName
		constexpr auto Timer = 0x64; // float
		constexpr auto Repeat = 0x68; // bool
		constexpr auto TimerHandle = 0x70; // FTimerHandle
		constexpr auto OnSuccess = 0x78; // FMulticastInlineDelegate
		constexpr auto OnAborted = 0x88; // FMulticastInlineDelegate
	}

	namespace n_AOnlineBeaconHostObject {
		constexpr auto BeaconTypeName = 0x318; // FString
		constexpr auto ClientBeaconActorClass = 0x328; // AOnlineBeaconClient*
		constexpr auto ClientActors = 0x330; // TArray<AOnlineBeaconClient*>
	}

	namespace n_UEditableGeometryCollectionAdapter {
		constexpr auto GeometryCollection = 0x28; // UGeometryCollection*
		constexpr auto OriginalGeometryCollection = 0x30; // UGeometryCollection*
		constexpr auto GeometryCollectionLODIndex = 0x38; // int32_t
	}

	namespace n_UUW-ImageTextCell_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto RichTextBlock_52 = 0x250; // URichTextBlock*
		constexpr auto DefaultTextStyle = 0x258; // FTextBlockStyle
		constexpr auto TextString = 0x4c0; // FText
	}

	namespace n_UBravoHotelAudioPortalComponent {
		constexpr auto bEnable = 0x4e8; // bool
		constexpr auto InitialState = 0x4e9; // AkAcousticPortalState
	}

	namespace n_UGameNetworkManagerSettings {
		constexpr auto MinDynamicBandwidth = 0x28; // int32_t
		constexpr auto MaxDynamicBandwidth = 0x2c; // int32_t
		constexpr auto TotalNetBandwidth = 0x30; // int32_t
		constexpr auto BadPingThreshold = 0x34; // int32_t
		constexpr auto bIsStandbyCheckingEnabled = 0x38; // char : 1
		constexpr auto StandbyRxCheatTime = 0x3c; // float
		constexpr auto StandbyTxCheatTime = 0x40; // float
		constexpr auto PercentMissingForRxStandby = 0x44; // float
		constexpr auto PercentMissingForTxStandby = 0x48; // float
		constexpr auto PercentForBadPing = 0x4c; // float
		constexpr auto JoinInProgressStandbyWaitTime = 0x50; // float
	}

	namespace n_UForceFeedbackEffect {
		constexpr auto ChannelDetails = 0x28; // TArray<FForceFeedbackChannelDetails>
		constexpr auto Duration = 0x38; // float
	}

	namespace n_UPhysicalAnimationComponent {
		constexpr auto StrengthMultiplyer = 0xb0; // float
		constexpr auto SkeletalMeshComponent = 0xb8; // USkeletalMeshComponent*
	}

	namespace n_UAsyncActionHandleSaveGame {
		constexpr auto Completed = 0x30; // FMulticastInlineDelegate
		constexpr auto SaveGameObject = 0x60; // USaveGame*
	}

	namespace n_UPlaneReflectionCaptureComponent {
		constexpr auto InfluenceRadiusScale = 0x2b8; // float
		constexpr auto PreviewInfluenceRadius = 0x2c0; // UDrawSphereComponent*
		constexpr auto PreviewCaptureBox = 0x2c8; // UBoxComponent*
	}

	namespace n_UBravoHotelDetectItemSpawnBoxComponent {
		constexpr auto SpawnItemList = 0x4d8; // TArray<FWorldSpawnItemInfo>
		constexpr auto CheckItemSpawnDistance = 0x4fc; // float
		constexpr auto CheckUnImportanttemSpawnDistance = 0x500; // float
	}

	namespace n_UBravoHotelShellCasingArrowComponent {
		constexpr auto ShellCasingClass = 0x4c0; // ABravoHotelShellCasing*
		constexpr auto SpawnPowerMin = 0x4c8; // float
		constexpr auto SpawnPowerMax = 0x4cc; // float
		constexpr auto EjectAngleMin = 0x4d0; // float
		constexpr auto EjectAngleMax = 0x4d4; // float
		constexpr auto SpinAngleMin = 0x4d8; // float
		constexpr auto SpinAngleMax = 0x4dc; // float
		constexpr auto bSpawnLastShotOnly = 0x4e0; // bool
	}

	namespace n_USoundSubmixWithParentBase {
		constexpr auto ParentSubmix = 0x38; // USoundSubmixBase*
	}

	namespace n_UMaterialExpressionDecalMipmapLevel {
		constexpr auto TextureSize = 0x40; // FExpressionInput
		constexpr auto ConstWidth = 0x54; // float
		constexpr auto ConstHeight = 0x58; // float
	}

	namespace n_UCoherentRenderingSettings {
		constexpr auto RenderingLogSeverity = 0x28; // ECoherentRenderingSettingsSeverity
		constexpr auto ShowWarningsOnScreen = 0x29; // bool
		constexpr auto DeveloperOptions = 0x30; // FString
	}

	namespace n_UCheckBox {
		constexpr auto CheckedState = 0x120; // ECheckBoxState
		constexpr auto CheckedStateDelegate = 0x124; // FDelegate
		constexpr auto WidgetStyle = 0x138; // FCheckBoxStyle
		constexpr auto Style = 0x6b8; // USlateWidgetStyleAsset*
		constexpr auto UncheckedImage = 0x6c0; // USlateBrushAsset*
		constexpr auto UncheckedHoveredImage = 0x6c8; // USlateBrushAsset*
		constexpr auto UncheckedPressedImage = 0x6d0; // USlateBrushAsset*
		constexpr auto CheckedImage = 0x6d8; // USlateBrushAsset*
		constexpr auto CheckedHoveredImage = 0x6e0; // USlateBrushAsset*
		constexpr auto CheckedPressedImage = 0x6e8; // USlateBrushAsset*
		constexpr auto UndeterminedImage = 0x6f0; // USlateBrushAsset*
		constexpr auto UndeterminedHoveredImage = 0x6f8; // USlateBrushAsset*
		constexpr auto UndeterminedPressedImage = 0x700; // USlateBrushAsset*
		constexpr auto HorizontalAlignment = 0x708; // EHorizontalAlignment
		constexpr auto Padding = 0x70c; // FMargin
		constexpr auto BorderBackgroundColor = 0x720; // FSlateColor
		constexpr auto IsFocusable = 0x748; // bool
		constexpr auto OnCheckStateChanged = 0x750; // FMulticastInlineDelegate
	}

	namespace n_USlateSettings {
		constexpr auto bExplicitCanvasChildZOrder = 0x28; // bool
	}

	namespace n_UMorphTarget {
		constexpr auto BaseSkelMesh = 0x28; // USkeletalMesh*
	}

	namespace n_UAkSettings {
		constexpr auto MaxSimultaneousReverbVolumes = 0x28; // char
		constexpr auto WwiseProjectPath = 0x30; // FFilePath
		constexpr auto WwiseSoundDataFolder = 0x40; // FDirectoryPath
		constexpr auto bAutoConnectToWAAPI = 0x50; // bool
		constexpr auto DefaultOcclusionCollisionChannel = 0x51; // ECollisionChannel
		constexpr auto AkGeometryMap = 0x58; // TMap<TSoftObjectPtr<UPhysicalMaterial>, FAkGeometrySurfacePropertiesToMap>
		constexpr auto SplitSwitchContainerMedia = 0xa8; // bool
		constexpr auto SplitMediaPerFolder = 0xa9; // bool
		constexpr auto UseEventBasedPackaging = 0xaa; // bool
		constexpr auto EnableAutomaticAssetSynchronization = 0xab; // bool
		constexpr auto ComponentClass = 0xb0; // TSoftClassPtr<UObject>
		constexpr auto CommandletCommitMessage = 0xd8; // FString
		constexpr auto UnrealCultureToWwiseCulture = 0xe8; // TMap<FString, FString>
		constexpr auto AskedToUseNewAssetManagement = 0x138; // bool
		constexpr auto bEnableMultiCoreRendering = 0x139; // bool
		constexpr auto MigratedEnableMultiCoreRendering = 0x13a; // bool
		constexpr auto FixupRedirectorsDuringMigration = 0x13b; // bool
		constexpr auto WwiseWindowsInstallationPath = 0x140; // FDirectoryPath
		constexpr auto WwiseMacInstallationPath = 0x150; // FFilePath
	}

	namespace n_UNiagaraDataInterfaceVectorCurve {
		constexpr auto XCurve = 0x58; // FRichCurve
		constexpr auto YCurve = 0xd8; // FRichCurve
		constexpr auto ZCurve = 0x158; // FRichCurve
	}

	namespace n_UBravoHotelTeamPositionWidget {
		constexpr auto PlayerState = 0x248; // ABravoHotelPlayerState*
		constexpr auto Canvas_Main = 0x250; // UCanvasPanel*
		constexpr auto Canvas_Rot = 0x258; // UCanvasPanel*
		constexpr auto bIsLocalPlayer = 0x288; // bool
		constexpr auto bIsInViewport = 0x289; // bool
		constexpr auto IsDisconnected = 0x28a; // bool
		constexpr auto PlayerBehavior = 0x28b; // EPlayerBehavior
		constexpr auto LastIconIndex = 0x28c; // int32_t
	}

	namespace n_UBreakpoint {
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto Node = 0x30; // UEdGraphNode*
		constexpr auto bStepOnce = 0x38; // char : 1
		constexpr auto bStepOnce_WasPreviouslyDisabled = 0x38; // char : 1
		constexpr auto bStepOnce_RemoveAfterHit = 0x38; // char : 1
	}

	namespace n_UCameraShake {
		constexpr auto bSingleInstance = 0x28; // char : 1
		constexpr auto OscillationDuration = 0x2c; // float
		constexpr auto OscillationBlendInTime = 0x30; // float
		constexpr auto OscillationBlendOutTime = 0x34; // float
		constexpr auto RotOscillation = 0x38; // FROscillator
		constexpr auto LocOscillation = 0x5c; // FVOscillator
		constexpr auto FOVOscillation = 0x80; // FFOscillator
		constexpr auto AnimPlayRate = 0x8c; // float
		constexpr auto AnimScale = 0x90; // float
		constexpr auto AnimBlendInTime = 0x94; // float
		constexpr auto AnimBlendOutTime = 0x98; // float
		constexpr auto RandomAnimSegmentDuration = 0x9c; // float
		constexpr auto Anim = 0xa0; // UCameraAnim*
		constexpr auto bRandomAnimSegment = 0xa8; // char : 1
		constexpr auto CameraOwner = 0xc0; // APlayerCameraManager*
		constexpr auto ShakeScale = 0x148; // float
		constexpr auto OscillatorTimeRemaining = 0x14c; // float
		constexpr auto AnimInst = 0x150; // UCameraAnimInst*
	}

	namespace n_ADebugCameraController {
		constexpr auto bShowSelectedInfo = 0x718; // char : 1
		constexpr auto bIsFrozenRendering = 0x718; // char : 1
		constexpr auto bOverrideInitialMaxSpeed = 0x718; // char : 1
		constexpr auto OverrideInitialMaxSpeed = 0x71c; // float
		constexpr auto bIsOrbitingSelectedActor = 0x720; // char : 1
		constexpr auto bOrbitPivotUseCenter = 0x720; // char : 1
		constexpr auto bEnableBufferVisualization = 0x720; // char : 1
		constexpr auto bEnableBufferVisualizationFullMode = 0x720; // char : 1
		constexpr auto bIsBufferVisualizationInputSetup = 0x720; // char : 1
		constexpr auto bLastDisplayEnabled = 0x720; // char : 1
		constexpr auto DrawFrustum = 0x728; // UDrawFrustumComponent*
		constexpr auto SelectedActor = 0x730; // AActor*
		constexpr auto SelectedComponent = 0x738; // UPrimitiveComponent*
		constexpr auto SelectedHitPoint = 0x740; // FHitResult
		constexpr auto OriginalControllerRef = 0x7c8; // APlayerController*
		constexpr auto OriginalPlayer = 0x7d0; // UPlayer*
		constexpr auto SpeedScale = 0x7d8; // float
		constexpr auto InitialMaxSpeed = 0x7dc; // float
		constexpr auto InitialAccel = 0x7e0; // float
		constexpr auto InitialDecel = 0x7e4; // float
	}

	namespace n_UParticleModuleColor {
		constexpr auto StartColor = 0x30; // FRawDistributionVector
		constexpr auto StartAlpha = 0x78; // FRawDistributionFloat
		constexpr auto bClampAlpha = 0xa8; // char : 1
	}

	namespace n_ULowEntryLatentActionString {
		constexpr auto Finished = 0x28; // bool
		constexpr auto Result = 0x30; // FString
		constexpr auto KeepAliveCount = 0x40; // int32_t
	}

	namespace n_UBravoHotelAnimNotifyState_TimedParticle {
		constexpr auto PSTemplate = 0x30; // UParticleSystem*
		constexpr auto PSTemplate_OnlyOtherPlayerSee = 0x38; // UParticleSystem*
		constexpr auto SocketName = 0x40; // FName
		constexpr auto LocationOffset = 0x48; // FVector
		constexpr auto RotationOffset = 0x54; // FRotator
		constexpr auto Scale3D = 0x60; // FVector
		constexpr auto bDestroyAtEnd = 0x6c; // bool
	}

	namespace n_UGizmoComponentWorldTransformSource {
		constexpr auto Component = 0x48; // USceneComponent*
		constexpr auto bModifyComponentOnTransform = 0x50; // bool
	}

	namespace n_UPlayer {
		constexpr auto PlayerController = 0x30; // APlayerController*
		constexpr auto CurrentNetSpeed = 0x38; // int32_t
		constexpr auto ConfiguredInternetSpeed = 0x3c; // int32_t
		constexpr auto ConfiguredLanSpeed = 0x40; // int32_t
	}

	namespace n_UEnvQuery {
		constexpr auto QueryName = 0x30; // FName
		constexpr auto options = 0x38; // TArray<UEnvQueryOption*>
	}

	namespace n_UEditableMesh {
		constexpr auto Adapters = 0x3b8; // TArray<UEditableMeshAdapter*>
		constexpr auto TextureCoordinateCount = 0x3d0; // int32_t
		constexpr auto PendingCompactCounter = 0x51c; // int32_t
		constexpr auto SubdivisionCount = 0x520; // int32_t
	}

	namespace n_USourceEffectFilterPreset {
		constexpr auto Settings = 0x74; // FSourceEffectFilterSettings
	}

	namespace n_ABravoHotelTitleHUD {
		constexpr auto LobbyWidgetClass = 0x428; // UUserWidget*
		constexpr auto CreateCharacterWidgetClass = 0x430; // UUserWidget*
		constexpr auto LobbyWidget = 0x438; // UUserWidget*
		constexpr auto CreateCharacterWidget = 0x440; // UUserWidget*
		constexpr auto ChangedSceneDelegate = 0x448; // FMulticastInlineDelegate
		constexpr auto ChangedLoginDelegate = 0x458; // FMulticastInlineDelegate
		constexpr auto WaitingUserDelegate = 0x468; // FMulticastInlineDelegate
	}

	namespace n_UHUD_Widget_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto ChatWidget = 0x250; // UChat_MainWidget_C*
		constexpr auto Chat System = 0x258; // AChat_System_C*
	}

	namespace n_USubmixEffectFlexiverbPreset {
		constexpr auto Settings = 0x78; // FSubmixEffectFlexiverbSettings
	}

	namespace n_UUW-TeamInfoItemWidget_C {
		constexpr auto UberGraphFrame = 0x308; // FPointerToUberGraphFrame
		constexpr auto Anim_IconBouncing = 0x310; // UWidgetAnimation*
		constexpr auto Progress_Stroke = 0x318; // UWidgetAnimation*
		constexpr auto Shoot_ani = 0x320; // UWidgetAnimation*
		constexpr auto CanvasPanel_Main = 0x328; // UCanvasPanel*
		constexpr auto death = 0x330; // UImage*
		constexpr auto Image_126 = 0x338; // UImage*
		constexpr auto Image_168 = 0x340; // UImage*
		constexpr auto Image_280 = 0x348; // UImage*
		constexpr auto Image_623 = 0x350; // UImage*
		constexpr auto Image_624 = 0x358; // UImage*
		constexpr auto Image_1058 = 0x360; // UImage*
		constexpr auto Image_Firing = 0x368; // UImage*
		constexpr auto Image_Heart = 0x370; // UImage*
		constexpr auto Image_Outline = 0x378; // UImage*
		constexpr auto Image_TeamInfoClassIcon = 0x380; // UImage*
		constexpr auto Img_LogOut = 0x388; // UImage*
		constexpr auto Img_Voice = 0x390; // UImage*
		constexpr auto Img_VoiceMute = 0x398; // UImage*
		constexpr auto InvalidationBox_1 = 0x3a0; // UInvalidationBox*
		constexpr auto Overlay_447 = 0x3a8; // UOverlay*
		constexpr auto Overlay_Death = 0x3b0; // UOverlay*
		constexpr auto Overlay_RemainGoldenTimeSelf = 0x3b8; // UOverlay*
		constexpr auto Overlay_RequestResus = 0x3c0; // UOverlay*
		constexpr auto ProgressBar_440 = 0x3c8; // UProgressBar*
		constexpr auto ProgressBar_443 = 0x3d0; // UProgressBar*
		constexpr auto SizeBox_132 = 0x3d8; // USizeBox*
		constexpr auto StateGoldenTime = 0x3e0; // UProgressBar*
		constexpr auto StateKnockdown = 0x3e8; // UProgressBar*
		constexpr auto T_ClassName = 0x3f0; // UTextBlock*
		constexpr auto T_ClassWeapon = 0x3f8; // UTextBlock*
		constexpr auto T_PlayerIndex = 0x400; // UTextBlock*
		constexpr auto T_PlayerName = 0x408; // UTextBlock*
		constexpr auto TeamColor = 0x410; // UImage*
		constexpr auto TextBlock_4 = 0x418; // UTextBlock*
		constexpr auto TextBlock_297 = 0x420; // UTextBlock*
		constexpr auto TextBlock_590 = 0x428; // UTextBlock*
		constexpr auto TextBlock_591 = 0x430; // UTextBlock*
		constexpr auto TextBlock_1016 = 0x438; // UTextBlock*
		constexpr auto TextBlock_RemainGoldenTimeSelf = 0x440; // UTextBlock*
		constexpr auto TextBlock_RequestResus = 0x448; // UTextBlock*
		constexpr auto TextBlock_Resuscitating = 0x450; // UTextBlock*
		constexpr auto UW-RequestResuscitation = 0x458; // UUW-RequestResuscitation_C*
		constexpr auto WidgetSwitcher_LogOut = 0x460; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_Resuscitate = 0x468; // UWidgetSwitcher*
		constexpr auto Index = 0x470; // int32_t
		constexpr auto Behavior = 0x474; // EPlayerBehavior
		constexpr auto hp = 0x478; // float
		constexpr auto Name = 0x480; // FText
		constexpr auto ColorList = 0x498; // TArray<FLinearColor>
		constexpr auto bPin = 0x4a8; // bool
		constexpr auto PrevHP = 0x4ac; // float
		constexpr auto bReduceHP = 0x4b0; // bool
		constexpr auto TimerHandleReduceHP = 0x4b8; // FTimerHandle
		constexpr auto bIncreaseHP = 0x4c0; // bool
		constexpr auto HealthChangeCurve = 0x4c8; // UCurveFloat*
		constexpr auto HealthDangerCurve = 0x4d0; // UCurveLinearColor*
		constexpr auto HealTimer = 0x4d8; // FTimerHandle
		constexpr auto FaintTimer = 0x4e0; // FTimerHandle
		constexpr auto BaseHealth = 0x4e8; // float
		constexpr auto TargetHealth = 0x4ec; // float
		constexpr auto HealthWeight = 0x4f0; // float
		constexpr auto TargetFaint = 0x4f4; // float
		constexpr auto BaseFaint = 0x4f8; // float
		constexpr auto FaintWeight = 0x4fc; // float
		constexpr auto CurrentHPPercent = 0x500; // float
		constexpr auto HealHPPercent = 0x504; // float
		constexpr auto FaintPercent = 0x508; // float
		constexpr auto CurrentAlpha = 0x50c; // float
		constexpr auto AlphaTimer = 0x510; // float
		constexpr auto AlphaCurve = 0x518; // UCurveFloat*
		constexpr auto KnockDown = 0x520; // bool
		constexpr auto HeartBeat = 0x524; // float
		constexpr auto DisConnectSprite = 0x528; // UPaperSprite*
		constexpr auto KnockDownSprite = 0x530; // UPaperSprite*
		constexpr auto DeathSprite = 0x538; // UPaperSprite*
		constexpr auto VehicleSprite = 0x540; // UPaperSprite*
		constexpr auto HpTimer = 0x548; // FTimerHandle
		constexpr auto EndTime = 0x550; // float
		constexpr auto StartTime = 0x554; // float
		constexpr auto TotalTime = 0x558; // float
		constexpr auto ResultValue = 0x55c; // float
		constexpr auto AddTme = 0x560; // float
		constexpr auto PreStart = 0x564; // float
	}

	namespace n_UUW-Lobby_WeaponInfo_Option_Slot_Icon_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Image_Buff = 0x250; // UImage*
		constexpr auto Image_Grade_Color_Line = 0x258; // UImage*
		constexpr auto ItemOption = 0x260; // FItemOption
	}

	namespace n_ADecalActor {
		constexpr auto Decal = 0x318; // UDecalComponent*
	}

	namespace n_UAkMediaAssetData {
		constexpr auto IsStreamed = 0x28; // bool
		constexpr auto UseDeviceMemory = 0x29; // bool
	}

	namespace n_UNiagaraDataInterfaceStaticMesh {
		constexpr auto DefaultMesh = 0x30; // UStaticMesh*
		constexpr auto Source = 0x38; // AActor*
		constexpr auto SourceComponent = 0x40; // UStaticMeshComponent*
		constexpr auto SectionFilter = 0x48; // FNDIStaticMeshSectionFilter
	}

	namespace n_UUW-ReplayEventMarker_Kill_C {
		constexpr auto UberGraphFrame = 0x2a0; // FPointerToUberGraphFrame
		constexpr auto VisualBorder = 0x2a8; // UBorder*
	}

	namespace n_UUW-Lobby_Craft_Success_PerkSelect_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Anim_Show = 0x250; // UWidgetAnimation*
		constexpr auto Border = 0x258; // UBorder*
		constexpr auto Border_51 = 0x260; // UBorder*
		constexpr auto btn_All_OK = 0x268; // UButton*
		constexpr auto btn_Close = 0x270; // UButton*
		constexpr auto HorizontalBox_CloseButton = 0x278; // UHorizontalBox*
		constexpr auto Image_2 = 0x280; // UImage*
		constexpr auto UW-Lobby_Craft_Success_Perk_Close = 0x288; // UUW-Lobby_Craft_Success_Perk_Close_C*
		constexpr auto UW-Lobby_Craft_Success_Perk_Close_2 = 0x290; // UUW-Lobby_Craft_Success_Perk_Close_C*
		constexpr auto UW-Lobby_Craft_Success_Perk_Close_3 = 0x298; // UUW-Lobby_Craft_Success_Perk_Close_C*
		constexpr auto UW-Lobby_WeaponInfo = 0x2a0; // UUW-Lobby_WeaponInfo_C*
		constexpr auto UW-Lobby_WeaponInfo_OptionList = 0x2a8; // UUW-Lobby_WeaponInfo_OptionList_C*
		constexpr auto WidgetSwitcher_90 = 0x2b0; // UWidgetSwitcher*
		constexpr auto OpenedOptionList = 0x2b8; // TArray<FItemOption>
	}

	namespace n_UStereoLayerComponent {
		constexpr auto bLiveTexture = 0x230; // char : 1
		constexpr auto bSupportsDepth = 0x230; // char : 1
		constexpr auto bNoAlphaChannel = 0x230; // char : 1
		constexpr auto Texture = 0x238; // UTexture*
		constexpr auto LeftTexture = 0x240; // UTexture*
		constexpr auto bQuadPreserveTextureRatio = 0x248; // char : 1
		constexpr auto QuadSize = 0x24c; // FVector2D
		constexpr auto UVRect = 0x254; // FBox2D
		constexpr auto CylinderRadius = 0x268; // float
		constexpr auto CylinderOverlayArc = 0x26c; // float
		constexpr auto CylinderHeight = 0x270; // int32_t
		constexpr auto EquirectProps = 0x274; // FEquirectProps
		constexpr auto StereoLayerType = 0x2bc; // EStereoLayerType
		constexpr auto StereoLayerShape = 0x2bd; // EStereoLayerShape
		constexpr auto Shape = 0x2c0; // UStereoLayerShape*
		constexpr auto Priority = 0x2c8; // int32_t
	}

	namespace n_UMovieSceneParticleSection {
		constexpr auto ParticleKeys = 0xe0; // FMovieSceneParticleChannel
	}

	namespace n_UNiagaraDataInterfaceAudioOscilloscope {
		constexpr auto Submix = 0x30; // USoundSubmix*
		constexpr auto Resolution = 0x38; // int32_t
		constexpr auto ScopeInMilliseconds = 0x3c; // float
	}

	namespace n_UCableComponent {
		constexpr auto bAttachStart = 0x4e0; // bool
		constexpr auto bAttachEnd = 0x4e1; // bool
		constexpr auto AttachEndTo = 0x4e8; // FComponentReference
		constexpr auto AttachEndToSocketName = 0x510; // FName
		constexpr auto EndLocation = 0x518; // FVector
		constexpr auto CableLength = 0x524; // float
		constexpr auto NumSegments = 0x528; // int32_t
		constexpr auto SubstepTime = 0x52c; // float
		constexpr auto SolverIterations = 0x530; // int32_t
		constexpr auto bEnableStiffness = 0x534; // bool
		constexpr auto bEnableCollision = 0x535; // bool
		constexpr auto CollisionFriction = 0x538; // float
		constexpr auto CableForce = 0x53c; // FVector
		constexpr auto CableGravityScale = 0x548; // float
		constexpr auto CableWidth = 0x54c; // float
		constexpr auto NumSides = 0x550; // int32_t
		constexpr auto TileMaterial = 0x554; // float
	}

	namespace n_USynthKnob {
		constexpr auto Value = 0x108; // float
		constexpr auto StepSize = 0x10c; // float
		constexpr auto MouseSpeed = 0x110; // float
		constexpr auto MouseFineTuneSpeed = 0x114; // float
		constexpr auto ShowTooltipInfo = 0x118; // char : 1
		constexpr auto ParameterName = 0x120; // FText
		constexpr auto ParameterUnits = 0x138; // FText
		constexpr auto ValueDelegate = 0x150; // FDelegate
		constexpr auto WidgetStyle = 0x160; // FSynthKnobStyle
		constexpr auto Locked = 0x398; // bool
		constexpr auto IsFocusable = 0x399; // bool
		constexpr auto OnMouseCaptureBegin = 0x3a0; // FMulticastInlineDelegate
		constexpr auto OnMouseCaptureEnd = 0x3b0; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureBegin = 0x3c0; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureEnd = 0x3d0; // FMulticastInlineDelegate
		constexpr auto OnValueChanged = 0x3e0; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionBreakMaterialAttributes {
		constexpr auto MaterialAttributes = 0x40; // FMaterialAttributesInput
	}

	namespace n_UTransformGizmo {
		constexpr auto ActiveTarget = 0x40; // UTransformProxy*
		constexpr auto bSnapToWorldGrid = 0x48; // bool
		constexpr auto bUseContextCoordinateSystem = 0x49; // bool
		constexpr auto CurrentCoordinateSystem = 0x4c; // EToolContextCoordinateSystem
		constexpr auto ActiveComponents = 0xe0; // TArray<UPrimitiveComponent*>
		constexpr auto NonuniformScaleComponents = 0xf0; // TArray<UPrimitiveComponent*>
		constexpr auto ActiveGizmos = 0x100; // TArray<UInteractiveGizmo*>
		constexpr auto CameraAxisSource = 0x120; // UGizmoConstantFrameAxisSource*
		constexpr auto AxisXSource = 0x128; // UGizmoComponentAxisSource*
		constexpr auto AxisYSource = 0x130; // UGizmoComponentAxisSource*
		constexpr auto AxisZSource = 0x138; // UGizmoComponentAxisSource*
		constexpr auto UnitAxisXSource = 0x140; // UGizmoComponentAxisSource*
		constexpr auto UnitAxisYSource = 0x148; // UGizmoComponentAxisSource*
		constexpr auto UnitAxisZSource = 0x150; // UGizmoComponentAxisSource*
		constexpr auto StateTarget = 0x158; // UGizmoTransformChangeStateTarget*
		constexpr auto ScaledTransformSource = 0x160; // UGizmoScaledTransformSource*
	}

	namespace n_UGameMapsSettings {
		constexpr auto LocalMapOptions = 0x28; // FString
		constexpr auto TransitionMap = 0x38; // FSoftObjectPath
		constexpr auto bUseSplitscreen = 0x50; // bool
		constexpr auto TwoPlayerSplitscreenLayout = 0x51; // ETwoPlayerSplitScreenType
		constexpr auto ThreePlayerSplitscreenLayout = 0x52; // EThreePlayerSplitScreenType
		constexpr auto FourPlayerSplitscreenLayout = 0x53; // EFourPlayerSplitScreenType
		constexpr auto bOffsetPlayerGamepadIds = 0x54; // bool
		constexpr auto GameInstanceClass = 0x58; // FSoftClassPath
		constexpr auto ServerGameInstanceClass = 0x70; // FSoftClassPath
		constexpr auto GameDefaultMap = 0x88; // FSoftObjectPath
		constexpr auto ServerDefaultMap = 0xa0; // FSoftObjectPath
		constexpr auto GlobalDefaultGameMode = 0xb8; // FSoftClassPath
		constexpr auto GlobalDefaultServerGameMode = 0xd0; // FSoftClassPath
		constexpr auto GameModeMapPrefixes = 0xe8; // TArray<FGameModeName>
		constexpr auto GameModeClassAliases = 0xf8; // TArray<FGameModeName>
	}

	namespace n_UUW-BlackMarket_Slot_Custom_C {
		constexpr auto UberGraphFrame = 0x3d8; // FPointerToUberGraphFrame
		constexpr auto BTN-Menu02 = 0x3e0; // UButton*
		constexpr auto CP-SlotInfo = 0x3e8; // UCanvasPanel*
		constexpr auto IMG-BG = 0x3f0; // UImage*
		constexpr auto IMG-BG-Border = 0x3f8; // UImage*
		constexpr auto IMG-Item = 0x400; // UImage*
		constexpr auto IMG-Mask = 0x408; // UImage*
		constexpr auto IMG-Over = 0x410; // UImage*
		constexpr auto IMG-Over-Border = 0x418; // UImage*
		constexpr auto Menu02 = 0x420; // UOverlay*
		constexpr auto Overlay_Mask = 0x428; // UOverlay*
		constexpr auto TXT-ItemName = 0x430; // UTextBlock*
		constexpr auto TXT-Menu01 = 0x438; // UTextBlock*
		constexpr auto TXT-Menu02 = 0x440; // UTextBlock*
	}

	namespace n_UDistributionFloat {
		constexpr auto bCanBeBaked = 0x30; // char : 1
		constexpr auto bBakedDataSuccesfully = 0x30; // char : 1
	}

	namespace n_UselectTypeBtn_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Button_43 = 0x250; // UButton*
		constexpr auto Image_43 = 0x258; // UImage*
		constexpr auto SelectEventDispatcher = 0x260; // FMulticastInlineDelegate
		constexpr auto Index = 0x270; // int32_t
	}

	namespace n_UCurveLinearColorAtlas {
		constexpr auto TextureSize = 0xe8; // uint32_t
		constexpr auto GradientCurves = 0xf0; // TArray<UCurveLinearColor*>
	}

	namespace n_UMaterialFunctionInstance {
		constexpr auto Parent = 0x40; // UMaterialFunctionInterface*
		constexpr auto Base = 0x48; // UMaterialFunctionInterface*
		constexpr auto ScalarParameterValues = 0x50; // TArray<FScalarParameterValue>
		constexpr auto VectorParameterValues = 0x60; // TArray<FVectorParameterValue>
		constexpr auto TextureParameterValues = 0x70; // TArray<FTextureParameterValue>
		constexpr auto FontParameterValues = 0x80; // TArray<FFontParameterValue>
		constexpr auto StaticSwitchParameterValues = 0x90; // TArray<FStaticSwitchParameter>
		constexpr auto StaticComponentMaskParameterValues = 0xa0; // TArray<FStaticComponentMaskParameter>
		constexpr auto RuntimeVirtualTextureParameterValues = 0xb0; // TArray<FRuntimeVirtualTextureParameterValue>
	}

	namespace n_USoundClass {
		constexpr auto Properties = 0x28; // FSoundClassProperties
		constexpr auto ChildClasses = 0x80; // TArray<USoundClass*>
		constexpr auto PassiveSoundMixModifiers = 0x90; // TArray<FPassiveSoundMixModifier>
		constexpr auto Modulation = 0xa0; // FSoundModulation
		constexpr auto ParentClass = 0xb0; // USoundClass*
	}

	namespace n_UStaticMeshComponent {
		constexpr auto ForcedLodModel = 0x4e0; // int32_t
		constexpr auto PreviousLODLevel = 0x4e4; // int32_t
		constexpr auto MinLOD = 0x4e8; // int32_t
		constexpr auto SubDivisionStepSize = 0x4ec; // int32_t
		constexpr auto StaticMesh = 0x4f0; // UStaticMesh*
		constexpr auto WireframeColorOverride = 0x4f8; // FColor
		constexpr auto bEvaluateWorldPositionOffset = 0x4fc; // char : 1
		constexpr auto bOverrideWireframeColor = 0x4fc; // char : 1
		constexpr auto bOverrideMinLod = 0x4fc; // char : 1
		constexpr auto bOverrideNavigationExport = 0x4fc; // char : 1
		constexpr auto bForceNavigationObstacle = 0x4fc; // char : 1
		constexpr auto bDisallowMeshPaintPerInstance = 0x4fc; // char : 1
		constexpr auto bIgnoreInstanceForTextureStreaming = 0x4fc; // char : 1
		constexpr auto bOverrideLightMapRes = 0x4fc; // char : 1
		constexpr auto bCastDistanceFieldIndirectShadow = 0x4fd; // char : 1
		constexpr auto bOverrideDistanceFieldSelfShadowBias = 0x4fd; // char : 1
		constexpr auto bUseSubDivisions = 0x4fd; // char : 1
		constexpr auto bUseDefaultCollision = 0x4fd; // char : 1
		constexpr auto bReverseCulling = 0x4fd; // char : 1
		constexpr auto OverriddenLightMapRes = 0x500; // int32_t
		constexpr auto DistanceFieldIndirectShadowMinVisibility = 0x504; // float
		constexpr auto DistanceFieldSelfShadowBias = 0x508; // float
		constexpr auto StreamingDistanceMultiplier = 0x50c; // float
		constexpr auto LODData = 0x510; // TArray<FStaticMeshComponentLODInfo>
		constexpr auto StreamingTextureData = 0x520; // TArray<FStreamingTextureBuildInfo>
		constexpr auto LightmassSettings = 0x530; // FLightmassPrimitiveSettings
	}

	namespace n_UMaterialFunctionInterface {
		constexpr auto StateID = 0x28; // FGuid
		constexpr auto MaterialFunctionUsage = 0x38; // EMaterialFunctionUsage
	}

	namespace n_UMaterialExpressionSpriteTextureSampler {
		constexpr auto bSampleAdditionalTextures = 0xf0; // bool
		constexpr auto AdditionalSlotIndex = 0xf4; // int32_t
		constexpr auto SlotDisplayName = 0xf8; // FText
	}

	namespace n_APaperSpriteActor {
		constexpr auto RenderComponent = 0x318; // UPaperSpriteComponent*
	}

	namespace n_UCompositeDataTable {
		constexpr auto ParentTables = 0xc8; // TArray<UDataTable*>
		constexpr auto OldParentTables = 0xd8; // TArray<UDataTable*>
	}

	namespace n_UConnectionCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UMovieSceneCameraAnimSection {
		constexpr auto AnimData = 0xe0; // FMovieSceneCameraAnimSectionData
		constexpr auto CameraAnim = 0x100; // UCameraAnim*
		constexpr auto PlayRate = 0x108; // float
		constexpr auto PlayScale = 0x10c; // float
		constexpr auto BlendInTime = 0x110; // float
		constexpr auto BlendOutTime = 0x114; // float
		constexpr auto bLooping = 0x118; // bool
	}

	namespace n_UAnimComposite {
		constexpr auto AnimationTrack = 0xb8; // FAnimTrack
	}

	namespace n_ULowEntryExecutionQueue {
		constexpr auto Count = 0x28; // int32_t
		constexpr auto Next = 0x2c; // bool
	}

	namespace n_UAkMediaAsset {
		constexpr auto ID = 0x28; // uint32_t
		constexpr auto AutoLoad = 0x2c; // bool
		constexpr auto UserData = 0x30; // TArray<UObject*>
		constexpr auto CurrentMediaAssetData = 0x40; // UAkMediaAssetData*
	}

	namespace n_UPhysicsConstraintComponent {
		constexpr auto ConstraintActor1 = 0x230; // AActor*
		constexpr auto ComponentName1 = 0x238; // FConstrainComponentPropName
		constexpr auto ConstraintActor2 = 0x240; // AActor*
		constexpr auto ComponentName2 = 0x248; // FConstrainComponentPropName
		constexpr auto ConstraintSetup = 0x260; // UPhysicsConstraintTemplate*
		constexpr auto OnConstraintBroken = 0x268; // FMulticastInlineDelegate
		constexpr auto ConstraintInstance = 0x278; // FConstraintInstance
	}

	namespace n_UUniformVector {
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto Direction = 0xb4; // FVector
	}

	namespace n_UMaterialExpressionBentNormalCustomOutput {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UMovieScene3DPathSection {
		constexpr auto TimingCurve = 0x108; // FMovieSceneFloatChannel
		constexpr auto FrontAxisEnum = 0x1a8; // MovieScene3DPathSection_Axis
		constexpr auto UpAxisEnum = 0x1a9; // MovieScene3DPathSection_Axis
		constexpr auto bFollow = 0x1ac; // char : 1
		constexpr auto bReverse = 0x1ac; // char : 1
		constexpr auto bForceUpright = 0x1ac; // char : 1
	}

	namespace n_UMaterialExpressionConstant {
		constexpr auto R = 0x40; // float
	}

	namespace n_UMaterialExpressionPower {
		constexpr auto Base = 0x40; // FExpressionInput
		constexpr auto Exponent = 0x54; // FExpressionInput
		constexpr auto ConstExponent = 0x68; // float
	}

	namespace n_AScenarioGameMode {
		constexpr auto ScenarioComponent = 0x580; // UBravoHotelScenarioComponent*
		constexpr auto DefaultCharacterDeck = 0x588; // FName
	}

	namespace n_UMovieSceneAkAudioEventSection {
		constexpr auto Event = 0x120; // UAkAudioEvent*
		constexpr auto RetriggerEvent = 0x128; // bool
		constexpr auto ScrubTailLengthMs = 0x12c; // int32_t
		constexpr auto StopAtSectionEnd = 0x130; // bool
		constexpr auto EventName = 0x138; // FString
		constexpr auto MaxSourceDuration = 0x168; // float
		constexpr auto MaxDurationSourceID = 0x170; // FString
	}

	namespace n_UInteractiveGizmoManager {
		constexpr auto ActiveGizmos = 0x30; // TArray<FActiveGizmo>
		constexpr auto GizmoBuilders = 0x58; // TMap<FString, UInteractiveGizmoBuilder*>
	}

	namespace n_USubmixEffectDelayPreset {
		constexpr auto Settings = 0x74; // FSubmixEffectDelaySettings
		constexpr auto DynamicSettings = 0x80; // FSubmixEffectDelaySettings
	}

	namespace n_UUW-SpectatingTargetInfo_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Spectator_Ani = 0x250; // UWidgetAnimation*
		constexpr auto Button_Report = 0x258; // UButton*
		constexpr auto Canvas_Finding = 0x260; // UCanvasPanel*
		constexpr auto Canvas_Target = 0x268; // UCanvasPanel*
		constexpr auto Deco = 0x270; // UImage*
		constexpr auto Image_351 = 0x278; // UImage*
		constexpr auto IMG_ClassIcon = 0x280; // UImage*
		constexpr auto NickName = 0x288; // UTextBlock*
		constexpr auto Overlay_Report = 0x290; // UOverlay*
		constexpr auto ReportDescriptionText = 0x298; // UTextBlock*
		constexpr auto Text_Report = 0x2a0; // UTextBlock*
		constexpr auto TextBlock_3 = 0x2a8; // UTextBlock*
		constexpr auto TextBlock_208 = 0x2b0; // UTextBlock*
		constexpr auto VerticalBox_Report = 0x2b8; // UVerticalBox*
		constexpr auto WidgetSwitcher_136 = 0x2c0; // UWidgetSwitcher*
		constexpr auto IsReportAbleDateTime = 0x2c8; // bool
		constexpr auto TargetPlayerState = 0x2d0; // ABravoHotelPlayerState*
	}

	namespace n_UFSM_FinishState_ConditionalAsync {
		constexpr auto Target = 0x30; // UStateMachineComponent*
		constexpr auto Conditional = 0x38; // FSM_Transition
		constexpr auto FallbackState = 0x3c; // FName
		constexpr auto Timer = 0x44; // float
		constexpr auto TimerHandle = 0x48; // FTimerHandle
		constexpr auto OnSuccess = 0x50; // FMulticastInlineDelegate
		constexpr auto OnAborted = 0x60; // FMulticastInlineDelegate
	}

	namespace n_UMultiLineEditableTextBox {
		constexpr auto Text = 0x128; // FText
		constexpr auto HintText = 0x140; // FText
		constexpr auto HintTextDelegate = 0x158; // FDelegate
		constexpr auto WidgetStyle = 0x168; // FEditableTextBoxStyle
		constexpr auto TextStyle = 0x958; // FTextBlockStyle
		constexpr auto bIsReadOnly = 0xbc0; // bool
		constexpr auto AllowContextMenu = 0xbc1; // bool
		constexpr auto VirtualKeyboardOptions = 0xbc2; // FVirtualKeyboardOptions
		constexpr auto VirtualKeyboardDismissAction = 0xbc3; // EVirtualKeyboardDismissAction
		constexpr auto Style = 0xbc8; // USlateWidgetStyleAsset*
		constexpr auto Font = 0xbd0; // FSlateFontInfo
		constexpr auto ForegroundColor = 0xc20; // FLinearColor
		constexpr auto BackgroundColor = 0xc30; // FLinearColor
		constexpr auto ReadOnlyForegroundColor = 0xc40; // FLinearColor
		constexpr auto OnTextChanged = 0xc50; // FMulticastInlineDelegate
		constexpr auto OnTextCommitted = 0xc60; // FMulticastInlineDelegate
	}

	namespace n_UGameplayTagsDeveloperSettings {
		constexpr auto DeveloperConfigName = 0x28; // FString
	}

	namespace n_USlateVectorArtData {
		constexpr auto VertexData = 0x28; // TArray<FSlateMeshVertex>
		constexpr auto IndexData = 0x38; // TArray<uint32_t>
		constexpr auto Material = 0x48; // UMaterialInterface*
		constexpr auto ExtentMin = 0x50; // FVector2D
		constexpr auto ExtentMax = 0x58; // FVector2D
	}

	namespace n_UBTTask_RunBehaviorDynamic {
		constexpr auto InjectionTag = 0x70; // FGameplayTag
		constexpr auto DefaultBehaviorAsset = 0x78; // UBehaviorTree*
		constexpr auto BehaviorAsset = 0x80; // UBehaviorTree*
	}

	namespace n_UMovieSceneMaterialParameterCollectionTrack {
		constexpr auto MPC = 0x68; // UMaterialParameterCollection*
	}

	namespace n_ABravoHotelPlayerCameraManager {
		constexpr auto ServerUpdateCameraInterval = 0x2b38; // float
		constexpr auto TimedCameraPostProcessDatas = 0x2b60; // TArray<FTimedCameraPostProcessData>
		constexpr auto TimedCameraEffectDatas = 0x2b70; // TArray<FTimedCameraEffectData>
	}

	namespace n_UListView {
		constexpr auto Orientation = 0x2d8; // EOrientation
		constexpr auto SelectionMode = 0x2d9; // ESelectionMode
		constexpr auto ConsumeMouseWheel = 0x2da; // EConsumeMouseWheel
		constexpr auto bClearSelectionOnClick = 0x2db; // bool
		constexpr auto bIsFocusable = 0x2dc; // bool
		constexpr auto EntrySpacing = 0x2e0; // float
		constexpr auto bReturnFocusToSelection = 0x2e4; // bool
		constexpr auto ListItems = 0x2e8; // TArray<UObject*>
		constexpr auto BP_OnEntryInitialized = 0x308; // FMulticastInlineDelegate
		constexpr auto BP_OnItemClicked = 0x318; // FMulticastInlineDelegate
		constexpr auto BP_OnItemDoubleClicked = 0x328; // FMulticastInlineDelegate
		constexpr auto BP_OnItemIsHoveredChanged = 0x338; // FMulticastInlineDelegate
		constexpr auto BP_OnItemSelectionChanged = 0x348; // FMulticastInlineDelegate
		constexpr auto BP_OnItemScrolledIntoView = 0x358; // FMulticastInlineDelegate
	}

	namespace n_ABP-MK3DReplayController_C {
		constexpr auto UberGraphFrame = 0xad8; // FPointerToUberGraphFrame
		constexpr auto BP-HUDInteractionComponent = 0xae0; // UBP-HUDInteractionComponent_C*
		constexpr auto OpenedWidgetNum = 0xae8; // int32_t
		constexpr auto ViewMode = 0xaec; // EReplayViewMode
	}

	namespace n_UUW-SightInfo_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Canvas_Charge = 0x250; // UCanvasPanel*
		constexpr auto ChargeIndicator = 0x258; // UImage*
		constexpr auto Image_LeanDamageBg = 0x260; // UImage*
		constexpr auto IMG_Gauge1 = 0x268; // UImage*
		constexpr auto IMG_Gauge2 = 0x270; // UImage*
		constexpr auto IMG_Gauge3 = 0x278; // UImage*
		constexpr auto IMG_Gauge4 = 0x280; // UImage*
		constexpr auto IMG_Gauge5 = 0x288; // UImage*
		constexpr auto IMG_Gauge6 = 0x290; // UImage*
		constexpr auto LeftTime = 0x298; // UTextBlock*
		constexpr auto Overlay_Gauge = 0x2a0; // UOverlay*
		constexpr auto T_BulletsPerShot = 0x2a8; // UTextBlock*
		constexpr auto T_Damage = 0x2b0; // UTextBlock*
		constexpr auto T_RPM = 0x2b8; // UTextBlock*
		constexpr auto VerticalBox_Damage = 0x2c0; // UVerticalBox*
		constexpr auto BravoHotelCharacter = 0x2c8; // ABravoHotelCharacter*
		constexpr auto GaugeIMGArray = 0x2d0; // TArray<UImage*>
		constexpr auto LastGauge = 0x2e0; // int32_t
		constexpr auto Timer_ = 0x2e4; // bool
		constexpr auto Timer_UpdateInfos = 0x2e8; // FTimerHandle
		constexpr auto ChargeIndicatorDynamicMaterial = 0x2f0; // UMaterialInstanceDynamic*
	}

	namespace n_UMaterialExpressionTextureSampleParameterSubUV {
		constexpr auto bBlend = 0xf0; // char : 1
	}

	namespace n_ULevelSequenceBurnIn {
		constexpr auto FrameInformation = 0x248; // FLevelSequencePlayerSnapshot
		constexpr auto LevelSequenceActor = 0x300; // ALevelSequenceActor*
	}

	namespace n_UInterpTrack {
		constexpr auto SubTracks = 0x38; // TArray<UInterpTrack*>
		constexpr auto TrackInstClass = 0x48; // UInterpTrackInst*
		constexpr auto ActiveCondition = 0x50; // ETrackActiveCondition
		constexpr auto TrackTitle = 0x58; // FString
		constexpr auto bOnePerGroup = 0x68; // char : 1
		constexpr auto bDirGroupOnly = 0x68; // char : 1
		constexpr auto bDisableTrack = 0x68; // char : 1
		constexpr auto bIsSelected = 0x68; // char : 1
		constexpr auto bIsAnimControlTrack = 0x68; // char : 1
		constexpr auto bSubTrackOnly = 0x68; // char : 1
		constexpr auto bVisible = 0x68; // char : 1
		constexpr auto bIsRecording = 0x68; // char : 1
	}

	namespace n_USubstanceTexture2D {
		constexpr auto ParentInstance = 0x100; // USubstanceGraphInstance*
		constexpr auto AddressX = 0x108; // TextureAddress
		constexpr auto AddressY = 0x109; // TextureAddress
		constexpr auto bCooked = 0x10a; // bool
	}

	namespace n_UUW-Inventory_ItemSlotHover_WeaponSlot_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Image_350 = 0x250; // UImage*
		constexpr auto Image_585 = 0x258; // UImage*
		constexpr auto Image_Grade_Color_Line = 0x260; // UImage*
		constexpr auto TextBlock_445 = 0x268; // UTextBlock*
	}

	namespace n_UBP-SavedInventorySettings_C {
		constexpr auto ShowPerkSlot = 0x30; // bool
	}

	namespace n_UBTDecorator_SetTagCooldown {
		constexpr auto CooldownTag = 0x68; // FGameplayTag
		constexpr auto CooldownDuration = 0x70; // float
		constexpr auto bAddToExistingDuration = 0x74; // bool
	}

	namespace n_UNavModifierComponent {
		constexpr auto AreaClass = 0xe0; // UNavArea*
		constexpr auto FailsafeExtent = 0xe8; // FVector
		constexpr auto bIncludeAgentHeight = 0xf4; // char : 1
	}

	namespace n_UPrefabToolSettings {
		constexpr auto bInitialPivotToWorldOrigin = 0x28; // bool
		constexpr auto bReplaceActorsWithCreatedPrefab = 0x29; // bool
		constexpr auto bAutoIncludeAttachedActorsWhenCreateNewPrefab = 0x2a; // bool
		constexpr auto bNestedPrefabSupport = 0x2b; // bool
		constexpr auto bRestorePrefabActorCollapseStatusAfterPIE = 0x2c; // bool
		constexpr auto bCollapseAllPrefabActorsAfterMapOpened = 0x2d; // bool
		constexpr auto bMoveActorsInWorldAfterSetPrefabPivot = 0x2e; // bool
		constexpr auto bDuplicateNoRevertWithOffset = 0x2f; // bool
		constexpr auto NewPrefabNamePattern = 0x30; // FString
		constexpr auto UITheme = 0x40; // EPTUITheme
		constexpr auto bUpdateAllPrefabActorsWhenOpenMap = 0x44; // bool
		constexpr auto bCheckPrefabChangeBeforeUpdateAllPrefabActorsWhenOpenMap = 0x45; // bool
		constexpr auto bUpdateAllPrefabActorsWhenApply = 0x46; // bool
		constexpr auto bApplyToNestedPrefab = 0x47; // bool
		constexpr auto bEnableApplyFromDisconnectedPrefabActor = 0x48; // bool
		constexpr auto bAutoAddRemoveVariantActorPrefix = 0x49; // bool
		constexpr auto VariantActorPrefix = 0x50; // FString
		constexpr auto bEnablePrefabComponentVisualizer = 0x60; // bool
		constexpr auto PrefabComponentVisualizerType = 0x61; // EPrefabVisualizerType
		constexpr auto bDisplayPrefabComponentVisualizerEvenNotSelected = 0x62; // bool
		constexpr auto PrefabViewVisualizerColor = 0x64; // FColor
		constexpr auto TargetActorColor = 0x68; // FColor
		constexpr auto UnLockedConnectedColor = 0x6c; // FColor
		constexpr auto LockedConnectedColor = 0x70; // FColor
		constexpr auto UnLockedDisConnectedColor = 0x74; // FColor
		constexpr auto LockedDisConnectedColor = 0x78; // FColor
		constexpr auto UnLockedNoPrefabAssignedColor = 0x7c; // FColor
		constexpr auto LockedNoPrefabAssignedColor = 0x80; // FColor
		constexpr auto PrefabMaterialPath = 0x88; // FSoftObjectPath
		constexpr auto bShadedPrefabViewVisualizer = 0xc8; // bool
		constexpr auto bLockPrefabSelectionByDefault = 0xc9; // bool
		constexpr auto bDisableLockPrefabSelectionFeature = 0xca; // bool
		constexpr auto bSupportGroupWhenPasting = 0xcb; // bool
		constexpr auto bForceApplyPerInstanceVertexColor = 0xcc; // bool
		constexpr auto bHideChildActorsInPIEIfHiddenInEditor = 0xcd; // bool
		constexpr auto bCanToggleChildActorVisibilityInPIE = 0xce; // bool
		constexpr auto bIgnoreLayersInPrefab = 0xd0; // bool
		constexpr auto ChangeComponentActor = 0xd8; // TArray<AActor*>
		constexpr auto DefaultActorClass = 0xe8; // AActor*
		constexpr auto bEnabledAutoThumbnail = 0xf0; // bool
		constexpr auto bAutoOpenBlueprintEditor = 0xf1; // bool
		constexpr auto InteriorActorClass = 0xf8; // AActor*
		constexpr auto ExteriorActorClass = 0x100; // AActor*
		constexpr auto InteriorShowActorClass = 0x108; // AActor*
		constexpr auto HouseActorClass = 0x110; // AActor*
		constexpr auto bSupportGenerateBlueprint = 0x118; // bool
		constexpr auto bHarvestComponentsWhenGeneratingBlueprint = 0x119; // bool
		constexpr auto bUseActorNameAsVariableNameWhenGeneratingBlueprint = 0x11a; // bool
		constexpr auto bForceMobilityToMovableWhenGeneratingBlueprint = 0x11b; // bool
		constexpr auto IgnoreActorClassesWhenGeneratingBlueprint = 0x120; // TArray<AActor*>
		constexpr auto IgnoreActorTagsWhenGeneratingBlueprint = 0x130; // TArray<FName>
		constexpr auto bFlashPrefabWindowForTargetPrefabActor = 0x140; // bool
		constexpr auto bEnablePrefabTextEditor = 0x141; // bool
		constexpr auto bDebugMode = 0x142; // bool
		constexpr auto bDisableThumbnailRender = 0x143; // bool
		constexpr auto bShowPrefabInstanceTagInPrefabToolWindow = 0x144; // bool
	}

	namespace n_ANavMeshBoundsVolume {
		constexpr auto SupportedAgents = 0x350; // FNavAgentSelector
	}

	namespace n_UInstancedCollisionComponent {
		constexpr auto StaticMeshComponents = 0xb0; // TArray<UStaticMeshComponent*>
		constexpr auto StaticMeshComponent = 0xd0; // UStaticMeshComponent*
	}

	namespace n_UMaterialExpressionVectorParameter {
		constexpr auto DefaultValue = 0x58; // FLinearColor
		constexpr auto bUseCustomPrimitiveData = 0x68; // bool
		constexpr auto PrimitiveDataIndex = 0x69; // char
	}

	namespace n_UInterpTrackAkAudioRTPC {
		constexpr auto Param = 0x90; // FString
		constexpr auto bPlayOnReverse = 0xa0; // char : 1
		constexpr auto bContinueRTPCOnMatineeEnd = 0xa0; // char : 1
	}

	namespace n_UBravoHotelAnimNotify_AttachMesh {
		constexpr auto StaticMesh = 0x38; // TSoftObjectPtr<UStaticMesh>
		constexpr auto SkeletalMesh = 0x60; // TSoftObjectPtr<USkeletalMesh>
		constexpr auto bUsePhysics = 0x88; // bool
		constexpr auto AttachSocketName = 0x8c; // FName
		constexpr auto AttachDuration = 0x94; // float
		constexpr auto ScalarParamDatas = 0x98; // TArray<FAttachedUsableItem_ScalarParamData>
	}

	namespace n_UUW-Lobby_Craft_WeaponSelect_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto btn_Cancel = 0x250; // UButton*
		constexpr auto btn_Cancel_3 = 0x258; // UButton*
		constexpr auto btn_OK = 0x260; // UButton*
		constexpr auto HorizontalBox_WeaponList = 0x268; // UHorizontalBox*
		constexpr auto Image_68 = 0x270; // UImage*
		constexpr auto Image_128 = 0x278; // UImage*
		constexpr auto UW-Lobby_Craft_WeaponSelect_Slot = 0x280; // UUW-Lobby_Craft_WeaponSelect_Slot_C*
		constexpr auto UW-Lobby_Craft_WeaponSelect_Slot_2 = 0x288; // UUW-Lobby_Craft_WeaponSelect_Slot_C*
		constexpr auto UW-Lobby_Craft_WeaponSelect_Slot_3 = 0x290; // UUW-Lobby_Craft_WeaponSelect_Slot_C*
		constexpr auto EventDispatcher_RequestItemCraft = 0x298; // FMulticastInlineDelegate
		constexpr auto SelectedWidget = 0x2a8; // UUW-Lobby_Craft_WeaponSelect_Slot_C*
		constexpr auto EventDispatcher_Cancel = 0x2b0; // FMulticastInlineDelegate
	}

	namespace n_UUW-Inventory_ProximitySlot_C {
		constexpr auto UberGraphFrame = 0x1358; // FPointerToUberGraphFrame
		constexpr auto P_Upgrade_Arrow = 0x1360; // UWidgetAnimation*
		constexpr auto C_SlotHover_ItemState_Hide = 0x1368; // UWidgetAnimation*
		constexpr auto C_SlotHover_ItemState_Show = 0x1370; // UWidgetAnimation*
		constexpr auto Hover_Gold = 0x1378; // UWidgetAnimation*
		constexpr auto P_SlotHover = 0x1380; // UWidgetAnimation*
		constexpr auto BGImage = 0x1388; // UImage*
		constexpr auto BGImage_2 = 0x1390; // UImage*
		constexpr auto CanvasPanel_ITemState = 0x1398; // UCanvasPanel*
		constexpr auto CanvasPanel_Unnecessary = 0x13a0; // UCanvasPanel*
		constexpr auto Count = 0x13a8; // UTextBlock*
		constexpr auto Crate_Default = 0x13b0; // UImage*
		constexpr auto Crate_Hover = 0x13b8; // UImage*
		constexpr auto DurabilityBar = 0x13c0; // UProgressBar*
		constexpr auto fill = 0x13c8; // UImage*
		constexpr auto HorizontalBox_Rarity = 0x13d0; // UHorizontalBox*
		constexpr auto HoverImage = 0x13d8; // UImage*
		constexpr auto HoverImage_Gold = 0x13e0; // UImage*
		constexpr auto HoverImage_Round = 0x13e8; // UImage*
		constexpr auto Image_1 = 0x13f0; // UImage*
		constexpr auto Image_2 = 0x13f8; // UImage*
		constexpr auto Image_531 = 0x1400; // UImage*
		constexpr auto Image_539 = 0x1408; // UImage*
		constexpr auto Image_540 = 0x1410; // UImage*
		constexpr auto Image_541 = 0x1418; // UImage*
		constexpr auto Image_542 = 0x1420; // UImage*
		constexpr auto Image_543 = 0x1428; // UImage*
		constexpr auto Image_544 = 0x1430; // UImage*
		constexpr auto Image_Bindable = 0x1438; // UImage*
		constexpr auto Image_Supply = 0x1440; // UImage*
		constexpr auto ItemImage = 0x1448; // UImage*
		constexpr auto ItemNameName = 0x1450; // UTextBlock*
		constexpr auto ItemState_Text = 0x1458; // UTextBlock*
		constexpr auto KeepedItem_List = 0x1460; // UImage*
		constexpr auto KeepedItem_ListHover = 0x1468; // UImage*
		constexpr auto LvColor = 0x1470; // UImage*
		constexpr auto NeedMaterial = 0x1478; // UImage*
		constexpr auto SizeBox_1 = 0x1480; // USizeBox*
		constexpr auto TextBlock_Range = 0x1488; // UTextBlock*
		constexpr auto UpgradeItem = 0x1490; // UCanvasPanel*
		constexpr auto UpgradeItem_Arrow01 = 0x1498; // UImage*
		constexpr auto UpgradeItem_Arrow02 = 0x14a0; // UImage*
		constexpr auto UpgradeItem_default = 0x14a8; // UImage*
		constexpr auto UpgradeItem_Hover = 0x14b0; // UImage*
		constexpr auto weapon__ = 0x14b8; // UTextBlock*
		constexpr auto WeaponColorBg = 0x14c0; // UImage*
		constexpr auto WeaponEquipItem_Default = 0x14c8; // UImage*
		constexpr auto WeaponEquipItem_Hover = 0x14d0; // UImage*
		constexpr auto WeaponItemImage = 0x14d8; // UImage*
		constexpr auto WeaponType = 0x14e0; // UTextBlock*
		constexpr auto PickupRef = 0x14e8; // ABravoHotelPickup*
		constexpr auto DroppedItemInfo = 0x14f0; // FInventoryItemInfo
		constexpr auto DropBoxRef = 0x1588; // ABravoHotelDropBoxActor*
		constexpr auto bGold = 0x1590; // bool
		constexpr auto SelectedHoverImage = 0x1598; // UImage*
		constexpr auto WeaponData = 0x15a0; // FBravoHotelWeaponInfo
		constexpr auto MedicalBGColor = 0x20c8; // FLinearColor
		constexpr auto CurCount = 0x20d8; // int32_t
		constexpr auto SetSlotInfo = 0x20e0; // FMulticastInlineDelegate
		constexpr auto TargetActor = 0x20f0; // AActor*
		constexpr auto StealableCharacter = 0x20f8; // ABravoHotelCharacter*
		constexpr auto ShowRarityStar = 0x2100; // TArray<FName>
		constexpr auto ShowIconBG = 0x2110; // TArray<FName>
	}

	namespace n_ABHPersonalSupplyBoxDummy {
		constexpr auto playerGUID = 0x398; // int32_t
	}

	namespace n_UAssetManagerSettings {
		constexpr auto PrimaryAssetTypesToScan = 0x38; // TArray<FPrimaryAssetTypeInfo>
		constexpr auto DirectoriesToExclude = 0x48; // TArray<FDirectoryPath>
		constexpr auto PrimaryAssetRules = 0x58; // TArray<FPrimaryAssetRulesOverride>
		constexpr auto CustomPrimaryAssetRules = 0x68; // TArray<FPrimaryAssetRulesCustomOverride>
		constexpr auto bOnlyCookProductionAssets = 0x78; // bool
		constexpr auto bShouldManagerDetermineTypeAndName = 0x79; // bool
		constexpr auto bShouldGuessTypeAndNameInEditor = 0x7a; // bool
		constexpr auto bShouldAcquireMissingChunksOnLoad = 0x7b; // bool
		constexpr auto PrimaryAssetIdRedirects = 0x80; // TArray<FAssetManagerRedirect>
		constexpr auto PrimaryAssetTypeRedirects = 0x90; // TArray<FAssetManagerRedirect>
		constexpr auto AssetPathRedirects = 0xa0; // TArray<FAssetManagerRedirect>
		constexpr auto MetaDataTagsForAssetRegistry = 0xb0; // TSet<FName>
		constexpr auto bUsePathExcludedFromScan = 0x100; // bool
		constexpr auto bRemoveRedundantDirectroyChunks = 0x101; // bool
	}

	namespace n_UMaterialExpressionConstant2Vector {
		constexpr auto R = 0x40; // float
		constexpr auto G = 0x44; // float
	}

	namespace n_ALandscapeMeshProxyActor {
		constexpr auto LandscapeMeshProxyComponent = 0x318; // ULandscapeMeshProxyComponent*
	}

	namespace n_UUW-Lobby_WeaponInfo_Option_Slot_C {
		constexpr auto T_Desc = 0x248; // UTextBlock*
		constexpr auto UW-Lobby_WeaponInfo_RandomOption_Slot_3 = 0x250; // UUW-Lobby_WeaponInfo_Option_Slot_Icon_C*
		constexpr auto ItemOption = 0x258; // FItemOption
	}

	namespace n_UCoherentUIGTHUD {
		constexpr auto HUDMaterialName = 0x230; // FSoftObjectPath
		constexpr auto HUDMaterial = 0x248; // UMaterial*
		constexpr auto HUDMaterialInstance = 0x250; // UMaterialInstanceDynamic*
	}

	namespace n_UMaterialExpressionShadingPathSwitch {
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto Inputs = 0x54; // FExpressionInput [0x3]
	}

	namespace n_UUW-ListWidget_MyKillMessage_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Anim_KillMessage = 0x268; // UWidgetAnimation*
		constexpr auto T_Message = 0x270; // UTextBlock*
	}

	namespace n_ANavigationData {
		constexpr auto RenderingComp = 0x320; // UPrimitiveComponent*
		constexpr auto NavDataConfig = 0x328; // FNavDataConfig
		constexpr auto bEnableDrawing = 0x3a0; // char : 1
		constexpr auto bForceRebuildOnLoad = 0x3a0; // char : 1
		constexpr auto bAutoDestroyWhenNoNavigation = 0x3a0; // char : 1
		constexpr auto bCanBeMainNavData = 0x3a0; // char : 1
		constexpr auto bCanSpawnOnRebuild = 0x3a0; // char : 1
		constexpr auto bRebuildAtRuntime = 0x3a0; // char : 1
		constexpr auto RuntimeGeneration = 0x3a4; // ERuntimeGenerationType
		constexpr auto ObservedPathsTickInterval = 0x3a8; // float
		constexpr auto DataVersion = 0x3ac; // uint32_t
		constexpr auto SupportedAreas = 0x490; // TArray<FSupportedAreaData>
	}

	namespace n_UMaterialExpressionStaticComponentMaskParameter {
		constexpr auto Input = 0x58; // FExpressionInput
		constexpr auto DefaultR = 0x6c; // char : 1
		constexpr auto DefaultG = 0x6c; // char : 1
		constexpr auto DefaultB = 0x6c; // char : 1
		constexpr auto DefaultA = 0x6c; // char : 1
	}

	namespace n_UMovieSceneByteSection {
		constexpr auto ByteCurve = 0xe0; // FMovieSceneByteChannel
	}

	namespace n_UMaterialExpressionSceneDepth {
		constexpr auto InputMode = 0x40; // EMaterialSceneAttributeInputMode
		constexpr auto Input = 0x44; // FExpressionInput
		constexpr auto Coordinates = 0x58; // FExpressionInput
		constexpr auto ConstInput = 0x6c; // FVector2D
	}

	namespace n_UMovieSceneSkeletalAnimationSection {
		constexpr auto Params = 0xe0; // FMovieSceneSkeletalAnimationParams
		constexpr auto AnimSequence = 0x1b8; // UAnimSequence*
		constexpr auto Animation = 0x1c0; // UAnimSequenceBase*
		constexpr auto StartOffset = 0x1c8; // float
		constexpr auto EndOffset = 0x1cc; // float
		constexpr auto PlayRate = 0x1d0; // float
		constexpr auto bReverse = 0x1d4; // char : 1
		constexpr auto SlotName = 0x1d8; // FName
	}

	namespace n_UEngine {
		constexpr auto TinyFont = 0x30; // UFont*
		constexpr auto TinyFontName = 0x38; // FSoftObjectPath
		constexpr auto SmallFont = 0x50; // UFont*
		constexpr auto SmallFontName = 0x58; // FSoftObjectPath
		constexpr auto MediumFont = 0x70; // UFont*
		constexpr auto MediumFontName = 0x78; // FSoftObjectPath
		constexpr auto LargeFont = 0x90; // UFont*
		constexpr auto LargeFontName = 0x98; // FSoftObjectPath
		constexpr auto SubtitleFont = 0xb0; // UFont*
		constexpr auto SubtitleFontName = 0xb8; // FSoftObjectPath
		constexpr auto AdditionalFonts = 0xd0; // TArray<UFont*>
		constexpr auto AdditionalFontNames = 0xe8; // TArray<FString>
		constexpr auto ConsoleClass = 0xf8; // UConsole*
		constexpr auto ConsoleClassName = 0x100; // FSoftClassPath
		constexpr auto GameViewportClientClass = 0x118; // UGameViewportClient*
		constexpr auto GameViewportClientClassName = 0x120; // FSoftClassPath
		constexpr auto LocalPlayerClass = 0x138; // ULocalPlayer*
		constexpr auto LocalPlayerClassName = 0x140; // FSoftClassPath
		constexpr auto WorldSettingsClass = 0x158; // AWorldSettings*
		constexpr auto WorldSettingsClassName = 0x160; // FSoftClassPath
		constexpr auto NavigationSystemClassName = 0x178; // FSoftClassPath
		constexpr auto NavigationSystemClass = 0x190; // UNavigationSystemBase*
		constexpr auto NavigationSystemConfigClassName = 0x198; // FSoftClassPath
		constexpr auto NavigationSystemConfigClass = 0x1b0; // UNavigationSystemConfig*
		constexpr auto AvoidanceManagerClassName = 0x1b8; // FSoftClassPath
		constexpr auto AvoidanceManagerClass = 0x1d0; // UAvoidanceManager*
		constexpr auto PhysicsCollisionHandlerClass = 0x1d8; // UPhysicsCollisionHandler*
		constexpr auto PhysicsCollisionHandlerClassName = 0x1e0; // FSoftClassPath
		constexpr auto GameUserSettingsClassName = 0x1f8; // FSoftClassPath
		constexpr auto GameUserSettingsClass = 0x210; // UGameUserSettings*
		constexpr auto AIControllerClassName = 0x218; // FSoftClassPath
		constexpr auto GameUserSettings = 0x230; // UGameUserSettings*
		constexpr auto LevelScriptActorClass = 0x238; // ALevelScriptActor*
		constexpr auto LevelScriptActorClassName = 0x240; // FSoftClassPath
		constexpr auto DefaultBlueprintBaseClassName = 0x258; // FSoftClassPath
		constexpr auto GameSingletonClassName = 0x270; // FSoftClassPath
		constexpr auto GameSingleton = 0x288; // UObject*
		constexpr auto AssetManagerClassName = 0x290; // FSoftClassPath
		constexpr auto AssetManager = 0x2a8; // UAssetManager*
		constexpr auto DefaultTexture = 0x2b0; // UTexture2D*
		constexpr auto DefaultTextureName = 0x2b8; // FSoftObjectPath
		constexpr auto DefaultDiffuseTexture = 0x2d0; // UTexture*
		constexpr auto DefaultDiffuseTextureName = 0x2d8; // FSoftObjectPath
		constexpr auto DefaultBSPVertexTexture = 0x2f0; // UTexture2D*
		constexpr auto DefaultBSPVertexTextureName = 0x2f8; // FSoftObjectPath
		constexpr auto HighFrequencyNoiseTexture = 0x310; // UTexture2D*
		constexpr auto HighFrequencyNoiseTextureName = 0x318; // FSoftObjectPath
		constexpr auto DefaultBokehTexture = 0x330; // UTexture2D*
		constexpr auto DefaultBokehTextureName = 0x338; // FSoftObjectPath
		constexpr auto DefaultBloomKernelTexture = 0x350; // UTexture2D*
		constexpr auto DefaultBloomKernelTextureName = 0x358; // FSoftObjectPath
		constexpr auto WireframeMaterial = 0x370; // UMaterial*
		constexpr auto WireframeMaterialName = 0x378; // FString
		constexpr auto DebugMeshMaterial = 0x388; // UMaterial*
		constexpr auto DebugMeshMaterialName = 0x390; // FSoftObjectPath
		constexpr auto EmissiveMeshMaterial = 0x3a8; // UMaterial*
		constexpr auto EmissiveMeshMaterialName = 0x3b0; // FSoftObjectPath
		constexpr auto LevelColorationLitMaterial = 0x3c8; // UMaterial*
		constexpr auto LevelColorationLitMaterialName = 0x3d0; // FString
		constexpr auto LevelColorationUnlitMaterial = 0x3e0; // UMaterial*
		constexpr auto LevelColorationUnlitMaterialName = 0x3e8; // FString
		constexpr auto LightingTexelDensityMaterial = 0x3f8; // UMaterial*
		constexpr auto LightingTexelDensityName = 0x400; // FString
		constexpr auto ShadedLevelColorationLitMaterial = 0x410; // UMaterial*
		constexpr auto ShadedLevelColorationLitMaterialName = 0x418; // FString
		constexpr auto ShadedLevelColorationUnlitMaterial = 0x428; // UMaterial*
		constexpr auto ShadedLevelColorationUnlitMaterialName = 0x430; // FString
		constexpr auto RemoveSurfaceMaterial = 0x440; // UMaterial*
		constexpr auto RemoveSurfaceMaterialName = 0x448; // FSoftObjectPath
		constexpr auto VertexColorMaterial = 0x460; // UMaterial*
		constexpr auto VertexColorMaterialName = 0x468; // FString
		constexpr auto VertexColorViewModeMaterial_ColorOnly = 0x478; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_ColorOnly = 0x480; // FString
		constexpr auto VertexColorViewModeMaterial_AlphaAsColor = 0x490; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_AlphaAsColor = 0x498; // FString
		constexpr auto VertexColorViewModeMaterial_RedOnly = 0x4a8; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_RedOnly = 0x4b0; // FString
		constexpr auto VertexColorViewModeMaterial_GreenOnly = 0x4c0; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_GreenOnly = 0x4c8; // FString
		constexpr auto VertexColorViewModeMaterial_BlueOnly = 0x4d8; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_BlueOnly = 0x4e0; // FString
		constexpr auto DebugEditorMaterialName = 0x4f0; // FSoftObjectPath
		constexpr auto ConstraintLimitMaterial = 0x508; // UMaterial*
		constexpr auto ConstraintLimitMaterialX = 0x510; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialXAxis = 0x518; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialY = 0x520; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialYAxis = 0x528; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialZ = 0x530; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialZAxis = 0x538; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialPrismatic = 0x540; // UMaterialInstanceDynamic*
		constexpr auto InvalidLightmapSettingsMaterial = 0x548; // UMaterial*
		constexpr auto InvalidLightmapSettingsMaterialName = 0x550; // FSoftObjectPath
		constexpr auto PreviewShadowsIndicatorMaterial = 0x568; // UMaterial*
		constexpr auto PreviewShadowsIndicatorMaterialName = 0x570; // FSoftObjectPath
		constexpr auto ArrowMaterial = 0x588; // UMaterial*
		constexpr auto ArrowMaterialYellow = 0x590; // UMaterialInstanceDynamic*
		constexpr auto ArrowMaterialName = 0x598; // FSoftObjectPath
		constexpr auto LightingOnlyBrightness = 0x5b0; // FLinearColor
		constexpr auto ShaderComplexityColors = 0x5c0; // TArray<FLinearColor>
		constexpr auto QuadComplexityColors = 0x5d0; // TArray<FLinearColor>
		constexpr auto LightComplexityColors = 0x5e0; // TArray<FLinearColor>
		constexpr auto StationaryLightOverlapColors = 0x5f0; // TArray<FLinearColor>
		constexpr auto LODColorationColors = 0x600; // TArray<FLinearColor>
		constexpr auto HLODColorationColors = 0x610; // TArray<FLinearColor>
		constexpr auto StreamingAccuracyColors = 0x620; // TArray<FLinearColor>
		constexpr auto MaxPixelShaderAdditiveComplexityCount = 0x630; // float
		constexpr auto MaxES3PixelShaderAdditiveComplexityCount = 0x634; // float
		constexpr auto MinLightMapDensity = 0x638; // float
		constexpr auto IdealLightMapDensity = 0x63c; // float
		constexpr auto MaxLightMapDensity = 0x640; // float
		constexpr auto bRenderLightMapDensityGrayscale = 0x644; // char : 1
		constexpr auto RenderLightMapDensityGrayscaleScale = 0x648; // float
		constexpr auto RenderLightMapDensityColorScale = 0x64c; // float
		constexpr auto LightMapDensityVertexMappedColor = 0x650; // FLinearColor
		constexpr auto LightMapDensitySelectedColor = 0x660; // FLinearColor
		constexpr auto StatColorMappings = 0x670; // TArray<FStatColorMapping>
		constexpr auto DefaultPhysMaterial = 0x680; // UPhysicalMaterial*
		constexpr auto DefaultPhysMaterialName = 0x688; // FSoftObjectPath
		constexpr auto ActiveGameNameRedirects = 0x6a0; // TArray<FGameNameRedirect>
		constexpr auto ActiveClassRedirects = 0x6b0; // TArray<FClassRedirect>
		constexpr auto ActivePluginRedirects = 0x6c0; // TArray<FPluginRedirect>
		constexpr auto ActiveStructRedirects = 0x6d0; // TArray<FStructRedirect>
		constexpr auto PreIntegratedSkinBRDFTexture = 0x6e0; // UTexture2D*
		constexpr auto PreIntegratedSkinBRDFTextureName = 0x6e8; // FSoftObjectPath
		constexpr auto BlueNoiseTexture = 0x700; // UTexture2D*
		constexpr auto BlueNoiseTextureName = 0x708; // FSoftObjectPath
		constexpr auto MiniFontTexture = 0x720; // UTexture2D*
		constexpr auto MiniFontTextureName = 0x728; // FSoftObjectPath
		constexpr auto WeightMapPlaceholderTexture = 0x740; // UTexture*
		constexpr auto WeightMapPlaceholderTextureName = 0x748; // FSoftObjectPath
		constexpr auto LightMapDensityTexture = 0x760; // UTexture2D*
		constexpr auto LightMapDensityTextureName = 0x768; // FSoftObjectPath
		constexpr auto GameViewport = 0x788; // UGameViewportClient*
		constexpr auto DeferredCommands = 0x790; // TArray<FString>
		constexpr auto TickCycles = 0x7a0; // int32_t
		constexpr auto GameCycles = 0x7a4; // int32_t
		constexpr auto ClientCycles = 0x7a8; // int32_t
		constexpr auto NearClipPlane = 0x7ac; // float
		constexpr auto EditorNearClipPlane = 0x7b0; // float
		constexpr auto bUseCustomAudioModule = 0x7b4; // bool
		constexpr auto bHardwareSurveyEnabled = 0x7b8; // char : 1
		constexpr auto bSubtitlesEnabled = 0x7b8; // char : 1
		constexpr auto bSubtitlesForcedOff = 0x7b8; // char : 1
		constexpr auto MaximumLoopIterationCount = 0x7bc; // int32_t
		constexpr auto bCanBlueprintsTickByDefault = 0x7c0; // char : 1
		constexpr auto bOptimizeAnimBlueprintMemberVariableAccess = 0x7c0; // char : 1
		constexpr auto bAllowMultiThreadedAnimationUpdate = 0x7c0; // char : 1
		constexpr auto bEnableEditorPSysRealtimeLOD = 0x7c0; // char : 1
		constexpr auto bSmoothFrameRate = 0x7c0; // char : 1
		constexpr auto bUseFixedFrameRate = 0x7c0; // char : 1
		constexpr auto FixedFrameRate = 0x7c4; // float
		constexpr auto SmoothedFrameRateRange = 0x7c8; // FFloatRange
		constexpr auto CustomTimeStep = 0x7d8; // UEngineCustomTimeStep*
		constexpr auto CustomTimeStepClassName = 0x800; // FSoftClassPath
		constexpr auto TimecodeProvider = 0x818; // UTimecodeProvider*
		constexpr auto TimecodeProviderClassName = 0x840; // FSoftClassPath
		constexpr auto bGenerateDefaultTimecode = 0x858; // bool
		constexpr auto GenerateDefaultTimecodeFrameRate = 0x85c; // FFrameRate
		constexpr auto GenerateDefaultTimecodeFrameDelay = 0x864; // float
		constexpr auto bCheckForMultiplePawnsSpawnedInAFrame = 0x868; // char : 1
		constexpr auto NumPawnsAllowedToBeSpawnedInAFrame = 0x86c; // int32_t
		constexpr auto bShouldGenerateLowQualityLightmaps = 0x870; // char : 1
		constexpr auto C_WorldBox = 0x874; // FColor
		constexpr auto C_BrushWire = 0x878; // FColor
		constexpr auto C_AddWire = 0x87c; // FColor
		constexpr auto C_SubtractWire = 0x880; // FColor
		constexpr auto C_SemiSolidWire = 0x884; // FColor
		constexpr auto C_NonSolidWire = 0x888; // FColor
		constexpr auto C_WireBackground = 0x88c; // FColor
		constexpr auto C_ScaleBoxHi = 0x890; // FColor
		constexpr auto C_VolumeCollision = 0x894; // FColor
		constexpr auto C_BSPCollision = 0x898; // FColor
		constexpr auto C_OrthoBackground = 0x89c; // FColor
		constexpr auto C_Volume = 0x8a0; // FColor
		constexpr auto C_BrushShape = 0x8a4; // FColor
		constexpr auto StreamingDistanceFactor = 0x8a8; // float
		constexpr auto GameScreenshotSaveDirectory = 0x8b0; // FDirectoryPath
		constexpr auto TransitionType = 0x8c0; // ETransitionType
		constexpr auto TransitionDescription = 0x8c8; // FString
		constexpr auto TransitionGameMode = 0x8d8; // FString
		constexpr auto MeshLODRange = 0x8e8; // float
		constexpr auto bAllowMatureLanguage = 0x8ec; // char : 1
		constexpr auto CameraRotationThreshold = 0x8f0; // float
		constexpr auto CameraTranslationThreshold = 0x8f4; // float
		constexpr auto PrimitiveProbablyVisibleTime = 0x8f8; // float
		constexpr auto MaxOcclusionPixelsFraction = 0x8fc; // float
		constexpr auto bPauseOnLossOfFocus = 0x900; // char : 1
		constexpr auto MaxParticleResize = 0x904; // int32_t
		constexpr auto MaxParticleResizeWarn = 0x908; // int32_t
		constexpr auto PendingDroppedNotes = 0x910; // TArray<FDropNoteInfo>
		constexpr auto NetClientTicksPerSecond = 0x920; // float
		constexpr auto DisplayGamma = 0x924; // float
		constexpr auto MinDesiredFrameRate = 0x928; // float
		constexpr auto DefaultSelectedMaterialColor = 0x92c; // FLinearColor
		constexpr auto SelectedMaterialColor = 0x93c; // FLinearColor
		constexpr auto SelectionOutlineColor = 0x94c; // FLinearColor
		constexpr auto SubduedSelectionOutlineColor = 0x95c; // FLinearColor
		constexpr auto SelectedMaterialColorOverride = 0x96c; // FLinearColor
		constexpr auto bIsOverridingSelectedColor = 0x97c; // bool
		constexpr auto bEnableOnScreenDebugMessages = 0x980; // char : 1
		constexpr auto bEnableOnScreenDebugMessagesDisplay = 0x980; // char : 1
		constexpr auto bSuppressMapWarnings = 0x980; // char : 1
		constexpr auto bDisableAILogging = 0x980; // char : 1
		constexpr auto bEnableVisualLogRecordingOnStart = 0x984; // uint32_t
		constexpr auto ScreenSaverInhibitorSemaphore = 0x98c; // int32_t
		constexpr auto bLockReadOnlyLevels = 0x990; // char : 1
		constexpr auto ParticleEventManagerClassPath = 0x998; // FString
		constexpr auto SelectionHighlightIntensity = 0x9a8; // float
		constexpr auto BSPSelectionHighlightIntensity = 0x9ac; // float
		constexpr auto SelectionHighlightIntensityBillboards = 0x9b0; // float
		constexpr auto NetDriverDefinitions = 0xc00; // TArray<FNetDriverDefinition>
		constexpr auto ServerActors = 0xc10; // TArray<FString>
		constexpr auto RuntimeServerActors = 0xc20; // TArray<FString>
		constexpr auto NetErrorLogInterval = 0xc30; // float
		constexpr auto bStartedLoadMapMovie = 0xc34; // char : 1
		constexpr auto NextWorldContextHandle = 0xc50; // int32_t
	}

	namespace n_UGarbageCollectionSettings {
		constexpr auto TimeBetweenPurgingPendingKillObjects = 0x38; // float
		constexpr auto FlushStreamingOnGC = 0x3c; // char : 1
		constexpr auto AllowParallelGC = 0x3c; // char : 1
		constexpr auto IncrementalBeginDestroyEnabled = 0x3c; // char : 1
		constexpr auto MultithreadedDestructionEnabled = 0x3c; // char : 1
		constexpr auto CreateGCClusters = 0x3c; // char : 1
		constexpr auto AssetClusteringEnabled = 0x3c; // char : 1
		constexpr auto ActorClusteringEnabled = 0x3c; // char : 1
		constexpr auto BlueprintClusteringEnabled = 0x3c; // char : 1
		constexpr auto UseDisregardForGCOnDedicatedServers = 0x3d; // char : 1
		constexpr auto MinGCClusterSize = 0x40; // int32_t
		constexpr auto NumRetriesBeforeForcingGC = 0x44; // int32_t
		constexpr auto MaxObjectsNotConsideredByGC = 0x48; // int32_t
		constexpr auto SizeOfPermanentObjectPool = 0x4c; // int32_t
		constexpr auto MaxObjectsInGame = 0x50; // int32_t
		constexpr auto MaxObjectsInEditor = 0x54; // int32_t
	}

	namespace n_UBravoHotelPersonalSupplyBoxSlotItemWidget {
		constexpr auto IsWeaponData = 0x248; // bool
		constexpr auto IsConsumableItemData = 0x249; // bool
		constexpr auto WeaponItemData = 0x250; // FInventoryItemInfo
		constexpr auto ConsumableItemData = 0x2e8; // FSupplyItem
	}

	namespace n_UUW-MatchEnd_ButtonBase_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Button = 0x250; // UButton*
		constexpr auto Button_Text = 0x258; // UTextBlock*
		constexpr auto Overlay_Button = 0x260; // UOverlay*
		constexpr auto ButtonText = 0x268; // FText
		constexpr auto OnClicked = 0x280; // FMulticastInlineDelegate
		constexpr auto OnPressed = 0x290; // FMulticastInlineDelegate
		constexpr auto OnReleased = 0x2a0; // FMulticastInlineDelegate
		constexpr auto OnHovered = 0x2b0; // FMulticastInlineDelegate
	}

	namespace n_ULadderComponent {
		constexpr auto OwnerPawn = 0xc0; // ABravoHotelCharacter*
		constexpr auto LadderState = 0xc8; // ELadderState
		constexpr auto UsingLadder = 0xd0; // ABravoHotelLadder*
		constexpr auto IsPawnOnLadder = 0xd8; // bool
		constexpr auto IsTopStart = 0xd9; // bool
		constexpr auto LadderPos = 0xdc; // float
		constexpr auto LadderInteractionType = 0xe0; // ELadderInteractionType
		constexpr auto LadderSlideLoopEvent = 0xe8; // UAkAudioEvent*
		constexpr auto LadderSlideStopEvent = 0xf0; // UAkAudioEvent*
		constexpr auto PreMaxFlySpeed = 0x100; // float
		constexpr auto PreBrakingDecelerationFlying = 0x104; // float
		constexpr auto DefaultMaxFlySpeed = 0x108; // float
		constexpr auto SpeedScaleByBuff = 0x10c; // float
		constexpr auto WantedBrakingDecelerationFlying = 0x110; // float
		constexpr auto SprintingSpeedScale = 0x114; // float
		constexpr auto SlidingSpeedScale = 0x118; // float
		constexpr auto IsSnapping = 0x11c; // bool
		constexpr auto IsDirectSnap = 0x11d; // bool
		constexpr auto SnappingSpeed = 0x120; // float
		constexpr auto SnappingTime = 0x124; // float
		constexpr auto MinSnappingTime = 0x128; // float
		constexpr auto CrntSnappingTime = 0x12c; // float
		constexpr auto OriginLocation = 0x130; // FVector
		constexpr auto TargetLocation = 0x13c; // FVector
		constexpr auto OriginRotation = 0x148; // FRotator
		constexpr auto TargetRotation = 0x154; // FRotator
		constexpr auto IsMoveInMotion = 0x160; // bool
		constexpr auto AnimBlendTime = 0x164; // float
		constexpr auto AM_DownIn = 0x168; // UAnimMontage*
		constexpr auto AM_UpIn = 0x170; // UAnimMontage*
		constexpr auto AM_DownOut = 0x178; // UAnimMontage*
		constexpr auto AM_DownOut_R = 0x180; // UAnimMontage*
		constexpr auto AM_UpOut = 0x188; // UAnimMontage*
		constexpr auto AM_UpOut_R = 0x190; // UAnimMontage*
		constexpr auto AM_SlideOut = 0x198; // UAnimMontage*
		constexpr auto CrntMontage = 0x1a0; // UAnimMontage*
		constexpr auto CurveVector_DownIn = 0x1a8; // UCurveVector*
		constexpr auto CurveVector_UpIn = 0x1b0; // UCurveVector*
		constexpr auto CurveVector_DownOut = 0x1b8; // UCurveVector*
		constexpr auto CurveVector_DownOut_R = 0x1c0; // UCurveVector*
		constexpr auto CurveVector_UpOut = 0x1c8; // UCurveVector*
		constexpr auto CurveVector_UpOut_R = 0x1d0; // UCurveVector*
		constexpr auto CurveVector_SlideOut = 0x1d8; // UCurveVector*
		constexpr auto CrntCurveVector = 0x1e0; // UCurveVector*
		constexpr auto Curve_CameraIn = 0x1e8; // UCurveFloat*
		constexpr auto Curve_CameraInHeight = 0x1f0; // UCurveFloat*
		constexpr auto Curve_CameraSecond = 0x1f8; // UCurveFloat*
		constexpr auto Curve_CameraSecondHeight = 0x200; // UCurveFloat*
		constexpr auto Curve_CameraOut = 0x208; // UCurveFloat*
	}

	namespace n_UUW-PersonalSupplyBoxWeaponInfoWidget_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto AmmoImage = 0x250; // UImage*
		constexpr auto AmmoText = 0x258; // UTextBlock*
		constexpr auto Button_2 = 0x260; // UButton*
		constexpr auto CanvasPanel_98 = 0x268; // UCanvasPanel*
		constexpr auto HorizontalBox_Perk = 0x270; // UHorizontalBox*
		constexpr auto HorizontalBox_Rarity = 0x278; // UHorizontalBox*
		constexpr auto Image = 0x280; // UImage*
		constexpr auto Image_369 = 0x288; // UImage*
		constexpr auto Image_704 = 0x290; // UImage*
		constexpr auto Image_874 = 0x298; // UImage*
		constexpr auto Image_924 = 0x2a0; // UImage*
		constexpr auto Image_1262 = 0x2a8; // UImage*
		constexpr auto Image_1400 = 0x2b0; // UImage*
		constexpr auto Reinforce = 0x2b8; // UTextBlock*
		constexpr auto TextBlock_291 = 0x2c0; // UTextBlock*
		constexpr auto UW-Inventory_WeaponPerkSlot = 0x2c8; // UUW-Inventory_WeaponPerkSlot_C*
		constexpr auto UW-Inventory_WeaponPerkSlot_C_2 = 0x2d0; // UUW-Inventory_WeaponPerkSlot_C*
		constexpr auto UW-Inventory_WeaponPerkSlot_C_3 = 0x2d8; // UUW-Inventory_WeaponPerkSlot_C*
		constexpr auto WeaponBg = 0x2e0; // UImage*
		constexpr auto WeaponImage01 = 0x2e8; // UImage*
		constexpr auto WeaponName = 0x2f0; // UTextBlock*
		constexpr auto WidgetSwitcher_1 = 0x2f8; // UWidgetSwitcher*
		constexpr auto DraggedWidget = 0x300; // UUW-Inventory_DragItem_C*
		constexpr auto WeaponData = 0x308; // FInventoryItemInfo
		constexpr auto OnDropEventDispatcher = 0x3a0; // FMulticastInlineDelegate
		constexpr auto AmmorKey = 0x3b0; // FName
		constexpr auto ShowToolTipEventDispatcher = 0x3b8; // FMulticastInlineDelegate
		constexpr auto IsDefaultWeapon = 0x3c8; // bool
		constexpr auto ClickNum = 0x3cc; // int32_t
		constexpr auto OnDefaultWeaponEventDispatcher = 0x3d0; // FMulticastInlineDelegate
		constexpr auto SaveKey = 0x3e0; // FKey
	}

	namespace n_ASkeletalMeshActor {
		constexpr auto bShouldDoAnimNotifies = 0x320; // char : 1
		constexpr auto bWakeOnLevelStart = 0x320; // char : 1
		constexpr auto SkeletalMeshComponent = 0x328; // USkeletalMeshComponent*
		constexpr auto ReplicatedMesh = 0x330; // USkeletalMesh*
		constexpr auto ReplicatedPhysAsset = 0x338; // UPhysicsAsset*
		constexpr auto ReplicatedMaterial0 = 0x340; // UMaterialInterface*
		constexpr auto ReplicatedMaterial1 = 0x348; // UMaterialInterface*
	}

	namespace n_UPanelSlot {
		constexpr auto Parent = 0x28; // UPanelWidget*
		constexpr auto Content = 0x30; // UWidget*
	}

	namespace n_UEndTurnCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UBravoHotelCompassWidget {
		constexpr auto Length = 0x250; // float
		constexpr auto ArragnedAngle = 0x254; // float
		constexpr auto AngleBetweenUnits = 0x258; // float
		constexpr auto DefaultLengthRate = 0x25c; // float
		constexpr auto AdditionalLengthRate = 0x260; // float
		constexpr auto PersonalSupplyBoxMarkerInfo = 0x278; // FMarkerInfo
		constexpr auto MarkerInfos = 0x2a0; // TArray<FMarkerInfo>
		constexpr auto MaterialItemMarkerInfos = 0x2b0; // TArray<FMaterialItemMarkerInfo>
		constexpr auto LocalPingMarkerInfos = 0x2c0; // TArray<FLocalPingMarkerInfo>
		constexpr auto ResuscitationMarkerInfos = 0x2d0; // TArray<FResuscitationMarkerInfo>
		constexpr auto ExpertWeaponItemMarkerInfo = 0x2e0; // FExpertWeaponItemMarkerInfo
		constexpr auto UnitArray = 0x320; // TArray<FCompassUnit>
		constexpr auto UnitArray2 = 0x330; // TArray<FCompassUnit>
		constexpr auto ScaleCurve = 0x340; // UCurveFloat*
	}

	namespace n_AReflectionCapture {
		constexpr auto CaptureComponent = 0x318; // UReflectionCaptureComponent*
	}

	namespace n_UBravoHotelAnimNotify_PlayMontageOnInteractedTarget {
		constexpr auto TargetMontage = 0x38; // UAnimMontage*
		constexpr auto PlayRate = 0x40; // float
		constexpr auto StartSectionName = 0x44; // FName
	}

	namespace n_UAISense_Damage {
		constexpr auto RegisteredEvents = 0x80; // TArray<FAIDamageEvent>
	}

	namespace n_UUW-StatupWidget_Item_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Anim_TextBg = 0x250; // UWidgetAnimation*
		constexpr auto HorizontalBox_Damage = 0x258; // UHorizontalBox*
		constexpr auto Image_145 = 0x260; // UImage*
		constexpr auto Image_155 = 0x268; // UImage*
		constexpr auto T_StatName = 0x270; // UTextBlock*
		constexpr auto T_Value = 0x278; // UTextBlock*
		constexpr auto Text_StatName = 0x280; // FText
	}

	namespace n_UUW-ReplayListWidget_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Button_Delete = 0x268; // UButton*
		constexpr auto Button_Keep = 0x270; // UButton*
		constexpr auto Button_OldFileDelete = 0x278; // UButton*
		constexpr auto Button_Play = 0x280; // UButton*
		constexpr auto Button_Refresh = 0x288; // UButton*
		constexpr auto DetailInfo = 0x290; // USizeBox*
		constexpr auto HorizontalBox_3 = 0x298; // UHorizontalBox*
		constexpr auto HorizontalBox_4 = 0x2a0; // UHorizontalBox*
		constexpr auto HorizontalBox_5 = 0x2a8; // UHorizontalBox*
		constexpr auto HorizontalBox_01 = 0x2b0; // UHorizontalBox*
		constexpr auto HorizontalBox_Version = 0x2b8; // UHorizontalBox*
		constexpr auto Image_1 = 0x2c0; // UImage*
		constexpr auto Image_483 = 0x2c8; // UImage*
		constexpr auto Image_1010 = 0x2d0; // UImage*
		constexpr auto Image_2531 = 0x2d8; // UImage*
		constexpr auto Image_2533 = 0x2e0; // UImage*
		constexpr auto Image_2535 = 0x2e8; // UImage*
		constexpr auto Image_3059 = 0x2f0; // UImage*
		constexpr auto Image_3229 = 0x2f8; // UImage*
		constexpr auto Image_3231 = 0x300; // UImage*
		constexpr auto Image_ = 0x308; // UImage*
		constexpr auto Image_ClassImage = 0x310; // UImage*
		constexpr auto Image_Icon1 = 0x318; // UImage*
		constexpr auto Image_Icon2 = 0x320; // UImage*
		constexpr auto Image_Icon3 = 0x328; // UImage*
		constexpr auto Image_Icon4 = 0x330; // UImage*
		constexpr auto Image_MapImage = 0x338; // UImage*
		constexpr auto Overlay = 0x340; // UOverlay*
		constexpr auto ReplayListBox = 0x348; // UScrollBox*
		constexpr auto TextBlock_2388 = 0x350; // UTextBlock*
		constexpr auto TextBlock_BattleMode = 0x358; // UTextBlock*
		constexpr auto TextBlock_BlueZoneMaxPlayerCount = 0x360; // UTextBlock*
		constexpr auto TextBlock_BlueZoneTitle = 0x368; // UTextBlock*
		constexpr auto TextBlock_ClassLevel1 = 0x370; // UTextBlock*
		constexpr auto TextBlock_ClassLevel2 = 0x378; // UTextBlock*
		constexpr auto TextBlock_ClassLevel3 = 0x380; // UTextBlock*
		constexpr auto TextBlock_ClassLevel4 = 0x388; // UTextBlock*
		constexpr auto TextBlock_ClassName1 = 0x390; // UTextBlock*
		constexpr auto TextBlock_ClassName2 = 0x398; // UTextBlock*
		constexpr auto TextBlock_ClassName3 = 0x3a0; // UTextBlock*
		constexpr auto TextBlock_ClassName4 = 0x3a8; // UTextBlock*
		constexpr auto TextBlock_CurrentFileCount = 0x3b0; // UTextBlock*
		constexpr auto TextBlock_Damage = 0x3b8; // UTextBlock*
		constexpr auto TextBlock_FPP = 0x3c0; // UTextBlock*
		constexpr auto TextBlock_Keep = 0x3c8; // UTextBlock*
		constexpr auto TextBlock_Kill = 0x3d0; // UTextBlock*
		constexpr auto TextBlock_LifeTime = 0x3d8; // UTextBlock*
		constexpr auto TextBlock_MapName = 0x3e0; // UTextBlock*
		constexpr auto TextBlock_Name1 = 0x3e8; // UTextBlock*
		constexpr auto TextBlock_Name2 = 0x3f0; // UTextBlock*
		constexpr auto TextBlock_Name3 = 0x3f8; // UTextBlock*
		constexpr auto TextBlock_Name4 = 0x400; // UTextBlock*
		constexpr auto TextBlock_Rank = 0x408; // UTextBlock*
		constexpr auto TextBlock_Time = 0x410; // UTextBlock*
		constexpr auto TextBlock_TotalPlayerCount = 0x418; // UTextBlock*
		constexpr auto TextBlock_TotalSize = 0x420; // UTextBlock*
		constexpr auto TextBlock_Weapon1 = 0x428; // UTextBlock*
		constexpr auto TextBlock_Weapon2 = 0x430; // UTextBlock*
		constexpr auto TextBlock_Weapon3 = 0x438; // UTextBlock*
		constexpr auto TextBlock_Weapon4 = 0x440; // UTextBlock*
		constexpr auto UW-ReplayListItemWidget = 0x448; // UUW-ReplayListItemWidget_C*
		constexpr auto UW-ReplayListItemWidget_C_3 = 0x450; // UUW-ReplayListItemWidget_C*
		constexpr auto UW-ReplayListItemWidget_C_4 = 0x458; // UUW-ReplayListItemWidget_C*
		constexpr auto UW-ReplayListItemWidget_C_5 = 0x460; // UUW-ReplayListItemWidget_C*
		constexpr auto UW-ReplayListItemWidget_C_6 = 0x468; // UUW-ReplayListItemWidget_C*
		constexpr auto UW-ReplayListItemWidget_C_7 = 0x470; // UUW-ReplayListItemWidget_C*
		constexpr auto UW-ReplayListItemWidget_C_8 = 0x478; // UUW-ReplayListItemWidget_C*
		constexpr auto UW-ReplayListItemWidget_C_9 = 0x480; // UUW-ReplayListItemWidget_C*
		constexpr auto UW-ReplayListItemWidget_C_10 = 0x488; // UUW-ReplayListItemWidget_C*
		constexpr auto UW-ReplayListItemWidget_C_11 = 0x490; // UUW-ReplayListItemWidget_C*
		constexpr auto UW-ReplayListItemWidget_C_12 = 0x498; // UUW-ReplayListItemWidget_C*
		constexpr auto UW-ReplayListItemWidget_C_13 = 0x4a0; // UUW-ReplayListItemWidget_C*
		constexpr auto SelectedItemInfo = 0x4a8; // FMKReplayListItemInfo
	}

	namespace n_UBP-CheckWeightMap_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto B_Value = 0x250; // UTextBlock*
		constexpr auto Check = 0x258; // UTextBlock*
		constexpr auto G_Value = 0x260; // UTextBlock*
		constexpr auto Image_166 = 0x268; // UImage*
		constexpr auto Land = 0x270; // UTextBlock*
		constexpr auto Land_2 = 0x278; // UTextBlock*
		constexpr auto Land_3 = 0x280; // UTextBlock*
		constexpr auto Land_4 = 0x288; // UTextBlock*
		constexpr auto Land_5 = 0x290; // UTextBlock*
		constexpr auto Land_6 = 0x298; // UTextBlock*
		constexpr auto R_5 = 0x2a0; // UTextBlock*
		constexpr auto R_7 = 0x2a8; // UTextBlock*
		constexpr auto R_9 = 0x2b0; // UTextBlock*
		constexpr auto R_Value = 0x2b8; // UTextBlock*
		constexpr auto TextBlock_4 = 0x2c0; // UTextBlock*
		constexpr auto TextBlock_5 = 0x2c8; // UTextBlock*
		constexpr auto TextBlock_6 = 0x2d0; // UTextBlock*
		constexpr auto TextBlock_8 = 0x2d8; // UTextBlock*
		constexpr auto TextBlock_9 = 0x2e0; // UTextBlock*
		constexpr auto TextBlock_10 = 0x2e8; // UTextBlock*
		constexpr auto Timer = 0x2f0; // FTimerHandle
	}

	namespace n_UMaterialExpressionAdd {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_UWBP-AmplifierEffect_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto FadeOut = 0x250; // UWidgetAnimation*
		constexpr auto FadeIn = 0x258; // UWidgetAnimation*
		constexpr auto Image_Effect = 0x260; // UImage*
		constexpr auto NewVar_1 = 0x268; // UUMGSequencePlayer*
		constexpr auto IsFadeInOutEvent = 0x270; // bool
		constexpr auto CurrentFade = 0x274; // float
	}

	namespace n_UCoherentUIGTWidget {
		constexpr auto Owner = 0x120; // AActor*
		constexpr auto ReadyForBindings = 0x128; // FMulticastInlineDelegate
		constexpr auto BindingsReleased = 0x138; // FMulticastInlineDelegate
		constexpr auto FinishLoad = 0x148; // FMulticastInlineDelegate
		constexpr auto FailLoad = 0x158; // FMulticastInlineDelegate
		constexpr auto StartLoading = 0x168; // FMulticastInlineDelegate
		constexpr auto NavigateTo = 0x178; // FMulticastInlineDelegate
		constexpr auto JavaScriptEvent = 0x188; // FMulticastInlineDelegate
		constexpr auto UIGTScriptingReady = 0x198; // FMulticastInlineDelegate
		constexpr auto AkAudioEvent = 0x1c0; // FMulticastInlineDelegate
		constexpr auto KeyUpDelegate = 0x1d0; // FMulticastInlineDelegate
		constexpr auto KeyDownDelegate = 0x1e0; // FMulticastInlineDelegate
		constexpr auto MouseEventDelegate = 0x1f0; // FMulticastInlineDelegate
		constexpr auto Filter = 0x200; // TextureFilter
		constexpr auto bReceiveInput = 0x201; // bool
		constexpr auto InputPropagationBehaviour = 0x202; // ECoherentUIGTInputPropagationBehaviour
		constexpr auto bReceiveInputWhenTransparent = 0x203; // bool
		constexpr auto bGammaCorrectedMaterial = 0x204; // bool
		constexpr auto TickPeriodInMinimizedGame = 0x208; // float
		constexpr auto AllowPerformanceWarnings = 0x20c; // bool
		constexpr auto ExecuteJSTimersThresholdMs = 0x210; // float
		constexpr auto UpdateStylesAndLayoutThresholdMs = 0x214; // float
		constexpr auto RecordRenderingCommandsThresholdMs = 0x218; // float
		constexpr auto PaintWarningThresholdMs = 0x21c; // float
		constexpr auto LayersCountThreshold = 0x220; // int32_t
		constexpr auto LayerWidthThreshold = 0x224; // int32_t
		constexpr auto LayerHeightThreshold = 0x228; // int32_t
		constexpr auto bEnableAdditionalDefaultStyles = 0x22c; // bool
		constexpr auto AudioWrapper = 0x2c0; // UCoherentUIGTAudioWrapper*
		constexpr auto URL = 0x348; // FString
		constexpr auto ClickThroughAlphaThreshold = 0x358; // float
		constexpr auto OffscreenCanvasRendering = 0x35c; // bool
		constexpr auto Transparent = 0x35d; // bool
	}

	namespace n_UBravoHotelAudioAmbientMapData {
		constexpr auto StateColors = 0x30; // TMap<FName, FColor>
		constexpr auto NewStateColors = 0x80; // TMap<FString, FColor>
		constexpr auto WorldSize = 0xd0; // FVector2D
		constexpr auto WorldCenter = 0xd8; // FVector2D
		constexpr auto BaseMapSize = 0xe0; // FVector2D
		constexpr auto BitDataArray = 0xe8; // TArray<char>
	}

	namespace n_UAnimBoneCompressionCodec {
		constexpr auto Description = 0x28; // FString
	}

	namespace n_UMovieSceneActorReferenceSection {
		constexpr auto ActorReferenceData = 0xe0; // FMovieSceneActorReferenceData
		constexpr auto ActorGuidIndexCurve = 0x190; // FIntegralCurve
		constexpr auto ActorGuidStrings = 0x210; // TArray<FString>
	}

	namespace n_UDialogueVoice {
		constexpr auto gender = 0x28; // EGrammaticalGender
		constexpr auto Plurality = 0x29; // EGrammaticalNumber
		constexpr auto LocalizationGUID = 0x2c; // FGuid
	}

	namespace n_UInterpTrackAnimControl {
		constexpr auto SlotName = 0x90; // FName
		constexpr auto AnimSeqs = 0x98; // TArray<FAnimControlTrackKey>
		constexpr auto bSkipAnimNotifiers = 0xa8; // char : 1
	}

	namespace n_UBorder {
		constexpr auto HorizontalAlignment = 0x120; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x121; // EVerticalAlignment
		constexpr auto bShowEffectWhenDisabled = 0x122; // char : 1
		constexpr auto ContentColorAndOpacity = 0x124; // FLinearColor
		constexpr auto ContentColorAndOpacityDelegate = 0x134; // FDelegate
		constexpr auto Padding = 0x144; // FMargin
		constexpr auto Background = 0x158; // FSlateBrush
		constexpr auto BackgroundDelegate = 0x1e0; // FDelegate
		constexpr auto BrushColor = 0x1f0; // FLinearColor
		constexpr auto BrushColorDelegate = 0x200; // FDelegate
		constexpr auto DesiredSizeScale = 0x210; // FVector2D
		constexpr auto bFlipForRightToLeftFlowDirection = 0x218; // bool
		constexpr auto OnMouseButtonDownEvent = 0x21c; // FDelegate
		constexpr auto OnMouseButtonUpEvent = 0x22c; // FDelegate
		constexpr auto OnMouseMoveEvent = 0x23c; // FDelegate
		constexpr auto OnMouseDoubleClickEvent = 0x24c; // FDelegate
	}

	namespace n_AOnlineBeaconHost {
		constexpr auto ListenPort = 0x348; // int32_t
		constexpr auto ClientActors = 0x350; // TArray<AOnlineBeaconClient*>
	}

	namespace n_UUW-Inventory_PerkSlot_FX_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto IMG_PerkLevelUpFx = 0x250; // UImage*
		constexpr auto PerkSlot = 0x258; // EPerkSlotFlag
		constexpr auto PerkFxTexture = 0x260; // UTexture*
		constexpr auto PlayAnimation_1 = 0x268; // bool
		constexpr auto CurrentAnimationTime = 0x26c; // float
		constexpr auto AnimLastTime = 0x270; // float
		constexpr auto PerkFxMaterialInstance = 0x278; // UMaterialInstanceDynamic*
		constexpr auto UltimatePerkFxTexture = 0x280; // UTexture*
	}

	namespace n_UMaterialExpressionArccosine {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UPaperTileSet {
		constexpr auto TileSize = 0x28; // FIntPoint
		constexpr auto TileSheet = 0x30; // UTexture2D*
		constexpr auto AdditionalSourceTextures = 0x38; // TArray<UTexture*>
		constexpr auto BorderMargin = 0x48; // FIntMargin
		constexpr auto PerTileSpacing = 0x58; // FIntPoint
		constexpr auto DrawingOffset = 0x60; // FIntPoint
		constexpr auto WidthInTiles = 0x68; // int32_t
		constexpr auto HeightInTiles = 0x6c; // int32_t
		constexpr auto AllocatedWidth = 0x70; // int32_t
		constexpr auto AllocatedHeight = 0x74; // int32_t
		constexpr auto PerTileData = 0x78; // TArray<FPaperTileMetadata>
		constexpr auto Terrains = 0x88; // TArray<FPaperTileSetTerrain>
		constexpr auto TileWidth = 0x98; // int32_t
		constexpr auto TileHeight = 0x9c; // int32_t
		constexpr auto Margin = 0xa0; // int32_t
		constexpr auto Spacing = 0xa4; // int32_t
	}

	namespace n_ABravoHotelDropBoxActor {
		constexpr auto RootType = 0x318; // EPickupRoot
		constexpr auto RootBoxComponent = 0x320; // UBoxComponent*
		constexpr auto InventoryComponent = 0x328; // UDropBoxInventoryComponent*
		constexpr auto InteractiveSphereComponent = 0x330; // USphereComponent*
		constexpr auto InteractiveCancleSphereComponent = 0x338; // UBoxComponent*
		constexpr auto DropperNickName = 0x340; // FName
		constexpr auto BoxName = 0x348; // FName
		constexpr auto RarityIndex = 0x350; // int32_t
		constexpr auto DetectedCharacter = 0x358; // ABravoHotelCharacter*
	}

	namespace n_UCoherentUIGTJSPayload {
		constexpr auto EventName = 0x28; // FString
	}

	namespace n_USpinBox {
		constexpr auto Value = 0x108; // float
		constexpr auto ValueDelegate = 0x10c; // FDelegate
		constexpr auto WidgetStyle = 0x120; // FSpinBoxStyle
		constexpr auto Style = 0x408; // USlateWidgetStyleAsset*
		constexpr auto MinFractionalDigits = 0x410; // int32_t
		constexpr auto MaxFractionalDigits = 0x414; // int32_t
		constexpr auto bAlwaysUsesDeltaSnap = 0x418; // bool
		constexpr auto Delta = 0x41c; // float
		constexpr auto SliderExponent = 0x420; // float
		constexpr auto Font = 0x428; // FSlateFontInfo
		constexpr auto Justification = 0x478; // ETextJustify
		constexpr auto MinDesiredWidth = 0x47c; // float
		constexpr auto ClearKeyboardFocusOnCommit = 0x480; // bool
		constexpr auto SelectAllTextOnCommit = 0x481; // bool
		constexpr auto ForegroundColor = 0x488; // FSlateColor
		constexpr auto OnValueChanged = 0x4b0; // FMulticastInlineDelegate
		constexpr auto OnValueCommitted = 0x4c0; // FMulticastInlineDelegate
		constexpr auto OnBeginSliderMovement = 0x4d0; // FMulticastInlineDelegate
		constexpr auto OnEndSliderMovement = 0x4e0; // FMulticastInlineDelegate
		constexpr auto bOverride_MinValue = 0x4f0; // char : 1
		constexpr auto bOverride_MaxValue = 0x4f0; // char : 1
		constexpr auto bOverride_MinSliderValue = 0x4f0; // char : 1
		constexpr auto bOverride_MaxSliderValue = 0x4f0; // char : 1
		constexpr auto MinValue = 0x4f4; // float
		constexpr auto MaxValue = 0x4f8; // float
		constexpr auto MinSliderValue = 0x4fc; // float
		constexpr auto MaxSliderValue = 0x500; // float
	}

	namespace n_USavedInventorySettings {
		constexpr auto Data = 0x28; // FSettingData
	}

	namespace n_UGeometryCollectionDebugDrawComponent {
		constexpr auto GeometryCollectionDebugDrawActor = 0xb0; // AGeometryCollectionDebugDrawActor*
		constexpr auto GeometryCollectionRenderLevelSetActor = 0xb8; // AGeometryCollectionRenderLevelSetActor*
	}

	namespace n_UIntSerialization {
		constexpr auto UnsignedInt16Variable = 0x28; // uint16_t
		constexpr auto UnsignedInt32Variable = 0x2c; // uint32_t
		constexpr auto UnsignedInt64Variable = 0x30; // uint64_t
		constexpr auto SignedInt8Variable = 0x38; // int8_t
		constexpr auto SignedInt16Variable = 0x3a; // int16_t
		constexpr auto SignedInt64Variable = 0x40; // int64_t
		constexpr auto UnsignedInt8Variable = 0x48; // char
		constexpr auto SignedInt32Variable = 0x4c; // int32_t
	}

	namespace n_UGameRuleInvokerComponent {
		constexpr auto bIsFollowingRule = 0xb0; // bool
	}

	namespace n_URestrictedGameplayTagsList {
		constexpr auto ConfigFileName = 0x28; // FString
		constexpr auto RestrictedGameplayTagList = 0x38; // TArray<FRestrictedGameplayTagTableRow>
	}

	namespace n_UGameplayTask_SpawnActor {
		constexpr auto SUCCESS = 0x68; // FMulticastInlineDelegate
		constexpr auto DidNotSpawn = 0x78; // FMulticastInlineDelegate
		constexpr auto ClassToSpawn = 0xa0; // AActor*
	}

	namespace n_UMovieSceneGeometryCacheTrack {
		constexpr auto AnimationSections = 0x58; // TArray<UMovieSceneSection*>
	}

	namespace n_UAnimNotify_PlayParticleEffect {
		constexpr auto PSTemplate = 0x38; // UParticleSystem*
		constexpr auto LocationOffset = 0x40; // FVector
		constexpr auto RotationOffset = 0x4c; // FRotator
		constexpr auto Scale = 0x58; // FVector
		constexpr auto Attached = 0x80; // char : 1
		constexpr auto SocketName = 0x84; // FName
	}

	namespace n_USynthComponentMonoWaveTable {
		constexpr auto OnTableAltered = 0x710; // FMulticastInlineDelegate
		constexpr auto OnNumTablesChanged = 0x720; // FMulticastInlineDelegate
		constexpr auto CurrentPreset = 0x730; // UMonoWaveTableSynthPreset*
	}

	namespace n_UBP_KeyAction_C {
		constexpr auto Action Name = 0x28; // FString
		constexpr auto Category = 0x38; // FString
		constexpr auto Key Mappings = 0x48; // TArray<UBP_KeyMapping_C*>
	}

	namespace n_UUW-BlackMarket_Slot_Vehicle_C {
		constexpr auto UberGraphFrame = 0x3d8; // FPointerToUberGraphFrame
		constexpr auto BTN-Menu02 = 0x3e0; // UButton*
		constexpr auto CP-SlotInfo = 0x3e8; // UCanvasPanel*
		constexpr auto IMG-BG = 0x3f0; // UImage*
		constexpr auto IMG-BG-Border = 0x3f8; // UImage*
		constexpr auto IMG-Item = 0x400; // UImage*
		constexpr auto IMG-Mask = 0x408; // UImage*
		constexpr auto IMG-Over = 0x410; // UImage*
		constexpr auto IMG-Over-Border = 0x418; // UImage*
		constexpr auto Menu02 = 0x420; // UOverlay*
		constexpr auto Overlay_Mask = 0x428; // UOverlay*
		constexpr auto TXT-ItemName = 0x430; // UTextBlock*
		constexpr auto TXT-Menu01 = 0x438; // UTextBlock*
		constexpr auto TXT-Menu02 = 0x440; // UTextBlock*
	}

	namespace n_UMaterialExpressionStaticSwitch {
		constexpr auto DefaultValue = 0x40; // char : 1
		constexpr auto A = 0x44; // FExpressionInput
		constexpr auto B = 0x58; // FExpressionInput
		constexpr auto Value = 0x6c; // FExpressionInput
	}

	namespace n_UFSM_SetStateID_AsyncWithCallbacks {
		constexpr auto Target = 0x30; // UStateMachineComponent*
		constexpr auto InBegin = 0x38; // FDelegate
		constexpr auto InExit = 0x48; // FDelegate
		constexpr auto StateID = 0x58; // char
		constexpr auto Timer = 0x5c; // float
		constexpr auto Repeat = 0x60; // bool
		constexpr auto TimerHandle = 0x68; // FTimerHandle
		constexpr auto OnSuccess = 0x70; // FMulticastInlineDelegate
		constexpr auto OnAborted = 0x80; // FMulticastInlineDelegate
	}

	namespace n_UEnvQueryGenerator_OnCircle {
		constexpr auto CircleRadius = 0x80; // FAIDataProviderFloatValue
		constexpr auto SpaceBetween = 0xb8; // FAIDataProviderFloatValue
		constexpr auto NumberOfPoints = 0xf0; // FAIDataProviderIntValue
		constexpr auto PointOnCircleSpacingMethod = 0x128; // EPointOnCircleSpacingMethod
		constexpr auto ArcDirection = 0x130; // FEnvDirection
		constexpr auto ArcAngle = 0x150; // FAIDataProviderFloatValue
		constexpr auto AngleRadians = 0x188; // float
		constexpr auto CircleCenter = 0x190; // UEnvQueryContext*
		constexpr auto bIgnoreAnyContextActorsWhenGeneratingCircle = 0x198; // bool
		constexpr auto CircleCenterZOffset = 0x1a0; // FAIDataProviderFloatValue
		constexpr auto TraceData = 0x1d8; // FEnvTraceData
		constexpr auto bDefineArc = 0x208; // char : 1
	}

	namespace n_UBravoHotelVehicleWheel {
		constexpr auto DriftingLatStiffMaxLoadCurve = 0xf0; // UCurveFloat*
		constexpr auto DriftingLatStiffValueCurve = 0xf8; // UCurveFloat*
		constexpr auto DriftingLongStiffValueCurve = 0x100; // UCurveFloat*
		constexpr auto bUseDriftingLifeTime = 0x108; // bool
		constexpr auto DriftingLifeTime = 0x10c; // float
		constexpr auto VehicleMovement = 0x120; // UBravoHotelVehicleMovementComponent*
	}

	namespace n_UInterpTrackVectorMaterialParam {
		constexpr auto TargetMaterials = 0x90; // TArray<UMaterialInterface*>
		constexpr auto ParamName = 0xa0; // FName
	}

	namespace n_UBTDecorator_Blackboard {
		constexpr auto IntValue = 0x90; // int32_t
		constexpr auto FloatValue = 0x94; // float
		constexpr auto StringValue = 0x98; // FString
		constexpr auto CachedDescription = 0xa8; // FString
		constexpr auto OperationType = 0xb8; // char
		constexpr auto NotifyObserver = 0xb9; // EBTBlackboardRestart
	}

	namespace n_UMovieSceneLevelVisibilityTrack {
		constexpr auto Sections = 0x58; // TArray<UMovieSceneSection*>
	}

	namespace n_UNativeReplayListItem {
		constexpr auto ReplayListItemBtn = 0x248; // UButton*
		constexpr auto TextName = 0x250; // UTextBlock*
		constexpr auto TextLive = 0x258; // UTextBlock*
		constexpr auto TextTime = 0x260; // UTextBlock*
		constexpr auto OnSelectedReplayListItemEvent = 0x278; // FMulticastInlineDelegate
	}

	namespace n_UFSM_SetStateID_ConditionalAsyncWithCallbacks {
		constexpr auto Target = 0x30; // UStateMachineComponent*
		constexpr auto Conditional = 0x38; // FSM_Transition
		constexpr auto InBegin = 0x3c; // FDelegate
		constexpr auto InExit = 0x4c; // FDelegate
		constexpr auto StateID = 0x5c; // char
		constexpr auto Timer = 0x60; // float
		constexpr auto Repeat = 0x64; // bool
		constexpr auto TimerHandle = 0x68; // FTimerHandle
		constexpr auto OnSuccess = 0x70; // FMulticastInlineDelegate
		constexpr auto OnAborted = 0x80; // FMulticastInlineDelegate
	}

	namespace n_UProceduralFoliageComponent {
		constexpr auto FoliageSpawner = 0xb0; // UProceduralFoliageSpawner*
		constexpr auto TileOverlap = 0xb8; // float
		constexpr auto SpawningVolume = 0xc0; // AVolume*
		constexpr auto ProceduralGuid = 0xc8; // FGuid
	}

	namespace n_ALandscapeProxy {
		constexpr auto SplineComponent = 0x318; // ULandscapeSplinesComponent*
		constexpr auto LandscapeGuid = 0x320; // FGuid
		constexpr auto LandscapeSectionOffset = 0x340; // FIntPoint
		constexpr auto MaxLODLevel = 0x348; // int32_t
		constexpr auto LODDistanceFactor = 0x34c; // float
		constexpr auto LODFalloff = 0x350; // ELandscapeLODFalloff
		constexpr auto ComponentScreenSizeToUseSubSections = 0x354; // float
		constexpr auto LOD0ScreenSize = 0x358; // float
		constexpr auto LOD0DistributionSetting = 0x35c; // float
		constexpr auto LODDistributionSetting = 0x360; // float
		constexpr auto TessellationComponentScreenSize = 0x364; // float
		constexpr auto UseTessellationComponentScreenSizeFalloff = 0x368; // bool
		constexpr auto TessellationComponentScreenSizeFalloff = 0x36c; // float
		constexpr auto OccluderGeometryLOD = 0x370; // int32_t
		constexpr auto StaticLightingLOD = 0x374; // int32_t
		constexpr auto DefaultPhysMaterial = 0x378; // UPhysicalMaterial*
		constexpr auto StreamingDistanceMultiplier = 0x380; // float
		constexpr auto LandscapeMaterial = 0x388; // UMaterialInterface*
		constexpr auto LandscapeHoleMaterial = 0x3b0; // UMaterialInterface*
		constexpr auto LandscapeMaterialsOverride = 0x3b8; // TArray<FLandscapeProxyMaterialOverride>
		constexpr auto bMeshHoles = 0x3c8; // bool
		constexpr auto MeshHolesMaxLod = 0x3c9; // char
		constexpr auto RuntimeVirtualTextures = 0x3d0; // TArray<URuntimeVirtualTexture*>
		constexpr auto VirtualTextureNumLods = 0x3e0; // int32_t
		constexpr auto VirtualTextureLodBias = 0x3e4; // int32_t
		constexpr auto VirtualTextureRenderPassType = 0x3e8; // ERuntimeVirtualTextureMainPassType
		constexpr auto NegativeZBoundsExtension = 0x3ec; // float
		constexpr auto PositiveZBoundsExtension = 0x3f0; // float
		constexpr auto LandscapeComponents = 0x3f8; // TArray<ULandscapeComponent*>
		constexpr auto CollisionComponents = 0x408; // TArray<ULandscapeHeightfieldCollisionComponent*>
		constexpr auto FoliageComponents = 0x418; // TArray<UHierarchicalInstancedStaticMeshComponent*>
		constexpr auto bHasLandscapeGrass = 0x48c; // bool
		constexpr auto StaticLightingResolution = 0x490; // float
		constexpr auto bCastStaticShadow = 0x494; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x494; // char : 1
		constexpr auto bCastFarShadow = 0x494; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x498; // char : 1
		constexpr auto LightingChannels = 0x499; // FLightingChannels
		constexpr auto bUseMaterialPositionOffsetInStaticLighting = 0x49c; // char : 1
		constexpr auto bRenderCustomDepth = 0x49c; // char : 1
		constexpr auto CustomDepthStencilValue = 0x4a0; // int32_t
		constexpr auto LDMaxDrawDistance = 0x4a4; // float
		constexpr auto LightmassSettings = 0x4a8; // FLightmassPrimitiveSettings
		constexpr auto CollisionMipLevel = 0x4c0; // int32_t
		constexpr auto SimpleCollisionMipLevel = 0x4c4; // int32_t
		constexpr auto CollisionThickness = 0x4c8; // float
		constexpr auto BodyInstance = 0x4d0; // FBodyInstance
		constexpr auto bGenerateOverlapEvents = 0x660; // char : 1
		constexpr auto bBakeMaterialPositionOffsetIntoCollision = 0x660; // char : 1
		constexpr auto ComponentSizeQuads = 0x664; // int32_t
		constexpr auto SubsectionSizeQuads = 0x668; // int32_t
		constexpr auto NumSubsections = 0x66c; // int32_t
		constexpr auto bUsedForNavigation = 0x670; // char : 1
		constexpr auto bFillCollisionUnderLandscapeForNavmesh = 0x670; // char : 1
		constexpr auto bUseDynamicMaterialInstance = 0x674; // bool
		constexpr auto NavigationGeometryGatheringMode = 0x675; // ENavDataGatheringMode
		constexpr auto bUseLandscapeForCullingInvisibleHLODVertices = 0x676; // bool
		constexpr auto bHasLayersContent = 0x677; // bool
		constexpr auto WeightmapUsageMap = 0x678; // TMap<UTexture2D*, ULandscapeWeightmapUsage*>
	}

	namespace n_UFieldSystemComponent {
		constexpr auto FieldSystem = 0x4b0; // UFieldSystem*
		constexpr auto SupportedSolvers = 0x4c8; // TArray<TSoftObjectPtr<AChaosSolverActor>>
	}

	namespace n_UMaterialExpressionMaterialAttributeLayers {
		constexpr auto ParameterName = 0x40; // FName
		constexpr auto ExpressionGUID = 0x48; // FGuid
		constexpr auto Input = 0x58; // FMaterialAttributesInput
		constexpr auto DefaultLayers = 0x70; // FMaterialLayersFunctions
		constexpr auto LayerCallers = 0xb0; // TArray<UMaterialExpressionMaterialFunctionCall*>
		constexpr auto NumActiveLayerCallers = 0xc0; // int32_t
		constexpr auto BlendCallers = 0xc8; // TArray<UMaterialExpressionMaterialFunctionCall*>
		constexpr auto NumActiveBlendCallers = 0xd8; // int32_t
		constexpr auto bIsLayerGraphBuilt = 0xdc; // bool
	}

	namespace n_UAkEventCallbackInfo {
		constexpr auto PlayingID = 0x30; // int32_t
		constexpr auto EventID = 0x34; // int32_t
	}

	namespace n_UUW-GameBuffSlot_Boost_C {
		constexpr auto UberGraphFrame = 0x2f8; // FPointerToUberGraphFrame
		constexpr auto Anim_Boost_Off = 0x300; // UWidgetAnimation*
		constexpr auto Anim_Boost_On = 0x308; // UWidgetAnimation*
		constexpr auto CanvasPanel_BoostInfo = 0x310; // UCanvasPanel*
		constexpr auto Image_Active = 0x318; // UImage*
		constexpr auto IMG_CoolTime = 0x320; // UImage*
		constexpr auto T_CoolTime = 0x328; // UTextBlock*
		constexpr auto MI_CoolTimeDynamicInstance = 0x330; // UMaterialInstanceDynamic*
		constexpr auto MI_BuffActive = 0x338; // UMaterialInstanceDynamic*
		constexpr auto BoostOffAnimTime = 0x340; // float
		constexpr auto IsActive = 0x344; // bool
		constexpr auto BoostBuffInfo = 0x348; // FBuffData
	}

	namespace n_UMaterialExpressionTextureSampleParameter {
		constexpr auto ParameterName = 0xd0; // FName
		constexpr auto ExpressionGUID = 0xd8; // FGuid
		constexpr auto Group = 0xe8; // FName
	}

	namespace n_UUW-Inventory_CharacterDragPanel_C {
		constexpr auto Image_91 = 0x248; // UImage*
		constexpr auto InventoryCharacterRef = 0x250; // ABravoHotelInventoryCharacter*
		constexpr auto Visible = 0x258; // bool
	}

	namespace n_USoundNodeOscillator {
		constexpr auto bModulateVolume = 0x48; // char : 1
		constexpr auto bModulatePitch = 0x48; // char : 1
		constexpr auto AmplitudeMin = 0x4c; // float
		constexpr auto AmplitudeMax = 0x50; // float
		constexpr auto FrequencyMin = 0x54; // float
		constexpr auto FrequencyMax = 0x58; // float
		constexpr auto OffsetMin = 0x5c; // float
		constexpr auto OffsetMax = 0x60; // float
		constexpr auto CenterMin = 0x64; // float
		constexpr auto CenterMax = 0x68; // float
	}

	namespace n_AVectorFieldVolume {
		constexpr auto VectorFieldComponent = 0x318; // UVectorFieldComponent*
	}

	namespace n_UAssetExportTask {
		constexpr auto Object = 0x28; // UObject*
		constexpr auto Exporter = 0x30; // UExporter*
		constexpr auto Filename = 0x38; // FString
		constexpr auto bSelected = 0x48; // bool
		constexpr auto bReplaceIdentical = 0x49; // bool
		constexpr auto bPrompt = 0x4a; // bool
		constexpr auto bAutomated = 0x4b; // bool
		constexpr auto bUseFileArchive = 0x4c; // bool
		constexpr auto bWriteEmptyFiles = 0x4d; // bool
		constexpr auto IgnoreObjectList = 0x50; // TArray<UObject*>
		constexpr auto options = 0x60; // UObject*
		constexpr auto Errors = 0x68; // TArray<FString>
	}

	namespace n_USoundNodeMixer {
		constexpr auto InputVolume = 0x48; // TArray<float>
	}

	namespace n_UBravoHotelVehicleTireComponent {
		constexpr auto ConnectedWheelIndices = 0x548; // TArray<int32_t>
		constexpr auto OriginalAttachBoneName = 0x558; // FName
		constexpr auto SurfaceFxBoneName = 0x560; // FName
		constexpr auto SurfaceFxScale = 0x568; // FVector
		constexpr auto SurfaceFxMaxDrawDistance = 0x574; // float
		constexpr auto SurfaceFxComponent = 0x578; // UParticleSystemComponent*
		constexpr auto WreckedEffect = 0x580; // UParticleSystem*
		constexpr auto WreckedSound = 0x588; // UAkAudioEvent*
		constexpr auto OwnerVehicle = 0x598; // ABravoHotelVehicle*
	}

	namespace n_UWindowTitleBarAreaSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UDirectionalLightComponent {
		constexpr auto ShadowCascadeBiasDistribution = 0x378; // float
		constexpr auto bEnableLightShaftOcclusion = 0x37c; // char : 1
		constexpr auto OcclusionMaskDarkness = 0x380; // float
		constexpr auto OcclusionDepthRange = 0x384; // float
		constexpr auto LightShaftOverrideDirection = 0x388; // FVector
		constexpr auto WholeSceneDynamicShadowRadius = 0x394; // float
		constexpr auto DynamicShadowDistanceMovableLight = 0x398; // float
		constexpr auto DynamicShadowDistanceStationaryLight = 0x39c; // float
		constexpr auto DynamicShadowCascades = 0x3a0; // int32_t
		constexpr auto CascadeDistributionExponent = 0x3a4; // float
		constexpr auto CascadeTransitionFraction = 0x3a8; // float
		constexpr auto ShadowDistanceFadeoutFraction = 0x3ac; // float
		constexpr auto bUseInsetShadowsForMovableObjects = 0x3b0; // char : 1
		constexpr auto FarShadowCascadeCount = 0x3b4; // int32_t
		constexpr auto FarShadowDistance = 0x3b8; // float
		constexpr auto bUseFarShadowAsStaticWorldShadow = 0x3bc; // char : 1
		constexpr auto DistanceFieldShadowDistance = 0x3c0; // float
		constexpr auto LightSourceAngle = 0x3c4; // float
		constexpr auto LightSourceSoftAngle = 0x3c8; // float
		constexpr auto TraceDistance = 0x3cc; // float
		constexpr auto LightmassSettings = 0x3d0; // FLightmassDirectionalLightSettings
		constexpr auto bCastModulatedShadows = 0x3e0; // char : 1
		constexpr auto ModulatedShadowColor = 0x3e4; // FColor
		constexpr auto ShadowAmount = 0x3e8; // float
		constexpr auto bUsedAsAtmosphereSunLight = 0x3ec; // char : 1
		constexpr auto AtmosphereSunLightIndex = 0x3f0; // int32_t
	}

	namespace n_ASkyLight {
		constexpr auto LightComponent = 0x318; // USkyLightComponent*
		constexpr auto bEnabled = 0x320; // char : 1
	}

	namespace n_UGameplayTask_WaitDelay {
		constexpr auto OnFinish = 0x68; // FMulticastInlineDelegate
	}

	namespace n_URuntimeVirtualTexture {
		constexpr auto MaterialType = 0x28; // ERuntimeVirtualTextureMaterialType
		constexpr auto bCompressTextures = 0x29; // bool
		constexpr auto bEnable = 0x2a; // bool
		constexpr auto bClearTextures = 0x2b; // bool
		constexpr auto bSinglePhysicalSpace = 0x2c; // bool
		constexpr auto bPrivateSpace = 0x2d; // bool
		constexpr auto bEnableScalability = 0x2e; // bool
		constexpr auto Size = 0x30; // int32_t
		constexpr auto TileCount = 0x34; // int32_t
		constexpr auto TileSize = 0x38; // int32_t
		constexpr auto TileBorderSize = 0x3c; // int32_t
		constexpr auto StreamLowMips = 0x40; // int32_t
		constexpr auto StreamingTexture = 0x48; // URuntimeVirtualTextureStreamingProxy*
		constexpr auto bEnableCompressCrunch = 0x50; // bool
		constexpr auto RemoveLowMips = 0x54; // int32_t
	}

	namespace n_UDestructibleMesh {
		constexpr auto DefaultDestructibleParameters = 0x3a0; // FDestructibleParameters
		constexpr auto FractureEffects = 0x428; // TArray<FFractureEffect>
	}

	namespace n_UParticleModuleOrbitBase {
		constexpr auto bUseEmitterTime = 0x30; // char : 1
	}

	namespace n_UArchVisCharMovementComponent {
		constexpr auto RotationalAcceleration = 0x6d8; // FRotator
		constexpr auto RotationalDeceleration = 0x6e4; // FRotator
		constexpr auto MaxRotationalVelocity = 0x6f0; // FRotator
		constexpr auto MinPitch = 0x6fc; // float
		constexpr auto MaxPitch = 0x700; // float
		constexpr auto WalkingFriction = 0x704; // float
		constexpr auto WalkingSpeed = 0x708; // float
		constexpr auto WalkingAcceleration = 0x70c; // float
	}

	namespace n_UPhysicsSettings {
		constexpr auto DefaultGravityZ = 0x38; // float
		constexpr auto DefaultTerminalVelocity = 0x3c; // float
		constexpr auto DefaultFluidFriction = 0x40; // float
		constexpr auto SimulateScratchMemorySize = 0x44; // int32_t
		constexpr auto RagdollAggregateThreshold = 0x48; // int32_t
		constexpr auto TriangleMeshTriangleMinAreaThreshold = 0x4c; // float
		constexpr auto bEnableShapeSharing = 0x50; // bool
		constexpr auto bEnablePCM = 0x51; // bool
		constexpr auto bEnableStabilization = 0x52; // bool
		constexpr auto bWarnMissingLocks = 0x53; // bool
		constexpr auto bEnable2DPhysics = 0x54; // bool
		constexpr auto PhysicErrorCorrection = 0x58; // FRigidBodyErrorCorrection
		constexpr auto LockedAxis = 0x8c; // ESettingsLockedAxis
		constexpr auto DefaultDegreesOfFreedom = 0x8d; // ESettingsDOF
		constexpr auto BounceThresholdVelocity = 0x90; // float
		constexpr auto FrictionCombineMode = 0x94; // EFrictionCombineMode
		constexpr auto RestitutionCombineMode = 0x95; // EFrictionCombineMode
		constexpr auto MaxAngularVelocity = 0x98; // float
		constexpr auto MaxDepenetrationVelocity = 0x9c; // float
		constexpr auto ContactOffsetMultiplier = 0xa0; // float
		constexpr auto MinContactOffset = 0xa4; // float
		constexpr auto MaxContactOffset = 0xa8; // float
		constexpr auto bSimulateSkeletalMeshOnDedicatedServer = 0xac; // bool
		constexpr auto DefaultShapeComplexity = 0xad; // ECollisionTraceFlag
		constexpr auto bDefaultHasComplexCollision = 0xae; // bool
		constexpr auto bSuppressFaceRemapTable = 0xaf; // bool
		constexpr auto bSupportUVFromHitResults = 0xb0; // bool
		constexpr auto bDisableActiveActors = 0xb1; // bool
		constexpr auto bDisableKinematicStaticPairs = 0xb2; // bool
		constexpr auto bDisableKinematicKinematicPairs = 0xb3; // bool
		constexpr auto bDisableCCD = 0xb4; // bool
		constexpr auto bEnableEnhancedDeterminism = 0xb5; // bool
		constexpr auto AnimPhysicsMinDeltaTime = 0xb8; // float
		constexpr auto bSimulateAnimPhysicsAfterReset = 0xbc; // bool
		constexpr auto MaxPhysicsDeltaTime = 0xc0; // float
		constexpr auto bSubstepping = 0xc4; // bool
		constexpr auto bSubsteppingAsync = 0xc5; // bool
		constexpr auto MaxSubstepDeltaTime = 0xc8; // float
		constexpr auto MaxSubsteps = 0xcc; // int32_t
		constexpr auto SyncSceneSmoothingFactor = 0xd0; // float
		constexpr auto InitialAverageFrameRate = 0xd4; // float
		constexpr auto PhysXTreeRebuildRate = 0xd8; // int32_t
		constexpr auto PhysicalSurfaces = 0xe0; // TArray<FPhysicalSurfaceName>
		constexpr auto DefaultBroadphaseSettings = 0xf0; // FBroadphaseSettings
		constexpr auto ChaosSettings = 0x130; // FChaosPhysicsSettings
	}

	namespace n_UVectorFieldComponent {
		constexpr auto VectorField = 0x4b0; // UVectorField*
		constexpr auto Intensity = 0x4b8; // float
		constexpr auto Tightness = 0x4bc; // float
		constexpr auto bPreviewVectorField = 0x4c0; // char : 1
	}

	namespace n_UMaterialShaderQualitySettings {
		constexpr auto ForwardSettingMap = 0x28; // TMap<FName, UShaderPlatformQualitySettings*>
	}

	namespace n_UBlackboardKeyType_Class {
		constexpr auto BaseClass = 0x30; // UObject*
	}

	namespace n_UUW-MS_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Anim_MS = 0x250; // UWidgetAnimation*
		constexpr auto Image_78 = 0x258; // UImage*
		constexpr auto PingImage = 0x260; // UPaperSprite*
	}

	namespace n_ABravoHotelTransportDropBoxActor {
		constexpr auto PrevDropBoxState = 0x398; // EDropBoxState
		constexpr auto CurrentDropBoxState = 0x399; // EDropBoxState
		constexpr auto bLandedOnWater = 0x39a; // bool
		constexpr auto LandingSeconds = 0x3ac; // float
		constexpr auto DropBoxMesh = 0x3c8; // UStaticMeshComponent*
		constexpr auto ParachuteMesh = 0x3d0; // UStaticMeshComponent*
		constexpr auto DropBoxAudioComponent = 0x3d8; // UAkComponent*
		constexpr auto BoxSmokeParticleFX = 0x3e0; // UParticleSystemComponent*
		constexpr auto WaterParticleFX = 0x3e8; // UParticleSystemComponent*
		constexpr auto BoxSmokeParticle = 0x3f0; // UParticleSystem*
		constexpr auto WaterParticle = 0x3f8; // UParticleSystem*
		constexpr auto SmokeStartSound = 0x400; // TSoftObjectPtr<UAkAudioEvent>
		constexpr auto SmokeStopSound = 0x428; // TSoftObjectPtr<UAkAudioEvent>
		constexpr auto LandOnGroundSound = 0x450; // TSoftObjectPtr<UAkAudioEvent>
		constexpr auto LandOnWaterSound = 0x478; // TSoftObjectPtr<UAkAudioEvent>
		constexpr auto SmokeRemainTime = 0x4a0; // float
		constexpr auto SmokeEeffectDuration = 0x4a4; // float
	}

	namespace n_UUW-Lobby_Craft_List_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto ComboBoxString_Sort_2 = 0x250; // UComboBoxString*
		constexpr auto Down_2 = 0x258; // UImage*
		constexpr auto Image = 0x260; // UImage*
		constexpr auto Img_BG = 0x268; // UImage*
		constexpr auto Overlay_2 = 0x270; // UOverlay*
		constexpr auto SortText_2 = 0x278; // UTextBlock*
		constexpr auto Up_2 = 0x280; // UImage*
		constexpr auto UW-Lobby_RecipeList_Category = 0x288; // UUW-Lobby_Craft_List_Category_C*
		constexpr auto UW-Lobby_RecipeList_Category_2 = 0x290; // UUW-Lobby_Craft_List_Category_C*
		constexpr auto UW-Lobby_RecipeList_Category_3 = 0x298; // UUW-Lobby_Craft_List_Category_C*
		constexpr auto VerticalBox_Category = 0x2a0; // UVerticalBox*
		constexpr auto CategoryList = 0x2a8; // TMap<FString, UUW-Lobby_Craft_List_Category_C*>
		constexpr auto SortTypeList = 0x2f8; // TArray<FString>
		constexpr auto LastOpenedCategory = 0x308; // UUW-Lobby_Craft_List_Category_C*
		constexpr auto IsOwn = 0x310; // bool
		constexpr auto IsOwnAny = 0x311; // bool
		constexpr auto CraftingID = 0x314; // int32_t
		constexpr auto TextAll = 0x318; // FText
		constexpr auto LanguageIndex = 0x330; // int32_t
	}

	namespace n_UParticleModuleSizeScale {
		constexpr auto SizeScale = 0x30; // FRawDistributionVector
		constexpr auto EnableX = 0x78; // char : 1
		constexpr auto EnableY = 0x78; // char : 1
		constexpr auto EnableZ = 0x78; // char : 1
	}

	namespace n_UMovieSceneLevelVisibilitySection {
		constexpr auto Visibility = 0xe0; // ELevelVisibility
		constexpr auto LevelNames = 0xe8; // TArray<FName>
	}

	namespace n_UMaterialExpressionFontSample {
		constexpr auto Font = 0x40; // UFont*
		constexpr auto FontTexturePage = 0x48; // int32_t
	}

	namespace n_UMaterialExpressionSine {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Period = 0x54; // float
	}

	namespace n_UMaterialExpressionFunctionInput {
		constexpr auto Preview = 0x40; // FExpressionInput
		constexpr auto InputName = 0x54; // FName
		constexpr auto Description = 0x60; // FString
		constexpr auto ID = 0x70; // FGuid
		constexpr auto InputType = 0x80; // EFunctionInputType
		constexpr auto PreviewValue = 0x90; // FVector4
		constexpr auto bUsePreviewValueAsDefault = 0xa0; // char : 1
		constexpr auto SortPriority = 0xa4; // int32_t
		constexpr auto bCompilingFunctionPreview = 0xa8; // char : 1
	}

	namespace n_AMKCharacterEx {
		constexpr auto SelfCharacter = 0x390; // ACharacter*
	}

	namespace n_UBlendSpaceBase {
		constexpr auto bRotationBlendInMeshSpace = 0x98; // bool
		constexpr auto AnimLength = 0x9c; // float
		constexpr auto InterpolationParam = 0xa0; // FInterpolationParameter [0x3]
		constexpr auto TargetWeightInterpolationSpeedPerSec = 0xb8; // float
		constexpr auto NotifyTriggerMode = 0xbc; // ENotifyTriggerMode
		constexpr auto PerBoneBlend = 0xc0; // TArray<FPerBoneInterpolation>
		constexpr auto SampleIndexWithMarkers = 0xd0; // int32_t
		constexpr auto SampleData = 0xd8; // TArray<FBlendSample>
		constexpr auto GridSamples = 0xe8; // TArray<FEditorElement>
		constexpr auto BlendParameters = 0xf8; // FBlendParameter [0x3]
	}

	namespace n_UEnvQueryTest_Trace {
		constexpr auto TraceData = 0x1f8; // FEnvTraceData
		constexpr auto TraceFromContext = 0x228; // FAIDataProviderBoolValue
		constexpr auto ItemHeightOffset = 0x260; // FAIDataProviderFloatValue
		constexpr auto ContextHeightOffset = 0x298; // FAIDataProviderFloatValue
		constexpr auto Context = 0x2d0; // UEnvQueryContext*
	}

	namespace n_UVariant {
		constexpr auto DisplayText = 0x28; // FText
		constexpr auto ObjectBindings = 0x58; // TArray<UVariantObjectBinding*>
		constexpr auto Thumbnail = 0x68; // UTexture2D*
	}

	namespace n_UBravoHotelAnimNotify_DropMagazine {
		constexpr auto WeaponSlotNameForSpawn = 0x38; // FName
		constexpr auto MagazineClass = 0x40; // ABravoHotelMagazineForDrop*
	}

	namespace n_UEditableGameplayTagQueryExpression_NoTagsMatch {
		constexpr auto Tags = 0x28; // FGameplayTagContainer
	}

	namespace n_UWeaponAttachmentComponent {
		constexpr auto OwningWeapon = 0xb0; // ABravoHotelRangedWeapon*
		constexpr auto FrontSight = 0xb8; // UAsyncStaticMeshComponent*
		constexpr auto Rail = 0xc0; // UAsyncStaticMeshComponent*
		constexpr auto grip = 0xc8; // UAsyncStaticMeshComponent*
		constexpr auto magazine = 0xd0; // UAsyncStaticMeshComponent*
		constexpr auto ButtStock = 0xd8; // UAsyncStaticMeshComponent*
		constexpr auto Tactical = 0xe0; // UAsyncStaticMeshComponent*
		constexpr auto muzzledevice = 0xe8; // UAsyncSkeletalMeshComponent*
		constexpr auto Barrel = 0xf0; // UAsyncSkeletalMeshComponent*
		constexpr auto bIsInitialized = 0x258; // bool
		constexpr auto GripType = 0x259; // EWeaponAttachmentGrip
		constexpr auto MagazineType = 0x25a; // EWeaponAttachmentItem
		constexpr auto StockType = 0x25b; // EWeaponAttachmentItem
		constexpr auto MuzzleType = 0x25c; // EWeaponAttachmentItem
		constexpr auto BarrelType = 0x25d; // EWeaponAttachmentItem
		constexpr auto FPSK_SightAttachmentList = 0x2a0; // TMap<EWeaponAttachmentItem, ABravoHotelSightAttachment*>
		constexpr auto FPSK_SightClassList = 0x2f0; // TMap<EWeaponAttachmentItem, ABravoHotelSightAttachment*>
	}

	namespace n_UUW-Inventory_ProximityBoxSlot_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto BoxName = 0x250; // UTextBlock*
		constexpr auto WB-ItemList = 0x258; // UWrapBox*
		constexpr auto TitleVisible = 0x260; // bool
		constexpr auto TargetActor = 0x268; // AActor*
		constexpr auto InventoryWidget = 0x270; // UUW-InventoryWidget_C*
		constexpr auto bUsed = 0x278; // bool
	}

	namespace n_ABP_BlueZone_C {
		constexpr auto UberGraphFrame = 0x7c8; // FPointerToUberGraphFrame
		constexpr auto StaticMesh = 0x7d0; // UStaticMeshComponent*
		constexpr auto MagneticDecal = 0x7d8; // UDecalComponent*
		constexpr auto Puls_PulsScale_0F5B0359412DDBACBDF407BB69788854 = 0x7e0; // float
		constexpr auto Puls__Direction_0F5B0359412DDBACBDF407BB69788854 = 0x7e4; // ETimelineDirection
		constexpr auto Puls = 0x7e8; // UTimelineComponent*
		constexpr auto Height = 0x7f0; // float
		constexpr auto SeaLevelZ = 0x7f4; // float
		constexpr auto bIsMatchEnded = 0x7f8; // bool
		constexpr auto ModifyingOpacityTime = 0x7fc; // float
		constexpr auto CurrentOpacity = 0x800; // float
		constexpr auto ScaleModifier = 0x804; // float
		constexpr auto ParametersCurve = 0x808; // UCurveVector*
		constexpr auto MaterialParameterRadius = 0x810; // float
		constexpr auto bWasMpUpdated = 0x814; // bool
		constexpr auto PreRadius = 0x818; // float
	}

	namespace n_UMaterialExpressionRuntimeVirtualTextureOutput {
		constexpr auto BaseColor = 0x40; // FExpressionInput
		constexpr auto Specular = 0x54; // FExpressionInput
		constexpr auto Roughness = 0x68; // FExpressionInput
		constexpr auto Normal = 0x7c; // FExpressionInput
		constexpr auto WorldHeight = 0x90; // FExpressionInput
		constexpr auto Opacity = 0xa4; // FExpressionInput
		constexpr auto Mask = 0xb8; // FExpressionInput
	}

	namespace n_UUW-ReplayEventMarker_Resuscitated_C {
		constexpr auto UberGraphFrame = 0x2a0; // FPointerToUberGraphFrame
		constexpr auto VisualBorder = 0x2a8; // UBorder*
	}

	namespace n_UGameInstance {
		constexpr auto LocalPlayers = 0xb8; // TArray<ULocalPlayer*>
		constexpr auto OnlineSession = 0xc8; // UOnlineSession*
		constexpr auto ReferencedObjects = 0xd0; // TArray<UObject*>
	}

	namespace n_UMovieScene3DTransformSection {
		constexpr auto TransformMask = 0xe0; // FMovieSceneTransformMask
		constexpr auto Translation = 0xe8; // FMovieSceneFloatChannel [0x3]
		constexpr auto Rotation = 0x2c8; // FMovieSceneFloatChannel [0x3]
		constexpr auto Scale = 0x4a8; // FMovieSceneFloatChannel [0x3]
		constexpr auto ManualWeight = 0x688; // FMovieSceneFloatChannel
		constexpr auto bUseQuaternionInterpolation = 0x72c; // bool
	}

	namespace n_USourceEffectPhaserPreset {
		constexpr auto Settings = 0x78; // FSourceEffectPhaserSettings
	}

	namespace n_UUW-PlayerInfo_Progress_Renew_C {
		constexpr auto UberGraphFrame = 0x2e8; // FPointerToUberGraphFrame
		constexpr auto Anim_Healing = 0x2f0; // UWidgetAnimation*
		constexpr auto HorizontalBox_Health = 0x2f8; // UHorizontalBox*
		constexpr auto Image_eager = 0x300; // UImage*
		constexpr auto SizeBox_main = 0x308; // USizeBox*
		constexpr auto Curve_ProgressMaxSizeRatio = 0x310; // UCurveFloat*
		constexpr auto DefaultSlotSize = 0x318; // float
		constexpr auto MaxHealthSize = 0x31c; // float
		constexpr auto CurrentHealthSize = 0x320; // float
		constexpr auto CurrentMaxHealth = 0x324; // float
	}

	namespace n_UInputKeySelector {
		constexpr auto WidgetStyle = 0x108; // FButtonStyle
		constexpr auto TextStyle = 0x380; // FTextBlockStyle
		constexpr auto SelectedKey = 0x5e8; // FInputChord
		constexpr auto Font = 0x608; // FSlateFontInfo
		constexpr auto Margin = 0x658; // FMargin
		constexpr auto ColorAndOpacity = 0x668; // FLinearColor
		constexpr auto KeySelectionText = 0x678; // FText
		constexpr auto NoKeySpecifiedText = 0x690; // FText
		constexpr auto bAllowModifierKeys = 0x6a8; // bool
		constexpr auto bAllowGamepadKeys = 0x6a9; // bool
		constexpr auto EscapeKeys = 0x6b0; // TArray<FKey>
		constexpr auto OnKeySelected = 0x6c0; // FMulticastInlineDelegate
		constexpr auto OnIsSelectingKeyChanged = 0x6d0; // FMulticastInlineDelegate
	}

	namespace n_UEngineMessage {
		constexpr auto FailedPlaceMessage = 0x28; // FString
		constexpr auto MaxedOutMessage = 0x38; // FString
		constexpr auto EnteredMessage = 0x48; // FString
		constexpr auto LeftMessage = 0x58; // FString
		constexpr auto GlobalNameChange = 0x68; // FString
		constexpr auto SpecEnteredMessage = 0x78; // FString
		constexpr auto NewPlayerMessage = 0x88; // FString
		constexpr auto NewSpecMessage = 0x98; // FString
	}

	namespace n_UAudioSettings {
		constexpr auto DefaultSoundClassName = 0x38; // FSoftObjectPath
		constexpr auto DefaultMediaSoundClassName = 0x50; // FSoftObjectPath
		constexpr auto DefaultSoundConcurrencyName = 0x68; // FSoftObjectPath
		constexpr auto DefaultBaseSoundMix = 0x80; // FSoftObjectPath
		constexpr auto VoiPSoundClass = 0x98; // FSoftObjectPath
		constexpr auto MasterSubmix = 0xb0; // FSoftObjectPath
		constexpr auto ReverbSubmix = 0xc8; // FSoftObjectPath
		constexpr auto EQSubmix = 0xe0; // FSoftObjectPath
		constexpr auto VoiPSampleRate = 0xf8; // EVoiceSampleRate
		constexpr auto DefaultReverbSendLevel = 0xfc; // float
		constexpr auto MaximumConcurrentStreams = 0x100; // int32_t
		constexpr auto GlobalMinPitchScale = 0x104; // float
		constexpr auto GlobalMaxPitchScale = 0x108; // float
		constexpr auto QualityLevels = 0x110; // TArray<FAudioQualitySettings>
		constexpr auto bAllowPlayWhenSilent = 0x120; // char : 1
		constexpr auto bDisableMasterEQ = 0x120; // char : 1
		constexpr auto bAllowCenterChannel3DPanning = 0x120; // char : 1
		constexpr auto NumStoppingSources = 0x124; // uint32_t
		constexpr auto PanningMethod = 0x128; // EPanningMethod
		constexpr auto MonoChannelUpmixMethod = 0x129; // EMonoChannelUpmixMethod
		constexpr auto DialogueFilenameFormat = 0x130; // FString
	}

	namespace n_UParticleModuleRequired {
		constexpr auto Material = 0x30; // UMaterialInterface*
		constexpr auto MinFacingCameraBlendDistance = 0x38; // float
		constexpr auto MaxFacingCameraBlendDistance = 0x3c; // float
		constexpr auto EmitterOrigin = 0x40; // FVector
		constexpr auto EmitterRotation = 0x4c; // FRotator
		constexpr auto ScreenAlignment = 0x58; // EParticleScreenAlignment
		constexpr auto bUseLocalSpace = 0x59; // char : 1
		constexpr auto bKillOnDeactivate = 0x59; // char : 1
		constexpr auto bKillOnCompleted = 0x59; // char : 1
		constexpr auto SortMode = 0x5a; // EParticleSortMode
		constexpr auto bUseLegacyEmitterTime = 0x5b; // char : 1
		constexpr auto bRemoveHMDRoll = 0x5b; // char : 1
		constexpr auto bEmitterDurationUseRange = 0x5b; // char : 1
		constexpr auto EmitterDuration = 0x5c; // float
		constexpr auto SpawnRate = 0x60; // FRawDistributionFloat
		constexpr auto BurstList = 0x90; // TArray<FParticleBurst>
		constexpr auto EmitterDelay = 0xa0; // float
		constexpr auto EmitterDelayLow = 0xa4; // float
		constexpr auto bDelayFirstLoopOnly = 0xa8; // char : 1
		constexpr auto InterpolationMethod = 0xa9; // EParticleSubUVInterpMethod
		constexpr auto bScaleUV = 0xaa; // char : 1
		constexpr auto bEmitterDelayUseRange = 0xaa; // char : 1
		constexpr auto ParticleBurstMethod = 0xab; // EParticleBurstMethod
		constexpr auto bOverrideSystemMacroUV = 0xac; // char : 1
		constexpr auto bUseMaxDrawCount = 0xac; // char : 1
		constexpr auto OpacitySourceMode = 0xad; // EOpacitySourceMode
		constexpr auto EmitterNormalsMode = 0xae; // EEmitterNormalsMode
		constexpr auto bOrbitModuleAffectsVelocityAlignment = 0xaf; // char : 1
		constexpr auto SubImages_Horizontal = 0xb0; // int32_t
		constexpr auto SubImages_Vertical = 0xb4; // int32_t
		constexpr auto RandomImageTime = 0xb8; // float
		constexpr auto RandomImageChanges = 0xbc; // int32_t
		constexpr auto MacroUVPosition = 0xc0; // FVector
		constexpr auto MacroUVRadius = 0xcc; // float
		constexpr auto UVFlippingMode = 0xd0; // EParticleUVFlipMode
		constexpr auto BoundingMode = 0xd1; // ESubUVBoundingVertexCount
		constexpr auto bDurationRecalcEachLoop = 0xd2; // char : 1
		constexpr auto NormalsSphereCenter = 0xd4; // FVector
		constexpr auto AlphaThreshold = 0xe0; // float
		constexpr auto EmitterLoops = 0xe4; // int32_t
		constexpr auto CutoutTexture = 0xe8; // UTexture2D*
		constexpr auto MaxDrawCount = 0xf0; // int32_t
		constexpr auto EmitterDurationLow = 0xf4; // float
		constexpr auto NormalsCylinderDirection = 0xf8; // FVector
		constexpr auto NamedMaterialOverrides = 0x108; // TArray<FName>
	}

	namespace n_UUW-Lobby_Craft_Success_Perk_Close_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Button_96 = 0x250; // UButton*
		constexpr auto Image = 0x258; // UImage*
		constexpr auto Image_193 = 0x260; // UImage*
		constexpr auto Image_395 = 0x268; // UImage*
		constexpr auto Image_Arrow_Guide = 0x270; // UImage*
		constexpr auto Img_hover = 0x278; // UImage*
		constexpr auto Img_Pressed = 0x280; // UImage*
		constexpr auto UW-Lobby_Craft_Success_Perk_Slot = 0x288; // UUW-Lobby_Craft_Success_Perk_Slot_C*
		constexpr auto WidgetSwitcher_263 = 0x290; // UWidgetSwitcher*
		constexpr auto EventDispatcher_EndOpen = 0x298; // FMulticastInlineDelegate
		constexpr auto ItemOption = 0x2a8; // FItemOption
		constexpr auto IsOpened = 0x360; // bool
		constexpr auto CurrentHoverOpacity = 0x364; // float
		constexpr auto PressedMaterialInstance = 0x368; // UMaterialInstanceDynamic*
		constexpr auto CurrentPressedAnim = 0x370; // float
		constexpr auto EventDispatcher_StartOpen = 0x378; // FMulticastInlineDelegate
	}

	namespace n_UBTTask_SetTagCooldown {
		constexpr auto CooldownTag = 0x70; // FGameplayTag
		constexpr auto bAddToExistingDuration = 0x78; // bool
		constexpr auto CooldownDuration = 0x7c; // float
	}

	namespace n_UAkMacInitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettingsWithSampleRate
		constexpr auto CommunicationSettings = 0x90; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xb8; // FAkAdvancedInitializationSettingsWithMultiCoreRendering
	}

	namespace n_UUW-CheatReplayListTitleItem_C {
		constexpr auto TextBlock_62 = 0x248; // UTextBlock*
	}

	namespace n_UMagicLeapMeshTrackerComponent {
		constexpr auto OnMeshTrackerUpdated = 0x238; // FMulticastInlineDelegate
		constexpr auto ScanWorld = 0x248; // bool
		constexpr auto MeshType = 0x249; // EMagicLeapMeshType
		constexpr auto BoundingVolume = 0x250; // UBoxComponent*
		constexpr auto LevelOfDetail = 0x258; // EMagicLeapMeshLOD
		constexpr auto PerimeterOfGapsToFill = 0x25c; // float
		constexpr auto Planarize = 0x260; // bool
		constexpr auto DisconnectedSectionArea = 0x264; // float
		constexpr auto RequestNormals = 0x268; // bool
		constexpr auto RequestVertexConfidence = 0x269; // bool
		constexpr auto VertexColorMode = 0x26a; // EMagicLeapMeshVertexColorMode
		constexpr auto BlockVertexColors = 0x270; // TArray<FColor>
		constexpr auto VertexColorFromConfidenceZero = 0x280; // FLinearColor
		constexpr auto VertexColorFromConfidenceOne = 0x290; // FLinearColor
		constexpr auto RemoveOverlappingTriangles = 0x2a0; // bool
		constexpr auto MRMesh = 0x2a8; // UMRMeshComponent*
		constexpr auto BricksPerFrame = 0x2b0; // int32_t
	}

	namespace n_UBehaviorTreeComponent {
		constexpr auto NodeInstances = 0x130; // TArray<UBTNode*>
		constexpr auto DefaultBehaviorTreeAsset = 0x268; // UBehaviorTree*
	}

	namespace n_UAchievementQueryCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionRayTracingQualitySwitch {
		constexpr auto Normal = 0x40; // FExpressionInput
		constexpr auto RayTraced = 0x54; // FExpressionInput
	}

	namespace n_UUW-ReportUserConfirm_C {
		constexpr auto UberGraphFrame = 0x258; // FPointerToUberGraphFrame
		constexpr auto btn_Cancel = 0x260; // UButton*
		constexpr auto btn_confirm = 0x268; // UButton*
		constexpr auto popup-bg = 0x270; // UImage*
		constexpr auto txt_description = 0x278; // UTextBlock*
		constexpr auto uw-bg = 0x280; // UImage*
	}

	namespace n_UBTTask_RunEQSQuery {
		constexpr auto QueryTemplate = 0x98; // UEnvQuery*
		constexpr auto QueryParams = 0xa0; // TArray<FEnvNamedValue>
		constexpr auto QueryConfig = 0xb0; // TArray<FAIDynamicParam>
		constexpr auto RunMode = 0xc0; // EEnvQueryRunMode
		constexpr auto EQSQueryBlackboardKey = 0xc8; // FBlackboardKeySelector
		constexpr auto bUseBBKey = 0xf0; // bool
		constexpr auto EQSRequest = 0xf8; // FEQSParametrizedQueryExecutionRequest
	}

	namespace n_UCameraModifier_CameraShake {
		constexpr auto ActiveShakes = 0x48; // TArray<FActiveCameraShakeInfo>
		constexpr auto ExpiredPooledShakesMap = 0x58; // TMap<UCameraShake*, FPooledCameraShakes>
		constexpr auto SplitScreenShakeScale = 0xa8; // float
	}

	namespace n_UMaterialExpressionTransform {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto TransformSourceType = 0x54; // EMaterialVectorCoordTransformSource
		constexpr auto TransformType = 0x55; // EMaterialVectorCoordTransform
	}

	namespace n_UPhysicsThrusterComponent {
		constexpr auto ThrustStrength = 0x230; // float
	}

	namespace n_UOnlineEngineInterfaceImpl {
		constexpr auto VoiceSubsystemNameOverride = 0x28; // FName
	}

	namespace n_UInvalidationBox {
		constexpr auto bCanCache = 0x120; // bool
		constexpr auto CacheRelativeTransforms = 0x121; // bool
	}

	namespace n_UEnvQueryTest_PathfindingBatch {
		constexpr auto ScanRangeMultiplier = 0x280; // FAIDataProviderFloatValue
	}

	namespace n_UMagicLeapImageTrackerComponent {
		constexpr auto TargetImageTexture = 0x230; // UTexture2D*
		constexpr auto Name = 0x238; // FString
		constexpr auto LongerDimension = 0x248; // float
		constexpr auto bIsStationary = 0x24c; // bool
		constexpr auto bUseUnreliablePose = 0x24d; // bool
		constexpr auto OnSetImageTargetSucceeded = 0x250; // FMulticastInlineDelegate
		constexpr auto OnSetImageTargetFailed = 0x260; // FMulticastInlineDelegate
		constexpr auto OnImageTargetFound = 0x270; // FMulticastInlineDelegate
		constexpr auto OnImageTargetLost = 0x280; // FMulticastInlineDelegate
		constexpr auto OnImageTargetUnreliableTracking = 0x290; // FMulticastInlineDelegate
	}

	namespace n_UBHReplicatedPlayerInfo {
		constexpr auto UID = 0xc0; // FName
		constexpr auto UniquePlayerId = 0xc8; // int32_t
		constexpr auto SeasonInfo = 0xcc; // FPlayerSeasonInfo
		constexpr auto CurrentPCTypeID = 0xe4; // int32_t
		constexpr auto TeamIndex = 0xe8; // char
		constexpr auto TeamSize = 0xe9; // char
		constexpr auto TeamPlayerIconIndex = 0xec; // int32_t
		constexpr auto CurrentPerkDeckInfo = 0xf0; // FPerkDeckInfo
		constexpr auto SupplyInfoFromServer = 0x160; // FSupplyBoxInfo
		constexpr auto SupplyWeaponInfo = 0x1a8; // FWeaponInfo
		constexpr auto bIsSuspiciousUser = 0x1d8; // bool
		constexpr auto NewbieData = 0x1e0; // FRepNewbieData
	}

	namespace n_UScrollBoxWidgetStyle {
		constexpr auto ScrollBoxStyle = 0x30; // FScrollBoxStyle
	}

	namespace n_UCameraComponent {
		constexpr auto FieldOfView = 0x230; // float
		constexpr auto OrthoWidth = 0x234; // float
		constexpr auto OrthoNearClipPlane = 0x238; // float
		constexpr auto OrthoFarClipPlane = 0x23c; // float
		constexpr auto AspectRatio = 0x240; // float
		constexpr auto bConstrainAspectRatio = 0x244; // char : 1
		constexpr auto bUseFieldOfViewForLOD = 0x244; // char : 1
		constexpr auto bLockToHmd = 0x24c; // char : 1
		constexpr auto bUsePawnControlRotation = 0x24c; // char : 1
		constexpr auto ProjectionMode = 0x24d; // ECameraProjectionMode
		constexpr auto PostProcessBlendWeight = 0x280; // float
		constexpr auto PostProcessSettings = 0x2b0; // FPostProcessSettings
	}

	namespace n_UAkSurfaceReflectorSetComponent {
		constexpr auto bEnableSurfaceReflectors = 0x230; // char : 1
		constexpr auto AcousticPolys = 0x238; // TArray<FAkPoly>
		constexpr auto bEnableDiffraction = 0x248; // char : 1
		constexpr auto bEnableDiffractionOnBoundaryEdges = 0x248; // char : 1
		constexpr auto AssociatedRoom = 0x250; // AActor*
	}

	namespace n_USightInfoData {
		constexpr auto DefaultSightViewRatio = 0x30; // FVector2D
		constexpr auto HoloSightViewRatio = 0x38; // FVector2D
		constexpr auto ReddotViewRatio = 0x40; // FVector2D
		constexpr auto DigitalViewRatio = 0x48; // FVector2D
		constexpr auto X2ViewRatio = 0x50; // FVector2D
		constexpr auto X4ViewRatio = 0x58; // FVector2D
		constexpr auto X8ViewRatio = 0x60; // FVector2D
		constexpr auto X15ViewRatio = 0x68; // FVector2D
	}

	namespace n_UObjectReferencer {
		constexpr auto ReferencedObjects = 0x28; // TArray<UObject*>
	}

	namespace n_UDataTable {
		constexpr auto RowStruct = 0x28; // UScriptStruct*
		constexpr auto bStripFromClientBuilds = 0x80; // char : 1
		constexpr auto bIgnoreExtraFields = 0x80; // char : 1
		constexpr auto bIgnoreMissingFields = 0x80; // char : 1
		constexpr auto ImportKeyField = 0x88; // FString
	}

	namespace n_UVehicleSeatData {
		constexpr auto bShouldUseTwoHandIK = 0x30; // bool
		constexpr auto IdleAimOffset = 0x38; // UBlendSpaceBase*
		constexpr auto UnarmedIdleAnim = 0x40; // UAnimSequence*
		constexpr auto UnarmedStandAnim = 0x48; // UAnimSequence*
		constexpr auto RifleIdleAnim = 0x50; // UAnimSequence*
		constexpr auto RifleAimingAOSAnim = 0x58; // UAnimSequence*
		constexpr auto RifleAimOffset = 0x60; // UBlendSpaceBase*
		constexpr auto RifleAOSBlendingAnim = 0x68; // UBlendSpaceBase*
		constexpr auto PistolIdleAnim = 0x70; // UAnimSequence*
		constexpr auto PistolAimingAOSAnim = 0x78; // UAnimSequence*
		constexpr auto PistolAimOffset = 0x80; // UBlendSpaceBase*
		constexpr auto PistolAOSBlendingAnim = 0x88; // UBlendSpaceBase*
		constexpr auto ThrowingWeaponIdleAnim = 0x90; // UAnimSequence*
		constexpr auto ThrowingWeaponAimingAOSAnim = 0x98; // UAnimSequence*
		constexpr auto OverThrow_ThrowingWeaponAimOffset = 0xa0; // UBlendSpaceBase*
		constexpr auto UnderThrow_ThrowingWeaponAimOffset = 0xa8; // UBlendSpaceBase*
		constexpr auto ThrowingWeaponOverThrowBlendingAnim = 0xb0; // UBlendSpaceBase*
		constexpr auto ThrowingWeaponUnderThrowBlendingAnim = 0xb8; // UBlendSpaceBase*
		constexpr auto OverThrowAnim = 0xc0; // FAnimSlot
		constexpr auto UnderThrowAnim = 0xd0; // FAnimSlot
		constexpr auto RPGIdleAnim = 0xe0; // UAnimSequence*
		constexpr auto OccupantAOSBlendingCurve = 0xe8; // UCurveVector*
		constexpr auto AimingCameraTargetLocation = 0xf0; // FVector
		constexpr auto MinimumCameraPitchCurve = 0x100; // UCurveFloat*
		constexpr auto MinimumCameraYaw = 0x108; // float
		constexpr auto MaximumCameraYaw = 0x10c; // float
		constexpr auto IdleViewPitchMin = 0x110; // float
		constexpr auto IdleViewPitchMax = 0x114; // float
		constexpr auto IdleViewYawMin = 0x118; // float
		constexpr auto IdleViewYawMax = 0x11c; // float
		constexpr auto BS_DriverHandlebar_1P = 0x120; // UBlendSpaceBase*
		constexpr auto BS_DriverHandlebar_3P = 0x128; // UBlendSpaceBase*
		constexpr auto DriverHandlingIdleAnim_1P = 0x130; // UAnimSequence*
		constexpr auto DriverHandlingIdleAnim_3P = 0x138; // UAnimSequence*
		constexpr auto DriverHandlingLeftAnim_1P = 0x140; // UAnimSequence*
		constexpr auto DriverHandlingLeftAnim_3P = 0x148; // UAnimSequence*
		constexpr auto DriverHandlingRightAnim_1P = 0x150; // UAnimSequence*
		constexpr auto DriverHandlingRightAnim_3P = 0x158; // UAnimSequence*
		constexpr auto bCheckRightHandAimOffset = 0x160; // bool
		constexpr auto DriverAimOffsetBasePose_1P = 0x168; // UAnimSequence*
		constexpr auto DriverAimOffset_1P = 0x170; // UBlendSpaceBase*
	}

	namespace n_UEditableGameplayTagQueryExpression_AllExprMatch {
		constexpr auto Expressions = 0x28; // TArray<UEditableGameplayTagQueryExpression*>
	}

	namespace n_ULevelSequenceDirector {
		constexpr auto Player = 0x28; // ULevelSequencePlayer*
	}

	namespace n_UGeometryCollectionCache {
		constexpr auto RecordedData = 0x28; // FRecordedTransformTrack
		constexpr auto SupportedCollection = 0x38; // UGeometryCollection*
		constexpr auto CompatibleCollectionState = 0x40; // FGuid
	}

	namespace n_UBP-SpectatorWidget_C {
		constexpr auto UberGraphFrame = 0x250; // FPointerToUberGraphFrame
		constexpr auto BackgroundBlurFadeIn = 0x258; // UWidgetAnimation*
		constexpr auto Idle = 0x260; // UWidgetAnimation*
		constexpr auto BackgroundBlur_1 = 0x268; // UBackgroundBlur*
		constexpr auto BTN-Exit = 0x270; // UButton*
		constexpr auto Btn-NextTarget = 0x278; // UButton*
		constexpr auto Btn-PreTarget = 0x280; // UButton*
		constexpr auto Btn-Replay = 0x288; // UButton*
		constexpr auto Canvas_Main = 0x290; // UCanvasPanel*
		constexpr auto KillcamBtns = 0x298; // UHorizontalBox*
		constexpr auto MemberChangeBox = 0x2a0; // UHorizontalBox*
		constexpr auto TextDepth_Replay = 0x2a8; // UTextBlock*
		constexpr auto UW-SpectatingTargetInfo = 0x2b0; // UUW-SpectatingTargetInfo_C*
		constexpr auto bIsKillCam = 0x2b8; // bool
	}

	namespace n_APartyBeaconClient {
		constexpr auto DestSessionId = 0x3d8; // FString
		constexpr auto PendingReservation = 0x3e8; // FPartyReservation
		constexpr auto RequestType = 0x438; // EClientRequestType
		constexpr auto bPendingReservationSent = 0x439; // bool
		constexpr auto bCancelReservation = 0x43a; // bool
	}

	namespace n_ABandwidthTestActor {
		constexpr auto BandwidthGenerator = 0x318; // FBandwidthTestGenerator
	}

	namespace n_UARPlaneGeometry {
		constexpr auto Orientation = 0xe8; // EARPlaneOrientation
		constexpr auto Center = 0xec; // FVector
		constexpr auto Extent = 0xf8; // FVector
		constexpr auto SubsumedBy = 0x118; // UARPlaneGeometry*
	}

	namespace n_UUW-WorldMapMarkerWidget_C {
		constexpr auto Image_SupplyBoxMarker = 0x248; // UImage*
		constexpr auto PersonalSupplyBox = 0x250; // UCanvasPanel*
		constexpr auto WidgetSwitcher_2 = 0x258; // UWidgetSwitcher*
		constexpr auto OnMarkerClicked = 0x260; // FMulticastInlineDelegate
		constexpr auto CurrentMarker = 0x270; // UImage*
		constexpr auto MapCompRef = 0x278; // UUW-MapComp_C*
		constexpr auto TmpPingTypeTexture = 0x280; // UObject*
	}

	namespace n_UMaterialExpressionCrossProduct {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_UMovieSceneTrack {
		constexpr auto EvalOptions = 0x50; // FMovieSceneTrackEvalOptions
		constexpr auto bIsEvalDisabled = 0x55; // bool
	}

	namespace n_UMaterialExpressionFunctionOutput {
		constexpr auto OutputName = 0x40; // FName
		constexpr auto Description = 0x48; // FString
		constexpr auto SortPriority = 0x58; // int32_t
		constexpr auto A = 0x5c; // FExpressionInput
		constexpr auto bLastPreviewed = 0x70; // char : 1
		constexpr auto ID = 0x74; // FGuid
	}

	namespace n_UBodySetup {
		constexpr auto AggGeom = 0x28; // FKAggregateGeom
		constexpr auto BoneName = 0x80; // FName
		constexpr auto PhysicsType = 0x88; // EPhysicsType
		constexpr auto bAlwaysFullAnimWeight = 0x89; // char : 1
		constexpr auto bConsiderForBounds = 0x89; // char : 1
		constexpr auto bMeshCollideAll = 0x89; // char : 1
		constexpr auto bDoubleSidedGeometry = 0x89; // char : 1
		constexpr auto bGenerateNonMirroredCollision = 0x89; // char : 1
		constexpr auto bSharedCookedData = 0x89; // char : 1
		constexpr auto bGenerateMirroredCollision = 0x89; // char : 1
		constexpr auto bSupportUVsAndFaceRemap = 0x89; // char : 1
		constexpr auto CollisionReponse = 0x8b; // EBodyCollisionResponse
		constexpr auto CollisionTraceFlag = 0x8c; // ECollisionTraceFlag
		constexpr auto PhysMaterial = 0x90; // UPhysicalMaterial*
		constexpr auto WalkableSlopeOverride = 0x98; // FWalkableSlopeOverride
		constexpr auto DefaultInstance = 0x120; // FBodyInstance
		constexpr auto BuildScale3D = 0x2b8; // FVector
	}

	namespace n_ULiveLinkSubjectSettings {
		constexpr auto PreProcessors = 0x28; // TArray<ULiveLinkFramePreProcessor*>
		constexpr auto InterpolationProcessor = 0x38; // ULiveLinkFrameInterpolationProcessor*
		constexpr auto Translators = 0x40; // TArray<ULiveLinkFrameTranslator*>
		constexpr auto Role = 0x50; // ULiveLinkRole*
	}

	namespace n_ABravoHotelScenarioActor {
		constexpr auto bActiveOnStart = 0x340; // bool
	}

	namespace n_UAnimBlueprintGeneratedClass {
		constexpr auto SyncGroupNames = 0x3e0; // TArray<FName>
		constexpr auto TargetSkeleton = 0x410; // USkeleton*
		constexpr auto EvaluateGraphExposedInputs = 0x428; // TArray<FExposedValueHandler>
		constexpr auto GraphBlendOptions = 0x438; // TMap<FName, FAnimGraphBlendOptions>
		constexpr auto OrderedSavedPoseIndicesMap = 0x488; // TMap<FName, FCachedPoseIndices>
		constexpr auto AnimNotifies = 0x4e8; // TArray<FAnimNotifyEvent>
		constexpr auto BakedStateMachines = 0x4f8; // TArray<FBakedAnimationStateMachine>
		constexpr auto GraphAssetPlayerInformation = 0x508; // TMap<FName, FGraphAssetPlayerInformation>
	}

	namespace n_UAkHololensInitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettingsWithSampleRate
		constexpr auto CommunicationSettings = 0x90; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xb8; // FAkHololensAdvancedInitializationSettings
	}

	namespace n_UFSM_SetStateID_ConditionalAsync {
		constexpr auto Target = 0x30; // UStateMachineComponent*
		constexpr auto Conditional = 0x38; // FSM_Transition
		constexpr auto StateID = 0x39; // char
		constexpr auto Timer = 0x3c; // float
		constexpr auto Repeat = 0x40; // bool
		constexpr auto TimerHandle = 0x48; // FTimerHandle
		constexpr auto OnSuccess = 0x50; // FMulticastInlineDelegate
		constexpr auto OnAborted = 0x60; // FMulticastInlineDelegate
	}

	namespace n_UBTTask_PlaySound {
		constexpr auto SoundToPlay = 0x70; // USoundCue*
	}

	namespace n_UMaterialExpressionGetMaterialAttributes {
		constexpr auto MaterialAttributes = 0x40; // FMaterialAttributesInput
		constexpr auto AttributeGetTypes = 0x58; // TArray<FGuid>
	}

	namespace n_UNiagaraEventReceiverEmitterAction_SpawnParticles {
		constexpr auto NumParticles = 0x28; // uint32_t
	}

	namespace n_UAkCheckBox {
		constexpr auto CheckedState = 0x4d0; // ECheckBoxState
		constexpr auto CheckedStateDelegate = 0x4d4; // FDelegate
		constexpr auto WidgetStyle = 0x4e8; // FCheckBoxStyle
		constexpr auto HorizontalAlignment = 0xa68; // EHorizontalAlignment
		constexpr auto IsFocusable = 0xa69; // bool
		constexpr auto ThePropertyToControl = 0xa70; // FAkBoolPropertyToControl
		constexpr auto ItemToControl = 0xa80; // FAkWwiseItemToControl
		constexpr auto AkOnCheckStateChanged = 0xac0; // FMulticastInlineDelegate
		constexpr auto OnItemDropped = 0xad0; // FMulticastInlineDelegate
		constexpr auto OnPropertyDropped = 0xae0; // FMulticastInlineDelegate
	}

	namespace n_UCustomizableObjectInstance {
		constexpr auto CustomizableObject = 0x28; // UCustomizableObject*
		constexpr auto SkeletalMesh = 0x30; // USkeletalMesh*
		constexpr auto BoolParameters = 0x38; // TArray<FCustomizableObjectBoolParameterValue>
		constexpr auto IntParameters = 0x48; // TArray<FCustomizableObjectIntParameterValue>
		constexpr auto FloatParameters = 0x58; // TArray<FCustomizableObjectFloatParameterValue>
		constexpr auto TextureParameters = 0x68; // TArray<FCustomizableObjectTextureParameterValue>
		constexpr auto VectorParameters = 0x78; // TArray<FCustomizableObjectVectorParameterValue>
		constexpr auto ProjectorParameters = 0x88; // TArray<FCustomizableObjectProjectorParameterValue>
		constexpr auto bBuildParameterDecorations = 0x98; // bool
		constexpr auto UpdatedDelegate = 0xa0; // FMulticastInlineDelegate
		constexpr auto SkeletalMeshStatus = 0x110; // FString
		constexpr auto MaterialTags = 0x140; // TArray<FString>
		constexpr auto PrivateData = 0x1d0; // UCustomizableInstancePrivateData*
	}

	namespace n_ULandscapeSplineControlPoint {
		constexpr auto Location = 0x28; // FVector
		constexpr auto Rotation = 0x34; // FRotator
		constexpr auto Width = 0x40; // float
		constexpr auto LayerWidthRatio = 0x44; // float
		constexpr auto SideFalloff = 0x48; // float
		constexpr auto LeftSideFalloffFactor = 0x4c; // float
		constexpr auto RightSideFalloffFactor = 0x50; // float
		constexpr auto LeftSideLayerFalloffFactor = 0x54; // float
		constexpr auto RightSideLayerFalloffFactor = 0x58; // float
		constexpr auto EndFalloff = 0x5c; // float
		constexpr auto ConnectedSegments = 0x60; // TArray<FLandscapeSplineConnection>
		constexpr auto Points = 0x70; // TArray<FLandscapeSplineInterpPoint>
		constexpr auto Bounds = 0x80; // FBox
		constexpr auto LocalMeshComponent = 0xa0; // UControlPointMeshComponent*
	}

	namespace n_UGizmoAxisRotationParameterSource {
		constexpr auto AxisSource = 0x48; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0x58; // TScriptInterface<IGizmoTransformSource>
		constexpr auto Angle = 0x68; // float
		constexpr auto LastChange = 0x6c; // FGizmoFloatParameterChange
		constexpr auto CurRotationAxis = 0x74; // FVector
		constexpr auto CurRotationOrigin = 0x80; // FVector
		constexpr auto InitialTransform = 0x90; // FTransform
	}

	namespace n_UBP-GrassCollision_Character_C {
		constexpr auto UberGraphFrame = 0xb8; // FPointerToUberGraphFrame
		constexpr auto TextureScale = 0xc0; // float
		constexpr auto CollisionArea = 0xc4; // float
		constexpr auto LieDistance = 0xc8; // float
		constexpr auto DrawDistance = 0xcc; // float
		constexpr auto Brush = 0xd0; // UMaterialInstance*
		constexpr auto Brush Intensity = 0xd8; // float
		constexpr auto Eraser = 0xe0; // UMaterialInstance*
		constexpr auto Erase Intensity = 0xe8; // float
		constexpr auto IsTickStart = 0xec; // bool
		constexpr auto TargetCharacter = 0xf0; // ABravoHotelCharacter*
	}

	namespace n_UMaterialExpressionGIReplace {
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto StaticIndirect = 0x54; // FExpressionInput
		constexpr auto DynamicIndirect = 0x68; // FExpressionInput
	}

	namespace n_UArmoryDataAsset {
		constexpr auto StaticMesh = 0x30; // TSoftObjectPtr<UStaticMesh>
		constexpr auto LocationOffset = 0x58; // FVector
		constexpr auto RotationOffset = 0x64; // FRotator
		constexpr auto ScaleOffset = 0x70; // FVector
	}

	namespace n_UMaterialExpressionCurveAtlasRowParameter {
		constexpr auto Curve = 0x60; // UCurveLinearColor*
		constexpr auto Atlas = 0x68; // UCurveLinearColorAtlas*
		constexpr auto InputTime = 0x70; // FExpressionInput
	}

	namespace n_ULowEntryLatentActionFloat {
		constexpr auto Finished = 0x28; // bool
		constexpr auto Result = 0x2c; // float
		constexpr auto KeepAliveCount = 0x30; // int32_t
	}

	namespace n_UEnvQueryGenerator_SimpleGrid {
		constexpr auto GridSize = 0x80; // FAIDataProviderFloatValue
		constexpr auto SpaceBetween = 0xb8; // FAIDataProviderFloatValue
		constexpr auto GenerateAround = 0xf0; // UEnvQueryContext*
	}

	namespace n_UNavigationSystemV1 {
		constexpr auto MainNavData = 0x28; // ANavigationData*
		constexpr auto AbstractNavData = 0x30; // ANavigationData*
		constexpr auto DefaultAgentName = 0x38; // FName
		constexpr auto CrowdManagerClass = 0x40; // TSoftClassPtr<UObject>
		constexpr auto bAutoCreateNavigationData = 0x68; // char : 1
		constexpr auto bSpawnNavDataInNavBoundsLevel = 0x68; // char : 1
		constexpr auto bAllowClientSideNavigation = 0x68; // char : 1
		constexpr auto bShouldDiscardSubLevelNavData = 0x68; // char : 1
		constexpr auto bTickWhilePaused = 0x68; // char : 1
		constexpr auto bSupportRebuilding = 0x68; // char : 1
		constexpr auto bInitialBuildingLocked = 0x68; // char : 1
		constexpr auto bSkipAgentHeightCheckWhenPickingNavData = 0x69; // char : 1
		constexpr auto DataGatheringMode = 0x6c; // ENavDataGatheringModeConfig
		constexpr auto bGenerateNavigationOnlyAroundNavigationInvokers = 0x70; // char : 1
		constexpr auto ActiveTilesUpdateInterval = 0x74; // float
		constexpr auto SupportedAgents = 0x78; // TArray<FNavDataConfig>
		constexpr auto SupportedAgentsMask = 0x88; // FNavAgentSelector
		constexpr auto NavDataSet = 0x90; // TArray<ANavigationData*>
		constexpr auto NavDataRegistrationQueue = 0xa0; // TArray<ANavigationData*>
		constexpr auto OnNavDataRegisteredEvent = 0xc0; // FMulticastInlineDelegate
		constexpr auto OnNavigationGenerationFinishedDelegate = 0xd0; // FMulticastInlineDelegate
		constexpr auto OperationMode = 0x1bc; // FNavigationSystemRunMode
		constexpr auto DirtyAreasUpdateFreq = 0x514; // float
	}

	namespace n_UUW-ReplayMainWidget_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Anim_ToggleItemList = 0x250; // UWidgetAnimation*
		constexpr auto Anim_TogglePlayerList = 0x258; // UWidgetAnimation*
		constexpr auto Anim_ToggleTimeline = 0x260; // UWidgetAnimation*
		constexpr auto UW-ReplayFreeCamSpeedWidget = 0x268; // UUW-ReplayFreeCamSpeedWidget_C*
		constexpr auto UW-ReplayGuideWidget = 0x270; // UUW-ReplayGuideWidget_C*
		constexpr auto UW-ReplayItemList = 0x278; // UUW-ReplayItemList_C*
		constexpr auto UW-ReplayPlayerListWidget = 0x280; // UUW-ReplayPlayerListWidget_C*
		constexpr auto UW-ReplayTimelineBasic = 0x288; // UUW-ReplayTimelineBasic_C*
		constexpr auto UW-ReplayWorldMapOption = 0x290; // UUW-ReplayWorldMapOption_C*
		constexpr auto UW-SpectatingTargetInfo = 0x298; // UUW-SpectatingTargetInfo_C*
		constexpr auto ReplayController = 0x2a0; // ABP-MK3DReplayController_C*
		constexpr auto UserNameTooltips = 0x2a8; // TArray<UUW_ReplayUserNameTooltip_C*>
		constexpr auto MainWidget = 0x2b8; // UBravoHotelMainWidget*
		constexpr auto UserNameTooltipsNum = 0x2c0; // int32_t
	}

	namespace n_ACineCameraActor {
		constexpr auto LookatTrackingSettings = 0x910; // FCameraLookatTrackingSettings
	}

	namespace n_UBravoHotelGameInstance {
		constexpr auto CharacterTeleport = 0x250; // bool
		constexpr auto EnableChatting = 0x251; // bool
		constexpr auto AllowReconnect = 0x252; // bool
		constexpr auto bIsInHouseDevBuild = 0x253; // bool
		constexpr auto DefaultFontFamilyAsset = 0x258; // FString
		constexpr auto DefaultFontFamily = 0x268; // UFont*
		constexpr auto LoadingScreenWidget = 0x270; // UBravoHotelLoadingWidget*
		constexpr auto CurLoadingScreenInfo = 0x278; // FSelectLoadingScreenData
		constexpr auto bWinnerCam = 0x2b8; // bool
		constexpr auto ForceLoadingType = 0x2b9; // ELoadingScreenType
		constexpr auto bIsPlayingKillCam = 0x2ba; // bool
		constexpr auto KillerUniquePlayerId = 0x2c0; // int32_t
		constexpr auto MyUniquePlayerId = 0x2c4; // int32_t
		constexpr auto ReplayListChangedCallBack = 0x2c8; // FMulticastInlineDelegate
		constexpr auto bCheatable = 0x2d8; // bool
		constexpr auto bEnableMakeAccount = 0x2d9; // bool
		constexpr auto GameSettingManager = 0x2e0; // UBravoHotelGameSettingManager*
		constexpr auto LoadingScreenWidgetClass = 0x2f8; // FString
		constexpr auto CohWidgetList = 0x360; // TArray<FCoherentWidgetInfo>
		constexpr auto PopupWidgetClass = 0x450; // FString
		constexpr auto OnChangedLanguageCallBack = 0x460; // FMulticastInlineDelegate
		constexpr auto SaveMemberVoiceInfoList = 0x478; // TMap<FString, FVoiceTalkState>
		constexpr auto InvalidHitInfos = 0x530; // TArray<FRepInvalidHitInfo>
		constexpr auto ReconnectWidget = 0x540; // UUserWidget*
	}

	namespace n_UInterpTrackInstToggle {
		constexpr auto Action = 0x28; // ETrackToggleAction
		constexpr auto LastUpdatePosition = 0x2c; // float
		constexpr auto bSavedActiveState = 0x30; // char : 1
	}

	namespace n_UGizmoComponentHitTarget {
		constexpr auto Component = 0x30; // UPrimitiveComponent*
	}

	namespace n_UEnvQueryGenerator_BlueprintBase {
		constexpr auto GeneratorsActionDescription = 0x50; // FText
		constexpr auto Context = 0x68; // UEnvQueryContext*
		constexpr auto GeneratedItemType = 0x70; // UEnvQueryItemType*
	}

	namespace n_UCrowdManager {
		constexpr auto MyNavData = 0x28; // ANavigationData*
		constexpr auto AvoidanceConfig = 0x30; // TArray<FCrowdAvoidanceConfig>
		constexpr auto SamplingPatterns = 0x40; // TArray<FCrowdAvoidanceSamplingPattern>
		constexpr auto MaxAgents = 0x50; // int32_t
		constexpr auto MaxAgentRadius = 0x54; // float
		constexpr auto MaxAvoidedAgents = 0x58; // int32_t
		constexpr auto MaxAvoidedWalls = 0x5c; // int32_t
		constexpr auto NavmeshCheckInterval = 0x60; // float
		constexpr auto PathOptimizationInterval = 0x64; // float
		constexpr auto SeparationDirClamp = 0x68; // float
		constexpr auto PathOffsetRadiusMultiplier = 0x6c; // float
		constexpr auto bResolveCollisions = 0x70; // char : 1
	}

	namespace n_UGizmoTransformChangeStateTarget {
		constexpr auto TransactionManager = 0x50; // TScriptInterface<IToolContextTransactionProvider>
	}

	namespace n_UBravoHotelQuestManager {
		constexpr auto AddQuestEventDelegates = 0xa8; // TMap<FString, FMulticastInlineDelegate>
	}

	namespace n_UUW-Lobby_Craft_Success_Perk_OpenPopup_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Popup_Alpha_Bg_Black = 0x250; // UWidgetAnimation*
		constexpr auto btn_OK = 0x258; // UButton*
		constexpr auto Image_751 = 0x260; // UImage*
		constexpr auto Perk_List = 0x268; // UHorizontalBox*
		constexpr auto UW-Lobby_Craft_Success_Perk_Open = 0x270; // UUW-Lobby_Craft_Success_Perk_Open_C*
		constexpr auto UW-Lobby_Craft_Success_Perk_Open_2 = 0x278; // UUW-Lobby_Craft_Success_Perk_Open_C*
		constexpr auto UW-Lobby_Craft_Success_Perk_Open_3 = 0x280; // UUW-Lobby_Craft_Success_Perk_Open_C*
		constexpr auto EventDispatcher_OnClosePerkPopup = 0x288; // FMulticastInlineDelegate
	}

	namespace n_ABP-InventoryPawn_C {
		constexpr auto SpotLight1 = 0x3e0; // USpotLightComponent*
	}

	namespace n_UFoliageSettings {
		constexpr auto CullDistancePresets = 0x38; // TArray<FCullDistancePreset>
		constexpr auto DesiredMaxTrianglesToRender = 0x48; // int32_t
		constexpr auto MinimumScreenSize = 0x4c; // float
		constexpr auto MaxOcclusionQueriesPerComponent = 0x50; // int32_t
		constexpr auto MinOcclusionQueriesPerComponent = 0x54; // int32_t
		constexpr auto MinInstancesPerOcclusionQuery = 0x58; // int32_t
	}

	namespace n_USoundNodeConcatenator {
		constexpr auto InputVolume = 0x48; // TArray<float>
	}

	namespace n_UBTService_BlackboardBase {
		constexpr auto BlackboardKey = 0x70; // FBlackboardKeySelector
	}

	namespace n_UMovieSceneBoolSection {
		constexpr auto DefaultValue = 0xe0; // bool
		constexpr auto BoolCurve = 0xe8; // FMovieSceneBoolChannel
	}

	namespace n_UAkLateReverbComponent {
		constexpr auto bEnable = 0x230; // char : 1
		constexpr auto AuxBus = 0x238; // UAkAuxBus*
		constexpr auto AuxBusName = 0x240; // FString
		constexpr auto SendLevel = 0x250; // float
		constexpr auto FadeRate = 0x254; // float
		constexpr auto Priority = 0x258; // float
		constexpr auto NextLowerPriorityComponent = 0x260; // UAkLateReverbComponent*
	}

	namespace n_UUW-RoutePingWidget_Line_C {
		constexpr auto Anim_OnShow = 0x248; // UWidgetAnimation*
		constexpr auto Line = 0x250; // UImage*
		constexpr auto OnMarkerClicked = 0x258; // FMulticastInlineDelegate
		constexpr auto IsLastPoint = 0x268; // bool
	}

	namespace n_UMaterialExpressionRotateAboutAxis {
		constexpr auto NormalizedRotationAxis = 0x40; // FExpressionInput
		constexpr auto RotationAngle = 0x54; // FExpressionInput
		constexpr auto PivotPoint = 0x68; // FExpressionInput
		constexpr auto Position = 0x7c; // FExpressionInput
		constexpr auto Period = 0x90; // float
	}

	namespace n_UDatasmithAreaLightActorTemplate {
		constexpr auto LightType = 0x30; // EDatasmithAreaLightActorType
		constexpr auto LightShape = 0x31; // EDatasmithAreaLightActorShape
		constexpr auto Dimensions = 0x34; // FVector2D
		constexpr auto Color = 0x3c; // FLinearColor
		constexpr auto Intensity = 0x4c; // float
		constexpr auto IntensityUnits = 0x50; // ELightUnits
		constexpr auto Temperature = 0x54; // float
		constexpr auto IESTexture = 0x58; // TSoftObjectPtr<UTextureLightProfile>
		constexpr auto bUseIESBrightness = 0x80; // bool
		constexpr auto IESBrightnessScale = 0x84; // float
		constexpr auto Rotation = 0x88; // FRotator
		constexpr auto SourceRadius = 0x94; // float
		constexpr auto SourceLength = 0x98; // float
		constexpr auto AttenuationRadius = 0x9c; // float
	}

	namespace n_UUW-VoiceTalkSlot_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Button_1 = 0x250; // UButton*
		constexpr auto death = 0x258; // UImage*
		constexpr auto Image_168 = 0x260; // UImage*
		constexpr auto Image_216 = 0x268; // UImage*
		constexpr auto Image_506 = 0x270; // UImage*
		constexpr auto Image_623 = 0x278; // UImage*
		constexpr auto Img_LogOut = 0x280; // UImage*
		constexpr auto Img_Voice = 0x288; // UImage*
		constexpr auto Img_Voice_2 = 0x290; // UImage*
		constexpr auto Overlay_Death = 0x298; // UOverlay*
		constexpr auto Slider_139 = 0x2a0; // USlider*
		constexpr auto T_PlayerIndex = 0x2a8; // UTextBlock*
		constexpr auto T_PlayerName = 0x2b0; // UTextBlock*
		constexpr auto TextBlock_209 = 0x2b8; // UTextBlock*
		constexpr auto VerticalBox_1 = 0x2c0; // UVerticalBox*
		constexpr auto WidgetSwitcher = 0x2c8; // UWidgetSwitcher*
		constexpr auto EventDispatcher_ChangeVolumeState = 0x2d0; // FMulticastInlineDelegate
		constexpr auto CurVoiceTalkState = 0x2e0; // FVoiceTalkState
		constexpr auto PingImage = 0x300; // UPaperSprite*
	}

	namespace n_UDatasmithLightComponentTemplate {
		constexpr auto bVisible = 0x30; // char : 1
		constexpr auto CastShadows = 0x34; // char : 1
		constexpr auto bUseTemperature = 0x34; // char : 1
		constexpr auto bUseIESBrightness = 0x34; // char : 1
		constexpr auto Intensity = 0x38; // float
		constexpr auto Temperature = 0x3c; // float
		constexpr auto IESBrightnessScale = 0x40; // float
		constexpr auto LightColor = 0x44; // FLinearColor
		constexpr auto LightFunctionMaterial = 0x58; // UMaterialInterface*
		constexpr auto IESTexture = 0x60; // UTextureLightProfile*
	}

	namespace n_UInterpTrackInstParticleReplay {
		constexpr auto LastUpdatePosition = 0x28; // float
	}

	namespace n_AMaterialInstanceActor {
		constexpr auto TargetActors = 0x318; // TArray<AActor*>
	}

	namespace n_UUW-BlackMarket_Slot_Attachment_C {
		constexpr auto UberGraphFrame = 0x3d8; // FPointerToUberGraphFrame
		constexpr auto BTN-Menu02 = 0x3e0; // UButton*
		constexpr auto BTN-Menu03 = 0x3e8; // UButton*
		constexpr auto BTN-Menu04 = 0x3f0; // UButton*
		constexpr auto BTN-Menu05 = 0x3f8; // UButton*
		constexpr auto BTN-Menu06 = 0x400; // UButton*
		constexpr auto BTN-Menu07 = 0x408; // UButton*
		constexpr auto BTN-Menu08 = 0x410; // UButton*
		constexpr auto BTN-Menu09 = 0x418; // UButton*
		constexpr auto CP-SlotInfo = 0x420; // UCanvasPanel*
		constexpr auto IMG-BG = 0x428; // UImage*
		constexpr auto IMG-BG-Border = 0x430; // UImage*
		constexpr auto IMG-Item = 0x438; // UImage*
		constexpr auto IMG-Mask = 0x440; // UImage*
		constexpr auto IMG-Over = 0x448; // UImage*
		constexpr auto IMG-Over-Border = 0x450; // UImage*
		constexpr auto Menu02 = 0x458; // UOverlay*
		constexpr auto Menu03 = 0x460; // UOverlay*
		constexpr auto Menu04 = 0x468; // UOverlay*
		constexpr auto Menu05 = 0x470; // UOverlay*
		constexpr auto Menu06 = 0x478; // UOverlay*
		constexpr auto Menu07 = 0x480; // UOverlay*
		constexpr auto Menu08 = 0x488; // UOverlay*
		constexpr auto Menu09 = 0x490; // UOverlay*
		constexpr auto Overlay_Mask = 0x498; // UOverlay*
		constexpr auto TXT-ContinuousSpeed = 0x4a0; // UTextBlock*
		constexpr auto TXT-Horizental = 0x4a8; // UTextBlock*
		constexpr auto TXT-ItemName = 0x4b0; // UTextBlock*
		constexpr auto TXT-Menu01 = 0x4b8; // UTextBlock*
		constexpr auto TXT-Menu02 = 0x4c0; // UTextBlock*
		constexpr auto TXT-Menu03 = 0x4c8; // UTextBlock*
		constexpr auto TXT-Menu04 = 0x4d0; // UTextBlock*
		constexpr auto TXT-Menu05 = 0x4d8; // UTextBlock*
		constexpr auto TXT-Menu06 = 0x4e0; // UTextBlock*
		constexpr auto TXT-Menu07 = 0x4e8; // UTextBlock*
		constexpr auto TXT-Menu08 = 0x4f0; // UTextBlock*
		constexpr auto TXT-Menu09 = 0x4f8; // UTextBlock*
		constexpr auto TXT-MovingSpeed = 0x500; // UTextBlock*
		constexpr auto TXT-Reload = 0x508; // UTextBlock*
		constexpr auto TXT-Type = 0x510; // UTextBlock*
		constexpr auto TXT-Vertical = 0x518; // UTextBlock*
		constexpr auto TXT-Weight = 0x520; // UTextBlock*
	}

	namespace n_USkeleton {
		constexpr auto BlendProfiles = 0x40; // TArray<UBlendProfile*>
		constexpr auto Sockets = 0x68; // TArray<USkeletalMeshSocket*>
		constexpr auto VirtualBones = 0x190; // TArray<FVirtualBone>
		constexpr auto SmartNames = 0x1c0; // FSmartNameContainer
		constexpr auto AssetUserData = 0x210; // TArray<UAssetUserData*>
		constexpr auto BoneTree = 0x270; // TArray<FBoneNode>
		constexpr auto VirtualBoneGuid = 0x280; // FGuid
		constexpr auto RefLocalPoses = 0x290; // TArray<FTransform>
		constexpr auto SlotGroups = 0x2a0; // TArray<FAnimSlotGroup>
	}

	namespace n_AVolumetricLightmapDensityVolume {
		constexpr auto AllowedMipLevelRange = 0x350; // FInt32Interval
	}

	namespace n_UChat_Tab_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Button = 0x250; // UButton*
		constexpr auto Button Text Block = 0x258; // UTextBlock*
		constexpr auto Button Text = 0x260; // FText
		constexpr auto Active Text Color = 0x278; // FLinearColor
		constexpr auto Inactive Text Color = 0x288; // FLinearColor
		constexpr auto Tab Is Active? = 0x298; // bool
		constexpr auto Current Text Color = 0x29c; // FLinearColor
		constexpr auto Parent Widget = 0x2b0; // UChat_MainWidget_C*
		constexpr auto Chat Switcher Widget = 0x2b8; // UWidget*
		constexpr auto Notification Text Color = 0x2c0; // FLinearColor
		constexpr auto Interp Time = 0x2d0; // float
		constexpr auto Notification Color Hold Time = 0x2d4; // float
		constexpr auto Notification Fade Time = 0x2d8; // float
		constexpr auto Fading to Notification? = 0x2dc; // bool
	}

	namespace n_UBoxFalloff {
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto MinRange = 0xb4; // float
		constexpr auto MaxRange = 0xb8; // float
		constexpr auto Default = 0xbc; // float
		constexpr auto Transform = 0xc0; // FTransform
		constexpr auto Falloff = 0xf0; // EFieldFalloffType
	}

	namespace n_UMovieSceneCapture {
		constexpr auto ImageCaptureProtocolType = 0x38; // FSoftClassPath
		constexpr auto AudioCaptureProtocolType = 0x50; // FSoftClassPath
		constexpr auto ImageCaptureProtocol = 0x68; // UMovieSceneImageCaptureProtocolBase*
		constexpr auto AudioCaptureProtocol = 0x70; // UMovieSceneAudioCaptureProtocolBase*
		constexpr auto Settings = 0x78; // FMovieSceneCaptureSettings
		constexpr auto bUseSeparateProcess = 0xe8; // bool
		constexpr auto bCloseEditorWhenCaptureStarts = 0xe9; // bool
		constexpr auto AdditionalCommandLineArguments = 0xf0; // FString
		constexpr auto InheritedCommandLineArguments = 0x100; // FString
	}

	namespace n_UCheatManager {
		constexpr auto DebugCameraControllerRef = 0x28; // ADebugCameraController*
		constexpr auto DebugCameraControllerClass = 0x30; // ADebugCameraController*
	}

	namespace n_UReplicationGraphNode_TearOff_ForConnection {
		constexpr auto TearOffActors = 0x50; // TArray<FTearOffActorInfo>
	}

	namespace n_UBravoHotelAnimNotify_Voice {
		constexpr auto SoundIdx = 0x38; // FName
	}

	namespace n_ASceneCapture {
		constexpr auto MeshComp = 0x318; // UStaticMeshComponent*
		constexpr auto SceneComponent = 0x320; // USceneComponent*
	}

	namespace n_ABrush {
		constexpr auto BrushType = 0x318; // EBrushType
		constexpr auto BrushColor = 0x31c; // FColor
		constexpr auto PolyFlags = 0x320; // int32_t
		constexpr auto bColored = 0x324; // char : 1
		constexpr auto bSolidWhenSelected = 0x324; // char : 1
		constexpr auto bPlaceableFromClassBrowser = 0x324; // char : 1
		constexpr auto bNotForClientOrServer = 0x324; // char : 1
		constexpr auto Brush = 0x328; // UModel*
		constexpr auto BrushComponent = 0x330; // UBrushComponent*
		constexpr auto bInManipulation = 0x338; // char : 1
		constexpr auto SavedSelections = 0x340; // TArray<FGeomSelection>
	}

	namespace n_UCanvas {
		constexpr auto OrgX = 0x28; // float
		constexpr auto OrgY = 0x2c; // float
		constexpr auto ClipX = 0x30; // float
		constexpr auto ClipY = 0x34; // float
		constexpr auto DrawColor = 0x38; // FColor
		constexpr auto bCenterX = 0x3c; // char : 1
		constexpr auto bCenterY = 0x3c; // char : 1
		constexpr auto bNoSmooth = 0x3c; // char : 1
		constexpr auto SizeX = 0x40; // int32_t
		constexpr auto SizeY = 0x44; // int32_t
		constexpr auto ColorModulate = 0x50; // FPlane
		constexpr auto DefaultTexture = 0x60; // UTexture2D*
		constexpr auto GradientTexture0 = 0x68; // UTexture2D*
		constexpr auto ReporterGraph = 0x70; // UReporterGraph*
	}

	namespace n_UAkAssetDataWithMedia {
		constexpr auto MediaList = 0x60; // TArray<UAkMediaAsset*>
	}

	namespace n_UUW-MapImageWidget_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Anim_Hide_Ima = 0x250; // UWidgetAnimation*
		constexpr auto Anim_Hide_text = 0x258; // UWidgetAnimation*
		constexpr auto Anim_Show_Ima = 0x260; // UWidgetAnimation*
		constexpr auto Anim_Show_text = 0x268; // UWidgetAnimation*
		constexpr auto Canvas_Main = 0x270; // UCanvasPanel*
		constexpr auto HorizontalBox_86 = 0x278; // UHorizontalBox*
		constexpr auto Image_130 = 0x280; // UImage*
		constexpr auto Image_811 = 0x288; // UImage*
		constexpr auto Img_MapImage = 0x290; // UImage*
		constexpr auto MatchType = 0x298; // UTextBlock*
		constexpr auto MaxPlayerCount = 0x2a0; // UTextBlock*
		constexpr auto Overlay_Text = 0x2a8; // UOverlay*
		constexpr auto PersonType = 0x2b0; // UTextBlock*
		constexpr auto T_MapImageDesc = 0x2b8; // UTextBlock*
		constexpr auto T_MapImageTitle = 0x2c0; // UTextBlock*
		constexpr auto Ultimate = 0x2c8; // UTextBlock*
		constexpr auto IsShowText = 0x2d0; // bool
		constexpr auto Timer_HideMapImage = 0x2d8; // FTimerHandle
		constexpr auto LastZoomLevel = 0x2e0; // int32_t
		constexpr auto WantOpacity = 0x2e4; // float
		constexpr auto MainWidgetRef = 0x2e8; // UUW-MainWidget_C*
		constexpr auto IsShowImage = 0x2f0; // bool
		constexpr auto LastWidgetType = 0x2f1; // EToggleWidgetModeType
		constexpr auto UltimateText = 0x2f8; // FText
	}

	namespace n_UGameplayTasksComponent {
		constexpr auto bIsNetDirty = 0xbc; // char : 1
		constexpr auto SimulatedTasks = 0xc0; // TArray<UGameplayTask*>
		constexpr auto TaskPriorityQueue = 0xd0; // TArray<UGameplayTask*>
		constexpr auto TickingTasks = 0xf0; // TArray<UGameplayTask*>
		constexpr auto KnownTasks = 0x100; // TArray<UGameplayTask*>
		constexpr auto OnClaimedResourcesChange = 0x110; // FMulticastInlineDelegate
	}

	namespace n_ABravoHotelDestructibleEx {
		constexpr auto bHiddenInReplay = 0x320; // bool
	}

	namespace n_AAudioVolume {
		constexpr auto Priority = 0x350; // float
		constexpr auto bEnabled = 0x354; // char : 1
		constexpr auto Settings = 0x358; // FReverbSettings
		constexpr auto AmbientZoneSettings = 0x378; // FInteriorSettings
	}

	namespace n_UKeyWidget_C {
		constexpr auto UberGraphFrame = 0x298; // FPointerToUberGraphFrame
		constexpr auto ButtomButtonWidget = 0x2a0; // UButtomButtonWidget_C*
		constexpr auto Image_154 = 0x2a8; // UImage*
		constexpr auto Overlay_1 = 0x2b0; // UOverlay*
		constexpr auto ScrollBox_55 = 0x2b8; // UScrollBox*
		constexpr auto UniformGridPanel_119 = 0x2c0; // UUniformGridPanel*
		constexpr auto Begin = 0x2c8; // EKeySettingType
		constexpr auto End = 0x2c9; // EKeySettingType
		constexpr auto PreSubType = 0x2ca; // EKeySettingSubType
		constexpr auto EventDispatcher_KeyNotiMessage = 0x2d0; // FMulticastInlineDelegate
		constexpr auto ScrollBarTimer = 0x2e0; // FTimerHandle
		constexpr auto List = 0x2e8; // TMap<EKeySettingSubType, FSettingInfo>
		constexpr auto SubTypeSort = 0x338; // TArray<EKeySettingSubType>
		constexpr auto TempCount = 0x348; // int32_t
		constexpr auto Hot = 0x350; // TMap<UButtomButtonWidget_C*, USubTitleSlotWidget_C*>
		constexpr auto Size = 0x3a0; // float
		constexpr auto Offset = 0x3a8; // TMap<USubTitleSlotWidget_C*, float>
	}

	namespace n_UBravoHotelMediaPlayerWidget {
		constexpr auto DelegateMediaState = 0x248; // FMulticastInlineDelegate
	}

	namespace n_UBackgroundBlurSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UUW-PerkLevelUp_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Disappear = 0x250; // UWidgetAnimation*
		constexpr auto Finish = 0x258; // UWidgetAnimation*
		constexpr auto Spin = 0x260; // UWidgetAnimation*
		constexpr auto Idle = 0x268; // UWidgetAnimation*
		constexpr auto Image_180 = 0x270; // UImage*
		constexpr auto ItemImage_bg = 0x278; // UImage*
		constexpr auto ItemImage_Dummy1 = 0x280; // UImage*
		constexpr auto ItemImage_Main = 0x288; // UImage*
		constexpr auto TextBlock_1 = 0x290; // UTextBlock*
		constexpr auto TextBlock_3 = 0x298; // UTextBlock*
		constexpr auto TextMountablewea = 0x2a0; // UTextBlock*
		constexpr auto TextMountableweaLV1 = 0x2a8; // UTextBlock*
		constexpr auto PerkInfo = 0x2b0; // FPerkInfo
		constexpr auto PerkData = 0x2d8; // FPerkData
		constexpr auto bLevelUp = 0x3b8; // bool
		constexpr auto bFinishing = 0x3b9; // bool
		constexpr auto FinishTime = 0x3bc; // float
		constexpr auto PerkSlot = 0x3c0; // EPerkSlotFlag
	}

	namespace n_UBTDecorator_BlueprintBase {
		constexpr auto AIOwner = 0x68; // AAIController*
		constexpr auto ActorOwner = 0x70; // AActor*
		constexpr auto ObservedKeyNames = 0x78; // TArray<FName>
		constexpr auto bShowPropertyDetails = 0x98; // char : 1
		constexpr auto bCheckConditionOnlyBlackBoardChanges = 0x98; // char : 1
		constexpr auto bIsObservingBB = 0x98; // char : 1
	}

	namespace n_UPaperFlipbookComponent {
		constexpr auto SourceFlipbook = 0x4e0; // UPaperFlipbook*
		constexpr auto Material = 0x4e8; // UMaterialInterface*
		constexpr auto PlayRate = 0x4f0; // float
		constexpr auto bLooping = 0x4f4; // char : 1
		constexpr auto bReversePlayback = 0x4f4; // char : 1
		constexpr auto bPlaying = 0x4f4; // char : 1
		constexpr auto AccumulatedTime = 0x4f8; // float
		constexpr auto CachedFrameIndex = 0x4fc; // int32_t
		constexpr auto SpriteColor = 0x500; // FLinearColor
		constexpr auto CachedBodySetup = 0x510; // UBodySetup*
		constexpr auto OnFinishedPlaying = 0x518; // FMulticastInlineDelegate
	}

	namespace n_UForceFeedbackComponent {
		constexpr auto ForceFeedbackEffect = 0x230; // UForceFeedbackEffect*
		constexpr auto bAutoDestroy = 0x238; // char : 1
		constexpr auto bStopWhenOwnerDestroyed = 0x238; // char : 1
		constexpr auto bLooping = 0x238; // char : 1
		constexpr auto bIgnoreTimeDilation = 0x238; // char : 1
		constexpr auto bOverrideAttenuation = 0x238; // char : 1
		constexpr auto IntensityMultiplier = 0x23c; // float
		constexpr auto AttenuationSettings = 0x240; // UForceFeedbackAttenuation*
		constexpr auto AttenuationOverrides = 0x248; // FForceFeedbackAttenuationSettings
		constexpr auto OnForceFeedbackFinished = 0x2f8; // FMulticastInlineDelegate
	}

	namespace n_ALevelScriptActor {
		constexpr auto bInputEnabled = 0x318; // char : 1
	}

	namespace n_ABP-MK3DSpectatorPawn_C {
		constexpr auto UberGraphFrame = 0x3c8; // FPointerToUberGraphFrame
		constexpr auto FreeCam = 0x3d0; // UCameraComponent*
		constexpr auto SpringArm = 0x3d8; // USpringArmComponent*
		constexpr auto ReplayMainWidget = 0x3e0; // UUW-ReplayMainWidget_C*
		constexpr auto ViewMode = 0x3e8; // EReplayViewMode
	}

	namespace n_UWB_ClassicComboBoxButton_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto VisualNoninteractButton = 0x250; // UButton*
		constexpr auto Original Style = 0x258; // FButtonStyle
	}

	namespace n_UBP-HUDInteractionComponentBase_C {
		constexpr auto UberGraphFrame = 0xf0; // FPointerToUberGraphFrame
		constexpr auto PlayerController = 0xf8; // APlayerController*
		constexpr auto bAlreadySetOptionWidget = 0x100; // bool
		constexpr auto defaultContrast = 0x104; // float
		constexpr auto defaultMaxBrightness = 0x108; // float
		constexpr auto defaultMinBrightness = 0x10c; // float
		constexpr auto MinBrightness = 0x110; // float
		constexpr auto MaxBrightness = 0x114; // float
		constexpr auto Contrast = 0x118; // float
		constexpr auto bUsePostProcessVolumeOption = 0x11c; // bool
		constexpr auto ColorGradingGlobalGamma = 0x120; // float
		constexpr auto FilmToeIntensity = 0x124; // float
		constexpr auto IsInWidget = 0x128; // bool
		constexpr auto bInputModeUI = 0x129; // bool
		constexpr auto InputActionsToBlock = 0x130; // TArray<FName>
	}

	namespace n_UAkComponent {
		constexpr auto bUseSpatialAudio = 0x250; // bool
		constexpr auto OcclusionCollisionChannel = 0x258; // ECollisionChannel
		constexpr auto EnableSpotReflectors = 0x25c; // char : 1
		constexpr auto EarlyReflectionAuxBus = 0x260; // UAkAuxBus*
		constexpr auto EarlyReflectionAuxBusName = 0x268; // FString
		constexpr auto EarlyReflectionOrder = 0x278; // int32_t
		constexpr auto EarlyReflectionBusSendGain = 0x27c; // float
		constexpr auto EarlyReflectionMaxPathLength = 0x280; // float
		constexpr auto roomReverbAuxBusGain = 0x284; // float
		constexpr auto diffractionMaxEdges = 0x288; // int32_t
		constexpr auto diffractionMaxPaths = 0x28c; // int32_t
		constexpr auto diffractionMaxPathLength = 0x290; // float
		constexpr auto DrawFirstOrderReflections = 0x294; // char : 1
		constexpr auto DrawSecondOrderReflections = 0x294; // char : 1
		constexpr auto DrawHigherOrderReflections = 0x294; // char : 1
		constexpr auto DrawDiffraction = 0x294; // char : 1
		constexpr auto StopWhenOwnerDestroyed = 0x298; // bool
		constexpr auto RoomIterationInterval = 0x29c; // float
		constexpr auto AttenuationScalingFactor = 0x2a0; // float
		constexpr auto OcclusionRefreshInterval = 0x2a4; // float
		constexpr auto bUseReverbVolumes = 0x2a8; // bool
		constexpr auto Listeners = 0x398; // TSet<UAkComponent*>
		constexpr auto Emitters = 0x3e8; // TSet<UAkComponent*>
	}

	namespace n_UNavLinkDefinition {
		constexpr auto LINKS = 0x28; // TArray<FNavigationLink>
		constexpr auto SegmentLinks = 0x38; // TArray<FNavigationSegmentLink>
	}

	namespace n_ULiveLinkVirtualSubject {
		constexpr auto Role = 0x30; // ULiveLinkRole*
		constexpr auto Subjects = 0x38; // TArray<FLiveLinkSubjectName>
		constexpr auto FrameTranslators = 0x48; // TArray<ULiveLinkFrameTranslator*>
	}

	namespace n_UWindDirectionalSourceComponent {
		constexpr auto Strength = 0x230; // float
		constexpr auto Speed = 0x234; // float
		constexpr auto MinGustAmount = 0x238; // float
		constexpr auto MaxGustAmount = 0x23c; // float
		constexpr auto Radius = 0x240; // float
		constexpr auto bPointWind = 0x244; // char : 1
	}

	namespace n_UProgressBar {
		constexpr auto WidgetStyle = 0x108; // FProgressBarStyle
		constexpr auto Style = 0x2a8; // USlateWidgetStyleAsset*
		constexpr auto BackgroundImage = 0x2b0; // USlateBrushAsset*
		constexpr auto FillImage = 0x2b8; // USlateBrushAsset*
		constexpr auto MarqueeImage = 0x2c0; // USlateBrushAsset*
		constexpr auto Percent = 0x2c8; // float
		constexpr auto BarFillType = 0x2cc; // EProgressBarFillType
		constexpr auto bIsMarquee = 0x2cd; // bool
		constexpr auto BorderPadding = 0x2d0; // FVector2D
		constexpr auto PercentDelegate = 0x2d8; // FDelegate
		constexpr auto FillColorAndOpacity = 0x2e8; // FLinearColor
		constexpr auto FillColorAndOpacityDelegate = 0x2f8; // FDelegate
	}

	namespace n_UExporter {
		constexpr auto SupportedClass = 0x28; // UObject*
		constexpr auto ExportRootScope = 0x30; // UObject*
		constexpr auto FormatExtension = 0x38; // TArray<FString>
		constexpr auto FormatDescription = 0x48; // TArray<FString>
		constexpr auto PreferredFormatIndex = 0x58; // int32_t
		constexpr auto TextIndent = 0x5c; // int32_t
		constexpr auto bText = 0x60; // char : 1
		constexpr auto bSelectedOnly = 0x60; // char : 1
		constexpr auto bForceFileOperations = 0x60; // char : 1
		constexpr auto ExportTask = 0x68; // UAssetExportTask*
	}

	namespace n_UUW-Radar_tutorial_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Image = 0x250; // UImage*
		constexpr auto Image_2 = 0x258; // UImage*
		constexpr auto Image_3 = 0x260; // UImage*
		constexpr auto Image_4 = 0x268; // UImage*
		constexpr auto Image_917 = 0x270; // UImage*
		constexpr auto Img_TypeIcon = 0x278; // UImage*
		constexpr auto KeyImageWidget = 0x280; // UKeyImageWidget_C*
		constexpr auto KeyImageWidget_2 = 0x288; // UKeyImageWidget_C*
		constexpr auto KeyImageWidget_3 = 0x290; // UKeyImageWidget_C*
		constexpr auto KeyImageWidget_4 = 0x298; // UKeyImageWidget_C*
		constexpr auto KeyImageWidget_5 = 0x2a0; // UKeyImageWidget_C*
		constexpr auto T_Context = 0x2a8; // UTextBlock*
		constexpr auto T_Context_2 = 0x2b0; // UTextBlock*
		constexpr auto T_Context_3 = 0x2b8; // UTextBlock*
		constexpr auto T_Context_4 = 0x2c0; // UTextBlock*
		constexpr auto T_Context_5 = 0x2c8; // UTextBlock*
		constexpr auto Text_SkillName = 0x2d0; // UTextBlock*
		constexpr auto VB_Nuclear = 0x2d8; // UVerticalBox*
		constexpr auto VB_Retreat = 0x2e0; // UVerticalBox*
		constexpr auto WidgetSwitcher_126 = 0x2e8; // UWidgetSwitcher*
	}

	namespace n_UMovieSceneFolder {
		constexpr auto FolderName = 0x28; // FName
		constexpr auto ChildFolders = 0x30; // TArray<UMovieSceneFolder*>
		constexpr auto ChildMasterTracks = 0x40; // TArray<UMovieSceneTrack*>
		constexpr auto ChildObjectBindingStrings = 0x50; // TArray<FString>
	}

	namespace n_UPartyBeaconState {
		constexpr auto SessionName = 0x28; // FName
		constexpr auto NumConsumedReservations = 0x30; // int32_t
		constexpr auto MaxReservations = 0x34; // int32_t
		constexpr auto NumTeams = 0x38; // int32_t
		constexpr auto NumPlayersPerTeam = 0x3c; // int32_t
		constexpr auto TeamAssignmentMethod = 0x40; // FName
		constexpr auto ReservedHostTeamNum = 0x48; // int32_t
		constexpr auto ForceTeamNum = 0x4c; // int32_t
		constexpr auto bRestrictCrossConsole = 0x50; // bool
		constexpr auto bEnableRemovalRequests = 0x51; // bool
		constexpr auto Reservations = 0x58; // TArray<FPartyReservation>
	}

	namespace n_UGeometryCollection {
		constexpr auto Materials = 0x30; // TArray<UMaterialInterface*>
		constexpr auto CollisionType = 0x40; // ECollisionTypeEnum
		constexpr auto ImplicitType = 0x41; // EImplicitTypeEnum
		constexpr auto MinLevelSetResolution = 0x44; // int32_t
		constexpr auto MaxLevelSetResolution = 0x48; // int32_t
		constexpr auto MinClusterLevelSetResolution = 0x4c; // int32_t
		constexpr auto MaxClusterLevelSetResolution = 0x50; // int32_t
		constexpr auto CollisionObjectReductionPercentage = 0x54; // float
		constexpr auto bMassAsDensity = 0x58; // bool
		constexpr auto Mass = 0x5c; // float
		constexpr auto MinimumMassClamp = 0x60; // float
		constexpr auto CollisionParticlesFraction = 0x64; // float
		constexpr auto MaximumCollisionParticles = 0x68; // int32_t
		constexpr auto SizeSpecificData = 0x70; // TArray<FGeometryCollectionSizeSpecificData>
		constexpr auto EnableRemovePiecesOnFracture = 0x80; // bool
		constexpr auto RemoveOnFractureMaterials = 0x88; // TArray<UMaterialInterface*>
		constexpr auto PersistentGuid = 0x98; // FGuid
		constexpr auto StateGuid = 0xa8; // FGuid
		constexpr auto BoneSelectedMaterialIndex = 0xb8; // int32_t
	}

	namespace n_UCoherentUIGTLiveView {
		constexpr auto LinkName = 0xb0; // FString
		constexpr auto Texture = 0xc0; // UTextureRenderTarget2D*
	}

	namespace n_UCustomizableObjectSystem {
		constexpr auto PendingReleaseSkeletalMesh = 0x28; // TArray<FPendingReleaseSkeletalMeshInfo>
		constexpr auto PreviewExternalImageProvider = 0x48; // UCustomizableObjectImageProviderArray*
		constexpr auto ProtectedCachedTextures = 0x150; // TArray<UTexture2D*>
		constexpr auto DefaultInstanceLODManagement = 0x170; // UCustomizableInstanceLODManagementBase*
		constexpr auto CurrentInstanceLODManagement = 0x178; // UCustomizableInstanceLODManagementBase*
	}

	namespace n_UInterpTrackParticleReplay {
		constexpr auto TrackKeys = 0x70; // TArray<FParticleReplayTrackKey>
	}

	namespace n_UBaseMediaSource {
		constexpr auto playerName = 0x80; // FName
	}

	namespace n_UEnvQueryGenerator_ProjectedPoints {
		constexpr auto ProjectionData = 0x50; // FEnvTraceData
	}

	namespace n_UFoliageType_InstancedStaticMesh {
		constexpr auto Mesh = 0x3e8; // UStaticMesh*
		constexpr auto OverrideMaterials = 0x3f0; // TArray<UMaterialInterface*>
		constexpr auto ComponentClass = 0x400; // UFoliageInstancedStaticMeshComponent*
	}

	namespace n_UParticleModuleLight {
		constexpr auto bUseInverseSquaredFalloff = 0x30; // bool
		constexpr auto bAffectsTranslucency = 0x31; // bool
		constexpr auto bPreviewLightRadius = 0x32; // bool
		constexpr auto SpawnFraction = 0x34; // float
		constexpr auto ColorScaleOverLife = 0x38; // FRawDistributionVector
		constexpr auto BrightnessOverLife = 0x80; // FRawDistributionFloat
		constexpr auto RadiusScale = 0xb0; // FRawDistributionFloat
		constexpr auto LightExponent = 0xe0; // FRawDistributionFloat
		constexpr auto LightingChannels = 0x110; // FLightingChannels
		constexpr auto VolumetricScatteringIntensity = 0x114; // float
		constexpr auto bHighQualityLights = 0x118; // bool
		constexpr auto bShadowCastingLights = 0x119; // bool
	}

	namespace n_USoundNodeSwitch {
		constexpr auto IntParameterName = 0x48; // FName
	}

	namespace n_UMovieSceneVectorSection {
		constexpr auto Curves = 0xe0; // FMovieSceneFloatChannel [0x4]
		constexpr auto ChannelsUsed = 0x360; // int32_t
	}

	namespace n_USpringArmComponent {
		constexpr auto TargetArmLength = 0x230; // float
		constexpr auto SocketOffset = 0x234; // FVector
		constexpr auto TargetOffset = 0x240; // FVector
		constexpr auto ProbeSize = 0x24c; // float
		constexpr auto ProbeChannel = 0x250; // ECollisionChannel
		constexpr auto bDoCollisionTest = 0x254; // char : 1
		constexpr auto bUsePawnControlRotation = 0x254; // char : 1
		constexpr auto bInheritPitch = 0x254; // char : 1
		constexpr auto bInheritYaw = 0x254; // char : 1
		constexpr auto bInheritRoll = 0x254; // char : 1
		constexpr auto bEnableCameraLag = 0x254; // char : 1
		constexpr auto bEnableCameraRotationLag = 0x254; // char : 1
		constexpr auto bUseCameraLagSubstepping = 0x254; // char : 1
		constexpr auto bDrawDebugLagMarkers = 0x255; // char : 1
		constexpr auto CameraLagSpeed = 0x258; // float
		constexpr auto CameraRotationLagSpeed = 0x25c; // float
		constexpr auto CameraLagMaxTimeStep = 0x260; // float
		constexpr auto CameraLagMaxDistance = 0x264; // float
	}

	namespace n_USubmixEffectReverbPreset {
		constexpr auto Settings = 0x9c; // FSubmixEffectReverbSettings
	}

	namespace n_UReplicationGraphNode_AlwaysRelevant_ForConnection {
		constexpr auto PastRelevantActors = 0x110; // TArray<FAlwaysRelevantActorInfo>
		constexpr auto LastViewer = 0x120; // AActor*
		constexpr auto LastViewTarget = 0x128; // AActor*
	}

	namespace n_USettingMainWidget_C {
		constexpr auto UberGraphFrame = 0x3d8; // FPointerToUberGraphFrame
		constexpr auto 1-1 = 0x3e0; // UImage*
		constexpr auto 2-1 = 0x3e8; // UImage*
		constexpr auto 2-2 = 0x3f0; // UImage*
		constexpr auto ApplyButton = 0x3f8; // UButtomButtonWidget_C*
		constexpr auto Audio = 0x400; // USettingSubButtonWidget_C*
		constexpr auto CanvasPanel_61 = 0x408; // UCanvasPanel*
		constexpr auto CanvasPanel_279 = 0x410; // UCanvasPanel*
		constexpr auto ChangeLock = 0x418; // UTextBlock*
		constexpr auto Control = 0x420; // USettingSubButtonWidget_C*
		constexpr auto CrossHair = 0x428; // UVerticalBox*
		constexpr auto CrossHairDetailInfo = 0x430; // UCrossHairDetailInfo_C*
		constexpr auto CrossHairDetailInfo_2 = 0x438; // UCrossHairDetailInfo_C*
		constexpr auto CrossHairDetailInfo_3 = 0x440; // UCrossHairDetailInfo_C*
		constexpr auto CrossHairDetailInfo_4 = 0x448; // UCrossHairDetailInfo_C*
		constexpr auto CurDesc = 0x450; // UTextBlock*
		constexpr auto CurDesc2 = 0x458; // UTextBlock*
		constexpr auto CurTitle = 0x460; // UTextBlock*
		constexpr auto DefaultButton = 0x468; // UButtomButtonWidget_C*
		constexpr auto Dev = 0x470; // USettingSubButtonWidget_C*
		constexpr auto GamePlay = 0x478; // USettingSubButtonWidget_C*
		constexpr auto GoBackButton = 0x480; // UButtomButtonWidget_C*
		constexpr auto Graphic = 0x488; // USettingSubButtonWidget_C*
		constexpr auto Image = 0x490; // UImage*
		constexpr auto Image_2 = 0x498; // UImage*
		constexpr auto Image_3 = 0x4a0; // UImage*
		constexpr auto Image_4 = 0x4a8; // UImage*
		constexpr auto Image_109 = 0x4b0; // UImage*
		constexpr auto Image_128 = 0x4b8; // UImage*
		constexpr auto Image_129 = 0x4c0; // UImage*
		constexpr auto Image_154 = 0x4c8; // UImage*
		constexpr auto Image_323 = 0x4d0; // UImage*
		constexpr auto Image_417 = 0x4d8; // UImage*
		constexpr auto Image_951 = 0x4e0; // UImage*
		constexpr auto Image_953 = 0x4e8; // UImage*
		constexpr auto Key = 0x4f0; // USettingSubButtonWidget_C*
		constexpr auto KeyImageMain = 0x4f8; // UKeyImageWidget_C*
		constexpr auto ProgressBar_317 = 0x500; // UProgressBar*
		constexpr auto Slider_299 = 0x508; // USlider*
		constexpr auto TextBlock = 0x510; // UTextBlock*
		constexpr auto TextBlock_1 = 0x518; // UTextBlock*
		constexpr auto TextBlock_2 = 0x520; // UTextBlock*
		constexpr auto TextBlock_3 = 0x528; // UTextBlock*
		constexpr auto TextBlock_5 = 0x530; // UTextBlock*
		constexpr auto TextBlock_7 = 0x538; // UTextBlock*
		constexpr auto VerticalBox_149 = 0x540; // UVerticalBox*
		constexpr auto WidgetSwitcher_113 = 0x548; // UWidgetSwitcher*
		constexpr auto EnableButtonEventDispatcher = 0x550; // FMulticastInlineDelegate
		constexpr auto Game Settings = 0x560; // UBP_GameSettings_C*
		constexpr auto SlotList_1 = 0x568; // TMap<ESettingType, UBravoHotelSettingSlotWidget*>
		constexpr auto GraphicWidget = 0x5b8; // UGraphicWidget_C*
		constexpr auto AudioWidget = 0x5c0; // UAudioWidget_C*
		constexpr auto ControlWidget = 0x5c8; // UControlWidget_C*
		constexpr auto KeyWidget = 0x5d0; // UKeyWidget_C*
		constexpr auto GamePlayWidget = 0x5d8; // UGamePlayWidget_C*
		constexpr auto SettingDevWidget = 0x5e0; // USettingDevWidget_C*
		constexpr auto GraphicSwitcherIndex = 0x5e8; // int32_t
		constexpr auto AudioSwitcherIndex = 0x5ec; // int32_t
		constexpr auto ControlSwitcherIndex = 0x5f0; // int32_t
		constexpr auto KeySwitcherIndex = 0x5f4; // int32_t
		constexpr auto SettingDevSwitcherIndex = 0x5f8; // int32_t
		constexpr auto GamePlaySwitcherIndex = 0x5fc; // int32_t
		constexpr auto KeyNotiTimer = 0x600; // FTimerHandle
		constexpr auto KeyNotiMessageShowTime = 0x608; // float
		constexpr auto TempImg = 0x610; // TSoftObjectPtr<UTexture2D>
		constexpr auto SavedDescData = 0x638; // UBravoHotelSettingSlotWidget*
	}

	namespace n_UBravoHotelAnimInstanceWeapon {
		constexpr auto CharacterRef = 0x268; // ABravoHotelCharacter*
		constexpr auto WeaponRef = 0x270; // ABravoHotelRangedWeapon*
		constexpr auto CharacterAnimInstance1PRef = 0x278; // UBravoHotelAnimInstanceFPP*
		constexpr auto DeltaTime = 0x280; // float
		constexpr auto ArmsOffset = 0x284; // FVector
		constexpr auto RootJointScale = 0x290; // FVector
		constexpr auto ItemRecoilPitchAngle = 0x29c; // float
		constexpr auto ItemRecoilYawAngle = 0x2a0; // float
		constexpr auto CollideRotation = 0x2a4; // FRotator
		constexpr auto CollideAlpha = 0x2b0; // float
		constexpr auto bIsDefaultTransformUpdated = 0x2b4; // bool
		constexpr auto SightSocketDeltaLocation = 0x2b8; // FVector
		constexpr auto SightSocketDeltaRotation = 0x2c4; // FRotator
		constexpr auto bIsADS = 0x2d0; // bool
		constexpr auto WeaponLocation = 0x2d4; // FVector
		constexpr auto WeaponRotation = 0x2e0; // FRotator
		constexpr auto WeaponTransform = 0x2f0; // FTransform
		constexpr auto FireMode = 0x320; // EWeaponFireMode
		constexpr auto bIsAimingDownside = 0x321; // bool
	}

	namespace n_ALODActor {
		constexpr auto StaticMeshComponent = 0x318; // UStaticMeshComponent*
		constexpr auto ImpostersStaticMeshComponents = 0x320; // TMap<UMaterialInterface*, UInstancedStaticMeshComponent*>
		constexpr auto Proxy = 0x370; // UHLODProxy*
		constexpr auto Key = 0x378; // FName
		constexpr auto LODDrawDistance = 0x380; // float
		constexpr auto LODLevel = 0x384; // int32_t
		constexpr auto SubActors = 0x388; // TArray<AActor*>
		constexpr auto CachedNumHLODLevels = 0x398; // char
	}

	namespace n_UMaterialExpressionBlackBody {
		constexpr auto Temp = 0x40; // FExpressionInput
	}

	namespace n_UMaterialFunction {
		constexpr auto Description = 0x40; // FString
		constexpr auto bExposeToLibrary = 0x50; // char : 1
		constexpr auto bPrefixParameterNames = 0x50; // char : 1
		constexpr auto bReentrantFlag = 0x50; // char : 1
	}

	namespace n_UUW-Inventory_EquippedSlot_C {
		constexpr auto UberGraphFrame = 0x1358; // FPointerToUberGraphFrame
		constexpr auto Anim_Material_Get = 0x1360; // UWidgetAnimation*
		constexpr auto Anim_Material_Hover = 0x1368; // UWidgetAnimation*
		constexpr auto Anim_Upgrade = 0x1370; // UWidgetAnimation*
		constexpr auto Anim_Progress = 0x1378; // UWidgetAnimation*
		constexpr auto Abillity = 0x1380; // USizeBox*
		constexpr auto AbillityValue = 0x1388; // UTextBlock*
		constexpr auto Bg = 0x1390; // UImage*
		constexpr auto Bg_3 = 0x1398; // UImage*
		constexpr auto BorderBG = 0x13a0; // UImage*
		constexpr auto BorderBG_3 = 0x13a8; // UImage*
		constexpr auto btn_HelmetTree = 0x13b0; // UButton*
		constexpr auto ChoiceBG = 0x13b8; // UImage*
		constexpr auto ChoiceBG_3 = 0x13c0; // UImage*
		constexpr auto DefenseBG = 0x13c8; // UImage*
		constexpr auto DefenseBG_3 = 0x13d0; // UImage*
		constexpr auto DurabilityBar = 0x13d8; // UProgressBar*
		constexpr auto DurabilityBar_3 = 0x13e0; // UProgressBar*
		constexpr auto EmptyBG = 0x13e8; // UImage*
		constexpr auto EmptyBG_3 = 0x13f0; // UImage*
		constexpr auto Image = 0x13f8; // UImage*
		constexpr auto Image_197 = 0x1400; // UImage*
		constexpr auto Image_234 = 0x1408; // UImage*
		constexpr auto Image_279 = 0x1410; // UImage*
		constexpr auto Image_491 = 0x1418; // UImage*
		constexpr auto Image_682 = 0x1420; // UImage*
		constexpr auto ItemImage = 0x1428; // UImage*
		constexpr auto ItemImage_3 = 0x1430; // UImage*
		constexpr auto LV = 0x1438; // UImage*
		constexpr auto Lv_Star = 0x1440; // UHorizontalBox*
		constexpr auto OverBG = 0x1448; // UImage*
		constexpr auto OverBG_3 = 0x1450; // UImage*
		constexpr auto Overlay_1 = 0x1458; // UOverlay*
		constexpr auto UW-Inventory_MaterialIconSlot = 0x1460; // UUW-Inventory_MaterialIconSlot_C*
		constexpr auto UW-StatupWidget = 0x1468; // UUW-StatupWidget_C*
		constexpr auto WidgetSwitcher_3 = 0x1470; // UWidgetSwitcher*
		constexpr auto WearableItemType = 0x1478; // EWearableItemType
		constexpr auto IsDefense = 0x1479; // bool
		constexpr auto HoverWidget = 0x1480; // UUW-Inventory_ItemSlotHover_C*
		constexpr auto HoverOwnerWidget = 0x1488; // UUserWidget*
		constexpr auto SwitcherIndex = 0x1490; // int32_t
		constexpr auto SettingByEquippedInfo = 0x1494; // bool
	}

	namespace n_UAnimationAsset {
		constexpr auto AssetUserData = 0x38; // TArray<UAssetUserData*>
		constexpr auto MetaData = 0x60; // TArray<UAnimMetaData*>
		constexpr auto Skeleton = 0x80; // USkeleton*
	}

	namespace n_UBravoHotelWebSocket {
		constexpr auto ParentGameInstance = 0x28; // UGameInstance*
	}

	namespace n_UPrefabVariantAsset {
		constexpr auto Parent = 0xe8; // UPrefabAsset*
	}

	namespace n_UParticleModuleSize_Seeded {
		constexpr auto RandomSeedInfo = 0x78; // FParticleRandomSeedInfo
	}

	namespace n_UUW-InteractionWidget_WeaponPerkSlot_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Image_350 = 0x250; // UImage*
		constexpr auto Image_585 = 0x258; // UImage*
		constexpr auto Image_Grade_Color_Line = 0x260; // UImage*
	}

	namespace n_UUW-PerkDeckSelectItemNumWidget_C {
		constexpr auto Image_Selected = 0x248; // UImage*
		constexpr auto TextBlock_Selected = 0x250; // UTextBlock*
		constexpr auto PlayerIndex = 0x258; // int32_t
	}

	namespace n_ANativeReplayListLevel {
		constexpr auto ReplayListWidget = 0x320; // UUserWidget*
		constexpr auto ReplayListWidgetClass = 0x328; // UUserWidget*
	}

	namespace n_UParticleModuleOrientationAxisLock {
		constexpr auto LockAxisFlags = 0x30; // EParticleAxisLock
	}

	namespace n_UPaperTileLayer {
		constexpr auto LayerName = 0x28; // FText
		constexpr auto LayerWidth = 0x40; // int32_t
		constexpr auto LayerHeight = 0x44; // int32_t
		constexpr auto bHiddenInGame = 0x48; // char : 1
		constexpr auto bLayerCollides = 0x48; // char : 1
		constexpr auto bOverrideCollisionThickness = 0x48; // char : 1
		constexpr auto bOverrideCollisionOffset = 0x48; // char : 1
		constexpr auto CollisionThicknessOverride = 0x4c; // float
		constexpr auto CollisionOffsetOverride = 0x50; // float
		constexpr auto LayerColor = 0x54; // FLinearColor
		constexpr auto AllocatedWidth = 0x64; // int32_t
		constexpr auto AllocatedHeight = 0x68; // int32_t
		constexpr auto AllocatedCells = 0x70; // TArray<FPaperTileInfo>
		constexpr auto TileSet = 0x80; // UPaperTileSet*
		constexpr auto AllocatedGrid = 0x88; // TArray<int32_t>
	}

	namespace n_UAutomationTestSettings {
		constexpr auto EngineTestModules = 0x28; // TArray<FString>
		constexpr auto EditorTestModules = 0x38; // TArray<FString>
		constexpr auto AutomationTestmap = 0x48; // FSoftObjectPath
		constexpr auto EditorPerformanceTestMaps = 0x60; // TArray<FEditorMapPerformanceTestDefinition>
		constexpr auto AssetsToOpen = 0x70; // TArray<FSoftObjectPath>
		constexpr auto BuildPromotionTest = 0x80; // FBuildPromotionTestSettings
		constexpr auto MaterialEditorPromotionTest = 0x270; // FMaterialEditorPromotionSettings
		constexpr auto ParticleEditorPromotionTest = 0x2a0; // FParticleEditorPromotionSettings
		constexpr auto BlueprintEditorPromotionTest = 0x2b0; // FBlueprintEditorPromotionSettings
		constexpr auto TestLevelFolders = 0x2e0; // TArray<FString>
		constexpr auto ExternalTools = 0x2f0; // TArray<FExternalToolDefinition>
		constexpr auto ImportExportTestDefinitions = 0x300; // TArray<FEditorImportExportTestDefinition>
		constexpr auto LaunchOnSettings = 0x310; // TArray<FLaunchOnTestSettings>
		constexpr auto DefaultScreenshotResolution = 0x320; // FIntPoint
	}

	namespace n_UCircularThrobber {
		constexpr auto NumberOfPieces = 0x108; // int32_t
		constexpr auto Period = 0x10c; // float
		constexpr auto Radius = 0x110; // float
		constexpr auto PieceImage = 0x118; // USlateBrushAsset*
		constexpr auto Image = 0x120; // FSlateBrush
		constexpr auto bEnableRadius = 0x1a8; // bool
	}

	namespace n_UWidgetComponent {
		constexpr auto Space = 0x4e0; // EWidgetSpace
		constexpr auto TimingPolicy = 0x4e1; // EWidgetTimingPolicy
		constexpr auto WidgetClass = 0x4e8; // UUserWidget*
		constexpr auto DrawSize = 0x4f0; // FIntPoint
		constexpr auto bManuallyRedraw = 0x4f8; // bool
		constexpr auto bRedrawRequested = 0x4f9; // bool
		constexpr auto RedrawTime = 0x4fc; // float
		constexpr auto CurrentDrawSize = 0x508; // FIntPoint
		constexpr auto bDrawAtDesiredSize = 0x510; // bool
		constexpr auto Pivot = 0x514; // FVector2D
		constexpr auto bReceiveHardwareInput = 0x51c; // bool
		constexpr auto bWindowFocusable = 0x51d; // bool
		constexpr auto WindowVisibility = 0x51e; // EWindowVisibility
		constexpr auto bApplyGammaCorrection = 0x51f; // bool
		constexpr auto OwnerPlayer = 0x520; // ULocalPlayer*
		constexpr auto BackgroundColor = 0x528; // FLinearColor
		constexpr auto TintColorAndOpacity = 0x538; // FLinearColor
		constexpr auto OpacityFromTexture = 0x548; // float
		constexpr auto BlendMode = 0x54c; // EWidgetBlendMode
		constexpr auto bIsTwoSided = 0x54d; // bool
		constexpr auto TickWhenOffscreen = 0x54e; // bool
		constexpr auto Widget = 0x550; // UUserWidget*
		constexpr auto BodySetup = 0x578; // UBodySetup*
		constexpr auto TranslucentMaterial = 0x580; // UMaterialInterface*
		constexpr auto TranslucentMaterial_OneSided = 0x588; // UMaterialInterface*
		constexpr auto OpaqueMaterial = 0x590; // UMaterialInterface*
		constexpr auto OpaqueMaterial_OneSided = 0x598; // UMaterialInterface*
		constexpr auto MaskedMaterial = 0x5a0; // UMaterialInterface*
		constexpr auto MaskedMaterial_OneSided = 0x5a8; // UMaterialInterface*
		constexpr auto RenderTarget = 0x5b0; // UTextureRenderTarget2D*
		constexpr auto MaterialInstance = 0x5b8; // UMaterialInstanceDynamic*
		constexpr auto bAddedToScreen = 0x5c0; // bool
		constexpr auto bEditTimeUsable = 0x5c1; // bool
		constexpr auto SharedLayerName = 0x5c4; // FName
		constexpr auto LayerZOrder = 0x5cc; // int32_t
		constexpr auto GeometryMode = 0x5d0; // EWidgetGeometryMode
		constexpr auto CylinderArcAngle = 0x5d4; // float
	}

	namespace n_UCameraPostProcessPreset {
		constexpr auto Materials = 0x28; // TArray<UMaterialInterface*>
		constexpr auto Settings = 0x40; // FPostProcessSettings
		constexpr auto MaterialControllers = 0x600; // TArray<UMaterialController*>
	}

	namespace n_USlateAccessibleWidgetData {
		constexpr auto bCanChildrenBeAccessible = 0x28; // bool
		constexpr auto AccessibleBehavior = 0x29; // ESlateAccessibleBehavior
		constexpr auto AccessibleSummaryBehavior = 0x2a; // ESlateAccessibleBehavior
		constexpr auto AccessibleText = 0x30; // FText
		constexpr auto AccessibleTextDelegate = 0x48; // FDelegate
		constexpr auto AccessibleSummaryText = 0x58; // FText
		constexpr auto AccessibleSummaryTextDelegate = 0x70; // FDelegate
	}

	namespace n_AProceduralFoliageBlockingVolume {
		constexpr auto ProceduralFoliageVolume = 0x350; // AProceduralFoliageVolume*
	}

	namespace n_UParticleModuleVectorFieldScale {
		constexpr auto VectorFieldScale = 0x30; // UDistributionFloat*
		constexpr auto VectorFieldScaleRaw = 0x38; // FRawDistributionFloat
	}

	namespace n_UUW-Inventory_MaterialSlot_C {
		constexpr auto UberGraphFrame = 0x1358; // FPointerToUberGraphFrame
		constexpr auto Anim_LoopHintMaterial = 0x1360; // UWidgetAnimation*
		constexpr auto Anim_Upgrade = 0x1368; // UWidgetAnimation*
		constexpr auto P_Upgrade_Arrow = 0x1370; // UWidgetAnimation*
		constexpr auto C_SlotHover_ItemState_Hide = 0x1378; // UWidgetAnimation*
		constexpr auto C_SlotHover_ItemState_Show = 0x1380; // UWidgetAnimation*
		constexpr auto Hover_Gold = 0x1388; // UWidgetAnimation*
		constexpr auto P_SlotHover = 0x1390; // UWidgetAnimation*
		constexpr auto BGImage = 0x1398; // UImage*
		constexpr auto CanvasPanel_ITemState = 0x13a0; // UCanvasPanel*
		constexpr auto CanvasPanel_Unnecessary = 0x13a8; // UCanvasPanel*
		constexpr auto Count = 0x13b0; // UTextBlock*
		constexpr auto Count_Icon = 0x13b8; // UTextBlock*
		constexpr auto fill = 0x13c0; // UImage*
		constexpr auto Hint = 0x13c8; // UImage*
		constexpr auto HoverImage = 0x13d0; // UImage*
		constexpr auto HoverImage_Gold = 0x13d8; // UImage*
		constexpr auto Image_1 = 0x13e0; // UImage*
		constexpr auto Image_2 = 0x13e8; // UImage*
		constexpr auto Image_95 = 0x13f0; // UImage*
		constexpr auto ItemImage = 0x13f8; // UImage*
		constexpr auto ItemNameName = 0x1400; // UTextBlock*
		constexpr auto ItemState_Text = 0x1408; // UTextBlock*
		constexpr auto LvColor = 0x1410; // UImage*
		constexpr auto NeedMaterial = 0x1418; // UImage*
		constexpr auto OverBG_3 = 0x1420; // UImage*
		constexpr auto ProgressBar_136 = 0x1428; // UProgressBar*
		constexpr auto SizeBox_1 = 0x1430; // USizeBox*
		constexpr auto WeaponItemImage = 0x1438; // UImage*
		constexpr auto bGold = 0x1440; // bool
		constexpr auto SelectedHoverImage = 0x1448; // UImage*
		constexpr auto MedicalBGColor = 0x1450; // FLinearColor
		constexpr auto SetSlotInfo = 0x1460; // FMulticastInlineDelegate
		constexpr auto SlotIndex = 0x1470; // int32_t
	}

	namespace n_UBravoHotelGameBuffSlot {
		constexpr auto Image_Buff = 0x248; // UImage*
		constexpr auto ProgressBar_Slot = 0x250; // UProgressBar*
		constexpr auto BuffUIInfo = 0x258; // FBravoHotelBuffUIInfo
		constexpr auto LastTimer = 0x2f0; // float
	}

	namespace n_UBTDecorator_DoesPathExist {
		constexpr auto BlackboardKeyA = 0x68; // FBlackboardKeySelector
		constexpr auto BlackboardKeyB = 0x90; // FBlackboardKeySelector
		constexpr auto bUseSelf = 0xb8; // char : 1
		constexpr auto PathQueryType = 0xbc; // EPathExistanceQueryType
		constexpr auto FilterClass = 0xc0; // UNavigationQueryFilter*
	}

	namespace n_UEditableGameplayTagQueryExpression_NoExprMatch {
		constexpr auto Expressions = 0x28; // TArray<UEditableGameplayTagQueryExpression*>
	}

	namespace n_UDynamicEntryBoxBase {
		constexpr auto EntryBoxType = 0x108; // EDynamicBoxType
		constexpr auto EntrySpacing = 0x10c; // FVector2D
		constexpr auto SpacingPattern = 0x118; // TArray<FVector2D>
		constexpr auto EntrySizeRule = 0x128; // FSlateChildSize
		constexpr auto EntryHorizontalAlignment = 0x130; // EHorizontalAlignment
		constexpr auto EntryVerticalAlignment = 0x131; // EVerticalAlignment
		constexpr auto MaxElementSize = 0x134; // int32_t
		constexpr auto EntryWidgetPool = 0x148; // FUserWidgetPool
	}

	namespace n_UReplicationGraphNode_GridCell {
		constexpr auto StaticNode = 0x140; // UReplicationGraphNode*
		constexpr auto DynamicNode = 0x1d0; // UReplicationGraphNode*
		constexpr auto DormancyNode = 0x1d8; // UReplicationGraphNode_DormancyNode*
	}

	namespace n_UBravoHotelThrowingWeaponMovementComponent {
		constexpr auto OnProjectilePenetrate = 0x1d0; // FMulticastInlineDelegate
		constexpr auto bIsFluidFriction = 0x1e0; // bool
		constexpr auto bInFluid = 0x1e1; // bool
		constexpr auto FluidFriction = 0x1e4; // float
		constexpr auto BuoyancyZ = 0x1e8; // float
		constexpr auto bEnableGuidedForce = 0x1ec; // bool
		constexpr auto GuidedForce = 0x1f0; // float
		constexpr auto GuidedLocation = 0x1f4; // FVector
	}

	namespace n_ULuminARLightEstimate {
		constexpr auto AmbientIntensityNits = 0x40; // TArray<float>
	}

	namespace n_UChat_MainWidget_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Chat Input = 0x250; // UEditableTextBox*
		constexpr auto Chat Switcher = 0x258; // UWidgetSwitcher*
		constexpr auto Tab Scrollbox = 0x260; // UScrollBox*
		constexpr auto Whole Widget Container = 0x268; // UCanvasPanel*
		constexpr auto Chat System = 0x270; // AChat_System_C*
		constexpr auto CurrentDialogBox = 0x278; // UChat_DialogBox_C*
		constexpr auto Chat Inactivity Hide Delay = 0x280; // float
		constexpr auto Faded? = 0x284; // bool
		constexpr auto Was Previously Faded? = 0x285; // bool
		constexpr auto Use Autohide? = 0x286; // bool
		constexpr auto Message Character Limit = 0x288; // int32_t
		constexpr auto Text Input - Inactive Hint Text = 0x290; // FString
		constexpr auto Text Input - Active Hint Text = 0x2a0; // FString
		constexpr auto # Messages to Keep = 0x2b0; // int32_t
		constexpr auto Clear Messages at # Messages = 0x2b4; // int32_t
		constexpr auto Show Mouse on Enter? = 0x2b8; // bool
	}

	namespace n_UPaperTileMapComponent {
		constexpr auto MapWidth = 0x4e0; // int32_t
		constexpr auto MapHeight = 0x4e4; // int32_t
		constexpr auto TileWidth = 0x4e8; // int32_t
		constexpr auto TileHeight = 0x4ec; // int32_t
		constexpr auto DefaultLayerTileSet = 0x4f0; // UPaperTileSet*
		constexpr auto Material = 0x4f8; // UMaterialInterface*
		constexpr auto TileLayers = 0x500; // TArray<UPaperTileLayer*>
		constexpr auto TileMapColor = 0x510; // FLinearColor
		constexpr auto UseSingleLayerIndex = 0x520; // int32_t
		constexpr auto bUseSingleLayer = 0x524; // bool
		constexpr auto TileMap = 0x528; // UPaperTileMap*
	}

	namespace n_ABravoHotelElevator {
		constexpr auto ElevatorBody = 0x318; // USceneComponent*
		constexpr auto DoorList = 0x320; // TArray<ABravoHotelElevatorDoor*>
		constexpr auto InnerDoorList = 0x330; // TArray<ABravoHotelElevatorDoor*>
		constexpr auto InnerDoorPivotList = 0x340; // TArray<FTransform>
		constexpr auto TargetDoor = 0x350; // ABravoHotelElevatorDoor*
		constexpr auto CurrentDoor = 0x358; // ABravoHotelElevatorDoor*
		constexpr auto DoorQueue = 0x360; // TArray<int32_t>
		constexpr auto CurrentStateType = 0x370; // EElevatorStateType
		constexpr auto DefaultDoorID = 0x374; // int32_t
		constexpr auto MoveSpeed = 0x378; // float
		constexpr auto DefaultDelayTime = 0x37c; // float
		constexpr auto CurrentDelayTime = 0x380; // float
		constexpr auto AkAudioComponent = 0x388; // UAkComponent*
		constexpr auto SoundEventForMoving = 0x390; // UAkAudioEvent*
		constexpr auto SoundEventForMoved = 0x398; // UAkAudioEvent*
	}

	namespace n_UBravoHotelReplayTimelineEventMarker {
		constexpr auto ReplayController = 0x248; // ABravoHotelMK3DReplayController*
		constexpr auto KillEvent = 0x250; // FMK3DHighlightKillEvent
	}

	namespace n_USkeletalMesh {
		constexpr auto PositiveBoundsExtension = 0x60; // FVector
		constexpr auto NegativeBoundsExtension = 0x6c; // FVector
		constexpr auto MinLOD = 0xc8; // FPerPlatformInt
		constexpr auto DisableBelowMinLodStripping = 0xcc; // FPerPlatformBool
		constexpr auto BodySetup = 0xd0; // UBodySetup*
		constexpr auto PhysicsAsset = 0xd8; // UPhysicsAsset*
		constexpr auto ShadowPhysicsAsset = 0xe0; // UPhysicsAsset*
		constexpr auto NodeMappingData = 0xe8; // TArray<UNodeMappingContainer*>
		constexpr auto MorphTargets = 0xf8; // TArray<UMorphTarget*>
		constexpr auto PostProcessAnimBlueprint = 0x108; // UAnimInstance*
		constexpr auto MeshClothingAssets = 0x110; // TArray<UClothingAssetBase*>
		constexpr auto SamplingInfo = 0x120; // FSkeletalMeshSamplingInfo
		constexpr auto AssetUserData = 0x150; // TArray<UAssetUserData*>
		constexpr auto Sockets = 0x168; // TArray<USkeletalMeshSocket*>
		constexpr auto SkinWeightProfiles = 0x188; // TArray<FSkinWeightProfileInfo>
		constexpr auto LODInfo = 0x200; // TArray<FSkeletalMeshLODInfo>
		constexpr auto ImportedBounds = 0x210; // FBoxSphereBounds
		constexpr auto Skeleton = 0x230; // USkeleton*
		constexpr auto Materials = 0x248; // TArray<FSkeletalMaterial>
		constexpr auto SkelMirrorTable = 0x258; // TArray<FBoneMirrorInfo>
		constexpr auto bUseHighPrecisionTangentBasis = 0x268; // char : 1
		constexpr auto ExtendedBounds = 0x378; // FBoxSphereBounds
		constexpr auto bUseFullPrecisionUVs = 0x394; // char : 1
		constexpr auto SkelMirrorFlipAxis = 0x395; // EAxis
		constexpr auto bHasVertexColors = 0x396; // char : 1
		constexpr auto bEnablePerPolyCollision = 0x396; // char : 1
		constexpr auto SkelMirrorAxis = 0x397; // EAxis
		constexpr auto bHasBeenSimplified = 0x398; // char : 1
	}

	namespace n_UBravoHotelLobbyWidget {
		constexpr auto DefaultMapSetting = 0x248; // FBravoHotelLobbyMapSetting
	}

	namespace n_UVRNotificationsComponent {
		constexpr auto HMDTrackingInitializingAndNeedsHMDToBeTrackedDelegate = 0xb0; // FMulticastInlineDelegate
		constexpr auto HMDTrackingInitializedDelegate = 0xc0; // FMulticastInlineDelegate
		constexpr auto HMDRecenteredDelegate = 0xd0; // FMulticastInlineDelegate
		constexpr auto HMDLostDelegate = 0xe0; // FMulticastInlineDelegate
		constexpr auto HMDReconnectedDelegate = 0xf0; // FMulticastInlineDelegate
		constexpr auto HMDConnectCanceledDelegate = 0x100; // FMulticastInlineDelegate
		constexpr auto HMDPutOnHeadDelegate = 0x110; // FMulticastInlineDelegate
		constexpr auto HMDRemovedFromHeadDelegate = 0x120; // FMulticastInlineDelegate
		constexpr auto VRControllerRecenteredDelegate = 0x130; // FMulticastInlineDelegate
	}

	namespace n_UPostProcessComponent {
		constexpr auto Settings = 0x240; // FPostProcessSettings
		constexpr auto Priority = 0x800; // float
		constexpr auto BlendRadius = 0x804; // float
		constexpr auto BlendWeight = 0x808; // float
		constexpr auto bEnabled = 0x80c; // char : 1
		constexpr auto bUnbound = 0x80c; // char : 1
	}

	namespace n_UNiagaraMeshRendererProperties {
		constexpr auto ParticleMesh = 0x50; // UStaticMesh*
		constexpr auto SortMode = 0x58; // ENiagaraSortMode
		constexpr auto bOverrideMaterials = 0x5c; // char : 1
		constexpr auto bSortOnlyWhenTranslucent = 0x5c; // char : 1
		constexpr auto OverrideMaterials = 0x60; // TArray<FNiagaraMeshMaterialOverride>
		constexpr auto SubImageSize = 0x70; // FVector2D
		constexpr auto bSubImageBlend = 0x78; // char : 1
		constexpr auto FacingMode = 0x7c; // ENiagaraMeshFacingMode
		constexpr auto bLockedAxisEnable = 0x80; // char : 1
		constexpr auto LockedAxis = 0x84; // FVector
		constexpr auto LockedAxisSpace = 0x90; // ENiagaraMeshLockedAxisSpace
		constexpr auto PositionBinding = 0x98; // FNiagaraVariableAttributeBinding
		constexpr auto ColorBinding = 0x110; // FNiagaraVariableAttributeBinding
		constexpr auto VelocityBinding = 0x188; // FNiagaraVariableAttributeBinding
		constexpr auto MeshOrientationBinding = 0x200; // FNiagaraVariableAttributeBinding
		constexpr auto ScaleBinding = 0x278; // FNiagaraVariableAttributeBinding
		constexpr auto SubImageIndexBinding = 0x2f0; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterialBinding = 0x368; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial1Binding = 0x3e0; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial2Binding = 0x458; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial3Binding = 0x4d0; // FNiagaraVariableAttributeBinding
		constexpr auto MaterialRandomBinding = 0x548; // FNiagaraVariableAttributeBinding
		constexpr auto CustomSortingBinding = 0x5c0; // FNiagaraVariableAttributeBinding
		constexpr auto NormalizedAgeBinding = 0x638; // FNiagaraVariableAttributeBinding
		constexpr auto CameraOffsetBinding = 0x6b0; // FNiagaraVariableAttributeBinding
	}

	namespace n_UMaterialExpressionDesaturation {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Fraction = 0x54; // FExpressionInput
		constexpr auto LuminanceFactors = 0x68; // FLinearColor
	}

	namespace n_UParticleModuleEventGenerator {
		constexpr auto Events = 0x30; // TArray<FParticleEvent_GenerateInfo>
	}

	namespace n_UProjectileMovementComponent {
		constexpr auto InitialSpeed = 0xf0; // float
		constexpr auto MaxSpeed = 0xf4; // float
		constexpr auto bRotationFollowsVelocity = 0xf8; // char : 1
		constexpr auto bRotationRemainsVertical = 0xf8; // char : 1
		constexpr auto bShouldBounce = 0xf8; // char : 1
		constexpr auto bInitialVelocityInLocalSpace = 0xf8; // char : 1
		constexpr auto bForceSubStepping = 0xf8; // char : 1
		constexpr auto bSimulationEnabled = 0xf8; // char : 1
		constexpr auto bSweepCollision = 0xf8; // char : 1
		constexpr auto bIsHomingProjectile = 0xf8; // char : 1
		constexpr auto bBounceAngleAffectsFriction = 0xf9; // char : 1
		constexpr auto bIsSliding = 0xf9; // char : 1
		constexpr auto bInterpMovement = 0xf9; // char : 1
		constexpr auto bInterpRotation = 0xf9; // char : 1
		constexpr auto PreviousHitTime = 0xfc; // float
		constexpr auto PreviousHitNormal = 0x100; // FVector
		constexpr auto ProjectileGravityScale = 0x10c; // float
		constexpr auto Buoyancy = 0x110; // float
		constexpr auto Bounciness = 0x114; // float
		constexpr auto Friction = 0x118; // float
		constexpr auto BounceVelocityStopSimulatingThreshold = 0x11c; // float
		constexpr auto MinFrictionFraction = 0x120; // float
		constexpr auto OnProjectileBounce = 0x128; // FMulticastInlineDelegate
		constexpr auto OnProjectileStop = 0x138; // FMulticastInlineDelegate
		constexpr auto HomingAccelerationMagnitude = 0x148; // float
		constexpr auto HomingTargetComponent = 0x14c; // TWeakObjectPtr<USceneComponent>
		constexpr auto MaxSimulationTimeStep = 0x154; // float
		constexpr auto MaxSimulationIterations = 0x158; // int32_t
		constexpr auto BounceAdditionalIterations = 0x15c; // int32_t
		constexpr auto InterpLocationTime = 0x160; // float
		constexpr auto InterpRotationTime = 0x164; // float
		constexpr auto InterpLocationMaxLagDistance = 0x168; // float
		constexpr auto InterpLocationSnapToTargetDistance = 0x16c; // float
	}

	namespace n_UInterpTrackBoolProp {
		constexpr auto BoolTrack = 0x70; // TArray<FBoolTrackKey>
		constexpr auto PropertyName = 0x80; // FName
	}

	namespace n_UPaperFlipbook {
		constexpr auto FramesPerSecond = 0x28; // float
		constexpr auto KeyFrames = 0x30; // TArray<FPaperFlipbookKeyFrame>
		constexpr auto DefaultMaterial = 0x40; // UMaterialInterface*
		constexpr auto CollisionSource = 0x48; // EFlipbookCollisionMode
	}

	namespace n_ULineWidget_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Image_51 = 0x250; // UImage*
		constexpr auto InitSize = 0x258; // float
	}

	namespace n_UGizmoLocalVec2ParameterSource {
		constexpr auto Value = 0x48; // FVector2D
		constexpr auto LastChange = 0x50; // FGizmoVec2ParameterChange
	}

	namespace n_USoundNodeDoppler {
		constexpr auto DopplerIntensity = 0x48; // float
		constexpr auto bUseSmoothing = 0x4c; // bool
		constexpr auto SmoothingInterpSpeed = 0x50; // float
	}

	namespace n_UAnimNotifyState_PlaySound {
		constexpr auto Sound = 0x30; // USoundBase*
		constexpr auto VolumeMultiplier = 0x38; // float
		constexpr auto PitchMultiplier = 0x3c; // float
		constexpr auto bFollow = 0x40; // char : 1
		constexpr auto AttachName = 0x44; // FName
	}

	namespace n_UUW-RequestResuscitation_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Button_Request = 0x250; // UButton*
		constexpr auto Image_955 = 0x258; // UImage*
		constexpr auto Image_1208 = 0x260; // UImage*
		constexpr auto SizeBox_77 = 0x268; // USizeBox*
		constexpr auto SizeBox_78 = 0x270; // USizeBox*
		constexpr auto Text_Price = 0x278; // UTextBlock*
		constexpr auto TextBlock_767 = 0x280; // UTextBlock*
		constexpr auto WidgetSwitcher_Price = 0x288; // UWidgetSwitcher*
		constexpr auto PlayerControllerRef = 0x290; // ABP-BravoHotel-PlayerController_C*
		constexpr auto bCanRequest = 0x298; // bool
		constexpr auto bRequest = 0x299; // bool
		constexpr auto RequstingResuscitationText = 0x2a0; // FText
		constexpr auto RequestingSizeBoxWidth = 0x2b8; // float
		constexpr auto RequestTextColor = 0x2c0; // FSlateColor
		constexpr auto RequestingTextColor = 0x2e8; // FSlateColor
		constexpr auto RequestingSizeBoxInitWidth = 0x310; // float
		constexpr auto RequstingResuscitationInitText = 0x318; // FText
		constexpr auto InitButtonStyle = 0x330; // FButtonStyle
		constexpr auto RequestingButtonStyle = 0x5a8; // FButtonStyle
		constexpr auto CanRequestButtonStyle = 0x820; // FButtonStyle
	}

	namespace n_USoundNodeModulator {
		constexpr auto PitchMin = 0x48; // float
		constexpr auto PitchMax = 0x4c; // float
		constexpr auto VolumeMin = 0x50; // float
		constexpr auto VolumeMax = 0x54; // float
	}

	namespace n_ABravoHotelVehicleSpawner {
		constexpr auto SpawnedVehicle = 0x318; // ABravoHotelVehicle*
		constexpr auto bActivated = 0x320; // bool
	}

	namespace n_UCollisionProfile {
		constexpr auto Profiles = 0x38; // TArray<FCollisionResponseTemplate>
		constexpr auto DefaultChannelResponses = 0x48; // TArray<FCustomChannelSetup>
		constexpr auto EditProfiles = 0x58; // TArray<FCustomProfile>
		constexpr auto ProfileRedirects = 0x68; // TArray<FRedirector>
		constexpr auto CollisionChannelRedirects = 0x78; // TArray<FRedirector>
	}

	namespace n_ABP-GrenadeWeaponBase_C {
		constexpr auto UberGraphFrame = 0x1f90; // FPointerToUberGraphFrame
		constexpr auto StaticMesh_Ring = 0x1f98; // UStaticMeshComponent*
		constexpr auto StaticMesh_Lever = 0x1fa0; // UStaticMeshComponent*
		constexpr auto Timeline_0_Lerp_77CED3694A7ECD58C02266AF5F5B5991 = 0x1fa8; // float
		constexpr auto Timeline_0__Direction_77CED3694A7ECD58C02266AF5F5B5991 = 0x1fac; // ETimelineDirection
		constexpr auto Timeline_1 = 0x1fb0; // UTimelineComponent*
		constexpr auto Lerp_Lerp_EDD5977E4E850EC460B1E599F1FF45F8 = 0x1fb8; // float
		constexpr auto Lerp__Direction_EDD5977E4E850EC460B1E599F1FF45F8 = 0x1fbc; // ETimelineDirection
		constexpr auto Lerp = 0x1fc0; // UTimelineComponent*
		constexpr auto InterpOffset = 0x1fc8; // FVector
		constexpr auto DesiredLocation = 0x1fd4; // FVector
		constexpr auto InitalLocalVelocity = 0x1fe0; // FVector
		constexpr auto DesiredLocation_Ing = 0x1fec; // FVector
		constexpr auto InitalLocalVelocity_Ing = 0x1ff8; // FVector
		constexpr auto ThrowingWeaponState = 0x2004; // EThrowingWeaponState
		constexpr auto ThrowingAction_Bool = 0x2005; // bool
		constexpr auto DesiredLocation_3 = 0x2008; // FVector
		constexpr auto DesiredLocation_2_Ing = 0x2014; // FVector
		constexpr auto InitalLocalVelocity_3 = 0x2020; // FVector
		constexpr auto InitalLocalVelocity_2_ing = 0x202c; // FVector
		constexpr auto PathLifeTime = 0x2038; // float
		constexpr auto TimeInterval = 0x203c; // float
		constexpr auto IndicatorComponent_2 = 0x2040; // UStaticMeshComponent*
		constexpr auto IndicatorComponent_3 = 0x2048; // UStaticMeshComponent*
		constexpr auto TrajectoryComponent_2 = 0x2050; // UProjectileTrajectoryComponent_C*
		constexpr auto TrajectoryComponent_3 = 0x2058; // UProjectileTrajectoryComponent_C*
	}

	namespace n_UBHBReadyToSnipe {
		constexpr auto MaxReadyToSnipeTime = 0x3a0; // float
	}

	namespace n_UBravoHotelDevelopmentBlackMarket {
		constexpr auto WeaponList = 0x248; // TArray<FBravoHotelBlackMarketDataType>
		constexpr auto AmmoList = 0x258; // TArray<FBravoHotelBlackMarketDataType>
		constexpr auto AttachmentList = 0x268; // TArray<FBravoHotelBlackMarketDataType>
		constexpr auto WearableList = 0x278; // TArray<FBravoHotelBlackMarketDataType>
		constexpr auto ConsumableList = 0x288; // TArray<FBravoHotelBlackMarketDataType>
		constexpr auto CustomList = 0x298; // TArray<FBravoHotelBlackMarketDataType>
		constexpr auto VehicleList = 0x2a8; // TArray<FBravoHotelBlackMarketDataType>
		constexpr auto GearList = 0x2b8; // TArray<FBravoHotelBlackMarketDataType>
		constexpr auto PerkList = 0x2c8; // TArray<FBravoHotelBlackMarketDataType>
		constexpr auto PresetList = 0x2d8; // TArray<FBravoHotelBlackMarketDataType>
	}

	namespace n_UCameraAnimInst {
		constexpr auto CamAnim = 0x28; // UCameraAnim*
		constexpr auto InterpGroupInst = 0x30; // UInterpGroupInst*
		constexpr auto PlayRate = 0x50; // float
		constexpr auto MoveTrack = 0x68; // UInterpTrackMove*
		constexpr auto MoveInst = 0x70; // UInterpTrackInstMove*
		constexpr auto PlaySpace = 0x78; // ECameraAnimPlaySpace
	}

	namespace n_UMaterialExpressionViewProperty {
		constexpr auto Property = 0x40; // EMaterialExposedViewProperty
	}

	namespace n_USoundNodeWaveParam {
		constexpr auto WaveParameterName = 0x48; // FName
	}

	namespace n_UBravoHotelReportUserConfirmWidget {
		constexpr auto ConfirmButton = 0x248; // UButton*
		constexpr auto CancelButton = 0x250; // UButton*
	}

	namespace n_UAkTVOSInitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettingsWithSampleRate
		constexpr auto AudioSession = 0x90; // FAkAudioSession
		constexpr auto CommunicationSettings = 0xa0; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xc8; // FAkAdvancedInitializationSettings
	}

	namespace n_UBP_GameSettings_C {
		constexpr auto Look Horizontal Sensitivity = 0x120; // float
		constexpr auto Look Vertical Sensitivity = 0x124; // float
		constexpr auto Look Horizontal Invert = 0x128; // bool
		constexpr auto Look Vertical Invert = 0x129; // bool
		constexpr auto Game Settings Interface = 0x130; // TScriptInterface<IBPI_GameSettingsInterface_C>
		constexpr auto Save File Name = 0x140; // FString
		constexpr auto Save File User Index = 0x150; // int32_t
		constexpr auto AudioEmittors = 0x158; // TArray<FSAudioUpdateStruct>
		constexpr auto Audio Multiplier Master = 0x168; // float
		constexpr auto Audio Multiplier Music = 0x16c; // float
		constexpr auto Audio Multiplier Voice = 0x170; // float
		constexpr auto Audio Multiplier Effect = 0x174; // float
		constexpr auto Audio Multiplier Ambient = 0x178; // float
		constexpr auto Audio Multiplier UI = 0x17c; // float
		constexpr auto Volume Master = 0x180; // float
		constexpr auto Volume Music = 0x184; // float
		constexpr auto Volume Voice = 0x188; // float
		constexpr auto Volume Effect = 0x18c; // float
		constexpr auto Volume Ambient = 0x190; // float
		constexpr auto Video X Resolution = 0x194; // int32_t
		constexpr auto Video Y Resolution = 0x198; // int32_t
		constexpr auto Camera List = 0x1a0; // TArray<UCameraComponent*>
		constexpr auto Screen Mode = 0x1b0; // EWindowMode
		constexpr auto Resolution Scale Quality = 0x1b4; // int32_t
		constexpr auto View Distance Scale = 0x1b8; // float
		constexpr auto Anti Aliasing Quality = 0x1bc; // int32_t
		constexpr auto Post Processing Quality = 0x1c0; // int32_t
		constexpr auto Shadow Quality = 0x1c4; // int32_t
		constexpr auto Texture Quality = 0x1c8; // int32_t
		constexpr auto Effect Quality = 0x1cc; // int32_t
		constexpr auto Foliage Quality = 0x1d0; // int32_t
		constexpr auto Field Of View FOV = 0x1d4; // float
		constexpr auto Motion Blur Strength = 0x1d8; // float
		constexpr auto VSync Enabled = 0x1dc; // bool
		constexpr auto My Custom Checkbox = 0x1dd; // bool
		constexpr auto My Custom RadioBox = 0x1e0; // int32_t
		constexpr auto My Custom Slider = 0x1e4; // float
		constexpr auto Bloom Intensity = 0x1e8; // float
		constexpr auto Gamma Intensity = 0x1ec; // float
		constexpr auto Gain Intensity = 0x1f0; // float
		constexpr auto Previous Setting State = 0x1f8; // UBP_GameSettings_C*
		constexpr auto My Custom Combobox = 0x200; // FString
		constexpr auto Current Frame Time = 0x210; // float
		constexpr auto Key Actions = 0x218; // TArray<UBP_KeyAction_C*>
		constexpr auto Input Float Axis List = 0x228; // TArray<UBP_KeyInput_C*>
		constexpr auto Saved Key Inputs = 0x238; // TArray<FSKeyActionSave>
		constexpr auto Volume UI = 0x248; // float
		constexpr auto Old ScreenMode State = 0x24c; // EWindowMode
		constexpr auto TemporalAAFilterSize = 0x250; // float
		constexpr auto TemporalAACatmullRom = 0x254; // bool
		constexpr auto TemporalAAPauseCorrect = 0x255; // bool
		constexpr auto TemporalAACurrentFrameWeight = 0x258; // float
		constexpr auto TemporalAASamples = 0x25c; // int32_t
		constexpr auto TonemapperSharpen = 0x260; // float
		constexpr auto MinBrightness = 0x264; // float
		constexpr auto MaxBrightness = 0x268; // float
		constexpr auto Contrast = 0x26c; // float
		constexpr auto PostProcessVolume = 0x270; // bool
		constexpr auto ScreenModeChange = 0x271; // bool
		constexpr auto FilmToe = 0x272; // bool
		constexpr auto ColorGrading Global Gamma = 0x274; // float
		constexpr auto ClearFog = 0x278; // bool
		constexpr auto ViewDistanceQuality = 0x27c; // int32_t
		constexpr auto ScalabilityQuality = 0x280; // int32_t
		constexpr auto CurrentFileVersion = 0x284; // int32_t
		constexpr auto UpdateFileVersion = 0x288; // int32_t
		constexpr auto Smooth Frame Enabled = 0x28c; // bool
	}

	namespace n_UMaterialExpressionTemporalSobol {
		constexpr auto Index = 0x40; // FExpressionInput
		constexpr auto Seed = 0x54; // FExpressionInput
		constexpr auto ConstIndex = 0x68; // uint32_t
		constexpr auto ConstSeed = 0x6c; // FVector2D
	}

	namespace n_UBTDecorator_ConeCheck {
		constexpr auto ConeHalfAngle = 0x68; // float
		constexpr auto ConeOrigin = 0x70; // FBlackboardKeySelector
		constexpr auto ConeDirection = 0x98; // FBlackboardKeySelector
		constexpr auto Observed = 0xc0; // FBlackboardKeySelector
	}

	namespace n_USimplygonOpacityCaster {
		constexpr auto OpacityCasterSettings = 0x28; // FOpacityCasterSettings
	}

	namespace n_UPropertyBinding {
		constexpr auto SourceObject = 0x28; // TWeakObjectPtr<UObject>
		constexpr auto SourcePath = 0x30; // FDynamicPropertyPath
		constexpr auto DestinationProperty = 0x58; // FName
	}

	namespace n_UDistributionVectorUniform {
		constexpr auto MAX = 0x38; // FVector
		constexpr auto Min = 0x44; // FVector
		constexpr auto bLockAxes = 0x50; // char : 1
		constexpr auto LockedAxes = 0x54; // EDistributionVectorLockFlags
		constexpr auto MirrorFlags = 0x55; // EDistributionVectorMirrorFlags [0x3]
		constexpr auto bUseExtremes = 0x58; // char : 1
	}

	namespace n_UNiagaraDataInterfaceCurve {
		constexpr auto Curve = 0x58; // FRichCurve
	}

	namespace n_UInterpTrackFloatMaterialParam {
		constexpr auto TargetMaterials = 0x90; // TArray<UMaterialInterface*>
		constexpr auto ParamName = 0xa0; // FName
	}

	namespace n_UInstancedStaticMeshComponent {
		constexpr auto PerInstanceSMData = 0x548; // TArray<FInstancedStaticMeshInstanceData>
		constexpr auto NumCustomDataFloats = 0x558; // int32_t
		constexpr auto PerInstanceSMCustomData = 0x560; // TArray<float>
		constexpr auto bMergeCollision = 0x570; // bool
		constexpr auto InstancingRandomSeed = 0x574; // int32_t
		constexpr auto InstanceStartCullDistance = 0x578; // int32_t
		constexpr auto InstanceEndCullDistance = 0x57c; // int32_t
		constexpr auto CulldistanceType = 0x580; // int8_t
		constexpr auto MinScreenSizeScale = 0x584; // float
		constexpr auto InstanceBodiesSplitRatio = 0x588; // char
		constexpr auto InstanceReorderTable = 0x590; // TArray<int32_t>
		constexpr auto NumPendingLightmaps = 0x5fc; // int32_t
		constexpr auto CachedMappings = 0x600; // TArray<FInstancedStaticMeshMappingInfo>
	}

	namespace n_UBravoHotelAircraftRouteWidget {
		constexpr auto AirCraftRef = 0x2a8; // ABravoHotelAircraftFlight*
	}

	namespace n_AMatineeActorCameraAnim {
		constexpr auto CameraAnim = 0x3c0; // UCameraAnim*
	}

	namespace n_UFSM_FinishState_AsyncWithCallbacks {
		constexpr auto Target = 0x30; // UStateMachineComponent*
		constexpr auto InBegin = 0x38; // FDelegate
		constexpr auto InExit = 0x48; // FDelegate
		constexpr auto Timer = 0x58; // float
		constexpr auto TimerHandle = 0x60; // FTimerHandle
		constexpr auto OnSuccess = 0x68; // FMulticastInlineDelegate
		constexpr auto OnAborted = 0x78; // FMulticastInlineDelegate
	}

	namespace n_ABravoHotelObjectSyncMannagerBase {
		constexpr auto SyncInfo = 0x318; // FSyncInfo
		constexpr auto MannagedPool = 0x320; // TSet<TWeakObjectPtr<AActor>>
	}

	namespace n_UNetDriver {
		constexpr auto NetConnectionClassName = 0x30; // FString
		constexpr auto ReplicationDriverClassName = 0x40; // FString
		constexpr auto MaxDownloadSize = 0x50; // int32_t
		constexpr auto bClampListenServerTickRate = 0x54; // char : 1
		constexpr auto NetServerMaxTickRate = 0x58; // int32_t
		constexpr auto MaxNetTickRate = 0x5c; // int32_t
		constexpr auto MaxInternetClientRate = 0x60; // int32_t
		constexpr auto MaxClientRate = 0x64; // int32_t
		constexpr auto ServerTravelPause = 0x68; // float
		constexpr auto SpawnPrioritySeconds = 0x6c; // float
		constexpr auto RelevantTimeout = 0x70; // float
		constexpr auto KeepAliveTime = 0x74; // float
		constexpr auto InitialConnectTimeout = 0x78; // float
		constexpr auto ConnectionTimeout = 0x7c; // float
		constexpr auto TimeoutMultiplierForUnoptimizedBuilds = 0x80; // float
		constexpr auto bNoTimeouts = 0x84; // bool
		constexpr auto bNeverApplyNetworkEmulationSettings = 0x85; // bool
		constexpr auto ServerConnection = 0x88; // UNetConnection*
		constexpr auto ClientConnections = 0x90; // TArray<UNetConnection*>
		constexpr auto RecentlyDisconnectedTrackingTime = 0x100; // int32_t
		constexpr auto World = 0x140; // UWorld*
		constexpr auto WorldPackage = 0x148; // UPackage*
		constexpr auto NetConnectionClass = 0x170; // UObject*
		constexpr auto ReplicationDriverClass = 0x178; // UObject*
		constexpr auto NetDriverName = 0x190; // FName
		constexpr auto ChannelDefinitions = 0x198; // TArray<FChannelDefinition>
		constexpr auto ChannelDefinitionMap = 0x1a8; // TMap<FName, FChannelDefinition>
		constexpr auto ActorChannelPool = 0x1f8; // TArray<UChannel*>
		constexpr auto Time = 0x210; // float
		constexpr auto ReplicationDriver = 0x6e8; // UReplicationDriver*
	}

	namespace n_UParticleModuleAccelerationOverLifetime {
		constexpr auto AccelOverLife = 0x38; // FRawDistributionVector
	}

	namespace n_UBravohotelNetSyncComponent {
		constexpr auto IsParentsSync = 0x230; // bool
		constexpr auto IsSimulatePhysics = 0x231; // bool
		constexpr auto IsCollisionEnabled = 0x232; // bool
		constexpr auto IsEverTick = 0x233; // bool
	}

	namespace n_ABP-HeartBeatSensorEffect_C {
		constexpr auto UberGraphFrame = 0x318; // FPointerToUberGraphFrame
		constexpr auto Widget = 0x320; // UWidgetComponent*
		constexpr auto DefaultSceneRoot = 0x328; // USceneComponent*
		constexpr auto TargetCharacter = 0x330; // ABravoHotelCharacter*
		constexpr auto LoudnessCurve = 0x338; // UCurveFloat*
		constexpr auto HeartBeatSensorLength = 0x340; // float
		constexpr auto TagetGroundState = 0x344; // ECharacterGroundState
		constexpr auto IsFiring = 0x345; // bool
		constexpr auto CurrentWeapon = 0x348; // ABravoHotelRangedWeapon*
		constexpr auto SingleTimerEvent = 0x350; // FTimerHandle
		constexpr auto IsSingleFiring = 0x358; // bool
	}

	namespace n_UDestructibleComponent {
		constexpr auto bFractureEffectOverride = 0x6f0; // char : 1
		constexpr auto FractureEffects = 0x6f8; // TArray<FFractureEffect>
		constexpr auto bEnableHardSleeping = 0x708; // bool
		constexpr auto LargeChunkThreshold = 0x70c; // float
		constexpr auto OnComponentFracture = 0x720; // FMulticastInlineDelegate
		constexpr auto OnFractureEffectSpawned = 0x730; // FMulticastInlineDelegate
	}

	namespace n_UAkLinuxInitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettingsWithSampleRate
		constexpr auto CommunicationSettings = 0x90; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xb8; // FAkAdvancedInitializationSettingsWithMultiCoreRendering
	}

	namespace n_UUW-MatchEnd_Ranking_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto FadeIn3 = 0x250; // UWidgetAnimation*
		constexpr auto FadeIn2 = 0x258; // UWidgetAnimation*
		constexpr auto RankDown = 0x260; // UWidgetAnimation*
		constexpr auto RankUp = 0x268; // UWidgetAnimation*
		constexpr auto FadeOut = 0x270; // UWidgetAnimation*
		constexpr auto FadeIn = 0x278; // UWidgetAnimation*
		constexpr auto Button_DeathCam = 0x280; // UButton*
		constexpr auto Button_Exit = 0x288; // UButton*
		constexpr auto Button_Report = 0x290; // UButton*
		constexpr auto Button_Spectate = 0x298; // UButton*
		constexpr auto Image = 0x2a0; // UImage*
		constexpr auto Image_2 = 0x2a8; // UImage*
		constexpr auto Image_3 = 0x2b0; // UImage*
		constexpr auto Image_4 = 0x2b8; // UImage*
		constexpr auto Image_5 = 0x2c0; // UImage*
		constexpr auto Image_6 = 0x2c8; // UImage*
		constexpr auto Image_7 = 0x2d0; // UImage*
		constexpr auto Image_8 = 0x2d8; // UImage*
		constexpr auto Image_135 = 0x2e0; // UImage*
		constexpr auto Image_149 = 0x2e8; // UImage*
		constexpr auto Image_239 = 0x2f0; // UImage*
		constexpr auto Image_314 = 0x2f8; // UImage*
		constexpr auto Image_377 = 0x300; // UImage*
		constexpr auto Image_444 = 0x308; // UImage*
		constexpr auto Image_477 = 0x310; // UImage*
		constexpr auto Image_518 = 0x318; // UImage*
		constexpr auto Image_531 = 0x320; // UImage*
		constexpr auto Image_745 = 0x328; // UImage*
		constexpr auto Image_992 = 0x330; // UImage*
		constexpr auto Image_1373 = 0x338; // UImage*
		constexpr auto Image_1459 = 0x340; // UImage*
		constexpr auto Image_1506 = 0x348; // UImage*
		constexpr auto Image_1508 = 0x350; // UImage*
		constexpr auto Image_1925 = 0x358; // UImage*
		constexpr auto Image_NextTireIcon = 0x360; // UImage*
		constexpr auto Light_01 = 0x368; // UImage*
		constexpr auto Light_02 = 0x370; // UImage*
		constexpr auto Light_03 = 0x378; // UImage*
		constexpr auto Light_04 = 0x380; // UImage*
		constexpr auto Light_05 = 0x388; // UImage*
		constexpr auto Light_06 = 0x390; // UImage*
		constexpr auto Light_07 = 0x398; // UImage*
		constexpr auto Light_08 = 0x3a0; // UImage*
		constexpr auto Overlay_Rank = 0x3a8; // UOverlay*
		constexpr auto Overlay_Report = 0x3b0; // UOverlay*
		constexpr auto Overlay_Spectate = 0x3b8; // UOverlay*
		constexpr auto ProgressBar_Current = 0x3c0; // UProgressBar*
		constexpr auto ProgressBar_Down = 0x3c8; // UProgressBar*
		constexpr auto ProgressBar_Up = 0x3d0; // UProgressBar*
		constexpr auto ScrollBox_GoldList = 0x3d8; // UScrollBox*
		constexpr auto ScrollBox_ItemList = 0x3e0; // UScrollBox*
		constexpr auto SizeBox_8 = 0x3e8; // USizeBox*
		constexpr auto Spacer_6018 = 0x3f0; // USpacer*
		constexpr auto Spacer_6217 = 0x3f8; // USpacer*
		constexpr auto Spacer_Center = 0x400; // USpacer*
		constexpr auto T_RemainTime = 0x408; // UTextBlock*
		constexpr auto team_kill = 0x410; // UCanvasPanel*
		constexpr auto Team_Revives = 0x418; // UCanvasPanel*
		constexpr auto Text_Report = 0x420; // UTextBlock*
		constexpr auto TextBlock_1425 = 0x428; // UTextBlock*
		constexpr auto TextBlock_CurrentRP = 0x430; // UTextBlock*
		constexpr auto TextBlock_ItemCount = 0x438; // UTextBlock*
		constexpr auto TextBlock_Kill = 0x440; // UTextBlock*
		constexpr auto TextBlock_MatchRP = 0x448; // UTextBlock*
		constexpr auto TextBlock_NextRP = 0x450; // UTextBlock*
		constexpr auto TextBlock_Rank = 0x458; // UTextBlock*
		constexpr auto TextBlock_Resuscitates = 0x460; // UTextBlock*
		constexpr auto TextBlock_Title = 0x468; // UTextBlock*
		constexpr auto TextBlock_TotalGold = 0x470; // UTextBlock*
		constexpr auto TextBlock_TotalTeamCount = 0x478; // UTextBlock*
		constexpr auto UW-MatchEnd_RewardSlot = 0x480; // UUW-MatchEnd_RewardSlot_C*
		constexpr auto UW-MatchEnd_RewardSlot_C = 0x488; // UUW-MatchEnd_RewardSlot_C*
		constexpr auto UW-MatchEnd_RewardSlot_C_1 = 0x490; // UUW-MatchEnd_RewardSlot_C*
		constexpr auto UW-MatchEnd_RewardSlot_C_2 = 0x498; // UUW-MatchEnd_RewardSlot_C*
		constexpr auto UW-RewardGoldSlot = 0x4a0; // UUW-RewardGoldSlot_C*
		constexpr auto VerticalBox_188 = 0x4a8; // UVerticalBox*
		constexpr auto FinalResultData = 0x4b0; // FMatchEndFinalResult
		constexpr auto PlayerState = 0x4b8; // ABravoHotelPlayerState*
		constexpr auto Timehandle_Rank = 0x4c0; // FTimerHandle
		constexpr auto PlayerOriRP = 0x4c8; // int32_t
		constexpr auto TargetRP = 0x4cc; // int32_t
		constexpr auto CurrentRP = 0x4d0; // int32_t
		constexpr auto NextTireRP = 0x4d4; // int32_t
		constexpr auto Increase = 0x4d8; // bool
		constexpr auto CurrentTierID = 0x4dc; // int32_t
		constexpr auto bMaxPrograssbar = 0x4e0; // bool
		constexpr auto MatchEndWidgetRef = 0x4e8; // UUW-MatchEndWidget_C*
		constexpr auto RandomGold = 0x4f0; // int32_t
		constexpr auto GoldHandle = 0x4f8; // FTimerHandle
		constexpr auto IsWinningCam = 0x500; // bool
		constexpr auto GainGoldValue = 0x504; // int32_t
		constexpr auto GainGoldHandle = 0x508; // FTimerHandle
		constexpr auto StartSound = 0x510; // FAudioPlayingHandle
	}

	namespace n_UPhysicsAsset {
		constexpr auto BoundsBodies = 0x30; // TArray<int32_t>
		constexpr auto SkeletalBodySetups = 0x40; // TArray<USkeletalBodySetup*>
		constexpr auto ConstraintSetup = 0x50; // TArray<UPhysicsConstraintTemplate*>
		constexpr auto SolverIterations = 0x60; // FSolverIterations
		constexpr auto bNotForDedicatedServer = 0x78; // char : 1
		constexpr auto ThumbnailInfo = 0x120; // UThumbnailInfo*
		constexpr auto BodySetup = 0x128; // TArray<UBodySetup*>
	}

	namespace n_UWBP_SPS_SelectionIcon_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto IconImage = 0x250; // UImage*
		constexpr auto Hovered = 0x258; // FMulticastInlineDelegate
		constexpr auto Unhovered = 0x268; // FMulticastInlineDelegate
		constexpr auto Pressed = 0x278; // FMulticastInlineDelegate
		constexpr auto SmartPingComponent = 0x288; // USmartPingSystem_C*
		constexpr auto Index = 0x290; // int32_t
		constexpr auto TintColorToUse = 0x294; // FLinearColor
		constexpr auto Found Setting = 0x2a4; // bool
		constexpr auto Settings = 0x2a8; // FBravoHotelSmartPingIconSettings
		constexpr auto TableID = 0x360; // FName
	}

	namespace n_UUW-HUDMessageWidget_C {
		constexpr auto UberGraphFrame = 0x258; // FPointerToUberGraphFrame
		constexpr auto Anim_9WarningMessage = 0x260; // UWidgetAnimation*
		constexpr auto Anim_10SupplyMessage = 0x268; // UWidgetAnimation*
		constexpr auto Anim_8LevelUpMessage = 0x270; // UWidgetAnimation*
		constexpr auto Anim_4GameStartMessage = 0x278; // UWidgetAnimation*
		constexpr auto Anim_27Revival = 0x280; // UWidgetAnimation*
		constexpr auto Anim_TeamKillWarning = 0x288; // UWidgetAnimation*
		constexpr auto 0BlueZoneDesc = 0x290; // UCanvasPanel*
		constexpr auto 10SupplyMessage = 0x298; // UCanvasPanel*
		constexpr auto 11BroadcastMessage = 0x2a0; // UCanvasPanel*
		constexpr auto 12TeamKillWarning = 0x2a8; // UCanvasPanel*
		constexpr auto 13ActionDescription = 0x2b0; // UCanvasPanel*
		constexpr auto 14Action = 0x2b8; // UCanvasPanel*
		constexpr auto 15CastingMessage = 0x2c0; // UCanvasPanel*
		constexpr auto 16CastingCount = 0x2c8; // UCanvasPanel*
		constexpr auto 17CastingCancelInfo = 0x2d0; // UCanvasPanel*
		constexpr auto 18ActionMessage = 0x2d8; // UCanvasPanel*
		constexpr auto 19CoreInfo = 0x2e0; // UCanvasPanel*
		constexpr auto 1BlueZoneName = 0x2e8; // UCanvasPanel*
		constexpr auto 20ZeroingDistance = 0x2f0; // UCanvasPanel*
		constexpr auto 21PlayerReportInfo = 0x2f8; // UCanvasPanel*
		constexpr auto 22SpectatorCount = 0x300; // UCanvasPanel*
		constexpr auto 23PlayerInfo = 0x308; // UCanvasPanel*
		constexpr auto 24RoundOverInfo = 0x310; // UCanvasPanel*
		constexpr auto 25RoundOver = 0x318; // UCanvasPanel*
		constexpr auto 26GuideWidget = 0x320; // UCanvasPanel*
		constexpr auto 27Revival = 0x328; // UCanvasPanel*
		constexpr auto 28RequestMessageInfo_2 = 0x330; // UCanvasPanel*
		constexpr auto 29EndResuscitated = 0x338; // UCanvasPanel*
		constexpr auto 2GameCountDown = 0x340; // UCanvasPanel*
		constexpr auto 30ItemCancelMessage = 0x348; // UCanvasPanel*
		constexpr auto 3GameCountDownNum = 0x350; // UCanvasPanel*
		constexpr auto 4GameStartMessage = 0x358; // UCanvasPanel*
		constexpr auto 5ChangeClassInfo = 0x360; // UCanvasPanel*
		constexpr auto 6KillMessage = 0x368; // UCanvasPanel*
		constexpr auto 7KillCount = 0x370; // UCanvasPanel*
		constexpr auto 8LevelUpMessage = 0x378; // UCanvasPanel*
		constexpr auto 9WarningMessage = 0x380; // UCanvasPanel*
		constexpr auto HUDList = 0x388; // UCanvasPanel*
		constexpr auto Image = 0x390; // UImage*
		constexpr auto Image_1 = 0x398; // UImage*
		constexpr auto Image_2 = 0x3a0; // UImage*
		constexpr auto Image_4 = 0x3a8; // UImage*
		constexpr auto Image_5 = 0x3b0; // UImage*
		constexpr auto Image_8 = 0x3b8; // UImage*
		constexpr auto Image_248 = 0x3c0; // UImage*
		constexpr auto RichT_ResustingOwnerName = 0x3c8; // URichTextBlock*
		constexpr auto ShowMessage<Red18>Free<> = 0x3d0; // URichTextBlock*
		constexpr auto UW-GuideWidget = 0x3d8; // UUW-GuideWidget_C*
		constexpr auto UW-ListWidget_CoreInfo = 0x3e0; // UUW-ListWidget_C*
		constexpr auto UW-ListWidget_MyKillMessage = 0x3e8; // UUW-ListWidget_C*
		constexpr auto UW-ListWidget_Request = 0x3f0; // UUW-ListWidget_C*
		constexpr auto UW-MyKillCountMessageWidget = 0x3f8; // UUW-MyKillCountMessageWidget_C*
		constexpr auto UW-Timer = 0x400; // UUW-Timer_C*
		constexpr auto LastPriority = 0x408; // TMap<EHUDMessageType, int32_t>
		constexpr auto ShowAnimList = 0x458; // TArray<UPanelWidget*>
		constexpr auto HideAnimList = 0x468; // TArray<UPanelWidget*>
		constexpr auto ShowAnimTime = 0x478; // float
		constexpr auto HideAnimTime = 0x47c; // float
		constexpr auto TimerList = 0x480; // TMap<UPanelWidget*, float>
		constexpr auto TeamKillWarningAnimLoopNum = 0x4d0; // int32_t
		constexpr auto CheatMessage = 0x4d8; // FText
	}

	namespace n_UPointLightComponent {
		constexpr auto bUseInverseSquaredFalloff = 0x390; // char : 1
		constexpr auto LightFalloffExponent = 0x394; // float
		constexpr auto SourceRadius = 0x398; // float
		constexpr auto SoftSourceRadius = 0x39c; // float
		constexpr auto SourceLength = 0x3a0; // float
	}

	namespace n_UUW-BlackMarket_Slot_Preset_C {
		constexpr auto UberGraphFrame = 0x3d8; // FPointerToUberGraphFrame
		constexpr auto BTN-Menu02 = 0x3e0; // UButton*
		constexpr auto BTN-Menu03 = 0x3e8; // UButton*
		constexpr auto CP-SlotInfo = 0x3f0; // UCanvasPanel*
		constexpr auto IMG-BG = 0x3f8; // UImage*
		constexpr auto IMG-BG-Border = 0x400; // UImage*
		constexpr auto IMG-Item = 0x408; // UImage*
		constexpr auto IMG-Mask = 0x410; // UImage*
		constexpr auto IMG-Over = 0x418; // UImage*
		constexpr auto IMG-Over-Border = 0x420; // UImage*
		constexpr auto Menu02 = 0x428; // UOverlay*
		constexpr auto Menu03 = 0x430; // UOverlay*
		constexpr auto Overlay_Mask = 0x438; // UOverlay*
		constexpr auto TXT-ItemDesc = 0x440; // UTextBlock*
		constexpr auto TXT-ItemName = 0x448; // UTextBlock*
		constexpr auto TXT-Menu01 = 0x450; // UTextBlock*
		constexpr auto TXT-Menu02 = 0x458; // UTextBlock*
		constexpr auto TXT-Menu03 = 0x460; // UTextBlock*
	}

	namespace n_UInterpTrackInstFloatMaterialParam {
		constexpr auto MaterialInstances = 0x28; // TArray<UMaterialInstanceDynamic*>
		constexpr auto ResetFloats = 0x38; // TArray<float>
		constexpr auto PrimitiveMaterialRefs = 0x48; // TArray<FPrimitiveMaterialRef>
		constexpr auto InstancedTrack = 0x58; // UInterpTrackFloatMaterialParam*
	}

	namespace n_UMaterialExpressionStaticSwitchParameter {
		constexpr auto A = 0x60; // FExpressionInput
		constexpr auto B = 0x74; // FExpressionInput
	}

	namespace n_UUW-Inventory_WeaponAttachmentSlot_C {
		constexpr auto UberGraphFrame = 0x1358; // FPointerToUberGraphFrame
		constexpr auto Bg = 0x1360; // UImage*
		constexpr auto BGImage = 0x1368; // UImage*
		constexpr auto BorderImage = 0x1370; // UImage*
		constexpr auto EmptyImage = 0x1378; // UImage*
		constexpr auto ItemImage = 0x1380; // UImage*
		constexpr auto OverImage = 0x1388; // UImage*
		constexpr auto SizeBox_1 = 0x1390; // USizeBox*
		constexpr auto WeaponAttachmentType = 0x1398; // EWeaponAttachmentType
		constexpr auto WeaponSlotIndex = 0x139c; // int32_t
		constexpr auto IsHover = 0x13a0; // bool
		constexpr auto WeaponSlotWidget = 0x13a8; // UUW-Inventory_WeaponSlot_C*
		constexpr auto WeaponAttachmentUseType = 0x13b0; // EWeaponAttachmentUseType
		constexpr auto SlotMode = 0x13b4; // int32_t
		constexpr auto HoverWidget = 0x13b8; // UUW-Inventory_ItemSlotHover_C*
	}

	namespace n_UParticleModuleMeshRotation_Seeded {
		constexpr auto RandomSeedInfo = 0x80; // FParticleRandomSeedInfo
	}

	namespace n_USoundNodeDelay {
		constexpr auto DelayMin = 0x48; // float
		constexpr auto DelayMax = 0x4c; // float
	}

	namespace n_ABravoHotelMeleeWeapon {
		constexpr auto MeleeAttack_Stand = 0x1bf0; // TArray<FAnimSlot>
		constexpr auto MeleeAttack_Crouch = 0x1c00; // TArray<FAnimSlot>
		constexpr auto MeleeAttach_Jump = 0x1c10; // FAnimSlot
		constexpr auto Locomotion_Stand_Idle_3P = 0x1c20; // UAnimSequence*
		constexpr auto Locomotion_Crouch_Idle_3P = 0x1c28; // UAnimSequence*
		constexpr auto Locomotion_Prone_Idle_3P = 0x1c30; // UAnimSequence*
		constexpr auto Locomotion_Stand_Idle_1P = 0x1c38; // UAnimSequence*
		constexpr auto Locomotion_Crouch_Idle_1P = 0x1c40; // UAnimSequence*
		constexpr auto Locomotion_Prone_Idle_1P = 0x1c48; // UAnimSequence*
	}

	namespace n_UEndMatchCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_USourceEffectEQPreset {
		constexpr auto Settings = 0x78; // FSourceEffectEQSettings
	}

	namespace n_ABravoHotelProjectileGrenadeFragment {
		constexpr auto ExplosionGroundDecalMaterial = 0x678; // UMaterialInterface*
		constexpr auto ExplosionGroundDecalSize = 0x680; // FVector
		constexpr auto ExplosionGroundDecalComponent = 0x690; // UDecalComponent*
		constexpr auto GroundDecalDynamicMaterial = 0x698; // UMaterialInstanceDynamic*
		constexpr auto FlybyEvent = 0x6a8; // UAkAudioEvent*
		constexpr auto FlybySoundHandle = 0x6b0; // FAudioPlayingHandle
	}

	namespace n_ULayer {
		constexpr auto LayerName = 0x28; // FName
		constexpr auto bIsVisible = 0x30; // char : 1
		constexpr auto ActorStats = 0x38; // TArray<FLayerActorStats>
	}

	namespace n_UMaterialExpressionDDX {
		constexpr auto Value = 0x40; // FExpressionInput
	}

	namespace n_UMaterialExpressionLogarithm2 {
		constexpr auto X = 0x40; // FExpressionInput
	}

	namespace n_UMediaPlayer {
		constexpr auto OnEndReached = 0x28; // FMulticastInlineDelegate
		constexpr auto OnMediaClosed = 0x38; // FMulticastInlineDelegate
		constexpr auto OnMediaOpened = 0x48; // FMulticastInlineDelegate
		constexpr auto OnMediaOpenFailed = 0x58; // FMulticastInlineDelegate
		constexpr auto OnPlaybackResumed = 0x68; // FMulticastInlineDelegate
		constexpr auto OnPlaybackSuspended = 0x78; // FMulticastInlineDelegate
		constexpr auto OnSeekCompleted = 0x88; // FMulticastInlineDelegate
		constexpr auto OnTracksChanged = 0x98; // FMulticastInlineDelegate
		constexpr auto CacheAhead = 0xa8; // FTimespan
		constexpr auto CacheBehind = 0xb0; // FTimespan
		constexpr auto CacheBehindGame = 0xb8; // FTimespan
		constexpr auto NativeAudioOut = 0xc0; // bool
		constexpr auto PlayOnOpen = 0xc1; // bool
		constexpr auto Shuffle = 0xc4; // char : 1
		constexpr auto Loop = 0xc4; // char : 1
		constexpr auto Playlist = 0xc8; // UMediaPlaylist*
		constexpr auto PlaylistIndex = 0xd0; // int32_t
		constexpr auto TimeDelay = 0xd8; // FTimespan
		constexpr auto HorizontalFieldOfView = 0xe0; // float
		constexpr auto VerticalFieldOfView = 0xe4; // float
		constexpr auto ViewRotation = 0xe8; // FRotator
		constexpr auto playerGUID = 0x120; // FGuid
		constexpr auto OwnerWidget = 0x138; // UUserWidget*
	}

	namespace n_USoundSubmixBase {
		constexpr auto ChildSubmixes = 0x28; // TArray<USoundSubmixBase*>
	}

	namespace n_UAkAudioEvent {
		constexpr auto LocalizedPlatformAssetDataMap = 0x50; // TMap<FString, TSoftObjectPtr<UAkAssetPlatformData>>
		constexpr auto RequiredBank = 0xa0; // UAkAudioBank*
		constexpr auto CurrentLocalizedPlatformData = 0xb0; // UAkAssetPlatformData*
		constexpr auto MaxAttenuationRadius = 0xb8; // float
		constexpr auto IsInfinite = 0xbc; // bool
		constexpr auto MinimumDuration = 0xc0; // float
		constexpr auto MaximumDuration = 0xc4; // float
	}

	namespace n_UCheckBoxWidgetStyle {
		constexpr auto CheckBoxStyle = 0x30; // FCheckBoxStyle
	}

	namespace n_ANiagaraActor {
		constexpr auto NiagaraComponent = 0x318; // UNiagaraComponent*
		constexpr auto bDestroyOnSystemFinish = 0x320; // char : 1
	}

	namespace n_UUW-Lobby_WeaponInfo_C {
		constexpr auto Image_273 = 0x248; // UImage*
		constexpr auto UW-Lobby_ItemName = 0x250; // UUW-Lobby_ItemName_C*
		constexpr auto UW-Lobby_WeaponInfo_Stat = 0x258; // UUW-Lobby_WeaponInfo_Stat_C*
	}

	namespace n_UInterpTrackVisibility {
		constexpr auto VisibilityTrack = 0x70; // TArray<FVisibilityTrackKey>
		constexpr auto bFireEventsWhenForwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenJumpingForwards = 0x80; // char : 1
	}

	namespace n_UTireType {
		constexpr auto FrictionScale = 0x30; // float
	}

	namespace n_UVariantSet {
		constexpr auto DisplayText = 0x28; // FText
		constexpr auto bExpanded = 0x58; // bool
		constexpr auto Variants = 0x60; // TArray<UVariant*>
	}

	namespace n_UParticleEmitter {
		constexpr auto EmitterName = 0x28; // FName
		constexpr auto SubUVDataOffset = 0x30; // int32_t
		constexpr auto EmitterRenderMode = 0x34; // EEmitterRenderMode
		constexpr auto SignificanceLevel = 0x35; // EParticleSignificanceLevel
		constexpr auto bUseLegacySpawningBehavior = 0x37; // char : 1
		constexpr auto ConvertedModules = 0x37; // char : 1
		constexpr auto bIsSoloing = 0x37; // char : 1
		constexpr auto bCookedOut = 0x37; // char : 1
		constexpr auto bDisabledLODsKeepEmitterAlive = 0x37; // char : 1
		constexpr auto bDisableWhenInsignficant = 0x38; // char : 1
		constexpr auto LODLevels = 0x40; // TArray<UParticleLODLevel*>
		constexpr auto PeakActiveParticles = 0x50; // int32_t
		constexpr auto InitialAllocationCount = 0x54; // int32_t
		constexpr auto QualityLevelSpawnRateScale = 0x58; // float
		constexpr auto DetailModeBitmask = 0x5c; // uint32_t
	}

	namespace n_USimplygonColorCaster {
		constexpr auto ColorCasterSettings = 0x28; // FColorCasterSettings
	}

	namespace n_UMovieSceneSequencePlayer {
		constexpr auto OnPlay = 0x408; // FMulticastInlineDelegate
		constexpr auto OnPlayReverse = 0x418; // FMulticastInlineDelegate
		constexpr auto OnStop = 0x428; // FMulticastInlineDelegate
		constexpr auto OnPause = 0x438; // FMulticastInlineDelegate
		constexpr auto OnFinished = 0x448; // FMulticastInlineDelegate
		constexpr auto status = 0x458; // EMovieScenePlayerStatus
		constexpr auto bReversePlayback = 0x45c; // char : 1
		constexpr auto Sequence = 0x460; // UMovieSceneSequence*
		constexpr auto StartTime = 0x468; // FFrameNumber
		constexpr auto DurationFrames = 0x46c; // int32_t
		constexpr auto CurrentNumLoops = 0x470; // int32_t
		constexpr auto PlaybackSettings = 0x488; // FMovieSceneSequencePlaybackSettings
		constexpr auto RootTemplateInstance = 0x4a0; // FMovieSceneRootEvaluationTemplateInstance
		constexpr auto NetSyncProps = 0x828; // FMovieSceneSequenceReplProperties
		constexpr auto PlaybackClient = 0x838; // TScriptInterface<IMovieScenePlaybackClient>
	}

	namespace n_UBHReplicatedPlayStat {
		constexpr auto bAlive = 0xc0; // bool
		constexpr auto InOuterArea = 0xc1; // bool
		constexpr auto kills = 0xc2; // uint16_t
		constexpr auto assists = 0xc4; // uint16_t
		constexpr auto Deaths = 0xc6; // uint16_t
		constexpr auto Revives = 0xc8; // uint16_t
		constexpr auto Resuscitates = 0xca; // uint16_t
		constexpr auto CurrentPerkClassLevel = 0xcc; // int32_t
	}

	namespace n_UMovieSceneMediaTrack {
		constexpr auto MediaSections = 0x58; // TArray<UMovieSceneSection*>
	}

	namespace n_UTimelineComponent {
		constexpr auto TheTimeline = 0xb0; // FTimeline
		constexpr auto bIgnoreTimeDilation = 0x148; // char : 1
	}

	namespace n_UMKActorChannelEx {
		constexpr auto SelfActorChannel = 0xa0; // UActorChannel*
	}

	namespace n_UPlayMontageCallbackProxy {
		constexpr auto OnCompleted = 0x28; // FMulticastInlineDelegate
		constexpr auto OnBlendOut = 0x38; // FMulticastInlineDelegate
		constexpr auto OnInterrupted = 0x48; // FMulticastInlineDelegate
		constexpr auto OnNotifyBegin = 0x58; // FMulticastInlineDelegate
		constexpr auto OnNotifyEnd = 0x68; // FMulticastInlineDelegate
	}

	namespace n_USingleClickInputBehavior {
		constexpr auto HitTestOnRelease = 0xc0; // bool
	}

	namespace n_UParticleModuleMeshRotationRateMultiplyLife {
		constexpr auto LifeMultiplier = 0x30; // FRawDistributionVector
	}

	namespace n_UTimeSynchronizationSource {
		constexpr auto bUseForSynchronization = 0x28; // bool
		constexpr auto FrameOffset = 0x2c; // int32_t
	}

	namespace n_UVehicleAnimInstance {
		constexpr auto WheeledVehicleMovementComponent = 0x990; // UWheeledVehicleMovementComponent*
	}

	namespace n_UParticleModuleLocationEmitterDirect {
		constexpr auto EmitterName = 0x30; // FName
	}

	namespace n_UMovieSceneNiagaraVectorParameterTrack {
		constexpr auto ChannelsUsed = 0x90; // int32_t
	}

	namespace n_UUW-MatchEnd_GoldList_C {
		constexpr auto TextBlock_Gold = 0x248; // UTextBlock*
		constexpr auto TextBlock_Title = 0x250; // UTextBlock*
		constexpr auto ColorType1 = 0x258; // FSlateColor
		constexpr auto ColorType2 = 0x280; // FSlateColor
	}

	namespace n_UVectorFieldStatic {
		constexpr auto SizeX = 0x48; // int32_t
		constexpr auto SizeY = 0x4c; // int32_t
		constexpr auto SizeZ = 0x50; // int32_t
		constexpr auto bAllowCPUAccess = 0x54; // bool
		constexpr auto CPUData = 0x80; // TArray<FVector4>
	}

	namespace n_UMultiLineEditableText {
		constexpr auto Text = 0x128; // FText
		constexpr auto HintText = 0x140; // FText
		constexpr auto HintTextDelegate = 0x158; // FDelegate
		constexpr auto WidgetStyle = 0x168; // FTextBlockStyle
		constexpr auto bIsReadOnly = 0x3d0; // bool
		constexpr auto Font = 0x3d8; // FSlateFontInfo
		constexpr auto SelectAllTextWhenFocused = 0x428; // bool
		constexpr auto ClearTextSelectionOnFocusLoss = 0x429; // bool
		constexpr auto RevertTextOnEscape = 0x42a; // bool
		constexpr auto ClearKeyboardFocusOnCommit = 0x42b; // bool
		constexpr auto AllowContextMenu = 0x42c; // bool
		constexpr auto VirtualKeyboardOptions = 0x42d; // FVirtualKeyboardOptions
		constexpr auto VirtualKeyboardDismissAction = 0x42e; // EVirtualKeyboardDismissAction
		constexpr auto OnTextChanged = 0x430; // FMulticastInlineDelegate
		constexpr auto OnTextCommitted = 0x440; // FMulticastInlineDelegate
	}

	namespace n_UNavAreaMeta_SwitchByAgent {
		constexpr auto Agent0Area = 0x48; // UNavArea*
		constexpr auto Agent1Area = 0x50; // UNavArea*
		constexpr auto Agent2Area = 0x58; // UNavArea*
		constexpr auto Agent3Area = 0x60; // UNavArea*
		constexpr auto Agent4Area = 0x68; // UNavArea*
		constexpr auto Agent5Area = 0x70; // UNavArea*
		constexpr auto Agent6Area = 0x78; // UNavArea*
		constexpr auto Agent7Area = 0x80; // UNavArea*
		constexpr auto Agent8Area = 0x88; // UNavArea*
		constexpr auto Agent9Area = 0x90; // UNavArea*
		constexpr auto Agent10Area = 0x98; // UNavArea*
		constexpr auto Agent11Area = 0xa0; // UNavArea*
		constexpr auto Agent12Area = 0xa8; // UNavArea*
		constexpr auto Agent13Area = 0xb0; // UNavArea*
		constexpr auto Agent14Area = 0xb8; // UNavArea*
		constexpr auto Agent15Area = 0xc0; // UNavArea*
	}

	namespace n_ULandscapeMaterialInstanceConstant {
		constexpr auto TextureStreamingInfo = 0x410; // TArray<FLandscapeMaterialTextureStreamingInfo>
		constexpr auto bIsLayerThumbnail = 0x420; // char : 1
		constexpr auto bDisableTessellation = 0x420; // char : 1
		constexpr auto bMobile = 0x420; // char : 1
		constexpr auto bEditorToolUsage = 0x420; // char : 1
	}

	namespace n_UUW-Inventory_ItemInfoTooltip_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Image_94 = 0x250; // UImage*
		constexpr auto Image_224 = 0x258; // UImage*
		constexpr auto RichTextBlock_321 = 0x260; // URichTextBlock*
		constexpr auto InventoryRef = 0x268; // UUW-InventoryWidget_C*
	}

	namespace n_UMenuAnchor {
		constexpr auto MenuClass = 0x120; // UUserWidget*
		constexpr auto OnGetMenuContentEvent = 0x128; // FDelegate
		constexpr auto Placement = 0x138; // EMenuPlacement
		constexpr auto bFitInWindow = 0x139; // bool
		constexpr auto ShouldDeferPaintingAfterWindowContent = 0x13a; // bool
		constexpr auto UseApplicationMenuStack = 0x13b; // bool
		constexpr auto OnMenuOpenChanged = 0x140; // FMulticastInlineDelegate
	}

	namespace n_UNiagaraDataInterfaceVector2DCurve {
		constexpr auto XCurve = 0x58; // FRichCurve
		constexpr auto YCurve = 0xd8; // FRichCurve
	}

	namespace n_USubstanceGraphInstance {
		constexpr auto PackageURL = 0x38; // FString
		constexpr auto ParentFactory = 0x48; // USubstanceInstanceFactory*
		constexpr auto ImageSources = 0x50; // TMap<uint32_t, UTexture2D*>
		constexpr auto CreatedMaterial = 0xa0; // UMaterial*
		constexpr auto ConstantCreatedMaterial = 0xa8; // UMaterialInstanceConstant*
		constexpr auto DynamicCreatedMaterial = 0xb0; // UMaterialInstanceDynamic*
		constexpr auto OutputTextureLinkData = 0xb8; // TMap<int32_t, FGuid>
		constexpr auto OutputInstances = 0x108; // TMap<uint32_t, USubstanceOutputData*>
		constexpr auto bIsFrozen = 0x158; // bool
	}

	namespace n_UWidgetAnimationPlayCallbackProxy {
		constexpr auto Finished = 0x28; // FMulticastInlineDelegate
	}

	namespace n_UInterpTrackMove {
		constexpr auto PosTrack = 0x70; // FInterpCurveVector
		constexpr auto EulerTrack = 0x88; // FInterpCurveVector
		constexpr auto LookupTrack = 0xa0; // FInterpLookupTrack
		constexpr auto LookAtGroupName = 0xb0; // FName
		constexpr auto LinCurveTension = 0xb8; // float
		constexpr auto AngCurveTension = 0xbc; // float
		constexpr auto bUseQuatInterpolation = 0xc0; // char : 1
		constexpr auto bShowArrowAtKeys = 0xc0; // char : 1
		constexpr auto bDisableMovement = 0xc0; // char : 1
		constexpr auto bShowTranslationOnCurveEd = 0xc0; // char : 1
		constexpr auto bShowRotationOnCurveEd = 0xc0; // char : 1
		constexpr auto bHide3DTrack = 0xc0; // char : 1
		constexpr auto RotMode = 0xc4; // EInterpTrackMoveRotMode
	}

	namespace n_UMaterialExpressionAbs {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_ABravoHotelPlayerState {
		constexpr auto bCriticalTime = 0x420; // bool
		constexpr auto MatchingTeamID = 0x428; // FString
		constexpr auto MatchingTeamIdHash = 0x438; // uint32_t
		constexpr auto MatchableCountByDS = 0x43c; // char
		constexpr auto MaxTeamPlayerCount = 0x43d; // char
		constexpr auto PlayerSessionId = 0x440; // FString
		constexpr auto LoginMemberIndex = 0x460; // int32_t
		constexpr auto TeamPlayers = 0x468; // TArray<ABravoHotelPlayerState*>
		constexpr auto ReplicatedPlayerInfo = 0x5a0; // UBHReplicatedPlayerInfo*
		constexpr auto ReplicatedPlayStat = 0x5a8; // UBHReplicatedPlayStat*
		constexpr auto ReplicatedAppearanceInfo = 0x5b0; // UBHReplicatedAppearanceInfo*
		constexpr auto OnChangePlayerState = 0x5b8; // FMulticastInlineDelegate
		constexpr auto OwnerCharacter = 0x5d0; // ABravoHotelCharacter*
		constexpr auto InNmPerkVechicleInfo = 0x5d8; // FPerkVechicleInfo
		constexpr auto SubState = 0x600; // ABravoHotelPlayerSubState*
		constexpr auto DummyInfo = 0x608; // FDummyInfo
		constexpr auto GamePlayStatistics = 0x660; // UBravoHotelGamePlayStatistics*
		constexpr auto CurrentState = 0x669; // EPlayerState
		constexpr auto bIsTalking = 0x682; // bool
		constexpr auto PersonalSupplyBoxAdditionalItemList = 0x688; // TArray<FInventoryItemInfo>
		constexpr auto MaterialItemPingIndex = 0x754; // int32_t
		constexpr auto MaterialPingList = 0x758; // TMap<int32_t, FMaterialItemPingInfo>
		constexpr auto LocalPingIndex = 0x7a8; // int32_t
		constexpr auto LocalPingList = 0x7b0; // TMap<int32_t, FBravoHotelLocalPingInfo>
		constexpr auto ExpertWeaponPing = 0x800; // FExpertWeaponPingInfo
	}

	namespace n_UMovieSceneBuiltInEasingFunction {
		constexpr auto Type = 0x30; // EMovieSceneBuiltInEasing
	}

	namespace n_UBravoHotelCameraComponent {
		constexpr auto ResetCameraMovementFOVThreshold = 0x968; // float
	}

	namespace n_UMovieSceneColorSection {
		constexpr auto RedCurve = 0xe0; // FMovieSceneFloatChannel
		constexpr auto GreenCurve = 0x180; // FMovieSceneFloatChannel
		constexpr auto BlueCurve = 0x220; // FMovieSceneFloatChannel
		constexpr auto AlphaCurve = 0x2c0; // FMovieSceneFloatChannel
	}

	namespace n_UHapticFeedbackEffect_SoundWave {
		constexpr auto SoundWave = 0x28; // USoundWave*
	}

	namespace n_UPlanePositionGizmo {
		constexpr auto AxisSource = 0x48; // TScriptInterface<IGizmoAxisSource>
		constexpr auto ParameterSource = 0x58; // TScriptInterface<IGizmoVec2ParameterSource>
		constexpr auto HitTarget = 0x68; // TScriptInterface<IGizmoClickTarget>
		constexpr auto StateTarget = 0x78; // TScriptInterface<IGizmoStateTarget>
		constexpr auto bEnableSignedAxis = 0x88; // bool
		constexpr auto bFlipX = 0x89; // bool
		constexpr auto bFlipY = 0x8a; // bool
		constexpr auto bInInteraction = 0x8b; // bool
		constexpr auto InteractionOrigin = 0x8c; // FVector
		constexpr auto InteractionNormal = 0x98; // FVector
		constexpr auto InteractionAxisX = 0xa4; // FVector
		constexpr auto InteractionAxisY = 0xb0; // FVector
		constexpr auto InteractionStartPoint = 0xbc; // FVector
		constexpr auto InteractionCurPoint = 0xc8; // FVector
		constexpr auto InteractionStartParameter = 0xd4; // FVector2D
		constexpr auto InteractionCurParameter = 0xdc; // FVector2D
		constexpr auto ParameterSigns = 0xe4; // FVector2D
	}

	namespace n_UUW-Inventory_KeepedSlot_C {
		constexpr auto UberGraphFrame = 0x1358; // FPointerToUberGraphFrame
		constexpr auto Abillity = 0x1360; // USizeBox*
		constexpr auto AbillityBG = 0x1368; // UImage*
		constexpr auto AbillityValue = 0x1370; // UTextBlock*
		constexpr auto Bg = 0x1378; // UImage*
		constexpr auto BorderBG = 0x1380; // UImage*
		constexpr auto ChoiceBG = 0x1388; // UImage*
		constexpr auto DefenseBG = 0x1390; // UImage*
		constexpr auto DurabilityBar = 0x1398; // UProgressBar*
		constexpr auto EmptyBG = 0x13a0; // UImage*
		constexpr auto ItemImage = 0x13a8; // UImage*
		constexpr auto OverBG = 0x13b0; // UImage*
		constexpr auto WearableItemType = 0x13b8; // EWearableItemType
		constexpr auto IsDefense = 0x13b9; // bool
		constexpr auto HoverWidget = 0x13c0; // UUW-Inventory_ItemSlotHover_C*
		constexpr auto HoverOwnerWidget = 0x13c8; // UUserWidget*
		constexpr auto Index = 0x13d0; // int32_t
	}

	namespace n_UPawnSensingComponent {
		constexpr auto HearingThreshold = 0xb0; // float
		constexpr auto LOSHearingThreshold = 0xb4; // float
		constexpr auto SightRadius = 0xb8; // float
		constexpr auto SensingInterval = 0xbc; // float
		constexpr auto HearingMaxSoundAge = 0xc0; // float
		constexpr auto bEnableSensingUpdates = 0xc4; // char : 1
		constexpr auto bOnlySensePlayers = 0xc4; // char : 1
		constexpr auto bSeePawns = 0xc4; // char : 1
		constexpr auto bHearNoises = 0xc4; // char : 1
		constexpr auto OnSeePawn = 0xd0; // FMulticastInlineDelegate
		constexpr auto OnHearNoise = 0xe0; // FMulticastInlineDelegate
		constexpr auto PeripheralVisionAngle = 0xf0; // float
		constexpr auto PeripheralVisionCosine = 0xf4; // float
	}

	namespace n_UAnimSharingAdditiveInstance {
		constexpr auto baseComponent = 0x268; // TWeakObjectPtr<USkeletalMeshComponent>
		constexpr auto AdditiveAnimation = 0x270; // TWeakObjectPtr<UAnimSequence>
		constexpr auto ALPHA = 0x278; // float
		constexpr auto bStateBool = 0x27c; // bool
	}

	namespace n_UAkInitBankAssetData {
		constexpr auto PluginInfos = 0x70; // TArray<FAkPluginInfo>
	}

	namespace n_ABravoHotelShellCasing {
		constexpr auto StaticMeshComponent = 0x318; // UStaticMeshComponent*
		constexpr auto ProjectileType = 0x320; // EProjectileType
		constexpr auto HitSurfaceEvent = 0x328; // UAkAudioEvent*
		constexpr auto CurrentSoundPlayCount = 0x330; // int8_t
		constexpr auto MaxSoundPlayCount = 0x331; // int8_t
	}

	namespace n_UMasterAudioSubmixCaptureProtocol {
		constexpr auto Filename = 0x58; // FString
	}

	namespace n_UWB_ClassicToolTipDesign_C {
		constexpr auto UberGraphFrame = 0x268; // FPointerToUberGraphFrame
		constexpr auto ToolTipVerticalList = 0x270; // UVerticalBox*
	}

	namespace n_UAITask {
		constexpr auto OwnerController = 0x68; // AAIController*
	}

	namespace n_UUW-SupplyToolTip_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto GoldImage = 0x250; // UImage*
		constexpr auto Image_362 = 0x258; // UImage*
		constexpr auto Message = 0x260; // UTextBlock*
		constexpr auto PriceValue = 0x268; // UTextBlock*
		constexpr auto SizeBox_2 = 0x270; // USizeBox*
	}

	namespace n_UWheeledVehicleMovementComponent {
		constexpr auto bDeprecatedSpringOffsetMode = 0x140; // char : 1
		constexpr auto bReverseAsBrake = 0x140; // char : 1
		constexpr auto bUseRVOAvoidance = 0x140; // char : 1
		constexpr auto bRawHandbrakeInput = 0x140; // char : 1
		constexpr auto bRawGearUpInput = 0x140; // char : 1
		constexpr auto bRawGearDownInput = 0x140; // char : 1
		constexpr auto bWasAvoidanceUpdated = 0x144; // char : 1
		constexpr auto Mass = 0x148; // float
		constexpr auto WheelSetups = 0x150; // TArray<FWheelSetup>
		constexpr auto DragCoefficient = 0x160; // float
		constexpr auto ChassisWidth = 0x164; // float
		constexpr auto ChassisHeight = 0x168; // float
		constexpr auto DragArea = 0x16c; // float
		constexpr auto EstimatedMaxEngineSpeed = 0x170; // float
		constexpr auto MaxEngineRPM = 0x174; // float
		constexpr auto DebugDragMagnitude = 0x178; // float
		constexpr auto InertiaTensorScale = 0x17c; // FVector
		constexpr auto MinNormalizedTireLoad = 0x188; // float
		constexpr auto MinNormalizedTireLoadFiltered = 0x18c; // float
		constexpr auto MaxNormalizedTireLoad = 0x190; // float
		constexpr auto MaxNormalizedTireLoadFiltered = 0x194; // float
		constexpr auto ThresholdLongitudinalSpeed = 0x198; // float
		constexpr auto LowForwardSpeedSubStepCount = 0x19c; // int32_t
		constexpr auto HighForwardSpeedSubStepCount = 0x1a0; // int32_t
		constexpr auto Wheels = 0x1a8; // TArray<UVehicleWheel*>
		constexpr auto WheelsCollisionChannel = 0x1b8; // ECollisionChannel
		constexpr auto RVOAvoidanceRadius = 0x1d0; // float
		constexpr auto RVOAvoidanceHeight = 0x1d4; // float
		constexpr auto AvoidanceConsiderationRadius = 0x1d8; // float
		constexpr auto RVOSteeringStep = 0x1dc; // float
		constexpr auto RVOThrottleStep = 0x1e0; // float
		constexpr auto AvoidanceUID = 0x1e4; // int32_t
		constexpr auto AvoidanceGroup = 0x1e8; // FNavAvoidanceMask
		constexpr auto GroupsToAvoid = 0x1ec; // FNavAvoidanceMask
		constexpr auto GroupsToIgnore = 0x1f0; // FNavAvoidanceMask
		constexpr auto AvoidanceWeight = 0x1f4; // float
		constexpr auto PendingLaunchVelocity = 0x1f8; // FVector
		constexpr auto ReplicatedState = 0x204; // FReplicatedVehicleState
		constexpr auto RawSteeringInput = 0x21c; // float
		constexpr auto RawThrottleInput = 0x220; // float
		constexpr auto RawBrakeInput = 0x224; // float
		constexpr auto SteeringInput = 0x228; // float
		constexpr auto ThrottleInput = 0x22c; // float
		constexpr auto BrakeInput = 0x230; // float
		constexpr auto HandbrakeInput = 0x234; // float
		constexpr auto IdleBrakeInput = 0x238; // float
		constexpr auto StopThreshold = 0x23c; // float
		constexpr auto WrongDirectionThreshold = 0x240; // float
		constexpr auto ThrottleInputRate = 0x244; // FVehicleInputRate
		constexpr auto BrakeInputRate = 0x24c; // FVehicleInputRate
		constexpr auto HandbrakeInputRate = 0x254; // FVehicleInputRate
		constexpr auto SteeringInputRate = 0x25c; // FVehicleInputRate
		constexpr auto OverrideController = 0x288; // AController*
	}

	namespace n_UInterpTrackInstFloatParticleParam {
		constexpr auto ResetFloat = 0x28; // float
	}

	namespace n_USkeletalMeshComponent {
		constexpr auto AnimBlueprintGeneratedClass = 0x6f0; // UObject*
		constexpr auto AnimClass = 0x6f8; // UAnimInstance*
		constexpr auto AnimScriptInstance = 0x700; // UAnimInstance*
		constexpr auto PostprocessAnimInstance = 0x708; // UAnimInstance*
		constexpr auto AnimationData = 0x710; // FSingleAnimationPlayData
		constexpr auto RootBoneTranslation = 0x738; // FVector
		constexpr auto LineCheckBoundsScale = 0x744; // FVector
		constexpr auto LinkedInstances = 0x770; // TArray<UAnimInstance*>
		constexpr auto CachedBoneSpaceTransforms = 0x780; // TArray<FTransform>
		constexpr auto CachedComponentSpaceTransforms = 0x790; // TArray<FTransform>
		constexpr auto GlobalAnimRateScale = 0x7c0; // float
		constexpr auto KinematicBonesUpdateType = 0x7c4; // EKinematicBonesUpdateToPhysics
		constexpr auto PhysicsTransformUpdateMode = 0x7c5; // EPhysicsTransformUpdateMode
		constexpr auto AnimationMode = 0x7cd; // EAnimationMode
		constexpr auto bDisablePostProcessBlueprint = 0x7cf; // char : 1
		constexpr auto bUpdateOverlapsOnAnimationFinalize = 0x7cf; // char : 1
		constexpr auto bHasValidBodies = 0x7cf; // char : 1
		constexpr auto bBlendPhysics = 0x7cf; // char : 1
		constexpr auto bEnablePhysicsOnDedicatedServer = 0x7cf; // char : 1
		constexpr auto bUpdateJointsFromAnimation = 0x7d0; // char : 1
		constexpr auto bDisableClothSimulation = 0x7d0; // char : 1
		constexpr auto bDisableRigidBodyAnimNode = 0x7d0; // char : 1
		constexpr auto bAllowAnimCurveEvaluation = 0x7d0; // char : 1
		constexpr auto bDisableAnimCurves = 0x7d0; // char : 1
		constexpr auto bCollideWithEnvironment = 0x7d1; // char : 1
		constexpr auto bCollideWithAttachedChildren = 0x7d1; // char : 1
		constexpr auto bLocalSpaceSimulation = 0x7d1; // char : 1
		constexpr auto bResetAfterTeleport = 0x7d1; // char : 1
		constexpr auto bDeferKinematicBoneUpdate = 0x7d1; // char : 1
		constexpr auto bNoSkeletonUpdate = 0x7d1; // char : 1
		constexpr auto bPauseAnims = 0x7d1; // char : 1
		constexpr auto bUseRefPoseOnInitAnim = 0x7d2; // char : 1
		constexpr auto bEnablePerPolyCollision = 0x7d2; // char : 1
		constexpr auto bForceRefpose = 0x7d2; // char : 1
		constexpr auto bOnlyAllowAutonomousTickPose = 0x7d2; // char : 1
		constexpr auto bIsAutonomousTickPose = 0x7d2; // char : 1
		constexpr auto bOldForceRefPose = 0x7d2; // char : 1
		constexpr auto bShowPrePhysBones = 0x7d2; // char : 1
		constexpr auto bRequiredBonesUpToDate = 0x7d2; // char : 1
		constexpr auto bAnimTreeInitialised = 0x7d3; // char : 1
		constexpr auto bIncludeComponentLocationIntoBounds = 0x7d3; // char : 1
		constexpr auto bEnableLineCheckWithBounds = 0x7d3; // char : 1
		constexpr auto bUseBendingElements = 0x7d3; // char : 1
		constexpr auto bUseTetrahedralConstraints = 0x7d3; // char : 1
		constexpr auto bUseThinShellVolumeConstraints = 0x7d3; // char : 1
		constexpr auto bUseSelfCollisions = 0x7d3; // char : 1
		constexpr auto bUseContinuousCollisionDetection = 0x7d3; // char : 1
		constexpr auto bPropagateCurvesToSlaves = 0x7d4; // char : 1
		constexpr auto bSkipKinematicUpdateWhenInterpolating = 0x7d4; // char : 1
		constexpr auto bSkipBoundsUpdateWhenInterpolating = 0x7d4; // char : 1
		constexpr auto bNeedsQueuedAnimEventsDispatched = 0x7d4; // char : 1
		constexpr auto CachedAnimCurveUidVersion = 0x7d6; // uint16_t
		constexpr auto MassMode = 0x7d8; // EClothMassMode
		constexpr auto UniformMass = 0x7dc; // float
		constexpr auto TotalMass = 0x7e0; // float
		constexpr auto Density = 0x7e4; // float
		constexpr auto MinPerParticleMass = 0x7e8; // float
		constexpr auto ClothBlendWeight = 0x7ec; // float
		constexpr auto EdgeStiffness = 0x7f0; // float
		constexpr auto BendingStiffness = 0x7f4; // float
		constexpr auto AreaStiffness = 0x7f8; // float
		constexpr auto VolumeStiffness = 0x7fc; // float
		constexpr auto StrainLimitingStiffness = 0x800; // float
		constexpr auto ShapeTargetStiffness = 0x804; // float
		constexpr auto DisallowedAnimCurves = 0x808; // TArray<FName>
		constexpr auto BodySetup = 0x818; // UBodySetup*
		constexpr auto OnConstraintBroken = 0x828; // FMulticastInlineDelegate
		constexpr auto ClothingSimulationFactory = 0x838; // UClothingSimulationFactory*
		constexpr auto TeleportDistanceThreshold = 0x908; // float
		constexpr auto TeleportRotationThreshold = 0x90c; // float
		constexpr auto LastPoseTickFrame = 0x918; // uint32_t
		constexpr auto ClothingInteractor = 0x970; // UClothingSimulationInteractor*
		constexpr auto OnAnimInitialized = 0xa40; // FMulticastInlineDelegate
	}

	namespace n_UInterpTrackInstFloatProp {
		constexpr auto ResetFloat = 0x58; // float
	}

	namespace n_UMKDemoNetDriverEx {
		constexpr auto SpectatorControllerClass = 0x928; // UObject*
		constexpr auto SelfDemoNetDriver = 0x930; // UDemoNetDriver*
	}

	namespace n_UMaterialExpressionSpeedTree {
		constexpr auto GeometryInput = 0x40; // FExpressionInput
		constexpr auto WindInput = 0x54; // FExpressionInput
		constexpr auto LODInput = 0x68; // FExpressionInput
		constexpr auto ExtraBendWS = 0x7c; // FExpressionInput
		constexpr auto GeometryType = 0x90; // ESpeedTreeGeometryType
		constexpr auto WindType = 0x91; // ESpeedTreeWindType
		constexpr auto LODType = 0x92; // ESpeedTreeLODType
		constexpr auto BillboardThreshold = 0x94; // float
		constexpr auto bAccurateWindVelocities = 0x98; // bool
	}

	namespace n_UNiagaraPreviewAxis_InterpParamVector {
		constexpr auto Min = 0x38; // FVector
		constexpr auto MAX = 0x44; // FVector
	}

	namespace n_UViewport {
		constexpr auto BackgroundColor = 0x120; // FLinearColor
	}

	namespace n_UBravoHotelVehicleAnimInstance {
		constexpr auto Vehicle = 0x998; // ABravoHotelVehicle*
		constexpr auto VehicleMovementComponent = 0x9a0; // UBravoHotelVehicleMovementComponent*
		constexpr auto DeltaTime = 0x9a8; // float
		constexpr auto SteeringModifier = 0x9b4; // float
		constexpr auto SteeringWheelRotation = 0x9b8; // FRotator
		constexpr auto bIsMoving = 0x9c4; // bool
		constexpr auto TwoWheelVehicleWheelRotation_Front = 0x9c8; // FRotator
		constexpr auto TwoWheelVehicleWheelRotation_Rear = 0x9d4; // FRotator
		constexpr auto TwoWheelVehicleWheelLocation_Front = 0x9e0; // FVector
		constexpr auto TwoWheelVehicleWheelLocation_Rear = 0x9ec; // FVector
		constexpr auto TwoWheelVehicleSuspension_Front = 0x9f8; // FVector
		constexpr auto TwoWheelVehicleSuspension_Rear = 0xa04; // FVector
		constexpr auto FrontWheelSocketName = 0xa10; // FName
		constexpr auto RearWheelSocketName = 0xa18; // FName
		constexpr auto FrontSuspensionSocketName = 0xa20; // FName
		constexpr auto RearSuspensionSocketName = 0xa28; // FName
		constexpr auto bIsFPPMode = 0xa30; // bool
		constexpr auto bIsLeftSteering = 0xa31; // bool
		constexpr auto bIsRightSteering = 0xa32; // bool
		constexpr auto LeftSteeringPlayRate = 0xa34; // float
		constexpr auto RightSteeringPlayRate = 0xa38; // float
		constexpr auto bIsIdleSteering = 0xa3c; // bool
		constexpr auto bHoldUpdateTransition = 0xa3d; // bool
	}

	namespace n_UTestMovieSceneSubTrack {
		constexpr auto SectionArray = 0x68; // TArray<UMovieSceneSection*>
	}

	namespace n_AChaosSolverActor {
		constexpr auto TimeStepMultiplier = 0x318; // float
		constexpr auto CollisionIterations = 0x31c; // int32_t
		constexpr auto PushOutIterations = 0x320; // int32_t
		constexpr auto PushOutPairIterations = 0x324; // int32_t
		constexpr auto ClusterConnectionFactor = 0x328; // float
		constexpr auto ClusterUnionConnectionType = 0x32c; // EClusterConnectionTypeEnum
		constexpr auto DoGenerateCollisionData = 0x32d; // bool
		constexpr auto CollisionFilterSettings = 0x330; // FSolverCollisionFilterSettings
		constexpr auto DoGenerateBreakingData = 0x340; // bool
		constexpr auto BreakingFilterSettings = 0x344; // FSolverBreakingFilterSettings
		constexpr auto DoGenerateTrailingData = 0x354; // bool
		constexpr auto TrailingFilterSettings = 0x358; // FSolverTrailingFilterSettings
		constexpr auto bHasFloor = 0x368; // bool
		constexpr auto FloorHeight = 0x36c; // float
		constexpr auto MassScale = 0x370; // float
		constexpr auto bGenerateContactGraph = 0x374; // bool
		constexpr auto ChaosDebugSubstepControl = 0x375; // FChaosDebugSubstepControl
		constexpr auto SpriteComponent = 0x378; // UBillboardComponent*
		constexpr auto GameplayEventDispatcherComponent = 0x398; // UChaosGameplayEventDispatcher*
	}

	namespace n_UUW-Inventory_CharacterPreView_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto FadeIn = 0x250; // UWidgetAnimation*
		constexpr auto CharacterPreviewImage = 0x258; // UImage*
		constexpr auto Image_CharacterSilBody = 0x260; // UImage*
		constexpr auto ControllerRef = 0x268; // ABP-BravoHotel-PlayerController_C*
	}

	namespace n_UBravoHotelCrosshair {
		constexpr auto CrosshairDataMap = 0x40; // FCrosshairDataMap
		constexpr auto CrosshairDataMap_ADS = 0x90; // FCrosshairDataMap
	}

	namespace n_UMovieSceneComponentMaterialTrack {
		constexpr auto MaterialIndex = 0x68; // int32_t
	}

	namespace n_URSM {
		constexpr auto SGUID = 0x28; // FGuid
		constexpr auto PlayerId = 0x38; // int32_t
		constexpr auto Owner = 0x3c; // TWeakObjectPtr<UObject>
	}

	namespace n_UUW-MapComp_C {
		constexpr auto UberGraphFrame = 0x518; // FPointerToUberGraphFrame
		constexpr auto Aircraft = 0x520; // UCanvasPanel*
		constexpr auto Background = 0x528; // UImage*
		constexpr auto Canvas = 0x530; // UCanvasPanel*
		constexpr auto InvalidationBox_1 = 0x538; // UInvalidationBox*
		constexpr auto TestDescentEndPoint_2 = 0x540; // UImage*
		constexpr auto TestDescentStartPoint_2 = 0x548; // UImage*
		constexpr auto TestLineRouteDotline_2 = 0x550; // UImage*
		constexpr auto MapDisplayInfoFlag = 0x558; // int32_t
		constexpr auto OnWheelOnMap = 0x560; // FMulticastInlineDelegate
		constexpr auto OnMouseButtonUpOnMap = 0x570; // FMulticastInlineDelegate
		constexpr auto OnObjectClickOnMap = 0x580; // FMulticastInlineDelegate
		constexpr auto OnDragginOnMap = 0x590; // FMulticastInlineDelegate
		constexpr auto IsDragging = 0x5a0; // bool
		constexpr auto DeltaValue = 0x5a4; // float
		constexpr auto GridString_XAxis = 0x5a8; // TArray<FString>
		constexpr auto GridString_YAxis = 0x5b8; // TArray<FString>
		constexpr auto PersonalSupplyBoxRef = 0x5c8; // UUW-WorldMapMarkerWidget_C*
		constexpr auto ReplayFreeCamWidget = 0x5d0; // UUW-PlayerIconWidget_C*
		constexpr auto MapScaleInterpSpeed = 0x5d8; // float
		constexpr auto MouseRightBtnDown = 0x5dc; // bool
		constexpr auto SelectPingMenuTimer = 0x5e0; // FTimerHandle
		constexpr auto SelectionMenu = 0x5e8; // UWBP_SPS_SelectionMenu_C*
		constexpr auto OnMouseButtonDownOnMap = 0x5f0; // FMulticastInlineDelegate
		constexpr auto MouseButtonDownPos = 0x600; // FVector2D
		constexpr auto IsUpdateMapScale = 0x608; // bool
		constexpr auto MapScaleInerpSpeedRatio = 0x60c; // float
		constexpr auto IsDrawingRoutePing = 0x610; // bool
		constexpr auto IgnoreAreaCircleLines = 0x618; // TArray<FVector2D>
	}

	namespace n_AMagicLeapSharedWorldGameMode {
		constexpr auto SharedWorldData = 0x400; // FMagicLeapSharedWorldSharedData
		constexpr auto OnNewLocalDataFromClients = 0x410; // FMulticastInlineDelegate
		constexpr auto PinSelectionConfidenceThreshold = 0x420; // float
		constexpr auto ChosenOne = 0x4c8; // AMagicLeapSharedWorldPlayerController*
	}

	namespace n_UActorSequenceComponent {
		constexpr auto PlaybackSettings = 0xb0; // FMovieSceneSequencePlaybackSettings
		constexpr auto Sequence = 0xc8; // UActorSequence*
		constexpr auto SequencePlayer = 0xd0; // UActorSequencePlayer*
	}

	namespace n_ASpectatorBeaconClient {
		constexpr auto DestSessionId = 0x3d8; // FString
		constexpr auto PendingReservation = 0x3e8; // FSpectatorReservation
		constexpr auto RequestType = 0x460; // ESpectatorClientRequestType
		constexpr auto bPendingReservationSent = 0x461; // bool
		constexpr auto bCancelReservation = 0x462; // bool
	}

	namespace n_UARTextureCameraDepth {
		constexpr auto DepthQuality = 0xd8; // EARDepthQuality
		constexpr auto DepthAccuracy = 0xd9; // EARDepthAccuracy
		constexpr auto bIsTemporallySmoothed = 0xda; // bool
	}

	namespace n_ABravoHotelProjectileGrenadeSmoke {
		constexpr auto SmokeTrailEffectComponent = 0x678; // UParticleSystemComponent*
		constexpr auto SpawnedSmokeFxComponent = 0x680; // UParticleSystemComponent*
		constexpr auto SmokeLifeTime = 0x688; // float
		constexpr auto SmokeTranslucencySortPriority = 0x68c; // int32_t
		constexpr auto SmokeStartEvent = 0x690; // UAkAudioEvent*
		constexpr auto SmokeEndEvent = 0x698; // UAkAudioEvent*
		constexpr auto SeeThroughSmokeOpacity = 0x6a0; // float
		constexpr auto OpacityInSpeed = 0x6a4; // float
		constexpr auto OpacityOutSpeed = 0x6a8; // float
		constexpr auto SmokeCheckTime = 0x6ac; // float
		constexpr auto PoisonCheckTime = 0x6b0; // float
		constexpr auto PoisonCheckRange = 0x6b4; // float
		constexpr auto SmokeDebuffs = 0x6b8; // TArray<FName>
		constexpr auto bActiveSmokeGrenade = 0x6c8; // bool
		constexpr auto bActiveSmokeEffect = 0x6c9; // bool
		constexpr auto SpawnLocations = 0x6d0; // TArray<FVector>
		constexpr auto AICharacters = 0x7e8; // TArray<ABravoHotelCharacter*>
	}

	namespace n_USkeletalBodySetup {
		constexpr auto bSkipScaleFromAnimation = 0x2d0; // bool
		constexpr auto PhysicalAnimationData = 0x2d8; // TArray<FPhysicalAnimationProfile>
	}

	namespace n_AIntervalGizmoActor {
		constexpr auto UpIntervalComponent = 0x318; // UGizmoLineHandleComponent*
		constexpr auto DownIntervalComponent = 0x320; // UGizmoLineHandleComponent*
		constexpr auto ForwardIntervalComponent = 0x328; // UGizmoLineHandleComponent*
	}

	namespace n_UOculusHMDRuntimeSettings {
		constexpr auto bAutoEnabled = 0x28; // bool
		constexpr auto SplashDescs = 0x30; // TArray<FOculusSplashDesc>
		constexpr auto bSupportsDash = 0x40; // bool
		constexpr auto bCompositesDepth = 0x41; // bool
		constexpr auto bHQDistortion = 0x42; // bool
		constexpr auto PixelDensityMin = 0x44; // float
		constexpr auto PixelDensityMax = 0x48; // float
		constexpr auto CPULevel = 0x4c; // int32_t
		constexpr auto GPULevel = 0x50; // int32_t
		constexpr auto FFRLevel = 0x54; // EFixedFoveatedRenderingLevel
		constexpr auto bChromaCorrection = 0x55; // bool
		constexpr auto bRecenterHMDWithController = 0x56; // bool
	}

	namespace n_UItemSortOrder {
		constexpr auto SortOrder = 0x30; // TMap<FName, int32_t>
	}

	namespace n_UMaterialExpressionShaderStageSwitch {
		constexpr auto PixelShader = 0x40; // FExpressionInput
		constexpr auto VertexShader = 0x54; // FExpressionInput
	}

	namespace n_UUW-MainWidget_C {
		constexpr auto UberGraphFrame = 0x450; // FPointerToUberGraphFrame
		constexpr auto Anim_HideWidget = 0x458; // UWidgetAnimation*
		constexpr auto HideLaserPoint = 0x460; // UWidgetAnimation*
		constexpr auto ShowLaserPoint = 0x468; // UWidgetAnimation*
		constexpr auto BackgroundBlur_154 = 0x470; // UBackgroundBlur*
		constexpr auto Canvas = 0x478; // UCanvasPanel*
		constexpr auto HB_PerkSpin = 0x480; // UHorizontalBox*
		constexpr auto RedCircle = 0x488; // UImage*
		constexpr auto TextBlock_Start = 0x490; // UTextBlock*
		constexpr auto UW-CompassWidget = 0x498; // UUW-CompassWidget_C*
		constexpr auto UW-HUDMessageWidget = 0x4a0; // UUW-HUDMessageWidget_C*
		constexpr auto UW-InteractionWidget = 0x4a8; // UUW-InteractionWidget_C*
		constexpr auto UW-JetpackWidget = 0x4b0; // UUW-JetpackWidget_C*
		constexpr auto UW-MS = 0x4b8; // UUW-MS_C*
		constexpr auto UW-PerkLevelUp_02 = 0x4c0; // UUW-PerkLevelUp_02_C*
		constexpr auto UW-VehicleWidget = 0x4c8; // UUW-VehicleWidget_C*
		constexpr auto TargetPawn = 0x4d0; // ABravoHotelCharacter*
		constexpr auto LastDisplayAbility = 0x4d8; // FDisplayAbility
		constexpr auto UW-RaderCursorWidget = 0x4e8; // UUW-Radar_Cursor_C*
		constexpr auto UW-DefaultCursorWidget = 0x4f0; // UUserWidget*
		constexpr auto Timer_IsMouseWidgetInMap = 0x4f8; // FTimerHandle
		constexpr auto UW-NitroBoomTargetWidget = 0x500; // UUW-NitroBoomTargetWidget_C*
		constexpr auto bIsShow = 0x508; // bool
		constexpr auto TmpViewportUpAngle = 0x50c; // float
		constexpr auto TmpViewportSideAngle = 0x510; // float
		constexpr auto CenterPosition = 0x514; // FVector2D
		constexpr auto UW-MapImageRef = 0x520; // UUW-MapImageWidget_C*
		constexpr auto Timer_AutoPerkDeck = 0x528; // FTimerHandle
		constexpr auto LastPlayZoneID = 0x530; // int32_t
		constexpr auto bShowLevelUp = 0x534; // bool
		constexpr auto IsPlayingUltimateSound = 0x535; // bool
		constexpr auto bIsUnlockUltimateSkill = 0x536; // bool
	}

	namespace n_ACameraActor {
		constexpr auto AutoActivateForPlayer = 0x318; // EAutoReceiveInput
		constexpr auto CameraComponent = 0x320; // UCameraComponent*
		constexpr auto SceneComponent = 0x328; // USceneComponent*
		constexpr auto bConstrainAspectRatio = 0x338; // char : 1
		constexpr auto AspectRatio = 0x33c; // float
		constexpr auto FOVAngle = 0x340; // float
		constexpr auto PostProcessBlendWeight = 0x344; // float
		constexpr auto PostProcessSettings = 0x350; // FPostProcessSettings
	}

	namespace n_UHUDInteractionComponent {
		constexpr auto PopupManager = 0xb0; // UBravoHotelPopupManager*
		constexpr auto MoveWorldMapToPlayer = 0xb8; // bool
		constexpr auto SaveIgnoredWidgets = 0xc0; // TArray<UUserWidget*>
		constexpr auto IgnoredWidgets = 0xe0; // TArray<UUserWidget*>
	}

	namespace n_AExponentialHeightFog {
		constexpr auto Component = 0x318; // UExponentialHeightFogComponent*
		constexpr auto bEnabled = 0x320; // char : 1
	}

	namespace n_UTestMovieSceneSequence {
		constexpr auto MovieScene = 0x348; // UMovieScene*
	}

	namespace n_UCoherentUIGTComponent {
		constexpr auto URL = 0x230; // FString
		constexpr auto Width = 0x240; // int32_t
		constexpr auto Height = 0x244; // int32_t
		constexpr auto ManualTexture = 0x248; // bool
		constexpr auto ClickThroughAlphaThreshold = 0x24c; // float
		constexpr auto Transparent = 0x250; // bool
	}

	namespace n_UMaterialExpressionTangentOutput {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UDistributionVectorConstantCurve {
		constexpr auto ConstantCurve = 0x38; // FInterpCurveVector
		constexpr auto bLockAxes = 0x50; // char : 1
		constexpr auto LockedAxes = 0x54; // EDistributionVectorLockFlags
	}

	namespace n_UActorChannel {
		constexpr auto Actor = 0xa8; // AActor*
		constexpr auto CreateSubObjects = 0x198; // TArray<UObject*>
	}

	namespace n_UReactiveStateMachine {
		constexpr auto StateGraph = 0x58; // TArray<UStateAction*>
		constexpr auto MachineTime = 0x68; // float
		constexpr auto _OnEntry = 0x70; // FMulticastInlineDelegate
		constexpr auto _OnExit = 0x80; // FMulticastInlineDelegate
		constexpr auto MachineData = 0x90; // TMap<FGuid, FMachinePayloadData>
	}

	namespace n_UAIDataProvider_Random {
		constexpr auto Min = 0x40; // float
		constexpr auto MAX = 0x44; // float
		constexpr auto bInteger = 0x48; // char : 1
	}

	namespace n_UMaterial {
		constexpr auto PhysMaterial = 0x88; // UPhysicalMaterial*
		constexpr auto PhysMaterialMask = 0x90; // UPhysicalMaterialMask*
		constexpr auto PhysicalMaterialMap = 0x98; // UPhysicalMaterial* [0x8]
		constexpr auto Metallic = 0xd8; // FScalarMaterialInput
		constexpr auto Specular = 0xec; // FScalarMaterialInput
		constexpr auto Anisotropy = 0x100; // FScalarMaterialInput
		constexpr auto Normal = 0x114; // FVectorMaterialInput
		constexpr auto Tangent = 0x128; // FVectorMaterialInput
		constexpr auto EmissiveColor = 0x13c; // FColorMaterialInput
		constexpr auto MaterialDomain = 0x150; // EMaterialDomain
		constexpr auto BlendMode = 0x151; // EBlendMode
		constexpr auto DecalBlendMode = 0x152; // EDecalBlendMode
		constexpr auto MaterialDecalResponse = 0x153; // EMaterialDecalResponse
		constexpr auto ShadingModel = 0x154; // EMaterialShadingModel
		constexpr auto bCastDynamicShadowAsMasked = 0x155; // char : 1
		constexpr auto ShadingModels = 0x156; // FMaterialShadingModelField
		constexpr auto OpacityMaskClipValue = 0x158; // float
		constexpr auto WorldPositionOffset = 0x15c; // FVectorMaterialInput
		constexpr auto Refraction = 0x170; // FScalarMaterialInput
		constexpr auto MaterialAttributes = 0x184; // FMaterialAttributesInput
		constexpr auto PixelDepthOffset = 0x19c; // FScalarMaterialInput
		constexpr auto ShadingModelFromMaterialExpression = 0x1b0; // FShadingModelMaterialInput
		constexpr auto bEnableSeparateTranslucency = 0x1c4; // char : 1
		constexpr auto bEnableResponsiveAA = 0x1c4; // char : 1
		constexpr auto bEnableTranslucentVelocity = 0x1c8; // char : 1
		constexpr auto bScreenSpaceReflections = 0x1cc; // char : 1
		constexpr auto bContactShadows = 0x1cc; // char : 1
		constexpr auto TwoSided = 0x1cc; // char : 1
		constexpr auto DitheredLODTransition = 0x1cc; // char : 1
		constexpr auto DitherOpacityMask = 0x1cc; // char : 1
		constexpr auto bAllowNegativeEmissiveColor = 0x1cc; // char : 1
		constexpr auto TranslucencyLightingMode = 0x1cd; // ETranslucencyLightingMode
		constexpr auto bEnableMobileSeparateTranslucency = 0x1ce; // char : 1
		constexpr auto NumCustomizedUVs = 0x1d0; // int32_t
		constexpr auto TranslucencyDirectionalLightingIntensity = 0x1d4; // float
		constexpr auto TranslucentShadowDensityScale = 0x1d8; // float
		constexpr auto TranslucentSelfShadowDensityScale = 0x1dc; // float
		constexpr auto TranslucentSelfShadowSecondDensityScale = 0x1e0; // float
		constexpr auto TranslucentSelfShadowSecondOpacity = 0x1e4; // float
		constexpr auto TranslucentBackscatteringExponent = 0x1e8; // float
		constexpr auto TranslucentMultipleScatteringExtinction = 0x1ec; // FLinearColor
		constexpr auto TranslucentShadowStartOffset = 0x1fc; // float
		constexpr auto bDisableDepthTest = 0x200; // char : 1
		constexpr auto bWriteOnlyAlpha = 0x200; // char : 1
		constexpr auto bGenerateSphericalParticleNormals = 0x200; // char : 1
		constexpr auto bTangentSpaceNormal = 0x200; // char : 1
		constexpr auto bUseEmissiveForDynamicAreaLighting = 0x200; // char : 1
		constexpr auto bBlockGI = 0x200; // char : 1
		constexpr auto bUsedAsSpecialEngineMaterial = 0x200; // char : 1
		constexpr auto bUsedWithSkeletalMesh = 0x200; // char : 1
		constexpr auto bUsedWithEditorCompositing = 0x201; // char : 1
		constexpr auto bUsedWithParticleSprites = 0x201; // char : 1
		constexpr auto bUsedWithBeamTrails = 0x201; // char : 1
		constexpr auto bUsedWithMeshParticles = 0x201; // char : 1
		constexpr auto bUsedWithNiagaraSprites = 0x201; // char : 1
		constexpr auto bUsedWithNiagaraRibbons = 0x201; // char : 1
		constexpr auto bUsedWithNiagaraMeshParticles = 0x201; // char : 1
		constexpr auto bUsedWithGeometryCache = 0x201; // char : 1
		constexpr auto bUsedWithStaticLighting = 0x202; // char : 1
		constexpr auto bUsedWithMorphTargets = 0x202; // char : 1
		constexpr auto bUsedWithSplineMeshes = 0x202; // char : 1
		constexpr auto bUsedWithInstancedStaticMeshes = 0x202; // char : 1
		constexpr auto bUsedWithGeometryCollections = 0x202; // char : 1
		constexpr auto bUsesDistortion = 0x202; // char : 1
		constexpr auto bUsedWithClothing = 0x202; // char : 1
		constexpr auto bUsedWithWater = 0x204; // char : 1
		constexpr auto bUsedWithHairStrands = 0x204; // char : 1
		constexpr auto bUsedWithLidarPointCloud = 0x204; // char : 1
		constexpr auto bUsedWithUI = 0x208; // char : 1
		constexpr auto bAutomaticallySetUsageInEditor = 0x208; // char : 1
		constexpr auto bFullyRough = 0x208; // char : 1
		constexpr auto bUseFullPrecision = 0x208; // char : 1
		constexpr auto bUseLightmapDirectionality = 0x208; // char : 1
		constexpr auto bForwardRenderUsePreintegratedGFForSimpleIBL = 0x20c; // char : 1
		constexpr auto bUseHQForwardReflections = 0x210; // char : 1
		constexpr auto bUsePlanarForwardReflections = 0x210; // char : 1
		constexpr auto bNormalCurvatureToRoughness = 0x210; // char : 1
		constexpr auto D3D11TessellationMode = 0x211; // EMaterialTessellationMode
		constexpr auto bEnableCrackFreeDisplacement = 0x212; // char : 1
		constexpr auto bEnableAdaptiveTessellation = 0x212; // char : 1
		constexpr auto AllowTranslucentCustomDepthWrites = 0x212; // char : 1
		constexpr auto Wireframe = 0x212; // char : 1
		constexpr auto bCanMaskedBeAssumedOpaque = 0x212; // char : 1
		constexpr auto bIsMasked = 0x212; // char : 1
		constexpr auto bIsPreviewMaterial = 0x212; // char : 1
		constexpr auto bIsFunctionPreviewMaterial = 0x212; // char : 1
		constexpr auto bUseMaterialAttributes = 0x213; // char : 1
		constexpr auto bCastRayTracedShadows = 0x213; // char : 1
		constexpr auto bUseTranslucencyVertexFog = 0x213; // char : 1
		constexpr auto bIsSky = 0x213; // char : 1
		constexpr auto bComputeFogPerPixel = 0x213; // char : 1
		constexpr auto bOutputTranslucentVelocity = 0x213; // char : 1
		constexpr auto bAllowDevelopmentShaderCompile = 0x213; // char : 1
		constexpr auto bIsMaterialEditorStatsMaterial = 0x213; // char : 1
		constexpr auto BlendableLocation = 0x214; // EBlendableLocation
		constexpr auto BlendableOutputAlpha = 0x215; // char : 1
		constexpr auto bEnableStencilTest = 0x215; // char : 1
		constexpr auto StencilCompare = 0x216; // EMaterialStencilCompare
		constexpr auto StencilRefValue = 0x217; // char
		constexpr auto RefractionMode = 0x218; // ERefractionMode
		constexpr auto BlendablePriority = 0x21c; // int32_t
		constexpr auto bIsBlendable = 0x220; // char : 1
		constexpr auto UsageFlagWarnings = 0x224; // uint32_t
		constexpr auto RefractionDepthBias = 0x228; // float
		constexpr auto StateID = 0x22c; // FGuid
		constexpr auto MaxDisplacement = 0x23c; // float
		constexpr auto CachedExpressionData = 0x2c8; // FMaterialCachedExpressionData
	}

	namespace n_UAkPS4InitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettings
		constexpr auto CommunicationSettings = 0x88; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xb0; // FAkPS4AdvancedInitializationSettings
	}

	namespace n_UWidgetInteractionComponent {
		constexpr auto OnHoveredWidgetChanged = 0x230; // FMulticastInlineDelegate
		constexpr auto VirtualUserIndex = 0x250; // int32_t
		constexpr auto PointerIndex = 0x254; // float
		constexpr auto TraceChannel = 0x258; // ECollisionChannel
		constexpr auto InteractionDistance = 0x25c; // float
		constexpr auto InteractionSource = 0x260; // EWidgetInteractionSource
		constexpr auto bEnableHitTesting = 0x261; // bool
		constexpr auto bShowDebug = 0x262; // bool
		constexpr auto DebugColor = 0x264; // FLinearColor
		constexpr auto CustomHitResult = 0x2f0; // FHitResult
		constexpr auto LocalHitLocation = 0x378; // FVector2D
		constexpr auto LastLocalHitLocation = 0x380; // FVector2D
		constexpr auto HoveredWidgetComponent = 0x388; // UWidgetComponent*
		constexpr auto LastHitResult = 0x390; // FHitResult
		constexpr auto bIsHoveredWidgetInteractable = 0x418; // bool
		constexpr auto bIsHoveredWidgetFocusable = 0x419; // bool
		constexpr auto bIsHoveredWidgetHitTestVisible = 0x41a; // bool
	}

	namespace n_UOnlineSessionClient {
		constexpr auto bIsFromInvite = 0x188; // bool
		constexpr auto bHandlingDisconnect = 0x189; // bool
	}

	namespace n_AOnlineBeaconClient {
		constexpr auto BeaconOwner = 0x348; // AOnlineBeaconHostObject*
		constexpr auto BeaconConnection = 0x350; // UNetConnection*
		constexpr auto ConnectionState = 0x358; // EBeaconConnectionState
	}

	namespace n_UUW-AttackUserWidget_C {
		constexpr auto Enemy_Lv_Motion_FadeOut_Inert = 0x2a0; // UWidgetAnimation*
		constexpr auto Enemy_Lv_Motion_FadeIn_Inert = 0x2a8; // UWidgetAnimation*
		constexpr auto FadeOut = 0x2b0; // UWidgetAnimation*
		constexpr auto Enemy_Inert = 0x2b8; // UOverlay*
		constexpr auto HorizontalBox_1 = 0x2c0; // UHorizontalBox*
		constexpr auto HorizontalBox_2 = 0x2c8; // UHorizontalBox*
		constexpr auto Image_2 = 0x2d0; // UImage*
		constexpr auto Image_145 = 0x2d8; // UImage*
		constexpr auto Overlay_2 = 0x2e0; // UOverlay*
		constexpr auto Overlay_98 = 0x2e8; // UOverlay*
		constexpr auto Pawn = 0x2f0; // AActor*
	}

	namespace n_UUW-ComboBoxText_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Button_43 = 0x250; // UButton*
		constexpr auto off = 0x258; // UImage*
		constexpr auto On = 0x260; // UImage*
		constexpr auto TextBlock_67 = 0x268; // UTextBlock*
		constexpr auto Text = 0x270; // FText
	}

	namespace n_UParticleModuleVectorFieldRotationRate {
		constexpr auto RotationRate = 0x30; // FVector
	}

	namespace n_ANavigationTestingActor {
		constexpr auto CapsuleComponent = 0x328; // UCapsuleComponent*
		constexpr auto InvokerComponent = 0x330; // UNavigationInvokerComponent*
		constexpr auto bActAsNavigationInvoker = 0x338; // char : 1
		constexpr auto NavAgentProps = 0x340; // FNavAgentProperties
		constexpr auto QueryingExtent = 0x370; // FVector
		constexpr auto MyNavData = 0x380; // ANavigationData*
		constexpr auto ProjectedLocation = 0x388; // FVector
		constexpr auto bProjectedLocationValid = 0x394; // char : 1
		constexpr auto bSearchStart = 0x394; // char : 1
		constexpr auto CostLimitFactor = 0x398; // float
		constexpr auto MinimumCostLimit = 0x39c; // float
		constexpr auto bBacktracking = 0x3a0; // char : 1
		constexpr auto bUseHierarchicalPathfinding = 0x3a0; // char : 1
		constexpr auto bGatherDetailedInfo = 0x3a0; // char : 1
		constexpr auto bDrawDistanceToWall = 0x3a0; // char : 1
		constexpr auto bShowNodePool = 0x3a0; // char : 1
		constexpr auto bShowBestPath = 0x3a0; // char : 1
		constexpr auto bShowDiffWithPreviousStep = 0x3a0; // char : 1
		constexpr auto bShouldBeVisibleInGame = 0x3a0; // char : 1
		constexpr auto CostDisplayMode = 0x3a4; // ENavCostDisplay
		constexpr auto TextCanvasOffset = 0x3a8; // FVector2D
		constexpr auto bPathExist = 0x3b0; // char : 1
		constexpr auto bPathIsPartial = 0x3b0; // char : 1
		constexpr auto bPathSearchOutOfNodes = 0x3b0; // char : 1
		constexpr auto PathfindingTime = 0x3b4; // float
		constexpr auto PathCost = 0x3b8; // float
		constexpr auto PathfindingSteps = 0x3bc; // int32_t
		constexpr auto OtherActor = 0x3c0; // ANavigationTestingActor*
		constexpr auto FilterClass = 0x3c8; // UNavigationQueryFilter*
		constexpr auto ShowStepIndex = 0x3d0; // int32_t
		constexpr auto OffsetFromCornersDistance = 0x3d4; // float
	}

	namespace n_UTireConfig {
		constexpr auto FrictionScale = 0x30; // float
		constexpr auto TireFrictionScales = 0x38; // TArray<FTireConfigMaterialFriction>
	}

	namespace n_UBravoHotelQuestComponent {
		constexpr auto SeasonQuestInfos = 0xb0; // TArray<FSeasonQuestInfo>
		constexpr auto OnScenarioQuestStartDelegate = 0xc0; // FMulticastInlineDelegate
		constexpr auto OnScenarioQuestUpdateDelegate = 0xd0; // FMulticastInlineDelegate
		constexpr auto OnScenarioQuestStopDelegate = 0xe0; // FMulticastInlineDelegate
		constexpr auto ScenarioQuestInfo = 0xf0; // FQuestInfo
		constexpr auto ScenarioWidgetClass = 0x138; // UBravoHotelScenarioWidget*
		constexpr auto CurrentScenarioWidget = 0x140; // UBravoHotelScenarioWidget*
	}

	namespace n_UCrossHairDetailInfo_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto 1-1 = 0x250; // UImage*
		constexpr auto CurDesc = 0x258; // UTextBlock*
	}

	namespace n_UMaterialExpressionThinTranslucentMaterialOutput {
		constexpr auto TransmittanceColor = 0x40; // FExpressionInput
	}

	namespace n_UBTTask_BlackboardBase {
		constexpr auto BlackboardKey = 0x70; // FBlackboardKeySelector
	}

	namespace n_UBP-SavedPlayerInventory_C {
		constexpr auto WearableItemList = 0x28; // TArray<FBP-SavedInventoryItemStructure>
		constexpr auto CustomItemList = 0x38; // TArray<FBP-SavedInventoryItemStructure>
		constexpr auto WeaponItemList = 0x48; // TArray<FBP-SavedInventoryItemStructure>
		constexpr auto InBackpackItemList = 0x58; // TArray<FBP-SavedInventoryItemStructure>
		constexpr auto AppearanceInfo = 0x68; // FRepCharacterAppearanceInfo
	}

	namespace n_UInputTouchDelegateBinding {
		constexpr auto InputTouchDelegateBindings = 0x28; // TArray<FBlueprintInputTouchDelegateBinding>
	}

	namespace n_UFileMediaSource {
		constexpr auto FilePath = 0x88; // FString
		constexpr auto PrecacheFile = 0x98; // bool
	}

	namespace n_UMovieScene3DConstraintTrack {
		constexpr auto ConstraintSections = 0x58; // TArray<UMovieSceneSection*>
	}

	namespace n_UARCandidateImage {
		constexpr auto CandidateTexture = 0x30; // UTexture2D*
		constexpr auto FriendlyName = 0x38; // FString
		constexpr auto Width = 0x48; // float
		constexpr auto Height = 0x4c; // float
		constexpr auto Orientation = 0x50; // EARCandidateImageOrientation
	}

	namespace n_UMaterialExpressionStaticBoolParameter {
		constexpr auto DefaultValue = 0x58; // char : 1
	}

	namespace n_UInterpTrackInstVisibility {
		constexpr auto Action = 0x28; // EVisibilityTrackAction
		constexpr auto LastUpdatePosition = 0x2c; // float
	}

	namespace n_UTimelineBorder {
		constexpr auto OnMouseEnterEvent = 0x270; // FDelegate
		constexpr auto OnMouseLeaveEvent = 0x280; // FDelegate
	}

	namespace n_UOculusMR_Settings {
		constexpr auto ClippingReference = 0x28; // EOculusMR_ClippingReference
		constexpr auto bUseTrackedCameraResolution = 0x29; // bool
		constexpr auto WidthPerView = 0x2c; // int32_t
		constexpr auto HeightPerView = 0x30; // int32_t
		constexpr auto CastingLatency = 0x34; // float
		constexpr auto BackdropColor = 0x38; // FColor
		constexpr auto HandPoseStateLatency = 0x3c; // float
		constexpr auto ChromaKeyColor = 0x40; // FColor
		constexpr auto ChromaKeySimilarity = 0x44; // float
		constexpr auto ChromaKeySmoothRange = 0x48; // float
		constexpr auto ChromaKeySpillRange = 0x4c; // float
		constexpr auto VirtualGreenScreenType = 0x50; // EOculusMR_VirtualGreenScreenType
		constexpr auto DynamicLightingDepthSmoothFactor = 0x54; // float
		constexpr auto DynamicLightingDepthVariationClampingValue = 0x58; // float
		constexpr auto ExternalCompositionPostProcessEffects = 0x5c; // EOculusMR_PostProcessEffects
		constexpr auto bIsCasting = 0x5d; // bool
		constexpr auto CompositionMethod = 0x5e; // EOculusMR_CompositionMethod
		constexpr auto CapturingCamera = 0x5f; // EOculusMR_CameraDeviceEnum
		constexpr auto bUseDynamicLighting = 0x60; // bool
		constexpr auto DepthQuality = 0x61; // EOculusMR_DepthQuality
	}

	namespace n_ABravoHotelFence {
		constexpr auto DamageCorrectValues = 0x330; // TMap<UBravoHotelDamageType*, float>
	}

	namespace n_ABravoHotelMK3DSpectatorPawn {
		constexpr auto ReplayController = 0x3b0; // ABravoHotelMK3DReplayController*
		constexpr auto DefaultSpeed = 0x3b8; // float
		constexpr auto CurrentSpeedLevel = 0x3bc; // float
		constexpr auto MinSpeedLevel = 0x3c0; // float
		constexpr auto MaxSpeedLevel = 0x3c4; // float
	}

	namespace n_UMaterialExpressionMax {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_UBravoHotelSettingWidget {
		constexpr auto BackupSlots = 0x298; // TArray<FBackupSlotData>
		constexpr auto SettingList = 0x2b0; // TMap<FName, FString>
		constexpr auto ChangeSettingList = 0x300; // TMap<FName, UBravoHotelSettingSlotWidget*>
		constexpr auto ChangeSettingKeyList = 0x350; // TMap<FName, FChangeKeySlotInfo>
		constexpr auto SubList = 0x3a0; // TArray<UBravoHotelSettingSubWidget*>
		constexpr auto SlotList = 0x3b0; // TArray<UBravoHotelSettingSlotWidget*>
		constexpr auto ChangingTotalGraphic = 0x3c0; // bool
		constexpr auto IsInitState = 0x3c1; // bool
		constexpr auto SelectedTyp = 0x3c2; // ESettingBigType
	}

	namespace n_UInterpTrackInstVectorProp {
		constexpr auto ResetVector = 0x58; // FVector
	}

	namespace n_UParticleModuleLocationPrimitiveBase {
		constexpr auto Positive_X = 0x30; // char : 1
		constexpr auto Positive_Y = 0x30; // char : 1
		constexpr auto Positive_Z = 0x30; // char : 1
		constexpr auto Negative_X = 0x30; // char : 1
		constexpr auto Negative_Y = 0x30; // char : 1
		constexpr auto Negative_Z = 0x30; // char : 1
		constexpr auto SurfaceOnly = 0x30; // char : 1
		constexpr auto Velocity = 0x30; // char : 1
		constexpr auto VelocityScale = 0x38; // FRawDistributionFloat
		constexpr auto StartLocation = 0x68; // FRawDistributionVector
	}

	namespace n_UMediaTexture {
		constexpr auto AddressX = 0xb8; // TextureAddress
		constexpr auto AddressY = 0xb9; // TextureAddress
		constexpr auto AutoClear = 0xba; // bool
		constexpr auto ClearColor = 0xbc; // FLinearColor
		constexpr auto EnableGenMips = 0xcc; // bool
		constexpr auto NumMips = 0xcd; // char
		constexpr auto MediaPlayer = 0xd0; // UMediaPlayer*
	}

	namespace n_UBravoHotelUserSettings {
		constexpr auto TotalGraphicQuality = 0x154; // int32_t
		constexpr auto MasterVolumeOnOff = 0x158; // bool
		constexpr auto PreMasterVolume = 0x15c; // int32_t
		constexpr auto MasterVolume = 0x160; // int32_t
		constexpr auto EffectVolume = 0x164; // int32_t
		constexpr auto UIVolume = 0x168; // int32_t
		constexpr auto MusicVolume = 0x16c; // int32_t
		constexpr auto VoiceInputVolume = 0x170; // int32_t
		constexpr auto VoiceOutputVolume = 0x174; // int32_t
		constexpr auto VoiceInputMode = 0x178; // int32_t
		constexpr auto VoiceChanel = 0x17c; // int32_t
		constexpr auto VerticalSensitivity = 0x180; // int32_t
		constexpr auto GeneralSensitivity = 0x184; // int32_t
		constexpr auto VehicleDriverSensitivity = 0x188; // int32_t
		constexpr auto AOSSensitivity = 0x18c; // int32_t
		constexpr auto TotalSensitivity = 0x190; // int32_t
		constexpr auto bUsingDetailSensitivity = 0x194; // bool
		constexpr auto ADSSensitivity = 0x198; // int32_t
		constexpr auto ADS2xSensitivity = 0x19c; // int32_t
		constexpr auto ADS4xSensitivity = 0x1a0; // int32_t
		constexpr auto ADS6xSensitivity = 0x1a4; // int32_t
		constexpr auto ADS8xSensitivity = 0x1a8; // int32_t
		constexpr auto ADS15xSensitivity = 0x1ac; // int32_t
		constexpr auto bReverseLeftAndRight = 0x1b0; // bool
		constexpr auto bReverseUpAndDown = 0x1b1; // bool
		constexpr auto CrossHairIndex = 0x1b4; // int32_t
		constexpr auto FireModeSettings = 0x1b8; // TMap<EWeaponType, EWeaponFireMode>
		constexpr auto autoReload = 0x208; // bool
		constexpr auto ImmediateAttachment = 0x209; // bool
		constexpr auto InheritAttachment = 0x20a; // bool
		constexpr auto ShowPerkSlot = 0x20b; // bool
		constexpr auto ShowSmartPing = 0x20c; // bool
		constexpr auto ShowSmartPingSupplyBox = 0x20d; // bool
		constexpr auto ShowSmartPingLightPole = 0x210; // int32_t
		constexpr auto NetworkDebugStatistics = 0x214; // bool
		constexpr auto EnableShowClassUI = 0x215; // bool
		constexpr auto bShowUseaableItemEffect = 0x216; // bool
		constexpr auto AmmoEffect = 0x218; // int32_t
		constexpr auto MedicalLv3Effect = 0x21c; // int32_t
		constexpr auto MedicalLv2Effect = 0x220; // int32_t
		constexpr auto MedicalLv1Effect = 0x224; // int32_t
		constexpr auto RedBoostEffect = 0x228; // int32_t
		constexpr auto GreenBoostEffect = 0x22c; // int32_t
		constexpr auto BlueBoostEffect = 0x230; // int32_t
		constexpr auto AutoUseItem_MedicalLv1 = 0x234; // bool
		constexpr auto AutoUseItem_MedicalLv2 = 0x235; // bool
		constexpr auto AutoUseItem_MedicalLv3 = 0x236; // bool
		constexpr auto AutoLadder = 0x237; // bool
		constexpr auto ShowGuideWidget = 0x238; // bool
		constexpr auto SearchMaterialItem = 0x239; // bool
		constexpr auto SearchExpertWeaponItem = 0x23a; // bool
		constexpr auto ShowDamageLog = 0x23b; // bool
		constexpr auto InventoryOrder = 0x23c; // int32_t
		constexpr auto InventoryScrollSpeed = 0x240; // float
		constexpr auto CustomUseItem1 = 0x244; // int32_t
		constexpr auto CustomUseItem2 = 0x248; // int32_t
		constexpr auto CustomUseItem3 = 0x24c; // int32_t
		constexpr auto CustomUseItem4 = 0x250; // int32_t
		constexpr auto CustomUseItem5 = 0x254; // int32_t
		constexpr auto CustomUseItem6 = 0x258; // int32_t
		constexpr auto CustomUseItem7 = 0x25c; // int32_t
		constexpr auto CustomUseItem8 = 0x260; // int32_t
		constexpr auto ToggleCrouch = 0x264; // bool
		constexpr auto ToggleWalk = 0x265; // bool
		constexpr auto ToggleSprint = 0x266; // bool
		constexpr auto ToggleFreeLook = 0x267; // bool
		constexpr auto ToggleSteadyAim = 0x268; // bool
		constexpr auto ToggleExLean = 0x26c; // int32_t
		constexpr auto ToggleAOS = 0x270; // bool
		constexpr auto ToggleADS = 0x271; // bool
		constexpr auto GraphicsVersion = 0x274; // uint32_t
		constexpr auto DefaultLanguageType = 0x27c; // float
		constexpr auto LanguageType = 0x280; // float
		constexpr auto Gamma = 0x284; // float
		constexpr auto Sharpen = 0x288; // float
		constexpr auto ShowInventoryCharacter = 0x28c; // bool
		constexpr auto FieldOfView = 0x298; // int32_t
		constexpr auto ReflexQuality = 0x29c; // int32_t
		constexpr auto DLSSQuality = 0x2a0; // int32_t
		constexpr auto bUseDepthOfField = 0x2a4; // bool
		constexpr auto FSRQuality = 0x2a8; // int32_t
		constexpr auto KeySettings = 0x2b0; // TMap<EKeySettingType, FInputActionKeyMapping>
		constexpr auto SubKeySettings = 0x300; // TMap<EKeySettingType, FInputActionKeyMapping>
		constexpr auto AxisKeySettings = 0x350; // TMap<EKeySettingType, FInputAxisKeyMapping>
		constexpr auto AxisSubKeySettings = 0x3a0; // TMap<EKeySettingType, FInputAxisKeyMapping>
		constexpr auto SettingDataFromTable = 0x3f0; // TMap<ESettingType, FSettingInfo>
		constexpr auto OnGameUserSettingsApply_Audio = 0x440; // FMulticastInlineDelegate
		constexpr auto OnGameUserSettingsApply_Controll = 0x450; // FMulticastInlineDelegate
		constexpr auto OnGameUserSettingsApply_Graphic = 0x460; // FMulticastInlineDelegate
		constexpr auto OnGameUserSettingsApply_GamePlay = 0x470; // FMulticastInlineDelegate
		constexpr auto OnGameUserSettingsApply_Key = 0x480; // FMulticastInlineDelegate
		constexpr auto OnChangedDediSettings = 0x490; // FMulticastInlineDelegate
		constexpr auto OnChangeVolumeState = 0x500; // FMulticastInlineDelegate
		constexpr auto bCheckValidSettingDataFromTable = 0x510; // bool
		constexpr auto bNeedDefaultSettingWithTabelData = 0x511; // bool
		constexpr auto bCheckLoadComplete = 0x512; // bool
	}

	namespace n_UAvoidanceManager {
		constexpr auto DefaultTimeToLive = 0x30; // float
		constexpr auto LockTimeAfterAvoid = 0x34; // float
		constexpr auto LockTimeAfterClean = 0x38; // float
		constexpr auto DeltaTimeToPredict = 0x3c; // float
		constexpr auto ArtificialRadiusExpansion = 0x40; // float
		constexpr auto TestHeightDifference = 0x44; // float
		constexpr auto HeightCheckMargin = 0x48; // float
	}

	namespace n_UParticleModuleMeshRotationRate {
		constexpr auto StartRotationRate = 0x30; // FRawDistributionVector
	}

	namespace n_UAkRoomComponent {
		constexpr auto bEnable = 0x250; // char : 1
		constexpr auto NextLowerPriorityComponent = 0x258; // UAkRoomComponent*
		constexpr auto Priority = 0x260; // float
		constexpr auto WallOcclusion = 0x264; // float
		constexpr auto AuxSendLevel = 0x268; // float
		constexpr auto AutoPost = 0x26c; // bool
	}

	namespace n_UMaterialExpressionQualitySwitch {
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto Inputs = 0x54; // FExpressionInput [0x3]
	}

	namespace n_ULeaderboardQueryCallbackProxy {
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UAsyncActionLoadPrimaryAsset {
		constexpr auto Completed = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UMovieScenePropertyTrack {
		constexpr auto SectionToKey = 0x58; // UMovieSceneSection*
		constexpr auto PropertyName = 0x60; // FName
		constexpr auto PropertyPath = 0x68; // FString
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_UUW-Inventory_PerkSlot_C {
		constexpr auto UberGraphFrame = 0x2a0; // FPointerToUberGraphFrame
		constexpr auto LevelUp = 0x2a8; // UWidgetAnimation*
		constexpr auto Blank_SkillBG = 0x2b0; // UImage*
		constexpr auto Get_SkillBG = 0x2b8; // UImage*
		constexpr auto IMG_CoolTime = 0x2c0; // UImage*
		constexpr auto IMG_PerkIcon = 0x2c8; // UImage*
		constexpr auto KeyImageWidget = 0x2d0; // UKeyImageWidget_C*
		constexpr auto Lv1 = 0x2d8; // UImage*
		constexpr auto Lv2 = 0x2e0; // UImage*
		constexpr auto Lv3 = 0x2e8; // UImage*
		constexpr auto Over_CoolTime = 0x2f0; // UOverlay*
		constexpr auto T_CoolTime = 0x2f8; // UTextBlock*
		constexpr auto T_PerkName = 0x300; // UTextBlock*
		constexpr auto WidgetSwitcher_Icon = 0x308; // UWidgetSwitcher*
		constexpr auto bHover = 0x310; // bool
		constexpr auto CurrentExpPercent = 0x314; // float
		constexpr auto CurrentLevel = 0x318; // int32_t
		constexpr auto LastLevel = 0x31c; // int32_t
		constexpr auto TargetExpPercent = 0x320; // float
		constexpr auto ExpSpeed = 0x324; // float
		constexpr auto PerkData = 0x328; // FPerkData
		constexpr auto CurrentLevelPercent = 0x408; // float
		constexpr auto MaxLevel = 0x40c; // int32_t
		constexpr auto HoverWidget = 0x410; // UUW-Inventory_ItemSlotHover_C*
		constexpr auto LvArray = 0x418; // TArray<UImage*>
	}

	namespace n_UKawaiiPhysicsLimitsDataAsset {
		constexpr auto SphericalLimits = 0x30; // TArray<FSphericalLimit>
		constexpr auto CapsuleLimits = 0x40; // TArray<FCapsuleLimit>
		constexpr auto PlanarLimits = 0x50; // TArray<FPlanarLimit>
	}

	namespace n_UMaterialExpressionChannelMaskParameter {
		constexpr auto MaskChannel = 0x70; // EChannelMaskParameterColor
		constexpr auto Input = 0x74; // FExpressionInput
	}

	namespace n_AOculusMR_CastingCameraActor {
		constexpr auto VRNotificationComponent = 0x330; // UVRNotificationsComponent*
		constexpr auto CameraColorTexture = 0x338; // UTexture2D*
		constexpr auto CameraDepthTexture = 0x340; // UTexture2D*
		constexpr auto PlaneMeshComponent = 0x348; // UOculusMR_PlaneMeshComponent*
		constexpr auto ChromaKeyMaterial = 0x350; // UMaterial*
		constexpr auto ChromaKeyLitMaterial = 0x358; // UMaterial*
		constexpr auto OpaqueColoredMaterial = 0x360; // UMaterial*
		constexpr auto ChromaKeyMaterialInstance = 0x368; // UMaterialInstanceDynamic*
		constexpr auto ChromaKeyLitMaterialInstance = 0x370; // UMaterialInstanceDynamic*
		constexpr auto CameraFrameMaterialInstance = 0x378; // UMaterialInstanceDynamic*
		constexpr auto BackdropMaterialInstance = 0x380; // UMaterialInstanceDynamic*
		constexpr auto BoundaryActor = 0x388; // AOculusMR_BoundaryActor*
		constexpr auto BoundarySceneCaptureActor = 0x390; // ASceneCapture2D*
		constexpr auto DefaultTexture_White = 0x398; // UTexture2D*
		constexpr auto BackgroundRenderTargets = 0x3f8; // TArray<UTextureRenderTarget2D*>
		constexpr auto ForegroundCaptureActor = 0x408; // ASceneCapture2D*
		constexpr auto ForegroundRenderTargets = 0x410; // TArray<UTextureRenderTarget2D*>
		constexpr auto MRSettings = 0x420; // UOculusMR_Settings*
		constexpr auto MRState = 0x428; // UOculusMR_State*
	}

	namespace n_ABravoHotelGrenadeWeapon {
		constexpr auto FireCorrectLocationHitBlock = 0x1bf0; // float
		constexpr auto ProjectileGrenade = 0x1bf8; // ABravoHotelProjectileGrenade*
		constexpr auto FireWeaponLocationOffset = 0x1c04; // FVector
		constexpr auto FireVelocity = 0x1c10; // float
		constexpr auto GrenadeCookingTime = 0x1c14; // float
		constexpr auto DestroyDelayTime = 0x1c18; // float
		constexpr auto GrenadeDamage = 0x1c1c; // float
		constexpr auto ThrowStartedTime = 0x1c28; // float
		constexpr auto OverThrowGrenade = 0x1c38; // FAnimSlot
		constexpr auto Locomotion_Prone_PinOff_Idle_ThrowOver_1P = 0x1c48; // UAnimSequence*
		constexpr auto FireRotation = 0x1c50; // FRotator
		constexpr auto PinOffGrenade = 0x1c60; // FAnimSlot
		constexpr auto Locomotion_Stand_Idle_Under_1P = 0x1c70; // UAnimSequence*
		constexpr auto ThrowingWeaponCameraShake = 0x1c78; // UCameraShake*
		constexpr auto FireLocationOffset = 0x1c80; // FVector
		constexpr auto Locomotion_Crouch_ThrowUnder_Idle_1P = 0x1c90; // UAnimSequence*
		constexpr auto OverThrowLocationCompensationValue = 0x1c9c; // float
		constexpr auto StartFireBoneName = 0x1ca0; // FName
		constexpr auto ThrowingWeaponCameraShakeScale = 0x1ca8; // float
		constexpr auto Locomotion_Prone_PinOff_Idle_ThrowUnder = 0x1cb8; // UAnimSequence*
		constexpr auto CalcProjectilePredictPathRot = 0x1cc0; // FRotator
		constexpr auto DrawPredictProjectileLine = 0x1ccc; // bool
		constexpr auto Prone_OverThrow = 0x1cd0; // FAnimSlot
		constexpr auto FireRotationOffset = 0x1ce0; // FRotator
		constexpr auto HandSocketName = 0x1cec; // FName
		constexpr auto Locomotion_Prone_Idle_1P = 0x1cf8; // UAnimSequence*
		constexpr auto Prone_OverThrow_LeverOffGrenade = 0x1d00; // FAnimSlot
		constexpr auto PredictTimeHandle = 0x1d10; // FTimerHandle
		constexpr auto Locomotion_Crouch_PinOff_Idle_Additive = 0x1d18; // UAnimSequence*
		constexpr auto bEnableGuidedShot = 0x1d20; // bool
		constexpr auto Locomotion_Crouch_Idle = 0x1d28; // UAnimSequence*
		constexpr auto Locomotion_Crouch_ThrowUnder_Idle_Additive_1P = 0x1d30; // UAnimSequence*
		constexpr auto AfterThrowAnimDelay = 0x1d38; // float
		constexpr auto FireLocation = 0x1d3c; // FVector
		constexpr auto InterpProjectilePredictPathJumpCurve = 0x1d50; // UCurveFloat*
		constexpr auto bEnableCooking = 0x1d58; // bool
		constexpr auto bEnableUnderThrow = 0x1d59; // bool
		constexpr auto UnderThrowGrenadeVelocity = 0x1d5c; // float
		constexpr auto OverThrowDegreeValue = 0x1d60; // float
		constexpr auto SpawnGrenadeCount = 0x1d64; // int32_t
		constexpr auto Locomotion_Crouch_PinOff_Idle_Additive_1P = 0x1d68; // UAnimSequence*
		constexpr auto OverrideSpawnGrenadeCount = 0x1d70; // int32_t
		constexpr auto Locomotion_Prone_PinOff_Idle_ThrowUnder_1P = 0x1d78; // UAnimSequence*
		constexpr auto FireWeaponDelayTime = 0x1d80; // float
		constexpr auto Crouch_OverThrowGrenade = 0x1d88; // FAnimSlot
		constexpr auto LeverOffGrenade = 0x1d98; // FAnimSlot
		constexpr auto Locomotion_Stand_ThrowUnder_Idle_Additive = 0x1da8; // UAnimSequence*
		constexpr auto ThrowVelocityModifierByCharacterMovement = 0x1db0; // float
		constexpr auto UnderThrow_LeverOffGrenade = 0x1db8; // FAnimSlot
		constexpr auto bOverrideSpawnGrenadeCount = 0x1dc8; // bool
		constexpr auto Locomotion_Stand_Idle_Under = 0x1dd0; // UAnimSequence*
		constexpr auto ThrowingWeaponCameraShakeDelayTime = 0x1dd8; // float
		constexpr auto OnChangeThrowingWeaponStateDelegate = 0x1de0; // FMulticastInlineDelegate
		constexpr auto GuidedShotDistance = 0x1df0; // float
		constexpr auto Locomotion_Stand_ThrowUnder_Idle = 0x1df8; // UAnimSequence*
		constexpr auto PinOffParticle = 0x1e00; // UParticleSystem*
		constexpr auto Locomotion_Prone_Idle = 0x1e08; // UAnimSequence*
		constexpr auto Locomotion_Crouch_PinOff_Idle = 0x1e10; // UAnimSequence*
		constexpr auto Crouch_UnderThrow_LeverOffGrenade = 0x1e18; // FAnimSlot
		constexpr auto OnChangeThrowingTypeDelegate = 0x1e28; // FMulticastInlineDelegate
		constexpr auto bIsCooked = 0x1e38; // bool
		constexpr auto Prone_UnderThrow_LeverOffGrenade = 0x1e40; // FAnimSlot
		constexpr auto Locomotion_Crouch_Idle_1P = 0x1e50; // UAnimSequence*
		constexpr auto Locomotion_Stand_PinOff_Idle_Additive = 0x1e58; // UAnimSequence*
		constexpr auto Locomotion_Crouch_ThrowUnder_Idle_Additive = 0x1e60; // UAnimSequence*
		constexpr auto RightHandOffset = 0x1e68; // float
		constexpr auto Locomotion_Stand_Idle = 0x1e70; // UAnimSequence*
		constexpr auto GrenadeType = 0x1e78; // EThrowingWeaponType
		constexpr auto Locomotion_Stand_ThrowUnder_Idle_Additive_1P = 0x1e80; // UAnimSequence*
		constexpr auto GrenadeProjectileClass = 0x1e88; // ABravoHotelProjectileGrenade*
		constexpr auto GrenadeThrowDirectionCorrectionValue = 0x1e90; // float
		constexpr auto Locomotion_Prone_PinOff_Idle_ThrowOver = 0x1e98; // UAnimSequence*
		constexpr auto ProjectilePredictTime = 0x1ea0; // float
		constexpr auto Locomotion_Stand_ThrowUnder_Idle_1P = 0x1ea8; // UAnimSequence*
		constexpr auto Crouch_PinOffGrenade = 0x1eb0; // FAnimSlot
		constexpr auto Locomotion_Stand_PinOff_Idle_Additive_1P = 0x1ec0; // UAnimSequence*
		constexpr auto PredictPathThrowingType = 0x1ec8; // EGrenadeThrowingType
		constexpr auto FireDirection = 0x1ecc; // FVector
		constexpr auto Locomotion_Stand_PinOff_Idle_1P = 0x1ed8; // UAnimSequence*
		constexpr auto Locomotion_Stand_PinOff_Idle = 0x1ee0; // UAnimSequence*
		constexpr auto GrenadeHitDamage = 0x1ee8; // float
		constexpr auto UnderThrowGrenade = 0x1ef0; // FAnimSlot
		constexpr auto ThrowEvent = 0x1f00; // UAkAudioEvent*
		constexpr auto SpawnRotationDelta = 0x1f08; // float
		constexpr auto GuidedShotRadius = 0x1f0c; // float
		constexpr auto bNeedAssistantWeapon = 0x1f10; // bool
		constexpr auto UnderThrowDegreeValue = 0x1f14; // float
		constexpr auto GrenadeState = 0x1f18; // EThrowingWeaponState
		constexpr auto SpawnPositionDelta = 0x1f1c; // float
		constexpr auto CookEvent = 0x1f20; // UAkAudioEvent*
		constexpr auto ThrowingType = 0x1f2a; // EGrenadeThrowingType
		constexpr auto Locomotion_Crouch_ThrowUnder_Idle = 0x1f30; // UAnimSequence*
		constexpr auto Locomotion_Stand_Idle_1P = 0x1f38; // UAnimSequence*
		constexpr auto UnderThrowLocationCompensationValue = 0x1f40; // float
		constexpr auto OverThrowGrenadeVelocity = 0x1f44; // float
		constexpr auto AssistantWeaponClass = 0x1f48; // ABravoHotelWeaponBase*
		constexpr auto Locomotion_Crouch_PinOff_Idle_1P = 0x1f50; // UAnimSequence*
		constexpr auto Prone_UnderThrow = 0x1f58; // FAnimSlot
		constexpr auto Crouch_UnderThrowGrenade = 0x1f68; // FAnimSlot
		constexpr auto InterpProjectilePredictPathNormalCurve = 0x1f78; // UCurveFloat*
		constexpr auto GrenadeHitDamageToCharacter = 0x1f80; // float
	}

	namespace n_UParticleModuleRotationOverLifetime {
		constexpr auto RotationOverLife = 0x30; // FRawDistributionFloat
		constexpr auto Scale = 0x60; // char : 1
	}

	namespace n_UNiagaraScript {
		constexpr auto Usage = 0x28; // ENiagaraScriptUsage
		constexpr auto UsageIndex = 0x2c; // int32_t
		constexpr auto UsageId = 0x30; // FGuid
		constexpr auto RapidIterationParameters = 0x40; // FNiagaraParameterStore
		constexpr auto ScriptExecutionParamStore = 0xf8; // FNiagaraScriptExecutionParameterStore
		constexpr auto ScriptExecutionBoundParameters = 0x1d0; // TArray<FNiagaraBoundParameter>
		constexpr auto CachedScriptVMId = 0x1e0; // FNiagaraVMExecutableDataId
		constexpr auto CachedScriptVM = 0x3d8; // FNiagaraVMExecutableData
		constexpr auto CachedParameterCollectionReferences = 0x500; // TArray<UNiagaraParameterCollection*>
		constexpr auto CachedDefaultDataInterfaces = 0x510; // TArray<FNiagaraScriptDataInterfaceInfo>
	}

	namespace n_UBTTask_Wait {
		constexpr auto WaitTime = 0x70; // float
		constexpr auto RandomDeviation = 0x74; // float
	}

	namespace n_UGranularSynth {
		constexpr auto GranulatedSoundWave = 0x710; // USoundWave*
	}

	namespace n_USceneCaptureComponentCube {
		constexpr auto TextureTarget = 0x2c8; // UTextureRenderTargetCube*
		constexpr auto bCaptureRotation = 0x2d0; // bool
		constexpr auto TextureTargetLeft = 0x2d8; // UTextureRenderTargetCube*
		constexpr auto TextureTargetRight = 0x2e0; // UTextureRenderTargetCube*
		constexpr auto TextureTargetODS = 0x2e8; // UTextureRenderTarget2D*
		constexpr auto IPD = 0x2f0; // float
	}

	namespace n_UNavLinkCustomComponent {
		constexpr auto NavLinkUserId = 0xe8; // uint32_t
		constexpr auto EnabledAreaClass = 0xf0; // UNavArea*
		constexpr auto DisabledAreaClass = 0xf8; // UNavArea*
		constexpr auto SupportedAgents = 0x100; // FNavAgentSelector
		constexpr auto LinkRelativeStart = 0x104; // FVector
		constexpr auto LinkRelativeEnd = 0x110; // FVector
		constexpr auto LinkDirection = 0x11c; // ENavLinkDirection
		constexpr auto bLinkEnabled = 0x120; // char : 1
		constexpr auto bNotifyWhenEnabled = 0x120; // char : 1
		constexpr auto bNotifyWhenDisabled = 0x120; // char : 1
		constexpr auto bCreateBoxObstacle = 0x120; // char : 1
		constexpr auto ObstacleOffset = 0x124; // FVector
		constexpr auto ObstacleExtent = 0x130; // FVector
		constexpr auto ObstacleAreaClass = 0x140; // UNavArea*
		constexpr auto BroadcastRadius = 0x148; // float
		constexpr auto BroadcastInterval = 0x14c; // float
		constexpr auto BroadcastChannel = 0x150; // ECollisionChannel
	}

	namespace n_UTextureLODSettings {
		constexpr auto TextureLODGroups = 0x28; // TArray<FTextureLODGroup>
	}

	namespace n_UMapBuildDataRegistry {
		constexpr auto LevelLightingQuality = 0x28; // ELightingBuildQuality
	}

	namespace n_APostProcessVolume {
		constexpr auto Settings = 0x360; // FPostProcessSettings
		constexpr auto Priority = 0x920; // float
		constexpr auto BlendRadius = 0x924; // float
		constexpr auto BlendWeight = 0x928; // float
		constexpr auto bEnabled = 0x92c; // char : 1
		constexpr auto bUnbound = 0x92c; // char : 1
	}

	namespace n_USkinnedMeshComponent {
		constexpr auto SkeletalMesh = 0x4e0; // USkeletalMesh*
		constexpr auto MasterPoseComponent = 0x4e8; // TWeakObjectPtr<USkinnedMeshComponent>
		constexpr auto SkinCacheUsage = 0x4f0; // TArray<ESkinCacheUsage>
		constexpr auto PhysicsAssetOverride = 0x5f8; // UPhysicsAsset*
		constexpr auto ForcedLodModel = 0x600; // int32_t
		constexpr auto MinLodModel = 0x604; // int32_t
		constexpr auto StreamingDistanceMultiplier = 0x610; // float
		constexpr auto LODInfo = 0x620; // TArray<FSkelMeshComponentLODInfo>
		constexpr auto VisibilityBasedAnimTickOption = 0x654; // EVisibilityBasedAnimTickOption
		constexpr auto bOverrideMinLod = 0x656; // char : 1
		constexpr auto bUseBoundsFromMasterPoseComponent = 0x656; // char : 1
		constexpr auto bForceWireframe = 0x656; // char : 1
		constexpr auto bDisplayBones = 0x656; // char : 1
		constexpr auto bDisableMorphTarget = 0x656; // char : 1
		constexpr auto bHideSkin = 0x656; // char : 1
		constexpr auto bPerBoneMotionBlur = 0x657; // char : 1
		constexpr auto bComponentUseFixedSkelBounds = 0x657; // char : 1
		constexpr auto bConsiderAllBodiesForBounds = 0x657; // char : 1
		constexpr auto bSyncAttachParentLOD = 0x657; // char : 1
		constexpr auto bCanHighlightSelectedSections = 0x657; // char : 1
		constexpr auto bRecentlyRendered = 0x657; // char : 1
		constexpr auto bCastCapsuleDirectShadow = 0x657; // char : 1
		constexpr auto bCastCapsuleIndirectShadow = 0x657; // char : 1
		constexpr auto bCPUSkinning = 0x658; // char : 1
		constexpr auto bEnableUpdateRateOptimizations = 0x658; // char : 1
		constexpr auto bDisplayDebugUpdateRateOptimizations = 0x658; // char : 1
		constexpr auto bRenderStatic = 0x658; // char : 1
		constexpr auto bIgnoreMasterPoseComponentLOD = 0x658; // char : 1
		constexpr auto bCachedLocalBoundsUpToDate = 0x658; // char : 1
		constexpr auto bForceMeshObjectUpdate = 0x659; // char : 1
		constexpr auto CapsuleIndirectShadowMinVisibility = 0x65c; // float
		constexpr auto CachedWorldSpaceBounds = 0x670; // FBoxSphereBounds
		constexpr auto CachedWorldToLocalTransform = 0x690; // FMatrix
	}

	namespace n_UMovieSceneEventRepeaterSection {
		constexpr auto Event = 0xe0; // FMovieSceneEvent
	}

	namespace n_UGraphNodeContextMenuContext {
		constexpr auto Blueprint = 0x28; // UBlueprint*
		constexpr auto Graph = 0x30; // UEdGraph*
		constexpr auto Node = 0x38; // UEdGraphNode*
		constexpr auto bIsDebugging = 0x48; // bool
	}

	namespace n_ULowEntryLong {
		constexpr auto Bytes = 0x28; // TArray<char>
	}

	namespace n_UNiagaraDataInterfaceCamera {
		constexpr auto PlayerControllerIndex = 0x30; // int32_t
	}

	namespace n_ABravoHotelRedZone {
		constexpr auto BombData = 0x318; // FRedZoneBombData
		constexpr auto ResetAndStart = 0x358; // bool
		constexpr auto RemainingWarningTime = 0x35c; // float
		constexpr auto CurrentRange = 0x360; // float
		constexpr auto RemainingBombing = 0x364; // int32_t
		constexpr auto AkAudioComponent = 0x378; // UAkComponent*
		constexpr auto StartAudioEvent = 0x380; // UAkAudioEvent*
		constexpr auto EndAudioEvent = 0x388; // UAkAudioEvent*
		constexpr auto pBottonInfoWidget = 0x390; // UUserWidget*
		constexpr auto pTopInfoWidget = 0x398; // UUserWidget*
	}

	namespace n_ABravoHotelAircraftFlight {
		constexpr auto FixedStartingPoint = 0x5d8; // ABravoHotelAircraftPoint*
		constexpr auto bScrambled = 0x5e0; // bool
		constexpr auto AudioEmitter = 0x5e8; // UAkComponent*
		constexpr auto StartFlyingEvent = 0x5f0; // UAkAudioEvent*
		constexpr auto StopFlyingEvent = 0x5f8; // UAkAudioEvent*
		constexpr auto FlyingSoundHandle = 0x600; // FAudioPlayingHandle
		constexpr auto Aircrafts = 0x608; // TArray<ABravoHotelAircraft*>
		constexpr auto AircraftOrdersForEvenFormation = 0x618; // TArray<int32_t>
		constexpr auto AircraftOrdersForOddFormation = 0x628; // TArray<int32_t>
		constexpr auto MovementMethod = 0x638; // EAircraftMovementMethod
		constexpr auto ScramblingDuration = 0x63c; // float
		constexpr auto ScramblingSpeed = 0x640; // float
		constexpr auto DistanceFromBorder = 0x644; // float
		constexpr auto SpeedToChangeAltitude = 0x648; // float
		constexpr auto TargetAltitude = 0x64c; // float
		constexpr auto AltitudeFromTargetAtFirst = 0x650; // float
		constexpr auto CineCamera = 0x658; // UCameraComponent*
		constexpr auto AircraftRoot = 0x660; // USceneComponent*
		constexpr auto CineParticle = 0x668; // UParticleSystemComponent*
		constexpr auto CineCameraSpline = 0x670; // USplineComponent*
		constexpr auto CineDeltaLocation = 0x678; // FVector
		constexpr auto CineInterpSpeed = 0x684; // float
		constexpr auto CineInterpSpeedZ = 0x688; // float
		constexpr auto CinePawn = 0x690; // ABravoHotelCharacter*
		constexpr auto CineController = 0x698; // APlayerController*
		constexpr auto CineCameraBlendTime = 0x6a0; // float
		constexpr auto CineCameraBlendFunction = 0x6a4; // char
		constexpr auto CineCameraBlendExp = 0x6a8; // float
		constexpr auto bUseSplineAnimation = 0x6ac; // bool
		constexpr auto SplineAnimationDelayTime = 0x6b0; // float
		constexpr auto SplineAnimationTime = 0x6b4; // float
		constexpr auto Timeline_SplineInterp = 0x6c0; // FTimeline
		constexpr auto Curve_SplineInterp = 0x758; // UCurveFloat*
		constexpr auto OnStartCinematic = 0x760; // FMulticastInlineDelegate
		constexpr auto OnEndCinematic = 0x770; // FMulticastInlineDelegate
		constexpr auto CinematicSequenceList = 0x780; // TArray<FAircraftCinematic>
		constexpr auto LevelSequenceActor = 0x790; // ALevelSequenceActor*
		constexpr auto OriginLocation = 0x7a0; // FVector
		constexpr auto TargetLocation = 0x7ac; // FVector
		constexpr auto SavedRotation = 0x7b8; // FRotator
		constexpr auto DescentStartPos = 0x7c4; // FVector2D
		constexpr auto DescentEndPos = 0x7cc; // FVector2D
		constexpr auto AircraftsToScramble = 0x7d8; // TArray<ABravoHotelAircraft*>
		constexpr auto WeightMapInfo = 0x838; // UBravoHotelWeightMapData*
		constexpr auto bUseUpdateBloom = 0x868; // bool
		constexpr auto BloomSpeed = 0x86c; // float
		constexpr auto TargetBloomIntensity = 0x870; // float
		constexpr auto IsVisibleStartPoint = 0x874; // bool
		constexpr auto IsVisibleEndPoint = 0x875; // bool
		constexpr auto IsVisibleAircraf = 0x876; // bool
		constexpr auto IsVisibleAircraftLine = 0x877; // bool
		constexpr auto bWantsToDestroy = 0x878; // bool
		constexpr auto State = 0x879; // EAircraftFlightState
	}

	namespace n_ABravoHotelGameMode {
		constexpr auto bFriendlyFire = 0x404; // bool
		constexpr auto PoolingActorComponent = 0x408; // UBravoHotelPoolingActorComponent*
		constexpr auto MapDataTableHandle = 0x410; // FDataTableRowHandle
		constexpr auto PCReceivedPlayerInfos = 0x420; // TMap<FString, APlayerController*>
		constexpr auto TestAIControllerClass = 0x470; // AAIController*
		constexpr auto UsingOuterBlueZone = 0x4e9; // bool
		constexpr auto SelectedPlayZoneName = 0x4ec; // FName
		constexpr auto BlueZoneClass = 0x4f8; // ABravoHotelBlueZone*
		constexpr auto CQRType = 0x500; // FString
		constexpr auto BlueZone = 0x578; // ABravoHotelBlueZone*
	}

	namespace n_UParticleModuleRotationRate {
		constexpr auto StartRotationRate = 0x30; // FRawDistributionFloat
	}

	namespace n_UAISense_Touch {
		constexpr auto RegisteredEvents = 0x80; // TArray<FAITouchEvent>
	}

	namespace n_UAxisPositionGizmo {
		constexpr auto AxisSource = 0x48; // TScriptInterface<IGizmoAxisSource>
		constexpr auto ParameterSource = 0x58; // TScriptInterface<IGizmoFloatParameterSource>
		constexpr auto HitTarget = 0x68; // TScriptInterface<IGizmoClickTarget>
		constexpr auto StateTarget = 0x78; // TScriptInterface<IGizmoStateTarget>
		constexpr auto bEnableSignedAxis = 0x88; // bool
		constexpr auto bInInteraction = 0x89; // bool
		constexpr auto InteractionOrigin = 0x8c; // FVector
		constexpr auto InteractionAxis = 0x98; // FVector
		constexpr auto InteractionStartPoint = 0xa4; // FVector
		constexpr auto InteractionCurPoint = 0xb0; // FVector
		constexpr auto InteractionStartParameter = 0xbc; // float
		constexpr auto InteractionCurParameter = 0xc0; // float
		constexpr auto ParameterSign = 0xc4; // float
	}

	namespace n_UBravoHotelPlayerInfoWidget {
		constexpr auto WidgetSwitcher_Lung = 0x248; // UWidgetSwitcher*
		constexpr auto ProgressBar_Lung = 0x250; // UProgressBar*
		constexpr auto BuffListPanel = 0x2b0; // UUniformGridPanel*
		constexpr auto GameBuffSlot_Boost = 0x2b8; // UBravoHotelGameBuffSlot*
	}

	namespace n_UUserWidget {
		constexpr auto ColorAndOpacity = 0x110; // FLinearColor
		constexpr auto ColorAndOpacityDelegate = 0x120; // FDelegate
		constexpr auto ForegroundColor = 0x130; // FSlateColor
		constexpr auto ForegroundColorDelegate = 0x158; // FDelegate
		constexpr auto Padding = 0x168; // FMargin
		constexpr auto ActiveSequencePlayers = 0x178; // TArray<UUMGSequencePlayer*>
		constexpr auto StoppedSequencePlayers = 0x188; // TArray<UUMGSequencePlayer*>
		constexpr auto NoPixelSnapping = 0x198; // char : 1
		constexpr auto NoPixelSnappingDelegate = 0x19c; // FDelegate
		constexpr auto NamedSlotBindings = 0x1b0; // TArray<FNamedSlotBinding>
		constexpr auto WidgetTree = 0x1c0; // UWidgetTree*
		constexpr auto Priority = 0x1c8; // int32_t
		constexpr auto bSupportsKeyboardFocus = 0x1cc; // char : 1
		constexpr auto bIsFocusable = 0x1cc; // char : 1
		constexpr auto bStopAction = 0x1cc; // char : 1
		constexpr auto bHasScriptImplementedTick = 0x1cc; // char : 1
		constexpr auto bHasScriptImplementedPaint = 0x1cc; // char : 1
		constexpr auto bCookedWidgetTree = 0x1cc; // char : 1
		constexpr auto TickFrequency = 0x1d8; // EWidgetTickFrequency
		constexpr auto InputComponent = 0x1e0; // UInputComponent*
		constexpr auto AnimationCallbacks = 0x1e8; // TArray<FAnimationEventBinding>
	}

	namespace n_UUW-Inventory_Keeped_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Character_BG_Motion = 0x250; // UWidgetAnimation*
		constexpr auto Image_130 = 0x258; // UImage*
		constexpr auto Image_308 = 0x260; // UImage*
		constexpr auto ScrollBox_KeepedList = 0x268; // UScrollBox*
		constexpr auto UW-Inventory_KeepedSlot = 0x270; // UUW-Inventory_KeepedSlot_C*
		constexpr auto UW-Inventory_KeepedSlot_74 = 0x278; // UUW-Inventory_KeepedSlot_C*
		constexpr auto PlayerController = 0x280; // ABP-BravoHotel-PlayerController_C*
	}

	namespace n_UParticleModuleLocationPrimitiveSphere {
		constexpr auto StartRadius = 0xb0; // FRawDistributionFloat
	}

	namespace n_APhysicsConstraintActor {
		constexpr auto ConstraintComp = 0x318; // UPhysicsConstraintComponent*
		constexpr auto ConstraintActor1 = 0x320; // AActor*
		constexpr auto ConstraintActor2 = 0x328; // AActor*
		constexpr auto bDisableCollision = 0x330; // char : 1
	}

	namespace n_ABravoHotelCoherentTestHUD {
		constexpr auto MyWidgetClass = 0x420; // UUserWidget*
		constexpr auto ChangeCloseInvenDelegate = 0x438; // FMulticastInlineDelegate
		constexpr auto ChangeWeaponDelegate = 0x448; // FMulticastInlineDelegate
		constexpr auto SendTriggerDelegate = 0x458; // FMulticastInlineDelegate
	}

	namespace n_ABravoHotelSpectatorPawn {
		constexpr auto TargetPawn = 0x3b0; // APawn*
	}

	namespace n_UUW-Inventory_CarriedSlot_C {
		constexpr auto UberGraphFrame = 0x1358; // FPointerToUberGraphFrame
		constexpr auto Ani_Tutorial_Glow = 0x1360; // UWidgetAnimation*
		constexpr auto C_Slot_Up_Arrow = 0x1368; // UWidgetAnimation*
		constexpr auto C_SlotHover_ItemState_Hide = 0x1370; // UWidgetAnimation*
		constexpr auto C_SlotHover_ItemState_Show = 0x1378; // UWidgetAnimation*
		constexpr auto C_SlotHover = 0x1380; // UWidgetAnimation*
		constexpr auto BGImage = 0x1388; // UImage*
		constexpr auto BGImage_2 = 0x1390; // UImage*
		constexpr auto CanvasPanel_ITemState = 0x1398; // UCanvasPanel*
		constexpr auto Count120 = 0x13a0; // UTextBlock*
		constexpr auto Crate_Default = 0x13a8; // UImage*
		constexpr auto Crate_Hover = 0x13b0; // UImage*
		constexpr auto Effect_Booster = 0x13b8; // UImage*
		constexpr auto Effect_Capsule = 0x13c0; // UImage*
		constexpr auto HorizontalBox_Rarity = 0x13c8; // UHorizontalBox*
		constexpr auto HoverImage = 0x13d0; // UImage*
		constexpr auto HoverImage_Round = 0x13d8; // UImage*
		constexpr auto Image_531 = 0x13e0; // UImage*
		constexpr auto Image_539 = 0x13e8; // UImage*
		constexpr auto Image_540 = 0x13f0; // UImage*
		constexpr auto Image_541 = 0x13f8; // UImage*
		constexpr auto Image_542 = 0x1400; // UImage*
		constexpr auto Image_543 = 0x1408; // UImage*
		constexpr auto Image_544 = 0x1410; // UImage*
		constexpr auto Image_Bindable = 0x1418; // UImage*
		constexpr auto Image_Supply = 0x1420; // UImage*
		constexpr auto ItemImage = 0x1428; // UImage*
		constexpr auto ItemState_Text = 0x1430; // UTextBlock*
		constexpr auto KeepedItem_List = 0x1438; // UImage*
		constexpr auto KeepedItem_ListHover = 0x1440; // UImage*
		constexpr auto LvColor = 0x1448; // UImage*
		constexpr auto Motion = 0x1450; // UImage*
		constexpr auto ProgressBar_309 = 0x1458; // UProgressBar*
		constexpr auto SizeBox_1 = 0x1460; // USizeBox*
		constexpr auto TextBlock_3 = 0x1468; // UTextBlock*
		constexpr auto Tutorial_Glow = 0x1470; // UImage*
		constexpr auto UW-MouseRightClick_Big = 0x1478; // UUW-MouseRightClick_C*
		constexpr auto UW-MouseRightClick_Small = 0x1480; // UUW-MouseRightClick_C*
		constexpr auto WeaponColorBg = 0x1488; // UImage*
		constexpr auto WeaponEquipItem_Default = 0x1490; // UImage*
		constexpr auto WeaponEquipItem_Hover = 0x1498; // UImage*
		constexpr auto WeaponItemImage = 0x14a0; // UImage*
		constexpr auto InventoryItemInfoIndex = 0x14a8; // int32_t
		constexpr auto MedicalBGColor = 0x14ac; // FLinearColor
		constexpr auto CurCount = 0x14bc; // int32_t
		constexpr auto SetSlotInfo = 0x14c0; // FMulticastInlineDelegate
		constexpr auto CanUseCapsule = 0x14d0; // bool
		constexpr auto SelectedHoverImage = 0x14d8; // UImage*
		constexpr auto ShowRarityStar = 0x14e0; // TArray<FName>
		constexpr auto ShowIconBG = 0x14f0; // TArray<FName>
	}

	namespace n_UBravoHotelBlueZoneGameRule {
		constexpr auto BluezoneStartEvent = 0xd0; // UAkAudioEvent*
		constexpr auto BluezoneEndEvent = 0xd8; // UAkAudioEvent*
	}

	namespace n_APaperTileMapActor {
		constexpr auto RenderComponent = 0x318; // UPaperTileMapComponent*
	}

	namespace n_UNiagaraDataInterfaceGrid3D {
		constexpr auto NumVoxels = 0xd0; // FIntVector
		constexpr auto VoxelSize = 0xdc; // float
		constexpr auto SetGridFromVoxelSize = 0xe0; // bool
		constexpr auto WorldBBoxSize = 0xe4; // FVector
	}

	namespace n_UParticleSystem {
		constexpr auto UpdateTime_FPS = 0x30; // float
		constexpr auto UpdateTime_Delta = 0x34; // float
		constexpr auto WarmupTime = 0x38; // float
		constexpr auto WarmupTickRate = 0x3c; // float
		constexpr auto Emitters = 0x40; // TArray<UParticleEmitter*>
		constexpr auto PreviewComponent = 0x50; // UParticleSystemComponent*
		constexpr auto CurveEdSetup = 0x58; // UInterpCurveEdSetup*
		constexpr auto LODDistanceCheckTime = 0x60; // float
		constexpr auto MacroUVRadius = 0x64; // float
		constexpr auto LODDistances = 0x68; // TArray<float>
		constexpr auto LODSettings = 0x78; // TArray<FParticleSystemLOD>
		constexpr auto FixedRelativeBoundingBox = 0x88; // FBox
		constexpr auto SecondsBeforeInactive = 0xa4; // float
		constexpr auto Delay = 0xa8; // float
		constexpr auto DelayLow = 0xac; // float
		constexpr auto bOrientZAxisTowardCamera = 0xb0; // char : 1
		constexpr auto bUseFixedRelativeBoundingBox = 0xb0; // char : 1
		constexpr auto bShouldResetPeakCounts = 0xb0; // char : 1
		constexpr auto bHasPhysics = 0xb0; // char : 1
		constexpr auto bUseRealtimeThumbnail = 0xb0; // char : 1
		constexpr auto ThumbnailImageOutOfDate = 0xb0; // char : 1
		constexpr auto bUseDelayRange = 0xb1; // char : 1
		constexpr auto bAllowManagedTicking = 0xb1; // char : 1
		constexpr auto bAutoDeactivate = 0xb1; // char : 1
		constexpr auto bRegenerateLODDuplicate = 0xb1; // char : 1
		constexpr auto SystemUpdateMode = 0xb2; // EParticleSystemUpdateMode
		constexpr auto LODMethod = 0xb3; // ParticleSystemLODMethod
		constexpr auto InsignificantReaction = 0xb4; // EParticleSystemInsignificanceReaction
		constexpr auto OcclusionBoundsMethod = 0xb5; // EParticleSystemOcclusionBoundsMethod
		constexpr auto MaxSignificanceLevel = 0xb7; // EParticleSignificanceLevel
		constexpr auto MinTimeBetweenTicks = 0xb8; // uint32_t
		constexpr auto InsignificanceDelay = 0xbc; // float
		constexpr auto MacroUVPosition = 0xc0; // FVector
		constexpr auto CustomOcclusionBounds = 0xcc; // FBox
		constexpr auto SoloTracking = 0xe8; // TArray<FLODSoloTrack>
		constexpr auto NamedMaterialSlots = 0xf8; // TArray<FNamedEmitterMaterial>
	}

	namespace n_ABravoHotelWaterPhysicsVolume {
		constexpr auto InWaterParticle = 0x360; // UParticleSystem*
	}

	namespace n_USphereComponent {
		constexpr auto SphereRadius = 0x4c8; // float
	}

	namespace n_UMaterialExpressionCeil {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_APhysicsThruster {
		constexpr auto ThrusterComponent = 0x318; // UPhysicsThrusterComponent*
	}

	namespace n_UButtonStyleAsset {
		constexpr auto ButtonStyle = 0x28; // FButtonStyle
	}

	namespace n_UEnvQueryGenerator_Cone {
		constexpr auto AlignedPointsDistance = 0x80; // FAIDataProviderFloatValue
		constexpr auto ConeDegrees = 0xb8; // FAIDataProviderFloatValue
		constexpr auto AngleStep = 0xf0; // FAIDataProviderFloatValue
		constexpr auto Range = 0x128; // FAIDataProviderFloatValue
		constexpr auto CenterActor = 0x160; // UEnvQueryContext*
		constexpr auto bIncludeContextLocation = 0x168; // char : 1
	}

	namespace n_UABP-FPSK_Arms_C {
		constexpr auto UberGraphFrame = 0x700; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x708; // FAnimNode_Root
		constexpr auto AnimGraphNode_LocalToComponentSpace_11 = 0x738; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_TransitionResult_59 = 0x758; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_58 = 0x780; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_57 = 0x7a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_56 = 0x7d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_55 = 0x7f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_54 = 0x820; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_53 = 0x848; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_52 = 0x870; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_51 = 0x898; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_50 = 0x8c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_49 = 0x8e8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_48 = 0x910; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_47 = 0x938; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_46 = 0x960; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_45 = 0x988; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_44 = 0x9b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_43 = 0x9d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_42 = 0xa00; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_41 = 0xa28; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_40 = 0xa50; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_129 = 0xa78; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_36 = 0xaf0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_128 = 0xb20; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_35 = 0xb98; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_127 = 0xbc8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_34 = 0xc40; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_9 = 0xc70; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_StateResult_33 = 0xd20; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_39 = 0xd50; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_38 = 0xd78; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_27 = 0xda0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_126 = 0xe80; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_4 = 0xef8; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SequencePlayer_125 = 0xfc0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_26 = 0x1038; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendSpacePlayer_26 = 0x10e8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_25 = 0x11c8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_25 = 0x12a8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendSpacePlayer_24 = 0x1358; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_32 = 0x1438; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_23 = 0x1468; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_24 = 0x1548; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace = 0x15e8; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_ModifyBone_15 = 0x1770; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_14 = 0x1878; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_TwoBoneIK_9 = 0x1980; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_TwoBoneIK_8 = 0x1b60; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_SequencePlayer_124 = 0x1d40; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_7 = 0x1db8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TransitionResult_37 = 0x1e78; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_36 = 0x1ea0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_35 = 0x1ec8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_34 = 0x1ef0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_33 = 0x1f18; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_32 = 0x1f40; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_123 = 0x1f68; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_31 = 0x1fe0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_122 = 0x2010; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_30 = 0x2088; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_121 = 0x20b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_29 = 0x2130; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_8 = 0x2160; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_ComponentToLocalSpace_11 = 0x2210; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_10 = 0x2230; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_Fabrik_2 = 0x2250; // FAnimNode_Fabrik
		constexpr auto AnimGraphNode_Fabrik = 0x23e0; // FAnimNode_Fabrik
		constexpr auto AnimGraphNode_StateResult_28 = 0x2570; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_7 = 0x25a0; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_StateResult_27 = 0x2650; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_31 = 0x2680; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_30 = 0x26a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_29 = 0x26d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_120 = 0x26f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_26 = 0x2770; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_22 = 0x27a0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_25 = 0x2880; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_119 = 0x28b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_24 = 0x2928; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_6 = 0x2958; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_StateResult_23 = 0x2a08; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_28 = 0x2a38; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_27 = 0x2a60; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_26 = 0x2a88; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_25 = 0x2ab0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_21 = 0x2ad8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_22 = 0x2bb8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_20 = 0x2be8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_21 = 0x2cc8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_5 = 0x2cf8; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_StateResult_20 = 0x2da8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_24 = 0x2dd8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_23 = 0x2e00; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_118 = 0x2e28; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_19 = 0x2ea0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_117 = 0x2ed0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_18 = 0x2f48; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_4 = 0x2f78; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_StateResult_17 = 0x3028; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_3 = 0x3058; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_StateResult_16 = 0x3108; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_22 = 0x3138; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_116 = 0x3160; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_23 = 0x31d8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_115 = 0x3278; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_114 = 0x32f0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_113 = 0x3368; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_24 = 0x33e0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_112 = 0x3490; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_15 = 0x3508; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_111 = 0x3538; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_22 = 0x35b0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_110 = 0x3650; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_109 = 0x36c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_108 = 0x3740; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_23 = 0x37b8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_107 = 0x3868; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_14 = 0x38e0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_106 = 0x3910; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_105 = 0x3988; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_104 = 0x3a00; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_22 = 0x3a78; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_103 = 0x3b28; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_13 = 0x3ba0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_ApplyAdditive_3 = 0x3bd0; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SequencePlayer_102 = 0x3c98; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_101 = 0x3d10; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot_13 = 0x3d88; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_12 = 0x3dd0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByEnum_21 = 0x3e18; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_100 = 0x3ec8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_99 = 0x3f40; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_98 = 0x3fb8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_97 = 0x4030; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_96 = 0x40a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_95 = 0x4120; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_94 = 0x4198; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_93 = 0x4210; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_92 = 0x4288; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_20 = 0x4300; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_TwoWayBlend_6 = 0x43b0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_ApplyAdditive_2 = 0x4478; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SequencePlayer_91 = 0x4540; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TransitionResult_21 = 0x45b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_20 = 0x45e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_19 = 0x4608; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_18 = 0x4630; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_17 = 0x4658; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_16 = 0x4680; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_15 = 0x46a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_14 = 0x46d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_13 = 0x46f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_12 = 0x4720; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_11 = 0x4748; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_10 = 0x4770; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_9 = 0x4798; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_8 = 0x47c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_7 = 0x47e8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_6 = 0x4810; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_5 = 0x4838; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_4 = 0x4860; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_3 = 0x4888; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x48b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult = 0x48d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_90 = 0x4900; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_12 = 0x4978; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_89 = 0x49a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_88 = 0x4a20; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_87 = 0x4a98; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_86 = 0x4b10; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_85 = 0x4b88; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_84 = 0x4c00; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_83 = 0x4c78; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_82 = 0x4cf0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_81 = 0x4d68; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_19 = 0x4de0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_StateResult_11 = 0x4e90; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_80 = 0x4ec0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_79 = 0x4f38; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_78 = 0x4fb0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_77 = 0x5028; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_76 = 0x50a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_75 = 0x5118; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_74 = 0x5190; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_18 = 0x5208; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_73 = 0x52b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_10 = 0x5330; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_72 = 0x5360; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_71 = 0x53d8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_70 = 0x5450; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_69 = 0x54c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_68 = 0x5540; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_67 = 0x55b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_17 = 0x5630; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_66 = 0x56e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_65 = 0x5758; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_9 = 0x57d0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_64 = 0x5800; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_63 = 0x5878; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_62 = 0x58f0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_61 = 0x5968; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_60 = 0x59e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_59 = 0x5a58; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_58 = 0x5ad0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_16 = 0x5b48; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_57 = 0x5bf8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_8 = 0x5c70; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_56 = 0x5ca0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_55 = 0x5d18; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_54 = 0x5d90; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_53 = 0x5e08; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_52 = 0x5e80; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_51 = 0x5ef8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_15 = 0x5f70; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_50 = 0x6020; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_49 = 0x6098; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_7 = 0x6110; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_48 = 0x6140; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_21 = 0x61b8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_47 = 0x6258; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_46 = 0x62d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_14 = 0x6348; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_45 = 0x63f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_44 = 0x6470; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_43 = 0x64e8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_42 = 0x6560; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_41 = 0x65d8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_40 = 0x6650; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_13 = 0x66c8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_39 = 0x6778; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_6 = 0x67f0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_38 = 0x6820; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_20 = 0x6898; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_37 = 0x6938; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_36 = 0x69b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_12 = 0x6a28; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_35 = 0x6ad8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_34 = 0x6b50; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_33 = 0x6bc8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_32 = 0x6c40; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_31 = 0x6cb8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_11 = 0x6d30; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_30 = 0x6de0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_29 = 0x6e58; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_5 = 0x6ed0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_28 = 0x6f00; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_19 = 0x6f78; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_19 = 0x7018; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_18 = 0x70f8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LayeredBoneBlend_6 = 0x7198; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_27 = 0x7258; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_18 = 0x72d0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_26 = 0x73b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_25 = 0x7428; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_10 = 0x74a0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_TwoWayBlend_5 = 0x7550; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_17 = 0x7618; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_24 = 0x76f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_9 = 0x7770; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendSpacePlayer_16 = 0x7820; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_15 = 0x7900; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_8 = 0x79e0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendSpacePlayer_14 = 0x7a90; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_4 = 0x7b70; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_23 = 0x7ba0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_17 = 0x7c18; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_10 = 0x7cb8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_9 = 0x7cd8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_13 = 0x7cf8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_BlendSpacePlayer_13 = 0x7e00; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_16 = 0x7ee0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_12 = 0x7f80; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_22 = 0x8060; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_21 = 0x80d8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_7 = 0x8150; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_TwoWayBlend_4 = 0x8200; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_11 = 0x82c8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_15 = 0x83a8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_10 = 0x8448; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_20 = 0x8528; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_6 = 0x85a0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendSpacePlayer_9 = 0x8650; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_8 = 0x8730; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_5 = 0x8810; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendSpacePlayer_7 = 0x88c0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_3 = 0x89a0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_19 = 0x89d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_14 = 0x8a48; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_6 = 0x8ae8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_13 = 0x8bc8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LayeredBoneBlend_5 = 0x8c68; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_18 = 0x8d28; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_17 = 0x8da0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_16 = 0x8e18; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_5 = 0x8e90; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByInt = 0x8f70; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_BlendSpacePlayer_4 = 0x9010; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_15 = 0x90f0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_14 = 0x9168; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_4 = 0x91e0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_TwoWayBlend_3 = 0x9290; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_13 = 0x9358; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_12 = 0x93d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_11 = 0x9448; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_10 = 0x94c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_9 = 0x9538; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_8 = 0x95b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_7 = 0x9628; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_6 = 0x96a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_3 = 0x9718; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_12 = 0x97c8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_3 = 0x9868; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0x9948; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x99c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_2 = 0x9a38; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendSpacePlayer_2 = 0x9ae8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer = 0x9bc8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByEnum = 0x9ca8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_StateResult_2 = 0x9d58; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_2 = 0x9d88; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_StateResult = 0x9e38; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x9e68; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SaveCachedPose_14 = 0x9f18; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_CopyPoseFromMesh = 0x9fd0; // FAnimNode_CopyPoseFromMesh
		constexpr auto AnimGraphNode_LayeredBoneBlend_4 = 0xa110; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SaveCachedPose_13 = 0xa1d0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_27 = 0xa288; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_12 = 0xa2b0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_26 = 0xa368; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ModifyBone_12 = 0xa390; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_9 = 0xa498; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_SaveCachedPose_11 = 0xa4b8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_ComponentToLocalSpace_8 = 0xa570; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_8 = 0xa590; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_7 = 0xa5b0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_SaveCachedPose_10 = 0xa5d0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_9 = 0xa688; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_LocalToComponentSpace_7 = 0xa740; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_TwoBoneIK_7 = 0xa760; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_TwoBoneIK_6 = 0xa940; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_UseCachedPose_25 = 0xab20; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ModifyBone_11 = 0xab48; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_BlendListByBool_11 = 0xac50; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TwoWayBlend_2 = 0xacf0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SaveCachedPose_8 = 0xadb8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_ModifyBone_10 = 0xae70; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_BlendListByBool_10 = 0xaf78; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LayeredBoneBlend_3 = 0xb018; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_24 = 0xb0d8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_CopyBone_2 = 0xb100; // FAnimNode_CopyBone
		constexpr auto AnimGraphNode_ApplyAdditive = 0xb1f0; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0xb2b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0xb330; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SaveCachedPose_7 = 0xb3a8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_23 = 0xb460; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_6 = 0xb488; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_ModifyBone_9 = 0xb540; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_BlendListByBool_9 = 0xb648; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_6 = 0xb6e8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_6 = 0xb708; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_SaveCachedPose_5 = 0xb728; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_22 = 0xb7e0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_CopyBone = 0xb808; // FAnimNode_CopyBone
		constexpr auto AnimGraphNode_ModifyBone_8 = 0xb8f8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_BlendListByBool_8 = 0xba00; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_Slot_11 = 0xbaa0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_10 = 0xbae8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_9 = 0xbb30; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_8 = 0xbb78; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByBool_7 = 0xbbc0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_21 = 0xbc60; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Slot_7 = 0xbc88; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_6 = 0xbcd0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_ModifyBone_7 = 0xbd18; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_6 = 0xbe20; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_UseCachedPose_20 = 0xbf28; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ModifyBone_5 = 0xbf50; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_5 = 0xc058; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_SaveCachedPose_4 = 0xc078; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_ComponentToLocalSpace_5 = 0xc130; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_UseCachedPose_19 = 0xc150; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LocalToComponentSpace_4 = 0xc178; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_TwoBoneIK_5 = 0xc1a0; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_ComponentToLocalSpace_4 = 0xc380; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_Slot_5 = 0xc3a0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_LayeredBoneBlend_2 = 0xc3e8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_18 = 0xc4a8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Slot_4 = 0xc4d0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_LayeredBoneBlend = 0xc518; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_17 = 0xc5d8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_16 = 0xc600; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_6 = 0xc628; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_15 = 0xc6c8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_TwoWayBlend = 0xc6f0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_ComponentToLocalSpace_3 = 0xc7b8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_3 = 0xc7d8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_SaveCachedPose_3 = 0xc7f8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_5 = 0xc8b0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_14 = 0xc950; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_TwoBoneIK_4 = 0xc980; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_TwoBoneIK_3 = 0xcb60; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_ModifyBone_4 = 0xcd40; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_3 = 0xce48; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_Slot_3 = 0xcf50; // FAnimNode_Slot
		constexpr auto AnimGraphNode_TwoBoneIK_2 = 0xcfa0; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_BlendListByBool_4 = 0xd180; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ModifyBone_2 = 0xd220; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_2 = 0xd328; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_2 = 0xd348; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_BlendListByBool_3 = 0xd368; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_Slot_2 = 0xd408; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot = 0xd450; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SaveCachedPose_2 = 0xd498; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_13 = 0xd550; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_12 = 0xd578; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_11 = 0xd5a0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_10 = 0xd5c8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_9 = 0xd5f0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_8 = 0xd618; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_7 = 0xd640; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_6 = 0xd668; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_5 = 0xd690; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_4 = 0xd6b8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0xd6e0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer = 0xd780; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ModifyBone = 0xd7f8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_TwoBoneIK = 0xd900; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0xdae0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0xdb00; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_SaveCachedPose = 0xdb20; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_3 = 0xdbd8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0xdc00; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool = 0xdc28; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose = 0xdcc8; // FAnimNode_UseCachedPose
	}

	namespace n_UBravoHotelCompassUnitWidget {
		constexpr auto Angle = 0x248; // float
	}

	namespace n_UFSM_SetState_ConditionalAsync {
		constexpr auto Target = 0x30; // UStateMachineComponent*
		constexpr auto Conditional = 0x38; // FSM_Transition
		constexpr auto StateName = 0x3c; // FName
		constexpr auto Timer = 0x44; // float
		constexpr auto Repeat = 0x48; // bool
		constexpr auto TimerHandle = 0x50; // FTimerHandle
		constexpr auto OnSuccess = 0x58; // FMulticastInlineDelegate
		constexpr auto OnAborted = 0x68; // FMulticastInlineDelegate
	}

	namespace n_UEditableTextBoxWidgetStyle {
		constexpr auto EditableTextBoxStyle = 0x30; // FEditableTextBoxStyle
	}

	namespace n_UMaterialExpressionReflectionVectorWS {
		constexpr auto CustomWorldNormal = 0x40; // FExpressionInput
		constexpr auto bNormalizeCustomWorldNormal = 0x54; // char : 1
	}

	namespace n_USoundNodeDialoguePlayer {
		constexpr auto DialogueWaveParameter = 0x48; // FDialogueWaveParameter
		constexpr auto bLooping = 0x68; // char : 1
	}

	namespace n_UNiagaraSpriteRendererProperties {
		constexpr auto Material = 0x50; // UMaterialInterface*
		constexpr auto MaterialUserParamBinding = 0x58; // FNiagaraUserParameterBinding
		constexpr auto Alignment = 0x80; // ENiagaraSpriteAlignment
		constexpr auto FacingMode = 0x81; // ENiagaraSpriteFacingMode
		constexpr auto PivotInUVSpace = 0x84; // FVector2D
		constexpr auto SortMode = 0x8c; // ENiagaraSortMode
		constexpr auto SubImageSize = 0x90; // FVector2D
		constexpr auto bSubImageBlend = 0x98; // char : 1
		constexpr auto bRemoveHMDRollInVR = 0x98; // char : 1
		constexpr auto bSortOnlyWhenTranslucent = 0x98; // char : 1
		constexpr auto MinFacingCameraBlendDistance = 0x9c; // float
		constexpr auto MaxFacingCameraBlendDistance = 0xa0; // float
		constexpr auto PositionBinding = 0xa8; // FNiagaraVariableAttributeBinding
		constexpr auto ColorBinding = 0x120; // FNiagaraVariableAttributeBinding
		constexpr auto VelocityBinding = 0x198; // FNiagaraVariableAttributeBinding
		constexpr auto SpriteRotationBinding = 0x210; // FNiagaraVariableAttributeBinding
		constexpr auto SpriteSizeBinding = 0x288; // FNiagaraVariableAttributeBinding
		constexpr auto SpriteFacingBinding = 0x300; // FNiagaraVariableAttributeBinding
		constexpr auto SpriteAlignmentBinding = 0x378; // FNiagaraVariableAttributeBinding
		constexpr auto SubImageIndexBinding = 0x3f0; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterialBinding = 0x468; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial1Binding = 0x4e0; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial2Binding = 0x558; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial3Binding = 0x5d0; // FNiagaraVariableAttributeBinding
		constexpr auto CameraOffsetBinding = 0x648; // FNiagaraVariableAttributeBinding
		constexpr auto UVScaleBinding = 0x6c0; // FNiagaraVariableAttributeBinding
		constexpr auto MaterialRandomBinding = 0x738; // FNiagaraVariableAttributeBinding
		constexpr auto CustomSortingBinding = 0x7b0; // FNiagaraVariableAttributeBinding
		constexpr auto NormalizedAgeBinding = 0x828; // FNiagaraVariableAttributeBinding
	}

	namespace n_ALandscapeStreamingProxy {
		constexpr auto LandscapeActor = 0x6c8; // LazyObjectProperty
	}

	namespace n_UChaosPhysicalMaterial {
		constexpr auto Friction = 0x28; // float
		constexpr auto StaticFriction = 0x2c; // float
		constexpr auto Restitution = 0x30; // float
		constexpr auto LinearEtherDrag = 0x34; // float
		constexpr auto AngularEtherDrag = 0x38; // float
		constexpr auto SleepingLinearVelocityThreshold = 0x3c; // float
		constexpr auto SleepingAngularVelocityThreshold = 0x40; // float
	}

	namespace n_UUW-BlackMarket_Character_C {
		constexpr auto IMG-BlackMarketCharacter = 0x248; // UImage*
	}

	namespace n_UUW-PlayerIconWidget_OnFire_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Anim_OnFire = 0x250; // UWidgetAnimation*
		constexpr auto FireLine = 0x258; // UImage*
	}

	namespace n_AMK3DUserInterfaceManager {
		constexpr auto WidgetInfoArray = 0x318; // TArray<FUserWidgetInfoForReplay_T>
		constexpr auto ReplayWidgetMap = 0x328; // TMap<FString, UUserWidget*>
	}

	namespace n_UInAppPurchaseQueryCallbackProxy {
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_ABravoHotelDoor {
		constexpr auto RootNode = 0x320; // USceneComponent*
		constexpr auto MoveNode = 0x328; // USceneComponent*
		constexpr auto StaticMesh = 0x330; // UStaticMeshComponent*
		constexpr auto PlayerInteractiveBox = 0x338; // UBoxComponent*
		constexpr auto PushBox = 0x340; // UBoxComponent*
		constexpr auto ForwardArrow = 0x348; // UArrowComponent*
		constexpr auto InDoorNetCullDistanceSquared = 0x350; // float
		constexpr auto OutDoorNetCullDistanceSquared = 0x354; // float
		constexpr auto DestructibleMesh = 0x358; // UDestructibleComponent*
		constexpr auto DestructibleMeshTest = 0x360; // UDestructibleMesh*
		constexpr auto DestructibleMeshRef = 0x368; // TSoftObjectPtr<UDestructibleMesh>
		constexpr auto bIsDestructible = 0x390; // bool
		constexpr auto MaxHp = 0x394; // float
		constexpr auto CurrentHP = 0x398; // float
		constexpr auto bIsMeshCreated = 0x39c; // bool
		constexpr auto ChunkCount = 0x39d; // char
		constexpr auto DestructPointStack = 0x3a0; // TArray<float>
		constexpr auto DestructedPoint = 0x3b0; // TArray<FVector>
		constexpr auto bOverrideMaterial = 0x3c0; // bool
		constexpr auto DestructibleMaterial = 0x3c8; // UMaterialInterface*
		constexpr auto TimerHandle_DestroyComponents = 0x3d0; // FTimerHandle
		constexpr auto FadeAlphaCurve = 0x3d8; // UCurveFloat*
		constexpr auto FadeTimeline = 0x3e0; // FTimeline
		constexpr auto FadeMaterial = 0x478; // UMaterialInstanceDynamic*
		constexpr auto DoorState = 0x480; // EDoorState
		constexpr auto bIsOpenedFromFront = 0x481; // bool
		constexpr auto OpenCurve = 0x488; // UCurveFloat*
		constexpr auto CloseCurve = 0x490; // UCurveFloat*
		constexpr auto DefaultDoorRotation = 0x5cc; // FRotator
		constexpr auto AkSound_Open = 0x650; // UAkAudioEvent*
		constexpr auto AkSound_StartClose = 0x658; // UAkAudioEvent*
		constexpr auto AkSound_Melee = 0x660; // UAkAudioEvent*
		constexpr auto AKSound_Kicked = 0x668; // UAkAudioEvent*
		constexpr auto AKSound_Destructed = 0x670; // UAkAudioEvent*
		constexpr auto DoorSoundType = 0x678; // EDoorSoundType
		constexpr auto AudioPortalComponent = 0x680; // UBravoHotelAudioPortalComponent*
		constexpr auto bKeepOpenAudioPortal = 0x688; // bool
		constexpr auto KickedParticle = 0x690; // UParticleSystem*
		constexpr auto KickedParticleSystem = 0x698; // UParticleSystemComponent*
		constexpr auto KickImpulseStrength = 0x6a0; // float
		constexpr auto OverlappingPlayersInPushBox = 0x6b8; // TArray<ABravoHotelCharacter*>
		constexpr auto DamageCorrectValues = 0x6f0; // TMap<UBravoHotelDamageType*, float>
	}

	namespace n_UBravoHotelVehicleSeatCollisionComponent {
		constexpr auto SeatNum = 0x4d0; // int32_t
	}

	namespace n_ACrossActor {
		constexpr auto UniqueKey = 0x328; // FString
		constexpr auto SideActors = 0x338; // TArray<FCrossActorManager>
		constexpr auto SideMeshes = 0x348; // TArray<FCrossMeshManager>
	}

	namespace n_UNavCollisionBase {
		constexpr auto bIsDynamicObstacle = 0x28; // char : 1
	}

	namespace n_UCustomizableInstancePrivateData {
		constexpr auto GeneratedMaterials = 0x30; // TArray<FGeneratedMaterial>
		constexpr auto GeneratedMeshes = 0x40; // TArray<FGeneratedMesh>
		constexpr auto GeneratedTextures = 0x50; // TArray<FGeneratedTexture>
		constexpr auto ParameterDecorations = 0xe8; // TArray<FParameterDecorations>
		constexpr auto TextureReuseCache = 0x108; // TMap<FString, TWeakObjectPtr<UTexture2D>>
		constexpr auto ReferencedMaterials = 0x320; // TArray<UMaterialInterface*>
		constexpr auto PhysicsAssetsToMerge = 0x3d0; // TArray<UPhysicsAsset*>
	}

	namespace n_UMaterialExpressionRuntimeVirtualTextureReplace {
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto VirtualTextureOutput = 0x54; // FExpressionInput
	}

	namespace n_UBTTaskNode {
		constexpr auto Services = 0x58; // TArray<UBTService*>
		constexpr auto bIgnoreRestartSelf = 0x68; // char : 1
	}

	namespace n_ULowEntryBitDataWriter {
		constexpr auto Bytes = 0x28; // TArray<char>
		constexpr auto CurrentByte = 0x38; // char
		constexpr auto CurrentBytePosition = 0x3c; // int32_t
	}

	namespace n_UMaterialExpressionDistanceToNearestSurface {
		constexpr auto Position = 0x40; // FExpressionInput
	}

	namespace n_UMovieSceneNiagaraSystemSpawnSection {
		constexpr auto SectionStartBehavior = 0xe0; // ENiagaraSystemSpawnSectionStartBehavior
		constexpr auto SectionEvaluateBehavior = 0xe4; // ENiagaraSystemSpawnSectionEvaluateBehavior
		constexpr auto SectionEndBehavior = 0xe8; // ENiagaraSystemSpawnSectionEndBehavior
		constexpr auto AgeUpdateMode = 0xec; // ENiagaraAgeUpdateMode
	}

	namespace n_UUW-Lobby_Craft_Recipe_Weapon_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto HorizontalBox_Rarity = 0x250; // UHorizontalBox*
		constexpr auto HorizontalBox_Rarity_NotOwn = 0x258; // UHorizontalBox*
		constexpr auto Image_310 = 0x260; // UImage*
		constexpr auto Image_Weapon_6Grade_bg = 0x268; // UImage*
		constexpr auto Img_Icon = 0x270; // UImage*
		constexpr auto RetainerBox_2 = 0x278; // URetainerBox*
		constexpr auto T_CurrentCount = 0x280; // UTextBlock*
		constexpr auto T_Level = 0x288; // UTextBlock*
		constexpr auto T_MaxCount = 0x290; // UTextBlock*
		constexpr auto WidgetSwitcher_Rarity = 0x298; // UWidgetSwitcher*
		constexpr auto ItemWeaponID = 0x2a0; // int32_t
		constexpr auto WeaponInfo = 0x2a8; // FBravoHotelWeaponInfo
		constexpr auto WeaponItemInfo = 0xdd0; // FInventoryItemInfo
		constexpr auto CurrentCount = 0xe68; // int32_t
	}

	namespace n_ULevelCapture {
		constexpr auto bAutoStartCapture = 0x220; // bool
		constexpr auto PrerequisiteActorId = 0x22c; // FGuid
	}

	namespace n_UWidgetAnimation {
		constexpr auto MovieScene = 0x348; // UMovieScene*
		constexpr auto AnimationBindings = 0x350; // TArray<FWidgetAnimationBinding>
		constexpr auto bLegacyFinishOnStop = 0x360; // bool
		constexpr auto DisplayLabel = 0x368; // FString
	}

	namespace n_UBravoHotelMiniMapWidget {
		constexpr auto RemaingTimeToActivate = 0x250; // UTextBlock*
	}

	namespace n_UAndroidPermissionCallbackProxy {
		constexpr auto OnPermissionsGrantedDynamicDelegate = 0x28; // FMulticastInlineDelegate
	}

	namespace n_UBHBDoorBreaching {
		constexpr auto TimerHandle_EndBuff = 0x2b8; // FTimerHandle
	}

	namespace n_UGameplayTagsSettings {
		constexpr auto ImportTagsFromConfig = 0x48; // bool
		constexpr auto WarnOnInvalidTags = 0x49; // bool
		constexpr auto FastReplication = 0x4a; // bool
		constexpr auto InvalidTagCharacters = 0x50; // FString
		constexpr auto CategoryRemapping = 0x60; // TArray<FGameplayTagCategoryRemap>
		constexpr auto GameplayTagTableList = 0x70; // TArray<FSoftObjectPath>
		constexpr auto GameplayTagRedirects = 0x80; // TArray<FGameplayTagRedirect>
		constexpr auto CommonlyReplicatedTags = 0x90; // TArray<FName>
		constexpr auto NumBitsForContainerSize = 0xa0; // int32_t
		constexpr auto NetIndexFirstBitSegment = 0xa4; // int32_t
		constexpr auto RestrictedConfigFiles = 0xa8; // TArray<FRestrictedConfigInfo>
	}

	namespace n_UMaterialExpressionConstantBiasScale {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Bias = 0x54; // float
		constexpr auto Scale = 0x58; // float
	}

	namespace n_USafeZoneSlot {
		constexpr auto bIsTitleSafe = 0x38; // bool
		constexpr auto SafeAreaScale = 0x3c; // FMargin
		constexpr auto HAlign = 0x4c; // EHorizontalAlignment
		constexpr auto VAlign = 0x4d; // EVerticalAlignment
		constexpr auto Padding = 0x50; // FMargin
	}

	namespace n_UPawnAction_Wait {
		constexpr auto TimeToWait = 0x98; // float
	}

	namespace n_UGameEngine {
		constexpr auto MaxDeltaTime = 0xde8; // float
		constexpr auto ServerFlushLogInterval = 0xdec; // float
		constexpr auto GameInstance = 0xdf0; // UGameInstance*
	}

	namespace n_UBravoHotelLocalSavedSettings {
		constexpr auto UserName = 0x28; // FName
		constexpr auto MouseSensitivityStates = 0x30; // TMap<EMouseSensitivityState, int32_t>
		constexpr auto bRememberMe = 0x80; // bool
		constexpr auto MatchingSettings = 0x88; // FBravoHotelMatchingSettings
		constexpr auto FireModeSettings = 0xa8; // TMap<EWeaponType, EWeaponFireMode>
		constexpr auto bAutoReload = 0xf8; // bool
		constexpr auto OpeningMovieName = 0xfc; // FName
		constexpr auto bFirstRun = 0x104; // bool
		constexpr auto CoherentSettings = 0x108; // FCoherentSavedSettings
	}

	namespace n_UNiagaraDataInterfaceColorCurve {
		constexpr auto RedCurve = 0x58; // FRichCurve
		constexpr auto GreenCurve = 0xd8; // FRichCurve
		constexpr auto BlueCurve = 0x158; // FRichCurve
		constexpr auto AlphaCurve = 0x1d8; // FRichCurve
	}

	namespace n_AEQSTestingPawn {
		constexpr auto QueryTemplate = 0x5e0; // UEnvQuery*
		constexpr auto QueryParams = 0x5e8; // TArray<FEnvNamedValue>
		constexpr auto QueryConfig = 0x5f8; // TArray<FAIDynamicParam>
		constexpr auto TimeLimitPerStep = 0x608; // float
		constexpr auto StepToDebugDraw = 0x60c; // int32_t
		constexpr auto HighlightMode = 0x610; // EEnvQueryHightlightMode
		constexpr auto bDrawLabels = 0x614; // char : 1
		constexpr auto bDrawFailedItems = 0x614; // char : 1
		constexpr auto bReRunQueryOnlyOnFinishedMove = 0x614; // char : 1
		constexpr auto bShouldBeVisibleInGame = 0x614; // char : 1
		constexpr auto bTickDuringGame = 0x614; // char : 1
		constexpr auto QueryingMode = 0x618; // EEnvQueryRunMode
		constexpr auto NavAgentProperties = 0x620; // FNavAgentProperties
	}

	namespace n_UGraphicWidget_C {
		constexpr auto UberGraphFrame = 0x298; // FPointerToUberGraphFrame
		constexpr auto Anti = 0x2a0; // USlotItemWidget_C*
		constexpr auto display = 0x2a8; // USubTitleSlotWidget_C*
		constexpr auto DisplayMode = 0x2b0; // USlotItemWidget_C*
		constexpr auto DLSS = 0x2b8; // USlotItemWidget_C*
		constexpr auto DOF = 0x2c0; // USlotItemWidget_C*
		constexpr auto Effect = 0x2c8; // USlotItemWidget_C*
		constexpr auto Foliage = 0x2d0; // USlotItemWidget_C*
		constexpr auto FOV = 0x2d8; // USlotItemWidget_C*
		constexpr auto FSR = 0x2e0; // USlotItemWidget_C*
		constexpr auto LanguageSetting = 0x2e8; // USlotItemWidget_C*
		constexpr auto MaxFrameRate = 0x2f0; // USlotItemWidget_C*
		constexpr auto MaxLobbyFrameRate = 0x2f8; // USlotItemWidget_C*
		constexpr auto PP = 0x300; // USlotItemWidget_C*
		constexpr auto Reflex = 0x308; // USlotItemWidget_C*
		constexpr auto Resolution = 0x310; // USlotItemWidget_C*
		constexpr auto ResolutionScaling = 0x318; // USubTitleSlotWidget_C*
		constexpr auto ScrollBox_55 = 0x320; // UScrollBox*
		constexpr auto Shading = 0x328; // USlotItemWidget_C*
		constexpr auto Shadow = 0x330; // USlotItemWidget_C*
		constexpr auto Sharpen = 0x338; // USlotItemWidget_C*
		constexpr auto SlotItemWidget_C_1 = 0x340; // USlotItemWidget_C*
		constexpr auto Smooth = 0x348; // USlotItemWidget_C*
		constexpr auto SubTitleSlotWidget = 0x350; // USubTitleSlotWidget_C*
		constexpr auto Texture = 0x358; // USlotItemWidget_C*
		constexpr auto v-Sync = 0x360; // USlotItemWidget_C*
		constexpr auto ViewDistance = 0x368; // USlotItemWidget_C*
		constexpr auto )P = 0x370; // USubTitleSlotWidget_C*
		constexpr auto xÇ = 0x378; // USlotItemWidget_C*
		constexpr auto OldDisplayModeValue = 0x380; // float
		constexpr auto OldDisplayResolutionValue = 0x384; // float
		constexpr auto ScrollBarTimer = 0x388; // FTimerHandle
	}

	namespace n_UCompositionGraphCaptureProtocol {
		constexpr auto IncludeRenderPasses = 0x58; // FCompositionGraphCapturePasses
		constexpr auto bCaptureFramesInHDR = 0x68; // bool
		constexpr auto HDRCompressionQuality = 0x6c; // int32_t
		constexpr auto CaptureGamut = 0x70; // EHDRCaptureGamut
		constexpr auto PostProcessingMaterial = 0x78; // FSoftObjectPath
		constexpr auto bDisableScreenPercentage = 0x90; // bool
		constexpr auto PostProcessingMaterialPtr = 0x98; // UMaterialInterface*
	}

	namespace n_UWBP_SPS_Icon_C {
		constexpr auto UberGraphFrame = 0x440; // FPointerToUberGraphFrame
		constexpr auto BgIcon = 0x448; // UIconImage_C*
		constexpr auto Icon = 0x450; // UImage*
		constexpr auto Image_175 = 0x458; // UImage*
		constexpr auto Indicator = 0x460; // UImage*
		constexpr auto Overlay_1 = 0x468; // UOverlay*
		constexpr auto TeamIndex = 0x470; // UTextBlock*
		constexpr auto TextBlock = 0x478; // UTextBlock*
		constexpr auto TextBlock_2 = 0x480; // UTextBlock*
		constexpr auto TextBlock_3 = 0x488; // UTextBlock*
		constexpr auto TextBlock_4 = 0x490; // UTextBlock*
		constexpr auto TextBlock_5 = 0x498; // UTextBlock*
		constexpr auto TextBlock_6 = 0x4a0; // UTextBlock*
		constexpr auto TextBlock_7 = 0x4a8; // UTextBlock*
		constexpr auto TextBlock_8 = 0x4b0; // UTextBlock*
		constexpr auto TextBlock_9 = 0x4b8; // UTextBlock*
		constexpr auto TextBlock_10 = 0x4c0; // UTextBlock*
		constexpr auto TextBlock_12 = 0x4c8; // UTextBlock*
		constexpr auto VerticalBox_301 = 0x4d0; // UVerticalBox*
		constexpr auto PlayerCamera = 0x4d8; // APlayerCameraManager*
		constexpr auto ParentComponent = 0x4e0; // USmartPingSystem_C*
		constexpr auto CanvasSlot = 0x4e8; // UCanvasPanelSlot*
		constexpr auto MaterialPingInfo = 0x4f0; // FMaterialItemPingInfo
	}

	namespace n_UVehicleWheel {
		constexpr auto CollisionMesh = 0x28; // UStaticMesh*
		constexpr auto bDontCreateShape = 0x30; // bool
		constexpr auto bAutoAdjustCollisionSize = 0x31; // bool
		constexpr auto Offset = 0x34; // FVector
		constexpr auto ShapeRadius = 0x40; // float
		constexpr auto ShapeWidth = 0x44; // float
		constexpr auto Mass = 0x48; // float
		constexpr auto DampingRate = 0x4c; // float
		constexpr auto SteerAngle = 0x50; // float
		constexpr auto bAffectedByHandbrake = 0x54; // bool
		constexpr auto TireType = 0x58; // UTireType*
		constexpr auto TireConfig = 0x60; // UTireConfig*
		constexpr auto LatStiffMaxLoad = 0x68; // float
		constexpr auto LatStiffValue = 0x6c; // float
		constexpr auto LongStiffValue = 0x70; // float
		constexpr auto SuspensionForceOffset = 0x74; // float
		constexpr auto SuspensionMaxRaise = 0x78; // float
		constexpr auto SuspensionMaxDrop = 0x7c; // float
		constexpr auto SuspensionNaturalFrequency = 0x80; // float
		constexpr auto SuspensionDampingRatio = 0x84; // float
		constexpr auto SweepType = 0x88; // EWheelSweepType
		constexpr auto MaxBrakeTorque = 0x8c; // float
		constexpr auto MaxHandBrakeTorque = 0x90; // float
		constexpr auto VehicleSim = 0x98; // UWheeledVehicleMovementComponent*
		constexpr auto WheelIndex = 0xa0; // int32_t
		constexpr auto DebugLongSlip = 0xa4; // float
		constexpr auto DebugLatSlip = 0xa8; // float
		constexpr auto DebugNormalizedTireLoad = 0xac; // float
		constexpr auto DebugWheelTorque = 0xb4; // float
		constexpr auto DebugLongForce = 0xb8; // float
		constexpr auto DebugLatForce = 0xbc; // float
		constexpr auto Location = 0xc0; // FVector
		constexpr auto OldLocation = 0xcc; // FVector
		constexpr auto Velocity = 0xd8; // FVector
	}

	namespace n_UUW-CompassUnitWidget_C {
		constexpr auto InvalidationBox_1 = 0x250; // UInvalidationBox*
		constexpr auto InvalidationBox_2 = 0x258; // UInvalidationBox*
		constexpr auto SpecialText = 0x260; // UTextBlock*
	}

	namespace n_USoundfieldEffectBase {
		constexpr auto Settings = 0x28; // USoundfieldEffectSettingsBase*
	}

	namespace n_ABravoHotelItemSpawnSimulationBox {
		constexpr auto SpawnPerkData = 0x320; // FSpawnPerkData
		constexpr auto OnEndSimulationDelegate = 0x380; // FMulticastInlineDelegate
		constexpr auto PreLocation = 0x390; // FVector
		constexpr auto CheckCount = 0x39c; // int32_t
		constexpr auto MaxCount = 0x3a0; // int32_t
		constexpr auto Box = 0x3a8; // UStaticMeshComponent*
	}

	namespace n_UBravoHotelMapDrawWidget {
		constexpr auto MapCompRef = 0x248; // UBravoHotelMapCompWidget*
		constexpr auto CircleClicedCount = 0x250; // int32_t
		constexpr auto CurrentCircleColor = 0x254; // FLinearColor
		constexpr auto TargetCircleColor = 0x264; // FLinearColor
		constexpr auto ReplayCircleColor = 0x274; // FLinearColor
	}

	namespace n_UGizmoAxisScaleParameterSource {
		constexpr auto AxisSource = 0x48; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0x58; // TScriptInterface<IGizmoTransformSource>
		constexpr auto ScaleMultiplier = 0x68; // float
		constexpr auto Parameter = 0x6c; // float
		constexpr auto LastChange = 0x70; // FGizmoFloatParameterChange
		constexpr auto CurScaleAxis = 0x78; // FVector
		constexpr auto CurScaleOrigin = 0x84; // FVector
		constexpr auto InitialTransform = 0x90; // FTransform
	}

	namespace n_UMovieSceneSpawnTrack {
		constexpr auto Sections = 0x58; // TArray<UMovieSceneSection*>
		constexpr auto ObjectGuid = 0x68; // FGuid
	}

	namespace n_USubUVAnimation {
		constexpr auto SubUVTexture = 0x28; // UTexture2D*
		constexpr auto SubImages_Horizontal = 0x30; // int32_t
		constexpr auto SubImages_Vertical = 0x34; // int32_t
		constexpr auto BoundingMode = 0x38; // ESubUVBoundingVertexCount
		constexpr auto OpacitySourceMode = 0x39; // EOpacitySourceMode
		constexpr auto AlphaThreshold = 0x3c; // float
	}

	namespace n_USoundNodeEnveloper {
		constexpr auto LoopStart = 0x48; // float
		constexpr auto LoopEnd = 0x4c; // float
		constexpr auto DurationAfterLoop = 0x50; // float
		constexpr auto LoopCount = 0x54; // int32_t
		constexpr auto bLoopIndefinitely = 0x58; // char : 1
		constexpr auto bLoop = 0x58; // char : 1
		constexpr auto VolumeInterpCurve = 0x60; // UDistributionFloatConstantCurve*
		constexpr auto PitchInterpCurve = 0x68; // UDistributionFloatConstantCurve*
		constexpr auto VolumeCurve = 0x70; // FRuntimeFloatCurve
		constexpr auto PitchCurve = 0xf8; // FRuntimeFloatCurve
		constexpr auto PitchMin = 0x180; // float
		constexpr auto PitchMax = 0x184; // float
		constexpr auto VolumeMin = 0x188; // float
		constexpr auto VolumeMax = 0x18c; // float
	}

	namespace n_UHapticFeedbackEffect_Curve {
		constexpr auto HapticDetails = 0x28; // FHapticFeedbackDetails_Curve
	}

	namespace n_USourceEffectMidSideSpreaderPreset {
		constexpr auto Settings = 0x74; // FSourceEffectMidSideSpreaderSettings
	}

	namespace n_UBHStationaryCharInfo {
		constexpr auto bLocalCharacterInReplay = 0xc0; // bool
		constexpr auto CurrentPerkDeckSelectInfo = 0xc8; // FPerkDeckSelectInfo
		constexpr auto SavedPlayerState = 0xe0; // APlayerState*
		constexpr auto ParachuteSkinIndex = 0xe8; // int32_t
		constexpr auto bDisconnected = 0xec; // bool
		constexpr auto DisconnectedPlayerState = 0xf0; // APlayerState*
		constexpr auto IsClientTeam = 0xf8; // bool
	}

	namespace n_UAnimSequence {
		constexpr auto NumFrames = 0xb8; // int32_t
		constexpr auto TrackToSkeletonMapTable = 0xc0; // TArray<FTrackToSkeletonMap>
		constexpr auto BoneCompressionSettings = 0xe0; // UAnimBoneCompressionSettings*
		constexpr auto CurveCompressionSettings = 0xe8; // UAnimCurveCompressionSettings*
		constexpr auto AdditiveAnimType = 0x160; // EAdditiveAnimationType
		constexpr auto RefPoseType = 0x161; // EAdditiveBasePoseType
		constexpr auto RefPoseSeq = 0x168; // UAnimSequence*
		constexpr auto RefFrameIndex = 0x170; // int32_t
		constexpr auto RetargetSource = 0x174; // FName
		constexpr auto Interpolation = 0x17c; // EAnimInterpolationType
		constexpr auto bEnableRootMotion = 0x17d; // bool
		constexpr auto RootMotionRootLock = 0x17e; // ERootMotionRootLock
		constexpr auto bForceRootLock = 0x17f; // bool
		constexpr auto bUseNormalizedRootMotionScale = 0x180; // bool
		constexpr auto bRootMotionSettingsCopiedFromMontage = 0x181; // bool
		constexpr auto AuthoredSyncMarkers = 0x188; // TArray<FAnimSyncMarker>
	}

	namespace n_UEnvQueryGenerator {
		constexpr auto OptionName = 0x30; // FString
		constexpr auto ItemType = 0x40; // UEnvQueryItemType*
		constexpr auto bAutoSortTests = 0x48; // char : 1
	}

	namespace n_UUW-LoadingRichText_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto RichTextBlock_52 = 0x250; // URichTextBlock*
		constexpr auto SetText = 0x258; // FText
	}

	namespace n_UPaperTerrainMaterial {
		constexpr auto Rules = 0x30; // TArray<FPaperTerrainMaterialRule>
		constexpr auto InteriorFill = 0x40; // UPaperSprite*
	}

	namespace n_UNiagaraDataInterfaceCurveBase {
		constexpr auto ShaderLUT = 0x30; // TArray<float>
		constexpr auto LUTMinTime = 0x40; // float
		constexpr auto LUTMaxTime = 0x44; // float
		constexpr auto LUTInvTimeRange = 0x48; // float
		constexpr auto LUTNumSamplesMinusOne = 0x4c; // float
		constexpr auto bUseLUT = 0x50; // char : 1
	}

	namespace n_URadialVector {
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto Position = 0xb4; // FVector
	}

	namespace n_UAnimationSharingManager {
		constexpr auto Skeletons = 0x58; // TArray<USkeleton*>
		constexpr auto PerSkeletonData = 0x68; // TArray<UAnimSharingInstance*>
	}

	namespace n_AGeometryCollectionDebugDrawActor {
		constexpr auto WarningMessage = 0x318; // FGeometryCollectionDebugDrawWarningMessage
		constexpr auto SelectedRigidBody = 0x320; // FGeometryCollectionDebugDrawActorSelectedRigidBody
		constexpr auto bDebugDrawWholeCollection = 0x338; // bool
		constexpr auto bDebugDrawHierarchy = 0x339; // bool
		constexpr auto bDebugDrawClustering = 0x33a; // bool
		constexpr auto HideGeometry = 0x33b; // EGeometryCollectionDebugDrawActorHideGeometry
		constexpr auto bShowRigidBodyId = 0x33c; // bool
		constexpr auto bShowRigidBodyCollision = 0x33d; // bool
		constexpr auto bCollisionAtOrigin = 0x33e; // bool
		constexpr auto bShowRigidBodyTransform = 0x33f; // bool
		constexpr auto bShowRigidBodyInertia = 0x340; // bool
		constexpr auto bShowRigidBodyVelocity = 0x341; // bool
		constexpr auto bShowRigidBodyForce = 0x342; // bool
		constexpr auto bShowRigidBodyInfos = 0x343; // bool
		constexpr auto bShowTransformIndex = 0x344; // bool
		constexpr auto bShowTransform = 0x345; // bool
		constexpr auto bShowParent = 0x346; // bool
		constexpr auto bShowLevel = 0x347; // bool
		constexpr auto bShowConnectivityEdges = 0x348; // bool
		constexpr auto bShowGeometryIndex = 0x349; // bool
		constexpr auto bShowGeometryTransform = 0x34a; // bool
		constexpr auto bShowBoundingBox = 0x34b; // bool
		constexpr auto bShowFaces = 0x34c; // bool
		constexpr auto bShowFaceIndices = 0x34d; // bool
		constexpr auto bShowFaceNormals = 0x34e; // bool
		constexpr auto bShowSingleFace = 0x34f; // bool
		constexpr auto SingleFaceIndex = 0x350; // int32_t
		constexpr auto bShowVertices = 0x354; // bool
		constexpr auto bShowVertexIndices = 0x355; // bool
		constexpr auto bShowVertexNormals = 0x356; // bool
		constexpr auto bUseActiveVisualization = 0x357; // bool
		constexpr auto PointThickness = 0x358; // float
		constexpr auto LineThickness = 0x35c; // float
		constexpr auto bTextShadow = 0x360; // bool
		constexpr auto TextScale = 0x364; // float
		constexpr auto NormalScale = 0x368; // float
		constexpr auto AxisScale = 0x36c; // float
		constexpr auto ArrowScale = 0x370; // float
		constexpr auto RigidBodyIdColor = 0x374; // FColor
		constexpr auto RigidBodyTransformScale = 0x378; // float
		constexpr auto RigidBodyCollisionColor = 0x37c; // FColor
		constexpr auto RigidBodyInertiaColor = 0x380; // FColor
		constexpr auto RigidBodyVelocityColor = 0x384; // FColor
		constexpr auto RigidBodyForceColor = 0x388; // FColor
		constexpr auto RigidBodyInfoColor = 0x38c; // FColor
		constexpr auto TransformIndexColor = 0x390; // FColor
		constexpr auto TransformScale = 0x394; // float
		constexpr auto LevelColor = 0x398; // FColor
		constexpr auto ParentColor = 0x39c; // FColor
		constexpr auto ConnectivityEdgeThickness = 0x3a0; // float
		constexpr auto GeometryIndexColor = 0x3a4; // FColor
		constexpr auto GeometryTransformScale = 0x3a8; // float
		constexpr auto BoundingBoxColor = 0x3ac; // FColor
		constexpr auto FaceColor = 0x3b0; // FColor
		constexpr auto FaceIndexColor = 0x3b4; // FColor
		constexpr auto FaceNormalColor = 0x3b8; // FColor
		constexpr auto SingleFaceColor = 0x3bc; // FColor
		constexpr auto VertexColor = 0x3c0; // FColor
		constexpr auto VertexIndexColor = 0x3c4; // FColor
		constexpr auto VertexNormalColor = 0x3c8; // FColor
		constexpr auto SpriteComponent = 0x3d0; // UBillboardComponent*
	}

	namespace n_UPaperTileMap {
		constexpr auto MapWidth = 0x28; // int32_t
		constexpr auto MapHeight = 0x2c; // int32_t
		constexpr auto TileWidth = 0x30; // int32_t
		constexpr auto TileHeight = 0x34; // int32_t
		constexpr auto PixelsPerUnrealUnit = 0x38; // float
		constexpr auto SeparationPerTileX = 0x3c; // float
		constexpr auto SeparationPerTileY = 0x40; // float
		constexpr auto SeparationPerLayer = 0x44; // float
		constexpr auto SelectedTileSet = 0x48; // TSoftObjectPtr<UPaperTileSet>
		constexpr auto Material = 0x70; // UMaterialInterface*
		constexpr auto TileLayers = 0x78; // TArray<UPaperTileLayer*>
		constexpr auto CollisionThickness = 0x88; // float
		constexpr auto SpriteCollisionDomain = 0x8c; // ESpriteCollisionMode
		constexpr auto ProjectionMode = 0x8d; // ETileMapProjectionMode
		constexpr auto HexSideLength = 0x90; // int32_t
		constexpr auto BodySetup = 0x98; // UBodySetup*
		constexpr auto LayerNameIndex = 0xa0; // int32_t
	}

	namespace n_UEditableStaticMeshAdapter {
		constexpr auto StaticMesh = 0x28; // UStaticMesh*
		constexpr auto OriginalStaticMesh = 0x30; // UStaticMesh*
		constexpr auto StaticMeshLODIndex = 0x38; // int32_t
	}

	namespace n_UUW-Timer_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Ani_Countdown = 0x250; // UWidgetAnimation*
		constexpr auto TextBlock_RemailTime = 0x258; // UTextBlock*
		constexpr auto PreTime = 0x260; // int32_t
		constexpr auto ActiveTimer = 0x264; // bool
		constexpr auto RemainTime = 0x268; // int32_t
	}

	namespace n_URadialIntMask {
		constexpr auto Radius = 0xb0; // float
		constexpr auto Position = 0xb4; // FVector
		constexpr auto InteriorValue = 0xc0; // int32_t
		constexpr auto ExteriorValue = 0xc4; // int32_t
		constexpr auto SetMaskCondition = 0xc8; // ESetMaskConditionType
	}

	namespace n_AWheeledVehicle {
		constexpr auto Mesh = 0x388; // USkeletalMeshComponent*
		constexpr auto VehicleMovement = 0x390; // UWheeledVehicleMovementComponent*
	}

	namespace n_ABravoHotelLightPropActor {
		constexpr auto bLightOn = 0x318; // bool
		constexpr auto bLightFlicker = 0x319; // bool
		constexpr auto LightOnIntensity = 0x31c; // float
		constexpr auto LightOnTemperture = 0x320; // float
		constexpr auto LightOnAttenuationRadius = 0x324; // float
		constexpr auto LightOnMaterial = 0x328; // UMaterialInterface*
		constexpr auto LightOffMaterial = 0x330; // UMaterialInterface*
		constexpr auto LightFlickerFunctionMaterial = 0x338; // UMaterialInterface*
		constexpr auto SceneRootComponent = 0x340; // USceneComponent*
	}

	namespace n_UAISenseEvent_Hearing {
		constexpr auto Event = 0x28; // FAINoiseEvent
	}

	namespace n_ABravoHotelTimeOfDay {
		constexpr auto CurrentTimeOfDayType = 0x318; // ETimeOfDayType
		constexpr auto bUseClearFog = 0x319; // bool
		constexpr auto PostSimulationAlpha = 0x31c; // float
		constexpr auto TimeOfDaySettings = 0x320; // TMap<ETimeOfDayType, FBravoHotelTimeOfDaySettings>
		constexpr auto DirectionalLightRef = 0x370; // ADirectionalLight*
		constexpr auto SkyLightRef = 0x378; // ASkyLight*
		constexpr auto ExponentialHeightFogRef = 0x380; // AExponentialHeightFog*
		constexpr auto AtmosphericFogRef = 0x388; // AAtmosphericFog*
		constexpr auto PostProcessVolumeRef = 0x390; // APostProcessVolume*
		constexpr auto SimulateInformations = 0x398; // TArray<FBravoHotelTimeOfDaySimulateInformation>
		constexpr auto SimulationStartTime = 0x3a8; // float
		constexpr auto bIsSimulating = 0x3ac; // bool
		constexpr auto CurrentSimulationTOD = 0x3b0; // FBravoHotelTimeOfDaySettings
		constexpr auto TargetSimulationTOD = 0x448; // FBravoHotelTimeOfDaySettings
		constexpr auto TargetSimulateTimeOfDay = 0x4e0; // ETimeOfDayType
		constexpr auto DL_RotationTransitionTime = 0x4e4; // float
		constexpr auto PostTransitionDelayTime = 0x4e8; // float
		constexpr auto PostTransitionTime = 0x4ec; // float
		constexpr auto StartTimeOfDayType = 0x508; // ETimeOfDayType
	}

	namespace n_ABP-SpectatorPC_C {
		constexpr auto UberGraphFrame = 0x14c0; // FPointerToUberGraphFrame
		constexpr auto Observer = 0x14c8; // ABP-SpectatorPawn_C*
		constexpr auto PlayingKillCam = 0x14d0; // bool
		constexpr auto AfterGameHUD = 0x14d8; // UBP-SpectatorWidget_C*
		constexpr auto GameInstanceRef = 0x14e0; // UBravoHotelGameInstance*
		constexpr auto bKillCamFinish = 0x14e8; // bool
	}

	namespace n_UParticleModuleLocation {
		constexpr auto StartLocation = 0x30; // FRawDistributionVector
		constexpr auto DistributeOverNPoints = 0x78; // float
		constexpr auto DistributeThreshold = 0x7c; // float
	}

	namespace n_UCompositeCurveTable {
		constexpr auto ParentTables = 0xa0; // TArray<UCurveTable*>
		constexpr auto OldParentTables = 0xb0; // TArray<UCurveTable*>
	}

	namespace n_UPlatformEventsComponent {
		constexpr auto PlatformChangedToLaptopModeDelegate = 0xb0; // FMulticastInlineDelegate
		constexpr auto PlatformChangedToTabletModeDelegate = 0xc0; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionArctangent2 {
		constexpr auto Y = 0x40; // FExpressionInput
		constexpr auto X = 0x54; // FExpressionInput
	}

	namespace n_USignificanceManager {
		constexpr auto SignificanceManagerClassName = 0x158; // FSoftClassPath
	}

	namespace n_ARecastNavMesh {
		constexpr auto bDrawTriangleEdges = 0x4f8; // char : 1
		constexpr auto bDrawPolyEdges = 0x4f8; // char : 1
		constexpr auto bDrawFilledPolys = 0x4f8; // char : 1
		constexpr auto bDrawNavMeshEdges = 0x4f8; // char : 1
		constexpr auto bDrawTileBounds = 0x4f8; // char : 1
		constexpr auto bDrawPathCollidingGeometry = 0x4f8; // char : 1
		constexpr auto bDrawTileLabels = 0x4f8; // char : 1
		constexpr auto bDrawPolygonLabels = 0x4f8; // char : 1
		constexpr auto bDrawDefaultPolygonCost = 0x4f9; // char : 1
		constexpr auto bDrawLabelsOnPathNodes = 0x4f9; // char : 1
		constexpr auto bDrawNavLinks = 0x4f9; // char : 1
		constexpr auto bDrawFailedNavLinks = 0x4f9; // char : 1
		constexpr auto bDrawClusters = 0x4f9; // char : 1
		constexpr auto bDrawOctree = 0x4f9; // char : 1
		constexpr auto bDrawOctreeDetails = 0x4f9; // char : 1
		constexpr auto bDrawMarkedForbiddenPolys = 0x4f9; // char : 1
		constexpr auto bDistinctlyDrawTilesBeingBuilt = 0x4fa; // char : 1
		constexpr auto bDrawNavMesh = 0x4fa; // char : 1
		constexpr auto DrawOffset = 0x4fc; // float
		constexpr auto bFixedTilePoolSize = 0x500; // char : 1
		constexpr auto TilePoolSize = 0x504; // int32_t
		constexpr auto TileSizeUU = 0x508; // float
		constexpr auto CellSize = 0x50c; // float
		constexpr auto CellHeight = 0x510; // float
		constexpr auto AgentRadius = 0x514; // float
		constexpr auto AgentHeight = 0x518; // float
		constexpr auto AgentMaxHeight = 0x51c; // float
		constexpr auto AgentMaxSlope = 0x520; // float
		constexpr auto AgentMaxStepHeight = 0x524; // float
		constexpr auto MinRegionArea = 0x528; // float
		constexpr auto MergeRegionSize = 0x52c; // float
		constexpr auto MaxSimplificationError = 0x530; // float
		constexpr auto MaxSimultaneousTileGenerationJobsCount = 0x534; // int32_t
		constexpr auto TileNumberHardLimit = 0x538; // int32_t
		constexpr auto PolyRefTileBits = 0x53c; // int32_t
		constexpr auto PolyRefNavPolyBits = 0x540; // int32_t
		constexpr auto PolyRefSaltBits = 0x544; // int32_t
		constexpr auto NavMeshOriginOffset = 0x548; // FVector
		constexpr auto DefaultDrawDistance = 0x554; // float
		constexpr auto DefaultMaxSearchNodes = 0x558; // float
		constexpr auto DefaultMaxHierarchicalSearchNodes = 0x55c; // float
		constexpr auto RegionPartitioning = 0x560; // ERecastPartitioning
		constexpr auto LayerPartitioning = 0x561; // ERecastPartitioning
		constexpr auto RegionChunkSplits = 0x564; // int32_t
		constexpr auto LayerChunkSplits = 0x568; // int32_t
		constexpr auto bSortNavigationAreasByCost = 0x56c; // char : 1
		constexpr auto bPerformVoxelFiltering = 0x56c; // char : 1
		constexpr auto bMarkLowHeightAreas = 0x56c; // char : 1
		constexpr auto bFilterLowSpanSequences = 0x56c; // char : 1
		constexpr auto bFilterLowSpanFromTileCache = 0x56c; // char : 1
		constexpr auto bDoFullyAsyncNavDataGathering = 0x56c; // char : 1
		constexpr auto bUseBetterOffsetsFromCorners = 0x56c; // char : 1
		constexpr auto bStoreEmptyTileLayers = 0x56c; // char : 1
		constexpr auto bUseVirtualFilters = 0x56d; // char : 1
		constexpr auto bAllowNavLinkAsPathEnd = 0x56d; // char : 1
		constexpr auto bUseVoxelCache = 0x56d; // char : 1
		constexpr auto TileSetUpdateInterval = 0x570; // float
		constexpr auto HeuristicScale = 0x574; // float
		constexpr auto VerticalDeviationFromGroundCompensation = 0x578; // float
	}

	namespace n_UUW-ItemRecipeTreePopup_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Hide = 0x250; // UWidgetAnimation*
		constexpr auto Show = 0x258; // UWidgetAnimation*
		constexpr auto Bg = 0x260; // UImage*
		constexpr auto Button_OK = 0x268; // UButton*
		constexpr auto Image_168 = 0x270; // UImage*
		constexpr auto Image_669 = 0x278; // UImage*
		constexpr auto Message = 0x280; // UTextBlock*
		constexpr auto TextBlock_Title = 0x288; // UTextBlock*
		constexpr auto UW-ItemRecipeTree = 0x290; // UUW-ItemRecipeTree_C*
		constexpr auto Timer = 0x298; // FTimerHandle
	}

	namespace n_UUW-ArmoryInput_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Image_20 = 0x250; // UImage*
		constexpr auto TargetAccel = 0x258; // FRotator
		constexpr auto CurrentAccel = 0x264; // FRotator
		constexpr auto TargetScale = 0x270; // float
		constexpr auto DataAsset = 0x278; // UOutGameArmoryDataType_C*
		constexpr auto ResetOriginTransform = 0x280; // bool
		constexpr auto MouseInputLock = 0x281; // bool
		constexpr auto IsUpdatingRotation = 0x282; // bool
		constexpr auto IsValidMeshActor = 0x283; // bool
		constexpr auto IsPressedLeftMouse = 0x284; // bool
	}

	namespace n_AAkAcousticPortal {
		constexpr auto InitialState = 0x350; // AkAcousticPortalState
		constexpr auto ObstructionRefreshInterval = 0x354; // float
		constexpr auto ObstructionCollisionChannel = 0x358; // ECollisionChannel
	}

	namespace n_AGameStateBase {
		constexpr auto GameModeClass = 0x318; // AGameModeBase*
		constexpr auto AuthorityGameMode = 0x320; // AGameModeBase*
		constexpr auto SpectatorClass = 0x328; // ASpectatorPawn*
		constexpr auto PlayerArray = 0x330; // TArray<APlayerState*>
		constexpr auto bReplicatedHasBegunPlay = 0x340; // bool
		constexpr auto ReplicatedWorldTimeSeconds = 0x344; // float
		constexpr auto ServerWorldTimeSecondsDelta = 0x348; // float
		constexpr auto ServerWorldTimeSecondsUpdateFrequency = 0x34c; // float
	}

	namespace n_UEnvelopeFollowerListener {
		constexpr auto OnEnvelopeFollowerUpdate = 0xb0; // FMulticastInlineDelegate
	}

	namespace n_USteamGetFriendsCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UGameSessionSettings {
		constexpr auto MaxSpectators = 0x28; // int32_t
		constexpr auto MaxPlayers = 0x2c; // int32_t
		constexpr auto bRequiresPushToTalk = 0x30; // char : 1
	}

	namespace n_UMaterialExpressionTextureSample {
		constexpr auto Coordinates = 0x50; // FExpressionInput
		constexpr auto TextureObject = 0x64; // FExpressionInput
		constexpr auto MipValue = 0x78; // FExpressionInput
		constexpr auto CoordinatesDX = 0x8c; // FExpressionInput
		constexpr auto CoordinatesDY = 0xa0; // FExpressionInput
		constexpr auto AutomaticViewMipBiasValue = 0xb4; // FExpressionInput
		constexpr auto MipValueMode = 0xc8; // ETextureMipValueMode
		constexpr auto SamplerSource = 0xc9; // ESamplerSourceMode
		constexpr auto AutomaticViewMipBias = 0xca; // char : 1
		constexpr auto ConstCoordinate = 0xcb; // char
		constexpr auto ConstMipValue = 0xcc; // int32_t
	}

	namespace n_UUW-ReportUserProgram_C {
		constexpr auto UberGraphFrame = 0x278; // FPointerToUberGraphFrame
		constexpr auto btn_Cancel = 0x280; // UButton*
		constexpr auto btn_report = 0x288; // UButton*
		constexpr auto Button_2 = 0x290; // UButton*
		constexpr auto Button_3 = 0x298; // UButton*
		constexpr auto Button_4 = 0x2a0; // UButton*
		constexpr auto Button_5 = 0x2a8; // UButton*
		constexpr auto CheckBox_2 = 0x2b0; // UCheckBox*
		constexpr auto CheckBox_3 = 0x2b8; // UCheckBox*
		constexpr auto CheckBox_4 = 0x2c0; // UCheckBox*
		constexpr auto CheckBox_5 = 0x2c8; // UCheckBox*
		constexpr auto combobox_button_overlay = 0x2d0; // UOverlay*
		constexpr auto combobox_string = 0x2d8; // UComboBoxString*
		constexpr auto Image = 0x2e0; // UImage*
		constexpr auto Image_2 = 0x2e8; // UImage*
		constexpr auto Image_545 = 0x2f0; // UImage*
		constexpr auto NormalArrow = 0x2f8; // UButton*
		constexpr auto OpeningArrow = 0x300; // UButton*
		constexpr auto popup-bg = 0x308; // UImage*
		constexpr auto txt_description = 0x310; // UTextBlock*
		constexpr auto txt_nickname = 0x318; // UTextBlock*
		constexpr auto uw-bg = 0x320; // UImage*
		constexpr auto DescriptionText = 0x328; // FText
		constexpr auto ReportIndexText = 0x340; // TArray<FText>
		constexpr auto DefaultComboString = 0x350; // FText
		constexpr auto CurrentSelectIndex = 0x368; // int32_t
		constexpr auto CheckCloseComboArrow = 0x36c; // bool
	}

	namespace n_ABP-FieldViewCam_C {
		constexpr auto UberGraphFrame = 0x318; // FPointerToUberGraphFrame
		constexpr auto WorldViewCamera = 0x320; // UCameraComponent*
		constexpr auto DefaultSceneRoot = 0x328; // USceneComponent*
		constexpr auto DeltaTime = 0x330; // float
		constexpr auto bIsBackgroundScene = 0x334; // bool
	}

	namespace n_ULevelStreamingDynamic {
		constexpr auto bInitiallyLoaded = 0x158; // char : 1
		constexpr auto bInitiallyVisible = 0x158; // char : 1
	}

	namespace n_UUW-ClassinfoitemWidget_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Image_ClassIcon = 0x250; // UImage*
		constexpr auto TextBlock_ClassName = 0x258; // UTextBlock*
		constexpr auto TextBlock_Count = 0x260; // UTextBlock*
	}

	namespace n_UNiagaraDataInterfaceAudioSpectrum {
		constexpr auto Resolution = 0x38; // int32_t
		constexpr auto MinimumFrequency = 0x3c; // float
		constexpr auto MaximumFrequency = 0x40; // float
		constexpr auto NoiseFloorDb = 0x44; // float
	}

	namespace n_UUW_ReplayUserNameTooltip_C {
		constexpr auto UberGraphFrame = 0x268; // FPointerToUberGraphFrame
		constexpr auto BT_UserName = 0x270; // UButton*
		constexpr auto CP_Main = 0x278; // UCanvasPanel*
		constexpr auto HB_ItemInfo = 0x280; // UHorizontalBox*
		constexpr auto Image_264 = 0x288; // UImage*
		constexpr auto Image_265 = 0x290; // UImage*
		constexpr auto Image_1163 = 0x298; // UImage*
		constexpr auto IMG_Frontbar = 0x2a0; // UImage*
		constexpr auto IMG_Item = 0x2a8; // UImage*
		constexpr auto Img_TeamColor = 0x2b0; // UImage*
		constexpr auto PB_HP = 0x2b8; // UProgressBar*
		constexpr auto PB_ItemCasting = 0x2c0; // UProgressBar*
		constexpr auto PB_Message = 0x2c8; // UProgressBar*
		constexpr auto SizeBox_Message = 0x2d0; // USizeBox*
		constexpr auto Switcher_Casting = 0x2d8; // UWidgetSwitcher*
		constexpr auto T_Class = 0x2e0; // UTextBlock*
		constexpr auto T_ExpertWeapon = 0x2e8; // UTextBlock*
		constexpr auto T_Item = 0x2f0; // UTextBlock*
		constexpr auto T_Level = 0x2f8; // UTextBlock*
		constexpr auto T_Message = 0x300; // UTextBlock*
		constexpr auto T_Quantity = 0x308; // UTextBlock*
		constexpr auto T_TeamNum = 0x310; // UTextBlock*
		constexpr auto T_UserName = 0x318; // UTextBlock*
		constexpr auto T_UserName_2 = 0x320; // UTextBlock*
		constexpr auto PlayerState = 0x328; // ABravoHotelPlayerState*
		constexpr auto ReplayController = 0x330; // APlayerController*
		constexpr auto TargetCharacter = 0x338; // ABravoHotelCharacter*
		constexpr auto MaxViewportSize = 0x340; // FVector2D
		constexpr auto LocalScreenPosition = 0x348; // FVector2D
		constexpr auto IsPositionUpdated = 0x350; // bool
		constexpr auto DefaultCharacterZLocation = 0x354; // float
		constexpr auto TargetPawn = 0x358; // APawn*
	}

	namespace n_AAkReverbVolume {
		constexpr auto bEnabled = 0x350; // char : 1
		constexpr auto AuxBus = 0x358; // UAkAuxBus*
		constexpr auto AuxBusName = 0x360; // FString
		constexpr auto SendLevel = 0x370; // float
		constexpr auto FadeRate = 0x374; // float
		constexpr auto Priority = 0x378; // float
		constexpr auto LateReverbComponent = 0x380; // UAkLateReverbComponent*
	}

	namespace n_UUW-Lobby_Craft_Success_Perk_Open_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Fade_in_Black_Bg = 0x250; // UWidgetAnimation*
		constexpr auto Anim_ShowPerk = 0x258; // UWidgetAnimation*
		constexpr auto Image_319 = 0x260; // UImage*
		constexpr auto Img_Opened = 0x268; // UImage*
		constexpr auto T_Desc = 0x270; // UTextBlock*
		constexpr auto T_Name = 0x278; // UTextBlock*
		constexpr auto UW-Lobby_Craft_Success_Perk_Slot = 0x280; // UUW-Lobby_Craft_Success_Perk_Slot_C*
		constexpr auto RarityBGMaterialInstance = 0x288; // UMaterialInstanceDynamic*
		constexpr auto CurrentAnim = 0x290; // float
	}

	namespace n_UMaterialExpressionSingleLayerWaterMaterialOutput {
		constexpr auto ScatteringCoefficients = 0x40; // FExpressionInput
		constexpr auto AbsorptionCoefficients = 0x54; // FExpressionInput
		constexpr auto PhaseG = 0x68; // FExpressionInput
	}

	namespace n_UInterpTrackInstMove {
		constexpr auto ResetLocation = 0x28; // FVector
		constexpr auto ResetRotation = 0x34; // FRotator
	}

	namespace n_UBP-BHGameInstanceWithSettings_C {
		constexpr auto UberGraphFrame = 0x548; // FPointerToUberGraphFrame
		constexpr auto Game Settings Wrapper = 0x550; // UBP_GameSettingsWrapper_C*
		constexpr auto LastPCPosition = 0x558; // FVector
	}

	namespace n_ABP-Projectile_IncendiaryFireCell_C {
		constexpr auto TextureScale = 0x3a0; // float
		constexpr auto BurnArea = 0x3a4; // float
	}

	namespace n_UMaterialExpressionAppendVector {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_UUW-ReplayFreeCamSpeedWidget_C {
		constexpr auto Image_136 = 0x248; // UImage*
		constexpr auto Slider_Speed = 0x250; // USlider*
		constexpr auto T_CamSpeed = 0x258; // UTextBlock*
		constexpr auto Handle_HideFreeCamSpeed = 0x260; // FTimerHandle
	}

	namespace n_UBravoHotelAnimNotify_PlayConditionedSound {
		constexpr auto ConditionedSound = 0x38; // FConditionedSound
		constexpr auto bFollow = 0x48; // bool
		constexpr auto bPlayOnServer = 0x49; // bool
		constexpr auto bPlayWhileFalling = 0x4a; // bool
		constexpr auto bPlayOnlyForPawnMesh = 0x4b; // bool
		constexpr auto bPlayOnlyLocalPlayer = 0x4c; // bool
		constexpr auto bForced2D = 0x4d; // bool
		constexpr auto bUseConditionProvider = 0x4e; // bool
	}

	namespace n_UDefaultLevelSequenceInstanceData {
		constexpr auto TransformOriginActor = 0x30; // AActor*
		constexpr auto TransformOrigin = 0x40; // FTransform
	}

	namespace n_UUW-Inventory_SlotBase_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto PlayerController = 0x250; // ABravoHotelPlayerController*
		constexpr auto InventoryItemInfo = 0x258; // FInventoryItemInfo
		constexpr auto InventoryItemDetailInfo = 0x2f0; // FInventoryItemDetailInfo
		constexpr auto WeaponInfo = 0x780; // FBravoHotelWeaponInfo
		constexpr auto ItemSlotHoverWIdget = 0x12a8; // UUW-Inventory_ItemSlotHover_C*
		constexpr auto InventoryWidget = 0x12b0; // UUW-InventoryWidget_C*
		constexpr auto DraggedWidget = 0x12b8; // UUW-Inventory_DragItem_C*
		constexpr auto InventorySlotWidgetKind = 0x12c0; // ItemWidgetDragType
		constexpr auto DragItemBrush = 0x12c8; // FSlateBrush
		constexpr auto RButtonDown = 0x1350; // bool
		constexpr auto bEpuipped = 0x1351; // bool
	}

	namespace n_USourceEffectChorusPreset {
		constexpr auto Settings = 0x80; // FSourceEffectChorusSettings
	}

	namespace n_UEditableTextBox {
		constexpr auto Text = 0x108; // FText
		constexpr auto TextDelegate = 0x120; // FDelegate
		constexpr auto WidgetStyle = 0x130; // FEditableTextBoxStyle
		constexpr auto Style = 0x920; // USlateWidgetStyleAsset*
		constexpr auto HintText = 0x928; // FText
		constexpr auto HintTextDelegate = 0x940; // FDelegate
		constexpr auto Font = 0x950; // FSlateFontInfo
		constexpr auto ForegroundColor = 0x9a0; // FLinearColor
		constexpr auto BackgroundColor = 0x9b0; // FLinearColor
		constexpr auto ReadOnlyForegroundColor = 0x9c0; // FLinearColor
		constexpr auto IsReadOnly = 0x9d0; // bool
		constexpr auto IsPassword = 0x9d1; // bool
		constexpr auto MinimumDesiredWidth = 0x9d4; // float
		constexpr auto Padding = 0x9d8; // FMargin
		constexpr auto IsCaretMovedWhenGainFocus = 0x9e8; // bool
		constexpr auto SelectAllTextWhenFocused = 0x9e9; // bool
		constexpr auto RevertTextOnEscape = 0x9ea; // bool
		constexpr auto ClearKeyboardFocusOnCommit = 0x9eb; // bool
		constexpr auto SelectAllTextOnCommit = 0x9ec; // bool
		constexpr auto AllowContextMenu = 0x9ed; // bool
		constexpr auto KeyboardType = 0x9ee; // EVirtualKeyboardType
		constexpr auto VirtualKeyboardOptions = 0x9ef; // FVirtualKeyboardOptions
		constexpr auto VirtualKeyboardTrigger = 0x9f0; // EVirtualKeyboardTrigger
		constexpr auto VirtualKeyboardDismissAction = 0x9f1; // EVirtualKeyboardDismissAction
		constexpr auto Justification = 0x9f2; // ETextJustify
		constexpr auto ShapedTextOptions = 0x9f3; // FShapedTextOptions
		constexpr auto OnTextChanged = 0x9f8; // FMulticastInlineDelegate
		constexpr auto OnTextCommitted = 0xa08; // FMulticastInlineDelegate
	}

	namespace n_UBTCompositeNode {
		constexpr auto Children = 0x58; // TArray<FBTCompositeChild>
		constexpr auto Services = 0x68; // TArray<UBTService*>
		constexpr auto bApplyDecoratorScope = 0x88; // char : 1
	}

	namespace n_AAkAmbientSound {
		constexpr auto AkAudioEvent = 0x318; // UAkAudioEvent*
		constexpr auto AkComponent = 0x320; // UAkComponent*
		constexpr auto StopWhenOwnerIsDestroyed = 0x328; // bool
		constexpr auto AutoPost = 0x329; // bool
	}

	namespace n_UParticleModuleVelocityCone {
		constexpr auto Angle = 0x38; // FRawDistributionFloat
		constexpr auto Velocity = 0x68; // FRawDistributionFloat
		constexpr auto Direction = 0x98; // FVector
	}

	namespace n_UFSM_SetState_AsyncWithCallbacks {
		constexpr auto Target = 0x30; // UStateMachineComponent*
		constexpr auto InBegin = 0x38; // FDelegate
		constexpr auto InExit = 0x48; // FDelegate
		constexpr auto StateName = 0x58; // FName
		constexpr auto Timer = 0x60; // float
		constexpr auto Repeat = 0x64; // bool
		constexpr auto TimerHandle = 0x68; // FTimerHandle
		constexpr auto OnSuccess = 0x70; // FMulticastInlineDelegate
		constexpr auto OnAborted = 0x80; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionComment {
		constexpr auto SizeX = 0x40; // int32_t
		constexpr auto SizeY = 0x44; // int32_t
		constexpr auto Text = 0x48; // FString
		constexpr auto CommentColor = 0x58; // FLinearColor
		constexpr auto FontSize = 0x68; // int32_t
	}

	namespace n_ABravoHotelAmbientSound {
		constexpr auto bUseMultiplePositions = 0x358; // bool
		constexpr auto RelativeMultiplePositions = 0x360; // TArray<FTransform>
		constexpr auto bUseSynchronization = 0x370; // bool
		constexpr auto LoopInterval = 0x374; // float
	}

	namespace n_UMaterialExpressionShadingModel {
		constexpr auto ShadingModel = 0x40; // EMaterialShadingModel
	}

	namespace n_ALevelStreamingVolume {
		constexpr auto StreamingLevelNames = 0x350; // TArray<FName>
		constexpr auto bEditorPreVisOnly = 0x360; // char : 1
		constexpr auto bDisabled = 0x360; // char : 1
		constexpr auto StreamingUsage = 0x364; // EStreamingVolumeUsage
	}

	namespace n_UTextBlock {
		constexpr auto Text = 0x128; // FText
		constexpr auto TextDelegate = 0x140; // FDelegate
		constexpr auto ColorAndOpacity = 0x150; // FSlateColor
		constexpr auto ColorAndOpacityDelegate = 0x178; // FDelegate
		constexpr auto Font = 0x188; // FSlateFontInfo
		constexpr auto StrikeBrush = 0x1d8; // FSlateBrush
		constexpr auto ShadowOffset = 0x260; // FVector2D
		constexpr auto ShadowColorAndOpacity = 0x268; // FLinearColor
		constexpr auto ShadowColorAndOpacityDelegate = 0x278; // FDelegate
		constexpr auto MinDesiredWidth = 0x288; // float
		constexpr auto bWrapWithInvalidationPanel = 0x28c; // bool
		constexpr auto bAutoWrapText = 0x28d; // bool
		constexpr auto bSimpleTextMode = 0x28e; // bool
	}

	namespace n_URemeshingPipeline {
		constexpr auto Settings = 0x28; // FRemeshingPipelineSettings
	}

	namespace n_UPrefabAsset {
		constexpr auto AssetReferences = 0x28; // TMap<FString, FSoftObjectPath>
		constexpr auto GeneratedBlueprintAssetReference = 0x78; // FSoftObjectPath
		constexpr auto SimplifiedMeshAssetReference = 0x90; // FSoftObjectPath
		constexpr auto PrefabId = 0xa8; // FGuid
		constexpr auto PrefabContent = 0xb8; // FString
		constexpr auto PrefabHash = 0xc8; // FString
		constexpr auto NumActors = 0xd8; // int32_t
		constexpr auto PrefabPivot = 0xdc; // FVector
	}

	namespace n_UUW-BlackMarket_C {
		constexpr auto Image_3 = 0x248; // UImage*
		constexpr auto IMG-BG = 0x250; // UImage*
		constexpr auto IMG-Close = 0x258; // UImage*
		constexpr auto IMG-TitleBG = 0x260; // UImage*
		constexpr auto UW-BlackMarket_Main = 0x268; // UUW-BlackMarket_Main_C*
	}

	namespace n_USoundNodeWavePlayer {
		constexpr auto SoundWaveAssetPtr = 0x48; // TSoftObjectPtr<USoundWave>
		constexpr auto SoundWave = 0x70; // USoundWave*
		constexpr auto bLooping = 0x78; // char : 1
	}

	namespace n_UGridPathFollowingComponent {
		constexpr auto GridManager = 0x258; // UNavLocalGridManager*
	}

	namespace n_UNiagaraDataInterfaceExport {
		constexpr auto CallbackHandlerParameter = 0x30; // FNiagaraUserParameterBinding
	}

	namespace n_UBravoHotelPainCausingComponent {
		constexpr auto DamagePerSec = 0xb0; // float
		constexpr auto DamageType = 0xb8; // UDamageType*
		constexpr auto PainInterval = 0xc0; // float
		constexpr auto bEntryPain = 0xc4; // char : 1
		constexpr auto DamageInstigator = 0xc8; // AController*
		constexpr auto DamagedActors = 0xd8; // TArray<AActor*>
	}

	namespace n_UParticleModuleTypeDataRibbon {
		constexpr auto MaxTessellationBetweenParticles = 0x30; // int32_t
		constexpr auto SheetsPerTrail = 0x34; // int32_t
		constexpr auto MaxTrailCount = 0x38; // int32_t
		constexpr auto MaxParticleInTrailCount = 0x3c; // int32_t
		constexpr auto bDeadTrailsOnDeactivate = 0x40; // char : 1
		constexpr auto bDeadTrailsOnSourceLoss = 0x40; // char : 1
		constexpr auto bClipSourceSegement = 0x40; // char : 1
		constexpr auto bEnablePreviousTangentRecalculation = 0x40; // char : 1
		constexpr auto bTangentRecalculationEveryFrame = 0x40; // char : 1
		constexpr auto bSpawnInitialParticle = 0x40; // char : 1
		constexpr auto RenderAxis = 0x44; // ETrailsRenderAxisOption
		constexpr auto TangentSpawningScalar = 0x48; // float
		constexpr auto bRenderGeometry = 0x4c; // char : 1
		constexpr auto bRenderSpawnPoints = 0x4c; // char : 1
		constexpr auto bRenderTangents = 0x4c; // char : 1
		constexpr auto bRenderTessellation = 0x4c; // char : 1
		constexpr auto TilingDistance = 0x50; // float
		constexpr auto DistanceTessellationStepSize = 0x54; // float
		constexpr auto bEnableTangentDiffInterpScale = 0x58; // char : 1
		constexpr auto TangentTessellationScalar = 0x5c; // float
	}

	namespace n_UInputAxisDelegateBinding {
		constexpr auto InputAxisDelegateBindings = 0x28; // TArray<FBlueprintInputAxisDelegateBinding>
	}

	namespace n_UParticleModuleLocationPrimitiveCylinder_Seeded {
		constexpr auto RandomSeedInfo = 0x120; // FParticleRandomSeedInfo
	}

	namespace n_UNiagaraDataInterfaceNeighborGrid3D {
		constexpr auto MaxNeighborsPerVoxel = 0xf0; // uint32_t
	}

	namespace n_UBravoHotelPlayerInfoProgressWidget {
		constexpr auto TargetPawn = 0x248; // ABravoHotelCharacter*
		constexpr auto CurrentHealthIncreaseSpeed = 0x250; // float
		constexpr auto CurrentHealthDecreaseSpeed = 0x254; // float
		constexpr auto BeforeHealthInterpSpeedRate = 0x258; // float
		constexpr auto BeforeHealthTimerDelayRate = 0x25c; // float
		constexpr auto HorizontalBox_Main = 0x2a0; // UHorizontalBox*
		constexpr auto T_CurrentHealth = 0x2a8; // UTextBlock*
		constexpr auto T_MaxHealth = 0x2b0; // UTextBlock*
		constexpr auto LastMaxHealth = 0x2b8; // int32_t
		constexpr auto HealthPerSlot = 0x2bc; // int32_t
		constexpr auto CureLimitPercent = 0x2c0; // float
		constexpr auto AnimAdditionalHealth = 0x2c4; // int32_t
		constexpr auto bIsDangerHP = 0x2c8; // bool
		constexpr auto PlayerInfoProgressSlotWidgetClass = 0x2d0; // UUserWidget*
		constexpr auto Delegate_OnPlayerInfoSlotSizeChanged = 0x2d8; // FMulticastInlineDelegate
	}

	namespace n_UNavigationInvokerComponent {
		constexpr auto TileGenerationRadius = 0xb0; // float
		constexpr auto TileRemovalRadius = 0xb4; // float
	}

	namespace n_ABravoHotelSimulationActor {
		constexpr auto Root = 0x318; // USceneComponent*
		constexpr auto SimulationStaticMesh = 0x320; // UStaticMeshComponent*
		constexpr auto LifeTime = 0x328; // float
	}

	namespace n_UBHBWeaponUpgradeEffectBase {
		constexpr auto TargetWeapon = 0x420; // ABravoHotelWeaponBase*
	}

	namespace n_ABravoHotelProjectileGrenadeC4 {
		constexpr auto ExplosionGroundDecalMaterial = 0x678; // UMaterialInterface*
		constexpr auto ExplosionGroundDecalSize = 0x680; // FVector
		constexpr auto ExplosionGroundDecalComponent = 0x690; // UDecalComponent*
		constexpr auto ActiveDelayTime = 0x6a0; // float
		constexpr auto TrapEffect = 0x6a8; // UParticleSystemComponent*
		constexpr auto TrapTriggerEffect = 0x6b0; // UParticleSystem*
		constexpr auto TrapDestoryEffect = 0x6b8; // UParticleSystem*
		constexpr auto TrapLoopStartEvent = 0x6c0; // UAkAudioEvent*
		constexpr auto TrapLoopStopEvent = 0x6c8; // UAkAudioEvent*
		constexpr auto TrapTriggerEvent = 0x6d0; // UAkAudioEvent*
		constexpr auto AttachEvent = 0x6d8; // UAkAudioEvent*
		constexpr auto TrapLoopSoundHandle = 0x6e0; // FAudioPlayingHandle
		constexpr auto AttachedComponent = 0x6e8; // TWeakObjectPtr<UPrimitiveComponent>
		constexpr auto TimerHandle_CheckAttachedComponent = 0x6f0; // FTimerHandle
		constexpr auto HitItem = 0x6f8; // int32_t
		constexpr auto ExplosionOriginDeltaLocationUp = 0x6fc; // float
	}

	namespace n_UMaterialController {
		constexpr auto RelatedMID = 0x30; // TWeakObjectPtr<UMaterialInstanceDynamic>
	}

	namespace n_UModularSynthComponent {
		constexpr auto VoiceCount = 0x710; // int32_t
	}

	namespace n_UBravoHotelCustomMatchWidget {
		constexpr auto Data = 0x248; // FBravoHotelBlueZoneInfo
		constexpr auto PhaseInfo = 0x3f0; // TArray<FBattleRoyalPhaseInfo>
	}

	namespace n_UBTTask_FSM_AddState {
		constexpr auto FSM = 0x98; // UStateMachineComponent*
		constexpr auto TargetFSM = 0xa0; // FName
		constexpr auto NewStateName = 0xa8; // FName
		constexpr auto Debug = 0xb0; // bool
		constexpr auto ForceSuccess = 0xb1; // bool
	}

	namespace n_UAkFolder {
		constexpr auto UnrealFolderPath = 0x40; // FString
		constexpr auto WwiseFolderPath = 0x50; // FString
	}

	namespace n_ACoherentUIGTGameHUD {
		constexpr auto CoherentUIGTHUD = 0x408; // UCoherentUIGTHUD*
	}

	namespace n_URendererOverrideSettings {
		constexpr auto bSupportAllShaderPermutations = 0x38; // char : 1
		constexpr auto bForceRecomputeTangents = 0x38; // char : 1
	}

	namespace n_UParticleModuleColorOverLife {
		constexpr auto ColorOverLife = 0x30; // FRawDistributionVector
		constexpr auto AlphaOverLife = 0x78; // FRawDistributionFloat
		constexpr auto bClampAlpha = 0xa8; // char : 1
	}

	namespace n_URig {
		constexpr auto TransformBases = 0x30; // TArray<FTransformBase>
		constexpr auto Nodes = 0x40; // TArray<FNode>
	}

	namespace n_UMovieSceneByteTrack {
		constexpr auto Enum = 0x88; // UEnum*
	}

	namespace n_UAkAudioBank {
		constexpr auto AutoLoad = 0x50; // bool
		constexpr auto LocalizedPlatformAssetDataMap = 0x58; // TMap<FString, TSoftObjectPtr<UAkAssetPlatformData>>
		constexpr auto LinkedAkEvents = 0xa8; // TSet<TSoftObjectPtr<UAkAudioEvent>>
		constexpr auto CurrentLocalizedPlatformAssetData = 0xf8; // UAkAssetPlatformData*
	}

	namespace n_ADDGIVolume {
		constexpr auto DDGIVolumeComponent = 0x318; // UDDGIVolumeComponent*
	}

	namespace n_UBravoHotelKillcamPlayback {
		constexpr auto KillcamWorld = 0x28; // UWorld*
		constexpr auto KillcamWorldPackage = 0x30; // UPackage*
	}

	namespace n_UMovieSceneAudioSection {
		constexpr auto Sound = 0xe0; // USoundBase*
		constexpr auto StartFrameOffset = 0xe8; // FFrameNumber
		constexpr auto StartOffset = 0xec; // float
		constexpr auto AudioStartTime = 0xf0; // float
		constexpr auto AudioDilationFactor = 0xf4; // float
		constexpr auto AudioVolume = 0xf8; // float
		constexpr auto SoundVolume = 0x100; // FMovieSceneFloatChannel
		constexpr auto PitchMultiplier = 0x1a0; // FMovieSceneFloatChannel
		constexpr auto AttachActorData = 0x240; // FMovieSceneActorReferenceData
		constexpr auto bSuppressSubtitles = 0x2f0; // bool
		constexpr auto bOverrideAttenuation = 0x2f1; // bool
		constexpr auto AttenuationSettings = 0x2f8; // USoundAttenuation*
		constexpr auto OnQueueSubtitles = 0x300; // FDelegate
		constexpr auto OnAudioFinished = 0x310; // FMulticastInlineDelegate
		constexpr auto OnAudioPlaybackPercent = 0x320; // FMulticastInlineDelegate
	}

	namespace n_UMovieScene2DTransformSection {
		constexpr auto TransformMask = 0xe0; // FMovieScene2DTransformMask
		constexpr auto Translation = 0xe8; // FMovieSceneFloatChannel [0x2]
		constexpr auto Rotation = 0x228; // FMovieSceneFloatChannel
		constexpr auto Scale = 0x2c8; // FMovieSceneFloatChannel [0x2]
		constexpr auto Shear = 0x408; // FMovieSceneFloatChannel [0x2]
	}

	namespace n_UClothLODDataCommon_Legacy {
		constexpr auto PhysicalMeshData = 0x28; // UClothPhysicalMeshDataBase_Legacy*
		constexpr auto ClothPhysicalMeshData = 0x30; // FClothPhysicalMeshData
		constexpr auto CollisionData = 0x128; // FClothCollisionData
	}

	namespace n_UBP_KeyInput_C {
		constexpr auto Key Input = 0x28; // FKey
		constexpr auto Analog Use Negative Axis = 0x40; // bool
		constexpr auto Analog Previous Axis Value = 0x44; // float
		constexpr auto Analog Current Axis Value = 0x48; // float
		constexpr auto World Delta Seconds = 0x4c; // float
		constexpr auto Input is Using Delta = 0x50; // bool
		constexpr auto Display Name = 0x58; // FString
	}

	namespace n_UPrimitiveComponent {
		constexpr auto MinDrawDistance = 0x238; // float
		constexpr auto LDMaxDrawDistance = 0x23c; // float
		constexpr auto CachedMaxDrawDistance = 0x240; // float
		constexpr auto DepthPriorityGroup = 0x244; // ESceneDepthPriorityGroup
		constexpr auto ViewOwnerDepthPriorityGroup = 0x245; // ESceneDepthPriorityGroup
		constexpr auto IndirectLightingCacheQuality = 0x246; // EIndirectLightingCacheQuality
		constexpr auto LightmapType = 0x247; // ELightmapType
		constexpr auto bUseMaxLODAsImposter = 0x248; // char : 1
		constexpr auto bBatchImpostersAsInstances = 0x248; // char : 1
		constexpr auto bNeverDistanceCull = 0x248; // char : 1
		constexpr auto bAlwaysCreatePhysicsState = 0x248; // char : 1
		constexpr auto bGenerateOverlapEvents = 0x249; // char : 1
		constexpr auto bMultiBodyOverlap = 0x249; // char : 1
		constexpr auto bTraceComplexOnMove = 0x249; // char : 1
		constexpr auto bReturnMaterialOnMove = 0x249; // char : 1
		constexpr auto bUseViewOwnerDepthPriorityGroup = 0x249; // char : 1
		constexpr auto bAllowCullDistanceVolume = 0x249; // char : 1
		constexpr auto bHasMotionBlurVelocityMeshes = 0x249; // char : 1
		constexpr auto bVisibleInReflectionCaptures = 0x249; // char : 1
		constexpr auto bVisibleInRayTracing = 0x24a; // char : 1
		constexpr auto bRenderInMainPass = 0x24a; // char : 1
		constexpr auto bRenderInDepthPass = 0x24a; // char : 1
		constexpr auto bReceivesDecals = 0x24a; // char : 1
		constexpr auto bOwnerNoSee = 0x24a; // char : 1
		constexpr auto bOnlyOwnerSee = 0x24a; // char : 1
		constexpr auto bIgnoreNearClippingForOcclusion = 0x24a; // char : 1
		constexpr auto bTreatAsBackgroundForOcclusion = 0x24a; // char : 1
		constexpr auto bUseAsOccluder = 0x24b; // char : 1
		constexpr auto bSelectable = 0x24b; // char : 1
		constexpr auto bForceMipStreaming = 0x24b; // char : 1
		constexpr auto bHasPerInstanceHitProxies = 0x24b; // char : 1
		constexpr auto CastShadow = 0x24b; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x24b; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x24b; // char : 1
		constexpr auto bCastDynamicShadow = 0x24b; // char : 1
		constexpr auto bCastStaticShadow = 0x24c; // char : 1
		constexpr auto bCastDirectionalShadow = 0x24c; // char : 1
		constexpr auto bCastVolumetricTranslucentShadow = 0x24c; // char : 1
		constexpr auto bSelfShadowOnly = 0x24c; // char : 1
		constexpr auto bCastFarShadow = 0x24c; // char : 1
		constexpr auto bCastInsetShadow = 0x24c; // char : 1
		constexpr auto bCastCinematicShadow = 0x24c; // char : 1
		constexpr auto bCastHiddenShadow = 0x24c; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x24d; // char : 1
		constexpr auto bLightAsIfStatic = 0x24d; // char : 1
		constexpr auto bLightAttachmentsAsGroup = 0x24d; // char : 1
		constexpr auto bExcludeFromLightAttachmentGroup = 0x24d; // char : 1
		constexpr auto bReceiveMobileCSMShadows = 0x24d; // char : 1
		constexpr auto bSingleSampleShadowFromStationaryLights = 0x24d; // char : 1
		constexpr auto bIgnoreRadialImpulse = 0x24d; // char : 1
		constexpr auto bIgnoreRadialForce = 0x24d; // char : 1
		constexpr auto bApplyImpulseOnDamage = 0x24e; // char : 1
		constexpr auto bReplicatePhysicsToAutonomousProxy = 0x24e; // char : 1
		constexpr auto bFillCollisionUnderneathForNavmesh = 0x24e; // char : 1
		constexpr auto AlwaysLoadOnClient = 0x24e; // char : 1
		constexpr auto AlwaysLoadOnServer = 0x24e; // char : 1
		constexpr auto bUseEditorCompositing = 0x24e; // char : 1
		constexpr auto bRenderCustomDepth = 0x24e; // char : 1
		constexpr auto bHasNoStreamableTextures = 0x24f; // char : 1
		constexpr auto bHasCustomNavigableGeometry = 0x250; // EHasCustomNavigableGeometry
		constexpr auto CanCharacterStepUpOn = 0x252; // ECanBeCharacterBase
		constexpr auto LightingChannels = 0x253; // FLightingChannels
		constexpr auto CustomDepthStencilWriteMask = 0x254; // ERendererStencilMask
		constexpr auto CustomDepthStencilValue = 0x258; // int32_t
		constexpr auto CustomPrimitiveData = 0x260; // FCustomPrimitiveData
		constexpr auto CustomPrimitiveDataInternal = 0x270; // FCustomPrimitiveData
		constexpr auto TranslucencySortPriority = 0x280; // int32_t
		constexpr auto VisibilityId = 0x284; // int32_t
		constexpr auto RuntimeVirtualTextures = 0x288; // TArray<URuntimeVirtualTexture*>
		constexpr auto VirtualTextureLodBias = 0x298; // int8_t
		constexpr auto VirtualTextureCullMips = 0x299; // int8_t
		constexpr auto VirtualTextureMinCoverage = 0x29a; // int8_t
		constexpr auto VirtualTextureRenderPassType = 0x29b; // ERuntimeVirtualTextureMainPassType
		constexpr auto LpvBiasMultiplier = 0x2a0; // float
		constexpr auto BoundsScale = 0x2ac; // float
		constexpr auto MoveIgnoreActors = 0x2c0; // TArray<AActor*>
		constexpr auto MoveIgnoreComponents = 0x2d0; // TArray<UPrimitiveComponent*>
		constexpr auto BodyInstance = 0x2f0; // FBodyInstance
		constexpr auto OnComponentHit = 0x480; // FMulticastSparseDelegate
		constexpr auto OnComponentBeginOverlap = 0x481; // FMulticastSparseDelegate
		constexpr auto OnComponentEndOverlap = 0x482; // FMulticastSparseDelegate
		constexpr auto OnComponentWake = 0x483; // FMulticastSparseDelegate
		constexpr auto OnComponentSleep = 0x484; // FMulticastSparseDelegate
		constexpr auto OnBeginCursorOver = 0x486; // FMulticastSparseDelegate
		constexpr auto OnEndCursorOver = 0x487; // FMulticastSparseDelegate
		constexpr auto OnClicked = 0x488; // FMulticastSparseDelegate
		constexpr auto OnReleased = 0x489; // FMulticastSparseDelegate
		constexpr auto OnInputTouchBegin = 0x48a; // FMulticastSparseDelegate
		constexpr auto OnInputTouchEnd = 0x48b; // FMulticastSparseDelegate
		constexpr auto OnInputTouchEnter = 0x48c; // FMulticastSparseDelegate
		constexpr auto OnInputTouchLeave = 0x48d; // FMulticastSparseDelegate
		constexpr auto LODParentPrimitive = 0x4a8; // UPrimitiveComponent*
	}

	namespace n_USizeBox {
		constexpr auto WidthOverride = 0x130; // float
		constexpr auto HeightOverride = 0x134; // float
		constexpr auto MinDesiredWidth = 0x138; // float
		constexpr auto MinDesiredHeight = 0x13c; // float
		constexpr auto MaxDesiredWidth = 0x140; // float
		constexpr auto MaxDesiredHeight = 0x144; // float
		constexpr auto MinAspectRatio = 0x148; // float
		constexpr auto MaxAspectRatio = 0x14c; // float
		constexpr auto bOverride_WidthOverride = 0x150; // char : 1
		constexpr auto bOverride_HeightOverride = 0x150; // char : 1
		constexpr auto bOverride_MinDesiredWidth = 0x150; // char : 1
		constexpr auto bOverride_MinDesiredHeight = 0x150; // char : 1
		constexpr auto bOverride_MaxDesiredWidth = 0x150; // char : 1
		constexpr auto bOverride_MaxDesiredHeight = 0x150; // char : 1
		constexpr auto bOverride_MinAspectRatio = 0x150; // char : 1
		constexpr auto bOverride_MaxAspectRatio = 0x150; // char : 1
	}

	namespace n_ABravoHotelPickup {
		constexpr auto BoxComponent = 0x320; // UBoxComponent*
		constexpr auto SphereComponent = 0x328; // USphereComponent*
		constexpr auto WorldStaticMesh = 0x330; // UStaticMeshComponent*
		constexpr auto WorldSkelMesh = 0x338; // USkeletalMeshComponent*
		constexpr auto AudioComponent = 0x348; // UBravoHotelAudioEmitterComponent*
		constexpr auto ItemInfo = 0x350; // FInventoryItemInfo
		constexpr auto DetailItemInfo = 0x3e8; // FInventoryItemDetailInfo
		constexpr auto AttachmentItems = 0x878; // TArray<FInventoryItemInfo>
		constexpr auto bDrawDebugInfo = 0x888; // bool
		constexpr auto LoadedAssets = 0x890; // TArray<UObject*>
		constexpr auto bLoadMesh = 0x8a9; // bool
		constexpr auto bPlaceOnTheGround = 0x8aa; // bool
		constexpr auto OnChangeItemInfoDelegate = 0x8b0; // FMulticastInlineDelegate
		constexpr auto IsSpawnBook = 0x8c0; // bool
		constexpr auto BookSpawnEffectComponent = 0x8c8; // UParticleSystemComponent*
		constexpr auto BookSpawnEffect = 0x8d0; // UParticleSystem*
		constexpr auto RootParticleComponent = 0x8d8; // UParticleSystemComponent*
		constexpr auto MeshParticleComponent = 0x8e0; // UParticleSystemComponent*
		constexpr auto PassiveChildParticleComponents = 0x8e8; // TArray<UParticleSystemComponent*>
		constexpr auto ActiveChildParticleComponents = 0x8f8; // TArray<UParticleSystemComponent*>
		constexpr auto RootParticle = 0x910; // UParticleSystem*
	}

	namespace n_UNavigationDataChunk {
		constexpr auto NavigationDataName = 0x28; // FName
	}

	namespace n_UDecalComponent {
		constexpr auto DecalMaterial = 0x230; // UMaterialInterface*
		constexpr auto SortOrder = 0x238; // int32_t
		constexpr auto FadeScreenSize = 0x23c; // float
		constexpr auto FadeStartDelay = 0x240; // float
		constexpr auto FadeDuration = 0x244; // float
		constexpr auto FadeInDuration = 0x248; // float
		constexpr auto FadeInStartDelay = 0x24c; // float
		constexpr auto bDestroyOwnerAfterFade = 0x250; // char : 1
		constexpr auto DecalSize = 0x254; // FVector
	}

	namespace n_UMaterialExpressionDepthFade {
		constexpr auto InOpacity = 0x40; // FExpressionInput
		constexpr auto FadeDistance = 0x54; // FExpressionInput
		constexpr auto OpacityDefault = 0x68; // float
		constexpr auto FadeDistanceDefault = 0x6c; // float
	}

	namespace n_UBlackboardKeyType_Object {
		constexpr auto BaseClass = 0x30; // UObject*
	}

	namespace n_UParticleModuleCameraOffset {
		constexpr auto CameraOffset = 0x30; // FRawDistributionFloat
		constexpr auto bSpawnTimeOnly = 0x60; // char : 1
		constexpr auto UpdateMethod = 0x64; // EParticleCameraOffsetUpdateMethod
	}

	namespace n_UPathFollowingComponent {
		constexpr auto MovementComp = 0xe8; // UNavMovementComponent*
		constexpr auto MyNavData = 0xf8; // ANavigationData*
	}

	namespace n_UNiagaraDataInterfaceGrid2D {
		constexpr auto NumCellsX = 0xd0; // int32_t
		constexpr auto NumCellsY = 0xd4; // int32_t
		constexpr auto NumCellsMaxAxis = 0xd8; // int32_t
		constexpr auto NumAttributes = 0xdc; // int32_t
		constexpr auto SetGridFromMaxAxis = 0xe0; // bool
		constexpr auto WorldBBoxSize = 0xe4; // FVector2D
	}

	namespace n_UBHBForceField {
		constexpr auto AnimInstanceArray = 0x2b8; // TArray<UAnimInstance*>
	}

	namespace n_ULocalizedOverlays {
		constexpr auto DefaultOverlays = 0x28; // UBasicOverlays*
		constexpr auto LocaleToOverlaysMap = 0x30; // TMap<FString, UBasicOverlays*>
	}

	namespace n_UWidget {
		constexpr auto Slot = 0x28; // UPanelSlot*
		constexpr auto bIsEnabledDelegate = 0x30; // FDelegate
		constexpr auto ToolTipText = 0x40; // FText
		constexpr auto ToolTipTextDelegate = 0x58; // FDelegate
		constexpr auto ToolTipWidget = 0x68; // UWidget*
		constexpr auto ToolTipWidgetDelegate = 0x70; // FDelegate
		constexpr auto VisibilityDelegate = 0x80; // FDelegate
		constexpr auto RenderTransform = 0x90; // FWidgetTransform
		constexpr auto RenderTransformPivot = 0xac; // FVector2D
		constexpr auto bIsVariable = 0xb4; // char : 1
		constexpr auto bCreatedByConstructionScript = 0xb4; // char : 1
		constexpr auto bIsEnabled = 0xb4; // char : 1
		constexpr auto bOverride_Cursor = 0xb4; // char : 1
		constexpr auto AccessibleWidgetData = 0xb8; // USlateAccessibleWidgetData*
		constexpr auto bIsVolatile = 0xc0; // char : 1
		constexpr auto Cursor = 0xc1; // EMouseCursor
		constexpr auto Clipping = 0xc2; // EWidgetClipping
		constexpr auto Visibility = 0xc3; // ESlateVisibility
		constexpr auto RenderOpacity = 0xc4; // float
		constexpr auto Navigation = 0xc8; // UWidgetNavigation*
		constexpr auto FlowDirectionPreference = 0xd0; // EFlowDirectionPreference
		constexpr auto NativeBindings = 0xf8; // TArray<UPropertyBinding*>
	}

	namespace n_UNiagaraPreviewAxis_InterpParamVector2D {
		constexpr auto Min = 0x38; // FVector2D
		constexpr auto MAX = 0x40; // FVector2D
	}

	namespace n_UNiagaraSimulationStageBase {
		constexpr auto Script = 0x28; // UNiagaraScript*
		constexpr auto SimulationStageName = 0x30; // FName
	}

	namespace n_UAkAssetDataSwitchContainerData {
		constexpr auto GroupValue = 0x28; // TSoftObjectPtr<UAkGroupValue>
		constexpr auto DefaultGroupValue = 0x50; // UAkGroupValue*
		constexpr auto MediaList = 0x58; // TArray<UAkMediaAsset*>
		constexpr auto Children = 0x68; // TArray<UAkAssetDataSwitchContainerData*>
	}

	namespace n_AChat_System_C {
		constexpr auto UberGraphFrame = 0x318; // FPointerToUberGraphFrame
		constexpr auto DefaultSceneRoot = 0x320; // USceneComponent*
		constexpr auto Muted Players = 0x328; // TArray<AChat_System_C*>
		constexpr auto Two-way Mute? = 0x338; // bool
		constexpr auto Player Name = 0x340; // FString
		constexpr auto Players to Message = 0x350; // TArray<AChat_System_C*>
		constexpr auto Game Instance Blueprint = 0x360; // UChat_GameInstance_C*
		constexpr auto Joined Groups = 0x368; // TArray<FString>
		constexpr auto Banned Groups = 0x378; // TArray<FString>
		constexpr auto Owned Groups = 0x388; // TArray<FString>
		constexpr auto Chat Widget = 0x398; // UChat_MainWidget_C*
		constexpr auto HUD Widget = 0x3a0; // UHUD_Widget_C*
	}

	namespace n_UStreamingSettings {
		constexpr auto AsyncLoadingThreadEnabled = 0x38; // char : 1
		constexpr auto AsyncPostLoadEnabled = 0x38; // char : 1
		constexpr auto WarnIfTimeLimitExceeded = 0x38; // char : 1
		constexpr auto TimeLimitExceededMultiplier = 0x3c; // float
		constexpr auto TimeLimitExceededMinTime = 0x40; // float
		constexpr auto MinBulkDataSizeForAsyncLoading = 0x44; // int32_t
		constexpr auto UseBackgroundLevelStreaming = 0x48; // char : 1
		constexpr auto AsyncLoadingUseFullTimeLimit = 0x48; // char : 1
		constexpr auto AsyncLoadingTimeLimit = 0x4c; // float
		constexpr auto PriorityAsyncLoadingExtraTime = 0x50; // float
		constexpr auto LevelStreamingActorsUpdateTimeLimit = 0x54; // float
		constexpr auto PriorityLevelStreamingActorsUpdateExtraTime = 0x58; // float
		constexpr auto LevelStreamingComponentsRegistrationGranularity = 0x5c; // int32_t
		constexpr auto LevelStreamingUnregisterComponentsTimeLimit = 0x60; // float
		constexpr auto LevelStreamingComponentsUnregistrationGranularity = 0x64; // int32_t
		constexpr auto FlushStreamingOnExit = 0x68; // char : 1
		constexpr auto EventDrivenLoaderEnabled = 0x68; // char : 1
	}

	namespace n_UBravoHotelScenarioBase {
		constexpr auto OwnerActor = 0x28; // AActor*
	}

	namespace n_UFindTurnBasedMatchCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_USoundNodeParamCrossFade {
		constexpr auto ParamName = 0x58; // FName
	}

	namespace n_UAkDurationCallbackInfo {
		constexpr auto Duration = 0x38; // float
		constexpr auto EstimatedDuration = 0x3c; // float
		constexpr auto AudioNodeID = 0x40; // int32_t
		constexpr auto MediaID = 0x44; // int32_t
		constexpr auto bStreaming = 0x48; // bool
	}

	namespace n_UARTrackableNotifyComponent {
		constexpr auto OnAddTrackedGeometry = 0xb0; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedGeometry = 0xc0; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedGeometry = 0xd0; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedPlane = 0xe0; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedPlane = 0xf0; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedPlane = 0x100; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedPoint = 0x110; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedPoint = 0x120; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedPoint = 0x130; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedImage = 0x140; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedImage = 0x150; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedImage = 0x160; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedFace = 0x170; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedFace = 0x180; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedFace = 0x190; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedEnvProbe = 0x1a0; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedEnvProbe = 0x1b0; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedEnvProbe = 0x1c0; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedObject = 0x1d0; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedObject = 0x1e0; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedObject = 0x1f0; // FMulticastInlineDelegate
	}

	namespace n_UMovieSceneFloatSection {
		constexpr auto FloatCurve = 0xe0; // FMovieSceneFloatChannel
	}

	namespace n_UBravoHotelReportDataManager {
		constexpr auto CurrWorldContext = 0x368; // UObject*
	}

	namespace n_UBravoHotelLoadingWidget {
		constexpr auto LoadingScreenIndex = 0x248; // int32_t
		constexpr auto FromLoading = 0x250; // FString
		constexpr auto MutableList = 0x270; // TArray<ABravoHotelCharacter*>
		constexpr auto TargetPawn = 0x288; // APawn*
	}

	namespace n_UParticleModuleVectorFieldScaleOverLife {
		constexpr auto VectorFieldScaleOverLife = 0x30; // UDistributionFloat*
		constexpr auto VectorFieldScaleOverLifeRaw = 0x38; // FRawDistributionFloat
	}

	namespace n_UProgressWidgetStyle {
		constexpr auto ProgressBarStyle = 0x30; // FProgressBarStyle
	}

	namespace n_UMaterialExpressionPreviousFrameSwitch {
		constexpr auto CurrentFrame = 0x40; // FExpressionInput
		constexpr auto PreviousFrame = 0x54; // FExpressionInput
	}

	namespace n_ABravoHotelSuperBarrier {
		constexpr auto StaticMeshComponent = 0x318; // UStaticMeshComponent*
		constexpr auto CreationEffectMeshComponent = 0x320; // UStaticMeshComponent*
		constexpr auto bIsLifeSpanExpired = 0x328; // bool
		constexpr auto DestructibleMeshComponent = 0x330; // UDestructibleComponent*
		constexpr auto DestructibleMeshRef = 0x338; // UDestructibleMesh*
		constexpr auto MaxHp = 0x340; // float
		constexpr auto CurrentHP = 0x344; // float
		constexpr auto ImpactPointOnDestruct = 0x348; // FVector_NetQuantize
		constexpr auto BarrierDissolveValue = 0x360; // float
		constexpr auto ParticleSystem_OnSpawn = 0x368; // UParticleSystem*
		constexpr auto AkSound_OnSpawn = 0x370; // UAkAudioEvent*
		constexpr auto AKSound_Destructed = 0x378; // UAkAudioEvent*
		constexpr auto AkSound_Melee = 0x380; // UAkAudioEvent*
		constexpr auto ParticleSystemComponent_OnSpawn = 0x388; // UParticleSystemComponent*
	}

	namespace n_UBravoHotelTrajectoryComponent {
		constexpr auto bCanDrawTrajectory = 0xb0; // bool
		constexpr auto bUseDebugLine = 0xb1; // bool
		constexpr auto bIsTrajectorySegmentsCreated = 0xb2; // bool
		constexpr auto DesiredStartLocation = 0xb4; // FVector
		constexpr auto Gravity = 0xc0; // FVector
		constexpr auto InitialVelocity = 0xcc; // FVector
		constexpr auto TrajectorySegmentCount = 0xd8; // float
		constexpr auto TrajectorySegmentLength = 0xdc; // float
		constexpr auto HitSegmentIndex = 0xe0; // int32_t
		constexpr auto ParticleColor = 0xe4; // FLinearColor
		constexpr auto ParticleColorMultiplier = 0xf4; // float
		constexpr auto MPC_Trajectory = 0xf8; // UMaterialParameterCollection*
		constexpr auto TrajectoryParticleSystem = 0x100; // UParticleSystem*
		constexpr auto SpawnedParticleArray = 0x108; // TArray<UParticleSystemComponent*>
		constexpr auto DecalComponent = 0x118; // UDecalComponent*
		constexpr auto DecalScale = 0x120; // FVector
		constexpr auto DecalColor = 0x12c; // FLinearColor
		constexpr auto DecalMaterial = 0x140; // UMaterialInterface*
	}

	namespace n_UGameplayTask_TimeLimitedExecution {
		constexpr auto OnFinished = 0x68; // FMulticastInlineDelegate
		constexpr auto OnTimeExpired = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UAkAssetPlatformData {
		constexpr auto CurrentAssetData = 0x28; // UAkAssetData*
	}

	namespace n_UVirtualTexturePoolConfig {
		constexpr auto DefaultSizeInMegabyte = 0x28; // int32_t
		constexpr auto Pools = 0x30; // TArray<FVirtualTextureSpacePoolConfig>
	}

	namespace n_UInterpTrackInstSound {
		constexpr auto LastUpdatePosition = 0x28; // float
		constexpr auto PlayAudioComp = 0x30; // UAudioComponent*
	}

	namespace n_UNiagaraPreviewAxis_InterpParamBase {
		constexpr auto Param = 0x28; // FName
		constexpr auto Count = 0x30; // int32_t
	}

	namespace n_ASplineMeshActor {
		constexpr auto SplineMeshComponent = 0x318; // USplineMeshComponent*
	}

	namespace n_UNiagaraDataInterfaceVector4Curve {
		constexpr auto XCurve = 0x58; // FRichCurve
		constexpr auto YCurve = 0xd8; // FRichCurve
		constexpr auto ZCurve = 0x158; // FRichCurve
		constexpr auto WCurve = 0x1d8; // FRichCurve
	}

	namespace n_UBlackboardKeyType_String {
		constexpr auto StringValue = 0x30; // FString
	}

	namespace n_USpotLightComponent {
		constexpr auto InnerConeAngle = 0x3a8; // float
		constexpr auto OuterConeAngle = 0x3ac; // float
		constexpr auto LightShaftConeAngle = 0x3b0; // float
		constexpr auto bUsePCSS = 0x3b4; // char : 1
		constexpr auto PCSSSharpness = 0x3b8; // float
		constexpr auto PCSSContrast = 0x3bc; // float
	}

	namespace n_UBravoHotelItemStandardGroupBoxComponent {
		constexpr auto ItemStandardGroupInfo = 0x4d8; // FDataTableRowHandle
		constexpr auto AllBoxInfos = 0x4e8; // FSpawnBoxList
	}

	namespace n_UMovieSceneGeometryCollectionSection {
		constexpr auto Params = 0xe0; // FMovieSceneGeometryCollectionParams
	}

	namespace n_UBravoHotelAnimInstanceFPP {
		constexpr auto CharacterRef = 0x268; // ABravoHotelCharacter*
		constexpr auto CurrentWeaponRef = 0x270; // ABravoHotelWeaponBase*
		constexpr auto AnimInstanceRef = 0x278; // UBravoHotelAnimInstance*
		constexpr auto AnimInstancePostProsessRef = 0x280; // UBravoHotelAnimInstancePostprocess*
		constexpr auto MeshComponent_3P = 0x288; // USkeletalMeshComponent*
		constexpr auto DeltaTime = 0x290; // float
		constexpr auto CurrentScopeAngle = 0x294; // float
		constexpr auto CurrentCameraTransform = 0x2a0; // FTransform
		constexpr auto BaseGripAnimation = 0x2d0; // UAnimSequence*
		constexpr auto WeaponHandAnim = 0x2d8; // UAnimSequence*
		constexpr auto WeaponSprintAnim = 0x2e0; // UAnimSequence*
		constexpr auto WeaponType = 0x2e8; // EWeaponType
		constexpr auto WeaponAnimType = 0x2e9; // EWeaponAnimationType
		constexpr auto FireType = 0x2ea; // EFireType
		constexpr auto IdleNum = 0x2ec; // int32_t
		constexpr auto CharacterDirection = 0x2f0; // float
		constexpr auto CharacterSpeed = 0x2f4; // float
		constexpr auto SpinePosition = 0x2f8; // FVector
		constexpr auto SpineJointPosition = 0x304; // FVector
		constexpr auto SpineRotation = 0x310; // FRotator
		constexpr auto bUpdateProneSlope = 0x31c; // bool
		constexpr auto ProneSlopeRotation = 0x320; // FRotator
		constexpr auto ProneRootOffset = 0x32c; // FVector
		constexpr auto PrevSurfaceDegrees = 0x338; // float
		constexpr auto RecoilVector = 0x33c; // FVector
		constexpr auto RecoilRotator = 0x348; // FRotator
		constexpr auto bEnableModifySpine = 0x354; // bool
		constexpr auto bEnableGenderIK = 0x355; // bool
		constexpr auto bEnableWeaponMontageGenderIK = 0x356; // bool
		constexpr auto ADSAlpha = 0x358; // float
		constexpr auto bIsNoWeapon = 0x35c; // bool
		constexpr auto bIsNoRangedWeapon = 0x35d; // bool
		constexpr auto bUseFirstPersonSM = 0x35e; // bool
		constexpr auto bUseThirdPersonLowerBody = 0x35f; // bool
		constexpr auto BlendTime_NoWeapon = 0x360; // float
		constexpr auto BlendTime_ADS = 0x364; // float
		constexpr auto bIsFreeLook = 0x368; // bool
		constexpr auto bIsMoving = 0x369; // bool
		constexpr auto bIsProne = 0x36a; // bool
		constexpr auto bCrouching = 0x36b; // bool
		constexpr auto bIsSprint = 0x36c; // bool
		constexpr auto bIsJumping = 0x36d; // bool
		constexpr auto bIsSwimming = 0x36e; // bool
		constexpr auto bUnderWaterSurface = 0x36f; // bool
		constexpr auto bIsLandStop = 0x370; // bool
		constexpr auto bIsAirWalking = 0x371; // bool
		constexpr auto bIsClimbing = 0x372; // bool
		constexpr auto bIsADS = 0x373; // bool
		constexpr auto bIsAOS = 0x374; // bool
		constexpr auto bIsFiring = 0x375; // bool
		constexpr auto bUseSpecialProneAnimation = 0x376; // bool
		constexpr auto SpecialProneAnimation = 0x378; // UBlendSpaceBase*
		constexpr auto bIsAmplifier = 0x380; // bool
		constexpr auto bIsReviving = 0x381; // bool
		constexpr auto bIsKnockedOut = 0x382; // bool
		constexpr auto CastingRemainTime = 0x384; // float
		constexpr auto bHoldWeaponPosition = 0x388; // bool
		constexpr auto bLastHoldWeaponPosition = 0x389; // bool
		constexpr auto bUseTPPUpper = 0x38a; // bool
		constexpr auto bEnableHandIK = 0x38b; // bool
		constexpr auto bUseLeftHandIK = 0x38c; // bool
		constexpr auto bIsWeaponAttachedToCamera = 0x38d; // bool
		constexpr auto bUseGrip = 0x38e; // bool
		constexpr auto bUseLeanRotation = 0x38f; // bool
		constexpr auto bAttachWeaponToLHand = 0x390; // bool
		constexpr auto DisableHandIKTimer = 0x394; // float
		constexpr auto AttachWeaponToLHandTimer = 0x398; // float
		constexpr auto bUseLeftArmBlendSlot = 0x39c; // bool
		constexpr auto BlendTime_HandIK = 0x3a0; // float
		constexpr auto AttachWeaponBoneToLHand = 0x3a4; // FName
		constexpr auto AttachWeaponToLHandTransform = 0x3b0; // FTransform
		constexpr auto AttachLHandIK_Location = 0x3e0; // FVector
		constexpr auto AttachLHandIK_Rotation = 0x3ec; // FRotator
		constexpr auto bReloading = 0x3f8; // bool
		constexpr auto bBoltAction = 0x3f9; // bool
		constexpr auto MovementMode = 0x3fa; // EMovementMode
		constexpr auto bIsInVehicle = 0x3fb; // bool
		constexpr auto bIsVehiclePassenger = 0x3fc; // bool
		constexpr auto bIsVehicleDriver = 0x3fd; // bool
		constexpr auto VehicleRef = 0x400; // ABravoHotelVehicle*
		constexpr auto VehicleAimOffsetYaw = 0x408; // float
		constexpr auto VehicleAimOffsetPitch = 0x40c; // float
		constexpr auto bUseHandlebarAnim = 0x410; // bool
		constexpr auto bUseOnlyRightHandInADS = 0x411; // bool
		constexpr auto BS_DriverHandleBar = 0x418; // UBlendSpaceBase*
		constexpr auto VehicleHandlingIdleAnim = 0x420; // UAnimSequence*
		constexpr auto VehicleHandlingLeftAnim = 0x428; // UAnimSequence*
		constexpr auto VehicleHandlingRightAnim = 0x430; // UAnimSequence*
		constexpr auto DriverAimOffsetBasePose = 0x438; // UAnimSequence*
		constexpr auto DriverAimOffset = 0x440; // UBlendSpaceBase*
		constexpr auto VehicleLeftHandIK = 0x450; // FTransform
		constexpr auto VehicleLeftHandIK_Location = 0x480; // FVector
		constexpr auto VehicleLeftHandIK_Rotation = 0x48c; // FRotator
		constexpr auto VehicleRightHandIK = 0x4a0; // FTransform
		constexpr auto VehicleRightHandIK_Location = 0x4d0; // FVector
		constexpr auto VehicleRightHandIK_Rotation = 0x4dc; // FRotator
		constexpr auto VehicleLeftFootIK = 0x4f0; // FTransform
		constexpr auto VehicleRightFootIK = 0x520; // FTransform
		constexpr auto bHasFootIKSocket = 0x550; // bool
		constexpr auto bUseVehicleLeftHandIK = 0x551; // bool
		constexpr auto bUseVehicleRightHandIK = 0x552; // bool
		constexpr auto bIsLeftSteering = 0x553; // bool
		constexpr auto bIsRightSteering = 0x554; // bool
		constexpr auto LeftSteeringPlayRate = 0x558; // float
		constexpr auto RightSteeringPlayRate = 0x55c; // float
		constexpr auto bIsIdleSteering = 0x560; // bool
		constexpr auto DriverIdlePoseBlendAlpha = 0x564; // float
		constexpr auto WeaponTransformTimer = 0x568; // float
		constexpr auto WeaponTransformMaxTime = 0x56c; // float
		constexpr auto AOSAlpha = 0x570; // float
		constexpr auto SprintSpeedModifier = 0x574; // float
		constexpr auto CurrentWeaponWorldTransform = 0x580; // FTransform
		constexpr auto LeftHandComponentIK = 0x5b0; // FTransform
		constexpr auto RightHandComponentIK = 0x5e0; // FTransform
		constexpr auto LeftHandIK_Location = 0x610; // FVector
		constexpr auto LeftHandIK_Rotation = 0x61c; // FRotator
		constexpr auto RightHandIK_Location = 0x628; // FVector
		constexpr auto RightHandIK_Rotation = 0x634; // FRotator
		constexpr auto FemaleLeftHandIKModify = 0x640; // FVector
		constexpr auto IdleCameraPosition = 0x64c; // FVector
		constexpr auto LeanRotation = 0x658; // FRotator
		constexpr auto ThrowingWeaponType = 0x664; // EThrowingWeaponType
		constexpr auto ThrowingWeaponState = 0x665; // EThrowingWeaponState
		constexpr auto GrenadeThrowingType = 0x666; // EGrenadeThrowingType
		constexpr auto bIsUnderThrowType = 0x667; // bool
		constexpr auto ThrowingWeapon_Stand_Idle = 0x668; // UAnimSequence*
		constexpr auto ThrowingWeapon_Stand_Idle_Under = 0x670; // UAnimSequence*
		constexpr auto ThrowingWeapon_Stand_PinOff_Idle = 0x678; // UAnimSequence*
		constexpr auto ThrowingWeapon_Stand_PinOff_Idle_Additive = 0x680; // UAnimSequence*
		constexpr auto ThrowingWeapon_Stand_ThrowUnder_Idle = 0x688; // UAnimSequence*
		constexpr auto ThrowingWeapon_Stand_ThrowUnder_Idle_Additive = 0x690; // UAnimSequence*
		constexpr auto ThrowingWeapon_Crouch_Idle = 0x698; // UAnimSequence*
		constexpr auto ThrowingWeapon_Crouch_PinOff_Idle = 0x6a0; // UAnimSequence*
		constexpr auto ThrowingWeapon_Crouch_PinOff_Idle_Additive = 0x6a8; // UAnimSequence*
		constexpr auto ThrowingWeapon_Crouch_ThrowUnder_Idle = 0x6b0; // UAnimSequence*
		constexpr auto ThrowingWeapon_Crouch_ThrowUnder_Idle_Additive = 0x6b8; // UAnimSequence*
		constexpr auto ThrowingWeapon_Prone_Idle = 0x6c0; // UAnimSequence*
		constexpr auto ThrowingWeapon_Prone_PinOff_Idle_ThrowOver = 0x6c8; // UAnimSequence*
		constexpr auto ThrowingWeapon_Prone_PinOff_Idle_ThrowUnder = 0x6d0; // UAnimSequence*
		constexpr auto MontageListWithoutHandIK = 0x6d8; // TArray<UAnimMontage*>
		constexpr auto bIsCold = 0x6e9; // bool
		constexpr auto bIsBurning = 0x6ea; // bool
		constexpr auto HurtAlpha = 0x6ec; // float
		constexpr auto HeadBangingAlpha = 0x6f0; // float
		constexpr auto bUseFallingAnimation = 0x6f4; // bool
	}

	namespace n_UBravoHotelAttackDamageWidget {
		constexpr auto Enemy_DamageFadeIn = 0x248; // UWidgetAnimation*
		constexpr auto Enemy_DamageFadeOut = 0x250; // UWidgetAnimation*
		constexpr auto Enemy_DamageBroken = 0x258; // UWidgetAnimation*
		constexpr auto TimerHandle_EventRemoveWidget = 0x260; // FTimerHandle
		constexpr auto PlayerControllerRef = 0x268; // ABravoHotelPlayerController*
		constexpr auto WidgetSwitcher_1 = 0x270; // UWidgetSwitcher*
		constexpr auto TextBlock_1 = 0x278; // UTextBlock*
		constexpr auto TextBlock_3 = 0x280; // UTextBlock*
		constexpr auto TextBlock_457 = 0x288; // UTextBlock*
		constexpr auto Image_1 = 0x290; // UImage*
		constexpr auto Image_2 = 0x298; // UImage*
		constexpr auto Image_145 = 0x2a0; // UImage*
		constexpr auto Image_147 = 0x2a8; // UImage*
		constexpr auto Image_177 = 0x2b0; // UImage*
		constexpr auto AttackDamageWidgetInfo = 0x2b8; // FAttackDamageWidgetInfo
		constexpr auto bIsTrueDamage = 0x308; // bool
		constexpr auto bIsDestructed = 0x309; // bool
		constexpr auto WidgetLocation = 0x30c; // FVector
		constexpr auto Delegate_OnEnemy_DamageFadeIn_Finished = 0x318; // FDelegate
		constexpr auto Texture_Helmet = 0x368; // UPaperSprite*
		constexpr auto Texture_HelmetBroken = 0x370; // UPaperSprite*
		constexpr auto Texture_Chest = 0x378; // UPaperSprite*
		constexpr auto Texture_ChestBroken = 0x380; // UPaperSprite*
		constexpr auto Texture_Tire = 0x388; // UPaperSprite*
		constexpr auto Font_Heavy = 0x390; // UFont*
		constexpr auto Font_Regular = 0x398; // UFont*
	}

	namespace n_UNetConnection {
		constexpr auto Children = 0xb8; // TArray<UChildConnection*>
		constexpr auto Driver = 0xc8; // UNetDriver*
		constexpr auto PackageMapClass = 0xd0; // UPackageMap*
		constexpr auto PackageMap = 0xd8; // UPackageMap*
		constexpr auto OpenChannels = 0xe0; // TArray<UChannel*>
		constexpr auto SentTemporaries = 0xf0; // TArray<AActor*>
		constexpr auto ViewTarget = 0x100; // AActor*
		constexpr auto OwningActor = 0x108; // AActor*
		constexpr auto MaxPacket = 0x110; // int32_t
		constexpr auto InternalAck = 0x114; // char : 1
		constexpr auto PlayerId = 0x1d0; // FUniqueNetIdRepl
		constexpr auto LastReceiveTime = 0x240; // double
		constexpr auto ChannelsToTick = 0x1580; // TArray<UChannel*>
	}

	namespace n_UPhysicsHandleComponent {
		constexpr auto GrabbedComponent = 0xb0; // UPrimitiveComponent*
		constexpr auto bSoftAngularConstraint = 0xc0; // char : 1
		constexpr auto bSoftLinearConstraint = 0xc0; // char : 1
		constexpr auto bInterpolateTarget = 0xc0; // char : 1
		constexpr auto LinearDamping = 0xc4; // float
		constexpr auto LinearStiffness = 0xc8; // float
		constexpr auto AngularDamping = 0xcc; // float
		constexpr auto AngularStiffness = 0xd0; // float
		constexpr auto InterpolationSpeed = 0x140; // float
	}

	namespace n_UCohTextureUserWrapData {
		constexpr auto Texture = 0x70; // UTexture*
	}

	namespace n_ULightPropagationVolumeBlendable {
		constexpr auto Settings = 0x30; // FLightPropagationVolumeSettings
		constexpr auto BlendWeight = 0xa0; // float
	}

	namespace n_UNativeReplayListWidget {
		constexpr auto PageSizeTB = 0x248; // UEditableTextBox*
		constexpr auto CurrentPageTB = 0x250; // UEditableTextBox*
		constexpr auto ScrollBoxReplayList = 0x258; // UScrollBox*
		constexpr auto RefreshBtn = 0x260; // UButton*
		constexpr auto PrevBtn = 0x268; // UButton*
		constexpr auto NextBtn = 0x270; // UButton*
		constexpr auto TotalReplaysTB = 0x278; // UTextBlock*
		constexpr auto TotalPageText = 0x280; // UTextBlock*
		constexpr auto ReplayItemInform = 0x288; // UTextBlock*
		constexpr auto ShouldKeepChkBox = 0x290; // UCheckBox*
		constexpr auto PlayBtn = 0x298; // UButton*
		constexpr auto DeleteBtn = 0x2a0; // UButton*
		constexpr auto DeleteOldReplaysBtn = 0x2a8; // UButton*
		constexpr auto ReplaysToKeepTB = 0x2b0; // UEditableTextBox*
		constexpr auto TotalPages = 0x2b8; // int32_t
		constexpr auto CurrentPage = 0x2bc; // int32_t
		constexpr auto PageSize = 0x2c0; // int32_t
		constexpr auto TotalReplays = 0x2c4; // int32_t
		constexpr auto ReplaysToKeep = 0x2c8; // int32_t
	}

	namespace n_UUW-TeamInfoWidget_C {
		constexpr auto UberGraphFrame = 0x258; // FPointerToUberGraphFrame
		constexpr auto UW-TeamInfoItemWidget = 0x260; // UUW-TeamInfoItemWidget_C*
		constexpr auto UW-TeamInfoItemWidget_C_2 = 0x268; // UUW-TeamInfoItemWidget_C*
		constexpr auto VerticalBox_InfoList = 0x270; // UVerticalBox*
	}

	namespace n_UAkLuminInitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettingsWithSampleRate
		constexpr auto CommunicationSettings = 0x90; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xb8; // FAkAdvancedInitializationSettingsWithMultiCoreRendering
	}

	namespace n_UBTTask_MakeNoise {
		constexpr auto Loudnes = 0x70; // float
	}

	namespace n_UGeometryCacheCodecRaw {
		constexpr auto DummyProperty = 0x38; // int32_t
	}

	namespace n_UUW-SearchingMaterial_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Anim_LoopHintSpecialWeapon = 0x250; // UWidgetAnimation*
		constexpr auto Button_183 = 0x258; // UButton*
		constexpr auto Button_283 = 0x260; // UButton*
		constexpr auto CanvasPanel = 0x268; // UCanvasPanel*
		constexpr auto CanvasPanel_2 = 0x270; // UCanvasPanel*
		constexpr auto Image_2 = 0x278; // UImage*
		constexpr auto Image_3 = 0x280; // UImage*
		constexpr auto Image_4 = 0x288; // UImage*
		constexpr auto Image_185 = 0x290; // UImage*
		constexpr auto Image_186 = 0x298; // UImage*
		constexpr auto Image_189 = 0x2a0; // UImage*
		constexpr auto Image_297 = 0x2a8; // UImage*
		constexpr auto Img_Find = 0x2b0; // UImage*
		constexpr auto Overlay_2 = 0x2b8; // UOverlay*
		constexpr auto SizeBox_3 = 0x2c0; // USizeBox*
		constexpr auto T_SerchButton = 0x2c8; // UTextBlock*
		constexpr auto TextBlock_5 = 0x2d0; // UTextBlock*
		constexpr auto TextBlock_495 = 0x2d8; // UTextBlock*
		constexpr auto Throbber = 0x2e0; // UThrobber*
		constexpr auto UW-Inventory_MaterialIconSlot = 0x2e8; // UUW-Inventory_MaterialIconSlot_C*
		constexpr auto UW-Inventory_MaterialIconSlot_2 = 0x2f0; // UUW-Inventory_MaterialIconSlot_C*
		constexpr auto UW-Inventory_MaterialIconSlot_3 = 0x2f8; // UUW-Inventory_MaterialIconSlot_C*
		constexpr auto UW-Inventory_MaterialIconSlot_4 = 0x300; // UUW-Inventory_MaterialIconSlot_C*
		constexpr auto UW-Inventory_MaterialIconSlot_5 = 0x308; // UUW-Inventory_MaterialIconSlot_C*
		constexpr auto UW-Inventory_MaterialIconSlot_6 = 0x310; // UUW-Inventory_MaterialIconSlot_C*
		constexpr auto UW-Inventory_MaterialIconSlot_7 = 0x318; // UUW-Inventory_MaterialIconSlot_C*
		constexpr auto UW-Inventory_MaterialIconSlot_8 = 0x320; // UUW-Inventory_MaterialIconSlot_C*
		constexpr auto UW-Inventory_MaterialIconSlot_9 = 0x328; // UUW-Inventory_MaterialIconSlot_C*
		constexpr auto UW-Inventory_MaterialIconSlot_10 = 0x330; // UUW-Inventory_MaterialIconSlot_C*
		constexpr auto UW-Inventory_MaterialIconSlot_11 = 0x338; // UUW-Inventory_MaterialIconSlot_C*
		constexpr auto UW-Inventory_MaterialIconSlot_12 = 0x340; // UUW-Inventory_MaterialIconSlot_C*
		constexpr auto VerticalBox_2 = 0x348; // UVerticalBox*
		constexpr auto VerticalBox_4 = 0x350; // UVerticalBox*
		constexpr auto ShowButton = 0x358; // bool
		constexpr auto Index = 0x35c; // int32_t
		constexpr auto TempList = 0x360; // TArray<FName>
		constexpr auto MaxSlotCount = 0x370; // int32_t
		constexpr auto EnableShowExpertWeapon = 0x374; // bool
	}

	namespace n_UAudioWidget_C {
		constexpr auto UberGraphFrame = 0x298; // FPointerToUberGraphFrame
		constexpr auto Effect = 0x2a0; // USlotItemWidget_C*
		constexpr auto Master = 0x2a8; // USlotItemWidget_C*
		constexpr auto MasterOnOff = 0x2b0; // USlotItemWidget_C*
		constexpr auto Music = 0x2b8; // USlotItemWidget_C*
		constexpr auto ScrollBox_55 = 0x2c0; // UScrollBox*
		constexpr auto UI = 0x2c8; // USlotItemWidget_C*
		constexpr auto VoiceChanel = 0x2d0; // USlotItemWidget_C*
		constexpr auto VoiceInput = 0x2d8; // USlotItemWidget_C*
		constexpr auto VoiceInputMode = 0x2e0; // USlotItemWidget_C*
		constexpr auto VoiceOutput = 0x2e8; // USlotItemWidget_C*
		constexpr auto D = 0x2f0; // USubTitleSlotWidget_C*
		constexpr auto L!. = 0x2f8; // USubTitleSlotWidget_C*
		constexpr auto ScrollBarTimer = 0x300; // FTimerHandle
	}

	namespace n_UUW-RankPoint_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto HorizontalBox_Next = 0x250; // UHorizontalBox*
		constexpr auto ProgressBar_Current = 0x258; // UProgressBar*
		constexpr auto ProgressBar_Down = 0x260; // UProgressBar*
		constexpr auto ProgressBar_Up = 0x268; // UProgressBar*
		constexpr auto TextBlock_Current = 0x270; // UTextBlock*
		constexpr auto TextBlock_Max = 0x278; // UTextBlock*
		constexpr auto TextBlock_Next = 0x280; // UTextBlock*
		constexpr auto EnableUpdate = 0x288; // bool
		constexpr auto CurTime = 0x28c; // float
		constexpr auto ShowTime = 0x290; // float
		constexpr auto EndPoint = 0x294; // float
		constexpr auto ChangeValue = 0x298; // float
		constexpr auto StartPoint = 0x29c; // float
		constexpr auto Min = 0x2a0; // float
		constexpr auto MAX = 0x2a4; // float
		constexpr auto IsUPState = 0x2a8; // bool
		constexpr auto Dispatcher_ProgressBarDone = 0x2b0; // FMulticastInlineDelegate
	}

	namespace n_UMovieSceneGeometryCacheSection {
		constexpr auto Params = 0xe0; // FMovieSceneGeometryCacheParams
	}

	namespace n_UBravoHotelGamePlayStatistics {
		constexpr auto HitScore = 0x28; // uint16_t
		constexpr auto PickUpCoin = 0x2c; // int32_t
		constexpr auto ExpPoint = 0x30; // FRewardPoint
		constexpr auto TotalDistanceTraveled = 0x40; // float
		constexpr auto OnChangedFinalRankDelegate = 0x48; // FMulticastInlineDelegate
		constexpr auto FinalRank = 0x5a; // uint16_t
		constexpr auto GainedRP = 0x5c; // int32_t
		constexpr auto GoldPoint = 0x60; // FRewardPoint
		constexpr auto RewardItemList = 0x70; // TArray<FRewardItemInfo>
		constexpr auto DropedItemList = 0x80; // TArray<FRewardItemInfo>
		constexpr auto TotalDamage = 0x90; // float
		constexpr auto LifeTime = 0x94; // float
	}

	namespace n_UComponentDelegateBinding {
		constexpr auto ComponentDelegateBindings = 0x28; // TArray<FBlueprintComponentDelegateBinding>
	}

	namespace n_UBTDecorator_KeepInCone {
		constexpr auto ConeHalfAngle = 0x68; // float
		constexpr auto ConeOrigin = 0x70; // FBlackboardKeySelector
		constexpr auto Observed = 0x98; // FBlackboardKeySelector
		constexpr auto bUseSelfAsOrigin = 0xc0; // char : 1
		constexpr auto bUseSelfAsObserved = 0xc0; // char : 1
	}

	namespace n_UTextureRenderTargetCube {
		constexpr auto SizeX = 0xc0; // int32_t
		constexpr auto ClearColor = 0xc4; // FLinearColor
		constexpr auto OverrideFormat = 0xd4; // EPixelFormat
		constexpr auto bHDR = 0xd5; // char : 1
		constexpr auto bForceLinearGamma = 0xd5; // char : 1
	}

	namespace n_USoundWave {
		constexpr auto CompressionQuality = 0x160; // int32_t
		constexpr auto StreamingPriority = 0x164; // int32_t
		constexpr auto SampleRateQuality = 0x168; // ESoundwaveSampleRateSettings
		constexpr auto SoundGroup = 0x16a; // ESoundGroup
		constexpr auto bLooping = 0x16b; // char : 1
		constexpr auto bStreaming = 0x16b; // char : 1
		constexpr auto bSeekableStreaming = 0x16b; // char : 1
		constexpr auto LoadingBehavior = 0x16c; // ESoundWaveLoadingBehavior
		constexpr auto bMature = 0x16d; // char : 1
		constexpr auto bManualWordWrap = 0x16d; // char : 1
		constexpr auto bSingleLine = 0x16d; // char : 1
		constexpr auto bIsAmbisonics = 0x16e; // char : 1
		constexpr auto FrequenciesToAnalyze = 0x170; // TArray<float>
		constexpr auto CookedSpectralTimeData = 0x180; // TArray<FSoundWaveSpectralTimeData>
		constexpr auto CookedEnvelopeTimeData = 0x190; // TArray<FSoundWaveEnvelopeTimeData>
		constexpr auto InitialChunkSize = 0x1a0; // int32_t
		constexpr auto SpokenText = 0x1e8; // FString
		constexpr auto SubtitlePriority = 0x1f8; // float
		constexpr auto Volume = 0x1fc; // float
		constexpr auto Pitch = 0x200; // float
		constexpr auto NumChannels = 0x204; // int32_t
		constexpr auto SampleRate = 0x208; // int32_t
		constexpr auto Subtitles = 0x218; // TArray<FSubtitleCue>
		constexpr auto Curves = 0x228; // UCurveTable*
		constexpr auto InternalCurves = 0x230; // UCurveTable*
	}

	namespace n_UParticleModuleMeshRotation {
		constexpr auto StartRotation = 0x30; // FRawDistributionVector
		constexpr auto bInheritParent = 0x78; // char : 1
	}

	namespace n_UTeamInfoUpdaterComponent {
		constexpr auto OnTeamPlayerIndexChanged = 0xb0; // FMulticastInlineDelegate
		constexpr auto OnWidgetUpdateDelegate = 0xc0; // FMulticastInlineDelegate
		constexpr auto TeamPlayerIndex = 0xd0; // int32_t
		constexpr auto OldTargetPlayerState = 0xd8; // ABravoHotelPlayerState*
	}

	namespace n_USpectatorBeaconState {
		constexpr auto SessionName = 0x28; // FName
		constexpr auto NumConsumedReservations = 0x30; // int32_t
		constexpr auto MaxReservations = 0x34; // int32_t
		constexpr auto bRestrictCrossConsole = 0x38; // bool
		constexpr auto Reservations = 0x40; // TArray<FSpectatorReservation>
	}

	namespace n_AMK3DReplayController {
		constexpr auto OnReplayPauseEvent = 0x718; // FMulticastInlineDelegate
		constexpr auto OnReplayJumpEvent = 0x728; // FMulticastInlineDelegate
		constexpr auto OnReplayJumpCompleteEvent = 0x738; // FMulticastInlineDelegate
		constexpr auto PlayerCameraManagerClassName = 0x7d0; // FString
		constexpr auto SpectatorPawnClassName = 0x7e0; // FString
		constexpr auto ChangeViewModeDelegate = 0x7f0; // FMulticastInlineDelegate
		constexpr auto ChangeCameraTypeDelegate = 0x800; // FMulticastInlineDelegate
		constexpr auto ChangeCameraTypeByNetGuidDelegate = 0x810; // FMulticastInlineDelegate
		constexpr auto WidgetInfoArray = 0x828; // TArray<FUserWidgetInfoForReplay>
		constexpr auto ReplayWidgetMap = 0x838; // TMap<FString, UUserWidget*>
		constexpr auto KillcamComponent = 0x8e8; // UMK3DKillcamComponent*
		constexpr auto TargetcamComponent = 0x8f0; // UMK3DTargetcamComponent*
		constexpr auto pTargetPlayerInRecording = 0x908; // AActor*
		constexpr auto AfterKillcamHUDClassName = 0x910; // FString
		constexpr auto AfterKillcamHUDClass = 0x920; // AHUD*
		constexpr auto ReplayHUDClassName = 0x938; // FString
		constexpr auto ReplayHUDClass = 0x948; // AHUD*
	}

	namespace n_UMaterialExpressionFloor {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UCommandlet {
		constexpr auto HelpDescription = 0x28; // FString
		constexpr auto HelpUsage = 0x38; // FString
		constexpr auto HelpWebLink = 0x48; // FString
		constexpr auto HelpParamNames = 0x58; // TArray<FString>
		constexpr auto HelpParamDescriptions = 0x68; // TArray<FString>
		constexpr auto IsServer = 0x78; // char : 1
		constexpr auto IsClient = 0x78; // char : 1
		constexpr auto IsEditor = 0x78; // char : 1
		constexpr auto LogToConsole = 0x78; // char : 1
		constexpr auto ShowErrorCount = 0x78; // char : 1
		constexpr auto ShowProgress = 0x78; // char : 1
	}

	namespace n_UMagicLeapLightingTrackingComponent {
		constexpr auto UseGlobalAmbience = 0xb0; // bool
		constexpr auto UseColorTemp = 0xb1; // bool
	}

	namespace n_UCineCameraComponent {
		constexpr auto FilmbackSettings = 0x870; // FCameraFilmbackSettings
		constexpr auto Filmback = 0x87c; // FCameraFilmbackSettings
		constexpr auto LensSettings = 0x888; // FCameraLensSettings
		constexpr auto FocusSettings = 0x8a0; // FCameraFocusSettings
		constexpr auto CurrentFocalLength = 0x8f8; // float
		constexpr auto CurrentAperture = 0x8fc; // float
		constexpr auto CurrentFocusDistance = 0x900; // float
		constexpr auto FilmbackPresets = 0x910; // TArray<FNamedFilmbackPreset>
		constexpr auto LensPresets = 0x920; // TArray<FNamedLensPreset>
		constexpr auto DefaultFilmbackPresetName = 0x930; // FString
		constexpr auto DefaultFilmbackPreset = 0x940; // FString
		constexpr auto DefaultLensPresetName = 0x950; // FString
		constexpr auto DefaultLensFocalLength = 0x960; // float
		constexpr auto DefaultLensFStop = 0x964; // float
	}

	namespace n_AGameModeBase {
		constexpr auto OptionsString = 0x318; // FString
		constexpr auto GameSessionClass = 0x328; // AGameSession*
		constexpr auto GameStateClass = 0x330; // AGameStateBase*
		constexpr auto PlayerControllerClass = 0x338; // APlayerController*
		constexpr auto PlayerStateClass = 0x340; // APlayerState*
		constexpr auto HUDClass = 0x348; // AHUD*
		constexpr auto DefaultPawnClass = 0x350; // APawn*
		constexpr auto SpectatorClass = 0x358; // ASpectatorPawn*
		constexpr auto ReplaySpectatorPlayerControllerClass = 0x360; // APlayerController*
		constexpr auto ServerStatReplicatorClass = 0x368; // AServerStatReplicator*
		constexpr auto GameSession = 0x370; // AGameSession*
		constexpr auto GameState = 0x378; // AGameStateBase*
		constexpr auto ServerStatReplicator = 0x380; // AServerStatReplicator*
		constexpr auto DefaultPlayerName = 0x388; // FText
		constexpr auto bUseSeamlessTravel = 0x3a0; // char : 1
		constexpr auto bStartPlayersAsSpectators = 0x3a0; // char : 1
		constexpr auto bPauseable = 0x3a0; // char : 1
	}

	namespace n_UBTTask_RunBehavior {
		constexpr auto BehaviorAsset = 0x70; // UBehaviorTree*
	}

	namespace n_UBoxReflectionCaptureComponent {
		constexpr auto BoxTransitionDistance = 0x2b8; // float
		constexpr auto PreviewInfluenceBox = 0x2c0; // UBoxComponent*
		constexpr auto PreviewCaptureBox = 0x2c8; // UBoxComponent*
	}

	namespace n_USoundSubmix {
		constexpr auto bMuteWhenBackgrounded = 0x40; // char : 1
		constexpr auto SubmixEffectChain = 0x48; // TArray<USoundEffectSubmixPreset*>
		constexpr auto AmbisonicsPluginSettings = 0x58; // USoundfieldEncodingSettingsBase*
		constexpr auto EnvelopeFollowerAttackTime = 0x60; // int32_t
		constexpr auto EnvelopeFollowerReleaseTime = 0x64; // int32_t
		constexpr auto OutputVolume = 0x68; // float
		constexpr auto OnSubmixRecordedFileDone = 0x70; // FMulticastInlineDelegate
	}

	namespace n_UEnvQueryOption {
		constexpr auto Generator = 0x28; // UEnvQueryGenerator*
		constexpr auto Tests = 0x30; // TArray<UEnvQueryTest*>
	}

	namespace n_UInterpTrackVectorProp {
		constexpr auto PropertyName = 0x90; // FName
	}

	namespace n_UBlueprint {
		constexpr auto ParentClass = 0x50; // UObject*
		constexpr auto BlueprintType = 0x58; // EBlueprintType
		constexpr auto bRecompileOnLoad = 0x59; // char : 1
		constexpr auto bHasBeenRegenerated = 0x59; // char : 1
		constexpr auto bIsRegeneratingOnLoad = 0x59; // char : 1
		constexpr auto BlueprintSystemVersion = 0x5c; // int32_t
		constexpr auto SimpleConstructionScript = 0x60; // USimpleConstructionScript*
		constexpr auto ComponentTemplates = 0x68; // TArray<UActorComponent*>
		constexpr auto Timelines = 0x78; // TArray<UTimelineTemplate*>
		constexpr auto ComponentClassOverrides = 0x88; // TArray<FBPComponentClassOverride>
		constexpr auto InheritableComponentHandler = 0x98; // UInheritableComponentHandler*
	}

	namespace n_UAssetManager {
		constexpr auto ObjectReferenceList = 0x2c0; // TArray<UObject*>
		constexpr auto bIsGlobalAsyncScanEnvironment = 0x2d0; // bool
		constexpr auto bShouldGuessTypeAndName = 0x2d1; // bool
		constexpr auto bShouldUseSynchronousLoad = 0x2d2; // bool
		constexpr auto bIsLoadingFromPakFiles = 0x2d3; // bool
		constexpr auto bShouldAcquireMissingChunksOnLoad = 0x2d4; // bool
		constexpr auto bOnlyCookProductionAssets = 0x2d5; // bool
		constexpr auto bIsBulkScanning = 0x2d6; // bool
		constexpr auto bIsPrimaryAssetDirectoryCurrent = 0x2d7; // bool
		constexpr auto bIsManagementDatabaseCurrent = 0x2d8; // bool
		constexpr auto bUpdateManagementDatabaseAfterScan = 0x2d9; // bool
		constexpr auto bIncludeOnlyOnDiskAssets = 0x2da; // bool
		constexpr auto NumberOfSpawnedNotifications = 0x2dc; // int32_t
	}

	namespace n_UABP-DefaultMan_Native_C {
		constexpr auto UberGraphFrame = 0xc60; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0xc68; // FAnimNode_Root
		constexpr auto AnimGraphNode_TransitionResult_119 = 0xc98; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_118 = 0xcc0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_117 = 0xce8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_116 = 0xd10; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_115 = 0xd38; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_114 = 0xd60; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_113 = 0xd88; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_112 = 0xdb0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_111 = 0xdd8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_110 = 0xe00; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_109 = 0xe28; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_108 = 0xe50; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_107 = 0xe78; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_106 = 0xea0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_105 = 0xec8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_104 = 0xef0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_103 = 0xf18; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_102 = 0xf40; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_101 = 0xf68; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_100 = 0xf90; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_99 = 0xfb8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_98 = 0xfe0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_97 = 0x1008; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_96 = 0x1030; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_95 = 0x1058; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_94 = 0x1080; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_93 = 0x10a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_92 = 0x10d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_91 = 0x10f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_90 = 0x1120; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_89 = 0x1148; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_88 = 0x1170; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_87 = 0x1198; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_86 = 0x11c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_85 = 0x11e8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_84 = 0x1210; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_83 = 0x1238; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_82 = 0x1260; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_345 = 0x1288; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_61 = 0x1300; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_81 = 0x1330; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_344 = 0x1358; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_60 = 0x13d0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_343 = 0x1400; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_59 = 0x1478; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_19 = 0x14a8; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_StateResult_58 = 0x1558; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_80 = 0x1588; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_79 = 0x15b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_78 = 0x15d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_77 = 0x1600; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_342 = 0x1628; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_57 = 0x16a0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_116 = 0x16d0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_56 = 0x17b0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_341 = 0x17e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_55 = 0x1858; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_18 = 0x1888; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_StateResult_54 = 0x1938; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_76 = 0x1968; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_75 = 0x1990; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_340 = 0x19b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_83 = 0x1a30; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByEnum_69 = 0x1ad0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendSpacePlayer_115 = 0x1b80; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_114 = 0x1c60; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_97 = 0x1d40; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_339 = 0x1e00; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_53 = 0x1e78; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_338 = 0x1ea8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_82 = 0x1f20; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByEnum_68 = 0x1fc0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendSpacePlayer_113 = 0x2070; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_112 = 0x2150; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_96 = 0x2230; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_337 = 0x22f0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_52 = 0x2368; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_336 = 0x2398; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_81 = 0x2410; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByEnum_67 = 0x24b0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendSpacePlayer_111 = 0x2560; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_110 = 0x2640; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_95 = 0x2720; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_335 = 0x27e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_51 = 0x2858; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_17 = 0x2888; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_StateResult_50 = 0x2938; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_74 = 0x2968; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_73 = 0x2990; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_72 = 0x29b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_71 = 0x29e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_70 = 0x2a08; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_69 = 0x2a30; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_68 = 0x2a58; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_67 = 0x2a80; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_66 = 0x2aa8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_BlendListByBool_80 = 0x2ad0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_334 = 0x2b70; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_79 = 0x2be8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_333 = 0x2c88; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_94 = 0x2d00; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_332 = 0x2dc0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_66 = 0x2e38; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_331 = 0x2ee8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_49 = 0x2f60; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendListByBool_78 = 0x2f90; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_330 = 0x3030; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_329 = 0x30a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_93 = 0x3120; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByBool_77 = 0x31e0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_76 = 0x3280; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_328 = 0x3320; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_327 = 0x3398; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_326 = 0x3410; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_65 = 0x3488; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_StateResult_48 = 0x3538; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_109 = 0x3568; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_TransitionResult_65 = 0x3648; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_64 = 0x3670; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_63 = 0x3698; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_62 = 0x36c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_61 = 0x36e8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_60 = 0x3710; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_325 = 0x3738; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_24 = 0x37b0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_324 = 0x3878; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_47 = 0x38f0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TwoWayBlend_23 = 0x3920; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_323 = 0x39e8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_322 = 0x3a60; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_46 = 0x3ad8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_321 = 0x3b08; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_45 = 0x3b80; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_16 = 0x3bb0; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_BlendListByBool_75 = 0x3c60; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_44 = 0x3d00; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_320 = 0x3d30; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_43 = 0x3da8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_15 = 0x3dd8; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_StateResult_42 = 0x3e88; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_319 = 0x3eb8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_41 = 0x3f30; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_318 = 0x3f60; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_74 = 0x3fd8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_108 = 0x4078; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_40 = 0x4158; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_59 = 0x4188; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_ApplyAdditive_17 = 0x41b0; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_BlendSpacePlayer_107 = 0x4278; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_106 = 0x4358; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_73 = 0x4438; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_105 = 0x44d8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_39 = 0x45b8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_58 = 0x45e8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_57 = 0x4610; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_56 = 0x4638; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_55 = 0x4660; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_104 = 0x4688; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_38 = 0x4768; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_103 = 0x4798; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_37 = 0x4878; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_14 = 0x48a8; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_StateResult_36 = 0x4958; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_54 = 0x4988; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_53 = 0x49b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_317 = 0x49d8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_35 = 0x4a50; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_316 = 0x4a80; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_34 = 0x4af8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_13 = 0x4b28; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_StateResult_33 = 0x4bd8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_12 = 0x4c08; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_StateResult_32 = 0x4cb8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_315 = 0x4ce8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_314 = 0x4d60; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_92 = 0x4dd8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_313 = 0x4e98; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_312 = 0x4f10; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_311 = 0x4f88; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_64 = 0x5000; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_310 = 0x50b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_31 = 0x5128; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_309 = 0x5158; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_91 = 0x51d0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_308 = 0x5290; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_90 = 0x5308; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_307 = 0x53c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_306 = 0x5440; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_305 = 0x54b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_89 = 0x5530; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_6 = 0x55f0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_304 = 0x5638; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_303 = 0x56b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_302 = 0x5728; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_301 = 0x57a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_63 = 0x5818; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_300 = 0x58c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_299 = 0x5940; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_298 = 0x59b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_72 = 0x5a30; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_5 = 0x5ad0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByBool_71 = 0x5b18; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_297 = 0x5bb8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_88 = 0x5c30; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_296 = 0x5cf0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_295 = 0x5d68; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_294 = 0x5de0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_293 = 0x5e58; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_87 = 0x5ed0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByBool_70 = 0x5f90; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_4 = 0x6030; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_3 = 0x6078; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_2 = 0x60c0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByEnum_62 = 0x6108; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_292 = 0x61b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot_35 = 0x6230; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SequencePlayer_291 = 0x6278; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_86 = 0x62f0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByBool_69 = 0x63b0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByEnum_61 = 0x6450; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_290 = 0x6500; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_68 = 0x6578; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_102 = 0x6618; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_16 = 0x66f8; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_StateResult_30 = 0x67c0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_52 = 0x67f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_BlendListByEnum_60 = 0x6818; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_59 = 0x68c8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_UseCachedPose_60 = 0x6978; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LocalRefPose = 0x69a0; // FAnimNode_RefPose
		constexpr auto AnimGraphNode_Slot_34 = 0x69b8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_LayeredBoneBlend_85 = 0x6a00; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_289 = 0x6ac0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_67 = 0x6b38; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TwoWayBlend_22 = 0x6bd8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_288 = 0x6ca0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_287 = 0x6d18; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_286 = 0x6d90; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_84 = 0x6e08; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_285 = 0x6ec8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_29 = 0x6f40; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_11 = 0x6f70; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SaveCachedPose_26 = 0x7020; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_83 = 0x70d8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_9 = 0x7198; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_BlendListByBool_66 = 0x7320; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_8 = 0x73c0; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_7 = 0x7548; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_7 = 0x7568; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_3 = 0x7588; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_7 = 0x7690; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_BlendListByEnum_58 = 0x7818; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_65 = 0x78c8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_Slot_33 = 0x7968; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByBool_64 = 0x79b0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose_25 = 0x7a50; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_Slot_32 = 0x7b08; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SaveCachedPose_24 = 0x7b50; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_23 = 0x7c08; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_59 = 0x7cc0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_58 = 0x7ce8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_57 = 0x7d10; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_56 = 0x7d38; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_82 = 0x7d60; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_55 = 0x7e20; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_63 = 0x7e48; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_Slot_31 = 0x7ee8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose_54 = 0x7f30; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_53 = 0x7f58; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_6 = 0x7f80; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_UseCachedPose_52 = 0x8108; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_62 = 0x8130; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_61 = 0x81d0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LayeredBoneBlend_81 = 0x8270; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_51 = 0x8330; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_5 = 0x8358; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_UseCachedPose_50 = 0x84e0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_4 = 0x8508; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_BlendListByBool_60 = 0x8690; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_Slot_30 = 0x8730; // FAnimNode_Slot
		constexpr auto AnimGraphNode_LayeredBoneBlend_80 = 0x8778; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_Slot_29 = 0x8838; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByBool_59 = 0x8880; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_Slot_28 = 0x8920; // FAnimNode_Slot
		constexpr auto AnimGraphNode_LayeredBoneBlend_79 = 0x8968; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_Slot_27 = 0x8a28; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_26 = 0x8a70; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose_49 = 0x8ab8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ApplyAdditive_15 = 0x8ae0; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SequencePlayer_284 = 0x8ba8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot_25 = 0x8c20; // FAnimNode_Slot
		constexpr auto AnimGraphNode_ApplyAdditive_14 = 0x8c68; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_3 = 0x8d30; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_BlendListByBool_58 = 0x8eb8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_2 = 0x8f58; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_UseCachedPose_48 = 0x90e0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_78 = 0x9108; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_LayeredBoneBlend_77 = 0x91c8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SaveCachedPose_22 = 0x9288; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_47 = 0x9340; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_46 = 0x9368; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_45 = 0x9390; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_57 = 0x93b8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_Slot_24 = 0x9458; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendSpacePlayer_101 = 0x94a0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequenceEvaluator = 0x9580; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_LocalToComponentSpace_6 = 0x95c8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_2 = 0x95e8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_6 = 0x96f0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_BlendListByBool_56 = 0x9710; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_IdentityPose_7 = 0x97b0; // FAnimNode_RefPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_76 = 0x97c8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_283 = 0x9888; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_75 = 0x9900; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_IdentityPose_6 = 0x99c0; // FAnimNode_RefPose
		constexpr auto AnimGraphNode_SequencePlayer_282 = 0x99d8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_74 = 0x9a50; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_IdentityPose_5 = 0x9b10; // FAnimNode_RefPose
		constexpr auto AnimGraphNode_BlendListByEnum_57 = 0x9b28; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_281 = 0x9bd8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_73 = 0x9c50; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_IdentityPose_4 = 0x9d10; // FAnimNode_RefPose
		constexpr auto AnimGraphNode_StateResult_28 = 0x9d28; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_10 = 0x9d58; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SaveCachedPose_21 = 0x9e08; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_ApplyAdditive_13 = 0x9ec0; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_UseCachedPose_44 = 0x9f88; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_20 = 0x9fb0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_43 = 0xa068; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_55 = 0xa090; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_Slot_23 = 0xa130; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SequencePlayer_280 = 0xa178; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_54 = 0xa1f0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_53 = 0xa290; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_279 = 0xa330; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LocalToComponentSpace_5 = 0xa3a8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone = 0xa3c8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_5 = 0xa4d0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_BlendListByBool_52 = 0xa4f0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_Slot_22 = 0xa590; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_21 = 0xa5d8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_20 = 0xa620; // FAnimNode_Slot
		constexpr auto AnimGraphNode_IdentityPose_3 = 0xa668; // FAnimNode_RefPose
		constexpr auto AnimGraphNode_SequencePlayer_278 = 0xa680; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_51 = 0xa6f8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_50 = 0xa798; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_277 = 0xa838; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_27 = 0xa8b0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_9 = 0xa8e0; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SaveCachedPose_19 = 0xa990; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_42 = 0xaa48; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_41 = 0xaa70; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_49 = 0xaa98; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TwoWayBlend_21 = 0xab38; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_Slot_19 = 0xac00; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByBool_48 = 0xac48; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_Slot_18 = 0xace8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_LayeredBoneBlend_72 = 0xad30; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_40 = 0xadf0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_39 = 0xae18; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_18 = 0xae40; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_38 = 0xaef8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_37 = 0xaf20; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Slot_17 = 0xaf48; // FAnimNode_Slot
		constexpr auto AnimGraphNode_LayeredBoneBlend_71 = 0xaf90; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_Slot_16 = 0xb050; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose_36 = 0xb098; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_276 = 0xb0c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_275 = 0xb138; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt_20 = 0xb1b0; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_SequencePlayer_274 = 0xb250; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_273 = 0xb2c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_272 = 0xb340; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt_19 = 0xb3b8; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_SequencePlayer_271 = 0xb458; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_270 = 0xb4d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_269 = 0xb548; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt_18 = 0xb5c0; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_SequencePlayer_268 = 0xb660; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_267 = 0xb6d8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_266 = 0xb750; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt_17 = 0xb7c8; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_SequencePlayer_265 = 0xb868; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_47 = 0xb8e0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_46 = 0xb980; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_45 = 0xba20; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_26 = 0xbac0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_8 = 0xbaf0; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SaveCachedPose_17 = 0xbba0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_ApplyAdditive_12 = 0xbc58; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_UseCachedPose_35 = 0xbd20; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_44 = 0xbd48; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_264 = 0xbde8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_263 = 0xbe60; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_262 = 0xbed8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_261 = 0xbf50; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_56 = 0xbfc8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_StateResult_25 = 0xc078; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_7 = 0xc0a8; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SaveCachedPose_16 = 0xc158; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_70 = 0xc210; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_34 = 0xc2d0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_43 = 0xc2f8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_42 = 0xc398; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_260 = 0xc438; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_259 = 0xc4b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_41 = 0xc528; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_258 = 0xc5c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_257 = 0xc640; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_24 = 0xc6b8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_6 = 0xc6e8; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SaveCachedPose_15 = 0xc798; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_40 = 0xc850; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_39 = 0xc8f0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_33 = 0xc990; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_14 = 0xc9b8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_32 = 0xca70; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Slot_15 = 0xca98; // FAnimNode_Slot
		constexpr auto AnimGraphNode_LayeredBoneBlend_69 = 0xcae0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_31 = 0xcba0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_TwoBoneIK_11 = 0xcbd0; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_TwoBoneIK_10 = 0xcdb0; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_LocalToComponentSpace_4 = 0xcf90; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_4 = 0xcfb0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_SaveCachedPose_13 = 0xcfd0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_30 = 0xd088; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_29 = 0xd0b0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_TwoBoneIK_9 = 0xd0e0; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_TwoBoneIK_8 = 0xd2c0; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_TwoBoneIK_7 = 0xd4a0; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_TwoBoneIK_6 = 0xd680; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_LocalToComponentSpace_3 = 0xd860; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_3 = 0xd880; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_TwoBoneIK_5 = 0xd8a0; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_TwoBoneIK_4 = 0xda80; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_TwoBoneIK_3 = 0xdc60; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_TwoBoneIK_2 = 0xde40; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_LocalToComponentSpace_2 = 0xe020; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_2 = 0xe040; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_UseCachedPose_28 = 0xe060; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_27 = 0xe088; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_26 = 0xe0b0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Slot_14 = 0xe0d8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByEnum_55 = 0xe120; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_38 = 0xe1d0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace = 0xe270; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_UseCachedPose_25 = 0xe3f8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_256 = 0xe420; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_37 = 0xe498; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_Slot_13 = 0xe538; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_12 = 0xe580; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByBool_36 = 0xe5c8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_255 = 0xe668; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_254 = 0xe6e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_35 = 0xe758; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LayeredBoneBlend_68 = 0xe7f8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_Slot_11 = 0xe8b8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByBool_34 = 0xe900; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LayeredBoneBlend_67 = 0xe9a0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_Slot_10 = 0xea60; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByBool_33 = 0xeaa8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ApplyAdditive_11 = 0xeb48; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_UseCachedPose_24 = 0xec10; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_TransitionResult_51 = 0xec38; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_50 = 0xec60; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_49 = 0xec88; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_48 = 0xecb0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_47 = 0xecd8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_46 = 0xed00; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_45 = 0xed28; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_44 = 0xed50; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_43 = 0xed78; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_42 = 0xeda0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_41 = 0xedc8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_40 = 0xedf0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_39 = 0xee18; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_38 = 0xee40; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_37 = 0xee68; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_36 = 0xee90; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_35 = 0xeeb8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_34 = 0xeee0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_33 = 0xef08; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_32 = 0xef30; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_31 = 0xef58; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_30 = 0xef80; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_29 = 0xefa8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_28 = 0xefd0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_27 = 0xeff8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_26 = 0xf020; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_253 = 0xf048; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_252 = 0xf0c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_20 = 0xf138; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_LayeredBoneBlend_66 = 0xf200; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_100 = 0xf2c0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_251 = 0xf3a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_65 = 0xf418; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_99 = 0xf4d8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_250 = 0xf5b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_249 = 0xf630; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_248 = 0xf6a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_247 = 0xf720; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_246 = 0xf798; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_245 = 0xf810; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_244 = 0xf888; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_243 = 0xf900; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_19 = 0xf978; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_242 = 0xfa40; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_64 = 0xfab8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_98 = 0xfb78; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_241 = 0xfc58; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_63 = 0xfcd0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_97 = 0xfd90; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_32 = 0xfe70; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_240 = 0xff10; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_18 = 0xff88; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_96 = 0x10050; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_239 = 0x10130; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_17 = 0x101a8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_95 = 0x10270; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_16 = 0x10350; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_238 = 0x10418; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_237 = 0x10490; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_15 = 0x10508; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_236 = 0x105d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_14 = 0x10648; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_235 = 0x10710; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_13 = 0x10788; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_234 = 0x10850; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_12 = 0x108c8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_233 = 0x10990; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_11 = 0x10a08; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_94 = 0x10ad0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_93 = 0x10bb0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_62 = 0x10c90; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_92 = 0x10d50; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_54 = 0x10e30; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendSpacePlayer_91 = 0x10ee0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_90 = 0x10fc0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_89 = 0x110a0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_53 = 0x11180; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_IdentityPose_2 = 0x11230; // FAnimNode_RefPose
		constexpr auto AnimGraphNode_ApplyAdditive_10 = 0x11248; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_BlendListByEnum_52 = 0x11310; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_LayeredBoneBlend_61 = 0x113c0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByEnum_51 = 0x11480; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_LayeredBoneBlend_60 = 0x11530; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_88 = 0x115f0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_50 = 0x116d0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendSpacePlayer_87 = 0x11780; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_86 = 0x11860; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_85 = 0x11940; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_84 = 0x11a20; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_83 = 0x11b00; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_9 = 0x11be0; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_ApplyAdditive_8 = 0x11ca8; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_BlendListByBool_31 = 0x11d70; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_23 = 0x11e10; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_232 = 0x11e40; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_59 = 0x11eb8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_231 = 0x11f78; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_230 = 0x11ff0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_229 = 0x12068; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_228 = 0x120e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_58 = 0x12158; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_LayeredBoneBlend_57 = 0x12218; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_227 = 0x122d8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_226 = 0x12350; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_225 = 0x123c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_49 = 0x12440; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_224 = 0x124f0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_22 = 0x12568; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_223 = 0x12598; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_222 = 0x12610; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_56 = 0x12688; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_221 = 0x12748; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_55 = 0x127c0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_220 = 0x12880; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_219 = 0x128f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_218 = 0x12970; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_48 = 0x129e8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_217 = 0x12a98; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_21 = 0x12b10; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_216 = 0x12b40; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_54 = 0x12bb8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_215 = 0x12c78; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_214 = 0x12cf0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_213 = 0x12d68; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_53 = 0x12de0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_212 = 0x12ea0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_52 = 0x12f18; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_211 = 0x12fd8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_210 = 0x13050; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_209 = 0x130c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_47 = 0x13140; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_208 = 0x131f0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_20 = 0x13268; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_5 = 0x13298; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_StateResult_19 = 0x13348; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_LayeredBoneBlend_51 = 0x13378; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_207 = 0x13438; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_206 = 0x134b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_205 = 0x13528; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_204 = 0x135a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_203 = 0x13618; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_50 = 0x13690; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_LayeredBoneBlend_49 = 0x13750; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_202 = 0x13810; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_201 = 0x13888; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_46 = 0x13900; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_200 = 0x139b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_199 = 0x13a28; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_18 = 0x13aa0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_LayeredBoneBlend_48 = 0x13ad0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_198 = 0x13b90; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_197 = 0x13c08; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_196 = 0x13c80; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_195 = 0x13cf8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_47 = 0x13d70; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_194 = 0x13e30; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_46 = 0x13ea8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_193 = 0x13f68; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_192 = 0x13fe0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_45 = 0x14058; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_191 = 0x14108; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_190 = 0x14180; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_17 = 0x141f8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_189 = 0x14228; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_45 = 0x142a0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_188 = 0x14360; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_187 = 0x143d8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_186 = 0x14450; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_185 = 0x144c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_184 = 0x14540; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_183 = 0x145b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_182 = 0x14630; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_181 = 0x146a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_44 = 0x14720; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_LayeredBoneBlend_43 = 0x147e0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByEnum_44 = 0x148a0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_43 = 0x14950; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_180 = 0x14a00; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_179 = 0x14a78; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_42 = 0x14af0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_178 = 0x14ba0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_177 = 0x14c18; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_16 = 0x14c90; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_176 = 0x14cc0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_42 = 0x14d38; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_175 = 0x14df8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_41 = 0x14e70; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_174 = 0x14f30; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_173 = 0x14fa8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_172 = 0x15020; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_171 = 0x15098; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_170 = 0x15110; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_169 = 0x15188; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_168 = 0x15200; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_167 = 0x15278; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_166 = 0x152f0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_40 = 0x15368; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_165 = 0x15428; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_39 = 0x154a0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByEnum_41 = 0x15560; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_40 = 0x15610; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_LayeredBoneBlend_38 = 0x156c0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_164 = 0x15780; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_163 = 0x157f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_162 = 0x15870; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_39 = 0x158e8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_161 = 0x15998; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_15 = 0x15a10; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_25 = 0x15a40; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_24 = 0x15a68; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_23 = 0x15a90; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_22 = 0x15ab8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_21 = 0x15ae0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_BlendListByBool_30 = 0x15b08; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_82 = 0x15ba8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_81 = 0x15c88; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_160 = 0x15d68; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_37 = 0x15de0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_159 = 0x15ea0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_158 = 0x15f18; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_36 = 0x15f90; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByBool_29 = 0x16050; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_80 = 0x160f0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_79 = 0x161d0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_35 = 0x162b0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByBool_28 = 0x16370; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_78 = 0x16410; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_77 = 0x164f0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_38 = 0x165d0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_27 = 0x16680; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_76 = 0x16720; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_75 = 0x16800; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_26 = 0x168e0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_74 = 0x16980; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_73 = 0x16a60; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_14 = 0x16b40; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendListByBool_25 = 0x16b70; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_72 = 0x16c10; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_71 = 0x16cf0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_157 = 0x16dd0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_156 = 0x16e48; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_34 = 0x16ec0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_70 = 0x16f80; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_33 = 0x17060; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_69 = 0x17120; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_68 = 0x17200; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_37 = 0x172e0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendSpacePlayer_67 = 0x17390; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_66 = 0x17470; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_13 = 0x17550; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_155 = 0x17580; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_154 = 0x175f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_153 = 0x17670; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x176e8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x17708; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_TwoBoneIK = 0x17730; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_SequencePlayer_152 = 0x17910; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_151 = 0x17988; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_32 = 0x17a00; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_150 = 0x17ac0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_31 = 0x17b38; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_149 = 0x17bf8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_148 = 0x17c70; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt_16 = 0x17ce8; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_SequencePlayer_147 = 0x17d88; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_146 = 0x17e00; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_145 = 0x17e78; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_36 = 0x17ef0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_144 = 0x17fa0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_24 = 0x18018; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_143 = 0x180b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_23 = 0x18130; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_142 = 0x181d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_22 = 0x18248; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_141 = 0x182e8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_21 = 0x18360; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_140 = 0x18400; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_139 = 0x18478; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_138 = 0x184f0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_137 = 0x18568; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt_15 = 0x185e0; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_SequencePlayer_136 = 0x18680; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_135 = 0x186f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt_14 = 0x18770; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_SequencePlayer_134 = 0x18810; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_133 = 0x18888; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt_13 = 0x18900; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_BlendListByEnum_35 = 0x189a0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_132 = 0x18a50; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_131 = 0x18ac8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_130 = 0x18b40; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_34 = 0x18bb8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_129 = 0x18c68; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_128 = 0x18ce0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_20 = 0x18d58; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByEnum_33 = 0x18df8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_Slot_9 = 0x18ea8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SequencePlayer_127 = 0x18ef0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_12 = 0x18f68; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_4 = 0x18f98; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_StateResult_11 = 0x19048; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_20 = 0x19078; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_19 = 0x190a0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_18 = 0x190c8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_17 = 0x190f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_16 = 0x19118; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_126 = 0x19140; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_65 = 0x191b8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_64 = 0x19298; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_19 = 0x19378; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LayeredBoneBlend_30 = 0x19418; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_125 = 0x194d8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_124 = 0x19550; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_123 = 0x195c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_122 = 0x19640; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_121 = 0x196b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_120 = 0x19730; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_119 = 0x197a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_118 = 0x19820; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_29 = 0x19898; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_63 = 0x19958; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_62 = 0x19a38; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_18 = 0x19b18; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByEnum_32 = 0x19bb8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_31 = 0x19c68; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_LayeredBoneBlend_28 = 0x19d18; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByEnum_30 = 0x19dd8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendSpacePlayer_61 = 0x19e88; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_60 = 0x19f68; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_17 = 0x1a048; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_59 = 0x1a0e8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_58 = 0x1a1c8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_16 = 0x1a2a8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByEnum_29 = 0x1a348; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendSpacePlayer_57 = 0x1a3f8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_56 = 0x1a4d8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_15 = 0x1a5b8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_55 = 0x1a658; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_54 = 0x1a738; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_14 = 0x1a818; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_10 = 0x1a8b8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_53 = 0x1a8e8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_52 = 0x1a9c8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_13 = 0x1aaa8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_117 = 0x1ab48; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_27 = 0x1abc0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_51 = 0x1ac80; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_116 = 0x1ad60; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_26 = 0x1add8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByEnum_28 = 0x1ae98; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendSpacePlayer_50 = 0x1af48; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_49 = 0x1b028; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_115 = 0x1b108; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_114 = 0x1b180; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_113 = 0x1b1f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_112 = 0x1b270; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_111 = 0x1b2e8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_48 = 0x1b360; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_12 = 0x1b440; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_110 = 0x1b4e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_25 = 0x1b558; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_47 = 0x1b618; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_109 = 0x1b6f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_24 = 0x1b770; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByEnum_27 = 0x1b830; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendSpacePlayer_46 = 0x1b8e0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_45 = 0x1b9c0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_23 = 0x1baa0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_LayeredBoneBlend_22 = 0x1bb60; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByEnum_26 = 0x1bc20; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_25 = 0x1bcd0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_24 = 0x1bd80; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_23 = 0x1be30; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_LayeredBoneBlend_21 = 0x1bee0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_44 = 0x1bfa0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_43 = 0x1c080; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_42 = 0x1c160; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_22 = 0x1c240; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendSpacePlayer_41 = 0x1c2f0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_21 = 0x1c3d0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendSpacePlayer_40 = 0x1c480; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_39 = 0x1c560; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_38 = 0x1c640; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_37 = 0x1c720; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_36 = 0x1c800; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_35 = 0x1c8e0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_34 = 0x1c9c0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_33 = 0x1caa0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_7 = 0x1cb80; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_ApplyAdditive_6 = 0x1cc48; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_BlendListByBool_11 = 0x1cd10; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_9 = 0x1cdb0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_Slot_8 = 0x1cde0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SequencePlayer_108 = 0x1ce28; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_107 = 0x1cea0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_106 = 0x1cf18; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt_12 = 0x1cf90; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_SequencePlayer_105 = 0x1d030; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_20 = 0x1d0a8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_104 = 0x1d168; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_103 = 0x1d1e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_102 = 0x1d258; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_10 = 0x1d2d0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_101 = 0x1d370; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_100 = 0x1d3e8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt_11 = 0x1d460; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_SequencePlayer_99 = 0x1d500; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_98 = 0x1d578; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_19 = 0x1d5f0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_97 = 0x1d6b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_96 = 0x1d728; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt_10 = 0x1d7a0; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_SequencePlayer_95 = 0x1d840; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_18 = 0x1d8b8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_94 = 0x1d978; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_93 = 0x1d9f0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_20 = 0x1da68; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_92 = 0x1db18; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_91 = 0x1db90; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_90 = 0x1dc08; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_89 = 0x1dc80; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_88 = 0x1dcf8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_87 = 0x1dd70; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt_9 = 0x1dde8; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_SequencePlayer_86 = 0x1de88; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_85 = 0x1df00; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_84 = 0x1df78; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt_8 = 0x1dff0; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_BlendListByInt_7 = 0x1e090; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_BlendListByEnum_19 = 0x1e130; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_18 = 0x1e1e0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_83 = 0x1e290; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot_7 = 0x1e308; // FAnimNode_Slot
		constexpr auto AnimGraphNode_StateResult_8 = 0x1e350; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_3 = 0x1e380; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_StateResult_7 = 0x1e430; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_Slot_6 = 0x1e460; // FAnimNode_Slot
		constexpr auto AnimGraphNode_TransitionResult_15 = 0x1e4a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_14 = 0x1e4d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_13 = 0x1e4f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_12 = 0x1e520; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_11 = 0x1e548; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_10 = 0x1e570; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_9 = 0x1e598; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_8 = 0x1e5c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_7 = 0x1e5e8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_6 = 0x1e610; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_5 = 0x1e638; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_4 = 0x1e660; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_3 = 0x1e688; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x1e6b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult = 0x1e6d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_82 = 0x1e700; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_17 = 0x1e778; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_81 = 0x1e838; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_80 = 0x1e8b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_9 = 0x1e928; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_79 = 0x1e9c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_78 = 0x1ea40; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_77 = 0x1eab8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_76 = 0x1eb30; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_75 = 0x1eba8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_74 = 0x1ec20; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_17 = 0x1ec98; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_StateResult_6 = 0x1ed48; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_73 = 0x1ed78; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_72 = 0x1edf0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_71 = 0x1ee68; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_70 = 0x1eee0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_69 = 0x1ef58; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_16 = 0x1efd0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_StateResult_5 = 0x1f080; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_68 = 0x1f0b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_16 = 0x1f128; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByBool_8 = 0x1f1e8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_32 = 0x1f288; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_31 = 0x1f368; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_67 = 0x1f448; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_66 = 0x1f4c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_65 = 0x1f538; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_64 = 0x1f5b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_63 = 0x1f628; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_62 = 0x1f6a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_61 = 0x1f718; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_60 = 0x1f790; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_15 = 0x1f808; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByBool_7 = 0x1f8c8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_30 = 0x1f968; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_29 = 0x1fa48; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_15 = 0x1fb28; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_14 = 0x1fbd8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_13 = 0x1fc88; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_LayeredBoneBlend_14 = 0x1fd38; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByBool_6 = 0x1fdf8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_28 = 0x1fe98; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_27 = 0x1ff78; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_12 = 0x20058; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendSpacePlayer_26 = 0x20108; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_25 = 0x201e8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_5 = 0x202c8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_4 = 0x20368; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_24 = 0x20408; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_23 = 0x204e8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_3 = 0x205c8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_22 = 0x20668; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_21 = 0x20748; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_4 = 0x20828; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_59 = 0x20858; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_58 = 0x208d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_10 = 0x20948; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_LayeredBoneBlend_13 = 0x20a10; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_20 = 0x20ad0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_57 = 0x20bb0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_12 = 0x20c28; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_19 = 0x20ce8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_56 = 0x20dc8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_55 = 0x20e40; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_54 = 0x20eb8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_53 = 0x20f30; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_52 = 0x20fa8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_51 = 0x21020; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_9 = 0x21098; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_50 = 0x21160; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_11 = 0x211d8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_18 = 0x21298; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_49 = 0x21378; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_10 = 0x213f0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_17 = 0x214b0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x21590; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_48 = 0x21630; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_8 = 0x216a8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_16 = 0x21770; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_47 = 0x21850; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_7 = 0x218c8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_15 = 0x21990; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_14 = 0x21a70; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_13 = 0x21b50; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_5 = 0x21c30; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_ApplyAdditive_4 = 0x21cf8; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_BlendListByEnum_11 = 0x21dc0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_IdentityPose = 0x21e70; // FAnimNode_RefPose
		constexpr auto AnimGraphNode_ApplyAdditive_3 = 0x21e88; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SequencePlayer_46 = 0x21f50; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_6 = 0x21fc8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_45 = 0x22090; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_44 = 0x22108; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_5 = 0x22180; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_43 = 0x22248; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_4 = 0x222c0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_42 = 0x22388; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_3 = 0x22400; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_41 = 0x224c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_2 = 0x22540; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_40 = 0x22608; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend = 0x22680; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByEnum_10 = 0x22748; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_39 = 0x227f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_12 = 0x22870; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_11 = 0x22950; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_9 = 0x22a30; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByEnum_9 = 0x22af0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_LayeredBoneBlend_8 = 0x22ba0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_10 = 0x22c60; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_7 = 0x22d40; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_9 = 0x22e00; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_8 = 0x22ee0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_7 = 0x22f90; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendSpacePlayer_8 = 0x23040; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_7 = 0x23120; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_6 = 0x23200; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_5 = 0x232e0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_4 = 0x233c0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_3 = 0x234a0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_2 = 0x23580; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer = 0x23660; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_2 = 0x23740; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_ApplyAdditive = 0x23808; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_BlendListByBool = 0x238d0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_3 = 0x23970; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_38 = 0x239a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_37 = 0x23a18; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_36 = 0x23a90; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_35 = 0x23b08; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_34 = 0x23b80; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt_6 = 0x23bf8; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_LayeredBoneBlend_6 = 0x23c98; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_33 = 0x23d58; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_32 = 0x23dd0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_31 = 0x23e48; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_30 = 0x23ec0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_29 = 0x23f38; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_5 = 0x23fb0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_28 = 0x24070; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_27 = 0x240e8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_4 = 0x24160; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_26 = 0x24220; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_3 = 0x24298; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_25 = 0x24358; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_24 = 0x243d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_23 = 0x24448; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_22 = 0x244c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_21 = 0x24538; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt_5 = 0x245b0; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_LayeredBoneBlend_2 = 0x24650; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_20 = 0x24710; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_19 = 0x24788; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_18 = 0x24800; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_17 = 0x24878; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt_4 = 0x248f0; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_SequencePlayer_16 = 0x24990; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_15 = 0x24a08; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_14 = 0x24a80; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend = 0x24af8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_13 = 0x24bb8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_6 = 0x24c30; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_12 = 0x24ce0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_5 = 0x24d58; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_4 = 0x24e08; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_11 = 0x24eb8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_10 = 0x24f30; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_9 = 0x24fa8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_8 = 0x25020; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_7 = 0x25098; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt_3 = 0x25110; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_SequencePlayer_6 = 0x251b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0x25228; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x252a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt_2 = 0x25318; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x253b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x25430; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer = 0x254a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt = 0x25520; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_BlendListByEnum_3 = 0x255c0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_2 = 0x25670; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_Slot_5 = 0x25720; // FAnimNode_Slot
		constexpr auto AnimGraphNode_StateResult_2 = 0x25768; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_2 = 0x25798; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_StateResult = 0x25848; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x25878; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SaveCachedPose_12 = 0x25928; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_11 = 0x259e0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_23 = 0x25a98; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_22 = 0x25ac0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_10 = 0x25ae8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_21 = 0x25ba0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_20 = 0x25bc8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_9 = 0x25bf0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_19 = 0x25ca8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_18 = 0x25cd0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_8 = 0x25cf8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_17 = 0x25db0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_16 = 0x25dd8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_15 = 0x25e00; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_7 = 0x25e28; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_6 = 0x25ee0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_14 = 0x25f98; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_5 = 0x25fc0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_13 = 0x26078; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_12 = 0x260a0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_4 = 0x260c8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_11 = 0x26180; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_10 = 0x261a8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_9 = 0x261d0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_3 = 0x261f8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_8 = 0x262b0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_7 = 0x262d8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_2 = 0x26300; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_6 = 0x263b8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_5 = 0x263e0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Slot_4 = 0x26408; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SaveCachedPose = 0x26450; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_4 = 0x26508; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_3 = 0x26530; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Slot_3 = 0x26558; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_2 = 0x265a0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByEnum = 0x265e8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0x26698; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose = 0x266c0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Slot = 0x266e8; // FAnimNode_Slot
		constexpr auto StoppingAnimation = 0x26730; // UBlendSpaceBase*
		constexpr auto AdditiveLandingSlot = 0x26738; // FName
		constexpr auto StoppingDirection = 0x26740; // float
		constexpr auto CameraLagTimer = 0x26748; // FTimerHandle
		constexpr auto SavedCameraArmLocation = 0x26750; // FVector
		constexpr auto TestSprinting = 0x2675c; // bool
	}

	namespace n_UIpConnection {
		constexpr auto SocketErrorDisconnectDelay = 0x1af0; // float
	}

	namespace n_UShadowMapTexture2D {
		constexpr auto ShadowmapFlags = 0xe8; // EShadowMapFlags
	}

	namespace n_UParticleModuleCollision {
		constexpr auto DampingFactor = 0x30; // FRawDistributionVector
		constexpr auto DampingFactorRotation = 0x78; // FRawDistributionVector
		constexpr auto MaxCollisions = 0xc0; // FRawDistributionFloat
		constexpr auto CollisionCompletionOption = 0xf0; // EParticleCollisionComplete
		constexpr auto CollisionTypes = 0xf8; // TArray<EObjectTypeQuery>
		constexpr auto bApplyPhysics = 0x110; // char : 1
		constexpr auto bIgnoreTriggerVolumes = 0x110; // char : 1
		constexpr auto ParticleMass = 0x118; // FRawDistributionFloat
		constexpr auto DirScalar = 0x148; // float
		constexpr auto bPawnsDoNotDecrementCount = 0x14c; // char : 1
		constexpr auto bOnlyVerticalNormalsDecrementCount = 0x14c; // char : 1
		constexpr auto VerticalFudgeFactor = 0x150; // float
		constexpr auto DelayAmount = 0x158; // FRawDistributionFloat
		constexpr auto bDropDetail = 0x188; // char : 1
		constexpr auto bCollideOnlyIfVisible = 0x188; // char : 1
		constexpr auto bIgnoreSourceActor = 0x188; // char : 1
		constexpr auto MaxCollisionDistance = 0x18c; // float
	}

	namespace n_USteamNetConnection {
		constexpr auto bIsPassthrough = 0x1b40; // bool
	}

	namespace n_UDatasmithAssetUserData {
		constexpr auto MetaData = 0x28; // TMap<FName, FString>
	}

	namespace n_UBravoHotelLocalPlayer {
		constexpr auto UniquePlayerId = 0x258; // int32_t
		constexpr auto KillcamPlayback = 0x260; // UBravoHotelKillcamPlayback*
	}

	namespace n_UAnimCurveCompressionSettings {
		constexpr auto Codec = 0x28; // UAnimCurveCompressionCodec*
	}

	namespace n_USubsurfaceProfile {
		constexpr auto Settings = 0x28; // FSubsurfaceProfileStruct
	}

	namespace n_UUW-Exit_Popup_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Bg = 0x250; // UImage*
		constexpr auto btn_Cancel = 0x258; // UButton*
		constexpr auto btn_OK = 0x260; // UButton*
		constexpr auto Image_2 = 0x268; // UImage*
	}

	namespace n_ABravoHotelSightAttachment {
		constexpr auto WeaponSight = 0x318; // UStaticMeshComponent*
		constexpr auto bUpdateScopeWidgetScaling = 0x320; // bool
		constexpr auto SightType = 0x321; // EWeaponAttachmentItem
		constexpr auto LensMaterial_1P = 0x328; // UMaterialInterface*
		constexpr auto LensMaterial_3P = 0x330; // UMaterialInterface*
		constexpr auto ScopeWidget = 0x338; // UWidgetComponent*
		constexpr auto InitialScopeWidgetDistance = 0x340; // float
		constexpr auto BP_ScopeWidgets = 0x348; // TArray<UWidgetComponent*>
		constexpr auto ChildPrimitiveComponents = 0x358; // TArray<UPrimitiveComponent*>
		constexpr auto WidgetClass = 0x368; // UUserWidget*
		constexpr auto WidgetDrawSize = 0x370; // FVector2D
		constexpr auto DefaultWidgetComponentLocation = 0x378; // FVector
		constexpr auto bUseHighMagnificationMesh = 0x384; // bool
		constexpr auto HighMagnificationSightMesh = 0x388; // TSoftObjectPtr<UStaticMesh>
		constexpr auto DefaultSightMesh = 0x3b0; // TSoftObjectPtr<UStaticMesh>
		constexpr auto LoadedHighMagnificationSightMesh = 0x3d8; // UStaticMesh*
		constexpr auto LoadedDefaultSightMesh = 0x3e0; // UStaticMesh*
		constexpr auto TimerHandle_ScopeVisible = 0x3e8; // FTimerHandle
		constexpr auto VisibleDelayTime = 0x3f0; // float
		constexpr auto ViewportRatioMax = 0x3f4; // float
		constexpr auto ViewportSizeMax = 0x3f8; // float
		constexpr auto bIsADSMode = 0x3fc; // bool
		constexpr auto ScaleMultiplier_ZoomInOut = 0x400; // float
		constexpr auto bKeepMagnifierIndex = 0x404; // bool
		constexpr auto MagnifierList = 0x408; // TArray<float>
		constexpr auto CurrentMagnifier = 0x418; // float
		constexpr auto InitialMagnifierIndex = 0x41c; // int16_t
		constexpr auto ScopeWidgetDefaultSize = 0x420; // FVector2D
	}

	namespace n_UUW-Inventory_PopupPerkSlot_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Image_92 = 0x250; // UImage*
		constexpr auto Image_253 = 0x258; // UImage*
		constexpr auto Image_774 = 0x260; // UImage*
		constexpr auto PerkInfo = 0x268; // FPerkUIInfo
		constexpr auto PerkData = 0x298; // FPerkData
		constexpr auto IconBrush = 0x378; // FSlateBrush
		constexpr auto Popup = 0x400; // UUW-Inventory_ItemSlotHover_C*
	}

	namespace n_UBravoHotelDataManager {
		constexpr auto BattleRoyalGameMode = 0x3f0; // ABattleRoyaleGameMode*
		constexpr auto ClientLogCharacter = 0x5d8; // ABravoHotelCharacter*
	}

	namespace n_UInputSettings {
		constexpr auto AxisConfig = 0x28; // TArray<FInputAxisConfigEntry>
		constexpr auto bAltEnterTogglesFullscreen = 0x38; // char : 1
		constexpr auto bF11TogglesFullscreen = 0x38; // char : 1
		constexpr auto bUseMouseForTouch = 0x38; // char : 1
		constexpr auto bEnableMouseSmoothing = 0x38; // char : 1
		constexpr auto bEnableFOVScaling = 0x38; // char : 1
		constexpr auto bCaptureMouseOnLaunch = 0x38; // char : 1
		constexpr auto bDefaultViewportMouseLock = 0x38; // char : 1
		constexpr auto bAlwaysShowTouchInterface = 0x38; // char : 1
		constexpr auto bShowConsoleOnFourFingerTap = 0x39; // char : 1
		constexpr auto bEnableGestureRecognizer = 0x39; // char : 1
		constexpr auto bUseAutocorrect = 0x3a; // bool
		constexpr auto ExcludedAutocorrectOS = 0x40; // TArray<FString>
		constexpr auto ExcludedAutocorrectCultures = 0x50; // TArray<FString>
		constexpr auto ExcludedAutocorrectDeviceModels = 0x60; // TArray<FString>
		constexpr auto DefaultViewportMouseCaptureMode = 0x70; // EMouseCaptureMode
		constexpr auto DefaultViewportMouseLockMode = 0x71; // EMouseLockMode
		constexpr auto FOVScale = 0x74; // float
		constexpr auto DoubleClickTime = 0x78; // float
		constexpr auto ActionMappings = 0x80; // TArray<FInputActionKeyMapping>
		constexpr auto AxisMappings = 0x90; // TArray<FInputAxisKeyMapping>
		constexpr auto SpeechMappings = 0xa0; // TArray<FInputActionSpeechMapping>
		constexpr auto DefaultTouchInterface = 0xb0; // FSoftObjectPath
		constexpr auto ConsoleKey = 0xc8; // FKey
		constexpr auto ConsoleKeys = 0xe0; // TArray<FKey>
	}

	namespace n_ABravoHotelAmplifier {
		constexpr auto AmplifierLength = 0x1bf4; // float
		constexpr auto TimerHandle_OnStartEffectEvent = 0x1bf8; // FTimerHandle
		constexpr auto DetectedCharacters = 0x1c00; // TArray<ABravoHotelCharacter*>
	}

	namespace n_ABP-BattleRoyalePawn_C {
		constexpr auto UberGraphFrame = 0x3b78; // FPointerToUberGraphFrame
		constexpr auto Listener = 0x3b80; // USceneComponent*
		constexpr auto _P_Cam_Z_NewTrack_0_898B65D1462B08609DA61C81A7B52313 = 0x3b88; // float
		constexpr auto _P_Cam_Z__Direction_898B65D1462B08609DA61C81A7B52313 = 0x3b8c; // ETimelineDirection
		constexpr auto 3P_Cam_Z = 0x3b90; // UTimelineComponent*
		constexpr auto CriticalUITimeHandler = 0x3b98; // FTimerHandle
		constexpr auto DyingUITimeHandler = 0x3ba0; // FTimerHandle
		constexpr auto ClothHandler = 0x3ba8; // UPhysicsHandleComponent*
		constexpr auto ClothBallObject = 0x3bb0; // USkeletalMeshComponent*
		constexpr auto BallHandleLocation = 0x3bb8; // FVector
		constexpr auto GamepadInputModifier = 0x3bc4; // float
		constexpr auto BaseTurnRate = 0x3bc8; // float
		constexpr auto BaseLookUpRate = 0x3bcc; // float
		constexpr auto PerkLevelUpWidgets = 0x3bd0; // TArray<UUW-PerkLevelUp_C*>
		constexpr auto PerkLevelUpWidthDepth = 0x3be0; // float
		constexpr auto AmplifierEffect = 0x3be8; // ABP-AmplifierEffect_C*
		constexpr auto Cam_Shake_Radius = 0x3bf0; // float
		constexpr auto MainWidget = 0x3bf8; // UBravoHotelMainWidget*
		constexpr auto HeartBeatSensorEffect = 0x3c00; // ABP-HeartBeatSensorEffect_C*
	}

	namespace n_URTXGIPluginSettings {
		constexpr auto IrradianceBits = 0x38; // EDDGIIrradianceBits
		constexpr auto DistanceBits = 0x39; // EDDGIDistanceBits
		constexpr auto DebugProbeRadius = 0x3c; // float
		constexpr auto ProbeUpdateRayBudget = 0x40; // int32_t
	}

	namespace n_UMicroTransactionBase {
		constexpr auto AvailableProducts = 0x38; // TArray<FPurchaseInfo>
		constexpr auto LastError = 0x48; // FString
		constexpr auto LastErrorSolution = 0x58; // FString
	}

	namespace n_UMagicLeapTouchpadGesturesComponent {
		constexpr auto OnTouchpadGestureStart = 0xb8; // FMulticastInlineDelegate
		constexpr auto OnTouchpadGestureContinue = 0xc8; // FMulticastInlineDelegate
		constexpr auto OnTouchpadGestureEnd = 0xd8; // FMulticastInlineDelegate
	}

	namespace n_USoundSourceBus {
		constexpr auto SourceBusChannels = 0x308; // ESourceBusChannels
		constexpr auto SourceBusDuration = 0x30c; // float
		constexpr auto bAutoDeactivateWhenSilent = 0x310; // char : 1
	}

	namespace n_USourceEffectPannerPreset {
		constexpr auto Settings = 0x70; // FSourceEffectPannerSettings
	}

	namespace n_UBravoHotelVehicleData {
		constexpr auto DisplayName = 0x30; // FText
		constexpr auto MaxHealthPoint = 0x48; // float
		constexpr auto AllowedWeaponTypes = 0x50; // TArray<EWeaponType>
		constexpr auto TakenWeaponDamageModifiers = 0x60; // TArray<FDamageModifierByWeapon>
		constexpr auto DefaultFuelAmountMin = 0x70; // float
		constexpr auto DefaultFuelAmountMax = 0x74; // float
		constexpr auto MaxFuelAmount = 0x78; // float
		constexpr auto FuelConsumptionSpeed = 0x7c; // float
		constexpr auto BoostFuelConsumptionSpeed = 0x80; // float
		constexpr auto FuelConsumptionRatioByGear = 0x88; // TArray<float>
		constexpr auto MaxTireHealthPoint = 0x98; // float
		constexpr auto ItemUseMaxSpeed = 0x9c; // float
		constexpr auto ItemUseMinCrashSpeed = 0xa0; // float
		constexpr auto bCanDriverUseWeapon = 0xa4; // bool
		constexpr auto BoosterParticlesOnGround = 0xa8; // TMap<FName, UParticleSystem*>
		constexpr auto BoosterParticleOnWater = 0xf8; // TMap<FName, UParticleSystem*>
		constexpr auto NitroBoostParticle = 0x148; // TMap<FName, UParticleSystem*>
		constexpr auto StartBoostSound = 0x198; // UAkAudioEvent*
		constexpr auto StopBoostSound = 0x1a0; // UAkAudioEvent*
		constexpr auto NitroBoostStartSound = 0x1a8; // UAkAudioEvent*
		constexpr auto NitroBoostStopSound = 0x1b0; // UAkAudioEvent*
		constexpr auto CrashDamages = 0x1b8; // TArray<FVehicleCrashDamage>
		constexpr auto ExplosionDamageToCharacter = 0x1c8; // float
		constexpr auto ExplosionDamageToDriver = 0x1cc; // float
		constexpr auto ExplosionDamageToPassenger = 0x1d0; // float
		constexpr auto ExplosionDamageToRigidBody = 0x1d4; // float
		constexpr auto ExplosionDamageMin = 0x1d8; // float
		constexpr auto ExplosionDamageFalloff = 0x1dc; // float
		constexpr auto ExplosionInnerRadius = 0x1e0; // float
		constexpr auto ExplosionDamageRadius = 0x1e4; // float
		constexpr auto NitroBoomExplosionMultiplyRate = 0x1e8; // float
		constexpr auto CollisionDeltaSpeedForCharacter = 0x1f0; // UCurveFloat*
		constexpr auto CollisionDeltaSpeedForDestructible = 0x1f8; // UCurveFloat*
		constexpr auto BaseMassForDestructible = 0x200; // float
		constexpr auto bUseAutoEscape = 0x204; // bool
		constexpr auto EscapePitch = 0x208; // float
		constexpr auto EscapeRoll = 0x20c; // float
		constexpr auto EscapeDamageBySpeed = 0x210; // UCurveFloat*
		constexpr auto SubInfoWidget = 0x218; // UUserWidget*
	}

	namespace n_UMaterialExpressionTransformPosition {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto TransformSourceType = 0x54; // EMaterialPositionTransformSource
		constexpr auto TransformType = 0x55; // EMaterialPositionTransformSource
	}

	namespace n_UBravoHotelSmartPingIconWidget {
		constexpr auto WidgetSpace = 0x248; // EWidgetSpace
		constexpr auto SmartPingScaleWorld = 0x250; // UCurveFloat*
		constexpr auto SmartPingScale = 0x258; // UCurveFloat*
		constexpr auto Exit_Slide = 0x260; // UCurveFloat*
		constexpr auto Exit_Bounce = 0x268; // UCurveFloat*
		constexpr auto Exit_Scale = 0x270; // UCurveFloat*
		constexpr auto Enter_Slide = 0x278; // UCurveFloat*
		constexpr auto Enter_Bounce = 0x280; // UCurveFloat*
		constexpr auto Enter_Scale = 0x288; // UCurveFloat*
		constexpr auto SmartPingLineScale = 0x290; // UCurveFloat*
		constexpr auto IconImage = 0x298; // UImage*
		constexpr auto IconBgImage = 0x2a0; // UUserWidget*
		constexpr auto IconIndicator = 0x2a8; // UImage*
		constexpr auto ParentPingActor = 0x2b0; // ABravoHotelSmartPingActor*
		constexpr auto PingDistance = 0x2b8; // float
		constexpr auto TimerHandle_Update = 0x2c0; // FTimerHandle
		constexpr auto TimerHandle_OnActive = 0x2c8; // FTimerHandle
		constexpr auto PingIconSettings = 0x2d0; // FBravoHotelSmartPingIconSettings
		constexpr auto MaterialItemPingInfo = 0x388; // FMaterialItemPingInfo
		constexpr auto ExpertWeaponItemPingInfo = 0x3b8; // FExpertWeaponPingInfo
		constexpr auto LocalPingInfo = 0x3e0; // FBravoHotelLocalPingInfo
		constexpr auto AnimationType = 0x410; // EPingIconAnimationStateType
		constexpr auto StartTime = 0x414; // float
		constexpr auto TimeSinceStart = 0x418; // float
		constexpr auto TransitionState = 0x41c; // float
		constexpr auto PingOpacity = 0x420; // float
		constexpr auto DefaultScale = 0x424; // float
		constexpr auto Seed = 0x428; // float
		constexpr auto PreDistance = 0x42c; // float
		constexpr auto DistanceText = 0x430; // UTextBlock*
		constexpr auto EnableAnimation = 0x438; // bool
		constexpr auto IgnoreScale = 0x439; // bool
		constexpr auto bEnableShowDebugLightPole = 0x43a; // bool
	}

	namespace n_ULandscapeSettings {
		constexpr auto MaxNumberOfLayers = 0x38; // int32_t
	}

	namespace n_UDistributionVector {
		constexpr auto bCanBeBaked = 0x30; // char : 1
		constexpr auto bIsDirty = 0x30; // char : 1
		constexpr auto bBakedDataSuccesfully = 0x30; // char : 1
	}

	namespace n_UMaterialExpressionClamp {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Min = 0x54; // FExpressionInput
		constexpr auto MAX = 0x68; // FExpressionInput
		constexpr auto ClampMode = 0x7c; // EClampMode
		constexpr auto MinDefault = 0x80; // float
		constexpr auto MaxDefault = 0x84; // float
	}

	namespace n_UInAppPurchaseCallbackProxy {
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UBlackboardKeyType_NativeEnum {
		constexpr auto EnumName = 0x30; // FString
		constexpr auto EnumType = 0x40; // UEnum*
	}

	namespace n_UReplicationGraph {
		constexpr auto ReplicationConnectionManagerClass = 0x28; // UNetReplicationGraphConnection*
		constexpr auto NetDriver = 0x30; // UNetDriver*
		constexpr auto Connections = 0x38; // TArray<UNetReplicationGraphConnection*>
		constexpr auto PendingConnections = 0x48; // TArray<UNetReplicationGraphConnection*>
		constexpr auto GlobalGraphNodes = 0x98; // TArray<UReplicationGraphNode*>
		constexpr auto PrepareForReplicationNodes = 0xa8; // TArray<UReplicationGraphNode*>
	}

	namespace n_UBP_GameSettingsWrapper_C {
		constexpr auto UberGraphFrame = 0x28; // FPointerToUberGraphFrame
		constexpr auto Game Settings = 0x30; // UBP_GameSettings_C*
	}

	namespace n_UWorldTileLODSetup {
		constexpr auto NumLOD = 0x28; // int32_t
		constexpr auto LOD1 = 0x2c; // FTileLODEntry
		constexpr auto LOD2 = 0x168; // FTileLODEntry
		constexpr auto LOD3 = 0x2a4; // FTileLODEntry
		constexpr auto LOD4 = 0x3e0; // FTileLODEntry
	}

	namespace n_UBP_KeyConflict_C {
		constexpr auto Conflicting Combination = 0x28; // UBP_KeyCombination_C*
		constexpr auto Conflict Type = 0x30; // EKeyConflict
	}

	namespace n_UDatasmithSceneComponentTemplate {
		constexpr auto RelativeTransform = 0x30; // FTransform
		constexpr auto Mobility = 0x60; // EComponentMobility
		constexpr auto AttachParent = 0x68; // TSoftObjectPtr<USceneComponent>
		constexpr auto Tags = 0x90; // TSet<FName>
	}

	namespace n_UOperatorField {
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto RightField = 0xb8; // UFieldNodeBase*
		constexpr auto LeftField = 0xc0; // UFieldNodeBase*
		constexpr auto Operation = 0xc8; // EFieldOperationType
	}

	namespace n_UBravoHotelAbilityComponent {
		constexpr auto BuffControls = 0xc0; // TMap<uint16_t, UBuffControlState*>
		constexpr auto WeaponBuffEventDelegates = 0x120; // TMap<EWeaponBuffEventType, FMulticastInlineDelegate>
		constexpr auto BuffEventDelegates = 0x170; // TMap<EBuffEventType, FMulticastInlineDelegate>
		constexpr auto ControlledInstantBuffKeys = 0x1c0; // FBuffHandleArray
		constexpr auto LoudnessProneRatio = 0x2d8; // float
		constexpr auto DefaultBalanceData = 0x2e0; // FBravoHotelDefaultBalanceData
		constexpr auto WeaponDebugTextWidget = 0x408; // UBravoHotelDebugWidget*
		constexpr auto MaterialEffectStrCurve = 0x410; // UCurveFloat*
		constexpr auto CurrentBuffKeys = 0x468; // FBuffHandleArray
		constexpr auto StackBuffInfos = 0x580; // TArray<UBravoHotelBuffBase*>
		constexpr auto DebugWidget = 0x590; // UUserWidget*
		constexpr auto ConditionedAbilityStates = 0x598; // TMap<ECharacterConditionedAbilityType, FBravoHotelConditionedAbilityState>
		constexpr auto BuffEndEventDelegates = 0x5e8; // TMap<EBuffEventType, FMulticastInlineDelegate>
		constexpr auto MaterialEffectInfos = 0x640; // TMap<UObject*, FMaterialEffectInfo>
		constexpr auto LoudnessCrouchRatio = 0x690; // float
		constexpr auto BuffUIInfos = 0x6d0; // TMap<int32_t, FBravoHotelBuffUIInfo>
		constexpr auto LoudnessTime = 0x720; // float
		constexpr auto ConditionStates = 0x738; // TMap<ECharacterConditionType, FBravoHotelConditionState>
		constexpr auto DebugWidgetClass = 0x788; // UUserWidget*
		constexpr auto CurrentBuffInfos = 0x790; // TMap<uint16_t, UBravoHotelBuffBase*>
		constexpr auto DefaultFireCell = 0x7e0; // AActor*
		constexpr auto SimulatedTickTime = 0x7e8; // float
		constexpr auto CharacterBuffDataKeys = 0x7f0; // TMap<ECharacterBuffType, FName>
		constexpr auto ConditionFlags = 0x840; // uint64_t
		constexpr auto AbilityStates = 0x880; // TMap<ECharacterAbilityType, FBravoHotelAbilityState>
		constexpr auto Loudness = 0x8d0; // float
		constexpr auto MaterialEffectCurve = 0x8d8; // UCurveFloat*
	}

	namespace n_UWheeledVehicleMovementComponent4W {
		constexpr auto EngineSetup = 0x290; // FVehicleEngineData
		constexpr auto DifferentialSetup = 0x330; // FVehicleDifferential4WData
		constexpr auto AckermannAccuracy = 0x34c; // float
		constexpr auto TransmissionSetup = 0x350; // FVehicleTransmissionData
		constexpr auto SteeringCurve = 0x380; // FRuntimeFloatCurve
	}

	namespace n_ARuntimeVirtualTextureVolume {
		constexpr auto VirtualTextureComponent = 0x318; // URuntimeVirtualTextureComponent*
	}

	namespace n_UUW-CastingWidget_C {
		constexpr auto UberGraphFrame = 0x268; // FPointerToUberGraphFrame
		constexpr auto Flicker = 0x270; // UWidgetAnimation*
		constexpr auto BaseGuage = 0x278; // UImage*
		constexpr auto Guage = 0x280; // UImage*
		constexpr auto HB_CancelMessage = 0x288; // UHorizontalBox*
		constexpr auto Image_921 = 0x290; // UImage*
		constexpr auto Percent = 0x298; // UTextBlock*
		constexpr auto ProgressBar_Item = 0x2a0; // UProgressBar*
		constexpr auto RichT_Message = 0x2a8; // URichTextBlock*
		constexpr auto TextBlock_1 = 0x2b0; // UTextBlock*
		constexpr auto TextBlock_Time = 0x2b8; // UTextBlock*
		constexpr auto UseMessage = 0x2c0; // UTextBlock*
		constexpr auto VerticalBox_2 = 0x2c8; // UVerticalBox*
		constexpr auto PercentValue = 0x2d0; // float
		constexpr auto KnockState = 0x2d4; // bool
		constexpr auto HideTimer = 0x2d8; // float
		constexpr auto ProgressStyle = 0x2e0; // FProgressBarStyle
		constexpr auto IsShowRevive = 0x480; // bool
		constexpr auto CastingInfo = 0x488; // FCastingInfo
		constexpr auto CurrentTime = 0x4a0; // float
		constexpr auto KeyFontSize = 0x4a4; // int32_t
		constexpr auto KeySizeScale = 0x4a8; // float
		constexpr auto CurrentLanguage = 0x4ac; // int32_t
	}

	namespace n_UMaterialExpressionFontSampleParameter {
		constexpr auto ParameterName = 0x50; // FName
		constexpr auto ExpressionGUID = 0x58; // FGuid
		constexpr auto Group = 0x68; // FName
	}

	namespace n_UUW-AttackDamageWidget_C {
		constexpr auto FadeOut = 0x3a0; // UWidgetAnimation*
	}

	namespace n_UUW-AliveInfoWidget_C {
		constexpr auto UberGraphFrame = 0x288; // FPointerToUberGraphFrame
		constexpr auto GoldDesc_Hide = 0x290; // UWidgetAnimation*
		constexpr auto GoldDesc_Show = 0x298; // UWidgetAnimation*
		constexpr auto Revival_Add = 0x2a0; // UWidgetAnimation*
		constexpr auto AliveCount_Text = 0x2a8; // UTextBlock*
		constexpr auto AliveCount_Text_2 = 0x2b0; // UTextBlock*
		constexpr auto HorizontalBox_8 = 0x2b8; // UHorizontalBox*
		constexpr auto HorizontalBox_16 = 0x2c0; // UHorizontalBox*
		constexpr auto HorizontalBox_89 = 0x2c8; // UHorizontalBox*
		constexpr auto HorizontalBox_Alive = 0x2d0; // UHorizontalBox*
		constexpr auto HorizontalBox_Assist = 0x2d8; // UHorizontalBox*
		constexpr auto HorizontalBox_CurrentGold = 0x2e0; // UHorizontalBox*
		constexpr auto HorizontalBox_Kill = 0x2e8; // UHorizontalBox*
		constexpr auto HorizontalBox_Team = 0x2f0; // UHorizontalBox*
		constexpr auto Image = 0x2f8; // UImage*
		constexpr auto Image_1 = 0x300; // UImage*
		constexpr auto Image_2 = 0x308; // UImage*
		constexpr auto Image_6 = 0x310; // UImage*
		constexpr auto Image_102 = 0x318; // UImage*
		constexpr auto Image_271 = 0x320; // UImage*
		constexpr auto Image_376 = 0x328; // UImage*
		constexpr auto Image_378 = 0x330; // UImage*
		constexpr auto Image_1584 = 0x338; // UImage*
		constexpr auto KillAliveBG = 0x340; // UImage*
		constexpr auto KillAliveBG_2 = 0x348; // UImage*
		constexpr auto KillAliveBG_3 = 0x350; // UImage*
		constexpr auto KillAliveBG_4 = 0x358; // UImage*
		constexpr auto KillCount_Text = 0x360; // UTextBlock*
		constexpr auto KillCount_Text_2 = 0x368; // UTextBlock*
		constexpr auto RichTextBlock_275 = 0x370; // URichTextBlock*
		constexpr auto SizeBox_1 = 0x378; // USizeBox*
		constexpr auto SizeBox_3 = 0x380; // USizeBox*
		constexpr auto Spacer_2 = 0x388; // USpacer*
		constexpr auto T_AliveCount = 0x390; // UTextBlock*
		constexpr auto T_AssistCount = 0x398; // UTextBlock*
		constexpr auto T_KillCount = 0x3a0; // UTextBlock*
		constexpr auto T_TeamCount = 0x3a8; // UTextBlock*
		constexpr auto TextBlock_1 = 0x3b0; // UTextBlock*
		constexpr auto TextBlock_CurrentGold = 0x3b8; // UTextBlock*
		constexpr auto ShowKillCountUI = 0x3c0; // bool
		constexpr auto CurrentKillCount = 0x3c4; // int32_t
		constexpr auto NewVar_1 = 0x3c8; // int32_t
		constexpr auto ShowGoldDescHandle = 0x3d0; // FTimerHandle
		constexpr auto AliveCount_Text_1_1 = 0x3d8; // UTextBlock*
		constexpr auto KillCount_Text_1_1 = 0x3e0; // UTextBlock*
	}

	namespace n_UBravoHotelAnimInstancePostprocess {
		constexpr auto Character = 0x268; // ABravoHotelCharacter*
		constexpr auto CharacterMovementComponent = 0x270; // UCharacterMovementComponent*
		constexpr auto DeltaTime = 0x278; // float
		constexpr auto AM_CheckMontageIsPlaying = 0x280; // TArray<UAnimMontage*>
		constexpr auto PelvisZOffset = 0x290; // FVector
		constexpr auto LeftFootZOffset = 0x29c; // FVector
		constexpr auto RightFootZOffset = 0x2a8; // FVector
		constexpr auto LeftFootRotationOffset = 0x2b4; // FRotator
		constexpr auto RightFootRotationOffset = 0x2c0; // FRotator
		constexpr auto RootRotationOffset = 0x2cc; // FRotator
		constexpr auto RootZOffset = 0x2d8; // FVector
		constexpr auto bEnablePelvisZOffset = 0x2e4; // bool
		constexpr auto bEnableLeftFootIK = 0x2e5; // bool
		constexpr auto bEnableRightFootIK = 0x2e6; // bool
		constexpr auto ZOffsetMaxLimit = 0x2ec; // float
		constexpr auto ZOffsetMinLimit = 0x2f0; // float
		constexpr auto RollOffsetMaxLimit = 0x2f4; // float
		constexpr auto RollOffsetMinLimit = 0x2f8; // float
		constexpr auto PitchOffsetMaxLimit = 0x2fc; // float
		constexpr auto PitchOffsetMinLimit = 0x300; // float
		constexpr auto ZOffsetFastInterpSpeed = 0x304; // float
		constexpr auto ZOffsetSlowinterpSpeed = 0x308; // float
		constexpr auto RotationOffsetInterpSpeed = 0x30c; // float
		constexpr auto RootRotationOffsetInterpSpeed = 0x310; // float
		constexpr auto LeftFootName = 0x314; // FName
		constexpr auto RightFootName = 0x31c; // FName
		constexpr auto RootName = 0x324; // FName
		constexpr auto TraceStartHeight = 0x32c; // float
		constexpr auto TraceLengthBelowCapsule = 0x330; // float
		constexpr auto EnableHandIK = 0x334; // bool
		constexpr auto bDisableHandIK_ByAnimNotifyState = 0x335; // bool
		constexpr auto IsEquippingNormalGrip = 0x336; // bool
		constexpr auto IdleHandAnim = 0x338; // UAnimSequence*
		constexpr auto bIsPlayingWeaponMontage = 0x340; // bool
		constexpr auto bForceUseGripPose = 0x341; // bool
		constexpr auto HandL_Location = 0x344; // FVector
		constexpr auto HandL_Rotation = 0x350; // FRotator
		constexpr auto Collide_HandR_Rotation = 0x35c; // FRotator
		constexpr auto bEnableCollideHandR_Rotation = 0x368; // bool
		constexpr auto HandR_Rotation_Alpha = 0x36c; // float
		constexpr auto HandIK_BlendTime = 0x370; // float
		constexpr auto GripType = 0x374; // EWeaponAttachmentGrip
		constexpr auto LeanValue = 0x378; // float
		constexpr auto Spine01_LeanRotation = 0x37c; // FRotator
		constexpr auto Lowerarm_r_LeanRotation = 0x388; // FRotator
		constexpr auto Pelvis_CrouchLeanTranslation = 0x394; // FVector
		constexpr auto UpperarmR_LeanRotation = 0x3a0; // FRotator
		constexpr auto bUpdateLeanNodes = 0x3ac; // bool
		constexpr auto LeftHandActionPos = 0x3b0; // FVector
		constexpr auto RightHandActionPos = 0x3bc; // FVector
		constexpr auto bIsInVehicle = 0x3c8; // bool
		constexpr auto bUseDriverTwoHandIK = 0x3c9; // bool
		constexpr auto bEnableDriverIK_HandL = 0x3ca; // bool
		constexpr auto bEnableDriverIK_HandR = 0x3cb; // bool
		constexpr auto bUsePassengerTwoHandIK = 0x3cc; // bool
		constexpr auto VehicleFootIKAlpha = 0x3d0; // float
		constexpr auto VehicleLeftHandIK_Location = 0x3d4; // FVector
		constexpr auto VehicleLeftHandIK_Rotation = 0x3e0; // FRotator
		constexpr auto VehicleRightHandIK_Location = 0x3ec; // FVector
		constexpr auto VehicleRightHandIK_Rotation = 0x3f8; // FRotator
		constexpr auto VehicleLeftFootIK_Location = 0x404; // FVector
		constexpr auto VehicleLeftFootIK_Rotation = 0x410; // FRotator
		constexpr auto VehicleRightFootIK_Location = 0x41c; // FVector
		constexpr auto VehicleRightFootIK_Rotation = 0x428; // FRotator
		constexpr auto bIsParkourArmIK = 0x434; // bool
		constexpr auto bIsAimingDownside = 0x435; // bool
		constexpr auto bIsIdleWeaponColliding = 0x436; // bool
		constexpr auto bIsProneWeaponColliding = 0x437; // bool
		constexpr auto CollideAlpha = 0x438; // float
		constexpr auto EnableFootIK = 0x43c; // bool
		constexpr auto LeftFootTarget = 0x440; // float
		constexpr auto RightFootTarget = 0x444; // float
		constexpr auto LeftFootLocation = 0x448; // FVector
		constexpr auto RightFootLocation = 0x454; // FVector
		constexpr auto bUseTwoHandIK = 0x47c; // bool
		constexpr auto MovementMode = 0x47d; // EMovementMode
		constexpr auto CustomMovementMode = 0x47e; // ECustomMovementMode
		constexpr auto JointTargetLocationR = 0x480; // FVector
		constexpr auto JointTargetLocationL = 0x48c; // FVector
		constexpr auto EffectorLocationR = 0x498; // FVector
		constexpr auto PakourIKLocationR = 0x4a4; // FVector
		constexpr auto PakourIKLocationL = 0x4b0; // FVector
		constexpr auto bIsProned = 0x4bc; // bool
		constexpr auto Pelvis_LeanTranslation = 0x4c0; // FVector
		constexpr auto bIsCrouch = 0x4cc; // bool
		constexpr auto bIsLocallyControlled = 0x4cd; // bool
		constexpr auto IsEquippingRangedWeapon = 0x4ce; // bool
		constexpr auto UpperarmL_LeanRotation = 0x4d0; // FRotator
		constexpr auto LeanLeftSide = 0x4dc; // bool
		constexpr auto bIsOneHandSprint = 0x4dd; // bool
		constexpr auto OneHandSprintLastTime = 0x4e0; // float
		constexpr auto bEnableAnimDynamics = 0x4e4; // bool
		constexpr auto bUsePonytailDynamics = 0x4e5; // bool
		constexpr auto PonytailDynamicsAlpha = 0x4e8; // float
		constexpr auto bUseHairDynamics = 0x4ec; // bool
		constexpr auto HairDynamicsAlpha = 0x4f0; // float
		constexpr auto bUseSkirtDynamics = 0x4f4; // bool
		constexpr auto SkirtDynamicsAlpha = 0x4f8; // float
		constexpr auto bUseBackpackDynamics = 0x4fc; // bool
		constexpr auto BackpackDynamicsAlpha = 0x500; // float
		constexpr auto bUseBreastDynamics = 0x504; // bool
		constexpr auto bUseCoatDynamics = 0x505; // bool
		constexpr auto bUseGhillieDynamics = 0x506; // bool
		constexpr auto KawaiiAlpha = 0x508; // float
		constexpr auto BoneDrivenAlpha = 0x50c; // float
		constexpr auto TargetKawaiiAlpha = 0x510; // float
		constexpr auto TargetBoneDrivenAlpha = 0x514; // float
	}

	namespace n_UCurveLinearColor {
		constexpr auto FloatCurves = 0x30; // FRichCurve [0x4]
		constexpr auto AdjustHue = 0x230; // float
		constexpr auto AdjustSaturation = 0x234; // float
		constexpr auto AdjustBrightness = 0x238; // float
		constexpr auto AdjustBrightnessCurve = 0x23c; // float
		constexpr auto AdjustVibrance = 0x240; // float
		constexpr auto AdjustMinAlpha = 0x244; // float
		constexpr auto AdjustMaxAlpha = 0x248; // float
	}

	namespace n_UEdGraph {
		constexpr auto Schema = 0x28; // UEdGraphSchema*
		constexpr auto Nodes = 0x30; // TArray<UEdGraphNode*>
		constexpr auto bEditable = 0x40; // char : 1
		constexpr auto bAllowDeletion = 0x40; // char : 1
		constexpr auto bAllowRenaming = 0x40; // char : 1
	}

	namespace n_UParticleSystemReplay {
		constexpr auto ClipIDNumber = 0x28; // int32_t
	}

	namespace n_UParticleModuleSizeMultiplyLife {
		constexpr auto LifeMultiplier = 0x30; // FRawDistributionVector
		constexpr auto MultiplyX = 0x78; // char : 1
		constexpr auto MultiplyY = 0x78; // char : 1
		constexpr auto MultiplyZ = 0x78; // char : 1
	}

	namespace n_ACharacter {
		constexpr auto Mesh = 0x3a0; // USkeletalMeshComponent*
		constexpr auto CharacterMovement = 0x3a8; // UCharacterMovementComponent*
		constexpr auto CapsuleComponent = 0x3b0; // UCapsuleComponent*
		constexpr auto BasedMovement = 0x3c0; // FBasedMovementInfo
		constexpr auto ReplicatedBasedMovement = 0x3f0; // FBasedMovementInfo
		constexpr auto AnimRootMotionTranslationScale = 0x420; // float
		constexpr auto BaseTranslationOffset = 0x424; // FVector
		constexpr auto BaseRotationOffset = 0x430; // FQuat
		constexpr auto ReplicatedServerLastTransformUpdateTimeStamp = 0x440; // float
		constexpr auto ReplayLastTransformUpdateTimeStamp = 0x444; // float
		constexpr auto ReplicatedMovementMode = 0x448; // char
		constexpr auto bInBaseReplication = 0x449; // bool
		constexpr auto CrouchedEyeHeight = 0x44c; // float
		constexpr auto bIsCrouched = 0x450; // char : 1
		constexpr auto bProxyIsJumpForceApplied = 0x450; // char : 1
		constexpr auto bPressedJump = 0x450; // char : 1
		constexpr auto bClientUpdating = 0x450; // char : 1
		constexpr auto bClientWasFalling = 0x450; // char : 1
		constexpr auto bClientResimulateRootMotion = 0x450; // char : 1
		constexpr auto bClientResimulateRootMotionSources = 0x450; // char : 1
		constexpr auto bSimGravityDisabled = 0x450; // char : 1
		constexpr auto bClientCheckEncroachmentOnNetUpdate = 0x451; // char : 1
		constexpr auto bServerMoveIgnoreRootMotion = 0x451; // char : 1
		constexpr auto bWasJumping = 0x451; // char : 1
		constexpr auto JumpKeyHoldTime = 0x454; // float
		constexpr auto JumpForceTimeRemaining = 0x458; // float
		constexpr auto ProxyJumpForceStartedTime = 0x45c; // float
		constexpr auto JumpMaxHoldTime = 0x460; // float
		constexpr auto JumpMaxCount = 0x464; // int32_t
		constexpr auto JumpCurrentCount = 0x468; // int32_t
		constexpr auto OnReachedJumpApex = 0x470; // FMulticastInlineDelegate
		constexpr auto MovementModeChangedDelegate = 0x490; // FMulticastInlineDelegate
		constexpr auto OnCharacterMovementUpdated = 0x4a0; // FMulticastInlineDelegate
		constexpr auto SavedRootMotion = 0x4b0; // FRootMotionSourceGroup
		constexpr auto ClientRootMotionParams = 0x4f0; // FRootMotionMovementParams
		constexpr auto RootMotionRepMoves = 0x530; // TArray<FSimulatedRootMotionReplicatedMove>
		constexpr auto RepRootMotion = 0x540; // FRepRootMotionMontage
	}

	namespace n_UGeometryCacheTrack_FlipbookAnimation {
		constexpr auto NumMeshSamples = 0x58; // uint32_t
	}

	namespace n_UUW-ReplayWorldMapOption_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Canvas_Main = 0x250; // UCanvasPanel*
		constexpr auto CB_DrawDeathPosition = 0x258; // UCheckBox*
		constexpr auto CB_DrawFireDirection = 0x260; // UCheckBox*
		constexpr auto CB_DrawHitted = 0x268; // UCheckBox*
		constexpr auto CB_DrawPersonalSupplyBox = 0x270; // UCheckBox*
		constexpr auto CB_TransportDropBox = 0x278; // UCheckBox*
		constexpr auto ReplayController = 0x280; // ABP-MK3DReplayController_C*
		constexpr auto MainWidget = 0x288; // UBravoHotelMainWidget*
		constexpr auto PlayerHUD = 0x290; // ABravoHotelPlayerHUD*
	}

	namespace n_UOodleNetworkTrainerCommandlet {
		constexpr auto bCompressionTest = 0x80; // bool
		constexpr auto HashTableSize = 0x84; // int32_t
		constexpr auto DictionarySize = 0x88; // int32_t
		constexpr auto DictionaryTrials = 0x8c; // int32_t
		constexpr auto TrialRandomness = 0x90; // int32_t
		constexpr auto TrialGenerations = 0x94; // int32_t
		constexpr auto bNoTrials = 0x98; // bool
	}

	namespace n_ULandscapeGrassType {
		constexpr auto GrassVarieties = 0x28; // TArray<FGrassVariety>
		constexpr auto bEnableDensityScaling = 0x38; // char : 1
		constexpr auto GrassMesh = 0x40; // UStaticMesh*
		constexpr auto GrassDensity = 0x48; // float
		constexpr auto PlacementJitter = 0x4c; // float
		constexpr auto StartCullDistance = 0x50; // int32_t
		constexpr auto EndCullDistance = 0x54; // int32_t
		constexpr auto RandomRotation = 0x58; // bool
		constexpr auto AlignToSurface = 0x59; // bool
	}

	namespace n_USkyAtmosphereComponent {
		constexpr auto TransformMode = 0x230; // ESkyAtmosphereTransformMode
		constexpr auto BottomRadius = 0x234; // float
		constexpr auto GroundAlbedo = 0x238; // FColor
		constexpr auto AtmosphereHeight = 0x23c; // float
		constexpr auto MultiScatteringFactor = 0x240; // float
		constexpr auto RayleighScatteringScale = 0x244; // float
		constexpr auto RayleighScattering = 0x248; // FLinearColor
		constexpr auto RayleighExponentialDistribution = 0x258; // float
		constexpr auto MieScatteringScale = 0x25c; // float
		constexpr auto MieScattering = 0x260; // FLinearColor
		constexpr auto MieAbsorptionScale = 0x270; // float
		constexpr auto MieAbsorption = 0x274; // FLinearColor
		constexpr auto MieAnisotropy = 0x284; // float
		constexpr auto MieExponentialDistribution = 0x288; // float
		constexpr auto OtherAbsorptionScale = 0x28c; // float
		constexpr auto OtherAbsorption = 0x290; // FLinearColor
		constexpr auto OtherTentDistribution = 0x2a0; // FTentDistribution
		constexpr auto SkyLuminanceFactor = 0x2ac; // FLinearColor
		constexpr auto AerialPespectiveViewDistanceScale = 0x2bc; // float
		constexpr auto HeightFogContribution = 0x2c0; // float
		constexpr auto TransmittanceMinLightElevationAngle = 0x2c4; // float
		constexpr auto bStaticLightingBuiltGUID = 0x2ec; // FGuid
	}

	namespace n_ABravoHotelAreaSkillZone {
		constexpr auto SphereCollision = 0x318; // USphereComponent*
		constexpr auto AreaParticle = 0x320; // UParticleSystemComponent*
		constexpr auto AreaParticleOwner = 0x328; // UParticleSystemComponent*
		constexpr auto AreaSkillInfo = 0x330; // FAreaSkillInfo
		constexpr auto OverlappedCharacters = 0x358; // TArray<ABravoHotelCharacter*>
		constexpr auto AreaSkillZoneInfo = 0x368; // FAreaSkillZoneInfo
	}

	namespace n_UAISenseEvent_Damage {
		constexpr auto Event = 0x28; // FAIDamageEvent
	}

	namespace n_UFieldSystemMetaDataProcessingResolution {
		constexpr auto ResolutionType = 0xb0; // EFieldResolutionType
	}

	namespace n_UCheckBoxStyleAsset {
		constexpr auto CheckBoxStyle = 0x28; // FCheckBoxStyle
	}

	namespace n_UUW-CompassWidget_Item_Resuscitation_C {
		constexpr auto NewAnimation = 0x248; // UWidgetAnimation*
		constexpr auto Icon = 0x250; // UImage*
		constexpr auto ImageLine = 0x258; // UImage*
		constexpr auto Img_Color = 0x260; // UImage*
	}

	namespace n_UParticleModuleBeamTarget {
		constexpr auto TargetMethod = 0x30; // Beam2SourceTargetMethod
		constexpr auto TargetName = 0x34; // FName
		constexpr auto Target = 0x40; // FRawDistributionVector
		constexpr auto bTargetAbsolute = 0x88; // char : 1
		constexpr auto bLockTarget = 0x88; // char : 1
		constexpr auto TargetTangentMethod = 0x8c; // Beam2SourceTargetTangentMethod
		constexpr auto TargetTangent = 0x90; // FRawDistributionVector
		constexpr auto bLockTargetTangent = 0xd8; // char : 1
		constexpr auto TargetStrength = 0xe0; // FRawDistributionFloat
		constexpr auto bLockTargetStength = 0x110; // char : 1
		constexpr auto LockRadius = 0x114; // float
	}

	namespace n_UUW-ReportUserCompleted_C {
		constexpr auto UberGraphFrame = 0x250; // FPointerToUberGraphFrame
		constexpr auto btn_confirm = 0x258; // UButton*
		constexpr auto popup-bg = 0x260; // UImage*
		constexpr auto txt_description = 0x268; // UTextBlock*
		constexpr auto uw-bg = 0x270; // UImage*
		constexpr auto DescriptionText = 0x278; // FText
	}

	namespace n_UBravoHotelConversationComponent {
		constexpr auto ConversationWidgetClass = 0xc8; // UBravoHotelConversationWidget*
		constexpr auto CurrentConversationWidget = 0xd0; // UBravoHotelConversationWidget*
		constexpr auto CurrentConversationKey = 0xd8; // FName
		constexpr auto CurrentSentenceIndex = 0xe0; // int32_t
		constexpr auto VoiceChannelInfo = 0x100; // TMap<FName, FAudioPlayingHandle>
	}

	namespace n_UParticleModuleSpawn {
		constexpr auto Rate = 0x38; // FRawDistributionFloat
		constexpr auto RateScale = 0x68; // FRawDistributionFloat
		constexpr auto ParticleBurstMethod = 0x98; // EParticleBurstMethod
		constexpr auto BurstList = 0xa0; // TArray<FParticleBurst>
		constexpr auto BurstScale = 0xb0; // FRawDistributionFloat
		constexpr auto bApplyGlobalSpawnRateScale = 0xe0; // char : 1
	}

	namespace n_UStreamableRenderAsset {
		constexpr auto ForceMipLevelsToBeResidentTimestamp = 0x28; // double
		constexpr auto NumCinematicMipLevels = 0x30; // int32_t
		constexpr auto StreamingIndex = 0x34; // int32_t
		constexpr auto CachedCombinedLODBias = 0x38; // int32_t
		constexpr auto CachedNumResidentLODs = 0x3c; // char
		constexpr auto bCachedReadyForStreaming = 0x3d; // char : 1
		constexpr auto NeverStream = 0x3d; // char : 1
		constexpr auto bGlobalForceMipLevelsToBeResident = 0x3d; // char : 1
		constexpr auto bIsStreamable = 0x3d; // char : 1
		constexpr auto bHasStreamingUpdatePending = 0x3d; // char : 1
		constexpr auto bForceMiplevelsToBeResident = 0x3d; // char : 1
		constexpr auto bIgnoreStreamingMipBias = 0x3d; // char : 1
		constexpr auto bUseCinematicMipLevels = 0x3d; // char : 1
	}

	namespace n_UReflectionCaptureComponent {
		constexpr auto VisualizationMesh = 0x230; // UStaticMeshComponent*
		constexpr auto CaptureOffsetComponent = 0x238; // UBillboardComponent*
		constexpr auto ReflectionSourceType = 0x240; // EReflectionSourceType
		constexpr auto Cubemap = 0x248; // UTextureCube*
		constexpr auto SourceCubemapAngle = 0x250; // float
		constexpr auto Brightness = 0x254; // float
		constexpr auto DiffuseRadiance = 0x258; // float
		constexpr auto CaptureOffset = 0x25c; // FVector
		constexpr auto MapBuildDataId = 0x268; // FGuid
	}

	namespace n_UUW-BasicConversation_C {
		constexpr auto UberGraphFrame = 0x258; // FPointerToUberGraphFrame
		constexpr auto First = 0x260; // UWidgetAnimation*
		constexpr auto Hide = 0x268; // UWidgetAnimation*
		constexpr auto Show = 0x270; // UWidgetAnimation*
		constexpr auto Idle = 0x278; // UWidgetAnimation*
		constexpr auto Bg = 0x280; // UImage*
		constexpr auto Bg_2 = 0x288; // UImage*
		constexpr auto Bg_3 = 0x290; // UImage*
		constexpr auto Button_407 = 0x298; // UButton*
		constexpr auto Image = 0x2a0; // UImage*
		constexpr auto Image_2 = 0x2a8; // UImage*
		constexpr auto Image_55 = 0x2b0; // UImage*
		constexpr auto Image_340 = 0x2b8; // UImage*
		constexpr auto Overlay_Base = 0x2c0; // UOverlay*
		constexpr auto TextBlock_Message = 0x2c8; // UTextBlock*
		constexpr auto TextBlock_SpeakerName = 0x2d0; // UTextBlock*
		constexpr auto UW-ImageText = 0x2d8; // UUW-ImageText_C*
		constexpr auto WidgetSwitcher_Face = 0x2e0; // UWidgetSwitcher*
		constexpr auto SentenceData = 0x2e8; // FSentenceData
	}

	namespace n_UDatasmithDeltaGenSceneImportData {
		constexpr auto bMergeNodes = 0x48; // bool
		constexpr auto bOptimizeDuplicatedNodes = 0x49; // bool
		constexpr auto bRemoveInvisibleNodes = 0x4a; // bool
		constexpr auto bSimplifyNodeHierarchy = 0x4b; // bool
		constexpr auto bImportVar = 0x4c; // bool
		constexpr auto VarPath = 0x50; // FString
		constexpr auto bImportPos = 0x60; // bool
		constexpr auto PosPath = 0x68; // FString
		constexpr auto bImportTml = 0x78; // bool
		constexpr auto TmlPath = 0x80; // FString
	}

	namespace n_UMagicLeapARPinSaveGame {
		constexpr auto PinnedID = 0x28; // FGuid
		constexpr auto ComponentWorldTransform = 0x40; // FTransform
		constexpr auto PinTransform = 0x70; // FTransform
	}

	namespace n_UMovieSceneCameraAnimTrack {
		constexpr auto CameraAnimSections = 0x58; // TArray<UMovieSceneSection*>
	}

	namespace n_UBTTask_MoveDirectlyToward {
		constexpr auto bDisablePathUpdateOnGoalLocationChange = 0xb0; // char : 1
		constexpr auto bProjectVectorGoalToNavigation = 0xb0; // char : 1
		constexpr auto bUpdatedDeprecatedProperties = 0xb0; // char : 1
	}

	namespace n_UUW-Matchend_BuffList_Popup_C {
		constexpr auto Anim_Show = 0x248; // UWidgetAnimation*
		constexpr auto CanvasPanel_Main = 0x250; // UCanvasPanel*
		constexpr auto T_DamageDecrease = 0x258; // UTextBlock*
		constexpr auto T_DamageDecrease2 = 0x260; // UTextBlock*
		constexpr auto T_DamageIncrease = 0x268; // UTextBlock*
		constexpr auto T_DamageIncrease2 = 0x270; // UTextBlock*
		constexpr auto UW-Matchend_BuffList = 0x278; // UUW-Matchend_BuffList_C*
		constexpr auto UW-Matchend_BuffList_2 = 0x280; // UUW-Matchend_BuffList_C*
		constexpr auto UW-Matchend_BuffList_3 = 0x288; // UUW-Matchend_BuffList_C*
		constexpr auto UW-Matchend_BuffList_4 = 0x290; // UUW-Matchend_BuffList_C*
		constexpr auto UW-Matchend_BuffList_6 = 0x298; // UUW-Matchend_BuffList_C*
		constexpr auto UW-Matchend_BuffList_7 = 0x2a0; // UUW-Matchend_BuffList_C*
		constexpr auto VerticalBox_Left = 0x2a8; // UVerticalBox*
		constexpr auto VerticalBox_Right = 0x2b0; // UVerticalBox*
		constexpr auto WidgetSwitcher_Attacker = 0x2b8; // UWidgetSwitcher*
	}

	namespace n_UBTTask_BlueprintBase {
		constexpr auto AIOwner = 0x70; // AAIController*
		constexpr auto ActorOwner = 0x78; // AActor*
		constexpr auto TickInterval = 0x80; // FIntervalCountdown
		constexpr auto bShowPropertyDetails = 0xa0; // char : 1
	}

	namespace n_UStereoLayerShapeCylinder {
		constexpr auto Radius = 0x28; // float
		constexpr auto OverlayArc = 0x2c; // float
		constexpr auto Height = 0x30; // int32_t
	}

	namespace n_UUW-PerkDeckSelectItemWidget_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Button_Main = 0x250; // UButton*
		constexpr auto Image_ClassIcon = 0x258; // UImage*
		constexpr auto Image_ComingSoonBg = 0x260; // UImage*
		constexpr auto Image_Disabled = 0x268; // UImage*
		constexpr auto Image_Outline = 0x270; // UImage*
		constexpr auto Image_Push = 0x278; // UImage*
		constexpr auto Overlay_Main = 0x280; // UOverlay*
		constexpr auto T_ComingSoon = 0x288; // UTextBlock*
		constexpr auto UW-PerkDeckSelectItemNumWidget = 0x290; // UUW-PerkDeckSelectItemNumWidget_C*
		constexpr auto UW-PerkDeckSelectItemNumWidget_2 = 0x298; // UUW-PerkDeckSelectItemNumWidget_C*
		constexpr auto UW-PerkDeckSelectItemNumWidget_3 = 0x2a0; // UUW-PerkDeckSelectItemNumWidget_C*
		constexpr auto UW-PerkDeckSelectItemNumWidget_Local = 0x2a8; // UUW-PerkDeckSelectItemNumWidget_C*
		constexpr auto VerticalBox_Selected = 0x2b0; // UVerticalBox*
		constexpr auto PerkDeckClassInfo = 0x2b8; // FPerkDeckClassInfo
		constexpr auto SelectedNum = 0x2e0; // int32_t
		constexpr auto SelectedMinIndex = 0x2e4; // int32_t
		constexpr auto ChooseClass = 0x2e8; // FMulticastInlineDelegate
		constexpr auto ClassIndex = 0x2f8; // int32_t
		constexpr auto HoverClass = 0x300; // FMulticastInlineDelegate
		constexpr auto bIsLocalSelected = 0x310; // bool
		constexpr auto bIsSelected = 0x311; // bool
		constexpr auto CurrentPerkDeckData = 0x318; // FPerkDeckData
		constexpr auto bIsDuplicateSelectPossible = 0x7d0; // bool
		constexpr auto bButtonDisabled = 0x7d1; // bool
		constexpr auto bNoUpdatedDisabled = 0x7d2; // bool
		constexpr auto bIsBlocked = 0x7d3; // bool
	}

	namespace n_UBlackboardData {
		constexpr auto Parent = 0x30; // UBlackboardData*
		constexpr auto Keys = 0x38; // TArray<FBlackboardEntry>
		constexpr auto bHasSynchronizedKeys = 0x48; // char : 1
	}

	namespace n_UParticleModuleBeamNoise {
		constexpr auto bLowFreq_Enabled = 0x30; // char : 1
		constexpr auto Frequency = 0x34; // int32_t
		constexpr auto Frequency_LowRange = 0x38; // int32_t
		constexpr auto NoiseRange = 0x40; // FRawDistributionVector
		constexpr auto NoiseRangeScale = 0x88; // FRawDistributionFloat
		constexpr auto bNRScaleEmitterTime = 0xb8; // char : 1
		constexpr auto NoiseSpeed = 0xc0; // FRawDistributionVector
		constexpr auto bSmooth = 0x108; // char : 1
		constexpr auto NoiseLockRadius = 0x10c; // float
		constexpr auto bNoiseLock = 0x110; // char : 1
		constexpr auto bOscillate = 0x110; // char : 1
		constexpr auto NoiseLockTime = 0x114; // float
		constexpr auto NoiseTension = 0x118; // float
		constexpr auto bUseNoiseTangents = 0x11c; // char : 1
		constexpr auto NoiseTangentStrength = 0x120; // FRawDistributionFloat
		constexpr auto NoiseTessellation = 0x150; // int32_t
		constexpr auto bTargetNoise = 0x154; // char : 1
		constexpr auto FrequencyDistance = 0x158; // float
		constexpr auto bApplyNoiseScale = 0x15c; // char : 1
		constexpr auto NoiseScale = 0x160; // FRawDistributionFloat
	}

	namespace n_UMaterialExpressionRuntimeVirtualTextureSample {
		constexpr auto Coordinates = 0x40; // FExpressionInput
		constexpr auto WorldPosition = 0x54; // FExpressionInput
		constexpr auto MipValue = 0x68; // FExpressionInput
		constexpr auto VirtualTexture = 0x80; // URuntimeVirtualTexture*
		constexpr auto MaterialType = 0x88; // ERuntimeVirtualTextureMaterialType
		constexpr auto bSinglePhysicalSpace = 0x89; // bool
		constexpr auto MipValueMode = 0x8a; // ERuntimeVirtualTextureMipValueMode
	}

	namespace n_UBravoHotelCharacterMovementComponent {
		constexpr auto MaxWalkSpeedProned = 0x6dc; // float
		constexpr auto MaxSprintSpeed = 0x6e0; // float
		constexpr auto MaxParachuteSpeed = 0x6e4; // float
		constexpr auto SwimHalfHeight = 0x6e8; // float
		constexpr auto LastGroundStateChangedTime = 0x6f0; // float
		constexpr auto bProneMaintainsBaseLocation = 0x6f4; // char : 1
		constexpr auto FallingDecelerationDuration = 0x6f8; // float
		constexpr auto ParachuteKValue = 0x708; // float
		constexpr auto MaxRunSpeedCrouched = 0x718; // float
		constexpr auto AngleUnderWater = 0x71c; // float
		constexpr auto MoveSlopeSpeedModifierCurve = 0x730; // UCurveFloat*
		constexpr auto SkydivingPitchRange = 0x738; // FFloatRange
		constexpr auto CurrentWaterDepth = 0x74c; // float
		constexpr auto MaxRunSpeedProned = 0x750; // float
		constexpr auto MoveRightSpeedModifier = 0x754; // float
		constexpr auto MaxSprintSpeedCrouched = 0x760; // float
		constexpr auto LastMaxSpeed = 0x764; // float
		constexpr auto ClientServerSyncSpeed = 0x77c; // float
		constexpr auto MoveBackSpeedModifier = 0x78c; // float
		constexpr auto bWantsToProne = 0x790; // char : 1
		constexpr auto bCanWalkOffLedgesWhenProning = 0x790; // char : 1
		constexpr auto BravoHotelCharacterOwner = 0x798; // ABravoHotelCharacter*
		constexpr auto MaxWalkSpeedAMP = 0x7ac; // float
		constexpr auto bSwimMaintainsBaseLocation = 0x7b0; // char : 1
		constexpr auto DepthWaterSuface = 0x7b4; // float
		constexpr auto ClientNetSendMoveDeltaTimeScaleBySpectator = 0x7b8; // float
		constexpr auto DepthUnderWater = 0x7bc; // float
		constexpr auto WalkInNoProneWaterSpeedModifier = 0x7c0; // float
		constexpr auto MaxSprintSpeedProned = 0x7c8; // float
		constexpr auto ServerControlRotationInveral = 0x7cc; // float
		constexpr auto MaxWalkSpeedHeartBeatSensor = 0x7d0; // float
		constexpr auto DepthWaterNoProne = 0x7d4; // float
		constexpr auto MoveParameter = 0x7d8; // FReplicationMoveParameter
		constexpr auto SkydivingKValueRange = 0x7e0; // FFloatRange
		constexpr auto ReduceCharacterSpeedInGrenadeExplosionRangeModifier = 0x7f0; // float
		constexpr auto MaxRunSpeed = 0x7f4; // float
		constexpr auto MaxRocketJumpSpeed = 0x7f8; // float
		constexpr auto WalkInWaterSpeedModifier = 0x7fc; // float
		constexpr auto DepthWaterNoCrouch = 0x804; // float
		constexpr auto PronedHalfHeight = 0x808; // float
	}

	namespace n_UWidgetTree {
		constexpr auto RootWidget = 0x28; // UWidget*
	}

	namespace n_UMovieSceneSubTrack {
		constexpr auto Sections = 0x58; // TArray<UMovieSceneSection*>
	}

	namespace n_UUW-PerkDeckWidget_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Msg_open = 0x250; // UWidgetAnimation*
		constexpr auto POPUP_OPEN = 0x258; // UWidgetAnimation*
		constexpr auto Idle = 0x260; // UWidgetAnimation*
		constexpr auto btn_Choose = 0x268; // UButton*
		constexpr auto btn_OK = 0x270; // UButton*
		constexpr auto btn_OK_6 = 0x278; // UButton*
		constexpr auto btn_PerkDeck = 0x280; // UButton*
		constexpr auto Button_CloseMovie = 0x288; // UButton*
		constexpr auto Button_PlayMovie = 0x290; // UButton*
		constexpr auto Button_Refresh = 0x298; // UButton*
		constexpr auto Button_Reselect = 0x2a0; // UButton*
		constexpr auto Button_SelectMode = 0x2a8; // UButton*
		constexpr auto Canvas_CantSelectMessage = 0x2b0; // UCanvasPanel*
		constexpr auto Canvas_MovieScreen = 0x2b8; // UCanvasPanel*
		constexpr auto CanvasPanel_ClassList = 0x2c0; // UCanvasPanel*
		constexpr auto CanvasPanel_NewbieAdvantage = 0x2c8; // UCanvasPanel*
		constexpr auto CheckBox_PerkDeckNotReOpen = 0x2d0; // UCheckBox*
		constexpr auto GoldLack = 0x2d8; // UOverlay*
		constexpr auto HorizontalBox_ClassList = 0x2e0; // UHorizontalBox*
		constexpr auto HorizontalBox_PerkDeckReOpen = 0x2e8; // UHorizontalBox*
		constexpr auto Image_1 = 0x2f0; // UImage*
		constexpr auto Image_2 = 0x2f8; // UImage*
		constexpr auto Image_5 = 0x300; // UImage*
		constexpr auto Image_10 = 0x308; // UImage*
		constexpr auto Image_11 = 0x310; // UImage*
		constexpr auto Image_13 = 0x318; // UImage*
		constexpr auto Image_134 = 0x320; // UImage*
		constexpr auto Image_213 = 0x328; // UImage*
		constexpr auto Image_247 = 0x330; // UImage*
		constexpr auto Image_271 = 0x338; // UImage*
		constexpr auto Image_276 = 0x340; // UImage*
		constexpr auto Image_335 = 0x348; // UImage*
		constexpr auto Image_342 = 0x350; // UImage*
		constexpr auto Image_484 = 0x358; // UImage*
		constexpr auto Image_566 = 0x360; // UImage*
		constexpr auto Image_1200 = 0x368; // UImage*
		constexpr auto Image_1511 = 0x370; // UImage*
		constexpr auto Image_Class = 0x378; // UImage*
		constexpr auto Image_ClassIcon = 0x380; // UImage*
		constexpr auto Image_Cycle = 0x388; // UImage*
		constexpr auto Image_Cycle_2 = 0x390; // UImage*
		constexpr auto Image_Cycle_4 = 0x398; // UImage*
		constexpr auto Image_Weapon = 0x3a0; // UImage*
		constexpr auto Img_Movie = 0x3a8; // UImage*
		constexpr auto ReseletTextGroup1 = 0x3b0; // UHorizontalBox*
		constexpr auto ReseletTextGroup1_2 = 0x3b8; // UHorizontalBox*
		constexpr auto ReseletTextGroup2 = 0x3c0; // UOverlay*
		constexpr auto ReseletTextGroup2_2 = 0x3c8; // UOverlay*
		constexpr auto ReseletTextGroup2_4 = 0x3d0; // UOverlay*
		constexpr auto ScaleBox_ClassList = 0x3d8; // UScaleBox*
		constexpr auto ScaleBox_SelectNotifyMessage = 0x3e0; // UScaleBox*
		constexpr auto SizeBox_Choose = 0x3e8; // USizeBox*
		constexpr auto SizeBox_Ok = 0x3f0; // USizeBox*
		constexpr auto SizeBox_Ok2 = 0x3f8; // USizeBox*
		constexpr auto SizeBox_Random = 0x400; // USizeBox*
		constexpr auto SizeBox_Refrest = 0x408; // USizeBox*
		constexpr auto SizeBox_Select = 0x410; // USizeBox*
		constexpr auto T_AmmoName = 0x418; // UTextBlock*
		constexpr auto T_ClassDeckName = 0x420; // UTextBlock*
		constexpr auto T_ClassDesc = 0x428; // UTextBlock*
		constexpr auto T_CurrentGold = 0x430; // UTextBlock*
		constexpr auto T_WeaponDesc = 0x438; // UTextBlock*
		constexpr auto T_WeaponName = 0x440; // UTextBlock*
		constexpr auto TextBlock_Close = 0x448; // UTextBlock*
		constexpr auto TextBlock_Close_2 = 0x450; // UTextBlock*
		constexpr auto TextBlock_Close_7 = 0x458; // UTextBlock*
		constexpr auto TextBlock_MaxReset = 0x460; // UTextBlock*
		constexpr auto TextBlock_MaxReset_2 = 0x468; // UTextBlock*
		constexpr auto TextBlock_Price_ChangeDeckList = 0x470; // UTextBlock*
		constexpr auto TextBlock_Price_Random = 0x478; // UTextBlock*
		constexpr auto TextBlock_Price_Select = 0x480; // UTextBlock*
		constexpr auto TextBlock_RandomRemainCount = 0x488; // UTextBlock*
		constexpr auto TextBlock_RefreshRemainCount = 0x490; // UTextBlock*
		constexpr auto TextBlock_Reselect = 0x498; // UTextBlock*
		constexpr auto TextBlock_Reselect_2 = 0x4a0; // UTextBlock*
		constexpr auto TextBlock_Reselect_4 = 0x4a8; // UTextBlock*
		constexpr auto UW-Inventory_Perk = 0x4b0; // UUW-Inventory_Perk_C*
		constexpr auto UW-Timer = 0x4b8; // UUW-Timer_C*
		constexpr auto WidgetSwitcher_ChangeDeck = 0x4c0; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_ChangeDeck_2 = 0x4c8; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_Reselect = 0x4d0; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_Reselect_2 = 0x4d8; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_Reselect_4 = 0x4e0; // UWidgetSwitcher*
		constexpr auto InventoryWidget = 0x4e8; // UUW-InventoryWidget_C*
		constexpr auto Slots = 0x4f0; // TArray<UUW-Inventory_PopupPerkSlot_C*>
		constexpr auto IconBrush = 0x500; // FSlateBrush
		constexpr auto HoverWidget = 0x588; // UUW-Inventory_ItemSlotHover_C*
		constexpr auto HoverTimerHandle = 0x590; // FTimerHandle
		constexpr auto LocalTemp = 0x598; // int64_t
		constexpr auto MediaPlayer = 0x5a0; // UMediaPlayer*
		constexpr auto ClassVideo_Map = 0x5a8; // TMap<int32_t, UMediaSource*>
		constexpr auto bBlockButton = 0x5f8; // bool
		constexpr auto bButtonEnabled = 0x5f9; // bool
		constexpr auto bCanRemainCount = 0x5fa; // bool
		constexpr auto bCanCurrentGold = 0x5fb; // bool
		constexpr auto bWaitingResponse = 0x5fc; // bool
		constexpr auto CurrentGold = 0x600; // int64_t
		constexpr auto ChangeDeckCount = 0x608; // int32_t
		constexpr auto ChangeDeckListCount = 0x60c; // int32_t
		constexpr auto PerkDeckID = 0x610; // int32_t
		constexpr auto DisableTime = 0x614; // int32_t
		constexpr auto ClassInfoWidgetMap = 0x618; // TMap<FName, UUW-PerkDeckSelectItemWidget_C*>
		constexpr auto CurrentPerkDeckSelectInfo = 0x668; // FPerkDeckSelectInfo
		constexpr auto LocalPerkMode = 0x680; // int32_t
		constexpr auto ClassListPadding = 0x684; // float
		constexpr auto Handle_PlayMovie = 0x688; // FTimerHandle
		constexpr auto CurrentClassVideo = 0x690; // UMediaSource*
		constexpr auto Handle_SetPerkInfoByHoverClassButton = 0x698; // FTimerHandle
		constexpr auto LastClassButtonHovered = 0x6a0; // bool
		constexpr auto LastClassIndex = 0x6a4; // int32_t
	}

	namespace n_UUW-ScenarioQuestCell_C {
		constexpr auto Ani_Complete = 0x248; // UWidgetAnimation*
		constexpr auto Ani_BG = 0x250; // UImage*
		constexpr auto Bg = 0x258; // UImage*
		constexpr auto Complete = 0x260; // UImage*
		constexpr auto TextBlock_QuestDesc = 0x268; // UTextBlock*
		constexpr auto TextBlock_QuestTitle = 0x270; // UTextBlock*
		constexpr auto UW-ImageText = 0x278; // UUW-ImageText_C*
		constexpr auto UW-ScenarioQuestCell_Sub = 0x280; // UUW-ScenarioQuestCell_Sub_C*
		constexpr auto UW-ScenarioQuestCell_Sub_2 = 0x288; // UUW-ScenarioQuestCell_Sub_C*
		constexpr auto UW-ScenarioQuestCell_Sub_3 = 0x290; // UUW-ScenarioQuestCell_Sub_C*
		constexpr auto TaskInfo = 0x298; // FQuestTaskInfo
		constexpr auto TaskData = 0x2b8; // FQuestTaskElement
	}

	namespace n_UAkMarkerCallbackInfo {
		constexpr auto Identifier = 0x38; // int32_t
		constexpr auto Position = 0x3c; // int32_t
		constexpr auto Label = 0x40; // FString
	}

	namespace n_UUMGSequencePlayer {
		constexpr auto Animation = 0x408; // UWidgetAnimation*
	}

	namespace n_UBravoHotelActionComponent {
		constexpr auto bWalking = 0xc8; // char : 1
		constexpr auto bSprinting = 0xc8; // char : 1
		constexpr auto bIsProned = 0xc8; // char : 1
		constexpr auto bIsJumping = 0xc8; // char : 1
		constexpr auto bIsKicking = 0xc8; // char : 1
		constexpr auto bIsAirWalking = 0xc8; // char : 1
		constexpr auto bWantsToRocketJump = 0xc8; // char : 1
		constexpr auto bWantsToMeteorJump = 0xc8; // char : 1
		constexpr auto bWantsToMeteorStrike = 0xc9; // char : 1
		constexpr auto bWantsToJetpack = 0xc9; // char : 1
		constexpr auto bWantsToJetpackAim = 0xc9; // char : 1
		constexpr auto CustomBuoyancySwimMode = 0xc9; // char : 1
		constexpr auto LeanState = 0xca; // ELeanState
		constexpr auto FireType = 0xcb; // EFireType
		constexpr auto ThrowingType = 0xcc; // EGrenadeThrowingType
		constexpr auto ReplicatedAnimMontage = 0xd0; // UAnimMontage*
		constexpr auto ReplicatedAnimMontage_FPP = 0xd8; // UAnimMontage*
		constexpr auto bIsSliding = 0xe0; // bool
		constexpr auto bIsRolling = 0xe1; // bool
		constexpr auto BravoHotelCharacterMovement = 0xe8; // UBravoHotelCharacterMovementComponent*
	}

	namespace n_UUW-Inventory_FreeSupplyToolTip_C {
		constexpr auto Image_362 = 0x248; // UImage*
		constexpr auto Image_552 = 0x250; // UImage*
		constexpr auto RichTextBlock_74 = 0x258; // URichTextBlock*
	}

	namespace n_UAvfMediaSettings {
		constexpr auto NativeAudioOut = 0x28; // bool
	}

	namespace n_UBravoHotelAliveInfoWidget {
		constexpr auto GameState = 0x248; // ABattleRoyaleGameState*
		constexpr auto Canvas_Aircraft = 0x250; // UCanvasPanel*
		constexpr auto T_BoardingCount = 0x258; // UTextBlock*
		constexpr auto T_MaxBoardingCount = 0x260; // UTextBlock*
		constexpr auto KillAliveInfo = 0x270; // FKillAliveInfo
	}

	namespace n_AGameState {
		constexpr auto MatchState = 0x368; // FName
		constexpr auto PreviousMatchState = 0x370; // FName
		constexpr auto ElapsedTime = 0x378; // int32_t
	}

	namespace n_UMaterialExpressionComponentMask {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto R = 0x54; // char : 1
		constexpr auto G = 0x54; // char : 1
		constexpr auto B = 0x54; // char : 1
		constexpr auto A = 0x54; // char : 1
	}

	namespace n_UUserDefinedStruct {
		constexpr auto status = 0xc0; // EUserDefinedStructureStatus
		constexpr auto Guid = 0xc4; // FGuid
	}

	namespace n_UBravoHotelVehicleSpawnBoxComponent {
		constexpr auto SpawnProbability = 0x4d8; // float
		constexpr auto SpawnVehiclesInBoxList = 0x4e0; // TArray<FSpawnVehicleInfo>
		constexpr auto StandardGroupName = 0x4f0; // FName
		constexpr auto ParentsStandardGroupBoxComponent = 0x4f8; // UBravoHotelVehicleStandardGroupBoxComponent*
		constexpr auto DivisionVehicleKey = 0x500; // FName
	}

	namespace n_UDatasmithCineCameraComponentTemplate {
		constexpr auto FilmbackSettings = 0x30; // FDatasmithCameraFilmbackSettingsTemplate
		constexpr auto LensSettings = 0x38; // FDatasmithCameraLensSettingsTemplate
		constexpr auto FocusSettings = 0x3c; // FDatasmithCameraFocusSettingsTemplate
		constexpr auto CurrentFocalLength = 0x44; // float
		constexpr auto CurrentAperture = 0x48; // float
		constexpr auto PostProcessSettings = 0x50; // FDatasmithPostProcessSettingsTemplate
	}

	namespace n_UInventoryComponent {
		constexpr auto bBindItem = 0xc0; // bool
		constexpr auto bKeepItem = 0xc1; // bool
		constexpr auto NumInventorySlots = 0xc4; // int32_t
		constexpr auto BackPackItems = 0xc8; // TArray<FInventoryItemInfo>
		constexpr auto BootyBoxClass = 0xd8; // AActor*
		constexpr auto CurrentlyHealthItemCount = 0xe0; // int32_t
		constexpr auto OverrideItems = 0xe8; // TMap<FName, FName>
		constexpr auto MaxLoad = 0x138; // float
		constexpr auto ReplicationBackPackItems = 0x190; // TArray<FInventoryItemInfo>
		constexpr auto CurrentlyLoaded = 0x1a0; // float
		constexpr auto SortType = 0x1a4; // int32_t
		constexpr auto bNoDropItem = 0x1a8; // bool
		constexpr auto bNoDropYesBox = 0x1a9; // bool
		constexpr auto LoadInventoryFromServer = 0x1b0; // FMulticastInlineDelegate
		constexpr auto ChangeRepBackpackItemDelegate = 0x1c0; // FMulticastInlineDelegate
		constexpr auto ChangeBackpackItemDelegate = 0x1d0; // FMulticastInlineDelegate
		constexpr auto NotEnoughSpaceDelegate = 0x1e0; // FMulticastInlineDelegate
		constexpr auto InventoryItemSortOrder = 0x230; // UItemSortOrder*
		constexpr auto InventoryItemSortOrderSoftAsset = 0x238; // TSoftObjectPtr<UDataAsset>
		constexpr auto PickupItemSortOrder = 0x260; // UItemSortOrder*
		constexpr auto PickupItemSortOrderSoftAsset = 0x268; // TSoftObjectPtr<UDataAsset>
		constexpr auto Watchers = 0x298; // TArray<ABravoHotelCharacter*>
	}

	namespace n_ULevelActorContainer {
		constexpr auto Actors = 0x28; // TArray<AActor*>
	}

	namespace n_ALevelBounds {
		constexpr auto BoxComponent = 0x318; // UBoxComponent*
		constexpr auto bAutoUpdateBounds = 0x320; // bool
	}

	namespace n_UInterpGroupInst {
		constexpr auto Group = 0x28; // UInterpGroup*
		constexpr auto GroupActor = 0x30; // AActor*
		constexpr auto TrackInst = 0x38; // TArray<UInterpTrackInst*>
	}

	namespace n_UMaterialExpressionFeatureLevelSwitch {
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto Inputs = 0x54; // FExpressionInput [0x4]
	}

	namespace n_UBlackboardKeyType_Enum {
		constexpr auto EnumType = 0x30; // UEnum*
		constexpr auto EnumName = 0x38; // FString
		constexpr auto bIsEnumNameValid = 0x48; // char : 1
	}

	namespace n_ABravoHotelProjectileMolotovFireCell {
		constexpr auto FireRoot = 0x318; // UBoxComponent*
		constexpr auto FireEffect = 0x320; // UParticleSystemComponent*
		constexpr auto LifeTime = 0x328; // float
		constexpr auto DamagedCharacters = 0x330; // TArray<ABravoHotelCharacter*>
		constexpr auto Attacker = 0x340; // ABravoHotelCharacter*
		constexpr auto OwnerProjectileGrenade = 0x348; // ABravoHotelProjectileGrenadeMolotovCocktail*
		constexpr auto DamageTime = 0x350; // int32_t
		constexpr auto FireDamage = 0x354; // float
		constexpr auto LimitRange = 0x358; // float
		constexpr auto bIgnoreAttacker = 0x35c; // bool
		constexpr auto HitComponent = 0x360; // TWeakObjectPtr<UPrimitiveComponent>
		constexpr auto TimerHandle_CheckHitComponent = 0x368; // FTimerHandle
		constexpr auto TimeHandle_LifeTime = 0x370; // FTimerHandle
		constexpr auto TimeHandle_CheckDistanceToPlayer = 0x378; // FTimerHandle
		constexpr auto DamageTypeClass = 0x380; // UDamageType*
		constexpr auto LocalPlayingCharacter = 0x38c; // TWeakObjectPtr<ABravoHotelCharacter>
	}

	namespace n_UNiagaraParameterCollection {
		constexpr auto Namespace = 0x28; // FName
		constexpr auto Parameters = 0x30; // TArray<FNiagaraVariable>
		constexpr auto DefaultInstance = 0x40; // UNiagaraParameterCollectionInstance*
		constexpr auto CompileId = 0x48; // FGuid
	}

	namespace n_ABravoHotelProjectile {
		constexpr auto SphereCollision = 0x318; // USphereComponent*
		constexpr auto Projectile = 0x320; // UStaticMeshComponent*
		constexpr auto RealisticProjectile = 0x328; // URealisticProjectileComponent*
		constexpr auto BulletEffect = 0x330; // UParticleSystemComponent*
		constexpr auto TrailEffectInWater = 0x338; // UParticleSystemComponent*
		constexpr auto Damage = 0x340; // float
		constexpr auto StartLocation = 0x344; // FVector
		constexpr auto bInWater = 0x350; // bool
		constexpr auto TrailEffectsList = 0x370; // TMap<FString, UParticleSystem*>
		constexpr auto BulletEffectsList = 0x3c0; // TMap<FString, UParticleSystem*>
		constexpr auto StopEffectsList = 0x410; // TMap<FString, UParticleSystem*>
		constexpr auto bSpawnTrailEffect = 0x460; // bool
		constexpr auto TrailNames = 0x468; // TArray<FString>
		constexpr auto TrailLocation = 0x478; // FVector
		constexpr auto TrailRotation = 0x484; // FRotator
		constexpr auto bChangeBulletEffect = 0x490; // bool
		constexpr auto BulletEffectName = 0x498; // FString
		constexpr auto StopEffectNames = 0x4a8; // TArray<FString>
		constexpr auto AuthorityController = 0x4b8; // ABravoHotelPlayerController*
	}

	namespace n_UUW-GuideWidget_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto ADS_Pannel = 0x250; // UCanvasPanel*
		constexpr auto ADSZoom = 0x258; // UHorizontalBox*
		constexpr auto CanvasPanel_Main = 0x260; // UCanvasPanel*
		constexpr auto Descent = 0x268; // UHorizontalBox*
		constexpr auto Descent_Pannel = 0x270; // UCanvasPanel*
		constexpr auto Drive = 0x278; // UVerticalBox*
		constexpr auto Drive_Pannel = 0x280; // UCanvasPanel*
		constexpr auto Key_ADSZeroingM = 0x288; // UKeyImageWidget_C*
		constexpr auto Key_ADSZeroingP = 0x290; // UKeyImageWidget_C*
		constexpr auto Key_ADSZoomIn = 0x298; // UKeyImageWidget_C*
		constexpr auto Key_ADSZoomOut = 0x2a0; // UKeyImageWidget_C*
		constexpr auto Ladder = 0x2a8; // UHorizontalBox*
		constexpr auto Ladder_Pannel = 0x2b0; // UCanvasPanel*
		constexpr auto Parachuting = 0x2b8; // UHorizontalBox*
		constexpr auto Parachuting_Pannel = 0x2c0; // UCanvasPanel*
		constexpr auto SmartPing = 0x2c8; // UHorizontalBox*
		constexpr auto SmartPing_Pannel = 0x2d0; // UCanvasPanel*
		constexpr auto Spectate = 0x2d8; // UHorizontalBox*
		constexpr auto Spectate_Pannel = 0x2e0; // UCanvasPanel*
		constexpr auto Swim = 0x2e8; // UHorizontalBox*
		constexpr auto Swim_Pannel = 0x2f0; // UCanvasPanel*
		constexpr auto T_ADSZeroingM = 0x2f8; // UTextBlock*
		constexpr auto T_ADSZeroingP = 0x300; // UTextBlock*
		constexpr auto T_ADSZoomIn = 0x308; // UTextBlock*
		constexpr auto T_ADSZoomOut = 0x310; // UTextBlock*
		constexpr auto UseItem = 0x318; // UHorizontalBox*
		constexpr auto UseItem_Pannel = 0x320; // UCanvasPanel*
		constexpr auto WidgetSwitcher_Guide = 0x328; // UWidgetSwitcher*
		constexpr auto WorldMap = 0x330; // UHorizontalBox*
		constexpr auto WorldMap_Always = 0x338; // UHorizontalBox*
		constexpr auto WorldMap_Pannel = 0x340; // UCanvasPanel*
		constexpr auto CurrentToggleWidgetType = 0x348; // EToggleWidgetModeType
	}

	namespace n_UImage {
		constexpr auto Brush = 0x108; // FSlateBrush
		constexpr auto BrushDelegate = 0x190; // FDelegate
		constexpr auto ColorAndOpacity = 0x1a0; // FLinearColor
		constexpr auto ColorAndOpacityDelegate = 0x1b0; // FDelegate
		constexpr auto bFlipForRightToLeftFlowDirection = 0x1c0; // bool
		constexpr auto OnMouseButtonDownEvent = 0x1c4; // FDelegate
	}

	namespace n_ABP-DefaultPawn_C {
		constexpr auto UberGraphFrame = 0x3b10; // FPointerToUberGraphFrame
		constexpr auto BP-LadderComponent = 0x3b18; // UBP-LadderComponent_C*
		constexpr auto OutBlueZone = 0x3b20; // UParticleSystemComponent*
		constexpr auto BP-FoliageCollision = 0x3b28; // UBP-GrassCollision_Character_C*
		constexpr auto DevCamera_ChildActor = 0x3b30; // UChildActorComponent*
		constexpr auto TeamInfoUpdater = 0x3b38; // UTeamInfoUpdaterComponent*
		constexpr auto VelocityZ_LandingDamage = 0x3b40; // float
		constexpr auto CharacterPreviewRef = 0x3b48; // ABP-CharacterRecording_C*
		constexpr auto Chat System = 0x3b50; // AChat_System_C*
		constexpr auto ShowChatToggle = 0x3b58; // bool
		constexpr auto CurrentViewportSizeX = 0x3b5c; // float
		constexpr auto CurrentViewportSizeY = 0x3b60; // float
		constexpr auto OutScreenPosition = 0x3b64; // bool
		constexpr auto SightNumForTset = 0x3b68; // int32_t
		constexpr auto bDefaultAmplifier = 0x3b6c; // bool
		constexpr auto CurrentTeamInfoHeight = 0x3b70; // float
	}

	namespace n_UUW-VehicleWidget_C {
		constexpr auto UberGraphFrame = 0x2a8; // FPointerToUberGraphFrame
		constexpr auto FuelGauge = 0x2b0; // UProgressBar*
		constexpr auto FuelIcon = 0x2b8; // UImage*
		constexpr auto HPFaint = 0x2c0; // UProgressBar*
		constexpr auto HPGauge = 0x2c8; // UProgressBar*
		constexpr auto HPIcon = 0x2d0; // UImage*
		constexpr auto SpeedText = 0x2d8; // UTextBlock*
		constexpr auto SubInfoParent = 0x2e0; // UOverlay*
		constexpr auto UW-VehicleSeatWidget = 0x2e8; // UUW-VehicleSeatWidget_C*
		constexpr auto CachedVehicle = 0x2f0; // ABravoHotelVehicle*
		constexpr auto MySeatColor = 0x2f8; // FLinearColor
		constexpr auto EmptyFuelColor = 0x308; // FLinearColor
		constexpr auto InterpTargetHpRate = 0x318; // float
		constexpr auto InterpCurrentHpRate = 0x31c; // float
		constexpr auto InterpSpeed = 0x320; // float
		constexpr auto HPFaintCurve = 0x328; // UCurveFloat*
		constexpr auto HPColorCurve = 0x330; // UCurveLinearColor*
		constexpr auto SubInfoWidget = 0x338; // UUW-VehicleSubInfo_Base_C*
		constexpr auto EnableBind = 0x340; // bool
		constexpr auto NewVar_1 = 0x348; // ABravoHotelVehicle*
	}

	namespace n_UMovieSceneVectorTrack {
		constexpr auto NumChannelsUsed = 0x88; // int32_t
	}

	namespace n_UZipFileFunctionInternalCallback {
		constexpr auto CompressionFormat = 0x30; // EZipUtilityCompressionFormat
		constexpr auto File = 0x38; // FString
		constexpr auto DestinationFolder = 0x48; // FString
		constexpr auto FileIndex = 0x58; // int32_t
		constexpr auto Callback = 0x60; // UObject*
		constexpr auto bSingleFile = 0x68; // bool
		constexpr auto bFileFound = 0x69; // bool
		constexpr auto bUnzipto = 0x6a; // bool
	}

	namespace n_UUW-RewardGoldSlot_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Ani_Gold = 0x250; // UWidgetAnimation*
		constexpr auto 1 = 0x258; // UTextBlock*
		constexpr auto 10 = 0x260; // UTextBlock*
		constexpr auto 100 = 0x268; // UTextBlock*
		constexpr auto 1000 = 0x270; // UTextBlock*
		constexpr auto BonusBG = 0x278; // UImage*
		constexpr auto BrightSpot_01 = 0x280; // UImage*
		constexpr auto BrightSpot_02 = 0x288; // UImage*
		constexpr auto BrightSpot_03 = 0x290; // UImage*
		constexpr auto BrightSpot_04 = 0x298; // UImage*
		constexpr auto BrightSpot_05 = 0x2a0; // UImage*
		constexpr auto Empty = 0x2a8; // UTextBlock*
		constexpr auto Glow_01 = 0x2b0; // UImage*
		constexpr auto Gold = 0x2b8; // UImage*
		constexpr auto Image_7 = 0x2c0; // UImage*
		constexpr auto Image_11 = 0x2c8; // UImage*
		constexpr auto Image_14 = 0x2d0; // UImage*
		constexpr auto Image_15 = 0x2d8; // UImage*
		constexpr auto Image_16 = 0x2e0; // UImage*
		constexpr auto Image_17 = 0x2e8; // UImage*
		constexpr auto Image_18 = 0x2f0; // UImage*
		constexpr auto Image_20 = 0x2f8; // UImage*
		constexpr auto Image_21 = 0x300; // UImage*
		constexpr auto Image_22 = 0x308; // UImage*
		constexpr auto Image_23 = 0x310; // UImage*
		constexpr auto Image_335 = 0x318; // UImage*
		constexpr auto Image_1473 = 0x320; // UImage*
		constexpr auto Light = 0x328; // UImage*
		constexpr auto Light_01 = 0x330; // UImage*
		constexpr auto Light_02 = 0x338; // UImage*
		constexpr auto Light_03 = 0x340; // UImage*
		constexpr auto Light_04 = 0x348; // UImage*
		constexpr auto Light_05 = 0x350; // UImage*
		constexpr auto Light_06 = 0x358; // UImage*
		constexpr auto PickUpGold = 0x360; // UTextBlock*
		constexpr auto RIng_Glow_01 = 0x368; // UImage*
		constexpr auto TextBlock_4 = 0x370; // UTextBlock*
		constexpr auto TextLight_2 = 0x378; // UImage*
		constexpr auto TextLight_3 = 0x380; // UImage*
		constexpr auto Save = 0x388; // int32_t
		constexpr auto NewVar_1 = 0x38c; // bool
		constexpr auto IsStopSound = 0x38d; // bool
		constexpr auto LoopSountStartTime = 0x390; // float
		constexpr auto LoopSound = 0x394; // FAudioPlayingHandle
		constexpr auto LoopSountEndTime = 0x398; // float
		constexpr auto 1StartTime = 0x39c; // float
		constexpr auto 10StartTime = 0x3a0; // float
		constexpr auto 100StartTime = 0x3a4; // float
		constexpr auto 1000StartTime = 0x3a8; // float
		constexpr auto FinStartTime = 0x3ac; // float
	}

	namespace n_ABravoHotelMK3DReplayController {
		constexpr auto MaxViewportSize = 0x958; // FVector2D
		constexpr auto bIsShowingTimelineWidget = 0x960; // bool
		constexpr auto bIsShowingPlayerListWidget = 0x961; // bool
		constexpr auto bIsShowingItemListWidget = 0x962; // bool
		constexpr auto DuplicatedReconnectTimeout_TimerHandle = 0x968; // FTimerHandle
		constexpr auto MainWidgetRef = 0x970; // UUserWidget*
		constexpr auto ReplayMainWidgetRef = 0x978; // UUserWidget*
		constexpr auto KillMessageAdditionalEffectiveTime = 0x980; // float
		constexpr auto LastViewTarget = 0x988; // AActor*
		constexpr auto GameOverlayWidget = 0x998; // UUserWidget*
		constexpr auto GameSettingWidget = 0x9a0; // UUserWidget*
		constexpr auto DebugInfo = 0x9a8; // UBravoHotelDebugInfo*
		constexpr auto ReplayZone = 0x9b0; // ABravoHotelReplayZone*
		constexpr auto CurrentRecordingPawn = 0x9b8; // AActor*
		constexpr auto TargetVehicle = 0xa98; // ABravoHotelVehicle*
		constexpr auto K2_AfterKillcamHUD = 0xaa8; // AHUD*
		constexpr auto RecordingPlayerState = 0xab0; // ABravoHotelPlayerState*
	}

	namespace n_UWorldComposition {
		constexpr auto TilesStreaming = 0x130; // TArray<ULevelStreaming*>
		constexpr auto TilesStreamingTimeThreshold = 0x140; // double
		constexpr auto bLoadAllTilesDuringCinematic = 0x148; // bool
		constexpr auto bRebaseOriginIn3DSpace = 0x149; // bool
		constexpr auto RebaseOriginDistance = 0x14c; // float
		constexpr auto bApplyMinStreamingPriorityToLOD = 0x150; // bool
		constexpr auto bApplyStreamingDistanceScaleToLOD = 0x151; // bool
		constexpr auto DevFilterRule = 0x158; // TArray<FString>
	}

	namespace n_UUW-Inventory_RecipeSlot_C {
		constexpr auto UberGraphFrame = 0x1358; // FPointerToUberGraphFrame
		constexpr auto Ani_Tutorial_Glow = 0x1360; // UWidgetAnimation*
		constexpr auto P_Upgrade_Arrow = 0x1368; // UWidgetAnimation*
		constexpr auto C_SlotHover_ItemState_Hide = 0x1370; // UWidgetAnimation*
		constexpr auto C_SlotHover_ItemState_Show = 0x1378; // UWidgetAnimation*
		constexpr auto Hover_Gold = 0x1380; // UWidgetAnimation*
		constexpr auto P_SlotHover = 0x1388; // UWidgetAnimation*
		constexpr auto BGImage = 0x1390; // UImage*
		constexpr auto CanvasPanel_ITemState = 0x1398; // UCanvasPanel*
		constexpr auto Count = 0x13a0; // UTextBlock*
		constexpr auto Effect_Craft = 0x13a8; // UImage*
		constexpr auto HorizontalBox_Rarity = 0x13b0; // UHorizontalBox*
		constexpr auto HoverImage = 0x13b8; // UImage*
		constexpr auto HoverImage_Gold = 0x13c0; // UImage*
		constexpr auto IconRepair = 0x13c8; // UImage*
		constexpr auto Image_1 = 0x13d0; // UImage*
		constexpr auto Image_2 = 0x13d8; // UImage*
		constexpr auto Image_222 = 0x13e0; // UImage*
		constexpr auto ItemImage = 0x13e8; // UImage*
		constexpr auto ItemNameName = 0x13f0; // UTextBlock*
		constexpr auto ItemState_Text = 0x13f8; // UTextBlock*
		constexpr auto NeedMaterial = 0x1400; // UImage*
		constexpr auto Overlay_Key = 0x1408; // UOverlay*
		constexpr auto ProgressBar_475 = 0x1410; // UProgressBar*
		constexpr auto SizeBox_1 = 0x1418; // USizeBox*
		constexpr auto TextBlock_ShortCut = 0x1420; // UTextBlock*
		constexpr auto Tutorial_Glow = 0x1428; // UImage*
		constexpr auto UW-MouseRightClick_Big = 0x1430; // UUW-MouseRightClick_C*
		constexpr auto UW-MouseRightClick_Small = 0x1438; // UUW-MouseRightClick_C*
		constexpr auto WeaponItemImage = 0x1440; // UImage*
		constexpr auto bGold = 0x1448; // bool
		constexpr auto SelectedHoverImage = 0x1450; // UImage*
		constexpr auto MedicalBGColor = 0x1458; // FLinearColor
		constexpr auto SetSlotInfo = 0x1468; // FMulticastInlineDelegate
		constexpr auto SlotIndex = 0x1478; // int32_t
		constexpr auto RecipeKey = 0x147c; // FName
		constexpr auto RecipeData = 0x1488; // FItemRecipeData
		constexpr auto bLeftClicked = 0x14c0; // bool
		constexpr auto CanCraft = 0x14c1; // bool
	}

	namespace n_UBravoHotelMuzzleEffectComponent {
		constexpr auto MuzzleAttachPoint = 0xb0; // FName
		constexpr auto ChancePool = 0xb8; // TArray<bool>
		constexpr auto BulletCountToSpawnMultiFireEffect = 0xc8; // int32_t
		constexpr auto SpawnInterval = 0xcc; // int32_t
		constexpr auto MuzzleAttachPoint_1P = 0xe0; // FName
		constexpr auto MuzzleAttachPoint_ADS = 0xe8; // FName
		constexpr auto MuzzleEffects = 0xf0; // TMap<EWeaponAttachmentMuzzleDevice, FMuzzleEffect>
		constexpr auto ReadyEffect = 0x140; // UParticleSystem*
		constexpr auto WarmupEffect = 0x148; // UParticleSystem*
		constexpr auto WarmupAlphaParameter = 0x150; // FName
		constexpr auto WarmupAlphaTime = 0x158; // float
		constexpr auto WarmupAlphaCurve = 0x160; // UCurveFloat*
		constexpr auto TimerHandle_WarmupOff = 0x168; // FTimerHandle
		constexpr auto TimerHandle_WarmupUpdate = 0x170; // FTimerHandle
		constexpr auto CurrentMuzzleType = 0x178; // EWeaponAttachmentMuzzleDevice
		constexpr auto MuzzleFlashComponent = 0x180; // UParticleSystemComponent*
		constexpr auto MuzzleSmokeComponent = 0x188; // UParticleSystemComponent*
		constexpr auto ReadyEffectComponent = 0x190; // UParticleSystemComponent*
		constexpr auto WarmupEffectComponent = 0x198; // UParticleSystemComponent*
		constexpr auto PrevSpawnTime = 0x1a0; // float
		constexpr auto bAttachSpawnedEffect = 0x1a4; // bool
		constexpr auto bUsePreShootRotationToFlash = 0x1a5; // bool
	}

	namespace n_ULowEntrySocketConnection {
		constexpr auto ListenerCode = 0x38; // ULowEntrySocketConnectionListenerCode*
		constexpr auto Host = 0x40; // FString
		constexpr auto Port = 0x50; // int32_t
		constexpr auto PortUdp = 0x54; // int32_t
		constexpr auto NextConnectionValidationFunctionCallId = 0x58; // int32_t
		constexpr auto NextFunctionCallId = 0x5c; // int32_t
		constexpr auto NextLatentFunctionCallId = 0xb0; // int32_t
		constexpr auto SendingBytes = 0x108; // TArray<char>
		constexpr auto ReceivedBytes = 0x118; // TArray<char>
		constexpr auto ReceivingBuffer = 0x128; // TArray<char>
		constexpr auto ReceivingType = 0x139; // char
		constexpr auto ReceivingFunctionCallId = 0x13c; // int32_t
		constexpr auto ReceivingPacketSize = 0x140; // int32_t
		constexpr auto ReceivingPacket = 0x148; // TArray<char>
		constexpr auto WaitingForConnectionValidationResponse = 0x168; // bool
		constexpr auto ConnectionValidationResponseTime = 0x16c; // float
		constexpr auto ConnectionValidationDelayTime = 0x170; // float
		constexpr auto LatentFunctionConnectionValidationDelayTime = 0x174; // float
		constexpr auto ConnectionValidationFunctionCallId = 0x178; // int32_t
		constexpr auto PeriodicConnectionValidationEnabled = 0x17c; // bool
		constexpr auto CanCallOnDisconnect = 0x17d; // bool
		constexpr auto OnConnectEvent = 0x180; // FDelegate
		constexpr auto OnDisconnectEvent = 0x190; // FDelegate
		constexpr auto OnReceiveMessageEvent = 0x1a0; // FDelegate
		constexpr auto OnReceiveUnreliableMessageEvent = 0x1b0; // FDelegate
	}

	namespace n_UPostEventAsync {
		constexpr auto Completed = 0x30; // FMulticastInlineDelegate
	}

	namespace n_UBravoHotelMapCompWidget {
		constexpr auto BattleRoyaleGameState = 0x248; // ABattleRoyaleGameState*
		constexpr auto BravoHotelGameState = 0x250; // ABravoHotelGameState*
		constexpr auto TeamSize = 0x258; // int32_t
		constexpr auto bForceUpdateAllWidgets = 0x260; // bool
		constexpr auto MapPlayerInfos = 0x268; // TArray<FMapPlayerInfo>
		constexpr auto LocalMapPlayerInfo = 0x278; // FMapPlayerInfo
		constexpr auto PersonalSupplyBoxInfo = 0x2d0; // FPersonalSupplyBoxInfo
		constexpr auto WorldCenter = 0x2e0; // FVector
		constexpr auto WorldSize = 0x2ec; // FVector2D
		constexpr auto BaseMapSize = 0x2f4; // FVector2D
		constexpr auto ParentWidgetSize = 0x2fc; // FVector2D
		constexpr auto ScaleFactor = 0x304; // float
		constexpr auto BaseScaleFactor = 0x308; // float
		constexpr auto TargetScaleFactor = 0x30c; // float
		constexpr auto TargetMapPos = 0x310; // FVector2D
		constexpr auto PivotPosOnViewport = 0x318; // FVector2D
		constexpr auto bNeedToTranslateMapToPlayerPos = 0x320; // bool
		constexpr auto GridLevel = 0x324; // int32_t
		constexpr auto CurrentGridLevel = 0x328; // int32_t
		constexpr auto GridUnits = 0x330; // TArray<float>
		constexpr auto GridColors = 0x340; // TArray<FLinearColor>
		constexpr auto LineP2CAngle = 0x350; // float
		constexpr auto LineP2CHeight = 0x354; // float
		constexpr auto LineP2CPosonMap = 0x358; // FVector2D
		constexpr auto MapCompBlueZoneInfo = 0x360; // FMapCompBlueZoneInfo
		constexpr auto IsUsingOuterAreaBlueZone = 0x38c; // bool
		constexpr auto UsingOuterAreaBlueZoneVisible = 0x38d; // bool
		constexpr auto AircraftWidget = 0x390; // UBravoHotelAircraftRouteWidget*
		constexpr auto ReplayCircleInfo = 0x39c; // FReplayCircleInfo
		constexpr auto bIsFreeCamVisible = 0x3ac; // bool
		constexpr auto FreeCamPosition = 0x3b0; // FVector2D
		constexpr auto FreeCamAngle = 0x3b8; // float
		constexpr auto MaterialItemList = 0x3c0; // TMap<int32_t, UBravoHotelWorldMapAreaWidget*>
		constexpr auto LocalPingList = 0x410; // TMap<int32_t, UBravoHotelWorldMapAreaWidget*>
		constexpr auto ExpertWeaponItem = 0x460; // UBravoHotelWorldMapAreaWidget*
		constexpr auto bShowWorldMap = 0x468; // bool
		constexpr auto AreaWidgetsRef = 0x470; // TArray<UBravoHotelWorldMapAreaWidget*>
		constexpr auto UsedAreaWidgetsRef = 0x480; // TArray<UBravoHotelWorldMapAreaWidget*>
		constexpr auto ParentWidgetRef = 0x498; // UUserWidget*
		constexpr auto UW_MapDrawWidget_Circle = 0x4a0; // UBravoHotelMapDrawWidget*
		constexpr auto UW_MapDrawWidget_Grid = 0x4a8; // UBravoHotelMapDrawWidget*
		constexpr auto LinePlayerToCircle = 0x4b0; // UImage*
		constexpr auto LineRouteDefault = 0x4b8; // UImage*
		constexpr auto LineRouteDotline = 0x4c0; // UImage*
		constexpr auto DescentStartPoint = 0x4c8; // UImage*
		constexpr auto DescentEndPoint = 0x4d0; // UImage*
		constexpr auto CircleMask = 0x4d8; // UImage*
		constexpr auto ReplayCircleMask = 0x4e0; // UImage*
		constexpr auto MiniMapLevel = 0x4e8; // int32_t
		constexpr auto DefaultCircleTexture = 0x4f0; // UTexture*
		constexpr auto CircleMaskMaterial = 0x4f8; // UMaterialInstance*
		constexpr auto ReplayMaskMaterial = 0x500; // UMaterialInstance*
		constexpr auto CircleMaterialInstance = 0x508; // UMaterialInstanceDynamic*
		constexpr auto ReplayMaterialInstance = 0x510; // UMaterialInstanceDynamic*
	}

	namespace n_ABP-BootyBox_C {
		constexpr auto StaticMesh = 0x3c0; // UStaticMeshComponent*
	}

	namespace n_USoundfieldEndpointSubmix {
		constexpr auto SoundfieldEndpointType = 0x38; // FName
		constexpr auto EndpointSettingsClass = 0x40; // UAudioEndpointSettingsBase*
		constexpr auto EndpointSettings = 0x48; // USoundfieldEndpointSettingsBase*
		constexpr auto EncodingSettingsClass = 0x50; // USoundfieldEncodingSettingsBase*
		constexpr auto EncodingSettings = 0x58; // USoundfieldEncodingSettingsBase*
		constexpr auto SoundfieldEffectChain = 0x60; // TArray<USoundfieldEffectBase*>
	}

	namespace n_ULowEntryByteArray {
		constexpr auto ByteArray = 0x28; // TArray<char>
	}

	namespace n_UQuitMatchCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UBravoHotelAnimInstanceUsableItem {
		constexpr auto OwningActorRef = 0x268; // AActor*
		constexpr auto CharacterRef = 0x270; // ABravoHotelCharacter*
		constexpr auto DeltaTime = 0x278; // float
		constexpr auto bIsCharacterProned = 0x27c; // bool
		constexpr auto bIsThirdPerson = 0x27d; // bool
		constexpr auto bIsOwnerPlayingAnimation = 0x27e; // bool
		constexpr auto AnimStartPosition = 0x280; // float
		constexpr auto AnimPlayRate = 0x284; // float
		constexpr auto OwnerCastingRemainTime = 0x288; // float
	}

	namespace n_UTimeSynchronizableMediaSource {
		constexpr auto bUseTimeSynchronization = 0x88; // bool
		constexpr auto FrameDelay = 0x8c; // int32_t
		constexpr auto TimeDelay = 0x90; // double
	}

	namespace n_UNativePlayerListWidget {
		constexpr auto SortMethodTextBlock = 0x248; // UTextBlock*
		constexpr auto PlayerListPrevButton = 0x250; // UButton*
		constexpr auto PlayerListNextButton = 0x258; // UButton*
		constexpr auto ScrollBox_PlayerName = 0x260; // UScrollBox*
	}

	namespace n_UDialogueWave {
		constexpr auto bMature = 0x28; // char : 1
		constexpr auto bOverride_SubtitleOverride = 0x28; // char : 1
		constexpr auto SpokenText = 0x30; // FString
		constexpr auto SubtitleOverride = 0x40; // FString
		constexpr auto ContextMappings = 0x50; // TArray<FDialogueContextMapping>
		constexpr auto LocalizationGUID = 0x60; // FGuid
	}

	namespace n_UInteractiveToolManager {
		constexpr auto ActiveLeftTool = 0x30; // UInteractiveTool*
		constexpr auto ActiveRightTool = 0x38; // UInteractiveTool*
		constexpr auto ToolBuilders = 0x90; // TMap<FString, UInteractiveToolBuilder*>
	}

	namespace n_ABP-TransportAircraft_C {
		constexpr auto UberGraphFrame = 0x6d0; // FPointerToUberGraphFrame
	}

	namespace n_UARGetCandidateObjectAsyncTaskBlueprintProxy {
		constexpr auto OnSuccess = 0x50; // FMulticastInlineDelegate
		constexpr auto OnFailed = 0x60; // FMulticastInlineDelegate
	}

	namespace n_UBorderSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UUW-Radar_Cursor_Dummy_C {
		constexpr auto Image_47 = 0x248; // UImage*
	}

	namespace n_UBravoHotelPatchWidget {
		constexpr auto PatchService = 0x268; // UBravoHotelPatchService*
	}

	namespace n_UAnimSharingStateInstance {
		constexpr auto AnimationToPlay = 0x268; // UAnimSequence*
		constexpr auto PermutationTimeOffset = 0x270; // float
		constexpr auto PlayRate = 0x274; // float
		constexpr auto bStateBool = 0x278; // bool
		constexpr auto Instance = 0x280; // UAnimSharingInstance*
	}

	namespace n_UUW-Inventory_Carried_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto HoverBG = 0x250; // UImage*
		constexpr auto ScrollBox_1 = 0x258; // UScrollBox*
		constexpr auto WB-CarriedList = 0x260; // UWrapBox*
	}

	namespace n_UBTTask_FSM_CheckState {
		constexpr auto FSM = 0x98; // UStateMachineComponent*
		constexpr auto TargetFSM = 0xa0; // FName
		constexpr auto StateName = 0xa8; // FName
		constexpr auto Debug = 0xb0; // bool
		constexpr auto ForceSuccess = 0xb1; // bool
	}

	namespace n_UCurveVector {
		constexpr auto FloatCurves = 0x30; // FRichCurve [0x3]
	}

	namespace n_UBP_KeyCombination_C {
		constexpr auto Name = 0x28; // FString
		constexpr auto Key Inputs = 0x38; // TArray<UBP_KeyInput_C*>
		constexpr auto Default Combination = 0x48; // TArray<FSKeyInput>
		constexpr auto Can't Be None = 0x58; // bool
		constexpr auto Conflicting Mappings Blocked = 0x60; // TArray<UBP_KeyConflict_C*>
		constexpr auto Conflicting Mappings Info = 0x70; // TArray<UBP_KeyConflict_C*>
		constexpr auto Combination Updated = 0x80; // FMulticastInlineDelegate
		constexpr auto Parent Mapping = 0x90; // UBP_KeyMapping_C*
	}

	namespace n_USCS_Node {
		constexpr auto ComponentClass = 0x28; // UObject*
		constexpr auto ComponentTemplate = 0x30; // UActorComponent*
		constexpr auto CookedComponentInstancingData = 0x38; // FBlueprintCookedComponentInstancingData
		constexpr auto AttachToName = 0x80; // FName
		constexpr auto ParentComponentOrVariableName = 0x88; // FName
		constexpr auto ParentComponentOwnerClassName = 0x90; // FName
		constexpr auto bIsParentComponentNative = 0x98; // bool
		constexpr auto ChildNodes = 0xa0; // TArray<USCS_Node*>
		constexpr auto MetaDataArray = 0xb0; // TArray<FBPVariableMetaDataEntry>
		constexpr auto VariableGuid = 0xc0; // FGuid
		constexpr auto InternalVariableName = 0xd0; // FName
	}

	namespace n_UStereoLayerShapeEquirect {
		constexpr auto LeftUVRect = 0x28; // FBox2D
		constexpr auto RightUVRect = 0x3c; // FBox2D
		constexpr auto LeftScale = 0x50; // FVector2D
		constexpr auto RightScale = 0x58; // FVector2D
		constexpr auto LeftBias = 0x60; // FVector2D
		constexpr auto RightBias = 0x68; // FVector2D
	}

	namespace n_UBTDecorator_Loop {
		constexpr auto NumLoops = 0x68; // int32_t
		constexpr auto bInfiniteLoop = 0x6c; // bool
		constexpr auto InfiniteLoopTimeoutTime = 0x70; // float
	}

	namespace n_UParticleModuleVelocity {
		constexpr auto StartVelocity = 0x38; // FRawDistributionVector
		constexpr auto StartVelocityRadial = 0x80; // FRawDistributionFloat
	}

	namespace n_UMaterialExpressionMaterialFunctionCall {
		constexpr auto MaterialFunction = 0x40; // UMaterialFunctionInterface*
		constexpr auto FunctionParameterInfo = 0x48; // FMaterialParameterInfo
	}

	namespace n_ULocalPlayer {
		constexpr auto ViewportClient = 0x70; // UGameViewportClient*
		constexpr auto AspectRatioAxisConstraint = 0x94; // EAspectRatioAxisConstraint
		constexpr auto PendingLevelPlayerControllerClass = 0x98; // APlayerController*
		constexpr auto bSentSplitJoin = 0xa0; // char : 1
		constexpr auto ControllerId = 0xb8; // int32_t
	}

	namespace n_UNiagaraPrecompileContainer {
		constexpr auto Scripts = 0x28; // TArray<UNiagaraScript*>
		constexpr auto System = 0x38; // UNiagaraSystem*
	}

	namespace n_UUW-PersonalSupplyBoxSlotItemWidget_C {
		constexpr auto UberGraphFrame = 0x3e8; // FPointerToUberGraphFrame
		constexpr auto Over = 0x3f0; // UWidgetAnimation*
		constexpr auto Bg = 0x3f8; // UImage*
		constexpr auto CanvasPanel_2 = 0x400; // UCanvasPanel*
		constexpr auto CanvasPanel_4 = 0x408; // UCanvasPanel*
		constexpr auto Cont = 0x410; // UTextBlock*
		constexpr auto DropHoverImage = 0x418; // UImage*
		constexpr auto Image = 0x420; // UImage*
		constexpr auto Image_86 = 0x428; // UImage*
		constexpr auto Image_187 = 0x430; // UImage*
		constexpr auto Image_675 = 0x438; // UImage*
		constexpr auto Image_874 = 0x440; // UImage*
		constexpr auto ItemImage = 0x448; // UImage*
		constexpr auto ItemName = 0x450; // UTextBlock*
		constexpr auto Lock = 0x458; // UImage*
		constexpr auto Price_Value = 0x460; // UTextBlock*
		constexpr auto ProgressBar_65 = 0x468; // UProgressBar*
		constexpr auto Repair = 0x470; // UImage*
		constexpr auto WeaponName = 0x478; // UTextBlock*
		constexpr auto WeaponName_2 = 0x480; // UTextBlock*
		constexpr auto WeaponName_3 = 0x488; // UTextBlock*
		constexpr auto WidgetSwitcher_1 = 0x490; // UWidgetSwitcher*
		constexpr auto DraggedWidget = 0x498; // UUW-Inventory_DragItem_C*
		constexpr auto DragItemBrush = 0x4a0; // FSlateBrush
		constexpr auto EnableDrag = 0x528; // bool
		constexpr auto ItemIconImg = 0x530; // TSoftObjectPtr<UObject>
		constexpr auto AmmorKey = 0x558; // FName
		constexpr auto OnHoverStateEventDispatcher = 0x560; // FMulticastInlineDelegate
		constexpr auto OnRightClickEventDispatcher = 0x570; // FMulticastInlineDelegate
		constexpr auto SaveKey = 0x580; // FKey
		constexpr auto ClickNum = 0x598; // int32_t
		constexpr auto RandomPerk = 0x59c; // bool
	}

	namespace n_ABravoHotelHeartBeatSensor {
		constexpr auto HeartBeatSensorLength = 0x1bf4; // float
		constexpr auto TimerHandle_OnStartEffectEvent = 0x1bf8; // FTimerHandle
		constexpr auto DetectedCharacters = 0x1c00; // TArray<ABravoHotelCharacter*>
	}

	namespace n_UBravoHotelIconImageWidget {
		constexpr auto Image_133 = 0x248; // UImage*
		constexpr auto Icon = 0x250; // UImage*
		constexpr auto Bg = 0x258; // UImage*
		constexpr auto Overlay_36 = 0x260; // UOverlay*
		constexpr auto NewAnimation = 0x268; // UWidgetAnimation*
	}

	namespace n_UUW-BlackMarket_Slot_Ammo_C {
		constexpr auto UberGraphFrame = 0x3d8; // FPointerToUberGraphFrame
		constexpr auto BTN-Menu02 = 0x3e0; // UButton*
		constexpr auto BTN-Menu03 = 0x3e8; // UButton*
		constexpr auto BTN-Menu04 = 0x3f0; // UButton*
		constexpr auto BTN-Menu05 = 0x3f8; // UButton*
		constexpr auto CP-SlotInfo = 0x400; // UCanvasPanel*
		constexpr auto IMG-BG = 0x408; // UImage*
		constexpr auto IMG-BG-Border = 0x410; // UImage*
		constexpr auto IMG-Item = 0x418; // UImage*
		constexpr auto IMG-Mask = 0x420; // UImage*
		constexpr auto IMG-Over = 0x428; // UImage*
		constexpr auto IMG-Over-Border = 0x430; // UImage*
		constexpr auto Menu02 = 0x438; // UOverlay*
		constexpr auto Menu03 = 0x440; // UOverlay*
		constexpr auto Menu04 = 0x448; // UOverlay*
		constexpr auto Menu05 = 0x450; // UOverlay*
		constexpr auto Overlay_Mask = 0x458; // UOverlay*
		constexpr auto TXT-Count = 0x460; // UTextBlock*
		constexpr auto TXT-ItemName = 0x468; // UTextBlock*
		constexpr auto TXT-Menu01 = 0x470; // UTextBlock*
		constexpr auto TXT-Menu02 = 0x478; // UTextBlock*
		constexpr auto TXT-Menu03 = 0x480; // UTextBlock*
		constexpr auto TXT-Menu04 = 0x488; // UTextBlock*
		constexpr auto TXT-Menu05 = 0x490; // UTextBlock*
		constexpr auto TXT-TotalWeight = 0x498; // UTextBlock*
		constexpr auto TXT-Weight = 0x4a0; // UTextBlock*
	}

	namespace n_ASpotLight {
		constexpr auto SpotLightComponent = 0x328; // USpotLightComponent*
	}

	namespace n_UNiagaraComponentPool {
		constexpr auto WorldParticleSystemPools = 0x28; // TMap<UNiagaraSystem*, FNCPool>
	}

	namespace n_UBravoHotelInventoryPerkWidget {
		constexpr auto PlayerCharacter = 0x248; // ABravoHotelCharacter*
		constexpr auto UltimatePerkInfo = 0x250; // FPerkUIInfo
		constexpr auto LastHoverWidget = 0x280; // UWidget*
		constexpr auto OverlayUltimate = 0x288; // UWidget*
		constexpr auto VerticalBoxHealth = 0x290; // UWidget*
		constexpr auto VerticalBoxPower = 0x298; // UWidget*
		constexpr auto VerticalBoxSpeed = 0x2a0; // UWidget*
		constexpr auto Over_CoolTime = 0x2a8; // UOverlay*
		constexpr auto T_CoolTime = 0x2b0; // UTextBlock*
		constexpr auto IMG_CoolTime = 0x2b8; // UImage*
		constexpr auto Img_Active = 0x2c0; // UImage*
		constexpr auto IMG_CanActive = 0x2c8; // UImage*
		constexpr auto T_RemainCount = 0x2d8; // UTextBlock*
		constexpr auto bCanChangePerkDeck = 0x2e0; // bool
	}

	namespace n_UMaterialInstanceConstant {
		constexpr auto PhysMaterialMask = 0x408; // UPhysicalMaterialMask*
	}

	namespace n_ABravoHotelPlayerHUD {
		constexpr auto CrosshairMgr = 0x420; // UBravoHotelCrosshairManager*
		constexpr auto LastTargetPawn = 0x428; // ABravoHotelCharacter*
		constexpr auto PlayerInfos = 0x430; // TArray<ABravoHotelPlayerState*>
		constexpr auto BattleRoyaleGameState = 0x440; // ABattleRoyaleGameState*
		constexpr auto BravoHotelGameState = 0x448; // ABravoHotelGameState*
		constexpr auto OnChangedPlayerInfosDelegate = 0x458; // FMulticastInlineDelegate
		constexpr auto CurrentSkillRadius = 0x474; // float
		constexpr auto bReplayOptionFireDirection = 0x478; // bool
		constexpr auto bReplayOptionHitted = 0x479; // bool
		constexpr auto bReplayOptionDeathPosition = 0x47a; // bool
		constexpr auto bReplayOptionPersonalSupplyBox = 0x47b; // bool
		constexpr auto bReplayOptionTransportDropBox = 0x47c; // bool
		constexpr auto OnToggleWidgetDelegate = 0x480; // FMulticastInlineDelegate
		constexpr auto FireModeSound = 0x498; // UAkAudioEvent*
		constexpr auto PlayerKillSound = 0x4a0; // UAkAudioEvent*
		constexpr auto PlayerDuoKillSound = 0x4a8; // UAkAudioEvent*
		constexpr auto LastPlayerInSquardKillSound = 0x4b0; // UAkAudioEvent*
		constexpr auto LastPlayerInDuoKillSound = 0x4b8; // UAkAudioEvent*
		constexpr auto PlayerAssistSound = 0x4c0; // UAkAudioEvent*
		constexpr auto PlayerDiedSound = 0x4c8; // UAkAudioEvent*
		constexpr auto bShowSkillCursorWidget = 0x4d0; // bool
		constexpr auto RequestResuscitationEvent = 0x4d8; // UAkAudioEvent*
		constexpr auto InventoryWidgetClass = 0x4e0; // UUserWidget*
		constexpr auto InventoryWidget = 0x4e8; // UUserWidget*
		constexpr auto SoftInventoryInfoWidgetClass = 0x4f0; // TSoftClassPtr<UObject>
		constexpr auto InventoryWidget_Ori = 0x518; // UUserWidget*
		constexpr auto InventoryWidget_Web = 0x520; // UUserWidget*
		constexpr auto BravoHotelMainWidget = 0x528; // UBravoHotelMainWidget*
		constexpr auto SoftMainWidgetClass = 0x530; // TSoftClassPtr<UObject>
		constexpr auto CustomMatchWidget = 0x558; // UUserWidget*
		constexpr auto MainWidgetEx = 0x560; // UUserWidget*
		constexpr auto MainWidgetExClass = 0x568; // UUserWidget*
		constexpr auto SoftMainWidgetExClass = 0x570; // TSoftClassPtr<UObject>
		constexpr auto SpectatorWidget = 0x598; // UUserWidget*
		constexpr auto SpectatorWidgetClass = 0x5a0; // UUserWidget*
		constexpr auto SoftSpectatorWidgetClass = 0x5a8; // TSoftClassPtr<UObject>
		constexpr auto ReplayWidget = 0x5d0; // UUserWidget*
		constexpr auto ReplayWidgetClass = 0x5d8; // UUserWidget*
		constexpr auto SoftReplayWidgetClass = 0x5e0; // TSoftClassPtr<UObject>
		constexpr auto WorldMapWidget = 0x608; // UUserWidget*
		constexpr auto WorldMapWidgetClass = 0x610; // UUserWidget*
		constexpr auto SoftWorldMapWidgetClass = 0x618; // TSoftClassPtr<UObject>
		constexpr auto SkillMapWidget = 0x640; // UUserWidget*
		constexpr auto SkillMapWidgetClass = 0x648; // UUserWidget*
		constexpr auto SoftSkillMapWidgetClass = 0x650; // TSoftClassPtr<UObject>
		constexpr auto BlackMarketWidget = 0x678; // UUserWidget*
		constexpr auto MatchEndWidget = 0x680; // UUserWidget*
		constexpr auto MatchEndWidgetClass = 0x688; // UUserWidget*
		constexpr auto SoftMatchEndWidgetClass = 0x690; // TSoftClassPtr<UObject>
		constexpr auto bEnableWorldmap = 0x700; // bool
		constexpr auto bEnableMinimap = 0x701; // bool
		constexpr auto SoftTestWidgetClass = 0x708; // TSoftClassPtr<UObject>
		constexpr auto SoftWorldTeleportWidgetClass = 0x730; // TSoftClassPtr<UObject>
		constexpr auto SoftReplayZoneClass = 0x758; // TSoftClassPtr<UObject>
		constexpr auto SoftItemSpawnDebugWidgetClass = 0x780; // TSoftClassPtr<UObject>
		constexpr auto SoftItemSpawnRateWidgetClass = 0x7a8; // TSoftClassPtr<UObject>
		constexpr auto TestWidget = 0x7d0; // UUserWidget*
		constexpr auto SoftCustomMatchWidgetClass = 0x7d8; // TSoftClassPtr<UObject>
		constexpr auto CinematicWidget = 0x800; // UUserWidget*
		constexpr auto CinematicWidgetClass = 0x808; // TSoftClassPtr<UObject>
		constexpr auto MediaPlayerWidget = 0x830; // UUserWidget*
		constexpr auto MediaPlayerWidgetClass = 0x838; // TSoftClassPtr<UObject>
	}

	namespace n_UUW-ScenarioWidget_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Ani_TutorialComplete_FadeOut = 0x250; // UWidgetAnimation*
		constexpr auto Ani_TutorialComplete = 0x258; // UWidgetAnimation*
		constexpr auto Idle = 0x260; // UWidgetAnimation*
		constexpr auto CanvasPanel_1 = 0x268; // UCanvasPanel*
		constexpr auto UW-ScenarioQuest = 0x270; // UUW-ScenarioQuest_C*
	}

	namespace n_UAISense_Prediction {
		constexpr auto RegisteredEvents = 0x80; // TArray<FAIPredictionEvent>
	}

	namespace n_UAnimNotifyState_TimedNiagaraEffect {
		constexpr auto Template = 0x30; // UNiagaraSystem*
		constexpr auto SocketName = 0x38; // FName
		constexpr auto LocationOffset = 0x40; // FVector
		constexpr auto RotationOffset = 0x4c; // FRotator
		constexpr auto bDestroyAtEnd = 0x58; // bool
	}

	namespace n_ABravoHotelInventoryCharacter {
		constexpr auto MutableComponent = 0x318; // UCustomizableSkeletalComponent*
		constexpr auto InventoryCharacterMesh = 0x320; // USkeletalMeshComponent*
		constexpr auto BackgroundWidgetComponent = 0x328; // UWidgetComponent*
		constexpr auto PostProcessComponet = 0x330; // UPostProcessComponent*
		constexpr auto LightsRootComponent = 0x338; // USceneComponent*
		constexpr auto SpotLight = 0x340; // USpotLightComponent*
		constexpr auto OwnCharacter = 0x348; // ABravoHotelCharacter*
		constexpr auto BodyBaseSkeletalMesh = 0x350; // USkeletalMesh*
		constexpr auto PendingReleaseMutableMesh = 0x358; // TArray<USkeletalMesh*>
		constexpr auto LocationOffset = 0x368; // FVector
		constexpr auto DefaultMeshScale = 0x374; // FVector
		constexpr auto ScreenPosition = 0x380; // FVector2D
		constexpr auto CharacterFOV = 0x388; // float
		constexpr auto MoveScaleModify = 0x38c; // float
		constexpr auto RotationInterpSpeed = 0x390; // float
		constexpr auto DragWidgetClass = 0x398; // UUserWidget*
		constexpr auto DragWidget = 0x3a0; // UUserWidget*
		constexpr auto PreviewWeapons = 0x3a8; // TArray<ABravoHotelWeaponBase*>
	}

	namespace n_ULeaderboardFlushCallbackProxy {
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_AAkSpotReflector {
		constexpr auto EarlyReflectionAuxBus = 0x318; // UAkAuxBus*
		constexpr auto EarlyReflectionAuxBusName = 0x320; // FString
		constexpr auto AcousticTexture = 0x330; // UAkAcousticTexture*
		constexpr auto DistanceScalingFactor = 0x338; // float
		constexpr auto Level = 0x33c; // float
	}

	namespace n_ULowEntryLatentActionBoolean {
		constexpr auto Finished = 0x28; // bool
		constexpr auto Result = 0x29; // bool
		constexpr auto KeepAliveCount = 0x2c; // int32_t
	}

	namespace n_UParticleModuleSpawnPerUnit {
		constexpr auto UnitScalar = 0x38; // float
		constexpr auto MovementTolerance = 0x3c; // float
		constexpr auto SpawnPerUnit = 0x40; // FRawDistributionFloat
		constexpr auto MaxFrameDistance = 0x70; // float
		constexpr auto bIgnoreSpawnRateWhenMoving = 0x74; // char : 1
		constexpr auto bIgnoreMovementAlongX = 0x74; // char : 1
		constexpr auto bIgnoreMovementAlongY = 0x74; // char : 1
		constexpr auto bIgnoreMovementAlongZ = 0x74; // char : 1
	}

	namespace n_UInterpTrackAkAudioEvent {
		constexpr auto Events = 0x90; // TArray<FAkAudioEventTrackKey>
		constexpr auto bContinueEventOnMatineeEnd = 0xa0; // char : 1
	}

	namespace n_UMutableMaskOutCache {
		constexpr auto Materials = 0x28; // TMap<FString, FString>
		constexpr auto Textures = 0x78; // TMap<FString, FMaskOutTexture>
	}

	namespace n_UMaterialExpressionSign {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UUW-ItemRecipeTreeSlot_C {
		constexpr auto UberGraphFrame = 0x1358; // FPointerToUberGraphFrame
		constexpr auto Complete_ani = 0x1360; // UWidgetAnimation*
		constexpr auto Searching_ani = 0x1368; // UWidgetAnimation*
		constexpr auto Blank_SkillBG = 0x1370; // UImage*
		constexpr auto Border_507 = 0x1378; // UBorder*
		constexpr auto Button_332 = 0x1380; // UButton*
		constexpr auto Get_SkillBG = 0x1388; // UImage*
		constexpr auto Get_SkillBG_lv5 = 0x1390; // UImage*
		constexpr auto Get_SkillBG_lv6 = 0x1398; // UImage*
		constexpr auto Get_SkillBG_lv7 = 0x13a0; // UImage*
		constexpr auto HorizontalBox_Rarity = 0x13a8; // UHorizontalBox*
		constexpr auto Image = 0x13b0; // UImage*
		constexpr auto Image_2 = 0x13b8; // UImage*
		constexpr auto Image_3 = 0x13c0; // UImage*
		constexpr auto Image_4 = 0x13c8; // UImage*
		constexpr auto Image_5 = 0x13d0; // UImage*
		constexpr auto Image_6 = 0x13d8; // UImage*
		constexpr auto Image_7 = 0x13e0; // UImage*
		constexpr auto Image_8 = 0x13e8; // UImage*
		constexpr auto Image_9 = 0x13f0; // UImage*
		constexpr auto Image_10 = 0x13f8; // UImage*
		constexpr auto Image_12 = 0x1400; // UImage*
		constexpr auto Image_16 = 0x1408; // UImage*
		constexpr auto Image_332 = 0x1410; // UImage*
		constexpr auto Image_689 = 0x1418; // UImage*
		constexpr auto Image_690 = 0x1420; // UImage*
		constexpr auto Image_Full = 0x1428; // UImage*
		constexpr auto Image_Have = 0x1430; // UImage*
		constexpr auto Img_Active = 0x1438; // UImage*
		constexpr auto IMG_Complete = 0x1440; // UImage*
		constexpr auto IMG_ItemIcon = 0x1448; // UImage*
		constexpr auto MouseHover_2 = 0x1450; // USizeBox*
		constexpr auto MouseHover_ = 0x1458; // USizeBox*
		constexpr auto MousePress_2 = 0x1460; // USizeBox*
		constexpr auto MousePress_ = 0x1468; // USizeBox*
		constexpr auto MyWeapon = 0x1470; // UImage*
		constexpr auto Searching = 0x1478; // UOverlay*
		constexpr auto Searching_ = 0x1480; // USizeBox*
		constexpr auto SizeBox_1 = 0x1488; // USizeBox*
		constexpr auto SizeBox_8 = 0x1490; // USizeBox*
		constexpr auto T_PerkName = 0x1498; // UTextBlock*
		constexpr auto T_PerkName_2 = 0x14a0; // UTextBlock*
		constexpr auto T_PerkName_3 = 0x14a8; // UTextBlock*
		constexpr auto T_PerkName_4 = 0x14b0; // UTextBlock*
		constexpr auto VerticalBox_1 = 0x14b8; // UVerticalBox*
		constexpr auto HoverWidget = 0x14c0; // UUW-Inventory_ItemSlotHover_C*
		constexpr auto Selected = 0x14c8; // bool
		constexpr auto SelectItem = 0x14cc; // FSelecteSearchMaterialItemInfo
		constexpr auto NewVar_1 = 0x14e0; // UMaterialInstanceDynamic*
		constexpr auto EnableSearch = 0x14e8; // bool
		constexpr auto TempData = 0x14ec; // FSelecteSearchMaterialItemInfo
		constexpr auto IsComplete = 0x14fc; // bool
	}

	namespace n_UReplicationGraphNode_AlwaysRelevant {
		constexpr auto ChildNode = 0x50; // UReplicationGraphNode*
	}

	namespace n_UMK3DTargetcamComponent {
		constexpr auto OnMK3DTargetcamCompleteEvent = 0xb0; // FMulticastInlineDelegate
		constexpr auto MK3DTargetEvents = 0xd8; // TArray<FMK3DHighlightTargetEvent>
	}

	namespace n_UFSM_SetStateID_Async {
		constexpr auto Target = 0x30; // UStateMachineComponent*
		constexpr auto StateID = 0x38; // char
		constexpr auto Timer = 0x3c; // float
		constexpr auto Repeat = 0x40; // bool
		constexpr auto TimerHandle = 0x48; // FTimerHandle
		constexpr auto OnSuccess = 0x50; // FMulticastInlineDelegate
		constexpr auto OnAborted = 0x60; // FMulticastInlineDelegate
	}

	namespace n_UARSaveWorldAsyncTaskBlueprintProxy {
		constexpr auto OnSuccess = 0x50; // FMulticastInlineDelegate
		constexpr auto OnFailed = 0x60; // FMulticastInlineDelegate
	}

	namespace n_UBP-LadderComponent_C {
		constexpr auto UberGraphFrame = 0x210; // FPointerToUberGraphFrame
		constexpr auto NeedToChangeHand = 0x218; // bool
		constexpr auto CrntAxisValue = 0x21c; // float
		constexpr auto GoalLocationZ = 0x220; // float
		constexpr auto NeedMoveOnLadder = 0x224; // bool
		constexpr auto MotionMinAlpha = 0x228; // float
		constexpr auto CanStopMotion = 0x22c; // bool
		constexpr auto DirectSnapLocZ = 0x230; // float
		constexpr auto DeltaSecond = 0x234; // float
		constexpr auto LastSecond = 0x238; // float
		constexpr auto AdditionalStepCount = 0x23c; // int32_t
	}

	namespace n_UBravoHotelPlayerInfoProgressSlotWidget {
		constexpr auto SizeBox_main = 0x248; // USizeBox*
		constexpr auto Image_bg = 0x250; // UImage*
		constexpr auto MainProgressBar = 0x258; // UProgressBar*
		constexpr auto CureLimitProgressBar = 0x260; // UProgressBar*
		constexpr auto TargetProgressBar = 0x268; // UProgressBar*
		constexpr auto BeforeProgressBar = 0x270; // UProgressBar*
		constexpr auto ShortTimeProgressBar = 0x278; // UProgressBar*
		constexpr auto DangerHp = 0x280; // UWidgetAnimation*
		constexpr auto Anim_Increase = 0x288; // UWidgetAnimation*
		constexpr auto Anim_AdditionalHP = 0x290; // UWidgetAnimation*
		constexpr auto DefaultSlotSprite = 0x298; // UObject*
		constexpr auto FirstSlotSprite = 0x2a0; // UObject*
		constexpr auto LastSlotSprite = 0x2a8; // UObject*
		constexpr auto MaxHealth = 0x2b0; // int32_t
		constexpr auto bIsKnockOutMode = 0x2b4; // bool
	}

	namespace n_URSMSubsystem {
		constexpr auto MachineStack = 0x30; // TArray<UReactiveStateMachine*>
	}

	namespace n_UMovieScenePrimitiveMaterialTrack {
		constexpr auto MaterialIndex = 0x88; // int32_t
	}

	namespace n_ABravoHotelLobbyPlayerController {
		constexpr auto CurrentLobbyPawnIndex = 0x720; // int32_t
		constexpr auto ParachuteActor = 0x728; // ABravoHotelOutGameParachuteActor*
	}

	namespace n_UTcpMessagingSettings {
		constexpr auto EnableTransport = 0x28; // bool
		constexpr auto ListenEndpoint = 0x30; // FString
		constexpr auto ConnectToEndpoints = 0x40; // TArray<FString>
		constexpr auto ConnectionRetryDelay = 0x50; // int32_t
		constexpr auto bStopServiceWhenAppDeactivates = 0x54; // bool
	}

	namespace n_UBravoHotelSeason {
		constexpr auto OnSeasonChangedSubTabDelegate = 0x30; // FMulticastInlineDelegate
	}

	namespace n_UWidgetAnimationDelegateBinding {
		constexpr auto WidgetAnimationDelegateBindings = 0x28; // TArray<FBlueprintWidgetAnimationDelegateBinding>
	}

	namespace n_UMaterialExpressionMin {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_UAnimCompress_PerTrackCompression {
		constexpr auto MaxZeroingThreshold = 0x60; // float
		constexpr auto MaxPosDiffBitwise = 0x64; // float
		constexpr auto MaxAngleDiffBitwise = 0x68; // float
		constexpr auto MaxScaleDiffBitwise = 0x6c; // float
		constexpr auto AllowedRotationFormats = 0x70; // TArray<AnimationCompressionFormat>
		constexpr auto AllowedTranslationFormats = 0x80; // TArray<AnimationCompressionFormat>
		constexpr auto AllowedScaleFormats = 0x90; // TArray<AnimationCompressionFormat>
		constexpr auto bResampleAnimation = 0xa0; // char : 1
		constexpr auto ResampledFramerate = 0xa4; // float
		constexpr auto MinKeysForResampling = 0xa8; // int32_t
		constexpr auto bUseAdaptiveError = 0xac; // char : 1
		constexpr auto bUseOverrideForEndEffectors = 0xac; // char : 1
		constexpr auto TrackHeightBias = 0xb0; // int32_t
		constexpr auto ParentingDivisor = 0xb4; // float
		constexpr auto ParentingDivisorExponent = 0xb8; // float
		constexpr auto bUseAdaptiveError2 = 0xbc; // char : 1
		constexpr auto RotationErrorSourceRatio = 0xc0; // float
		constexpr auto TranslationErrorSourceRatio = 0xc4; // float
		constexpr auto ScaleErrorSourceRatio = 0xc8; // float
		constexpr auto MaxErrorPerTrackRatio = 0xcc; // float
		constexpr auto PerturbationProbeSize = 0xd0; // float
	}

	namespace n_UMaterialExpressionDistanceFieldGradient {
		constexpr auto Position = 0x40; // FExpressionInput
	}

	namespace n_ABP-TransportDropBox_C {
		constexpr auto UberGraphFrame = 0x4a8; // FPointerToUberGraphFrame
		constexpr auto OverWater_CV_OverWater_77012AB948B572A268E63583418444D0 = 0x4b0; // float
		constexpr auto OverWater__Direction_77012AB948B572A268E63583418444D0 = 0x4b4; // ETimelineDirection
		constexpr auto OverWater = 0x4b8; // UTimelineComponent*
		constexpr auto HittingWater_CV_OverWater_7E5F9D2E4D0DDDC70F2F67AD035A6212 = 0x4c0; // float
		constexpr auto HittingWater__Direction_7E5F9D2E4D0DDDC70F2F67AD035A6212 = 0x4c4; // ETimelineDirection
		constexpr auto HittingWater = 0x4c8; // UTimelineComponent*
		constexpr auto LandingTimer = 0x4d0; // float
		constexpr auto ItemResult = 0x4d8; // TArray<FSpawnItemResult>
		constexpr auto ParachuteTimer = 0x4e8; // float
		constexpr auto LandingDelay = 0x4ec; // float
		constexpr auto ForceLandingDelaySeconds = 0x4f0; // float
		constexpr auto bLandedOnGround = 0x4f4; // bool
	}

	namespace n_UARCandidateObject {
		constexpr auto CandidateObjectData = 0x30; // TArray<char>
		constexpr auto FriendlyName = 0x40; // FString
		constexpr auto BoundingBox = 0x50; // FBox
	}

	namespace n_UBravoHotelGameMatchEndWidget {
		constexpr auto CurrentGameResultWidgetMode = 0x250; // EGameResultWidgetMode
		constexpr auto bIsShowingSimpleResult = 0x251; // bool
		constexpr auto TimerHandle_ShowSimpleResult = 0x258; // FTimerHandle
		constexpr auto SimpleResultData = 0x270; // FMatchEndSimpleResult
		constexpr auto bIsShowingFinalResult = 0x380; // bool
		constexpr auto FinalResultData = 0x381; // FMatchEndFinalResult
		constexpr auto TimerHandle_ShowFinalResult = 0x388; // FTimerHandle
		constexpr auto bIsShowingMatchEndAnimation = 0x3a0; // bool
		constexpr auto TimerHandle_ShowMatchEndAnimation = 0x3a8; // FTimerHandle
		constexpr auto MatchEndAnimationData = 0x3c0; // FMatchEndAnimation
	}

	namespace n_USoundfieldSubmix {
		constexpr auto SoundfieldEncodingFormat = 0x40; // FName
		constexpr auto EncodingSettings = 0x48; // USoundfieldEncodingSettingsBase*
		constexpr auto SoundfieldEffectChain = 0x50; // TArray<USoundfieldEffectBase*>
		constexpr auto EncodingSettingsClass = 0x60; // USoundfieldEncodingSettingsBase*
	}

	namespace n_UMaterialExpressionSetMaterialAttributes {
		constexpr auto Inputs = 0x40; // TArray<FExpressionInput>
		constexpr auto AttributeSetTypes = 0x50; // TArray<FGuid>
	}

	namespace n_UComboBoxWidgetStyle {
		constexpr auto ComboBoxStyle = 0x30; // FComboBoxStyle
	}

	namespace n_ACustomizableSkeletalMeshActor {
		constexpr auto CustomizableSkeletalComponent = 0x3a0; // UCustomizableSkeletalComponent*
	}

	namespace n_ABravoHotelTeamPlayerStart {
		constexpr auto SpawnLocationBoxComponent = 0x348; // UBoxComponent*
		constexpr auto CharacterHalfHeight = 0x350; // float
		constexpr auto bUseAreaSystem = 0x354; // bool
		constexpr auto AreaName = 0x360; // FString
		constexpr auto MaxPlayerCountInArea = 0x380; // int32_t
		constexpr auto PlayerStartName = 0x388; // FString
		constexpr auto MaxPlayerCount = 0x398; // int32_t
		constexpr auto bUseSpawnBound = 0x39c; // bool
		constexpr auto SpawnBoundScale = 0x3a0; // float
		constexpr auto AreaWeight = 0x3a4; // int32_t
	}

	namespace n_UBlueprintGeneratedClass {
		constexpr auto NumReplicatedProperties = 0x2d0; // int32_t
		constexpr auto bHasNativizedParent = 0x2d4; // char : 1
		constexpr auto bHasCookedComponentInstancingData = 0x2d4; // char : 1
		constexpr auto DynamicBindingObjects = 0x2d8; // TArray<UDynamicBlueprintBinding*>
		constexpr auto ComponentTemplates = 0x2e8; // TArray<UActorComponent*>
		constexpr auto Timelines = 0x2f8; // TArray<UTimelineTemplate*>
		constexpr auto ComponentClassOverrides = 0x308; // TArray<FBPComponentClassOverride>
		constexpr auto SimpleConstructionScript = 0x318; // USimpleConstructionScript*
		constexpr auto InheritableComponentHandler = 0x320; // UInheritableComponentHandler*
		constexpr auto UberGraphFramePointerProperty = 0x328; // UStructProperty*
		constexpr auto UberGraphFunction = 0x338; // UFunction*
		constexpr auto CookedComponentInstancingData = 0x340; // TMap<FName, FBlueprintCookedComponentInstancingData>
	}

	namespace n_UDatasmithImportOptions {
		constexpr auto SearchPackagePolicy = 0x28; // EDatasmithImportSearchPackagePolicy
		constexpr auto MaterialConflictPolicy = 0x29; // EDatasmithImportAssetConflictPolicy
		constexpr auto TextureConflictPolicy = 0x2a; // EDatasmithImportAssetConflictPolicy
		constexpr auto StaticMeshActorImportPolicy = 0x2b; // EDatasmithImportActorPolicy
		constexpr auto LightImportPolicy = 0x2c; // EDatasmithImportActorPolicy
		constexpr auto CameraImportPolicy = 0x2d; // EDatasmithImportActorPolicy
		constexpr auto OtherActorImportPolicy = 0x2e; // EDatasmithImportActorPolicy
		constexpr auto MaterialQuality = 0x2f; // EDatasmithImportMaterialQuality
		constexpr auto BaseOptions = 0x34; // FDatasmithImportBaseOptions
		constexpr auto ReimportOptions = 0x48; // FDatasmithReimportOptions
		constexpr auto Filename = 0x50; // FString
		constexpr auto FilePath = 0x60; // FString
	}

	namespace n_UUW-VoiceTalk_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Image = 0x250; // UImage*
		constexpr auto ScrollBox_99 = 0x258; // UScrollBox*
		constexpr auto UW-VoiceTalkSlot = 0x260; // UUW-VoiceTalkSlot_C*
		constexpr auto UW-VoiceTalkSlot_135 = 0x268; // UUW-VoiceTalkSlot_C*
		constexpr auto UW-VoiceTalkSlot_196 = 0x270; // UUW-VoiceTalkSlot_C*
		constexpr auto TempTeamPlayers = 0x278; // TArray<ABravoHotelPlayerState*>
	}

	namespace n_ABravoHotelSkillTargetingBase {
		constexpr auto MissileLineParticle = 0x318; // UParticleSystemComponent*
		constexpr auto MissileParticle = 0x320; // UParticleSystemComponent*
		constexpr auto TargetDecal = 0x328; // UDecalComponent*
		constexpr auto TargetRadius = 0x330; // float
	}

	namespace n_UMaterialExpressionRuntimeVirtualTextureSampleParameter {
		constexpr auto ParameterName = 0x90; // FName
		constexpr auto ExpressionGUID = 0x98; // FGuid
		constexpr auto Group = 0xa8; // FName
	}

	namespace n_UCustomizableObjectImageProviderArray {
		constexpr auto Textures = 0x28; // TArray<UTexture2D*>
	}

	namespace n_UPlanarReflectionComponent {
		constexpr auto PreviewBox = 0x2c8; // UBoxComponent*
		constexpr auto NormalDistortionStrength = 0x2d0; // float
		constexpr auto PrefilterRoughness = 0x2d4; // float
		constexpr auto PrefilterRoughnessDistance = 0x2d8; // float
		constexpr auto ScreenPercentage = 0x2dc; // int32_t
		constexpr auto ExtraFOV = 0x2e0; // float
		constexpr auto DistanceFromPlaneFadeStart = 0x2e4; // float
		constexpr auto DistanceFromPlaneFadeEnd = 0x2e8; // float
		constexpr auto DistanceFromPlaneFadeoutStart = 0x2ec; // float
		constexpr auto DistanceFromPlaneFadeoutEnd = 0x2f0; // float
		constexpr auto AngleFromPlaneFadeStart = 0x2f4; // float
		constexpr auto AngleFromPlaneFadeEnd = 0x2f8; // float
		constexpr auto bShowPreviewPlane = 0x2fc; // bool
		constexpr auto bRenderSceneTwoSided = 0x2fd; // bool
	}

	namespace n_UMovieSceneEnumSection {
		constexpr auto EnumCurve = 0xe0; // FMovieSceneByteChannel
	}

	namespace n_UParkourWindowComponent {
		constexpr auto ClimbOverDatas = 0x230; // TArray<FClimbData>
		constexpr auto ClimbUpDatas = 0x240; // TArray<FClimbData>
		constexpr auto SprintOverDatas = 0x250; // TArray<FClimbData>
		constexpr auto SprintUpDatas = 0x260; // TArray<FClimbData>
		constexpr auto GroundingDatas = 0x270; // TArray<FClimbData>
	}

	namespace n_UUW-GameBuffSlot_C {
		constexpr auto Image_1294 = 0x2f8; // UImage*
	}

	namespace n_UWBP_SPS_SelectionMenu_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Canvas = 0x250; // UCanvasPanel*
		constexpr auto CenterCursor = 0x258; // UImage*
		constexpr auto DisplayText = 0x260; // UTextBlock*
		constexpr auto Image = 0x268; // UImage*
		constexpr auto Image_2 = 0x270; // UImage*
		constexpr auto Image_3 = 0x278; // UImage*
		constexpr auto Image_4 = 0x280; // UImage*
		constexpr auto Image_5 = 0x288; // UImage*
		constexpr auto Image_6 = 0x290; // UImage*
		constexpr auto Image_7 = 0x298; // UImage*
		constexpr auto Image_274 = 0x2a0; // UImage*
		constexpr auto Message0 = 0x2a8; // UTextBlock*
		constexpr auto Message2 = 0x2b0; // UTextBlock*
		constexpr auto Message3 = 0x2b8; // UTextBlock*
		constexpr auto Message3_1 = 0x2c0; // UTextBlock*
		constexpr auto Message3_2 = 0x2c8; // UTextBlock*
		constexpr auto Message3_3 = 0x2d0; // UTextBlock*
		constexpr auto Message3_4 = 0x2d8; // UTextBlock*
		constexpr auto Message3_5 = 0x2e0; // UTextBlock*
		constexpr auto Message3_6 = 0x2e8; // UTextBlock*
		constexpr auto Message3_7 = 0x2f0; // UTextBlock*
		constexpr auto Message3_8 = 0x2f8; // UTextBlock*
		constexpr auto Message4 = 0x300; // UTextBlock*
		constexpr auto Message5 = 0x308; // UTextBlock*
		constexpr auto Message6 = 0x310; // UTextBlock*
		constexpr auto Message7 = 0x318; // UTextBlock*
		constexpr auto Messgae1 = 0x320; // UTextBlock*
		constexpr auto Over1 = 0x328; // UImage*
		constexpr auto Over2 = 0x330; // UImage*
		constexpr auto Over3 = 0x338; // UImage*
		constexpr auto Over4 = 0x340; // UImage*
		constexpr auto Over5 = 0x348; // UImage*
		constexpr auto Over6 = 0x350; // UImage*
		constexpr auto Over7 = 0x358; // UImage*
		constexpr auto Over8 = 0x360; // UImage*
		constexpr auto Slot0 = 0x368; // UWBP_SPS_SelectionIcon_C*
		constexpr auto Slot1 = 0x370; // UWBP_SPS_SelectionIcon_C*
		constexpr auto Slot2 = 0x378; // UWBP_SPS_SelectionIcon_C*
		constexpr auto Slot3 = 0x380; // UWBP_SPS_SelectionIcon_C*
		constexpr auto Slot4 = 0x388; // UWBP_SPS_SelectionIcon_C*
		constexpr auto Slot5 = 0x390; // UWBP_SPS_SelectionIcon_C*
		constexpr auto Slot6 = 0x398; // UWBP_SPS_SelectionIcon_C*
		constexpr auto Slot7 = 0x3a0; // UWBP_SPS_SelectionIcon_C*
		constexpr auto Type = 0x3a8; // UTextBlock*
		constexpr auto UW-PlayerMarkerWidget = 0x3b0; // UUW-PlayerMarkerWidget_C*
		constexpr auto WidgetSwitcher_133 = 0x3b8; // UWidgetSwitcher*
		constexpr auto SelectionWidgets = 0x3c0; // TArray<UWBP_SPS_SelectionIcon_C*>
		constexpr auto MenuCenter = 0x3d0; // FVector2D
		constexpr auto ReferenceVector = 0x3d8; // FVector
		constexpr auto Selected = 0x3e8; // FMulticastInlineDelegate
		constexpr auto SmartPingComponent = 0x3f8; // USmartPingSystem_C*
		constexpr auto RadialMenuMaterial = 0x400; // UMaterialInstanceDynamic*
		constexpr auto SelectedIndex = 0x408; // int32_t
		constexpr auto StartIndex = 0x40c; // int32_t
		constexpr auto AngleSize = 0x410; // float
		constexpr auto DistanceFromCenter = 0x414; // float
		constexpr auto Divisions = 0x418; // int32_t
		constexpr auto SelectionToleranceFromCenter = 0x41c; // float
		constexpr auto Hovered = 0x420; // FMulticastInlineDelegate
		constexpr auto ClearPing = 0x430; // FMulticastInlineDelegate
		constexpr auto IsPingType = 0x440; // bool
		constexpr auto Enable RequestMessage = 0x441; // bool
	}

	namespace n_UInterpTrackEvent {
		constexpr auto EventTrack = 0x70; // TArray<FEventTrackKey>
		constexpr auto bFireEventsWhenForwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenJumpingForwards = 0x80; // char : 1
		constexpr auto bUseCustomEventName = 0x80; // char : 1
	}

	namespace n_UParticleModuleTypeDataMesh {
		constexpr auto Mesh = 0x30; // UStaticMesh*
		constexpr auto LODSizeScale = 0x40; // float
		constexpr auto bUseStaticMeshLODs = 0x44; // char : 1
		constexpr auto CastShadows = 0x44; // char : 1
		constexpr auto DoCollisions = 0x44; // char : 1
		constexpr auto MeshAlignment = 0x45; // EMeshScreenAlignment
		constexpr auto bOverrideMaterial = 0x46; // char : 1
		constexpr auto bOverrideDefaultMotionBlurSettings = 0x46; // char : 1
		constexpr auto bEnableMotionBlur = 0x46; // char : 1
		constexpr auto RollPitchYawRange = 0x48; // FRawDistributionVector
		constexpr auto AxisLockOption = 0x90; // EParticleAxisLock
		constexpr auto bCameraFacing = 0x91; // char : 1
		constexpr auto CameraFacingUpAxisOption = 0x92; // EMeshCameraFacingUpAxis
		constexpr auto CameraFacingOption = 0x93; // EMeshCameraFacingOptions
		constexpr auto bApplyParticleRotationAsSpin = 0x94; // char : 1
		constexpr auto bFaceCameraDirectionRatherThanPosition = 0x94; // char : 1
		constexpr auto bCollisionsConsiderPartilceSize = 0x94; // char : 1
	}

	namespace n_ULiveLinkCurveRemapSettings {
		constexpr auto CurveConversionSettings = 0x98; // FLiveLinkCurveConversionSettings
	}

	namespace n_ABravoHotelBuilding {
		constexpr auto ExteriorMaxDrawDistance = 0x318; // float
		constexpr auto InteriorMaxDrawDistance = 0x31c; // float
		constexpr auto ItemWorldSpawnTableIndex = 0x320; // int32_t
		constexpr auto ItemWorldSpawnInfo = 0x328; // FDataTableRowHandle
		constexpr auto SpawnBoxList = 0x338; // TArray<FTransform>
		constexpr auto SaveDetectingUserName = 0x348; // FName
		constexpr auto SpawnedItemList = 0x350; // TArray<ABravoHotelPickup*>
		constexpr auto LogItemData = 0x360; // FBuildingItemSpawnLog
		constexpr auto IgnorePersonalSpawnBox = 0x400; // bool
		constexpr auto EnableItemSpawn = 0x401; // bool
		constexpr auto AreaSpawnRateTableKey = 0x404; // FName
		constexpr auto AreaOverrideStandardGroupDatas = 0x410; // TMap<FName, FRandomSpawn>
		constexpr auto EnableUnImportantItemSpawn = 0x463; // bool
	}

	namespace n_AServerStatReplicator {
		constexpr auto bUpdateStatNet = 0x318; // bool
		constexpr auto bOverwriteClientStats = 0x319; // bool
		constexpr auto Channels = 0x31c; // uint32_t
		constexpr auto InRate = 0x320; // uint32_t
		constexpr auto OutRate = 0x324; // uint32_t
		constexpr auto MaxPacketOverhead = 0x32c; // uint32_t
		constexpr auto InRateClientMax = 0x330; // uint32_t
		constexpr auto InRateClientMin = 0x334; // uint32_t
		constexpr auto InRateClientAvg = 0x338; // uint32_t
		constexpr auto InPacketsClientMax = 0x33c; // uint32_t
		constexpr auto InPacketsClientMin = 0x340; // uint32_t
		constexpr auto InPacketsClientAvg = 0x344; // uint32_t
		constexpr auto OutRateClientMax = 0x348; // uint32_t
		constexpr auto OutRateClientMin = 0x34c; // uint32_t
		constexpr auto OutRateClientAvg = 0x350; // uint32_t
		constexpr auto OutPacketsClientMax = 0x354; // uint32_t
		constexpr auto OutPacketsClientMin = 0x358; // uint32_t
		constexpr auto OutPacketsClientAvg = 0x35c; // uint32_t
		constexpr auto NetNumClients = 0x360; // uint32_t
		constexpr auto InPackets = 0x364; // uint32_t
		constexpr auto OutPackets = 0x368; // uint32_t
		constexpr auto InBunches = 0x36c; // uint32_t
		constexpr auto OutBunches = 0x370; // uint32_t
		constexpr auto OutLoss = 0x374; // uint32_t
		constexpr auto InLoss = 0x378; // uint32_t
		constexpr auto VoiceBytesSent = 0x37c; // uint32_t
		constexpr auto VoiceBytesRecv = 0x380; // uint32_t
		constexpr auto VoicePacketsSent = 0x384; // uint32_t
		constexpr auto VoicePacketsRecv = 0x388; // uint32_t
		constexpr auto PercentInVoice = 0x38c; // uint32_t
		constexpr auto PercentOutVoice = 0x390; // uint32_t
		constexpr auto NumActorChannels = 0x394; // uint32_t
		constexpr auto NumConsideredActors = 0x398; // uint32_t
		constexpr auto PrioritizedActors = 0x39c; // uint32_t
		constexpr auto NumRelevantActors = 0x3a0; // uint32_t
		constexpr auto NumRelevantDeletedActors = 0x3a4; // uint32_t
		constexpr auto NumReplicatedActorAttempts = 0x3a8; // uint32_t
		constexpr auto NumReplicatedActors = 0x3ac; // uint32_t
		constexpr auto NumActors = 0x3b0; // uint32_t
		constexpr auto NumNetActors = 0x3b4; // uint32_t
		constexpr auto NumDormantActors = 0x3b8; // uint32_t
		constexpr auto NumInitiallyDormantActors = 0x3bc; // uint32_t
		constexpr auto NumNetGUIDsAckd = 0x3c0; // uint32_t
		constexpr auto NumNetGUIDsPending = 0x3c4; // uint32_t
		constexpr auto NumNetGUIDsUnAckd = 0x3c8; // uint32_t
		constexpr auto ObjPathBytes = 0x3cc; // uint32_t
		constexpr auto NetGUIDOutRate = 0x3d0; // uint32_t
		constexpr auto NetGUIDInRate = 0x3d4; // uint32_t
		constexpr auto NetSaturated = 0x3d8; // uint32_t
	}

	namespace n_UGizmoUniformScaleParameterSource {
		constexpr auto AxisSource = 0x48; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0x58; // TScriptInterface<IGizmoTransformSource>
		constexpr auto ScaleMultiplier = 0x68; // float
		constexpr auto Parameter = 0x6c; // FVector2D
		constexpr auto LastChange = 0x74; // FGizmoVec2ParameterChange
		constexpr auto CurScaleOrigin = 0x84; // FVector
		constexpr auto CurScaleNormal = 0x90; // FVector
		constexpr auto CurScaleAxisX = 0x9c; // FVector
		constexpr auto CurScaleAxisY = 0xa8; // FVector
		constexpr auto InitialTransform = 0xc0; // FTransform
	}

	namespace n_UOculusMR_State {
		constexpr auto TrackedCamera = 0x28; // FTrackedCamera
		constexpr auto TrackingReferenceComponent = 0x98; // USceneComponent*
		constexpr auto ScalingFactor = 0xa0; // double
		constexpr auto ChangeCameraStateRequested = 0xac; // bool
		constexpr auto BindToTrackedCameraIndexRequested = 0xad; // bool
	}

	namespace n_UFSM_FinishState_ConditionalAsyncWithCallbacks {
		constexpr auto Target = 0x30; // UStateMachineComponent*
		constexpr auto Conditional = 0x38; // FSM_Transition
		constexpr auto InBegin = 0x3c; // FDelegate
		constexpr auto InExit = 0x4c; // FDelegate
		constexpr auto InFallback = 0x5c; // FDelegate
		constexpr auto FallbackState = 0x6c; // FName
		constexpr auto Timer = 0x74; // float
		constexpr auto TimerHandle = 0x78; // FTimerHandle
		constexpr auto OnSuccess = 0x80; // FMulticastInlineDelegate
		constexpr auto OnAborted = 0x90; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionNoise {
		constexpr auto Position = 0x40; // FExpressionInput
		constexpr auto FilterWidth = 0x54; // FExpressionInput
		constexpr auto Scale = 0x68; // float
		constexpr auto Quality = 0x6c; // int32_t
		constexpr auto NoiseFunction = 0x70; // ENoiseFunction
		constexpr auto bTurbulence = 0x74; // char : 1
		constexpr auto Levels = 0x78; // int32_t
		constexpr auto OutputMin = 0x7c; // float
		constexpr auto OutputMax = 0x80; // float
		constexpr auto LevelScale = 0x84; // float
		constexpr auto bTiling = 0x88; // char : 1
		constexpr auto RepeatSize = 0x8c; // uint32_t
	}

	namespace n_UBTDecorator_IsAtLocation {
		constexpr auto AcceptableRadius = 0x90; // float
		constexpr auto ParametrizedAcceptableRadius = 0x98; // FAIDataProviderFloatValue
		constexpr auto GeometricDistanceType = 0xd0; // FAIDistanceType
		constexpr auto bUseParametrizedRadius = 0xd4; // char : 1
		constexpr auto bUseNavAgentGoalLocation = 0xd4; // char : 1
		constexpr auto bPathFindingBasedTest = 0xd4; // char : 1
	}

	namespace n_UAnimCompress_RemoveEverySecondKey {
		constexpr auto MinKeys = 0x40; // int32_t
		constexpr auto bStartAtSecondKey = 0x44; // char : 1
	}

	namespace n_UUW-Lobby_ArmoryMain_C {
		constexpr auto ShowAnim = 0x248; // UWidgetAnimation*
		constexpr auto UW-Lobby_Armory_Recipe = 0x250; // UUW-Lobby_Armory_Recipe_C*
		constexpr auto WidgetSwitcher_53 = 0x258; // UWidgetSwitcher*
		constexpr auto Gold = 0x260; // int32_t
		constexpr auto WeaponList = 0x268; // TArray<FResponse_Weapon_List_Data>
		constexpr auto MaterialList = 0x278; // TArray<FResponse_MaterialList_Data>
		constexpr auto ItemWeaponIDList = 0x288; // TArray<int32_t>
		constexpr auto LastItemWeaponIDList = 0x298; // TArray<int32_t>
		constexpr auto NewWeaponList = 0x2a8; // TArray<int32_t>
		constexpr auto MaterialIDList = 0x2b8; // TArray<int32_t>
		constexpr auto LastMaterialIDList = 0x2c8; // TArray<int32_t>
		constexpr auto NewMaterialList = 0x2d8; // TArray<int32_t>
		constexpr auto NewCraftIDList = 0x2e8; // TArray<FName>
		constexpr auto CraftWeaponInfo = 0x2f8; // FResponse_CraftWeapon_Data
		constexpr auto MainTabName = 0x3b8; // FString
		constexpr auto ArmoryTabName = 0x3c8; // FString
		constexpr auto bNeedCheckWeaponList = 0x3d8; // bool
		constexpr auto bNeedCheckMaterialList = 0x3d9; // bool
	}

	namespace n_UBrushBaseProperties {
		constexpr auto BrushSize = 0x50; // float
		constexpr auto bSpecifyRadius = 0x54; // bool
		constexpr auto BrushRadius = 0x58; // float
		constexpr auto BrushStrength = 0x5c; // float
		constexpr auto BrushFalloffAmount = 0x60; // float
		constexpr auto bShowStrength = 0x64; // bool
		constexpr auto bShowFalloff = 0x65; // bool
	}

	namespace n_ABravoHotelProjectileGrenadeMolotovCocktail {
		constexpr auto FireStartSound = 0x678; // UAkAudioEvent*
		constexpr auto FireEndSound = 0x680; // UAkAudioEvent*
		constexpr auto FireLoopSoundHandle = 0x688; // FAudioPlayingHandle
		constexpr auto TimeHandle_EndFirewallSound = 0x690; // FTimerHandle
		constexpr auto MolotovFireTrailParticle = 0x698; // UParticleSystemComponent*
		constexpr auto BoobyTrapEffect = 0x6a0; // UParticleSystemComponent*
		constexpr auto BoobyTrapTriggerEffect = 0x6a8; // UParticleSystem*
		constexpr auto BoobyTrapDestoryEffect = 0x6b0; // UParticleSystem*
		constexpr auto BoobyTrapLoopStartEvent = 0x6b8; // UAkAudioEvent*
		constexpr auto BoobyTrapLoopStopEvent = 0x6c0; // UAkAudioEvent*
		constexpr auto BoobyTrapTriggerEvent = 0x6c8; // UAkAudioEvent*
		constexpr auto BoobyTrapLoopSoundHandle = 0x6d0; // FAudioPlayingHandle
		constexpr auto TimeHandler_ActiveMolotovCocktail = 0x6d8; // FTimerHandle
		constexpr auto FireCellClass = 0x6e8; // ABravoHotelProjectileMolotovFireCell*
		constexpr auto MolotovFireCells = 0x6f0; // TArray<ABravoHotelProjectileMolotovFireCell*>
		constexpr auto TimeHandle_SpreadingMolotov = 0x708; // FTimerHandle
		constexpr auto TimeHandle_ShrinkingMolotov = 0x710; // FTimerHandle
		constexpr auto FireLocations = 0x718; // TArray<FVector>
		constexpr auto FirePropagations = 0x728; // TArray<UParticleSystemComponent*>
		constexpr auto FireSpreadFirstDelayTime = 0x7b8; // float
		constexpr auto FireSpreadTime = 0x7bc; // float
		constexpr auto FireShrinkTime = 0x7c0; // float
		constexpr auto bEnableFireWall = 0x808; // bool
		constexpr auto FireWallCellCount = 0x80c; // int32_t
		constexpr auto FireWallCellWidth = 0x810; // float
		constexpr auto FirePropagationLevelMax = 0x814; // int32_t
		constexpr auto FirePropagationLevelWidth = 0x818; // float
		constexpr auto FirePropagationDivideAnglePerLevel = 0x820; // TArray<float>
	}

	namespace n_UArrowBtn_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Button_68 = 0x250; // UButton*
		constexpr auto Normal = 0x258; // UImage*
		constexpr auto Over = 0x260; // UImage*
		constexpr auto Overlay_113 = 0x268; // UOverlay*
		constexpr auto Press = 0x270; // UImage*
		constexpr auto CilckBtn = 0x278; // FMulticastInlineDelegate
		constexpr auto IsLeft = 0x288; // bool
	}

	namespace n_UUW-MatchEnd_RewardSlot_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto HorizontalBox_Rarity = 0x250; // UHorizontalBox*
		constexpr auto Image_bg = 0x258; // UImage*
		constexpr auto Image_Icon = 0x260; // UImage*
		constexpr auto T_Name = 0x268; // UTextBlock*
		constexpr auto T_WeaponType = 0x270; // UTextBlock*
		constexpr auto TextBlock_186 = 0x278; // UTextBlock*
		constexpr auto Tooltip = 0x280; // UUW-Inventory_ItemSlotHover_C*
		constexpr auto ItemInfo = 0x288; // FRewardItemInfo
		constexpr auto ItemDetailInfo = 0x290; // FInventoryItemDetailInfo
	}

	namespace n_UAnimNotify_PlaySound {
		constexpr auto Sound = 0x38; // USoundBase*
		constexpr auto VolumeMultiplier = 0x40; // float
		constexpr auto PitchMultiplier = 0x44; // float
		constexpr auto bFollow = 0x48; // char : 1
		constexpr auto AttachName = 0x4c; // FName
	}

	namespace n_ALightmassPortal {
		constexpr auto PortalComponent = 0x318; // ULightmassPortalComponent*
	}

	namespace n_USkeletalMeshSocket {
		constexpr auto SocketName = 0x28; // FName
		constexpr auto BoneName = 0x30; // FName
		constexpr auto RelativeLocation = 0x38; // FVector
		constexpr auto RelativeRotation = 0x44; // FRotator
		constexpr auto RelativeScale = 0x50; // FVector
		constexpr auto bForceAlwaysAnimated = 0x5c; // bool
	}

	namespace n_UNetReplicationGraphConnection {
		constexpr auto NetConnection = 0x28; // UNetConnection*
		constexpr auto DebugActor = 0x180; // AReplicationGraphDebugActor*
		constexpr auto LastGatherLocations = 0x1a0; // TArray<FLastLocationGatherInfo>
		constexpr auto ConnectionGraphNodes = 0x1b8; // TArray<UReplicationGraphNode*>
		constexpr auto TearOffNode = 0x1c8; // UReplicationGraphNode_TearOff_ForConnection*
	}

	namespace n_UUniformGridPanel {
		constexpr auto SlotPadding = 0x120; // FMargin
		constexpr auto MinDesiredSlotWidth = 0x130; // float
		constexpr auto MinDesiredSlotHeight = 0x134; // float
	}

	namespace n_UMaterialExpressionDeriveNormalZ {
		constexpr auto InXY = 0x40; // FExpressionInput
	}

	namespace n_UDatasmithMaterialInstanceTemplate {
		constexpr auto ParentMaterial = 0x30; // TSoftObjectPtr<UMaterialInterface>
		constexpr auto ScalarParameterValues = 0x58; // TMap<FName, float>
		constexpr auto VectorParameterValues = 0xa8; // TMap<FName, FLinearColor>
		constexpr auto TextureParameterValues = 0xf8; // TMap<FName, TSoftObjectPtr<UTexture>>
		constexpr auto StaticParameters = 0x148; // FDatasmithStaticParameterSetTemplate
	}

	namespace n_UBravoHotelMainWidget {
		constexpr auto WorldCenter = 0x260; // FVector
		constexpr auto WorldSize = 0x26c; // FVector2D
		constexpr auto BaseMapSize = 0x274; // FVector2D
		constexpr auto ParentWidgetSize = 0x27c; // FVector2D
		constexpr auto TargetCharacterRef = 0x288; // ABravoHotelCharacter*
		constexpr auto TargetPlayerStateRef = 0x290; // ABravoHotelPlayerState*
		constexpr auto BattleRoyaleGameStateRef = 0x298; // ABattleRoyaleGameState*
		constexpr auto PlayerHUDRef = 0x2a0; // ABravoHotelPlayerHUD*
		constexpr auto PlayerControllerRef = 0x2a8; // APlayerController*
		constexpr auto TargetPawnTeamPlayers = 0x2b0; // TArray<ABravoHotelPlayerState*>
		constexpr auto ViewportSize = 0x2cc; // FVector2D
		constexpr auto ViewportScale = 0x2d4; // float
		constexpr auto TopInfoWidgetClass = 0x2d8; // UUserWidget*
		constexpr auto SightInfoWidgetClass = 0x2e0; // UUserWidget*
		constexpr auto TeamPositionWidgetArray = 0x2e8; // TArray<UBravoHotelTeamPositionWidget*>
		constexpr auto TeamPositionWidgetClass = 0x2f8; // UUserWidget*
		constexpr auto bWantShowTeamPositionWidget = 0x300; // bool
		constexpr auto MinViewportPosition = 0x304; // FVector2D
		constexpr auto MaxViewportPosition = 0x30c; // FVector2D
		constexpr auto RedCircleVisibility = 0x31c; // bool
		constexpr auto IsMouseCursorWidgetChanged = 0x31d; // bool
		constexpr auto SkillMapRadarPosition = 0x320; // FVector2D
		constexpr auto SkillMapRadarScaleRate = 0x328; // float
		constexpr auto AudioEvent_FindLandingPositionStart = 0x338; // UAkAudioEvent*
		constexpr auto AudioEvent_FindLandingPositionEnd = 0x340; // UAkAudioEvent*
		constexpr auto AudioEvent_SearchInstinctStart = 0x368; // UAkAudioEvent*
		constexpr auto AudioEvent_SearchInstinctEnd = 0x370; // UAkAudioEvent*
		constexpr auto SearchInstinctSoundHandle = 0x378; // FAudioPlayingHandle
		constexpr auto SearchInstinctAlpha = 0x37c; // float
		constexpr auto bIsSetSearchInstinctWidget = 0x380; // bool
		constexpr auto bIsSetVehicleSearchWidget = 0x381; // bool
		constexpr auto SpatialSenseUIInfoMap = 0x388; // TMap<int32_t, float>
		constexpr auto CarScanCurrentTime = 0x3d8; // float
		constexpr auto AttackDamageInfoList = 0x3e0; // TArray<FAttackDamageWidgetInfo>
		constexpr auto AttackDamageWidgetClass = 0x3f8; // UUserWidget*
		constexpr auto AttackUserWidgetClass = 0x400; // UUserWidget*
		constexpr auto HitWidgetList = 0x408; // TArray<UUserWidget*>
		constexpr auto TopInfoWidget = 0x418; // UBravoHotelTopInfoWidget*
		constexpr auto SightInfoWidget = 0x420; // UBravoHotelSightInfoWidget*
		constexpr auto AliveInfoWidget = 0x428; // UBravoHotelAliveInfoWidget*
		constexpr auto CompassWidget = 0x430; // UBravoHotelCompassWidget*
		constexpr auto VehicleWidget = 0x438; // UBravoHotelVehicleWidget*
		constexpr auto TeamInfoWidget = 0x440; // UBravoHotelTeamInfoWidget*
		constexpr auto JetpackWidget = 0x448; // UBravoHotelJetpackWidget*
	}

	namespace n_AReplicationGraphDebugActor {
		constexpr auto ReplicationGraph = 0x318; // UReplicationGraph*
		constexpr auto ConnectionManager = 0x320; // UNetReplicationGraphConnection*
	}

	namespace n_UInputActionDelegateBinding {
		constexpr auto InputActionDelegateBindings = 0x28; // TArray<FBlueprintInputActionDelegateBinding>
	}

	namespace n_UMaterialExpressionArcsineFast {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UMovieSceneStringSection {
		constexpr auto StringCurve = 0xe0; // FMovieSceneStringChannel
	}

	namespace n_UBP-HUDInteractionComponent_C {
		constexpr auto UberGraphFrame = 0x140; // FPointerToUberGraphFrame
		constexpr auto bHasJustClosed_1 = 0x148; // bool
		constexpr auto defaultContrast_1 = 0x14c; // float
		constexpr auto defaultMaxBrightness_1 = 0x150; // float
		constexpr auto defaultMinBrightness_1 = 0x154; // float
		constexpr auto MinBrightness_1 = 0x158; // float
		constexpr auto MaxBrightness_1 = 0x15c; // float
		constexpr auto Contrast_1 = 0x160; // float
		constexpr auto bUsePostProcessVolumeOption_1 = 0x164; // bool
		constexpr auto ColorGradingGlobalGamma_1 = 0x168; // float
		constexpr auto FilmToeIntensity_1 = 0x16c; // float
		constexpr auto IsInWidget_1 = 0x170; // bool
		constexpr auto bInputModeUI_1 = 0x171; // bool
		constexpr auto InputActionsToBlock_1 = 0x178; // TArray<FName>
	}

	namespace n_APrefabToolActor {
		constexpr auto PrefabComponent = 0x318; // UPrefabToolComponent*
	}

}