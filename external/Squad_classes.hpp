// Created by BlueFire1337
// Updated 2021-11-26
// Generated 2022-01-23

namespace off {
	constexpr auto GNames = 0x4e66100;
	constexpr auto GObjects = 0x4e7d990;
	constexpr auto GWorld = 0x4f7fb38;

	namespace n_UShapeComponent { // : UPrimitiveComponent
		constexpr auto ShapeBodySetup = 0x408; // UBodySetup*
		constexpr auto ShapeColor = 0x410; // FColor
		constexpr auto bDrawOnlyIfSelected = 0x414; // char : 1
		constexpr auto bShouldCollideWhenPlacing = 0x414; // char : 1
		constexpr auto bDynamicObstacle = 0x414; // char : 1
		constexpr auto AreaClass = 0x418; // UNavAreaBase*
	}

	namespace n_USimulatedClientNetConnection { // : UNetConnection
		constexpr auto Children = 0x48; // TArray<UChildConnection*>
		constexpr auto Driver = 0x58; // UNetDriver*
		constexpr auto PackageMapClass = 0x60; // UPackageMap*
		constexpr auto PackageMap = 0x68; // UPackageMap*
		constexpr auto OpenChannels = 0x70; // TArray<UChannel*>
		constexpr auto SentTemporaries = 0x80; // TArray<AActor*>
		constexpr auto ViewTarget = 0x90; // AActor*
		constexpr auto OwningActor = 0x98; // AActor*
		constexpr auto MaxPacket = 0xa0; // int
		constexpr auto InternalAck = 0xa4; // char : 1
		constexpr auto PlayerId = 0x160; // FUniqueNetIdRepl
		constexpr auto LastReceiveTime = 0x1f0; // double
		constexpr auto ChannelsToTick = 0x14b8; // TArray<UChannel*>
	}

	namespace n_ALandscapeStreamingProxy { // : ALandscapeProxy
		constexpr auto LandscapeActor = 0x548; // ALandscape*
	}

	namespace n_UProceduralFoliageComponent { // : UActorComponent
		constexpr auto FoliageSpawner = 0xd8; // UProceduralFoliageSpawner*
		constexpr auto TileOverlap = 0xe0; // float
		constexpr auto SpawningVolume = 0xe8; // AVolume*
		constexpr auto ProceduralGuid = 0xf0; // FGuid
	}

	namespace n_UBP_L85A2_StaticInfo_C { // : UBP_GenericWeapon_StaticInfo_C
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_UARPlaneGeometry { // : UARTrackedGeometry
		constexpr auto Orientation = 0xe8; // EARPlaneOrientation
		constexpr auto Center = 0xec; // FVector
		constexpr auto Extent = 0xf8; // FVector
		constexpr auto SubsumedBy = 0x118; // UARPlaneGeometry*
	}

	namespace n_UExporter { // : UObject
		constexpr auto SupportedClass = 0x28; // UObject*
		constexpr auto ExportRootScope = 0x30; // UObject*
		constexpr auto FormatExtension = 0x38; // TArray<FString>
		constexpr auto FormatDescription = 0x48; // TArray<FString>
		constexpr auto PreferredFormatIndex = 0x58; // int
		constexpr auto TextIndent = 0x5c; // int
		constexpr auto bText = 0x60; // char : 1
		constexpr auto bSelectedOnly = 0x60; // char : 1
		constexpr auto bForceFileOperations = 0x60; // char : 1
		constexpr auto ExportTask = 0x68; // UAssetExportTask*
	}

	namespace n_USoundNodeLooping { // : USoundNode
		constexpr auto LoopCount = 0x40; // int
		constexpr auto bLoopIndefinitely = 0x44; // char : 1
	}

	namespace n_USQCaptureZoneTCComponent { // : USQCaptureZoneComponent
		constexpr auto InitialTeam = 0x150; // char
		constexpr auto FlagName = 0x158; // FText
		constexpr auto CapturingTeam = 0x170; // char
		constexpr auto OwningTeam = 0x171; // char
		constexpr auto LastOwningTeam = 0x172; // char
		constexpr auto TimeToCap = 0x174; // float
		constexpr auto Uncappable = 0x178; // bool
		constexpr auto PlayerAdvantageToCapture = 0x17c; // int
		constexpr auto PlayersNeededWhenUncaptured = 0x180; // int
		constexpr auto CapturePercent = 0x184; // float
		constexpr auto CapturePercentDirection = 0x188; // int
		constexpr auto bIsLocked = 0x18c; // bool
		constexpr auto CaptureStateChangeEvent = 0x190; // FScriptMulticastDelegate
		constexpr auto StateObject = 0x1a0; // USQCoreStateComponent*
		constexpr auto TeamCapturabilities = 0x1c0; // uint32
	}

	namespace n_UAISubsystem { // : UObject
		constexpr auto AISystem = 0x30; // UAISystem*
	}

	namespace n_AMatineeActorCameraAnim { // : AMatineeActor
		constexpr auto CameraAnim = 0x2f0; // UCameraAnim*
	}

	namespace n_UAbilityTask_WaitAbilityCommit { // : UAbilityTask
		constexpr auto OnCommit = 0x80; // FScriptMulticastDelegate
	}

	namespace n_UPawnAction_Repeat { // : UPawnAction
		constexpr auto ActionToRepeat = 0x98; // UPawnAction*
		constexpr auto RecentActionCopy = 0xa0; // UPawnAction*
		constexpr auto ChildFailureHandlingMode = 0xa8; // EPawnActionFailHandling
	}

	namespace n_UMaterialExpressionTransformPosition { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto TransformSourceType = 0x54; // EMaterialPositionTransformSource
		constexpr auto TransformType = 0x55; // EMaterialPositionTransformSource
	}

	namespace n_ALandscapeBlueprintBrushBase { // : AActor
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto bHidden = 0x80; // char : 1
		constexpr auto bNetTemporary = 0x80; // char : 1
		constexpr auto bNetStartup = 0x80; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x80; // char : 1
		constexpr auto bAlwaysRelevant = 0x80; // char : 1
		constexpr auto bReplicateMovement = 0x80; // char : 1
		constexpr auto bTearOff = 0x80; // char : 1
		constexpr auto bExchangedRoles = 0x80; // char : 1
		constexpr auto bNetLoadOnClient = 0x81; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x81; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x81; // char : 1
		constexpr auto bRelevantForLevelBounds = 0x81; // char : 1
		constexpr auto bReplayRewindable = 0x81; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x81; // char : 1
		constexpr auto bAutoDestroyWhenFinished = 0x81; // char : 1
		constexpr auto bBlockInput = 0x81; // char : 1
		constexpr auto bCanBeDamaged = 0x82; // char : 1
		constexpr auto bCollideWhenPlacing = 0x82; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x82; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x82; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x82; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x82; // char : 1
		constexpr auto bIsEditorOnlyActor = 0x82; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x82; // char : 1
		constexpr auto bReplicates = 0x83; // char : 1
		constexpr auto bCanBeInCluster = 0x83; // char : 1
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x83; // char : 1
		constexpr auto bActorEnableCollision = 0x84; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x84; // char : 1
		constexpr auto RemoteRole = 0x85; // ENetRole
		constexpr auto ReplicatedMovement = 0x88; // FRepMovement
		constexpr auto InitialLifeSpan = 0xbc; // float
		constexpr auto CustomTimeDilation = 0xc0; // float
		constexpr auto AttachmentReplication = 0xc8; // FRepAttachment
		constexpr auto Owner = 0x108; // AActor*
		constexpr auto NetDriverName = 0x110; // FName
		constexpr auto Role = 0x118; // ENetRole
		constexpr auto NetDormancy = 0x119; // ENetDormancy
		constexpr auto SpawnCollisionHandlingMethod = 0x11a; // ESpawnActorCollisionHandlingMethod
		constexpr auto AutoReceiveInput = 0x11b; // EAutoReceiveInput
		constexpr auto InputPriority = 0x11c; // int
		constexpr auto InputComponent = 0x120; // UInputComponent*
		constexpr auto NetCullDistanceSquared = 0x128; // float
		constexpr auto NetTag = 0x12c; // int
		constexpr auto NetUpdateFrequency = 0x130; // float
		constexpr auto MinNetUpdateFrequency = 0x134; // float
		constexpr auto bUseRelativeNetUpdateFrequency = 0x138; // char : 1
		constexpr auto bUseOwnerRelativeNetUpdateFrequency = 0x138; // char : 1
		constexpr auto MinRelativeNetUpdateEvaluationFrequency = 0x13c; // float
		constexpr auto NetPriority = 0x140; // float
		constexpr auto Instigator = 0x148; // APawn*
		constexpr auto Children = 0x150; // TArray<AActor*>
		constexpr auto RootComponent = 0x160; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x168; // TArray<AMatineeActor*>
		constexpr auto Layers = 0x180; // TArray<FName>
		constexpr auto ParentComponent = 0x190; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto Tags = 0x198; // TArray<FName>
		constexpr auto OnTakeAnyDamage = 0x1a8; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x1a9; // FScriptMulticastDelegate
		constexpr auto OnTakeRadialDamage = 0x1aa; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x1ab; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x1ac; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x1ad; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x1ae; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x1af; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x1b0; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x1b1; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x1b2; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x1b3; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x1b4; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x1b5; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x1b6; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x1b7; // FScriptMulticastDelegate
		constexpr auto InstanceComponents = 0x218; // TArray<UActorComponent*>
		constexpr auto BlueprintCreatedComponents = 0x228; // TArray<UActorComponent*>
	}

	namespace n_ATriggerVolume { // : AVolume
		constexpr auto BrushType = 0x248; // EBrushType
		constexpr auto BrushColor = 0x24c; // FColor
		constexpr auto PolyFlags = 0x250; // int
		constexpr auto bColored = 0x254; // char : 1
		constexpr auto bSolidWhenSelected = 0x254; // char : 1
		constexpr auto bPlaceableFromClassBrowser = 0x254; // char : 1
		constexpr auto bNotForClientOrServer = 0x254; // char : 1
		constexpr auto Brush = 0x258; // UModel*
		constexpr auto BrushComponent = 0x260; // UBrushComponent*
		constexpr auto bInManipulation = 0x268; // char : 1
		constexpr auto SavedSelections = 0x270; // TArray<FGeomSelection>
	}

	namespace n_UEditableGameplayTagQueryExpression_AnyTagsMatch { // : UEditableGameplayTagQueryExpression
		constexpr auto Tags = 0x28; // FGameplayTagContainer
	}

	namespace n_USQMortarViewWidget { // : USQVehicleViewWidget
		constexpr auto ZoomImages = 0x230; // TArray<UImage*>
		constexpr auto CurrentZoomIndex = 0x240; // int
		constexpr auto IgnoredShakeClasses = 0x248; // TArray<UCameraShake*>
	}

	namespace n_APointLight { // : ALight
		constexpr auto PointLightComponent = 0x258; // UPointLightComponent*
	}

	namespace n_USQSquadList { // : USQUserWidget
		constexpr auto bIsOpening = 0x230; // bool
		constexpr auto bIsClosing = 0x231; // bool
		constexpr auto OwnerPlayerState = 0x238; // ASQPlayerState*
		constexpr auto OwnerPlayerController = 0x240; // ASQPlayerController*
	}

	namespace n_USQGraphAASInitializerComponent { // : USQGraphInitializerComponent
		constexpr auto DesignOutgoingLinks = 0xd8; // TArray<FSQDesignLink>
	}

	namespace n_UEQSRenderingComponent { // : UPrimitiveComponent
		constexpr auto MinDrawDistance = 0x220; // float
		constexpr auto LDMaxDrawDistance = 0x224; // float
		constexpr auto CachedMaxDrawDistance = 0x228; // float
		constexpr auto DepthPriorityGroup = 0x22c; // ESceneDepthPriorityGroup
		constexpr auto ViewOwnerDepthPriorityGroup = 0x22d; // ESceneDepthPriorityGroup
		constexpr auto IndirectLightingCacheQuality = 0x22e; // EIndirectLightingCacheQuality
		constexpr auto LightmapType = 0x22f; // ELightmapType
		constexpr auto bUseMaxLODAsImposter = 0x230; // char : 1
		constexpr auto bNeverDistanceCull = 0x230; // char : 1
		constexpr auto bAlwaysCreatePhysicsState = 0x230; // char : 1
		constexpr auto bGenerateOverlapEvents = 0x230; // char : 1
		constexpr auto bGenerateLocalOverlapEvents = 0x231; // char : 1
		constexpr auto bMultiBodyOverlap = 0x231; // char : 1
		constexpr auto bTraceComplexOnMove = 0x231; // char : 1
		constexpr auto bReturnMaterialOnMove = 0x231; // char : 1
		constexpr auto bUseViewOwnerDepthPriorityGroup = 0x231; // char : 1
		constexpr auto bAllowCullDistanceVolume = 0x231; // char : 1
		constexpr auto bHasMotionBlurVelocityMeshes = 0x231; // char : 1
		constexpr auto bVisibleInReflectionCaptures = 0x232; // char : 1
		constexpr auto bVisibleInRayTracing = 0x232; // char : 1
		constexpr auto bRenderInMainPass = 0x232; // char : 1
		constexpr auto bReceivesDecals = 0x232; // char : 1
		constexpr auto bOwnerNoSee = 0x232; // char : 1
		constexpr auto bOnlyOwnerSee = 0x232; // char : 1
		constexpr auto bTreatAsBackgroundForOcclusion = 0x232; // char : 1
		constexpr auto bUseAsOccluder = 0x232; // char : 1
		constexpr auto bSelectable = 0x233; // char : 1
		constexpr auto bForceMipStreaming = 0x233; // char : 1
		constexpr auto bHasPerInstanceHitProxies = 0x233; // char : 1
		constexpr auto CastShadow = 0x233; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x233; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x233; // char : 1
		constexpr auto bCastDynamicShadow = 0x233; // char : 1
		constexpr auto bCastStaticShadow = 0x233; // char : 1
		constexpr auto bCastVolumetricTranslucentShadow = 0x234; // char : 1
		constexpr auto bSelfShadowOnly = 0x234; // char : 1
		constexpr auto bCastFarShadow = 0x234; // char : 1
		constexpr auto bCastInsetShadow = 0x234; // char : 1
		constexpr auto bCastCinematicShadow = 0x234; // char : 1
		constexpr auto bCastHiddenShadow = 0x234; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x234; // char : 1
		constexpr auto bLightAsIfStatic = 0x234; // char : 1
		constexpr auto bLightAttachmentsAsGroup = 0x235; // char : 1
		constexpr auto bReceiveMobileCSMShadows = 0x235; // char : 1
		constexpr auto bSingleSampleShadowFromStationaryLights = 0x235; // char : 1
		constexpr auto bIgnoreRadialImpulse = 0x235; // char : 1
		constexpr auto bIgnoreRadialForce = 0x235; // char : 1
		constexpr auto bApplyImpulseOnDamage = 0x235; // char : 1
		constexpr auto bReplicatePhysicsToAutonomousProxy = 0x235; // char : 1
		constexpr auto AlwaysLoadOnClient = 0x235; // char : 1
		constexpr auto AlwaysLoadOnServer = 0x236; // char : 1
		constexpr auto bUseEditorCompositing = 0x236; // char : 1
		constexpr auto bRenderCustomDepth = 0x236; // char : 1
		constexpr auto bHasCustomNavigableGeometry = 0x237; // EHasCustomNavigableGeometry
		constexpr auto CanCharacterStepUpOn = 0x239; // ECanBeCharacterBase
		constexpr auto LightingChannels = 0x23a; // FLightingChannels
		constexpr auto CustomDepthStencilWriteMask = 0x23b; // ERendererStencilMask
		constexpr auto CustomDepthStencilValue = 0x23c; // int
		constexpr auto CustomPrimitiveData = 0x240; // FCustomPrimitiveData
		constexpr auto TranslucencySortPriority = 0x250; // int
		constexpr auto VisibilityId = 0x254; // int
		constexpr auto RuntimeVirtualTextures = 0x258; // TArray<URuntimeVirtualTexture*>
		constexpr auto VirtualTextureLodBias = 0x268; // int
		constexpr auto VirtualTextureCullMips = 0x26c; // int
		constexpr auto VirtualTextureMinCoverage = 0x270; // int
		constexpr auto VirtualTextureRenderPassType = 0x274; // ERuntimeVirtualTextureMainPassType
		constexpr auto LpvBiasMultiplier = 0x27c; // float
		constexpr auto BoundsScale = 0x288; // float
		constexpr auto MoveIgnoreActors = 0x298; // TArray<AActor*>
		constexpr auto MoveIgnoreComponents = 0x2a8; // TArray<UPrimitiveComponent*>
		constexpr auto BodyInstance = 0x2c8; // FBodyInstance
		constexpr auto OnComponentHit = 0x3d8; // FScriptMulticastDelegate
		constexpr auto OnComponentBeginOverlap = 0x3d9; // FScriptMulticastDelegate
		constexpr auto OnComponentEndOverlap = 0x3da; // FScriptMulticastDelegate
		constexpr auto OnComponentWake = 0x3db; // FScriptMulticastDelegate
		constexpr auto OnComponentSleep = 0x3dc; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x3de; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x3df; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x3e0; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x3e1; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x3e2; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x3e3; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x3e4; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x3e5; // FScriptMulticastDelegate
		constexpr auto LODParentPrimitive = 0x400; // UPrimitiveComponent*
	}

	namespace n_UGeometryCollection { // : UObject
		constexpr auto Materials = 0x30; // TArray<UMaterialInterface*>
		constexpr auto CollisionType = 0x40; // ECollisionTypeEnum
		constexpr auto ImplicitType = 0x41; // EImplicitTypeEnum
		constexpr auto MinLevelSetResolution = 0x44; // int
		constexpr auto MaxLevelSetResolution = 0x48; // int
		constexpr auto MinClusterLevelSetResolution = 0x4c; // int
		constexpr auto MaxClusterLevelSetResolution = 0x50; // int
		constexpr auto CollisionObjectReductionPercentage = 0x54; // float
		constexpr auto bMassAsDensity = 0x58; // bool
		constexpr auto Mass = 0x5c; // float
		constexpr auto MinimumMassClamp = 0x60; // float
		constexpr auto CollisionParticlesFraction = 0x64; // float
		constexpr auto MaximumCollisionParticles = 0x68; // int
		constexpr auto SizeSpecificData = 0x70; // TArray<FGeometryCollectionSizeSpecificData>
		constexpr auto EnableRemovePiecesOnFracture = 0x80; // bool
		constexpr auto RemoveOnFractureMaterials = 0x88; // TArray<UMaterialInterface*>
		constexpr auto PersistentGuid = 0x98; // FGuid
		constexpr auto StateGuid = 0xa8; // FGuid
		constexpr auto BoneSelectedMaterialIndex = 0xb8; // int
	}

	namespace n_UWidgetSwitcherSlot { // : UPanelSlot
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_ASQLogisticsRuleSet { // : ASQGameRuleSet
		constexpr auto RuleSettings = 0x270; // FSQLogisticsSettings
	}

	namespace n_UDatasmithActorTemplate { // : UDatasmithObjectTemplate
		constexpr auto Layers = 0x30; // TSet<FName>
		constexpr auto Tags = 0x80; // TSet<FName>
	}

	namespace n_UInterpTrackFloatParticleParam { // : UInterpTrackFloatBase
		constexpr auto ParamName = 0x90; // FName
	}

	namespace n_USQRadialRoleIconButton { // : USQRadialIconButton
		constexpr auto bIsUnavailable = 0x410; // bool
		constexpr auto Cost = 0x414; // float
		constexpr auto CostBlock = 0x418; // UTextBlock*
		constexpr auto RimAvailableColor = 0x420; // FLinearColor
		constexpr auto RimUnAvailableColor = 0x430; // FLinearColor
		constexpr auto IconUnavailableColor = 0x440; // FLinearColor
		constexpr auto InnerHoverUnavailableColor = 0x450; // FLinearColor
		constexpr auto ReferenceRole = 0x460; // USQRoleSettings*
		constexpr auto RearmSource = 0x468; // TScriptInterface<Class>
		constexpr auto OwnerPlayerController = 0x478; // ASQPlayerController*
	}

	namespace n_UMaterial { // : UMaterialInterface
		constexpr auto PhysMaterial = 0x88; // UPhysicalMaterial*
		constexpr auto Metallic = 0x90; // FScalarMaterialInput
		constexpr auto Specular = 0xa4; // FScalarMaterialInput
		constexpr auto Normal = 0xb8; // FVectorMaterialInput
		constexpr auto EmissiveColor = 0xcc; // FColorMaterialInput
		constexpr auto MaterialDomain = 0xe0; // EMaterialDomain
		constexpr auto BlendMode = 0xe1; // EBlendMode
		constexpr auto DecalBlendMode = 0xe2; // EDecalBlendMode
		constexpr auto MaterialDecalResponse = 0xe3; // EMaterialDecalResponse
		constexpr auto ShadingModel = 0xe4; // EMaterialShadingModel
		constexpr auto ShadingModels = 0xe6; // FMaterialShadingModelField
		constexpr auto OpacityMaskClipValue = 0xe8; // float
		constexpr auto bCastDynamicShadowAsMasked = 0xec; // char : 1
		constexpr auto WorldPositionOffset = 0xf0; // FVectorMaterialInput
		constexpr auto Refraction = 0x104; // FScalarMaterialInput
		constexpr auto MaterialAttributes = 0x118; // FMaterialAttributesInput
		constexpr auto PixelDepthOffset = 0x130; // FScalarMaterialInput
		constexpr auto ShadingModelFromMaterialExpression = 0x144; // FShadingModelMaterialInput
		constexpr auto bEnableSeparateTranslucency = 0x158; // char : 1
		constexpr auto bEnableMobileSeparateTranslucency = 0x158; // char : 1
		constexpr auto bEnableResponsiveAA = 0x158; // char : 1
		constexpr auto bScreenSpaceReflections = 0x158; // char : 1
		constexpr auto bContactShadows = 0x158; // char : 1
		constexpr auto TwoSided = 0x158; // char : 1
		constexpr auto DitheredLODTransition = 0x158; // char : 1
		constexpr auto DitherOpacityMask = 0x158; // char : 1
		constexpr auto bAllowNegativeEmissiveColor = 0x159; // char : 1
		constexpr auto NumCustomizedUVs = 0x15c; // int
		constexpr auto TranslucencyLightingMode = 0x160; // ETranslucencyLightingMode
		constexpr auto TranslucencyDirectionalLightingIntensity = 0x164; // float
		constexpr auto AllowTranslucentCustomDepthWrites = 0x168; // char : 1
		constexpr auto TranslucentShadowDensityScale = 0x16c; // float
		constexpr auto TranslucentSelfShadowDensityScale = 0x170; // float
		constexpr auto TranslucentSelfShadowSecondDensityScale = 0x174; // float
		constexpr auto TranslucentSelfShadowSecondOpacity = 0x178; // float
		constexpr auto TranslucentBackscatteringExponent = 0x17c; // float
		constexpr auto TranslucentMultipleScatteringExtinction = 0x180; // FLinearColor
		constexpr auto TranslucentShadowStartOffset = 0x190; // float
		constexpr auto bDisableDepthTest = 0x194; // char : 1
		constexpr auto bWriteOnlyAlpha = 0x194; // char : 1
		constexpr auto bGenerateSphericalParticleNormals = 0x194; // char : 1
		constexpr auto bTangentSpaceNormal = 0x194; // char : 1
		constexpr auto bUseEmissiveForDynamicAreaLighting = 0x194; // char : 1
		constexpr auto bBlockGI = 0x194; // char : 1
		constexpr auto bUsedAsSpecialEngineMaterial = 0x194; // char : 1
		constexpr auto bUsedWithSkeletalMesh = 0x194; // char : 1
		constexpr auto bUsedWithEditorCompositing = 0x195; // char : 1
		constexpr auto bUsedWithParticleSprites = 0x195; // char : 1
		constexpr auto bUsedWithBeamTrails = 0x195; // char : 1
		constexpr auto bUsedWithMeshParticles = 0x195; // char : 1
		constexpr auto bUsedWithNiagaraSprites = 0x195; // char : 1
		constexpr auto bUsedWithNiagaraRibbons = 0x195; // char : 1
		constexpr auto bUsedWithNiagaraMeshParticles = 0x195; // char : 1
		constexpr auto bUsedWithGeometryCache = 0x195; // char : 1
		constexpr auto bUsedWithStaticLighting = 0x196; // char : 1
		constexpr auto bUsedWithMorphTargets = 0x196; // char : 1
		constexpr auto bUsedWithSplineMeshes = 0x196; // char : 1
		constexpr auto bUsedWithInstancedStaticMeshes = 0x196; // char : 1
		constexpr auto bUsedWithGeometryCollections = 0x196; // char : 1
		constexpr auto bUsesDistortion = 0x196; // char : 1
		constexpr auto bUsedWithClothing = 0x196; // char : 1
		constexpr auto bUsedWithUI = 0x196; // char : 1
		constexpr auto bAutomaticallySetUsageInEditor = 0x197; // char : 1
		constexpr auto bFullyRough = 0x197; // char : 1
		constexpr auto bUseFullPrecision = 0x197; // char : 1
		constexpr auto bUseLightmapDirectionality = 0x197; // char : 1
		constexpr auto bUseHQForwardReflections = 0x197; // char : 1
		constexpr auto bUsePlanarForwardReflections = 0x197; // char : 1
		constexpr auto bNormalCurvatureToRoughness = 0x197; // char : 1
		constexpr auto D3D11TessellationMode = 0x198; // EMaterialTessellationMode
		constexpr auto bEnableCrackFreeDisplacement = 0x19c; // char : 1
		constexpr auto bEnableAdaptiveTessellation = 0x19c; // char : 1
		constexpr auto MaxDisplacement = 0x1a0; // float
		constexpr auto Wireframe = 0x1a4; // char : 1
		constexpr auto bOutputVelocityOnBasePass = 0x1a4; // char : 1
		constexpr auto Expressions = 0x1a8; // TArray<UMaterialExpression*>
		constexpr auto MaterialFunctionInfos = 0x1b8; // TArray<FMaterialFunctionInfo>
		constexpr auto MaterialParameterCollectionInfos = 0x1c8; // TArray<FMaterialParameterCollectionInfo>
		constexpr auto bCanMaskedBeAssumedOpaque = 0x1d8; // char : 1
		constexpr auto bIsMasked = 0x1d8; // char : 1
		constexpr auto bIsPreviewMaterial = 0x1d8; // char : 1
		constexpr auto bIsFunctionPreviewMaterial = 0x1d8; // char : 1
		constexpr auto bUseMaterialAttributes = 0x1d8; // char : 1
		constexpr auto bCastRayTracedShadows = 0x1d8; // char : 1
		constexpr auto bUseTranslucencyVertexFog = 0x1d8; // char : 1
		constexpr auto bComputeFogPerPixel = 0x1d8; // char : 1
		constexpr auto bOutputTranslucentVelocity = 0x1d9; // char : 1
		constexpr auto bAllowDevelopmentShaderCompile = 0x1d9; // char : 1
		constexpr auto bIsMaterialEditorStatsMaterial = 0x1d9; // char : 1
		constexpr auto UsageFlagWarnings = 0x1dc; // uint32
		constexpr auto BlendableLocation = 0x1e0; // EBlendableLocation
		constexpr auto BlendablePriority = 0x1e4; // int
		constexpr auto BlendableOutputAlpha = 0x1e8; // bool
		constexpr auto bEnableStencilTest = 0x1e9; // char : 1
		constexpr auto StencilCompare = 0x1ea; // EMaterialStencilCompare
		constexpr auto StencilRefValue = 0x1eb; // char
		constexpr auto RefractionMode = 0x1ec; // ERefractionMode
		constexpr auto RefractionDepthBias = 0x1f0; // float
		constexpr auto StateId = 0x1f4; // FGuid
		constexpr auto CachedQualityLevelsUsed = 0x210; // TArray<bool>
		constexpr auto ExpressionTextureReferences = 0x2a0; // TArray<UObject*>
	}

	namespace n_USQGrenadeStaticInfo { // : USQItemStaticInfo
		constexpr auto WeaponOverhandPinpull1pMontage = 0x4f8; // UAnimMontage*
		constexpr auto WeaponOverhandPinpull3pMontage = 0x500; // UAnimMontage*
		constexpr auto OverhandPinpull1pMontage = 0x508; // UAnimMontage*
		constexpr auto OverhandPinpull3pMontage = 0x510; // UAnimMontage*
		constexpr auto WeaponOverhandThrow1pMontage = 0x518; // UAnimMontage*
		constexpr auto WeaponOverhandThrow3pMontage = 0x520; // UAnimMontage*
		constexpr auto OverhandThrow1pMontage = 0x528; // UAnimMontage*
		constexpr auto OverhandThrow3pMontage = 0x530; // UAnimMontage*
		constexpr auto WeaponUnderhandPinpull1pMontage = 0x538; // UAnimMontage*
		constexpr auto WeaponUnderhandPinpull3pMontage = 0x540; // UAnimMontage*
		constexpr auto UnderhandPinpull1pMontage = 0x548; // UAnimMontage*
		constexpr auto UnderhandPinpull3pMontage = 0x550; // UAnimMontage*
		constexpr auto WeaponUnderhandThrow1pMontage = 0x558; // UAnimMontage*
		constexpr auto WeaponUnderhandThrow3pMontage = 0x560; // UAnimMontage*
		constexpr auto UnderhandThrow1pMontage = 0x568; // UAnimMontage*
		constexpr auto UnderhandThrow3pMontage = 0x570; // UAnimMontage*
	}

	namespace n_UMovieSceneBindingOverrides { // : UObject
		constexpr auto BindingData = 0x28; // TArray<FMovieSceneBindingOverrideData>
	}

	namespace n_ABP_RPG7_Tandem_Heat_Proj2_C { // : ABP_RPG7_Heat_Proj2_C
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto SkeletalMesh = 0x528; // USkeletalMeshComponent*
		constexpr auto BPEffectOnUnderMinFlightTime = 0x530; // UParticleSystem*
		constexpr auto BPSoundonUnderMinFlightTime = 0x538; // USoundBase*
	}

	namespace n_UBP_attachment_SA80_AcogMount_C { // : USQWeaponAttachment_Scope
		constexpr auto MeshTransitionPercentage = 0x4b0; // float
		constexpr auto ADSMesh = 0x4b8; // UStaticMesh*
		constexpr auto ADSMeshTransform = 0x4c0; // FTransform
		constexpr auto NonADSMesh = 0x4f0; // UStaticMesh*
		constexpr auto NonADSMeshTransform = 0x500; // FTransform
		constexpr auto InToADSMeshTransitionSettings = 0x530; // TArray<FSQMeshTransitionSettings>
		constexpr auto OutFromADSMeshTransitionSettings = 0x540; // TArray<FSQMeshTransitionSettings>
	}

	namespace n_UAutomationTestSettings { // : UObject
		constexpr auto EngineTestModules = 0x28; // TArray<FString>
		constexpr auto EditorTestModules = 0x38; // TArray<FString>
		constexpr auto AutomationTestmap = 0x48; // FSoftObjectPath
		constexpr auto EditorPerformanceTestMaps = 0x60; // TArray<FEditorMapPerformanceTestDefinition>
		constexpr auto AssetsToOpen = 0x70; // TArray<FSoftObjectPath>
		constexpr auto BuildPromotionTest = 0x80; // FBuildPromotionTestSettings
		constexpr auto MaterialEditorPromotionTest = 0x270; // FMaterialEditorPromotionSettings
		constexpr auto ParticleEditorPromotionTest = 0x2a0; // FParticleEditorPromotionSettings
		constexpr auto BlueprintEditorPromotionTest = 0x2b0; // FBlueprintEditorPromotionSettings
		constexpr auto TestLevelFolders = 0x2e0; // TArray<FString>
		constexpr auto ExternalTools = 0x2f0; // TArray<FExternalToolDefinition>
		constexpr auto ImportExportTestDefinitions = 0x300; // TArray<FEditorImportExportTestDefinition>
		constexpr auto LaunchOnSettings = 0x310; // TArray<FLaunchOnTestSettings>
		constexpr auto DefaultScreenshotResolution = 0x320; // FIntPoint
	}

	namespace n_ABP_RPG7_Thermo_C { // : ABP_RPG7_Parent_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
		constexpr auto MuzzleFlashRearComponent3P = 0x7b8; // UParticleSystemComponent*
		constexpr auto BackBlastComponent3P = 0x7c0; // UChildActorComponent*
		constexpr auto MuzzleFlashRearComponent1P = 0x7c8; // UParticleSystemComponent*
		constexpr auto SquadBlast = 0x7d0; // USQBlastComponent*
		constexpr auto BackBlastComponent1P = 0x7d8; // UChildActorComponent*
		constexpr auto BackblastSocket = 0x7e0; // FName
		constexpr auto BackblastEffect1P = 0x7e8; // UParticleSystem*
		constexpr auto BackblastEffect3P = 0x7f0; // UParticleSystem*
	}

	namespace n_UBP_M4M203_UGL_Parent_StaticInfo_C { // : UBP_GenericWeapon_StaticInfo_C
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_UMovieSceneActorReferenceTrack { // : UMovieScenePropertyTrack
		constexpr auto SectionToKey = 0x58; // UMovieSceneSection*
		constexpr auto PropertyName = 0x60; // FName
		constexpr auto PropertyPath = 0x68; // FString
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_ABoxReflectionCapture { // : AReflectionCapture
		constexpr auto CaptureComponent = 0x248; // UReflectionCaptureComponent*
	}

	namespace n_UMaterialExpressionArctangent2 { // : UMaterialExpression
		constexpr auto Y = 0x40; // FExpressionInput
		constexpr auto X = 0x54; // FExpressionInput
	}

	namespace n_USQApprovalEntryWidget { // : USQUserWidget
		constexpr auto TextBlockCPP = 0x230; // UTextBlock*
		constexpr auto IconImageCPP = 0x238; // UImage*
		constexpr auto DescriptionTextCPP = 0x240; // UTextBlock*
	}

	namespace n_ABP_AK74_Founders_C { // : ABP_AK74_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_ABP_M4M203_Rifle_C { // : ABP_M4A1_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UParticleModuleLifetime_Seeded { // : UParticleModuleLifetime
		constexpr auto RandomSeedInfo = 0x68; // FParticleRandomSeedInfo
	}

	namespace n_UChatroom { // : UObject
		constexpr auto CurrentChatRoomId = 0x28; // FString
		constexpr auto MaxChatRoomRetries = 0x38; // int
		constexpr auto NumChatRoomRetries = 0x3c; // int
	}

	namespace n_UMaterialExpressionPreviousFrameSwitch { // : UMaterialExpression
		constexpr auto CurrentFrame = 0x40; // FExpressionInput
		constexpr auto PreviousFrame = 0x54; // FExpressionInput
	}

	namespace n_UWindowTitleBarArea { // : UContentWidget
		constexpr auto bWindowButtonsEnabled = 0x120; // bool
		constexpr auto bDoubleClickTogglesFullscreen = 0x121; // bool
	}

	namespace n_UMovieSceneIntegerTrack { // : UMovieScenePropertyTrack
		constexpr auto SectionToKey = 0x58; // UMovieSceneSection*
		constexpr auto PropertyName = 0x60; // FName
		constexpr auto PropertyPath = 0x68; // FString
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_UUserDefinedImageCaptureProtocol { // : UUserDefinedCaptureProtocol
		constexpr auto Format = 0xd8; // EDesiredImageFormat
		constexpr auto bEnableCompression = 0xd9; // bool
		constexpr auto CompressionQuality = 0xdc; // int
	}

	namespace n_UGridPathFollowingComponent { // : UPathFollowingComponent
		constexpr auto GridManager = 0x280; // UNavLocalGridManager*
	}

	namespace n_ASceneCapture2D { // : ASceneCapture
		constexpr auto CaptureComponent2D = 0x258; // USceneCaptureComponent2D*
	}

	namespace n_UBP_Attachment_1p78_C { // : USQWeaponAttachment_Scope
		constexpr auto MeshTransitionPercentage = 0x4b0; // float
		constexpr auto ADSMesh = 0x4b8; // UStaticMesh*
		constexpr auto ADSMeshTransform = 0x4c0; // FTransform
		constexpr auto NonADSMesh = 0x4f0; // UStaticMesh*
		constexpr auto NonADSMeshTransform = 0x500; // FTransform
		constexpr auto InToADSMeshTransitionSettings = 0x530; // TArray<FSQMeshTransitionSettings>
		constexpr auto OutFromADSMeshTransitionSettings = 0x540; // TArray<FSQMeshTransitionSettings>
	}

	namespace n_UPanelWidget { // : UWidget
		constexpr auto Slots = 0x108; // TArray<UPanelSlot*>
	}

	namespace n_UOnlineHotfixManager { // : UObject
		constexpr auto OssName = 0x1e0; // FString
		constexpr auto HotfixManagerClassName = 0x1f0; // FString
		constexpr auto DebugPrefix = 0x200; // FString
		constexpr auto AssetsHotfixedFromIniFiles = 0x210; // TArray<UObject*>
	}

	namespace n_UMovieScene3DTransformSection { // : UMovieSceneSection
		constexpr auto TransformMask = 0xe0; // FMovieSceneTransformMask
		constexpr auto Translation = 0xe8; // FMovieSceneFloatChannel [0x3]
		constexpr auto Rotation = 0x2c8; // FMovieSceneFloatChannel [0x3]
		constexpr auto Scale = 0x4a8; // FMovieSceneFloatChannel [0x3]
		constexpr auto ManualWeight = 0x688; // FMovieSceneFloatChannel
		constexpr auto bUseQuaternionInterpolation = 0x72c; // bool
	}

	namespace n_UNamedInterfaces { // : UObject
		constexpr auto NamedInterfaces = 0x28; // TArray<FNamedInterface>
		constexpr auto NamedInterfaceDefs = 0x38; // TArray<FNamedInterfaceDef>
	}

	namespace n_UDrawFrustumComponent { // : UPrimitiveComponent
		constexpr auto FrustumColor = 0x408; // FColor
		constexpr auto FrustumAngle = 0x40c; // float
		constexpr auto FrustumAspectRatio = 0x410; // float
		constexpr auto FrustumStartDist = 0x414; // float
		constexpr auto FrustumEndDist = 0x418; // float
		constexpr auto Texture = 0x420; // UTexture*
	}

	namespace n_UMaterialExpressionRayTracingQualitySwitch { // : UMaterialExpression
		constexpr auto Normal = 0x40; // FExpressionInput
		constexpr auto RayTraced = 0x54; // FExpressionInput
	}

	namespace n_UDistributionFloatUniform { // : UDistributionFloat
		constexpr auto Min = 0x38; // float
		constexpr auto Max = 0x3c; // float
	}

	namespace n_UMovieSceneBuiltInEasingFunction { // : UObject
		constexpr auto Type = 0x30; // EMovieSceneBuiltInEasing
	}

	namespace n_USQPacketLossWidget { // : USQUserWidget
		constexpr auto DisplayedImage = 0x230; // UImage*
		constexpr auto DisplayedText = 0x238; // UTextBlock*
		constexpr auto PacketLossMaterial = 0x240; // UMaterialInterface*
		constexpr auto ShowIndicatorThreasholdFrac = 0x248; // float
		constexpr auto PacketLossMID = 0x258; // UMaterialInstanceDynamic*
	}

	namespace n_ULandscapeInfo { // : UObject
		constexpr auto LandscapeActor = 0x28; // ALandscape*
		constexpr auto LandscapeGuid = 0x44; // FGuid
		constexpr auto ComponentSizeQuads = 0x54; // int
		constexpr auto SubsectionSizeQuads = 0x58; // int
		constexpr auto ComponentNumSubsections = 0x5c; // int
		constexpr auto DrawScale = 0x60; // FVector
		constexpr auto Proxies = 0xc0; // TSet<ALandscapeStreamingProxy*>
	}

	namespace n_UAnimNotify_PlayMontageNotifyWindow { // : UAnimNotifyState
		constexpr auto NotifyName = 0x30; // FName
	}

	namespace n_UAbilityTask_ApplyRootMotionMoveToForce { // : UAbilityTask_ApplyRootMotion_Base
		constexpr auto OnTimedOut = 0xb8; // FScriptMulticastDelegate
		constexpr auto OnTimedOutAndDestinationReached = 0xc8; // FScriptMulticastDelegate
		constexpr auto StartLocation = 0xd8; // FVector
		constexpr auto TargetLocation = 0xe4; // FVector
		constexpr auto Duration = 0xf0; // float
		constexpr auto bSetNewMovementMode = 0xf4; // bool
		constexpr auto NewMovementMode = 0xf5; // EMovementMode
		constexpr auto bRestrictSpeedToExpected = 0xf6; // bool
		constexpr auto PathOffsetCurve = 0xf8; // UCurveVector*
	}

	namespace n_ABP_L85A2_C { // : ABP_GenericRifle_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UTestMovieSceneSection { // : UMovieSceneSection
		constexpr auto EvalOptions = 0x50; // FMovieSceneSectionEvalOptions
		constexpr auto Easing = 0x58; // FMovieSceneEasingSettings
		constexpr auto SectionRange = 0x90; // FMovieSceneFrameRange
		constexpr auto PreRollFrames = 0xa0; // FFrameNumber
		constexpr auto PostRollFrames = 0xa4; // FFrameNumber
		constexpr auto RowIndex = 0xa8; // int
		constexpr auto OverlapPriority = 0xac; // int
		constexpr auto bIsActive = 0xb0; // char : 1
		constexpr auto bIsLocked = 0xb0; // char : 1
		constexpr auto StartTime = 0xb4; // float
		constexpr auto EndTime = 0xb8; // float
		constexpr auto PrerollTime = 0xbc; // float
		constexpr auto PostrollTime = 0xc0; // float
		constexpr auto bIsInfinite = 0xc4; // char : 1
		constexpr auto bSupportsInfiniteRange = 0xc8; // bool
		constexpr auto BlendType = 0xc9; // FOptionalMovieSceneBlendType
	}

	namespace n_UAbilityTask_WaitGameplayEffectApplied { // : UAbilityTask
		constexpr auto ExternalOwner = 0x1a8; // UAbilitySystemComponent*
	}

	namespace n_UBP_L85A2_SUSAT_Foregrip_StaticInfo_C { // : UBP_L85A2_Foregrip_StaticInfo_C
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_UPlaneFalloff { // : UFieldNodeFloat
		constexpr auto Magnitude = 0xd8; // float
		constexpr auto MinRange = 0xdc; // float
		constexpr auto MaxRange = 0xe0; // float
		constexpr auto Default = 0xe4; // float
		constexpr auto distance = 0xe8; // float
		constexpr auto Position = 0xec; // FVector
		constexpr auto Normal = 0xf8; // FVector
		constexpr auto Falloff = 0x104; // EFieldFalloffType
	}

	namespace n_USQVehicleInventoryComponent { // : USQPawnInventoryComponent
		constexpr auto Weapons = 0x2e0; // TArray<FSQVehicleWeaponConfig>
	}

	namespace n_USQAnimNotify_EnterSeatState { // : UAnimNotify
		constexpr auto SeatIndex = 0x38; // int
	}

	namespace n_UBasicReplicationGraph { // : UReplicationGraph
		constexpr auto GridNode = 0x498; // UReplicationGraphNode_GridSpatialization2D*
		constexpr auto AlwaysRelevantNode = 0x4a0; // UReplicationGraphNode_ActorList*
		constexpr auto AlwaysRelevantForConnectionList = 0x4a8; // TArray<FConnectionAlwaysRelevantNodePair>
		constexpr auto ActorsWithoutNetConnection = 0x4b8; // TArray<AActor*>
	}

	namespace n_UEnvQueryTest_GameplayTags { // : UEnvQueryTest
		constexpr auto TagQueryToMatch = 0x1c0; // FGameplayTagQuery
		constexpr auto bUpdatedToUseQuery = 0x208; // bool
		constexpr auto TagsToMatch = 0x209; // EGameplayContainerMatchType
		constexpr auto GameplayTags = 0x210; // FGameplayTagContainer
	}

	namespace n_ASQDemoSpectator { // : APlayerController
		constexpr auto Player = 0x2c0; // UPlayer*
		constexpr auto AcknowledgedPawn = 0x2c8; // APawn*
		constexpr auto ControllingDirTrackInst = 0x2d0; // UInterpTrackInstDirector*
		constexpr auto MyHUD = 0x2d8; // AHUD*
		constexpr auto PlayerCameraManager = 0x2e0; // APlayerCameraManager*
		constexpr auto PlayerCameraManagerClass = 0x2e8; // APlayerCameraManager*
		constexpr auto bAutoManageActiveCameraTarget = 0x2f0; // bool
		constexpr auto TargetViewRotation = 0x2f4; // FRotator
		constexpr auto SmoothTargetViewRotationSpeed = 0x30c; // float
		constexpr auto HiddenActors = 0x318; // TArray<AActor*>
		constexpr auto HiddenPrimitiveComponents = 0x328; // TArray<TWeakObjectPtr<UPrimitiveComponent>>
		constexpr auto LastSpectatorStateSynchTime = 0x33c; // float
		constexpr auto LastSpectatorSyncLocation = 0x340; // FVector
		constexpr auto LastSpectatorSyncRotation = 0x34c; // FRotator
		constexpr auto ClientCap = 0x358; // int
		constexpr auto CheatManager = 0x360; // UCheatManager*
		constexpr auto CheatClass = 0x368; // UCheatManager*
		constexpr auto PlayerInput = 0x370; // UPlayerInput*
		constexpr auto ActiveForceFeedbackEffects = 0x378; // TArray<FActiveForceFeedbackEffect>
		constexpr auto bPlayerIsWaiting = 0x3f8; // char : 1
		constexpr auto NetPlayerIndex = 0x3fc; // char
		constexpr auto PendingSwapConnection = 0x438; // UNetConnection*
		constexpr auto NetConnection = 0x440; // UNetConnection*
		constexpr auto InputYawScale = 0x454; // float
		constexpr auto InputPitchScale = 0x458; // float
		constexpr auto InputRollScale = 0x45c; // float
		constexpr auto bShowMouseCursor = 0x460; // char : 1
		constexpr auto bEnableClickEvents = 0x460; // char : 1
		constexpr auto bEnableTouchEvents = 0x460; // char : 1
		constexpr auto bEnableMouseOverEvents = 0x460; // char : 1
		constexpr auto bEnableTouchOverEvents = 0x460; // char : 1
		constexpr auto bForceFeedbackEnabled = 0x460; // char : 1
		constexpr auto ForceFeedbackScale = 0x464; // float
		constexpr auto ClickEventKeys = 0x468; // TArray<FKey>
		constexpr auto DefaultMouseCursor = 0x478; // EMouseCursor
		constexpr auto CurrentMouseCursor = 0x479; // EMouseCursor
		constexpr auto DefaultClickTraceChannel = 0x47a; // ECollisionChannel
		constexpr auto CurrentClickTraceChannel = 0x47b; // ECollisionChannel
		constexpr auto HitResultTraceDistance = 0x47c; // float
		constexpr auto SeamlessTravelCount = 0x480; // uint16
		constexpr auto LastCompletedSeamlessTravelCount = 0x482; // uint16
		constexpr auto InactiveStateInputComponent = 0x4f8; // UInputComponent*
		constexpr auto bShouldPerformFullTickWhenPaused = 0x500; // char : 1
		constexpr auto CurrentTouchInterface = 0x518; // UTouchInterface*
		constexpr auto SpectatorPawn = 0x570; // ASpectatorPawn*
		constexpr auto bIsLocalPlayerController = 0x57c; // bool
		constexpr auto SpawnLocation = 0x580; // FVector
	}

	namespace n_UVOIPTalker { // : UActorComponent
		constexpr auto Settings = 0xd8; // FVoiceSettings
	}

	namespace n_UProceduralFoliageSpawner { // : UObject
		constexpr auto RandomSeed = 0x28; // int
		constexpr auto TileSize = 0x2c; // float
		constexpr auto NumUniqueTiles = 0x30; // int
		constexpr auto MinimumQuadTreeSize = 0x34; // float
		constexpr auto FoliageTypes = 0x40; // TArray<FFoliageTypeObject>
		constexpr auto bNeedsSimulation = 0x50; // bool
	}

	namespace n_USQMapWidgetCaptureZone { // : USQMapWidget
		constexpr auto FlagName = 0x2a8; // FText
		constexpr auto FlagTexture = 0x2c0; // UTexture2D*
		constexpr auto DefaultFlag = 0x2e8; // UTexture2D*
		constexpr auto bUncappable = 0x310; // char : 1
		constexpr auto ContestingState = 0x314; // ESQContestingState
		constexpr auto OwningTeam = 0x315; // char
		constexpr auto CapturingTeam = 0x316; // char
		constexpr auto CapturePercent = 0x318; // float
	}

	namespace n_ANavigationObjectBase { // : AActor
		constexpr auto CapsuleComponent = 0x250; // UCapsuleComponent*
		constexpr auto GoodSprite = 0x258; // UBillboardComponent*
		constexpr auto BadSprite = 0x260; // UBillboardComponent*
		constexpr auto bIsPIEPlayerStart = 0x268; // char : 1
	}

	namespace n_USQGraphRAASInitializerComponent { // : USQGraphAASInitializerComponent
		constexpr auto DesignOutgoingLinks = 0xd8; // TArray<FSQDesignLink>
	}

	namespace n_UParticleModuleBeamBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x29; // char : 1
		constexpr auto LODDuplicate = 0x29; // char : 1
		constexpr auto bSupportsRandomSeed = 0x29; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x29; // char : 1
		constexpr auto LODValidity = 0x2c; // char
	}

	namespace n_UDatasmithPostProcessVolumeTemplate { // : UDatasmithObjectTemplate
		constexpr auto Settings = 0x30; // FDatasmithPostProcessSettingsTemplate
		constexpr auto bEnabled = 0x70; // char : 1
		constexpr auto bUnbound = 0x70; // char : 1
	}

	namespace n_USQDataSettings { // : UDeveloperSettings
		constexpr auto UseAdditiveLayer = 0x38; // bool
		constexpr auto LevelClass = 0x40; // USQLevel*
		constexpr auto LayerClass = 0x48; // USQLayer*
		constexpr auto FactionClass = 0x50; // USQFaction*
		constexpr auto FactionSetupClass = 0x58; // USQFactionSetup*
		constexpr auto SecondsTimeForCollectingCommanderChoices = 0x60; // int
		constexpr auto SecondsTimeForCollectingCommanderChoicesCooldown = 0x64; // int
		constexpr auto MinimumSquadSizeForVoting = 0x68; // int
		constexpr auto MinimumSquadsRequiredForVoting = 0x6c; // int
		constexpr auto CommanderVoteConfig = 0x70; // FSQVoteConfig
		constexpr auto UseVoteLevel = 0xb0; // bool
		constexpr auto LevelCountPerVote = 0xb4; // int
		constexpr auto LevelVoteConfig = 0xb8; // FSQVoteConfig
		constexpr auto UseVoteLayer = 0xf8; // bool
		constexpr auto LayerCountPerVote = 0xfc; // int
		constexpr auto LayerVoteConfig = 0x100; // FSQVoteConfig
		constexpr auto UseVoteFactions = 0x140; // bool
		constexpr auto PreventSameFaction = 0x141; // bool
		constexpr auto MaxInitializedTeamId = 0x144; // int
		constexpr auto MaxTeamId = 0x148; // int
		constexpr auto FactionVoteConfigs = 0x150; // TArray<FSQVoteConfig>
	}

	namespace n_UParticleModuleEventGenerator { // : UParticleModuleEventBase
		constexpr auto Events = 0x30; // TArray<FParticleEvent_GenerateInfo>
	}

	namespace n_USceneComponent { // : UActorComponent
		constexpr auto PhysicsVolume = 0xe0; // TWeakObjectPtr<APhysicsVolume>
		constexpr auto AttachParent = 0xe8; // USceneComponent*
		constexpr auto AttachSocketName = 0xf0; // FName
		constexpr auto AttachChildren = 0xf8; // TArray<USceneComponent*>
		constexpr auto ClientAttachedChildren = 0x108; // TArray<USceneComponent*>
		constexpr auto RelativeLocation = 0x144; // FVector
		constexpr auto RelativeRotation = 0x150; // FRotator
		constexpr auto RelativeScale3D = 0x15c; // FVector
		constexpr auto ComponentVelocity = 0x168; // FVector
		constexpr auto bComponentToWorldUpdated = 0x174; // char : 1
		constexpr auto bAbsoluteLocation = 0x174; // char : 1
		constexpr auto bAbsoluteRotation = 0x174; // char : 1
		constexpr auto bAbsoluteScale = 0x174; // char : 1
		constexpr auto bVisible = 0x174; // char : 1
		constexpr auto bHiddenInGame = 0x174; // char : 1
		constexpr auto bShouldBeAttached = 0x174; // char : 1
		constexpr auto bShouldSnapLocationWhenAttached = 0x175; // char : 1
		constexpr auto bShouldSnapRotationWhenAttached = 0x175; // char : 1
		constexpr auto bShouldUpdatePhysicsVolume = 0x175; // char : 1
		constexpr auto bBoundsChangeTriggersStreamingDataRebuild = 0x175; // char : 1
		constexpr auto bUseAttachParentBound = 0x175; // char : 1
		constexpr auto Mobility = 0x17d; // EComponentMobility
		constexpr auto DetailMode = 0x17e; // EDetailMode
		constexpr auto PhysicsVolumeChangedDelegate = 0x17f; // FScriptMulticastDelegate
	}

	namespace n_UPlayFabMatchmakerAPI { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnPlayFabResponse = 0x28; // FScriptMulticastDelegate
		constexpr auto CallAuthenticationContext = 0xd0; // UPlayFabAuthenticationContext*
		constexpr auto RequestJsonObj = 0xd8; // UPlayFabJsonObject*
		constexpr auto ResponseJsonObj = 0xe0; // UPlayFabJsonObject*
	}

	namespace n_UMovieSceneCameraAnimSection { // : UMovieSceneSection
		constexpr auto AnimData = 0xe0; // FMovieSceneCameraAnimSectionData
		constexpr auto CameraAnim = 0x100; // UCameraAnim*
		constexpr auto PlayRate = 0x108; // float
		constexpr auto PlayScale = 0x10c; // float
		constexpr auto BlendInTime = 0x110; // float
		constexpr auto blendOutTime = 0x114; // float
		constexpr auto bLooping = 0x118; // bool
	}

	namespace n_UEnvQueryTest_Dot { // : UEnvQueryTest
		constexpr auto LineA = 0x1c0; // FEnvDirection
		constexpr auto LineB = 0x1e0; // FEnvDirection
		constexpr auto TestMode = 0x200; // EEnvTestDot
		constexpr auto bAbsoluteValue = 0x201; // bool
	}

	namespace n_UNavArea_Null { // : UNavArea
		constexpr auto DefaultCost = 0x30; // float
		constexpr auto FixedAreaEnteringCost = 0x34; // float
		constexpr auto DrawColor = 0x38; // FColor
		constexpr auto SupportedAgents = 0x3c; // FNavAgentSelector
		constexpr auto bSupportsAgent0 = 0x40; // char : 1
		constexpr auto bSupportsAgent1 = 0x40; // char : 1
		constexpr auto bSupportsAgent2 = 0x40; // char : 1
		constexpr auto bSupportsAgent3 = 0x40; // char : 1
		constexpr auto bSupportsAgent4 = 0x40; // char : 1
		constexpr auto bSupportsAgent5 = 0x40; // char : 1
		constexpr auto bSupportsAgent6 = 0x40; // char : 1
		constexpr auto bSupportsAgent7 = 0x40; // char : 1
		constexpr auto bSupportsAgent8 = 0x41; // char : 1
		constexpr auto bSupportsAgent9 = 0x41; // char : 1
		constexpr auto bSupportsAgent10 = 0x41; // char : 1
		constexpr auto bSupportsAgent11 = 0x41; // char : 1
		constexpr auto bSupportsAgent12 = 0x41; // char : 1
		constexpr auto bSupportsAgent13 = 0x41; // char : 1
		constexpr auto bSupportsAgent14 = 0x41; // char : 1
		constexpr auto bSupportsAgent15 = 0x41; // char : 1
	}

	namespace n_ULevelStreamingAlwaysLoaded { // : ULevelStreaming
		constexpr auto WorldAsset = 0x28; // UWorld*
		constexpr auto PackageNameToLoad = 0x50; // FName
		constexpr auto LODPackageNames = 0x58; // TArray<FName>
		constexpr auto LevelTransform = 0x80; // FTransform
		constexpr auto LevelLODIndex = 0xb0; // int
		constexpr auto StreamingPriority = 0xb4; // int
		constexpr auto bShouldBeVisible = 0xba; // char : 1
		constexpr auto bShouldBeLoaded = 0xba; // char : 1
		constexpr auto bLocked = 0xba; // char : 1
		constexpr auto bIsStatic = 0xba; // char : 1
		constexpr auto bShouldBlockOnLoad = 0xba; // char : 1
		constexpr auto bShouldBlockOnUnload = 0xbb; // char : 1
		constexpr auto bDisableDistanceStreaming = 0xbb; // char : 1
		constexpr auto bDrawOnLevelStatusMap = 0xbb; // char : 1
		constexpr auto LevelColor = 0xbc; // FLinearColor
		constexpr auto EditorStreamingVolumes = 0xd0; // TArray<ALevelStreamingVolume*>
		constexpr auto MinTimeBetweenVolumeUnloadRequests = 0xe0; // float
		constexpr auto OnLevelLoaded = 0xe8; // FScriptMulticastDelegate
		constexpr auto OnLevelUnloaded = 0xf8; // FScriptMulticastDelegate
		constexpr auto OnLevelShown = 0x108; // FScriptMulticastDelegate
		constexpr auto OnLevelHidden = 0x118; // FScriptMulticastDelegate
		constexpr auto LoadedLevel = 0x128; // ULevel*
		constexpr auto PendingUnloadLevel = 0x130; // ULevel*
	}

	namespace n_UParticleModuleCollisionGPU { // : UParticleModuleCollisionBase
		constexpr auto Resilience = 0x30; // FRawDistributionFloat
		constexpr auto ResilienceScaleOverLife = 0x68; // FRawDistributionFloat
		constexpr auto Friction = 0xa0; // float
		constexpr auto RandomSpread = 0xa4; // float
		constexpr auto RandomDistribution = 0xa8; // float
		constexpr auto RadiusScale = 0xac; // float
		constexpr auto RadiusBias = 0xb0; // float
		constexpr auto response = 0xb4; // EParticleCollisionResponse
		constexpr auto CollisionMode = 0xb5; // EParticleCollisionMode
	}

	namespace n_USQMapTextComponent { // : USQMapItemComponent
		constexpr auto Text = 0x130; // FText
	}

	namespace n_USQCoreStateComponent { // : UActorComponent
		constexpr auto DataClass = 0xd8; // USQCoreStateData*
		constexpr auto DataObject = 0xe8; // USQCoreStateData*
		constexpr auto Connections = 0xf0; // TArray<USQCoreStateConnection*>
	}

	namespace n_UMaterialExpressionFrac { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UAISense_Damage { // : UAISense
		constexpr auto RegisteredEvents = 0x80; // TArray<FAIDamageEvent>
	}

	namespace n_USQSupporterPatchData { // : USQSteamItem
		constexpr auto PatchData = 0x40; // FSQPatchItem
	}

	namespace n_UBlackboardData { // : UDataAsset
		constexpr auto Parent = 0x30; // UBlackboardData*
		constexpr auto Keys = 0x38; // TArray<FBlackboardEntry>
		constexpr auto bHasSynchronizedKeys = 0x48; // char : 1
	}

	namespace n_UToFloatField { // : UFieldNodeFloat
		constexpr auto IntField = 0xd8; // UFieldNodeInt*
	}

	namespace n_UBP_Attachment_M150_C { // : USQWeaponAttachment_Scope
		constexpr auto MeshTransitionPercentage = 0x4b0; // float
		constexpr auto ADSMesh = 0x4b8; // UStaticMesh*
		constexpr auto ADSMeshTransform = 0x4c0; // FTransform
		constexpr auto NonADSMesh = 0x4f0; // UStaticMesh*
		constexpr auto NonADSMeshTransform = 0x500; // FTransform
		constexpr auto InToADSMeshTransitionSettings = 0x530; // TArray<FSQMeshTransitionSettings>
		constexpr auto OutFromADSMeshTransitionSettings = 0x540; // TArray<FSQMeshTransitionSettings>
	}

	namespace n_ABP_L85A2_DarkEarth_SUSAT_Foregrip_C { // : ABP_L85A2_DarkEarth_Foregrip_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
		constexpr auto Scope = 0x7b8; // UStaticMeshComponent*
	}

	namespace n_ABP_AK74MGP25_1P63_UGL_Smoke_Blue_C { // : ABP_AK74MGP25_1P63_UGL_Smoke_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UParticleModuleVectorFieldRotationRate { // : UParticleModuleVectorFieldBase
		constexpr auto RotationRate = 0x30; // FVector
	}

	namespace n_UMovieSceneMarginTrack { // : UMovieScenePropertyTrack
		constexpr auto SectionToKey = 0x58; // UMovieSceneSection*
		constexpr auto PropertyName = 0x60; // FName
		constexpr auto PropertyPath = 0x68; // FString
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_UHapticFeedbackEffect_Curve { // : UHapticFeedbackEffect_Base
		constexpr auto HapticDetails = 0x28; // FHapticFeedbackDetails_Curve
	}

	namespace n_ABP_M4M203_M68_UGL_Woodland_Smoke_Red_C { // : ABP_M4M203_M68_UGL_Woodland_Smoke_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UEnvQueryTest_Volume { // : UEnvQueryTest
		constexpr auto VolumeContext = 0x1c0; // UEnvQueryContext*
		constexpr auto VolumeClass = 0x1c8; // AVolume*
		constexpr auto bDoComplexVolumeTest = 0x1d0; // char : 1
	}

	namespace n_ASQAASRuleset { // : ASQGameModeRuleset
		constexpr auto GraphActor = 0x2a8; // ASQAASGraph*
	}

	namespace n_UParticleModuleTypeDataGpu { // : UParticleModuleTypeDataBase
		constexpr auto EmitterInfo = 0x30; // FGPUSpriteEmitterInfo
		constexpr auto ResourceData = 0x2f0; // FGPUSpriteResourceData
		constexpr auto CameraMotionBlurAmount = 0x450; // float
		constexpr auto bClearExistingParticlesOnInit = 0x454; // char : 1
	}

	namespace n_UPostProcessComponent { // : USceneComponent
		constexpr auto Settings = 0x220; // FPostProcessSettings
		constexpr auto Priority = 0x750; // float
		constexpr auto BlendRadius = 0x754; // float
		constexpr auto BlendWeight = 0x758; // float
		constexpr auto bEnabled = 0x75c; // char : 1
		constexpr auto bUnbound = 0x75c; // char : 1
	}

	namespace n_UBP_M17MHS_StaticInfo_C { // : UBP_Glock17_StaticInfo_C
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_AGameModeBase { // : AInfo
		constexpr auto OptionsString = 0x248; // FString
		constexpr auto GameSessionClass = 0x258; // AGameSession*
		constexpr auto GameStateClass = 0x260; // AGameStateBase*
		constexpr auto PlayerControllerClass = 0x268; // APlayerController*
		constexpr auto PlayerStateClass = 0x270; // APlayerState*
		constexpr auto HUDClass = 0x278; // AHUD*
		constexpr auto DefaultPawnClass = 0x280; // APawn*
		constexpr auto SpectatorClass = 0x288; // ASpectatorPawn*
		constexpr auto ReplaySpectatorPlayerControllerClass = 0x290; // APlayerController*
		constexpr auto ServerStatReplicatorClass = 0x298; // AServerStatReplicator*
		constexpr auto GameSession = 0x2a0; // AGameSession*
		constexpr auto GameState = 0x2a8; // AGameStateBase*
		constexpr auto ServerStatReplicator = 0x2b0; // AServerStatReplicator*
		constexpr auto DefaultPlayerName = 0x308; // FText
		constexpr auto bUseSeamlessTravel = 0x320; // char : 1
		constexpr auto bStartPlayersAsSpectators = 0x320; // char : 1
		constexpr auto bPauseable = 0x320; // char : 1
	}

	namespace n_ULevelStreamingPersistent { // : ULevelStreaming
		constexpr auto WorldAsset = 0x28; // UWorld*
		constexpr auto PackageNameToLoad = 0x50; // FName
		constexpr auto LODPackageNames = 0x58; // TArray<FName>
		constexpr auto LevelTransform = 0x80; // FTransform
		constexpr auto LevelLODIndex = 0xb0; // int
		constexpr auto StreamingPriority = 0xb4; // int
		constexpr auto bShouldBeVisible = 0xba; // char : 1
		constexpr auto bShouldBeLoaded = 0xba; // char : 1
		constexpr auto bLocked = 0xba; // char : 1
		constexpr auto bIsStatic = 0xba; // char : 1
		constexpr auto bShouldBlockOnLoad = 0xba; // char : 1
		constexpr auto bShouldBlockOnUnload = 0xbb; // char : 1
		constexpr auto bDisableDistanceStreaming = 0xbb; // char : 1
		constexpr auto bDrawOnLevelStatusMap = 0xbb; // char : 1
		constexpr auto LevelColor = 0xbc; // FLinearColor
		constexpr auto EditorStreamingVolumes = 0xd0; // TArray<ALevelStreamingVolume*>
		constexpr auto MinTimeBetweenVolumeUnloadRequests = 0xe0; // float
		constexpr auto OnLevelLoaded = 0xe8; // FScriptMulticastDelegate
		constexpr auto OnLevelUnloaded = 0xf8; // FScriptMulticastDelegate
		constexpr auto OnLevelShown = 0x108; // FScriptMulticastDelegate
		constexpr auto OnLevelHidden = 0x118; // FScriptMulticastDelegate
		constexpr auto LoadedLevel = 0x128; // ULevel*
		constexpr auto PendingUnloadLevel = 0x130; // ULevel*
	}

	namespace n_USphereReflectionCaptureComponent { // : UReflectionCaptureComponent
		constexpr auto InfluenceRadius = 0x290; // float
		constexpr auto CaptureDistanceScale = 0x294; // float
		constexpr auto PreviewInfluenceRadius = 0x298; // UDrawSphereComponent*
	}

	namespace n_UDistributionVectorConstant { // : UDistributionVector
		constexpr auto Constant = 0x38; // FVector
		constexpr auto bLockAxes = 0x44; // char : 1
		constexpr auto LockedAxes = 0x48; // EDistributionVectorLockFlags
	}

	namespace n_UPlayFabServerAPI { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnPlayFabResponse = 0x28; // FScriptMulticastDelegate
		constexpr auto CallAuthenticationContext = 0x8c0; // UPlayFabAuthenticationContext*
		constexpr auto RequestJsonObj = 0x8c8; // UPlayFabJsonObject*
		constexpr auto ResponseJsonObj = 0x8d0; // UPlayFabJsonObject*
	}

	namespace n_UMaterialInstanceConstant { // : UMaterialInstance
		constexpr auto PhysMaterial = 0x88; // UPhysicalMaterial*
		constexpr auto Parent = 0x90; // UMaterialInterface*
		constexpr auto bHasStaticPermutationResource = 0x9a; // char : 1
		constexpr auto bOverrideSubsurfaceProfile = 0x9a; // char : 1
		constexpr auto ScalarParameterValues = 0xa0; // TArray<FScalarParameterValue>
		constexpr auto VectorParameterValues = 0xb0; // TArray<FVectorParameterValue>
		constexpr auto TextureParameterValues = 0xc0; // TArray<FTextureParameterValue>
		constexpr auto FontParameterValues = 0xd0; // TArray<FFontParameterValue>
		constexpr auto BasePropertyOverrides = 0xe0; // FMaterialInstanceBasePropertyOverrides
		constexpr auto PermutationTextureReferences = 0xf8; // TArray<UObject*>
		constexpr auto StaticParameters = 0x108; // FStaticParameterSet
	}

	namespace n_UDistributionFloatUniformCurve { // : UDistributionFloat
		constexpr auto ConstantCurve = 0x38; // FInterpCurveVector2D
	}

	namespace n_USoundNodeGroupControl { // : USoundNode
		constexpr auto GroupSizes = 0x40; // TArray<int>
	}

	namespace n_UMaterialExpressionRuntimeVirtualTextureOutput { // : UMaterialExpressionCustomOutput
		constexpr auto BaseColor = 0x40; // FExpressionInput
		constexpr auto Specular = 0x54; // FExpressionInput
		constexpr auto Roughness = 0x68; // FExpressionInput
		constexpr auto Normal = 0x7c; // FExpressionInput
		constexpr auto Opacity = 0x90; // FExpressionInput
	}

	namespace n_ABP_RPG7_Frag_3Mag_C { // : ABP_RPG7_Frag_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
		constexpr auto MuzzleFlashRearComponent3P = 0x7b8; // UParticleSystemComponent*
		constexpr auto BackBlastComponent3P = 0x7c0; // UChildActorComponent*
		constexpr auto MuzzleFlashRearComponent1P = 0x7c8; // UParticleSystemComponent*
		constexpr auto SquadBlast = 0x7d0; // USQBlastComponent*
		constexpr auto BackBlastComponent1P = 0x7d8; // UChildActorComponent*
		constexpr auto BackblastSocket = 0x7e0; // FName
		constexpr auto BackblastEffect1P = 0x7e8; // UParticleSystem*
		constexpr auto BackblastEffect3P = 0x7f0; // UParticleSystem*
	}

	namespace n_AHUD { // : AActor
		constexpr auto PlayerOwner = 0x248; // APlayerController*
		constexpr auto bLostFocusPaused = 0x250; // char : 1
		constexpr auto bShowHUD = 0x250; // char : 1
		constexpr auto bShowDebugInfo = 0x250; // char : 1
		constexpr auto CurrentTargetIndex = 0x254; // int
		constexpr auto bShowHitBoxDebugInfo = 0x258; // char : 1
		constexpr auto bShowOverlays = 0x258; // char : 1
		constexpr auto bEnableDebugTextShadow = 0x258; // char : 1
		constexpr auto PostRenderedActors = 0x260; // TArray<AActor*>
		constexpr auto DebugDisplay = 0x278; // TArray<FName>
		constexpr auto ToggledDebugCategories = 0x288; // TArray<FName>
		constexpr auto Canvas = 0x298; // UCanvas*
		constexpr auto DebugCanvas = 0x2a0; // UCanvas*
		constexpr auto DebugTextList = 0x2a8; // TArray<FDebugTextInfo>
		constexpr auto ShowDebugTargetDesiredClass = 0x2b8; // AActor*
		constexpr auto ShowDebugTargetActor = 0x2c0; // AActor*
	}

	namespace n_USQArmorMeshComponent { // : UStaticMeshComponent
		constexpr auto ArmorInfo = 0x498; // TArray<FSQArmorInfo>
	}

	namespace n_ALightmassPortal { // : AActor
		constexpr auto PortalComponent = 0x248; // ULightmassPortalComponent*
	}

	namespace n_ASQPlayerCameraManager { // : APlayerCameraManager
		constexpr auto IgnoredShakeClasses = 0x26f8; // TArray<UCameraShake*>
		constexpr auto bDrawStencils = 0x2708; // bool
		constexpr auto bIgnoreInactiveEffects = 0x2709; // bool
		constexpr auto StencilPostProcessMaterial = 0x2710; // UMaterialInterface*
		constexpr auto CameraEffectTypes = 0x2718; // TArray<USQLocalCameraEffectHandler*>
		constexpr auto CameraEffects = 0x2728; // TArray<USQLocalCameraEffectHandler*>
		constexpr auto AudioEffectTypes = 0x2738; // TArray<USQLocalAudioEffectHandler*>
		constexpr auto AudioEffects = 0x2748; // TArray<USQLocalAudioEffectHandler*>
		constexpr auto CurrentSoldier = 0x2758; // ASQSoldier*
	}

	namespace n_UPrefabLevelExporter { // : UPrefabExporter
		constexpr auto SupportedClass = 0x28; // UObject*
		constexpr auto ExportRootScope = 0x30; // UObject*
		constexpr auto FormatExtension = 0x38; // TArray<FString>
		constexpr auto FormatDescription = 0x48; // TArray<FString>
		constexpr auto PreferredFormatIndex = 0x58; // int
		constexpr auto TextIndent = 0x5c; // int
		constexpr auto bText = 0x60; // char : 1
		constexpr auto bSelectedOnly = 0x60; // char : 1
		constexpr auto bForceFileOperations = 0x60; // char : 1
		constexpr auto ExportTask = 0x68; // UAssetExportTask*
	}

	namespace n_UBP_Attachment_M110_Front_C { // : USQWeaponAttachment_Scope
		constexpr auto MeshTransitionPercentage = 0x4b0; // float
		constexpr auto ADSMesh = 0x4b8; // UStaticMesh*
		constexpr auto ADSMeshTransform = 0x4c0; // FTransform
		constexpr auto NonADSMesh = 0x4f0; // UStaticMesh*
		constexpr auto NonADSMeshTransform = 0x500; // FTransform
		constexpr auto InToADSMeshTransitionSettings = 0x530; // TArray<FSQMeshTransitionSettings>
		constexpr auto OutFromADSMeshTransitionSettings = 0x540; // TArray<FSQMeshTransitionSettings>
	}

	namespace n_UNavigationInvokerComponent { // : UActorComponent
		constexpr auto TileGenerationRadius = 0xd8; // float
		constexpr auto TileRemovalRadius = 0xdc; // float
	}

	namespace n_UAISystemBase { // : UObject
		constexpr auto AISystemClassName = 0x28; // FSoftClassPath
		constexpr auto AISystemModuleName = 0x40; // FName
		constexpr auto bInstantiateAISystemOnClient = 0x50; // bool
	}

	namespace n_APlayerState { // : AInfo
		constexpr auto Score = 0x248; // float
		constexpr auto PlayerName = 0x250; // FString
		constexpr auto PlayerId = 0x270; // int
		constexpr auto Ping = 0x274; // char
		constexpr auto bShouldUpdateReplicatedPing = 0x276; // char : 1
		constexpr auto bIsSpectator = 0x276; // char : 1
		constexpr auto bOnlySpectator = 0x276; // char : 1
		constexpr auto bIsABot = 0x276; // char : 1
		constexpr auto bIsInactive = 0x276; // char : 1
		constexpr auto bFromPreviousLevel = 0x276; // char : 1
		constexpr auto StartTime = 0x278; // int
		constexpr auto EngineMessageClass = 0x280; // ULocalMessage*
		constexpr auto SavedNetworkAddress = 0x290; // FString
		constexpr auto UniqueID = 0x2a0; // FUniqueNetIdRepl
		constexpr auto PawnPrivate = 0x2d0; // APawn*
		constexpr auto PlayerNamePrivate = 0x350; // FString
	}

	namespace n_UInterpToMovementComponent { // : UMovementComponent
		constexpr auto Duration = 0x118; // float
		constexpr auto bPauseOnImpact = 0x11c; // char : 1
		constexpr auto bSweep = 0x120; // bool
		constexpr auto TeleportType = 0x121; // ETeleportType
		constexpr auto BehaviourType = 0x122; // EInterpToBehaviourType
		constexpr auto bCheckIfStillInWorld = 0x123; // bool
		constexpr auto bForceSubStepping = 0x124; // char : 1
		constexpr auto OnInterpToReverse = 0x128; // FScriptMulticastDelegate
		constexpr auto OnInterpToStop = 0x138; // FScriptMulticastDelegate
		constexpr auto OnWaitBeginDelegate = 0x148; // FScriptMulticastDelegate
		constexpr auto OnWaitEndDelegate = 0x158; // FScriptMulticastDelegate
		constexpr auto OnResetDelegate = 0x168; // FScriptMulticastDelegate
		constexpr auto MaxSimulationTimeStep = 0x178; // float
		constexpr auto MaxSimulationIterations = 0x17c; // int
		constexpr auto ControlPoints = 0x180; // TArray<FInterpControlPoint>
	}

	namespace n_USoundNodeOscillator { // : USoundNode
		constexpr auto bModulateVolume = 0x40; // char : 1
		constexpr auto bModulatePitch = 0x40; // char : 1
		constexpr auto AmplitudeMin = 0x44; // float
		constexpr auto AmplitudeMax = 0x48; // float
		constexpr auto FrequencyMin = 0x4c; // float
		constexpr auto FrequencyMax = 0x50; // float
		constexpr auto OffsetMin = 0x54; // float
		constexpr auto OffsetMax = 0x58; // float
		constexpr auto CenterMin = 0x5c; // float
		constexpr auto CenterMax = 0x60; // float
	}

	namespace n_USQBTTask_FindPointNearEnemy { // : UBTTask_BlackboardBase
		constexpr auto BlackboardKey = 0x70; // FBlackboardKeySelector
	}

	namespace n_AAbstractNavData { // : ANavigationData
		constexpr auto RenderingComp = 0x250; // UPrimitiveComponent*
		constexpr auto NavDataConfig = 0x258; // FNavDataConfig
		constexpr auto bEnableDrawing = 0x2c0; // char : 1
		constexpr auto bForceRebuildOnLoad = 0x2c0; // char : 1
		constexpr auto bCanBeMainNavData = 0x2c0; // char : 1
		constexpr auto bCanSpawnOnRebuild = 0x2c0; // char : 1
		constexpr auto bRebuildAtRuntime = 0x2c0; // char : 1
		constexpr auto RuntimeGeneration = 0x2c4; // ERuntimeGenerationType
		constexpr auto ObservedPathsTickInterval = 0x2c8; // float
		constexpr auto DataVersion = 0x2cc; // uint32
		constexpr auto SupportedAreas = 0x3a0; // TArray<FSupportedAreaData>
	}

	namespace n_USQTabButton { // : USQBaseButton
		constexpr auto ParentWidgetSwitcher = 0x2f0; // UWidgetSwitcher*
		constexpr auto MainBgImage = 0x2f8; // UImage*
		constexpr auto TabTextBlock = 0x300; // UTextBlock*
		constexpr auto OwnerPlayerState = 0x308; // ASQPlayerState*
	}

	namespace n_UArchVisCharMovementComponent { // : UCharacterMovementComponent
		constexpr auto RotationalAcceleration = 0x730; // FRotator
		constexpr auto RotationalDeceleration = 0x73c; // FRotator
		constexpr auto MaxRotationalVelocity = 0x748; // FRotator
		constexpr auto MinPitch = 0x754; // float
		constexpr auto MaxPitch = 0x758; // float
		constexpr auto WalkingFriction = 0x75c; // float
		constexpr auto WalkingSpeed = 0x760; // float
		constexpr auto WalkingAcceleration = 0x764; // float
	}

	namespace n_ABP_AK74M_Desert_C { // : ABP_AK74M_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_ASQCameraMan { // : ACharacter
		constexpr auto ListenerType = 0x660; // ESQListenerType
		constexpr auto BaseTurnRate = 0x664; // float
		constexpr auto BaseLookUpRate = 0x668; // float
		constexpr auto SpringArm = 0x670; // USpringArmComponent*
		constexpr auto FirstPersonCameraComponent = 0x678; // UCameraComponent*
		constexpr auto CameraManHUDIconTexture = 0x680; // UTexture*
		constexpr auto bIsTryingToGainAltitude = 0x688; // bool
		constexpr auto bIsTryingToLoseAltitude = 0x689; // bool
		constexpr auto StateObject = 0x6a0; // USQCoreStateComponent*
	}

	namespace n_UAbilityTask_ApplyRootMotionConstantForce { // : UAbilityTask_ApplyRootMotion_Base
		constexpr auto OnFinish = 0xb8; // FScriptMulticastDelegate
		constexpr auto WorldDirection = 0xc8; // FVector
		constexpr auto Strength = 0xd4; // float
		constexpr auto Duration = 0xd8; // float
		constexpr auto bIsAdditive = 0xdc; // bool
		constexpr auto StrengthOverTime = 0xe0; // UCurveFloat*
	}

	namespace n_USlider { // : UWidget
		constexpr auto Value = 0x108; // float
		constexpr auto ValueDelegate = 0x10c; // DelegateProperty
		constexpr auto MinValue = 0x11c; // float
		constexpr auto MaxValue = 0x120; // float
		constexpr auto WidgetStyle = 0x128; // FSliderStyle
		constexpr auto Orientation = 0x468; // EOrientation
		constexpr auto SliderBarColor = 0x46c; // FLinearColor
		constexpr auto SliderHandleColor = 0x47c; // FLinearColor
		constexpr auto IndentHandle = 0x48c; // bool
		constexpr auto Locked = 0x48d; // bool
		constexpr auto MouseUsesStep = 0x48e; // bool
		constexpr auto RequiresControllerLock = 0x48f; // bool
		constexpr auto StepSize = 0x490; // float
		constexpr auto IsFocusable = 0x494; // bool
		constexpr auto OnMouseCaptureBegin = 0x498; // FScriptMulticastDelegate
		constexpr auto OnMouseCaptureEnd = 0x4a8; // FScriptMulticastDelegate
		constexpr auto OnControllerCaptureBegin = 0x4b8; // FScriptMulticastDelegate
		constexpr auto OnControllerCaptureEnd = 0x4c8; // FScriptMulticastDelegate
		constexpr auto OnValueChanged = 0x4d8; // FScriptMulticastDelegate
	}

	namespace n_USQMapItemComponent { // : UActorComponent
		constexpr auto Tint = 0xd8; // FLinearColor
		constexpr auto CustomWorldPosition = 0xe8; // FVector2D
		constexpr auto bUseCustomWorldPosition = 0xf0; // bool
		constexpr auto bUseWorldRotation = 0xf1; // bool
		constexpr auto Rotation = 0xf4; // float
		constexpr auto RotPivot = 0xf8; // FVector2D
		constexpr auto Size = 0x100; // FVector2D
		constexpr auto Offset = 0x108; // FVector2D
		constexpr auto DrawModeX = 0x110; // ESQMapItemDrawMode
		constexpr auto DrawModeY = 0x111; // ESQMapItemDrawMode
		constexpr auto bIsVisible = 0x112; // bool
		constexpr auto TeamIndex = 0x114; // int
		constexpr auto SquadId = 0x118; // int
		constexpr auto MapMarkerType = 0x11c; // ESQMapMarkerType
		constexpr auto MapMarkerVisibleTo = 0x11d; // ESQMapMarkerVisibleTo
		constexpr auto Type = 0x11e; // ESQMapItemType
		constexpr auto CustomMapWidget = 0x120; // USQMapIconWidget*
	}

	namespace n_UHighlightsCloseGroupAsync { // : UBlueprintAsyncActionBase
		constexpr auto OnSuccess = 0x30; // FScriptMulticastDelegate
		constexpr auto OnFailure = 0x40; // FScriptMulticastDelegate
	}

	namespace n_ATriggerBase { // : AActor
		constexpr auto CollisionComponent = 0x248; // UShapeComponent*
	}

	namespace n_ABP_AK74MGP25_UGL_Desert_Smoke_Red_C { // : ABP_AK74MGP25_UGL_Desert_Smoke_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_USQSquadMemberListItem { // : USQUserWidget
		constexpr auto RankTextures = 0x230; // TArray<UTexture2D*>
		constexpr auto ActionMenuBtnCPP = 0x240; // UButton*
		constexpr auto PromoteToSLBtnCPP = 0x248; // UButton*
		constexpr auto KickBtnCPP = 0x250; // UButton*
		constexpr auto SLInviteBtnCPP = 0x258; // UButton*
		constexpr auto MenuPanelsCPP = 0x260; // TArray<UVerticalBox*>
		constexpr auto KitBGCPP = 0x270; // UImage*
		constexpr auto KitIconCPP = 0x278; // UImage*
		constexpr auto NamePCPP = 0x280; // UTextBlock*
		constexpr auto NameBGCPP = 0x288; // UImage*
		constexpr auto RankBGCPP = 0x290; // UImage*
		constexpr auto RankIconCPP = 0x298; // UImage*
		constexpr auto VehicleBGCPP = 0x2a0; // UImage*
		constexpr auto VehicleIconCPP = 0x2a8; // UImage*
		constexpr auto WeaponIconCPP = 0x2b0; // UImage*
		constexpr auto PlayerNameCPP = 0x2b8; // UTextBlock*
		constexpr auto PlayerStateIdentifier = 0x2c0; // ASQPlayerState*
		constexpr auto bIsHovering = 0x2cc; // bool
		constexpr auto Manager = 0x2d8; // USQSquadMemberList*
	}

	namespace n_UAREnvironmentCaptureProbe { // : UARTrackedGeometry
		constexpr auto EnvironmentCaptureTexture = 0xf8; // UAREnvironmentCaptureProbeTexture*
	}

	namespace n_USQCommanderVotingWidget { // : USQUserWidget
		constexpr auto bIsVotingAvailable = 0x230; // bool
		constexpr auto bIsVotePending = 0x231; // bool
		constexpr auto bIsVoteInProgress = 0x232; // bool
		constexpr auto VoteItemClass = 0x238; // USQCommanderVotingPlayerItem*
		constexpr auto VoteItemsParent = 0x240; // UPanelWidget*
	}

	namespace n_UParticleModuleLocationPrimitiveSphere { // : UParticleModuleLocationPrimitiveBase
		constexpr auto StartRadius = 0xc0; // FRawDistributionFloat
	}

	namespace n_APrecomputedVisibilityOverrideVolume { // : AVolume
		constexpr auto OverrideVisibleActors = 0x280; // TArray<AActor*>
		constexpr auto OverrideInvisibleActors = 0x290; // TArray<AActor*>
		constexpr auto OverrideInvisibleLevels = 0x2a0; // TArray<FName>
	}

	namespace n_USkeletalMeshSimplificationSettings { // : UDeveloperSettings
		constexpr auto SkeletalMeshReductionModuleName = 0x38; // FName
	}

	namespace n_ABP_40MM_Smoke_Proj2_C { // : ABP_40MM_Proj2_C
		constexpr auto Effect = 0x548; // UParticleSystemComponent*
		constexpr auto SmokeEffect = 0x550; // UParticleSystem*
		constexpr auto SmokeSound = 0x558; // USoundCue*
	}

	namespace n_UBlackboardKeyType_String { // : UBlackboardKeyType
		constexpr auto StringValue = 0x30; // FString
	}

	namespace n_ASQHUD { // : AHUD
		constexpr auto InputStateStack = 0x338; // TArray<FSQInputState>
		constexpr auto bTraceViewEnabled = 0x348; // bool
		constexpr auto VehicleOverlayWidget = 0x350; // USQVehicleViewWidget*
		constexpr auto BaseHudWidget = 0x358; // USQBaseHudWidget*
		constexpr auto CurrentlyShownHudMarker = 0x360; // ASQMapMarker*
		constexpr auto bEndOfRound = 0x368; // bool
		constexpr auto MapTopPadding = 0x36c; // float
		constexpr auto MapRightPadding = 0x370; // float
		constexpr auto MapBottomPadding = 0x374; // float
		constexpr auto MapMaxWidthRatio = 0x378; // float
		constexpr auto MapGridLetterColor = 0x37c; // FLinearColor
		constexpr auto SquadToSquadRadioColor = 0x38c; // FLinearColor
		constexpr auto SquadToAllSquadsRadioColor = 0x39c; // FLinearColor
		constexpr auto MapGridLetterPadding = 0x3ac; // float
		constexpr auto MapGridLetterScale = 0x3b0; // float
		constexpr auto LineOfSightDrawTextCache = 0x3b8; // TArray<AActor*>
		constexpr auto SelectionHUB = 0x3c8; // USQCoreStateSelectionHUB*
		constexpr auto MapComponent = 0x3d0; // USQCoreStateMapComponent*
		constexpr auto MapWidgetBase = 0x3d8; // USQMapWidgetBase*
		constexpr auto SpawnPointsListComponent = 0x3e0; // USQCoreStateSpawnPointsListComponent*
		constexpr auto SquadListComponent = 0x3e8; // USQCoreStateSquadListComponent*
		constexpr auto RoleSquadListComponent = 0x3f0; // USQCoreStateRolesSquadListComponent*
		constexpr auto NetworkPolling = 0x3f8; // USQNetworkPollingComponent*
		constexpr auto HUDMainTexture = 0x438; // UTexture2D*
		constexpr auto LowHealthOverlayTexture = 0x440; // UTexture2D*
		constexpr auto CircularProgressMaterial = 0x448; // UMaterialInterface*
		constexpr auto CircularProgressMaterialPercentageName = 0x450; // FName
		constexpr auto CircularProgressMaterialTransparencyName = 0x458; // FName
		constexpr auto CircularProgressMaterialColorName = 0x460; // FName
		constexpr auto CircularProgressMIDMap = 0x468; // TMap<ASQSoldier*, UMaterialInstanceDynamic*>
		constexpr auto MedicIconTexture = 0x4b8; // UTexture*
		constexpr auto HealedIconTexture = 0x4c0; // UTexture*
		constexpr auto DragIconTexture = 0x4c8; // UTexture*
		constexpr auto VehicleRepairIconTexture = 0x4d0; // UTexture*
		constexpr auto BleedingIconTexture = 0x4d8; // UTexture*
		constexpr auto ItemCollisionIconTexture = 0x4e0; // UTexture*
		constexpr auto BigFont = 0x4e8; // UFont*
		constexpr auto NormalFont = 0x4f0; // UFont*
		constexpr auto NametagFont = 0x4f8; // UFont*
		constexpr auto ChatMessageFont = 0x500; // UFont*
		constexpr auto SystemMessageFont = 0x508; // UFont*
		constexpr auto TicketTextColor = 0x510; // FLinearColor
		constexpr auto RemoteTalkers = 0x520; // TArray<FSQRemoteTalkerDisplayInfo>
		constexpr auto TestTalkers = 0x530; // TArray<FSQRemoteTalkerDisplayInfo>
		constexpr auto bUseTestTalkers = 0x540; // bool
		constexpr auto OwnerSpeakingState = 0x541; // ESQVoiceChannel
		constexpr auto ChatBoxInfo = 0x548; // FSQMessageBoxInfo
		constexpr auto SystemMessageBoxInfo = 0x5c0; // FSQMessageBoxInfo
		constexpr auto GameNotificationBoxInfo = 0x638; // FSQMessageBoxInfo
		constexpr auto PlayerNotificationBoxInfo = 0x6b0; // FSQMessageBoxInfo
		constexpr auto SystemMessagesColor = 0x728; // FLinearColor
		constexpr auto bShouldOffsetSpawnText = 0x73c; // char : 1
		constexpr auto bShouldShowEnemyFobWidgets = 0x73c; // char : 1
		constexpr auto StartingMapZoomLevel = 0x740; // int
		constexpr auto MapZoomLevels = 0x748; // TArray<float>
		constexpr auto ScoreBoard = 0x788; // USQScoreboard*
		constexpr auto ChatDrawingWidget = 0x790; // USQDrawChatWidget*
		constexpr auto NametagDistantVisibilityDropoffStart = 0x7a8; // float
		constexpr auto NametagDistantVisibilityDropoffFinish = 0x7ac; // float
		constexpr auto NametagDistantVisibilitySize = 0x7b0; // float
		constexpr auto NametagNearVerticalOffset = 0x7b4; // float
		constexpr auto NametagFarVerticalOffset = 0x7b8; // float
		constexpr auto NametagNearVerticalInterpStart = 0x7bc; // float
		constexpr auto NametagFadingInterpStart = 0x7c0; // float
		constexpr auto UsableDistantVisibilityDropoffStart = 0x7c4; // float
		constexpr auto UsableDistantVisibilityDropoffFinish = 0x7c8; // float
		constexpr auto UsableDistantVisibilitySize = 0x7cc; // float
		constexpr auto UsableNearVerticalOffset = 0x7d0; // float
		constexpr auto UsableFarVerticalOffset = 0x7d4; // float
		constexpr auto UsableNearVerticalInterpStart = 0x7d8; // float
		constexpr auto UsableFadingInterpStart = 0x7dc; // float
		constexpr auto EnemyColor = 0x7e0; // FLinearColor
		constexpr auto TeamColor = 0x7f0; // FLinearColor
		constexpr auto SquadColor = 0x800; // FLinearColor
		constexpr auto FireTeamColor = 0x810; // FLinearColor
		constexpr auto NametagOutlineColor = 0x820; // FLinearColor
		constexpr auto MaxDistanceToShowHUDIcons = 0x830; // float
		constexpr auto MaxDistanceToShowWoundedHUDIcons = 0x834; // float
		constexpr auto MaxDistanceToShowDragHUDIcons = 0x838; // float
		constexpr auto BoneForDragIcon = 0x83c; // FName
		constexpr auto DragIconXOffset = 0x844; // float
		constexpr auto DragIconYOffset = 0x848; // float
		constexpr auto DragHUDIconColor = 0x84c; // FLinearColor
		constexpr auto DragHUDIconSizeMultiplier = 0x85c; // float
		constexpr auto BoneForBleedingIcon = 0x860; // FName
		constexpr auto HUDIconOffset = 0x868; // FVector
		constexpr auto HUDIconCrouchedOffset = 0x874; // FVector
		constexpr auto HUDIconProneOffset = 0x880; // FVector
		constexpr auto HUDIconWoundedOffset = 0x88c; // FVector
		constexpr auto HUDIconFarSize = 0x898; // float
		constexpr auto HUDIconNearSize = 0x89c; // float
		constexpr auto HealedIconOffset = 0x8a0; // FVector2D
		constexpr auto HealedIconSize = 0x8a8; // FVector2D
		constexpr auto ItemCollisionIconOffset = 0x8b0; // FVector2D
		constexpr auto ItemCollisionIconSize = 0x8b8; // FVector2D
		constexpr auto MaxTimeSinceLastHealedToDrawHealedIcon = 0x8c0; // float
		constexpr auto MaxTimeSinceLastRepairedToDrawRepairedIcon = 0x8c4; // float
		constexpr auto HealthColorCurve = 0x8c8; // UCurveLinearColor*
		constexpr auto bHudWidgetsEnabled = 0x8d0; // bool
		constexpr auto OnChatReceived = 0x8e8; // FScriptMulticastDelegate
		constexpr auto CommandVoiceStartingSound = 0x8f8; // USoundBase*
		constexpr auto CommandVoiceEndingSound = 0x900; // USoundBase*
		constexpr auto SquadVoiceStartingSound = 0x908; // USoundBase*
		constexpr auto SquadVoiceEndingSound = 0x910; // USoundBase*
		constexpr auto LedColorScheme = 0x920; // FSQLedColorScheme
		constexpr auto ColorsDataAsset = 0x9f0; // USQColorsDataAsset*
		constexpr auto ChatEnumObj = 0x9f8; // UEnum*
		constexpr auto OnWorldOriginUpdated = 0xa00; // FScriptMulticastDelegate
	}

	namespace n_UM9A1_beretta_Skeleton_AnimBlueprint_C { // : USQWeaponAnimInstance
		constexpr auto UberGraphFrame = 0x2b0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root_8E65C44940820A1F12B793937B1D8535 = 0x2b8; // FAnimNode_Root
		constexpr auto AnimGraphNode_LayeredBoneBlend_64C8B407467B62C8941E248426E538A6 = 0x2e8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_36AA9BB84117A4D6C9B8D6B0A4126E88 = 0x3a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot_AD09D28A4DA793462E295EB32C138F1B = 0x420; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_167736564A33C82E1DA081A7B9B97975 = 0x468; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_932A6F5C4EB65633CEC5DA872A7F7D4B = 0x4b0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_LocalRefPose_1ADEA3D9497AF5DE4789A5BD8D5FE6C9 = 0x4f8; // FAnimNode_RefPose
	}

	namespace n_ABP_40MM_VOG_Smoke_Proj2_C { // : ABP_40MM_Smoke_Proj2_C
		constexpr auto Effect = 0x548; // UParticleSystemComponent*
		constexpr auto SmokeEffect = 0x550; // UParticleSystem*
		constexpr auto SmokeSound = 0x558; // USoundCue*
	}

	namespace n_UChildActorComponent { // : USceneComponent
		constexpr auto ChildActorClass = 0x218; // AActor*
		constexpr auto ChildActor = 0x220; // AActor*
		constexpr auto ChildActorTemplate = 0x228; // AActor*
	}

	namespace n_USoundGroups { // : UObject
		constexpr auto SoundGroupProfiles = 0x28; // TArray<FSoundGroup>
	}

	namespace n_ABP_L85A2AG36_UGL_Parent_C { // : ABP_Weapon2_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_USpacer { // : UWidget
		constexpr auto Size = 0x108; // FVector2D
	}

	namespace n_UParticleModuleVectorFieldScaleOverLife { // : UParticleModuleVectorFieldBase
		constexpr auto VectorFieldScaleOverLife = 0x30; // UDistributionFloat*
		constexpr auto VectorFieldScaleOverLifeRaw = 0x38; // FRawDistributionFloat
	}

	namespace n_UBTDecorator_Blackboard { // : UBTDecorator_BlackboardBase
		constexpr auto IntValue = 0x90; // int
		constexpr auto FloatValue = 0x94; // float
		constexpr auto StringValue = 0x98; // FString
		constexpr auto CachedDescription = 0xa8; // FString
		constexpr auto OperationType = 0xb8; // char
		constexpr auto NotifyObserver = 0xb9; // EBTBlackboardRestart
	}

	namespace n_USQRadialIconButton { // : USQRadialButton
		constexpr auto SmallOuterRimDistOffset = 0x2f8; // FVector2D
		constexpr auto MediumOuterRimDistOffset = 0x300; // FVector2D
		constexpr auto LargeOuterRimDistOffset = 0x308; // FVector2D
		constexpr auto SmallIconDistOffset = 0x310; // FVector2D
		constexpr auto MediumIconDistOffset = 0x318; // FVector2D
		constexpr auto LargeIconDistOffset = 0x320; // FVector2D
		constexpr auto InnerHoverImage = 0x328; // UImage*
		constexpr auto IconImage = 0x330; // UImage*
		constexpr auto OuterRimImage = 0x338; // UImage*
		constexpr auto IconImageTexture = 0x340; // UTexture2D*
		constexpr auto IconImageActiveColor = 0x348; // FLinearColor
		constexpr auto IconImageInactiveColor = 0x358; // FLinearColor
		constexpr auto IconImageHoveredColor = 0x368; // FLinearColor
		constexpr auto IconImagePressedColor = 0x378; // FLinearColor
		constexpr auto InnerHoverSmallImageTexture = 0x388; // UTexture2D*
		constexpr auto InnerHoverMediumImageTexture = 0x390; // UTexture2D*
		constexpr auto InnerHoverLargeImageTexture = 0x398; // UTexture2D*
		constexpr auto InnerHoverInactiveColor = 0x3a0; // FLinearColor
		constexpr auto InnerHoverHoveredColor = 0x3b0; // FLinearColor
		constexpr auto InnerHoverPressedColor = 0x3c0; // FLinearColor
		constexpr auto OuterRimSmallImageTexture = 0x3d0; // UTexture2D*
		constexpr auto OuterRimMediumImageTexture = 0x3d8; // UTexture2D*
		constexpr auto OuterRimLargeImageTexture = 0x3e0; // UTexture2D*
		constexpr auto OuterRimActiveColor = 0x3e8; // FLinearColor
		constexpr auto OuterRimInactiveColor = 0x3f8; // FLinearColor
		constexpr auto IconSize = 0x408; // float
	}

	namespace n_ABP_M4M203_UGL_Smoke_C { // : ABP_M4M203_UGL_Parent_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UMaterialExpressionObjectPositionWS { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UVerticalBoxSlot { // : UPanelSlot
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto Size = 0x48; // FSlateChildSize
		constexpr auto HorizontalAlignment = 0x50; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x51; // EVerticalAlignment
	}

	namespace n_UMovieScene3DConstraintSection { // : UMovieSceneSection
		constexpr auto ConstraintId = 0xe0; // FGuid
		constexpr auto ConstraintBindingID = 0xf0; // FMovieSceneObjectBindingID
	}

	namespace n_UAbilityTask_WaitInputPress { // : UAbilityTask
		constexpr auto OnPress = 0x80; // FScriptMulticastDelegate
	}

	namespace n_ABP_AK74M_1P63_Tracer_Desert_C { // : ABP_AK74M_1P63_Tracer_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UInterpTrackInstToggle { // : UInterpTrackInst
		constexpr auto Action = 0x28; // ETrackToggleAction
		constexpr auto LastUpdatePosition = 0x2c; // float
		constexpr auto bSavedActiveState = 0x30; // char : 1
	}

	namespace n_ABP_AK74MGP25_1P78_UGL_Desert_Smoke_Red_C { // : ABP_AK74MGP25_1P78_UGL_Desert_Smoke_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_ASQVehicleResource { // : AActor
		constexpr auto ResourceDropQuantity = 0x248; // float
		constexpr auto ResourceDropRate = 0x24c; // float
		constexpr auto ServerResourceRate = 0x250; // float
		constexpr auto CurrentFob = 0x258; // ASQForwardBase*
		constexpr auto CurrentCaptureZone = 0x260; // AActor*
		constexpr auto ParentInventory = 0x268; // USQVehicleResourceWeaponInventoryComponent*
		constexpr auto MaxResources = 0x278; // int
		constexpr auto Resources = 0x27c; // int
	}

	namespace n_UAnimationSharingManager { // : UObject
		constexpr auto Skeletons = 0x28; // TArray<USkeleton*>
		constexpr auto PerSkeletonData = 0x38; // TArray<UAnimSharingInstance*>
	}

	namespace n_USQEmplacementUIStaticDataAsset { // : USQVehicleUIStaticDataAsset
		constexpr auto MapIcon = 0x30; // UTexture2D*
		constexpr auto MapIconRotation = 0x38; // float
		constexpr auto SideImage = 0x40; // UTexture2D*
		constexpr auto FrontImage = 0x48; // UTexture2D*
	}

	namespace n_USQTeamInfo { // : UObject
		constexpr auto ShortName = 0x28; // FString
		constexpr auto Name = 0x38; // FString
		constexpr auto Description = 0x48; // FText
		constexpr auto CommanderRequirementsText = 0x60; // FText
		constexpr auto bBuddyRallyPointEnabled = 0x78; // bool
		constexpr auto SoldierClass = 0x80; // ASQSoldier*
		constexpr auto RallyPointMesh = 0x88; // UStaticMesh*
		constexpr auto Roles = 0x90; // TArray<USQRoleSettings*>
		constexpr auto GroupLimits = 0xa0; // TArray<FSQRoleGroupLimit>
		constexpr auto DeployableFOBLimits = 0xb0; // TArray<FSQDeployableLimit>
		constexpr auto DefaultRole = 0xc0; // USQRoleSettings*
		constexpr auto LeaveSquadRole = 0xc8; // USQRoleSettings*
		constexpr auto MapFlag = 0xd0; // UTexture2D*
		constexpr auto HudFlag = 0xd8; // UTexture2D*
		constexpr auto HudBadge = 0xe0; // UTexture2D*
		constexpr auto TeamImage = 0xe8; // UTexture2D*
		constexpr auto CommanderSoundsList = 0xf0; // FSQCommanderSounds
		constexpr auto TeamEventSoundsList = 0x230; // FSQTeamEventSounds
		constexpr auto MedicCall = 0x2f8; // FSQMedicCalls
		constexpr auto ObjectiveSoundsList = 0x370; // TArray<FSQObjectiveSounds>
	}

	namespace n_ABP_L85A2AG36_ElcanLDS_UGL_DarkEarth_Smoke_Blue_C { // : ABP_L85A2AG36_ElcanLDS_UGL_DarkEarth_Smoke_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_ABP_L85A2AG36_ElcanLDS_UGL_HE_C { // : ABP_L85A2AG36_ElcanLDS_UGL_Parent_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UBP_GenericMelee_StaticInfo_C { // : UBP_GenericWeapon_StaticInfo_C
		constexpr auto BP_MeleeNoHitSoldier1pMontage = 0x950; // UAnimMontage*
		constexpr auto BP_MeleeHitSoldier1pMontage = 0x958; // UAnimMontage*
		constexpr auto BP_MeleeNoHitSoldier3pMontage = 0x960; // UAnimMontage*
		constexpr auto BP_MeleeNoHitSoldierWeaponMontage = 0x968; // UAnimMontage*
		constexpr auto BP_MeleeHitSoldier3pMontage = 0x970; // UAnimMontage*
		constexpr auto BP_MeleeHitSoldierWeaponMontage = 0x978; // UAnimMontage*
	}

	namespace n_UInputComponent { // : UActorComponent
		constexpr auto CachedKeyToActionInfo = 0x148; // TArray<FCachedKeyToActionInfo>
	}

	namespace n_UNavModifierComponent { // : UNavRelevantComponent
		constexpr auto AreaClass = 0x108; // UNavArea*
		constexpr auto FailsafeExtent = 0x110; // FVector
		constexpr auto bIncludeAgentHeight = 0x11c; // char : 1
	}

	namespace n_UARPin { // : UObject
		constexpr auto TrackedGeometry = 0x28; // UARTrackedGeometry*
		constexpr auto PinnedComponent = 0x30; // USceneComponent*
		constexpr auto LocalToTrackingTransform = 0x40; // FTransform
		constexpr auto LocalToAlignedTrackingTransform = 0x70; // FTransform
		constexpr auto TrackingState = 0xa0; // EARTrackingState
		constexpr auto OnARTrackingStateChanged = 0xc0; // FScriptMulticastDelegate
		constexpr auto OnARTransformUpdated = 0xd0; // FScriptMulticastDelegate
	}

	namespace n_UMovieSceneLevelVisibilityTrack { // : UMovieSceneNameableTrack
		constexpr auto Sections = 0x58; // TArray<UMovieSceneSection*>
	}

	namespace n_ABP_M72A7_Founders_C { // : ABP_GenericRocketLauncher_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
		constexpr auto MuzzleFlashRearComponent3P = 0x7b8; // UParticleSystemComponent*
		constexpr auto BackBlastComponent3P = 0x7c0; // UChildActorComponent*
		constexpr auto MuzzleFlashRearComponent1P = 0x7c8; // UParticleSystemComponent*
		constexpr auto SquadBlast = 0x7d0; // USQBlastComponent*
		constexpr auto BackBlastComponent1P = 0x7d8; // UChildActorComponent*
		constexpr auto BackblastSocket = 0x7e0; // FName
		constexpr auto BackblastEffect1P = 0x7e8; // UParticleSystem*
		constexpr auto BackblastEffect3P = 0x7f0; // UParticleSystem*
	}

	namespace n_UBP_AK74MGP25_UGL_Optic_HE_StaticInfo_C { // : UBP_AK74MGP25_UGL_Optic_Parent_StaticInfo_C
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_UBP_SQFaction_C { // : USQFaction
		constexpr auto GruntVoiceTable = 0x80; // UDataTable*
		constexpr auto SLVoiceTable = 0x88; // UDataTable*
		constexpr auto Alliance = 0x90; // SQEAlliance
		constexpr auto TheatersOfOperations = 0x98; // TSet<SQETheatersOfOperations>
	}

	namespace n_USQLayerTeamConfig { // : UObject
		constexpr auto Index = 0x28; // ESQTeam
		constexpr auto SpecificFactionSetup = 0x30; // USQFactionSetup*
		constexpr auto Tickets = 0x58; // int
		constexpr auto PlayerPercentage = 0x5c; // int
	}

	namespace n_USQServerListItemWidget { // : UUserWidget
		constexpr auto ItemIndex = 0x230; // int
		constexpr auto SessionResult = 0x238; // FBlueprintSessionResult
		constexpr auto ServerName = 0x2f0; // FString
		constexpr auto bAnticheatProtected = 0x300; // bool
		constexpr auto bIsModded = 0x301; // bool
		constexpr auto bIsWhitelisted = 0x302; // bool
		constexpr auto GameVersion = 0x308; // FString
		constexpr auto SessionFlagStruct = 0x318; // FSQSessionFlagStruct
		constexpr auto ServerHealth = 0x320; // int
		constexpr auto bLicensedServer = 0x324; // bool
		constexpr auto MatchTimeout = 0x328; // int
		constexpr auto bPasswordProtected = 0x32c; // bool
		constexpr auto LayerNameString = 0x330; // FString
		constexpr auto Layer = 0x340; // USQLayer*
		constexpr auto LayerName = 0x348; // FText
		constexpr auto PlayedTime = 0x360; // FTimespan
		constexpr auto TeamOneFactionSetup = 0x368; // USQFactionSetup*
		constexpr auto TeamTwoFactionSetup = 0x370; // USQFactionSetup*
		constexpr auto GameMode = 0x378; // FString
		constexpr auto Ping = 0x388; // int
		constexpr auto NumPlayers = 0x38c; // int
		constexpr auto MaxNumPlayers = 0x390; // int
		constexpr auto NumReservedSlots = 0x394; // int
		constexpr auto NumQueuedTotal = 0x398; // int
		constexpr auto NumQueuedPublic = 0x39c; // int
		constexpr auto PublicQueueLimit = 0x3a0; // int
		constexpr auto NumQueuedReservedMembers = 0x3a4; // int
		constexpr auto ModDetailsRequest = 0x3a8; // FSQModInfoRequest
		constexpr auto ModLoadProgressArray = 0x3c0; // TArray<FSQModLoadProgress>
	}

	namespace n_UAISense_Hearing { // : UAISense
		constexpr auto NoiseEvents = 0x80; // TArray<FAINoiseEvent>
		constexpr auto SpeedOfSoundSq = 0x90; // float
	}

	namespace n_UNavigationDataChunk { // : UObject
		constexpr auto NavigationDataName = 0x28; // FName
	}

	namespace n_ASceneCaptureCube { // : ASceneCapture
		constexpr auto CaptureComponentCube = 0x258; // USceneCaptureComponentCube*
	}

	namespace n_UScaleBoxSlot { // : UPanelSlot
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_ASQVehicleSeat { // : ASQPawn
		constexpr auto ADSSpeed = 0x358; // float
		constexpr auto PitchLimit = 0x35c; // float
		constexpr auto MinPitchLimit = 0x360; // float
		constexpr auto YawLimit = 0x364; // float
		constexpr auto MinYawLimit = 0x368; // float
		constexpr auto ParentSeatComponent = 0x370; // USQVehicleSeatComponent*
		constexpr auto ListenerType = 0x378; // ESQListenerType
		constexpr auto bIsCameraInitialized = 0x379; // bool
		constexpr auto bShouldSendClientSideCameraUpdate = 0x37a; // bool
		constexpr auto VehicleComponents = 0x380; // TArray<USQVehicleComponent*>
		constexpr auto CachedVehicleEngine = 0x390; // USQVehicleComponent*
		constexpr auto bTurnOut = 0x398; // bool
		constexpr auto CachedVehicleInventory = 0x3a0; // USQVehicleInventoryComponent*
		constexpr auto CachedCameraComponent = 0x3a8; // UCameraComponent*
		constexpr auto SeatHealth = 0x3b0; // float
		constexpr auto FreeLookComponent = 0x3b8; // USQFreeLookComponent*
		constexpr auto MovementComponentManager = 0x3c0; // USQMovementComponentManager*
	}

	namespace n_UPlayer { // : UObject
		constexpr auto PlayerController = 0x30; // APlayerController*
		constexpr auto CurrentNetSpeed = 0x38; // int
		constexpr auto ConfiguredInternetSpeed = 0x3c; // int
		constexpr auto ConfiguredLanSpeed = 0x40; // int
	}

	namespace n_USQSquadStateMapData { // : USQSquadStateData
		constexpr auto MapWidgetClass = 0x120; // USQCoreStateMapWidget*
		constexpr auto WorldLocationTolerance = 0x128; // float
		constexpr auto bInterpolateWorldLocation = 0x12c; // bool
		constexpr auto bUseWorldRotation = 0x12d; // bool
		constexpr auto YawTolerance = 0x130; // float
		constexpr auto bInterpolateYaw = 0x134; // bool
		constexpr auto WorldLocation = 0x138; // FVector
		constexpr auto Yaw = 0x144; // float
		constexpr auto PackedYaw = 0x148; // char
		constexpr auto RepWorldLocation = 0x154; // FVector_NetQuantize
	}

	namespace n_UMaterialExpressionDivide { // : UMaterialExpression
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_UBP_L85A2AG36_ACOG_StaticInfo_C { // : UBP_L85A2AG36_StaticInfo_C
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_UBP_Attachment_M150_Founders_C { // : UBP_Attachment_M150_C
		constexpr auto MeshTransitionPercentage = 0x4b0; // float
		constexpr auto ADSMesh = 0x4b8; // UStaticMesh*
		constexpr auto ADSMeshTransform = 0x4c0; // FTransform
		constexpr auto NonADSMesh = 0x4f0; // UStaticMesh*
		constexpr auto NonADSMeshTransform = 0x500; // FTransform
		constexpr auto InToADSMeshTransitionSettings = 0x530; // TArray<FSQMeshTransitionSettings>
		constexpr auto OutFromADSMeshTransitionSettings = 0x540; // TArray<FSQMeshTransitionSettings>
	}

	namespace n_UMaterialExpressionFunctionOutput { // : UMaterialExpression
		constexpr auto OutputName = 0x40; // FName
		constexpr auto Description = 0x48; // FString
		constexpr auto SortPriority = 0x58; // int
		constexpr auto A = 0x5c; // FExpressionInput
		constexpr auto bLastPreviewed = 0x70; // char : 1
		constexpr auto ID = 0x74; // FGuid
	}

	namespace n_ABP_RPG7_Frag_Founders_C { // : ABP_RPG7_Parent_Founders_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
		constexpr auto MuzzleFlashRearComponent3P = 0x7b8; // UParticleSystemComponent*
		constexpr auto BackBlastComponent3P = 0x7c0; // UChildActorComponent*
		constexpr auto MuzzleFlashRearComponent1P = 0x7c8; // UParticleSystemComponent*
		constexpr auto SquadBlast = 0x7d0; // USQBlastComponent*
		constexpr auto BackBlastComponent1P = 0x7d8; // UChildActorComponent*
		constexpr auto BackblastSocket = 0x7e0; // FName
		constexpr auto BackblastEffect1P = 0x7e8; // UParticleSystem*
		constexpr auto BackblastEffect3P = 0x7f0; // UParticleSystem*
	}

	namespace n_AVectorFieldVolume { // : AActor
		constexpr auto VectorFieldComponent = 0x248; // UVectorFieldComponent*
	}

	namespace n_ASQRulesetState { // : AInfo
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto bHidden = 0x80; // char : 1
		constexpr auto bNetTemporary = 0x80; // char : 1
		constexpr auto bNetStartup = 0x80; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x80; // char : 1
		constexpr auto bAlwaysRelevant = 0x80; // char : 1
		constexpr auto bReplicateMovement = 0x80; // char : 1
		constexpr auto bTearOff = 0x80; // char : 1
		constexpr auto bExchangedRoles = 0x80; // char : 1
		constexpr auto bNetLoadOnClient = 0x81; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x81; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x81; // char : 1
		constexpr auto bRelevantForLevelBounds = 0x81; // char : 1
		constexpr auto bReplayRewindable = 0x81; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x81; // char : 1
		constexpr auto bAutoDestroyWhenFinished = 0x81; // char : 1
		constexpr auto bBlockInput = 0x81; // char : 1
		constexpr auto bCanBeDamaged = 0x82; // char : 1
		constexpr auto bCollideWhenPlacing = 0x82; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x82; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x82; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x82; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x82; // char : 1
		constexpr auto bIsEditorOnlyActor = 0x82; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x82; // char : 1
		constexpr auto bReplicates = 0x83; // char : 1
		constexpr auto bCanBeInCluster = 0x83; // char : 1
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x83; // char : 1
		constexpr auto bActorEnableCollision = 0x84; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x84; // char : 1
		constexpr auto RemoteRole = 0x85; // ENetRole
		constexpr auto ReplicatedMovement = 0x88; // FRepMovement
		constexpr auto InitialLifeSpan = 0xbc; // float
		constexpr auto CustomTimeDilation = 0xc0; // float
		constexpr auto AttachmentReplication = 0xc8; // FRepAttachment
		constexpr auto Owner = 0x108; // AActor*
		constexpr auto NetDriverName = 0x110; // FName
		constexpr auto Role = 0x118; // ENetRole
		constexpr auto NetDormancy = 0x119; // ENetDormancy
		constexpr auto SpawnCollisionHandlingMethod = 0x11a; // ESpawnActorCollisionHandlingMethod
		constexpr auto AutoReceiveInput = 0x11b; // EAutoReceiveInput
		constexpr auto InputPriority = 0x11c; // int
		constexpr auto InputComponent = 0x120; // UInputComponent*
		constexpr auto NetCullDistanceSquared = 0x128; // float
		constexpr auto NetTag = 0x12c; // int
		constexpr auto NetUpdateFrequency = 0x130; // float
		constexpr auto MinNetUpdateFrequency = 0x134; // float
		constexpr auto bUseRelativeNetUpdateFrequency = 0x138; // char : 1
		constexpr auto bUseOwnerRelativeNetUpdateFrequency = 0x138; // char : 1
		constexpr auto MinRelativeNetUpdateEvaluationFrequency = 0x13c; // float
		constexpr auto NetPriority = 0x140; // float
		constexpr auto Instigator = 0x148; // APawn*
		constexpr auto Children = 0x150; // TArray<AActor*>
		constexpr auto RootComponent = 0x160; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x168; // TArray<AMatineeActor*>
		constexpr auto Layers = 0x180; // TArray<FName>
		constexpr auto ParentComponent = 0x190; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto Tags = 0x198; // TArray<FName>
		constexpr auto OnTakeAnyDamage = 0x1a8; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x1a9; // FScriptMulticastDelegate
		constexpr auto OnTakeRadialDamage = 0x1aa; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x1ab; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x1ac; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x1ad; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x1ae; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x1af; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x1b0; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x1b1; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x1b2; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x1b3; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x1b4; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x1b5; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x1b6; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x1b7; // FScriptMulticastDelegate
		constexpr auto InstanceComponents = 0x218; // TArray<UActorComponent*>
		constexpr auto BlueprintCreatedComponents = 0x228; // TArray<UActorComponent*>
	}

	namespace n_UMovieSceneFadeTrack { // : UMovieSceneFloatTrack
		constexpr auto SectionToKey = 0x58; // UMovieSceneSection*
		constexpr auto PropertyName = 0x60; // FName
		constexpr auto PropertyPath = 0x68; // FString
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_USQDamageType_Underwater { // : USQDamageType
		constexpr auto bCanCauseBleeding = 0x40; // bool
	}

	namespace n_UCheckedStateBinding { // : UPropertyBinding
		constexpr auto SourceObject = 0x28; // TWeakObjectPtr<UObject>
		constexpr auto SourcePath = 0x30; // FDynamicPropertyPath
		constexpr auto DestinationProperty = 0x60; // FName
	}

	namespace n_UAnimBlueprint { // : UBlueprint
		constexpr auto TargetSkeleton = 0xe0; // USkeleton*
		constexpr auto Groups = 0xe8; // TArray<FAnimGroupInfo>
		constexpr auto bUseMultiThreadedAnimationUpdate = 0xf8; // bool
		constexpr auto bWarnAboutBlueprintUsage = 0xf9; // bool
	}

	namespace n_UMaterialExpressionSceneColor { // : UMaterialExpression
		constexpr auto InputMode = 0x40; // EMaterialSceneAttributeInputMode
		constexpr auto Input = 0x44; // FExpressionInput
		constexpr auto OffsetFraction = 0x58; // FExpressionInput
		constexpr auto ConstInput = 0x6c; // FVector2D
	}

	namespace n_USQAssetManager { // : UAssetManager
		constexpr auto ObjectReferenceList = 0x2c0; // TArray<UObject*>
		constexpr auto bIsGlobalAsyncScanEnvironment = 0x2d0; // bool
		constexpr auto bShouldGuessTypeAndName = 0x2d1; // bool
		constexpr auto bShouldUseSynchronousLoad = 0x2d2; // bool
		constexpr auto bIsLoadingFromPakFiles = 0x2d3; // bool
		constexpr auto bShouldAcquireMissingChunksOnLoad = 0x2d4; // bool
		constexpr auto bOnlyCookProductionAssets = 0x2d5; // bool
		constexpr auto bIsBulkScanning = 0x2d6; // bool
		constexpr auto bIsPrimaryAssetDirectoryCurrent = 0x2d7; // bool
		constexpr auto bIsManagementDatabaseCurrent = 0x2d8; // bool
		constexpr auto bUpdateManagementDatabaseAfterScan = 0x2d9; // bool
		constexpr auto bIncludeOnlyOnDiskAssets = 0x2da; // bool
		constexpr auto NumberOfSpawnedNotifications = 0x2dc; // int
	}

	namespace n_UAbilityTask_ApplyRootMotion_Base { // : UAbilityTask
		constexpr auto ForceName = 0x80; // FName
		constexpr auto FinishVelocityMode = 0x88; // ERootMotionFinishVelocityMode
		constexpr auto FinishSetVelocity = 0x8c; // FVector
		constexpr auto FinishClampVelocity = 0x98; // float
		constexpr auto MovementComponent = 0xa0; // UCharacterMovementComponent*
	}

	namespace n_AKillZVolume { // : APhysicsVolume
		constexpr auto TerminalVelocity = 0x280; // float
		constexpr auto Priority = 0x284; // int
		constexpr auto FluidFriction = 0x288; // float
		constexpr auto bWaterVolume = 0x28c; // char : 1
		constexpr auto bPhysicsOnContact = 0x28c; // char : 1
	}

	namespace n_UPawnMovementComponent { // : UNavMovementComponent
		constexpr auto PawnOwner = 0x158; // APawn*
	}

	namespace n_UEditableGeometryCollectionAdapter { // : UEditableMeshAdapter
		constexpr auto GeometryCollection = 0x28; // UGeometryCollection*
		constexpr auto OriginalGeometryCollection = 0x30; // UGeometryCollection*
		constexpr auto GeometryCollectionLODIndex = 0x38; // int
	}

	namespace n_ASQCommandActor { // : AActor
		constexpr auto distance = 0x248; // float
		constexpr auto Action = 0x250; // USQGridData_CommandOption*
		constexpr auto Team = 0x258; // int
		constexpr auto DamageInstigatorController = 0x25c; // TWeakObjectPtr<AController>
	}

	namespace n_ULandscapeLayerInfoObject { // : UObject
		constexpr auto LayerName = 0x28; // FName
		constexpr auto PhysMaterial = 0x30; // UPhysicalMaterial*
		constexpr auto Hardness = 0x38; // float
		constexpr auto LayerUsageDebugColor = 0x3c; // FLinearColor
	}

	namespace n_UMaterialParameterCollectionInstance { // : UObject
		constexpr auto Collection = 0x30; // UMaterialParameterCollection*
	}

	namespace n_USQCountParameter { // : USQCountParameterBase
		constexpr auto UseCurve = 0x60; // bool
		constexpr auto Curve = 0x68; // UCurveFloat*
		constexpr auto ValueToReach = 0x70; // float
		constexpr auto FixedAvailability = 0x74; // int
	}

	namespace n_UCurveLinearColor { // : UCurveBase
		constexpr auto FloatCurves = 0x30; // FRichCurve [0x4]
		constexpr auto AdjustHue = 0x230; // float
		constexpr auto AdjustSaturation = 0x234; // float
		constexpr auto AdjustBrightness = 0x238; // float
		constexpr auto AdjustBrightnessCurve = 0x23c; // float
		constexpr auto AdjustVibrance = 0x240; // float
		constexpr auto AdjustMinAlpha = 0x244; // float
		constexpr auto AdjustMaxAlpha = 0x248; // float
	}

	namespace n_UVectorFieldStatic { // : UVectorField
		constexpr auto SizeX = 0x48; // int
		constexpr auto SizeY = 0x4c; // int
		constexpr auto SizeZ = 0x50; // int
		constexpr auto bAllowCPUAccess = 0x54; // bool
		constexpr auto CPUData = 0xf0; // TArray<FVector4>
	}

	namespace n_UBTDecorator_ConeCheck { // : UBTDecorator
		constexpr auto ConeHalfAngle = 0x68; // float
		constexpr auto ConeOrigin = 0x70; // FBlackboardKeySelector
		constexpr auto ConeDirection = 0x98; // FBlackboardKeySelector
		constexpr auto Observed = 0xc0; // FBlackboardKeySelector
	}

	namespace n_AFieldSystemActor { // : AActor
		constexpr auto FieldSystemComponent = 0x248; // UFieldSystemComponent*
	}

	namespace n_UGameplayCueSet { // : UDataAsset
		constexpr auto GameplayCueData = 0x30; // TArray<FGameplayCueNotifyData>
	}

	namespace n_ABP_RPG7V2_Tandem_Founders_C { // : ABP_RPG7V2_Tandem_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
		constexpr auto MuzzleFlashRearComponent3P = 0x7b8; // UParticleSystemComponent*
		constexpr auto BackBlastComponent3P = 0x7c0; // UChildActorComponent*
		constexpr auto MuzzleFlashRearComponent1P = 0x7c8; // UParticleSystemComponent*
		constexpr auto SquadBlast = 0x7d0; // USQBlastComponent*
		constexpr auto BackBlastComponent1P = 0x7d8; // UChildActorComponent*
		constexpr auto BackblastSocket = 0x7e0; // FName
		constexpr auto BackblastEffect1P = 0x7e8; // UParticleSystem*
		constexpr auto BackblastEffect3P = 0x7f0; // UParticleSystem*
	}

	namespace n_UMaterialExpressionFeatureLevelSwitch { // : UMaterialExpression
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto Inputs = 0x54; // FExpressionInput [0x4]
	}

	namespace n_UMaterialExpressionRound { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_ULightPropagationVolumeBlendable { // : UObject
		constexpr auto Settings = 0x30; // FLightPropagationVolumeSettings
		constexpr auto BlendWeight = 0x70; // float
	}

	namespace n_ABP_M4_M68_4Mags_C { // : ABP_M4_M68_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_USQRestriction_DeployableInRange { // : USQRestriction_Boolean
		constexpr auto Range = 0x58; // float
		constexpr auto TargetTeams = 0x60; // TSet<ESQTeamRelationShip>
		constexpr auto TargetCount = 0xb0; // int
		constexpr auto TargetBuildState = 0xb8; // TArray<ESQBuildState>
	}

	namespace n_UBP_SquadStateDataPlayerState_C { // : USQSquadStateDataPlayerState
		constexpr auto bIsSquadLeader = 0x118; // char : 1
		constexpr auto bIsFireTeamLeader = 0x118; // char : 1
		constexpr auto FireTeamIndex = 0x11c; // int
		constexpr auto FireTeamPosition = 0x120; // int
		constexpr auto DeployRole = 0x128; // USQRoleSettings*
		constexpr auto CurrentVehicleData = 0x130; // USQVehicleUIStaticDataAsset*
		constexpr auto PlayerState = 0x138; // ASQPlayerState*
		constexpr auto PlayerId = 0x140; // int
		constexpr auto SelectionComponentId = 0x144; // FSQCoreStateId
		constexpr auto VoipChannel = 0x146; // ESQVoiceChannel
		constexpr auto bIsMuted = 0x147; // bool
	}

	namespace n_UBoxReflectionCaptureComponent { // : UReflectionCaptureComponent
		constexpr auto BoxTransitionDistance = 0x290; // float
		constexpr auto PreviewInfluenceBox = 0x298; // UBoxComponent*
		constexpr auto PreviewCaptureBox = 0x2a0; // UBoxComponent*
	}

	namespace n_UInterpTrackInstSound { // : UInterpTrackInst
		constexpr auto LastUpdatePosition = 0x28; // float
		constexpr auto PlayAudioComp = 0x30; // UAudioComponent*
	}

	namespace n_UBP_Attachment_ElcanLDS_C { // : USQWeaponAttachment_Scope
		constexpr auto MeshTransitionPercentage = 0x4b0; // float
		constexpr auto ADSMesh = 0x4b8; // UStaticMesh*
		constexpr auto ADSMeshTransform = 0x4c0; // FTransform
		constexpr auto NonADSMesh = 0x4f0; // UStaticMesh*
		constexpr auto NonADSMeshTransform = 0x500; // FTransform
		constexpr auto InToADSMeshTransitionSettings = 0x530; // TArray<FSQMeshTransitionSettings>
		constexpr auto OutFromADSMeshTransitionSettings = 0x540; // TArray<FSQMeshTransitionSettings>
	}

	namespace n_UBTTask_PushPawnAction { // : UBTTask_PawnActionBase
		constexpr auto Action = 0x70; // UPawnAction*
	}

	namespace n_UDialogueWave { // : UObject
		constexpr auto bMature = 0x28; // char : 1
		constexpr auto bOverride_SubtitleOverride = 0x28; // char : 1
		constexpr auto SpokenText = 0x30; // FString
		constexpr auto SubtitleOverride = 0x40; // FString
		constexpr auto ContextMappings = 0x50; // TArray<FDialogueContextMapping>
		constexpr auto LocalizationGUID = 0x60; // FGuid
	}

	namespace n_UAudioCaptureComponent { // : USynthComponent
		constexpr auto JitterLatencyFrames = 0x640; // int
	}

	namespace n_UParticleModuleLight_Seeded { // : UParticleModuleLight
		constexpr auto RandomSeedInfo = 0x140; // FParticleRandomSeedInfo
	}

	namespace n_UPrefabToolSettings { // : UObject
		constexpr auto bReplaceActorsWithCreatedPrefab = 0x28; // bool
		constexpr auto bAutoIncludeAttachedActorsWhenCreateNewPrefab = 0x29; // bool
		constexpr auto bNestedPrefabSupport = 0x2a; // bool
		constexpr auto bRestorePrefabActorCollapseStatusAfterPIE = 0x2b; // bool
		constexpr auto bCollapseAllPrefabActorsAfterMapOpened = 0x2c; // bool
		constexpr auto bMoveActorsInWorldAfterSetPrefabPivot = 0x2d; // bool
		constexpr auto bDuplicateNoRevertWithOffset = 0x2e; // bool
		constexpr auto NewPrefabNamePattern = 0x30; // FString
		constexpr auto UITheme = 0x40; // EPTUITheme
		constexpr auto bUpdateAllPrefabActorsWhenOpenMap = 0x44; // bool
		constexpr auto bCheckPrefabChangeBeforeUpdateAllPrefabActorsWhenOpenMap = 0x45; // bool
		constexpr auto bUpdateAllPrefabActorsWhenApply = 0x46; // bool
		constexpr auto bApplyToNestedPrefab = 0x47; // bool
		constexpr auto bEnableApplyFromDisconnectedPrefabActor = 0x48; // bool
		constexpr auto bAutoAddRemoveVariantActorPrefix = 0x49; // bool
		constexpr auto VariantActorPrefix = 0x50; // FString
		constexpr auto bEnablePrefabComponentVisualizer = 0x60; // bool
		constexpr auto PrefabComponentVisualizerType = 0x61; // EPrefabVisualizerType
		constexpr auto bDisplayPrefabComponentVisualizerEvenNotSelected = 0x62; // bool
		constexpr auto PrefabViewVisualizerColor = 0x64; // FColor
		constexpr auto TargetActorColor = 0x68; // FColor
		constexpr auto UnLockedConnectedColor = 0x6c; // FColor
		constexpr auto LockedConnectedColor = 0x70; // FColor
		constexpr auto UnLockedDisConnectedColor = 0x74; // FColor
		constexpr auto LockedDisConnectedColor = 0x78; // FColor
		constexpr auto UnLockedNoPrefabAssignedColor = 0x7c; // FColor
		constexpr auto LockedNoPrefabAssignedColor = 0x80; // FColor
		constexpr auto PrefabMaterialPath = 0x88; // FSoftObjectPath
		constexpr auto bShadedPrefabViewVisualizer = 0xc8; // bool
		constexpr auto bLockPrefabSelectionByDefault = 0xc9; // bool
		constexpr auto bDisableLockPrefabSelectionFeature = 0xca; // bool
		constexpr auto bForceApplyPerInstanceVertexColor = 0xcb; // bool
		constexpr auto bSupportGenerateBlueprint = 0xcd; // bool
		constexpr auto bHarvestComponentsWhenGeneratingBlueprint = 0xce; // bool
		constexpr auto bForceMobilityToMovableWhenGeneratingBlueprint = 0xcf; // bool
		constexpr auto IgnoreActorClassesWhenGeneratingBlueprint = 0xd8; // TArray<AActor*>
		constexpr auto IgnoreActorTagsWhenGeneratingBlueprint = 0xe8; // TArray<FName>
		constexpr auto bFlashPrefabWindowForTargetPrefabActor = 0xf8; // bool
		constexpr auto bEnablePrefabTextEditor = 0xf9; // bool
		constexpr auto bDebugMode = 0xfa; // bool
		constexpr auto bDisableThumbnailRender = 0xfb; // bool
		constexpr auto bShowPrefabInstanceTagInPrefabToolWindow = 0xfc; // bool
	}

	namespace n_USQWeaponSkinData { // : USQSteamItem
		constexpr auto ReplacementData = 0x40; // FSQWeaponReplacementItem
	}

	namespace n_ABP_M4M203_M68_UGL_Smoke_Blue_Founders_C { // : ABP_M4M203_M68_UGL_Smoke_Founders_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UBP_Attachment_SVDM_front_C { // : USQWeaponAttachment_Scope
		constexpr auto MeshTransitionPercentage = 0x4b0; // float
		constexpr auto ADSMesh = 0x4b8; // UStaticMesh*
		constexpr auto ADSMeshTransform = 0x4c0; // FTransform
		constexpr auto NonADSMesh = 0x4f0; // UStaticMesh*
		constexpr auto NonADSMeshTransform = 0x500; // FTransform
		constexpr auto InToADSMeshTransitionSettings = 0x530; // TArray<FSQMeshTransitionSettings>
		constexpr auto OutFromADSMeshTransitionSettings = 0x540; // TArray<FSQMeshTransitionSettings>
	}

	namespace n_UParticleSystem { // : UFXSystemAsset
		constexpr auto SystemUpdateMode = 0x28; // EParticleSystemUpdateMode
		constexpr auto UpdateTime_FPS = 0x2c; // float
		constexpr auto UpdateTime_Delta = 0x30; // float
		constexpr auto WarmupTime = 0x34; // float
		constexpr auto WarmupTickRate = 0x38; // float
		constexpr auto Emitters = 0x40; // TArray<UParticleEmitter*>
		constexpr auto PreviewComponent = 0x50; // UParticleSystemComponent*
		constexpr auto CurveEdSetup = 0x58; // UInterpCurveEdSetup*
		constexpr auto bOrientZAxisTowardCamera = 0x60; // char : 1
		constexpr auto LODDistanceCheckTime = 0x64; // float
		constexpr auto LODMethod = 0x68; // ParticleSystemLODMethod
		constexpr auto LODDistances = 0x70; // TArray<float>
		constexpr auto bRegenerateLODDuplicate = 0x80; // char : 1
		constexpr auto LODSettings = 0x88; // TArray<FParticleSystemLOD>
		constexpr auto bUseFixedRelativeBoundingBox = 0x98; // char : 1
		constexpr auto FixedRelativeBoundingBox = 0x9c; // FBox
		constexpr auto SecondsBeforeInactive = 0xb8; // float
		constexpr auto bShouldResetPeakCounts = 0xbc; // char : 1
		constexpr auto bHasPhysics = 0xbc; // char : 1
		constexpr auto bUseRealtimeThumbnail = 0xbc; // char : 1
		constexpr auto ThumbnailImageOutOfDate = 0xbc; // char : 1
		constexpr auto Delay = 0xc0; // float
		constexpr auto DelayLow = 0xc4; // float
		constexpr auto bUseDelayRange = 0xc8; // char : 1
		constexpr auto bAllowManagedTicking = 0xc8; // char : 1
		constexpr auto bAutoDeactivate = 0xcc; // bool
		constexpr auto MinTimeBetweenTicks = 0xd0; // uint32
		constexpr auto LODBasedMinTimeBetweenTicks = 0xd8; // TArray<uint32>
		constexpr auto InsignificantReaction = 0xe8; // EParticleSystemInsignificanceReaction
		constexpr auto InsignificanceDelay = 0xec; // float
		constexpr auto MaxSignificanceLevel = 0xf0; // EParticleSignificanceLevel
		constexpr auto MaxPoolSize = 0xf4; // uint32
		constexpr auto MacroUVPosition = 0xf8; // FVector
		constexpr auto MacroUVRadius = 0x104; // float
		constexpr auto OcclusionBoundsMethod = 0x108; // EParticleSystemOcclusionBoundsMethod
		constexpr auto CustomOcclusionBounds = 0x10c; // FBox
		constexpr auto SoloTracking = 0x128; // TArray<FLODSoloTrack>
		constexpr auto NamedMaterialSlots = 0x138; // TArray<FNamedEmitterMaterial>
	}

	namespace n_ULocalLightComponent { // : ULightComponent
		constexpr auto IntensityUnits = 0x358; // ELightUnits
		constexpr auto Radius = 0x35c; // float
		constexpr auto AttenuationRadius = 0x360; // float
		constexpr auto LightmassSettings = 0x364; // FLightmassPointLightSettings
	}

	namespace n_USQDamageType_HeatExplosive { // : USQDamageType
		constexpr auto bCanCauseBleeding = 0x40; // bool
	}

	namespace n_USQVehicleCleanupComponent { // : UActorComponent
		constexpr auto CleanupStaticInfo = 0xd8; // USQVehicleCleanupDataAsset*
		constexpr auto OwnerVehicle = 0xe8; // ASQVehicle*
	}

	namespace n_UMediaTexture { // : UTexture
		constexpr auto AddressX = 0xd0; // TextureAddress
		constexpr auto AddressY = 0xd1; // TextureAddress
		constexpr auto AutoClear = 0xd2; // bool
		constexpr auto ClearColor = 0xd4; // FLinearColor
		constexpr auto MediaPlayer = 0xe8; // UMediaPlayer*
	}

	namespace n_ABP_AK74MGP25_1P78_UGL_Smoke_C { // : ABP_AK74MGP25_1P78_UGL_Parent_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UMaterialExpressionAntialiasedTextureMask { // : UMaterialExpressionTextureSampleParameter2D
		constexpr auto Threshold = 0x100; // float
		constexpr auto Channel = 0x104; // ETextureColorChannel
	}

	namespace n_USQSquadStateDataMapMarkerSpotted { // : USQSquadStateDataMapMarkerSelectable
		constexpr auto MapIcon = 0x1a0; // USQMapIconComponent*
	}

	namespace n_UMaterialExpressionParticleRadius { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_USQVelocityRotatingMovementComponent { // : USQMovementComponentPacked
		constexpr auto AngularDeltaCombineThreshold = 0x1e0; // float
		constexpr auto UpdatedComponent = 0x1e8; // USceneComponent*
		constexpr auto AccelerationMultiplier = 0x1f0; // float
		constexpr auto NoInputDecelerationMultiplier = 0x1f4; // float
		constexpr auto DecelerationMultiplier = 0x1f8; // float
		constexpr auto bEnableStabilization = 0x1fc; // bool
		constexpr auto StabilizationSpeed = 0x200; // float
		constexpr auto RotationConstraints = 0x204; // FSQRotationConstraints
		constexpr auto ParentYawToMinPitch = 0x220; // UCurveFloat*
		constexpr auto ParentYawToMaxPitch = 0x228; // UCurveFloat*
		constexpr auto HeadingParentComponent = 0x230; // USQVelocityRotatingMovementComponent*
		constexpr auto RotationReplicatedMovement = 0x280; // FSQRotationVelocityRepMovement
		constexpr auto IsDisabled = 0x2d0; // bool
	}

	namespace n_UCullingField { // : UFieldNodeBase
		constexpr auto Culling = 0xd8; // UFieldNodeBase*
		constexpr auto Field = 0xe0; // UFieldNodeBase*
		constexpr auto Operation = 0xe8; // EFieldCullingOperationType
	}

	namespace n_UMaterialExpressionDesaturation { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Fraction = 0x54; // FExpressionInput
		constexpr auto LuminanceFactors = 0x68; // FLinearColor
	}

	namespace n_UAISenseConfig_Touch { // : UAISenseConfig
		constexpr auto DebugColor = 0x28; // FColor
		constexpr auto MaxAge = 0x2c; // float
		constexpr auto bStartsEnabled = 0x30; // char : 1
	}

	namespace n_UInterpTrackSlomo { // : UInterpTrackFloatBase
		constexpr auto FloatTrack = 0x70; // FInterpCurveFloat
		constexpr auto CurveTension = 0x88; // float
	}

	namespace n_UEasyAntiCheatNetComponent { // : UActorComponent
		constexpr auto PrimaryComponentTick = 0x30; // FActorComponentTickFunction
		constexpr auto ComponentTags = 0x88; // TArray<FName>
		constexpr auto AssetUserData = 0x98; // TArray<UAssetUserData*>
		constexpr auto bReplicates = 0xac; // char : 1
		constexpr auto bNetAddressable = 0xac; // char : 1
		constexpr auto bAutoActivate = 0xad; // char : 1
		constexpr auto bIsActive = 0xae; // char : 1
		constexpr auto bEditableWhenInherited = 0xae; // char : 1
		constexpr auto bCanEverAffectNavigation = 0xae; // char : 1
		constexpr auto bIsEditorOnly = 0xae; // char : 1
		constexpr auto CreationMethod = 0xb0; // EComponentCreationMethod
		constexpr auto OnComponentActivated = 0xb1; // FScriptMulticastDelegate
		constexpr auto OnComponentDeactivated = 0xb2; // FScriptMulticastDelegate
		constexpr auto UCSModifiedProperties = 0xb8; // TArray<FSimpleMemberReference>
	}

	namespace n_UARCandidateObject { // : UDataAsset
		constexpr auto CandidateObjectData = 0x30; // TArray<char>
		constexpr auto FriendlyName = 0x40; // FString
		constexpr auto BoundingBox = 0x50; // FBox
	}

	namespace n_UBP_L85A2AG36_UGL_Parent_StaticInfo_C { // : UBP_GenericWeapon_StaticInfo_C
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_USQRotorWashEffectSender { // : USceneComponent
		constexpr auto ActiveListeners = 0x218; // TArray<USQRotorWashEffectListener*>
		constexpr auto EffectRadius = 0x228; // float
		constexpr auto EmitterData = 0x230; // FRotorWashData
	}

	namespace n_USQRotorComponent { // : USQVehicleEngineComponent
		constexpr auto OnEngineActiveEvent = 0x590; // FScriptMulticastDelegate
		constexpr auto EngineStartSound = 0x5a0; // USoundCue*
		constexpr auto EngineCompletedStartSound = 0x5a8; // USoundCue*
		constexpr auto EngineFailedStartSound = 0x5b0; // USoundCue*
		constexpr auto EngineStopSound = 0x5b8; // USoundCue*
		constexpr auto EngineRPMSound = 0x5c0; // USoundCue*
		constexpr auto EngineExhaustSound = 0x5c8; // USoundCue*
		constexpr auto LandingSound = 0x5d0; // USoundCue*
		constexpr auto EngineIdleFadeInAfterEngineStartTime = 0x5d8; // float
		constexpr auto EngineIdleFadeOutAfterEngineStopTime = 0x5dc; // float
		constexpr auto GearChangingAlphaLerpSpeed = 0x5e0; // float
		constexpr auto EngineMovementSounds = 0x5e8; // TArray<FSQEngineMovementSoundObject>
		constexpr auto EngineExhaustStartAC = 0x5f8; // UAudioComponent*
		constexpr auto EngineRPMAC = 0x600; // UAudioComponent*
		constexpr auto EngineExhaustAC = 0x608; // UAudioComponent*
		constexpr auto EngineExhaustStopAC = 0x610; // UAudioComponent*
		constexpr auto EngineStartAC = 0x618; // UAudioComponent*
		constexpr auto EngineCompletedStartAC = 0x620; // UAudioComponent*
		constexpr auto EngineFailedStartAC = 0x628; // UAudioComponent*
		constexpr auto EngineStopAC = 0x630; // UAudioComponent*
		constexpr auto EngineSpeedAC = 0x638; // UAudioComponent*
		constexpr auto ExhaustPSC = 0x640; // UParticleSystemComponent*
		constexpr auto EngineVibrationCameraShake = 0x648; // UCameraShake*
		constexpr auto RPMToShakeScaleCurve = 0x650; // UCurveFloat*
		constexpr auto bIsEngineActive = 0x658; // bool
		constexpr auto bIsEngineToggleActive = 0x659; // bool
		constexpr auto ActivateEngineDelay = 0x65c; // float
		constexpr auto DeActivateEngineDelay = 0x660; // float
		constexpr auto VibrationCameraShake = 0x670; // UCameraShake*
		constexpr auto VibrationCameraManager = 0x678; // APlayerCameraManager*
	}

	namespace n_ABP_M4M203_M150_UGL_Woodland_Smoke_C { // : ABP_M4M203_M150_UGL_Woodland_Parent_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_ANavigationData { // : AActor
		constexpr auto RenderingComp = 0x250; // UPrimitiveComponent*
		constexpr auto NavDataConfig = 0x258; // FNavDataConfig
		constexpr auto bEnableDrawing = 0x2c0; // char : 1
		constexpr auto bForceRebuildOnLoad = 0x2c0; // char : 1
		constexpr auto bCanBeMainNavData = 0x2c0; // char : 1
		constexpr auto bCanSpawnOnRebuild = 0x2c0; // char : 1
		constexpr auto bRebuildAtRuntime = 0x2c0; // char : 1
		constexpr auto RuntimeGeneration = 0x2c4; // ERuntimeGenerationType
		constexpr auto ObservedPathsTickInterval = 0x2c8; // float
		constexpr auto DataVersion = 0x2cc; // uint32
		constexpr auto SupportedAreas = 0x3a0; // TArray<FSupportedAreaData>
	}

	namespace n_UBP_Attachment_M4_FrontSight_C { // : USQWeaponAttachment_Scope
		constexpr auto MeshTransitionPercentage = 0x4b0; // float
		constexpr auto ADSMesh = 0x4b8; // UStaticMesh*
		constexpr auto ADSMeshTransform = 0x4c0; // FTransform
		constexpr auto NonADSMesh = 0x4f0; // UStaticMesh*
		constexpr auto NonADSMeshTransform = 0x500; // FTransform
		constexpr auto InToADSMeshTransitionSettings = 0x530; // TArray<FSQMeshTransitionSettings>
		constexpr auto OutFromADSMeshTransitionSettings = 0x540; // TArray<FSQMeshTransitionSettings>
	}

	namespace n_UBP_HAT_DamageType_C { // : USQDamageType
		constexpr auto bCanCauseBleeding = 0x40; // bool
	}

	namespace n_ABP_GenericPistol_C { // : ABP_Weapon2_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UBP_AK74MGP25_UGL_HE_StaticInfo_C { // : UBP_AK74MGP25_UGL_Parent_StaticInfo_C
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_UMaterialExpressionSaturate { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UFindSessionsCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto OnFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_UInAppPurchaseCallbackProxy { // : UObject
		constexpr auto OnSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto OnFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_USQMapWidgetEmplacement { // : USQMapWidgetVehicle
		constexpr auto TeamId = 0x310; // int
		constexpr auto AdminTypes = 0x318; // TArray<APawn*>
	}

	namespace n_UBorder { // : UContentWidget
		constexpr auto HorizontalAlignment = 0x120; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x121; // EVerticalAlignment
		constexpr auto bShowEffectWhenDisabled = 0x122; // char : 1
		constexpr auto ContentColorAndOpacity = 0x124; // FLinearColor
		constexpr auto ContentColorAndOpacityDelegate = 0x134; // DelegateProperty
		constexpr auto Padding = 0x144; // FMargin
		constexpr auto Background = 0x158; // FSlateBrush
		constexpr auto BackgroundDelegate = 0x1e0; // DelegateProperty
		constexpr auto BrushColor = 0x1f0; // FLinearColor
		constexpr auto BrushColorDelegate = 0x200; // DelegateProperty
		constexpr auto DesiredSizeScale = 0x210; // FVector2D
		constexpr auto bFlipForRightToLeftFlowDirection = 0x218; // bool
		constexpr auto OnMouseButtonDownEvent = 0x21c; // DelegateProperty
		constexpr auto OnMouseButtonUpEvent = 0x22c; // DelegateProperty
		constexpr auto OnMouseMoveEvent = 0x23c; // DelegateProperty
		constexpr auto OnMouseDoubleClickEvent = 0x24c; // DelegateProperty
	}

	namespace n_UTwitterIntegrationBase { // : UPlatformInterfaceBase
		constexpr auto AllDelegates = 0x28; // TArray<FDelegateArray>
	}

	namespace n_UParticleModuleColorScaleOverLife { // : UParticleModuleColorBase
		constexpr auto ColorScaleOverLife = 0x30; // FRawDistributionVector
		constexpr auto AlphaScaleOverLife = 0x80; // FRawDistributionFloat
		constexpr auto bEmitterTime = 0xb8; // char : 1
	}

	namespace n_ABP_L85A2_Recruit_C { // : ABP_L85A2_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UBP_M4M203_M150_UGL_HE_StaticInfo_C { // : UBP_M4M203_M150_UGL_Parent_StaticInfo_C
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_USQRestriction_FOBInRange { // : USQRestriction_Boolean
		constexpr auto Range = 0x58; // float
		constexpr auto FobRadiusTableColumnName = 0x60; // FString
		constexpr auto TargetTeams = 0x70; // TSet<ESQTeamRelationShip>
		constexpr auto TargetCount = 0xc0; // int
	}

	namespace n_ABP_AK74MGP25_1P78_UGL_Desert_Smoke_C { // : ABP_AK74MGP25_1P78_UGL_Desert_Parent_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_USQSoundNodeListenerType { // : USoundNode
		constexpr auto bLooping = 0x40; // bool
		constexpr auto bRestartSoundWaveWhenListenerTypeChanges = 0x41; // bool
		constexpr auto ListenerTypeCheckFrequency = 0x44; // float
	}

	namespace n_UAbilityTask_WaitAttributeChangeThreshold { // : UAbilityTask
		constexpr auto OnChange = 0x80; // FScriptMulticastDelegate
		constexpr auto ExternalOwner = 0xd0; // UAbilitySystemComponent*
	}

	namespace n_ABP_M4M203_M68_UGL_Smoke_Red_Founders_C { // : ABP_M4M203_M68_UGL_Smoke_Founders_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_USQDriveTrainComponent { // : USQVehicleComponent
		constexpr auto DropPercentage = 0x588; // float
	}

	namespace n_ABP_AK74M_Recruit_C { // : ABP_AK74M_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UAnimCompress_LeastDestructive { // : UAnimCompress
		constexpr auto Description = 0x28; // FString
		constexpr auto bNeedsSkeleton = 0x38; // char : 1
		constexpr auto bEnableSegmenting = 0x38; // char : 1
		constexpr auto IdealNumFramesPerSegment = 0x3c; // uint32
		constexpr auto MaxNumFramesPerSegment = 0x40; // uint32
		constexpr auto TranslationCompressionFormat = 0x44; // AnimationCompressionFormat
		constexpr auto RotationCompressionFormat = 0x45; // AnimationCompressionFormat
		constexpr auto ScaleCompressionFormat = 0x46; // AnimationCompressionFormat
		constexpr auto MaxCurveError = 0x48; // float
	}

	namespace n_USQCollisionDamage { // : UActorComponent
		constexpr auto MinDamage = 0xd8; // float
		constexpr auto MaxDamage = 0xdc; // float
		constexpr auto MinImpactForce = 0xe0; // float
		constexpr auto MaxImpactForce = 0xe4; // float
		constexpr auto InterpCurve = 0xe8; // UCurveFloat*
		constexpr auto CollisionSound = 0xf0; // USoundCue*
		constexpr auto ParticleEffect = 0xf8; // UParticleSystem*
		constexpr auto CollisionCameraShake = 0x100; // UCameraShake*
		constexpr auto MinShakeForce = 0x108; // float
		constexpr auto MaxShakeForce = 0x10c; // float
	}

	namespace n_UMovieSceneCameraCutTrack { // : UMovieSceneNameableTrack
		constexpr auto Sections = 0x58; // TArray<UMovieSceneSection*>
	}

	namespace n_ABP_L85A2_DarkEarth_4Mags_C { // : ABP_L85A2_DarkEarth_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UDamageType { // : UObject
		constexpr auto bCausedByWorld = 0x28; // char : 1
		constexpr auto bScaleMomentumByMass = 0x28; // char : 1
		constexpr auto bRadialDamageVelChange = 0x28; // char : 1
		constexpr auto DamageImpulse = 0x2c; // float
		constexpr auto DestructibleImpulse = 0x30; // float
		constexpr auto DestructibleDamageSpreadScale = 0x34; // float
		constexpr auto DamageFalloff = 0x38; // float
	}

	namespace n_ABP_M4M203_M68_UGL_HE_C { // : ABP_M4M203_M68_UGL_Parent_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UMaterialExpressionComponentMask { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto R = 0x54; // char : 1
		constexpr auto G = 0x54; // char : 1
		constexpr auto B = 0x54; // char : 1
		constexpr auto A = 0x54; // char : 1
	}

	namespace n_UDemoNetDriver { // : UNetDriver
		constexpr auto RollbackNetStartupActors = 0x840; // TMap<FString, FRollbackNetStartupActorInfo>
		constexpr auto CheckpointSaveMaxMSPerFrame = 0xc44; // float
		constexpr auto MulticastRecordOptions = 0xc78; // TArray<FMulticastRecordOptions>
		constexpr auto bIsLocalReplay = 0xc88; // bool
		constexpr auto SpectatorControllers = 0xc90; // TArray<APlayerController*>
	}

	namespace n_APlaneReflectionCapture { // : AReflectionCapture
		constexpr auto CaptureComponent = 0x248; // UReflectionCaptureComponent*
	}

	namespace n_UParticleModuleParameterBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x29; // char : 1
		constexpr auto LODDuplicate = 0x29; // char : 1
		constexpr auto bSupportsRandomSeed = 0x29; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x29; // char : 1
		constexpr auto LODValidity = 0x2c; // char
	}

	namespace n_AGeometryCollectionActor { // : AActor
		constexpr auto GeometryCollectionComponent = 0x248; // UGeometryCollectionComponent*
		constexpr auto GeometryCollectionDebugDrawComponent = 0x250; // UGeometryCollectionDebugDrawComponent*
	}

	namespace n_USQPawnMovementComponent { // : UPawnMovementComponent
		constexpr auto PostPhysicsTickFunction = 0x160; // FSQMovePostPhysicsTickFunction
		constexpr auto bJustTeleported = 0x1e0; // char : 1
		constexpr auto bIgnoreBaseRotation = 0x1e0; // char : 1
		constexpr auto bUseControllerDesiredRotation = 0x1e0; // char : 1
		constexpr auto bOrientRotationToMovement = 0x1e0; // char : 1
		constexpr auto bFastAttachedMove = 0x1e0; // char : 1
		constexpr auto bRunPhysicsWithNoController = 0x1e0; // char : 1
	}

	namespace n_ASQDeployableAmmoBag { // : ASQDeployableItem
		constexpr auto AmmoBagAmmoUpdatedEvent = 0x438; // FScriptMulticastDelegate
		constexpr auto RearmSourceAmmoUpdatedEvent = 0x448; // FScriptMulticastDelegate
		constexpr auto AmmoCount = 0x458; // float
		constexpr auto OutOfAmmoLifetime = 0x45c; // float
	}

	namespace n_UBP_AK74GP25_Rifle_Optic_StaticInfo_C { // : UBP_AK74GP25_Rifle_StaticInfo_C
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_UGameplayModMagnitudeCalculation { // : UGameplayEffectCalculation
		constexpr auto bAllowNonNetAuthorityDependencyRegistration = 0x38; // bool
	}

	namespace n_USQVehicleComponentBluePrintable { // : USQVehicleComponent
		constexpr auto MaxHealth = 0x498; // float
		constexpr auto AllowableDamageTypes = 0x4a0; // TArray<FSQDamageModifier>
		constexpr auto bCanBeDestroyed = 0x4b0; // bool
		constexpr auto bCanBeRepairedAfterDestroyed = 0x4b1; // bool
		constexpr auto MaxRepairToolLimit = 0x4b4; // float
		constexpr auto FullyRepairedComponentMesh = 0x4b8; // UStaticMesh*
		constexpr auto RepairedFromDestructionComponentMesh = 0x4c0; // UStaticMesh*
		constexpr auto DestroyedComponentMesh = 0x4c8; // UStaticMesh*
		constexpr auto ParentVehicle = 0x4d0; // ASQVehicle*
		constexpr auto BurningEffect = 0x4d8; // UParticleSystem*
		constexpr auto BurningSound = 0x4e0; // USoundCue*
		constexpr auto BurningAudioComponent = 0x4e8; // UAudioComponent*
		constexpr auto bBurningAudioInheritsScale = 0x4f0; // bool
		constexpr auto DestroyedExplosion = 0x4f8; // UParticleSystem*
		constexpr auto DestroyedSound = 0x500; // USoundCue*
		constexpr auto DestructionDamageEffectSocket = 0x508; // FName
		constexpr auto DestructionDamageEffects = 0x510; // TArray<FSQDamageEffect>
		constexpr auto bLastingEffectInheritsScale = 0x520; // bool
		constexpr auto DestroyedAudioComponent = 0x528; // UAudioComponent*
		constexpr auto bDestroyedAudioInheritsScale = 0x530; // bool
		constexpr auto BurningParticleSystem = 0x538; // UParticleSystemComponent*
		constexpr auto bBurningEffectInheritsScale = 0x540; // bool
		constexpr auto DestructionParticleSystem = 0x548; // UParticleSystemComponent*
		constexpr auto bDestructionEffectInheritsScale = 0x550; // bool
		constexpr auto NormalizedHealth = 0x554; // float
		constexpr auto OnComponentDestroyedEvent = 0x558; // FScriptMulticastDelegate
		constexpr auto OnComponentUndestroyedEvent = 0x568; // FScriptMulticastDelegate
		constexpr auto Health = 0x578; // float
		constexpr auto VehicleComponentState = 0x57c; // ESQVehicleComponentStates
		constexpr auto DecorativeMesh = 0x580; // UStaticMeshComponent*
	}

	namespace n_USQMapWidgetMapMarkerSpotted { // : USQMapWidgetMapMarkerSelectable
		constexpr auto MapIcon = 0x2c8; // USQMapIconComponent*
	}

	namespace n_UDatasmithPointLightComponentTemplate { // : UDatasmithObjectTemplate
		constexpr auto IntensityUnits = 0x30; // ELightUnits
		constexpr auto SourceRadius = 0x34; // float
		constexpr auto SourceLength = 0x38; // float
		constexpr auto AttenuationRadius = 0x3c; // float
	}

	namespace n_AARSharedWorldPlayerController { // : APlayerController
		constexpr auto Player = 0x2c0; // UPlayer*
		constexpr auto AcknowledgedPawn = 0x2c8; // APawn*
		constexpr auto ControllingDirTrackInst = 0x2d0; // UInterpTrackInstDirector*
		constexpr auto MyHUD = 0x2d8; // AHUD*
		constexpr auto PlayerCameraManager = 0x2e0; // APlayerCameraManager*
		constexpr auto PlayerCameraManagerClass = 0x2e8; // APlayerCameraManager*
		constexpr auto bAutoManageActiveCameraTarget = 0x2f0; // bool
		constexpr auto TargetViewRotation = 0x2f4; // FRotator
		constexpr auto SmoothTargetViewRotationSpeed = 0x30c; // float
		constexpr auto HiddenActors = 0x318; // TArray<AActor*>
		constexpr auto HiddenPrimitiveComponents = 0x328; // TArray<TWeakObjectPtr<UPrimitiveComponent>>
		constexpr auto LastSpectatorStateSynchTime = 0x33c; // float
		constexpr auto LastSpectatorSyncLocation = 0x340; // FVector
		constexpr auto LastSpectatorSyncRotation = 0x34c; // FRotator
		constexpr auto ClientCap = 0x358; // int
		constexpr auto CheatManager = 0x360; // UCheatManager*
		constexpr auto CheatClass = 0x368; // UCheatManager*
		constexpr auto PlayerInput = 0x370; // UPlayerInput*
		constexpr auto ActiveForceFeedbackEffects = 0x378; // TArray<FActiveForceFeedbackEffect>
		constexpr auto bPlayerIsWaiting = 0x3f8; // char : 1
		constexpr auto NetPlayerIndex = 0x3fc; // char
		constexpr auto PendingSwapConnection = 0x438; // UNetConnection*
		constexpr auto NetConnection = 0x440; // UNetConnection*
		constexpr auto InputYawScale = 0x454; // float
		constexpr auto InputPitchScale = 0x458; // float
		constexpr auto InputRollScale = 0x45c; // float
		constexpr auto bShowMouseCursor = 0x460; // char : 1
		constexpr auto bEnableClickEvents = 0x460; // char : 1
		constexpr auto bEnableTouchEvents = 0x460; // char : 1
		constexpr auto bEnableMouseOverEvents = 0x460; // char : 1
		constexpr auto bEnableTouchOverEvents = 0x460; // char : 1
		constexpr auto bForceFeedbackEnabled = 0x460; // char : 1
		constexpr auto ForceFeedbackScale = 0x464; // float
		constexpr auto ClickEventKeys = 0x468; // TArray<FKey>
		constexpr auto DefaultMouseCursor = 0x478; // EMouseCursor
		constexpr auto CurrentMouseCursor = 0x479; // EMouseCursor
		constexpr auto DefaultClickTraceChannel = 0x47a; // ECollisionChannel
		constexpr auto CurrentClickTraceChannel = 0x47b; // ECollisionChannel
		constexpr auto HitResultTraceDistance = 0x47c; // float
		constexpr auto SeamlessTravelCount = 0x480; // uint16
		constexpr auto LastCompletedSeamlessTravelCount = 0x482; // uint16
		constexpr auto InactiveStateInputComponent = 0x4f8; // UInputComponent*
		constexpr auto bShouldPerformFullTickWhenPaused = 0x500; // char : 1
		constexpr auto CurrentTouchInterface = 0x518; // UTouchInterface*
		constexpr auto SpectatorPawn = 0x570; // ASpectatorPawn*
		constexpr auto bIsLocalPlayerController = 0x57c; // bool
		constexpr auto SpawnLocation = 0x580; // FVector
	}

	namespace n_USocialParty { // : UObject
		constexpr auto ReservationBeaconClientClass = 0x58; // APartyBeaconClient*
		constexpr auto SpectatorBeaconClientClass = 0x60; // ASpectatorBeaconClient*
		constexpr auto OwningLocalUserId = 0x78; // FUniqueNetIdRepl
		constexpr auto CurrentLeaderId = 0xa0; // FUniqueNetIdRepl
		constexpr auto PartyMembersById = 0xc8; // TMap<FUniqueNetIdRepl, UPartyMember*>
		constexpr auto bEnableAutomaticPartyRejoin = 0x118; // bool
		constexpr auto ReservationBeaconClient = 0x190; // APartyBeaconClient*
		constexpr auto SpectatorBeaconClient = 0x1a0; // ASpectatorBeaconClient*
	}

	namespace n_UBP_Attachment_1p63_C { // : USQWeaponAttachment_Scope
		constexpr auto MeshTransitionPercentage = 0x4b0; // float
		constexpr auto ADSMesh = 0x4b8; // UStaticMesh*
		constexpr auto ADSMeshTransform = 0x4c0; // FTransform
		constexpr auto NonADSMesh = 0x4f0; // UStaticMesh*
		constexpr auto NonADSMeshTransform = 0x500; // FTransform
		constexpr auto InToADSMeshTransitionSettings = 0x530; // TArray<FSQMeshTransitionSettings>
		constexpr auto OutFromADSMeshTransitionSettings = 0x540; // TArray<FSQMeshTransitionSettings>
	}

	namespace n_UParticleModuleLocation { // : UParticleModuleLocationBase
		constexpr auto StartLocation = 0x30; // FRawDistributionVector
		constexpr auto DistributeOverNPoints = 0x80; // float
		constexpr auto DistributeThreshold = 0x84; // float
	}

	namespace n_ARadialForceActor { // : ARigidBodyBase
		constexpr auto ForceComponent = 0x248; // URadialForceComponent*
	}

	namespace n_UParticleModuleEventReceiverKillParticles { // : UParticleModuleEventReceiverBase
		constexpr auto bStopSpawning = 0x40; // char : 1
	}

	namespace n_ACameraRig_Crane { // : AActor
		constexpr auto CranePitch = 0x248; // float
		constexpr auto CraneYaw = 0x24c; // float
		constexpr auto CraneArmLength = 0x250; // float
		constexpr auto bLockMountPitch = 0x254; // bool
		constexpr auto bLockMountYaw = 0x255; // bool
		constexpr auto TransformComponent = 0x258; // USceneComponent*
		constexpr auto CraneYawControl = 0x260; // USceneComponent*
		constexpr auto CranePitchControl = 0x268; // USceneComponent*
		constexpr auto CraneCameraMount = 0x270; // USceneComponent*
	}

	namespace n_ASQInfantryWeapon { // : ASQWeapon
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_ADocumentationActor { // : AActor
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto bHidden = 0x80; // char : 1
		constexpr auto bNetTemporary = 0x80; // char : 1
		constexpr auto bNetStartup = 0x80; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x80; // char : 1
		constexpr auto bAlwaysRelevant = 0x80; // char : 1
		constexpr auto bReplicateMovement = 0x80; // char : 1
		constexpr auto bTearOff = 0x80; // char : 1
		constexpr auto bExchangedRoles = 0x80; // char : 1
		constexpr auto bNetLoadOnClient = 0x81; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x81; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x81; // char : 1
		constexpr auto bRelevantForLevelBounds = 0x81; // char : 1
		constexpr auto bReplayRewindable = 0x81; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x81; // char : 1
		constexpr auto bAutoDestroyWhenFinished = 0x81; // char : 1
		constexpr auto bBlockInput = 0x81; // char : 1
		constexpr auto bCanBeDamaged = 0x82; // char : 1
		constexpr auto bCollideWhenPlacing = 0x82; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x82; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x82; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x82; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x82; // char : 1
		constexpr auto bIsEditorOnlyActor = 0x82; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x82; // char : 1
		constexpr auto bReplicates = 0x83; // char : 1
		constexpr auto bCanBeInCluster = 0x83; // char : 1
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x83; // char : 1
		constexpr auto bActorEnableCollision = 0x84; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x84; // char : 1
		constexpr auto RemoteRole = 0x85; // ENetRole
		constexpr auto ReplicatedMovement = 0x88; // FRepMovement
		constexpr auto InitialLifeSpan = 0xbc; // float
		constexpr auto CustomTimeDilation = 0xc0; // float
		constexpr auto AttachmentReplication = 0xc8; // FRepAttachment
		constexpr auto Owner = 0x108; // AActor*
		constexpr auto NetDriverName = 0x110; // FName
		constexpr auto Role = 0x118; // ENetRole
		constexpr auto NetDormancy = 0x119; // ENetDormancy
		constexpr auto SpawnCollisionHandlingMethod = 0x11a; // ESpawnActorCollisionHandlingMethod
		constexpr auto AutoReceiveInput = 0x11b; // EAutoReceiveInput
		constexpr auto InputPriority = 0x11c; // int
		constexpr auto InputComponent = 0x120; // UInputComponent*
		constexpr auto NetCullDistanceSquared = 0x128; // float
		constexpr auto NetTag = 0x12c; // int
		constexpr auto NetUpdateFrequency = 0x130; // float
		constexpr auto MinNetUpdateFrequency = 0x134; // float
		constexpr auto bUseRelativeNetUpdateFrequency = 0x138; // char : 1
		constexpr auto bUseOwnerRelativeNetUpdateFrequency = 0x138; // char : 1
		constexpr auto MinRelativeNetUpdateEvaluationFrequency = 0x13c; // float
		constexpr auto NetPriority = 0x140; // float
		constexpr auto Instigator = 0x148; // APawn*
		constexpr auto Children = 0x150; // TArray<AActor*>
		constexpr auto RootComponent = 0x160; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x168; // TArray<AMatineeActor*>
		constexpr auto Layers = 0x180; // TArray<FName>
		constexpr auto ParentComponent = 0x190; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto Tags = 0x198; // TArray<FName>
		constexpr auto OnTakeAnyDamage = 0x1a8; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x1a9; // FScriptMulticastDelegate
		constexpr auto OnTakeRadialDamage = 0x1aa; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x1ab; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x1ac; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x1ad; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x1ae; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x1af; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x1b0; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x1b1; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x1b2; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x1b3; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x1b4; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x1b5; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x1b6; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x1b7; // FScriptMulticastDelegate
		constexpr auto InstanceComponents = 0x218; // TArray<UActorComponent*>
		constexpr auto BlueprintCreatedComponents = 0x228; // TArray<UActorComponent*>
	}

	namespace n_APlayerCameraManager { // : AActor
		constexpr auto PCOwner = 0x248; // APlayerController*
		constexpr auto TransformComponent = 0x250; // USceneComponent*
		constexpr auto DefaultFOV = 0x260; // float
		constexpr auto DefaultOrthoWidth = 0x268; // float
		constexpr auto DefaultAspectRatio = 0x270; // float
		constexpr auto CameraCache = 0x2c0; // FCameraCacheEntry
		constexpr auto LastFrameCameraCache = 0x890; // FCameraCacheEntry
		constexpr auto ViewTarget = 0xe60; // FTViewTarget
		constexpr auto PendingViewTarget = 0x1440; // FTViewTarget
		constexpr auto CameraCachePrivate = 0x1a40; // FCameraCacheEntry
		constexpr auto LastFrameCameraCachePrivate = 0x2010; // FCameraCacheEntry
		constexpr auto ModifierList = 0x25e0; // TArray<UCameraModifier*>
		constexpr auto DefaultModifiers = 0x25f0; // TArray<UCameraModifier*>
		constexpr auto FreeCamDistance = 0x2600; // float
		constexpr auto FreeCamOffset = 0x2604; // FVector
		constexpr auto ViewTargetOffset = 0x2610; // FVector
		constexpr auto CameraLensEffects = 0x2630; // TArray<AEmitterCameraLensEffectBase*>
		constexpr auto CachedCameraShakeMod = 0x2640; // UCameraModifier_CameraShake*
		constexpr auto AnimInstPool = 0x2648; // UCameraAnimInst* [0x8]
		constexpr auto PostProcessBlendCache = 0x2688; // TArray<FPostProcessSettings>
		constexpr auto ActiveAnims = 0x26a8; // TArray<UCameraAnimInst*>
		constexpr auto FreeAnims = 0x26b8; // TArray<UCameraAnimInst*>
		constexpr auto AnimCameraActor = 0x26c8; // ACameraActor*
		constexpr auto bIsOrthographic = 0x26d0; // char : 1
		constexpr auto bDefaultConstrainAspectRatio = 0x26d0; // char : 1
		constexpr auto bClientSimulatingViewTarget = 0x26d0; // char : 1
		constexpr auto bUseClientSideCameraUpdates = 0x26d0; // char : 1
		constexpr auto bGameCameraCutThisFrame = 0x26d1; // char : 1
		constexpr auto ViewPitchMin = 0x26d4; // float
		constexpr auto ViewPitchMax = 0x26d8; // float
		constexpr auto ViewYawMin = 0x26dc; // float
		constexpr auto ViewYawMax = 0x26e0; // float
		constexpr auto ViewRollMin = 0x26e4; // float
		constexpr auto ViewRollMax = 0x26e8; // float
		constexpr auto ServerUpdateCameraTimeout = 0x26f0; // float
	}

	namespace n_USQSoundNodeDistanceDelay { // : USoundNode
		constexpr auto SpeedOfSound = 0x40; // float
		constexpr auto DelayMax = 0x44; // float
		constexpr auto TestDistance = 0x48; // float
	}

	namespace n_USQCoreStateMapComponent { // : USQCoreStateWidgetFactory
		constexpr auto RootWidget = 0x340; // UPanelWidget*
		constexpr auto MapWidgetBase = 0x348; // USQMapWidgetBase*
		constexpr auto WidgetScale = 0x350; // float
	}

	namespace n_USQVehicleWeaponAnimInstance { // : UAnimInstance
		constexpr auto Pitch = 0x268; // float
		constexpr auto Yaw = 0x26c; // float
		constexpr auto CurrentMagRemainingRoundsTime = 0x270; // float
		constexpr auto CurrentMagRemainingRoundsMultiplier = 0x274; // float
	}

	namespace n_UAchievementQueryCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto OnFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_USQDeployableSettings { // : USQSettings
		constexpr auto ShouldBeTrackedByFOB = 0x58; // bool
	}

	namespace n_USoundClass { // : UObject
		constexpr auto properties = 0x28; // FSoundClassProperties
		constexpr auto ChildClasses = 0x58; // TArray<USoundClass*>
		constexpr auto PassiveSoundMixModifiers = 0x68; // TArray<FPassiveSoundMixModifier>
		constexpr auto ParentClass = 0x78; // USoundClass*
	}

	namespace n_ABP_M4M203_UGL_Smoke_Blue_C { // : ABP_M4M203_UGL_Smoke_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_ABP_M4_M150_C { // : ABP_M4A1_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_USQAnimInstanceSoldier3P { // : USQAnimInstanceSoldier
		constexpr auto bVaulting = 0x420; // bool
		constexpr auto bClimbing = 0x421; // bool
		constexpr auto bAssetPlayerTimeFromEnd__LTEPtOne__Jump_3P__JumpEnd__rifle_stand_jumpendOrIsProne = 0x422; // bool
		constexpr auto bAssetPlayerTimeFromEnd__LTEPtOne__Jump_3P__JumpStart__rifle_stand_jumpstart = 0x423; // bool
		constexpr auto bAssetPlayerTime__GTEPtOne__Jump_3P__JumpStart__rifle_stand_jumpstart = 0x424; // bool
		constexpr auto bStateWeight__GTEOne__Stand3P__Jog = 0x4a0; // bool
		constexpr auto StateWeight__Stand3P__Jog = 0x4a4; // float
		constexpr auto bStateWeight__GTEOne__Stand3P__Sprint = 0x4a8; // bool
		constexpr auto StateWeight__Stand3P__Sprint = 0x4ac; // float
		constexpr auto StateWeight__Stand3P__SprintStop = 0x4b0; // float
		constexpr auto bRelevantAnimTimeRemaining__LTEOne__Stand3P__SprintStop = 0x4b4; // bool
		constexpr auto bStateWeight__GTEOne__Stand_NeutralStates__Neutral = 0x52c; // bool
		constexpr auto bStateWeight__GTEOne__Stand_NeutralStates__TurnLeft_91 = 0x52d; // bool
		constexpr auto bStateWeight__GTEOne__Stand_NeutralStates__TurnRight_91 = 0x52e; // bool
		constexpr auto bRelevantAnimTimeRemaining__LTEZero__Stand_NeutralStates__TurnLeft_91 = 0x52f; // bool
		constexpr auto bRelevantAnimTimeRemaining__LTEZero__Stand_NeutralStates__TurnRight_91 = 0x530; // bool
		constexpr auto StateWeight__Crouch3P__Sprint = 0x5c4; // float
		constexpr auto StateWeight__Crouch3P__Walk = 0x5c8; // float
		constexpr auto bStateWeight__GTEOne__Crouch_NeutralStates__Neutral = 0x606; // bool
		constexpr auto bStateWeight__GTEOne__Crouch_NeutralStates__TurnLeft_91 = 0x607; // bool
		constexpr auto bStateWeight__GTEOne__Crouch_NeutralStates__TurnRight_91 = 0x608; // bool
		constexpr auto StateWeight__Prone3P__ProneMove = 0x680; // float
		constexpr auto bStateWeight__GTEOne__Prone_NeutralStates__Neutral = 0x6a1; // bool
		constexpr auto bStateWeight__GTEOne__Prone_NeutralStates__TurnLeft_46 = 0x6a2; // bool
		constexpr auto bStateWeight__GTEOne__Prone_NeutralStates__TurnRight_46 = 0x6a3; // bool
		constexpr auto bStateWeight__GTEOne__SoldierMovements__Stand = 0x6fb; // bool
		constexpr auto bStateWeight__GTEOne__SoldierMovements__Crouch = 0x6fc; // bool
		constexpr auto bStateWeight__GTEOne__SoldierMovements__Stand2Crouch = 0x6fd; // bool
		constexpr auto StateWeight__SoldierMovements__Stand2Prone = 0x700; // float
		constexpr auto StateWeight__SoldierMovements__Sprint2Prone = 0x704; // float
		constexpr auto StateWeight__SoldierMovements__Prone2Stand = 0x708; // float
		constexpr auto StateWeight__SoldierMovements__Crouch2Prone = 0x70c; // float
		constexpr auto StateWeight__SoldierMovements__Prone2Crouch = 0x710; // float
		constexpr auto bAssetPlayerTimeFromEnd__LTEPtFour__SoldierMovements__Stand2Prone__rifle_stand2prone = 0x714; // bool
		constexpr auto bAssetPlayerTimeFromEnd__LTEPtTwo__SoldierMovements__Sprint2Prone__rifle_sprint2prone = 0x715; // bool
		constexpr auto bAssetPlayerTimeFromEnd__LTEPtFour__SoldierMovements__Prone2Stand__rifle_prone2stand = 0x716; // bool
		constexpr auto bAssetPlayerTimeFromEnd__LTEPtFour__SoldierMovements__Crouch2Prone__rifle_crouch2prone = 0x717; // bool
		constexpr auto bAssetPlayerTimeFromEnd__LTEPtFour__SoldierMovements__Prone2Crouch__rifle_prone2crouch = 0x718; // bool
		constexpr auto bAssetPlayerTimeFromEnd__LTEPtOne__SoldierMovements__Stand2Crouch__Stand2Crouch = 0x719; // bool
		constexpr auto bAssetPlayerTimeFromEnd__LTEPtOne__SoldierMovements__Crouch2Stand__Crouch2Stand = 0x71a; // bool
		constexpr auto bIsSprinting = 0x8fd; // bool
		constexpr auto CustomNotIsFallingAlpha = 0x900; // float
		constexpr auto BS1D_3pStandSprintType = 0x908; // UBlendSpace1D*
		constexpr auto SprintStop3p = 0x910; // UAnimSequence*
		constexpr auto BS1D_3pCrouchSprintType = 0x918; // UBlendSpace1D*
		constexpr auto BS_3pStandJogType = 0x920; // UBlendSpace*
		constexpr auto BS_3pStandWalkType = 0x928; // UBlendSpace*
		constexpr auto BS_3pCrouchWalkType = 0x930; // UBlendSpace*
		constexpr auto BS1D_3pProneCrawlType = 0x938; // UBlendSpace1D*
		constexpr auto StandStopMove = 0x940; // UAnimSequence*
		constexpr auto CrouchStopMove = 0x948; // UAnimSequence*
		constexpr auto StandLeanLeftShuffle = 0x950; // UAnimSequence*
		constexpr auto StandLeanRightShuffle = 0x958; // UAnimSequence*
		constexpr auto CrouchLeanLeftShuffle = 0x960; // UAnimSequence*
		constexpr auto CrouchLeanRightShuffle = 0x968; // UAnimSequence*
		constexpr auto AO1D_StandPitch = 0x970; // UBlendSpace1D*
		constexpr auto AO1D_CrouchPitch = 0x978; // UBlendSpace1D*
		constexpr auto AO1D_PronePitch = 0x980; // UBlendSpace1D*
		constexpr auto AO_BipodStandCrouchPitch = 0x988; // UBlendSpace*
		constexpr auto AO1D_StandYawSF = 0x990; // UAnimSequence*
		constexpr auto AO1D_CrouchYawSF = 0x998; // UAnimSequence*
		constexpr auto AO1D_ProneYawSF = 0x9a0; // UAnimSequence*
		constexpr auto StandTurnRight = 0x9a8; // UAnimSequence*
		constexpr auto StandTurnLeft = 0x9b0; // UAnimSequence*
		constexpr auto CrouchTurnLeft = 0x9b8; // UAnimSequence*
		constexpr auto CrouchTurnRight = 0x9c0; // UAnimSequence*
		constexpr auto ProneTurnRight = 0x9c8; // UAnimSequence*
		constexpr auto ProneTurnLeft = 0x9d0; // UAnimSequence*
		constexpr auto SprintToProne3p = 0x9d8; // UAnimSequence*
		constexpr auto StandToProne3p = 0x9e0; // UAnimSequence*
		constexpr auto ProneToStand3p = 0x9e8; // UAnimSequence*
		constexpr auto CrouchToProne3p = 0x9f0; // UAnimSequence*
		constexpr auto ProneToCrouch3p = 0x9f8; // UAnimSequence*
		constexpr auto FpvLowerRootBoneOffset = 0xa00; // FVector
		constexpr auto CustomSpeedMin40 = 0xa0c; // float
		constexpr auto ProneStopMoveAlpha = 0xa10; // float
		constexpr auto CrouchStopMoveAlpha = 0xa14; // float
		constexpr auto bFP_HighestClimbAnim = 0xa18; // bool
		constexpr auto bFP_T_Jump_3PJumpStartToJumpEnd = 0xa19; // bool
		constexpr auto bFP_T_Stand3PSprintStopToJog = 0xa1a; // bool
		constexpr auto bFP_T_Stand3PSprintToSprintStop = 0xa1b; // bool
		constexpr auto bFP_T_Stand3PJogToSprint = 0xa1c; // bool
		constexpr auto bFP_T_Stand_NeutralStatesTurnRight_90ToTurnLeft_91 = 0xa1d; // bool
		constexpr auto bFP_T_Stand_NeutralStatesTurnLeft_90ToTurnRight_91 = 0xa1e; // bool
		constexpr auto bFP_T_Stand_NeutralStatesNeutralToTurnLeft_91 = 0xa1f; // bool
		constexpr auto bFP_T_Stand_NeutralStatesNeutralToTurnRight_91 = 0xa20; // bool
		constexpr auto bFP_T_Crouch_NeutralStatesTurnRight_90ToNeutral = 0xa21; // bool
		constexpr auto bFP_T_Crouch_NeutralStatesTurnRight_90ToTurnLeft_91 = 0xa22; // bool
		constexpr auto bFP_T_Crouch_NeutralStatesTurnLeft_90ToNeutral = 0xa23; // bool
		constexpr auto bFP_T_Crouch_NeutralStatesTurnLeft_90ToTurnRight_91 = 0xa24; // bool
		constexpr auto bFP_T_Crouch_NeutralStatesNeutralToTurnLeft_91 = 0xa25; // bool
		constexpr auto bFP_T_Crouch_NeutralStatesNeutralToTurnRight_91 = 0xa26; // bool
		constexpr auto bFP_T_Prone_NeutralStatesTurnLeft_45ToNeutral = 0xa27; // bool
		constexpr auto bFP_T_Prone_NeutralStatesTurnLeft_45ToTurnRight_46 = 0xa28; // bool
		constexpr auto bFP_T_Prone_NeutralStatesTurnRight_45ToNeutral = 0xa29; // bool
		constexpr auto bFP_T_Prone_NeutralStatesTurnRight_45ToTurnLeft_46 = 0xa2a; // bool
		constexpr auto bFP_T_Prone_NeutralStatesNeutralToTurnLeft_46 = 0xa2b; // bool
		constexpr auto bFP_T_Prone_NeutralStatesNeutralToTurnRight_46 = 0xa2c; // bool
		constexpr auto bFP_T_SoldierMovementsCrouch2StandToStand = 0xa2d; // bool
		constexpr auto bFP_T_SoldierMovementsStand2CrouchToCrouch2Prone = 0xa2e; // bool
		constexpr auto bFP_T_SoldierMovementsStand2CrouchToCrouch = 0xa2f; // bool
		constexpr auto bFP_T_SoldierMovementsCrouchToCrouch2Prone = 0xa30; // bool
		constexpr auto bFP_T_SoldierMovements_StandToCrouch = 0xa31; // bool
		constexpr auto bFP_T_SoldierMovementsStandToStand2Prone = 0xa32; // bool
		constexpr auto bFP_T_SoldierMovementsStandToStand2Crouch = 0xa33; // bool
		constexpr auto bFP_T_SoldierMovementsStandToSprint2Prone = 0xa34; // bool
		constexpr auto FP_FloorAlignedRotationRightFoot = 0xa38; // FRotator
		constexpr auto FP_FloorAlignedRotationLeftFoot = 0xa44; // FRotator
		constexpr auto FP_FloorAlignedRotationFeetRoot = 0xa50; // FRotator
		constexpr auto FP_FloorAlignedRotationFeetRootReverse = 0xa5c; // FRotator
		constexpr auto FP_IKFeetRootTranslation = 0xa68; // FVector
		constexpr auto FP_IsNotFirstPersonVisibilityAlpha = 0xa74; // float
		constexpr auto FP_StandIdleAlpha = 0xa78; // float
		constexpr auto FP_CrouchProneIdleAlpha = 0xa7c; // float
		constexpr auto bFP_IsStanding = 0xa80; // bool
		constexpr auto bFP_IsStandingStill = 0xa81; // bool
		constexpr auto bFP_CanCrouchToStandingStill = 0xa82; // bool
		constexpr auto bFP_CanCrouchToStandMoving = 0xa83; // bool
		constexpr auto bFP_IsCrouchedInPlace = 0xa84; // bool
		constexpr auto FP_AimOffsetProneYawFrameTime = 0xa88; // float
		constexpr auto FP_AimOffsetYawNegative = 0xa8c; // float
		constexpr auto FP_AimOffsetProneTurnRightYawFrameTime = 0xa90; // float
		constexpr auto FP_AimOffsetTurnRightYawNegative = 0xa94; // float
		constexpr auto FP_AimOffsetProneTurnLeftYawFrameTime = 0xa98; // float
		constexpr auto FP_AimOffsetTurnLeftYawNegative = 0xa9c; // float
		constexpr auto FP_ProneWalkPlayRate = 0xaa0; // float
		constexpr auto bFP_IsMoving = 0xaa4; // bool
		constexpr auto bFP_IsNotMoving = 0xaa5; // bool
		constexpr auto FP_FloorAlignedRotationBody = 0xaa8; // FRotator
		constexpr auto FP_FloorAlignedRotationBodyReverse = 0xab4; // FRotator
		constexpr auto FP_CustomSpeedMin40NormalizedToRange = 0xac0; // float
		constexpr auto bFP_IsProneAndNotDeployBipod = 0xac4; // bool
		constexpr auto bFP_IsClimbingOrVaulting = 0xac5; // bool
		constexpr auto FP_FreeLook3PHeadRotation = 0xac8; // FRotator
		constexpr auto FP_BipodCrouchStanceAlpha = 0xad4; // float
		constexpr auto FP_BipodStandCrouchAimPitchAlpha = 0xad8; // float
		constexpr auto FP_BipodProneStanceAlpha = 0xae0; // float
		constexpr auto FP_BipodAimOffsetAlpha = 0xae4; // float
		constexpr auto FP_BipodWeaponPosCoveredPoseAlphaDependingOnSkelMeshOffset = 0xae8; // float
		constexpr auto FP_BipodCoveredPoseBlendAlpha = 0xaec; // float
		constexpr auto FP_BipodHighPitchCoveredPoseWeaponPositionOffset = 0xaf0; // FVector
		constexpr auto FP_BipodDynamicBodyOffset = 0xafc; // FVector
		constexpr auto FP_AimOffsetCrouchYawFrameTime = 0xb08; // float
		constexpr auto FP_AimOffsetTurnLeftYawPlayRate = 0xb0c; // float
		constexpr auto FP_AimOffsetTurnLeftProneYawPlayRate = 0xb10; // float
		constexpr auto FP_AimOffsetTurnLeftYawFrameTime = 0xb14; // float
		constexpr auto FP_AimOffsetTurnRightYawPlayRate = 0xb18; // float
		constexpr auto FP_AimOffsetTurnRightProneYawPlayRate = 0xb1c; // float
		constexpr auto FP_AimOffsetTurnRightYawFrameTime = 0xb20; // float
		constexpr auto FP_StandStopMoveAlpha = 0xb24; // float
		constexpr auto FP_AimYawFrameTime2 = 0xb28; // float
		constexpr auto FP_CrouchWalkPlayRate = 0xb2c; // float
		constexpr auto FP_AimYawJogFrameTime = 0xb30; // float
		constexpr auto FP_AimPitchJogAlpha = 0xb34; // float
		constexpr auto FP_JogPlayRate = 0xb38; // float
		constexpr auto FP_SprintStopAlpha = 0xb3c; // float
		constexpr auto bFP_Stand3PNeutralToJogRule = 0xb40; // bool
		constexpr auto bFP_Stand3PJogToNeutralRule = 0xb41; // bool
		constexpr auto bFP_Stand3PSprintToNeutralRule = 0xb42; // bool
		constexpr auto FP_AimOffsetStandYawFrameTime = 0xb44; // float
		constexpr auto FP_JumpEndAlpha = 0xb48; // float
		constexpr auto bFP_IsFallingAndNotJumping = 0xb4c; // bool
		constexpr auto FP_Final3PLeftHandIKOutAlpha = 0xb50; // float
		constexpr auto bFP_AOStandToConduit = 0xb54; // bool
		constexpr auto bFP_AOStandSprintJog = 0xb55; // bool
		constexpr auto bFP_AOCrouchToConduit = 0xb56; // bool
		constexpr auto bFP_AOProneToConduit = 0xb57; // bool
		constexpr auto bFP_AOConduitToCrouch = 0xb58; // bool
		constexpr auto FP_BS_StandSprintSpeed = 0xb5c; // float
		constexpr auto FP_SprintHeadDirection = 0xb60; // FRotator
		constexpr auto FP_SprintRootDirection = 0xb6c; // float
		constexpr auto FP_BS_CrouchSprintSpeed = 0xb70; // float
		constexpr auto bFP_LeanHeadWhenADSAndADS = 0xb74; // bool
		constexpr auto bFinal3pLeftHandIkOut = 0xb75; // bool
		constexpr auto CustomWeapActionsAndIsAds = 0xb78; // float
		constexpr auto FP_WalkPlayRate = 0xb7c; // float
		constexpr auto FP_IsNotMovingAlpha = 0xb80; // float
		constexpr auto FP_LeanYawOffsetFrameTime = 0xb84; // float
		constexpr auto FP_AlphaAbsIkFeetRootPitch = 0xb88; // float
		constexpr auto RawActorRotation = 0xb8c; // FRotator
		constexpr auto SmoothedControlRotation = 0xb98; // FRotator
		constexpr auto bTurnNeutAoDisabled = 0xba4; // bool
		constexpr auto CachedActorYaw = 0xba8; // FRotator
		constexpr auto bLeftHandIkOut = 0xbb4; // bool
		constexpr auto bJumpEndBobbing3P = 0xbb5; // bool
		constexpr auto CustomIsSprinting = 0xbb8; // float
		constexpr auto CustomIsAdsOrBipod = 0xbbc; // float
		constexpr auto SmoothVelocity = 0xbc0; // FVector
		constexpr auto AccelRateClamp = 0xbcc; // float
		constexpr auto SmoothWorldDirection = 0xbd0; // FRotator
		constexpr auto AimRotation_3P = 0xbdc; // FRotator
		constexpr auto AimRotation2_3P = 0xbe8; // FRotator
		constexpr auto bTurnLeftAnim = 0xbf4; // bool
		constexpr auto bFullMoveAnim = 0xbf5; // bool
		constexpr auto bTurnRightAnim = 0xbf6; // bool
		constexpr auto bTurnLeft = 0xbf7; // bool
		constexpr auto bTurnRight = 0xbf8; // bool
		constexpr auto bTurnLeftProne = 0xbf9; // bool
		constexpr auto bTurnRightProne = 0xbfa; // bool
		constexpr auto YawOffset = 0xbfc; // FRotator
		constexpr auto YawOffsetDuringTurnLeft = 0xc08; // FRotator
		constexpr auto YawOffsetDuringTurnRight = 0xc14; // FRotator
		constexpr auto bFullSprintAnim = 0xc20; // bool
		constexpr auto LastSpeed = 0xc24; // float
		constexpr auto SprintStopCachedSpeed = 0xc28; // float
		constexpr auto bCachedIsProne = 0xc2c; // bool
		constexpr auto StandStopMoveAlpha = 0xc30; // float
		constexpr auto bCachedIsCrouched = 0xc34; // bool
		constexpr auto bCachedIsStand = 0xc35; // bool
		constexpr auto bProneTransAnim = 0xc36; // bool
		constexpr auto PmCachedCapsuleWorldLoc1 = 0xc38; // FVector
		constexpr auto EndSprintToProneCapsuleLoc = 0xc44; // FVector
		constexpr auto Alpha = 0xc50; // float
		constexpr auto LastKnownHeight = 0xc54; // float
		constexpr auto HeightVelocity = 0xc58; // float
		constexpr auto LastKnownHeightVelocity = 0xc5c; // float
		constexpr auto BipodAimUpLimit3P = 0xc60; // float
		constexpr auto BipodAimDownLimit3P = 0xc64; // float
		constexpr auto CustomNotVaultingAlpha = 0xc68; // float
		constexpr auto CustomNotClimbingAlpha = 0xc6c; // float
		constexpr auto CurrentFloorNormalBody = 0xc70; // FVector
		constexpr auto CurrentFloorNormalFeet = 0xc7c; // FVector
		constexpr auto IkFeetRootRelRot = 0xc88; // FRotator
		constexpr auto LeftFootFloorNormal = 0xc94; // FVector
		constexpr auto RightFootFloorNormal = 0xca0; // FVector
		constexpr auto CustomIsLoweredAndNotProne = 0xcac; // float
		constexpr auto MeshRotationOffset = 0xcb0; // FRotator
		constexpr auto CachedActorRotationNoLean = 0xcbc; // FRotator
		constexpr auto CachedLeanYawOffset = 0xcc8; // float
		constexpr auto bLeanHeadWhenAds = 0xcd0; // bool
	}

	namespace n_ATargetPoint { // : AActor
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto bHidden = 0x80; // char : 1
		constexpr auto bNetTemporary = 0x80; // char : 1
		constexpr auto bNetStartup = 0x80; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x80; // char : 1
		constexpr auto bAlwaysRelevant = 0x80; // char : 1
		constexpr auto bReplicateMovement = 0x80; // char : 1
		constexpr auto bTearOff = 0x80; // char : 1
		constexpr auto bExchangedRoles = 0x80; // char : 1
		constexpr auto bNetLoadOnClient = 0x81; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x81; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x81; // char : 1
		constexpr auto bRelevantForLevelBounds = 0x81; // char : 1
		constexpr auto bReplayRewindable = 0x81; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x81; // char : 1
		constexpr auto bAutoDestroyWhenFinished = 0x81; // char : 1
		constexpr auto bBlockInput = 0x81; // char : 1
		constexpr auto bCanBeDamaged = 0x82; // char : 1
		constexpr auto bCollideWhenPlacing = 0x82; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x82; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x82; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x82; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x82; // char : 1
		constexpr auto bIsEditorOnlyActor = 0x82; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x82; // char : 1
		constexpr auto bReplicates = 0x83; // char : 1
		constexpr auto bCanBeInCluster = 0x83; // char : 1
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x83; // char : 1
		constexpr auto bActorEnableCollision = 0x84; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x84; // char : 1
		constexpr auto RemoteRole = 0x85; // ENetRole
		constexpr auto ReplicatedMovement = 0x88; // FRepMovement
		constexpr auto InitialLifeSpan = 0xbc; // float
		constexpr auto CustomTimeDilation = 0xc0; // float
		constexpr auto AttachmentReplication = 0xc8; // FRepAttachment
		constexpr auto Owner = 0x108; // AActor*
		constexpr auto NetDriverName = 0x110; // FName
		constexpr auto Role = 0x118; // ENetRole
		constexpr auto NetDormancy = 0x119; // ENetDormancy
		constexpr auto SpawnCollisionHandlingMethod = 0x11a; // ESpawnActorCollisionHandlingMethod
		constexpr auto AutoReceiveInput = 0x11b; // EAutoReceiveInput
		constexpr auto InputPriority = 0x11c; // int
		constexpr auto InputComponent = 0x120; // UInputComponent*
		constexpr auto NetCullDistanceSquared = 0x128; // float
		constexpr auto NetTag = 0x12c; // int
		constexpr auto NetUpdateFrequency = 0x130; // float
		constexpr auto MinNetUpdateFrequency = 0x134; // float
		constexpr auto bUseRelativeNetUpdateFrequency = 0x138; // char : 1
		constexpr auto bUseOwnerRelativeNetUpdateFrequency = 0x138; // char : 1
		constexpr auto MinRelativeNetUpdateEvaluationFrequency = 0x13c; // float
		constexpr auto NetPriority = 0x140; // float
		constexpr auto Instigator = 0x148; // APawn*
		constexpr auto Children = 0x150; // TArray<AActor*>
		constexpr auto RootComponent = 0x160; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x168; // TArray<AMatineeActor*>
		constexpr auto Layers = 0x180; // TArray<FName>
		constexpr auto ParentComponent = 0x190; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto Tags = 0x198; // TArray<FName>
		constexpr auto OnTakeAnyDamage = 0x1a8; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x1a9; // FScriptMulticastDelegate
		constexpr auto OnTakeRadialDamage = 0x1aa; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x1ab; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x1ac; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x1ad; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x1ae; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x1af; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x1b0; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x1b1; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x1b2; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x1b3; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x1b4; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x1b5; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x1b6; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x1b7; // FScriptMulticastDelegate
		constexpr auto InstanceComponents = 0x218; // TArray<UActorComponent*>
		constexpr auto BlueprintCreatedComponents = 0x228; // TArray<UActorComponent*>
	}

	namespace n_ABP_40MM_Proj2_C { // : ASQMortarProjectile
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto Shockwave = 0x528; // UChildActorComponent*
		constexpr auto SkeletalMesh = 0x530; // USkeletalMeshComponent*
		constexpr auto BPEffectOnUnderMinFlightTime = 0x538; // UParticleSystem*
		constexpr auto BPSoundonUnderMinFlightTime = 0x540; // USoundBase*
	}

	namespace n_UCompositeCurveTable { // : UCurveTable
		constexpr auto ParentTables = 0xa0; // TArray<UCurveTable*>
		constexpr auto OldParentTables = 0xb8; // TArray<UCurveTable*>
	}

	namespace n_UPrefabComponent { // : UPrimitiveComponent
		constexpr auto bConnected = 0x408; // char : 1
		constexpr auto bLockSelection = 0x408; // char : 1
		constexpr auto Prefab = 0x410; // UPrefabAsset*
		constexpr auto GeneratedBlueprint = 0x418; // UBlueprint*
		constexpr auto PrefabInstancesMap = 0x420; // TMap<FName, AActor*>
		constexpr auto VariantRulesOverwrite = 0x470; // TArray<FPrefabVariantRule>
		constexpr auto bTransient = 0x480; // char : 1
	}

	namespace n_AExponentialHeightFog { // : AInfo
		constexpr auto Component = 0x248; // UExponentialHeightFogComponent*
		constexpr auto bEnabled = 0x250; // char : 1
	}

	namespace n_AGameplayAbilityTargetActor_ActorPlacement { // : AGameplayAbilityTargetActor_GroundTrace
		constexpr auto PlacedActorClass = 0x390; // UObject*
		constexpr auto PlacedActorMaterial = 0x398; // UMaterialInterface*
	}

	namespace n_UAITask_RunEQS { // : UAITask
		constexpr auto OwnerController = 0x68; // AAIController*
	}

	namespace n_ASQGrenadeProjectile { // : ASQProjectile
		constexpr auto MinimumVelocityToPlayThrowableEffects = 0x490; // float
		constexpr auto FuseTime = 0x494; // float
		constexpr auto bIsExploding = 0x498; // bool
		constexpr auto bExplodeOnFuse = 0x499; // bool
		constexpr auto bExplodeOnLifeSpanExpired = 0x49a; // bool
		constexpr auto bExplodeOnLifeSpanExpiredAfterImpact = 0x49b; // bool
	}

	namespace n_UParticleModuleMeshRotationRate_Seeded { // : UParticleModuleMeshRotationRate
		constexpr auto RandomSeedInfo = 0x80; // FParticleRandomSeedInfo
	}

	namespace n_UBP_M4M203_M68_UGL_HE_StaticInfo_C { // : UBP_M4M203_M68_UGL_Parent_StaticInfo_C
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_UDmgTypeBP_Environmental_C { // : UDamageType
		constexpr auto bCausedByWorld = 0x28; // char : 1
		constexpr auto bScaleMomentumByMass = 0x28; // char : 1
		constexpr auto bRadialDamageVelChange = 0x28; // char : 1
		constexpr auto DamageImpulse = 0x2c; // float
		constexpr auto DestructibleImpulse = 0x30; // float
		constexpr auto DestructibleDamageSpreadScale = 0x34; // float
		constexpr auto DamageFalloff = 0x38; // float
	}

	namespace n_USQCoreStateSquadMemberWidget { // : USQCoreStateSquadListWidget
		constexpr auto RootWidgetSquadId = 0x260; // int
		constexpr auto PlayerState = 0x268; // ASQPlayerState*
		constexpr auto SquadId = 0x270; // int
		constexpr auto bIsPossessingPawn = 0x274; // char : 1
		constexpr auto bIsSquadLeader = 0x278; // bool
		constexpr auto bIsFireTeamLeader = 0x279; // bool
		constexpr auto FireTeamIndex = 0x27c; // int
		constexpr auto FireTeamPosition = 0x284; // int
		constexpr auto DeployRole = 0x290; // USQRoleSettings*
		constexpr auto PlayerName = 0x298; // FString
		constexpr auto CurrentVehicleData = 0x2a8; // USQVehicleUIStaticDataAsset*
		constexpr auto VoipChannel = 0x2b0; // ESQVoiceChannel
		constexpr auto bIsMuted = 0x2b1; // bool
		constexpr auto bIsAlive = 0x2b2; // bool
		constexpr auto bIsBleeding = 0x2b3; // bool
		constexpr auto bIsWounded = 0x2b4; // bool
	}

	namespace n_ABP_RPG7V2_Tandem_C { // : ABP_RPG7V2_Parent_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
		constexpr auto MuzzleFlashRearComponent3P = 0x7b8; // UParticleSystemComponent*
		constexpr auto BackBlastComponent3P = 0x7c0; // UChildActorComponent*
		constexpr auto MuzzleFlashRearComponent1P = 0x7c8; // UParticleSystemComponent*
		constexpr auto SquadBlast = 0x7d0; // USQBlastComponent*
		constexpr auto BackBlastComponent1P = 0x7d8; // UChildActorComponent*
		constexpr auto BackblastSocket = 0x7e0; // FName
		constexpr auto BackblastEffect1P = 0x7e8; // UParticleSystem*
		constexpr auto BackblastEffect3P = 0x7f0; // UParticleSystem*
	}

	namespace n_UImgMediaSource { // : UBaseMediaSource
		constexpr auto FrameRateOverride = 0x38; // FFrameRate
		constexpr auto ProxyOverride = 0x40; // FString
		constexpr auto SequencePath = 0x50; // FDirectoryPath
	}

	namespace n_UMovieSceneSpawnSection { // : UMovieSceneBoolSection
		constexpr auto DefaultValue = 0xe0; // bool
		constexpr auto BoolCurve = 0xe8; // FMovieSceneBoolChannel
	}

	namespace n_ABP_M4A1_M150_Foregrip_Founders_C { // : ABP_M4A1_M150_Foregrip_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UParticleModuleMaterialBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x29; // char : 1
		constexpr auto LODDuplicate = 0x29; // char : 1
		constexpr auto bSupportsRandomSeed = 0x29; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x29; // char : 1
		constexpr auto LODValidity = 0x2c; // char
	}

	namespace n_UGeometryCacheCodecV1 { // : UGeometryCacheCodecBase
		constexpr auto TopologyRanges = 0x28; // TArray<int>
	}

	namespace n_UAnimBlueprintGeneratedClass { // : UBlueprintGeneratedClass
		constexpr auto BakedStateMachines = 0x2e8; // TArray<FBakedAnimationStateMachine>
		constexpr auto TargetSkeleton = 0x2f8; // USkeleton*
		constexpr auto AnimNotifies = 0x300; // TArray<FAnimNotifyEvent>
		constexpr auto OrderedSavedPoseIndicesMap = 0x310; // TMap<FName, FCachedPoseIndices>
		constexpr auto SyncGroupNames = 0x3a0; // TArray<FName>
		constexpr auto EvaluateGraphExposedInputs = 0x3b0; // TArray<FExposedValueHandler>
	}

	namespace n_USQWheeledVehicleMovementComponent { // : UWheeledVehicleMovementComponent4W
		constexpr auto EngineSetup = 0x2d8; // FVehicleEngineData
		constexpr auto DifferentialSetup = 0x378; // FVehicleDifferential4WData
		constexpr auto AckermannAccuracy = 0x394; // float
		constexpr auto TransmissionSetup = 0x398; // FVehicleTransmissionData
		constexpr auto SteeringCurve = 0x3d8; // FRuntimeFloatCurve
	}

	namespace n_UPropertyValue { // : UObject
		constexpr auto properties = 0x80; // TArray<UProperty*>
		constexpr auto PropertyIndices = 0x90; // TArray<int>
		constexpr auto CapturedPropSegments = 0xa0; // TArray<FCapturedPropSegment>
		constexpr auto FullDisplayString = 0xb0; // FString
		constexpr auto PropertySetterName = 0xc0; // FName
		constexpr auto PropertySetterParameterDefaults = 0xc8; // TMap<FString, FString>
		constexpr auto bHasRecordedData = 0x118; // bool
		constexpr auto LeafPropertyClass = 0x120; // UObject*
		constexpr auto ValueBytes = 0x128; // TArray<char>
		constexpr auto PropCategory = 0x138; // EPropertyValueCategory
	}

	namespace n_UEditableTextWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto EditableTextStyle = 0x30; // FEditableTextStyle
	}

	namespace n_USQPhysicalMaterialVehiclesEffects { // : UObject
		constexpr auto Effects = 0x28; // TMap<USQPhysicalMaterial*, FSQVehicleEffect>
	}

	namespace n_USQMap { // : USQUserWidget
		constexpr auto PositionUpdateRate = 0x230; // float
		constexpr auto PositionUpdateTimer = 0x234; // float
		constexpr auto bIsMapFollowing = 0x238; // bool
		constexpr auto bMapFollowToggle = 0x239; // bool
		constexpr auto bMapFollowPlayerOnByDefault = 0x23a; // bool
		constexpr auto MapCurrentCoord = 0x23c; // FVector2D
		constexpr auto MapCenterCoord = 0x244; // FVector2D
		constexpr auto bRunCameraPP = 0x24c; // bool
		constexpr auto bRunCameraPPForward = 0x24d; // bool
		constexpr auto PPBlendMultiplier = 0x250; // float
		constexpr auto PPBlendValue = 0x254; // float
		constexpr auto PPBlendFarDistance = 0x258; // float
		constexpr auto MapDrawX = 0x25c; // float
		constexpr auto MapDrawY = 0x260; // float
		constexpr auto MapWidth = 0x264; // float
		constexpr auto MapHeight = 0x268; // float
		constexpr auto WorldTR = 0x26c; // FVector2D
		constexpr auto WorldBL = 0x274; // FVector2D
		constexpr auto MajorGridSpacing = 0x27c; // float
		constexpr auto MapLastClickPosition = 0x280; // FVector2D
		constexpr auto LastMapZoomPos = 0x288; // FVector2D
		constexpr auto MapZoomLevels = 0x290; // TArray<int>
		constexpr auto ZoomFloatCurrent = 0x2a0; // float
		constexpr auto ZoomStep = 0x2a4; // int
		constexpr auto ZoomStepMax = 0x2a8; // int
		constexpr auto ZoomStepMin = 0x2ac; // int
		constexpr auto ZoomAlpha = 0x2b0; // float
		constexpr auto bIsZooming = 0x2b4; // bool
		constexpr auto bMapIsClosing = 0x2b5; // bool
		constexpr auto bMapIsOpening = 0x2b6; // bool
		constexpr auto bIsSpawnScreen = 0x2b7; // bool
		constexpr auto bIsMapOn = 0x2b8; // bool
	}

	namespace n_UParticleModuleVelocityInheritParent { // : UParticleModuleVelocityBase
		constexpr auto Scale = 0x38; // FRawDistributionVector
	}

	namespace n_ALandscapeGizmoActiveActor { // : ALandscapeGizmoActor
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto bHidden = 0x80; // char : 1
		constexpr auto bNetTemporary = 0x80; // char : 1
		constexpr auto bNetStartup = 0x80; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x80; // char : 1
		constexpr auto bAlwaysRelevant = 0x80; // char : 1
		constexpr auto bReplicateMovement = 0x80; // char : 1
		constexpr auto bTearOff = 0x80; // char : 1
		constexpr auto bExchangedRoles = 0x80; // char : 1
		constexpr auto bNetLoadOnClient = 0x81; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x81; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x81; // char : 1
		constexpr auto bRelevantForLevelBounds = 0x81; // char : 1
		constexpr auto bReplayRewindable = 0x81; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x81; // char : 1
		constexpr auto bAutoDestroyWhenFinished = 0x81; // char : 1
		constexpr auto bBlockInput = 0x81; // char : 1
		constexpr auto bCanBeDamaged = 0x82; // char : 1
		constexpr auto bCollideWhenPlacing = 0x82; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x82; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x82; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x82; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x82; // char : 1
		constexpr auto bIsEditorOnlyActor = 0x82; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x82; // char : 1
		constexpr auto bReplicates = 0x83; // char : 1
		constexpr auto bCanBeInCluster = 0x83; // char : 1
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x83; // char : 1
		constexpr auto bActorEnableCollision = 0x84; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x84; // char : 1
		constexpr auto RemoteRole = 0x85; // ENetRole
		constexpr auto ReplicatedMovement = 0x88; // FRepMovement
		constexpr auto InitialLifeSpan = 0xbc; // float
		constexpr auto CustomTimeDilation = 0xc0; // float
		constexpr auto AttachmentReplication = 0xc8; // FRepAttachment
		constexpr auto Owner = 0x108; // AActor*
		constexpr auto NetDriverName = 0x110; // FName
		constexpr auto Role = 0x118; // ENetRole
		constexpr auto NetDormancy = 0x119; // ENetDormancy
		constexpr auto SpawnCollisionHandlingMethod = 0x11a; // ESpawnActorCollisionHandlingMethod
		constexpr auto AutoReceiveInput = 0x11b; // EAutoReceiveInput
		constexpr auto InputPriority = 0x11c; // int
		constexpr auto InputComponent = 0x120; // UInputComponent*
		constexpr auto NetCullDistanceSquared = 0x128; // float
		constexpr auto NetTag = 0x12c; // int
		constexpr auto NetUpdateFrequency = 0x130; // float
		constexpr auto MinNetUpdateFrequency = 0x134; // float
		constexpr auto bUseRelativeNetUpdateFrequency = 0x138; // char : 1
		constexpr auto bUseOwnerRelativeNetUpdateFrequency = 0x138; // char : 1
		constexpr auto MinRelativeNetUpdateEvaluationFrequency = 0x13c; // float
		constexpr auto NetPriority = 0x140; // float
		constexpr auto Instigator = 0x148; // APawn*
		constexpr auto Children = 0x150; // TArray<AActor*>
		constexpr auto RootComponent = 0x160; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x168; // TArray<AMatineeActor*>
		constexpr auto Layers = 0x180; // TArray<FName>
		constexpr auto ParentComponent = 0x190; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto Tags = 0x198; // TArray<FName>
		constexpr auto OnTakeAnyDamage = 0x1a8; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x1a9; // FScriptMulticastDelegate
		constexpr auto OnTakeRadialDamage = 0x1aa; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x1ab; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x1ac; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x1ad; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x1ae; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x1af; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x1b0; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x1b1; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x1b2; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x1b3; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x1b4; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x1b5; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x1b6; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x1b7; // FScriptMulticastDelegate
		constexpr auto InstanceComponents = 0x218; // TArray<UActorComponent*>
		constexpr auto BlueprintCreatedComponents = 0x228; // TArray<UActorComponent*>
	}

	namespace n_UParticleModuleMeshRotation { // : UParticleModuleRotationBase
		constexpr auto StartRotation = 0x30; // FRawDistributionVector
		constexpr auto bInheritParent = 0x80; // char : 1
	}

	namespace n_UCloudStorageBase { // : UPlatformInterfaceBase
		constexpr auto LocalCloudFiles = 0x38; // TArray<FString>
		constexpr auto bSuppressDelegateCalls = 0x48; // char : 1
	}

	namespace n_UCommandlet { // : UObject
		constexpr auto HelpDescription = 0x28; // FString
		constexpr auto HelpUsage = 0x38; // FString
		constexpr auto HelpWebLink = 0x48; // FString
		constexpr auto HelpParamNames = 0x58; // TArray<FString>
		constexpr auto HelpParamDescriptions = 0x68; // TArray<FString>
		constexpr auto IsServer = 0x78; // char : 1
		constexpr auto IsClient = 0x78; // char : 1
		constexpr auto IsEditor = 0x78; // char : 1
		constexpr auto LogToConsole = 0x78; // char : 1
		constexpr auto ShowErrorCount = 0x78; // char : 1
		constexpr auto ShowProgress = 0x78; // char : 1
	}

	namespace n_UAnimInstance { // : UObject
		constexpr auto CurrentSkeleton = 0x28; // USkeleton*
		constexpr auto RootMotionMode = 0x30; // ERootMotionMode
		constexpr auto bUseMultiThreadedAnimationUpdate = 0x31; // char : 1
		constexpr auto bUsingCopyPoseFromMesh = 0x31; // char : 1
		constexpr auto bQueueMontageEvents = 0x31; // char : 1
		constexpr auto OnMontageBlendingOut = 0x38; // FScriptMulticastDelegate
		constexpr auto OnMontageStarted = 0x48; // FScriptMulticastDelegate
		constexpr auto OnMontageEnded = 0x58; // FScriptMulticastDelegate
		constexpr auto OnAllMontageInstancesEnded = 0x68; // FScriptMulticastDelegate
		constexpr auto NotifyQueue = 0x100; // FAnimNotifyQueue
		constexpr auto ActiveAnimNotifyState = 0x170; // TArray<FAnimNotifyEvent>
	}

	namespace n_UInputVectorAxisDelegateBinding { // : UInputAxisKeyDelegateBinding
		constexpr auto InputAxisKeyDelegateBindings = 0x28; // TArray<FBlueprintInputAxisKeyDelegateBinding>
	}

	namespace n_USQLoadingScreenSettings { // : UDeveloperSettings
		constexpr auto DefaultLoadingScreen = 0x38; // UTexture2D*
		constexpr auto DefaultLoadingScreenUltraWide = 0x60; // UTexture2D*
		constexpr auto NowDeployingText = 0x88; // FText
		constexpr auto Brush_DescriptionBorder = 0xa0; // FSlateBrush
		constexpr auto Brush_Throbber = 0x128; // FSlateBrush
		constexpr auto Font_NowDeployingText = 0x1b0; // FSlateFontInfo
		constexpr auto Font_Description = 0x200; // FSlateFontInfo
		constexpr auto Font_Level = 0x250; // FSlateFontInfo
		constexpr auto Font_Layer = 0x2a0; // FSlateFontInfo
		constexpr auto Font_GameMode = 0x2f0; // FSlateFontInfo
		constexpr auto Color_Base = 0x340; // FLinearColor
		constexpr auto Color_Accent = 0x350; // FLinearColor
	}

	namespace n_ALevelVariantSetsActor { // : AActor
		constexpr auto LevelVariantSets = 0x248; // FSoftObjectPath
	}

	namespace n_ULineBatchComponent { // : UPrimitiveComponent
		constexpr auto MinDrawDistance = 0x220; // float
		constexpr auto LDMaxDrawDistance = 0x224; // float
		constexpr auto CachedMaxDrawDistance = 0x228; // float
		constexpr auto DepthPriorityGroup = 0x22c; // ESceneDepthPriorityGroup
		constexpr auto ViewOwnerDepthPriorityGroup = 0x22d; // ESceneDepthPriorityGroup
		constexpr auto IndirectLightingCacheQuality = 0x22e; // EIndirectLightingCacheQuality
		constexpr auto LightmapType = 0x22f; // ELightmapType
		constexpr auto bUseMaxLODAsImposter = 0x230; // char : 1
		constexpr auto bNeverDistanceCull = 0x230; // char : 1
		constexpr auto bAlwaysCreatePhysicsState = 0x230; // char : 1
		constexpr auto bGenerateOverlapEvents = 0x230; // char : 1
		constexpr auto bGenerateLocalOverlapEvents = 0x231; // char : 1
		constexpr auto bMultiBodyOverlap = 0x231; // char : 1
		constexpr auto bTraceComplexOnMove = 0x231; // char : 1
		constexpr auto bReturnMaterialOnMove = 0x231; // char : 1
		constexpr auto bUseViewOwnerDepthPriorityGroup = 0x231; // char : 1
		constexpr auto bAllowCullDistanceVolume = 0x231; // char : 1
		constexpr auto bHasMotionBlurVelocityMeshes = 0x231; // char : 1
		constexpr auto bVisibleInReflectionCaptures = 0x232; // char : 1
		constexpr auto bVisibleInRayTracing = 0x232; // char : 1
		constexpr auto bRenderInMainPass = 0x232; // char : 1
		constexpr auto bReceivesDecals = 0x232; // char : 1
		constexpr auto bOwnerNoSee = 0x232; // char : 1
		constexpr auto bOnlyOwnerSee = 0x232; // char : 1
		constexpr auto bTreatAsBackgroundForOcclusion = 0x232; // char : 1
		constexpr auto bUseAsOccluder = 0x232; // char : 1
		constexpr auto bSelectable = 0x233; // char : 1
		constexpr auto bForceMipStreaming = 0x233; // char : 1
		constexpr auto bHasPerInstanceHitProxies = 0x233; // char : 1
		constexpr auto CastShadow = 0x233; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x233; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x233; // char : 1
		constexpr auto bCastDynamicShadow = 0x233; // char : 1
		constexpr auto bCastStaticShadow = 0x233; // char : 1
		constexpr auto bCastVolumetricTranslucentShadow = 0x234; // char : 1
		constexpr auto bSelfShadowOnly = 0x234; // char : 1
		constexpr auto bCastFarShadow = 0x234; // char : 1
		constexpr auto bCastInsetShadow = 0x234; // char : 1
		constexpr auto bCastCinematicShadow = 0x234; // char : 1
		constexpr auto bCastHiddenShadow = 0x234; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x234; // char : 1
		constexpr auto bLightAsIfStatic = 0x234; // char : 1
		constexpr auto bLightAttachmentsAsGroup = 0x235; // char : 1
		constexpr auto bReceiveMobileCSMShadows = 0x235; // char : 1
		constexpr auto bSingleSampleShadowFromStationaryLights = 0x235; // char : 1
		constexpr auto bIgnoreRadialImpulse = 0x235; // char : 1
		constexpr auto bIgnoreRadialForce = 0x235; // char : 1
		constexpr auto bApplyImpulseOnDamage = 0x235; // char : 1
		constexpr auto bReplicatePhysicsToAutonomousProxy = 0x235; // char : 1
		constexpr auto AlwaysLoadOnClient = 0x235; // char : 1
		constexpr auto AlwaysLoadOnServer = 0x236; // char : 1
		constexpr auto bUseEditorCompositing = 0x236; // char : 1
		constexpr auto bRenderCustomDepth = 0x236; // char : 1
		constexpr auto bHasCustomNavigableGeometry = 0x237; // EHasCustomNavigableGeometry
		constexpr auto CanCharacterStepUpOn = 0x239; // ECanBeCharacterBase
		constexpr auto LightingChannels = 0x23a; // FLightingChannels
		constexpr auto CustomDepthStencilWriteMask = 0x23b; // ERendererStencilMask
		constexpr auto CustomDepthStencilValue = 0x23c; // int
		constexpr auto CustomPrimitiveData = 0x240; // FCustomPrimitiveData
		constexpr auto TranslucencySortPriority = 0x250; // int
		constexpr auto VisibilityId = 0x254; // int
		constexpr auto RuntimeVirtualTextures = 0x258; // TArray<URuntimeVirtualTexture*>
		constexpr auto VirtualTextureLodBias = 0x268; // int
		constexpr auto VirtualTextureCullMips = 0x26c; // int
		constexpr auto VirtualTextureMinCoverage = 0x270; // int
		constexpr auto VirtualTextureRenderPassType = 0x274; // ERuntimeVirtualTextureMainPassType
		constexpr auto LpvBiasMultiplier = 0x27c; // float
		constexpr auto BoundsScale = 0x288; // float
		constexpr auto MoveIgnoreActors = 0x298; // TArray<AActor*>
		constexpr auto MoveIgnoreComponents = 0x2a8; // TArray<UPrimitiveComponent*>
		constexpr auto BodyInstance = 0x2c8; // FBodyInstance
		constexpr auto OnComponentHit = 0x3d8; // FScriptMulticastDelegate
		constexpr auto OnComponentBeginOverlap = 0x3d9; // FScriptMulticastDelegate
		constexpr auto OnComponentEndOverlap = 0x3da; // FScriptMulticastDelegate
		constexpr auto OnComponentWake = 0x3db; // FScriptMulticastDelegate
		constexpr auto OnComponentSleep = 0x3dc; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x3de; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x3df; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x3e0; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x3e1; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x3e2; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x3e3; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x3e4; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x3e5; // FScriptMulticastDelegate
		constexpr auto LODParentPrimitive = 0x400; // UPrimitiveComponent*
	}

	namespace n_USQFreeLookComponent { // : UActorComponent
		constexpr auto OuterPawn = 0xe0; // APawn*
		constexpr auto FreeLookCamera = 0x100; // UCameraComponent*
		constexpr auto bCanFreelookWhileADS = 0x108; // bool
		constexpr auto bFreelookCanRecenterWeapons = 0x109; // bool
		constexpr auto PitchLimits = 0x10c; // FVector2D
		constexpr auto YawLimits = 0x114; // FVector2D
		constexpr auto RotationSpeed = 0x11c; // FVector2D
		constexpr auto ResetSpeed = 0x124; // float
		constexpr auto ReplicatedFreeLookRot = 0x148; // FSQRotator_NetQuantizeBytes
		constexpr auto FreelookMode = 0x154; // EFreeLookMode
		constexpr auto bReplicateFreeLookRotation = 0x155; // bool
	}

	namespace n_USQPhysicalMaterialSoldiersEffects { // : UObject
		constexpr auto Effects = 0x28; // TMap<USQPhysicalMaterial*, FSQSoldierEffect>
	}

	namespace n_USQGameCommandComponent { // : UActorComponent
		constexpr auto PrimaryComponentTick = 0x30; // FActorComponentTickFunction
		constexpr auto ComponentTags = 0x88; // TArray<FName>
		constexpr auto AssetUserData = 0x98; // TArray<UAssetUserData*>
		constexpr auto bReplicates = 0xac; // char : 1
		constexpr auto bNetAddressable = 0xac; // char : 1
		constexpr auto bAutoActivate = 0xad; // char : 1
		constexpr auto bIsActive = 0xae; // char : 1
		constexpr auto bEditableWhenInherited = 0xae; // char : 1
		constexpr auto bCanEverAffectNavigation = 0xae; // char : 1
		constexpr auto bIsEditorOnly = 0xae; // char : 1
		constexpr auto CreationMethod = 0xb0; // EComponentCreationMethod
		constexpr auto OnComponentActivated = 0xb1; // FScriptMulticastDelegate
		constexpr auto OnComponentDeactivated = 0xb2; // FScriptMulticastDelegate
		constexpr auto UCSModifiedProperties = 0xb8; // TArray<FSimpleMemberReference>
	}

	namespace n_ASQWeapon { // : ASQEquipableItem
		constexpr auto WeaponStaticInfo = 0x480; // USQWeaponStaticInfo*
		constexpr auto FiringAudioComponentPool = 0x488; // FSQAudioComponentPool
		constexpr auto ZoomFinishAdsTransitionTimerHandle = 0x580; // FTimerHandle
		constexpr auto bWaitingForMagazineLoad = 0x588; // bool
		constexpr auto bFiring = 0x58c; // char : 1
		constexpr auto bReloading = 0x58c; // char : 1
		constexpr auto WeaponConfig = 0x590; // FSQWeaponData
		constexpr auto CurrentState = 0x650; // ESQWeaponState
		constexpr auto ADSMoveSpeedMultiplier = 0x654; // float
		constexpr auto bAimingDownSights = 0x658; // bool
		constexpr auto bFireInput = 0x659; // bool
		constexpr auto bPendingFire = 0x65a; // bool
		constexpr auto MaxTimeToLoopSoundsAfterLastFire = 0x668; // float
		constexpr auto ModifiedTacticalReloadDuration = 0x66c; // float
		constexpr auto ModifiedDryReloadDuration = 0x670; // float
		constexpr auto CurrentFireMode = 0x690; // int
		constexpr auto Magazines = 0x6a0; // TArray<FSQMagazineData>
		constexpr auto AttachmentClasses = 0x6b0; // TArray<USQWeaponAttachment*>
		constexpr auto Attachments = 0x6c0; // TArray<USQWeaponAttachment*>
		constexpr auto ADSPostProcessSettings = 0x6d0; // UADSPostProcessSettings*
		constexpr auto bUseStopADSPPDrawing = 0x6d8; // bool
		constexpr auto bStopADSPPDrawing = 0x6d9; // bool
		constexpr auto HoldingZoomEasing = 0x6dc; // FSQDynamicEasingStruct
		constexpr auto HoldingZoomEasingAlpha = 0x6f0; // float
		constexpr auto HoldingZoomRawAlpha = 0x6f4; // float
		constexpr auto HoldingZoomIntermediateAlpha = 0x6f8; // float
		constexpr auto HoldingZoomTargetAlpha = 0x6fc; // float
		constexpr auto CurrentFOV = 0x700; // float
		constexpr auto ZoomedFOV = 0x704; // float
		constexpr auto FocusZoomTime = 0x708; // float
		constexpr auto FocusAdditionalZoom = 0x70c; // float
		constexpr auto TimeSinceLastZoomToggle = 0x710; // float
		constexpr auto LastZoomProgressAtToggle = 0x714; // float
		constexpr auto AdjustAdsSightItemAnimPos = 0x718; // float
		constexpr auto CachedAdjustAdsSightItemAnimPos = 0x71c; // float
		constexpr auto NewAdjustAdsSightItemAnimPos = 0x720; // float
		constexpr auto AdjustAdsSightItemAnimPosAlpha = 0x724; // float
		constexpr auto MaxConcurrentSounds = 0x728; // int
		constexpr auto MaxConcurrentSoundsFadeOut = 0x72c; // float
		constexpr auto bIs1PUsingSquadSoundNodeLooping = 0x730; // bool
		constexpr auto bIs3PUsingSquadSoundNodeLooping = 0x731; // bool
		constexpr auto CurrentFiringAC = 0x738; // UAudioComponent*
		constexpr auto FiringACs = 0x740; // TArray<UAudioComponent*>
		constexpr auto SemiAutoSound1P = 0x750; // USoundCue*
		constexpr auto SemiAutoSound3P = 0x758; // USoundCue*
		constexpr auto StartingSound1P = 0x760; // USoundCue*
		constexpr auto StartingSound3P = 0x768; // USoundCue*
		constexpr auto bIsModifyingZeroing = 0x780; // bool
		constexpr auto AdjustableSightItemPos = 0x784; // int
		constexpr auto CachedLastZeroingTime = 0x788; // float
		constexpr auto CachedLastZeroingPlayTime = 0x78c; // float
		constexpr auto CachedLastZeroingPosition = 0x790; // int
		constexpr auto bCachedIsBipodDeployed = 0x794; // bool
		constexpr auto bCachedAimProneBobbing = 0x795; // bool
		constexpr auto bFinishedAdsTransition = 0x796; // bool
		constexpr auto bLastNewZoom = 0x797; // bool
		constexpr auto FireSwaySelector = 0x798; // bool
		constexpr auto PreFireSwaySelector = 0x799; // bool
	}

	namespace n_UMovieSceneMediaSection { // : UMovieSceneSection
		constexpr auto MediaSource = 0xe0; // UMediaSource*
		constexpr auto bLooping = 0xe8; // bool
		constexpr auto StartFrameOffset = 0xec; // FFrameNumber
		constexpr auto MediaTexture = 0xf0; // UMediaTexture*
		constexpr auto MediaSoundComponent = 0xf8; // UMediaSoundComponent*
		constexpr auto bUseExternalMediaPlayer = 0x100; // bool
		constexpr auto ExternalMediaPlayer = 0x108; // UMediaPlayer*
	}

	namespace n_UInterpTrackInstMove { // : UInterpTrackInst
		constexpr auto ResetLocation = 0x28; // FVector
		constexpr auto ResetRotation = 0x34; // FRotator
	}

	namespace n_ABP_L85A2_Classic_C { // : ABP_L85A2_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_ALevelBounds { // : AActor
		constexpr auto bAutoUpdateBounds = 0x248; // bool
	}

	namespace n_Urpg7_Skeleton_AnimBlueprint_C { // : USQWeaponAnimInstance
		constexpr auto UberGraphFrame = 0x2b0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root_D3039831434C290B6E1745A3EB65C855 = 0x2b8; // FAnimNode_Root
		constexpr auto AnimGraphNode_LayeredBoneBlend_C2EDF3F342118F92A296B694AAC1846E = 0x2e8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_5DBC40A34183D36062AAE3BBCECEBB78 = 0x3a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot_6BFABE4C419A1B216FA277B5FBC640EF = 0x420; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_1D6B67FC40C9DEE889753D99C7E8A2F1 = 0x468; // FAnimNode_Slot
		constexpr auto AnimGraphNode_LayeredBoneBlend_8BD4EFC1442C3058A381FBA4B37A711E = 0x4b0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_Slot_C7B8AB884297E29470433A9BF9E360E1 = 0x570; // FAnimNode_Slot
		constexpr auto AnimGraphNode_LocalRefPose_18A5BD6B46C2CCFBD3708B89E65A3478 = 0x5b8; // FAnimNode_RefPose
		constexpr auto AnimGraphNode_SequenceEvaluator_9F1F0D3147CAB8F0CA11B3A266C4CAF8 = 0x5d0; // FAnimNode_SequenceEvaluator
	}

	namespace n_UMultiPackerMatNode { // : UObject
		constexpr auto MaterialBaseInput = 0x28; // UMaterialInterface*
		constexpr auto SDF = 0x30; // bool
		constexpr auto SDF_Radius = 0x34; // int
		constexpr auto Atlas = 0x38; // bool
		constexpr auto TilesVertical = 0x3c; // int
		constexpr auto TilesHorizontal = 0x40; // int
		constexpr auto RectangleSize = 0x44; // bool
		constexpr auto SetSizeByParameter = 0x45; // ETextureSizeOutputPersonal
		constexpr auto SizeVertical = 0x48; // int
		constexpr auto SizeHorizontal = 0x4c; // int
	}

	namespace n_UPreviewMeshCollection { // : UDataAsset
		constexpr auto Skeleton = 0x38; // USkeleton*
		constexpr auto SkeletalMeshes = 0x40; // TArray<FPreviewMeshCollectionEntry>
	}

	namespace n_UForceFeedbackComponent { // : USceneComponent
		constexpr auto ForceFeedbackEffect = 0x218; // UForceFeedbackEffect*
		constexpr auto bAutoDestroy = 0x220; // char : 1
		constexpr auto bStopWhenOwnerDestroyed = 0x220; // char : 1
		constexpr auto bLooping = 0x220; // char : 1
		constexpr auto bIgnoreTimeDilation = 0x220; // char : 1
		constexpr auto bOverrideAttenuation = 0x220; // char : 1
		constexpr auto IntensityMultiplier = 0x224; // float
		constexpr auto AttenuationSettings = 0x228; // UForceFeedbackAttenuation*
		constexpr auto AttenuationOverrides = 0x230; // FForceFeedbackAttenuationSettings
		constexpr auto OnForceFeedbackFinished = 0x2e0; // FScriptMulticastDelegate
	}

	namespace n_USQScoreboard { // : USQUserWidget
		constexpr auto ScoreboardFriendly = 0x230; // USQScoreboardTeam*
		constexpr auto ScoreboardEnemy = 0x238; // USQScoreboardTeam*
		constexpr auto SQPC = 0x240; // ASQPlayerController*
		constexpr auto SQGameState = 0x248; // ASQGameState*
		constexpr auto UpdateStateTimerHandle = 0x250; // FTimerHandle
		constexpr auto ScoreboardTeamType = 0x258; // USQScoreboardTeam*
		constexpr auto WinningTeamText = 0x260; // FText
		constexpr auto TicketsRemainingText = 0x278; // FText
		constexpr auto DrawText = 0x290; // FText
		constexpr auto GameTimeClockImage = 0x2a8; // UImage*
		constexpr auto RemainingGameTimeText = 0x2b0; // UTextBlock*
		constexpr auto ScoreboardFlairFlag1 = 0x2b8; // UImage*
		constexpr auto ScoreboardFlairFlag2 = 0x2c0; // UImage*
		constexpr auto GameResultText = 0x2c8; // UTextBlock*
		constexpr auto GameResultTicketsRemaining = 0x2d0; // UTextBlock*
		constexpr auto GameResultCanvas = 0x2d8; // UCanvasPanel*
	}

	namespace n_ASQTournamentModeRuleset { // : ASQGameRuleSet
		constexpr auto Restrictions = 0x270; // TArray<FSQSettingsRestriction>
	}

	namespace n_ALobbyBeaconState { // : AInfo
		constexpr auto MaxPlayers = 0x248; // int
		constexpr auto LobbyBeaconPlayerStateClass = 0x250; // ALobbyBeaconPlayerState*
		constexpr auto bLobbyStarted = 0x260; // bool
		constexpr auto WaitForPlayersTimeRemaining = 0x264; // float
		constexpr auto Players = 0x268; // FLobbyPlayerStateInfoArray
	}

	namespace n_URadialIntMask { // : UFieldNodeInt
		constexpr auto Radius = 0xd8; // float
		constexpr auto Position = 0xdc; // FVector
		constexpr auto InteriorValue = 0xe8; // int
		constexpr auto ExteriorValue = 0xec; // int
		constexpr auto SetMaskCondition = 0xf0; // ESetMaskConditionType
	}

	namespace n_USQBaseGameSubsystem { // : UObject
		constexpr auto SQGameInstance = 0x38; // USQGameInstance*
	}

	namespace n_UHorizontalBox { // : UPanelWidget
		constexpr auto Slots = 0x108; // TArray<UPanelSlot*>
	}

	namespace n_UBaseMediaSource { // : UMediaSource
		constexpr auto PlayerName = 0x30; // FName
	}

	namespace n_ABP_M4M203_UGL_Woodland_Parent_C { // : ABP_M4M203_M68_UGL_Woodland_Parent_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_ASQTeamPrep { // : AActor
		constexpr auto TeamId = 0x248; // int
		constexpr auto VehicleStagingPrimitive = 0x250; // UPrimitiveComponent*
		constexpr auto StagingTimeInSeconds = 0x270; // float
		constexpr auto ReplicatedRemainingTime = 0x274; // int
		constexpr auto LocalSoldier = 0x290; // ASQSoldier*
	}

	namespace n_UBP_L85A2_ElcanLDS_Foregrip_StaticInfo_C { // : UBP_L85A2_Foregrip_StaticInfo_C
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_UCircularThrobber { // : UWidget
		constexpr auto NumberOfPieces = 0x108; // int
		constexpr auto Period = 0x10c; // float
		constexpr auto Radius = 0x110; // float
		constexpr auto PieceImage = 0x118; // USlateBrushAsset*
		constexpr auto Image = 0x120; // FSlateBrush
		constexpr auto bEnableRadius = 0x1a8; // bool
	}

	namespace n_USQRestriction_PlayerStatus { // : USQRestriction_Boolean
		constexpr auto RequiredStatus = 0x58; // TArray<ESQPlayerStatus>
	}

	namespace n_ABP_40MM_VOG_Proj2_C { // : ASQMortarProjectile
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto SkeletalMesh = 0x528; // USkeletalMeshComponent*
		constexpr auto Shockwave = 0x530; // UChildActorComponent*
		constexpr auto BPEffectOnUnderMinFlightTime = 0x538; // UParticleSystem*
		constexpr auto BPSoundonUnderMinFlightTime = 0x540; // USoundBase*
	}

	namespace n_UAK74GP25_UGL_Skeleton_AnimBlueprint_C { // : USQWeaponAnimInstance
		constexpr auto UberGraphFrame = 0x2b0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root_2717030B48BA522BE72A1895002E18E4 = 0x2b8; // FAnimNode_Root
		constexpr auto AnimGraphNode_LayeredBoneBlend_0C1CF6474C909D49F8DCA7B75FCEBA30 = 0x2e8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_Slot_6A1ADD9D41DEB14EFF829D9C1F9BCE62 = 0x3a8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_7A240C39418EA94DA763BFADD147FBB4 = 0x3f0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_DFEF34044C4E88CB20FAE4AB7F965846 = 0x438; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SequencePlayer_D7E83CB64AF7D3A9E305669818225FE5 = 0x480; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_3D4E609C4B8F6B0FCE7C409148CFF6DF = 0x4f8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_LocalRefPose_7A628039422676C64C46CCB4C5C72D52 = 0x5b8; // FAnimNode_RefPose
		constexpr auto AnimGraphNode_SequenceEvaluator_EF3D8E94493768E2355645A514D16B5D = 0x5d0; // FAnimNode_SequenceEvaluator
	}

	namespace n_USQRotor { // : UObject
		constexpr auto RotorSetup = 0x28; // USQRotorSetup*
		constexpr auto WorldContextObject = 0x58; // UObject*
	}

	namespace n_UMaterialExpressionShadingModel { // : UMaterialExpression
		constexpr auto ShadingModel = 0x40; // EMaterialShadingModel
	}

	namespace n_UMaterialExpressionCrossProduct { // : UMaterialExpression
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_ASQMarker { // : AActor
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto bHidden = 0x80; // char : 1
		constexpr auto bNetTemporary = 0x80; // char : 1
		constexpr auto bNetStartup = 0x80; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x80; // char : 1
		constexpr auto bAlwaysRelevant = 0x80; // char : 1
		constexpr auto bReplicateMovement = 0x80; // char : 1
		constexpr auto bTearOff = 0x80; // char : 1
		constexpr auto bExchangedRoles = 0x80; // char : 1
		constexpr auto bNetLoadOnClient = 0x81; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x81; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x81; // char : 1
		constexpr auto bRelevantForLevelBounds = 0x81; // char : 1
		constexpr auto bReplayRewindable = 0x81; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x81; // char : 1
		constexpr auto bAutoDestroyWhenFinished = 0x81; // char : 1
		constexpr auto bBlockInput = 0x81; // char : 1
		constexpr auto bCanBeDamaged = 0x82; // char : 1
		constexpr auto bCollideWhenPlacing = 0x82; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x82; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x82; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x82; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x82; // char : 1
		constexpr auto bIsEditorOnlyActor = 0x82; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x82; // char : 1
		constexpr auto bReplicates = 0x83; // char : 1
		constexpr auto bCanBeInCluster = 0x83; // char : 1
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x83; // char : 1
		constexpr auto bActorEnableCollision = 0x84; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x84; // char : 1
		constexpr auto RemoteRole = 0x85; // ENetRole
		constexpr auto ReplicatedMovement = 0x88; // FRepMovement
		constexpr auto InitialLifeSpan = 0xbc; // float
		constexpr auto CustomTimeDilation = 0xc0; // float
		constexpr auto AttachmentReplication = 0xc8; // FRepAttachment
		constexpr auto Owner = 0x108; // AActor*
		constexpr auto NetDriverName = 0x110; // FName
		constexpr auto Role = 0x118; // ENetRole
		constexpr auto NetDormancy = 0x119; // ENetDormancy
		constexpr auto SpawnCollisionHandlingMethod = 0x11a; // ESpawnActorCollisionHandlingMethod
		constexpr auto AutoReceiveInput = 0x11b; // EAutoReceiveInput
		constexpr auto InputPriority = 0x11c; // int
		constexpr auto InputComponent = 0x120; // UInputComponent*
		constexpr auto NetCullDistanceSquared = 0x128; // float
		constexpr auto NetTag = 0x12c; // int
		constexpr auto NetUpdateFrequency = 0x130; // float
		constexpr auto MinNetUpdateFrequency = 0x134; // float
		constexpr auto bUseRelativeNetUpdateFrequency = 0x138; // char : 1
		constexpr auto bUseOwnerRelativeNetUpdateFrequency = 0x138; // char : 1
		constexpr auto MinRelativeNetUpdateEvaluationFrequency = 0x13c; // float
		constexpr auto NetPriority = 0x140; // float
		constexpr auto Instigator = 0x148; // APawn*
		constexpr auto Children = 0x150; // TArray<AActor*>
		constexpr auto RootComponent = 0x160; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x168; // TArray<AMatineeActor*>
		constexpr auto Layers = 0x180; // TArray<FName>
		constexpr auto ParentComponent = 0x190; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto Tags = 0x198; // TArray<FName>
		constexpr auto OnTakeAnyDamage = 0x1a8; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x1a9; // FScriptMulticastDelegate
		constexpr auto OnTakeRadialDamage = 0x1aa; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x1ab; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x1ac; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x1ad; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x1ae; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x1af; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x1b0; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x1b1; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x1b2; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x1b3; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x1b4; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x1b5; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x1b6; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x1b7; // FScriptMulticastDelegate
		constexpr auto InstanceComponents = 0x218; // TArray<UActorComponent*>
		constexpr auto BlueprintCreatedComponents = 0x228; // TArray<UActorComponent*>
	}

	namespace n_UNavigationGraphNodeComponent { // : USceneComponent
		constexpr auto Node = 0x218; // FNavGraphNode
		constexpr auto NextNodeComponent = 0x230; // UNavigationGraphNodeComponent*
		constexpr auto PrevNodeComponent = 0x238; // UNavigationGraphNodeComponent*
	}

	namespace n_AGameplayAbilityWorldReticle { // : AActor
		constexpr auto Parameters = 0x248; // FWorldReticleParameters
		constexpr auto bFaceOwnerFlat = 0x254; // bool
		constexpr auto bSnapToTargetedActor = 0x255; // bool
		constexpr auto bIsTargetValid = 0x256; // bool
		constexpr auto bIsTargetAnActor = 0x257; // bool
		constexpr auto MasterPC = 0x258; // APlayerController*
		constexpr auto TargetingActor = 0x260; // AActor*
	}

	namespace n_USQColorsDataAsset { // : UDataAsset
		constexpr auto TintColors = 0x30; // FLinearColor [0x7]
		constexpr auto FireTeamColors = 0xa0; // TArray<FLinearColor>
	}

	namespace n_USafeZone { // : UContentWidget
		constexpr auto PadLeft = 0x120; // bool
		constexpr auto PadRight = 0x121; // bool
		constexpr auto PadTop = 0x122; // bool
		constexpr auto PadBottom = 0x123; // bool
	}

	namespace n_UBP_Attachment_M4M203_LadderSight_C { // : USQWeaponAttachment_Scope
		constexpr auto MeshTransitionPercentage = 0x4b0; // float
		constexpr auto ADSMesh = 0x4b8; // UStaticMesh*
		constexpr auto ADSMeshTransform = 0x4c0; // FTransform
		constexpr auto NonADSMesh = 0x4f0; // UStaticMesh*
		constexpr auto NonADSMeshTransform = 0x500; // FTransform
		constexpr auto InToADSMeshTransitionSettings = 0x530; // TArray<FSQMeshTransitionSettings>
		constexpr auto OutFromADSMeshTransitionSettings = 0x540; // TArray<FSQMeshTransitionSettings>
	}

	namespace n_UNetReplicationGraphConnection { // : UReplicationConnectionDriver
		constexpr auto NetConnection = 0x28; // UNetConnection*
		constexpr auto DebugActor = 0x170; // AReplicationGraphDebugActor*
		constexpr auto LastGatherLocations = 0x190; // TArray<FLastLocationGatherInfo>
		constexpr auto ConnectionGraphNodes = 0x1a8; // TArray<UReplicationGraphNode*>
		constexpr auto TearOffNode = 0x1b8; // UReplicationGraphNode_TearOff_ForConnection*
	}

	namespace n_UEditableTextBox { // : UWidget
		constexpr auto Text = 0x108; // FText
		constexpr auto TextDelegate = 0x120; // DelegateProperty
		constexpr auto WidgetStyle = 0x130; // FEditableTextBoxStyle
		constexpr auto Style = 0x920; // USlateWidgetStyleAsset*
		constexpr auto HintText = 0x928; // FText
		constexpr auto HintTextDelegate = 0x940; // DelegateProperty
		constexpr auto Font = 0x950; // FSlateFontInfo
		constexpr auto ForegroundColor = 0x9a0; // FLinearColor
		constexpr auto BackgroundColor = 0x9b0; // FLinearColor
		constexpr auto ReadOnlyForegroundColor = 0x9c0; // FLinearColor
		constexpr auto IsReadOnly = 0x9d0; // bool
		constexpr auto IsPassword = 0x9d1; // bool
		constexpr auto MinimumDesiredWidth = 0x9d4; // float
		constexpr auto Padding = 0x9d8; // FMargin
		constexpr auto IsCaretMovedWhenGainFocus = 0x9e8; // bool
		constexpr auto SelectAllTextWhenFocused = 0x9e9; // bool
		constexpr auto RevertTextOnEscape = 0x9ea; // bool
		constexpr auto ClearKeyboardFocusOnCommit = 0x9eb; // bool
		constexpr auto SelectAllTextOnCommit = 0x9ec; // bool
		constexpr auto AllowContextMenu = 0x9ed; // bool
		constexpr auto KeyboardType = 0x9ee; // EVirtualKeyboardType
		constexpr auto VirtualKeyboardOptions = 0x9ef; // FVirtualKeyboardOptions
		constexpr auto VirtualKeyboardDismissAction = 0x9f0; // EVirtualKeyboardDismissAction
		constexpr auto Justification = 0x9f1; // ETextJustify
		constexpr auto ShapedTextOptions = 0x9f2; // FShapedTextOptions
		constexpr auto OnTextChanged = 0x9f8; // FScriptMulticastDelegate
		constexpr auto OnTextCommitted = 0xa08; // FScriptMulticastDelegate
	}

	namespace n_UL85A2_Skeleton_AnimBlueprint_C { // : USQWeaponAnimInstance
		constexpr auto UberGraphFrame = 0x2b0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root_764FA1B24B7B018D5DC7E6BBF40379D2 = 0x2b8; // FAnimNode_Root
		constexpr auto AnimGraphNode_LayeredBoneBlend_AAC78BDC44E34EE01451369FF3EA74D4 = 0x2e8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_Slot_587E3C564CD28AB2C068B0A6CA8CAEF8 = 0x3a8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_3F4676704855C483B8EC51AF6EBD8F41 = 0x3f0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_18055FA543289D3A789A6F876187CD42 = 0x438; // FAnimNode_Slot
		constexpr auto AnimGraphNode_LocalRefPose_46D479134B9FE7748EF1D29E167C5C4E = 0x480; // FAnimNode_RefPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_A9F6ED6847C2AC707E8D148053E62C2A = 0x498; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_14075E9A45A7B80C978C79B58A039FC0 = 0x558; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot_51BB5685405CCA4F243504B529D0731F = 0x5d0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SequenceEvaluator_F29826FB404F0195EBAF46A1552053E4 = 0x618; // FAnimNode_SequenceEvaluator
	}

	namespace n_ABP_M4A1_C { // : ABP_GenericRifle_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UPhysicsConstraintComponent { // : USceneComponent
		constexpr auto ConstraintActor1 = 0x218; // AActor*
		constexpr auto ComponentName1 = 0x220; // FConstrainComponentPropName
		constexpr auto ConstraintActor2 = 0x228; // AActor*
		constexpr auto ComponentName2 = 0x230; // FConstrainComponentPropName
		constexpr auto ConstraintSetup = 0x248; // UPhysicsConstraintTemplate*
		constexpr auto OnConstraintBroken = 0x250; // FScriptMulticastDelegate
		constexpr auto ConstraintInstance = 0x260; // FConstraintInstance
	}

	namespace n_ABP_AK74M_Recruit_Desert_C { // : ABP_AK74M_Recruit_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_ABP_M4_4Mags_Founders_C { // : ABP_M4_4Mags_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UDemoNetConnection { // : UNetConnection
		constexpr auto Children = 0x48; // TArray<UChildConnection*>
		constexpr auto Driver = 0x58; // UNetDriver*
		constexpr auto PackageMapClass = 0x60; // UPackageMap*
		constexpr auto PackageMap = 0x68; // UPackageMap*
		constexpr auto OpenChannels = 0x70; // TArray<UChannel*>
		constexpr auto SentTemporaries = 0x80; // TArray<AActor*>
		constexpr auto ViewTarget = 0x90; // AActor*
		constexpr auto OwningActor = 0x98; // AActor*
		constexpr auto MaxPacket = 0xa0; // int
		constexpr auto InternalAck = 0xa4; // char : 1
		constexpr auto PlayerId = 0x160; // FUniqueNetIdRepl
		constexpr auto LastReceiveTime = 0x1f0; // double
		constexpr auto ChannelsToTick = 0x14b8; // TArray<UChannel*>
	}

	namespace n_UParticleEmitter { // : UObject
		constexpr auto EmitterName = 0x28; // FName
		constexpr auto SubUVDataOffset = 0x30; // int
		constexpr auto EmitterRenderMode = 0x34; // EEmitterRenderMode
		constexpr auto SignificanceLevel = 0x35; // EParticleSignificanceLevel
		constexpr auto bUseLegacySpawningBehavior = 0x37; // char : 1
		constexpr auto ConvertedModules = 0x37; // char : 1
		constexpr auto bIsSoloing = 0x37; // char : 1
		constexpr auto bCookedOut = 0x37; // char : 1
		constexpr auto bDisabledLODsKeepEmitterAlive = 0x37; // char : 1
		constexpr auto bDisableWhenInsignficant = 0x38; // char : 1
		constexpr auto LODLevels = 0x40; // TArray<UParticleLODLevel*>
		constexpr auto PeakActiveParticles = 0x50; // int
		constexpr auto InitialAllocationCount = 0x54; // int
		constexpr auto QualityLevelSpawnRateScale = 0x58; // float
		constexpr auto DetailModeBitmask = 0x5c; // uint32
		constexpr auto bOWI_ResetOnDetailModeChanged = 0x60; // char : 1
	}

	namespace n_UMaterialExpressionCameraPositionWS { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_ABP_M4_M68_Founder_C { // : ABP_M4_M68_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UHorizontalBoxSlot { // : UPanelSlot
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto Size = 0x48; // FSlateChildSize
		constexpr auto HorizontalAlignment = 0x50; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x51; // EVerticalAlignment
	}

	namespace n_USQKickBanComponent { // : UActorComponent
		constexpr auto PrimaryComponentTick = 0x30; // FActorComponentTickFunction
		constexpr auto ComponentTags = 0x88; // TArray<FName>
		constexpr auto AssetUserData = 0x98; // TArray<UAssetUserData*>
		constexpr auto bReplicates = 0xac; // char : 1
		constexpr auto bNetAddressable = 0xac; // char : 1
		constexpr auto bAutoActivate = 0xad; // char : 1
		constexpr auto bIsActive = 0xae; // char : 1
		constexpr auto bEditableWhenInherited = 0xae; // char : 1
		constexpr auto bCanEverAffectNavigation = 0xae; // char : 1
		constexpr auto bIsEditorOnly = 0xae; // char : 1
		constexpr auto CreationMethod = 0xb0; // EComponentCreationMethod
		constexpr auto OnComponentActivated = 0xb1; // FScriptMulticastDelegate
		constexpr auto OnComponentDeactivated = 0xb2; // FScriptMulticastDelegate
		constexpr auto UCSModifiedProperties = 0xb8; // TArray<FSimpleMemberReference>
	}

	namespace n_UImageSequenceProtocol { // : UFrameGrabberProtocol
		constexpr auto State = 0x50; // EMovieSceneCaptureProtocolState
	}

	namespace n_UVideoCaptureProtocol { // : UFrameGrabberProtocol
		constexpr auto bUseCompression = 0x68; // bool
		constexpr auto CompressionQuality = 0x6c; // float
	}

	namespace n_UTextureRenderTargetCube { // : UTextureRenderTarget
		constexpr auto SizeX = 0xd8; // int
		constexpr auto ClearColor = 0xdc; // FLinearColor
		constexpr auto OverrideFormat = 0xec; // EPixelFormat
		constexpr auto bHDR = 0xed; // char : 1
		constexpr auto bForceLinearGamma = 0xed; // char : 1
	}

	namespace n_UAnimNotify_PlaySound { // : UAnimNotify
		constexpr auto Sound = 0x38; // USoundBase*
		constexpr auto VolumeMultiplier = 0x40; // float
		constexpr auto PitchMultiplier = 0x44; // float
		constexpr auto bFollow = 0x48; // char : 1
		constexpr auto AttachName = 0x4c; // FName
	}

	namespace n_USQVehicleCleanupDataAsset { // : UDataAsset
		constexpr auto ObjectCollisionTypes = 0x30; // TArray<EObjectTypeQuery>
		constexpr auto ObjectClasses = 0x40; // TArray<AActor*>
		constexpr auto ScanRadius = 0x50; // float
		constexpr auto ScanFrequency = 0x54; // float
		constexpr auto SelfDestructionTime = 0x58; // float
	}

	namespace n_ABP_RPG7V2_Frag_2mag_Founders_C { // : ABP_RPG7V2_Frag_Founders_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
		constexpr auto MuzzleFlashRearComponent3P = 0x7b8; // UParticleSystemComponent*
		constexpr auto BackBlastComponent3P = 0x7c0; // UChildActorComponent*
		constexpr auto MuzzleFlashRearComponent1P = 0x7c8; // UParticleSystemComponent*
		constexpr auto SquadBlast = 0x7d0; // USQBlastComponent*
		constexpr auto BackBlastComponent1P = 0x7d8; // UChildActorComponent*
		constexpr auto BackblastSocket = 0x7e0; // FName
		constexpr auto BackblastEffect1P = 0x7e8; // UParticleSystem*
		constexpr auto BackblastEffect3P = 0x7f0; // UParticleSystem*
	}

	namespace n_UBP_attachment_foregrip_C { // : USQWeaponAttachment
		constexpr auto SocketName = 0x498; // FName
		constexpr auto AttachedWeapon = 0x4a0; // ASQWeapon*
		constexpr auto bShowIn1P = 0x4a8; // bool
		constexpr auto bShowIn3P = 0x4a9; // bool
	}

	namespace n_ALevelScriptActor { // : AActor
		constexpr auto bInputEnabled = 0x248; // char : 1
	}

	namespace n_UDynamicEntryBox { // : UDynamicEntryBoxBase
		constexpr auto EntryWidgetClass = 0x1c8; // UUserWidget*
	}

	namespace n_UTireConfig { // : UDataAsset
		constexpr auto FrictionScale = 0x30; // float
		constexpr auto TireFrictionScales = 0x38; // TArray<FTireConfigMaterialFriction>
	}

	namespace n_UMovieScene { // : UMovieSceneSignedObject
		constexpr auto Spawnables = 0x50; // TArray<FMovieSceneSpawnable>
		constexpr auto Possessables = 0x60; // TArray<FMovieScenePossessable>
		constexpr auto ObjectBindings = 0x70; // TArray<FMovieSceneBinding>
		constexpr auto MasterTracks = 0x80; // TArray<UMovieSceneTrack*>
		constexpr auto CameraCutTrack = 0x90; // UMovieSceneTrack*
		constexpr auto SelectionRange = 0x98; // FMovieSceneFrameRange
		constexpr auto PlaybackRange = 0xa8; // FMovieSceneFrameRange
		constexpr auto TickResolution = 0xb8; // FFrameRate
		constexpr auto DisplayRate = 0xc0; // FFrameRate
		constexpr auto EvaluationType = 0xc8; // EMovieSceneEvaluationType
		constexpr auto ClockSource = 0xc9; // EUpdateClockSource
		constexpr auto MarkedFrames = 0xd0; // TArray<FMovieSceneMarkedFrame>
	}

	namespace n_UButtonSlot { // : UPanelSlot
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UMovieScene3DTransformTrack { // : UMovieScenePropertyTrack
		constexpr auto SectionToKey = 0x58; // UMovieSceneSection*
		constexpr auto PropertyName = 0x60; // FName
		constexpr auto PropertyPath = 0x68; // FString
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_USoundNodeWavePlayer { // : USoundNodeAssetReferencer
		constexpr auto SoundWaveAssetPtr = 0x40; // USoundWave*
		constexpr auto SoundWave = 0x68; // USoundWave*
		constexpr auto bLooping = 0x70; // char : 1
	}

	namespace n_UMovieSceneTransformTrack { // : UMovieScenePropertyTrack
		constexpr auto SectionToKey = 0x58; // UMovieSceneSection*
		constexpr auto PropertyName = 0x60; // FName
		constexpr auto PropertyPath = 0x68; // FString
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_UMovieSceneVectorTrack { // : UMovieScenePropertyTrack
		constexpr auto NumChannelsUsed = 0x88; // int
	}

	namespace n_UDistributionVectorUniformCurve { // : UDistributionVector
		constexpr auto ConstantCurve = 0x38; // FInterpCurveTwoVectors
		constexpr auto bLockAxes1 = 0x50; // char : 1
		constexpr auto bLockAxes2 = 0x50; // char : 1
		constexpr auto LockedAxes = 0x54; // EDistributionVectorLockFlags [0x2]
		constexpr auto MirrorFlags = 0x56; // EDistributionVectorMirrorFlags [0x3]
		constexpr auto bUseExtremes = 0x5c; // char : 1
	}

	namespace n_UParticleModuleMeshRotation_Seeded { // : UParticleModuleMeshRotation
		constexpr auto RandomSeedInfo = 0x88; // FParticleRandomSeedInfo
	}

	namespace n_UTextureLightProfile { // : UTexture2D
		constexpr auto Brightness = 0x100; // float
		constexpr auto TextureMultiplier = 0x104; // float
	}

	namespace n_USQMapWidgetMapMarkerSelectable { // : USQMapWidgetMapMarker
		constexpr auto MapIcon = 0x2c8; // USQMapIconComponent*
	}

	namespace n_UMultiPackerButton { // : UButton
		constexpr auto TypeLayerNormal = 0x428; // EMultiPackerImageLayer
		constexpr auto SetAsImage = 0x429; // bool
		constexpr auto N_layer_2 = 0x42a; // bool
		constexpr auto N_layer_3 = 0x42b; // bool
		constexpr auto N_layer_4 = 0x42c; // bool
		constexpr auto N_LayerBase = 0x430; // FLayerDatabase
		constexpr auto N_LayerAddition = 0x488; // FLayerDatabase
		constexpr auto N_LayerDetail = 0x4e0; // FLayerDatabase
		constexpr auto TypeLayerHovered = 0x538; // EMultiPackerImageLayer
		constexpr auto H_layer_2 = 0x539; // bool
		constexpr auto H_layer_3 = 0x53a; // bool
		constexpr auto H_layer_4 = 0x53b; // bool
		constexpr auto H_LayerBase = 0x540; // FLayerDatabase
		constexpr auto H_LayerAddition = 0x598; // FLayerDatabase
		constexpr auto H_LayerDetail = 0x5f0; // FLayerDatabase
		constexpr auto TypeLayerPressed = 0x648; // EMultiPackerImageLayer
		constexpr auto P_layer_2 = 0x649; // bool
		constexpr auto P_layer_3 = 0x64a; // bool
		constexpr auto P_layer_4 = 0x64b; // bool
		constexpr auto P_LayerBase = 0x650; // FLayerDatabase
		constexpr auto P_LayerAddition = 0x6a8; // FLayerDatabase
		constexpr auto P_LayerDetail = 0x700; // FLayerDatabase
		constexpr auto SetDisabledStyle = 0x758; // bool
		constexpr auto TypeLayerDisabled = 0x759; // EMultiPackerImageLayer
		constexpr auto D_layer_2 = 0x75a; // bool
		constexpr auto D_layer_3 = 0x75b; // bool
		constexpr auto D_layer_4 = 0x75c; // bool
		constexpr auto D_LayerBase = 0x760; // FLayerDatabase
		constexpr auto D_LayerAddition = 0x7b8; // FLayerDatabase
		constexpr auto D_LayerDetail = 0x810; // FLayerDatabase
		constexpr auto NormalBaseColorOutline = 0x888; // FLinearColor
		constexpr auto NormalBaseColorInterior = 0x898; // FLinearColor
		constexpr auto NormalBaseOutlineThresold = 0x8a8; // float
		constexpr auto NormalBaseSDFThresold = 0x8ac; // float
		constexpr auto N_BaseStyleChanged = 0x8b0; // bool
		constexpr auto LayerNormalBaseStyle = 0x8b8; // UMultiPackerLayerDatabase*
		constexpr auto NormalAdditionColorOutline = 0x8c0; // FLinearColor
		constexpr auto NormalAdditionColorInterior = 0x8d0; // FLinearColor
		constexpr auto NormalAdditionOutlineThresold = 0x8e0; // float
		constexpr auto NormalAdditionSDFThresold = 0x8e4; // float
		constexpr auto N_AdditionStyleChanged = 0x8e8; // bool
		constexpr auto LayerNormalAdditionStyle = 0x8f0; // UMultiPackerLayerDatabase*
		constexpr auto NormalDetailColorOutline = 0x8f8; // FLinearColor
		constexpr auto NormalDetailColorInterior = 0x908; // FLinearColor
		constexpr auto NormalDetailOutlineThresold = 0x918; // float
		constexpr auto NormalDetailSDFThresold = 0x91c; // float
		constexpr auto N_DetailStyleChanged = 0x920; // bool
		constexpr auto LayerNormalDetailStyle = 0x928; // UMultiPackerLayerDatabase*
		constexpr auto HoveredBaseColorOutline = 0x930; // FLinearColor
		constexpr auto HoveredBaseColorInterior = 0x940; // FLinearColor
		constexpr auto HoveredBaseOutlineThresold = 0x950; // float
		constexpr auto HoveredBaseSDFThresold = 0x954; // float
		constexpr auto H_BaseStyleChanged = 0x958; // bool
		constexpr auto LayerHoveredBaseStyle = 0x960; // UMultiPackerLayerDatabase*
		constexpr auto HoveredAdditionColorOutline = 0x968; // FLinearColor
		constexpr auto HoveredAdditionColorInterior = 0x978; // FLinearColor
		constexpr auto HoveredAdditionOutlineThresold = 0x988; // float
		constexpr auto HoveredAdditionSDFThresold = 0x98c; // float
		constexpr auto H_AdditionStyleChanged = 0x990; // bool
		constexpr auto LayerHoveredAdditionStyle = 0x998; // UMultiPackerLayerDatabase*
		constexpr auto HoveredDetailColorOutline = 0x9a0; // FLinearColor
		constexpr auto HoveredDetailColorInterior = 0x9b0; // FLinearColor
		constexpr auto HoveredDetailOutlineThresold = 0x9c0; // float
		constexpr auto HoveredDetailSDFThresold = 0x9c4; // float
		constexpr auto H_DetailStyleChanged = 0x9c8; // bool
		constexpr auto LayerHoveredDetailStyle = 0x9d0; // UMultiPackerLayerDatabase*
		constexpr auto PressedBaseColorOutline = 0x9d8; // FLinearColor
		constexpr auto PressedBaseColorInterior = 0x9e8; // FLinearColor
		constexpr auto PressedBaseOutlineThresold = 0x9f8; // float
		constexpr auto PressedBaseSDFThresold = 0x9fc; // float
		constexpr auto P_BaseStyleChanged = 0xa00; // bool
		constexpr auto LayerPressedBaseStyle = 0xa08; // UMultiPackerLayerDatabase*
		constexpr auto PressedAdditionColorOutline = 0xa10; // FLinearColor
		constexpr auto PressedAdditionColorInterior = 0xa20; // FLinearColor
		constexpr auto PressedAdditionOutlineThresold = 0xa30; // float
		constexpr auto PressedAdditionSDFThresold = 0xa34; // float
		constexpr auto P_AdditionStyleChanged = 0xa38; // bool
		constexpr auto LayerPressedAdditionStyle = 0xa40; // UMultiPackerLayerDatabase*
		constexpr auto PressedDetailColorOutline = 0xa48; // FLinearColor
		constexpr auto PressedDetailColorInterior = 0xa58; // FLinearColor
		constexpr auto PressedDetailOutlineThresold = 0xa68; // float
		constexpr auto PressedDetailSDFThresold = 0xa6c; // float
		constexpr auto P_DetailStyleChanged = 0xa70; // bool
		constexpr auto LayerPressedDetailStyle = 0xa78; // UMultiPackerLayerDatabase*
		constexpr auto DisabledBaseColorOutline = 0xa80; // FLinearColor
		constexpr auto DisabledBaseColorInterior = 0xa90; // FLinearColor
		constexpr auto DisabledBaseOutlineThresold = 0xaa0; // float
		constexpr auto DisabledBaseSDFThresold = 0xaa4; // float
		constexpr auto D_BaseStyleChanged = 0xaa8; // bool
		constexpr auto LayerDisabledBaseStyle = 0xab0; // UMultiPackerLayerDatabase*
		constexpr auto DisabledAdditionColorOutline = 0xab8; // FLinearColor
		constexpr auto DisabledAdditionColorInterior = 0xac8; // FLinearColor
		constexpr auto DisabledAdditionOutlineThresold = 0xad8; // float
		constexpr auto DisabledAdditionSDFThresold = 0xadc; // float
		constexpr auto D_AdditionStyleChanged = 0xae0; // bool
		constexpr auto LayerDisabledAdditionStyle = 0xae8; // UMultiPackerLayerDatabase*
		constexpr auto DisabledDetailColorOutline = 0xaf0; // FLinearColor
		constexpr auto DisabledDetailColorInterior = 0xb00; // FLinearColor
		constexpr auto DisabledDetailOutlineThresold = 0xb10; // float
		constexpr auto DisabledDetailSDFThresold = 0xb14; // float
		constexpr auto D_DetailStyleChanged = 0xb18; // bool
		constexpr auto LayerDisabledDetailStyle = 0xb20; // UMultiPackerLayerDatabase*
	}

	namespace n_UFoliageType_InstancedStaticMesh { // : UFoliageType
		constexpr auto Mesh = 0x340; // UStaticMesh*
		constexpr auto OverrideMaterials = 0x348; // TArray<UMaterialInterface*>
		constexpr auto ComponentClass = 0x358; // UFoliageInstancedStaticMeshComponent*
	}

	namespace n_ABP_RPG7V2_Heat_Founders_C { // : ABP_RPG7V2_Parent_Founders_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
		constexpr auto MuzzleFlashRearComponent3P = 0x7b8; // UParticleSystemComponent*
		constexpr auto BackBlastComponent3P = 0x7c0; // UChildActorComponent*
		constexpr auto MuzzleFlashRearComponent1P = 0x7c8; // UParticleSystemComponent*
		constexpr auto SquadBlast = 0x7d0; // USQBlastComponent*
		constexpr auto BackBlastComponent1P = 0x7d8; // UChildActorComponent*
		constexpr auto BackblastSocket = 0x7e0; // FName
		constexpr auto BackblastEffect1P = 0x7e8; // UParticleSystem*
		constexpr auto BackblastEffect3P = 0x7f0; // UParticleSystem*
	}

	namespace n_USignificanceManager { // : UObject
		constexpr auto SignificanceManagerClassName = 0x100; // FSoftClassPath
	}

	namespace n_UMovieSceneCameraCutSection { // : UMovieSceneSection
		constexpr auto CameraGuid = 0xe0; // FGuid
		constexpr auto CameraBindingID = 0xf0; // FMovieSceneObjectBindingID
	}

	namespace n_ABP_M4A1_M68_Foregrip_Woodland_C { // : ABP_M4A1_M68_Foregrip_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UEditableGameplayTagQuery { // : UObject
		constexpr auto UserDescription = 0x28; // FString
		constexpr auto RootExpression = 0x48; // UEditableGameplayTagQueryExpression*
		constexpr auto TagQueryExportText_Helper = 0x50; // FGameplayTagQuery
	}

	namespace n_USoundNodeDialoguePlayer { // : USoundNode
		constexpr auto DialogueWaveParameter = 0x40; // FDialogueWaveParameter
		constexpr auto bLooping = 0x60; // char : 1
	}

	namespace n_UAITask_MoveTo { // : UAITask
		constexpr auto OnRequestFailed = 0x70; // FScriptMulticastDelegate
		constexpr auto OnMoveFinished = 0x80; // FScriptMulticastDelegate
		constexpr auto MoveRequest = 0x90; // FAIMoveRequest
	}

	namespace n_UGeometryCacheComponent { // : UMeshComponent
		constexpr auto GeometryCache = 0x430; // UGeometryCache*
		constexpr auto bRunning = 0x438; // bool
		constexpr auto bLooping = 0x439; // bool
		constexpr auto StartTimeOffset = 0x43c; // float
		constexpr auto PlaybackSpeed = 0x440; // float
		constexpr auto NumTracks = 0x444; // int
		constexpr auto ElapsedTime = 0x448; // float
		constexpr auto Duration = 0x47c; // float
		constexpr auto bManualTick = 0x480; // bool
	}

	namespace n_ASQWaterVolume { // : APhysicsVolume
		constexpr auto WaterForce = 0x290; // float
		constexpr auto SoldiersInVolume = 0x298; // TArray<TWeakObjectPtr<ASQSoldier>>
	}

	namespace n_UMaterialExpressionLandscapeLayerBlend { // : UMaterialExpression
		constexpr auto Layers = 0x40; // TArray<FLayerBlendInput>
		constexpr auto ExpressionGUID = 0x50; // FGuid
	}

	namespace n_ABP_AK74MGP25_1P78_UGL_HE_C { // : ABP_AK74MGP25_1P78_UGL_Parent_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_USQMainPatchData { // : USQSteamItem
		constexpr auto PatchData = 0x40; // FSQPatchItem
	}

	namespace n_UMovieSceneStringSection { // : UMovieSceneSection
		constexpr auto StringCurve = 0xe0; // FMovieSceneStringChannel
	}

	namespace n_ABP_M4M203_M150_UGL_HE_Founders_C { // : ABP_M4M203_M150_UGL_Parent_Founders_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_USQVoteSession { // : UObject
		constexpr auto Vote = 0x28; // FSQVote
		constexpr auto State = 0x60; // FSQVoteSessionInfo
	}

	namespace n_UMaterialExpressionAtmosphericLightColor { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UMaterialExpressionRuntimeVirtualTextureSample { // : UMaterialExpression
		constexpr auto Coordinates = 0x40; // FExpressionInput
		constexpr auto VirtualTexture = 0x58; // URuntimeVirtualTexture*
		constexpr auto MaterialType = 0x60; // ERuntimeVirtualTextureMaterialType
	}

	namespace n_USubsurfaceProfile { // : UObject
		constexpr auto Settings = 0x28; // FSubsurfaceProfileStruct
	}

	namespace n_UCurveFloat { // : UCurveBase
		constexpr auto FloatCurve = 0x30; // FRichCurve
		constexpr auto bIsEventCurve = 0xb0; // bool
	}

	namespace n_ASQProtectionZone { // : AActor
		constexpr auto DummyPresetCollisionCPP = 0x250; // UBoxComponent*
		constexpr auto KillHostileInSeconds = 0x258; // float
		constexpr auto TeamId = 0x288; // char
		constexpr auto DeployableDestroyedText = 0x290; // FText
		constexpr auto ProjectileDestroyedText = 0x2a8; // FText
		constexpr auto AccessDeniedText = 0x2c0; // FText
		constexpr auto EnemyProtectionZoneText = 0x2d8; // FText
	}

	namespace n_UParticleModuleTypeDataBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x29; // char : 1
		constexpr auto LODDuplicate = 0x29; // char : 1
		constexpr auto bSupportsRandomSeed = 0x29; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x29; // char : 1
		constexpr auto LODValidity = 0x2c; // char
	}

	namespace n_UPawnAction_Move { // : UPawnAction
		constexpr auto GoalActor = 0x98; // AActor*
		constexpr auto GoalLocation = 0xa0; // FVector
		constexpr auto AcceptableRadius = 0xac; // float
		constexpr auto FilterClass = 0xb0; // UNavigationQueryFilter*
		constexpr auto bAllowStrafe = 0xb8; // char : 1
		constexpr auto bFinishOnOverlap = 0xb8; // char : 1
		constexpr auto bUsePathfinding = 0xb8; // char : 1
		constexpr auto bAllowPartialPath = 0xb8; // char : 1
		constexpr auto bProjectGoalToNavigation = 0xb8; // char : 1
		constexpr auto bUpdatePathToGoal = 0xb8; // char : 1
		constexpr auto bAbortChildActionOnPathChange = 0xb8; // char : 1
	}

	namespace n_APrecomputedVisibilityVolume { // : AVolume
		constexpr auto BrushType = 0x248; // EBrushType
		constexpr auto BrushColor = 0x24c; // FColor
		constexpr auto PolyFlags = 0x250; // int
		constexpr auto bColored = 0x254; // char : 1
		constexpr auto bSolidWhenSelected = 0x254; // char : 1
		constexpr auto bPlaceableFromClassBrowser = 0x254; // char : 1
		constexpr auto bNotForClientOrServer = 0x254; // char : 1
		constexpr auto Brush = 0x258; // UModel*
		constexpr auto BrushComponent = 0x260; // UBrushComponent*
		constexpr auto bInManipulation = 0x268; // char : 1
		constexpr auto SavedSelections = 0x270; // TArray<FGeomSelection>
	}

	namespace n_UInterpTrackEvent { // : UInterpTrack
		constexpr auto EventTrack = 0x70; // TArray<FEventTrackKey>
		constexpr auto bFireEventsWhenForwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenJumpingForwards = 0x80; // char : 1
		constexpr auto bUseCustomEventName = 0x80; // char : 1
	}

	namespace n_UWorldComposition { // : UObject
		constexpr auto TilesStreaming = 0x48; // TArray<ULevelStreaming*>
		constexpr auto TilesStreamingTimeThreshold = 0x58; // double
		constexpr auto bLoadAllTilesDuringCinematic = 0x60; // bool
		constexpr auto bRebaseOriginIn3DSpace = 0x61; // bool
		constexpr auto RebaseOriginDistance = 0x64; // float
	}

	namespace n_USQCaptureZoneResourceComponent { // : UActorComponent
		constexpr auto PrimaryComponentTick = 0x30; // FActorComponentTickFunction
		constexpr auto ComponentTags = 0x88; // TArray<FName>
		constexpr auto AssetUserData = 0x98; // TArray<UAssetUserData*>
		constexpr auto bReplicates = 0xac; // char : 1
		constexpr auto bNetAddressable = 0xac; // char : 1
		constexpr auto bAutoActivate = 0xad; // char : 1
		constexpr auto bIsActive = 0xae; // char : 1
		constexpr auto bEditableWhenInherited = 0xae; // char : 1
		constexpr auto bCanEverAffectNavigation = 0xae; // char : 1
		constexpr auto bIsEditorOnly = 0xae; // char : 1
		constexpr auto CreationMethod = 0xb0; // EComponentCreationMethod
		constexpr auto OnComponentActivated = 0xb1; // FScriptMulticastDelegate
		constexpr auto OnComponentDeactivated = 0xb2; // FScriptMulticastDelegate
		constexpr auto UCSModifiedProperties = 0xb8; // TArray<FSimpleMemberReference>
	}

	namespace n_USQInventoryWidget { // : USQUserWidget
		constexpr auto GroupsArray = 0x230; // TArray<USQInventoryGroupWidget*>
		constexpr auto OwningController = 0x240; // ASQPlayerController*
		constexpr auto RenderedInventory = 0x248; // USQPawnInventoryComponent*
		constexpr auto MaxTranslucencyAlpha = 0x25c; // float
		constexpr auto ItemSelectedAlpha = 0x260; // float
		constexpr auto ItemUnselectedAlpha = 0x264; // float
		constexpr auto FadeoutDuration = 0x268; // float
		constexpr auto FadeoutDelay = 0x26c; // float
		constexpr auto ItemScrollSound = 0x270; // USoundCue*
	}

	namespace n_UParticleModuleLocationEmitterDirect { // : UParticleModuleLocationBase
		constexpr auto EmitterName = 0x30; // FName
	}

	namespace n_UCameraModifier { // : UObject
		constexpr auto bDebug = 0x28; // char : 1
		constexpr auto bExclusive = 0x28; // char : 1
		constexpr auto Priority = 0x2c; // char
		constexpr auto CameraOwner = 0x30; // APlayerCameraManager*
		constexpr auto AlphaInTime = 0x38; // float
		constexpr auto AlphaOutTime = 0x3c; // float
		constexpr auto Alpha = 0x40; // float
	}

	namespace n_UParticleModuleSize { // : UParticleModuleSizeBase
		constexpr auto StartSize = 0x30; // FRawDistributionVector
	}

	namespace n_URestrictedGameplayTagsList { // : UObject
		constexpr auto ConfigFileName = 0x28; // FString
		constexpr auto RestrictedGameplayTagList = 0x38; // TArray<FRestrictedGameplayTagTableRow>
	}

	namespace n_UBP_L85A2_SUSAT_StaticInfo_C { // : UBP_L85A2_StaticInfo_C
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_UGameNetworkManagerSettings { // : UObject
		constexpr auto MinDynamicBandwidth = 0x28; // int
		constexpr auto MaxDynamicBandwidth = 0x2c; // int
		constexpr auto TotalNetBandwidth = 0x30; // int
		constexpr auto BadPingThreshold = 0x34; // int
		constexpr auto bIsStandbyCheckingEnabled = 0x38; // char : 1
		constexpr auto StandbyRxCheatTime = 0x3c; // float
		constexpr auto StandbyTxCheatTime = 0x40; // float
		constexpr auto PercentMissingForRxStandby = 0x44; // float
		constexpr auto PercentMissingForTxStandby = 0x48; // float
		constexpr auto PercentForBadPing = 0x4c; // float
		constexpr auto JoinInProgressStandbyWaitTime = 0x50; // float
	}

	namespace n_UMovieSceneAudioSection { // : UMovieSceneSection
		constexpr auto Sound = 0xe0; // USoundBase*
		constexpr auto StartFrameOffset = 0xe8; // FFrameNumber
		constexpr auto StartOffset = 0xec; // float
		constexpr auto AudioStartTime = 0xf0; // float
		constexpr auto AudioDilationFactor = 0xf4; // float
		constexpr auto AudioVolume = 0xf8; // float
		constexpr auto SoundVolume = 0x100; // FMovieSceneFloatChannel
		constexpr auto PitchMultiplier = 0x1a0; // FMovieSceneFloatChannel
		constexpr auto bSuppressSubtitles = 0x240; // bool
		constexpr auto bOverrideAttenuation = 0x241; // bool
		constexpr auto AttenuationSettings = 0x248; // USoundAttenuation*
		constexpr auto OnQueueSubtitles = 0x250; // DelegateProperty
		constexpr auto OnAudioFinished = 0x260; // FScriptMulticastDelegate
		constexpr auto OnAudioPlaybackPercent = 0x270; // FScriptMulticastDelegate
	}

	namespace n_ABP_M4_M150_Tracer_Woodland_C { // : ABP_M4_M150_Tracer_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_AInstancedFoliageActor { // : AActor
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto bHidden = 0x80; // char : 1
		constexpr auto bNetTemporary = 0x80; // char : 1
		constexpr auto bNetStartup = 0x80; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x80; // char : 1
		constexpr auto bAlwaysRelevant = 0x80; // char : 1
		constexpr auto bReplicateMovement = 0x80; // char : 1
		constexpr auto bTearOff = 0x80; // char : 1
		constexpr auto bExchangedRoles = 0x80; // char : 1
		constexpr auto bNetLoadOnClient = 0x81; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x81; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x81; // char : 1
		constexpr auto bRelevantForLevelBounds = 0x81; // char : 1
		constexpr auto bReplayRewindable = 0x81; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x81; // char : 1
		constexpr auto bAutoDestroyWhenFinished = 0x81; // char : 1
		constexpr auto bBlockInput = 0x81; // char : 1
		constexpr auto bCanBeDamaged = 0x82; // char : 1
		constexpr auto bCollideWhenPlacing = 0x82; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x82; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x82; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x82; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x82; // char : 1
		constexpr auto bIsEditorOnlyActor = 0x82; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x82; // char : 1
		constexpr auto bReplicates = 0x83; // char : 1
		constexpr auto bCanBeInCluster = 0x83; // char : 1
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x83; // char : 1
		constexpr auto bActorEnableCollision = 0x84; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x84; // char : 1
		constexpr auto RemoteRole = 0x85; // ENetRole
		constexpr auto ReplicatedMovement = 0x88; // FRepMovement
		constexpr auto InitialLifeSpan = 0xbc; // float
		constexpr auto CustomTimeDilation = 0xc0; // float
		constexpr auto AttachmentReplication = 0xc8; // FRepAttachment
		constexpr auto Owner = 0x108; // AActor*
		constexpr auto NetDriverName = 0x110; // FName
		constexpr auto Role = 0x118; // ENetRole
		constexpr auto NetDormancy = 0x119; // ENetDormancy
		constexpr auto SpawnCollisionHandlingMethod = 0x11a; // ESpawnActorCollisionHandlingMethod
		constexpr auto AutoReceiveInput = 0x11b; // EAutoReceiveInput
		constexpr auto InputPriority = 0x11c; // int
		constexpr auto InputComponent = 0x120; // UInputComponent*
		constexpr auto NetCullDistanceSquared = 0x128; // float
		constexpr auto NetTag = 0x12c; // int
		constexpr auto NetUpdateFrequency = 0x130; // float
		constexpr auto MinNetUpdateFrequency = 0x134; // float
		constexpr auto bUseRelativeNetUpdateFrequency = 0x138; // char : 1
		constexpr auto bUseOwnerRelativeNetUpdateFrequency = 0x138; // char : 1
		constexpr auto MinRelativeNetUpdateEvaluationFrequency = 0x13c; // float
		constexpr auto NetPriority = 0x140; // float
		constexpr auto Instigator = 0x148; // APawn*
		constexpr auto Children = 0x150; // TArray<AActor*>
		constexpr auto RootComponent = 0x160; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x168; // TArray<AMatineeActor*>
		constexpr auto Layers = 0x180; // TArray<FName>
		constexpr auto ParentComponent = 0x190; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto Tags = 0x198; // TArray<FName>
		constexpr auto OnTakeAnyDamage = 0x1a8; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x1a9; // FScriptMulticastDelegate
		constexpr auto OnTakeRadialDamage = 0x1aa; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x1ab; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x1ac; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x1ad; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x1ae; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x1af; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x1b0; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x1b1; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x1b2; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x1b3; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x1b4; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x1b5; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x1b6; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x1b7; // FScriptMulticastDelegate
		constexpr auto InstanceComponents = 0x218; // TArray<UActorComponent*>
		constexpr auto BlueprintCreatedComponents = 0x228; // TArray<UActorComponent*>
	}

	namespace n_ULevelVariantSets { // : UObject
		constexpr auto DirectorClass = 0x28; // UObject*
		constexpr auto VariantSets = 0x30; // TArray<UVariantSet*>
	}

	namespace n_UAK74M_Skeleton_AnimBlueprint_C { // : USQWeaponAnimInstance
		constexpr auto UberGraphFrame = 0x2b0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root_53045A3D481E9BCD744378950CF2F784 = 0x2b8; // FAnimNode_Root
		constexpr auto AnimGraphNode_Slot_B5DC3B564C87BDB0145E61AEC640C19D = 0x2e8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SequencePlayer_7B34720F433C890EADEDB39B7AB8A2F5 = 0x330; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_7443B5984913D8A6F3EA3BA3CAAB00A0 = 0x3a8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_Slot_CF85BB6A46D7213AA31533BCEFE0F78F = 0x468; // FAnimNode_Slot
		constexpr auto AnimGraphNode_LocalRefPose_B86637DB4524ACCCB3E0E389D4346D87 = 0x4b0; // FAnimNode_RefPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_B4F00A10437E73764F34B1A493BE99C3 = 0x4c8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_6074C4954FD40735219BE68D510946DF = 0x588; // FAnimNode_SequenceEvaluator
	}

	namespace n_ABP_AK74_Tracer_C { // : ABP_AK74_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UMovieScene3DPathSection { // : UMovieScene3DConstraintSection
		constexpr auto TimingCurve = 0x108; // FMovieSceneFloatChannel
		constexpr auto FrontAxisEnum = 0x1a8; // MovieScene3DPathSection_Axis
		constexpr auto UpAxisEnum = 0x1a9; // MovieScene3DPathSection_Axis
		constexpr auto bFollow = 0x1ac; // char : 1
		constexpr auto bReverse = 0x1ac; // char : 1
		constexpr auto bForceUpright = 0x1ac; // char : 1
	}

	namespace n_UBlueprintCore { // : UObject
		constexpr auto SkeletonGeneratedClass = 0x28; // UObject*
		constexpr auto GeneratedClass = 0x30; // UObject*
		constexpr auto bLegacyNeedToPurgeSkelRefs = 0x38; // bool
		constexpr auto BlueprintGuid = 0x3c; // FGuid
	}

	namespace n_UComboBox { // : UWidget
		constexpr auto Items = 0x108; // TArray<UObject*>
		constexpr auto OnGenerateWidgetEvent = 0x118; // DelegateProperty
		constexpr auto bIsFocusable = 0x128; // bool
	}

	namespace n_UEditableGameplayTagQueryExpression_NoTagsMatch { // : UEditableGameplayTagQueryExpression
		constexpr auto Tags = 0x28; // FGameplayTagContainer
	}

	namespace n_ULevelSequencePlayer { // : UMovieSceneSequencePlayer
		constexpr auto OnCameraCut = 0x818; // FScriptMulticastDelegate
	}

	namespace n_AInfo { // : AActor
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto bHidden = 0x80; // char : 1
		constexpr auto bNetTemporary = 0x80; // char : 1
		constexpr auto bNetStartup = 0x80; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x80; // char : 1
		constexpr auto bAlwaysRelevant = 0x80; // char : 1
		constexpr auto bReplicateMovement = 0x80; // char : 1
		constexpr auto bTearOff = 0x80; // char : 1
		constexpr auto bExchangedRoles = 0x80; // char : 1
		constexpr auto bNetLoadOnClient = 0x81; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x81; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x81; // char : 1
		constexpr auto bRelevantForLevelBounds = 0x81; // char : 1
		constexpr auto bReplayRewindable = 0x81; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x81; // char : 1
		constexpr auto bAutoDestroyWhenFinished = 0x81; // char : 1
		constexpr auto bBlockInput = 0x81; // char : 1
		constexpr auto bCanBeDamaged = 0x82; // char : 1
		constexpr auto bCollideWhenPlacing = 0x82; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x82; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x82; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x82; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x82; // char : 1
		constexpr auto bIsEditorOnlyActor = 0x82; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x82; // char : 1
		constexpr auto bReplicates = 0x83; // char : 1
		constexpr auto bCanBeInCluster = 0x83; // char : 1
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x83; // char : 1
		constexpr auto bActorEnableCollision = 0x84; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x84; // char : 1
		constexpr auto RemoteRole = 0x85; // ENetRole
		constexpr auto ReplicatedMovement = 0x88; // FRepMovement
		constexpr auto InitialLifeSpan = 0xbc; // float
		constexpr auto CustomTimeDilation = 0xc0; // float
		constexpr auto AttachmentReplication = 0xc8; // FRepAttachment
		constexpr auto Owner = 0x108; // AActor*
		constexpr auto NetDriverName = 0x110; // FName
		constexpr auto Role = 0x118; // ENetRole
		constexpr auto NetDormancy = 0x119; // ENetDormancy
		constexpr auto SpawnCollisionHandlingMethod = 0x11a; // ESpawnActorCollisionHandlingMethod
		constexpr auto AutoReceiveInput = 0x11b; // EAutoReceiveInput
		constexpr auto InputPriority = 0x11c; // int
		constexpr auto InputComponent = 0x120; // UInputComponent*
		constexpr auto NetCullDistanceSquared = 0x128; // float
		constexpr auto NetTag = 0x12c; // int
		constexpr auto NetUpdateFrequency = 0x130; // float
		constexpr auto MinNetUpdateFrequency = 0x134; // float
		constexpr auto bUseRelativeNetUpdateFrequency = 0x138; // char : 1
		constexpr auto bUseOwnerRelativeNetUpdateFrequency = 0x138; // char : 1
		constexpr auto MinRelativeNetUpdateEvaluationFrequency = 0x13c; // float
		constexpr auto NetPriority = 0x140; // float
		constexpr auto Instigator = 0x148; // APawn*
		constexpr auto Children = 0x150; // TArray<AActor*>
		constexpr auto RootComponent = 0x160; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x168; // TArray<AMatineeActor*>
		constexpr auto Layers = 0x180; // TArray<FName>
		constexpr auto ParentComponent = 0x190; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto Tags = 0x198; // TArray<FName>
		constexpr auto OnTakeAnyDamage = 0x1a8; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x1a9; // FScriptMulticastDelegate
		constexpr auto OnTakeRadialDamage = 0x1aa; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x1ab; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x1ac; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x1ad; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x1ae; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x1af; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x1b0; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x1b1; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x1b2; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x1b3; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x1b4; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x1b5; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x1b6; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x1b7; // FScriptMulticastDelegate
		constexpr auto InstanceComponents = 0x218; // TArray<UActorComponent*>
		constexpr auto BlueprintCreatedComponents = 0x228; // TArray<UActorComponent*>
	}

	namespace n_ABP_AK74MGP25_1P63_UGL_HE_C { // : ABP_AK74MGP25_1P63_UGL_Parent_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_ALandscapeMeshProxyActor { // : AActor
		constexpr auto LandscapeMeshProxyComponent = 0x248; // ULandscapeMeshProxyComponent*
	}

	namespace n_UBTComposite_Sequence { // : UBTCompositeNode
		constexpr auto Children = 0x58; // TArray<FBTCompositeChild>
		constexpr auto Services = 0x68; // TArray<UBTService*>
		constexpr auto bApplyDecoratorScope = 0x88; // char : 1
	}

	namespace n_USizeBox { // : UContentWidget
		constexpr auto bOverride_WidthOverride = 0x120; // char : 1
		constexpr auto bOverride_HeightOverride = 0x120; // char : 1
		constexpr auto bOverride_MinDesiredWidth = 0x120; // char : 1
		constexpr auto bOverride_MinDesiredHeight = 0x120; // char : 1
		constexpr auto bOverride_MaxDesiredWidth = 0x120; // char : 1
		constexpr auto bOverride_MaxDesiredHeight = 0x120; // char : 1
		constexpr auto bOverride_MinAspectRatio = 0x120; // char : 1
		constexpr auto bOverride_MaxAspectRatio = 0x120; // char : 1
		constexpr auto WidthOverride = 0x124; // float
		constexpr auto HeightOverride = 0x128; // float
		constexpr auto MinDesiredWidth = 0x12c; // float
		constexpr auto MinDesiredHeight = 0x130; // float
		constexpr auto MaxDesiredWidth = 0x134; // float
		constexpr auto MaxDesiredHeight = 0x138; // float
		constexpr auto MinAspectRatio = 0x13c; // float
		constexpr auto MaxAspectRatio = 0x140; // float
	}

	namespace n_USpectatorBeaconState { // : UObject
		constexpr auto SessionName = 0x28; // FName
		constexpr auto NumConsumedReservations = 0x30; // int
		constexpr auto MaxReservations = 0x34; // int
		constexpr auto bRestrictCrossConsole = 0x38; // bool
		constexpr auto Reservations = 0x40; // TArray<FSpectatorReservation>
	}

	namespace n_ABP_M4M203_M150_UGL_Smoke_C { // : ABP_M4M203_M150_UGL_Parent_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_ABP_AK74MGP25_Rifle_1P78_C { // : ABP_AK74MGP25_Rifle_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UMaterialExpressionTextureObjectParameter { // : UMaterialExpressionTextureSampleParameter
		constexpr auto ParameterName = 0xe0; // FName
		constexpr auto ExpressionGUID = 0xe8; // FGuid
		constexpr auto Group = 0xf8; // FName
	}

	namespace n_UAbilityTask { // : UGameplayTask
		constexpr auto Ability = 0x68; // UGameplayAbility*
		constexpr auto AbilitySystemComponent = 0x70; // UAbilitySystemComponent*
	}

	namespace n_URichTextBlockImageDecorator { // : URichTextBlockDecorator
		constexpr auto ImageSet = 0x28; // UDataTable*
	}

	namespace n_UBTDecorator_IsBBEntryOfClass { // : UBTDecorator_BlackboardBase
		constexpr auto TestClass = 0x90; // UObject*
	}

	namespace n_ABP_AK74MGP25_UGL_Smoke_Blue_C { // : ABP_AK74MGP25_UGL_Smoke_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_USQSquadStateDataSoldier { // : USQSquadStateDataPawn
		constexpr auto HealthStatusRange = 0x1a8; // float
		constexpr auto bIsBleeding = 0x1ac; // char : 1
		constexpr auto bIsWounded = 0x1ac; // char : 1
		constexpr auto bIsAlive = 0x1ac; // char : 1
		constexpr auto bIsInVehicle = 0x1ac; // char : 1
		constexpr auto bIsUsingFreeLook = 0x1ac; // char : 1
		constexpr auto bIsMedic = 0x1ac; // char : 1
		constexpr auto SoldierInfo = 0x1b0; // FSQSoldierInfo
	}

	namespace n_UMaterialExpressionSubtract { // : UMaterialExpression
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_UMaterialExpressionGetMaterialAttributes { // : UMaterialExpression
		constexpr auto MaterialAttributes = 0x40; // FMaterialAttributesInput
		constexpr auto AttributeGetTypes = 0x58; // TArray<FGuid>
	}

	namespace n_ULeaderboardQueryCallbackProxy { // : UObject
		constexpr auto OnSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto OnFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_USQ_MouseCursor_C { // : UUserWidget
		constexpr auto ColorAndOpacity = 0x110; // FLinearColor
		constexpr auto ColorAndOpacityDelegate = 0x120; // DelegateProperty
		constexpr auto ForegroundColor = 0x130; // FSlateColor
		constexpr auto ForegroundColorDelegate = 0x158; // DelegateProperty
		constexpr auto Padding = 0x168; // FMargin
		constexpr auto ActiveSequencePlayers = 0x178; // TArray<UUMGSequencePlayer*>
		constexpr auto StoppedSequencePlayers = 0x188; // TArray<UUMGSequencePlayer*>
		constexpr auto NamedSlotBindings = 0x198; // TArray<FNamedSlotBinding>
		constexpr auto WidgetTree = 0x1a8; // UWidgetTree*
		constexpr auto Priority = 0x1b0; // int
		constexpr auto bSupportsKeyboardFocus = 0x1b4; // char : 1
		constexpr auto bIsFocusable = 0x1b4; // char : 1
		constexpr auto bStopAction = 0x1b4; // char : 1
		constexpr auto bHasScriptImplementedTick = 0x1b4; // char : 1
		constexpr auto bHasScriptImplementedPaint = 0x1b4; // char : 1
		constexpr auto bCookedWidgetTree = 0x1b4; // char : 1
		constexpr auto TickFrequency = 0x1c0; // EWidgetTickFrequency
		constexpr auto InputComponent = 0x1c8; // UInputComponent*
		constexpr auto AnimationCallbacks = 0x1d0; // TArray<FAnimationEventBinding>
	}

	namespace n_USQMapWidgetBase { // : UUserWidget
		constexpr auto MapBody = 0x230; // UPanelWidget*
	}

	namespace n_ABP_M4M203_M68_UGL_Woodland_Smoke_Blue_C { // : ABP_M4M203_M68_UGL_Woodland_Smoke_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_ULandscapeSettings { // : UDeveloperSettings
		constexpr auto MaxNumberOfLayers = 0x38; // int
	}

	namespace n_UInterpTrackFloatProp { // : UInterpTrackFloatBase
		constexpr auto PropertyName = 0x90; // FName
	}

	namespace n_APartyBeaconClient { // : AOnlineBeaconClient
		constexpr auto DestSessionId = 0x2f8; // FString
		constexpr auto PendingReservation = 0x308; // FPartyReservation
		constexpr auto RequestType = 0x358; // EClientRequestType
		constexpr auto bPendingReservationSent = 0x359; // bool
		constexpr auto bCancelReservation = 0x35a; // bool
	}

	namespace n_UInterpTrackInstEvent { // : UInterpTrackInst
		constexpr auto LastUpdatePosition = 0x28; // float
	}

	namespace n_UInterpTrackInstSlomo { // : UInterpTrackInst
		constexpr auto OldTimeDilation = 0x28; // float
	}

	namespace n_ABP_L85A2AG36_UGL_DarkEarth_HE_C { // : ABP_L85A2AG36_UGL_DarkEarth_Parent_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UParticleModuleLocationSkelVertSurface { // : UParticleModuleLocationBase
		constexpr auto SourceType = 0x30; // ELocationSkelVertSurfaceSource
		constexpr auto UniversalOffset = 0x34; // FVector
		constexpr auto bUpdatePositionEachFrame = 0x40; // char : 1
		constexpr auto bOrientMeshEmitters = 0x40; // char : 1
		constexpr auto bInheritBoneVelocity = 0x40; // char : 1
		constexpr auto InheritVelocityScale = 0x44; // float
		constexpr auto SkelMeshActorParamName = 0x48; // FName
		constexpr auto ValidAssociatedBones = 0x50; // TArray<FName>
		constexpr auto bEnforceNormalCheck = 0x60; // char : 1
		constexpr auto NormalToCompare = 0x64; // FVector
		constexpr auto NormalCheckToleranceDegrees = 0x70; // float
		constexpr auto NormalCheckTolerance = 0x74; // float
		constexpr auto ValidMaterialIndices = 0x78; // TArray<int>
		constexpr auto bInheritVertexColor = 0x88; // char : 1
		constexpr auto bInheritUV = 0x88; // char : 1
		constexpr auto InheritUVChannel = 0x8c; // uint32
	}

	namespace n_UBP_RPG7v2Tandem_StaticInfo_C { // : UBP_RPG7v2Parent_StaticInfo_C
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_ABP_AK74GP25_UGL_Smoke_Red_Founders_C { // : ABP_AK74GP25_UGL_Smoke_Red_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_AARSkyLight { // : ASkyLight
		constexpr auto CaptureProbe = 0x258; // UAREnvironmentCaptureProbe*
	}

	namespace n_UAnimSequencerInstance { // : UAnimCustomInstance
		constexpr auto CurrentSkeleton = 0x28; // USkeleton*
		constexpr auto RootMotionMode = 0x30; // ERootMotionMode
		constexpr auto bUseMultiThreadedAnimationUpdate = 0x31; // char : 1
		constexpr auto bUsingCopyPoseFromMesh = 0x31; // char : 1
		constexpr auto bQueueMontageEvents = 0x31; // char : 1
		constexpr auto OnMontageBlendingOut = 0x38; // FScriptMulticastDelegate
		constexpr auto OnMontageStarted = 0x48; // FScriptMulticastDelegate
		constexpr auto OnMontageEnded = 0x58; // FScriptMulticastDelegate
		constexpr auto OnAllMontageInstancesEnded = 0x68; // FScriptMulticastDelegate
		constexpr auto NotifyQueue = 0x100; // FAnimNotifyQueue
		constexpr auto ActiveAnimNotifyState = 0x170; // TArray<FAnimNotifyEvent>
	}

	namespace n_UMaterialExpressionVertexInterpolator { // : UMaterialExpressionCustomOutput
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UParticleModuleOrbitBase { // : UParticleModule
		constexpr auto bUseEmitterTime = 0x30; // char : 1
	}

	namespace n_UBP_M4_M68_Foregrip_StaticInfo_C { // : UBP_M4_Foregrip_StaticInfo_C
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_USoundNodeWaveParam { // : USoundNode
		constexpr auto WaveParameterName = 0x40; // FName
	}

	namespace n_UChaosGameplayEventDispatcher { // : UChaosEventListenerComponent
		constexpr auto CollisionEventRegistrations = 0x1a0; // TMap<UPrimitiveComponent*, FChaosHandlerSet>
		constexpr auto BreakEventRegistrations = 0x1f0; // TMap<UPrimitiveComponent*, FBreakEventCallbackWrapper>
	}

	namespace n_UParticleModuleRotation { // : UParticleModuleRotationBase
		constexpr auto StartRotation = 0x30; // FRawDistributionFloat
	}

	namespace n_UInputSettings { // : UObject
		constexpr auto AxisConfig = 0x28; // TArray<FInputAxisConfigEntry>
		constexpr auto bAltEnterTogglesFullscreen = 0x38; // char : 1
		constexpr auto bF11TogglesFullscreen = 0x38; // char : 1
		constexpr auto bUseMouseForTouch = 0x38; // char : 1
		constexpr auto bEnableMouseSmoothing = 0x38; // char : 1
		constexpr auto bEnableFOVScaling = 0x38; // char : 1
		constexpr auto bCaptureMouseOnLaunch = 0x38; // char : 1
		constexpr auto bDefaultViewportMouseLock = 0x38; // char : 1
		constexpr auto bAlwaysShowTouchInterface = 0x38; // char : 1
		constexpr auto bShowConsoleOnFourFingerTap = 0x39; // char : 1
		constexpr auto bEnableGestureRecognizer = 0x39; // char : 1
		constexpr auto bUseAutocorrect = 0x3a; // bool
		constexpr auto ExcludedAutocorrectOS = 0x40; // TArray<FString>
		constexpr auto ExcludedAutocorrectCultures = 0x50; // TArray<FString>
		constexpr auto ExcludedAutocorrectDeviceModels = 0x60; // TArray<FString>
		constexpr auto DefaultViewportMouseCaptureMode = 0x70; // EMouseCaptureMode
		constexpr auto DefaultViewportMouseLockMode = 0x71; // EMouseLockMode
		constexpr auto FOVScale = 0x74; // float
		constexpr auto DoubleClickTime = 0x78; // float
		constexpr auto ActionMappings = 0x80; // TArray<FInputActionKeyMapping>
		constexpr auto AxisMappings = 0x90; // TArray<FInputAxisKeyMapping>
		constexpr auto SpeechMappings = 0xa0; // TArray<FInputActionSpeechMapping>
		constexpr auto DefaultTouchInterface = 0xb0; // FSoftObjectPath
		constexpr auto ConsoleKey = 0xc8; // FKey
		constexpr auto ConsoleKeys = 0xe0; // TArray<FKey>
	}

	namespace n_USystemTimeTimecodeProvider { // : UTimecodeProvider
		constexpr auto FrameRate = 0x28; // FFrameRate
	}

	namespace n_ABP_AK74MGP25_Rifle_1P78_Desert_C { // : ABP_AK74MGP25_Rifle_1P78_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UAtmosphericFogComponent { // : USceneComponent
		constexpr auto SunMultiplier = 0x218; // float
		constexpr auto FogMultiplier = 0x21c; // float
		constexpr auto DensityMultiplier = 0x220; // float
		constexpr auto DensityOffset = 0x224; // float
		constexpr auto DistanceScale = 0x228; // float
		constexpr auto AltitudeScale = 0x22c; // float
		constexpr auto DistanceOffset = 0x230; // float
		constexpr auto GroundOffset = 0x234; // float
		constexpr auto StartDistance = 0x238; // float
		constexpr auto SunDiscScale = 0x23c; // float
		constexpr auto DefaultBrightness = 0x240; // float
		constexpr auto DefaultLightColor = 0x244; // FColor
		constexpr auto bDisableSunDisk = 0x248; // char : 1
		constexpr auto bAtmosphereAffectsSunIlluminance = 0x248; // char : 1
		constexpr auto bDisableGroundScattering = 0x248; // char : 1
		constexpr auto PrecomputeParams = 0x24c; // FAtmospherePrecomputeParameters
		constexpr auto TransmittanceTexture = 0x278; // UTexture2D*
		constexpr auto IrradianceTexture = 0x280; // UTexture2D*
	}

	namespace n_UMaterialExpressionSceneTexelSize { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_ABP_AKS74_1P29_Founders_C { // : ABP_AKS74_1P29_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
		constexpr auto Front = 0x7b8; // UStaticMeshComponent*
		constexpr auto Scope = 0x7c0; // UStaticMeshComponent*
	}

	namespace n_ADebugCameraController { // : APlayerController
		constexpr auto bShowSelectedInfo = 0x598; // char : 1
		constexpr auto bIsFrozenRendering = 0x598; // char : 1
		constexpr auto bIsOrbitingSelectedActor = 0x598; // char : 1
		constexpr auto bOrbitPivotUseCenter = 0x598; // char : 1
		constexpr auto bEnableBufferVisualization = 0x598; // char : 1
		constexpr auto bEnableBufferVisualizationFullMode = 0x598; // char : 1
		constexpr auto bIsBufferVisualizationInputSetup = 0x598; // char : 1
		constexpr auto bLastDisplayEnabled = 0x598; // char : 1
		constexpr auto DrawFrustum = 0x5a0; // UDrawFrustumComponent*
		constexpr auto SelectedActor = 0x5a8; // AActor*
		constexpr auto SelectedComponent = 0x5b0; // UPrimitiveComponent*
		constexpr auto SelectedHitPoint = 0x5b8; // FHitResult
		constexpr auto OriginalControllerRef = 0x640; // APlayerController*
		constexpr auto OriginalPlayer = 0x648; // UPlayer*
		constexpr auto SpeedScale = 0x650; // float
		constexpr auto InitialMaxSpeed = 0x654; // float
		constexpr auto InitialAccel = 0x658; // float
		constexpr auto InitialDecel = 0x65c; // float
	}

	namespace n_UBP_MedShockwave_C { // : USQShockwave
		constexpr auto ShockwaveEffectType = 0x28; // ESQShockwaveEffectType
		constexpr auto Strength = 0x2c; // float
		constexpr auto ShockwaveQualitySettings = 0x30; // TArray<FSQShockwaveQualitySetting>
		constexpr auto CameraShake = 0x40; // FSQCameraShake
		constexpr auto SecondaryCameraShake = 0x60; // FSQCameraShake
		constexpr auto VerticalSteps = 0x80; // int
		constexpr auto HorizontalSteps = 0x84; // int
		constexpr auto DefaultRotation = 0x88; // FRotator
		constexpr auto DefaultLocationOffset = 0x94; // FVector
		constexpr auto Range = 0xa0; // float
		constexpr auto PitchRange = 0xa4; // float
		constexpr auto YawRange = 0xa8; // float
		constexpr auto CullingDistance = 0xac; // float
		constexpr auto NearbyExplosionEventRadius = 0xb0; // float
		constexpr auto MaxSoundsToSpawn = 0xb4; // int
		constexpr auto MaxDecalsToSpawn = 0xb8; // int
		constexpr auto bDebugLines = 0xbc; // bool
		constexpr auto bDebugSpheres = 0xbd; // bool
		constexpr auto Emitter = 0xc0; // UParticleSystem*
		constexpr auto DefaultEffectsClass = 0xc8; // USQPhysicalMaterialEffects*
	}

	namespace n_USQShockwaveDirected { // : USQShockwave
		constexpr auto bFractionalOffsettingForHorizontalSteps = 0xd0; // bool
	}

	namespace n_USQTurretMovementComponent { // : USQVelocityRotatingMovementComponent
		constexpr auto UpdatedPitchComponent = 0x2d8; // USceneComponent*
		constexpr auto UpdatedYawComponent = 0x2e0; // USceneComponent*
		constexpr auto YawStabilizationSpeed = 0x2e8; // float
		constexpr auto PitchStabilizationSpeed = 0x2ec; // float
		constexpr auto MaxYawSpeed = 0x2f0; // float
		constexpr auto MaxPitchSpeed = 0x2f4; // float
	}

	namespace n_ABP_M9_3Mags_Nickel_C { // : ABP_M9_3Mags_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_USQMovementComponentManager { // : UPawnMovementComponent
		constexpr auto ManagedMovementComponents = 0x170; // TArray<USQMovementComponentBase*>
	}

	namespace n_UFrameGrabberProtocol { // : UMovieSceneImageCaptureProtocolBase
		constexpr auto State = 0x50; // EMovieSceneCaptureProtocolState
	}

	namespace n_UBP_Attachment_M68_C { // : USQWeaponAttachment_Scope
		constexpr auto MeshTransitionPercentage = 0x4b0; // float
		constexpr auto ADSMesh = 0x4b8; // UStaticMesh*
		constexpr auto ADSMeshTransform = 0x4c0; // FTransform
		constexpr auto NonADSMesh = 0x4f0; // UStaticMesh*
		constexpr auto NonADSMeshTransform = 0x500; // FTransform
		constexpr auto InToADSMeshTransitionSettings = 0x530; // TArray<FSQMeshTransitionSettings>
		constexpr auto OutFromADSMeshTransitionSettings = 0x540; // TArray<FSQMeshTransitionSettings>
	}

	namespace n_UParticleModuleTrailSource { // : UParticleModuleTrailBase
		constexpr auto SourceMethod = 0x30; // ETrail2SourceMethod
		constexpr auto SourceName = 0x34; // FName
		constexpr auto SourceStrength = 0x40; // FRawDistributionFloat
		constexpr auto bLockSourceStength = 0x78; // char : 1
		constexpr auto SourceOffsetCount = 0x7c; // int
		constexpr auto SourceOffsetDefaults = 0x80; // TArray<FVector>
		constexpr auto SelectionMethod = 0x90; // EParticleSourceSelectionMethod
		constexpr auto bInheritRotation = 0x94; // char : 1
	}

	namespace n_UBP_AK74GP25_Rifle_StaticInfo_C { // : UBP_AK74_StaticInfo_C
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_UMaterialExpressionSceneTexture { // : UMaterialExpression
		constexpr auto Coordinates = 0x40; // FExpressionInput
		constexpr auto SceneTextureId = 0x54; // ESceneTextureId
		constexpr auto bFiltered = 0x55; // bool
	}

	namespace n_ABP_RPG7V2_Frag_Founders_C { // : ABP_RPG7V2_Parent_Founders_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
		constexpr auto MuzzleFlashRearComponent3P = 0x7b8; // UParticleSystemComponent*
		constexpr auto BackBlastComponent3P = 0x7c0; // UChildActorComponent*
		constexpr auto MuzzleFlashRearComponent1P = 0x7c8; // UParticleSystemComponent*
		constexpr auto SquadBlast = 0x7d0; // USQBlastComponent*
		constexpr auto BackBlastComponent1P = 0x7d8; // UChildActorComponent*
		constexpr auto BackblastSocket = 0x7e0; // FName
		constexpr auto BackblastEffect1P = 0x7e8; // UParticleSystem*
		constexpr auto BackblastEffect3P = 0x7f0; // UParticleSystem*
	}

	namespace n_USQCoreStateSquadListWidget { // : USQCoreStateWidget
		constexpr auto ListLayout = 0x258; // EListLayout
	}

	namespace n_USQReplicationGraphNode_PlayerStateFrequencyLimiter { // : UReplicationGraphNode
		constexpr auto AllChildNodes = 0x28; // TArray<UReplicationGraphNode*>
	}

	namespace n_UARTextureCameraImage { // : UARTexture
		constexpr auto TextureType = 0xd0; // EARTextureType
		constexpr auto Timestamp = 0xd4; // float
		constexpr auto ExternalTextureGuid = 0xd8; // FGuid
		constexpr auto Size = 0xe8; // FVector2D
	}

	namespace n_UParticleModule { // : UObject
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x29; // char : 1
		constexpr auto LODDuplicate = 0x29; // char : 1
		constexpr auto bSupportsRandomSeed = 0x29; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x29; // char : 1
		constexpr auto LODValidity = 0x2c; // char
	}

	namespace n_ANavigationTestingActor { // : AActor
		constexpr auto CapsuleComponent = 0x258; // UCapsuleComponent*
		constexpr auto InvokerComponent = 0x260; // UNavigationInvokerComponent*
		constexpr auto bActAsNavigationInvoker = 0x268; // char : 1
		constexpr auto NavAgentProps = 0x270; // FNavAgentProperties
		constexpr auto QueryingExtent = 0x2a0; // FVector
		constexpr auto MyNavData = 0x2b0; // ANavigationData*
		constexpr auto ProjectedLocation = 0x2b8; // FVector
		constexpr auto bProjectedLocationValid = 0x2c4; // char : 1
		constexpr auto bSearchStart = 0x2c4; // char : 1
		constexpr auto bBacktracking = 0x2c4; // char : 1
		constexpr auto bUseHierarchicalPathfinding = 0x2c4; // char : 1
		constexpr auto bGatherDetailedInfo = 0x2c4; // char : 1
		constexpr auto bDrawDistanceToWall = 0x2c4; // char : 1
		constexpr auto bShowNodePool = 0x2c4; // char : 1
		constexpr auto bShowBestPath = 0x2c4; // char : 1
		constexpr auto bShowDiffWithPreviousStep = 0x2c5; // char : 1
		constexpr auto bShouldBeVisibleInGame = 0x2c5; // char : 1
		constexpr auto CostDisplayMode = 0x2c8; // ENavCostDisplay
		constexpr auto TextCanvasOffset = 0x2cc; // FVector2D
		constexpr auto bPathExist = 0x2d4; // char : 1
		constexpr auto bPathIsPartial = 0x2d4; // char : 1
		constexpr auto bPathSearchOutOfNodes = 0x2d4; // char : 1
		constexpr auto PathfindingTime = 0x2d8; // float
		constexpr auto PathCost = 0x2dc; // float
		constexpr auto PathfindingSteps = 0x2e0; // int
		constexpr auto OtherActor = 0x2e8; // ANavigationTestingActor*
		constexpr auto FilterClass = 0x2f0; // UNavigationQueryFilter*
		constexpr auto ShowStepIndex = 0x2f8; // int
		constexpr auto OffsetFromCornersDistance = 0x2fc; // float
	}

	namespace n_UBP_Attachment_PSO-1_Blur_C { // : USQWeaponAttachment_Scope
		constexpr auto MeshTransitionPercentage = 0x4b0; // float
		constexpr auto ADSMesh = 0x4b8; // UStaticMesh*
		constexpr auto ADSMeshTransform = 0x4c0; // FTransform
		constexpr auto NonADSMesh = 0x4f0; // UStaticMesh*
		constexpr auto NonADSMeshTransform = 0x500; // FTransform
		constexpr auto InToADSMeshTransitionSettings = 0x530; // TArray<FSQMeshTransitionSettings>
		constexpr auto OutFromADSMeshTransitionSettings = 0x540; // TArray<FSQMeshTransitionSettings>
	}

	namespace n_USVD_Skeleton_AnimBlueprint_C { // : USQWeaponAnimInstance
		constexpr auto UberGraphFrame = 0x2b0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root_115B668D428E4DD65DC859B7776962A7 = 0x2b8; // FAnimNode_Root
		constexpr auto AnimGraphNode_LayeredBoneBlend_9F19172544B66D25203850843D724F6C = 0x2e8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_CD2DBF0C4FEDA870ABDD8BBC3073B50C = 0x3a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot_5ABC3CC94A9D3AAB87B349B79E941C78 = 0x420; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_7D10649543E1B532ADF4D99F70177E36 = 0x468; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SequencePlayer_15D2C6C14816A3103AC15EB07B959A23 = 0x4b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot_833CA5EA4DD87ED7EFDD32B5E1C76631 = 0x528; // FAnimNode_Slot
	}

	namespace n_UInterpTrackFloatAnimBPParam { // : UInterpTrackFloatBase
		constexpr auto AnimBlueprintClass = 0x90; // UObject*
		constexpr auto AnimClass = 0x98; // UAnimInstance*
		constexpr auto ParamName = 0xa0; // FName
	}

	namespace n_UBP_SQFactionSetup_C { // : USQFactionSetup
		constexpr auto Type = 0xd8; // ESQFactionSetupType
		constexpr auto Tags = 0xe0; // TSet<ESQFactionSetupTag>
		constexpr auto CanUseCommanderActionNearVehicle = 0x130; // bool
		constexpr auto HasBuddyRally = 0x131; // bool
		constexpr auto RoleGroupingStrategies = 0x138; // TArray<FSQRoleGroupingStrategy>
		constexpr auto RoleCategories = 0x148; // TArray<FSQRoleGroupingStrategy>
		constexpr auto RoleGroupingTags = 0x158; // TArray<FSQRoleGroupingStrategy>
		constexpr auto DeployableGroupingStrategies = 0x168; // TArray<FSQDeployableGroupingStrategy>
		constexpr auto ActionGroupingStrategies = 0x178; // TArray<FSQActionGroupingStrategy>
	}

	namespace n_UBP_Attachment_PSO-1_C { // : USQWeaponAttachment_Scope
		constexpr auto MeshTransitionPercentage = 0x4b0; // float
		constexpr auto ADSMesh = 0x4b8; // UStaticMesh*
		constexpr auto ADSMeshTransform = 0x4c0; // FTransform
		constexpr auto NonADSMesh = 0x4f0; // UStaticMesh*
		constexpr auto NonADSMeshTransform = 0x500; // FTransform
		constexpr auto InToADSMeshTransitionSettings = 0x530; // TArray<FSQMeshTransitionSettings>
		constexpr auto OutFromADSMeshTransitionSettings = 0x540; // TArray<FSQMeshTransitionSettings>
	}

	namespace n_ABP_L85A2AG36_UGL_DarkEarth_Smoke_Blue_C { // : ABP_L85A2AG36_UGL_DarkEarth_Smoke_Red_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UParticleModuleRotation_Seeded { // : UParticleModuleRotation
		constexpr auto RandomSeedInfo = 0x68; // FParticleRandomSeedInfo
	}

	namespace n_ASQDeployable { // : AActor
		constexpr auto InitialTeam = 0x258; // ESQTeam
		constexpr auto OwningFob = 0x260; // ASQForwardBase*
		constexpr auto HalfBuiltTransitionHealth = 0x268; // float
		constexpr auto FullyBuiltTransitionHealth = 0x26c; // float
		constexpr auto Team = 0x270; // int
		constexpr auto bIsFob = 0x274; // bool
		constexpr auto bPlaced = 0x275; // bool
		constexpr auto StackingCollisionBox = 0x278; // UBoxComponent*
		constexpr auto PlacementCollisionBox = 0x280; // UBoxComponent*
		constexpr auto bUsePlacementCollisionBox = 0x288; // bool
		constexpr auto StateObject = 0x290; // USQCoreStateComponent*
		constexpr auto ExplosiveType = 0x298; // ESQExplosiveType
		constexpr auto UsableData = 0x2a0; // FSQUsableData
		constexpr auto Completed = 0x2e0; // USceneComponent*
		constexpr auto Unbuilt = 0x2e8; // USceneComponent*
		constexpr auto HalfBuilt = 0x2f0; // USceneComponent*
		constexpr auto SimpleDetectionSphere = 0x2f8; // USphereComponent*
		constexpr auto OnBuildStateChange = 0x300; // FScriptMulticastDelegate
		constexpr auto OnDestroyedEvent = 0x310; // FScriptMulticastDelegate
		constexpr auto BuildState = 0x320; // ESQBuildState
		constexpr auto ChangeStateEffects = 0x328; // TArray<FSQDeployableChangeStateEffect>
		constexpr auto DamageStateEffects = 0x338; // TArray<FSQDeployableStateDamageEffect>
		constexpr auto Cost = 0x348; // int
		constexpr auto MaxHealth = 0x34c; // float
		constexpr auto InitialHealth = 0x350; // float
		constexpr auto Health = 0x354; // float
		constexpr auto bCanUnbuild = 0x358; // bool
		constexpr auto AllowableDamageTypes = 0x360; // TArray<FSQDamageModifier>
		constexpr auto Size = 0x370; // ESQDeployableSize
		constexpr auto bIngoreNoResist = 0x371; // bool
		constexpr auto bStartUnbuilt = 0x372; // bool
		constexpr auto bTrackInFOB = 0x373; // bool
		constexpr auto bTrackInPlayerState = 0x374; // bool
		constexpr auto ObjectTypesToStack = 0x378; // TArray<EObjectTypeQuery>
		constexpr auto bAllowStacking = 0x388; // bool
		constexpr auto bAllowPlacementOnPawns = 0x389; // bool
		constexpr auto bAllowPlacementOnSoldiers = 0x38a; // bool
		constexpr auto bAllowPlacementOnVehicles = 0x38b; // bool
		constexpr auto bAttachToUnderlyingActor = 0x38c; // bool
		constexpr auto bDestroyWhenAttachedActorIsDestroyed = 0x38d; // bool
		constexpr auto bCachedPlacementResult = 0x38e; // ESQInvalidPlacementReason
		constexpr auto bAlignToGround = 0x38f; // bool
		constexpr auto ValidPitchRange = 0x390; // float
		constexpr auto MaxCornerDifference = 0x394; // float
		constexpr auto bRequiresSameTeam = 0x398; // bool
		constexpr auto bCantBePlacedInFOB = 0x399; // bool
		constexpr auto GhostOffset = 0x39c; // FVector
		constexpr auto GhostBuildState = 0x3a8; // ESQBuildState
		constexpr auto GhostMaterial = 0x3b0; // UMaterialInterface*
		constexpr auto bIsGhost = 0x3b8; // bool
		constexpr auto GhostRotationSpeed = 0x3bc; // float
		constexpr auto GhostRotationDelta = 0x3c0; // float
		constexpr auto bAllowFireWeaponOverrideOnSQPlayerController = 0x3c4; // bool
		constexpr auto bAllowAltFireWeaponOverrideOnSQPlayerController = 0x3c5; // bool
		constexpr auto bRequiresFOB = 0x3c6; // bool
		constexpr auto bDrawDebug = 0x3c7; // bool
		constexpr auto DynGhostInstance = 0x3d0; // UMaterialInstanceDynamic*
		constexpr auto Setting = 0x3e8; // USQDeployableSettings*
		constexpr auto CachedInvalidPlacementReason = 0x3f0; // FDataTableRowHandle
		constexpr auto ErrorTable = 0x400; // UDataTable*
		constexpr auto WasEverBuilt = 0x408; // bool
	}

	namespace n_USQReplicationGraphNode_AlwaysRelevant_ForConnection { // : UReplicationGraphNode
		constexpr auto LastPawn = 0x278; // AActor*
		constexpr auto PastRelevantActors = 0x280; // TArray<FAlwaysRelevantActorInfo>
	}

	namespace n_UInterpTrackVectorBase { // : UInterpTrack
		constexpr auto VectorTrack = 0x70; // FInterpCurveVector
		constexpr auto CurveTension = 0x88; // float
	}

	namespace n_UBTTask_GameplayTaskBase { // : UBTTaskNode
		constexpr auto bWaitForGameplayTask = 0x70; // char : 1
	}

	namespace n_UPluginCommandlet { // : UCommandlet
		constexpr auto HelpDescription = 0x28; // FString
		constexpr auto HelpUsage = 0x38; // FString
		constexpr auto HelpWebLink = 0x48; // FString
		constexpr auto HelpParamNames = 0x58; // TArray<FString>
		constexpr auto HelpParamDescriptions = 0x68; // TArray<FString>
		constexpr auto IsServer = 0x78; // char : 1
		constexpr auto IsClient = 0x78; // char : 1
		constexpr auto IsEditor = 0x78; // char : 1
		constexpr auto LogToConsole = 0x78; // char : 1
		constexpr auto ShowErrorCount = 0x78; // char : 1
		constexpr auto ShowProgress = 0x78; // char : 1
	}

	namespace n_USQDamageType_ExplosiveRocket { // : USQDamageType_Explosive
		constexpr auto bCanCauseBleeding = 0x40; // bool
	}

	namespace n_UDeviceProfileManager { // : UObject
		constexpr auto Profiles = 0x28; // TArray<UObject*>
	}

	namespace n_USQAdminPanel { // : UUserWidget
		constexpr auto ColorAndOpacity = 0x110; // FLinearColor
		constexpr auto ColorAndOpacityDelegate = 0x120; // DelegateProperty
		constexpr auto ForegroundColor = 0x130; // FSlateColor
		constexpr auto ForegroundColorDelegate = 0x158; // DelegateProperty
		constexpr auto Padding = 0x168; // FMargin
		constexpr auto ActiveSequencePlayers = 0x178; // TArray<UUMGSequencePlayer*>
		constexpr auto StoppedSequencePlayers = 0x188; // TArray<UUMGSequencePlayer*>
		constexpr auto NamedSlotBindings = 0x198; // TArray<FNamedSlotBinding>
		constexpr auto WidgetTree = 0x1a8; // UWidgetTree*
		constexpr auto Priority = 0x1b0; // int
		constexpr auto bSupportsKeyboardFocus = 0x1b4; // char : 1
		constexpr auto bIsFocusable = 0x1b4; // char : 1
		constexpr auto bStopAction = 0x1b4; // char : 1
		constexpr auto bHasScriptImplementedTick = 0x1b4; // char : 1
		constexpr auto bHasScriptImplementedPaint = 0x1b4; // char : 1
		constexpr auto bCookedWidgetTree = 0x1b4; // char : 1
		constexpr auto TickFrequency = 0x1c0; // EWidgetTickFrequency
		constexpr auto InputComponent = 0x1c8; // UInputComponent*
		constexpr auto AnimationCallbacks = 0x1d0; // TArray<FAnimationEventBinding>
	}

	namespace n_UInitHighlights { // : UBlueprintAsyncActionBase
		constexpr auto OnSuccess = 0x30; // FScriptMulticastDelegate
		constexpr auto OnFailure = 0x40; // FScriptMulticastDelegate
	}

	namespace n_ABP_RPG7V2_Heat_2mag_Founders_C { // : ABP_RPG7V2_Heat_Founders_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
		constexpr auto MuzzleFlashRearComponent3P = 0x7b8; // UParticleSystemComponent*
		constexpr auto BackBlastComponent3P = 0x7c0; // UChildActorComponent*
		constexpr auto MuzzleFlashRearComponent1P = 0x7c8; // UParticleSystemComponent*
		constexpr auto SquadBlast = 0x7d0; // USQBlastComponent*
		constexpr auto BackBlastComponent1P = 0x7d8; // UChildActorComponent*
		constexpr auto BackblastSocket = 0x7e0; // FName
		constexpr auto BackblastEffect1P = 0x7e8; // UParticleSystem*
		constexpr auto BackblastEffect3P = 0x7f0; // UParticleSystem*
	}

	namespace n_ASQInstancedStaticMeshActor { // : AActor
		constexpr auto InstancedStaticMeshComponent = 0x248; // UInstancedStaticMeshComponent*
	}

	namespace n_ABP_L85A2AG36_ACOG_UGL_Smoke_C { // : ABP_L85A2AG36_ACOG_UGL_Parent_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UIntSerialization { // : UObject
		constexpr auto UnsignedInt16Variable = 0x28; // uint16
		constexpr auto UnsignedInt32Variable = 0x2c; // uint32
		constexpr auto UnsignedInt64Variable = 0x30; // uint64
		constexpr auto SignedInt8Variable = 0x38; // uint8
		constexpr auto SignedInt16Variable = 0x3a; // int16
		constexpr auto SignedInt64Variable = 0x40; // int64
		constexpr auto UnsignedInt8Variable = 0x48; // char
		constexpr auto SignedInt32Variable = 0x4c; // int
	}

	namespace n_ABP_AK74GP25_UGL_Smoke_Founders_C { // : ABP_AK74GP25_UGL_Smoke_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UParticleModuleBeamTarget { // : UParticleModuleBeamBase
		constexpr auto TargetMethod = 0x30; // Beam2SourceTargetMethod
		constexpr auto TargetName = 0x34; // FName
		constexpr auto Target = 0x40; // FRawDistributionVector
		constexpr auto bTargetAbsolute = 0x90; // char : 1
		constexpr auto bLockTarget = 0x90; // char : 1
		constexpr auto TargetTangentMethod = 0x94; // Beam2SourceTargetTangentMethod
		constexpr auto TargetTangent = 0x98; // FRawDistributionVector
		constexpr auto bLockTargetTangent = 0xe8; // char : 1
		constexpr auto TargetStrength = 0xf0; // FRawDistributionFloat
		constexpr auto bLockTargetStength = 0x128; // char : 1
		constexpr auto LockRadius = 0x12c; // float
	}

	namespace n_UParticleModuleRotationRate_Seeded { // : UParticleModuleRotationRate
		constexpr auto RandomSeedInfo = 0x68; // FParticleRandomSeedInfo
	}

	namespace n_USQRestriction_Delay { // : USQRestriction_Delay_Base
		constexpr auto InitialDelay = 0x58; // FTimespan
		constexpr auto NumberOfDelayedUsage = 0x60; // int
		constexpr auto Delay = 0x68; // FTimespan
		constexpr auto ApplyDelayOnAddUsage = 0x70; // bool
		constexpr auto ApplyDelayOnRemoveUsage = 0x71; // bool
	}

	namespace n_UMaterialExpressionTextureProperty { // : UMaterialExpression
		constexpr auto TextureObject = 0x40; // FExpressionInput
		constexpr auto Property = 0x54; // EMaterialExposedTextureProperty
	}

	namespace n_UBTDecorator_CheckGameplayTagsOnActor { // : UBTDecorator
		constexpr auto ActorToCheck = 0x68; // FBlackboardKeySelector
		constexpr auto TagsToMatch = 0x90; // EGameplayContainerMatchType
		constexpr auto GameplayTags = 0x98; // FGameplayTagContainer
		constexpr auto CachedDescription = 0xb8; // FString
	}

	namespace n_ABP_RPG7_Heat_C { // : ABP_RPG7_Parent_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
		constexpr auto MuzzleFlashRearComponent3P = 0x7b8; // UParticleSystemComponent*
		constexpr auto BackBlastComponent3P = 0x7c0; // UChildActorComponent*
		constexpr auto MuzzleFlashRearComponent1P = 0x7c8; // UParticleSystemComponent*
		constexpr auto SquadBlast = 0x7d0; // USQBlastComponent*
		constexpr auto BackBlastComponent1P = 0x7d8; // UChildActorComponent*
		constexpr auto BackblastSocket = 0x7e0; // FName
		constexpr auto BackblastEffect1P = 0x7e8; // UParticleSystem*
		constexpr auto BackblastEffect3P = 0x7f0; // UParticleSystem*
	}

	namespace n_UMaterialExpressionPerInstanceRandom { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UPacketHandlerProfileConfig { // : UObject
		constexpr auto Components = 0x28; // TArray<FString>
	}

	namespace n_ASQPlayerController_Menu { // : ASQPlayerController
		constexpr auto AuthorityTeam = 0x5a0; // ASQTeam*
		constexpr auto TeamState = 0x5a8; // ASQTeamState*
		constexpr auto PrivateTeamState = 0x5b0; // ASQTeamStatePrivate*
		constexpr auto AuthoritySquad = 0x5b8; // ASQSquad*
		constexpr auto SquadState = 0x5c0; // ASQSquadState*
		constexpr auto TeamPrivateSquadState = 0x5c8; // ASQSquadStatePrivateToTeam*
		constexpr auto StateConnection = 0x5d0; // USQCoreStateConnection*
		constexpr auto SpawnMenuPopupDelay = 0x5d8; // float
		constexpr auto LastSpawnedSoldier = 0x5e0; // ASQSoldier*
		constexpr auto AreCommunicationButtonsAllowed = 0x5e9; // bool
		constexpr auto bIsCrouchedDuringMenu = 0x5ea; // char : 1
		constexpr auto bIsPronedDuringMenu = 0x5ea; // char : 1
		constexpr auto IsWinner = 0x5eb; // bool
		constexpr auto TimeBecameIncapacitated = 0x5ec; // float
		constexpr auto SpawnDelayPenalties = 0x5f0; // float
		constexpr auto MaxSpawnDelay = 0x5f4; // float
		constexpr auto bWasInVehicle = 0x5f8; // bool
		constexpr auto AccessLevel = 0x5fc; // FSQBitFlag
		constexpr auto OnPlayerEnterVehicleEvent = 0x618; // FScriptMulticastDelegate
		constexpr auto OnPlayerExitVehicleEvent = 0x628; // FScriptMulticastDelegate
		constexpr auto OnRallyCreated = 0x638; // FScriptMulticastDelegate
		constexpr auto OnChatStarted = 0x650; // FScriptMulticastDelegate
		constexpr auto ToastWidgetClass = 0x660; // USQToastWidget*
		constexpr auto ChangeRoleNoAmmoText = 0x668; // FText
		constexpr auto AmmoBagNoAmmoText = 0x680; // FText
		constexpr auto MaxAmmoBagText = 0x698; // FText
		constexpr auto RearmFromAmmoBagText = 0x6b0; // FText
		constexpr auto RoleCannotPickupAmmoBagText = 0x6c8; // FText
		constexpr auto RearmFromVehicleNoAmmoText = 0x6e0; // FText
		constexpr auto RearmFromVehicleConfirmationText = 0x6f8; // FText
		constexpr auto RearmFromVehiclePromptText = 0x710; // FText
		constexpr auto CannotStartVehicleInStagingPhaseText = 0x728; // FText
		constexpr auto WalkingOriginRebaseThreshold = 0x740; // float
		constexpr auto RidingOriginRebaseThreshold = 0x744; // float
		constexpr auto FlyingOriginRebaseThreshold = 0x748; // float
		constexpr auto LeaveVehicleOriginRebaseThreshold = 0x74c; // float
		constexpr auto OriginRebaseFrequency = 0x750; // float
		constexpr auto MapMarkerArray = 0x758; // TArray<ASQMapMarker*>
		constexpr auto MapMarkerInputComponent = 0x768; // USQMapMarkerInputComponent*
		constexpr auto OnNewMarkerCreatedEvent = 0x770; // FScriptMulticastDelegate
		constexpr auto AdminStats = 0x780; // USQAdminStats*
		constexpr auto SpawnableActors = 0x788; // TArray<AActor*>
		constexpr auto ApprovalMessages = 0x798; // UDataTable*
		constexpr auto CurrentSeat = 0x7a0; // USQVehicleSeatComponent*
		constexpr auto AlwaysRenderPawnsDistance = 0x860; // float
		constexpr auto MusicAC = 0x898; // UAudioComponent*
		constexpr auto MusicSound = 0x8a0; // USoundBase*
		constexpr auto QueuedSystemMessages = 0x8a8; // TArray<FSQSystemHUDMessage>
		constexpr auto RefreshTypes = 0x8b8; // TArray<APawn*>
		constexpr auto DataGatheringComponent = 0x8c8; // USQDataGatheringComponent*
		constexpr auto CommanderInputComponent = 0x8d0; // USQCommanderInputComponent*
		constexpr auto BoundaryListener = 0x8d8; // USQBoundaryListener*
		constexpr auto OutOfMapBoundsKillTimestamp = 0x8e0; // float
		constexpr auto LastRefreshedPawn = 0x8e8; // APawn*
		constexpr auto SelectedSpawn = 0x8f0; // ASQGameSpawn*
		constexpr auto ApprovalEntries = 0x900; // TMap<uint32, FSQApprovalEntryRequest>
		constexpr auto ApprovalEntriesOnClient = 0x950; // TMap<uint32, FSQApprovalEntryClientDesc>
		constexpr auto PawnRenderDistance = 0x9c0; // float
		constexpr auto CachedPlayersToMute = 0x9f8; // TMap<FUniqueNetIdRepl, ASQPlayerState*>
		constexpr auto Networker = 0xa48; // USQMovementComponentNetworker*
		constexpr auto ActiveGhost = 0xa50; // ASQDeployable*
		constexpr auto IsDeployingItem = 0xa58; // bool
		constexpr auto VotingComponentClass = 0xa60; // USQVotingComponent*
		constexpr auto VotingComponent = 0xa68; // USQVotingComponent*
	}

	namespace n_UPlanarReflectionComponent { // : USceneCaptureComponent
		constexpr auto PreviewBox = 0x2b0; // UBoxComponent*
		constexpr auto NormalDistortionStrength = 0x2b8; // float
		constexpr auto PrefilterRoughness = 0x2bc; // float
		constexpr auto PrefilterRoughnessDistance = 0x2c0; // float
		constexpr auto ScreenPercentage = 0x2c4; // int
		constexpr auto ExtraFOV = 0x2c8; // float
		constexpr auto DistanceFromPlaneFadeStart = 0x2cc; // float
		constexpr auto DistanceFromPlaneFadeEnd = 0x2d0; // float
		constexpr auto DistanceFromPlaneFadeoutStart = 0x2d4; // float
		constexpr auto DistanceFromPlaneFadeoutEnd = 0x2d8; // float
		constexpr auto AngleFromPlaneFadeStart = 0x2dc; // float
		constexpr auto AngleFromPlaneFadeEnd = 0x2e0; // float
		constexpr auto bShowPreviewPlane = 0x2e4; // bool
		constexpr auto bRenderSceneTwoSided = 0x2e5; // bool
	}

	namespace n_USQSoundNodeWavePlayer { // : USoundNode
		constexpr auto SoundWave = 0x40; // USoundWave*
		constexpr auto bLooping = 0x48; // char : 1
		constexpr auto bRandomizeStartTime = 0x48; // char : 1
		constexpr auto StartMin = 0x4c; // float
		constexpr auto StartMax = 0x50; // float
	}

	namespace n_UBP_Fragmentation_DamageType_C { // : USQDamageType
		constexpr auto bCanCauseBleeding = 0x40; // bool
	}

	namespace n_USQJoinBeaconState { // : UObject
		constexpr auto PublicQueue = 0x28; // TArray<FSQServerSlot>
		constexpr auto ReservedQueue = 0x38; // TArray<FSQServerSlot>
		constexpr auto JoiningServerSlots = 0x48; // TArray<FSQServerSlot>
	}

	namespace n_UMaterialExpressionTextureSampleParameterSubUV { // : UMaterialExpressionTextureSampleParameter2D
		constexpr auto bBlend = 0x100; // char : 1
	}

	namespace n_UMovieSceneSequencePlayer { // : UObject
		constexpr auto OnPlay = 0x3b8; // FScriptMulticastDelegate
		constexpr auto OnPlayReverse = 0x3c8; // FScriptMulticastDelegate
		constexpr auto OnStop = 0x3d8; // FScriptMulticastDelegate
		constexpr auto OnPause = 0x3e8; // FScriptMulticastDelegate
		constexpr auto OnFinished = 0x3f8; // FScriptMulticastDelegate
		constexpr auto Status = 0x408; // EMovieScenePlayerStatus
		constexpr auto bReversePlayback = 0x40c; // char : 1
		constexpr auto Sequence = 0x410; // UMovieSceneSequence*
		constexpr auto StartTime = 0x418; // FFrameNumber
		constexpr auto DurationFrames = 0x41c; // int
		constexpr auto CurrentNumLoops = 0x420; // int
		constexpr auto PlaybackSettings = 0x438; // FMovieSceneSequencePlaybackSettings
		constexpr auto RootTemplateInstance = 0x450; // FMovieSceneRootEvaluationTemplateInstance
		constexpr auto NetSyncProps = 0x7b8; // FMovieSceneSequenceReplProperties
		constexpr auto PlaybackClient = 0x7c8; // TScriptInterface<Class>
	}

	namespace n_UNavArea_Obstacle { // : UNavArea
		constexpr auto DefaultCost = 0x30; // float
		constexpr auto FixedAreaEnteringCost = 0x34; // float
		constexpr auto DrawColor = 0x38; // FColor
		constexpr auto SupportedAgents = 0x3c; // FNavAgentSelector
		constexpr auto bSupportsAgent0 = 0x40; // char : 1
		constexpr auto bSupportsAgent1 = 0x40; // char : 1
		constexpr auto bSupportsAgent2 = 0x40; // char : 1
		constexpr auto bSupportsAgent3 = 0x40; // char : 1
		constexpr auto bSupportsAgent4 = 0x40; // char : 1
		constexpr auto bSupportsAgent5 = 0x40; // char : 1
		constexpr auto bSupportsAgent6 = 0x40; // char : 1
		constexpr auto bSupportsAgent7 = 0x40; // char : 1
		constexpr auto bSupportsAgent8 = 0x41; // char : 1
		constexpr auto bSupportsAgent9 = 0x41; // char : 1
		constexpr auto bSupportsAgent10 = 0x41; // char : 1
		constexpr auto bSupportsAgent11 = 0x41; // char : 1
		constexpr auto bSupportsAgent12 = 0x41; // char : 1
		constexpr auto bSupportsAgent13 = 0x41; // char : 1
		constexpr auto bSupportsAgent14 = 0x41; // char : 1
		constexpr auto bSupportsAgent15 = 0x41; // char : 1
	}

	namespace n_UMaterialExpressionLandscapeVisibilityMask { // : UMaterialExpression
		constexpr auto ExpressionGUID = 0x40; // FGuid
	}

	namespace n_USplineMeshComponent { // : UStaticMeshComponent
		constexpr auto SplineParams = 0x4a0; // FSplineMeshParams
		constexpr auto SplineUpDir = 0x4f8; // FVector
		constexpr auto bAllowSplineEditingPerInstance = 0x504; // char : 1
		constexpr auto bSmoothInterpRollScale = 0x504; // char : 1
		constexpr auto ForwardAxis = 0x508; // ESplineMeshAxis
		constexpr auto SplineBoundaryMin = 0x50c; // float
		constexpr auto SplineBoundaryMax = 0x510; // float
		constexpr auto BodySetup = 0x518; // UBodySetup*
		constexpr auto CachedMeshBodySetupGuid = 0x520; // FGuid
		constexpr auto bMeshDirty = 0x530; // char : 1
	}

	namespace n_UParticleModuleLifetimeBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x29; // char : 1
		constexpr auto LODDuplicate = 0x29; // char : 1
		constexpr auto bSupportsRandomSeed = 0x29; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x29; // char : 1
		constexpr auto LODValidity = 0x2c; // char
	}

	namespace n_APawn { // : AActor
		constexpr auto bUseControllerRotationPitch = 0x250; // char : 1
		constexpr auto bUseControllerRotationYaw = 0x250; // char : 1
		constexpr auto bUseControllerRotationRoll = 0x250; // char : 1
		constexpr auto bCanAffectNavigationGeneration = 0x250; // char : 1
		constexpr auto BaseEyeHeight = 0x254; // float
		constexpr auto AutoPossessPlayer = 0x258; // EAutoReceiveInput
		constexpr auto AutoPossessAI = 0x259; // EAutoPossessAI
		constexpr auto RemoteViewPitch = 0x25a; // char
		constexpr auto AIControllerClass = 0x260; // AController*
		constexpr auto PlayerState = 0x268; // APlayerState*
		constexpr auto LastHitBy = 0x278; // AController*
		constexpr auto Controller = 0x280; // AController*
		constexpr auto ControlInputVector = 0x28c; // FVector
		constexpr auto LastControlInputVector = 0x298; // FVector
	}

	namespace n_UARTrackedPoint { // : UARTrackedGeometry
		constexpr auto UniqueID = 0x28; // FGuid
		constexpr auto LocalToTrackingTransform = 0x40; // FTransform
		constexpr auto LocalToAlignedTrackingTransform = 0x70; // FTransform
		constexpr auto TrackingState = 0xa0; // EARTrackingState
		constexpr auto UnderlyingMesh = 0xb0; // UMRMeshComponent*
		constexpr auto ObjectClassification = 0xb8; // EARObjectClassification
		constexpr auto LastUpdateFrameNumber = 0xd0; // int
		constexpr auto DebugName = 0xe0; // FName
	}

	namespace n_UMaterialInstanceDynamic { // : UMaterialInstance
		constexpr auto PhysMaterial = 0x88; // UPhysicalMaterial*
		constexpr auto Parent = 0x90; // UMaterialInterface*
		constexpr auto bHasStaticPermutationResource = 0x9a; // char : 1
		constexpr auto bOverrideSubsurfaceProfile = 0x9a; // char : 1
		constexpr auto ScalarParameterValues = 0xa0; // TArray<FScalarParameterValue>
		constexpr auto VectorParameterValues = 0xb0; // TArray<FVectorParameterValue>
		constexpr auto TextureParameterValues = 0xc0; // TArray<FTextureParameterValue>
		constexpr auto FontParameterValues = 0xd0; // TArray<FFontParameterValue>
		constexpr auto BasePropertyOverrides = 0xe0; // FMaterialInstanceBasePropertyOverrides
		constexpr auto PermutationTextureReferences = 0xf8; // TArray<UObject*>
		constexpr auto StaticParameters = 0x108; // FStaticParameterSet
	}

	namespace n_APhysicsVolume { // : AVolume
		constexpr auto TerminalVelocity = 0x280; // float
		constexpr auto Priority = 0x284; // int
		constexpr auto FluidFriction = 0x288; // float
		constexpr auto bWaterVolume = 0x28c; // char : 1
		constexpr auto bPhysicsOnContact = 0x28c; // char : 1
	}

	namespace n_UMovieSceneEventSectionBase { // : UMovieSceneSection
		constexpr auto EvalOptions = 0x50; // FMovieSceneSectionEvalOptions
		constexpr auto Easing = 0x58; // FMovieSceneEasingSettings
		constexpr auto SectionRange = 0x90; // FMovieSceneFrameRange
		constexpr auto PreRollFrames = 0xa0; // FFrameNumber
		constexpr auto PostRollFrames = 0xa4; // FFrameNumber
		constexpr auto RowIndex = 0xa8; // int
		constexpr auto OverlapPriority = 0xac; // int
		constexpr auto bIsActive = 0xb0; // char : 1
		constexpr auto bIsLocked = 0xb0; // char : 1
		constexpr auto StartTime = 0xb4; // float
		constexpr auto EndTime = 0xb8; // float
		constexpr auto PrerollTime = 0xbc; // float
		constexpr auto PostrollTime = 0xc0; // float
		constexpr auto bIsInfinite = 0xc4; // char : 1
		constexpr auto bSupportsInfiniteRange = 0xc8; // bool
		constexpr auto BlendType = 0xc9; // FOptionalMovieSceneBlendType
	}

	namespace n_ABP_RPG7V2_Thermo_Founders_C { // : ABP_RPG7V2_Thermo_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
		constexpr auto MuzzleFlashRearComponent3P = 0x7b8; // UParticleSystemComponent*
		constexpr auto BackBlastComponent3P = 0x7c0; // UChildActorComponent*
		constexpr auto MuzzleFlashRearComponent1P = 0x7c8; // UParticleSystemComponent*
		constexpr auto SquadBlast = 0x7d0; // USQBlastComponent*
		constexpr auto BackBlastComponent1P = 0x7d8; // UChildActorComponent*
		constexpr auto BackblastSocket = 0x7e0; // FName
		constexpr auto BackblastEffect1P = 0x7e8; // UParticleSystem*
		constexpr auto BackblastEffect3P = 0x7f0; // UParticleSystem*
	}

	namespace n_ABP_L85A2_Classic_SUSAT_C { // : ABP_L85A2_Classic_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
		constexpr auto Scope = 0x7b8; // UStaticMeshComponent*
	}

	namespace n_ULandscapeSplineControlPoint { // : UObject
		constexpr auto Location = 0x28; // FVector
		constexpr auto Rotation = 0x34; // FRotator
		constexpr auto Width = 0x40; // float
		constexpr auto SideFalloff = 0x44; // float
		constexpr auto EndFalloff = 0x48; // float
		constexpr auto ConnectedSegments = 0x50; // TArray<FLandscapeSplineConnection>
		constexpr auto Points = 0x60; // TArray<FLandscapeSplineInterpPoint>
		constexpr auto Bounds = 0x70; // FBox
		constexpr auto LocalMeshComponent = 0x90; // UControlPointMeshComponent*
	}

	namespace n_UParticleModuleSizeScaleBySpeed { // : UParticleModuleSizeBase
		constexpr auto SpeedScale = 0x30; // FVector2D
		constexpr auto MaxScale = 0x38; // FVector2D
	}

	namespace n_UGameplayCueNotify_HitImpact { // : UGameplayCueNotify_Static
		constexpr auto Sound = 0x50; // USoundBase*
		constexpr auto ParticleSystem = 0x58; // UParticleSystem*
	}

	namespace n_USQAmbientAndReverbComponent { // : USceneComponent
		constexpr auto OnComponentBeginOverlap = 0x218; // FScriptMulticastDelegate
		constexpr auto OnComponentEndOverlap = 0x219; // FScriptMulticastDelegate
		constexpr auto ReverbEffectSettings = 0x220; // FSQReverbVolumeEffect
		constexpr auto SoundComponent = 0x240; // UAudioComponent*
		constexpr auto SoundEffect = 0x248; // USoundBase*
		constexpr auto AmbientFadeInTime = 0x250; // float
		constexpr auto AmbientFadeOutTime = 0x254; // float
	}

	namespace n_UGameUserSettings { // : UObject
		constexpr auto bUseVSync = 0x28; // bool
		constexpr auto bUseDynamicResolution = 0x29; // bool
		constexpr auto ResolutionSizeX = 0x78; // uint32
		constexpr auto ResolutionSizeY = 0x7c; // uint32
		constexpr auto LastUserConfirmedResolutionSizeX = 0x80; // uint32
		constexpr auto LastUserConfirmedResolutionSizeY = 0x84; // uint32
		constexpr auto WindowPosX = 0x88; // int
		constexpr auto WindowPosY = 0x8c; // int
		constexpr auto FullscreenMode = 0x90; // int
		constexpr auto LastConfirmedFullscreenMode = 0x94; // int
		constexpr auto PreferredFullscreenMode = 0x98; // int
		constexpr auto Version = 0x9c; // uint32
		constexpr auto AudioQualityLevel = 0xa0; // int
		constexpr auto LastConfirmedAudioQualityLevel = 0xa4; // int
		constexpr auto FrameRateLimit = 0xa8; // float
		constexpr auto DesiredScreenWidth = 0xb0; // int
		constexpr auto bUseDesiredScreenHeight = 0xb4; // bool
		constexpr auto DesiredScreenHeight = 0xb8; // int
		constexpr auto LastUserConfirmedDesiredScreenWidth = 0xbc; // int
		constexpr auto LastUserConfirmedDesiredScreenHeight = 0xc0; // int
		constexpr auto LastRecommendedScreenWidth = 0xc4; // float
		constexpr auto LastRecommendedScreenHeight = 0xc8; // float
		constexpr auto LastCPUBenchmarkResult = 0xcc; // float
		constexpr auto LastGPUBenchmarkResult = 0xd0; // float
		constexpr auto LastCPUBenchmarkSteps = 0xd8; // TArray<float>
		constexpr auto LastGPUBenchmarkSteps = 0xe8; // TArray<float>
		constexpr auto LastGPUBenchmarkMultiplier = 0xf8; // float
		constexpr auto bUseHDRDisplayOutput = 0xfc; // bool
		constexpr auto HDRDisplayOutputNits = 0x100; // int
		constexpr auto OnGameUserSettingsUINeedsUpdate = 0x108; // FScriptMulticastDelegate
	}

	namespace n_UBTComposite_SimpleParallel { // : UBTCompositeNode
		constexpr auto FinishMode = 0x90; // EBTParallelMode
	}

	namespace n_UWidgetTree { // : UObject
		constexpr auto RootWidget = 0x28; // UWidget*
	}

	namespace n_USQReplicationGraphNode_GridSpatialization2DEx { // : UReplicationGraphNode_GridSpatialization2D
		constexpr auto AvoidCullingConnections = 0x240; // TSet<UNetReplicationGraphConnection*>
	}

	namespace n_AOnlineBeaconHost { // : AOnlineBeacon
		constexpr auto ListenPort = 0x278; // int
		constexpr auto ClientActors = 0x280; // TArray<AOnlineBeaconClient*>
	}

	namespace n_UParticleModuleVectorFieldGlobal { // : UParticleModuleVectorFieldBase
		constexpr auto bOverrideGlobalVectorFieldTightness = 0x30; // char : 1
		constexpr auto GlobalVectorFieldScale = 0x34; // float
		constexpr auto GlobalVectorFieldTightness = 0x38; // float
	}

	namespace n_UBP_AK74GP25_UGL_Parent_StaticInfo_C { // : UBP_GenericWeapon_StaticInfo_C
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_UMaterialExpressionTwoSidedSign { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_AGameplayAbilityTargetActor_SingleLineTrace { // : AGameplayAbilityTargetActor_Trace
		constexpr auto MaxRange = 0x358; // float
		constexpr auto TraceProfile = 0x35c; // FCollisionProfileName
		constexpr auto bTraceAffectsAimPitch = 0x364; // bool
	}

	namespace n_UCableComponent { // : UMeshComponent
		constexpr auto bAttachStart = 0x430; // bool
		constexpr auto bAttachEnd = 0x431; // bool
		constexpr auto AttachEndTo = 0x438; // FComponentReference
		constexpr auto AttachEndToSocketName = 0x460; // FName
		constexpr auto EndLocation = 0x468; // FVector
		constexpr auto CableLength = 0x474; // float
		constexpr auto NumSegments = 0x478; // int
		constexpr auto SubstepTime = 0x47c; // float
		constexpr auto SolverIterations = 0x480; // int
		constexpr auto bEnableStiffness = 0x484; // bool
		constexpr auto bEnableCollision = 0x485; // bool
		constexpr auto CollisionFriction = 0x488; // float
		constexpr auto CableForce = 0x48c; // FVector
		constexpr auto CableGravityScale = 0x498; // float
		constexpr auto CableWidth = 0x49c; // float
		constexpr auto NumSides = 0x4a0; // int
		constexpr auto TileMaterial = 0x4a4; // float
	}

	namespace n_UGeometryCacheCodecRaw { // : UGeometryCacheCodecBase
		constexpr auto DummyProperty = 0x38; // int
	}

	namespace n_UParticleModuleLightBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x29; // char : 1
		constexpr auto LODDuplicate = 0x29; // char : 1
		constexpr auto bSupportsRandomSeed = 0x29; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x29; // char : 1
		constexpr auto LODValidity = 0x2c; // char
	}

	namespace n_ASQCoreStateConnectionActor { // : AInfo
		constexpr auto StateConnection = 0x248; // USQCoreStateConnection*
	}

	namespace n_UNavigationPath { // : UObject
		constexpr auto PathUpdatedNotifier = 0x28; // FScriptMulticastDelegate
		constexpr auto PathPoints = 0x38; // TArray<FVector>
		constexpr auto RecalculateOnInvalidation = 0x48; // ENavigationOptionFlag
	}

	namespace n_UHighlightsSummaryAsync { // : UBlueprintAsyncActionBase
		constexpr auto OnSuccess = 0x30; // FScriptMulticastDelegate
		constexpr auto OnFailure = 0x40; // FScriptMulticastDelegate
	}

	namespace n_URectLightComponent { // : ULocalLightComponent
		constexpr auto SourceWidth = 0x370; // float
		constexpr auto SourceHeight = 0x374; // float
		constexpr auto BarnDoorAngle = 0x378; // float
		constexpr auto BarnDoorLength = 0x37c; // float
		constexpr auto SourceTexture = 0x380; // UTexture*
	}

	namespace n_AAudioVolume { // : AVolume
		constexpr auto Priority = 0x280; // float
		constexpr auto AudioVolumeType = 0x284; // int
		constexpr auto bEnabled = 0x288; // char : 1
		constexpr auto Settings = 0x290; // FReverbSettings
		constexpr auto AmbientZoneSettings = 0x2b0; // FInteriorSettings
	}

	namespace n_UBP_Attachment_SVD_front_wood_C { // : USQWeaponAttachment_Scope
		constexpr auto MeshTransitionPercentage = 0x4b0; // float
		constexpr auto ADSMesh = 0x4b8; // UStaticMesh*
		constexpr auto ADSMeshTransform = 0x4c0; // FTransform
		constexpr auto NonADSMesh = 0x4f0; // UStaticMesh*
		constexpr auto NonADSMeshTransform = 0x500; // FTransform
		constexpr auto InToADSMeshTransitionSettings = 0x530; // TArray<FSQMeshTransitionSettings>
		constexpr auto OutFromADSMeshTransitionSettings = 0x540; // TArray<FSQMeshTransitionSettings>
	}

	namespace n_ABP_AK74MGP25_1P63_UGL_Desert_Parent_C { // : ABP_AK74MGP25_UGL_Desert_Parent_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UParticleSystemReplay { // : UObject
		constexpr auto ClipIDNumber = 0x28; // int
	}

	namespace n_UCheatManager { // : UObject
		constexpr auto DebugCameraControllerRef = 0x28; // ADebugCameraController*
		constexpr auto DebugCameraControllerClass = 0x30; // ADebugCameraController*
	}

	namespace n_UParticleModuleColor { // : UParticleModuleColorBase
		constexpr auto StartColor = 0x30; // FRawDistributionVector
		constexpr auto StartAlpha = 0x80; // FRawDistributionFloat
		constexpr auto bClampAlpha = 0xb8; // char : 1
	}

	namespace n_UMaterialExpressionLogarithm2 { // : UMaterialExpression
		constexpr auto X = 0x40; // FExpressionInput
	}

	namespace n_UDynamicEntryBoxBase { // : UWidget
		constexpr auto EntryBoxType = 0x108; // EDynamicBoxType
		constexpr auto EntrySpacing = 0x10c; // FVector2D
		constexpr auto SpacingPattern = 0x118; // TArray<FVector2D>
		constexpr auto EntrySizeRule = 0x128; // FSlateChildSize
		constexpr auto EntryHorizontalAlignment = 0x130; // EHorizontalAlignment
		constexpr auto EntryVerticalAlignment = 0x131; // EVerticalAlignment
		constexpr auto MaxElementSize = 0x134; // int
		constexpr auto EntryWidgetPool = 0x148; // FUserWidgetPool
	}

	namespace n_UDatasmithCineCameraActorTemplate { // : UDatasmithObjectTemplate
		constexpr auto LookatTrackingSettings = 0x30; // FDatasmithCameraLookatTrackingSettingsTemplate
	}

	namespace n_UVehicleWheel { // : UObject
		constexpr auto CollisionMesh = 0x28; // UStaticMesh*
		constexpr auto bDontCreateShape = 0x30; // bool
		constexpr auto bAutoAdjustCollisionSize = 0x31; // bool
		constexpr auto Offset = 0x34; // FVector
		constexpr auto ShapeRadius = 0x40; // float
		constexpr auto ShapeWidth = 0x44; // float
		constexpr auto Mass = 0x48; // float
		constexpr auto DampingRate = 0x4c; // float
		constexpr auto PhysMatDampingRateMultiplier = 0x50; // float
		constexpr auto SteerAngle = 0x54; // float
		constexpr auto bAffectedByHandbrake = 0x58; // bool
		constexpr auto TireType = 0x60; // UTireType*
		constexpr auto TireConfig = 0x68; // UTireConfig*
		constexpr auto LatStiffMaxLoad = 0x70; // float
		constexpr auto LatStiffValue = 0x74; // float
		constexpr auto LongStiffValue = 0x78; // float
		constexpr auto SuspensionForceOffset = 0x7c; // float
		constexpr auto SuspensionMaxRaise = 0x80; // float
		constexpr auto SuspensionMaxDrop = 0x84; // float
		constexpr auto SuspensionNaturalFrequency = 0x88; // float
		constexpr auto SuspensionDampingRatio = 0x8c; // float
		constexpr auto SweepType = 0x90; // EWheelSweepType
		constexpr auto MaxBrakeTorque = 0x94; // float
		constexpr auto MaxHandBrakeTorque = 0x98; // float
		constexpr auto VehicleSim = 0xa0; // UWheeledVehicleMovementComponent*
		constexpr auto WheelIndex = 0xa8; // int
		constexpr auto DebugLongSlip = 0xac; // float
		constexpr auto DebugLatSlip = 0xb0; // float
		constexpr auto DebugNormalizedTireLoad = 0xb4; // float
		constexpr auto DebugWheelTorque = 0xbc; // float
		constexpr auto DebugLongForce = 0xc0; // float
		constexpr auto DebugLatForce = 0xc4; // float
		constexpr auto Location = 0xc8; // FVector
		constexpr auto OldLocation = 0xd4; // FVector
		constexpr auto Velocity = 0xe0; // FVector
	}

	namespace n_UAITask_LockLogic { // : UAITask
		constexpr auto OwnerController = 0x68; // AAIController*
	}

	namespace n_ACameraBlockingVolume { // : AVolume
		constexpr auto BrushType = 0x248; // EBrushType
		constexpr auto BrushColor = 0x24c; // FColor
		constexpr auto PolyFlags = 0x250; // int
		constexpr auto bColored = 0x254; // char : 1
		constexpr auto bSolidWhenSelected = 0x254; // char : 1
		constexpr auto bPlaceableFromClassBrowser = 0x254; // char : 1
		constexpr auto bNotForClientOrServer = 0x254; // char : 1
		constexpr auto Brush = 0x258; // UModel*
		constexpr auto BrushComponent = 0x260; // UBrushComponent*
		constexpr auto bInManipulation = 0x268; // char : 1
		constexpr auto SavedSelections = 0x270; // TArray<FGeomSelection>
	}

	namespace n_UAnimNotify_PlayMontageNotify { // : UAnimNotify
		constexpr auto NotifyName = 0x38; // FName
	}

	namespace n_ABP_L85A2_ElcanLDS_C { // : ABP_L85A2_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
	}

	namespace n_UMaterialExpressionParticleColor { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_USQOrderLines { // : USQMapLattice
		constexpr auto bShowTeamOrderLines = 0x250; // bool
		constexpr auto SelfSquadLineThickness = 0x254; // float
		constexpr auto OtherSquadLineThickness = 0x258; // float
		constexpr auto MapMarkerManagerComponent = 0x260; // USQMapMarkerManagerComponent*
	}

	namespace n_UBTTask_RunBehavior { // : UBTTaskNode
		constexpr auto BehaviorAsset = 0x70; // UBehaviorTree*
	}

	namespace n_ABP_M4A1_M150_Foregrip_Tracer_Founders_C { // : ABP_M4A1_M150_Foregrip_Tracer_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UParticleModuleSubUVBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x29; // char : 1
		constexpr auto LODDuplicate = 0x29; // char : 1
		constexpr auto bSupportsRandomSeed = 0x29; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x29; // char : 1
		constexpr auto LODValidity = 0x2c; // char
	}

	namespace n_UAIDataProvider_QueryParams { // : UAIDataProvider
		constexpr auto ParamName = 0x28; // FName
		constexpr auto FloatValue = 0x30; // float
		constexpr auto IntValue = 0x34; // int
		constexpr auto BoolValue = 0x38; // bool
	}

	namespace n_UHapticFeedbackEffect_Buffer { // : UHapticFeedbackEffect_Base
		constexpr auto Amplitudes = 0x28; // TArray<char>
		constexpr auto SampleRate = 0x38; // int
	}

	namespace n_UInterpTrackVectorMaterialParam { // : UInterpTrackVectorBase
		constexpr auto TargetMaterials = 0x90; // TArray<UMaterialInterface*>
		constexpr auto ParamName = 0xa0; // FName
	}

	namespace n_UEnvQueryGenerator_Composite { // : UEnvQueryGenerator
		constexpr auto Generators = 0x50; // TArray<UEnvQueryGenerator*>
		constexpr auto bAllowDifferentItemTypes = 0x60; // char : 1
		constexpr auto bHasMatchingItemType = 0x60; // char : 1
		constexpr auto ForcedItemType = 0x68; // UEnvQueryItemType*
	}

	namespace n_UPawnAction_Sequence { // : UPawnAction
		constexpr auto ActionSequence = 0x98; // TArray<UPawnAction*>
		constexpr auto ChildFailureHandlingMode = 0xa8; // EPawnActionFailHandling
		constexpr auto RecentActionCopy = 0xb0; // UPawnAction*
	}

	namespace n_USQMapWidgetDeployableExplosive { // : USQMapWidgetDeployable
		constexpr auto ExplosiveType = 0x2b0; // ESQExplosiveType
	}

	namespace n_UBlackboardKeyType_Enum { // : UBlackboardKeyType
		constexpr auto EnumType = 0x30; // UEnum*
		constexpr auto EnumName = 0x38; // FString
		constexpr auto bIsEnumNameValid = 0x48; // char : 1
	}

	namespace n_UViewsterRequestIssuesAction { // : UBlueprintAsyncActionBase
		constexpr auto OnSuccess = 0x30; // FScriptMulticastDelegate
		constexpr auto OnFailure = 0x40; // FScriptMulticastDelegate
	}

	namespace n_ABP_AK74GP25_UGL_HE_C { // : ABP_AK74GP25_UGL_Parent_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UAnimSet { // : UObject
		constexpr auto bAnimRotationOnly = 0x28; // char : 1
		constexpr auto TrackBoneNames = 0x30; // TArray<FName>
		constexpr auto LinkupCache = 0x40; // TArray<FAnimSetMeshLinkup>
		constexpr auto BoneUseAnimTranslation = 0x50; // TArray<char>
		constexpr auto ForceUseMeshTranslation = 0x60; // TArray<char>
		constexpr auto UseTranslationBoneNames = 0x70; // TArray<FName>
		constexpr auto ForceMeshTranslationBoneNames = 0x80; // TArray<FName>
		constexpr auto PreviewSkelMeshName = 0x90; // FName
		constexpr auto BestRatioSkelMeshName = 0x98; // FName
	}

	namespace n_UBP_MaterialEffects_C { // : USQPhysicalMaterialEffects
		constexpr auto Effects = 0x28; // TMap<USQPhysicalMaterial*, FSQEffectsSet>
	}

	namespace n_USimpleConstructionScript { // : UObject
		constexpr auto RootNodes = 0x28; // TArray<USCS_Node*>
		constexpr auto AllNodes = 0x38; // TArray<USCS_Node*>
		constexpr auto DefaultSceneRootNode = 0x48; // USCS_Node*
	}

	namespace n_UBTTask_MoveTo { // : UBTTask_BlackboardBase
		constexpr auto AcceptableRadius = 0x98; // float
		constexpr auto FilterClass = 0xa0; // UNavigationQueryFilter*
		constexpr auto ObservedBlackboardValueTolerance = 0xa8; // float
		constexpr auto bObserveBlackboardValue = 0xac; // char : 1
		constexpr auto bAllowStrafe = 0xac; // char : 1
		constexpr auto bAllowPartialPath = 0xac; // char : 1
		constexpr auto bTrackMovingGoal = 0xac; // char : 1
		constexpr auto bProjectGoalLocation = 0xac; // char : 1
		constexpr auto bReachTestIncludesAgentRadius = 0xac; // char : 1
		constexpr auto bReachTestIncludesGoalRadius = 0xac; // char : 1
		constexpr auto bStopOnOverlap = 0xac; // char : 1
		constexpr auto bStopOnOverlapNeedsUpdate = 0xad; // char : 1
	}

	namespace n_ABP_AK74_Recruit_C { // : ABP_AK74_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_ABP_L85A2_SUSAT_Tracer_C { // : ABP_L85A2_SUSAT_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
		constexpr auto Scope = 0x7b8; // UStaticMeshComponent*
	}

	namespace n_UMaterialExpressionFmod { // : UMaterialExpression
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_UAnimCompress_RemoveLinearKeys { // : UAnimCompress
		constexpr auto MaxPosDiff = 0x50; // float
		constexpr auto MaxAngleDiff = 0x54; // float
		constexpr auto MaxScaleDiff = 0x58; // float
		constexpr auto MaxEffectorDiff = 0x5c; // float
		constexpr auto MinEffectorDiff = 0x60; // float
		constexpr auto EffectorDiffSocket = 0x64; // float
		constexpr auto ParentKeyScale = 0x68; // float
		constexpr auto bRetarget = 0x6c; // char : 1
		constexpr auto bActuallyFilterLinearKeys = 0x6c; // char : 1
		constexpr auto bOptimizeForForwardPlayback = 0x6c; // char : 1
		constexpr auto bUseDecompression = 0x6c; // char : 1
		constexpr auto bUseMultithreading = 0x6c; // char : 1
	}

	namespace n_UParticleModuleRotationOverLifetime { // : UParticleModuleRotationBase
		constexpr auto RotationOverLife = 0x30; // FRawDistributionFloat
		constexpr auto Scale = 0x68; // char : 1
	}

	namespace n_UBP_M4M203_M150_UGL_Parent_StaticInfo_C { // : UBP_M4M203_UGL_Parent_StaticInfo_C
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_ABP_AK74MGP25_1P78_UGL_Smoke_Red_C { // : ABP_AK74MGP25_1P78_UGL_Smoke_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UAbilityTask_ApplyRootMotionMoveToActorForce { // : UAbilityTask_ApplyRootMotion_Base
		constexpr auto OnFinished = 0xb8; // FScriptMulticastDelegate
		constexpr auto StartLocation = 0xd0; // FVector
		constexpr auto TargetLocation = 0xdc; // FVector
		constexpr auto TargetActor = 0xe8; // AActor*
		constexpr auto TargetLocationOffset = 0xf0; // FVector
		constexpr auto OffsetAlignment = 0xfc; // ERootMotionMoveToActorTargetOffsetType
		constexpr auto Duration = 0x100; // float
		constexpr auto bDisableDestinationReachedInterrupt = 0x104; // bool
		constexpr auto bSetNewMovementMode = 0x105; // bool
		constexpr auto NewMovementMode = 0x106; // EMovementMode
		constexpr auto bRestrictSpeedToExpected = 0x107; // bool
		constexpr auto PathOffsetCurve = 0x108; // UCurveVector*
		constexpr auto TimeMappingCurve = 0x110; // UCurveFloat*
		constexpr auto TargetLerpSpeedHorizontalCurve = 0x118; // UCurveFloat*
		constexpr auto TargetLerpSpeedVerticalCurve = 0x120; // UCurveFloat*
	}

	namespace n_UPendingNetGame { // : UObject
		constexpr auto NetDriver = 0x30; // UNetDriver*
		constexpr auto DemoNetDriver = 0x38; // UDemoNetDriver*
	}

	namespace n_UPlaneReflectionCaptureComponent { // : UReflectionCaptureComponent
		constexpr auto InfluenceRadiusScale = 0x290; // float
		constexpr auto PreviewInfluenceRadius = 0x298; // UDrawSphereComponent*
		constexpr auto PreviewCaptureBox = 0x2a0; // UBoxComponent*
	}

	namespace n_UInterpTrackInstFloatParticleParam { // : UInterpTrackInst
		constexpr auto ResetFloat = 0x28; // float
	}

	namespace n_ULevelStreamingDynamic { // : ULevelStreaming
		constexpr auto bInitiallyLoaded = 0x148; // char : 1
		constexpr auto bInitiallyVisible = 0x148; // char : 1
	}

	namespace n_UBTTask_MakeNoise { // : UBTTaskNode
		constexpr auto Loudnes = 0x70; // float
	}

	namespace n_UPoseAsset { // : UAnimationAsset
		constexpr auto PoseContainer = 0x80; // FPoseDataContainer
		constexpr auto bAdditivePose = 0x110; // bool
		constexpr auto BasePoseIndex = 0x114; // int
		constexpr auto RetargetSource = 0x118; // FName
	}

	namespace n_UPropertyBinding { // : UObject
		constexpr auto SourceObject = 0x28; // TWeakObjectPtr<UObject>
		constexpr auto SourcePath = 0x30; // FDynamicPropertyPath
		constexpr auto DestinationProperty = 0x60; // FName
	}

	namespace n_UMovieSceneColorSection { // : UMovieSceneSection
		constexpr auto RedCurve = 0xe0; // FMovieSceneFloatChannel
		constexpr auto GreenCurve = 0x180; // FMovieSceneFloatChannel
		constexpr auto BlueCurve = 0x220; // FMovieSceneFloatChannel
		constexpr auto AlphaCurve = 0x2c0; // FMovieSceneFloatChannel
	}

	namespace n_ABP_L85A2AG36_UGL_DarkEarth_Parent_C { // : ABP_Weapon2_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UMaterialExpressionParticleDirection { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_ASQNoDeployZone { // : ATriggerBox
		constexpr auto UseBlacklisting = 0x250; // bool
		constexpr auto AllowedDeployableClasses = 0x258; // TArray<ASQDeployable*>
		constexpr auto DisallowedDeployableClasses = 0x268; // TArray<ASQDeployable*>
	}

	namespace n_UPhysicsHandleComponent { // : UActorComponent
		constexpr auto GrabbedComponent = 0xd8; // UPrimitiveComponent*
		constexpr auto bSoftAngularConstraint = 0xe8; // char : 1
		constexpr auto bSoftLinearConstraint = 0xe8; // char : 1
		constexpr auto bInterpolateTarget = 0xe8; // char : 1
		constexpr auto LinearDamping = 0xec; // float
		constexpr auto LinearStiffness = 0xf0; // float
		constexpr auto AngularDamping = 0xf4; // float
		constexpr auto AngularStiffness = 0xf8; // float
		constexpr auto InterpolationSpeed = 0x160; // float
	}

	namespace n_UBTTask_RunBehaviorDynamic { // : UBTTaskNode
		constexpr auto InjectionTag = 0x70; // FGameplayTag
		constexpr auto DefaultBehaviorAsset = 0x78; // UBehaviorTree*
		constexpr auto BehaviorAsset = 0x80; // UBehaviorTree*
	}

	namespace n_UInterpTrackInstAnimControl { // : UInterpTrackInst
		constexpr auto LastUpdatePosition = 0x28; // float
	}

	namespace n_UWindDirectionalSourceComponent { // : USceneComponent
		constexpr auto Strength = 0x218; // float
		constexpr auto Speed = 0x21c; // float
		constexpr auto MinGustAmount = 0x220; // float
		constexpr auto MaxGustAmount = 0x224; // float
		constexpr auto Radius = 0x228; // float
		constexpr auto bPointWind = 0x22c; // char : 1
	}

	namespace n_UBlackboardComponent { // : UActorComponent
		constexpr auto BrainComp = 0xd8; // UBrainComponent*
		constexpr auto BlackboardAsset = 0xe0; // UBlackboardData*
		constexpr auto KeyInstances = 0x108; // TArray<UBlackboardKeyType*>
	}

	namespace n_UMovieSceneEasingExternalCurve { // : UObject
		constexpr auto Curve = 0x30; // UCurveFloat*
	}

	namespace n_UDistributionFloatParameterBase { // : UDistributionFloatConstant
		constexpr auto ParameterName = 0x40; // FName
		constexpr auto MinInput = 0x48; // float
		constexpr auto MaxInput = 0x4c; // float
		constexpr auto MinOutput = 0x50; // float
		constexpr auto MaxOutput = 0x54; // float
		constexpr auto ParamMode = 0x58; // DistributionParamMode
	}

	namespace n_UGameplayAbility_Montage { // : UGameplayAbility
		constexpr auto MontageToPlay = 0x400; // UAnimMontage*
		constexpr auto PlayRate = 0x408; // float
		constexpr auto SectionName = 0x40c; // FName
		constexpr auto GameplayEffectClassesWhileAnimating = 0x418; // TArray<UGameplayEffect*>
		constexpr auto GameplayEffectsWhileAnimating = 0x428; // TArray<UGameplayEffect*>
	}

	namespace n_ABP_AK74_C { // : ABP_GenericRifle_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_URequestPermissionsAsync { // : UBlueprintAsyncActionBase
		constexpr auto OnSuccess = 0x30; // FScriptMulticastDelegate
		constexpr auto OnFailure = 0x40; // FScriptMulticastDelegate
	}

	namespace n_UReplicationGraphNode_DynamicSpatialFrequency { // : UReplicationGraphNode_ActorList
		constexpr auto AllChildNodes = 0x28; // TArray<UReplicationGraphNode*>
	}

	namespace n_UBTDecorator_DoesPathExist { // : UBTDecorator
		constexpr auto BlackboardKeyA = 0x68; // FBlackboardKeySelector
		constexpr auto BlackboardKeyB = 0x90; // FBlackboardKeySelector
		constexpr auto bUseSelf = 0xb8; // char : 1
		constexpr auto PathQueryType = 0xbc; // EPathExistanceQueryType
		constexpr auto FilterClass = 0xc0; // UNavigationQueryFilter*
	}

	namespace n_UFieldNodeFloat { // : UFieldNodeBase
		constexpr auto PrimaryComponentTick = 0x30; // FActorComponentTickFunction
		constexpr auto ComponentTags = 0x88; // TArray<FName>
		constexpr auto AssetUserData = 0x98; // TArray<UAssetUserData*>
		constexpr auto bReplicates = 0xac; // char : 1
		constexpr auto bNetAddressable = 0xac; // char : 1
		constexpr auto bAutoActivate = 0xad; // char : 1
		constexpr auto bIsActive = 0xae; // char : 1
		constexpr auto bEditableWhenInherited = 0xae; // char : 1
		constexpr auto bCanEverAffectNavigation = 0xae; // char : 1
		constexpr auto bIsEditorOnly = 0xae; // char : 1
		constexpr auto CreationMethod = 0xb0; // EComponentCreationMethod
		constexpr auto OnComponentActivated = 0xb1; // FScriptMulticastDelegate
		constexpr auto OnComponentDeactivated = 0xb2; // FScriptMulticastDelegate
		constexpr auto UCSModifiedProperties = 0xb8; // TArray<FSimpleMemberReference>
	}

	namespace n_UInterpTrackInstVectorProp { // : UInterpTrackInstProperty
		constexpr auto ResetVector = 0x40; // FVector
	}

	namespace n_UBlackboardKeyType_NativeEnum { // : UBlackboardKeyType
		constexpr auto EnumName = 0x30; // FString
		constexpr auto EnumType = 0x40; // UEnum*
	}

	namespace n_UMaterialExpressionVectorNoise { // : UMaterialExpression
		constexpr auto Position = 0x40; // FExpressionInput
		constexpr auto NoiseFunction = 0x54; // EVectorNoiseFunction
		constexpr auto Quality = 0x58; // int
		constexpr auto bTiling = 0x5c; // char : 1
		constexpr auto TileSize = 0x60; // uint32
	}

	namespace n_UARTrackedImage { // : UARTrackedGeometry
		constexpr auto DetectedImage = 0xe8; // UARCandidateImage*
		constexpr auto EstimatedSize = 0xf0; // FVector2D
	}

	namespace n_USQItemStaticInfo { // : UObject
		constexpr auto BaseWeaponMontage = 0x28; // UAnimMontage*
		constexpr auto Base1pMontage = 0x30; // UAnimMontage*
		constexpr auto Base3pMontage = 0x38; // UAnimMontage*
		constexpr auto SprintToProne3p = 0x40; // UAnimSequence*
		constexpr auto StandToProne3p = 0x48; // UAnimSequence*
		constexpr auto ProneToStand3p = 0x50; // UAnimSequence*
		constexpr auto CrouchToProne3p = 0x58; // UAnimSequence*
		constexpr auto ProneToCrouch3p = 0x60; // UAnimSequence*
		constexpr auto AO1D_StandPitch = 0x68; // UBlendSpace1D*
		constexpr auto AO1D_CrouchPitch = 0x70; // UBlendSpace1D*
		constexpr auto AO1D_PronePitch = 0x78; // UBlendSpace1D*
		constexpr auto AO_BipodStandCrouchPitch = 0x80; // UBlendSpace*
		constexpr auto AO1D_StandYawSF = 0x88; // UAnimSequence*
		constexpr auto AO1D_CrouchYawSF = 0x90; // UAnimSequence*
		constexpr auto AO1D_ProneYawSF = 0x98; // UAnimSequence*
		constexpr auto StandTurnRight = 0xa0; // UAnimSequence*
		constexpr auto StandTurnLeft = 0xa8; // UAnimSequence*
		constexpr auto CrouchTurnRight = 0xb0; // UAnimSequence*
		constexpr auto CrouchTurnLeft = 0xb8; // UAnimSequence*
		constexpr auto ProneTurnRight = 0xc0; // UAnimSequence*
		constexpr auto ProneTurnLeft = 0xc8; // UAnimSequence*
		constexpr auto ReloadWeaponMontage = 0xd0; // UAnimMontage*
		constexpr auto Reload1pMontage = 0xd8; // UAnimMontage*
		constexpr auto Reload3pMontage = 0xe0; // UAnimMontage*
		constexpr auto bCheckCurrentMagazineForEquip = 0xe8; // bool
		constexpr auto bCheckCurrentMagazineForUnequip = 0xe9; // bool
		constexpr auto EmptyEquipWeaponMontage = 0xf0; // UAnimMontage*
		constexpr auto EmptyEquip1pMontage = 0xf8; // UAnimMontage*
		constexpr auto EmptyEquip3pMontage = 0x100; // UAnimMontage*
		constexpr auto EquipWeaponMontage = 0x108; // UAnimMontage*
		constexpr auto Equip1pMontage = 0x110; // UAnimMontage*
		constexpr auto Equip3pMontage = 0x118; // UAnimMontage*
		constexpr auto EmptyUnequipWeaponMontage = 0x120; // UAnimMontage*
		constexpr auto EmptyUnequip1pMontage = 0x128; // UAnimMontage*
		constexpr auto EmptyUnequip3pMontage = 0x130; // UAnimMontage*
		constexpr auto UnequipWeaponMontage = 0x138; // UAnimMontage*
		constexpr auto Unequip1pMontage = 0x140; // UAnimMontage*
		constexpr auto Unequip3pMontage = 0x148; // UAnimMontage*
		constexpr auto BobbingSprint1pMontage = 0x150; // UAnimMontage*
		constexpr auto BobbingEndSprint1pMontage = 0x158; // UAnimMontage*
		constexpr auto BobbingAddSprint1pMontage = 0x160; // UAnimMontage*
		constexpr auto BS1D_3pStandSprintType = 0x168; // UBlendSpace1D*
		constexpr auto BS1D_3pCrouchSprintType = 0x170; // UBlendSpace1D*
		constexpr auto SprintStop3p = 0x178; // UAnimSequence*
		constexpr auto BS_3pStandJogType = 0x180; // UBlendSpace*
		constexpr auto BS_3pStandWalkType = 0x188; // UBlendSpace*
		constexpr auto BS_3pCrouchWalkType = 0x190; // UBlendSpace*
		constexpr auto BS1D_3pProneCrawlType = 0x198; // UBlendSpace1D*
		constexpr auto StandStopMove = 0x1a0; // UAnimSequence*
		constexpr auto CrouchStopMove = 0x1a8; // UAnimSequence*
		constexpr auto BobbingMove1pMontage = 0x1b0; // UAnimMontage*
		constexpr auto Idle1pMontage = 0x1b8; // UAnimMontage*
		constexpr auto LeanLeftBegin3pMontage = 0x1c0; // UAnimMontage*
		constexpr auto LeanLeftEnd3pMontage = 0x1c8; // UAnimMontage*
		constexpr auto LeanRightBegin3pMontage = 0x1d0; // UAnimMontage*
		constexpr auto LeanRightEnd3pMontage = 0x1d8; // UAnimMontage*
		constexpr auto StandLeanLeftShuffle = 0x1e0; // UAnimSequence*
		constexpr auto StandLeanRightShuffle = 0x1e8; // UAnimSequence*
		constexpr auto CrouchLeanLeftShuffle = 0x1f0; // UAnimSequence*
		constexpr auto CrouchLeanRightShuffle = 0x1f8; // UAnimSequence*
		constexpr auto Lowered1pMontage = 0x200; // UAnimMontage*
		constexpr auto Lowered3pMontage = 0x208; // UAnimMontage*
		constexpr auto LoweredCrouch3pMontage = 0x210; // UAnimMontage*
		constexpr auto MoveBobbingEndLoopSectionNames = 0x218; // FSQMontageSectionNames
		constexpr auto SprintBobbingEndLoopSectionNames = 0x240; // FSQMontageSectionNames
		constexpr auto BobbingProneMoveType = 0x268; // UBlendSpaceBase*
		constexpr auto ProneMoveTypeAdditiveReference = 0x270; // UAnimSequence*
		constexpr auto OutProneMoveType = 0x278; // UAnimSequence*
		constexpr auto OutProneMoveTypeNonadditive = 0x280; // UAnimSequence*
		constexpr auto LeftHandWeaponIkAlpha = 0x288; // float
		constexpr auto RightHand3pWeaponIkAlpha = 0x28c; // float
		constexpr auto JogPlayRateFactorMinRange = 0x290; // float
		constexpr auto SprintPlayRateFactorMinRange = 0x294; // float
		constexpr auto SprintBlendFactorMinRange = 0x298; // float
		constexpr auto SprintBlendSpeedInterpSpeed = 0x29c; // float
		constexpr auto SprintStaticPose = 0x2a0; // UAnimSequence*
		constexpr auto LoweringBlendOutTime = 0x2a8; // float
		constexpr auto IdleBlendOutTime = 0x2ac; // float
		constexpr auto BoredMontage = 0x2b0; // TArray<FSQBoredMontageSet>
		constexpr auto BoredMaxFrequency = 0x2c0; // float
		constexpr auto BoredAbortBlendOutTime = 0x2c4; // float
		constexpr auto MutualWeapons = 0x2c8; // TArray<FSQMutualWeapon>
		constexpr auto EmptyUnequipDuration = 0x2d8; // float
		constexpr auto EmptyEquipDuration = 0x2dc; // float
		constexpr auto bUseAutoLowering = 0x2e0; // bool
		constexpr auto LoweringTimer = 0x2e4; // float
		constexpr auto ItemCollisionDistance = 0x2e8; // float
		constexpr auto bReturnToADSAfterItemCollision = 0x2ec; // bool
		constexpr auto FireShake = 0x2f0; // UCameraShake*
		constexpr auto StandLoc = 0x2f8; // FVector
		constexpr auto CrouchLoc = 0x304; // FVector
		constexpr auto ProneLoc = 0x310; // FVector
		constexpr auto BipodLoc = 0x31c; // FVector
		constexpr auto StandLocBlendTime = 0x328; // float
		constexpr auto OffsetLineOfFire = 0x32c; // FRotator
		constexpr auto StandLeanLeftRootOffset = 0x338; // FVector
		constexpr auto StandLeanLeftWeaponRotation = 0x344; // FRotator
		constexpr auto StandLeanLeftCameraRotation = 0x350; // FRotator
		constexpr auto StandLeanRightRootOffset = 0x35c; // FVector
		constexpr auto StandLeanRightWeaponRotation = 0x368; // FRotator
		constexpr auto StandLeanRightCameraRotation = 0x374; // FRotator
		constexpr auto CrouchLeanLeftRootOffset = 0x380; // FVector
		constexpr auto CrouchLeanLeftWeaponRotation = 0x38c; // FRotator
		constexpr auto CrouchLeanLeftCameraRotation = 0x398; // FRotator
		constexpr auto CrouchLeanRightRootOffset = 0x3a4; // FVector
		constexpr auto CrouchLeanRightWeaponRotation = 0x3b0; // FRotator
		constexpr auto CrouchLeanRightCameraRotation = 0x3bc; // FRotator
		constexpr auto ProneLeanLeftRootOffset = 0x3c8; // FVector
		constexpr auto ProneLeanLeftWeaponRotation = 0x3d4; // FRotator
		constexpr auto ProneLeanLeftCameraRotation = 0x3e0; // FRotator
		constexpr auto ProneLeanRightRootOffset = 0x3ec; // FVector
		constexpr auto ProneLeanRightWeaponRotation = 0x3f8; // FRotator
		constexpr auto ProneLeanRightCameraRotation = 0x404; // FRotator
		constexpr auto FpvLowerRootBoneOffset = 0x410; // FVector
		constexpr auto FpvTorsoCameraOffset = 0x41c; // FVector
		constexpr auto WeaponSpringSide = 0x428; // int
		constexpr auto WeaponSpringStiffness = 0x42c; // float
		constexpr auto WeaponSpringCriticalDampingFactor = 0x430; // float
		constexpr auto WeaponSpringMass = 0x434; // float
		constexpr auto WeaponSpringFactor2 = 0x438; // float
		constexpr auto WeaponMeshSpringLocDelayFactor = 0x43c; // float
		constexpr auto WeaponMeshSpringRotDelayFactor = 0x440; // float
		constexpr auto WeaponSpringClamp = 0x444; // float
		constexpr auto WeaponSpringTurnSpeedToFullIntensity = 0x448; // float
		constexpr auto StrafeSpringRotator = 0x44c; // FRotator
		constexpr auto StrafeSpringVector = 0x458; // FVector
		constexpr auto AdsStrafeSpringRotator = 0x464; // FRotator
		constexpr auto SoundsSocket = 0x470; // FName
		constexpr auto FireSound1P = 0x478; // USoundCue*
		constexpr auto FireSound3P = 0x480; // USoundCue*
		constexpr auto ReloadSound1P = 0x488; // USoundCue*
		constexpr auto ReloadSound3P = 0x490; // USoundCue*
		constexpr auto DryReloadSound1P = 0x498; // USoundCue*
		constexpr auto DryReloadSound3P = 0x4a0; // USoundCue*
		constexpr auto EquipSound1P = 0x4a8; // USoundCue*
		constexpr auto EquipSound3P = 0x4b0; // USoundCue*
		constexpr auto UnequipSound1P = 0x4b8; // USoundCue*
		constexpr auto UnequipSound3P = 0x4c0; // USoundCue*
		constexpr auto IntoForcedLoweringSound = 0x4c8; // USoundBase*
		constexpr auto OutOfForcedLoweringSound = 0x4d0; // USoundBase*
		constexpr auto bUsableInMainBase = 0x4d8; // bool
		constexpr auto ItemUsageNullifiedText = 0x4e0; // FText
	}

	namespace n_UPhysicsConstraintTemplate { // : UObject
		constexpr auto DefaultInstance = 0x28; // FConstraintInstance
		constexpr auto ProfileHandles = 0x1e0; // TArray<FPhysicsConstraintProfileHandle>
		constexpr auto DefaultProfile = 0x1f0; // FConstraintProfileProperties
	}

	namespace n_ASQBoundary { // : AActor
		constexpr auto XYBoundary = 0x248; // USplineComponent*
		constexpr auto bXYBoundaryTangetsInwards = 0x250; // bool
		constexpr auto BoundaryMaskSizeX = 0x254; // int
		constexpr auto BoundaryMaskSizeY = 0x258; // int
		constexpr auto BoundaryMask = 0x260; // UTexture2D*
		constexpr auto CeilingHeight = 0x268; // float
		constexpr auto FloorHeight = 0x26c; // float
		constexpr auto CheckDelaySeconds = 0x270; // float
		constexpr auto bDefaultToInside = 0x274; // bool
		constexpr auto bComplexCheck = 0x275; // bool
		constexpr auto ListenerDatas = 0x278; // TMap<USQBoundaryListener*, FSQBoundaryListenerData>
		constexpr auto BoundaryMaskData = 0x2f0; // TArray<char>
	}

	namespace n_UMovieSceneAudioTrack { // : UMovieSceneNameableTrack
		constexpr auto AudioSections = 0x58; // TArray<UMovieSceneSection*>
	}

	namespace n_UNetworkSettings { // : UDeveloperSettings
		constexpr auto bVerifyPeer = 0x38; // char : 1
		constexpr auto bEnableMultiplayerWorldOriginRebasing = 0x38; // char : 1
		constexpr auto MaxRepArraySize = 0x3c; // int
		constexpr auto MaxRepArrayMemory = 0x40; // int
	}

	namespace n_USQProjectileRootComponent { // : USphereComponent
		constexpr auto SphereRadius = 0x420; // float
	}

	namespace n_USQSquadStateDataSpawnPoint { // : USQSquadStateMapData
		constexpr auto OwningGameSpawn = 0x180; // ASQGameSpawn*
		constexpr auto SpawnPointType = 0x188; // ESQSpawnPointType
		constexpr auto bSieged = 0x18c; // char : 1
		constexpr auto bSpawningEnabled = 0x18c; // char : 1
		constexpr auto ActivatedTimeStamp = 0x190; // float
	}

	namespace n_ABP_M4M203_Rifle_M150_Founders_C { // : ABP_M4M203_Rifle_M150_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
		constexpr auto LScale = 0x7b8; // FVector
	}

	namespace n_UNullNavSysConfig { // : UNavigationSystemConfig
		constexpr auto NavigationSystemClass = 0x28; // FSoftClassPath
		constexpr auto bIsOverriden = 0x40; // char : 1
	}

	namespace n_UWidgetNavigation { // : UObject
		constexpr auto Up = 0x28; // FWidgetNavigationData
		constexpr auto Down = 0x4c; // FWidgetNavigationData
		constexpr auto Left = 0x70; // FWidgetNavigationData
		constexpr auto Right = 0x94; // FWidgetNavigationData
		constexpr auto Next = 0xb8; // FWidgetNavigationData
		constexpr auto Previous = 0xdc; // FWidgetNavigationData
	}

	namespace n_ASQGameSpawn { // : APlayerStart
		constexpr auto PreSiegedStateChangedSignal = 0x280; // FScriptMulticastDelegate
		constexpr auto OnSiegedStateChangedSignal = 0x290; // FScriptMulticastDelegate
		constexpr auto OnActivatedTimeStampChangedSignal = 0x2a0; // FScriptMulticastDelegate
		constexpr auto PreSpawningEnabledStateChanged = 0x2b0; // FScriptMulticastDelegate
		constexpr auto OnSpawningEnabledStateChanged = 0x2c0; // FScriptMulticastDelegate
		constexpr auto RespawnDelay = 0x2d0; // float
		constexpr auto RespawnIncrease = 0x2d4; // float
		constexpr auto SecondsOfSpawnProtection = 0x2d8; // float
		constexpr auto SpawnIconComponentClass = 0x2e0; // USQMapIconComponent*
		constexpr auto MaxTimeIntervalBetweenSpawnPointLocationEvaluations = 0x2e8; // float
		constexpr auto bSpawningEnabled = 0x2ec; // bool
		constexpr auto bSieged = 0x2ed; // bool
		constexpr auto ActivatedTimeStamp = 0x2f0; // float
		constexpr auto StateObject = 0x2f8; // USQCoreStateComponent*
		constexpr auto MapIcon = 0x300; // USQMapIconComponent*
		constexpr auto DefaultMapIconWidget = 0x308; // USQMapIconWidget*
		constexpr auto SpawnSearchRadius = 0x310; // float
		constexpr auto SpawnSearchHeight = 0x314; // float
		constexpr auto ValidSpawnLocations = 0x318; // TArray<FVector>
		constexpr auto ValidOutOfSightSpawnPoints = 0x328; // TArray<FVector>
		constexpr auto bHasValidSpawnLocation = 0x338; // bool
		constexpr auto bCanEverDoNearbyEnemiesCheck = 0x348; // bool
		constexpr auto bCanBeSiegedByVehicles = 0x349; // bool
		constexpr auto NearbyEnemiesRadius = 0x34c; // float
		constexpr auto NearbyEnemiesCheckTickRate = 0x350; // float
		constexpr auto SiegeDistanceThreshold = 0x358; // UCurveFloat*
		constexpr auto EnemyDistanceToRespawnDelay = 0x360; // UCurveFloat*
		constexpr auto Team = 0x3f0; // ESQTeam
		constexpr auto SpawnPointType = 0x3f1; // ESQSpawnPointType
		constexpr auto WaveIntervalTime = 0x3f4; // float
		constexpr auto WaveSpawnStartTime = 0x410; // float
	}

	namespace n_USQWeaponAttachment_Scope { // : USQWeaponAttachment
		constexpr auto MeshTransitionPercentage = 0x4b0; // float
		constexpr auto ADSMesh = 0x4b8; // UStaticMesh*
		constexpr auto ADSMeshTransform = 0x4c0; // FTransform
		constexpr auto NonADSMesh = 0x4f0; // UStaticMesh*
		constexpr auto NonADSMeshTransform = 0x500; // FTransform
		constexpr auto InToADSMeshTransitionSettings = 0x530; // TArray<FSQMeshTransitionSettings>
		constexpr auto OutFromADSMeshTransitionSettings = 0x540; // TArray<FSQMeshTransitionSettings>
	}

	namespace n_UBTTask_PlayAnimation { // : UBTTaskNode
		constexpr auto AnimationToPlay = 0x70; // UAnimationAsset*
		constexpr auto bLooping = 0x78; // char : 1
		constexpr auto bNonBlocking = 0x78; // char : 1
		constexpr auto MyOwnerComp = 0x80; // UBehaviorTreeComponent*
		constexpr auto CachedSkelMesh = 0x88; // USkeletalMeshComponent*
	}

	namespace n_USoundBase { // : UObject
		constexpr auto SoundClassObject = 0x28; // USoundClass*
		constexpr auto bDebug = 0x30; // char : 1
		constexpr auto bOverrideConcurrency = 0x30; // char : 1
		constexpr auto bOutputToBusOnly = 0x30; // char : 1
		constexpr auto bHasDelayNode = 0x30; // char : 1
		constexpr auto bHasConcatenatorNode = 0x30; // char : 1
		constexpr auto bBypassVolumeScaleForPriority = 0x30; // char : 1
		constexpr auto VirtualizationMode = 0x31; // EVirtualizationMode
		constexpr auto ConcurrencySet = 0x38; // TSet<USoundConcurrency*>
		constexpr auto ConcurrencyOverrides = 0x88; // FSoundConcurrencySettings
		constexpr auto Duration = 0xa8; // float
		constexpr auto MaxDistance = 0xac; // float
		constexpr auto TotalSamples = 0xb0; // float
		constexpr auto Priority = 0xb4; // float
		constexpr auto AttenuationSettings = 0xb8; // USoundAttenuation*
		constexpr auto Modulation = 0xc0; // FSoundModulation
		constexpr auto SoundSubmixObject = 0xd0; // USoundSubmix*
		constexpr auto SoundSubmixSends = 0xd8; // TArray<FSoundSubmixSendInfo>
		constexpr auto SourceEffectChain = 0xe8; // USoundEffectSourcePresetChain*
		constexpr auto BusSends = 0xf0; // TArray<FSoundSourceBusSendInfo>
		constexpr auto PreEffectBusSends = 0x100; // TArray<FSoundSourceBusSendInfo>
	}

	namespace n_ASQWorldSettings { // : AWorldSettings
		constexpr auto MapGridSpacing = 0x3c8; // FVector2D
		constexpr auto MapTextureCornerZero = 0x3d0; // AActor*
		constexpr auto MapTextureCornerOne = 0x3d8; // AActor*
		constexpr auto MinimapMakerSettings = 0x3e0; // FSQMinimapMakerSettings
		constexpr auto MapCameraLocation = 0x930; // AActor*
		constexpr auto MapRulesets = 0x938; // TArray<ASQGameRuleSet*>
		constexpr auto DisplayTitle = 0x948; // FText
		constexpr auto OnMapTextureChange = 0x960; // FScriptMulticastDelegate
		constexpr auto SeaLevel = 0x970; // int
		constexpr auto HelicoptersAltitudeThreshold = 0x974; // int
		constexpr auto bCanDriverSwitchTo3rdPerson = 0x978; // bool
		constexpr auto MapTexture = 0x980; // UTexture*
	}

	namespace n_UReplicationGraphNode_ActorListFrequencyBuckets { // : UReplicationGraphNode
		constexpr auto AllChildNodes = 0x28; // TArray<UReplicationGraphNode*>
	}

	namespace n_UMaterialExpressionBlendMaterialAttributes { // : UMaterialExpression
		constexpr auto A = 0x40; // FMaterialAttributesInput
		constexpr auto B = 0x58; // FMaterialAttributesInput
		constexpr auto Alpha = 0x70; // FExpressionInput
		constexpr auto PixelAttributeBlendType = 0x84; // EMaterialAttributeBlend
		constexpr auto VertexAttributeBlendType = 0x85; // EMaterialAttributeBlend
	}

	namespace n_UMaterialExpressionRuntimeVirtualTextureReplace { // : UMaterialExpression
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto VirtualTextureOutput = 0x54; // FExpressionInput
	}

	namespace n_ABP_L85A2AG36_UGL_Smoke_Red_C { // : ABP_L85A2AG36_UGL_Smoke_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_ASQVehicleTurretOpenTop { // : ASQVehicleTurret
		constexpr auto YawMovementComponent = 0x3c8; // USQRotatingMovementComponent*
		constexpr auto PitchMovementComponent = 0x3d0; // USQRotatingMovementComponent*
	}

	namespace n_UPhysicalMaterial { // : UObject
		constexpr auto Friction = 0x28; // float
		constexpr auto FrictionCombineMode = 0x2c; // EFrictionCombineMode
		constexpr auto bOverrideFrictionCombineMode = 0x2d; // bool
		constexpr auto Restitution = 0x30; // float
		constexpr auto RestitutionCombineMode = 0x34; // EFrictionCombineMode
		constexpr auto bOverrideRestitutionCombineMode = 0x35; // bool
		constexpr auto Density = 0x38; // float
		constexpr auto RaiseMassToPower = 0x3c; // float
		constexpr auto DestructibleDamageThresholdScale = 0x40; // float
		constexpr auto PhysicalMaterialProperty = 0x48; // UPhysicalMaterialPropertyBase*
		constexpr auto SurfaceType = 0x50; // EPhysicalSurface
		constexpr auto TireFrictionScale = 0x54; // float
		constexpr auto TireFrictionScales = 0x58; // TArray<FTireFrictionScalePair>
	}

	namespace n_UParticleModuleCollision { // : UParticleModuleCollisionBase
		constexpr auto DampingFactor = 0x30; // FRawDistributionVector
		constexpr auto DampingFactorRotation = 0x80; // FRawDistributionVector
		constexpr auto MaxCollisions = 0xd0; // FRawDistributionFloat
		constexpr auto CollisionCompletionOption = 0x108; // EParticleCollisionComplete
		constexpr auto CollisionTypes = 0x110; // TArray<EObjectTypeQuery>
		constexpr auto bApplyPhysics = 0x128; // char : 1
		constexpr auto bIgnoreTriggerVolumes = 0x128; // char : 1
		constexpr auto ParticleMass = 0x130; // FRawDistributionFloat
		constexpr auto DirScalar = 0x168; // float
		constexpr auto bPawnsDoNotDecrementCount = 0x16c; // char : 1
		constexpr auto bOnlyVerticalNormalsDecrementCount = 0x16c; // char : 1
		constexpr auto VerticalFudgeFactor = 0x170; // float
		constexpr auto DelayAmount = 0x178; // FRawDistributionFloat
		constexpr auto bDropDetail = 0x1b0; // char : 1
		constexpr auto bCollideOnlyIfVisible = 0x1b0; // char : 1
		constexpr auto bIgnoreSourceActor = 0x1b0; // char : 1
		constexpr auto MaxCollisionDistance = 0x1b4; // float
		constexpr auto MaxCollisionSoundsToPlay = 0x1b8; // int
		constexpr auto CollisionSound = 0x1c0; // USoundBase*
	}

	namespace n_ASQVehicleWeaponTOW { // : ASQVehicleWeapon
		constexpr auto ViewWidgetClass = 0xa80; // USQVehicleViewWidget*
		constexpr auto ReticlePPMatCPP = 0xa88; // UMaterial*
		constexpr auto MissileRotationSpeed = 0xa90; // float
		constexpr auto AimStartOffset = 0xa94; // float
		constexpr auto AimMaxDistance = 0xa98; // float
		constexpr auto ProjectileCorrectionDistance = 0xa9c; // float
		constexpr auto FOVMultiplier = 0xaa0; // float
		constexpr auto SceneFringeIntensityInZoom = 0xaa4; // float
		constexpr auto PPBlendWeight = 0xaa8; // float
		constexpr auto FireDelay = 0xaac; // float
		constexpr auto CameraComponent = 0xab0; // UCameraComponent*
		constexpr auto LastPlayerHud = 0xab8; // ASQHUD*
	}

	namespace n_UParticleModuleAcceleration { // : UParticleModuleAccelerationBase
		constexpr auto Acceleration = 0x38; // FRawDistributionVector
		constexpr auto bApplyOwnerScale = 0x88; // char : 1
	}

	namespace n_UInterpFilter_Classes { // : UInterpFilter
		constexpr auto Caption = 0x28; // FString
	}

	namespace n_UDatasmithLandscapeTemplate { // : UDatasmithObjectTemplate
		constexpr auto LandscapeMaterial = 0x30; // UMaterialInterface*
		constexpr auto StaticLightingLOD = 0x38; // int
	}

	namespace n_ABP_M4_Recruit_Founders_C { // : ABP_M4_Recruit_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UMaterialExpressionVertexNormalWS { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_USQStaticTurretMovementComponent { // : USQNetMoveComponent
		constexpr auto bApplyRotationToUpdatedComponent = 0x250; // bool
		constexpr auto YawComponent = 0x258; // USceneComponent*
		constexpr auto PitchComponent = 0x260; // USceneComponent*
	}

	namespace n_UMovieSceneAudioCaptureProtocolBase { // : UMovieSceneCaptureProtocolBase
		constexpr auto State = 0x50; // EMovieSceneCaptureProtocolState
	}

	namespace n_USQDeployableSpawnerSettings { // : USQSettings
		constexpr auto ID = 0x30; // FName
		constexpr auto Data = 0x38; // FDataTableRowHandle
		constexpr auto ModId = 0x48; // FString
	}

	namespace n_UOnlineEngineInterfaceImpl { // : UOnlineEngineInterface
		constexpr auto VoiceSubsystemNameOverride = 0x28; // FName
	}

	namespace n_ANavSystemConfigOverride { // : AActor
		constexpr auto NavigationSystemConfig = 0x248; // UNavigationSystemConfig*
		constexpr auto bLoadOnClient = 0x250; // char : 1
	}

	namespace n_ABP_RPG7_Frag_Proj2_C { // : ABP_RPG7_Heat_Proj2_C
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto SkeletalMesh = 0x528; // USkeletalMeshComponent*
		constexpr auto BPEffectOnUnderMinFlightTime = 0x530; // UParticleSystem*
		constexpr auto BPSoundonUnderMinFlightTime = 0x538; // USoundBase*
	}

	namespace n_UGameMapsSettings { // : UObject
		constexpr auto EditorStartupMap = 0x28; // FSoftObjectPath
		constexpr auto LocalMapOptions = 0x40; // FString
		constexpr auto TransitionMap = 0x50; // FSoftObjectPath
		constexpr auto bUseSplitscreen = 0x68; // bool
		constexpr auto TwoPlayerSplitscreenLayout = 0x69; // ETwoPlayerSplitScreenType
		constexpr auto ThreePlayerSplitscreenLayout = 0x6a; // EThreePlayerSplitScreenType
		constexpr auto FourPlayerSplitscreenLayout = 0x6b; // EFourPlayerSplitScreenType
		constexpr auto bOffsetPlayerGamepadIds = 0x6c; // bool
		constexpr auto GameInstanceClass = 0x70; // FSoftClassPath
		constexpr auto GameDefaultMap = 0x88; // FSoftObjectPath
		constexpr auto ServerDefaultMap = 0xa0; // FSoftObjectPath
		constexpr auto GlobalDefaultGameMode = 0xb8; // FSoftClassPath
		constexpr auto GlobalDefaultServerGameMode = 0xd0; // FSoftClassPath
		constexpr auto GameModeMapPrefixes = 0xe8; // TArray<FGameModeName>
		constexpr auto GameModeClassAliases = 0xf8; // TArray<FGameModeName>
	}

	namespace n_UParticleModuleBeamNoise { // : UParticleModuleBeamBase
		constexpr auto bLowFreq_Enabled = 0x30; // char : 1
		constexpr auto frequency = 0x34; // int
		constexpr auto Frequency_LowRange = 0x38; // int
		constexpr auto NoiseRange = 0x40; // FRawDistributionVector
		constexpr auto NoiseRangeScale = 0x90; // FRawDistributionFloat
		constexpr auto bNRScaleEmitterTime = 0xc8; // char : 1
		constexpr auto NoiseSpeed = 0xd0; // FRawDistributionVector
		constexpr auto bSmooth = 0x120; // char : 1
		constexpr auto NoiseLockRadius = 0x124; // float
		constexpr auto bNoiseLock = 0x128; // char : 1
		constexpr auto bOscillate = 0x128; // char : 1
		constexpr auto NoiseLockTime = 0x12c; // float
		constexpr auto NoiseTension = 0x130; // float
		constexpr auto bUseNoiseTangents = 0x134; // char : 1
		constexpr auto NoiseTangentStrength = 0x138; // FRawDistributionFloat
		constexpr auto NoiseTessellation = 0x170; // int
		constexpr auto bTargetNoise = 0x174; // char : 1
		constexpr auto FrequencyDistance = 0x178; // float
		constexpr auto bApplyNoiseScale = 0x17c; // char : 1
		constexpr auto NoiseScale = 0x180; // FRawDistributionFloat
	}

	namespace n_UGameplayTaskResource { // : UObject
		constexpr auto ManualResourceID = 0x28; // int
		constexpr auto AutoResourceID = 0x2c; // uint8
		constexpr auto bManuallySetID = 0x30; // char : 1
	}

	namespace n_ABP_AAS_AttackMarker_C { // : ASQMapMarker
		constexpr auto DefaultSceneRoot = 0x280; // USceneComponent*
	}

	namespace n_UJoinSessionCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto OnFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_UCurveVector { // : UCurveBase
		constexpr auto FloatCurves = 0x30; // FRichCurve [0x3]
	}

	namespace n_UBTTask_WaitBlackboardTime { // : UBTTask_Wait
		constexpr auto BlackboardKey = 0x78; // FBlackboardKeySelector
	}

	namespace n_UMasterAudioSubmixCaptureProtocol { // : UMovieSceneAudioCaptureProtocolBase
		constexpr auto Filename = 0x58; // FString
	}

	namespace n_UMaterialExpressionStaticBoolParameter { // : UMaterialExpressionParameter
		constexpr auto DefaultValue = 0x58; // char : 1
	}

	namespace n_ABP_AK74M_1P78_4Mags_C { // : ABP_AK74M_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UInterpTrackColorScale { // : UInterpTrackVectorBase
		constexpr auto VectorTrack = 0x70; // FInterpCurveVector
		constexpr auto CurveTension = 0x88; // float
	}

	namespace n_UMaterialExpressionTime { // : UMaterialExpression
		constexpr auto bIgnorePause = 0x40; // char : 1
		constexpr auto bOverride_Period = 0x40; // char : 1
		constexpr auto Period = 0x44; // float
	}

	namespace n_USQMapWidgetForwardBase { // : USQMapWidgetDeployable
		constexpr auto bCanSpawn = 0x2b0; // char : 1
		constexpr auto bSieged = 0x2b0; // char : 1
		constexpr auto bIsBleeding = 0x2b0; // char : 1
		constexpr auto MinActivatedTimeStamp = 0x2b4; // float
		constexpr auto ExclusionRadius = 0x2b8; // float
		constexpr auto ConstructionRadius = 0x2bc; // float
		constexpr auto AmmoPoints = 0x2c0; // float
		constexpr auto ConstructionPoints = 0x2c4; // float
	}

	namespace n_UBP_Attachment_1p78_Blur_C { // : USQWeaponAttachment_Scope
		constexpr auto MeshTransitionPercentage = 0x4b0; // float
		constexpr auto ADSMesh = 0x4b8; // UStaticMesh*
		constexpr auto ADSMeshTransform = 0x4c0; // FTransform
		constexpr auto NonADSMesh = 0x4f0; // UStaticMesh*
		constexpr auto NonADSMeshTransform = 0x500; // FTransform
		constexpr auto InToADSMeshTransitionSettings = 0x530; // TArray<FSQMeshTransitionSettings>
		constexpr auto OutFromADSMeshTransitionSettings = 0x540; // TArray<FSQMeshTransitionSettings>
	}

	namespace n_ASQPlayerState { // : APlayerState
		constexpr auto bUseCustomPingReplicationRate = 0x3a0; // bool
		constexpr auto SecondsBetweenPingUpdate = 0x3a4; // float
		constexpr auto TimeBetweenPlayerCacheChecking = 0x3ac; // float
		constexpr auto OnTeamStateChangedEvent = 0x3d8; // FScriptMulticastDelegate
		constexpr auto OnRoleChangedEvent = 0x3e8; // FScriptMulticastDelegate
		constexpr auto RelevantMapMarkers = 0x410; // TArray<ASQMapMarker*>
		constexpr auto TeamId = 0x420; // int
		constexpr auto LastTeamChangeTime = 0x424; // int
		constexpr auto SoldiersOnScreenSortedByNearestDistanceCache = 0x488; // TArray<ASQSoldier*>
		constexpr auto SoldiersHaveLineOfSightCache = 0x498; // TArray<ASQSoldier*>
		constexpr auto EnemiesHaveLineOfSightCache = 0x4a8; // TArray<ASQSoldier*>
		constexpr auto FriendliesHaveLineOfSightCache = 0x4b8; // TArray<ASQSoldier*>
		constexpr auto AllSoldiersCache = 0x4c8; // TArray<ASQSoldier*>
		constexpr auto EnemiesCache = 0x4d8; // TArray<ASQSoldier*>
		constexpr auto FriendliesCache = 0x4e8; // TArray<ASQSoldier*>
		constexpr auto AllSoldiersSortedByNearestDistanceCache = 0x4f8; // TArray<ASQSoldier*>
		constexpr auto PawnsOnScreenSortedByNearestDistanceCache = 0x508; // TArray<APawn*>
		constexpr auto PawnsHaveLineOfSightCache = 0x518; // TArray<APawn*>
		constexpr auto EnemyPawnsHaveLineOfSightCache = 0x528; // TArray<APawn*>
		constexpr auto FriendlyPawnsHaveLineOfSightCache = 0x538; // TArray<APawn*>
		constexpr auto AllPawnsCache = 0x548; // TArray<APawn*>
		constexpr auto EnemyPawnsCache = 0x558; // TArray<APawn*>
		constexpr auto FriendlyPawnsCache = 0x568; // TArray<APawn*>
		constexpr auto AllPawnsSortedByNearestDistanceCache = 0x578; // TArray<APawn*>
		constexpr auto AuthorityVehicleClaimsNotExpired = 0x588; // TArray<USQVehicleClaim*>
		constexpr auto PlacedDeployablesArray = 0x598; // FDeployableItemsArray
		constexpr auto PlayerStateData = 0x6b0; // FPlayerStateDataObject
		constexpr auto CurrentSeat = 0x718; // USQVehicleSeatComponent*
		constexpr auto TeamState = 0x720; // ASQTeamState*
		constexpr auto SquadState = 0x728; // ASQSquadState*
		constexpr auto Soldier = 0x730; // ASQSoldier*
		constexpr auto CurrentPawn = 0x738; // APawn*
		constexpr auto CurrentRoleId = 0x740; // FName
		constexpr auto DeployRoleId = 0x748; // FName
		constexpr auto CurrentRole = 0x750; // USQRoleSettings*
		constexpr auto DeployRole = 0x758; // USQRoleSettings*
		constexpr auto PersistedAmmoState = 0x760; // FSQPersistedAmmoState
		constexpr auto ReplacementClassesMap = 0x778; // TMap<UObject*, UObject*>
		constexpr auto StateObject = 0x7d0; // USQCoreStateComponent*
	}

	namespace n_USQUpdateSessionsCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto OnFailure = 0x38; // FScriptMulticastDelegate
		constexpr auto WorldContextObject = 0xf0; // UObject*
	}

	namespace n_UBP_SQLevel_C { // : USQLevel
		constexpr auto Biome = 0xb0; // ESQBiome
		constexpr auto TheaterOfOperations = 0xb1; // SQETheatersOfOperations
	}

	namespace n_USQGraphInitializerComponent { // : UActorComponent
		constexpr auto DesignOutgoingLinks = 0xd8; // TArray<FSQDesignLink>
	}

	namespace n_USQClientsideWeaponSettings { // : UDeveloperSettings
		constexpr auto MaxVerificationAngle = 0x38; // float
		constexpr auto ShotTimeout = 0x3c; // float
		constexpr auto SlowProjectileTimeout = 0x40; // float
		constexpr auto bNotifyPlayerOnShotFail = 0x44; // bool
		constexpr auto bNotifyAdminOnShotFail = 0x45; // bool
		constexpr auto bNotifyPlayerOnHitFail = 0x46; // bool
		constexpr auto bNotifyAdminOnHitFail = 0x47; // bool
		constexpr auto NotifyOnlyOnTheseFailureReasons = 0x48; // TArray<ESQHitDetectionFailReason>
		constexpr auto ConsecutiveFailedShotKickAmount = 0x58; // int
		constexpr auto ConsecutiveFailedHitKickAmount = 0x5c; // int
	}

	namespace n_ABP_M4A1_M68_Foregrip_Tracer_C { // : ABP_M4A1_M68_Foregrip_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_USQCommanderInputComponent { // : UActorComponent
		constexpr auto OnCommanderRevivedEvent = 0xd8; // FScriptMulticastDelegate
	}

	namespace n_UMaterialExpressionParticleRelativeTime { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_ULevelActorContainer { // : UObject
		constexpr auto Actors = 0x28; // TArray<AActor*>
	}

	namespace n_USQReplayObject { // : UObject
		constexpr auto RequestFullReload = 0x28; // FScriptMulticastDelegate
		constexpr auto RequestWidgetReload = 0x38; // FScriptMulticastDelegate
		constexpr auto ReplayPath = 0x48; // FString
		constexpr auto ReplayName = 0x58; // FString
		constexpr auto bIsNamedReplay = 0x68; // bool
		constexpr auto DateCreated = 0x70; // FDateTime
		constexpr auto SizeInBytes = 0x78; // int64
	}

	namespace n_USQGraphRAASVisualizerComponent { // : USQGraphAASVisualizerComponent
		constexpr auto RouteIndex = 0xf8; // int
	}

	namespace n_UInterpFilter_Custom { // : UInterpFilter
		constexpr auto Caption = 0x28; // FString
	}

	namespace n_UMaterialExpressionTextureObject { // : UMaterialExpressionTextureBase
		constexpr auto Texture = 0x40; // UTexture*
		constexpr auto SamplerType = 0x48; // EMaterialSamplerType
		constexpr auto IsDefaultMeshpaintTexture = 0x4c; // char : 1
	}

	namespace n_UListViewBase { // : UWidget
		constexpr auto EntryWidgetClass = 0x108; // UUserWidget*
		constexpr auto BP_OnEntryGenerated = 0x110; // FScriptMulticastDelegate
		constexpr auto BP_OnEntryReleased = 0x120; // FScriptMulticastDelegate
		constexpr auto EntryWidgetPool = 0x130; // FUserWidgetPool
	}

	namespace n_USplineComponent { // : UPrimitiveComponent
		constexpr auto SplineCurves = 0x408; // FSplineCurves
		constexpr auto SplineInfo = 0x470; // FInterpCurveVector
		constexpr auto SplineRotInfo = 0x488; // FInterpCurveQuat
		constexpr auto SplineScaleInfo = 0x4a0; // FInterpCurveVector
		constexpr auto SplineReparamTable = 0x4b8; // FInterpCurveFloat
		constexpr auto bAllowSplineEditingPerInstance = 0x4d0; // bool
		constexpr auto ReparamStepsPerSegment = 0x4d4; // int
		constexpr auto Duration = 0x4d8; // float
		constexpr auto bStationaryEndpoints = 0x4dc; // bool
		constexpr auto bSplineHasBeenEdited = 0x4dd; // bool
		constexpr auto bModifiedByConstructionScript = 0x4de; // bool
		constexpr auto bInputSplinePointsToConstructionScript = 0x4df; // bool
		constexpr auto bDrawDebug = 0x4e0; // bool
		constexpr auto bClosedLoop = 0x4e1; // bool
		constexpr auto bLoopPositionOverride = 0x4e2; // bool
		constexpr auto LoopPosition = 0x4e4; // float
		constexpr auto DefaultUpVector = 0x4e8; // FVector
	}

	namespace n_ASQTeam { // : AInfo
		constexpr auto TeamStateClass = 0x248; // ASQTeamState*
		constexpr auto PrivateTeamStateClass = 0x250; // ASQTeamStatePrivate*
		constexpr auto TeamState = 0x258; // ASQTeamState*
		constexpr auto PrivateTeamState = 0x260; // ASQTeamStatePrivate*
		constexpr auto Squads = 0x268; // TArray<ASQSquad*>
		constexpr auto IndexedSquads = 0x278; // TArray<ASQSquad*>
		constexpr auto Commander = 0x288; // ASQPlayerController*
		constexpr auto CommandSquad = 0x290; // ASQSquad*
		constexpr auto CommanderManager = 0x298; // USQCommanderManager*
		constexpr auto TeamLayerConfig = 0x2a0; // USQLayerTeamConfig*
	}

	namespace n_ABP_M4A1_M68_Foregrip_Tracer_Founders_C { // : ABP_M4A1_M68_Foregrip_Tracer_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UInterpGroupDirector { // : UInterpGroup
		constexpr auto InterpTracks = 0x30; // TArray<UInterpTrack*>
		constexpr auto GroupName = 0x40; // FName
		constexpr auto GroupColor = 0x48; // FColor
		constexpr auto bCollapsed = 0x4c; // char : 1
		constexpr auto bVisible = 0x4c; // char : 1
		constexpr auto bIsFolder = 0x4c; // char : 1
		constexpr auto bIsParented = 0x4c; // char : 1
		constexpr auto bIsSelected = 0x4c; // char : 1
	}

	namespace n_ABP_AK74MGP25_1P78_UGL_Desert_HE_C { // : ABP_AK74MGP25_1P78_UGL_Desert_Parent_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UParticleModuleLocationPrimitiveCylinder_Seeded { // : UParticleModuleLocationPrimitiveCylinder
		constexpr auto RandomSeedInfo = 0x140; // FParticleRandomSeedInfo
	}

	namespace n_USQAnimInstanceSoldier1P { // : USQAnimInstanceSoldier
		constexpr auto bRelevantAnimTimeRemaining__LTEPtTwo__WeaponBobbing1P__St2P = 0x420; // bool
		constexpr auto bRelevantAnimTimeRemaining__LTEPtTwo__WeaponBobbing1P__P2St = 0x421; // bool
		constexpr auto bRelevantAnimTimeRemaining__LTEPtTwo__WeaponBobbing1P__Sp2P = 0x422; // bool
		constexpr auto bStateWeight__GTEOne__ProneStates__ProneMove = 0x504; // bool
		constexpr auto bRelevantAnimTimeRemaining__LTEPtTwo__ProneStates__OutProneMove = 0x505; // bool
		constexpr auto bCurrentTime__GTEPtThree__Jump1P__JumpStart__rifle_1ptop_jumpstart = 0x578; // bool
		constexpr auto bTimeRemaining__LTEPtTwo__Jump1P__JumpEnd__rifle_1ptop_jumpend = 0x579; // bool
		constexpr auto bTimeRemaining__LTEPtTwo__Jump1P__JumpStart__rifle_1ptop_jumpstart = 0x57a; // bool
		constexpr auto Zeroing = 0x5f4; // FRotator
		constexpr auto ProneMoveType = 0x600; // UBlendSpaceBase*
		constexpr auto ProneMoveTypeAdditiveReference = 0x608; // UAnimSequence*
		constexpr auto OutProneMoveType = 0x610; // UAnimSequence*
		constexpr auto OutProneMoveTypeNonadditive = 0x618; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemAnim = 0x620; // UAnimSequence*
		constexpr auto HasAdjustableSightAlpha = 0x628; // float
		constexpr auto StandLoc = 0x62c; // FVector
		constexpr auto CrouchLoc = 0x638; // FVector
		constexpr auto ProneLoc = 0x644; // FVector
		constexpr auto BipodLoc = 0x650; // FVector
		constexpr auto StandLocBlendTime = 0x65c; // float
		constexpr auto NegFpvTorsoCameraOffset = 0x660; // FVector
		constexpr auto DeviationVisuFb = 0x66c; // FVector
		constexpr auto Sway = 0x678; // FRotator
		constexpr auto StrafeVector = 0x684; // FVector
		constexpr auto StrafeRotator = 0x690; // FRotator
		constexpr auto AdsStrafeRotator = 0x69c; // FRotator
		constexpr auto BaseAimPitchPct = 0x6a8; // float
		constexpr auto WeapRecoilRelLoc = 0x6ac; // FVector
		constexpr auto GlobalDeltaRotDeltaSpring = 0x6b8; // FRotator
		constexpr auto GlobalDeltaRotDeltaSpringRoll = 0x6c4; // FRotator
		constexpr auto GlobalDeltaLocDeltaSpringWeaponMesh = 0x6d0; // FVector
		constexpr auto LeftHandIKSpringAlpha = 0x6dc; // float
		constexpr auto Aim1pWeaponMeshPosition = 0x6e0; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x6ec; // FVector
		constexpr auto StandLeanLeftRootOffset = 0x6f8; // FVector
		constexpr auto StandLeanLeftWeaponRotation = 0x704; // FRotator
		constexpr auto StandLeanLeftCameraRotation = 0x710; // FRotator
		constexpr auto StandLeanRightRootOffset = 0x71c; // FVector
		constexpr auto StandLeanRightWeaponRotation = 0x728; // FRotator
		constexpr auto StandLeanRightCameraRotation = 0x734; // FRotator
		constexpr auto CrouchLeanLeftRootOffset = 0x740; // FVector
		constexpr auto CrouchLeanLeftWeaponRotation = 0x74c; // FRotator
		constexpr auto CrouchLeanLeftCameraRotation = 0x758; // FRotator
		constexpr auto CrouchLeanRightRootOffset = 0x764; // FVector
		constexpr auto CrouchLeanRightWeaponRotation = 0x770; // FRotator
		constexpr auto CrouchLeanRightCameraRotation = 0x77c; // FRotator
		constexpr auto ProneLeanLeftRootOffset = 0x788; // FVector
		constexpr auto ProneLeanLeftWeaponRotation = 0x794; // FRotator
		constexpr auto ProneLeanLeftCameraRotation = 0x7a0; // FRotator
		constexpr auto ProneLeanRightRootOffset = 0x7ac; // FVector
		constexpr auto ProneLeanRightWeaponRotation = 0x7b8; // FRotator
		constexpr auto ProneLeanRightCameraRotation = 0x7c4; // FRotator
		constexpr auto FP_HasSway = 0x7d0; // float
		constexpr auto FP_JumpStartLoopAlpha = 0x7d4; // float
		constexpr auto FP_JumpEndBobbingBlendAlpha = 0x7d8; // float
		constexpr auto FP_JumpEndBobbingAdditiveAlpha = 0x7dc; // float
		constexpr auto FP_JumpEndCameraRootMotionAlphaBlend = 0x7e0; // float
		constexpr auto bFP_IsFallingAndNotJumping = 0x7e4; // bool
		constexpr auto FP_St2P_RootMotionBlendAlpha = 0x7e8; // float
		constexpr auto FP_P2St_RootMotionBlendAlpha = 0x7ec; // float
		constexpr auto bFP_IsProneAndIsSprintingAndCanSprintToProne = 0x7f0; // bool
		constexpr auto bFP_SwitchedProneAndNotIsProne = 0x7f1; // bool
		constexpr auto bFP_SwitchedProneAndIsProne = 0x7f2; // bool
		constexpr auto FP_ProneMoveIkWeaponHandRootRotFromGroundAngle = 0x7f4; // FRotator
		constexpr auto FP_ProneMoveIkWeaponHandRootRotFromActorPitch = 0x800; // FRotator
		constexpr auto bFP_ProneMoveWeaponAligningConditions = 0x80c; // bool
		constexpr auto FP_ProneMoveIkWeaponRightClavicleRot = 0x810; // FRotator
		constexpr auto FP_ProneMoveBobPlayRate = 0x81c; // float
		constexpr auto bFP_SpeedHigherThanZeroAndNotIsProneTransition = 0x820; // bool
		constexpr auto bFP_SpeedHigherThanZero = 0x821; // bool
		constexpr auto bFP_HvdXorClAndClOrHvdXorVaAndVaOrBipod = 0x822; // bool
		constexpr auto bFP_ClimbAnimNotEqual1 = 0x823; // bool
		constexpr auto bFP_ClimbAndClimbAnim1 = 0x824; // bool
		constexpr auto FP_ClimbAndClimbAnim1_AimRotator = 0x828; // FRotator
		constexpr auto bFP_1pLeftHandIkConditions = 0x834; // bool
		constexpr auto FP_1pLeftHandIKConditionsAlpha = 0x838; // float
		constexpr auto FP_IsUsingItemAlpha = 0x83c; // float
		constexpr auto FP_IsProneAlpha = 0x840; // float
		constexpr auto bFP_T_ProneStatesProneMoveToOutProneMove = 0x844; // bool
		constexpr auto bFP_T_Jump1pJumpStartToJumpEnd = 0x845; // bool
		constexpr auto bFP_T_ToADS_Hipfire = 0x846; // bool
		constexpr auto bCachedIsPullingTriggerAndMagazineHasAmmo = 0x847; // bool
		constexpr auto ToADS_Hipfire_RemainingTIme = 0x848; // float
		constexpr auto Steady1pHipFireDuration = 0x84c; // float
		constexpr auto bFP_T_StandToADS_Grenade = 0x850; // bool
		constexpr auto bFP_T_WeaponBobbing1P_ADSToStand = 0x851; // bool
		constexpr auto bFP_T_WeaponBobbing1P_ADSToProne = 0x852; // bool
		constexpr auto bFP_T_WeaponBobbing1P_ProneToADS = 0x853; // bool
		constexpr auto FP_CustomIsCrouchedAlpha = 0x854; // float
		constexpr auto FP_HasAdjustableSightAlphaTimesIsAdsAlpha = 0x858; // float
		constexpr auto bProneMoveBobbing = 0x85c; // bool
		constexpr auto bLeftHandIkOut1P = 0x85d; // bool
		constexpr auto bSwitchedProne = 0x85e; // bool
		constexpr auto bLastProneStance = 0x85f; // bool
		constexpr auto MoveDeviationFactor = 0x860; // float
		constexpr auto ShotDeviationFactor = 0x864; // float
		constexpr auto FinalDeviation = 0x870; // FVector4
		constexpr auto DeviationVisuFbZY = 0x880; // FVector2D
		constexpr auto AddRotGoingShot = 0x888; // FRotator
		constexpr auto RecoilReleaseInterpSpeed = 0x894; // float
		constexpr auto RecoilWeaponLimit = 0x898; // float
		constexpr auto MoveRecoilFactor = 0x89c; // float
		constexpr auto RecoilCanRelease = 0x8a0; // float
		constexpr auto FinalRecoilSigma = 0x8a4; // FVector
		constexpr auto FinalRecoilMean = 0x8b0; // FVector
		constexpr auto MoveSwayFactor = 0x8bc; // float
		constexpr auto CustomSwayMin = 0x8c0; // float
		constexpr auto SwayZY = 0x8c4; // FVector2D
		constexpr auto StrafeSpringFactor = 0x8cc; // float
		constexpr auto LastKnownRot1 = 0x8d0; // FRotator
		constexpr auto CtrlRotVectorDeltaSpring = 0x8dc; // FVector
		constexpr auto LastKnownRot2 = 0x8e8; // FRotator
		constexpr auto CtrlRotDeltaSpringLerpAlpha = 0x8f4; // float
		constexpr auto WeaponSpringTurnSpeedToFullIntensity = 0x8f8; // float
		constexpr auto StrafeSpringRotator = 0x8fc; // FRotator
		constexpr auto StrafeSpringVector = 0x908; // FVector
		constexpr auto AdsStrafeSpringRotator = 0x914; // FRotator
		constexpr auto CustomNotIsAds = 0x920; // float
		constexpr auto FireShake = 0x928; // UCameraShake*
		constexpr auto WeaponSpringSide = 0x930; // int
		constexpr auto WeaponSpringStiffness = 0x934; // float
		constexpr auto WeaponSpringCriticalDampingFactor = 0x938; // float
		constexpr auto WeaponSpringMass = 0x93c; // float
		constexpr auto WeaponSpringFactor = 0x940; // float
		constexpr auto WeaponMeshSpringLocDelayFactor = 0x944; // float
		constexpr auto WeaponSpringClamp = 0x948; // float
		constexpr auto WeaponMeshSpringRotDelayFactor = 0x94c; // float
		constexpr auto AddMoveDeviation = 0x950; // float
		constexpr auto MoveDeviationFactorRelease = 0x954; // float
		constexpr auto MaxMoveDeviationFactor = 0x958; // float
		constexpr auto MinMoveDeviationFactor = 0x95c; // float
		constexpr auto FullStaminaDeviationFactor = 0x960; // float
		constexpr auto LowStaminaDeviationFactor = 0x964; // float
		constexpr auto AddShotDeviationFactor = 0x968; // float
		constexpr auto AddShotDeviationFactorAds = 0x96c; // float
		constexpr auto ShotDeviationFactorRelease = 0x970; // float
		constexpr auto MinShotDeviationFactor = 0x974; // float
		constexpr auto MaxShotDeviationFactor = 0x978; // float
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x97c; // float
		constexpr auto DeviationVisuFbMax = 0x980; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x984; // float
		constexpr auto MinBipodAdsDeviation = 0x988; // float
		constexpr auto MinBipodDeviation = 0x98c; // float
		constexpr auto MinProneAdsDeviation = 0x990; // float
		constexpr auto MinProneDeviation = 0x994; // float
		constexpr auto MinCrouchAdsDeviation = 0x998; // float
		constexpr auto MinCrouchDeviation = 0x99c; // float
		constexpr auto MinStandAdsDeviation = 0x9a0; // float
		constexpr auto MinStandDeviation = 0x9a4; // float
		constexpr auto MinProneTransitionDeviation = 0x9a8; // float
		constexpr auto MaxMoveRecoilFactor = 0x9ac; // float
		constexpr auto AddMoveRecoil = 0x9b0; // float
		constexpr auto MinMoveRecoilFactor = 0x9b4; // float
		constexpr auto MoveRecoilFactorRelease = 0x9b8; // float
		constexpr auto FullStaminaRecoilFactor = 0x9bc; // float
		constexpr auto LowStaminaRecoilFactor = 0x9c0; // float
		constexpr auto RecoilCameraOffsetFactor = 0x9c4; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x9c8; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x9cc; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x9d0; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x9d4; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x9d8; // float
		constexpr auto WeapRecoilRelLocFactor = 0x9dc; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x9e0; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x9e4; // float
		constexpr auto ProneAdsRecoilMean = 0x9e8; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x9f4; // FVector
		constexpr auto ProneRecoilMean = 0xa00; // FVector
		constexpr auto ProneRecoilSigma = 0xa0c; // FVector
		constexpr auto CrouchAdsRecoilMean = 0xa18; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0xa24; // FVector
		constexpr auto CrouchRecoilMean = 0xa30; // FVector
		constexpr auto CrouchRecoilSigma = 0xa3c; // FVector
		constexpr auto StandAdsRecoilMean = 0xa48; // FVector
		constexpr auto StandAdsRecoilSigma = 0xa54; // FVector
		constexpr auto StandRecoilMean = 0xa60; // FVector
		constexpr auto StandRecoilSigma = 0xa6c; // FVector
		constexpr auto ProneTransitionRecoilMean = 0xa78; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0xa84; // FVector
		constexpr auto BipodAdsRecoilMean = 0xa90; // FVector
		constexpr auto BipodAdsRecoilSigma = 0xa9c; // FVector
		constexpr auto BipodRecoilMean = 0xaa8; // FVector
		constexpr auto BipodRecoilSigma = 0xab4; // FVector
		constexpr auto FullStaminaSwayFactor = 0xac0; // float
		constexpr auto LowStaminaSwayFactor = 0xac4; // float
		constexpr auto AddMoveSway = 0xac8; // float
		constexpr auto MaxMoveSwayFactor = 0xacc; // float
		constexpr auto MinMoveSwayFactor = 0xad0; // float
		constexpr auto MoveSwayFactorRelease = 0xad4; // float
		constexpr auto SwayInterpSpeed_YZ = 0xad8; // float
		constexpr auto SwayInterpSpeed_Final = 0xadc; // float
		constexpr auto ProneAdsSwayMin = 0xae0; // float
		constexpr auto ProneSwayMin = 0xae4; // float
		constexpr auto CrouchAdsSwayMin = 0xae8; // float
		constexpr auto CrouchSwayMin = 0xaec; // float
		constexpr auto StandAdsSwayMin = 0xaf0; // float
		constexpr auto StandSwayMin = 0xaf4; // float
		constexpr auto ProneTransitionSwayMin = 0xaf8; // float
		constexpr auto HoldingBreathSwayFactor = 0xafc; // float
		constexpr auto CustomSpeed = 0xb00; // float
		constexpr auto LastSuppressionInfoClass = 0xb08; // USQSuppressionInfo*
		constexpr auto SmoothFinalLofSuppressRotation = 0xb4c; // FRotator
		constexpr auto LofSuppressRotationAlpha = 0xb5c; // float
		constexpr auto bWasCrouchedBeforeProne = 0xb70; // bool
		constexpr auto CustomCurrentFloorNormal1 = 0xb74; // FVector
		constexpr auto FP_SprintBlendAlpha = 0xb80; // float
		constexpr auto bIsSprint1pLoopSection = 0xb84; // bool
		constexpr auto SprintStaticPose = 0xb88; // UAnimSequence*
		constexpr auto BobbingMove1pMontage = 0xbb0; // UAnimMontage*
		constexpr auto BobbingSprint1pMontage = 0xbb8; // UAnimMontage*
	}

	namespace n_UMovieSceneVisibilityTrack { // : UMovieSceneBoolTrack
		constexpr auto SectionToKey = 0x58; // UMovieSceneSection*
		constexpr auto PropertyName = 0x60; // FName
		constexpr auto PropertyPath = 0x68; // FString
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_UBillboardComponent { // : UPrimitiveComponent
		constexpr auto Sprite = 0x408; // UTexture2D*
		constexpr auto bIsScreenSizeScaled = 0x410; // char : 1
		constexpr auto ScreenSize = 0x414; // float
		constexpr auto U = 0x418; // float
		constexpr auto UL = 0x41c; // float
		constexpr auto V = 0x420; // float
		constexpr auto VL = 0x424; // float
	}

	namespace n_USQRestriction_Delay_Base { // : USQRestriction
		constexpr auto ID = 0x30; // FName
		constexpr auto Data = 0x38; // FDataTableRowHandle
		constexpr auto ModId = 0x48; // FString
	}

	namespace n_USQDetonatorStaticInfo { // : USQItemStaticInfo
		constexpr auto DetonatorUseWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto DetonatorUse1pMontage = 0x500; // UAnimMontage*
		constexpr auto DetonatorUse3pMontage = 0x508; // UAnimMontage*
		constexpr auto IEDClass = 0x510; // ASQDeployableItem*
		constexpr auto RandomDetonationDelayRange = 0x518; // FVector2D
		constexpr auto DetonationDelay = 0x520; // float
		constexpr auto DetonatorUseDuration = 0x524; // float
		constexpr auto bUseRandomDetonationDelay = 0x528; // bool
	}

	namespace n_UInterpTrack { // : UObject
		constexpr auto SubTracks = 0x38; // TArray<UInterpTrack*>
		constexpr auto TrackInstClass = 0x48; // UInterpTrackInst*
		constexpr auto ActiveCondition = 0x50; // ETrackActiveCondition
		constexpr auto TrackTitle = 0x58; // FString
		constexpr auto bOnePerGroup = 0x68; // char : 1
		constexpr auto bDirGroupOnly = 0x68; // char : 1
		constexpr auto bDisableTrack = 0x68; // char : 1
		constexpr auto bIsSelected = 0x68; // char : 1
		constexpr auto bIsAnimControlTrack = 0x68; // char : 1
		constexpr auto bSubTrackOnly = 0x68; // char : 1
		constexpr auto bVisible = 0x68; // char : 1
		constexpr auto bIsRecording = 0x68; // char : 1
	}

	namespace n_USQSaveGameWrapper { // : UObject
		constexpr auto SaveGameClass = 0x28; // USaveGame*
		constexpr auto SlotName = 0x30; // FString
		constexpr auto bClientOnly = 0x40; // bool
		constexpr auto SaveGame = 0x48; // USaveGame*
	}

	namespace n_ASQRandomizer { // : AActor
		constexpr auto Root = 0x248; // USceneComponent*
		constexpr auto RandomSeed = 0x250; // int
	}

	namespace n_USQMapWidgetPawn { // : USQMapWidget
		constexpr auto bIsOwned = 0x2a8; // char : 1
		constexpr auto bIsOwnedBySelf = 0x2a8; // char : 1
		constexpr auto bIsInSelfTeam = 0x2a8; // char : 1
		constexpr auto bIsInSelfSquad = 0x2a8; // char : 1
		constexpr auto FireTeamIndex = 0x2ac; // int
		constexpr auto CameraRotationYaw = 0x2b0; // float
		constexpr auto IsSelfZOrder = 0x2b4; // float
	}

	namespace n_AWheeledVehicle { // : APawn
		constexpr auto Mesh = 0x2a8; // USkeletalMeshComponent*
		constexpr auto VehicleMovement = 0x2b0; // UWheeledVehicleMovementComponent*
	}

	namespace n_USQMapSoldierIconWidget { // : USQMapPawnIconWidget
		constexpr auto bIsSelfMedic = 0x268; // bool
		constexpr auto bIsWithinMedicRange = 0x269; // bool
		constexpr auto MedicRange = 0x26c; // float
		constexpr auto bIsMedic = 0x270; // bool
		constexpr auto bIsAlive = 0x271; // bool
		constexpr auto bIsBleeding = 0x272; // bool
		constexpr auto bIsInVehicle = 0x273; // bool
	}

	namespace n_ALightmassImportanceVolume { // : AVolume
		constexpr auto BrushType = 0x248; // EBrushType
		constexpr auto BrushColor = 0x24c; // FColor
		constexpr auto PolyFlags = 0x250; // int
		constexpr auto bColored = 0x254; // char : 1
		constexpr auto bSolidWhenSelected = 0x254; // char : 1
		constexpr auto bPlaceableFromClassBrowser = 0x254; // char : 1
		constexpr auto bNotForClientOrServer = 0x254; // char : 1
		constexpr auto Brush = 0x258; // UModel*
		constexpr auto BrushComponent = 0x260; // UBrushComponent*
		constexpr auto bInManipulation = 0x268; // char : 1
		constexpr auto SavedSelections = 0x270; // TArray<FGeomSelection>
	}

	namespace n_ASkyLight { // : AInfo
		constexpr auto LightComponent = 0x248; // USkyLightComponent*
		constexpr auto bEnabled = 0x250; // char : 1
	}

	namespace n_UEngineMessage { // : ULocalMessage
		constexpr auto FailedPlaceMessage = 0x28; // FString
		constexpr auto MaxedOutMessage = 0x38; // FString
		constexpr auto EnteredMessage = 0x48; // FString
		constexpr auto LeftMessage = 0x58; // FString
		constexpr auto GlobalNameChange = 0x68; // FString
		constexpr auto SpecEnteredMessage = 0x78; // FString
		constexpr auto NewPlayerMessage = 0x88; // FString
		constexpr auto NewSpecMessage = 0x98; // FString
	}

	namespace n_ABP_AK74M_1P78_Desert_C { // : ABP_AK74M_1P78_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_USQWeaponStaticInfo { // : USQItemStaticInfo
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_ASpectatorBeaconHost { // : AOnlineBeaconHostObject
		constexpr auto State = 0x270; // USpectatorBeaconState*
		constexpr auto bLogoutOnSessionTimeout = 0x2d8; // bool
		constexpr auto SessionTimeoutSecs = 0x2dc; // float
		constexpr auto TravelSessionTimeoutSecs = 0x2e0; // float
	}

	namespace n_UParticleModuleSize_Seeded { // : UParticleModuleSize
		constexpr auto RandomSeedInfo = 0x80; // FParticleRandomSeedInfo
	}

	namespace n_UVRNotificationsComponent { // : UActorComponent
		constexpr auto HMDTrackingInitializingAndNeedsHMDToBeTrackedDelegate = 0xd8; // FScriptMulticastDelegate
		constexpr auto HMDTrackingInitializedDelegate = 0xe8; // FScriptMulticastDelegate
		constexpr auto HMDRecenteredDelegate = 0xf8; // FScriptMulticastDelegate
		constexpr auto HMDLostDelegate = 0x108; // FScriptMulticastDelegate
		constexpr auto HMDReconnectedDelegate = 0x118; // FScriptMulticastDelegate
		constexpr auto HMDConnectCanceledDelegate = 0x128; // FScriptMulticastDelegate
		constexpr auto HMDPutOnHeadDelegate = 0x138; // FScriptMulticastDelegate
		constexpr auto HMDRemovedFromHeadDelegate = 0x148; // FScriptMulticastDelegate
		constexpr auto VRControllerRecenteredDelegate = 0x158; // FScriptMulticastDelegate
	}

	namespace n_UMovieSceneParticleParameterTrack { // : UMovieSceneNameableTrack
		constexpr auto Sections = 0x58; // TArray<UMovieSceneSection*>
	}

	namespace n_USQBaseHudWidget { // : USQUserWidget
		constexpr auto StateIndicators = 0x230; // UUserWidget*
		constexpr auto AmmoWidget = 0x238; // USQAmmoWidget*
		constexpr auto SightRangeWidget = 0x240; // UUserWidget*
		constexpr auto CompassWidget = 0x248; // USQCompassMK2*
		constexpr auto CaptureZoneWidget = 0x250; // UUserWidget*
		constexpr auto FOBStatusWidget = 0x258; // UUserWidget*
		constexpr auto StaminaWidget = 0x260; // UUserWidget*
		constexpr auto VehicleHealthWidget = 0x268; // UUserWidget*
		constexpr auto ApprovalQueueWidget = 0x270; // USQApprovalQueueWidget*
		constexpr auto SeatProgressWidget = 0x278; // USQSeatProgressWidget*
		constexpr auto StagingTimerText = 0x280; // USQStagingTimerText*
		constexpr auto CenterDotWidget = 0x288; // UUserWidget*
	}

	namespace n_UProgressBar { // : UWidget
		constexpr auto WidgetStyle = 0x108; // FProgressBarStyle
		constexpr auto Style = 0x2a8; // USlateWidgetStyleAsset*
		constexpr auto BackgroundImage = 0x2b0; // USlateBrushAsset*
		constexpr auto FillImage = 0x2b8; // USlateBrushAsset*
		constexpr auto MarqueeImage = 0x2c0; // USlateBrushAsset*
		constexpr auto Percent = 0x2c8; // float
		constexpr auto BarFillType = 0x2cc; // EProgressBarFillType
		constexpr auto bIsMarquee = 0x2cd; // bool
		constexpr auto BorderPadding = 0x2d0; // FVector2D
		constexpr auto PercentDelegate = 0x2d8; // DelegateProperty
		constexpr auto FillColorAndOpacity = 0x2e8; // FLinearColor
		constexpr auto FillColorAndOpacityDelegate = 0x2f8; // DelegateProperty
	}

	namespace n_USQChatWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto ChatStyle = 0x30; // FSQChatStyle
	}

	namespace n_USQMapWidgetRepairStation { // : USQMapWidgetDeployable
		constexpr auto BuildState = 0x2a8; // ESQBuildState
	}

	namespace n_UMaterialExpressionDistanceToNearestSurface { // : UMaterialExpression
		constexpr auto Position = 0x40; // FExpressionInput
	}

	namespace n_ANavigationGraph { // : ANavigationData
		constexpr auto RenderingComp = 0x250; // UPrimitiveComponent*
		constexpr auto NavDataConfig = 0x258; // FNavDataConfig
		constexpr auto bEnableDrawing = 0x2c0; // char : 1
		constexpr auto bForceRebuildOnLoad = 0x2c0; // char : 1
		constexpr auto bCanBeMainNavData = 0x2c0; // char : 1
		constexpr auto bCanSpawnOnRebuild = 0x2c0; // char : 1
		constexpr auto bRebuildAtRuntime = 0x2c0; // char : 1
		constexpr auto RuntimeGeneration = 0x2c4; // ERuntimeGenerationType
		constexpr auto ObservedPathsTickInterval = 0x2c8; // float
		constexpr auto DataVersion = 0x2cc; // uint32
		constexpr auto SupportedAreas = 0x3a0; // TArray<FSupportedAreaData>
	}

	namespace n_UAchievementWriteCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto OnFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_ULevelSequenceBurnIn { // : UUserWidget
		constexpr auto FrameInformation = 0x230; // FLevelSequencePlayerSnapshot
		constexpr auto LevelSequenceActor = 0x2e8; // ALevelSequenceActor*
	}

	namespace n_USSGS_ScreenDataSpecificationRanges { // : USSGS_ScreenDataSpecification
		constexpr auto datas = 0x30; // TArray<FSSGS_FrameDataRange>
	}

	namespace n_ABP_RPG7_Frag_3Mag_Founders_C { // : ABP_RPG7_Frag_3Mag_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
		constexpr auto MuzzleFlashRearComponent3P = 0x7b8; // UParticleSystemComponent*
		constexpr auto BackBlastComponent3P = 0x7c0; // UChildActorComponent*
		constexpr auto MuzzleFlashRearComponent1P = 0x7c8; // UParticleSystemComponent*
		constexpr auto SquadBlast = 0x7d0; // USQBlastComponent*
		constexpr auto BackBlastComponent1P = 0x7d8; // UChildActorComponent*
		constexpr auto BackblastSocket = 0x7e0; // FName
		constexpr auto BackblastEffect1P = 0x7e8; // UParticleSystem*
		constexpr auto BackblastEffect3P = 0x7f0; // UParticleSystem*
	}

	namespace n_AGameState { // : AGameStateBase
		constexpr auto MatchState = 0x288; // FName
		constexpr auto PreviousMatchState = 0x290; // FName
		constexpr auto ElapsedTime = 0x298; // int
	}

	namespace n_USQGameInstanceEvents { // : UObject
		constexpr auto OnPlayerDestroyedVehicle = 0x28; // FScriptMulticastDelegate
		constexpr auto OnPlayerWounded = 0x38; // FScriptMulticastDelegate
		constexpr auto OnPlayerDetonateExplosive = 0x48; // FScriptMulticastDelegate
		constexpr auto OnEnteredMainMenu = 0x58; // FScriptMulticastDelegate
		constexpr auto OnGameStarted = 0x68; // FScriptMulticastDelegate
		constexpr auto OnGameEnded = 0x78; // FScriptMulticastDelegate
	}

	namespace n_ULandscapeMaterialInstanceConstant { // : UMaterialInstanceConstant
		constexpr auto bIsLayerThumbnail = 0x1c8; // char : 1
		constexpr auto bDisableTessellation = 0x1c8; // char : 1
		constexpr auto bMobile = 0x1c8; // char : 1
		constexpr auto bEditorToolUsage = 0x1c8; // char : 1
	}

	namespace n_USQLayer { // : USQPrimaryData
		constexpr auto LevelId = 0x70; // FName
		constexpr auto OuterLevel = 0x78; // USQLevel*
		constexpr auto Worlds = 0x80; // TArray<UWorld*>
		constexpr auto TeamConfigs = 0x90; // TArray<USQLayerTeamConfig*>
		constexpr auto GameFlags = 0xa0; // FSQGameFlags
	}

	namespace n_UGameplayTask { // : UObject
		constexpr auto InstanceName = 0x30; // FName
		constexpr auto ResourceOverlapPolicy = 0x3a; // ETaskResourceOverlapPolicy
		constexpr auto ChildTask = 0x60; // UGameplayTask*
	}

	namespace n_ASQVehicle { // : ASQVehicleSeat
		constexpr auto UsableData = 0x3d8; // FSQUsableData
		constexpr auto DefaultDestroyedVehicleActorClass = 0x418; // ASQDestroyedVehicle*
		constexpr auto DestroyedVehicleConfig = 0x420; // TArray<FSQVehicleDestroyedConfig>
		constexpr auto TemperatureLastingEffectClass = 0x430; // ASQLastingEffect*
		constexpr auto TemperatureLastingEffectAttachSocket = 0x438; // FName
		constexpr auto TemperatureLastingEffect = 0x440; // ASQLastingEffect*
		constexpr auto BurningComponent = 0x448; // USQVehicleBurningComponent*
		constexpr auto ImpactCameraShake = 0x450; // UCameraShake*
		constexpr auto ImpactEffectNormalForceThreshold = 0x458; // float
		constexpr auto LightImpactSound = 0x460; // USoundCue*
		constexpr auto LightImpactEffect = 0x468; // UParticleSystem*
		constexpr auto ImpactSound = 0x470; // USoundCue*
		constexpr auto ImpactEffect = 0x478; // UParticleSystem*
		constexpr auto bDoParticlesUseRotation = 0x480; // bool
		constexpr auto PhysMatEffectsClass = 0x488; // USQPhysicalMaterialVehiclesEffects*
		constexpr auto OnVehicleRepairEvent = 0x490; // FScriptMulticastDelegate
		constexpr auto DestroyedVehicleActor = 0x4a0; // ASQDestroyedVehicle*
		constexpr auto ClaimInfo = 0x4a8; // USQVehicleClaim*
		constexpr auto ClaimedBySquad = 0x4b0; // ASQSquadState*
		constexpr auto bClaimable = 0x4b8; // bool
		constexpr auto bEnterableWithoutClaim = 0x4b9; // bool
		constexpr auto bDrivableWithoutClaim = 0x4ba; // bool
		constexpr auto bNonSquadMembersMayEnterWhenClaimed = 0x4bb; // bool
		constexpr auto NotClaimedCantEnterErrorMessage = 0x4c0; // FText
		constexpr auto FullVehicleCantEnterErrorMessage = 0x4d8; // FText
		constexpr auto EnemyVehicleCantEnterErrorMessage = 0x4f0; // FText
		constexpr auto NotClaimedNeedsApprovalErrorMessage = 0x508; // FText
		constexpr auto NotClaimedNotInSquadErrorMessage = 0x520; // FText
		constexpr auto WrongRoleForClaimErrorMessage = 0x538; // FText
		constexpr auto WrongRoleForSeatErrorMessage = 0x550; // FText
		constexpr auto FullVehicleOrWrongRoleCantEnterErrorMessage = 0x568; // FText
		constexpr auto SeatFilledErrorMessage = 0x580; // FText
		constexpr auto SeatBeingEnteredErrorMessage = 0x598; // FText
		constexpr auto ClaimedByAnotherSquadCantEnterErrorMessage = 0x5b0; // FText
		constexpr auto CrewmanRole = 0x5c8; // FText
		constexpr auto PilotRole = 0x5e0; // FText
		constexpr auto VelocityVsCollisionDamageCurve = 0x5f8; // UCurveFloat*
		constexpr auto CollisionDamageThesholdGs = 0x600; // float
		constexpr auto CollisionsDamageVelocityThreshold = 0x604; // float
		constexpr auto VehicleToOccupantCollisionDamageScaler = 0x608; // float
		constexpr auto BoundaryListener = 0x610; // USQBoundaryListener*
		constexpr auto CollisionDamage = 0x618; // USQCollisionDamage*
		constexpr auto VehicleType = 0x628; // ESQVehicleType
		constexpr auto VehicleIconTexture = 0x630; // UTexture*
		constexpr auto VehicleIconColor = 0x638; // FLinearColor
		constexpr auto VehicleIconOffset = 0x648; // FVector2D
		constexpr auto VehicleIconSize = 0x650; // FVector2D
		constexpr auto LastRepairedTime = 0x658; // float
		constexpr auto PercentDriverGetsForKill = 0x65c; // float
		constexpr auto LastSeatEventTime = 0x660; // float
		constexpr auto bPreventVehicleEntrance = 0x664; // bool
		constexpr auto MaxVehicleEntryDistance = 0x668; // float
		constexpr auto DriverSeatConfig = 0x670; // FSQVehicleSeatConfig
		constexpr auto AdditionalSeatsConfig = 0x6c0; // TArray<FSQVehicleSeatConfig>
		constexpr auto VehicleSeats = 0x6d0; // TArray<USQVehicleSeatComponent*>
		constexpr auto VehicleMesh = 0x6e0; // USkeletalMeshComponent*
		constexpr auto bIsVehicleDamagedByRadialExplosions = 0x6e8; // bool
		constexpr auto OnVehicleDestroyed = 0x6f0; // FScriptMulticastDelegate
		constexpr auto OnPlayerEntered = 0x700; // FScriptMulticastDelegate
		constexpr auto OnPlayerExited = 0x710; // FScriptMulticastDelegate
		constexpr auto OnPlayerSwitchedSeats = 0x720; // FScriptMulticastDelegate
		constexpr auto AmmoUpdatedEvent = 0x730; // FScriptMulticastDelegate
		constexpr auto OnVehicleEnterSound = 0x740; // USoundCue*
		constexpr auto OnVehicleExitSound = 0x748; // USoundCue*
		constexpr auto OnSeatSwitchSound = 0x750; // USoundCue*
		constexpr auto Buffs = 0x758; // USQBuffManager*
		constexpr auto Health = 0x760; // float
		constexpr auto MaxHealth = 0x764; // float
		constexpr auto LastDamageTypeClass = 0x768; // UDamageType*
		constexpr auto LastDamageInstigator = 0x770; // AController*
		constexpr auto bCanStackRepairers = 0x778; // bool
		constexpr auto MaxRepairToolLimit = 0x77c; // float
		constexpr auto LastDamageInstigatorTimeoutThreshold = 0x780; // float
		constexpr auto FlipPitchThreshold = 0x78c; // float
		constexpr auto FlipRollThreshold = 0x790; // float
		constexpr auto FlipSpeedThreshold = 0x794; // float
		constexpr auto FlipRotationExceededTimeThreshold = 0x79c; // float
		constexpr auto DestroyTime = 0x7a0; // float
		constexpr auto bHasBeenDestroyed = 0x7a4; // bool
		constexpr auto AllowableDamageTypes = 0x7a8; // TArray<FSQDamageModifier>
		constexpr auto DamageEffects = 0x7b8; // FSQDamageTypeEffects
		constexpr auto StaticUIData = 0x7e0; // USQVehicleUIStaticDataAsset*
		constexpr auto MaxThrottle = 0x7e8; // float
		constexpr auto PlayerSeatPairInfoArray = 0x7f0; // TArray<FSQVehicleQueueEntry>
		constexpr auto CurrentRepairers = 0x808; // TArray<AActor*>
		constexpr auto Setting = 0x818; // USQVehicleSettings*
	}

	namespace n_UBP_M4_M68_StaticInfo_C { // : UBP_M4_StaticInfo_C
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_ASQTrackedVehicle { // : ASQGroundVehicle
		constexpr auto VehicleEffectsQualitySettings = 0x820; // TArray<FSQVehicleEffectsQualitySetting>
		constexpr auto VehicleEffectsConfig = 0x830; // TArray<FSQVehicleEffectConfig>
		constexpr auto WheelFXSound_RPMRate = 0x840; // FVector2D
		constexpr auto WheelFXSound_LongSlipRate = 0x848; // FVector2D
		constexpr auto WheelFXSound_LatSlipRate = 0x850; // FVector2D
		constexpr auto bEjectOpenSeatsOnHardLanding = 0x858; // bool
		constexpr auto bDrawDebugTraces = 0x859; // bool
		constexpr auto HardLandingCheckTimer = 0x860; // FTimerHandle
		constexpr auto IsFlyingTimer = 0x868; // FTimerHandle
		constexpr auto IsFlyingUpdateInterval = 0x870; // float
		constexpr auto IsHardLandingUpdateInterval = 0x874; // float
		constexpr auto LandingTraceSockets = 0x878; // TArray<FName>
		constexpr auto LandingTraceLenght = 0x888; // float
		constexpr auto bIsFlying = 0x88c; // bool
		constexpr auto LastFlyingZVelocity = 0x890; // float
		constexpr auto EjectZVelocityThreshold = 0x894; // float
		constexpr auto EmergencyTeleportCooldownSeconds = 0x898; // int
		constexpr auto LandingCheckActorsToIgnore = 0x8a0; // TArray<AActor*>
		constexpr auto VehicleCleanupComponent = 0x8b0; // USQVehicleCleanupComponent*
		constexpr auto bShouldSimulate = 0x8b8; // bool
		constexpr auto EngineRPMSound = 0x8c0; // USoundCue*
		constexpr auto EngineRPMAC = 0x8c8; // UAudioComponent*
		constexpr auto EngineExhaustSound = 0x8d0; // USoundCue*
		constexpr auto EngineExhaustStartAC = 0x8d8; // UAudioComponent*
		constexpr auto EngineExhaustAC = 0x8e0; // UAudioComponent*
		constexpr auto EngineExhaustStopAC = 0x8e8; // UAudioComponent*
		constexpr auto EngineStartSound = 0x8f0; // USoundCue*
		constexpr auto EngineCompletedStartAC = 0x8f8; // UAudioComponent*
		constexpr auto EngineCompletedStartSound = 0x900; // USoundCue*
		constexpr auto EngineFailedStartAC = 0x908; // UAudioComponent*
		constexpr auto EngineFailedStartSound = 0x910; // USoundCue*
		constexpr auto EngineStartAC = 0x918; // UAudioComponent*
		constexpr auto EngineStopSound = 0x920; // USoundCue*
		constexpr auto EngineStopAC = 0x928; // UAudioComponent*
		constexpr auto EngineSpeedAC = 0x930; // UAudioComponent*
		constexpr auto WheelFXAC = 0x938; // UAudioComponent*
		constexpr auto LandingSound = 0x940; // USoundCue*
		constexpr auto EngineIdleFadeInAfterEngineStartTime = 0x948; // float
		constexpr auto EngineIdleFadeOutAfterEngineStopTime = 0x94c; // float
		constexpr auto SpringCompressionLandingThreshold = 0x950; // float
		constexpr auto SkidThresholdVelocity = 0x954; // float
		constexpr auto LongSlipSkidThreshold = 0x958; // float
		constexpr auto LateralSlipSkidThreshold = 0x95c; // float
		constexpr auto ExhaustPSC = 0x960; // UParticleSystemComponent*
		constexpr auto bTiresTouchingGround = 0x968; // bool
		constexpr auto bHandbrakeActive = 0x969; // bool
		constexpr auto bIsEngineActive = 0x96a; // bool
		constexpr auto bIsEngineToggleActive = 0x96b; // bool
		constexpr auto bAllowEngineBoosting = 0x96c; // bool
		constexpr auto EngineBoostTorqueMultiplier = 0x970; // float
		constexpr auto bHasEngineBoostBeenPressed = 0x974; // bool
		constexpr auto EngineMovementSounds = 0x978; // TArray<FSQEngineMovementSoundObject>
		constexpr auto ActivateEngineDelay = 0x988; // float
		constexpr auto DeActivateEngineDelay = 0x98c; // float
		constexpr auto GearChangingAlphaLerpSpeed = 0x9a4; // float
		constexpr auto VehicleMovement = 0x9a8; // UWheeledVehicleMovementComponent*
		constexpr auto VehicleRagdollOverlap = 0x9b0; // UBoxComponent*
		constexpr auto RagollOverlapTriggerSpeed = 0x9b8; // float
		constexpr auto CollisionKillSpeedKPH = 0x9bc; // int
		constexpr auto bCollisionsKillSoldiers = 0x9c0; // bool
		constexpr auto WheelInflationRate = 0x9c4; // float
	}

	namespace n_UReflectionCaptureComponent { // : USceneComponent
		constexpr auto CaptureOffsetComponent = 0x218; // UBillboardComponent*
		constexpr auto ReflectionSourceType = 0x220; // EReflectionSourceType
		constexpr auto Cubemap = 0x228; // UTextureCube*
		constexpr auto SourceCubemapAngle = 0x230; // float
		constexpr auto Brightness = 0x234; // float
		constexpr auto CaptureOffset = 0x238; // FVector
		constexpr auto MapBuildDataId = 0x244; // FGuid
	}

	namespace n_USQChunkSettings { // : UDeveloperSettings
		constexpr auto LevelsToCook = 0x38; // TArray<USQLevel*>
		constexpr auto LayersToCook = 0x48; // TArray<USQLayer*>
		constexpr auto FactionsToCook = 0x58; // TArray<USQFaction*>
		constexpr auto FactionSetupsToCook = 0x68; // TArray<USQFactionSetup*>
		constexpr auto ChunkRules = 0x78; // TArray<FSQChunkRule>
	}

	namespace n_ULandscapeSplineSegment { // : UObject
		constexpr auto Connections = 0x28; // FLandscapeSplineSegmentConnection [0x2]
		constexpr auto SplineInfo = 0x58; // FInterpCurveVector
		constexpr auto Points = 0x70; // TArray<FLandscapeSplineInterpPoint>
		constexpr auto Bounds = 0x80; // FBox
		constexpr auto LocalMeshComponents = 0xa0; // TArray<USplineMeshComponent*>
	}

	namespace n_UDatasmithCommonTessellationOptions { // : UObject
		constexpr auto Options = 0x28; // FDatasmithTessellationOptions
	}

	namespace n_USimpleWheeledVehicleMovementComponent { // : UWheeledVehicleMovementComponent
		constexpr auto bDeprecatedSpringOffsetMode = 0x168; // char : 1
		constexpr auto bReverseAsBrake = 0x168; // char : 1
		constexpr auto bUseRVOAvoidance = 0x168; // char : 1
		constexpr auto bRawHandbrakeInput = 0x168; // char : 1
		constexpr auto bRawGearUpInput = 0x168; // char : 1
		constexpr auto bRawGearDownInput = 0x168; // char : 1
		constexpr auto bWasAvoidanceUpdated = 0x16c; // char : 1
		constexpr auto Mass = 0x170; // float
		constexpr auto WheelSetups = 0x178; // TArray<FWheelSetup>
		constexpr auto DragCoefficient = 0x188; // float
		constexpr auto ChassisWidth = 0x18c; // float
		constexpr auto ChassisHeight = 0x190; // float
		constexpr auto DragArea = 0x194; // float
		constexpr auto EstimatedMaxEngineSpeed = 0x198; // float
		constexpr auto MaxEngineRPM = 0x19c; // float
		constexpr auto DebugDragMagnitude = 0x1a0; // float
		constexpr auto InertiaTensorScale = 0x1a4; // FVector
		constexpr auto MinNormalizedTireLoad = 0x1b0; // float
		constexpr auto MinNormalizedTireLoadFiltered = 0x1b4; // float
		constexpr auto MaxNormalizedTireLoad = 0x1b8; // float
		constexpr auto MaxNormalizedTireLoadFiltered = 0x1bc; // float
		constexpr auto ThresholdLongitudinalSpeed = 0x1c0; // float
		constexpr auto LowForwardSpeedSubStepCount = 0x1c4; // int
		constexpr auto HighForwardSpeedSubStepCount = 0x1c8; // int
		constexpr auto Wheels = 0x1d0; // TArray<UVehicleWheel*>
		constexpr auto RVOAvoidanceRadius = 0x1f8; // float
		constexpr auto RVOAvoidanceHeight = 0x1fc; // float
		constexpr auto AvoidanceConsiderationRadius = 0x200; // float
		constexpr auto RVOSteeringStep = 0x204; // float
		constexpr auto RVOThrottleStep = 0x208; // float
		constexpr auto AvoidanceUID = 0x20c; // int
		constexpr auto AvoidanceGroup = 0x210; // FNavAvoidanceMask
		constexpr auto GroupsToAvoid = 0x214; // FNavAvoidanceMask
		constexpr auto GroupsToIgnore = 0x218; // FNavAvoidanceMask
		constexpr auto AvoidanceWeight = 0x21c; // float
		constexpr auto PendingLaunchVelocity = 0x220; // FVector
		constexpr auto ReplicatedState = 0x22c; // FReplicatedVehicleState
		constexpr auto RawSteeringInput = 0x244; // float
		constexpr auto RawThrottleInput = 0x248; // float
		constexpr auto RawBrakeInput = 0x24c; // float
		constexpr auto SteeringInput = 0x250; // float
		constexpr auto ThrottleInput = 0x254; // float
		constexpr auto BrakeInput = 0x258; // float
		constexpr auto HandbrakeInput = 0x25c; // float
		constexpr auto IdleBrakeInput = 0x260; // float
		constexpr auto StopThreshold = 0x264; // float
		constexpr auto WrongDirectionThreshold = 0x268; // float
		constexpr auto InvertDirectionThreshold = 0x26c; // float
		constexpr auto LowRPMRatio = 0x270; // float
		constexpr auto SpeedInsteadOfRPMRatiosForShifting = 0x274; // bool
		constexpr auto ThrottleInputRate = 0x278; // FVehicleInputRate
		constexpr auto BrakeInputRate = 0x280; // FVehicleInputRate
		constexpr auto HandbrakeInputRate = 0x288; // FVehicleInputRate
		constexpr auto SteeringInputRate = 0x290; // FVehicleInputRate
		constexpr auto EngineOffSteeringInputRate = 0x298; // FVehicleInputRate
		constexpr auto OverrideController = 0x2c8; // AController*
		constexpr auto bUseCustomAutoGearBox = 0x2d0; // bool
	}

	namespace n_UDatasmithAreaLightActorTemplate { // : UDatasmithObjectTemplate
		constexpr auto LightType = 0x30; // EDatasmithAreaLightActorType
		constexpr auto LightShape = 0x31; // EDatasmithAreaLightActorShape
		constexpr auto Dimensions = 0x34; // FVector2D
		constexpr auto Color = 0x3c; // FLinearColor
		constexpr auto Intensity = 0x4c; // float
		constexpr auto IntensityUnits = 0x50; // ELightUnits
		constexpr auto Temperature = 0x54; // float
		constexpr auto IESTexture = 0x58; // UTextureLightProfile*
		constexpr auto bUseIESBrightness = 0x80; // bool
		constexpr auto IESBrightnessScale = 0x84; // float
		constexpr auto Rotation = 0x88; // FRotator
		constexpr auto SourceRadius = 0x94; // float
		constexpr auto SourceLength = 0x98; // float
		constexpr auto AttenuationRadius = 0x9c; // float
	}

	namespace n_UBP_Attachment_AKS74_Front_C { // : USQWeaponAttachment_Scope
		constexpr auto MeshTransitionPercentage = 0x4b0; // float
		constexpr auto ADSMesh = 0x4b8; // UStaticMesh*
		constexpr auto ADSMeshTransform = 0x4c0; // FTransform
		constexpr auto NonADSMesh = 0x4f0; // UStaticMesh*
		constexpr auto NonADSMeshTransform = 0x500; // FTransform
		constexpr auto InToADSMeshTransitionSettings = 0x530; // TArray<FSQMeshTransitionSettings>
		constexpr auto OutFromADSMeshTransitionSettings = 0x540; // TArray<FSQMeshTransitionSettings>
	}

	namespace n_ABP_AK74MGP25_1P78_UGL_Parent_C { // : ABP_AK74GP25_UGL_Parent_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UBP_AK74MGP25_Rifle_StaticInfo_C { // : UBP_AK74GP25_Rifle_StaticInfo_C
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_ASQPlayerController { // : APlayerController
		constexpr auto AuthorityTeam = 0x5a0; // ASQTeam*
		constexpr auto TeamState = 0x5a8; // ASQTeamState*
		constexpr auto PrivateTeamState = 0x5b0; // ASQTeamStatePrivate*
		constexpr auto AuthoritySquad = 0x5b8; // ASQSquad*
		constexpr auto SquadState = 0x5c0; // ASQSquadState*
		constexpr auto TeamPrivateSquadState = 0x5c8; // ASQSquadStatePrivateToTeam*
		constexpr auto StateConnection = 0x5d0; // USQCoreStateConnection*
		constexpr auto SpawnMenuPopupDelay = 0x5d8; // float
		constexpr auto LastSpawnedSoldier = 0x5e0; // ASQSoldier*
		constexpr auto AreCommunicationButtonsAllowed = 0x5e9; // bool
		constexpr auto bIsCrouchedDuringMenu = 0x5ea; // char : 1
		constexpr auto bIsPronedDuringMenu = 0x5ea; // char : 1
		constexpr auto IsWinner = 0x5eb; // bool
		constexpr auto TimeBecameIncapacitated = 0x5ec; // float
		constexpr auto SpawnDelayPenalties = 0x5f0; // float
		constexpr auto MaxSpawnDelay = 0x5f4; // float
		constexpr auto bWasInVehicle = 0x5f8; // bool
		constexpr auto AccessLevel = 0x5fc; // FSQBitFlag
		constexpr auto OnPlayerEnterVehicleEvent = 0x618; // FScriptMulticastDelegate
		constexpr auto OnPlayerExitVehicleEvent = 0x628; // FScriptMulticastDelegate
		constexpr auto OnRallyCreated = 0x638; // FScriptMulticastDelegate
		constexpr auto OnChatStarted = 0x650; // FScriptMulticastDelegate
		constexpr auto ToastWidgetClass = 0x660; // USQToastWidget*
		constexpr auto ChangeRoleNoAmmoText = 0x668; // FText
		constexpr auto AmmoBagNoAmmoText = 0x680; // FText
		constexpr auto MaxAmmoBagText = 0x698; // FText
		constexpr auto RearmFromAmmoBagText = 0x6b0; // FText
		constexpr auto RoleCannotPickupAmmoBagText = 0x6c8; // FText
		constexpr auto RearmFromVehicleNoAmmoText = 0x6e0; // FText
		constexpr auto RearmFromVehicleConfirmationText = 0x6f8; // FText
		constexpr auto RearmFromVehiclePromptText = 0x710; // FText
		constexpr auto CannotStartVehicleInStagingPhaseText = 0x728; // FText
		constexpr auto WalkingOriginRebaseThreshold = 0x740; // float
		constexpr auto RidingOriginRebaseThreshold = 0x744; // float
		constexpr auto FlyingOriginRebaseThreshold = 0x748; // float
		constexpr auto LeaveVehicleOriginRebaseThreshold = 0x74c; // float
		constexpr auto OriginRebaseFrequency = 0x750; // float
		constexpr auto MapMarkerArray = 0x758; // TArray<ASQMapMarker*>
		constexpr auto MapMarkerInputComponent = 0x768; // USQMapMarkerInputComponent*
		constexpr auto OnNewMarkerCreatedEvent = 0x770; // FScriptMulticastDelegate
		constexpr auto AdminStats = 0x780; // USQAdminStats*
		constexpr auto SpawnableActors = 0x788; // TArray<AActor*>
		constexpr auto ApprovalMessages = 0x798; // UDataTable*
		constexpr auto CurrentSeat = 0x7a0; // USQVehicleSeatComponent*
		constexpr auto AlwaysRenderPawnsDistance = 0x860; // float
		constexpr auto MusicAC = 0x898; // UAudioComponent*
		constexpr auto MusicSound = 0x8a0; // USoundBase*
		constexpr auto QueuedSystemMessages = 0x8a8; // TArray<FSQSystemHUDMessage>
		constexpr auto RefreshTypes = 0x8b8; // TArray<APawn*>
		constexpr auto DataGatheringComponent = 0x8c8; // USQDataGatheringComponent*
		constexpr auto CommanderInputComponent = 0x8d0; // USQCommanderInputComponent*
		constexpr auto BoundaryListener = 0x8d8; // USQBoundaryListener*
		constexpr auto OutOfMapBoundsKillTimestamp = 0x8e0; // float
		constexpr auto LastRefreshedPawn = 0x8e8; // APawn*
		constexpr auto SelectedSpawn = 0x8f0; // ASQGameSpawn*
		constexpr auto ApprovalEntries = 0x900; // TMap<uint32, FSQApprovalEntryRequest>
		constexpr auto ApprovalEntriesOnClient = 0x950; // TMap<uint32, FSQApprovalEntryClientDesc>
		constexpr auto PawnRenderDistance = 0x9c0; // float
		constexpr auto CachedPlayersToMute = 0x9f8; // TMap<FUniqueNetIdRepl, ASQPlayerState*>
		constexpr auto Networker = 0xa48; // USQMovementComponentNetworker*
		constexpr auto ActiveGhost = 0xa50; // ASQDeployable*
		constexpr auto IsDeployingItem = 0xa58; // bool
		constexpr auto VotingComponentClass = 0xa60; // USQVotingComponent*
		constexpr auto VotingComponent = 0xa68; // USQVotingComponent*
	}

	namespace n_UContentWidget { // : UPanelWidget
		constexpr auto Slots = 0x108; // TArray<UPanelSlot*>
	}

	namespace n_UInputKeyDelegateBinding { // : UInputDelegateBinding
		constexpr auto InputKeyDelegateBindings = 0x28; // TArray<FBlueprintInputKeyDelegateBinding>
	}

	namespace n_ASQDeployableItem { // : ASQDeployable
		constexpr auto InstigatingPlayerController = 0x410; // ASQPlayerController*
		constexpr auto InstigatingPlayerState = 0x418; // ASQPlayerState*
		constexpr auto MaxAllowedPerPlayerInGame = 0x420; // int
		constexpr auto TrackDeployableOverMaxResult = 0x424; // ESQTrackDeployableResult
		constexpr auto EquippableInstigatorClass = 0x428; // ASQEquipableItem*
	}

	namespace n_UMovieSceneImageCaptureProtocolBase { // : UMovieSceneCaptureProtocolBase
		constexpr auto State = 0x50; // EMovieSceneCaptureProtocolState
	}

	namespace n_AGameplayAbilityWorldReticle_ActorVisualization { // : AGameplayAbilityWorldReticle
		constexpr auto CollisionComponent = 0x268; // UCapsuleComponent*
		constexpr auto VisualizationComponents = 0x270; // TArray<UActorComponent*>
	}

	namespace n_ABP_M4_2Mags_Woodland_C { // : ABP_M4_2Mags_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_USQReplaySubsystem { // : UGameInstanceSubsystem
		constexpr auto DatedReplaySubDirectory = 0x30; // FString
		constexpr auto NamedReplaySubDirectory = 0x40; // FString
		constexpr auto bUseMultithreading = 0x50; // bool
	}

	namespace n_UMovieSceneSlomoTrack { // : UMovieSceneFloatTrack
		constexpr auto SectionToKey = 0x58; // UMovieSceneSection*
		constexpr auto PropertyName = 0x60; // FName
		constexpr auto PropertyPath = 0x68; // FString
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_UBP_M4M203_M68_UGL_Parent_StaticInfo_C { // : UBP_M4M203_UGL_Parent_StaticInfo_C
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_USQWoundedDamageType { // : USQDamageType
		constexpr auto bCanCauseBleeding = 0x40; // bool
	}

	namespace n_USoundEffectSourcePresetChain { // : UObject
		constexpr auto Chain = 0x28; // TArray<FSourceEffectChainEntry>
		constexpr auto bPlayEffectChainTails = 0x38; // char : 1
	}

	namespace n_ABP_AK74GP25_UGL_Parent_C { // : ABP_Weapon2_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UWidgetAnimation { // : UMovieSceneSequence
		constexpr auto MovieScene = 0x348; // UMovieScene*
		constexpr auto AnimationBindings = 0x350; // TArray<FWidgetAnimationBinding>
		constexpr auto bLegacyFinishOnStop = 0x360; // bool
		constexpr auto DisplayLabel = 0x368; // FString
	}

	namespace n_USSGS_ColorEffectSpecificationGradient { // : USSGS_ColorEffectSpecification
		constexpr auto Gradient = 0x30; // FSSGS_ColorGradient
	}

	namespace n_UExponentialHeightFogComponent { // : USceneComponent
		constexpr auto FogDensity = 0x218; // float
		constexpr auto FogHeightFalloff = 0x21c; // float
		constexpr auto SecondFogData = 0x220; // FExponentialHeightFogData
		constexpr auto FogInscatteringColor = 0x22c; // FLinearColor
		constexpr auto InscatteringColorCubemap = 0x240; // UTextureCube*
		constexpr auto InscatteringColorCubemapAngle = 0x248; // float
		constexpr auto InscatteringTextureTint = 0x24c; // FLinearColor
		constexpr auto FullyDirectionalInscatteringColorDistance = 0x25c; // float
		constexpr auto NonDirectionalInscatteringColorDistance = 0x260; // float
		constexpr auto DirectionalInscatteringExponent = 0x264; // float
		constexpr auto DirectionalInscatteringStartDistance = 0x268; // float
		constexpr auto DirectionalInscatteringColor = 0x26c; // FLinearColor
		constexpr auto FogMaxOpacity = 0x27c; // float
		constexpr auto StartDistance = 0x280; // float
		constexpr auto FogCutoffDistance = 0x284; // float
		constexpr auto bEnableVolumetricFog = 0x288; // bool
		constexpr auto VolumetricFogScatteringDistribution = 0x28c; // float
		constexpr auto VolumetricFogAlbedo = 0x290; // FColor
		constexpr auto VolumetricFogEmissive = 0x294; // FLinearColor
		constexpr auto VolumetricFogExtinctionScale = 0x2a4; // float
		constexpr auto VolumetricFogDistance = 0x2a8; // float
		constexpr auto VolumetricFogStaticLightingScatteringIntensity = 0x2ac; // float
		constexpr auto bOverrideLightColorsWithFogInscatteringColors = 0x2b0; // bool
	}

	namespace n_UCheckBox { // : UContentWidget
		constexpr auto CheckedState = 0x120; // ECheckBoxState
		constexpr auto CheckedStateDelegate = 0x124; // DelegateProperty
		constexpr auto WidgetStyle = 0x138; // FCheckBoxStyle
		constexpr auto Style = 0x6b8; // USlateWidgetStyleAsset*
		constexpr auto UncheckedImage = 0x6c0; // USlateBrushAsset*
		constexpr auto UncheckedHoveredImage = 0x6c8; // USlateBrushAsset*
		constexpr auto UncheckedPressedImage = 0x6d0; // USlateBrushAsset*
		constexpr auto CheckedImage = 0x6d8; // USlateBrushAsset*
		constexpr auto CheckedHoveredImage = 0x6e0; // USlateBrushAsset*
		constexpr auto CheckedPressedImage = 0x6e8; // USlateBrushAsset*
		constexpr auto UndeterminedImage = 0x6f0; // USlateBrushAsset*
		constexpr auto UndeterminedHoveredImage = 0x6f8; // USlateBrushAsset*
		constexpr auto UndeterminedPressedImage = 0x700; // USlateBrushAsset*
		constexpr auto HorizontalAlignment = 0x708; // EHorizontalAlignment
		constexpr auto Padding = 0x70c; // FMargin
		constexpr auto BorderBackgroundColor = 0x720; // FSlateColor
		constexpr auto IsFocusable = 0x748; // bool
		constexpr auto OnCheckStateChanged = 0x750; // FScriptMulticastDelegate
	}

	namespace n_UBP_MapWidgetCameraman_C { // : USQMapWidgetCameraman
		constexpr auto UberGraphFrame = 0x2b8; // FPointerToUberGraphFrame
		constexpr auto Player_Cone_Image = 0x2c0; // UImage*
		constexpr auto Player_Image = 0x2c8; // UImage*
		constexpr auto ScaleBox_1 = 0x2d0; // UScaleBox*
		constexpr auto WidgetOverlay = 0x2d8; // UOverlay*
	}

	namespace n_UHLODProxy { // : UObject
		constexpr auto ProxyMeshes = 0x28; // TArray<FHLODProxyMesh>
	}

	namespace n_UBTDecorator_CompareBBEntries { // : UBTDecorator
		constexpr auto Operator = 0x68; // EBlackBoardEntryComparison
		constexpr auto BlackboardKeyA = 0x70; // FBlackboardKeySelector
		constexpr auto BlackboardKeyB = 0x98; // FBlackboardKeySelector
	}

	namespace n_UCameraShake { // : UObject
		constexpr auto bSingleInstance = 0x28; // char : 1
		constexpr auto OscillationDuration = 0x2c; // float
		constexpr auto OscillationBlendInTime = 0x30; // float
		constexpr auto OscillationBlendOutTime = 0x34; // float
		constexpr auto RotOscillation = 0x38; // FROscillator
		constexpr auto LocOscillation = 0x5c; // FVOscillator
		constexpr auto FOVOscillation = 0x80; // FFOscillator
		constexpr auto AnimPlayRate = 0x8c; // float
		constexpr auto AnimScale = 0x90; // float
		constexpr auto AnimBlendInTime = 0x94; // float
		constexpr auto AnimBlendOutTime = 0x98; // float
		constexpr auto RandomAnimSegmentDuration = 0x9c; // float
		constexpr auto Anim = 0xa0; // UCameraAnim*
		constexpr auto bRandomAnimSegment = 0xa8; // char : 1
		constexpr auto CameraOwner = 0xc0; // APlayerCameraManager*
		constexpr auto ShakeScale = 0x148; // float
		constexpr auto OscillatorTimeRemaining = 0x14c; // float
		constexpr auto AnimInst = 0x150; // UCameraAnimInst*
	}

	namespace n_UMovieSceneCaptureProtocolBase { // : UObject
		constexpr auto State = 0x50; // EMovieSceneCaptureProtocolState
	}

	namespace n_ABP_Weapon2_C { // : ASQInfantryWeapon
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UMediaPlayer { // : UObject
		constexpr auto OnEndReached = 0x28; // FScriptMulticastDelegate
		constexpr auto OnMediaClosed = 0x38; // FScriptMulticastDelegate
		constexpr auto OnMediaOpened = 0x48; // FScriptMulticastDelegate
		constexpr auto OnMediaOpenFailed = 0x58; // FScriptMulticastDelegate
		constexpr auto OnPlaybackResumed = 0x68; // FScriptMulticastDelegate
		constexpr auto OnPlaybackSuspended = 0x78; // FScriptMulticastDelegate
		constexpr auto OnSeekCompleted = 0x88; // FScriptMulticastDelegate
		constexpr auto OnTracksChanged = 0x98; // FScriptMulticastDelegate
		constexpr auto CacheAhead = 0xa8; // FTimespan
		constexpr auto CacheBehind = 0xb0; // FTimespan
		constexpr auto CacheBehindGame = 0xb8; // FTimespan
		constexpr auto NativeAudioOut = 0xc0; // bool
		constexpr auto PlayOnOpen = 0xc1; // bool
		constexpr auto Shuffle = 0xc4; // char : 1
		constexpr auto Loop = 0xc4; // char : 1
		constexpr auto Playlist = 0xc8; // UMediaPlaylist*
		constexpr auto PlaylistIndex = 0xd0; // int
		constexpr auto TimeDelay = 0xd8; // FTimespan
		constexpr auto HorizontalFieldOfView = 0xe0; // float
		constexpr auto VerticalFieldOfView = 0xe4; // float
		constexpr auto ViewRotation = 0xe8; // FRotator
		constexpr auto PlayerGuid = 0x120; // FGuid
	}

	namespace n_ABP_Shockwave_C { // : AActor
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto ShockwaveRoot = 0x250; // USceneComponent*
		constexpr auto Emitter Being Played = 0x258; // UParticleSystem*
		constexpr auto VerticalSteps = 0x260; // int
		constexpr auto HorizontalSteps = 0x264; // int
		constexpr auto EffectsClass = 0x268; // USQPhysicalMaterialEffects*
	}

	namespace n_ABP_AK74GP25_UGL_Smoke_Red_C { // : ABP_AK74GP25_UGL_Smoke_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_USQSquadStateDataMapMarkerObjective { // : USQSquadStateDataMapMarker
		constexpr auto Texture = 0x180; // UTexture2D*
		constexpr auto Tint = 0x188; // FLinearColor
		constexpr auto FireTeamId = 0x198; // int
	}

	namespace n_AParticleEventManager { // : AActor
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto bHidden = 0x80; // char : 1
		constexpr auto bNetTemporary = 0x80; // char : 1
		constexpr auto bNetStartup = 0x80; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x80; // char : 1
		constexpr auto bAlwaysRelevant = 0x80; // char : 1
		constexpr auto bReplicateMovement = 0x80; // char : 1
		constexpr auto bTearOff = 0x80; // char : 1
		constexpr auto bExchangedRoles = 0x80; // char : 1
		constexpr auto bNetLoadOnClient = 0x81; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x81; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x81; // char : 1
		constexpr auto bRelevantForLevelBounds = 0x81; // char : 1
		constexpr auto bReplayRewindable = 0x81; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x81; // char : 1
		constexpr auto bAutoDestroyWhenFinished = 0x81; // char : 1
		constexpr auto bBlockInput = 0x81; // char : 1
		constexpr auto bCanBeDamaged = 0x82; // char : 1
		constexpr auto bCollideWhenPlacing = 0x82; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x82; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x82; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x82; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x82; // char : 1
		constexpr auto bIsEditorOnlyActor = 0x82; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x82; // char : 1
		constexpr auto bReplicates = 0x83; // char : 1
		constexpr auto bCanBeInCluster = 0x83; // char : 1
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x83; // char : 1
		constexpr auto bActorEnableCollision = 0x84; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x84; // char : 1
		constexpr auto RemoteRole = 0x85; // ENetRole
		constexpr auto ReplicatedMovement = 0x88; // FRepMovement
		constexpr auto InitialLifeSpan = 0xbc; // float
		constexpr auto CustomTimeDilation = 0xc0; // float
		constexpr auto AttachmentReplication = 0xc8; // FRepAttachment
		constexpr auto Owner = 0x108; // AActor*
		constexpr auto NetDriverName = 0x110; // FName
		constexpr auto Role = 0x118; // ENetRole
		constexpr auto NetDormancy = 0x119; // ENetDormancy
		constexpr auto SpawnCollisionHandlingMethod = 0x11a; // ESpawnActorCollisionHandlingMethod
		constexpr auto AutoReceiveInput = 0x11b; // EAutoReceiveInput
		constexpr auto InputPriority = 0x11c; // int
		constexpr auto InputComponent = 0x120; // UInputComponent*
		constexpr auto NetCullDistanceSquared = 0x128; // float
		constexpr auto NetTag = 0x12c; // int
		constexpr auto NetUpdateFrequency = 0x130; // float
		constexpr auto MinNetUpdateFrequency = 0x134; // float
		constexpr auto bUseRelativeNetUpdateFrequency = 0x138; // char : 1
		constexpr auto bUseOwnerRelativeNetUpdateFrequency = 0x138; // char : 1
		constexpr auto MinRelativeNetUpdateEvaluationFrequency = 0x13c; // float
		constexpr auto NetPriority = 0x140; // float
		constexpr auto Instigator = 0x148; // APawn*
		constexpr auto Children = 0x150; // TArray<AActor*>
		constexpr auto RootComponent = 0x160; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x168; // TArray<AMatineeActor*>
		constexpr auto Layers = 0x180; // TArray<FName>
		constexpr auto ParentComponent = 0x190; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto Tags = 0x198; // TArray<FName>
		constexpr auto OnTakeAnyDamage = 0x1a8; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x1a9; // FScriptMulticastDelegate
		constexpr auto OnTakeRadialDamage = 0x1aa; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x1ab; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x1ac; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x1ad; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x1ae; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x1af; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x1b0; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x1b1; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x1b2; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x1b3; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x1b4; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x1b5; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x1b6; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x1b7; // FScriptMulticastDelegate
		constexpr auto InstanceComponents = 0x218; // TArray<UActorComponent*>
		constexpr auto BlueprintCreatedComponents = 0x228; // TArray<UActorComponent*>
	}

	namespace n_USSGS_FrameObject { // : USSGS_Frame
		constexpr auto properties = 0x30; // TArray<FSSGS_KeyValuePair>
	}

	namespace n_ABP_M4M203_Rifle_Woodland_C { // : ABP_M4M203_Rifle_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UFontImportOptions { // : UObject
		constexpr auto Data = 0x28; // FFontImportOptionsData
	}

	namespace n_ASQJoinBeaconHost { // : AOnlineBeaconHostObject
		constexpr auto PublicQueue = 0x270; // TArray<FSQServerSlot>
		constexpr auto ReservedQueue = 0x280; // TArray<FSQServerSlot>
		constexpr auto JoiningServerSlots = 0x290; // TArray<FSQServerSlot>
	}

	namespace n_USQMapMarkerManagerComponent { // : UActorComponent
		constexpr auto MarkerArray = 0xd8; // FSQStaticMapMarkerArray
		constexpr auto MapMarkerWidgetCreatedEvent = 0x220; // FScriptMulticastDelegate
		constexpr auto RootWidget = 0x230; // USQMapWidgetBase*
		constexpr auto RootHUD = 0x238; // ASQHUD*
		constexpr auto COMarkerTypeLimits = 0x240; // int [0x8]
		constexpr auto SLMarkerTypeLimits = 0x260; // int [0x8]
		constexpr auto FTMarkerTypeLimits = 0x280; // int [0x8]
		constexpr auto WidgetScale = 0x2a0; // float
		constexpr auto RelevantMarkerWidgets = 0x2a8; // TMap<char, USQMapMarkerBase*>
		constexpr auto RelevantMarkers = 0x2f8; // TMap<char, FSQMapMarkerVisualData>
		constexpr auto AdminTypes = 0x3a0; // TArray<APawn*>
	}

	namespace n_UPathFollowingComponent { // : UActorComponent
		constexpr auto MovementComp = 0x110; // UNavMovementComponent*
		constexpr auto MyNavData = 0x120; // ANavigationData*
	}

	namespace n_UPlayFabCloudScriptAPI { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnPlayFabResponse = 0x28; // FScriptMulticastDelegate
		constexpr auto CallAuthenticationContext = 0xa0; // UPlayFabAuthenticationContext*
		constexpr auto RequestJsonObj = 0xa8; // UPlayFabJsonObject*
		constexpr auto ResponseJsonObj = 0xb0; // UPlayFabJsonObject*
	}

	namespace n_UDatasmithAssetUserData { // : UAssetUserData
		constexpr auto MetaData = 0x28; // TMap<FName, FString>
	}

	namespace n_UActorSequenceComponent { // : UActorComponent
		constexpr auto PlaybackSettings = 0xd8; // FMovieSceneSequencePlaybackSettings
		constexpr auto Sequence = 0xf0; // UActorSequence*
		constexpr auto SequencePlayer = 0xf8; // UActorSequencePlayer*
	}

	namespace n_ABP_AKS74U_C { // : ABP_AK74_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UAsyncActionLoadPrimaryAssetClassList { // : UAsyncActionLoadPrimaryAssetBase
		constexpr auto Completed = 0x78; // FScriptMulticastDelegate
	}

	namespace n_UInterpGroupInst { // : UObject
		constexpr auto Group = 0x28; // UInterpGroup*
		constexpr auto GroupActor = 0x30; // AActor*
		constexpr auto TrackInst = 0x38; // TArray<UInterpTrackInst*>
	}

	namespace n_ABP_EnemyScalingSpawn_C { // : ASQGameSpawn
		constexpr auto UberGraphFrame = 0x420; // FPointerToUberGraphFrame
		constexpr auto EnemyDetectionRadius = 0x428; // USphereComponent*
		constexpr auto EnemiesInRadius = 0x430; // int
		constexpr auto RespawnDelayPerPerson = 0x434; // float
		constexpr auto NumEnemiesToDisable = 0x438; // int
	}

	namespace n_USQVehicleEngineComponent { // : USQVehicleEngine
		constexpr auto OnEngineActiveEvent = 0x590; // FScriptMulticastDelegate
		constexpr auto EngineStartSound = 0x5a0; // USoundCue*
		constexpr auto EngineCompletedStartSound = 0x5a8; // USoundCue*
		constexpr auto EngineFailedStartSound = 0x5b0; // USoundCue*
		constexpr auto EngineStopSound = 0x5b8; // USoundCue*
		constexpr auto EngineRPMSound = 0x5c0; // USoundCue*
		constexpr auto EngineExhaustSound = 0x5c8; // USoundCue*
		constexpr auto LandingSound = 0x5d0; // USoundCue*
		constexpr auto EngineIdleFadeInAfterEngineStartTime = 0x5d8; // float
		constexpr auto EngineIdleFadeOutAfterEngineStopTime = 0x5dc; // float
		constexpr auto GearChangingAlphaLerpSpeed = 0x5e0; // float
		constexpr auto EngineMovementSounds = 0x5e8; // TArray<FSQEngineMovementSoundObject>
		constexpr auto EngineExhaustStartAC = 0x5f8; // UAudioComponent*
		constexpr auto EngineRPMAC = 0x600; // UAudioComponent*
		constexpr auto EngineExhaustAC = 0x608; // UAudioComponent*
		constexpr auto EngineExhaustStopAC = 0x610; // UAudioComponent*
		constexpr auto EngineStartAC = 0x618; // UAudioComponent*
		constexpr auto EngineCompletedStartAC = 0x620; // UAudioComponent*
		constexpr auto EngineFailedStartAC = 0x628; // UAudioComponent*
		constexpr auto EngineStopAC = 0x630; // UAudioComponent*
		constexpr auto EngineSpeedAC = 0x638; // UAudioComponent*
		constexpr auto ExhaustPSC = 0x640; // UParticleSystemComponent*
		constexpr auto EngineVibrationCameraShake = 0x648; // UCameraShake*
		constexpr auto RPMToShakeScaleCurve = 0x650; // UCurveFloat*
		constexpr auto bIsEngineActive = 0x658; // bool
		constexpr auto bIsEngineToggleActive = 0x659; // bool
		constexpr auto ActivateEngineDelay = 0x65c; // float
		constexpr auto DeActivateEngineDelay = 0x660; // float
		constexpr auto VibrationCameraShake = 0x670; // UCameraShake*
		constexpr auto VibrationCameraManager = 0x678; // APlayerCameraManager*
	}

	namespace n_AWorldSettings { // : AInfo
		constexpr auto VisibilityCellSize = 0x250; // int
		constexpr auto VisibilityAggressiveness = 0x254; // EVisibilityAggressiveness
		constexpr auto bPrecomputeVisibility = 0x255; // char : 1
		constexpr auto bPlaceCellsOnlyAlongCameraTracks = 0x255; // char : 1
		constexpr auto bEnableWorldBoundsChecks = 0x255; // char : 1
		constexpr auto bEnableNavigationSystem = 0x255; // char : 1
		constexpr auto bEnableAISystem = 0x255; // char : 1
		constexpr auto bEnableWorldComposition = 0x255; // char : 1
		constexpr auto bUseClientSideLevelStreamingVolumes = 0x255; // char : 1
		constexpr auto bEnableWorldOriginRebasing = 0x255; // char : 1
		constexpr auto bWorldGravitySet = 0x256; // char : 1
		constexpr auto bGlobalGravitySet = 0x256; // char : 1
		constexpr auto bMinimizeBSPSections = 0x256; // char : 1
		constexpr auto bForceNoPrecomputedLighting = 0x256; // char : 1
		constexpr auto bHighPriorityLoading = 0x256; // char : 1
		constexpr auto bHighPriorityLoadingLocal = 0x256; // char : 1
		constexpr auto bOverrideDefaultBroadphaseSettings = 0x256; // char : 1
		constexpr auto NavigationSystemConfig = 0x258; // UNavigationSystemConfig*
		constexpr auto NavigationSystemConfigOverride = 0x260; // UNavigationSystemConfig*
		constexpr auto WorldToMeters = 0x268; // float
		constexpr auto KillZ = 0x26c; // float
		constexpr auto KillZDamageType = 0x270; // UDamageType*
		constexpr auto WorldGravityZ = 0x278; // float
		constexpr auto GlobalGravityZ = 0x27c; // float
		constexpr auto DefaultPhysicsVolumeClass = 0x280; // ADefaultPhysicsVolume*
		constexpr auto PhysicsCollisionHandlerClass = 0x288; // UPhysicsCollisionHandler*
		constexpr auto DefaultGameMode = 0x290; // AGameModeBase*
		constexpr auto GameNetworkManagerClass = 0x298; // AGameNetworkManager*
		constexpr auto PackedLightAndShadowMapTextureSize = 0x2a0; // int
		constexpr auto DefaultColorScale = 0x2a4; // FVector
		constexpr auto DefaultMaxDistanceFieldOcclusionDistance = 0x2b0; // float
		constexpr auto GlobalDistanceFieldViewDistance = 0x2b4; // float
		constexpr auto DynamicIndirectShadowsSelfShadowingIntensity = 0x2b8; // float
		constexpr auto DefaultReverbSettings = 0x2c0; // FReverbSettings
		constexpr auto DefaultAmbientZoneSettings = 0x2e0; // FInteriorSettings
		constexpr auto MonoCullingDistance = 0x304; // float
		constexpr auto DefaultBaseSoundMix = 0x308; // USoundMix*
		constexpr auto TimeDilation = 0x310; // float
		constexpr auto MatineeTimeDilation = 0x314; // float
		constexpr auto DemoPlayTimeDilation = 0x318; // float
		constexpr auto MinGlobalTimeDilation = 0x31c; // float
		constexpr auto MaxGlobalTimeDilation = 0x320; // float
		constexpr auto MinUndilatedFrameTime = 0x324; // float
		constexpr auto MaxUndilatedFrameTime = 0x328; // float
		constexpr auto BroadphaseSettings = 0x32c; // FBroadphaseSettings
		constexpr auto Pauser = 0x370; // APlayerState*
		constexpr auto ReplicationViewers = 0x378; // TArray<FNetViewer>
		constexpr auto AssetUserData = 0x388; // TArray<UAssetUserData*>
		constexpr auto PauserPlayerState = 0x398; // APlayerState*
		constexpr auto MaxNumberOfBookmarks = 0x3a0; // int
		constexpr auto DefaultBookmarkClass = 0x3a8; // UBookmarkBase*
		constexpr auto BookmarkArray = 0x3b0; // TArray<UBookmarkBase*>
		constexpr auto LastBookmarkClass = 0x3c0; // UBookmarkBase*
	}

	namespace n_UAbilitySystemTestAttributeSet { // : UAttributeSet
		constexpr auto MaxHealth = 0x30; // float
		constexpr auto Health = 0x34; // float
		constexpr auto Mana = 0x38; // float
		constexpr auto MaxMana = 0x3c; // float
		constexpr auto damage = 0x40; // float
		constexpr auto SpellDamage = 0x44; // float
		constexpr auto PhysicalDamage = 0x48; // float
		constexpr auto CritChance = 0x4c; // float
		constexpr auto CritMultiplier = 0x50; // float
		constexpr auto ArmorDamageReduction = 0x54; // float
		constexpr auto DodgeChance = 0x58; // float
		constexpr auto LifeSteal = 0x5c; // float
		constexpr auto Strength = 0x60; // float
		constexpr auto StackingAttribute1 = 0x64; // float
		constexpr auto StackingAttribute2 = 0x68; // float
		constexpr auto NoStackAttribute = 0x6c; // float
	}

	namespace n_UGameplayEffectUIData_TextOnly { // : UGameplayEffectUIData
		constexpr auto Description = 0x28; // FText
	}

	namespace n_USkinnedMeshComponent { // : UMeshComponent
		constexpr auto SkeletalMesh = 0x430; // USkeletalMesh*
		constexpr auto MasterPoseComponent = 0x438; // TWeakObjectPtr<USkinnedMeshComponent>
		constexpr auto PhysicsAssetOverride = 0x538; // UPhysicsAsset*
		constexpr auto ForcedLodModel = 0x540; // int
		constexpr auto MinLodModel = 0x544; // int
		constexpr auto StreamingDistanceMultiplier = 0x550; // float
		constexpr auto LODInfo = 0x560; // TArray<FSkelMeshComponentLODInfo>
		constexpr auto VisibilityBasedAnimTickOption = 0x594; // EVisibilityBasedAnimTickOption
		constexpr auto bOverrideMinLOD = 0x596; // char : 1
		constexpr auto bUseBoundsFromMasterPoseComponent = 0x596; // char : 1
		constexpr auto bForceWireframe = 0x596; // char : 1
		constexpr auto bDisplayBones = 0x596; // char : 1
		constexpr auto bDisableMorphTarget = 0x596; // char : 1
		constexpr auto bHideSkin = 0x596; // char : 1
		constexpr auto bPerBoneMotionBlur = 0x597; // char : 1
		constexpr auto bComponentUseFixedSkelBounds = 0x597; // char : 1
		constexpr auto bConsiderAllBodiesForBounds = 0x597; // char : 1
		constexpr auto bSyncAttachParentLOD = 0x597; // char : 1
		constexpr auto bCanHighlightSelectedSections = 0x597; // char : 1
		constexpr auto bRecentlyRendered = 0x597; // char : 1
		constexpr auto bCastCapsuleDirectShadow = 0x597; // char : 1
		constexpr auto bCastCapsuleIndirectShadow = 0x597; // char : 1
		constexpr auto bCPUSkinning = 0x598; // char : 1
		constexpr auto bEnableUpdateRateOptimizations = 0x598; // char : 1
		constexpr auto bDisplayDebugUpdateRateOptimizations = 0x598; // char : 1
		constexpr auto bRenderStatic = 0x598; // char : 1
		constexpr auto bIgnoreMasterPoseComponentLOD = 0x598; // char : 1
		constexpr auto bCachedLocalBoundsUpToDate = 0x598; // char : 1
		constexpr auto bForceMeshObjectUpdate = 0x599; // char : 1
		constexpr auto CapsuleIndirectShadowMinVisibility = 0x59c; // float
		constexpr auto CachedLocalBounds = 0x5b0; // FBoxSphereBounds
	}

	namespace n_UHierarchicalInstancedStaticMeshComponent { // : UInstancedStaticMeshComponent
		constexpr auto SortedInstances = 0x538; // TArray<int>
		constexpr auto NumBuiltInstances = 0x548; // int
		constexpr auto BuiltInstanceBounds = 0x550; // FBox
		constexpr auto UnbuiltInstanceBounds = 0x56c; // FBox
		constexpr auto UnbuiltInstanceBoundsList = 0x588; // TArray<FBox>
		constexpr auto bEnableDensityScaling = 0x598; // char : 1
		constexpr auto OcclusionLayerNumNodes = 0x5a0; // int
		constexpr auto CacheMeshExtendedBounds = 0x5a4; // FBoxSphereBounds
		constexpr auto bDisableCollision = 0x5c4; // bool
		constexpr auto InstanceCountToRender = 0x5c8; // int
	}

	namespace n_APlayerStartPIE { // : APlayerStart
		constexpr auto PlayerStartTag = 0x270; // FName
	}

	namespace n_UBP_attachment_ANPEQ-15_Side_C { // : USQWeaponAttachment_Scope
		constexpr auto MeshTransitionPercentage = 0x4b0; // float
		constexpr auto ADSMesh = 0x4b8; // UStaticMesh*
		constexpr auto ADSMeshTransform = 0x4c0; // FTransform
		constexpr auto NonADSMesh = 0x4f0; // UStaticMesh*
		constexpr auto NonADSMeshTransform = 0x500; // FTransform
		constexpr auto InToADSMeshTransitionSettings = 0x530; // TArray<FSQMeshTransitionSettings>
		constexpr auto OutFromADSMeshTransitionSettings = 0x540; // TArray<FSQMeshTransitionSettings>
	}

	namespace n_USQSquadStateDataEmplacement { // : USQSquadStateDataVehicle
		constexpr auto StaticUIData = 0x1a8; // USQVehicleUIStaticDataAsset*
		constexpr auto bHoldsOccupant = 0x1b0; // char : 1
		constexpr auto bHoldsSquadLeader = 0x1b0; // char : 1
		constexpr auto ClaimingSquadID = 0x1b4; // int
		constexpr auto VehicleOccupants = 0x1b8; // FVehicleOccupantsArray
	}

	namespace n_USQForwardBaseSettings { // : USQSettings
		constexpr auto NumberOfTeammatesNeededToDeploy = 0x58; // int
		constexpr auto NumberOfLogisNeededToDeploy = 0x5c; // int
		constexpr auto ExclusionRadius = 0x60; // float
		constexpr auto SiegedMinNearbyEnemies = 0x64; // int
		constexpr auto TicketsLostWhenOverrun = 0x68; // int
		constexpr auto NearbyEnemiesRadius = 0x6c; // float
		constexpr auto HasSpawning = 0x70; // bool
		constexpr auto TimeToEnableSpawning = 0x74; // float
		constexpr auto SpawnPointRadius = 0x78; // float
		constexpr auto SpawnOffset = 0x7c; // FVector
		constexpr auto HealthPercentToDisableSpawns = 0x88; // float
		constexpr auto UseCapture = 0x8c; // bool
		constexpr auto CaptureTickDuration = 0x90; // float
		constexpr auto MaxCapturePctPerSecond = 0x94; // float
		constexpr auto CapturePctPerSecondPerPlayer = 0x98; // float
		constexpr auto UseResourceGeneration = 0x9c; // bool
		constexpr auto ResourceGenerationTickDuration = 0xa0; // float
		constexpr auto InitialConstructionPoints = 0xa4; // float
		constexpr auto MaxConstructionPoints = 0xa8; // float
		constexpr auto CPPerSecond = 0xac; // float
		constexpr auto InitialAmmo = 0xb0; // float
		constexpr auto MaxAmmo = 0xb4; // float
		constexpr auto AmmoPerSecond = 0xb8; // float
	}

	namespace n_USceneCaptureComponentCube { // : USceneCaptureComponent
		constexpr auto TextureTarget = 0x2b0; // UTextureRenderTargetCube*
		constexpr auto bCaptureRotation = 0x2b8; // bool
		constexpr auto TextureTargetLeft = 0x2c0; // UTextureRenderTargetCube*
		constexpr auto TextureTargetRight = 0x2c8; // UTextureRenderTargetCube*
		constexpr auto TextureTargetODS = 0x2d0; // UTextureRenderTarget2D*
		constexpr auto IPD = 0x2d8; // float
	}

	namespace n_UMaterialExpressionTextureSampleParameterCube { // : UMaterialExpressionTextureSampleParameter
		constexpr auto ParameterName = 0xe0; // FName
		constexpr auto ExpressionGUID = 0xe8; // FGuid
		constexpr auto Group = 0xf8; // FName
	}

	namespace n_UNavCollision { // : UNavCollisionBase
		constexpr auto CylinderCollision = 0x80; // TArray<FNavCollisionCylinder>
		constexpr auto BoxCollision = 0x90; // TArray<FNavCollisionBox>
		constexpr auto AreaClass = 0xa0; // UNavArea*
		constexpr auto bGatherConvexGeometry = 0xa8; // char : 1
		constexpr auto bCreateOnClient = 0xa8; // char : 1
	}

	namespace n_ASQInsurgencyRuleset { // : ASQObjectiveRuleset
		constexpr auto IntelligencePoints = 0x338; // int
		constexpr auto CoalitionTeam = 0x33c; // ESQTeam
		constexpr auto InsurgentTeam = 0x33d; // ESQTeam
		constexpr auto MaxNumberOfFirstCachesToShowCoalition = 0x340; // int
		constexpr auto TimeDelayToShowFirstCache = 0x344; // FVector2D
		constexpr auto TimeDelayToShowNextCache = 0x34c; // FVector2D
		constexpr auto TimeDelayToNotifyCoalitionOfFirstCaches = 0x354; // FVector2D
		constexpr auto TimeDelayToNotifyCoalitionOfCache = 0x35c; // FVector2D
		constexpr auto IntelligencePointsPerInsurgentKilled = 0x364; // int
		constexpr auto IntelligencePointsPerInsurgentArrested = 0x368; // int
		constexpr auto IntelligencePointsPerCivilianKilled = 0x36c; // int
		constexpr auto IntelligencePointsRequiredToShowCache = 0x370; // TArray<FSQPlayerLimiter>
		constexpr auto CivilianRole = 0x380; // USQRoleSettings*
	}

	namespace n_UForceFeedbackAttenuation { // : UObject
		constexpr auto Attenuation = 0x28; // FForceFeedbackAttenuationSettings
	}

	namespace n_ASQGameState { // : AGameState
		constexpr auto RS_OnMatchStart = 0x2a8; // FScriptMulticastDelegate
		constexpr auto bTimerPaused = 0x2b8; // bool
		constexpr auto bIsTicketBasedGame = 0x2b9; // bool
		constexpr auto bAllowPublicClientsToRecord = 0x2ba; // bool
		constexpr auto bTeamPrepsActive = 0x2bb; // bool
		constexpr auto TeamStates = 0x2f8; // TArray<ASQTeamState*>
		constexpr auto IndexedTeamStates = 0x308; // TArray<ASQTeamState*>
		constexpr auto ChangeTeamWaitTime = 0x318; // int
		constexpr auto WinningTeam = 0x320; // ASQTeamState*
		constexpr auto WinningTeamTickets = 0x328; // int
		constexpr auto ServerTickRate = 0x32c; // float
		constexpr auto GameModeName = 0x330; // FString
		constexpr auto GameModeRules = 0x340; // TArray<FSQGameModeRules>
		constexpr auto NextMapName = 0x350; // FString
		constexpr auto GameCommandComponent = 0x360; // USQGameCommandComponent*
		constexpr auto GameCommandComponentClass = 0x368; // USQGameCommandComponent*
		constexpr auto MaxFireTeamCount = 0x370; // int
		constexpr auto MaxFireTeamSize = 0x374; // int
		constexpr auto VotingState = 0x378; // USQVotingState*
		constexpr auto MapName = 0x380; // FString
		constexpr auto MaxPlayers = 0x390; // int
		constexpr auto ServerName = 0x398; // FString
		constexpr auto MessageOfTheDay = 0x3a8; // FString
		constexpr auto CoreStateConnectionChildActorComponent = 0x3b8; // USQCoreStateConnectionChildActorComponent*
		constexpr auto TimeOfCompletion = 0x3c0; // float
		constexpr auto ServerStartTimeStamp = 0x3d8; // int
		constexpr auto MapMarkerManagerComponent = 0x3e0; // USQMapMarkerManagerComponent*
		constexpr auto GameFlags = 0x3e8; // FSQGameFlags
		constexpr auto ServerSettings = 0x3f8; // FSQServerSettings
	}

	namespace n_UTextBinding { // : UPropertyBinding
		constexpr auto SourceObject = 0x28; // TWeakObjectPtr<UObject>
		constexpr auto SourcePath = 0x30; // FDynamicPropertyPath
		constexpr auto DestinationProperty = 0x60; // FName
	}

	namespace n_UEnvQueryGenerator_OnCircle { // : UEnvQueryGenerator_ProjectedPoints
		constexpr auto CircleRadius = 0x80; // FAIDataProviderFloatValue
		constexpr auto SpaceBetween = 0xb0; // FAIDataProviderFloatValue
		constexpr auto NumberOfPoints = 0xe0; // FAIDataProviderIntValue
		constexpr auto PointOnCircleSpacingMethod = 0x110; // EPointOnCircleSpacingMethod
		constexpr auto ArcDirection = 0x118; // FEnvDirection
		constexpr auto ArcAngle = 0x138; // FAIDataProviderFloatValue
		constexpr auto AngleRadians = 0x168; // float
		constexpr auto CircleCenter = 0x170; // UEnvQueryContext*
		constexpr auto bIgnoreAnyContextActorsWhenGeneratingCircle = 0x178; // bool
		constexpr auto CircleCenterZOffset = 0x180; // FAIDataProviderFloatValue
		constexpr auto TraceData = 0x1b0; // FEnvTraceData
		constexpr auto bDefineArc = 0x1e0; // char : 1
	}

	namespace n_ACullDistanceVolume { // : AVolume
		constexpr auto CullDistances = 0x280; // TArray<FCullDistanceSizePair>
		constexpr auto bEnabled = 0x290; // char : 1
	}

	namespace n_ASQSpectatorMan { // : ASpectatorPawn
		constexpr auto ListenerType = 0x2d8; // ESQListenerType
		constexpr auto SpringArm = 0x2e0; // USpringArmComponent*
		constexpr auto FirstPersonCameraComponent = 0x2e8; // UCameraComponent*
		constexpr auto CameraManHUDIconTexture = 0x2f0; // UTexture*
		constexpr auto bIsTryingToGainAltitude = 0x2f8; // bool
		constexpr auto bIsTryingToLoseAltitude = 0x2f9; // bool
	}

	namespace n_ABP_M110_Optic_Black_C { // : ABP_GenericRifle_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_USQMovementComponentNetworker { // : UActorComponent
		constexpr auto NetworkedComponents = 0xd8; // TArray<USQMovementComponentPacked*>
		constexpr auto PendingClientAdjustPositionAndRotation = 0xe8; // TArray<FAdjustPositionAndRotationPacket>
		constexpr auto PendingServerMove = 0xf8; // TArray<FMovePacket>
	}

	namespace n_USQDamageType_Fall { // : USQDamageType
		constexpr auto bCanCauseBleeding = 0x40; // bool
	}

	namespace n_USQToastWidget { // : UUserWidget
		constexpr auto ToastTextUpdated = 0x230; // FScriptMulticastDelegate
		constexpr auto ToastText = 0x240; // FText
		constexpr auto InitialLifetime = 0x258; // float
	}

	namespace n_UBTService_BlackboardBase { // : UBTService
		constexpr auto BlackboardKey = 0x70; // FBlackboardKeySelector
	}

	namespace n_UBehaviorTree { // : UObject
		constexpr auto RootNode = 0x28; // UBTCompositeNode*
		constexpr auto BlackboardAsset = 0x30; // UBlackboardData*
		constexpr auto RootDecorators = 0x38; // TArray<UBTDecorator*>
		constexpr auto RootDecoratorOps = 0x48; // TArray<FBTDecoratorLogic>
	}

	namespace n_UAK74GP25_Skeleton_AnimBlueprint_C { // : USQWeaponAnimInstance
		constexpr auto UberGraphFrame = 0x2b0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root_DB8541964BD8693C6A9EE29B968E2E7E = 0x2b8; // FAnimNode_Root
		constexpr auto AnimGraphNode_LayeredBoneBlend_056725A145C3A633CDDDA2809A20EF64 = 0x2e8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_Slot_80B2654E49E74054EEB42D9F7A72A707 = 0x3a8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_6A7290AA41579C4942FD49B07CD52D8C = 0x3f0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SequencePlayer_CEA31C31408BD3D6710D7685B523FCF4 = 0x438; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot_13142A3F46DEBC3355E6C5BCDDF8BC3B = 0x4b0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SequencePlayer_31EFDE5C4490D099E0C0B4803287FCCB = 0x4f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_74E29BCB4628460CF6451EB7AD02388C = 0x570; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_761FC29B41EF535FB2C591B7FE699905 = 0x630; // FAnimNode_SequenceEvaluator
	}

	namespace n_UBoolBinding { // : UPropertyBinding
		constexpr auto SourceObject = 0x28; // TWeakObjectPtr<UObject>
		constexpr auto SourcePath = 0x30; // FDynamicPropertyPath
		constexpr auto DestinationProperty = 0x60; // FName
	}

	namespace n_USQCountParameterBase { // : USQRestriction
		constexpr auto Operation = 0x58; // ESQScalingCountingMode
		constexpr auto UseForTeam = 0x59; // bool
		constexpr auto UseForPlayer = 0x5a; // bool
	}

	namespace n_UBP_SQLayer_C { // : USQLayer
		constexpr auto GameMode = 0xb0; // FDataTableRowHandle
		constexpr auto Vehicle Count Modifiers = 0xc0; // TArray<FSQVehicleCountModifier>
		constexpr auto FobRadius = 0xd0; // FDataTableRowHandle
	}

	namespace n_UParticleSystemComponent { // : UFXSystemComponent
		constexpr auto Template = 0x408; // UParticleSystem*
		constexpr auto EmitterMaterials = 0x410; // TArray<UMaterialInterface*>
		constexpr auto SkelMeshComponents = 0x420; // TArray<USkeletalMeshComponent*>
		constexpr auto bResetOnDetach = 0x431; // char : 1
		constexpr auto bUpdateOnDedicatedServer = 0x431; // char : 1
		constexpr auto bAllowRecycling = 0x431; // char : 1
		constexpr auto bAutoManageAttachment = 0x431; // char : 1
		constexpr auto bWarmingUp = 0x432; // char : 1
		constexpr auto bOverrideLODMethod = 0x432; // char : 1
		constexpr auto bSkipUpdateDynamicDataDuringTick = 0x432; // char : 1
		constexpr auto LODMethod = 0x43d; // ParticleSystemLODMethod
		constexpr auto RequiredSignificance = 0x43e; // EParticleSignificanceLevel
		constexpr auto InstanceParameters = 0x440; // TArray<FParticleSysParam>
		constexpr auto OnParticleSpawn = 0x450; // FScriptMulticastDelegate
		constexpr auto OnParticleBurst = 0x460; // FScriptMulticastDelegate
		constexpr auto OnParticleDeath = 0x470; // FScriptMulticastDelegate
		constexpr auto OnParticleCollide = 0x480; // FScriptMulticastDelegate
		constexpr auto OldPosition = 0x490; // FVector
		constexpr auto PartSysVelocity = 0x49c; // FVector
		constexpr auto WarmupTime = 0x4a8; // float
		constexpr auto WarmupTickRate = 0x4ac; // float
		constexpr auto SecondsBeforeInactive = 0x4b4; // float
		constexpr auto MaxTimeBeforeForceUpdateTransform = 0x4bc; // float
		constexpr auto ReplayClips = 0x4e0; // TArray<UParticleSystemReplay*>
		constexpr auto CustomTimeDilation = 0x4f8; // float
		constexpr auto AutoAttachParent = 0x550; // TWeakObjectPtr<USceneComponent>
		constexpr auto AutoAttachSocketName = 0x558; // FName
		constexpr auto AutoAttachLocationRule = 0x560; // EAttachmentRule
		constexpr auto AutoAttachRotationRule = 0x561; // EAttachmentRule
		constexpr auto AutoAttachScaleRule = 0x562; // EAttachmentRule
		constexpr auto OnSystemFinished = 0x590; // FScriptMulticastDelegate
	}

	namespace n_UMaterialExpressionParticleSize { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_USQPhysicalMaterialEffects { // : UObject
		constexpr auto Effects = 0x28; // TMap<USQPhysicalMaterial*, FSQEffectsSet>
	}

	namespace n_ACableActor { // : AActor
		constexpr auto CableComponent = 0x248; // UCableComponent*
	}

	namespace n_UDistributionVectorConstantCurve { // : UDistributionVector
		constexpr auto ConstantCurve = 0x38; // FInterpCurveVector
		constexpr auto bLockAxes = 0x50; // char : 1
		constexpr auto LockedAxes = 0x54; // EDistributionVectorLockFlags
	}

	namespace n_USQCoreStateListener { // : UActorComponent
		constexpr auto DataMap = 0xf0; // TMap<FSQCoreStateId, FSQCoreStateDataList>
	}

	namespace n_UNavMovementComponent { // : UMovementComponent
		constexpr auto NavAgentProps = 0x118; // FNavAgentProperties
		constexpr auto FixedPathBrakingDistance = 0x148; // float
		constexpr auto bUpdateNavAgentWithOwnersCollision = 0x14c; // char : 1
		constexpr auto bUseAccelerationForPaths = 0x14c; // char : 1
		constexpr auto bUseFixedBrakingDistanceForPaths = 0x14c; // char : 1
		constexpr auto MovementState = 0x14d; // FMovementProperties
		constexpr auto PathFollowingComp = 0x150; // UObject*
	}

	namespace n_USQInventoryItemWidget { // : USQUserWidget
		constexpr auto ItemImage = 0x230; // UImage*
		constexpr auto CurrentItem = 0x238; // ASQEquipableItem*
		constexpr auto MagTextBlock = 0x240; // UTextBlock*
		constexpr auto BackgroundImage = 0x248; // UImage*
	}

	namespace n_UParticleModuleRotationBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x29; // char : 1
		constexpr auto LODDuplicate = 0x29; // char : 1
		constexpr auto bSupportsRandomSeed = 0x29; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x29; // char : 1
		constexpr auto LODValidity = 0x2c; // char
	}

	namespace n_UEnvQueryGenerator_ActorsOfClass { // : UEnvQueryGenerator
		constexpr auto SearchedActorClass = 0x50; // AActor*
		constexpr auto GenerateOnlyActorsInRadius = 0x58; // FAIDataProviderBoolValue
		constexpr auto SearchRadius = 0x88; // FAIDataProviderFloatValue
		constexpr auto SearchCenter = 0xb8; // UEnvQueryContext*
	}

	namespace n_USQCoreStateRolesSquadListComponent { // : USQCoreStateSquadListComponent
		constexpr auto SquadWidgetClass = 0x340; // USQCoreStateSquadItemWidget*
		constexpr auto PlayerWidgetClass = 0x348; // USQCoreStateSquadMemberWidget*
		constexpr auto SquadRoot = 0x350; // UPanelWidget*
		constexpr auto UnassignedRoot = 0x358; // UPanelWidget*
		constexpr auto CommanderRoot = 0x360; // UPanelWidget*
		constexpr auto ListLayout = 0x368; // EListLayout
		constexpr auto UnassignedLayout = 0x369; // EListLayout
		constexpr auto ActiveSquadWidgets = 0x370; // TMap<int, USQCoreStateSquadItemWidget*>
	}

	namespace n_UBTTask_Wait { // : UBTTaskNode
		constexpr auto WaitTime = 0x70; // float
		constexpr auto RandomDeviation = 0x74; // float
	}

	namespace n_UBP_Marker_Widget_Objective_C { // : USQMapIconWidget
		constexpr auto UberGraphFrame = 0x250; // FPointerToUberGraphFrame
		constexpr auto MarkerImage = 0x258; // UImage*
	}

	namespace n_UMaterialExpressionParticleRandom { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UDatasmithStaticMeshGLTFImportData { // : UDatasmithStaticMeshImportData
		constexpr auto SourceMeshName = 0x28; // FString
	}

	namespace n_AServerStatReplicator { // : AInfo
		constexpr auto bUpdateStatNet = 0x248; // bool
		constexpr auto bOverwriteClientStats = 0x249; // bool
		constexpr auto Channels = 0x24c; // uint32
		constexpr auto InRate = 0x250; // uint32
		constexpr auto OutRate = 0x254; // uint32
		constexpr auto OutSaturation = 0x258; // uint32
		constexpr auto MaxPacketOverhead = 0x25c; // uint32
		constexpr auto InRateClientMax = 0x260; // uint32
		constexpr auto InRateClientMin = 0x264; // uint32
		constexpr auto InRateClientAvg = 0x268; // uint32
		constexpr auto InPacketsClientMax = 0x26c; // uint32
		constexpr auto InPacketsClientMin = 0x270; // uint32
		constexpr auto InPacketsClientAvg = 0x274; // uint32
		constexpr auto OutRateClientMax = 0x278; // uint32
		constexpr auto OutRateClientMin = 0x27c; // uint32
		constexpr auto OutRateClientAvg = 0x280; // uint32
		constexpr auto OutPacketsClientMax = 0x284; // uint32
		constexpr auto OutPacketsClientMin = 0x288; // uint32
		constexpr auto OutPacketsClientAvg = 0x28c; // uint32
		constexpr auto NetNumClients = 0x290; // uint32
		constexpr auto InPackets = 0x294; // uint32
		constexpr auto OutPackets = 0x298; // uint32
		constexpr auto InBunches = 0x29c; // uint32
		constexpr auto OutBunches = 0x2a0; // uint32
		constexpr auto OutLoss = 0x2a4; // uint32
		constexpr auto InLoss = 0x2a8; // uint32
		constexpr auto VoiceBytesSent = 0x2ac; // uint32
		constexpr auto VoiceBytesRecv = 0x2b0; // uint32
		constexpr auto VoicePacketsSent = 0x2b4; // uint32
		constexpr auto VoicePacketsRecv = 0x2b8; // uint32
		constexpr auto PercentInVoice = 0x2bc; // uint32
		constexpr auto PercentOutVoice = 0x2c0; // uint32
		constexpr auto NumActorChannels = 0x2c4; // uint32
		constexpr auto NumConsideredActors = 0x2c8; // uint32
		constexpr auto PrioritizedActors = 0x2cc; // uint32
		constexpr auto NumRelevantActors = 0x2d0; // uint32
		constexpr auto NumRelevantDeletedActors = 0x2d4; // uint32
		constexpr auto NumReplicatedActorAttempts = 0x2d8; // uint32
		constexpr auto NumReplicatedActors = 0x2dc; // uint32
		constexpr auto NumActors = 0x2e0; // uint32
		constexpr auto NumNetActors = 0x2e4; // uint32
		constexpr auto NumDormantActors = 0x2e8; // uint32
		constexpr auto NumInitiallyDormantActors = 0x2ec; // uint32
		constexpr auto NumNetGUIDsAckd = 0x2f0; // uint32
		constexpr auto NumNetGUIDsPending = 0x2f4; // uint32
		constexpr auto NumNetGUIDsUnAckd = 0x2f8; // uint32
		constexpr auto ObjPathBytes = 0x2fc; // uint32
		constexpr auto NetGUIDOutRate = 0x300; // uint32
		constexpr auto NetGUIDInRate = 0x304; // uint32
		constexpr auto NetSaturated = 0x308; // uint32
	}

	namespace n_UBlendSpace1D { // : UBlendSpaceBase
		constexpr auto bScaleAnimation = 0x148; // bool
	}

	namespace n_UInputActionDelegateBinding { // : UInputDelegateBinding
		constexpr auto InputActionDelegateBindings = 0x28; // TArray<FBlueprintInputActionDelegateBinding>
	}

	namespace n_UMaterialExpressionCollectionParameter { // : UMaterialExpression
		constexpr auto Collection = 0x40; // UMaterialParameterCollection*
		constexpr auto ParameterName = 0x48; // FName
		constexpr auto ParameterId = 0x50; // FGuid
	}

	namespace n_USQGameUserSettings { // : UGameUserSettings
		constexpr auto PlayerNamePrefix = 0x130; // FString
		constexpr auto NameTagOpacity = 0x140; // float
		constexpr auto NameTagScale = 0x144; // float
		constexpr auto bShowNameTagText = 0x148; // bool
		constexpr auto bShowNameTagKit = 0x149; // bool
		constexpr auto bClientAutoRecord = 0x14a; // bool
		constexpr auto NumberAutoRecordedGames = 0x14c; // int
		constexpr auto DistanceFieldShadows = 0x150; // int
		constexpr auto bInvertedYAxis = 0x154; // bool
		constexpr auto bEnableMouseSmoothing = 0x155; // bool
		constexpr auto bKeyboardHighlight = 0x156; // bool
		constexpr auto ControlsPresetName = 0x158; // FText
		constexpr auto bUseMenuToolTips = 0x170; // bool
		constexpr auto bUseRadialMenuToolTips = 0x171; // bool
		constexpr auto bUseInGameHelp = 0x172; // bool
		constexpr auto TextureStreamPoolSizeStorage = 0x174; // int
		constexpr auto FOV = 0x178; // float
		constexpr auto GlobalSensitivity = 0x17c; // float
		constexpr auto DoubleKeyPressTime = 0x180; // float
		constexpr auto CrouchMode = 0x188; // ESQToggleType
		constexpr auto ADSMode = 0x189; // ESQToggleType
		constexpr auto LeanMode = 0x18a; // ESQToggleType
		constexpr auto FreelookMode = 0x18b; // ESQToggleType
		constexpr auto SprintMode = 0x18c; // ESQToggleType
		constexpr auto FreelookSensitivitySliderValue = 0x190; // float
		constexpr auto FreelookSensitivity = 0x194; // float
		constexpr auto bHelicopterInvertMousePitch = 0x198; // bool
		constexpr auto HelicopterPitchSensitivitySliderValue = 0x19c; // float
		constexpr auto HelicopterPitchSensitivity = 0x1a0; // float
		constexpr auto HelicopterRollSensitivitySliderValue = 0x1a4; // float
		constexpr auto bUncapTexturePoolSize = 0x1a8; // bool
		constexpr auto HelicopterRollSensitivity = 0x1ac; // float
		constexpr auto bUseSensivityScaling = 0x1b0; // bool
		constexpr auto GlobalSensitivitySliderValue = 0x1b4; // float
		constexpr auto SoldierSensitivitySliderValue = 0x1b8; // float
		constexpr auto SoldierSensitivity = 0x1bc; // float
		constexpr auto SoldierZoomSensitivitiesSliderValues = 0x1c0; // TMap<float, float>
		constexpr auto SoldierZoomSensitivities = 0x210; // TMap<float, float>
		constexpr auto VehicleSensitivitySliderValue = 0x260; // float
		constexpr auto VehicleSensitivity = 0x264; // float
		constexpr auto PostFX_BrightnessSliderValue = 0x268; // float
		constexpr auto PostFX_Brightness = 0x26c; // float
		constexpr auto PostFX_SharpnessSliderValue = 0x270; // float
		constexpr auto PostFX_Sharpness = 0x274; // float
		constexpr auto PostFX_ContrastSliderValue = 0x278; // float
		constexpr auto PostFX_Contrast = 0x27c; // float
		constexpr auto PostFX_SaturationSliderValue = 0x280; // float
		constexpr auto PostFX_Saturation = 0x284; // float
		constexpr auto ContactShadows = 0x288; // int
		constexpr auto DisableAAValue = 0x28c; // int
		constexpr auto DisableAA = 0x290; // int
		constexpr auto TAASampleStorageValue = 0x294; // int
		constexpr auto TAASampleStorage = 0x298; // int
		constexpr auto VehicleZoomSensitivitiesSliderValues = 0x2a0; // TMap<float, float>
		constexpr auto VehicleZoomSensitivities = 0x2f0; // TMap<float, float>
		constexpr auto bFreelookRecentersWeapon = 0x340; // bool
		constexpr auto bJumpCausesUnCrouch = 0x341; // bool
		constexpr auto bJumpCausesUnProne = 0x342; // bool
		constexpr auto bIsDoubleTapWalkingEnabled = 0x343; // bool
		constexpr auto bShowDiffVerServers = 0x344; // bool
		constexpr auto bShowEmptyServers = 0x345; // bool
		constexpr auto bShowQueuesSeparately = 0x346; // bool
		constexpr auto bShowReservedSlots = 0x347; // bool
		constexpr auto MenuFrameRateLimit = 0x348; // float
		constexpr auto ToneMapperQualityStorage = 0x34c; // int
		constexpr auto ToneMapperQualityToggle = 0x350; // bool
		constexpr auto BloomQualityStorage = 0x354; // int
		constexpr auto BloomQualityToggle = 0x358; // bool
		constexpr auto AmbientOcclusionLevelsStorage = 0x35c; // int
		constexpr auto AmbientOcclusionLevelsToggle = 0x360; // bool
		constexpr auto ShadowFilterMethod = 0x364; // int
		constexpr auto GraphicsQuality = 0x368; // int
		constexpr auto ScreenSharpening = 0x36c; // float
		constexpr auto ScreenPercentage = 0x370; // int
		constexpr auto MotionBlurAmount = 0x374; // float
		constexpr auto FogValue = 0x378; // int
		constexpr auto AtmosphereValue = 0x37c; // int
		constexpr auto LensFlareQuality = 0x380; // int
		constexpr auto AutoExposure = 0x384; // int
		constexpr auto AntiAliasingMode = 0x388; // int
		constexpr auto MaterialQuality = 0x38c; // int
		constexpr auto DetailMode = 0x390; // int
		constexpr auto Upsampling = 0x394; // int
		constexpr auto TemporalAASamples = 0x398; // int
		constexpr auto TemporalAACurrentFrameWeight = 0x39c; // float
		constexpr auto MaxCSMResolution = 0x3a0; // int
		constexpr auto MaxAnisotropy = 0x3a4; // int
		constexpr auto MasterVolume = 0x3a8; // float
		constexpr auto EffectsVolume = 0x3ac; // float
		constexpr auto UIVolume = 0x3b0; // float
		constexpr auto MusicVolume = 0x3b4; // float
		constexpr auto SquadVoiceVolume = 0x3b8; // float
		constexpr auto VoiceSide = 0x3bc; // float
		constexpr auto bApplyVoiceRadioFilter = 0x3c0; // bool
		constexpr auto bApplyBiasWhileNonLeader = 0x3c1; // bool
		constexpr auto bPlaySquadVOIPSounds = 0x3c3; // bool
		constexpr auto bPlayCommandVOIPSounds = 0x3c4; // bool
		constexpr auto LocalVoIPVolume = 0x3c8; // float
		constexpr auto CommandVoIPVolume = 0x3cc; // float
		constexpr auto CommandVoIPSide = 0x3d0; // float
		constexpr auto LeaderVoipDucking = 0x3d4; // float
		constexpr auto JoyStickConfigurations = 0x3d8; // TMap<ESQJoyStickControls, FSQJoyStickConfig>
		constexpr auto bAlwaysFreeLook = 0x428; // bool
		constexpr auto UnfocusedVolumeMultiplier = 0x42c; // float
		constexpr auto MaxImpactEffectDecalLifeSpan = 0x430; // float
		constexpr auto InventorySettings = 0x438; // TArray<FSQOnlineInventorySetting>
		constexpr auto TextureStreaming = 0x448; // int
		constexpr auto OnGameUserSettingsChanged = 0x450; // FScriptMulticastDelegate
		constexpr auto StreamerModeMask = 0x460; // int
		constexpr auto bIsLanMatch = 0x464; // bool
		constexpr auto SquadIncrementalVersion = 0x468; // uint32
		constexpr auto SquadSettingsVersion = 0x46c; // uint32
	}

	namespace n_ABP_L85A2_DarkEarth_SUSAT_Tracer_C { // : ABP_L85A2_DarkEarth_SUSAT_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
		constexpr auto Scope = 0x7b8; // UStaticMeshComponent*
	}

	namespace n_UBP_MortarShockwave_C { // : USQShockwave
		constexpr auto ShockwaveEffectType = 0x28; // ESQShockwaveEffectType
		constexpr auto Strength = 0x2c; // float
		constexpr auto ShockwaveQualitySettings = 0x30; // TArray<FSQShockwaveQualitySetting>
		constexpr auto CameraShake = 0x40; // FSQCameraShake
		constexpr auto SecondaryCameraShake = 0x60; // FSQCameraShake
		constexpr auto VerticalSteps = 0x80; // int
		constexpr auto HorizontalSteps = 0x84; // int
		constexpr auto DefaultRotation = 0x88; // FRotator
		constexpr auto DefaultLocationOffset = 0x94; // FVector
		constexpr auto Range = 0xa0; // float
		constexpr auto PitchRange = 0xa4; // float
		constexpr auto YawRange = 0xa8; // float
		constexpr auto CullingDistance = 0xac; // float
		constexpr auto NearbyExplosionEventRadius = 0xb0; // float
		constexpr auto MaxSoundsToSpawn = 0xb4; // int
		constexpr auto MaxDecalsToSpawn = 0xb8; // int
		constexpr auto bDebugLines = 0xbc; // bool
		constexpr auto bDebugSpheres = 0xbd; // bool
		constexpr auto Emitter = 0xc0; // UParticleSystem*
		constexpr auto DefaultEffectsClass = 0xc8; // USQPhysicalMaterialEffects*
	}

	namespace n_URecastFilter_UseDefaultArea { // : UNavigationQueryFilter
		constexpr auto Areas = 0x28; // TArray<FNavigationFilterArea>
		constexpr auto IncludeFlags = 0x38; // FNavigationFilterFlags
		constexpr auto ExcludeFlags = 0x3c; // FNavigationFilterFlags
	}

	namespace n_ABP_RPG7_Heat_Founders_C { // : ABP_RPG7_Parent_Founders_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
		constexpr auto MuzzleFlashRearComponent3P = 0x7b8; // UParticleSystemComponent*
		constexpr auto BackBlastComponent3P = 0x7c0; // UChildActorComponent*
		constexpr auto MuzzleFlashRearComponent1P = 0x7c8; // UParticleSystemComponent*
		constexpr auto SquadBlast = 0x7d0; // USQBlastComponent*
		constexpr auto BackBlastComponent1P = 0x7d8; // UChildActorComponent*
		constexpr auto BackblastSocket = 0x7e0; // FName
		constexpr auto BackblastEffect1P = 0x7e8; // UParticleSystem*
		constexpr auto BackblastEffect3P = 0x7f0; // UParticleSystem*
	}

	namespace n_USQWeaponAttachment { // : UStaticMeshComponent
		constexpr auto SocketName = 0x498; // FName
		constexpr auto AttachedWeapon = 0x4a0; // ASQWeapon*
		constexpr auto bShowIn1P = 0x4a8; // bool
		constexpr auto bShowIn3P = 0x4a9; // bool
	}

	namespace n_USocialGroupChannel { // : UObject
		constexpr auto SocialUser = 0x28; // USocialUser*
		constexpr auto GroupId = 0x30; // FUniqueNetIdRepl
		constexpr auto DisplayName = 0x58; // FText
		constexpr auto Members = 0x70; // TArray<USocialUser*>
	}

	namespace n_USoundNodeSwitch { // : USoundNode
		constexpr auto IntParameterName = 0x40; // FName
	}

	namespace n_UPoseableMeshComponent { // : USkinnedMeshComponent
		constexpr auto SkeletalMesh = 0x430; // USkeletalMesh*
		constexpr auto MasterPoseComponent = 0x438; // TWeakObjectPtr<USkinnedMeshComponent>
		constexpr auto PhysicsAssetOverride = 0x538; // UPhysicsAsset*
		constexpr auto ForcedLodModel = 0x540; // int
		constexpr auto MinLodModel = 0x544; // int
		constexpr auto StreamingDistanceMultiplier = 0x550; // float
		constexpr auto LODInfo = 0x560; // TArray<FSkelMeshComponentLODInfo>
		constexpr auto VisibilityBasedAnimTickOption = 0x594; // EVisibilityBasedAnimTickOption
		constexpr auto bOverrideMinLOD = 0x596; // char : 1
		constexpr auto bUseBoundsFromMasterPoseComponent = 0x596; // char : 1
		constexpr auto bForceWireframe = 0x596; // char : 1
		constexpr auto bDisplayBones = 0x596; // char : 1
		constexpr auto bDisableMorphTarget = 0x596; // char : 1
		constexpr auto bHideSkin = 0x596; // char : 1
		constexpr auto bPerBoneMotionBlur = 0x597; // char : 1
		constexpr auto bComponentUseFixedSkelBounds = 0x597; // char : 1
		constexpr auto bConsiderAllBodiesForBounds = 0x597; // char : 1
		constexpr auto bSyncAttachParentLOD = 0x597; // char : 1
		constexpr auto bCanHighlightSelectedSections = 0x597; // char : 1
		constexpr auto bRecentlyRendered = 0x597; // char : 1
		constexpr auto bCastCapsuleDirectShadow = 0x597; // char : 1
		constexpr auto bCastCapsuleIndirectShadow = 0x597; // char : 1
		constexpr auto bCPUSkinning = 0x598; // char : 1
		constexpr auto bEnableUpdateRateOptimizations = 0x598; // char : 1
		constexpr auto bDisplayDebugUpdateRateOptimizations = 0x598; // char : 1
		constexpr auto bRenderStatic = 0x598; // char : 1
		constexpr auto bIgnoreMasterPoseComponentLOD = 0x598; // char : 1
		constexpr auto bCachedLocalBoundsUpToDate = 0x598; // char : 1
		constexpr auto bForceMeshObjectUpdate = 0x599; // char : 1
		constexpr auto CapsuleIndirectShadowMinVisibility = 0x59c; // float
		constexpr auto CachedLocalBounds = 0x5b0; // FBoxSphereBounds
	}

	namespace n_UMovieSceneMarginSection { // : UMovieSceneSection
		constexpr auto TopCurve = 0xe0; // FMovieSceneFloatChannel
		constexpr auto LeftCurve = 0x180; // FMovieSceneFloatChannel
		constexpr auto RightCurve = 0x220; // FMovieSceneFloatChannel
		constexpr auto BottomCurve = 0x2c0; // FMovieSceneFloatChannel
	}

	namespace n_ACharacter { // : APawn
		constexpr auto Mesh = 0x2a8; // USkeletalMeshComponent*
		constexpr auto CharacterMovement = 0x2b0; // UCharacterMovementComponent*
		constexpr auto CapsuleComponent = 0x2b8; // UCapsuleComponent*
		constexpr auto BasedMovement = 0x2c0; // FBasedMovementInfo
		constexpr auto ReplicatedBasedMovement = 0x2f0; // FBasedMovementInfo
		constexpr auto AnimRootMotionTranslationScale = 0x320; // float
		constexpr auto BaseTranslationOffset = 0x324; // FVector
		constexpr auto BaseRotationOffset = 0x330; // FQuat
		constexpr auto ReplicatedServerLastTransformUpdateTimeStamp = 0x340; // float
		constexpr auto ReplayLastTransformUpdateTimeStamp = 0x344; // float
		constexpr auto ReplicatedMovementMode = 0x348; // char
		constexpr auto bInBaseReplication = 0x349; // bool
		constexpr auto CrouchedEyeHeight = 0x34c; // float
		constexpr auto bIsCrouched = 0x350; // char : 1
		constexpr auto bProxyIsJumpForceApplied = 0x350; // char : 1
		constexpr auto bPressedJump = 0x350; // char : 1
		constexpr auto bClientUpdating = 0x350; // char : 1
		constexpr auto bClientWasFalling = 0x350; // char : 1
		constexpr auto bClientResimulateRootMotion = 0x350; // char : 1
		constexpr auto bClientResimulateRootMotionSources = 0x350; // char : 1
		constexpr auto bSimGravityDisabled = 0x350; // char : 1
		constexpr auto bClientCheckEncroachmentOnNetUpdate = 0x351; // char : 1
		constexpr auto bServerMoveIgnoreRootMotion = 0x351; // char : 1
		constexpr auto bWasJumping = 0x351; // char : 1
		constexpr auto JumpKeyHoldTime = 0x354; // float
		constexpr auto JumpForceTimeRemaining = 0x358; // float
		constexpr auto ProxyJumpForceStartedTime = 0x35c; // float
		constexpr auto JumpMaxHoldTime = 0x360; // float
		constexpr auto JumpMaxCount = 0x364; // int
		constexpr auto JumpCurrentCount = 0x368; // int
		constexpr auto OnReachedJumpApex = 0x370; // FScriptMulticastDelegate
		constexpr auto MovementModeChangedDelegate = 0x390; // FScriptMulticastDelegate
		constexpr auto OnCharacterMovementUpdated = 0x3a0; // FScriptMulticastDelegate
		constexpr auto SavedRootMotion = 0x3b0; // FRootMotionSourceGroup
		constexpr auto ClientRootMotionParams = 0x4b0; // FRootMotionMovementParams
		constexpr auto RootMotionRepMoves = 0x4f0; // TArray<FSimulatedRootMotionReplicatedMove>
		constexpr auto RepRootMotion = 0x500; // FRepRootMotionMontage
	}

	namespace n_UMaterialExpressionConstant4Vector { // : UMaterialExpression
		constexpr auto Constant = 0x40; // FLinearColor
	}

	namespace n_UBP_AK74M_Optic_StaticInfo_C { // : UBP_AK74_Optic_StaticInfo_C
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_UInputTouchDelegateBinding { // : UInputDelegateBinding
		constexpr auto InputTouchDelegateBindings = 0x28; // TArray<FBlueprintInputTouchDelegateBinding>
	}

	namespace n_USQFaction { // : USQPrimaryData
		constexpr auto AvailableSetups = 0x70; // TArray<USQFactionSetup*>
	}

	namespace n_UEndMatchCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto OnFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_ABP_RPG7V2_Tandem_2Mag_C { // : ABP_RPG7V2_Tandem_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
		constexpr auto MuzzleFlashRearComponent3P = 0x7b8; // UParticleSystemComponent*
		constexpr auto BackBlastComponent3P = 0x7c0; // UChildActorComponent*
		constexpr auto MuzzleFlashRearComponent1P = 0x7c8; // UParticleSystemComponent*
		constexpr auto SquadBlast = 0x7d0; // USQBlastComponent*
		constexpr auto BackBlastComponent1P = 0x7d8; // UChildActorComponent*
		constexpr auto BackblastSocket = 0x7e0; // FName
		constexpr auto BackblastEffect1P = 0x7e8; // UParticleSystem*
		constexpr auto BackblastEffect3P = 0x7f0; // UParticleSystem*
	}

	namespace n_ABP_L85A2_Classic_DarkEarth_SUSAT_C { // : ABP_L85A2_Classic_SUSAT_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
		constexpr auto Scope = 0x7b8; // UStaticMeshComponent*
	}

	namespace n_USQJoinSessionCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto OnFailure = 0x38; // FScriptMulticastDelegate
		constexpr auto WorldContextObject = 0x120; // UObject*
	}

	namespace n_UMaterialExpressionDistanceCullFade { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_ARigidBodyBase { // : AActor
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto bHidden = 0x80; // char : 1
		constexpr auto bNetTemporary = 0x80; // char : 1
		constexpr auto bNetStartup = 0x80; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x80; // char : 1
		constexpr auto bAlwaysRelevant = 0x80; // char : 1
		constexpr auto bReplicateMovement = 0x80; // char : 1
		constexpr auto bTearOff = 0x80; // char : 1
		constexpr auto bExchangedRoles = 0x80; // char : 1
		constexpr auto bNetLoadOnClient = 0x81; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x81; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x81; // char : 1
		constexpr auto bRelevantForLevelBounds = 0x81; // char : 1
		constexpr auto bReplayRewindable = 0x81; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x81; // char : 1
		constexpr auto bAutoDestroyWhenFinished = 0x81; // char : 1
		constexpr auto bBlockInput = 0x81; // char : 1
		constexpr auto bCanBeDamaged = 0x82; // char : 1
		constexpr auto bCollideWhenPlacing = 0x82; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x82; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x82; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x82; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x82; // char : 1
		constexpr auto bIsEditorOnlyActor = 0x82; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x82; // char : 1
		constexpr auto bReplicates = 0x83; // char : 1
		constexpr auto bCanBeInCluster = 0x83; // char : 1
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x83; // char : 1
		constexpr auto bActorEnableCollision = 0x84; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x84; // char : 1
		constexpr auto RemoteRole = 0x85; // ENetRole
		constexpr auto ReplicatedMovement = 0x88; // FRepMovement
		constexpr auto InitialLifeSpan = 0xbc; // float
		constexpr auto CustomTimeDilation = 0xc0; // float
		constexpr auto AttachmentReplication = 0xc8; // FRepAttachment
		constexpr auto Owner = 0x108; // AActor*
		constexpr auto NetDriverName = 0x110; // FName
		constexpr auto Role = 0x118; // ENetRole
		constexpr auto NetDormancy = 0x119; // ENetDormancy
		constexpr auto SpawnCollisionHandlingMethod = 0x11a; // ESpawnActorCollisionHandlingMethod
		constexpr auto AutoReceiveInput = 0x11b; // EAutoReceiveInput
		constexpr auto InputPriority = 0x11c; // int
		constexpr auto InputComponent = 0x120; // UInputComponent*
		constexpr auto NetCullDistanceSquared = 0x128; // float
		constexpr auto NetTag = 0x12c; // int
		constexpr auto NetUpdateFrequency = 0x130; // float
		constexpr auto MinNetUpdateFrequency = 0x134; // float
		constexpr auto bUseRelativeNetUpdateFrequency = 0x138; // char : 1
		constexpr auto bUseOwnerRelativeNetUpdateFrequency = 0x138; // char : 1
		constexpr auto MinRelativeNetUpdateEvaluationFrequency = 0x13c; // float
		constexpr auto NetPriority = 0x140; // float
		constexpr auto Instigator = 0x148; // APawn*
		constexpr auto Children = 0x150; // TArray<AActor*>
		constexpr auto RootComponent = 0x160; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x168; // TArray<AMatineeActor*>
		constexpr auto Layers = 0x180; // TArray<FName>
		constexpr auto ParentComponent = 0x190; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto Tags = 0x198; // TArray<FName>
		constexpr auto OnTakeAnyDamage = 0x1a8; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x1a9; // FScriptMulticastDelegate
		constexpr auto OnTakeRadialDamage = 0x1aa; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x1ab; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x1ac; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x1ad; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x1ae; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x1af; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x1b0; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x1b1; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x1b2; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x1b3; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x1b4; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x1b5; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x1b6; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x1b7; // FScriptMulticastDelegate
		constexpr auto InstanceComponents = 0x218; // TArray<UActorComponent*>
		constexpr auto BlueprintCreatedComponents = 0x228; // TArray<UActorComponent*>
	}

	namespace n_UAnimationSharingSetup { // : UObject
		constexpr auto SkeletonSetups = 0x28; // TArray<FPerSkeletonAnimationSharingSetup>
		constexpr auto ScalabilitySettings = 0x38; // FAnimationSharingScalability
	}

	namespace n_UGeometryCacheTrack { // : UObject
		constexpr auto Duration = 0x28; // float
	}

	namespace n_UMovieScenePropertyTrack { // : UMovieSceneNameableTrack
		constexpr auto SectionToKey = 0x58; // UMovieSceneSection*
		constexpr auto PropertyName = 0x60; // FName
		constexpr auto PropertyPath = 0x68; // FString
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_UGameplayTagsManager { // : UObject
		constexpr auto TagSources = 0xc0; // TArray<FGameplayTagSource>
		constexpr auto GameplayTagTables = 0x150; // TArray<UDataTable*>
	}

	namespace n_URadialVector { // : UFieldNodeVector
		constexpr auto Magnitude = 0xd8; // float
		constexpr auto Position = 0xdc; // FVector
	}

	namespace n_UMaterialInterface { // : UObject
		constexpr auto SubsurfaceProfile = 0x38; // USubsurfaceProfile*
		constexpr auto LightmassSettings = 0x50; // FLightmassMaterialInterfaceSettings
		constexpr auto TextureStreamingData = 0x68; // TArray<FMaterialTextureInfo>
		constexpr auto AssetUserData = 0x78; // TArray<UAssetUserData*>
	}

	namespace n_USQRestriction_PlayerInRange { // : USQRestriction_Boolean
		constexpr auto Range = 0x58; // float
		constexpr auto TargetTeams = 0x60; // TSet<ESQTeamRelationShip>
		constexpr auto TargetCount = 0xb0; // int
	}

	namespace n_UBP_Attachment_PGO-7_Blur_C { // : USQWeaponAttachment_Scope
		constexpr auto MeshTransitionPercentage = 0x4b0; // float
		constexpr auto ADSMesh = 0x4b8; // UStaticMesh*
		constexpr auto ADSMeshTransform = 0x4c0; // FTransform
		constexpr auto NonADSMesh = 0x4f0; // UStaticMesh*
		constexpr auto NonADSMeshTransform = 0x500; // FTransform
		constexpr auto InToADSMeshTransitionSettings = 0x530; // TArray<FSQMeshTransitionSettings>
		constexpr auto OutFromADSMeshTransitionSettings = 0x540; // TArray<FSQMeshTransitionSettings>
	}

	namespace n_UDistributionVector { // : UDistribution
		constexpr auto bCanBeBaked = 0x30; // char : 1
		constexpr auto bIsDirty = 0x30; // char : 1
		constexpr auto bBakedDataSuccesfully = 0x30; // char : 1
	}

	namespace n_ABP_M4M203_M68_UGL_Smoke_Founders_C { // : ABP_M4M203_M68_UGL_Parent_Founders_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UPropertyValueColor { // : UPropertyValue
		constexpr auto properties = 0x80; // TArray<UProperty*>
		constexpr auto PropertyIndices = 0x90; // TArray<int>
		constexpr auto CapturedPropSegments = 0xa0; // TArray<FCapturedPropSegment>
		constexpr auto FullDisplayString = 0xb0; // FString
		constexpr auto PropertySetterName = 0xc0; // FName
		constexpr auto PropertySetterParameterDefaults = 0xc8; // TMap<FString, FString>
		constexpr auto bHasRecordedData = 0x118; // bool
		constexpr auto LeafPropertyClass = 0x120; // UObject*
		constexpr auto ValueBytes = 0x128; // TArray<char>
		constexpr auto PropCategory = 0x138; // EPropertyValueCategory
	}

	namespace n_UMRMeshComponent { // : UPrimitiveComponent
		constexpr auto Material = 0x410; // UMaterialInterface*
		constexpr auto bCreateMeshProxySections = 0x418; // bool
		constexpr auto bUpdateNavMeshOnMeshUpdate = 0x419; // bool
		constexpr auto bNeverCreateCollisionMesh = 0x41a; // bool
		constexpr auto CachedBodySetup = 0x420; // UBodySetup*
		constexpr auto BodySetups = 0x428; // TArray<UBodySetup*>
		constexpr auto WireframeMaterial = 0x438; // UMaterialInterface*
	}

	namespace n_ABP_M4M203_Rifle_M68_Woodland_C { // : ABP_M4M203_Rifle_M68_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_USQVehicleComponent { // : UStaticMeshComponent
		constexpr auto MaxHealth = 0x498; // float
		constexpr auto AllowableDamageTypes = 0x4a0; // TArray<FSQDamageModifier>
		constexpr auto bCanBeDestroyed = 0x4b0; // bool
		constexpr auto bCanBeRepairedAfterDestroyed = 0x4b1; // bool
		constexpr auto MaxRepairToolLimit = 0x4b4; // float
		constexpr auto FullyRepairedComponentMesh = 0x4b8; // UStaticMesh*
		constexpr auto RepairedFromDestructionComponentMesh = 0x4c0; // UStaticMesh*
		constexpr auto DestroyedComponentMesh = 0x4c8; // UStaticMesh*
		constexpr auto ParentVehicle = 0x4d0; // ASQVehicle*
		constexpr auto BurningEffect = 0x4d8; // UParticleSystem*
		constexpr auto BurningSound = 0x4e0; // USoundCue*
		constexpr auto BurningAudioComponent = 0x4e8; // UAudioComponent*
		constexpr auto bBurningAudioInheritsScale = 0x4f0; // bool
		constexpr auto DestroyedExplosion = 0x4f8; // UParticleSystem*
		constexpr auto DestroyedSound = 0x500; // USoundCue*
		constexpr auto DestructionDamageEffectSocket = 0x508; // FName
		constexpr auto DestructionDamageEffects = 0x510; // TArray<FSQDamageEffect>
		constexpr auto bLastingEffectInheritsScale = 0x520; // bool
		constexpr auto DestroyedAudioComponent = 0x528; // UAudioComponent*
		constexpr auto bDestroyedAudioInheritsScale = 0x530; // bool
		constexpr auto BurningParticleSystem = 0x538; // UParticleSystemComponent*
		constexpr auto bBurningEffectInheritsScale = 0x540; // bool
		constexpr auto DestructionParticleSystem = 0x548; // UParticleSystemComponent*
		constexpr auto bDestructionEffectInheritsScale = 0x550; // bool
		constexpr auto NormalizedHealth = 0x554; // float
		constexpr auto OnComponentDestroyedEvent = 0x558; // FScriptMulticastDelegate
		constexpr auto OnComponentUndestroyedEvent = 0x568; // FScriptMulticastDelegate
		constexpr auto Health = 0x578; // float
		constexpr auto VehicleComponentState = 0x57c; // ESQVehicleComponentStates
		constexpr auto DecorativeMesh = 0x580; // UStaticMeshComponent*
	}

	namespace n_UEnvQueryTest_Distance { // : UEnvQueryTest
		constexpr auto TestMode = 0x1c0; // EEnvTestDistance
		constexpr auto DistanceTo = 0x1c8; // UEnvQueryContext*
	}

	namespace n_ABP_M4A1_M150_Foregrip_C { // : ABP_M4A1_Foregrip_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UAvoidanceManager { // : UObject
		constexpr auto DefaultTimeToLive = 0x30; // float
		constexpr auto LockTimeAfterAvoid = 0x34; // float
		constexpr auto LockTimeAfterClean = 0x38; // float
		constexpr auto DeltaTimeToPredict = 0x3c; // float
		constexpr auto ArtificialRadiusExpansion = 0x40; // float
		constexpr auto TestHeightDifference = 0x44; // float
		constexpr auto HeightCheckMargin = 0x48; // float
	}

	namespace n_UUniformInteger { // : UFieldNodeInt
		constexpr auto Magnitude = 0xd8; // int
	}

	namespace n_AGameStateBase { // : AInfo
		constexpr auto GameModeClass = 0x248; // AGameModeBase*
		constexpr auto AuthorityGameMode = 0x250; // AGameModeBase*
		constexpr auto SpectatorClass = 0x258; // ASpectatorPawn*
		constexpr auto PlayerArray = 0x260; // TArray<APlayerState*>
		constexpr auto bReplicatedHasBegunPlay = 0x270; // bool
		constexpr auto ReplicatedWorldTimeSeconds = 0x274; // float
		constexpr auto ServerWorldTimeSecondsDelta = 0x278; // float
		constexpr auto ServerWorldTimeSecondsUpdateFrequency = 0x27c; // float
	}

	namespace n_UInterpTrackInstLinearColorProp { // : UInterpTrackInstProperty
		constexpr auto ResetColor = 0x40; // FLinearColor
	}

	namespace n_USQMapVehicleIconWidget { // : USQMapPawnIconWidget
		constexpr auto bIsSL = 0x250; // bool
		constexpr auto bIsInSameSquad = 0x251; // bool
		constexpr auto bIsInSameTeam = 0x252; // bool
		constexpr auto CurrentTeam = 0x258; // ASQTeamState*
		constexpr auto bIsSelf = 0x260; // bool
	}

	namespace n_UMaterialExpressionConstant3Vector { // : UMaterialExpression
		constexpr auto Constant = 0x40; // FLinearColor
	}

	namespace n_USQCoreStateMapWidget { // : USQCoreStateWidget
		constexpr auto ZOrder = 0x258; // float
		constexpr auto bAutoSize = 0x25c; // bool
		constexpr auto Alignment = 0x260; // FVector2D
		constexpr auto MapComponent = 0x268; // USQCoreStateMapComponent*
	}

	namespace n_AAROriginActor { // : AActor
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto bHidden = 0x80; // char : 1
		constexpr auto bNetTemporary = 0x80; // char : 1
		constexpr auto bNetStartup = 0x80; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x80; // char : 1
		constexpr auto bAlwaysRelevant = 0x80; // char : 1
		constexpr auto bReplicateMovement = 0x80; // char : 1
		constexpr auto bTearOff = 0x80; // char : 1
		constexpr auto bExchangedRoles = 0x80; // char : 1
		constexpr auto bNetLoadOnClient = 0x81; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x81; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x81; // char : 1
		constexpr auto bRelevantForLevelBounds = 0x81; // char : 1
		constexpr auto bReplayRewindable = 0x81; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x81; // char : 1
		constexpr auto bAutoDestroyWhenFinished = 0x81; // char : 1
		constexpr auto bBlockInput = 0x81; // char : 1
		constexpr auto bCanBeDamaged = 0x82; // char : 1
		constexpr auto bCollideWhenPlacing = 0x82; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x82; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x82; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x82; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x82; // char : 1
		constexpr auto bIsEditorOnlyActor = 0x82; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x82; // char : 1
		constexpr auto bReplicates = 0x83; // char : 1
		constexpr auto bCanBeInCluster = 0x83; // char : 1
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x83; // char : 1
		constexpr auto bActorEnableCollision = 0x84; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x84; // char : 1
		constexpr auto RemoteRole = 0x85; // ENetRole
		constexpr auto ReplicatedMovement = 0x88; // FRepMovement
		constexpr auto InitialLifeSpan = 0xbc; // float
		constexpr auto CustomTimeDilation = 0xc0; // float
		constexpr auto AttachmentReplication = 0xc8; // FRepAttachment
		constexpr auto Owner = 0x108; // AActor*
		constexpr auto NetDriverName = 0x110; // FName
		constexpr auto Role = 0x118; // ENetRole
		constexpr auto NetDormancy = 0x119; // ENetDormancy
		constexpr auto SpawnCollisionHandlingMethod = 0x11a; // ESpawnActorCollisionHandlingMethod
		constexpr auto AutoReceiveInput = 0x11b; // EAutoReceiveInput
		constexpr auto InputPriority = 0x11c; // int
		constexpr auto InputComponent = 0x120; // UInputComponent*
		constexpr auto NetCullDistanceSquared = 0x128; // float
		constexpr auto NetTag = 0x12c; // int
		constexpr auto NetUpdateFrequency = 0x130; // float
		constexpr auto MinNetUpdateFrequency = 0x134; // float
		constexpr auto bUseRelativeNetUpdateFrequency = 0x138; // char : 1
		constexpr auto bUseOwnerRelativeNetUpdateFrequency = 0x138; // char : 1
		constexpr auto MinRelativeNetUpdateEvaluationFrequency = 0x13c; // float
		constexpr auto NetPriority = 0x140; // float
		constexpr auto Instigator = 0x148; // APawn*
		constexpr auto Children = 0x150; // TArray<AActor*>
		constexpr auto RootComponent = 0x160; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x168; // TArray<AMatineeActor*>
		constexpr auto Layers = 0x180; // TArray<FName>
		constexpr auto ParentComponent = 0x190; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto Tags = 0x198; // TArray<FName>
		constexpr auto OnTakeAnyDamage = 0x1a8; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x1a9; // FScriptMulticastDelegate
		constexpr auto OnTakeRadialDamage = 0x1aa; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x1ab; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x1ac; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x1ad; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x1ae; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x1af; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x1b0; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x1b1; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x1b2; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x1b3; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x1b4; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x1b5; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x1b6; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x1b7; // FScriptMulticastDelegate
		constexpr auto InstanceComponents = 0x218; // TArray<UActorComponent*>
		constexpr auto BlueprintCreatedComponents = 0x228; // TArray<UActorComponent*>
	}

	namespace n_ABP_40MM_Smoke_Red_Proj2_C { // : ABP_40MM_Smoke_Proj2_C
		constexpr auto Effect = 0x548; // UParticleSystemComponent*
		constexpr auto SmokeEffect = 0x550; // UParticleSystem*
		constexpr auto SmokeSound = 0x558; // USoundCue*
	}

	namespace n_UAbilityTask_WaitAttributeChange { // : UAbilityTask
		constexpr auto OnChange = 0x80; // FScriptMulticastDelegate
		constexpr auto ExternalOwner = 0xd8; // UAbilitySystemComponent*
	}

	namespace n_UParticleModuleVelocity_Seeded { // : UParticleModuleVelocity
		constexpr auto RandomSeedInfo = 0xc0; // FParticleRandomSeedInfo
	}

	namespace n_UBP_AK74_Optic_StaticInfo_C { // : UBP_AK74_StaticInfo_C
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_UEnvQueryGenerator { // : UEnvQueryNode
		constexpr auto OptionName = 0x30; // FString
		constexpr auto ItemType = 0x40; // UEnvQueryItemType*
		constexpr auto bAutoSortTests = 0x48; // char : 1
	}

	namespace n_ASQRepairTool { // : ASQRepairEquipable
		constexpr auto RepairToolStaticInfo = 0x498; // USQRepairToolStaticInfo*
		constexpr auto TimerHandle = 0x4a0; // FTimerHandle
		constexpr auto bUseHammer = 0x4a8; // bool
	}

	namespace n_UMovieSceneByteSection { // : UMovieSceneSection
		constexpr auto ByteCurve = 0xe0; // FMovieSceneByteChannel
	}

	namespace n_UApplicationLifecycleComponent { // : UActorComponent
		constexpr auto ApplicationWillDeactivateDelegate = 0xd8; // FScriptMulticastDelegate
		constexpr auto ApplicationHasReactivatedDelegate = 0xe8; // FScriptMulticastDelegate
		constexpr auto ApplicationWillEnterBackgroundDelegate = 0xf8; // FScriptMulticastDelegate
		constexpr auto ApplicationHasEnteredForegroundDelegate = 0x108; // FScriptMulticastDelegate
		constexpr auto ApplicationWillTerminateDelegate = 0x118; // FScriptMulticastDelegate
		constexpr auto ApplicationShouldUnloadResourcesDelegate = 0x128; // FScriptMulticastDelegate
		constexpr auto ApplicationReceivedStartupArgumentsDelegate = 0x138; // FScriptMulticastDelegate
		constexpr auto OnTemperatureChangeDelegate = 0x148; // FScriptMulticastDelegate
		constexpr auto OnLowPowerModeDelegate = 0x158; // FScriptMulticastDelegate
	}

	namespace n_UInterpTrackLinearColorProp { // : UInterpTrackLinearColorBase
		constexpr auto PropertyName = 0x90; // FName
	}

	namespace n_ABP_AK74M_1P78_4Mags_Desert_C { // : ABP_AK74M_1P78_4Mags_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_USQPawnInventoryComponent { // : UActorComponent
		constexpr auto EquippedNewItemEvent = 0xd8; // FScriptMulticastDelegate
		constexpr auto PlayAnimationEvent = 0xe8; // FScriptMulticastDelegate
		constexpr auto PauseAnimationEvent = 0xf8; // FScriptMulticastDelegate
		constexpr auto ResumeAnimationEvent = 0x108; // FScriptMulticastDelegate
		constexpr auto SetAnimationPlayRateEvent = 0x118; // FScriptMulticastDelegate
		constexpr auto EndLoopAnimationEvent = 0x128; // FScriptMulticastDelegate
		constexpr auto StopAnimationEvent = 0x138; // FScriptMulticastDelegate
		constexpr auto AmmoChangedEvent = 0x148; // FScriptMulticastDelegate
		constexpr auto CurrentItemStaticInfo = 0x158; // USQItemStaticInfo*
		constexpr auto DefaultStaticInfoClass = 0x160; // USQItemStaticInfo*
		constexpr auto CurrentWeapon = 0x168; // ASQEquipableItem*
		constexpr auto bIsInteracting = 0x188; // bool
		constexpr auto bIsTimingOut = 0x189; // bool
		constexpr auto CurrentFadeOut = 0x18c; // float
		constexpr auto FadeoutDuration = 0x190; // float
		constexpr auto FadeoutDelay = 0x194; // float
		constexpr auto bClickInventoryToggle = 0x198; // char : 1
		constexpr auto NextItemSlot = 0x19c; // int
		constexpr auto NextItemOffset = 0x1a0; // int
		constexpr auto CurrentWeaponSlot = 0x1a4; // int
		constexpr auto CurrentWeaponOffset = 0x1a8; // int
		constexpr auto Inventory = 0x1b0; // TArray<FSQWeaponGroupData>
		constexpr auto RepInventory = 0x1c0; // FSQWeaponGroupDataArray
		constexpr auto PendingWeapon = 0x2d8; // ASQEquipableItem*
	}

	namespace n_UMaterialExpressionFontSampleParameter { // : UMaterialExpressionFontSample
		constexpr auto ParameterName = 0x50; // FName
		constexpr auto ExpressionGUID = 0x58; // FGuid
		constexpr auto Group = 0x68; // FName
	}

	namespace n_USQVehicleTrack { // : USQDriveTrainComponent
		constexpr auto bRightSideTrack = 0x598; // bool
		constexpr auto bLeftSideTrack = 0x599; // bool
	}

	namespace n_UMaterialExpressionWorldPosition { // : UMaterialExpression
		constexpr auto WorldPositionShaderOffset = 0x40; // EWorldPositionIncludedOffsets
	}

	namespace n_ABP_RPG7_Parent_Founders_C { // : ABP_RPG7_Parent_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
		constexpr auto MuzzleFlashRearComponent3P = 0x7b8; // UParticleSystemComponent*
		constexpr auto BackBlastComponent3P = 0x7c0; // UChildActorComponent*
		constexpr auto MuzzleFlashRearComponent1P = 0x7c8; // UParticleSystemComponent*
		constexpr auto SquadBlast = 0x7d0; // USQBlastComponent*
		constexpr auto BackBlastComponent1P = 0x7d8; // UChildActorComponent*
		constexpr auto BackblastSocket = 0x7e0; // FName
		constexpr auto BackblastEffect1P = 0x7e8; // UParticleSystem*
		constexpr auto BackblastEffect3P = 0x7f0; // UParticleSystem*
	}

	namespace n_UGameplayCueNotify_Static { // : UObject
		constexpr auto GameplayCueTag = 0x28; // FGameplayTag
		constexpr auto ReferenceHelper = 0x30; // FGameplayTagReferenceHelper
		constexpr auto GameplayCueName = 0x40; // FName
		constexpr auto IsOverride = 0x48; // bool
	}

	namespace n_USoundCue { // : USoundBase
		constexpr auto bOverrideAttenuation = 0x110; // char : 1
		constexpr auto bExcludeFromRandomNodeBranchCulling = 0x110; // char : 1
		constexpr auto FirstNode = 0x118; // USoundNode*
		constexpr auto VolumeMultiplier = 0x120; // float
		constexpr auto PitchMultiplier = 0x124; // float
		constexpr auto AttenuationOverrides = 0x128; // FSoundAttenuationSettings
		constexpr auto SubtitlePriority = 0x410; // float
		constexpr auto bHasPlayWhenSilent = 0x418; // char : 1
	}

	namespace n_ASpotLight { // : ALight
		constexpr auto SpotLightComponent = 0x258; // USpotLightComponent*
	}

	namespace n_UImage { // : UWidget
		constexpr auto Brush = 0x108; // FSlateBrush
		constexpr auto BrushDelegate = 0x190; // DelegateProperty
		constexpr auto ColorAndOpacity = 0x1a0; // FLinearColor
		constexpr auto ColorAndOpacityDelegate = 0x1b0; // DelegateProperty
		constexpr auto bFlipForRightToLeftFlowDirection = 0x1c0; // bool
		constexpr auto OnMouseButtonDownEvent = 0x1c4; // DelegateProperty
	}

	namespace n_UGridSlot { // : UPanelSlot
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
		constexpr auto Row = 0x4c; // int
		constexpr auto RowSpan = 0x50; // int
		constexpr auto Column = 0x54; // int
		constexpr auto ColumnSpan = 0x58; // int
		constexpr auto Layer = 0x5c; // int
		constexpr auto Nudge = 0x60; // FVector2D
	}

	namespace n_USQGridMarkerBase { // : USQUserWidget
		constexpr auto bDrawVerticalNumbers = 0x230; // bool
		constexpr auto bDrawHorizontalLetters = 0x231; // bool
		constexpr auto GridMarkerFontInfo = 0x238; // FSlateFontInfo
		constexpr auto GridMarkerFontColor = 0x288; // FLinearColor
		constexpr auto GridMarkerFontOffset = 0x298; // FVector2D
		constexpr auto HorizontalAlignment = 0x2a0; // ESQTextHorizontalAlignment
		constexpr auto VerticalAlignment = 0x2a1; // ESQTextVerticalAlignment
		constexpr auto OwnerMap = 0x2a8; // USQMap*
	}

	namespace n_ULevelSequenceDirector { // : UObject
		constexpr auto Player = 0x28; // ULevelSequencePlayer*
	}

	namespace n_ABP_AKS74_1P29_C { // : ABP_AKS74_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
		constexpr auto Front = 0x7b8; // UStaticMeshComponent*
		constexpr auto Scope = 0x7c0; // UStaticMeshComponent*
	}

	namespace n_UARTrackedGeometry { // : UObject
		constexpr auto UniqueID = 0x28; // FGuid
		constexpr auto LocalToTrackingTransform = 0x40; // FTransform
		constexpr auto LocalToAlignedTrackingTransform = 0x70; // FTransform
		constexpr auto TrackingState = 0xa0; // EARTrackingState
		constexpr auto UnderlyingMesh = 0xb0; // UMRMeshComponent*
		constexpr auto ObjectClassification = 0xb8; // EARObjectClassification
		constexpr auto LastUpdateFrameNumber = 0xd0; // int
		constexpr auto DebugName = 0xe0; // FName
	}

	namespace n_ABP_M9_Nickel_C { // : ABP_M9_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UMaterialExpressionCustomOutput { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UBP_AK74MGP25_UGL_Reflex_HE_StaticInfo_C { // : UBP_AK74MGP25_UGL_Reflex_Parent_StaticInfo_C
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_ABP_M4M203_M68_UGL_Parent_Founders_C { // : ABP_M4M203_M68_UGL_Parent_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_USQDamageType_Explosive { // : USQDamageType
		constexpr auto bCanCauseBleeding = 0x40; // bool
	}

	namespace n_ABP_L85A2_ElcanLDS_Foregrip_C { // : ABP_L85A2_Foregrip_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
	}

	namespace n_USQVehicleBurningComponent { // : USceneComponent
		constexpr auto ParticleAttachBone = 0x218; // FName
		constexpr auto TemperatureLastingEffect = 0x220; // ASQLastingEffect*
		constexpr auto bIsDebugging = 0x22a; // bool
		constexpr auto VehicleBurnRatePct = 0x22c; // float
		constexpr auto VehicleFlippedBurnRatePct = 0x230; // float
		constexpr auto VehicleAbandonedBurnRatePct = 0x234; // float
		constexpr auto SoldierBurnRatePct = 0x238; // float
		constexpr auto StartBurnHealthPercent = 0x23c; // float
		constexpr auto EffectTimerHandle = 0x240; // FTimerHandle
		constexpr auto BurnTimerHandle = 0x248; // FTimerHandle
	}

	namespace n_ALobbyBeaconPlayerState { // : AInfo
		constexpr auto DisplayName = 0x248; // FText
		constexpr auto UniqueID = 0x260; // FUniqueNetIdRepl
		constexpr auto PartyOwnerUniqueId = 0x288; // FUniqueNetIdRepl
		constexpr auto bInLobby = 0x2b0; // bool
		constexpr auto ClientActor = 0x2b8; // AOnlineBeaconClient*
	}

	namespace n_UWidgetInteractionComponent { // : USceneComponent
		constexpr auto OnHoveredWidgetChanged = 0x218; // FScriptMulticastDelegate
		constexpr auto VirtualUserIndex = 0x238; // int
		constexpr auto PointerIndex = 0x23c; // float
		constexpr auto TraceChannel = 0x240; // ECollisionChannel
		constexpr auto InteractionDistance = 0x244; // float
		constexpr auto InteractionSource = 0x248; // EWidgetInteractionSource
		constexpr auto bEnableHitTesting = 0x249; // bool
		constexpr auto bShowDebug = 0x24a; // bool
		constexpr auto DebugColor = 0x24c; // FLinearColor
		constexpr auto CustomHitResult = 0x2d8; // FHitResult
		constexpr auto LocalHitLocation = 0x360; // FVector2D
		constexpr auto LastLocalHitLocation = 0x368; // FVector2D
		constexpr auto HoveredWidgetComponent = 0x370; // UWidgetComponent*
		constexpr auto LastHitResult = 0x378; // FHitResult
		constexpr auto bIsHoveredWidgetInteractable = 0x400; // bool
		constexpr auto bIsHoveredWidgetFocusable = 0x401; // bool
		constexpr auto bIsHoveredWidgetHitTestVisible = 0x402; // bool
	}

	namespace n_USQAnimInstanceSoldier { // : USQAnimInstance
		constexpr auto bDrawDebugSpheres = 0x290; // bool
		constexpr auto bIsSoldierAlive = 0x291; // bool
		constexpr auto bIsSoldierRagdolled = 0x292; // bool
		constexpr auto LeftHandIKLocation = 0x294; // FVector
		constexpr auto LeftHandIKRotation = 0x2a0; // FRotator
		constexpr auto LeftHandIKAlpha = 0x2ac; // float
		constexpr auto RightHandIKLocation = 0x2b0; // FVector
		constexpr auto RightHandIKRotation = 0x2bc; // FRotator
		constexpr auto RightHandIKAlpha = 0x2c8; // float
		constexpr auto bIsDragging = 0x2cc; // bool
		constexpr auto DraggingLeftArmRotation = 0x2d0; // FRotator
		constexpr auto YawDeltaRaw = 0x2dc; // float
		constexpr auto AddRotShot = 0x2e0; // FRotator
		constexpr auto AddRotCameraShot = 0x2ec; // FRotator
		constexpr auto AddAdsRotCameraShot = 0x2f8; // FRotator
		constexpr auto bLeanConditions = 0x304; // bool
		constexpr auto BipodLength = 0x308; // float
		constexpr auto BipodHeight = 0x30c; // FVector
		constexpr auto bAutoLowered = 0x318; // bool
		constexpr auto OffsetLineOfFire = 0x31c; // FRotator
		constexpr auto LastVelocityWhenIsInAir = 0x328; // float
		constexpr auto LeftHandWeaponIkAlpha = 0x32c; // float
		constexpr auto RightHand3pWeaponIkAlpha = 0x330; // float
		constexpr auto AdjustAdsSightItemAnimPos = 0x334; // float
		constexpr auto bVelocityProneTransAnim = 0x338; // bool
		constexpr auto Direction = 0x33c; // float
		constexpr auto bCanSprintToProne = 0x340; // bool
		constexpr auto bIsCrouched = 0x341; // bool
		constexpr auto bIsProne = 0x342; // bool
		constexpr auto bIsJumping = 0x343; // bool
		constexpr auto bIsFalling = 0x344; // bool
		constexpr auto Speed = 0x348; // float
		constexpr auto Velocity = 0x34c; // FVector
		constexpr auto PitchDeltaRaw = 0x358; // float
		constexpr auto bFirstPersonVisibility = 0x35c; // bool
		constexpr auto ClimbWeaponSocketLoc = 0x360; // FVector
		constexpr auto ClimbWeaponSocketRot = 0x36c; // FRotator
		constexpr auto VaultClimbAo = 0x378; // FRotator
		constexpr auto FreeLookRot = 0x384; // FRotator
		constexpr auto bSprintToProneTransAnim = 0x390; // bool
		constexpr auto bLeanRight = 0x391; // bool
		constexpr auto bLeanLeft = 0x392; // bool
		constexpr auto LeaningDirection = 0x393; // char
		constexpr auto bBipodIsDeployed = 0x394; // bool
		constexpr auto BipodTransitionAlpha = 0x398; // float
		constexpr auto bShot = 0x39c; // bool
		constexpr auto SprintSpeedMultiplier = 0x3a0; // float
		constexpr auto MaxWalkSpeedCrouched = 0x3a4; // float
		constexpr auto MaxWalkSpeedProne = 0x3a8; // float
		constexpr auto MaxWalkSpeed = 0x3ac; // float
		constexpr auto bIsInVehicle = 0x3b0; // bool
		constexpr auto VehiclePitch = 0x3b4; // float
		constexpr auto VehicleYaw = 0x3b8; // float
		constexpr auto VehicleBaseAnim = 0x3c0; // UAnimSequence*
		constexpr auto VehicleAimOffsets = 0x3c8; // UBlendSpace*
		constexpr auto bUseWheelBlendSpace1D = 0x3d0; // bool
		constexpr auto VehicleWheelBlendSpace1D = 0x3d8; // UBlendSpace1D*
		constexpr auto VehicleWheel = 0x3e0; // float
		constexpr auto CustomVehicleWheel1 = 0x3e4; // float
		constexpr auto InterpSpeed = 0x3e8; // float
		constexpr auto CustomSteeringWheelAnimExplTime = 0x3ec; // float
		constexpr auto bHandIKAlphaEnabled = 0x3f0; // bool
		constexpr auto SteeringWheelAnimExplTime = 0x3f4; // float
		constexpr auto RightHandAlpha = 0x3f8; // float
		constexpr auto LeftHandAlpha = 0x3fc; // float
		constexpr auto LastVehicleWheelAbs = 0x400; // float
		constexpr auto VehicleWheelAbsRate = 0x404; // float
		constexpr auto SteeringWheelSingleFrameAnimSequence = 0x408; // UAnimSequence*
		constexpr auto Time = 0x410; // float
		constexpr auto bFP_T_LeanLeftAndLeanConditions = 0x414; // bool
		constexpr auto bFP_T_NotLeanLeftOrNotLeanConditions = 0x415; // bool
		constexpr auto bFP_T_LeanRightAndLeanConditions = 0x416; // bool
		constexpr auto bFP_T_NotLeanRightOrNotLeanConditions = 0x417; // bool
		constexpr auto bIsPullingTriggerAndMagazineHasAmmo = 0x418; // bool
	}

	namespace n_ASQSquad { // : AInfo
		constexpr auto LatestSpotMarkers = 0x248; // TArray<ASQMapMarker*>
		constexpr auto LatestActionMarkers = 0x258; // TArray<ASQMapMarker*>
		constexpr auto LatestPOIMarkers = 0x268; // TArray<ASQMapMarker*>
		constexpr auto LatestFireteamMarkers = 0x278; // TArray<ASQMapMarker*>
		constexpr auto LatestRequestMarkers = 0x288; // TArray<ASQMapMarker*>
		constexpr auto Team = 0x298; // ASQTeam*
		constexpr auto SquadStateClass = 0x2a0; // ASQSquadState*
		constexpr auto TeamPrivateSquadStateClass = 0x2a8; // ASQSquadStatePrivateToTeam*
		constexpr auto SquadRallyPointClass = 0x2b0; // ASQSquadRallyPoint*
		constexpr auto SquadState = 0x2b8; // ASQSquadState*
		constexpr auto TeamPrivateSquadState = 0x2c0; // ASQSquadStatePrivateToTeam*
		constexpr auto Leader = 0x2c8; // ASQPlayerController*
		constexpr auto RejoinSquadDelayAfterKick = 0x2d0; // float
		constexpr auto rallypoint = 0x2d8; // ASQSquadRallyPoint*
		constexpr auto RpMembersToPlaceRadius = 0x2e0; // float
		constexpr auto RpEnemiesNearCheckRadius = 0x2e4; // float
		constexpr auto RpNeededMembersToPlace = 0x2e8; // int
		constexpr auto RpNonSLMemberPunishment = 0x2ec; // int
		constexpr auto RpMembersErrorMessage = 0x2f0; // FText
		constexpr auto RpMembersNonSlErrorMessage = 0x308; // FText
		constexpr auto RpTimerErrorMessage = 0x320; // FText
		constexpr auto RpEnemiesNearErrorMessage = 0x338; // FText
		constexpr auto PlayerJoinedMessage = 0x350; // FText
		constexpr auto PlayerLeftMessage = 0x368; // FText
		constexpr auto LeaderChangedMessage = 0x380; // FText
		constexpr auto RpLeaderChangedTimeMessage = 0x398; // FText
		constexpr auto RpLastPlacementTime = 0x3b0; // float
		constexpr auto RpTimeToReset = 0x3b4; // float
		constexpr auto RpEnemiesNearbyTimeSubtract = 0x3b8; // float
		constexpr auto RpLeaderChangedResetTime = 0x3bc; // float
		constexpr auto bRpUsesLeaderChangeResetTime = 0x3c0; // bool
		constexpr auto RpUsesResetTimer = 0x3c1; // bool
		constexpr auto ClaimingGracePeriod = 0x3c4; // float
		constexpr auto ClaimingTotalNumMembersNeededTogether = 0x3c8; // int
		constexpr auto ClaimingMembersTogetherRadius = 0x3cc; // float
		constexpr auto ClaimingNumMembersInSquadForOne = 0x3d0; // int
		constexpr auto ClaimingNumMembersInSquadForTwo = 0x3d4; // int
		constexpr auto ClaimingNumMembersInSquadForThree = 0x3d8; // int
		constexpr auto ClaimingNumMembersInSquadForFour = 0x3dc; // int
		constexpr auto ClaimingTimeToExpire = 0x3e0; // float
		constexpr auto NumberOfMembersWithVehicleClaimToMakeSquadPartyToClaim = 0x3e4; // int
		constexpr auto VehicleClaims = 0x3e8; // TArray<USQVehicleClaim*>
		constexpr auto ActiveVehicleClaimDroppedNearMainBaseMessage = 0x3f8; // FText
		constexpr auto ActiveVehicleClaimDroppedNearFireBaseMessage = 0x410; // FText
		constexpr auto ActiveVehicleClaimDroppedOnBattlefieldMessage = 0x428; // FText
		constexpr auto ActiveVehicleClaimDestroyedMessage = 0x440; // FText
		constexpr auto ActiveVehicleClaimPickedUpMessage = 0x458; // FText
		constexpr auto NeedLeaderRoleToClaimVehicleMessage = 0x470; // FText
		constexpr auto OverVehicleClaimingLimitMessage = 0x488; // FText
		constexpr auto OverVehicleClaimingLimitActiveUseDetailsMessage = 0x4a0; // FText
		constexpr auto OverVehicleClaimingLimitDestroyedDetailsMessage = 0x4b8; // FText
		constexpr auto OverVehicleClaimingLimitLeftDetailsMessage = 0x4d0; // FText
		constexpr auto OverVehicleClaimingLimitDestroyedOrLeftDetailsMessage = 0x4e8; // FText
		constexpr auto OverVehicleClaimingLimitDestroyedOrLeftTimerMessage = 0x500; // FText
		constexpr auto NotEnoughMembersForClaimingSingleVehicleMessage = 0x518; // FText
		constexpr auto NotEnoughMembersNearToClaimVehicleMessage = 0x530; // FText
		constexpr auto VehicleClaimSuccessMessage = 0x548; // FText
		constexpr auto ClaimGracePeriodFailMessage = 0x560; // FText
		constexpr auto UnableToReleaseOlderVehicleClaimMessage = 0x578; // FText
		constexpr auto AnotherSquadClaimedOurVehicleMessage = 0x590; // FText
		constexpr auto UnableToApproveVehicleClaimMessage = 0x5a8; // FText
		constexpr auto KickedFromSquadMessage = 0x5c0; // FText
		constexpr auto LeftSquadMessage = 0x5d8; // FText
		constexpr auto ForceRecruitKitMessage = 0x5f0; // FText
		constexpr auto FireTeams = 0x608; // TArray<FSQFireTeam>
		constexpr auto SquadConfig = 0x618; // USQConfig*
		constexpr auto LastVehicleMemberFailedToEnter = 0x620; // ASQVehicle*
		constexpr auto OnPlayerJoinSquad = 0x678; // FScriptMulticastDelegate
		constexpr auto OnPlayerPartSquad = 0x688; // FScriptMulticastDelegate
		constexpr auto OnPlayerBecomeSquadLeader = 0x698; // FScriptMulticastDelegate
		constexpr auto OnFireteamDisbanded = 0x6a8; // FScriptMulticastDelegate
		constexpr auto OnFireteamUpdated = 0x6b8; // FScriptMulticastDelegate
	}

	namespace n_UARGetCandidateObjectAsyncTaskBlueprintProxy { // : UARBaseAsyncTaskBlueprintProxy
		constexpr auto OnSuccess = 0x50; // FScriptMulticastDelegate
		constexpr auto OnFailed = 0x60; // FScriptMulticastDelegate
	}

	namespace n_USQPhysicalMaterial { // : UPhysicalMaterial
		constexpr auto bConsiderForPenetration = 0x80; // bool
		constexpr auto bAllowPenetration = 0x81; // bool
		constexpr auto DamageAbsorbed = 0x84; // float
		constexpr auto ArmorDamageMultiplier = 0x88; // float
		constexpr auto bDamageParentActor = 0x8c; // bool
		constexpr auto WheelDampingRateMultiplier = 0x90; // float
		constexpr auto ArmorThicknessMillimeters = 0x94; // int
	}

	namespace n_ABP_M4M203_M150_UGL_Parent_C { // : ABP_Weapon2_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_ABP_AK74GP25_Rifle_C { // : ABP_AK74_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_ABP_AK74MGP25_1P78_UGL_Desert_Parent_C { // : ABP_AK74MGP25_UGL_Desert_Parent_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_USQProjectileSpawnerComponent { // : USceneComponent
		constexpr auto ProjectileClass = 0x218; // UClass*
		constexpr auto TracerProjectileClass = 0x240; // UClass*
		constexpr auto MuzzleVelocity = 0x268; // float
		constexpr auto MaxDamageToApply = 0x26c; // float
		constexpr auto bCreatedOnServerForDamage = 0x270; // bool
		constexpr auto TimeBetweenShots = 0x274; // float
		constexpr auto RoundsBetweenTracer = 0x278; // int
		constexpr auto ShotDeviation = 0x27c; // float
		constexpr auto ShotCounter = 0x280; // int
		constexpr auto bIsFiring = 0x284; // bool
		constexpr auto OnFired = 0x288; // FScriptMulticastDelegate
		constexpr auto OnStartFiring = 0x298; // FScriptMulticastDelegate
		constexpr auto OnStopFiring = 0x2a8; // FScriptMulticastDelegate
	}

	namespace n_ASQFieldDressing { // : ASQHealingEquipableItem
		constexpr auto bWasHealingSelf = 0x4b0; // bool
		constexpr auto bWasRevivingOther = 0x4b1; // bool
		constexpr auto TimerHandle = 0x4b8; // FTimerHandle
		constexpr auto FieldDressingStaticInfo = 0x4c0; // USQFieldDressingStaticInfo*
		constexpr auto SelectedSoldier1pMontage = 0x4c8; // UAnimMontage*
		constexpr auto SelectedSoldier3pMontage = 0x4d0; // UAnimMontage*
		constexpr auto SelectedWeaponMontage = 0x4d8; // UAnimMontage*
	}

	namespace n_UMeshComponent { // : UPrimitiveComponent
		constexpr auto OverrideMaterials = 0x408; // TArray<UMaterialInterface*>
		constexpr auto bEnableMaterialParameterCaching = 0x428; // bool
	}

	namespace n_UInterpTrackDirector { // : UInterpTrack
		constexpr auto CutTrack = 0x70; // TArray<FDirectorTrackCut>
		constexpr auto bSimulateCameraCutsOnClients = 0x80; // char : 1
	}

	namespace n_UMoviePlayerSettings { // : UObject
		constexpr auto bWaitForMoviesToComplete = 0x28; // bool
		constexpr auto bMoviesAreSkippable = 0x29; // bool
		constexpr auto StartupMovies = 0x30; // TArray<FString>
	}

	namespace n_USQMapWidgetRallyPoint { // : USQMapWidgetSpawnPoint
		constexpr auto NumberOfSpawns = 0x2c8; // int
		constexpr auto SquadId = 0x2cc; // int
		constexpr auto bIsInSelfSquad = 0x2d0; // char : 1
		constexpr auto SquadState = 0x2d8; // ASQSquadState*
	}

	namespace n_UOperatorField { // : UFieldNodeBase
		constexpr auto Magnitude = 0xd8; // float
		constexpr auto RightField = 0xe0; // UFieldNodeBase*
		constexpr auto LeftField = 0xe8; // UFieldNodeBase*
		constexpr auto Operation = 0xf0; // EFieldOperationType
	}

	namespace n_ALight { // : AActor
		constexpr auto LightComponent = 0x248; // ULightComponent*
		constexpr auto bEnabled = 0x250; // char : 1
	}

	namespace n_USQProgressWidget { // : USQUserWidget
		constexpr auto TimerDuration = 0x230; // float
		constexpr auto TimerEnd = 0x234; // float
		constexpr auto bTimerActive = 0x238; // bool
		constexpr auto TimeRemaining = 0x23c; // float
		constexpr auto OnTimerReached = 0x240; // FScriptMulticastDelegate
	}

	namespace n_USQAASGraphLattice { // : USQMapLattice
		constexpr auto bHidesUncapLinks = 0x250; // bool
		constexpr auto LatticeNeutralColor = 0x254; // FLinearColor
		constexpr auto LatticeEnemyColor = 0x264; // FLinearColor
		constexpr auto LatticeFriendlyColor = 0x274; // FLinearColor
		constexpr auto LineThickness = 0x284; // float
		constexpr auto lattice = 0x288; // ASQAASGraph*
	}

	namespace n_UBTTaskNode { // : UBTNode
		constexpr auto Services = 0x58; // TArray<UBTService*>
		constexpr auto bIgnoreRestartSelf = 0x68; // char : 1
	}

	namespace n_UMaterialExpressionMapARPassthroughCameraUV { // : UMaterialExpression
		constexpr auto Coordinates = 0x40; // FExpressionInput
	}

	namespace n_USQProjectileMovement { // : UProjectileMovementComponent
		constexpr auto ConstantAcceleration = 0x1e0; // FVector
		constexpr auto ConstantAccelerationTimeout = 0x1ec; // float
		constexpr auto bIgnoreGravityDuringConstantAcceleration = 0x1f0; // bool
		constexpr auto bIgnoreGravity = 0x1f1; // bool
	}

	namespace n_UAIPerceptionStimuliSourceComponent { // : UActorComponent
		constexpr auto bAutoRegisterAsSource = 0xd8; // char : 1
		constexpr auto RegisterAsSourceForSenses = 0xe0; // TArray<UAISense*>
	}

	namespace n_USoundNodeMature { // : USoundNode
		constexpr auto ChildNodes = 0x28; // TArray<USoundNode*>
	}

	namespace n_UMotionControllerComponent { // : UPrimitiveComponent
		constexpr auto PlayerIndex = 0x408; // int
		constexpr auto Hand = 0x40c; // EControllerHand
		constexpr auto MotionSource = 0x410; // FName
		constexpr auto bDisableLowLatencyUpdate = 0x418; // char : 1
		constexpr auto CurrentTrackingStatus = 0x41c; // ETrackingStatus
		constexpr auto bDisplayDeviceModel = 0x41d; // bool
		constexpr auto DisplayModelSource = 0x420; // FName
		constexpr auto CustomDisplayMesh = 0x428; // UStaticMesh*
		constexpr auto DisplayMeshMaterialOverrides = 0x430; // TArray<UMaterialInterface*>
		constexpr auto DisplayComponent = 0x4a0; // UPrimitiveComponent*
	}

	namespace n_UPlayFabEventsAPI { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnPlayFabResponse = 0x28; // FScriptMulticastDelegate
		constexpr auto CallAuthenticationContext = 0xa0; // UPlayFabAuthenticationContext*
		constexpr auto RequestJsonObj = 0xa8; // UPlayFabJsonObject*
		constexpr auto ResponseJsonObj = 0xb0; // UPlayFabJsonObject*
	}

	namespace n_UAnimNotify_PlayParticleEffect { // : UAnimNotify
		constexpr auto PSTemplate = 0x38; // UParticleSystem*
		constexpr auto LocationOffset = 0x40; // FVector
		constexpr auto RotationOffset = 0x4c; // FRotator
		constexpr auto Scale = 0x58; // FVector
		constexpr auto Attached = 0x80; // char : 1
		constexpr auto SocketName = 0x84; // FName
	}

	namespace n_UScrollBoxSlot { // : UPanelSlot
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_USQAdminStats { // : UActorComponent
		constexpr auto PrimaryComponentTick = 0x30; // FActorComponentTickFunction
		constexpr auto ComponentTags = 0x88; // TArray<FName>
		constexpr auto AssetUserData = 0x98; // TArray<UAssetUserData*>
		constexpr auto bReplicates = 0xac; // char : 1
		constexpr auto bNetAddressable = 0xac; // char : 1
		constexpr auto bAutoActivate = 0xad; // char : 1
		constexpr auto bIsActive = 0xae; // char : 1
		constexpr auto bEditableWhenInherited = 0xae; // char : 1
		constexpr auto bCanEverAffectNavigation = 0xae; // char : 1
		constexpr auto bIsEditorOnly = 0xae; // char : 1
		constexpr auto CreationMethod = 0xb0; // EComponentCreationMethod
		constexpr auto OnComponentActivated = 0xb1; // FScriptMulticastDelegate
		constexpr auto OnComponentDeactivated = 0xb2; // FScriptMulticastDelegate
		constexpr auto UCSModifiedProperties = 0xb8; // TArray<FSimpleMemberReference>
	}

	namespace n_ASQSoldierNew { // : ASQSoldier
		constexpr auto IdleMontage = 0x1e80; // UAnimMontage*
		constexpr auto ClimbData = 0x1e88; // FSQClimbData
		constexpr auto bClimbingEnabled = 0x2000; // bool
		constexpr auto ClimbInfo = 0x2008; // FSQClimbInfo
		constexpr auto BoundaryListener = 0x20c0; // USQBoundaryListener*
		constexpr auto UpperMesh1P = 0x20d0; // USkeletalMeshComponent*
		constexpr auto SpringArm1P = 0x20d8; // USpringArmComponent*
		constexpr auto CurrentItemStaticInfo = 0x20e0; // USQItemStaticInfo*
		constexpr auto BotComponent = 0x20e8; // USQBotComponent*
		constexpr auto ControlRotation = 0x20f0; // FRotator
		constexpr auto AimRotation1P = 0x20fc; // FRotator
		constexpr auto RequiredProneTransitionTime = 0x2108; // float
		constexpr auto bCachedIsUsingItem = 0x210c; // bool
		constexpr auto bCachedIsUsingGrenade = 0x210d; // bool
		constexpr auto bCachedLeanLeft = 0x210e; // bool
		constexpr auto bCachedLeanRight = 0x210f; // bool
		constexpr auto CachedFwdPct = 0x2110; // float
		constexpr auto CachedStrafePct = 0x2114; // float
		constexpr auto bShot = 0x2118; // bool
		constexpr auto bWasCrouchedBeforeProne = 0x2119; // bool
		constexpr auto bIsCameraRecoilActive = 0x211a; // bool
		constexpr auto SpringArmTargetHeight1p = 0x211c; // float
		constexpr auto SpringArmHeight1pInterpSpeed = 0x2120; // float
		constexpr auto TempSpringArmHeight1p = 0x2124; // float
		constexpr auto CurrentSpringArmHeight1p = 0x2128; // float
		constexpr auto SpringArmClimbingHeight = 0x212c; // float
		constexpr auto SpringArmCrouchingMovingHeight = 0x2130; // float
		constexpr auto SpringArmCrouchingStaticHeight = 0x2134; // float
		constexpr auto SpringArmProneHeight = 0x2138; // float
		constexpr auto Base1pOffset = 0x213c; // FVector
		constexpr auto RawBase1pOffset = 0x2148; // FVector
		constexpr auto bSwitchedSoldierStance = 0x2154; // bool
		constexpr auto ViewMode3p = 0x2158; // int
		constexpr auto ViewPos3p = 0x215c; // FVector
		constexpr auto ViewDistance3p = 0x2168; // float
		constexpr auto ViewOrientation3p = 0x216c; // FRotator
		constexpr auto ViewScrollDistance3p = 0x2178; // int
		constexpr auto ViewAdjustingDelta3p = 0x217c; // FRotator
		constexpr auto ViewTogglePressTime = 0x2188; // float
		constexpr auto bAdjustingView3p = 0x218c; // bool
		constexpr auto bLastInThirdPersonView = 0x218d; // bool
		constexpr auto StartCrouch_1P_Montage = 0x2190; // UAnimMontage*
		constexpr auto EndCrouch_1P_Montage = 0x2198; // UAnimMontage*
		constexpr auto DraggingStart1pMontage = 0x21a0; // UAnimMontage*
		constexpr auto DraggingStart3pMontage = 0x21a8; // UAnimMontage*
		constexpr auto DraggingEnd1pMontage = 0x21b0; // UAnimMontage*
		constexpr auto DraggingEnd3pMontage = 0x21b8; // UAnimMontage*
		constexpr auto FreeLookComponent = 0x21c0; // USQFreeLookComponent*
		constexpr auto VaultClimbAo = 0x21c8; // FRotator
		constexpr auto CachedVaultClimbAo2 = 0x21d4; // FRotator
		constexpr auto CachedVaultClimbAoYawInterpSpeed = 0x21e0; // float
		constexpr auto CachedVaultClimbAoPitchInterpSpeed = 0x21e4; // float
		constexpr auto PreviousWeapon = 0x21e8; // ASQEquipableItem*
		constexpr auto bPreviousWeaponMagHasAmmo = 0x21f0; // bool
		constexpr auto bCachedIsSprinting = 0x21f1; // bool
		constexpr auto WeaponDeviationRot = 0x21f8; // USceneComponent*
		constexpr auto bAccuracyDebugVisible = 0x2200; // bool
		constexpr auto CachedAnimInstance3p = 0x2208; // USQAnimInstanceSoldier3P*
		constexpr auto CachedAnimInstance1p = 0x2210; // USQAnimInstanceSoldier1P*
		constexpr auto SoldierPlayTime1p = 0x2218; // float
		constexpr auto SoldierPlayTime3p = 0x221c; // float
		constexpr auto Bipod3pSkelMeshOffset = 0x2220; // float
		constexpr auto BeginBipod3pSkelMeshOffset = 0x2224; // float
		constexpr auto CachedBipodTransitionAlpha = 0x2228; // float
		constexpr auto bIsBipodDeployed = 0x222c; // bool
		constexpr auto BipodHitLocZeroBased = 0x2230; // FVector
		constexpr auto BipodObject = 0x2240; // USceneComponent*
		constexpr auto CachedDeployed1pBipodLocation = 0x2254; // FVector
		constexpr auto BipodHitLocSpringArm1PHeight = 0x2260; // float
		constexpr auto BipodNonDeployedSpringArm1pRelativeHeight = 0x2264; // float
		constexpr auto BipodSpringArmFloorTraceLength = 0x22dc; // float
		constexpr auto DeployedBipodCapsuleRadius = 0x22e0; // float
		constexpr auto BipodClientServerAcceptableRange = 0x22e4; // float
		constexpr auto BipodObjectMaxDelta = 0x22e8; // float
		constexpr auto BipodDepth = 0x22ec; // float
		constexpr auto BipodStandingMinDeployHeight = 0x22f0; // float
		constexpr auto BipodStandingMaxDeployHeight = 0x22f4; // float
		constexpr auto BipodCrouchingMinDeployHeight = 0x22f8; // float
		constexpr auto BipodCrouchingMaxDeployHeight = 0x22fc; // float
		constexpr auto BipodProneMinDeployHeight = 0x2300; // float
		constexpr auto BipodProneMaxDeployHeight = 0x2304; // float
		constexpr auto BipodCameraProbeSize = 0x2308; // float
		constexpr auto bWeaponLowered = 0x2310; // bool
		constexpr auto OnPawnPossessedEvent = 0x2318; // FScriptMulticastDelegate
		constexpr auto OnPawnUnPossessedEvent = 0x2328; // FScriptMulticastDelegate
		constexpr auto EmoteData = 0x2338; // USQAnimDataEmotes*
		constexpr auto MouthAnim = 0x2340; // FSQVoipAnim
		constexpr auto HandActionRadioAnim = 0x2360; // FSQVoipAnim
		constexpr auto bIsPlayingVoipHandAnim = 0x2380; // bool
	}

	namespace n_USQVehicleWheel_Rear { // : USQVehicleWheel_Front
		constexpr auto CollisionMesh = 0x28; // UStaticMesh*
		constexpr auto bDontCreateShape = 0x30; // bool
		constexpr auto bAutoAdjustCollisionSize = 0x31; // bool
		constexpr auto Offset = 0x34; // FVector
		constexpr auto ShapeRadius = 0x40; // float
		constexpr auto ShapeWidth = 0x44; // float
		constexpr auto Mass = 0x48; // float
		constexpr auto DampingRate = 0x4c; // float
		constexpr auto PhysMatDampingRateMultiplier = 0x50; // float
		constexpr auto SteerAngle = 0x54; // float
		constexpr auto bAffectedByHandbrake = 0x58; // bool
		constexpr auto TireType = 0x60; // UTireType*
		constexpr auto TireConfig = 0x68; // UTireConfig*
		constexpr auto LatStiffMaxLoad = 0x70; // float
		constexpr auto LatStiffValue = 0x74; // float
		constexpr auto LongStiffValue = 0x78; // float
		constexpr auto SuspensionForceOffset = 0x7c; // float
		constexpr auto SuspensionMaxRaise = 0x80; // float
		constexpr auto SuspensionMaxDrop = 0x84; // float
		constexpr auto SuspensionNaturalFrequency = 0x88; // float
		constexpr auto SuspensionDampingRatio = 0x8c; // float
		constexpr auto SweepType = 0x90; // EWheelSweepType
		constexpr auto MaxBrakeTorque = 0x94; // float
		constexpr auto MaxHandBrakeTorque = 0x98; // float
		constexpr auto VehicleSim = 0xa0; // UWheeledVehicleMovementComponent*
		constexpr auto WheelIndex = 0xa8; // int
		constexpr auto DebugLongSlip = 0xac; // float
		constexpr auto DebugLatSlip = 0xb0; // float
		constexpr auto DebugNormalizedTireLoad = 0xb4; // float
		constexpr auto DebugWheelTorque = 0xbc; // float
		constexpr auto DebugLongForce = 0xc0; // float
		constexpr auto DebugLatForce = 0xc4; // float
		constexpr auto Location = 0xc8; // FVector
		constexpr auto OldLocation = 0xd4; // FVector
		constexpr auto Velocity = 0xe0; // FVector
	}

	namespace n_UARSaveWorldAsyncTaskBlueprintProxy { // : UARBaseAsyncTaskBlueprintProxy
		constexpr auto OnSuccess = 0x50; // FScriptMulticastDelegate
		constexpr auto OnFailed = 0x60; // FScriptMulticastDelegate
	}

	namespace n_UFoliageType_Actor { // : UFoliageType
		constexpr auto ActorClass = 0x340; // AActor*
	}

	namespace n_ASQMapMarker { // : ASQTeamActor
		constexpr auto MapIcon = 0x260; // USQMapIconComponent*
		constexpr auto StateObject = 0x268; // USQCoreStateComponent*
		constexpr auto Squad = 0x270; // int
		constexpr auto FireTeamId = 0x274; // int
		constexpr auto PlacementEmote = 0x278; // ESQEmotes
	}

	namespace n_UBookMark2D { // : UBookmarkBase
		constexpr auto Zoom2D = 0x28; // float
		constexpr auto Location = 0x2c; // FIntPoint
	}

	namespace n_UBTDecorator_Cooldown { // : UBTDecorator
		constexpr auto CoolDownTime = 0x68; // float
	}

	namespace n_ABP_RPG7V2_Frag_C { // : ABP_RPG7V2_Parent_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
		constexpr auto MuzzleFlashRearComponent3P = 0x7b8; // UParticleSystemComponent*
		constexpr auto BackBlastComponent3P = 0x7c0; // UChildActorComponent*
		constexpr auto MuzzleFlashRearComponent1P = 0x7c8; // UParticleSystemComponent*
		constexpr auto SquadBlast = 0x7d0; // USQBlastComponent*
		constexpr auto BackBlastComponent1P = 0x7d8; // UChildActorComponent*
		constexpr auto BackblastSocket = 0x7e0; // FName
		constexpr auto BackblastEffect1P = 0x7e8; // UParticleSystem*
		constexpr auto BackblastEffect3P = 0x7f0; // UParticleSystem*
	}

	namespace n_UReturnResultsTerminal { // : UFieldNodeBase
		constexpr auto PrimaryComponentTick = 0x30; // FActorComponentTickFunction
		constexpr auto ComponentTags = 0x88; // TArray<FName>
		constexpr auto AssetUserData = 0x98; // TArray<UAssetUserData*>
		constexpr auto bReplicates = 0xac; // char : 1
		constexpr auto bNetAddressable = 0xac; // char : 1
		constexpr auto bAutoActivate = 0xad; // char : 1
		constexpr auto bIsActive = 0xae; // char : 1
		constexpr auto bEditableWhenInherited = 0xae; // char : 1
		constexpr auto bCanEverAffectNavigation = 0xae; // char : 1
		constexpr auto bIsEditorOnly = 0xae; // char : 1
		constexpr auto CreationMethod = 0xb0; // EComponentCreationMethod
		constexpr auto OnComponentActivated = 0xb1; // FScriptMulticastDelegate
		constexpr auto OnComponentDeactivated = 0xb2; // FScriptMulticastDelegate
		constexpr auto UCSModifiedProperties = 0xb8; // TArray<FSimpleMemberReference>
	}

	namespace n_UMovieSceneMaterialParameterCollectionTrack { // : UMovieSceneMaterialTrack
		constexpr auto MPC = 0x68; // UMaterialParameterCollection*
	}

	namespace n_UMaterialInstance { // : UMaterialInterface
		constexpr auto PhysMaterial = 0x88; // UPhysicalMaterial*
		constexpr auto Parent = 0x90; // UMaterialInterface*
		constexpr auto bHasStaticPermutationResource = 0x9a; // char : 1
		constexpr auto bOverrideSubsurfaceProfile = 0x9a; // char : 1
		constexpr auto ScalarParameterValues = 0xa0; // TArray<FScalarParameterValue>
		constexpr auto VectorParameterValues = 0xb0; // TArray<FVectorParameterValue>
		constexpr auto TextureParameterValues = 0xc0; // TArray<FTextureParameterValue>
		constexpr auto FontParameterValues = 0xd0; // TArray<FFontParameterValue>
		constexpr auto BasePropertyOverrides = 0xe0; // FMaterialInstanceBasePropertyOverrides
		constexpr auto PermutationTextureReferences = 0xf8; // TArray<UObject*>
		constexpr auto StaticParameters = 0x108; // FStaticParameterSet
	}

	namespace n_UMaterialExpressionBumpOffset { // : UMaterialExpression
		constexpr auto Coordinate = 0x40; // FExpressionInput
		constexpr auto Height = 0x54; // FExpressionInput
		constexpr auto HeightRatioInput = 0x68; // FExpressionInput
		constexpr auto HeightRatio = 0x7c; // float
		constexpr auto ReferencePlane = 0x80; // float
		constexpr auto ConstCoordinate = 0x84; // uint32
	}

	namespace n_UMovieSceneSkeletalAnimationTrack { // : UMovieSceneNameableTrack
		constexpr auto AnimationSections = 0x58; // TArray<UMovieSceneSection*>
		constexpr auto bUseLegacySectionIndexBlend = 0x68; // bool
	}

	namespace n_ABP_M4M203_M150_UGL_Smoke_Red_Founders_C { // : ABP_M4M203_M150_UGL_Smoke_Founders_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_ABP_M4A1_M68_Woodland_C { // : ABP_M4A1_M68_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_ULightComponentBase { // : USceneComponent
		constexpr auto LightGuid = 0x218; // FGuid
		constexpr auto Brightness = 0x228; // float
		constexpr auto Intensity = 0x22c; // float
		constexpr auto LightColor = 0x230; // FColor
		constexpr auto bAffectsWorld = 0x234; // char : 1
		constexpr auto CastShadows = 0x234; // char : 1
		constexpr auto CastStaticShadows = 0x234; // char : 1
		constexpr auto CastDynamicShadows = 0x234; // char : 1
		constexpr auto bAffectTranslucentLighting = 0x234; // char : 1
		constexpr auto bTransmission = 0x234; // char : 1
		constexpr auto bCastVolumetricShadow = 0x234; // char : 1
		constexpr auto bCastRaytracedShadow = 0x234; // char : 1
		constexpr auto bAffectReflection = 0x235; // char : 1
		constexpr auto bAffectGlobalIllumination = 0x235; // char : 1
		constexpr auto IndirectLightingIntensity = 0x238; // float
		constexpr auto VolumetricScatteringIntensity = 0x23c; // float
		constexpr auto SamplesPerPixel = 0x240; // int
	}

	namespace n_ASQObjectiveRuleset { // : ASQGameModeRuleset
		constexpr auto NumberOfObjectives = 0x2a8; // int
		constexpr auto MaxNumberOfObjectivesShownAtSameTime = 0x2ac; // int
		constexpr auto TicketsGainedUponMeetingObjective = 0x2b0; // int
		constexpr auto TicketsLostUponLosingObjective = 0x2b4; // int
		constexpr auto KnownAttackObjectiveMarkerClass = 0x2b8; // ASQMapMarker*
		constexpr auto KnownDefendObjectiveMarkerClass = 0x2c0; // ASQMapMarker*
		constexpr auto UnknownDefendObjectiveMarkerClass = 0x2c8; // ASQMapMarker*
		constexpr auto SatisfiedObjectiveMarkerClass = 0x2d0; // ASQMapMarker*
		constexpr auto MinObjectiveDistance = 0x2d8; // float
		constexpr auto bOnlyCheckMinDistanceAgainstActiveObjectives = 0x2dc; // bool
		constexpr auto bRandomlyPickObjectiveIfAllFailDistanceCheck = 0x2dd; // bool
		constexpr auto Markers = 0x2e0; // TArray<ASQMapMarker*>
		constexpr auto AllAvailableObjectiveLocations = 0x2f0; // TArray<FTransform>
		constexpr auto FilteredObjectiveLocations = 0x300; // TArray<FTransform>
		constexpr auto Objectives = 0x310; // TArray<ASQObjective*>
		constexpr auto ObjectiveType = 0x320; // ASQObjective*
		constexpr auto TimeSinceLastObjectiveSpawn = 0x328; // float
		constexpr auto bOverrideObjectiveSpawning = 0x32c; // bool
		constexpr auto bGenerateMarkersForTeamOneUponObjectiveSpawn = 0x32d; // bool
		constexpr auto bGenerateMarkersForTeamTwoUponObjectiveSpawn = 0x32e; // bool
		constexpr auto WinningTeamUponAllObjectivesCompleted = 0x32f; // ESQTeam
		constexpr auto WinningTeamUponTimerExpired = 0x330; // ESQTeam
		constexpr auto WinningTeamIfTeamOneHasNoTickets = 0x331; // ESQTeam
		constexpr auto WinningTeamIfTeamTwoHasNoTickets = 0x332; // ESQTeam
	}

	namespace n_ULandscapeMeshCollisionComponent { // : ULandscapeHeightfieldCollisionComponent
		constexpr auto MeshGuid = 0x4e8; // FGuid
	}

	namespace n_ABP_RPG7_Frag_2Mag_Founders_C { // : ABP_RPG7_Frag_Founders_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
		constexpr auto MuzzleFlashRearComponent3P = 0x7b8; // UParticleSystemComponent*
		constexpr auto BackBlastComponent3P = 0x7c0; // UChildActorComponent*
		constexpr auto MuzzleFlashRearComponent1P = 0x7c8; // UParticleSystemComponent*
		constexpr auto SquadBlast = 0x7d0; // USQBlastComponent*
		constexpr auto BackBlastComponent1P = 0x7d8; // UChildActorComponent*
		constexpr auto BackblastSocket = 0x7e0; // FName
		constexpr auto BackblastEffect1P = 0x7e8; // UParticleSystem*
		constexpr auto BackblastEffect3P = 0x7f0; // UParticleSystem*
	}

	namespace n_UPhysicalAnimationComponent { // : UActorComponent
		constexpr auto StrengthMultiplyer = 0xd8; // float
		constexpr auto SkeletalMeshComponent = 0xe0; // USkeletalMeshComponent*
	}

	namespace n_UAITask { // : UGameplayTask
		constexpr auto OwnerController = 0x68; // AAIController*
	}

	namespace n_UEnvQueryTest { // : UEnvQueryNode
		constexpr auto TestOrder = 0x30; // int
		constexpr auto TestPurpose = 0x34; // EEnvTestPurpose
		constexpr auto TestComment = 0x38; // FString
		constexpr auto MultipleContextFilterOp = 0x48; // EEnvTestFilterOperator
		constexpr auto MultipleContextScoreOp = 0x49; // EEnvTestScoreOperator
		constexpr auto FilterType = 0x4a; // EEnvTestFilterType
		constexpr auto BoolValue = 0x50; // FAIDataProviderBoolValue
		constexpr auto FloatValueMin = 0x80; // FAIDataProviderFloatValue
		constexpr auto FloatValueMax = 0xb0; // FAIDataProviderFloatValue
		constexpr auto ScoringEquation = 0xe1; // EEnvTestScoreEquation
		constexpr auto ClampMinType = 0xe2; // EEnvQueryTestClamping
		constexpr auto ClampMaxType = 0xe3; // EEnvQueryTestClamping
		constexpr auto NormalizationType = 0xe4; // EEQSNormalizationType
		constexpr auto ScoreClampMin = 0xe8; // FAIDataProviderFloatValue
		constexpr auto ScoreClampMax = 0x118; // FAIDataProviderFloatValue
		constexpr auto ScoringFactor = 0x148; // FAIDataProviderFloatValue
		constexpr auto ReferenceValue = 0x178; // FAIDataProviderFloatValue
		constexpr auto bDefineReferenceValue = 0x1a8; // bool
		constexpr auto bWorkOnFloatValues = 0x1b8; // char : 1
	}

	namespace n_USQSquadStateDataDeployable { // : USQSquadStateMapData
		constexpr auto BuildState = 0x180; // ESQBuildState
	}

	namespace n_ULandscapeGrassType { // : UObject
		constexpr auto GrassVarieties = 0x28; // TArray<FGrassVariety>
		constexpr auto bEnableDensityScaling = 0x38; // char : 1
		constexpr auto GrassMesh = 0x40; // UStaticMesh*
		constexpr auto GrassDensity = 0x48; // float
		constexpr auto PlacementJitter = 0x4c; // float
		constexpr auto StartCullDistance = 0x50; // int
		constexpr auto EndCullDistance = 0x54; // int
		constexpr auto RandomRotation = 0x58; // bool
		constexpr auto AlignToSurface = 0x59; // bool
	}

	namespace n_UMaterialExpressionSphericalParticleOpacity { // : UMaterialExpression
		constexpr auto Density = 0x40; // FExpressionInput
		constexpr auto ConstantDensity = 0x54; // float
	}

	namespace n_UPlayFabAdminAPI { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnPlayFabResponse = 0x28; // FScriptMulticastDelegate
		constexpr auto CallAuthenticationContext = 0x760; // UPlayFabAuthenticationContext*
		constexpr auto RequestJsonObj = 0x768; // UPlayFabJsonObject*
		constexpr auto ResponseJsonObj = 0x770; // UPlayFabJsonObject*
	}

	namespace n_USQAvailability_Action { // : USQAvailability
		constexpr auto Setting = 0x50; // USQActionSettings*
	}

	namespace n_USQCoreStateConnectionChildActorComponent { // : UChildActorComponent
		constexpr auto NetPriority = 0x248; // float
		constexpr auto NetUpdateFrequency = 0x24c; // float
		constexpr auto MinNetUpdateFrequency = 0x250; // float
	}

	namespace n_UBrainComponent { // : UActorComponent
		constexpr auto BlackboardComp = 0xe0; // UBlackboardComponent*
		constexpr auto AIOwner = 0xe8; // AAIController*
	}

	namespace n_UVoiceChannel { // : UChannel
		constexpr auto Connection = 0x28; // UNetConnection*
	}

	namespace n_UAnimationSettings { // : UDeveloperSettings
		constexpr auto CompressCommandletVersion = 0x38; // int
		constexpr auto KeyEndEffectorsMatchNameArray = 0x40; // TArray<FString>
		constexpr auto DefaultCompressionAlgorithm = 0x50; // UAnimCompress*
		constexpr auto RotationCompressionFormat = 0x58; // AnimationCompressionFormat
		constexpr auto TranslationCompressionFormat = 0x59; // AnimationCompressionFormat
		constexpr auto MaxCurveError = 0x5c; // float
		constexpr auto AlternativeCompressionThreshold = 0x60; // float
		constexpr auto ForceRecompression = 0x64; // bool
		constexpr auto bOnlyCheckForMissingSkeletalMeshes = 0x65; // bool
		constexpr auto bForceBelowThreshold = 0x66; // bool
		constexpr auto bFirstRecompressUsingCurrentOrDefault = 0x67; // bool
		constexpr auto bRaiseMaxErrorToExisting = 0x68; // bool
		constexpr auto bTryExhaustiveSearch = 0x69; // bool
		constexpr auto bEnableSegmenting = 0x6a; // bool
		constexpr auto bEnablePerformanceLog = 0x6b; // bool
		constexpr auto bStripAnimationDataOnDedicatedServer = 0x6c; // bool
		constexpr auto bTickAnimationOnSkeletalMeshInit = 0x6d; // bool
	}

	namespace n_UBlueprint { // : UBlueprintCore
		constexpr auto bRecompileOnLoad = 0x50; // char : 1
		constexpr auto ParentClass = 0x58; // UObject*
		constexpr auto bHasBeenRegenerated = 0x60; // char : 1
		constexpr auto bIsRegeneratingOnLoad = 0x60; // char : 1
		constexpr auto SimpleConstructionScript = 0x68; // USimpleConstructionScript*
		constexpr auto ComponentTemplates = 0x70; // TArray<UActorComponent*>
		constexpr auto Timelines = 0x80; // TArray<UTimelineTemplate*>
		constexpr auto InheritableComponentHandler = 0x90; // UInheritableComponentHandler*
		constexpr auto BlueprintType = 0x98; // EBlueprintType
		constexpr auto BlueprintSystemVersion = 0x9c; // int
		constexpr auto bNativize = 0xd0; // bool
	}

	namespace n_USQForceMovementComponentSettings { // : UDataAsset
		constexpr auto Mass = 0x30; // float
		constexpr auto MaxSpeed = 0x34; // float
		constexpr auto MaxRotationalVelocity = 0x38; // FRotator
		constexpr auto Length = 0x44; // float
		constexpr auto Width = 0x48; // float
		constexpr auto Height = 0x4c; // float
		constexpr auto AirDensityByHeight = 0x50; // UCurveFloat*
		constexpr auto DragCoefficient = 0x58; // float
		constexpr auto Gravity = 0x5c; // float
		constexpr auto bApplyGravity = 0x60; // bool
		constexpr auto bApplyDrag = 0x61; // bool
		constexpr auto DragApplicationSocket = 0x64; // FName
		constexpr auto DragTorqueMultiplier = 0x6c; // FVector
		constexpr auto bApplyCentripedalForce = 0x78; // bool
		constexpr auto bUsePhysX = 0x79; // bool
		constexpr auto bDebugForces = 0x7a; // bool
		constexpr auto AngularDamping = 0x7c; // float
		constexpr auto LinearDamping = 0x80; // float
	}

	namespace n_USQRotorVehicleMovementComponent { // : USQForceNetMovementComponent
		constexpr auto RotorsSetup = 0x2c8; // TArray<USQRotorSetup*>
		constexpr auto Rotors = 0x2d8; // TArray<USQRotor*>
	}

	namespace n_UMovieSceneParticleSection { // : UMovieSceneSection
		constexpr auto ParticleKeys = 0xe0; // FMovieSceneParticleChannel
	}

	namespace n_USQBoundaryListener { // : UActorComponent
		constexpr auto bRegisterToAllBoundaries = 0xd8; // bool
		constexpr auto TargetBoundaryClasses = 0xe0; // TArray<ASQBoundary*>
		constexpr auto OnEnterBoundarySignal = 0xf0; // FScriptMulticastDelegate
		constexpr auto OnExitBoundarySignal = 0x100; // FScriptMulticastDelegate
		constexpr auto OverrideTargetActor = 0x110; // AActor*
		constexpr auto Boundaries = 0x118; // TArray<ASQBoundary*>
	}

	namespace n_UDatasmithSkyLightComponentTemplate { // : UDatasmithObjectTemplate
		constexpr auto SourceType = 0x30; // ESkyLightSourceType
		constexpr auto CubemapResolution = 0x34; // int
		constexpr auto Cubemap = 0x38; // UTextureCube*
	}

	namespace n_UL85A2AG36_Skeleton_AnimBlueprint_C { // : USQWeaponAnimInstance
		constexpr auto UberGraphFrame = 0x2b0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root_FB5A4E614A3D3B8A8D1AD180931EFF57 = 0x2b8; // FAnimNode_Root
		constexpr auto AnimGraphNode_LayeredBoneBlend_50C0996949FB66745593D5BD8741A339 = 0x2e8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_Slot_1DE308F14B55FBE4C7E49292F5D9706A = 0x3a8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_420808144DD67C4EED76428C383413A1 = 0x3f0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_DFF0EDA0424C3383B54689ADAED273F9 = 0x438; // FAnimNode_Slot
		constexpr auto AnimGraphNode_LayeredBoneBlend_A3F40E0445CC703B4FEED5B2EF089026 = 0x480; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_B0FF18D3411206771324F3AA7F3ABC6E = 0x540; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_D53F20E54B31D6C41876A58092C5F115 = 0x5b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_7238F9D34A80B86B1E00CF88B886F8DC = 0x630; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_227B4361422F7B20CCDBDFA5258D4C2E = 0x6f0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceEvaluator_2C9D8B09413DE0A510FB2595B68ACFC9 = 0x768; // FAnimNode_SequenceEvaluator
	}

	namespace n_USQDamageType_Collision { // : USQDamageType
		constexpr auto bCanCauseBleeding = 0x40; // bool
	}

	namespace n_ASpectatorPawn { // : ADefaultPawn
		constexpr auto BaseTurnRate = 0x2a8; // float
		constexpr auto BaseLookUpRate = 0x2ac; // float
		constexpr auto MovementComponent = 0x2b0; // UPawnMovementComponent*
		constexpr auto CollisionComponent = 0x2b8; // USphereComponent*
		constexpr auto MeshComponent = 0x2c0; // UStaticMeshComponent*
		constexpr auto bAddDefaultMovementBindings = 0x2c8; // char : 1
	}

	namespace n_ABP_RPG7_Heat_2Mag_C { // : ABP_RPG7_Heat_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
		constexpr auto MuzzleFlashRearComponent3P = 0x7b8; // UParticleSystemComponent*
		constexpr auto BackBlastComponent3P = 0x7c0; // UChildActorComponent*
		constexpr auto MuzzleFlashRearComponent1P = 0x7c8; // UParticleSystemComponent*
		constexpr auto SquadBlast = 0x7d0; // USQBlastComponent*
		constexpr auto BackBlastComponent1P = 0x7d8; // UChildActorComponent*
		constexpr auto BackblastSocket = 0x7e0; // FName
		constexpr auto BackblastEffect1P = 0x7e8; // UParticleSystem*
		constexpr auto BackblastEffect3P = 0x7f0; // UParticleSystem*
	}

	namespace n_ABP_M4_M150_Founders_C { // : ABP_M4_M150_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_USQCoreStateSquadItemWidget { // : USQCoreStateSquadListWidget
		constexpr auto SquadState = 0x260; // ASQSquadState*
		constexpr auto SquadId = 0x268; // int
		constexpr auto SquadName = 0x270; // FString
		constexpr auto LeaderName = 0x280; // FString
		constexpr auto MemberNum = 0x290; // int
		constexpr auto MaxMembers = 0x294; // int
		constexpr auto bIsSelfInSquad = 0x298; // bool
		constexpr auto bIsCommandSquad = 0x299; // bool
		constexpr auto JoinButtonState = 0x29a; // EJoinButtonState
		constexpr auto CachedSQPlayerController = 0x2a0; // ASQPlayerController*
	}

	namespace n_ABP_40MM_Smoke_Blue_Proj2_C { // : ABP_40MM_Smoke_Proj2_C
		constexpr auto Effect = 0x548; // UParticleSystemComponent*
		constexpr auto SmokeEffect = 0x550; // UParticleSystem*
		constexpr auto SmokeSound = 0x558; // USoundCue*
	}

	namespace n_UBP_M4M203_Rifle_Optic_StaticInfo_C { // : UBP_M4M203_Rifle_StaticInfo_C
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_USQSoldierStaticInfo { // : UDataAsset
		constexpr auto MaximumReviveTime = 0x30; // float
		constexpr auto ReviveRecoveryPerSecond = 0x34; // float
		constexpr auto HorizontalFallingDamageMultiplier = 0x38; // float
		constexpr auto MaximumHorizontalSafeFallingSpeed = 0x3c; // float
		constexpr auto DamageRevivePenaltyCurve = 0x40; // UCurveFloat*
		constexpr auto GrabbingDistance = 0x48; // float
		constexpr auto DraggingDropThresholdAngle = 0x4c; // float
		constexpr auto GrabbingSphereRadius = 0x50; // float
		constexpr auto MinBipodPronePitch = 0x54; // float
		constexpr auto MaxBipodPronePitch = 0x58; // float
	}

	namespace n_UNavLinkTrivial { // : UNavLinkDefinition
		constexpr auto Links = 0x28; // TArray<FNavigationLink>
		constexpr auto SegmentLinks = 0x38; // TArray<FNavigationSegmentLink>
	}

	namespace n_UClothingAssetBase { // : UObject
		constexpr auto ImportedFilePath = 0x28; // FString
		constexpr auto AssetGuid = 0x38; // FGuid
	}

	namespace n_UNavArea_LowHeight { // : UNavArea
		constexpr auto DefaultCost = 0x30; // float
		constexpr auto FixedAreaEnteringCost = 0x34; // float
		constexpr auto DrawColor = 0x38; // FColor
		constexpr auto SupportedAgents = 0x3c; // FNavAgentSelector
		constexpr auto bSupportsAgent0 = 0x40; // char : 1
		constexpr auto bSupportsAgent1 = 0x40; // char : 1
		constexpr auto bSupportsAgent2 = 0x40; // char : 1
		constexpr auto bSupportsAgent3 = 0x40; // char : 1
		constexpr auto bSupportsAgent4 = 0x40; // char : 1
		constexpr auto bSupportsAgent5 = 0x40; // char : 1
		constexpr auto bSupportsAgent6 = 0x40; // char : 1
		constexpr auto bSupportsAgent7 = 0x40; // char : 1
		constexpr auto bSupportsAgent8 = 0x41; // char : 1
		constexpr auto bSupportsAgent9 = 0x41; // char : 1
		constexpr auto bSupportsAgent10 = 0x41; // char : 1
		constexpr auto bSupportsAgent11 = 0x41; // char : 1
		constexpr auto bSupportsAgent12 = 0x41; // char : 1
		constexpr auto bSupportsAgent13 = 0x41; // char : 1
		constexpr auto bSupportsAgent14 = 0x41; // char : 1
		constexpr auto bSupportsAgent15 = 0x41; // char : 1
	}

	namespace n_UMovieSceneFloatSection { // : UMovieSceneSection
		constexpr auto FloatCurve = 0xe0; // FMovieSceneFloatChannel
	}

	namespace n_UTimeSynchronizationSource { // : UObject
		constexpr auto bUseForSynchronization = 0x28; // bool
		constexpr auto FrameOffset = 0x2c; // int
	}

	namespace n_UARTextureCameraDepth { // : UARTexture
		constexpr auto DepthQuality = 0xf0; // EARDepthQuality
		constexpr auto DepthAccuracy = 0xf1; // EARDepthAccuracy
		constexpr auto bIsTemporallySmoothed = 0xf2; // bool
	}

	namespace n_AGameplayAbilityTargetActor_Radius { // : AGameplayAbilityTargetActor
		constexpr auto Radius = 0x358; // float
	}

	namespace n_UMaterialFunctionMaterialLayerInstance { // : UMaterialFunctionInstance
		constexpr auto Parent = 0x40; // UMaterialFunctionInterface*
		constexpr auto Base = 0x48; // UMaterialFunctionInterface*
		constexpr auto ScalarParameterValues = 0x50; // TArray<FScalarParameterValue>
		constexpr auto VectorParameterValues = 0x60; // TArray<FVectorParameterValue>
		constexpr auto TextureParameterValues = 0x70; // TArray<FTextureParameterValue>
		constexpr auto FontParameterValues = 0x80; // TArray<FFontParameterValue>
		constexpr auto StaticSwitchParameterValues = 0x90; // TArray<FStaticSwitchParameter>
		constexpr auto StaticComponentMaskParameterValues = 0xa0; // TArray<FStaticComponentMaskParameter>
	}

	namespace n_USQMapGrid { // : USQUserWidget
		constexpr auto MajorGridColor = 0x230; // FLinearColor
		constexpr auto MinorGridColor = 0x240; // FLinearColor
		constexpr auto TinyGridColor = 0x250; // FLinearColor
		constexpr auto MajorGridOpacityCurve = 0x260; // UCurveFloat*
		constexpr auto MinorGridOpacityCurve = 0x268; // UCurveFloat*
		constexpr auto TinyGridOpacityCurve = 0x270; // UCurveFloat*
		constexpr auto MajorGridWidth = 0x278; // int
		constexpr auto MinorGridWidth = 0x27c; // int
		constexpr auto TinyGridWidth = 0x280; // int
		constexpr auto LegendPercentageLocation = 0x284; // FVector2D
		constexpr auto LegendTextOffset = 0x28c; // FVector2D
		constexpr auto MaxLegendPercentageSize = 0x294; // float
		constexpr auto LegendScaleFontInfo = 0x298; // FSlateFontInfo
		constexpr auto OwnerMap = 0x2e8; // USQMap*
		constexpr auto bDrawGridMarkers = 0x2f0; // bool
		constexpr auto RealMapSize = 0x2f4; // FVector2D
		constexpr auto RealToPixel = 0x2fc; // FVector2D
		constexpr auto PixelSize = 0x304; // FVector2D
		constexpr auto LinesNeeded = 0x30c; // FVector2D
	}

	namespace n_ASQVehicleSmokeGenerator { // : ASQVehicleWeapon
		constexpr auto SmokeGeneratorSound = 0xa70; // UAudioComponent*
		constexpr auto VehicleRef = 0xa78; // ASQGroundVehicle*
		constexpr auto SmokeGenerators = 0xa80; // TArray<UParticleSystemComponent*>
		constexpr auto LoopingSmokeGenSound = 0xa90; // USoundBase*
		constexpr auto FadeInDuration = 0xa98; // float
		constexpr auto FadeoutDuration = 0xa9c; // float
		constexpr auto EndUseSound = 0xaa0; // USoundBase*
	}

	namespace n_UBTTask_FinishWithResult { // : UBTTaskNode
		constexpr auto Result = 0x70; // EBTNodeResult
	}

	namespace n_UMultiPackerLayerDatabase { // : UObject
		constexpr auto LayerBase = 0x28; // FLayerDatabase
		constexpr auto ColorOutline = 0x80; // FLinearColor
		constexpr auto ColorInterior = 0x90; // FLinearColor
		constexpr auto OutlineThresold = 0xa0; // float
		constexpr auto SDFThresold = 0xa4; // float
		constexpr auto Button = 0xa8; // UTileCopy*
		constexpr auto Material = 0xb0; // UMaterialInstanceDynamic*
	}

	namespace n_UIpNetDriver { // : UNetDriver
		constexpr auto LogPortUnreach = 0x748; // char : 1
		constexpr auto AllowPlayerPortUnreach = 0x748; // char : 1
		constexpr auto MaxPortCountToTry = 0x74c; // uint32
		constexpr auto ServerDesiredSocketReceiveBufferBytes = 0x75c; // uint32
		constexpr auto ServerDesiredSocketSendBufferBytes = 0x760; // uint32
		constexpr auto ClientDesiredSocketReceiveBufferBytes = 0x764; // uint32
		constexpr auto ClientDesiredSocketSendBufferBytes = 0x768; // uint32
		constexpr auto MaxSecondsInReceive = 0x770; // double
		constexpr auto NbPacketsBetweenReceiveTimeTest = 0x778; // int
	}

	namespace n_UBTService_RunEQS { // : UBTService_BlackboardBase
		constexpr auto EQSRequest = 0x98; // FEQSParametrizedQueryExecutionRequest
	}

	namespace n_UBP_M110_StaticInfo_C { // : UBP_GenericWeapon_StaticInfo_C
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_UAREnvironmentCaptureProbeTexture { // : UTextureCube
		constexpr auto TextureType = 0x128; // EARTextureType
		constexpr auto Timestamp = 0x12c; // float
		constexpr auto ExternalTextureGuid = 0x130; // FGuid
		constexpr auto Size = 0x140; // FVector2D
	}

	namespace n_USQDoubleRotorAnimInstance { // : USQRotorsAnimInstance
		constexpr auto Rotor1Name = 0x2f0; // FName
		constexpr auto Rotor2Name = 0x2f8; // FName
		constexpr auto Rotor1Rotation = 0x300; // FRotator
		constexpr auto Rotor2Rotation = 0x30c; // FRotator
	}

	namespace n_UAbilityTask_ApplyRootMotionRadialForce { // : UAbilityTask_ApplyRootMotion_Base
		constexpr auto OnFinish = 0xb8; // FScriptMulticastDelegate
		constexpr auto Location = 0xc8; // FVector
		constexpr auto LocationActor = 0xd8; // AActor*
		constexpr auto Strength = 0xe0; // float
		constexpr auto Duration = 0xe4; // float
		constexpr auto Radius = 0xe8; // float
		constexpr auto bIsPush = 0xec; // bool
		constexpr auto bIsAdditive = 0xed; // bool
		constexpr auto bNoZForce = 0xee; // bool
		constexpr auto StrengthDistanceFalloff = 0xf0; // UCurveFloat*
		constexpr auto StrengthOverTime = 0xf8; // UCurveFloat*
		constexpr auto bUseFixedWorldDirection = 0x100; // bool
		constexpr auto FixedWorldDirection = 0x104; // FRotator
	}

	namespace n_UMaterialExpressionSetMaterialAttributes { // : UMaterialExpression
		constexpr auto Inputs = 0x40; // TArray<FExpressionInput>
		constexpr auto AttributeSetTypes = 0x50; // TArray<FGuid>
	}

	namespace n_UMaterialExpressionParticleMotionBlurFade { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_AMatineeActor { // : AActor
		constexpr auto MatineeData = 0x248; // UInterpData*
		constexpr auto MatineeControllerName = 0x250; // FName
		constexpr auto PlayRate = 0x258; // float
		constexpr auto bPlayOnLevelLoad = 0x25c; // char : 1
		constexpr auto bForceStartPos = 0x25c; // char : 1
		constexpr auto ForceStartPosition = 0x260; // float
		constexpr auto bLooping = 0x264; // char : 1
		constexpr auto bRewindOnPlay = 0x264; // char : 1
		constexpr auto bNoResetOnRewind = 0x264; // char : 1
		constexpr auto bRewindIfAlreadyPlaying = 0x264; // char : 1
		constexpr auto bDisableRadioFilter = 0x264; // char : 1
		constexpr auto bClientSideOnly = 0x264; // char : 1
		constexpr auto bSkipUpdateIfNotVisible = 0x264; // char : 1
		constexpr auto bIsSkippable = 0x264; // char : 1
		constexpr auto PreferredSplitScreenNum = 0x268; // int
		constexpr auto bDisableMovementInput = 0x26c; // char : 1
		constexpr auto bDisableLookAtInput = 0x26c; // char : 1
		constexpr auto bHidePlayer = 0x26c; // char : 1
		constexpr auto bHideHud = 0x26c; // char : 1
		constexpr auto GroupActorInfos = 0x270; // TArray<FInterpGroupActorInfo>
		constexpr auto bShouldShowGore = 0x280; // char : 1
		constexpr auto GroupInst = 0x288; // TArray<UInterpGroupInst*>
		constexpr auto CameraCuts = 0x298; // TArray<FCameraCutInfo>
		constexpr auto bIsPlaying = 0x2a8; // char : 1
		constexpr auto bReversePlayback = 0x2a8; // char : 1
		constexpr auto bPaused = 0x2a8; // char : 1
		constexpr auto bPendingStop = 0x2a8; // char : 1
		constexpr auto InterpPosition = 0x2ac; // float
		constexpr auto ReplicationForceIsPlaying = 0x2b4; // char
		constexpr auto OnPlay = 0x2b8; // FScriptMulticastDelegate
		constexpr auto OnStop = 0x2c8; // FScriptMulticastDelegate
		constexpr auto OnPause = 0x2d8; // FScriptMulticastDelegate
	}

	namespace n_UTextLayoutWidget { // : UWidget
		constexpr auto ShapedTextOptions = 0x108; // FShapedTextOptions
		constexpr auto Justification = 0x10b; // ETextJustify
		constexpr auto WrappingPolicy = 0x10c; // ETextWrappingPolicy
		constexpr auto AutoWrapText = 0x10d; // char : 1
		constexpr auto WrapTextAt = 0x110; // float
		constexpr auto Margin = 0x114; // FMargin
		constexpr auto LineHeightPercentage = 0x124; // float
	}

	namespace n_USQUserWidget { // : UUserWidget
		constexpr auto ColorAndOpacity = 0x110; // FLinearColor
		constexpr auto ColorAndOpacityDelegate = 0x120; // DelegateProperty
		constexpr auto ForegroundColor = 0x130; // FSlateColor
		constexpr auto ForegroundColorDelegate = 0x158; // DelegateProperty
		constexpr auto Padding = 0x168; // FMargin
		constexpr auto ActiveSequencePlayers = 0x178; // TArray<UUMGSequencePlayer*>
		constexpr auto StoppedSequencePlayers = 0x188; // TArray<UUMGSequencePlayer*>
		constexpr auto NamedSlotBindings = 0x198; // TArray<FNamedSlotBinding>
		constexpr auto WidgetTree = 0x1a8; // UWidgetTree*
		constexpr auto Priority = 0x1b0; // int
		constexpr auto bSupportsKeyboardFocus = 0x1b4; // char : 1
		constexpr auto bIsFocusable = 0x1b4; // char : 1
		constexpr auto bStopAction = 0x1b4; // char : 1
		constexpr auto bHasScriptImplementedTick = 0x1b4; // char : 1
		constexpr auto bHasScriptImplementedPaint = 0x1b4; // char : 1
		constexpr auto bCookedWidgetTree = 0x1b4; // char : 1
		constexpr auto TickFrequency = 0x1c0; // EWidgetTickFrequency
		constexpr auto InputComponent = 0x1c8; // UInputComponent*
		constexpr auto AnimationCallbacks = 0x1d0; // TArray<FAnimationEventBinding>
	}

	namespace n_ABP_L85A2AG36_UGL_DarkEarth_Smoke_C { // : ABP_L85A2AG36_UGL_DarkEarth_Parent_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UWrapBox { // : UPanelWidget
		constexpr auto InnerSlotPadding = 0x120; // FVector2D
		constexpr auto WrapWidth = 0x128; // float
		constexpr auto bExplicitWrapWidth = 0x12c; // bool
	}

	namespace n_ABP_M4_M150_Tracer_Founders_C { // : ABP_M4_M150_Tracer_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UMaterialExpressionDynamicParameter { // : UMaterialExpression
		constexpr auto ParamNames = 0x40; // TArray<FString>
		constexpr auto DefaultValue = 0x50; // FLinearColor
		constexpr auto ParameterIndex = 0x60; // uint32
	}

	namespace n_UDataTable { // : UObject
		constexpr auto RowStruct = 0x28; // UScriptStruct*
		constexpr auto bStripFromClientBuilds = 0x80; // char : 1
		constexpr auto bIgnoreExtraFields = 0x80; // char : 1
		constexpr auto bIgnoreMissingFields = 0x80; // char : 1
		constexpr auto ImportKeyField = 0x88; // FString
	}

	namespace n_UForceFeedbackEffect { // : UObject
		constexpr auto ChannelDetails = 0x28; // TArray<FForceFeedbackChannelDetails>
		constexpr auto Duration = 0x38; // float
	}

	namespace n_ULightmassPortalComponent { // : USceneComponent
		constexpr auto PreviewBox = 0x218; // UBoxComponent*
	}

	namespace n_USlateVectorArtData { // : UObject
		constexpr auto VertexData = 0x28; // TArray<FSlateMeshVertex>
		constexpr auto IndexData = 0x38; // TArray<uint32>
		constexpr auto Material = 0x48; // UMaterialInterface*
		constexpr auto ExtentMin = 0x50; // FVector2D
		constexpr auto ExtentMax = 0x58; // FVector2D
	}

	namespace n_USQScoreboardTeam { // : USQUserWidget
		constexpr auto ScoreboardTeamScore = 0x230; // USQScoreboardTeamScore*
		constexpr auto EndOfRoundHorizontalBox = 0x238; // UHorizontalBox*
		constexpr auto TopVerticalBox = 0x240; // UVerticalBox*
		constexpr auto NotEndOfRoundSpacer = 0x248; // USpacer*
		constexpr auto EnemyTeamPingAligner = 0x250; // USpacer*
		constexpr auto TeamHorizontalBox = 0x258; // UHorizontalBox*
		constexpr auto SquadsGrid = 0x260; // UGridPanel*
		constexpr auto NonSquadPlayersCanvasPanel = 0x268; // UCanvasPanel*
		constexpr auto PlayersGrid = 0x270; // UGridPanel*
		constexpr auto ColoredHeaderTabImage = 0x278; // UBorder*
		constexpr auto RemainingTicketsImage = 0x280; // UImage*
		constexpr auto ColoredHeaderBarImage = 0x288; // UImage*
		constexpr auto FlagImage = 0x290; // UImage*
		constexpr auto PlayerNumberText = 0x298; // UTextBlock*
		constexpr auto RemainingTicketsText = 0x2a0; // UTextBlock*
		constexpr auto TeamNameText = 0x2a8; // UTextBlock*
		constexpr auto SQPC = 0x2b0; // ASQPlayerController*
		constexpr auto SQPlayerState = 0x2b8; // ASQPlayerState*
		constexpr auto SQTeamState = 0x2c0; // ASQTeamState*
		constexpr auto SQGameState = 0x2c8; // ASQGameState*
		constexpr auto OwnerPlayerWidget = 0x2d0; // USQScoreboardPlayer*
		constexpr auto OwnerPlayerSquadWidget = 0x2d8; // USQScoreboardSquad*
		constexpr auto TeamKills = 0x2e0; // int
		constexpr auto TeamDeaths = 0x2e4; // int
		constexpr auto TeamIncaps = 0x2e8; // int
		constexpr auto TeamWounds = 0x2ec; // int
		constexpr auto TeamRevives = 0x2f0; // int
		constexpr auto TeamHeals = 0x2f4; // int
		constexpr auto TeamTeamKills = 0x2f8; // int
		constexpr auto TeamTeamwork = 0x2fc; // int
		constexpr auto TeamObjective = 0x300; // int
		constexpr auto TeamScore = 0x304; // int
		constexpr auto FriendlyTeamColor = 0x308; // FLinearColor
		constexpr auto EnemyTeamColor = 0x318; // FLinearColor
		constexpr auto bIsFriendlyScoreboard = 0x328; // bool
		constexpr auto bShowAllStats = 0x329; // bool
		constexpr auto EndOfRoundEnemyWidth = 0x32c; // float
		constexpr auto DuringRoundEnemyWidth = 0x330; // float
		constexpr auto RemainingTicketsTextString = 0x338; // FText
		constexpr auto PlayersText = 0x350; // FText
		constexpr auto DisplayedSquads = 0x368; // TArray<FSquadWidgetPair>
		constexpr auto DisplayedPlayers = 0x378; // TArray<FPlayerWidgetPair>
		constexpr auto FormerTalkers = 0x388; // TArray<FSQRemoteTalkerDisplayInfo>
		constexpr auto ScoreboardSquadType = 0x398; // USQScoreboardSquad*
		constexpr auto ScoreboardPlayerType = 0x3a0; // USQScoreboardPlayer*
	}

	namespace n_UUserDefinedStruct { // : UScriptStruct
		constexpr auto Status = 0xa8; // EUserDefinedStructureStatus
		constexpr auto Guid = 0xac; // FGuid
	}

	namespace n_USQRestriction_Boolean { // : USQRestriction
		constexpr auto ID = 0x30; // FName
		constexpr auto Data = 0x38; // FDataTableRowHandle
		constexpr auto ModId = 0x48; // FString
	}

	namespace n_UPropertyValueVisibility { // : UPropertyValue
		constexpr auto properties = 0x80; // TArray<UProperty*>
		constexpr auto PropertyIndices = 0x90; // TArray<int>
		constexpr auto CapturedPropSegments = 0xa0; // TArray<FCapturedPropSegment>
		constexpr auto FullDisplayString = 0xb0; // FString
		constexpr auto PropertySetterName = 0xc0; // FName
		constexpr auto PropertySetterParameterDefaults = 0xc8; // TMap<FString, FString>
		constexpr auto bHasRecordedData = 0x118; // bool
		constexpr auto LeafPropertyClass = 0x120; // UObject*
		constexpr auto ValueBytes = 0x128; // TArray<char>
		constexpr auto PropCategory = 0x138; // EPropertyValueCategory
	}

	namespace n_UMaterialExpressionCosine { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Period = 0x54; // float
	}

	namespace n_UMaterialExpressionMultiply { // : UMaterialExpression
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_USQGraphAASVisualizerComponent { // : USQGraphVisualizerComponent
		constexpr auto bShowDebugInfo = 0xd8; // bool
		constexpr auto DebugNodeRadius = 0xdc; // float
		constexpr auto DebugNodeHeightOffset = 0xe0; // float
		constexpr auto DebugLineHeightOffset = 0xe4; // float
	}

	namespace n_USQSeatProgressWidget { // : USQProgressWidget
		constexpr auto TotalTime = 0x250; // float
		constexpr auto WithVehicle = 0x258; // ASQVehicle*
		constexpr auto MenuMode = 0x260; // ESeatProgressMenuMode
	}

	namespace n_UARFaceGeometry { // : UARTrackedGeometry
		constexpr auto LookAtTarget = 0xe8; // FVector
		constexpr auto bIsTracked = 0xf4; // bool
		constexpr auto BlendShapes = 0xf8; // TMap<EARFaceBlendShape, float>
	}

	namespace n_UTimeSynchronizableMediaSource { // : UBaseMediaSource
		constexpr auto bUseTimeSynchronization = 0x38; // bool
	}

	namespace n_USpinBox { // : UWidget
		constexpr auto Value = 0x108; // float
		constexpr auto ValueDelegate = 0x10c; // DelegateProperty
		constexpr auto WidgetStyle = 0x120; // FSpinBoxStyle
		constexpr auto Style = 0x408; // USlateWidgetStyleAsset*
		constexpr auto Delta = 0x410; // float
		constexpr auto SliderExponent = 0x414; // float
		constexpr auto Font = 0x418; // FSlateFontInfo
		constexpr auto Justification = 0x468; // ETextJustify
		constexpr auto MinDesiredWidth = 0x46c; // float
		constexpr auto ClearKeyboardFocusOnCommit = 0x470; // bool
		constexpr auto SelectAllTextOnCommit = 0x471; // bool
		constexpr auto ForegroundColor = 0x478; // FSlateColor
		constexpr auto OnValueChanged = 0x4a0; // FScriptMulticastDelegate
		constexpr auto OnValueCommitted = 0x4b0; // FScriptMulticastDelegate
		constexpr auto OnBeginSliderMovement = 0x4c0; // FScriptMulticastDelegate
		constexpr auto OnEndSliderMovement = 0x4d0; // FScriptMulticastDelegate
		constexpr auto bOverride_MinValue = 0x4e0; // char : 1
		constexpr auto bOverride_MaxValue = 0x4e0; // char : 1
		constexpr auto bOverride_MinSliderValue = 0x4e0; // char : 1
		constexpr auto bOverride_MaxSliderValue = 0x4e0; // char : 1
		constexpr auto MinValue = 0x4e4; // float
		constexpr auto MaxValue = 0x4e8; // float
		constexpr auto MinSliderValue = 0x4ec; // float
		constexpr auto MaxSliderValue = 0x4f0; // float
	}

	namespace n_UParticleModuleOrientationBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x29; // char : 1
		constexpr auto LODDuplicate = 0x29; // char : 1
		constexpr auto bSupportsRandomSeed = 0x29; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x29; // char : 1
		constexpr auto LODValidity = 0x2c; // char
	}

	namespace n_USQAnimInstance { // : UAnimInstance
		constexpr auto LastBoredMontagePlayedIndex = 0x268; // int
		constexpr auto BoredTargetTime = 0x26c; // float
		constexpr auto bIsAds = 0x270; // bool
		constexpr auto bIsUsingItemOrIsAdsOrIsClimbing = 0x271; // bool
		constexpr auto CurrentItemStaticInfo = 0x278; // USQItemStaticInfo*
		constexpr auto Soldier = 0x280; // ASQSoldier*
		constexpr auto SoldierNew = 0x288; // ASQSoldierNew*
	}

	namespace n_UBP_Attachment_LeupoldScope_Black_C { // : USQWeaponAttachment_Scope
		constexpr auto MeshTransitionPercentage = 0x4b0; // float
		constexpr auto ADSMesh = 0x4b8; // UStaticMesh*
		constexpr auto ADSMeshTransform = 0x4c0; // FTransform
		constexpr auto NonADSMesh = 0x4f0; // UStaticMesh*
		constexpr auto NonADSMeshTransform = 0x500; // FTransform
		constexpr auto InToADSMeshTransitionSettings = 0x530; // TArray<FSQMeshTransitionSettings>
		constexpr auto OutFromADSMeshTransitionSettings = 0x540; // TArray<FSQMeshTransitionSettings>
	}

	namespace n_UInterpTrackToggle { // : UInterpTrack
		constexpr auto ToggleTrack = 0x70; // TArray<FToggleTrackKey>
		constexpr auto bActivateSystemEachUpdate = 0x80; // char : 1
		constexpr auto bActivateWithJustAttachedFlag = 0x80; // char : 1
		constexpr auto bFireEventsWhenForwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenJumpingForwards = 0x80; // char : 1
	}

	namespace n_ANavModifierVolume { // : AVolume
		constexpr auto AreaClass = 0x288; // UNavArea*
	}

	namespace n_UParticleModuleCameraOffset { // : UParticleModuleCameraBase
		constexpr auto CameraOffset = 0x30; // FRawDistributionFloat
		constexpr auto bSpawnTimeOnly = 0x68; // char : 1
		constexpr auto UpdateMethod = 0x6c; // EParticleCameraOffsetUpdateMethod
	}

	namespace n_UUniformVector { // : UFieldNodeVector
		constexpr auto Magnitude = 0xd8; // float
		constexpr auto Direction = 0xdc; // FVector
	}

	namespace n_UAudioSettings { // : UDeveloperSettings
		constexpr auto DefaultSoundClassName = 0x38; // FSoftObjectPath
		constexpr auto DefaultMediaSoundClassName = 0x50; // FSoftObjectPath
		constexpr auto DefaultSoundConcurrencyName = 0x68; // FSoftObjectPath
		constexpr auto DefaultBaseSoundMix = 0x80; // FSoftObjectPath
		constexpr auto VoiPSoundClass = 0x98; // FSoftObjectPath
		constexpr auto VoiPSampleRate = 0xb0; // EVoiceSampleRate
		constexpr auto VoipBufferingDelay = 0xb4; // float
		constexpr auto DefaultReverbSendLevel = 0xb8; // float
		constexpr auto bEnableLegacyReverb = 0xbc; // char : 1
		constexpr auto MaximumConcurrentStreams = 0xc0; // int
		constexpr auto GlobalMinPitchScale = 0xc4; // float
		constexpr auto GlobalMaxPitchScale = 0xc8; // float
		constexpr auto QualityLevels = 0xd0; // TArray<FAudioQualitySettings>
		constexpr auto bAllowPlayWhenSilent = 0xe0; // char : 1
		constexpr auto bDisableMasterEQ = 0xe0; // char : 1
		constexpr auto bAllowCenterChannel3DPanning = 0xe0; // char : 1
		constexpr auto NumStoppingSources = 0xe4; // uint32
		constexpr auto PanningMethod = 0xe8; // EPanningMethod
		constexpr auto MonoChannelUpmixMethod = 0xe9; // EMonoChannelUpmixMethod
		constexpr auto DialogueFilenameFormat = 0xf0; // FString
	}

	namespace n_UParticleModuleLocationEmitter { // : UParticleModuleLocationBase
		constexpr auto EmitterName = 0x30; // FName
		constexpr auto SelectionMethod = 0x38; // ELocationEmitterSelectionMethod
		constexpr auto InheritSourceVelocity = 0x3c; // char : 1
		constexpr auto InheritSourceVelocityScale = 0x40; // float
		constexpr auto bInheritSourceRotation = 0x44; // char : 1
		constexpr auto InheritSourceRotationScale = 0x48; // float
	}

	namespace n_UDragDropOperation { // : UObject
		constexpr auto Tag = 0x28; // FString
		constexpr auto Payload = 0x38; // UObject*
		constexpr auto DefaultDragVisual = 0x40; // UWidget*
		constexpr auto Pivot = 0x48; // EDragPivot
		constexpr auto Offset = 0x4c; // FVector2D
		constexpr auto OnDrop = 0x58; // FScriptMulticastDelegate
		constexpr auto OnDragCancelled = 0x68; // FScriptMulticastDelegate
		constexpr auto OnDragged = 0x78; // FScriptMulticastDelegate
	}

	namespace n_ASQTeamActor { // : AActor
		constexpr auto Team = 0x250; // ESQTeam
	}

	namespace n_UParticleModuleMeshRotationRate { // : UParticleModuleRotationRateBase
		constexpr auto StartRotationRate = 0x30; // FRawDistributionVector
	}

	namespace n_UParticleModuleColorOverLife { // : UParticleModuleColorBase
		constexpr auto ColorOverLife = 0x30; // FRawDistributionVector
		constexpr auto AlphaOverLife = 0x80; // FRawDistributionFloat
		constexpr auto bClampAlpha = 0xb8; // char : 1
	}

	namespace n_UBP_M72A7_StaticInfo_C { // : UBP_GenericWeapon_StaticInfo_C
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_ABP_L85A2AG36_ElcanLDS_UGL_DarkEarth_Parent_C { // : ABP_L85A2AG36_UGL_DarkEarth_Parent_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UDatasmithCineCameraComponentTemplate { // : UDatasmithObjectTemplate
		constexpr auto FilmbackSettings = 0x30; // FDatasmithCameraFilmbackSettingsTemplate
		constexpr auto LensSettings = 0x38; // FDatasmithCameraLensSettingsTemplate
		constexpr auto FocusSettings = 0x3c; // FDatasmithCameraFocusSettingsTemplate
		constexpr auto CurrentFocalLength = 0x44; // float
		constexpr auto CurrentAperture = 0x48; // float
		constexpr auto PostProcessSettings = 0x50; // FDatasmithPostProcessSettingsTemplate
	}

	namespace n_ABP_M4_4Mags_C { // : ABP_M4_2Mags_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_ABP_AK74M_1P78_Tracer_C { // : ABP_AK74M_1P78_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UPhysicsSpringComponent { // : USceneComponent
		constexpr auto SpringStiffness = 0x218; // float
		constexpr auto SpringDamping = 0x21c; // float
		constexpr auto SpringLengthAtRest = 0x220; // float
		constexpr auto SpringRadius = 0x224; // float
		constexpr auto SpringChannel = 0x228; // ECollisionChannel
		constexpr auto bIgnoreSelf = 0x229; // bool
		constexpr auto SpringCompression = 0x22c; // float
	}

	namespace n_UCustomMeshComponent { // : UMeshComponent
		constexpr auto OverrideMaterials = 0x408; // TArray<UMaterialInterface*>
		constexpr auto bEnableMaterialParameterCaching = 0x428; // bool
	}

	namespace n_UCameraAnim { // : UObject
		constexpr auto CameraInterpGroup = 0x28; // UInterpGroup*
		constexpr auto AnimLength = 0x30; // float
		constexpr auto BoundingBox = 0x34; // FBox
		constexpr auto bRelativeToInitialTransform = 0x50; // char : 1
		constexpr auto bRelativeToInitialFOV = 0x50; // char : 1
		constexpr auto BaseFOV = 0x54; // float
		constexpr auto BasePostProcessSettings = 0x60; // FPostProcessSettings
		constexpr auto BasePostProcessBlendWeight = 0x590; // float
	}

	namespace n_USQCompass { // : USQUserWidget
		constexpr auto bIsOwnerMedic = 0x230; // bool
		constexpr auto RotationXFix = 0x234; // float
		constexpr auto XScale = 0x238; // float
		constexpr auto MaxVisibilityDistance = 0x23c; // float
		constexpr auto YPositionOffset = 0x240; // float
		constexpr auto TotalScale = 0x244; // float
		constexpr auto BearingLERP = 0x248; // float
		constexpr auto bDoCompassLERP = 0x24c; // bool
		constexpr auto bShouldHide = 0x24d; // bool
	}

	namespace n_UMovieSceneObjectPropertySection { // : UMovieSceneSection
		constexpr auto ObjectChannel = 0xe0; // FMovieSceneObjectPathChannel
	}

	namespace n_UMaterialExpressionParameter { // : UMaterialExpression
		constexpr auto ParameterName = 0x40; // FName
		constexpr auto ExpressionGUID = 0x48; // FGuid
	}

	namespace n_USQDrawChatWidget { // : USQUserWidget
		constexpr auto MessagesToDraw = 0x230; // TArray<FSQDrawChatStruct>
	}

	namespace n_USQSquadStateDataMapMarkerSelectable { // : USQSquadStateDataMapMarker
		constexpr auto MapIcon = 0x1a0; // USQMapIconComponent*
	}

	namespace n_UBP_Attachment_M4_FrontSight_Woodland_C { // : UBP_Attachment_M4_FrontSight_C
		constexpr auto MeshTransitionPercentage = 0x4b0; // float
		constexpr auto ADSMesh = 0x4b8; // UStaticMesh*
		constexpr auto ADSMeshTransform = 0x4c0; // FTransform
		constexpr auto NonADSMesh = 0x4f0; // UStaticMesh*
		constexpr auto NonADSMeshTransform = 0x500; // FTransform
		constexpr auto InToADSMeshTransitionSettings = 0x530; // TArray<FSQMeshTransitionSettings>
		constexpr auto OutFromADSMeshTransitionSettings = 0x540; // TArray<FSQMeshTransitionSettings>
	}

	namespace n_UBP_Melee_C { // : USQDamageType
		constexpr auto bCanCauseBleeding = 0x40; // bool
	}

	namespace n_USQChatBoxInfo { // : UObject
		constexpr auto Font = 0x28; // UFont*
		constexpr auto Messages = 0x30; // TArray<FSQHUDMessage>
		constexpr auto MessageBoxLocation = 0x40; // FVector2D
		constexpr auto MaxNumberOfMessagesToShow = 0x48; // int
		constexpr auto MessagesLifetime = 0x4c; // float
		constexpr auto MessagesFadeTime = 0x50; // float
		constexpr auto MessageHorizontalAlignment = 0x54; // ESQTextHorizontalAlignment
		constexpr auto MessageVerticalAlignment = 0x55; // ESQTextVerticalAlignment
		constexpr auto bOutlineMessages = 0x56; // bool
		constexpr auto bScrollUp = 0x57; // bool
		constexpr auto TextScale = 0x58; // float
	}

	namespace n_UUniformGridSlot { // : UPanelSlot
		constexpr auto HorizontalAlignment = 0x38; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x39; // EVerticalAlignment
		constexpr auto Row = 0x3c; // int
		constexpr auto Column = 0x40; // int
	}

	namespace n_UMaterialExpressionPreSkinnedNormal { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UDatasmithSpotLightComponentTemplate { // : UDatasmithObjectTemplate
		constexpr auto InnerConeAngle = 0x30; // float
		constexpr auto OuterConeAngle = 0x34; // float
	}

	namespace n_UCanvasPanel { // : UPanelWidget
		constexpr auto Slots = 0x108; // TArray<UPanelSlot*>
	}

	namespace n_UFoliageInstancedStaticMeshComponent { // : UHierarchicalInstancedStaticMeshComponent
		constexpr auto OnInstanceTakePointDamage = 0x618; // FScriptMulticastDelegate
		constexpr auto OnInstanceTakeRadialDamage = 0x628; // FScriptMulticastDelegate
	}

	namespace n_UNavLinkDefinition { // : UObject
		constexpr auto Links = 0x28; // TArray<FNavigationLink>
		constexpr auto SegmentLinks = 0x38; // TArray<FNavigationSegmentLink>
	}

	namespace n_USkeletalMeshComponent { // : USkinnedMeshComponent
		constexpr auto AnimBlueprintGeneratedClass = 0x5f0; // UObject*
		constexpr auto AnimClass = 0x5f8; // UAnimInstance*
		constexpr auto AnimScriptInstance = 0x600; // UAnimInstance*
		constexpr auto SubInstances = 0x608; // TArray<UAnimInstance*>
		constexpr auto PostProcessAnimInstance = 0x618; // UAnimInstance*
		constexpr auto AnimationData = 0x620; // FSingleAnimationPlayData
		constexpr auto RootBoneTranslation = 0x648; // FVector
		constexpr auto LineCheckBoundsScale = 0x654; // FVector
		constexpr auto CachedBoneSpaceTransforms = 0x680; // TArray<FTransform>
		constexpr auto CachedComponentSpaceTransforms = 0x690; // TArray<FTransform>
		constexpr auto GlobalAnimRateScale = 0x6c0; // float
		constexpr auto KinematicBonesUpdateType = 0x6c4; // EKinematicBonesUpdateToPhysics
		constexpr auto PhysicsTransformUpdateMode = 0x6c5; // EPhysicsTransformUpdateMode
		constexpr auto AnimationMode = 0x6c7; // EAnimationMode
		constexpr auto bDisablePostProcessBlueprint = 0x6c9; // char : 1
		constexpr auto bUpdateOverlapsOnAnimationFinalize = 0x6c9; // char : 1
		constexpr auto bHasValidBodies = 0x6c9; // char : 1
		constexpr auto bBlendPhysics = 0x6c9; // char : 1
		constexpr auto bEnablePhysicsOnDedicatedServer = 0x6c9; // char : 1
		constexpr auto bUpdateJointsFromAnimation = 0x6ca; // char : 1
		constexpr auto bDisableClothSimulation = 0x6ca; // char : 1
		constexpr auto bAllowAnimCurveEvaluation = 0x6ca; // char : 1
		constexpr auto bDisableAnimCurves = 0x6ca; // char : 1
		constexpr auto bCollideWithEnvironment = 0x6ca; // char : 1
		constexpr auto bCollideWithAttachedChildren = 0x6cb; // char : 1
		constexpr auto bLocalSpaceSimulation = 0x6cb; // char : 1
		constexpr auto bResetAfterTeleport = 0x6cb; // char : 1
		constexpr auto bDeferKinematicBoneUpdate = 0x6cb; // char : 1
		constexpr auto bNoSkeletonUpdate = 0x6cb; // char : 1
		constexpr auto bPauseAnims = 0x6cb; // char : 1
		constexpr auto bUseRefPoseOnInitAnim = 0x6cb; // char : 1
		constexpr auto bEnablePerPolyCollision = 0x6cc; // char : 1
		constexpr auto bForceRefpose = 0x6cc; // char : 1
		constexpr auto bOnlyAllowAutonomousTickPose = 0x6cc; // char : 1
		constexpr auto bIsAutonomousTickPose = 0x6cc; // char : 1
		constexpr auto bOldForceRefPose = 0x6cc; // char : 1
		constexpr auto bShowPrePhysBones = 0x6cc; // char : 1
		constexpr auto bRequiredBonesUpToDate = 0x6cc; // char : 1
		constexpr auto bAnimTreeInitialised = 0x6cc; // char : 1
		constexpr auto bIncludeComponentLocationIntoBounds = 0x6cd; // char : 1
		constexpr auto bEnableLineCheckWithBounds = 0x6cd; // char : 1
		constexpr auto bUseBendingElements = 0x6cd; // char : 1
		constexpr auto bUseTetrahedralConstraints = 0x6cd; // char : 1
		constexpr auto bUseThinShellVolumeConstraints = 0x6cd; // char : 1
		constexpr auto bUseSelfCollisions = 0x6cd; // char : 1
		constexpr auto bUseContinuousCollisionDetection = 0x6cd; // char : 1
		constexpr auto bPropagateCurvesToSlaves = 0x6cd; // char : 1
		constexpr auto bSkipKinematicUpdateWhenInterpolating = 0x6ce; // char : 1
		constexpr auto bSkipBoundsUpdateWhenInterpolating = 0x6ce; // char : 1
		constexpr auto bNeedsQueuedAnimEventsDispatched = 0x6ce; // char : 1
		constexpr auto CachedAnimCurveUidVersion = 0x6d0; // uint16
		constexpr auto ClothBlendWeight = 0x6d4; // float
		constexpr auto EdgeStiffness = 0x6d8; // float
		constexpr auto BendingStiffness = 0x6dc; // float
		constexpr auto AreaStiffness = 0x6e0; // float
		constexpr auto VolumeStiffness = 0x6e4; // float
		constexpr auto StrainLimitingStiffness = 0x6e8; // float
		constexpr auto ShapeTargetStiffness = 0x6ec; // float
		constexpr auto DisallowedAnimCurves = 0x6f0; // TArray<FName>
		constexpr auto BodySetup = 0x700; // UBodySetup*
		constexpr auto OnConstraintBroken = 0x710; // FScriptMulticastDelegate
		constexpr auto ClothingSimulationFactory = 0x720; // UClothingSimulationFactory*
		constexpr auto TeleportDistanceThreshold = 0x820; // float
		constexpr auto TeleportRotationThreshold = 0x824; // float
		constexpr auto LastPoseTickFrame = 0x830; // uint32
		constexpr auto ClothingInteractor = 0x890; // UClothingSimulationInteractor*
		constexpr auto OnAnimInitialized = 0x960; // FScriptMulticastDelegate
	}

	namespace n_UMaterialExpressionObjectRadius { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_ASQSoundSplineActor { // : AActor
		constexpr auto Spline = 0x248; // USplineComponent*
		constexpr auto Sphere = 0x250; // USphereComponent*
		constexpr auto bDrawDebugSphere = 0x258; // bool
		constexpr auto bDrawDebugPoints = 0x259; // bool
		constexpr auto DistanceAccuracy = 0x25c; // float
		constexpr auto Sound = 0x260; // UAudioComponent*
		constexpr auto CachedPlayerCameraManager = 0x268; // APlayerCameraManager*
	}

	namespace n_UBTCompositeNode { // : UBTNode
		constexpr auto Children = 0x58; // TArray<FBTCompositeChild>
		constexpr auto Services = 0x68; // TArray<UBTService*>
		constexpr auto bApplyDecoratorScope = 0x88; // char : 1
	}

	namespace n_UMultiPackerDataBase { // : UObject
		constexpr auto RowStruct = 0x28; // UScriptStruct*
		constexpr auto VTile = 0x30; // int
		constexpr auto HTile = 0x34; // int
		constexpr auto Do_SDF = 0x38; // bool
		constexpr auto BinPack = 0x39; // bool
		constexpr auto Alpha = 0x3a; // bool
		constexpr auto ChannelMethod = 0x3b; // EChannelTextureSave
		constexpr auto TextureOutput = 0x40; // TArray<UTexture2D*>
		constexpr auto MaterialCollection = 0x50; // UMaterialParameterCollection*
		constexpr auto TileMap = 0x58; // TMap<FName, FTileDatabase>
		constexpr auto TileSize = 0xa8; // int
		constexpr auto layer_bools = 0xac; // FLinearColor
		constexpr auto Tiles_Size = 0xbc; // FLinearColor
	}

	namespace n_ABP_AK74MGP25_1P63_UGL_Parent_C { // : ABP_AK74GP25_UGL_Parent_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_USizeBoxSlot { // : UPanelSlot
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_ASQGameMode { // : AGameMode
		constexpr auto bTournamentMode = 0x390; // bool
		constexpr auto CheckEndMatchConditionsTimeInterval = 0x394; // float
		constexpr auto InitialLives = 0x398; // int
		constexpr auto StartupTime = 0x39c; // int
		constexpr auto RoundTime = 0x3a0; // int
		constexpr auto TimeBetweenMatches = 0x3a4; // int
		constexpr auto WinnerTeam = 0x3a8; // ASQTeam*
		constexpr auto TeamClass = 0x3b0; // ASQTeam*
		constexpr auto SquadClass = 0x3b8; // ASQSquad*
		constexpr auto RuleSetClasses = 0x3c0; // TArray<ASQGameRuleSet*>
		constexpr auto RuleSets = 0x3d0; // TArray<ASQGameRuleSet*>
		constexpr auto Teams = 0x3e0; // TArray<ASQTeam*>
		constexpr auto IndexedTeams = 0x3f0; // TArray<ASQTeam*>
		constexpr auto DisplayName = 0x450; // FText
		constexpr auto ConfigureFactionInProgress = 0x6fc; // bool
	}

	namespace n_URouteSelectorPredicate { // : UObject
		constexpr auto NumLinksToChoose = 0x28; // int
	}

	namespace n_ASQVehicleWeapon { // : ASQWeapon_Effects
		constexpr auto bIsOverheated = 0xa30; // bool
		constexpr auto bInputEnabled = 0xa31; // bool
		constexpr auto RecoilFactor = 0xa38; // TArray<FSQVehicleRecoil>
		constexpr auto bReturnToPitchOriginOnReload = 0xa48; // bool
		constexpr auto bReturnToYawOriginOnReload = 0xa49; // bool
		constexpr auto SecondsToReturnToOriginOnReload = 0xa4c; // float
		constexpr auto bReloadDirectlyFromFob = 0xa50; // bool
		constexpr auto bIgnoreCameraChange = 0xa53; // bool
		constexpr auto bEnableTrueFpCamera = 0xa54; // bool
		constexpr auto bStartWithNoAmmo = 0xa6c; // bool
	}

	namespace n_ASQMapBoundary { // : ASQBoundary
		constexpr auto CommonSettings = 0x308; // USQMapBoundarySettings*
		constexpr auto bOverrideDefaultKillTime = 0x310; // bool
		constexpr auto DefaultKillTime = 0x314; // float
		constexpr auto ClassKillTimes = 0x318; // TMap<UObject*, float>
	}

	namespace n_UProgressWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto ProgressBarStyle = 0x30; // FProgressBarStyle
	}

	namespace n_UPawnAction { // : UObject
		constexpr auto ChildAction = 0x28; // UPawnAction*
		constexpr auto ParentAction = 0x30; // UPawnAction*
		constexpr auto OwnerComponent = 0x38; // UPawnActionsComponent*
		constexpr auto Instigator = 0x40; // UObject*
		constexpr auto BrainComp = 0x48; // UBrainComponent*
		constexpr auto bAllowNewSameClassInstance = 0x80; // char : 1
		constexpr auto bReplaceActiveSameClassInstance = 0x80; // char : 1
		constexpr auto bShouldPauseMovement = 0x80; // char : 1
		constexpr auto bAlwaysNotifyOnFinished = 0x80; // char : 1
	}

	namespace n_UInputKeySelector { // : UWidget
		constexpr auto WidgetStyle = 0x108; // FButtonStyle
		constexpr auto TextStyle = 0x380; // FTextBlockStyle
		constexpr auto SelectedKey = 0x5e8; // FInputChord
		constexpr auto Font = 0x608; // FSlateFontInfo
		constexpr auto Margin = 0x658; // FMargin
		constexpr auto ColorAndOpacity = 0x668; // FLinearColor
		constexpr auto KeySelectionText = 0x678; // FText
		constexpr auto NoKeySpecifiedText = 0x690; // FText
		constexpr auto bAllowModifierKeys = 0x6a8; // bool
		constexpr auto bAllowGamepadKeys = 0x6a9; // bool
		constexpr auto EscapeKeys = 0x6b0; // TArray<FKey>
		constexpr auto OnKeySelected = 0x6c0; // FScriptMulticastDelegate
		constexpr auto OnIsSelectingKeyChanged = 0x6d0; // FScriptMulticastDelegate
	}

	namespace n_UGameplayAbilitySet { // : UDataAsset
		constexpr auto Abilities = 0x30; // TArray<FGameplayAbilityBindInfo>
	}

	namespace n_UNavTestRenderingComponent { // : UPrimitiveComponent
		constexpr auto MinDrawDistance = 0x220; // float
		constexpr auto LDMaxDrawDistance = 0x224; // float
		constexpr auto CachedMaxDrawDistance = 0x228; // float
		constexpr auto DepthPriorityGroup = 0x22c; // ESceneDepthPriorityGroup
		constexpr auto ViewOwnerDepthPriorityGroup = 0x22d; // ESceneDepthPriorityGroup
		constexpr auto IndirectLightingCacheQuality = 0x22e; // EIndirectLightingCacheQuality
		constexpr auto LightmapType = 0x22f; // ELightmapType
		constexpr auto bUseMaxLODAsImposter = 0x230; // char : 1
		constexpr auto bNeverDistanceCull = 0x230; // char : 1
		constexpr auto bAlwaysCreatePhysicsState = 0x230; // char : 1
		constexpr auto bGenerateOverlapEvents = 0x230; // char : 1
		constexpr auto bGenerateLocalOverlapEvents = 0x231; // char : 1
		constexpr auto bMultiBodyOverlap = 0x231; // char : 1
		constexpr auto bTraceComplexOnMove = 0x231; // char : 1
		constexpr auto bReturnMaterialOnMove = 0x231; // char : 1
		constexpr auto bUseViewOwnerDepthPriorityGroup = 0x231; // char : 1
		constexpr auto bAllowCullDistanceVolume = 0x231; // char : 1
		constexpr auto bHasMotionBlurVelocityMeshes = 0x231; // char : 1
		constexpr auto bVisibleInReflectionCaptures = 0x232; // char : 1
		constexpr auto bVisibleInRayTracing = 0x232; // char : 1
		constexpr auto bRenderInMainPass = 0x232; // char : 1
		constexpr auto bReceivesDecals = 0x232; // char : 1
		constexpr auto bOwnerNoSee = 0x232; // char : 1
		constexpr auto bOnlyOwnerSee = 0x232; // char : 1
		constexpr auto bTreatAsBackgroundForOcclusion = 0x232; // char : 1
		constexpr auto bUseAsOccluder = 0x232; // char : 1
		constexpr auto bSelectable = 0x233; // char : 1
		constexpr auto bForceMipStreaming = 0x233; // char : 1
		constexpr auto bHasPerInstanceHitProxies = 0x233; // char : 1
		constexpr auto CastShadow = 0x233; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x233; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x233; // char : 1
		constexpr auto bCastDynamicShadow = 0x233; // char : 1
		constexpr auto bCastStaticShadow = 0x233; // char : 1
		constexpr auto bCastVolumetricTranslucentShadow = 0x234; // char : 1
		constexpr auto bSelfShadowOnly = 0x234; // char : 1
		constexpr auto bCastFarShadow = 0x234; // char : 1
		constexpr auto bCastInsetShadow = 0x234; // char : 1
		constexpr auto bCastCinematicShadow = 0x234; // char : 1
		constexpr auto bCastHiddenShadow = 0x234; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x234; // char : 1
		constexpr auto bLightAsIfStatic = 0x234; // char : 1
		constexpr auto bLightAttachmentsAsGroup = 0x235; // char : 1
		constexpr auto bReceiveMobileCSMShadows = 0x235; // char : 1
		constexpr auto bSingleSampleShadowFromStationaryLights = 0x235; // char : 1
		constexpr auto bIgnoreRadialImpulse = 0x235; // char : 1
		constexpr auto bIgnoreRadialForce = 0x235; // char : 1
		constexpr auto bApplyImpulseOnDamage = 0x235; // char : 1
		constexpr auto bReplicatePhysicsToAutonomousProxy = 0x235; // char : 1
		constexpr auto AlwaysLoadOnClient = 0x235; // char : 1
		constexpr auto AlwaysLoadOnServer = 0x236; // char : 1
		constexpr auto bUseEditorCompositing = 0x236; // char : 1
		constexpr auto bRenderCustomDepth = 0x236; // char : 1
		constexpr auto bHasCustomNavigableGeometry = 0x237; // EHasCustomNavigableGeometry
		constexpr auto CanCharacterStepUpOn = 0x239; // ECanBeCharacterBase
		constexpr auto LightingChannels = 0x23a; // FLightingChannels
		constexpr auto CustomDepthStencilWriteMask = 0x23b; // ERendererStencilMask
		constexpr auto CustomDepthStencilValue = 0x23c; // int
		constexpr auto CustomPrimitiveData = 0x240; // FCustomPrimitiveData
		constexpr auto TranslucencySortPriority = 0x250; // int
		constexpr auto VisibilityId = 0x254; // int
		constexpr auto RuntimeVirtualTextures = 0x258; // TArray<URuntimeVirtualTexture*>
		constexpr auto VirtualTextureLodBias = 0x268; // int
		constexpr auto VirtualTextureCullMips = 0x26c; // int
		constexpr auto VirtualTextureMinCoverage = 0x270; // int
		constexpr auto VirtualTextureRenderPassType = 0x274; // ERuntimeVirtualTextureMainPassType
		constexpr auto LpvBiasMultiplier = 0x27c; // float
		constexpr auto BoundsScale = 0x288; // float
		constexpr auto MoveIgnoreActors = 0x298; // TArray<AActor*>
		constexpr auto MoveIgnoreComponents = 0x2a8; // TArray<UPrimitiveComponent*>
		constexpr auto BodyInstance = 0x2c8; // FBodyInstance
		constexpr auto OnComponentHit = 0x3d8; // FScriptMulticastDelegate
		constexpr auto OnComponentBeginOverlap = 0x3d9; // FScriptMulticastDelegate
		constexpr auto OnComponentEndOverlap = 0x3da; // FScriptMulticastDelegate
		constexpr auto OnComponentWake = 0x3db; // FScriptMulticastDelegate
		constexpr auto OnComponentSleep = 0x3dc; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x3de; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x3df; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x3e0; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x3e1; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x3e2; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x3e3; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x3e4; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x3e5; // FScriptMulticastDelegate
		constexpr auto LODParentPrimitive = 0x400; // UPrimitiveComponent*
	}

	namespace n_UTileView { // : UListView
		constexpr auto EntryHeight = 0x358; // float
		constexpr auto EntryWidth = 0x35c; // float
		constexpr auto TileAlignment = 0x360; // EListItemAlignment
		constexpr auto bWrapHorizontalNavigation = 0x361; // bool
	}

	namespace n_UAbilityTask_NetworkSyncPoint { // : UAbilityTask
		constexpr auto OnSync = 0x80; // FScriptMulticastDelegate
	}

	namespace n_ABP_Projectile_9mm_C { // : ASQProjectile
		constexpr auto TracerMesh = 0x490; // UStaticMesh*
		constexpr auto TracerMaterial = 0x498; // UMaterial*
	}

	namespace n_UUserInterfaceSettings { // : UDeveloperSettings
		constexpr auto RenderFocusRule = 0x38; // ERenderFocusRule
		constexpr auto HardwareCursors = 0x40; // TMap<EMouseCursor, FHardwareCursorReference>
		constexpr auto SoftwareCursors = 0x90; // TMap<EMouseCursor, FSoftClassPath>
		constexpr auto DefaultCursor = 0xe0; // FSoftClassPath
		constexpr auto TextEditBeamCursor = 0xf8; // FSoftClassPath
		constexpr auto CrosshairsCursor = 0x110; // FSoftClassPath
		constexpr auto HandCursor = 0x128; // FSoftClassPath
		constexpr auto GrabHandCursor = 0x140; // FSoftClassPath
		constexpr auto GrabHandClosedCursor = 0x158; // FSoftClassPath
		constexpr auto SlashedCircleCursor = 0x170; // FSoftClassPath
		constexpr auto ApplicationScale = 0x188; // float
		constexpr auto UIScaleRule = 0x18c; // EUIScalingRule
		constexpr auto CustomScalingRuleClass = 0x190; // FSoftClassPath
		constexpr auto UIScaleCurve = 0x1a8; // FRuntimeFloatCurve
		constexpr auto bAllowHighDPIInGameMode = 0x230; // bool
		constexpr auto bLoadWidgetsOnDedicatedServer = 0x231; // bool
		constexpr auto CursorClasses = 0x238; // TArray<UObject*>
		constexpr auto CustomScalingRuleClassInstance = 0x248; // UObject*
		constexpr auto CustomScalingRule = 0x250; // UDPICustomScalingRule*
	}

	namespace n_UAbilityTask_WaitConfirm { // : UAbilityTask
		constexpr auto OnConfirm = 0x80; // FScriptMulticastDelegate
	}

	namespace n_ABP_AKS74U_Founder_C { // : ABP_AKS74U_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_USQConsoleVariablesComponent { // : UActorComponent
		constexpr auto PrimaryComponentTick = 0x30; // FActorComponentTickFunction
		constexpr auto ComponentTags = 0x88; // TArray<FName>
		constexpr auto AssetUserData = 0x98; // TArray<UAssetUserData*>
		constexpr auto bReplicates = 0xac; // char : 1
		constexpr auto bNetAddressable = 0xac; // char : 1
		constexpr auto bAutoActivate = 0xad; // char : 1
		constexpr auto bIsActive = 0xae; // char : 1
		constexpr auto bEditableWhenInherited = 0xae; // char : 1
		constexpr auto bCanEverAffectNavigation = 0xae; // char : 1
		constexpr auto bIsEditorOnly = 0xae; // char : 1
		constexpr auto CreationMethod = 0xb0; // EComponentCreationMethod
		constexpr auto OnComponentActivated = 0xb1; // FScriptMulticastDelegate
		constexpr auto OnComponentDeactivated = 0xb2; // FScriptMulticastDelegate
		constexpr auto UCSModifiedProperties = 0xb8; // TArray<FSimpleMemberReference>
	}

	namespace n_UTexture2D { // : UTexture
		constexpr auto LevelIndex = 0xd0; // int
		constexpr auto FirstResourceMemMip = 0xd4; // int
		constexpr auto bTemporarilyDisableStreaming = 0xd8; // char : 1
		constexpr auto AddressX = 0xd9; // TextureAddress
		constexpr auto AddressY = 0xda; // TextureAddress
		constexpr auto ImportedSize = 0xdc; // FIntPoint
	}

	namespace n_USQCommanderVotingPlayerItem { // : USQUserWidget
		constexpr auto bIsVotedByPlayer = 0x230; // bool
		constexpr auto VoteCount = 0x234; // int
		constexpr auto NomineeName = 0x238; // FString
		constexpr auto NomineePlayerState = 0x248; // ASQPlayerState*
	}

	namespace n_USlateBrushAsset { // : UObject
		constexpr auto Brush = 0x28; // FSlateBrush
	}

	namespace n_ABP_LastingEffect_TANDEM_C { // : ASQLastingEffect
		constexpr auto ParticleSystem = 0x248; // UParticleSystemComponent*
		constexpr auto Audio = 0x250; // UAudioComponent*
		constexpr auto ShockwaveEffect = 0x258; // USQShockwave*
		constexpr auto TimeToFireTriggerLastingEffectEventAfterBeginPlay = 0x260; // float
		constexpr auto TimeToLiveAfterBeginPlay = 0x264; // float
		constexpr auto TimeToLiveAfterTriggerLastingEffect = 0x268; // float
		constexpr auto bListenForOnActorHitEvents = 0x26c; // bool
		constexpr auto bListenForOnDestroyedEvents = 0x26d; // bool
		constexpr auto bActivateParticleSystemUponBeginPlay = 0x26e; // bool
		constexpr auto bActivateParticleSystemUponTriggerLastingEffect = 0x26f; // bool
		constexpr auto bActivateAudioUponBeginPlay = 0x270; // bool
		constexpr auto bActivateAudioUponTriggerLastingEffect = 0x271; // bool
		constexpr auto bActivateShockwaveUponBeginPlay = 0x272; // bool
		constexpr auto bActivateShockwaveUponTriggerLastingEffect = 0x273; // bool
		constexpr auto bDetachFromActorUponTriggerLastingEffect = 0x274; // bool
		constexpr auto bDeactivateParticleSystemUponTriggerLastingEffect = 0x275; // bool
		constexpr auto bDeactivateParticleSystemUponTriggerLastingEffectTimerExpired = 0x276; // bool
		constexpr auto bDeactivateAudioUponTriggerLastingEffectTimerExpired = 0x277; // bool
		constexpr auto bDestroyUponTriggerLastingEffectTimerExpired = 0x278; // bool
		constexpr auto bDrawDebugSphere = 0x279; // bool
		constexpr auto DebugSphereRadius = 0x27c; // float
		constexpr auto DebugSphereSegments = 0x280; // int
		constexpr auto DebugSphereColor = 0x284; // FColor
	}

	namespace n_UTextureRenderTarget2D { // : UTextureRenderTarget
		constexpr auto SizeX = 0xd8; // int
		constexpr auto SizeY = 0xdc; // int
		constexpr auto ClearColor = 0xe0; // FLinearColor
		constexpr auto AddressX = 0xf0; // TextureAddress
		constexpr auto AddressY = 0xf1; // TextureAddress
		constexpr auto bForceLinearGamma = 0xf2; // char : 1
		constexpr auto bHDR = 0xf2; // char : 1
		constexpr auto bGPUSharedFlag = 0xf2; // char : 1
		constexpr auto RenderTargetFormat = 0xf3; // ETextureRenderTargetFormat
		constexpr auto bAutoGenerateMips = 0xf4; // char : 1
		constexpr auto MipsSamplerFilter = 0xf5; // TextureFilter
		constexpr auto MipsAddressU = 0xf6; // TextureAddress
		constexpr auto MipsAddressV = 0xf7; // TextureAddress
		constexpr auto OverrideFormat = 0xf8; // EPixelFormat
	}

	namespace n_USQForceNetMovementComponent { // : USQNetMoveComponent
		constexpr auto TorqueInput = 0x260; // FVector
		constexpr auto ForceInput = 0x26c; // FVector
		constexpr auto CurrentRotationalVelocity = 0x278; // FRotator
		constexpr auto ForceComponentSettings = 0x2a8; // USQForceMovementComponentSettings*
		constexpr auto CenterOfMass = 0x2b0; // USceneComponent*
	}

	namespace n_USQRoleListGroup { // : USQUserWidget
		constexpr auto RoleType = 0x230; // ESQRoleTypeEnum
		constexpr auto GroupHeaderText = 0x238; // FText
		constexpr auto GroupHeader = 0x250; // UCanvasPanel*
		constexpr auto RoleGrid = 0x258; // UUniformGridPanel*
	}

	namespace n_UBTDecorator_ConditionalLoop { // : UBTDecorator_Blackboard
		constexpr auto IntValue = 0x90; // int
		constexpr auto FloatValue = 0x94; // float
		constexpr auto StringValue = 0x98; // FString
		constexpr auto CachedDescription = 0xa8; // FString
		constexpr auto OperationType = 0xb8; // char
		constexpr auto NotifyObserver = 0xb9; // EBTBlackboardRestart
	}

	namespace n_UMaterialFunctionInterface { // : UObject
		constexpr auto StateId = 0x28; // FGuid
		constexpr auto MaterialFunctionUsage = 0x38; // EMaterialFunctionUsage
	}

	namespace n_USQSquadMemberList { // : USQUserWidget
		constexpr auto SquadMemberListItemClass = 0x230; // USQSquadMemberListItem*
		constexpr auto BG_IMGCPP = 0x238; // UImage*
		constexpr auto IconImageCPP = 0x240; // UImage*
		constexpr auto InviteButtonCPP = 0x248; // UButton*
		constexpr auto InviteButtonTextCPP = 0x250; // UTextBlock*
		constexpr auto MemberCountCPP = 0x258; // UTextBlock*
		constexpr auto LockButtonCPP = 0x260; // UButton*
		constexpr auto SquadNameCPP = 0x268; // UTextBlock*
		constexpr auto SquadNumberCPP = 0x270; // UTextBlock*
		constexpr auto MemberListBoxCPP = 0x278; // UVerticalBox*
		constexpr auto ParentPC = 0x280; // ASQPlayerController*
		constexpr auto CurrentlyOpenedItemPS = 0x2a0; // ASQPlayerState*
	}

	namespace n_USoundWaveProcedural { // : USoundWave
		constexpr auto CompressionQuality = 0x110; // int
		constexpr auto StreamingPriority = 0x114; // int
		constexpr auto SampleRateQuality = 0x118; // ESoundwaveSampleRateSettings
		constexpr auto SoundGroup = 0x11a; // ESoundGroup
		constexpr auto bLooping = 0x11b; // char : 1
		constexpr auto bStreaming = 0x11b; // char : 1
		constexpr auto bSeekableStreaming = 0x11b; // char : 1
		constexpr auto bMature = 0x11c; // char : 1
		constexpr auto bManualWordWrap = 0x11c; // char : 1
		constexpr auto bSingleLine = 0x11c; // char : 1
		constexpr auto bIsAmbisonics = 0x11c; // char : 1
		constexpr auto FrequenciesToAnalyze = 0x120; // TArray<float>
		constexpr auto CookedSpectralTimeData = 0x130; // TArray<FSoundWaveSpectralTimeData>
		constexpr auto CookedEnvelopeTimeData = 0x140; // TArray<FSoundWaveEnvelopeTimeData>
		constexpr auto SpokenText = 0x160; // FString
		constexpr auto SubtitlePriority = 0x170; // float
		constexpr auto Volume = 0x174; // float
		constexpr auto Pitch = 0x178; // float
		constexpr auto NumChannels = 0x17c; // int
		constexpr auto SampleRate = 0x180; // int
		constexpr auto Subtitles = 0x188; // TArray<FSubtitleCue>
		constexpr auto Curves = 0x198; // UCurveTable*
		constexpr auto InternalCurves = 0x1a0; // UCurveTable*
	}

	namespace n_ABP_L85A2AG36_ElcanLDS_UGL_Smoke_C { // : ABP_L85A2AG36_ElcanLDS_UGL_Parent_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_AGameNetworkManager { // : AInfo
		constexpr auto BadPacketLossThreshold = 0x248; // float
		constexpr auto SeverePacketLossThreshold = 0x24c; // float
		constexpr auto BadPingThreshold = 0x250; // int
		constexpr auto SeverePingThreshold = 0x254; // int
		constexpr auto AdjustedNetSpeed = 0x258; // int
		constexpr auto LastNetSpeedUpdateTime = 0x25c; // float
		constexpr auto TotalNetBandwidth = 0x260; // int
		constexpr auto MinDynamicBandwidth = 0x264; // int
		constexpr auto MaxDynamicBandwidth = 0x268; // int
		constexpr auto bIsStandbyCheckingEnabled = 0x26c; // char : 1
		constexpr auto bHasStandbyCheatTriggered = 0x26c; // char : 1
		constexpr auto StandbyRxCheatTime = 0x270; // float
		constexpr auto StandbyTxCheatTime = 0x274; // float
		constexpr auto PercentMissingForRxStandby = 0x278; // float
		constexpr auto PercentMissingForTxStandby = 0x27c; // float
		constexpr auto PercentForBadPing = 0x280; // float
		constexpr auto JoinInProgressStandbyWaitTime = 0x284; // float
		constexpr auto MoveRepSize = 0x288; // float
		constexpr auto MAXPOSITIONERRORSQUARED = 0x28c; // float
		constexpr auto MAXNEARZEROVELOCITYSQUARED = 0x290; // float
		constexpr auto CLIENTADJUSTUPDATECOST = 0x294; // float
		constexpr auto MAXCLIENTUPDATEINTERVAL = 0x298; // float
		constexpr auto MaxClientForcedUpdateDuration = 0x29c; // float
		constexpr auto ServerForcedUpdateHitchThreshold = 0x2a0; // float
		constexpr auto ServerForcedUpdateHitchCooldown = 0x2a4; // float
		constexpr auto MaxMoveDeltaTime = 0x2a8; // float
		constexpr auto MaxClientSmoothingDeltaTime = 0x2ac; // float
		constexpr auto ClientNetSendMoveDeltaTime = 0x2b0; // float
		constexpr auto ClientNetSendMoveDeltaTimeThrottled = 0x2b4; // float
		constexpr auto ClientNetSendMoveDeltaTimeStationary = 0x2b8; // float
		constexpr auto ClientNetSendMoveThrottleAtNetSpeed = 0x2bc; // int
		constexpr auto ClientNetSendMoveThrottleOverPlayerCount = 0x2c0; // int
		constexpr auto ClientAuthorativePosition = 0x2c4; // bool
		constexpr auto ClientErrorUpdateRateLimit = 0x2c8; // float
		constexpr auto ClientNetCamUpdateDeltaTime = 0x2cc; // float
		constexpr auto ClientNetCamUpdatePositionLimit = 0x2d0; // float
		constexpr auto bMovementTimeDiscrepancyDetection = 0x2d4; // bool
		constexpr auto bMovementTimeDiscrepancyResolution = 0x2d5; // bool
		constexpr auto MovementTimeDiscrepancyMaxTimeMargin = 0x2d8; // float
		constexpr auto MovementTimeDiscrepancyMinTimeMargin = 0x2dc; // float
		constexpr auto MovementTimeDiscrepancyResolutionRate = 0x2e0; // float
		constexpr auto MovementTimeDiscrepancyDriftAllowance = 0x2e4; // float
		constexpr auto bMovementTimeDiscrepancyForceCorrectionsDuringResolution = 0x2e8; // bool
		constexpr auto bUseDistanceBasedRelevancy = 0x2e9; // bool
	}

	namespace n_UMaterialExpressionCameraVectorWS { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UReverbEffect { // : UObject
		constexpr auto Density = 0x28; // float
		constexpr auto Diffusion = 0x2c; // float
		constexpr auto Gain = 0x30; // float
		constexpr auto GainHF = 0x34; // float
		constexpr auto DecayTime = 0x38; // float
		constexpr auto DecayHFRatio = 0x3c; // float
		constexpr auto ReflectionsGain = 0x40; // float
		constexpr auto ReflectionsDelay = 0x44; // float
		constexpr auto LateGain = 0x48; // float
		constexpr auto LateDelay = 0x4c; // float
		constexpr auto AirAbsorptionGainHF = 0x50; // float
		constexpr auto RoomRolloffFactor = 0x54; // float
	}

	namespace n_ASQCommanderState { // : AInfo
		constexpr auto bVoteInProgress = 0x248; // bool
		constexpr auto CommanderVoteTimestamp = 0x24c; // int
		constexpr auto CommanderVoteTimer = 0x250; // int
		constexpr auto bVoteCooldownActive = 0x254; // bool
		constexpr auto VoteCooldownTimer = 0x258; // int
		constexpr auto VoteCooldownTimeSeconds = 0x25c; // int
		constexpr auto VoteCooldownTimestamp = 0x260; // int
		constexpr auto bCommanderIsActive = 0x264; // bool
		constexpr auto bCommandActionAttempted = 0x265; // bool
		constexpr auto bDoubleCaptureSpeed = 0x266; // bool
		constexpr auto CommanderCategories = 0x278; // TArray<FCommanderCategory>
		constexpr auto MinimumSquadSizeForVoting = 0x288; // int
		constexpr auto MinimumSquadsRequiredForVoting = 0x28c; // int
		constexpr auto VotingTimeSeconds = 0x290; // int
		constexpr auto CommandIntervals = 0x298; // FSQCommanderActionDataArray
		constexpr auto LastCategoryGameTime = 0x3b0; // TArray<float>
		constexpr auto TeamCommands = 0x3c0; // UDataTable*
		constexpr auto NomineeStatus = 0x3c8; // FCommanderNomineeArray
		constexpr auto OnCommanderChangedEvent = 0x4e8; // FScriptMulticastDelegate
		constexpr auto OnNominationAvailableEvent = 0x4f8; // FScriptMulticastDelegate
		constexpr auto OnNominationEndedEvent = 0x508; // FScriptMulticastDelegate
		constexpr auto OnNominationStartedEvent = 0x518; // FScriptMulticastDelegate
		constexpr auto CurrentCommander = 0x528; // ASQPlayerState*
		constexpr auto bActionsEnabled = 0x530; // bool
	}

	namespace n_URig { // : UObject
		constexpr auto TransformBases = 0x30; // TArray<FTransformBase>
		constexpr auto Nodes = 0x40; // TArray<FNode>
	}

	namespace n_ASQHealingEquipableItem { // : ASQEquipableItem
		constexpr auto TraceLength = 0x480; // float
		constexpr auto TraceSphereRadius = 0x484; // float
		constexpr auto MaxDurationForCancel = 0x488; // float
		constexpr auto ErrorMessageColor = 0x48c; // FColor
		constexpr auto ErrorMessageLifetime = 0x490; // float
		constexpr auto HealedTarget = 0x498; // ASQSoldier*
		constexpr auto HealthAudioComponent = 0x4a0; // UAudioComponent*
	}

	namespace n_USQActionSettings { // : USQSettings
		constexpr auto CreateMapMarker = 0x58; // bool
	}

	namespace n_UMaterialExpressionNoise { // : UMaterialExpression
		constexpr auto Position = 0x40; // FExpressionInput
		constexpr auto FilterWidth = 0x54; // FExpressionInput
		constexpr auto Scale = 0x68; // float
		constexpr auto Quality = 0x6c; // int
		constexpr auto NoiseFunction = 0x70; // ENoiseFunction
		constexpr auto bTurbulence = 0x74; // char : 1
		constexpr auto Levels = 0x78; // int
		constexpr auto OutputMin = 0x7c; // float
		constexpr auto OutputMax = 0x80; // float
		constexpr auto LevelScale = 0x84; // float
		constexpr auto bTiling = 0x88; // char : 1
		constexpr auto RepeatSize = 0x8c; // uint32
	}

	namespace n_UCompressedImageSequenceProtocol { // : UImageSequenceProtocol
		constexpr auto CompressionQuality = 0xd8; // int
	}

	namespace n_UParticleModuleRotationRate { // : UParticleModuleRotationRateBase
		constexpr auto StartRotationRate = 0x30; // FRawDistributionFloat
	}

	namespace n_UDecalComponent { // : USceneComponent
		constexpr auto DecalMaterial = 0x218; // UMaterialInterface*
		constexpr auto SortOrder = 0x220; // int
		constexpr auto FadeScreenSize = 0x224; // float
		constexpr auto FadeStartDelay = 0x228; // float
		constexpr auto FadeDuration = 0x22c; // float
		constexpr auto FadeInDuration = 0x230; // float
		constexpr auto FadeInStartDelay = 0x234; // float
		constexpr auto bDestroyOwnerAfterFade = 0x238; // char : 1
		constexpr auto DecalSize = 0x23c; // FVector
	}

	namespace n_UBP_MedShockwave_notrace_C { // : USQShockwave
		constexpr auto ShockwaveEffectType = 0x28; // ESQShockwaveEffectType
		constexpr auto Strength = 0x2c; // float
		constexpr auto ShockwaveQualitySettings = 0x30; // TArray<FSQShockwaveQualitySetting>
		constexpr auto CameraShake = 0x40; // FSQCameraShake
		constexpr auto SecondaryCameraShake = 0x60; // FSQCameraShake
		constexpr auto VerticalSteps = 0x80; // int
		constexpr auto HorizontalSteps = 0x84; // int
		constexpr auto DefaultRotation = 0x88; // FRotator
		constexpr auto DefaultLocationOffset = 0x94; // FVector
		constexpr auto Range = 0xa0; // float
		constexpr auto PitchRange = 0xa4; // float
		constexpr auto YawRange = 0xa8; // float
		constexpr auto CullingDistance = 0xac; // float
		constexpr auto NearbyExplosionEventRadius = 0xb0; // float
		constexpr auto MaxSoundsToSpawn = 0xb4; // int
		constexpr auto MaxDecalsToSpawn = 0xb8; // int
		constexpr auto bDebugLines = 0xbc; // bool
		constexpr auto bDebugSpheres = 0xbd; // bool
		constexpr auto Emitter = 0xc0; // UParticleSystem*
		constexpr auto DefaultEffectsClass = 0xc8; // USQPhysicalMaterialEffects*
	}

	namespace n_UBP_attachment_foregrip_founders_C { // : UBP_attachment_foregrip_C
		constexpr auto SocketName = 0x498; // FName
		constexpr auto AttachedWeapon = 0x4a0; // ASQWeapon*
		constexpr auto bShowIn1P = 0x4a8; // bool
		constexpr auto bShowIn3P = 0x4a9; // bool
	}

	namespace n_USQSimpleMovementComponent { // : USQMovementComponentBase
		constexpr auto UpdatedMeshOwner = 0x1c0; // TScriptInterface<Class>
		constexpr auto LocationInputAcceleration = 0x1f4; // float
		constexpr auto RotationInputAcceleration = 0x1f8; // float
	}

	namespace n_UDistributionVectorParticleParameter { // : UDistributionVectorParameterBase
		constexpr auto ParameterName = 0x50; // FName
		constexpr auto MinInput = 0x58; // FVector
		constexpr auto MaxInput = 0x64; // FVector
		constexpr auto MinOutput = 0x70; // FVector
		constexpr auto MaxOutput = 0x7c; // FVector
		constexpr auto ParamModes = 0x88; // DistributionParamMode [0x3]
	}

	namespace n_AQosBeaconHost { // : AOnlineBeaconHostObject
		constexpr auto BeaconTypeName = 0x248; // FString
		constexpr auto ClientBeaconActorClass = 0x258; // AOnlineBeaconClient*
		constexpr auto ClientActors = 0x260; // TArray<AOnlineBeaconClient*>
	}

	namespace n_UGeometryCacheTrack_TransformGroupAnimation { // : UGeometryCacheTrack
		constexpr auto Duration = 0x28; // float
	}

	namespace n_USoundAttenuation { // : UObject
		constexpr auto Attenuation = 0x28; // FSoundAttenuationSettings
	}

	namespace n_ULevel { // : UObject
		constexpr auto OwningWorld = 0xb8; // UWorld*
		constexpr auto Model = 0xc0; // UModel*
		constexpr auto ModelComponents = 0xc8; // TArray<UModelComponent*>
		constexpr auto ActorCluster = 0xd8; // ULevelActorContainer*
		constexpr auto NumTextureStreamingUnbuiltComponents = 0xe0; // int
		constexpr auto NumTextureStreamingDirtyResources = 0xe4; // int
		constexpr auto LevelScriptActor = 0xe8; // ALevelScriptActor*
		constexpr auto NavListStart = 0xf0; // ANavigationObjectBase*
		constexpr auto NavListEnd = 0xf8; // ANavigationObjectBase*
		constexpr auto NavDataChunks = 0x100; // TArray<UNavigationDataChunk*>
		constexpr auto LightmapTotalSize = 0x110; // float
		constexpr auto ShadowmapTotalSize = 0x114; // float
		constexpr auto StaticNavigableGeometry = 0x118; // TArray<FVector>
		constexpr auto StreamingTextureGuids = 0x128; // TArray<FGuid>
		constexpr auto LevelBuildDataId = 0x1d0; // FGuid
		constexpr auto MapBuildData = 0x1e0; // UMapBuildDataRegistry*
		constexpr auto LightBuildLevelOffset = 0x1e8; // FIntVector
		constexpr auto bIsLightingScenario = 0x1f4; // char : 1
		constexpr auto bTextureStreamingRotationChanged = 0x1f4; // char : 1
		constexpr auto bStaticComponentsRegisteredInStreamingManager = 0x1f4; // char : 1
		constexpr auto bIsVisible = 0x1f4; // char : 1
		constexpr auto WorldSettings = 0x240; // AWorldSettings*
		constexpr auto AssetUserData = 0x250; // TArray<UAssetUserData*>
		constexpr auto DestroyedReplicatedStaticActors = 0x270; // TArray<FReplicatedStaticActorDestructionInfo>
	}

	namespace n_APlanarReflection { // : ASceneCapture
		constexpr auto PlanarReflectionComponent = 0x258; // UPlanarReflectionComponent*
		constexpr auto bShowPreviewPlane = 0x260; // bool
	}

	namespace n_ASQWeapon_Effects { // : ASQWeapon
		constexpr auto WeaponSounds = 0x7a0; // FSQWeaponSounds
		constexpr auto WeaponAnimations = 0x828; // FSQWeaponAnims
		constexpr auto RecoilData = 0x870; // FSQRecoilData
		constexpr auto WeaponEffects = 0x8b8; // FSQWeaponEffects
		constexpr auto WeaponSpringConfig = 0x8f0; // FSQWeaponSpring
		constexpr auto RecoilCurve = 0x918; // UCurveFloat*
		constexpr auto WeaponOffset = 0x920; // FVector
		constexpr auto SightsViewOffset = 0x92c; // FVector
	}

	namespace n_UAISenseConfig_Prediction { // : UAISenseConfig
		constexpr auto DebugColor = 0x28; // FColor
		constexpr auto MaxAge = 0x2c; // float
		constexpr auto bStartsEnabled = 0x30; // char : 1
	}

	namespace n_UParticleModuleAttractorPointGravity { // : UParticleModuleAttractorBase
		constexpr auto Position = 0x30; // FVector
		constexpr auto Radius = 0x3c; // float
		constexpr auto Strength = 0x40; // UDistributionFloat*
		constexpr auto StrengthRaw = 0x48; // FRawDistributionFloat
	}

	namespace n_USSGS_ColorEffectSpecificationStatic { // : USSGS_ColorEffectSpecification
		constexpr auto Color = 0x30; // FSSGS_RGB
	}

	namespace n_UMaterialExpressionDDX { // : UMaterialExpression
		constexpr auto Value = 0x40; // FExpressionInput
	}

	namespace n_UNavRelevantComponent { // : UActorComponent
		constexpr auto bAttachToOwnersRoot = 0xfc; // char : 1
		constexpr auto CachedNavParent = 0x100; // UObject*
	}

	namespace n_ASkeletalMeshActor { // : AActor
		constexpr auto bShouldDoAnimNotifies = 0x250; // char : 1
		constexpr auto bWakeOnLevelStart = 0x250; // char : 1
		constexpr auto SkeletalMeshComponent = 0x258; // USkeletalMeshComponent*
		constexpr auto ReplicatedMesh = 0x260; // USkeletalMesh*
		constexpr auto ReplicatedPhysAsset = 0x268; // UPhysicsAsset*
		constexpr auto ReplicatedMaterial0 = 0x270; // UMaterialInterface*
		constexpr auto ReplicatedMaterial1 = 0x278; // UMaterialInterface*
	}

	namespace n_USoundNodeDistanceCrossFade { // : USoundNode
		constexpr auto CrossFadeInput = 0x40; // TArray<FDistanceDatum>
	}

	namespace n_USQRestriction_Count { // : USQRestriction
		constexpr auto BaseAvailability = 0x58; // int
		constexpr auto IsUniqueUsage = 0x5c; // bool
		constexpr auto Parameters = 0x60; // TArray<USQCountParameterBase*>
	}

	namespace n_UHapticFeedbackEffect_SoundWave { // : UHapticFeedbackEffect_Base
		constexpr auto SoundWave = 0x28; // USoundWave*
	}

	namespace n_USubmixEffectDynamicsProcessorPreset { // : USoundEffectSubmixPreset
		constexpr auto Settings = 0x90; // FSubmixEffectDynamicsProcessorSettings
	}

	namespace n_UWmfMediaSettings { // : UObject
		constexpr auto AllowNonStandardCodecs = 0x28; // bool
		constexpr auto LowLatency = 0x29; // bool
		constexpr auto NativeAudioOut = 0x2a; // bool
		constexpr auto HardwareAcceleratedVideoDecoding = 0x2b; // bool
	}

	namespace n_USQMagazineWidget { // : USQUserWidget
		constexpr auto SelectedImage = 0x230; // UImage*
		constexpr auto AmmoImage = 0x238; // UImage*
	}

	namespace n_APrefabActor { // : AActor
		constexpr auto PrefabComponent = 0x248; // UPrefabComponent*
	}

	namespace n_UScrollBox { // : UPanelWidget
		constexpr auto WidgetStyle = 0x120; // FScrollBoxStyle
		constexpr auto WidgetBarStyle = 0x348; // FScrollBarStyle
		constexpr auto Style = 0x818; // USlateWidgetStyleAsset*
		constexpr auto BarStyle = 0x820; // USlateWidgetStyleAsset*
		constexpr auto Orientation = 0x828; // EOrientation
		constexpr auto ScrollBarVisibility = 0x829; // ESlateVisibility
		constexpr auto ConsumeMouseWheel = 0x82a; // EConsumeMouseWheel
		constexpr auto ScrollbarThickness = 0x82c; // FVector2D
		constexpr auto ScrollbarPadding = 0x834; // FMargin
		constexpr auto AlwaysShowScrollbar = 0x844; // bool
		constexpr auto AlwaysShowScrollbarTrack = 0x845; // bool
		constexpr auto AllowOverscroll = 0x846; // bool
		constexpr auto NavigationDestination = 0x847; // EDescendantScrollDestination
		constexpr auto NavigationScrollPadding = 0x848; // float
		constexpr auto bAllowRightClickDragScrolling = 0x84c; // bool
		constexpr auto OnUserScrolled = 0x850; // FScriptMulticastDelegate
	}

	namespace n_UMovieScene2DTransformSection { // : UMovieSceneSection
		constexpr auto TransformMask = 0xe0; // FMovieScene2DTransformMask
		constexpr auto Translation = 0xe8; // FMovieSceneFloatChannel [0x2]
		constexpr auto Rotation = 0x228; // FMovieSceneFloatChannel
		constexpr auto Scale = 0x2c8; // FMovieSceneFloatChannel [0x2]
		constexpr auto Shear = 0x408; // FMovieSceneFloatChannel [0x2]
	}

	namespace n_UCoreSerializeItemSetCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto OnFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_USQLocalAudioPlayer { // : USQLocalAudioEffectHandler
		constexpr auto PlayingAudioComponent = 0x28; // UAudioComponent*
	}

	namespace n_USQRoleList { // : USQUserWidget
		constexpr auto bCanRunTick = 0x230; // bool
		constexpr auto RoleGroupWidgets = 0x238; // TArray<USQRoleListGroup*>
		constexpr auto RoleUnitWidgets = 0x248; // TArray<USQRoleListUnit*>
		constexpr auto GridColumns = 0x258; // int
		constexpr auto OwnerPlayerState = 0x260; // ASQPlayerState*
		constexpr auto OwnerController = 0x268; // ASQPlayerController*
		constexpr auto CachedRoles = 0x270; // TSet<FString>
		constexpr auto RoleWidgetType = 0x2c0; // USQRoleListUnit*
	}

	namespace n_UGeometryCollectionDebugDrawComponent { // : UActorComponent
		constexpr auto GeometryCollectionDebugDrawActor = 0xd8; // AGeometryCollectionDebugDrawActor*
		constexpr auto GeometryCollectionRenderLevelSetActor = 0xe0; // AGeometryCollectionRenderLevelSetActor*
	}

	namespace n_UBP_Attachment_AK74M_Front_C { // : USQWeaponAttachment_Scope
		constexpr auto MeshTransitionPercentage = 0x4b0; // float
		constexpr auto ADSMesh = 0x4b8; // UStaticMesh*
		constexpr auto ADSMeshTransform = 0x4c0; // FTransform
		constexpr auto NonADSMesh = 0x4f0; // UStaticMesh*
		constexpr auto NonADSMeshTransform = 0x500; // FTransform
		constexpr auto InToADSMeshTransitionSettings = 0x530; // TArray<FSQMeshTransitionSettings>
		constexpr auto OutFromADSMeshTransitionSettings = 0x540; // TArray<FSQMeshTransitionSettings>
	}

	namespace n_UAISenseConfig_Damage { // : UAISenseConfig
		constexpr auto Implementation = 0x48; // UAISense_Damage*
	}

	namespace n_UMultiPacker { // : UObject
		constexpr auto TextureTileSizeOutput = 0x2a; // ETextureSizeOutput
		constexpr auto RectangleTiles = 0x2b; // bool
		constexpr auto RectangleMethod = 0x2c; // EFreeRectChoiceHeuristic
		constexpr auto OutputSizeX = 0x2d; // ETextureSizeOutputPersonal
		constexpr auto OutputSizeY = 0x2e; // ETextureSizeOutputPersonal
		constexpr auto TilePadding = 0x30; // FVector2D
		constexpr auto ChannelMethod = 0x38; // EChannelTextureSave
		constexpr auto Alpha = 0x39; // bool
		constexpr auto TileSize = 0x3c; // int
		constexpr auto SaveMaterialCollection = 0x40; // bool
		constexpr auto SaveDatabase = 0x41; // bool
		constexpr auto TargetDirectory = 0x48; // FDirectoryPath
		constexpr auto TargetName = 0x58; // FString
		constexpr auto EditPrefix = 0x68; // bool
		constexpr auto DatabasePrefix = 0x70; // FString
		constexpr auto TexturePrefix = 0x80; // FString
		constexpr auto MaterialcollectionPrefix = 0x90; // FString
		constexpr auto EditTexture = 0xa0; // bool
		constexpr auto T_TextureFilter = 0xa1; // TextureFilter
		constexpr auto Tex_SRGB = 0xa2; // bool
		constexpr auto Tex_AddressX = 0xa3; // TextureAddress
		constexpr auto Tex_AddressY = 0xa4; // TextureAddress
		constexpr auto Tex_Power = 0xa5; // ETexturePowerOfTwoSetting
		constexpr auto TextureOutput = 0xa8; // TArray<UTexture2D*>
		constexpr auto Database = 0xb8; // UMultiPackerDataBase*
		constexpr auto MaterialCollection = 0xc0; // UMaterialParameterCollection*
		constexpr auto TileMap = 0xc8; // TMap<FName, FTileDatabase>
		constexpr auto TilePointers = 0x118; // TArray<UTilePointer*>
	}

	namespace n_ABP_RPG7_Parent_C { // : ABP_GenericRocketLauncher_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
		constexpr auto MuzzleFlashRearComponent3P = 0x7b8; // UParticleSystemComponent*
		constexpr auto BackBlastComponent3P = 0x7c0; // UChildActorComponent*
		constexpr auto MuzzleFlashRearComponent1P = 0x7c8; // UParticleSystemComponent*
		constexpr auto SquadBlast = 0x7d0; // USQBlastComponent*
		constexpr auto BackBlastComponent1P = 0x7d8; // UChildActorComponent*
		constexpr auto BackblastSocket = 0x7e0; // FName
		constexpr auto BackblastEffect1P = 0x7e8; // UParticleSystem*
		constexpr auto BackblastEffect3P = 0x7f0; // UParticleSystem*
	}

	namespace n_ABP_AK74MGP25_1P63_UGL_Desert_Smoke_C { // : ABP_AK74MGP25_1P63_UGL_Desert_Parent_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_USQGameInstanceSubsystems { // : UGameInstanceSubsystem
		constexpr auto SquadGameSubsystemObjects = 0x30; // TArray<FSQGameSubsystemObject>
		constexpr auto SubsystemInstances = 0x40; // TArray<UObject*>
	}

	namespace n_USoundNodeDelay { // : USoundNode
		constexpr auto DelayMin = 0x40; // float
		constexpr auto DelayMax = 0x44; // float
	}

	namespace n_UParticleModuleMeshRotationRateMultiplyLife { // : UParticleModuleRotationRateBase
		constexpr auto LifeMultiplier = 0x30; // FRawDistributionVector
	}

	namespace n_UMovieScene3DAttachTrack { // : UMovieScene3DConstraintTrack
		constexpr auto ConstraintSections = 0x58; // TArray<UMovieSceneSection*>
	}

	namespace n_ABP_M4M203_M68_UGL_Woodland_HE_C { // : ABP_M4M203_M68_UGL_Woodland_Parent_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UDiscordRpc { // : UObject
		constexpr auto IsConnected = 0x28; // bool
		constexpr auto OnConnected = 0x30; // FScriptMulticastDelegate
		constexpr auto OnDisconnected = 0x40; // FScriptMulticastDelegate
		constexpr auto OnErrored = 0x50; // FScriptMulticastDelegate
		constexpr auto OnJoin = 0x60; // FScriptMulticastDelegate
		constexpr auto OnSpectate = 0x70; // FScriptMulticastDelegate
		constexpr auto OnJoinRequest = 0x80; // FScriptMulticastDelegate
		constexpr auto RichPresence = 0x90; // FDiscordRichPresence
	}

	namespace n_UAbilityTask_ApplyRootMotionJumpForce { // : UAbilityTask_ApplyRootMotion_Base
		constexpr auto OnFinish = 0xb8; // FScriptMulticastDelegate
		constexpr auto OnLanded = 0xc8; // FScriptMulticastDelegate
		constexpr auto Rotation = 0xd8; // FRotator
		constexpr auto distance = 0xe4; // float
		constexpr auto Height = 0xe8; // float
		constexpr auto Duration = 0xec; // float
		constexpr auto MinimumLandedTriggerTime = 0xf0; // float
		constexpr auto bFinishOnLanded = 0xf4; // bool
		constexpr auto PathOffsetCurve = 0xf8; // UCurveVector*
		constexpr auto TimeMappingCurve = 0x100; // UCurveFloat*
	}

	namespace n_ANote { // : AActor
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto bHidden = 0x80; // char : 1
		constexpr auto bNetTemporary = 0x80; // char : 1
		constexpr auto bNetStartup = 0x80; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x80; // char : 1
		constexpr auto bAlwaysRelevant = 0x80; // char : 1
		constexpr auto bReplicateMovement = 0x80; // char : 1
		constexpr auto bTearOff = 0x80; // char : 1
		constexpr auto bExchangedRoles = 0x80; // char : 1
		constexpr auto bNetLoadOnClient = 0x81; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x81; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x81; // char : 1
		constexpr auto bRelevantForLevelBounds = 0x81; // char : 1
		constexpr auto bReplayRewindable = 0x81; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x81; // char : 1
		constexpr auto bAutoDestroyWhenFinished = 0x81; // char : 1
		constexpr auto bBlockInput = 0x81; // char : 1
		constexpr auto bCanBeDamaged = 0x82; // char : 1
		constexpr auto bCollideWhenPlacing = 0x82; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x82; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x82; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x82; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x82; // char : 1
		constexpr auto bIsEditorOnlyActor = 0x82; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x82; // char : 1
		constexpr auto bReplicates = 0x83; // char : 1
		constexpr auto bCanBeInCluster = 0x83; // char : 1
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x83; // char : 1
		constexpr auto bActorEnableCollision = 0x84; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x84; // char : 1
		constexpr auto RemoteRole = 0x85; // ENetRole
		constexpr auto ReplicatedMovement = 0x88; // FRepMovement
		constexpr auto InitialLifeSpan = 0xbc; // float
		constexpr auto CustomTimeDilation = 0xc0; // float
		constexpr auto AttachmentReplication = 0xc8; // FRepAttachment
		constexpr auto Owner = 0x108; // AActor*
		constexpr auto NetDriverName = 0x110; // FName
		constexpr auto Role = 0x118; // ENetRole
		constexpr auto NetDormancy = 0x119; // ENetDormancy
		constexpr auto SpawnCollisionHandlingMethod = 0x11a; // ESpawnActorCollisionHandlingMethod
		constexpr auto AutoReceiveInput = 0x11b; // EAutoReceiveInput
		constexpr auto InputPriority = 0x11c; // int
		constexpr auto InputComponent = 0x120; // UInputComponent*
		constexpr auto NetCullDistanceSquared = 0x128; // float
		constexpr auto NetTag = 0x12c; // int
		constexpr auto NetUpdateFrequency = 0x130; // float
		constexpr auto MinNetUpdateFrequency = 0x134; // float
		constexpr auto bUseRelativeNetUpdateFrequency = 0x138; // char : 1
		constexpr auto bUseOwnerRelativeNetUpdateFrequency = 0x138; // char : 1
		constexpr auto MinRelativeNetUpdateEvaluationFrequency = 0x13c; // float
		constexpr auto NetPriority = 0x140; // float
		constexpr auto Instigator = 0x148; // APawn*
		constexpr auto Children = 0x150; // TArray<AActor*>
		constexpr auto RootComponent = 0x160; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x168; // TArray<AMatineeActor*>
		constexpr auto Layers = 0x180; // TArray<FName>
		constexpr auto ParentComponent = 0x190; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto Tags = 0x198; // TArray<FName>
		constexpr auto OnTakeAnyDamage = 0x1a8; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x1a9; // FScriptMulticastDelegate
		constexpr auto OnTakeRadialDamage = 0x1aa; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x1ab; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x1ac; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x1ad; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x1ae; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x1af; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x1b0; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x1b1; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x1b2; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x1b3; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x1b4; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x1b5; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x1b6; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x1b7; // FScriptMulticastDelegate
		constexpr auto InstanceComponents = 0x218; // TArray<UActorComponent*>
		constexpr auto BlueprintCreatedComponents = 0x228; // TArray<UActorComponent*>
	}

	namespace n_ABP_GenericRifle_C { // : ABP_Weapon2_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_ABP_L85A2AG36_ACOG_UGL_Smoke_Red_C { // : ABP_L85A2AG36_ACOG_UGL_Smoke_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_USpotLightComponent { // : UPointLightComponent
		constexpr auto InnerConeAngle = 0x388; // float
		constexpr auto OuterConeAngle = 0x38c; // float
		constexpr auto LightShaftConeAngle = 0x390; // float
	}

	namespace n_ABP_M4M203_M150_UGL_Woodland_Smoke_Red_C { // : ABP_M4M203_M150_UGL_Woodland_Smoke_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_ASQGameRallyPoint { // : ASQGameSpawn
		constexpr auto Mesh = 0x420; // UStaticMeshComponent*
		constexpr auto RallyPointMapIcon = 0x428; // USQMapIconComponent*
		constexpr auto PlacementSound = 0x430; // USoundBase*
		constexpr auto NumberOfSpawns = 0x438; // int
	}

	namespace n_USoundNodeSoundClass { // : USoundNode
		constexpr auto SoundClassOverride = 0x40; // USoundClass*
	}

	namespace n_UTextureLODSettings { // : UObject
		constexpr auto TextureLODGroups = 0x28; // TArray<FTextureLODGroup>
	}

	namespace n_UDistributionFloat { // : UDistribution
		constexpr auto bCanBeBaked = 0x30; // char : 1
		constexpr auto bBakedDataSuccesfully = 0x30; // char : 1
	}

	namespace n_UMaterialExpressionStaticSwitchParameter { // : UMaterialExpressionStaticBoolParameter
		constexpr auto A = 0x60; // FExpressionInput
		constexpr auto B = 0x74; // FExpressionInput
	}

	namespace n_USQBuffManager { // : UActorComponent
		constexpr auto Buffs = 0xd8; // FSQBuffDesc [0x4]
	}

	namespace n_ASQDeployableSpawner { // : ASQSpawner
		constexpr auto NeutralCopyDeployableFromTeam = 0x2d8; // ESQTeam
		constexpr auto SpecificDeployable = 0x2e0; // USQDeployableSettings*
	}

	namespace n_USQSquadStateDataVehicleSeat { // : USQSquadStateDataSQPawn
		constexpr auto bHiddenWhenUnpossessed = 0x180; // bool
		constexpr auto bHiddenWhenNotLocallyControlled = 0x181; // bool
		constexpr auto bHideWidgetWhenUnpossessed = 0x182; // bool
		constexpr auto CameraRotaionYawTolerance = 0x184; // float
		constexpr auto OwnerPlayerState = 0x188; // ASQPlayerState*
		constexpr auto CachedPlayerId = 0x194; // int
		constexpr auto FireTeamIndex = 0x198; // int
		constexpr auto CachedOwnerPlayerState = 0x1a0; // ASQPlayerState*
	}

	namespace n_ABP_M17MHS_C { // : ABP_GenericPistol_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UBP_RPG7Tandem_StaticInfo_C { // : UBP_RPG7Parent_StaticInfo_C
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_UMultiPackerImage { // : UImage
		constexpr auto TypeLayer = 0x210; // EMultiPackerImageLayer
		constexpr auto Layer_2 = 0x211; // bool
		constexpr auto Layer_3 = 0x212; // bool
		constexpr auto Layer_4 = 0x213; // bool
		constexpr auto LayerBase = 0x218; // FLayerDatabase
		constexpr auto LayerAddition = 0x270; // FLayerDatabase
		constexpr auto LayerDetail = 0x2c8; // FLayerDatabase
		constexpr auto BaseColorOutline = 0x320; // FLinearColor
		constexpr auto BaseColorInterior = 0x330; // FLinearColor
		constexpr auto BaseOutlineThresold = 0x340; // float
		constexpr auto BaseSDFThresold = 0x344; // float
		constexpr auto BaseStyleChanged = 0x348; // bool
		constexpr auto LayerBaseStyle = 0x350; // UMultiPackerLayerDatabase*
		constexpr auto AdditionColorOutline = 0x358; // FLinearColor
		constexpr auto AdditionColorInterior = 0x368; // FLinearColor
		constexpr auto AdditionOutlineThresold = 0x378; // float
		constexpr auto AdditionSDFThresold = 0x37c; // float
		constexpr auto AdditionStyleChanged = 0x380; // bool
		constexpr auto LayerAdditionStyle = 0x388; // UMultiPackerLayerDatabase*
		constexpr auto DetailColorOutline = 0x390; // FLinearColor
		constexpr auto DetailColorInterior = 0x3a0; // FLinearColor
		constexpr auto DetailOutlineThresold = 0x3b0; // float
		constexpr auto DetailSDFThresold = 0x3b4; // float
		constexpr auto DetailStyleChanged = 0x3b8; // bool
		constexpr auto LayerDetailStyle = 0x3c0; // UMultiPackerLayerDatabase*
	}

	namespace n_AGameSession { // : AInfo
		constexpr auto MaxSpectators = 0x248; // int
		constexpr auto MaxPlayers = 0x24c; // int
		constexpr auto MaxPartySize = 0x250; // int
		constexpr auto MaxSplitscreensPerConnection = 0x254; // char
		constexpr auto bRequiresPushToTalk = 0x255; // bool
		constexpr auto SessionName = 0x258; // FName
	}

	namespace n_ABP_AK74GP25_UGL_Smoke_Blue_Founders_C { // : ABP_AK74GP25_UGL_Smoke_Blue_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_URouteSelectorPredicate2 { // : URouteSelectorPredicate
		constexpr auto NumLinksToChoose = 0x28; // int
	}

	namespace n_UWheeledVehicleMovementComponentNW { // : UWheeledVehicleMovementComponent
		constexpr auto EngineSetup = 0x2d8; // FVehicleNWEngineData
		constexpr auto DifferentialSetup = 0x378; // TArray<FVehicleNWWheelDifferentialData>
		constexpr auto TransmissionSetup = 0x388; // FVehicleNWTransmissionData
		constexpr auto SteeringCurve = 0x3c8; // FRuntimeFloatCurve
	}

	namespace n_UTreeView { // : UListView
		constexpr auto BP_OnGetItemChildren = 0x368; // DelegateProperty
		constexpr auto BP_OnItemExpansionChanged = 0x378; // FScriptMulticastDelegate
	}

	namespace n_ULevelSequenceBurnInOptions { // : UObject
		constexpr auto bUseBurnIn = 0x28; // bool
		constexpr auto BurnInClass = 0x30; // FSoftClassPath
		constexpr auto Settings = 0x48; // ULevelSequenceBurnInInitSettings*
	}

	namespace n_ASQTeamSpawnPoint { // : ASQGameSpawn
		constexpr auto Group = 0x420; // ASQTeamSpawnGroup*
	}

	namespace n_UCrowdManager { // : UCrowdManagerBase
		constexpr auto MyNavData = 0x28; // ANavigationData*
		constexpr auto AvoidanceConfig = 0x30; // TArray<FCrowdAvoidanceConfig>
		constexpr auto SamplingPatterns = 0x40; // TArray<FCrowdAvoidanceSamplingPattern>
		constexpr auto MaxAgents = 0x50; // int
		constexpr auto MaxAgentRadius = 0x54; // float
		constexpr auto MaxAvoidedAgents = 0x58; // int
		constexpr auto MaxAvoidedWalls = 0x5c; // int
		constexpr auto NavmeshCheckInterval = 0x60; // float
		constexpr auto PathOptimizationInterval = 0x64; // float
		constexpr auto SeparationDirClamp = 0x68; // float
		constexpr auto PathOffsetRadiusMultiplier = 0x6c; // float
		constexpr auto bResolveCollisions = 0x70; // char : 1
	}

	namespace n_USoundNodeDoppler { // : USoundNode
		constexpr auto DopplerIntensity = 0x40; // float
		constexpr auto bUseSmoothing = 0x44; // bool
		constexpr auto SmoothingInterpSpeed = 0x48; // float
	}

	namespace n_ABP_M4M203_UGL_Woodland_HE_C { // : ABP_M4M203_UGL_Woodland_Parent_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UWidgetSwitcher { // : UPanelWidget
		constexpr auto ActiveWidgetIndex = 0x120; // int
	}

	namespace n_UCharacterMovementComponent { // : UPawnMovementComponent
		constexpr auto CharacterOwner = 0x170; // ACharacter*
		constexpr auto GravityScale = 0x178; // float
		constexpr auto MaxStepHeight = 0x17c; // float
		constexpr auto JumpZVelocity = 0x180; // float
		constexpr auto JumpOffJumpZFactor = 0x184; // float
		constexpr auto WalkableFloorAngle = 0x188; // float
		constexpr auto WalkableFloorZ = 0x18c; // float
		constexpr auto MovementMode = 0x190; // EMovementMode
		constexpr auto CustomMovementMode = 0x191; // char
		constexpr auto NetworkSmoothingMode = 0x192; // ENetworkSmoothingMode
		constexpr auto GroundFriction = 0x194; // float
		constexpr auto MaxWalkSpeed = 0x1bc; // float
		constexpr auto MaxWalkSpeedCrouched = 0x1c0; // float
		constexpr auto MaxSwimSpeed = 0x1c4; // float
		constexpr auto MaxFlySpeed = 0x1c8; // float
		constexpr auto MaxCustomMovementSpeed = 0x1cc; // float
		constexpr auto MaxAcceleration = 0x1d0; // float
		constexpr auto MinAnalogWalkSpeed = 0x1d4; // float
		constexpr auto BrakingFrictionFactor = 0x1d8; // float
		constexpr auto BrakingFriction = 0x1dc; // float
		constexpr auto BrakingSubStepTime = 0x1e0; // float
		constexpr auto BrakingDecelerationWalking = 0x1e4; // float
		constexpr auto BrakingDecelerationFalling = 0x1e8; // float
		constexpr auto BrakingDecelerationSwimming = 0x1ec; // float
		constexpr auto BrakingDecelerationFlying = 0x1f0; // float
		constexpr auto AirControl = 0x1f4; // float
		constexpr auto AirControlBoostMultiplier = 0x1f8; // float
		constexpr auto AirControlBoostVelocityThreshold = 0x1fc; // float
		constexpr auto FallingLateralFriction = 0x200; // float
		constexpr auto CrouchedHalfHeight = 0x204; // float
		constexpr auto Buoyancy = 0x208; // float
		constexpr auto PerchRadiusThreshold = 0x20c; // float
		constexpr auto PerchAdditionalHeight = 0x210; // float
		constexpr auto RotationRate = 0x214; // FRotator
		constexpr auto bUseSeparateBrakingFriction = 0x220; // char : 1
		constexpr auto bApplyGravityWhileJumping = 0x220; // char : 1
		constexpr auto bUseControllerDesiredRotation = 0x220; // char : 1
		constexpr auto bOrientRotationToMovement = 0x220; // char : 1
		constexpr auto bSweepWhileNavWalking = 0x220; // char : 1
		constexpr auto bMovementInProgress = 0x220; // char : 1
		constexpr auto bEnableScopedMovementUpdates = 0x220; // char : 1
		constexpr auto bEnableServerDualMoveScopedMovementUpdates = 0x221; // char : 1
		constexpr auto bForceMaxAccel = 0x221; // char : 1
		constexpr auto bRunPhysicsWithNoController = 0x221; // char : 1
		constexpr auto bForceNextFloorCheck = 0x221; // char : 1
		constexpr auto bShrinkProxyCapsule = 0x221; // char : 1
		constexpr auto bCanWalkOffLedges = 0x221; // char : 1
		constexpr auto bCanWalkOffLedgesWhenCrouching = 0x221; // char : 1
		constexpr auto bNetworkSkipProxyPredictionOnNetUpdate = 0x222; // char : 1
		constexpr auto bNetworkAlwaysReplicateTransformUpdateTimestamp = 0x222; // char : 1
		constexpr auto bDeferUpdateMoveComponent = 0x222; // char : 1
		constexpr auto bEnablePhysicsInteraction = 0x222; // char : 1
		constexpr auto bTouchForceScaledToMass = 0x222; // char : 1
		constexpr auto bPushForceScaledToMass = 0x222; // char : 1
		constexpr auto bPushForceUsingZOffset = 0x222; // char : 1
		constexpr auto bScalePushForceToVelocity = 0x223; // char : 1
		constexpr auto DeferredUpdatedMoveComponent = 0x228; // USceneComponent*
		constexpr auto MaxOutOfWaterStepHeight = 0x230; // float
		constexpr auto OutofWaterZ = 0x234; // float
		constexpr auto Mass = 0x238; // float
		constexpr auto StandingDownwardForceScale = 0x23c; // float
		constexpr auto InitialPushForceFactor = 0x240; // float
		constexpr auto PushForceFactor = 0x244; // float
		constexpr auto PushForcePointZOffsetFactor = 0x248; // float
		constexpr auto TouchForceFactor = 0x24c; // float
		constexpr auto MinTouchForce = 0x250; // float
		constexpr auto MaxTouchForce = 0x254; // float
		constexpr auto RepulsionForce = 0x258; // float
		constexpr auto Acceleration = 0x25c; // FVector
		constexpr auto LastUpdateRotation = 0x270; // FQuat
		constexpr auto LastUpdateLocation = 0x280; // FVector
		constexpr auto LastUpdateVelocity = 0x28c; // FVector
		constexpr auto ServerLastTransformUpdateTimeStamp = 0x298; // float
		constexpr auto ServerLastClientGoodMoveAckTime = 0x29c; // float
		constexpr auto ServerLastClientAdjustmentTime = 0x2a0; // float
		constexpr auto PendingImpulseToApply = 0x2a4; // FVector
		constexpr auto PendingForceToApply = 0x2b0; // FVector
		constexpr auto AnalogInputModifier = 0x2bc; // float
		constexpr auto MaxSimulationTimeStep = 0x2cc; // float
		constexpr auto MaxSimulationIterations = 0x2d0; // int
		constexpr auto MaxJumpApexAttemptsPerSimulation = 0x2d4; // int
		constexpr auto MaxDepenetrationWithGeometry = 0x2d8; // float
		constexpr auto MaxDepenetrationWithGeometryAsProxy = 0x2dc; // float
		constexpr auto MaxDepenetrationWithPawn = 0x2e0; // float
		constexpr auto MaxDepenetrationWithPawnAsProxy = 0x2e4; // float
		constexpr auto NetworkSimulatedSmoothLocationTime = 0x2e8; // float
		constexpr auto NetworkSimulatedSmoothRotationTime = 0x2ec; // float
		constexpr auto ListenServerNetworkSimulatedSmoothLocationTime = 0x2f0; // float
		constexpr auto ListenServerNetworkSimulatedSmoothRotationTime = 0x2f4; // float
		constexpr auto NetProxyShrinkRadius = 0x2f8; // float
		constexpr auto NetProxyShrinkHalfHeight = 0x2fc; // float
		constexpr auto NetworkMaxSmoothUpdateDistance = 0x300; // float
		constexpr auto NetworkNoSmoothUpdateDistance = 0x304; // float
		constexpr auto NetworkMinTimeBetweenClientAckGoodMoves = 0x308; // float
		constexpr auto NetworkMinTimeBetweenClientAdjustments = 0x30c; // float
		constexpr auto NetworkMinTimeBetweenClientAdjustmentsLargeCorrection = 0x310; // float
		constexpr auto NetworkLargeClientCorrectionDistance = 0x314; // float
		constexpr auto LedgeCheckThreshold = 0x318; // float
		constexpr auto JumpOutOfWaterPitch = 0x31c; // float
		constexpr auto CurrentFloor = 0x320; // FFindFloorResult
		constexpr auto DefaultLandMovementMode = 0x3b4; // EMovementMode
		constexpr auto DefaultWaterMovementMode = 0x3b5; // EMovementMode
		constexpr auto GroundMovementMode = 0x3b6; // EMovementMode
		constexpr auto bMaintainHorizontalGroundVelocity = 0x3b7; // char : 1
		constexpr auto bImpartBaseVelocityX = 0x3b7; // char : 1
		constexpr auto bImpartBaseVelocityY = 0x3b7; // char : 1
		constexpr auto bImpartBaseVelocityZ = 0x3b7; // char : 1
		constexpr auto bImpartBaseAngularVelocity = 0x3b7; // char : 1
		constexpr auto bJustTeleported = 0x3b7; // char : 1
		constexpr auto bNetworkUpdateReceived = 0x3b7; // char : 1
		constexpr auto bNetworkMovementModeChanged = 0x3b7; // char : 1
		constexpr auto bIgnoreClientMovementErrorChecksAndCorrection = 0x3b8; // char : 1
		constexpr auto bServerAcceptClientAuthoritativePosition = 0x3b8; // char : 1
		constexpr auto bNotifyApex = 0x3b8; // char : 1
		constexpr auto bCheatFlying = 0x3b8; // char : 1
		constexpr auto bWantsToCrouch = 0x3b8; // char : 1
		constexpr auto bCrouchMaintainsBaseLocation = 0x3b8; // char : 1
		constexpr auto bIgnoreBaseRotation = 0x3b8; // char : 1
		constexpr auto bFastAttachedMove = 0x3b8; // char : 1
		constexpr auto bAlwaysCheckFloor = 0x3b9; // char : 1
		constexpr auto bUseFlatBaseForFloorChecks = 0x3b9; // char : 1
		constexpr auto bPerformingJumpOff = 0x3b9; // char : 1
		constexpr auto bWantsToLeaveNavWalking = 0x3b9; // char : 1
		constexpr auto bUseRVOAvoidance = 0x3b9; // char : 1
		constexpr auto bRequestedMoveUseAcceleration = 0x3b9; // char : 1
		constexpr auto bWasSimulatingRootMotion = 0x3b9; // char : 1
		constexpr auto bAllowPhysicsRotationDuringAnimRootMotion = 0x3ba; // char : 1
		constexpr auto bHasRequestedVelocity = 0x3ba; // char : 1
		constexpr auto bRequestedMoveWithMaxSpeed = 0x3ba; // char : 1
		constexpr auto bWasAvoidanceUpdated = 0x3ba; // char : 1
		constexpr auto bProjectNavMeshWalking = 0x3ba; // char : 1
		constexpr auto bProjectNavMeshOnBothWorldChannels = 0x3ba; // char : 1
		constexpr auto AvoidanceConsiderationRadius = 0x3cc; // float
		constexpr auto RequestedVelocity = 0x3d0; // FVector
		constexpr auto AvoidanceUID = 0x3dc; // int
		constexpr auto AvoidanceGroup = 0x3e0; // FNavAvoidanceMask
		constexpr auto GroupsToAvoid = 0x3e4; // FNavAvoidanceMask
		constexpr auto GroupsToIgnore = 0x3e8; // FNavAvoidanceMask
		constexpr auto AvoidanceWeight = 0x3ec; // float
		constexpr auto PendingLaunchVelocity = 0x3f0; // FVector
		constexpr auto NavMeshProjectionInterval = 0x4a0; // float
		constexpr auto NavMeshProjectionTimer = 0x4a4; // float
		constexpr auto NavMeshProjectionInterpSpeed = 0x4a8; // float
		constexpr auto NavMeshProjectionHeightScaleUp = 0x4ac; // float
		constexpr auto NavMeshProjectionHeightScaleDown = 0x4b0; // float
		constexpr auto NavWalkingFloorDistTolerance = 0x4b4; // float
		constexpr auto PostPhysicsTickFunction = 0x4b8; // FCharacterMovementComponentPostPhysicsTickFunction
		constexpr auto MinTimeBetweenTimeStampResets = 0x528; // float
		constexpr auto CurrentRootMotion = 0x530; // FRootMotionSourceGroup
		constexpr auto RootMotionParams = 0x6c0; // FRootMotionMovementParams
		constexpr auto AnimRootMotionVelocity = 0x700; // FVector
	}

	namespace n_USQGridMarkerUnit { // : USQUserWidget
		constexpr auto bIsVertical = 0x230; // bool
		constexpr auto DefaultSize = 0x234; // float
		constexpr auto SizeCanvas = 0x238; // UCanvasPanel*
		constexpr auto TextBlock = 0x240; // UTextBlock*
	}

	namespace n_UInterpTrackInstParticleReplay { // : UInterpTrackInst
		constexpr auto LastUpdatePosition = 0x28; // float
	}

	namespace n_UGeometryCacheCodecBase { // : UObject
		constexpr auto TopologyRanges = 0x28; // TArray<int>
	}

	namespace n_UMaterialExpressionFresnel { // : UMaterialExpression
		constexpr auto ExponentIn = 0x40; // FExpressionInput
		constexpr auto Exponent = 0x54; // float
		constexpr auto BaseReflectFractionIn = 0x58; // FExpressionInput
		constexpr auto BaseReflectFraction = 0x6c; // float
		constexpr auto Normal = 0x70; // FExpressionInput
	}

	namespace n_UBP_Attachment_M150_Woodland_C { // : UBP_Attachment_M150_C
		constexpr auto MeshTransitionPercentage = 0x4b0; // float
		constexpr auto ADSMesh = 0x4b8; // UStaticMesh*
		constexpr auto ADSMeshTransform = 0x4c0; // FTransform
		constexpr auto NonADSMesh = 0x4f0; // UStaticMesh*
		constexpr auto NonADSMeshTransform = 0x500; // FTransform
		constexpr auto InToADSMeshTransitionSettings = 0x530; // TArray<FSQMeshTransitionSettings>
		constexpr auto OutFromADSMeshTransitionSettings = 0x540; // TArray<FSQMeshTransitionSettings>
	}

	namespace n_USphereComponent { // : UShapeComponent
		constexpr auto SphereRadius = 0x420; // float
	}

	namespace n_UParticleModuleLocationPrimitiveCylinder { // : UParticleModuleLocationPrimitiveBase
		constexpr auto RadialVelocity = 0xc0; // char : 1
		constexpr auto StartRadius = 0xc8; // FRawDistributionFloat
		constexpr auto StartHeight = 0x100; // FRawDistributionFloat
		constexpr auto HeightAxis = 0x138; // CylinderHeightAxis
	}

	namespace n_UImgMediaSettings { // : UObject
		constexpr auto DefaultFrameRate = 0x28; // FFrameRate
		constexpr auto CacheBehindPercentage = 0x30; // float
		constexpr auto CacheSizeGB = 0x34; // float
		constexpr auto CacheThreads = 0x38; // int
		constexpr auto CacheThreadStackSizeKB = 0x3c; // int
		constexpr auto GlobalCacheSizeGB = 0x40; // float
		constexpr auto UseGlobalCache = 0x44; // bool
		constexpr auto ExrDecoderThreads = 0x48; // uint32
		constexpr auto DefaultProxy = 0x50; // FString
		constexpr auto UseDefaultProxy = 0x60; // bool
	}

	namespace n_USQBurningDamage { // : USQDamageType
		constexpr auto bCanCauseBleeding = 0x40; // bool
	}

	namespace n_ABP_AK74MGP25_UGL_Smoke_Red_C { // : ABP_AK74MGP25_UGL_Smoke_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UMovieSceneBoolTrack { // : UMovieScenePropertyTrack
		constexpr auto SectionToKey = 0x58; // UMovieSceneSection*
		constexpr auto PropertyName = 0x60; // FName
		constexpr auto PropertyPath = 0x68; // FString
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_UAbilityTask_WaitGameplayTag { // : UAbilityTask
		constexpr auto OptionalExternalTarget = 0x90; // UAbilitySystemComponent*
	}

	namespace n_ABP_L85A2AG36_UGL_HE_C { // : ABP_L85A2AG36_UGL_Parent_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UNavCollisionBase { // : UObject
		constexpr auto bIsDynamicObstacle = 0x28; // char : 1
	}

	namespace n_UVehicleAnimInstance { // : UAnimInstance
		constexpr auto WheeledVehicleMovementComponent = 0x960; // UWheeledVehicleMovementComponent*
	}

	namespace n_USQGridData_CommandOption { // : USQGridData_BaseOption
		constexpr auto CategoryId = 0x60; // char
		constexpr auto CommandActor = 0x68; // ASQCommandActor*
		constexpr auto ControlWidget = 0x70; // UUserWidget*
		constexpr auto EnrouteDuration = 0x78; // float
		constexpr auto ActiveDuration = 0x7c; // float
		constexpr auto CooldownDuration = 0x80; // float
		constexpr auto IconAngleOffset = 0x84; // float
		constexpr auto MaxAngleFromBase = 0x88; // float
		constexpr auto CreateMapMarker = 0x8c; // bool
		constexpr auto bAllowedInVehicle = 0x8d; // bool
		constexpr auto bIgnoreActionEnabled = 0x8e; // bool
		constexpr auto MapMarkerClass = 0x90; // ASQMapMarker*
		constexpr auto CommanderActionSoundsList = 0x98; // FSQCommanderActionSounds
	}

	namespace n_USQNetworkPollingComponent { // : UActorComponent
		constexpr auto RollingPacketLossTime = 0xd8; // float
		constexpr auto TimeoutForFullPacketLoss = 0xdc; // float
	}

	namespace n_UMaterialExpressionObjectOrientation { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UMaterialExpressionTextureSampleParameter { // : UMaterialExpressionTextureSample
		constexpr auto ParameterName = 0xe0; // FName
		constexpr auto ExpressionGUID = 0xe8; // FGuid
		constexpr auto Group = 0xf8; // FName
	}

	namespace n_ASQDeployableVehicle { // : ASQVehicle
		constexpr auto InventoryComponent = 0x820; // USQVehicleInventoryComponent*
		constexpr auto MapIconComponent = 0x828; // USQMapIconComponent*
		constexpr auto VehicleExitPoint = 0x830; // USQVehicleExitPointComponent*
		constexpr auto SwivelMeshComponent = 0x838; // USkeletalMeshComponent*
		constexpr auto GunMountComponent = 0x840; // USceneComponent*
		constexpr auto Camera1pPositionComponent = 0x848; // USceneComponent*
		constexpr auto Camera1pComponent = 0x850; // UCameraComponent*
		constexpr auto Camera3pSpringComponent = 0x858; // USpringArmComponent*
		constexpr auto Camera3pComponent = 0x860; // UCameraComponent*
		constexpr auto bIsInThirdPerson = 0x868; // bool
		constexpr auto OwningDeployable = 0x870; // ASQDeployable*
		constexpr auto YawMovementComponent = 0x878; // USQRotatingMovementComponent*
		constexpr auto PitchMovementComponent = 0x880; // USQRotatingMovementComponent*
	}

	namespace n_USquadVoiceChannel { // : UVoiceChannel
		constexpr auto Connection = 0x28; // UNetConnection*
	}

	namespace n_UMaterialBillboardComponent { // : UPrimitiveComponent
		constexpr auto Elements = 0x408; // TArray<FMaterialSpriteElement>
	}

	namespace n_UMovieSceneFolder { // : UObject
		constexpr auto FolderName = 0x28; // FName
		constexpr auto ChildFolders = 0x30; // TArray<UMovieSceneFolder*>
		constexpr auto ChildMasterTracks = 0x40; // TArray<UMovieSceneTrack*>
		constexpr auto ChildObjectBindingStrings = 0x50; // TArray<FString>
	}

	namespace n_UCollisionProfile { // : UDeveloperSettings
		constexpr auto Profiles = 0x38; // TArray<FCollisionResponseTemplate>
		constexpr auto DefaultChannelResponses = 0x48; // TArray<FCustomChannelSetup>
		constexpr auto EditProfiles = 0x58; // TArray<FCustomProfile>
		constexpr auto ProfileRedirects = 0x68; // TArray<FRedirector>
		constexpr auto CollisionChannelRedirects = 0x78; // TArray<FRedirector>
	}

	namespace n_UAbilityTask_WaitOverlap { // : UAbilityTask
		constexpr auto OnOverlap = 0x80; // FScriptMulticastDelegate
	}

	namespace n_UEnvQueryGenerator_ProjectedPoints { // : UEnvQueryGenerator
		constexpr auto ProjectionData = 0x50; // FEnvTraceData
	}

	namespace n_UParticleModuleSizeMultiplyLife { // : UParticleModuleSizeBase
		constexpr auto LifeMultiplier = 0x30; // FRawDistributionVector
		constexpr auto MultiplyX = 0x80; // char : 1
		constexpr auto MultiplyY = 0x80; // char : 1
		constexpr auto MultiplyZ = 0x80; // char : 1
	}

	namespace n_USQInventoryGroupWidget { // : USQUserWidget
		constexpr auto ItemsArray = 0x230; // TArray<USQInventoryItemWidget*>
		constexpr auto UnselectedGroupPanel = 0x240; // UCanvasPanel*
		constexpr auto ItemWidgetsHorizontalBox = 0x248; // UHorizontalBox*
		constexpr auto UnselectedImage = 0x250; // UImage*
		constexpr auto GroupNumber = 0x258; // UTextBlock*
		constexpr auto GroupImage = 0x260; // UImage*
		constexpr auto ItemNameTextBlock = 0x268; // UTextBlock*
		constexpr auto GroupName = 0x270; // FText
	}

	namespace n_AOnlineBeaconHostObject { // : AActor
		constexpr auto BeaconTypeName = 0x248; // FString
		constexpr auto ClientBeaconActorClass = 0x258; // AOnlineBeaconClient*
		constexpr auto ClientActors = 0x260; // TArray<AOnlineBeaconClient*>
	}

	namespace n_UNavArea_Default { // : UNavArea
		constexpr auto DefaultCost = 0x30; // float
		constexpr auto FixedAreaEnteringCost = 0x34; // float
		constexpr auto DrawColor = 0x38; // FColor
		constexpr auto SupportedAgents = 0x3c; // FNavAgentSelector
		constexpr auto bSupportsAgent0 = 0x40; // char : 1
		constexpr auto bSupportsAgent1 = 0x40; // char : 1
		constexpr auto bSupportsAgent2 = 0x40; // char : 1
		constexpr auto bSupportsAgent3 = 0x40; // char : 1
		constexpr auto bSupportsAgent4 = 0x40; // char : 1
		constexpr auto bSupportsAgent5 = 0x40; // char : 1
		constexpr auto bSupportsAgent6 = 0x40; // char : 1
		constexpr auto bSupportsAgent7 = 0x40; // char : 1
		constexpr auto bSupportsAgent8 = 0x41; // char : 1
		constexpr auto bSupportsAgent9 = 0x41; // char : 1
		constexpr auto bSupportsAgent10 = 0x41; // char : 1
		constexpr auto bSupportsAgent11 = 0x41; // char : 1
		constexpr auto bSupportsAgent12 = 0x41; // char : 1
		constexpr auto bSupportsAgent13 = 0x41; // char : 1
		constexpr auto bSupportsAgent14 = 0x41; // char : 1
		constexpr auto bSupportsAgent15 = 0x41; // char : 1
	}

	namespace n_UFoliageType { // : UObject
		constexpr auto UpdateGuid = 0x28; // FGuid
		constexpr auto Density = 0x38; // float
		constexpr auto DensityAdjustmentFactor = 0x3c; // float
		constexpr auto Radius = 0x40; // float
		constexpr auto Scaling = 0x44; // EFoliageScaling
		constexpr auto ScaleX = 0x48; // FFloatInterval
		constexpr auto ScaleY = 0x50; // FFloatInterval
		constexpr auto ScaleZ = 0x58; // FFloatInterval
		constexpr auto VertexColorMaskByChannel = 0x60; // FFoliageVertexColorChannelMask [0x4]
		constexpr auto VertexColorMask = 0x90; // FoliageVertexColorMask
		constexpr auto VertexColorMaskThreshold = 0x94; // float
		constexpr auto VertexColorMaskInvert = 0x98; // char : 1
		constexpr auto ZOffset = 0x9c; // FFloatInterval
		constexpr auto AlignToNormal = 0xa4; // char : 1
		constexpr auto AlignMaxAngle = 0xa8; // float
		constexpr auto RandomYaw = 0xac; // char : 1
		constexpr auto RandomPitchAngle = 0xb0; // float
		constexpr auto GroundSlopeAngle = 0xb4; // FFloatInterval
		constexpr auto Height = 0xbc; // FFloatInterval
		constexpr auto LandscapeLayers = 0xc8; // TArray<FName>
		constexpr auto LandscapeLayer = 0xd8; // FName
		constexpr auto CollisionWithWorld = 0xe0; // char : 1
		constexpr auto CollisionScale = 0xe4; // FVector
		constexpr auto MinimumLayerWeight = 0xf0; // float
		constexpr auto MeshBounds = 0xf4; // FBoxSphereBounds
		constexpr auto LowBoundOriginRadius = 0x110; // FVector
		constexpr auto Mobility = 0x11c; // EComponentMobility
		constexpr auto CullDistance = 0x120; // FInt32Interval
		constexpr auto bEnableStaticLighting = 0x128; // char : 1
		constexpr auto CastShadow = 0x128; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x128; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x128; // char : 1
		constexpr auto bCastDynamicShadow = 0x128; // char : 1
		constexpr auto bCastStaticShadow = 0x128; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x128; // char : 1
		constexpr auto bReceivesDecals = 0x128; // char : 1
		constexpr auto bOverrideLightMapRes = 0x129; // char : 1
		constexpr auto OverriddenLightMapRes = 0x12c; // int
		constexpr auto LightmapType = 0x130; // ELightmapType
		constexpr auto bUseAsOccluder = 0x134; // char : 1
		constexpr auto BodyInstance = 0x138; // FBodyInstance
		constexpr auto CustomNavigableGeometry = 0x248; // EHasCustomNavigableGeometry
		constexpr auto LightingChannels = 0x249; // FLightingChannels
		constexpr auto bRenderCustomDepth = 0x24c; // char : 1
		constexpr auto CustomDepthStencilValue = 0x250; // int
		constexpr auto TranslucencySortPriority = 0x254; // int
		constexpr auto CollisionRadius = 0x258; // float
		constexpr auto ShadeRadius = 0x25c; // float
		constexpr auto NumSteps = 0x260; // int
		constexpr auto InitialSeedDensity = 0x264; // float
		constexpr auto AverageSpreadDistance = 0x268; // float
		constexpr auto SpreadVariance = 0x26c; // float
		constexpr auto SeedsPerStep = 0x270; // int
		constexpr auto DistributionSeed = 0x274; // int
		constexpr auto MaxInitialSeedOffset = 0x278; // float
		constexpr auto bCanGrowInShade = 0x27c; // bool
		constexpr auto bSpawnsInShade = 0x27d; // bool
		constexpr auto MaxInitialAge = 0x280; // float
		constexpr auto MaxAge = 0x284; // float
		constexpr auto OverlapPriority = 0x288; // float
		constexpr auto ProceduralScale = 0x28c; // FFloatInterval
		constexpr auto ScaleCurve = 0x298; // FRuntimeFloatCurve
		constexpr auto ChangeCount = 0x320; // int
		constexpr auto ReapplyDensity = 0x324; // char : 1
		constexpr auto ReapplyRadius = 0x324; // char : 1
		constexpr auto ReapplyAlignToNormal = 0x324; // char : 1
		constexpr auto ReapplyRandomYaw = 0x324; // char : 1
		constexpr auto ReapplyScaling = 0x324; // char : 1
		constexpr auto ReapplyScaleX = 0x324; // char : 1
		constexpr auto ReapplyScaleY = 0x324; // char : 1
		constexpr auto ReapplyScaleZ = 0x324; // char : 1
		constexpr auto ReapplyRandomPitchAngle = 0x325; // char : 1
		constexpr auto ReapplyGroundSlope = 0x325; // char : 1
		constexpr auto ReapplyHeight = 0x325; // char : 1
		constexpr auto ReapplyLandscapeLayers = 0x325; // char : 1
		constexpr auto ReapplyZOffset = 0x325; // char : 1
		constexpr auto ReapplyCollisionWithWorld = 0x325; // char : 1
		constexpr auto ReapplyVertexColorMask = 0x325; // char : 1
		constexpr auto bEnableDensityScaling = 0x325; // char : 1
		constexpr auto RuntimeVirtualTextures = 0x328; // TArray<URuntimeVirtualTexture*>
		constexpr auto VirtualTextureCullMips = 0x338; // int
		constexpr auto VirtualTextureRenderPassType = 0x33c; // ERuntimeVirtualTextureMainPassType
	}

	namespace n_UClothingAsset { // : UClothingAssetBase
		constexpr auto PhysicsAsset = 0x48; // UPhysicsAsset*
		constexpr auto ClothConfig = 0x50; // FClothConfig
		constexpr auto LODData = 0x128; // TArray<FClothLODData>
		constexpr auto LodMap = 0x138; // TArray<int>
		constexpr auto UsedBoneNames = 0x148; // TArray<FName>
		constexpr auto UsedBoneIndices = 0x158; // TArray<int>
		constexpr auto ReferenceBoneIndex = 0x168; // int
		constexpr auto customData = 0x170; // UClothingAssetCustomData*
	}

	namespace n_ABP_LastingEffect_RpgHEAT_C { // : ASQLastingEffect
		constexpr auto ParticleSystem = 0x248; // UParticleSystemComponent*
		constexpr auto Audio = 0x250; // UAudioComponent*
		constexpr auto ShockwaveEffect = 0x258; // USQShockwave*
		constexpr auto TimeToFireTriggerLastingEffectEventAfterBeginPlay = 0x260; // float
		constexpr auto TimeToLiveAfterBeginPlay = 0x264; // float
		constexpr auto TimeToLiveAfterTriggerLastingEffect = 0x268; // float
		constexpr auto bListenForOnActorHitEvents = 0x26c; // bool
		constexpr auto bListenForOnDestroyedEvents = 0x26d; // bool
		constexpr auto bActivateParticleSystemUponBeginPlay = 0x26e; // bool
		constexpr auto bActivateParticleSystemUponTriggerLastingEffect = 0x26f; // bool
		constexpr auto bActivateAudioUponBeginPlay = 0x270; // bool
		constexpr auto bActivateAudioUponTriggerLastingEffect = 0x271; // bool
		constexpr auto bActivateShockwaveUponBeginPlay = 0x272; // bool
		constexpr auto bActivateShockwaveUponTriggerLastingEffect = 0x273; // bool
		constexpr auto bDetachFromActorUponTriggerLastingEffect = 0x274; // bool
		constexpr auto bDeactivateParticleSystemUponTriggerLastingEffect = 0x275; // bool
		constexpr auto bDeactivateParticleSystemUponTriggerLastingEffectTimerExpired = 0x276; // bool
		constexpr auto bDeactivateAudioUponTriggerLastingEffectTimerExpired = 0x277; // bool
		constexpr auto bDestroyUponTriggerLastingEffectTimerExpired = 0x278; // bool
		constexpr auto bDrawDebugSphere = 0x279; // bool
		constexpr auto DebugSphereRadius = 0x27c; // float
		constexpr auto DebugSphereSegments = 0x280; // int
		constexpr auto DebugSphereColor = 0x284; // FColor
	}

	namespace n_UMaterialExpressionSign { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UL85A2AG36_UGL_Skeleton_AnimBlueprint_Skeleton_AnimBlueprint_C { // : USQWeaponAnimInstance
		constexpr auto UberGraphFrame = 0x2b0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root_607360774A7E077065C59E8E533AAC93 = 0x2b8; // FAnimNode_Root
		constexpr auto AnimGraphNode_LayeredBoneBlend_2E4B03A74A5F91C1A6F7DFADE7FC29F5 = 0x2e8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_Slot_0EFF9C2C463A96AFC210F8A9EB4D77A0 = 0x3a8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_2D6527F049D5A071A255BC95F0471321 = 0x3f0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_43149CEF44CCA55C4408B9ACA9362626 = 0x438; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SequencePlayer_268FDE4848BCFC9BA5C81EB799718BB6 = 0x480; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_58C50C5C4AC58CE1D2DCC9B288D9DB92 = 0x4f8; // FAnimNode_SequencePlayer
	}

	namespace n_ABP_AK74MGP25_UGL_Parent_C { // : ABP_AK74GP25_UGL_Parent_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_ABP_AK74M_Tracer_C { // : ABP_AK74M_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UTilePointer { // : UObject
		constexpr auto TileRT = 0x28; // UTextureRenderTarget2D*
		constexpr auto TileTexture = 0x30; // UTexture2D*
		constexpr auto NameUTile = 0x38; // FString
		constexpr auto TileWidth = 0x48; // uint16
		constexpr auto TileHeight = 0x4a; // uint16
		constexpr auto TilePadding = 0x4c; // FVector2D
		constexpr auto TileDatabase = 0x58; // FTileDatabase
		constexpr auto TileBinPack = 0xa8; // TArray<UTilePointer*>
		constexpr auto TileData = 0xb8; // TArray<FColor>
		constexpr auto TileDimension = 0xc8; // uint32
	}

	namespace n_USSGS_ScreenDataSpecificationStatic { // : USSGS_ScreenDataSpecification
		constexpr auto datas = 0x30; // TArray<FSSGS_FrameData>
	}

	namespace n_UInterpTrackSound { // : UInterpTrackVectorBase
		constexpr auto Sounds = 0x90; // TArray<FSoundTrackKey>
		constexpr auto bPlayOnReverse = 0xa0; // char : 1
		constexpr auto bContinueSoundOnMatineeEnd = 0xa0; // char : 1
		constexpr auto bSuppressSubtitles = 0xa0; // char : 1
		constexpr auto bTreatAsDialogue = 0xa0; // char : 1
		constexpr auto bAttach = 0xa0; // char : 1
	}

	namespace n_UAbilityTask_WaitConfirmCancel { // : UAbilityTask
		constexpr auto OnConfirm = 0x80; // FScriptMulticastDelegate
		constexpr auto OnCancel = 0x90; // FScriptMulticastDelegate
	}

	namespace n_UFXSystemComponent { // : UPrimitiveComponent
		constexpr auto MinDrawDistance = 0x220; // float
		constexpr auto LDMaxDrawDistance = 0x224; // float
		constexpr auto CachedMaxDrawDistance = 0x228; // float
		constexpr auto DepthPriorityGroup = 0x22c; // ESceneDepthPriorityGroup
		constexpr auto ViewOwnerDepthPriorityGroup = 0x22d; // ESceneDepthPriorityGroup
		constexpr auto IndirectLightingCacheQuality = 0x22e; // EIndirectLightingCacheQuality
		constexpr auto LightmapType = 0x22f; // ELightmapType
		constexpr auto bUseMaxLODAsImposter = 0x230; // char : 1
		constexpr auto bNeverDistanceCull = 0x230; // char : 1
		constexpr auto bAlwaysCreatePhysicsState = 0x230; // char : 1
		constexpr auto bGenerateOverlapEvents = 0x230; // char : 1
		constexpr auto bGenerateLocalOverlapEvents = 0x231; // char : 1
		constexpr auto bMultiBodyOverlap = 0x231; // char : 1
		constexpr auto bTraceComplexOnMove = 0x231; // char : 1
		constexpr auto bReturnMaterialOnMove = 0x231; // char : 1
		constexpr auto bUseViewOwnerDepthPriorityGroup = 0x231; // char : 1
		constexpr auto bAllowCullDistanceVolume = 0x231; // char : 1
		constexpr auto bHasMotionBlurVelocityMeshes = 0x231; // char : 1
		constexpr auto bVisibleInReflectionCaptures = 0x232; // char : 1
		constexpr auto bVisibleInRayTracing = 0x232; // char : 1
		constexpr auto bRenderInMainPass = 0x232; // char : 1
		constexpr auto bReceivesDecals = 0x232; // char : 1
		constexpr auto bOwnerNoSee = 0x232; // char : 1
		constexpr auto bOnlyOwnerSee = 0x232; // char : 1
		constexpr auto bTreatAsBackgroundForOcclusion = 0x232; // char : 1
		constexpr auto bUseAsOccluder = 0x232; // char : 1
		constexpr auto bSelectable = 0x233; // char : 1
		constexpr auto bForceMipStreaming = 0x233; // char : 1
		constexpr auto bHasPerInstanceHitProxies = 0x233; // char : 1
		constexpr auto CastShadow = 0x233; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x233; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x233; // char : 1
		constexpr auto bCastDynamicShadow = 0x233; // char : 1
		constexpr auto bCastStaticShadow = 0x233; // char : 1
		constexpr auto bCastVolumetricTranslucentShadow = 0x234; // char : 1
		constexpr auto bSelfShadowOnly = 0x234; // char : 1
		constexpr auto bCastFarShadow = 0x234; // char : 1
		constexpr auto bCastInsetShadow = 0x234; // char : 1
		constexpr auto bCastCinematicShadow = 0x234; // char : 1
		constexpr auto bCastHiddenShadow = 0x234; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x234; // char : 1
		constexpr auto bLightAsIfStatic = 0x234; // char : 1
		constexpr auto bLightAttachmentsAsGroup = 0x235; // char : 1
		constexpr auto bReceiveMobileCSMShadows = 0x235; // char : 1
		constexpr auto bSingleSampleShadowFromStationaryLights = 0x235; // char : 1
		constexpr auto bIgnoreRadialImpulse = 0x235; // char : 1
		constexpr auto bIgnoreRadialForce = 0x235; // char : 1
		constexpr auto bApplyImpulseOnDamage = 0x235; // char : 1
		constexpr auto bReplicatePhysicsToAutonomousProxy = 0x235; // char : 1
		constexpr auto AlwaysLoadOnClient = 0x235; // char : 1
		constexpr auto AlwaysLoadOnServer = 0x236; // char : 1
		constexpr auto bUseEditorCompositing = 0x236; // char : 1
		constexpr auto bRenderCustomDepth = 0x236; // char : 1
		constexpr auto bHasCustomNavigableGeometry = 0x237; // EHasCustomNavigableGeometry
		constexpr auto CanCharacterStepUpOn = 0x239; // ECanBeCharacterBase
		constexpr auto LightingChannels = 0x23a; // FLightingChannels
		constexpr auto CustomDepthStencilWriteMask = 0x23b; // ERendererStencilMask
		constexpr auto CustomDepthStencilValue = 0x23c; // int
		constexpr auto CustomPrimitiveData = 0x240; // FCustomPrimitiveData
		constexpr auto TranslucencySortPriority = 0x250; // int
		constexpr auto VisibilityId = 0x254; // int
		constexpr auto RuntimeVirtualTextures = 0x258; // TArray<URuntimeVirtualTexture*>
		constexpr auto VirtualTextureLodBias = 0x268; // int
		constexpr auto VirtualTextureCullMips = 0x26c; // int
		constexpr auto VirtualTextureMinCoverage = 0x270; // int
		constexpr auto VirtualTextureRenderPassType = 0x274; // ERuntimeVirtualTextureMainPassType
		constexpr auto LpvBiasMultiplier = 0x27c; // float
		constexpr auto BoundsScale = 0x288; // float
		constexpr auto MoveIgnoreActors = 0x298; // TArray<AActor*>
		constexpr auto MoveIgnoreComponents = 0x2a8; // TArray<UPrimitiveComponent*>
		constexpr auto BodyInstance = 0x2c8; // FBodyInstance
		constexpr auto OnComponentHit = 0x3d8; // FScriptMulticastDelegate
		constexpr auto OnComponentBeginOverlap = 0x3d9; // FScriptMulticastDelegate
		constexpr auto OnComponentEndOverlap = 0x3da; // FScriptMulticastDelegate
		constexpr auto OnComponentWake = 0x3db; // FScriptMulticastDelegate
		constexpr auto OnComponentSleep = 0x3dc; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x3de; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x3df; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x3e0; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x3e1; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x3e2; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x3e3; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x3e4; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x3e5; // FScriptMulticastDelegate
		constexpr auto LODParentPrimitive = 0x400; // UPrimitiveComponent*
	}

	namespace n_USQSoldierMovement { // : UCharacterMovementComponent
		constexpr auto SoldierDefaultInclineMovementSpeedCurve = 0x730; // UCurveFloat*
		constexpr auto WalkSpeedMultiplier = 0x738; // float
		constexpr auto StrafeSpeedMultiplier = 0x73c; // float
		constexpr auto LeaningStandSpeedMultiplier = 0x740; // float
		constexpr auto LeaningCrouchSpeedMultiplier = 0x744; // float
		constexpr auto BackwardsWalkSpeedMultiplier = 0x748; // float
		constexpr auto DraggingSpeedMultiplier = 0x74c; // float
		constexpr auto OutsidePhysicsSpeedMultiplier = 0x750; // float
		constexpr auto AnimationSpeedLimiter = 0x754; // float
		constexpr auto SprintSpeedMultiplier = 0x758; // float
		constexpr auto MaxSprintAcceleration = 0x75c; // float
		constexpr auto WasRunning = 0x760; // bool
		constexpr auto MaxWalkSpeedProne = 0x764; // float
		constexpr auto ProneHalfHeight = 0x768; // float
		constexpr auto bCanWalkOffLedgesWhenProne = 0x76c; // char : 1
		constexpr auto bCanSprintWhenCrouched = 0x76c; // char : 1
		constexpr auto bWantsToProne = 0x76c; // char : 1
		constexpr auto bProneMaintainsBaseLocation = 0x76c; // char : 1
		constexpr auto StickyGroundMultiplier = 0x770; // float
		constexpr auto Stamina = 0x774; // float
		constexpr auto StaminaMax = 0x778; // float
		constexpr auto TiredThreshold = 0x77c; // float
		constexpr auto ExhaustedThreshold = 0x780; // float
		constexpr auto ExhaustedPenalty = 0x784; // float
		constexpr auto bStaminaExhausted = 0x788; // bool
		constexpr auto StaminaRegenRate = 0x78c; // float
		constexpr auto HurtStaminaRegenRate = 0x790; // float
		constexpr auto bIsHurt = 0x794; // bool
		constexpr auto UpdateStaminaFrequency = 0x798; // float
		constexpr auto StaminaUpdateTimerHandle = 0x7a0; // FTimerHandle
		constexpr auto WalkPenalty = 0x7a8; // float
		constexpr auto ClimbingPenalty = 0x7ac; // float
		constexpr auto MovePenalty = 0x7b0; // float
		constexpr auto SprintPenalty = 0x7b4; // float
		constexpr auto CrouchPenalty = 0x7b8; // float
		constexpr auto CrouchSprintPenalty = 0x7bc; // float
		constexpr auto PronePenalty = 0x7c0; // float
		constexpr auto ProneSprintPenalty = 0x7c4; // float
		constexpr auto DraggingPenalty = 0x7c8; // float
		constexpr auto StandLeanPenalty = 0x7cc; // float
		constexpr auto CrouchLeanPenalty = 0x7d0; // float
		constexpr auto BurstLeanPenalty = 0x7d4; // float
		constexpr auto StandStaminaRegenMultiplier = 0x7d8; // float
		constexpr auto CrouchStaminaRegenMultiplier = 0x7dc; // float
		constexpr auto ProneStaminaRegenMultiplier = 0x7e0; // float
		constexpr auto bLimitConsecutiveJumping = 0x7e8; // char : 1
		constexpr auto ConsecutiveJumpingPenaltyReductionTime = 0x7ec; // float
		constexpr auto ConsecutiveJumpingVelocityMultipliers = 0x7f0; // TArray<float>
		constexpr auto ConsecutiveJumpingArrayIndex = 0x800; // int
		constexpr auto LastJumpPenaltyChangeTime = 0x804; // float
		constexpr auto bStaminaLimitsRunning = 0x808; // char : 1
		constexpr auto bStaminaLimitsJumping = 0x808; // char : 1
		constexpr auto StaminaUseThreshold = 0x80c; // float
		constexpr auto bJumpingUsesStamina = 0x810; // char : 1
		constexpr auto StaminaLossPerJump = 0x814; // float
		constexpr auto ClimbMovePath = 0x820; // TArray<FVector>
		constexpr auto ClimbInterpolationTimes = 0x830; // TArray<float>
		constexpr auto BipodMaxAnglePerIteration = 0x840; // float
		constexpr auto SquadCharacterOwner = 0x858; // ASQSoldier*
		constexpr auto ServerUpdateRate = 0x860; // int
		constexpr auto NonRenderedUpdateRate = 0x864; // int
		constexpr auto NearByNonRenderedUpdateRate = 0x868; // int
		constexpr auto NearByNonRenderedUpdateRateDistance = 0x86c; // int
		constexpr auto DistanceFactorThesholds = 0x870; // TArray<float>
		constexpr auto SkinnedComponents = 0x880; // TArray<USkinnedMeshComponent*>
		constexpr auto bAimDownSights = 0x898; // char : 1
	}

	namespace n_ASQWheeledVehicleBase { // : ASQGroundVehicle
		constexpr auto DamagedDampingRateMultiplier = 0xa20; // float
		constexpr auto DampingRateMultiplier = 0xa24; // float
	}

	namespace n_UAnimCompress_RemoveEverySecondKey { // : UAnimCompress
		constexpr auto MinKeys = 0x50; // int
		constexpr auto bStartAtSecondKey = 0x54; // char : 1
	}

	namespace n_UTexture2DDynamic { // : UTexture
		constexpr auto Format = 0xd8; // EPixelFormat
	}

	namespace n_AController { // : AActor
		constexpr auto PlayerState = 0x250; // APlayerState*
		constexpr auto OnInstigatedAnyDamage = 0x260; // FScriptMulticastDelegate
		constexpr auto StateName = 0x270; // FName
		constexpr auto Pawn = 0x278; // APawn*
		constexpr auto Character = 0x288; // ACharacter*
		constexpr auto TransformComponent = 0x290; // USceneComponent*
		constexpr auto ControlRotation = 0x2b0; // FRotator
		constexpr auto bAttachToPawn = 0x2bc; // char : 1
	}

	namespace n_UGameInstance { // : UObject
		constexpr auto LocalPlayers = 0x38; // TArray<ULocalPlayer*>
		constexpr auto OnlineSession = 0x48; // UOnlineSession*
		constexpr auto ReferencedObjects = 0x50; // TArray<UObject*>
	}

	namespace n_ABP_L85A2_SUSAT_4mags_C { // : ABP_L85A2_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
		constexpr auto Scope = 0x7b8; // UStaticMeshComponent*
	}

	namespace n_UBuildPatchManifest { // : UObject
		constexpr auto ManifestFileVersion = 0x28; // char
		constexpr auto bIsFileData = 0x29; // bool
		constexpr auto AppID = 0x2c; // uint32
		constexpr auto AppName = 0x30; // FString
		constexpr auto BuildVersion = 0x40; // FString
		constexpr auto LaunchExe = 0x50; // FString
		constexpr auto LaunchCommand = 0x60; // FString
		constexpr auto PrereqIds = 0x70; // TSet<FString>
		constexpr auto PrereqName = 0xc0; // FString
		constexpr auto PrereqPath = 0xd0; // FString
		constexpr auto PrereqArgs = 0xe0; // FString
		constexpr auto FileManifestList = 0xf0; // TArray<FFileManifestData>
		constexpr auto ChunkList = 0x100; // TArray<FChunkInfoData>
		constexpr auto CustomFields = 0x110; // TArray<FCustomFieldData>
	}

	namespace n_ULandscapeMeshProxyComponent { // : UStaticMeshComponent
		constexpr auto LandscapeGuid = 0x498; // FGuid
		constexpr auto ProxyComponentBases = 0x4a8; // TArray<FIntPoint>
		constexpr auto ProxyLOD = 0x4b8; // uint8
	}

	namespace n_UAimOffsetBlendSpace1D { // : UBlendSpace1D
		constexpr auto bScaleAnimation = 0x148; // bool
	}

	namespace n_UPlatformInterfaceBase { // : UObject
		constexpr auto AllDelegates = 0x28; // TArray<FDelegateArray>
	}

	namespace n_USubUVAnimation { // : UObject
		constexpr auto SubUVTexture = 0x28; // UTexture2D*
		constexpr auto SubImages_Horizontal = 0x30; // int
		constexpr auto SubImages_Vertical = 0x34; // int
		constexpr auto BoundingMode = 0x38; // ESubUVBoundingVertexCount
		constexpr auto OpacitySourceMode = 0x39; // EOpacitySourceMode
		constexpr auto AlphaThreshold = 0x3c; // float
	}

	namespace n_UGameplayEffectCalculation { // : UObject
		constexpr auto RelevantAttributesToCapture = 0x28; // TArray<FGameplayEffectAttributeCaptureDefinition>
	}

	namespace n_ABP_Projectile_Melee_C { // : ABP_Projectile_C
		constexpr auto UberGraphFrame = 0x4a0; // FPointerToUberGraphFrame
	}

	namespace n_ABP_M4M203_Rifle_M68_C { // : ABP_M4M203_Rifle_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_USoundMix { // : UObject
		constexpr auto bApplyEQ = 0x28; // char : 1
		constexpr auto EQPriority = 0x2c; // float
		constexpr auto EQSettings = 0x30; // FAudioEQEffect
		constexpr auto SoundClassEffects = 0x68; // TArray<FSoundClassAdjuster>
		constexpr auto InitialDelay = 0x78; // float
		constexpr auto FadeInTime = 0x7c; // float
		constexpr auto Duration = 0x80; // float
		constexpr auto FadeOutTime = 0x84; // float
	}

	namespace n_URichTextBlock { // : UTextLayoutWidget
		constexpr auto Text = 0x128; // FText
		constexpr auto TextStyleSet = 0x140; // UDataTable*
		constexpr auto DecoratorClasses = 0x148; // TArray<URichTextBlockDecorator*>
		constexpr auto bOverrideDefaultStyle = 0x158; // bool
		constexpr auto DefaultTextStyleOverride = 0x160; // FTextBlockStyle
		constexpr auto MinDesiredWidth = 0x3c8; // float
		constexpr auto InstanceDecorators = 0x638; // TArray<URichTextBlockDecorator*>
	}

	namespace n_UMaterialExpressionActorPositionWS { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_USQRadialIconToggleButton { // : USQRadialIconButton
		constexpr auto bToggled = 0x410; // bool
		constexpr auto InnerHoverToggledColor = 0x414; // FLinearColor
	}

	namespace n_UAsyncActionChangePrimaryAssetBundles { // : UAsyncActionLoadPrimaryAssetBase
		constexpr auto Completed = 0x78; // FScriptMulticastDelegate
	}

	namespace n_ABP_L85A2_DarkEarth_Foregrip_Tracer_C { // : ABP_L85A2_DarkEarth_Foregrip_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UMaterialExpressionDepthFade { // : UMaterialExpression
		constexpr auto InOpacity = 0x40; // FExpressionInput
		constexpr auto FadeDistance = 0x54; // FExpressionInput
		constexpr auto OpacityDefault = 0x68; // float
		constexpr auto FadeDistanceDefault = 0x6c; // float
	}

	namespace n_UMaterialExpressionRotateAboutAxis { // : UMaterialExpression
		constexpr auto NormalizedRotationAxis = 0x40; // FExpressionInput
		constexpr auto RotationAngle = 0x54; // FExpressionInput
		constexpr auto PivotPoint = 0x68; // FExpressionInput
		constexpr auto Position = 0x7c; // FExpressionInput
		constexpr auto Period = 0x90; // float
	}

	namespace n_UCanvas { // : UObject
		constexpr auto OrgX = 0x28; // float
		constexpr auto OrgY = 0x2c; // float
		constexpr auto ClipX = 0x30; // float
		constexpr auto ClipY = 0x34; // float
		constexpr auto DrawColor = 0x38; // FColor
		constexpr auto bCenterX = 0x3c; // char : 1
		constexpr auto bCenterY = 0x3c; // char : 1
		constexpr auto bNoSmooth = 0x3c; // char : 1
		constexpr auto SizeX = 0x40; // int
		constexpr auto SizeY = 0x44; // int
		constexpr auto ColorModulate = 0x50; // FPlane
		constexpr auto DefaultTexture = 0x60; // UTexture2D*
		constexpr auto GradientTexture0 = 0x68; // UTexture2D*
		constexpr auto ReporterGraph = 0x70; // UReporterGraph*
	}

	namespace n_USQScoreboardSquad { // : USQUserWidget
		constexpr auto SQPC = 0x230; // ASQPlayerController*
		constexpr auto SquadState = 0x238; // ASQSquadState*
		constexpr auto DisplayedPlayers = 0x240; // TArray<FPlayerWidgetPair>
		constexpr auto bShowAllStats = 0x250; // bool
		constexpr auto bUseAccumulativeLifetimeScores = 0x251; // bool
		constexpr auto OwnSquadColor = 0x254; // FLinearColor
		constexpr auto FriendlySquadColor = 0x264; // FLinearColor
		constexpr auto EnemySquadColor = 0x274; // FLinearColor
		constexpr auto bIsFriendlyScoreboard = 0x284; // bool
		constexpr auto ScoreboardPlayerType = 0x288; // USQScoreboardPlayer*
		constexpr auto EndOfRoundHorizontalBox = 0x290; // UHorizontalBox*
		constexpr auto PlayersGrid = 0x298; // UGridPanel*
		constexpr auto NotEndOfRoundSpacer = 0x2a0; // USpacer*
		constexpr auto SquadNumberText = 0x2a8; // UTextBlock*
		constexpr auto SquadNameText = 0x2b0; // UTextBlock*
		constexpr auto SquadKillsText = 0x2b8; // UTextBlock*
		constexpr auto SquadIncapsText = 0x2c0; // UTextBlock*
		constexpr auto SquadDeathsText = 0x2c8; // UTextBlock*
		constexpr auto SquadRevivesText = 0x2d0; // UTextBlock*
		constexpr auto SquadHealsText = 0x2d8; // UTextBlock*
		constexpr auto SquadTeamworkText = 0x2e0; // UTextBlock*
		constexpr auto SquadObjectiveText = 0x2e8; // UTextBlock*
		constexpr auto SquadScoreText = 0x2f0; // UTextBlock*
		constexpr auto SquadColorImage = 0x2f8; // UImage*
		constexpr auto SquadTalkingImage = 0x300; // UImage*
	}

	namespace n_AProceduralFoliageBlockingVolume { // : AVolume
		constexpr auto ProceduralFoliageVolume = 0x280; // AProceduralFoliageVolume*
	}

	namespace n_UAnimClassData { // : UObject
		constexpr auto BakedStateMachines = 0x30; // TArray<FBakedAnimationStateMachine>
		constexpr auto TargetSkeleton = 0x40; // USkeleton*
		constexpr auto AnimNotifies = 0x48; // TArray<FAnimNotifyEvent>
		constexpr auto OrderedSavedPoseIndicesMap = 0x58; // TMap<FName, FCachedPoseIndices>
		constexpr auto AnimBlueprintFunctions = 0xa8; // TArray<FAnimBlueprintFunction>
		constexpr auto AnimNodeProperties = 0xb8; // TArray<UStructProperty*>
		constexpr auto SubInstanceNodeProperties = 0xc8; // TArray<UStructProperty*>
		constexpr auto LayerNodeProperties = 0xd8; // TArray<UStructProperty*>
		constexpr auto SyncGroupNames = 0xe8; // TArray<FName>
		constexpr auto EvaluateGraphExposedInputs = 0xf8; // TArray<FExposedValueHandler>
	}

	namespace n_UMovieSceneEventRepeaterSection { // : UMovieSceneEventSectionBase
		constexpr auto Event = 0xe0; // FMovieSceneEvent
	}

	namespace n_ABP_M4M203_UGL_Smoke_Red_C { // : ABP_M4M203_UGL_Smoke_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_USQGameEngine { // : UGameEngine
		constexpr auto SquadConfig = 0xe08; // USQConfig*
	}

	namespace n_ASQDeployableTripodVehicle { // : ASQDeployableVehicle
		constexpr auto AdsCamera1pPositionComponent = 0x888; // USceneComponent*
	}

	namespace n_ASQDeployableInteractable { // : ASQDeployableItem
		constexpr auto InstigatingPlayerController = 0x410; // ASQPlayerController*
		constexpr auto InstigatingPlayerState = 0x418; // ASQPlayerState*
		constexpr auto MaxAllowedPerPlayerInGame = 0x420; // int
		constexpr auto TrackDeployableOverMaxResult = 0x424; // ESQTrackDeployableResult
		constexpr auto EquippableInstigatorClass = 0x428; // ASQEquipableItem*
	}

	namespace n_UPlatformMediaSource { // : UMediaSource
		constexpr auto MediaSource = 0x30; // UMediaSource*
	}

	namespace n_USQVehicleViewWidget { // : USQUserWidget
		constexpr auto ZoomImages = 0x230; // TArray<UImage*>
		constexpr auto CurrentZoomIndex = 0x240; // int
		constexpr auto IgnoredShakeClasses = 0x248; // TArray<UCameraShake*>
	}

	namespace n_UAbilityTask_StartAbilityState { // : UAbilityTask
		constexpr auto OnStateEnded = 0x80; // FScriptMulticastDelegate
		constexpr auto OnStateInterrupted = 0x90; // FScriptMulticastDelegate
	}

	namespace n_UParticleModuleVelocityBase { // : UParticleModule
		constexpr auto bInWorldSpace = 0x30; // char : 1
		constexpr auto bApplyOwnerScale = 0x30; // char : 1
	}

	namespace n_USoundConcurrency { // : UObject
		constexpr auto Concurrency = 0x28; // FSoundConcurrencySettings
	}

	namespace n_UBP_BasicHeatDamageType_C { // : USQDamageType
		constexpr auto bCanCauseBleeding = 0x40; // bool
	}

	namespace n_UInterpTrackInstFloatAnimBPParam { // : UInterpTrackInst
		constexpr auto AnimScriptInstance = 0x28; // UAnimInstance*
		constexpr auto ResetFloat = 0x30; // float
	}

	namespace n_UEnvQueryTest_PathfindingBatch { // : UEnvQueryTest_Pathfinding
		constexpr auto ScanRangeMultiplier = 0x238; // FAIDataProviderFloatValue
	}

	namespace n_ADefaultPawn { // : APawn
		constexpr auto BaseTurnRate = 0x2a8; // float
		constexpr auto BaseLookUpRate = 0x2ac; // float
		constexpr auto MovementComponent = 0x2b0; // UPawnMovementComponent*
		constexpr auto CollisionComponent = 0x2b8; // USphereComponent*
		constexpr auto MeshComponent = 0x2c0; // UStaticMeshComponent*
		constexpr auto bAddDefaultMovementBindings = 0x2c8; // char : 1
	}

	namespace n_UParticleModuleAttractorParticle { // : UParticleModuleAttractorBase
		constexpr auto EmitterName = 0x30; // FName
		constexpr auto Range = 0x38; // FRawDistributionFloat
		constexpr auto bStrengthByDistance = 0x70; // char : 1
		constexpr auto Strength = 0x78; // FRawDistributionFloat
		constexpr auto bAffectBaseVelocity = 0xb0; // char : 1
		constexpr auto SelectionMethod = 0xb4; // EAttractorParticleSelectionMethod
		constexpr auto bRenewSource = 0xb8; // char : 1
		constexpr auto bInheritSourceVel = 0xb8; // char : 1
		constexpr auto LastSelIndex = 0xbc; // int
	}

	namespace n_UMultiLineEditableTextBox { // : UTextLayoutWidget
		constexpr auto Text = 0x128; // FText
		constexpr auto HintText = 0x140; // FText
		constexpr auto HintTextDelegate = 0x158; // DelegateProperty
		constexpr auto WidgetStyle = 0x168; // FEditableTextBoxStyle
		constexpr auto TextStyle = 0x958; // FTextBlockStyle
		constexpr auto bIsReadOnly = 0xbc0; // bool
		constexpr auto AllowContextMenu = 0xbc1; // bool
		constexpr auto VirtualKeyboardOptions = 0xbc2; // FVirtualKeyboardOptions
		constexpr auto VirtualKeyboardDismissAction = 0xbc3; // EVirtualKeyboardDismissAction
		constexpr auto Style = 0xbc8; // USlateWidgetStyleAsset*
		constexpr auto Font = 0xbd0; // FSlateFontInfo
		constexpr auto ForegroundColor = 0xc20; // FLinearColor
		constexpr auto BackgroundColor = 0xc30; // FLinearColor
		constexpr auto ReadOnlyForegroundColor = 0xc40; // FLinearColor
		constexpr auto OnTextChanged = 0xc50; // FScriptMulticastDelegate
		constexpr auto OnTextCommitted = 0xc60; // FScriptMulticastDelegate
	}

	namespace n_UM4M203_UGL_Skeleton_AnimBlueprint_C { // : USQWeaponAnimInstance
		constexpr auto UberGraphFrame = 0x2b0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root_A5DA3A2D41272C408240AFBC21242F96 = 0x2b8; // FAnimNode_Root
		constexpr auto AnimGraphNode_LayeredBoneBlend_108AC6484E23052C43CD249C697A3716 = 0x2e8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_74B9493B4723CE0E7D775CB49FD1AAA9 = 0x3a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot_EC71264B4935EBD7C7E5DCA4AF790395 = 0x420; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_B749BD224A77ADFC8C342AA19B90E7CA = 0x468; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_210093224A609FAE79ABAEAC97C1BE8B = 0x4b0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_ModifyBone_316B4F6F41DF4916B94409B19664C5CB = 0x4f8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_E604F74B4A72166BEE2328AA8FFA4285 = 0x600; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_D057CE2D40CA064150A19BB5F321B1AB = 0x620; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_SequencePlayer_CF3F7B3742ED288361AC1B8BBE33CE17 = 0x640; // FAnimNode_SequencePlayer
	}

	namespace n_UHighlightsGetNumberAsync { // : UBlueprintAsyncActionBase
		constexpr auto OnSuccess = 0x30; // FScriptMulticastDelegate
		constexpr auto OnFailure = 0x40; // FScriptMulticastDelegate
	}

	namespace n_UPlayMontageCallbackProxy { // : UObject
		constexpr auto OnCompleted = 0x28; // FScriptMulticastDelegate
		constexpr auto OnBlendOut = 0x38; // FScriptMulticastDelegate
		constexpr auto OnInterrupted = 0x48; // FScriptMulticastDelegate
		constexpr auto OnNotifyBegin = 0x58; // FScriptMulticastDelegate
		constexpr auto OnNotifyEnd = 0x68; // FScriptMulticastDelegate
	}

	namespace n_UAudioCurveSourceComponent { // : UAudioComponent
		constexpr auto CurveSourceBindingName = 0x738; // FName
		constexpr auto CurveSyncOffset = 0x740; // float
	}

	namespace n_UCreateSessionCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto OnFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_UMaterialExpression { // : UObject
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UAssetExportTask { // : UObject
		constexpr auto Object = 0x28; // UObject*
		constexpr auto Exporter = 0x30; // UExporter*
		constexpr auto Filename = 0x38; // FString
		constexpr auto bSelected = 0x48; // bool
		constexpr auto bReplaceIdentical = 0x49; // bool
		constexpr auto bPrompt = 0x4a; // bool
		constexpr auto bAutomated = 0x4b; // bool
		constexpr auto bUseFileArchive = 0x4c; // bool
		constexpr auto bWriteEmptyFiles = 0x4d; // bool
		constexpr auto IgnoreObjectList = 0x50; // TArray<UObject*>
		constexpr auto Options = 0x60; // UObject*
		constexpr auto Errors = 0x68; // TArray<FString>
	}

	namespace n_USQItemAnimInstance { // : USQAnimInstance
		constexpr auto bPlay1PAnimNotifiesWhenInFirstPerson = 0x290; // bool
		constexpr auto bPlay3PAnimNotifiesWhenInFirstPerson = 0x291; // bool
	}

	namespace n_UMaterialExpressionSpeedTree { // : UMaterialExpression
		constexpr auto GeometryInput = 0x40; // FExpressionInput
		constexpr auto WindInput = 0x54; // FExpressionInput
		constexpr auto LODInput = 0x68; // FExpressionInput
		constexpr auto ExtraBendWS = 0x7c; // FExpressionInput
		constexpr auto GeometryType = 0x90; // ESpeedTreeGeometryType
		constexpr auto WindType = 0x91; // ESpeedTreeWindType
		constexpr auto LODType = 0x92; // ESpeedTreeLODType
		constexpr auto BillboardThreshold = 0x94; // float
		constexpr auto bAccurateWindVelocities = 0x98; // bool
	}

	namespace n_USoundNodeQualityLevel { // : USoundNode
		constexpr auto ChildNodes = 0x28; // TArray<USoundNode*>
	}

	namespace n_UMaterialExpressionFloor { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UScrollBoxWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto ScrollBoxStyle = 0x30; // FScrollBoxStyle
	}

	namespace n_UMovieSceneSpawnTrack { // : UMovieSceneTrack
		constexpr auto Sections = 0x58; // TArray<UMovieSceneSection*>
		constexpr auto ObjectGuid = 0x68; // FGuid
	}

	namespace n_ABP_M4_M68_4Mags_Founders_C { // : ABP_M4_M68_4Mags_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UBTDecorator_BlackboardBase { // : UBTDecorator
		constexpr auto BlackboardKey = 0x68; // FBlackboardKeySelector
	}

	namespace n_UFireShake_Large_C { // : UCameraShake
		constexpr auto bSingleInstance = 0x28; // char : 1
		constexpr auto OscillationDuration = 0x2c; // float
		constexpr auto OscillationBlendInTime = 0x30; // float
		constexpr auto OscillationBlendOutTime = 0x34; // float
		constexpr auto RotOscillation = 0x38; // FROscillator
		constexpr auto LocOscillation = 0x5c; // FVOscillator
		constexpr auto FOVOscillation = 0x80; // FFOscillator
		constexpr auto AnimPlayRate = 0x8c; // float
		constexpr auto AnimScale = 0x90; // float
		constexpr auto AnimBlendInTime = 0x94; // float
		constexpr auto AnimBlendOutTime = 0x98; // float
		constexpr auto RandomAnimSegmentDuration = 0x9c; // float
		constexpr auto Anim = 0xa0; // UCameraAnim*
		constexpr auto bRandomAnimSegment = 0xa8; // char : 1
		constexpr auto CameraOwner = 0xc0; // APlayerCameraManager*
		constexpr auto ShakeScale = 0x148; // float
		constexpr auto OscillatorTimeRemaining = 0x14c; // float
		constexpr auto AnimInst = 0x150; // UCameraAnimInst*
	}

	namespace n_ABP_M4M203_UGL_HE_C { // : ABP_M4M203_UGL_Parent_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UVectorField { // : UObject
		constexpr auto Bounds = 0x28; // FBox
		constexpr auto Intensity = 0x44; // float
	}

	namespace n_UParticleModuleAccelerationDrag { // : UParticleModuleAccelerationBase
		constexpr auto DragCoefficient = 0x38; // UDistributionFloat*
		constexpr auto DragCoefficientRaw = 0x40; // FRawDistributionFloat
	}

	namespace n_ABP_M4M203_M68_UGL_Woodland_Smoke_C { // : ABP_M4M203_M68_UGL_Woodland_Parent_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_ADirectionalLight { // : ALight
		constexpr auto LightComponent = 0x248; // ULightComponent*
		constexpr auto bEnabled = 0x250; // char : 1
	}

	namespace n_UPhysicsSettings { // : UDeveloperSettings
		constexpr auto DefaultGravityZ = 0x38; // float
		constexpr auto DefaultTerminalVelocity = 0x3c; // float
		constexpr auto DefaultFluidFriction = 0x40; // float
		constexpr auto SimulateScratchMemorySize = 0x44; // int
		constexpr auto RagdollAggregateThreshold = 0x48; // int
		constexpr auto TriangleMeshTriangleMinAreaThreshold = 0x4c; // float
		constexpr auto bEnableShapeSharing = 0x50; // bool
		constexpr auto bEnablePCM = 0x51; // bool
		constexpr auto bEnableStabilization = 0x52; // bool
		constexpr auto bWarnMissingLocks = 0x53; // bool
		constexpr auto bEnable2DPhysics = 0x54; // bool
		constexpr auto PhysicErrorCorrection = 0x58; // FRigidBodyErrorCorrection
		constexpr auto LockedAxis = 0x8c; // ESettingsLockedAxis
		constexpr auto DefaultDegreesOfFreedom = 0x8d; // ESettingsDOF
		constexpr auto BounceThresholdVelocity = 0x90; // float
		constexpr auto FrictionCombineMode = 0x94; // EFrictionCombineMode
		constexpr auto RestitutionCombineMode = 0x95; // EFrictionCombineMode
		constexpr auto MaxAngularVelocity = 0x98; // float
		constexpr auto MaxDepenetrationVelocity = 0x9c; // float
		constexpr auto ContactOffsetMultiplier = 0xa0; // float
		constexpr auto MinContactOffset = 0xa4; // float
		constexpr auto MaxContactOffset = 0xa8; // float
		constexpr auto bSimulateSkeletalMeshOnDedicatedServer = 0xac; // bool
		constexpr auto DefaultShapeComplexity = 0xad; // ECollisionTraceFlag
		constexpr auto bDefaultHasComplexCollision = 0xae; // bool
		constexpr auto bSuppressFaceRemapTable = 0xaf; // bool
		constexpr auto bSupportUVFromHitResults = 0xb0; // bool
		constexpr auto bDisableActiveActors = 0xb1; // bool
		constexpr auto bDisableKinematicStaticPairs = 0xb2; // bool
		constexpr auto bDisableKinematicKinematicPairs = 0xb3; // bool
		constexpr auto bDisableCCD = 0xb4; // bool
		constexpr auto bEnableEnhancedDeterminism = 0xb5; // bool
		constexpr auto AnimPhysicsMinDeltaTime = 0xb8; // float
		constexpr auto bSimulateAnimPhysicsAfterReset = 0xbc; // bool
		constexpr auto MaxPhysicsDeltaTime = 0xc0; // float
		constexpr auto bSubstepping = 0xc4; // bool
		constexpr auto bSubsteppingAsync = 0xc5; // bool
		constexpr auto MaxSubstepDeltaTime = 0xc8; // float
		constexpr auto MaxSubsteps = 0xcc; // int
		constexpr auto SyncSceneSmoothingFactor = 0xd0; // float
		constexpr auto InitialAverageFrameRate = 0xd4; // float
		constexpr auto PhysXTreeRebuildRate = 0xd8; // int
		constexpr auto PhysicalSurfaces = 0xe0; // TArray<FPhysicalSurfaceName>
		constexpr auto DefaultBroadphaseSettings = 0xf0; // FBroadphaseSettings
		constexpr auto ChaosSettings = 0x130; // FChaosPhysicsSettings
	}

	namespace n_USQSquadStateDataMapMarker { // : USQSquadStateMapData
		constexpr auto Texture = 0x180; // UTexture2D*
		constexpr auto Tint = 0x188; // FLinearColor
		constexpr auto FireTeamId = 0x198; // int
	}

	namespace n_ABP_AK74MGP25_1P78_UGL_Smoke_Blue_C { // : ABP_AK74MGP25_1P78_UGL_Smoke_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UInterpGroupInstDirector { // : UInterpGroupInst
		constexpr auto Group = 0x28; // UInterpGroup*
		constexpr auto GroupActor = 0x30; // AActor*
		constexpr auto TrackInst = 0x38; // TArray<UInterpTrackInst*>
	}

	namespace n_UWrapBoxSlot { // : UPanelSlot
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto bFillEmptySpace = 0x48; // bool
		constexpr auto FillSpanWhenLessThan = 0x4c; // float
		constexpr auto HorizontalAlignment = 0x50; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x51; // EVerticalAlignment
	}

	namespace n_ABP_AKS74_Founders_C { // : ABP_AKS74_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UPrefabVariantAsset { // : UPrefabAsset
		constexpr auto Parent = 0xd0; // UPrefabAsset*
	}

	namespace n_USynthComponent { // : USceneComponent
		constexpr auto bAutoDestroy = 0x218; // char : 1
		constexpr auto bStopWhenOwnerDestroyed = 0x218; // char : 1
		constexpr auto bAllowSpatialization = 0x218; // char : 1
		constexpr auto bOverrideAttenuation = 0x218; // char : 1
		constexpr auto bOutputToBusOnly = 0x21c; // char : 1
		constexpr auto AttenuationSettings = 0x220; // USoundAttenuation*
		constexpr auto AttenuationOverrides = 0x228; // FSoundAttenuationSettings
		constexpr auto ConcurrencySettings = 0x510; // USoundConcurrency*
		constexpr auto ConcurrencySet = 0x518; // TSet<USoundConcurrency*>
		constexpr auto SoundClass = 0x568; // USoundClass*
		constexpr auto SourceEffectChain = 0x570; // USoundEffectSourcePresetChain*
		constexpr auto SoundSubmix = 0x578; // USoundSubmix*
		constexpr auto SoundSubmixSends = 0x580; // TArray<FSoundSubmixSendInfo>
		constexpr auto BusSends = 0x590; // TArray<FSoundSourceBusSendInfo>
		constexpr auto Modulation = 0x5a0; // FSoundModulation
		constexpr auto PreEffectBusSends = 0x5b0; // TArray<FSoundSourceBusSendInfo>
		constexpr auto bIsUISound = 0x5c0; // char : 1
		constexpr auto bIsPreviewSound = 0x5c0; // char : 1
		constexpr auto EnvelopeFollowerAttackTime = 0x5c4; // int
		constexpr auto EnvelopeFollowerReleaseTime = 0x5c8; // int
		constexpr auto OnAudioEnvelopeValue = 0x5d0; // FScriptMulticastDelegate
		constexpr auto Synth = 0x600; // USynthSound*
		constexpr auto AudioComponent = 0x608; // UAudioComponent*
	}

	namespace n_UCineCameraComponent { // : UCameraComponent
		constexpr auto FilmbackSettings = 0x7c0; // FCameraFilmbackSettings
		constexpr auto LensSettings = 0x7cc; // FCameraLensSettings
		constexpr auto FocusSettings = 0x7e8; // FCameraFocusSettings
		constexpr auto CurrentFocalLength = 0x840; // float
		constexpr auto CurrentAperture = 0x844; // float
		constexpr auto CurrentFocusDistance = 0x848; // float
		constexpr auto FilmbackPresets = 0x858; // TArray<FNamedFilmbackPreset>
		constexpr auto LensPresets = 0x868; // TArray<FNamedLensPreset>
		constexpr auto DefaultFilmbackPresetName = 0x878; // FString
		constexpr auto DefaultLensPresetName = 0x888; // FString
		constexpr auto DefaultLensFocalLength = 0x898; // float
		constexpr auto DefaultLensFStop = 0x89c; // float
	}

	namespace n_UMaterialExpressionAdd { // : UMaterialExpression
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_UComboBoxString { // : UWidget
		constexpr auto DefaultOptions = 0x108; // TArray<FString>
		constexpr auto SelectedOption = 0x118; // FString
		constexpr auto WidgetStyle = 0x128; // FComboBoxStyle
		constexpr auto ItemStyle = 0x500; // FTableRowStyle
		constexpr auto ContentPadding = 0xcc8; // FMargin
		constexpr auto MaxListHeight = 0xcd8; // float
		constexpr auto HasDownArrow = 0xcdc; // bool
		constexpr auto EnableGamepadNavigationMode = 0xcdd; // bool
		constexpr auto Font = 0xce0; // FSlateFontInfo
		constexpr auto ForegroundColor = 0xd30; // FSlateColor
		constexpr auto bIsFocusable = 0xd58; // bool
		constexpr auto OnGenerateWidgetEvent = 0xd5c; // DelegateProperty
		constexpr auto OnSelectionChanged = 0xd70; // FScriptMulticastDelegate
		constexpr auto OnOpening = 0xd80; // FScriptMulticastDelegate
	}

	namespace n_ASQConnectionCheckBeaconHostObj { // : AOnlineBeaconHostObject
		constexpr auto BeaconTypeName = 0x248; // FString
		constexpr auto ClientBeaconActorClass = 0x258; // AOnlineBeaconClient*
		constexpr auto ClientActors = 0x260; // TArray<AOnlineBeaconClient*>
	}

	namespace n_UDatasmithStaticMeshComponentTemplate { // : UDatasmithObjectTemplate
		constexpr auto StaticMesh = 0x30; // UStaticMesh*
		constexpr auto OverrideMaterials = 0x38; // TArray<UMaterialInterface*>
	}

	namespace n_UMovieSceneEnumTrack { // : UMovieScenePropertyTrack
		constexpr auto Enum = 0x88; // UEnum*
	}

	namespace n_UMaterialExpressionDeriveNormalZ { // : UMaterialExpression
		constexpr auto InXY = 0x40; // FExpressionInput
	}

	namespace n_UAbilityTask_SpawnActor { // : UAbilityTask
		constexpr auto Success = 0x80; // FScriptMulticastDelegate
		constexpr auto DidNotSpawn = 0x90; // FScriptMulticastDelegate
	}

	namespace n_UParticleModuleAccelerationConstant { // : UParticleModuleAccelerationBase
		constexpr auto Acceleration = 0x38; // FVector
	}

	namespace n_UWidgetAnimationPlayCallbackProxy { // : UObject
		constexpr auto Finished = 0x28; // FScriptMulticastDelegate
	}

	namespace n_UTextureRenderTarget { // : UTexture
		constexpr auto TargetGamma = 0xd0; // float
	}

	namespace n_USQSquadStateData { // : USQCoreStateData
		constexpr auto Visibility = 0xd0; // ESQMapMarkerVisibleTo
		constexpr auto AdminTypes = 0xd8; // TArray<APawn*>
		constexpr auto bVisibleWhenNeutral = 0xe8; // bool
		constexpr auto SquadState = 0xf0; // ASQSquadState*
		constexpr auto SquadId = 0xf8; // int
		constexpr auto TeamId = 0xfc; // int
		constexpr auto CachedSquadState = 0x108; // ASQSquadState*
	}

	namespace n_UDatasmithMaterialInstanceTemplate { // : UDatasmithObjectTemplate
		constexpr auto ScalarParameterValues = 0x30; // TMap<FName, float>
		constexpr auto VectorParameterValues = 0x80; // TMap<FName, FLinearColor>
		constexpr auto TextureParameterValues = 0xd0; // TMap<FName, UTexture*>
		constexpr auto StaticParameters = 0x120; // FDatasmithStaticParameterSetTemplate
	}

	namespace n_USQVehicleExitPointComponent { // : USceneComponent
		constexpr auto PhysicsVolume = 0xe0; // TWeakObjectPtr<APhysicsVolume>
		constexpr auto AttachParent = 0xe8; // USceneComponent*
		constexpr auto AttachSocketName = 0xf0; // FName
		constexpr auto AttachChildren = 0xf8; // TArray<USceneComponent*>
		constexpr auto ClientAttachedChildren = 0x108; // TArray<USceneComponent*>
		constexpr auto RelativeLocation = 0x144; // FVector
		constexpr auto RelativeRotation = 0x150; // FRotator
		constexpr auto RelativeScale3D = 0x15c; // FVector
		constexpr auto ComponentVelocity = 0x168; // FVector
		constexpr auto bComponentToWorldUpdated = 0x174; // char : 1
		constexpr auto bAbsoluteLocation = 0x174; // char : 1
		constexpr auto bAbsoluteRotation = 0x174; // char : 1
		constexpr auto bAbsoluteScale = 0x174; // char : 1
		constexpr auto bVisible = 0x174; // char : 1
		constexpr auto bHiddenInGame = 0x174; // char : 1
		constexpr auto bShouldBeAttached = 0x174; // char : 1
		constexpr auto bShouldSnapLocationWhenAttached = 0x175; // char : 1
		constexpr auto bShouldSnapRotationWhenAttached = 0x175; // char : 1
		constexpr auto bShouldUpdatePhysicsVolume = 0x175; // char : 1
		constexpr auto bBoundsChangeTriggersStreamingDataRebuild = 0x175; // char : 1
		constexpr auto bUseAttachParentBound = 0x175; // char : 1
		constexpr auto Mobility = 0x17d; // EComponentMobility
		constexpr auto DetailMode = 0x17e; // EDetailMode
		constexpr auto PhysicsVolumeChangedDelegate = 0x17f; // FScriptMulticastDelegate
	}

	namespace n_UPawnAction_BlueprintBase { // : UPawnAction
		constexpr auto ChildAction = 0x28; // UPawnAction*
		constexpr auto ParentAction = 0x30; // UPawnAction*
		constexpr auto OwnerComponent = 0x38; // UPawnActionsComponent*
		constexpr auto Instigator = 0x40; // UObject*
		constexpr auto BrainComp = 0x48; // UBrainComponent*
		constexpr auto bAllowNewSameClassInstance = 0x80; // char : 1
		constexpr auto bReplaceActiveSameClassInstance = 0x80; // char : 1
		constexpr auto bShouldPauseMovement = 0x80; // char : 1
		constexpr auto bAlwaysNotifyOnFinished = 0x80; // char : 1
	}

	namespace n_UAKS74U_Skeleton_AnimBlueprint_C { // : USQWeaponAnimInstance
		constexpr auto UberGraphFrame = 0x2b0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root_C80011B44665BFC85CC89C907405BC3F = 0x2b8; // FAnimNode_Root
		constexpr auto AnimGraphNode_Slot_D91EF01D4F09CB2BF7719594C62E8F5B = 0x2e8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SequencePlayer_1C771B1C42926A8083F82691D7EC067C = 0x330; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_A1841B0C4308566854D478B5770E4BF6 = 0x3a8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_Slot_4D56A36D4C965770826C1A93AA6C7851 = 0x468; // FAnimNode_Slot
		constexpr auto AnimGraphNode_LocalRefPose_5D5DC0764FC8BD37707B1D8D28EB36CC = 0x4b0; // FAnimNode_RefPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_CA75C91C4A0694E077F2ECAAB5AF6180 = 0x4c8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_FB23507B455E8749703A54911185E083 = 0x588; // FAnimNode_SequenceEvaluator
	}

	namespace n_ASQGameModeRuleset { // : ASQGameRuleSet
		constexpr auto InventoryModifications = 0x270; // TArray<FSQInventoryMod>
		constexpr auto PlayerJoinedMessageToPlayer = 0x280; // FText
		constexpr auto RulesToBeShownWhenPlayersJoinATeam = 0x298; // TArray<FSQGameModeRules>
	}

	namespace n_ABP_M4M203_M68_UGL_Parent_C { // : ABP_Weapon2_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_ABP_M4M203_M68_UGL_Smoke_C { // : ABP_M4M203_M68_UGL_Parent_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UPartyMember { // : UObject
		constexpr auto SocialUser = 0x68; // USocialUser*
	}

	namespace n_UFieldSystemMetaDataIteration { // : UFieldSystemMetaData
		constexpr auto Iterations = 0xd8; // int
	}

	namespace n_USQLocalPlayer { // : ULocalPlayer
		constexpr auto ViewportClient = 0x70; // UGameViewportClient*
		constexpr auto AspectRatioAxisConstraint = 0x94; // EAspectRatioAxisConstraint
		constexpr auto PendingLevelPlayerControllerClass = 0x98; // APlayerController*
		constexpr auto bSentSplitJoin = 0xa0; // char : 1
		constexpr auto ControllerId = 0xe0; // int
	}

	namespace n_UBP_RPG7Parent_StaticInfo_C { // : UBP_GenericWeapon_StaticInfo_C
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_UBoxComponent { // : UShapeComponent
		constexpr auto BoxExtent = 0x420; // FVector
		constexpr auto LineThickness = 0x42c; // float
	}

	namespace n_USQGameViewportClient { // : UGameViewportClient
		constexpr auto ViewportConsole = 0x40; // UConsole*
		constexpr auto DebugProperties = 0x48; // TArray<FDebugDisplayProperty>
		constexpr auto World = 0x78; // UWorld*
		constexpr auto GameInstance = 0x80; // UGameInstance*
	}

	namespace n_UAISense_Team { // : UAISense
		constexpr auto RegisteredEvents = 0x80; // TArray<FAITeamStimulusEvent>
	}

	namespace n_UReplicationGraphNode_GridSpatialization2D { // : UReplicationGraphNode
		constexpr auto AllChildNodes = 0x28; // TArray<UReplicationGraphNode*>
	}

	namespace n_UM72A7_Skeleton_AnimBlueprint_C { // : USQWeaponAnimInstance
		constexpr auto UberGraphFrame = 0x2b0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root_AE13B2F040E71F49D77D46A569567D64 = 0x2b8; // FAnimNode_Root
		constexpr auto AnimGraphNode_LayeredBoneBlend_7FF17B5346C322495714388DC17B9C84 = 0x2e8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_868D44D040DE66A171BF828DE548272D = 0x3a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot_822278C540717052E069228E2FB05EE5 = 0x420; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_862635C3411FAFDE3B8AE69E160053E8 = 0x468; // FAnimNode_Slot
		constexpr auto AnimGraphNode_LayeredBoneBlend_94DA38D34100202FF037FEAF90FF99F4 = 0x4b0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_Slot_748AB4DA441263691C3706BA2A3566F5 = 0x570; // FAnimNode_Slot
		constexpr auto AnimGraphNode_LocalRefPose_14DDF007420CB05B1E41D1B6F2C4AC24 = 0x5b8; // FAnimNode_RefPose
		constexpr auto AnimGraphNode_SequenceEvaluator_4E4BC9104D30EC69E4BAFF9F5F4B1EC0 = 0x5d0; // FAnimNode_SequenceEvaluator
	}

	namespace n_UMaterialExpressionParticleSpeed { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UMaterialExpressionDeltaTime { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UNetAnalyticsAggregatorConfig { // : UObject
		constexpr auto NetAnalyticsData = 0x28; // TArray<FNetAnalyticsDataConfig>
	}

	namespace n_UMaterialExpressionSobol { // : UMaterialExpression
		constexpr auto Cell = 0x40; // FExpressionInput
		constexpr auto Index = 0x54; // FExpressionInput
		constexpr auto Seed = 0x68; // FExpressionInput
		constexpr auto ConstIndex = 0x7c; // uint32
		constexpr auto ConstSeed = 0x80; // FVector2D
	}

	namespace n_UParticleModuleVelocityCone { // : UParticleModuleVelocityBase
		constexpr auto Angle = 0x38; // FRawDistributionFloat
		constexpr auto Velocity = 0x70; // FRawDistributionFloat
		constexpr auto Direction = 0xa8; // FVector
	}

	namespace n_UMaterialExpressionLightmapUVs { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_USQSoundNodeEmitterListenerAudioVolumeSwitch { // : USoundNode
		constexpr auto TestAudioVolumeType = 0x40; // ESQAudioVolumeType
		constexpr auto bIsListener = 0x41; // bool
	}

	namespace n_UControlPointMeshComponent { // : UStaticMeshComponent
		constexpr auto ForcedLodModel = 0x430; // int
		constexpr auto PreviousLODLevel = 0x434; // int
		constexpr auto MinLOD = 0x438; // int
		constexpr auto SubDivisionStepSize = 0x43c; // int
		constexpr auto StaticMesh = 0x440; // UStaticMesh*
		constexpr auto WireframeColorOverride = 0x448; // FColor
		constexpr auto bOverrideWireframeColor = 0x44c; // char : 1
		constexpr auto bOverrideMinLOD = 0x44c; // char : 1
		constexpr auto bOverrideNavigationExport = 0x44c; // char : 1
		constexpr auto bForceNavigationObstacle = 0x44c; // char : 1
		constexpr auto bDisallowMeshPaintPerInstance = 0x44c; // char : 1
		constexpr auto bIgnoreInstanceForTextureStreaming = 0x44c; // char : 1
		constexpr auto bOverrideLightMapRes = 0x44c; // char : 1
		constexpr auto bCastDistanceFieldIndirectShadow = 0x44c; // char : 1
		constexpr auto bOverrideDistanceFieldSelfShadowBias = 0x44d; // char : 1
		constexpr auto bUseSubDivisions = 0x44d; // char : 1
		constexpr auto bUseDefaultCollision = 0x44d; // char : 1
		constexpr auto bReverseCulling = 0x44d; // char : 1
		constexpr auto OverriddenLightMapRes = 0x450; // int
		constexpr auto DistanceFieldIndirectShadowMinVisibility = 0x454; // float
		constexpr auto DistanceFieldSelfShadowBias = 0x458; // float
		constexpr auto StreamingDistanceMultiplier = 0x45c; // float
		constexpr auto LODData = 0x460; // TArray<FStaticMeshComponentLODInfo>
		constexpr auto StreamingTextureData = 0x470; // TArray<FStreamingTextureBuildInfo>
		constexpr auto LightmassSettings = 0x480; // FLightmassPrimitiveSettings
	}

	namespace n_UBP_SquadStateDataCameraman_C { // : USQSquadStateDataCameraman
		constexpr auto bHiddenWhenUnpossessed = 0x180; // bool
		constexpr auto bHiddenWhenNotLocallyControlled = 0x181; // bool
		constexpr auto bHideWidgetWhenUnpossessed = 0x182; // bool
		constexpr auto CameraRotaionYawTolerance = 0x184; // float
		constexpr auto OwnerPlayerState = 0x188; // ASQPlayerState*
		constexpr auto CachedPlayerId = 0x194; // int
		constexpr auto FireTeamIndex = 0x198; // int
		constexpr auto CachedOwnerPlayerState = 0x1a0; // ASQPlayerState*
	}

	namespace n_ABP_M4A1_M68_C { // : ABP_M4A1_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_ASQKillDeathRuleset { // : ASQGameRuleSet
		constexpr auto TeamOneSettings = 0x270; // FSQKillDeathSettings
		constexpr auto TeamTwoSettings = 0x2b0; // FSQKillDeathSettings
		constexpr auto SpawnDelayPenaltyForSuicide = 0x2f0; // float
		constexpr auto SpawnDelayPenaltyForTeamKill = 0x2f4; // float
		constexpr auto TeamOneHealSettings = 0x2f8; // FSQHealSettings
		constexpr auto TeamTwoHealSettings = 0x31c; // FSQHealSettings
		constexpr auto TeamkillsBeforeKick = 0x340; // int
		constexpr auto DefaultPointsForVehicleDestroy = 0x344; // float
		constexpr auto bDefaultShouldDelayScoreForVehicleDestroy = 0x348; // bool
		constexpr auto DefaultTicketsLostForVehicleDestroy = 0x34c; // int
		constexpr auto bTKAutoKickEnabled = 0x350; // bool
	}

	namespace n_UParticleModuleAttractorLine { // : UParticleModuleAttractorBase
		constexpr auto EndPoint0 = 0x30; // FVector
		constexpr auto EndPoint1 = 0x3c; // FVector
		constexpr auto Range = 0x48; // FRawDistributionFloat
		constexpr auto Strength = 0x80; // FRawDistributionFloat
	}

	namespace n_USkyLightComponent { // : ULightComponentBase
		constexpr auto SourceType = 0x248; // ESkyLightSourceType
		constexpr auto Cubemap = 0x250; // UTextureCube*
		constexpr auto SourceCubemapAngle = 0x258; // float
		constexpr auto CubemapResolution = 0x25c; // int
		constexpr auto SkyDistanceThreshold = 0x260; // float
		constexpr auto bCaptureEmissiveOnly = 0x264; // bool
		constexpr auto bLowerHemisphereIsBlack = 0x265; // bool
		constexpr auto LowerHemisphereColor = 0x268; // FLinearColor
		constexpr auto OcclusionMaxDistance = 0x278; // float
		constexpr auto Contrast = 0x27c; // float
		constexpr auto OcclusionExponent = 0x280; // float
		constexpr auto MinOcclusion = 0x284; // float
		constexpr auto OcclusionTint = 0x288; // FColor
		constexpr auto OcclusionCombineMode = 0x28c; // EOcclusionCombineMode
		constexpr auto BlendDestinationCubemap = 0x338; // UTextureCube*
	}

	namespace n_USQVehicleResourceWeaponInventoryComponent { // : USQVehicleInventoryComponent
		constexpr auto OnResourcesChangedEvent = 0x2f0; // FScriptMulticastDelegate
		constexpr auto bSpawnWithMaxResources = 0x300; // bool
		constexpr auto CurrentConstructionAmount = 0x328; // int
		constexpr auto CurrentAmmoAmount = 0x32c; // int
		constexpr auto TotalSharedResourceAmount = 0x330; // int
		constexpr auto ResourceClasses = 0x338; // TArray<ASQVehicleResource*>
		constexpr auto Resources = 0x348; // TArray<ASQVehicleResource*>
	}

	namespace n_UAISenseEvent_Hearing { // : UAISenseEvent
		constexpr auto Event = 0x28; // FAINoiseEvent
	}

	namespace n_UAbilityTask_WaitTargetData { // : UAbilityTask
		constexpr auto ValidData = 0x80; // FScriptMulticastDelegate
		constexpr auto Cancelled = 0x90; // FScriptMulticastDelegate
		constexpr auto TargetClass = 0xa0; // AGameplayAbilityTargetActor*
		constexpr auto TargetActor = 0xa8; // AGameplayAbilityTargetActor*
	}

	namespace n_UNavFilter_AIControllerDefault { // : UNavigationQueryFilter
		constexpr auto Areas = 0x28; // TArray<FNavigationFilterArea>
		constexpr auto IncludeFlags = 0x38; // FNavigationFilterFlags
		constexpr auto ExcludeFlags = 0x3c; // FNavigationFilterFlags
	}

	namespace n_USQBotComponent { // : UActorComponent
		constexpr auto TargetEnemy = 0xd8; // ASQSoldierNew*
		constexpr auto OwnerSoldier = 0xe0; // ASQSoldierNew*
		constexpr auto TargetingRange = 0xec; // float
		constexpr auto CheckAtFloorDistance = 0xf0; // float
		constexpr auto RandomHeadingYawRange = 0xf4; // float
		constexpr auto RandomHeadingPitchRange = 0xf8; // float
		constexpr auto TargetingMaxPitchDelta = 0xfc; // float
	}

	namespace n_UAnimCompress_BitwiseCompressOnly { // : UAnimCompress
		constexpr auto Description = 0x28; // FString
		constexpr auto bNeedsSkeleton = 0x38; // char : 1
		constexpr auto bEnableSegmenting = 0x38; // char : 1
		constexpr auto IdealNumFramesPerSegment = 0x3c; // uint32
		constexpr auto MaxNumFramesPerSegment = 0x40; // uint32
		constexpr auto TranslationCompressionFormat = 0x44; // AnimationCompressionFormat
		constexpr auto RotationCompressionFormat = 0x45; // AnimationCompressionFormat
		constexpr auto ScaleCompressionFormat = 0x46; // AnimationCompressionFormat
		constexpr auto MaxCurveError = 0x48; // float
	}

	namespace n_UBP_Knife_Reversegrip_StaticInfo_C { // : UBP_GenericMelee_StaticInfo_C
		constexpr auto BP_MeleeNoHitSoldier1pMontage = 0x950; // UAnimMontage*
		constexpr auto BP_MeleeHitSoldier1pMontage = 0x958; // UAnimMontage*
		constexpr auto BP_MeleeNoHitSoldier3pMontage = 0x960; // UAnimMontage*
		constexpr auto BP_MeleeNoHitSoldierWeaponMontage = 0x968; // UAnimMontage*
		constexpr auto BP_MeleeHitSoldier3pMontage = 0x970; // UAnimMontage*
		constexpr auto BP_MeleeHitSoldierWeaponMontage = 0x978; // UAnimMontage*
	}

	namespace n_USCS_Node { // : UObject
		constexpr auto ComponentClass = 0x28; // UObject*
		constexpr auto ComponentTemplate = 0x30; // UActorComponent*
		constexpr auto CookedComponentInstancingData = 0x38; // FBlueprintCookedComponentInstancingData
		constexpr auto AttachToName = 0x88; // FName
		constexpr auto ParentComponentOrVariableName = 0x90; // FName
		constexpr auto ParentComponentOwnerClassName = 0x98; // FName
		constexpr auto bIsParentComponentNative = 0xa0; // bool
		constexpr auto ChildNodes = 0xa8; // TArray<USCS_Node*>
		constexpr auto MetaDataArray = 0xb8; // TArray<FBPVariableMetaDataEntry>
		constexpr auto VariableGuid = 0xc8; // FGuid
		constexpr auto InternalVariableName = 0xd8; // FName
	}

	namespace n_ABP_AK74MGP25_1P63_UGL_Desert_Smoke_Red_C { // : ABP_AK74MGP25_1P63_UGL_Desert_Smoke_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_USQLoginCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto OnFailure = 0x38; // FScriptMulticastDelegate
		constexpr auto WorldContextObject = 0x88; // UObject*
	}

	namespace n_USQRotationMovementAudioComponent { // : UAudioComponent
		constexpr auto PitchMovementComponent = 0x730; // USQMovementComponentBase*
		constexpr auto YawMovementComponent = 0x738; // USQMovementComponentBase*
		constexpr auto RotationMovementState = 0x740; // ESQRotationMovementState
		constexpr auto StartingSound = 0x748; // USoundBase*
		constexpr auto MovingSound = 0x750; // USoundBase*
		constexpr auto StoppingSound = 0x758; // USoundBase*
		constexpr auto SlowIdleDuration = 0x760; // float
		constexpr auto SlowIdleTickInterval = 0x764; // float
		constexpr auto IdleFadeOutDuration = 0x768; // float
		constexpr auto StartingDuration = 0x76c; // float
		constexpr auto MovingToStoppingDuration = 0x770; // float
		constexpr auto StoppingDuration = 0x774; // float
	}

	namespace n_UAbilityTask_WaitGameplayTagAdded { // : UAbilityTask_WaitGameplayTag
		constexpr auto Added = 0xa8; // FScriptMulticastDelegate
	}

	namespace n_APhysicsThruster { // : ARigidBodyBase
		constexpr auto ThrusterComponent = 0x248; // UPhysicsThrusterComponent*
	}

	namespace n_UMaterialExpressionArcsine { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_USQSuppressionInfo { // : UObject
		constexpr auto SuppressSwayFactorRelease = 0x28; // float
		constexpr auto AddSuppressSway = 0x2c; // float
		constexpr auto MinSuppressSwayFactor = 0x30; // float
		constexpr auto MaxSuppressSwayFactor = 0x34; // float
		constexpr auto LofSuppressRange = 0x38; // float
		constexpr auto LofSuppressInterpSpeed = 0x3c; // float
		constexpr auto LofSuppressAlphaFactor = 0x40; // float
		constexpr auto LofSuppressRotationAlphaRelease = 0x44; // float
	}

	namespace n_UReplicationGraphNode_AlwaysRelevant_ForConnection { // : UReplicationGraphNode_ActorList
		constexpr auto PastRelevantActors = 0x110; // TArray<FAlwaysRelevantActorInfo>
		constexpr auto LastViewer = 0x120; // AActor*
		constexpr auto LastViewTarget = 0x128; // AActor*
	}

	namespace n_UTextureCube { // : UTexture
		constexpr auto LightingGuid = 0x48; // FGuid
		constexpr auto LODBias = 0x58; // int
		constexpr auto CompressionSettings = 0x5c; // TextureCompressionSettings
		constexpr auto Filter = 0x5d; // TextureFilter
		constexpr auto MipLoadOptions = 0x5e; // ETextureMipLoadOptions
		constexpr auto LODGroup = 0x5f; // TextureGroup
		constexpr auto SRGB = 0x60; // char : 1
		constexpr auto bNoTiling = 0x60; // char : 1
		constexpr auto VirtualTextureStreaming = 0x60; // char : 1
		constexpr auto bAsyncResourceReleaseHasBeenStarted = 0x60; // char : 1
		constexpr auto AssetUserData = 0x68; // TArray<UAssetUserData*>
	}

	namespace n_USQSoundNodeFixedDistanceSwitch { // : USoundNode
		constexpr auto TransitionDistancesInMeters = 0x40; // TArray<float>
		constexpr auto InputVolumes = 0x50; // TArray<float>
		constexpr auto TestDistance = 0x60; // float
	}

	namespace n_UActorChannel { // : UChannel
		constexpr auto Actor = 0x70; // AActor*
		constexpr auto CreateSubObjects = 0x170; // TArray<UObject*>
	}

	namespace n_UStaticMeshSocket { // : UObject
		constexpr auto SocketName = 0x28; // FName
		constexpr auto RelativeLocation = 0x30; // FVector
		constexpr auto RelativeRotation = 0x3c; // FRotator
		constexpr auto RelativeScale = 0x48; // FVector
		constexpr auto Tag = 0x58; // FString
	}

	namespace n_UParticleModuleLight { // : UParticleModuleLightBase
		constexpr auto bUseInverseSquaredFalloff = 0x30; // bool
		constexpr auto bAffectsTranslucency = 0x31; // bool
		constexpr auto bPreviewLightRadius = 0x32; // bool
		constexpr auto SpawnFraction = 0x34; // float
		constexpr auto ColorScaleOverLife = 0x38; // FRawDistributionVector
		constexpr auto BrightnessOverLife = 0x88; // FRawDistributionFloat
		constexpr auto RadiusScale = 0xc0; // FRawDistributionFloat
		constexpr auto LightExponent = 0xf8; // FRawDistributionFloat
		constexpr auto LightingChannels = 0x130; // FLightingChannels
		constexpr auto VolumetricScatteringIntensity = 0x134; // float
		constexpr auto bHighQualityLights = 0x138; // bool
		constexpr auto bShadowCastingLights = 0x139; // bool
	}

	namespace n_UMovieSceneSkeletalAnimationSection { // : UMovieSceneSection
		constexpr auto Params = 0xe0; // FMovieSceneSkeletalAnimationParams
		constexpr auto AnimSequence = 0x1b0; // UAnimSequence*
		constexpr auto Animation = 0x1b8; // UAnimSequenceBase*
		constexpr auto StartOffset = 0x1c0; // float
		constexpr auto EndOffset = 0x1c4; // float
		constexpr auto PlayRate = 0x1c8; // float
		constexpr auto bReverse = 0x1cc; // char : 1
		constexpr auto SlotName = 0x1d0; // FName
	}

	namespace n_UGameplayTagsList { // : UObject
		constexpr auto ConfigFileName = 0x28; // FString
		constexpr auto GameplayTagList = 0x38; // TArray<FGameplayTagTableRow>
	}

	namespace n_USQMovementComponentPacked { // : USQMovementComponentBase
		constexpr auto MaxMoveDeltaTime = 0xf8; // float
		constexpr auto VectorEqualityTolerance = 0xfc; // float
		constexpr auto AccelDotThresholdCombine = 0x100; // float
		constexpr auto AccelDotThreshold = 0x104; // float
		constexpr auto AccelMagThreshold = 0x108; // float
		constexpr auto AngularErrorTolerance = 0x10c; // float
		constexpr auto NetworkMaxSmoothUpdateDistance = 0x110; // float
		constexpr auto MinCorrectionDelay = 0x114; // float
		constexpr auto NetworkNoSmoothUpdateDistance = 0x118; // float
		constexpr auto LocationQuantizationLevel = 0x11c; // EVectorQuantization
		constexpr auto VelocityQuantizationLevel = 0x11d; // EVectorQuantization
		constexpr auto AccelerationQuantizationLevel = 0x11e; // EVectorQuantization
		constexpr auto RotationQuantizationLevel = 0x11f; // ERotatorQuantization
		constexpr auto OwnerActor = 0x120; // AActor*
		constexpr auto Controller = 0x128; // AController*
		constexpr auto ReplicatedMovement = 0x178; // FSQRepMovement
		constexpr auto MaxSpeed = 0x1b8; // float
	}

	namespace n_AActor { // : UObject
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto bHidden = 0x80; // char : 1
		constexpr auto bNetTemporary = 0x80; // char : 1
		constexpr auto bNetStartup = 0x80; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x80; // char : 1
		constexpr auto bAlwaysRelevant = 0x80; // char : 1
		constexpr auto bReplicateMovement = 0x80; // char : 1
		constexpr auto bTearOff = 0x80; // char : 1
		constexpr auto bExchangedRoles = 0x80; // char : 1
		constexpr auto bNetLoadOnClient = 0x81; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x81; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x81; // char : 1
		constexpr auto bRelevantForLevelBounds = 0x81; // char : 1
		constexpr auto bReplayRewindable = 0x81; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x81; // char : 1
		constexpr auto bAutoDestroyWhenFinished = 0x81; // char : 1
		constexpr auto bBlockInput = 0x81; // char : 1
		constexpr auto bCanBeDamaged = 0x82; // char : 1
		constexpr auto bCollideWhenPlacing = 0x82; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x82; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x82; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x82; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x82; // char : 1
		constexpr auto bIsEditorOnlyActor = 0x82; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x82; // char : 1
		constexpr auto bReplicates = 0x83; // char : 1
		constexpr auto bCanBeInCluster = 0x83; // char : 1
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x83; // char : 1
		constexpr auto bActorEnableCollision = 0x84; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x84; // char : 1
		constexpr auto RemoteRole = 0x85; // ENetRole
		constexpr auto ReplicatedMovement = 0x88; // FRepMovement
		constexpr auto InitialLifeSpan = 0xbc; // float
		constexpr auto CustomTimeDilation = 0xc0; // float
		constexpr auto AttachmentReplication = 0xc8; // FRepAttachment
		constexpr auto Owner = 0x108; // AActor*
		constexpr auto NetDriverName = 0x110; // FName
		constexpr auto Role = 0x118; // ENetRole
		constexpr auto NetDormancy = 0x119; // ENetDormancy
		constexpr auto SpawnCollisionHandlingMethod = 0x11a; // ESpawnActorCollisionHandlingMethod
		constexpr auto AutoReceiveInput = 0x11b; // EAutoReceiveInput
		constexpr auto InputPriority = 0x11c; // int
		constexpr auto InputComponent = 0x120; // UInputComponent*
		constexpr auto NetCullDistanceSquared = 0x128; // float
		constexpr auto NetTag = 0x12c; // int
		constexpr auto NetUpdateFrequency = 0x130; // float
		constexpr auto MinNetUpdateFrequency = 0x134; // float
		constexpr auto bUseRelativeNetUpdateFrequency = 0x138; // char : 1
		constexpr auto bUseOwnerRelativeNetUpdateFrequency = 0x138; // char : 1
		constexpr auto MinRelativeNetUpdateEvaluationFrequency = 0x13c; // float
		constexpr auto NetPriority = 0x140; // float
		constexpr auto Instigator = 0x148; // APawn*
		constexpr auto Children = 0x150; // TArray<AActor*>
		constexpr auto RootComponent = 0x160; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x168; // TArray<AMatineeActor*>
		constexpr auto Layers = 0x180; // TArray<FName>
		constexpr auto ParentComponent = 0x190; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto Tags = 0x198; // TArray<FName>
		constexpr auto OnTakeAnyDamage = 0x1a8; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x1a9; // FScriptMulticastDelegate
		constexpr auto OnTakeRadialDamage = 0x1aa; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x1ab; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x1ac; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x1ad; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x1ae; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x1af; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x1b0; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x1b1; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x1b2; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x1b3; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x1b4; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x1b5; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x1b6; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x1b7; // FScriptMulticastDelegate
		constexpr auto InstanceComponents = 0x218; // TArray<UActorComponent*>
		constexpr auto BlueprintCreatedComponents = 0x228; // TArray<UActorComponent*>
	}

	namespace n_UMaterialExpressionMaterialFunctionCall { // : UMaterialExpression
		constexpr auto MaterialFunction = 0x40; // UMaterialFunctionInterface*
		constexpr auto FunctionParameterInfo = 0x48; // FMaterialParameterInfo
	}

	namespace n_ASQTeamStatePrivate { // : AInfo
		constexpr auto IndexedTeamPrivateSquadStates = 0x250; // TArray<ASQSquadStatePrivateToTeam*>
		constexpr auto TeamPrivateSquadStates = 0x260; // TArray<ASQSquadStatePrivateToTeam*>
		constexpr auto ID = 0x270; // int
	}

	namespace n_AGameMode { // : AGameModeBase
		constexpr auto MatchState = 0x340; // FName
		constexpr auto bDelayedStart = 0x348; // char : 1
		constexpr auto NumSpectators = 0x34c; // int
		constexpr auto NumPlayers = 0x350; // int
		constexpr auto NumBots = 0x354; // int
		constexpr auto MinRespawnDelay = 0x358; // float
		constexpr auto NumTravellingPlayers = 0x35c; // int
		constexpr auto EngineMessageClass = 0x368; // ULocalMessage*
		constexpr auto InactivePlayerArray = 0x370; // TArray<APlayerState*>
		constexpr auto InactivePlayerStateLifeSpan = 0x380; // float
		constexpr auto MaxInactivePlayers = 0x384; // int
		constexpr auto bHandleDedicatedServerReplays = 0x388; // bool
	}

	namespace n_UParticleModuleTypeDataBeam2 { // : UParticleModuleTypeDataBase
		constexpr auto BeamMethod = 0x30; // EBeam2Method
		constexpr auto TextureTile = 0x34; // int
		constexpr auto TextureTileDistance = 0x38; // float
		constexpr auto Sheets = 0x3c; // int
		constexpr auto MaxBeamCount = 0x40; // int
		constexpr auto Speed = 0x44; // float
		constexpr auto InterpolationPoints = 0x48; // int
		constexpr auto bAlwaysOn = 0x4c; // char : 1
		constexpr auto UpVectorStepSize = 0x50; // int
		constexpr auto BranchParentName = 0x54; // FName
		constexpr auto distance = 0x60; // FRawDistributionFloat
		constexpr auto TaperMethod = 0x98; // EBeamTaperMethod
		constexpr auto TaperFactor = 0xa0; // FRawDistributionFloat
		constexpr auto TaperScale = 0xd8; // FRawDistributionFloat
		constexpr auto RenderGeometry = 0x110; // char : 1
		constexpr auto RenderDirectLine = 0x110; // char : 1
		constexpr auto RenderLines = 0x110; // char : 1
		constexpr auto RenderTessellation = 0x110; // char : 1
	}

	namespace n_UActorSequencePlayer { // : UMovieSceneSequencePlayer
		constexpr auto OnPlay = 0x3b8; // FScriptMulticastDelegate
		constexpr auto OnPlayReverse = 0x3c8; // FScriptMulticastDelegate
		constexpr auto OnStop = 0x3d8; // FScriptMulticastDelegate
		constexpr auto OnPause = 0x3e8; // FScriptMulticastDelegate
		constexpr auto OnFinished = 0x3f8; // FScriptMulticastDelegate
		constexpr auto Status = 0x408; // EMovieScenePlayerStatus
		constexpr auto bReversePlayback = 0x40c; // char : 1
		constexpr auto Sequence = 0x410; // UMovieSceneSequence*
		constexpr auto StartTime = 0x418; // FFrameNumber
		constexpr auto DurationFrames = 0x41c; // int
		constexpr auto CurrentNumLoops = 0x420; // int
		constexpr auto PlaybackSettings = 0x438; // FMovieSceneSequencePlaybackSettings
		constexpr auto RootTemplateInstance = 0x450; // FMovieSceneRootEvaluationTemplateInstance
		constexpr auto NetSyncProps = 0x7b8; // FMovieSceneSequenceReplProperties
		constexpr auto PlaybackClient = 0x7c8; // TScriptInterface<Class>
	}

	namespace n_ABP_Projectile_7_62mm_C { // : ASQProjectile
		constexpr auto TracerMesh = 0x490; // UStaticMesh*
		constexpr auto TracerMaterial = 0x498; // UMaterial*
	}

	namespace n_UWheeledVehicleMovementComponent4W { // : UWheeledVehicleMovementComponent
		constexpr auto EngineSetup = 0x2d8; // FVehicleEngineData
		constexpr auto DifferentialSetup = 0x378; // FVehicleDifferential4WData
		constexpr auto AckermannAccuracy = 0x394; // float
		constexpr auto TransmissionSetup = 0x398; // FVehicleTransmissionData
		constexpr auto SteeringCurve = 0x3d8; // FRuntimeFloatCurve
	}

	namespace n_UEditableTextBoxWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto EditableTextBoxStyle = 0x30; // FEditableTextBoxStyle
	}

	namespace n_UInterpTrackVisibility { // : UInterpTrack
		constexpr auto VisibilityTrack = 0x70; // TArray<FVisibilityTrackKey>
		constexpr auto bFireEventsWhenForwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenJumpingForwards = 0x80; // char : 1
	}

	namespace n_USQLocalAudioMix { // : USQLocalAudioEffectHandler
		constexpr auto AudioEffect = 0x28; // USoundMix*
	}

	namespace n_UADSPostProcessSettings { // : UDataAsset
		constexpr auto BlendCurve = 0x30; // UCurveFloat*
		constexpr auto PPSettings = 0x40; // FPostProcessSettings
	}

	namespace n_ALODActor { // : AActor
		constexpr auto StaticMeshComponent = 0x248; // UStaticMeshComponent*
		constexpr auto ImpostersStaticMeshComponents = 0x250; // TMap<UMaterialInterface*, UInstancedStaticMeshComponent*>
		constexpr auto Proxy = 0x2a0; // UHLODProxy*
		constexpr auto Key = 0x2a8; // FName
		constexpr auto LODDrawDistance = 0x2b0; // float
		constexpr auto LODLevel = 0x2b4; // int
		constexpr auto SubActors = 0x2b8; // TArray<AActor*>
		constexpr auto CachedNumHLODLevels = 0x2c8; // char
	}

	namespace n_UMovieSceneCinematicShotTrack { // : UMovieSceneSubTrack
		constexpr auto Sections = 0x58; // TArray<UMovieSceneSection*>
	}

	namespace n_UGridPanel { // : UPanelWidget
		constexpr auto ColumnFill = 0x120; // TArray<float>
		constexpr auto RowFill = 0x130; // TArray<float>
	}

	namespace n_UAnimCompress { // : UObject
		constexpr auto Description = 0x28; // FString
		constexpr auto bNeedsSkeleton = 0x38; // char : 1
		constexpr auto bEnableSegmenting = 0x38; // char : 1
		constexpr auto IdealNumFramesPerSegment = 0x3c; // uint32
		constexpr auto MaxNumFramesPerSegment = 0x40; // uint32
		constexpr auto TranslationCompressionFormat = 0x44; // AnimationCompressionFormat
		constexpr auto RotationCompressionFormat = 0x45; // AnimationCompressionFormat
		constexpr auto ScaleCompressionFormat = 0x46; // AnimationCompressionFormat
		constexpr auto MaxCurveError = 0x48; // float
	}

	namespace n_UGameplayEffectExecutionCalculation { // : UGameplayEffectCalculation
		constexpr auto bRequiresPassedInTags = 0x38; // bool
	}

	namespace n_UBP_MaterialEffects_HEAT_C { // : UBP_MaterialEffects_C
		constexpr auto Effects = 0x28; // TMap<USQPhysicalMaterial*, FSQEffectsSet>
	}

	namespace n_ABP_M4A1_M150_Foregrip_Tracer_Woodland_C { // : ABP_M4A1_M150_Foregrip_Tracer_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_ABP_AK74MGP25_1P63_UGL_Desert_Smoke_Blue_C { // : ABP_AK74MGP25_1P63_UGL_Desert_Smoke_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UParticleModuleAccelerationDragScaleOverLife { // : UParticleModuleAccelerationBase
		constexpr auto DragScale = 0x38; // UDistributionFloat*
		constexpr auto DragScaleRaw = 0x40; // FRawDistributionFloat
	}

	namespace n_ABP_AK74MGP25_UGL_Smoke_C { // : ABP_AK74MGP25_UGL_Parent_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UNativeWidgetHost { // : UWidget
		constexpr auto Slot = 0x28; // UPanelSlot*
		constexpr auto bIsEnabledDelegate = 0x30; // DelegateProperty
		constexpr auto ToolTipText = 0x40; // FText
		constexpr auto ToolTipTextDelegate = 0x58; // DelegateProperty
		constexpr auto ToolTipWidget = 0x68; // UWidget*
		constexpr auto ToolTipWidgetDelegate = 0x70; // DelegateProperty
		constexpr auto VisibilityDelegate = 0x80; // DelegateProperty
		constexpr auto RenderTransform = 0x90; // FWidgetTransform
		constexpr auto RenderTransformPivot = 0xac; // FVector2D
		constexpr auto bIsVariable = 0xb4; // char : 1
		constexpr auto bCreatedByConstructionScript = 0xb4; // char : 1
		constexpr auto bIsEnabled = 0xb4; // char : 1
		constexpr auto bOverride_Cursor = 0xb4; // char : 1
		constexpr auto AccessibleWidgetData = 0xb8; // USlateAccessibleWidgetData*
		constexpr auto bIsVolatile = 0xc0; // char : 1
		constexpr auto cursor = 0xc1; // EMouseCursor
		constexpr auto Clipping = 0xc2; // EWidgetClipping
		constexpr auto Visibility = 0xc3; // ESlateVisibility
		constexpr auto RenderOpacity = 0xc4; // float
		constexpr auto Navigation = 0xc8; // UWidgetNavigation*
		constexpr auto FlowDirectionPreference = 0xd0; // EFlowDirectionPreference
		constexpr auto NativeBindings = 0xf8; // TArray<UPropertyBinding*>
	}

	namespace n_UAimOffsetBlendSpace { // : UBlendSpace
		constexpr auto AxisToScaleAnimation = 0x148; // EBlendSpaceAxis
	}

	namespace n_UMaterialParameterCollection { // : UObject
		constexpr auto StateId = 0x28; // FGuid
		constexpr auto ScalarParameters = 0x38; // TArray<FCollectionScalarParameter>
		constexpr auto VectorParameters = 0x48; // TArray<FCollectionVectorParameter>
	}

	namespace n_UParticleModuleLocationPrimitiveSphere_Seeded { // : UParticleModuleLocationPrimitiveSphere
		constexpr auto RandomSeedInfo = 0xf8; // FParticleRandomSeedInfo
	}

	namespace n_UBP_AKS74U_StaticInfo_C { // : UBP_AK74_StaticInfo_C
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_UMaterialExpressionStaticBool { // : UMaterialExpression
		constexpr auto Value = 0x40; // char : 1
	}

	namespace n_AVolume { // : ABrush
		constexpr auto BrushType = 0x248; // EBrushType
		constexpr auto BrushColor = 0x24c; // FColor
		constexpr auto PolyFlags = 0x250; // int
		constexpr auto bColored = 0x254; // char : 1
		constexpr auto bSolidWhenSelected = 0x254; // char : 1
		constexpr auto bPlaceableFromClassBrowser = 0x254; // char : 1
		constexpr auto bNotForClientOrServer = 0x254; // char : 1
		constexpr auto Brush = 0x258; // UModel*
		constexpr auto BrushComponent = 0x260; // UBrushComponent*
		constexpr auto bInManipulation = 0x268; // char : 1
		constexpr auto SavedSelections = 0x270; // TArray<FGeomSelection>
	}

	namespace n_UInGameAdManager { // : UPlatformInterfaceBase
		constexpr auto bShouldPauseWhileAdOpen = 0x38; // char : 1
		constexpr auto ClickedBannerDelegates = 0x40; // TArray<DelegateProperty>
		constexpr auto ClosedAdDelegates = 0x50; // TArray<DelegateProperty>
	}

	namespace n_UViewport { // : UContentWidget
		constexpr auto BackgroundColor = 0x120; // FLinearColor
	}

	namespace n_ASQHelicopter2 { // : ASQVehicle
		constexpr auto VehicleCleanupComponent = 0x828; // USQVehicleCleanupComponent*
		constexpr auto PhysicsToggleThreshold = 0x830; // float
		constexpr auto MaxDeltaTime = 0x834; // float
		constexpr auto FixedTimestep = 0x838; // float
		constexpr auto BoxCollider = 0x840; // UBoxComponent*
		constexpr auto ExternalCamera = 0x848; // UCameraComponent*
		constexpr auto SpringArm = 0x850; // USpringArmComponent*
		constexpr auto MovementComponent = 0x858; // USQHelicopterMovementComponent*
		constexpr auto Engine = 0x860; // USQVehicleEngineComponent*
		constexpr auto MainRotor = 0x868; // USQRotorBladesComponent*
		constexpr auto TailRotor = 0x870; // USQRotorBladesComponent*
		constexpr auto MainBladesCollision = 0x878; // UStaticMeshComponent*
		constexpr auto TailBladesCollision = 0x880; // UStaticMeshComponent*
	}

	namespace n_UEnvQueryNode { // : UObject
		constexpr auto VerNum = 0x28; // int
	}

	namespace n_ABP_AK74MGP25_UGL_Desert_HE_C { // : ABP_AK74MGP25_UGL_Desert_Parent_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UEnvQueryTest_Trace { // : UEnvQueryTest
		constexpr auto TraceData = 0x1c0; // FEnvTraceData
		constexpr auto TraceFromContext = 0x1f0; // FAIDataProviderBoolValue
		constexpr auto ItemHeightOffset = 0x220; // FAIDataProviderFloatValue
		constexpr auto ContextHeightOffset = 0x250; // FAIDataProviderFloatValue
		constexpr auto Context = 0x280; // UEnvQueryContext*
	}

	namespace n_UMaterialExpressionArcsineFast { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_ABP_L85A2_SUSAT_C { // : ABP_L85A2_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
		constexpr auto Scope = 0x7b8; // UStaticMeshComponent*
	}

	namespace n_UDistributionFloatConstantCurve { // : UDistributionFloat
		constexpr auto ConstantCurve = 0x38; // FInterpCurveFloat
	}

	namespace n_UWidgetBlueprintGeneratedClass { // : UBlueprintGeneratedClass
		constexpr auto WidgetTree = 0x2e0; // UWidgetTree*
		constexpr auto bAllowTemplate = 0x2e8; // char : 1
		constexpr auto bAllowDynamicCreation = 0x2e8; // char : 1
		constexpr auto bValidTemplate = 0x2e8; // char : 1
		constexpr auto bTemplateInitialized = 0x2e8; // char : 1
		constexpr auto bCookedTemplate = 0x2e8; // char : 1
		constexpr auto bClassRequiresNativeTick = 0x2e8; // char : 1
		constexpr auto Bindings = 0x2f0; // TArray<FDelegateRuntimeBinding>
		constexpr auto Animations = 0x300; // TArray<UWidgetAnimation*>
		constexpr auto NamedSlots = 0x310; // TArray<FName>
		constexpr auto TemplateAsset = 0x320; // UUserWidget*
		constexpr auto Template = 0x348; // UUserWidget*
	}

	namespace n_UScrollBarWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto ScrollBarStyle = 0x30; // FScrollBarStyle
	}

	namespace n_UTimelineComponent { // : UActorComponent
		constexpr auto TheTimeline = 0xd8; // FTimeline
		constexpr auto bIgnoreTimeDilation = 0x170; // char : 1
	}

	namespace n_UInAppPurchaseRestoreCallbackProxy { // : UObject
		constexpr auto OnSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto OnFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_USQOptionsWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto OptionsStyle = 0x30; // FSQOptionsStyle
	}

	namespace n_USQSoldierRagdollComponent { // : UActorComponent
		constexpr auto TimeTillAutoGetUp = 0xd8; // float
		constexpr auto AutoGetUpRetryFrequency = 0xdc; // float
		constexpr auto RecoveryBlendSeconds = 0xe0; // float
		constexpr auto FreezeBodyCheckFrequency = 0xe4; // float
		constexpr auto PelvisBoneName = 0xe8; // FName
		constexpr auto RagdollPhysicsAsset = 0xf0; // UPhysicsAsset*
		constexpr auto CorrectionBaseRatio = 0xf8; // float
		constexpr auto CorrectionMaxAddedRatio = 0xfc; // float
		constexpr auto ErrorStateSecondsToMaxRatio = 0x100; // float
		constexpr auto LinearErrorThreshold = 0x104; // float
		constexpr auto LinearVelocitySleepThreshold = 0x108; // float
		constexpr auto BulletImpactMultiplier = 0x10c; // float
		constexpr auto ExplosionImpactMultiplier = 0x110; // float
		constexpr auto SecondsWithVehicleCollision = 0x114; // float
		constexpr auto RagdollState = 0x119; // ESQSoldierRagdollReason
		constexpr auto ServerPelvisLocationZeroBased = 0x11c; // FVector_NetQuantize100
		constexpr auto UnragdolLocationOffset = 0x128; // FVector
		constexpr auto bBodyHasSettled = 0x148; // char : 1
		constexpr auto DroppedWeapon = 0x150; // ASQEquipableItem*
		constexpr auto OwnerSoldier = 0x158; // ASQSoldierNew*
		constexpr auto FreezeBodyConstraintHandle = 0x170; // UPhysicsHandleComponent*
	}

	namespace n_UEditableText { // : UWidget
		constexpr auto Text = 0x108; // FText
		constexpr auto TextDelegate = 0x120; // DelegateProperty
		constexpr auto HintText = 0x130; // FText
		constexpr auto HintTextDelegate = 0x148; // DelegateProperty
		constexpr auto WidgetStyle = 0x158; // FEditableTextStyle
		constexpr auto Style = 0x370; // USlateWidgetStyleAsset*
		constexpr auto BackgroundImageSelected = 0x378; // USlateBrushAsset*
		constexpr auto BackgroundImageComposing = 0x380; // USlateBrushAsset*
		constexpr auto CaretImage = 0x388; // USlateBrushAsset*
		constexpr auto Font = 0x390; // FSlateFontInfo
		constexpr auto ColorAndOpacity = 0x3e0; // FSlateColor
		constexpr auto IsReadOnly = 0x408; // bool
		constexpr auto IsPassword = 0x409; // bool
		constexpr auto MinimumDesiredWidth = 0x40c; // float
		constexpr auto IsCaretMovedWhenGainFocus = 0x410; // bool
		constexpr auto SelectAllTextWhenFocused = 0x411; // bool
		constexpr auto RevertTextOnEscape = 0x412; // bool
		constexpr auto ClearKeyboardFocusOnCommit = 0x413; // bool
		constexpr auto SelectAllTextOnCommit = 0x414; // bool
		constexpr auto AllowContextMenu = 0x415; // bool
		constexpr auto KeyboardType = 0x416; // EVirtualKeyboardType
		constexpr auto VirtualKeyboardOptions = 0x417; // FVirtualKeyboardOptions
		constexpr auto VirtualKeyboardDismissAction = 0x418; // EVirtualKeyboardDismissAction
		constexpr auto Justification = 0x419; // ETextJustify
		constexpr auto ShapedTextOptions = 0x41a; // FShapedTextOptions
		constexpr auto OnTextChanged = 0x420; // FScriptMulticastDelegate
		constexpr auto OnTextCommitted = 0x430; // FScriptMulticastDelegate
	}

	namespace n_UAssetManager { // : UObject
		constexpr auto ObjectReferenceList = 0x2c0; // TArray<UObject*>
		constexpr auto bIsGlobalAsyncScanEnvironment = 0x2d0; // bool
		constexpr auto bShouldGuessTypeAndName = 0x2d1; // bool
		constexpr auto bShouldUseSynchronousLoad = 0x2d2; // bool
		constexpr auto bIsLoadingFromPakFiles = 0x2d3; // bool
		constexpr auto bShouldAcquireMissingChunksOnLoad = 0x2d4; // bool
		constexpr auto bOnlyCookProductionAssets = 0x2d5; // bool
		constexpr auto bIsBulkScanning = 0x2d6; // bool
		constexpr auto bIsPrimaryAssetDirectoryCurrent = 0x2d7; // bool
		constexpr auto bIsManagementDatabaseCurrent = 0x2d8; // bool
		constexpr auto bUpdateManagementDatabaseAfterScan = 0x2d9; // bool
		constexpr auto bIncludeOnlyOnDiskAssets = 0x2da; // bool
		constexpr auto NumberOfSpawnedNotifications = 0x2dc; // int
	}

	namespace n_UImageSequenceProtocol_EXR { // : UImageSequenceProtocol
		constexpr auto bCompressed = 0xd8; // bool
		constexpr auto CaptureGamut = 0xd9; // EHDRCaptureGamut
	}

	namespace n_USQCompassPlayer { // : USQCompassBaseUnit
		constexpr auto MedicIcon = 0x238; // UImage*
		constexpr auto ColorHealthy = 0x240; // FLinearColor
		constexpr auto ColorWounded = 0x250; // FLinearColor
		constexpr auto ColorDown = 0x260; // FLinearColor
		constexpr auto ColorInvisible = 0x270; // FLinearColor
		constexpr auto TexturePlayer = 0x280; // UTexture2D*
		constexpr auto TextureSL = 0x288; // UTexture2D*
		constexpr auto TextureMedic = 0x290; // UTexture2D*
		constexpr auto PlayerIconScale = 0x298; // float
		constexpr auto SLPlayerIconScale = 0x29c; // float
		constexpr auto MedicPlayerIconScale = 0x2a0; // float
		constexpr auto MedicIconScale = 0x2a4; // float
		constexpr auto PlayerState = 0x2a8; // ASQPlayerState*
	}

	namespace n_ABP_AK74MGP25_1P63_UGL_Desert_HE_C { // : ABP_AK74MGP25_1P63_UGL_Desert_Parent_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_ABP_M4A1_M68_Founders_C { // : ABP_M4A1_M68_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_USQVoteSessionAuthority { // : USQVoteSession
		constexpr auto AccessFilter = 0x88; // ESQAdminAccessLevels
		constexpr auto TeamFilter = 0x90; // TArray<int>
		constexpr auto Voters = 0xa0; // TArray<USQVotingComponent*>
		constexpr auto RecordedVotes = 0xb0; // TArray<FName>
		constexpr auto RS_OnResult = 0xc0; // FScriptMulticastDelegate
		constexpr auto RS_OnPresentationEnded = 0xd0; // FScriptMulticastDelegate
		constexpr auto HasChanges = 0xe0; // bool
		constexpr auto IsFinished = 0xe1; // bool
		constexpr auto HasPresentationEnded = 0xe2; // bool
		constexpr auto WinnerId = 0xe4; // FName
	}

	namespace n_UPlatformInterfaceWebResponse { // : UObject
		constexpr auto OriginalURL = 0x28; // FString
		constexpr auto ResponseCode = 0x38; // int
		constexpr auto Tag = 0x3c; // int
		constexpr auto StringResponse = 0x40; // FString
		constexpr auto BinaryResponse = 0x50; // TArray<char>
	}

	namespace n_UParticleModuleAttractorPoint { // : UParticleModuleAttractorBase
		constexpr auto Position = 0x30; // FRawDistributionVector
		constexpr auto Range = 0x80; // FRawDistributionFloat
		constexpr auto Strength = 0xb8; // FRawDistributionFloat
		constexpr auto StrengthByDistance = 0xf0; // char : 1
		constexpr auto bAffectBaseVelocity = 0xf0; // char : 1
		constexpr auto bOverrideVelocity = 0xf0; // char : 1
		constexpr auto bUseWorldSpacePosition = 0xf0; // char : 1
		constexpr auto Positive_X = 0xf0; // char : 1
		constexpr auto Positive_Y = 0xf0; // char : 1
		constexpr auto Positive_Z = 0xf0; // char : 1
		constexpr auto Negative_X = 0xf0; // char : 1
		constexpr auto Negative_Y = 0xf1; // char : 1
		constexpr auto Negative_Z = 0xf1; // char : 1
	}

	namespace n_UMaterialExpressionTextureSample { // : UMaterialExpressionTextureBase
		constexpr auto Coordinates = 0x50; // FExpressionInput
		constexpr auto TextureObject = 0x64; // FExpressionInput
		constexpr auto MipValue = 0x78; // FExpressionInput
		constexpr auto CoordinatesDX = 0x8c; // FExpressionInput
		constexpr auto CoordinatesDY = 0xa0; // FExpressionInput
		constexpr auto AutomaticViewMipBiasValue = 0xb4; // FExpressionInput
		constexpr auto MipValueMode = 0xc8; // ETextureMipValueMode
		constexpr auto SamplerSource = 0xc9; // ESamplerSourceMode
		constexpr auto ConstCoordinate = 0xcc; // uint32
		constexpr auto ConstMipValue = 0xd0; // int
		constexpr auto AutomaticViewMipBias = 0xd4; // char : 1
	}

	namespace n_ABP_AK74M_Tracer_Desert_C { // : ABP_AK74M_Tracer_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UAssetManagerSettings { // : UDeveloperSettings
		constexpr auto PrimaryAssetTypesToScan = 0x38; // TArray<FPrimaryAssetTypeInfo>
		constexpr auto DirectoriesToExclude = 0x48; // TArray<FDirectoryPath>
		constexpr auto PrimaryAssetRules = 0x58; // TArray<FPrimaryAssetRulesOverride>
		constexpr auto CustomPrimaryAssetRules = 0x68; // TArray<FPrimaryAssetRulesCustomOverride>
		constexpr auto bOnlyCookProductionAssets = 0x78; // bool
		constexpr auto bShouldManagerDetermineTypeAndName = 0x79; // bool
		constexpr auto bShouldGuessTypeAndNameInEditor = 0x7a; // bool
		constexpr auto bShouldAcquireMissingChunksOnLoad = 0x7b; // bool
		constexpr auto PrimaryAssetIdRedirects = 0x80; // TArray<FAssetManagerRedirect>
		constexpr auto PrimaryAssetTypeRedirects = 0x90; // TArray<FAssetManagerRedirect>
		constexpr auto AssetPathRedirects = 0xa0; // TArray<FAssetManagerRedirect>
		constexpr auto MetaDataTagsForAssetRegistry = 0xb0; // TSet<FName>
	}

	namespace n_UAsyncActionLoadPrimaryAssetClass { // : UAsyncActionLoadPrimaryAssetBase
		constexpr auto Completed = 0x78; // FScriptMulticastDelegate
	}

	namespace n_UMaterialExpressionLinearInterpolate { // : UMaterialExpression
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto Alpha = 0x68; // FExpressionInput
		constexpr auto ConstA = 0x7c; // float
		constexpr auto ConstB = 0x80; // float
		constexpr auto ConstAlpha = 0x84; // float
	}

	namespace n_UProjectileMovementComponent { // : UMovementComponent
		constexpr auto InitialSpeed = 0x118; // float
		constexpr auto MaxSpeed = 0x11c; // float
		constexpr auto bRotationFollowsVelocity = 0x120; // char : 1
		constexpr auto bRotationRemainsVertical = 0x120; // char : 1
		constexpr auto bShouldBounce = 0x120; // char : 1
		constexpr auto bInitialVelocityInLocalSpace = 0x120; // char : 1
		constexpr auto bForceSubStepping = 0x120; // char : 1
		constexpr auto bSimulationEnabled = 0x120; // char : 1
		constexpr auto bSweepCollision = 0x120; // char : 1
		constexpr auto bIsHomingProjectile = 0x120; // char : 1
		constexpr auto bBounceAngleAffectsFriction = 0x121; // char : 1
		constexpr auto bIsSliding = 0x121; // char : 1
		constexpr auto bInterpMovement = 0x121; // char : 1
		constexpr auto bInterpRotation = 0x121; // char : 1
		constexpr auto PreviousHitTime = 0x124; // float
		constexpr auto PreviousHitNormal = 0x128; // FVector
		constexpr auto ProjectileGravityScale = 0x134; // float
		constexpr auto Buoyancy = 0x138; // float
		constexpr auto Bounciness = 0x13c; // float
		constexpr auto Friction = 0x140; // float
		constexpr auto BounceVelocityStopSimulatingThreshold = 0x144; // float
		constexpr auto MinFrictionFraction = 0x148; // float
		constexpr auto OnProjectileBounce = 0x150; // FScriptMulticastDelegate
		constexpr auto OnProjectileStop = 0x160; // FScriptMulticastDelegate
		constexpr auto HomingAccelerationMagnitude = 0x170; // float
		constexpr auto HomingTargetComponent = 0x174; // TWeakObjectPtr<USceneComponent>
		constexpr auto MaxSimulationTimeStep = 0x17c; // float
		constexpr auto MaxSimulationIterations = 0x180; // int
		constexpr auto BounceAdditionalIterations = 0x184; // int
		constexpr auto InterpLocationTime = 0x188; // float
		constexpr auto InterpRotationTime = 0x18c; // float
		constexpr auto InterpLocationMaxLagDistance = 0x190; // float
		constexpr auto InterpLocationSnapToTargetDistance = 0x194; // float
	}

	namespace n_USQCreateSquadButton { // : USQBaseButton
		constexpr auto bUsesCustomName = 0x2e8; // bool
		constexpr auto OwnerPlayerState = 0x2f0; // ASQPlayerState*
		constexpr auto OwnerPlayerController = 0x2f8; // ASQPlayerController*
		constexpr auto SquadNameTextBox = 0x300; // UEditableTextBox*
		constexpr auto OnNewSquadCreated = 0x308; // FScriptMulticastDelegate
	}

	namespace n_UAISense_Prediction { // : UAISense
		constexpr auto RegisteredEvents = 0x80; // TArray<FAIPredictionEvent>
	}

	namespace n_UBackgroundBlurSlot { // : UPanelSlot
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UStreamingSettings { // : UDeveloperSettings
		constexpr auto AsyncLoadingThreadEnabled = 0x38; // char : 1
		constexpr auto WarnIfTimeLimitExceeded = 0x38; // char : 1
		constexpr auto TimeLimitExceededMultiplier = 0x3c; // float
		constexpr auto TimeLimitExceededMinTime = 0x40; // float
		constexpr auto MinBulkDataSizeForAsyncLoading = 0x44; // int
		constexpr auto UseBackgroundLevelStreaming = 0x48; // char : 1
		constexpr auto AsyncLoadingUseFullTimeLimit = 0x48; // char : 1
		constexpr auto AsyncLoadingTimeLimit = 0x4c; // float
		constexpr auto PriorityAsyncLoadingExtraTime = 0x50; // float
		constexpr auto LevelStreamingActorsUpdateTimeLimit = 0x54; // float
		constexpr auto PriorityLevelStreamingActorsUpdateExtraTime = 0x58; // float
		constexpr auto LevelStreamingComponentsRegistrationGranularity = 0x5c; // int
		constexpr auto LevelStreamingUnregisterComponentsTimeLimit = 0x60; // float
		constexpr auto LevelStreamingComponentsUnregistrationGranularity = 0x64; // int
		constexpr auto EventDrivenLoaderEnabled = 0x68; // char : 1
	}

	namespace n_UMovieSceneMediaTrack { // : UMovieSceneNameableTrack
		constexpr auto MediaSections = 0x58; // TArray<UMovieSceneSection*>
	}

	namespace n_USQHelicopterMovementComponent { // : USQMovementComponentBase
		constexpr auto BrakingDecelerationFlying = 0x1c0; // float
		constexpr auto MaxFlySpeed = 0x1c4; // float
		constexpr auto MaxAcceleration = 0x1c8; // float
		constexpr auto AirFriction = 0x1cc; // float
		constexpr auto BrakingFriction = 0x1d0; // float
		constexpr auto BrakingFrictionFactor = 0x1d4; // float
		constexpr auto LinearDamping = 0x1d8; // float
		constexpr auto LinearDampingCurve = 0x1e0; // UCurveFloat*
		constexpr auto bUseSeparateBrakingFriction = 0x1e8; // char : 1
		constexpr auto GravityScale = 0x1ec; // float
		constexpr auto Mass = 0x1f0; // float
		constexpr auto bEnablePhysicsInteraction = 0x1f4; // char : 1
		constexpr auto TouchForceFactor = 0x1f8; // float
		constexpr auto MinTouchForce = 0x1fc; // float
		constexpr auto MaxTouchForce = 0x200; // float
		constexpr auto bTouchForceScaledToMass = 0x204; // char : 1
		constexpr auto PenetrationPullbackDistance = 0x208; // float
		constexpr auto PenetrationOverlapCheckInflation = 0x20c; // float
		constexpr auto MoveIgnoreFirstBlockingOverlap = 0x210; // bool
		constexpr auto OnImpact = 0x218; // FScriptMulticastDelegate
		constexpr auto OnRep_Physics = 0x228; // FScriptMulticastDelegate
		constexpr auto AllowablePositionErrorSquared = 0x238; // float
		constexpr auto MinProxyMovementPredictionSpeed = 0x23c; // float
		constexpr auto AnalogInputModifier = 0x240; // float
		constexpr auto PendingImpulseToApply = 0x244; // FVector
		constexpr auto PendingForceToApply = 0x250; // FVector
		constexpr auto bForceMaxAccel = 0x25c; // char : 1
		constexpr auto PawnOwner = 0x260; // APawn*
		constexpr auto UpdatedComponent = 0x268; // UPrimitiveComponent*
		constexpr auto bIsSimulatingPhysics = 0x280; // bool
	}

	namespace n_UUniformScalar { // : UFieldNodeFloat
		constexpr auto Magnitude = 0xd8; // float
	}

	namespace n_UButtonWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto ButtonStyle = 0x30; // FButtonStyle
	}

	namespace n_UBTTask_SetTagCooldown { // : UBTTaskNode
		constexpr auto CooldownTag = 0x70; // FGameplayTag
		constexpr auto bAddToExistingDuration = 0x78; // bool
		constexpr auto CooldownDuration = 0x7c; // float
	}

	namespace n_UWheeledVehicleMovementComponentTank { // : UWheeledVehicleMovementComponent
		constexpr auto EngineSetup = 0x2d8; // FVehicleTankEngineData
		constexpr auto TransmissionSetup = 0x378; // FVehicleTankTransmissionData
		constexpr auto RawBothTracksThrottleInput = 0x3b8; // float
		constexpr auto RawLeftTrackThrottleInput = 0x3bc; // float
		constexpr auto RawRightTrackThrottleInput = 0x3c0; // float
		constexpr auto BothTracksThrottleInput = 0x3c4; // float
		constexpr auto LeftTrackThrottleInput = 0x3c8; // float
		constexpr auto RightTrackThrottleInput = 0x3cc; // float
		constexpr auto WheelSpeeds = 0x3d0; // TArray<float>
		constexpr auto WheelAngles = 0x3e0; // TArray<float>
		constexpr auto LeftTrackSpeed = 0x3f0; // float
		constexpr auto RightTrackSpeed = 0x3f4; // float
	}

	namespace n_UMovieSceneEventTrack { // : UMovieSceneNameableTrack
		constexpr auto bFireEventsWhenForwards = 0x58; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0x58; // char : 1
		constexpr auto EventPosition = 0x5c; // EFireEventsAtPosition
		constexpr auto EventReceivers = 0x60; // TArray<FMovieSceneObjectBindingID>
		constexpr auto Sections = 0x70; // TArray<UMovieSceneSection*>
	}

	namespace n_ASQGroundVehicle { // : ASQVehicle
		constexpr auto VehicleEffectsQualitySettings = 0x820; // TArray<FSQVehicleEffectsQualitySetting>
		constexpr auto VehicleEffectsConfig = 0x830; // TArray<FSQVehicleEffectConfig>
		constexpr auto WheelFXSound_RPMRate = 0x840; // FVector2D
		constexpr auto WheelFXSound_LongSlipRate = 0x848; // FVector2D
		constexpr auto WheelFXSound_LatSlipRate = 0x850; // FVector2D
		constexpr auto bEjectOpenSeatsOnHardLanding = 0x858; // bool
		constexpr auto bDrawDebugTraces = 0x859; // bool
		constexpr auto HardLandingCheckTimer = 0x860; // FTimerHandle
		constexpr auto IsFlyingTimer = 0x868; // FTimerHandle
		constexpr auto IsFlyingUpdateInterval = 0x870; // float
		constexpr auto IsHardLandingUpdateInterval = 0x874; // float
		constexpr auto LandingTraceSockets = 0x878; // TArray<FName>
		constexpr auto LandingTraceLenght = 0x888; // float
		constexpr auto bIsFlying = 0x88c; // bool
		constexpr auto LastFlyingZVelocity = 0x890; // float
		constexpr auto EjectZVelocityThreshold = 0x894; // float
		constexpr auto EmergencyTeleportCooldownSeconds = 0x898; // int
		constexpr auto LandingCheckActorsToIgnore = 0x8a0; // TArray<AActor*>
		constexpr auto VehicleCleanupComponent = 0x8b0; // USQVehicleCleanupComponent*
		constexpr auto bShouldSimulate = 0x8b8; // bool
		constexpr auto EngineRPMSound = 0x8c0; // USoundCue*
		constexpr auto EngineRPMAC = 0x8c8; // UAudioComponent*
		constexpr auto EngineExhaustSound = 0x8d0; // USoundCue*
		constexpr auto EngineExhaustStartAC = 0x8d8; // UAudioComponent*
		constexpr auto EngineExhaustAC = 0x8e0; // UAudioComponent*
		constexpr auto EngineExhaustStopAC = 0x8e8; // UAudioComponent*
		constexpr auto EngineStartSound = 0x8f0; // USoundCue*
		constexpr auto EngineCompletedStartAC = 0x8f8; // UAudioComponent*
		constexpr auto EngineCompletedStartSound = 0x900; // USoundCue*
		constexpr auto EngineFailedStartAC = 0x908; // UAudioComponent*
		constexpr auto EngineFailedStartSound = 0x910; // USoundCue*
		constexpr auto EngineStartAC = 0x918; // UAudioComponent*
		constexpr auto EngineStopSound = 0x920; // USoundCue*
		constexpr auto EngineStopAC = 0x928; // UAudioComponent*
		constexpr auto EngineSpeedAC = 0x930; // UAudioComponent*
		constexpr auto WheelFXAC = 0x938; // UAudioComponent*
		constexpr auto LandingSound = 0x940; // USoundCue*
		constexpr auto EngineIdleFadeInAfterEngineStartTime = 0x948; // float
		constexpr auto EngineIdleFadeOutAfterEngineStopTime = 0x94c; // float
		constexpr auto SpringCompressionLandingThreshold = 0x950; // float
		constexpr auto SkidThresholdVelocity = 0x954; // float
		constexpr auto LongSlipSkidThreshold = 0x958; // float
		constexpr auto LateralSlipSkidThreshold = 0x95c; // float
		constexpr auto ExhaustPSC = 0x960; // UParticleSystemComponent*
		constexpr auto bTiresTouchingGround = 0x968; // bool
		constexpr auto bHandbrakeActive = 0x969; // bool
		constexpr auto bIsEngineActive = 0x96a; // bool
		constexpr auto bIsEngineToggleActive = 0x96b; // bool
		constexpr auto bAllowEngineBoosting = 0x96c; // bool
		constexpr auto EngineBoostTorqueMultiplier = 0x970; // float
		constexpr auto bHasEngineBoostBeenPressed = 0x974; // bool
		constexpr auto EngineMovementSounds = 0x978; // TArray<FSQEngineMovementSoundObject>
		constexpr auto ActivateEngineDelay = 0x988; // float
		constexpr auto DeActivateEngineDelay = 0x98c; // float
		constexpr auto GearChangingAlphaLerpSpeed = 0x9a4; // float
		constexpr auto VehicleMovement = 0x9a8; // UWheeledVehicleMovementComponent*
		constexpr auto VehicleRagdollOverlap = 0x9b0; // UBoxComponent*
		constexpr auto RagollOverlapTriggerSpeed = 0x9b8; // float
		constexpr auto CollisionKillSpeedKPH = 0x9bc; // int
		constexpr auto bCollisionsKillSoldiers = 0x9c0; // bool
		constexpr auto WheelInflationRate = 0x9c4; // float
	}

	namespace n_UAISenseConfig { // : UObject
		constexpr auto DebugColor = 0x28; // FColor
		constexpr auto MaxAge = 0x2c; // float
		constexpr auto bStartsEnabled = 0x30; // char : 1
	}

	namespace n_ABP_M4M203_M68_UGL_Woodland_Parent_C { // : ABP_M4M203_M68_UGL_Parent_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UMaterialExpressionOneMinus { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UChaosSolverSettings { // : UDeveloperSettings
		constexpr auto DefaultChaosSolverActorClass = 0x40; // FSoftClassPath
	}

	namespace n_UNullAudioCaptureProtocol { // : UMovieSceneAudioCaptureProtocolBase
		constexpr auto State = 0x50; // EMovieSceneCaptureProtocolState
	}

	namespace n_ADecalActor { // : AActor
		constexpr auto Decal = 0x248; // UDecalComponent*
	}

	namespace n_URuntimeVirtualTexture { // : UObject
		constexpr auto MaterialType = 0x28; // ERuntimeVirtualTextureMaterialType
		constexpr auto bCompressTextures = 0x2c; // bool
		constexpr auto Size = 0x30; // int
		constexpr auto TileSize = 0x34; // int
		constexpr auto TileBorderSize = 0x38; // int
		constexpr auto RemoveLowMips = 0x3c; // int
		constexpr auto bEnable = 0x40; // bool
	}

	namespace n_UBP_MaterialEffects_Tandem_C { // : UBP_MaterialEffects_HEAT_C
		constexpr auto Effects = 0x28; // TMap<USQPhysicalMaterial*, FSQEffectsSet>
	}

	namespace n_UDatasmithImportOptions { // : UObject
		constexpr auto SearchPackagePolicy = 0x28; // EDatasmithImportSearchPackagePolicy
		constexpr auto MaterialConflictPolicy = 0x29; // EDatasmithImportAssetConflictPolicy
		constexpr auto TextureConflictPolicy = 0x2a; // EDatasmithImportAssetConflictPolicy
		constexpr auto StaticMeshActorImportPolicy = 0x2b; // EDatasmithImportActorPolicy
		constexpr auto LightImportPolicy = 0x2c; // EDatasmithImportActorPolicy
		constexpr auto CameraImportPolicy = 0x2d; // EDatasmithImportActorPolicy
		constexpr auto OtherActorImportPolicy = 0x2e; // EDatasmithImportActorPolicy
		constexpr auto MaterialQuality = 0x2f; // EDatasmithImportMaterialQuality
		constexpr auto BaseOptions = 0x34; // FDatasmithImportBaseOptions
		constexpr auto ReimportOptions = 0x48; // FDatasmithReimportOptions
		constexpr auto Filename = 0x50; // FString
		constexpr auto FilePath = 0x60; // FString
	}

	namespace n_UMaterialExpressionBlackBody { // : UMaterialExpression
		constexpr auto Temp = 0x40; // FExpressionInput
	}

	namespace n_ABP_M4M203_M150_UGL_Woodland_Parent_C { // : ABP_Weapon2_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UNamedSlot { // : UContentWidget
		constexpr auto Slots = 0x108; // TArray<UPanelSlot*>
	}

	namespace n_UInterpCurveEdSetup { // : UObject
		constexpr auto Tabs = 0x28; // TArray<FCurveEdTab>
		constexpr auto ActiveTab = 0x38; // int
	}

	namespace n_UMaterialExpressionDistanceFieldGradient { // : UMaterialExpression
		constexpr auto Position = 0x40; // FExpressionInput
	}

	namespace n_UParticleModuleVelocityOverLifetime { // : UParticleModuleVelocityBase
		constexpr auto VelOverLife = 0x38; // FRawDistributionVector
		constexpr auto Absolute = 0x88; // char : 1
	}

	namespace n_UParticleModuleRotationRateBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x29; // char : 1
		constexpr auto LODDuplicate = 0x29; // char : 1
		constexpr auto bSupportsRandomSeed = 0x29; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x29; // char : 1
		constexpr auto LODValidity = 0x2c; // char
	}

	namespace n_UBP_Attachment_M150_SA80_C { // : USQWeaponAttachment_Scope
		constexpr auto MeshTransitionPercentage = 0x4b0; // float
		constexpr auto ADSMesh = 0x4b8; // UStaticMesh*
		constexpr auto ADSMeshTransform = 0x4c0; // FTransform
		constexpr auto NonADSMesh = 0x4f0; // UStaticMesh*
		constexpr auto NonADSMeshTransform = 0x500; // FTransform
		constexpr auto InToADSMeshTransitionSettings = 0x530; // TArray<FSQMeshTransitionSettings>
		constexpr auto OutFromADSMeshTransitionSettings = 0x540; // TArray<FSQMeshTransitionSettings>
	}

	namespace n_ABP_M4A1_M68_Foregrip_Founders_C { // : ABP_M4A1_M68_Foregrip_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UPlayFabLocalizationAPI { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnPlayFabResponse = 0x28; // FScriptMulticastDelegate
		constexpr auto CallAuthenticationContext = 0x90; // UPlayFabAuthenticationContext*
		constexpr auto RequestJsonObj = 0x98; // UPlayFabJsonObject*
		constexpr auto ResponseJsonObj = 0xa0; // UPlayFabJsonObject*
	}

	namespace n_USQAvailability { // : UObject
		constexpr auto Delay = 0x28; // USQRestriction_Delay_Base*
		constexpr auto Cost = 0x30; // USQRestriction_Cost*
		constexpr auto LimitedCount = 0x38; // USQRestriction_Count*
		constexpr auto OtherRestrictions = 0x40; // TArray<USQRestriction_Boolean*>
	}

	namespace n_AChaosSolverActor { // : AActor
		constexpr auto TimeStepMultiplier = 0x248; // float
		constexpr auto CollisionIterations = 0x24c; // int
		constexpr auto PushOutIterations = 0x250; // int
		constexpr auto PushOutPairIterations = 0x254; // int
		constexpr auto ClusterConnectionFactor = 0x258; // float
		constexpr auto ClusterUnionConnectionType = 0x25c; // EClusterConnectionTypeEnum
		constexpr auto DoGenerateCollisionData = 0x25d; // bool
		constexpr auto CollisionFilterSettings = 0x260; // FSolverCollisionFilterSettings
		constexpr auto DoGenerateBreakingData = 0x270; // bool
		constexpr auto BreakingFilterSettings = 0x274; // FSolverBreakingFilterSettings
		constexpr auto DoGenerateTrailingData = 0x284; // bool
		constexpr auto TrailingFilterSettings = 0x288; // FSolverTrailingFilterSettings
		constexpr auto bHasFloor = 0x298; // bool
		constexpr auto FloorHeight = 0x29c; // float
		constexpr auto MassScale = 0x2a0; // float
		constexpr auto ChaosDebugSubstepControl = 0x2a4; // FChaosDebugSubstepControl
		constexpr auto SpriteComponent = 0x2a8; // UBillboardComponent*
		constexpr auto GameplayEventDispatcherComponent = 0x2b0; // UChaosGameplayEventDispatcher*
	}

	namespace n_ABP_RPG7_Thermo_Founders_C { // : ABP_RPG7_Thermo_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
		constexpr auto MuzzleFlashRearComponent3P = 0x7b8; // UParticleSystemComponent*
		constexpr auto BackBlastComponent3P = 0x7c0; // UChildActorComponent*
		constexpr auto MuzzleFlashRearComponent1P = 0x7c8; // UParticleSystemComponent*
		constexpr auto SquadBlast = 0x7d0; // USQBlastComponent*
		constexpr auto BackBlastComponent1P = 0x7d8; // UChildActorComponent*
		constexpr auto BackblastSocket = 0x7e0; // FName
		constexpr auto BackblastEffect1P = 0x7e8; // UParticleSystem*
		constexpr auto BackblastEffect3P = 0x7f0; // UParticleSystem*
	}

	namespace n_UInterpTrackInstProperty { // : UInterpTrackInst
		constexpr auto InterpProperty = 0x28; // UProperty*
		constexpr auto PropertyOuterObjectInst = 0x30; // UObject*
	}

	namespace n_UTestMovieSceneTrack { // : UMovieSceneTrack
		constexpr auto bHighPassFilter = 0x58; // bool
		constexpr auto SectionArray = 0x60; // TArray<UMovieSceneSection*>
	}

	namespace n_UMaterialExpressionPerInstanceFadeAmount { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_AARSharedWorldGameState { // : AGameState
		constexpr auto PreviewImageData = 0x2a8; // TArray<char>
		constexpr auto ARWorldData = 0x2b8; // TArray<char>
		constexpr auto PreviewImageBytesTotal = 0x2c8; // int
		constexpr auto ARWorldBytesTotal = 0x2cc; // int
		constexpr auto PreviewImageBytesDelivered = 0x2d0; // int
		constexpr auto ARWorldBytesDelivered = 0x2d4; // int
	}

	namespace n_USoundNodeConcatenator { // : USoundNode
		constexpr auto InputVolume = 0x40; // TArray<float>
	}

	namespace n_UBP_Attachment_LeupoldScope_Blur_C { // : USQWeaponAttachment_Scope
		constexpr auto MeshTransitionPercentage = 0x4b0; // float
		constexpr auto ADSMesh = 0x4b8; // UStaticMesh*
		constexpr auto ADSMeshTransform = 0x4c0; // FTransform
		constexpr auto NonADSMesh = 0x4f0; // UStaticMesh*
		constexpr auto NonADSMeshTransform = 0x500; // FTransform
		constexpr auto InToADSMeshTransitionSettings = 0x530; // TArray<FSQMeshTransitionSettings>
		constexpr auto OutFromADSMeshTransitionSettings = 0x540; // TArray<FSQMeshTransitionSettings>
	}

	namespace n_UAISenseConfig_Sight { // : UAISenseConfig
		constexpr auto Implementation = 0x48; // UAISense_Sight*
		constexpr auto SightRadius = 0x50; // float
		constexpr auto LoseSightRadius = 0x54; // float
		constexpr auto PeripheralVisionAngleDegrees = 0x58; // float
		constexpr auto DetectionByAffiliation = 0x5c; // FAISenseAffiliationFilter
		constexpr auto AutoSuccessRangeFromLastSeenLocation = 0x60; // float
	}

	namespace n_USocialChatManager { // : UObject
		constexpr auto DirectChannelsByTargetUser = 0x78; // TMap<TWeakObjectPtr<USocialUser>, USocialPrivateMessageChannel*>
		constexpr auto ChatRoomsById = 0xc8; // TMap<FString, USocialChatRoom*>
		constexpr auto ReadOnlyChannelsByDisplayName = 0x118; // TMap<FString, USocialReadOnlyChatChannel*>
		constexpr auto bEnableChatSlashCommands = 0x168; // bool
		constexpr auto GroupChannels = 0x170; // TMap<FUniqueNetIdRepl, USocialGroupChannel*>
	}

	namespace n_ASQFlagScoringRuleset { // : ASQGameRuleSet
		constexpr auto RateOfScoreTick = 0x270; // float
		constexpr auto TeamOneFlagScores = 0x274; // FSQFlagScoreInfo
		constexpr auto TeamTwoFlagScores = 0x290; // FSQFlagScoreInfo
		constexpr auto CaptureZones = 0x2b0; // TArray<USQCaptureZoneComponent*>
	}

	namespace n_USQTrackedVehicleMovementComponent { // : UWheeledVehicleMovementComponentTank
		constexpr auto EngineSetup = 0x2d8; // FVehicleTankEngineData
		constexpr auto TransmissionSetup = 0x378; // FVehicleTankTransmissionData
		constexpr auto RawBothTracksThrottleInput = 0x3b8; // float
		constexpr auto RawLeftTrackThrottleInput = 0x3bc; // float
		constexpr auto RawRightTrackThrottleInput = 0x3c0; // float
		constexpr auto BothTracksThrottleInput = 0x3c4; // float
		constexpr auto LeftTrackThrottleInput = 0x3c8; // float
		constexpr auto RightTrackThrottleInput = 0x3cc; // float
		constexpr auto WheelSpeeds = 0x3d0; // TArray<float>
		constexpr auto WheelAngles = 0x3e0; // TArray<float>
		constexpr auto LeftTrackSpeed = 0x3f0; // float
		constexpr auto RightTrackSpeed = 0x3f4; // float
	}

	namespace n_ALandscapeProxy { // : AActor
		constexpr auto SplineComponent = 0x248; // ULandscapeSplinesComponent*
		constexpr auto LandscapeGuid = 0x250; // FGuid
		constexpr auto LandscapeSectionOffset = 0x260; // FIntPoint
		constexpr auto MaxLODLevel = 0x268; // int
		constexpr auto LODDistanceFactor = 0x26c; // float
		constexpr auto LODFalloff = 0x270; // ELandscapeLODFalloff
		constexpr auto ComponentScreenSizeToUseSubSections = 0x274; // float
		constexpr auto LOD0ScreenSize = 0x278; // float
		constexpr auto LOD0DistributionSetting = 0x27c; // float
		constexpr auto LODDistributionSetting = 0x280; // float
		constexpr auto TessellationComponentScreenSize = 0x284; // float
		constexpr auto UseTessellationComponentScreenSizeFalloff = 0x288; // bool
		constexpr auto TessellationComponentScreenSizeFalloff = 0x28c; // float
		constexpr auto OccluderGeometryLOD = 0x290; // int
		constexpr auto StaticLightingLOD = 0x294; // int
		constexpr auto DefaultPhysMaterial = 0x298; // UPhysicalMaterial*
		constexpr auto StreamingDistanceMultiplier = 0x2a0; // float
		constexpr auto LandscapeMaterial = 0x2a8; // UMaterialInterface*
		constexpr auto LandscapeHoleMaterial = 0x2b0; // UMaterialInterface*
		constexpr auto LandscapeMaterialsOverride = 0x2b8; // TArray<FLandscapeProxyMaterialOverride>
		constexpr auto RuntimeVirtualTextures = 0x2c8; // TArray<URuntimeVirtualTexture*>
		constexpr auto VirtualTextureNumLods = 0x2d8; // int
		constexpr auto VirtualTextureLodBias = 0x2dc; // int
		constexpr auto VirtualTextureRenderPassType = 0x2e0; // ERuntimeVirtualTextureMainPassType
		constexpr auto NegativeZBoundsExtension = 0x2e4; // float
		constexpr auto PositiveZBoundsExtension = 0x2e8; // float
		constexpr auto LandscapeComponents = 0x2f0; // TArray<ULandscapeComponent*>
		constexpr auto CollisionComponents = 0x300; // TArray<ULandscapeHeightfieldCollisionComponent*>
		constexpr auto FoliageComponents = 0x310; // TArray<UHierarchicalInstancedStaticMeshComponent*>
		constexpr auto bHasLandscapeGrass = 0x384; // bool
		constexpr auto StaticLightingResolution = 0x388; // float
		constexpr auto bCastStaticShadow = 0x38c; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x38c; // char : 1
		constexpr auto bCastFarShadow = 0x38c; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x390; // char : 1
		constexpr auto LightingChannels = 0x391; // FLightingChannels
		constexpr auto bUseMaterialPositionOffsetInStaticLighting = 0x394; // char : 1
		constexpr auto bRenderCustomDepth = 0x394; // char : 1
		constexpr auto CustomDepthStencilValue = 0x398; // int
		constexpr auto LDMaxDrawDistance = 0x39c; // float
		constexpr auto LightmassSettings = 0x3a0; // FLightmassPrimitiveSettings
		constexpr auto CollisionMipLevel = 0x3b8; // int
		constexpr auto SimpleCollisionMipLevel = 0x3bc; // int
		constexpr auto CollisionThickness = 0x3c0; // float
		constexpr auto BodyInstance = 0x3c8; // FBodyInstance
		constexpr auto bGenerateOverlapEvents = 0x4d8; // char : 1
		constexpr auto bBakeMaterialPositionOffsetIntoCollision = 0x4d8; // char : 1
		constexpr auto ComponentSizeQuads = 0x4dc; // int
		constexpr auto SubsectionSizeQuads = 0x4e0; // int
		constexpr auto NumSubsections = 0x4e4; // int
		constexpr auto bUsedForNavigation = 0x4e8; // char : 1
		constexpr auto bUseDynamicMaterialInstance = 0x4ec; // bool
		constexpr auto NavigationGeometryGatheringMode = 0x4ed; // ENavDataGatheringMode
		constexpr auto bUseLandscapeForCullingInvisibleHLODVertices = 0x4ee; // bool
		constexpr auto bHasLayersContent = 0x4ef; // bool
		constexpr auto WeightmapUsageMap = 0x4f0; // TMap<UTexture2D*, ULandscapeWeightmapUsage*>
	}

	namespace n_UImageSequenceProtocol_BMP { // : UImageSequenceProtocol
		constexpr auto State = 0x50; // EMovieSceneCaptureProtocolState
	}

	namespace n_UMovieScenePrimitiveMaterialSection { // : UMovieSceneSection
		constexpr auto MaterialChannel = 0xe0; // FMovieSceneObjectPathChannel
	}

	namespace n_USQRotorsAnimInstance { // : USQAnimInstance
		constexpr auto RotorMovementComponent = 0x290; // USQRotorVehicleMovementComponent*
		constexpr auto RotationsMap = 0x298; // TMap<FName, FRotator>
	}

	namespace n_UBP_Attachment_M150_SA80_Blur_C { // : USQWeaponAttachment_Scope
		constexpr auto MeshTransitionPercentage = 0x4b0; // float
		constexpr auto ADSMesh = 0x4b8; // UStaticMesh*
		constexpr auto ADSMeshTransform = 0x4c0; // FTransform
		constexpr auto NonADSMesh = 0x4f0; // UStaticMesh*
		constexpr auto NonADSMeshTransform = 0x500; // FTransform
		constexpr auto InToADSMeshTransitionSettings = 0x530; // TArray<FSQMeshTransitionSettings>
		constexpr auto OutFromADSMeshTransitionSettings = 0x540; // TArray<FSQMeshTransitionSettings>
	}

	namespace n_UBP_L85A2AG36_StaticInfo_C { // : UBP_L85A2_StaticInfo_C
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_UMaterialExpressionClearCoatNormalCustomOutput { // : UMaterialExpressionCustomOutput
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UTextRenderComponent { // : UPrimitiveComponent
		constexpr auto Text = 0x408; // FText
		constexpr auto TextMaterial = 0x420; // UMaterialInterface*
		constexpr auto Font = 0x428; // UFont*
		constexpr auto HorizontalAlignment = 0x430; // EHorizTextAligment
		constexpr auto VerticalAlignment = 0x431; // EVerticalTextAligment
		constexpr auto TextRenderColor = 0x434; // FColor
		constexpr auto XScale = 0x438; // float
		constexpr auto YScale = 0x43c; // float
		constexpr auto WorldSize = 0x440; // float
		constexpr auto InvDefaultSize = 0x444; // float
		constexpr auto HorizSpacingAdjust = 0x448; // float
		constexpr auto VertSpacingAdjust = 0x44c; // float
		constexpr auto bAlwaysRenderAsText = 0x450; // char : 1
	}

	namespace n_ATriggerCapsule { // : ATriggerBase
		constexpr auto CollisionComponent = 0x248; // UShapeComponent*
	}

	namespace n_ADatasmithSceneActor { // : AActor
		constexpr auto Scene = 0x248; // UDatasmithScene*
		constexpr auto RelatedActors = 0x250; // TMap<FName, AActor*>
	}

	namespace n_UInterpTrackAnimControl { // : UInterpTrackFloatBase
		constexpr auto SlotName = 0x90; // FName
		constexpr auto AnimSeqs = 0x98; // TArray<FAnimControlTrackKey>
		constexpr auto bSkipAnimNotifiers = 0xa8; // char : 1
	}

	namespace n_USQMapWidgetHAB { // : USQMapWidgetDeployable
		constexpr auto bSpawningEnabled = 0x2b0; // char : 1
		constexpr auto bSieged = 0x2b0; // char : 1
		constexpr auto ActivatedTimeStamp = 0x2b4; // float
	}

	namespace n_UNodeMappingContainer { // : UObject
		constexpr auto SourceItems = 0x28; // TMap<FName, FNodeItem>
		constexpr auto TargetItems = 0x78; // TMap<FName, FNodeItem>
		constexpr auto SourceToTarget = 0xc8; // TMap<FName, FName>
		constexpr auto SourceAsset = 0x118; // UObject*
		constexpr auto TargetAsset = 0x140; // UObject*
	}

	namespace n_UBTDecorator_TagCooldown { // : UBTDecorator
		constexpr auto CooldownTag = 0x68; // FGameplayTag
		constexpr auto CooldownDuration = 0x70; // float
		constexpr auto bAddToExistingDuration = 0x74; // bool
		constexpr auto bActivatesCooldown = 0x75; // bool
	}

	namespace n_ABP_AK74MGP25_1P63_UGL_Smoke_C { // : ABP_AK74MGP25_1P63_UGL_Parent_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_ABP_RPG7_Frag_C { // : ABP_RPG7_Parent_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
		constexpr auto MuzzleFlashRearComponent3P = 0x7b8; // UParticleSystemComponent*
		constexpr auto BackBlastComponent3P = 0x7c0; // UChildActorComponent*
		constexpr auto MuzzleFlashRearComponent1P = 0x7c8; // UParticleSystemComponent*
		constexpr auto SquadBlast = 0x7d0; // USQBlastComponent*
		constexpr auto BackBlastComponent1P = 0x7d8; // UChildActorComponent*
		constexpr auto BackblastSocket = 0x7e0; // FName
		constexpr auto BackblastEffect1P = 0x7e8; // UParticleSystem*
		constexpr auto BackblastEffect3P = 0x7f0; // UParticleSystem*
	}

	namespace n_UMaterialExpressionMin { // : UMaterialExpression
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_ASQConstructionResource { // : ASQVehicleResource
		constexpr auto ResourceDropQuantity = 0x248; // float
		constexpr auto ResourceDropRate = 0x24c; // float
		constexpr auto ServerResourceRate = 0x250; // float
		constexpr auto CurrentFob = 0x258; // ASQForwardBase*
		constexpr auto CurrentCaptureZone = 0x260; // AActor*
		constexpr auto ParentInventory = 0x268; // USQVehicleResourceWeaponInventoryComponent*
		constexpr auto MaxResources = 0x278; // int
		constexpr auto Resources = 0x27c; // int
	}

	namespace n_USQCoreStateData { // : UObject
		constexpr auto bIsGlobalData = 0x28; // bool
		constexpr auto bAllowConfigureOnServer = 0x29; // bool
		constexpr auto bAllowConfigureOnClient = 0x2a; // bool
		constexpr auto bCanEverConfigureOnTick = 0x2b; // bool
		constexpr auto TickConfigureServerFrequency = 0x2c; // float
		constexpr auto TickConfigureClientFrequency = 0x30; // float
		constexpr auto TickFunction = 0x38; // FCoreStateDataTickFunction
		constexpr auto ListenerList = 0x98; // TArray<USQCoreStateListener*>
		constexpr auto RepComponentId = 0xb0; // FSQCoreStateId
		constexpr auto bIsVisible = 0xb2; // char : 1
	}

	namespace n_UReplicationGraphNode_GridCell { // : UReplicationGraphNode_ActorList
		constexpr auto DynamicNode = 0x140; // UReplicationGraphNode*
		constexpr auto DormancyNode = 0x148; // UReplicationGraphNode_DormancyNode*
	}

	namespace n_UMaterialExpressionLandscapeGrassOutput { // : UMaterialExpressionCustomOutput
		constexpr auto GrassTypes = 0x40; // TArray<FGrassInput>
	}

	namespace n_USQAnnouncementNotifier { // : UUserWidget
		constexpr auto OnAnnouncementChangedDelegate = 0x230; // FScriptMulticastDelegate
	}

	namespace n_UPrefabExporter { // : UExporter
		constexpr auto SupportedClass = 0x28; // UObject*
		constexpr auto ExportRootScope = 0x30; // UObject*
		constexpr auto FormatExtension = 0x38; // TArray<FString>
		constexpr auto FormatDescription = 0x48; // TArray<FString>
		constexpr auto PreferredFormatIndex = 0x58; // int
		constexpr auto TextIndent = 0x5c; // int
		constexpr auto bText = 0x60; // char : 1
		constexpr auto bSelectedOnly = 0x60; // char : 1
		constexpr auto bForceFileOperations = 0x60; // char : 1
		constexpr auto ExportTask = 0x68; // UAssetExportTask*
	}

	namespace n_UMaterialExpressionParticlePositionWS { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UMovieSceneObjectPropertyTrack { // : UMovieScenePropertyTrack
		constexpr auto PropertyClass = 0x88; // UObject*
	}

	namespace n_USQMapWidgetSoldier { // : USQMapWidgetPawn
		constexpr auto bIsWounded = 0x2b8; // char : 1
		constexpr auto bIsBleeding = 0x2b8; // char : 1
		constexpr auto bIsAlive = 0x2b8; // char : 1
		constexpr auto bIsInVehicle = 0x2b8; // char : 1
		constexpr auto bIsUsingFreeLook = 0x2b8; // char : 1
		constexpr auto LeaderState = 0x2bc; // ESQAuthorityTypes
		constexpr auto SquadId = 0x2c0; // int
		constexpr auto FireTeamId = 0x2c4; // int
		constexpr auto bIsMedic = 0x2c8; // char : 1
		constexpr auto bIsWithinCanSelfSeeHealthSatusRange = 0x2c8; // char : 1
		constexpr auto bCanSelfSeeHealthStatus = 0x2c8; // char : 1
		constexpr auto HealthStatusRange = 0x2cc; // float
		constexpr auto SoldierLocation = 0x2d0; // FVector
		constexpr auto CurrentRole = 0x2e0; // USQRoleSettings*
		constexpr auto SoldierInfo = 0x2e8; // FSQSoldierInfo
		constexpr auto SquadLeaderZOrder = 0x310; // float
		constexpr auto MedicZOrder = 0x314; // float
		constexpr auto VehicleViewConeZOrder = 0x318; // float
	}

	namespace n_ABP_L85A2AG36_ACOG_UGL_HE_C { // : ABP_L85A2AG36_ACOG_UGL_Parent_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UDialogueSoundWaveProxy { // : USoundBase
		constexpr auto SoundClassObject = 0x28; // USoundClass*
		constexpr auto bDebug = 0x30; // char : 1
		constexpr auto bOverrideConcurrency = 0x30; // char : 1
		constexpr auto bOutputToBusOnly = 0x30; // char : 1
		constexpr auto bHasDelayNode = 0x30; // char : 1
		constexpr auto bHasConcatenatorNode = 0x30; // char : 1
		constexpr auto bBypassVolumeScaleForPriority = 0x30; // char : 1
		constexpr auto VirtualizationMode = 0x31; // EVirtualizationMode
		constexpr auto ConcurrencySet = 0x38; // TSet<USoundConcurrency*>
		constexpr auto ConcurrencyOverrides = 0x88; // FSoundConcurrencySettings
		constexpr auto Duration = 0xa8; // float
		constexpr auto MaxDistance = 0xac; // float
		constexpr auto TotalSamples = 0xb0; // float
		constexpr auto Priority = 0xb4; // float
		constexpr auto AttenuationSettings = 0xb8; // USoundAttenuation*
		constexpr auto Modulation = 0xc0; // FSoundModulation
		constexpr auto SoundSubmixObject = 0xd0; // USoundSubmix*
		constexpr auto SoundSubmixSends = 0xd8; // TArray<FSoundSubmixSendInfo>
		constexpr auto SourceEffectChain = 0xe8; // USoundEffectSourcePresetChain*
		constexpr auto BusSends = 0xf0; // TArray<FSoundSourceBusSendInfo>
		constexpr auto PreEffectBusSends = 0x100; // TArray<FSoundSourceBusSendInfo>
	}

	namespace n_UBP_MaterialEffects_Frag_40mm_C { // : UBP_MaterialEffects_Frag_C
		constexpr auto Effects = 0x28; // TMap<USQPhysicalMaterial*, FSQEffectsSet>
	}

	namespace n_URendererOverrideSettings { // : UDeveloperSettings
		constexpr auto bSupportAllShaderPermutations = 0x38; // char : 1
		constexpr auto bForceRecomputeTangents = 0x38; // char : 1
	}

	namespace n_ASQRandomizer_SceneComponent { // : ASQRandomizer
		constexpr auto Root = 0x248; // USceneComponent*
		constexpr auto RandomSeed = 0x250; // int
	}

	namespace n_UTestMovieSceneSequence { // : UMovieSceneSequence
		constexpr auto MovieScene = 0x348; // UMovieScene*
	}

	namespace n_USoundNodeAttenuation { // : USoundNode
		constexpr auto AttenuationSettings = 0x40; // USoundAttenuation*
		constexpr auto AttenuationOverrides = 0x48; // FSoundAttenuationSettings
		constexpr auto bOverrideAttenuation = 0x330; // char : 1
	}

	namespace n_ABP_AK74MGP25_Rifle_C { // : ABP_AK74GP25_Rifle_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UMovieScene3DPathTrack { // : UMovieScene3DConstraintTrack
		constexpr auto ConstraintSections = 0x58; // TArray<UMovieSceneSection*>
	}

	namespace n_UBlendSpace { // : UBlendSpaceBase
		constexpr auto AxisToScaleAnimation = 0x148; // EBlendSpaceAxis
	}

	namespace n_USQDamageType_Thermite { // : USQDamageType
		constexpr auto bCanCauseBleeding = 0x40; // bool
	}

	namespace n_UMovieSceneNameableTrack { // : UMovieSceneTrack
		constexpr auto EvalOptions = 0x50; // FMovieSceneTrackEvalOptions
	}

	namespace n_ABP_L85A2AG36_ElcanLDS_Rifle_C { // : ABP_L85A2AG36_Rifle_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
	}

	namespace n_USQVehicleWheel_Front { // : UVehicleWheel
		constexpr auto CollisionMesh = 0x28; // UStaticMesh*
		constexpr auto bDontCreateShape = 0x30; // bool
		constexpr auto bAutoAdjustCollisionSize = 0x31; // bool
		constexpr auto Offset = 0x34; // FVector
		constexpr auto ShapeRadius = 0x40; // float
		constexpr auto ShapeWidth = 0x44; // float
		constexpr auto Mass = 0x48; // float
		constexpr auto DampingRate = 0x4c; // float
		constexpr auto PhysMatDampingRateMultiplier = 0x50; // float
		constexpr auto SteerAngle = 0x54; // float
		constexpr auto bAffectedByHandbrake = 0x58; // bool
		constexpr auto TireType = 0x60; // UTireType*
		constexpr auto TireConfig = 0x68; // UTireConfig*
		constexpr auto LatStiffMaxLoad = 0x70; // float
		constexpr auto LatStiffValue = 0x74; // float
		constexpr auto LongStiffValue = 0x78; // float
		constexpr auto SuspensionForceOffset = 0x7c; // float
		constexpr auto SuspensionMaxRaise = 0x80; // float
		constexpr auto SuspensionMaxDrop = 0x84; // float
		constexpr auto SuspensionNaturalFrequency = 0x88; // float
		constexpr auto SuspensionDampingRatio = 0x8c; // float
		constexpr auto SweepType = 0x90; // EWheelSweepType
		constexpr auto MaxBrakeTorque = 0x94; // float
		constexpr auto MaxHandBrakeTorque = 0x98; // float
		constexpr auto VehicleSim = 0xa0; // UWheeledVehicleMovementComponent*
		constexpr auto WheelIndex = 0xa8; // int
		constexpr auto DebugLongSlip = 0xac; // float
		constexpr auto DebugLatSlip = 0xb0; // float
		constexpr auto DebugNormalizedTireLoad = 0xb4; // float
		constexpr auto DebugWheelTorque = 0xbc; // float
		constexpr auto DebugLongForce = 0xc0; // float
		constexpr auto DebugLatForce = 0xc4; // float
		constexpr auto Location = 0xc8; // FVector
		constexpr auto OldLocation = 0xd4; // FVector
		constexpr auto Velocity = 0xe0; // FVector
	}

	namespace n_UParticleModuleKillHeight { // : UParticleModuleKillBase
		constexpr auto Height = 0x30; // FRawDistributionFloat
		constexpr auto bAbsolute = 0x68; // char : 1
		constexpr auto bFloor = 0x68; // char : 1
		constexpr auto bApplyPSysScale = 0x68; // char : 1
	}

	namespace n_ASQGameMode_Menu { // : AGameMode
		constexpr auto MatchState = 0x340; // FName
		constexpr auto bDelayedStart = 0x348; // char : 1
		constexpr auto NumSpectators = 0x34c; // int
		constexpr auto NumPlayers = 0x350; // int
		constexpr auto NumBots = 0x354; // int
		constexpr auto MinRespawnDelay = 0x358; // float
		constexpr auto NumTravellingPlayers = 0x35c; // int
		constexpr auto EngineMessageClass = 0x368; // ULocalMessage*
		constexpr auto InactivePlayerArray = 0x370; // TArray<APlayerState*>
		constexpr auto InactivePlayerStateLifeSpan = 0x380; // float
		constexpr auto MaxInactivePlayers = 0x384; // int
		constexpr auto bHandleDedicatedServerReplays = 0x388; // bool
	}

	namespace n_UAISense_Sight { // : UAISense
		constexpr auto MaxTracesPerTick = 0x130; // int
		constexpr auto MinQueriesPerTimeSliceCheck = 0x134; // int
		constexpr auto MaxTimeSlicePerTick = 0x138; // double
		constexpr auto HighImportanceQueryDistanceThreshold = 0x140; // float
		constexpr auto MaxQueryImportance = 0x148; // float
		constexpr auto SightLimitQueryImportance = 0x14c; // float
	}

	namespace n_UDialogueVoice { // : UObject
		constexpr auto Gender = 0x28; // EGrammaticalGender
		constexpr auto Plurality = 0x29; // EGrammaticalNumber
		constexpr auto LocalizationGUID = 0x2c; // FGuid
	}

	namespace n_ASQJoinBeaconClient { // : AOnlineBeaconClient
		constexpr auto PlayerCount = 0x2c8; // int
		constexpr auto QueuePosition = 0x2cc; // int
		constexpr auto ReservedQueueCount = 0x2d0; // int
		constexpr auto PublicQueueCount = 0x2d4; // int
		constexpr auto bIsReservedMember = 0x2d8; // bool
		constexpr auto bHasReplicated = 0x2d9; // bool
		constexpr auto ServerWidget = 0x2e0; // USQServerListItemWidget*
		constexpr auto SecondsToKeepAttemptingReconnect = 0x2e8; // double
	}

	namespace n_UReplicationGraphNode_ActorList { // : UReplicationGraphNode
		constexpr auto AllChildNodes = 0x28; // TArray<UReplicationGraphNode*>
	}

	namespace n_UPanelSlot { // : UVisual
		constexpr auto Parent = 0x28; // UPanelWidget*
		constexpr auto Content = 0x30; // UWidget*
	}

	namespace n_UTextBlockWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto TextBlockStyle = 0x30; // FTextBlockStyle
	}

	namespace n_UBP_SquadGameInstance_C { // : USQGameInstance
		constexpr auto UberGraphFrame = 0x658; // FPointerToUberGraphFrame
		constexpr auto UISaveDataWrapper = 0x660; // USaveDataUIWrapper_C*
		constexpr auto UI Data Changed = 0x668; // FScriptMulticastDelegate
	}

	namespace n_UMaterialExpressionDDY { // : UMaterialExpression
		constexpr auto Value = 0x40; // FExpressionInput
	}

	namespace n_ABP_M4A1_Foregrip_Tracer_Woodland_C { // : ABP_M4A1_Foregrip_Tracer_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_USQGraphNodeComponent { // : UActorComponent
		constexpr auto RouteSelectorPredicate = 0xd8; // URouteSelectorPredicate*
		constexpr auto RouteSelectorVisualizerPredicate = 0xe0; // URouteSelectorPredicate*
		constexpr auto RouteCombinerPredicate = 0xe8; // URouteCombinerPredicate*
		constexpr auto DesignOutgoingLinks = 0xf0; // TSet<USQGraphNodeComponent*>
		constexpr auto Neighbors = 0x140; // TArray<USQGraphNodeComponent*>
	}

	namespace n_UAnimNotifyState_Trail { // : UAnimNotifyState
		constexpr auto PSTemplate = 0x30; // UParticleSystem*
		constexpr auto FirstSocketName = 0x38; // FName
		constexpr auto SecondSocketName = 0x40; // FName
		constexpr auto WidthScaleMode = 0x48; // ETrailWidthMode
		constexpr auto WidthScaleCurve = 0x4c; // FName
		constexpr auto bRecycleSpawnedSystems = 0x54; // char : 1
	}

	namespace n_ARectLight { // : ALight
		constexpr auto RectLightComponent = 0x258; // URectLightComponent*
	}

	namespace n_ABP_M4M203_M150_UGL_Smoke_Red_C { // : ABP_M4M203_M150_UGL_Smoke_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UBrushBuilder { // : UObject
		constexpr auto BitmapFilename = 0x28; // FString
		constexpr auto Tooltip = 0x38; // FString
		constexpr auto NotifyBadParams = 0x48; // char : 1
		constexpr auto Vertices = 0x50; // TArray<FVector>
		constexpr auto Polys = 0x60; // TArray<FBuilderPoly>
		constexpr auto Layer = 0x70; // FName
		constexpr auto MergeCoplanars = 0x78; // char : 1
	}

	namespace n_UCameraComponent { // : USceneComponent
		constexpr auto FieldOfView = 0x218; // float
		constexpr auto OrthoWidth = 0x21c; // float
		constexpr auto OrthoNearClipPlane = 0x220; // float
		constexpr auto OrthoFarClipPlane = 0x224; // float
		constexpr auto AspectRatio = 0x228; // float
		constexpr auto bConstrainAspectRatio = 0x22c; // char : 1
		constexpr auto bUseFieldOfViewForLOD = 0x22c; // char : 1
		constexpr auto bLockToHmd = 0x22c; // char : 1
		constexpr auto bUsePawnControlRotation = 0x22c; // char : 1
		constexpr auto ProjectionMode = 0x22d; // ECameraProjectionMode
		constexpr auto PostProcessBlendWeight = 0x260; // float
		constexpr auto PostProcessSettings = 0x290; // FPostProcessSettings
	}

	namespace n_AMaterialInstanceActor { // : AActor
		constexpr auto TargetActors = 0x248; // TArray<AActor*>
	}

	namespace n_UGameplayTagReponseTable { // : UDataAsset
		constexpr auto Entries = 0x30; // TArray<FGameplayTagResponseTableEntry>
	}

	namespace n_UParticleModuleSpawn { // : UParticleModuleSpawnBase
		constexpr auto Rate = 0x38; // FRawDistributionFloat
		constexpr auto RateScale = 0x70; // FRawDistributionFloat
		constexpr auto ParticleBurstMethod = 0xa8; // EParticleBurstMethod
		constexpr auto BurstList = 0xb0; // TArray<FParticleBurst>
		constexpr auto BurstScale = 0xc0; // FRawDistributionFloat
		constexpr auto bApplyGlobalSpawnRateScale = 0xf8; // char : 1
	}

	namespace n_UMaterialExpressionParticleSubUV { // : UMaterialExpressionTextureSample
		constexpr auto bBlend = 0xe0; // char : 1
	}

	namespace n_UMicroTransactionBase { // : UPlatformInterfaceBase
		constexpr auto AvailableProducts = 0x38; // TArray<FPurchaseInfo>
		constexpr auto LastError = 0x48; // FString
		constexpr auto LastErrorSolution = 0x58; // FString
	}

	namespace n_USQVehicleSpawnerSettings { // : USQSettings
		constexpr auto ID = 0x30; // FName
		constexpr auto Data = 0x38; // FDataTableRowHandle
		constexpr auto ModId = 0x48; // FString
	}

	namespace n_ABP_AK74GP25_Rifle_Founders_C { // : ABP_AK74GP25_Rifle_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UEdGraphNode { // : UObject
		constexpr auto DeprecatedPins = 0x38; // TArray<UEdGraphPin_Deprecated*>
		constexpr auto NodePosX = 0x48; // int
		constexpr auto NodePosY = 0x4c; // int
		constexpr auto NodeWidth = 0x50; // int
		constexpr auto NodeHeight = 0x54; // int
		constexpr auto AdvancedPinDisplay = 0x58; // ENodeAdvancedPins
		constexpr auto EnabledState = 0x59; // ENodeEnabledState
		constexpr auto bDisplayAsDisabled = 0x5b; // char : 1
		constexpr auto bUserSetEnabledState = 0x5b; // char : 1
		constexpr auto bIsNodeEnabled = 0x5b; // char : 1
		constexpr auto bHasCompilerMessage = 0x5b; // char : 1
		constexpr auto NodeComment = 0x60; // FString
		constexpr auto ErrorType = 0x70; // int
		constexpr auto ErrorMsg = 0x78; // FString
		constexpr auto NodeGuid = 0x88; // FGuid
	}

	namespace n_UDistributionFloatParticleParameter { // : UDistributionFloatParameterBase
		constexpr auto ParameterName = 0x40; // FName
		constexpr auto MinInput = 0x48; // float
		constexpr auto MaxInput = 0x4c; // float
		constexpr auto MinOutput = 0x50; // float
		constexpr auto MaxOutput = 0x54; // float
		constexpr auto ParamMode = 0x58; // DistributionParamMode
	}

	namespace n_UColorBinding { // : UPropertyBinding
		constexpr auto SourceObject = 0x28; // TWeakObjectPtr<UObject>
		constexpr auto SourcePath = 0x30; // FDynamicPropertyPath
		constexpr auto DestinationProperty = 0x60; // FName
	}

	namespace n_AAIController { // : AController
		constexpr auto bStopAILogicOnUnposses = 0x2f8; // char : 1
		constexpr auto bLOSflag = 0x2f8; // char : 1
		constexpr auto bSkipExtraLOSChecks = 0x2f8; // char : 1
		constexpr auto bAllowStrafe = 0x2f8; // char : 1
		constexpr auto bWantsPlayerState = 0x2f8; // char : 1
		constexpr auto bSetControlRotationFromPawnOrientation = 0x2f8; // char : 1
		constexpr auto PathFollowingComponent = 0x300; // UPathFollowingComponent*
		constexpr auto BrainComponent = 0x308; // UBrainComponent*
		constexpr auto PerceptionComponent = 0x310; // UAIPerceptionComponent*
		constexpr auto ActionsComp = 0x318; // UPawnActionsComponent*
		constexpr auto Blackboard = 0x320; // UBlackboardComponent*
		constexpr auto CachedGameplayTasksComponent = 0x328; // UGameplayTasksComponent*
		constexpr auto DefaultNavigationFilterClass = 0x330; // UNavigationQueryFilter*
		constexpr auto ReceiveMoveCompleted = 0x338; // FScriptMulticastDelegate
	}

	namespace n_USQCoreStateWidget { // : UUserWidget
		constexpr auto UnconfiguredVisibility = 0x230; // ESlateVisibility
		constexpr auto SourceComponent = 0x238; // USQCoreStateWidgetFactory*
		constexpr auto SelectionState = 0x240; // ESQSelectionState
		constexpr auto SelectionInstigator = 0x248; // UObject*
	}

	namespace n_UDatasmithGLTFSceneImportData { // : UDatasmithSceneImportData
		constexpr auto Generator = 0x28; // FString
		constexpr auto Version = 0x38; // float
		constexpr auto Author = 0x40; // FString
		constexpr auto License = 0x50; // FString
		constexpr auto Source = 0x60; // FString
	}

	namespace n_AGeneratedMeshAreaLight { // : ASpotLight
		constexpr auto SpotLightComponent = 0x258; // USpotLightComponent*
	}

	namespace n_USubmixEffectReverbPreset { // : USoundEffectSubmixPreset
		constexpr auto Settings = 0x9c; // FSubmixEffectReverbSettings
	}

	namespace n_UBP_attachment_foregrip_woodland_C { // : UBP_attachment_foregrip_C
		constexpr auto SocketName = 0x498; // FName
		constexpr auto AttachedWeapon = 0x4a0; // ASQWeapon*
		constexpr auto bShowIn1P = 0x4a8; // bool
		constexpr auto bShowIn3P = 0x4a9; // bool
	}

	namespace n_USQCommanderManager { // : UActorComponent
		constexpr auto CommanderState = 0xd8; // ASQCommanderState*
		constexpr auto TeamCommands = 0xe0; // UDataTable*
		constexpr auto Categories = 0xe8; // TArray<FCommanderCategory>
		constexpr auto MinimumSquadSizeForVoting = 0xf8; // int
		constexpr auto MinimumSquadsRequiredForVoting = 0xfc; // int
		constexpr auto VotingTimeSeconds = 0x100; // int
		constexpr auto bDoubleCaptureSpeed = 0x104; // bool
		constexpr auto ActionCooldownExtensionOnNewCommander = 0x108; // float
		constexpr auto VoteCooldownTimeSeconds = 0x10c; // int
		constexpr auto bCommanderActive = 0x130; // bool
	}

	namespace n_ABP_M4A1_M150_Foregrip_Woodland_C { // : ABP_M4A1_M150_Foregrip_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_ABP_M110_Optic_C { // : ABP_GenericRifle_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UPartyBeaconState { // : UObject
		constexpr auto SessionName = 0x28; // FName
		constexpr auto NumConsumedReservations = 0x30; // int
		constexpr auto MaxReservations = 0x34; // int
		constexpr auto NumTeams = 0x38; // int
		constexpr auto NumPlayersPerTeam = 0x3c; // int
		constexpr auto TeamAssignmentMethod = 0x40; // FName
		constexpr auto ReservedHostTeamNum = 0x48; // int
		constexpr auto ForceTeamNum = 0x4c; // int
		constexpr auto bRestrictCrossConsole = 0x50; // bool
		constexpr auto Reservations = 0x58; // TArray<FPartyReservation>
	}

	namespace n_ABP_AK74GP25_UGL_Smoke_C { // : ABP_AK74GP25_UGL_Parent_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_USQCaptureZoneInvasionComponent { // : USQCaptureZoneComponent
		constexpr auto TeamToLockFor = 0x1d0; // int
	}

	namespace n_ASQGameRuleSet { // : AActor
		constexpr auto RulesetStateClass = 0x248; // ASQRulesetState*
		constexpr auto RulesetState = 0x250; // ASQRulesetState*
		constexpr auto bUseTickets = 0x258; // bool
		constexpr auto RoundTimeOverride = 0x25c; // int
		constexpr auto DisplayName = 0x260; // FString
	}

	namespace n_UARTexture { // : UTexture
		constexpr auto TextureType = 0xd0; // EARTextureType
		constexpr auto Timestamp = 0xd4; // float
		constexpr auto ExternalTextureGuid = 0xd8; // FGuid
		constexpr auto Size = 0xe8; // FVector2D
	}

	namespace n_UBP_MapWidgetMapMarker_C { // : USQMapWidgetMapMarker
		constexpr auto UberGraphFrame = 0x2c8; // FPointerToUberGraphFrame
		constexpr auto MarkerImage = 0x2d0; // UImage*
		constexpr auto ScaleBox_1 = 0x2d8; // UScaleBox*
	}

	namespace n_UMaterialExpressionConstant2Vector { // : UMaterialExpression
		constexpr auto R = 0x40; // float
		constexpr auto G = 0x44; // float
	}

	namespace n_UParticleModuleSourceMovement { // : UParticleModuleLocationBase
		constexpr auto SourceMovementScale = 0x30; // FRawDistributionVector
	}

	namespace n_USQMapWidgetDeployable { // : USQMapWidget
		constexpr auto BuildState = 0x2a8; // ESQBuildState
	}

	namespace n_UShockwaveCameraShake_Long_C { // : UCameraShake
		constexpr auto bSingleInstance = 0x28; // char : 1
		constexpr auto OscillationDuration = 0x2c; // float
		constexpr auto OscillationBlendInTime = 0x30; // float
		constexpr auto OscillationBlendOutTime = 0x34; // float
		constexpr auto RotOscillation = 0x38; // FROscillator
		constexpr auto LocOscillation = 0x5c; // FVOscillator
		constexpr auto FOVOscillation = 0x80; // FFOscillator
		constexpr auto AnimPlayRate = 0x8c; // float
		constexpr auto AnimScale = 0x90; // float
		constexpr auto AnimBlendInTime = 0x94; // float
		constexpr auto AnimBlendOutTime = 0x98; // float
		constexpr auto RandomAnimSegmentDuration = 0x9c; // float
		constexpr auto Anim = 0xa0; // UCameraAnim*
		constexpr auto bRandomAnimSegment = 0xa8; // char : 1
		constexpr auto CameraOwner = 0xc0; // APlayerCameraManager*
		constexpr auto ShakeScale = 0x148; // float
		constexpr auto OscillatorTimeRemaining = 0x14c; // float
		constexpr auto AnimInst = 0x150; // UCameraAnimInst*
	}

	namespace n_UMaterialExpressionTextureCoordinate { // : UMaterialExpression
		constexpr auto CoordinateIndex = 0x40; // int
		constexpr auto UTiling = 0x44; // float
		constexpr auto VTiling = 0x48; // float
		constexpr auto UnMirrorU = 0x4c; // char : 1
		constexpr auto UnMirrorV = 0x4c; // char : 1
	}

	namespace n_UParticleModuleTypeDataRibbon { // : UParticleModuleTypeDataBase
		constexpr auto MaxTessellationBetweenParticles = 0x30; // int
		constexpr auto SheetsPerTrail = 0x34; // int
		constexpr auto MaxTrailCount = 0x38; // int
		constexpr auto MaxParticleInTrailCount = 0x3c; // int
		constexpr auto bDeadTrailsOnDeactivate = 0x40; // char : 1
		constexpr auto bDeadTrailsOnSourceLoss = 0x40; // char : 1
		constexpr auto bClipSourceSegement = 0x40; // char : 1
		constexpr auto bEnablePreviousTangentRecalculation = 0x40; // char : 1
		constexpr auto bTangentRecalculationEveryFrame = 0x40; // char : 1
		constexpr auto bSpawnInitialParticle = 0x40; // char : 1
		constexpr auto RenderAxis = 0x44; // ETrailsRenderAxisOption
		constexpr auto TangentSpawningScalar = 0x48; // float
		constexpr auto bRenderGeometry = 0x4c; // char : 1
		constexpr auto bRenderSpawnPoints = 0x4c; // char : 1
		constexpr auto bRenderTangents = 0x4c; // char : 1
		constexpr auto bRenderTessellation = 0x4c; // char : 1
		constexpr auto TilingDistance = 0x50; // float
		constexpr auto DistanceTessellationStepSize = 0x54; // float
		constexpr auto bEnableTangentDiffInterpScale = 0x58; // char : 1
		constexpr auto TangentTessellationScalar = 0x5c; // float
	}

	namespace n_URejoinCheck { // : UObject
		constexpr auto LastKnownStatus = 0x28; // ERejoinStatus
		constexpr auto bRejoinAfterCheck = 0x29; // bool
		constexpr auto bAttemptingRejoin = 0x2a; // bool
	}

	namespace n_UAbilityTask_WaitGameplayEffectRemoved { // : UAbilityTask
		constexpr auto OnRemoved = 0x80; // FScriptMulticastDelegate
		constexpr auto InvalidHandle = 0x90; // FScriptMulticastDelegate
	}

	namespace n_UStaticMeshSimulationComponent { // : UActorComponent
		constexpr auto Simulating = 0xe0; // bool
		constexpr auto bNotifyCollisions = 0xe1; // bool
		constexpr auto ObjectType = 0xe2; // EObjectStateTypeEnum
		constexpr auto Mass = 0xe4; // float
		constexpr auto CollisionType = 0xe8; // ECollisionTypeEnum
		constexpr auto ImplicitType = 0xe9; // EImplicitTypeEnum
		constexpr auto MinLevelSetResolution = 0xec; // int
		constexpr auto MaxLevelSetResolution = 0xf0; // int
		constexpr auto InitialVelocityType = 0xf4; // EInitialVelocityTypeEnum
		constexpr auto InitialLinearVelocity = 0xf8; // FVector
		constexpr auto InitialAngularVelocity = 0x104; // FVector
		constexpr auto DamageThreshold = 0x110; // float
		constexpr auto PhysicalMaterial = 0x118; // UChaosPhysicalMaterial*
		constexpr auto ChaosSolverActor = 0x120; // AChaosSolverActor*
		constexpr auto OnChaosPhysicsCollision = 0x128; // FScriptMulticastDelegate
		constexpr auto SimulatedComponents = 0x148; // TArray<UPrimitiveComponent*>
	}

	namespace n_UBP_SQLayerTeamConfig_C { // : USQLayerTeamConfig
		constexpr auto DisableVehicleDuringStaggingPhase = 0x60; // bool
		constexpr auto Allowed Alliances = 0x68; // TSet<SQEAlliance>
		constexpr auto AllowedFactionSetupTypes = 0xb8; // TSet<ESQFactionSetupType>
		constexpr auto RequiredTags = 0x108; // TSet<ESQFactionSetupTag>
		constexpr auto Intelligence On Enemy = 0x158; // int
	}

	namespace n_UMaterialExpressionMaterialProxyReplace { // : UMaterialExpression
		constexpr auto Realtime = 0x40; // FExpressionInput
		constexpr auto MaterialProxy = 0x54; // FExpressionInput
	}

	namespace n_UVectorFieldAnimated { // : UVectorField
		constexpr auto Texture = 0x48; // UTexture2D*
		constexpr auto ConstructionOp = 0x50; // EVectorFieldConstructionOp
		constexpr auto VolumeSizeX = 0x54; // int
		constexpr auto VolumeSizeY = 0x58; // int
		constexpr auto VolumeSizeZ = 0x5c; // int
		constexpr auto SubImagesX = 0x60; // int
		constexpr auto SubImagesY = 0x64; // int
		constexpr auto FrameCount = 0x68; // int
		constexpr auto FramesPerSecond = 0x6c; // float
		constexpr auto bLoop = 0x70; // char : 1
		constexpr auto NoiseField = 0x78; // UVectorFieldStatic*
		constexpr auto NoiseScale = 0x80; // float
		constexpr auto NoiseMax = 0x84; // float
	}

	namespace n_UPlayFabAuthenticationContext { // : UObject
		constexpr auto ClientSessionTicket = 0x28; // FString
		constexpr auto EntityToken = 0x38; // FString
		constexpr auto DeveloperSecretKey = 0x48; // FString
		constexpr auto PlayFabId = 0x58; // FString
	}

	namespace n_USQNWheeledVehicleMovementComponent { // : UWheeledVehicleMovementComponentNW
		constexpr auto WheelShaderCounts = 0x468; // TArray<int>
		constexpr auto bEnableTurboBoost = 0x478; // bool
		constexpr auto MaxSpeedAllowedForEngineBoosting = 0x47c; // float
		constexpr auto MaxSpeedToAssistWheels = 0x480; // float
		constexpr auto WheelLongForceAssistMultiplier = 0x484; // float
		constexpr auto WheelTorqueAssistMultiplier = 0x488; // float
		constexpr auto MaxWheelRPMDuringWheelAssist = 0x48c; // float
	}

	namespace n_ASQObjective { // : ASQTeamActor
		constexpr auto TicketAdjustmentByObjectiveMeetingTeamUponObjectiveBeingMet = 0x2a0; // int
		constexpr auto TicketAdjustmentByOwningTeamUponObjectiveBeingMet = 0x2a4; // int
		constexpr auto TicketAdjustmentByOpposingTeamUponObjectiveBeingMet = 0x2a8; // int
		constexpr auto bHasObjectiveBeenMet = 0x2ac; // bool
		constexpr auto ObjectiveMetOwningTeamMessage = 0x2b0; // FText
		constexpr auto ObjectiveMetOpposingTeamMessage = 0x2c8; // FText
		constexpr auto ObjectiveShownOwningTeamMessage = 0x2e0; // FText
		constexpr auto ObjectiveShownOpposingTeamMessage = 0x2f8; // FText
		constexpr auto bIsKnownToEveryone = 0x310; // bool
		constexpr auto bIsWaitingToBeShown = 0x311; // bool
		constexpr auto bHiddenUponSpawn = 0x312; // bool
		constexpr auto DistanceRangeForAttackMarker = 0x314; // FVector2D
		constexpr auto DistanceRangeForDefendMarker = 0x31c; // FVector2D
		constexpr auto TeamOneLocationZeroBased = 0x324; // FVector
		constexpr auto TeamTwoLocationZeroBased = 0x330; // FVector
		constexpr auto ObjectiveMetByTeam = 0x33c; // ESQTeam
	}

	namespace n_UMaterialExpressionSquareRoot { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_USQSwitchTeamButton { // : USQBaseButton
		constexpr auto OwnerPlayerController = 0x2e8; // ASQPlayerController*
	}

	namespace n_UIpConnection { // : UNetConnection
		constexpr auto SocketErrorDisconnectDelay = 0x19f0; // float
	}

	namespace n_UComboBoxWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto ComboBoxStyle = 0x30; // FComboBoxStyle
	}

	namespace n_UUserDefinedCaptureProtocol { // : UMovieSceneImageCaptureProtocolBase
		constexpr auto World = 0x58; // UWorld*
	}

	namespace n_ULocalizedOverlays { // : UOverlays
		constexpr auto DefaultOverlays = 0x28; // UBasicOverlays*
		constexpr auto LocaleToOverlaysMap = 0x30; // TMap<FString, UBasicOverlays*>
	}

	namespace n_UMaterialExpressionParticleMacroUV { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_ABP_AK74MGP25_UGL_HE_C { // : ABP_AK74MGP25_UGL_Parent_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UInputAxisKeyDelegateBinding { // : UInputDelegateBinding
		constexpr auto InputAxisKeyDelegateBindings = 0x28; // TArray<FBlueprintInputAxisKeyDelegateBinding>
	}

	namespace n_UAvfMediaSettings { // : UObject
		constexpr auto NativeAudioOut = 0x28; // bool
	}

	namespace n_USQSquadStateDataSquadState { // : USQSquadStateData
		constexpr auto SquadName = 0x118; // FString
		constexpr auto LeaderName = 0x128; // FString
		constexpr auto MemberNum = 0x138; // char
		constexpr auto bIsLocked = 0x13c; // char : 1
		constexpr auto bIsCommandSquad = 0x13c; // char : 1
	}

	namespace n_UMaterialExpressionCustom { // : UMaterialExpression
		constexpr auto code = 0x40; // FString
		constexpr auto OutputType = 0x50; // ECustomMaterialOutputType
		constexpr auto Description = 0x58; // FString
		constexpr auto Inputs = 0x68; // TArray<FCustomInput>
	}

	namespace n_UBP_Attachment_SVDM_Front_Woodland_C { // : USQWeaponAttachment_Scope
		constexpr auto MeshTransitionPercentage = 0x4b0; // float
		constexpr auto ADSMesh = 0x4b8; // UStaticMesh*
		constexpr auto ADSMeshTransform = 0x4c0; // FTransform
		constexpr auto NonADSMesh = 0x4f0; // UStaticMesh*
		constexpr auto NonADSMeshTransform = 0x500; // FTransform
		constexpr auto InToADSMeshTransitionSettings = 0x530; // TArray<FSQMeshTransitionSettings>
		constexpr auto OutFromADSMeshTransitionSettings = 0x540; // TArray<FSQMeshTransitionSettings>
	}

	namespace n_UAISense { // : UObject
		constexpr auto DefaultExpirationAge = 0x28; // float
		constexpr auto NotifyType = 0x2c; // EAISenseNotifyType
		constexpr auto bWantsNewPawnNotification = 0x30; // char : 1
		constexpr auto bAutoRegisterAllPawnsAsSources = 0x30; // char : 1
		constexpr auto PerceptionSystemInstance = 0x38; // UAIPerceptionSystem*
	}

	namespace n_ABP_Projectile_C { // : ASQProjectile
		constexpr auto TracerMesh = 0x490; // UStaticMesh*
		constexpr auto TracerMaterial = 0x498; // UMaterial*
	}

	namespace n_ABP_L85A2AG36_UGL_Smoke_C { // : ABP_L85A2AG36_UGL_Parent_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_USoundNodeBranch { // : USoundNode
		constexpr auto BoolParameterName = 0x40; // FName
	}

	namespace n_ABP_L85A2AG36_ACOG_Rifle_C { // : ABP_L85A2AG36_Rifle_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UFieldNodeVector { // : UFieldNodeBase
		constexpr auto PrimaryComponentTick = 0x30; // FActorComponentTickFunction
		constexpr auto ComponentTags = 0x88; // TArray<FName>
		constexpr auto AssetUserData = 0x98; // TArray<UAssetUserData*>
		constexpr auto bReplicates = 0xac; // char : 1
		constexpr auto bNetAddressable = 0xac; // char : 1
		constexpr auto bAutoActivate = 0xad; // char : 1
		constexpr auto bIsActive = 0xae; // char : 1
		constexpr auto bEditableWhenInherited = 0xae; // char : 1
		constexpr auto bCanEverAffectNavigation = 0xae; // char : 1
		constexpr auto bIsEditorOnly = 0xae; // char : 1
		constexpr auto CreationMethod = 0xb0; // EComponentCreationMethod
		constexpr auto OnComponentActivated = 0xb1; // FScriptMulticastDelegate
		constexpr auto OnComponentDeactivated = 0xb2; // FScriptMulticastDelegate
		constexpr auto UCSModifiedProperties = 0xb8; // TArray<FSimpleMemberReference>
	}

	namespace n_UFireShake_Medium_C { // : UCameraShake
		constexpr auto bSingleInstance = 0x28; // char : 1
		constexpr auto OscillationDuration = 0x2c; // float
		constexpr auto OscillationBlendInTime = 0x30; // float
		constexpr auto OscillationBlendOutTime = 0x34; // float
		constexpr auto RotOscillation = 0x38; // FROscillator
		constexpr auto LocOscillation = 0x5c; // FVOscillator
		constexpr auto FOVOscillation = 0x80; // FFOscillator
		constexpr auto AnimPlayRate = 0x8c; // float
		constexpr auto AnimScale = 0x90; // float
		constexpr auto AnimBlendInTime = 0x94; // float
		constexpr auto AnimBlendOutTime = 0x98; // float
		constexpr auto RandomAnimSegmentDuration = 0x9c; // float
		constexpr auto Anim = 0xa0; // UCameraAnim*
		constexpr auto bRandomAnimSegment = 0xa8; // char : 1
		constexpr auto CameraOwner = 0xc0; // APlayerCameraManager*
		constexpr auto ShakeScale = 0x148; // float
		constexpr auto OscillatorTimeRemaining = 0x14c; // float
		constexpr auto AnimInst = 0x150; // UCameraAnimInst*
	}

	namespace n_UMaterialExpressionSine { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Period = 0x54; // float
	}

	namespace n_ABP_M4_M68_C { // : ABP_M4A1_M68_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UBTService { // : UBTAuxiliaryNode
		constexpr auto Interval = 0x60; // float
		constexpr auto RandomDeviation = 0x64; // float
		constexpr auto bCallTickOnSearchStart = 0x68; // char : 1
		constexpr auto bRestartTimerOnEachActivation = 0x68; // char : 1
	}

	namespace n_UMediaSoundComponent { // : USynthComponent
		constexpr auto Channels = 0x640; // EMediaSoundChannels
		constexpr auto DynamicRateAdjustment = 0x644; // bool
		constexpr auto RateAdjustmentFactor = 0x648; // float
		constexpr auto RateAdjustmentRange = 0x64c; // FFloatRange
		constexpr auto MediaPlayer = 0x660; // UMediaPlayer*
	}

	namespace n_ABP_M4M203_M150_UGL_Parent_Founders_C { // : ABP_Weapon2_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UAIAsyncTaskBlueprintProxy { // : UObject
		constexpr auto OnSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto OnFail = 0x38; // FScriptMulticastDelegate
	}

	namespace n_UButton { // : UContentWidget
		constexpr auto Style = 0x120; // USlateWidgetStyleAsset*
		constexpr auto WidgetStyle = 0x128; // FButtonStyle
		constexpr auto ColorAndOpacity = 0x3a0; // FLinearColor
		constexpr auto BackgroundColor = 0x3b0; // FLinearColor
		constexpr auto ClickMethod = 0x3c0; // EButtonClickMethod
		constexpr auto TouchMethod = 0x3c1; // EButtonTouchMethod
		constexpr auto PressMethod = 0x3c2; // EButtonPressMethod
		constexpr auto IsFocusable = 0x3c3; // bool
		constexpr auto OnClicked = 0x3c8; // FScriptMulticastDelegate
		constexpr auto OnPressed = 0x3d8; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x3e8; // FScriptMulticastDelegate
		constexpr auto OnHovered = 0x3f8; // FScriptMulticastDelegate
		constexpr auto OnUnhovered = 0x408; // FScriptMulticastDelegate
	}

	namespace n_UMaterialExpressionMaterialLayerOutput { // : UMaterialExpressionFunctionOutput
		constexpr auto OutputName = 0x40; // FName
		constexpr auto Description = 0x48; // FString
		constexpr auto SortPriority = 0x58; // int
		constexpr auto A = 0x5c; // FExpressionInput
		constexpr auto bLastPreviewed = 0x70; // char : 1
		constexpr auto ID = 0x74; // FGuid
	}

	namespace n_UWidgetAnimationDelegateBinding { // : UDynamicBlueprintBinding
		constexpr auto WidgetAnimationDelegateBindings = 0x28; // TArray<FBlueprintWidgetAnimationDelegateBinding>
	}

	namespace n_UBP_AK74MGP25_UGL_Parent_StaticInfo_C { // : UBP_AK74GP25_UGL_Parent_StaticInfo_C
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_UEnvQueryInstanceBlueprintWrapper { // : UObject
		constexpr auto QueryID = 0x30; // int
		constexpr auto ItemType = 0x58; // UEnvQueryItemType*
		constexpr auto OptionIndex = 0x60; // int
		constexpr auto OnQueryFinishedEvent = 0x68; // FScriptMulticastDelegate
	}

	namespace n_USQMapMarkerInputComponent { // : UActorComponent
		constexpr auto PrimaryComponentTick = 0x30; // FActorComponentTickFunction
		constexpr auto ComponentTags = 0x88; // TArray<FName>
		constexpr auto AssetUserData = 0x98; // TArray<UAssetUserData*>
		constexpr auto bReplicates = 0xac; // char : 1
		constexpr auto bNetAddressable = 0xac; // char : 1
		constexpr auto bAutoActivate = 0xad; // char : 1
		constexpr auto bIsActive = 0xae; // char : 1
		constexpr auto bEditableWhenInherited = 0xae; // char : 1
		constexpr auto bCanEverAffectNavigation = 0xae; // char : 1
		constexpr auto bIsEditorOnly = 0xae; // char : 1
		constexpr auto CreationMethod = 0xb0; // EComponentCreationMethod
		constexpr auto OnComponentActivated = 0xb1; // FScriptMulticastDelegate
		constexpr auto OnComponentDeactivated = 0xb2; // FScriptMulticastDelegate
		constexpr auto UCSModifiedProperties = 0xb8; // TArray<FSimpleMemberReference>
	}

	namespace n_USQSoldierMedicalComponent { // : USceneComponent
		constexpr auto SoldierHealthPerSecond = 0x218; // float
		constexpr auto ConstructionPointsPerSecondHealth = 0x21c; // float
		constexpr auto AmmoPointsPerSecondHealth = 0x220; // float
	}

	namespace n_UFieldNodeBase { // : UActorComponent
		constexpr auto PrimaryComponentTick = 0x30; // FActorComponentTickFunction
		constexpr auto ComponentTags = 0x88; // TArray<FName>
		constexpr auto AssetUserData = 0x98; // TArray<UAssetUserData*>
		constexpr auto bReplicates = 0xac; // char : 1
		constexpr auto bNetAddressable = 0xac; // char : 1
		constexpr auto bAutoActivate = 0xad; // char : 1
		constexpr auto bIsActive = 0xae; // char : 1
		constexpr auto bEditableWhenInherited = 0xae; // char : 1
		constexpr auto bCanEverAffectNavigation = 0xae; // char : 1
		constexpr auto bIsEditorOnly = 0xae; // char : 1
		constexpr auto CreationMethod = 0xb0; // EComponentCreationMethod
		constexpr auto OnComponentActivated = 0xb1; // FScriptMulticastDelegate
		constexpr auto OnComponentDeactivated = 0xb2; // FScriptMulticastDelegate
		constexpr auto UCSModifiedProperties = 0xb8; // TArray<FSimpleMemberReference>
	}

	namespace n_UBP_Attachment_M150_Noads_Woodland_C { // : USQWeaponAttachment_Scope
		constexpr auto MeshTransitionPercentage = 0x4b0; // float
		constexpr auto ADSMesh = 0x4b8; // UStaticMesh*
		constexpr auto ADSMeshTransform = 0x4c0; // FTransform
		constexpr auto NonADSMesh = 0x4f0; // UStaticMesh*
		constexpr auto NonADSMeshTransform = 0x500; // FTransform
		constexpr auto InToADSMeshTransitionSettings = 0x530; // TArray<FSQMeshTransitionSettings>
		constexpr auto OutFromADSMeshTransitionSettings = 0x540; // TArray<FSQMeshTransitionSettings>
	}

	namespace n_UFileMediaSource { // : UBaseMediaSource
		constexpr auto FilePath = 0x38; // FString
		constexpr auto PrecacheFile = 0x48; // bool
	}

	namespace n_UTimelineTemplate { // : UObject
		constexpr auto TimelineLength = 0x28; // float
		constexpr auto LengthMode = 0x2c; // ETimelineLengthMode
		constexpr auto bAutoPlay = 0x2d; // char : 1
		constexpr auto bLoop = 0x2d; // char : 1
		constexpr auto bReplicated = 0x2d; // char : 1
		constexpr auto bIgnoreTimeDilation = 0x2d; // char : 1
		constexpr auto EventTracks = 0x30; // TArray<FTTEventTrack>
		constexpr auto FloatTracks = 0x40; // TArray<FTTFloatTrack>
		constexpr auto VectorTracks = 0x50; // TArray<FTTVectorTrack>
		constexpr auto LinearColorTracks = 0x60; // TArray<FTTLinearColorTrack>
		constexpr auto MetaDataArray = 0x70; // TArray<FBPVariableMetaDataEntry>
		constexpr auto TimelineGuid = 0x80; // FGuid
		constexpr auto VariableName = 0x90; // FName
		constexpr auto DirectionPropertyName = 0x98; // FName
		constexpr auto UpdateFunctionName = 0xa0; // FName
		constexpr auto FinishedFunctionName = 0xa8; // FName
	}

	namespace n_UMaterialExpressionDistance { // : UMaterialExpression
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_UAnimCompress_RemoveTrivialKeys { // : UAnimCompress
		constexpr auto MaxPosDiff = 0x50; // float
		constexpr auto MaxAngleDiff = 0x54; // float
		constexpr auto MaxScaleDiff = 0x58; // float
	}

	namespace n_UGameplayTask_SpawnActor { // : UGameplayTask
		constexpr auto Success = 0x68; // FScriptMulticastDelegate
		constexpr auto DidNotSpawn = 0x78; // FScriptMulticastDelegate
		constexpr auto ClassToSpawn = 0xa0; // AActor*
	}

	namespace n_ULandscapeGizmoRenderComponent { // : UPrimitiveComponent
		constexpr auto MinDrawDistance = 0x220; // float
		constexpr auto LDMaxDrawDistance = 0x224; // float
		constexpr auto CachedMaxDrawDistance = 0x228; // float
		constexpr auto DepthPriorityGroup = 0x22c; // ESceneDepthPriorityGroup
		constexpr auto ViewOwnerDepthPriorityGroup = 0x22d; // ESceneDepthPriorityGroup
		constexpr auto IndirectLightingCacheQuality = 0x22e; // EIndirectLightingCacheQuality
		constexpr auto LightmapType = 0x22f; // ELightmapType
		constexpr auto bUseMaxLODAsImposter = 0x230; // char : 1
		constexpr auto bNeverDistanceCull = 0x230; // char : 1
		constexpr auto bAlwaysCreatePhysicsState = 0x230; // char : 1
		constexpr auto bGenerateOverlapEvents = 0x230; // char : 1
		constexpr auto bGenerateLocalOverlapEvents = 0x231; // char : 1
		constexpr auto bMultiBodyOverlap = 0x231; // char : 1
		constexpr auto bTraceComplexOnMove = 0x231; // char : 1
		constexpr auto bReturnMaterialOnMove = 0x231; // char : 1
		constexpr auto bUseViewOwnerDepthPriorityGroup = 0x231; // char : 1
		constexpr auto bAllowCullDistanceVolume = 0x231; // char : 1
		constexpr auto bHasMotionBlurVelocityMeshes = 0x231; // char : 1
		constexpr auto bVisibleInReflectionCaptures = 0x232; // char : 1
		constexpr auto bVisibleInRayTracing = 0x232; // char : 1
		constexpr auto bRenderInMainPass = 0x232; // char : 1
		constexpr auto bReceivesDecals = 0x232; // char : 1
		constexpr auto bOwnerNoSee = 0x232; // char : 1
		constexpr auto bOnlyOwnerSee = 0x232; // char : 1
		constexpr auto bTreatAsBackgroundForOcclusion = 0x232; // char : 1
		constexpr auto bUseAsOccluder = 0x232; // char : 1
		constexpr auto bSelectable = 0x233; // char : 1
		constexpr auto bForceMipStreaming = 0x233; // char : 1
		constexpr auto bHasPerInstanceHitProxies = 0x233; // char : 1
		constexpr auto CastShadow = 0x233; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x233; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x233; // char : 1
		constexpr auto bCastDynamicShadow = 0x233; // char : 1
		constexpr auto bCastStaticShadow = 0x233; // char : 1
		constexpr auto bCastVolumetricTranslucentShadow = 0x234; // char : 1
		constexpr auto bSelfShadowOnly = 0x234; // char : 1
		constexpr auto bCastFarShadow = 0x234; // char : 1
		constexpr auto bCastInsetShadow = 0x234; // char : 1
		constexpr auto bCastCinematicShadow = 0x234; // char : 1
		constexpr auto bCastHiddenShadow = 0x234; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x234; // char : 1
		constexpr auto bLightAsIfStatic = 0x234; // char : 1
		constexpr auto bLightAttachmentsAsGroup = 0x235; // char : 1
		constexpr auto bReceiveMobileCSMShadows = 0x235; // char : 1
		constexpr auto bSingleSampleShadowFromStationaryLights = 0x235; // char : 1
		constexpr auto bIgnoreRadialImpulse = 0x235; // char : 1
		constexpr auto bIgnoreRadialForce = 0x235; // char : 1
		constexpr auto bApplyImpulseOnDamage = 0x235; // char : 1
		constexpr auto bReplicatePhysicsToAutonomousProxy = 0x235; // char : 1
		constexpr auto AlwaysLoadOnClient = 0x235; // char : 1
		constexpr auto AlwaysLoadOnServer = 0x236; // char : 1
		constexpr auto bUseEditorCompositing = 0x236; // char : 1
		constexpr auto bRenderCustomDepth = 0x236; // char : 1
		constexpr auto bHasCustomNavigableGeometry = 0x237; // EHasCustomNavigableGeometry
		constexpr auto CanCharacterStepUpOn = 0x239; // ECanBeCharacterBase
		constexpr auto LightingChannels = 0x23a; // FLightingChannels
		constexpr auto CustomDepthStencilWriteMask = 0x23b; // ERendererStencilMask
		constexpr auto CustomDepthStencilValue = 0x23c; // int
		constexpr auto CustomPrimitiveData = 0x240; // FCustomPrimitiveData
		constexpr auto TranslucencySortPriority = 0x250; // int
		constexpr auto VisibilityId = 0x254; // int
		constexpr auto RuntimeVirtualTextures = 0x258; // TArray<URuntimeVirtualTexture*>
		constexpr auto VirtualTextureLodBias = 0x268; // int
		constexpr auto VirtualTextureCullMips = 0x26c; // int
		constexpr auto VirtualTextureMinCoverage = 0x270; // int
		constexpr auto VirtualTextureRenderPassType = 0x274; // ERuntimeVirtualTextureMainPassType
		constexpr auto LpvBiasMultiplier = 0x27c; // float
		constexpr auto BoundsScale = 0x288; // float
		constexpr auto MoveIgnoreActors = 0x298; // TArray<AActor*>
		constexpr auto MoveIgnoreComponents = 0x2a8; // TArray<UPrimitiveComponent*>
		constexpr auto BodyInstance = 0x2c8; // FBodyInstance
		constexpr auto OnComponentHit = 0x3d8; // FScriptMulticastDelegate
		constexpr auto OnComponentBeginOverlap = 0x3d9; // FScriptMulticastDelegate
		constexpr auto OnComponentEndOverlap = 0x3da; // FScriptMulticastDelegate
		constexpr auto OnComponentWake = 0x3db; // FScriptMulticastDelegate
		constexpr auto OnComponentSleep = 0x3dc; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x3de; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x3df; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x3e0; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x3e1; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x3e2; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x3e3; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x3e4; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x3e5; // FScriptMulticastDelegate
		constexpr auto LODParentPrimitive = 0x400; // UPrimitiveComponent*
	}

	namespace n_UPawnSensingComponent { // : UActorComponent
		constexpr auto HearingThreshold = 0xd8; // float
		constexpr auto LOSHearingThreshold = 0xdc; // float
		constexpr auto SightRadius = 0xe0; // float
		constexpr auto SensingInterval = 0xe4; // float
		constexpr auto HearingMaxSoundAge = 0xe8; // float
		constexpr auto bEnableSensingUpdates = 0xec; // char : 1
		constexpr auto bOnlySensePlayers = 0xec; // char : 1
		constexpr auto bSeePawns = 0xec; // char : 1
		constexpr auto bHearNoises = 0xec; // char : 1
		constexpr auto OnSeePawn = 0xf8; // FScriptMulticastDelegate
		constexpr auto OnHearNoise = 0x108; // FScriptMulticastDelegate
		constexpr auto PeripheralVisionAngle = 0x118; // float
		constexpr auto PeripheralVisionCosine = 0x11c; // float
	}

	namespace n_UPointLightComponent { // : ULocalLightComponent
		constexpr auto bUseInverseSquaredFalloff = 0x370; // char : 1
		constexpr auto LightFalloffExponent = 0x374; // float
		constexpr auto SourceRadius = 0x378; // float
		constexpr auto SoftSourceRadius = 0x37c; // float
		constexpr auto SourceLength = 0x380; // float
	}

	namespace n_ABP_M4A1_Foregrip_C { // : ABP_M4A1_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_ABP_AK74_Tracer_Founder_C { // : ABP_AK74_Tracer_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UAbilityTask_WaitVelocityChange { // : UAbilityTask
		constexpr auto OnVelocityChage = 0x80; // FScriptMulticastDelegate
		constexpr auto CachedMovementComponent = 0x90; // UMovementComponent*
	}

	namespace n_UInterpTrackInstDirector { // : UInterpTrackInst
		constexpr auto OldViewTarget = 0x28; // AActor*
	}

	namespace n_USQMapWidgetVehicle { // : USQMapWidgetVehicleSeat
		constexpr auto DefaultIcon = 0x2b8; // UTexture2D*
		constexpr auto DefaultIconRotation = 0x2c0; // float
		constexpr auto StaticUIData = 0x2c8; // USQVehicleUIStaticDataAsset*
		constexpr auto bHoldsOccupant = 0x2d0; // bool
		constexpr auto bHoldsSquadLeader = 0x2d1; // bool
		constexpr auto bHoldsCommander = 0x2d2; // bool
		constexpr auto ClaimingSquadID = 0x2d4; // int
		constexpr auto bIsInClaimingSquad = 0x2d8; // char : 1
		constexpr auto VehicleOccupants = 0x2e0; // TArray<FSQVehicleOccupantInfo>
		constexpr auto SelfInVehicleSeat = 0x2f0; // int
	}

	namespace n_USQSoundNodeLooping { // : USoundNode
		constexpr auto bIgnoreStartingBufferRequests = 0x40; // bool
		constexpr auto StoppingBoolParameterName = 0x44; // FName
		constexpr auto ContinueFiringBoolParameterName = 0x4c; // FName
		constexpr auto QueuedSoundMaxLimitParameterName = 0x54; // FName
		constexpr auto StartingSounds = 0x60; // TArray<USoundWave*>
		constexpr auto LoopingSounds = 0x70; // TArray<USoundWave*>
		constexpr auto FinishingSounds = 0x80; // TArray<USoundWave*>
		constexpr auto MinSamplesToInject = 0x90; // int
		constexpr auto MaxSamplesToInject = 0x94; // int
		constexpr auto SampleRate = 0x98; // int
		constexpr auto bCreateStereoSoundWave = 0x9c; // bool
		constexpr auto SoundConcurrencySettings = 0xa0; // USoundConcurrency*
		constexpr auto MaxDuration = 0xa8; // float
		constexpr auto TestShotCount = 0xac; // int
	}

	namespace n_ABP_RPG7_Frag_2Mag_C { // : ABP_RPG7_Parent_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
		constexpr auto MuzzleFlashRearComponent3P = 0x7b8; // UParticleSystemComponent*
		constexpr auto BackBlastComponent3P = 0x7c0; // UChildActorComponent*
		constexpr auto MuzzleFlashRearComponent1P = 0x7c8; // UParticleSystemComponent*
		constexpr auto SquadBlast = 0x7d0; // USQBlastComponent*
		constexpr auto BackBlastComponent1P = 0x7d8; // UChildActorComponent*
		constexpr auto BackblastSocket = 0x7e0; // FName
		constexpr auto BackblastEffect1P = 0x7e8; // UParticleSystem*
		constexpr auto BackblastEffect3P = 0x7f0; // UParticleSystem*
	}

	namespace n_USoundSourceBus { // : USoundWave
		constexpr auto SourceBusChannels = 0x2c0; // ESourceBusChannels
		constexpr auto SourceBusDuration = 0x2c4; // float
		constexpr auto bAutoDeactivateWhenSilent = 0x2c8; // char : 1
	}

	namespace n_UPhysicsThrusterComponent { // : USceneComponent
		constexpr auto ThrustStrength = 0x218; // float
	}

	namespace n_UAnimCompositeBase { // : UAnimSequenceBase
		constexpr auto Notifies = 0x80; // TArray<FAnimNotifyEvent>
		constexpr auto SequenceLength = 0x90; // float
		constexpr auto RateScale = 0x94; // float
		constexpr auto RawCurveData = 0x98; // FRawCurveTracks
	}

	namespace n_UAbilityTask_WaitAttributeChangeRatioThreshold { // : UAbilityTask
		constexpr auto OnChange = 0x80; // FScriptMulticastDelegate
		constexpr auto ExternalOwner = 0x108; // UAbilitySystemComponent*
	}

	namespace n_UTextBlock { // : UTextLayoutWidget
		constexpr auto Text = 0x128; // FText
		constexpr auto TextDelegate = 0x140; // DelegateProperty
		constexpr auto ColorAndOpacity = 0x150; // FSlateColor
		constexpr auto ColorAndOpacityDelegate = 0x178; // DelegateProperty
		constexpr auto Font = 0x188; // FSlateFontInfo
		constexpr auto StrikeBrush = 0x1d8; // FSlateBrush
		constexpr auto ShadowOffset = 0x260; // FVector2D
		constexpr auto ShadowColorAndOpacity = 0x268; // FLinearColor
		constexpr auto ShadowColorAndOpacityDelegate = 0x278; // DelegateProperty
		constexpr auto MinDesiredWidth = 0x288; // float
		constexpr auto bWrapWithInvalidationPanel = 0x28c; // bool
		constexpr auto bAutoWrapText = 0x28d; // bool
		constexpr auto bSimpleTextMode = 0x28e; // bool
	}

	namespace n_UHighlightsOpenGroupAsync { // : UBlueprintAsyncActionBase
		constexpr auto OnSuccess = 0x30; // FScriptMulticastDelegate
		constexpr auto OnFailure = 0x40; // FScriptMulticastDelegate
	}

	namespace n_UBTDecorator_IsAtLocation { // : UBTDecorator_BlackboardBase
		constexpr auto AcceptableRadius = 0x90; // float
		constexpr auto ParametrizedAcceptableRadius = 0x98; // FAIDataProviderFloatValue
		constexpr auto GeometricDistanceType = 0xc8; // FAIDistanceType
		constexpr auto bUseParametrizedRadius = 0xcc; // char : 1
		constexpr auto bUseNavAgentGoalLocation = 0xcc; // char : 1
		constexpr auto bPathFindingBasedTest = 0xcc; // char : 1
	}

	namespace n_UMaterialExpressionDecalDerivative { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UStaticMesh { // : UStreamableRenderAsset
		constexpr auto MinLOD = 0x60; // FPerPlatformInt
		constexpr auto LpvBiasMultiplier = 0x64; // float
		constexpr auto StaticMaterials = 0x68; // TArray<FStaticMaterial>
		constexpr auto LightmapUVDensity = 0x78; // float
		constexpr auto LightMapResolution = 0x7c; // int
		constexpr auto LightMapCoordinateIndex = 0x80; // int
		constexpr auto DistanceFieldSelfShadowBias = 0x84; // float
		constexpr auto BodySetup = 0x88; // UBodySetup*
		constexpr auto LODForCollision = 0x90; // int
		constexpr auto bGenerateMeshDistanceField = 0x94; // char : 1
		constexpr auto bStripComplexCollisionForConsole = 0x94; // char : 1
		constexpr auto bHasNavigationData = 0x94; // char : 1
		constexpr auto bSupportUniformlyDistributedSampling = 0x94; // char : 1
		constexpr auto bAllowCPUAccess = 0x94; // char : 1
		constexpr auto bSupportGpuUniformlyDistributedSampling = 0x94; // char : 1
		constexpr auto Sockets = 0xb8; // TArray<UStaticMeshSocket*>
		constexpr auto PositiveBoundsExtension = 0xd8; // FVector
		constexpr auto NegativeBoundsExtension = 0xe4; // FVector
		constexpr auto ExtendedBounds = 0xf0; // FBoxSphereBounds
		constexpr auto ElementToIgnoreForTexFactor = 0x10c; // int
		constexpr auto AssetUserData = 0x110; // TArray<UAssetUserData*>
		constexpr auto EditableMesh = 0x128; // UObject*
		constexpr auto ComplexCollisionMesh = 0x130; // UStaticMesh*
		constexpr auto NavCollision = 0x138; // UNavCollisionBase*
	}

	namespace n_AGeometryCollectionRenderLevelSetActor { // : AActor
		constexpr auto TargetVolumeTexture = 0x248; // UVolumeTexture*
		constexpr auto RayMarchMaterial = 0x250; // UMaterial*
		constexpr auto SurfaceTolerance = 0x258; // float
		constexpr auto Isovalue = 0x25c; // float
		constexpr auto Enabled = 0x260; // bool
		constexpr auto RenderVolumeBoundingBox = 0x261; // bool
	}

	namespace n_UAnimCompress_PerTrackCompression { // : UAnimCompress_RemoveLinearKeys
		constexpr auto MaxZeroingThreshold = 0x70; // float
		constexpr auto MaxPosDiffBitwise = 0x74; // float
		constexpr auto MaxAngleDiffBitwise = 0x78; // float
		constexpr auto MaxScaleDiffBitwise = 0x7c; // float
		constexpr auto AllowedRotationFormats = 0x80; // TArray<AnimationCompressionFormat>
		constexpr auto AllowedTranslationFormats = 0x90; // TArray<AnimationCompressionFormat>
		constexpr auto AllowedScaleFormats = 0xa0; // TArray<AnimationCompressionFormat>
		constexpr auto bResampleAnimation = 0xb0; // char : 1
		constexpr auto ResampledFramerate = 0xb4; // float
		constexpr auto MinKeysForResampling = 0xb8; // int
		constexpr auto bUseAdaptiveError = 0xbc; // char : 1
		constexpr auto bUseOverrideForEndEffectors = 0xbc; // char : 1
		constexpr auto TrackHeightBias = 0xc0; // int
		constexpr auto ParentingDivisor = 0xc4; // float
		constexpr auto ParentingDivisorExponent = 0xc8; // float
		constexpr auto bUseAdaptiveError2 = 0xcc; // char : 1
		constexpr auto RotationErrorSourceRatio = 0xd0; // float
		constexpr auto TranslationErrorSourceRatio = 0xd4; // float
		constexpr auto ScaleErrorSourceRatio = 0xd8; // float
		constexpr auto MaxErrorPerTrackRatio = 0xdc; // float
		constexpr auto PerturbationProbeSize = 0xe0; // float
	}

	namespace n_UInterpTrackInstVectorMaterialParam { // : UInterpTrackInst
		constexpr auto MaterialInstances = 0x28; // TArray<UMaterialInstanceDynamic*>
		constexpr auto ResetVectors = 0x38; // TArray<FVector>
		constexpr auto PrimitiveMaterialRefs = 0x48; // TArray<FPrimitiveMaterialRef>
		constexpr auto InstancedTrack = 0x58; // UInterpTrackVectorMaterialParam*
	}

	namespace n_UGameplayTagsSettings { // : UGameplayTagsList
		constexpr auto ImportTagsFromConfig = 0x48; // bool
		constexpr auto WarnOnInvalidTags = 0x49; // bool
		constexpr auto FastReplication = 0x4a; // bool
		constexpr auto InvalidTagCharacters = 0x50; // FString
		constexpr auto CategoryRemapping = 0x60; // TArray<FGameplayTagCategoryRemap>
		constexpr auto GameplayTagTableList = 0x70; // TArray<FSoftObjectPath>
		constexpr auto GameplayTagRedirects = 0x80; // TArray<FGameplayTagRedirect>
		constexpr auto CommonlyReplicatedTags = 0x90; // TArray<FName>
		constexpr auto NumBitsForContainerSize = 0xa0; // int
		constexpr auto NetIndexFirstBitSegment = 0xa4; // int
		constexpr auto RestrictedConfigFiles = 0xa8; // TArray<FRestrictedConfigInfo>
	}

	namespace n_ABP_M4M203_UGL_Parent_C { // : ABP_Weapon2_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UBTDecorator_BlueprintBase { // : UBTDecorator
		constexpr auto AIOwner = 0x68; // AAIController*
		constexpr auto ActorOwner = 0x70; // AActor*
		constexpr auto ObservedKeyNames = 0x78; // TArray<FName>
		constexpr auto bShowPropertyDetails = 0x98; // char : 1
		constexpr auto bCheckConditionOnlyBlackBoardChanges = 0x98; // char : 1
		constexpr auto bIsObservingBB = 0x98; // char : 1
	}

	namespace n_UGameplayAbility { // : UObject
		constexpr auto AbilityTags = 0xa8; // FGameplayTagContainer
		constexpr auto bReplicateInputDirectly = 0xc8; // bool
		constexpr auto RemoteInstanceEnded = 0xc9; // bool
		constexpr auto ReplicationPolicy = 0xce; // EGameplayAbilityReplicationPolicy
		constexpr auto InstancingPolicy = 0xcf; // EGameplayAbilityInstancingPolicy
		constexpr auto bServerRespectsRemoteAbilityCancellation = 0xd0; // bool
		constexpr auto bRetriggerInstancedAbility = 0xd1; // bool
		constexpr auto CurrentActivationInfo = 0xd8; // FGameplayAbilityActivationInfo
		constexpr auto CurrentEventData = 0xf8; // FGameplayEventData
		constexpr auto NetExecutionPolicy = 0x1a8; // EGameplayAbilityNetExecutionPolicy
		constexpr auto CostGameplayEffectClass = 0x1b0; // UGameplayEffect*
		constexpr auto AbilityTriggers = 0x1b8; // TArray<FAbilityTriggerData>
		constexpr auto CooldownGameplayEffectClass = 0x1c8; // UGameplayEffect*
		constexpr auto CancelAbilitiesMatchingTagQuery = 0x1d0; // FGameplayTagQuery
		constexpr auto CancelAbilitiesWithTag = 0x218; // FGameplayTagContainer
		constexpr auto BlockAbilitiesWithTag = 0x238; // FGameplayTagContainer
		constexpr auto ActivationOwnedTags = 0x258; // FGameplayTagContainer
		constexpr auto ActivationRequiredTags = 0x278; // FGameplayTagContainer
		constexpr auto ActivationBlockedTags = 0x298; // FGameplayTagContainer
		constexpr auto SourceRequiredTags = 0x2b8; // FGameplayTagContainer
		constexpr auto SourceBlockedTags = 0x2d8; // FGameplayTagContainer
		constexpr auto TargetRequiredTags = 0x2f8; // FGameplayTagContainer
		constexpr auto TargetBlockedTags = 0x318; // FGameplayTagContainer
		constexpr auto ActiveTasks = 0x358; // TArray<UGameplayTask*>
		constexpr auto CurrentMontage = 0x378; // UAnimMontage*
		constexpr auto bIsActive = 0x3e0; // bool
		constexpr auto bIsCancelable = 0x3e1; // bool
		constexpr auto bIsBlockingOtherAbilities = 0x3e2; // bool
		constexpr auto bMarkPendingKillOnAbilityEnd = 0x3f8; // bool
	}

	namespace n_ABP_BackBlastShockWave_C { // : ABP_Shockwave_C
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
	}

	namespace n_ABP_M4M203_M68_UGL_Smoke_Red_C { // : ABP_M4M203_M68_UGL_Smoke_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_USQFindSessionsCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto WorldContextObject = 0x80; // UObject*
	}

	namespace n_ABP_M4A1_Foregrip_Tracer_Founder_C { // : ABP_M4A1_Foregrip_Tracer_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_ABP_RPG7V2_Heat_2Mag_C { // : ABP_RPG7V2_Heat_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
		constexpr auto MuzzleFlashRearComponent3P = 0x7b8; // UParticleSystemComponent*
		constexpr auto BackBlastComponent3P = 0x7c0; // UChildActorComponent*
		constexpr auto MuzzleFlashRearComponent1P = 0x7c8; // UParticleSystemComponent*
		constexpr auto SquadBlast = 0x7d0; // USQBlastComponent*
		constexpr auto BackBlastComponent1P = 0x7d8; // UChildActorComponent*
		constexpr auto BackblastSocket = 0x7e0; // FName
		constexpr auto BackblastEffect1P = 0x7e8; // UParticleSystem*
		constexpr auto BackblastEffect3P = 0x7f0; // UParticleSystem*
	}

	namespace n_UMaterialExpressionReroute { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_ATriggerBox { // : ATriggerBase
		constexpr auto CollisionComponent = 0x248; // UShapeComponent*
	}

	namespace n_UMaterialExpressionDecalMipmapLevel { // : UMaterialExpression
		constexpr auto TextureSize = 0x40; // FExpressionInput
		constexpr auto ConstWidth = 0x54; // float
		constexpr auto ConstHeight = 0x58; // float
	}

	namespace n_UImageSequenceProtocol_PNG { // : UCompressedImageSequenceProtocol
		constexpr auto CompressionQuality = 0xd8; // int
	}

	namespace n_USQMovementAdjustmentComponent { // : UBoxComponent
		constexpr auto SoldierMovementSpeedMultiplayer = 0x430; // float
	}

	namespace n_UReplicationGraphNode { // : UObject
		constexpr auto AllChildNodes = 0x28; // TArray<UReplicationGraphNode*>
	}

	namespace n_UInterpTrackMove { // : UInterpTrack
		constexpr auto PosTrack = 0x70; // FInterpCurveVector
		constexpr auto EulerTrack = 0x88; // FInterpCurveVector
		constexpr auto LookupTrack = 0xa0; // FInterpLookupTrack
		constexpr auto LookAtGroupName = 0xb0; // FName
		constexpr auto LinCurveTension = 0xb8; // float
		constexpr auto AngCurveTension = 0xbc; // float
		constexpr auto bUseQuatInterpolation = 0xc0; // char : 1
		constexpr auto bShowArrowAtKeys = 0xc0; // char : 1
		constexpr auto bDisableMovement = 0xc0; // char : 1
		constexpr auto bShowTranslationOnCurveEd = 0xc0; // char : 1
		constexpr auto bShowRotationOnCurveEd = 0xc0; // char : 1
		constexpr auto bHide3DTrack = 0xc0; // char : 1
		constexpr auto RotMode = 0xc4; // EInterpTrackMoveRotMode
	}

	namespace n_USceneCaptureComponent { // : USceneComponent
		constexpr auto PrimitiveRenderMode = 0x218; // ESceneCapturePrimitiveRenderMode
		constexpr auto CaptureSource = 0x219; // ESceneCaptureSource
		constexpr auto HiddenComponents = 0x220; // TArray<TWeakObjectPtr<UPrimitiveComponent>>
		constexpr auto HiddenActors = 0x230; // TArray<AActor*>
		constexpr auto ShowOnlyComponents = 0x240; // TArray<TWeakObjectPtr<UPrimitiveComponent>>
		constexpr auto ShowOnlyActors = 0x250; // TArray<AActor*>
		constexpr auto bCaptureEveryFrame = 0x260; // bool
		constexpr auto bCaptureOnMovement = 0x261; // bool
		constexpr auto bAlwaysPersistRenderingState = 0x262; // bool
		constexpr auto LODDistanceFactor = 0x264; // float
		constexpr auto MaxViewDistanceOverride = 0x268; // float
		constexpr auto CaptureSortPriority = 0x26c; // int
		constexpr auto ShowFlagSettings = 0x270; // TArray<FEngineShowFlagsSetting>
		constexpr auto ProfilingEventName = 0x290; // FString
	}

	namespace n_USQRepairToolStaticInfo { // : USQItemStaticInfo
		constexpr auto RepairingWeaponBeginUseMontage = 0x4f8; // UAnimMontage*
		constexpr auto Repairing1pBeginUseMontage = 0x500; // UAnimMontage*
		constexpr auto Repairing3pBeginUseMontage = 0x508; // UAnimMontage*
		constexpr auto RepairingWeaponEndUseMontage = 0x510; // UAnimMontage*
		constexpr auto Repairing1pEndUseMontage = 0x518; // UAnimMontage*
		constexpr auto Repairing3pEndUseMontage = 0x520; // UAnimMontage*
		constexpr auto AltRepairingWeaponBeginUseMontage = 0x528; // UAnimMontage*
		constexpr auto AltRepairing1pBeginUseMontage = 0x530; // UAnimMontage*
		constexpr auto AltRepairing3pBeginUseMontage = 0x538; // UAnimMontage*
		constexpr auto AltRepairingWeaponEndUseMontage = 0x540; // UAnimMontage*
		constexpr auto AltRepairing1pEndUseMontage = 0x548; // UAnimMontage*
		constexpr auto AltRepairing3pEndUseMontage = 0x550; // UAnimMontage*
		constexpr auto RepairingSound = 0x558; // USoundCue*
		constexpr auto RepairingInterval = 0x560; // float
		constexpr auto RepairAmount = 0x564; // float
	}

	namespace n_UMaterialExpressionShadingPathSwitch { // : UMaterialExpression
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto Inputs = 0x54; // FExpressionInput [0x3]
	}

	namespace n_UMovieSceneCapture { // : UObject
		constexpr auto ImageCaptureProtocolType = 0x38; // FSoftClassPath
		constexpr auto AudioCaptureProtocolType = 0x50; // FSoftClassPath
		constexpr auto ImageCaptureProtocol = 0x68; // UMovieSceneImageCaptureProtocolBase*
		constexpr auto AudioCaptureProtocol = 0x70; // UMovieSceneAudioCaptureProtocolBase*
		constexpr auto Settings = 0x78; // FMovieSceneCaptureSettings
		constexpr auto bUseSeparateProcess = 0xe8; // bool
		constexpr auto bCloseEditorWhenCaptureStarts = 0xe9; // bool
		constexpr auto AdditionalCommandLineArguments = 0xf0; // FString
		constexpr auto InheritedCommandLineArguments = 0x100; // FString
	}

	namespace n_USlateAccessibleWidgetData { // : UObject
		constexpr auto bCanChildrenBeAccessible = 0x28; // bool
		constexpr auto AccessibleBehavior = 0x29; // ESlateAccessibleBehavior
		constexpr auto AccessibleSummaryBehavior = 0x2a; // ESlateAccessibleBehavior
		constexpr auto AccessibleText = 0x30; // FText
		constexpr auto AccessibleTextDelegate = 0x48; // DelegateProperty
		constexpr auto AccessibleSummaryText = 0x58; // FText
		constexpr auto AccessibleSummaryTextDelegate = 0x70; // DelegateProperty
	}

	namespace n_Um110_Skeleton_AnimBlueprint_C { // : USQWeaponAnimInstance
		constexpr auto UberGraphFrame = 0x2b0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root_36FDDCA44952F901FCE3BDA066C27974 = 0x2b8; // FAnimNode_Root
		constexpr auto AnimGraphNode_LayeredBoneBlend_FC069B8C463AB2CB5B94C582D3432967 = 0x2e8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_474E5D2C4415F326C524A583A116D6D2 = 0x3a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot_77F7315042296431690793920DE9889C = 0x420; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_B5C87E874575BD8A9FCCDDBD88109C56 = 0x468; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_A4B7138D41D663F9DAD6C8B3F26A3E2F = 0x4b0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_LocalRefPose_3E507276417096D02E5A27982E17835A = 0x4f8; // FAnimNode_RefPose
		constexpr auto AnimGraphNode_Slot_0FC4B1F8462AADA666FB1ABD5DBE91F8 = 0x510; // FAnimNode_Slot
	}

	namespace n_USQGameInstance { // : UGameInstance
		constexpr auto SoliderNetPriorities = 0x168; // TArray<FSQSoliderNetPriorityObject>
		constexpr auto SoldierNetPriorityConeSensitivity = 0x178; // float
		constexpr auto SoldierNetPriorityConeFactor = 0x17c; // float
		constexpr auto SQConnectionCheckHost = 0x180; // ASQConnectionCheckBeaconHostObj*
		constexpr auto SQJoinQueueHost = 0x188; // ASQJoinBeaconHost*
		constexpr auto BeaconHost = 0x190; // AOnlineBeaconHost*
		constexpr auto JoinQueueClient = 0x198; // ASQJoinBeaconClient*
		constexpr auto LastServerAttemptWidget = 0x1a0; // USQServerListItemWidget*
		constexpr auto ActiveFindSessionsCallback = 0x1a8; // USQFindSessionsCallbackProxy*
		constexpr auto ActiveFindFriendsCallback = 0x1b0; // USQFindFriendsCallbackProxy*
		constexpr auto ConnectionCheckClients = 0x1b8; // TMap<FString, ASQConnectionCheckBeaconClient*>
		constexpr auto bSaveServerBrowserResultsToFile = 0x224; // bool
		constexpr auto GameInstanceEvents = 0x340; // USQGameInstanceEvents*
		constexpr auto SquadConfig = 0x348; // USQConfig*
		constexpr auto OnMapIconCreated = 0x350; // FScriptMulticastDelegate
		constexpr auto OnMapIconDestroyed = 0x360; // FScriptMulticastDelegate
		constexpr auto OnWorldOriginLocationChangedEvent = 0x370; // FScriptMulticastDelegate
		constexpr auto UserEnteredPassword = 0x380; // FString
		constexpr auto MusicAudioComponent = 0x390; // UAudioComponent*
		constexpr auto MusicSoundCue = 0x398; // USoundBase*
		constexpr auto PendingServer = 0x3a0; // FBlueprintSessionResult
		constexpr auto bHasPendingServer = 0x458; // bool
		constexpr auto LastTicket = 0x460; // TArray<char>
		constexpr auto LastTicketRefresh = 0x470; // FDateTime
		constexpr auto ServerPartMessage = 0x480; // FString
		constexpr auto ModInfo = 0x490; // TArray<FModdingRuntimeModInfoDetails>
		constexpr auto MainMenuMap = 0x4a0; // FString
		constexpr auto CurrentLevel = 0x4b0; // USQLevel*
		constexpr auto CurrentLayer = 0x4b8; // USQLayer*
		constexpr auto NextLayer = 0x4c0; // USQLayer*
		constexpr auto NextLevel = 0x4c8; // USQLevel*
		constexpr auto InitialGameDiscoveryCompleted = 0x4fb; // bool
		constexpr auto AvailableLevels = 0x500; // TMap<FName, USQLevel*>
		constexpr auto AvailableLayers = 0x550; // TMap<FName, USQLayer*>
		constexpr auto AvailableFactions = 0x5a0; // TMap<FName, USQFaction*>
		constexpr auto AvailableFactionSetups = 0x5f0; // TMap<FName, USQFactionSetup*>
		constexpr auto InitialModDiscoveryCompleted = 0x650; // bool
	}

	namespace n_UMaterialExpressionPixelDepth { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_ABP_L85A2_DarkEarth_SUSAT_Foregrip_Tracer_C { // : ABP_L85A2_DarkEarth_SUSAT_Foregrip_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
		constexpr auto Scope = 0x7b8; // UStaticMeshComponent*
	}

	namespace n_UBP_Attachment_M68_NoAds_Founder_C { // : UBP_Attachment_M68_Founder_C
		constexpr auto MeshTransitionPercentage = 0x4b0; // float
		constexpr auto ADSMesh = 0x4b8; // UStaticMesh*
		constexpr auto ADSMeshTransform = 0x4c0; // FTransform
		constexpr auto NonADSMesh = 0x4f0; // UStaticMesh*
		constexpr auto NonADSMeshTransform = 0x500; // FTransform
		constexpr auto InToADSMeshTransitionSettings = 0x530; // TArray<FSQMeshTransitionSettings>
		constexpr auto OutFromADSMeshTransitionSettings = 0x540; // TArray<FSQMeshTransitionSettings>
	}

	namespace n_UMultiLineEditableText { // : UTextLayoutWidget
		constexpr auto Text = 0x128; // FText
		constexpr auto HintText = 0x140; // FText
		constexpr auto HintTextDelegate = 0x158; // DelegateProperty
		constexpr auto WidgetStyle = 0x168; // FTextBlockStyle
		constexpr auto bIsReadOnly = 0x3d0; // bool
		constexpr auto Font = 0x3d8; // FSlateFontInfo
		constexpr auto SelectAllTextWhenFocused = 0x428; // bool
		constexpr auto ClearTextSelectionOnFocusLoss = 0x429; // bool
		constexpr auto RevertTextOnEscape = 0x42a; // bool
		constexpr auto ClearKeyboardFocusOnCommit = 0x42b; // bool
		constexpr auto AllowContextMenu = 0x42c; // bool
		constexpr auto VirtualKeyboardOptions = 0x42d; // FVirtualKeyboardOptions
		constexpr auto VirtualKeyboardDismissAction = 0x42e; // EVirtualKeyboardDismissAction
		constexpr auto OnTextChanged = 0x430; // FScriptMulticastDelegate
		constexpr auto OnTextCommitted = 0x440; // FScriptMulticastDelegate
	}

	namespace n_USQSquadStateDataAmmoCrate { // : USQSquadStateDataDeployable
		constexpr auto BuildState = 0x180; // ESQBuildState
	}

	namespace n_UBP_AKS74_StaticInfo_C { // : UBP_AK74_StaticInfo_C
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_USQAvailability_Deployable { // : USQAvailability
		constexpr auto Setting = 0x50; // USQDeployableSettings*
	}

	namespace n_UBoneMaskFilter { // : UObject
		constexpr auto BlendPoses = 0x28; // TArray<FInputBlendPose>
	}

	namespace n_ACameraActor { // : AActor
		constexpr auto AutoActivateForPlayer = 0x248; // EAutoReceiveInput
		constexpr auto CameraComponent = 0x250; // UCameraComponent*
		constexpr auto SceneComponent = 0x258; // USceneComponent*
		constexpr auto bConstrainAspectRatio = 0x268; // char : 1
		constexpr auto AspectRatio = 0x26c; // float
		constexpr auto FOVAngle = 0x270; // float
		constexpr auto PostProcessBlendWeight = 0x274; // float
		constexpr auto PostProcessSettings = 0x280; // FPostProcessSettings
	}

	namespace n_UBP_AK74MGP25_UGL_Reflex_Parent_StaticInfo_C { // : UBP_AK74GP25_UGL_Parent_StaticInfo_C
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_UBP_Attachment_M68_Founder_C { // : USQWeaponAttachment_Scope
		constexpr auto MeshTransitionPercentage = 0x4b0; // float
		constexpr auto ADSMesh = 0x4b8; // UStaticMesh*
		constexpr auto ADSMeshTransform = 0x4c0; // FTransform
		constexpr auto NonADSMesh = 0x4f0; // UStaticMesh*
		constexpr auto NonADSMeshTransform = 0x500; // FTransform
		constexpr auto InToADSMeshTransitionSettings = 0x530; // TArray<FSQMeshTransitionSettings>
		constexpr auto OutFromADSMeshTransitionSettings = 0x540; // TArray<FSQMeshTransitionSettings>
	}

	namespace n_USQBlastComponent { // : USceneComponent
		constexpr auto ConeLength = 0x218; // float
		constexpr auto ConeAngle = 0x21c; // float
		constexpr auto BlockBlastTraceOriginOffset = 0x220; // float
		constexpr auto MaxDamage = 0x224; // float
		constexpr auto bIsDrawDebugEnabled = 0x228; // bool
		constexpr auto DamageType = 0x230; // UDamageType*
		constexpr auto EffectsConeLength = 0x238; // float
		constexpr auto EffectsConeHalfAngle = 0x23c; // float
		constexpr auto BlastShockwave = 0x240; // USQShockwave*
	}

	namespace n_UBP_M4_Optic_StaticInfo_C { // : UBP_M4_StaticInfo_C
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_ABP_L85A2AG36_ElcanLDS_UGL_Parent_C { // : ABP_L85A2AG36_UGL_Parent_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_ALevelStreamingVolume { // : AVolume
		constexpr auto StreamingLevelNames = 0x280; // TArray<FName>
		constexpr auto bEditorPreVisOnly = 0x290; // char : 1
		constexpr auto bDisabled = 0x290; // char : 1
		constexpr auto StreamingUsage = 0x294; // EStreamingVolumeUsage
	}

	namespace n_USQMapMarkerDataAsset { // : UPrimaryDataAsset
		constexpr auto MarkerVisualData = 0x30; // FSQMapMarkerVisualData
		constexpr auto bIsGlobalMarker = 0xf8; // bool
	}

	namespace n_UVectorFieldComponent { // : UPrimitiveComponent
		constexpr auto VectorField = 0x408; // UVectorField*
		constexpr auto Intensity = 0x410; // float
		constexpr auto Tightness = 0x414; // float
		constexpr auto bPreviewVectorField = 0x418; // char : 1
	}

	namespace n_UEnvQueryGenerator_BlueprintBase { // : UEnvQueryGenerator
		constexpr auto GeneratorsActionDescription = 0x50; // FText
		constexpr auto Context = 0x68; // UEnvQueryContext*
		constexpr auto GeneratedItemType = 0x70; // UEnvQueryItemType*
	}

	namespace n_ASQWheeledVehicle { // : ASQWheeledVehicleBase
		constexpr auto DamagedDampingRateMultiplier = 0xa20; // float
		constexpr auto DampingRateMultiplier = 0xa24; // float
	}

	namespace n_UWidget { // : UVisual
		constexpr auto Slot = 0x28; // UPanelSlot*
		constexpr auto bIsEnabledDelegate = 0x30; // DelegateProperty
		constexpr auto ToolTipText = 0x40; // FText
		constexpr auto ToolTipTextDelegate = 0x58; // DelegateProperty
		constexpr auto ToolTipWidget = 0x68; // UWidget*
		constexpr auto ToolTipWidgetDelegate = 0x70; // DelegateProperty
		constexpr auto VisibilityDelegate = 0x80; // DelegateProperty
		constexpr auto RenderTransform = 0x90; // FWidgetTransform
		constexpr auto RenderTransformPivot = 0xac; // FVector2D
		constexpr auto bIsVariable = 0xb4; // char : 1
		constexpr auto bCreatedByConstructionScript = 0xb4; // char : 1
		constexpr auto bIsEnabled = 0xb4; // char : 1
		constexpr auto bOverride_Cursor = 0xb4; // char : 1
		constexpr auto AccessibleWidgetData = 0xb8; // USlateAccessibleWidgetData*
		constexpr auto bIsVolatile = 0xc0; // char : 1
		constexpr auto cursor = 0xc1; // EMouseCursor
		constexpr auto Clipping = 0xc2; // EWidgetClipping
		constexpr auto Visibility = 0xc3; // ESlateVisibility
		constexpr auto RenderOpacity = 0xc4; // float
		constexpr auto Navigation = 0xc8; // UWidgetNavigation*
		constexpr auto FlowDirectionPreference = 0xd0; // EFlowDirectionPreference
		constexpr auto NativeBindings = 0xf8; // TArray<UPropertyBinding*>
	}

	namespace n_UPlatformGameInstance { // : UGameInstance
		constexpr auto ApplicationWillDeactivateDelegate = 0x168; // FScriptMulticastDelegate
		constexpr auto ApplicationHasReactivatedDelegate = 0x178; // FScriptMulticastDelegate
		constexpr auto ApplicationWillEnterBackgroundDelegate = 0x188; // FScriptMulticastDelegate
		constexpr auto ApplicationHasEnteredForegroundDelegate = 0x198; // FScriptMulticastDelegate
		constexpr auto ApplicationWillTerminateDelegate = 0x1a8; // FScriptMulticastDelegate
		constexpr auto ApplicationShouldUnloadResourcesDelegate = 0x1b8; // FScriptMulticastDelegate
		constexpr auto ApplicationReceivedStartupArgumentsDelegate = 0x1c8; // FScriptMulticastDelegate
		constexpr auto ApplicationRegisteredForRemoteNotificationsDelegate = 0x1d8; // FScriptMulticastDelegate
		constexpr auto ApplicationRegisteredForUserNotificationsDelegate = 0x1e8; // FScriptMulticastDelegate
		constexpr auto ApplicationFailedToRegisterForRemoteNotificationsDelegate = 0x1f8; // FScriptMulticastDelegate
		constexpr auto ApplicationReceivedRemoteNotificationDelegate = 0x208; // FScriptMulticastDelegate
		constexpr auto ApplicationReceivedLocalNotificationDelegate = 0x218; // FScriptMulticastDelegate
		constexpr auto ApplicationReceivedScreenOrientationChangedNotificationDelegate = 0x228; // FScriptMulticastDelegate
	}

	namespace n_UMaterialExpressionPanner { // : UMaterialExpression
		constexpr auto Coordinate = 0x40; // FExpressionInput
		constexpr auto Time = 0x54; // FExpressionInput
		constexpr auto Speed = 0x68; // FExpressionInput
		constexpr auto SpeedX = 0x7c; // float
		constexpr auto SpeedY = 0x80; // float
		constexpr auto ConstCoordinate = 0x84; // uint32
		constexpr auto bFractionalPart = 0x88; // bool
	}

	namespace n_USceneCaptureComponent2D { // : USceneCaptureComponent
		constexpr auto ProjectionType = 0x2b0; // ECameraProjectionMode
		constexpr auto FOVAngle = 0x2b4; // float
		constexpr auto OrthoWidth = 0x2b8; // float
		constexpr auto TextureTarget = 0x2c0; // UTextureRenderTarget2D*
		constexpr auto CompositeMode = 0x2c8; // ESceneCaptureCompositeMode
		constexpr auto PostProcessSettings = 0x2d0; // FPostProcessSettings
		constexpr auto PostProcessBlendWeight = 0x800; // float
		constexpr auto bOverride_CustomNearClippingPlane = 0x804; // char : 1
		constexpr auto CustomNearClippingPlane = 0x808; // float
		constexpr auto bUseCustomProjectionMatrix = 0x80c; // bool
		constexpr auto CustomProjectionMatrix = 0x810; // FMatrix
		constexpr auto bEnableClipPlane = 0x850; // bool
		constexpr auto ClipPlaneBase = 0x854; // FVector
		constexpr auto ClipPlaneNormal = 0x860; // FVector
		constexpr auto bCameraCutThisFrame = 0x86c; // char : 1
		constexpr auto bConsiderUnrenderedOpaquePixelAsFullyTranslucent = 0x86c; // char : 1
	}

	namespace n_UAnimSharingStateInstance { // : UAnimInstance
		constexpr auto AnimationToPlay = 0x268; // UAnimSequence*
		constexpr auto PermutationTimeOffset = 0x270; // float
		constexpr auto PlayRate = 0x274; // float
		constexpr auto bStateBool = 0x278; // bool
		constexpr auto instance = 0x280; // UAnimSharingInstance*
	}

	namespace n_UAbilitySystemGlobals { // : UObject
		constexpr auto AbilitySystemGlobalsClassName = 0x28; // FSoftClassPath
		constexpr auto ActivateFailIsDeadTag = 0x68; // FGameplayTag
		constexpr auto ActivateFailIsDeadName = 0x70; // FName
		constexpr auto ActivateFailCooldownTag = 0x78; // FGameplayTag
		constexpr auto ActivateFailCooldownName = 0x80; // FName
		constexpr auto ActivateFailCostTag = 0x88; // FGameplayTag
		constexpr auto ActivateFailCostName = 0x90; // FName
		constexpr auto ActivateFailTagsBlockedTag = 0x98; // FGameplayTag
		constexpr auto ActivateFailTagsBlockedName = 0xa0; // FName
		constexpr auto ActivateFailTagsMissingTag = 0xa8; // FGameplayTag
		constexpr auto ActivateFailTagsMissingName = 0xb0; // FName
		constexpr auto ActivateFailNetworkingTag = 0xb8; // FGameplayTag
		constexpr auto ActivateFailNetworkingName = 0xc0; // FName
		constexpr auto MinimalReplicationTagCountBits = 0xc8; // int
		constexpr auto bAllowGameplayModEvaluationChannels = 0xcc; // bool
		constexpr auto DefaultGameplayModEvaluationChannel = 0xcd; // EGameplayModEvaluationChannel
		constexpr auto GameplayModEvaluationChannelAliases = 0xd0; // FName [0xa]
		constexpr auto GlobalCurveTableName = 0x120; // FSoftObjectPath
		constexpr auto GlobalCurveTable = 0x138; // UCurveTable*
		constexpr auto GlobalAttributeMetaDataTableName = 0x140; // FSoftObjectPath
		constexpr auto GlobalAttributeMetaDataTable = 0x158; // UDataTable*
		constexpr auto GlobalAttributeSetDefaultsTableName = 0x160; // FSoftObjectPath
		constexpr auto GlobalAttributeSetDefaultsTableNames = 0x178; // TArray<FSoftObjectPath>
		constexpr auto GlobalAttributeDefaultsTables = 0x188; // TArray<UCurveTable*>
		constexpr auto GlobalGameplayCueManagerClass = 0x198; // FSoftObjectPath
		constexpr auto GlobalGameplayCueManagerName = 0x1b0; // FSoftObjectPath
		constexpr auto GameplayCueNotifyPaths = 0x1c8; // TArray<FString>
		constexpr auto GameplayTagResponseTableName = 0x1d8; // FSoftObjectPath
		constexpr auto GameplayTagResponseTable = 0x1f0; // UGameplayTagReponseTable*
		constexpr auto PredictTargetGameplayEffects = 0x1f8; // bool
		constexpr auto GlobalGameplayCueManager = 0x200; // UGameplayCueManager*
	}

	namespace n_ABP_L85A2AG36_ElcanLDS_UGL_Smoke_Red_C { // : ABP_L85A2AG36_ElcanLDS_UGL_Smoke_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UMovieSceneCameraShakeSection { // : UMovieSceneSection
		constexpr auto ShakeData = 0xe0; // FMovieSceneCameraShakeSectionData
		constexpr auto ShakeClass = 0x100; // UCameraShake*
		constexpr auto PlayScale = 0x108; // float
		constexpr auto PlaySpace = 0x10c; // ECameraAnimPlaySpace
		constexpr auto UserDefinedPlaySpace = 0x110; // FRotator
	}

	namespace n_UBTTask_PawnActionBase { // : UBTTaskNode
		constexpr auto Services = 0x58; // TArray<UBTService*>
		constexpr auto bIgnoreRestartSelf = 0x68; // char : 1
	}

	namespace n_UParticleModuleLocationDirect { // : UParticleModuleLocationBase
		constexpr auto Location = 0x30; // FRawDistributionVector
		constexpr auto LocationOffset = 0x80; // FRawDistributionVector
		constexpr auto ScaleFactor = 0xd0; // FRawDistributionVector
		constexpr auto Direction = 0x120; // FRawDistributionVector
	}

	namespace n_UParticleModuleTrailBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x29; // char : 1
		constexpr auto LODDuplicate = 0x29; // char : 1
		constexpr auto bSupportsRandomSeed = 0x29; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x29; // char : 1
		constexpr auto LODValidity = 0x2c; // char
	}

	namespace n_UPlayFabProfilesAPI { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnPlayFabResponse = 0x28; // FScriptMulticastDelegate
		constexpr auto CallAuthenticationContext = 0xf0; // UPlayFabAuthenticationContext*
		constexpr auto RequestJsonObj = 0xf8; // UPlayFabJsonObject*
		constexpr auto ResponseJsonObj = 0x100; // UPlayFabJsonObject*
	}

	namespace n_UNavigationSystemModuleConfig { // : UNavigationSystemConfig
		constexpr auto bStrictlyStatic = 0x48; // char : 1
		constexpr auto bCreateOnClient = 0x48; // char : 1
		constexpr auto bAutoSpawnMissingNavData = 0x48; // char : 1
		constexpr auto bSpawnNavDataInNavBoundsLevel = 0x48; // char : 1
	}

	namespace n_USynthSound { // : USoundWaveProcedural
		constexpr auto OwningSynthComponent = 0x310; // USynthComponent*
	}

	namespace n_UBP_MaterialEffects_Frag_C { // : UBP_MaterialEffects_HEAT_C
		constexpr auto Effects = 0x28; // TMap<USQPhysicalMaterial*, FSQEffectsSet>
	}

	namespace n_ADatasmithImportedSequencesActor { // : AActor
		constexpr auto ImportedSequences = 0x248; // TArray<ULevelSequence*>
	}

	namespace n_USQPerformanceCollectorSubsystem { // : UGameInstanceSubsystem
		constexpr auto Deep_FrameSamplingFrequency = 0x34; // float
		constexpr auto Deep_PlayerSamplingFrequency = 0x38; // float
		constexpr auto Deep_RecordSize = 0x3c; // int
		constexpr auto FrameSamplingFrequency = 0x40; // float
		constexpr auto PlayerSamplingFrequency = 0x44; // float
		constexpr auto RecordSize = 0x48; // int
	}

	namespace n_UMaterialExpressionArctangent2Fast { // : UMaterialExpression
		constexpr auto Y = 0x40; // FExpressionInput
		constexpr auto X = 0x54; // FExpressionInput
	}

	namespace n_USoundNodeRandom { // : USoundNode
		constexpr auto Weights = 0x40; // TArray<float>
		constexpr auto PreselectAtLevelLoad = 0x50; // int
		constexpr auto bShouldExcludeFromBranchCulling = 0x54; // char : 1
		constexpr auto bSoundCueExcludedFromBranchCulling = 0x54; // char : 1
		constexpr auto bRandomizeWithoutReplacement = 0x58; // char : 1
		constexpr auto HasBeenUsed = 0x60; // TArray<bool>
		constexpr auto NumRandomUsed = 0x70; // int
	}

	namespace n_UConnectionCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto OnFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_UParticleModuleTypeDataMesh { // : UParticleModuleTypeDataBase
		constexpr auto Mesh = 0x30; // UStaticMesh*
		constexpr auto bUseStaticMeshLODs = 0x38; // bool
		constexpr auto LODSizeScale = 0x3c; // float
		constexpr auto CastShadows = 0x40; // char : 1
		constexpr auto DoCollisions = 0x40; // char : 1
		constexpr auto MeshAlignment = 0x44; // EMeshScreenAlignment
		constexpr auto bOverrideMaterial = 0x48; // char : 1
		constexpr auto bOverrideDefaultMotionBlurSettings = 0x48; // char : 1
		constexpr auto bEnableMotionBlur = 0x48; // char : 1
		constexpr auto Pitch = 0x4c; // float
		constexpr auto Roll = 0x50; // float
		constexpr auto Yaw = 0x54; // float
		constexpr auto RollPitchYawRange = 0x58; // FRawDistributionVector
		constexpr auto AxisLockOption = 0xb0; // EParticleAxisLock
		constexpr auto bCameraFacing = 0xb4; // char : 1
		constexpr auto CameraFacingUpAxisOption = 0xb8; // EMeshCameraFacingUpAxis
		constexpr auto CameraFacingOption = 0xb9; // EMeshCameraFacingOptions
		constexpr auto bApplyParticleRotationAsSpin = 0xbc; // char : 1
		constexpr auto bFaceCameraDirectionRatherThanPosition = 0xbc; // char : 1
		constexpr auto bCollisionsConsiderPartilceSize = 0xbc; // char : 1
	}

	namespace n_UInterpTrackInstFloatProp { // : UInterpTrackInstProperty
		constexpr auto ResetFloat = 0x40; // float
	}

	namespace n_UAISenseConfig_Team { // : UAISenseConfig
		constexpr auto DebugColor = 0x28; // FColor
		constexpr auto MaxAge = 0x2c; // float
		constexpr auto bStartsEnabled = 0x30; // char : 1
	}

	namespace n_UBehaviorTreeComponent { // : UBrainComponent
		constexpr auto NodeInstances = 0x158; // TArray<UBTNode*>
	}

	namespace n_UCheckBoxStyleAsset { // : UObject
		constexpr auto CheckBoxStyle = 0x28; // FCheckBoxStyle
	}

	namespace n_USlateWidgetStyleAsset { // : UObject
		constexpr auto CustomStyle = 0x28; // USlateWidgetStyleContainerBase*
	}

	namespace n_UPlayFabMultiplayerAPI { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnPlayFabResponse = 0x28; // FScriptMulticastDelegate
		constexpr auto CallAuthenticationContext = 0x3c0; // UPlayFabAuthenticationContext*
		constexpr auto RequestJsonObj = 0x3c8; // UPlayFabJsonObject*
		constexpr auto ResponseJsonObj = 0x3d0; // UPlayFabJsonObject*
	}

	namespace n_UMovieSceneSection { // : UMovieSceneSignedObject
		constexpr auto EvalOptions = 0x50; // FMovieSceneSectionEvalOptions
		constexpr auto Easing = 0x58; // FMovieSceneEasingSettings
		constexpr auto SectionRange = 0x90; // FMovieSceneFrameRange
		constexpr auto PreRollFrames = 0xa0; // FFrameNumber
		constexpr auto PostRollFrames = 0xa4; // FFrameNumber
		constexpr auto RowIndex = 0xa8; // int
		constexpr auto OverlapPriority = 0xac; // int
		constexpr auto bIsActive = 0xb0; // char : 1
		constexpr auto bIsLocked = 0xb0; // char : 1
		constexpr auto StartTime = 0xb4; // float
		constexpr auto EndTime = 0xb8; // float
		constexpr auto PrerollTime = 0xbc; // float
		constexpr auto PostrollTime = 0xc0; // float
		constexpr auto bIsInfinite = 0xc4; // char : 1
		constexpr auto bSupportsInfiniteRange = 0xc8; // bool
		constexpr auto BlendType = 0xc9; // FOptionalMovieSceneBlendType
	}

	namespace n_UMovieSceneWidgetMaterialTrack { // : UMovieSceneMaterialTrack
		constexpr auto BrushPropertyNamePath = 0x68; // TArray<FName>
		constexpr auto TrackName = 0x78; // FName
	}

	namespace n_UInteractiveFoliageComponent { // : UStaticMeshComponent
		constexpr auto ForcedLodModel = 0x430; // int
		constexpr auto PreviousLODLevel = 0x434; // int
		constexpr auto MinLOD = 0x438; // int
		constexpr auto SubDivisionStepSize = 0x43c; // int
		constexpr auto StaticMesh = 0x440; // UStaticMesh*
		constexpr auto WireframeColorOverride = 0x448; // FColor
		constexpr auto bOverrideWireframeColor = 0x44c; // char : 1
		constexpr auto bOverrideMinLOD = 0x44c; // char : 1
		constexpr auto bOverrideNavigationExport = 0x44c; // char : 1
		constexpr auto bForceNavigationObstacle = 0x44c; // char : 1
		constexpr auto bDisallowMeshPaintPerInstance = 0x44c; // char : 1
		constexpr auto bIgnoreInstanceForTextureStreaming = 0x44c; // char : 1
		constexpr auto bOverrideLightMapRes = 0x44c; // char : 1
		constexpr auto bCastDistanceFieldIndirectShadow = 0x44c; // char : 1
		constexpr auto bOverrideDistanceFieldSelfShadowBias = 0x44d; // char : 1
		constexpr auto bUseSubDivisions = 0x44d; // char : 1
		constexpr auto bUseDefaultCollision = 0x44d; // char : 1
		constexpr auto bReverseCulling = 0x44d; // char : 1
		constexpr auto OverriddenLightMapRes = 0x450; // int
		constexpr auto DistanceFieldIndirectShadowMinVisibility = 0x454; // float
		constexpr auto DistanceFieldSelfShadowBias = 0x458; // float
		constexpr auto StreamingDistanceMultiplier = 0x45c; // float
		constexpr auto LODData = 0x460; // TArray<FStaticMeshComponentLODInfo>
		constexpr auto StreamingTextureData = 0x470; // TArray<FStreamingTextureBuildInfo>
		constexpr auto LightmassSettings = 0x480; // FLightmassPrimitiveSettings
	}

	namespace n_UBTDecorator_SetTagCooldown { // : UBTDecorator
		constexpr auto CooldownTag = 0x68; // FGameplayTag
		constexpr auto CooldownDuration = 0x70; // float
		constexpr auto bAddToExistingDuration = 0x74; // bool
	}

	namespace n_UCameraModifier_CameraShake { // : UCameraModifier
		constexpr auto ActiveShakes = 0x48; // TArray<UCameraShake*>
		constexpr auto ExpiredPooledShakesMap = 0x58; // TMap<UCameraShake*, FPooledCameraShakes>
		constexpr auto SplitScreenShakeScale = 0xa8; // float
	}

	namespace n_AArchVisCharacter { // : ACharacter
		constexpr auto LookUpAxisName = 0x658; // FString
		constexpr auto LookUpAtRateAxisName = 0x668; // FString
		constexpr auto TurnAxisName = 0x678; // FString
		constexpr auto TurnAtRateAxisName = 0x688; // FString
		constexpr auto MoveForwardAxisName = 0x698; // FString
		constexpr auto MoveRightAxisName = 0x6a8; // FString
		constexpr auto MouseSensitivityScale_Pitch = 0x6b8; // float
		constexpr auto MouseSensitivityScale_Yaw = 0x6bc; // float
	}

	namespace n_UPawnNoiseEmitterComponent { // : UActorComponent
		constexpr auto bAIPerceptionSystemCompatibilityMode = 0xd8; // char : 1
		constexpr auto LastRemoteNoisePosition = 0xdc; // FVector
		constexpr auto NoiseLifetime = 0xe8; // float
		constexpr auto LastRemoteNoiseVolume = 0xec; // float
		constexpr auto LastRemoteNoiseTime = 0xf0; // float
		constexpr auto LastLocalNoiseVolume = 0xf4; // float
		constexpr auto LastLocalNoiseTime = 0xf8; // float
	}

	namespace n_USQDamageType { // : UDamageType
		constexpr auto bCanCauseBleeding = 0x40; // bool
	}

	namespace n_ASQRandomizer_StaticMesh { // : ASQRandomizer
		constexpr auto MeshComponent = 0x260; // UStaticMeshComponent*
		constexpr auto Meshes = 0x268; // TArray<UStaticMesh*>
	}

	namespace n_USQCoreStateConnection { // : UActorComponent
		constexpr auto ComponentList = 0xe8; // TArray<USQCoreStateComponent*>
		constexpr auto RemovedDataLists = 0xf8; // TMap<UActorChannel*, FSQCoreStateDataToIdMap>
	}

	namespace n_UMovieSceneSubTrack { // : UMovieSceneNameableTrack
		constexpr auto Sections = 0x58; // TArray<UMovieSceneSection*>
	}

	namespace n_UBP_Attachment_M68_Blur_C { // : USQWeaponAttachment_Scope
		constexpr auto MeshTransitionPercentage = 0x4b0; // float
		constexpr auto ADSMesh = 0x4b8; // UStaticMesh*
		constexpr auto ADSMeshTransform = 0x4c0; // FTransform
		constexpr auto NonADSMesh = 0x4f0; // UStaticMesh*
		constexpr auto NonADSMeshTransform = 0x500; // FTransform
		constexpr auto InToADSMeshTransitionSettings = 0x530; // TArray<FSQMeshTransitionSettings>
		constexpr auto OutFromADSMeshTransitionSettings = 0x540; // TArray<FSQMeshTransitionSettings>
	}

	namespace n_UAbilityTask_Repeat { // : UAbilityTask
		constexpr auto OnPerformAction = 0x80; // FScriptMulticastDelegate
		constexpr auto OnFinished = 0x90; // FScriptMulticastDelegate
	}

	namespace n_ULightComponent { // : ULightComponentBase
		constexpr auto Temperature = 0x248; // float
		constexpr auto MaxDrawDistance = 0x24c; // float
		constexpr auto MaxDistanceFadeRange = 0x250; // float
		constexpr auto bUseTemperature = 0x254; // char : 1
		constexpr auto ShadowMapChannel = 0x258; // int
		constexpr auto MinRoughness = 0x260; // float
		constexpr auto SpecularScale = 0x264; // float
		constexpr auto ShadowResolutionScale = 0x268; // float
		constexpr auto ShadowBias = 0x26c; // float
		constexpr auto ShadowSlopeBias = 0x270; // float
		constexpr auto ShadowSharpen = 0x274; // float
		constexpr auto ContactShadowLength = 0x278; // float
		constexpr auto ContactShadowLengthInWS = 0x27c; // char : 1
		constexpr auto InverseSquaredFalloff = 0x27c; // char : 1
		constexpr auto CastTranslucentShadows = 0x27c; // char : 1
		constexpr auto bCastShadowsFromCinematicObjectsOnly = 0x27c; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x27c; // char : 1
		constexpr auto bForceCachedShadowsForMovablePrimitives = 0x27c; // char : 1
		constexpr auto LightingChannels = 0x280; // FLightingChannels
		constexpr auto LightFunctionMaterial = 0x288; // UMaterialInterface*
		constexpr auto LightFunctionScale = 0x290; // FVector
		constexpr auto IESTexture = 0x2a0; // UTextureLightProfile*
		constexpr auto bUseIESBrightness = 0x2a8; // char : 1
		constexpr auto IESBrightnessScale = 0x2ac; // float
		constexpr auto LightFunctionFadeDistance = 0x2b0; // float
		constexpr auto DisabledBrightness = 0x2b4; // float
		constexpr auto bEnableLightShaftBloom = 0x2b8; // char : 1
		constexpr auto BloomScale = 0x2bc; // float
		constexpr auto BloomThreshold = 0x2c0; // float
		constexpr auto BloomTint = 0x2c4; // FColor
		constexpr auto bUseRayTracedDistanceFieldShadows = 0x2c8; // bool
		constexpr auto RayStartOffsetDepthScale = 0x2cc; // float
	}

	namespace n_UBTDecorator { // : UBTAuxiliaryNode
		constexpr auto bInverseCondition = 0x60; // char : 1
		constexpr auto FlowAbortMode = 0x64; // EBTFlowAbortMode
	}

	namespace n_UBP_Glock17_StaticInfo_C { // : UBP_GenericWeapon_StaticInfo_C
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_USQCheatManager { // : UCheatManager
		constexpr auto DebugCameraControllerRef = 0x28; // ADebugCameraController*
		constexpr auto DebugCameraControllerClass = 0x30; // ADebugCameraController*
	}

	namespace n_UListView { // : UListViewBase
		constexpr auto SelectionMode = 0x2c8; // ESelectionMode
		constexpr auto ConsumeMouseWheel = 0x2c9; // EConsumeMouseWheel
		constexpr auto bClearSelectionOnClick = 0x2ca; // bool
		constexpr auto bIsFocusable = 0x2cb; // bool
		constexpr auto EntrySpacing = 0x2cc; // float
		constexpr auto bReturnFocusToSelection = 0x2d0; // bool
		constexpr auto ListItems = 0x2d8; // TArray<UObject*>
		constexpr auto BP_OnEntryInitialized = 0x2f8; // FScriptMulticastDelegate
		constexpr auto BP_OnItemClicked = 0x308; // FScriptMulticastDelegate
		constexpr auto BP_OnItemDoubleClicked = 0x318; // FScriptMulticastDelegate
		constexpr auto BP_OnItemIsHoveredChanged = 0x328; // FScriptMulticastDelegate
		constexpr auto BP_OnItemSelectionChanged = 0x338; // FScriptMulticastDelegate
		constexpr auto BP_OnItemScrolledIntoView = 0x348; // FScriptMulticastDelegate
	}

	namespace n_USQServerBrowserWidget { // : USQUserWidget
		constexpr auto ServerNameSortedState = 0x230; // ESQSortStates
		constexpr auto MapNameSortedState = 0x231; // ESQSortStates
		constexpr auto GameModeSortedState = 0x232; // ESQSortStates
		constexpr auto NumPlayersSortedState = 0x233; // ESQSortStates
		constexpr auto PingSortedState = 0x234; // ESQSortStates
		constexpr auto SessionList = 0x238; // TArray<USQServerListItemWidget*>
		constexpr auto SessionSortList = 0x248; // TArray<UUserWidget*>
		constexpr auto bCanStartNewFindSessions = 0x258; // bool
		constexpr auto CurrentCallback = 0x260; // USQFindSessionsCallbackProxy*
	}

	namespace n_UReplicationGraphNode_ConnectionDormancyNode { // : UReplicationGraphNode_ActorList
		constexpr auto AllChildNodes = 0x28; // TArray<UReplicationGraphNode*>
	}

	namespace n_USQGridData_BaseOption { // : UObject
		constexpr auto DisplayName = 0x28; // FString
		constexpr auto Description = 0x38; // FString
		constexpr auto Texture = 0x48; // UTexture2D*
		constexpr auto Tint = 0x50; // FLinearColor
	}

	namespace n_USkeletalMeshSocket { // : UObject
		constexpr auto SocketName = 0x28; // FName
		constexpr auto BoneName = 0x30; // FName
		constexpr auto RelativeLocation = 0x38; // FVector
		constexpr auto RelativeRotation = 0x44; // FRotator
		constexpr auto RelativeScale = 0x50; // FVector
		constexpr auto bForceAlwaysAnimated = 0x5c; // bool
	}

	namespace n_UMaterialExpressionConstant { // : UMaterialExpression
		constexpr auto R = 0x40; // float
	}

	namespace n_UMediaPlaylist { // : UObject
		constexpr auto Items = 0x28; // TArray<UMediaSource*>
	}

	namespace n_USQCoreStateWidgetFactory { // : USQCoreStateListener
		constexpr auto Widgets = 0x148; // TMap<FSQCoreStateId, USQCoreStateWidget*>
		constexpr auto UnusedWidgets = 0x198; // TMap<USQCoreStateWidget*, FWidgetGroup>
		constexpr auto SubDataPendingSuperKey = 0x2d8; // TMap<USQCoreStateData*, int>
		constexpr auto SelectionHUB = 0x338; // USQCoreStateSelectionHUB*
	}

	namespace n_UMaterialExpressionTextureBase { // : UMaterialExpression
		constexpr auto Texture = 0x40; // UTexture*
		constexpr auto SamplerType = 0x48; // EMaterialSamplerType
		constexpr auto IsDefaultMeshpaintTexture = 0x4c; // char : 1
	}

	namespace n_USQLockButtonWidget { // : USQUserWidget
		constexpr auto ColorAndOpacity = 0x110; // FLinearColor
		constexpr auto ColorAndOpacityDelegate = 0x120; // DelegateProperty
		constexpr auto ForegroundColor = 0x130; // FSlateColor
		constexpr auto ForegroundColorDelegate = 0x158; // DelegateProperty
		constexpr auto Padding = 0x168; // FMargin
		constexpr auto ActiveSequencePlayers = 0x178; // TArray<UUMGSequencePlayer*>
		constexpr auto StoppedSequencePlayers = 0x188; // TArray<UUMGSequencePlayer*>
		constexpr auto NamedSlotBindings = 0x198; // TArray<FNamedSlotBinding>
		constexpr auto WidgetTree = 0x1a8; // UWidgetTree*
		constexpr auto Priority = 0x1b0; // int
		constexpr auto bSupportsKeyboardFocus = 0x1b4; // char : 1
		constexpr auto bIsFocusable = 0x1b4; // char : 1
		constexpr auto bStopAction = 0x1b4; // char : 1
		constexpr auto bHasScriptImplementedTick = 0x1b4; // char : 1
		constexpr auto bHasScriptImplementedPaint = 0x1b4; // char : 1
		constexpr auto bCookedWidgetTree = 0x1b4; // char : 1
		constexpr auto TickFrequency = 0x1c0; // EWidgetTickFrequency
		constexpr auto InputComponent = 0x1c8; // UInputComponent*
		constexpr auto AnimationCallbacks = 0x1d0; // TArray<FAnimationEventBinding>
	}

	namespace n_UShockwaveCameraShake_Short_C { // : UCameraShake
		constexpr auto bSingleInstance = 0x28; // char : 1
		constexpr auto OscillationDuration = 0x2c; // float
		constexpr auto OscillationBlendInTime = 0x30; // float
		constexpr auto OscillationBlendOutTime = 0x34; // float
		constexpr auto RotOscillation = 0x38; // FROscillator
		constexpr auto LocOscillation = 0x5c; // FVOscillator
		constexpr auto FOVOscillation = 0x80; // FFOscillator
		constexpr auto AnimPlayRate = 0x8c; // float
		constexpr auto AnimScale = 0x90; // float
		constexpr auto AnimBlendInTime = 0x94; // float
		constexpr auto AnimBlendOutTime = 0x98; // float
		constexpr auto RandomAnimSegmentDuration = 0x9c; // float
		constexpr auto Anim = 0xa0; // UCameraAnim*
		constexpr auto bRandomAnimSegment = 0xa8; // char : 1
		constexpr auto CameraOwner = 0xc0; // APlayerCameraManager*
		constexpr auto ShakeScale = 0x148; // float
		constexpr auto OscillatorTimeRemaining = 0x14c; // float
		constexpr auto AnimInst = 0x150; // UCameraAnimInst*
	}

	namespace n_ASQGameEventRuleset { // : ASQGameRuleSet
		constexpr auto JoinChannel = 0x270; // ESQKillReportChannel
		constexpr auto PartChannel = 0x271; // ESQKillReportChannel
	}

	namespace n_UMaterialExpressionConstantBiasScale { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Bias = 0x54; // float
		constexpr auto Scale = 0x58; // float
	}

	namespace n_ADatasmithAreaLightActor { // : AActor
		constexpr auto LightType = 0x248; // EDatasmithAreaLightActorType
		constexpr auto LightShape = 0x249; // EDatasmithAreaLightActorShape
		constexpr auto Dimensions = 0x24c; // FVector2D
		constexpr auto Intensity = 0x254; // float
		constexpr auto IntensityUnits = 0x258; // ELightUnits
		constexpr auto Color = 0x25c; // FLinearColor
		constexpr auto Temperature = 0x26c; // float
		constexpr auto IESTexture = 0x270; // UTextureLightProfile*
		constexpr auto bUseIESBrightness = 0x278; // bool
		constexpr auto IESBrightnessScale = 0x27c; // float
		constexpr auto Rotation = 0x280; // FRotator
		constexpr auto SourceRadius = 0x28c; // float
		constexpr auto SourceLength = 0x290; // float
		constexpr auto AttenuationRadius = 0x294; // float
		constexpr auto SpotlightInnerAngle = 0x298; // float
		constexpr auto SpotlightOuterAngle = 0x29c; // float
	}

	namespace n_UGameSessionSettings { // : UObject
		constexpr auto MaxSpectators = 0x28; // int
		constexpr auto MaxPlayers = 0x2c; // int
		constexpr auto bRequiresPushToTalk = 0x30; // char : 1
	}

	namespace n_UInterpTrackFade { // : UInterpTrackFloatBase
		constexpr auto bPersistFade = 0x90; // char : 1
		constexpr auto bFadeAudio = 0x90; // char : 1
		constexpr auto FadeColor = 0x94; // FLinearColor
	}

	namespace n_UBP_MapWidgetMapMarkerObjective_C { // : USQMapWidgetMapMarkerObjective
		constexpr auto UberGraphFrame = 0x2c8; // FPointerToUberGraphFrame
		constexpr auto MarkerImage = 0x2d0; // UImage*
		constexpr auto ScaleBox_1 = 0x2d8; // UScaleBox*
	}

	namespace n_UGameplayAbility_CharacterJump { // : UGameplayAbility
		constexpr auto AbilityTags = 0xa8; // FGameplayTagContainer
		constexpr auto bReplicateInputDirectly = 0xc8; // bool
		constexpr auto RemoteInstanceEnded = 0xc9; // bool
		constexpr auto ReplicationPolicy = 0xce; // EGameplayAbilityReplicationPolicy
		constexpr auto InstancingPolicy = 0xcf; // EGameplayAbilityInstancingPolicy
		constexpr auto bServerRespectsRemoteAbilityCancellation = 0xd0; // bool
		constexpr auto bRetriggerInstancedAbility = 0xd1; // bool
		constexpr auto CurrentActivationInfo = 0xd8; // FGameplayAbilityActivationInfo
		constexpr auto CurrentEventData = 0xf8; // FGameplayEventData
		constexpr auto NetExecutionPolicy = 0x1a8; // EGameplayAbilityNetExecutionPolicy
		constexpr auto CostGameplayEffectClass = 0x1b0; // UGameplayEffect*
		constexpr auto AbilityTriggers = 0x1b8; // TArray<FAbilityTriggerData>
		constexpr auto CooldownGameplayEffectClass = 0x1c8; // UGameplayEffect*
		constexpr auto CancelAbilitiesMatchingTagQuery = 0x1d0; // FGameplayTagQuery
		constexpr auto CancelAbilitiesWithTag = 0x218; // FGameplayTagContainer
		constexpr auto BlockAbilitiesWithTag = 0x238; // FGameplayTagContainer
		constexpr auto ActivationOwnedTags = 0x258; // FGameplayTagContainer
		constexpr auto ActivationRequiredTags = 0x278; // FGameplayTagContainer
		constexpr auto ActivationBlockedTags = 0x298; // FGameplayTagContainer
		constexpr auto SourceRequiredTags = 0x2b8; // FGameplayTagContainer
		constexpr auto SourceBlockedTags = 0x2d8; // FGameplayTagContainer
		constexpr auto TargetRequiredTags = 0x2f8; // FGameplayTagContainer
		constexpr auto TargetBlockedTags = 0x318; // FGameplayTagContainer
		constexpr auto ActiveTasks = 0x358; // TArray<UGameplayTask*>
		constexpr auto CurrentMontage = 0x378; // UAnimMontage*
		constexpr auto bIsActive = 0x3e0; // bool
		constexpr auto bIsCancelable = 0x3e1; // bool
		constexpr auto bIsBlockingOtherAbilities = 0x3e2; // bool
		constexpr auto bMarkPendingKillOnAbilityEnd = 0x3f8; // bool
	}

	namespace n_APainCausingVolume { // : APhysicsVolume
		constexpr auto bPainCausing = 0x290; // char : 1
		constexpr auto DamagePerSec = 0x294; // float
		constexpr auto DamageType = 0x298; // UDamageType*
		constexpr auto PainInterval = 0x2a0; // float
		constexpr auto bEntryPain = 0x2a4; // char : 1
		constexpr auto BACKUP_bPainCausing = 0x2a4; // char : 1
		constexpr auto DamageInstigator = 0x2a8; // AController*
	}

	namespace n_ABP_RPG7V2_Tandem_2mag_Founders_C { // : ABP_RPG7V2_Tandem_Founders_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
		constexpr auto MuzzleFlashRearComponent3P = 0x7b8; // UParticleSystemComponent*
		constexpr auto BackBlastComponent3P = 0x7c0; // UChildActorComponent*
		constexpr auto MuzzleFlashRearComponent1P = 0x7c8; // UParticleSystemComponent*
		constexpr auto SquadBlast = 0x7d0; // USQBlastComponent*
		constexpr auto BackBlastComponent1P = 0x7d8; // UChildActorComponent*
		constexpr auto BackblastSocket = 0x7e0; // FName
		constexpr auto BackblastEffect1P = 0x7e8; // UParticleSystem*
		constexpr auto BackblastEffect3P = 0x7f0; // UParticleSystem*
	}

	namespace n_UMaterialExpressionScalarParameter { // : UMaterialExpressionParameter
		constexpr auto DefaultValue = 0x58; // float
		constexpr auto bUseCustomPrimitiveData = 0x5c; // bool
		constexpr auto PrimitiveDataIndex = 0x5d; // char
	}

	namespace n_UMaterialExpressionViewProperty { // : UMaterialExpression
		constexpr auto Property = 0x40; // EMaterialExposedViewProperty
	}

	namespace n_USpinBoxWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto SpinBoxStyle = 0x30; // FSpinBoxStyle
	}

	namespace n_ABP_GenericRocketLauncher_C { // : ABP_Weapon2_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
		constexpr auto MuzzleFlashRearComponent3P = 0x7b8; // UParticleSystemComponent*
		constexpr auto BackBlastComponent3P = 0x7c0; // UChildActorComponent*
		constexpr auto MuzzleFlashRearComponent1P = 0x7c8; // UParticleSystemComponent*
		constexpr auto SquadBlast = 0x7d0; // USQBlastComponent*
		constexpr auto BackBlastComponent1P = 0x7d8; // UChildActorComponent*
		constexpr auto BackblastSocket = 0x7e0; // FName
		constexpr auto BackblastEffect1P = 0x7e8; // UParticleSystem*
		constexpr auto BackblastEffect3P = 0x7f0; // UParticleSystem*
	}

	namespace n_UParticleModuleVectorFieldBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x29; // char : 1
		constexpr auto LODDuplicate = 0x29; // char : 1
		constexpr auto bSupportsRandomSeed = 0x29; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x29; // char : 1
		constexpr auto LODValidity = 0x2c; // char
	}

	namespace n_ABP_L85A2AG36_ACOG_UGL_Smoke_Blue_C { // : ABP_L85A2AG36_ACOG_UGL_Smoke_Red_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UWheeledVehicleMovementComponent { // : UPawnMovementComponent
		constexpr auto bDeprecatedSpringOffsetMode = 0x168; // char : 1
		constexpr auto bReverseAsBrake = 0x168; // char : 1
		constexpr auto bUseRVOAvoidance = 0x168; // char : 1
		constexpr auto bRawHandbrakeInput = 0x168; // char : 1
		constexpr auto bRawGearUpInput = 0x168; // char : 1
		constexpr auto bRawGearDownInput = 0x168; // char : 1
		constexpr auto bWasAvoidanceUpdated = 0x16c; // char : 1
		constexpr auto Mass = 0x170; // float
		constexpr auto WheelSetups = 0x178; // TArray<FWheelSetup>
		constexpr auto DragCoefficient = 0x188; // float
		constexpr auto ChassisWidth = 0x18c; // float
		constexpr auto ChassisHeight = 0x190; // float
		constexpr auto DragArea = 0x194; // float
		constexpr auto EstimatedMaxEngineSpeed = 0x198; // float
		constexpr auto MaxEngineRPM = 0x19c; // float
		constexpr auto DebugDragMagnitude = 0x1a0; // float
		constexpr auto InertiaTensorScale = 0x1a4; // FVector
		constexpr auto MinNormalizedTireLoad = 0x1b0; // float
		constexpr auto MinNormalizedTireLoadFiltered = 0x1b4; // float
		constexpr auto MaxNormalizedTireLoad = 0x1b8; // float
		constexpr auto MaxNormalizedTireLoadFiltered = 0x1bc; // float
		constexpr auto ThresholdLongitudinalSpeed = 0x1c0; // float
		constexpr auto LowForwardSpeedSubStepCount = 0x1c4; // int
		constexpr auto HighForwardSpeedSubStepCount = 0x1c8; // int
		constexpr auto Wheels = 0x1d0; // TArray<UVehicleWheel*>
		constexpr auto RVOAvoidanceRadius = 0x1f8; // float
		constexpr auto RVOAvoidanceHeight = 0x1fc; // float
		constexpr auto AvoidanceConsiderationRadius = 0x200; // float
		constexpr auto RVOSteeringStep = 0x204; // float
		constexpr auto RVOThrottleStep = 0x208; // float
		constexpr auto AvoidanceUID = 0x20c; // int
		constexpr auto AvoidanceGroup = 0x210; // FNavAvoidanceMask
		constexpr auto GroupsToAvoid = 0x214; // FNavAvoidanceMask
		constexpr auto GroupsToIgnore = 0x218; // FNavAvoidanceMask
		constexpr auto AvoidanceWeight = 0x21c; // float
		constexpr auto PendingLaunchVelocity = 0x220; // FVector
		constexpr auto ReplicatedState = 0x22c; // FReplicatedVehicleState
		constexpr auto RawSteeringInput = 0x244; // float
		constexpr auto RawThrottleInput = 0x248; // float
		constexpr auto RawBrakeInput = 0x24c; // float
		constexpr auto SteeringInput = 0x250; // float
		constexpr auto ThrottleInput = 0x254; // float
		constexpr auto BrakeInput = 0x258; // float
		constexpr auto HandbrakeInput = 0x25c; // float
		constexpr auto IdleBrakeInput = 0x260; // float
		constexpr auto StopThreshold = 0x264; // float
		constexpr auto WrongDirectionThreshold = 0x268; // float
		constexpr auto InvertDirectionThreshold = 0x26c; // float
		constexpr auto LowRPMRatio = 0x270; // float
		constexpr auto SpeedInsteadOfRPMRatiosForShifting = 0x274; // bool
		constexpr auto ThrottleInputRate = 0x278; // FVehicleInputRate
		constexpr auto BrakeInputRate = 0x280; // FVehicleInputRate
		constexpr auto HandbrakeInputRate = 0x288; // FVehicleInputRate
		constexpr auto SteeringInputRate = 0x290; // FVehicleInputRate
		constexpr auto EngineOffSteeringInputRate = 0x298; // FVehicleInputRate
		constexpr auto OverrideController = 0x2c8; // AController*
		constexpr auto bUseCustomAutoGearBox = 0x2d0; // bool
	}

	namespace n_UMovieSceneEventTriggerSection { // : UMovieSceneEventSectionBase
		constexpr auto EventChannel = 0xe0; // FMovieSceneEventChannel
	}

	namespace n_UParticleModuleCollisionBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x29; // char : 1
		constexpr auto LODDuplicate = 0x29; // char : 1
		constexpr auto bSupportsRandomSeed = 0x29; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x29; // char : 1
		constexpr auto LODValidity = 0x2c; // char
	}

	namespace n_ASQMortarProjectile { // : ASQProjectile
		constexpr auto SmokeParticleEffect = 0x4a0; // UParticleSystem*
		constexpr auto SmokeSoundCue = 0x4a8; // USoundCue*
		constexpr auto SmokeColor = 0x4b0; // FLinearColor
		constexpr auto NearGroundTriggerDistance = 0x4c0; // float
		constexpr auto MinFlightTime = 0x4c4; // float
		constexpr auto bWatchFlightTime = 0x4c8; // bool
		constexpr auto bShouldDestroyByLifespan = 0x4c9; // bool
		constexpr auto LastingEffectClass = 0x4d0; // UObject*
		constexpr auto SocketName = 0x4d8; // FName
		constexpr auto ImpactDamageToApply = 0x4e0; // float
	}

	namespace n_UInterpTrackAudioMaster { // : UInterpTrackVectorBase
		constexpr auto VectorTrack = 0x70; // FInterpCurveVector
		constexpr auto CurveTension = 0x88; // float
	}

	namespace n_UBasicOverlays { // : UOverlays
		constexpr auto Overlays = 0x28; // TArray<FOverlayItem>
	}

	namespace n_ABP_M17MHS_Black_C { // : ABP_M17MHS_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UWidgetComponent { // : UMeshComponent
		constexpr auto Space = 0x430; // EWidgetSpace
		constexpr auto TimingPolicy = 0x431; // EWidgetTimingPolicy
		constexpr auto WidgetClass = 0x438; // UUserWidget*
		constexpr auto DrawSize = 0x440; // FIntPoint
		constexpr auto bManuallyRedraw = 0x448; // bool
		constexpr auto bRedrawRequested = 0x449; // bool
		constexpr auto RedrawTime = 0x44c; // float
		constexpr auto CurrentDrawSize = 0x458; // FIntPoint
		constexpr auto bDrawAtDesiredSize = 0x460; // bool
		constexpr auto Pivot = 0x464; // FVector2D
		constexpr auto bReceiveHardwareInput = 0x46c; // bool
		constexpr auto bWindowFocusable = 0x46d; // bool
		constexpr auto WindowVisibility = 0x46e; // EWindowVisibility
		constexpr auto bApplyGammaCorrection = 0x46f; // bool
		constexpr auto OwnerPlayer = 0x470; // ULocalPlayer*
		constexpr auto BackgroundColor = 0x478; // FLinearColor
		constexpr auto TintColorAndOpacity = 0x488; // FLinearColor
		constexpr auto OpacityFromTexture = 0x498; // float
		constexpr auto BlendMode = 0x49c; // EWidgetBlendMode
		constexpr auto bIsTwoSided = 0x49d; // bool
		constexpr auto TickWhenOffscreen = 0x49e; // bool
		constexpr auto Widget = 0x4a0; // UUserWidget*
		constexpr auto BodySetup = 0x4c8; // UBodySetup*
		constexpr auto TranslucentMaterial = 0x4d0; // UMaterialInterface*
		constexpr auto TranslucentMaterial_OneSided = 0x4d8; // UMaterialInterface*
		constexpr auto OpaqueMaterial = 0x4e0; // UMaterialInterface*
		constexpr auto OpaqueMaterial_OneSided = 0x4e8; // UMaterialInterface*
		constexpr auto MaskedMaterial = 0x4f0; // UMaterialInterface*
		constexpr auto MaskedMaterial_OneSided = 0x4f8; // UMaterialInterface*
		constexpr auto RenderTarget = 0x500; // UTextureRenderTarget2D*
		constexpr auto MaterialInstance = 0x508; // UMaterialInstanceDynamic*
		constexpr auto bAddedToScreen = 0x510; // bool
		constexpr auto bEditTimeUsable = 0x511; // bool
		constexpr auto SharedLayerName = 0x514; // FName
		constexpr auto LayerZOrder = 0x51c; // int
		constexpr auto GeometryMode = 0x520; // EWidgetGeometryMode
		constexpr auto CylinderArcAngle = 0x524; // float
	}

	namespace n_USQMapWidget { // : USQCoreStateMapWidget
		constexpr auto Angle = 0x270; // float
		constexpr auto ColorsDataAsset = 0x278; // USQColorsDataAsset*
		constexpr auto bUseAngleEvent = 0x280; // bool
		constexpr auto AngleTolerance = 0x284; // float
		constexpr auto LocationTolerance = 0x288; // float
	}

	namespace n_USQSquadStateDataPawn { // : USQSquadStateMapData
		constexpr auto bHiddenWhenUnpossessed = 0x180; // bool
		constexpr auto bHiddenWhenNotLocallyControlled = 0x181; // bool
		constexpr auto bHideWidgetWhenUnpossessed = 0x182; // bool
		constexpr auto CameraRotaionYawTolerance = 0x184; // float
		constexpr auto OwnerPlayerState = 0x188; // ASQPlayerState*
		constexpr auto CachedPlayerId = 0x194; // int
		constexpr auto FireTeamIndex = 0x198; // int
		constexpr auto CachedOwnerPlayerState = 0x1a0; // ASQPlayerState*
	}

	namespace n_ABP_AK74MGP25_1P63_UGL_Smoke_Red_C { // : ABP_AK74MGP25_1P63_UGL_Smoke_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UNavAreaMeta { // : UNavArea
		constexpr auto DefaultCost = 0x30; // float
		constexpr auto FixedAreaEnteringCost = 0x34; // float
		constexpr auto DrawColor = 0x38; // FColor
		constexpr auto SupportedAgents = 0x3c; // FNavAgentSelector
		constexpr auto bSupportsAgent0 = 0x40; // char : 1
		constexpr auto bSupportsAgent1 = 0x40; // char : 1
		constexpr auto bSupportsAgent2 = 0x40; // char : 1
		constexpr auto bSupportsAgent3 = 0x40; // char : 1
		constexpr auto bSupportsAgent4 = 0x40; // char : 1
		constexpr auto bSupportsAgent5 = 0x40; // char : 1
		constexpr auto bSupportsAgent6 = 0x40; // char : 1
		constexpr auto bSupportsAgent7 = 0x40; // char : 1
		constexpr auto bSupportsAgent8 = 0x41; // char : 1
		constexpr auto bSupportsAgent9 = 0x41; // char : 1
		constexpr auto bSupportsAgent10 = 0x41; // char : 1
		constexpr auto bSupportsAgent11 = 0x41; // char : 1
		constexpr auto bSupportsAgent12 = 0x41; // char : 1
		constexpr auto bSupportsAgent13 = 0x41; // char : 1
		constexpr auto bSupportsAgent14 = 0x41; // char : 1
		constexpr auto bSupportsAgent15 = 0x41; // char : 1
	}

	namespace n_UAnimCompress_Automatic { // : UAnimCompress
		constexpr auto MaxEndEffectorError = 0x50; // float
		constexpr auto bRunCurrentDefaultCompressor = 0x54; // char : 1
		constexpr auto bAutoReplaceIfExistingErrorTooGreat = 0x54; // char : 1
		constexpr auto bRaiseMaxErrorToExisting = 0x54; // char : 1
		constexpr auto bTryExhaustiveSearch = 0x54; // char : 1
	}

	namespace n_UParticleModuleRotationRateMultiplyLife { // : UParticleModuleRotationRateBase
		constexpr auto LifeMultiplier = 0x30; // FRawDistributionFloat
	}

	namespace n_UParticleModuleSpawnPerUnit { // : UParticleModuleSpawnBase
		constexpr auto UnitScalar = 0x38; // float
		constexpr auto SpawnPerUnit = 0x40; // FRawDistributionFloat
		constexpr auto bIgnoreSpawnRateWhenMoving = 0x78; // char : 1
		constexpr auto MovementTolerance = 0x7c; // float
		constexpr auto MaxFrameDistance = 0x80; // float
		constexpr auto bIgnoreMovementAlongX = 0x84; // char : 1
		constexpr auto bIgnoreMovementAlongY = 0x84; // char : 1
		constexpr auto bIgnoreMovementAlongZ = 0x84; // char : 1
	}

	namespace n_UAnimationSharingStateProcessor { // : UObject
		constexpr auto AnimationStateEnum = 0x28; // UEnum*
	}

	namespace n_UProjectile_SuppressionNone_C { // : USQSuppressionInfo
		constexpr auto SuppressSwayFactorRelease = 0x28; // float
		constexpr auto AddSuppressSway = 0x2c; // float
		constexpr auto MinSuppressSwayFactor = 0x30; // float
		constexpr auto MaxSuppressSwayFactor = 0x34; // float
		constexpr auto LofSuppressRange = 0x38; // float
		constexpr auto LofSuppressInterpSpeed = 0x3c; // float
		constexpr auto LofSuppressAlphaFactor = 0x40; // float
		constexpr auto LofSuppressRotationAlphaRelease = 0x44; // float
	}

	namespace n_UBP_L85A2AG36_UGL_HE_StaticInfo_C { // : UBP_L85A2AG36_UGL_Parent_StaticInfo_C
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_USQRotatingMovementComponent { // : USQMovementComponentPacked
		constexpr auto UpdatedComponent = 0x1e0; // USceneComponent*
		constexpr auto InputMultiplier = 0x1e8; // float
		constexpr auto ErrorTolerance = 0x1ec; // float
		constexpr auto AngularDeltaCombineThreshold = 0x1f0; // float
		constexpr auto RotationConstraints = 0x1f4; // FSQRotationConstraints
		constexpr auto RotationReplicatedMovement = 0x240; // FSQRotationRepMovement
	}

	namespace n_USQVehicleGasCan { // : USQVehicleComponent
		constexpr auto BaseDamage = 0x588; // float
		constexpr auto MinimumDamage = 0x58c; // float
		constexpr auto KillZoneRadius = 0x590; // float
		constexpr auto DamageInnerRadius = 0x594; // float
		constexpr auto DamageOuterRadius = 0x598; // float
		constexpr auto DamageFalloff = 0x59c; // float
	}

	namespace n_UParticleModuleEventReceiverBase { // : UParticleModuleEventBase
		constexpr auto EventGeneratorType = 0x30; // EParticleEventType
		constexpr auto EventName = 0x34; // FName
	}

	namespace n_ASQGameSession { // : AGameSession
		constexpr auto NumPlayersDiffForTeamChanges = 0x3e8; // int
		constexpr auto bAllowTeamChanges = 0x3ec; // bool
		constexpr auto bPreventTeamChangeIfUnbalanced = 0x3ed; // bool
		constexpr auto SquadConfig = 0x4c8; // USQConfig*
	}

	namespace n_USQSquadStateDataCaptureZone { // : USQSquadStateMapData
		constexpr auto FlagName = 0x180; // FText
		constexpr auto bUncappable = 0x198; // char : 1
		constexpr auto FlagTexture = 0x1a0; // UTexture2D*
		constexpr auto NeutralFlag = 0x1c8; // UTexture2D*
		constexpr auto OwningTeam = 0x1f0; // char
		constexpr auto CapturingTeam = 0x1f1; // char
		constexpr auto TeamCapturabilities = 0x1f4; // uint32
		constexpr auto CapturePercent = 0x1f8; // float
	}

	namespace n_USQAvailability_Vehicle { // : USQAvailability
		constexpr auto Setting = 0x50; // USQVehicleSettings*
	}

	namespace n_UEnvQueryTest_Random { // : UEnvQueryTest
		constexpr auto TestOrder = 0x30; // int
		constexpr auto TestPurpose = 0x34; // EEnvTestPurpose
		constexpr auto TestComment = 0x38; // FString
		constexpr auto MultipleContextFilterOp = 0x48; // EEnvTestFilterOperator
		constexpr auto MultipleContextScoreOp = 0x49; // EEnvTestScoreOperator
		constexpr auto FilterType = 0x4a; // EEnvTestFilterType
		constexpr auto BoolValue = 0x50; // FAIDataProviderBoolValue
		constexpr auto FloatValueMin = 0x80; // FAIDataProviderFloatValue
		constexpr auto FloatValueMax = 0xb0; // FAIDataProviderFloatValue
		constexpr auto ScoringEquation = 0xe1; // EEnvTestScoreEquation
		constexpr auto ClampMinType = 0xe2; // EEnvQueryTestClamping
		constexpr auto ClampMaxType = 0xe3; // EEnvQueryTestClamping
		constexpr auto NormalizationType = 0xe4; // EEQSNormalizationType
		constexpr auto ScoreClampMin = 0xe8; // FAIDataProviderFloatValue
		constexpr auto ScoreClampMax = 0x118; // FAIDataProviderFloatValue
		constexpr auto ScoringFactor = 0x148; // FAIDataProviderFloatValue
		constexpr auto ReferenceValue = 0x178; // FAIDataProviderFloatValue
		constexpr auto bDefineReferenceValue = 0x1a8; // bool
		constexpr auto bWorkOnFloatValues = 0x1b8; // char : 1
	}

	namespace n_UHighlightsSetScreenshotAsync { // : UBlueprintAsyncActionBase
		constexpr auto OnSuccess = 0x30; // FScriptMulticastDelegate
		constexpr auto OnFailure = 0x40; // FScriptMulticastDelegate
	}

	namespace n_ASQTeamState { // : AInfo
		constexpr auto Tickets = 0x248; // int
		constexpr auto AuthorityTeam = 0x250; // ASQTeam*
		constexpr auto DataCacher = 0x258; // USQTeamDataCacher*
		constexpr auto ID = 0x260; // int
		constexpr auto Score = 0x264; // float
		constexpr auto TeamWorkScore = 0x268; // float
		constexpr auto ObjectiveScore = 0x26c; // float
		constexpr auto NumKills = 0x270; // int
		constexpr auto NumDeaths = 0x274; // int
		constexpr auto NumWoundeds = 0x278; // int
		constexpr auto NumWounds = 0x27c; // int
		constexpr auto NumTeamkills = 0x280; // int
		constexpr auto HealPoints = 0x284; // float
		constexpr auto RevivedPoints = 0x288; // float
		constexpr auto IndexedSquadStates = 0x2b0; // TArray<ASQSquadState*>
		constexpr auto SquadStates = 0x2c0; // TArray<ASQSquadState*>
		constexpr auto PlayerStates = 0x310; // TArray<ASQPlayerState*>
		constexpr auto CommanderState = 0x320; // ASQCommanderState*
		constexpr auto FactionSetupId = 0x328; // FName
		constexpr auto FactionSetup = 0x330; // USQFactionSetup*
		constexpr auto OnDeployableTeamAvailabilityUpdate = 0x338; // FScriptMulticastDelegate
		constexpr auto OnDeployablePersonalAvailabilityUpdate = 0x348; // FScriptMulticastDelegate
		constexpr auto OnRoleTeamAvailabilityUpdate = 0x358; // FScriptMulticastDelegate
		constexpr auto OnRolePersonalAvailabilityUpdate = 0x368; // FScriptMulticastDelegate
		constexpr auto OnActionTeamAvailabilityUpdate = 0x378; // FScriptMulticastDelegate
		constexpr auto OnActionPersonalAvailabilityUpdate = 0x388; // FScriptMulticastDelegate
		constexpr auto OnVehicleTeamAvailabilityUpdate = 0x398; // FScriptMulticastDelegate
		constexpr auto OnVehiclePersonalAvailabilityUpdate = 0x3a8; // FScriptMulticastDelegate
		constexpr auto DeployableAvailabilities = 0x3b8; // TArray<FSQAvailabilityState_Deployable>
		constexpr auto RoleAvailabilities = 0x3c8; // TArray<FSQAvailabilityState_Role>
		constexpr auto ActionAvailabilities = 0x3d8; // TArray<FSQAvailabilityState_Action>
		constexpr auto VehicleAvailabilities = 0x3e8; // TArray<FSQAvailabilityState_Vehicle>
	}

	namespace n_ABP_M4_2Mags_C { // : ABP_M4A1_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_USQAnimDataEmotes { // : UDataAsset
		constexpr auto EmoteAnims = 0x30; // FSQEmoteAnims [0xa]
		constexpr auto CustomEmotes = 0x1c0; // TMap<FName, FSQEmoteAnims>
	}

	namespace n_UMaterialExpressionVertexColor { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_USQVotingComponent { // : UActorComponent
		constexpr auto PlayerName = 0xd8; // FName
		constexpr auto ActiveVoteStates = 0xe0; // TArray<FSQVoteStateContainer>
		constexpr auto ActiveVotes = 0xf0; // TMap<FName, USQVoteSession*>
		constexpr auto RS_OnVoteStart = 0x140; // FScriptMulticastDelegate
		constexpr auto RS_OnVoteUpdate = 0x150; // FScriptMulticastDelegate
		constexpr auto RS_OnVoteEnded = 0x160; // FScriptMulticastDelegate
		constexpr auto RS_OnVoteDisplayResults = 0x170; // FScriptMulticastDelegate
	}

	namespace n_USQMapWidgetMapMarkerObjective { // : USQMapWidgetMapMarker
		constexpr auto Texture = 0x2a8; // UTexture2D*
		constexpr auto Tint = 0x2b0; // FLinearColor
		constexpr auto SquadId = 0x2c0; // int
		constexpr auto FireTeamId = 0x2c4; // int
	}

	namespace n_ULevelScriptBlueprint { // : UBlueprint
		constexpr auto bRecompileOnLoad = 0x50; // char : 1
		constexpr auto ParentClass = 0x58; // UObject*
		constexpr auto bHasBeenRegenerated = 0x60; // char : 1
		constexpr auto bIsRegeneratingOnLoad = 0x60; // char : 1
		constexpr auto SimpleConstructionScript = 0x68; // USimpleConstructionScript*
		constexpr auto ComponentTemplates = 0x70; // TArray<UActorComponent*>
		constexpr auto Timelines = 0x80; // TArray<UTimelineTemplate*>
		constexpr auto InheritableComponentHandler = 0x90; // UInheritableComponentHandler*
		constexpr auto BlueprintType = 0x98; // EBlueprintType
		constexpr auto BlueprintSystemVersion = 0x9c; // int
		constexpr auto bNativize = 0xd0; // bool
	}

	namespace n_UMaterialExpressionLandscapeLayerWeight { // : UMaterialExpression
		constexpr auto Base = 0x40; // FExpressionInput
		constexpr auto Layer = 0x54; // FExpressionInput
		constexpr auto ParameterName = 0x68; // FName
		constexpr auto PreviewWeight = 0x70; // float
		constexpr auto ConstBase = 0x74; // FVector
		constexpr auto ExpressionGUID = 0x80; // FGuid
	}

	namespace n_UAISenseConfig_Blueprint { // : UAISenseConfig
		constexpr auto Implementation = 0x48; // UAISense_Blueprint*
	}

	namespace n_USQWeaponAnimInstance { // : USQItemAnimInstance
		constexpr auto bMagHasAmmo = 0x298; // bool
		constexpr auto bIsWeaponFiring = 0x299; // bool
		constexpr auto bIsReloading = 0x29a; // bool
		constexpr auto MagHasAmmoAlpha = 0x29c; // float
		constexpr auto NotMagHasAmmoAlpha = 0x2a0; // float
		constexpr auto CurrentMagRemainingRoundsTime = 0x2a4; // float
		constexpr auto CurrentMagRemainingRoundsMultiplier = 0x2a8; // float
		constexpr auto AdjustAdsSightItemAnimPos = 0x2ac; // float
	}

	namespace n_UAbilityTask_WaitDelay { // : UAbilityTask
		constexpr auto OnFinish = 0x80; // FScriptMulticastDelegate
	}

	namespace n_UMaterialExpressionLogarithm10 { // : UMaterialExpression
		constexpr auto X = 0x40; // FExpressionInput
	}

	namespace n_USaveData_UI_C { // : USaveGame
		constexpr auto Show Map Roles = 0x28; // bool
		constexpr auto SL Icon Always On = 0x29; // bool
		constexpr auto Show Stance Indicator = 0x2a; // bool
		constexpr auto Show FOB Radius = 0x2b; // bool
		constexpr auto Show FOB Supplies = 0x2c; // bool
		constexpr auto Show Team Waypoints = 0x2d; // bool
		constexpr auto Show Grid = 0x2e; // bool
		constexpr auto Show Spawns = 0x2f; // bool
		constexpr auto Show Weapons in Deployment = 0x30; // bool
		constexpr auto Show FT In Name Tag = 0x31; // bool
		constexpr auto Map Marker Scale = 0x34; // float
		constexpr auto Lattice Opacity = 0x38; // float
		constexpr auto Grid Opacity = 0x3c; // float
		constexpr auto SkipGiveUpOption = 0x40; // bool
		constexpr auto Show Fireteam Letters = 0x41; // bool
		constexpr auto Show Deployment Tutorial = 0x42; // bool
		constexpr auto Show Game Mode Animation = 0x43; // bool
		constexpr auto Show Whitelist Mods = 0x44; // bool
		constexpr auto Show Modded Servers = 0x45; // bool
		constexpr auto Show Vehicle Keybinds = 0x46; // bool
		constexpr auto Show TC Zones = 0x47; // bool
		constexpr auto Play Capture Sounds = 0x48; // bool
		constexpr auto FavouriteServers = 0x50; // TArray<FString>
		constexpr auto Show Favourites Only = 0x60; // bool
		constexpr auto Show Full Servers = 0x61; // bool
		constexpr auto LastSortType = 0x62; // E_SortType
		constexpr auto LastAscendingSortType = 0x63; // bool
		constexpr auto DisableOnScreenChat = 0x64; // bool
		constexpr auto Show Director Lines = 0x65; // bool
	}

	namespace n_AAtmosphericFog { // : AInfo
		constexpr auto AtmosphericFogComponent = 0x248; // UAtmosphericFogComponent*
	}

	namespace n_ATriggerSphere { // : ATriggerBase
		constexpr auto CollisionComponent = 0x248; // UShapeComponent*
	}

	namespace n_USQVoteSessionClient { // : USQVoteSession
		constexpr auto AddVoteSignal = 0x88; // FScriptMulticastDelegate
		constexpr auto RemoveVoteSignal = 0x98; // FScriptMulticastDelegate
	}

	namespace n_USQFactionSetup { // : USQPrimaryData
		constexpr auto FactionID = 0x70; // FName
		constexpr auto OuterFaction = 0x78; // USQFaction*
		constexpr auto DefaultRole = 0x80; // USQRoleSettings*
		constexpr auto DefaultSquadLeaderRole = 0x88; // USQRoleSettings*
		constexpr auto LeaveSquadRole = 0x90; // USQRoleSettings*
		constexpr auto Roles = 0x98; // TArray<USQAvailability_Role*>
		constexpr auto Deployables = 0xa8; // TArray<USQAvailability_Deployable*>
		constexpr auto Vehicles = 0xb8; // TArray<USQAvailability_Vehicle*>
		constexpr auto Actions = 0xc8; // TArray<USQAvailability_Action*>
	}

	namespace n_ABP_AKS74U_2mags_C { // : ABP_AKS74U_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_ABP_AK74MGP25_Rifle_Desert_C { // : ABP_AK74MGP25_Rifle_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_ABP_AK74M_1P78_C { // : ABP_AK74M_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UPlatformEventsComponent { // : UActorComponent
		constexpr auto PlatformChangedToLaptopModeDelegate = 0xd8; // FScriptMulticastDelegate
		constexpr auto PlatformChangedToTabletModeDelegate = 0xe8; // FScriptMulticastDelegate
	}

	namespace n_UParticleModuleBeamSource { // : UParticleModuleBeamBase
		constexpr auto SourceMethod = 0x30; // Beam2SourceTargetMethod
		constexpr auto SourceName = 0x34; // FName
		constexpr auto bSourceAbsolute = 0x3c; // char : 1
		constexpr auto Source = 0x40; // FRawDistributionVector
		constexpr auto bLockSource = 0x90; // char : 1
		constexpr auto SourceTangentMethod = 0x94; // Beam2SourceTargetTangentMethod
		constexpr auto SourceTangent = 0x98; // FRawDistributionVector
		constexpr auto bLockSourceTangent = 0xe8; // char : 1
		constexpr auto SourceStrength = 0xf0; // FRawDistributionFloat
		constexpr auto bLockSourceStength = 0x128; // char : 1
	}

	namespace n_USubmixEffectReverbFastPreset { // : USoundEffectSubmixPreset
		constexpr auto Settings = 0x9c; // FSubmixEffectReverbFastSettings
	}

	namespace n_UMaterialExpressionReflectionVectorWS { // : UMaterialExpression
		constexpr auto CustomWorldNormal = 0x40; // FExpressionInput
		constexpr auto bNormalizeCustomWorldNormal = 0x54; // char : 1
	}

	namespace n_UMultiPackerSettings { // : UDeveloperSettings
		constexpr auto ChannelMethod = 0x38; // EChannelTextureSave
		constexpr auto SaveMaterialCollection = 0x39; // bool
		constexpr auto SaveDatabase = 0x3a; // bool
		constexpr auto TargetDirectory = 0x40; // FDirectoryPath
		constexpr auto TextureChannelName = 0x50; // FString
		constexpr auto DatabasePrefix = 0x60; // FString
		constexpr auto TexturePrefix = 0x70; // FString
		constexpr auto MaterialcollectionPrefix = 0x80; // FString
	}

	namespace n_ALightmassCharacterIndirectDetailVolume { // : AVolume
		constexpr auto BrushType = 0x248; // EBrushType
		constexpr auto BrushColor = 0x24c; // FColor
		constexpr auto PolyFlags = 0x250; // int
		constexpr auto bColored = 0x254; // char : 1
		constexpr auto bSolidWhenSelected = 0x254; // char : 1
		constexpr auto bPlaceableFromClassBrowser = 0x254; // char : 1
		constexpr auto bNotForClientOrServer = 0x254; // char : 1
		constexpr auto Brush = 0x258; // UModel*
		constexpr auto BrushComponent = 0x260; // UBrushComponent*
		constexpr auto bInManipulation = 0x268; // char : 1
		constexpr auto SavedSelections = 0x270; // TArray<FGeomSelection>
	}

	namespace n_UARBasicLightEstimate { // : UARLightEstimate
		constexpr auto AmbientIntensityLumens = 0x28; // float
		constexpr auto AmbientColorTemperatureKelvin = 0x2c; // float
		constexpr auto AmbientColor = 0x30; // FLinearColor
	}

	namespace n_UBTTask_MoveDirectlyToward { // : UBTTask_MoveTo
		constexpr auto bDisablePathUpdateOnGoalLocationChange = 0xb0; // char : 1
		constexpr auto bProjectVectorGoalToNavigation = 0xb0; // char : 1
		constexpr auto bUpdatedDeprecatedProperties = 0xb0; // char : 1
	}

	namespace n_ADefaultPhysicsVolume { // : APhysicsVolume
		constexpr auto TerminalVelocity = 0x280; // float
		constexpr auto Priority = 0x284; // int
		constexpr auto FluidFriction = 0x288; // float
		constexpr auto bWaterVolume = 0x28c; // char : 1
		constexpr auto bPhysicsOnContact = 0x28c; // char : 1
	}

	namespace n_ABP_L85A2AG36_UGL_DarkEarth_Smoke_Red_C { // : ABP_L85A2AG36_UGL_DarkEarth_Smoke_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_ASQAudioVolume { // : AAudioVolume
		constexpr auto SquadAudioVolumeType = 0x2d8; // ESQAudioVolumeType
	}

	namespace n_ABP_AK74GP25_UGL_Parent_Founders_C { // : ABP_AK74GP25_UGL_Parent_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UUserWidget { // : UWidget
		constexpr auto ColorAndOpacity = 0x110; // FLinearColor
		constexpr auto ColorAndOpacityDelegate = 0x120; // DelegateProperty
		constexpr auto ForegroundColor = 0x130; // FSlateColor
		constexpr auto ForegroundColorDelegate = 0x158; // DelegateProperty
		constexpr auto Padding = 0x168; // FMargin
		constexpr auto ActiveSequencePlayers = 0x178; // TArray<UUMGSequencePlayer*>
		constexpr auto StoppedSequencePlayers = 0x188; // TArray<UUMGSequencePlayer*>
		constexpr auto NamedSlotBindings = 0x198; // TArray<FNamedSlotBinding>
		constexpr auto WidgetTree = 0x1a8; // UWidgetTree*
		constexpr auto Priority = 0x1b0; // int
		constexpr auto bSupportsKeyboardFocus = 0x1b4; // char : 1
		constexpr auto bIsFocusable = 0x1b4; // char : 1
		constexpr auto bStopAction = 0x1b4; // char : 1
		constexpr auto bHasScriptImplementedTick = 0x1b4; // char : 1
		constexpr auto bHasScriptImplementedPaint = 0x1b4; // char : 1
		constexpr auto bCookedWidgetTree = 0x1b4; // char : 1
		constexpr auto TickFrequency = 0x1c0; // EWidgetTickFrequency
		constexpr auto InputComponent = 0x1c8; // UInputComponent*
		constexpr auto AnimationCallbacks = 0x1d0; // TArray<FAnimationEventBinding>
	}

	namespace n_URadialForceComponent { // : USceneComponent
		constexpr auto Radius = 0x218; // float
		constexpr auto Falloff = 0x21c; // ERadialImpulseFalloff
		constexpr auto ImpulseStrength = 0x220; // float
		constexpr auto bImpulseVelChange = 0x224; // char : 1
		constexpr auto bIgnoreOwningActor = 0x224; // char : 1
		constexpr auto ForceStrength = 0x228; // float
		constexpr auto DestructibleDamage = 0x22c; // float
		constexpr auto ObjectTypesToAffect = 0x230; // TArray<EObjectTypeQuery>
	}

	namespace n_UGeometryCache { // : UObject
		constexpr auto Materials = 0x30; // TArray<UMaterialInterface*>
		constexpr auto Tracks = 0x40; // TArray<UGeometryCacheTrack*>
		constexpr auto StartFrame = 0x60; // int
		constexpr auto EndFrame = 0x64; // int
	}

	namespace n_UHudSettings { // : UObject
		constexpr auto bShowHUD = 0x28; // char : 1
		constexpr auto DebugDisplay = 0x30; // TArray<FName>
	}

	namespace n_UInt32Binding { // : UPropertyBinding
		constexpr auto SourceObject = 0x28; // TWeakObjectPtr<UObject>
		constexpr auto SourcePath = 0x30; // FDynamicPropertyPath
		constexpr auto DestinationProperty = 0x60; // FName
	}

	namespace n_ASQEquipableItem { // : AActor
		constexpr auto ItemStaticInfo = 0x248; // USQItemStaticInfo*
		constexpr auto ItemStaticInfoClass = 0x250; // USQItemStaticInfo*
		constexpr auto OnPawnOwnerChangedEvent = 0x280; // FScriptMulticastDelegate
		constexpr auto DisplayName = 0x290; // FText
		constexpr auto ItemDescription = 0x2a8; // FText
		constexpr auto RearmTypesAllowed = 0x2c0; // int
		constexpr auto bUseOwnerAsMasterPose = 0x2c4; // bool
		constexpr auto AmmoPerRearmItem = 0x2c8; // float
		constexpr auto UnequippedNetUpdateRate = 0x2d0; // float
		constexpr auto ActionState = 0x2d4; // ESQEquippableActionState
		constexpr auto SprintBlendspace = 0x2d8; // UBlendSpace1D*
		constexpr auto WalkForwardAnim = 0x2e0; // UAnimSequence*
		constexpr auto IdleAnim = 0x2e8; // UAnimSequence*
		constexpr auto UseAnim = 0x2f0; // UAnimSequence*
		constexpr auto StandAnim = 0x2f8; // UAnimSequence*
		constexpr auto EquipAnim = 0x300; // UAnimSequence*
		constexpr auto UnequipAnim = 0x308; // UAnimSequence*
		constexpr auto AltUseAnim = 0x310; // UAnimSequence*
		constexpr auto Custom1Anim = 0x318; // UAnimSequence*
		constexpr auto Custom2Anim = 0x320; // UAnimSequence*
		constexpr auto Custom3Anim = 0x328; // UAnimSequence*
		constexpr auto PreUseAnim = 0x330; // UAnimSequence*
		constexpr auto PostUseAnim = 0x338; // UAnimSequence*
		constexpr auto PreAltUseAnim = 0x340; // UAnimSequence*
		constexpr auto PostAltUseAnim = 0x348; // UAnimSequence*
		constexpr auto HUDSelectedTexture = 0x350; // UTexture2D*
		constexpr auto HUDTexture = 0x358; // UTexture2D*
		constexpr auto bShowItemCountInInventory = 0x360; // bool
		constexpr auto bShowMagCountInInventory = 0x361; // bool
		constexpr auto bShowAmmoDataInHud = 0x362; // bool
		constexpr auto bChangeDormancyOnEquipState = 0x363; // bool
		constexpr auto ItemCount = 0x364; // int
		constexpr auto MaxItemCount = 0x368; // int
		constexpr auto bCannotRearm = 0x36c; // char : 1
		constexpr auto EquipDuration = 0x374; // float
		constexpr auto UnequipDuration = 0x378; // float
		constexpr auto RearmCounterMultiplier = 0x384; // float
		constexpr auto Root = 0x388; // USceneComponent*
		constexpr auto Mesh1P = 0x390; // USkeletalMeshComponent*
		constexpr auto Mesh3P = 0x398; // USkeletalMeshComponent*
		constexpr auto PawnOwner = 0x3a0; // APawn*
		constexpr auto LocalPlayerController = 0x3a8; // APlayerController*
		constexpr auto PlayAnimationEvent = 0x3b0; // FScriptMulticastDelegate
		constexpr auto PauseAnimationEvent = 0x3c0; // FScriptMulticastDelegate
		constexpr auto ResumeAnimationEvent = 0x3d0; // FScriptMulticastDelegate
		constexpr auto SetAnimationPlayRateEvent = 0x3e0; // FScriptMulticastDelegate
		constexpr auto EndLoopAnimationEvent = 0x3f0; // FScriptMulticastDelegate
		constexpr auto StopAnimationEvent = 0x400; // FScriptMulticastDelegate
		constexpr auto AudioComponentPool = 0x410; // FSQAudioComponentPool
		constexpr auto CachedWeapon1pAnimInstance = 0x430; // UAnimInstance*
		constexpr auto CachedWeapon3pAnimInstance = 0x438; // UAnimInstance*
		constexpr auto CachedSoldier1pAnimInstance = 0x440; // USQAnimInstanceSoldier1P*
		constexpr auto CachedSoldier3pAnimInstance = 0x448; // USQAnimInstanceSoldier3P*
		constexpr auto CachedEquipDuration = 0x450; // float
		constexpr auto CachedUnequipDuration = 0x454; // float
		constexpr auto EquipState = 0x458; // ESQEquippableState
		constexpr auto bCachedMoveBobbing = 0x459; // bool
		constexpr auto bCachedSprintBobbing = 0x45a; // bool
		constexpr auto bCachedHasMovement = 0x45b; // bool
		constexpr auto bCachedIsPullingTrigger = 0x45c; // bool
		constexpr auto bCachedIsLeaningRight = 0x45d; // bool
		constexpr auto bCachedIsLeaningLeft = 0x45e; // bool
		constexpr auto CachedDeltaTime = 0x460; // float
	}

	namespace n_ABP_M4M203_M150_UGL_Woodland_Smoke_Blue_C { // : ABP_M4M203_M150_UGL_Woodland_Smoke_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_USkeletalMeshSimulationComponent { // : UActorComponent
		constexpr auto PhysicalMaterial = 0xe0; // UChaosPhysicalMaterial*
		constexpr auto ChaosSolverActor = 0xe8; // AChaosSolverActor*
		constexpr auto OverridePhysicsAsset = 0xf0; // UPhysicsAsset*
		constexpr auto bSimulating = 0xf8; // bool
		constexpr auto bNotifyCollisions = 0xf9; // bool
		constexpr auto ObjectType = 0xfa; // EObjectStateTypeEnum
		constexpr auto Density = 0xfc; // float
		constexpr auto MinMass = 0x100; // float
		constexpr auto MaxMass = 0x104; // float
		constexpr auto CollisionType = 0x108; // ECollisionTypeEnum
		constexpr auto ImplicitShapeParticlesPerUnitArea = 0x10c; // float
		constexpr auto ImplicitShapeMinNumParticles = 0x110; // int
		constexpr auto ImplicitShapeMaxNumParticles = 0x114; // int
		constexpr auto MinLevelSetResolution = 0x118; // int
		constexpr auto MaxLevelSetResolution = 0x11c; // int
		constexpr auto CollisionGroup = 0x120; // int
		constexpr auto InitialVelocityType = 0x124; // EInitialVelocityTypeEnum
		constexpr auto InitialLinearVelocity = 0x128; // FVector
		constexpr auto InitialAngularVelocity = 0x134; // FVector
		constexpr auto OnChaosPhysicsCollision = 0x140; // FScriptMulticastDelegate
	}

	namespace n_UMaterialExpressionStaticComponentMaskParameter { // : UMaterialExpressionParameter
		constexpr auto Input = 0x58; // FExpressionInput
		constexpr auto DefaultR = 0x6c; // char : 1
		constexpr auto DefaultG = 0x6c; // char : 1
		constexpr auto DefaultB = 0x6c; // char : 1
		constexpr auto DefaultA = 0x6c; // char : 1
	}

	namespace n_UMaterialExpressionBentNormalCustomOutput { // : UMaterialExpressionCustomOutput
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UBodySetup { // : UObject
		constexpr auto AggGeom = 0x28; // FKAggregateGeom
		constexpr auto BoneName = 0x80; // FName
		constexpr auto PhysicsType = 0x88; // EPhysicsType
		constexpr auto bAlwaysFullAnimWeight = 0x89; // char : 1
		constexpr auto bConsiderForBounds = 0x89; // char : 1
		constexpr auto bMeshCollideAll = 0x89; // char : 1
		constexpr auto bDoubleSidedGeometry = 0x89; // char : 1
		constexpr auto bGenerateNonMirroredCollision = 0x89; // char : 1
		constexpr auto bSharedCookedData = 0x89; // char : 1
		constexpr auto bGenerateMirroredCollision = 0x89; // char : 1
		constexpr auto CollisionReponse = 0x8b; // EBodyCollisionResponse
		constexpr auto CollisionTraceFlag = 0x8c; // ECollisionTraceFlag
		constexpr auto PhysMaterial = 0x90; // UPhysicalMaterial*
		constexpr auto WalkableSlopeOverride = 0x98; // FWalkableSlopeOverride
		constexpr auto DefaultInstance = 0x110; // FBodyInstance
		constexpr auto BuildScale3D = 0x228; // FVector
	}

	namespace n_UAsyncTask_LoadXRDeviceVisComponent { // : UBlueprintAsyncActionBase
		constexpr auto OnModelLoaded = 0x30; // FScriptMulticastDelegate
		constexpr auto OnLoadFailure = 0x40; // FScriptMulticastDelegate
		constexpr auto SpawnedComponent = 0x58; // UPrimitiveComponent*
	}

	namespace n_UObjectReferencer { // : UObject
		constexpr auto ReferencedObjects = 0x28; // TArray<UObject*>
	}

	namespace n_UMovieSceneParameterSection { // : UMovieSceneSection
		constexpr auto ScalarParameterNamesAndCurves = 0xe0; // TArray<FScalarParameterNameAndCurve>
		constexpr auto VectorParameterNamesAndCurves = 0xf0; // TArray<FVectorParameterNameAndCurves>
		constexpr auto ColorParameterNamesAndCurves = 0x100; // TArray<FColorParameterNameAndCurves>
	}

	namespace n_UBP_Attachment_L85A2_RailMount_C { // : USQWeaponAttachment_Scope
		constexpr auto MeshTransitionPercentage = 0x4b0; // float
		constexpr auto ADSMesh = 0x4b8; // UStaticMesh*
		constexpr auto ADSMeshTransform = 0x4c0; // FTransform
		constexpr auto NonADSMesh = 0x4f0; // UStaticMesh*
		constexpr auto NonADSMeshTransform = 0x500; // FTransform
		constexpr auto InToADSMeshTransitionSettings = 0x530; // TArray<FSQMeshTransitionSettings>
		constexpr auto OutFromADSMeshTransitionSettings = 0x540; // TArray<FSQMeshTransitionSettings>
	}

	namespace n_USteamNetConnection { // : UIpConnection
		constexpr auto bIsPassthrough = 0x1a00; // bool
	}

	namespace n_ULightMapVirtualTexture2D { // : UTexture2D
		constexpr auto TypeToLayer = 0x100; // TArray<uint8>
	}

	namespace n_ASQDeployableMortarVehicle { // : ASQDeployableVehicle
		constexpr auto CachedTubePitch = 0x888; // float
	}

	namespace n_UParticleModuleSubUV { // : UParticleModuleSubUVBase
		constexpr auto Animation = 0x30; // USubUVAnimation*
		constexpr auto SubImageIndex = 0x38; // FRawDistributionFloat
		constexpr auto bUseRealTime = 0x70; // char : 1
	}

	namespace n_UShadowMapTexture2D { // : UTexture2D
		constexpr auto ShadowmapFlags = 0x100; // EShadowMapFlags
	}

	namespace n_USQScoreboardPlayer { // : USQUserWidget
		constexpr auto TalkingButton = 0x240; // USQStatefulButton*
		constexpr auto SQPC = 0x248; // ASQPlayerController*
		constexpr auto SQPlayerState = 0x250; // ASQPlayerState*
		constexpr auto OwnerSQPlayerState = 0x258; // ASQPlayerState*
		constexpr auto SelfColor = 0x278; // FLinearColor
		constexpr auto OtherColor = 0x288; // FLinearColor
		constexpr auto BleedingColor = 0x298; // FLinearColor
		constexpr auto IncapColor = 0x2a8; // FLinearColor
		constexpr auto DeadColor = 0x2b8; // FLinearColor
		constexpr auto BleedingTexture = 0x2c8; // UTexture2D*
		constexpr auto IncapTexture = 0x2d0; // UTexture2D*
		constexpr auto DeadTexture = 0x2d8; // UTexture2D*
		constexpr auto HealthTooltipDead = 0x2e0; // FText
		constexpr auto HealthTooltipIncap = 0x2f8; // FText
		constexpr auto HealthTooltipBleeding = 0x310; // FText
		constexpr auto bShowAllStats = 0x328; // bool
		constexpr auto bIsFriendlyScoreboard = 0x329; // bool
		constexpr auto LeaderPanel = 0x330; // UCanvasPanel*
		constexpr auto EndOfRoundPanel = 0x338; // UHorizontalBox*
		constexpr auto NotEndOfRoundSpacer = 0x340; // USpacer*
		constexpr auto LeaderText = 0x348; // UTextBlock*
		constexpr auto PlayerNameText = 0x350; // UTextBlock*
		constexpr auto KillsText = 0x358; // UTextBlock*
		constexpr auto IncapsText = 0x360; // UTextBlock*
		constexpr auto DeathsText = 0x368; // UTextBlock*
		constexpr auto RevivesText = 0x370; // UTextBlock*
		constexpr auto HealsText = 0x378; // UTextBlock*
		constexpr auto TeamworkText = 0x380; // UTextBlock*
		constexpr auto ObjectivesText = 0x388; // UTextBlock*
		constexpr auto ScoreText = 0x390; // UTextBlock*
		constexpr auto PingText = 0x398; // UTextBlock*
		constexpr auto LeaderTypeImage = 0x3a0; // UImage*
		constexpr auto FireteamImage = 0x3a8; // UImage*
		constexpr auto HealthStateImage = 0x3b0; // UImage*
		constexpr auto VehicleImage = 0x3b8; // UImage*
		constexpr auto RoleImage = 0x3c0; // UImage*
	}

	namespace n_UEnvQueryOption { // : UObject
		constexpr auto Generator = 0x28; // UEnvQueryGenerator*
		constexpr auto Tests = 0x30; // TArray<UEnvQueryTest*>
	}

	namespace n_ABP_M4M203_M150_UGL_Woodland_HE_C { // : ABP_M4M203_M150_UGL_Woodland_Parent_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_ASQForwardBase { // : ASQDeployable
		constexpr auto bIsSpawningEnabled = 0x418; // bool
		constexpr auto TimeToEnableSpawning = 0x41c; // float
		constexpr auto bCreatesFobSpawnPoints = 0x420; // bool
		constexpr auto bSuppliesCreateSpawnPoints = 0x421; // bool
		constexpr auto SpawnPointRadius = 0x424; // float
		constexpr auto SpawnOffset = 0x428; // FVector
		constexpr auto EnemiesToCapture = 0x434; // int
		constexpr auto Name = 0x438; // FString
		constexpr auto UseCaptureTick = 0x448; // bool
		constexpr auto TrackedDeployables = 0x450; // TArray<ASQDeployable*>
		constexpr auto OnFOBStateUpdated = 0x460; // FScriptMulticastDelegate
		constexpr auto SpawnPoints = 0x470; // TArray<ASQGameSpawn*>
		constexpr auto SpawnPointClass = 0x480; // ASQGameSpawn*
		constexpr auto bSieged = 0x488; // bool
		constexpr auto ActivatedTime = 0x48c; // float
		constexpr auto NumberOfTeammatesNeededToDeploy = 0x490; // int
		constexpr auto NumberOfLogisNeededToDeploy = 0x494; // int
		constexpr auto PercentToDisableSpawns = 0x498; // float
		constexpr auto CaptureZone = 0x4a0; // USphereComponent*
		constexpr auto DeploymentRadius = 0x4a8; // USphereComponent*
		constexpr auto ConstructionRadius = 0x4b0; // USphereComponent*
		constexpr auto bUseResourceTickRateToUpdateResources = 0x4b8; // bool
		constexpr auto MaxTicketsPerSecond = 0x4bc; // float
		constexpr auto TicketsPerPlayer = 0x4c0; // float
		constexpr auto TicketsLostWhenOverrun = 0x4c4; // int
		constexpr auto EnemiesToDisableSpawn = 0x4c8; // int
		constexpr auto InitialConstructionPoints = 0x4cc; // float
		constexpr auto MaxConstructionPoints = 0x4d0; // float
		constexpr auto InitialAmmo = 0x4d4; // float
		constexpr auto MaxAmmo = 0x4d8; // float
		constexpr auto CPPerSecond = 0x4dc; // float
		constexpr auto AmmoPerSecond = 0x4e0; // float
		constexpr auto ResourceGenerationRate = 0x4e4; // float
		constexpr auto CaptureTickRate = 0x4e8; // float
		constexpr auto Ammo = 0x4ec; // float
		constexpr auto ConstructionPoints = 0x4f0; // float
		constexpr auto NearbyEnemies = 0x4f4; // int
		constexpr auto SiegedSpawnPoints = 0x4f8; // int
		constexpr auto FOBSettings = 0x528; // USQForwardBaseSettings*
		constexpr auto bIsBleeding = 0x530; // bool
		constexpr auto EnterBleedingHealth = 0x534; // float
		constexpr auto ExitBleedingHealth = 0x538; // float
		constexpr auto BleedOutTime = 0x53c; // float
		constexpr auto EstimatedWorldTimeOfDeath = 0x540; // float
		constexpr auto BleedStateInstigator = 0x550; // AController*
		constexpr auto BleedStateCauser = 0x558; // AActor*
	}

	namespace n_AAbilitySystemTestPawn { // : ADefaultPawn
		constexpr auto AbilitySystemComponent = 0x2e8; // UAbilitySystemComponent*
	}

	namespace n_ABP_M4A1_Foregrip_Tracer_C { // : ABP_M4A1_Foregrip_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_AStaticMeshActor { // : AActor
		constexpr auto StaticMeshComponent = 0x248; // UStaticMeshComponent*
		constexpr auto bStaticMeshReplicateMovement = 0x250; // bool
		constexpr auto NavigationGeometryGatheringMode = 0x251; // ENavDataGatheringMode
	}

	namespace n_ABP_M4M203_M150_UGL_Smoke_Blue_Founders_C { // : ABP_M4M203_M150_UGL_Smoke_Founders_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_ASQAmmoResource { // : ASQVehicleResource
		constexpr auto ResourceDropQuantity = 0x248; // float
		constexpr auto ResourceDropRate = 0x24c; // float
		constexpr auto ServerResourceRate = 0x250; // float
		constexpr auto CurrentFob = 0x258; // ASQForwardBase*
		constexpr auto CurrentCaptureZone = 0x260; // AActor*
		constexpr auto ParentInventory = 0x268; // USQVehicleResourceWeaponInventoryComponent*
		constexpr auto MaxResources = 0x278; // int
		constexpr auto Resources = 0x27c; // int
	}

	namespace n_ABP_AKS74_1P29_Tracer_Founders_C { // : ABP_AKS74_1P29_Tracer_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
		constexpr auto Front = 0x7b8; // UStaticMeshComponent*
		constexpr auto Scope = 0x7c0; // UStaticMeshComponent*
	}

	namespace n_UCheckBoxWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto CheckBoxStyle = 0x30; // FCheckBoxStyle
	}

	namespace n_UParticleModuleMeshMaterial { // : UParticleModuleMaterialBase
		constexpr auto MeshMaterials = 0x30; // TArray<UMaterialInterface*>
	}

	namespace n_UBTService_BlueprintBase { // : UBTService
		constexpr auto AIOwner = 0x70; // AAIController*
		constexpr auto ActorOwner = 0x78; // AActor*
		constexpr auto bShowPropertyDetails = 0x90; // char : 1
		constexpr auto bShowEventDetails = 0x90; // char : 1
	}

	namespace n_ASQAASGraph { // : ASQUndirectedGraph
		constexpr auto bNodesHaveReplicated = 0x280; // bool
	}

	namespace n_UAISense_Blueprint { // : UAISense
		constexpr auto ListenerDataType = 0x80; // UUserDefinedStruct*
		constexpr auto ListenerContainer = 0x88; // TArray<UAIPerceptionComponent*>
		constexpr auto UnprocessedEvents = 0x98; // TArray<UAISenseEvent*>
	}

	namespace n_ASQTeamSpawnGroup { // : ASQGameSpawn
		constexpr auto SpawnPoints = 0x420; // TArray<ASQTeamSpawnPoint*>
	}

	namespace n_UMaterialExpressionPower { // : UMaterialExpression
		constexpr auto Base = 0x40; // FExpressionInput
		constexpr auto Exponent = 0x54; // FExpressionInput
		constexpr auto ConstExponent = 0x68; // float
	}

	namespace n_ULogoutCallbackProxy { // : UBlueprintAsyncActionBase
		constexpr auto OnSuccess = 0x30; // FScriptMulticastDelegate
		constexpr auto OnFailure = 0x40; // FScriptMulticastDelegate
	}

	namespace n_UAssetMappingTable { // : UObject
		constexpr auto MappedAssets = 0x28; // TArray<FAssetMapping>
	}

	namespace n_UMaterialExpressionLightmassReplace { // : UMaterialExpression
		constexpr auto Realtime = 0x40; // FExpressionInput
		constexpr auto Lightmass = 0x54; // FExpressionInput
	}

	namespace n_USQSquadStateDataRepairStation { // : USQSquadStateDataDeployable
		constexpr auto BuildState = 0x180; // ESQBuildState
	}

	namespace n_UMovieSceneFadeSection { // : UMovieSceneFloatSection
		constexpr auto FadeColor = 0x180; // FLinearColor
		constexpr auto bFadeAudio = 0x190; // char : 1
	}

	namespace n_UAbilitySystemComponent { // : UGameplayTasksComponent
		constexpr auto DefaultStartingData = 0x158; // TArray<FAttributeDefaults>
		constexpr auto SpawnedAttributes = 0x168; // TArray<UAttributeSet*>
		constexpr auto OutgoingDuration = 0x338; // float
		constexpr auto IncomingDuration = 0x33c; // float
		constexpr auto ClientDebugStrings = 0x360; // TArray<FString>
		constexpr auto ServerDebugStrings = 0x370; // TArray<FString>
		constexpr auto UserAbilityActivationInhibited = 0x3e0; // bool
		constexpr auto ReplicationProxyEnabled = 0x3e1; // bool
		constexpr auto bSuppressGrantAbility = 0x3e2; // bool
		constexpr auto bSuppressGameplayCues = 0x3e3; // bool
		constexpr auto SpawnedTargetActors = 0x3e8; // TArray<AGameplayAbilityTargetActor*>
		constexpr auto OwnerActor = 0x420; // AActor*
		constexpr auto AvatarActor = 0x428; // AActor*
		constexpr auto ActivatableAbilities = 0x440; // FGameplayAbilitySpecContainer
		constexpr auto AllReplicatedInstancedAbilities = 0x590; // TArray<UGameplayAbility*>
		constexpr auto RepAnimMontageInfo = 0x770; // FGameplayAbilityRepAnimMontage
		constexpr auto bCachedIsNetSimulated = 0x7a0; // bool
		constexpr auto bPendingMontageRep = 0x7a1; // bool
		constexpr auto LocalAnimMontageInfo = 0x7a8; // FGameplayAbilityLocalAnimMontage
		constexpr auto ActiveGameplayEffects = 0x878; // FActiveGameplayEffectsContainer
		constexpr auto ActiveGameplayCues = 0xcf8; // FActiveGameplayCueContainer
		constexpr auto MinimalReplicationGameplayCues = 0xe20; // FActiveGameplayCueContainer
		constexpr auto BlockedAbilityBindings = 0x1070; // TArray<char>
		constexpr auto MinimalReplicationTags = 0x11a8; // FMinimalReplicationTagCountMap
		constexpr auto ReplicatedPredictionKeyMap = 0x1218; // FReplicatedPredictionKeyMap
	}

	namespace n_UTextPropertyTestObject { // : UObject
		constexpr auto DefaultedText = 0x28; // FText
		constexpr auto UndefaultedText = 0x40; // FText
		constexpr auto TransientText = 0x58; // FText
	}

	namespace n_ABP_M4M203_M150_UGL_Smoke_Blue_C { // : ABP_M4M203_M150_UGL_Smoke_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_USQMedicBagStaticInfo { // : USQItemStaticInfo
		constexpr auto Healing1pBeginUseMontage = 0x4f8; // UAnimMontage*
		constexpr auto Healing3pBeginUseMontage = 0x500; // UAnimMontage*
		constexpr auto Healing1pEndUseMontage = 0x508; // UAnimMontage*
		constexpr auto Healing3pEndUseMontage = 0x510; // UAnimMontage*
		constexpr auto HealSelfSound = 0x518; // USoundCue*
		constexpr auto HealOtherSound = 0x520; // USoundCue*
		constexpr auto HealingDelay = 0x528; // float
		constexpr auto HealingAmount = 0x52c; // float
	}

	namespace n_UAbilityTask_PlayMontageAndWait { // : UAbilityTask
		constexpr auto OnCompleted = 0x80; // FScriptMulticastDelegate
		constexpr auto OnBlendOut = 0x90; // FScriptMulticastDelegate
		constexpr auto OnInterrupted = 0xa0; // FScriptMulticastDelegate
		constexpr auto OnCancelled = 0xb0; // FScriptMulticastDelegate
		constexpr auto MontageToPlay = 0xe8; // UAnimMontage*
		constexpr auto Rate = 0xf0; // float
		constexpr auto StartSection = 0xf4; // FName
		constexpr auto AnimRootMotionTranslationScale = 0xfc; // float
		constexpr auto bStopWhenAbilityEnds = 0x100; // bool
	}

	namespace n_UGarbageCollectionSettings { // : UDeveloperSettings
		constexpr auto TimeBetweenPurgingPendingKillObjects = 0x38; // float
		constexpr auto FlushStreamingOnGC = 0x3c; // char : 1
		constexpr auto AllowParallelGC = 0x3c; // char : 1
		constexpr auto IncrementalBeginDestroyEnabled = 0x3c; // char : 1
		constexpr auto MultithreadedDestructionEnabled = 0x3c; // char : 1
		constexpr auto CreateGCClusters = 0x3c; // char : 1
		constexpr auto ActorClusteringEnabled = 0x3c; // char : 1
		constexpr auto BlueprintClusteringEnabled = 0x3c; // char : 1
		constexpr auto UseDisregardForGCOnDedicatedServers = 0x3c; // char : 1
		constexpr auto MinGCClusterSize = 0x40; // int
		constexpr auto NumRetriesBeforeForcingGC = 0x44; // int
		constexpr auto MaxObjectsNotConsideredByGC = 0x48; // int
		constexpr auto SizeOfPermanentObjectPool = 0x4c; // int
		constexpr auto MaxObjectsInGame = 0x50; // int
		constexpr auto MaxObjectsInEditor = 0x54; // int
	}

	namespace n_UMaterialExpressionPixelNormalWS { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UNavArea { // : UNavAreaBase
		constexpr auto DefaultCost = 0x30; // float
		constexpr auto FixedAreaEnteringCost = 0x34; // float
		constexpr auto DrawColor = 0x38; // FColor
		constexpr auto SupportedAgents = 0x3c; // FNavAgentSelector
		constexpr auto bSupportsAgent0 = 0x40; // char : 1
		constexpr auto bSupportsAgent1 = 0x40; // char : 1
		constexpr auto bSupportsAgent2 = 0x40; // char : 1
		constexpr auto bSupportsAgent3 = 0x40; // char : 1
		constexpr auto bSupportsAgent4 = 0x40; // char : 1
		constexpr auto bSupportsAgent5 = 0x40; // char : 1
		constexpr auto bSupportsAgent6 = 0x40; // char : 1
		constexpr auto bSupportsAgent7 = 0x40; // char : 1
		constexpr auto bSupportsAgent8 = 0x41; // char : 1
		constexpr auto bSupportsAgent9 = 0x41; // char : 1
		constexpr auto bSupportsAgent10 = 0x41; // char : 1
		constexpr auto bSupportsAgent11 = 0x41; // char : 1
		constexpr auto bSupportsAgent12 = 0x41; // char : 1
		constexpr auto bSupportsAgent13 = 0x41; // char : 1
		constexpr auto bSupportsAgent14 = 0x41; // char : 1
		constexpr auto bSupportsAgent15 = 0x41; // char : 1
	}

	namespace n_ABP_L85A2_DarkEarth_Foregrip_C { // : ABP_L85A2_DarkEarth_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UEditableMesh { // : UObject
		constexpr auto Adapters = 0x328; // TArray<UEditableMeshAdapter*>
		constexpr auto TextureCoordinateCount = 0x340; // int
		constexpr auto PendingCompactCounter = 0x48c; // int
		constexpr auto SubdivisionCount = 0x490; // int
	}

	namespace n_ULandscapeSplinesComponent { // : UPrimitiveComponent
		constexpr auto ControlPoints = 0x408; // TArray<ULandscapeSplineControlPoint*>
		constexpr auto Segments = 0x418; // TArray<ULandscapeSplineSegment*>
		constexpr auto CookedForeignMeshComponents = 0x428; // TArray<UMeshComponent*>
	}

	namespace n_USQSquadStateDataPlayerState { // : USQSquadStateData
		constexpr auto bIsSquadLeader = 0x118; // char : 1
		constexpr auto bIsFireTeamLeader = 0x118; // char : 1
		constexpr auto FireTeamIndex = 0x11c; // int
		constexpr auto FireTeamPosition = 0x120; // int
		constexpr auto DeployRole = 0x128; // USQRoleSettings*
		constexpr auto CurrentVehicleData = 0x130; // USQVehicleUIStaticDataAsset*
		constexpr auto PlayerState = 0x138; // ASQPlayerState*
		constexpr auto PlayerId = 0x140; // int
		constexpr auto SelectionComponentId = 0x144; // FSQCoreStateId
		constexpr auto VoipChannel = 0x146; // ESQVoiceChannel
		constexpr auto bIsMuted = 0x147; // bool
	}

	namespace n_USQBTDecorator_HasLoSTo { // : UBTDecorator
		constexpr auto EnemyKey = 0x68; // FBlackboardKeySelector
	}

	namespace n_USQMapBoundarySettings { // : UDataAsset
		constexpr auto DefaultKillTime = 0x30; // float
		constexpr auto ClassKillTimes = 0x38; // TMap<UObject*, float>
	}

	namespace n_UBP_AK74GP25_UGL_HE_StaticInfo_C { // : UBP_AK74GP25_UGL_Parent_StaticInfo_C
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_UM4_Skeleton_AnimBlueprint_C { // : USQWeaponAnimInstance
		constexpr auto UberGraphFrame = 0x2b0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root_4136E2114573D91EF6AD3BA1AB5C101C = 0x2b8; // FAnimNode_Root
		constexpr auto AnimGraphNode_LayeredBoneBlend_04976B224AB9E867E56882809065D5A8 = 0x2e8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_A308368548A80EEC8E7AF5B49CA45883 = 0x3a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot_93DA30564D7FC3A0A729498FA0227F0D = 0x420; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_5D7FE9164BED39B4B000E8B4CDA1A1BF = 0x468; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_4F714EED40D6EF2E742D3893876618FE = 0x4b0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_LocalRefPose_CE504B634E54B3B14B5F30969F1111F7 = 0x4f8; // FAnimNode_RefPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_2DA60691488E6DF154FD3788C73994E6 = 0x510; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_ModifyBone_75FF0A0F40C67CA270DF58A10E5B3869 = 0x5d0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_F037B8134954E52D7FE1E9B7E033561F = 0x6d8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_SequenceEvaluator_7703DDA140F04C06466B7B84DB44EEEF = 0x6f8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_AnimDynamics_E075DB674D7B6B554DC33D8651A68456 = 0x740; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_ComponentToLocalSpace_D610FA8D4282C3DB890A77AE3050B487 = 0xb80; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LayeredBoneBlend_B99C6768407C6F7B2170B39FC1BB764E = 0xba0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_60FD65CC40A067B70770749F56CD7860 = 0xc60; // FAnimNode_SequenceEvaluator
	}

	namespace n_USkeletalBodySetup { // : UBodySetup
		constexpr auto bSkipScaleFromAnimation = 0x240; // bool
		constexpr auto PhysicalAnimationData = 0x248; // TArray<FPhysicalAnimationProfile>
	}

	namespace n_ASpectatorBeaconClient { // : AOnlineBeaconClient
		constexpr auto DestSessionId = 0x2f8; // FString
		constexpr auto PendingReservation = 0x308; // FSpectatorReservation
		constexpr auto RequestType = 0x380; // ESpectatorClientRequestType
		constexpr auto bPendingReservationSent = 0x381; // bool
		constexpr auto bCancelReservation = 0x382; // bool
	}

	namespace n_UInterpData { // : UObject
		constexpr auto InterpLength = 0x28; // float
		constexpr auto PathBuildTime = 0x2c; // float
		constexpr auto InterpGroups = 0x30; // TArray<UInterpGroup*>
		constexpr auto CurveEdSetup = 0x40; // UInterpCurveEdSetup*
		constexpr auto EdSectionStart = 0x48; // float
		constexpr auto EdSectionEnd = 0x4c; // float
		constexpr auto bShouldBakeAndPrune = 0x50; // char : 1
		constexpr auto CachedDirectorGroup = 0x58; // UInterpGroupDirector*
		constexpr auto AllEventNames = 0x60; // TArray<FName>
	}

	namespace n_UMapBuildDataRegistry { // : UObject
		constexpr auto LevelLightingQuality = 0x28; // ELightingBuildQuality
	}

	namespace n_UParticleModuleKillBox { // : UParticleModuleKillBase
		constexpr auto LowerLeftCorner = 0x30; // FRawDistributionVector
		constexpr auto UpperRightCorner = 0x80; // FRawDistributionVector
		constexpr auto bAbsolute = 0xd0; // char : 1
		constexpr auto bKillInside = 0xd0; // char : 1
		constexpr auto bAxisAlignedAndFixedSize = 0xd0; // char : 1
	}

	namespace n_UMaterialExpressionTextureSampleParameter2D { // : UMaterialExpressionTextureSampleParameter
		constexpr auto ParameterName = 0xe0; // FName
		constexpr auto ExpressionGUID = 0xe8; // FGuid
		constexpr auto Group = 0xf8; // FName
	}

	namespace n_AOnlineBeaconClient { // : AOnlineBeacon
		constexpr auto BeaconOwner = 0x278; // AOnlineBeaconHostObject*
		constexpr auto BeaconConnection = 0x280; // UNetConnection*
		constexpr auto ConnectionState = 0x288; // EBeaconConnectionState
	}

	namespace n_UBP_AK74_Optic_1p29_StaticInfo_C { // : UBP_AK74_Optic_StaticInfo_C
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_USQMapWidgetMapMarker { // : USQMapWidget
		constexpr auto Texture = 0x2a8; // UTexture2D*
		constexpr auto Tint = 0x2b0; // FLinearColor
		constexpr auto SquadId = 0x2c0; // int
		constexpr auto FireTeamId = 0x2c4; // int
	}

	namespace n_UEnvQueryGenerator_PathingGrid { // : UEnvQueryGenerator_SimpleGrid
		constexpr auto PathToItem = 0xe8; // FAIDataProviderBoolValue
		constexpr auto NavigationFilter = 0x118; // UNavigationQueryFilter*
		constexpr auto ScanRangeMultiplier = 0x120; // FAIDataProviderFloatValue
	}

	namespace n_USQFieldDressingStaticInfo { // : USQItemStaticInfo
		constexpr auto HealingSelfRightArm1pMontage = 0x4f8; // UAnimMontage*
		constexpr auto HealingSelfRightArm3pMontage = 0x500; // UAnimMontage*
		constexpr auto HealingSelfRightArm1pWeaponMontage = 0x508; // UAnimMontage*
		constexpr auto HealingSelfRightArm3pWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto HealingSelfLeftArm1pMontage = 0x518; // UAnimMontage*
		constexpr auto HealingSelfLeftArm3pMontage = 0x520; // UAnimMontage*
		constexpr auto HealingSelfLeftArm1pWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto HealingSelfLeftArm3pWeaponMontage = 0x530; // UAnimMontage*
		constexpr auto HealingSelfEnd1pMontage = 0x538; // UAnimMontage*
		constexpr auto HealingSelfEnd3pMontage = 0x540; // UAnimMontage*
		constexpr auto HealingSelfEnd1pWeaponMontage = 0x548; // UAnimMontage*
		constexpr auto HealingSelfEnd3pWeaponMontage = 0x550; // UAnimMontage*
		constexpr auto Healing1pMontage = 0x558; // UAnimMontage*
		constexpr auto Healing3pMontage = 0x560; // UAnimMontage*
		constexpr auto HealingEnd1pMontage = 0x568; // UAnimMontage*
		constexpr auto HealingEnd3pMontage = 0x570; // UAnimMontage*
		constexpr auto Healing1pWeaponMontage = 0x578; // UAnimMontage*
		constexpr auto Healing3pWeaponMontage = 0x580; // UAnimMontage*
		constexpr auto HealingEnd1pWeaponMontage = 0x588; // UAnimMontage*
		constexpr auto HealingEnd3pWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto Reviving1pMontage = 0x598; // UAnimMontage*
		constexpr auto Reviving3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto RevivingEnd1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto RevivingEnd3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto Reviving1pWeaponMontage = 0x5b8; // UAnimMontage*
		constexpr auto Reviving3pWeaponMontage = 0x5c0; // UAnimMontage*
		constexpr auto RevivingEnd1pWeaponMontage = 0x5c8; // UAnimMontage*
		constexpr auto RevivingEnd3pWeaponMontage = 0x5d0; // UAnimMontage*
		constexpr auto HealSelfSound = 0x5d8; // USoundCue*
		constexpr auto HealOtherSound = 0x5e0; // USoundCue*
		constexpr auto ReviveOtherSound = 0x5e8; // USoundCue*
		constexpr auto NormalReviveDuration = 0x5f0; // float
		constexpr auto MedicReviveDuration = 0x5f4; // float
		constexpr auto NormalStopBleedingOtherDuration = 0x5f8; // float
		constexpr auto NormalStopBleedingSelfDuration = 0x5fc; // float
		constexpr auto MedicStopBleedingOtherDuration = 0x600; // float
		constexpr auto MedicStopBleedingSelfDuration = 0x604; // float
		constexpr auto AnimPlayRateMultiplier = 0x608; // float
	}

	namespace n_UGeometryCollectionCache { // : UObject
		constexpr auto RecordedData = 0x28; // FRecordedTransformTrack
		constexpr auto SupportedCollection = 0x38; // UGeometryCollection*
		constexpr auto CompatibleCollectionState = 0x40; // FGuid
	}

	namespace n_USQSoundNodeFlyBy { // : USoundNode
		constexpr auto SpeedOfSound = 0x40; // float
		constexpr auto MidpointTime = 0x44; // float
		constexpr auto DopplerIntensity = 0x48; // float
		constexpr auto bUseListenerLocationForSoundSource = 0x4c; // bool
		constexpr auto bOverrideSpatialization = 0x4d; // bool
		constexpr auto bUseSpatialization = 0x4e; // bool
		constexpr auto TestPitchRelativeVelocityInMeters = 0x50; // float
		constexpr auto TestStartTime = 0x54; // float
	}

	namespace n_UFontFace { // : UObject
		constexpr auto SourceFilename = 0x30; // FString
		constexpr auto Hinting = 0x40; // EFontHinting
		constexpr auto LoadingPolicy = 0x41; // EFontLoadingPolicy
		constexpr auto LayoutMethod = 0x42; // EFontLayoutMethod
	}

	namespace n_ANavigationGraphNode { // : AActor
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto bHidden = 0x80; // char : 1
		constexpr auto bNetTemporary = 0x80; // char : 1
		constexpr auto bNetStartup = 0x80; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x80; // char : 1
		constexpr auto bAlwaysRelevant = 0x80; // char : 1
		constexpr auto bReplicateMovement = 0x80; // char : 1
		constexpr auto bTearOff = 0x80; // char : 1
		constexpr auto bExchangedRoles = 0x80; // char : 1
		constexpr auto bNetLoadOnClient = 0x81; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x81; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x81; // char : 1
		constexpr auto bRelevantForLevelBounds = 0x81; // char : 1
		constexpr auto bReplayRewindable = 0x81; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x81; // char : 1
		constexpr auto bAutoDestroyWhenFinished = 0x81; // char : 1
		constexpr auto bBlockInput = 0x81; // char : 1
		constexpr auto bCanBeDamaged = 0x82; // char : 1
		constexpr auto bCollideWhenPlacing = 0x82; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x82; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x82; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x82; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x82; // char : 1
		constexpr auto bIsEditorOnlyActor = 0x82; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x82; // char : 1
		constexpr auto bReplicates = 0x83; // char : 1
		constexpr auto bCanBeInCluster = 0x83; // char : 1
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x83; // char : 1
		constexpr auto bActorEnableCollision = 0x84; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x84; // char : 1
		constexpr auto RemoteRole = 0x85; // ENetRole
		constexpr auto ReplicatedMovement = 0x88; // FRepMovement
		constexpr auto InitialLifeSpan = 0xbc; // float
		constexpr auto CustomTimeDilation = 0xc0; // float
		constexpr auto AttachmentReplication = 0xc8; // FRepAttachment
		constexpr auto Owner = 0x108; // AActor*
		constexpr auto NetDriverName = 0x110; // FName
		constexpr auto Role = 0x118; // ENetRole
		constexpr auto NetDormancy = 0x119; // ENetDormancy
		constexpr auto SpawnCollisionHandlingMethod = 0x11a; // ESpawnActorCollisionHandlingMethod
		constexpr auto AutoReceiveInput = 0x11b; // EAutoReceiveInput
		constexpr auto InputPriority = 0x11c; // int
		constexpr auto InputComponent = 0x120; // UInputComponent*
		constexpr auto NetCullDistanceSquared = 0x128; // float
		constexpr auto NetTag = 0x12c; // int
		constexpr auto NetUpdateFrequency = 0x130; // float
		constexpr auto MinNetUpdateFrequency = 0x134; // float
		constexpr auto bUseRelativeNetUpdateFrequency = 0x138; // char : 1
		constexpr auto bUseOwnerRelativeNetUpdateFrequency = 0x138; // char : 1
		constexpr auto MinRelativeNetUpdateEvaluationFrequency = 0x13c; // float
		constexpr auto NetPriority = 0x140; // float
		constexpr auto Instigator = 0x148; // APawn*
		constexpr auto Children = 0x150; // TArray<AActor*>
		constexpr auto RootComponent = 0x160; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x168; // TArray<AMatineeActor*>
		constexpr auto Layers = 0x180; // TArray<FName>
		constexpr auto ParentComponent = 0x190; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto Tags = 0x198; // TArray<FName>
		constexpr auto OnTakeAnyDamage = 0x1a8; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x1a9; // FScriptMulticastDelegate
		constexpr auto OnTakeRadialDamage = 0x1aa; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x1ab; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x1ac; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x1ad; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x1ae; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x1af; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x1b0; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x1b1; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x1b2; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x1b3; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x1b4; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x1b5; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x1b6; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x1b7; // FScriptMulticastDelegate
		constexpr auto InstanceComponents = 0x218; // TArray<UActorComponent*>
		constexpr auto BlueprintCreatedComponents = 0x228; // TArray<UActorComponent*>
	}

	namespace n_UBP_Attachment_1p29_C { // : USQWeaponAttachment_Scope
		constexpr auto MeshTransitionPercentage = 0x4b0; // float
		constexpr auto ADSMesh = 0x4b8; // UStaticMesh*
		constexpr auto ADSMeshTransform = 0x4c0; // FTransform
		constexpr auto NonADSMesh = 0x4f0; // UStaticMesh*
		constexpr auto NonADSMeshTransform = 0x500; // FTransform
		constexpr auto InToADSMeshTransitionSettings = 0x530; // TArray<FSQMeshTransitionSettings>
		constexpr auto OutFromADSMeshTransitionSettings = 0x540; // TArray<FSQMeshTransitionSettings>
	}

	namespace n_UAsyncActionLoadPrimaryAsset { // : UAsyncActionLoadPrimaryAssetBase
		constexpr auto Completed = 0x78; // FScriptMulticastDelegate
	}

	namespace n_UCurveLinearColorAtlas { // : UTexture2D
		constexpr auto TextureSize = 0x100; // uint32
		constexpr auto GradientPixelSize = 0x104; // uint32
		constexpr auto GradientCurves = 0x108; // TArray<UCurveLinearColor*>
	}

	namespace n_USocialToolkit { // : UObject
		constexpr auto LocalUser = 0x60; // USocialUser*
		constexpr auto AllUsers = 0x68; // TArray<USocialUser*>
		constexpr auto LocalPlayerOwner = 0xc8; // ULocalPlayer*
		constexpr auto SocialChatManager = 0xd0; // USocialChatManager*
	}

	namespace n_UEdGraphNode_Documentation { // : UEdGraphNode
		constexpr auto Link = 0x98; // FString
		constexpr auto Excerpt = 0xa8; // FString
	}

	namespace n_UParticleModuleBeamModifier { // : UParticleModuleBeamBase
		constexpr auto ModifierType = 0x30; // BeamModifierType
		constexpr auto PositionOptions = 0x34; // FBeamModifierOptions
		constexpr auto Position = 0x38; // FRawDistributionVector
		constexpr auto TangentOptions = 0x88; // FBeamModifierOptions
		constexpr auto Tangent = 0x90; // FRawDistributionVector
		constexpr auto bAbsoluteTangent = 0xe0; // char : 1
		constexpr auto StrengthOptions = 0xe4; // FBeamModifierOptions
		constexpr auto Strength = 0xe8; // FRawDistributionFloat
	}

	namespace n_UDatasmithStaticMeshIFCImportData { // : UDatasmithStaticMeshImportData
		constexpr auto SourceGlobalId = 0x28; // FString
	}

	namespace n_UToIntegerField { // : UFieldNodeInt
		constexpr auto FloatField = 0xd8; // UFieldNodeFloat*
	}

	namespace n_UBP_M4_Optic_Foregrip_StaticInfo_C { // : UBP_M4_Foregrip_StaticInfo_C
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_URetainerBox { // : UContentWidget
		constexpr auto RenderOnInvalidation = 0x120; // bool
		constexpr auto RenderOnPhase = 0x121; // bool
		constexpr auto Phase = 0x124; // int
		constexpr auto PhaseCount = 0x128; // int
		constexpr auto EffectMaterial = 0x130; // UMaterialInterface*
		constexpr auto TextureParameter = 0x138; // FName
	}

	namespace n_ULeaderboardFlushCallbackProxy { // : UObject
		constexpr auto OnSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto OnFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_UVirtualTexturePoolConfig { // : UObject
		constexpr auto DefaultSizeInMegabyte = 0x28; // int
		constexpr auto Pools = 0x30; // TArray<FVirtualTextureSpacePoolConfig>
	}

	namespace n_USQVotingState { // : UActorComponent
		constexpr auto ActiveVotes = 0xd8; // TArray<USQVoteSessionAuthority*>
		constexpr auto LevelVoteInProgress = 0xe8; // bool
		constexpr auto LayerVoteInProgress = 0xe9; // bool
		constexpr auto GenericVoteProgress = 0xea; // bool
		constexpr auto FactionVotesInProgress = 0xf0; // TArray<int>
	}

	namespace n_UNoiseField { // : UFieldNodeFloat
		constexpr auto MinRange = 0xd8; // float
		constexpr auto MaxRange = 0xdc; // float
		constexpr auto Transform = 0xe0; // FTransform
	}

	namespace n_UAnimComposite { // : UAnimCompositeBase
		constexpr auto AnimationTrack = 0xa8; // FAnimTrack
	}

	namespace n_USoundNodeEnveloper { // : USoundNode
		constexpr auto LoopStart = 0x40; // float
		constexpr auto LoopEnd = 0x44; // float
		constexpr auto DurationAfterLoop = 0x48; // float
		constexpr auto LoopCount = 0x4c; // int
		constexpr auto bLoopIndefinitely = 0x50; // char : 1
		constexpr auto bLoop = 0x50; // char : 1
		constexpr auto VolumeInterpCurve = 0x58; // UDistributionFloatConstantCurve*
		constexpr auto PitchInterpCurve = 0x60; // UDistributionFloatConstantCurve*
		constexpr auto VolumeCurve = 0x68; // FRuntimeFloatCurve
		constexpr auto PitchCurve = 0xf0; // FRuntimeFloatCurve
		constexpr auto PitchMin = 0x178; // float
		constexpr auto PitchMax = 0x17c; // float
		constexpr auto VolumeMin = 0x180; // float
		constexpr auto VolumeMax = 0x184; // float
	}

	namespace n_UPrefabObjectExporterT3D { // : UPrefabExporter
		constexpr auto SupportedClass = 0x28; // UObject*
		constexpr auto ExportRootScope = 0x30; // UObject*
		constexpr auto FormatExtension = 0x38; // TArray<FString>
		constexpr auto FormatDescription = 0x48; // TArray<FString>
		constexpr auto PreferredFormatIndex = 0x58; // int
		constexpr auto TextIndent = 0x5c; // int
		constexpr auto bText = 0x60; // char : 1
		constexpr auto bSelectedOnly = 0x60; // char : 1
		constexpr auto bForceFileOperations = 0x60; // char : 1
		constexpr auto ExportTask = 0x68; // UAssetExportTask*
	}

	namespace n_UAsyncActionLoadPrimaryAssetList { // : UAsyncActionLoadPrimaryAssetBase
		constexpr auto Completed = 0x78; // FScriptMulticastDelegate
	}

	namespace n_ULocalPlayer { // : UPlayer
		constexpr auto ViewportClient = 0x70; // UGameViewportClient*
		constexpr auto AspectRatioAxisConstraint = 0x94; // EAspectRatioAxisConstraint
		constexpr auto PendingLevelPlayerControllerClass = 0x98; // APlayerController*
		constexpr auto bSentSplitJoin = 0xa0; // char : 1
		constexpr auto ControllerId = 0xe0; // int
	}

	namespace n_ASQLastingEffect { // : AActor
		constexpr auto ParticleSystem = 0x248; // UParticleSystemComponent*
		constexpr auto Audio = 0x250; // UAudioComponent*
		constexpr auto ShockwaveEffect = 0x258; // USQShockwave*
		constexpr auto TimeToFireTriggerLastingEffectEventAfterBeginPlay = 0x260; // float
		constexpr auto TimeToLiveAfterBeginPlay = 0x264; // float
		constexpr auto TimeToLiveAfterTriggerLastingEffect = 0x268; // float
		constexpr auto bListenForOnActorHitEvents = 0x26c; // bool
		constexpr auto bListenForOnDestroyedEvents = 0x26d; // bool
		constexpr auto bActivateParticleSystemUponBeginPlay = 0x26e; // bool
		constexpr auto bActivateParticleSystemUponTriggerLastingEffect = 0x26f; // bool
		constexpr auto bActivateAudioUponBeginPlay = 0x270; // bool
		constexpr auto bActivateAudioUponTriggerLastingEffect = 0x271; // bool
		constexpr auto bActivateShockwaveUponBeginPlay = 0x272; // bool
		constexpr auto bActivateShockwaveUponTriggerLastingEffect = 0x273; // bool
		constexpr auto bDetachFromActorUponTriggerLastingEffect = 0x274; // bool
		constexpr auto bDeactivateParticleSystemUponTriggerLastingEffect = 0x275; // bool
		constexpr auto bDeactivateParticleSystemUponTriggerLastingEffectTimerExpired = 0x276; // bool
		constexpr auto bDeactivateAudioUponTriggerLastingEffectTimerExpired = 0x277; // bool
		constexpr auto bDestroyUponTriggerLastingEffectTimerExpired = 0x278; // bool
		constexpr auto bDrawDebugSphere = 0x279; // bool
		constexpr auto DebugSphereRadius = 0x27c; // float
		constexpr auto DebugSphereSegments = 0x280; // int
		constexpr auto DebugSphereColor = 0x284; // FColor
	}

	namespace n_UBP_Attachment_M150_Noads_Founders_C { // : USQWeaponAttachment_Scope
		constexpr auto MeshTransitionPercentage = 0x4b0; // float
		constexpr auto ADSMesh = 0x4b8; // UStaticMesh*
		constexpr auto ADSMeshTransform = 0x4c0; // FTransform
		constexpr auto NonADSMesh = 0x4f0; // UStaticMesh*
		constexpr auto NonADSMeshTransform = 0x500; // FTransform
		constexpr auto InToADSMeshTransitionSettings = 0x530; // TArray<FSQMeshTransitionSettings>
		constexpr auto OutFromADSMeshTransitionSettings = 0x540; // TArray<FSQMeshTransitionSettings>
	}

	namespace n_UBP_SmallArms_DamageType_C { // : USQDamageType
		constexpr auto bCanCauseBleeding = 0x40; // bool
	}

	namespace n_UParticleModuleRequired { // : UParticleModule
		constexpr auto Material = 0x30; // UMaterialInterface*
		constexpr auto EmitterOrigin = 0x38; // FVector
		constexpr auto EmitterRotation = 0x44; // FRotator
		constexpr auto ScreenAlignment = 0x50; // EParticleScreenAlignment
		constexpr auto MinFacingCameraBlendDistance = 0x54; // float
		constexpr auto MaxFacingCameraBlendDistance = 0x58; // float
		constexpr auto bUseLocalSpace = 0x5c; // char : 1
		constexpr auto bKillOnDeactivate = 0x5c; // char : 1
		constexpr auto bKillOnCompleted = 0x5c; // char : 1
		constexpr auto SortMode = 0x60; // EParticleSortMode
		constexpr auto bUseLegacyEmitterTime = 0x64; // char : 1
		constexpr auto bRemoveHMDRoll = 0x64; // char : 1
		constexpr auto EmitterDuration = 0x68; // float
		constexpr auto EmitterDurationLow = 0x6c; // float
		constexpr auto bEmitterDurationUseRange = 0x70; // char : 1
		constexpr auto bDurationRecalcEachLoop = 0x70; // char : 1
		constexpr auto EmitterLoops = 0x74; // int
		constexpr auto SpawnRate = 0x78; // FRawDistributionFloat
		constexpr auto ParticleBurstMethod = 0xb0; // EParticleBurstMethod
		constexpr auto BurstList = 0xb8; // TArray<FParticleBurst>
		constexpr auto EmitterDelay = 0xc8; // float
		constexpr auto EmitterDelayLow = 0xcc; // float
		constexpr auto bEmitterDelayUseRange = 0xd0; // char : 1
		constexpr auto bDelayFirstLoopOnly = 0xd0; // char : 1
		constexpr auto InterpolationMethod = 0xd4; // EParticleSubUVInterpMethod
		constexpr auto SubImages_Horizontal = 0xd8; // int
		constexpr auto SubImages_Vertical = 0xdc; // int
		constexpr auto bScaleUV = 0xe0; // char : 1
		constexpr auto RandomImageTime = 0xe4; // float
		constexpr auto RandomImageChanges = 0xe8; // int
		constexpr auto bOverrideSystemMacroUV = 0xec; // char : 1
		constexpr auto MacroUVPosition = 0xf0; // FVector
		constexpr auto MacroUVRadius = 0xfc; // float
		constexpr auto bUseMaxDrawCount = 0x100; // char : 1
		constexpr auto MaxDrawCount = 0x104; // int
		constexpr auto UVFlippingMode = 0x108; // EParticleUVFlipMode
		constexpr auto CutoutTexture = 0x110; // UTexture2D*
		constexpr auto BoundingMode = 0x118; // ESubUVBoundingVertexCount
		constexpr auto OpacitySourceMode = 0x119; // EOpacitySourceMode
		constexpr auto AlphaThreshold = 0x11c; // float
		constexpr auto EmitterNormalsMode = 0x120; // EEmitterNormalsMode
		constexpr auto NormalsSphereCenter = 0x124; // FVector
		constexpr auto NormalsCylinderDirection = 0x130; // FVector
		constexpr auto bOrbitModuleAffectsVelocityAlignment = 0x13c; // char : 1
		constexpr auto NamedMaterialOverrides = 0x140; // TArray<FName>
	}

	namespace n_ASQTournamentModeRulesetState { // : ASQRulesetState
		constexpr auto Restrictions = 0x248; // TArray<FSQSettingsRestriction>
	}

	namespace n_UBP_Attachment_M68_Woodland_C { // : USQWeaponAttachment_Scope
		constexpr auto MeshTransitionPercentage = 0x4b0; // float
		constexpr auto ADSMesh = 0x4b8; // UStaticMesh*
		constexpr auto ADSMeshTransform = 0x4c0; // FTransform
		constexpr auto NonADSMesh = 0x4f0; // UStaticMesh*
		constexpr auto NonADSMeshTransform = 0x500; // FTransform
		constexpr auto InToADSMeshTransitionSettings = 0x530; // TArray<FSQMeshTransitionSettings>
		constexpr auto OutFromADSMeshTransitionSettings = 0x540; // TArray<FSQMeshTransitionSettings>
	}

	namespace n_USoundNodeAssetReferencer { // : USoundNode
		constexpr auto ChildNodes = 0x28; // TArray<USoundNode*>
	}

	namespace n_USQRichTextBlock { // : UWidget
		constexpr auto Text = 0x108; // FText
		constexpr auto TextDelegate = 0x120; // DelegateProperty
		constexpr auto Font = 0x130; // FSlateFontInfo
		constexpr auto Color = 0x180; // FLinearColor
		constexpr auto HyperlinkFont = 0x190; // FSlateFontInfo
		constexpr auto HyperlinkColor = 0x1e0; // FLinearColor
		constexpr auto Justification = 0x1f0; // ETextJustify
		constexpr auto AutoWrapText = 0x1f1; // bool
		constexpr auto WrapTextAt = 0x1f4; // float
		constexpr auto Margin = 0x1f8; // FMargin
		constexpr auto LineHeightPercentage = 0x208; // float
		constexpr auto TextWithMarkup = 0x210; // FText
	}

	namespace n_ULandscapeHeightfieldCollisionComponent { // : UPrimitiveComponent
		constexpr auto ComponentLayerInfos = 0x408; // TArray<ULandscapeLayerInfoObject*>
		constexpr auto SectionBaseX = 0x418; // int
		constexpr auto SectionBaseY = 0x41c; // int
		constexpr auto CollisionSizeQuads = 0x420; // int
		constexpr auto CollisionScale = 0x424; // float
		constexpr auto SimpleCollisionSizeQuads = 0x428; // int
		constexpr auto CollisionQuadFlags = 0x430; // TArray<char>
		constexpr auto HeightfieldGuid = 0x440; // FGuid
		constexpr auto CachedLocalBox = 0x450; // FBox
		constexpr auto RenderComponent = 0x46c; // ULandscapeComponent*
		constexpr auto CookedPhysicalMaterials = 0x498; // TArray<UPhysicalMaterial*>
	}

	namespace n_AEmitter { // : AActor
		constexpr auto ParticleSystemComponent = 0x248; // UParticleSystemComponent*
		constexpr auto bDestroyOnSystemFinish = 0x250; // char : 1
		constexpr auto bPostUpdateTickGroup = 0x250; // char : 1
		constexpr auto bCurrentlyActive = 0x250; // char : 1
		constexpr auto OnParticleSpawn = 0x258; // FScriptMulticastDelegate
		constexpr auto OnParticleBurst = 0x268; // FScriptMulticastDelegate
		constexpr auto OnParticleDeath = 0x278; // FScriptMulticastDelegate
		constexpr auto OnParticleCollide = 0x288; // FScriptMulticastDelegate
	}

	namespace n_UWorld { // : UObject
		constexpr auto PersistentLevel = 0x30; // ULevel*
		constexpr auto NetDriver = 0x38; // UNetDriver*
		constexpr auto LineBatcher = 0x40; // ULineBatchComponent*
		constexpr auto PersistentLineBatcher = 0x48; // ULineBatchComponent*
		constexpr auto ForegroundLineBatcher = 0x50; // ULineBatchComponent*
		constexpr auto NetworkManager = 0x58; // AGameNetworkManager*
		constexpr auto PhysicsCollisionHandler = 0x60; // UPhysicsCollisionHandler*
		constexpr auto ExtraReferencedObjects = 0x68; // TArray<UObject*>
		constexpr auto PerModuleDataObjects = 0x78; // TArray<UObject*>
		constexpr auto LevelSequenceActors = 0x88; // TArray<AActor*>
		constexpr auto StreamingLevels = 0x98; // TArray<ULevelStreaming*>
		constexpr auto StreamingLevelsToConsider = 0xa8; // FStreamingLevelsToConsider
		constexpr auto StreamingLevelsPrefix = 0xd0; // FString
		constexpr auto CurrentLevelPendingVisibility = 0xe0; // ULevel*
		constexpr auto CurrentLevelPendingInvisibility = 0xe8; // ULevel*
		constexpr auto DemoNetDriver = 0xf0; // UDemoNetDriver*
		constexpr auto MyParticleEventManager = 0xf8; // AParticleEventManager*
		constexpr auto DefaultPhysicsVolume = 0x100; // APhysicsVolume*
		constexpr auto bAreConstraintsDirty = 0x11e; // char : 1
		constexpr auto NavigationSystem = 0x120; // UNavigationSystemBase*
		constexpr auto AuthorityGameMode = 0x128; // AGameModeBase*
		constexpr auto GameState = 0x130; // AGameStateBase*
		constexpr auto AISystem = 0x138; // UAISystemBase*
		constexpr auto AvoidanceManager = 0x140; // UAvoidanceManager*
		constexpr auto Levels = 0x148; // TArray<ULevel*>
		constexpr auto LevelCollections = 0x158; // TArray<FLevelCollection>
		constexpr auto OwningGameInstance = 0x170; // UGameInstance*
		constexpr auto ParameterCollectionInstances = 0x178; // TArray<UMaterialParameterCollectionInstance*>
		constexpr auto CanvasForRenderingToTarget = 0x188; // UCanvas*
		constexpr auto CanvasForDrawMaterialToRenderTarget = 0x190; // UCanvas*
		constexpr auto ComponentsThatNeedEndOfFrameUpdate = 0x1e8; // TArray<UActorComponent*>
		constexpr auto ComponentsThatNeedEndOfFrameUpdate_OnGameThread = 0x1f8; // TArray<UActorComponent*>
		constexpr auto WorldComposition = 0x568; // UWorldComposition*
		constexpr auto PSCPool = 0x5e0; // FWorldPSCPool
	}

	namespace n_UPlayFabAuthenticationAPI { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnPlayFabResponse = 0x28; // FScriptMulticastDelegate
		constexpr auto CallAuthenticationContext = 0xa0; // UPlayFabAuthenticationContext*
		constexpr auto RequestJsonObj = 0xa8; // UPlayFabJsonObject*
		constexpr auto ResponseJsonObj = 0xb0; // UPlayFabJsonObject*
	}

	namespace n_UBP_RPG7Frag_StaticInfo_C { // : UBP_RPG7Parent_StaticInfo_C
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_USQToolTipBaseWidget { // : UUserWidget
		constexpr auto OwnerMap = 0x230; // USQMap*
		constexpr auto ParentWidget = 0x238; // USQMapIconWidget*
	}

	namespace n_UMaterialExpressionArccosine { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_ABP_RPG7V2_Heat_C { // : ABP_RPG7V2_Parent_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
		constexpr auto MuzzleFlashRearComponent3P = 0x7b8; // UParticleSystemComponent*
		constexpr auto BackBlastComponent3P = 0x7c0; // UChildActorComponent*
		constexpr auto MuzzleFlashRearComponent1P = 0x7c8; // UParticleSystemComponent*
		constexpr auto SquadBlast = 0x7d0; // USQBlastComponent*
		constexpr auto BackBlastComponent1P = 0x7d8; // UChildActorComponent*
		constexpr auto BackblastSocket = 0x7e0; // FName
		constexpr auto BackblastEffect1P = 0x7e8; // UParticleSystem*
		constexpr auto BackblastEffect3P = 0x7f0; // UParticleSystem*
	}

	namespace n_USQSquadStateDataCameraman { // : USQSquadStateDataPawn
		constexpr auto bHiddenWhenUnpossessed = 0x180; // bool
		constexpr auto bHiddenWhenNotLocallyControlled = 0x181; // bool
		constexpr auto bHideWidgetWhenUnpossessed = 0x182; // bool
		constexpr auto CameraRotaionYawTolerance = 0x184; // float
		constexpr auto OwnerPlayerState = 0x188; // ASQPlayerState*
		constexpr auto CachedPlayerId = 0x194; // int
		constexpr auto FireTeamIndex = 0x198; // int
		constexpr auto CachedOwnerPlayerState = 0x1a0; // ASQPlayerState*
	}

	namespace n_URotatingMovementComponent { // : UMovementComponent
		constexpr auto RotationRate = 0x118; // FRotator
		constexpr auto PivotTranslation = 0x124; // FVector
		constexpr auto bRotationInLocalSpace = 0x130; // char : 1
	}

	namespace n_ABP_L85A2_SUSAT_Foregrip_C { // : ABP_L85A2_Foregrip_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
		constexpr auto Scope = 0x7b8; // UStaticMeshComponent*
	}

	namespace n_UInterpTrackInstBoolProp { // : UInterpTrackInstProperty
		constexpr auto BoolProperty = 0x40; // UBoolProperty*
		constexpr auto ResetBool = 0x48; // bool
	}

	namespace n_UMultiPackerRuntimeMatNode { // : UObject
		constexpr auto MaterialBaseInput = 0x28; // UMaterialInterface*
		constexpr auto Height = 0x30; // int
		constexpr auto Width = 0x34; // int
		constexpr auto MaterialSize = 0x38; // ETextureSizeOutputPersonal
	}

	namespace n_UMovieSceneByteTrack { // : UMovieScenePropertyTrack
		constexpr auto Enum = 0x88; // UEnum*
	}

	namespace n_UBP_RPG7v2Parent_StaticInfo_C { // : UBP_RPG7Parent_StaticInfo_C
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_ABP_40MM_VOG_Smoke_Blue_Proj2_C { // : ABP_40MM_VOG_Smoke_Proj2_C
		constexpr auto Effect = 0x548; // UParticleSystemComponent*
		constexpr auto SmokeEffect = 0x550; // UParticleSystem*
		constexpr auto SmokeSound = 0x558; // USoundCue*
	}

	namespace n_AAmbientSound { // : AActor
		constexpr auto AudioComponent = 0x248; // UAudioComponent*
	}

	namespace n_USQSteamInventory { // : UGameInstanceSubsystem
		constexpr auto SupporterPatches = 0x58; // UDataTable*
		constexpr auto WeaponReplacements = 0x60; // UDataTable*
		constexpr auto ClanPacks = 0x68; // UDataTable*
		constexpr auto CallbackProxy = 0x70; // UCoreGetAllItemsCallbackProxy*
		constexpr auto DefaultOWIClanPatchID = 0x78; // int
		constexpr auto DefaultClanFounderPatchID = 0x7c; // int
		constexpr auto DefaultClanFounderTagID = 0x80; // int
	}

	namespace n_ABP_M4M203_Rifle_M68_Founder_C { // : ABP_M4M203_Rifle_M68_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_ABP_L85A2AG36_DarkEarth_ElcanLDS_Rifle_C { // : ABP_L85A2AG36_DarkEarth_Rifle_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
	}

	namespace n_ULayer { // : UObject
		constexpr auto LayerName = 0x28; // FName
		constexpr auto bIsVisible = 0x30; // char : 1
		constexpr auto ActorStats = 0x38; // TArray<FLayerActorStats>
	}

	namespace n_UMaterialExpressionLandscapeLayerSample { // : UMaterialExpression
		constexpr auto ParameterName = 0x40; // FName
		constexpr auto PreviewWeight = 0x48; // float
		constexpr auto ExpressionGUID = 0x4c; // FGuid
	}

	namespace n_UMaterialExpressionDotProduct { // : UMaterialExpression
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_UParticleModuleVectorFieldRotation { // : UParticleModuleVectorFieldBase
		constexpr auto MinInitialRotation = 0x30; // FVector
		constexpr auto MaxInitialRotation = 0x3c; // FVector
	}

	namespace n_UInterpTrackVectorProp { // : UInterpTrackVectorBase
		constexpr auto PropertyName = 0x90; // FName
	}

	namespace n_UParticleModuleAccelerationBase { // : UParticleModule
		constexpr auto bAlwaysInWorldSpace = 0x30; // char : 1
	}

	namespace n_USQVehicleSettings { // : USQSettings
		constexpr auto ID = 0x30; // FName
		constexpr auto Data = 0x38; // FDataTableRowHandle
		constexpr auto ModId = 0x48; // FString
	}

	namespace n_UNavigationQueryFilter { // : UObject
		constexpr auto Areas = 0x28; // TArray<FNavigationFilterArea>
		constexpr auto IncludeFlags = 0x38; // FNavigationFilterFlags
		constexpr auto ExcludeFlags = 0x3c; // FNavigationFilterFlags
	}

	namespace n_UMovieSceneIntegerSection { // : UMovieSceneSection
		constexpr auto IntegerCurve = 0xe0; // FMovieSceneIntegerChannel
	}

	namespace n_UAudioComponent { // : USceneComponent
		constexpr auto Sound = 0x218; // USoundBase*
		constexpr auto InstanceParameters = 0x220; // TArray<FAudioComponentParam>
		constexpr auto SoundClassOverride = 0x230; // USoundClass*
		constexpr auto bAutoDestroy = 0x238; // char : 1
		constexpr auto bStopWhenOwnerDestroyed = 0x238; // char : 1
		constexpr auto bShouldRemainActiveIfDropped = 0x238; // char : 1
		constexpr auto bAllowSpatialization = 0x238; // char : 1
		constexpr auto bOverrideAttenuation = 0x238; // char : 1
		constexpr auto bOverrideSubtitlePriority = 0x238; // char : 1
		constexpr auto bIsUISound = 0x238; // char : 1
		constexpr auto bEnableLowPassFilter = 0x238; // char : 1
		constexpr auto bOverridePriority = 0x239; // char : 1
		constexpr auto bSuppressSubtitles = 0x239; // char : 1
		constexpr auto bAutoManageAttachment = 0x23a; // char : 1
		constexpr auto AudioComponentUserID = 0x240; // FName
		constexpr auto bIsFadingOut = 0x248; // char : 1
		constexpr auto StartedPlayingTime = 0x24c; // float
		constexpr auto PitchModulationMin = 0x250; // float
		constexpr auto PitchModulationMax = 0x254; // float
		constexpr auto VolumeModulationMin = 0x258; // float
		constexpr auto VolumeModulationMax = 0x25c; // float
		constexpr auto VolumeMultiplier = 0x260; // float
		constexpr auto EnvelopeFollowerAttackTime = 0x264; // int
		constexpr auto EnvelopeFollowerReleaseTime = 0x268; // int
		constexpr auto Priority = 0x26c; // float
		constexpr auto SubtitlePriority = 0x270; // float
		constexpr auto PitchMultiplier = 0x274; // float
		constexpr auto LowPassFilterFrequency = 0x278; // float
		constexpr auto AttenuationSettings = 0x280; // USoundAttenuation*
		constexpr auto AttenuationOverrides = 0x288; // FSoundAttenuationSettings
		constexpr auto ConcurrencySettings = 0x570; // USoundConcurrency*
		constexpr auto ConcurrencySet = 0x578; // TSet<USoundConcurrency*>
		constexpr auto AutoAttachLocationRule = 0x5cc; // EAttachmentRule
		constexpr auto AutoAttachRotationRule = 0x5cd; // EAttachmentRule
		constexpr auto AutoAttachScaleRule = 0x5ce; // EAttachmentRule
		constexpr auto OnAudioFinished = 0x5d0; // FScriptMulticastDelegate
		constexpr auto OnAudioPlaybackPercent = 0x5f8; // FScriptMulticastDelegate
		constexpr auto OnAudioSingleEnvelopeValue = 0x620; // FScriptMulticastDelegate
		constexpr auto OnAudioMultiEnvelopeValue = 0x648; // FScriptMulticastDelegate
		constexpr auto Modulation = 0x670; // FSoundModulation
		constexpr auto OnQueueSubtitles = 0x680; // DelegateProperty
		constexpr auto AutoAttachParent = 0x690; // TWeakObjectPtr<USceneComponent>
		constexpr auto AutoAttachSocketName = 0x698; // FName
	}

	namespace n_URelativeCanvasPanel { // : UCanvasPanel
		constexpr auto Slots = 0x108; // TArray<UPanelSlot*>
	}

	namespace n_USQGraphVisualizerComponent { // : UActorComponent
		constexpr auto bShowDebugInfo = 0xd8; // bool
		constexpr auto DebugNodeRadius = 0xdc; // float
		constexpr auto DebugNodeHeightOffset = 0xe0; // float
		constexpr auto DebugLineHeightOffset = 0xe4; // float
	}

	namespace n_USQVehicleDepotComponent { // : USceneComponent
		constexpr auto SecondsPerMag = 0x220; // float
		constexpr auto VehicleHealthPerSecond = 0x224; // float
		constexpr auto ConstructionPointsPerSecondRepair = 0x228; // float
		constexpr auto SoldierHealthPerSecond = 0x22c; // float
		constexpr auto TimeInRearm = 0x230; // TMap<ASQVehicle*, float>
		constexpr auto CurrentOverlappedActors = 0x280; // TArray<AActor*>
	}

	namespace n_ABP_SVDM_Optic_Woodland_C { // : ABP_SVDM_Optic_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
		constexpr auto SVDFront = 0x7b8; // UStaticMeshComponent*
		constexpr auto PSOScope = 0x7c0; // UStaticMeshComponent*
		constexpr auto HasBUIS = 0x7c8; // bool
	}

	namespace n_UMaterialFunctionInstance { // : UMaterialFunctionInterface
		constexpr auto Parent = 0x40; // UMaterialFunctionInterface*
		constexpr auto Base = 0x48; // UMaterialFunctionInterface*
		constexpr auto ScalarParameterValues = 0x50; // TArray<FScalarParameterValue>
		constexpr auto VectorParameterValues = 0x60; // TArray<FVectorParameterValue>
		constexpr auto TextureParameterValues = 0x70; // TArray<FTextureParameterValue>
		constexpr auto FontParameterValues = 0x80; // TArray<FFontParameterValue>
		constexpr auto StaticSwitchParameterValues = 0x90; // TArray<FStaticSwitchParameter>
		constexpr auto StaticComponentMaskParameterValues = 0xa0; // TArray<FStaticComponentMaskParameter>
	}

	namespace n_USQCompassBaseUnit { // : USQUserWidget
		constexpr auto BaseImage = 0x230; // UImage*
	}

	namespace n_USocialSettings { // : UObject
		constexpr auto OssNamesWithEnvironmentIdPrefix = 0x28; // TArray<FName>
		constexpr auto DefaultMaxPartySize = 0x38; // int
		constexpr auto bPreferPlatformInvites = 0x3c; // bool
		constexpr auto bMustSendPrimaryInvites = 0x3d; // bool
		constexpr auto UserListAutoUpdateRate = 0x40; // float
	}

	namespace n_ARuntimeVirtualTextureVolume { // : AActor
		constexpr auto VirtualTextureComponent = 0x248; // URuntimeVirtualTextureComponent*
	}

	namespace n_UReplicationGraphNode_DormancyNode { // : UReplicationGraphNode_ActorList
		constexpr auto AllChildNodes = 0x28; // TArray<UReplicationGraphNode*>
	}

	namespace n_UEnvQueryGenerator_SimpleGrid { // : UEnvQueryGenerator_ProjectedPoints
		constexpr auto GridSize = 0x80; // FAIDataProviderFloatValue
		constexpr auto SpaceBetween = 0xb0; // FAIDataProviderFloatValue
		constexpr auto GenerateAround = 0xe0; // UEnvQueryContext*
	}

	namespace n_AWindDirectionalSource { // : AInfo
		constexpr auto Component = 0x248; // UWindDirectionalSourceComponent*
	}

	namespace n_UBP_Attachment_M150_Noads_C { // : USQWeaponAttachment_Scope
		constexpr auto MeshTransitionPercentage = 0x4b0; // float
		constexpr auto ADSMesh = 0x4b8; // UStaticMesh*
		constexpr auto ADSMeshTransform = 0x4c0; // FTransform
		constexpr auto NonADSMesh = 0x4f0; // UStaticMesh*
		constexpr auto NonADSMeshTransform = 0x500; // FTransform
		constexpr auto InToADSMeshTransitionSettings = 0x530; // TArray<FSQMeshTransitionSettings>
		constexpr auto OutFromADSMeshTransitionSettings = 0x540; // TArray<FSQMeshTransitionSettings>
	}

	namespace n_USQDeployableChildActorComponent { // : UChildActorComponent
		constexpr auto SpawnBuildState = 0x249; // ESQBuildState
		constexpr auto DespawnBuildState = 0x24a; // ESQBuildState
		constexpr auto bShouldUseSpawningTeam = 0x24b; // bool
		constexpr auto TimesSpawnable = 0x24c; // char
	}

	namespace n_ASQSquadState { // : AInfo
		constexpr auto AuthoritySquad = 0x248; // ASQSquad*
		constexpr auto MaxSize = 0x250; // int
		constexpr auto NumKills = 0x254; // int
		constexpr auto NumDeaths = 0x258; // int
		constexpr auto NumWoundeds = 0x25c; // int
		constexpr auto NumWounds = 0x260; // int
		constexpr auto NumTeamkills = 0x264; // int
		constexpr auto Score = 0x268; // float
		constexpr auto TeamWorkScore = 0x26c; // float
		constexpr auto ObjectiveScore = 0x270; // float
		constexpr auto HealPoints = 0x274; // float
		constexpr auto RevivedPoints = 0x278; // float
		constexpr auto StateObject = 0x280; // USQCoreStateComponent*
		constexpr auto bIsCommandSquad = 0x288; // bool
		constexpr auto ID = 0x28c; // int
		constexpr auto TeamId = 0x290; // int
		constexpr auto PlayerStates = 0x298; // TArray<ASQPlayerState*>
		constexpr auto LeaderState = 0x2a8; // ASQPlayerState*
		constexpr auto Name = 0x2b0; // FString
		constexpr auto bIsLocked = 0x2c0; // bool
		constexpr auto CreationTimeStamp = 0x2c4; // float
		constexpr auto SquadCreatorName = 0x2c8; // FString
		constexpr auto SquadCreatorSteamID = 0x2d8; // FString
	}

	namespace n_UMultiPackerRuntimeBinPack { // : UObject
		constexpr auto BinPackPages = 0x28; // TArray<UMaxRectsBinPack*>
		constexpr auto RenderTargetPages = 0x38; // TArray<UTextureRenderTarget2D*>
		constexpr auto WorldContext = 0x48; // UObject*
		constexpr auto Size = 0x50; // int
		constexpr auto Alpha = 0x54; // bool
		constexpr auto MaterialMap = 0x58; // TMap<FName, FMaterialDataBinPack>
	}

	namespace n_ABP_M4_4Mags_Woodland_C { // : ABP_M4_4Mags_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UInterpTrackLinearColorBase { // : UInterpTrack
		constexpr auto LinearColorTrack = 0x70; // FInterpCurveLinearColor
		constexpr auto CurveTension = 0x88; // float
	}

	namespace n_USQSquadStateDataHAB { // : USQSquadStateDataDeployable
		constexpr auto bSieged = 0x188; // char : 1
		constexpr auto bSpawningEnabled = 0x188; // char : 1
		constexpr auto ActivatedTimeStamp = 0x18c; // float
	}

	namespace n_UAbilityTask_WaitInputRelease { // : UAbilityTask
		constexpr auto OnRelease = 0x80; // FScriptMulticastDelegate
	}

	namespace n_USocialManager { // : UObject
		constexpr auto SocialToolkits = 0x48; // TArray<USocialToolkit*>
		constexpr auto SocialDebugTools = 0x58; // USocialDebugTools*
		constexpr auto bLeavePartyOnDisconnect = 0x62; // bool
	}

	namespace n_ABP_L85A2_DarkEarth_SUSAT_C { // : ABP_L85A2_DarkEarth_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
		constexpr auto Scope = 0x7b8; // UStaticMeshComponent*
	}

	namespace n_UMaterialExpressionMax { // : UMaterialExpression
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_USQReconnectionCacheSubsystem { // : UGameInstanceSubsystem
		constexpr auto NonSeamlessReconnectionTimeout = 0x48; // float
	}

	namespace n_USQSoundNodeRandom { // : USoundNode
		constexpr auto Sounds = 0x40; // TArray<USoundWave*>
		constexpr auto Weights = 0x50; // TArray<float>
		constexpr auto PreselectAtLevelLoad = 0x60; // int
		constexpr auto bRandomizeWithoutReplacement = 0x64; // char : 1
		constexpr auto RuntimeSounds = 0x68; // TArray<FSQSoundWeight>
		constexpr auto RuntimeNumRandomSoundsUsed = 0x78; // int
	}

	namespace n_ABP_AK74M_1P78_Tracer_Desert_C { // : ABP_AK74M_1P78_Tracer_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_ABP_AK74M_1P63_Tracer_C { // : ABP_AK74M_1P63_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_ABP_M4M203_M68_UGL_HE_Founders_C { // : ABP_M4M203_M68_UGL_Parent_Founders_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_ABP_L85A2AG36_ElcanLDS_UGL_DarkEarth_Smoke_C { // : ABP_L85A2AG36_ElcanLDS_UGL_DarkEarth_Parent_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UScaleBox { // : UContentWidget
		constexpr auto Stretch = 0x120; // EStretch
		constexpr auto StretchDirection = 0x121; // EStretchDirection
		constexpr auto UserSpecifiedScale = 0x124; // float
		constexpr auto IgnoreInheritedScale = 0x128; // bool
		constexpr auto bSingleLayoutPass = 0x129; // bool
	}

	namespace n_UPhysicsCollisionHandler { // : UObject
		constexpr auto ImpactThreshold = 0x28; // float
		constexpr auto ImpactReFireDelay = 0x2c; // float
		constexpr auto DefaultImpactSound = 0x30; // USoundBase*
		constexpr auto LastImpactSoundTime = 0x38; // float
	}

	namespace n_ABP_L85A2AG36_ACOG_UGL_Parent_C { // : ABP_L85A2AG36_UGL_Parent_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UMaterialExpressionIf { // : UMaterialExpression
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto AGreaterThanB = 0x68; // FExpressionInput
		constexpr auto AEqualsB = 0x7c; // FExpressionInput
		constexpr auto ALessThanB = 0x90; // FExpressionInput
		constexpr auto EqualsThreshold = 0xa4; // float
		constexpr auto ConstB = 0xa8; // float
		constexpr auto ConstAEqualsB = 0xac; // float
	}

	namespace n_UMovieSceneStringTrack { // : UMovieScenePropertyTrack
		constexpr auto SectionToKey = 0x58; // UMovieSceneSection*
		constexpr auto PropertyName = 0x60; // FName
		constexpr auto PropertyPath = 0x68; // FString
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_ADetourCrowdAIController { // : AAIController
		constexpr auto bStopAILogicOnUnposses = 0x2f8; // char : 1
		constexpr auto bLOSflag = 0x2f8; // char : 1
		constexpr auto bSkipExtraLOSChecks = 0x2f8; // char : 1
		constexpr auto bAllowStrafe = 0x2f8; // char : 1
		constexpr auto bWantsPlayerState = 0x2f8; // char : 1
		constexpr auto bSetControlRotationFromPawnOrientation = 0x2f8; // char : 1
		constexpr auto PathFollowingComponent = 0x300; // UPathFollowingComponent*
		constexpr auto BrainComponent = 0x308; // UBrainComponent*
		constexpr auto PerceptionComponent = 0x310; // UAIPerceptionComponent*
		constexpr auto ActionsComp = 0x318; // UPawnActionsComponent*
		constexpr auto Blackboard = 0x320; // UBlackboardComponent*
		constexpr auto CachedGameplayTasksComponent = 0x328; // UGameplayTasksComponent*
		constexpr auto DefaultNavigationFilterClass = 0x330; // UNavigationQueryFilter*
		constexpr auto ReceiveMoveCompleted = 0x338; // FScriptMulticastDelegate
	}

	namespace n_UCompositeDataTable { // : UDataTable
		constexpr auto ParentTables = 0xb0; // TArray<UDataTable*>
		constexpr auto OldParentTables = 0xc8; // TArray<UDataTable*>
	}

	namespace n_APlayerController { // : AController
		constexpr auto Player = 0x2c0; // UPlayer*
		constexpr auto AcknowledgedPawn = 0x2c8; // APawn*
		constexpr auto ControllingDirTrackInst = 0x2d0; // UInterpTrackInstDirector*
		constexpr auto MyHUD = 0x2d8; // AHUD*
		constexpr auto PlayerCameraManager = 0x2e0; // APlayerCameraManager*
		constexpr auto PlayerCameraManagerClass = 0x2e8; // APlayerCameraManager*
		constexpr auto bAutoManageActiveCameraTarget = 0x2f0; // bool
		constexpr auto TargetViewRotation = 0x2f4; // FRotator
		constexpr auto SmoothTargetViewRotationSpeed = 0x30c; // float
		constexpr auto HiddenActors = 0x318; // TArray<AActor*>
		constexpr auto HiddenPrimitiveComponents = 0x328; // TArray<TWeakObjectPtr<UPrimitiveComponent>>
		constexpr auto LastSpectatorStateSynchTime = 0x33c; // float
		constexpr auto LastSpectatorSyncLocation = 0x340; // FVector
		constexpr auto LastSpectatorSyncRotation = 0x34c; // FRotator
		constexpr auto ClientCap = 0x358; // int
		constexpr auto CheatManager = 0x360; // UCheatManager*
		constexpr auto CheatClass = 0x368; // UCheatManager*
		constexpr auto PlayerInput = 0x370; // UPlayerInput*
		constexpr auto ActiveForceFeedbackEffects = 0x378; // TArray<FActiveForceFeedbackEffect>
		constexpr auto bPlayerIsWaiting = 0x3f8; // char : 1
		constexpr auto NetPlayerIndex = 0x3fc; // char
		constexpr auto PendingSwapConnection = 0x438; // UNetConnection*
		constexpr auto NetConnection = 0x440; // UNetConnection*
		constexpr auto InputYawScale = 0x454; // float
		constexpr auto InputPitchScale = 0x458; // float
		constexpr auto InputRollScale = 0x45c; // float
		constexpr auto bShowMouseCursor = 0x460; // char : 1
		constexpr auto bEnableClickEvents = 0x460; // char : 1
		constexpr auto bEnableTouchEvents = 0x460; // char : 1
		constexpr auto bEnableMouseOverEvents = 0x460; // char : 1
		constexpr auto bEnableTouchOverEvents = 0x460; // char : 1
		constexpr auto bForceFeedbackEnabled = 0x460; // char : 1
		constexpr auto ForceFeedbackScale = 0x464; // float
		constexpr auto ClickEventKeys = 0x468; // TArray<FKey>
		constexpr auto DefaultMouseCursor = 0x478; // EMouseCursor
		constexpr auto CurrentMouseCursor = 0x479; // EMouseCursor
		constexpr auto DefaultClickTraceChannel = 0x47a; // ECollisionChannel
		constexpr auto CurrentClickTraceChannel = 0x47b; // ECollisionChannel
		constexpr auto HitResultTraceDistance = 0x47c; // float
		constexpr auto SeamlessTravelCount = 0x480; // uint16
		constexpr auto LastCompletedSeamlessTravelCount = 0x482; // uint16
		constexpr auto InactiveStateInputComponent = 0x4f8; // UInputComponent*
		constexpr auto bShouldPerformFullTickWhenPaused = 0x500; // char : 1
		constexpr auto CurrentTouchInterface = 0x518; // UTouchInterface*
		constexpr auto SpectatorPawn = 0x570; // ASpectatorPawn*
		constexpr auto bIsLocalPlayerController = 0x57c; // bool
		constexpr auto SpawnLocation = 0x580; // FVector
	}

	namespace n_AGridPathAIController { // : AAIController
		constexpr auto bStopAILogicOnUnposses = 0x2f8; // char : 1
		constexpr auto bLOSflag = 0x2f8; // char : 1
		constexpr auto bSkipExtraLOSChecks = 0x2f8; // char : 1
		constexpr auto bAllowStrafe = 0x2f8; // char : 1
		constexpr auto bWantsPlayerState = 0x2f8; // char : 1
		constexpr auto bSetControlRotationFromPawnOrientation = 0x2f8; // char : 1
		constexpr auto PathFollowingComponent = 0x300; // UPathFollowingComponent*
		constexpr auto BrainComponent = 0x308; // UBrainComponent*
		constexpr auto PerceptionComponent = 0x310; // UAIPerceptionComponent*
		constexpr auto ActionsComp = 0x318; // UPawnActionsComponent*
		constexpr auto Blackboard = 0x320; // UBlackboardComponent*
		constexpr auto CachedGameplayTasksComponent = 0x328; // UGameplayTasksComponent*
		constexpr auto DefaultNavigationFilterClass = 0x330; // UNavigationQueryFilter*
		constexpr auto ReceiveMoveCompleted = 0x338; // FScriptMulticastDelegate
	}

	namespace n_USQMapWidgetSQPawn { // : USQMapWidgetPawn
		constexpr auto bIsOwned = 0x2a8; // char : 1
		constexpr auto bIsOwnedBySelf = 0x2a8; // char : 1
		constexpr auto bIsInSelfTeam = 0x2a8; // char : 1
		constexpr auto bIsInSelfSquad = 0x2a8; // char : 1
		constexpr auto FireTeamIndex = 0x2ac; // int
		constexpr auto CameraRotationYaw = 0x2b0; // float
		constexpr auto IsSelfZOrder = 0x2b4; // float
	}

	namespace n_UAnimSequenceBase { // : UAnimationAsset
		constexpr auto Notifies = 0x80; // TArray<FAnimNotifyEvent>
		constexpr auto SequenceLength = 0x90; // float
		constexpr auto RateScale = 0x94; // float
		constexpr auto RawCurveData = 0x98; // FRawCurveTracks
	}

	namespace n_USaveDataUIWrapper_C { // : USQSaveGameWrapper
		constexpr auto SaveGameClass = 0x28; // USaveGame*
		constexpr auto SlotName = 0x30; // FString
		constexpr auto bClientOnly = 0x40; // bool
		constexpr auto SaveGame = 0x48; // USaveGame*
	}

	namespace n_UMovieSceneSignedObject { // : UObject
		constexpr auto Signature = 0x28; // FGuid
	}

	namespace n_UAnimMontage { // : UAnimCompositeBase
		constexpr auto BlendIn = 0xa8; // FAlphaBlend
		constexpr auto BlendInTime = 0xd8; // float
		constexpr auto BlendOut = 0xe0; // FAlphaBlend
		constexpr auto blendOutTime = 0x110; // float
		constexpr auto BlendOutTriggerTime = 0x114; // float
		constexpr auto SyncGroup = 0x118; // FName
		constexpr auto SyncSlotIndex = 0x120; // int
		constexpr auto MarkerData = 0x128; // FMarkerSyncData
		constexpr auto CompositeSections = 0x148; // TArray<FCompositeSection>
		constexpr auto SlotAnimTracks = 0x158; // TArray<FSlotAnimationTrack>
		constexpr auto BranchingPoints = 0x168; // TArray<FBranchingPoint>
		constexpr auto bEnableRootMotionTranslation = 0x178; // bool
		constexpr auto bEnableRootMotionRotation = 0x179; // bool
		constexpr auto bEnableAutoBlendOut = 0x17a; // bool
		constexpr auto RootMotionRootLock = 0x17b; // ERootMotionRootLock
		constexpr auto BranchingPointMarkers = 0x180; // TArray<FBranchingPointMarker>
		constexpr auto BranchingPointStateNotifyIndices = 0x190; // TArray<int>
		constexpr auto TimeStretchCurve = 0x1a0; // FTimeStretchCurve
		constexpr auto TimeStretchCurveName = 0x1c8; // FName
	}

	namespace n_UComboButtonWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto ComboButtonStyle = 0x30; // FComboButtonStyle
	}

	namespace n_USQAvailability_Role { // : USQAvailability
		constexpr auto Setting = 0x50; // USQRoleSettings*
	}

	namespace n_ATestBeaconHost { // : AOnlineBeaconHostObject
		constexpr auto BeaconTypeName = 0x248; // FString
		constexpr auto ClientBeaconActorClass = 0x258; // AOnlineBeaconClient*
		constexpr auto ClientActors = 0x260; // TArray<AOnlineBeaconClient*>
	}

	namespace n_USoundNodeModulator { // : USoundNode
		constexpr auto PitchMin = 0x40; // float
		constexpr auto PitchMax = 0x44; // float
		constexpr auto VolumeMin = 0x48; // float
		constexpr auto VolumeMax = 0x4c; // float
	}

	namespace n_ABP_L85A2_DarkEarth_Recruit_C { // : ABP_L85A2_DarkEarth_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_ASQVehicleSpawner { // : ASQSpawner
		constexpr auto NeutralCopyVehicleFromTeam = 0x2d8; // ESQTeam
		constexpr auto SpecificVehicle = 0x2e0; // USQVehicleSettings*
	}

	namespace n_UDatasmithLightComponentTemplate { // : UDatasmithObjectTemplate
		constexpr auto bVisible = 0x30; // char : 1
		constexpr auto CastShadows = 0x34; // char : 1
		constexpr auto bUseTemperature = 0x34; // char : 1
		constexpr auto bUseIESBrightness = 0x34; // char : 1
		constexpr auto Intensity = 0x38; // float
		constexpr auto Temperature = 0x3c; // float
		constexpr auto IESBrightnessScale = 0x40; // float
		constexpr auto LightColor = 0x44; // FLinearColor
		constexpr auto LightFunctionMaterial = 0x58; // UMaterialInterface*
		constexpr auto IESTexture = 0x60; // UTextureLightProfile*
	}

	namespace n_UConsole { // : UObject
		constexpr auto ConsoleTargetPlayer = 0x38; // ULocalPlayer*
		constexpr auto DefaultTexture_Black = 0x40; // UTexture2D*
		constexpr auto DefaultTexture_White = 0x48; // UTexture2D*
		constexpr auto HistoryBuffer = 0x68; // TArray<FString>
	}

	namespace n_UAbilityTask_VisualizeTargeting { // : UAbilityTask
		constexpr auto TimeElapsed = 0x80; // FScriptMulticastDelegate
	}

	namespace n_ABP_Projectile_Green_C { // : ABP_Projectile_C
		constexpr auto ParticleSystem = 0x4a0; // UParticleSystemComponent*
	}

	namespace n_UPrefabAsset { // : UObject
		constexpr auto AssetReferences = 0x28; // TMap<FString, FSoftObjectPath>
		constexpr auto GeneratedBlueprintAssetReference = 0x78; // FSoftObjectPath
		constexpr auto PrefabId = 0x90; // FGuid
		constexpr auto PrefabContent = 0xa0; // FString
		constexpr auto PrefabHash = 0xb0; // FString
		constexpr auto NumActors = 0xc0; // int
		constexpr auto PrefabPivot = 0xc4; // FVector
	}

	namespace n_USQCaptureZoneComponent { // : USQGraphNodeComponent
		constexpr auto InitialTeam = 0x150; // char
		constexpr auto FlagName = 0x158; // FText
		constexpr auto CapturingTeam = 0x170; // char
		constexpr auto OwningTeam = 0x171; // char
		constexpr auto LastOwningTeam = 0x172; // char
		constexpr auto TimeToCap = 0x174; // float
		constexpr auto Uncappable = 0x178; // bool
		constexpr auto PlayerAdvantageToCapture = 0x17c; // int
		constexpr auto PlayersNeededWhenUncaptured = 0x180; // int
		constexpr auto CapturePercent = 0x184; // float
		constexpr auto CapturePercentDirection = 0x188; // int
		constexpr auto bIsLocked = 0x18c; // bool
		constexpr auto CaptureStateChangeEvent = 0x190; // FScriptMulticastDelegate
		constexpr auto StateObject = 0x1a0; // USQCoreStateComponent*
		constexpr auto TeamCapturabilities = 0x1c0; // uint32
	}

	namespace n_UInAppPurchaseQueryCallbackProxy { // : UObject
		constexpr auto OnSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto OnFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_USkeletalMesh { // : UObject
		constexpr auto Skeleton = 0x48; // USkeleton*
		constexpr auto ImportedBounds = 0x50; // FBoxSphereBounds
		constexpr auto ExtendedBounds = 0x6c; // FBoxSphereBounds
		constexpr auto PositiveBoundsExtension = 0x88; // FVector
		constexpr auto NegativeBoundsExtension = 0x94; // FVector
		constexpr auto Materials = 0xa0; // TArray<FSkeletalMaterial>
		constexpr auto SkelMirrorTable = 0xb0; // TArray<FBoneMirrorInfo>
		constexpr auto LODInfo = 0xc0; // TArray<FSkeletalMeshLODInfo>
		constexpr auto MinLOD = 0x120; // FPerPlatformInt
		constexpr auto DisableBelowMinLodStripping = 0x124; // FPerPlatformBool
		constexpr auto SkelMirrorAxis = 0x125; // EAxis
		constexpr auto SkelMirrorFlipAxis = 0x126; // EAxis
		constexpr auto bUseFullPrecisionUVs = 0x127; // char : 1
		constexpr auto bUseHighPrecisionTangentBasis = 0x127; // char : 1
		constexpr auto bHasBeenSimplified = 0x127; // char : 1
		constexpr auto bHasVertexColors = 0x127; // char : 1
		constexpr auto bEnablePerPolyCollision = 0x127; // char : 1
		constexpr auto BodySetup = 0x128; // UBodySetup*
		constexpr auto PhysicsAsset = 0x130; // UPhysicsAsset*
		constexpr auto ShadowPhysicsAsset = 0x138; // UPhysicsAsset*
		constexpr auto NodeMappingData = 0x140; // TArray<UNodeMappingContainer*>
		constexpr auto MorphTargets = 0x150; // TArray<UMorphTarget*>
		constexpr auto PostProcessAnimBlueprint = 0x2d8; // UAnimInstance*
		constexpr auto MeshClothingAssets = 0x2e0; // TArray<UClothingAssetBase*>
		constexpr auto SamplingInfo = 0x2f0; // FSkeletalMeshSamplingInfo
		constexpr auto AssetUserData = 0x320; // TArray<UAssetUserData*>
		constexpr auto Sockets = 0x330; // TArray<USkeletalMeshSocket*>
		constexpr auto SkinWeightProfiles = 0x350; // TArray<FSkinWeightProfileInfo>
	}

	namespace n_ABP_M4A1_Founder_C { // : ABP_GenericRifle_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UInterpGroup { // : UObject
		constexpr auto InterpTracks = 0x30; // TArray<UInterpTrack*>
		constexpr auto GroupName = 0x40; // FName
		constexpr auto GroupColor = 0x48; // FColor
		constexpr auto bCollapsed = 0x4c; // char : 1
		constexpr auto bVisible = 0x4c; // char : 1
		constexpr auto bIsFolder = 0x4c; // char : 1
		constexpr auto bIsParented = 0x4c; // char : 1
		constexpr auto bIsSelected = 0x4c; // char : 1
	}

	namespace n_UAbilityTask_WaitMovementModeChange { // : UAbilityTask
		constexpr auto OnChange = 0x80; // FScriptMulticastDelegate
	}

	namespace n_UHighlightsSetVideoAsync { // : UBlueprintAsyncActionBase
		constexpr auto OnSuccess = 0x30; // FScriptMulticastDelegate
		constexpr auto OnFailure = 0x40; // FScriptMulticastDelegate
	}

	namespace n_USQRoleSettings { // : USQSettings
		constexpr auto Inventory = 0x58; // TArray<FSQInventoryWeaponGroupData>
		constexpr auto Role_Specifics_ActionName = 0x68; // FName
		constexpr auto Role_Specifics_ActionName1 = 0x70; // FName
		constexpr auto SoldierMenuAnimMontage = 0x78; // UAnimMontage*
		constexpr auto bLeavingSquadChangesRole = 0x80; // bool
		constexpr auto bCanPlaceRallyPoint = 0x81; // bool
		constexpr auto bCanSeeHealthStatus = 0x82; // bool
		constexpr auto bIsLeader = 0x83; // bool
		constexpr auto bIsMedic = 0x84; // bool
		constexpr auto bIsRecruit = 0x85; // bool
		constexpr auto bCanBuild = 0x86; // bool
		constexpr auto DisplayName = 0x88; // FText
		constexpr auto UiIcon = 0xa0; // UTexture2D*
		constexpr auto SpecialWeaponIcon = 0xa8; // UTexture2D*
		constexpr auto Role_Details = 0xb0; // FText
		constexpr auto Role_Specifics = 0xc8; // FText
		constexpr auto DefaultLimit = 0xe0; // FSQRoleLimit
		constexpr auto RoleType = 0x104; // ESQRoleTypeEnum
		constexpr auto SoldierClass = 0x108; // UClass*
		constexpr auto SoldierClassDesert = 0x130; // UClass*
		constexpr auto TestInventory = 0x158; // TArray<FSQInventoryWeaponGroupData>
		constexpr auto VehicleAbility = 0x168; // ESQVehicleRoleAbility
	}

	namespace n_UMaterialExpressionArctangentFast { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UImageSequenceProtocol_JPG { // : UCompressedImageSequenceProtocol
		constexpr auto CompressionQuality = 0xd8; // int
	}

	namespace n_USQSoundNodeFixedDistanceCrossFade { // : USoundNode
		constexpr auto CrossFadeInput = 0x40; // TArray<FSQDistanceDatum>
		constexpr auto TestDistance = 0x50; // float
	}

	namespace n_ABP_SVDM_Optic_C { // : ABP_SVD_Optic_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
		constexpr auto SVDFront = 0x7b8; // UStaticMeshComponent*
		constexpr auto PSOScope = 0x7c0; // UStaticMeshComponent*
		constexpr auto HasBUIS = 0x7c8; // bool
	}

	namespace n_USQMapIconComponent { // : USQMapItemComponent
		constexpr auto Texture = 0x130; // UTexture*
		constexpr auto SelectionGroup = 0x138; // ESQMapIconSelectionGroup
		constexpr auto SelectedTexture = 0x140; // UTexture*
		constexpr auto SelectedTint = 0x148; // FLinearColor
	}

	namespace n_UReplicationGraphNode_TearOff_ForConnection { // : UReplicationGraphNode
		constexpr auto TearOffActors = 0x50; // TArray<FTearOffActorInfo>
	}

	namespace n_UActorSequence { // : UMovieSceneSequence
		constexpr auto MovieScene = 0x348; // UMovieScene*
		constexpr auto ObjectReferences = 0x350; // FActorSequenceObjectReferenceMap
	}

	namespace n_UGameViewportClient { // : UScriptViewportClient
		constexpr auto ViewportConsole = 0x40; // UConsole*
		constexpr auto DebugProperties = 0x48; // TArray<FDebugDisplayProperty>
		constexpr auto World = 0x78; // UWorld*
		constexpr auto GameInstance = 0x80; // UGameInstance*
	}

	namespace n_AGeometryCacheActor { // : AActor
		constexpr auto GeometryCacheComponent = 0x248; // UGeometryCacheComponent*
	}

	namespace n_UEnvQueryGenerator_Cone { // : UEnvQueryGenerator_ProjectedPoints
		constexpr auto AlignedPointsDistance = 0x80; // FAIDataProviderFloatValue
		constexpr auto ConeDegrees = 0xb0; // FAIDataProviderFloatValue
		constexpr auto AngleStep = 0xe0; // FAIDataProviderFloatValue
		constexpr auto Range = 0x110; // FAIDataProviderFloatValue
		constexpr auto CenterActor = 0x140; // UEnvQueryContext*
		constexpr auto bIncludeContextLocation = 0x148; // char : 1
	}

	namespace n_USpectatorPawnMovement { // : UFloatingPawnMovement
		constexpr auto bIgnoreTimeDilation = 0x178; // char : 1
	}

	namespace n_ASQBot { // : ASQSoldier
		constexpr auto BotBehavior = 0x1e50; // UBehaviorTree*
	}

	namespace n_ALevelSequenceActor { // : AActor
		constexpr auto PlaybackSettings = 0x258; // FMovieSceneSequencePlaybackSettings
		constexpr auto SequencePlayer = 0x270; // ULevelSequencePlayer*
		constexpr auto LevelSequence = 0x278; // FSoftObjectPath
		constexpr auto AdditionalEventReceivers = 0x290; // TArray<AActor*>
		constexpr auto BurnInOptions = 0x2a0; // ULevelSequenceBurnInOptions*
		constexpr auto BindingOverrides = 0x2a8; // UMovieSceneBindingOverrides*
		constexpr auto bAutoPlay = 0x2b0; // char : 1
		constexpr auto bOverrideInstanceData = 0x2b0; // char : 1
		constexpr auto bReplicatePlayback = 0x2b0; // char : 1
		constexpr auto DefaultInstanceData = 0x2b8; // UObject*
		constexpr auto BurnInInstance = 0x2c0; // ULevelSequenceBurnIn*
		constexpr auto bShowBurnin = 0x2c8; // bool
	}

	namespace n_UDistributionVectorUniform { // : UDistributionVector
		constexpr auto Max = 0x38; // FVector
		constexpr auto Min = 0x44; // FVector
		constexpr auto bLockAxes = 0x50; // char : 1
		constexpr auto LockedAxes = 0x54; // EDistributionVectorLockFlags
		constexpr auto MirrorFlags = 0x55; // EDistributionVectorMirrorFlags [0x3]
		constexpr auto bUseExtremes = 0x58; // char : 1
	}

	namespace n_ABP_SVD_Optic_C { // : ABP_GenericRifle_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
		constexpr auto SVDFront = 0x7b8; // UStaticMeshComponent*
		constexpr auto PSOScope = 0x7c0; // UStaticMeshComponent*
		constexpr auto HasBUIS = 0x7c8; // bool
	}

	namespace n_ABP_AK74MGP25_1P78_UGL_Desert_Smoke_Blue_C { // : ABP_AK74MGP25_1P78_UGL_Desert_Smoke_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UAsyncTaskDownloadImage { // : UBlueprintAsyncActionBase
		constexpr auto OnSuccess = 0x30; // FScriptMulticastDelegate
		constexpr auto OnFail = 0x40; // FScriptMulticastDelegate
	}

	namespace n_UOnlinePIESettings { // : UDeveloperSettings
		constexpr auto bOnlinePIEEnabled = 0x38; // bool
		constexpr auto Logins = 0x40; // TArray<FPIELoginSettingsInternal>
	}

	namespace n_UParticleModuleSizeBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x29; // char : 1
		constexpr auto LODDuplicate = 0x29; // char : 1
		constexpr auto bSupportsRandomSeed = 0x29; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x29; // char : 1
		constexpr auto LODValidity = 0x2c; // char
	}

	namespace n_UExpandableArea { // : UWidget
		constexpr auto Style = 0x110; // FExpandableAreaStyle
		constexpr auto BorderBrush = 0x230; // FSlateBrush
		constexpr auto BorderColor = 0x2b8; // FSlateColor
		constexpr auto bIsExpanded = 0x2e0; // bool
		constexpr auto MaxHeight = 0x2e4; // float
		constexpr auto HeaderPadding = 0x2e8; // FMargin
		constexpr auto AreaPadding = 0x2f8; // FMargin
		constexpr auto OnExpansionChanged = 0x308; // FScriptMulticastDelegate
		constexpr auto HeaderContent = 0x318; // UWidget*
		constexpr auto BodyContent = 0x320; // UWidget*
	}

	namespace n_UDistributionFloatConstant { // : UDistributionFloat
		constexpr auto Constant = 0x38; // float
	}

	namespace n_UMaterialExpressionSceneDepth { // : UMaterialExpression
		constexpr auto InputMode = 0x40; // EMaterialSceneAttributeInputMode
		constexpr auto Input = 0x44; // FExpressionInput
		constexpr auto Coordinates = 0x58; // FExpressionInput
		constexpr auto ConstInput = 0x6c; // FVector2D
	}

	namespace n_UAnimCurveCompressionSettings { // : UObject
		constexpr auto Codec = 0x28; // UAnimCurveCompressionCodec*
	}

	namespace n_ABrushShape { // : ABrush
		constexpr auto BrushType = 0x248; // EBrushType
		constexpr auto BrushColor = 0x24c; // FColor
		constexpr auto PolyFlags = 0x250; // int
		constexpr auto bColored = 0x254; // char : 1
		constexpr auto bSolidWhenSelected = 0x254; // char : 1
		constexpr auto bPlaceableFromClassBrowser = 0x254; // char : 1
		constexpr auto bNotForClientOrServer = 0x254; // char : 1
		constexpr auto Brush = 0x258; // UModel*
		constexpr auto BrushComponent = 0x260; // UBrushComponent*
		constexpr auto bInManipulation = 0x268; // char : 1
		constexpr auto SavedSelections = 0x270; // TArray<FGeomSelection>
	}

	namespace n_ABP_M72A7_Rocket_Proj2_C { // : ASQMortarProjectile
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto SkeletalMesh = 0x528; // USkeletalMeshComponent*
		constexpr auto BPSoundonUnderMinFlightTime = 0x530; // USoundBase*
		constexpr auto BPEffectOnUnderMinFlightTime = 0x538; // UParticleSystem*
	}

	namespace n_UBP_M4M203_Rifle_M68_StaticInfo_C { // : UBP_M4M203_Rifle_StaticInfo_C
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_USQCoreStateSpawnPointsListWidget { // : USQCoreStateWidget
		constexpr auto bSpawnOnSelection = 0x258; // bool
		constexpr auto bIsSelected = 0x25c; // char : 1
		constexpr auto bSieged = 0x25c; // char : 1
		constexpr auto bSpawningEnabled = 0x25c; // char : 1
		constexpr auto SpawnPointLocation = 0x260; // FVector
		constexpr auto SpawnPointType = 0x26c; // ESQSpawnPointType
		constexpr auto ActivatedTimeStamp = 0x270; // float
		constexpr auto BaseTexture = 0x278; // UTexture2D*
		constexpr auto HABTexture = 0x280; // UTexture2D*
		constexpr auto RallyTexture = 0x288; // UTexture2D*
		constexpr auto CacheTexture = 0x290; // UTexture2D*
		constexpr auto OwningGameSpawn = 0x298; // ASQGameSpawn*
	}

	namespace n_UBorderSlot { // : UPanelSlot
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_USQDataGatheringComponent { // : UActorComponent
		constexpr auto HeatMapRecorder = 0xd8; // UHeatMapRecorder*
	}

	namespace n_ASQFoliageBender { // : AActor
		constexpr auto FoliageMaterialParameterCollection = 0x248; // UMaterialParameterCollection*
		constexpr auto Sphere = 0x250; // USphereComponent*
		constexpr auto StandSpreadMultiplier = 0x258; // float
		constexpr auto ProneSpreadMultiplier = 0x25c; // float
		constexpr auto bDrawDebugSpheres = 0x260; // bool
		constexpr auto bDrawDebugPoints = 0x261; // bool
	}

	namespace n_ABP_AK74M_4Mags_Desert_C { // : ABP_AK74M_4Mags_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UM4M203_Carryhandle_Skeleton_AnimBlueprint_C { // : USQWeaponAnimInstance
		constexpr auto UberGraphFrame = 0x2b0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root_BDE1EE544F8916819737EF8129D9FA1D = 0x2b8; // FAnimNode_Root
		constexpr auto AnimGraphNode_LayeredBoneBlend_878F702E4E159DBC7D6BF28B948E0737 = 0x2e8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_453B952A44CB9A0CAB9D888796C7D582 = 0x3a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot_DD9766F64B96AB42BEE76AA81E7B6F81 = 0x420; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_90D8BF4D4D5A6E61188C07AD50DA7988 = 0x468; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_ACCF408E4AE15B7056E8439FA3D8529F = 0x4b0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SequencePlayer_5160BECF4519C7149676B58A645142DE = 0x4f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_0886B387432268103374128DADCEF80D = 0x570; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_LocalRefPose_255B99E543E6D3B0793DD7B7EA2DD844 = 0x630; // FAnimNode_RefPose
		constexpr auto AnimGraphNode_ModifyBone_D049EFB04855AA5EF0B738889D868A34 = 0x648; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_10DA121F4751C4F8CEA6FFB0BA2458D8 = 0x750; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_8681A21B4F78142DC15D5E9E22581B7C = 0x770; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ModifyBone_B2669F85444346146226F386963648A7 = 0x790; // FAnimNode_ModifyBone
		constexpr auto LadderScaleAds = 0x898; // FVector
	}

	namespace n_ABP_L85A2_Foregrip_Tracer_C { // : ABP_L85A2_Foregrip_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UPropertyValueMaterial { // : UPropertyValue
		constexpr auto properties = 0x80; // TArray<UProperty*>
		constexpr auto PropertyIndices = 0x90; // TArray<int>
		constexpr auto CapturedPropSegments = 0xa0; // TArray<FCapturedPropSegment>
		constexpr auto FullDisplayString = 0xb0; // FString
		constexpr auto PropertySetterName = 0xc0; // FName
		constexpr auto PropertySetterParameterDefaults = 0xc8; // TMap<FString, FString>
		constexpr auto bHasRecordedData = 0x118; // bool
		constexpr auto LeafPropertyClass = 0x120; // UObject*
		constexpr auto ValueBytes = 0x128; // TArray<char>
		constexpr auto PropCategory = 0x138; // EPropertyValueCategory
	}

	namespace n_UWindowTitleBarAreaSlot { // : UPanelSlot
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UBP_AK74M_StaticInfo_C { // : UBP_AK74_StaticInfo_C
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_USSGS_ColorEffectSpecificationRanges { // : USSGS_ColorEffectSpecification
		constexpr auto Ranges = 0x30; // TArray<FSSGS_ColorRange>
	}

	namespace n_UAsyncActionHandleSaveGame { // : UBlueprintAsyncActionBase
		constexpr auto Completed = 0x30; // FScriptMulticastDelegate
		constexpr auto SaveGameObject = 0x60; // USaveGame*
	}

	namespace n_UInterpTrackColorProp { // : UInterpTrackVectorBase
		constexpr auto PropertyName = 0x90; // FName
	}

	namespace n_UBrushBinding { // : UPropertyBinding
		constexpr auto SourceObject = 0x28; // TWeakObjectPtr<UObject>
		constexpr auto SourcePath = 0x30; // FDynamicPropertyPath
		constexpr auto DestinationProperty = 0x60; // FName
	}

	namespace n_USoundNodeParamCrossFade { // : USoundNodeDistanceCrossFade
		constexpr auto ParamName = 0x50; // FName
	}

	namespace n_ASQGrenade { // : ASQEquipableItem
		constexpr auto GrenadeState = 0x480; // ESQGrenadeState
		constexpr auto GrenadeConfig = 0x488; // FSQGrenadeData
		constexpr auto GrenadeStaticInfo = 0x4e8; // USQGrenadeStaticInfo*
		constexpr auto bCachedOverhandPinpull = 0x4f0; // bool
		constexpr auto bCachedOverhandThrow = 0x4f1; // bool
		constexpr auto bCachedUnderhandPinpull = 0x4f2; // bool
		constexpr auto bCachedUnderhandThrow = 0x4f3; // bool
		constexpr auto bCachedReloading = 0x4f4; // bool
		constexpr auto WeaponOverhandPinpull1pMontage = 0x4f8; // UAnimMontage*
		constexpr auto WeaponOverhandPinpull3pMontage = 0x500; // UAnimMontage*
		constexpr auto OverhandPinpull1pMontage = 0x508; // UAnimMontage*
		constexpr auto OverhandPinpull3pMontage = 0x510; // UAnimMontage*
		constexpr auto WeaponOverhandThrow1pMontage = 0x518; // UAnimMontage*
		constexpr auto WeaponOverhandThrow3pMontage = 0x520; // UAnimMontage*
		constexpr auto OverhandThrow1pMontage = 0x528; // UAnimMontage*
		constexpr auto OverhandThrow3pMontage = 0x530; // UAnimMontage*
		constexpr auto WeaponUnderhandPinpull1pMontage = 0x538; // UAnimMontage*
		constexpr auto WeaponUnderhandPinpull3pMontage = 0x540; // UAnimMontage*
		constexpr auto UnderhandPinpull1pMontage = 0x548; // UAnimMontage*
		constexpr auto UnderhandPinpull3pMontage = 0x550; // UAnimMontage*
		constexpr auto WeaponUnderhandThrow1pMontage = 0x558; // UAnimMontage*
		constexpr auto WeaponUnderhandThrow3pMontage = 0x560; // UAnimMontage*
		constexpr auto UnderhandThrow1pMontage = 0x568; // UAnimMontage*
		constexpr auto UnderhandThrow3pMontage = 0x570; // UAnimMontage*
	}

	namespace n_USQRestriction_VehicleInRange { // : USQRestriction_Boolean
		constexpr auto Range = 0x58; // float
		constexpr auto TargetTeams = 0x60; // TSet<ESQTeamRelationShip>
		constexpr auto TargetCount = 0xb0; // int
	}

	namespace n_UEdGraph { // : UObject
		constexpr auto Schema = 0x28; // UEdGraphSchema*
		constexpr auto Nodes = 0x30; // TArray<UEdGraphNode*>
		constexpr auto bEditable = 0x40; // char : 1
		constexpr auto bAllowDeletion = 0x40; // char : 1
		constexpr auto bAllowRenaming = 0x40; // char : 1
	}

	namespace n_UMovieSceneGeometryCacheTrack { // : UMovieSceneNameableTrack
		constexpr auto AnimationSections = 0x58; // TArray<UMovieSceneSection*>
	}

	namespace n_ACineCameraActor { // : ACameraActor
		constexpr auto LookatTrackingSettings = 0x7b0; // FCameraLookatTrackingSettings
	}

	namespace n_USoundSubmix { // : UObject
		constexpr auto ChildSubmixes = 0x28; // TArray<USoundSubmix*>
		constexpr auto ParentSubmix = 0x38; // USoundSubmix*
		constexpr auto ChannelFormat = 0x40; // ESubmixChannelFormat
		constexpr auto bMuteWhenBackgrounded = 0x41; // char : 1
		constexpr auto SubmixEffectChain = 0x48; // TArray<USoundEffectSubmixPreset*>
		constexpr auto AmbisonicsPluginSettings = 0x58; // UAmbisonicsSubmixSettingsBase*
		constexpr auto EnvelopeFollowerAttackTime = 0x60; // int
		constexpr auto EnvelopeFollowerReleaseTime = 0x64; // int
		constexpr auto OutputVolume = 0x68; // float
		constexpr auto OnSubmixRecordedFileDone = 0x70; // FScriptMulticastDelegate
	}

	namespace n_ABP_AAS_DefendMarker_C { // : ASQMapMarker
		constexpr auto DefaultSceneRoot = 0x280; // USceneComponent*
	}

	namespace n_UFont { // : UObject
		constexpr auto FontCacheType = 0x30; // EFontCacheType
		constexpr auto Characters = 0x38; // TArray<FFontCharacter>
		constexpr auto Textures = 0x48; // TArray<UTexture2D*>
		constexpr auto IsRemapped = 0x58; // int
		constexpr auto EmScale = 0x5c; // float
		constexpr auto Ascent = 0x60; // float
		constexpr auto Descent = 0x64; // float
		constexpr auto Leading = 0x68; // float
		constexpr auto Kerning = 0x6c; // int
		constexpr auto ImportOptions = 0x70; // FFontImportOptionsData
		constexpr auto NumCharacters = 0x120; // int
		constexpr auto MaxCharHeight = 0x128; // TArray<int>
		constexpr auto ScalingFactor = 0x138; // float
		constexpr auto LegacyFontSize = 0x13c; // int
		constexpr auto LegacyFontName = 0x140; // FName
		constexpr auto CompositeFont = 0x148; // FCompositeFont
	}

	namespace n_UMaterialExpressionViewSize { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UBP_Attachment_M4_FrontSight_Founders_C { // : UBP_Attachment_M4_FrontSight_C
		constexpr auto MeshTransitionPercentage = 0x4b0; // float
		constexpr auto ADSMesh = 0x4b8; // UStaticMesh*
		constexpr auto ADSMeshTransform = 0x4c0; // FTransform
		constexpr auto NonADSMesh = 0x4f0; // UStaticMesh*
		constexpr auto NonADSMeshTransform = 0x500; // FTransform
		constexpr auto InToADSMeshTransitionSettings = 0x530; // TArray<FSQMeshTransitionSettings>
		constexpr auto OutFromADSMeshTransitionSettings = 0x540; // TArray<FSQMeshTransitionSettings>
	}

	namespace n_UUniformGridPanel { // : UPanelWidget
		constexpr auto SlotPadding = 0x120; // FMargin
		constexpr auto MinDesiredSlotWidth = 0x130; // float
		constexpr auto MinDesiredSlotHeight = 0x134; // float
	}

	namespace n_USteamNetDriver { // : UIpNetDriver
		constexpr auto LogPortUnreach = 0x748; // char : 1
		constexpr auto AllowPlayerPortUnreach = 0x748; // char : 1
		constexpr auto MaxPortCountToTry = 0x74c; // uint32
		constexpr auto ServerDesiredSocketReceiveBufferBytes = 0x75c; // uint32
		constexpr auto ServerDesiredSocketSendBufferBytes = 0x760; // uint32
		constexpr auto ClientDesiredSocketReceiveBufferBytes = 0x764; // uint32
		constexpr auto ClientDesiredSocketSendBufferBytes = 0x768; // uint32
		constexpr auto MaxSecondsInReceive = 0x770; // double
		constexpr auto NbPacketsBetweenReceiveTimeTest = 0x778; // int
	}

	namespace n_UGameplayTask_WaitDelay { // : UGameplayTask
		constexpr auto OnFinish = 0x68; // FScriptMulticastDelegate
	}

	namespace n_UEditableStaticMeshAdapter { // : UEditableMeshAdapter
		constexpr auto StaticMesh = 0x28; // UStaticMesh*
		constexpr auto OriginalStaticMesh = 0x30; // UStaticMesh*
		constexpr auto StaticMeshLODIndex = 0x38; // int
	}

	namespace n_USQHUDWidget { // : UObject
		constexpr auto UMGWidget = 0x28; // UUserWidget*
		constexpr auto Position = 0x30; // FVector2D
		constexpr auto OffsetPosition = 0x38; // FVector2D
		constexpr auto WidgetOrigin = 0x40; // FVector2D
		constexpr auto Size = 0x48; // FVector2D
		constexpr auto ZOrder = 0x50; // float
		constexpr auto bUseScreenNormalizedCoordinates = 0x54; // bool
		constexpr auto bBypassResolutionScaling = 0x55; // bool
		constexpr auto DesignedResolution = 0x58; // float
		constexpr auto bMaintainOriginalAspectRatio = 0x5c; // bool
		constexpr auto Alpha = 0x60; // float
		constexpr auto bHidden = 0x64; // bool
		constexpr auto GameState = 0x68; // ASQGameState*
		constexpr auto HUD = 0x70; // ASQHUD*
		constexpr auto PlayerController = 0x78; // ASQPlayerController*
		constexpr auto PlayerState = 0x80; // ASQPlayerState*
		constexpr auto Soldier = 0x88; // ASQSoldier*
		constexpr auto Canvas = 0x90; // UCanvas*
		constexpr auto DefaultTexture = 0x98; // UTexture2D*
		constexpr auto GradientTexture0 = 0xa0; // UTexture2D*
		constexpr auto CanvasCenter = 0xa8; // FVector2D
		constexpr auto CanvasSize = 0xb0; // FVector2D
		constexpr auto DrawingPosition = 0xb8; // FVector2D
		constexpr auto DrawingSize = 0xc0; // FVector2D
		constexpr auto DrawingScale = 0xc8; // float
	}

	namespace n_UBP_Attachment_1p29_Blur_C { // : USQWeaponAttachment_Scope
		constexpr auto MeshTransitionPercentage = 0x4b0; // float
		constexpr auto ADSMesh = 0x4b8; // UStaticMesh*
		constexpr auto ADSMeshTransform = 0x4c0; // FTransform
		constexpr auto NonADSMesh = 0x4f0; // UStaticMesh*
		constexpr auto NonADSMeshTransform = 0x500; // FTransform
		constexpr auto InToADSMeshTransitionSettings = 0x530; // TArray<FSQMeshTransitionSettings>
		constexpr auto OutFromADSMeshTransitionSettings = 0x540; // TArray<FSQMeshTransitionSettings>
	}

	namespace n_ABP_L85A2AG36_ElcanLDS_UGL_Smoke_Blue_C { // : ABP_L85A2AG36_ElcanLDS_UGL_Smoke_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UParticleModuleLocationWorldOffset { // : UParticleModuleLocation
		constexpr auto StartLocation = 0x30; // FRawDistributionVector
		constexpr auto DistributeOverNPoints = 0x80; // float
		constexpr auto DistributeThreshold = 0x84; // float
	}

	namespace n_UModelComponent { // : UPrimitiveComponent
		constexpr auto ModelBodySetup = 0x420; // UBodySetup*
	}

	namespace n_UBTTask_RunEQSQuery { // : UBTTask_BlackboardBase
		constexpr auto QueryTemplate = 0x98; // UEnvQuery*
		constexpr auto QueryParams = 0xa0; // TArray<FEnvNamedValue>
		constexpr auto QueryConfig = 0xb0; // TArray<FAIDynamicParam>
		constexpr auto RunMode = 0xc0; // EEnvQueryRunMode
		constexpr auto EQSQueryBlackboardKey = 0xc8; // FBlackboardKeySelector
		constexpr auto bUseBBKey = 0xf0; // bool
		constexpr auto EQSRequest = 0xf8; // FEQSParametrizedQueryExecutionRequest
	}

	namespace n_UInterpTrackFloatMaterialParam { // : UInterpTrackFloatBase
		constexpr auto TargetMaterials = 0x90; // TArray<UMaterialInterface*>
		constexpr auto ParamName = 0xa0; // FName
	}

	namespace n_ABP_L85A2_SUSAT_Foregrip_Tracer_C { // : ABP_L85A2_SUSAT_Foregrip_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
		constexpr auto Scope = 0x7b8; // UStaticMeshComponent*
	}

	namespace n_ABP_L85A2_4Mags_C { // : ABP_L85A2_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UGameplayAbilityBlueprint { // : UBlueprint
		constexpr auto bRecompileOnLoad = 0x50; // char : 1
		constexpr auto ParentClass = 0x58; // UObject*
		constexpr auto bHasBeenRegenerated = 0x60; // char : 1
		constexpr auto bIsRegeneratingOnLoad = 0x60; // char : 1
		constexpr auto SimpleConstructionScript = 0x68; // USimpleConstructionScript*
		constexpr auto ComponentTemplates = 0x70; // TArray<UActorComponent*>
		constexpr auto Timelines = 0x80; // TArray<UTimelineTemplate*>
		constexpr auto InheritableComponentHandler = 0x90; // UInheritableComponentHandler*
		constexpr auto BlueprintType = 0x98; // EBlueprintType
		constexpr auto BlueprintSystemVersion = 0x9c; // int
		constexpr auto bNativize = 0xd0; // bool
	}

	namespace n_UMaterialExpressionTangent { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Period = 0x54; // float
	}

	namespace n_ABP_Projectile_Red_C { // : ABP_Projectile_C
		constexpr auto ParticleSystem_Red = 0x4a0; // UParticleSystemComponent*
	}

	namespace n_USQRotorBladesComponent { // : USQVehicleComponent
		constexpr auto DestructionCameraShake = 0x588; // UCameraShake*
		constexpr auto DestructionShakeScale = 0x590; // float
		constexpr auto CollisionDestructionThrustThreshold = 0x594; // float
		constexpr auto ObjectTypes = 0x598; // TArray<EObjectTypeQuery>
		constexpr auto DamagePerSec = 0x5a8; // float
		constexpr auto bIsMainRotor = 0x5ac; // bool
		constexpr auto IgnoredActors = 0x5b0; // TArray<AActor*>
		constexpr auto Owner = 0x630; // ASQHelicopter2*
		constexpr auto bInCollision = 0x638; // bool
		constexpr auto OverlapMesh = 0x640; // UStaticMeshComponent*
	}

	namespace n_ABP_RPG7V2_Parent_C { // : ABP_GenericRocketLauncher_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
		constexpr auto MuzzleFlashRearComponent3P = 0x7b8; // UParticleSystemComponent*
		constexpr auto BackBlastComponent3P = 0x7c0; // UChildActorComponent*
		constexpr auto MuzzleFlashRearComponent1P = 0x7c8; // UParticleSystemComponent*
		constexpr auto SquadBlast = 0x7d0; // USQBlastComponent*
		constexpr auto BackBlastComponent1P = 0x7d8; // UChildActorComponent*
		constexpr auto BackblastSocket = 0x7e0; // FName
		constexpr auto BackblastEffect1P = 0x7e8; // UParticleSystem*
		constexpr auto BackblastEffect3P = 0x7f0; // UParticleSystem*
	}

	namespace n_UParticleModuleParameterDynamic { // : UParticleModuleParameterBase
		constexpr auto DynamicParams = 0x30; // TArray<FEmitterDynamicParameter>
		constexpr auto UpdateFlags = 0x40; // int
		constexpr auto bUsesVelocity = 0x44; // char : 1
	}

	namespace n_USQRadialCenterRoleButton { // : USQRadialIconButton
		constexpr auto bIsUnavailable = 0x410; // bool
		constexpr auto Cost = 0x414; // float
		constexpr auto CostBlock = 0x418; // UTextBlock*
		constexpr auto ReferenceRole = 0x420; // USQRoleSettings*
		constexpr auto RearmSource = 0x428; // TScriptInterface<Class>
		constexpr auto OwnerPlayerController = 0x438; // ASQPlayerController*
	}

	namespace n_URandomVector { // : UFieldNodeVector
		constexpr auto Magnitude = 0xd8; // float
	}

	namespace n_UParticleModuleOrientationAxisLock { // : UParticleModuleOrientationBase
		constexpr auto LockAxisFlags = 0x30; // EParticleAxisLock
	}

	namespace n_UEnvQueryManager { // : UAISubsystem
		constexpr auto InstanceCache = 0xa8; // TArray<FEnvQueryInstanceCache>
		constexpr auto LocalContexts = 0xb8; // TArray<UEnvQueryContext*>
		constexpr auto GCShieldedWrappers = 0xc8; // TArray<UEnvQueryInstanceBlueprintWrapper*>
		constexpr auto MaxAllowedTestingTime = 0x12c; // float
		constexpr auto bTestQueriesUsingBreadth = 0x130; // bool
		constexpr auto QueryCountWarningThreshold = 0x134; // int
		constexpr auto QueryCountWarningInterval = 0x138; // double
	}

	namespace n_UGameplayTask_ClaimResource { // : UGameplayTask
		constexpr auto InstanceName = 0x30; // FName
		constexpr auto ResourceOverlapPolicy = 0x3a; // ETaskResourceOverlapPolicy
		constexpr auto ChildTask = 0x60; // UGameplayTask*
	}

	namespace n_UEditableGameplayTagQueryExpression_AnyExprMatch { // : UEditableGameplayTagQueryExpression
		constexpr auto Expressions = 0x28; // TArray<UEditableGameplayTagQueryExpression*>
	}

	namespace n_UParticleModuleSubUVMovie { // : UParticleModuleSubUV
		constexpr auto bUseEmitterTime = 0x78; // char : 1
		constexpr auto FrameRate = 0x80; // FRawDistributionFloat
		constexpr auto StartingFrame = 0xb8; // int
	}

	namespace n_ANavLinkProxy { // : AActor
		constexpr auto PointLinks = 0x258; // TArray<FNavigationLink>
		constexpr auto SegmentLinks = 0x268; // TArray<FNavigationSegmentLink>
		constexpr auto SmartLinkComp = 0x278; // UNavLinkCustomComponent*
		constexpr auto bSmartLinkIsRelevant = 0x280; // bool
		constexpr auto OnSmartLinkReached = 0x288; // FScriptMulticastDelegate
	}

	namespace n_UParticleModuleLifetime { // : UParticleModuleLifetimeBase
		constexpr auto Lifetime = 0x30; // FRawDistributionFloat
	}

	namespace n_ASQAIController { // : AAIController
		constexpr auto BlackboardComp = 0x350; // UBlackboardComponent*
		constexpr auto BehaviorComp = 0x358; // UBehaviorTreeComponent*
	}

	namespace n_USlateSettings { // : UObject
		constexpr auto bExplicitCanvasChildZOrder = 0x28; // bool
	}

	namespace n_USQMapWidgetAmmoCrate { // : USQMapWidgetDeployable
		constexpr auto BuildState = 0x2a8; // ESQBuildState
	}

	namespace n_ABP_AK74M_1P63_Desert_C { // : ABP_AK74M_1P63_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UPlayFabRuntimeSettings { // : UObject
		constexpr auto ProductionEnvironmentURL = 0x28; // FString
		constexpr auto TitleId = 0x38; // FString
		constexpr auto DeveloperSecretKey = 0x48; // FString
	}

	namespace n_UMaterialExpressionPreSkinnedPosition { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UTexture { // : UStreamableRenderAsset
		constexpr auto LightingGuid = 0x48; // FGuid
		constexpr auto LODBias = 0x58; // int
		constexpr auto CompressionSettings = 0x5c; // TextureCompressionSettings
		constexpr auto Filter = 0x5d; // TextureFilter
		constexpr auto MipLoadOptions = 0x5e; // ETextureMipLoadOptions
		constexpr auto LODGroup = 0x5f; // TextureGroup
		constexpr auto SRGB = 0x60; // char : 1
		constexpr auto bNoTiling = 0x60; // char : 1
		constexpr auto VirtualTextureStreaming = 0x60; // char : 1
		constexpr auto bAsyncResourceReleaseHasBeenStarted = 0x60; // char : 1
		constexpr auto AssetUserData = 0x68; // TArray<UAssetUserData*>
	}

	namespace n_UMaterialExpressionFontSample { // : UMaterialExpression
		constexpr auto Font = 0x40; // UFont*
		constexpr auto FontTexturePage = 0x48; // int
	}

	namespace n_UChannel { // : UObject
		constexpr auto Connection = 0x28; // UNetConnection*
	}

	namespace n_UMaterialExpressionDecalLifetimeOpacity { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_USQVehicleEngine { // : USQVehicleComponent
		constexpr auto HealthVsDamageCurve = 0x588; // UCurveFloat*
	}

	namespace n_UMaterialExpressionPreSkinnedLocalBounds { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UPawnAction_Wait { // : UPawnAction
		constexpr auto TimeToWait = 0x98; // float
	}

	namespace n_AGameplayAbilityTargetActor_Trace { // : AGameplayAbilityTargetActor
		constexpr auto MaxRange = 0x358; // float
		constexpr auto TraceProfile = 0x35c; // FCollisionProfileName
		constexpr auto bTraceAffectsAimPitch = 0x364; // bool
	}

	namespace n_UParticleModuleLocationPrimitiveBase { // : UParticleModuleLocationBase
		constexpr auto Positive_X = 0x30; // char : 1
		constexpr auto Positive_Y = 0x30; // char : 1
		constexpr auto Positive_Z = 0x30; // char : 1
		constexpr auto Negative_X = 0x30; // char : 1
		constexpr auto Negative_Y = 0x30; // char : 1
		constexpr auto Negative_Z = 0x30; // char : 1
		constexpr auto SurfaceOnly = 0x30; // char : 1
		constexpr auto Velocity = 0x30; // char : 1
		constexpr auto VelocityScale = 0x38; // FRawDistributionFloat
		constexpr auto StartLocation = 0x70; // FRawDistributionVector
	}

	namespace n_UProjectile_SuppressionInfo_C { // : USQSuppressionInfo
		constexpr auto SuppressSwayFactorRelease = 0x28; // float
		constexpr auto AddSuppressSway = 0x2c; // float
		constexpr auto MinSuppressSwayFactor = 0x30; // float
		constexpr auto MaxSuppressSwayFactor = 0x34; // float
		constexpr auto LofSuppressRange = 0x38; // float
		constexpr auto LofSuppressInterpSpeed = 0x3c; // float
		constexpr auto LofSuppressAlphaFactor = 0x40; // float
		constexpr auto LofSuppressRotationAlphaRelease = 0x44; // float
	}

	namespace n_ABP_L85A2_DarkEarth_ElcanLDS_Foregrip_C { // : ABP_L85A2_DarkEarth_Foregrip_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
	}

	namespace n_USQDeployableItemStaticInfo { // : USQItemStaticInfo
		constexpr auto PlacingDeployableWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto PlacingDeployable1pMontage = 0x500; // UAnimMontage*
		constexpr auto PlacingDeployable3pMontage = 0x508; // UAnimMontage*
		constexpr auto DeployableClass = 0x510; // ASQDeployableItem*
		constexpr auto Deployable = 0x518; // USQDeployableSettings*
		constexpr auto PlacingDeployableDuration = 0x520; // float
		constexpr auto FinishPlacingDeployableBlendOutDuration = 0x524; // float
	}

	namespace n_UFireShake_Small_C { // : UCameraShake
		constexpr auto bSingleInstance = 0x28; // char : 1
		constexpr auto OscillationDuration = 0x2c; // float
		constexpr auto OscillationBlendInTime = 0x30; // float
		constexpr auto OscillationBlendOutTime = 0x34; // float
		constexpr auto RotOscillation = 0x38; // FROscillator
		constexpr auto LocOscillation = 0x5c; // FVOscillator
		constexpr auto FOVOscillation = 0x80; // FFOscillator
		constexpr auto AnimPlayRate = 0x8c; // float
		constexpr auto AnimScale = 0x90; // float
		constexpr auto AnimBlendInTime = 0x94; // float
		constexpr auto AnimBlendOutTime = 0x98; // float
		constexpr auto RandomAnimSegmentDuration = 0x9c; // float
		constexpr auto Anim = 0xa0; // UCameraAnim*
		constexpr auto bRandomAnimSegment = 0xa8; // char : 1
		constexpr auto CameraOwner = 0xc0; // APlayerCameraManager*
		constexpr auto ShakeScale = 0x148; // float
		constexpr auto OscillatorTimeRemaining = 0x14c; // float
		constexpr auto AnimInst = 0x150; // UCameraAnimInst*
	}

	namespace n_USQStagingTimerText { // : UUserWidget
		constexpr auto NearZeroThreshold = 0x230; // int
		constexpr auto TeamPrepRef = 0x238; // ASQTeamPrep*
		constexpr auto TextBlockCPP = 0x240; // UTextBlock*
		constexpr auto StagingPhaseText = 0x248; // FText
	}

	namespace n_USQVehicleAmmoBox { // : USQVehicleComponent
		constexpr auto AmmoReduction = 0x588; // FSQAmmoReductionConfig
		constexpr auto DamageToParentWhenBurning = 0x5a8; // int
		constexpr auto SecondsBetweenDamageEvents = 0x5ac; // int
		constexpr auto DamageToParentOnDetonation = 0x5b0; // float
		constexpr auto MinBurningTimeBeforeDetonation = 0x5b4; // float
		constexpr auto MaxBurningTimeBeforeDetonation = 0x5b8; // float
		constexpr auto BaseTimeToDetonation = 0x5bc; // float
		constexpr auto bEnableDetonationByOverdamage = 0x5c0; // bool
		constexpr auto OverdamageForInstantDetonation = 0x5c4; // float
		constexpr auto DetonationDamageType = 0x5c8; // UDamageType*
		constexpr auto BurningDamageType = 0x5d0; // UDamageType*
		constexpr auto TimePercentageLeftForDetonation = 0x5d8; // float
	}

	namespace n_UBlendSpaceBase { // : UAnimationAsset
		constexpr auto bRotationBlendInMeshSpace = 0x88; // bool
		constexpr auto AnimLength = 0x8c; // float
		constexpr auto InterpolationParam = 0x90; // FInterpolationParameter [0x3]
		constexpr auto TargetWeightInterpolationSpeedPerSec = 0xa8; // float
		constexpr auto NotifyTriggerMode = 0xac; // ENotifyTriggerMode
		constexpr auto PerBoneBlend = 0xb0; // TArray<FPerBoneInterpolation>
		constexpr auto SampleIndexWithMarkers = 0xc0; // int
		constexpr auto SampleData = 0xc8; // TArray<FBlendSample>
		constexpr auto GridSamples = 0xd8; // TArray<FEditorElement>
		constexpr auto BlendParameters = 0xe8; // FBlendParameter [0x3]
	}

	namespace n_USQMapWidgetVehicleSeat { // : USQMapWidgetSQPawn
		constexpr auto bIsOwned = 0x2a8; // char : 1
		constexpr auto bIsOwnedBySelf = 0x2a8; // char : 1
		constexpr auto bIsInSelfTeam = 0x2a8; // char : 1
		constexpr auto bIsInSelfSquad = 0x2a8; // char : 1
		constexpr auto FireTeamIndex = 0x2ac; // int
		constexpr auto CameraRotationYaw = 0x2b0; // float
		constexpr auto IsSelfZOrder = 0x2b4; // float
	}

	namespace n_AAbilitySystemDebugHUD { // : AHUD
		constexpr auto PlayerOwner = 0x248; // APlayerController*
		constexpr auto bLostFocusPaused = 0x250; // char : 1
		constexpr auto bShowHUD = 0x250; // char : 1
		constexpr auto bShowDebugInfo = 0x250; // char : 1
		constexpr auto CurrentTargetIndex = 0x254; // int
		constexpr auto bShowHitBoxDebugInfo = 0x258; // char : 1
		constexpr auto bShowOverlays = 0x258; // char : 1
		constexpr auto bEnableDebugTextShadow = 0x258; // char : 1
		constexpr auto PostRenderedActors = 0x260; // TArray<AActor*>
		constexpr auto DebugDisplay = 0x278; // TArray<FName>
		constexpr auto ToggledDebugCategories = 0x288; // TArray<FName>
		constexpr auto Canvas = 0x298; // UCanvas*
		constexpr auto DebugCanvas = 0x2a0; // UCanvas*
		constexpr auto DebugTextList = 0x2a8; // TArray<FDebugTextInfo>
		constexpr auto ShowDebugTargetDesiredClass = 0x2b8; // AActor*
		constexpr auto ShowDebugTargetActor = 0x2c0; // AActor*
	}

	namespace n_ABP_L85A2AG36_DarkEarth_Rifle_C { // : ABP_L85A2_DarkEarth_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_AInteractiveFoliageActor { // : AStaticMeshActor
		constexpr auto CapsuleComponent = 0x258; // UCapsuleComponent*
		constexpr auto TouchingActorEntryPosition = 0x260; // FVector
		constexpr auto FoliageVelocity = 0x26c; // FVector
		constexpr auto FoliageForce = 0x278; // FVector
		constexpr auto FoliagePosition = 0x284; // FVector
		constexpr auto FoliageDamageImpulseScale = 0x290; // float
		constexpr auto FoliageTouchImpulseScale = 0x294; // float
		constexpr auto FoliageStiffness = 0x298; // float
		constexpr auto FoliageStiffnessQuadratic = 0x29c; // float
		constexpr auto FoliageDamping = 0x2a0; // float
		constexpr auto MaxDamageImpulse = 0x2a4; // float
		constexpr auto MaxTouchImpulse = 0x2a8; // float
		constexpr auto MaxForce = 0x2ac; // float
		constexpr auto Mass = 0x2b0; // float
	}

	namespace n_ABP_AKS74U_2mags_Founders_C { // : ABP_AKS74U_2mags_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UInputAxisDelegateBinding { // : UInputDelegateBinding
		constexpr auto InputAxisDelegateBindings = 0x28; // TArray<FBlueprintInputAxisDelegateBinding>
	}

	namespace n_USQUISettings { // : UDeveloperSettings
		constexpr auto Yellow = 0x38; // FColor
		constexpr auto Grey = 0x3c; // FColor
		constexpr auto Other = 0x40; // FColor
		constexpr auto NeutralColor = 0x44; // FLinearColor
		constexpr auto FriendlyColor = 0x54; // FLinearColor
		constexpr auto EnemyColor = 0x64; // FLinearColor
		constexpr auto SquadColor = 0x74; // FLinearColor
	}

	namespace n_UCrowdFollowingComponent { // : UPathFollowingComponent
		constexpr auto CharacterMovement = 0x288; // UCharacterMovementComponent*
		constexpr auto CrowdAgentMoveDirection = 0x290; // FVector
	}

	namespace n_ABP_RPG7V2_Thermo_C { // : ABP_RPG7V2_Parent_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
		constexpr auto MuzzleFlashRearComponent3P = 0x7b8; // UParticleSystemComponent*
		constexpr auto BackBlastComponent3P = 0x7c0; // UChildActorComponent*
		constexpr auto MuzzleFlashRearComponent1P = 0x7c8; // UParticleSystemComponent*
		constexpr auto SquadBlast = 0x7d0; // USQBlastComponent*
		constexpr auto BackBlastComponent1P = 0x7d8; // UChildActorComponent*
		constexpr auto BackblastSocket = 0x7e0; // FName
		constexpr auto BackblastEffect1P = 0x7e8; // UParticleSystem*
		constexpr auto BackblastEffect3P = 0x7f0; // UParticleSystem*
	}

	namespace n_ABP_AK74MGP25_UGL_Desert_Smoke_C { // : ABP_AK74MGP25_UGL_Desert_Parent_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UMultiPackerRuntimeGraph { // : UObject
		constexpr auto RenderTargetSizeOutput = 0x28; // ETextureSizeOutputPersonal
		constexpr auto Alpha = 0x29; // bool
		constexpr auto RuntimeData = 0x30; // UMultiPackerRuntimeBinPack*
		constexpr auto Size = 0x38; // int
		constexpr auto Pages = 0x3c; // int
		constexpr auto MaterialMap = 0x40; // TMap<FName, FMaterialDataBinPack>
		constexpr auto RenderTargetPages = 0x90; // TArray<UTextureRenderTarget2D*>
	}

	namespace n_UParticleModuleLocationBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x29; // char : 1
		constexpr auto LODDuplicate = 0x29; // char : 1
		constexpr auto bSupportsRandomSeed = 0x29; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x29; // char : 1
		constexpr auto LODValidity = 0x2c; // char
	}

	namespace n_USQCoreStateSquadListComponent { // : USQCoreStateWidgetFactory
		constexpr auto SquadWidgetClass = 0x340; // USQCoreStateSquadItemWidget*
		constexpr auto PlayerWidgetClass = 0x348; // USQCoreStateSquadMemberWidget*
		constexpr auto SquadRoot = 0x350; // UPanelWidget*
		constexpr auto UnassignedRoot = 0x358; // UPanelWidget*
		constexpr auto CommanderRoot = 0x360; // UPanelWidget*
		constexpr auto ListLayout = 0x368; // EListLayout
		constexpr auto UnassignedLayout = 0x369; // EListLayout
		constexpr auto ActiveSquadWidgets = 0x370; // TMap<int, USQCoreStateSquadItemWidget*>
	}

	namespace n_UAnimStreamable { // : UAnimSequenceBase
		constexpr auto NumFrames = 0xa8; // int
		constexpr auto Interpolation = 0xac; // EAnimInterpolationType
		constexpr auto RetargetSource = 0xb0; // FName
		constexpr auto CurveCompressionSettings = 0xc8; // UAnimCurveCompressionSettings*
		constexpr auto bEnableRootMotion = 0xd0; // bool
		constexpr auto RootMotionRootLock = 0xd1; // ERootMotionRootLock
		constexpr auto bForceRootLock = 0xd2; // bool
		constexpr auto bUseNormalizedRootMotionScale = 0xd3; // bool
	}

	namespace n_USQSquadStateDataDeployableExplosive { // : USQSquadStateDataDeployable
		constexpr auto ExplosiveType = 0x188; // ESQExplosiveType
	}

	namespace n_UMovieScene3DAttachSection { // : UMovieScene3DConstraintSection
		constexpr auto AttachSocketName = 0x108; // FName
		constexpr auto AttachComponentName = 0x110; // FName
		constexpr auto AttachmentLocationRule = 0x118; // EAttachmentRule
		constexpr auto AttachmentRotationRule = 0x119; // EAttachmentRule
		constexpr auto AttachmentScaleRule = 0x11a; // EAttachmentRule
		constexpr auto DetachmentLocationRule = 0x11b; // EDetachmentRule
		constexpr auto DetachmentRotationRule = 0x11c; // EDetachmentRule
		constexpr auto DetachmentScaleRule = 0x11d; // EDetachmentRule
	}

	namespace n_UInterpTrackFloatBase { // : UInterpTrack
		constexpr auto FloatTrack = 0x70; // FInterpCurveFloat
		constexpr auto CurveTension = 0x88; // float
	}

	namespace n_ASQUndirectedGraph { // : AActor
		constexpr auto Root = 0x248; // USceneComponent*
		constexpr auto OnLatticeUpdated = 0x250; // FScriptMulticastDelegate
		constexpr auto Nodes = 0x260; // TArray<USQGraphNodeComponent*>
		constexpr auto Links = 0x270; // TArray<FSQGraphLink>
	}

	namespace n_USquadVoiceOutput { // : USoundWave
		constexpr auto CompressionQuality = 0x110; // int
		constexpr auto StreamingPriority = 0x114; // int
		constexpr auto SampleRateQuality = 0x118; // ESoundwaveSampleRateSettings
		constexpr auto SoundGroup = 0x11a; // ESoundGroup
		constexpr auto bLooping = 0x11b; // char : 1
		constexpr auto bStreaming = 0x11b; // char : 1
		constexpr auto bSeekableStreaming = 0x11b; // char : 1
		constexpr auto bMature = 0x11c; // char : 1
		constexpr auto bManualWordWrap = 0x11c; // char : 1
		constexpr auto bSingleLine = 0x11c; // char : 1
		constexpr auto bIsAmbisonics = 0x11c; // char : 1
		constexpr auto FrequenciesToAnalyze = 0x120; // TArray<float>
		constexpr auto CookedSpectralTimeData = 0x130; // TArray<FSoundWaveSpectralTimeData>
		constexpr auto CookedEnvelopeTimeData = 0x140; // TArray<FSoundWaveEnvelopeTimeData>
		constexpr auto SpokenText = 0x160; // FString
		constexpr auto SubtitlePriority = 0x170; // float
		constexpr auto Volume = 0x174; // float
		constexpr auto Pitch = 0x178; // float
		constexpr auto NumChannels = 0x17c; // int
		constexpr auto SampleRate = 0x180; // int
		constexpr auto Subtitles = 0x188; // TArray<FSubtitleCue>
		constexpr auto Curves = 0x198; // UCurveTable*
		constexpr auto InternalCurves = 0x1a0; // UCurveTable*
	}

	namespace n_UVariant { // : UObject
		constexpr auto DisplayText = 0x28; // FText
		constexpr auto ObjectBindings = 0x58; // TArray<UVariantObjectBinding*>
	}

	namespace n_USQCoreStateSelectionHUB { // : UActorComponent
		constexpr auto PrimaryComponentTick = 0x30; // FActorComponentTickFunction
		constexpr auto ComponentTags = 0x88; // TArray<FName>
		constexpr auto AssetUserData = 0x98; // TArray<UAssetUserData*>
		constexpr auto bReplicates = 0xac; // char : 1
		constexpr auto bNetAddressable = 0xac; // char : 1
		constexpr auto bAutoActivate = 0xad; // char : 1
		constexpr auto bIsActive = 0xae; // char : 1
		constexpr auto bEditableWhenInherited = 0xae; // char : 1
		constexpr auto bCanEverAffectNavigation = 0xae; // char : 1
		constexpr auto bIsEditorOnly = 0xae; // char : 1
		constexpr auto CreationMethod = 0xb0; // EComponentCreationMethod
		constexpr auto OnComponentActivated = 0xb1; // FScriptMulticastDelegate
		constexpr auto OnComponentDeactivated = 0xb2; // FScriptMulticastDelegate
		constexpr auto UCSModifiedProperties = 0xb8; // TArray<FSimpleMemberReference>
	}

	namespace n_UMovieSceneSlomoSection { // : UMovieSceneFloatSection
		constexpr auto FloatCurve = 0xe0; // FMovieSceneFloatChannel
	}

	namespace n_UQosEvaluator { // : UObject
		constexpr auto bInProgress = 0x48; // bool
		constexpr auto bCancelOperation = 0x49; // bool
		constexpr auto Datacenters = 0x50; // TArray<FDatacenterQosInstance>
	}

	namespace n_ASQMedicBag { // : ASQHealingEquipableItem
		constexpr auto MedicBagStaticInfo = 0x528; // USQMedicBagStaticInfo*
		constexpr auto TimerHandle = 0x530; // FTimerHandle
	}

	namespace n_UVolumeTexture { // : UTexture
		constexpr auto LightingGuid = 0x48; // FGuid
		constexpr auto LODBias = 0x58; // int
		constexpr auto CompressionSettings = 0x5c; // TextureCompressionSettings
		constexpr auto Filter = 0x5d; // TextureFilter
		constexpr auto MipLoadOptions = 0x5e; // ETextureMipLoadOptions
		constexpr auto LODGroup = 0x5f; // TextureGroup
		constexpr auto SRGB = 0x60; // char : 1
		constexpr auto bNoTiling = 0x60; // char : 1
		constexpr auto VirtualTextureStreaming = 0x60; // char : 1
		constexpr auto bAsyncResourceReleaseHasBeenStarted = 0x60; // char : 1
		constexpr auto AssetUserData = 0x68; // TArray<UAssetUserData*>
	}

	namespace n_UCameraAnimInst { // : UObject
		constexpr auto CamAnim = 0x28; // UCameraAnim*
		constexpr auto InterpGroupInst = 0x30; // UInterpGroupInst*
		constexpr auto PlayRate = 0x50; // float
		constexpr auto MoveTrack = 0x68; // UInterpTrackMove*
		constexpr auto MoveInst = 0x70; // UInterpTrackInstMove*
		constexpr auto PlaySpace = 0x78; // ECameraAnimPlaySpace
	}

	namespace n_AMeshMergeCullingVolume { // : AVolume
		constexpr auto BrushType = 0x248; // EBrushType
		constexpr auto BrushColor = 0x24c; // FColor
		constexpr auto PolyFlags = 0x250; // int
		constexpr auto bColored = 0x254; // char : 1
		constexpr auto bSolidWhenSelected = 0x254; // char : 1
		constexpr auto bPlaceableFromClassBrowser = 0x254; // char : 1
		constexpr auto bNotForClientOrServer = 0x254; // char : 1
		constexpr auto Brush = 0x258; // UModel*
		constexpr auto BrushComponent = 0x260; // UBrushComponent*
		constexpr auto bInManipulation = 0x268; // char : 1
		constexpr auto SavedSelections = 0x270; // TArray<FGeomSelection>
	}

	namespace n_USQSquadSelection { // : USQUserWidget
		constexpr auto OwnerPlayerController = 0x230; // ASQPlayerController*
		constexpr auto CreateSquadCanvas = 0x238; // UCanvasPanel*
		constexpr auto CreateSquadButton = 0x240; // USQCreateSquadButton*
		constexpr auto SquadNameTextBox = 0x248; // UEditableTextBox*
		constexpr auto SquadsList = 0x250; // UScrollBox*
		constexpr auto OnNewSquadCreated = 0x258; // FScriptMulticastDelegate
	}

	namespace n_USQAmmoWidget { // : USQUserWidget
		constexpr auto MagazineGroupWidgets = 0x230; // TArray<USQMagazineGroupWidget*>
		constexpr auto HighestLevelCanvas = 0x240; // UCanvasPanel*
		constexpr auto FiremodeTextBlock = 0x248; // UTextBlock*
		constexpr auto AmmoCountTextBlock = 0x250; // UTextBlock*
		constexpr auto ZeroingTextBlock = 0x258; // UTextBlock*
		constexpr auto RoundInChamberImage = 0x260; // UImage*
		constexpr auto bShowFireSelectorInfo = 0x268; // bool
		constexpr auto bShowAmmoInMag = 0x269; // bool
		constexpr auto PlayerController = 0x270; // ASQPlayerController*
		constexpr auto PlayerState = 0x278; // ASQPlayerState*
		constexpr auto RefillableMagazineColor = 0x280; // FLinearColor
		constexpr auto FullMagazineColor = 0x290; // FLinearColor
		constexpr auto NearlyFullMagazineColor = 0x2a0; // FLinearColor
		constexpr auto HalfMagazineColor = 0x2b0; // FLinearColor
		constexpr auto EmptyMagazineColor = 0x2c0; // FLinearColor
		constexpr auto FireModeAutoText = 0x2d0; // FText
		constexpr auto SightRangeText = 0x2e8; // FText
		constexpr auto FireModeSingleText = 0x300; // FText
		constexpr auto FireModeBurstText = 0x318; // FText
		constexpr auto CachedCurrentWeapon = 0x330; // ASQEquipableItem*
	}

	namespace n_UMaterialExpressionScreenPosition { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UAnimSharingAdditiveInstance { // : UAnimInstance
		constexpr auto BaseComponent = 0x268; // TWeakObjectPtr<USkeletalMeshComponent>
		constexpr auto AdditiveAnimation = 0x270; // TWeakObjectPtr<UAnimSequence>
		constexpr auto Alpha = 0x278; // float
		constexpr auto bStateBool = 0x27c; // bool
	}

	namespace n_ABP_RPG7_Tandem_C { // : ABP_RPG7_Parent_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
		constexpr auto MuzzleFlashRearComponent3P = 0x7b8; // UParticleSystemComponent*
		constexpr auto BackBlastComponent3P = 0x7c0; // UChildActorComponent*
		constexpr auto MuzzleFlashRearComponent1P = 0x7c8; // UParticleSystemComponent*
		constexpr auto SquadBlast = 0x7d0; // USQBlastComponent*
		constexpr auto BackBlastComponent1P = 0x7d8; // UChildActorComponent*
		constexpr auto BackblastSocket = 0x7e0; // FName
		constexpr auto BackblastEffect1P = 0x7e8; // UParticleSystem*
		constexpr auto BackblastEffect3P = 0x7f0; // UParticleSystem*
	}

	namespace n_USQSquadStateDataRallyPoint { // : USQSquadStateDataSpawnPoint
		constexpr auto NumberOfSpawns = 0x198; // int
	}

	namespace n_UBP_Attachment_AK74M_Front_Desert_C { // : UBP_Attachment_AK74M_Front_C
		constexpr auto MeshTransitionPercentage = 0x4b0; // float
		constexpr auto ADSMesh = 0x4b8; // UStaticMesh*
		constexpr auto ADSMeshTransform = 0x4c0; // FTransform
		constexpr auto NonADSMesh = 0x4f0; // UStaticMesh*
		constexpr auto NonADSMeshTransform = 0x500; // FTransform
		constexpr auto InToADSMeshTransitionSettings = 0x530; // TArray<FSQMeshTransitionSettings>
		constexpr auto OutFromADSMeshTransitionSettings = 0x540; // TArray<FSQMeshTransitionSettings>
	}

	namespace n_UMaterialExpressionEyeAdaptation { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_APostProcessVolume { // : AVolume
		constexpr auto Settings = 0x290; // FPostProcessSettings
		constexpr auto Priority = 0x7c0; // float
		constexpr auto BlendRadius = 0x7c4; // float
		constexpr auto BlendWeight = 0x7c8; // float
		constexpr auto bEnabled = 0x7cc; // char : 1
		constexpr auto bUnbound = 0x7cc; // char : 1
	}

	namespace n_UOverlay { // : UPanelWidget
		constexpr auto Slots = 0x108; // TArray<UPanelSlot*>
	}

	namespace n_UMaterialExpressionObjectBounds { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_ASQDestroyedVehicle { // : AActor
		constexpr auto VehicleMesh = 0x248; // UStaticMeshComponent*
		constexpr auto bIsSimulatingInEditor = 0x250; // bool
		constexpr auto bSimulatePhysics = 0x251; // bool
		constexpr auto bPlayEffectsWhenReady = 0x252; // bool
		constexpr auto TemperatureLastingEffect = 0x258; // ASQLastingEffect*
		constexpr auto TemperatureLastingEffectAttachSocket = 0x260; // FName
		constexpr auto TemperatureLastingEffectLifetime = 0x268; // float
		constexpr auto MinReplicationTime = 0x26c; // float
		constexpr auto OriginalVehicle = 0x278; // ASQVehicle*
		constexpr auto DeathDamageType = 0x280; // UDamageType*
		constexpr auto DeathEffectConfig = 0x288; // TArray<FSQVehicleDestroyEffectConfig>
		constexpr auto DestroyedEffectsSocket = 0x298; // FName
		constexpr auto DestroyedParticleEffect = 0x2a0; // UParticleSystem*
		constexpr auto DestroyedShockwaveEffect = 0x2a8; // USQShockwave*
		constexpr auto DestroyedSound = 0x2b0; // USoundCue*
		constexpr auto DestroyedDebrisSound = 0x2b8; // USoundCue*
		constexpr auto AllowableDamageTypes = 0x2c0; // TArray<FSQDamageModifier>
		constexpr auto Health = 0x2d0; // float
		constexpr auto MaxHealth = 0x2d4; // float
		constexpr auto LastDamageTypeClass = 0x2d8; // UDamageType*
		constexpr auto LastDamageInstigator = 0x2e0; // AController*
		constexpr auto DefaultEffectsClass = 0x2e8; // USQPhysicalMaterialEffects*
		constexpr auto InitialVelocity = 0x2f0; // FVector
		constexpr auto InitialAngularVelocity = 0x2fc; // FVector
		constexpr auto LifespanInProtectionZone = 0x308; // float
	}

	namespace n_UOnlineSessionClient { // : UOnlineSession
		constexpr auto bIsFromInvite = 0x188; // bool
		constexpr auto bHandlingDisconnect = 0x189; // bool
	}

	namespace n_UArrowComponent { // : UPrimitiveComponent
		constexpr auto ArrowColor = 0x408; // FColor
		constexpr auto ArrowSize = 0x40c; // float
		constexpr auto bIsScreenSizeScaled = 0x410; // bool
		constexpr auto ScreenSize = 0x414; // float
		constexpr auto bTreatAsASprite = 0x418; // char : 1
	}

	namespace n_UAIResource_Movement { // : UGameplayTaskResource
		constexpr auto ManualResourceID = 0x28; // int
		constexpr auto AutoResourceID = 0x2c; // uint8
		constexpr auto bManuallySetID = 0x30; // char : 1
	}

	namespace n_UMaterialExpressionBreakMaterialAttributes { // : UMaterialExpression
		constexpr auto MaterialAttributes = 0x40; // FMaterialAttributesInput
	}

	namespace n_USQVehicleUIStaticDataAsset { // : UDataAsset
		constexpr auto MapIcon = 0x30; // UTexture2D*
		constexpr auto MapIconRotation = 0x38; // float
		constexpr auto SideImage = 0x40; // UTexture2D*
		constexpr auto FrontImage = 0x48; // UTexture2D*
	}

	namespace n_ASQSquadStatePrivateToTeam { // : AInfo
		constexpr auto AuthoritySquad = 0x250; // ASQSquad*
		constexpr auto PrivateTeamState = 0x258; // ASQTeamStatePrivate*
		constexpr auto SquadState = 0x260; // ASQSquadState*
	}

	namespace n_UBP_AK74_StaticInfo_C { // : UBP_GenericWeapon_StaticInfo_C
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_UParticleModuleOrbit { // : UParticleModuleOrbitBase
		constexpr auto ChainMode = 0x38; // EOrbitChainMode
		constexpr auto OffsetAmount = 0x40; // FRawDistributionVector
		constexpr auto OffsetOptions = 0x90; // FOrbitOptions
		constexpr auto RotationAmount = 0x98; // FRawDistributionVector
		constexpr auto RotationOptions = 0xe8; // FOrbitOptions
		constexpr auto RotationRateAmount = 0xf0; // FRawDistributionVector
		constexpr auto RotationRateOptions = 0x140; // FOrbitOptions
	}

	namespace n_UPropertyValueTransform { // : UPropertyValue
		constexpr auto properties = 0x80; // TArray<UProperty*>
		constexpr auto PropertyIndices = 0x90; // TArray<int>
		constexpr auto CapturedPropSegments = 0xa0; // TArray<FCapturedPropSegment>
		constexpr auto FullDisplayString = 0xb0; // FString
		constexpr auto PropertySetterName = 0xc0; // FName
		constexpr auto PropertySetterParameterDefaults = 0xc8; // TMap<FString, FString>
		constexpr auto bHasRecordedData = 0x118; // bool
		constexpr auto LeafPropertyClass = 0x120; // UObject*
		constexpr auto ValueBytes = 0x128; // TArray<char>
		constexpr auto PropCategory = 0x138; // EPropertyValueCategory
	}

	namespace n_USQSquadStateDataForwardBase { // : USQSquadStateDataDeployable
		constexpr auto bCanSpawn = 0x188; // char : 1
		constexpr auto bSieged = 0x188; // char : 1
		constexpr auto bIsBleeding = 0x188; // char : 1
		constexpr auto MinActivatedTimeStamp = 0x18c; // float
		constexpr auto ExclusionRadius = 0x190; // float
		constexpr auto ConstructionRadius = 0x194; // float
		constexpr auto AmmoPoints = 0x198; // float
		constexpr auto ConstructionPoints = 0x19c; // float
	}

	namespace n_UMaterialExpressionArccosineFast { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UParticleModuleKillBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x29; // char : 1
		constexpr auto LODDuplicate = 0x29; // char : 1
		constexpr auto bSupportsRandomSeed = 0x29; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x29; // char : 1
		constexpr auto LODValidity = 0x2c; // char
	}

	namespace n_ALobbyBeaconClient { // : AOnlineBeaconClient
		constexpr auto LobbyState = 0x2c8; // ALobbyBeaconState*
		constexpr auto PlayerState = 0x2d0; // ALobbyBeaconPlayerState*
		constexpr auto LobbyJoinServerState = 0x2d9; // ELobbyBeaconJoinState
	}

	namespace n_UBTTask_BlueprintBase { // : UBTTaskNode
		constexpr auto AIOwner = 0x70; // AAIController*
		constexpr auto ActorOwner = 0x78; // AActor*
		constexpr auto bShowPropertyDetails = 0x98; // char : 1
	}

	namespace n_UParticleModuleLocationWorldOffset_Seeded { // : UParticleModuleLocationWorldOffset
		constexpr auto RandomSeedInfo = 0x88; // FParticleRandomSeedInfo
	}

	namespace n_UChaosDestructionListener { // : USceneComponent
		constexpr auto bIsCollisionEventListeningEnabled = 0x218; // char : 1
		constexpr auto bIsBreakingEventListeningEnabled = 0x218; // char : 1
		constexpr auto bIsTrailingEventListeningEnabled = 0x218; // char : 1
		constexpr auto CollisionEventRequestSettings = 0x21c; // FChaosCollisionEventRequestSettings
		constexpr auto BreakingEventRequestSettings = 0x234; // FChaosBreakingEventRequestSettings
		constexpr auto TrailingEventRequestSettings = 0x24c; // FChaosTrailingEventRequestSettings
		constexpr auto ChaosSolverActors = 0x268; // TSet<AChaosSolverActor*>
		constexpr auto GeometryCollectionActors = 0x2b8; // TSet<AGeometryCollectionActor*>
		constexpr auto OnCollisionEvents = 0x308; // FScriptMulticastDelegate
		constexpr auto OnBreakingEvents = 0x318; // FScriptMulticastDelegate
		constexpr auto OnTrailingEvents = 0x328; // FScriptMulticastDelegate
	}

	namespace n_USQEditorPlaySettings { // : UDeveloperSettings
		constexpr auto DefaultPawnClassOverride = 0x38; // UClass*
		constexpr auto DefaultWeaponClassOverride = 0x60; // UClass*
		constexpr auto LayerEditorOverride = 0x88; // USQLayer*
		constexpr auto PreventDataLoading = 0xb0; // bool
		constexpr auto EditorServerSettings = 0xb8; // FSQServerSettings
		constexpr auto EditorIgnoreStartupTime = 0x290; // bool
		constexpr auto RaasDefaultSeed = 0x294; // int
		constexpr auto StartTeamOverride = 0x298; // int
		constexpr auto ForceDirectSpawn = 0x29c; // bool
		constexpr auto CanDriverSwitchTo3rdPerson = 0x29d; // bool
		constexpr auto DeployablePlacementAlwaysValid = 0x29e; // bool
		constexpr auto ForceOutOfBoundsKillDisabled = 0x29f; // bool
		constexpr auto ForcePlayerNotAdminInEditor = 0x2a0; // bool
		constexpr auto ForcePlayerNotDevInEditor = 0x2a1; // bool
		constexpr auto ForcePlayerNotQAInEditor = 0x2a2; // bool
		constexpr auto ForcePlayerNotMemberInEditor = 0x2a3; // bool
		constexpr auto EditorActiveLayer = 0x2a8; // USQLayer*
		constexpr auto EditorActiveLevel = 0x2b0; // USQLevel*
		constexpr auto AvailableLevels = 0x2b8; // TMap<FName, USQLevel*>
		constexpr auto AvailableLayers = 0x308; // TMap<FName, USQLayer*>
		constexpr auto AvailableFactions = 0x358; // TMap<FName, USQFaction*>
		constexpr auto AvailableFactionSetups = 0x3a8; // TMap<FName, USQFactionSetup*>
	}

	namespace n_ASQVehicleTurretClosedTop { // : ASQVehicleTurret
		constexpr auto bCanStabilize = 0x3c8; // bool
		constexpr auto StabilizationToggleSound = 0x3d0; // USoundBase*
		constexpr auto GunLineOfSightSeatIndex = 0x3d8; // int
		constexpr auto TurretOverlay = 0x3e0; // USQVehicleViewWidget*
		constexpr auto CurrentZoom = 0x3e8; // int
		constexpr auto ZoomLevels = 0x3f0; // TArray<float>
		constexpr auto ZoomToggleSound = 0x400; // USoundBase*
		constexpr auto ZoomToggleSoundPitch = 0x408; // float
	}

	namespace n_UFindTurnBasedMatchCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto OnFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_UInterpTrackBoolProp { // : UInterpTrack
		constexpr auto BoolTrack = 0x70; // TArray<FBoolTrackKey>
		constexpr auto PropertyName = 0x80; // FName
	}

	namespace n_UWidgetBinding { // : UPropertyBinding
		constexpr auto SourceObject = 0x28; // TWeakObjectPtr<UObject>
		constexpr auto SourcePath = 0x30; // FDynamicPropertyPath
		constexpr auto DestinationProperty = 0x60; // FName
	}

	namespace n_ALandscape { // : ALandscapeProxy
		constexpr auto SplineComponent = 0x248; // ULandscapeSplinesComponent*
		constexpr auto LandscapeGuid = 0x250; // FGuid
		constexpr auto LandscapeSectionOffset = 0x260; // FIntPoint
		constexpr auto MaxLODLevel = 0x268; // int
		constexpr auto LODDistanceFactor = 0x26c; // float
		constexpr auto LODFalloff = 0x270; // ELandscapeLODFalloff
		constexpr auto ComponentScreenSizeToUseSubSections = 0x274; // float
		constexpr auto LOD0ScreenSize = 0x278; // float
		constexpr auto LOD0DistributionSetting = 0x27c; // float
		constexpr auto LODDistributionSetting = 0x280; // float
		constexpr auto TessellationComponentScreenSize = 0x284; // float
		constexpr auto UseTessellationComponentScreenSizeFalloff = 0x288; // bool
		constexpr auto TessellationComponentScreenSizeFalloff = 0x28c; // float
		constexpr auto OccluderGeometryLOD = 0x290; // int
		constexpr auto StaticLightingLOD = 0x294; // int
		constexpr auto DefaultPhysMaterial = 0x298; // UPhysicalMaterial*
		constexpr auto StreamingDistanceMultiplier = 0x2a0; // float
		constexpr auto LandscapeMaterial = 0x2a8; // UMaterialInterface*
		constexpr auto LandscapeHoleMaterial = 0x2b0; // UMaterialInterface*
		constexpr auto LandscapeMaterialsOverride = 0x2b8; // TArray<FLandscapeProxyMaterialOverride>
		constexpr auto RuntimeVirtualTextures = 0x2c8; // TArray<URuntimeVirtualTexture*>
		constexpr auto VirtualTextureNumLods = 0x2d8; // int
		constexpr auto VirtualTextureLodBias = 0x2dc; // int
		constexpr auto VirtualTextureRenderPassType = 0x2e0; // ERuntimeVirtualTextureMainPassType
		constexpr auto NegativeZBoundsExtension = 0x2e4; // float
		constexpr auto PositiveZBoundsExtension = 0x2e8; // float
		constexpr auto LandscapeComponents = 0x2f0; // TArray<ULandscapeComponent*>
		constexpr auto CollisionComponents = 0x300; // TArray<ULandscapeHeightfieldCollisionComponent*>
		constexpr auto FoliageComponents = 0x310; // TArray<UHierarchicalInstancedStaticMeshComponent*>
		constexpr auto bHasLandscapeGrass = 0x384; // bool
		constexpr auto StaticLightingResolution = 0x388; // float
		constexpr auto bCastStaticShadow = 0x38c; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x38c; // char : 1
		constexpr auto bCastFarShadow = 0x38c; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x390; // char : 1
		constexpr auto LightingChannels = 0x391; // FLightingChannels
		constexpr auto bUseMaterialPositionOffsetInStaticLighting = 0x394; // char : 1
		constexpr auto bRenderCustomDepth = 0x394; // char : 1
		constexpr auto CustomDepthStencilValue = 0x398; // int
		constexpr auto LDMaxDrawDistance = 0x39c; // float
		constexpr auto LightmassSettings = 0x3a0; // FLightmassPrimitiveSettings
		constexpr auto CollisionMipLevel = 0x3b8; // int
		constexpr auto SimpleCollisionMipLevel = 0x3bc; // int
		constexpr auto CollisionThickness = 0x3c0; // float
		constexpr auto BodyInstance = 0x3c8; // FBodyInstance
		constexpr auto bGenerateOverlapEvents = 0x4d8; // char : 1
		constexpr auto bBakeMaterialPositionOffsetIntoCollision = 0x4d8; // char : 1
		constexpr auto ComponentSizeQuads = 0x4dc; // int
		constexpr auto SubsectionSizeQuads = 0x4e0; // int
		constexpr auto NumSubsections = 0x4e4; // int
		constexpr auto bUsedForNavigation = 0x4e8; // char : 1
		constexpr auto bUseDynamicMaterialInstance = 0x4ec; // bool
		constexpr auto NavigationGeometryGatheringMode = 0x4ed; // ENavDataGatheringMode
		constexpr auto bUseLandscapeForCullingInvisibleHLODVertices = 0x4ee; // bool
		constexpr auto bHasLayersContent = 0x4ef; // bool
		constexpr auto WeightmapUsageMap = 0x4f0; // TMap<UTexture2D*, ULandscapeWeightmapUsage*>
	}

	namespace n_UScrollBar { // : UWidget
		constexpr auto WidgetStyle = 0x108; // FScrollBarStyle
		constexpr auto Style = 0x5d8; // USlateWidgetStyleAsset*
		constexpr auto bAlwaysShowScrollbar = 0x5e0; // bool
		constexpr auto bAlwaysShowScrollbarTrack = 0x5e1; // bool
		constexpr auto Orientation = 0x5e2; // EOrientation
		constexpr auto Thickness = 0x5e4; // FVector2D
		constexpr auto Padding = 0x5ec; // FMargin
	}

	namespace n_UFieldSystemComponent { // : UPrimitiveComponent
		constexpr auto FieldSystem = 0x408; // UFieldSystem*
		constexpr auto SupportedSolvers = 0x420; // TArray<AChaosSolverActor*>
	}

	namespace n_UBP_attachment_ANPEQ-15_C { // : USQWeaponAttachment_Scope
		constexpr auto MeshTransitionPercentage = 0x4b0; // float
		constexpr auto ADSMesh = 0x4b8; // UStaticMesh*
		constexpr auto ADSMeshTransform = 0x4c0; // FTransform
		constexpr auto NonADSMesh = 0x4f0; // UStaticMesh*
		constexpr auto NonADSMeshTransform = 0x500; // FTransform
		constexpr auto InToADSMeshTransitionSettings = 0x530; // TArray<FSQMeshTransitionSettings>
		constexpr auto OutFromADSMeshTransitionSettings = 0x540; // TArray<FSQMeshTransitionSettings>
	}

	namespace n_USoundNode { // : UObject
		constexpr auto ChildNodes = 0x28; // TArray<USoundNode*>
	}

	namespace n_UMaterialExpressionArctangent { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UMovieSceneEnumSection { // : UMovieSceneSection
		constexpr auto EnumCurve = 0xe0; // FMovieSceneByteChannel
	}

	namespace n_ALobbyBeaconHost { // : AOnlineBeaconHostObject
		constexpr auto LobbyStateClass = 0x278; // UClass*
		constexpr auto LobbyState = 0x2a0; // ALobbyBeaconState*
	}

	namespace n_UDistributionVectorParameterBase { // : UDistributionVectorConstant
		constexpr auto ParameterName = 0x50; // FName
		constexpr auto MinInput = 0x58; // FVector
		constexpr auto MaxInput = 0x64; // FVector
		constexpr auto MinOutput = 0x70; // FVector
		constexpr auto MaxOutput = 0x7c; // FVector
		constexpr auto ParamModes = 0x88; // DistributionParamMode [0x3]
	}

	namespace n_UTireType { // : UDataAsset
		constexpr auto FrictionScale = 0x30; // float
	}

	namespace n_UMaterialExpressionRotator { // : UMaterialExpression
		constexpr auto Coordinate = 0x40; // FExpressionInput
		constexpr auto Time = 0x54; // FExpressionInput
		constexpr auto CenterX = 0x68; // float
		constexpr auto CenterY = 0x6c; // float
		constexpr auto Speed = 0x70; // float
		constexpr auto ConstCoordinate = 0x74; // uint32
	}

	namespace n_USQSettings { // : UDataAsset
		constexpr auto ID = 0x30; // FName
		constexpr auto Data = 0x38; // FDataTableRowHandle
		constexpr auto ModId = 0x48; // FString
	}

	namespace n_USoundNodeModulatorContinuous { // : USoundNode
		constexpr auto PitchModulationParams = 0x40; // FModulatorContinuousParams
		constexpr auto VolumeModulationParams = 0x60; // FModulatorContinuousParams
	}

	namespace n_UParticleModuleVelocity { // : UParticleModuleVelocityBase
		constexpr auto StartVelocity = 0x38; // FRawDistributionVector
		constexpr auto StartVelocityRadial = 0x88; // FRawDistributionFloat
	}

	namespace n_USQRestriction { // : USQSettings
		constexpr auto ID = 0x30; // FName
		constexpr auto Data = 0x38; // FDataTableRowHandle
		constexpr auto ModId = 0x48; // FString
	}

	namespace n_UNavLinkRenderingComponent { // : UPrimitiveComponent
		constexpr auto MinDrawDistance = 0x220; // float
		constexpr auto LDMaxDrawDistance = 0x224; // float
		constexpr auto CachedMaxDrawDistance = 0x228; // float
		constexpr auto DepthPriorityGroup = 0x22c; // ESceneDepthPriorityGroup
		constexpr auto ViewOwnerDepthPriorityGroup = 0x22d; // ESceneDepthPriorityGroup
		constexpr auto IndirectLightingCacheQuality = 0x22e; // EIndirectLightingCacheQuality
		constexpr auto LightmapType = 0x22f; // ELightmapType
		constexpr auto bUseMaxLODAsImposter = 0x230; // char : 1
		constexpr auto bNeverDistanceCull = 0x230; // char : 1
		constexpr auto bAlwaysCreatePhysicsState = 0x230; // char : 1
		constexpr auto bGenerateOverlapEvents = 0x230; // char : 1
		constexpr auto bGenerateLocalOverlapEvents = 0x231; // char : 1
		constexpr auto bMultiBodyOverlap = 0x231; // char : 1
		constexpr auto bTraceComplexOnMove = 0x231; // char : 1
		constexpr auto bReturnMaterialOnMove = 0x231; // char : 1
		constexpr auto bUseViewOwnerDepthPriorityGroup = 0x231; // char : 1
		constexpr auto bAllowCullDistanceVolume = 0x231; // char : 1
		constexpr auto bHasMotionBlurVelocityMeshes = 0x231; // char : 1
		constexpr auto bVisibleInReflectionCaptures = 0x232; // char : 1
		constexpr auto bVisibleInRayTracing = 0x232; // char : 1
		constexpr auto bRenderInMainPass = 0x232; // char : 1
		constexpr auto bReceivesDecals = 0x232; // char : 1
		constexpr auto bOwnerNoSee = 0x232; // char : 1
		constexpr auto bOnlyOwnerSee = 0x232; // char : 1
		constexpr auto bTreatAsBackgroundForOcclusion = 0x232; // char : 1
		constexpr auto bUseAsOccluder = 0x232; // char : 1
		constexpr auto bSelectable = 0x233; // char : 1
		constexpr auto bForceMipStreaming = 0x233; // char : 1
		constexpr auto bHasPerInstanceHitProxies = 0x233; // char : 1
		constexpr auto CastShadow = 0x233; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x233; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x233; // char : 1
		constexpr auto bCastDynamicShadow = 0x233; // char : 1
		constexpr auto bCastStaticShadow = 0x233; // char : 1
		constexpr auto bCastVolumetricTranslucentShadow = 0x234; // char : 1
		constexpr auto bSelfShadowOnly = 0x234; // char : 1
		constexpr auto bCastFarShadow = 0x234; // char : 1
		constexpr auto bCastInsetShadow = 0x234; // char : 1
		constexpr auto bCastCinematicShadow = 0x234; // char : 1
		constexpr auto bCastHiddenShadow = 0x234; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x234; // char : 1
		constexpr auto bLightAsIfStatic = 0x234; // char : 1
		constexpr auto bLightAttachmentsAsGroup = 0x235; // char : 1
		constexpr auto bReceiveMobileCSMShadows = 0x235; // char : 1
		constexpr auto bSingleSampleShadowFromStationaryLights = 0x235; // char : 1
		constexpr auto bIgnoreRadialImpulse = 0x235; // char : 1
		constexpr auto bIgnoreRadialForce = 0x235; // char : 1
		constexpr auto bApplyImpulseOnDamage = 0x235; // char : 1
		constexpr auto bReplicatePhysicsToAutonomousProxy = 0x235; // char : 1
		constexpr auto AlwaysLoadOnClient = 0x235; // char : 1
		constexpr auto AlwaysLoadOnServer = 0x236; // char : 1
		constexpr auto bUseEditorCompositing = 0x236; // char : 1
		constexpr auto bRenderCustomDepth = 0x236; // char : 1
		constexpr auto bHasCustomNavigableGeometry = 0x237; // EHasCustomNavigableGeometry
		constexpr auto CanCharacterStepUpOn = 0x239; // ECanBeCharacterBase
		constexpr auto LightingChannels = 0x23a; // FLightingChannels
		constexpr auto CustomDepthStencilWriteMask = 0x23b; // ERendererStencilMask
		constexpr auto CustomDepthStencilValue = 0x23c; // int
		constexpr auto CustomPrimitiveData = 0x240; // FCustomPrimitiveData
		constexpr auto TranslucencySortPriority = 0x250; // int
		constexpr auto VisibilityId = 0x254; // int
		constexpr auto RuntimeVirtualTextures = 0x258; // TArray<URuntimeVirtualTexture*>
		constexpr auto VirtualTextureLodBias = 0x268; // int
		constexpr auto VirtualTextureCullMips = 0x26c; // int
		constexpr auto VirtualTextureMinCoverage = 0x270; // int
		constexpr auto VirtualTextureRenderPassType = 0x274; // ERuntimeVirtualTextureMainPassType
		constexpr auto LpvBiasMultiplier = 0x27c; // float
		constexpr auto BoundsScale = 0x288; // float
		constexpr auto MoveIgnoreActors = 0x298; // TArray<AActor*>
		constexpr auto MoveIgnoreComponents = 0x2a8; // TArray<UPrimitiveComponent*>
		constexpr auto BodyInstance = 0x2c8; // FBodyInstance
		constexpr auto OnComponentHit = 0x3d8; // FScriptMulticastDelegate
		constexpr auto OnComponentBeginOverlap = 0x3d9; // FScriptMulticastDelegate
		constexpr auto OnComponentEndOverlap = 0x3da; // FScriptMulticastDelegate
		constexpr auto OnComponentWake = 0x3db; // FScriptMulticastDelegate
		constexpr auto OnComponentSleep = 0x3dc; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x3de; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x3df; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x3e0; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x3e1; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x3e2; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x3e3; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x3e4; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x3e5; // FScriptMulticastDelegate
		constexpr auto LODParentPrimitive = 0x400; // UPrimitiveComponent*
	}

	namespace n_USQMapIconWidget { // : UUserWidget
		constexpr auto RefItem = 0x230; // USQMapItemComponent*
		constexpr auto MapZOrder = 0x238; // int
		constexpr auto TooltipType = 0x240; // USQToolTipBaseWidget*
		constexpr auto ParentMap = 0x248; // USQMap*
	}

	namespace n_UHighlightsConfigureAsync { // : UBlueprintAsyncActionBase
		constexpr auto OnSuccess = 0x30; // FScriptMulticastDelegate
		constexpr auto OnFailure = 0x40; // FScriptMulticastDelegate
	}

	namespace n_USQMapWidgetMapMarkerWaypoint { // : USQMapWidgetMapMarkerSelectable
		constexpr auto MapIcon = 0x2c8; // USQMapIconComponent*
	}

	namespace n_UMovieSceneLevelVisibilitySection { // : UMovieSceneSection
		constexpr auto Visibility = 0xe0; // ELevelVisibility
		constexpr auto LevelNames = 0xe8; // TArray<FName>
	}

	namespace n_UDestroySessionCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto OnFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_UMovieSceneParticleTrack { // : UMovieSceneNameableTrack
		constexpr auto ParticleSections = 0x58; // TArray<UMovieSceneSection*>
	}

	namespace n_UBP_Attachment_M150_Blur_C { // : USQWeaponAttachment_Scope
		constexpr auto MeshTransitionPercentage = 0x4b0; // float
		constexpr auto ADSMesh = 0x4b8; // UStaticMesh*
		constexpr auto ADSMeshTransform = 0x4c0; // FTransform
		constexpr auto NonADSMesh = 0x4f0; // UStaticMesh*
		constexpr auto NonADSMeshTransform = 0x500; // FTransform
		constexpr auto InToADSMeshTransitionSettings = 0x530; // TArray<FSQMeshTransitionSettings>
		constexpr auto OutFromADSMeshTransitionSettings = 0x540; // TArray<FSQMeshTransitionSettings>
	}

	namespace n_UAnimationAsset { // : UObject
		constexpr auto Skeleton = 0x38; // USkeleton*
		constexpr auto MetaData = 0x60; // TArray<UAnimMetaData*>
		constexpr auto AssetUserData = 0x70; // TArray<UAssetUserData*>
	}

	namespace n_ABP_AK74MGP25_Rifle_1P63_Desert_C { // : ABP_AK74MGP25_Rifle_1P63_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UBP_M4M203_Rifle_StaticInfo_C { // : UBP_M4_StaticInfo_C
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_ULevelStreaming { // : UObject
		constexpr auto WorldAsset = 0x28; // UWorld*
		constexpr auto PackageNameToLoad = 0x50; // FName
		constexpr auto LODPackageNames = 0x58; // TArray<FName>
		constexpr auto LevelTransform = 0x80; // FTransform
		constexpr auto LevelLODIndex = 0xb0; // int
		constexpr auto StreamingPriority = 0xb4; // int
		constexpr auto bShouldBeVisible = 0xba; // char : 1
		constexpr auto bShouldBeLoaded = 0xba; // char : 1
		constexpr auto bLocked = 0xba; // char : 1
		constexpr auto bIsStatic = 0xba; // char : 1
		constexpr auto bShouldBlockOnLoad = 0xba; // char : 1
		constexpr auto bShouldBlockOnUnload = 0xbb; // char : 1
		constexpr auto bDisableDistanceStreaming = 0xbb; // char : 1
		constexpr auto bDrawOnLevelStatusMap = 0xbb; // char : 1
		constexpr auto LevelColor = 0xbc; // FLinearColor
		constexpr auto EditorStreamingVolumes = 0xd0; // TArray<ALevelStreamingVolume*>
		constexpr auto MinTimeBetweenVolumeUnloadRequests = 0xe0; // float
		constexpr auto OnLevelLoaded = 0xe8; // FScriptMulticastDelegate
		constexpr auto OnLevelUnloaded = 0xf8; // FScriptMulticastDelegate
		constexpr auto OnLevelShown = 0x108; // FScriptMulticastDelegate
		constexpr auto OnLevelHidden = 0x118; // FScriptMulticastDelegate
		constexpr auto LoadedLevel = 0x128; // ULevel*
		constexpr auto PendingUnloadLevel = 0x130; // ULevel*
	}

	namespace n_ATestBeaconClient { // : AOnlineBeaconClient
		constexpr auto BeaconOwner = 0x278; // AOnlineBeaconHostObject*
		constexpr auto BeaconConnection = 0x280; // UNetConnection*
		constexpr auto ConnectionState = 0x288; // EBeaconConnectionState
	}

	namespace n_UEnvQueryGenerator_CurrentLocation { // : UEnvQueryGenerator
		constexpr auto QueryContext = 0x50; // UEnvQueryContext*
	}

	namespace n_UParticleModuleVectorFieldScale { // : UParticleModuleVectorFieldBase
		constexpr auto VectorFieldScale = 0x30; // UDistributionFloat*
		constexpr auto VectorFieldScaleRaw = 0x38; // FRawDistributionFloat
	}

	namespace n_UMorphTarget { // : UObject
		constexpr auto BaseSkelMesh = 0x28; // USkeletalMesh*
	}

	namespace n_UBP_Attachment_M4M203_LadderSight_Woodland_C { // : UBP_Attachment_M4M203_LadderSight_C
		constexpr auto MeshTransitionPercentage = 0x4b0; // float
		constexpr auto ADSMesh = 0x4b8; // UStaticMesh*
		constexpr auto ADSMeshTransform = 0x4c0; // FTransform
		constexpr auto NonADSMesh = 0x4f0; // UStaticMesh*
		constexpr auto NonADSMeshTransform = 0x500; // FTransform
		constexpr auto InToADSMeshTransitionSettings = 0x530; // TArray<FSQMeshTransitionSettings>
		constexpr auto OutFromADSMeshTransitionSettings = 0x540; // TArray<FSQMeshTransitionSettings>
	}

	namespace n_ABP_AKS74_C { // : ABP_AK74_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UAnimSharingTransitionInstance { // : UAnimInstance
		constexpr auto FromComponent = 0x268; // TWeakObjectPtr<USkeletalMeshComponent>
		constexpr auto ToComponent = 0x270; // TWeakObjectPtr<USkeletalMeshComponent>
		constexpr auto BlendTime = 0x278; // float
		constexpr auto bBlendBool = 0x27c; // bool
	}

	namespace n_ARecastNavMesh { // : ANavigationData
		constexpr auto bDrawTriangleEdges = 0x408; // char : 1
		constexpr auto bDrawPolyEdges = 0x408; // char : 1
		constexpr auto bDrawFilledPolys = 0x408; // char : 1
		constexpr auto bDrawNavMeshEdges = 0x408; // char : 1
		constexpr auto bDrawTileBounds = 0x408; // char : 1
		constexpr auto bDrawPathCollidingGeometry = 0x408; // char : 1
		constexpr auto bDrawTileLabels = 0x408; // char : 1
		constexpr auto bDrawPolygonLabels = 0x408; // char : 1
		constexpr auto bDrawDefaultPolygonCost = 0x409; // char : 1
		constexpr auto bDrawLabelsOnPathNodes = 0x409; // char : 1
		constexpr auto bDrawNavLinks = 0x409; // char : 1
		constexpr auto bDrawFailedNavLinks = 0x409; // char : 1
		constexpr auto bDrawClusters = 0x409; // char : 1
		constexpr auto bDrawOctree = 0x409; // char : 1
		constexpr auto bDrawOctreeDetails = 0x409; // char : 1
		constexpr auto bDrawMarkedForbiddenPolys = 0x409; // char : 1
		constexpr auto bDistinctlyDrawTilesBeingBuilt = 0x40a; // char : 1
		constexpr auto bDrawNavMesh = 0x40a; // char : 1
		constexpr auto DrawOffset = 0x40c; // float
		constexpr auto bFixedTilePoolSize = 0x410; // char : 1
		constexpr auto TilePoolSize = 0x414; // int
		constexpr auto TileSizeUU = 0x418; // float
		constexpr auto CellSize = 0x41c; // float
		constexpr auto CellHeight = 0x420; // float
		constexpr auto AgentRadius = 0x424; // float
		constexpr auto AgentHeight = 0x428; // float
		constexpr auto AgentMaxHeight = 0x42c; // float
		constexpr auto AgentMaxSlope = 0x430; // float
		constexpr auto AgentMaxStepHeight = 0x434; // float
		constexpr auto MinRegionArea = 0x438; // float
		constexpr auto MergeRegionSize = 0x43c; // float
		constexpr auto MaxSimplificationError = 0x440; // float
		constexpr auto MaxSimultaneousTileGenerationJobsCount = 0x444; // int
		constexpr auto TileNumberHardLimit = 0x448; // int
		constexpr auto PolyRefTileBits = 0x44c; // int
		constexpr auto PolyRefNavPolyBits = 0x450; // int
		constexpr auto PolyRefSaltBits = 0x454; // int
		constexpr auto NavMeshOriginOffset = 0x458; // FVector
		constexpr auto DefaultDrawDistance = 0x464; // float
		constexpr auto DefaultMaxSearchNodes = 0x468; // float
		constexpr auto DefaultMaxHierarchicalSearchNodes = 0x46c; // float
		constexpr auto RegionPartitioning = 0x470; // ERecastPartitioning
		constexpr auto LayerPartitioning = 0x471; // ERecastPartitioning
		constexpr auto RegionChunkSplits = 0x474; // int
		constexpr auto LayerChunkSplits = 0x478; // int
		constexpr auto bSortNavigationAreasByCost = 0x47c; // char : 1
		constexpr auto bPerformVoxelFiltering = 0x47c; // char : 1
		constexpr auto bMarkLowHeightAreas = 0x47c; // char : 1
		constexpr auto bFilterLowSpanSequences = 0x47c; // char : 1
		constexpr auto bFilterLowSpanFromTileCache = 0x47c; // char : 1
		constexpr auto bDoFullyAsyncNavDataGathering = 0x47c; // char : 1
		constexpr auto bUseBetterOffsetsFromCorners = 0x47c; // char : 1
		constexpr auto bStoreEmptyTileLayers = 0x47c; // char : 1
		constexpr auto bUseVirtualFilters = 0x47d; // char : 1
		constexpr auto bAllowNavLinkAsPathEnd = 0x47d; // char : 1
		constexpr auto bUseVoxelCache = 0x47d; // char : 1
		constexpr auto TileSetUpdateInterval = 0x480; // float
		constexpr auto HeuristicScale = 0x484; // float
		constexpr auto VerticalDeviationFromGroundCompensation = 0x488; // float
	}

	namespace n_UVerticalBox { // : UPanelWidget
		constexpr auto Slots = 0x108; // TArray<UPanelSlot*>
	}

	namespace n_ABP_AK74GP25_UGL_Smoke_Blue_C { // : ABP_AK74GP25_UGL_Smoke_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UBP_M4_Foregrip_StaticInfo_C { // : UBP_M4_StaticInfo_C
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_UParticleModuleColorBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x29; // char : 1
		constexpr auto LODDuplicate = 0x29; // char : 1
		constexpr auto bSupportsRandomSeed = 0x29; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x29; // char : 1
		constexpr auto LODValidity = 0x2c; // char
	}

	namespace n_UUserDefinedEnum { // : UEnum
		constexpr auto DisplayNameMap = 0x60; // TMap<FName, FText>
	}

	namespace n_USQReplicationGraph { // : UReplicationGraph
		constexpr auto SpatializedClasses = 0x498; // TArray<UObject*>
		constexpr auto NonSpatializedChildClasses = 0x4a8; // TArray<UObject*>
		constexpr auto AlwaysRelevantClasses = 0x4b8; // TArray<UObject*>
		constexpr auto AlwaysRelevantNode = 0x4c8; // UReplicationGraphNode_ActorList*
		constexpr auto GridNode = 0x4d0; // UReplicationGraphNode_GridSpatialization2D*
		constexpr auto TeamGridNodes = 0x4d8; // TMap<int, USQReplicationGraphNode_GridSpatialization2DEx*>
		constexpr auto TeamAlwaysRelevantNodes = 0x528; // TMap<int, UReplicationGraphNode_ActorList*>
		constexpr auto TeamSquadsAlwaysRelevantNodes = 0x578; // TMap<FTeamSquadId, UReplicationGraphNode_ActorList*>
	}

	namespace n_UAnimSharingInstance { // : UObject
		constexpr auto RegisteredActors = 0x28; // TArray<AActor*>
		constexpr auto StateProcessor = 0xa8; // UAnimationSharingStateProcessor*
		constexpr auto UsedAnimationSequences = 0xe8; // TArray<UAnimSequence*>
		constexpr auto StateEnum = 0x108; // UEnum*
		constexpr auto SharingActor = 0x110; // AActor*
	}

	namespace n_UEditableGameplayTagQueryExpression_AllExprMatch { // : UEditableGameplayTagQueryExpression
		constexpr auto Expressions = 0x28; // TArray<UEditableGameplayTagQueryExpression*>
	}

	namespace n_UUpdateManager { // : UObject
		constexpr auto HotfixCheckCompleteDelay = 0x88; // float
		constexpr auto UpdateCheckCompleteDelay = 0x8c; // float
		constexpr auto HotfixAvailabilityCheckCompleteDelay = 0x90; // float
		constexpr auto UpdateCheckAvailabilityCompleteDelay = 0x94; // float
		constexpr auto bCheckPlatformOSSForUpdate = 0x98; // bool
		constexpr auto bCheckOSSForUpdate = 0x99; // bool
		constexpr auto AppSuspendedUpdateCheckTimeSeconds = 0x9c; // int
		constexpr auto bPlatformEnvironmentDetected = 0xa8; // bool
		constexpr auto bInitialUpdateFinished = 0xa9; // bool
		constexpr auto bCheckHotfixAvailabilityOnly = 0xaa; // bool
		constexpr auto CurrentUpdateState = 0xab; // EUpdateState
		constexpr auto WorstNumFilesPendingLoadViewed = 0xac; // int
		constexpr auto LastPatchCheckResult = 0xb0; // EPatchCheckResult
		constexpr auto LastHotfixResult = 0xb1; // EHotfixResult
		constexpr auto LastUpdateCheck = 0xe0; // FDateTime [0x2]
		constexpr auto LastCompletionResult = 0xf0; // EUpdateCompletionStatus [0x2]
		constexpr auto UpdateStateEnum = 0x108; // UEnum*
		constexpr auto UpdateCompletionEnum = 0x110; // UEnum*
	}

	namespace n_UParticleModuleVectorFieldLocal { // : UParticleModuleVectorFieldBase
		constexpr auto VectorField = 0x30; // UVectorField*
		constexpr auto RelativeTranslation = 0x38; // FVector
		constexpr auto RelativeRotation = 0x44; // FRotator
		constexpr auto RelativeScale3D = 0x50; // FVector
		constexpr auto Intensity = 0x5c; // float
		constexpr auto Tightness = 0x60; // float
		constexpr auto bIgnoreComponentTransform = 0x64; // char : 1
		constexpr auto bTileX = 0x64; // char : 1
		constexpr auto bTileY = 0x64; // char : 1
		constexpr auto bTileZ = 0x64; // char : 1
		constexpr auto bUseFixDT = 0x64; // char : 1
	}

	namespace n_USQMenuItemWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto MenuItemStyle = 0x30; // FSQMenuItemStyle
	}

	namespace n_UMockDataMeshTrackerComponent { // : USceneComponent
		constexpr auto OnMeshTrackerUpdated = 0x218; // FScriptMulticastDelegate
		constexpr auto ScanWorld = 0x228; // bool
		constexpr auto RequestNormals = 0x229; // bool
		constexpr auto RequestVertexConfidence = 0x22a; // bool
		constexpr auto VertexColorMode = 0x22b; // EMeshTrackerVertexColorMode
		constexpr auto BlockVertexColors = 0x230; // TArray<FColor>
		constexpr auto VertexColorFromConfidenceZero = 0x240; // FLinearColor
		constexpr auto VertexColorFromConfidenceOne = 0x250; // FLinearColor
		constexpr auto UpdateInterval = 0x260; // float
		constexpr auto MRMesh = 0x268; // UMRMeshComponent*
	}

	namespace n_UBTDecorator_ForceSuccess { // : UBTDecorator
		constexpr auto bInverseCondition = 0x60; // char : 1
		constexpr auto FlowAbortMode = 0x64; // EBTFlowAbortMode
	}

	namespace n_UFieldSystemMetaData { // : UActorComponent
		constexpr auto PrimaryComponentTick = 0x30; // FActorComponentTickFunction
		constexpr auto ComponentTags = 0x88; // TArray<FName>
		constexpr auto AssetUserData = 0x98; // TArray<UAssetUserData*>
		constexpr auto bReplicates = 0xac; // char : 1
		constexpr auto bNetAddressable = 0xac; // char : 1
		constexpr auto bAutoActivate = 0xad; // char : 1
		constexpr auto bIsActive = 0xae; // char : 1
		constexpr auto bEditableWhenInherited = 0xae; // char : 1
		constexpr auto bCanEverAffectNavigation = 0xae; // char : 1
		constexpr auto bIsEditorOnly = 0xae; // char : 1
		constexpr auto CreationMethod = 0xb0; // EComponentCreationMethod
		constexpr auto OnComponentActivated = 0xb1; // FScriptMulticastDelegate
		constexpr auto OnComponentDeactivated = 0xb2; // FScriptMulticastDelegate
		constexpr auto UCSModifiedProperties = 0xb8; // TArray<FSimpleMemberReference>
	}

	namespace n_USQInteractableWidgetItem { // : UUserWidget
		constexpr auto ColorAndOpacity = 0x110; // FLinearColor
		constexpr auto ColorAndOpacityDelegate = 0x120; // DelegateProperty
		constexpr auto ForegroundColor = 0x130; // FSlateColor
		constexpr auto ForegroundColorDelegate = 0x158; // DelegateProperty
		constexpr auto Padding = 0x168; // FMargin
		constexpr auto ActiveSequencePlayers = 0x178; // TArray<UUMGSequencePlayer*>
		constexpr auto StoppedSequencePlayers = 0x188; // TArray<UUMGSequencePlayer*>
		constexpr auto NamedSlotBindings = 0x198; // TArray<FNamedSlotBinding>
		constexpr auto WidgetTree = 0x1a8; // UWidgetTree*
		constexpr auto Priority = 0x1b0; // int
		constexpr auto bSupportsKeyboardFocus = 0x1b4; // char : 1
		constexpr auto bIsFocusable = 0x1b4; // char : 1
		constexpr auto bStopAction = 0x1b4; // char : 1
		constexpr auto bHasScriptImplementedTick = 0x1b4; // char : 1
		constexpr auto bHasScriptImplementedPaint = 0x1b4; // char : 1
		constexpr auto bCookedWidgetTree = 0x1b4; // char : 1
		constexpr auto TickFrequency = 0x1c0; // EWidgetTickFrequency
		constexpr auto InputComponent = 0x1c8; // UInputComponent*
		constexpr auto AnimationCallbacks = 0x1d0; // TArray<FAnimationEventBinding>
	}

	namespace n_UAIDataProvider_Random { // : UAIDataProvider_QueryParams
		constexpr auto Min = 0x40; // float
		constexpr auto Max = 0x44; // float
		constexpr auto bInteger = 0x48; // char : 1
	}

	namespace n_USQVehicleWheel_Tracked { // : UVehicleWheel
		constexpr auto SuspensionDirection = 0xf8; // FVector
	}

	namespace n_UInterpTrackInstColorProp { // : UInterpTrackInstProperty
		constexpr auto ResetColor = 0x40; // FColor
	}

	namespace n_ASQObjective_Destroyable { // : ASQObjective
		constexpr auto WorldText = 0x348; // FText
		constexpr auto WorldTextColor = 0x360; // FLinearColor
		constexpr auto UsableData = 0x370; // FSQUsableData
		constexpr auto bHasBeenDestroyed = 0x3b0; // bool
		constexpr auto Health = 0x3b4; // float
		constexpr auto AllowableDamageTypes = 0x3b8; // TArray<USQDamageType*>
		constexpr auto DestroyedParticleEffect = 0x3c8; // UParticleSystem*
		constexpr auto DestroyedShockwaveEffect = 0x3d0; // USQShockwave*
		constexpr auto DestroyedSound = 0x3d8; // USoundCue*
		constexpr auto DestroyedDebrisSound = 0x3e0; // USoundCue*
		constexpr auto DamageEffects = 0x3e8; // FSQDamageTypeEffects
		constexpr auto SpawnClass = 0x410; // ASQGameSpawn*
		constexpr auto SpawnPoint = 0x418; // ASQGameSpawn*
		constexpr auto SpawnLocationZOffset = 0x420; // float
		constexpr auto DefaultEffectsClass = 0x428; // USQPhysicalMaterialEffects*
	}

	namespace n_UBP_M4_StaticInfo_C { // : UBP_GenericWeapon_StaticInfo_C
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_UParticleModuleAttractorBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x29; // char : 1
		constexpr auto LODDuplicate = 0x29; // char : 1
		constexpr auto bSupportsRandomSeed = 0x29; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x29; // char : 1
		constexpr auto LODValidity = 0x2c; // char
	}

	namespace n_USQRestriction_ActorsInRange { // : USQRestriction_Boolean
		constexpr auto Range = 0x58; // float
		constexpr auto TargetActorClass = 0x60; // AActor*
		constexpr auto TargetCount = 0x68; // int
	}

	namespace n_UUMGSequencePlayer { // : UObject
		constexpr auto Animation = 0x3b8; // UWidgetAnimation*
	}

	namespace n_UMaterialExpressionNormalize { // : UMaterialExpression
		constexpr auto VectorInput = 0x40; // FExpressionInput
	}

	namespace n_UBTNode { // : UObject
		constexpr auto NodeName = 0x30; // FString
		constexpr auto TreeAsset = 0x40; // UBehaviorTree*
		constexpr auto ParentNode = 0x48; // UBTCompositeNode*
	}

	namespace n_UGameplayTagsDeveloperSettings { // : UObject
		constexpr auto DeveloperConfigName = 0x28; // FString
	}

	namespace n_UBP_Attachment_M68_NoAds_C { // : UBP_Attachment_M68_C
		constexpr auto MeshTransitionPercentage = 0x4b0; // float
		constexpr auto ADSMesh = 0x4b8; // UStaticMesh*
		constexpr auto ADSMeshTransform = 0x4c0; // FTransform
		constexpr auto NonADSMesh = 0x4f0; // UStaticMesh*
		constexpr auto NonADSMeshTransform = 0x500; // FTransform
		constexpr auto InToADSMeshTransitionSettings = 0x530; // TArray<FSQMeshTransitionSettings>
		constexpr auto OutFromADSMeshTransitionSettings = 0x540; // TArray<FSQMeshTransitionSettings>
	}

	namespace n_ABP_M4_M68_4Mags_Woodland_C { // : ABP_M4_M68_4Mags_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_APlayerStart { // : ANavigationObjectBase
		constexpr auto PlayerStartTag = 0x270; // FName
	}

	namespace n_USQVehicleAnimInstance { // : UVehicleAnimInstance
		constexpr auto Vehicle = 0x970; // ASQGroundVehicle*
		constexpr auto bIsEngineActive = 0x978; // bool
		constexpr auto SteeringWheelRotation = 0x97c; // FRotator
	}

	namespace n_ASphereReflectionCapture { // : AReflectionCapture
		constexpr auto DrawCaptureRadius = 0x250; // UDrawSphereComponent*
	}

	namespace n_AReflectionCapture { // : AActor
		constexpr auto CaptureComponent = 0x248; // UReflectionCaptureComponent*
	}

	namespace n_UBlueprintGeneratedClass { // : UClass
		constexpr auto NumReplicatedProperties = 0x200; // int
		constexpr auto bHasNativizedParent = 0x204; // char : 1
		constexpr auto bHasCookedComponentInstancingData = 0x204; // char : 1
		constexpr auto DynamicBindingObjects = 0x208; // TArray<UDynamicBlueprintBinding*>
		constexpr auto ComponentTemplates = 0x218; // TArray<UActorComponent*>
		constexpr auto Timelines = 0x228; // TArray<UTimelineTemplate*>
		constexpr auto SimpleConstructionScript = 0x238; // USimpleConstructionScript*
		constexpr auto InheritableComponentHandler = 0x240; // UInheritableComponentHandler*
		constexpr auto UberGraphFramePointerProperty = 0x248; // UStructProperty*
		constexpr auto UberGraphFunction = 0x250; // UFunction*
		constexpr auto CookedComponentInstancingData = 0x258; // TMap<FName, FBlueprintCookedComponentInstancingData>
	}

	namespace n_UNavigationSystemConfig { // : UObject
		constexpr auto NavigationSystemClass = 0x28; // FSoftClassPath
		constexpr auto bIsOverriden = 0x40; // char : 1
	}

	namespace n_UMovieSceneVectorSection { // : UMovieSceneSection
		constexpr auto Curves = 0xe0; // FMovieSceneFloatChannel [0x4]
		constexpr auto ChannelsUsed = 0x360; // int
	}

	namespace n_UButtonStyleAsset { // : UObject
		constexpr auto ButtonStyle = 0x28; // FButtonStyle
	}

	namespace n_UAbilityTask_WaitGameplayEffectStackChange { // : UAbilityTask
		constexpr auto OnChange = 0x80; // FScriptMulticastDelegate
		constexpr auto InvalidHandle = 0x90; // FScriptMulticastDelegate
	}

	namespace n_ABP_M4A1_M150_Foregrip_Tracer_C { // : ABP_M4A1_M150_Foregrip_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UBP_L85A2AG36_ElcanLDS_StaticInfo_C { // : UBP_L85A2AG36_StaticInfo_C
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_UBP_M9a1Beretta_StaticInfo_C { // : UBP_Glock17_StaticInfo_C
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_UDemoPendingNetGame { // : UPendingNetGame
		constexpr auto NetDriver = 0x30; // UNetDriver*
		constexpr auto DemoNetDriver = 0x38; // UDemoNetDriver*
	}

	namespace n_USQMapMarkerBase { // : UUserWidget
		constexpr auto MarkerImage = 0x230; // UImage*
		constexpr auto CanvasPanelSlot = 0x238; // UCanvasPanelSlot*
		constexpr auto AnimationEpsilon = 0x240; // float
		constexpr auto ColorsDataAsset = 0x248; // USQColorsDataAsset*
		constexpr auto MarkerData = 0x250; // FSQMapMarkerVisualData
		constexpr auto bHasFaded = 0x318; // bool
	}

	namespace n_UFloatingPawnMovement { // : UPawnMovementComponent
		constexpr auto MaxSpeed = 0x160; // float
		constexpr auto Acceleration = 0x164; // float
		constexpr auto Deceleration = 0x168; // float
		constexpr auto TurningBoost = 0x16c; // float
		constexpr auto bPositionCorrected = 0x170; // char : 1
	}

	namespace n_USQGridData_CommandOption_Distance { // : USQGridData_CommandOption
		constexpr auto MinimumDistance = 0x138; // float
		constexpr auto MaximumDistance = 0x13c; // float
	}

	namespace n_UGeneralProjectSettings { // : UObject
		constexpr auto CompanyName = 0x28; // FString
		constexpr auto CompanyDistinguishedName = 0x38; // FString
		constexpr auto CopyrightNotice = 0x48; // FString
		constexpr auto Description = 0x58; // FString
		constexpr auto Homepage = 0x68; // FString
		constexpr auto LicensingTerms = 0x78; // FString
		constexpr auto PrivacyPolicy = 0x88; // FString
		constexpr auto ProjectID = 0x98; // FGuid
		constexpr auto ProjectName = 0xa8; // FString
		constexpr auto ProjectVersion = 0xb8; // FString
		constexpr auto SupportContact = 0xc8; // FString
		constexpr auto ProjectDisplayedTitle = 0xd8; // FText
		constexpr auto ProjectDebugTitleInfo = 0xf0; // FText
		constexpr auto bShouldWindowPreserveAspectRatio = 0x108; // bool
		constexpr auto bUseBorderlessWindow = 0x109; // bool
		constexpr auto bStartInVR = 0x10a; // bool
		constexpr auto bStartInAR = 0x10b; // bool
		constexpr auto bSupportAR = 0x10c; // bool
		constexpr auto bAllowWindowResize = 0x10d; // bool
		constexpr auto bAllowClose = 0x10e; // bool
		constexpr auto bAllowMaximize = 0x10f; // bool
		constexpr auto bAllowMinimize = 0x110; // bool
	}

	namespace n_UMovieSceneSubSection { // : UMovieSceneSection
		constexpr auto Parameters = 0xe0; // FMovieSceneSectionParameters
		constexpr auto StartOffset = 0xf8; // float
		constexpr auto TimeScale = 0xfc; // float
		constexpr auto PrerollTime = 0x100; // float
		constexpr auto SubSequence = 0x108; // UMovieSceneSequence*
		constexpr auto ActorToRecord = 0x110; // AActor*
		constexpr auto TargetSequenceName = 0x130; // FString
		constexpr auto TargetPathToRecordTo = 0x140; // FDirectoryPath
	}

	namespace n_ABP_M4A1_M68_Foregrip_Tracer_Woodland_C { // : ABP_M4A1_M68_Foregrip_Tracer_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UPoseWatch { // : UObject
		constexpr auto Node = 0x28; // UEdGraphNode*
		constexpr auto PoseWatchColour = 0x30; // FColor
	}

	namespace n_USQMapLattice { // : USQUserWidget
		constexpr auto LatticeLines = 0x230; // TArray<FSQLatticeLine>
		constexpr auto MapComponent = 0x240; // USQCoreStateMapComponent*
	}

	namespace n_ASQAction { // : AActor
		constexpr auto Setting = 0x248; // USQActionSettings*
		constexpr auto Parameters = 0x250; // FSQActionParameters
		constexpr auto Team = 0x290; // int
		constexpr auto DamageInstigatorController = 0x294; // TWeakObjectPtr<AController>
	}

	namespace n_UAnimCustomInstance { // : UAnimInstance
		constexpr auto CurrentSkeleton = 0x28; // USkeleton*
		constexpr auto RootMotionMode = 0x30; // ERootMotionMode
		constexpr auto bUseMultiThreadedAnimationUpdate = 0x31; // char : 1
		constexpr auto bUsingCopyPoseFromMesh = 0x31; // char : 1
		constexpr auto bQueueMontageEvents = 0x31; // char : 1
		constexpr auto OnMontageBlendingOut = 0x38; // FScriptMulticastDelegate
		constexpr auto OnMontageStarted = 0x48; // FScriptMulticastDelegate
		constexpr auto OnMontageEnded = 0x58; // FScriptMulticastDelegate
		constexpr auto OnAllMontageInstancesEnded = 0x68; // FScriptMulticastDelegate
		constexpr auto NotifyQueue = 0x100; // FAnimNotifyQueue
		constexpr auto ActiveAnimNotifyState = 0x170; // TArray<FAnimNotifyEvent>
	}

	namespace n_ASQSoldier { // : ACharacter
		constexpr auto UsableData = 0x670; // FSQUsableData
		constexpr auto Mesh1P = 0x6b0; // USkeletalMeshComponent*
		constexpr auto Mesh1PShadow = 0x6b8; // USkeletalMeshComponent*
		constexpr auto bEnableTickUpdateShiftMesh = 0x6c0; // char : 1
		constexpr auto ShiftMeshOffset = 0x6c4; // FVector
		constexpr auto Prone2SprintMovementRecovery = 0x6d0; // float
		constexpr auto Prone2SprintAlpha = 0x6d4; // float
		constexpr auto ConsoleVariablesComponent = 0x6d8; // USQConsoleVariablesComponent*
		constexpr auto SoldierMeshSkins = 0x6e0; // TArray<USkeletalMesh*>
		constexpr auto BasePatchMaterial = 0x6f0; // UMaterialInterface*
		constexpr auto FirstPersonCameraComponent = 0x6f8; // UCameraComponent*
		constexpr auto WeaponBasedFOV = 0x700; // float
		constexpr auto SoldierMovement = 0x708; // USQSoldierMovement*
		constexpr auto SnapZone = 0x710; // USphereComponent*
		constexpr auto LowHealthPostProcessSettings = 0x720; // FPostProcessSettings
		constexpr auto BleedingPostProcessSettings = 0xc50; // FPostProcessSettings
		constexpr auto SuppressionPostProcessSettings = 0x1180; // FPostProcessSettings
		constexpr auto bAllowEffectsForProjectilesFiredWithinSuppressionRange = 0x16b0; // char : 1
		constexpr auto UnderSuppressionPercentage = 0x16b4; // float
		constexpr auto SuppressionEffectsDecayRate = 0x16b8; // float
		constexpr auto BaseTurnRate = 0x16bc; // float
		constexpr auto BaseLookUpRate = 0x16c0; // float
		constexpr auto NoADSToSprintDot = 0x16c4; // float
		constexpr auto ADSToSprintDot = 0x16c8; // float
		constexpr auto bIsDoubleTapWalking = 0x16cc; // char : 1
		constexpr auto GunOffset = 0x16d0; // FVector
		constexpr auto ProneEyeHeight = 0x16dc; // float
		constexpr auto bIsProne = 0x16e0; // char : 1
		constexpr auto bInThirdPersonView = 0x16f0; // char : 1
		constexpr auto bCachedInThirdPerson = 0x16f0; // char : 1
		constexpr auto AttachSocket1PName = 0x16f4; // FName
		constexpr auto AttachSocket3PName = 0x16fc; // FName
		constexpr auto StateObject = 0x1708; // USQCoreStateComponent*
		constexpr auto MapIcon = 0x1710; // USQMapIconComponent*
		constexpr auto SecondsUntilIgnoreDistanceForAliveTeamMates = 0x1718; // float
		constexpr auto SecondsOfSpawnProtection = 0x171c; // float
		constexpr auto InvulnerableDelay = 0x1720; // float
		constexpr auto RagdollLifeSpan = 0x1724; // float
		constexpr auto UnpossessionDelayAfterDeath = 0x1728; // float
		constexpr auto BoneDamageModifiers = 0x1730; // TArray<FSQBoneDamageMod>
		constexpr auto LeaningDirection = 0x1770; // char
		constexpr auto BlockLeanTraceDistance = 0x1774; // float
		constexpr auto PitchAngleAdjust = 0x1778; // float
		constexpr auto BlockLeanTraceRotation = 0x177c; // float
		constexpr auto ProneBlockLeanTraceDistance = 0x1780; // float
		constexpr auto PronePitchAngleAdjust = 0x1784; // float
		constexpr auto ProneBlockLeanTraceRotation = 0x1788; // float
		constexpr auto UseInteractDistance = 0x178c; // float
		constexpr auto UseFocus = 0x1790; // AActor*
		constexpr auto SnapZoneRadius = 0x179c; // float
		constexpr auto MinDistanceToSuppressedTarget = 0x17a0; // float
		constexpr auto FullSuppressionRadius = 0x17a4; // float
		constexpr auto SuppressionRadius = 0x17a8; // float
		constexpr auto CurrentSeat = 0x17b0; // USQVehicleSeatComponent*
		constexpr auto bTestingMove = 0x17b8; // char : 1
		constexpr auto CachedMoveRotation = 0x17bc; // float
		constexpr auto CachedMoveRotationPoint = 0x17c0; // FVector
		constexpr auto CachedForwardVector = 0x17cc; // FVector
		constexpr auto OnChangedSeat = 0x17d8; // FScriptMulticastDelegate
		constexpr auto bStopADSWhenSprintPressed = 0x17e8; // char : 1
		constexpr auto bStopADSWhenPronePressed = 0x17e8; // char : 1
		constexpr auto bStopADSWhenUnpronePressed = 0x17e8; // char : 1
		constexpr auto bStopSprintWhenADSPressed = 0x17e8; // char : 1
		constexpr auto bStopUsingPrimaryItemWhenPronePressed = 0x17e8; // char : 1
		constexpr auto bStopUsingAltItemWhenPronePressed = 0x17e8; // char : 1
		constexpr auto bStopUsingPrimaryItemWhenUnpronePressed = 0x17e8; // char : 1
		constexpr auto bStopUsingAltItemWhenUnpronePressed = 0x17e8; // char : 1
		constexpr auto bItemLoweredDueToCollision = 0x17e9; // char : 1
		constexpr auto bCachedADSDuringItemCollision = 0x17e9; // char : 1
		constexpr auto UsingObject = 0x17f0; // AActor*
		constexpr auto VehicleSeatEntryWeaponSlot = 0x17f8; // int
		constexpr auto VehicleSeatEntryWeaponOffset = 0x17fc; // int
		constexpr auto LastTakeHitInfo = 0x1ad8; // FSQTakeHitInfo
		constexpr auto SoldierSkinIndex = 0x1c10; // char
		constexpr auto bIsDying = 0x1c14; // char : 1
		constexpr auto bIsBleeding = 0x1c14; // char : 1
		constexpr auto bIsWounded = 0x1c14; // char : 1
		constexpr auto bAllowWoundedState = 0x1c14; // char : 1
		constexpr auto Health = 0x1c18; // float
		constexpr auto LastHealedTime = 0x1c1c; // float
		constexpr auto WoundedThreshold = 0x1c20; // float
		constexpr auto HealthBleedableThreshold = 0x1c24; // float
		constexpr auto HealthHurtMovementThreshold = 0x1c28; // float
		constexpr auto DamageBleedableThreshold = 0x1c2c; // float
		constexpr auto WoundedHealthLossRate = 0x1c30; // float
		constexpr auto WoundedBandagedHealthLossRate = 0x1c34; // float
		constexpr auto BleedingHealthLossRate = 0x1c38; // float
		constexpr auto KillDamageThreshold = 0x1c3c; // float
		constexpr auto HealthUponRevival = 0x1c40; // float
		constexpr auto TimeBecameWounded = 0x1c44; // float
		constexpr auto TimeBecameRevived = 0x1c48; // float
		constexpr auto PostRecoveryUpdateRate = 0x1c4c; // float
		constexpr auto PostRecoveryTimerHandle = 0x1c50; // FTimerHandle
		constexpr auto PostRecoveryTimeLeft = 0x1c58; // float
		constexpr auto PostRecoveryRateByHealthCurve = 0x1c60; // UCurveFloat*
		constexpr auto CumulativeRevivePenalty = 0x1c68; // float
		constexpr auto bIsHoldingBreath = 0x1c6c; // char : 1
		constexpr auto BreathHoldStamina = 0x1c70; // float
		constexpr auto BreathHoldStaminaMax = 0x1c74; // float
		constexpr auto BreathHoldRecoveryDuration = 0x1c78; // float
		constexpr auto BreathHoldConsumptionDuration = 0x1c7c; // float
		constexpr auto BreathHoldFadeDuration = 0x1c80; // float
		constexpr auto BreathHoldPct = 0x1c84; // float
		constexpr auto FocusZoomAlpha = 0x1c88; // float
		constexpr auto FallSpeedToFallDamageCurve = 0x1c90; // UCurveFloat*
		constexpr auto FallingDamageMultiplier = 0x1c98; // float
		constexpr auto MaximumSafeFallingSpeed = 0x1c9c; // float
		constexpr auto BonkOnHeadFallDamageMultiplier = 0x1ca0; // float
		constexpr auto OnRevivedEvent = 0x1ca8; // FScriptMulticastDelegate
		constexpr auto bIsLeavingServer = 0x1cb8; // char : 1
		constexpr auto WoundedSoundMix = 0x1cc0; // USoundMix*
		constexpr auto BleedingSoundMix = 0x1cc8; // USoundMix*
		constexpr auto ListenerType = 0x1cd0; // ESQListenerType
		constexpr auto HealthBasedFilterGainCurve = 0x1cd8; // UCurveLinearColor*
		constexpr auto bUseHealthBasedFilterGainCurveForWoundedSoundMix = 0x1ce0; // char : 1
		constexpr auto bUseHealthBasedFilterGainCurveForBleedingSoundMix = 0x1ce0; // char : 1
		constexpr auto HeartbeatVolumeCurve = 0x1ce8; // UCurveFloat*
		constexpr auto HeartbeatSound = 0x1cf0; // USoundBase*
		constexpr auto HeartbeatIncapSound = 0x1cf8; // USoundBase*
		constexpr auto DefaultLandedSound = 0x1d00; // USoundBase*
		constexpr auto HitSound = 0x1d08; // USoundBase*
		constexpr auto FirstPersonHitSound = 0x1d10; // USoundBase*
		constexpr auto IncapSound = 0x1d18; // USoundBase*
		constexpr auto BoneHitSounds = 0x1d20; // TArray<FSQBoneHitSound>
		constexpr auto IncapSoundOccurrencePercentage = 0x1d30; // float
		constexpr auto WoundedSoundMixDelaySeconds = 0x1d34; // float
		constexpr auto bPlayIncapSound = 0x1d38; // char : 1
		constexpr auto DeathSound = 0x1d40; // USoundBase*
		constexpr auto ClothingSound = 0x1d48; // USoundBase*
		constexpr auto EquipmentSound = 0x1d50; // USoundBase*
		constexpr auto ResupplyCrateSound = 0x1d58; // USoundBase*
		constexpr auto DeathSoundOccurrencePercentage = 0x1d60; // float
		constexpr auto bPlayDeathSound = 0x1d64; // char : 1
		constexpr auto FoleyAC = 0x1d68; // UAudioComponent*
		constexpr auto HeartbeatAC = 0x1d70; // UAudioComponent*
		constexpr auto HeartbeatIncapAC = 0x1d78; // UAudioComponent*
		constexpr auto PhysMatEffectsClass = 0x1d80; // USQPhysicalMaterialSoldiersEffects*
		constexpr auto bPerfToggleMultiCastLean = 0x1d88; // char : 1
		constexpr auto DelayedUnposessTimer = 0x1d90; // FTimerHandle
		constexpr auto DraggingHandle = 0x1d98; // UPhysicsHandleComponent*
		constexpr auto DraggingData = 0x1da0; // FSQDraggingData
		constexpr auto DraggingDistanceMultiplier = 0x1db8; // float
		constexpr auto StartDraggingTimerHandle = 0x1dc0; // FTimerHandle
		constexpr auto StartDraggingDelay = 0x1dc8; // float
		constexpr auto DraggableBones = 0x1dd0; // TArray<FName>
		constexpr auto RagdollComponent = 0x1de0; // USQSoldierRagdollComponent*
		constexpr auto Buffs = 0x1de8; // USQBuffManager*
		constexpr auto OnWoundEvent = 0x1df0; // FScriptMulticastDelegate
		constexpr auto OnDeathEvent = 0x1e08; // FScriptMulticastDelegate
		constexpr auto bIsDragging = 0x1e18; // char : 1
		constexpr auto bBodyDraggingActive = 0x1e18; // char : 1
		constexpr auto SoldierStaticInfo = 0x1e20; // USQSoldierStaticInfo*
		constexpr auto InventoryComponent = 0x1e38; // USQPawnInventoryComponent*
		constexpr auto CurrentSoundMix = 0x1e48; // USoundMix*
	}

	namespace n_UBP_Attachment_M110_Front_Black_C { // : USQWeaponAttachment_Scope
		constexpr auto MeshTransitionPercentage = 0x4b0; // float
		constexpr auto ADSMesh = 0x4b8; // UStaticMesh*
		constexpr auto ADSMeshTransform = 0x4c0; // FTransform
		constexpr auto NonADSMesh = 0x4f0; // UStaticMesh*
		constexpr auto NonADSMeshTransform = 0x500; // FTransform
		constexpr auto InToADSMeshTransitionSettings = 0x530; // TArray<FSQMeshTransitionSettings>
		constexpr auto OutFromADSMeshTransitionSettings = 0x540; // TArray<FSQMeshTransitionSettings>
	}

	namespace n_UMovieSceneFloatTrack { // : UMovieScenePropertyTrack
		constexpr auto SectionToKey = 0x58; // UMovieSceneSection*
		constexpr auto PropertyName = 0x60; // FName
		constexpr auto PropertyPath = 0x68; // FString
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_UARSessionConfig { // : UDataAsset
		constexpr auto bGenerateMeshDataFromTrackedGeometry = 0x30; // bool
		constexpr auto bGenerateCollisionForMeshData = 0x31; // bool
		constexpr auto bGenerateNavMeshForMeshData = 0x32; // bool
		constexpr auto bUseMeshDataForOcclusion = 0x33; // bool
		constexpr auto bRenderMeshDataInWireframe = 0x34; // bool
		constexpr auto bTrackSceneObjects = 0x35; // bool
		constexpr auto bUsePersonSegmentationForOcclusion = 0x36; // bool
		constexpr auto WorldAlignment = 0x37; // EARWorldAlignment
		constexpr auto SessionType = 0x38; // EARSessionType
		constexpr auto PlaneDetectionMode = 0x39; // EARPlaneDetectionMode
		constexpr auto bHorizontalPlaneDetection = 0x3a; // bool
		constexpr auto bVerticalPlaneDetection = 0x3b; // bool
		constexpr auto bEnableAutoFocus = 0x3c; // bool
		constexpr auto LightEstimationMode = 0x3d; // EARLightEstimationMode
		constexpr auto FrameSyncMode = 0x3e; // EARFrameSyncMode
		constexpr auto bEnableAutomaticCameraOverlay = 0x3f; // bool
		constexpr auto bEnableAutomaticCameraTracking = 0x40; // bool
		constexpr auto bResetCameraTracking = 0x41; // bool
		constexpr auto bResetTrackedObjects = 0x42; // bool
		constexpr auto CandidateImages = 0x48; // TArray<UARCandidateImage*>
		constexpr auto MaxNumSimultaneousImagesTracked = 0x58; // int
		constexpr auto EnvironmentCaptureProbeType = 0x5c; // EAREnvironmentCaptureProbeType
		constexpr auto WorldMapData = 0x60; // TArray<char>
		constexpr auto CandidateObjects = 0x70; // TArray<UARCandidateObject*>
		constexpr auto DesiredVideoFormat = 0x80; // FARVideoFormat
		constexpr auto FaceTrackingDirection = 0x8c; // EARFaceTrackingDirection
		constexpr auto FaceTrackingUpdate = 0x8d; // EARFaceTrackingUpdate
		constexpr auto SerializedARCandidateImageDatabase = 0x90; // TArray<char>
		constexpr auto EnabledSessionTrackingFeature = 0xa0; // EARSessionTrackingFeature
	}

	namespace n_UDataAsset { // : UObject
		constexpr auto NativeClass = 0x28; // UDataAsset*
	}

	namespace n_UDefaultLevelSequenceInstanceData { // : UObject
		constexpr auto TransformOriginActor = 0x30; // AActor*
		constexpr auto TransformOrigin = 0x40; // FTransform
	}

	namespace n_UNavigationSystemV1 { // : UNavigationSystemBase
		constexpr auto MainNavData = 0x28; // ANavigationData*
		constexpr auto AbstractNavData = 0x30; // ANavigationData*
		constexpr auto CrowdManagerClass = 0x38; // UClass*
		constexpr auto bAutoCreateNavigationData = 0x60; // char : 1
		constexpr auto bSpawnNavDataInNavBoundsLevel = 0x60; // char : 1
		constexpr auto bAllowClientSideNavigation = 0x60; // char : 1
		constexpr auto bShouldDiscardSubLevelNavData = 0x60; // char : 1
		constexpr auto bTickWhilePaused = 0x60; // char : 1
		constexpr auto bSupportRebuilding = 0x60; // char : 1
		constexpr auto bInitialBuildingLocked = 0x60; // char : 1
		constexpr auto bSkipAgentHeightCheckWhenPickingNavData = 0x61; // char : 1
		constexpr auto DataGatheringMode = 0x64; // ENavDataGatheringModeConfig
		constexpr auto bGenerateNavigationOnlyAroundNavigationInvokers = 0x68; // char : 1
		constexpr auto ActiveTilesUpdateInterval = 0x6c; // float
		constexpr auto SupportedAgents = 0x70; // TArray<FNavDataConfig>
		constexpr auto DirtyAreasUpdateFreq = 0x80; // float
		constexpr auto NavDataSet = 0x88; // TArray<ANavigationData*>
		constexpr auto NavDataRegistrationQueue = 0x98; // TArray<ANavigationData*>
		constexpr auto OnNavDataRegisteredEvent = 0x108; // FScriptMulticastDelegate
		constexpr auto OnNavigationGenerationFinishedDelegate = 0x118; // FScriptMulticastDelegate
		constexpr auto OperationMode = 0x204; // FNavigationSystemRunMode
	}

	namespace n_USQCompassMK2 { // : USQCompass
		constexpr auto MainP = 0x250; // UCanvasPanel*
		constexpr auto CompassBearingText = 0x258; // UTextBlock*
		constexpr auto LeftArrow = 0x260; // UImage*
		constexpr auto RightArrow = 0x268; // UImage*
		constexpr auto CompassMID = 0x270; // UMaterialInstanceDynamic*
		constexpr auto BearingMatParamName = 0x278; // FName
		constexpr auto InitialPlayerState = 0x280; // ASQPlayerState*
		constexpr auto MarkerYPositionOffset = 0x288; // float
		constexpr auto TrackedSquadMatesWidgets = 0x290; // TArray<USQCompassPlayer*>
		constexpr auto DistanceCurve = 0x2a0; // UCurveFloat*
		constexpr auto bAlwaysShowSquadLeader = 0x2a8; // bool
		constexpr auto TrackedMarkerWidgets = 0x2b0; // TArray<USQCompassMarker*>
		constexpr auto MarkerTypesToTrack = 0x2c0; // TArray<ESQMapMarkerType>
		constexpr auto CompassEdgeFadePercentage = 0x2d0; // float
		constexpr auto CompassEdgeMinFade = 0x2d4; // float
		constexpr auto CompassPlayerType = 0x2d8; // USQCompassPlayer*
		constexpr auto CompassMarkerType = 0x2e0; // USQCompassMarker*
	}

	namespace n_ULandscapeWeightmapUsage { // : UObject
		constexpr auto ChannelUsage = 0x28; // ULandscapeComponent* [0x4]
		constexpr auto LayerGuid = 0x48; // FGuid
	}

	namespace n_USQMapPawnIconWidget { // : USQMapIconWidget
		constexpr auto bIsSL = 0x250; // bool
		constexpr auto bIsInSameSquad = 0x251; // bool
		constexpr auto bIsInSameTeam = 0x252; // bool
		constexpr auto CurrentTeam = 0x258; // ASQTeamState*
		constexpr auto bIsSelf = 0x260; // bool
	}

	namespace n_UBP_Attachment_SUSAT_Blur_C { // : USQWeaponAttachment_Scope
		constexpr auto MeshTransitionPercentage = 0x4b0; // float
		constexpr auto ADSMesh = 0x4b8; // UStaticMesh*
		constexpr auto ADSMeshTransform = 0x4c0; // FTransform
		constexpr auto NonADSMesh = 0x4f0; // UStaticMesh*
		constexpr auto NonADSMeshTransform = 0x500; // FTransform
		constexpr auto InToADSMeshTransitionSettings = 0x530; // TArray<FSQMeshTransitionSettings>
		constexpr auto OutFromADSMeshTransitionSettings = 0x540; // TArray<FSQMeshTransitionSettings>
	}

	namespace n_UBP_SquadStateDataMapMarker_C { // : USQSquadStateDataMapMarker
		constexpr auto Texture = 0x180; // UTexture2D*
		constexpr auto Tint = 0x188; // FLinearColor
		constexpr auto FireTeamId = 0x198; // int
	}

	namespace n_ABP_L85A2_DarkEarth_SUSAT_4mags_C { // : ABP_L85A2_DarkEarth_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
		constexpr auto Scope = 0x7b8; // UStaticMeshComponent*
	}

	namespace n_ABP_M4A1_Foregrip_Woodland_C { // : ABP_M4A1_Foregrip_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UBP_Attachment_SUSAT_C { // : USQWeaponAttachment_Scope
		constexpr auto MeshTransitionPercentage = 0x4b0; // float
		constexpr auto ADSMesh = 0x4b8; // UStaticMesh*
		constexpr auto ADSMeshTransform = 0x4c0; // FTransform
		constexpr auto NonADSMesh = 0x4f0; // UStaticMesh*
		constexpr auto NonADSMeshTransform = 0x500; // FTransform
		constexpr auto InToADSMeshTransitionSettings = 0x530; // TArray<FSQMeshTransitionSettings>
		constexpr auto OutFromADSMeshTransitionSettings = 0x540; // TArray<FSQMeshTransitionSettings>
	}

	namespace n_UDrawSphereComponent { // : USphereComponent
		constexpr auto SphereRadius = 0x420; // float
	}

	namespace n_ULightmappedSurfaceCollection { // : UObject
		constexpr auto SourceModel = 0x28; // UModel*
		constexpr auto Surfaces = 0x30; // TArray<int>
	}

	namespace n_UBP_Attachment_M68_NoAds_Woodland_C { // : UBP_Attachment_M68_C
		constexpr auto MeshTransitionPercentage = 0x4b0; // float
		constexpr auto ADSMesh = 0x4b8; // UStaticMesh*
		constexpr auto ADSMeshTransform = 0x4c0; // FTransform
		constexpr auto NonADSMesh = 0x4f0; // UStaticMesh*
		constexpr auto NonADSMeshTransform = 0x500; // FTransform
		constexpr auto InToADSMeshTransitionSettings = 0x530; // TArray<FSQMeshTransitionSettings>
		constexpr auto OutFromADSMeshTransitionSettings = 0x540; // TArray<FSQMeshTransitionSettings>
	}

	namespace n_ABP_L85A2AG36_UGL_Smoke_Blue_C { // : ABP_L85A2AG36_UGL_Smoke_Red_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UEnvQueryGenerator_Donut { // : UEnvQueryGenerator_ProjectedPoints
		constexpr auto InnerRadius = 0x80; // FAIDataProviderFloatValue
		constexpr auto OuterRadius = 0xb0; // FAIDataProviderFloatValue
		constexpr auto NumberOfRings = 0xe0; // FAIDataProviderIntValue
		constexpr auto PointsPerRing = 0x110; // FAIDataProviderIntValue
		constexpr auto ArcDirection = 0x140; // FEnvDirection
		constexpr auto ArcAngle = 0x160; // FAIDataProviderFloatValue
		constexpr auto bUseSpiralPattern = 0x190; // bool
		constexpr auto Center = 0x198; // UEnvQueryContext*
		constexpr auto bDefineArc = 0x1a0; // char : 1
	}

	namespace n_UMaterialExpressionComment { // : UMaterialExpression
		constexpr auto SizeX = 0x40; // int
		constexpr auto SizeY = 0x44; // int
		constexpr auto Text = 0x48; // FString
		constexpr auto CommentColor = 0x58; // FLinearColor
		constexpr auto FontSize = 0x68; // int
	}

	namespace n_UParticleModuleEventBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x29; // char : 1
		constexpr auto LODDuplicate = 0x29; // char : 1
		constexpr auto bSupportsRandomSeed = 0x29; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x29; // char : 1
		constexpr auto LODValidity = 0x2c; // char
	}

	namespace n_UDatasmithStaticMeshTemplate { // : UDatasmithObjectTemplate
		constexpr auto SectionInfoMap = 0x30; // FDatasmithMeshSectionInfoMapTemplate
		constexpr auto LightMapCoordinateIndex = 0x80; // int
		constexpr auto LightMapResolution = 0x84; // int
		constexpr auto BuildSettings = 0x88; // TArray<FDatasmithMeshBuildSettingsTemplate>
		constexpr auto StaticMaterials = 0x98; // TArray<FDatasmithStaticMaterialTemplate>
	}

	namespace n_USQNotificationData { // : UDataAsset
		constexpr auto NotificationLayouts = 0x30; // FSQNotificationLayout [0xb]
	}

	namespace n_UARTrackedObject { // : UARTrackedGeometry
		constexpr auto DetectedObject = 0xe8; // UARCandidateObject*
	}

	namespace n_ABP_M4_M150_Tracer_C { // : ABP_M4_M150_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_USQMapMK2 { // : USQMap
		constexpr auto TopGrid = 0x2c0; // USQGridMarkerBase*
		constexpr auto BottomGrid = 0x2c8; // USQGridMarkerBase*
		constexpr auto LeftGrid = 0x2d0; // USQGridMarkerBase*
		constexpr auto RightGrid = 0x2d8; // USQGridMarkerBase*
		constexpr auto MapCanvas = 0x2e0; // UCanvasPanel*
		constexpr auto RootMapPanel = 0x2e8; // UCanvasPanel*
	}

	namespace n_USQSoundNodeRandomStart { // : USoundNode
		constexpr auto StartMin = 0x40; // float
		constexpr auto StartMax = 0x44; // float
	}

	namespace n_UNetDriver { // : UObject
		constexpr auto NetConnectionClassName = 0x30; // FString
		constexpr auto ReplicationDriverClassName = 0x40; // FString
		constexpr auto MaxDownloadSize = 0x50; // int
		constexpr auto bClampListenServerTickRate = 0x54; // char : 1
		constexpr auto NetServerMaxTickRate = 0x58; // int
		constexpr auto MaxNetTickRate = 0x5c; // int
		constexpr auto MaxInternetClientRate = 0x60; // int
		constexpr auto MaxClientRate = 0x64; // int
		constexpr auto ServerTravelPause = 0x68; // float
		constexpr auto SpawnPrioritySeconds = 0x6c; // float
		constexpr auto RelevantTimeout = 0x70; // float
		constexpr auto KeepAliveTime = 0x74; // float
		constexpr auto InitialConnectTimeout = 0x78; // float
		constexpr auto ConnectionTimeout = 0x7c; // float
		constexpr auto TimeoutMultiplierForUnoptimizedBuilds = 0x80; // float
		constexpr auto bNoTimeouts = 0x84; // bool
		constexpr auto ServerConnection = 0x88; // UNetConnection*
		constexpr auto ClientConnections = 0x90; // TArray<UNetConnection*>
		constexpr auto RecentlyDisconnectedTrackingTime = 0x100; // int
		constexpr auto World = 0x140; // UWorld*
		constexpr auto WorldPackage = 0x148; // UPackage*
		constexpr auto NetConnectionClass = 0x170; // UObject*
		constexpr auto ReplicationDriverClass = 0x178; // UObject*
		constexpr auto RoleProperty = 0x180; // UProperty*
		constexpr auto RemoteRoleProperty = 0x188; // UProperty*
		constexpr auto NetDriverName = 0x190; // FName
		constexpr auto ChannelDefinitions = 0x1d8; // TArray<FChannelDefinition>
		constexpr auto ChannelDefinitionMap = 0x1e8; // TMap<FName, FChannelDefinition>
		constexpr auto ActorChannelPool = 0x238; // TArray<UChannel*>
		constexpr auto Time = 0x250; // float
		constexpr auto ReplicationDriver = 0x720; // UReplicationDriver*
	}

	namespace n_USQRadialDeployableButton { // : USQRadialIconButton
		constexpr auto TextUnAvailableColor = 0x410; // FLinearColor
		constexpr auto TextAvailableColor = 0x420; // FLinearColor
		constexpr auto RimAvailableColor = 0x430; // FLinearColor
		constexpr auto RimUnAvailableColor = 0x440; // FLinearColor
		constexpr auto IconUnavailableColor = 0x450; // FLinearColor
		constexpr auto InnerHoverUnavailableColor = 0x460; // FLinearColor
		constexpr auto RelatedDeployableState = 0x470; // FSQAvailabilityState_Deployable
	}

	namespace n_ASQVehicleTurret { // : ASQVehicleSeat
		constexpr auto ADSSpeed = 0x358; // float
		constexpr auto PitchLimit = 0x35c; // float
		constexpr auto MinPitchLimit = 0x360; // float
		constexpr auto YawLimit = 0x364; // float
		constexpr auto MinYawLimit = 0x368; // float
		constexpr auto ParentSeatComponent = 0x370; // USQVehicleSeatComponent*
		constexpr auto ListenerType = 0x378; // ESQListenerType
		constexpr auto bIsCameraInitialized = 0x379; // bool
		constexpr auto bShouldSendClientSideCameraUpdate = 0x37a; // bool
		constexpr auto VehicleComponents = 0x380; // TArray<USQVehicleComponent*>
		constexpr auto CachedVehicleEngine = 0x390; // USQVehicleComponent*
		constexpr auto bTurnOut = 0x398; // bool
		constexpr auto CachedVehicleInventory = 0x3a0; // USQVehicleInventoryComponent*
		constexpr auto CachedCameraComponent = 0x3a8; // UCameraComponent*
		constexpr auto SeatHealth = 0x3b0; // float
		constexpr auto FreeLookComponent = 0x3b8; // USQFreeLookComponent*
		constexpr auto MovementComponentManager = 0x3c0; // USQMovementComponentManager*
	}

	namespace n_UMaterialExpressionMakeMaterialAttributes { // : UMaterialExpression
		constexpr auto BaseColor = 0x40; // FExpressionInput
		constexpr auto Metallic = 0x54; // FExpressionInput
		constexpr auto Specular = 0x68; // FExpressionInput
		constexpr auto Roughness = 0x7c; // FExpressionInput
		constexpr auto EmissiveColor = 0x90; // FExpressionInput
		constexpr auto Opacity = 0xa4; // FExpressionInput
		constexpr auto OpacityMask = 0xb8; // FExpressionInput
		constexpr auto Normal = 0xcc; // FExpressionInput
		constexpr auto WorldPositionOffset = 0xe0; // FExpressionInput
		constexpr auto WorldDisplacement = 0xf4; // FExpressionInput
		constexpr auto TessellationMultiplier = 0x108; // FExpressionInput
		constexpr auto SubsurfaceColor = 0x11c; // FExpressionInput
		constexpr auto ClearCoat = 0x130; // FExpressionInput
		constexpr auto ClearCoatRoughness = 0x144; // FExpressionInput
		constexpr auto AmbientOcclusion = 0x158; // FExpressionInput
		constexpr auto Refraction = 0x16c; // FExpressionInput
		constexpr auto CustomizedUVs = 0x180; // FExpressionInput [0x8]
		constexpr auto PixelDepthOffset = 0x220; // FExpressionInput
		constexpr auto ShadingModel = 0x234; // FExpressionInput
	}

	namespace n_ABP_M4_M150_Woodland_C { // : ABP_M4_M150_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UPlayFabDataAPI { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnPlayFabResponse = 0x28; // FScriptMulticastDelegate
		constexpr auto CallAuthenticationContext = 0xf0; // UPlayFabAuthenticationContext*
		constexpr auto RequestJsonObj = 0xf8; // UPlayFabJsonObject*
		constexpr auto ResponseJsonObj = 0x100; // UPlayFabJsonObject*
	}

	namespace n_ABP_RPG7_Thermo_Proj2_C { // : ABP_RPG7_Tandem_Heat_Proj2_C
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto SkeletalMesh = 0x528; // USkeletalMeshComponent*
		constexpr auto BPEffectOnUnderMinFlightTime = 0x530; // UParticleSystem*
		constexpr auto BPSoundonUnderMinFlightTime = 0x538; // USoundBase*
	}

	namespace n_UBP_Attachment_1p88_C { // : USQWeaponAttachment_Scope
		constexpr auto MeshTransitionPercentage = 0x4b0; // float
		constexpr auto ADSMesh = 0x4b8; // UStaticMesh*
		constexpr auto ADSMeshTransform = 0x4c0; // FTransform
		constexpr auto NonADSMesh = 0x4f0; // UStaticMesh*
		constexpr auto NonADSMeshTransform = 0x500; // FTransform
		constexpr auto InToADSMeshTransitionSettings = 0x530; // TArray<FSQMeshTransitionSettings>
		constexpr auto OutFromADSMeshTransitionSettings = 0x540; // TArray<FSQMeshTransitionSettings>
	}

	namespace n_UProceduralFoliageTile { // : UObject
		constexpr auto FoliageSpawner = 0x28; // UProceduralFoliageSpawner*
		constexpr auto InstancesArray = 0xd0; // TArray<FProceduralFoliageInstance>
	}

	namespace n_UBP_Attachment_LeupoldScope_C { // : USQWeaponAttachment_Scope
		constexpr auto MeshTransitionPercentage = 0x4b0; // float
		constexpr auto ADSMesh = 0x4b8; // UStaticMesh*
		constexpr auto ADSMeshTransform = 0x4c0; // FTransform
		constexpr auto NonADSMesh = 0x4f0; // UStaticMesh*
		constexpr auto NonADSMeshTransform = 0x500; // FTransform
		constexpr auto InToADSMeshTransitionSettings = 0x530; // TArray<FSQMeshTransitionSettings>
		constexpr auto OutFromADSMeshTransitionSettings = 0x540; // TArray<FSQMeshTransitionSettings>
	}

	namespace n_UStereoLayerComponent { // : USceneComponent
		constexpr auto bLiveTexture = 0x218; // char : 1
		constexpr auto bSupportsDepth = 0x218; // char : 1
		constexpr auto bNoAlphaChannel = 0x218; // char : 1
		constexpr auto Texture = 0x220; // UTexture*
		constexpr auto LeftTexture = 0x228; // UTexture*
		constexpr auto bQuadPreserveTextureRatio = 0x230; // char : 1
		constexpr auto QuadSize = 0x234; // FVector2D
		constexpr auto UVRect = 0x23c; // FBox2D
		constexpr auto CylinderRadius = 0x250; // float
		constexpr auto CylinderOverlayArc = 0x254; // float
		constexpr auto CylinderHeight = 0x258; // int
		constexpr auto StereoLayerType = 0x25c; // EStereoLayerType
		constexpr auto StereoLayerShape = 0x25d; // EStereoLayerShape
		constexpr auto Priority = 0x260; // int
	}

	namespace n_AVolumetricLightmapDensityVolume { // : AVolume
		constexpr auto AllowedMipLevelRange = 0x280; // FInt32Interval
	}

	namespace n_AEmitterCameraLensEffectBase { // : AEmitter
		constexpr auto PS_CameraEffect = 0x298; // UParticleSystem*
		constexpr auto PS_CameraEffectNonExtremeContent = 0x2a0; // UParticleSystem*
		constexpr auto BaseCamera = 0x2a8; // APlayerCameraManager*
		constexpr auto RelativeTransform = 0x2b0; // FTransform
		constexpr auto BaseFOV = 0x2e0; // float
		constexpr auto bAllowMultipleInstances = 0x2e4; // char : 1
		constexpr auto bResetWhenRetriggered = 0x2e4; // char : 1
		constexpr auto EmittersToTreatAsSame = 0x2e8; // TArray<AEmitterCameraLensEffectBase*>
		constexpr auto DistFromCamera = 0x2f8; // float
	}

	namespace n_UQosRegionManager { // : UObject
		constexpr auto NumTestsPerRegion = 0x28; // int
		constexpr auto PingTimeout = 0x2c; // float
		constexpr auto RegionDefinitions = 0x30; // TArray<FQosRegionInfo>
		constexpr auto DatacenterDefinitions = 0x40; // TArray<FQosDatacenterInfo>
		constexpr auto LastCheckTimestamp = 0x50; // FDateTime
		constexpr auto Evaluator = 0x58; // UQosEvaluator*
		constexpr auto QosEvalResult = 0x60; // EQosCompletionResult
		constexpr auto RegionOptions = 0x68; // TArray<FRegionQosInstance>
		constexpr auto ForceRegionId = 0x78; // FString
		constexpr auto bRegionForcedViaCommandline = 0x88; // bool
		constexpr auto SelectedRegionId = 0x90; // FString
	}

	namespace n_UBTTask_BlackboardBase { // : UBTTaskNode
		constexpr auto BlackboardKey = 0x70; // FBlackboardKeySelector
	}

	namespace n_UMenuAnchor { // : UContentWidget
		constexpr auto MenuClass = 0x120; // UUserWidget*
		constexpr auto OnGetMenuContentEvent = 0x128; // DelegateProperty
		constexpr auto Placement = 0x138; // EMenuPlacement
		constexpr auto bFitInWindow = 0x139; // bool
		constexpr auto ShouldDeferPaintingAfterWindowContent = 0x13a; // bool
		constexpr auto UseApplicationMenuStack = 0x13b; // bool
		constexpr auto OnMenuOpenChanged = 0x140; // FScriptMulticastDelegate
	}

	namespace n_UCompositionGraphCaptureProtocol { // : UMovieSceneImageCaptureProtocolBase
		constexpr auto IncludeRenderPasses = 0x58; // FCompositionGraphCapturePasses
		constexpr auto bCaptureFramesInHDR = 0x68; // bool
		constexpr auto HDRCompressionQuality = 0x6c; // int
		constexpr auto CaptureGamut = 0x70; // EHDRCaptureGamut
		constexpr auto PostProcessingMaterial = 0x78; // FSoftObjectPath
		constexpr auto bDisableScreenPercentage = 0x90; // bool
		constexpr auto PostProcessingMaterialPtr = 0x98; // UMaterialInterface*
	}

	namespace n_UGeometryCollectionComponent { // : UMeshComponent
		constexpr auto ChaosSolverActor = 0x438; // AChaosSolverActor*
		constexpr auto RestCollection = 0x520; // UGeometryCollection*
		constexpr auto InitializationFields = 0x528; // TArray<AFieldSystemActor*>
		constexpr auto Simulating = 0x538; // bool
		constexpr auto ObjectType = 0x540; // EObjectStateTypeEnum
		constexpr auto EnableClustering = 0x541; // bool
		constexpr auto ClusterGroupIndex = 0x544; // int
		constexpr auto MaxClusterLevel = 0x548; // int
		constexpr auto DamageThreshold = 0x550; // TArray<float>
		constexpr auto ClusterConnectionType = 0x560; // EClusterConnectionTypeEnum
		constexpr auto CollisionGroup = 0x564; // int
		constexpr auto CollisionSampleFraction = 0x568; // float
		constexpr auto PhysicalMaterial = 0x570; // UChaosPhysicalMaterial*
		constexpr auto InitialVelocityType = 0x578; // EInitialVelocityTypeEnum
		constexpr auto InitialLinearVelocity = 0x57c; // FVector
		constexpr auto InitialAngularVelocity = 0x588; // FVector
		constexpr auto CacheParameters = 0x598; // FGeomComponentCacheParameters
		constexpr auto NotifyGeometryCollectionPhysicsStateChange = 0x5e8; // FScriptMulticastDelegate
		constexpr auto NotifyGeometryCollectionPhysicsLoadingStateChange = 0x5f8; // FScriptMulticastDelegate
		constexpr auto OnChaosBreakEvent = 0x638; // FScriptMulticastDelegate
		constexpr auto DesiredCacheTime = 0x648; // float
		constexpr auto CachePlayback = 0x64c; // bool
		constexpr auto OnChaosPhysicsCollision = 0x650; // FScriptMulticastDelegate
		constexpr auto bNotifyBreaks = 0x660; // bool
		constexpr auto bNotifyCollisions = 0x661; // bool
		constexpr auto DummyBodySetup = 0x810; // UBodySetup*
	}

	namespace n_AGameplayAbilityTargetActor { // : AActor
		constexpr auto ShouldProduceTargetDataOnServer = 0x248; // bool
		constexpr auto StartLocation = 0x250; // FGameplayAbilityTargetingLocationInfo
		constexpr auto MasterPC = 0x2f0; // APlayerController*
		constexpr auto OwningAbility = 0x2f8; // UGameplayAbility*
		constexpr auto bDestroyOnConfirmation = 0x300; // bool
		constexpr auto SourceActor = 0x308; // AActor*
		constexpr auto ReticleParams = 0x310; // FWorldReticleParameters
		constexpr auto ReticleClass = 0x320; // AGameplayAbilityWorldReticle*
		constexpr auto Filter = 0x328; // FGameplayTargetDataFilterHandle
		constexpr auto bDebug = 0x338; // bool
		constexpr auto GenericDelegateBoundASC = 0x350; // UAbilitySystemComponent*
	}

	namespace n_USQRotorSetup { // : UDataAsset
		constexpr auto RotorName = 0x30; // FName
		constexpr auto RotorClass = 0x38; // USQRotor*
		constexpr auto Radius = 0x40; // float
		constexpr auto Mass = 0x44; // float
		constexpr auto ThrustAxis = 0x48; // FVector
		constexpr auto ThrustVectoring = 0x54; // FVector
		constexpr auto ThrustCoefficient = 0x60; // float
		constexpr auto ThrustSocketName = 0x64; // FName
		constexpr auto TorqueMultiplier = 0x6c; // float
		constexpr auto RotationalTorqueMultiplier = 0x70; // float
		constexpr auto ThrustMultiplier = 0x74; // float
		constexpr auto AnimatedSocketName = 0x78; // FName
		constexpr auto AnimationSpeedMultiplier = 0x80; // float
		constexpr auto AnimationAxis = 0x84; // ESQAxis
		constexpr auto StartupAcceleration = 0x88; // UCurveFloat*
		constexpr auto StartupAccelerationFactor = 0x90; // float
		constexpr auto StoppingDeceleration = 0x98; // UCurveFloat*
		constexpr auto StoppingDecelerationFactor = 0xa0; // float
		constexpr auto NoInputDeceleration = 0xa8; // UCurveFloat*
		constexpr auto DecelerationMultiplier = 0xb0; // float
		constexpr auto InputAcceleration = 0xb8; // UCurveFloat*
		constexpr auto InputFactor = 0xc0; // float
		constexpr auto MaxRPM = 0xc4; // float
		constexpr auto IdleRPM = 0xc8; // float
		constexpr auto RotorType = 0xcc; // ESQRotorType
	}

	namespace n_ABP_M9_3Mags_C { // : ABP_M9_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UGeometryCacheTrackStreamable { // : UGeometryCacheTrack
		constexpr auto Codec = 0x58; // UGeometryCacheCodecBase*
		constexpr auto StartSampleTime = 0x188; // float
	}

	namespace n_UM4M203_Skeleton_AnimBlueprint_C { // : USQWeaponAnimInstance
		constexpr auto UberGraphFrame = 0x2b0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root_3627E3D5486F04AA38AA4B8C766C8BD8 = 0x2b8; // FAnimNode_Root
		constexpr auto AnimGraphNode_LayeredBoneBlend_15CFBAC7497005D8596A0AAAC39F85D4 = 0x2e8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_268573CE41CEE78662001E89A8DD012B = 0x3a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot_9A240A4745DD4DFD819ADC92DF738370 = 0x420; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_D81A3FD840E7B7326A003589436EFEB8 = 0x468; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_D316B62C4A633DD7AEEE08A0CBD99F0C = 0x4b0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SequencePlayer_5E06D0C844B713729CFEFC8DD7576BD5 = 0x4f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_BE9707734B8B29AAB8795B85A2534510 = 0x570; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_LocalRefPose_892407B5453A0BA3CCF190AB56FC6EC1 = 0x630; // FAnimNode_RefPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_8FD9CB30473F303BC10ADD85359415DE = 0x648; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_ModifyBone_4B92330C43A64B233804C98448E9D80C = 0x708; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_C40A21674CA47855605D75B6B3FF8E85 = 0x810; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_9881EF2746DBC2CEE37099AF24B09104 = 0x830; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_SequenceEvaluator_B025CD7B4785343033202D89978BA013 = 0x850; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_ModifyBone_DA251E29438C7126BB78B1AA03ADD1C9 = 0x898; // FAnimNode_ModifyBone
		constexpr auto LadderScaleAds = 0x9a0; // FVector
	}

	namespace n_USQFriendsBrowserWidget { // : USQUserWidget
		constexpr auto bCanStartNewFindFriends = 0x230; // bool
		constexpr auto CurrentCallback = 0x238; // USQFindFriendsCallbackProxy*
	}

	namespace n_ASQRepairEquipable { // : ASQEquipableItem
		constexpr auto TraceLengthCentimeters = 0x480; // float
		constexpr auto RepairTarget = 0x488; // ASQVehicle*
		constexpr auto AudioComponent = 0x490; // UAudioComponent*
	}

	namespace n_UFieldNodeInt { // : UFieldNodeBase
		constexpr auto PrimaryComponentTick = 0x30; // FActorComponentTickFunction
		constexpr auto ComponentTags = 0x88; // TArray<FName>
		constexpr auto AssetUserData = 0x98; // TArray<UAssetUserData*>
		constexpr auto bReplicates = 0xac; // char : 1
		constexpr auto bNetAddressable = 0xac; // char : 1
		constexpr auto bAutoActivate = 0xad; // char : 1
		constexpr auto bIsActive = 0xae; // char : 1
		constexpr auto bEditableWhenInherited = 0xae; // char : 1
		constexpr auto bCanEverAffectNavigation = 0xae; // char : 1
		constexpr auto bIsEditorOnly = 0xae; // char : 1
		constexpr auto CreationMethod = 0xb0; // EComponentCreationMethod
		constexpr auto OnComponentActivated = 0xb1; // FScriptMulticastDelegate
		constexpr auto OnComponentDeactivated = 0xb2; // FScriptMulticastDelegate
		constexpr auto UCSModifiedProperties = 0xb8; // TArray<FSimpleMemberReference>
	}

	namespace n_UMaterialExpressionLightVector { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_AGameplayAbilityTargetActor_GroundTrace { // : AGameplayAbilityTargetActor_Trace
		constexpr auto CollisionRadius = 0x370; // float
		constexpr auto CollisionHeight = 0x374; // float
	}

	namespace n_UBTDecorator_Loop { // : UBTDecorator
		constexpr auto NumLoops = 0x68; // int
		constexpr auto bInfiniteLoop = 0x6c; // bool
		constexpr auto InfiniteLoopTimeoutTime = 0x70; // float
	}

	namespace n_ANavMeshBoundsVolume { // : AVolume
		constexpr auto SupportedAgents = 0x280; // FNavAgentSelector
	}

	namespace n_UMaterialShaderQualitySettings { // : UObject
		constexpr auto ForwardSettingMap = 0x28; // TMap<FName, UShaderPlatformQualitySettings*>
	}

	namespace n_UMovieSceneMaterialTrack { // : UMovieSceneNameableTrack
		constexpr auto Sections = 0x58; // TArray<UMovieSceneSection*>
	}

	namespace n_UParticleModuleLocation_Seeded { // : UParticleModuleLocation
		constexpr auto RandomSeedInfo = 0x88; // FParticleRandomSeedInfo
	}

	namespace n_UMovieSceneCameraAnimTrack { // : UMovieSceneNameableTrack
		constexpr auto CameraAnimSections = 0x58; // TArray<UMovieSceneSection*>
	}

	namespace n_UBreakpoint { // : UObject
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto Node = 0x30; // UEdGraphNode*
		constexpr auto bStepOnce = 0x38; // char : 1
		constexpr auto bStepOnce_WasPreviouslyDisabled = 0x38; // char : 1
		constexpr auto bStepOnce_RemoveAfterHit = 0x38; // char : 1
	}

	namespace n_ABP_RPG7_Heat_2mag_Founders_C { // : ABP_RPG7_Heat_Founders_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
		constexpr auto MuzzleFlashRearComponent3P = 0x7b8; // UParticleSystemComponent*
		constexpr auto BackBlastComponent3P = 0x7c0; // UChildActorComponent*
		constexpr auto MuzzleFlashRearComponent1P = 0x7c8; // UParticleSystemComponent*
		constexpr auto SquadBlast = 0x7d0; // USQBlastComponent*
		constexpr auto BackBlastComponent1P = 0x7d8; // UChildActorComponent*
		constexpr auto BackblastSocket = 0x7e0; // FName
		constexpr auto BackblastEffect1P = 0x7e8; // UParticleSystem*
		constexpr auto BackblastEffect3P = 0x7f0; // UParticleSystem*
	}

	namespace n_ABP_L85A2_DarkEarth_C { // : ABP_GenericRifle_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UParticleModuleCameraBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x29; // char : 1
		constexpr auto LODDuplicate = 0x29; // char : 1
		constexpr auto bSupportsRandomSeed = 0x29; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x29; // char : 1
		constexpr auto LODValidity = 0x2c; // char
	}

	namespace n_UMaterialExpressionMaterialAttributeLayers { // : UMaterialExpression
		constexpr auto ParameterName = 0x40; // FName
		constexpr auto ExpressionGUID = 0x48; // FGuid
		constexpr auto Input = 0x58; // FMaterialAttributesInput
		constexpr auto DefaultLayers = 0x70; // FMaterialLayersFunctions
		constexpr auto LayerCallers = 0xb0; // TArray<UMaterialExpressionMaterialFunctionCall*>
		constexpr auto NumActiveLayerCallers = 0xc0; // int
		constexpr auto BlendCallers = 0xc8; // TArray<UMaterialExpressionMaterialFunctionCall*>
		constexpr auto NumActiveBlendCallers = 0xd8; // int
		constexpr auto bIsLayerGraphBuilt = 0xdc; // bool
	}

	namespace n_USQRoleListUnit { // : USQUserWidget
		constexpr auto bCanTick = 0x230; // bool
		constexpr auto SizeCanvas = 0x238; // UCanvasPanel*
		constexpr auto MainBgImage = 0x240; // UImage*
		constexpr auto KitNameBgImage = 0x248; // UImage*
		constexpr auto KitIcon = 0x250; // UImage*
		constexpr auto SpecialIcon = 0x258; // UImage*
		constexpr auto KitNameTextBlock = 0x260; // UTextBlock*
		constexpr auto KitCountTeamTextBlock = 0x268; // UTextBlock*
		constexpr auto KitCountTextBlock = 0x270; // UTextBlock*
		constexpr auto RoleToolTipWidgetClass = 0x278; // UUserWidget*
		constexpr auto BgColorSelectedRole = 0x280; // FLinearColor
		constexpr auto BgColorNotAvaliable = 0x290; // FLinearColor
		constexpr auto BgColorNotSelectedRole = 0x2a0; // FLinearColor
		constexpr auto ColorKitIconAvailable = 0x2b0; // FLinearColor
		constexpr auto ColorKitIconUnavailable = 0x2c0; // FLinearColor
		constexpr auto SquadLeaderAbilityIcon = 0x2d0; // UTexture2D*
		constexpr auto MedicAbilityIcon = 0x2d8; // UTexture2D*
		constexpr auto RoleReference = 0x2e0; // USQRoleSettings*
		constexpr auto OwnerPlayerController = 0x2e8; // ASQPlayerController*
		constexpr auto OpenAnimation = 0x2f0; // UWidgetAnimation*
		constexpr auto MouseEnterSoundCue = 0x2f8; // USoundCue*
	}

	namespace n_ULandscapeComponent { // : UPrimitiveComponent
		constexpr auto SectionBaseX = 0x408; // int
		constexpr auto SectionBaseY = 0x40c; // int
		constexpr auto ComponentSizeQuads = 0x410; // int
		constexpr auto SubsectionSizeQuads = 0x414; // int
		constexpr auto NumSubsections = 0x418; // int
		constexpr auto OverrideMaterial = 0x420; // UMaterialInterface*
		constexpr auto OverrideHoleMaterial = 0x428; // UMaterialInterface*
		constexpr auto OverrideMaterials = 0x430; // TArray<FLandscapeComponentMaterialOverride>
		constexpr auto MaterialInstances = 0x440; // TArray<UMaterialInstanceConstant*>
		constexpr auto MaterialInstancesDynamic = 0x450; // TArray<UMaterialInstanceDynamic*>
		constexpr auto LODIndexToMaterialIndex = 0x460; // TArray<uint8>
		constexpr auto MaterialIndexToDisabledTessellationMaterial = 0x470; // TArray<uint8>
		constexpr auto XYOffsetmapTexture = 0x480; // UTexture2D*
		constexpr auto WeightmapScaleBias = 0x490; // FVector4
		constexpr auto WeightmapSubsectionOffset = 0x4a0; // float
		constexpr auto HeightmapScaleBias = 0x4b0; // FVector4
		constexpr auto CachedLocalBox = 0x4c0; // FBox
		constexpr auto CollisionComponent = 0x4dc; // ULandscapeHeightfieldCollisionComponent*
		constexpr auto HeightmapTexture = 0x4f8; // UTexture2D*
		constexpr auto WeightmapLayerAllocations = 0x500; // TArray<FWeightmapLayerAllocationInfo>
		constexpr auto WeightmapTextures = 0x510; // TArray<UTexture2D*>
		constexpr auto MapBuildDataId = 0x520; // FGuid
		constexpr auto IrrelevantLights = 0x530; // TArray<FGuid>
		constexpr auto CollisionMipLevel = 0x540; // int
		constexpr auto SimpleCollisionMipLevel = 0x544; // int
		constexpr auto NegativeZBoundsExtension = 0x548; // float
		constexpr auto PositiveZBoundsExtension = 0x54c; // float
		constexpr auto StaticLightingResolution = 0x550; // float
		constexpr auto ForcedLOD = 0x554; // int
		constexpr auto LODBias = 0x558; // int
		constexpr auto StateId = 0x55c; // FGuid
		constexpr auto BakedTextureMaterialGuid = 0x56c; // FGuid
		constexpr auto GIBakedBaseColorTexture = 0x580; // UTexture2D*
		constexpr auto MobileBlendableLayerMask = 0x588; // char
		constexpr auto MobileMaterialInterface = 0x590; // UMaterialInterface*
		constexpr auto MobileMaterialInterfaces = 0x598; // TArray<UMaterialInterface*>
		constexpr auto MobileWeightmapTextures = 0x5a8; // TArray<UTexture2D*>
	}

	namespace n_USQMovementComponentBase { // : UActorComponent
		constexpr auto MaxMoveDeltaTime = 0xf8; // float
		constexpr auto VectorEqualityTolerance = 0xfc; // float
		constexpr auto AccelDotThresholdCombine = 0x100; // float
		constexpr auto AccelDotThreshold = 0x104; // float
		constexpr auto AccelMagThreshold = 0x108; // float
		constexpr auto AngularErrorTolerance = 0x10c; // float
		constexpr auto NetworkMaxSmoothUpdateDistance = 0x110; // float
		constexpr auto MinCorrectionDelay = 0x114; // float
		constexpr auto NetworkNoSmoothUpdateDistance = 0x118; // float
		constexpr auto LocationQuantizationLevel = 0x11c; // EVectorQuantization
		constexpr auto VelocityQuantizationLevel = 0x11d; // EVectorQuantization
		constexpr auto AccelerationQuantizationLevel = 0x11e; // EVectorQuantization
		constexpr auto RotationQuantizationLevel = 0x11f; // ERotatorQuantization
		constexpr auto OwnerActor = 0x120; // AActor*
		constexpr auto Controller = 0x128; // AController*
		constexpr auto ReplicatedMovement = 0x178; // FSQRepMovement
		constexpr auto MaxSpeed = 0x1b8; // float
	}

	namespace n_UPlayFabGroupsAPI { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnPlayFabResponse = 0x28; // FScriptMulticastDelegate
		constexpr auto CallAuthenticationContext = 0x210; // UPlayFabAuthenticationContext*
		constexpr auto RequestJsonObj = 0x218; // UPlayFabJsonObject*
		constexpr auto ResponseJsonObj = 0x220; // UPlayFabJsonObject*
	}

	namespace n_AQosBeaconClient { // : AOnlineBeaconClient
		constexpr auto BeaconOwner = 0x278; // AOnlineBeaconHostObject*
		constexpr auto BeaconConnection = 0x280; // UNetConnection*
		constexpr auto ConnectionState = 0x288; // EBeaconConnectionState
	}

	namespace n_ABP_AK74_Recruit_Founders_C { // : ABP_AK74_Recruit_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UMovementComponent { // : UActorComponent
		constexpr auto UpdatedComponent = 0xd8; // USceneComponent*
		constexpr auto UpdatedPrimitive = 0xe0; // UPrimitiveComponent*
		constexpr auto Velocity = 0xec; // FVector
		constexpr auto PlaneConstraintNormal = 0xf8; // FVector
		constexpr auto PlaneConstraintOrigin = 0x104; // FVector
		constexpr auto bUpdateOnlyIfRendered = 0x110; // char : 1
		constexpr auto bAutoUpdateTickRegistration = 0x110; // char : 1
		constexpr auto bTickBeforeOwner = 0x110; // char : 1
		constexpr auto bAutoRegisterUpdatedComponent = 0x110; // char : 1
		constexpr auto bConstrainToPlane = 0x110; // char : 1
		constexpr auto bSnapToPlaneAtStart = 0x110; // char : 1
		constexpr auto bAutoRegisterPhysicsVolumeUpdates = 0x110; // char : 1
		constexpr auto bComponentShouldUpdatePhysicsVolume = 0x110; // char : 1
		constexpr auto PlaneConstraintAxisSetting = 0x113; // EPlaneConstraintAxisSetting
	}

	namespace n_UParticleModuleEventReceiverSpawn { // : UParticleModuleEventReceiverBase
		constexpr auto SpawnCount = 0x40; // FRawDistributionFloat
		constexpr auto bUseParticleTime = 0x78; // char : 1
		constexpr auto bUsePSysLocation = 0x78; // char : 1
		constexpr auto bInheritVelocity = 0x78; // char : 1
		constexpr auto InheritVelocityScale = 0x80; // FRawDistributionVector
		constexpr auto PhysicalMaterials = 0xd0; // TArray<UPhysicalMaterial*>
		constexpr auto bBanPhysicalMaterials = 0xe0; // char : 1
	}

	namespace n_ABP_L85A2_Foregrip_C { // : ABP_L85A2_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UParticleModulePivotOffset { // : UParticleModuleLocationBase
		constexpr auto PivotOffset = 0x30; // FVector2D
	}

	namespace n_UNavMeshRenderingComponent { // : UPrimitiveComponent
		constexpr auto MinDrawDistance = 0x220; // float
		constexpr auto LDMaxDrawDistance = 0x224; // float
		constexpr auto CachedMaxDrawDistance = 0x228; // float
		constexpr auto DepthPriorityGroup = 0x22c; // ESceneDepthPriorityGroup
		constexpr auto ViewOwnerDepthPriorityGroup = 0x22d; // ESceneDepthPriorityGroup
		constexpr auto IndirectLightingCacheQuality = 0x22e; // EIndirectLightingCacheQuality
		constexpr auto LightmapType = 0x22f; // ELightmapType
		constexpr auto bUseMaxLODAsImposter = 0x230; // char : 1
		constexpr auto bNeverDistanceCull = 0x230; // char : 1
		constexpr auto bAlwaysCreatePhysicsState = 0x230; // char : 1
		constexpr auto bGenerateOverlapEvents = 0x230; // char : 1
		constexpr auto bGenerateLocalOverlapEvents = 0x231; // char : 1
		constexpr auto bMultiBodyOverlap = 0x231; // char : 1
		constexpr auto bTraceComplexOnMove = 0x231; // char : 1
		constexpr auto bReturnMaterialOnMove = 0x231; // char : 1
		constexpr auto bUseViewOwnerDepthPriorityGroup = 0x231; // char : 1
		constexpr auto bAllowCullDistanceVolume = 0x231; // char : 1
		constexpr auto bHasMotionBlurVelocityMeshes = 0x231; // char : 1
		constexpr auto bVisibleInReflectionCaptures = 0x232; // char : 1
		constexpr auto bVisibleInRayTracing = 0x232; // char : 1
		constexpr auto bRenderInMainPass = 0x232; // char : 1
		constexpr auto bReceivesDecals = 0x232; // char : 1
		constexpr auto bOwnerNoSee = 0x232; // char : 1
		constexpr auto bOnlyOwnerSee = 0x232; // char : 1
		constexpr auto bTreatAsBackgroundForOcclusion = 0x232; // char : 1
		constexpr auto bUseAsOccluder = 0x232; // char : 1
		constexpr auto bSelectable = 0x233; // char : 1
		constexpr auto bForceMipStreaming = 0x233; // char : 1
		constexpr auto bHasPerInstanceHitProxies = 0x233; // char : 1
		constexpr auto CastShadow = 0x233; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x233; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x233; // char : 1
		constexpr auto bCastDynamicShadow = 0x233; // char : 1
		constexpr auto bCastStaticShadow = 0x233; // char : 1
		constexpr auto bCastVolumetricTranslucentShadow = 0x234; // char : 1
		constexpr auto bSelfShadowOnly = 0x234; // char : 1
		constexpr auto bCastFarShadow = 0x234; // char : 1
		constexpr auto bCastInsetShadow = 0x234; // char : 1
		constexpr auto bCastCinematicShadow = 0x234; // char : 1
		constexpr auto bCastHiddenShadow = 0x234; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x234; // char : 1
		constexpr auto bLightAsIfStatic = 0x234; // char : 1
		constexpr auto bLightAttachmentsAsGroup = 0x235; // char : 1
		constexpr auto bReceiveMobileCSMShadows = 0x235; // char : 1
		constexpr auto bSingleSampleShadowFromStationaryLights = 0x235; // char : 1
		constexpr auto bIgnoreRadialImpulse = 0x235; // char : 1
		constexpr auto bIgnoreRadialForce = 0x235; // char : 1
		constexpr auto bApplyImpulseOnDamage = 0x235; // char : 1
		constexpr auto bReplicatePhysicsToAutonomousProxy = 0x235; // char : 1
		constexpr auto AlwaysLoadOnClient = 0x235; // char : 1
		constexpr auto AlwaysLoadOnServer = 0x236; // char : 1
		constexpr auto bUseEditorCompositing = 0x236; // char : 1
		constexpr auto bRenderCustomDepth = 0x236; // char : 1
		constexpr auto bHasCustomNavigableGeometry = 0x237; // EHasCustomNavigableGeometry
		constexpr auto CanCharacterStepUpOn = 0x239; // ECanBeCharacterBase
		constexpr auto LightingChannels = 0x23a; // FLightingChannels
		constexpr auto CustomDepthStencilWriteMask = 0x23b; // ERendererStencilMask
		constexpr auto CustomDepthStencilValue = 0x23c; // int
		constexpr auto CustomPrimitiveData = 0x240; // FCustomPrimitiveData
		constexpr auto TranslucencySortPriority = 0x250; // int
		constexpr auto VisibilityId = 0x254; // int
		constexpr auto RuntimeVirtualTextures = 0x258; // TArray<URuntimeVirtualTexture*>
		constexpr auto VirtualTextureLodBias = 0x268; // int
		constexpr auto VirtualTextureCullMips = 0x26c; // int
		constexpr auto VirtualTextureMinCoverage = 0x270; // int
		constexpr auto VirtualTextureRenderPassType = 0x274; // ERuntimeVirtualTextureMainPassType
		constexpr auto LpvBiasMultiplier = 0x27c; // float
		constexpr auto BoundsScale = 0x288; // float
		constexpr auto MoveIgnoreActors = 0x298; // TArray<AActor*>
		constexpr auto MoveIgnoreComponents = 0x2a8; // TArray<UPrimitiveComponent*>
		constexpr auto BodyInstance = 0x2c8; // FBodyInstance
		constexpr auto OnComponentHit = 0x3d8; // FScriptMulticastDelegate
		constexpr auto OnComponentBeginOverlap = 0x3d9; // FScriptMulticastDelegate
		constexpr auto OnComponentEndOverlap = 0x3da; // FScriptMulticastDelegate
		constexpr auto OnComponentWake = 0x3db; // FScriptMulticastDelegate
		constexpr auto OnComponentSleep = 0x3dc; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x3de; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x3df; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x3e0; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x3e1; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x3e2; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x3e3; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x3e4; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x3e5; // FScriptMulticastDelegate
		constexpr auto LODParentPrimitive = 0x400; // UPrimitiveComponent*
	}

	namespace n_UGameplayEffect { // : UObject
		constexpr auto DurationPolicy = 0x30; // EGameplayEffectDurationType
		constexpr auto DurationMagnitude = 0x38; // FGameplayEffectModifierMagnitude
		constexpr auto Period = 0x1c8; // FScalableFloat
		constexpr auto bExecutePeriodicEffectOnApplication = 0x1e8; // bool
		constexpr auto PeriodicInhibitionPolicy = 0x1e9; // EGameplayEffectPeriodInhibitionRemovedPolicy
		constexpr auto Modifiers = 0x1f0; // TArray<FGameplayModifierInfo>
		constexpr auto Executions = 0x200; // TArray<FGameplayEffectExecutionDefinition>
		constexpr auto ChanceToApplyToTarget = 0x210; // FScalableFloat
		constexpr auto ApplicationRequirements = 0x230; // TArray<UGameplayEffectCustomApplicationRequirement*>
		constexpr auto TargetEffectClasses = 0x240; // TArray<UGameplayEffect*>
		constexpr auto ConditionalGameplayEffects = 0x250; // TArray<FConditionalGameplayEffect>
		constexpr auto OverflowEffects = 0x260; // TArray<UGameplayEffect*>
		constexpr auto bDenyOverflowApplication = 0x270; // bool
		constexpr auto bClearStackOnOverflow = 0x271; // bool
		constexpr auto PrematureExpirationEffectClasses = 0x278; // TArray<UGameplayEffect*>
		constexpr auto RoutineExpirationEffectClasses = 0x288; // TArray<UGameplayEffect*>
		constexpr auto bRequireModifierSuccessToTriggerCues = 0x298; // bool
		constexpr auto bSuppressStackingCues = 0x299; // bool
		constexpr auto GameplayCues = 0x2a0; // TArray<FGameplayEffectCue>
		constexpr auto UIData = 0x2b0; // UGameplayEffectUIData*
		constexpr auto InheritableGameplayEffectTags = 0x2b8; // FInheritedTagContainer
		constexpr auto InheritableOwnedTagsContainer = 0x318; // FInheritedTagContainer
		constexpr auto OngoingTagRequirements = 0x378; // FGameplayTagRequirements
		constexpr auto ApplicationTagRequirements = 0x3b8; // FGameplayTagRequirements
		constexpr auto RemoveGameplayEffectsWithTags = 0x3f8; // FInheritedTagContainer
		constexpr auto GrantedApplicationImmunityTags = 0x458; // FGameplayTagRequirements
		constexpr auto GrantedApplicationImmunityQuery = 0x498; // FGameplayEffectQuery
		constexpr auto StackingType = 0x5d1; // EGameplayEffectStackingType
		constexpr auto StackLimitCount = 0x5d4; // int
		constexpr auto StackDurationRefreshPolicy = 0x5d8; // EGameplayEffectStackingDurationPolicy
		constexpr auto StackPeriodResetPolicy = 0x5d9; // EGameplayEffectStackingPeriodPolicy
		constexpr auto StackExpirationPolicy = 0x5da; // EGameplayEffectStackingExpirationPolicy
		constexpr auto GrantedAbilities = 0x5e0; // TArray<FGameplayAbilitySpecDef>
	}

	namespace n_USQScoreboardWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto ScoreboardStyle = 0x30; // FSQScoreboardStyle
	}

	namespace n_UBP_AK74MGP25_UGL_Optic_Parent_StaticInfo_C { // : UBP_AK74GP25_UGL_Parent_StaticInfo_C
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_UMultiPackerTextureNode { // : UObject
		constexpr auto TextureInput = 0x38; // UTexture*
		constexpr auto SDF = 0x40; // bool
		constexpr auto SDF_Radius = 0x44; // int
		constexpr auto MSDF = 0x48; // bool
		constexpr auto TilesVertical = 0x4c; // int
		constexpr auto TilesHorizontal = 0x50; // int
		constexpr auto RectangleSize = 0x54; // bool
		constexpr auto AutoSizeFill = 0x55; // ESizeTexture
		constexpr auto SetSizeByParameter = 0x56; // ETextureSizeOutputPersonal
		constexpr auto SizeVertical = 0x58; // int
		constexpr auto SizeHorizontal = 0x5c; // int
		constexpr auto AutoNameFill = 0x60; // ENameTexture
		constexpr auto ATexTileData = 0x68; // TArray<FTileThumbDatabase>
		constexpr auto Thumbnails = 0x78; // TArray<UTilePointer*>
	}

	namespace n_USQSoundNodePhysMatSwitch { // : USoundNode
		constexpr auto TestPhysMatIndex = 0x40; // int
		constexpr auto bPlayDefaultSoundIfPinIsEmpty = 0x44; // bool
		constexpr auto PhysMatInputs = 0x48; // TArray<UPhysicalMaterial*>
	}

	namespace n_UCapsuleComponent { // : UShapeComponent
		constexpr auto CapsuleHalfHeight = 0x420; // float
		constexpr auto CapsuleRadius = 0x424; // float
	}

	namespace n_UMaterialFunctionMaterialLayer { // : UMaterialFunction
		constexpr auto Description = 0x40; // FString
		constexpr auto bExposeToLibrary = 0x50; // char : 1
		constexpr auto bPrefixParameterNames = 0x50; // char : 1
		constexpr auto FunctionExpressions = 0x58; // TArray<UMaterialExpression*>
		constexpr auto bReentrantFlag = 0x68; // char : 1
	}

	namespace n_UAbilityTask_WaitGameplayTagRemoved { // : UAbilityTask_WaitGameplayTag
		constexpr auto Removed = 0xa8; // FScriptMulticastDelegate
	}

	namespace n_USQScoreboardTeamScore { // : USQUserWidget
		constexpr auto EndOfRoundPanel = 0x230; // UHorizontalBox*
		constexpr auto NotEndOfRoundSpacer = 0x238; // USpacer*
		constexpr auto KillsText = 0x240; // UTextBlock*
		constexpr auto IncapsText = 0x248; // UTextBlock*
		constexpr auto DeathsText = 0x250; // UTextBlock*
		constexpr auto RevivesText = 0x258; // UTextBlock*
		constexpr auto HealsText = 0x260; // UTextBlock*
		constexpr auto TeamworkText = 0x268; // UTextBlock*
		constexpr auto ObjectivesText = 0x270; // UTextBlock*
		constexpr auto ScoreText = 0x278; // UTextBlock*
	}

	namespace n_UBP_Attachment_1p63_Blur_C { // : USQWeaponAttachment_Scope
		constexpr auto MeshTransitionPercentage = 0x4b0; // float
		constexpr auto ADSMesh = 0x4b8; // UStaticMesh*
		constexpr auto ADSMeshTransform = 0x4c0; // FTransform
		constexpr auto NonADSMesh = 0x4f0; // UStaticMesh*
		constexpr auto NonADSMeshTransform = 0x500; // FTransform
		constexpr auto InToADSMeshTransitionSettings = 0x530; // TArray<FSQMeshTransitionSettings>
		constexpr auto OutFromADSMeshTransitionSettings = 0x540; // TArray<FSQMeshTransitionSettings>
	}

	namespace n_ABP_40MM_VOG_Smoke_Red_Proj2_C { // : ABP_40MM_VOG_Smoke_Proj2_C
		constexpr auto Effect = 0x548; // UParticleSystemComponent*
		constexpr auto SmokeEffect = 0x550; // UParticleSystem*
		constexpr auto SmokeSound = 0x558; // USoundCue*
	}

	namespace n_ABP_L85A2AG36_ElcanLDS_UGL_DarkEarth_Smoke_Red_C { // : ABP_L85A2AG36_ElcanLDS_UGL_DarkEarth_Smoke_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_ABP_AK74M_C { // : ABP_AK74_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UGameplayCueManager { // : UDataAsset
		constexpr auto RuntimeGameplayCueObjectLibrary = 0x48; // FGameplayCueObjectLibrary
		constexpr auto EditorGameplayCueObjectLibrary = 0x98; // FGameplayCueObjectLibrary
		constexpr auto LoadedGameplayCueNotifyClasses = 0x2b0; // TArray<UObject*>
		constexpr auto GameplayCueClassesForPreallocation = 0x2c0; // TArray<AGameplayCueNotify_Actor*>
		constexpr auto PendingExecuteCues = 0x2d0; // TArray<FGameplayCuePendingExecute>
		constexpr auto GameplayCueSendContextCount = 0x2e0; // int
		constexpr auto PreallocationInfoList_Internal = 0x2e8; // TArray<FPreallocationInfo>
	}

	namespace n_UVisibilityBinding { // : UPropertyBinding
		constexpr auto SourceObject = 0x28; // TWeakObjectPtr<UObject>
		constexpr auto SourcePath = 0x30; // FDynamicPropertyPath
		constexpr auto DestinationProperty = 0x60; // FName
	}

	namespace n_ASQSquadRallyPoint { // : ASQGameRallyPoint
		constexpr auto AuthoritySquad = 0x440; // ASQSquad*
		constexpr auto SquadState = 0x448; // ASQSquadState*
	}

	namespace n_UEnvQueryTest_Pathfinding { // : UEnvQueryTest
		constexpr auto TestMode = 0x1c0; // EEnvTestPathfinding
		constexpr auto Context = 0x1c8; // UEnvQueryContext*
		constexpr auto PathFromContext = 0x1d0; // FAIDataProviderBoolValue
		constexpr auto SkipUnreachable = 0x200; // FAIDataProviderBoolValue
		constexpr auto FilterClass = 0x230; // UNavigationQueryFilter*
	}

	namespace n_UParticleModuleParameterDynamic_Seeded { // : UParticleModuleParameterDynamic
		constexpr auto RandomSeedInfo = 0x48; // FParticleRandomSeedInfo
	}

	namespace n_UReplicationGraph { // : UReplicationDriver
		constexpr auto ReplicationConnectionManagerClass = 0x28; // UNetReplicationGraphConnection*
		constexpr auto NetDriver = 0x30; // UNetDriver*
		constexpr auto Connections = 0x38; // TArray<UNetReplicationGraphConnection*>
		constexpr auto PendingConnections = 0x48; // TArray<UNetReplicationGraphConnection*>
		constexpr auto GlobalGraphNodes = 0x98; // TArray<UReplicationGraphNode*>
		constexpr auto PrepareForReplicationNodes = 0xa8; // TArray<UReplicationGraphNode*>
	}

	namespace n_UMovieSceneActorReferenceSection { // : UMovieSceneSection
		constexpr auto ActorReferenceData = 0xe0; // FMovieSceneActorReferenceData
		constexpr auto ActorGuidIndexCurve = 0x180; // FIntegralCurve
		constexpr auto ActorGuidStrings = 0x200; // TArray<FString>
	}

	namespace n_USQBasicMoveComponent { // : USQNetMoveComponent
		constexpr auto MovementSpeed = 0x250; // float
	}

	namespace n_UCanvasRenderTarget2D { // : UTextureRenderTarget2D
		constexpr auto OnCanvasRenderTargetUpdate = 0x100; // FScriptMulticastDelegate
		constexpr auto World = 0x110; // TWeakObjectPtr<UWorld>
		constexpr auto bShouldClearRenderTargetOnReceiveUpdate = 0x118; // bool
	}

	namespace n_USQMapWidgetCameraman { // : USQMapWidgetPawn
		constexpr auto bIsOwned = 0x2a8; // char : 1
		constexpr auto bIsOwnedBySelf = 0x2a8; // char : 1
		constexpr auto bIsInSelfTeam = 0x2a8; // char : 1
		constexpr auto bIsInSelfSquad = 0x2a8; // char : 1
		constexpr auto FireTeamIndex = 0x2ac; // int
		constexpr auto CameraRotationYaw = 0x2b0; // float
		constexpr auto IsSelfZOrder = 0x2b4; // float
	}

	namespace n_USkeleton { // : UObject
		constexpr auto BoneTree = 0x38; // TArray<FBoneNode>
		constexpr auto RefLocalPoses = 0x48; // TArray<FTransform>
		constexpr auto VirtualBoneGuid = 0x170; // FGuid
		constexpr auto VirtualBones = 0x180; // TArray<FVirtualBone>
		constexpr auto Sockets = 0x190; // TArray<USkeletalMeshSocket*>
		constexpr auto SmartNames = 0x1f0; // FSmartNameContainer
		constexpr auto BlendProfiles = 0x268; // TArray<UBlendProfile*>
		constexpr auto SlotGroups = 0x278; // TArray<FAnimSlotGroup>
		constexpr auto AssetUserData = 0x350; // TArray<UAssetUserData*>
	}

	namespace n_UBTDecorator_TimeLimit { // : UBTDecorator
		constexpr auto TimeLimit = 0x68; // float
	}

	namespace n_UBP_SVDM_StaticInfo_C { // : UBP_GenericWeapon_StaticInfo_C
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_USmokeTestCommandlet { // : UCommandlet
		constexpr auto HelpDescription = 0x28; // FString
		constexpr auto HelpUsage = 0x38; // FString
		constexpr auto HelpWebLink = 0x48; // FString
		constexpr auto HelpParamNames = 0x58; // TArray<FString>
		constexpr auto HelpParamDescriptions = 0x68; // TArray<FString>
		constexpr auto IsServer = 0x78; // char : 1
		constexpr auto IsClient = 0x78; // char : 1
		constexpr auto IsEditor = 0x78; // char : 1
		constexpr auto LogToConsole = 0x78; // char : 1
		constexpr auto ShowErrorCount = 0x78; // char : 1
		constexpr auto ShowProgress = 0x78; // char : 1
	}

	namespace n_UMaterialExpressionAppendVector { // : UMaterialExpression
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_ABP_AK74M_1P63_C { // : ABP_AK74M_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UMaterialFunction { // : UMaterialFunctionInterface
		constexpr auto Description = 0x40; // FString
		constexpr auto bExposeToLibrary = 0x50; // char : 1
		constexpr auto bPrefixParameterNames = 0x50; // char : 1
		constexpr auto FunctionExpressions = 0x58; // TArray<UMaterialExpression*>
		constexpr auto bReentrantFlag = 0x68; // char : 1
	}

	namespace n_ABP_M4M203_Rifle_M150_C { // : ABP_M4M203_Rifle_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
		constexpr auto LScale = 0x7b8; // FVector
	}

	namespace n_UPrimitiveComponent { // : USceneComponent
		constexpr auto MinDrawDistance = 0x220; // float
		constexpr auto LDMaxDrawDistance = 0x224; // float
		constexpr auto CachedMaxDrawDistance = 0x228; // float
		constexpr auto DepthPriorityGroup = 0x22c; // ESceneDepthPriorityGroup
		constexpr auto ViewOwnerDepthPriorityGroup = 0x22d; // ESceneDepthPriorityGroup
		constexpr auto IndirectLightingCacheQuality = 0x22e; // EIndirectLightingCacheQuality
		constexpr auto LightmapType = 0x22f; // ELightmapType
		constexpr auto bUseMaxLODAsImposter = 0x230; // char : 1
		constexpr auto bNeverDistanceCull = 0x230; // char : 1
		constexpr auto bAlwaysCreatePhysicsState = 0x230; // char : 1
		constexpr auto bGenerateOverlapEvents = 0x230; // char : 1
		constexpr auto bGenerateLocalOverlapEvents = 0x231; // char : 1
		constexpr auto bMultiBodyOverlap = 0x231; // char : 1
		constexpr auto bTraceComplexOnMove = 0x231; // char : 1
		constexpr auto bReturnMaterialOnMove = 0x231; // char : 1
		constexpr auto bUseViewOwnerDepthPriorityGroup = 0x231; // char : 1
		constexpr auto bAllowCullDistanceVolume = 0x231; // char : 1
		constexpr auto bHasMotionBlurVelocityMeshes = 0x231; // char : 1
		constexpr auto bVisibleInReflectionCaptures = 0x232; // char : 1
		constexpr auto bVisibleInRayTracing = 0x232; // char : 1
		constexpr auto bRenderInMainPass = 0x232; // char : 1
		constexpr auto bReceivesDecals = 0x232; // char : 1
		constexpr auto bOwnerNoSee = 0x232; // char : 1
		constexpr auto bOnlyOwnerSee = 0x232; // char : 1
		constexpr auto bTreatAsBackgroundForOcclusion = 0x232; // char : 1
		constexpr auto bUseAsOccluder = 0x232; // char : 1
		constexpr auto bSelectable = 0x233; // char : 1
		constexpr auto bForceMipStreaming = 0x233; // char : 1
		constexpr auto bHasPerInstanceHitProxies = 0x233; // char : 1
		constexpr auto CastShadow = 0x233; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x233; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x233; // char : 1
		constexpr auto bCastDynamicShadow = 0x233; // char : 1
		constexpr auto bCastStaticShadow = 0x233; // char : 1
		constexpr auto bCastVolumetricTranslucentShadow = 0x234; // char : 1
		constexpr auto bSelfShadowOnly = 0x234; // char : 1
		constexpr auto bCastFarShadow = 0x234; // char : 1
		constexpr auto bCastInsetShadow = 0x234; // char : 1
		constexpr auto bCastCinematicShadow = 0x234; // char : 1
		constexpr auto bCastHiddenShadow = 0x234; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x234; // char : 1
		constexpr auto bLightAsIfStatic = 0x234; // char : 1
		constexpr auto bLightAttachmentsAsGroup = 0x235; // char : 1
		constexpr auto bReceiveMobileCSMShadows = 0x235; // char : 1
		constexpr auto bSingleSampleShadowFromStationaryLights = 0x235; // char : 1
		constexpr auto bIgnoreRadialImpulse = 0x235; // char : 1
		constexpr auto bIgnoreRadialForce = 0x235; // char : 1
		constexpr auto bApplyImpulseOnDamage = 0x235; // char : 1
		constexpr auto bReplicatePhysicsToAutonomousProxy = 0x235; // char : 1
		constexpr auto AlwaysLoadOnClient = 0x235; // char : 1
		constexpr auto AlwaysLoadOnServer = 0x236; // char : 1
		constexpr auto bUseEditorCompositing = 0x236; // char : 1
		constexpr auto bRenderCustomDepth = 0x236; // char : 1
		constexpr auto bHasCustomNavigableGeometry = 0x237; // EHasCustomNavigableGeometry
		constexpr auto CanCharacterStepUpOn = 0x239; // ECanBeCharacterBase
		constexpr auto LightingChannels = 0x23a; // FLightingChannels
		constexpr auto CustomDepthStencilWriteMask = 0x23b; // ERendererStencilMask
		constexpr auto CustomDepthStencilValue = 0x23c; // int
		constexpr auto CustomPrimitiveData = 0x240; // FCustomPrimitiveData
		constexpr auto TranslucencySortPriority = 0x250; // int
		constexpr auto VisibilityId = 0x254; // int
		constexpr auto RuntimeVirtualTextures = 0x258; // TArray<URuntimeVirtualTexture*>
		constexpr auto VirtualTextureLodBias = 0x268; // int
		constexpr auto VirtualTextureCullMips = 0x26c; // int
		constexpr auto VirtualTextureMinCoverage = 0x270; // int
		constexpr auto VirtualTextureRenderPassType = 0x274; // ERuntimeVirtualTextureMainPassType
		constexpr auto LpvBiasMultiplier = 0x27c; // float
		constexpr auto BoundsScale = 0x288; // float
		constexpr auto MoveIgnoreActors = 0x298; // TArray<AActor*>
		constexpr auto MoveIgnoreComponents = 0x2a8; // TArray<UPrimitiveComponent*>
		constexpr auto BodyInstance = 0x2c8; // FBodyInstance
		constexpr auto OnComponentHit = 0x3d8; // FScriptMulticastDelegate
		constexpr auto OnComponentBeginOverlap = 0x3d9; // FScriptMulticastDelegate
		constexpr auto OnComponentEndOverlap = 0x3da; // FScriptMulticastDelegate
		constexpr auto OnComponentWake = 0x3db; // FScriptMulticastDelegate
		constexpr auto OnComponentSleep = 0x3dc; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x3de; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x3df; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x3e0; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x3e1; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x3e2; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x3e3; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x3e4; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x3e5; // FScriptMulticastDelegate
		constexpr auto LODParentPrimitive = 0x400; // UPrimitiveComponent*
	}

	namespace n_UMovieSceneTrack { // : UMovieSceneSignedObject
		constexpr auto EvalOptions = 0x50; // FMovieSceneTrackEvalOptions
	}

	namespace n_USQMenuSoundsWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto SoundsStyle = 0x30; // FSQMenuSoundsStyle
	}

	namespace n_UVoipListenerSynthComponent { // : USynthComponent
		constexpr auto bAutoDestroy = 0x218; // char : 1
		constexpr auto bStopWhenOwnerDestroyed = 0x218; // char : 1
		constexpr auto bAllowSpatialization = 0x218; // char : 1
		constexpr auto bOverrideAttenuation = 0x218; // char : 1
		constexpr auto bOutputToBusOnly = 0x21c; // char : 1
		constexpr auto AttenuationSettings = 0x220; // USoundAttenuation*
		constexpr auto AttenuationOverrides = 0x228; // FSoundAttenuationSettings
		constexpr auto ConcurrencySettings = 0x510; // USoundConcurrency*
		constexpr auto ConcurrencySet = 0x518; // TSet<USoundConcurrency*>
		constexpr auto SoundClass = 0x568; // USoundClass*
		constexpr auto SourceEffectChain = 0x570; // USoundEffectSourcePresetChain*
		constexpr auto SoundSubmix = 0x578; // USoundSubmix*
		constexpr auto SoundSubmixSends = 0x580; // TArray<FSoundSubmixSendInfo>
		constexpr auto BusSends = 0x590; // TArray<FSoundSourceBusSendInfo>
		constexpr auto Modulation = 0x5a0; // FSoundModulation
		constexpr auto PreEffectBusSends = 0x5b0; // TArray<FSoundSourceBusSendInfo>
		constexpr auto bIsUISound = 0x5c0; // char : 1
		constexpr auto bIsPreviewSound = 0x5c0; // char : 1
		constexpr auto EnvelopeFollowerAttackTime = 0x5c4; // int
		constexpr auto EnvelopeFollowerReleaseTime = 0x5c8; // int
		constexpr auto OnAudioEnvelopeValue = 0x5d0; // FScriptMulticastDelegate
		constexpr auto Synth = 0x600; // USynthSound*
		constexpr auto AudioComponent = 0x608; // UAudioComponent*
	}

	namespace n_UBP_L85A2_Foregrip_StaticInfo_C { // : UBP_GenericWeapon_StaticInfo_C
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_UCanvasPanelSlot { // : UPanelSlot
		constexpr auto LayoutData = 0x38; // FAnchorData
		constexpr auto bAutoSize = 0x60; // bool
		constexpr auto ZOrder = 0x64; // int
	}

	namespace n_UBTDecorator_KeepInCone { // : UBTDecorator
		constexpr auto ConeHalfAngle = 0x68; // float
		constexpr auto ConeOrigin = 0x70; // FBlackboardKeySelector
		constexpr auto Observed = 0x98; // FBlackboardKeySelector
		constexpr auto bUseSelfAsOrigin = 0xc0; // char : 1
		constexpr auto bUseSelfAsObserved = 0xc0; // char : 1
	}

	namespace n_UMaterialExpressionTruncate { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UBP_L85A2_ElcanLDS_StaticInfo_C { // : UBP_L85A2_StaticInfo_C
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_UInstancedStaticMeshComponent { // : UStaticMeshComponent
		constexpr auto PerInstanceSMData = 0x498; // TArray<FInstancedStaticMeshInstanceData>
		constexpr auto InstancingRandomSeed = 0x4a8; // int
		constexpr auto InstanceStartCullDistance = 0x4ac; // int
		constexpr auto InstanceEndCullDistance = 0x4b0; // int
		constexpr auto InstanceReorderTable = 0x4b8; // TArray<int>
		constexpr auto NumPendingLightmaps = 0x510; // int
		constexpr auto CachedMappings = 0x518; // TArray<FInstancedStaticMeshMappingInfo>
	}

	namespace n_AARSharedWorldGameMode { // : AGameMode
		constexpr auto BufferSizePerChunk = 0x390; // int
	}

	namespace n_ABP_M4M203_M68_UGL_Smoke_Blue_C { // : ABP_M4M203_M68_UGL_Smoke_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UReplicationGraphNode_AlwaysRelevant { // : UReplicationGraphNode
		constexpr auto ChildNode = 0x50; // UReplicationGraphNode*
	}

	namespace n_ABP_M4_Recruit_Woodland_C { // : ABP_M4_Recruit_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UBP_Attachment_PGO-7_C { // : USQWeaponAttachment_Scope
		constexpr auto MeshTransitionPercentage = 0x4b0; // float
		constexpr auto ADSMesh = 0x4b8; // UStaticMesh*
		constexpr auto ADSMeshTransform = 0x4c0; // FTransform
		constexpr auto NonADSMesh = 0x4f0; // UStaticMesh*
		constexpr auto NonADSMeshTransform = 0x500; // FTransform
		constexpr auto InToADSMeshTransitionSettings = 0x530; // TArray<FSQMeshTransitionSettings>
		constexpr auto OutFromADSMeshTransitionSettings = 0x540; // TArray<FSQMeshTransitionSettings>
	}

	namespace n_USQLocalCameraEffectHandler { // : UObject
		constexpr auto Effect = 0x30; // FPostProcessSettings
		constexpr auto BlendValue = 0x560; // float
	}

	namespace n_UPrimaryDataAsset { // : UDataAsset
		constexpr auto NativeClass = 0x28; // UDataAsset*
	}

	namespace n_UPawnActionsComponent { // : UActorComponent
		constexpr auto ControlledPawn = 0xd8; // APawn*
		constexpr auto ActionStacks = 0xe0; // TArray<FPawnActionStack>
		constexpr auto ActionEvents = 0xf0; // TArray<FPawnActionEvent>
		constexpr auto CurrentAction = 0x100; // UPawnAction*
	}

	namespace n_UMaterialExpressionVectorParameter { // : UMaterialExpressionParameter
		constexpr auto DefaultValue = 0x58; // FLinearColor
		constexpr auto bUseCustomPrimitiveData = 0x68; // bool
		constexpr auto PrimitiveDataIndex = 0x69; // char
	}

	namespace n_ASQConnectionCheckBeaconClient { // : AOnlineBeaconClient
		constexpr auto ServerWidget = 0x2c8; // USQServerListItemWidget*
	}

	namespace n_ABP_AK74MGP25_Rifle_1P63_C { // : ABP_AK74MGP25_Rifle_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_ACameraRig_Rail { // : AActor
		constexpr auto CurrentPositionOnRail = 0x248; // float
		constexpr auto bLockOrientationToRail = 0x24c; // bool
		constexpr auto TransformComponent = 0x250; // USceneComponent*
		constexpr auto RailSplineComponent = 0x258; // USplineComponent*
		constexpr auto RailCameraMount = 0x260; // USceneComponent*
	}

	namespace n_ULightMapTexture2D { // : UTexture2D
		constexpr auto LevelIndex = 0xd0; // int
		constexpr auto FirstResourceMemMip = 0xd4; // int
		constexpr auto bTemporarilyDisableStreaming = 0xd8; // char : 1
		constexpr auto AddressX = 0xd9; // TextureAddress
		constexpr auto AddressY = 0xda; // TextureAddress
		constexpr auto ImportedSize = 0xdc; // FIntPoint
	}

	namespace n_UAbilityTask_WaitGameplayEffectBlockedImmunity { // : UAbilityTask
		constexpr auto bLocked = 0x80; // FScriptMulticastDelegate
		constexpr auto ExternalOwner = 0x118; // UAbilitySystemComponent*
	}

	namespace n_ABP_RPG7_Tandem_Founders_C { // : ABP_RPG7_Tandem_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
		constexpr auto MuzzleFlashRearComponent3P = 0x7b8; // UParticleSystemComponent*
		constexpr auto BackBlastComponent3P = 0x7c0; // UChildActorComponent*
		constexpr auto MuzzleFlashRearComponent1P = 0x7c8; // UParticleSystemComponent*
		constexpr auto SquadBlast = 0x7d0; // USQBlastComponent*
		constexpr auto BackBlastComponent1P = 0x7d8; // UChildActorComponent*
		constexpr auto BackblastSocket = 0x7e0; // FName
		constexpr auto BackblastEffect1P = 0x7e8; // UParticleSystem*
		constexpr auto BackblastEffect3P = 0x7f0; // UParticleSystem*
	}

	namespace n_UAbilityTask_WaitCancel { // : UAbilityTask
		constexpr auto OnCancel = 0x80; // FScriptMulticastDelegate
	}

	namespace n_UAbilityTask_WaitGameplayEffectApplied_Self { // : UAbilityTask_WaitGameplayEffectApplied
		constexpr auto OnApplied = 0x1b8; // FScriptMulticastDelegate
	}

	namespace n_UMaterialExpressionTemporalSobol { // : UMaterialExpression
		constexpr auto Index = 0x40; // FExpressionInput
		constexpr auto Seed = 0x54; // FExpressionInput
		constexpr auto ConstIndex = 0x68; // uint32
		constexpr auto ConstSeed = 0x6c; // FVector2D
	}

	namespace n_UBP_Attachment_M4M203_LadderSight_Founders_C { // : UBP_Attachment_M4M203_LadderSight_C
		constexpr auto MeshTransitionPercentage = 0x4b0; // float
		constexpr auto ADSMesh = 0x4b8; // UStaticMesh*
		constexpr auto ADSMeshTransform = 0x4c0; // FTransform
		constexpr auto NonADSMesh = 0x4f0; // UStaticMesh*
		constexpr auto NonADSMeshTransform = 0x500; // FTransform
		constexpr auto InToADSMeshTransitionSettings = 0x530; // TArray<FSQMeshTransitionSettings>
		constexpr auto OutFromADSMeshTransitionSettings = 0x540; // TArray<FSQMeshTransitionSettings>
	}

	namespace n_UParticleModuleLocationPrimitiveTriangle { // : UParticleModuleLocationBase
		constexpr auto StartOffset = 0x30; // FRawDistributionVector
		constexpr auto Height = 0x80; // FRawDistributionFloat
		constexpr auto Angle = 0xb8; // FRawDistributionFloat
		constexpr auto Thickness = 0xf0; // FRawDistributionFloat
	}

	namespace n_USQNetMoveComponent { // : USQPawnMovementComponent
		constexpr auto bPerformMoveOnServer = 0x1f0; // bool
		constexpr auto MaxPendingMoveDelay = 0x1f4; // float
		constexpr auto MaxStartLocationDifference = 0x1f8; // float
		constexpr auto MoveTimestampQuantum = 0x1fc; // float
		constexpr auto bShouldInterpolate = 0x200; // bool
		constexpr auto MinTimeBetweenTimeStampResets = 0x204; // float
		constexpr auto MaxSmoothNetUpdateDist = 0x208; // float
		constexpr auto NoSmoothNetUpdateDist = 0x20c; // float
		constexpr auto LatestPackedMove = 0x218; // TArray<char>
	}

	namespace n_UEndTurnCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto OnFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_APartyBeaconHost { // : AOnlineBeaconHostObject
		constexpr auto State = 0x270; // UPartyBeaconState*
		constexpr auto bLogoutOnSessionTimeout = 0x2d8; // bool
		constexpr auto SessionTimeoutSecs = 0x2dc; // float
		constexpr auto TravelSessionTimeoutSecs = 0x2e0; // float
	}

	namespace n_USQSteamInventoryUI { // : UGameInstanceSubsystem
		constexpr auto OnCachedSteamItems = 0x30; // FScriptMulticastDelegate
		constexpr auto CachedSteamIds = 0x40; // TMap<int, USQSteamItem*>
		constexpr auto CallbackProxy = 0xe0; // UCoreGetAllItemsCallbackProxy*
	}

	namespace n_UBehaviorTreeManager { // : UObject
		constexpr auto MaxDebuggerSteps = 0x28; // int
		constexpr auto LoadedTemplates = 0x30; // TArray<FBehaviorTreeTemplateInfo>
		constexpr auto ActiveComponents = 0x40; // TArray<UBehaviorTreeComponent*>
	}

	namespace n_URadialFalloff { // : UFieldNodeFloat
		constexpr auto Magnitude = 0xd8; // float
		constexpr auto MinRange = 0xdc; // float
		constexpr auto MaxRange = 0xe0; // float
		constexpr auto Default = 0xe4; // float
		constexpr auto Radius = 0xe8; // float
		constexpr auto Position = 0xec; // FVector
		constexpr auto Falloff = 0xf8; // EFieldFalloffType
	}

	namespace n_UMaterialExpressionChannelMaskParameter { // : UMaterialExpressionVectorParameter
		constexpr auto MaskChannel = 0x70; // EChannelMaskParameterColor
		constexpr auto Input = 0x74; // FExpressionInput
	}

	namespace n_UGameplayTasksComponent { // : UActorComponent
		constexpr auto bIsNetDirty = 0xe4; // char : 1
		constexpr auto SimulatedTasks = 0xe8; // TArray<UGameplayTask*>
		constexpr auto TaskPriorityQueue = 0xf8; // TArray<UGameplayTask*>
		constexpr auto TickingTasks = 0x118; // TArray<UGameplayTask*>
		constexpr auto KnownTasks = 0x128; // TArray<UGameplayTask*>
		constexpr auto OnClaimedResourcesChange = 0x138; // FScriptMulticastDelegate
	}

	namespace n_ABP_L85A2_DarkEarth_ElcanLDS_C { // : ABP_L85A2_DarkEarth_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
	}

	namespace n_UBP_HighlightsSubsystem_C { // : USQBaseGameSubsystem
		constexpr auto UberGraphFrame = 0x40; // FPointerToUberGraphFrame
		constexpr auto HighlightsInitialized = 0x48; // bool
		constexpr auto HighlightOpenGroupParams = 0x50; // FGfeSDKHighlightOpenGroupParams
		constexpr auto HighlightsSummaryParams = 0xb0; // FGfeSDKHighlightSummaryParams
		constexpr auto HighlightsConfigParams = 0xc0; // FGfeSDKHighlightConfigParams
		constexpr auto ActiveGroupId = 0xe0; // int
		constexpr auto DestroyHighlights = 0xe4; // bool
		constexpr auto VehicleDestroyedEventParams = 0xe8; // FHighlightEventStruct
		constexpr auto PlayerKilledEventParams = 0x110; // FHighlightEventStruct
		constexpr auto IED_DetonatedEventParams = 0x138; // FHighlightEventStruct
		constexpr auto EventSignificance = 0x160; // EGfeSDKHighlightSignificance
		constexpr auto HighlightType = 0x161; // EGfeSDKHighlightType
		constexpr auto NumberOfHighlights = 0x164; // int
	}

	namespace n_UBlendProfile { // : UObject
		constexpr auto OwningSkeleton = 0x30; // USkeleton*
		constexpr auto ProfileEntries = 0x38; // TArray<FBlendProfileBoneEntry>
	}

	namespace n_UInterpTrackInstVisibility { // : UInterpTrackInst
		constexpr auto Action = 0x28; // EVisibilityTrackAction
		constexpr auto LastUpdatePosition = 0x2c; // float
	}

	namespace n_ABP_M72A7_C { // : ABP_GenericRocketLauncher_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
		constexpr auto MuzzleFlashRearComponent3P = 0x7b8; // UParticleSystemComponent*
		constexpr auto BackBlastComponent3P = 0x7c0; // UChildActorComponent*
		constexpr auto MuzzleFlashRearComponent1P = 0x7c8; // UParticleSystemComponent*
		constexpr auto SquadBlast = 0x7d0; // USQBlastComponent*
		constexpr auto BackBlastComponent1P = 0x7d8; // UChildActorComponent*
		constexpr auto BackblastSocket = 0x7e0; // FName
		constexpr auto BackblastEffect1P = 0x7e8; // UParticleSystem*
		constexpr auto BackblastEffect3P = 0x7f0; // UParticleSystem*
	}

	namespace n_UBP_SquadStateDataSquadState_C { // : USQSquadStateDataSquadState
		constexpr auto SquadName = 0x118; // FString
		constexpr auto LeaderName = 0x128; // FString
		constexpr auto MemberNum = 0x138; // char
		constexpr auto bIsLocked = 0x13c; // char : 1
		constexpr auto bIsCommandSquad = 0x13c; // char : 1
	}

	namespace n_UMovieSceneSequence { // : UMovieSceneSignedObject
		constexpr auto PrecompiledEvaluationTemplate = 0x50; // FMovieSceneEvaluationTemplate
		constexpr auto DefaultCompletionMode = 0x340; // EMovieSceneCompletionMode
		constexpr auto bParentContextsAreSignificant = 0x341; // bool
	}

	namespace n_UTcpMessagingSettings { // : UObject
		constexpr auto EnableTransport = 0x28; // bool
		constexpr auto ListenEndpoint = 0x30; // FString
		constexpr auto ConnectToEndpoints = 0x40; // TArray<FString>
		constexpr auto ConnectionRetryDelay = 0x50; // int
	}

	namespace n_ADebugCameraHUD { // : AHUD
		constexpr auto PlayerOwner = 0x248; // APlayerController*
		constexpr auto bLostFocusPaused = 0x250; // char : 1
		constexpr auto bShowHUD = 0x250; // char : 1
		constexpr auto bShowDebugInfo = 0x250; // char : 1
		constexpr auto CurrentTargetIndex = 0x254; // int
		constexpr auto bShowHitBoxDebugInfo = 0x258; // char : 1
		constexpr auto bShowOverlays = 0x258; // char : 1
		constexpr auto bEnableDebugTextShadow = 0x258; // char : 1
		constexpr auto PostRenderedActors = 0x260; // TArray<AActor*>
		constexpr auto DebugDisplay = 0x278; // TArray<FName>
		constexpr auto ToggledDebugCategories = 0x288; // TArray<FName>
		constexpr auto Canvas = 0x298; // UCanvas*
		constexpr auto DebugCanvas = 0x2a0; // UCanvas*
		constexpr auto DebugTextList = 0x2a8; // TArray<FDebugTextInfo>
		constexpr auto ShowDebugTargetDesiredClass = 0x2b8; // AActor*
		constexpr auto ShowDebugTargetActor = 0x2c0; // AActor*
	}

	namespace n_UConsoleSettings { // : UObject
		constexpr auto MaxScrollbackSize = 0x28; // int
		constexpr auto ManualAutoCompleteList = 0x30; // TArray<FAutoCompleteCommand>
		constexpr auto AutoCompleteMapPaths = 0x40; // TArray<FString>
		constexpr auto BackgroundOpacityPercentage = 0x50; // float
		constexpr auto bOrderTopToBottom = 0x54; // bool
		constexpr auto InputColor = 0x58; // FColor
		constexpr auto HistoryColor = 0x5c; // FColor
		constexpr auto AutoCompleteCommandColor = 0x60; // FColor
		constexpr auto AutoCompleteCVarColor = 0x64; // FColor
		constexpr auto AutoCompleteFadedColor = 0x68; // FColor
	}

	namespace n_USQBaseButton { // : USQUserWidget
		constexpr auto bIsHovering = 0x230; // bool
		constexpr auto bIsActive = 0x231; // bool
		constexpr auto HoveringColorBlend = 0x234; // float
		constexpr auto HoverColorBlendSpeed = 0x238; // float
		constexpr auto bIsPressing = 0x23c; // bool
		constexpr auto PressColorBlend = 0x240; // float
		constexpr auto PressColorBlendSpeed = 0x244; // float
		constexpr auto ButtonImage = 0x248; // UImage*
		constexpr auto ButtonBorder = 0x250; // UBorder*
		constexpr auto ButtonTextBlock = 0x258; // UTextBlock*
		constexpr auto SQButtonStyle = 0x260; // FSQButtonStyle
		constexpr auto Alpha = 0x2e0; // float
	}

	namespace n_ABP_M4A1_M68_Foregrip_C { // : ABP_M4A1_Foregrip_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UParticleLODLevel { // : UObject
		constexpr auto Level = 0x28; // int
		constexpr auto bEnabled = 0x2c; // char : 1
		constexpr auto RequiredModule = 0x30; // UParticleModuleRequired*
		constexpr auto Modules = 0x38; // TArray<UParticleModule*>
		constexpr auto TypeDataModule = 0x48; // UParticleModuleTypeDataBase*
		constexpr auto SpawnModule = 0x50; // UParticleModuleSpawn*
		constexpr auto EventGenerator = 0x58; // UParticleModuleEventGenerator*
		constexpr auto SpawningModules = 0x60; // TArray<UParticleModuleSpawnBase*>
		constexpr auto SpawnModules = 0x70; // TArray<UParticleModule*>
		constexpr auto UpdateModules = 0x80; // TArray<UParticleModule*>
		constexpr auto OrbitModules = 0x90; // TArray<UParticleModuleOrbit*>
		constexpr auto EventReceiverModules = 0xa0; // TArray<UParticleModuleEventReceiverBase*>
		constexpr auto ConvertedModules = 0xb0; // char : 1
		constexpr auto PeakActiveParticles = 0xb4; // int
	}

	namespace n_UAIResource_Logic { // : UGameplayTaskResource
		constexpr auto ManualResourceID = 0x28; // int
		constexpr auto AutoResourceID = 0x2c; // uint8
		constexpr auto bManuallySetID = 0x30; // char : 1
	}

	namespace n_UMaterialExpressionSphereMask { // : UMaterialExpression
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto Radius = 0x68; // FExpressionInput
		constexpr auto Hardness = 0x7c; // FExpressionInput
		constexpr auto AttenuationRadius = 0x90; // float
		constexpr auto HardnessPercent = 0x94; // float
	}

	namespace n_USQPainCausingVolumeComponent { // : UBoxComponent
		constexpr auto bPainCausing = 0x430; // char : 1
		constexpr auto DamagePerSec = 0x434; // float
		constexpr auto DamageType = 0x438; // UDamageType*
		constexpr auto PainInterval = 0x440; // float
		constexpr auto bEntryPain = 0x444; // char : 1
		constexpr auto DamageInstigator = 0x448; // AController*
	}

	namespace n_UAnimSingleNodeInstance { // : UAnimInstance
		constexpr auto CurrentAsset = 0x268; // UAnimationAsset*
		constexpr auto PostEvaluateAnimEvent = 0x270; // DelegateProperty
	}

	namespace n_ASQSpawner { // : AActor
		constexpr auto MinimumDelayBetweenSpawn = 0x250; // FTimespan
		constexpr auto SpawnPositionHeightCheck = 0x258; // float
		constexpr auto SpawnPositionOffset = 0x25c; // float
		constexpr auto Team = 0x260; // ESQTeam
		constexpr auto ObjectCollisionTypes = 0x268; // TArray<EObjectTypeQuery>
		constexpr auto SpawnInProgress = 0x278; // bool
		constexpr auto SpawnOverlapped = 0x279; // bool
		constexpr auto SpawnerLockedUntil = 0x280; // FDateTime
		constexpr auto SpawnPosition = 0x290; // FTransform
		constexpr auto SpawnBound = 0x2c0; // FVector
		constexpr auto TeamAuthority = 0x2d0; // ASQTeam*
	}

	namespace n_UBlackboardKeyType_Class { // : UBlackboardKeyType
		constexpr auto BaseClass = 0x30; // UObject*
	}

	namespace n_UGeometryCacheTrack_TransformAnimation { // : UGeometryCacheTrack
		constexpr auto Duration = 0x28; // float
	}

	namespace n_UMovieSceneGeometryCacheSection { // : UMovieSceneSection
		constexpr auto Params = 0xe0; // FMovieSceneGeometryCacheParams
	}

	namespace n_UFixedFrameRateCustomTimeStep { // : UEngineCustomTimeStep
		constexpr auto FixedFrameRate = 0x28; // FFrameRate
	}

	namespace n_USoundWave { // : USoundBase
		constexpr auto CompressionQuality = 0x110; // int
		constexpr auto StreamingPriority = 0x114; // int
		constexpr auto SampleRateQuality = 0x118; // ESoundwaveSampleRateSettings
		constexpr auto SoundGroup = 0x11a; // ESoundGroup
		constexpr auto bLooping = 0x11b; // char : 1
		constexpr auto bStreaming = 0x11b; // char : 1
		constexpr auto bSeekableStreaming = 0x11b; // char : 1
		constexpr auto bMature = 0x11c; // char : 1
		constexpr auto bManualWordWrap = 0x11c; // char : 1
		constexpr auto bSingleLine = 0x11c; // char : 1
		constexpr auto bIsAmbisonics = 0x11c; // char : 1
		constexpr auto FrequenciesToAnalyze = 0x120; // TArray<float>
		constexpr auto CookedSpectralTimeData = 0x130; // TArray<FSoundWaveSpectralTimeData>
		constexpr auto CookedEnvelopeTimeData = 0x140; // TArray<FSoundWaveEnvelopeTimeData>
		constexpr auto SpokenText = 0x160; // FString
		constexpr auto SubtitlePriority = 0x170; // float
		constexpr auto Volume = 0x174; // float
		constexpr auto Pitch = 0x178; // float
		constexpr auto NumChannels = 0x17c; // int
		constexpr auto SampleRate = 0x180; // int
		constexpr auto Subtitles = 0x188; // TArray<FSubtitleCue>
		constexpr auto Curves = 0x198; // UCurveTable*
		constexpr auto InternalCurves = 0x1a0; // UCurveTable*
	}

	namespace n_UComponentDelegateBinding { // : UDynamicBlueprintBinding
		constexpr auto ComponentDelegateBindings = 0x28; // TArray<FBlueprintComponentDelegateBinding>
	}

	namespace n_UMaterialExpressionClamp { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Min = 0x54; // FExpressionInput
		constexpr auto Max = 0x68; // FExpressionInput
		constexpr auto ClampMode = 0x7c; // EClampMode
		constexpr auto MinDefault = 0x80; // float
		constexpr auto MaxDefault = 0x84; // float
	}

	namespace n_UMaterialExpressionTangentOutput { // : UMaterialExpressionCustomOutput
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UFloatBinding { // : UPropertyBinding
		constexpr auto SourceObject = 0x28; // TWeakObjectPtr<UObject>
		constexpr auto SourcePath = 0x30; // FDynamicPropertyPath
		constexpr auto DestinationProperty = 0x60; // FName
	}

	namespace n_UMovieScene2DTransformTrack { // : UMovieScenePropertyTrack
		constexpr auto SectionToKey = 0x58; // UMovieSceneSection*
		constexpr auto PropertyName = 0x60; // FName
		constexpr auto PropertyPath = 0x68; // FString
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_USQSoundWaveLooping { // : USoundWave
		constexpr auto CompressionQuality = 0x110; // int
		constexpr auto StreamingPriority = 0x114; // int
		constexpr auto SampleRateQuality = 0x118; // ESoundwaveSampleRateSettings
		constexpr auto SoundGroup = 0x11a; // ESoundGroup
		constexpr auto bLooping = 0x11b; // char : 1
		constexpr auto bStreaming = 0x11b; // char : 1
		constexpr auto bSeekableStreaming = 0x11b; // char : 1
		constexpr auto bMature = 0x11c; // char : 1
		constexpr auto bManualWordWrap = 0x11c; // char : 1
		constexpr auto bSingleLine = 0x11c; // char : 1
		constexpr auto bIsAmbisonics = 0x11c; // char : 1
		constexpr auto FrequenciesToAnalyze = 0x120; // TArray<float>
		constexpr auto CookedSpectralTimeData = 0x130; // TArray<FSoundWaveSpectralTimeData>
		constexpr auto CookedEnvelopeTimeData = 0x140; // TArray<FSoundWaveEnvelopeTimeData>
		constexpr auto SpokenText = 0x160; // FString
		constexpr auto SubtitlePriority = 0x170; // float
		constexpr auto Volume = 0x174; // float
		constexpr auto Pitch = 0x178; // float
		constexpr auto NumChannels = 0x17c; // int
		constexpr auto SampleRate = 0x180; // int
		constexpr auto Subtitles = 0x188; // TArray<FSubtitleCue>
		constexpr auto Curves = 0x198; // UCurveTable*
		constexpr auto InternalCurves = 0x1a0; // UCurveTable*
	}

	namespace n_UMovieSceneBoolSection { // : UMovieSceneSection
		constexpr auto DefaultValue = 0xe0; // bool
		constexpr auto BoolCurve = 0xe8; // FMovieSceneBoolChannel
	}

	namespace n_ABP_M4A1_Woodland_C { // : ABP_GenericRifle_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_ABP_M4_2Mags_Founders_C { // : ABP_M4_2Mags_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UNavLinkComponent { // : UPrimitiveComponent
		constexpr auto Links = 0x410; // TArray<FNavigationLink>
	}

	namespace n_UMaterialExpressionDepthOfFieldFunction { // : UMaterialExpression
		constexpr auto FunctionValue = 0x40; // EDepthOfFieldFunctionValue
		constexpr auto Depth = 0x44; // FExpressionInput
	}

	namespace n_USQMagazineGroupWidget { // : USQUserWidget
		constexpr auto MagazineWidgets = 0x230; // TArray<USQMagazineWidget*>
	}

	namespace n_ULightmassPrimitiveSettingsObject { // : UObject
		constexpr auto LightmassSettings = 0x28; // FLightmassPrimitiveSettings
	}

	namespace n_UBTAuxiliaryNode { // : UBTNode
		constexpr auto NodeName = 0x30; // FString
		constexpr auto TreeAsset = 0x40; // UBehaviorTree*
		constexpr auto ParentNode = 0x48; // UBTCompositeNode*
	}

	namespace n_UBP_Attachment_1p88_Woodland_C { // : USQWeaponAttachment_Scope
		constexpr auto MeshTransitionPercentage = 0x4b0; // float
		constexpr auto ADSMesh = 0x4b8; // UStaticMesh*
		constexpr auto ADSMeshTransform = 0x4c0; // FTransform
		constexpr auto NonADSMesh = 0x4f0; // UStaticMesh*
		constexpr auto NonADSMeshTransform = 0x500; // FTransform
		constexpr auto InToADSMeshTransitionSettings = 0x530; // TArray<FSQMeshTransitionSettings>
		constexpr auto OutFromADSMeshTransitionSettings = 0x540; // TArray<FSQMeshTransitionSettings>
	}

	namespace n_UGeometryCacheTrack_FlipbookAnimation { // : UGeometryCacheTrack
		constexpr auto NumMeshSamples = 0x58; // uint32
	}

	namespace n_USQRadialButton { // : USQBaseButton
		constexpr auto RadialWidgetSize = 0x2e8; // ESQRadialWidgetSizeEnum
		constexpr auto RadialWidgetAngle = 0x2ec; // float
		constexpr auto MouseEnterSoundCue = 0x2f0; // USoundCue*
	}

	namespace n_UAISenseBlueprintListener { // : UUserDefinedStruct
		constexpr auto Status = 0xa8; // EUserDefinedStructureStatus
		constexpr auto Guid = 0xac; // FGuid
	}

	namespace n_UAISenseEvent_Damage { // : UAISenseEvent
		constexpr auto Event = 0x28; // FAIDamageEvent
	}

	namespace n_ABP_L85A2AG36_Rifle_C { // : ABP_L85A2_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UChildConnection { // : UNetConnection
		constexpr auto Parent = 0x19a0; // UNetConnection*
	}

	namespace n_UBackgroundBlur { // : UContentWidget
		constexpr auto Padding = 0x120; // FMargin
		constexpr auto HorizontalAlignment = 0x130; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x131; // EVerticalAlignment
		constexpr auto bApplyAlphaToBlur = 0x132; // bool
		constexpr auto BlurStrength = 0x134; // float
		constexpr auto bOverrideAutoRadiusCalculation = 0x138; // bool
		constexpr auto BlurRadius = 0x13c; // int
		constexpr auto LowQualityFallbackBrush = 0x140; // FSlateBrush
	}

	namespace n_ABP_M4M203_Rifle_Founder_C { // : ABP_M4M203_Rifle_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_USQSquadStateDataMapMarkerWaypoint { // : USQSquadStateDataMapMarkerSelectable
		constexpr auto MapIcon = 0x1a0; // USQMapIconComponent*
	}

	namespace n_ABP_M4M203_M150_UGL_Smoke_Founders_C { // : ABP_M4M203_M150_UGL_Parent_Founders_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UMaterialFunctionMaterialLayerBlend { // : UMaterialFunction
		constexpr auto Description = 0x40; // FString
		constexpr auto bExposeToLibrary = 0x50; // char : 1
		constexpr auto bPrefixParameterNames = 0x50; // char : 1
		constexpr auto FunctionExpressions = 0x58; // TArray<UMaterialExpression*>
		constexpr auto bReentrantFlag = 0x68; // char : 1
	}

	namespace n_USQCoreStateSpawnPointsListComponent { // : USQCoreStateWidgetFactory
		constexpr auto WidgetClass = 0x340; // USQCoreStateSpawnPointsListWidget*
		constexpr auto BaseRoot = 0x348; // UGridPanel*
		constexpr auto HABRoot = 0x350; // UGridPanel*
		constexpr auto RallyRoot = 0x358; // UGridPanel*
	}

	namespace n_UMaterialExpressionCeil { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UEnvQueryTest_Overlap { // : UEnvQueryTest
		constexpr auto OverlapData = 0x1c0; // FEnvOverlapData
	}

	namespace n_URuntimeVirtualTextureComponent { // : USceneComponent
		constexpr auto VirtualTexture = 0x218; // URuntimeVirtualTexture*
		constexpr auto BoundsSourceActor = 0x220; // AActor*
	}

	namespace n_UFieldSystemMetaDataProcessingResolution { // : UFieldSystemMetaData
		constexpr auto ResolutionType = 0xd8; // EFieldResolutionType
	}

	namespace n_AReplicationGraphDebugActor { // : AActor
		constexpr auto ReplicationGraph = 0x248; // UReplicationGraph*
		constexpr auto ConnectionManager = 0x250; // UNetReplicationGraphConnection*
	}

	namespace n_UMovieScene3DConstraintTrack { // : UMovieSceneTrack
		constexpr auto ConstraintSections = 0x58; // TArray<UMovieSceneSection*>
	}

	namespace n_USQConsole { // : UConsole
		constexpr auto MessageType = 0x130; // ESQConsoleMessageType
		constexpr auto CustomMessage = 0x138; // FString
		constexpr auto LastMessageTime = 0x148; // float
	}

	namespace n_UARTrackableNotifyComponent { // : UActorComponent
		constexpr auto OnAddTrackedGeometry = 0xd8; // FScriptMulticastDelegate
		constexpr auto OnUpdateTrackedGeometry = 0xe8; // FScriptMulticastDelegate
		constexpr auto OnRemoveTrackedGeometry = 0xf8; // FScriptMulticastDelegate
		constexpr auto OnAddTrackedPlane = 0x108; // FScriptMulticastDelegate
		constexpr auto OnUpdateTrackedPlane = 0x118; // FScriptMulticastDelegate
		constexpr auto OnRemoveTrackedPlane = 0x128; // FScriptMulticastDelegate
		constexpr auto OnAddTrackedPoint = 0x138; // FScriptMulticastDelegate
		constexpr auto OnUpdateTrackedPoint = 0x148; // FScriptMulticastDelegate
		constexpr auto OnRemoveTrackedPoint = 0x158; // FScriptMulticastDelegate
		constexpr auto OnAddTrackedImage = 0x168; // FScriptMulticastDelegate
		constexpr auto OnUpdateTrackedImage = 0x178; // FScriptMulticastDelegate
		constexpr auto OnRemoveTrackedImage = 0x188; // FScriptMulticastDelegate
		constexpr auto OnAddTrackedFace = 0x198; // FScriptMulticastDelegate
		constexpr auto OnUpdateTrackedFace = 0x1a8; // FScriptMulticastDelegate
		constexpr auto OnRemoveTrackedFace = 0x1b8; // FScriptMulticastDelegate
		constexpr auto OnAddTrackedEnvProbe = 0x1c8; // FScriptMulticastDelegate
		constexpr auto OnUpdateTrackedEnvProbe = 0x1d8; // FScriptMulticastDelegate
		constexpr auto OnRemoveTrackedEnvProbe = 0x1e8; // FScriptMulticastDelegate
		constexpr auto OnAddTrackedObject = 0x1f8; // FScriptMulticastDelegate
		constexpr auto OnUpdateTrackedObject = 0x208; // FScriptMulticastDelegate
		constexpr auto OnRemoveTrackedObject = 0x218; // FScriptMulticastDelegate
	}

	namespace n_UParticleModuleMeshRotationRateOverLife { // : UParticleModuleRotationRateBase
		constexpr auto RotRate = 0x30; // FRawDistributionVector
		constexpr auto bScaleRotRate = 0x80; // char : 1
	}

	namespace n_AGameplayCueNotify_Actor { // : AActor
		constexpr auto bAutoDestroyOnRemove = 0x248; // bool
		constexpr auto AutoDestroyDelay = 0x24c; // float
		constexpr auto WarnIfTimelineIsStillRunning = 0x250; // bool
		constexpr auto WarnIfLatentActionIsStillRunning = 0x251; // bool
		constexpr auto GameplayCueTag = 0x254; // FGameplayTag
		constexpr auto ReferenceHelper = 0x260; // FGameplayTagReferenceHelper
		constexpr auto GameplayCueName = 0x270; // FName
		constexpr auto bAutoAttachToOwner = 0x278; // bool
		constexpr auto IsOverride = 0x279; // bool
		constexpr auto bUniqueInstancePerInstigator = 0x27a; // bool
		constexpr auto bUniqueInstancePerSourceObject = 0x27b; // bool
		constexpr auto bAllowMultipleOnActiveEvents = 0x27c; // bool
		constexpr auto bAllowMultipleWhileActiveEvents = 0x27d; // bool
		constexpr auto NumPreallocatedInstances = 0x280; // int
	}

	namespace n_UBP_SQAvailability_Vehicle_C { // : USQAvailability_Vehicle
		constexpr auto Setting = 0x50; // USQVehicleSettings*
	}

	namespace n_ABP_M4A1_Foregrip_Founder_C { // : ABP_M4A1_Foregrip_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_ABP_RPG7_Heat_Proj2_C { // : ASQMortarProjectile
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto SkeletalMesh = 0x528; // USkeletalMeshComponent*
		constexpr auto BPEffectOnUnderMinFlightTime = 0x530; // UParticleSystem*
		constexpr auto BPSoundonUnderMinFlightTime = 0x538; // USoundBase*
	}

	namespace n_UMovieSceneColorTrack { // : UMovieScenePropertyTrack
		constexpr auto bIsSlateColor = 0x88; // bool
	}

	namespace n_UBrushComponent { // : UPrimitiveComponent
		constexpr auto Brush = 0x408; // UModel*
		constexpr auto BrushBodySetup = 0x410; // UBodySetup*
	}

	namespace n_UInterpTrackInstFloatMaterialParam { // : UInterpTrackInst
		constexpr auto MaterialInstances = 0x28; // TArray<UMaterialInstanceDynamic*>
		constexpr auto ResetFloats = 0x38; // TArray<float>
		constexpr auto PrimitiveMaterialRefs = 0x48; // TArray<FPrimitiveMaterialRef>
		constexpr auto InstancedTrack = 0x58; // UInterpTrackFloatMaterialParam*
	}

	namespace n_UEditableGameplayTagQueryExpression_AllTagsMatch { // : UEditableGameplayTagQueryExpression
		constexpr auto Tags = 0x28; // FGameplayTagContainer
	}

	namespace n_UAbilityTask_WaitAbilityActivate { // : UAbilityTask
		constexpr auto OnActivate = 0x80; // FScriptMulticastDelegate
	}

	namespace n_UDatasmithSceneComponentTemplate { // : UDatasmithObjectTemplate
		constexpr auto RelativeTransform = 0x30; // FTransform
		constexpr auto Mobility = 0x60; // EComponentMobility
		constexpr auto AttachParent = 0x68; // USceneComponent*
		constexpr auto Tags = 0x90; // TSet<FName>
	}

	namespace n_UMaterialExpressionTextureSampleParameterVolume { // : UMaterialExpressionTextureSampleParameter
		constexpr auto ParameterName = 0xe0; // FName
		constexpr auto ExpressionGUID = 0xe8; // FGuid
		constexpr auto Group = 0xf8; // FName
	}

	namespace n_UStreamableRenderAsset { // : UObject
		constexpr auto ForceMipLevelsToBeResidentTimestamp = 0x28; // double
		constexpr auto NumCinematicMipLevels = 0x30; // int
		constexpr auto StreamingIndex = 0x34; // int
		constexpr auto CachedCombinedLODBias = 0x38; // int
		constexpr auto CachedNumResidentLODs = 0x3c; // char
		constexpr auto bCachedReadyForStreaming = 0x3d; // char : 1
		constexpr auto NeverStream = 0x3d; // char : 1
		constexpr auto bGlobalForceMipLevelsToBeResident = 0x3d; // char : 1
		constexpr auto bIsStreamable = 0x3d; // char : 1
		constexpr auto bHasStreamingUpdatePending = 0x3d; // char : 1
		constexpr auto bForceMiplevelsToBeResident = 0x3d; // char : 1
		constexpr auto bIgnoreStreamingMipBias = 0x3d; // char : 1
		constexpr auto bUseCinematicMipLevels = 0x3d; // char : 1
	}

	namespace n_UBlackboardKeyType_Object { // : UBlackboardKeyType
		constexpr auto BaseClass = 0x30; // UObject*
	}

	namespace n_ABP_AK74GP25_UGL_HE_Founders_C { // : ABP_AK74GP25_UGL_HE_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UNavLinkCustomComponent { // : UNavRelevantComponent
		constexpr auto NavLinkUserId = 0x110; // uint32
		constexpr auto EnabledAreaClass = 0x118; // UNavArea*
		constexpr auto DisabledAreaClass = 0x120; // UNavArea*
		constexpr auto SupportedAgents = 0x128; // FNavAgentSelector
		constexpr auto LinkRelativeStart = 0x12c; // FVector
		constexpr auto LinkRelativeEnd = 0x138; // FVector
		constexpr auto LinkDirection = 0x144; // ENavLinkDirection
		constexpr auto bLinkEnabled = 0x148; // char : 1
		constexpr auto bNotifyWhenEnabled = 0x148; // char : 1
		constexpr auto bNotifyWhenDisabled = 0x148; // char : 1
		constexpr auto bCreateBoxObstacle = 0x148; // char : 1
		constexpr auto ObstacleOffset = 0x14c; // FVector
		constexpr auto ObstacleExtent = 0x158; // FVector
		constexpr auto ObstacleAreaClass = 0x168; // UNavArea*
		constexpr auto BroadcastRadius = 0x170; // float
		constexpr auto BroadcastInterval = 0x174; // float
		constexpr auto BroadcastChannel = 0x178; // ECollisionChannel
	}

	namespace n_UBTTask_RotateToFaceBBEntry { // : UBTTask_BlackboardBase
		constexpr auto Precision = 0x98; // float
	}

	namespace n_UShaderPlatformQualitySettings { // : UObject
		constexpr auto QualityOverrides = 0x28; // FMaterialQualityOverrides [0x3]
	}

	namespace n_USQHelicopterCollisionDamage { // : USQCollisionDamage
		constexpr auto FlightDynamicImpulseMultiplier = 0x110; // float
	}

	namespace n_UBTComposite_Selector { // : UBTCompositeNode
		constexpr auto Children = 0x58; // TArray<FBTCompositeChild>
		constexpr auto Services = 0x68; // TArray<UBTService*>
		constexpr auto bApplyDecoratorScope = 0x88; // char : 1
	}

	namespace n_UParticleModuleSizeScale { // : UParticleModuleSizeBase
		constexpr auto SizeScale = 0x30; // FRawDistributionVector
		constexpr auto EnableX = 0x80; // char : 1
		constexpr auto EnableY = 0x80; // char : 1
		constexpr auto EnableZ = 0x80; // char : 1
	}

	namespace n_UMovieSceneCinematicShotSection { // : UMovieSceneSubSection
		constexpr auto ShotDisplayName = 0x150; // FString
		constexpr auto DisplayName = 0x160; // FText
	}

	namespace n_UBP_SVD_StaticInfo_C { // : UBP_GenericWeapon_StaticInfo_C
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_AGeometryCollectionDebugDrawActor { // : AActor
		constexpr auto WarningMessage = 0x248; // FGeometryCollectionDebugDrawWarningMessage
		constexpr auto SelectedRigidBody = 0x250; // FGeometryCollectionDebugDrawActorSelectedRigidBody
		constexpr auto bDebugDrawWholeCollection = 0x268; // bool
		constexpr auto bDebugDrawHierarchy = 0x269; // bool
		constexpr auto bDebugDrawClustering = 0x26a; // bool
		constexpr auto HideGeometry = 0x26b; // EGeometryCollectionDebugDrawActorHideGeometry
		constexpr auto bShowRigidBodyId = 0x26c; // bool
		constexpr auto bShowRigidBodyCollision = 0x26d; // bool
		constexpr auto bCollisionAtOrigin = 0x26e; // bool
		constexpr auto bShowRigidBodyTransform = 0x26f; // bool
		constexpr auto bShowRigidBodyInertia = 0x270; // bool
		constexpr auto bShowRigidBodyVelocity = 0x271; // bool
		constexpr auto bShowRigidBodyForce = 0x272; // bool
		constexpr auto bShowRigidBodyInfos = 0x273; // bool
		constexpr auto bShowTransformIndex = 0x274; // bool
		constexpr auto bShowTransform = 0x275; // bool
		constexpr auto bShowParent = 0x276; // bool
		constexpr auto bShowLevel = 0x277; // bool
		constexpr auto bShowConnectivityEdges = 0x278; // bool
		constexpr auto bShowGeometryIndex = 0x279; // bool
		constexpr auto bShowGeometryTransform = 0x27a; // bool
		constexpr auto bShowBoundingBox = 0x27b; // bool
		constexpr auto bShowFaces = 0x27c; // bool
		constexpr auto bShowFaceIndices = 0x27d; // bool
		constexpr auto bShowFaceNormals = 0x27e; // bool
		constexpr auto bShowSingleFace = 0x27f; // bool
		constexpr auto SingleFaceIndex = 0x280; // int
		constexpr auto bShowVertices = 0x284; // bool
		constexpr auto bShowVertexIndices = 0x285; // bool
		constexpr auto bShowVertexNormals = 0x286; // bool
		constexpr auto bUseActiveVisualization = 0x287; // bool
		constexpr auto PointThickness = 0x288; // float
		constexpr auto LineThickness = 0x28c; // float
		constexpr auto bTextShadow = 0x290; // bool
		constexpr auto TextScale = 0x294; // float
		constexpr auto NormalScale = 0x298; // float
		constexpr auto AxisScale = 0x29c; // float
		constexpr auto ArrowScale = 0x2a0; // float
		constexpr auto RigidBodyIdColor = 0x2a4; // FColor
		constexpr auto RigidBodyTransformScale = 0x2a8; // float
		constexpr auto RigidBodyCollisionColor = 0x2ac; // FColor
		constexpr auto RigidBodyInertiaColor = 0x2b0; // FColor
		constexpr auto RigidBodyVelocityColor = 0x2b4; // FColor
		constexpr auto RigidBodyForceColor = 0x2b8; // FColor
		constexpr auto RigidBodyInfoColor = 0x2bc; // FColor
		constexpr auto TransformIndexColor = 0x2c0; // FColor
		constexpr auto TransformScale = 0x2c4; // float
		constexpr auto LevelColor = 0x2c8; // FColor
		constexpr auto ParentColor = 0x2cc; // FColor
		constexpr auto ConnectivityEdgeThickness = 0x2d0; // float
		constexpr auto GeometryIndexColor = 0x2d4; // FColor
		constexpr auto GeometryTransformScale = 0x2d8; // float
		constexpr auto BoundingBoxColor = 0x2dc; // FColor
		constexpr auto FaceColor = 0x2e0; // FColor
		constexpr auto FaceIndexColor = 0x2e4; // FColor
		constexpr auto FaceNormalColor = 0x2e8; // FColor
		constexpr auto SingleFaceColor = 0x2ec; // FColor
		constexpr auto VertexColor = 0x2f0; // FColor
		constexpr auto VertexIndexColor = 0x2f4; // FColor
		constexpr auto VertexNormalColor = 0x2f8; // FColor
		constexpr auto SpriteComponent = 0x300; // UBillboardComponent*
	}

	namespace n_UInterpGroupCamera { // : UInterpGroup
		constexpr auto CameraAnimInst = 0x50; // UCameraAnim*
		constexpr auto CompressTolerance = 0x58; // float
	}

	namespace n_UMovieSceneComponentMaterialTrack { // : UMovieSceneMaterialTrack
		constexpr auto MaterialIndex = 0x68; // int
	}

	namespace n_USQRotorWashEffectListener { // : UActorComponent
		constexpr auto ActiveEmitters = 0xd8; // TArray<USQRotorWashEffectSender*>
		constexpr auto EmitterCullDistance = 0xe8; // float
	}

	namespace n_UDebugCameraControllerSettings { // : UDeveloperSettings
		constexpr auto CycleViewModes = 0x38; // TArray<FDebugCameraControllerSettingsViewModeIndex>
	}

	namespace n_UMaterialExpressionGIReplace { // : UMaterialExpression
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto StaticIndirect = 0x54; // FExpressionInput
		constexpr auto DynamicIndirect = 0x68; // FExpressionInput
	}

	namespace n_UAnimNotifyState_TimedParticleEffect { // : UAnimNotifyState
		constexpr auto PSTemplate = 0x30; // UParticleSystem*
		constexpr auto SocketName = 0x38; // FName
		constexpr auto LocationOffset = 0x40; // FVector
		constexpr auto RotationOffset = 0x4c; // FRotator
		constexpr auto bDestroyAtEnd = 0x58; // bool
	}

	namespace n_USQVehicleWheel { // : USQDriveTrainComponent
		constexpr auto BoneName = 0x598; // FName
	}

	namespace n_USQSquadStateDataSQPawn { // : USQSquadStateDataPawn
		constexpr auto bHiddenWhenUnpossessed = 0x180; // bool
		constexpr auto bHiddenWhenNotLocallyControlled = 0x181; // bool
		constexpr auto bHideWidgetWhenUnpossessed = 0x182; // bool
		constexpr auto CameraRotaionYawTolerance = 0x184; // float
		constexpr auto OwnerPlayerState = 0x188; // ASQPlayerState*
		constexpr auto CachedPlayerId = 0x194; // int
		constexpr auto FireTeamIndex = 0x198; // int
		constexpr auto CachedOwnerPlayerState = 0x1a0; // ASQPlayerState*
	}

	namespace n_UMovieScenePrimitiveMaterialTrack { // : UMovieScenePropertyTrack
		constexpr auto MaterialIndex = 0x88; // int
	}

	namespace n_ULevelSequence { // : UMovieSceneSequence
		constexpr auto MovieScene = 0x348; // UMovieScene*
		constexpr auto ObjectReferences = 0x350; // FLevelSequenceObjectReferenceMap
		constexpr auto BindingReferences = 0x3a0; // FLevelSequenceBindingReferences
		constexpr auto PossessedObjects = 0x440; // TMap<FString, FLevelSequenceObject>
		constexpr auto DirectorClass = 0x490; // UObject*
	}

	namespace n_ULegacyLevelSequenceDirectorBlueprint { // : UBlueprint
		constexpr auto bRecompileOnLoad = 0x50; // char : 1
		constexpr auto ParentClass = 0x58; // UObject*
		constexpr auto bHasBeenRegenerated = 0x60; // char : 1
		constexpr auto bIsRegeneratingOnLoad = 0x60; // char : 1
		constexpr auto SimpleConstructionScript = 0x68; // USimpleConstructionScript*
		constexpr auto ComponentTemplates = 0x70; // TArray<UActorComponent*>
		constexpr auto Timelines = 0x80; // TArray<UTimelineTemplate*>
		constexpr auto InheritableComponentHandler = 0x90; // UInheritableComponentHandler*
		constexpr auto BlueprintType = 0x98; // EBlueprintType
		constexpr auto BlueprintSystemVersion = 0x9c; // int
		constexpr auto bNativize = 0xd0; // bool
	}

	namespace n_UStaticMeshComponent { // : UMeshComponent
		constexpr auto ForcedLodModel = 0x430; // int
		constexpr auto PreviousLODLevel = 0x434; // int
		constexpr auto MinLOD = 0x438; // int
		constexpr auto SubDivisionStepSize = 0x43c; // int
		constexpr auto StaticMesh = 0x440; // UStaticMesh*
		constexpr auto WireframeColorOverride = 0x448; // FColor
		constexpr auto bOverrideWireframeColor = 0x44c; // char : 1
		constexpr auto bOverrideMinLOD = 0x44c; // char : 1
		constexpr auto bOverrideNavigationExport = 0x44c; // char : 1
		constexpr auto bForceNavigationObstacle = 0x44c; // char : 1
		constexpr auto bDisallowMeshPaintPerInstance = 0x44c; // char : 1
		constexpr auto bIgnoreInstanceForTextureStreaming = 0x44c; // char : 1
		constexpr auto bOverrideLightMapRes = 0x44c; // char : 1
		constexpr auto bCastDistanceFieldIndirectShadow = 0x44c; // char : 1
		constexpr auto bOverrideDistanceFieldSelfShadowBias = 0x44d; // char : 1
		constexpr auto bUseSubDivisions = 0x44d; // char : 1
		constexpr auto bUseDefaultCollision = 0x44d; // char : 1
		constexpr auto bReverseCulling = 0x44d; // char : 1
		constexpr auto OverriddenLightMapRes = 0x450; // int
		constexpr auto DistanceFieldIndirectShadowMinVisibility = 0x454; // float
		constexpr auto DistanceFieldSelfShadowBias = 0x458; // float
		constexpr auto StreamingDistanceMultiplier = 0x45c; // float
		constexpr auto LODData = 0x460; // TArray<FStaticMeshComponentLODInfo>
		constexpr auto StreamingTextureData = 0x470; // TArray<FStreamingTextureBuildInfo>
		constexpr auto LightmassSettings = 0x480; // FLightmassPrimitiveSettings
	}

	namespace n_APhysicsConstraintActor { // : ARigidBodyBase
		constexpr auto ConstraintComp = 0x248; // UPhysicsConstraintComponent*
		constexpr auto ConstraintActor1 = 0x250; // AActor*
		constexpr auto ConstraintActor2 = 0x258; // AActor*
		constexpr auto bDisableCollision = 0x260; // char : 1
	}

	namespace n_USQTemperatureComponent { // : USceneComponent
		constexpr auto TemperatureLastingEffect = 0x218; // ASQLastingEffect*
		constexpr auto OnTemperatureIncrementEvent = 0x220; // FScriptMulticastDelegate
		constexpr auto IncrementalTriggerTemperature = 0x230; // float
		constexpr auto TemperatureRange = 0x234; // FVector2D
		constexpr auto TemperatureDrift = 0x23c; // float
		constexpr auto LastTempChanger = 0x240; // AController*
		constexpr auto CurrentTemperature = 0x248; // float
		constexpr auto HigherTempTrigger = 0x24c; // float
		constexpr auto LowerTempTrigger = 0x250; // float
	}

	namespace n_USQShockwave { // : UObject
		constexpr auto ShockwaveEffectType = 0x28; // ESQShockwaveEffectType
		constexpr auto Strength = 0x2c; // float
		constexpr auto ShockwaveQualitySettings = 0x30; // TArray<FSQShockwaveQualitySetting>
		constexpr auto CameraShake = 0x40; // FSQCameraShake
		constexpr auto SecondaryCameraShake = 0x60; // FSQCameraShake
		constexpr auto VerticalSteps = 0x80; // int
		constexpr auto HorizontalSteps = 0x84; // int
		constexpr auto DefaultRotation = 0x88; // FRotator
		constexpr auto DefaultLocationOffset = 0x94; // FVector
		constexpr auto Range = 0xa0; // float
		constexpr auto PitchRange = 0xa4; // float
		constexpr auto YawRange = 0xa8; // float
		constexpr auto CullingDistance = 0xac; // float
		constexpr auto NearbyExplosionEventRadius = 0xb0; // float
		constexpr auto MaxSoundsToSpawn = 0xb4; // int
		constexpr auto MaxDecalsToSpawn = 0xb8; // int
		constexpr auto bDebugLines = 0xbc; // bool
		constexpr auto bDebugSpheres = 0xbd; // bool
		constexpr auto Emitter = 0xc0; // UParticleSystem*
		constexpr auto DefaultEffectsClass = 0xc8; // USQPhysicalMaterialEffects*
	}

	namespace n_UAbilityTask_WaitGameplayEffectApplied_Target { // : UAbilityTask_WaitGameplayEffectApplied
		constexpr auto OnApplied = 0x1b8; // FScriptMulticastDelegate
	}

	namespace n_UMeshSimplificationSettings { // : UDeveloperSettings
		constexpr auto MeshReductionModuleName = 0x38; // FName
	}

	namespace n_UMovieSceneEventSection { // : UMovieSceneSection
		constexpr auto Events = 0xe0; // FNameCurve
		constexpr auto EventData = 0x158; // FMovieSceneEventSectionData
	}

	namespace n_USQLevel { // : USQPrimaryData
		constexpr auto World = 0x70; // UWorld*
		constexpr auto NeverAddToRotation = 0x98; // bool
		constexpr auto AvailableLayers = 0xa0; // TArray<USQLayer*>
	}

	namespace n_USpringArmComponent { // : USceneComponent
		constexpr auto TargetArmLength = 0x218; // float
		constexpr auto SocketOffset = 0x21c; // FVector
		constexpr auto TargetOffset = 0x228; // FVector
		constexpr auto ProbeSize = 0x234; // float
		constexpr auto ProbeChannel = 0x238; // ECollisionChannel
		constexpr auto bDoCollisionTest = 0x23c; // char : 1
		constexpr auto bUsePawnControlRotation = 0x23c; // char : 1
		constexpr auto bInheritPitch = 0x23c; // char : 1
		constexpr auto bInheritYaw = 0x23c; // char : 1
		constexpr auto bInheritRoll = 0x23c; // char : 1
		constexpr auto bEnableCameraLag = 0x23c; // char : 1
		constexpr auto bEnableCameraRotationLag = 0x23c; // char : 1
		constexpr auto bUseCameraLagSubstepping = 0x23c; // char : 1
		constexpr auto bDrawDebugLagMarkers = 0x23d; // char : 1
		constexpr auto CameraLagSpeed = 0x240; // float
		constexpr auto CameraRotationLagSpeed = 0x244; // float
		constexpr auto CameraLagMaxTimeStep = 0x248; // float
		constexpr auto CameraLagMaxDistance = 0x24c; // float
	}

	namespace n_USoundNodeMixer { // : USoundNode
		constexpr auto InputVolume = 0x40; // TArray<float>
	}

	namespace n_UAbilityTask_WaitGameplayEvent { // : UAbilityTask
		constexpr auto EventReceived = 0x80; // FScriptMulticastDelegate
		constexpr auto OptionalExternalTarget = 0x98; // UAbilitySystemComponent*
	}

	namespace n_UInterpTrackMoveAxis { // : UInterpTrackFloatBase
		constexpr auto MoveAxis = 0x90; // EInterpMoveAxis
		constexpr auto LookupTrack = 0x98; // FInterpLookupTrack
	}

	namespace n_UBP_Attachment_1p88_Blur_C { // : USQWeaponAttachment_Scope
		constexpr auto MeshTransitionPercentage = 0x4b0; // float
		constexpr auto ADSMesh = 0x4b8; // UStaticMesh*
		constexpr auto ADSMeshTransform = 0x4c0; // FTransform
		constexpr auto NonADSMesh = 0x4f0; // UStaticMesh*
		constexpr auto NonADSMeshTransform = 0x500; // FTransform
		constexpr auto InToADSMeshTransitionSettings = 0x530; // TArray<FSQMeshTransitionSettings>
		constexpr auto OutFromADSMeshTransitionSettings = 0x540; // TArray<FSQMeshTransitionSettings>
	}

	namespace n_UParticleModuleAccelerationOverLifetime { // : UParticleModuleAccelerationBase
		constexpr auto AccelOverLife = 0x38; // FRawDistributionVector
	}

	namespace n_UMovieSceneCameraShakeTrack { // : UMovieSceneNameableTrack
		constexpr auto CameraShakeSections = 0x58; // TArray<UMovieSceneSection*>
	}

	namespace n_ASplineMeshActor { // : AActor
		constexpr auto SplineMeshComponent = 0x248; // USplineMeshComponent*
	}

	namespace n_UBP_SQVehicleSettings_C { // : USQVehicleSettings
		constexpr auto VehicleType = 0x58; // ESQVehicle
		constexpr auto VehicleTags = 0x60; // TSet<ESQVehicleTag>
		constexpr auto VehicleVersions = 0xb0; // TArray<FSQVehicleVersion>
		constexpr auto SpawnerSize = 0xc0; // ESQVehicleSpawnerSize
	}

	namespace n_UParticleModuleColor_Seeded { // : UParticleModuleColor
		constexpr auto RandomSeedInfo = 0xc0; // FParticleRandomSeedInfo
	}

	namespace n_UInterpGroupInstCamera { // : UInterpGroupInst
		constexpr auto Group = 0x28; // UInterpGroup*
		constexpr auto GroupActor = 0x30; // AActor*
		constexpr auto TrackInst = 0x38; // TArray<UInterpTrackInst*>
	}

	namespace n_USQMenuWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto MenuStyle = 0x30; // FSQMenuStyle
	}

	namespace n_UBP_Attachment_ElcanLDS_Blur_C { // : USQWeaponAttachment_Scope
		constexpr auto MeshTransitionPercentage = 0x4b0; // float
		constexpr auto ADSMesh = 0x4b8; // UStaticMesh*
		constexpr auto ADSMeshTransform = 0x4c0; // FTransform
		constexpr auto NonADSMesh = 0x4f0; // UStaticMesh*
		constexpr auto NonADSMeshTransform = 0x500; // FTransform
		constexpr auto InToADSMeshTransitionSettings = 0x530; // TArray<FSQMeshTransitionSettings>
		constexpr auto OutFromADSMeshTransitionSettings = 0x540; // TArray<FSQMeshTransitionSettings>
	}

	namespace n_ABlockingVolume { // : AVolume
		constexpr auto BrushType = 0x248; // EBrushType
		constexpr auto BrushColor = 0x24c; // FColor
		constexpr auto PolyFlags = 0x250; // int
		constexpr auto bColored = 0x254; // char : 1
		constexpr auto bSolidWhenSelected = 0x254; // char : 1
		constexpr auto bPlaceableFromClassBrowser = 0x254; // char : 1
		constexpr auto bNotForClientOrServer = 0x254; // char : 1
		constexpr auto Brush = 0x258; // UModel*
		constexpr auto BrushComponent = 0x260; // UBrushComponent*
		constexpr auto bInManipulation = 0x268; // char : 1
		constexpr auto SavedSelections = 0x270; // TArray<FGeomSelection>
	}

	namespace n_UMaterialExpressionAtmosphericFogColor { // : UMaterialExpression
		constexpr auto WorldPosition = 0x40; // FExpressionInput
	}

	namespace n_ABP_GenericMelee_C { // : ABP_Weapon2_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
	}

	namespace n_UEngine { // : UObject
		constexpr auto TinyFont = 0x30; // UFont*
		constexpr auto TinyFontName = 0x38; // FSoftObjectPath
		constexpr auto SmallFont = 0x50; // UFont*
		constexpr auto SmallFontName = 0x58; // FSoftObjectPath
		constexpr auto MediumFont = 0x70; // UFont*
		constexpr auto MediumFontName = 0x78; // FSoftObjectPath
		constexpr auto LargeFont = 0x90; // UFont*
		constexpr auto LargeFontName = 0x98; // FSoftObjectPath
		constexpr auto SubtitleFont = 0xb0; // UFont*
		constexpr auto SubtitleFontName = 0xb8; // FSoftObjectPath
		constexpr auto AdditionalFonts = 0xd0; // TArray<UFont*>
		constexpr auto AdditionalFontNames = 0xe8; // TArray<FString>
		constexpr auto ConsoleClass = 0xf8; // UConsole*
		constexpr auto ConsoleClassName = 0x100; // FSoftClassPath
		constexpr auto GameViewportClientClass = 0x118; // UGameViewportClient*
		constexpr auto GameViewportClientClassName = 0x120; // FSoftClassPath
		constexpr auto LocalPlayerClass = 0x138; // ULocalPlayer*
		constexpr auto LocalPlayerClassName = 0x140; // FSoftClassPath
		constexpr auto WorldSettingsClass = 0x158; // AWorldSettings*
		constexpr auto WorldSettingsClassName = 0x160; // FSoftClassPath
		constexpr auto NavigationSystemClassName = 0x178; // FSoftClassPath
		constexpr auto NavigationSystemClass = 0x190; // UNavigationSystemBase*
		constexpr auto NavigationSystemConfigClassName = 0x198; // FSoftClassPath
		constexpr auto NavigationSystemConfigClass = 0x1b0; // UNavigationSystemConfig*
		constexpr auto AvoidanceManagerClassName = 0x1b8; // FSoftClassPath
		constexpr auto AvoidanceManagerClass = 0x1d0; // UAvoidanceManager*
		constexpr auto PhysicsCollisionHandlerClass = 0x1d8; // UPhysicsCollisionHandler*
		constexpr auto PhysicsCollisionHandlerClassName = 0x1e0; // FSoftClassPath
		constexpr auto GameUserSettingsClassName = 0x1f8; // FSoftClassPath
		constexpr auto GameUserSettingsClass = 0x210; // UGameUserSettings*
		constexpr auto AIControllerClassName = 0x218; // FSoftClassPath
		constexpr auto GameUserSettings = 0x230; // UGameUserSettings*
		constexpr auto LevelScriptActorClass = 0x238; // ALevelScriptActor*
		constexpr auto LevelScriptActorClassName = 0x240; // FSoftClassPath
		constexpr auto DefaultBlueprintBaseClassName = 0x258; // FSoftClassPath
		constexpr auto GameSingletonClassName = 0x270; // FSoftClassPath
		constexpr auto GameSingleton = 0x288; // UObject*
		constexpr auto AssetManagerClassName = 0x290; // FSoftClassPath
		constexpr auto AssetManager = 0x2a8; // UAssetManager*
		constexpr auto DefaultTexture = 0x2b0; // UTexture2D*
		constexpr auto DefaultTextureName = 0x2b8; // FSoftObjectPath
		constexpr auto DefaultDiffuseTexture = 0x2d0; // UTexture*
		constexpr auto DefaultDiffuseTextureName = 0x2d8; // FSoftObjectPath
		constexpr auto DefaultBSPVertexTexture = 0x2f0; // UTexture2D*
		constexpr auto DefaultBSPVertexTextureName = 0x2f8; // FSoftObjectPath
		constexpr auto HighFrequencyNoiseTexture = 0x310; // UTexture2D*
		constexpr auto HighFrequencyNoiseTextureName = 0x318; // FSoftObjectPath
		constexpr auto DefaultBokehTexture = 0x330; // UTexture2D*
		constexpr auto DefaultBokehTextureName = 0x338; // FSoftObjectPath
		constexpr auto DefaultBloomKernelTexture = 0x350; // UTexture2D*
		constexpr auto DefaultBloomKernelTextureName = 0x358; // FSoftObjectPath
		constexpr auto WireframeMaterial = 0x370; // UMaterial*
		constexpr auto WireframeMaterialName = 0x378; // FString
		constexpr auto DebugMeshMaterial = 0x388; // UMaterial*
		constexpr auto DebugMeshMaterialName = 0x390; // FSoftObjectPath
		constexpr auto EmissiveMeshMaterial = 0x3a8; // UMaterial*
		constexpr auto EmissiveMeshMaterialName = 0x3b0; // FSoftObjectPath
		constexpr auto LevelColorationLitMaterial = 0x3c8; // UMaterial*
		constexpr auto LevelColorationLitMaterialName = 0x3d0; // FString
		constexpr auto LevelColorationUnlitMaterial = 0x3e0; // UMaterial*
		constexpr auto LevelColorationUnlitMaterialName = 0x3e8; // FString
		constexpr auto LightingTexelDensityMaterial = 0x3f8; // UMaterial*
		constexpr auto LightingTexelDensityName = 0x400; // FString
		constexpr auto ShadedLevelColorationLitMaterial = 0x410; // UMaterial*
		constexpr auto ShadedLevelColorationLitMaterialName = 0x418; // FString
		constexpr auto ShadedLevelColorationUnlitMaterial = 0x428; // UMaterial*
		constexpr auto ShadedLevelColorationUnlitMaterialName = 0x430; // FString
		constexpr auto RemoveSurfaceMaterial = 0x440; // UMaterial*
		constexpr auto RemoveSurfaceMaterialName = 0x448; // FSoftObjectPath
		constexpr auto VertexColorMaterial = 0x460; // UMaterial*
		constexpr auto VertexColorMaterialName = 0x468; // FString
		constexpr auto VertexColorViewModeMaterial_ColorOnly = 0x478; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_ColorOnly = 0x480; // FString
		constexpr auto VertexColorViewModeMaterial_AlphaAsColor = 0x490; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_AlphaAsColor = 0x498; // FString
		constexpr auto VertexColorViewModeMaterial_RedOnly = 0x4a8; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_RedOnly = 0x4b0; // FString
		constexpr auto VertexColorViewModeMaterial_GreenOnly = 0x4c0; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_GreenOnly = 0x4c8; // FString
		constexpr auto VertexColorViewModeMaterial_BlueOnly = 0x4d8; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_BlueOnly = 0x4e0; // FString
		constexpr auto DebugEditorMaterialName = 0x4f0; // FSoftObjectPath
		constexpr auto ConstraintLimitMaterial = 0x508; // UMaterial*
		constexpr auto ConstraintLimitMaterialX = 0x510; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialXAxis = 0x518; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialY = 0x520; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialYAxis = 0x528; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialZ = 0x530; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialZAxis = 0x538; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialPrismatic = 0x540; // UMaterialInstanceDynamic*
		constexpr auto InvalidLightmapSettingsMaterial = 0x548; // UMaterial*
		constexpr auto InvalidLightmapSettingsMaterialName = 0x550; // FSoftObjectPath
		constexpr auto PreviewShadowsIndicatorMaterial = 0x568; // UMaterial*
		constexpr auto PreviewShadowsIndicatorMaterialName = 0x570; // FSoftObjectPath
		constexpr auto ArrowMaterial = 0x588; // UMaterial*
		constexpr auto ArrowMaterialYellow = 0x590; // UMaterialInstanceDynamic*
		constexpr auto ArrowMaterialName = 0x598; // FSoftObjectPath
		constexpr auto LightingOnlyBrightness = 0x5b0; // FLinearColor
		constexpr auto ShaderComplexityColors = 0x5c0; // TArray<FLinearColor>
		constexpr auto QuadComplexityColors = 0x5d0; // TArray<FLinearColor>
		constexpr auto LightComplexityColors = 0x5e0; // TArray<FLinearColor>
		constexpr auto StationaryLightOverlapColors = 0x5f0; // TArray<FLinearColor>
		constexpr auto LODColorationColors = 0x600; // TArray<FLinearColor>
		constexpr auto HLODColorationColors = 0x610; // TArray<FLinearColor>
		constexpr auto StreamingAccuracyColors = 0x620; // TArray<FLinearColor>
		constexpr auto MaxPixelShaderAdditiveComplexityCount = 0x630; // float
		constexpr auto MaxES2PixelShaderAdditiveComplexityCount = 0x634; // float
		constexpr auto MaxES3PixelShaderAdditiveComplexityCount = 0x638; // float
		constexpr auto MinLightMapDensity = 0x63c; // float
		constexpr auto IdealLightMapDensity = 0x640; // float
		constexpr auto MaxLightMapDensity = 0x644; // float
		constexpr auto bRenderLightMapDensityGrayscale = 0x648; // char : 1
		constexpr auto RenderLightMapDensityGrayscaleScale = 0x64c; // float
		constexpr auto RenderLightMapDensityColorScale = 0x650; // float
		constexpr auto LightMapDensityVertexMappedColor = 0x654; // FLinearColor
		constexpr auto LightMapDensitySelectedColor = 0x664; // FLinearColor
		constexpr auto StatColorMappings = 0x678; // TArray<FStatColorMapping>
		constexpr auto DefaultPhysMaterial = 0x688; // UPhysicalMaterial*
		constexpr auto DefaultPhysMaterialName = 0x690; // FSoftObjectPath
		constexpr auto ActiveGameNameRedirects = 0x6a8; // TArray<FGameNameRedirect>
		constexpr auto ActiveClassRedirects = 0x6b8; // TArray<FClassRedirect>
		constexpr auto ActivePluginRedirects = 0x6c8; // TArray<FPluginRedirect>
		constexpr auto ActiveStructRedirects = 0x6d8; // TArray<FStructRedirect>
		constexpr auto PreIntegratedSkinBRDFTexture = 0x6e8; // UTexture2D*
		constexpr auto PreIntegratedSkinBRDFTextureName = 0x6f0; // FSoftObjectPath
		constexpr auto BlueNoiseTexture = 0x708; // UTexture2D*
		constexpr auto BlueNoiseTextureName = 0x710; // FSoftObjectPath
		constexpr auto MiniFontTexture = 0x728; // UTexture2D*
		constexpr auto MiniFontTextureName = 0x730; // FSoftObjectPath
		constexpr auto WeightMapPlaceholderTexture = 0x748; // UTexture*
		constexpr auto WeightMapPlaceholderTextureName = 0x750; // FSoftObjectPath
		constexpr auto LightMapDensityTexture = 0x768; // UTexture2D*
		constexpr auto LightMapDensityTextureName = 0x770; // FSoftObjectPath
		constexpr auto GameViewport = 0x790; // UGameViewportClient*
		constexpr auto DeferredCommands = 0x798; // TArray<FString>
		constexpr auto TickCycles = 0x7a8; // int
		constexpr auto GameCycles = 0x7ac; // int
		constexpr auto ClientCycles = 0x7b0; // int
		constexpr auto NearClipPlane = 0x7b4; // float
		constexpr auto bHardwareSurveyEnabled = 0x7b8; // char : 1
		constexpr auto bSubtitlesEnabled = 0x7b8; // char : 1
		constexpr auto bSubtitlesForcedOff = 0x7b8; // char : 1
		constexpr auto MaximumLoopIterationCount = 0x7bc; // int
		constexpr auto bCanBlueprintsTickByDefault = 0x7c0; // char : 1
		constexpr auto bOptimizeAnimBlueprintMemberVariableAccess = 0x7c0; // char : 1
		constexpr auto bAllowMultiThreadedAnimationUpdate = 0x7c0; // char : 1
		constexpr auto bEnableEditorPSysRealtimeLOD = 0x7c0; // char : 1
		constexpr auto bSmoothFrameRate = 0x7c0; // char : 1
		constexpr auto bUseFixedFrameRate = 0x7c0; // char : 1
		constexpr auto FixedFrameRate = 0x7c4; // float
		constexpr auto SmoothedFrameRateRange = 0x7c8; // FFloatRange
		constexpr auto DefaultCustomTimeStep = 0x7d8; // UEngineCustomTimeStep*
		constexpr auto CurrentCustomTimeStep = 0x7e0; // UEngineCustomTimeStep*
		constexpr auto CustomTimeStepClassName = 0x7e8; // FSoftClassPath
		constexpr auto DefaultTimecodeProvider = 0x800; // UTimecodeProvider*
		constexpr auto CustomTimecodeProvider = 0x808; // UTimecodeProvider*
		constexpr auto DefaultTimecodeProviderClassName = 0x810; // FSoftClassPath
		constexpr auto TimecodeProviderClassName = 0x828; // FSoftClassPath
		constexpr auto DefaultTimecodeFrameRate = 0x840; // FFrameRate
		constexpr auto bCheckForMultiplePawnsSpawnedInAFrame = 0x848; // char : 1
		constexpr auto NumPawnsAllowedToBeSpawnedInAFrame = 0x84c; // int
		constexpr auto bShouldGenerateLowQualityLightmaps = 0x850; // char : 1
		constexpr auto C_WorldBox = 0x854; // FColor
		constexpr auto C_BrushWire = 0x858; // FColor
		constexpr auto C_AddWire = 0x85c; // FColor
		constexpr auto C_SubtractWire = 0x860; // FColor
		constexpr auto C_SemiSolidWire = 0x864; // FColor
		constexpr auto C_NonSolidWire = 0x868; // FColor
		constexpr auto C_WireBackground = 0x86c; // FColor
		constexpr auto C_ScaleBoxHi = 0x870; // FColor
		constexpr auto C_VolumeCollision = 0x874; // FColor
		constexpr auto C_BSPCollision = 0x878; // FColor
		constexpr auto C_OrthoBackground = 0x87c; // FColor
		constexpr auto C_Volume = 0x880; // FColor
		constexpr auto C_BrushShape = 0x884; // FColor
		constexpr auto StreamingDistanceFactor = 0x888; // float
		constexpr auto GameScreenshotSaveDirectory = 0x890; // FDirectoryPath
		constexpr auto TransitionType = 0x8a0; // ETransitionType
		constexpr auto TransitionDescription = 0x8a8; // FString
		constexpr auto TransitionGameMode = 0x8b8; // FString
		constexpr auto MeshLODRange = 0x8c8; // float
		constexpr auto bAllowMatureLanguage = 0x8cc; // char : 1
		constexpr auto CameraRotationThreshold = 0x8d0; // float
		constexpr auto CameraTranslationThreshold = 0x8d4; // float
		constexpr auto PrimitiveProbablyVisibleTime = 0x8d8; // float
		constexpr auto MaxOcclusionPixelsFraction = 0x8dc; // float
		constexpr auto bPauseOnLossOfFocus = 0x8e0; // char : 1
		constexpr auto MaxParticleResize = 0x8e4; // int
		constexpr auto MaxParticleResizeWarn = 0x8e8; // int
		constexpr auto PendingDroppedNotes = 0x8f0; // TArray<FDropNoteInfo>
		constexpr auto NetClientTicksPerSecond = 0x900; // float
		constexpr auto DisplayGamma = 0x904; // float
		constexpr auto MinDesiredFrameRate = 0x908; // float
		constexpr auto DefaultSelectedMaterialColor = 0x90c; // FLinearColor
		constexpr auto SelectedMaterialColor = 0x91c; // FLinearColor
		constexpr auto SelectionOutlineColor = 0x92c; // FLinearColor
		constexpr auto SubduedSelectionOutlineColor = 0x93c; // FLinearColor
		constexpr auto SelectedMaterialColorOverride = 0x94c; // FLinearColor
		constexpr auto bIsOverridingSelectedColor = 0x95c; // bool
		constexpr auto bEnableOnScreenDebugMessages = 0x960; // char : 1
		constexpr auto bEnableOnScreenDebugMessagesDisplay = 0x960; // char : 1
		constexpr auto bSuppressMapWarnings = 0x960; // char : 1
		constexpr auto bDisableAILogging = 0x960; // char : 1
		constexpr auto bEnableVisualLogRecordingOnStart = 0x964; // uint32
		constexpr auto ScreenSaverInhibitorSemaphore = 0x96c; // int
		constexpr auto bLockReadOnlyLevels = 0x970; // char : 1
		constexpr auto ParticleEventManagerClassPath = 0x978; // FString
		constexpr auto SelectionHighlightIntensity = 0x998; // float
		constexpr auto BSPSelectionHighlightIntensity = 0x99c; // float
		constexpr auto SelectionHighlightIntensityBillboards = 0x9a0; // float
		constexpr auto NetDriverDefinitions = 0xbd0; // TArray<FNetDriverDefinition>
		constexpr auto ServerActors = 0xbe0; // TArray<FString>
		constexpr auto RuntimeServerActors = 0xbf0; // TArray<FString>
		constexpr auto NetErrorLogInterval = 0xc00; // float
		constexpr auto bStartedLoadMapMovie = 0xc04; // char : 1
		constexpr auto NextWorldContextHandle = 0xc20; // int
	}

	namespace n_USQFindFriendsCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto PlayerController = 0x50; // APlayerController*
	}

	namespace n_ASceneCapture { // : AActor
		constexpr auto MeshComp = 0x248; // UStaticMeshComponent*
		constexpr auto SceneComponent = 0x250; // USceneComponent*
	}

	namespace n_Urpg7v2_Skeleton_AnimBlueprint_C { // : USQWeaponAnimInstance
		constexpr auto UberGraphFrame = 0x2b0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root_E0CECCFA49FE9389620AFE8D3096328E = 0x2b8; // FAnimNode_Root
		constexpr auto AnimGraphNode_LayeredBoneBlend_F3B0CB6240CF145CB3E0BE937853E3AD = 0x2e8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_67DD363640B34E8D000E98BD2431C216 = 0x3a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot_A0CE83B64D9CC006683F4B9B1615EDF5 = 0x420; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_F2287A36475278A64D137892E39E0493 = 0x468; // FAnimNode_Slot
		constexpr auto AnimGraphNode_LayeredBoneBlend_4228073E4B6CCBE278A3B4B0CEF1627B = 0x4b0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_Slot_508FF6F4463FDC4B045716A340994C73 = 0x570; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SequencePlayer_3B39F28040740C519198858DB53C82CB = 0x5b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LocalRefPose_DE2CF9BC492E19C2B74239870FF78791 = 0x630; // FAnimNode_RefPose
	}

	namespace n_UInheritableComponentHandler { // : UObject
		constexpr auto Records = 0x28; // TArray<FComponentOverrideRecord>
		constexpr auto UnnecessaryComponents = 0x38; // TArray<UActorComponent*>
	}

	namespace n_USQApprovalQueueWidget { // : USQUserWidget
		constexpr auto ApprovalEntry = 0x230; // USQApprovalEntryWidget*
		constexpr auto ScrollBoxCPP = 0x238; // UScrollBox*
		constexpr auto EntryWidgets = 0x240; // TMap<uint32, USQApprovalEntryWidget*>
		constexpr auto ApprovalKeyTextCPP = 0x290; // UTextBlock*
		constexpr auto DisapprovalKeyTextCPP = 0x298; // UTextBlock*
	}

	namespace n_UBP_AK74M_Reflex_StaticInfo_C { // : UBP_AK74M_StaticInfo_C
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_UShowLoginUICallbackProxy { // : UBlueprintAsyncActionBase
		constexpr auto OnSuccess = 0x30; // FScriptMulticastDelegate
		constexpr auto OnFailure = 0x40; // FScriptMulticastDelegate
	}

	namespace n_ABP_RPG7V2_Parent_Founders_C { // : ABP_RPG7V2_Parent_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
		constexpr auto MuzzleFlashRearComponent3P = 0x7b8; // UParticleSystemComponent*
		constexpr auto BackBlastComponent3P = 0x7c0; // UChildActorComponent*
		constexpr auto MuzzleFlashRearComponent1P = 0x7c8; // UParticleSystemComponent*
		constexpr auto SquadBlast = 0x7d0; // USQBlastComponent*
		constexpr auto BackBlastComponent1P = 0x7d8; // UChildActorComponent*
		constexpr auto BackblastSocket = 0x7e0; // FName
		constexpr auto BackblastEffect1P = 0x7e8; // UParticleSystem*
		constexpr auto BackblastEffect3P = 0x7f0; // UParticleSystem*
	}

	namespace n_UProxyLODMeshSimplificationSettings { // : UDeveloperSettings
		constexpr auto ProxyLODMeshReductionModuleName = 0x38; // FName
	}

	namespace n_UAIPerceptionSystem { // : UAISubsystem
		constexpr auto Senses = 0x88; // TArray<UAISense*>
		constexpr auto PerceptionAgingRate = 0x98; // float
	}

	namespace n_UMaterialExpressionCurveAtlasRowParameter { // : UMaterialExpressionScalarParameter
		constexpr auto Curve = 0x60; // UCurveLinearColor*
		constexpr auto Atlas = 0x68; // UCurveLinearColorAtlas*
		constexpr auto InputTime = 0x70; // FExpressionInput
	}

	namespace n_UMaterialExpressionStaticSwitch { // : UMaterialExpression
		constexpr auto DefaultValue = 0x40; // char : 1
		constexpr auto A = 0x44; // FExpressionInput
		constexpr auto B = 0x58; // FExpressionInput
		constexpr auto Value = 0x6c; // FExpressionInput
	}

	namespace n_UChaosPhysicalMaterial { // : UObject
		constexpr auto Friction = 0x28; // float
		constexpr auto Restitution = 0x2c; // float
		constexpr auto SleepingLinearVelocityThreshold = 0x30; // float
		constexpr auto SleepingAngularVelocityThreshold = 0x34; // float
	}

	namespace n_USQInputComponent { // : UInputComponent
		constexpr auto CachedKeyToActionInfo = 0x148; // TArray<FCachedKeyToActionInfo>
	}

	namespace n_USQInteractableWidgetList { // : UUserWidget
		constexpr auto ColorAndOpacity = 0x110; // FLinearColor
		constexpr auto ColorAndOpacityDelegate = 0x120; // DelegateProperty
		constexpr auto ForegroundColor = 0x130; // FSlateColor
		constexpr auto ForegroundColorDelegate = 0x158; // DelegateProperty
		constexpr auto Padding = 0x168; // FMargin
		constexpr auto ActiveSequencePlayers = 0x178; // TArray<UUMGSequencePlayer*>
		constexpr auto StoppedSequencePlayers = 0x188; // TArray<UUMGSequencePlayer*>
		constexpr auto NamedSlotBindings = 0x198; // TArray<FNamedSlotBinding>
		constexpr auto WidgetTree = 0x1a8; // UWidgetTree*
		constexpr auto Priority = 0x1b0; // int
		constexpr auto bSupportsKeyboardFocus = 0x1b4; // char : 1
		constexpr auto bIsFocusable = 0x1b4; // char : 1
		constexpr auto bStopAction = 0x1b4; // char : 1
		constexpr auto bHasScriptImplementedTick = 0x1b4; // char : 1
		constexpr auto bHasScriptImplementedPaint = 0x1b4; // char : 1
		constexpr auto bCookedWidgetTree = 0x1b4; // char : 1
		constexpr auto TickFrequency = 0x1c0; // EWidgetTickFrequency
		constexpr auto InputComponent = 0x1c8; // UInputComponent*
		constexpr auto AnimationCallbacks = 0x1d0; // TArray<FAnimationEventBinding>
	}

	namespace n_USQCompassMarker { // : USQCompassBaseUnit
		constexpr auto MarkerColor = 0x238; // FLinearColor
		constexpr auto DistanceResolutionCurveInMeters = 0x248; // UCurveFloat*
		constexpr auto MapMarker = 0x250; // ASQMapMarker*
		constexpr auto MapMarkerVisualData = 0x258; // FSQMapMarkerVisualData
		constexpr auto DistanceTextBlock = 0x320; // UTextBlock*
		constexpr auto MeterTextBlock = 0x328; // UTextBlock*
	}

	namespace n_USubmixEffectSubmixEQPreset { // : USoundEffectSubmixPreset
		constexpr auto Settings = 0x78; // FSubmixEffectSubmixEQSettings
	}

	namespace n_UBTTask_PlaySound { // : UBTTaskNode
		constexpr auto SoundToPlay = 0x70; // USoundCue*
	}

	namespace n_UParticleModuleSpawnBase { // : UParticleModule
		constexpr auto bProcessSpawnRate = 0x30; // char : 1
		constexpr auto bProcessBurstList = 0x30; // char : 1
	}

	namespace n_ABP_AK74MGP25_UGL_Desert_Parent_C { // : ABP_AK74GP25_UGL_Parent_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UMaterialExpressionLandscapeLayerSwitch { // : UMaterialExpression
		constexpr auto LayerUsed = 0x40; // FExpressionInput
		constexpr auto LayerNotUsed = 0x54; // FExpressionInput
		constexpr auto ParameterName = 0x68; // FName
		constexpr auto PreviewUsed = 0x70; // char : 1
		constexpr auto ExpressionGUID = 0x74; // FGuid
	}

	namespace n_UMouseCursorBinding { // : UPropertyBinding
		constexpr auto SourceObject = 0x28; // TWeakObjectPtr<UObject>
		constexpr auto SourcePath = 0x30; // FDynamicPropertyPath
		constexpr auto DestinationProperty = 0x60; // FName
	}

	namespace n_UHierarchicalLODSetup { // : UObject
		constexpr auto HierarchicalLODSetup = 0x28; // TArray<FHierarchicalSimplification>
		constexpr auto OverrideBaseMaterial = 0x38; // UMaterialInterface*
	}

	namespace n_UPrimaryAssetLabel { // : UPrimaryDataAsset
		constexpr auto Rules = 0x30; // FPrimaryAssetRules
		constexpr auto bLabelAssetsInMyDirectory = 0x40; // char : 1
		constexpr auto bIsRuntimeLabel = 0x40; // char : 1
		constexpr auto ExplicitAssets = 0x48; // TArray<UObject*>
		constexpr auto ExplicitBlueprints = 0x58; // TArray<UClass*>
		constexpr auto AssetCollection = 0x68; // FCollectionReference
	}

	namespace n_UMaterialExpressionAtmosphericLightVector { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_USQShovelStaticInfo { // : USQItemStaticInfo
		constexpr auto DigWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto Dig1pMontage = 0x500; // UAnimMontage*
		constexpr auto Dig3pMontage = 0x508; // UAnimMontage*
		constexpr auto DestroyWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto Destroy1pMontage = 0x518; // UAnimMontage*
		constexpr auto Destroy3pMontage = 0x520; // UAnimMontage*
	}

	namespace n_UEdGraphPin_Deprecated { // : UObject
		constexpr auto PinName = 0x28; // FString
		constexpr auto PinToolTip = 0x38; // FString
		constexpr auto Direction = 0x48; // EEdGraphPinDirection
		constexpr auto PinType = 0x50; // FEdGraphPinType
		constexpr auto DefaultValue = 0xa8; // FString
		constexpr auto AutogeneratedDefaultValue = 0xb8; // FString
		constexpr auto DefaultObject = 0xc8; // UObject*
		constexpr auto DefaultTextValue = 0xd0; // FText
		constexpr auto LinkedTo = 0xe8; // TArray<UEdGraphPin_Deprecated*>
		constexpr auto SubPins = 0xf8; // TArray<UEdGraphPin_Deprecated*>
		constexpr auto ParentPin = 0x108; // UEdGraphPin_Deprecated*
		constexpr auto ReferencePassThroughConnection = 0x110; // UEdGraphPin_Deprecated*
	}

	namespace n_UMaterialExpressionPrecomputedAOMask { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UParticleModuleTypeDataAnimTrail { // : UParticleModuleTypeDataBase
		constexpr auto bDeadTrailsOnDeactivate = 0x30; // char : 1
		constexpr auto bEnablePreviousTangentRecalculation = 0x30; // char : 1
		constexpr auto bTangentRecalculationEveryFrame = 0x30; // char : 1
		constexpr auto TilingDistance = 0x34; // float
		constexpr auto DistanceTessellationStepSize = 0x38; // float
		constexpr auto TangentTessellationStepSize = 0x3c; // float
		constexpr auto WidthTessellationStepSize = 0x40; // float
	}

	namespace n_ABP_AK74MGP25_UGL_Desert_Smoke_Blue_C { // : ABP_AK74MGP25_UGL_Desert_Smoke_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UEnvQuery { // : UDataAsset
		constexpr auto QueryName = 0x30; // FName
		constexpr auto Options = 0x38; // TArray<UEnvQueryOption*>
	}

	namespace n_ASQFloatingVehicle { // : ASQPawn
		constexpr auto SimpleMovementComponent = 0x340; // USQSimpleMovementComponent*
		constexpr auto CameraComponent = 0x348; // UCameraComponent*
		constexpr auto SpringArm = 0x350; // USpringArmComponent*
		constexpr auto SkeletalMeshComponent = 0x358; // USkeletalMeshComponent*
		constexpr auto CapsuleComponent = 0x360; // UCapsuleComponent*
	}

	namespace n_USQSquadStateDataVehicle { // : USQSquadStateDataVehicleSeat
		constexpr auto StaticUIData = 0x1a8; // USQVehicleUIStaticDataAsset*
		constexpr auto bHoldsOccupant = 0x1b0; // char : 1
		constexpr auto bHoldsSquadLeader = 0x1b0; // char : 1
		constexpr auto ClaimingSquadID = 0x1b4; // int
		constexpr auto VehicleOccupants = 0x1b8; // FVehicleOccupantsArray
	}

	namespace n_USQConfig { // : UObject
		constexpr auto ConfigLoaded = 0x28; // bool
		constexpr auto AnnouncementURL = 0x270; // FString
		constexpr auto AnnouncementHeaderURL = 0x280; // FString
	}

	namespace n_USQMapWidgetSpawnPoint { // : USQMapWidget
		constexpr auto bSpawnOnSingleClick = 0x2a8; // bool
		constexpr auto bSpawnOnDoubleClick = 0x2a9; // bool
		constexpr auto bIsSelected = 0x2ac; // char : 1
		constexpr auto bSieged = 0x2ac; // char : 1
		constexpr auto bSpawningEnabled = 0x2ac; // char : 1
		constexpr auto ActivatedTimeStamp = 0x2b0; // float
		constexpr auto SpawnPointType = 0x2b4; // ESQSpawnPointType
		constexpr auto OwningGameSpawn = 0x2b8; // ASQGameSpawn*
	}

	namespace n_USQPrimaryData { // : UPrimaryDataAsset
		constexpr auto ID = 0x30; // FName
		constexpr auto Data = 0x38; // FDataTableRowHandle
		constexpr auto ModId = 0x48; // FString
		constexpr auto PackingRules = 0x58; // FPrimaryAssetRules
		constexpr auto bLabelAssetsInMyDirectory = 0x68; // char : 1
	}

	namespace n_UMaterialExpressionVirtualTextureFeatureSwitch { // : UMaterialExpression
		constexpr auto No = 0x40; // FExpressionInput
		constexpr auto Yes = 0x54; // FExpressionInput
	}

	namespace n_UAISense_Touch { // : UAISense
		constexpr auto RegisteredEvents = 0x80; // TArray<FAITouchEvent>
	}

	namespace n_UBTService_DefaultFocus { // : UBTService_BlackboardBase
		constexpr auto FocusPriority = 0x98; // char
	}

	namespace n_UPlayFabClientAPI { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnPlayFabResponse = 0x28; // FScriptMulticastDelegate
		constexpr auto CallAuthenticationContext = 0xa40; // UPlayFabAuthenticationContext*
		constexpr auto RequestJsonObj = 0xa48; // UPlayFabJsonObject*
		constexpr auto ResponseJsonObj = 0xa50; // UPlayFabJsonObject*
	}

	namespace n_UBP_AK74MGP25_Reflex_Rifle_StaticInfo_C { // : UBP_AK74MGP25_Rifle_StaticInfo_C
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_UBP_SmallShockwave_C { // : USQShockwave
		constexpr auto ShockwaveEffectType = 0x28; // ESQShockwaveEffectType
		constexpr auto Strength = 0x2c; // float
		constexpr auto ShockwaveQualitySettings = 0x30; // TArray<FSQShockwaveQualitySetting>
		constexpr auto CameraShake = 0x40; // FSQCameraShake
		constexpr auto SecondaryCameraShake = 0x60; // FSQCameraShake
		constexpr auto VerticalSteps = 0x80; // int
		constexpr auto HorizontalSteps = 0x84; // int
		constexpr auto DefaultRotation = 0x88; // FRotator
		constexpr auto DefaultLocationOffset = 0x94; // FVector
		constexpr auto Range = 0xa0; // float
		constexpr auto PitchRange = 0xa4; // float
		constexpr auto YawRange = 0xa8; // float
		constexpr auto CullingDistance = 0xac; // float
		constexpr auto NearbyExplosionEventRadius = 0xb0; // float
		constexpr auto MaxSoundsToSpawn = 0xb4; // int
		constexpr auto MaxDecalsToSpawn = 0xb8; // int
		constexpr auto bDebugLines = 0xbc; // bool
		constexpr auto bDebugSpheres = 0xbd; // bool
		constexpr auto Emitter = 0xc0; // UParticleSystem*
		constexpr auto DefaultEffectsClass = 0xc8; // USQPhysicalMaterialEffects*
	}

	namespace n_UNetConnection { // : UPlayer
		constexpr auto Children = 0x48; // TArray<UChildConnection*>
		constexpr auto Driver = 0x58; // UNetDriver*
		constexpr auto PackageMapClass = 0x60; // UPackageMap*
		constexpr auto PackageMap = 0x68; // UPackageMap*
		constexpr auto OpenChannels = 0x70; // TArray<UChannel*>
		constexpr auto SentTemporaries = 0x80; // TArray<AActor*>
		constexpr auto ViewTarget = 0x90; // AActor*
		constexpr auto OwningActor = 0x98; // AActor*
		constexpr auto MaxPacket = 0xa0; // int
		constexpr auto InternalAck = 0xa4; // char : 1
		constexpr auto PlayerId = 0x160; // FUniqueNetIdRepl
		constexpr auto LastReceiveTime = 0x1f0; // double
		constexpr auto ChannelsToTick = 0x14b8; // TArray<UChannel*>
	}

	namespace n_ABP_M4_M68_Woodland_C { // : ABP_M4_M68_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_URendererSettings { // : UDeveloperSettings
		constexpr auto bMobileHDR = 0x38; // char : 1
		constexpr auto bMobileDisableVertexFog = 0x38; // char : 1
		constexpr auto MaxMobileCascades = 0x3c; // int
		constexpr auto MobileMSAASampleCount = 0x40; // EMobileMSAASampleCount
		constexpr auto bMobileUseLegacyShadingModel = 0x44; // char : 1
		constexpr auto bMobileUseHWsRGBEncoding = 0x44; // char : 1
		constexpr auto bMobileAllowDitheredLODTransition = 0x44; // char : 1
		constexpr auto bMobileAllowSoftwareOcclusionCulling = 0x44; // char : 1
		constexpr auto bDiscardUnusedQualityLevels = 0x44; // char : 1
		constexpr auto bOcclusionCulling = 0x44; // char : 1
		constexpr auto MinScreenRadiusForLights = 0x48; // float
		constexpr auto MinScreenRadiusForEarlyZPass = 0x4c; // float
		constexpr auto MinScreenRadiusForCSMdepth = 0x50; // float
		constexpr auto bPrecomputedVisibilityWarning = 0x54; // char : 1
		constexpr auto bTextureStreaming = 0x54; // char : 1
		constexpr auto bUseDXT5NormalMaps = 0x54; // char : 1
		constexpr auto bVirtualTextures = 0x54; // char : 1
		constexpr auto bVirtualTexturedLightmaps = 0x54; // char : 1
		constexpr auto VirtualTextureTileSize = 0x58; // uint32
		constexpr auto VirtualTextureTileBorderSize = 0x5c; // uint32
		constexpr auto VirtualTextureFeedbackFactor = 0x60; // uint32
		constexpr auto bVirtualTextureEnableCompressZlib = 0x64; // char : 1
		constexpr auto bVirtualTextureEnableCompressCrunch = 0x64; // char : 1
		constexpr auto bClearCoatEnableSecondNormal = 0x64; // char : 1
		constexpr auto ReflectionCaptureResolution = 0x68; // int
		constexpr auto ReflectionEnvironmentLightmapMixBasedOnRoughness = 0x6c; // char : 1
		constexpr auto bForwardShading = 0x6c; // char : 1
		constexpr auto bVertexFoggingForOpaque = 0x6c; // char : 1
		constexpr auto bAllowStaticLighting = 0x6c; // char : 1
		constexpr auto bUseNormalMapsForStaticLighting = 0x6c; // char : 1
		constexpr auto bGenerateMeshDistanceFields = 0x6c; // char : 1
		constexpr auto bEightBitMeshDistanceFields = 0x6c; // char : 1
		constexpr auto bGenerateLandscapeGIData = 0x6c; // char : 1
		constexpr auto bCompressMeshDistanceFields = 0x6d; // char : 1
		constexpr auto TessellationAdaptivePixelsPerTriangle = 0x70; // float
		constexpr auto bSeparateTranslucency = 0x74; // char : 1
		constexpr auto TranslucentSortPolicy = 0x78; // ETranslucentSortPolicy
		constexpr auto TranslucentSortAxis = 0x7c; // FVector
		constexpr auto CustomDepthStencil = 0x88; // ECustomDepthStencil
		constexpr auto bCustomDepthTaaJitter = 0x8c; // char : 1
		constexpr auto bEnableAlphaChannelInPostProcessing = 0x90; // EAlphaChannelMode
		constexpr auto bDefaultFeatureBloom = 0x94; // char : 1
		constexpr auto bDefaultFeatureAmbientOcclusion = 0x94; // char : 1
		constexpr auto bDefaultFeatureAmbientOcclusionStaticFraction = 0x94; // char : 1
		constexpr auto bDefaultFeatureAutoExposure = 0x94; // char : 1
		constexpr auto DefaultFeatureAutoExposure = 0x98; // EAutoExposureMethodUI
		constexpr auto bExtendDefaultLuminanceRangeInAutoExposureSettings = 0x9c; // char : 1
		constexpr auto bUsePreExposure = 0x9c; // char : 1
		constexpr auto bEnablePreExposureOnlyInTheEditor = 0x9c; // char : 1
		constexpr auto bDefaultFeatureMotionBlur = 0x9c; // char : 1
		constexpr auto bDefaultFeatureLensFlare = 0x9c; // char : 1
		constexpr auto bTemporalUpsampling = 0x9c; // char : 1
		constexpr auto DefaultFeatureAntiAliasing = 0xa0; // EAntiAliasingMethod
		constexpr auto DefaultLightUnits = 0xa1; // ELightUnits
		constexpr auto DefaultBackBufferPixelFormat = 0xa2; // EDefaultBackBufferPixelFormat
		constexpr auto bRenderUnbuiltPreviewShadowsInGame = 0xa4; // char : 1
		constexpr auto bStencilForLODDither = 0xa4; // char : 1
		constexpr auto EarlyZPass = 0xa8; // EEarlyZPass
		constexpr auto bEarlyZPassOnlyMaterialMasking = 0xac; // char : 1
		constexpr auto bDBuffer = 0xac; // char : 1
		constexpr auto ClearSceneMethod = 0xb0; // EClearSceneOptions
		constexpr auto bBasePassOutputsVelocity = 0xb4; // char : 1
		constexpr auto bSelectiveBasePassOutputs = 0xb4; // char : 1
		constexpr auto bDefaultParticleCutouts = 0xb4; // char : 1
		constexpr auto GPUSimulationTextureSizeX = 0xb8; // int
		constexpr auto GPUSimulationTextureSizeY = 0xbc; // int
		constexpr auto bGlobalClipPlane = 0xc0; // char : 1
		constexpr auto GBufferFormat = 0xc4; // EGBufferFormat
		constexpr auto bUseGPUMorphTargets = 0xc8; // char : 1
		constexpr auto bNvidiaAftermathEnabled = 0xc8; // char : 1
		constexpr auto bInstancedStereo = 0xc8; // char : 1
		constexpr auto bMultiView = 0xc8; // char : 1
		constexpr auto bMobileMultiView = 0xc8; // char : 1
		constexpr auto bMobileMultiViewDirect = 0xc8; // char : 1
		constexpr auto bRoundRobinOcclusion = 0xc8; // char : 1
		constexpr auto bODSCapture = 0xc8; // char : 1
		constexpr auto WireframeCullThreshold = 0xcc; // float
		constexpr auto bEnableRayTracing = 0xd0; // char : 1
		constexpr auto bSupportStationarySkylight = 0xd0; // char : 1
		constexpr auto bSupportLowQualityLightmaps = 0xd0; // char : 1
		constexpr auto bSupportPointLightWholeSceneShadows = 0xd0; // char : 1
		constexpr auto bSupportAtmosphericFog = 0xd0; // char : 1
		constexpr auto bSupportSkinCacheShaders = 0xd0; // char : 1
		constexpr auto bMobileEnableStaticAndCSMShadowReceivers = 0xd0; // char : 1
		constexpr auto bMobileEnableMovableLightCSMShaderCulling = 0xd0; // char : 1
		constexpr auto bMobileAllowDistanceFieldShadows = 0xd1; // char : 1
		constexpr auto bMobileAllowMovableDirectionalLights = 0xd1; // char : 1
		constexpr auto MobileNumDynamicPointLights = 0xd4; // uint32
		constexpr auto bMobileDynamicPointLightsUseStaticBranch = 0xd8; // char : 1
		constexpr auto bMobileAllowMovableSpotlights = 0xd8; // char : 1
		constexpr auto SkinCacheSceneMemoryLimitInMB = 0xdc; // float
		constexpr auto bGPUSkinLimit2BoneInfluences = 0xe0; // char : 1
		constexpr auto bSupportDepthOnlyIndexBuffers = 0xe0; // char : 1
		constexpr auto bSupportReversedIndexBuffers = 0xe0; // char : 1
		constexpr auto bSupportMaterialLayers = 0xe0; // char : 1
	}

	namespace n_UUdpMessagingSettings { // : UObject
		constexpr auto EnableTransport = 0x28; // bool
		constexpr auto UnicastEndpoint = 0x30; // FString
		constexpr auto MulticastEndpoint = 0x40; // FString
		constexpr auto MulticastTimeToLive = 0x50; // char
		constexpr auto StaticEndpoints = 0x58; // TArray<FString>
		constexpr auto EnableTunnel = 0x68; // bool
		constexpr auto TunnelUnicastEndpoint = 0x70; // FString
		constexpr auto TunnelMulticastEndpoint = 0x80; // FString
		constexpr auto RemoteTunnelEndpoints = 0x90; // TArray<FString>
	}

	namespace n_UARTrackedPose { // : UARTrackedGeometry
		constexpr auto UniqueID = 0x28; // FGuid
		constexpr auto LocalToTrackingTransform = 0x40; // FTransform
		constexpr auto LocalToAlignedTrackingTransform = 0x70; // FTransform
		constexpr auto TrackingState = 0xa0; // EARTrackingState
		constexpr auto UnderlyingMesh = 0xb0; // UMRMeshComponent*
		constexpr auto ObjectClassification = 0xb8; // EARObjectClassification
		constexpr auto LastUpdateFrameNumber = 0xd0; // int
		constexpr auto DebugName = 0xe0; // FName
	}

	namespace n_ATextRenderActor { // : AActor
		constexpr auto TextRender = 0x248; // UTextRenderComponent*
	}

	namespace n_UChaosEventListenerComponent { // : UActorComponent
		constexpr auto PrimaryComponentTick = 0x30; // FActorComponentTickFunction
		constexpr auto ComponentTags = 0x88; // TArray<FName>
		constexpr auto AssetUserData = 0x98; // TArray<UAssetUserData*>
		constexpr auto bReplicates = 0xac; // char : 1
		constexpr auto bNetAddressable = 0xac; // char : 1
		constexpr auto bAutoActivate = 0xad; // char : 1
		constexpr auto bIsActive = 0xae; // char : 1
		constexpr auto bEditableWhenInherited = 0xae; // char : 1
		constexpr auto bCanEverAffectNavigation = 0xae; // char : 1
		constexpr auto bIsEditorOnly = 0xae; // char : 1
		constexpr auto CreationMethod = 0xb0; // EComponentCreationMethod
		constexpr auto OnComponentActivated = 0xb1; // FScriptMulticastDelegate
		constexpr auto OnComponentDeactivated = 0xb2; // FScriptMulticastDelegate
		constexpr auto UCSModifiedProperties = 0xb8; // TArray<FSimpleMemberReference>
	}

	namespace n_UAISystem { // : UAISystemBase
		constexpr auto PerceptionSystemClassName = 0x58; // FSoftClassPath
		constexpr auto HotSpotManagerClassName = 0x70; // FSoftClassPath
		constexpr auto AcceptanceRadius = 0x88; // float
		constexpr auto PathfollowingRegularPathPointAcceptanceRadius = 0x8c; // float
		constexpr auto PathfollowingNavLinkAcceptanceRadius = 0x90; // float
		constexpr auto bFinishMoveOnGoalOverlap = 0x94; // bool
		constexpr auto bAcceptPartialPaths = 0x95; // bool
		constexpr auto bAllowStrafing = 0x96; // bool
		constexpr auto bEnableBTAITasks = 0x97; // bool
		constexpr auto bAllowControllersAsEQSQuerier = 0x98; // bool
		constexpr auto bEnableDebuggerPlugin = 0x99; // bool
		constexpr auto DefaultSightCollisionChannel = 0x9a; // ECollisionChannel
		constexpr auto BehaviorTreeManager = 0xa0; // UBehaviorTreeManager*
		constexpr auto EnvironmentQueryManager = 0xa8; // UEnvQueryManager*
		constexpr auto PerceptionSystem = 0xb0; // UAIPerceptionSystem*
		constexpr auto AllProxyObjects = 0xb8; // TArray<UAIAsyncTaskBlueprintProxy*>
		constexpr auto HotSpotManager = 0xc8; // UAIHotSpotManager*
		constexpr auto NavLocalGrids = 0xd0; // UNavLocalGridManager*
	}

	namespace n_UBookMark { // : UBookmarkBase
		constexpr auto Location = 0x28; // FVector
		constexpr auto Rotation = 0x34; // FRotator
		constexpr auto HiddenLevels = 0x40; // TArray<FString>
	}

	namespace n_UDirectionalLightComponent { // : ULightComponent
		constexpr auto ShadowCascadeBiasDistribution = 0x358; // float
		constexpr auto bEnableLightShaftOcclusion = 0x35c; // char : 1
		constexpr auto OcclusionMaskDarkness = 0x360; // float
		constexpr auto OcclusionDepthRange = 0x364; // float
		constexpr auto LightShaftOverrideDirection = 0x368; // FVector
		constexpr auto WholeSceneDynamicShadowRadius = 0x374; // float
		constexpr auto DynamicShadowDistanceMovableLight = 0x378; // float
		constexpr auto DynamicShadowDistanceStationaryLight = 0x37c; // float
		constexpr auto DynamicShadowCascades = 0x380; // int
		constexpr auto CascadeDistributionExponent = 0x384; // float
		constexpr auto CascadeTransitionFraction = 0x388; // float
		constexpr auto ShadowDistanceFadeoutFraction = 0x38c; // float
		constexpr auto bUseInsetShadowsForMovableObjects = 0x390; // char : 1
		constexpr auto FarShadowCascadeCount = 0x394; // int
		constexpr auto FarShadowDistance = 0x398; // float
		constexpr auto DistanceFieldShadowDistance = 0x39c; // float
		constexpr auto LightSourceAngle = 0x3a0; // float
		constexpr auto LightSourceSoftAngle = 0x3a4; // float
		constexpr auto TraceDistance = 0x3a8; // float
		constexpr auto LightmassSettings = 0x3ac; // FLightmassDirectionalLightSettings
		constexpr auto bCastModulatedShadows = 0x3bc; // char : 1
		constexpr auto ModulatedShadowColor = 0x3c0; // FColor
		constexpr auto bUsedAsAtmosphereSunLight = 0x3c4; // char : 1
	}

	namespace n_UThrobber { // : UWidget
		constexpr auto NumberOfPieces = 0x108; // int
		constexpr auto bAnimateHorizontally = 0x10c; // bool
		constexpr auto bAnimateVertically = 0x10d; // bool
		constexpr auto bAnimateOpacity = 0x10e; // bool
		constexpr auto PieceImage = 0x110; // USlateBrushAsset*
		constexpr auto Image = 0x118; // FSlateBrush
	}

	namespace n_USQVehicleSeatComponent { // : USceneComponent
		constexpr auto SeatConfig = 0x218; // FSQVehicleSeatConfig
		constexpr auto AnimationSeatState = 0x268; // int
		constexpr auto SeatPawn = 0x270; // ASQVehicleSeat*
		constexpr auto SeatedPlayer = 0x278; // ASQPlayerState*
		constexpr auto SeatedSoldier = 0x280; // ASQSoldier*
	}

	namespace n_UGameEngine { // : UEngine
		constexpr auto MaxDeltaTime = 0xdb8; // float
		constexpr auto ServerFlushLogInterval = 0xdbc; // float
		constexpr auto GameInstance = 0xdc0; // UGameInstance*
	}

	namespace n_UProceduralMeshComponent { // : UMeshComponent
		constexpr auto bUseComplexAsSimpleCollision = 0x438; // bool
		constexpr auto bUseAsyncCooking = 0x439; // bool
		constexpr auto ProcMeshBodySetup = 0x440; // UBodySetup*
		constexpr auto ProcMeshSections = 0x448; // TArray<FProcMeshSection>
		constexpr auto CollisionConvexElems = 0x458; // TArray<FKConvexElem>
		constexpr auto LocalBounds = 0x468; // FBoxSphereBounds
		constexpr auto AsyncBodySetupQueue = 0x488; // TArray<UBodySetup*>
	}

	namespace n_ULevelCapture { // : UMovieSceneCapture
		constexpr auto bAutoStartCapture = 0x218; // bool
		constexpr auto PrerequisiteActorId = 0x224; // FGuid
	}

	namespace n_UQuitMatchCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto OnFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_UAnimSequence { // : UAnimSequenceBase
		constexpr auto NumFrames = 0xa8; // int
		constexpr auto TrackToSkeletonMapTable = 0xb0; // TArray<FTrackToSkeletonMap>
		constexpr auto CurveCompressionSettings = 0xd0; // UAnimCurveCompressionSettings*
		constexpr auto AdditiveAnimType = 0x1a8; // EAdditiveAnimationType
		constexpr auto RefPoseType = 0x1a9; // EAdditiveBasePoseType
		constexpr auto RefPoseSeq = 0x1b0; // UAnimSequence*
		constexpr auto RefFrameIndex = 0x1b8; // int
		constexpr auto RetargetSource = 0x1bc; // FName
		constexpr auto Interpolation = 0x1c4; // EAnimInterpolationType
		constexpr auto bEnableRootMotion = 0x1c5; // bool
		constexpr auto RootMotionRootLock = 0x1c6; // ERootMotionRootLock
		constexpr auto bForceRootLock = 0x1c7; // bool
		constexpr auto bUseNormalizedRootMotionScale = 0x1c8; // bool
		constexpr auto bRootMotionSettingsCopiedFromMontage = 0x1c9; // bool
		constexpr auto AuthoredSyncMarkers = 0x1d0; // TArray<FAnimSyncMarker>
	}

	namespace n_UObjectLibrary { // : UObject
		constexpr auto ObjectBaseClass = 0x28; // UObject*
		constexpr auto bHasBlueprintClasses = 0x30; // bool
		constexpr auto Objects = 0x38; // TArray<UObject*>
		constexpr auto WeakObjects = 0x48; // TArray<TWeakObjectPtr<UObject>>
		constexpr auto bUseWeakReferences = 0x58; // bool
		constexpr auto bIsFullyLoaded = 0x59; // bool
	}

	namespace n_USkeletalMeshLODSettings { // : UDataAsset
		constexpr auto MinLOD = 0x30; // FPerPlatformInt
		constexpr auto DisableBelowMinLodStripping = 0x34; // FPerPlatformBool
		constexpr auto LODGroups = 0x38; // TArray<FSkeletalMeshLODGroupSettings>
	}

	namespace n_ASQNWheeledVehicle { // : ASQWheeledVehicleBase
		constexpr auto DamagedDampingRateMultiplier = 0xa20; // float
		constexpr auto DampingRateMultiplier = 0xa24; // float
	}

	namespace n_UBTDecorator_ReachedMoveGoal { // : UBTDecorator
		constexpr auto bInverseCondition = 0x60; // char : 1
		constexpr auto FlowAbortMode = 0x64; // EBTFlowAbortMode
	}

	namespace n_UInterpTrackParticleReplay { // : UInterpTrack
		constexpr auto TrackKeys = 0x70; // TArray<FParticleReplayTrackKey>
	}

	namespace n_URecastNavMeshDataChunk { // : UNavigationDataChunk
		constexpr auto NavigationDataName = 0x28; // FName
	}

	namespace n_UMaterialFunctionMaterialLayerBlendInstance { // : UMaterialFunctionInstance
		constexpr auto Parent = 0x40; // UMaterialFunctionInterface*
		constexpr auto Base = 0x48; // UMaterialFunctionInterface*
		constexpr auto ScalarParameterValues = 0x50; // TArray<FScalarParameterValue>
		constexpr auto VectorParameterValues = 0x60; // TArray<FVectorParameterValue>
		constexpr auto TextureParameterValues = 0x70; // TArray<FTextureParameterValue>
		constexpr auto FontParameterValues = 0x80; // TArray<FFontParameterValue>
		constexpr auto StaticSwitchParameterValues = 0x90; // TArray<FStaticSwitchParameter>
		constexpr auto StaticComponentMaskParameterValues = 0xa0; // TArray<FStaticComponentMaskParameter>
	}

	namespace n_UControlChannel { // : UChannel
		constexpr auto Connection = 0x28; // UNetConnection*
	}

	namespace n_ASQPawn { // : APawn
		constexpr auto bClientUpdating = 0x2b0; // char : 1
		constexpr auto bUseEngineActorReplication = 0x2b4; // bool
		constexpr auto bIsUsingNewMovementComponent = 0x2b5; // bool
		constexpr auto Team = 0x2b6; // ESQTeam
		constexpr auto BasedMovement = 0x2b8; // FSQBasedMovementInfo
		constexpr auto StateObject = 0x2e8; // USQCoreStateComponent*
		constexpr auto BaseTranslationOffset = 0x2f0; // FVector
		constexpr auto BaseRotationOffset = 0x300; // FQuat
		constexpr auto bInBaseReplication = 0x310; // bool
		constexpr auto OnPawnPossessedEvent = 0x318; // FScriptMulticastDelegate
		constexpr auto OnPawnUnPossessedEvent = 0x328; // FScriptMulticastDelegate
	}

	namespace n_UPhysicsAsset { // : UObject
		constexpr auto BoundsBodies = 0x30; // TArray<int>
		constexpr auto SkeletalBodySetups = 0x40; // TArray<USkeletalBodySetup*>
		constexpr auto ConstraintSetup = 0x50; // TArray<UPhysicsConstraintTemplate*>
		constexpr auto bNotForDedicatedServer = 0x60; // char : 1
		constexpr auto ThumbnailInfo = 0x108; // UThumbnailInfo*
		constexpr auto BodySetup = 0x110; // TArray<UBodySetup*>
	}

	namespace n_AEQSTestingPawn { // : ACharacter
		constexpr auto QueryTemplate = 0x660; // UEnvQuery*
		constexpr auto QueryParams = 0x668; // TArray<FEnvNamedValue>
		constexpr auto QueryConfig = 0x678; // TArray<FAIDynamicParam>
		constexpr auto TimeLimitPerStep = 0x688; // float
		constexpr auto StepToDebugDraw = 0x68c; // int
		constexpr auto HighlightMode = 0x690; // EEnvQueryHightlightMode
		constexpr auto bDrawLabels = 0x694; // char : 1
		constexpr auto bDrawFailedItems = 0x694; // char : 1
		constexpr auto bReRunQueryOnlyOnFinishedMove = 0x694; // char : 1
		constexpr auto bShouldBeVisibleInGame = 0x694; // char : 1
		constexpr auto bTickDuringGame = 0x694; // char : 1
		constexpr auto QueryingMode = 0x698; // EEnvQueryRunMode
		constexpr auto NavAgentProperties = 0x6a0; // FNavAgentProperties
	}

	namespace n_ASQProjectile { // : AActor
		constexpr auto CollisionComp = 0x248; // USphereComponent*
		constexpr auto ProjectileMovement = 0x250; // UProjectileMovementComponent*
		constexpr auto DamageTypeToApply = 0x258; // UDamageType*
		constexpr auto LastImpactHitResult = 0x260; // FHitResult
		constexpr auto bHasImpacted = 0x2e8; // bool
		constexpr auto bDestroyOnImpact = 0x2e9; // bool
		constexpr auto bAppliesSuppression = 0x2ea; // bool
		constexpr auto CollisionSize = 0x2ec; // float
		constexpr auto bIsExplosiveProjectile = 0x31c; // bool
		constexpr auto ExplosiveBaseDamage = 0x320; // float
		constexpr auto ExplosiveMinimumDamage = 0x324; // float
		constexpr auto ExplosiveKillZoneRadius = 0x328; // float
		constexpr auto ExplosiveDamageInnerRadius = 0x32c; // float
		constexpr auto ExplosiveDamageOuterRadius = 0x330; // float
		constexpr auto ExplosiveDamageFalloff = 0x334; // float
		constexpr auto ArmorPenetrationDepthMillimeters = 0x338; // float
		constexpr auto TraceDistanceAfterPenetrationMeters = 0x33c; // float
		constexpr auto ExplosiveDamageDistanceFromImpactNormal = 0x340; // float
		constexpr auto ProjectileAC = 0x348; // UAudioComponent*
		constexpr auto bOnlyPlayFlybySoundOnProjectile = 0x350; // bool
		constexpr auto FlybySound = 0x358; // USoundCue*
		constexpr auto SuppressionInfoClass = 0x360; // USQSuppressionInfo*
		constexpr auto SpecificImpactEffects = 0x368; // TMap<USQPhysicalMaterial*, FSQProjectileImpactEffect>
		constexpr auto SpecificThrowableEffects = 0x3b8; // TMap<USQPhysicalMaterial*, FSQProjectileImpactEffect>
		constexpr auto SpecificExplosionEffects = 0x408; // TMap<USQPhysicalMaterial*, FSQProjectileImpactEffect>
		constexpr auto DefaultEffectsClass = 0x458; // USQPhysicalMaterialEffects*
		constexpr auto bClientAuthoritativeImpact = 0x460; // bool
		constexpr auto bProxiesPredictImpact = 0x461; // bool
		constexpr auto DamageInstigatorController = 0x468; // AController*
	}

	namespace n_USQSteamItem { // : UObject
		constexpr auto SteamId = 0x28; // int
		constexpr auto bEnabled = 0x2c; // bool
		constexpr auto OnStateChanged = 0x30; // FScriptMulticastDelegate
	}

	namespace n_UMaterialExpressionLandscapeLayerCoords { // : UMaterialExpression
		constexpr auto MappingType = 0x40; // ETerrainCoordMappingType
		constexpr auto CustomUVType = 0x41; // ELandscapeCustomizedCoordType
		constexpr auto MappingScale = 0x44; // float
		constexpr auto MappingRotation = 0x48; // float
		constexpr auto MappingPanU = 0x4c; // float
		constexpr auto MappingPanV = 0x50; // float
	}

	namespace n_UM17MHS_Skeleton_AnimBlueprint_C { // : USQWeaponAnimInstance
		constexpr auto UberGraphFrame = 0x2b0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root_2F110A8A4C4870BD3803E0B08100DC0B = 0x2b8; // FAnimNode_Root
		constexpr auto AnimGraphNode_LayeredBoneBlend_ABC0F150423DB5FD9540FDAC46008E83 = 0x2e8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_Slot_20D0922F4F9EB6A8D8A038B83E0658E7 = 0x3a8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_DA358E70404CBAAE0B1D6E9CBE766235 = 0x3f0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_176B52864E0B78B665C825839B683C00 = 0x438; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SequencePlayer_34CDCDFB4A0665B613B8199D8AE1D2C6 = 0x480; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LocalRefPose_F35D1E5F4AE30D719F7940824FB010A3 = 0x4f8; // FAnimNode_RefPose
	}

	namespace n_USQStatefulButton { // : USQUserWidget
		constexpr auto StateImages = 0x230; // TArray<UTexture2D*>
		constexpr auto NormalTint = 0x240; // FLinearColor
		constexpr auto HoveredTint = 0x250; // FLinearColor
		constexpr auto CurrentImage = 0x260; // UImage*
		constexpr auto bIsHovering = 0x268; // bool
		constexpr auto HoveringColorBlend = 0x26c; // float
		constexpr auto HoverColorBlendSpeed = 0x270; // float
	}

	namespace n_ALandscapeGizmoActor { // : AActor
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto bHidden = 0x80; // char : 1
		constexpr auto bNetTemporary = 0x80; // char : 1
		constexpr auto bNetStartup = 0x80; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x80; // char : 1
		constexpr auto bAlwaysRelevant = 0x80; // char : 1
		constexpr auto bReplicateMovement = 0x80; // char : 1
		constexpr auto bTearOff = 0x80; // char : 1
		constexpr auto bExchangedRoles = 0x80; // char : 1
		constexpr auto bNetLoadOnClient = 0x81; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x81; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x81; // char : 1
		constexpr auto bRelevantForLevelBounds = 0x81; // char : 1
		constexpr auto bReplayRewindable = 0x81; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x81; // char : 1
		constexpr auto bAutoDestroyWhenFinished = 0x81; // char : 1
		constexpr auto bBlockInput = 0x81; // char : 1
		constexpr auto bCanBeDamaged = 0x82; // char : 1
		constexpr auto bCollideWhenPlacing = 0x82; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x82; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x82; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x82; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x82; // char : 1
		constexpr auto bIsEditorOnlyActor = 0x82; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x82; // char : 1
		constexpr auto bReplicates = 0x83; // char : 1
		constexpr auto bCanBeInCluster = 0x83; // char : 1
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x83; // char : 1
		constexpr auto bActorEnableCollision = 0x84; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x84; // char : 1
		constexpr auto RemoteRole = 0x85; // ENetRole
		constexpr auto ReplicatedMovement = 0x88; // FRepMovement
		constexpr auto InitialLifeSpan = 0xbc; // float
		constexpr auto CustomTimeDilation = 0xc0; // float
		constexpr auto AttachmentReplication = 0xc8; // FRepAttachment
		constexpr auto Owner = 0x108; // AActor*
		constexpr auto NetDriverName = 0x110; // FName
		constexpr auto Role = 0x118; // ENetRole
		constexpr auto NetDormancy = 0x119; // ENetDormancy
		constexpr auto SpawnCollisionHandlingMethod = 0x11a; // ESpawnActorCollisionHandlingMethod
		constexpr auto AutoReceiveInput = 0x11b; // EAutoReceiveInput
		constexpr auto InputPriority = 0x11c; // int
		constexpr auto InputComponent = 0x120; // UInputComponent*
		constexpr auto NetCullDistanceSquared = 0x128; // float
		constexpr auto NetTag = 0x12c; // int
		constexpr auto NetUpdateFrequency = 0x130; // float
		constexpr auto MinNetUpdateFrequency = 0x134; // float
		constexpr auto bUseRelativeNetUpdateFrequency = 0x138; // char : 1
		constexpr auto bUseOwnerRelativeNetUpdateFrequency = 0x138; // char : 1
		constexpr auto MinRelativeNetUpdateEvaluationFrequency = 0x13c; // float
		constexpr auto NetPriority = 0x140; // float
		constexpr auto Instigator = 0x148; // APawn*
		constexpr auto Children = 0x150; // TArray<AActor*>
		constexpr auto RootComponent = 0x160; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x168; // TArray<AMatineeActor*>
		constexpr auto Layers = 0x180; // TArray<FName>
		constexpr auto ParentComponent = 0x190; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto Tags = 0x198; // TArray<FName>
		constexpr auto OnTakeAnyDamage = 0x1a8; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x1a9; // FScriptMulticastDelegate
		constexpr auto OnTakeRadialDamage = 0x1aa; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x1ab; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x1ac; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x1ad; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x1ae; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x1af; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x1b0; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x1b1; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x1b2; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x1b3; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x1b4; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x1b5; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x1b6; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x1b7; // FScriptMulticastDelegate
		constexpr auto InstanceComponents = 0x218; // TArray<UActorComponent*>
		constexpr auto BlueprintCreatedComponents = 0x228; // TArray<UActorComponent*>
	}

	namespace n_UAbilityTask_MoveToLocation { // : UAbilityTask
		constexpr auto OnTargetLocationReached = 0x80; // FScriptMulticastDelegate
		constexpr auto StartLocation = 0x94; // FVector
		constexpr auto TargetLocation = 0xa0; // FVector
		constexpr auto DurationOfMovement = 0xac; // float
		constexpr auto LerpCurve = 0xb8; // UCurveFloat*
		constexpr auto LerpCurveVector = 0xc0; // UCurveVector*
	}

	namespace n_USVDM_Skeleton_AnimBlueprint_C { // : USQWeaponAnimInstance
		constexpr auto UberGraphFrame = 0x2b0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root_8E8FAD8547A5B4F6412A22AD077CEA2F = 0x2b8; // FAnimNode_Root
		constexpr auto AnimGraphNode_LayeredBoneBlend_102101704678B5ED4015D38213F21464 = 0x2e8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_77E5606B47C74B63198714B41BF6E659 = 0x3a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot_2083513D40927972A58C6EBB4545DFA6 = 0x420; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_B8536ACC4E13D9A0DD2182B205D3AD7F = 0x468; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_FD0B640A4C0B17735569479A9A569C11 = 0x4b0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_LocalRefPose_CD8B78BC4DE589DD1C62F8B8BCC33332 = 0x4f8; // FAnimNode_RefPose
		constexpr auto AnimGraphNode_Slot_17CCF19149A0B4AF597201ADC57F3315 = 0x510; // FAnimNode_Slot
	}

	namespace n_ABP_AK74M_4Mags_C { // : ABP_AK74M_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_USQCountParameter_Legacy { // : USQCountParameterBase
		constexpr auto GroupLimits = 0x60; // TArray<FSQRoleGroupLimit>
		constexpr auto RoleLimit = 0x70; // FSQRoleLimit
	}

	namespace n_UMaterialExpressionFunctionInput { // : UMaterialExpression
		constexpr auto Preview = 0x40; // FExpressionInput
		constexpr auto InputName = 0x54; // FName
		constexpr auto Description = 0x60; // FString
		constexpr auto ID = 0x70; // FGuid
		constexpr auto InputType = 0x80; // EFunctionInputType
		constexpr auto PreviewValue = 0x90; // FVector4
		constexpr auto bUsePreviewValueAsDefault = 0xa0; // char : 1
		constexpr auto SortPriority = 0xa4; // int
		constexpr auto bCompilingFunctionPreview = 0xa8; // char : 1
	}

	namespace n_UInvalidationBox { // : UContentWidget
		constexpr auto bCanCache = 0x120; // bool
		constexpr auto CacheRelativeTransforms = 0x121; // bool
	}

	namespace n_ABP_RPG7V2_Frag_2Mag_C { // : ABP_RPG7V2_Parent_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
		constexpr auto MuzzleFlashRearComponent3P = 0x7b8; // UParticleSystemComponent*
		constexpr auto BackBlastComponent3P = 0x7c0; // UChildActorComponent*
		constexpr auto MuzzleFlashRearComponent1P = 0x7c8; // UParticleSystemComponent*
		constexpr auto SquadBlast = 0x7d0; // USQBlastComponent*
		constexpr auto BackBlastComponent1P = 0x7d8; // UChildActorComponent*
		constexpr auto BackblastSocket = 0x7e0; // FName
		constexpr auto BackblastEffect1P = 0x7e8; // UParticleSystem*
		constexpr auto BackblastEffect3P = 0x7f0; // UParticleSystem*
	}

	namespace n_ABrush { // : AActor
		constexpr auto BrushType = 0x248; // EBrushType
		constexpr auto BrushColor = 0x24c; // FColor
		constexpr auto PolyFlags = 0x250; // int
		constexpr auto bColored = 0x254; // char : 1
		constexpr auto bSolidWhenSelected = 0x254; // char : 1
		constexpr auto bPlaceableFromClassBrowser = 0x254; // char : 1
		constexpr auto bNotForClientOrServer = 0x254; // char : 1
		constexpr auto Brush = 0x258; // UModel*
		constexpr auto BrushComponent = 0x260; // UBrushComponent*
		constexpr auto bInManipulation = 0x268; // char : 1
		constexpr auto SavedSelections = 0x270; // TArray<FGeomSelection>
	}

	namespace n_ABP_M4M203_Rifle_M150_Woodland_C { // : ABP_M4M203_Rifle_M150_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
		constexpr auto LScale = 0x7b8; // FVector
	}

	namespace n_UVariantObjectBinding { // : UObject
		constexpr auto ObjectPtr = 0x28; // FSoftObjectPath
		constexpr auto LazyObjectPtr = 0x40; // UObject*
		constexpr auto CapturedProperties = 0x60; // TArray<UPropertyValue*>
		constexpr auto FunctionCallers = 0x70; // TArray<FFunctionCaller>
	}

	namespace n_ABP_M4_Recruit_C { // : ABP_M4A1_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UAppleImageUtilsBaseAsyncTaskBlueprintProxy { // : UObject
		constexpr auto OnSuccess = 0x30; // FScriptMulticastDelegate
		constexpr auto OnFailure = 0x40; // FScriptMulticastDelegate
		constexpr auto ConversionResult = 0x60; // FAppleImageUtilsImageConversionResult
	}

	namespace n_UEnvQueryTest_Project { // : UEnvQueryTest
		constexpr auto ProjectionData = 0x1c0; // FEnvTraceData
	}

	namespace n_UBP_M4M203_UGL_HE_StaticInfo_C { // : UBP_M4M203_UGL_Parent_StaticInfo_C
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_UStreamMediaSource { // : UBaseMediaSource
		constexpr auto StreamUrl = 0x38; // FString
	}

	namespace n_USQVehicleClaim { // : UObject
		constexpr auto VehicleClaimed = 0x28; // ASQVehicle*
		constexpr auto ClaimingSquad = 0x30; // ASQSquad*
		constexpr auto PlayersPartyToClaim = 0x38; // TArray<ASQPlayerState*>
		constexpr auto Status = 0x48; // ESQVehicleClaimStatus
		constexpr auto TimeOfClaim = 0x4c; // float
		constexpr auto TimeOfExpiration = 0x50; // float
		constexpr auto bExpired = 0x54; // bool
		constexpr auto ExpirationTimerHandle = 0x58; // FTimerHandle
	}

	namespace n_USocialPrivateMessageChannel { // : USocialChatChannel
		constexpr auto TargetUser = 0xe8; // USocialUser*
	}

	namespace n_UBP_GenericWeapon_StaticInfo_C { // : USQWeaponStaticInfo
		constexpr auto ReloadBipodWeaponMontage = 0x4f8; // UAnimMontage*
		constexpr auto ReloadBipod1pMontage = 0x500; // UAnimMontage*
		constexpr auto ReloadBipod3pMontage = 0x508; // UAnimMontage*
		constexpr auto ReloadDryWeaponMontage = 0x510; // UAnimMontage*
		constexpr auto ReloadDry1pMontage = 0x518; // UAnimMontage*
		constexpr auto ReloadDry3pMontage = 0x520; // UAnimMontage*
		constexpr auto ReloadDryBipodWeaponMontage = 0x528; // UAnimMontage*
		constexpr auto ReloadDryBipod1pMontage = 0x530; // UAnimMontage*
		constexpr auto ReloadDryBipod3pMontage = 0x538; // UAnimMontage*
		constexpr auto RandomFire1pMontage = 0x540; // TArray<UAnimMontage*>
		constexpr auto FireAdd3pMontage = 0x550; // UAnimMontage*
		constexpr auto FireTriggerWeaponMontage = 0x558; // UAnimMontage*
		constexpr auto FireTrigger1pMontage = 0x560; // UAnimMontage*
		constexpr auto FireTrigger3pMontage = 0x568; // UAnimMontage*
		constexpr auto FireSway1pMontage = 0x570; // UAnimMontage*
		constexpr auto FireSway1pBlendInMontage = 0x578; // UAnimMontage*
		constexpr auto FireAds1pMontage = 0x580; // UAnimMontage*
		constexpr auto FireAds3pMontage = 0x588; // UAnimMontage*
		constexpr auto FireBipodWeaponMontage = 0x590; // UAnimMontage*
		constexpr auto FireBipod1pMontage = 0x598; // UAnimMontage*
		constexpr auto FireBipod3pMontage = 0x5a0; // UAnimMontage*
		constexpr auto FireAddBipod1pMontage = 0x5a8; // UAnimMontage*
		constexpr auto FireAddBipod3pMontage = 0x5b0; // UAnimMontage*
		constexpr auto BipodEndLoopSectionNames = 0x5b8; // FSQMontageSectionNames
		constexpr auto BipodWeaponMontage = 0x5e0; // UAnimMontage*
		constexpr auto Bipod1pMontage = 0x5e8; // UAnimMontage*
		constexpr auto Bipod3pMontage = 0x5f0; // UAnimMontage*
		constexpr auto FiremodeBipodMontage = 0x5f8; // UAnimMontage*
		constexpr auto FiremodeBipodWeaponMontage = 0x600; // UAnimMontage*
		constexpr auto FiremodeMontage = 0x608; // UAnimMontage*
		constexpr auto FiremodeWeaponMontage = 0x610; // UAnimMontage*
		constexpr auto BobbingAimProneSway1pMontage = 0x618; // UAnimMontage*
		constexpr auto BobbingAim1pMontage = 0x620; // UAnimMontage*
		constexpr auto MuzzleFlashCullDistanceInMeters = 0x628; // float
		constexpr auto MuzzleFlashEffectSocket = 0x62c; // FName
		constexpr auto MuzzleFlashEffect1P = 0x638; // UParticleSystem*
		constexpr auto MuzzleFlashEffect3P = 0x640; // UParticleSystem*
		constexpr auto ShellEjectionCullDistanceInMeters = 0x648; // float
		constexpr auto ShellEjectionEffectSocket = 0x64c; // FName
		constexpr auto ShellEjectionEffect1p = 0x658; // UParticleSystem*
		constexpr auto ShellEjectionEffect3p = 0x660; // UParticleSystem*
		constexpr auto RecoilCameraOffsetFactor = 0x668; // float
		constexpr auto RecoilCameraOffsetInterpSpeed = 0x66c; // float
		constexpr auto RecoilLofCameraOffsetLimit = 0x670; // float
		constexpr auto RecoilLofAttackInterpSpeed = 0x674; // float
		constexpr auto RecoilCanReleaseInterpSpeed = 0x678; // float
		constexpr auto RecoilLofReleaseInterpSpeed = 0x67c; // float
		constexpr auto RecoilWeaponRelLocFactor = 0x680; // float
		constexpr auto RecoilCameraShotInterpSpeed = 0x684; // float
		constexpr auto RecoilAdsCameraShotInterpSpeed = 0x688; // float
		constexpr auto MoveRecoilFactorRelease = 0x68c; // float
		constexpr auto AddMoveRecoil = 0x690; // float
		constexpr auto MaxMoveRecoilFactor = 0x694; // float
		constexpr auto MinMoveRecoilFactor = 0x698; // float
		constexpr auto LowStaminaRecoilFactor = 0x69c; // float
		constexpr auto FullStaminaRecoilFactor = 0x6a0; // float
		constexpr auto ProneAdsRecoilMean = 0x6a4; // FVector
		constexpr auto ProneAdsRecoilSigma = 0x6b0; // FVector
		constexpr auto ProneRecoilMean = 0x6bc; // FVector
		constexpr auto ProneRecoilSigma = 0x6c8; // FVector
		constexpr auto CrouchAdsRecoilMean = 0x6d4; // FVector
		constexpr auto CrouchAdsRecoilSigma = 0x6e0; // FVector
		constexpr auto CrouchRecoilMean = 0x6ec; // FVector
		constexpr auto CrouchRecoilSigma = 0x6f8; // FVector
		constexpr auto StandAdsRecoilMean = 0x704; // FVector
		constexpr auto StandAdsRecoilSigma = 0x710; // FVector
		constexpr auto StandRecoilMean = 0x71c; // FVector
		constexpr auto StandRecoilSigma = 0x728; // FVector
		constexpr auto ProneTransitionRecoilMean = 0x734; // FVector
		constexpr auto ProneTransitionRecoilSigma = 0x740; // FVector
		constexpr auto BipodAdsRecoilMean = 0x74c; // FVector
		constexpr auto BipodAdsRecoilSigma = 0x758; // FVector
		constexpr auto BipodRecoilMean = 0x764; // FVector
		constexpr auto BipodRecoilSigma = 0x770; // FVector
		constexpr auto DeviationVisuFbInterpSpeed_YZ = 0x77c; // float
		constexpr auto DeviationVisuFbInterpSpeed_Final = 0x780; // float
		constexpr auto DeviationVisuFbMax = 0x784; // float
		constexpr auto MinShotDeviationFactor = 0x788; // float
		constexpr auto MaxShotDeviationFactor = 0x78c; // float
		constexpr auto AddShotDeviationFactor = 0x790; // float
		constexpr auto AddShotDeviationFactorAds = 0x794; // float
		constexpr auto ShotDeviationFactorRelease = 0x798; // float
		constexpr auto LowStaminaDeviationFactor = 0x79c; // float
		constexpr auto FullStaminaDeviationFactor = 0x7a0; // float
		constexpr auto MoveDeviationFactorRelease = 0x7a4; // float
		constexpr auto AddMoveDeviation = 0x7a8; // float
		constexpr auto MaxMoveDeviationFactor = 0x7ac; // float
		constexpr auto MinMoveDeviationFactor = 0x7b0; // float
		constexpr auto MinBipodAdsDeviation = 0x7b4; // float
		constexpr auto MinBipodDeviation = 0x7b8; // float
		constexpr auto MinProneAdsDeviation = 0x7bc; // float
		constexpr auto MinProneDeviation = 0x7c0; // float
		constexpr auto MinCrouchAdsDeviation = 0x7c4; // float
		constexpr auto MinCrouchDeviation = 0x7c8; // float
		constexpr auto MinStandAdsDeviation = 0x7cc; // float
		constexpr auto MinStandDeviation = 0x7d0; // float
		constexpr auto MinProneTransitionDeviation = 0x7d4; // float
		constexpr auto SwayInterpSpeed_YZ = 0x7d8; // float
		constexpr auto SwayInterpSpeed_Final = 0x7dc; // float
		constexpr auto HasSway = 0x7e0; // float
		constexpr auto MoveSwayFactorRelease = 0x7e4; // float
		constexpr auto AddMoveSway = 0x7e8; // float
		constexpr auto MinMoveSwayFactor = 0x7ec; // float
		constexpr auto MaxMoveSwayFactor = 0x7f0; // float
		constexpr auto LowStaminaSwayFactor = 0x7f4; // float
		constexpr auto FullStaminaSwayFactor = 0x7f8; // float
		constexpr auto HoldingBreathSwayFactor = 0x7fc; // float
		constexpr auto ProneAdsSwayMin = 0x800; // float
		constexpr auto ProneSwayMin = 0x804; // float
		constexpr auto CrouchAdsSwayMin = 0x808; // float
		constexpr auto CrouchSwayMin = 0x80c; // float
		constexpr auto StandAdsSwayMin = 0x810; // float
		constexpr auto StandSwayMin = 0x814; // float
		constexpr auto ProneTransitionSwayMin = 0x818; // float
		constexpr auto bHasBipod = 0x81c; // bool
		constexpr auto BipodLength = 0x820; // float
		constexpr auto BipodHeightRaw = 0x824; // float
		constexpr auto bHasAdjustableSight = 0x828; // bool
		constexpr auto bLeanHeadWhenAds = 0x829; // bool
		constexpr auto AdsSightsAnim = 0x830; // TArray<FSQAdjustableSightMontageSet>
		constexpr auto BaseAds1pMontage = 0x840; // UAnimMontage*
		constexpr auto AdsTransition1pMontage = 0x848; // UAnimMontage*
		constexpr auto FromAdsTransition1pMontage = 0x850; // UAnimMontage*
		constexpr auto AdjustableAdsSightItemAnim = 0x858; // UAnimSequence*
		constexpr auto AdjustableAdsSightItemFrameRate = 0x860; // float
		constexpr auto bHasAdsTransition = 0x864; // bool
		constexpr auto Aim1pWeaponMeshPosition = 0x868; // FVector
		constexpr auto Aim1pWeaponMeshRescale = 0x874; // FVector
		constexpr auto Steady1pHipFireDuration = 0x880; // float
		constexpr auto bPlaySoundOnMagEmpty = 0x884; // bool
		constexpr auto PlaySoundOnEmptyUse = 0x888; // int
		constexpr auto PlaySoundOnEmptyAltUse = 0x88c; // int
		constexpr auto ToggleFiremodeSound1P = 0x890; // USoundCue*
		constexpr auto ToggleFiremodeSound3P = 0x898; // USoundCue*
		constexpr auto FromAdsSound1p = 0x8a0; // USoundCue*
		constexpr auto FromAdsSound3p = 0x8a8; // USoundCue*
		constexpr auto ToAdsSound1p = 0x8b0; // USoundCue*
		constexpr auto ToAdsSound3p = 0x8b8; // USoundCue*
		constexpr auto SightSwitchingSound1p = 0x8c0; // USoundCue*
		constexpr auto SightSwitchingSound3p = 0x8c8; // USoundCue*
		constexpr auto MagEmptySound1p = 0x8d0; // USoundCue*
		constexpr auto MagEmptySound3p = 0x8d8; // USoundCue*
		constexpr auto EmptyUseSound1p = 0x8e0; // USoundCue*
		constexpr auto EmptyUseSound3p = 0x8e8; // USoundCue*
		constexpr auto EmptyAltUseSound1p = 0x8f0; // USoundCue*
		constexpr auto EmptyAltUseSound3p = 0x8f8; // USoundCue*
		constexpr auto BobbingAimEndLoopSectionNames = 0x900; // FSQMontageSectionNames
		constexpr auto DefaultZeroingText = 0x928; // FText
		constexpr auto AimDirectionSocketName = 0x940; // FName
		constexpr auto bShowZeroingInHud = 0x948; // bool
	}

	namespace n_UPlayerInput { // : UObject
		constexpr auto DebugExecBindings = 0x120; // TArray<FKeyBind>
		constexpr auto InvertedAxis = 0x160; // TArray<FName>
	}

	namespace n_UGameplayTask_TimeLimitedExecution { // : UGameplayTask
		constexpr auto OnFinished = 0x68; // FScriptMulticastDelegate
		constexpr auto OnTimeExpired = 0x78; // FScriptMulticastDelegate
	}

	namespace n_UMaterialExpressionShadowReplace { // : UMaterialExpression
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto Shadow = 0x54; // FExpressionInput
	}

	namespace n_ABP_M9_C { // : ABP_GenericPistol_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UARCandidateImage { // : UDataAsset
		constexpr auto CandidateTexture = 0x30; // UTexture2D*
		constexpr auto FriendlyName = 0x38; // FString
		constexpr auto Width = 0x48; // float
		constexpr auto Height = 0x4c; // float
		constexpr auto Orientation = 0x50; // EARCandidateImageOrientation
	}

	namespace n_UMovieSceneEulerTransformTrack { // : UMovieScenePropertyTrack
		constexpr auto SectionToKey = 0x58; // UMovieSceneSection*
		constexpr auto PropertyName = 0x60; // FName
		constexpr auto PropertyPath = 0x68; // FString
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_USQTeamDataCacher { // : UActorComponent
		constexpr auto LoadedClasses = 0xd8; // TArray<UObject*>
		constexpr auto LoadedCDOs = 0xe8; // TArray<UObject*>
	}

	namespace n_UMaterialExpressionTransform { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto TransformSourceType = 0x54; // EMaterialVectorCoordTransformSource
		constexpr auto TransformType = 0x55; // EMaterialVectorCoordTransform
	}

	namespace n_UStaticCableComponent { // : UCableComponent
		constexpr auto SleepMoveSensitivity = 0x4c0; // float
		constexpr auto SleepTimeSensitivity = 0x4c4; // float
	}

	namespace n_UBP_Attachment_1p78_NoAds_C { // : USQWeaponAttachment_Scope
		constexpr auto MeshTransitionPercentage = 0x4b0; // float
		constexpr auto ADSMesh = 0x4b8; // UStaticMesh*
		constexpr auto ADSMeshTransform = 0x4c0; // FTransform
		constexpr auto NonADSMesh = 0x4f0; // UStaticMesh*
		constexpr auto NonADSMeshTransform = 0x500; // FTransform
		constexpr auto InToADSMeshTransitionSettings = 0x530; // TArray<FSQMeshTransitionSettings>
		constexpr auto OutFromADSMeshTransitionSettings = 0x540; // TArray<FSQMeshTransitionSettings>
	}

	namespace n_ABP_M4M203_M150_UGL_HE_C { // : ABP_M4M203_M150_UGL_Parent_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UEditableGameplayTagQueryExpression_NoExprMatch { // : UEditableGameplayTagQueryExpression
		constexpr auto Expressions = 0x28; // TArray<UEditableGameplayTagQueryExpression*>
	}

	namespace n_UMaterialExpressionQualitySwitch { // : UMaterialExpression
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto Inputs = 0x54; // FExpressionInput [0x3]
	}

	namespace n_UBoxFalloff { // : UFieldNodeFloat
		constexpr auto Magnitude = 0xd8; // float
		constexpr auto MinRange = 0xdc; // float
		constexpr auto MaxRange = 0xe0; // float
		constexpr auto Default = 0xe4; // float
		constexpr auto Transform = 0xf0; // FTransform
		constexpr auto Falloff = 0x120; // EFieldFalloffType
	}

	namespace n_ASQObjectiveSpawnLocation { // : AActor
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto bHidden = 0x80; // char : 1
		constexpr auto bNetTemporary = 0x80; // char : 1
		constexpr auto bNetStartup = 0x80; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x80; // char : 1
		constexpr auto bAlwaysRelevant = 0x80; // char : 1
		constexpr auto bReplicateMovement = 0x80; // char : 1
		constexpr auto bTearOff = 0x80; // char : 1
		constexpr auto bExchangedRoles = 0x80; // char : 1
		constexpr auto bNetLoadOnClient = 0x81; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x81; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x81; // char : 1
		constexpr auto bRelevantForLevelBounds = 0x81; // char : 1
		constexpr auto bReplayRewindable = 0x81; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x81; // char : 1
		constexpr auto bAutoDestroyWhenFinished = 0x81; // char : 1
		constexpr auto bBlockInput = 0x81; // char : 1
		constexpr auto bCanBeDamaged = 0x82; // char : 1
		constexpr auto bCollideWhenPlacing = 0x82; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x82; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x82; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x82; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x82; // char : 1
		constexpr auto bIsEditorOnlyActor = 0x82; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x82; // char : 1
		constexpr auto bReplicates = 0x83; // char : 1
		constexpr auto bCanBeInCluster = 0x83; // char : 1
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x83; // char : 1
		constexpr auto bActorEnableCollision = 0x84; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x84; // char : 1
		constexpr auto RemoteRole = 0x85; // ENetRole
		constexpr auto ReplicatedMovement = 0x88; // FRepMovement
		constexpr auto InitialLifeSpan = 0xbc; // float
		constexpr auto CustomTimeDilation = 0xc0; // float
		constexpr auto AttachmentReplication = 0xc8; // FRepAttachment
		constexpr auto Owner = 0x108; // AActor*
		constexpr auto NetDriverName = 0x110; // FName
		constexpr auto Role = 0x118; // ENetRole
		constexpr auto NetDormancy = 0x119; // ENetDormancy
		constexpr auto SpawnCollisionHandlingMethod = 0x11a; // ESpawnActorCollisionHandlingMethod
		constexpr auto AutoReceiveInput = 0x11b; // EAutoReceiveInput
		constexpr auto InputPriority = 0x11c; // int
		constexpr auto InputComponent = 0x120; // UInputComponent*
		constexpr auto NetCullDistanceSquared = 0x128; // float
		constexpr auto NetTag = 0x12c; // int
		constexpr auto NetUpdateFrequency = 0x130; // float
		constexpr auto MinNetUpdateFrequency = 0x134; // float
		constexpr auto bUseRelativeNetUpdateFrequency = 0x138; // char : 1
		constexpr auto bUseOwnerRelativeNetUpdateFrequency = 0x138; // char : 1
		constexpr auto MinRelativeNetUpdateEvaluationFrequency = 0x13c; // float
		constexpr auto NetPriority = 0x140; // float
		constexpr auto Instigator = 0x148; // APawn*
		constexpr auto Children = 0x150; // TArray<AActor*>
		constexpr auto RootComponent = 0x160; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x168; // TArray<AMatineeActor*>
		constexpr auto Layers = 0x180; // TArray<FName>
		constexpr auto ParentComponent = 0x190; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto Tags = 0x198; // TArray<FName>
		constexpr auto OnTakeAnyDamage = 0x1a8; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x1a9; // FScriptMulticastDelegate
		constexpr auto OnTakeRadialDamage = 0x1aa; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x1ab; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x1ac; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x1ad; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x1ae; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x1af; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x1b0; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x1b1; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x1b2; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x1b3; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x1b4; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x1b5; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x1b6; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x1b7; // FScriptMulticastDelegate
		constexpr auto InstanceComponents = 0x218; // TArray<UActorComponent*>
		constexpr auto BlueprintCreatedComponents = 0x228; // TArray<UActorComponent*>
	}

	namespace n_UParticleModuleLocationBoneSocket { // : UParticleModuleLocationBase
		constexpr auto SourceType = 0x30; // ELocationBoneSocketSource
		constexpr auto UniversalOffset = 0x34; // FVector
		constexpr auto SourceLocations = 0x40; // TArray<FLocationBoneSocketInfo>
		constexpr auto SelectionMethod = 0x50; // ELocationBoneSocketSelectionMethod
		constexpr auto bUpdatePositionEachFrame = 0x54; // char : 1
		constexpr auto bOrientMeshEmitters = 0x54; // char : 1
		constexpr auto bInheritBoneVelocity = 0x54; // char : 1
		constexpr auto InheritVelocityScale = 0x58; // float
		constexpr auto SkelMeshActorParamName = 0x5c; // FName
		constexpr auto NumPreSelectedIndices = 0x64; // int
	}

	namespace n_ABP_L85A2AG36_ElcanLDS_UGL_DarkEarth_HE_C { // : ABP_L85A2AG36_ElcanLDS_UGL_DarkEarth_Parent_C
		constexpr auto AdsScopeFovParameterCollection = 0x7a0; // UMaterialParameterCollection*
		constexpr auto AdsScopeFovParameterName = 0x7a8; // FName
	}

	namespace n_UInterpFilter { // : UObject
		constexpr auto Caption = 0x28; // FString
	}

	namespace n_UCoreGetAllItemsCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto OnFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_AOnlineBeacon { // : AActor
		constexpr auto BeaconConnectionInitialTimeout = 0x250; // float
		constexpr auto BeaconConnectionTimeout = 0x254; // float
		constexpr auto NetDriver = 0x258; // UNetDriver*
	}

	namespace n_ASQPhysicsVolume { // : APhysicsVolume
		constexpr auto TerminalVelocity = 0x280; // float
		constexpr auto Priority = 0x284; // int
		constexpr auto FluidFriction = 0x288; // float
		constexpr auto bWaterVolume = 0x28c; // char : 1
		constexpr auto bPhysicsOnContact = 0x28c; // char : 1
	}

	namespace n_UNavAreaMeta_SwitchByAgent { // : UNavAreaMeta
		constexpr auto Agent0Area = 0x48; // UNavArea*
		constexpr auto Agent1Area = 0x50; // UNavArea*
		constexpr auto Agent2Area = 0x58; // UNavArea*
		constexpr auto Agent3Area = 0x60; // UNavArea*
		constexpr auto Agent4Area = 0x68; // UNavArea*
		constexpr auto Agent5Area = 0x70; // UNavArea*
		constexpr auto Agent6Area = 0x78; // UNavArea*
		constexpr auto Agent7Area = 0x80; // UNavArea*
		constexpr auto Agent8Area = 0x88; // UNavArea*
		constexpr auto Agent9Area = 0x90; // UNavArea*
		constexpr auto Agent10Area = 0x98; // UNavArea*
		constexpr auto Agent11Area = 0xa0; // UNavArea*
		constexpr auto Agent12Area = 0xa8; // UNavArea*
		constexpr auto Agent13Area = 0xb0; // UNavArea*
		constexpr auto Agent14Area = 0xb8; // UNavArea*
		constexpr auto Agent15Area = 0xc0; // UNavArea*
	}

	namespace n_UBP_SquadStateDataMapMarkerObjective_C { // : USQSquadStateDataMapMarkerObjective
		constexpr auto Texture = 0x180; // UTexture2D*
		constexpr auto Tint = 0x188; // FLinearColor
		constexpr auto FireTeamId = 0x198; // int
	}

	namespace n_UAIPerceptionComponent { // : UActorComponent
		constexpr auto SensesConfig = 0xd8; // TArray<UAISenseConfig*>
		constexpr auto DominantSense = 0xe8; // UAISense*
		constexpr auto AIOwner = 0x100; // AAIController*
		constexpr auto OnPerceptionUpdated = 0x188; // FScriptMulticastDelegate
		constexpr auto OnTargetPerceptionUpdated = 0x198; // FScriptMulticastDelegate
	}

	namespace n_AProceduralFoliageVolume { // : AVolume
		constexpr auto ProceduralComponent = 0x280; // UProceduralFoliageComponent*
	}

	namespace n_UParticleSpriteEmitter { // : UParticleEmitter
		constexpr auto EmitterName = 0x28; // FName
		constexpr auto SubUVDataOffset = 0x30; // int
		constexpr auto EmitterRenderMode = 0x34; // EEmitterRenderMode
		constexpr auto SignificanceLevel = 0x35; // EParticleSignificanceLevel
		constexpr auto bUseLegacySpawningBehavior = 0x37; // char : 1
		constexpr auto ConvertedModules = 0x37; // char : 1
		constexpr auto bIsSoloing = 0x37; // char : 1
		constexpr auto bCookedOut = 0x37; // char : 1
		constexpr auto bDisabledLODsKeepEmitterAlive = 0x37; // char : 1
		constexpr auto bDisableWhenInsignficant = 0x38; // char : 1
		constexpr auto LODLevels = 0x40; // TArray<UParticleLODLevel*>
		constexpr auto PeakActiveParticles = 0x50; // int
		constexpr auto InitialAllocationCount = 0x54; // int
		constexpr auto QualityLevelSpawnRateScale = 0x58; // float
		constexpr auto DetailModeBitmask = 0x5c; // uint32
		constexpr auto bOWI_ResetOnDetailModeChanged = 0x60; // char : 1
	}

	namespace n_UMaterialExpressionAbs { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_USafeZoneSlot { // : UPanelSlot
		constexpr auto bIsTitleSafe = 0x38; // bool
		constexpr auto SafeAreaScale = 0x3c; // FMargin
		constexpr auto HAlign = 0x4c; // EHorizontalAlignment
		constexpr auto VAlign = 0x4d; // EVerticalAlignment
		constexpr auto Padding = 0x50; // FMargin
	}

	namespace n_USQRestriction_Cost { // : USQRestriction
		constexpr auto ID = 0x30; // FName
		constexpr auto Data = 0x38; // FDataTableRowHandle
		constexpr auto ModId = 0x48; // FString
	}

	namespace n_UDeviceProfile { // : UTextureLODSettings
		constexpr auto DeviceType = 0x38; // FString
		constexpr auto BaseProfileName = 0x48; // FString
		constexpr auto Parent = 0x58; // UObject*
		constexpr auto CVars = 0x78; // TArray<FString>
	}

	namespace n_UOverlaySlot { // : UPanelSlot
		constexpr auto Padding = 0x40; // FMargin
		constexpr auto HorizontalAlignment = 0x50; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x51; // EVerticalAlignment
	}

	namespace n_UActorComponent { // : UObject
		constexpr auto PrimaryComponentTick = 0x30; // FActorComponentTickFunction
		constexpr auto ComponentTags = 0x88; // TArray<FName>
		constexpr auto AssetUserData = 0x98; // TArray<UAssetUserData*>
		constexpr auto bReplicates = 0xac; // char : 1
		constexpr auto bNetAddressable = 0xac; // char : 1
		constexpr auto bAutoActivate = 0xad; // char : 1
		constexpr auto bIsActive = 0xae; // char : 1
		constexpr auto bEditableWhenInherited = 0xae; // char : 1
		constexpr auto bCanEverAffectNavigation = 0xae; // char : 1
		constexpr auto bIsEditorOnly = 0xae; // char : 1
		constexpr auto CreationMethod = 0xb0; // EComponentCreationMethod
		constexpr auto OnComponentActivated = 0xb1; // FScriptMulticastDelegate
		constexpr auto OnComponentDeactivated = 0xb2; // FScriptMulticastDelegate
		constexpr auto UCSModifiedProperties = 0xb8; // TArray<FSimpleMemberReference>
	}

	namespace n_UTouchInterface { // : UObject
		constexpr auto Controls = 0x28; // TArray<FTouchInputControl>
		constexpr auto ActiveOpacity = 0x38; // float
		constexpr auto InactiveOpacity = 0x3c; // float
		constexpr auto TimeUntilDeactive = 0x40; // float
		constexpr auto TimeUntilReset = 0x44; // float
		constexpr auto ActivationDelay = 0x48; // float
		constexpr auto bPreventRecenter = 0x4c; // bool
		constexpr auto StartupDelay = 0x50; // float
	}

	namespace n_UVariantSet { // : UObject
		constexpr auto DisplayText = 0x28; // FText
		constexpr auto bExpanded = 0x58; // bool
		constexpr auto Variants = 0x60; // TArray<UVariant*>
	}

	namespace n_ABP_AKS74_1P29_Tracer_C { // : ABP_AKS74_1P29_C
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
		constexpr auto Front = 0x7b8; // UStaticMeshComponent*
		constexpr auto Scope = 0x7c0; // UStaticMeshComponent*
	}

	namespace n_UAISenseConfig_Hearing { // : UAISenseConfig
		constexpr auto Implementation = 0x48; // UAISense_Hearing*
		constexpr auto HearingRange = 0x50; // float
		constexpr auto LoSHearingRange = 0x54; // float
		constexpr auto bUseLoSHearing = 0x58; // char : 1
		constexpr auto DetectionByAffiliation = 0x5c; // FAISenseAffiliationFilter
	}

}