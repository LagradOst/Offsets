// Created by BlueFire1337
// Updated 2022-01-28
// Generated 2022-02-02

namespace off {
	constexpr auto GNames = 0xc012540;
	constexpr auto GObjects = 0xc02ab38;
	constexpr auto GWorld = 0xc142828;

	namespace n_UMOCheckBoxEntry { // : UMOOptionsEntry
		constexpr auto pMOCheckBox = 0x318; // UMOCheckBox*
	}

	namespace n_UMOTaskAcceptPanel { // : UMOTaskPanel
		constexpr auto pMOButton = 0x2d0; // UMOButton*
		constexpr auto pSelectedEntry = 0x2d8; // UMOTaskItemListEntry*
		constexpr auto pMOScrollBox_TaskEntries = 0x2e0; // UMOScrollBox*
		constexpr auto pTextBlock_TaskDescription = 0x2e8; // UTextBlock*
	}

	namespace n_UMaterialExpressionDesaturation { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Fraction = 0x54; // FExpressionInput
		constexpr auto LuminanceFactors = 0x68; // FLinearColor
	}

	namespace n_UFindSessionsCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UEnvQueryGenerator_ProjectedPoints { // : UEnvQueryGenerator
		constexpr auto ProjectionData = 0x50; // FEnvTraceData
	}

	namespace n_UMODataAssetAudioVisualParameter { // : UPrimaryDataAsset
		constexpr auto Type = 0x30; // EVisualMaterialType
	}

	namespace n_UParticleModuleBeamNoise { // : UParticleModuleBeamBase
		constexpr auto bLowFreq_Enabled = 0x30; // char : 1
		constexpr auto Frequency = 0x34; // int32_t
		constexpr auto Frequency_LowRange = 0x38; // int32_t
		constexpr auto NoiseRange = 0x40; // FRawDistributionVector
		constexpr auto NoiseRangeScale = 0x88; // FRawDistributionFloat
		constexpr auto bNRScaleEmitterTime = 0xb8; // char : 1
		constexpr auto NoiseSpeed = 0xc0; // FRawDistributionVector
		constexpr auto bSmooth = 0x108; // char : 1
		constexpr auto NoiseLockRadius = 0x10c; // float
		constexpr auto bNoiseLock = 0x110; // char : 1
		constexpr auto bOscillate = 0x110; // char : 1
		constexpr auto NoiseLockTime = 0x114; // float
		constexpr auto NoiseTension = 0x118; // float
		constexpr auto bUseNoiseTangents = 0x11c; // char : 1
		constexpr auto NoiseTangentStrength = 0x120; // FRawDistributionFloat
		constexpr auto NoiseTessellation = 0x150; // int32_t
		constexpr auto bTargetNoise = 0x154; // char : 1
		constexpr auto FrequencyDistance = 0x158; // float
		constexpr auto bApplyNoiseScale = 0x15c; // char : 1
		constexpr auto NoiseScale = 0x160; // FRawDistributionFloat
	}

	namespace n_UWB_MOCharCreationInfoEntry_C { // : UMOCharCreationInfoEntry
		constexpr auto UberGraphFrame = 0x328; // FPointerToUberGraphFrame
		constexpr auto UpdateValue = 0x330; // UWidgetAnimation*
		constexpr auto HorizontalBox_6 = 0x338; // UHorizontalBox*
	}

	namespace n_UPlayMontageCallbackProxy { // : UObject
		constexpr auto OnCompleted = 0x28; // FMulticastInlineDelegate
		constexpr auto OnBlendOut = 0x38; // FMulticastInlineDelegate
		constexpr auto OnInterrupted = 0x48; // FMulticastInlineDelegate
		constexpr auto OnNotifyBegin = 0x58; // FMulticastInlineDelegate
		constexpr auto OnNotifyEnd = 0x68; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionInverseLinearInterpolate { // : UMaterialExpression
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto Value = 0x68; // FExpressionInput
		constexpr auto ConstA = 0x7c; // float
		constexpr auto ConstB = 0x80; // float
		constexpr auto ConstValue = 0x84; // float
		constexpr auto bClampResult = 0x88; // bool
	}

	namespace n_UMOCharCreationPanel { // : UMOUserWidget
		constexpr auto pCharCreation = 0x2c8; // UMOCharacterCreationNew*
	}

	namespace n_AMOEquipmentActorBow { // : AMOEquipmentActor
		constexpr auto BowComponent = 0x288; // USkeletalMeshComponent*
		constexpr auto ArrowChildActorComponent = 0x290; // UChildActorComponent*
		constexpr auto BowData = 0x298; // FMOEquipmentActorBowData
		constexpr auto arrowData = 0x2c0; // FMOEquipmentActorArrowData
		constexpr auto BaseMID = 0x2f0; // UMaterialInstanceDynamic*
		constexpr auto CompositeMID = 0x2f8; // UMaterialInstanceDynamic*
	}

	namespace n_UCurveLinearColor { // : UCurveBase
		constexpr auto FloatCurves = 0x30; // FRichCurve [0x4]
		constexpr auto AdjustHue = 0x230; // float
		constexpr auto AdjustSaturation = 0x234; // float
		constexpr auto AdjustBrightness = 0x238; // float
		constexpr auto AdjustBrightnessCurve = 0x23c; // float
		constexpr auto AdjustVibrance = 0x240; // float
		constexpr auto AdjustMinAlpha = 0x244; // float
		constexpr auto AdjustMaxAlpha = 0x248; // float
	}

	namespace n_UCameraModifier { // : UObject
		constexpr auto bDebug = 0x28; // char : 1
		constexpr auto bExclusive = 0x28; // char : 1
		constexpr auto Priority = 0x2c; // char
		constexpr auto CameraOwner = 0x30; // APlayerCameraManager*
		constexpr auto AlphaInTime = 0x38; // float
		constexpr auto AlphaOutTime = 0x3c; // float
		constexpr auto Alpha = 0x40; // float
	}

	namespace n_UInAppPurchaseComponent { // : UActorComponent
		constexpr auto InAppPurchaseLogMessage = 0xb0; // FMulticastInlineDelegate
		constexpr auto GetItemsDetailsSuccess = 0xc0; // FMulticastInlineDelegate
		constexpr auto GetItemsDetailsFailure = 0xd0; // FMulticastInlineDelegate
		constexpr auto PurchaseConfirmationSuccess = 0xe0; // FMulticastInlineDelegate
		constexpr auto PurchaseConfirmationFailure = 0xf0; // FMulticastInlineDelegate
		constexpr auto GetPurchaseHistorySuccess = 0x100; // FMulticastInlineDelegate
		constexpr auto GetPurchaseHistoryFailure = 0x110; // FMulticastInlineDelegate
	}

	namespace n_USoundNodeConcatenator { // : USoundNode
		constexpr auto InputVolume = 0x48; // TArray<float>
	}

	namespace n_UMODataAssetEmoteDefinitions { // : UPrimaryDataAsset
		constexpr auto pDefinitions = 0x30; // TArray<UMODataAssetEmoteBaseDefinition*>
	}

	namespace n_UInterpTrackInstAnimControl { // : UInterpTrackInst
		constexpr auto LastUpdatePosition = 0x28; // float
	}

	namespace n_URectLightComponent { // : ULocalLightComponent
		constexpr auto SourceWidth = 0x340; // float
		constexpr auto SourceHeight = 0x344; // float
		constexpr auto BarnDoorAngle = 0x348; // float
		constexpr auto BarnDoorLength = 0x34c; // float
		constexpr auto SourceTexture = 0x350; // UTexture*
	}

	namespace n_UNiagaraComponent { // : UFXSystemComponent
		constexpr auto Asset = 0x440; // UNiagaraSystem*
		constexpr auto TickBehavior = 0x448; // ENiagaraTickBehavior
		constexpr auto OverrideParameters = 0x450; // FNiagaraUserRedirectionParameterStore
		constexpr auto bForceSolo = 0x518; // char : 1
		constexpr auto bEnableGpuComputeDebug = 0x518; // char : 1
		constexpr auto bAutoDestroy = 0x544; // char : 1
		constexpr auto bRenderingEnabled = 0x544; // char : 1
		constexpr auto bAutoManageAttachment = 0x544; // char : 1
		constexpr auto bAutoAttachWeldSimulatedBodies = 0x544; // char : 1
		constexpr auto MaxTimeBeforeForceUpdateTransform = 0x548; // float
		constexpr auto EmitterMaterials = 0x550; // TArray<FNiagaraMaterialOverride>
		constexpr auto OnSystemFinished = 0x568; // FMulticastInlineDelegate
		constexpr auto AutoAttachParent = 0x578; // TWeakObjectPtr<USceneComponent>
		constexpr auto AutoAttachSocketName = 0x580; // FName
		constexpr auto AutoAttachLocationRule = 0x588; // EAttachmentRule
		constexpr auto AutoAttachRotationRule = 0x589; // EAttachmentRule
		constexpr auto AutoAttachScaleRule = 0x58a; // EAttachmentRule
	}

	namespace n_UParticleModuleLocationWorldOffset_Seeded { // : UParticleModuleLocationWorldOffset
		constexpr auto RandomSeedInfo = 0x80; // FParticleRandomSeedInfo
	}

	namespace n_USoundNodeParamCrossFade { // : USoundNodeDistanceCrossFade
		constexpr auto ParamName = 0x58; // FName
	}

	namespace n_UInputComponent { // : UActorComponent
		constexpr auto CachedKeyToActionInfo = 0x120; // TArray<FCachedKeyToActionInfo>
	}

	namespace n_UBTTask_RotateToFaceBBEntry { // : UBTTask_BlackboardBase
		constexpr auto Precision = 0x98; // float
	}

	namespace n_UEditableGameplayTagQueryExpression_NoTagsMatch { // : UEditableGameplayTagQueryExpression
		constexpr auto Tags = 0x28; // FGameplayTagContainer
	}

	namespace n_UMOJournalPanel { // : UMOUserWidget
		constexpr auto pJournal = 0x2c8; // UMOJournal*
	}

	namespace n_UNiagaraDataInterfaceParticleRead { // : UNiagaraDataInterfaceRWBase
		constexpr auto EmitterName = 0xd8; // FString
	}

	namespace n_UPropertyBinding { // : UObject
		constexpr auto SourceObject = 0x28; // TWeakObjectPtr<UObject>
		constexpr auto SourcePath = 0x30; // FDynamicPropertyPath
		constexpr auto DestinationProperty = 0x58; // FName
	}

	namespace n_UMaterialExpressionGIReplace { // : UMaterialExpression
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto StaticIndirect = 0x54; // FExpressionInput
		constexpr auto DynamicIndirect = 0x68; // FExpressionInput
	}

	namespace n_UAchievementWriteCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_ULocalizedOverlays { // : UOverlays
		constexpr auto DefaultOverlays = 0x28; // UBasicOverlays*
		constexpr auto LocaleToOverlaysMap = 0x30; // TMap<FString, UBasicOverlays*>
	}

	namespace n_UBlueprintGeneratedClass { // : UClass
		constexpr auto NumReplicatedProperties = 0x230; // int32_t
		constexpr auto bHasNativizedParent = 0x234; // char : 1
		constexpr auto bHasCookedComponentInstancingData = 0x234; // char : 1
		constexpr auto DynamicBindingObjects = 0x238; // TArray<UDynamicBlueprintBinding*>
		constexpr auto ComponentTemplates = 0x248; // TArray<UActorComponent*>
		constexpr auto Timelines = 0x258; // TArray<UTimelineTemplate*>
		constexpr auto ComponentClassOverrides = 0x268; // TArray<FBPComponentClassOverride>
		constexpr auto SimpleConstructionScript = 0x278; // USimpleConstructionScript*
		constexpr auto InheritableComponentHandler = 0x280; // UInheritableComponentHandler*
		constexpr auto UberGraphFramePointerProperty = 0x288; // UStructProperty*
		constexpr auto UberGraphFunction = 0x298; // UFunction*
		constexpr auto CookedComponentInstancingData = 0x2a0; // TMap<FName, FBlueprintCookedComponentInstancingData>
	}

	namespace n_UMOUserWidgetTabButtonNew { // : UMOUserWidget
		constexpr auto iFontSize = 0x2c8; // int32_t
		constexpr auto pButton = 0x2d0; // UButton*
		constexpr auto pTextBlock = 0x2d8; // UTextBlock*
		constexpr auto sTooltip = 0x2e0; // FText
		constexpr auto iTabIndex = 0x2f8; // int32_t
		constexpr auto TabIndexDelegate = 0x300; // FMulticastInlineDelegate
	}

	namespace n_UAsyncActionLoadPrimaryAssetList { // : UAsyncActionLoadPrimaryAssetBase
		constexpr auto Completed = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UUniformGridSlot { // : UPanelSlot
		constexpr auto HorizontalAlignment = 0x38; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x39; // EVerticalAlignment
		constexpr auto Row = 0x3c; // int32_t
		constexpr auto column = 0x40; // int32_t
	}

	namespace n_UOnlineSessionClient { // : UOnlineSession
		constexpr auto bIsFromInvite = 0x1d8; // bool
		constexpr auto bHandlingDisconnect = 0x1d9; // bool
	}

	namespace n_UPaperTileMapComponent { // : UMeshComponent
		constexpr auto MapWidth = 0x468; // int32_t
		constexpr auto MapHeight = 0x46c; // int32_t
		constexpr auto TileWidth = 0x470; // int32_t
		constexpr auto TileHeight = 0x474; // int32_t
		constexpr auto DefaultLayerTileSet = 0x478; // UPaperTileSet*
		constexpr auto Material = 0x480; // UMaterialInterface*
		constexpr auto TileLayers = 0x488; // TArray<UPaperTileLayer*>
		constexpr auto TileMapColor = 0x498; // FLinearColor
		constexpr auto UseSingleLayerIndex = 0x4a8; // int32_t
		constexpr auto bUseSingleLayer = 0x4ac; // bool
		constexpr auto TileMap = 0x4b0; // UPaperTileMap*
	}

	namespace n_USizeBoxSlot { // : UPanelSlot
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x58; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x59; // EVerticalAlignment
	}

	namespace n_UEnvQueryTest_Project { // : UEnvQueryTest
		constexpr auto ProjectionData = 0x1f8; // FEnvTraceData
	}

	namespace n_APaperTileMapActor { // : AActor
		constexpr auto RenderComponent = 0x220; // UPaperTileMapComponent*
	}

	namespace n_UMOEtherworldSubsystem { // : UMOWorldSubsystemBase
		constexpr auto bEtherworldIsActive = 0x40; // bool
		constexpr auto bDeadAvatarsIsVisibleInWorld = 0x41; // bool
		constexpr auto bLivingAvatarsIsVisibleInEther = 0x42; // bool
		constexpr auto OnEtherworldStateChanged = 0x48; // FMulticastInlineDelegate
		constexpr auto pSoundCue_AmbientSound = 0x58; // USoundCue*
		constexpr auto pSoundMix_Ether = 0x60; // USoundMix*
		constexpr auto pParticleSystem_EtherBodyClient = 0x68; // UNiagaraSystem*
		constexpr auto pParticleSystem_Ambient = 0x70; // UNiagaraSystem*
		constexpr auto pEtherworldLUT = 0x78; // UTexture*
		constexpr auto pDefaultLUT = 0x80; // UTexture*
		constexpr auto pNiagaraComponent_BodyClient = 0x88; // UNiagaraComponent*
		constexpr auto pNiagaraComponent_Ambient = 0x90; // UNiagaraComponent*
		constexpr auto pAudioComponent = 0x98; // UAudioComponent*
	}

	namespace n_UDatasmithGLTFSceneImportData { // : UDatasmithSceneImportData
		constexpr auto Generator = 0x28; // FString
		constexpr auto Version = 0x38; // float
		constexpr auto Author = 0x40; // FString
		constexpr auto License = 0x50; // FString
		constexpr auto Source = 0x60; // FString
	}

	namespace n_UBP_MODragDropOperationItem_C { // : UMODragDropOperationItem
		constexpr auto DragSlotRef = 0xa8; // UWB_ButtonItem_C*
		constexpr auto Material = 0xb0; // UMaterialInstanceDynamic*
		constexpr auto ActionSlotRef = 0xb8; // UWB_ItemSlotActionbar_C*
		constexpr auto ContainerSlotRef = 0xc0; // UWB_ItemSlotContainer_C*
		constexpr auto PaperdollSlotRef = 0xc8; // UWB_ItemSlotPaperdoll_C*
		constexpr auto CraftingSlotRef = 0xd0; // UObject*
		constexpr auto sItemDataJson = 0xd8; // FString
		constexpr auto bIllegal = 0xe8; // bool
		constexpr auto bDontAttemptDropItem = 0xe9; // bool
	}

	namespace n_AMOMagicActor { // : AActor
		constexpr auto pMagicBallEffect = 0x220; // AMOMagicEffectBall*
		constexpr auto cMagicBallEffectClass = 0x238; // AMOMagicEffectBall*
		constexpr auto pCurrentDataAsset = 0x260; // UMODataAssetMagic*
	}

	namespace n_USlateAccessibleWidgetData { // : UObject
		constexpr auto bCanChildrenBeAccessible = 0x28; // bool
		constexpr auto AccessibleBehavior = 0x29; // ESlateAccessibleBehavior
		constexpr auto AccessibleSummaryBehavior = 0x2a; // ESlateAccessibleBehavior
		constexpr auto AccessibleText = 0x30; // FText
		constexpr auto AccessibleTextDelegate = 0x48; // FDelegate
		constexpr auto AccessibleSummaryText = 0x58; // FText
		constexpr auto AccessibleSummaryTextDelegate = 0x70; // FDelegate
	}

	namespace n_UInterpTrack { // : UObject
		constexpr auto SubTracks = 0x38; // TArray<UInterpTrack*>
		constexpr auto TrackInstClass = 0x48; // UInterpTrackInst*
		constexpr auto ActiveCondition = 0x50; // ETrackActiveCondition
		constexpr auto TrackTitle = 0x58; // FString
		constexpr auto bOnePerGroup = 0x68; // char : 1
		constexpr auto bDirGroupOnly = 0x68; // char : 1
		constexpr auto bDisableTrack = 0x68; // char : 1
		constexpr auto bIsSelected = 0x68; // char : 1
		constexpr auto bIsAnimControlTrack = 0x68; // char : 1
		constexpr auto bSubTrackOnly = 0x68; // char : 1
		constexpr auto bVisible = 0x68; // char : 1
		constexpr auto bIsRecording = 0x68; // char : 1
	}

	namespace n_UGeometryCollection { // : UObject
		constexpr auto GeometrySource = 0x30; // TArray<FGeometryCollectionSource>
		constexpr auto Materials = 0x40; // TArray<UMaterialInterface*>
		constexpr auto CollisionType = 0x50; // ECollisionTypeEnum
		constexpr auto ImplicitType = 0x51; // EImplicitTypeEnum
		constexpr auto MinLevelSetResolution = 0x54; // int32_t
		constexpr auto MaxLevelSetResolution = 0x58; // int32_t
		constexpr auto MinClusterLevelSetResolution = 0x5c; // int32_t
		constexpr auto MaxClusterLevelSetResolution = 0x60; // int32_t
		constexpr auto CollisionObjectReductionPercentage = 0x64; // float
		constexpr auto bMassAsDensity = 0x68; // bool
		constexpr auto Mass = 0x6c; // float
		constexpr auto MinimumMassClamp = 0x70; // float
		constexpr auto CollisionParticlesFraction = 0x74; // float
		constexpr auto MaximumCollisionParticles = 0x78; // int32_t
		constexpr auto SizeSpecificData = 0x80; // TArray<FGeometryCollectionSizeSpecificData>
		constexpr auto EnableRemovePiecesOnFracture = 0x90; // bool
		constexpr auto RemoveOnFractureMaterials = 0x98; // TArray<UMaterialInterface*>
		constexpr auto PersistentGuid = 0xa8; // FGuid
		constexpr auto StateGuid = 0xb8; // FGuid
		constexpr auto BoneSelectedMaterialIndex = 0xc8; // int32_t
	}

	namespace n_UMOCraftingBow { // : UMOCrafting
		constexpr auto pScrollBox_BowType = 0x310; // UMOScrollBox*
		constexpr auto pScrollBox_BowShape = 0x318; // UMOScrollBox*
		constexpr auto pScrollBox_BowMaterialSetup = 0x320; // UMOScrollBox*
		constexpr auto pItemSlotPlaceItem_BowBaseMaterial = 0x328; // UMOItemSlotPlaceItem*
		constexpr auto pItemSlotPlaceItem_BowSecondaryMaterial = 0x330; // UMOItemSlotPlaceItem*
		constexpr auto pCraftingSlider_Bow = 0x338; // UMOCraftingSliderWidget*
		constexpr auto pPreviewMaterial = 0x340; // UMaterialInstance*
		constexpr auto sBowMaterialBaseName = 0x348; // FString
		constexpr auto sBowMaterialSecondaryName = 0x358; // FString
		constexpr auto sBowShapeName = 0x368; // FString
		constexpr auto sBowTypeName = 0x378; // FString
		constexpr auto sBowMaterialSetup = 0x388; // FString
		constexpr auto vCraftingInfo_BowShape = 0x398; // TArray<FBowCraftingInfo_BowShape>
		constexpr auto vCraftingInfo_BowType = 0x3a8; // TArray<FBowCraftingInfo_BowType>
	}

	namespace n_UAB_CH_Player_Male_Human_Head_C { // : UMOAnimationInstancePlayerHead
		constexpr auto UberGraphFrame = 0x3e0; // FPointerToUberGraphFrame
		constexpr auto MOAnimGraphNode_CachedFacePose_2 = 0x3e8; // FMOAnimNode_CachedFacePose
		constexpr auto MOAnimGraphNode_FaceDriver_2 = 0x438; // FMOAnimNode_FaceDriver
		constexpr auto AnimGraphNode_LocalRefPose_2 = 0x470; // FAnimNode_RefPose
		constexpr auto MOAnimGraphNode_CachedFacePose = 0x488; // FMOAnimNode_CachedFacePose
		constexpr auto MOAnimGraphNode_FaceDriver = 0x4d8; // FMOAnimNode_FaceDriver
		constexpr auto AnimGraphNode_LocalRefPose = 0x510; // FAnimNode_RefPose
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x528; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_PoseBlendNode_3 = 0x5c8; // FAnimNode_PoseBlendNode
		constexpr auto AnimGraphNode_ModifyCurve = 0x668; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x6c0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_LayeredBoneBlend_2 = 0x6e0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_CopyPoseFromMesh_2 = 0x7a0; // FAnimNode_CopyPoseFromMesh
		constexpr auto AnimGraphNode_SaveCachedPose = 0x978; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_PoseBlendNode_2 = 0xad0; // FAnimNode_PoseBlendNode
		constexpr auto AnimGraphNode_UseCachedPose_3 = 0xb70; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0xb98; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend = 0xbc0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_PoseBlendNode = 0xc80; // FAnimNode_PoseBlendNode
		constexpr auto AnimGraphNode_Root = 0xd20; // FAnimNode_Root
		constexpr auto AnimGraphNode_CopyPoseFromMesh = 0xd50; // FAnimNode_CopyPoseFromMesh
		constexpr auto MOAnimGraphNode_EyesLookAt = 0xf28; // FMOAnimNode_EyesLookAt
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x1088; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_BlendListByBool = 0x10a8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose = 0x1148; // FAnimNode_UseCachedPose
		constexpr auto MOAnimGraphNode_LODSwitch = 0x1170; // FMOAnimNode_LODSwitch
		constexpr auto Jaw Open = 0x1210; // float
		constexpr auto Mask Width Min = 0x1214; // float
		constexpr auto Mask Width Max = 0x1218; // float
		constexpr auto Mask Length Min = 0x121c; // float
		constexpr auto Mask Length Max = 0x1220; // float
		constexpr auto Mask Depth Min = 0x1224; // float
		constexpr auto Mask Depth Max = 0x1228; // float
	}

	namespace n_UGameplayTask_TimeLimitedExecution { // : UGameplayTask
		constexpr auto OnFinished = 0x68; // FMulticastInlineDelegate
		constexpr auto OnTimeExpired = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UParticleModuleLocation_Seeded { // : UParticleModuleLocation
		constexpr auto RandomSeedInfo = 0x80; // FParticleRandomSeedInfo
	}

	namespace n_USkeleton { // : UObject
		constexpr auto BoneTree = 0x38; // TArray<FBoneNode>
		constexpr auto RefLocalPoses = 0x48; // TArray<FTransform>
		constexpr auto VirtualBoneGuid = 0x170; // FGuid
		constexpr auto VirtualBones = 0x180; // TArray<FVirtualBone>
		constexpr auto Sockets = 0x190; // TArray<USkeletalMeshSocket*>
		constexpr auto SmartNames = 0x1f0; // FSmartNameContainer
		constexpr auto BlendProfiles = 0x270; // TArray<UBlendProfile*>
		constexpr auto SlotGroups = 0x280; // TArray<FAnimSlotGroup>
		constexpr auto AssetUserData = 0x358; // TArray<UAssetUserData*>
	}

	namespace n_UParticleModuleSizeMultiplyLife { // : UParticleModuleSizeBase
		constexpr auto LifeMultiplier = 0x30; // FRawDistributionVector
		constexpr auto MultiplyX = 0x78; // char : 1
		constexpr auto MultiplyY = 0x78; // char : 1
		constexpr auto MultiplyZ = 0x78; // char : 1
	}

	namespace n_UMOKeybindEntry { // : UMOWidgetBlueprint
		constexpr auto OnMappingUpdatedDelegate = 0x260; // FMulticastInlineDelegate
		constexpr auto pText = 0x270; // UTextBlock*
		constexpr auto pInputKeySelector = 0x278; // UInputKeySelector*
		constexpr auto structIndex = 0x280; // int32_t
		constexpr auto fAxisScale = 0x284; // float
		constexpr auto mappingName = 0x288; // FName
		constexpr auto pMOOptionsKeybinds = 0x290; // UMOUserWidgetOptionsKeybinds*
	}

	namespace n_AMOAiEffectActor { // : AActor
		constexpr auto pSoundCue_SpawnTarget = 0x220; // USoundCue*
		constexpr auto pSoundCue_SpawnSource = 0x228; // USoundCue*
		constexpr auto pNiagaraSystem_SpawnTarget = 0x230; // UNiagaraSystem*
		constexpr auto pNiagaraSystem_SpawnSource = 0x238; // UNiagaraSystem*
		constexpr auto pActor_Source = 0x240; // ACharacter*
		constexpr auto pActor_Target = 0x248; // ACharacter*
		constexpr auto vTargetLocation = 0x250; // FVector
		constexpr auto pNiagaraComponent_Target = 0x260; // UNiagaraComponent*
		constexpr auto pNiagaraComponent_Source = 0x268; // UNiagaraComponent*
	}

	namespace n_UGerstnerWaterWaves { // : UWaterWaves
		constexpr auto GerstnerWaveGenerator = 0x28; // UGerstnerWaterWaveGeneratorBase*
		constexpr auto GerstnerWaves = 0x30; // TArray<FGerstnerWave>
		constexpr auto MaxWaveHeight = 0x40; // float
	}

	namespace n_UParticleModuleRotationOverLifetime { // : UParticleModuleRotationBase
		constexpr auto RotationOverLife = 0x30; // FRawDistributionFloat
		constexpr auto Scale = 0x60; // char : 1
	}

	namespace n_UMOPhysicalMaterial { // : UPhysicalMaterial
		constexpr auto eHitBone = 0x80; // EAtlasServerHitBoneID
		constexpr auto SoundProperties = 0x88; // FMOPhysicalMaterialSoundProperties
	}

	namespace n_UConstantQNRTSettings { // : UAudioSynesthesiaNRTSettings
		constexpr auto StartingFrequency = 0x28; // float
		constexpr auto NumBands = 0x2c; // int32_t
		constexpr auto NumBandsPerOctave = 0x30; // float
		constexpr auto AnalysisPeriod = 0x34; // float
		constexpr auto bDownmixToMono = 0x38; // bool
		constexpr auto FFTSize = 0x39; // EConstantQFFTSizeEnum
		constexpr auto WindowType = 0x3a; // EFFTWindowType
		constexpr auto SpectrumType = 0x3b; // EAudioSpectrumType
		constexpr auto BandWidthStretch = 0x3c; // float
		constexpr auto CQTNormalization = 0x40; // EConstantQNormalizationEnum
		constexpr auto NoiseFloorDb = 0x44; // float
	}

	namespace n_ALevelBounds { // : AActor
		constexpr auto BoxComponent = 0x220; // UBoxComponent*
		constexpr auto bAutoUpdateBounds = 0x228; // bool
	}

	namespace n_ULuminApplicationLifecycleComponent { // : UApplicationLifecycleComponent
		constexpr auto DeviceHasReactivatedDelegate = 0x140; // FMulticastInlineDelegate
		constexpr auto DeviceWillEnterRealityModeDelegate = 0x150; // FMulticastInlineDelegate
		constexpr auto DeviceWillGoInStandbyDelegate = 0x160; // FMulticastInlineDelegate
		constexpr auto FocusLostDelegate = 0x170; // FMulticastInlineDelegate
		constexpr auto FocusGainedDelegate = 0x180; // FMulticastInlineDelegate
	}

	namespace n_UMovieSceneNiagaraSystemSpawnSection { // : UMovieSceneSection
		constexpr auto SectionStartBehavior = 0xe8; // ENiagaraSystemSpawnSectionStartBehavior
		constexpr auto SectionEvaluateBehavior = 0xec; // ENiagaraSystemSpawnSectionEvaluateBehavior
		constexpr auto SectionEndBehavior = 0xf0; // ENiagaraSystemSpawnSectionEndBehavior
		constexpr auto AgeUpdateMode = 0xf4; // ENiagaraAgeUpdateMode
	}

	namespace n_UGeometryCacheCodecRaw { // : UGeometryCacheCodecBase
		constexpr auto DummyProperty = 0x38; // int32_t
	}

	namespace n_UNiagaraDataInterfaceFieldSystem { // : UNiagaraDataInterface
		constexpr auto BlueprintSource = 0x38; // UBlueprint*
		constexpr auto SourceActor = 0x40; // AActor*
		constexpr auto FieldDimensions = 0x48; // FIntVector
		constexpr auto MinBounds = 0x54; // FVector
		constexpr auto MaxBounds = 0x60; // FVector
	}

	namespace n_UMOPetListEntry { // : UMOWidgetBlueprint
		constexpr auto pButton = 0x270; // UButton*
		constexpr auto pImageIcon = 0x278; // UImage*
		constexpr auto pTextBlockPetName = 0x280; // UTextBlock*
		constexpr auto pTextBlockLevel = 0x288; // UTextBlock*
		constexpr auto iEntryIndex = 0x290; // int32_t
	}

	namespace n_UButtonWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto ButtonStyle = 0x30; // FButtonStyle
	}

	namespace n_UInputActionDelegateBinding { // : UInputDelegateBinding
		constexpr auto InputActionDelegateBindings = 0x28; // TArray<FBlueprintInputActionDelegateBinding>
	}

	namespace n_UMOMurderCountEntry { // : UMOWidgetBlueprint
		constexpr auto pMOCheckBox_Report = 0x260; // UMOCheckBox*
		constexpr auto pTextBlock_Name = 0x268; // UTextBlock*
	}

	namespace n_UBP_SaveGame_C { // : UMOSaveGame
		constexpr auto UserName = 0x150; // FString
		constexpr auto Password = 0x160; // FString
	}

	namespace n_UMaterialExpressionTransformPosition { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto TransformSourceType = 0x54; // EMaterialPositionTransformSource
		constexpr auto TransformType = 0x55; // EMaterialPositionTransformSource
	}

	namespace n_USimpleConstructionScript { // : UObject
		constexpr auto RootNodes = 0x28; // TArray<USCS_Node*>
		constexpr auto AllNodes = 0x38; // TArray<USCS_Node*>
		constexpr auto DefaultSceneRootNode = 0x48; // USCS_Node*
	}

	namespace n_UMOUserWidgetCompass { // : UMOUserWidget
		constexpr auto cWaypointClass = 0x2c8; // UMOUserWidgetWaypoint*
		constexpr auto pWaypointCanvas = 0x2d0; // UCanvasPanel*
		constexpr auto compassMaterial = 0x2d8; // UMaterialInstanceDynamic*
	}

	namespace n_UNiagaraDataInterfacePlatformSet { // : UNiagaraDataInterface
		constexpr auto Platforms = 0x38; // FNiagaraPlatformSet
	}

	namespace n_UAnimClassData { // : UObject
		constexpr auto BakedStateMachines = 0x30; // TArray<FBakedAnimationStateMachine>
		constexpr auto TargetSkeleton = 0x40; // USkeleton*
		constexpr auto AnimNotifies = 0x48; // TArray<FAnimNotifyEvent>
		constexpr auto OrderedSavedPoseIndicesMap = 0x58; // TMap<FName, FCachedPoseIndices>
		constexpr auto AnimBlueprintFunctions = 0xa8; // TArray<FAnimBlueprintFunction>
		constexpr auto AnimBlueprintFunctionData = 0xb8; // TArray<FAnimBlueprintFunctionData>
		constexpr auto AnimNodeProperties = 0xc8; // TArray<TFieldPath<FStructProperty>>
		constexpr auto LinkedAnimGraphNodeProperties = 0xe8; // TArray<TFieldPath<FStructProperty>>
		constexpr auto LinkedAnimLayerNodeProperties = 0x108; // TArray<TFieldPath<FStructProperty>>
		constexpr auto PreUpdateNodeProperties = 0x128; // TArray<TFieldPath<FStructProperty>>
		constexpr auto DynamicResetNodeProperties = 0x148; // TArray<TFieldPath<FStructProperty>>
		constexpr auto StateMachineNodeProperties = 0x168; // TArray<TFieldPath<FStructProperty>>
		constexpr auto InitializationNodeProperties = 0x188; // TArray<TFieldPath<FStructProperty>>
		constexpr auto GraphNameAssetPlayers = 0x1a8; // TMap<FName, FGraphAssetPlayerInformation>
		constexpr auto SyncGroupNames = 0x1f8; // TArray<FName>
		constexpr auto EvaluateGraphExposedInputs = 0x208; // TArray<FExposedValueHandler>
		constexpr auto GraphBlendOptions = 0x218; // TMap<FName, FAnimGraphBlendOptions>
		constexpr auto PropertyAccessLibrary = 0x268; // FPropertyAccessLibrary
	}

	namespace n_UMODataAssetPetEquipmentDefinitions { // : UPrimaryDataAsset
		constexpr auto pSharedData = 0x30; // UMODataAssetEquipmentShared*
		constexpr auto pHorseEquipmentFallback = 0x38; // UMODataAssetPetEquipment*
		constexpr auto pBearEquipmentFallback = 0x40; // UMODataAssetPetEquipment*
		constexpr auto vHorsePetEquipment = 0x48; // TArray<UMODataAssetPetEquipment*>
		constexpr auto vBearPetEquipment = 0x58; // TArray<UMODataAssetPetEquipment*>
		constexpr auto bPetEquipmentIsPreloaded = 0x68; // bool
		constexpr auto pLoadedSkeletalMeshes = 0x70; // TArray<USkeletalMesh*>
		constexpr auto LoadedAnimInstances = 0x80; // TArray<UAnimInstance*>
		constexpr auto LoadedSounds = 0x90; // TArray<USoundCue*>
	}

	namespace n_UAB_CH_Player_Male_Human_Armor_06_RisarSoldier_Legs_C { // : UAnimInstance
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x2c8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x2e8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_CopyPoseFromMesh = 0x308; // FAnimNode_CopyPoseFromMesh
		constexpr auto AnimGraphNode_Root = 0x4e0; // FAnimNode_Root
		constexpr auto AnimGraphNode_KawaiiPhysics_2 = 0x510; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_KawaiiPhysics = 0x760; // FAnimNode_KawaiiPhysics
		constexpr auto DummyBoneLength = 0x9b0; // float
		constexpr auto PhysicsSettingsSide = 0x9b4; // FKawaiiPhysicsSettings
	}

	namespace n_AExponentialHeightFog { // : AInfo
		constexpr auto Component = 0x220; // UExponentialHeightFogComponent*
		constexpr auto bEnabled = 0x228; // char : 1
	}

	namespace n_UWindowTitleBarAreaSlot { // : UPanelSlot
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UNiagaraDataInterfaceRWBase { // : UNiagaraDataInterface
		constexpr auto OutputShaderStages = 0x38; // TSet<int32_t>
		constexpr auto IterationShaderStages = 0x88; // TSet<int32_t>
	}

	namespace n_ULocationServicesImpl { // : UObject
		constexpr auto OnLocationChanged = 0x28; // FMulticastInlineDelegate
	}

	namespace n_UMOUserWidget { // : UUserWidget
		constexpr auto bBypassShouldRightClickOverride = 0x260; // bool
		constexpr auto bTryAutoOpenInventory = 0x261; // bool
		constexpr auto bDynamicallyModifyZOrder = 0x262; // bool
		constexpr auto bAddToWindowTracker = 0x263; // bool
		constexpr auto bClosedByEsc = 0x264; // bool
		constexpr auto pOpenSoundCue = 0x268; // USoundCue*
		constexpr auto pCloseSoundCue = 0x270; // USoundCue*
		constexpr auto sSaveIdentifier = 0x278; // FString
	}

	namespace n_UDestroySessionCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UWB_MOChatColorSelectionEntry_C { // : UMOChatColorSelectionEntry
		constexpr auto UberGraphFrame = 0x338; // FPointerToUberGraphFrame
	}

	namespace n_UMaterialExpressionSkyAtmosphereLightDiskLuminance { // : UMaterialExpression
		constexpr auto LightIndex = 0x40; // int32_t
	}

	namespace n_USceneCaptureComponentCube { // : USceneCaptureComponent
		constexpr auto TextureTarget = 0x2b0; // UTextureRenderTargetCube*
		constexpr auto bCaptureRotation = 0x2b8; // bool
		constexpr auto TextureTargetLeft = 0x2c0; // UTextureRenderTargetCube*
		constexpr auto TextureTargetRight = 0x2c8; // UTextureRenderTargetCube*
		constexpr auto TextureTargetODS = 0x2d0; // UTextureRenderTarget2D*
		constexpr auto IPD = 0x2d8; // float
	}

	namespace n_UFurSplines { // : UObject
		constexpr auto Vertices = 0x28; // TArray<FVector>
		constexpr auto Index = 0x38; // TArray<int32_t>
		constexpr auto Count = 0x48; // TArray<int32_t>
		constexpr auto ControlPointCount = 0x58; // int32_t
		constexpr auto ImportFilename = 0x60; // FString
		constexpr auto Version = 0x70; // int32_t
		constexpr auto ImportTransformation = 0x74; // int32_t
		constexpr auto Threshold = 0x78; // float
	}

	namespace n_UAnimCompress_PerTrackCompression { // : UAnimCompress_RemoveLinearKeys
		constexpr auto MaxZeroingThreshold = 0x60; // float
		constexpr auto MaxPosDiffBitwise = 0x64; // float
		constexpr auto MaxAngleDiffBitwise = 0x68; // float
		constexpr auto MaxScaleDiffBitwise = 0x6c; // float
		constexpr auto AllowedRotationFormats = 0x70; // TArray<AnimationCompressionFormat>
		constexpr auto AllowedTranslationFormats = 0x80; // TArray<AnimationCompressionFormat>
		constexpr auto AllowedScaleFormats = 0x90; // TArray<AnimationCompressionFormat>
		constexpr auto bResampleAnimation = 0xa0; // char : 1
		constexpr auto ResampledFramerate = 0xa4; // float
		constexpr auto MinKeysForResampling = 0xa8; // int32_t
		constexpr auto bUseAdaptiveError = 0xac; // char : 1
		constexpr auto bUseOverrideForEndEffectors = 0xac; // char : 1
		constexpr auto TrackHeightBias = 0xb0; // int32_t
		constexpr auto ParentingDivisor = 0xb4; // float
		constexpr auto ParentingDivisorExponent = 0xb8; // float
		constexpr auto bUseAdaptiveError2 = 0xbc; // char : 1
		constexpr auto RotationErrorSourceRatio = 0xc0; // float
		constexpr auto TranslationErrorSourceRatio = 0xc4; // float
		constexpr auto ScaleErrorSourceRatio = 0xc8; // float
		constexpr auto MaxErrorPerTrackRatio = 0xcc; // float
		constexpr auto PerturbationProbeSize = 0xd0; // float
	}

	namespace n_UTouchInterface { // : UObject
		constexpr auto Controls = 0x28; // TArray<FTouchInputControl>
		constexpr auto ActiveOpacity = 0x38; // float
		constexpr auto InactiveOpacity = 0x3c; // float
		constexpr auto TimeUntilDeactive = 0x40; // float
		constexpr auto TimeUntilReset = 0x44; // float
		constexpr auto ActivationDelay = 0x48; // float
		constexpr auto bPreventRecenter = 0x4c; // bool
		constexpr auto StartupDelay = 0x50; // float
	}

	namespace n_UAREnvironmentProbeComponent { // : UARComponent
		constexpr auto ReplicatedPayload = 0x280; // FAREnvironmentProbeUpdatePayload
	}

	namespace n_UEditableGameplayTagQueryExpression_AnyTagsMatch { // : UEditableGameplayTagQueryExpression
		constexpr auto Tags = 0x28; // FGameplayTagContainer
	}

	namespace n_ABP_AiEffectElemental_Attack_C { // : AMOAiEffectActor
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
	}

	namespace n_UViewport { // : UContentWidget
		constexpr auto BackgroundColor = 0x120; // FLinearColor
	}

	namespace n_ULandscapeLayerInfoObject { // : UObject
		constexpr auto LayerName = 0x28; // FName
		constexpr auto PhysMaterial = 0x30; // UPhysicalMaterial*
		constexpr auto Hardness = 0x38; // float
		constexpr auto LayerUsageDebugColor = 0x3c; // FLinearColor
	}

	namespace n_UInterpTrackDirector { // : UInterpTrack
		constexpr auto CutTrack = 0x70; // TArray<FDirectorTrackCut>
		constexpr auto bSimulateCameraCutsOnClients = 0x80; // char : 1
	}

	namespace n_UMODataAssetHead { // : UMODataAssetEquipmentShared
		constexpr auto pStaticMesh = 0x308; // UStaticMesh*
		constexpr auto bBluntWeapon = 0x310; // bool
		constexpr auto sDisplayName = 0x318; // FText
		constexpr auto pIcon = 0x330; // UTexture2D*
		constexpr auto pBlockParticles = 0x338; // UNiagaraSystem*
		constexpr auto pPerfectBlockParticles = 0x340; // UNiagaraSystem*
		constexpr auto pEquipHitParticles = 0x348; // UNiagaraSystem*
		constexpr auto pGenericHitParticles = 0x350; // UNiagaraSystem*
		constexpr auto pSwingTrail = 0x358; // UParticleSystem*
		constexpr auto pDealDamageSoundGeneric = 0x360; // USoundCue*
		constexpr auto pDealDamageSoundSwing = 0x368; // USoundCue*
		constexpr auto pDealDamageSoundStab = 0x370; // USoundCue*
		constexpr auto pSwingSound = 0x378; // USoundCue*
		constexpr auto pBlockSound = 0x380; // USoundCue*
		constexpr auto pPerfectBlockSound = 0x388; // USoundCue*
		constexpr auto pEquipHitSound = 0x390; // USoundCue*
		constexpr auto pEquipSound = 0x398; // USoundCue*
		constexpr auto pUnequipSound = 0x3a0; // USoundCue*
		constexpr auto pDestroyedSound = 0x3a8; // USoundCue*
		constexpr auto pPushSound = 0x3b0; // USoundCue*
		constexpr auto pHitDuringCharge = 0x3b8; // USoundCue*
		constexpr auto vSocketEmitterPairs = 0x3c0; // TArray<FSocketEmitterPair>
		constexpr auto vSocketSoundPairs = 0x3d0; // TArray<FSocketSoundPair>
		constexpr auto vSocketLightPairs = 0x3e0; // TArray<FSocketLightPair>
	}

	namespace n_UWB_CladeGiftsLearnedGiftsText_C { // : UMOUserWidget
		constexpr auto UberGraphFrame = 0x2c8; // FPointerToUberGraphFrame
		constexpr auto LearnedCladeGifts_TextBox = 0x2d0; // UTextBlock*
		constexpr auto CladeGiftName = 0x2d8; // FText
	}

	namespace n_UStereoLayerShapeEquirect { // : UStereoLayerShape
		constexpr auto LeftUVRect = 0x28; // FBox2D
		constexpr auto RightUVRect = 0x3c; // FBox2D
		constexpr auto LeftScale = 0x50; // FVector2D
		constexpr auto RightScale = 0x58; // FVector2D
		constexpr auto LeftBias = 0x60; // FVector2D
		constexpr auto RightBias = 0x68; // FVector2D
	}

	namespace n_UMOSkinning { // : UMOUserWidget
		constexpr auto pMOButton_Skinning = 0x2c8; // UMOButtonMedium*
		constexpr auto pTextBlock_Sign = 0x2d0; // UTextBlock*
		constexpr auto pItemSlotPlaceItem_Resource = 0x2d8; // UMOItemSlotPlaceItem*
	}

	namespace n_UEditableTextWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto EditableTextStyle = 0x30; // FEditableTextStyle
	}

	namespace n_UMaterialExpressionDecalMipmapLevel { // : UMaterialExpression
		constexpr auto TextureSize = 0x40; // FExpressionInput
		constexpr auto ConstWidth = 0x54; // float
		constexpr auto ConstHeight = 0x58; // float
	}

	namespace n_UMOSocialFriendsEntry { // : UMOWidgetBlueprint
		constexpr auto pFriends = 0x278; // UMOSocialFriends*
		constexpr auto vOnlineImageColor = 0x280; // FLinearColor
		constexpr auto vOnlineTextColor = 0x290; // FLinearColor
		constexpr auto vOfflineColor = 0x2a0; // FLinearColor
		constexpr auto iEntryState = 0x2b0; // int32_t
		constexpr auto bOnline = 0x2b4; // bool
		constexpr auto pName = 0x2b8; // UTextBlock*
		constexpr auto pTextBlockEntryInfo = 0x2c0; // UTextBlock*
		constexpr auto pTextBlock_AcceptFriend = 0x2c8; // UTextBlock*
		constexpr auto pMOButton_AcceptFriend = 0x2d0; // UMOButtonMedium*
		constexpr auto pRemoveFriend = 0x2d8; // UMOButtonSmall*
		constexpr auto pOnlineImage = 0x2e0; // UImage*
	}

	namespace n_UMaterialExpressionClearCoatNormalCustomOutput { // : UMaterialExpressionCustomOutput
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UParticleModuleVelocityBase { // : UParticleModule
		constexpr auto bInWorldSpace = 0x30; // char : 1
		constexpr auto bApplyOwnerScale = 0x30; // char : 1
	}

	namespace n_UMatineeCameraShake { // : UCameraShakeBase
		constexpr auto OscillationDuration = 0x98; // float
		constexpr auto OscillationBlendInTime = 0x9c; // float
		constexpr auto OscillationBlendOutTime = 0xa0; // float
		constexpr auto RotOscillation = 0xa4; // FROscillator
		constexpr auto LocOscillation = 0xc8; // FVOscillator
		constexpr auto FOVOscillation = 0xec; // FFOscillator
		constexpr auto AnimPlayRate = 0xf8; // float
		constexpr auto AnimScale = 0xfc; // float
		constexpr auto AnimBlendInTime = 0x100; // float
		constexpr auto AnimBlendOutTime = 0x104; // float
		constexpr auto RandomAnimSegmentDuration = 0x108; // float
		constexpr auto Anim = 0x110; // UCameraAnim*
		constexpr auto bRandomAnimSegment = 0x118; // char : 1
		constexpr auto OscillatorTimeRemaining = 0x11c; // float
		constexpr auto AnimInst = 0x120; // UCameraAnimInst*
	}

	namespace n_UAnimationSharingStateProcessor { // : UObject
		constexpr auto AnimationStateEnum = 0x28; // TSoftObjectPtr<UEnum>
	}

	namespace n_ABP_MOSky_C { // : AMOSunSky
		constexpr auto UberGraphFrame = 0x230; // FPointerToUberGraphFrame
		constexpr auto SunAndMoon = 0x238; // UStaticMeshComponent*
		constexpr auto DefaultSceneRoot = 0x240; // USceneComponent*
		constexpr auto SkyInst = 0x248; // TArray<UMaterialInstanceDynamic*>
		constexpr auto Horizon color curve = 0x258; // UCurveLinearColor*
		constexpr auto Zenith color curve = 0x260; // UCurveLinearColor*
		constexpr auto SkyBrightness = 0x268; // float
		constexpr auto SkyContrast = 0x26c; // float
		constexpr auto SkySaturation = 0x270; // float
		constexpr auto StarsBrightness = 0x274; // float
		constexpr auto ExpDensity = 0x278; // float
		constexpr auto ExpFog_Active = 0x280; // AExponentialHeightFog*
		constexpr auto SkyLightingIntensity = 0x288; // float
		constexpr auto SkySunArea = 0x28c; // float
		constexpr auto NearDensityMorning = 0x290; // float
		constexpr auto NearDensityNight = 0x294; // float
		constexpr auto FarDensity = 0x298; // float
		constexpr auto SkyHorizonColor = 0x29c; // FLinearColor
		constexpr auto HorizonDensity = 0x2ac; // float
		constexpr auto SkyZenithColor = 0x2b0; // FLinearColor
		constexpr auto ZenithDensity = 0x2c0; // float
		constexpr auto SkyLightIntensity = 0x2c4; // float
		constexpr auto SkyLightColor = 0x2c8; // FLinearColor
		constexpr auto VolumetricScattering = 0x2d8; // float
		constexpr auto ExFogDensity = 0x2dc; // float
		constexpr auto ExFogCutOffDistance = 0x2e0; // float
		constexpr auto ExFogHeightFalloff = 0x2e4; // float
		constexpr auto FogInsColor = 0x2e8; // FLinearColor
		constexpr auto FogMaxOpacity = 0x2f8; // float
		constexpr auto ExFogStartDistance = 0x2fc; // float
		constexpr auto VolumetricFogEnable? = 0x300; // bool
		constexpr auto VolumetricFogColor = 0x304; // FColor
		constexpr auto DirectionalInsColor = 0x308; // FLinearColor
		constexpr auto DirecitonalInsExp = 0x318; // float
		constexpr auto DirecitonalInsSD = 0x31c; // float
		constexpr auto AtFogScaling = 0x320; // float
		constexpr auto VolumetricFogEmissive = 0x324; // FLinearColor
		constexpr auto VolumetricFogDistance = 0x334; // float
		constexpr auto VolumetricFogExScale = 0x338; // float
		constexpr auto VolumetricFogScatteringDistribution = 0x33c; // float
		constexpr auto CloudShadowInst = 0x340; // UMaterialInstanceDynamic*
		constexpr auto StarsRotator = 0x348; // float
		constexpr auto SolarTime = 0x34c; // float
		constexpr auto Latitude = 0x350; // float
		constexpr auto Longitude = 0x354; // float
		constexpr auto TimeZone = 0x358; // float
		constexpr auto NorthOffset = 0x35c; // float
		constexpr auto Elevation = 0x360; // float
		constexpr auto CorrectedElevation = 0x364; // float
		constexpr auto MoonElevationOffset = 0x368; // float
		constexpr auto Azimuth = 0x36c; // float
		constexpr auto UseDaylightSavingTime = 0x370; // bool
		constexpr auto DSTStartMonth = 0x374; // int32_t
		constexpr auto DSTStartDay = 0x378; // int32_t
		constexpr auto DSTEndMonth = 0x37c; // int32_t
		constexpr auto DSTEndDay = 0x380; // int32_t
		constexpr auto DSTSwitchHour = 0x384; // int32_t
		constexpr auto Sunrise_Sun = 0x388; // float
		constexpr auto Day_Sun = 0x38c; // float
		constexpr auto Sunset_Sun = 0x390; // float
		constexpr auto Night_Sun = 0x394; // float
		constexpr auto Sunrise_Sky = 0x398; // float
		constexpr auto Day_Sky = 0x39c; // float
		constexpr auto Sunset_Sky = 0x3a0; // float
		constexpr auto Night_Sky = 0x3a4; // float
		constexpr auto SunIntensity_SunsetCurve = 0x3a8; // UCurveFloat*
		constexpr auto SunIntensity_SunriseCurve = 0x3b0; // UCurveFloat*
		constexpr auto Sun_Temperature = 0x3b8; // UCurveFloat*
		constexpr auto Fog_InscatteringColor = 0x3c0; // UCurveLinearColor*
		constexpr auto Fog_Opacity = 0x3c8; // UCurveFloat*
		constexpr auto MO2Sun = 0x3d0; // FS_MO2_Sun
		constexpr auto MO2Clouds = 0x410; // FS_MO2_Clouds
		constexpr auto MO2Sky = 0x548; // FS_MO2_Sky
		constexpr auto MO2Moon = 0x578; // TArray<FS_MO2_Moon>
		constexpr auto MOSunSky = 0x588; // UObject*
		constexpr auto Sky_Parameters = 0x590; // FS_MO2_Sky
		constexpr auto MODirectional = 0x5c0; // ABP_MODirectionalLight_SunCycle_Refactor_C*
		constexpr auto C_StarsBrightness = 0x5c8; // UCurveFloat*
		constexpr auto MoonParameterList = 0x5d0; // FS_MO2_Moon_MaterialParameters
		constexpr auto OverrideMoons = 0x660; // bool
		constexpr auto DirectionOverride = 0x668; // TArray<FVector>
		constexpr auto OverrideDirection = 0x678; // bool
		constexpr auto SkyMaterial = 0x680; // UMaterialInstance*
	}

	namespace n_AStaticMeshCompositionActor { // : AActor
		constexpr auto vMeshCompositionInfos = 0x220; // TArray<FStaticMeshCompositionInfo>
		constexpr auto bMergeMeshesOnConstruction = 0x230; // bool
		constexpr auto ePostMergeAction = 0x231; // EPostMeshMergeAction
	}

	namespace n_AWindDirectionalSource { // : AInfo
		constexpr auto Component = 0x220; // UWindDirectionalSourceComponent*
	}

	namespace n_AMOAvatarStaticMesh { // : AMOAvatar
		constexpr auto pStaticMeshComponent = 0x2b0; // UStaticMeshComponent*
		constexpr auto pUseSoundCue = 0x2b8; // USoundCue*
	}

	namespace n_UMOCharacterDelete { // : UMOUserWidget
		constexpr auto sCharacterName = 0x2c8; // FString
		constexpr auto pButtonDelete = 0x2d8; // UButton*
		constexpr auto pEditableTextBoxDeleteName = 0x2e0; // UEditableTextBox*
	}

	namespace n_UMOSpellbook { // : UMOUserWidget
		constexpr auto cSpellIconWidgetClass = 0x2c8; // UUserWidget*
		constexpr auto pImageBackground = 0x2d0; // UImage*
		constexpr auto pSpellbookSpell = 0x2d8; // UMOSpellbookSpell*
		constexpr auto vSpellbookBackgrounds = 0x2e0; // TArray<UTexture2D*>
		constexpr auto pSpellbookSpellListEcumenical = 0x2f0; // UMOSpellbookSpellList*
		constexpr auto pSpellbookSpellListSpiritism = 0x2f8; // UMOSpellbookSpellList*
		constexpr auto iLastSpellIndex = 0x300; // int32_t
	}

	namespace n_UUniformScalar { // : UFieldNodeFloat
		constexpr auto Magnitude = 0xb0; // float
	}

	namespace n_UAudioImpulseResponse { // : UObject
		constexpr auto ImpulseResponse = 0x28; // TArray<float>
		constexpr auto NumChannels = 0x38; // int32_t
		constexpr auto SampleRate = 0x3c; // int32_t
		constexpr auto NormalizationVolumeDb = 0x40; // float
		constexpr auto bTrueStereo = 0x44; // bool
		constexpr auto IRData = 0x48; // TArray<float>
	}

	namespace n_ULevelSequence { // : UMovieSceneSequence
		constexpr auto MovieScene = 0x68; // UMovieScene*
		constexpr auto ObjectReferences = 0x70; // FLevelSequenceObjectReferenceMap
		constexpr auto BindingReferences = 0xc0; // FLevelSequenceBindingReferences
		constexpr auto PossessedObjects = 0x160; // TMap<FString, FLevelSequenceObject>
		constexpr auto DirectorClass = 0x1b0; // UObject*
		constexpr auto AssetUserData = 0x1b8; // TArray<UAssetUserData*>
	}

	namespace n_UBuildPatchManifest { // : UObject
		constexpr auto ManifestFileVersion = 0x28; // char
		constexpr auto bIsFileData = 0x29; // bool
		constexpr auto AppID = 0x2c; // uint32_t
		constexpr auto AppName = 0x30; // FString
		constexpr auto BuildVersion = 0x40; // FString
		constexpr auto LaunchExe = 0x50; // FString
		constexpr auto LaunchCommand = 0x60; // FString
		constexpr auto PrereqIds = 0x70; // TSet<FString>
		constexpr auto PrereqName = 0xc0; // FString
		constexpr auto PrereqPath = 0xd0; // FString
		constexpr auto PrereqArgs = 0xe0; // FString
		constexpr auto FileManifestList = 0xf0; // TArray<FFileManifestData>
		constexpr auto ChunkList = 0x100; // TArray<FChunkInfoData>
		constexpr auto CustomFields = 0x110; // TArray<FCustomFieldData>
	}

	namespace n_UVariantSet { // : UObject
		constexpr auto DisplayText = 0x28; // FText
		constexpr auto bExpanded = 0x58; // bool
		constexpr auto Variants = 0x60; // TArray<UVariant*>
		constexpr auto Thumbnail = 0x70; // UTexture2D*
	}

	namespace n_UARImageComponent { // : UARComponent
		constexpr auto ReplicatedPayload = 0x280; // FARImageUpdatePayload
	}

	namespace n_UMOPassiveStatIncreaseManager { // : UMOManager
		constexpr auto pPlayerController = 0x28; // AMOPlayerController*
	}

	namespace n_UExponentialHeightFogComponent { // : USceneComponent
		constexpr auto FogDensity = 0x1f8; // float
		constexpr auto FogHeightFalloff = 0x1fc; // float
		constexpr auto SecondFogData = 0x200; // FExponentialHeightFogData
		constexpr auto FogInscatteringColor = 0x20c; // FLinearColor
		constexpr auto InscatteringColorCubemap = 0x220; // UTextureCube*
		constexpr auto InscatteringColorCubemapAngle = 0x228; // float
		constexpr auto InscatteringTextureTint = 0x22c; // FLinearColor
		constexpr auto FullyDirectionalInscatteringColorDistance = 0x23c; // float
		constexpr auto NonDirectionalInscatteringColorDistance = 0x240; // float
		constexpr auto DirectionalInscatteringExponent = 0x244; // float
		constexpr auto DirectionalInscatteringStartDistance = 0x248; // float
		constexpr auto DirectionalInscatteringColor = 0x24c; // FLinearColor
		constexpr auto FogMaxOpacity = 0x25c; // float
		constexpr auto StartDistance = 0x260; // float
		constexpr auto FogCutoffDistance = 0x264; // float
		constexpr auto bEnableVolumetricFog = 0x268; // bool
		constexpr auto VolumetricFogScatteringDistribution = 0x26c; // float
		constexpr auto VolumetricFogAlbedo = 0x270; // FColor
		constexpr auto VolumetricFogEmissive = 0x274; // FLinearColor
		constexpr auto VolumetricFogExtinctionScale = 0x284; // float
		constexpr auto VolumetricFogDistance = 0x288; // float
		constexpr auto VolumetricFogStaticLightingScatteringIntensity = 0x28c; // float
		constexpr auto bOverrideLightColorsWithFogInscatteringColors = 0x290; // bool
	}

	namespace n_UMOSkillsTreeList { // : UMOWidgetBlueprint
		constexpr auto pMOButton_AutoOptimize = 0x260; // UMOButtonLarge*
		constexpr auto cSkillsTreeListEntryClass = 0x268; // UMOWidgetBlueprint*
		constexpr auto pScrollBox = 0x270; // UMOScrollBox*
		constexpr auto pNumberOfSkills = 0x278; // UTextBlock*
		constexpr auto pMaximumNumberOfSkills = 0x280; // UTextBlock*
		constexpr auto pSkillsOverflowed = 0x288; // UTextBlock*
		constexpr auto pSkillsTreeParent = 0x290; // UMOSkillsTree*
		constexpr auto vTreeListEntries = 0x298; // TArray<UMOSkillsTreeListEntry*>
	}

	namespace n_ULoudnessNRTSettings { // : UAudioSynesthesiaNRTSettings
		constexpr auto AnalysisPeriod = 0x28; // float
		constexpr auto MinimumFrequency = 0x2c; // float
		constexpr auto MaximumFrequency = 0x30; // float
		constexpr auto CurveType = 0x34; // ELoudnessNRTCurveTypeEnum
		constexpr auto NoiseFloorDb = 0x38; // float
	}

	namespace n_UUserDefinedEnum { // : UEnum
		constexpr auto DisplayNameMap = 0x60; // TMap<FName, FText>
	}

	namespace n_UMOUserWidgetOptionsKeybinds { // : UMOUserWidgetOptionsPanel
		constexpr auto vScrollBoxes = 0x2d0; // TArray<UScrollBox*>
		constexpr auto CategoriesStruct = 0x2e0; // FMOKeybindCategoriesStruct
		constexpr auto vDefaultKeybindings = 0x300; // TArray<FMOKeybindSelectStruct>
		constexpr auto vMOWidgetBPEntries = 0x310; // TArray<UMOWidgetBlueprint*>
		constexpr auto cMOKeybindEntryClass = 0x320; // UMOWidgetBlueprint*
		constexpr auto cMOCategoryLineClass = 0x328; // UMOWidgetBlueprint*
		constexpr auto cMOCategoryClass = 0x330; // UMOUserWidget*
		constexpr auto pTabButton_Actions = 0x338; // UMOUserWidgetTabButton*
		constexpr auto pTabButton_Actionbars = 0x340; // UMOUserWidgetTabButton*
		constexpr auto pScrollBox_Actions = 0x348; // UScrollBox*
		constexpr auto pScrollBox_ActionBars = 0x350; // UScrollBox*
	}

	namespace n_UCurveVector { // : UCurveBase
		constexpr auto FloatCurves = 0x30; // FRichCurve [0x3]
	}

	namespace n_UActorChannel { // : UChannel
		constexpr auto Actor = 0x70; // AActor*
		constexpr auto CreateSubObjects = 0x160; // TArray<UObject*>
	}

	namespace n_UWB_MOCarouselSelectValue_2_C { // : UMOCarouselSelectValue
		constexpr auto UberGraphFrame = 0x350; // FPointerToUberGraphFrame
		constexpr auto HorizontalBox_340 = 0x358; // UHorizontalBox*
	}

	namespace n_UMovieSceneCompiledDataManager { // : UObject
		constexpr auto Hierarchies = 0xd8; // TMap<int32_t, FMovieSceneSequenceHierarchy>
		constexpr auto TrackTemplates = 0x128; // TMap<int32_t, FMovieSceneEvaluationTemplate>
		constexpr auto TrackTemplateFields = 0x178; // TMap<int32_t, FMovieSceneEvaluationField>
		constexpr auto EntityComponentFields = 0x1c8; // TMap<int32_t, FMovieSceneEntityComponentField>
	}

	namespace n_UAnimationSharingSetup { // : UObject
		constexpr auto SkeletonSetups = 0x28; // TArray<FPerSkeletonAnimationSharingSetup>
		constexpr auto ScalabilitySettings = 0x38; // FAnimationSharingScalability
	}

	namespace n_ULakeGenerator { // : UWaterBodyGenerator
		constexpr auto LakeMeshComp = 0x28; // UStaticMeshComponent*
		constexpr auto LakeCollisionComp = 0x30; // UBoxComponent*
		constexpr auto LakeCollision = 0x38; // ULakeCollisionComponent*
	}

	namespace n_ATransformGizmoActor { // : AGizmoActor
		constexpr auto TranslateX = 0x220; // UPrimitiveComponent*
		constexpr auto TranslateY = 0x228; // UPrimitiveComponent*
		constexpr auto TranslateZ = 0x230; // UPrimitiveComponent*
		constexpr auto TranslateYZ = 0x238; // UPrimitiveComponent*
		constexpr auto TranslateXZ = 0x240; // UPrimitiveComponent*
		constexpr auto TranslateXY = 0x248; // UPrimitiveComponent*
		constexpr auto RotateX = 0x250; // UPrimitiveComponent*
		constexpr auto RotateY = 0x258; // UPrimitiveComponent*
		constexpr auto RotateZ = 0x260; // UPrimitiveComponent*
		constexpr auto UniformScale = 0x268; // UPrimitiveComponent*
		constexpr auto AxisScaleX = 0x270; // UPrimitiveComponent*
		constexpr auto AxisScaleY = 0x278; // UPrimitiveComponent*
		constexpr auto AxisScaleZ = 0x280; // UPrimitiveComponent*
		constexpr auto PlaneScaleYZ = 0x288; // UPrimitiveComponent*
		constexpr auto PlaneScaleXZ = 0x290; // UPrimitiveComponent*
		constexpr auto PlaneScaleXY = 0x298; // UPrimitiveComponent*
	}

	namespace n_UAnimationDataSourceRegistry { // : UObject
		constexpr auto DataSources = 0x28; // TMap<FName, TWeakObjectPtr<UObject>>
	}

	namespace n_UInterpTrackSound { // : UInterpTrackVectorBase
		constexpr auto Sounds = 0x90; // TArray<FSoundTrackKey>
		constexpr auto bPlayOnReverse = 0xa0; // char : 1
		constexpr auto bContinueSoundOnMatineeEnd = 0xa0; // char : 1
		constexpr auto bSuppressSubtitles = 0xa0; // char : 1
		constexpr auto bTreatAsDialogue = 0xa0; // char : 1
		constexpr auto bAttach = 0xa0; // char : 1
	}

	namespace n_UMaterialExpressionConstant3Vector { // : UMaterialExpression
		constexpr auto Constant = 0x40; // FLinearColor
	}

	namespace n_UVectorFieldAnimated { // : UVectorField
		constexpr auto Texture = 0x48; // UTexture2D*
		constexpr auto ConstructionOp = 0x50; // EVectorFieldConstructionOp
		constexpr auto VolumeSizeX = 0x54; // int32_t
		constexpr auto VolumeSizeY = 0x58; // int32_t
		constexpr auto VolumeSizeZ = 0x5c; // int32_t
		constexpr auto SubImagesX = 0x60; // int32_t
		constexpr auto SubImagesY = 0x64; // int32_t
		constexpr auto FrameCount = 0x68; // int32_t
		constexpr auto FramesPerSecond = 0x6c; // float
		constexpr auto bLoop = 0x70; // char : 1
		constexpr auto NoiseField = 0x78; // UVectorFieldStatic*
		constexpr auto NoiseScale = 0x80; // float
		constexpr auto NoiseMax = 0x84; // float
	}

	namespace n_UTimeSynchronizationSource { // : UObject
		constexpr auto bUseForSynchronization = 0x28; // bool
		constexpr auto FrameOffset = 0x2c; // int32_t
	}

	namespace n_UMOEditableCurrencyWidget { // : UMOUserWidget
		constexpr auto pMOEditableTextBox_Gold = 0x2d8; // UMOEditableTextBox*
		constexpr auto pMOEditableTextBox_Silver = 0x2e0; // UMOEditableTextBox*
		constexpr auto pMOEditableTextBox_Cuprum = 0x2e8; // UMOEditableTextBox*
	}

	namespace n_UCameraShakeSourceComponent { // : USceneComponent
		constexpr auto Attenuation = 0x1f8; // ECameraShakeAttenuation
		constexpr auto InnerAttenuationRadius = 0x1fc; // float
		constexpr auto OuterAttenuationRadius = 0x200; // float
		constexpr auto CameraShake = 0x208; // UCameraShakeBase*
		constexpr auto bAutoStart = 0x210; // bool
	}

	namespace n_UMOTooltipSpell { // : UUserWidget
		constexpr auto pOverlay = 0x260; // UOverlay*
		constexpr auto pDisplaynameText = 0x268; // UTextBlock*
		constexpr auto pDescriptionText = 0x270; // UTextBlock*
		constexpr auto pUseDescriptionText = 0x278; // UTextBlock*
		constexpr auto pMyGridPanel = 0x280; // UGridPanel*
	}

	namespace n_APhysicsConstraintActor { // : ARigidBodyBase
		constexpr auto ConstraintComp = 0x220; // UPhysicsConstraintComponent*
		constexpr auto ConstraintActor1 = 0x228; // AActor*
		constexpr auto ConstraintActor2 = 0x230; // AActor*
		constexpr auto bDisableCollision = 0x238; // char : 1
	}

	namespace n_UMovieSceneEntitySystemLinker { // : UObject
		constexpr auto SystemGraph = 0x238; // FMovieSceneEntitySystemGraph
	}

	namespace n_UParticleModuleAttractorLine { // : UParticleModuleAttractorBase
		constexpr auto EndPoint0 = 0x30; // FVector
		constexpr auto EndPoint1 = 0x3c; // FVector
		constexpr auto Range = 0x48; // FRawDistributionFloat
		constexpr auto Strength = 0x78; // FRawDistributionFloat
	}

	namespace n_UWB_CharacterCreation_Head_PresetEntry_Horizontal_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto LoadButton = 0x268; // UMOButtonLarge*
		constexpr auto SaveButton = 0x270; // UMOButtonLarge*
		constexpr auto SizeBox_1 = 0x278; // USizeBox*
		constexpr auto TitleBlock = 0x280; // UMOTextBlock_Base_Small_White_01*
		constexpr auto OnPresetLoad = 0x288; // FMulticastInlineDelegate
		constexpr auto OnPresetSave = 0x298; // FMulticastInlineDelegate
		constexpr auto Index = 0x2a8; // int32_t
	}

	namespace n_USynthComponentMoto { // : USynthComponent
		constexpr auto MotoSynthPreset = 0x6c0; // UMotoSynthPreset*
		constexpr auto RPM = 0x6c8; // float
	}

	namespace n_UMovieSceneVectorSection { // : UMovieSceneSection
		constexpr auto Curves = 0xe8; // FMovieSceneFloatChannel [0x4]
		constexpr auto ChannelsUsed = 0x368; // int32_t
	}

	namespace n_UMOSimpleIcon { // : UUserWidget
		constexpr auto pIcon = 0x260; // UImage*
	}

	namespace n_UOperatorField { // : UFieldNodeBase
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto RightField = 0xb8; // UFieldNodeBase*
		constexpr auto LeftField = 0xc0; // UFieldNodeBase*
		constexpr auto Operation = 0xc8; // EFieldOperationType
	}

	namespace n_UMagicLeapMeshTrackerComponent { // : USceneComponent
		constexpr auto OnMeshTrackerUpdated = 0x200; // FMulticastInlineDelegate
		constexpr auto ScanWorld = 0x210; // bool
		constexpr auto MeshType = 0x211; // EMagicLeapMeshType
		constexpr auto BoundingVolume = 0x218; // UBoxComponent*
		constexpr auto LevelOfDetail = 0x220; // EMagicLeapMeshLOD
		constexpr auto PerimeterOfGapsToFill = 0x224; // float
		constexpr auto Planarize = 0x228; // bool
		constexpr auto DisconnectedSectionArea = 0x22c; // float
		constexpr auto RequestNormals = 0x230; // bool
		constexpr auto RequestVertexConfidence = 0x231; // bool
		constexpr auto VertexColorMode = 0x232; // EMagicLeapMeshVertexColorMode
		constexpr auto BlockVertexColors = 0x238; // TArray<FColor>
		constexpr auto VertexColorFromConfidenceZero = 0x248; // FLinearColor
		constexpr auto VertexColorFromConfidenceOne = 0x258; // FLinearColor
		constexpr auto RemoveOverlappingTriangles = 0x268; // bool
		constexpr auto MRMesh = 0x270; // UMRMeshComponent*
		constexpr auto BricksPerFrame = 0x278; // int32_t
	}

	namespace n_UArchVisCharMovementComponent { // : UCharacterMovementComponent
		constexpr auto RotationalAcceleration = 0xb00; // FRotator
		constexpr auto RotationalDeceleration = 0xb0c; // FRotator
		constexpr auto MaxRotationalVelocity = 0xb18; // FRotator
		constexpr auto MinPitch = 0xb24; // float
		constexpr auto MaxPitch = 0xb28; // float
		constexpr auto WalkingFriction = 0xb2c; // float
		constexpr auto WalkingSpeed = 0xb30; // float
		constexpr auto WalkingAcceleration = 0xb34; // float
	}

	namespace n_UPropertyValue { // : UObject
		constexpr auto Properties = 0x88; // TArray<TFieldPath<FProperty>>
		constexpr auto PropertyIndices = 0x98; // TArray<int32_t>
		constexpr auto CapturedPropSegments = 0xa8; // TArray<FCapturedPropSegment>
		constexpr auto FullDisplayString = 0xb8; // FString
		constexpr auto PropertySetterName = 0xc8; // FName
		constexpr auto PropertySetterParameterDefaults = 0xd0; // TMap<FString, FString>
		constexpr auto bHasRecordedData = 0x120; // bool
		constexpr auto LeafPropertyClass = 0x128; // UObject*
		constexpr auto ValueBytes = 0x138; // TArray<char>
		constexpr auto PropCategory = 0x148; // EPropertyValueCategory
	}

	namespace n_UBP_MODragDropOperationPetSkill_C { // : UMODragDropOperationPetSkill
		constexpr auto ActionSlotRef = 0x98; // UWB_ItemSlotActionbar_C*
	}

	namespace n_UMaterialExpressionThinTranslucentMaterialOutput { // : UMaterialExpressionCustomOutput
		constexpr auto TransmittanceColor = 0x40; // FExpressionInput
	}

	namespace n_ULandscapeHeightfieldCollisionComponent { // : UPrimitiveComponent
		constexpr auto ComponentLayerInfos = 0x440; // TArray<ULandscapeLayerInfoObject*>
		constexpr auto SectionBaseX = 0x450; // int32_t
		constexpr auto SectionBaseY = 0x454; // int32_t
		constexpr auto CollisionSizeQuads = 0x458; // int32_t
		constexpr auto CollisionScale = 0x45c; // float
		constexpr auto SimpleCollisionSizeQuads = 0x460; // int32_t
		constexpr auto CollisionQuadFlags = 0x468; // TArray<char>
		constexpr auto HeightfieldGuid = 0x478; // FGuid
		constexpr auto CachedLocalBox = 0x488; // FBox
		constexpr auto RenderComponent = 0x4a4; // LazyObjectProperty
		constexpr auto CookedPhysicalMaterials = 0x4d0; // TArray<UPhysicalMaterial*>
	}

	namespace n_UEditableTextBox { // : UWidget
		constexpr auto Text = 0x108; // FText
		constexpr auto TextDelegate = 0x120; // FDelegate
		constexpr auto WidgetStyle = 0x130; // FEditableTextBoxStyle
		constexpr auto Style = 0x928; // USlateWidgetStyleAsset*
		constexpr auto HintText = 0x930; // FText
		constexpr auto HintTextDelegate = 0x948; // FDelegate
		constexpr auto Font = 0x958; // FSlateFontInfo
		constexpr auto ForegroundColor = 0x9b0; // FLinearColor
		constexpr auto BackgroundColor = 0x9c0; // FLinearColor
		constexpr auto ReadOnlyForegroundColor = 0x9d0; // FLinearColor
		constexpr auto IsReadOnly = 0x9e0; // bool
		constexpr auto IsPassword = 0x9e1; // bool
		constexpr auto MinimumDesiredWidth = 0x9e4; // float
		constexpr auto Padding = 0x9e8; // FMargin
		constexpr auto IsCaretMovedWhenGainFocus = 0x9f8; // bool
		constexpr auto SelectAllTextWhenFocused = 0x9f9; // bool
		constexpr auto RevertTextOnEscape = 0x9fa; // bool
		constexpr auto ClearKeyboardFocusOnCommit = 0x9fb; // bool
		constexpr auto SelectAllTextOnCommit = 0x9fc; // bool
		constexpr auto AllowContextMenu = 0x9fd; // bool
		constexpr auto KeyboardType = 0x9fe; // EVirtualKeyboardType
		constexpr auto VirtualKeyboardOptions = 0x9ff; // FVirtualKeyboardOptions
		constexpr auto VirtualKeyboardTrigger = 0xa00; // EVirtualKeyboardTrigger
		constexpr auto VirtualKeyboardDismissAction = 0xa01; // EVirtualKeyboardDismissAction
		constexpr auto Justification = 0xa02; // ETextJustify
		constexpr auto ShapedTextOptions = 0xa03; // FShapedTextOptions
		constexpr auto OnTextChanged = 0xa08; // FMulticastInlineDelegate
		constexpr auto OnTextCommitted = 0xa18; // FMulticastInlineDelegate
	}

	namespace n_UMOItemSlotPaperdoll { // : UMOItemSlot
		constexpr auto sEquipSlot = 0x2b0; // FString
	}

	namespace n_UPhysicsThrusterComponent { // : USceneComponent
		constexpr auto ThrustStrength = 0x1f8; // float
	}

	namespace n_UNiagaraDataInterfaceVector4Curve { // : UNiagaraDataInterfaceCurveBase
		constexpr auto XCurve = 0x70; // FRichCurve
		constexpr auto YCurve = 0xf0; // FRichCurve
		constexpr auto ZCurve = 0x170; // FRichCurve
		constexpr auto WCurve = 0x1f0; // FRichCurve
	}

	namespace n_UBTService_BlueprintBase { // : UBTService
		constexpr auto AIOwner = 0x70; // AAIController*
		constexpr auto ActorOwner = 0x78; // AActor*
		constexpr auto bShowPropertyDetails = 0x90; // char : 1
		constexpr auto bShowEventDetails = 0x90; // char : 1
	}

	namespace n_UMOPetListEntryTamed { // : UMOPetListEntry
		constexpr auto pWB_ProgressBar_Experience = 0x2f0; // UMOUserWidgetProgressBar*
		constexpr auto pTextBlockLevelXP = 0x2f8; // UTextBlock*
		constexpr auto pItemSlotPlaceItem_Feed = 0x300; // UMOItemSlotPlaceItem*
	}

	namespace n_UMOPreviewModePlacementHouse { // : UMOPreviewModePlacement
		constexpr auto UpgradeContentIDs = 0xd0; // TArray<FString>
		constexpr auto PreviewBoxComponents = 0xe0; // TArray<UBoxComponent*>
		constexpr auto ActorTypeIgnoreList = 0x128; // TArray<TSoftClassPtr<UObject>>
		constexpr auto MinDistanceFromTypeArray = 0x138; // TArray<TSoftClassPtr<UObject>>
	}

	namespace n_USynthSamplePlayer { // : USynthComponent
		constexpr auto SoundWave = 0x6c0; // USoundWave*
		constexpr auto OnSampleLoaded = 0x6c8; // FMulticastInlineDelegate
		constexpr auto OnSamplePlaybackProgress = 0x6d8; // FMulticastInlineDelegate
	}

	namespace n_UMockDataMeshTrackerComponent { // : USceneComponent
		constexpr auto OnMeshTrackerUpdated = 0x1f8; // FMulticastInlineDelegate
		constexpr auto ScanWorld = 0x208; // bool
		constexpr auto RequestNormals = 0x209; // bool
		constexpr auto RequestVertexConfidence = 0x20a; // bool
		constexpr auto VertexColorMode = 0x20b; // EMeshTrackerVertexColorMode
		constexpr auto BlockVertexColors = 0x210; // TArray<FColor>
		constexpr auto VertexColorFromConfidenceZero = 0x220; // FLinearColor
		constexpr auto VertexColorFromConfidenceOne = 0x230; // FLinearColor
		constexpr auto UpdateInterval = 0x240; // float
		constexpr auto MRMesh = 0x248; // UMRMeshComponent*
	}

	namespace n_ADefaultPawn { // : APawn
		constexpr auto BaseTurnRate = 0x280; // float
		constexpr auto BaseLookUpRate = 0x284; // float
		constexpr auto MovementComponent = 0x288; // UPawnMovementComponent*
		constexpr auto CollisionComponent = 0x290; // USphereComponent*
		constexpr auto MeshComponent = 0x298; // UStaticMeshComponent*
		constexpr auto bAddDefaultMovementBindings = 0x2a0; // char : 1
	}

	namespace n_UMaterialExpressionLandscapeLayerSwitch { // : UMaterialExpression
		constexpr auto LayerUsed = 0x40; // FExpressionInput
		constexpr auto LayerNotUsed = 0x54; // FExpressionInput
		constexpr auto ParameterName = 0x68; // FName
		constexpr auto PreviewUsed = 0x70; // char : 1
		constexpr auto ExpressionGUID = 0x74; // FGuid
	}

	namespace n_UPointLightComponent { // : ULocalLightComponent
		constexpr auto bUseInverseSquaredFalloff = 0x340; // char : 1
		constexpr auto LightFalloffExponent = 0x344; // float
		constexpr auto SourceRadius = 0x348; // float
		constexpr auto SoftSourceRadius = 0x34c; // float
		constexpr auto SourceLength = 0x350; // float
	}

	namespace n_UWB_CategoryLine_C { // : UMOWidgetBlueprint
		constexpr auto Image_Line_Keybinds_2 = 0x260; // UImage*
	}

	namespace n_UListView { // : UListViewBase
		constexpr auto Orientation = 0x2d8; // EOrientation
		constexpr auto SelectionMode = 0x2d9; // ESelectionMode
		constexpr auto ConsumeMouseWheel = 0x2da; // EConsumeMouseWheel
		constexpr auto bClearSelectionOnClick = 0x2db; // bool
		constexpr auto bIsFocusable = 0x2dc; // bool
		constexpr auto EntrySpacing = 0x2e0; // float
		constexpr auto bReturnFocusToSelection = 0x2e4; // bool
		constexpr auto ListItems = 0x2e8; // TArray<UObject*>
		constexpr auto BP_OnEntryInitialized = 0x308; // FMulticastInlineDelegate
		constexpr auto BP_OnItemClicked = 0x318; // FMulticastInlineDelegate
		constexpr auto BP_OnItemDoubleClicked = 0x328; // FMulticastInlineDelegate
		constexpr auto BP_OnItemIsHoveredChanged = 0x338; // FMulticastInlineDelegate
		constexpr auto BP_OnItemSelectionChanged = 0x348; // FMulticastInlineDelegate
		constexpr auto BP_OnItemScrolledIntoView = 0x358; // FMulticastInlineDelegate
	}

	namespace n_ABP_AiEffectSpit_C { // : AMOAiEffectActor
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
		constexpr auto vHitLocation = 0x278; // FVector
	}

	namespace n_UMODragDropOperationItem { // : UMODragDropOperation
		constexpr auto pItemSlot = 0x88; // UMOItemSlot*
		constexpr auto sItemGuid = 0x90; // FString
		constexpr auto EDragItemFrom = 0xa0; // EDragItemFrom
	}

	namespace n_UEnvQueryTest_Distance { // : UEnvQueryTest
		constexpr auto TestMode = 0x1f8; // EEnvTestDistance
		constexpr auto DistanceTo = 0x200; // UEnvQueryContext*
	}

	namespace n_UVectorFieldStatic { // : UVectorField
		constexpr auto SizeX = 0x48; // int32_t
		constexpr auto SizeY = 0x4c; // int32_t
		constexpr auto SizeZ = 0x50; // int32_t
		constexpr auto bAllowCPUAccess = 0x54; // bool
	}

	namespace n_UBTTask_PushPawnAction { // : UBTTask_PawnActionBase
		constexpr auto Action = 0x70; // UPawnAction*
	}

	namespace n_UBehaviorTreeManager { // : UObject
		constexpr auto MaxDebuggerSteps = 0x28; // int32_t
		constexpr auto LoadedTemplates = 0x30; // TArray<FBehaviorTreeTemplateInfo>
		constexpr auto ActiveComponents = 0x40; // TArray<UBehaviorTreeComponent*>
	}

	namespace n_UParticleModuleVelocityInheritParent { // : UParticleModuleVelocityBase
		constexpr auto Scale = 0x38; // FRawDistributionVector
	}

	namespace n_UInterpTrackMoveAxis { // : UInterpTrackFloatBase
		constexpr auto MoveAxis = 0x90; // EInterpMoveAxis
		constexpr auto LookupTrack = 0x98; // FInterpLookupTrack
	}

	namespace n_UParticleModuleRequired { // : UParticleModule
		constexpr auto Material = 0x30; // UMaterialInterface*
		constexpr auto MinFacingCameraBlendDistance = 0x38; // float
		constexpr auto MaxFacingCameraBlendDistance = 0x3c; // float
		constexpr auto EmitterOrigin = 0x40; // FVector
		constexpr auto EmitterRotation = 0x4c; // FRotator
		constexpr auto ScreenAlignment = 0x58; // EParticleScreenAlignment
		constexpr auto bUseLocalSpace = 0x59; // char : 1
		constexpr auto bKillOnDeactivate = 0x59; // char : 1
		constexpr auto bKillOnCompleted = 0x59; // char : 1
		constexpr auto SortMode = 0x5a; // EParticleSortMode
		constexpr auto bUseLegacyEmitterTime = 0x5b; // char : 1
		constexpr auto bRemoveHMDRoll = 0x5b; // char : 1
		constexpr auto bEmitterDurationUseRange = 0x5b; // char : 1
		constexpr auto EmitterDuration = 0x5c; // float
		constexpr auto SpawnRate = 0x60; // FRawDistributionFloat
		constexpr auto BurstList = 0x90; // TArray<FParticleBurst>
		constexpr auto EmitterDelay = 0xa0; // float
		constexpr auto EmitterDelayLow = 0xa4; // float
		constexpr auto bDelayFirstLoopOnly = 0xa8; // char : 1
		constexpr auto InterpolationMethod = 0xa9; // EParticleSubUVInterpMethod
		constexpr auto bScaleUV = 0xaa; // char : 1
		constexpr auto bEmitterDelayUseRange = 0xaa; // char : 1
		constexpr auto ParticleBurstMethod = 0xab; // EParticleBurstMethod
		constexpr auto bOverrideSystemMacroUV = 0xac; // char : 1
		constexpr auto bUseMaxDrawCount = 0xac; // char : 1
		constexpr auto OpacitySourceMode = 0xad; // EOpacitySourceMode
		constexpr auto EmitterNormalsMode = 0xae; // EEmitterNormalsMode
		constexpr auto bOrbitModuleAffectsVelocityAlignment = 0xaf; // char : 1
		constexpr auto SubImages_Horizontal = 0xb0; // int32_t
		constexpr auto SubImages_Vertical = 0xb4; // int32_t
		constexpr auto RandomImageTime = 0xb8; // float
		constexpr auto RandomImageChanges = 0xbc; // int32_t
		constexpr auto MacroUVPosition = 0xc0; // FVector
		constexpr auto MacroUVRadius = 0xcc; // float
		constexpr auto UVFlippingMode = 0xd0; // EParticleUVFlipMode
		constexpr auto BoundingMode = 0xd1; // ESubUVBoundingVertexCount
		constexpr auto bDurationRecalcEachLoop = 0xd2; // char : 1
		constexpr auto NormalsSphereCenter = 0xd4; // FVector
		constexpr auto AlphaThreshold = 0xe0; // float
		constexpr auto EmitterLoops = 0xe4; // int32_t
		constexpr auto CutoutTexture = 0xe8; // UTexture2D*
		constexpr auto MaxDrawCount = 0xf0; // int32_t
		constexpr auto EmitterDurationLow = 0xf4; // float
		constexpr auto NormalsCylinderDirection = 0xf8; // FVector
		constexpr auto NamedMaterialOverrides = 0x108; // TArray<FName>
	}

	namespace n_UNiagaraRibbonRendererProperties { // : UNiagaraRendererProperties
		constexpr auto Material = 0x80; // UMaterialInterface*
		constexpr auto MaterialUserParamBinding = 0x88; // FNiagaraUserParameterBinding
		constexpr auto FacingMode = 0xa8; // ENiagaraRibbonFacingMode
		constexpr auto UV0Settings = 0xac; // FNiagaraRibbonUVSettings
		constexpr auto UV1Settings = 0xd0; // FNiagaraRibbonUVSettings
		constexpr auto DrawDirection = 0xf4; // ENiagaraRibbonDrawDirection
		constexpr auto CurveTension = 0xf8; // float
		constexpr auto TessellationMode = 0xfc; // ENiagaraRibbonTessellationMode
		constexpr auto TessellationFactor = 0x100; // int32_t
		constexpr auto bUseConstantFactor = 0x104; // bool
		constexpr auto TessellationAngle = 0x108; // float
		constexpr auto bScreenSpaceTessellation = 0x10c; // bool
		constexpr auto PositionBinding = 0x110; // FNiagaraVariableAttributeBinding
		constexpr auto ColorBinding = 0x168; // FNiagaraVariableAttributeBinding
		constexpr auto VelocityBinding = 0x1c0; // FNiagaraVariableAttributeBinding
		constexpr auto NormalizedAgeBinding = 0x218; // FNiagaraVariableAttributeBinding
		constexpr auto RibbonTwistBinding = 0x270; // FNiagaraVariableAttributeBinding
		constexpr auto RibbonWidthBinding = 0x2c8; // FNiagaraVariableAttributeBinding
		constexpr auto RibbonFacingBinding = 0x320; // FNiagaraVariableAttributeBinding
		constexpr auto RibbonIdBinding = 0x378; // FNiagaraVariableAttributeBinding
		constexpr auto RibbonLinkOrderBinding = 0x3d0; // FNiagaraVariableAttributeBinding
		constexpr auto MaterialRandomBinding = 0x428; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterialBinding = 0x480; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial1Binding = 0x4d8; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial2Binding = 0x530; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial3Binding = 0x588; // FNiagaraVariableAttributeBinding
		constexpr auto U0OverrideBinding = 0x5e0; // FNiagaraVariableAttributeBinding
		constexpr auto V0RangeOverrideBinding = 0x638; // FNiagaraVariableAttributeBinding
		constexpr auto U1OverrideBinding = 0x690; // FNiagaraVariableAttributeBinding
		constexpr auto V1RangeOverrideBinding = 0x6e8; // FNiagaraVariableAttributeBinding
	}

	namespace n_UPhysicsCollisionHandler { // : UObject
		constexpr auto ImpactThreshold = 0x28; // float
		constexpr auto ImpactReFireDelay = 0x2c; // float
		constexpr auto DefaultImpactSound = 0x30; // USoundBase*
		constexpr auto LastImpactSoundTime = 0x38; // float
	}

	namespace n_USceneCaptureComponent2D { // : USceneCaptureComponent
		constexpr auto ProjectionType = 0x2b0; // ECameraProjectionMode
		constexpr auto FOVAngle = 0x2b4; // float
		constexpr auto OrthoWidth = 0x2b8; // float
		constexpr auto TextureTarget = 0x2c0; // UTextureRenderTarget2D*
		constexpr auto CompositeMode = 0x2c8; // ESceneCaptureCompositeMode
		constexpr auto PostProcessSettings = 0x2d0; // FPostProcessSettings
		constexpr auto PostProcessBlendWeight = 0x820; // float
		constexpr auto bOverride_CustomNearClippingPlane = 0x824; // char : 1
		constexpr auto CustomNearClippingPlane = 0x828; // float
		constexpr auto bUseCustomProjectionMatrix = 0x82c; // bool
		constexpr auto CustomProjectionMatrix = 0x830; // FMatrix
		constexpr auto bEnableClipPlane = 0x870; // bool
		constexpr auto ClipPlaneBase = 0x874; // FVector
		constexpr auto ClipPlaneNormal = 0x880; // FVector
		constexpr auto bCameraCutThisFrame = 0x88c; // char : 1
		constexpr auto bConsiderUnrenderedOpaquePixelAsFullyTranslucent = 0x88c; // char : 1
		constexpr auto bDisableFlipCopyGLES = 0x890; // bool
	}

	namespace n_UEnvQueryOption { // : UObject
		constexpr auto Generator = 0x28; // UEnvQueryGenerator*
		constexpr auto Tests = 0x30; // TArray<UEnvQueryTest*>
	}

	namespace n_UIntervalGizmo { // : UInteractiveGizmo
		constexpr auto StateTarget = 0x38; // UGizmoTransformChangeStateTarget*
		constexpr auto TransformProxy = 0x50; // UTransformProxy*
		constexpr auto ActiveComponents = 0x58; // TArray<UPrimitiveComponent*>
		constexpr auto ActiveGizmos = 0x68; // TArray<UInteractiveGizmo*>
		constexpr auto AxisYSource = 0x90; // UGizmoComponentAxisSource*
		constexpr auto AxisZSource = 0x98; // UGizmoComponentAxisSource*
	}

	namespace n_UMOExtraction { // : UMOUserWidget
		constexpr auto pMOButton_Extraction = 0x2c8; // UMOButtonMedium*
		constexpr auto pTextBlock_Sign = 0x2d0; // UTextBlock*
		constexpr auto pItemSlotPlaceItem_Resource = 0x2d8; // UMOItemSlotPlaceItem*
		constexpr auto pItemSlotPlaceItem_Catalyst = 0x2e0; // UMOItemSlotPlaceItem*
	}

	namespace n_UMOWorldTimeSubsystem { // : UEngineSubsystem
		constexpr auto fDebugTimeOfDaySpeed = 0x50; // float
		constexpr auto fDebugTimeOfDayOffset = 0x54; // float
		constexpr auto bIgnoreTimeOfDayUpdates = 0x58; // bool
		constexpr auto bHasReceivedInitialDayTimeUpdateFromServer = 0x59; // bool
	}

	namespace n_UHierarchicalInstancedStaticMeshComponent { // : UInstancedStaticMeshComponent
		constexpr auto SortedInstances = 0x588; // TArray<int32_t>
		constexpr auto NumBuiltInstances = 0x598; // int32_t
		constexpr auto BuiltInstanceBounds = 0x5a0; // FBox
		constexpr auto UnbuiltInstanceBounds = 0x5bc; // FBox
		constexpr auto UnbuiltInstanceBoundsList = 0x5d8; // TArray<FBox>
		constexpr auto bEnableDensityScaling = 0x5e8; // char : 1
		constexpr auto OcclusionLayerNumNodes = 0x5f0; // int32_t
		constexpr auto CacheMeshExtendedBounds = 0x5f4; // FBoxSphereBounds
		constexpr auto bDisableCollision = 0x610; // bool
		constexpr auto InstanceCountToRender = 0x614; // int32_t
	}

	namespace n_UMaterialExpressionCurveAtlasRowParameter { // : UMaterialExpressionScalarParameter
		constexpr auto Curve = 0x60; // UCurveLinearColor*
		constexpr auto Atlas = 0x68; // UCurveLinearColorAtlas*
		constexpr auto InputTime = 0x70; // FExpressionInput
	}

	namespace n_UMaterialExpressionLogarithm10 { // : UMaterialExpression
		constexpr auto X = 0x40; // FExpressionInput
	}

	namespace n_ULiveLinkSubjectSettings { // : UObject
		constexpr auto PreProcessors = 0x28; // TArray<ULiveLinkFramePreProcessor*>
		constexpr auto InterpolationProcessor = 0x38; // ULiveLinkFrameInterpolationProcessor*
		constexpr auto Translators = 0x40; // TArray<ULiveLinkFrameTranslator*>
		constexpr auto Role = 0x50; // ULiveLinkRole*
		constexpr auto FrameRate = 0x58; // FFrameRate
		constexpr auto bRebroadcastSubject = 0x60; // bool
	}

	namespace n_UGizmoLocalVec2ParameterSource { // : UGizmoBaseVec2ParameterSource
		constexpr auto Value = 0x48; // FVector2D
		constexpr auto LastChange = 0x50; // FGizmoVec2ParameterChange
	}

	namespace n_UMOLoginScreen { // : UMOUserWidget
		constexpr auto sCopyrightInformation = 0x2c8; // FString
		constexpr auto sVersionNumber = 0x2d8; // FString
		constexpr auto sGameNewsLink = 0x2e8; // FString
		constexpr auto pMOButton_Options = 0x2f8; // UMOButtonLarge*
		constexpr auto pMOButtonLogin = 0x300; // UMOButtonLarge*
		constexpr auto pMessageBox = 0x308; // UMOMessageBox*
		constexpr auto pLoginMessageBox = 0x310; // UMOLoginMessageBox*
		constexpr auto pTextBlockGameNewsHeader = 0x318; // UTextBlock*
		constexpr auto pTextBlockGameNewsText = 0x320; // UTextBlock*
		constexpr auto pTextBlockGameNewsLink = 0x328; // UTextBlock*
		constexpr auto pMOBorderHeader = 0x330; // UMOBorderHeader*
		constexpr auto pButtonGameNewsLink = 0x338; // UMOButton*
		constexpr auto pCopyrightNotice = 0x340; // UTextBlock*
		constexpr auto pVersionNumber = 0x348; // UTextBlock*
		constexpr auto pMOEULA = 0x350; // UMOEULA*
		constexpr auto pBlur_EULA = 0x358; // UBackgroundBlur*
	}

	namespace n_UGerstnerWaterWaveGeneratorSpectrum { // : UGerstnerWaterWaveGeneratorBase
		constexpr auto SpectrumType = 0x28; // EWaveSpectrumType
		constexpr auto Octaves = 0x30; // TArray<FGerstnerWaveOctave>
	}

	namespace n_UComboBox { // : UWidget
		constexpr auto Items = 0x108; // TArray<UObject*>
		constexpr auto OnGenerateWidgetEvent = 0x118; // FDelegate
		constexpr auto bIsFocusable = 0x128; // bool
	}

	namespace n_UDatasmithVREDSceneImportData { // : UDatasmithFBXSceneImportData
		constexpr auto bMergeNodes = 0x48; // bool
		constexpr auto bOptimizeDuplicatedNodes = 0x49; // bool
		constexpr auto bImportMats = 0x4a; // bool
		constexpr auto MatsPath = 0x50; // FString
		constexpr auto bImportVar = 0x60; // bool
		constexpr auto bCleanVar = 0x61; // bool
		constexpr auto VarPath = 0x68; // FString
		constexpr auto bImportLightInfo = 0x78; // bool
		constexpr auto LightInfoPath = 0x80; // FString
		constexpr auto bImportClipInfo = 0x90; // bool
		constexpr auto ClipInfoPath = 0x98; // FString
	}

	namespace n_UMaterialExpressionNormalize { // : UMaterialExpression
		constexpr auto VectorInput = 0x40; // FExpressionInput
	}

	namespace n_UMediaTimeStampInfo { // : UObject
		constexpr auto Time = 0x28; // FTimespan
		constexpr auto SequenceIndex = 0x30; // int64_t
	}

	namespace n_ABodyFireEffect_C { // : AMOEffectActorBase
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto DefaultSceneRoot = 0x228; // USceneComponent*
	}

	namespace n_UMOCharacterCreationNew { // : UMOUserWidget
		constexpr auto pFaceCustomizationWidgetInstance = 0x2c8; // UMOCharCreationFaceCustomization*
		constexpr auto cFaceCustomizationWidget = 0x2d0; // UMOCharCreationFaceCustomization*
		constexpr auto charAppearance = 0x2d8; // FMOCharacterPlayerAppearance
		constexpr auto pMOGameModeMenu = 0x5a0; // AMOGameModeMenu*
		constexpr auto pPanelTabButton_Species = 0x5a8; // UMOUserWidgetTabButtonNew*
		constexpr auto pPanelTabButton_Bloodline = 0x5b0; // UMOUserWidgetTabButtonNew*
		constexpr auto pPanelTabButton_Attributes = 0x5b8; // UMOUserWidgetTabButtonNew*
		constexpr auto pPanelTabButton_Appearance = 0x5c0; // UMOUserWidgetTabButtonNew*
		constexpr auto pPanelTabButton_Finalize = 0x5c8; // UMOUserWidgetTabButtonNew*
		constexpr auto pTabManager = 0x5d0; // UMOUserWidgetTabManager*
		constexpr auto vPanels = 0x5d8; // TArray<UMOCharCreationPanel*>
		constexpr auto iCurrentPanel = 0x5e8; // int32_t
		constexpr auto pPanel_Info = 0x5f0; // UMOCharCreationInfoPanel*
		constexpr auto pPanel_Species = 0x5f8; // UMOCharCreationSpeciesPanel*
		constexpr auto pPanel_Bloodline = 0x600; // UMOCharCreationBloodlinePanel*
		constexpr auto pPanel_Attributes = 0x608; // UMOCharCreationAttributesPanel*
		constexpr auto pPanel_Appearance = 0x610; // UMOCharCreationAppearancePanel*
		constexpr auto pPanel_Finalize = 0x618; // UMOCharCreationFinalizePanel*
		constexpr auto pMOButton_Next = 0x620; // UMOButtonLarge*
		constexpr auto pMOButton_Back = 0x628; // UMOButtonLarge*
		constexpr auto pPanelText = 0x630; // UMOText*
		constexpr auto m_TimerHandle_UpdateCharacterAppearance = 0x638; // FTimerHandle
		constexpr auto bCanUpdateCharacter = 0x640; // bool
	}

	namespace n_UInterpTrackFloatAnimBPParam { // : UInterpTrackFloatBase
		constexpr auto AnimBlueprintClass = 0x90; // UObject*
		constexpr auto AnimClass = 0x98; // UAnimInstance*
		constexpr auto ParamName = 0xa0; // FName
	}

	namespace n_UParticleModuleTypeDataAnimTrail { // : UParticleModuleTypeDataBase
		constexpr auto bDeadTrailsOnDeactivate = 0x30; // char : 1
		constexpr auto bEnablePreviousTangentRecalculation = 0x30; // char : 1
		constexpr auto bTangentRecalculationEveryFrame = 0x30; // char : 1
		constexpr auto TilingDistance = 0x34; // float
		constexpr auto DistanceTessellationStepSize = 0x38; // float
		constexpr auto TangentTessellationStepSize = 0x3c; // float
		constexpr auto WidthTessellationStepSize = 0x40; // float
	}

	namespace n_UParticleModuleLocation { // : UParticleModuleLocationBase
		constexpr auto StartLocation = 0x30; // FRawDistributionVector
		constexpr auto DistributeOverNPoints = 0x78; // float
		constexpr auto DistributeThreshold = 0x7c; // float
	}

	namespace n_USkinnedMeshComponent { // : UMeshComponent
		constexpr auto SkeletalMesh = 0x470; // USkeletalMesh*
		constexpr auto MasterPoseComponent = 0x478; // TWeakObjectPtr<USkinnedMeshComponent>
		constexpr auto SkinCacheUsage = 0x480; // TArray<ESkinCacheUsage>
		constexpr auto VertexOffsetUsage = 0x490; // TArray<FVertexOffsetUsage>
		constexpr auto PhysicsAssetOverride = 0x598; // UPhysicsAsset*
		constexpr auto ForcedLodModel = 0x5a0; // int32_t
		constexpr auto MinLodModel = 0x5a4; // int32_t
		constexpr auto StreamingDistanceMultiplier = 0x5b0; // float
		constexpr auto LODInfo = 0x5c0; // TArray<FSkelMeshComponentLODInfo>
		constexpr auto VisibilityBasedAnimTickOption = 0x5f4; // EVisibilityBasedAnimTickOption
		constexpr auto bOverrideMinLod = 0x5f6; // char : 1
		constexpr auto bUseBoundsFromMasterPoseComponent = 0x5f6; // char : 1
		constexpr auto bForceWireframe = 0x5f6; // char : 1
		constexpr auto bDisplayBones = 0x5f6; // char : 1
		constexpr auto bDisableMorphTarget = 0x5f6; // char : 1
		constexpr auto bHideSkin = 0x5f7; // char : 1
		constexpr auto bPerBoneMotionBlur = 0x5f7; // char : 1
		constexpr auto bComponentUseFixedSkelBounds = 0x5f7; // char : 1
		constexpr auto bConsiderAllBodiesForBounds = 0x5f7; // char : 1
		constexpr auto bSyncAttachParentLOD = 0x5f7; // char : 1
		constexpr auto bCanHighlightSelectedSections = 0x5f7; // char : 1
		constexpr auto bRecentlyRendered = 0x5f7; // char : 1
		constexpr auto bCastCapsuleDirectShadow = 0x5f7; // char : 1
		constexpr auto bCastCapsuleIndirectShadow = 0x5f8; // char : 1
		constexpr auto bCPUSkinning = 0x5f8; // char : 1
		constexpr auto bEnableUpdateRateOptimizations = 0x5f8; // char : 1
		constexpr auto bDisplayDebugUpdateRateOptimizations = 0x5f8; // char : 1
		constexpr auto bRenderStatic = 0x5f8; // char : 1
		constexpr auto bIgnoreMasterPoseComponentLOD = 0x5f8; // char : 1
		constexpr auto bCachedLocalBoundsUpToDate = 0x5f9; // char : 1
		constexpr auto bForceMeshObjectUpdate = 0x5f9; // char : 1
		constexpr auto CapsuleIndirectShadowMinVisibility = 0x5fc; // float
		constexpr auto CachedWorldSpaceBounds = 0x610; // FBoxSphereBounds
		constexpr auto CachedWorldToLocalTransform = 0x630; // FMatrix
	}

	namespace n_UChaosClothSharedSimConfig { // : UClothSharedConfigCommon
		constexpr auto IterationCount = 0x28; // int32_t
		constexpr auto SubdivisionCount = 0x2c; // int32_t
		constexpr auto SelfCollisionThickness = 0x30; // float
		constexpr auto CollisionThickness = 0x34; // float
		constexpr auto bUseDampingOverride = 0x38; // bool
		constexpr auto Damping = 0x3c; // float
		constexpr auto bUseGravityOverride = 0x40; // bool
		constexpr auto GravityScale = 0x44; // float
		constexpr auto Gravity = 0x48; // FVector
		constexpr auto bUseLocalSpaceSimulation = 0x54; // bool
		constexpr auto bUseXPBDConstraints = 0x55; // bool
	}

	namespace n_UObjectReferencer { // : UObject
		constexpr auto ReferencedObjects = 0x28; // TArray<UObject*>
	}

	namespace n_AMOStaticMeshActorUse { // : AMOStaticMeshActor
		constexpr auto pSoundCueUse = 0x258; // USoundCue*
		constexpr auto sUseText = 0x260; // FText
		constexpr auto fUseTimer = 0x278; // float
		constexpr auto fAtlasUseDistance = 0x27c; // float
		constexpr auto eUseType = 0x280; // EObjectUse
		constexpr auto pStaticMeshComp = 0x288; // UStaticMeshComponent*
		constexpr auto sStringIdentifier = 0x290; // FString
		constexpr auto vLearnSkillsOnOpen = 0x2a0; // TArray<FString>
	}

	namespace n_ULuminRuntimeSettings { // : UObject
		constexpr auto PackageName = 0x28; // FString
		constexpr auto ApplicationDisplayName = 0x38; // FString
		constexpr auto FrameTimingHint = 0x48; // ELuminFrameTimingHint
		constexpr auto bProtectedContent = 0x49; // bool
		constexpr auto bManualCallToAppReady = 0x4a; // bool
		constexpr auto bUseMobileRendering = 0x4b; // bool
		constexpr auto bUseVulkan = 0x4c; // bool
		constexpr auto Certificate = 0x50; // FFilePath
		constexpr auto IconModelPath = 0x60; // FDirectoryPath
		constexpr auto IconPortalPath = 0x70; // FDirectoryPath
		constexpr auto LocalizedIconInfos = 0x80; // FLocalizedIconInfos
		constexpr auto VersionCode = 0x90; // int32_t
		constexpr auto MinimumAPILevel = 0x94; // int32_t
		constexpr auto AppPrivileges = 0x98; // TArray<ELuminPrivilege>
		constexpr auto ExtraComponentSubElements = 0xa8; // TArray<FLuminComponentSubElement>
		constexpr auto ExtraComponentElements = 0xb8; // TArray<FLuminComponentElement>
		constexpr auto SpatializationPlugin = 0xc8; // FString
		constexpr auto ReverbPlugin = 0xd8; // FString
		constexpr auto OcclusionPlugin = 0xe8; // FString
		constexpr auto SoundCueCookQualityIndex = 0xf8; // int32_t
		constexpr auto bRemoveDebugInfo = 0xfc; // bool
		constexpr auto VulkanValidationLayerLibs = 0x100; // FDirectoryPath
		constexpr auto bFrameVignette = 0x110; // bool
		constexpr auto LocalizedAppNames = 0x118; // TArray<FLocalizedAppName>
	}

	namespace n_ARectLight { // : ALight
		constexpr auto RectLightComponent = 0x230; // URectLightComponent*
	}

	namespace n_UMOInventoryButtonItem { // : UMOUserWidget
		constexpr auto pButtonItem = 0x2c8; // UMOButtonItem*
	}

	namespace n_UMOItemSlotActionbar { // : UMOItemSlot
		constexpr auto iActionSlotID = 0x2b0; // int32_t
		constexpr auto iActionBarID = 0x2b4; // int32_t
		constexpr auto sItemGuid = 0x2b8; // FString
		constexpr auto pActionBarParent = 0x2c8; // UMOActionBar*
		constexpr auto pKeybindingText = 0x2d0; // UTextBlock*
		constexpr auto pButtonSkill = 0x2d8; // UMOButtonSkill*
		constexpr auto pButtonSpell = 0x2e0; // UMOButtonSpell*
		constexpr auto pButtonPetSkill = 0x2e8; // UMOButtonPetSkill*
	}

	namespace n_UGameplayTaskResource { // : UObject
		constexpr auto ManualResourceID = 0x28; // int32_t
		constexpr auto AutoResourceID = 0x2c; // int8_t
		constexpr auto bManuallySetID = 0x30; // char : 1
	}

	namespace n_UPlayerInput { // : UObject
		constexpr auto DebugExecBindings = 0x120; // TArray<FKeyBind>
		constexpr auto InvertedAxis = 0x160; // TArray<FName>
	}

	namespace n_UMaterialExpressionLandscapeLayerBlend { // : UMaterialExpression
		constexpr auto Layers = 0x40; // TArray<FLayerBlendInput>
		constexpr auto ExpressionGUID = 0x50; // FGuid
	}

	namespace n_UAISystemBase { // : UObject
		constexpr auto AISystemClassName = 0x28; // FSoftClassPath
		constexpr auto AISystemModuleName = 0x40; // FName
		constexpr auto bInstantiateAISystemOnClient = 0x50; // bool
	}

	namespace n_AMagicLeapARPinInfoActorBase { // : AActor
		constexpr auto PinId = 0x220; // FGuid
		constexpr auto bVisibilityOverride = 0x230; // bool
	}

	namespace n_ABP_AiEffectElemental_Heal_C { // : ABP_AiEffectElemental_Attack_C
		constexpr auto UberGraphFrame = 0x278; // FPointerToUberGraphFrame
	}

	namespace n_UWB_ButtonSkillWidget_C { // : UMOButtonSkillWidget
		constexpr auto UberGraphFrame = 0x268; // FPointerToUberGraphFrame
	}

	namespace n_UMaterialExpressionScalarParameter { // : UMaterialExpressionParameter
		constexpr auto DefaultValue = 0x58; // float
		constexpr auto bUseCustomPrimitiveData = 0x5c; // bool
		constexpr auto PrimitiveDataIndex = 0x5d; // char
	}

	namespace n_UNavRelevantComponent { // : UActorComponent
		constexpr auto bAttachToOwnersRoot = 0xd4; // char : 1
		constexpr auto CachedNavParent = 0xd8; // UObject*
	}

	namespace n_UBillboardComponent { // : UPrimitiveComponent
		constexpr auto Sprite = 0x440; // UTexture2D*
		constexpr auto bIsScreenSizeScaled = 0x448; // char : 1
		constexpr auto ScreenSize = 0x44c; // float
		constexpr auto U = 0x450; // float
		constexpr auto UL = 0x454; // float
		constexpr auto V = 0x458; // float
		constexpr auto VL = 0x45c; // float
	}

	namespace n_UMOEquipmentShieldComponent { // : UMOEquipmentComponent
		constexpr auto pFrameComponent = 0xf0; // UStaticMeshComponent*
		constexpr auto pHandleComponent = 0xf8; // UStaticMeshComponent*
		constexpr auto pDataAssetHandle = 0x100; // UMODataAssetShield*
		constexpr auto pDataAssetFrame = 0x108; // UMODataAssetShieldFrame*
		constexpr auto sEquipmentData = 0x110; // FMOShieldData
		constexpr auto pHandleMID = 0x140; // UMaterialInstanceDynamic*
		constexpr auto pHeadMID = 0x148; // UMaterialInstanceDynamic*
		constexpr auto fFrameScale = 0x150; // float
	}

	namespace n_UAvoidanceManager { // : UObject
		constexpr auto DefaultTimeToLive = 0x30; // float
		constexpr auto LockTimeAfterAvoid = 0x34; // float
		constexpr auto LockTimeAfterClean = 0x38; // float
		constexpr auto DeltaTimeToPredict = 0x3c; // float
		constexpr auto ArtificialRadiusExpansion = 0x40; // float
		constexpr auto TestHeightDifference = 0x44; // float
		constexpr auto HeightCheckMargin = 0x48; // float
	}

	namespace n_USubmixEffectDelayPreset { // : USoundEffectSubmixPreset
		constexpr auto Settings = 0x9c; // FSubmixEffectDelaySettings
		constexpr auto DynamicSettings = 0xa8; // FSubmixEffectDelaySettings
	}

	namespace n_UMaterialExpressionArccosineFast { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UVectorFieldComponent { // : UPrimitiveComponent
		constexpr auto VectorField = 0x440; // UVectorField*
		constexpr auto Intensity = 0x448; // float
		constexpr auto Tightness = 0x44c; // float
		constexpr auto bPreviewVectorField = 0x450; // char : 1
	}

	namespace n_UMovieSceneByteTrack { // : UMovieScenePropertyTrack
		constexpr auto Enum = 0xb0; // UEnum*
	}

	namespace n_ULeaderboardFlushCallbackProxy { // : UObject
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionTextureSample { // : UMaterialExpressionTextureBase
		constexpr auto Coordinates = 0x48; // FExpressionInput
	}

	namespace n_AAudioVolume { // : AVolume
		constexpr auto Priority = 0x258; // float
		constexpr auto bEnabled = 0x25c; // char : 1
		constexpr auto Settings = 0x260; // FReverbSettings
		constexpr auto AmbientZoneSettings = 0x280; // FInteriorSettings
		constexpr auto SubmixSendSettings = 0x2a8; // TArray<FAudioVolumeSubmixSendSettings>
		constexpr auto SubmixOverrideSettings = 0x2b8; // TArray<FAudioVolumeSubmixOverrideSettings>
	}

	namespace n_AGeometryCacheActor { // : AActor
		constexpr auto GeometryCacheComponent = 0x220; // UGeometryCacheComponent*
	}

	namespace n_UTimelineTemplate { // : UObject
		constexpr auto TimelineLength = 0x28; // float
		constexpr auto LengthMode = 0x2c; // ETimelineLengthMode
		constexpr auto bAutoPlay = 0x2d; // char : 1
		constexpr auto bLoop = 0x2d; // char : 1
		constexpr auto bReplicated = 0x2d; // char : 1
		constexpr auto bIgnoreTimeDilation = 0x2d; // char : 1
		constexpr auto EventTracks = 0x30; // TArray<FTTEventTrack>
		constexpr auto FloatTracks = 0x40; // TArray<FTTFloatTrack>
		constexpr auto VectorTracks = 0x50; // TArray<FTTVectorTrack>
		constexpr auto LinearColorTracks = 0x60; // TArray<FTTLinearColorTrack>
		constexpr auto MetaDataArray = 0x70; // TArray<FBPVariableMetaDataEntry>
		constexpr auto TimelineGuid = 0x80; // FGuid
		constexpr auto VariableName = 0x90; // FName
		constexpr auto DirectionPropertyName = 0x98; // FName
		constexpr auto UpdateFunctionName = 0xa0; // FName
		constexpr auto FinishedFunctionName = 0xa8; // FName
	}

	namespace n_UKawaiiPhysicsLimitsDataAsset { // : UDataAsset
		constexpr auto SphericalLimits = 0x30; // TArray<FSphericalLimit>
		constexpr auto CapsuleLimits = 0x40; // TArray<FCapsuleLimit>
		constexpr auto PlanarLimits = 0x50; // TArray<FPlanarLimit>
	}

	namespace n_UMOCharacterMovementComponent { // : UCharacterMovementComponent
		constexpr auto CalcVelocityTickInterval = 0xb08; // float
	}

	namespace n_UParticleModuleTrailSource { // : UParticleModuleTrailBase
		constexpr auto SourceMethod = 0x30; // ETrail2SourceMethod
		constexpr auto SourceName = 0x34; // FName
		constexpr auto SourceStrength = 0x40; // FRawDistributionFloat
		constexpr auto bLockSourceStength = 0x70; // char : 1
		constexpr auto SourceOffsetCount = 0x74; // int32_t
		constexpr auto SourceOffsetDefaults = 0x78; // TArray<FVector>
		constexpr auto SelectionMethod = 0x88; // EParticleSourceSelectionMethod
		constexpr auto bInheritRotation = 0x8c; // char : 1
	}

	namespace n_ANavMeshBoundsVolume { // : AVolume
		constexpr auto SupportedAgents = 0x258; // FNavAgentSelector
	}

	namespace n_UOculusSceneCaptureCubemap { // : UObject
		constexpr auto CaptureComponents = 0x38; // TArray<USceneCaptureComponent2D*>
	}

	namespace n_UTimecodeProvider { // : UObject
		constexpr auto FrameDelay = 0x28; // float
	}

	namespace n_UScaleBoxSlot { // : UPanelSlot
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UMOButtonTab { // : UMOButton
		constexpr auto CustomStyle = 0x438; // USlateWidgetStyleAsset*
	}

	namespace n_UMOCraftingArmor { // : UMOCrafting
		constexpr auto pScrollBox_ArmorSlot = 0x310; // UMOScrollBox*
		constexpr auto pScrollBox_ArmorStyle = 0x318; // UMOScrollBox*
		constexpr auto pItemSlotPlaceItem_ArmorOutsideMaterial = 0x320; // UMOItemSlotPlaceItem*
		constexpr auto pItemSlotPlaceItem_ArmorInsideMaterial = 0x328; // UMOItemSlotPlaceItem*
		constexpr auto pPreviewMaterial = 0x330; // UMaterialInstance*
		constexpr auto sArmorSlotMaterialInsideName = 0x338; // FString
		constexpr auto sArmorSlotMaterialOutsideName = 0x348; // FString
		constexpr auto sArmorSlotName = 0x358; // FString
		constexpr auto sArmorStyleName = 0x368; // FString
		constexpr auto pCraftingSlider_Inside = 0x378; // UMOCraftingSliderWidget*
		constexpr auto pCraftingSlider_Outside = 0x380; // UMOCraftingSliderWidget*
		constexpr auto vCraftingInfo_ArmorSlot = 0x398; // TArray<FArmorCraftingInfo_ArmorSlot>
		constexpr auto vCraftingInfo_ArmorStyle = 0x3a8; // TArray<FArmorCraftingInfo_Style>
		constexpr auto vCraftingArmorSlotGroups = 0x3b8; // TArray<UMOCraftingListEntry*>
	}

	namespace n_UNiagaraPrecompileContainer { // : UObject
		constexpr auto Scripts = 0x28; // TArray<UNiagaraScript*>
		constexpr auto System = 0x38; // UNiagaraSystem*
	}

	namespace n_UParticleModuleBeamTarget { // : UParticleModuleBeamBase
		constexpr auto TargetMethod = 0x30; // Beam2SourceTargetMethod
		constexpr auto TargetName = 0x34; // FName
		constexpr auto Target = 0x40; // FRawDistributionVector
		constexpr auto bTargetAbsolute = 0x88; // char : 1
		constexpr auto bLockTarget = 0x88; // char : 1
		constexpr auto TargetTangentMethod = 0x8c; // Beam2SourceTargetTangentMethod
		constexpr auto TargetTangent = 0x90; // FRawDistributionVector
		constexpr auto bLockTargetTangent = 0xd8; // char : 1
		constexpr auto TargetStrength = 0xe0; // FRawDistributionFloat
		constexpr auto bLockTargetStength = 0x110; // char : 1
		constexpr auto LockRadius = 0x114; // float
	}

	namespace n_UNavAreaMeta_SwitchByAgent { // : UNavAreaMeta
		constexpr auto Agent0Area = 0x48; // UNavArea*
		constexpr auto Agent1Area = 0x50; // UNavArea*
		constexpr auto Agent2Area = 0x58; // UNavArea*
		constexpr auto Agent3Area = 0x60; // UNavArea*
		constexpr auto Agent4Area = 0x68; // UNavArea*
		constexpr auto Agent5Area = 0x70; // UNavArea*
		constexpr auto Agent6Area = 0x78; // UNavArea*
		constexpr auto Agent7Area = 0x80; // UNavArea*
		constexpr auto Agent8Area = 0x88; // UNavArea*
		constexpr auto Agent9Area = 0x90; // UNavArea*
		constexpr auto Agent10Area = 0x98; // UNavArea*
		constexpr auto Agent11Area = 0xa0; // UNavArea*
		constexpr auto Agent12Area = 0xa8; // UNavArea*
		constexpr auto Agent13Area = 0xb0; // UNavArea*
		constexpr auto Agent14Area = 0xb8; // UNavArea*
		constexpr auto Agent15Area = 0xc0; // UNavArea*
	}

	namespace n_UInterpTrackFade { // : UInterpTrackFloatBase
		constexpr auto bPersistFade = 0x90; // char : 1
		constexpr auto bFadeAudio = 0x90; // char : 1
		constexpr auto FadeColor = 0x94; // FLinearColor
	}

	namespace n_UAB_CH_Player_Male_Human_Armor_03_Rags_Legs_C { // : UAnimInstance
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_KawaiiPhysics_6 = 0x2d0; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x520; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x540; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_CopyPoseFromMesh = 0x560; // FAnimNode_CopyPoseFromMesh
		constexpr auto AnimGraphNode_KawaiiPhysics_5 = 0x740; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_KawaiiPhysics_4 = 0x990; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_KawaiiPhysics_3 = 0xbe0; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_KawaiiPhysics_2 = 0xe30; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_Root = 0x1080; // FAnimNode_Root
		constexpr auto AnimGraphNode_KawaiiPhysics = 0x10b0; // FAnimNode_KawaiiPhysics
		constexpr auto DummyBoneLength = 0x1300; // float
		constexpr auto PhysicsSettings = 0x1304; // FKawaiiPhysicsSettings
	}

	namespace n_UPendingNetGame { // : UObject
		constexpr auto NetDriver = 0x30; // UNetDriver*
		constexpr auto DemoNetDriver = 0x38; // UDemoNetDriver*
	}

	namespace n_UPlanePositionGizmo { // : UInteractiveGizmo
		constexpr auto AxisSource = 0x48; // TScriptInterface<IGizmoAxisSource>
		constexpr auto ParameterSource = 0x58; // TScriptInterface<IGizmoVec2ParameterSource>
		constexpr auto HitTarget = 0x68; // TScriptInterface<IGizmoClickTarget>
		constexpr auto StateTarget = 0x78; // TScriptInterface<IGizmoStateTarget>
		constexpr auto bEnableSignedAxis = 0x88; // bool
		constexpr auto bFlipX = 0x89; // bool
		constexpr auto bFlipY = 0x8a; // bool
		constexpr auto bInInteraction = 0x8b; // bool
		constexpr auto InteractionOrigin = 0x8c; // FVector
		constexpr auto InteractionNormal = 0x98; // FVector
		constexpr auto InteractionAxisX = 0xa4; // FVector
		constexpr auto InteractionAxisY = 0xb0; // FVector
		constexpr auto InteractionStartPoint = 0xbc; // FVector
		constexpr auto InteractionCurPoint = 0xc8; // FVector
		constexpr auto InteractionStartParameter = 0xd4; // FVector2D
		constexpr auto InteractionCurParameter = 0xdc; // FVector2D
		constexpr auto ParameterSigns = 0xe4; // FVector2D
	}

	namespace n_UIpConnection { // : UNetConnection
		constexpr auto SocketErrorDisconnectDelay = 0x1b40; // float
	}

	namespace n_ULandscapeGrassType { // : UObject
		constexpr auto GrassVarieties = 0x28; // TArray<FGrassVariety>
		constexpr auto bEnableDensityScaling = 0x38; // char : 1
		constexpr auto GrassMesh = 0x40; // UStaticMesh*
		constexpr auto GrassDensity = 0x48; // float
		constexpr auto PlacementJitter = 0x4c; // float
		constexpr auto StartCullDistance = 0x50; // int32_t
		constexpr auto EndCullDistance = 0x54; // int32_t
		constexpr auto RandomRotation = 0x58; // bool
		constexpr auto AlignToSurface = 0x59; // bool
	}

	namespace n_ULiveLinkDrivenComponent { // : UActorComponent
		constexpr auto SubjectName = 0xb0; // FLiveLinkSubjectName
		constexpr auto ActorTransformBone = 0xb8; // FName
		constexpr auto bModifyActorTransform = 0xc0; // bool
		constexpr auto bSetRelativeLocation = 0xc1; // bool
	}

	namespace n_UPawnAction_Move { // : UPawnAction
		constexpr auto GoalActor = 0x98; // AActor*
		constexpr auto GoalLocation = 0xa0; // FVector
		constexpr auto AcceptableRadius = 0xac; // float
		constexpr auto FilterClass = 0xb0; // UNavigationQueryFilter*
		constexpr auto bAllowStrafe = 0xb8; // char : 1
		constexpr auto bFinishOnOverlap = 0xb8; // char : 1
		constexpr auto bUsePathfinding = 0xb8; // char : 1
		constexpr auto bAllowPartialPath = 0xb8; // char : 1
		constexpr auto bProjectGoalToNavigation = 0xb8; // char : 1
		constexpr auto bUpdatePathToGoal = 0xb8; // char : 1
		constexpr auto bAbortChildActionOnPathChange = 0xb8; // char : 1
	}

	namespace n_UParticleModuleSubUVMovie { // : UParticleModuleSubUV
		constexpr auto bUseEmitterTime = 0x70; // char : 1
		constexpr auto FrameRate = 0x78; // FRawDistributionFloat
		constexpr auto StartingFrame = 0xa8; // int32_t
	}

	namespace n_UEnvQueryGenerator_CurrentLocation { // : UEnvQueryGenerator
		constexpr auto QueryContext = 0x50; // UEnvQueryContext*
	}

	namespace n_UDLSSSettings { // : UObject
		constexpr auto bEnableDLSSD3D12 = 0x28; // bool
		constexpr auto bEnableDLSSD3D11 = 0x29; // bool
		constexpr auto bEnableDLSSVulkan = 0x2a; // bool
		constexpr auto bEnableDLSSInEditorViewports = 0x2b; // bool
		constexpr auto bEnableScreenpercentageManipulationInDLSSEditorViewports = 0x2c; // bool
		constexpr auto bEnableDLSSInPlayInEditorViewports = 0x2d; // bool
		constexpr auto bShowDLSSSDebugOnScreenMessages = 0x2e; // bool
		constexpr auto GenericDLSSBinaryPath = 0x30; // FString
		constexpr auto bGenericDLSSBinaryExists = 0x40; // bool
		constexpr auto NVIDIANGXApplicationId = 0x44; // uint32_t
		constexpr auto CustomDLSSBinaryPath = 0x48; // FString
		constexpr auto bCustomDLSSBinaryExists = 0x58; // bool
	}

	namespace n_UOculusMR_State { // : UObject
		constexpr auto TrackedCamera = 0x28; // FTrackedCamera
		constexpr auto TrackingReferenceComponent = 0xa0; // USceneComponent*
		constexpr auto ScalingFactor = 0xa8; // double
		constexpr auto ChangeCameraStateRequested = 0xb4; // bool
		constexpr auto BindToTrackedCameraIndexRequested = 0xb5; // bool
	}

	namespace n_UInterpTrackInstEvent { // : UInterpTrackInst
		constexpr auto LastUpdatePosition = 0x28; // float
	}

	namespace n_URendererSettings { // : UDeveloperSettings
		constexpr auto bMobileDisableVertexFog = 0x38; // char : 1
		constexpr auto MaxMobileCascades = 0x3c; // int32_t
		constexpr auto MobileMSAASampleCount = 0x40; // EMobileMSAASampleCount
		constexpr auto bMobileAllowDitheredLODTransition = 0x44; // char : 1
		constexpr auto bMobileAllowSoftwareOcclusionCulling = 0x44; // char : 1
		constexpr auto bMobileVirtualTextures = 0x44; // char : 1
		constexpr auto bDiscardUnusedQualityLevels = 0x44; // char : 1
		constexpr auto bOcclusionCulling = 0x44; // char : 1
		constexpr auto MinScreenRadiusForLights = 0x48; // float
		constexpr auto MinScreenRadiusForEarlyZPass = 0x4c; // float
		constexpr auto MinScreenRadiusForCSMdepth = 0x50; // float
		constexpr auto bPrecomputedVisibilityWarning = 0x54; // char : 1
		constexpr auto bTextureStreaming = 0x54; // char : 1
		constexpr auto bUseDXT5NormalMaps = 0x54; // char : 1
		constexpr auto bVirtualTextures = 0x54; // char : 1
		constexpr auto bVirtualTexturedLightmaps = 0x54; // char : 1
		constexpr auto VirtualTextureTileSize = 0x58; // uint32_t
		constexpr auto VirtualTextureTileBorderSize = 0x5c; // uint32_t
		constexpr auto VirtualTextureFeedbackFactor = 0x60; // uint32_t
		constexpr auto bVirtualTextureEnableCompressZlib = 0x64; // char : 1
		constexpr auto bVirtualTextureEnableCompressCrunch = 0x64; // char : 1
		constexpr auto bClearCoatEnableSecondNormal = 0x64; // char : 1
		constexpr auto ReflectionCaptureResolution = 0x68; // int32_t
		constexpr auto bReflectionCaptureCompression = 0x6c; // char : 1
		constexpr auto ReflectionEnvironmentLightmapMixBasedOnRoughness = 0x6c; // char : 1
		constexpr auto bForwardShading = 0x6c; // char : 1
		constexpr auto bVertexFoggingForOpaque = 0x6c; // char : 1
		constexpr auto bAllowStaticLighting = 0x6c; // char : 1
		constexpr auto bUseNormalMapsForStaticLighting = 0x6c; // char : 1
		constexpr auto bGenerateMeshDistanceFields = 0x6c; // char : 1
		constexpr auto bEightBitMeshDistanceFields = 0x6c; // char : 1
		constexpr auto bGenerateLandscapeGIData = 0x6d; // char : 1
		constexpr auto bCompressMeshDistanceFields = 0x6d; // char : 1
		constexpr auto TessellationAdaptivePixelsPerTriangle = 0x70; // float
		constexpr auto bSeparateTranslucency = 0x74; // char : 1
		constexpr auto TranslucentSortPolicy = 0x78; // ETranslucentSortPolicy
		constexpr auto TranslucentSortAxis = 0x7c; // FVector
		constexpr auto CustomDepthStencil = 0x88; // ECustomDepthStencil
		constexpr auto bCustomDepthTaaJitter = 0x8c; // char : 1
		constexpr auto bEnableAlphaChannelInPostProcessing = 0x90; // EAlphaChannelMode
		constexpr auto bDefaultFeatureBloom = 0x94; // char : 1
		constexpr auto bDefaultFeatureAmbientOcclusion = 0x94; // char : 1
		constexpr auto bDefaultFeatureAmbientOcclusionStaticFraction = 0x94; // char : 1
		constexpr auto bDefaultFeatureAutoExposure = 0x94; // char : 1
		constexpr auto DefaultFeatureAutoExposure = 0x98; // EAutoExposureMethodUI
		constexpr auto DefaultFeatureAutoExposureBias = 0x9c; // float
		constexpr auto bExtendDefaultLuminanceRangeInAutoExposureSettings = 0xa0; // char : 1
		constexpr auto bUsePreExposure = 0xa0; // char : 1
		constexpr auto bEnablePreExposureOnlyInTheEditor = 0xa0; // char : 1
		constexpr auto bDefaultFeatureMotionBlur = 0xa0; // char : 1
		constexpr auto bDefaultFeatureLensFlare = 0xa0; // char : 1
		constexpr auto bTemporalUpsampling = 0xa0; // char : 1
		constexpr auto bSSGI = 0xa0; // char : 1
		constexpr auto DefaultFeatureAntiAliasing = 0xa4; // EAntiAliasingMethod
		constexpr auto DefaultLightUnits = 0xa5; // ELightUnits
		constexpr auto DefaultBackBufferPixelFormat = 0xa6; // EDefaultBackBufferPixelFormat
		constexpr auto bRenderUnbuiltPreviewShadowsInGame = 0xa8; // char : 1
		constexpr auto bStencilForLODDither = 0xa8; // char : 1
		constexpr auto EarlyZPass = 0xac; // EEarlyZPass
		constexpr auto bEarlyZPassOnlyMaterialMasking = 0xb0; // char : 1
		constexpr auto bDBuffer = 0xb0; // char : 1
		constexpr auto ClearSceneMethod = 0xb4; // EClearSceneOptions
		constexpr auto bBasePassOutputsVelocity = 0xb8; // char : 1
		constexpr auto bVertexDeformationOutputsVelocity = 0xb8; // char : 1
		constexpr auto bSelectiveBasePassOutputs = 0xb8; // char : 1
		constexpr auto bDefaultParticleCutouts = 0xb8; // char : 1
		constexpr auto GPUSimulationTextureSizeX = 0xbc; // int32_t
		constexpr auto GPUSimulationTextureSizeY = 0xc0; // int32_t
		constexpr auto bGlobalClipPlane = 0xc4; // char : 1
		constexpr auto GBufferFormat = 0xc8; // EGBufferFormat
		constexpr auto bUseGPUMorphTargets = 0xcc; // char : 1
		constexpr auto bNvidiaAftermathEnabled = 0xcc; // char : 1
		constexpr auto bMultiView = 0xcc; // char : 1
		constexpr auto bMobilePostProcessing = 0xcc; // char : 1
		constexpr auto bMobileMultiView = 0xcc; // char : 1
		constexpr auto bMobileUseHWsRGBEncoding = 0xcc; // char : 1
		constexpr auto bRoundRobinOcclusion = 0xcc; // char : 1
		constexpr auto bODSCapture = 0xcc; // char : 1
		constexpr auto bMeshStreaming = 0xcd; // char : 1
		constexpr auto WireframeCullThreshold = 0xd0; // float
		constexpr auto bEnableRayTracing = 0xd4; // char : 1
		constexpr auto bEnableRayTracingTextureLOD = 0xd4; // char : 1
		constexpr auto bEnableHybridTranslucency = 0xd4; // char : 1
		constexpr auto bSupportStationarySkylight = 0xd4; // char : 1
		constexpr auto bSupportLowQualityLightmaps = 0xd4; // char : 1
		constexpr auto bSupportPointLightWholeSceneShadows = 0xd4; // char : 1
		constexpr auto bSupportAtmosphericFog = 0xd4; // char : 1
		constexpr auto bSupportSkyAtmosphere = 0xd4; // char : 1
		constexpr auto bSupportSkyAtmosphereAffectsHeightFog = 0xd5; // char : 1
		constexpr auto bSupportSkinCacheShaders = 0xd5; // char : 1
		constexpr auto DefaultSkinCacheBehavior = 0xd8; // ESkinCacheDefaultBehavior
		constexpr auto SkinCacheSceneMemoryLimitInMB = 0xdc; // float
		constexpr auto bMobileEnableStaticAndCSMShadowReceivers = 0xe0; // char : 1
		constexpr auto bMobileEnableMovableLightCSMShaderCulling = 0xe0; // char : 1
		constexpr auto bMobileAllowDistanceFieldShadows = 0xe0; // char : 1
		constexpr auto bMobileAllowMovableDirectionalLights = 0xe0; // char : 1
		constexpr auto MobileNumDynamicPointLights = 0xe4; // uint32_t
		constexpr auto bMobileDynamicPointLightsUseStaticBranch = 0xe8; // char : 1
		constexpr auto bMobileAllowMovableSpotlights = 0xe8; // char : 1
		constexpr auto bMobileAllowMovableSpotlightShadows = 0xe8; // char : 1
		constexpr auto bSupport16BitBoneIndex = 0xe8; // char : 1
		constexpr auto bGPUSkinLimit2BoneInfluences = 0xe8; // char : 1
		constexpr auto bSupportDepthOnlyIndexBuffers = 0xe8; // char : 1
		constexpr auto bSupportReversedIndexBuffers = 0xe8; // char : 1
		constexpr auto bLPV = 0xe8; // char : 1
		constexpr auto bMobileAmbientOcclusion = 0xe9; // char : 1
		constexpr auto bUseUnlimitedBoneInfluences = 0xe9; // char : 1
		constexpr auto UnlimitedBonInfluencesThreshold = 0xec; // int32_t
		constexpr auto MobilePlanarReflectionMode = 0xf0; // EMobilePlanarReflectionMode
		constexpr auto bStreamSkeletalMeshLODs = 0xf1; // FPerPlatformBool
		constexpr auto bDiscardSkeletalMeshOptionalLODs = 0xf2; // FPerPlatformBool
		constexpr auto VisualizeCalibrationColorMaterialPath = 0xf8; // FSoftObjectPath
		constexpr auto VisualizeCalibrationCustomMaterialPath = 0x110; // FSoftObjectPath
		constexpr auto VisualizeCalibrationGrayscaleMaterialPath = 0x128; // FSoftObjectPath
	}

	namespace n_UAxisAngleGizmo { // : UInteractiveGizmo
		constexpr auto AxisSource = 0x48; // TScriptInterface<IGizmoAxisSource>
		constexpr auto AngleSource = 0x58; // TScriptInterface<IGizmoFloatParameterSource>
		constexpr auto HitTarget = 0x68; // TScriptInterface<IGizmoClickTarget>
		constexpr auto StateTarget = 0x78; // TScriptInterface<IGizmoStateTarget>
		constexpr auto bInInteraction = 0x88; // bool
		constexpr auto RotationOrigin = 0x8c; // FVector
		constexpr auto RotationAxis = 0x98; // FVector
		constexpr auto RotationPlaneX = 0xa4; // FVector
		constexpr auto RotationPlaneY = 0xb0; // FVector
		constexpr auto InteractionStartPoint = 0xbc; // FVector
		constexpr auto InteractionCurPoint = 0xc8; // FVector
		constexpr auto InteractionStartAngle = 0xd4; // float
		constexpr auto InteractionCurAngle = 0xd8; // float
	}

	namespace n_USingleClickInputBehavior { // : UAnyButtonInputBehavior
		constexpr auto HitTestOnRelease = 0xc0; // bool
	}

	namespace n_UUniformGridPanel { // : UPanelWidget
		constexpr auto SlotPadding = 0x120; // FMargin
		constexpr auto MinDesiredSlotWidth = 0x130; // float
		constexpr auto MinDesiredSlotHeight = 0x134; // float
	}

	namespace n_UMOHintWidget { // : UMOUserWidget
		constexpr auto pHintBody = 0x2c8; // UTextBlock*
		constexpr auto pHintTitle = 0x2d0; // UTextBlock*
		constexpr auto pCheckBox = 0x2d8; // UMOCheckBox*
	}

	namespace n_UParticleModuleColorScaleOverLife { // : UParticleModuleColorBase
		constexpr auto ColorScaleOverLife = 0x30; // FRawDistributionVector
		constexpr auto AlphaScaleOverLife = 0x78; // FRawDistributionFloat
		constexpr auto bEmitterTime = 0xa8; // char : 1
	}

	namespace n_UMagicLeapARPinSettings { // : UObject
		constexpr auto UpdateCheckFrequency = 0x28; // float
		constexpr auto OnUpdatedEventTriggerDelta = 0x2c; // FMagicLeapARPinState
	}

	namespace n_UPaperRuntimeSettings { // : UObject
		constexpr auto bEnableSpriteAtlasGroups = 0x28; // bool
		constexpr auto bEnableTerrainSplineEditing = 0x29; // bool
		constexpr auto bResizeSpriteDataToMatchTextures = 0x2a; // bool
	}

	namespace n_UMOButtonPetSkill { // : UMOButton
		constexpr auto sReqData = 0x438; // FRequiredPetSkillData
		constexpr auto sOptData = 0x468; // FOptionalPetSkillData
		constexpr auto pMaterialInstance = 0x498; // UMaterialInstanceDynamic*
	}

	namespace n_UMOCharCreationSpeciesPanel { // : UMOCharCreationPanel
		constexpr auto cMOCladeGiftButtonClass = 0x2d0; // UMOCladeGiftButton*
		constexpr auto pCurrentDataTable = 0x2d8; // UDataTable*
		constexpr auto pUniformGridPanel_CladeGifts = 0x2e0; // UUniformGridPanel*
		constexpr auto vAllowedNations = 0x2e8; // TArray<ENation>
		constexpr auto pCarouselSelect_Gender = 0x338; // UMOCarouselSelectText*
		constexpr auto pCarouselSelect_Nation = 0x340; // UMOCarouselSelectText*
		constexpr auto pCarouselSelect_Clade = 0x348; // UMOCarouselSelectText*
		constexpr auto pCarouselSelect_Race = 0x350; // UMOCarouselSelectText*
		constexpr auto vGiftButtons = 0x358; // TArray<UMOCladeGiftButton*>
		constexpr auto pTextBlock_Strengths = 0x368; // UTextBlock*
		constexpr auto pTextBlock_Summary = 0x370; // UTextBlock*
		constexpr auto pTextBlock_Lore = 0x378; // UTextBlock*
		constexpr auto vStrenghtsText = 0x380; // TArray<FText>
		constexpr auto vSummaryText = 0x390; // TArray<FText>
		constexpr auto vLoreText = 0x3a0; // TArray<FText>
		constexpr auto pCladeImage_Human = 0x3b0; // UImage*
		constexpr auto pCladeImage_Alvarin = 0x3b8; // UImage*
		constexpr auto pCladeImage_Oghmir = 0x3c0; // UImage*
		constexpr auto pCladeImage_Thursar = 0x3c8; // UImage*
	}

	namespace n_ULightmappedSurfaceCollection { // : UObject
		constexpr auto SourceModel = 0x28; // UModel*
		constexpr auto Surfaces = 0x30; // TArray<int32_t>
	}

	namespace n_UBTTask_MakeNoise { // : UBTTaskNode
		constexpr auto Loudnes = 0x70; // float
	}

	namespace n_UMaterialExpressionVectorParameter { // : UMaterialExpressionParameter
		constexpr auto DefaultValue = 0x58; // FLinearColor
		constexpr auto bUseCustomPrimitiveData = 0x68; // bool
		constexpr auto PrimitiveDataIndex = 0x69; // char
	}

	namespace n_UWaterWavesAssetReference { // : UWaterWavesBase
		constexpr auto WaterWavesAsset = 0x28; // UWaterWavesAsset*
	}

	namespace n_ADatasmithAreaLightActor { // : AActor
		constexpr auto LightType = 0x220; // EDatasmithAreaLightActorType
		constexpr auto LightShape = 0x221; // EDatasmithAreaLightActorShape
		constexpr auto Dimensions = 0x224; // FVector2D
		constexpr auto Intensity = 0x22c; // float
		constexpr auto IntensityUnits = 0x230; // ELightUnits
		constexpr auto Color = 0x234; // FLinearColor
		constexpr auto Temperature = 0x244; // float
		constexpr auto IESTexture = 0x248; // UTextureLightProfile*
		constexpr auto bUseIESBrightness = 0x250; // bool
		constexpr auto IESBrightnessScale = 0x254; // float
		constexpr auto Rotation = 0x258; // FRotator
		constexpr auto SourceRadius = 0x264; // float
		constexpr auto SourceLength = 0x268; // float
		constexpr auto AttenuationRadius = 0x26c; // float
		constexpr auto SpotlightInnerAngle = 0x270; // float
		constexpr auto SpotlightOuterAngle = 0x274; // float
	}

	namespace n_UMovieSceneParticleTrack { // : UMovieSceneNameableTrack
		constexpr auto ParticleSections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UMaterialExpressionLandscapeGrassOutput { // : UMaterialExpressionCustomOutput
		constexpr auto GrassTypes = 0x40; // TArray<FGrassInput>
	}

	namespace n_UAnimComposite { // : UAnimCompositeBase
		constexpr auto AnimationTrack = 0xa8; // FAnimTrack
	}

	namespace n_AGameNetworkManager { // : AInfo
		constexpr auto BadPacketLossThreshold = 0x220; // float
		constexpr auto SeverePacketLossThreshold = 0x224; // float
		constexpr auto BadPingThreshold = 0x228; // int32_t
		constexpr auto SeverePingThreshold = 0x22c; // int32_t
		constexpr auto AdjustedNetSpeed = 0x230; // int32_t
		constexpr auto LastNetSpeedUpdateTime = 0x234; // float
		constexpr auto TotalNetBandwidth = 0x238; // int32_t
		constexpr auto MinDynamicBandwidth = 0x23c; // int32_t
		constexpr auto MaxDynamicBandwidth = 0x240; // int32_t
		constexpr auto bIsStandbyCheckingEnabled = 0x244; // char : 1
		constexpr auto bHasStandbyCheatTriggered = 0x244; // char : 1
		constexpr auto StandbyRxCheatTime = 0x248; // float
		constexpr auto StandbyTxCheatTime = 0x24c; // float
		constexpr auto PercentMissingForRxStandby = 0x250; // float
		constexpr auto PercentMissingForTxStandby = 0x254; // float
		constexpr auto PercentForBadPing = 0x258; // float
		constexpr auto JoinInProgressStandbyWaitTime = 0x25c; // float
		constexpr auto MoveRepSize = 0x260; // float
		constexpr auto MAXPOSITIONERRORSQUARED = 0x264; // float
		constexpr auto MAXNEARZEROVELOCITYSQUARED = 0x268; // float
		constexpr auto CLIENTADJUSTUPDATECOST = 0x26c; // float
		constexpr auto MAXCLIENTUPDATEINTERVAL = 0x270; // float
		constexpr auto MaxClientForcedUpdateDuration = 0x274; // float
		constexpr auto ServerForcedUpdateHitchThreshold = 0x278; // float
		constexpr auto ServerForcedUpdateHitchCooldown = 0x27c; // float
		constexpr auto MaxMoveDeltaTime = 0x280; // float
		constexpr auto MaxClientSmoothingDeltaTime = 0x284; // float
		constexpr auto ClientNetSendMoveDeltaTime = 0x288; // float
		constexpr auto ClientNetSendMoveDeltaTimeThrottled = 0x28c; // float
		constexpr auto ClientNetSendMoveDeltaTimeStationary = 0x290; // float
		constexpr auto ClientNetSendMoveThrottleAtNetSpeed = 0x294; // int32_t
		constexpr auto ClientNetSendMoveThrottleOverPlayerCount = 0x298; // int32_t
		constexpr auto ClientAuthorativePosition = 0x29c; // bool
		constexpr auto ClientErrorUpdateRateLimit = 0x2a0; // float
		constexpr auto ClientNetCamUpdateDeltaTime = 0x2a4; // float
		constexpr auto ClientNetCamUpdatePositionLimit = 0x2a8; // float
		constexpr auto bMovementTimeDiscrepancyDetection = 0x2ac; // bool
		constexpr auto bMovementTimeDiscrepancyResolution = 0x2ad; // bool
		constexpr auto MovementTimeDiscrepancyMaxTimeMargin = 0x2b0; // float
		constexpr auto MovementTimeDiscrepancyMinTimeMargin = 0x2b4; // float
		constexpr auto MovementTimeDiscrepancyResolutionRate = 0x2b8; // float
		constexpr auto MovementTimeDiscrepancyDriftAllowance = 0x2bc; // float
		constexpr auto bMovementTimeDiscrepancyForceCorrectionsDuringResolution = 0x2c0; // bool
		constexpr auto bUseDistanceBasedRelevancy = 0x2c1; // bool
	}

	namespace n_UMovieSceneGeometryCacheSection { // : UMovieSceneSection
		constexpr auto Params = 0xe8; // FMovieSceneGeometryCacheParams
	}

	namespace n_UInfinite_Compound { // : USceneComponent
		constexpr auto RealTime = 0x1f8; // bool
		constexpr auto EnableScale = 0x1f9; // bool
		constexpr auto TimeJump = 0x1fc; // float
		constexpr auto VisionLimit = 0x200; // float
		constexpr auto ScaleFactor = 0x204; // float
		constexpr auto BeginningScale = 0x208; // float
		constexpr auto ScaleMin = 0x20c; // float
		constexpr auto ScaleMax = 0x210; // float
		constexpr auto InfinityCategory = 0x214; // EInfinityCategory
	}

	namespace n_UNiagaraDataInterfaceColorCurve { // : UNiagaraDataInterfaceCurveBase
		constexpr auto RedCurve = 0x70; // FRichCurve
		constexpr auto GreenCurve = 0xf0; // FRichCurve
		constexpr auto BlueCurve = 0x170; // FRichCurve
		constexpr auto AlphaCurve = 0x1f0; // FRichCurve
	}

	namespace n_UForceFeedbackEffect { // : UObject
		constexpr auto ChannelDetails = 0x28; // TArray<FForceFeedbackChannelDetails>
		constexpr auto Duration = 0x38; // float
	}

	namespace n_ADungeonFire_Blueprint_C { // : AEmitter
		constexpr auto Audio = 0x270; // UAudioComponent*
	}

	namespace n_UARFaceComponent { // : UARComponent
		constexpr auto TransformSetting = 0x278; // EARFaceTransformMixing
		constexpr auto bUpdateVertexNormal = 0x279; // bool
		constexpr auto bFaceOutOfScreen = 0x27a; // bool
		constexpr auto ReplicatedPayload = 0x280; // FARFaceUpdatePayload
	}

	namespace n_USkeletalBodySetup { // : UBodySetup
		constexpr auto bSkipScaleFromAnimation = 0x2a0; // bool
		constexpr auto PhysicalAnimationData = 0x2a8; // TArray<FPhysicalAnimationProfile>
	}

	namespace n_ULandscapeMeshCollisionComponent { // : ULandscapeHeightfieldCollisionComponent
		constexpr auto MeshGuid = 0x520; // FGuid
	}

	namespace n_UHudSettings { // : UObject
		constexpr auto bShowHUD = 0x28; // char : 1
		constexpr auto DebugDisplay = 0x30; // TArray<FName>
	}

	namespace n_UMOQuestTaskEntry { // : UMOUserWidget
		constexpr auto pTaskText = 0x2c8; // URichTextBlock*
		constexpr auto pMyQuest = 0x2d0; // UMOQuestEntry*
		constexpr auto vTaskLocation = 0x2d8; // FVector
		constexpr auto bTaskFocused = 0x2e4; // bool
		constexpr auto eCurTaskState = 0x2e5; // ETaskState
	}

	namespace n_UMOOptionsEntry { // : UMOUserWidget
		constexpr auto entryIndex = 0x2c8; // int32_t
		constexpr auto pOptionsPanel = 0x2d0; // UMOUserWidgetOptionsPanel*
		constexpr auto pText = 0x2d8; // UTextBlock*
		constexpr auto InitializeDisplayText = 0x2e0; // FText
		constexpr auto InitializeToolTipText = 0x2f8; // FText
		constexpr auto iInitFontSize = 0x310; // int32_t
	}

	namespace n_UMOMailPanel { // : UMOUserWidget
		constexpr auto pMail = 0x2c8; // UMOMail*
	}

	namespace n_UMOItemSlotPlaceItem { // : UMOItemSlot
		constexpr auto bRequiresSkill = 0x2b0; // bool
		constexpr auto bHideStackSize = 0x2b1; // bool
		constexpr auto pParent = 0x2b8; // UMOUserWidget*
		constexpr auto pInvalidDropInfo = 0x2c0; // UMOBasicTooltip*
	}

	namespace n_UEdGraphNode { // : UObject
		constexpr auto DeprecatedPins = 0x38; // TArray<UEdGraphPin_Deprecated*>
		constexpr auto NodePosX = 0x48; // int32_t
		constexpr auto NodePosY = 0x4c; // int32_t
		constexpr auto NodeWidth = 0x50; // int32_t
		constexpr auto NodeHeight = 0x54; // int32_t
		constexpr auto AdvancedPinDisplay = 0x58; // ENodeAdvancedPins
		constexpr auto EnabledState = 0x59; // ENodeEnabledState
		constexpr auto bDisplayAsDisabled = 0x5b; // char : 1
		constexpr auto bUserSetEnabledState = 0x5b; // char : 1
		constexpr auto bIsNodeEnabled = 0x5b; // char : 1
		constexpr auto bHasCompilerMessage = 0x5b; // char : 1
		constexpr auto NodeComment = 0x60; // FString
		constexpr auto ErrorType = 0x70; // int32_t
		constexpr auto ErrorMsg = 0x78; // FString
		constexpr auto NodeGuid = 0x88; // FGuid
	}

	namespace n_UMagicLeapTouchpadGesturesComponent { // : UActorComponent
		constexpr auto OnTouchpadGestureStart = 0xb8; // FMulticastInlineDelegate
		constexpr auto OnTouchpadGestureContinue = 0xc8; // FMulticastInlineDelegate
		constexpr auto OnTouchpadGestureEnd = 0xd8; // FMulticastInlineDelegate
	}

	namespace n_UMagicLeapImageTrackerComponent { // : USceneComponent
		constexpr auto TargetImageTexture = 0x1f8; // UTexture2D*
		constexpr auto Name = 0x200; // FString
		constexpr auto LongerDimension = 0x210; // float
		constexpr auto bIsStationary = 0x214; // bool
		constexpr auto bUseUnreliablePose = 0x215; // bool
		constexpr auto AxisOrientation = 0x216; // EMagicLeapImageTargetOrientation
		constexpr auto OnSetImageTargetSucceeded = 0x218; // FMulticastInlineDelegate
		constexpr auto OnSetImageTargetFailed = 0x228; // FMulticastInlineDelegate
		constexpr auto OnImageTargetFound = 0x238; // FMulticastInlineDelegate
		constexpr auto OnImageTargetLost = 0x248; // FMulticastInlineDelegate
		constexpr auto OnImageTargetUnreliableTracking = 0x258; // FMulticastInlineDelegate
	}

	namespace n_UMagicLeapHeadTrackingNotificationsComponent { // : UVRNotificationsComponent
		constexpr auto OnHeadTrackingLost = 0x140; // FMulticastInlineDelegate
		constexpr auto OnHeadTrackingRecovered = 0x150; // FMulticastInlineDelegate
		constexpr auto OnHeadTrackingRecoveryFailed = 0x160; // FMulticastInlineDelegate
		constexpr auto OnHeadTrackingNewSessionStarted = 0x170; // FMulticastInlineDelegate
	}

	namespace n_USoundfieldEffectBase { // : UObject
		constexpr auto Settings = 0x28; // USoundfieldEffectSettingsBase*
	}

	namespace n_UEndpointSubmix { // : USoundSubmixBase
		constexpr auto EndpointType = 0x38; // FName
		constexpr auto EndpointSettingsClass = 0x40; // UAudioEndpointSettingsBase*
		constexpr auto EndpointSettings = 0x48; // UAudioEndpointSettingsBase*
	}

	namespace n_UMOCameraComponent { // : UCameraComponent
		constexpr auto CameraHMDBlend = 0x7c0; // float
	}

	namespace n_UButtonSlot { // : UPanelSlot
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UMovieSceneLiveLinkSection { // : UMovieSceneSection
		constexpr auto SubjectPreset = 0xe8; // FLiveLinkSubjectPreset
		constexpr auto ChannelMask = 0x120; // TArray<bool>
		constexpr auto SubSections = 0x130; // TArray<UMovieSceneLiveLinkSubSection*>
		constexpr auto SubjectName = 0x150; // FName
		constexpr auto TemplateToPush = 0x158; // FLiveLinkFrameData
		constexpr auto RefSkeleton = 0x1e8; // FLiveLinkRefSkeleton
		constexpr auto CurveNames = 0x208; // TArray<FName>
		constexpr auto PropertyFloatChannels = 0x218; // TArray<FMovieSceneFloatChannel>
	}

	namespace n_UMOPaperdollStatistics { // : UMOWidgetBlueprint
		constexpr auto pInfoEntry_HealthReserves = 0x260; // UMOCharCreationInfoEntry*
		constexpr auto pInfoEntry_StaminaReserves = 0x268; // UMOCharCreationInfoEntry*
		constexpr auto pInfoEntry_ManaReserves = 0x270; // UMOCharCreationInfoEntry*
		constexpr auto pInfoEntry_Thirst = 0x278; // UMOCharCreationInfoEntry*
		constexpr auto pInfoEntry_Hunger = 0x280; // UMOCharCreationInfoEntry*
		constexpr auto pInfoEntry_MaxSpeed = 0x288; // UMOCharCreationInfoEntry*
		constexpr auto pInfoEntry_MaxJump = 0x290; // UMOCharCreationInfoEntry*
		constexpr auto pInfoEntry_ArmorWeight = 0x298; // UMOCharCreationInfoEntry*
		constexpr auto pInfoEntry_CarryWeight = 0x2a0; // UMOCharCreationInfoEntry*
		constexpr auto pInfoEntry_BodyHeat = 0x2a8; // UMOCharCreationInfoEntry*
		constexpr auto pInfoEntry_WorldHeat = 0x2b0; // UMOCharCreationInfoEntry*
		constexpr auto pInfoEntry_StaminaRegen = 0x2b8; // UMOCharCreationInfoEntry*
		constexpr auto pInfoEntry_ManaRegen = 0x2c0; // UMOCharCreationInfoEntry*
		constexpr auto pTextBlockStandingsNation_Tindremene = 0x2c8; // UTextBlock*
		constexpr auto pTextBlockStandingsNation_Sidoian = 0x2d0; // UTextBlock*
		constexpr auto pTextBlockStandingsNation_Khurite = 0x2d8; // UTextBlock*
		constexpr auto pTextBlockStandingsNation_Sarducaan = 0x2e0; // UTextBlock*
		constexpr auto pTextBlockStandingsNation_Kallard = 0x2e8; // UTextBlock*
		constexpr auto pTextBlockStandingsNation_Alvarin = 0x2f0; // UTextBlock*
		constexpr auto pTextBlockStandingsNation_Huergar = 0x2f8; // UTextBlock*
		constexpr auto pTextBlockStandingsNation_Risar = 0x300; // UTextBlock*
		constexpr auto pTextBlock_MurderCount = 0x308; // UTextBlock*
		constexpr auto pTextBlock_MurderCountTimer = 0x310; // UTextBlock*
		constexpr auto vTextBlockStandingsNations = 0x318; // TArray<UTextBlock*>
		constexpr auto vStandingTitles = 0x338; // TArray<FText>
	}

	namespace n_UInterpTrackInstFloatAnimBPParam { // : UInterpTrackInst
		constexpr auto AnimScriptInstance = 0x28; // UAnimInstance*
		constexpr auto ResetFloat = 0x30; // float
	}

	namespace n_ABP_AiEffectArrowFire_C { // : AMOAiEffectActor
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
	}

	namespace n_ABP_MODirectionalLight_SunCycle_Refactor_C { // : AActor
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto OutputDebugText = 0x228; // UTextRenderComponent*
		constexpr auto AltitudeRefArrow = 0x230; // UArrowComponent*
		constexpr auto AzimuthRefArrow = 0x238; // UArrowComponent*
		constexpr auto EarthPoleArrow = 0x240; // UArrowComponent*
		constexpr auto WorldPositionForwardArrow = 0x248; // UArrowComponent*
		constexpr auto WorldPositionNormalArrow = 0x250; // UArrowComponent*
		constexpr auto FakeSun = 0x258; // UStaticMeshComponent*
		constexpr auto FakeEarth = 0x260; // UStaticMeshComponent*
		constexpr auto Scene = 0x268; // USceneComponent*
		constexpr auto SolarReverseDirection = 0x270; // bool
		constexpr auto SolarMaxIntensity = 0x274; // float
		constexpr auto SolarMaxIntensity_Multiplier = 0x278; // float
		constexpr auto SkyDayMaxIntensity = 0x27c; // float
		constexpr auto ObserverWorldPositionLatitude = 0x280; // float
		constexpr auto SolarYearTime = 0x284; // float
		constexpr auto SolarDayTime = 0x288; // float
		constexpr auto PreviousSolarTime = 0x28c; // float
		constexpr auto LockDayTime = 0x290; // bool
		constexpr auto TestDayNightSystemInPIE = 0x291; // bool
		constexpr auto ObserverWorldPositionNormal = 0x294; // FVector
		constexpr auto ObserverWorldPositionForward = 0x2a0; // FVector
		constexpr auto ObserverWorldPositionAzimuthReference = 0x2ac; // FVector
		constexpr auto ObserverWorldPositionAltitudeReference = 0x2b8; // FVector
		constexpr auto SolarAzimuth = 0x2c4; // float
		constexpr auto SolarAzimuthNormalized = 0x2c8; // float
		constexpr auto SolarAltitude = 0x2cc; // float
		constexpr auto TestDayNightSystemInPIE_TimeMultiplier = 0x2d0; // float
		constexpr auto SunDirectionalLightActor = 0x2d8; // ADirectionalLight*
		constexpr auto SolarAltitudeNormalized = 0x2e0; // float
		constexpr auto SolarUE4Pitch = 0x2e4; // float
		constexpr auto SolarUE4Yaw = 0x2e8; // float
		constexpr auto SolarUE4Rotator = 0x2ec; // FRotator
		constexpr auto MoonDirectionalLightActor = 0x2f8; // ADirectionalLight*
		constexpr auto SkyLightActor = 0x300; // ASkyLight*
		constexpr auto SkyAtmosphereActor = 0x308; // ASkyAtmosphere*
		constexpr auto SkySphereActor = 0x310; // ABP_Sky_Sphere_C*
		constexpr auto SolarOutputLightIntensity = 0x318; // float
		constexpr auto SolarOutputLightIntensityNormalized = 0x31c; // float
		constexpr auto SkyNightMaxIntensity = 0x320; // float
		constexpr auto bRecaptureSkyEnabled = 0x324; // bool
		constexpr auto SolarAltitude_LightIntensityCurve = 0x328; // UCurveFloat*
		constexpr auto SolarAltitude_ShadowOpacityCurve = 0x330; // UCurveFloat*
		constexpr auto SolarOutputShadowOpacity = 0x338; // float
		constexpr auto SkyLightOutputLightIntensity = 0x33c; // float
		constexpr auto SolarAltitude_SkyLightIntensityCurve = 0x340; // UCurveFloat*
		constexpr auto SolarAltitude_NightDarknessCurve = 0x348; // UCurveFloat*
		constexpr auto SolarAltitude_SkyBlendNightDayCurve = 0x350; // UCurveFloat*
		constexpr auto SkyLightOutputColor = 0x358; // FLinearColor
		constexpr auto SkyLightOutputVolumetricScattering = 0x368; // float
		constexpr auto LunarMaxIntensity = 0x36c; // float
		constexpr auto LunarAltitude_LightIntensityCurve = 0x370; // UCurveFloat*
		constexpr auto LunarAltitude_ShadowOpacityCurve = 0x378; // UCurveFloat*
		constexpr auto LunarAltitude_SkyLightIntensityCurve = 0x380; // UCurveFloat*
		constexpr auto LunarAzimuth = 0x388; // float
		constexpr auto LunarAzimuthNormalized = 0x38c; // float
		constexpr auto LunarAltitude = 0x390; // float
		constexpr auto LunarAltitudeNormalized = 0x394; // float
		constexpr auto LunarUE4Pitch = 0x398; // float
		constexpr auto LunarUE4Yaw = 0x39c; // float
		constexpr auto LunarUE4Rotator = 0x3a0; // FRotator
		constexpr auto LunarOutputLightIntensity = 0x3ac; // float
		constexpr auto LunarOutputLightIntensityNormalized = 0x3b0; // float
		constexpr auto LunarOutputShadowOpacity = 0x3b4; // float
		constexpr auto SkyLightNightToDayBlend = 0x3b8; // float
		constexpr auto SolarAltitude_Temperature = 0x3c0; // UCurveFloat*
		constexpr auto SolarAltitude_SkyAtmosphereMieAbsorptionScaleCurve = 0x3c8; // UCurveFloat*
		constexpr auto SolarBloomScale = 0x3d0; // float
		constexpr auto SolarBloomThreshold = 0x3d4; // float
		constexpr auto SolarBloomTint = 0x3d8; // FColor
		constexpr auto LunarBloomScale = 0x3dc; // float
		constexpr auto LunarBloomThreshold = 0x3e0; // float
		constexpr auto LunarBloomTint = 0x3e4; // FColor
		constexpr auto ExpHeightFogActor = 0x3e8; // AExponentialHeightFog*
		constexpr auto SkyAtmosphereMieAbsorptionScale = 0x3f0; // float
		constexpr auto MO2Sun = 0x3f4; // FS_MO2_Sun
		constexpr auto MO2Moons = 0x438; // TArray<FS_MO2_Moon>
		constexpr auto CF_FogOpacity = 0x448; // UCurveFloat*
		constexpr auto CF_FogInscatteringColor = 0x450; // UCurveLinearColor*
		constexpr auto LunarAltitudeOffset = 0x458; // float
		constexpr auto Lunar2UE4Rotator = 0x45c; // FRotator
		constexpr auto LunarAltitudeOffset2 = 0x468; // float
		constexpr auto SunForcesOffMoonLightFactor = 0x46c; // float
		constexpr auto SunForcesOffMoonShadowsFactor = 0x470; // float
		constexpr auto SkylightDungeonTransition = 0x474; // float
		constexpr auto initSkyLightColor = 0x478; // FLinearColor
		constexpr auto PPExposureCompensation_Day = 0x488; // float
		constexpr auto PPExposureCompensation_Night = 0x48c; // float
		constexpr auto PPExposureMin_Day = 0x490; // float
		constexpr auto PPExposureMin_Night = 0x494; // float
		constexpr auto PPSlope_Day = 0x498; // float
		constexpr auto PPSlope_Night = 0x49c; // float
		constexpr auto PPToe_Day = 0x4a0; // float
		constexpr auto PPToe_Night = 0x4a4; // float
		constexpr auto GlobalPostProcess_Day = 0x4a8; // APostProcessVolume*
		constexpr auto GlobalPostProcess_Night = 0x4b0; // APostProcessVolume*
	}

	namespace n_UBTComposite_SimpleParallel { // : UBTCompositeNode
		constexpr auto FinishMode = 0x90; // EBTParallelMode
	}

	namespace n_UStereoLayerShapeCylinder { // : UStereoLayerShape
		constexpr auto Radius = 0x28; // float
		constexpr auto OverlayArc = 0x2c; // float
		constexpr auto Height = 0x30; // int32_t
	}

	namespace n_UDataAsset { // : UObject
		constexpr auto NativeClass = 0x28; // UDataAsset*
	}

	namespace n_UInterpTrackLinearColorBase { // : UInterpTrack
		constexpr auto LinearColorTrack = 0x70; // FInterpCurveLinearColor
		constexpr auto CurveTension = 0x88; // float
	}

	namespace n_ABP_EQ_EquipmentGenerator_C { // : AActor
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto Handle = 0x228; // UStaticMeshComponent*
		constexpr auto Head = 0x230; // UStaticMeshComponent*
		constexpr auto EquipmentGroup = 0x238; // EEquipmentGroup
		constexpr auto WeaponGroup = 0x239; // EWeaponGroup
		constexpr auto HeadIndex = 0x23c; // int32_t
		constexpr auto HandleIndex = 0x240; // int32_t
		constexpr auto HeadResourceGroup = 0x244; // EResourceGroup
		constexpr auto HeadResourceIndex = 0x248; // int32_t
		constexpr auto HandleResourceGroup = 0x24c; // EResourceGroup
		constexpr auto HandleResourceIndex = 0x250; // int32_t
		constexpr auto Head_Definitions = 0x258; // UMODataAssetHeadDefinitions*
		constexpr auto Handle_Definitions = 0x260; // UMODataAssetHandleDefinitions*
		constexpr auto Resource_Definitions = 0x268; // UMODataAssetResourceDefinitions*
		constexpr auto HeadMaterial = 0x270; // UMaterialInterface*
		constexpr auto HandleMaterial = 0x278; // UMaterialInterface*
		constexpr auto Handle_MID = 0x280; // UMaterialInstanceDynamic*
		constexpr auto Head_MID = 0x288; // UMaterialInstanceDynamic*
		constexpr auto ShieldBase_Definitions = 0x290; // UMODataAssetShieldDefinitions*
		constexpr auto DesiredSocketOnAutoAttach = 0x298; // FName
	}

	namespace n_UMOCheckBoxEntryLanguage { // : UMOOptionsEntry
		constexpr auto pMOCheckBox = 0x318; // UMOCheckBox*
		constexpr auto sLanguage = 0x320; // FString
		constexpr auto iPctCompleted = 0x330; // int32_t
		constexpr auto sLanguageLink = 0x338; // FString
	}

	namespace n_UNiagaraDataInterfaceAudioSubmix { // : UNiagaraDataInterface
		constexpr auto Submix = 0x38; // USoundSubmix*
	}

	namespace n_UNavMovementComponent { // : UMovementComponent
		constexpr auto NavAgentProps = 0xf0; // FNavAgentProperties
		constexpr auto FixedPathBrakingDistance = 0x120; // float
		constexpr auto bUpdateNavAgentWithOwnersCollision = 0x124; // char : 1
		constexpr auto bUseAccelerationForPaths = 0x124; // char : 1
		constexpr auto bUseFixedBrakingDistanceForPaths = 0x124; // char : 1
		constexpr auto MovementState = 0x125; // FMovementProperties
		constexpr auto PathFollowingComp = 0x128; // UObject*
	}

	namespace n_UMovieSceneActorReferenceSection { // : UMovieSceneSection
		constexpr auto ActorReferenceData = 0xe8; // FMovieSceneActorReferenceData
		constexpr auto ActorGuidIndexCurve = 0x198; // FIntegralCurve
		constexpr auto ActorGuidStrings = 0x218; // TArray<FString>
	}

	namespace n_UMovieSceneLiveLinkSubSection { // : UObject
		constexpr auto SubSectionData = 0x28; // FLiveLinkSubSectionData
		constexpr auto SubjectRole = 0x38; // ULiveLinkRole*
	}

	namespace n_UMovieSceneFloatSection { // : UMovieSceneSection
		constexpr auto FloatCurve = 0xf0; // FMovieSceneFloatChannel
	}

	namespace n_UMOBrokerPanel { // : UMOUserWidget
		constexpr auto pMOButton = 0x2c8; // UMOButton*
		constexpr auto pBroker = 0x2d0; // UMOBroker*
	}

	namespace n_UWB_MOOptionsUIPanel_C { // : UMOUserWidgetOptionsUI
		constexpr auto Image_Line_UI = 0x348; // UImage*
	}

	namespace n_UUserDefinedStruct { // : UScriptStruct
		constexpr auto Status = 0xc0; // EUserDefinedStructureStatus
		constexpr auto Guid = 0xc4; // FGuid
	}

	namespace n_UMaterialInstance { // : UMaterialInterface
		constexpr auto PhysMaterial = 0x88; // UPhysicalMaterial*
		constexpr auto PhysicalMaterialMap = 0x90; // UPhysicalMaterial* [0x8]
		constexpr auto Parent = 0xd0; // UMaterialInterface*
		constexpr auto bHasStaticPermutationResource = 0xd8; // char : 1
		constexpr auto bOverrideSubsurfaceProfile = 0xd8; // char : 1
		constexpr auto ScalarParameterValues = 0xe0; // TArray<FScalarParameterValue>
		constexpr auto VectorParameterValues = 0xf0; // TArray<FVectorParameterValue>
		constexpr auto TextureParameterValues = 0x100; // TArray<FTextureParameterValue>
		constexpr auto RuntimeVirtualTextureParameterValues = 0x110; // TArray<FRuntimeVirtualTextureParameterValue>
		constexpr auto FontParameterValues = 0x120; // TArray<FFontParameterValue>
		constexpr auto BasePropertyOverrides = 0x130; // FMaterialInstanceBasePropertyOverrides
		constexpr auto StaticParameters = 0x148; // FStaticParameterSet
		constexpr auto CachedLayerParameters = 0x188; // FMaterialCachedParameters
		constexpr auto CachedReferencedTextures = 0x328; // TArray<UObject*>
	}

	namespace n_UWidgetAnimation { // : UMovieSceneSequence
		constexpr auto MovieScene = 0x60; // UMovieScene*
		constexpr auto AnimationBindings = 0x68; // TArray<FWidgetAnimationBinding>
		constexpr auto bLegacyFinishOnStop = 0x78; // bool
		constexpr auto DisplayLabel = 0x80; // FString
	}

	namespace n_UFileMediaSource { // : UBaseMediaSource
		constexpr auto FilePath = 0x88; // FString
		constexpr auto PrecacheFile = 0x98; // bool
	}

	namespace n_AMOCharacter { // : ACharacter
		constexpr auto LocalAvatarID = 0x4c0; // int32_t
		constexpr auto bRandomizeAppearance = 0x4c4; // bool
		constexpr auto bRandomizeClade = 0x4c5; // bool
		constexpr auto bRandomizeRace = 0x4c6; // bool
		constexpr auto bRandomizeArmor = 0x4c7; // bool
		constexpr auto bRandomizeEquipment = 0x4c8; // bool
		constexpr auto RandomStream_BaseSeed = 0x4cc; // int32_t
		constexpr auto fDefaultHeightOverride = 0x4d0; // float
		constexpr auto ExtraColliderShapeInfo = 0x4d8; // FMOCollisionPoolAttachmentInfo
		constexpr auto CachedExtraColliderShapes = 0x4f0; // TArray<UShapeComponent*>
		constexpr auto bIsInRagdoll = 0x512; // bool
		constexpr auto fMaxDistanceForFootStepTraces = 0x514; // float
		constexpr auto LookAtActorOverrideCinematic = 0x528; // AActor*
		constexpr auto LookAtTargetBoneName = 0x530; // FName
		constexpr auto DefaultAppearance = 0x538; // FMOCharacterPlayerAppearance
		constexpr auto BodyShape = 0x800; // FMOCharacterBodyShape
		constexpr auto pEffects = 0x818; // UMOCharacterEffects*
		constexpr auto pProjectileCreation = 0x820; // UMOCharacterProjectileCreation*
		constexpr auto pEtherWorldSystem = 0x828; // UMOEtherWorldCharacterSystem*
		constexpr auto fRagdollDurationBeforeDeathSequence = 0x830; // float
		constexpr auto fLoginSequenceDuration = 0x834; // float
		constexpr auto fLogoutSequenceDuration = 0x838; // float
		constexpr auto fDeathSequenceDuration = 0x83c; // float
		constexpr auto fEnterOrLeaveWorldSequenceDuration = 0x840; // float
		constexpr auto bIsInEtherworld = 0x844; // bool
		constexpr auto CustomDepthRenderChannel = 0x848; // int32_t
		constexpr auto FullBodyAnimationQueue = 0x858; // TArray<FMOSynchronizedFullBodyAnimationEntry>
		constexpr auto bIsInConstruction = 0x878; // bool
		constexpr auto bIsSpawning = 0x879; // bool
		constexpr auto ReactionAnimations = 0x880; // FMOAnimationSequenceReactions
		constexpr auto AttackAnimations = 0x8c0; // FMOAnimationSequenceAttacks
		constexpr auto DominantFullBodyAnimation = 0x930; // FMOSynchronizedFullBodyAnimationEntry
		constexpr auto ActiveFullBodyAnimations = 0x9c0; // TArray<FMOSynchronizedFullBodyAnimationEntry>
		constexpr auto bIsInFirstPerson = 0x9d0; // bool
		constexpr auto LastAttackAnimationDirection = 0x9d1; // ECombatInputDirection
		constexpr auto ActiveWeaponAnimationSet = 0x9d8; // UMODataAssetWeaponAnimations*
		constexpr auto ActiveMagicAnimationSet = 0x9e0; // UMODataAssetMagicAnimations*
		constexpr auto OnServerVerify_CombatReleaseAnimDuration = 0x9e8; // float
		constexpr auto OnServerVerify_CombatReleaseTimeStamp = 0x9ec; // float
		constexpr auto eLastMagicReleaseType = 0x9f0; // EMagicReleaseType
		constexpr auto CameraComponent = 0x9f8; // UMOCameraComponent*
		constexpr auto pBodyManagerComponent = 0xa00; // UMOBodyManagerComponent*
		constexpr auto pArmorManagerComponent = 0xa08; // UMOArmorManagerComponent*
		constexpr auto EquipmentManagerComponent = 0xa10; // UMOEquipmentManagerComponent*
		constexpr auto pCompositionComponent = 0xa18; // UMOCharacterCompositionComponent*
		constexpr auto vFootStepSounds = 0xa20; // TMap<EPhysicalSurface, USoundCue*>
		constexpr auto sCameraBoneName = 0xa70; // FName
		constexpr auto cChatBubbleWidgetComponentClass = 0xa80; // UMOWidgetComponentChatBubble*
		constexpr auto sJournalRowNameToUnlock = 0xa88; // FString
		constexpr auto pSoundCueUse = 0xb18; // USoundCue*
		constexpr auto pSoundCueUseAlternative = 0xb20; // USoundCue*
		constexpr auto sSteamStatOnKill = 0xb28; // FString
		constexpr auto SpawnSequence = 0xb64; // EMOSpawnSequence
		constexpr auto bIsUndead = 0xb65; // bool
		constexpr auto bIsInCombat = 0xb66; // bool
		constexpr auto pActiveCombat = 0xbb0; // UMOCombatSystem*
		constexpr auto pMeleeCombat = 0xbb8; // UMOCombatSystemMelee*
		constexpr auto pRangedCombat = 0xbc0; // UMOCombatSystemRanged*
		constexpr auto fCharacterHeight = 0xbdc; // float
		constexpr auto fCharacterBindHeight = 0xbe0; // float
		constexpr auto fCharacterScale = 0xbe4; // float
		constexpr auto fEquipmentScale = 0xbe8; // float
		constexpr auto bIsMounted = 0xbec; // bool
		constexpr auto bAnimMontageBound = 0xbed; // bool
		constexpr auto bAlignWithFloor = 0xc1c; // bool
		constexpr auto ObstacleAvoidanceParameters = 0xc20; // FMOObstacleAvoidanceParameters
		constexpr auto bCanStrafe = 0xca6; // bool
	}

	namespace n_USkyLightComponent { // : ULightComponentBase
		constexpr auto bRealTimeCapture = 0x228; // bool
		constexpr auto SourceType = 0x229; // ESkyLightSourceType
		constexpr auto Cubemap = 0x230; // UTextureCube*
		constexpr auto SourceCubemapAngle = 0x238; // float
		constexpr auto CubemapResolution = 0x23c; // int32_t
		constexpr auto SkyDistanceThreshold = 0x240; // float
		constexpr auto bCaptureEmissiveOnly = 0x244; // bool
		constexpr auto bLowerHemisphereIsBlack = 0x245; // bool
		constexpr auto LowerHemisphereColor = 0x248; // FLinearColor
		constexpr auto OcclusionMaxDistance = 0x258; // float
		constexpr auto Contrast = 0x25c; // float
		constexpr auto OcclusionExponent = 0x260; // float
		constexpr auto MinOcclusion = 0x264; // float
		constexpr auto OcclusionTint = 0x268; // FColor
		constexpr auto bCloudAmbientOcclusion = 0x26c; // char : 1
		constexpr auto CloudAmbientOcclusionStrength = 0x270; // float
		constexpr auto CloudAmbientOcclusionExtent = 0x274; // float
		constexpr auto CloudAmbientOcclusionMapResolutionScale = 0x278; // float
		constexpr auto CloudAmbientOcclusionApertureScale = 0x27c; // float
		constexpr auto OcclusionCombineMode = 0x280; // EOcclusionCombineMode
		constexpr auto BlendDestinationCubemap = 0x338; // UTextureCube*
	}

	namespace n_UPreviewMeshCollection { // : UDataAsset
		constexpr auto Skeleton = 0x38; // USkeleton*
		constexpr auto SkeletalMeshes = 0x40; // TArray<FPreviewMeshCollectionEntry>
	}

	namespace n_UMODataAssetNPCConversation { // : UPrimaryDataAsset
		constexpr auto sStartingText = 0x30; // FText
		constexpr auto sPlayerResponse1 = 0x48; // FText
		constexpr auto sPlayerResponse2 = 0x60; // FText
		constexpr auto sPlayerResponse3 = 0x78; // FText
		constexpr auto sPlayerResponse4 = 0x90; // FText
		constexpr auto sPlayerResponse5 = 0xa8; // FText
		constexpr auto pNextNPCReply1 = 0xc0; // FMONPCReply
		constexpr auto pNextNPCReply2 = 0x190; // FMONPCReply
		constexpr auto pNextNPCReply3 = 0x260; // FMONPCReply
		constexpr auto pNextNPCReply4 = 0x330; // FMONPCReply
		constexpr auto pNextNPCReply5 = 0x400; // FMONPCReply
	}

	namespace n_UMOEquipmentManagerComponent { // : UActorComponent
		constexpr auto pMainEquipmentComponent = 0xb0; // UMOEquipmentComponent*
		constexpr auto pSecondaryEquipmentComponent = 0xb8; // UMOEquipmentComponent*
		constexpr auto pArrowHeadData = 0xc0; // UMODataAssetArrowHead*
	}

	namespace n_UWB_MOCharCreationSlider_SkinComplexion_C { // : UMOOptionSliderWidget
		constexpr auto UberGraphFrame = 0x330; // FPointerToUberGraphFrame
		constexpr auto Input = 0x338; // UImage*
		constexpr auto fMinValue = 0x340; // float
		constexpr auto fMaxValue = 0x344; // float
		constexpr auto fOptionsSliderValue = 0x348; // float
		constexpr auto fOptionsSliderModifier = 0x34c; // float
		constexpr auto AppendEndOfStringWith = 0x350; // FString
		constexpr auto bRoundOutVariable = 0x360; // bool
		constexpr auto fPrecisionPower = 0x364; // float
		constexpr auto ToolTip = 0x368; // FText
		constexpr auto TestVariable = 0x380; // float
		constexpr auto BackgroundIsVisible = 0x384; // bool
	}

	namespace n_UParticleSystem { // : UFXSystemAsset
		constexpr auto UpdateTime_FPS = 0x30; // float
		constexpr auto UpdateTime_Delta = 0x34; // float
		constexpr auto WarmupTime = 0x38; // float
		constexpr auto WarmupTickRate = 0x3c; // float
		constexpr auto Emitters = 0x40; // TArray<UParticleEmitter*>
		constexpr auto PreviewComponent = 0x50; // UParticleSystemComponent*
		constexpr auto CurveEdSetup = 0x58; // UInterpCurveEdSetup*
		constexpr auto LODDistanceCheckTime = 0x60; // float
		constexpr auto MacroUVRadius = 0x64; // float
		constexpr auto LODDistances = 0x68; // TArray<float>
		constexpr auto LODSettings = 0x78; // TArray<FParticleSystemLOD>
		constexpr auto FixedRelativeBoundingBox = 0x88; // FBox
		constexpr auto SecondsBeforeInactive = 0xa4; // float
		constexpr auto Delay = 0xa8; // float
		constexpr auto DelayLow = 0xac; // float
		constexpr auto bOrientZAxisTowardCamera = 0xb0; // char : 1
		constexpr auto bUseFixedRelativeBoundingBox = 0xb0; // char : 1
		constexpr auto bShouldResetPeakCounts = 0xb0; // char : 1
		constexpr auto bHasPhysics = 0xb0; // char : 1
		constexpr auto bUseRealtimeThumbnail = 0xb0; // char : 1
		constexpr auto ThumbnailImageOutOfDate = 0xb0; // char : 1
		constexpr auto bUseDelayRange = 0xb1; // char : 1
		constexpr auto bAllowManagedTicking = 0xb1; // char : 1
		constexpr auto bAutoDeactivate = 0xb1; // char : 1
		constexpr auto bRegenerateLODDuplicate = 0xb1; // char : 1
		constexpr auto SystemUpdateMode = 0xb2; // EParticleSystemUpdateMode
		constexpr auto LODMethod = 0xb3; // ParticleSystemLODMethod
		constexpr auto InsignificantReaction = 0xb4; // EParticleSystemInsignificanceReaction
		constexpr auto OcclusionBoundsMethod = 0xb5; // EParticleSystemOcclusionBoundsMethod
		constexpr auto MaxSignificanceLevel = 0xb7; // EParticleSignificanceLevel
		constexpr auto MinTimeBetweenTicks = 0xb8; // uint32_t
		constexpr auto InsignificanceDelay = 0xbc; // float
		constexpr auto MacroUVPosition = 0xc0; // FVector
		constexpr auto CustomOcclusionBounds = 0xcc; // FBox
		constexpr auto SoloTracking = 0xe8; // TArray<FLODSoloTrack>
		constexpr auto NamedMaterialSlots = 0xf8; // TArray<FNamedEmitterMaterial>
	}

	namespace n_USkeletalMeshSocket { // : UObject
		constexpr auto SocketName = 0x28; // FName
		constexpr auto BoneName = 0x30; // FName
		constexpr auto RelativeLocation = 0x38; // FVector
		constexpr auto RelativeRotation = 0x44; // FRotator
		constexpr auto RelativeScale = 0x50; // FVector
		constexpr auto bForceAlwaysAnimated = 0x5c; // bool
	}

	namespace n_USpectatorBeaconState { // : UObject
		constexpr auto SessionName = 0x28; // FName
		constexpr auto NumConsumedReservations = 0x30; // int32_t
		constexpr auto MaxReservations = 0x34; // int32_t
		constexpr auto bRestrictCrossConsole = 0x38; // bool
		constexpr auto Reservations = 0x40; // TArray<FSpectatorReservation>
	}

	namespace n_UMaterialExpressionSceneDepth { // : UMaterialExpression
		constexpr auto InputMode = 0x40; // EMaterialSceneAttributeInputMode
		constexpr auto Input = 0x44; // FExpressionInput
		constexpr auto Coordinates = 0x58; // FExpressionInput
		constexpr auto ConstInput = 0x6c; // FVector2D
	}

	namespace n_UWidgetTree { // : UObject
		constexpr auto RootWidget = 0x28; // UWidget*
	}

	namespace n_UMovieScene3DAttachSection { // : UMovieScene3DConstraintSection
		constexpr auto AttachSocketName = 0x118; // FName
		constexpr auto AttachComponentName = 0x120; // FName
		constexpr auto AttachmentLocationRule = 0x128; // EAttachmentRule
		constexpr auto AttachmentRotationRule = 0x129; // EAttachmentRule
		constexpr auto AttachmentScaleRule = 0x12a; // EAttachmentRule
		constexpr auto DetachmentLocationRule = 0x12b; // EDetachmentRule
		constexpr auto DetachmentRotationRule = 0x12c; // EDetachmentRule
		constexpr auto DetachmentScaleRule = 0x12d; // EDetachmentRule
	}

	namespace n_UWB_MO_Scrollbox_Arrow_Up_C { // : UMOUserWidget
		constexpr auto pImage = 0x2c8; // UImage*
	}

	namespace n_UMaterialExpressionVolumetricAdvancedMaterialOutput { // : UMaterialExpressionCustomOutput
		constexpr auto PhaseG = 0x40; // FExpressionInput
		constexpr auto PhaseG2 = 0x54; // FExpressionInput
		constexpr auto PhaseBlend = 0x68; // FExpressionInput
		constexpr auto MultiScatteringContribution = 0x7c; // FExpressionInput
		constexpr auto MultiScatteringOcclusion = 0x90; // FExpressionInput
		constexpr auto MultiScatteringEccentricity = 0xa4; // FExpressionInput
		constexpr auto ConservativeDensity = 0xb8; // FExpressionInput
		constexpr auto ConstPhaseG = 0xcc; // float
		constexpr auto ConstPhaseG2 = 0xd0; // float
		constexpr auto ConstPhaseBlend = 0xd4; // float
		constexpr auto PerSamplePhaseEvaluation = 0xd8; // bool
		constexpr auto MultiScatteringApproximationOctaveCount = 0xdc; // uint32_t
		constexpr auto ConstMultiScatteringContribution = 0xe0; // float
		constexpr auto ConstMultiScatteringOcclusion = 0xe4; // float
		constexpr auto ConstMultiScatteringEccentricity = 0xe8; // float
		constexpr auto bGroundContribution = 0xec; // bool
		constexpr auto bGrayScaleMaterial = 0xed; // bool
		constexpr auto bRayMarchVolumeShadow = 0xee; // bool
	}

	namespace n_UPlaneReflectionCaptureComponent { // : UReflectionCaptureComponent
		constexpr auto InfluenceRadiusScale = 0x270; // float
		constexpr auto PreviewInfluenceRadius = 0x278; // UDrawSphereComponent*
		constexpr auto PreviewCaptureBox = 0x280; // UBoxComponent*
	}

	namespace n_UMOAnimNotifyPlayCharacterVoice { // : UMOAnimNotify
		constexpr auto eVoiceSound = 0x38; // ECharacterSound
	}

	namespace n_UNiagaraDataInterfaceCurve { // : UNiagaraDataInterfaceCurveBase
		constexpr auto Curve = 0x70; // FRichCurve
	}

	namespace n_UInterpTrackVectorProp { // : UInterpTrackVectorBase
		constexpr auto PropertyName = 0x90; // FName
	}

	namespace n_UParticleModuleLocationDirect { // : UParticleModuleLocationBase
		constexpr auto Location = 0x30; // FRawDistributionVector
		constexpr auto LocationOffset = 0x78; // FRawDistributionVector
		constexpr auto ScaleFactor = 0xc0; // FRawDistributionVector
		constexpr auto Direction = 0x108; // FRawDistributionVector
	}

	namespace n_UInterpTrackInstFloatParticleParam { // : UInterpTrackInst
		constexpr auto ResetFloat = 0x28; // float
	}

	namespace n_UTexture2DArray { // : UTexture
		constexpr auto AddressX = 0x130; // TextureAddress
		constexpr auto AddressY = 0x131; // TextureAddress
		constexpr auto AddressZ = 0x132; // TextureAddress
	}

	namespace n_UMovieSceneGeometryCollectionSection { // : UMovieSceneSection
		constexpr auto Params = 0xe8; // FMovieSceneGeometryCollectionParams
	}

	namespace n_ULiveLinkDebuggerSettings { // : UObject
		constexpr auto MinBarColor = 0x28; // FSlateColor
		constexpr auto MaxBarColor = 0x50; // FSlateColor
		constexpr auto DPIScaleMultiplier = 0x78; // float
	}

	namespace n_UFontFace { // : UObject
		constexpr auto SourceFilename = 0x30; // FString
		constexpr auto Hinting = 0x40; // EFontHinting
		constexpr auto LoadingPolicy = 0x41; // EFontLoadingPolicy
		constexpr auto LayoutMethod = 0x42; // EFontLayoutMethod
	}

	namespace n_UFoliageType { // : UObject
		constexpr auto UpdateGuid = 0x28; // FGuid
		constexpr auto Density = 0x38; // float
		constexpr auto DensityAdjustmentFactor = 0x3c; // float
		constexpr auto Radius = 0x40; // float
		constexpr auto bSingleInstanceModeOverrideRadius = 0x44; // bool
		constexpr auto SingleInstanceModeRadius = 0x48; // float
		constexpr auto Scaling = 0x4c; // EFoliageScaling
		constexpr auto ScaleX = 0x50; // FFloatInterval
		constexpr auto ScaleY = 0x58; // FFloatInterval
		constexpr auto ScaleZ = 0x60; // FFloatInterval
		constexpr auto VertexColorMaskByChannel = 0x68; // FFoliageVertexColorChannelMask [0x4]
		constexpr auto VertexColorMask = 0x98; // FoliageVertexColorMask
		constexpr auto VertexColorMaskThreshold = 0x9c; // float
		constexpr auto VertexColorMaskInvert = 0xa0; // char : 1
		constexpr auto ZOffset = 0xa4; // FFloatInterval
		constexpr auto AlignToNormal = 0xac; // char : 1
		constexpr auto AlignMaxAngle = 0xb0; // float
		constexpr auto RandomYaw = 0xb4; // char : 1
		constexpr auto RandomPitchAngle = 0xb8; // float
		constexpr auto GroundSlopeAngle = 0xbc; // FFloatInterval
		constexpr auto Height = 0xc4; // FFloatInterval
		constexpr auto LandscapeLayers = 0xd0; // TArray<FName>
		constexpr auto MinimumLayerWeight = 0xe0; // float
		constexpr auto ExclusionLandscapeLayers = 0xe8; // TArray<FName>
		constexpr auto MinimumExclusionLayerWeight = 0xf8; // float
		constexpr auto LandscapeLayer = 0xfc; // FName
		constexpr auto CollisionWithWorld = 0x104; // char : 1
		constexpr auto CollisionScale = 0x108; // FVector
		constexpr auto MeshBounds = 0x114; // FBoxSphereBounds
		constexpr auto LowBoundOriginRadius = 0x130; // FVector
		constexpr auto Mobility = 0x13c; // EComponentMobility
		constexpr auto CullDistance = 0x140; // FInt32Interval
		constexpr auto bEnableStaticLighting = 0x148; // char : 1
		constexpr auto CastShadow = 0x148; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x148; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x148; // char : 1
		constexpr auto bCastDynamicShadow = 0x148; // char : 1
		constexpr auto bCastStaticShadow = 0x148; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x148; // char : 1
		constexpr auto bReceivesDecals = 0x148; // char : 1
		constexpr auto bOverrideLightMapRes = 0x149; // char : 1
		constexpr auto OverriddenLightMapRes = 0x14c; // int32_t
		constexpr auto LightmapType = 0x150; // ELightmapType
		constexpr auto bUseAsOccluder = 0x154; // char : 1
		constexpr auto bVisibleInRayTracing = 0x158; // char : 1
		constexpr auto bEvaluateWorldPositionOffset = 0x158; // char : 1
		constexpr auto BodyInstance = 0x160; // FBodyInstance
		constexpr auto CustomNavigableGeometry = 0x2b8; // EHasCustomNavigableGeometry
		constexpr auto LightingChannels = 0x2b9; // FLightingChannels
		constexpr auto bRenderCustomDepth = 0x2bc; // char : 1
		constexpr auto CustomDepthStencilWriteMask = 0x2c0; // ERendererStencilMask
		constexpr auto CustomDepthStencilValue = 0x2c4; // int32_t
		constexpr auto TranslucencySortPriority = 0x2c8; // int32_t
		constexpr auto CollisionRadius = 0x2cc; // float
		constexpr auto ShadeRadius = 0x2d0; // float
		constexpr auto NumSteps = 0x2d4; // int32_t
		constexpr auto InitialSeedDensity = 0x2d8; // float
		constexpr auto AverageSpreadDistance = 0x2dc; // float
		constexpr auto SpreadVariance = 0x2e0; // float
		constexpr auto SeedsPerStep = 0x2e4; // int32_t
		constexpr auto DistributionSeed = 0x2e8; // int32_t
		constexpr auto MaxInitialSeedOffset = 0x2ec; // float
		constexpr auto bCanGrowInShade = 0x2f0; // bool
		constexpr auto bSpawnsInShade = 0x2f1; // bool
		constexpr auto MaxInitialAge = 0x2f4; // float
		constexpr auto MaxAge = 0x2f8; // float
		constexpr auto OverlapPriority = 0x2fc; // float
		constexpr auto ProceduralScale = 0x300; // FFloatInterval
		constexpr auto ScaleCurve = 0x308; // FRuntimeFloatCurve
		constexpr auto ChangeCount = 0x390; // int32_t
		constexpr auto ReapplyDensity = 0x394; // char : 1
		constexpr auto ReapplyRadius = 0x394; // char : 1
		constexpr auto ReapplyAlignToNormal = 0x394; // char : 1
		constexpr auto ReapplyRandomYaw = 0x394; // char : 1
		constexpr auto ReapplyScaling = 0x394; // char : 1
		constexpr auto ReapplyScaleX = 0x394; // char : 1
		constexpr auto ReapplyScaleY = 0x394; // char : 1
		constexpr auto ReapplyScaleZ = 0x394; // char : 1
		constexpr auto ReapplyRandomPitchAngle = 0x395; // char : 1
		constexpr auto ReapplyGroundSlope = 0x395; // char : 1
		constexpr auto ReapplyHeight = 0x395; // char : 1
		constexpr auto ReapplyLandscapeLayers = 0x395; // char : 1
		constexpr auto ReapplyZOffset = 0x395; // char : 1
		constexpr auto ReapplyCollisionWithWorld = 0x395; // char : 1
		constexpr auto ReapplyVertexColorMask = 0x395; // char : 1
		constexpr auto bEnableDensityScaling = 0x395; // char : 1
		constexpr auto bEnableDiscardOnLoad = 0x396; // char : 1
		constexpr auto RuntimeVirtualTextures = 0x398; // TArray<URuntimeVirtualTexture*>
		constexpr auto VirtualTextureCullMips = 0x3a8; // int32_t
		constexpr auto VirtualTextureRenderPassType = 0x3ac; // ERuntimeVirtualTextureMainPassType
	}

	namespace n_UNiagaraRendererProperties { // : UNiagaraMergeable
		constexpr auto Platforms = 0x28; // FNiagaraPlatformSet
		constexpr auto SortOrderHint = 0x58; // int32_t
		constexpr auto bIsEnabled = 0x5c; // bool
		constexpr auto bMotionBlurEnabled = 0x5d; // bool
	}

	namespace n_UMOStablesRemPet { // : UMOUserWidget
		constexpr auto pTextBlockPetPoints = 0x2c8; // UTextBlock*
		constexpr auto pTextBlockPetPointsMax = 0x2d0; // UTextBlock*
		constexpr auto pMOScrollBox_Pets = 0x2d8; // UMOScrollBox*
	}

	namespace n_APrecomputedVisibilityOverrideVolume { // : AVolume
		constexpr auto OverrideVisibleActors = 0x258; // TArray<AActor*>
		constexpr auto OverrideInvisibleActors = 0x268; // TArray<AActor*>
		constexpr auto OverrideInvisibleLevels = 0x278; // TArray<FName>
	}

	namespace n_AEmitter { // : AActor
		constexpr auto ParticleSystemComponent = 0x220; // UParticleSystemComponent*
		constexpr auto bDestroyOnSystemFinish = 0x228; // char : 1
		constexpr auto bPostUpdateTickGroup = 0x228; // char : 1
		constexpr auto bCurrentlyActive = 0x228; // char : 1
		constexpr auto OnParticleSpawn = 0x230; // FMulticastInlineDelegate
		constexpr auto OnParticleBurst = 0x240; // FMulticastInlineDelegate
		constexpr auto OnParticleDeath = 0x250; // FMulticastInlineDelegate
		constexpr auto OnParticleCollide = 0x260; // FMulticastInlineDelegate
	}

	namespace n_USoundNodeQualityLevel { // : USoundNode
		constexpr auto CookedQualityLevelIndex = 0x48; // int32_t
	}

	namespace n_UMaterialExpressionArccosine { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UMaterialExpressionDivide { // : UMaterialExpression
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_UBTTask_PlaySound { // : UBTTaskNode
		constexpr auto SoundToPlay = 0x70; // USoundCue*
	}

	namespace n_UDEV_BP_ClientEffect_Transcendental_Awerness_C { // : UMOClientEffectAlvarinZoom
		constexpr auto UberGraphFrame = 0x78; // FPointerToUberGraphFrame
		constexpr auto pPreviousPostProcessSettings = 0x80; // FPostProcessSettings
	}

	namespace n_UImageSequenceProtocol_EXR { // : UImageSequenceProtocol
		constexpr auto bCompressed = 0xd8; // bool
		constexpr auto CaptureGamut = 0xd9; // EHDRCaptureGamut
	}

	namespace n_ABodyFireEffect_Flamestrike_C { // : AMOEffectActorBase
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto DefaultSceneRoot = 0x228; // USceneComponent*
		constexpr auto Locations = 0x230; // TArray<FName>
		constexpr auto NiagaraSystem = 0x240; // UNiagaraSystem*
		constexpr auto NiagaraSystem_List = 0x248; // TArray<UNiagaraComponent*>
		constexpr auto SocketFilter = 0x258; // TArray<FString>
		constexpr auto Temp = 0x268; // bool
	}

	namespace n_UInputTouchDelegateBinding { // : UInputDelegateBinding
		constexpr auto InputTouchDelegateBindings = 0x28; // TArray<FBlueprintInputTouchDelegateBinding>
	}

	namespace n_UNiagaraParameterCollectionInstance { // : UObject
		constexpr auto Collection = 0x28; // UNiagaraParameterCollection*
		constexpr auto OverridenParameters = 0x30; // TArray<FNiagaraVariable>
		constexpr auto ParameterStorage = 0x40; // FNiagaraParameterStore
	}

	namespace n_ASwitchActor { // : AActor
		constexpr auto SceneComponent = 0x238; // USceneComponent*
		constexpr auto LastSelectedOption = 0x240; // int32_t
	}

	namespace n_UMaterialExpressionSmoothStep { // : UMaterialExpression
		constexpr auto Min = 0x40; // FExpressionInput
		constexpr auto Max = 0x54; // FExpressionInput
		constexpr auto Value = 0x68; // FExpressionInput
		constexpr auto ConstMin = 0x7c; // float
		constexpr auto ConstMax = 0x80; // float
		constexpr auto ConstValue = 0x84; // float
	}

	namespace n_UAITask_MoveTo { // : UAITask
		constexpr auto OnRequestFailed = 0x70; // FMulticastInlineDelegate
		constexpr auto OnMoveFinished = 0x80; // FMulticastInlineDelegate
		constexpr auto MoveRequest = 0x90; // FAIMoveRequest
	}

	namespace n_UBTTask_FinishWithResult { // : UBTTaskNode
		constexpr auto Result = 0x70; // EBTNodeResult
	}

	namespace n_UMODataAssetWeaponAnimations { // : UPrimaryDataAsset
		constexpr auto bUseExactAimDuringCharge = 0x30; // bool
		constexpr auto bCorrectPelvisTranslationDuringRelease = 0x31; // bool
		constexpr auto HandMovementLagMultiplier = 0x34; // float
		constexpr auto HandMovementSwayHorizontalMultiplier = 0x38; // float
		constexpr auto HandMovementSwayVerticalMultiplier = 0x3c; // float
		constexpr auto HandMovementSwayRotationDegrees = 0x40; // float
		constexpr auto HandMovementTurnSwayHorizontalMultiplier = 0x44; // float
		constexpr auto HandMovementTurnSwayVerticalMultiplier = 0x48; // float
		constexpr auto HandMovementDuringChargeMultiplier = 0x4c; // float
		constexpr auto HandBreathSwayAmplitude = 0x50; // float
		constexpr auto FirstPersonOverrideSet = 0x58; // UMODataAssetWeaponAnimations*
		constexpr auto MountedOverrideSet = 0x60; // UMODataAssetWeaponAnimations*
		constexpr auto ShieldBucklerOverrideSet = 0x68; // UMODataAssetWeaponAnimations*
		constexpr auto ShieldRoundOverrideSet = 0x70; // UMODataAssetWeaponAnimations*
		constexpr auto ShieldKiteOverrideSet = 0x78; // UMODataAssetWeaponAnimations*
		constexpr auto ShieldTowerOverrideSet = 0x80; // UMODataAssetWeaponAnimations*
		constexpr auto WalkBaseSpeed = 0x88; // float
		constexpr auto RunBaseSpeed = 0x8c; // float
		constexpr auto SprintBaseSpeed = 0x90; // float
		constexpr auto WalkBlendspace = 0x98; // UBlendSpaceBase*
		constexpr auto RunBlendspace = 0xa0; // UBlendSpaceBase*
		constexpr auto Sprint = 0xa8; // UAnimSequenceBase*
		constexpr auto MercyModeIdle = 0xb0; // UAnimSequenceBase*
		constexpr auto MercyModeEnter = 0xb8; // UAnimSequenceBase*
		constexpr auto MercyModeLeave = 0xc0; // UAnimSequenceBase*
		constexpr auto MercyModeWalk = 0xc8; // UAnimSequenceBase*
		constexpr auto Idle = 0xd0; // UAnimSequenceBase*
		constexpr auto Equip = 0xd8; // UAnimSequenceBase*
		constexpr auto Unequip = 0xe0; // UAnimSequenceBase*
		constexpr auto Warcry = 0xe8; // UAnimSequenceBase*
		constexpr auto CombatAimOffset = 0xf0; // UAimOffsetBlendSpace*
		constexpr auto Push = 0xf8; // UAnimSequenceBase*
		constexpr auto BlockLeft = 0x100; // UAnimSequenceBase*
		constexpr auto BlockMiddle = 0x108; // UAnimSequenceBase*
		constexpr auto BlockRight = 0x110; // UAnimSequenceBase*
		constexpr auto BlockUp = 0x118; // UAnimSequenceBase*
		constexpr auto TakeHitBlendspace = 0x120; // UBlendSpaceBase*
		constexpr auto AttackMontage_Left = 0x128; // UAnimMontage*
		constexpr auto AttackMontage_Middle = 0x130; // UAnimMontage*
		constexpr auto AttackMontage_Right = 0x138; // UAnimMontage*
		constexpr auto AttackMontage_Up = 0x140; // UAnimMontage*
		constexpr auto BlockMontage_Left = 0x148; // UAnimMontage*
		constexpr auto BlockMontage_Middle = 0x150; // UAnimMontage*
		constexpr auto BlockMontage_Right = 0x158; // UAnimMontage*
		constexpr auto BlockMontage_Up = 0x160; // UAnimMontage*
	}

	namespace n_UEnvQueryGenerator_Composite { // : UEnvQueryGenerator
		constexpr auto Generators = 0x50; // TArray<UEnvQueryGenerator*>
		constexpr auto bAllowDifferentItemTypes = 0x60; // char : 1
		constexpr auto bHasMatchingItemType = 0x60; // char : 1
		constexpr auto ForcedItemType = 0x68; // UEnvQueryItemType*
	}

	namespace n_UAnimCompress { // : UAnimBoneCompressionCodec
		constexpr auto bNeedsSkeleton = 0x38; // char : 1
		constexpr auto TranslationCompressionFormat = 0x3c; // AnimationCompressionFormat
		constexpr auto RotationCompressionFormat = 0x3d; // AnimationCompressionFormat
		constexpr auto ScaleCompressionFormat = 0x3e; // AnimationCompressionFormat
	}

	namespace n_AMOStaticMeshActor { // : AStaticMeshActor
		constexpr auto sDisplayName = 0x230; // FText
		constexpr auto sJournalRowNameToUnlock = 0x248; // FString
	}

	namespace n_AARSharedWorldGameMode { // : AGameMode
		constexpr auto BufferSizePerChunk = 0x308; // int32_t
	}

	namespace n_UMODataAssetPlayerBaseDefinition { // : UPrimaryDataAsset
		constexpr auto UndeadVariant = 0x30; // TSoftObjectPtr<UMODataAssetPlayerBaseDefinition>
		constexpr auto EtherworldMaterial = 0x58; // UMaterialInterface*
		constexpr auto EtherworldParticleEffect = 0x60; // UNiagaraSystem*
		constexpr auto vFurColors = 0x68; // TArray<FColor>
		constexpr auto pFurPreviewMaterial = 0x78; // UMaterialInterface*
		constexpr auto iDefaultSkinDecorationIndexA = 0x80; // int32_t
		constexpr auto iDefaultSkinDecorationIndexB = 0x84; // int32_t
		constexpr auto iDefaultSkinDecorationIndexC = 0x88; // int32_t
		constexpr auto vEyeColors = 0x90; // TArray<FColor>
		constexpr auto iDefaultEyeColorIndex = 0xa0; // int32_t
		constexpr auto pEyePreviewMaterial = 0xa8; // UMaterialInterface*
		constexpr auto vSkinColors = 0xb0; // TArray<FColor>
		constexpr auto iDefaultSkinColorIndex = 0xc0; // int32_t
		constexpr auto pSkinPreviewMaterial = 0xc8; // UMaterialInterface*
		constexpr auto vHairColors = 0xd0; // TArray<FColor>
		constexpr auto iDefaultHairColorIndex = 0xe0; // int32_t
		constexpr auto pHairPreviewMaterial = 0xe8; // UMaterialInterface*
		constexpr auto iDefaultFaceTattooIndex = 0xf0; // int32_t
		constexpr auto iDefaultBodyTattooIndex = 0xf4; // int32_t
		constexpr auto Species = 0xf8; // ESpecies
		constexpr auto Sex = 0xf9; // ESex
		constexpr auto fPenisScale = 0xfc; // float
		constexpr auto fDefaultLength = 0x100; // float
		constexpr auto fSkeletalMeshBaseHeight = 0x104; // float
		constexpr auto pHeadScaleByHeightCurve = 0x108; // UCurveFloat*
		constexpr auto LowDetailProxyMesh = 0x110; // USkeletalMesh*
		constexpr auto LowDetailProxyMaterial = 0x118; // UMaterialInterface*
		constexpr auto DefaultHead = 0x120; // USkeletalMesh*
		constexpr auto HeadAnimClass = 0x128; // UAnimInstance*
		constexpr auto HeadSkinMaterial = 0x130; // UMaterialInterface*
		constexpr auto EyesMaterial = 0x138; // UMaterialInterface*
		constexpr auto EyesAOMaterial = 0x140; // UMaterialInterface*
		constexpr auto FaceTattooMaterial = 0x148; // UMaterialInterface*
		constexpr auto HeadPoseAsset = 0x150; // UPoseAsset*
		constexpr auto HeadARKitPoses = 0x158; // UPoseAsset*
		constexpr auto HeadCustomizationShapes = 0x160; // UPoseAsset*
		constexpr auto Hairstyles = 0x168; // TArray<TSoftObjectPtr<UMODataAssetHair>>
		constexpr auto Beards = 0x178; // TArray<TSoftObjectPtr<UMODataAssetHair>>
		constexpr auto DefaultBody = 0x188; // USkeletalMesh*
		constexpr auto BodyAnimClass = 0x190; // UAnimInstance*
		constexpr auto BodySkinMaterial = 0x198; // UMaterialInterface*
		constexpr auto BodyTattooMaterial = 0x1a0; // UMaterialInterface*
		constexpr auto PhysicsAsset = 0x1a8; // UPhysicsAsset*
		constexpr auto PaperdollBodyAnimClass = 0x1b0; // UAnimInstance*
		constexpr auto BodyProportionsBaseSequence = 0x1b8; // UAnimSequenceBase*
		constexpr auto BodyProportionsPoseAsset = 0x1c0; // UPoseAsset*
		constexpr auto BodyHairTextures = 0x1c8; // TArray<UTexture*>
		constexpr auto HeadFurMaterial = 0x1d8; // UMaterialInterface*
		constexpr auto HeadFurMesh = 0x1e0; // USkeletalMesh*
		constexpr auto HeadFurSplines = 0x1e8; // UFurSplines*
		constexpr auto HeadFurParameters = 0x1f0; // FMOGFurParameters
		constexpr auto BodyFurMaterial = 0x248; // UMaterialInterface*
		constexpr auto BodyFurMesh = 0x250; // USkeletalMesh*
		constexpr auto BodyFurSplines = 0x258; // UFurSplines*
		constexpr auto BodyFurParameters = 0x260; // FMOGFurParameters
		constexpr auto WalkBaseSpeed = 0x2b8; // float
		constexpr auto RunBaseSpeed = 0x2bc; // float
		constexpr auto SprintBaseSpeed = 0x2c0; // float
		constexpr auto IdleVariations = 0x2c8; // UMODataAssetAnimationRandomSet*
		constexpr auto IdleVariations_FP = 0x2d0; // UMODataAssetAnimationRandomSet*
		constexpr auto IdleVariations_NPC = 0x2d8; // UMODataAssetAnimationRandomSet*
		constexpr auto WalkBlendspace = 0x2e0; // UBlendSpaceBase*
		constexpr auto RunBlendspace = 0x2e8; // UBlendSpaceBase*
		constexpr auto Sprint = 0x2f0; // UAnimSequenceBase*
		constexpr auto WeaponAnimationSet_Unarmed = 0x2f8; // TSoftObjectPtr<UMODataAssetWeaponAnimations>
		constexpr auto WeaponAnimationSet_Axe1H = 0x320; // TSoftObjectPtr<UMODataAssetWeaponAnimations>
		constexpr auto WeaponAnimationSet_Axe2H = 0x348; // TSoftObjectPtr<UMODataAssetWeaponAnimations>
		constexpr auto WeaponAnimationSet_Dagger = 0x370; // TSoftObjectPtr<UMODataAssetWeaponAnimations>
		constexpr auto WeaponAnimationSet_Hammer1H = 0x398; // TSoftObjectPtr<UMODataAssetWeaponAnimations>
		constexpr auto WeaponAnimationSet_Hammer2H = 0x3c0; // TSoftObjectPtr<UMODataAssetWeaponAnimations>
		constexpr auto WeaponAnimationSet_PoleAxe = 0x3e8; // TSoftObjectPtr<UMODataAssetWeaponAnimations>
		constexpr auto WeaponAnimationSet_PoleSword = 0x410; // TSoftObjectPtr<UMODataAssetWeaponAnimations>
		constexpr auto WeaponAnimationSet_Spear = 0x438; // TSoftObjectPtr<UMODataAssetWeaponAnimations>
		constexpr auto WeaponAnimationSet_Sword1H = 0x460; // TSoftObjectPtr<UMODataAssetWeaponAnimations>
		constexpr auto WeaponAnimationSet_Sword2H = 0x488; // TSoftObjectPtr<UMODataAssetWeaponAnimations>
		constexpr auto WeaponAnimationSet_Lance = 0x4b0; // TSoftObjectPtr<UMODataAssetWeaponAnimations>
		constexpr auto WeaponAnimationSet_Bow = 0x4d8; // TSoftObjectPtr<UMODataAssetWeaponAnimations>
		constexpr auto MagicAnimationSet_Ecumenical = 0x500; // TSoftObjectPtr<UMODataAssetMagicAnimations>
		constexpr auto MagicAnimationSet_Spiritism = 0x528; // TSoftObjectPtr<UMODataAssetMagicAnimations>
		constexpr auto MagicAnimationSet_Necromancy = 0x550; // TSoftObjectPtr<UMODataAssetMagicAnimations>
		constexpr auto MagicAnimationSet_Elementalism = 0x578; // TSoftObjectPtr<UMODataAssetMagicAnimations>
		constexpr auto Ethercombat = 0x5a0; // UMODataAssetEtherCombat*
		constexpr auto FishingAnimationSet = 0x5a8; // TSoftObjectPtr<UMODataAssetFishingAnimations>
		constexpr auto pTattooDefinitions = 0x5d0; // UMODataAssetTattooDefinitions*
		constexpr auto pEmotes = 0x5d8; // UMODataAssetEmoteDefinitions*
		constexpr auto pSkillAnimations = 0x5e0; // UMODataAssetSkillAnimationDefinitions*
		constexpr auto MountedIdleVariations = 0x5e8; // UMODataAssetAnimationRandomSet*
		constexpr auto MountedIdleVariations_FP = 0x5f0; // UMODataAssetAnimationRandomSet*
		constexpr auto MountedIdleVariations_NPC = 0x5f8; // UMODataAssetAnimationRandomSet*
		constexpr auto Mounted_Mount_Left = 0x600; // UAnimSequenceBase*
		constexpr auto Mounted_Mount_Right = 0x608; // UAnimSequenceBase*
		constexpr auto Mounted_Dismount_Left = 0x610; // UAnimSequenceBase*
		constexpr auto Mounted_Dismount_Right = 0x618; // UAnimSequenceBase*
		constexpr auto ReactionSequences = 0x620; // FMOAnimationSequenceReactions
		constexpr auto pSoundCue_Pain = 0x660; // USoundCue*
		constexpr auto pSoundCue_Death = 0x668; // USoundCue*
		constexpr auto pSoundCue_HeavyBreathing = 0x670; // USoundCue*
		constexpr auto pSoundCue_Gasp = 0x678; // USoundCue*
		constexpr auto pSoundCue_Drown = 0x680; // USoundCue*
		constexpr auto pSoundCue_Push = 0x688; // USoundCue*
		constexpr auto pSoundCue_MercyModeSound = 0x690; // USoundCue*
		constexpr auto pSoundCue_JumpStart = 0x698; // USoundCue*
		constexpr auto pSoundCue_JumpEnd = 0x6a0; // USoundCue*
		constexpr auto pSoundCue_FastSwing = 0x6a8; // USoundCue*
		constexpr auto pSoundCue_FullChargedSwing = 0x6b0; // USoundCue*
		constexpr auto pSoundCue_HardChargedSwing = 0x6b8; // USoundCue*
		constexpr auto pSoundCue_BattleCry = 0x6c0; // USoundCue*
		constexpr auto pSoundCue_KauBeam = 0x6c8; // USoundCue*
		constexpr auto pSoundCue_GoreLimbRemoved = 0x6d0; // USoundCue*
		constexpr auto pSoundCue_GorePiercingDeath = 0x6d8; // USoundCue*
		constexpr auto pSoundCue_GoreBluntDeath = 0x6e0; // USoundCue*
		constexpr auto pSoundCue_GoreBowDeath = 0x6e8; // USoundCue*
		constexpr auto bAnimationsArePreloaded = 0x6f0; // bool
		constexpr auto PreloadedWeaponAnimations = 0x6f8; // TArray<UMODataAssetWeaponAnimations*>
		constexpr auto PreloadedMagicAnimations = 0x708; // TArray<UMODataAssetMagicAnimations*>
	}

	namespace n_ABrush { // : AActor
		constexpr auto BrushType = 0x220; // EBrushType
		constexpr auto BrushColor = 0x224; // FColor
		constexpr auto PolyFlags = 0x228; // int32_t
		constexpr auto bColored = 0x22c; // char : 1
		constexpr auto bSolidWhenSelected = 0x22c; // char : 1
		constexpr auto bPlaceableFromClassBrowser = 0x22c; // char : 1
		constexpr auto bNotForClientOrServer = 0x22c; // char : 1
		constexpr auto Brush = 0x230; // UModel*
		constexpr auto BrushComponent = 0x238; // UBrushComponent*
		constexpr auto bInManipulation = 0x240; // char : 1
		constexpr auto SavedSelections = 0x248; // TArray<FGeomSelection>
	}

	namespace n_UMaterialExpressionFresnel { // : UMaterialExpression
		constexpr auto ExponentIn = 0x40; // FExpressionInput
		constexpr auto Exponent = 0x54; // float
		constexpr auto BaseReflectFractionIn = 0x58; // FExpressionInput
		constexpr auto BaseReflectFraction = 0x6c; // float
		constexpr auto Normal = 0x70; // FExpressionInput
	}

	namespace n_UMOQuestEntry { // : UMOUserWidget
		constexpr auto pTitleText = 0x2c8; // UTextBlock*
		constexpr auto pTaskVerticalBox = 0x2d0; // UVerticalBox*
		constexpr auto cMOQuestTaskEntry = 0x2d8; // UMOQuestTaskEntry*
		constexpr auto pQuestWidgetOwner = 0x2e0; // UMOQuestWidget*
		constexpr auto pQuestIcon = 0x2e8; // UImage*
		constexpr auto bQuestFocused = 0x2f0; // bool
		constexpr auto vQuestTasks = 0x2f8; // TArray<UMOQuestTaskEntry*>
	}

	namespace n_UAnimNotify_PlayParticleEffect { // : UAnimNotify
		constexpr auto PSTemplate = 0x38; // UParticleSystem*
		constexpr auto LocationOffset = 0x40; // FVector
		constexpr auto RotationOffset = 0x4c; // FRotator
		constexpr auto Scale = 0x58; // FVector
		constexpr auto Attached = 0x80; // char : 1
		constexpr auto SocketName = 0x84; // FName
	}

	namespace n_UParticleModuleLifetime_Seeded { // : UParticleModuleLifetime
		constexpr auto RandomSeedInfo = 0x60; // FParticleRandomSeedInfo
	}

	namespace n_UMOAlchemy { // : UMOUserWidget
		constexpr auto pMOButton_Alchemy = 0x2c8; // UMOButtonMedium*
		constexpr auto pItemSlotPlaceItem_Resource = 0x2d0; // UMOItemSlotPlaceItem*
		constexpr auto pItemSlotPlaceItem_IngredientSlot_1 = 0x2d8; // UMOItemSlotPlaceItem*
		constexpr auto pItemSlotPlaceItem_IngredientSlot_2 = 0x2e0; // UMOItemSlotPlaceItem*
		constexpr auto pItemSlotPlaceItem_IngredientSlot_3 = 0x2e8; // UMOItemSlotPlaceItem*
		constexpr auto pItemSlotPlaceItem_IngredientSlot_4 = 0x2f0; // UMOItemSlotPlaceItem*
		constexpr auto pItemSlotPlaceItem_IngredientSlot_5 = 0x2f8; // UMOItemSlotPlaceItem*
		constexpr auto pItemSlotPlaceItem_IngredientSlot_6 = 0x300; // UMOItemSlotPlaceItem*
		constexpr auto pItemSlotPlaceItem_IngredientSlot_7 = 0x308; // UMOItemSlotPlaceItem*
		constexpr auto pItemSlotPlaceItem_IngredientSlot_8 = 0x310; // UMOItemSlotPlaceItem*
		constexpr auto pItemSlotPlaceItem_IngredientSlot_9 = 0x318; // UMOItemSlotPlaceItem*
		constexpr auto pItemSlotPlaceItem_IngredientSlot_10 = 0x320; // UMOItemSlotPlaceItem*
		constexpr auto pItemSlotPlaceItem_IngredientSlot_11 = 0x328; // UMOItemSlotPlaceItem*
		constexpr auto pItemSlotPlaceItem_IngredientSlot_12 = 0x330; // UMOItemSlotPlaceItem*
		constexpr auto pItemSlotPlaceItem_IngredientSlot_13 = 0x338; // UMOItemSlotPlaceItem*
		constexpr auto pItemSlotPlaceItem_IngredientSlot_14 = 0x340; // UMOItemSlotPlaceItem*
		constexpr auto pItemSlotPlaceItem_IngredientSlot_15 = 0x348; // UMOItemSlotPlaceItem*
		constexpr auto pItemSlotPlaceItem_IngredientSlot_16 = 0x350; // UMOItemSlotPlaceItem*
		constexpr auto pSlot_000 = 0x358; // UImage*
		constexpr auto pSlot_001 = 0x360; // UImage*
		constexpr auto pSlot_002 = 0x368; // UImage*
		constexpr auto pSlot_003 = 0x370; // UImage*
		constexpr auto pSlot_101 = 0x378; // UImage*
		constexpr auto pSlot_102 = 0x380; // UImage*
		constexpr auto pSlot_103 = 0x388; // UImage*
		constexpr auto pSlot_104 = 0x390; // UImage*
		constexpr auto pSlot_105 = 0x398; // UImage*
		constexpr auto pSlot_106 = 0x3a0; // UImage*
		constexpr auto pSlot_107 = 0x3a8; // UImage*
		constexpr auto pSlot_108 = 0x3b0; // UImage*
		constexpr auto pSlot_109 = 0x3b8; // UImage*
		constexpr auto pSlot_110 = 0x3c0; // UImage*
		constexpr auto pSlot_111 = 0x3c8; // UImage*
		constexpr auto pSlot_112 = 0x3d0; // UImage*
		constexpr auto vIngredientSlotSimplifier = 0x3e8; // TArray<UMOItemSlotPlaceItem*>
		constexpr auto vBasicIngredientsHidden = 0x3f8; // TArray<UImage*>
		constexpr auto vAdvancedIngredientsHidden = 0x408; // TArray<UImage*>
	}

	namespace n_UNiagaraLightRendererProperties { // : UNiagaraRendererProperties
		constexpr auto bUseInverseSquaredFalloff = 0x80; // char : 1
		constexpr auto bAffectsTranslucency = 0x80; // char : 1
		constexpr auto RadiusScale = 0x84; // float
		constexpr auto ColorAdd = 0x88; // FVector
		constexpr auto LightRenderingEnabledBinding = 0x98; // FNiagaraVariableAttributeBinding
		constexpr auto LightExponentBinding = 0xf0; // FNiagaraVariableAttributeBinding
		constexpr auto PositionBinding = 0x148; // FNiagaraVariableAttributeBinding
		constexpr auto ColorBinding = 0x1a0; // FNiagaraVariableAttributeBinding
		constexpr auto RadiusBinding = 0x1f8; // FNiagaraVariableAttributeBinding
		constexpr auto VolumetricScatteringBinding = 0x250; // FNiagaraVariableAttributeBinding
	}

	namespace n_UBTDecorator_Loop { // : UBTDecorator
		constexpr auto NumLoops = 0x68; // int32_t
		constexpr auto bInfiniteLoop = 0x6c; // bool
		constexpr auto InfiniteLoopTimeoutTime = 0x70; // float
	}

	namespace n_USizeBox { // : UContentWidget
		constexpr auto WidthOverride = 0x130; // float
		constexpr auto HeightOverride = 0x134; // float
		constexpr auto MinDesiredWidth = 0x138; // float
		constexpr auto MinDesiredHeight = 0x13c; // float
		constexpr auto MaxDesiredWidth = 0x140; // float
		constexpr auto MaxDesiredHeight = 0x144; // float
		constexpr auto MinAspectRatio = 0x148; // float
		constexpr auto MaxAspectRatio = 0x14c; // float
		constexpr auto bOverride_WidthOverride = 0x150; // char : 1
		constexpr auto bOverride_HeightOverride = 0x150; // char : 1
		constexpr auto bOverride_MinDesiredWidth = 0x150; // char : 1
		constexpr auto bOverride_MinDesiredHeight = 0x150; // char : 1
		constexpr auto bOverride_MaxDesiredWidth = 0x150; // char : 1
		constexpr auto bOverride_MaxDesiredHeight = 0x150; // char : 1
		constexpr auto bOverride_MinAspectRatio = 0x150; // char : 1
		constexpr auto bOverride_MaxAspectRatio = 0x150; // char : 1
	}

	namespace n_UMODataAssetFishingRodDefinitions { // : UPrimaryDataAsset
		constexpr auto pFallBackFishingRod = 0x30; // UMODataAssetFishingRod*
		constexpr auto pSharedData = 0x38; // UMODataAssetEquipmentShared*
		constexpr auto vFishingRods = 0x40; // TArray<UMODataAssetFishingRod*>
	}

	namespace n_AMOEquipmentActorTwoPart { // : AMOEquipmentActor
		constexpr auto HandleComponent = 0x288; // UStaticMeshComponent*
		constexpr auto HeadComponent = 0x290; // UStaticMeshComponent*
		constexpr auto bTraceUsingHead = 0x298; // bool
		constexpr auto LocalHeadTracePositions = 0x2a0; // TArray<FVector>
		constexpr auto HandleMID = 0x2b0; // UMaterialInstanceDynamic*
		constexpr auto HeadMID = 0x2b8; // UMaterialInstanceDynamic*
	}

	namespace n_UAssetManagerSettings { // : UDeveloperSettings
		constexpr auto PrimaryAssetTypesToScan = 0x38; // TArray<FPrimaryAssetTypeInfo>
		constexpr auto DirectoriesToExclude = 0x48; // TArray<FDirectoryPath>
		constexpr auto PrimaryAssetRules = 0x58; // TArray<FPrimaryAssetRulesOverride>
		constexpr auto CustomPrimaryAssetRules = 0x68; // TArray<FPrimaryAssetRulesCustomOverride>
		constexpr auto bOnlyCookProductionAssets = 0x78; // bool
		constexpr auto bShouldManagerDetermineTypeAndName = 0x79; // bool
		constexpr auto bShouldGuessTypeAndNameInEditor = 0x7a; // bool
		constexpr auto bShouldAcquireMissingChunksOnLoad = 0x7b; // bool
		constexpr auto PrimaryAssetIdRedirects = 0x80; // TArray<FAssetManagerRedirect>
		constexpr auto PrimaryAssetTypeRedirects = 0x90; // TArray<FAssetManagerRedirect>
		constexpr auto AssetPathRedirects = 0xa0; // TArray<FAssetManagerRedirect>
		constexpr auto MetaDataTagsForAssetRegistry = 0xb0; // TSet<FName>
	}

	namespace n_UWidgetSwitcherSlot { // : UPanelSlot
		constexpr auto Padding = 0x40; // FMargin
		constexpr auto HorizontalAlignment = 0x50; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x51; // EVerticalAlignment
	}

	namespace n_UPoseAsset { // : UAnimationAsset
		constexpr auto PoseContainer = 0x80; // FPoseDataContainer
		constexpr auto bAdditivePose = 0x110; // bool
		constexpr auto BasePoseIndex = 0x114; // int32_t
		constexpr auto RetargetSource = 0x118; // FName
	}

	namespace n_UMOCraftingSliderWidget { // : UUserWidget
		constexpr auto pMOSlider = 0x260; // UMOSlider*
	}

	namespace n_UMaterialExpressionDistance { // : UMaterialExpression
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_ULightComponentBase { // : USceneComponent
		constexpr auto LightGuid = 0x1f8; // FGuid
		constexpr auto Brightness = 0x208; // float
		constexpr auto Intensity = 0x20c; // float
		constexpr auto LightColor = 0x210; // FColor
		constexpr auto bAffectsWorld = 0x214; // char : 1
		constexpr auto CastShadows = 0x214; // char : 1
		constexpr auto CastStaticShadows = 0x214; // char : 1
		constexpr auto CastDynamicShadows = 0x214; // char : 1
		constexpr auto bAffectTranslucentLighting = 0x214; // char : 1
		constexpr auto bTransmission = 0x214; // char : 1
		constexpr auto bCastVolumetricShadow = 0x214; // char : 1
		constexpr auto bCastDeepShadow = 0x214; // char : 1
		constexpr auto bCastRaytracedShadow = 0x215; // char : 1
		constexpr auto bAffectReflection = 0x215; // char : 1
		constexpr auto bAffectGlobalIllumination = 0x215; // char : 1
		constexpr auto DeepShadowLayerDistribution = 0x218; // float
		constexpr auto IndirectLightingIntensity = 0x21c; // float
		constexpr auto VolumetricScatteringIntensity = 0x220; // float
		constexpr auto SamplesPerPixel = 0x224; // int32_t
	}

	namespace n_USoundNodeModulator { // : USoundNode
		constexpr auto PitchMin = 0x48; // float
		constexpr auto PitchMax = 0x4c; // float
		constexpr auto VolumeMin = 0x50; // float
		constexpr auto VolumeMax = 0x54; // float
	}

	namespace n_UMovieSceneParticleSection { // : UMovieSceneSection
		constexpr auto ParticleKeys = 0xe8; // FMovieSceneParticleChannel
	}

	namespace n_UWB_TabButtonNewImage_C { // : UMOUserWidgetTabButtonNew
		constexpr auto UberGraphFrame = 0x310; // FPointerToUberGraphFrame
		constexpr auto ImageHovered = 0x318; // UImage*
		constexpr auto ImageIcon = 0x320; // UImage*
		constexpr auto ImagePressed = 0x328; // UImage*
		constexpr auto Texture = 0x330; // UTexture2D*
		constexpr auto TextureSelected = 0x338; // UTexture2D*
	}

	namespace n_AMODecorationActor { // : AMOStaticMeshActorUse
		constexpr auto pHouse = 0x2b0; // AMOAvatarStaticMeshBuildableHouse*
		constexpr auto pRemoveComponent = 0x2b8; // UStaticMeshComponent*
		constexpr auto bIsChest = 0x2c0; // bool
	}

	namespace n_USubmixEffectFilterPreset { // : USoundEffectSubmixPreset
		constexpr auto Settings = 0x9c; // FSubmixEffectFilterSettings
	}

	namespace n_AMOTriggerVolumeJournal { // : AMOTriggerVolume
		constexpr auto sJournalRowNameToUnlock = 0x258; // FString
	}

	namespace n_UMOCharCreationAppearancePanel { // : UMOCharCreationPanel
		constexpr auto OnShowFaceCustomization = 0x2d0; // FMulticastInlineDelegate
		constexpr auto FaceTattooMap = 0x2e0; // TMap<int32_t, UMODataAssetTattoo*>
		constexpr auto BodyTattooMap = 0x330; // TMap<int32_t, UMODataAssetTattoo*>
		constexpr auto pFaceTattoo = 0x380; // UMODataAssetTattoo*
		constexpr auto pBodyTattoo = 0x388; // UMODataAssetTattoo*
		constexpr auto eFaceTattooStyle = 0x390; // ETattooEffectType
		constexpr auto eBodyTattooStyle = 0x391; // ETattooEffectType
		constexpr auto vFaceTattooStyles = 0x398; // TArray<ETattooEffectType>
		constexpr auto vBodyTattooStyles = 0x3a8; // TArray<ETattooEffectType>
		constexpr auto iPreviousValue_SkinDecorationA = 0x3b8; // int32_t
		constexpr auto iPreviousValue_SkinDecorationB = 0x3bc; // int32_t
		constexpr auto iPreviousValue_SkinDecorationC = 0x3c0; // int32_t
		constexpr auto pMOButton_EnableFaceCustomization = 0x3c8; // UMOButtonLarge*
		constexpr auto pCarouselSelect_HairStyle = 0x3d0; // UMOCarouselSelectValue*
		constexpr auto pCarouselSelect_Beard = 0x3d8; // UMOCarouselSelectValue*
		constexpr auto pVerticalBox_Tattoo = 0x3e0; // UVerticalBox*
		constexpr auto pCarouselSelect_FaceTattooType = 0x3e8; // UMOCarouselSelectText*
		constexpr auto pCarouselSelect_BodyTattooType = 0x3f0; // UMOCarouselSelectText*
		constexpr auto pCarouselSelect_FaceTattoo = 0x3f8; // UMOCarouselSelectValue*
		constexpr auto pCarouselSelect_BodyTattoo = 0x400; // UMOCarouselSelectValue*
		constexpr auto pCarouselSelect_FaceTattooStyle = 0x408; // UMOCarouselSelectText*
		constexpr auto pCarouselSelect_BodyTattooStyle = 0x410; // UMOCarouselSelectText*
		constexpr auto pSlider_Weight = 0x418; // UMOOptionSliderWidget*
		constexpr auto pUniformGridPanel_SkinColors = 0x420; // UUniformGridPanel*
		constexpr auto pUniformGridPanel_HairColors = 0x428; // UUniformGridPanel*
		constexpr auto pUniformGridPanel_BeardColors = 0x430; // UUniformGridPanel*
		constexpr auto pUniformGridPanel_EyeColors = 0x438; // UUniformGridPanel*
		constexpr auto pUniformGridPanel_FaceTattooColors = 0x440; // UUniformGridPanel*
		constexpr auto pUniformGridPanel_BodyTattooColors = 0x448; // UUniformGridPanel*
		constexpr auto pSlider_SkinDecorationA = 0x450; // UMOOptionSliderWidget*
		constexpr auto pSlider_SkinDecorationB = 0x458; // UMOOptionSliderWidget*
		constexpr auto pSlider_SkinDecorationC = 0x460; // UMOOptionSliderWidget*
		constexpr auto pCarouselSelect_SkinDecorationA = 0x468; // UMOCarouselSelectText*
		constexpr auto pOverlay_SkinDecorationC = 0x470; // UOverlay*
		constexpr auto pUniformGridPanel_SkinDecorationC = 0x478; // UUniformGridPanel*
		constexpr auto cMOColorEntryClass = 0x480; // UMOCharCreationColorEntry*
		constexpr auto CMOHiddenColorEntryClass = 0x488; // UMOCharCreationColorEntry*
	}

	namespace n_UAudioBus { // : UObject
		constexpr auto AudioBusChannels = 0x28; // EAudioBusChannels
		constexpr auto bIsAutomatic = 0x29; // bool
	}

	namespace n_ULiveLinkComponent { // : UActorComponent
		constexpr auto OnLiveLinkUpdated = 0xb0; // FMulticastInlineDelegate
	}

	namespace n_AMOPlayerController { // : APlayerController
		constexpr auto pHeartBeat = 0x5f0; // USoundCue*
		constexpr auto pTakeFallDamage = 0x5f8; // USoundCue*
		constexpr auto pChargeDamageScaleCurve = 0x600; // UCurveFloat*
		constexpr auto pDayNightParamCollection = 0x608; // UMaterialParameterCollection*
		constexpr auto ControlledAvatarID = 0x614; // int32_t
		constexpr auto LeftEquipmentStats = 0x618; // FMOEquipmentStats
		constexpr auto RightEquipmentStats = 0x640; // FMOEquipmentStats
		constexpr auto bReplicateJumpInAtlas = 0x668; // bool
		constexpr auto BaseTurnRate = 0x66c; // float
		constexpr auto BaseLookUpRate = 0x670; // float
		constexpr auto bIsLoadingOrTeleporting = 0x6e8; // bool
		constexpr auto pStationaryCamera = 0x6f0; // ACameraActor*
		constexpr auto pMOGameUserSettings = 0x6f8; // UMOGameUserSettings*
		constexpr auto pUIParameterCollection = 0x700; // UMaterialParameterCollection*
		constexpr auto vClientEffects = 0x708; // TArray<UMOClientEffect*>
		constexpr auto pDataTableClientEffects = 0x718; // UDataTable*
		constexpr auto pStatManager = 0x720; // UMOStatManager*
		constexpr auto pHintManager = 0x728; // UMOHintManager*
		constexpr auto pTargetManager = 0x730; // UMOTargetManager*
		constexpr auto pCombatSystem = 0x738; // UMOCombatSystem*
		constexpr auto pLastActiveCombatSystem = 0x740; // UMOCombatSystem*
		constexpr auto pRangedCombatSystem = 0x748; // UMOCombatSystemRanged*
		constexpr auto pMeleeCombatSystem = 0x750; // UMOCombatSystemMelee*
		constexpr auto pMagicCombatSystem = 0x758; // UMOCombatSystemMagic*
		constexpr auto pFishingCombatSystem = 0x760; // UMOCombatSystemFishing*
		constexpr auto pWaypointActor = 0x768; // AActor*
		constexpr auto pPreviewMode = 0x770; // UMOPreviewMode*
		constexpr auto LoadingWidget = 0x778; // UUserWidget*
		constexpr auto pBreathingAudioComponent = 0x888; // UAudioComponent*
		constexpr auto pHeartBeatAudioComponent = 0x890; // UAudioComponent*
	}

	namespace n_UARPoseComponent { // : UARComponent
		constexpr auto ReplicatedPayload = 0x280; // FARPoseUpdatePayload
	}

	namespace n_UCompositeCurveTable { // : UCurveTable
		constexpr auto ParentTables = 0xa0; // TArray<UCurveTable*>
		constexpr auto OldParentTables = 0xb0; // TArray<UCurveTable*>
	}

	namespace n_UMOCraftingPetEquipment { // : UMOCrafting
		constexpr auto pScrollBox_ArmorSlot = 0x310; // UMOScrollBox*
		constexpr auto pScrollBox_ArmorStyle = 0x318; // UMOScrollBox*
		constexpr auto pItemSlotPlaceItem_ArmorOutsideMaterial = 0x320; // UMOItemSlotPlaceItem*
		constexpr auto pItemSlotPlaceItem_ArmorInsideMaterial = 0x328; // UMOItemSlotPlaceItem*
		constexpr auto pPreviewMaterial = 0x330; // UMaterialInstance*
		constexpr auto sArmorSlotMaterialInsideName = 0x338; // FString
		constexpr auto sArmorSlotMaterialOutsideName = 0x348; // FString
		constexpr auto sArmorSlotName = 0x358; // FString
		constexpr auto sArmorStyleName = 0x368; // FString
		constexpr auto pCraftingSlider_Inside = 0x378; // UMOCraftingSliderWidget*
		constexpr auto pCraftingSlider_Outside = 0x380; // UMOCraftingSliderWidget*
		constexpr auto vCraftingInfo_ArmorSlot = 0x398; // TArray<FPetEquipmentCraftingInfo_FamilySlot>
		constexpr auto vCraftingInfo_ArmorStyle = 0x3a8; // TArray<FPetEquipmentCraftingInfo_Style>
		constexpr auto vCraftingPetEquipmentSlotGroups = 0x3b8; // TArray<UMOCraftingListEntry*>
	}

	namespace n_UAnimSequence { // : UAnimSequenceBase
		constexpr auto NumFrames = 0xa8; // int32_t
		constexpr auto TrackToSkeletonMapTable = 0xb0; // TArray<FTrackToSkeletonMap>
		constexpr auto BoneCompressionSettings = 0xd0; // UAnimBoneCompressionSettings*
		constexpr auto CurveCompressionSettings = 0xd8; // UAnimCurveCompressionSettings*
		constexpr auto AdditiveAnimType = 0x150; // EAdditiveAnimationType
		constexpr auto RefPoseType = 0x151; // EAdditiveBasePoseType
		constexpr auto RefPoseSeq = 0x158; // UAnimSequence*
		constexpr auto RefFrameIndex = 0x160; // int32_t
		constexpr auto RetargetSource = 0x164; // FName
		constexpr auto Interpolation = 0x16c; // EAnimInterpolationType
		constexpr auto bEnableRootMotion = 0x16d; // bool
		constexpr auto RootMotionRootLock = 0x16e; // ERootMotionRootLock
		constexpr auto bForceRootLock = 0x16f; // bool
		constexpr auto bUseNormalizedRootMotionScale = 0x170; // bool
		constexpr auto bRootMotionSettingsCopiedFromMontage = 0x171; // bool
		constexpr auto AuthoredSyncMarkers = 0x178; // TArray<FAnimSyncMarker>
		constexpr auto BakedPerBoneCustomAttributeData = 0x1a0; // TArray<FBakedCustomAttributePerBoneData>
	}

	namespace n_UMovieSceneGeometryCacheTrack { // : UMovieSceneNameableTrack
		constexpr auto AnimationSections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_USubmixEffectFlexiverbPreset { // : USoundEffectSubmixPreset
		constexpr auto Settings = 0xa0; // FSubmixEffectFlexiverbSettings
	}

	namespace n_UMovieSceneControlRigParameterTrack { // : UMovieSceneNameableTrack
		constexpr auto ControlRig = 0x88; // UControlRig*
		constexpr auto SectionToKey = 0x90; // UMovieSceneSection*
		constexpr auto Sections = 0x98; // TArray<UMovieSceneSection*>
		constexpr auto TrackName = 0xa8; // FName
	}

	namespace n_UEndMatchCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionShaderStageSwitch { // : UMaterialExpression
		constexpr auto PixelShader = 0x40; // FExpressionInput
		constexpr auto VertexShader = 0x54; // FExpressionInput
	}

	namespace n_UMotoSynthSource { // : UObject
		constexpr auto bConvertTo8Bit = 0x28; // bool
		constexpr auto DownSampleFactor = 0x2c; // float
		constexpr auto RPMCurve = 0x30; // FRuntimeFloatCurve
		constexpr auto SourceData = 0xb8; // TArray<float>
		constexpr auto SourceDataPCM = 0xc8; // TArray<int16_t>
		constexpr auto SourceSampleRate = 0xd8; // int32_t
		constexpr auto GrainTable = 0xe0; // TArray<FGrainTableEntry>
	}

	namespace n_UMOUserWidgetGMTabs { // : UMOUserWidget
		constexpr auto vPanels = 0x2c8; // TArray<UMOGMCharacterButtons*>
		constexpr auto pCurrentPanel = 0x2d8; // UMOGMCharacterButtons*
		constexpr auto pPanelTabButton_Teleport = 0x2e0; // UMOUserWidgetTabButtonNew*
		constexpr auto pGMTabsPanel_Teleport = 0x2e8; // UMOGMCharacterButtons*
		constexpr auto pPanelTabButton_VoipChat = 0x2f0; // UMOUserWidgetTabButtonNew*
		constexpr auto pGMTabsPanel_VoipChat = 0x2f8; // UMOGMCharacterButtons*
		constexpr auto pPanelTabButton_UserActions = 0x300; // UMOUserWidgetTabButtonNew*
		constexpr auto pGMTabsPanel_UserActions = 0x308; // UMOGMCharacterButtons*
		constexpr auto pPanelTabButton_QoL = 0x310; // UMOUserWidgetTabButtonNew*
		constexpr auto pGMTabsPanel_QoL = 0x318; // UMOGMCharacterButtons*
		constexpr auto pPanelTabButton_Logs = 0x320; // UMOUserWidgetTabButtonNew*
		constexpr auto pGMTabsPanel_Logs = 0x328; // UMOGMCharacterButtons*
		constexpr auto pPanelTabButton_Houses = 0x330; // UMOUserWidgetTabButtonNew*
		constexpr auto pGMTabsPanel_Houses = 0x338; // UMOGMCharacterButtons*
		constexpr auto pPanelTabButton_Ai = 0x340; // UMOUserWidgetTabButtonNew*
		constexpr auto pGMTabsPanel_Ai = 0x348; // UMOGMCharacterButtons*
		constexpr auto pPanelTabButton_Pets = 0x350; // UMOUserWidgetTabButtonNew*
		constexpr auto pGMTabsPanel_Pets = 0x358; // UMOGMCharacterButtons*
		constexpr auto pMOGMHUD = 0x360; // UMOGMHUD*
	}

	namespace n_USequenceCameraShakeCameraStandIn { // : UObject
		constexpr auto FieldOfView = 0x30; // float
	}

	namespace n_UMOSaveGame { // : USaveGame
		constexpr auto sData = 0x28; // FMOSaveData
	}

	namespace n_UInteractiveToolPropertySet { // : UObject
		constexpr auto CachedProperties = 0x38; // UInteractiveToolPropertySet*
		constexpr auto bIsPropertySetEnabled = 0x40; // bool
	}

	namespace n_UMaterialExpressionDynamicParameter { // : UMaterialExpression
		constexpr auto ParamNames = 0x40; // TArray<FString>
		constexpr auto DefaultValue = 0x50; // FLinearColor
		constexpr auto ParameterIndex = 0x60; // uint32_t
	}

	namespace n_UTireConfig { // : UDataAsset
		constexpr auto FrictionScale = 0x30; // float
		constexpr auto TireFrictionScales = 0x38; // TArray<FTireConfigMaterialFriction>
	}

	namespace n_UMOFrameBase { // : UMOUserWidget
		constexpr auto vFlagIcons = 0x2c8; // TArray<UTexture2D*>
		constexpr auto pTextBlockCharacterName = 0x2d8; // UTextBlock*
		constexpr auto pProgressBarHealth = 0x2e0; // UMOUserWidgetProgressBar*
		constexpr auto pTextBlockHealth = 0x2e8; // UTextBlock*
		constexpr auto pCriminalImage = 0x2f0; // UImage*
		constexpr auto pVoipIcon = 0x2f8; // UImage*
		constexpr auto pFrameBorder = 0x308; // UBorder*
	}

	namespace n_UMOTooltipSkill { // : UUserWidget
		constexpr auto pOverlay = 0x260; // UOverlay*
		constexpr auto pDisplaynameText = 0x268; // UTextBlock*
		constexpr auto pDescriptionText = 0x270; // UTextBlock*
		constexpr auto pUseDescriptionText = 0x278; // UTextBlock*
		constexpr auto pMyGridPanel = 0x280; // UGridPanel*
	}

	namespace n_UParticleModuleSpawn { // : UParticleModuleSpawnBase
		constexpr auto Rate = 0x38; // FRawDistributionFloat
		constexpr auto RateScale = 0x68; // FRawDistributionFloat
		constexpr auto ParticleBurstMethod = 0x98; // EParticleBurstMethod
		constexpr auto BurstList = 0xa0; // TArray<FParticleBurst>
		constexpr auto BurstScale = 0xb0; // FRawDistributionFloat
		constexpr auto bApplyGlobalSpawnRateScale = 0xe0; // char : 1
	}

	namespace n_UInterpTrackInstSound { // : UInterpTrackInst
		constexpr auto LastUpdatePosition = 0x28; // float
		constexpr auto PlayAudioComp = 0x30; // UAudioComponent*
	}

	namespace n_UAnimSet { // : UObject
		constexpr auto bAnimRotationOnly = 0x28; // char : 1
		constexpr auto TrackBoneNames = 0x30; // TArray<FName>
		constexpr auto LinkupCache = 0x40; // TArray<FAnimSetMeshLinkup>
		constexpr auto BoneUseAnimTranslation = 0x50; // TArray<char>
		constexpr auto ForceUseMeshTranslation = 0x60; // TArray<char>
		constexpr auto UseTranslationBoneNames = 0x70; // TArray<FName>
		constexpr auto ForceMeshTranslationBoneNames = 0x80; // TArray<FName>
		constexpr auto PreviewSkelMeshName = 0x90; // FName
		constexpr auto BestRatioSkelMeshName = 0x98; // FName
	}

	namespace n_UMovieSceneStringSection { // : UMovieSceneSection
		constexpr auto StringCurve = 0xe8; // FMovieSceneStringChannel
	}

	namespace n_UAnimNotify_PlayMontageNotifyWindow { // : UAnimNotifyState
		constexpr auto NotifyName = 0x30; // FName
	}

	namespace n_UARSessionConfig { // : UDataAsset
		constexpr auto bGenerateMeshDataFromTrackedGeometry = 0x30; // bool
		constexpr auto bGenerateCollisionForMeshData = 0x31; // bool
		constexpr auto bGenerateNavMeshForMeshData = 0x32; // bool
		constexpr auto bUseMeshDataForOcclusion = 0x33; // bool
		constexpr auto bRenderMeshDataInWireframe = 0x34; // bool
		constexpr auto bTrackSceneObjects = 0x35; // bool
		constexpr auto bUsePersonSegmentationForOcclusion = 0x36; // bool
		constexpr auto bUseSceneDepthForOcclusion = 0x37; // bool
		constexpr auto bUseAutomaticImageScaleEstimation = 0x38; // bool
		constexpr auto bUseStandardOnboardingUX = 0x39; // bool
		constexpr auto WorldAlignment = 0x3a; // EARWorldAlignment
		constexpr auto SessionType = 0x3b; // EARSessionType
		constexpr auto PlaneDetectionMode = 0x3c; // EARPlaneDetectionMode
		constexpr auto bHorizontalPlaneDetection = 0x3d; // bool
		constexpr auto bVerticalPlaneDetection = 0x3e; // bool
		constexpr auto bEnableAutoFocus = 0x3f; // bool
		constexpr auto LightEstimationMode = 0x40; // EARLightEstimationMode
		constexpr auto FrameSyncMode = 0x41; // EARFrameSyncMode
		constexpr auto bEnableAutomaticCameraOverlay = 0x42; // bool
		constexpr auto bEnableAutomaticCameraTracking = 0x43; // bool
		constexpr auto bResetCameraTracking = 0x44; // bool
		constexpr auto bResetTrackedObjects = 0x45; // bool
		constexpr auto CandidateImages = 0x48; // TArray<UARCandidateImage*>
		constexpr auto MaxNumSimultaneousImagesTracked = 0x58; // int32_t
		constexpr auto EnvironmentCaptureProbeType = 0x5c; // EAREnvironmentCaptureProbeType
		constexpr auto WorldMapData = 0x60; // TArray<char>
		constexpr auto CandidateObjects = 0x70; // TArray<UARCandidateObject*>
		constexpr auto DesiredVideoFormat = 0x80; // FARVideoFormat
		constexpr auto bUseOptimalVideoFormat = 0x8c; // bool
		constexpr auto FaceTrackingDirection = 0x8d; // EARFaceTrackingDirection
		constexpr auto FaceTrackingUpdate = 0x8e; // EARFaceTrackingUpdate
		constexpr auto MaxNumberOfTrackedFaces = 0x90; // int32_t
		constexpr auto SerializedARCandidateImageDatabase = 0x98; // TArray<char>
		constexpr auto EnabledSessionTrackingFeature = 0xa8; // EARSessionTrackingFeature
		constexpr auto SceneReconstructionMethod = 0xa9; // EARSceneReconstruction
		constexpr auto PlaneComponentClass = 0xb0; // UARPlaneComponent*
		constexpr auto PointComponentClass = 0xb8; // UARPointComponent*
		constexpr auto FaceComponentClass = 0xc0; // UARFaceComponent*
		constexpr auto ImageComponentClass = 0xc8; // UARImageComponent*
		constexpr auto QRCodeComponentClass = 0xd0; // UARQRCodeComponent*
		constexpr auto PoseComponentClass = 0xd8; // UARPoseComponent*
		constexpr auto EnvironmentProbeComponentClass = 0xe0; // UAREnvironmentProbeComponent*
		constexpr auto ObjectComponentClass = 0xe8; // UARObjectComponent*
		constexpr auto MeshComponentClass = 0xf0; // UARMeshComponent*
		constexpr auto GeoAnchorComponentClass = 0xf8; // UARGeoAnchorComponent*
		constexpr auto DefaultMeshMaterial = 0x100; // UMaterialInterface*
		constexpr auto DefaultWireframeMeshMaterial = 0x108; // UMaterialInterface*
	}

	namespace n_ASkeletalMeshActor { // : AActor
		constexpr auto bShouldDoAnimNotifies = 0x228; // char : 1
		constexpr auto bWakeOnLevelStart = 0x228; // char : 1
		constexpr auto SkeletalMeshComponent = 0x230; // USkeletalMeshComponent*
		constexpr auto ReplicatedMesh = 0x238; // USkeletalMesh*
		constexpr auto ReplicatedPhysAsset = 0x240; // UPhysicsAsset*
		constexpr auto ReplicatedMaterial0 = 0x248; // UMaterialInterface*
		constexpr auto ReplicatedMaterial1 = 0x250; // UMaterialInterface*
	}

	namespace n_UParticleModuleCameraOffset { // : UParticleModuleCameraBase
		constexpr auto CameraOffset = 0x30; // FRawDistributionFloat
		constexpr auto bSpawnTimeOnly = 0x60; // char : 1
		constexpr auto UpdateMethod = 0x64; // EParticleCameraOffsetUpdateMethod
	}

	namespace n_AMOEquipmentActor { // : AActor
		constexpr auto SceneRootComponent = 0x220; // USceneComponent*
		constexpr auto ProjectileMovementComponent = 0x228; // UMOProjectileMovementComponent*
		constexpr auto EquipmentGroup = 0x230; // EEquipmentGroup
		constexpr auto bLocalTracePositionsNeedUpdate = 0x231; // bool
		constexpr auto LocalTracePositions = 0x238; // TArray<FVector>
		constexpr auto bAutoActivateExtraComponents = 0x248; // bool
		constexpr auto AudioComponents = 0x250; // TArray<UAudioComponent*>
		constexpr auto NiagaraComponents = 0x260; // TArray<UNiagaraComponent*>
		constexpr auto PointLightComponents = 0x270; // TArray<UPointLightComponent*>
		constexpr auto TrailsActiveDurationTimer = 0x280; // FTimerHandle
	}

	namespace n_URuntimeVirtualTextureComponent { // : USceneComponent
		constexpr auto BoundsAlignActor = 0x1f8; // TSoftObjectPtr<AActor>
		constexpr auto bSetBoundsButton = 0x220; // bool
		constexpr auto bSnapBoundsToLandscape = 0x221; // bool
		constexpr auto VirtualTexture = 0x228; // URuntimeVirtualTexture*
		constexpr auto bEnableScalability = 0x230; // bool
		constexpr auto ScalabilityGroup = 0x234; // uint32_t
		constexpr auto bHidePrimitives = 0x238; // bool
		constexpr auto StreamingTexture = 0x240; // UVirtualTextureBuilder*
		constexpr auto StreamLowMips = 0x248; // int32_t
		constexpr auto bBuildStreamingMipsButton = 0x24c; // bool
		constexpr auto bEnableCompressCrunch = 0x24d; // bool
		constexpr auto bUseStreamingLowMipsInEditor = 0x24e; // bool
		constexpr auto bBuildDebugStreamingMips = 0x24f; // bool
	}

	namespace n_UMaterialExpressionSign { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UBTNode { // : UObject
		constexpr auto NodeName = 0x30; // FString
		constexpr auto TreeAsset = 0x40; // UBehaviorTree*
		constexpr auto ParentNode = 0x48; // UBTCompositeNode*
	}

	namespace n_UInterpTrackInstFloatMaterialParam { // : UInterpTrackInst
		constexpr auto MaterialInstances = 0x28; // TArray<UMaterialInstanceDynamic*>
		constexpr auto ResetFloats = 0x38; // TArray<float>
		constexpr auto PrimitiveMaterialRefs = 0x48; // TArray<FPrimitiveMaterialRef>
		constexpr auto InstancedTrack = 0x58; // UInterpTrackFloatMaterialParam*
	}

	namespace n_UReverbEffect { // : UObject
		constexpr auto bBypassEarlyReflections = 0x28; // bool
		constexpr auto ReflectionsDelay = 0x2c; // float
		constexpr auto GainHF = 0x30; // float
		constexpr auto ReflectionsGain = 0x34; // float
		constexpr auto bBypassLateReflections = 0x38; // bool
		constexpr auto LateDelay = 0x3c; // float
		constexpr auto DecayTime = 0x40; // float
		constexpr auto Density = 0x44; // float
		constexpr auto Diffusion = 0x48; // float
		constexpr auto AirAbsorptionGainHF = 0x4c; // float
		constexpr auto DecayHFRatio = 0x50; // float
		constexpr auto LateGain = 0x54; // float
		constexpr auto Gain = 0x58; // float
		constexpr auto RoomRolloffFactor = 0x5c; // float
	}

	namespace n_UCanvasPanelSlot { // : UPanelSlot
		constexpr auto LayoutData = 0x38; // FAnchorData
		constexpr auto bAutoSize = 0x60; // bool
		constexpr auto ZOrder = 0x64; // int32_t
	}

	namespace n_UWindowTitleBarArea { // : UContentWidget
		constexpr auto bWindowButtonsEnabled = 0x120; // bool
		constexpr auto bDoubleClickTogglesFullscreen = 0x121; // bool
	}

	namespace n_UAnimBoneCompressionCodec { // : UObject
		constexpr auto Description = 0x28; // FString
	}

	namespace n_UNiagaraSettings { // : UDeveloperSettings
		constexpr auto DefaultEffectType = 0x38; // FSoftObjectPath
		constexpr auto QualityLevels = 0x50; // TArray<FText>
		constexpr auto ComponentRendererWarningsPerClass = 0x60; // TMap<FString, FText>
		constexpr auto DefaultRenderTargetFormat = 0xb0; // ETextureRenderTargetFormat
		constexpr auto DefaultGridFormat = 0xb1; // ENiagaraGpuBufferFormat
		constexpr auto DefaultEffectTypePtr = 0xb8; // UNiagaraEffectType*
	}

	namespace n_UMOGMHUD { // : UMOUserWidget
		constexpr auto pMOScrollBox_Petitions = 0x2c8; // UMOScrollBox*
		constexpr auto pMOGMCharacterButtons = 0x2d0; // UMOGMCharacterButtons*
		constexpr auto pGMTabs = 0x2d8; // UMOUserWidgetGMTabs*
		constexpr auto pSimpleListGM = 0x2e0; // UMOSimpleList*
		constexpr auto pSimpleListGMSpawn = 0x2e8; // UMOSimpleList*
		constexpr auto pGMInventory = 0x2f0; // UMOContainer*
		constexpr auto cGMOpenPetition = 0x2f8; // UMOGMOpenPetition*
		constexpr auto cInventoryItem = 0x300; // UMOInventoryButtonItem*
		constexpr auto GMDisplayName = 0x310; // FString
	}

	namespace n_UParticleModuleKillBox { // : UParticleModuleKillBase
		constexpr auto LowerLeftCorner = 0x30; // FRawDistributionVector
		constexpr auto UpperRightCorner = 0x78; // FRawDistributionVector
		constexpr auto bAbsolute = 0xc0; // char : 1
		constexpr auto bKillInside = 0xc0; // char : 1
		constexpr auto bAxisAlignedAndFixedSize = 0xc0; // char : 1
	}

	namespace n_AStaticMeshActor { // : AActor
		constexpr auto StaticMeshComponent = 0x220; // UStaticMeshComponent*
		constexpr auto bStaticMeshReplicateMovement = 0x228; // bool
		constexpr auto NavigationGeometryGatheringMode = 0x229; // ENavDataGatheringMode
	}

	namespace n_UInAppPurchaseRestoreCallbackProxy { // : UObject
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UTireType { // : UDataAsset
		constexpr auto FrictionScale = 0x30; // float
	}

	namespace n_UMaterialExpressionSingleLayerWaterMaterialOutput { // : UMaterialExpressionCustomOutput
		constexpr auto ScatteringCoefficients = 0x40; // FExpressionInput
		constexpr auto AbsorptionCoefficients = 0x54; // FExpressionInput
		constexpr auto PhaseG = 0x68; // FExpressionInput
		constexpr auto ColorScaleBehindWater = 0x7c; // FExpressionInput
	}

	namespace n_AWaterBodyRiver { // : AWaterBody
		constexpr auto RiverGenerator = 0xdd0; // URiverGenerator*
		constexpr auto LakeTransitionMaterial = 0xdd8; // UMaterialInterface*
		constexpr auto LakeTransitionMID = 0xde0; // UMaterialInstanceDynamic*
		constexpr auto OceanTransitionMaterial = 0xde8; // UMaterialInterface*
		constexpr auto OceanTransitionMID = 0xdf0; // UMaterialInstanceDynamic*
	}

	namespace n_UARMeshComponent { // : UARComponent
		constexpr auto ReplicatedPayload = 0x280; // FARMeshUpdatePayload
	}

	namespace n_UProgressBar { // : UWidget
		constexpr auto WidgetStyle = 0x108; // FProgressBarStyle
		constexpr auto Style = 0x2a8; // USlateWidgetStyleAsset*
		constexpr auto BackgroundImage = 0x2b0; // USlateBrushAsset*
		constexpr auto FillImage = 0x2b8; // USlateBrushAsset*
		constexpr auto MarqueeImage = 0x2c0; // USlateBrushAsset*
		constexpr auto Percent = 0x2c8; // float
		constexpr auto BarFillType = 0x2cc; // EProgressBarFillType
		constexpr auto bIsMarquee = 0x2cd; // bool
		constexpr auto BorderPadding = 0x2d0; // FVector2D
		constexpr auto PercentDelegate = 0x2d8; // FDelegate
		constexpr auto FillColorAndOpacity = 0x2e8; // FLinearColor
		constexpr auto FillColorAndOpacityDelegate = 0x2f8; // FDelegate
	}

	namespace n_UInterpTrackParticleReplay { // : UInterpTrack
		constexpr auto TrackKeys = 0x70; // TArray<FParticleReplayTrackKey>
	}

	namespace n_UImgMediaSettings { // : UObject
		constexpr auto DefaultFrameRate = 0x28; // FFrameRate
		constexpr auto CacheBehindPercentage = 0x30; // float
		constexpr auto CacheSizeGB = 0x34; // float
		constexpr auto CacheThreads = 0x38; // int32_t
		constexpr auto CacheThreadStackSizeKB = 0x3c; // int32_t
		constexpr auto GlobalCacheSizeGB = 0x40; // float
		constexpr auto UseGlobalCache = 0x44; // bool
		constexpr auto ExrDecoderThreads = 0x48; // uint32_t
		constexpr auto DefaultProxy = 0x50; // FString
		constexpr auto UseDefaultProxy = 0x60; // bool
	}

	namespace n_UParticleModuleBeamSource { // : UParticleModuleBeamBase
		constexpr auto SourceMethod = 0x30; // Beam2SourceTargetMethod
		constexpr auto SourceName = 0x34; // FName
		constexpr auto bSourceAbsolute = 0x3c; // char : 1
		constexpr auto Source = 0x40; // FRawDistributionVector
		constexpr auto bLockSource = 0x88; // char : 1
		constexpr auto SourceTangentMethod = 0x8c; // Beam2SourceTargetTangentMethod
		constexpr auto SourceTangent = 0x90; // FRawDistributionVector
		constexpr auto bLockSourceTangent = 0xd8; // char : 1
		constexpr auto SourceStrength = 0xe0; // FRawDistributionFloat
		constexpr auto bLockSourceStength = 0x110; // char : 1
	}

	namespace n_UParticleModuleOrientationAxisLock { // : UParticleModuleOrientationBase
		constexpr auto LockAxisFlags = 0x30; // EParticleAxisLock
	}

	namespace n_UPlatformInterfaceWebResponse { // : UObject
		constexpr auto OriginalURL = 0x28; // FString
		constexpr auto ResponseCode = 0x38; // int32_t
		constexpr auto Tag = 0x3c; // int32_t
		constexpr auto StringResponse = 0x40; // FString
		constexpr auto BinaryResponse = 0x50; // TArray<char>
	}

	namespace n_USourceEffectChorusPreset { // : USoundEffectSourcePreset
		constexpr auto Settings = 0x108; // FSourceEffectChorusSettings
	}

	namespace n_UMovieSceneEventTrack { // : UMovieSceneNameableTrack
		constexpr auto bFireEventsWhenForwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0x80; // char : 1
		constexpr auto EventPosition = 0x84; // EFireEventsAtPosition
		constexpr auto Sections = 0x88; // TArray<UMovieSceneSection*>
	}

	namespace n_UMaterialFunctionInstance { // : UMaterialFunctionInterface
		constexpr auto Parent = 0x40; // UMaterialFunctionInterface*
		constexpr auto Base = 0x48; // UMaterialFunctionInterface*
		constexpr auto ScalarParameterValues = 0x50; // TArray<FScalarParameterValue>
		constexpr auto VectorParameterValues = 0x60; // TArray<FVectorParameterValue>
		constexpr auto TextureParameterValues = 0x70; // TArray<FTextureParameterValue>
		constexpr auto FontParameterValues = 0x80; // TArray<FFontParameterValue>
		constexpr auto StaticSwitchParameterValues = 0x90; // TArray<FStaticSwitchParameter>
		constexpr auto StaticComponentMaskParameterValues = 0xa0; // TArray<FStaticComponentMaskParameter>
		constexpr auto RuntimeVirtualTextureParameterValues = 0xb0; // TArray<FRuntimeVirtualTextureParameterValue>
	}

	namespace n_UMOAnimInstanceFishingRod { // : UAnimInstance
		constexpr auto PullSequence = 0x2b8; // UAnimSequenceBase*
		constexpr auto StringRestDistance = 0x2c0; // float
	}

	namespace n_UMOButtonSpell { // : UMOButton
		constexpr auto sReqData = 0x448; // FRequiredSpellData
		constexpr auto pMaterialInstance = 0x4d0; // UMaterialInstanceDynamic*
	}

	namespace n_AVolumetricCloud { // : AInfo
		constexpr auto VolumetricCloudComponent = 0x220; // UVolumetricCloudComponent*
	}

	namespace n_AEQSTestingPawn { // : ACharacter
		constexpr auto QueryTemplate = 0x4c0; // UEnvQuery*
		constexpr auto QueryParams = 0x4c8; // TArray<FEnvNamedValue>
		constexpr auto QueryConfig = 0x4d8; // TArray<FAIDynamicParam>
		constexpr auto TimeLimitPerStep = 0x4e8; // float
		constexpr auto StepToDebugDraw = 0x4ec; // int32_t
		constexpr auto HighlightMode = 0x4f0; // EEnvQueryHightlightMode
		constexpr auto bDrawLabels = 0x4f4; // char : 1
		constexpr auto bDrawFailedItems = 0x4f4; // char : 1
		constexpr auto bReRunQueryOnlyOnFinishedMove = 0x4f4; // char : 1
		constexpr auto bShouldBeVisibleInGame = 0x4f4; // char : 1
		constexpr auto bTickDuringGame = 0x4f4; // char : 1
		constexpr auto QueryingMode = 0x4f8; // EEnvQueryRunMode
		constexpr auto NavAgentProperties = 0x500; // FNavAgentProperties
	}

	namespace n_UAISense_Sight { // : UAISense
		constexpr auto MaxTracesPerTick = 0x148; // int32_t
		constexpr auto MinQueriesPerTimeSliceCheck = 0x14c; // int32_t
		constexpr auto MaxTimeSlicePerTick = 0x150; // double
		constexpr auto HighImportanceQueryDistanceThreshold = 0x158; // float
		constexpr auto MaxQueryImportance = 0x160; // float
		constexpr auto SightLimitQueryImportance = 0x164; // float
	}

	namespace n_UMOCheckBox { // : UCheckBox
		constexpr auto CustomStyle = 0x770; // USlateWidgetStyleAsset*
	}

	namespace n_UMODataAssetTattooEffectCollection { // : UPrimaryDataAsset
		constexpr auto vTattooEffects = 0x30; // TArray<UMODataAssetTattooEffect*>
	}

	namespace n_UMovieScene { // : UMovieSceneSignedObject
		constexpr auto Spawnables = 0x50; // TArray<FMovieSceneSpawnable>
		constexpr auto Possessables = 0x60; // TArray<FMovieScenePossessable>
		constexpr auto ObjectBindings = 0x70; // TArray<FMovieSceneBinding>
		constexpr auto BindingGroups = 0x80; // TMap<FName, FMovieSceneObjectBindingIDs>
		constexpr auto MasterTracks = 0xd0; // TArray<UMovieSceneTrack*>
		constexpr auto CameraCutTrack = 0xe0; // UMovieSceneTrack*
		constexpr auto SelectionRange = 0xe8; // FMovieSceneFrameRange
		constexpr auto PlaybackRange = 0xf8; // FMovieSceneFrameRange
		constexpr auto TickResolution = 0x108; // FFrameRate
		constexpr auto DisplayRate = 0x110; // FFrameRate
		constexpr auto EvaluationType = 0x118; // EMovieSceneEvaluationType
		constexpr auto ClockSource = 0x119; // EUpdateClockSource
		constexpr auto CustomClockSourcePath = 0x120; // FSoftObjectPath
		constexpr auto MarkedFrames = 0x138; // TArray<FMovieSceneMarkedFrame>
	}

	namespace n_UMOBrokerSellPetsPanel { // : UMOBrokerPanel
		constexpr auto pMOBrokerCurrencyWidget = 0x2d8; // UMOBrokerCurrencyWidget*
		constexpr auto pMOButton_Close = 0x2e0; // UMOButton*
		constexpr auto pPetEntry_Sell = 0x2e8; // UMOPetListEntry*
	}

	namespace n_UMOMurderCount { // : UMOUserWidget
		constexpr auto cMurderCountListEntryClass = 0x2d0; // UMOWidgetBlueprint*
		constexpr auto vMurderCountEntries = 0x2d8; // TArray<UMOMurderCountEntry*>
		constexpr auto pVerticalBox_Murderers = 0x2e8; // UVerticalBox*
	}

	namespace n_UWB_MOKeybindCategoryEntry_C { // : UMOCategoryEntry
		constexpr auto WB_MOKeybindCategoryLine = 0x2d0; // UWB_CategoryLine_C*
		constexpr auto WB_MOKeybindCategoryLine_2 = 0x2d8; // UWB_CategoryLine_C*
	}

	namespace n_UMovieSceneEnumTrack { // : UMovieScenePropertyTrack
		constexpr auto Enum = 0xb0; // UEnum*
	}

	namespace n_UMovieSceneMediaPlayerPropertySection { // : UMovieSceneSection
		constexpr auto MediaSource = 0xe8; // UMediaSource*
		constexpr auto bLoop = 0xf0; // bool
	}

	namespace n_UCompressedImageSequenceProtocol { // : UImageSequenceProtocol
		constexpr auto CompressionQuality = 0xd8; // int32_t
	}

	namespace n_USkeletalMeshLODSettings { // : UDataAsset
		constexpr auto MinLOD = 0x30; // FPerPlatformInt
		constexpr auto DisableBelowMinLodStripping = 0x34; // FPerPlatformBool
		constexpr auto bOverrideLODStreamingSettings = 0x35; // bool
		constexpr auto bSupportLODStreaming = 0x36; // FPerPlatformBool
		constexpr auto MaxNumStreamedLODs = 0x38; // FPerPlatformInt
		constexpr auto MaxNumOptionalLODs = 0x3c; // FPerPlatformInt
		constexpr auto LODGroups = 0x40; // TArray<FSkeletalMeshLODGroupSettings>
	}

	namespace n_UNiagaraDataInterfaceArray { // : UNiagaraDataInterface
		constexpr auto MaxElements = 0x40; // int32_t
	}

	namespace n_UParticleModuleSubUV { // : UParticleModuleSubUVBase
		constexpr auto Animation = 0x30; // USubUVAnimation*
		constexpr auto SubImageIndex = 0x38; // FRawDistributionFloat
		constexpr auto bUseRealTime = 0x68; // char : 1
	}

	namespace n_ALevelScriptActor { // : AActor
		constexpr auto bInputEnabled = 0x220; // char : 1
	}

	namespace n_UMediaComponent { // : UActorComponent
		constexpr auto MediaTexture = 0xb0; // UMediaTexture*
		constexpr auto MediaPlayer = 0xb8; // UMediaPlayer*
	}

	namespace n_UMOStatManager { // : UObject
		constexpr auto exportData = 0x28; // UDataTable*
	}

	namespace n_UParticleModuleMeshRotationRateOverLife { // : UParticleModuleRotationRateBase
		constexpr auto RotRate = 0x30; // FRawDistributionVector
		constexpr auto bScaleRotRate = 0x78; // char : 1
	}

	namespace n_ABP_AiEffectAcid_C { // : AMOAiEffectActor
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
		constexpr auto vHitLocation = 0x278; // FVector
	}

	namespace n_UWB_MOOptions_New_C { // : UMOUserWidgetOptions
		constexpr auto UberGraphFrame = 0x398; // FPointerToUberGraphFrame
		constexpr auto FadeIn = 0x3a0; // UWidgetAnimation*
		constexpr auto MOBorder_UnsavedChanges_2 = 0x3a8; // UMOBorder*
		constexpr auto OptionsPanel = 0x3b0; // UCanvasPanel*
		constexpr auto pMOButtonUnsavedChanges_No_2 = 0x3b8; // UMOButtonLarge*
		constexpr auto pMOButtonUnsavedChanges_Yes_2 = 0x3c0; // UMOButtonLarge*
	}

	namespace n_UWB_MOOptionsAudioPanel_VoiceMeter_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto AutoActivateThreshold = 0x268; // UMOSlider*
		constexpr auto Image_1 = 0x270; // UImage*
		constexpr auto OnVoiceAutoActivationThresholdUpdated = 0x278; // FMulticastInlineDelegate
		constexpr auto bVoiceAutoActivateEnabled = 0x288; // bool
	}

	namespace n_ULeaderboardQueryCallbackProxy { // : UObject
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UARTrackableNotifyComponent { // : UActorComponent
		constexpr auto OnAddTrackedGeometry = 0xb0; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedGeometry = 0xc0; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedGeometry = 0xd0; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedPlane = 0xe0; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedPlane = 0xf0; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedPlane = 0x100; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedPoint = 0x110; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedPoint = 0x120; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedPoint = 0x130; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedImage = 0x140; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedImage = 0x150; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedImage = 0x160; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedFace = 0x170; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedFace = 0x180; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedFace = 0x190; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedEnvProbe = 0x1a0; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedEnvProbe = 0x1b0; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedEnvProbe = 0x1c0; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedObject = 0x1d0; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedObject = 0x1e0; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedObject = 0x1f0; // FMulticastInlineDelegate
	}

	namespace n_UNiagaraDataInterfaceExport { // : UNiagaraDataInterface
		constexpr auto CallbackHandlerParameter = 0x38; // FNiagaraUserParameterBinding
		constexpr auto GPUAllocationMode = 0x58; // ENDIExport_GPUAllocationMode
		constexpr auto GPUAllocationFixedSize = 0x5c; // int32_t
		constexpr auto GPUAllocationPerParticleSize = 0x60; // float
	}

	namespace n_UMediaTexture { // : UTexture
		constexpr auto AddressX = 0xd8; // TextureAddress
		constexpr auto AddressY = 0xd9; // TextureAddress
		constexpr auto AutoClear = 0xda; // bool
		constexpr auto ClearColor = 0xdc; // FLinearColor
		constexpr auto EnableGenMips = 0xec; // bool
		constexpr auto NumMips = 0xed; // char
		constexpr auto NewStyleOutput = 0xee; // bool
		constexpr auto OutputFormat = 0xef; // MediaTextureOutputFormat
		constexpr auto CurrentAspectRatio = 0xf0; // float
		constexpr auto CurrentOrientation = 0xf4; // MediaTextureOrientation
		constexpr auto MediaPlayer = 0xf8; // UMediaPlayer*
	}

	namespace n_AMOAvatarStaticMeshBuildable { // : AMOAvatarStaticMesh
		constexpr auto vBuildableStates = 0x2c8; // TArray<FMOBuildableStates>
		constexpr auto pSignComponent = 0x2d8; // UStaticMeshComponent*
	}

	namespace n_UWB_ButtonItem_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Pulse = 0x268; // UWidgetAnimation*
		constexpr auto ButtonItem = 0x270; // UMOButtonItem*
	}

	namespace n_UNiagaraDataInterfaceRenderTarget2DArray { // : UNiagaraDataInterfaceRWBase
		constexpr auto Size = 0xd8; // FIntVector
		constexpr auto OverrideRenderTargetFormat = 0xe4; // ETextureRenderTargetFormat
		constexpr auto bOverrideFormat = 0xe5; // char : 1
		constexpr auto RenderTargetUserParameter = 0xe8; // FNiagaraUserParameterBinding
		constexpr auto ManagedRenderTargets = 0x108; // TMap<uint64_t, UTextureRenderTarget2DArray*>
	}

	namespace n_UParticleModuleVectorFieldScaleOverLife { // : UParticleModuleVectorFieldBase
		constexpr auto VectorFieldScaleOverLife = 0x30; // UDistributionFloat*
		constexpr auto VectorFieldScaleOverLifeRaw = 0x38; // FRawDistributionFloat
	}

	namespace n_UHapticFeedbackEffect_Buffer { // : UHapticFeedbackEffect_Base
		constexpr auto Amplitudes = 0x28; // TArray<char>
		constexpr auto SampleRate = 0x38; // int32_t
	}

	namespace n_UNiagaraDataInterfaceAudioPlayer { // : UNiagaraDataInterface
		constexpr auto SoundToPlay = 0x38; // USoundBase*
		constexpr auto Attenuation = 0x40; // USoundAttenuation*
		constexpr auto Concurrency = 0x48; // USoundConcurrency*
		constexpr auto ParameterNames = 0x50; // TArray<FName>
		constexpr auto bLimitPlaysPerTick = 0x60; // bool
		constexpr auto MaxPlaysPerTick = 0x64; // int32_t
		constexpr auto bStopWhenComponentIsDestroyed = 0x68; // bool
	}

	namespace n_URadialFalloff { // : UFieldNodeFloat
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto MinRange = 0xb4; // float
		constexpr auto MaxRange = 0xb8; // float
		constexpr auto Default = 0xbc; // float
		constexpr auto Radius = 0xc0; // float
		constexpr auto Position = 0xc4; // FVector
		constexpr auto Falloff = 0xd0; // EFieldFalloffType
	}

	namespace n_UInAppPurchaseRestoreCallbackProxy2 { // : UObject
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UDirectionalLightComponent { // : ULightComponent
		constexpr auto ShadowCascadeBiasDistribution = 0x328; // float
		constexpr auto bEnableLightShaftOcclusion = 0x32c; // char : 1
		constexpr auto OcclusionMaskDarkness = 0x330; // float
		constexpr auto OcclusionDepthRange = 0x334; // float
		constexpr auto LightShaftOverrideDirection = 0x338; // FVector
		constexpr auto WholeSceneDynamicShadowRadius = 0x344; // float
		constexpr auto DynamicShadowDistanceMovableLight = 0x348; // float
		constexpr auto DynamicShadowDistanceStationaryLight = 0x34c; // float
		constexpr auto DynamicShadowCascades = 0x350; // int32_t
		constexpr auto CascadeDistributionExponent = 0x354; // float
		constexpr auto CascadeTransitionFraction = 0x358; // float
		constexpr auto ShadowDistanceFadeoutFraction = 0x35c; // float
		constexpr auto bUseInsetShadowsForMovableObjects = 0x360; // char : 1
		constexpr auto FarShadowCascadeCount = 0x364; // int32_t
		constexpr auto FarShadowDistance = 0x368; // float
		constexpr auto DistanceFieldShadowDistance = 0x36c; // float
		constexpr auto LightSourceAngle = 0x370; // float
		constexpr auto LightSourceSoftAngle = 0x374; // float
		constexpr auto ShadowSourceAngleFactor = 0x378; // float
		constexpr auto TraceDistance = 0x37c; // float
		constexpr auto bUsedAsAtmosphereSunLight = 0x380; // char : 1
		constexpr auto AtmosphereSunLightIndex = 0x384; // int32_t
		constexpr auto AtmosphereSunDiskColorScale = 0x388; // FLinearColor
		constexpr auto bPerPixelAtmosphereTransmittance = 0x398; // char : 1
		constexpr auto bCastShadowsOnClouds = 0x398; // char : 1
		constexpr auto bCastShadowsOnAtmosphere = 0x398; // char : 1
		constexpr auto bCastCloudShadows = 0x398; // char : 1
		constexpr auto CloudShadowStrength = 0x39c; // float
		constexpr auto CloudShadowOnAtmosphereStrength = 0x3a0; // float
		constexpr auto CloudShadowOnSurfaceStrength = 0x3a4; // float
		constexpr auto CloudShadowDepthBias = 0x3a8; // float
		constexpr auto CloudShadowExtent = 0x3ac; // float
		constexpr auto CloudShadowMapResolutionScale = 0x3b0; // float
		constexpr auto CloudShadowRaySampleCountScale = 0x3b4; // float
		constexpr auto CloudScatteredLuminanceScale = 0x3b8; // FLinearColor
		constexpr auto LightmassSettings = 0x3c8; // FLightmassDirectionalLightSettings
		constexpr auto bCastModulatedShadows = 0x3d8; // char : 1
		constexpr auto ModulatedShadowColor = 0x3dc; // FColor
		constexpr auto ShadowAmount = 0x3e0; // float
	}

	namespace n_UDatasmithCineCameraComponentTemplate { // : UDatasmithObjectTemplate
		constexpr auto FilmbackSettings = 0x30; // FDatasmithCameraFilmbackSettingsTemplate
		constexpr auto LensSettings = 0x38; // FDatasmithCameraLensSettingsTemplate
		constexpr auto FocusSettings = 0x3c; // FDatasmithCameraFocusSettingsTemplate
		constexpr auto CurrentFocalLength = 0x44; // float
		constexpr auto CurrentAperture = 0x48; // float
		constexpr auto PostProcessSettings = 0x50; // FDatasmithPostProcessSettingsTemplate
	}

	namespace n_UMOText { // : UMOUserWidget
		constexpr auto pTextBlock = 0x2c8; // UTextBlock*
		constexpr auto InitializeText = 0x2d0; // FText
		constexpr auto InitializeFontSize = 0x2e8; // int32_t
	}

	namespace n_UEnvQueryGenerator_ActorsOfClass { // : UEnvQueryGenerator
		constexpr auto SearchedActorClass = 0x50; // AActor*
		constexpr auto GenerateOnlyActorsInRadius = 0x58; // FAIDataProviderBoolValue
		constexpr auto SearchRadius = 0x90; // FAIDataProviderFloatValue
		constexpr auto SearchCenter = 0xc8; // UEnvQueryContext*
	}

	namespace n_UAnimSharingStateInstance { // : UAnimInstance
		constexpr auto AnimationToPlay = 0x2b8; // UAnimSequence*
		constexpr auto PermutationTimeOffset = 0x2c0; // float
		constexpr auto PlayRate = 0x2c4; // float
		constexpr auto bStateBool = 0x2c8; // bool
		constexpr auto Instance = 0x2d0; // UAnimSharingInstance*
	}

	namespace n_UMaterialExpressionBentNormalCustomOutput { // : UMaterialExpressionCustomOutput
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UNiagaraComponentRendererProperties { // : UNiagaraRendererProperties
		constexpr auto ComponentType = 0x80; // USceneComponent*
		constexpr auto ComponentCountLimit = 0x88; // uint32_t
		constexpr auto EnabledBinding = 0x90; // FNiagaraVariableAttributeBinding
		constexpr auto bAssignComponentsOnParticleID = 0xe8; // bool
		constexpr auto bOnlyCreateComponentsOnParticleSpawn = 0xe9; // bool
		constexpr auto TemplateComponent = 0xf0; // USceneComponent*
		constexpr auto PropertyBindings = 0xf8; // TArray<FNiagaraComponentPropertyBinding>
	}

	namespace n_UInstancedStaticMeshComponent { // : UStaticMeshComponent
		constexpr auto PerInstanceSMData = 0x4d0; // TArray<FInstancedStaticMeshInstanceData>
		constexpr auto NumCustomDataFloats = 0x4e0; // int32_t
		constexpr auto PerInstanceSMCustomData = 0x4e8; // TArray<float>
		constexpr auto InstancingRandomSeed = 0x4f8; // int32_t
		constexpr auto InstanceStartCullDistance = 0x4fc; // int32_t
		constexpr auto InstanceEndCullDistance = 0x500; // int32_t
		constexpr auto InstanceReorderTable = 0x508; // TArray<int32_t>
		constexpr auto NumPendingLightmaps = 0x560; // int32_t
		constexpr auto CachedMappings = 0x568; // TArray<FInstancedStaticMeshMappingInfo>
	}

	namespace n_UParticleModuleVelocity { // : UParticleModuleVelocityBase
		constexpr auto StartVelocity = 0x38; // FRawDistributionVector
		constexpr auto StartVelocityRadial = 0x80; // FRawDistributionFloat
	}

	namespace n_USoundNodeEnveloper { // : USoundNode
		constexpr auto LoopStart = 0x48; // float
		constexpr auto LoopEnd = 0x4c; // float
		constexpr auto DurationAfterLoop = 0x50; // float
		constexpr auto LoopCount = 0x54; // int32_t
		constexpr auto bLoopIndefinitely = 0x58; // char : 1
		constexpr auto bLoop = 0x58; // char : 1
		constexpr auto VolumeInterpCurve = 0x60; // UDistributionFloatConstantCurve*
		constexpr auto PitchInterpCurve = 0x68; // UDistributionFloatConstantCurve*
		constexpr auto VolumeCurve = 0x70; // FRuntimeFloatCurve
		constexpr auto PitchCurve = 0xf8; // FRuntimeFloatCurve
		constexpr auto PitchMin = 0x180; // float
		constexpr auto PitchMax = 0x184; // float
		constexpr auto VolumeMin = 0x188; // float
		constexpr auto VolumeMax = 0x18c; // float
	}

	namespace n_UDamageType { // : UObject
		constexpr auto bCausedByWorld = 0x28; // char : 1
		constexpr auto bScaleMomentumByMass = 0x28; // char : 1
		constexpr auto bRadialDamageVelChange = 0x28; // char : 1
		constexpr auto DamageImpulse = 0x2c; // float
		constexpr auto DestructibleImpulse = 0x30; // float
		constexpr auto DestructibleDamageSpreadScale = 0x34; // float
		constexpr auto DamageFalloff = 0x38; // float
	}

	namespace n_UParticleModuleAccelerationDrag { // : UParticleModuleAccelerationBase
		constexpr auto DragCoefficient = 0x38; // UDistributionFloat*
		constexpr auto DragCoefficientRaw = 0x40; // FRawDistributionFloat
	}

	namespace n_UAchievementQueryCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UEnvQueryGenerator_OnCircle { // : UEnvQueryGenerator_ProjectedPoints
		constexpr auto CircleRadius = 0x80; // FAIDataProviderFloatValue
		constexpr auto SpaceBetween = 0xb8; // FAIDataProviderFloatValue
		constexpr auto NumberOfPoints = 0xf0; // FAIDataProviderIntValue
		constexpr auto PointOnCircleSpacingMethod = 0x128; // EPointOnCircleSpacingMethod
		constexpr auto ArcDirection = 0x130; // FEnvDirection
		constexpr auto ArcAngle = 0x150; // FAIDataProviderFloatValue
		constexpr auto AngleRadians = 0x188; // float
		constexpr auto CircleCenter = 0x190; // UEnvQueryContext*
		constexpr auto bIgnoreAnyContextActorsWhenGeneratingCircle = 0x198; // bool
		constexpr auto CircleCenterZOffset = 0x1a0; // FAIDataProviderFloatValue
		constexpr auto TraceData = 0x1d8; // FEnvTraceData
		constexpr auto bDefineArc = 0x208; // char : 1
	}

	namespace n_UWB_ButtonSpellWidget_C { // : UMOButtonSpellWidget
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
	}

	namespace n_UStaticMeshSimulationComponent { // : UActorComponent
		constexpr auto Simulating = 0xb8; // bool
		constexpr auto bNotifyCollisions = 0xb9; // bool
		constexpr auto ObjectType = 0xba; // EObjectStateTypeEnum
		constexpr auto Mass = 0xbc; // float
		constexpr auto CollisionType = 0xc0; // ECollisionTypeEnum
		constexpr auto ImplicitType = 0xc1; // EImplicitTypeEnum
		constexpr auto MinLevelSetResolution = 0xc4; // int32_t
		constexpr auto MaxLevelSetResolution = 0xc8; // int32_t
		constexpr auto InitialVelocityType = 0xcc; // EInitialVelocityTypeEnum
		constexpr auto InitialLinearVelocity = 0xd0; // FVector
		constexpr auto InitialAngularVelocity = 0xdc; // FVector
		constexpr auto DamageThreshold = 0xe8; // float
		constexpr auto PhysicalMaterial = 0xf0; // UChaosPhysicalMaterial*
		constexpr auto ChaosSolverActor = 0xf8; // AChaosSolverActor*
		constexpr auto OnChaosPhysicsCollision = 0x100; // FMulticastInlineDelegate
		constexpr auto SimulatedComponents = 0x120; // TArray<UPrimitiveComponent*>
	}

	namespace n_UMovieSceneLevelVisibilitySection { // : UMovieSceneSection
		constexpr auto Visibility = 0xf0; // ELevelVisibility
		constexpr auto LevelNames = 0xf8; // TArray<FName>
	}

	namespace n_UMOItemSlot { // : UUserWidget
		constexpr auto pButtonItem = 0x290; // UMOButtonItem*
		constexpr auto pButtonBorder = 0x298; // UBorder*
		constexpr auto pStackNumber = 0x2a0; // UTextBlock*
	}

	namespace n_ULiveLinkComponentSettings { // : UObject
		constexpr auto DefaultControllerForRole = 0x28; // TMap<ULiveLinkRole*, ULiveLinkControllerBase*>
	}

	namespace n_UAISystem { // : UAISystemBase
		constexpr auto PerceptionSystemClassName = 0x58; // FSoftClassPath
		constexpr auto HotSpotManagerClassName = 0x70; // FSoftClassPath
		constexpr auto AcceptanceRadius = 0x88; // float
		constexpr auto PathfollowingRegularPathPointAcceptanceRadius = 0x8c; // float
		constexpr auto PathfollowingNavLinkAcceptanceRadius = 0x90; // float
		constexpr auto bFinishMoveOnGoalOverlap = 0x94; // bool
		constexpr auto bAcceptPartialPaths = 0x95; // bool
		constexpr auto bAllowStrafing = 0x96; // bool
		constexpr auto bEnableBTAITasks = 0x97; // bool
		constexpr auto bAllowControllersAsEQSQuerier = 0x98; // bool
		constexpr auto bEnableDebuggerPlugin = 0x99; // bool
		constexpr auto bForgetStaleActors = 0x9a; // bool
		constexpr auto bAddBlackboardSelfKey = 0x9b; // bool
		constexpr auto DefaultSightCollisionChannel = 0x9c; // ECollisionChannel
		constexpr auto BehaviorTreeManager = 0xa0; // UBehaviorTreeManager*
		constexpr auto EnvironmentQueryManager = 0xa8; // UEnvQueryManager*
		constexpr auto PerceptionSystem = 0xb0; // UAIPerceptionSystem*
		constexpr auto AllProxyObjects = 0xb8; // TArray<UAIAsyncTaskBlueprintProxy*>
		constexpr auto HotSpotManager = 0xc8; // UAIHotSpotManager*
		constexpr auto NavLocalGrids = 0xd0; // UNavLocalGridManager*
	}

	namespace n_AMOCharacterAIGeneratedTaskVendor { // : AMOCharacterAIGenerated
		constexpr auto pOpenVendorMale = 0xf98; // USoundCue*
		constexpr auto pCloseVendorMale = 0xfa0; // USoundCue*
		constexpr auto pRefuseVendorMale = 0xfa8; // USoundCue*
		constexpr auto pAcceptVendorMale = 0xfb0; // USoundCue*
		constexpr auto pOpenVendorFemale = 0xfb8; // USoundCue*
		constexpr auto pCloseVendorFemale = 0xfc0; // USoundCue*
		constexpr auto pRefuseVendorFemale = 0xfc8; // USoundCue*
		constexpr auto pAcceptVendorFemale = 0xfd0; // USoundCue*
		constexpr auto pShoutOutVendorMale = 0xfd8; // USoundCue*
		constexpr auto pShoutOutVendorFemale = 0xfe0; // USoundCue*
	}

	namespace n_URuntimeVirtualTexture { // : UObject
		constexpr auto TileCount = 0x28; // int32_t
		constexpr auto TileSize = 0x2c; // int32_t
		constexpr auto TileBorderSize = 0x30; // int32_t
		constexpr auto MaterialType = 0x34; // ERuntimeVirtualTextureMaterialType
		constexpr auto bCompressTextures = 0x35; // bool
		constexpr auto bClearTextures = 0x36; // bool
		constexpr auto bSinglePhysicalSpace = 0x37; // bool
		constexpr auto bPrivateSpace = 0x38; // bool
		constexpr auto bAdaptive = 0x39; // bool
		constexpr auto bContinuousUpdate = 0x3a; // bool
		constexpr auto RemoveLowMips = 0x3c; // int32_t
		constexpr auto LODGroup = 0x40; // TextureGroup
		constexpr auto Size = 0x44; // int32_t
		constexpr auto StreamingTexture = 0x48; // URuntimeVirtualTextureStreamingProxy*
	}

	namespace n_UParticleModuleAttractorPointGravity { // : UParticleModuleAttractorBase
		constexpr auto Position = 0x30; // FVector
		constexpr auto Radius = 0x3c; // float
		constexpr auto Strength = 0x40; // UDistributionFloat*
		constexpr auto StrengthRaw = 0x48; // FRawDistributionFloat
	}

	namespace n_ULandscapeMaterialInstanceConstant { // : UMaterialInstanceConstant
		constexpr auto TextureStreamingInfo = 0x368; // TArray<FLandscapeMaterialTextureStreamingInfo>
		constexpr auto bIsLayerThumbnail = 0x378; // char : 1
		constexpr auto bDisableTessellation = 0x378; // char : 1
		constexpr auto bMobile = 0x378; // char : 1
		constexpr auto bEditorToolUsage = 0x378; // char : 1
	}

	namespace n_UMOFrameLocalPlayerMount { // : UMOFrameBase
		constexpr auto pMOGameUserSettings = 0x328; // UMOGameUserSettings*
		constexpr auto pProgressBarStamina = 0x330; // UMOUserWidgetProgressBar*
		constexpr auto pTextBlockStamina = 0x338; // UTextBlock*
	}

	namespace n_UClothPhysicalMeshDataBase_Legacy { // : UObject
		constexpr auto Vertices = 0x28; // TArray<FVector>
		constexpr auto Normals = 0x38; // TArray<FVector>
		constexpr auto Indices = 0x48; // TArray<uint32_t>
		constexpr auto InverseMasses = 0x58; // TArray<float>
		constexpr auto BoneData = 0x68; // TArray<FClothVertBoneData>
		constexpr auto NumFixedVerts = 0x78; // int32_t
		constexpr auto MaxBoneWeights = 0x7c; // int32_t
		constexpr auto SelfCollisionIndices = 0x80; // TArray<uint32_t>
	}

	namespace n_UMovieSceneGeometryCollectionTrack { // : UMovieSceneNameableTrack
		constexpr auto AnimationSections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UWB_MOOptionsVideoPanel_C { // : UMOUserWidgetOptionsVideo
		constexpr auto Image_Line_UI = 0x3a0; // UImage*
	}

	namespace n_UAISense_Prediction { // : UAISense
		constexpr auto RegisteredEvents = 0x80; // TArray<FAIPredictionEvent>
	}

	namespace n_UAnimNotify_PlayMontageNotify { // : UAnimNotify
		constexpr auto NotifyName = 0x38; // FName
	}

	namespace n_UMOButtonPlus { // : UMOButton
		constexpr auto CustomStyle = 0x438; // USlateWidgetStyleAsset*
	}

	namespace n_UGizmoBoxComponent { // : UGizmoBaseComponent
		constexpr auto Origin = 0x460; // FVector
		constexpr auto Rotation = 0x470; // FQuat
		constexpr auto Dimensions = 0x480; // FVector
		constexpr auto LineThickness = 0x48c; // float
		constexpr auto bRemoveHiddenLines = 0x490; // bool
		constexpr auto bEnableAxisFlip = 0x491; // bool
	}

	namespace n_UMOUserWidgetOptionsAudio { // : UMOUserWidgetOptionsPanel
		constexpr auto pMOGameInstance = 0x2d0; // UMOGameInstance*
		constexpr auto pSlider_Master = 0x2d8; // UMOOptionSliderWidget*
		constexpr auto pSlider_Music = 0x2e0; // UMOOptionSliderWidget*
		constexpr auto pSlider_Interface = 0x2e8; // UMOOptionSliderWidget*
		constexpr auto pSlider_VoiceMaster = 0x2f0; // UMOOptionSliderWidget*
		constexpr auto pCheckBox_VoiceChat = 0x2f8; // UMOCheckBoxEntry*
		constexpr auto pCheckBox_VoiceActivation = 0x300; // UMOCheckBoxEntry*
		constexpr auto pMOComboBox_VoipOutputDevices = 0x308; // UMOComboBoxStringEntry*
		constexpr auto pMOComboBox_VoipInputDevices = 0x310; // UMOComboBoxStringEntry*
		constexpr auto pCheckBox_TestVoice = 0x318; // UMOCheckBoxEntry*
	}

	namespace n_UMaterialExpressionConstant { // : UMaterialExpression
		constexpr auto R = 0x40; // float
	}

	namespace n_UNiagaraPreviewAxis_InterpParamVector2D { // : UNiagaraPreviewAxis_InterpParamBase
		constexpr auto Min = 0x38; // FVector2D
		constexpr auto Max = 0x40; // FVector2D
	}

	namespace n_UMaterialExpressionCollectionParameter { // : UMaterialExpression
		constexpr auto Collection = 0x40; // UMaterialParameterCollection*
		constexpr auto ParameterName = 0x48; // FName
		constexpr auto ParameterId = 0x50; // FGuid
	}

	namespace n_UMODataAssetMagicDefinitions { // : UPrimaryDataAsset
		constexpr auto pFallbackEffect = 0x30; // UMODataAssetMagic*
		constexpr auto vMagicList = 0x38; // TMap<int32_t, TSoftObjectPtr<UMODataAssetMagic>>
		constexpr auto bAllEffectsArePreloaded = 0x88; // bool
		constexpr auto vMagicListLoaded = 0x90; // TMap<int32_t, UMODataAssetMagic*>
	}

	namespace n_UWheeledVehicleMovementComponent4W { // : UWheeledVehicleMovementComponent
		constexpr auto EngineSetup = 0x290; // FVehicleEngineData
		constexpr auto DifferentialSetup = 0x330; // FVehicleDifferential4WData
		constexpr auto AckermannAccuracy = 0x34c; // float
		constexpr auto TransmissionSetup = 0x350; // FVehicleTransmissionData
		constexpr auto SteeringCurve = 0x380; // FRuntimeFloatCurve
	}

	namespace n_UMaterialExpressionBlendMaterialAttributes { // : UMaterialExpression
		constexpr auto A = 0x40; // FMaterialAttributesInput
		constexpr auto B = 0x58; // FMaterialAttributesInput
		constexpr auto Alpha = 0x70; // FExpressionInput
		constexpr auto PixelAttributeBlendType = 0x84; // EMaterialAttributeBlend
		constexpr auto VertexAttributeBlendType = 0x85; // EMaterialAttributeBlend
	}

	namespace n_UDistributionFloatParameterBase { // : UDistributionFloatConstant
		constexpr auto ParameterName = 0x40; // FName
		constexpr auto MinInput = 0x48; // float
		constexpr auto MaxInput = 0x4c; // float
		constexpr auto MinOutput = 0x50; // float
		constexpr auto MaxOutput = 0x54; // float
		constexpr auto ParamMode = 0x58; // DistributionParamMode
	}

	namespace n_URichTextBlockImageDecorator { // : URichTextBlockDecorator
		constexpr auto ImageSet = 0x28; // UDataTable*
	}

	namespace n_UWB_MOOptionsGameplayPanel_C { // : UMOUserWidgetOptionsGameplay
		constexpr auto Image_Line_UI = 0x368; // UImage*
	}

	namespace n_UMaterialExpressionLandscapePhysicalMaterialOutput { // : UMaterialExpressionCustomOutput
		constexpr auto Inputs = 0x40; // TArray<FPhysicalMaterialInput>
	}

	namespace n_UMaterialExpressionSaturate { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UMaterialExpressionParticleSubUV { // : UMaterialExpressionTextureSample
		constexpr auto bBlend = 0x60; // char : 1
	}

	namespace n_APartyBeaconHost { // : AOnlineBeaconHostObject
		constexpr auto State = 0x248; // UPartyBeaconState*
		constexpr auto bLogoutOnSessionTimeout = 0x2b0; // bool
		constexpr auto SessionTimeoutSecs = 0x2b4; // float
		constexpr auto TravelSessionTimeoutSecs = 0x2b8; // float
	}

	namespace n_UMORenameUserWidget { // : UMOUserWidget
		constexpr auto sOverrideValidChars = 0x2c8; // FString
		constexpr auto iNameMinLength = 0x2d8; // int32_t
		constexpr auto iNameMaxLength = 0x2dc; // int32_t
		constexpr auto pMOButton_OK = 0x2e0; // UMOButton*
		constexpr auto pMOButton_Cancel = 0x2e8; // UMOButton*
		constexpr auto pMOEditableText = 0x2f0; // UMOEditableTextBox*
	}

	namespace n_UDefaultLevelSequenceInstanceData { // : UObject
		constexpr auto TransformOriginActor = 0x30; // AActor*
		constexpr auto TransformOrigin = 0x40; // FTransform
	}

	namespace n_UGizmoAxisScaleParameterSource { // : UGizmoBaseFloatParameterSource
		constexpr auto AxisSource = 0x48; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0x58; // TScriptInterface<IGizmoTransformSource>
		constexpr auto ScaleMultiplier = 0x68; // float
		constexpr auto Parameter = 0x6c; // float
		constexpr auto LastChange = 0x70; // FGizmoFloatParameterChange
		constexpr auto CurScaleAxis = 0x78; // FVector
		constexpr auto CurScaleOrigin = 0x84; // FVector
		constexpr auto InitialTransform = 0x90; // FTransform
	}

	namespace n_UMediaSoundComponent { // : USynthComponent
		constexpr auto Channels = 0x6c0; // EMediaSoundChannels
		constexpr auto DynamicRateAdjustment = 0x6c4; // bool
		constexpr auto RateAdjustmentFactor = 0x6c8; // float
		constexpr auto RateAdjustmentRange = 0x6cc; // FFloatRange
		constexpr auto MediaPlayer = 0x6e0; // UMediaPlayer*
	}

	namespace n_ULevelCapture { // : UMovieSceneCapture
		constexpr auto bAutoStartCapture = 0x220; // bool
		constexpr auto PrerequisiteActorId = 0x22c; // FGuid
	}

	namespace n_UNetConnection { // : UPlayer
		constexpr auto Children = 0x48; // TArray<UChildConnection*>
		constexpr auto Driver = 0x58; // UNetDriver*
		constexpr auto PackageMapClass = 0x60; // UPackageMap*
		constexpr auto PackageMap = 0x68; // UPackageMap*
		constexpr auto OpenChannels = 0x70; // TArray<UChannel*>
		constexpr auto SentTemporaries = 0x80; // TArray<AActor*>
		constexpr auto ViewTarget = 0x90; // AActor*
		constexpr auto OwningActor = 0x98; // AActor*
		constexpr auto MaxPacket = 0xa0; // int32_t
		constexpr auto InternalAck = 0xa4; // char : 1
		constexpr auto PlayerId = 0x160; // FUniqueNetIdRepl
		constexpr auto LastReceiveTime = 0x1d0; // double
		constexpr auto ChannelsToTick = 0x1518; // TArray<UChannel*>
	}

	namespace n_UEnvQueryTest_Volume { // : UEnvQueryTest
		constexpr auto VolumeContext = 0x1f8; // UEnvQueryContext*
		constexpr auto VolumeClass = 0x200; // AVolume*
		constexpr auto bDoComplexVolumeTest = 0x208; // char : 1
	}

	namespace n_UInteractiveGizmoManager { // : UObject
		constexpr auto ActiveGizmos = 0x30; // TArray<FActiveGizmo>
		constexpr auto GizmoBuilders = 0x58; // TMap<FString, UInteractiveGizmoBuilder*>
	}

	namespace n_UNiagaraDataInterfaceStaticMesh { // : UNiagaraDataInterface
		constexpr auto SourceMode = 0x38; // ENDIStaticMesh_SourceMode
		constexpr auto DefaultMesh = 0x40; // UStaticMesh*
		constexpr auto Source = 0x48; // AActor*
		constexpr auto SourceComponent = 0x50; // UStaticMeshComponent*
		constexpr auto SectionFilter = 0x58; // FNDIStaticMeshSectionFilter
		constexpr auto bUsePhysicsBodyVelocity = 0x68; // bool
		constexpr auto FilteredSockets = 0x70; // TArray<FName>
	}

	namespace n_UNiagaraPreviewAxis_InterpParamVector { // : UNiagaraPreviewAxis_InterpParamBase
		constexpr auto Min = 0x38; // FVector
		constexpr auto Max = 0x44; // FVector
	}

	namespace n_UWB_TooltipItem_C { // : UMOTooltip
		constexpr auto CanvasPanel_1 = 0x298; // UCanvasPanel*
		constexpr auto Image_Line = 0x2a0; // UImage*
		constexpr auto TitleText = 0x2a8; // UMOTextBlock_Title_Medium_Red_02*
		constexpr auto WeightText = 0x2b0; // UTextBlock*
		constexpr auto WP_CurrencyWidget = 0x2b8; // UWP_CurrencyWidget_C*
	}

	namespace n_UMODataAssetTattooEffect { // : UPrimaryDataAsset
		constexpr auto pTattooVisuals = 0x30; // UMODataAssetTattooVisuals*
		constexpr auto pTattooEffectPreviewMaterial = 0x38; // UMaterialInterface*
		constexpr auto eTattooType = 0x40; // ETattooEffectType
		constexpr auto CharCreation_UIColor = 0x44; // FColor
	}

	namespace n_UInteractiveToolManager { // : UObject
		constexpr auto ActiveLeftTool = 0x30; // UInteractiveTool*
		constexpr auto ActiveRightTool = 0x38; // UInteractiveTool*
		constexpr auto ToolBuilders = 0x90; // TMap<FString, UInteractiveToolBuilder*>
	}

	namespace n_UInterpData { // : UObject
		constexpr auto InterpLength = 0x28; // float
		constexpr auto PathBuildTime = 0x2c; // float
		constexpr auto InterpGroups = 0x30; // TArray<UInterpGroup*>
		constexpr auto CurveEdSetup = 0x40; // UInterpCurveEdSetup*
		constexpr auto EdSectionStart = 0x48; // float
		constexpr auto EdSectionEnd = 0x4c; // float
		constexpr auto bShouldBakeAndPrune = 0x50; // char : 1
		constexpr auto CachedDirectorGroup = 0x58; // UInterpGroupDirector*
		constexpr auto AllEventNames = 0x60; // TArray<FName>
	}

	namespace n_UChaosClothConfig { // : UClothConfigCommon
		constexpr auto MassMode = 0x28; // EClothMassMode
		constexpr auto UniformMass = 0x2c; // float
		constexpr auto TotalMass = 0x30; // float
		constexpr auto Density = 0x34; // float
		constexpr auto MinPerParticleMass = 0x38; // float
		constexpr auto EdgeStiffness = 0x3c; // float
		constexpr auto BendingStiffness = 0x40; // float
		constexpr auto bUseBendingElements = 0x44; // bool
		constexpr auto AreaStiffness = 0x48; // float
		constexpr auto VolumeStiffness = 0x4c; // float
		constexpr auto StrainLimitingStiffness = 0x50; // float
		constexpr auto LimitScale = 0x54; // float
		constexpr auto TetherMode = 0x58; // EChaosClothTetherMode
		constexpr auto bUseGeodesicDistance = 0x59; // bool
		constexpr auto ShapeTargetStiffness = 0x5c; // float
		constexpr auto CollisionThickness = 0x60; // float
		constexpr auto FrictionCoefficient = 0x64; // float
		constexpr auto bUseSelfCollisions = 0x68; // bool
		constexpr auto SelfCollisionThickness = 0x6c; // float
		constexpr auto bUseLegacyBackstop = 0x70; // bool
		constexpr auto DampingCoefficient = 0x74; // float
		constexpr auto bUsePointBasedWindModel = 0x78; // bool
		constexpr auto DragCoefficient = 0x7c; // float
		constexpr auto LiftCoefficient = 0x80; // float
		constexpr auto bUseGravityOverride = 0x84; // bool
		constexpr auto GravityScale = 0x88; // float
		constexpr auto Gravity = 0x8c; // FVector
		constexpr auto AnimDriveSpringStiffness = 0x98; // float
		constexpr auto LinearVelocityScale = 0x9c; // FVector
		constexpr auto AngularVelocityScale = 0xa8; // float
		constexpr auto bUseTetrahedralConstraints = 0xac; // bool
		constexpr auto bUseThinShellVolumeConstraints = 0xad; // bool
		constexpr auto bUseContinuousCollisionDetection = 0xae; // bool
	}

	namespace n_UMovieSceneSpawnTrack { // : UMovieSceneTrack
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
		constexpr auto ObjectGuid = 0x88; // FGuid
	}

	namespace n_USoundNodeDialoguePlayer { // : USoundNode
		constexpr auto DialogueWaveParameter = 0x48; // FDialogueWaveParameter
		constexpr auto bLooping = 0x68; // char : 1
	}

	namespace n_UMovieSceneBindingOverrides { // : UObject
		constexpr auto BindingData = 0x28; // TArray<FMovieSceneBindingOverrideData>
	}

	namespace n_UGizmoComponentHitTarget { // : UObject
		constexpr auto Component = 0x30; // UPrimitiveComponent*
	}

	namespace n_UGeometryCacheComponent { // : UMeshComponent
		constexpr auto GeometryCache = 0x468; // UGeometryCache*
		constexpr auto bRunning = 0x470; // bool
		constexpr auto bLooping = 0x471; // bool
		constexpr auto StartTimeOffset = 0x474; // float
		constexpr auto PlaybackSpeed = 0x478; // float
		constexpr auto NumTracks = 0x47c; // int32_t
		constexpr auto ElapsedTime = 0x480; // float
		constexpr auto Duration = 0x4b4; // float
		constexpr auto bManualTick = 0x4b8; // bool
	}

	namespace n_AWaterBodyIsland { // : AActor
		constexpr auto SplineComp = 0x228; // UWaterSplineComponent*
	}

	namespace n_UDatasmithStaticMeshGLTFImportData { // : UDatasmithStaticMeshImportData
		constexpr auto SourceMeshName = 0x28; // FString
	}

	namespace n_UBorderSlot { // : UPanelSlot
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UGizmoRectangleComponent { // : UGizmoBaseComponent
		constexpr auto DirectionX = 0x460; // FVector
		constexpr auto DirectionY = 0x46c; // FVector
		constexpr auto OffsetX = 0x478; // float
		constexpr auto OffsetY = 0x47c; // float
		constexpr auto LengthX = 0x480; // float
		constexpr auto LengthY = 0x484; // float
		constexpr auto Thickness = 0x488; // float
		constexpr auto SegmentFlags = 0x48c; // char
	}

	namespace n_UAnimBoneCompressionSettings { // : UObject
		constexpr auto Codecs = 0x28; // TArray<UAnimBoneCompressionCodec*>
	}

	namespace n_ABP_Login_Camera_C { // : AMOCineCameraActor
		constexpr auto UberGraphFrame = 0x810; // FPointerToUberGraphFrame
		constexpr auto LookForPaperdollType = 0x818; // EMOPaperdollActorType
	}

	namespace n_UMOAssetManager { // : UAssetManager
		constexpr auto bHasLoadedPlayerDefinitions = 0x458; // bool
		constexpr auto PlayerBodyDefinitions = 0x460; // TMap<FPrimaryAssetId, UMODataAssetPlayerBaseDefinition*>
	}

	namespace n_UMaterialExpressionSetMaterialAttributes { // : UMaterialExpression
		constexpr auto Inputs = 0x40; // TArray<FExpressionInput>
		constexpr auto AttributeSetTypes = 0x50; // TArray<FGuid>
	}

	namespace n_UNiagaraDataInterfaceAudioOscilloscope { // : UNiagaraDataInterface
		constexpr auto Submix = 0x38; // USoundSubmix*
		constexpr auto Resolution = 0x40; // int32_t
		constexpr auto ScopeInMilliseconds = 0x44; // float
	}

	namespace n_UTransformProxy { // : UObject
		constexpr auto bRotatePerObject = 0x70; // bool
		constexpr auto bSetPivotMode = 0x71; // bool
		constexpr auto SharedTransform = 0x90; // FTransform
		constexpr auto InitialSharedTransform = 0xc0; // FTransform
	}

	namespace n_ULakeCollisionComponent { // : UPrimitiveComponent
		constexpr auto CachedBodySetup = 0x440; // UBodySetup*
		constexpr auto BoxExtent = 0x448; // FVector
	}

	namespace n_UAmbisonicsEncodingSettings { // : USoundfieldEncodingSettingsBase
		constexpr auto AmbisonicsOrder = 0x28; // int32_t
	}

	namespace n_UPawnSensingComponent { // : UActorComponent
		constexpr auto HearingThreshold = 0xb0; // float
		constexpr auto LOSHearingThreshold = 0xb4; // float
		constexpr auto SightRadius = 0xb8; // float
		constexpr auto SensingInterval = 0xbc; // float
		constexpr auto HearingMaxSoundAge = 0xc0; // float
		constexpr auto bEnableSensingUpdates = 0xc4; // char : 1
		constexpr auto bOnlySensePlayers = 0xc4; // char : 1
		constexpr auto bSeePawns = 0xc4; // char : 1
		constexpr auto bHearNoises = 0xc4; // char : 1
		constexpr auto OnSeePawn = 0xd0; // FMulticastInlineDelegate
		constexpr auto OnHearNoise = 0xe0; // FMulticastInlineDelegate
		constexpr auto PeripheralVisionAngle = 0xf0; // float
		constexpr auto PeripheralVisionCosine = 0xf4; // float
	}

	namespace n_UInputBehaviorSet { // : UObject
		constexpr auto Behaviors = 0x28; // TArray<FBehaviorInfo>
	}

	namespace n_UInAppPurchaseCallbackProxy { // : UObject
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UGizmoComponentAxisSource { // : UObject
		constexpr auto Component = 0x30; // USceneComponent*
		constexpr auto AxisIndex = 0x38; // int32_t
		constexpr auto bLocalAxes = 0x3c; // bool
	}

	namespace n_UMOItemListEntry { // : UMOWidgetBlueprint
		constexpr auto pButton = 0x270; // UButton*
		constexpr auto pTextBlockItemName = 0x278; // UTextBlock*
		constexpr auto pCurrencyWidget = 0x280; // UMOCurrencyWidget*
		constexpr auto pItemSlot = 0x288; // UMOItemSlotStatic*
		constexpr auto pParentWidget = 0x290; // UMOUserWidget*
		constexpr auto pParentScrollBox = 0x298; // UMOScrollBox*
	}

	namespace n_UParticleModuleSize_Seeded { // : UParticleModuleSize
		constexpr auto RandomSeedInfo = 0x78; // FParticleRandomSeedInfo
	}

	namespace n_UARTrackedObject { // : UARTrackedGeometry
		constexpr auto DetectedObject = 0xf8; // UARCandidateObject*
	}

	namespace n_UWB_ButtonPetSkillWidget_C { // : UMOButtonPetSkillWidget
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
	}

	namespace n_UParticleModuleEventReceiverSpawn { // : UParticleModuleEventReceiverBase
		constexpr auto SpawnCount = 0x40; // FRawDistributionFloat
		constexpr auto bUseParticleTime = 0x70; // char : 1
		constexpr auto bUsePSysLocation = 0x70; // char : 1
		constexpr auto bInheritVelocity = 0x70; // char : 1
		constexpr auto InheritVelocityScale = 0x78; // FRawDistributionVector
		constexpr auto PhysicalMaterials = 0xc0; // TArray<UPhysicalMaterial*>
		constexpr auto bBanPhysicalMaterials = 0xd0; // char : 1
	}

	namespace n_UBlueprint { // : UBlueprintCore
		constexpr auto ParentClass = 0x50; // UObject*
		constexpr auto BlueprintType = 0x58; // EBlueprintType
		constexpr auto bRecompileOnLoad = 0x59; // char : 1
		constexpr auto bHasBeenRegenerated = 0x59; // char : 1
		constexpr auto bIsRegeneratingOnLoad = 0x59; // char : 1
		constexpr auto BlueprintSystemVersion = 0x5c; // int32_t
		constexpr auto SimpleConstructionScript = 0x60; // USimpleConstructionScript*
		constexpr auto ComponentTemplates = 0x68; // TArray<UActorComponent*>
		constexpr auto Timelines = 0x78; // TArray<UTimelineTemplate*>
		constexpr auto ComponentClassOverrides = 0x88; // TArray<FBPComponentClassOverride>
		constexpr auto InheritableComponentHandler = 0x98; // UInheritableComponentHandler*
	}

	namespace n_UMaterialExpressionBumpOffset { // : UMaterialExpression
		constexpr auto Coordinate = 0x40; // FExpressionInput
		constexpr auto Height = 0x54; // FExpressionInput
		constexpr auto HeightRatioInput = 0x68; // FExpressionInput
		constexpr auto HeightRatio = 0x7c; // float
		constexpr auto ReferencePlane = 0x80; // float
		constexpr auto ConstCoordinate = 0x84; // uint32_t
	}

	namespace n_UAnimInstance { // : UObject
		constexpr auto CurrentSkeleton = 0x28; // USkeleton*
		constexpr auto RootMotionMode = 0x30; // ERootMotionMode
		constexpr auto bUseMultiThreadedAnimationUpdate = 0x31; // char : 1
		constexpr auto bUsingCopyPoseFromMesh = 0x31; // char : 1
		constexpr auto bReceiveNotifiesFromLinkedInstances = 0x31; // char : 1
		constexpr auto bPropagateNotifiesToLinkedInstances = 0x31; // char : 1
		constexpr auto bQueueMontageEvents = 0x31; // char : 1
		constexpr auto OnMontageBlendingOut = 0x38; // FMulticastInlineDelegate
		constexpr auto OnMontageStarted = 0x48; // FMulticastInlineDelegate
		constexpr auto OnMontageEnded = 0x58; // FMulticastInlineDelegate
		constexpr auto OnAllMontageInstancesEnded = 0x68; // FMulticastInlineDelegate
		constexpr auto NotifyQueue = 0x100; // FAnimNotifyQueue
		constexpr auto ActiveAnimNotifyState = 0x170; // TArray<FAnimNotifyEvent>
	}

	namespace n_UMaterialExpressionHairColor { // : UMaterialExpression
		constexpr auto Melanin = 0x40; // FExpressionInput
		constexpr auto Redness = 0x54; // FExpressionInput
		constexpr auto DyeColor = 0x68; // FExpressionInput
	}

	namespace n_USoundNodeMixer { // : USoundNode
		constexpr auto InputVolume = 0x48; // TArray<float>
	}

	namespace n_AMOEquipmentActorQuiver { // : AMOEquipmentActorStaticMesh
		constexpr auto bRefreshArrowsOnly = 0x298; // bool
		constexpr auto NumVisibleArrows = 0x29c; // int32_t
	}

	namespace n_UMeshMergeComponent { // : UProceduralMeshComponent
		constexpr auto pFallbackMaterial = 0x4d0; // UMaterialInterface*
		constexpr auto vCombinedMaterials = 0x4d8; // TArray<UMaterialInstanceDynamic*>
	}

	namespace n_UEnvQueryGenerator_PathingGrid { // : UEnvQueryGenerator_SimpleGrid
		constexpr auto PathToItem = 0xf8; // FAIDataProviderBoolValue
		constexpr auto NavigationFilter = 0x130; // UNavigationQueryFilter*
		constexpr auto ScanRangeMultiplier = 0x138; // FAIDataProviderFloatValue
	}

	namespace n_UDatasmithPostProcessVolumeTemplate { // : UDatasmithObjectTemplate
		constexpr auto Settings = 0x30; // FDatasmithPostProcessSettingsTemplate
		constexpr auto bEnabled = 0x70; // char : 1
		constexpr auto bUnbound = 0x70; // char : 1
	}

	namespace n_UMOAudioComponentPoolSubsystem { // : UMOWorldSubsystemBase
		constexpr auto AudioComponentPoolActor = 0x38; // AMOAudioComponentPoolSubsystemActor*
	}

	namespace n_UMOButtonSmall { // : UMOButton
		constexpr auto CustomStyle = 0x438; // USlateWidgetStyleAsset*
	}

	namespace n_UMOSkillsVeteran { // : UMOWidgetBlueprint
		constexpr auto ActionListEntryLabel = 0x260; // FString
		constexpr auto ProffessionsListEntryLabel = 0x270; // FText
		constexpr auto pTextBlockPointsToSpend = 0x288; // UTextBlock*
		constexpr auto pTextBlockPointsInCrafting = 0x290; // UTextBlock*
		constexpr auto pTextBlockPointsInActions = 0x298; // UTextBlock*
	}

	namespace n_UDistributionFloatUniform { // : UDistributionFloat
		constexpr auto Min = 0x38; // float
		constexpr auto Max = 0x3c; // float
	}

	namespace n_UEditableGameplayTagQueryExpression_AllExprMatch { // : UEditableGameplayTagQueryExpression
		constexpr auto Expressions = 0x28; // TArray<UEditableGameplayTagQueryExpression*>
	}

	namespace n_UAnimSequenceBase { // : UAnimationAsset
		constexpr auto Notifies = 0x80; // TArray<FAnimNotifyEvent>
		constexpr auto SequenceLength = 0x90; // float
		constexpr auto RateScale = 0x94; // float
		constexpr auto RawCurveData = 0x98; // FRawCurveTracks
	}

	namespace n_UStreamingSettings { // : UDeveloperSettings
		constexpr auto AsyncLoadingThreadEnabled = 0x38; // char : 1
		constexpr auto WarnIfTimeLimitExceeded = 0x38; // char : 1
		constexpr auto TimeLimitExceededMultiplier = 0x3c; // float
		constexpr auto TimeLimitExceededMinTime = 0x40; // float
		constexpr auto MinBulkDataSizeForAsyncLoading = 0x44; // int32_t
		constexpr auto UseBackgroundLevelStreaming = 0x48; // char : 1
		constexpr auto AsyncLoadingUseFullTimeLimit = 0x48; // char : 1
		constexpr auto AsyncLoadingTimeLimit = 0x4c; // float
		constexpr auto PriorityAsyncLoadingExtraTime = 0x50; // float
		constexpr auto LevelStreamingActorsUpdateTimeLimit = 0x54; // float
		constexpr auto PriorityLevelStreamingActorsUpdateExtraTime = 0x58; // float
		constexpr auto LevelStreamingComponentsRegistrationGranularity = 0x5c; // int32_t
		constexpr auto LevelStreamingUnregisterComponentsTimeLimit = 0x60; // float
		constexpr auto LevelStreamingComponentsUnregistrationGranularity = 0x64; // int32_t
		constexpr auto FlushStreamingOnExit = 0x68; // char : 1
		constexpr auto EventDrivenLoaderEnabled = 0x68; // char : 1
	}

	namespace n_UInterpTrackInstDirector { // : UInterpTrackInst
		constexpr auto OldViewTarget = 0x28; // AActor*
	}

	namespace n_UScaleBox { // : UContentWidget
		constexpr auto Stretch = 0x120; // EStretch
		constexpr auto StretchDirection = 0x121; // EStretchDirection
		constexpr auto UserSpecifiedScale = 0x124; // float
		constexpr auto IgnoreInheritedScale = 0x128; // bool
	}

	namespace n_USplineComponent { // : UPrimitiveComponent
		constexpr auto SplineCurves = 0x440; // FSplineCurves
		constexpr auto SplineInfo = 0x4b0; // FInterpCurveVector
		constexpr auto SplineRotInfo = 0x4c8; // FInterpCurveQuat
		constexpr auto SplineScaleInfo = 0x4e0; // FInterpCurveVector
		constexpr auto SplineReparamTable = 0x4f8; // FInterpCurveFloat
		constexpr auto bAllowSplineEditingPerInstance = 0x510; // bool
		constexpr auto ReparamStepsPerSegment = 0x514; // int32_t
		constexpr auto Duration = 0x518; // float
		constexpr auto bStationaryEndpoints = 0x51c; // bool
		constexpr auto bSplineHasBeenEdited = 0x51d; // bool
		constexpr auto bModifiedByConstructionScript = 0x51e; // bool
		constexpr auto bInputSplinePointsToConstructionScript = 0x51f; // bool
		constexpr auto bDrawDebug = 0x520; // bool
		constexpr auto bClosedLoop = 0x521; // bool
		constexpr auto bLoopPositionOverride = 0x522; // bool
		constexpr auto LoopPosition = 0x524; // float
		constexpr auto DefaultUpVector = 0x528; // FVector
	}

	namespace n_URichTextBlock { // : UTextLayoutWidget
		constexpr auto Text = 0x128; // FText
		constexpr auto TextStyleSet = 0x140; // UDataTable*
		constexpr auto DecoratorClasses = 0x148; // TArray<URichTextBlockDecorator*>
		constexpr auto bOverrideDefaultStyle = 0x158; // bool
		constexpr auto DefaultTextStyleOverride = 0x160; // FTextBlockStyle
		constexpr auto MinDesiredWidth = 0x3d0; // float
		constexpr auto TextTransformPolicy = 0x3d4; // ETextTransformPolicy
		constexpr auto DefaultTextStyle = 0x3d8; // FTextBlockStyle
		constexpr auto InstanceDecorators = 0x648; // TArray<URichTextBlockDecorator*>
	}

	namespace n_UDebugCameraControllerSettings { // : UDeveloperSettings
		constexpr auto CycleViewModes = 0x38; // TArray<FDebugCameraControllerSettingsViewModeIndex>
	}

	namespace n_UProgressWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto ProgressBarStyle = 0x30; // FProgressBarStyle
	}

	namespace n_UBlendSpace { // : UBlendSpaceBase
		constexpr auto AxisToScaleAnimation = 0x148; // EBlendSpaceAxis
	}

	namespace n_ULocalLightComponent { // : ULightComponent
		constexpr auto IntensityUnits = 0x328; // ELightUnits
		constexpr auto Radius = 0x32c; // float
		constexpr auto AttenuationRadius = 0x330; // float
		constexpr auto LightmassSettings = 0x334; // FLightmassPointLightSettings
	}

	namespace n_UBlendSpaceBase { // : UAnimationAsset
		constexpr auto bRotationBlendInMeshSpace = 0x88; // bool
		constexpr auto AnimLength = 0x8c; // float
		constexpr auto InterpolationParam = 0x90; // FInterpolationParameter [0x3]
		constexpr auto TargetWeightInterpolationSpeedPerSec = 0xa8; // float
		constexpr auto NotifyTriggerMode = 0xac; // ENotifyTriggerMode
		constexpr auto PerBoneBlend = 0xb0; // TArray<FPerBoneInterpolation>
		constexpr auto SampleIndexWithMarkers = 0xc0; // int32_t
		constexpr auto SampleData = 0xc8; // TArray<FBlendSample>
		constexpr auto GridSamples = 0xd8; // TArray<FEditorElement>
		constexpr auto BlendParameters = 0xe8; // FBlendParameter [0x3]
	}

	namespace n_USoundNodeModulatorContinuous { // : USoundNode
		constexpr auto PitchModulationParams = 0x48; // FModulatorContinuousParams
		constexpr auto VolumeModulationParams = 0x68; // FModulatorContinuousParams
	}

	namespace n_UBTDecorator_TimeLimit { // : UBTDecorator
		constexpr auto TimeLimit = 0x68; // float
	}

	namespace n_UActorSequence { // : UMovieSceneSequence
		constexpr auto MovieScene = 0x60; // UMovieScene*
		constexpr auto ObjectReferences = 0x68; // FActorSequenceObjectReferenceMap
	}

	namespace n_UWidgetInteractionComponent { // : USceneComponent
		constexpr auto OnHoveredWidgetChanged = 0x1f8; // FMulticastInlineDelegate
		constexpr auto VirtualUserIndex = 0x218; // int32_t
		constexpr auto PointerIndex = 0x21c; // int32_t
		constexpr auto TraceChannel = 0x220; // ECollisionChannel
		constexpr auto InteractionDistance = 0x224; // float
		constexpr auto InteractionSource = 0x228; // EWidgetInteractionSource
		constexpr auto bEnableHitTesting = 0x229; // bool
		constexpr auto bShowDebug = 0x22a; // bool
		constexpr auto DebugSphereLineThickness = 0x22c; // float
		constexpr auto DebugLineThickness = 0x230; // float
		constexpr auto DebugColor = 0x234; // FLinearColor
		constexpr auto CustomHitResult = 0x2c0; // FHitResult
		constexpr auto LocalHitLocation = 0x34c; // FVector2D
		constexpr auto LastLocalHitLocation = 0x354; // FVector2D
		constexpr auto HoveredWidgetComponent = 0x360; // UWidgetComponent*
		constexpr auto LastHitResult = 0x368; // FHitResult
		constexpr auto bIsHoveredWidgetInteractable = 0x3f4; // bool
		constexpr auto bIsHoveredWidgetFocusable = 0x3f5; // bool
		constexpr auto bIsHoveredWidgetHitTestVisible = 0x3f6; // bool
	}

	namespace n_UMOAnimNotifyFootStep { // : UMOAnimNotify
		constexpr auto bLeft = 0x38; // bool
	}

	namespace n_UMOBrokerSellOrdersPanel { // : UMOBrokerPanel
		constexpr auto pMOBrokerCurrencyWidget = 0x2d8; // UMOBrokerCurrencyWidget*
		constexpr auto pMOButton_Close = 0x2e0; // UMOButton*
		constexpr auto pItemSlot = 0x2e8; // UMOItemSlotPlaceItem*
	}

	namespace n_UMOChildActorEquipmentComponent { // : UChildActorComponent
		constexpr auto bAutoActivateExtraComponents = 0x230; // bool
		constexpr auto EquipmentType = 0x231; // EEquipmentGroup
		constexpr auto WeaponData = 0x238; // FMOWeaponData
		constexpr auto ShieldData = 0x268; // FMOShieldData
		constexpr auto BowData = 0x298; // FMOBowData
		constexpr auto arrowData = 0x2c0; // FMOArrowData
		constexpr auto ArmorData = 0x2e8; // FMOArmorPartData
		constexpr auto PetEquipmentData = 0x310; // FMOArmorPartData
		constexpr auto ArmorSex = 0x338; // ESex
		constexpr auto ArmorSpecies = 0x339; // ESpecies
		constexpr auto bEquipmentActorNeedsUpdate = 0x33a; // bool
		constexpr auto bArrowOnBowNeedsUpdate = 0x33b; // bool
		constexpr auto bChildActorMeshAndTextureUseMaxDetail = 0x33c; // bool
		constexpr auto bAutoDestroyChildActorOnInvalidData = 0x33d; // bool
	}

	namespace n_ABP_MortalOnlinePlayerController_C { // : AMOPlayerController
		constexpr auto UberGraphFrame = 0x8b8; // FPointerToUberGraphFrame
	}

	namespace n_UAutomationTestSettings { // : UObject
		constexpr auto EngineTestModules = 0x28; // TArray<FString>
		constexpr auto EditorTestModules = 0x38; // TArray<FString>
		constexpr auto AutomationTestmap = 0x48; // FSoftObjectPath
		constexpr auto EditorPerformanceTestMaps = 0x60; // TArray<FEditorMapPerformanceTestDefinition>
		constexpr auto AssetsToOpen = 0x70; // TArray<FSoftObjectPath>
		constexpr auto MapsToPIETest = 0x80; // TArray<FString>
		constexpr auto BuildPromotionTest = 0x90; // FBuildPromotionTestSettings
		constexpr auto MaterialEditorPromotionTest = 0x280; // FMaterialEditorPromotionSettings
		constexpr auto ParticleEditorPromotionTest = 0x2b0; // FParticleEditorPromotionSettings
		constexpr auto BlueprintEditorPromotionTest = 0x2c0; // FBlueprintEditorPromotionSettings
		constexpr auto TestLevelFolders = 0x2f0; // TArray<FString>
		constexpr auto ExternalTools = 0x300; // TArray<FExternalToolDefinition>
		constexpr auto ImportExportTestDefinitions = 0x310; // TArray<FEditorImportExportTestDefinition>
		constexpr auto LaunchOnSettings = 0x320; // TArray<FLaunchOnTestSettings>
		constexpr auto DefaultScreenshotResolution = 0x330; // FIntPoint
		constexpr auto PIETestDuration = 0x338; // float
	}

	namespace n_UMovieSceneSlomoSection { // : UMovieSceneSection
		constexpr auto FloatCurve = 0xe8; // FMovieSceneFloatChannel
	}

	namespace n_AMOEquipmentActorPetEquipment { // : AMOEquipmentActor
		constexpr auto PetEquipmentComponent = 0x288; // USkeletalMeshComponent*
		constexpr auto MasterPoseComponentOverride = 0x290; // USkeletalMeshComponent*
		constexpr auto PetEquipmentData = 0x298; // FMOEquipmentActorPetEquipmentData
	}

	namespace n_UMaterialExpression { // : UObject
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UParticleModuleSourceMovement { // : UParticleModuleLocationBase
		constexpr auto SourceMovementScale = 0x30; // FRawDistributionVector
	}

	namespace n_UMOCharacterCollisionPoolSubsystem { // : UMOWorldSubsystemBase
		constexpr auto CollisionPoolActor = 0x38; // AMOCharacterCollisionPoolSubsystemActor*
	}

	namespace n_ASpiritArm_C { // : AMOSpiritArm
		constexpr auto UberGraphFrame = 0x2e0; // FPointerToUberGraphFrame
		constexpr auto BP_Orb = 0x2e8; // UChildActorComponent*
		constexpr auto Sphere = 0x2f0; // USphereComponent*
		constexpr auto StaticMesh1 = 0x2f8; // UStaticMeshComponent*
		constexpr auto Niagara = 0x300; // UNiagaraComponent*
		constexpr auto StaticMesh = 0x308; // UStaticMeshComponent*
	}

	namespace n_USafeZoneSlot { // : UPanelSlot
		constexpr auto bIsTitleSafe = 0x38; // bool
		constexpr auto SafeAreaScale = 0x3c; // FMargin
		constexpr auto HAlign = 0x4c; // EHorizontalAlignment
		constexpr auto VAlign = 0x4d; // EVerticalAlignment
		constexpr auto Padding = 0x50; // FMargin
	}

	namespace n_UAIDataProvider_QueryParams { // : UAIDataProvider
		constexpr auto ParamName = 0x28; // FName
		constexpr auto FloatValue = 0x30; // float
		constexpr auto IntValue = 0x34; // int32_t
		constexpr auto BoolValue = 0x38; // bool
	}

	namespace n_UCheatManager { // : UObject
		constexpr auto DebugCameraControllerRef = 0x28; // ADebugCameraController*
		constexpr auto DebugCameraControllerClass = 0x30; // ADebugCameraController*
	}

	namespace n_AMOTestingDummy { // : AActor
		constexpr auto pParticleSystem_SwingBloodTrail = 0x220; // UParticleSystem*
		constexpr auto sName = 0x228; // FString
	}

	namespace n_ABP_MOCharacterAI_Creature_C { // : AMOCharacterAICreature
		constexpr auto UberGraphFrame = 0xdb0; // FPointerToUberGraphFrame
		constexpr auto DeathEffectTimeline_fDissolveSkeleton_5635A14B4D106716143DBBB0A9BA9FDA = 0xdb8; // float
		constexpr auto DeathEffectTimeline_fMeshTranslation_5635A14B4D106716143DBBB0A9BA9FDA = 0xdbc; // float
		constexpr auto DeathEffectTimeline_fDissolveBody_5635A14B4D106716143DBBB0A9BA9FDA = 0xdc0; // float
		constexpr auto DeathEffectTimeline__Direction_5635A14B4D106716143DBBB0A9BA9FDA = 0xdc4; // ETimelineDirection
		constexpr auto DeathEffectTimeline = 0xdc8; // UTimelineComponent*
	}

	namespace n_UMaterialExpressionClamp { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Min = 0x54; // FExpressionInput
		constexpr auto Max = 0x68; // FExpressionInput
		constexpr auto ClampMode = 0x7c; // EClampMode
		constexpr auto MinDefault = 0x80; // float
		constexpr auto MaxDefault = 0x84; // float
	}

	namespace n_UMorphTarget { // : UObject
		constexpr auto BaseSkelMesh = 0x28; // USkeletalMesh*
	}

	namespace n_UWindDirectionalSourceComponent { // : USceneComponent
		constexpr auto Strength = 0x1f8; // float
		constexpr auto Speed = 0x1fc; // float
		constexpr auto MinGustAmount = 0x200; // float
		constexpr auto MaxGustAmount = 0x204; // float
		constexpr auto Radius = 0x208; // float
		constexpr auto bPointWind = 0x20c; // char : 1
	}

	namespace n_USubmixEffectMultibandCompressorPreset { // : USoundEffectSubmixPreset
		constexpr auto Settings = 0xb0; // FSubmixEffectMultibandCompressorSettings
	}

	namespace n_UMaterial { // : UMaterialInterface
		constexpr auto PhysMaterial = 0x88; // UPhysicalMaterial*
		constexpr auto PhysMaterialMask = 0x90; // UPhysicalMaterialMask*
		constexpr auto PhysicalMaterialMap = 0x98; // UPhysicalMaterial* [0x8]
		constexpr auto Metallic = 0xd8; // FScalarMaterialInput
		constexpr auto Specular = 0xec; // FScalarMaterialInput
		constexpr auto Anisotropy = 0x100; // FScalarMaterialInput
		constexpr auto Normal = 0x114; // FVectorMaterialInput
		constexpr auto Tangent = 0x128; // FVectorMaterialInput
		constexpr auto EmissiveColor = 0x13c; // FColorMaterialInput
		constexpr auto MaterialDomain = 0x150; // EMaterialDomain
		constexpr auto BlendMode = 0x151; // EBlendMode
		constexpr auto DecalBlendMode = 0x152; // EDecalBlendMode
		constexpr auto MaterialDecalResponse = 0x153; // EMaterialDecalResponse
		constexpr auto ShadingModel = 0x154; // EMaterialShadingModel
		constexpr auto bCastDynamicShadowAsMasked = 0x155; // char : 1
		constexpr auto ShadingModels = 0x156; // FMaterialShadingModelField
		constexpr auto OpacityMaskClipValue = 0x158; // float
		constexpr auto WorldPositionOffset = 0x15c; // FVectorMaterialInput
		constexpr auto Refraction = 0x170; // FScalarMaterialInput
		constexpr auto MaterialAttributes = 0x184; // FMaterialAttributesInput
		constexpr auto PixelDepthOffset = 0x19c; // FScalarMaterialInput
		constexpr auto ShadingModelFromMaterialExpression = 0x1b0; // FShadingModelMaterialInput
		constexpr auto bEnableSeparateTranslucency = 0x1c4; // char : 1
		constexpr auto bEnableResponsiveAA = 0x1c4; // char : 1
		constexpr auto bScreenSpaceReflections = 0x1c4; // char : 1
		constexpr auto bContactShadows = 0x1c4; // char : 1
		constexpr auto TwoSided = 0x1c4; // char : 1
		constexpr auto DitheredLODTransition = 0x1c4; // char : 1
		constexpr auto DitherOpacityMask = 0x1c4; // char : 1
		constexpr auto bAllowNegativeEmissiveColor = 0x1c4; // char : 1
		constexpr auto TranslucencyLightingMode = 0x1c5; // ETranslucencyLightingMode
		constexpr auto bEnableMobileSeparateTranslucency = 0x1c6; // char : 1
		constexpr auto NumCustomizedUVs = 0x1c8; // int32_t
		constexpr auto TranslucencyDirectionalLightingIntensity = 0x1cc; // float
		constexpr auto TranslucentShadowDensityScale = 0x1d0; // float
		constexpr auto TranslucentSelfShadowDensityScale = 0x1d4; // float
		constexpr auto TranslucentSelfShadowSecondDensityScale = 0x1d8; // float
		constexpr auto TranslucentSelfShadowSecondOpacity = 0x1dc; // float
		constexpr auto TranslucentBackscatteringExponent = 0x1e0; // float
		constexpr auto TranslucentMultipleScatteringExtinction = 0x1e4; // FLinearColor
		constexpr auto TranslucentShadowStartOffset = 0x1f4; // float
		constexpr auto bDisableDepthTest = 0x1f8; // char : 1
		constexpr auto bWriteOnlyAlpha = 0x1f8; // char : 1
		constexpr auto bGenerateSphericalParticleNormals = 0x1f8; // char : 1
		constexpr auto bTangentSpaceNormal = 0x1f8; // char : 1
		constexpr auto bUseEmissiveForDynamicAreaLighting = 0x1f8; // char : 1
		constexpr auto bBlockGI = 0x1f8; // char : 1
		constexpr auto bUsedAsSpecialEngineMaterial = 0x1f8; // char : 1
		constexpr auto bUsedWithSkeletalMesh = 0x1f8; // char : 1
		constexpr auto bUsedWithEditorCompositing = 0x1f9; // char : 1
		constexpr auto bUsedWithParticleSprites = 0x1f9; // char : 1
		constexpr auto bUsedWithBeamTrails = 0x1f9; // char : 1
		constexpr auto bUsedWithMeshParticles = 0x1f9; // char : 1
		constexpr auto bUsedWithNiagaraSprites = 0x1f9; // char : 1
		constexpr auto bUsedWithNiagaraRibbons = 0x1f9; // char : 1
		constexpr auto bUsedWithNiagaraMeshParticles = 0x1f9; // char : 1
		constexpr auto bUsedWithGeometryCache = 0x1f9; // char : 1
		constexpr auto bUsedWithStaticLighting = 0x1fa; // char : 1
		constexpr auto bUsedWithMorphTargets = 0x1fa; // char : 1
		constexpr auto bUsedWithSplineMeshes = 0x1fa; // char : 1
		constexpr auto bUsedWithInstancedStaticMeshes = 0x1fa; // char : 1
		constexpr auto bUsedWithGeometryCollections = 0x1fa; // char : 1
		constexpr auto bUsesDistortion = 0x1fa; // char : 1
		constexpr auto bUsedWithClothing = 0x1fa; // char : 1
		constexpr auto bUsedWithWater = 0x1fc; // char : 1
		constexpr auto bUsedWithHairStrands = 0x1fc; // char : 1
		constexpr auto bUsedWithLidarPointCloud = 0x1fc; // char : 1
		constexpr auto bUsedWithVirtualHeightfieldMesh = 0x1fc; // char : 1
		constexpr auto bUsedWithUI = 0x200; // char : 1
		constexpr auto bAutomaticallySetUsageInEditor = 0x200; // char : 1
		constexpr auto bFullyRough = 0x200; // char : 1
		constexpr auto bUseFullPrecision = 0x200; // char : 1
		constexpr auto bUseLightmapDirectionality = 0x200; // char : 1
		constexpr auto bUseAlphaToCoverage = 0x200; // char : 1
		constexpr auto bForwardRenderUsePreintegratedGFForSimpleIBL = 0x204; // char : 1
		constexpr auto bUseHQForwardReflections = 0x208; // char : 1
		constexpr auto bUsePlanarForwardReflections = 0x208; // char : 1
		constexpr auto bNormalCurvatureToRoughness = 0x208; // char : 1
		constexpr auto D3D11TessellationMode = 0x209; // EMaterialTessellationMode
		constexpr auto bEnableCrackFreeDisplacement = 0x20a; // char : 1
		constexpr auto bEnableAdaptiveTessellation = 0x20a; // char : 1
		constexpr auto AllowTranslucentCustomDepthWrites = 0x20a; // char : 1
		constexpr auto Wireframe = 0x20a; // char : 1
		constexpr auto ShadingRate = 0x20b; // EMaterialShadingRate
		constexpr auto bCanMaskedBeAssumedOpaque = 0x20c; // char : 1
		constexpr auto bIsMasked = 0x20c; // char : 1
		constexpr auto bIsPreviewMaterial = 0x20c; // char : 1
		constexpr auto bIsFunctionPreviewMaterial = 0x20c; // char : 1
		constexpr auto bUseMaterialAttributes = 0x20c; // char : 1
		constexpr auto bCastRayTracedShadows = 0x20c; // char : 1
		constexpr auto bUseTranslucencyVertexFog = 0x20c; // char : 1
		constexpr auto bApplyCloudFogging = 0x20c; // char : 1
		constexpr auto bIsSky = 0x20d; // char : 1
		constexpr auto bComputeFogPerPixel = 0x20d; // char : 1
		constexpr auto bOutputTranslucentVelocity = 0x20d; // char : 1
		constexpr auto bAllowDevelopmentShaderCompile = 0x20d; // char : 1
		constexpr auto bIsMaterialEditorStatsMaterial = 0x20d; // char : 1
		constexpr auto BlendableLocation = 0x20e; // EBlendableLocation
		constexpr auto BlendableOutputAlpha = 0x20f; // char : 1
		constexpr auto bEnableStencilTest = 0x20f; // char : 1
		constexpr auto StencilCompare = 0x210; // EMaterialStencilCompare
		constexpr auto StencilRefValue = 0x211; // char
		constexpr auto RefractionMode = 0x212; // ERefractionMode
		constexpr auto BlendablePriority = 0x214; // int32_t
		constexpr auto bIsBlendable = 0x218; // char : 1
		constexpr auto UsageFlagWarnings = 0x21c; // uint32_t
		constexpr auto RefractionDepthBias = 0x220; // float
		constexpr auto StateId = 0x224; // FGuid
		constexpr auto MaxDisplacement = 0x234; // float
		constexpr auto CachedExpressionData = 0x268; // FMaterialCachedExpressionData
	}

	namespace n_UScrollBoxWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto ScrollBoxStyle = 0x30; // FScrollBoxStyle
	}

	namespace n_UShowLoginUICallbackProxy { // : UBlueprintAsyncActionBase
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UParticleModule { // : UObject
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x29; // char : 1
		constexpr auto LODDuplicate = 0x29; // char : 1
		constexpr auto bSupportsRandomSeed = 0x29; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x29; // char : 1
		constexpr auto LODValidity = 0x2a; // char
	}

	namespace n_UModularSynthPresetBank { // : UObject
		constexpr auto Presets = 0x28; // TArray<FModularSynthPresetBankEntry>
	}

	namespace n_UMovieSceneCameraShakeSourceTriggerSection { // : UMovieSceneSection
		constexpr auto Channel = 0xe8; // FMovieSceneCameraShakeSourceTriggerChannel
	}

	namespace n_UAIPerceptionStimuliSourceComponent { // : UActorComponent
		constexpr auto bAutoRegisterAsSource = 0xb0; // char : 1
		constexpr auto RegisterAsSourceForSenses = 0xb8; // TArray<UAISense*>
	}

	namespace n_AMOEquipmentActorStaticMesh { // : AMOEquipmentActor
		constexpr auto StaticMeshComponent = 0x288; // UStaticMeshComponent*
		constexpr auto StaticMesh = 0x290; // UStaticMesh*
	}

	namespace n_UPhysicsConstraintComponent { // : USceneComponent
		constexpr auto ConstraintActor1 = 0x1f8; // AActor*
		constexpr auto ComponentName1 = 0x200; // FConstrainComponentPropName
		constexpr auto ConstraintActor2 = 0x208; // AActor*
		constexpr auto ComponentName2 = 0x210; // FConstrainComponentPropName
		constexpr auto ConstraintSetup = 0x228; // UPhysicsConstraintTemplate*
		constexpr auto OnConstraintBroken = 0x230; // FMulticastInlineDelegate
		constexpr auto ConstraintInstance = 0x240; // FConstraintInstance
	}

	namespace n_UMaterialExpressionPanner { // : UMaterialExpression
		constexpr auto Coordinate = 0x40; // FExpressionInput
		constexpr auto Time = 0x54; // FExpressionInput
		constexpr auto Speed = 0x68; // FExpressionInput
		constexpr auto SpeedX = 0x7c; // float
		constexpr auto SpeedY = 0x80; // float
		constexpr auto ConstCoordinate = 0x84; // uint32_t
		constexpr auto bFractionalPart = 0x88; // bool
	}

	namespace n_UInterpTrackInstColorProp { // : UInterpTrackInstProperty
		constexpr auto ResetColor = 0x58; // FColor
	}

	namespace n_UPhysicalAnimationComponent { // : UActorComponent
		constexpr auto StrengthMultiplyer = 0xb0; // float
		constexpr auto SkeletalMeshComponent = 0xb8; // USkeletalMeshComponent*
	}

	namespace n_UDatasmithFBXSceneImportData { // : UDatasmithSceneImportData
		constexpr auto bGenerateLightmapUVs = 0x28; // bool
		constexpr auto TexturesDir = 0x30; // FString
		constexpr auto IntermediateSerialization = 0x40; // char
		constexpr auto bColorizeMaterials = 0x41; // bool
	}

	namespace n_USphereReflectionCaptureComponent { // : UReflectionCaptureComponent
		constexpr auto InfluenceRadius = 0x270; // float
		constexpr auto CaptureDistanceScale = 0x274; // float
		constexpr auto PreviewInfluenceRadius = 0x278; // UDrawSphereComponent*
	}

	namespace n_UCharacterCompositionComponent { // : UActorComponent
		constexpr auto bControlledByCompositionSubsystem = 0xb0; // bool
		constexpr auto bPreviewEditorProxy = 0xb1; // bool
		constexpr auto EditorProxy = 0xc0; // FCharacterCompositionPart
		constexpr auto Parts = 0x210; // TMap<FName, FCharacterCompositionPart>
	}

	namespace n_UMovieSceneVectorTrack { // : UMovieScenePropertyTrack
		constexpr auto NumChannelsUsed = 0xb0; // int32_t
	}

	namespace n_UAISenseConfig { // : UObject
		constexpr auto DebugColor = 0x28; // FColor
		constexpr auto MaxAge = 0x2c; // float
		constexpr auto bStartsEnabled = 0x30; // char : 1
	}

	namespace n_APaperSpriteActor { // : AActor
		constexpr auto RenderComponent = 0x220; // UPaperSpriteComponent*
	}

	namespace n_UEditableStaticMeshAdapter { // : UEditableMeshAdapter
		constexpr auto StaticMesh = 0x28; // UStaticMesh*
		constexpr auto OriginalStaticMesh = 0x30; // UStaticMesh*
		constexpr auto StaticMeshLODIndex = 0x38; // int32_t
	}

	namespace n_AMOCineCameraActor { // : ACineCameraActor
		constexpr auto CameraAssignment = 0x800; // EMOMainMenuCameraAssignment
	}

	namespace n_UEnvQueryTest { // : UEnvQueryNode
		constexpr auto TestOrder = 0x30; // int32_t
		constexpr auto TestPurpose = 0x34; // EEnvTestPurpose
		constexpr auto TestComment = 0x38; // FString
		constexpr auto MultipleContextFilterOp = 0x48; // EEnvTestFilterOperator
		constexpr auto MultipleContextScoreOp = 0x49; // EEnvTestScoreOperator
		constexpr auto FilterType = 0x4a; // EEnvTestFilterType
		constexpr auto BoolValue = 0x50; // FAIDataProviderBoolValue
		constexpr auto FloatValueMin = 0x88; // FAIDataProviderFloatValue
		constexpr auto FloatValueMax = 0xc0; // FAIDataProviderFloatValue
		constexpr auto ScoringEquation = 0xf9; // EEnvTestScoreEquation
		constexpr auto ClampMinType = 0xfa; // EEnvQueryTestClamping
		constexpr auto ClampMaxType = 0xfb; // EEnvQueryTestClamping
		constexpr auto NormalizationType = 0xfc; // EEQSNormalizationType
		constexpr auto ScoreClampMin = 0x100; // FAIDataProviderFloatValue
		constexpr auto ScoreClampMax = 0x138; // FAIDataProviderFloatValue
		constexpr auto ScoringFactor = 0x170; // FAIDataProviderFloatValue
		constexpr auto ReferenceValue = 0x1a8; // FAIDataProviderFloatValue
		constexpr auto bDefineReferenceValue = 0x1e0; // bool
		constexpr auto bWorkOnFloatValues = 0x1f0; // char : 1
	}

	namespace n_UMOQuestWidget { // : UMOUserWidget
		constexpr auto pQuestVerticalBox = 0x2c8; // UVerticalBox*
		constexpr auto cMOQuestEntry = 0x2d0; // UMOQuestEntry*
		constexpr auto vQuests = 0x2d8; // TArray<UMOQuestEntry*>
	}

	namespace n_ULevelSequenceBurnIn { // : UUserWidget
		constexpr auto FrameInformation = 0x260; // FLevelSequencePlayerSnapshot
		constexpr auto LevelSequenceActor = 0x318; // ALevelSequenceActor*
	}

	namespace n_UMODataAssetMagic { // : UMODataAssetMagicShared
		constexpr auto cMagicBallEffectClass = 0x30; // AMOMagicEffectBall*
		constexpr auto pFingerBeam = 0x38; // UNiagaraSystem*
	}

	namespace n_UInputKeySelector { // : UWidget
		constexpr auto WidgetStyle = 0x108; // FButtonStyle
		constexpr auto TextStyle = 0x380; // FTextBlockStyle
		constexpr auto SelectedKey = 0x5f0; // FInputChord
		constexpr auto Font = 0x610; // FSlateFontInfo
		constexpr auto Margin = 0x668; // FMargin
		constexpr auto ColorAndOpacity = 0x678; // FLinearColor
		constexpr auto KeySelectionText = 0x688; // FText
		constexpr auto NoKeySpecifiedText = 0x6a0; // FText
		constexpr auto bAllowModifierKeys = 0x6b8; // bool
		constexpr auto bAllowGamepadKeys = 0x6b9; // bool
		constexpr auto EscapeKeys = 0x6c0; // TArray<FKey>
		constexpr auto OnKeySelected = 0x6d0; // FMulticastInlineDelegate
		constexpr auto OnIsSelectingKeyChanged = 0x6e0; // FMulticastInlineDelegate
	}

	namespace n_UMovieSceneMaterialTrack { // : UMovieSceneNameableTrack
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_UInteractiveToolsContext { // : UObject
		constexpr auto InputRouter = 0x58; // UInputRouter*
		constexpr auto ToolManager = 0x60; // UInteractiveToolManager*
		constexpr auto GizmoManager = 0x68; // UInteractiveGizmoManager*
		constexpr auto ToolManagerClass = 0x70; // TSoftClassPtr<UObject>
	}

	namespace n_URetainerBox { // : UContentWidget
		constexpr auto bRetainRender = 0x120; // bool
		constexpr auto RenderOnInvalidation = 0x121; // bool
		constexpr auto RenderOnPhase = 0x122; // bool
		constexpr auto Phase = 0x124; // int32_t
		constexpr auto PhaseCount = 0x128; // int32_t
		constexpr auto EffectMaterial = 0x130; // UMaterialInterface*
		constexpr auto TextureParameter = 0x138; // FName
	}

	namespace n_UARTrackedPose { // : UARTrackedGeometry
		constexpr auto TrackedPose = 0xf8; // FARPose3D
	}

	namespace n_UControlRigComponent { // : UPrimitiveComponent
		constexpr auto ControlRigClass = 0x440; // UControlRig*
		constexpr auto OnPostInitializeDelegate = 0x448; // FMulticastInlineDelegate
		constexpr auto OnPreSetupDelegate = 0x458; // FMulticastInlineDelegate
		constexpr auto OnPostSetupDelegate = 0x468; // FMulticastInlineDelegate
		constexpr auto OnPreUpdateDelegate = 0x478; // FMulticastInlineDelegate
		constexpr auto OnPostUpdateDelegate = 0x488; // FMulticastInlineDelegate
		constexpr auto MappedElements = 0x498; // TArray<FControlRigComponentMappedElement>
		constexpr auto bResetTransformBeforeTick = 0x4a8; // bool
		constexpr auto bResetInitialsBeforeSetup = 0x4a9; // bool
		constexpr auto bUpdateRigOnTick = 0x4aa; // bool
		constexpr auto bUpdateInEditor = 0x4ab; // bool
		constexpr auto bDrawBones = 0x4ac; // bool
		constexpr auto ControlRig = 0x4b0; // UControlRig*
	}

	namespace n_UMOHUD { // : UUserWidget
		constexpr auto vOpenWindows = 0x260; // TArray<UMOUserWidget*>
		constexpr auto vContainers = 0x270; // TArray<UMOContainer*>
		constexpr auto pCanvasPanel = 0x280; // UCanvasPanel*
		constexpr auto ipCurResolution = 0x298; // FIntPoint
		constexpr auto CursorPos_OnStart = 0x2a0; // FVector2D
		constexpr auto WidgetPos_OnMoveStart = 0x2a8; // FVector2D
		constexpr auto pDragMOWidget = 0x2b0; // UMOUserWidget*
		constexpr auto bShouldHideTargetFrame = 0x2b8; // bool
		constexpr auto pMOFrameLocalPlayer = 0x2c0; // UMOFrameLocalPlayer*
		constexpr auto pMOFrameLocalPlayerMount = 0x2c8; // UMOFrameLocalPlayerMount*
		constexpr auto pMOFrameTarget = 0x2d0; // UMOFrameBase*
		constexpr auto pMOCrosshair = 0x2d8; // UMOCrosshair*
		constexpr auto pMOGameMessage = 0x2e0; // UMOGameMessage*
		constexpr auto pMOStunTimer = 0x2e8; // UMOStunTimer*
		constexpr auto pPaperdoll = 0x2f0; // UMOPaperdoll*
		constexpr auto pMOSimpleList = 0x2f8; // UMOSimpleList*
		constexpr auto pMOPopupMessage = 0x300; // UMOPopupMessage*
		constexpr auto pWorldMap = 0x308; // UMOWorldMap*
		constexpr auto pMessageBox = 0x310; // UMOMessageBox*
		constexpr auto pGameMenu = 0x318; // UMOGameMenu*
		constexpr auto pDamageVingette = 0x320; // UMODamageVingette*
		constexpr auto pDamageDirectionIndcatorPool = 0x328; // UMODamageDirectionIndcatorPool*
		constexpr auto pChatLog = 0x330; // UMOChatGUI*
		constexpr auto pSkills = 0x338; // UMOSkills*
		constexpr auto pVendor = 0x340; // UMOVendor*
		constexpr auto pTrade = 0x348; // UMOTrade*
		constexpr auto pMurderCount = 0x350; // UMOMurderCount*
		constexpr auto pActionBar0 = 0x358; // UMOActionBar*
		constexpr auto pActionBar1 = 0x360; // UMOActionBar*
		constexpr auto pActionBar2 = 0x368; // UMOActionBar*
		constexpr auto pActionBar3 = 0x370; // UMOActionBar*
		constexpr auto pCompassHUD = 0x378; // UMOUserWidgetCompassHUD*
		constexpr auto pAlphaBuildNumber = 0x380; // UTextBlock*
		constexpr auto pDialogSystem = 0x388; // UMODialogSystem*
		constexpr auto pCraftingMelee = 0x390; // UMOCraftingMelee*
		constexpr auto pCraftingShield = 0x398; // UMOCraftingShield*
		constexpr auto pCraftingBow = 0x3a0; // UMOCraftingBow*
		constexpr auto pCraftingArmor = 0x3a8; // UMOCraftingArmor*
		constexpr auto pCraftingPetEquipment = 0x3b0; // UMOCraftingPetEquipment*
		constexpr auto pExtraction = 0x3b8; // UMOExtraction*
		constexpr auto pRefining = 0x3c0; // UMORefining*
		constexpr auto pSkinning = 0x3c8; // UMOSkinning*
		constexpr auto pCooking = 0x3d0; // UMOCooking*
		constexpr auto pAlchemy = 0x3d8; // UMOAlchemy*
		constexpr auto pHintWidget = 0x3e0; // UMOHintWidget*
		constexpr auto pSocial = 0x3e8; // UMOSocial*
		constexpr auto pGuildStone = 0x3f0; // UMOGuildStone*
		constexpr auto pSpellBook = 0x3f8; // UMOSpellbook*
		constexpr auto pPets = 0x400; // UMOPets*
		constexpr auto pStables = 0x408; // UMOStables*
		constexpr auto pPerformanceOverlay = 0x410; // UMOPerformanceStatsOverlay*
		constexpr auto cContainerClass = 0x418; // UUserWidget*
		constexpr auto pMOOptions = 0x428; // UMOUserWidgetOptions*
		constexpr auto pButtonShortcuts = 0x430; // UMOButtonShortcuts*
		constexpr auto pMOBroker = 0x438; // UMOBroker*
		constexpr auto pMOMail = 0x440; // UMOMail*
		constexpr auto pFanfare = 0x448; // UMOFanfare*
		constexpr auto pHavenCitySelect = 0x450; // UMOHavenCitySelect*
		constexpr auto pHavenInstanceSelect = 0x458; // UMOHavenInstanceSelect*
		constexpr auto pMOTask = 0x460; // UMOTask*
		constexpr auto pMOJournal = 0x468; // UMOJournal*
		constexpr auto pMOBuildable = 0x470; // UMOBuildable*
		constexpr auto pScribingPanel = 0x478; // UMOScribingPanel*
		constexpr auto pFishingEquipment = 0x480; // UMOFishingEquipment*
		constexpr auto shouldHideShortcutWidget = 0x488; // bool
	}

	namespace n_ASpectatorBeaconClient { // : AOnlineBeaconClient
		constexpr auto DestSessionId = 0x2e0; // FString
		constexpr auto PendingReservation = 0x2f0; // FSpectatorReservation
		constexpr auto RequestType = 0x368; // ESpectatorClientRequestType
		constexpr auto bPendingReservationSent = 0x369; // bool
		constexpr auto bCancelReservation = 0x36a; // bool
	}

	namespace n_URiverGenerator { // : UWaterBodyGenerator
		constexpr auto SplineMeshComponents = 0x28; // TArray<USplineMeshComponent*>
	}

	namespace n_UMOPets { // : UMOUserWidget
		constexpr auto MemberTimerHandle = 0x2c8; // FTimerHandle
		constexpr auto iCurTimerRepeats = 0x2d0; // int32_t
		constexpr auto pPetAttackIconTexture = 0x2d8; // UTexture2D*
		constexpr auto pPetFollowIconTexture = 0x2e0; // UTexture2D*
		constexpr auto pPetStayIconTexture = 0x2e8; // UTexture2D*
		constexpr auto pPetOpenBagsIconTexture = 0x2f0; // UTexture2D*
		constexpr auto vPetData = 0x2f8; // TArray<FMOPetData>
		constexpr auto pMOUserWidgetTabManager = 0x308; // UMOUserWidgetTabManager*
		constexpr auto vTabButtons = 0x310; // TArray<UMOUserWidgetTabButtonNew*>
		constexpr auto pTabButtonNewText_All = 0x320; // UMOUserWidgetTabButtonNew*
		constexpr auto pTabButtonNewText_Pet_1 = 0x328; // UMOUserWidgetTabButtonNew*
		constexpr auto pTabButtonNewText_Pet_2 = 0x330; // UMOUserWidgetTabButtonNew*
		constexpr auto pTabButtonNewText_Pet_3 = 0x338; // UMOUserWidgetTabButtonNew*
		constexpr auto pTabButtonNewText_Pet_4 = 0x340; // UMOUserWidgetTabButtonNew*
		constexpr auto pTabButtonNewText_Pet_5 = 0x348; // UMOUserWidgetTabButtonNew*
		constexpr auto pTabButtonNewText_Pet_6 = 0x350; // UMOUserWidgetTabButtonNew*
		constexpr auto pTabButtonNewText_Pet_7 = 0x358; // UMOUserWidgetTabButtonNew*
		constexpr auto pPanelPetsAll = 0x360; // UMOPetsAll*
		constexpr auto pPanelPetsInfo = 0x368; // UMOPetsInfo*
		constexpr auto cPetListEntryClass = 0x370; // UMOPetListEntry*
	}

	namespace n_UWB_CharacterCreation_Head_C { // : UMOCharCreationFaceCustomization
		constexpr auto UberGraphFrame = 0x340; // FPointerToUberGraphFrame
		constexpr auto PasteAnimation = 0x348; // UWidgetAnimation*
		constexpr auto ShareAnimation = 0x350; // UWidgetAnimation*
		constexpr auto BG_Fill = 0x358; // UImage*
		constexpr auto BG_NoSlider = 0x360; // UImage*
		constexpr auto BGFill1 = 0x368; // UImage*
		constexpr auto Image_386 = 0x370; // UImage*
		constexpr auto MainList = 0x378; // UVerticalBox*
		constexpr auto PasteButton = 0x380; // UMOButton*
		constexpr auto PasteMessage = 0x388; // UMOTextBlock_Base_Small_White_01*
		constexpr auto Preset1 = 0x390; // UWB_CharacterCreation_Head_PresetEntry_Horizontal_C*
		constexpr auto Preset2 = 0x398; // UWB_CharacterCreation_Head_PresetEntry_Horizontal_C*
		constexpr auto Preset3 = 0x3a0; // UWB_CharacterCreation_Head_PresetEntry_Horizontal_C*
		constexpr auto Preset4 = 0x3a8; // UWB_CharacterCreation_Head_PresetEntry_Horizontal_C*
		constexpr auto RandomizeButton = 0x3b0; // UMOButtonLarge*
		constexpr auto ResetButton = 0x3b8; // UMOButtonLarge*
		constexpr auto RootCanvasPanel = 0x3c0; // UCanvasPanel*
		constexpr auto ShareButton = 0x3c8; // UMOButton*
		constexpr auto ShareMessage = 0x3d0; // UMOTextBlock_Base_Small_White_01*
		constexpr auto Slider2D_BrowRidge = 0x3d8; // UWB_CharacterCreation_Head_3DSlider_C*
		constexpr auto Slider2D_Cheeks = 0x3e0; // UWB_CharacterCreation_Head_3DSlider_C*
		constexpr auto Slider2D_ChinPlacement = 0x3e8; // UWB_CharacterCreation_Head_3DSlider_C*
		constexpr auto Slider2D_ChinShape = 0x3f0; // UWB_CharacterCreation_Head_3DSlider_C*
		constexpr auto Slider2D_EarShape = 0x3f8; // UWB_CharacterCreation_Head_3DSlider_C*
		constexpr auto Slider2D_EyesPlacement = 0x400; // UWB_CharacterCreation_Head_3DSlider_C*
		constexpr auto Slider2D_EyesShape = 0x408; // UWB_CharacterCreation_Head_3DSlider_C*
		constexpr auto Slider2D_FaceSize = 0x410; // UWB_CharacterCreation_Head_3DSlider_C*
		constexpr auto Slider2D_FaceWidth = 0x418; // UWB_CharacterCreation_Head_3DSlider_C*
		constexpr auto Slider2D_MouthPlacement = 0x420; // UWB_CharacterCreation_Head_3DSlider_C*
		constexpr auto Slider2D_MouthShape = 0x428; // UWB_CharacterCreation_Head_3DSlider_C*
		constexpr auto Slider2D_NoseRidge = 0x430; // UWB_CharacterCreation_Head_3DSlider_C*
		constexpr auto Slider2D_NoseShape = 0x438; // UWB_CharacterCreation_Head_3DSlider_C*
		constexpr auto Slider2D_NoseTip = 0x440; // UWB_CharacterCreation_Head_3DSlider_C*
		constexpr auto Slider2D_NoseWidth = 0x448; // UWB_CharacterCreation_Head_3DSlider_C*
		constexpr auto Title_Textblock = 0x450; // UMOTextBlock_Base_Small_White_01*
		constexpr auto LastCharacterTransform = 0x460; // FTransform
		constexpr auto OnFaceCustomizationUIDestroyed = 0x490; // FMulticastInlineDelegate
	}

	namespace n_UInterpTrackInstVectorProp { // : UInterpTrackInstProperty
		constexpr auto ResetVector = 0x58; // FVector
	}

	namespace n_UEnvQueryGenerator_Cone { // : UEnvQueryGenerator_ProjectedPoints
		constexpr auto AlignedPointsDistance = 0x80; // FAIDataProviderFloatValue
		constexpr auto ConeDegrees = 0xb8; // FAIDataProviderFloatValue
		constexpr auto AngleStep = 0xf0; // FAIDataProviderFloatValue
		constexpr auto Range = 0x128; // FAIDataProviderFloatValue
		constexpr auto CenterActor = 0x160; // UEnvQueryContext*
		constexpr auto bIncludeContextLocation = 0x168; // char : 1
	}

	namespace n_UNiagaraEmitter { // : UObject
		constexpr auto bLocalSpace = 0x28; // bool
		constexpr auto bDeterminism = 0x29; // bool
		constexpr auto RandomSeed = 0x2c; // int32_t
		constexpr auto AllocationMode = 0x30; // EParticleAllocationMode
		constexpr auto PreAllocationCount = 0x34; // int32_t
		constexpr auto UpdateScriptProps = 0x38; // FNiagaraEmitterScriptProperties
		constexpr auto SpawnScriptProps = 0x60; // FNiagaraEmitterScriptProperties
		constexpr auto SimTarget = 0x88; // ENiagaraSimTarget
		constexpr auto FixedBounds = 0x8c; // FBox
		constexpr auto MinDetailLevel = 0xa8; // int32_t
		constexpr auto MaxDetailLevel = 0xac; // int32_t
		constexpr auto GlobalSpawnCountScaleOverrides = 0xb0; // FNiagaraDetailsLevelScaleOverrides
		constexpr auto Platforms = 0xc8; // FNiagaraPlatformSet
		constexpr auto ScalabilityOverrides = 0xf8; // FNiagaraEmitterScalabilityOverrides
		constexpr auto bInterpolatedSpawning = 0x108; // char : 1
		constexpr auto bFixedBounds = 0x108; // char : 1
		constexpr auto bUseMinDetailLevel = 0x108; // char : 1
		constexpr auto bUseMaxDetailLevel = 0x108; // char : 1
		constexpr auto bOverrideGlobalSpawnCountScale = 0x108; // char : 1
		constexpr auto bRequiresPersistentIDs = 0x108; // char : 1
		constexpr auto bCombineEventSpawn = 0x108; // char : 1
		constexpr auto MaxDeltaTimePerTick = 0x10c; // float
		constexpr auto DefaultShaderStageIndex = 0x110; // uint32_t
		constexpr auto MaxUpdateIterations = 0x114; // uint32_t
		constexpr auto SpawnStages = 0x118; // TSet<uint32_t>
		constexpr auto bSimulationStagesEnabled = 0x168; // char : 1
		constexpr auto bDeprecatedShaderStagesEnabled = 0x168; // char : 1
		constexpr auto bLimitDeltaTime = 0x168; // char : 1
		constexpr auto UniqueEmitterName = 0x170; // FString
		constexpr auto RendererProperties = 0x180; // TArray<UNiagaraRendererProperties*>
		constexpr auto EventHandlerScriptProps = 0x190; // TArray<FNiagaraEventScriptProperties>
		constexpr auto SimulationStages = 0x1a0; // TArray<UNiagaraSimulationStageBase*>
		constexpr auto GPUComputeScript = 0x1b0; // UNiagaraScript*
		constexpr auto SharedEventGeneratorIds = 0x1b8; // TArray<FName>
	}

	namespace n_USoundConcurrency { // : UObject
		constexpr auto Concurrency = 0x28; // FSoundConcurrencySettings
	}

	namespace n_UActorSequenceComponent { // : UActorComponent
		constexpr auto PlaybackSettings = 0xb0; // FMovieSceneSequencePlaybackSettings
		constexpr auto Sequence = 0xc8; // UActorSequence*
		constexpr auto SequencePlayer = 0xd0; // UActorSequencePlayer*
	}

	namespace n_UVirtualTexturePoolConfig { // : UObject
		constexpr auto DefaultSizeInMegabyte = 0x28; // int32_t
		constexpr auto Pools = 0x30; // TArray<FVirtualTextureSpacePoolConfig>
	}

	namespace n_ULandscapeWeightmapUsage { // : UObject
		constexpr auto ChannelUsage = 0x28; // ULandscapeComponent* [0x4]
		constexpr auto LayerGuid = 0x48; // FGuid
	}

	namespace n_URig { // : UObject
		constexpr auto TransformBases = 0x30; // TArray<FTransformBase>
		constexpr auto Nodes = 0x40; // TArray<FNode>
	}

	namespace n_AEmitterCameraLensEffectBase { // : AEmitter
		constexpr auto PS_CameraEffect = 0x270; // UParticleSystem*
		constexpr auto PS_CameraEffectNonExtremeContent = 0x278; // UParticleSystem*
		constexpr auto BaseCamera = 0x280; // APlayerCameraManager*
		constexpr auto RelativeTransform = 0x290; // FTransform
		constexpr auto BaseFOV = 0x2c0; // float
		constexpr auto bAllowMultipleInstances = 0x2c4; // char : 1
		constexpr auto bResetWhenRetriggered = 0x2c4; // char : 1
		constexpr auto EmittersToTreatAsSame = 0x2c8; // TArray<AEmitterCameraLensEffectBase*>
		constexpr auto DistFromCamera = 0x2d8; // float
	}

	namespace n_UMovieSceneIntegerSection { // : UMovieSceneSection
		constexpr auto IntegerCurve = 0xe8; // FMovieSceneIntegerChannel
	}

	namespace n_UMaterialExpressionFrac { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UAISenseConfig_Sight { // : UAISenseConfig
		constexpr auto Implementation = 0x48; // UAISense_Sight*
		constexpr auto SightRadius = 0x50; // float
		constexpr auto LoseSightRadius = 0x54; // float
		constexpr auto PeripheralVisionAngleDegrees = 0x58; // float
		constexpr auto DetectionByAffiliation = 0x5c; // FAISenseAffiliationFilter
		constexpr auto AutoSuccessRangeFromLastSeenLocation = 0x60; // float
		constexpr auto PointOfViewBackwardOffset = 0x64; // float
		constexpr auto NearClippingRadius = 0x68; // float
	}

	namespace n_UMOCharacterSelection { // : UMOUserWidget
		constexpr auto pTextBlockCharacterName = 0x2c8; // UTextBlock*
		constexpr auto pTextBlockMid = 0x2d0; // UTextBlock*
		constexpr auto bHasCharacter = 0x2d8; // bool
		constexpr auto pButtonDeleteCharacter = 0x2e0; // UMOButton*
		constexpr auto pButtonPlay = 0x2e8; // UMOButton*
	}

	namespace n_UMOPhysicalMaterialGather { // : UMOPhysicalMaterial
		constexpr auto sJournalRowToUnlock = 0x98; // FString
		constexpr auto sGatherMisc = 0xa8; // FString
		constexpr auto sGatherSkill = 0xb8; // FString
		constexpr auto eGatherType = 0xc8; // EGatherTypes
		constexpr auto iMin = 0xcc; // int32_t
		constexpr auto iMax = 0xd0; // int32_t
		constexpr auto sDisplayName = 0xd8; // FText
		constexpr auto sUseString = 0xf0; // FText
		constexpr auto fHoldUseTimer = 0x108; // float
		constexpr auto pGatherParticles = 0x110; // UNiagaraSystem*
		constexpr auto pGatherSound = 0x118; // USoundCue*
	}

	namespace n_UParticleModuleLocationPrimitiveSphere { // : UParticleModuleLocationPrimitiveBase
		constexpr auto StartRadius = 0xb0; // FRawDistributionFloat
	}

	namespace n_UGeometryCacheCodecBase { // : UObject
		constexpr auto TopologyRanges = 0x28; // TArray<int32_t>
	}

	namespace n_UConstantQNRT { // : UAudioSynesthesiaNRT
		constexpr auto Settings = 0x78; // UConstantQNRTSettings*
	}

	namespace n_UMovieSceneCameraShakeSourceTriggerTrack { // : UMovieSceneTrack
		constexpr auto Sections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UWB_MO_CharacterDeleteComfirm_C { // : UMOCharacterDelete
		constexpr auto UberGraphFrame = 0x2e8; // FPointerToUberGraphFrame
		constexpr auto FadeIn = 0x2f0; // UWidgetAnimation*
		constexpr auto MainPrompt_BlurBackground = 0x2f8; // UBackgroundBlur*
		constexpr auto MOButtonClose_336 = 0x300; // UMOButtonClose*
		constexpr auto pCircularThrobber_WaitingForResponse = 0x308; // UCircularThrobber*
		constexpr auto pDeleteCharacterInfo = 0x310; // UTextBlock*
		constexpr auto pMiddleVertical = 0x318; // UImage*
	}

	namespace n_UMovieSceneAudioSection { // : UMovieSceneSection
		constexpr auto Sound = 0xe8; // USoundBase*
		constexpr auto StartFrameOffset = 0xf0; // FFrameNumber
		constexpr auto StartOffset = 0xf4; // float
		constexpr auto AudioStartTime = 0xf8; // float
		constexpr auto AudioDilationFactor = 0xfc; // float
		constexpr auto AudioVolume = 0x100; // float
		constexpr auto SoundVolume = 0x108; // FMovieSceneFloatChannel
		constexpr auto PitchMultiplier = 0x1a8; // FMovieSceneFloatChannel
		constexpr auto AttachActorData = 0x248; // FMovieSceneActorReferenceData
		constexpr auto bLooping = 0x2f8; // bool
		constexpr auto bSuppressSubtitles = 0x2f9; // bool
		constexpr auto bOverrideAttenuation = 0x2fa; // bool
		constexpr auto AttenuationSettings = 0x300; // USoundAttenuation*
		constexpr auto OnQueueSubtitles = 0x308; // FDelegate
		constexpr auto OnAudioFinished = 0x318; // FMulticastInlineDelegate
		constexpr auto OnAudioPlaybackPercent = 0x328; // FMulticastInlineDelegate
	}

	namespace n_UMOCrosshair { // : UMOUserWidget
		constexpr auto pTextBlockTargetName = 0x2c8; // UTextBlock*
		constexpr auto pTextBlockGuildTag = 0x2d0; // UTextBlock*
		constexpr auto pTextBlockPreNameTitle = 0x2d8; // UTextBlock*
		constexpr auto pTextBlockPostNameTitle = 0x2e0; // UTextBlock*
		constexpr auto pTextBlockUseString = 0x2e8; // UTextBlock*
		constexpr auto pTextBlockScreenMessage = 0x2f0; // UTextBlock*
		constexpr auto pImageCrosshair = 0x2f8; // UImage*
		constexpr auto pHorizontalBox_Criminal = 0x300; // UHorizontalBox*
		constexpr auto pImageCrosshairHover = 0x308; // UImage*
		constexpr auto pCriminalImage = 0x310; // UImage*
		constexpr auto vFlagColors = 0x318; // TArray<FColor>
		constexpr auto pImageLeftActionIndicator = 0x328; // UImage*
		constexpr auto pImageRightActionIndicator = 0x330; // UImage*
		constexpr auto pImageOverheadActionIndicator = 0x338; // UImage*
		constexpr auto pImageThrustActionIndicator = 0x340; // UImage*
		constexpr auto pImageCharge = 0x348; // UImage*
	}

	namespace n_UBodySetupCore { // : UObject
		constexpr auto BoneName = 0x28; // FName
		constexpr auto PhysicsType = 0x30; // EPhysicsType
		constexpr auto CollisionTraceFlag = 0x31; // ECollisionTraceFlag
		constexpr auto CollisionReponse = 0x32; // EBodyCollisionResponse
	}

	namespace n_UEditableGameplayTagQueryExpression_AllTagsMatch { // : UEditableGameplayTagQueryExpression
		constexpr auto Tags = 0x28; // FGameplayTagContainer
	}

	namespace n_USubmixEffectSubmixEQPreset { // : USoundEffectSubmixPreset
		constexpr auto Settings = 0xa0; // FSubmixEffectSubmixEQSettings
	}

	namespace n_USoundfieldSubmix { // : USoundSubmixWithParentBase
		constexpr auto SoundfieldEncodingFormat = 0x40; // FName
		constexpr auto EncodingSettings = 0x48; // USoundfieldEncodingSettingsBase*
		constexpr auto SoundfieldEffectChain = 0x50; // TArray<USoundfieldEffectBase*>
		constexpr auto EncodingSettingsClass = 0x60; // USoundfieldEncodingSettingsBase*
	}

	namespace n_UStaticMeshSocket { // : UObject
		constexpr auto SocketName = 0x28; // FName
		constexpr auto RelativeLocation = 0x30; // FVector
		constexpr auto RelativeRotation = 0x3c; // FRotator
		constexpr auto RelativeScale = 0x48; // FVector
		constexpr auto Tag = 0x58; // FString
	}

	namespace n_USynthComponentMonoWaveTable { // : USynthComponent
		constexpr auto OnTableAltered = 0x6c0; // FMulticastInlineDelegate
		constexpr auto OnNumTablesChanged = 0x6d0; // FMulticastInlineDelegate
		constexpr auto CurrentPreset = 0x6e0; // UMonoWaveTableSynthPreset*
	}

	namespace n_UParticleModuleLocationPrimitiveCylinder_Seeded { // : UParticleModuleLocationPrimitiveCylinder
		constexpr auto RandomSeedInfo = 0x120; // FParticleRandomSeedInfo
	}

	namespace n_UParticleModuleVectorFieldScale { // : UParticleModuleVectorFieldBase
		constexpr auto VectorFieldScale = 0x30; // UDistributionFloat*
		constexpr auto VectorFieldScaleRaw = 0x38; // FRawDistributionFloat
	}

	namespace n_USoundNodeDoppler { // : USoundNode
		constexpr auto DopplerIntensity = 0x48; // float
		constexpr auto bUseSmoothing = 0x4c; // bool
		constexpr auto SmoothingInterpSpeed = 0x50; // float
	}

	namespace n_UMovieSceneParticleParameterTrack { // : UMovieSceneNameableTrack
		constexpr auto Sections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_AWaterBody { // : AActor
		constexpr auto PhysicalMaterial = 0x230; // UPhysicalMaterial*
		constexpr auto TargetWaveMaskDepth = 0x238; // float
		constexpr auto MaxWaveHeightOffset = 0x23c; // float
		constexpr auto WaterBodyIndex = 0x240; // int32_t
		constexpr auto bFillCollisionUnderWaterBodiesForNavmesh = 0x244; // bool
		constexpr auto UnderwaterPostProcessSettings = 0x250; // FUnderwaterPostProcessSettings
		constexpr auto WaterBodyType = 0x7c0; // EWaterBodyType
		constexpr auto CurveSettings = 0x7c8; // FWaterCurveSettings
		constexpr auto WaterMaterial = 0x7e8; // UMaterialInterface*
		constexpr auto UnderwaterPostProcessMaterial = 0x7f0; // UMaterialInterface*
		constexpr auto bAffectsLandscape = 0x7f8; // bool
		constexpr auto bGenerateCollisions = 0x7f9; // bool
		constexpr auto bOverrideWaterMesh = 0x7fa; // bool
		constexpr auto WaterMeshOverride = 0x800; // UStaticMesh*
		constexpr auto OverlapMaterialPriority = 0x808; // int32_t
		constexpr auto CollisionProfileName = 0x80c; // FName
		constexpr auto SplineComp = 0x818; // UWaterSplineComponent*
		constexpr auto WaterSplineMetadata = 0x820; // UWaterSplineMetadata*
		constexpr auto WaterMID = 0x828; // UMaterialInstanceDynamic*
		constexpr auto UnderwaterPostProcessMID = 0x830; // UMaterialInstanceDynamic*
		constexpr auto Islands = 0x838; // TArray<LazyObjectProperty>
		constexpr auto ExclusionVolumes = 0x848; // TArray<LazyObjectProperty>
		constexpr auto Landscape = 0x858; // TWeakObjectPtr<ALandscapeProxy>
		constexpr auto CurrentPostProcessSettings = 0x860; // FPostProcessSettings
		constexpr auto bCanAffectNavigation = 0xdb0; // bool
		constexpr auto WaterNavAreaClass = 0xdb8; // UNavAreaBase*
		constexpr auto WaterWaves = 0xdc0; // UWaterWavesBase*
		constexpr auto bHasWaveSpectrumSettings = 0xdc8; // bool
		constexpr auto bHasTerrainCarvingSettingsSettings = 0xdc9; // bool
	}

	namespace n_ALODActor { // : AActor
		constexpr auto StaticMeshComponent = 0x220; // UStaticMeshComponent*
		constexpr auto ImpostersStaticMeshComponents = 0x228; // TMap<UMaterialInterface*, UInstancedStaticMeshComponent*>
		constexpr auto Proxy = 0x278; // UHLODProxy*
		constexpr auto Key = 0x280; // FName
		constexpr auto LODDrawDistance = 0x288; // float
		constexpr auto LODLevel = 0x28c; // int32_t
		constexpr auto SubActors = 0x290; // TArray<AActor*>
		constexpr auto CachedNumHLODLevels = 0x2a0; // char
	}

	namespace n_UMotionControllerComponent { // : UPrimitiveComponent
		constexpr auto PlayerIndex = 0x440; // int32_t
		constexpr auto Hand = 0x444; // EControllerHand
		constexpr auto MotionSource = 0x448; // FName
		constexpr auto bDisableLowLatencyUpdate = 0x450; // char : 1
		constexpr auto CurrentTrackingStatus = 0x454; // ETrackingStatus
		constexpr auto bDisplayDeviceModel = 0x455; // bool
		constexpr auto DisplayModelSource = 0x458; // FName
		constexpr auto CustomDisplayMesh = 0x460; // UStaticMesh*
		constexpr auto DisplayMeshMaterialOverrides = 0x468; // TArray<UMaterialInterface*>
		constexpr auto DisplayComponent = 0x4e0; // UPrimitiveComponent*
	}

	namespace n_UMOButtonAttributeToggle { // : UMOWidgetBlueprint
		constexpr auto vToggleIcons = 0x260; // TArray<UTexture2D*>
		constexpr auto vToggleTooltips = 0x270; // TArray<FText>
		constexpr auto pButton = 0x280; // UButton*
		constexpr auto pImageIcon = 0x288; // UImage*
	}

	namespace n_UMOEquipmentComponent { // : UActorComponent
		constexpr auto bHiddenInGame = 0xb0; // bool
		constexpr auto bDisableExtraComponents = 0xb1; // bool
		constexpr auto bIsShowingExtraComponents = 0xb2; // bool
		constexpr auto vExtraAudioComponents = 0xb8; // TArray<UAudioComponent*>
		constexpr auto vExtraNiagaraComponents = 0xc8; // TArray<UNiagaraComponent*>
		constexpr auto vExtraPointLightComponents = 0xd8; // TArray<UPointLightComponent*>
	}

	namespace n_UInterpTrackFloatBase { // : UInterpTrack
		constexpr auto FloatTrack = 0x70; // FInterpCurveFloat
		constexpr auto CurveTension = 0x88; // float
	}

	namespace n_UAB_CH_Player_Male_Body_PostProcess_C { // : UMOAnimationInstancePostProcess
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_KawaiiPhysics = 0x300; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x550; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LinkedInputPose = 0x570; // FAnimNode_LinkedInputPose
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x688; // FAnimNode_ConvertLocalToComponentSpace
	}

	namespace n_UNiagaraDataInterfaceAudioSpectrum { // : UNiagaraDataInterfaceAudioSubmix
		constexpr auto Resolution = 0x40; // int32_t
		constexpr auto MinimumFrequency = 0x44; // float
		constexpr auto MaximumFrequency = 0x48; // float
		constexpr auto NoiseFloorDb = 0x4c; // float
	}

	namespace n_UTextureRenderTarget { // : UTexture
		constexpr auto TargetGamma = 0xd8; // float
	}

	namespace n_UWB_MOOptionsChatPanel_C { // : UMOUserWidgetOptionsChat
		constexpr auto Image_Line_UI = 0x388; // UImage*
	}

	namespace n_UIntSerialization { // : UObject
		constexpr auto UnsignedInt16Variable = 0x28; // uint16_t
		constexpr auto UnsignedInt32Variable = 0x2c; // uint32_t
		constexpr auto UnsignedInt64Variable = 0x30; // uint64_t
		constexpr auto SignedInt8Variable = 0x38; // int8_t
		constexpr auto SignedInt16Variable = 0x3a; // int16_t
		constexpr auto SignedInt64Variable = 0x40; // int64_t
		constexpr auto UnsignedInt8Variable = 0x48; // char
		constexpr auto SignedInt32Variable = 0x4c; // int32_t
	}

	namespace n_UMaterialExpressionMaterialProxyReplace { // : UMaterialExpression
		constexpr auto RealTime = 0x40; // FExpressionInput
		constexpr auto MaterialProxy = 0x54; // FExpressionInput
	}

	namespace n_UAssetMappingTable { // : UObject
		constexpr auto MappedAssets = 0x28; // TArray<FAssetMapping>
	}

	namespace n_UMaterialExpressionShadingPathSwitch { // : UMaterialExpression
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto Inputs = 0x54; // FExpressionInput [0x3]
	}

	namespace n_UMOBrokerCategoryEntry { // : UMOUserWidget
		constexpr auto BrokerCategoryDelegate = 0x2c8; // FMulticastInlineDelegate
		constexpr auto pMOButton = 0x2d8; // UMOButton*
		constexpr auto pMOText = 0x2e0; // UTextBlock*
		constexpr auto pVerticalBox = 0x2e8; // UVerticalBox*
		constexpr auto bIsChecked = 0x2f0; // bool
		constexpr auto iCategoryID = 0x2f4; // int32_t
		constexpr auto iParentID = 0x2f8; // int32_t
	}

	namespace n_USoundNodeLooping { // : USoundNode
		constexpr auto LoopCount = 0x48; // int32_t
		constexpr auto bLoopIndefinitely = 0x4c; // char : 1
	}

	namespace n_USpectatorPawnMovement { // : UFloatingPawnMovement
		constexpr auto bIgnoreTimeDilation = 0x150; // char : 1
	}

	namespace n_UTimelineComponent { // : UActorComponent
		constexpr auto TheTimeline = 0xb0; // FTimeline
		constexpr auto bIgnoreTimeDilation = 0x148; // char : 1
	}

	namespace n_AProceduralFoliageVolume { // : AVolume
		constexpr auto ProceduralComponent = 0x258; // UProceduralFoliageComponent*
	}

	namespace n_UARTrackedImage { // : UARTrackedGeometry
		constexpr auto DetectedImage = 0xf8; // UARCandidateImage*
		constexpr auto EstimatedSize = 0x100; // FVector2D
	}

	namespace n_UEnvQueryGenerator_SimpleGrid { // : UEnvQueryGenerator_ProjectedPoints
		constexpr auto GridSize = 0x80; // FAIDataProviderFloatValue
		constexpr auto SpaceBetween = 0xb8; // FAIDataProviderFloatValue
		constexpr auto GenerateAround = 0xf0; // UEnvQueryContext*
	}

	namespace n_AMOAvatarStaticMeshBuildableKeep { // : AMOAvatarStaticMeshBuildableHouse
		constexpr auto pGuildStoneComponent = 0x338; // UStaticMeshComponent*
	}

	namespace n_UWB_MO_LoginScreen_C { // : UMOLoginScreen
		constexpr auto UberGraphFrame = 0x370; // FPointerToUberGraphFrame
		constexpr auto FadeIn = 0x378; // UWidgetAnimation*
		constexpr auto FadeInNews = 0x380; // UWidgetAnimation*
		constexpr auto BG = 0x388; // UImage*
		constexpr auto MO_Logo_Image = 0x390; // UImage*
		constexpr auto MOButtonLarge-CloseApplication = 0x398; // UMOButtonLarge*
		constexpr auto pButtonOpen_Discord = 0x3a0; // UButton*
		constexpr auto pButtonOpen_Forums = 0x3a8; // UButton*
		constexpr auto pButtonOpen_Twitter = 0x3b0; // UButton*
		constexpr auto pMiddleVertical = 0x3b8; // UImage*
		constexpr auto pMOLoginServerList = 0x3c0; // UMOBorderHeader*
		constexpr auto ServerScrollBox = 0x3c8; // UScrollBox*
		constexpr auto WB_LoginError = 0x3d0; // UWB_LoginError_C*
		constexpr auto WB_MO_LoginScreen_ServerEntry = 0x3d8; // UWB_MO_LoginScreen_ServerEntry_C*
		constexpr auto SaveGameRef = 0x3e0; // UBP_SaveGame_C*
		constexpr auto BP_MO_LoginScreen = 0x3e8; // UWB_MO_LoginScreen_C*
		constexpr auto LoginOptions = 0x3f0; // UObject*
		constexpr auto OptionsIsNotKaboom = 0x3f8; // bool
		constexpr auto NewVar_3 = 0x3fc; // int32_t
	}

	namespace n_ULiveLinkTimeSynchronizationSource { // : UTimeSynchronizationSource
		constexpr auto SubjectName = 0x30; // FLiveLinkSubjectName
	}

	namespace n_USplineChainComponent { // : UChainComponent
		constexpr auto SplineFollowWeight = 0x5e8; // FRuntimeFloatCurve
		constexpr auto SplineComponent = 0x670; // USplineComponent*
	}

	namespace n_AAmbientSound { // : AActor
		constexpr auto AudioComponent = 0x220; // UAudioComponent*
	}

	namespace n_USlateBrushAsset { // : UObject
		constexpr auto Brush = 0x28; // FSlateBrush
	}

	namespace n_UAB_CH_Player_Female_Body_PostProcess_C { // : UMOAnimationInstancePostProcess
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x2f8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LinkedInputPose = 0x318; // FAnimNode_LinkedInputPose
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x430; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_KavajSoftbody = 0x450; // FAnimNode_KavajSoftbody
		constexpr auto BreastDefinitions = 0x630; // FKavajSoftBodyDefinitions
		constexpr auto BreastParameters = 0x670; // FKavajSoftBodyParameters
	}

	namespace n_UOceanGenerator { // : UWaterBodyGenerator
		constexpr auto CollisionBoxes = 0x28; // TArray<UOceanBoxCollisionComponent*>
		constexpr auto CollisionHullSets = 0x38; // TArray<UOceanCollisionComponent*>
	}

	namespace n_UTestMovieSceneSequence { // : UMovieSceneSequence
		constexpr auto MovieScene = 0x60; // UMovieScene*
	}

	namespace n_UBTTask_WaitBlackboardTime { // : UBTTask_Wait
		constexpr auto BlackboardKey = 0x78; // FBlackboardKeySelector
	}

	namespace n_APaperGroupedSpriteActor { // : AActor
		constexpr auto RenderComponent = 0x220; // UPaperGroupedSpriteComponent*
	}

	namespace n_UWB_ItemSlotPaperdoll_C { // : UMOItemSlotPaperdoll
		constexpr auto UberGraphFrame = 0x348; // FPointerToUberGraphFrame
		constexpr auto DestroyItemAnimation = 0x350; // UWidgetAnimation*
		constexpr auto ItemMaterial = 0x358; // UMaterialInstanceDynamic*
		constexpr auto SplitStackRef = 0x360; // UWB_SplitStack_C*
		constexpr auto altKeyDown = 0x368; // bool
		constexpr auto pDefaultBrush = 0x370; // FSlateBrush
		constexpr auto pOverrideFrameTexture = 0x3f8; // UTexture2D*
		constexpr auto bInactiveInAlpha = 0x400; // bool
	}

	namespace n_UWidgetComponent { // : UMeshComponent
		constexpr auto Space = 0x468; // EWidgetSpace
		constexpr auto TimingPolicy = 0x469; // EWidgetTimingPolicy
		constexpr auto WidgetClass = 0x470; // UUserWidget*
		constexpr auto DrawSize = 0x478; // FIntPoint
		constexpr auto bManuallyRedraw = 0x480; // bool
		constexpr auto bRedrawRequested = 0x481; // bool
		constexpr auto RedrawTime = 0x484; // float
		constexpr auto CurrentDrawSize = 0x490; // FIntPoint
		constexpr auto bDrawAtDesiredSize = 0x498; // bool
		constexpr auto Pivot = 0x49c; // FVector2D
		constexpr auto bReceiveHardwareInput = 0x4a4; // bool
		constexpr auto bWindowFocusable = 0x4a5; // bool
		constexpr auto WindowVisibility = 0x4a6; // EWindowVisibility
		constexpr auto bApplyGammaCorrection = 0x4a7; // bool
		constexpr auto OwnerPlayer = 0x4a8; // ULocalPlayer*
		constexpr auto BackgroundColor = 0x4b0; // FLinearColor
		constexpr auto TintColorAndOpacity = 0x4c0; // FLinearColor
		constexpr auto OpacityFromTexture = 0x4d0; // float
		constexpr auto BlendMode = 0x4d4; // EWidgetBlendMode
		constexpr auto bIsTwoSided = 0x4d5; // bool
		constexpr auto TickWhenOffscreen = 0x4d6; // bool
		constexpr auto BodySetup = 0x4d8; // UBodySetup*
		constexpr auto TranslucentMaterial = 0x4e0; // UMaterialInterface*
		constexpr auto TranslucentMaterial_OneSided = 0x4e8; // UMaterialInterface*
		constexpr auto OpaqueMaterial = 0x4f0; // UMaterialInterface*
		constexpr auto OpaqueMaterial_OneSided = 0x4f8; // UMaterialInterface*
		constexpr auto MaskedMaterial = 0x500; // UMaterialInterface*
		constexpr auto MaskedMaterial_OneSided = 0x508; // UMaterialInterface*
		constexpr auto RenderTarget = 0x510; // UTextureRenderTarget2D*
		constexpr auto MaterialInstance = 0x518; // UMaterialInstanceDynamic*
		constexpr auto bAddedToScreen = 0x520; // bool
		constexpr auto bEditTimeUsable = 0x521; // bool
		constexpr auto SharedLayerName = 0x524; // FName
		constexpr auto LayerZOrder = 0x52c; // int32_t
		constexpr auto GeometryMode = 0x530; // EWidgetGeometryMode
		constexpr auto CylinderArcAngle = 0x534; // float
		constexpr auto TickMode = 0x538; // ETickMode
		constexpr auto Widget = 0x560; // UUserWidget*
	}

	namespace n_UMOTaskPanel { // : UMOUserWidget
		constexpr auto pTask = 0x2c8; // UMOTask*
	}

	namespace n_UMaterialParameterCollection { // : UObject
		constexpr auto StateId = 0x28; // FGuid
		constexpr auto ScalarParameters = 0x38; // TArray<FCollectionScalarParameter>
		constexpr auto VectorParameters = 0x48; // TArray<FCollectionVectorParameter>
	}

	namespace n_UInterpTrackFloatProp { // : UInterpTrackFloatBase
		constexpr auto PropertyName = 0x90; // FName
	}

	namespace n_UDeviceProfileManager { // : UObject
		constexpr auto Profiles = 0x28; // TArray<UObject*>
	}

	namespace n_UVirtualTextureBuilder { // : UObject
		constexpr auto Texture = 0x28; // UVirtualTexture2D*
		constexpr auto BuildHash = 0x30; // uint64_t
	}

	namespace n_UBlackboardData { // : UDataAsset
		constexpr auto Parent = 0x30; // UBlackboardData*
		constexpr auto Keys = 0x38; // TArray<FBlackboardEntry>
		constexpr auto bHasSynchronizedKeys = 0x48; // char : 1
	}

	namespace n_UMyPluginObject { // : UObject
		constexpr auto MyStruct = 0x28; // FMyPluginStruct
	}

	namespace n_USoundCue { // : USoundBase
		constexpr auto bPrimeOnLoad = 0x1b8; // char : 1
		constexpr auto FirstNode = 0x1c0; // USoundNode*
		constexpr auto VolumeMultiplier = 0x1c8; // float
		constexpr auto PitchMultiplier = 0x1cc; // float
		constexpr auto AttenuationOverrides = 0x1d0; // FSoundAttenuationSettings
		constexpr auto SubtitlePriority = 0x570; // float
		constexpr auto bOverrideAttenuation = 0x578; // char : 1
		constexpr auto bExcludeFromRandomNodeBranchCulling = 0x578; // char : 1
		constexpr auto CookedQualityIndex = 0x57c; // int32_t
		constexpr auto bHasPlayWhenSilent = 0x580; // char : 1
	}

	namespace n_UGerstnerWaterWaveGeneratorSimple { // : UGerstnerWaterWaveGeneratorBase
		constexpr auto NumWaves = 0x28; // int32_t
		constexpr auto Seed = 0x2c; // int32_t
		constexpr auto Randomness = 0x30; // float
		constexpr auto MinWavelength = 0x34; // float
		constexpr auto MaxWavelength = 0x38; // float
		constexpr auto WavelengthFalloff = 0x3c; // float
		constexpr auto MinAmplitude = 0x40; // float
		constexpr auto MaxAmplitude = 0x44; // float
		constexpr auto AmplitudeFalloff = 0x48; // float
		constexpr auto WindAngleDeg = 0x4c; // float
		constexpr auto DirectionAngularSpreadDeg = 0x50; // float
		constexpr auto SmallWaveSteepness = 0x54; // float
		constexpr auto LargeWaveSteepness = 0x58; // float
		constexpr auto SteepnessFalloff = 0x5c; // float
	}

	namespace n_UMOCurrencyWidget { // : UUserWidget
		constexpr auto pTextBlock_Cuprum = 0x260; // UTextBlock*
		constexpr auto pTextBlock_Silver = 0x268; // UTextBlock*
		constexpr auto pTextBlock_Gold = 0x270; // UTextBlock*
		constexpr auto iCurCuprum = 0x278; // int64_t
	}

	namespace n_URadialIntMask { // : UFieldNodeInt
		constexpr auto Radius = 0xb0; // float
		constexpr auto Position = 0xb4; // FVector
		constexpr auto InteriorValue = 0xc0; // int32_t
		constexpr auto ExteriorValue = 0xc4; // int32_t
		constexpr auto SetMaskCondition = 0xc8; // ESetMaskConditionType
	}

	namespace n_UMOCombatSystemMelee { // : UMOCombatSystem
		constexpr auto DragInput = 0x88; // FMOCombatSystemMeleeDragInput
		constexpr auto vTraceIgnoreComponents = 0x1a8; // TArray<UPrimitiveComponent*>
	}

	namespace n_USteamNetConnection { // : UIpConnection
		constexpr auto bIsPassthrough = 0x1b90; // bool
	}

	namespace n_AMOCharacterGM { // : AMOCharacterPlayer
		constexpr auto iColor = 0xcf0; // int32_t
		constexpr auto pGenericSoundCue = 0xcf8; // USoundCue*
		constexpr auto cGMOHUD = 0xd00; // UMOGMHUD*
		constexpr auto pGMHUD = 0xd08; // UMOGMHUD*
	}

	namespace n_UCompositeDataTable { // : UDataTable
		constexpr auto ParentTables = 0xb0; // TArray<UDataTable*>
		constexpr auto OldParentTables = 0xc0; // TArray<UDataTable*>
	}

	namespace n_UMOScribingPanel { // : UMOUserWidget
		constexpr auto pButton_StartScribing = 0x2c8; // UMOButton*
		constexpr auto pItemSlotPlaceItem_BookSlot = 0x2d0; // UMOItemSlotPlaceItem*
		constexpr auto pItemSlotPlaceItem_ScribeSlot = 0x2d8; // UMOItemSlotPlaceItem*
	}

	namespace n_UInterpTrackInstToggle { // : UInterpTrackInst
		constexpr auto Action = 0x28; // ETrackToggleAction
		constexpr auto LastUpdatePosition = 0x2c; // float
		constexpr auto bSavedActiveState = 0x30; // char : 1
	}

	namespace n_ATextRenderActor { // : AActor
		constexpr auto TextRender = 0x220; // UTextRenderComponent*
	}

	namespace n_UMOChatColorSelectionEntry { // : UMOOptionsEntry
		constexpr auto pMOButton = 0x318; // UButton*
		constexpr auto pOptionsChat = 0x320; // UMOUserWidgetOptionsChat*
		constexpr auto pImage = 0x328; // UImage*
		constexpr auto currentColor = 0x330; // FColor
	}

	namespace n_UMOGameMenu { // : UMOUserWidget
		constexpr auto pOptionsButton = 0x2c8; // UMOButtonMedium*
	}

	namespace n_ANavigationTestingActor { // : AActor
		constexpr auto CapsuleComponent = 0x230; // UCapsuleComponent*
		constexpr auto InvokerComponent = 0x238; // UNavigationInvokerComponent*
		constexpr auto bActAsNavigationInvoker = 0x240; // char : 1
		constexpr auto NavAgentProps = 0x248; // FNavAgentProperties
		constexpr auto QueryingExtent = 0x278; // FVector
		constexpr auto MyNavData = 0x288; // ANavigationData*
		constexpr auto ProjectedLocation = 0x290; // FVector
		constexpr auto bProjectedLocationValid = 0x29c; // char : 1
		constexpr auto bSearchStart = 0x29c; // char : 1
		constexpr auto CostLimitFactor = 0x2a0; // float
		constexpr auto MinimumCostLimit = 0x2a4; // float
		constexpr auto bBacktracking = 0x2a8; // char : 1
		constexpr auto bUseHierarchicalPathfinding = 0x2a8; // char : 1
		constexpr auto bGatherDetailedInfo = 0x2a8; // char : 1
		constexpr auto bDrawDistanceToWall = 0x2a8; // char : 1
		constexpr auto bShowNodePool = 0x2a8; // char : 1
		constexpr auto bShowBestPath = 0x2a8; // char : 1
		constexpr auto bShowDiffWithPreviousStep = 0x2a8; // char : 1
		constexpr auto bShouldBeVisibleInGame = 0x2a8; // char : 1
		constexpr auto CostDisplayMode = 0x2ac; // ENavCostDisplay
		constexpr auto TextCanvasOffset = 0x2b0; // FVector2D
		constexpr auto bPathExist = 0x2b8; // char : 1
		constexpr auto bPathIsPartial = 0x2b8; // char : 1
		constexpr auto bPathSearchOutOfNodes = 0x2b8; // char : 1
		constexpr auto PathfindingTime = 0x2bc; // float
		constexpr auto PathCost = 0x2c0; // float
		constexpr auto PathfindingSteps = 0x2c4; // int32_t
		constexpr auto OtherActor = 0x2c8; // ANavigationTestingActor*
		constexpr auto FilterClass = 0x2d0; // UNavigationQueryFilter*
		constexpr auto ShowStepIndex = 0x2d8; // int32_t
		constexpr auto OffsetFromCornersDistance = 0x2dc; // float
	}

	namespace n_UNiagaraDataInterfaceWater { // : UNiagaraDataInterface
		constexpr auto SourceBody = 0x38; // AWaterBody*
	}

	namespace n_UMaterialExpressionShadowReplace { // : UMaterialExpression
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto Shadow = 0x54; // FExpressionInput
	}

	namespace n_UBP_MODragDropOperationSkill_C { // : UMODragDropOperationSkill
		constexpr auto ActionSlotRef = 0x98; // UWB_ItemSlotActionbar_C*
	}

	namespace n_UParticleModuleMeshMaterial { // : UParticleModuleMaterialBase
		constexpr auto MeshMaterials = 0x30; // TArray<UMaterialInterface*>
	}

	namespace n_UWB_MOCheckBoxEntryLanguage_C { // : UMOCheckBoxEntryLanguage
		constexpr auto UberGraphFrame = 0x348; // FPointerToUberGraphFrame
		constexpr auto MOButtonMedium_HelpOut = 0x350; // UMOButtonMedium*
		constexpr auto pText_Pct = 0x358; // UTextBlock*
	}

	namespace n_UMOPopupMessage { // : UMOUserWidget
		constexpr auto pCaptionText = 0x2c8; // UTextBlock*
		constexpr auto pBodyText = 0x2d0; // UTextBlock*
	}

	namespace n_UEdGraphPin_Deprecated { // : UObject
		constexpr auto PinName = 0x28; // FString
		constexpr auto PinToolTip = 0x38; // FString
		constexpr auto Direction = 0x48; // EEdGraphPinDirection
		constexpr auto PinType = 0x50; // FEdGraphPinType
		constexpr auto DefaultValue = 0xa8; // FString
		constexpr auto AutogeneratedDefaultValue = 0xb8; // FString
		constexpr auto DefaultObject = 0xc8; // UObject*
		constexpr auto DefaultTextValue = 0xd0; // FText
		constexpr auto LinkedTo = 0xe8; // TArray<UEdGraphPin_Deprecated*>
		constexpr auto SubPins = 0xf8; // TArray<UEdGraphPin_Deprecated*>
		constexpr auto ParentPin = 0x108; // UEdGraphPin_Deprecated*
		constexpr auto ReferencePassThroughConnection = 0x110; // UEdGraphPin_Deprecated*
	}

	namespace n_UMOUserWidgetOptionsChat { // : UMOUserWidgetOptionsPanel
		constexpr auto pMOColorPicker = 0x2d0; // UMOColorPicker*
		constexpr auto pTempCheckBoxEntry_DisableChat = 0x2d8; // UMOCheckBoxEntry*
		constexpr auto vCheckBoxEntries = 0x2e0; // TArray<UMOCheckBoxEntry*>
		constexpr auto pCheckBoxEntry_PopUp_Local = 0x2f0; // UMOCheckBoxEntry*
		constexpr auto pCheckBoxEntry_PopUp_Whisper = 0x2f8; // UMOCheckBoxEntry*
		constexpr auto pCheckBoxEntry_PopUp_Yell = 0x300; // UMOCheckBoxEntry*
		constexpr auto pCheckBoxEntry_PopUp_Guild = 0x308; // UMOCheckBoxEntry*
		constexpr auto pCheckBoxEntry_PopUp_Skill = 0x310; // UMOCheckBoxEntry*
		constexpr auto pCheckBoxEntry_PopUp_Combat = 0x318; // UMOCheckBoxEntry*
		constexpr auto pCheckBoxEntry_PopUp_Game = 0x320; // UMOCheckBoxEntry*
		constexpr auto pCheckBoxEntry_PopUp_Server = 0x328; // UMOCheckBoxEntry*
		constexpr auto iLastPressedEntryIndex_Color = 0x330; // int32_t
		constexpr auto vColorEntries = 0x338; // TArray<UMOChatColorSelectionEntry*>
		constexpr auto pColorEntry_Local = 0x348; // UMOChatColorSelectionEntry*
		constexpr auto pColorEntry_Whisper = 0x350; // UMOChatColorSelectionEntry*
		constexpr auto pColorEntry_Yell = 0x358; // UMOChatColorSelectionEntry*
		constexpr auto pColorEntry_Guild = 0x360; // UMOChatColorSelectionEntry*
		constexpr auto pColorEntry_Skill = 0x368; // UMOChatColorSelectionEntry*
		constexpr auto pColorEntry_Combat = 0x370; // UMOChatColorSelectionEntry*
		constexpr auto pColorEntry_Game = 0x378; // UMOChatColorSelectionEntry*
		constexpr auto pColorEntry_Server = 0x380; // UMOChatColorSelectionEntry*
	}

	namespace n_AMOEquipmentActorArmor { // : AMOEquipmentActor
		constexpr auto ArmorComponent = 0x288; // USkeletalMeshComponent*
		constexpr auto MasterPoseComponentOverride = 0x290; // USkeletalMeshComponent*
		constexpr auto ArmorData = 0x298; // FMOEquipmentActorArmorData
	}

	namespace n_UMODamageDirectionIndcatorPool { // : UMOUserWidget
		constexpr auto vDamageIndicators = 0x2c8; // TArray<UMODamageDirectionIndcator*>
		constexpr auto pMOPlayerController = 0x2d8; // AMOPlayerController*
	}

	namespace n_UMRMeshComponent { // : UPrimitiveComponent
		constexpr auto Material = 0x450; // UMaterialInterface*
		constexpr auto WireframeMaterial = 0x458; // UMaterialInterface*
		constexpr auto bCreateMeshProxySections = 0x460; // bool
		constexpr auto bUpdateNavMeshOnMeshUpdate = 0x461; // bool
		constexpr auto bNeverCreateCollisionMesh = 0x462; // bool
		constexpr auto CachedBodySetup = 0x468; // UBodySetup*
		constexpr auto BodySetups = 0x470; // TArray<UBodySetup*>
	}

	namespace n_AVectorFieldVolume { // : AActor
		constexpr auto VectorFieldComponent = 0x220; // UVectorFieldComponent*
	}

	namespace n_UWB_MOOptionsKeybindsPanel_C { // : UMOUserWidgetOptionsKeybinds
		constexpr auto UberGraphFrame = 0x358; // FPointerToUberGraphFrame
		constexpr auto BACKGROUND = 0x360; // UImage*
		constexpr auto CanvasPanel-Keybindings = 0x368; // UCanvasPanel*
		constexpr auto WB_TabManager = 0x370; // UWB_TabManager_C*
	}

	namespace n_UMOBrokerPetListEntry { // : UMOPetListEntry
		constexpr auto pMOCurrencyWidget = 0x300; // UMOCurrencyWidget*
		constexpr auto pTextBlockCityName = 0x308; // UTextBlock*
		constexpr auto pTextBlockPlayerName = 0x310; // UTextBlock*
		constexpr auto pTextBlockQuantity = 0x318; // UTextBlock*
		constexpr auto pTextBlockDays = 0x320; // UTextBlock*
		constexpr auto pMOBrokerButton_Text = 0x328; // UTextBlock*
		constexpr auto pImage_SelectedBG = 0x330; // UImage*
		constexpr auto pImage_HoveredBG = 0x338; // UImage*
		constexpr auto pMOButton_BrokerEntry = 0x340; // UMOButton*
		constexpr auto vBaggedItemJsonArray = 0x348; // TArray<FString>
		constexpr auto iBagSize = 0x358; // int32_t
		constexpr auto iCuprumCost = 0x360; // uint64_t
		constexpr auto iCurPanelState = 0x368; // int32_t
		constexpr auto bSelectionState = 0x36c; // bool
	}

	namespace n_UGameplayTagsSettings { // : UGameplayTagsList
		constexpr auto ImportTagsFromConfig = 0x48; // bool
		constexpr auto WarnOnInvalidTags = 0x49; // bool
		constexpr auto FastReplication = 0x4a; // bool
		constexpr auto InvalidTagCharacters = 0x50; // FString
		constexpr auto CategoryRemapping = 0x60; // TArray<FGameplayTagCategoryRemap>
		constexpr auto GameplayTagTableList = 0x70; // TArray<FSoftObjectPath>
		constexpr auto GameplayTagRedirects = 0x80; // TArray<FGameplayTagRedirect>
		constexpr auto CommonlyReplicatedTags = 0x90; // TArray<FName>
		constexpr auto NumBitsForContainerSize = 0xa0; // int32_t
		constexpr auto NetIndexFirstBitSegment = 0xa4; // int32_t
		constexpr auto RestrictedConfigFiles = 0xa8; // TArray<FRestrictedConfigInfo>
	}

	namespace n_AControlRigControlActor { // : AActor
		constexpr auto ActorToTrack = 0x220; // AActor*
		constexpr auto ControlRigClass = 0x228; // UControlRig*
		constexpr auto bRefreshOnTick = 0x230; // bool
		constexpr auto bIsSelectable = 0x231; // bool
		constexpr auto MaterialOverride = 0x238; // UMaterialInterface*
		constexpr auto ColorParameter = 0x240; // FString
		constexpr auto bCastShadows = 0x250; // bool
		constexpr auto ActorRootComponent = 0x258; // USceneComponent*
		constexpr auto ControlRig = 0x260; // UControlRig*
		constexpr auto ControlNames = 0x268; // TArray<FName>
		constexpr auto GizmoTransforms = 0x278; // TArray<FTransform>
		constexpr auto Components = 0x288; // TArray<UStaticMeshComponent*>
		constexpr auto Materials = 0x298; // TArray<UMaterialInstanceDynamic*>
		constexpr auto ColorParameterName = 0x2a8; // FName
	}

	namespace n_UParticleSystemReplay { // : UObject
		constexpr auto ClipIDNumber = 0x28; // int32_t
	}

	namespace n_UCameraAnim { // : UObject
		constexpr auto CameraInterpGroup = 0x28; // UInterpGroup*
		constexpr auto AnimLength = 0x30; // float
		constexpr auto BoundingBox = 0x34; // FBox
		constexpr auto bRelativeToInitialTransform = 0x50; // char : 1
		constexpr auto bRelativeToInitialFOV = 0x50; // char : 1
		constexpr auto BaseFOV = 0x54; // float
		constexpr auto BasePostProcessSettings = 0x60; // FPostProcessSettings
		constexpr auto BasePostProcessBlendWeight = 0x5b0; // float
	}

	namespace n_UNavigationInvokerComponent { // : UActorComponent
		constexpr auto TileGenerationRadius = 0xb0; // float
		constexpr auto TileRemovalRadius = 0xb4; // float
	}

	namespace n_ULODSyncComponent { // : UActorComponent
		constexpr auto NumLODs = 0xb0; // int32_t
		constexpr auto ForcedLOD = 0xb4; // int32_t
		constexpr auto ComponentsToSync = 0xb8; // TArray<FComponentSync>
		constexpr auto CustomLODMapping = 0xc8; // TMap<FName, FLODMappingData>
		constexpr auto CurrentLOD = 0x118; // int32_t
		constexpr auto CurrentNumLODs = 0x11c; // int32_t
		constexpr auto DriveComponents = 0x120; // TArray<UPrimitiveComponent*>
		constexpr auto SubComponents = 0x130; // TArray<UPrimitiveComponent*>
	}

	namespace n_UShadowMapTexture2D { // : UTexture2D
		constexpr auto ShadowmapFlags = 0x100; // EShadowMapFlags
	}

	namespace n_ALuminAROrigin { // : AAROriginActor
		constexpr auto MRMeshComponent = 0x220; // UMRMeshComponent*
		constexpr auto PlaneSurfaceMaterial = 0x228; // UMaterialInterface*
		constexpr auto WireframeMaterial = 0x230; // UMaterialInterface*
	}

	namespace n_ULiveLinkCurveRemapSettings { // : ULiveLinkSourceSettings
		constexpr auto CurveConversionSettings = 0xa0; // FLiveLinkCurveConversionSettings
	}

	namespace n_UMOTask { // : UMOUserWidget
		constexpr auto cTaskItemListEntryClass = 0x2c8; // UMOTaskItemListEntry*
		constexpr auto vTabButtons = 0x2d0; // TArray<UMOUserWidgetTabButtonNew*>
		constexpr auto pMOTabButton_AcceptTask = 0x2e0; // UMOUserWidgetTabButtonNew*
		constexpr auto pMOTabButton_DeliverItems = 0x2e8; // UMOUserWidgetTabButtonNew*
		constexpr auto vPanels = 0x2f0; // TArray<UMOTaskPanel*>
		constexpr auto pMOTaskAcceptPanel = 0x300; // UMOTaskAcceptPanel*
		constexpr auto pMOTaskDeliveryPanel = 0x308; // UMOTaskDeliveryPanel*
		constexpr auto pTaskVendorCharacter = 0x310; // AMOCharacterAIGeneratedTaskVendor*
		constexpr auto bCanAcceptTask = 0x318; // bool
	}

	namespace n_UExpandableArea { // : UWidget
		constexpr auto Style = 0x110; // FExpandableAreaStyle
		constexpr auto BorderBrush = 0x230; // FSlateBrush
		constexpr auto BorderColor = 0x2b8; // FSlateColor
		constexpr auto bIsExpanded = 0x2e0; // bool
		constexpr auto MaxHeight = 0x2e4; // float
		constexpr auto HeaderPadding = 0x2e8; // FMargin
		constexpr auto AreaPadding = 0x2f8; // FMargin
		constexpr auto OnExpansionChanged = 0x308; // FMulticastInlineDelegate
		constexpr auto HeaderContent = 0x318; // UWidget*
		constexpr auto BodyContent = 0x320; // UWidget*
	}

	namespace n_UMODataAssetAnimationRandomSet { // : UPrimaryDataAsset
		constexpr auto DefaultSequence = 0x30; // FRandomPlayerSequenceEntry
		constexpr auto MinimumPlayTimeBeforeRandomizing = 0x80; // float
		constexpr auto MaximumPlayTimeBeforeRandomizing = 0x84; // float
		constexpr auto Sequences = 0x88; // TArray<FMORandomPlayerSequenceEntry>
	}

	namespace n_UBP_MO_UnsavedChanges_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto pMOButtonUnsavedChanges_No = 0x268; // UMOButtonLarge*
		constexpr auto pMOButtonUnsavedChanges_Yes = 0x270; // UMOButtonLarge*
		constexpr auto NewVar_1 = 0x278; // UObject*
		constexpr auto NewVar_2 = 0x280; // UUserWidget*
		constexpr auto WP_LoginOptions = 0x288; // UObject*
	}

	namespace n_AARSkyLight { // : ASkyLight
		constexpr auto CaptureProbe = 0x230; // UAREnvironmentCaptureProbe*
	}

	namespace n_UInputAxisDelegateBinding { // : UInputDelegateBinding
		constexpr auto InputAxisDelegateBindings = 0x28; // TArray<FBlueprintInputAxisDelegateBinding>
	}

	namespace n_UChaosSolverSettings { // : UDeveloperSettings
		constexpr auto DefaultChaosSolverActorClass = 0x40; // FSoftClassPath
	}

	namespace n_UMovieSceneSequenceTickManager { // : UObject
		constexpr auto SequenceActors = 0x28; // TArray<AActor*>
		constexpr auto Linker = 0x38; // UMovieSceneEntitySystemLinker*
	}

	namespace n_UEndTurnCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UNiagaraDataInterfaceArrayBool { // : UNiagaraDataInterfaceArray
		constexpr auto BoolData = 0x50; // TArray<bool>
	}

	namespace n_UMOEOSSubsystem { // : UEngineSubsystem
		constexpr auto OnErrorThrown = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionRound { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UEnvQueryNode { // : UObject
		constexpr auto VerNum = 0x28; // int32_t
	}

	namespace n_UEnvQueryGenerator { // : UEnvQueryNode
		constexpr auto OptionName = 0x30; // FString
		constexpr auto ItemType = 0x40; // UEnvQueryItemType*
		constexpr auto bAutoSortTests = 0x48; // char : 1
	}

	namespace n_UMOButtonLarge { // : UMOButton
		constexpr auto CustomStyle = 0x438; // USlateWidgetStyleAsset*
	}

	namespace n_UMOCraftingListEntry { // : UMOWidgetBlueprint
		constexpr auto pTextBlockCraftingName = 0x260; // UTextBlock*
		constexpr auto pTextBlockCraftingSub = 0x268; // UTextBlock*
		constexpr auto fDepthOffset = 0x270; // float
		constexpr auto pSkillTreeParent = 0x288; // UMOSkillsTree*
		constexpr auto pParent = 0x290; // UMOCraftingListEntry*
		constexpr auto pCraftingParent = 0x298; // UMOCrafting*
		constexpr auto vChildren = 0x2a0; // TArray<UMOCraftingListEntry*>
	}

	namespace n_UNiagaraEventReceiverEmitterAction_SpawnParticles { // : UNiagaraEventReceiverEmitterAction
		constexpr auto NumParticles = 0x28; // uint32_t
	}

	namespace n_UMOSaveDataInstance { // : UObject
		constexpr auto sData = 0x28; // FMOSaveData
		constexpr auto sSaveDataSlotName = 0x150; // FString
		constexpr auto iSaveDataUserIndex = 0x160; // int32_t
	}

	namespace n_ULiveLinkComponentController { // : UActorComponent
		constexpr auto SubjectRepresentation = 0xb0; // FLiveLinkSubjectRepresentation
		constexpr auto ControllerMap = 0xc0; // TMap<ULiveLinkRole*, ULiveLinkControllerBase*>
		constexpr auto bUpdateInEditor = 0x110; // bool
		constexpr auto OnLiveLinkUpdated = 0x118; // FMulticastInlineDelegate
		constexpr auto ComponentToControl = 0x128; // FComponentReference
		constexpr auto bDisableEvaluateLiveLinkWhenSpawnable = 0x150; // bool
		constexpr auto bEvaluateLiveLink = 0x151; // bool
	}

	namespace n_USlateSettings { // : UObject
		constexpr auto bExplicitCanvasChildZOrder = 0x28; // bool
	}

	namespace n_UMovieSceneControlRigParameterSection { // : UMovieSceneParameterSection
		constexpr auto ControlRig = 0x148; // UControlRig*
		constexpr auto ControlsMask = 0x150; // TArray<bool>
		constexpr auto TransformMask = 0x160; // FMovieSceneTransformMask
		constexpr auto bAdditive = 0x164; // bool
		constexpr auto bApplyBoneFilter = 0x165; // bool
		constexpr auto BoneFilter = 0x168; // FInputBlendPose
		constexpr auto Weight = 0x178; // FMovieSceneFloatChannel
		constexpr auto ControlChannelMap = 0x218; // TMap<FName, FChannelMapInfo>
		constexpr auto EnumParameterNamesAndCurves = 0x268; // TArray<FEnumParameterNameAndCurve>
		constexpr auto IntegerParameterNamesAndCurves = 0x278; // TArray<FIntegerParameterNameAndCurve>
	}

	namespace n_UMOJournalNoteEntry { // : UMOUserWidget
		constexpr auto sNoteSaveData = 0x2f8; // FMOJournalNoteSaveData
		constexpr auto pSelectedBG = 0x328; // UImage*
		constexpr auto pIcon = 0x330; // UImage*
		constexpr auto pTitleText = 0x338; // UTextBlock*
		constexpr auto pMOButton = 0x340; // UMOButton*
		constexpr auto pMOButton_Remove = 0x348; // UMOButton*
		constexpr auto pMOButton_Rename = 0x350; // UMOButton*
	}

	namespace n_UInterpTrackVisibility { // : UInterpTrack
		constexpr auto VisibilityTrack = 0x70; // TArray<FVisibilityTrackKey>
		constexpr auto bFireEventsWhenForwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenJumpingForwards = 0x80; // char : 1
	}

	namespace n_UMaterialExpressionLandscapeLayerWeight { // : UMaterialExpression
		constexpr auto Base = 0x40; // FExpressionInput
		constexpr auto Layer = 0x54; // FExpressionInput
		constexpr auto ParameterName = 0x68; // FName
		constexpr auto PreviewWeight = 0x70; // float
		constexpr auto ConstBase = 0x74; // FVector
		constexpr auto ExpressionGUID = 0x80; // FGuid
	}

	namespace n_UBP_MODragDropOperationSpell_C { // : UMODragDropOperationSpell
		constexpr auto ActionSlotRef = 0x98; // UWB_ItemSlotActionbar_C*
	}

	namespace n_UWB_CharacterCreationNew_C { // : UMOCharacterCreationNew
		constexpr auto UberGraphFrame = 0x648; // FPointerToUberGraphFrame
		constexpr auto FadeIn = 0x650; // UWidgetAnimation*
		constexpr auto PanelTextBackground = 0x658; // UImage*
		constexpr auto pMOButton_Camera_CloseUp = 0x660; // UMOButton*
		constexpr auto pMOButton_Camera_ZoomedOut = 0x668; // UMOButton*
	}

	namespace n_ASceneCapture { // : AActor
		constexpr auto MeshComp = 0x220; // UStaticMeshComponent*
		constexpr auto SceneComponent = 0x228; // USceneComponent*
	}

	namespace n_UMaterialExpressionReflectionCapturePassSwitch { // : UMaterialExpression
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto Reflection = 0x54; // FExpressionInput
	}

	namespace n_UBasicOverlays { // : UOverlays
		constexpr auto Overlays = 0x28; // TArray<FOverlayItem>
	}

	namespace n_UMovieSceneAudioTrack { // : UMovieSceneNameableTrack
		constexpr auto AudioSections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UARGeoAnchorComponent { // : UARComponent
		constexpr auto ReplicatedPayload = 0x280; // FARGeoAnchorUpdatePayload
	}

	namespace n_UMovieSceneTrackInstanceSystem { // : UMovieSceneEntitySystem
		constexpr auto Instantiator = 0x40; // UMovieSceneTrackInstanceInstantiator*
	}

	namespace n_UBTCompositeNode { // : UBTNode
		constexpr auto Children = 0x58; // TArray<FBTCompositeChild>
		constexpr auto Services = 0x68; // TArray<UBTService*>
		constexpr auto bApplyDecoratorScope = 0x88; // char : 1
	}

	namespace n_AGameMode { // : AGameModeBase
		constexpr auto MatchState = 0x2c0; // FName
		constexpr auto bDelayedStart = 0x2c8; // char : 1
		constexpr auto NumSpectators = 0x2cc; // int32_t
		constexpr auto NumPlayers = 0x2d0; // int32_t
		constexpr auto NumBots = 0x2d4; // int32_t
		constexpr auto MinRespawnDelay = 0x2d8; // float
		constexpr auto NumTravellingPlayers = 0x2dc; // int32_t
		constexpr auto EngineMessageClass = 0x2e0; // ULocalMessage*
		constexpr auto InactivePlayerArray = 0x2e8; // TArray<APlayerState*>
		constexpr auto InactivePlayerStateLifeSpan = 0x2f8; // float
		constexpr auto MaxInactivePlayers = 0x2fc; // int32_t
		constexpr auto bHandleDedicatedServerReplays = 0x300; // bool
	}

	namespace n_USoundSubmix { // : USoundSubmixWithParentBase
		constexpr auto bMuteWhenBackgrounded = 0x40; // char : 1
		constexpr auto SubmixEffectChain = 0x48; // TArray<USoundEffectSubmixPreset*>
		constexpr auto AmbisonicsPluginSettings = 0x58; // USoundfieldEncodingSettingsBase*
		constexpr auto EnvelopeFollowerAttackTime = 0x60; // int32_t
		constexpr auto EnvelopeFollowerReleaseTime = 0x64; // int32_t
		constexpr auto GainMode = 0x68; // EGainParamMode
		constexpr auto OutputVolume = 0x6c; // float
		constexpr auto WetLevel = 0x70; // float
		constexpr auto DryLevel = 0x74; // float
		constexpr auto OnSubmixRecordedFileDone = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionCosine { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Period = 0x54; // float
	}

	namespace n_UMaterialExpressionDistanceToNearestSurface { // : UMaterialExpression
		constexpr auto Position = 0x40; // FExpressionInput
	}

	namespace n_ULiveLinkInstance { // : UAnimInstance
		constexpr auto CurrentRetargetAsset = 0x2b8; // ULiveLinkRetargetAsset*
	}

	namespace n_UMaterialExpressionShadingModel { // : UMaterialExpression
		constexpr auto ShadingModel = 0x40; // EMaterialShadingModel
	}

	namespace n_UBTTask_BlackboardBase { // : UBTTaskNode
		constexpr auto BlackboardKey = 0x70; // FBlackboardKeySelector
	}

	namespace n_UAB_Creature_Lying_QuickFix_C { // : UMOAnimationInstance
		constexpr auto UberGraphFrame = 0x530; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x538; // FAnimNode_Root
		constexpr auto MOAnimGraphNode_RandomPlayer = 0x568; // FMOAnimNode_RandomPlayer
		constexpr auto AnimGraphNode_Slot = 0x688; // FAnimNode_Slot
	}

	namespace n_UMaterialExpressionLandscapeLayerCoords { // : UMaterialExpression
		constexpr auto MappingType = 0x40; // ETerrainCoordMappingType
		constexpr auto CustomUVType = 0x41; // ELandscapeCustomizedCoordType
		constexpr auto MappingScale = 0x44; // float
		constexpr auto MappingRotation = 0x48; // float
		constexpr auto MappingPanU = 0x4c; // float
		constexpr auto MappingPanV = 0x50; // float
	}

	namespace n_UAvfMediaSettings { // : UObject
		constexpr auto NativeAudioOut = 0x28; // bool
	}

	namespace n_UWorld { // : UObject
		constexpr auto PersistentLevel = 0x30; // ULevel*
		constexpr auto NetDriver = 0x38; // UNetDriver*
		constexpr auto LineBatcher = 0x40; // ULineBatchComponent*
		constexpr auto PersistentLineBatcher = 0x48; // ULineBatchComponent*
		constexpr auto ForegroundLineBatcher = 0x50; // ULineBatchComponent*
		constexpr auto NetworkManager = 0x58; // AGameNetworkManager*
		constexpr auto PhysicsCollisionHandler = 0x60; // UPhysicsCollisionHandler*
		constexpr auto ExtraReferencedObjects = 0x68; // TArray<UObject*>
		constexpr auto PerModuleDataObjects = 0x78; // TArray<UObject*>
		constexpr auto StreamingLevels = 0x88; // TArray<ULevelStreaming*>
		constexpr auto StreamingLevelsToConsider = 0x98; // FStreamingLevelsToConsider
		constexpr auto StreamingLevelsPrefix = 0xc0; // FString
		constexpr auto CurrentLevelPendingVisibility = 0xd0; // ULevel*
		constexpr auto CurrentLevelPendingInvisibility = 0xd8; // ULevel*
		constexpr auto DemoNetDriver = 0xe0; // UDemoNetDriver*
		constexpr auto MyParticleEventManager = 0xe8; // AParticleEventManager*
		constexpr auto DefaultPhysicsVolume = 0xf0; // APhysicsVolume*
		constexpr auto bAreConstraintsDirty = 0x10e; // char : 1
		constexpr auto NavigationSystem = 0x110; // UNavigationSystemBase*
		constexpr auto AuthorityGameMode = 0x118; // AGameModeBase*
		constexpr auto GameState = 0x120; // AGameStateBase*
		constexpr auto AISystem = 0x128; // UAISystemBase*
		constexpr auto AvoidanceManager = 0x130; // UAvoidanceManager*
		constexpr auto Levels = 0x138; // TArray<ULevel*>
		constexpr auto LevelCollections = 0x148; // TArray<FLevelCollection>
		constexpr auto OwningGameInstance = 0x180; // UGameInstance*
		constexpr auto ParameterCollectionInstances = 0x188; // TArray<UMaterialParameterCollectionInstance*>
		constexpr auto CanvasForRenderingToTarget = 0x198; // UCanvas*
		constexpr auto CanvasForDrawMaterialToRenderTarget = 0x1a0; // UCanvas*
		constexpr auto ComponentsThatNeedPreEndOfFrameSync = 0x1f8; // TSet<UActorComponent*>
		constexpr auto ComponentsThatNeedEndOfFrameUpdate = 0x248; // TArray<UActorComponent*>
		constexpr auto ComponentsThatNeedEndOfFrameUpdate_OnGameThread = 0x258; // TArray<UActorComponent*>
		constexpr auto WorldComposition = 0x5d8; // UWorldComposition*
		constexpr auto PSCPool = 0x668; // FWorldPSCPool
	}

	namespace n_UMOCarouselSelectValue { // : UMOUserWidget
		constexpr auto LabelText = 0x2c8; // FText
		constexpr auto InitTooltipText = 0x2e0; // FText
		constexpr auto iValueIncrement = 0x2f8; // int32_t
		constexpr auto iMinValue = 0x2fc; // int32_t
		constexpr auto iMaxValue = 0x300; // int32_t
		constexpr auto iCurrentValue = 0x304; // int32_t
		constexpr auto pMOButton_Forward = 0x318; // UMOButton*
		constexpr auto pMOButton_Back = 0x320; // UMOButton*
		constexpr auto pLabelText = 0x328; // UTextBlock*
		constexpr auto pValueText = 0x330; // UTextBlock*
		constexpr auto iEntryIndex = 0x338; // int32_t
		constexpr auto pAttributePanel = 0x340; // UMOCharCreationAttributesPanel*
		constexpr auto bCannotLoop = 0x348; // bool
	}

	namespace n_UMODataAssetEtherCombat { // : UPrimaryDataAsset
		constexpr auto FirstPersonOverride = 0x30; // UMODataAssetEtherCombat*
		constexpr auto AttackMontage = 0x38; // UAnimMontage*
		constexpr auto AttackBeginAnimation = 0x40; // UAnimSequenceBase*
		constexpr auto AttackCancelAnimation = 0x48; // UAnimSequenceBase*
		constexpr auto cSpiritArmClass = 0x50; // AMOSpiritArm*
	}

	namespace n_UMOChatGUI { // : UMOUserWidget
		constexpr auto bIsResizing = 0x2c8; // bool
		constexpr auto bIsMoving = 0x2c9; // bool
		constexpr auto ChatMessage = 0x2d0; // UUserWidget*
		constexpr auto ChannelTab = 0x2d8; // UUserWidget*
		constexpr auto pChatBox = 0x318; // UEditableTextBox*
		constexpr auto pSendButton = 0x320; // UButton*
		constexpr auto pChannelButton = 0x328; // UButton*
		constexpr auto pChatLog = 0x330; // UScrollBox*
		constexpr auto pChannelText = 0x338; // UTextBlock*
		constexpr auto pHorizontalBox_ChannelTabs = 0x340; // UHorizontalBox*
		constexpr auto OriginalChatLogSize = 0x358; // FVector2D
		constexpr auto CursorPos_OnStart = 0x360; // FVector2D
		constexpr auto Size_OnResizingStart = 0x368; // FVector2D
		constexpr auto ChatPos_OnMoveStart = 0x370; // FVector2D
		constexpr auto ipCurResolution = 0x378; // FIntPoint
		constexpr auto pHorizontalBox_Scale = 0x380; // UHorizontalBox*
		constexpr auto pMOButton_Resize = 0x388; // UMOButton*
	}

	namespace n_UParticleModuleVelocityCone { // : UParticleModuleVelocityBase
		constexpr auto Angle = 0x38; // FRawDistributionFloat
		constexpr auto Velocity = 0x68; // FRawDistributionFloat
		constexpr auto Direction = 0x98; // FVector
	}

	namespace n_UPaperFlipbook { // : UObject
		constexpr auto FramesPerSecond = 0x28; // float
		constexpr auto KeyFrames = 0x30; // TArray<FPaperFlipbookKeyFrame>
		constexpr auto DefaultMaterial = 0x40; // UMaterialInterface*
		constexpr auto CollisionSource = 0x48; // EFlipbookCollisionMode
	}

	namespace n_UMOVendor { // : UMOUserWidget
		constexpr auto pMOButton_Accept = 0x2c8; // UMOButtonMedium*
		constexpr auto pTextBlock_TotalCost = 0x2d0; // UTextBlock*
		constexpr auto pMOScrollBox_ForSale = 0x2d8; // UMOScrollBox*
		constexpr auto pMOScrollBox_Buy = 0x2e0; // UMOScrollBox*
		constexpr auto pMOScrollBoxPlaceItems_Sell = 0x2e8; // UMOScrollBoxPlaceItems*
		constexpr auto pVerticalBox_Wants = 0x2f0; // UVerticalBox*
		constexpr auto pGridPanel_Wants = 0x2f8; // UGridPanel*
		constexpr auto pMOEditableTextBox = 0x300; // UMOEditableTextBox*
		constexpr auto cVendorListEntryClass = 0x308; // UMOItemListEntry*
		constexpr auto cStaticSlotEntryClass = 0x310; // UMOItemSlotStatic*
		constexpr auto pVendorCharacter = 0x338; // AMOCharacterAIGeneratedVendor*
	}

	namespace n_UAxisPositionGizmo { // : UInteractiveGizmo
		constexpr auto AxisSource = 0x48; // TScriptInterface<IGizmoAxisSource>
		constexpr auto ParameterSource = 0x58; // TScriptInterface<IGizmoFloatParameterSource>
		constexpr auto HitTarget = 0x68; // TScriptInterface<IGizmoClickTarget>
		constexpr auto StateTarget = 0x78; // TScriptInterface<IGizmoStateTarget>
		constexpr auto bEnableSignedAxis = 0x88; // bool
		constexpr auto bInInteraction = 0x89; // bool
		constexpr auto InteractionOrigin = 0x8c; // FVector
		constexpr auto InteractionAxis = 0x98; // FVector
		constexpr auto InteractionStartPoint = 0xa4; // FVector
		constexpr auto InteractionCurPoint = 0xb0; // FVector
		constexpr auto InteractionStartParameter = 0xbc; // float
		constexpr auto InteractionCurParameter = 0xc0; // float
		constexpr auto ParameterSign = 0xc4; // float
	}

	namespace n_UMaterialExpressionNoise { // : UMaterialExpression
		constexpr auto Position = 0x40; // FExpressionInput
		constexpr auto FilterWidth = 0x54; // FExpressionInput
		constexpr auto Scale = 0x68; // float
		constexpr auto Quality = 0x6c; // int32_t
		constexpr auto NoiseFunction = 0x70; // ENoiseFunction
		constexpr auto bTurbulence = 0x74; // char : 1
		constexpr auto Levels = 0x78; // int32_t
		constexpr auto OutputMin = 0x7c; // float
		constexpr auto OutputMax = 0x80; // float
		constexpr auto LevelScale = 0x84; // float
		constexpr auto bTiling = 0x88; // char : 1
		constexpr auto RepeatSize = 0x8c; // uint32_t
	}

	namespace n_UMOJournalEntriesPanel { // : UMOJournalPanel
		constexpr auto pMOScrollBox_GroupEntries = 0x2d0; // UMOScrollBox*
		constexpr auto pLastClickedEntry = 0x2d8; // UMOJournalEntry*
		constexpr auto pCanvasPanel = 0x2e0; // UCanvasPanel*
		constexpr auto pBanner = 0x2e8; // UImage*
		constexpr auto pTitleText = 0x2f0; // UTextBlock*
		constexpr auto pMOEditableTextBox_Search = 0x2f8; // UMOEditableTextBox*
		constexpr auto pEditableTextBox = 0x300; // UMOMultiLineEditableTextBox*
		constexpr auto cMOJournalEntry = 0x308; // UMOJournalEntry*
		constexpr auto cMOJournalGroupEntry = 0x310; // UMOJournalGroupEntry*
		constexpr auto vJournalEntryMap = 0x318; // TMap<FString, UMOJournalEntry*>
		constexpr auto vJournalGroupMap = 0x368; // TMap<FString, UMOJournalGroupEntry*>
	}

	namespace n_ULocalPlayer { // : UPlayer
		constexpr auto ViewportClient = 0x70; // UGameViewportClient*
		constexpr auto AspectRatioAxisConstraint = 0x94; // EAspectRatioAxisConstraint
		constexpr auto PendingLevelPlayerControllerClass = 0x98; // APlayerController*
		constexpr auto bSentSplitJoin = 0xa0; // char : 1
		constexpr auto ControllerId = 0xb8; // int32_t
	}

	namespace n_UNavigationDataChunk { // : UObject
		constexpr auto NavigationDataName = 0x28; // FName
	}

	namespace n_UInAppPurchaseCallbackProxy2 { // : UObject
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_USourceEffectRingModulationPreset { // : USoundEffectSourcePreset
		constexpr auto Settings = 0xb0; // FSourceEffectRingModulationSettings
	}

	namespace n_UMOMusicSubsystem { // : UMOWorldSubsystemBase
		constexpr auto OnCurrentSongStoppedOrFinished = 0x40; // FMulticastInlineDelegate
		constexpr auto pAudioComponentA = 0x60; // UAudioComponent*
		constexpr auto pAudioComponentB = 0x68; // UAudioComponent*
		constexpr auto pNextSoundTrack = 0x70; // USoundCue*
		constexpr auto pOverrideCue = 0x78; // USoundCue*
		constexpr auto pPreOverrideCue = 0x80; // USoundCue*
	}

	namespace n_UCanvasRenderTarget2D { // : UTextureRenderTarget2D
		constexpr auto OnCanvasRenderTargetUpdate = 0x108; // FMulticastInlineDelegate
		constexpr auto World = 0x118; // TWeakObjectPtr<UWorld>
		constexpr auto bShouldClearRenderTargetOnReceiveUpdate = 0x120; // bool
	}

	namespace n_ULandscapeComponent { // : UPrimitiveComponent
		constexpr auto SectionBaseX = 0x440; // int32_t
		constexpr auto SectionBaseY = 0x444; // int32_t
		constexpr auto ComponentSizeQuads = 0x448; // int32_t
		constexpr auto SubsectionSizeQuads = 0x44c; // int32_t
		constexpr auto NumSubsections = 0x450; // int32_t
		constexpr auto OverrideMaterial = 0x458; // UMaterialInterface*
		constexpr auto OverrideHoleMaterial = 0x460; // UMaterialInterface*
		constexpr auto OverrideMaterials = 0x468; // TArray<FLandscapeComponentMaterialOverride>
		constexpr auto MaterialInstances = 0x478; // TArray<UMaterialInstanceConstant*>
		constexpr auto MaterialInstancesDynamic = 0x488; // TArray<UMaterialInstanceDynamic*>
		constexpr auto LODIndexToMaterialIndex = 0x498; // TArray<int8_t>
		constexpr auto MaterialIndexToDisabledTessellationMaterial = 0x4a8; // TArray<int8_t>
		constexpr auto XYOffsetmapTexture = 0x4b8; // UTexture2D*
		constexpr auto WeightmapScaleBias = 0x4c0; // FVector4
		constexpr auto WeightmapSubsectionOffset = 0x4d0; // float
		constexpr auto HeightmapScaleBias = 0x4e0; // FVector4
		constexpr auto CachedLocalBox = 0x4f0; // FBox
		constexpr auto CollisionComponent = 0x50c; // LazyObjectProperty
		constexpr auto HeightmapTexture = 0x528; // UTexture2D*
		constexpr auto WeightmapLayerAllocations = 0x530; // TArray<FWeightmapLayerAllocationInfo>
		constexpr auto WeightmapTextures = 0x540; // TArray<UTexture2D*>
		constexpr auto LODStreamingProxy = 0x550; // ULandscapeLODStreamingProxy*
		constexpr auto MapBuildDataId = 0x558; // FGuid
		constexpr auto IrrelevantLights = 0x568; // TArray<FGuid>
		constexpr auto CollisionMipLevel = 0x578; // int32_t
		constexpr auto SimpleCollisionMipLevel = 0x57c; // int32_t
		constexpr auto NegativeZBoundsExtension = 0x580; // float
		constexpr auto PositiveZBoundsExtension = 0x584; // float
		constexpr auto StaticLightingResolution = 0x588; // float
		constexpr auto ForcedLOD = 0x58c; // int32_t
		constexpr auto LODBias = 0x590; // int32_t
		constexpr auto StateId = 0x594; // FGuid
		constexpr auto BakedTextureMaterialGuid = 0x5a4; // FGuid
		constexpr auto GIBakedBaseColorTexture = 0x5b8; // UTexture2D*
		constexpr auto MobileBlendableLayerMask = 0x5c0; // char
		constexpr auto MobileMaterialInterface = 0x5c8; // UMaterialInterface*
		constexpr auto MobileMaterialInterfaces = 0x5d0; // TArray<UMaterialInterface*>
		constexpr auto MobileWeightmapTextures = 0x5e0; // TArray<UTexture2D*>
	}

	namespace n_UWB_MOCharCreationSpeciesPanel_C { // : UMOCharCreationSpeciesPanel
		constexpr auto WB_MO_Scrollbox_Arrow_Down = 0x3d0; // UWB_MO_Scrollbox_Arrow_Down_C*
		constexpr auto WB_MO_Scrollbox_Arrow_Up = 0x3d8; // UWB_MO_Scrollbox_Arrow_Up_C*
	}

	namespace n_UMaterialExpressionRuntimeVirtualTextureSample { // : UMaterialExpression
		constexpr auto Coordinates = 0x40; // FExpressionInput
		constexpr auto WorldPosition = 0x54; // FExpressionInput
		constexpr auto MipValue = 0x68; // FExpressionInput
		constexpr auto VirtualTexture = 0x80; // URuntimeVirtualTexture*
		constexpr auto MaterialType = 0x88; // ERuntimeVirtualTextureMaterialType
		constexpr auto bSinglePhysicalSpace = 0x89; // bool
		constexpr auto bAdaptive = 0x8a; // bool
		constexpr auto MipValueMode = 0x8b; // ERuntimeVirtualTextureMipValueMode
		constexpr auto TextureAddressMode = 0x8c; // ERuntimeVirtualTextureTextureAddressMode
	}

	namespace n_UControlRigValidator { // : UObject
		constexpr auto Passes = 0x28; // TArray<UControlRigValidationPass*>
	}

	namespace n_UEditableGameplayTagQueryExpression_AnyExprMatch { // : UEditableGameplayTagQueryExpression
		constexpr auto Expressions = 0x28; // TArray<UEditableGameplayTagQueryExpression*>
	}

	namespace n_UControlRig { // : UObject
		constexpr auto ExecutionType = 0x45; // ERigExecutionType
		constexpr auto VM = 0x48; // URigVM*
		constexpr auto Hierarchy = 0x50; // FRigHierarchyContainer
		constexpr auto GizmoLibrary = 0x3b8; // TSoftObjectPtr<UControlRigGizmoLibrary>
		constexpr auto InputProperties = 0x3f0; // TMap<FName, FCachedPropertyPath>
		constexpr auto OutputProperties = 0x440; // TMap<FName, FCachedPropertyPath>
		constexpr auto DrawContainer = 0x490; // FControlRigDrawContainer
		constexpr auto DataSourceRegistry = 0x4c0; // UAnimationDataSourceRegistry*
		constexpr auto EventQueue = 0x4c8; // TArray<FName>
		constexpr auto Influences = 0x550; // FRigInfluenceMapPerEvent
		constexpr auto InteractionRig = 0x5b0; // UControlRig*
		constexpr auto InteractionRigClass = 0x5b8; // UControlRig*
		constexpr auto AssetUserData = 0x5c0; // TArray<UAssetUserData*>
	}

	namespace n_ALight { // : AActor
		constexpr auto LightComponent = 0x220; // ULightComponent*
		constexpr auto bEnabled = 0x228; // char : 1
	}

	namespace n_UMaterialExpressionStaticSwitch { // : UMaterialExpression
		constexpr auto DefaultValue = 0x40; // char : 1
		constexpr auto A = 0x44; // FExpressionInput
		constexpr auto B = 0x58; // FExpressionInput
		constexpr auto Value = 0x6c; // FExpressionInput
	}

	namespace n_UInAppPurchaseQueryCallbackProxy { // : UObject
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UBlackboardKeyType_NativeEnum { // : UBlackboardKeyType
		constexpr auto EnumName = 0x30; // FString
		constexpr auto EnumType = 0x40; // UEnum*
	}

	namespace n_UWaterWavesAsset { // : UObject
		constexpr auto WaterWaves = 0x28; // UWaterWaves*
	}

	namespace n_UMOJournal { // : UMOUserWidget
		constexpr auto pJournalEntriesPanel = 0x2c8; // UMOJournalEntriesPanel*
		constexpr auto pJournalNotesPanel = 0x2d0; // UMOJournalNotesPanel*
		constexpr auto pMOButton_Close = 0x2d8; // UMOButtonClose*
		constexpr auto vPanels = 0x2e0; // TArray<UMOJournalPanel*>
		constexpr auto vTabButtons = 0x2f0; // TArray<UMOUserWidgetTabButtonNew*>
		constexpr auto pMOTabButton_Entries = 0x300; // UMOUserWidgetTabButtonNew*
		constexpr auto pMOTabButton_Notes = 0x308; // UMOUserWidgetTabButtonNew*
	}

	namespace n_ABP_AiEffectArrow_C { // : AMOAiEffectActor
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
	}

	namespace n_UVariantObjectBinding { // : UObject
		constexpr auto CachedActorLabel = 0x28; // FString
		constexpr auto ObjectPtr = 0x38; // FSoftObjectPath
		constexpr auto LazyObjectPtr = 0x50; // LazyObjectProperty
		constexpr auto CapturedProperties = 0x70; // TArray<UPropertyValue*>
		constexpr auto FunctionCallers = 0x80; // TArray<FFunctionCaller>
	}

	namespace n_AProceduralFoliageBlockingVolume { // : AVolume
		constexpr auto ProceduralFoliageVolume = 0x258; // AProceduralFoliageVolume*
	}

	namespace n_UGizmoConstantAxisSource { // : UObject
		constexpr auto Origin = 0x30; // FVector
		constexpr auto Direction = 0x3c; // FVector
	}

	namespace n_AMOCharacterCollisionPoolSubsystemActor { // : AActor
		constexpr auto bIsEditorPreview = 0x220; // bool
		constexpr auto bHasPlayerPosition = 0x221; // bool
		constexpr auto LastKnownPlayerPosition = 0x224; // FVector
		constexpr auto PoolGrowAmount = 0x230; // int32_t
		constexpr auto TickId = 0x234; // int32_t
		constexpr auto RegisteredCharacters = 0x238; // TArray<AMOCharacter*>
		constexpr auto AvailableSphereShapes = 0x248; // TArray<USphereComponent*>
		constexpr auto AvailableCapsuleShapes = 0x258; // TArray<UCapsuleComponent*>
	}

	namespace n_UMaterialExpressionSubtract { // : UMaterialExpression
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_UMOCheckBoxQuest { // : UMOUserWidget
		constexpr auto pMOCheckBox = 0x2c8; // UMOCheckBox*
		constexpr auto pTextBlockSign = 0x2d0; // UTextBlock*
		constexpr auto pColorImage = 0x2d8; // UImage*
		constexpr auto pImageBG = 0x2e0; // UImage*
	}

	namespace n_UPhysicsSettings { // : UPhysicsSettingsCore
		constexpr auto PhysicErrorCorrection = 0xe0; // FRigidBodyErrorCorrection
		constexpr auto LockedAxis = 0x114; // ESettingsLockedAxis
		constexpr auto DefaultDegreesOfFreedom = 0x115; // ESettingsDOF
		constexpr auto bSuppressFaceRemapTable = 0x116; // bool
		constexpr auto bSupportUVFromHitResults = 0x117; // bool
		constexpr auto bDisableActiveActors = 0x118; // bool
		constexpr auto bDisableKinematicStaticPairs = 0x119; // bool
		constexpr auto bDisableKinematicKinematicPairs = 0x11a; // bool
		constexpr auto bDisableCCD = 0x11b; // bool
		constexpr auto bEnableEnhancedDeterminism = 0x11c; // bool
		constexpr auto AnimPhysicsMinDeltaTime = 0x120; // float
		constexpr auto bSimulateAnimPhysicsAfterReset = 0x124; // bool
		constexpr auto MaxPhysicsDeltaTime = 0x128; // float
		constexpr auto bSubstepping = 0x12c; // bool
		constexpr auto bSubsteppingAsync = 0x12d; // bool
		constexpr auto MaxSubstepDeltaTime = 0x130; // float
		constexpr auto MaxSubsteps = 0x134; // int32_t
		constexpr auto SyncSceneSmoothingFactor = 0x138; // float
		constexpr auto InitialAverageFrameRate = 0x13c; // float
		constexpr auto PhysXTreeRebuildRate = 0x140; // int32_t
		constexpr auto PhysicalSurfaces = 0x148; // TArray<FPhysicalSurfaceName>
		constexpr auto DefaultBroadphaseSettings = 0x158; // FBroadphaseSettings
		constexpr auto MinDeltaVelocityForHitEvents = 0x198; // float
		constexpr auto ChaosSettings = 0x19c; // FChaosPhysicsSettings
	}

	namespace n_UNavLinkDefinition { // : UObject
		constexpr auto Links = 0x28; // TArray<FNavigationLink>
		constexpr auto SegmentLinks = 0x38; // TArray<FNavigationSegmentLink>
	}

	namespace n_UParticleModuleCollisionGPU { // : UParticleModuleCollisionBase
		constexpr auto Resilience = 0x30; // FRawDistributionFloat
		constexpr auto ResilienceScaleOverLife = 0x60; // FRawDistributionFloat
		constexpr auto Friction = 0x90; // float
		constexpr auto RandomSpread = 0x94; // float
		constexpr auto RandomDistribution = 0x98; // float
		constexpr auto RadiusScale = 0x9c; // float
		constexpr auto RadiusBias = 0xa0; // float
		constexpr auto Response = 0xa4; // EParticleCollisionResponse
		constexpr auto CollisionMode = 0xa5; // EParticleCollisionMode
	}

	namespace n_UNiagaraPreviewAxis_InterpParamVector4 { // : UNiagaraPreviewAxis_InterpParamBase
		constexpr auto Min = 0x40; // FVector4
		constexpr auto Max = 0x50; // FVector4
	}

	namespace n_UMovieSceneCinematicShotSection { // : UMovieSceneSubSection
		constexpr auto ShotDisplayName = 0x160; // FString
		constexpr auto DisplayName = 0x170; // FText
	}

	namespace n_UBP_ClientEffect_AlvarinZoom_C { // : UMOClientEffectAlvarinZoom
		constexpr auto UberGraphFrame = 0x78; // FPointerToUberGraphFrame
		constexpr auto pPreviousPostProcessSettings = 0x80; // FPostProcessSettings
	}

	namespace n_UParticleModuleLocationPrimitiveTriangle { // : UParticleModuleLocationBase
		constexpr auto StartOffset = 0x30; // FRawDistributionVector
		constexpr auto Height = 0x78; // FRawDistributionFloat
		constexpr auto Angle = 0xa8; // FRawDistributionFloat
		constexpr auto Thickness = 0xd8; // FRawDistributionFloat
	}

	namespace n_UNiagaraDataInterfaceGrid2DCollectionReader { // : UNiagaraDataInterfaceGrid2D
		constexpr auto EmitterName = 0xf8; // FString
		constexpr auto DIName = 0x108; // FString
	}

	namespace n_UMOBodyManagerComponent { // : UActorComponent
		constexpr auto BodyFurMesh = 0xb0; // UGFurComponent*
		constexpr auto HeadFurMesh = 0xb8; // UGFurComponent*
		constexpr auto EtherParticlesComponent = 0xc0; // UNiagaraComponent*
		constexpr auto pBodyComponentMID = 0xc8; // UMaterialInstanceDynamic*
		constexpr auto pHeadComponentMID = 0xd0; // UMaterialInstanceDynamic*
		constexpr auto pEyesComponentMID = 0xd8; // UMaterialInstanceDynamic*
		constexpr auto pEyesAOComponentMID = 0xe0; // UMaterialInstanceDynamic*
		constexpr auto pHairComponentMID = 0xe8; // UMaterialInstanceDynamic*
		constexpr auto pBeardComponentMID = 0xf0; // UMaterialInstanceDynamic*
		constexpr auto pHeadFurMID = 0xf8; // UMaterialInstanceDynamic*
		constexpr auto pBodyFurMID = 0x100; // UMaterialInstanceDynamic*
		constexpr auto OnPlayerDefinitionChanged = 0x108; // FMulticastInlineDelegate
		constexpr auto pHairComponent = 0x118; // USkeletalMeshComponent*
		constexpr auto pBeardComponent = 0x120; // USkeletalMeshComponent*
		constexpr auto pHeadComponent = 0x128; // USkeletalMeshComponent*
		constexpr auto pBodyComponent = 0x130; // USkeletalMeshComponent*
		constexpr auto bIsPaperdoll = 0x138; // bool
		constexpr auto bIsUndead = 0x139; // bool
		constexpr auto bUseEtherworldAppearance = 0x13a; // bool
		constexpr auto sCharacterBodyData = 0x140; // FMOCharacterBodyData
		constexpr auto sCharacterDecorationData = 0x170; // FMOCharacterDecorationData
		constexpr auto sFaceCustomizationData = 0x1b8; // FMOCharacterFaceCustomizationData
		constexpr auto ActivePlayerDefinition = 0x1c8; // UMODataAssetPlayerBaseDefinition*
		constexpr auto ActiveHairDefinition = 0x1d0; // UMODataAssetHair*
		constexpr auto ActiveBeardDefinition = 0x1d8; // UMODataAssetHair*
		constexpr auto ActiveFaceTattooDefinition = 0x1e0; // UMODataAssetTattoo*
		constexpr auto ActiveBodyTattooDefinition = 0x1e8; // UMODataAssetTattoo*
	}

	namespace n_UMovieSceneSubTrack { // : UMovieSceneNameableTrack
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_ACameraRig_Rail { // : AActor
		constexpr auto CurrentPositionOnRail = 0x220; // float
		constexpr auto bLockOrientationToRail = 0x224; // bool
		constexpr auto TransformComponent = 0x228; // USceneComponent*
		constexpr auto RailSplineComponent = 0x230; // USplineComponent*
		constexpr auto RailCameraMount = 0x238; // USceneComponent*
	}

	namespace n_UMOGameUserSettings { // : UGameUserSettings
		constexpr auto LastKnownVOIPInputDeviceID = 0x120; // int32_t
		constexpr auto LastKnownVOIPInputDeviceName = 0x128; // FString
		constexpr auto LastKnownVOIPOutputDeviceID = 0x138; // int32_t
		constexpr auto LastKnownVOIPOutputDeviceName = 0x140; // FString
		constexpr auto fVoipVoiceActivateThreshold = 0x150; // float
		constexpr auto OnVoipVoiceActivateThresholdChanged = 0x158; // FMulticastInlineDelegate
		constexpr auto OnVoipInputChanged = 0x168; // FMulticastInlineDelegate
		constexpr auto OnVoipOutputChanged = 0x178; // FMulticastInlineDelegate
		constexpr auto bWasEverInitialized_Audio = 0x188; // bool
		constexpr auto bWasEverInitialized_Video = 0x189; // bool
		constexpr auto bWasEverInitialized_Keybinds = 0x18a; // bool
		constexpr auto bWasEverInitialized_Chat = 0x18b; // bool
		constexpr auto bWasEverInitialized_UI = 0x18c; // bool
		constexpr auto bWasEverInitialized_Gameplay = 0x18d; // bool
		constexpr auto fMasterVol = 0x190; // float
		constexpr auto fMusicVol = 0x19c; // float
		constexpr auto fInterfaceVol = 0x1a8; // float
		constexpr auto fVoiceMasterVol = 0x1b4; // float
		constexpr auto bVoiceChat = 0x1c0; // bool
		constexpr auto bVoiceActivation = 0x1c3; // bool
		constexpr auto bGore = 0x1c6; // bool
		constexpr auto bFullNudity = 0x1c9; // bool
		constexpr auto bMotionBlur = 0x1cc; // bool
		constexpr auto bYConstrainedFieldOfView = 0x1d1; // bool
		constexpr auto bUseMultithreadedRendering = 0x1d4; // bool
		constexpr auto bUseCharacterDistanceCPUOptimization = 0x1d7; // bool
		constexpr auto iPostProcessingQuality = 0x1ec; // int32_t
		constexpr auto iDLSSQuality = 0x208; // int32_t
		constexpr auto fResolutionScale = 0x23c; // float
		constexpr auto fFieldOfView = 0x248; // float
		constexpr auto fViewDistance = 0x254; // float
		constexpr auto bPaperdollShouldRender = 0x264; // bool
		constexpr auto bShowFPSCounter = 0x265; // bool
		constexpr auto vKeybindOverrides = 0x268; // TArray<FMOKeybindSelectStruct>
		constexpr auto vSavedKeybindOverrides = 0x278; // TArray<FMOKeybindSelectStruct>
		constexpr auto chatSize = 0x288; // FVector2D
		constexpr auto chatPos = 0x290; // FVector2D
		constexpr auto vChatPopUps = 0x298; // TArray<bool>
		constexpr auto vSavedChatPopUps = 0x2a8; // TArray<bool>
		constexpr auto vDefaultChatPopUps = 0x2b8; // TArray<bool>
		constexpr auto bDisableHelpChat = 0x2c8; // bool
		constexpr auto bSavedDisableHelpChat = 0x2c9; // bool
		constexpr auto vChatColors = 0x2d8; // TArray<FColor>
		constexpr auto vSavedChatColors = 0x2e8; // TArray<FColor>
		constexpr auto vDefaultChatColors = 0x2f8; // TArray<FColor>
		constexpr auto vNonModifiableChatColors = 0x308; // TArray<FColor>
		constexpr auto vUICheckBoxes = 0x360; // TArray<bool>
		constexpr auto vSavedUICheckBoxes = 0x370; // TArray<bool>
		constexpr auto vDefaultUICheckBoxes = 0x380; // TArray<bool>
		constexpr auto vUIComboBoxes = 0x398; // TArray<int32_t>
		constexpr auto vSavedUIComboBoxes = 0x3a8; // TArray<int32_t>
		constexpr auto vDefaultUIComboBoxes = 0x3b8; // TArray<int32_t>
		constexpr auto vUISliders = 0x3d0; // TArray<float>
		constexpr auto vSavedUISliders = 0x3e0; // TArray<float>
		constexpr auto vDefaultUISliders = 0x3f0; // TArray<float>
		constexpr auto vGameplayCheckBoxes = 0x418; // TArray<bool>
		constexpr auto vSavedGameplayCheckBoxes = 0x428; // TArray<bool>
		constexpr auto vDefaultGameplayCheckBoxes = 0x438; // TArray<bool>
		constexpr auto vGameplayComboBoxes = 0x450; // TArray<int32_t>
		constexpr auto vSavedGameplayComboBoxes = 0x460; // TArray<int32_t>
		constexpr auto vDefaultGameplayComboBoxes = 0x470; // TArray<int32_t>
		constexpr auto vGameplaySliders = 0x488; // TArray<float>
		constexpr auto vSavedGameplaySliders = 0x498; // TArray<float>
		constexpr auto vDefaultGameplaySliders = 0x4a8; // TArray<float>
		constexpr auto sSavedLanguage = 0x4c8; // FString
		constexpr auto vHints = 0x4e8; // TMap<EHint, FMOHintDefinitions>
		constexpr auto vSavedHints = 0x538; // TMap<EHint, FMOHintDefinitions>
		constexpr auto vBlockedVoipPlayersThroughSteamID = 0x588; // TMap<FString, FString>
		constexpr auto vBlockedVoipPlayersThroughDisplayName = 0x5d8; // TMap<FString, FString>
	}

	namespace n_UNiagaraDataInterfaceGrid3DCollection { // : UNiagaraDataInterfaceGrid3D
		constexpr auto NumAttributes = 0x100; // int32_t
		constexpr auto RenderTargetUserParameter = 0x108; // FNiagaraUserParameterBinding
		constexpr auto BufferFormat = 0x128; // ENiagaraGpuBufferFormat
	}

	namespace n_UMaterialExpressionDistanceFieldGradient { // : UMaterialExpression
		constexpr auto Position = 0x40; // FExpressionInput
	}

	namespace n_UMOHavenCitySelect { // : UMOUserWidget
		constexpr auto pMOCarousel_MyrlandCitySelect = 0x2c8; // UMOCarouselSelectText*
		constexpr auto pMOCurrencyWidget = 0x2d0; // UMOCurrencyWidget*
		constexpr auto pMOButtonHold_ConfirmCity = 0x2d8; // UMOButtonHold*
		constexpr auto pTextBlock_TitleName = 0x2e0; // UTextBlock*
		constexpr auto pTextBlock_TotalItems = 0x2e8; // UTextBlock*
		constexpr auto pTextBlock_Warning = 0x2f0; // UTextBlock*
		constexpr auto pTextBlock_PlaceItems = 0x2f8; // UTextBlock*
		constexpr auto pTextBlock_CityText = 0x300; // UTextBlock*
		constexpr auto pTextBlock_CityText2 = 0x308; // UTextBlock*
		constexpr auto pImage_City = 0x310; // UImage*
		constexpr auto pVerticalBox_PlaceItems = 0x318; // UVerticalBox*
		constexpr auto pMOBorder = 0x320; // UMOBorderHeaderTabs*
		constexpr auto pMOScrollBox_ItemsToBring = 0x328; // UMOScrollBoxPlaceItems*
		constexpr auto pPopupWarning = 0x330; // UMOPopupMessage*
		constexpr auto pPopupBGBlur = 0x338; // UBackgroundBlur*
		constexpr auto sFailReason = 0x340; // FString
		constexpr auto vCityTextures = 0x350; // TArray<UTexture2D*>
		constexpr auto vCityTexts = 0x360; // TArray<FString>
	}

	namespace n_USubmixEffectStereoDelayPreset { // : USoundEffectSubmixPreset
		constexpr auto Settings = 0xb4; // FSubmixEffectStereoDelaySettings
	}

	namespace n_UNetDriver { // : UObject
		constexpr auto NetConnectionClassName = 0x30; // FString
		constexpr auto ReplicationDriverClassName = 0x40; // FString
		constexpr auto MaxDownloadSize = 0x50; // int32_t
		constexpr auto bClampListenServerTickRate = 0x54; // char : 1
		constexpr auto NetServerMaxTickRate = 0x58; // int32_t
		constexpr auto MaxNetTickRate = 0x5c; // int32_t
		constexpr auto MaxInternetClientRate = 0x60; // int32_t
		constexpr auto MaxClientRate = 0x64; // int32_t
		constexpr auto ServerTravelPause = 0x68; // float
		constexpr auto SpawnPrioritySeconds = 0x6c; // float
		constexpr auto RelevantTimeout = 0x70; // float
		constexpr auto KeepAliveTime = 0x74; // float
		constexpr auto InitialConnectTimeout = 0x78; // float
		constexpr auto ConnectionTimeout = 0x7c; // float
		constexpr auto TimeoutMultiplierForUnoptimizedBuilds = 0x80; // float
		constexpr auto bNoTimeouts = 0x84; // bool
		constexpr auto bNeverApplyNetworkEmulationSettings = 0x85; // bool
		constexpr auto ServerConnection = 0x88; // UNetConnection*
		constexpr auto ClientConnections = 0x90; // TArray<UNetConnection*>
		constexpr auto RecentlyDisconnectedTrackingTime = 0x100; // int32_t
		constexpr auto World = 0x140; // UWorld*
		constexpr auto WorldPackage = 0x148; // UPackage*
		constexpr auto NetConnectionClass = 0x170; // UObject*
		constexpr auto ReplicationDriverClass = 0x178; // UObject*
		constexpr auto NetDriverName = 0x190; // FName
		constexpr auto ChannelDefinitions = 0x198; // TArray<FChannelDefinition>
		constexpr auto ChannelDefinitionMap = 0x1a8; // TMap<FName, FChannelDefinition>
		constexpr auto ActorChannelPool = 0x1f8; // TArray<UChannel*>
		constexpr auto Time = 0x210; // float
		constexpr auto ReplicationDriver = 0x6e8; // UReplicationDriver*
	}

	namespace n_UMovieScenePropertySystem { // : UMovieSceneEntitySystem
		constexpr auto InstantiatorSystem = 0x40; // UMovieScenePropertyInstantiatorSystem*
	}

	namespace n_UPanelWidget { // : UWidget
		constexpr auto Slots = 0x108; // TArray<UPanelSlot*>
	}

	namespace n_UAndroidPermissionCallbackProxy { // : UObject
		constexpr auto OnPermissionsGrantedDynamicDelegate = 0x28; // FMulticastInlineDelegate
	}

	namespace n_USourceEffectFoldbackDistortionPreset { // : USoundEffectSourcePreset
		constexpr auto Settings = 0x9c; // FSourceEffectFoldbackDistortionSettings
	}

	namespace n_UMOBrokerPickupItems { // : UMOUserWidget
		constexpr auto pMOButton_Close = 0x2c8; // UMOButton*
		constexpr auto cMOMailItemListEntryClass = 0x2d0; // UMOMailItemListEntry*
		constexpr auto pMOScrollBox_Items = 0x2d8; // UMOScrollBox*
	}

	namespace n_UInterpTrackBoolProp { // : UInterpTrack
		constexpr auto BoolTrack = 0x70; // TArray<FBoolTrackKey>
		constexpr auto PropertyName = 0x80; // FName
	}

	namespace n_UBTDecorator_CompareBBEntries { // : UBTDecorator
		constexpr auto Operator = 0x68; // EBlackBoardEntryComparison
		constexpr auto BlackboardKeyA = 0x70; // FBlackboardKeySelector
		constexpr auto BlackboardKeyB = 0x98; // FBlackboardKeySelector
	}

	namespace n_UWB_MOCharCreationFinalizePanel_C { // : UMOCharCreationFinalizePanel
		constexpr auto UberGraphFrame = 0x318; // FPointerToUberGraphFrame
		constexpr auto pLabelText = 0x320; // UTextBlock*
		constexpr auto pLabelText_2 = 0x328; // UTextBlock*
	}

	namespace n_UInterpTrackInstVectorMaterialParam { // : UInterpTrackInst
		constexpr auto MaterialInstances = 0x28; // TArray<UMaterialInstanceDynamic*>
		constexpr auto ResetVectors = 0x38; // TArray<FVector>
		constexpr auto PrimitiveMaterialRefs = 0x48; // TArray<FPrimitiveMaterialRef>
		constexpr auto InstancedTrack = 0x58; // UInterpTrackVectorMaterialParam*
	}

	namespace n_UParticleModuleParameterDynamic_Seeded { // : UParticleModuleParameterDynamic
		constexpr auto RandomSeedInfo = 0x48; // FParticleRandomSeedInfo
	}

	namespace n_UEnvQueryTest_Pathfinding { // : UEnvQueryTest
		constexpr auto TestMode = 0x1f8; // EEnvTestPathfinding
		constexpr auto Context = 0x200; // UEnvQueryContext*
		constexpr auto PathFromContext = 0x208; // FAIDataProviderBoolValue
		constexpr auto SkipUnreachable = 0x240; // FAIDataProviderBoolValue
		constexpr auto FilterClass = 0x278; // UNavigationQueryFilter*
	}

	namespace n_UInAppPurchaseQueryCallbackProxy2 { // : UObject
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UMOSkills { // : UMOUserWidget
		constexpr auto pSkillTreeAbilities = 0x2c8; // UMOSkillsTree*
		constexpr auto pSkillTreeCrafting = 0x2d0; // UMOSkillsTree*
		constexpr auto pSkillVeteran = 0x2d8; // UMOSkillsVeteran*
	}

	namespace n_UMaterialExpressionLandscapeLayerSample { // : UMaterialExpression
		constexpr auto ParameterName = 0x40; // FName
		constexpr auto PreviewWeight = 0x48; // float
		constexpr auto ExpressionGUID = 0x4c; // FGuid
	}

	namespace n_UWidgetAnimationDelegateBinding { // : UDynamicBlueprintBinding
		constexpr auto WidgetAnimationDelegateBindings = 0x28; // TArray<FBlueprintWidgetAnimationDelegateBinding>
	}

	namespace n_ASceneCaptureCube { // : ASceneCapture
		constexpr auto CaptureComponentCube = 0x230; // USceneCaptureComponentCube*
	}

	namespace n_UWaterSplineMetadata { // : USplineMetadata
		constexpr auto Depth = 0x28; // FInterpCurveFloat
		constexpr auto WaterVelocityScalar = 0x40; // FInterpCurveFloat
		constexpr auto RiverWidth = 0x58; // FInterpCurveFloat
		constexpr auto AudioIntensity = 0x70; // FInterpCurveFloat
		constexpr auto WaterVelocity = 0x88; // FInterpCurveVector
	}

	namespace n_UGraphNodeContextMenuContext { // : UObject
		constexpr auto Blueprint = 0x28; // UBlueprint*
		constexpr auto Graph = 0x30; // UEdGraph*
		constexpr auto Node = 0x38; // UEdGraphNode*
		constexpr auto bIsDebugging = 0x48; // bool
	}

	namespace n_UMaterialExpressionHairAttributes { // : UMaterialExpression
		constexpr auto bUseTangentSpace = 0x40; // char : 1
	}

	namespace n_UAnimBlueprintGeneratedClass { // : UBlueprintGeneratedClass
		constexpr auto BakedStateMachines = 0x330; // TArray<FBakedAnimationStateMachine>
		constexpr auto TargetSkeleton = 0x340; // USkeleton*
		constexpr auto AnimNotifies = 0x348; // TArray<FAnimNotifyEvent>
		constexpr auto OrderedSavedPoseIndicesMap = 0x358; // TMap<FName, FCachedPoseIndices>
		constexpr auto SyncGroupNames = 0x428; // TArray<FName>
		constexpr auto EvaluateGraphExposedInputs = 0x438; // TArray<FExposedValueHandler>
		constexpr auto GraphAssetPlayerInformation = 0x448; // TMap<FName, FGraphAssetPlayerInformation>
		constexpr auto GraphBlendOptions = 0x498; // TMap<FName, FAnimGraphBlendOptions>
		constexpr auto PropertyAccessLibrary = 0x4e8; // FPropertyAccessLibrary
	}

	namespace n_UMODataAssetTattooPlacement { // : UPrimaryDataAsset
		constexpr auto pTattooEffectTextures = 0x30; // UMODataAssetTattooEffectTextures*
		constexpr auto BO_UseUvSet2 = 0x38; // float
		constexpr auto BO_UseUvSet3 = 0x3c; // float
		constexpr auto BO_UDIM_Mask = 0x40; // float
		constexpr auto BO_UDIM_ID = 0x44; // float
		constexpr auto BO_BodyOrnament_Left = 0x48; // float
		constexpr auto BO_BodyOrnament_Right = 0x4c; // float
		constexpr auto BO_CenterFix_X = 0x50; // float
		constexpr auto BO_CenterFix_Y = 0x54; // float
		constexpr auto BO_RotateCenter_X = 0x58; // float
		constexpr auto BO_RotateCenter_Y = 0x5c; // float
		constexpr auto BO_RotateCenter_Rotation = 0x60; // float
		constexpr auto BO_Scale = 0x64; // float
		constexpr auto BO_Scale_X = 0x68; // float
		constexpr auto BO_Scale_Y = 0x6c; // float
		constexpr auto BO_Translation_X = 0x70; // float
		constexpr auto BO_Translation_Y = 0x74; // float
	}

	namespace n_UProceduralFoliageTile { // : UObject
		constexpr auto FoliageSpawner = 0x28; // UProceduralFoliageSpawner*
		constexpr auto InstancesArray = 0xd0; // TArray<FProceduralFoliageInstance>
	}

	namespace n_UNiagaraDataInterfaceSkeletalMesh { // : UNiagaraDataInterface
		constexpr auto SourceMode = 0x38; // ENDISkeletalMesh_SourceMode
		constexpr auto Source = 0x40; // AActor*
		constexpr auto MeshUserParameter = 0x48; // FNiagaraUserParameterBinding
		constexpr auto SourceComponent = 0x68; // USkeletalMeshComponent*
		constexpr auto SkinningMode = 0x70; // ENDISkeletalMesh_SkinningMode
		constexpr auto SamplingRegions = 0x78; // TArray<FName>
		constexpr auto WholeMeshLOD = 0x88; // int32_t
		constexpr auto FilteredBones = 0x90; // TArray<FName>
		constexpr auto FilteredSockets = 0xa0; // TArray<FName>
		constexpr auto ExcludeBoneName = 0xb0; // FName
		constexpr auto bExcludeBone = 0xb8; // char : 1
		constexpr auto bRequireCurrentFrameData = 0xb9; // bool
	}

	namespace n_UMovieSceneTakeSection { // : UMovieSceneSection
		constexpr auto HoursCurve = 0xe8; // FMovieSceneIntegerChannel
		constexpr auto MinutesCurve = 0x178; // FMovieSceneIntegerChannel
		constexpr auto SecondsCurve = 0x208; // FMovieSceneIntegerChannel
		constexpr auto FramesCurve = 0x298; // FMovieSceneIntegerChannel
		constexpr auto SubFramesCurve = 0x328; // FMovieSceneFloatChannel
		constexpr auto Slate = 0x3c8; // FMovieSceneStringChannel
	}

	namespace n_UNiagaraMeshRendererProperties { // : UNiagaraRendererProperties
		constexpr auto ParticleMesh = 0x80; // UStaticMesh*
		constexpr auto SortMode = 0x88; // ENiagaraSortMode
		constexpr auto bOverrideMaterials = 0x8c; // char : 1
		constexpr auto bSortOnlyWhenTranslucent = 0x8c; // char : 1
		constexpr auto OverrideMaterials = 0x90; // TArray<FNiagaraMeshMaterialOverride>
		constexpr auto SubImageSize = 0xa0; // FVector2D
		constexpr auto bSubImageBlend = 0xa8; // char : 1
		constexpr auto FacingMode = 0xac; // ENiagaraMeshFacingMode
		constexpr auto bLockedAxisEnable = 0xb0; // char : 1
		constexpr auto LockedAxis = 0xb4; // FVector
		constexpr auto LockedAxisSpace = 0xc0; // ENiagaraMeshLockedAxisSpace
		constexpr auto PivotOffset = 0xc4; // FVector
		constexpr auto PivotOffsetSpace = 0xd0; // ENiagaraMeshPivotOffsetSpace
		constexpr auto bEnableFrustumCulling = 0xd4; // char : 1
		constexpr auto bEnableCameraDistanceCulling = 0xd4; // char : 1
		constexpr auto MinCameraDistance = 0xd8; // float
		constexpr auto MaxCameraDistance = 0xdc; // float
		constexpr auto RendererVisibility = 0xe0; // uint32_t
		constexpr auto PositionBinding = 0xe8; // FNiagaraVariableAttributeBinding
		constexpr auto ColorBinding = 0x140; // FNiagaraVariableAttributeBinding
		constexpr auto VelocityBinding = 0x198; // FNiagaraVariableAttributeBinding
		constexpr auto MeshOrientationBinding = 0x1f0; // FNiagaraVariableAttributeBinding
		constexpr auto ScaleBinding = 0x248; // FNiagaraVariableAttributeBinding
		constexpr auto SubImageIndexBinding = 0x2a0; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterialBinding = 0x2f8; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial1Binding = 0x350; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial2Binding = 0x3a8; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial3Binding = 0x400; // FNiagaraVariableAttributeBinding
		constexpr auto MaterialRandomBinding = 0x458; // FNiagaraVariableAttributeBinding
		constexpr auto CustomSortingBinding = 0x4b0; // FNiagaraVariableAttributeBinding
		constexpr auto NormalizedAgeBinding = 0x508; // FNiagaraVariableAttributeBinding
		constexpr auto CameraOffsetBinding = 0x560; // FNiagaraVariableAttributeBinding
		constexpr auto RendererVisibilityTagBinding = 0x5b8; // FNiagaraVariableAttributeBinding
	}

	namespace n_UWB_TooltipSpell_C { // : UMOTooltipSpell
		constexpr auto CanvasPanel_1 = 0x290; // UCanvasPanel*
		constexpr auto Image_Line = 0x298; // UImage*
		constexpr auto TextBlock_1 = 0x2a0; // UTextBlock*
		constexpr auto WeightText = 0x2a8; // UTextBlock*
	}

	namespace n_UGizmoLineHandleComponent { // : UGizmoBaseComponent
		constexpr auto Normal = 0x460; // FVector
		constexpr auto HandleSize = 0x46c; // float
		constexpr auto Thickness = 0x470; // float
		constexpr auto Direction = 0x474; // FVector
		constexpr auto Length = 0x480; // float
		constexpr auto bImageScale = 0x484; // bool
	}

	namespace n_UARPin { // : UObject
		constexpr auto TrackedGeometry = 0x28; // UARTrackedGeometry*
		constexpr auto PinnedComponent = 0x30; // USceneComponent*
		constexpr auto LocalToTrackingTransform = 0x40; // FTransform
		constexpr auto LocalToAlignedTrackingTransform = 0x70; // FTransform
		constexpr auto TrackingState = 0xa0; // EARTrackingState
		constexpr auto OnARTrackingStateChanged = 0xc0; // FMulticastInlineDelegate
		constexpr auto OnARTransformUpdated = 0xd0; // FMulticastInlineDelegate
	}

	namespace n_UPartyBeaconState { // : UObject
		constexpr auto SessionName = 0x28; // FName
		constexpr auto NumConsumedReservations = 0x30; // int32_t
		constexpr auto MaxReservations = 0x34; // int32_t
		constexpr auto NumTeams = 0x38; // int32_t
		constexpr auto NumPlayersPerTeam = 0x3c; // int32_t
		constexpr auto TeamAssignmentMethod = 0x40; // FName
		constexpr auto ReservedHostTeamNum = 0x48; // int32_t
		constexpr auto ForceTeamNum = 0x4c; // int32_t
		constexpr auto bRestrictCrossConsole = 0x50; // bool
		constexpr auto bEnableRemovalRequests = 0x51; // bool
		constexpr auto Reservations = 0x58; // TArray<FPartyReservation>
	}

	namespace n_UMOButtonSkill { // : UMOButton
		constexpr auto sReqData = 0x438; // FRequiredSkillData
		constexpr auto sOptData = 0x488; // FOptionalSkillData
		constexpr auto pMaterialInstance = 0x4d8; // UMaterialInstanceDynamic*
	}

	namespace n_UBookMark2D { // : UBookmarkBase
		constexpr auto Zoom2D = 0x28; // float
		constexpr auto Location = 0x2c; // FIntPoint
	}

	namespace n_AMOAvatarStaticMeshBuildableHouse { // : AMOAvatarStaticMeshBuildable
		constexpr auto pDoorComponent = 0x2f8; // UStaticMeshComponent*
		constexpr auto pChestComponent = 0x300; // UStaticMeshComponent*
		constexpr auto iNumberOfFloors = 0x308; // int32_t
		constexpr auto bIsLastFloorRoof = 0x30c; // bool
		constexpr auto fCeilingHeight = 0x318; // float
		constexpr auto fFloorZBaseOffset = 0x31c; // float
		constexpr auto iMaxNumDecorationsPerFloor = 0x334; // int32_t
	}

	namespace n_ULightmassPrimitiveSettingsObject { // : UObject
		constexpr auto LightmassSettings = 0x28; // FLightmassPrimitiveSettings
	}

	namespace n_UPhysicalMaterialMask { // : UObject
		constexpr auto UVChannelIndex = 0x28; // int32_t
		constexpr auto AddressX = 0x2c; // TextureAddress
		constexpr auto AddressY = 0x2d; // TextureAddress
	}

	namespace n_UPhysicsHandleComponent { // : UActorComponent
		constexpr auto GrabbedComponent = 0xb0; // UPrimitiveComponent*
		constexpr auto bSoftAngularConstraint = 0xc0; // char : 1
		constexpr auto bSoftLinearConstraint = 0xc0; // char : 1
		constexpr auto bInterpolateTarget = 0xc0; // char : 1
		constexpr auto LinearDamping = 0xc4; // float
		constexpr auto LinearStiffness = 0xc8; // float
		constexpr auto AngularDamping = 0xcc; // float
		constexpr auto AngularStiffness = 0xd0; // float
		constexpr auto InterpolationSpeed = 0x140; // float
	}

	namespace n_ANiagaraPreviewGrid { // : AActor
		constexpr auto System = 0x220; // UNiagaraSystem*
		constexpr auto ResetMode = 0x228; // ENiagaraPreviewGridResetMode
		constexpr auto PreviewAxisX = 0x230; // UNiagaraPreviewAxis*
		constexpr auto PreviewAxisY = 0x238; // UNiagaraPreviewAxis*
		constexpr auto PreviewClass = 0x240; // ANiagaraPreviewBase*
		constexpr auto SpacingX = 0x248; // float
		constexpr auto SpacingY = 0x24c; // float
		constexpr auto NumX = 0x250; // int32_t
		constexpr auto NumY = 0x254; // int32_t
		constexpr auto PreviewComponents = 0x258; // TArray<UChildActorComponent*>
	}

	namespace n_UEdGraphNode_Documentation { // : UEdGraphNode
		constexpr auto Link = 0x98; // FString
		constexpr auto Excerpt = 0xa8; // FString
	}

	namespace n_UMaterialExpressionParameter { // : UMaterialExpression
		constexpr auto ParameterName = 0x40; // FName
		constexpr auto ExpressionGUID = 0x48; // FGuid
	}

	namespace n_UMOPreviewModeAI { // : UMOPreviewMode
		constexpr auto pTargetAvatar = 0x50; // AMOCharacterAI*
	}

	namespace n_UMOOptionSliderWidget { // : UMOOptionsEntry
		constexpr auto pMOSlider = 0x328; // UMOSlider*
	}

	namespace n_UDatasmithCommonTessellationOptions { // : UDatasmithOptionsBase
		constexpr auto Options = 0x28; // FDatasmithTessellationOptions
	}

	namespace n_UGameplayTagsDeveloperSettings { // : UDeveloperSettings
		constexpr auto DeveloperConfigName = 0x38; // FString
		constexpr auto FavoriteTagSource = 0x48; // FName
	}

	namespace n_UBoxReflectionCaptureComponent { // : UReflectionCaptureComponent
		constexpr auto BoxTransitionDistance = 0x270; // float
		constexpr auto PreviewInfluenceBox = 0x278; // UBoxComponent*
		constexpr auto PreviewCaptureBox = 0x280; // UBoxComponent*
	}

	namespace n_UBTDecorator_IsAtLocation { // : UBTDecorator_BlackboardBase
		constexpr auto AcceptableRadius = 0x90; // float
		constexpr auto ParametrizedAcceptableRadius = 0x98; // FAIDataProviderFloatValue
		constexpr auto GeometricDistanceType = 0xd0; // FAIDistanceType
		constexpr auto bUseParametrizedRadius = 0xd4; // char : 1
		constexpr auto bUseNavAgentGoalLocation = 0xd4; // char : 1
		constexpr auto bPathFindingBasedTest = 0xd4; // char : 1
	}

	namespace n_UBehaviorTree { // : UObject
		constexpr auto RootNode = 0x30; // UBTCompositeNode*
		constexpr auto BlackboardAsset = 0x38; // UBlackboardData*
		constexpr auto RootDecorators = 0x40; // TArray<UBTDecorator*>
		constexpr auto RootDecoratorOps = 0x50; // TArray<FBTDecoratorLogic>
	}

	namespace n_UBackgroundBlurSlot { // : UPanelSlot
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UInterpTrackToggle { // : UInterpTrack
		constexpr auto ToggleTrack = 0x70; // TArray<FToggleTrackKey>
		constexpr auto bActivateSystemEachUpdate = 0x80; // char : 1
		constexpr auto bActivateWithJustAttachedFlag = 0x80; // char : 1
		constexpr auto bFireEventsWhenForwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenJumpingForwards = 0x80; // char : 1
	}

	namespace n_UDatasmithLightComponentTemplate { // : UDatasmithObjectTemplate
		constexpr auto bVisible = 0x30; // char : 1
		constexpr auto CastShadows = 0x34; // char : 1
		constexpr auto bUseTemperature = 0x34; // char : 1
		constexpr auto bUseIESBrightness = 0x34; // char : 1
		constexpr auto Intensity = 0x38; // float
		constexpr auto Temperature = 0x3c; // float
		constexpr auto IESBrightnessScale = 0x40; // float
		constexpr auto LightColor = 0x44; // FLinearColor
		constexpr auto LightFunctionMaterial = 0x58; // UMaterialInterface*
		constexpr auto IESTexture = 0x60; // UTextureLightProfile*
	}

	namespace n_UParticleModuleEventReceiverBase { // : UParticleModuleEventBase
		constexpr auto EventGeneratorType = 0x30; // EParticleEventType
		constexpr auto EventName = 0x34; // FName
	}

	namespace n_UMOSocialGuild { // : UMOWidgetBlueprint
		constexpr auto pGuildStoneMembers = 0x260; // UMOGuildStoneMembers*
	}

	namespace n_UGeometryCacheTrack_FlipbookAnimation { // : UGeometryCacheTrack
		constexpr auto NumMeshSamples = 0x58; // uint32_t
	}

	namespace n_UNiagaraDataInterfaceGrid2DCollection { // : UNiagaraDataInterfaceGrid2D
		constexpr auto RenderTargetUserParameter = 0xf8; // FNiagaraUserParameterBinding
		constexpr auto OverrideBufferFormat = 0x118; // ENiagaraGpuBufferFormat
		constexpr auto bOverrideFormat = 0x119; // char : 1
		constexpr auto ManagedRenderTargets = 0x170; // TMap<uint64_t, UTextureRenderTarget2DArray*>
	}

	namespace n_UScrollBar { // : UWidget
		constexpr auto WidgetStyle = 0x108; // FScrollBarStyle
		constexpr auto Style = 0x5d8; // USlateWidgetStyleAsset*
		constexpr auto bAlwaysShowScrollbar = 0x5e0; // bool
		constexpr auto bAlwaysShowScrollbarTrack = 0x5e1; // bool
		constexpr auto Orientation = 0x5e2; // EOrientation
		constexpr auto Thickness = 0x5e4; // FVector2D
		constexpr auto Padding = 0x5ec; // FMargin
	}

	namespace n_USoundSourceBus { // : USoundWave
		constexpr auto SourceBusChannels = 0x370; // ESourceBusChannels
		constexpr auto SourceBusDuration = 0x374; // float
		constexpr auto AudioBus = 0x378; // UAudioBus*
		constexpr auto bAutoDeactivateWhenSilent = 0x380; // char : 1
	}

	namespace n_UMovieSceneBuiltInEasingFunction { // : UObject
		constexpr auto Type = 0x30; // EMovieSceneBuiltInEasing
	}

	namespace n_UWidgetSwitcher { // : UPanelWidget
		constexpr auto ActiveWidgetIndex = 0x120; // int32_t
	}

	namespace n_UDynamicEntryBoxBase { // : UWidget
		constexpr auto EntryBoxType = 0x108; // EDynamicBoxType
		constexpr auto EntrySpacing = 0x10c; // FVector2D
		constexpr auto SpacingPattern = 0x118; // TArray<FVector2D>
		constexpr auto EntrySizeRule = 0x128; // FSlateChildSize
		constexpr auto EntryHorizontalAlignment = 0x130; // EHorizontalAlignment
		constexpr auto EntryVerticalAlignment = 0x131; // EVerticalAlignment
		constexpr auto MaxElementSize = 0x134; // int32_t
		constexpr auto RadialBoxSettings = 0x138; // FRadialBoxSettings
		constexpr auto EntryWidgetPool = 0x158; // FUserWidgetPool
	}

	namespace n_UWB_ItemSlotContainer_C { // : UMOItemSlotContainer
		constexpr auto UberGraphFrame = 0x350; // FPointerToUberGraphFrame
		constexpr auto AnimatCooldown = 0x358; // UWidgetAnimation*
		constexpr auto HighlightItemAnimation = 0x360; // UWidgetAnimation*
		constexpr auto AddItemAnimation = 0x368; // UWidgetAnimation*
		constexpr auto DestroyItemAnimation = 0x370; // UWidgetAnimation*
		constexpr auto pCooldownImageNew = 0x378; // UImage*
		constexpr auto SplitStackRef = 0x380; // UWB_SplitStack_C*
	}

	namespace n_UGizmoAxisTranslationParameterSource { // : UGizmoBaseFloatParameterSource
		constexpr auto AxisSource = 0x90; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0xa0; // TScriptInterface<IGizmoTransformSource>
		constexpr auto Parameter = 0xb0; // float
		constexpr auto LastChange = 0xb4; // FGizmoFloatParameterChange
		constexpr auto CurTranslationAxis = 0xbc; // FVector
		constexpr auto CurTranslationOrigin = 0xc8; // FVector
		constexpr auto InitialTransform = 0xe0; // FTransform
	}

	namespace n_UMODialogSystem { // : UMOUserWidget
		constexpr auto sTextBoxText = 0x2c8; // UTextBlock*
		constexpr auto sNPCName = 0x2d0; // UTextBlock*
		constexpr auto uResponse1 = 0x2d8; // UTextBlock*
		constexpr auto uResponse2 = 0x2e0; // UTextBlock*
		constexpr auto uResponse3 = 0x2e8; // UTextBlock*
		constexpr auto uResponse4 = 0x2f0; // UTextBlock*
		constexpr auto uResponse5 = 0x2f8; // UTextBlock*
		constexpr auto uResponseButton1 = 0x300; // UMOButton*
		constexpr auto uResponseButton2 = 0x308; // UMOButton*
		constexpr auto uResponseButton3 = 0x310; // UMOButton*
		constexpr auto uResponseButton4 = 0x318; // UMOButton*
		constexpr auto uResponseButton5 = 0x320; // UMOButton*
		constexpr auto uQuitResponseButton = 0x328; // UMOButton*
		constexpr auto sGreetingPhrase = 0x330; // FText
		constexpr auto vResponses = 0x348; // TArray<UTextBlock*>
		constexpr auto vResponsesButtons = 0x358; // TArray<UMOButton*>
		constexpr auto pCurrentConversation = 0x368; // UMODataAssetNPCConversation*
		constexpr auto pResetConversation = 0x370; // UMODataAssetNPCConversation*
		constexpr auto pHUD = 0x378; // UMOHUD*
		constexpr auto pOwner = 0x380; // AMOCharacterAI*
		constexpr auto pPlayerController = 0x388; // AMOPlayerController*
	}

	namespace n_UMOCharCreationAttributesPanel { // : UMOCharCreationPanel
		constexpr auto iAttributePoints = 0x2d0; // int32_t
		constexpr auto iAttributePointsGainedFromSize = 0x2d4; // int32_t
		constexpr auto iTotalAttributePoints = 0x2d8; // int32_t
		constexpr auto iStartAttributePoints = 0x2dc; // int32_t
		constexpr auto vAttributeCarousels = 0x2f0; // TArray<UMOCarouselSelectValue*>
		constexpr auto pCarouselSelect_Str = 0x300; // UMOCarouselSelectValue*
		constexpr auto pCarouselSelect_Dex = 0x308; // UMOCarouselSelectValue*
		constexpr auto pCarouselSelect_Con = 0x310; // UMOCarouselSelectValue*
		constexpr auto pCarouselSelect_Int = 0x318; // UMOCarouselSelectValue*
		constexpr auto pCarouselSelect_Psy = 0x320; // UMOCarouselSelectValue*
		constexpr auto pCarouselSelect_Age = 0x328; // UMOCarouselSelectValue*
		constexpr auto pCarouselSelect_Size = 0x330; // UMOCarouselSelectValue*
		constexpr auto pLastUpdatedCarousel = 0x338; // UMOCarouselSelectValue*
		constexpr auto pInfoEntry_AttributePoints = 0x340; // UMOCharCreationInfoEntry*
	}

	namespace n_UInputKeyDelegateBinding { // : UInputDelegateBinding
		constexpr auto InputKeyDelegateBindings = 0x28; // TArray<FBlueprintInputKeyDelegateBinding>
	}

	namespace n_UDataTable { // : UObject
		constexpr auto RowStruct = 0x28; // UScriptStruct*
		constexpr auto bStripFromClientBuilds = 0x80; // char : 1
		constexpr auto bIgnoreExtraFields = 0x80; // char : 1
		constexpr auto bIgnoreMissingFields = 0x80; // char : 1
		constexpr auto ImportKeyField = 0x88; // FString
	}

	namespace n_UAnimNotify_PlayNiagaraEffect { // : UAnimNotify
		constexpr auto Template = 0x38; // UNiagaraSystem*
		constexpr auto LocationOffset = 0x40; // FVector
		constexpr auto RotationOffset = 0x4c; // FRotator
		constexpr auto Scale = 0x58; // FVector
		constexpr auto bAbsoluteScale = 0x64; // bool
		constexpr auto Attached = 0x80; // char : 1
		constexpr auto SocketName = 0x84; // FName
	}

	namespace n_UFindTurnBasedMatchCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UGameUserSettings { // : UObject
		constexpr auto bUseVSync = 0x28; // bool
		constexpr auto bUseDynamicResolution = 0x29; // bool
		constexpr auto ResolutionSizeX = 0x80; // uint32_t
		constexpr auto ResolutionSizeY = 0x84; // uint32_t
		constexpr auto LastUserConfirmedResolutionSizeX = 0x88; // uint32_t
		constexpr auto LastUserConfirmedResolutionSizeY = 0x8c; // uint32_t
		constexpr auto WindowPosX = 0x90; // int32_t
		constexpr auto WindowPosY = 0x94; // int32_t
		constexpr auto FullscreenMode = 0x98; // int32_t
		constexpr auto LastConfirmedFullscreenMode = 0x9c; // int32_t
		constexpr auto PreferredFullscreenMode = 0xa0; // int32_t
		constexpr auto Version = 0xa4; // uint32_t
		constexpr auto AudioQualityLevel = 0xa8; // int32_t
		constexpr auto LastConfirmedAudioQualityLevel = 0xac; // int32_t
		constexpr auto FrameRateLimit = 0xb0; // float
		constexpr auto DesiredScreenWidth = 0xb8; // int32_t
		constexpr auto bUseDesiredScreenHeight = 0xbc; // bool
		constexpr auto DesiredScreenHeight = 0xc0; // int32_t
		constexpr auto LastUserConfirmedDesiredScreenWidth = 0xc4; // int32_t
		constexpr auto LastUserConfirmedDesiredScreenHeight = 0xc8; // int32_t
		constexpr auto LastRecommendedScreenWidth = 0xcc; // float
		constexpr auto LastRecommendedScreenHeight = 0xd0; // float
		constexpr auto LastCPUBenchmarkResult = 0xd4; // float
		constexpr auto LastGPUBenchmarkResult = 0xd8; // float
		constexpr auto LastCPUBenchmarkSteps = 0xe0; // TArray<float>
		constexpr auto LastGPUBenchmarkSteps = 0xf0; // TArray<float>
		constexpr auto LastGPUBenchmarkMultiplier = 0x100; // float
		constexpr auto bUseHDRDisplayOutput = 0x104; // bool
		constexpr auto HDRDisplayOutputNits = 0x108; // int32_t
		constexpr auto OnGameUserSettingsUINeedsUpdate = 0x110; // FMulticastInlineDelegate
	}

	namespace n_UBTDecorator_ConeCheck { // : UBTDecorator
		constexpr auto ConeHalfAngle = 0x68; // float
		constexpr auto ConeOrigin = 0x70; // FBlackboardKeySelector
		constexpr auto ConeDirection = 0x98; // FBlackboardKeySelector
		constexpr auto Observed = 0xc0; // FBlackboardKeySelector
	}

	namespace n_UGranularSynth { // : USynthComponent
		constexpr auto GranulatedSoundWave = 0x6c0; // USoundWave*
	}

	namespace n_UInterpTrackVectorBase { // : UInterpTrack
		constexpr auto VectorTrack = 0x70; // FInterpCurveVector
		constexpr auto CurveTension = 0x88; // float
	}

	namespace n_AGameStateBase { // : AInfo
		constexpr auto GameModeClass = 0x220; // AGameModeBase*
		constexpr auto AuthorityGameMode = 0x228; // AGameModeBase*
		constexpr auto SpectatorClass = 0x230; // ASpectatorPawn*
		constexpr auto PlayerArray = 0x238; // TArray<APlayerState*>
		constexpr auto bReplicatedHasBegunPlay = 0x248; // bool
		constexpr auto ReplicatedWorldTimeSeconds = 0x24c; // float
		constexpr auto ServerWorldTimeSecondsDelta = 0x250; // float
		constexpr auto ServerWorldTimeSecondsUpdateFrequency = 0x254; // float
	}

	namespace n_UTextureLightProfile { // : UTexture2D
		constexpr auto Brightness = 0x100; // float
		constexpr auto TextureMultiplier = 0x104; // float
	}

	namespace n_ULightPropagationVolumeBlendable { // : UObject
		constexpr auto Settings = 0x30; // FLightPropagationVolumeSettings
		constexpr auto BlendWeight = 0x70; // float
	}

	namespace n_UBaseBrushTool { // : UMeshSurfacePointTool
		constexpr auto BrushProperties = 0xc0; // UBrushBaseProperties*
		constexpr auto bInBrushStroke = 0xc8; // bool
		constexpr auto WorldToLocalScale = 0xcc; // float
		constexpr auto LastBrushStamp = 0xd0; // FBrushStampData
		constexpr auto PropertyClass = 0x190; // TSoftClassPtr<UObject>
		constexpr auto BrushStampIndicator = 0x1b8; // UBrushStampIndicator*
	}

	namespace n_UFieldSystemMetaDataProcessingResolution { // : UFieldSystemMetaData
		constexpr auto ResolutionType = 0xb0; // EFieldResolutionType
	}

	namespace n_AMOAvatar { // : AActor
		constexpr auto LocalAvatarID = 0x228; // int32_t
		constexpr auto RandomStream_BaseSeed = 0x22c; // int32_t
		constexpr auto pCollisionComponent = 0x230; // UCapsuleComponent*
		constexpr auto pSoundCueUse = 0x238; // USoundCue*
		constexpr auto pSoundCueHit = 0x240; // USoundCue*
		constexpr auto pSoundCueKilled = 0x248; // USoundCue*
		constexpr auto pParticleSystemHit = 0x250; // UParticleSystem*
		constexpr auto pParticleSystemKilled = 0x258; // UParticleSystem*
		constexpr auto sJournalRowNameToUnlock = 0x280; // FString
	}

	namespace n_UAnimMontage { // : UAnimCompositeBase
		constexpr auto BlendIn = 0xa8; // FAlphaBlend
		constexpr auto BlendInTime = 0xd8; // float
		constexpr auto BlendOut = 0xe0; // FAlphaBlend
		constexpr auto BlendOutTime = 0x110; // float
		constexpr auto BlendOutTriggerTime = 0x114; // float
		constexpr auto SyncGroup = 0x118; // FName
		constexpr auto SyncSlotIndex = 0x120; // int32_t
		constexpr auto MarkerData = 0x128; // FMarkerSyncData
		constexpr auto CompositeSections = 0x148; // TArray<FCompositeSection>
		constexpr auto SlotAnimTracks = 0x158; // TArray<FSlotAnimationTrack>
		constexpr auto BranchingPoints = 0x168; // TArray<FBranchingPoint>
		constexpr auto bEnableRootMotionTranslation = 0x178; // bool
		constexpr auto bEnableRootMotionRotation = 0x179; // bool
		constexpr auto bEnableAutoBlendOut = 0x17a; // bool
		constexpr auto RootMotionRootLock = 0x17b; // ERootMotionRootLock
		constexpr auto BranchingPointMarkers = 0x180; // TArray<FBranchingPointMarker>
		constexpr auto BranchingPointStateNotifyIndices = 0x190; // TArray<int32_t>
		constexpr auto TimeStretchCurve = 0x1a0; // FTimeStretchCurve
		constexpr auto TimeStretchCurveName = 0x1c8; // FName
	}

	namespace n_UNamedInterfaces { // : UObject
		constexpr auto NamedInterfaces = 0x28; // TArray<FNamedInterface>
		constexpr auto NamedInterfaceDefs = 0x38; // TArray<FNamedInterfaceDef>
	}

	namespace n_USynthComponentToneGenerator { // : USynthComponent
		constexpr auto Frequency = 0x6c0; // float
		constexpr auto Volume = 0x6c4; // float
	}

	namespace n_APawn { // : AActor
		constexpr auto bUseControllerRotationPitch = 0x228; // char : 1
		constexpr auto bUseControllerRotationYaw = 0x228; // char : 1
		constexpr auto bUseControllerRotationRoll = 0x228; // char : 1
		constexpr auto bCanAffectNavigationGeneration = 0x228; // char : 1
		constexpr auto BaseEyeHeight = 0x22c; // float
		constexpr auto AutoPossessPlayer = 0x230; // EAutoReceiveInput
		constexpr auto AutoPossessAI = 0x231; // EAutoPossessAI
		constexpr auto RemoteViewPitch = 0x232; // char
		constexpr auto AIControllerClass = 0x238; // AController*
		constexpr auto PlayerState = 0x240; // APlayerState*
		constexpr auto LastHitBy = 0x250; // AController*
		constexpr auto Controller = 0x258; // AController*
		constexpr auto ControlInputVector = 0x264; // FVector
		constexpr auto LastControlInputVector = 0x270; // FVector
	}

	namespace n_UBTDecorator_DoesPathExist { // : UBTDecorator
		constexpr auto BlackboardKeyA = 0x68; // FBlackboardKeySelector
		constexpr auto BlackboardKeyB = 0x90; // FBlackboardKeySelector
		constexpr auto bUseSelf = 0xb8; // char : 1
		constexpr auto PathQueryType = 0xbc; // EPathExistanceQueryType
		constexpr auto FilterClass = 0xc0; // UNavigationQueryFilter*
	}

	namespace n_UMOGuildStoneSettings { // : UMOWidgetBlueprint
		constexpr auto pMOButton_AbandonGuild = 0x260; // UMOButtonMedium*
		constexpr auto pMOButton_LeaveGuild = 0x268; // UMOButtonMedium*
	}

	namespace n_UChaosGameplayEventDispatcher { // : UChaosEventListenerComponent
		constexpr auto CollisionEventRegistrations = 0x1c8; // TMap<UPrimitiveComponent*, FChaosHandlerSet>
		constexpr auto BreakEventRegistrations = 0x218; // TMap<UPrimitiveComponent*, FBreakEventCallbackWrapper>
	}

	namespace n_AMOActorSkyDome { // : AActor
		constexpr auto fCloudSpeed = 0x220; // float
		constexpr auto fCloudOpacity = 0x224; // float
		constexpr auto pDirectionalLight = 0x228; // ADirectionalLight*
	}

	namespace n_UDistributionFloatUniformCurve { // : UDistributionFloat
		constexpr auto ConstantCurve = 0x38; // FInterpCurveVector2D
	}

	namespace n_UMovieSceneSkeletalAnimationTrack { // : UMovieSceneNameableTrack
		constexpr auto AnimationSections = 0x80; // TArray<UMovieSceneSection*>
		constexpr auto bUseLegacySectionIndexBlend = 0x90; // bool
		constexpr auto RootMotionParams = 0x98; // FMovieSceneSkeletalAnimRootMotionTrackParams
		constexpr auto bBlendFirstChildOfRoot = 0xc8; // bool
	}

	namespace n_UMOAvatarManagerSubsystem { // : UMOWorldSubsystemBase
		constexpr auto PaperdollActors = 0x238; // TArray<TWeakObjectPtr<AMOPaperdollSceneActor>>
		constexpr auto vAvatarList = 0x248; // TArray<FMOAvatarState>
		constexpr auto AvatarIndexLookup = 0x2a8; // TMap<int64_t, int32_t>
	}

	namespace n_UMOGuildStoneWarsEntry { // : UMOUserWidget
		constexpr auto pName = 0x2c8; // UTextBlock*
		constexpr auto pState = 0x2d0; // UTextBlock*
		constexpr auto pAccept = 0x2d8; // UMOButtonSmall*
		constexpr auto pRefuse = 0x2e0; // UMOButtonSmall*
		constexpr auto pStateImage = 0x2e8; // UImage*
		constexpr auto sGuidGuid = 0x2f0; // FString
		constexpr auto sGuildName = 0x300; // FString
		constexpr auto eMyGuildWarState = 0x310; // EMOGuildWarState
	}

	namespace n_UDemoNetDriver { // : UNetDriver
		constexpr auto RollbackNetStartupActors = 0x840; // TMap<FString, FRollbackNetStartupActorInfo>
		constexpr auto CheckpointSaveMaxMSPerFrame = 0x9ec; // float
		constexpr auto MulticastRecordOptions = 0xa10; // TArray<FMulticastRecordOptions>
		constexpr auto bIsLocalReplay = 0xa20; // bool
		constexpr auto SpectatorControllers = 0xa28; // TArray<APlayerController*>
	}

	namespace n_UAIPerceptionComponent { // : UActorComponent
		constexpr auto SensesConfig = 0xb0; // TArray<UAISenseConfig*>
		constexpr auto DominantSense = 0xc0; // UAISense*
		constexpr auto AIOwner = 0xd8; // AAIController*
		constexpr auto OnPerceptionUpdated = 0x160; // FMulticastInlineDelegate
		constexpr auto OnTargetPerceptionUpdated = 0x170; // FMulticastInlineDelegate
		constexpr auto OnTargetPerceptionInfoUpdated = 0x180; // FMulticastInlineDelegate
	}

	namespace n_UMODataAssetTattoo { // : UPrimaryDataAsset
		constexpr auto vTattooPlacement = 0x30; // TArray<UMODataAssetTattooPlacement*>
		constexpr auto pTattooEffectCollection = 0x40; // UMODataAssetTattooEffectCollection*
		constexpr auto eRequiredNation = 0x48; // ENation
		constexpr auto eRequiredClade = 0x49; // ESpecies
	}

	namespace n_UNiagaraParameterCollection { // : UObject
		constexpr auto Namespace = 0x28; // FName
		constexpr auto Parameters = 0x30; // TArray<FNiagaraVariable>
		constexpr auto SourceMaterialCollection = 0x40; // UMaterialParameterCollection*
		constexpr auto DefaultInstance = 0x48; // UNiagaraParameterCollectionInstance*
		constexpr auto CompileId = 0x50; // FGuid
	}

	namespace n_UPhysicsSpringComponent { // : USceneComponent
		constexpr auto SpringStiffness = 0x1f8; // float
		constexpr auto SpringDamping = 0x1fc; // float
		constexpr auto SpringLengthAtRest = 0x200; // float
		constexpr auto SpringRadius = 0x204; // float
		constexpr auto SpringChannel = 0x208; // ECollisionChannel
		constexpr auto bIgnoreSelf = 0x209; // bool
		constexpr auto SpringCompression = 0x20c; // float
	}

	namespace n_UTimeSynchronizableMediaSource { // : UBaseMediaSource
		constexpr auto bUseTimeSynchronization = 0x88; // bool
		constexpr auto FrameDelay = 0x8c; // int32_t
		constexpr auto TimeDelay = 0x90; // double
	}

	namespace n_UMOGameInstance { // : UGameInstance
		constexpr auto cLoadingScreenClass = 0x1a8; // TSoftClassPtr<UObject>
		constexpr auto cMoveWindowClass = 0x1d0; // TSoftClassPtr<UObject>
		constexpr auto cSkillTooltipClass = 0x1f8; // UUserWidget*
		constexpr auto cItemTooltipClass = 0x200; // UUserWidget*
		constexpr auto cButtonTooltipClass = 0x208; // UUserWidget*
		constexpr auto cSpellTooltipClass = 0x210; // UUserWidget*
		constexpr auto cPlayerCharacterClass = 0x218; // TSoftClassPtr<UObject>
		constexpr auto cSpiritCharacterClass = 0x240; // TSoftClassPtr<UObject>
		constexpr auto cGamemasterCharacterClass = 0x268; // TSoftClassPtr<UObject>
		constexpr auto cLevelStreamingTerrainGridClass = 0x290; // TSoftClassPtr<UObject>
		constexpr auto vResetableWidgets = 0x2b8; // TArray<UMOUserWidget*>
		constexpr auto pSpawnedMoveWindowWidget = 0x2d0; // UUserWidget*
		constexpr auto pMasterSoundClass = 0x2d8; // USoundClass*
		constexpr auto pMasterSoundMix = 0x2e0; // USoundMix*
		constexpr auto pMusicSoundClass = 0x2e8; // USoundClass*
		constexpr auto pMusicSoundMix = 0x2f0; // USoundMix*
		constexpr auto pAmbientSoundClass = 0x2f8; // USoundClass*
		constexpr auto pAmbientSoundMix = 0x300; // USoundMix*
		constexpr auto pSFXSoundClass = 0x308; // USoundClass*
		constexpr auto pSFXSoundMix = 0x310; // USoundMix*
		constexpr auto pUserInterfaceSoundClass = 0x318; // USoundClass*
		constexpr auto pUserInterfaceSoundMix = 0x320; // USoundMix*
		constexpr auto pCharacterSoundClass = 0x328; // USoundClass*
		constexpr auto pCharacterSoundMix = 0x330; // USoundMix*
		constexpr auto pFootstepsSoundClass = 0x338; // USoundClass*
		constexpr auto pFootstepsSoundMix = 0x340; // USoundMix*
		constexpr auto pDataTable_WeatherDataTable = 0x348; // TSoftObjectPtr<UDataTable>
		constexpr auto pDataTablePlaceablePreview = 0x370; // TSoftObjectPtr<UDataTable>
		constexpr auto cLightningStrikeClass = 0x398; // TSoftClassPtr<UObject>
		constexpr auto pWeatherFoliageParameterCollection = 0x3c0; // TSoftObjectPtr<UMaterialParameterCollection>
		constexpr auto pNightParameterCollection = 0x3e8; // TSoftObjectPtr<UMaterialParameterCollection>
		constexpr auto PlacementBlockingActors = 0x410; // TArray<AActor*>
		constexpr auto PlacementBlockingStaticMeshes = 0x420; // TArray<UStaticMesh*>
		constexpr auto cPlacementQuestWidgetClass = 0x430; // TSoftClassPtr<UObject>
		constexpr auto pPlacementQuestTexture = 0x458; // UTexture2D*
		constexpr auto pUISaveDataInstance = 0x460; // UMOSaveDataInstance*
		constexpr auto pDataTableCladeGifts_Human_SoftPtr = 0x468; // TSoftObjectPtr<UDataTable>
		constexpr auto pDataTableCladeGifts_Alvarin_SoftPtr = 0x490; // TSoftObjectPtr<UDataTable>
		constexpr auto pDataTableCladeGifts_Oghmir_SoftPtr = 0x4b8; // TSoftObjectPtr<UDataTable>
		constexpr auto pDataTableCladeGifts_Thursar_SoftPtr = 0x4e0; // TSoftObjectPtr<UDataTable>
		constexpr auto pDataTableHintDefinitions_SoftPtr = 0x508; // TSoftObjectPtr<UDataTable>
		constexpr auto pCharacterTitlesDefinitions_SoftPtr = 0x530; // TSoftObjectPtr<UDataTable>
		constexpr auto pDataTableContentInfoSpells_SoftPtr = 0x558; // TSoftObjectPtr<UDataTable>
		constexpr auto pDataTableJournal_SoftPtr = 0x580; // TSoftObjectPtr<UDataTable>
		constexpr auto pDataTableDecorations_SoftPtr = 0x5a8; // TSoftObjectPtr<UDataTable>
		constexpr auto pDataTableCladeGifts_Human = 0x5d0; // UDataTable*
		constexpr auto pDataTableCladeGifts_Alvarin = 0x5d8; // UDataTable*
		constexpr auto pDataTableCladeGifts_Oghmir = 0x5e0; // UDataTable*
		constexpr auto pDataTableCladeGifts_Thursar = 0x5e8; // UDataTable*
		constexpr auto pDataTableHintDefinitions = 0x5f0; // UDataTable*
		constexpr auto pCharacterTitlesDefinitions = 0x5f8; // UDataTable*
		constexpr auto pDataTableContentInfoSpells = 0x600; // UDataTable*
		constexpr auto pDataTableJournal = 0x608; // UDataTable*
		constexpr auto pDataTableDecorations = 0x610; // UDataTable*
	}

	namespace n_USubmixEffectConvolutionReverbPreset { // : USoundEffectSubmixPreset
		constexpr auto ImpulseResponse = 0x68; // UAudioImpulseResponse*
		constexpr auto Settings = 0x70; // FSubmixEffectConvolutionReverbSettings
		constexpr auto BlockSize = 0x98; // ESubmixEffectConvolutionReverbBlockSize
		constexpr auto bEnableHardwareAcceleration = 0x99; // bool
	}

	namespace n_UNiagaraDataInterfaceNeighborGrid3D { // : UNiagaraDataInterfaceGrid3D
		constexpr auto MaxNeighborsPerCell = 0x100; // uint32_t
	}

	namespace n_UParticleModuleSpawnBase { // : UParticleModule
		constexpr auto bProcessSpawnRate = 0x30; // char : 1
		constexpr auto bProcessBurstList = 0x30; // char : 1
	}

	namespace n_UWrapBox { // : UPanelWidget
		constexpr auto InnerSlotPadding = 0x120; // FVector2D
		constexpr auto WrapWidth = 0x128; // float
		constexpr auto WrapSize = 0x12c; // float
		constexpr auto bExplicitWrapWidth = 0x130; // bool
		constexpr auto bExplicitWrapSize = 0x131; // bool
		constexpr auto Orientation = 0x132; // EOrientation
	}

	namespace n_UMOGuildStone { // : UMOUserWidget
		constexpr auto pMOGuildStoneCreateGuild = 0x2c8; // UMOGuildStoneCreateGuild*
		constexpr auto pGuildStoneMembers = 0x2d0; // UMOGuildStoneMembers*
		constexpr auto pGuildStoneSettings = 0x2d8; // UMOGuildStoneSettings*
		constexpr auto pGuildStoneDiplomacy = 0x2e0; // UMOGuildStoneDiplomacy*
	}

	namespace n_UMOUserWidgetChatMessage { // : UMOUserWidget
		constexpr auto pTextBlock = 0x2c8; // UTextBlock*
	}

	namespace n_UMovieSceneParameterSection { // : UMovieSceneSection
		constexpr auto BoolParameterNamesAndCurves = 0xe8; // TArray<FBoolParameterNameAndCurve>
		constexpr auto ScalarParameterNamesAndCurves = 0xf8; // TArray<FScalarParameterNameAndCurve>
		constexpr auto Vector2DParameterNamesAndCurves = 0x108; // TArray<FVector2DParameterNameAndCurves>
		constexpr auto VectorParameterNamesAndCurves = 0x118; // TArray<FVectorParameterNameAndCurves>
		constexpr auto ColorParameterNamesAndCurves = 0x128; // TArray<FColorParameterNameAndCurves>
		constexpr auto TransformParameterNamesAndCurves = 0x138; // TArray<FTransformParameterNameAndCurves>
	}

	namespace n_UNiagaraComponentSettings { // : UObject
		constexpr auto SuppressActivationList = 0x28; // TSet<FName>
		constexpr auto ForceAutoPooolingList = 0x78; // TSet<FName>
		constexpr auto SuppressEmitterList = 0xc8; // TSet<FNiagaraEmitterNameSettingsRef>
	}

	namespace n_UParticleModuleMeshRotationRate { // : UParticleModuleRotationRateBase
		constexpr auto StartRotationRate = 0x30; // FRawDistributionVector
	}

	namespace n_UMOCrafting { // : UMOUserWidget
		constexpr auto pMOButton_Craft = 0x2c8; // UMOButtonMedium*
		constexpr auto pMOButtonSmall_Presets = 0x2d0; // UMOButtonSmall*
		constexpr auto pMOCheckBox_Sign = 0x2d8; // UMOCheckBox*
		constexpr auto pTextBlock_Sign = 0x2e0; // UTextBlock*
		constexpr auto pMOEditableTextBox_Name = 0x2e8; // UMOEditableTextBox*
		constexpr auto cCraftingListEntryClass = 0x2f0; // UMOWidgetBlueprint*
		constexpr auto pCraftingPreview = 0x308; // AMOActorCraftingPreview*
	}

	namespace n_UStereoLayerComponent { // : USceneComponent
		constexpr auto bLiveTexture = 0x1f8; // char : 1
		constexpr auto bSupportsDepth = 0x1f8; // char : 1
		constexpr auto bNoAlphaChannel = 0x1f8; // char : 1
		constexpr auto Texture = 0x200; // UTexture*
		constexpr auto LeftTexture = 0x208; // UTexture*
		constexpr auto bQuadPreserveTextureRatio = 0x210; // char : 1
		constexpr auto QuadSize = 0x214; // FVector2D
		constexpr auto UVRect = 0x21c; // FBox2D
		constexpr auto CylinderRadius = 0x230; // float
		constexpr auto CylinderOverlayArc = 0x234; // float
		constexpr auto CylinderHeight = 0x238; // int32_t
		constexpr auto EquirectProps = 0x23c; // FEquirectProps
		constexpr auto StereoLayerType = 0x284; // EStereoLayerType
		constexpr auto StereoLayerShape = 0x285; // EStereoLayerShape
		constexpr auto Shape = 0x288; // UStereoLayerShape*
		constexpr auto Priority = 0x290; // int32_t
	}

	namespace n_UMOCharCreationFinalizePanel { // : UMOCharCreationPanel
		constexpr auto sCheckedFirstName = 0x2d0; // FText
		constexpr auto pMOEditableBox_FirstName = 0x2e8; // UMOEditableTextBox*
		constexpr auto pMOEditableBox_SurName = 0x2f0; // UMOEditableTextBox*
		constexpr auto pCarouselSelect_SpawnLocation = 0x2f8; // UMOCarouselSelectText*
		constexpr auto pMOButton_Create = 0x300; // UMOButtonLarge*
		constexpr auto CheckNameAvailableTimer = 0x308; // FTimerHandle
		constexpr auto bNameAvailable = 0x310; // bool
	}

	namespace n_UWidgetBlueprintGeneratedClass { // : UBlueprintGeneratedClass
		constexpr auto WidgetTree = 0x328; // UWidgetTree*
		constexpr auto bClassRequiresNativeTick = 0x330; // char : 1
		constexpr auto Bindings = 0x338; // TArray<FDelegateRuntimeBinding>
		constexpr auto Animations = 0x348; // TArray<UWidgetAnimation*>
		constexpr auto NamedSlots = 0x358; // TArray<FName>
	}

	namespace n_UMOLoginHUD { // : UMOUserWidget
		constexpr auto pMOLoginScreen = 0x2d0; // UMOLoginScreen*
		constexpr auto pMOCharacterSelect = 0x2d8; // UMOCharacterSelection*
		constexpr auto pMOCharacterDelete = 0x2e0; // UMOCharacterDelete*
		constexpr auto pMOCamera = 0x2e8; // AMOCineCameraActor*
		constexpr auto pMOOptions = 0x2f0; // UMOUserWidgetOptions*
		constexpr auto pMOCharacterCreationNew = 0x2f8; // UMOCharacterCreationNew*
		constexpr auto eCurrentCameraAssignment = 0x300; // EMOMainMenuCameraAssignment
	}

	namespace n_UMOBrokerBrowsePanel { // : UMOBrokerPanel
		constexpr auto pTextBlock_SellButtonText = 0x2d8; // UTextBlock*
	}

	namespace n_UDragDropOperation { // : UObject
		constexpr auto Tag = 0x28; // FString
		constexpr auto Payload = 0x38; // UObject*
		constexpr auto DefaultDragVisual = 0x40; // UWidget*
		constexpr auto Pivot = 0x48; // EDragPivot
		constexpr auto Offset = 0x4c; // FVector2D
		constexpr auto OnDrop = 0x58; // FMulticastInlineDelegate
		constexpr auto OnDragCancelled = 0x68; // FMulticastInlineDelegate
		constexpr auto OnDragged = 0x78; // FMulticastInlineDelegate
	}

	namespace n_ALandscapeMeshProxyActor { // : AActor
		constexpr auto LandscapeMeshProxyComponent = 0x220; // ULandscapeMeshProxyComponent*
	}

	namespace n_AGeometryCollectionDebugDrawActor { // : AActor
		constexpr auto WarningMessage = 0x220; // FGeometryCollectionDebugDrawWarningMessage
		constexpr auto SelectedRigidBody = 0x228; // FGeometryCollectionDebugDrawActorSelectedRigidBody
		constexpr auto bDebugDrawWholeCollection = 0x240; // bool
		constexpr auto bDebugDrawHierarchy = 0x241; // bool
		constexpr auto bDebugDrawClustering = 0x242; // bool
		constexpr auto HideGeometry = 0x243; // EGeometryCollectionDebugDrawActorHideGeometry
		constexpr auto bShowRigidBodyId = 0x244; // bool
		constexpr auto bShowRigidBodyCollision = 0x245; // bool
		constexpr auto bCollisionAtOrigin = 0x246; // bool
		constexpr auto bShowRigidBodyTransform = 0x247; // bool
		constexpr auto bShowRigidBodyInertia = 0x248; // bool
		constexpr auto bShowRigidBodyVelocity = 0x249; // bool
		constexpr auto bShowRigidBodyForce = 0x24a; // bool
		constexpr auto bShowRigidBodyInfos = 0x24b; // bool
		constexpr auto bShowTransformIndex = 0x24c; // bool
		constexpr auto bShowTransform = 0x24d; // bool
		constexpr auto bShowParent = 0x24e; // bool
		constexpr auto bShowLevel = 0x24f; // bool
		constexpr auto bShowConnectivityEdges = 0x250; // bool
		constexpr auto bShowGeometryIndex = 0x251; // bool
		constexpr auto bShowGeometryTransform = 0x252; // bool
		constexpr auto bShowBoundingBox = 0x253; // bool
		constexpr auto bShowFaces = 0x254; // bool
		constexpr auto bShowFaceIndices = 0x255; // bool
		constexpr auto bShowFaceNormals = 0x256; // bool
		constexpr auto bShowSingleFace = 0x257; // bool
		constexpr auto SingleFaceIndex = 0x258; // int32_t
		constexpr auto bShowVertices = 0x25c; // bool
		constexpr auto bShowVertexIndices = 0x25d; // bool
		constexpr auto bShowVertexNormals = 0x25e; // bool
		constexpr auto bUseActiveVisualization = 0x25f; // bool
		constexpr auto PointThickness = 0x260; // float
		constexpr auto LineThickness = 0x264; // float
		constexpr auto bTextShadow = 0x268; // bool
		constexpr auto TextScale = 0x26c; // float
		constexpr auto NormalScale = 0x270; // float
		constexpr auto AxisScale = 0x274; // float
		constexpr auto ArrowScale = 0x278; // float
		constexpr auto RigidBodyIdColor = 0x27c; // FColor
		constexpr auto RigidBodyTransformScale = 0x280; // float
		constexpr auto RigidBodyCollisionColor = 0x284; // FColor
		constexpr auto RigidBodyInertiaColor = 0x288; // FColor
		constexpr auto RigidBodyVelocityColor = 0x28c; // FColor
		constexpr auto RigidBodyForceColor = 0x290; // FColor
		constexpr auto RigidBodyInfoColor = 0x294; // FColor
		constexpr auto TransformIndexColor = 0x298; // FColor
		constexpr auto TransformScale = 0x29c; // float
		constexpr auto LevelColor = 0x2a0; // FColor
		constexpr auto ParentColor = 0x2a4; // FColor
		constexpr auto ConnectivityEdgeThickness = 0x2a8; // float
		constexpr auto GeometryIndexColor = 0x2ac; // FColor
		constexpr auto GeometryTransformScale = 0x2b0; // float
		constexpr auto BoundingBoxColor = 0x2b4; // FColor
		constexpr auto FaceColor = 0x2b8; // FColor
		constexpr auto FaceIndexColor = 0x2bc; // FColor
		constexpr auto FaceNormalColor = 0x2c0; // FColor
		constexpr auto SingleFaceColor = 0x2c4; // FColor
		constexpr auto VertexColor = 0x2c8; // FColor
		constexpr auto VertexIndexColor = 0x2cc; // FColor
		constexpr auto VertexNormalColor = 0x2d0; // FColor
		constexpr auto SpriteComponent = 0x2d8; // UBillboardComponent*
	}

	namespace n_UMOGlobalActorManager { // : UMOManager
		constexpr auto cNavigationBeamPriestClass = 0x28; // AMOActorNavigationBeamPriest*
		constexpr auto vNavigationBeamPriest = 0x30; // TArray<AMOActorNavigationBeamPriest*>
	}

	namespace n_UMaterialExpressionMakeMaterialAttributes { // : UMaterialExpression
		constexpr auto BaseColor = 0x40; // FExpressionInput
		constexpr auto Metallic = 0x54; // FExpressionInput
		constexpr auto Specular = 0x68; // FExpressionInput
		constexpr auto Roughness = 0x7c; // FExpressionInput
		constexpr auto Anisotropy = 0x90; // FExpressionInput
		constexpr auto EmissiveColor = 0xa4; // FExpressionInput
		constexpr auto Opacity = 0xb8; // FExpressionInput
		constexpr auto OpacityMask = 0xcc; // FExpressionInput
		constexpr auto Normal = 0xe0; // FExpressionInput
		constexpr auto Tangent = 0xf4; // FExpressionInput
		constexpr auto WorldPositionOffset = 0x108; // FExpressionInput
		constexpr auto WorldDisplacement = 0x11c; // FExpressionInput
		constexpr auto TessellationMultiplier = 0x130; // FExpressionInput
		constexpr auto SubsurfaceColor = 0x144; // FExpressionInput
		constexpr auto ClearCoat = 0x158; // FExpressionInput
		constexpr auto ClearCoatRoughness = 0x16c; // FExpressionInput
		constexpr auto AmbientOcclusion = 0x180; // FExpressionInput
		constexpr auto Refraction = 0x194; // FExpressionInput
		constexpr auto CustomizedUVs = 0x1a8; // FExpressionInput [0x8]
		constexpr auto PixelDepthOffset = 0x248; // FExpressionInput
		constexpr auto ShadingModel = 0x25c; // FExpressionInput
	}

	namespace n_UMOCladeGiftButton { // : UMOWidgetBlueprint
		constexpr auto sName = 0x260; // FText
		constexpr auto pMOCladeGiftButton = 0x278; // UMOButton*
		constexpr auto pTableRowCladeGift = 0x280; // FMOTableRowCladeGift
	}

	namespace n_USourceEffectDynamicsProcessorPreset { // : USoundEffectSourcePreset
		constexpr auto Settings = 0xb8; // FSourceEffectDynamicsProcessorSettings
	}

	namespace n_UTestMovieSceneTrack { // : UMovieSceneTrack
		constexpr auto bHighPassFilter = 0x80; // bool
		constexpr auto SectionArray = 0x88; // TArray<UMovieSceneSection*>
	}

	namespace n_UWB_MO_CharacterSelection_C { // : UMOCharacterSelection
		constexpr auto UberGraphFrame = 0x2f0; // FPointerToUberGraphFrame
		constexpr auto FadeIn = 0x2f8; // UWidgetAnimation*
		constexpr auto FadeOut = 0x300; // UWidgetAnimation*
		constexpr auto Button_Logout = 0x308; // UMOButtonLarge*
		constexpr auto FadeTo = 0x310; // UImage*
		constexpr auto Image_73 = 0x318; // UImage*
		constexpr auto MO_Logo_Image = 0x320; // UImage*
		constexpr auto pMiddleVertical = 0x328; // UImage*
		constexpr auto LoginOptionsReference = 0x330; // UObject*
	}

	namespace n_UToIntegerField { // : UFieldNodeInt
		constexpr auto FloatField = 0xb0; // UFieldNodeFloat*
	}

	namespace n_UWaterRuntimeSettings { // : UDeveloperSettings
		constexpr auto CollisionChannelForWaterTraces = 0x38; // ECollisionChannel
		constexpr auto MaterialParameterCollection = 0x40; // TSoftObjectPtr<UMaterialParameterCollection>
		constexpr auto WaterBodyIconWorldSize = 0x68; // float
		constexpr auto WaterBodyIconWorldZOffset = 0x6c; // float
		constexpr auto DefaultWaterCollisionProfileName = 0x70; // FName
	}

	namespace n_ULuminARCandidateImage { // : UARCandidateImage
		constexpr auto bUseUnreliablePose = 0x58; // bool
		constexpr auto bImageIsStationary = 0x59; // bool
		constexpr auto AxisOrientation = 0x5a; // EMagicLeapImageTargetOrientation
	}

	namespace n_AReflectionCapture { // : AActor
		constexpr auto CaptureComponent = 0x220; // UReflectionCaptureComponent*
	}

	namespace n_UTextureRenderTarget2D { // : UTextureRenderTarget
		constexpr auto SizeX = 0xe0; // int32_t
		constexpr auto SizeY = 0xe4; // int32_t
		constexpr auto ClearColor = 0xe8; // FLinearColor
		constexpr auto AddressX = 0xf8; // TextureAddress
		constexpr auto AddressY = 0xf9; // TextureAddress
		constexpr auto bForceLinearGamma = 0xfa; // char : 1
		constexpr auto bHDR = 0xfa; // char : 1
		constexpr auto bGPUSharedFlag = 0xfa; // char : 1
		constexpr auto RenderTargetFormat = 0xfb; // ETextureRenderTargetFormat
		constexpr auto bAutoGenerateMips = 0xfc; // char : 1
		constexpr auto MipsSamplerFilter = 0xfd; // TextureFilter
		constexpr auto MipsAddressU = 0xfe; // TextureAddress
		constexpr auto MipsAddressV = 0xff; // TextureAddress
		constexpr auto OverrideFormat = 0x100; // EPixelFormat
	}

	namespace n_UInputAxisKeyDelegateBinding { // : UInputDelegateBinding
		constexpr auto InputAxisKeyDelegateBindings = 0x28; // TArray<FBlueprintInputAxisKeyDelegateBinding>
	}

	namespace n_AOnlineBeacon { // : AActor
		constexpr auto BeaconConnectionInitialTimeout = 0x228; // float
		constexpr auto BeaconConnectionTimeout = 0x22c; // float
		constexpr auto NetDriver = 0x230; // UNetDriver*
	}

	namespace n_ACameraShakeSourceActor { // : AActor
		constexpr auto CameraShakeSourceComponent = 0x220; // UCameraShakeSourceComponent*
	}

	namespace n_UMaterialExpressionComponentMask { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto R = 0x54; // char : 1
		constexpr auto G = 0x54; // char : 1
		constexpr auto B = 0x54; // char : 1
		constexpr auto A = 0x54; // char : 1
	}

	namespace n_UParticleModuleVectorFieldGlobal { // : UParticleModuleVectorFieldBase
		constexpr auto bOverrideGlobalVectorFieldTightness = 0x30; // char : 1
		constexpr auto GlobalVectorFieldScale = 0x34; // float
		constexpr auto GlobalVectorFieldTightness = 0x38; // float
	}

	namespace n_UNiagaraDataInterfaceCurlNoise { // : UNiagaraDataInterface
		constexpr auto Seed = 0x38; // uint32_t
	}

	namespace n_USoundNodeOscillator { // : USoundNode
		constexpr auto bModulateVolume = 0x48; // char : 1
		constexpr auto bModulatePitch = 0x48; // char : 1
		constexpr auto AmplitudeMin = 0x4c; // float
		constexpr auto AmplitudeMax = 0x50; // float
		constexpr auto FrequencyMin = 0x54; // float
		constexpr auto FrequencyMax = 0x58; // float
		constexpr auto OffsetMin = 0x5c; // float
		constexpr auto OffsetMax = 0x60; // float
		constexpr auto CenterMin = 0x64; // float
		constexpr auto CenterMax = 0x68; // float
	}

	namespace n_UCurveFloat { // : UCurveBase
		constexpr auto FloatCurve = 0x30; // FRichCurve
		constexpr auto bIsEventCurve = 0xb0; // bool
	}

	namespace n_UBTTask_RunBehavior { // : UBTTaskNode
		constexpr auto BehaviorAsset = 0x70; // UBehaviorTree*
	}

	namespace n_UProxyLODMeshSimplificationSettings { // : UDeveloperSettings
		constexpr auto ProxyLODMeshReductionModuleName = 0x38; // FName
	}

	namespace n_UPawnAction_Sequence { // : UPawnAction
		constexpr auto ActionSequence = 0x98; // TArray<UPawnAction*>
		constexpr auto ChildFailureHandlingMode = 0xa8; // EPawnActionFailHandling
		constexpr auto RecentActionCopy = 0xb0; // UPawnAction*
	}

	namespace n_AMOPhysicsVolumeFishing { // : AMOPhysicsVolume
		constexpr auto sFishingSpotName = 0x268; // FString
	}

	namespace n_UGameSessionSettings { // : UObject
		constexpr auto MaxSpectators = 0x28; // int32_t
		constexpr auto MaxPlayers = 0x2c; // int32_t
		constexpr auto bRequiresPushToTalk = 0x30; // char : 1
	}

	namespace n_UNavigationGraphNodeComponent { // : USceneComponent
		constexpr auto Node = 0x1f8; // FNavGraphNode
		constexpr auto NextNodeComponent = 0x210; // UNavigationGraphNodeComponent*
		constexpr auto PrevNodeComponent = 0x218; // UNavigationGraphNodeComponent*
	}

	namespace n_UNavigationPath { // : UObject
		constexpr auto PathUpdatedNotifier = 0x28; // FMulticastInlineDelegate
		constexpr auto PathPoints = 0x38; // TArray<FVector>
		constexpr auto RecalculateOnInvalidation = 0x48; // ENavigationOptionFlag
	}

	namespace n_UGarbageCollectionSettings { // : UDeveloperSettings
		constexpr auto TimeBetweenPurgingPendingKillObjects = 0x38; // float
		constexpr auto FlushStreamingOnGC = 0x3c; // char : 1
		constexpr auto AllowParallelGC = 0x3c; // char : 1
		constexpr auto IncrementalBeginDestroyEnabled = 0x3c; // char : 1
		constexpr auto MultithreadedDestructionEnabled = 0x3c; // char : 1
		constexpr auto CreateGCClusters = 0x3c; // char : 1
		constexpr auto AssetClusteringEnabled = 0x3c; // char : 1
		constexpr auto ActorClusteringEnabled = 0x3c; // char : 1
		constexpr auto BlueprintClusteringEnabled = 0x3c; // char : 1
		constexpr auto UseDisregardForGCOnDedicatedServers = 0x3d; // char : 1
		constexpr auto MinGCClusterSize = 0x40; // int32_t
		constexpr auto NumRetriesBeforeForcingGC = 0x44; // int32_t
		constexpr auto MaxObjectsNotConsideredByGC = 0x48; // int32_t
		constexpr auto SizeOfPermanentObjectPool = 0x4c; // int32_t
		constexpr auto MaxObjectsInGame = 0x50; // int32_t
		constexpr auto MaxObjectsInEditor = 0x54; // int32_t
	}

	namespace n_UMaterialExpressionArctangent { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UARTrackedGeometry { // : UObject
		constexpr auto UniqueId = 0x28; // FGuid
		constexpr auto LocalToTrackingTransform = 0x40; // FTransform
		constexpr auto LocalToAlignedTrackingTransform = 0x70; // FTransform
		constexpr auto TrackingState = 0xa0; // EARTrackingState
		constexpr auto UnderlyingMesh = 0xb0; // UMRMeshComponent*
		constexpr auto ObjectClassification = 0xb8; // EARObjectClassification
		constexpr auto LastUpdateFrameNumber = 0xd0; // int32_t
		constexpr auto DebugName = 0xe0; // FName
	}

	namespace n_UAB_CR_Springbok_PostProcess_C { // : UMOAnimationInstancePostProcess
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_KawaiiPhysics_2 = 0x300; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_KawaiiPhysics = 0x550; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x7a0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LinkedInputPose = 0x7c0; // FAnimNode_LinkedInputPose
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x8d8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto Physics Settings = 0x8f8; // FKawaiiPhysicsSettings
	}

	namespace n_UParticleModuleKillHeight { // : UParticleModuleKillBase
		constexpr auto Height = 0x30; // FRawDistributionFloat
		constexpr auto bAbsolute = 0x60; // char : 1
		constexpr auto bFloor = 0x60; // char : 1
		constexpr auto bApplyPSysScale = 0x60; // char : 1
	}

	namespace n_ADestructibleActor { // : AActor
		constexpr auto DestructibleComponent = 0x220; // UDestructibleComponent*
		constexpr auto OnActorFracture = 0x228; // FMulticastInlineDelegate
	}

	namespace n_UPanelSlot { // : UVisual
		constexpr auto Parent = 0x28; // UPanelWidget*
		constexpr auto Content = 0x30; // UWidget*
	}

	namespace n_UNiagaraDataInterface2DArrayTexture { // : UNiagaraDataInterface
		constexpr auto Texture = 0x38; // UTexture2DArray*
	}

	namespace n_UParticleModuleSizeScale { // : UParticleModuleSizeBase
		constexpr auto SizeScale = 0x30; // FRawDistributionVector
		constexpr auto EnableX = 0x78; // char : 1
		constexpr auto EnableY = 0x78; // char : 1
		constexpr auto EnableZ = 0x78; // char : 1
	}

	namespace n_UWB_MO_Scrollbox_Arrow_Down_C { // : UMOUserWidget
		constexpr auto pImage = 0x2c8; // UImage*
	}

	namespace n_UMaterialExpressionRuntimeVirtualTextureSampleParameter { // : UMaterialExpressionRuntimeVirtualTextureSample
		constexpr auto ParameterName = 0x90; // FName
		constexpr auto ExpressionGUID = 0x98; // FGuid
		constexpr auto Group = 0xa8; // FName
	}

	namespace n_UMovieSceneNiagaraVectorParameterTrack { // : UMovieSceneNiagaraParameterTrack
		constexpr auto ChannelsUsed = 0xb0; // int32_t
	}

	namespace n_UMultiLineEditableTextBox { // : UTextLayoutWidget
		constexpr auto Text = 0x128; // FText
		constexpr auto HintText = 0x140; // FText
		constexpr auto HintTextDelegate = 0x158; // FDelegate
		constexpr auto WidgetStyle = 0x168; // FEditableTextBoxStyle
		constexpr auto TextStyle = 0x960; // FTextBlockStyle
		constexpr auto bIsReadOnly = 0xbd0; // bool
		constexpr auto AllowContextMenu = 0xbd1; // bool
		constexpr auto VirtualKeyboardOptions = 0xbd2; // FVirtualKeyboardOptions
		constexpr auto VirtualKeyboardDismissAction = 0xbd3; // EVirtualKeyboardDismissAction
		constexpr auto Style = 0xbd8; // USlateWidgetStyleAsset*
		constexpr auto Font = 0xbe0; // FSlateFontInfo
		constexpr auto ForegroundColor = 0xc38; // FLinearColor
		constexpr auto BackgroundColor = 0xc48; // FLinearColor
		constexpr auto ReadOnlyForegroundColor = 0xc58; // FLinearColor
		constexpr auto OnTextChanged = 0xc68; // FMulticastInlineDelegate
		constexpr auto OnTextCommitted = 0xc78; // FMulticastInlineDelegate
	}

	namespace n_UParticleModuleSize { // : UParticleModuleSizeBase
		constexpr auto StartSize = 0x30; // FRawDistributionVector
	}

	namespace n_UMaterialInstanceConstant { // : UMaterialInstance
		constexpr auto PhysMaterialMask = 0x360; // UPhysicalMaterialMask*
	}

	namespace n_UCheckBoxWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto CheckBoxStyle = 0x30; // FCheckBoxStyle
	}

	namespace n_UMeshSimplificationSettings { // : UDeveloperSettings
		constexpr auto MeshReductionModuleName = 0x38; // FName
	}

	namespace n_UBTDecorator_TagCooldown { // : UBTDecorator
		constexpr auto CooldownTag = 0x68; // FGameplayTag
		constexpr auto CooldownDuration = 0x70; // float
		constexpr auto bAddToExistingDuration = 0x74; // bool
		constexpr auto bActivatesCooldown = 0x75; // bool
	}

	namespace n_UGizmoWorldAxisSource { // : UObject
		constexpr auto Origin = 0x30; // FVector
		constexpr auto AxisIndex = 0x3c; // int32_t
	}

	namespace n_UMaterialExpressionSpriteTextureSampler { // : UMaterialExpressionTextureSampleParameter2D
		constexpr auto bSampleAdditionalTextures = 0x80; // bool
		constexpr auto AdditionalSlotIndex = 0x84; // int32_t
		constexpr auto SlotDisplayName = 0x88; // FText
	}

	namespace n_UARPlaneComponent { // : UARComponent
		constexpr auto ReplicatedPayload = 0x280; // FARPlaneUpdatePayload
	}

	namespace n_UMOMailReceive { // : UMOMailPanel
		constexpr auto pLastClickedEntry = 0x2d0; // UMOMailItemListEntry*
		constexpr auto pMOScrollBox_Items = 0x2d8; // UMOScrollBox*
	}

	namespace n_UGizmoAxisIntervalParameterSource { // : UGizmoBaseFloatParameterSource
		constexpr auto FloatParameterSource = 0x48; // TScriptInterface<IGizmoFloatParameterSource>
		constexpr auto MinParameter = 0x58; // float
		constexpr auto MaxParameter = 0x5c; // float
	}

	namespace n_UBoxComponent { // : UShapeComponent
		constexpr auto BoxExtent = 0x458; // FVector
		constexpr auto LineThickness = 0x464; // float
	}

	namespace n_ALevelStreamingVolume { // : AVolume
		constexpr auto StreamingLevelNames = 0x258; // TArray<FName>
		constexpr auto bEditorPreVisOnly = 0x268; // char : 1
		constexpr auto bDisabled = 0x268; // char : 1
		constexpr auto StreamingUsage = 0x26c; // EStreamingVolumeUsage
	}

	namespace n_UParticleModuleVelocityOverLifetime { // : UParticleModuleVelocityBase
		constexpr auto VelOverLife = 0x38; // FRawDistributionVector
		constexpr auto Absolute = 0x80; // char : 1
	}

	namespace n_UGeometryCollectionComponent { // : UMeshComponent
		constexpr auto ChaosSolverActor = 0x470; // AChaosSolverActor*
		constexpr auto RestCollection = 0x558; // UGeometryCollection*
		constexpr auto InitializationFields = 0x560; // TArray<AFieldSystemActor*>
		constexpr auto Simulating = 0x570; // bool
		constexpr auto ObjectType = 0x578; // EObjectStateTypeEnum
		constexpr auto EnableClustering = 0x579; // bool
		constexpr auto ClusterGroupIndex = 0x57c; // int32_t
		constexpr auto MaxClusterLevel = 0x580; // int32_t
		constexpr auto DamageThreshold = 0x588; // TArray<float>
		constexpr auto ClusterConnectionType = 0x598; // EClusterConnectionTypeEnum
		constexpr auto CollisionGroup = 0x59c; // int32_t
		constexpr auto CollisionSampleFraction = 0x5a0; // float
		constexpr auto LinearEtherDrag = 0x5a4; // float
		constexpr auto AngularEtherDrag = 0x5a8; // float
		constexpr auto PhysicalMaterial = 0x5b0; // UChaosPhysicalMaterial*
		constexpr auto InitialVelocityType = 0x5b8; // EInitialVelocityTypeEnum
		constexpr auto InitialLinearVelocity = 0x5bc; // FVector
		constexpr auto InitialAngularVelocity = 0x5c8; // FVector
		constexpr auto PhysicalMaterialOverride = 0x5d8; // UPhysicalMaterial*
		constexpr auto CacheParameters = 0x5e0; // FGeomComponentCacheParameters
		constexpr auto NotifyGeometryCollectionPhysicsStateChange = 0x630; // FMulticastInlineDelegate
		constexpr auto NotifyGeometryCollectionPhysicsLoadingStateChange = 0x640; // FMulticastInlineDelegate
		constexpr auto OnChaosBreakEvent = 0x668; // FMulticastInlineDelegate
		constexpr auto DesiredCacheTime = 0x678; // float
		constexpr auto CachePlayback = 0x67c; // bool
		constexpr auto OnChaosPhysicsCollision = 0x680; // FMulticastInlineDelegate
		constexpr auto bNotifyBreaks = 0x690; // bool
		constexpr auto bNotifyCollisions = 0x691; // bool
		constexpr auto bEnableReplication = 0x692; // bool
		constexpr auto bEnableAbandonAfterLevel = 0x693; // bool
		constexpr auto ReplicationAbandonClusterLevel = 0x694; // int32_t
		constexpr auto RepData = 0x698; // FGeometryCollectionRepData
		constexpr auto DummyBodySetup = 0x8c8; // UBodySetup*
	}

	namespace n_UEngine { // : UObject
		constexpr auto TinyFont = 0x30; // UFont*
		constexpr auto TinyFontName = 0x38; // FSoftObjectPath
		constexpr auto SmallFont = 0x50; // UFont*
		constexpr auto SmallFontName = 0x58; // FSoftObjectPath
		constexpr auto MediumFont = 0x70; // UFont*
		constexpr auto MediumFontName = 0x78; // FSoftObjectPath
		constexpr auto LargeFont = 0x90; // UFont*
		constexpr auto LargeFontName = 0x98; // FSoftObjectPath
		constexpr auto SubtitleFont = 0xb0; // UFont*
		constexpr auto SubtitleFontName = 0xb8; // FSoftObjectPath
		constexpr auto AdditionalFonts = 0xd0; // TArray<UFont*>
		constexpr auto AdditionalFontNames = 0xe0; // TArray<FString>
		constexpr auto ConsoleClass = 0xf0; // UConsole*
		constexpr auto ConsoleClassName = 0xf8; // FSoftClassPath
		constexpr auto GameViewportClientClass = 0x110; // UGameViewportClient*
		constexpr auto GameViewportClientClassName = 0x118; // FSoftClassPath
		constexpr auto LocalPlayerClass = 0x130; // ULocalPlayer*
		constexpr auto LocalPlayerClassName = 0x138; // FSoftClassPath
		constexpr auto WorldSettingsClass = 0x150; // AWorldSettings*
		constexpr auto WorldSettingsClassName = 0x158; // FSoftClassPath
		constexpr auto NavigationSystemClassName = 0x170; // FSoftClassPath
		constexpr auto NavigationSystemClass = 0x188; // UNavigationSystemBase*
		constexpr auto NavigationSystemConfigClassName = 0x190; // FSoftClassPath
		constexpr auto NavigationSystemConfigClass = 0x1a8; // UNavigationSystemConfig*
		constexpr auto AvoidanceManagerClassName = 0x1b0; // FSoftClassPath
		constexpr auto AvoidanceManagerClass = 0x1c8; // UAvoidanceManager*
		constexpr auto AIControllerClassName = 0x1d0; // FSoftClassPath
		constexpr auto PhysicsCollisionHandlerClass = 0x1e8; // UPhysicsCollisionHandler*
		constexpr auto PhysicsCollisionHandlerClassName = 0x1f0; // FSoftClassPath
		constexpr auto GameUserSettingsClassName = 0x208; // FSoftClassPath
		constexpr auto GameUserSettingsClass = 0x220; // UGameUserSettings*
		constexpr auto GameUserSettings = 0x228; // UGameUserSettings*
		constexpr auto LevelScriptActorClass = 0x230; // ALevelScriptActor*
		constexpr auto LevelScriptActorClassName = 0x238; // FSoftClassPath
		constexpr auto DefaultBlueprintBaseClassName = 0x250; // FSoftClassPath
		constexpr auto GameSingletonClassName = 0x268; // FSoftClassPath
		constexpr auto GameSingleton = 0x280; // UObject*
		constexpr auto AssetManagerClassName = 0x288; // FSoftClassPath
		constexpr auto AssetManager = 0x2a0; // UAssetManager*
		constexpr auto DefaultTexture = 0x2a8; // UTexture2D*
		constexpr auto DefaultTextureName = 0x2b0; // FSoftObjectPath
		constexpr auto DefaultDiffuseTexture = 0x2c8; // UTexture*
		constexpr auto DefaultDiffuseTextureName = 0x2d0; // FSoftObjectPath
		constexpr auto DefaultBSPVertexTexture = 0x2e8; // UTexture2D*
		constexpr auto DefaultBSPVertexTextureName = 0x2f0; // FSoftObjectPath
		constexpr auto HighFrequencyNoiseTexture = 0x308; // UTexture2D*
		constexpr auto HighFrequencyNoiseTextureName = 0x310; // FSoftObjectPath
		constexpr auto DefaultBokehTexture = 0x328; // UTexture2D*
		constexpr auto DefaultBokehTextureName = 0x330; // FSoftObjectPath
		constexpr auto DefaultBloomKernelTexture = 0x348; // UTexture2D*
		constexpr auto DefaultBloomKernelTextureName = 0x350; // FSoftObjectPath
		constexpr auto WireframeMaterial = 0x368; // UMaterial*
		constexpr auto WireframeMaterialName = 0x370; // FString
		constexpr auto DebugMeshMaterial = 0x380; // UMaterial*
		constexpr auto DebugMeshMaterialName = 0x388; // FSoftObjectPath
		constexpr auto EmissiveMeshMaterial = 0x3a0; // UMaterial*
		constexpr auto EmissiveMeshMaterialName = 0x3a8; // FSoftObjectPath
		constexpr auto LevelColorationLitMaterial = 0x3c0; // UMaterial*
		constexpr auto LevelColorationLitMaterialName = 0x3c8; // FString
		constexpr auto LevelColorationUnlitMaterial = 0x3d8; // UMaterial*
		constexpr auto LevelColorationUnlitMaterialName = 0x3e0; // FString
		constexpr auto LightingTexelDensityMaterial = 0x3f0; // UMaterial*
		constexpr auto LightingTexelDensityName = 0x3f8; // FString
		constexpr auto ShadedLevelColorationLitMaterial = 0x408; // UMaterial*
		constexpr auto ShadedLevelColorationLitMaterialName = 0x410; // FString
		constexpr auto ShadedLevelColorationUnlitMaterial = 0x420; // UMaterial*
		constexpr auto ShadedLevelColorationUnlitMaterialName = 0x428; // FString
		constexpr auto RemoveSurfaceMaterial = 0x438; // UMaterial*
		constexpr auto RemoveSurfaceMaterialName = 0x440; // FSoftObjectPath
		constexpr auto VertexColorMaterial = 0x458; // UMaterial*
		constexpr auto VertexColorMaterialName = 0x460; // FString
		constexpr auto VertexColorViewModeMaterial_ColorOnly = 0x470; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_ColorOnly = 0x478; // FString
		constexpr auto VertexColorViewModeMaterial_AlphaAsColor = 0x488; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_AlphaAsColor = 0x490; // FString
		constexpr auto VertexColorViewModeMaterial_RedOnly = 0x4a0; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_RedOnly = 0x4a8; // FString
		constexpr auto VertexColorViewModeMaterial_GreenOnly = 0x4b8; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_GreenOnly = 0x4c0; // FString
		constexpr auto VertexColorViewModeMaterial_BlueOnly = 0x4d0; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_BlueOnly = 0x4d8; // FString
		constexpr auto DebugEditorMaterialName = 0x4e8; // FSoftObjectPath
		constexpr auto ConstraintLimitMaterial = 0x500; // UMaterial*
		constexpr auto ConstraintLimitMaterialX = 0x508; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialXAxis = 0x510; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialY = 0x518; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialYAxis = 0x520; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialZ = 0x528; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialZAxis = 0x530; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialPrismatic = 0x538; // UMaterialInstanceDynamic*
		constexpr auto InvalidLightmapSettingsMaterial = 0x540; // UMaterial*
		constexpr auto InvalidLightmapSettingsMaterialName = 0x548; // FSoftObjectPath
		constexpr auto PreviewShadowsIndicatorMaterial = 0x560; // UMaterial*
		constexpr auto PreviewShadowsIndicatorMaterialName = 0x568; // FSoftObjectPath
		constexpr auto ArrowMaterial = 0x580; // UMaterial*
		constexpr auto ArrowMaterialYellow = 0x588; // UMaterialInstanceDynamic*
		constexpr auto ArrowMaterialName = 0x590; // FSoftObjectPath
		constexpr auto LightingOnlyBrightness = 0x5a8; // FLinearColor
		constexpr auto ShaderComplexityColors = 0x5b8; // TArray<FLinearColor>
		constexpr auto QuadComplexityColors = 0x5c8; // TArray<FLinearColor>
		constexpr auto LightComplexityColors = 0x5d8; // TArray<FLinearColor>
		constexpr auto StationaryLightOverlapColors = 0x5e8; // TArray<FLinearColor>
		constexpr auto LODColorationColors = 0x5f8; // TArray<FLinearColor>
		constexpr auto HLODColorationColors = 0x608; // TArray<FLinearColor>
		constexpr auto StreamingAccuracyColors = 0x618; // TArray<FLinearColor>
		constexpr auto MaxPixelShaderAdditiveComplexityCount = 0x628; // float
		constexpr auto MaxES3PixelShaderAdditiveComplexityCount = 0x62c; // float
		constexpr auto MinLightMapDensity = 0x630; // float
		constexpr auto IdealLightMapDensity = 0x634; // float
		constexpr auto MaxLightMapDensity = 0x638; // float
		constexpr auto bRenderLightMapDensityGrayscale = 0x63c; // char : 1
		constexpr auto RenderLightMapDensityGrayscaleScale = 0x640; // float
		constexpr auto RenderLightMapDensityColorScale = 0x644; // float
		constexpr auto LightMapDensityVertexMappedColor = 0x648; // FLinearColor
		constexpr auto LightMapDensitySelectedColor = 0x658; // FLinearColor
		constexpr auto StatColorMappings = 0x668; // TArray<FStatColorMapping>
		constexpr auto DefaultPhysMaterial = 0x678; // UPhysicalMaterial*
		constexpr auto DefaultPhysMaterialName = 0x680; // FSoftObjectPath
		constexpr auto ActiveGameNameRedirects = 0x698; // TArray<FGameNameRedirect>
		constexpr auto ActiveClassRedirects = 0x6a8; // TArray<FClassRedirect>
		constexpr auto ActivePluginRedirects = 0x6b8; // TArray<FPluginRedirect>
		constexpr auto ActiveStructRedirects = 0x6c8; // TArray<FStructRedirect>
		constexpr auto PreIntegratedSkinBRDFTexture = 0x6d8; // UTexture2D*
		constexpr auto PreIntegratedSkinBRDFTextureName = 0x6e0; // FSoftObjectPath
		constexpr auto BlueNoiseTexture = 0x6f8; // UTexture2D*
		constexpr auto BlueNoiseTextureName = 0x700; // FSoftObjectPath
		constexpr auto MiniFontTexture = 0x718; // UTexture2D*
		constexpr auto MiniFontTextureName = 0x720; // FSoftObjectPath
		constexpr auto WeightMapPlaceholderTexture = 0x738; // UTexture*
		constexpr auto WeightMapPlaceholderTextureName = 0x740; // FSoftObjectPath
		constexpr auto LightMapDensityTexture = 0x758; // UTexture2D*
		constexpr auto LightMapDensityTextureName = 0x760; // FSoftObjectPath
		constexpr auto GameViewport = 0x780; // UGameViewportClient*
		constexpr auto DeferredCommands = 0x788; // TArray<FString>
		constexpr auto NearClipPlane = 0x798; // float
		constexpr auto bSubtitlesEnabled = 0x79c; // char : 1
		constexpr auto bSubtitlesForcedOff = 0x79c; // char : 1
		constexpr auto MaximumLoopIterationCount = 0x7a0; // int32_t
		constexpr auto bCanBlueprintsTickByDefault = 0x7a4; // char : 1
		constexpr auto bOptimizeAnimBlueprintMemberVariableAccess = 0x7a4; // char : 1
		constexpr auto bAllowMultiThreadedAnimationUpdate = 0x7a4; // char : 1
		constexpr auto bEnableEditorPSysRealtimeLOD = 0x7a4; // char : 1
		constexpr auto bSmoothFrameRate = 0x7a4; // char : 1
		constexpr auto bUseFixedFrameRate = 0x7a4; // char : 1
		constexpr auto FixedFrameRate = 0x7a8; // float
		constexpr auto SmoothedFrameRateRange = 0x7ac; // FFloatRange
		constexpr auto CustomTimeStep = 0x7c0; // UEngineCustomTimeStep*
		constexpr auto CustomTimeStepClassName = 0x7e8; // FSoftClassPath
		constexpr auto TimecodeProvider = 0x800; // UTimecodeProvider*
		constexpr auto TimecodeProviderClassName = 0x828; // FSoftClassPath
		constexpr auto bGenerateDefaultTimecode = 0x840; // bool
		constexpr auto GenerateDefaultTimecodeFrameRate = 0x844; // FFrameRate
		constexpr auto GenerateDefaultTimecodeFrameDelay = 0x84c; // float
		constexpr auto bCheckForMultiplePawnsSpawnedInAFrame = 0x850; // char : 1
		constexpr auto NumPawnsAllowedToBeSpawnedInAFrame = 0x854; // int32_t
		constexpr auto bShouldGenerateLowQualityLightmaps = 0x858; // char : 1
		constexpr auto C_WorldBox = 0x85c; // FColor
		constexpr auto C_BrushWire = 0x860; // FColor
		constexpr auto C_AddWire = 0x864; // FColor
		constexpr auto C_SubtractWire = 0x868; // FColor
		constexpr auto C_SemiSolidWire = 0x86c; // FColor
		constexpr auto C_NonSolidWire = 0x870; // FColor
		constexpr auto C_WireBackground = 0x874; // FColor
		constexpr auto C_ScaleBoxHi = 0x878; // FColor
		constexpr auto C_VolumeCollision = 0x87c; // FColor
		constexpr auto C_BSPCollision = 0x880; // FColor
		constexpr auto C_OrthoBackground = 0x884; // FColor
		constexpr auto C_Volume = 0x888; // FColor
		constexpr auto C_BrushShape = 0x88c; // FColor
		constexpr auto StreamingDistanceFactor = 0x890; // float
		constexpr auto GameScreenshotSaveDirectory = 0x898; // FDirectoryPath
		constexpr auto TransitionType = 0x8a8; // ETransitionType
		constexpr auto TransitionDescription = 0x8b0; // FString
		constexpr auto TransitionGameMode = 0x8c0; // FString
		constexpr auto bAllowMatureLanguage = 0x8d0; // char : 1
		constexpr auto CameraRotationThreshold = 0x8d4; // float
		constexpr auto CameraTranslationThreshold = 0x8d8; // float
		constexpr auto PrimitiveProbablyVisibleTime = 0x8dc; // float
		constexpr auto MaxOcclusionPixelsFraction = 0x8e0; // float
		constexpr auto bPauseOnLossOfFocus = 0x8e4; // char : 1
		constexpr auto MaxParticleResize = 0x8e8; // int32_t
		constexpr auto MaxParticleResizeWarn = 0x8ec; // int32_t
		constexpr auto PendingDroppedNotes = 0x8f0; // TArray<FDropNoteInfo>
		constexpr auto NetClientTicksPerSecond = 0x900; // float
		constexpr auto DisplayGamma = 0x904; // float
		constexpr auto MinDesiredFrameRate = 0x908; // float
		constexpr auto DefaultSelectedMaterialColor = 0x90c; // FLinearColor
		constexpr auto SelectedMaterialColor = 0x91c; // FLinearColor
		constexpr auto SelectionOutlineColor = 0x92c; // FLinearColor
		constexpr auto SubduedSelectionOutlineColor = 0x93c; // FLinearColor
		constexpr auto SelectedMaterialColorOverride = 0x94c; // FLinearColor
		constexpr auto bIsOverridingSelectedColor = 0x95c; // bool
		constexpr auto bEnableOnScreenDebugMessages = 0x960; // char : 1
		constexpr auto bEnableOnScreenDebugMessagesDisplay = 0x960; // char : 1
		constexpr auto bSuppressMapWarnings = 0x960; // char : 1
		constexpr auto bDisableAILogging = 0x960; // char : 1
		constexpr auto bEnableVisualLogRecordingOnStart = 0x964; // uint32_t
		constexpr auto ScreenSaverInhibitorSemaphore = 0x968; // int32_t
		constexpr auto bLockReadOnlyLevels = 0x96c; // char : 1
		constexpr auto ParticleEventManagerClassPath = 0x970; // FString
		constexpr auto SelectionHighlightIntensity = 0x980; // float
		constexpr auto BSPSelectionHighlightIntensity = 0x984; // float
		constexpr auto SelectionHighlightIntensityBillboards = 0x988; // float
		constexpr auto NetDriverDefinitions = 0xbf8; // TArray<FNetDriverDefinition>
		constexpr auto ServerActors = 0xc08; // TArray<FString>
		constexpr auto RuntimeServerActors = 0xc18; // TArray<FString>
		constexpr auto NetErrorLogInterval = 0xc28; // float
		constexpr auto bStartedLoadMapMovie = 0xc2c; // char : 1
		constexpr auto NextWorldContextHandle = 0xc48; // int32_t
	}

	namespace n_UGizmoPlaneScaleParameterSource { // : UGizmoBaseVec2ParameterSource
		constexpr auto AxisSource = 0x90; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0xa0; // TScriptInterface<IGizmoTransformSource>
		constexpr auto ScaleMultiplier = 0xb0; // float
		constexpr auto Parameter = 0xb4; // FVector2D
		constexpr auto LastChange = 0xbc; // FGizmoVec2ParameterChange
		constexpr auto CurScaleOrigin = 0xcc; // FVector
		constexpr auto CurScaleNormal = 0xd8; // FVector
		constexpr auto CurScaleAxisX = 0xe4; // FVector
		constexpr auto CurScaleAxisY = 0xf0; // FVector
		constexpr auto InitialTransform = 0x100; // FTransform
	}

	namespace n_UMovieScene3DConstraintTrack { // : UMovieSceneTrack
		constexpr auto ConstraintSections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_UDistributionFloatConstant { // : UDistributionFloat
		constexpr auto Constant = 0x38; // float
	}

	namespace n_USubmixEffectReverbPreset { // : USoundEffectSubmixPreset
		constexpr auto Settings = 0xd0; // FSubmixEffectReverbSettings
	}

	namespace n_USkeletalMeshComponent { // : USkinnedMeshComponent
		constexpr auto AnimBlueprintGeneratedClass = 0x690; // UObject*
		constexpr auto AnimClass = 0x698; // UAnimInstance*
		constexpr auto AnimScriptInstance = 0x6a0; // UAnimInstance*
		constexpr auto PostProcessAnimInstance = 0x6a8; // UAnimInstance*
		constexpr auto AnimationData = 0x6b0; // FSingleAnimationPlayData
		constexpr auto RootBoneTranslation = 0x6d8; // FVector
		constexpr auto LineCheckBoundsScale = 0x6e4; // FVector
		constexpr auto LinkedInstances = 0x720; // TArray<UAnimInstance*>
		constexpr auto CachedBoneSpaceTransforms = 0x730; // TArray<FTransform>
		constexpr auto CachedComponentSpaceTransforms = 0x740; // TArray<FTransform>
		constexpr auto GlobalAnimRateScale = 0x8a0; // float
		constexpr auto KinematicBonesUpdateType = 0x8a4; // EKinematicBonesUpdateToPhysics
		constexpr auto PhysicsTransformUpdateMode = 0x8a5; // EPhysicsTransformUpdateMode
		constexpr auto AnimationMode = 0x8a7; // EAnimationMode
		constexpr auto bDisablePostProcessBlueprint = 0x8a9; // char : 1
		constexpr auto bUpdateOverlapsOnAnimationFinalize = 0x8a9; // char : 1
		constexpr auto bHasValidBodies = 0x8a9; // char : 1
		constexpr auto bBlendPhysics = 0x8a9; // char : 1
		constexpr auto bEnablePhysicsOnDedicatedServer = 0x8a9; // char : 1
		constexpr auto bUpdateJointsFromAnimation = 0x8a9; // char : 1
		constexpr auto bDisableClothSimulation = 0x8aa; // char : 1
		constexpr auto bDisableRigidBodyAnimNode = 0x8b0; // char : 1
		constexpr auto bAllowAnimCurveEvaluation = 0x8b0; // char : 1
		constexpr auto bDisableAnimCurves = 0x8b0; // char : 1
		constexpr auto bCollideWithEnvironment = 0x8b0; // char : 1
		constexpr auto bCollideWithAttachedChildren = 0x8b1; // char : 1
		constexpr auto bLocalSpaceSimulation = 0x8b1; // char : 1
		constexpr auto bResetAfterTeleport = 0x8b1; // char : 1
		constexpr auto bDeferKinematicBoneUpdate = 0x8b1; // char : 1
		constexpr auto bNoSkeletonUpdate = 0x8b1; // char : 1
		constexpr auto bPauseAnims = 0x8b1; // char : 1
		constexpr auto bUseRefPoseOnInitAnim = 0x8b1; // char : 1
		constexpr auto bEnablePerPolyCollision = 0x8b2; // char : 1
		constexpr auto bForceRefpose = 0x8b2; // char : 1
		constexpr auto bOnlyAllowAutonomousTickPose = 0x8b2; // char : 1
		constexpr auto bIsAutonomousTickPose = 0x8b2; // char : 1
		constexpr auto bOldForceRefPose = 0x8b2; // char : 1
		constexpr auto bShowPrePhysBones = 0x8b2; // char : 1
		constexpr auto bRequiredBonesUpToDate = 0x8b2; // char : 1
		constexpr auto bAnimTreeInitialised = 0x8b2; // char : 1
		constexpr auto bIncludeComponentLocationIntoBounds = 0x8b3; // char : 1
		constexpr auto bEnableLineCheckWithBounds = 0x8b3; // char : 1
		constexpr auto bUseBendingElements = 0x8b3; // char : 1
		constexpr auto bUseTetrahedralConstraints = 0x8b3; // char : 1
		constexpr auto bUseThinShellVolumeConstraints = 0x8b3; // char : 1
		constexpr auto bUseSelfCollisions = 0x8b3; // char : 1
		constexpr auto bUseContinuousCollisionDetection = 0x8b3; // char : 1
		constexpr auto bPropagateCurvesToSlaves = 0x8b3; // char : 1
		constexpr auto bSkipKinematicUpdateWhenInterpolating = 0x8b4; // char : 1
		constexpr auto bSkipBoundsUpdateWhenInterpolating = 0x8b4; // char : 1
		constexpr auto bNeedsQueuedAnimEventsDispatched = 0x8b4; // char : 1
		constexpr auto CachedAnimCurveUidVersion = 0x8b6; // uint16_t
		constexpr auto MassMode = 0x8b8; // EClothMassMode
		constexpr auto UniformMass = 0x8bc; // float
		constexpr auto TotalMass = 0x8c0; // float
		constexpr auto Density = 0x8c4; // float
		constexpr auto MinPerParticleMass = 0x8c8; // float
		constexpr auto ClothBlendWeight = 0x8cc; // float
		constexpr auto EdgeStiffness = 0x8d0; // float
		constexpr auto BendingStiffness = 0x8d4; // float
		constexpr auto AreaStiffness = 0x8d8; // float
		constexpr auto VolumeStiffness = 0x8dc; // float
		constexpr auto StrainLimitingStiffness = 0x8e0; // float
		constexpr auto ShapeTargetStiffness = 0x8e4; // float
		constexpr auto bWaitForParallelClothTask = 0x8e8; // bool
		constexpr auto DisallowedAnimCurves = 0x8f0; // TArray<FName>
		constexpr auto BodySetup = 0x900; // UBodySetup*
		constexpr auto OnConstraintBroken = 0x910; // FMulticastInlineDelegate
		constexpr auto ClothingSimulationFactory = 0x920; // UClothingSimulationFactory*
		constexpr auto TeleportDistanceThreshold = 0x9f8; // float
		constexpr auto TeleportRotationThreshold = 0x9fc; // float
		constexpr auto LastPoseTickFrame = 0xa08; // uint32_t
		constexpr auto ClothingInteractor = 0xa60; // UClothingSimulationInteractor*
		constexpr auto OnAnimInitialized = 0xb30; // FMulticastInlineDelegate
	}

	namespace n_AController { // : AActor
		constexpr auto PlayerState = 0x228; // APlayerState*
		constexpr auto OnInstigatedAnyDamage = 0x238; // FMulticastInlineDelegate
		constexpr auto StateName = 0x248; // FName
		constexpr auto Pawn = 0x250; // APawn*
		constexpr auto Character = 0x260; // ACharacter*
		constexpr auto TransformComponent = 0x268; // USceneComponent*
		constexpr auto ControlRotation = 0x288; // FRotator
		constexpr auto bAttachToPawn = 0x294; // char : 1
	}

	namespace n_UWidgetNavigation { // : UObject
		constexpr auto Up = 0x28; // FWidgetNavigationData
		constexpr auto Down = 0x4c; // FWidgetNavigationData
		constexpr auto Left = 0x70; // FWidgetNavigationData
		constexpr auto Right = 0x94; // FWidgetNavigationData
		constexpr auto Next = 0xb8; // FWidgetNavigationData
		constexpr auto Previous = 0xdc; // FWidgetNavigationData
	}

	namespace n_UAudioAnalyzerNRT { // : UAudioAnalyzerAsset
		constexpr auto Sound = 0x28; // USoundWave*
		constexpr auto DurationInSeconds = 0x30; // float
	}

	namespace n_ABP_Orb_C { // : AActor
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto NS_Ether_Jelly_Orb = 0x228; // UNiagaraComponent*
		constexpr auto NS_Ether_Jelly_Core_Orb = 0x230; // UNiagaraComponent*
		constexpr auto Sphere = 0x238; // UStaticMeshComponent*
		constexpr auto DefaultSceneRoot = 0x240; // USceneComponent*
		constexpr auto Changes_on_hit_NewTrack_0_C46AB210411532D672C3879E6EC24111 = 0x248; // FLinearColor
		constexpr auto Changes_on_hit_Niagara_colour_C46AB210411532D672C3879E6EC24111 = 0x258; // FLinearColor
		constexpr auto Changes_on_hit_Red_to_black_C46AB210411532D672C3879E6EC24111 = 0x268; // FVector
		constexpr auto Changes_on_hit_Sine_speed_C46AB210411532D672C3879E6EC24111 = 0x274; // float
		constexpr auto Changes_on_hit_Alpha_C46AB210411532D672C3879E6EC24111 = 0x278; // float
		constexpr auto Changes_on_hit__Direction_C46AB210411532D672C3879E6EC24111 = 0x27c; // ETimelineDirection
		constexpr auto Changes on hit = 0x280; // UTimelineComponent*
		constexpr auto Changes_on_finish_Sine_speed_601D385948BDFE4CC0209E8B889D7C75 = 0x288; // float
		constexpr auto Changes_on_finish__Direction_601D385948BDFE4CC0209E8B889D7C75 = 0x28c; // ETimelineDirection
		constexpr auto Changes on finish = 0x290; // UTimelineComponent*
		constexpr auto Damaged = 0x298; // bool
	}

	namespace n_UBlackboardComponent { // : UActorComponent
		constexpr auto BrainComp = 0xb0; // UBrainComponent*
		constexpr auto DefaultBlackboardAsset = 0xb8; // UBlackboardData*
		constexpr auto BlackboardAsset = 0xc0; // UBlackboardData*
		constexpr auto KeyInstances = 0xe8; // TArray<UBlackboardKeyType*>
	}

	namespace n_UWB_OptionsSliderWeight_C { // : UMOOptionSliderWidget
		constexpr auto UberGraphFrame = 0x330; // FPointerToUberGraphFrame
		constexpr auto Input = 0x338; // UImage*
		constexpr auto Percentage_Text = 0x340; // UTextBlock*
		constexpr auto Shadow = 0x348; // UImage*
		constexpr auto SizeBox_1 = 0x350; // USizeBox*
		constexpr auto Underline = 0x358; // UImage*
		constexpr auto fMinValue = 0x360; // float
		constexpr auto fMaxValue = 0x364; // float
		constexpr auto fOptionsSliderValue = 0x368; // float
		constexpr auto fOptionsSliderModifier = 0x36c; // float
		constexpr auto AppendEndOfStringWith = 0x370; // FString
		constexpr auto bRoundOutVariable = 0x380; // bool
		constexpr auto fPrecisionPower = 0x384; // float
		constexpr auto ToolTip = 0x388; // FText
		constexpr auto TestVariable = 0x3a0; // float
		constexpr auto BackgroundIsVisible = 0x3a4; // bool
	}

	namespace n_UParticleModuleAccelerationDragScaleOverLife { // : UParticleModuleAccelerationBase
		constexpr auto DragScale = 0x38; // UDistributionFloat*
		constexpr auto DragScaleRaw = 0x40; // FRawDistributionFloat
	}

	namespace n_UDistributionVectorUniformCurve { // : UDistributionVector
		constexpr auto ConstantCurve = 0x38; // FInterpCurveTwoVectors
		constexpr auto bLockAxes1 = 0x50; // char : 1
		constexpr auto bLockAxes2 = 0x50; // char : 1
		constexpr auto LockedAxes = 0x54; // EDistributionVectorLockFlags [0x2]
		constexpr auto MirrorFlags = 0x56; // EDistributionVectorMirrorFlags [0x3]
		constexpr auto bUseExtremes = 0x5c; // char : 1
	}

	namespace n_UBTTaskNode { // : UBTNode
		constexpr auto Services = 0x58; // TArray<UBTService*>
		constexpr auto bIgnoreRestartSelf = 0x68; // char : 1
	}

	namespace n_UWB_MOCharCreationBloodlinePanel_C { // : UMOCharCreationBloodlinePanel
		constexpr auto BloodlineBackgroundLines = 0x408; // UImage*
		constexpr auto PanelTextBackground = 0x410; // UImage*
		constexpr auto WB_MO_Scrollbox_Arrow_Down = 0x418; // UWB_MO_Scrollbox_Arrow_Down_C*
		constexpr auto WB_MO_Scrollbox_Arrow_Up = 0x420; // UWB_MO_Scrollbox_Arrow_Up_C*
	}

	namespace n_UMOCharCreationComboBox { // : UMOUserWidget
		constexpr auto pMOComboBoxString = 0x2c8; // UMOComboBoxString*
		constexpr auto InitializeToolTipText = 0x2d0; // FText
		constexpr auto iEntryIndex = 0x2e8; // int32_t
		constexpr auto pMyPanel = 0x2f0; // UMOCharCreationBloodlinePanel*
	}

	namespace n_URandomVector { // : UFieldNodeVector
		constexpr auto Magnitude = 0xb0; // float
	}

	namespace n_UAnimSharingInstance { // : UObject
		constexpr auto RegisteredActors = 0x28; // TArray<AActor*>
		constexpr auto StateProcessor = 0x88; // UAnimationSharingStateProcessor*
		constexpr auto UsedAnimationSequences = 0xc8; // TArray<UAnimSequence*>
		constexpr auto StateEnum = 0xe8; // UEnum*
		constexpr auto SharingActor = 0xf0; // AActor*
	}

	namespace n_UMaterialExpressionAntialiasedTextureMask { // : UMaterialExpressionTextureSampleParameter2D
		constexpr auto Threshold = 0x80; // float
		constexpr auto Channel = 0x84; // ETextureColorChannel
	}

	namespace n_AWaterBodyOcean { // : AWaterBody
		constexpr auto OceanGenerator = 0xdd0; // UOceanGenerator*
		constexpr auto CollisionExtents = 0xdd8; // FVector
		constexpr auto HeightOffset = 0xde4; // float
	}

	namespace n_UAIAsyncTaskBlueprintProxy { // : UObject
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFail = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UMOCharCreationInfoPanel { // : UMOCharCreationPanel
		constexpr auto pInfoEntry_Clade = 0x2d0; // UMOCharCreationInfoEntry*
		constexpr auto pInfoEntry_Gender = 0x2d8; // UMOCharCreationInfoEntry*
		constexpr auto pInfoEntry_DominantAncestry = 0x2e0; // UMOCharCreationInfoEntry*
		constexpr auto pInfoEntry_SecondaryAncestry = 0x2e8; // UMOCharCreationInfoEntry*
		constexpr auto pInfoEntry_Str = 0x2f0; // UMOCharCreationInfoEntry*
		constexpr auto pInfoEntry_Dex = 0x2f8; // UMOCharCreationInfoEntry*
		constexpr auto pInfoEntry_Con = 0x300; // UMOCharCreationInfoEntry*
		constexpr auto pInfoEntry_Int = 0x308; // UMOCharCreationInfoEntry*
		constexpr auto pInfoEntry_Psy = 0x310; // UMOCharCreationInfoEntry*
		constexpr auto pInfoEntry_Size = 0x318; // UMOCharCreationInfoEntry*
		constexpr auto pInfoEntry_Health = 0x320; // UMOCharCreationInfoEntry*
		constexpr auto pInfoEntry_Mana = 0x328; // UMOCharCreationInfoEntry*
		constexpr auto pInfoEntry_Stamina = 0x330; // UMOCharCreationInfoEntry*
		constexpr auto pInfoEntry_MovementSpeed = 0x338; // UMOCharCreationInfoEntry*
		constexpr auto pInfoEntry_AttributePoints = 0x340; // UMOCharCreationInfoEntry*
		constexpr auto pInfoEntry_DamageBonus = 0x348; // UMOCharCreationInfoEntry*
		constexpr auto pCladeImage_Human = 0x350; // UImage*
		constexpr auto pCladeImage_Alvarin = 0x358; // UImage*
		constexpr auto pCladeImage_Oghmir = 0x360; // UImage*
		constexpr auto pCladeImage_Thursar = 0x368; // UImage*
	}

	namespace n_UMOScrollBoxPlaceItems { // : UMOUserWidget
		constexpr auto bHighlighted = 0x2c8; // bool
		constexpr auto bScrollBoxAlwaysVisible = 0x2c9; // bool
		constexpr auto InitOverlaySize = 0x2cc; // FIntPoint
		constexpr auto pRightClickOverrideParent = 0x2d8; // UMOUserWidget*
		constexpr auto cMOItemListEntryClass = 0x2e0; // UMOItemListEntry*
		constexpr auto pMOScrollBox = 0x2e8; // UMOScrollBox*
		constexpr auto vItemListEntries = 0x2f0; // TArray<UMOItemListEntry*>
	}

	namespace n_UMOVendorAmount { // : UMOUserWidget
		constexpr auto pMOButton_Accept = 0x2c8; // UMOButtonMedium*
		constexpr auto pTextBlock_TotalCost = 0x2d0; // UTextBlock*
		constexpr auto MOButton_Close = 0x2d8; // UMOButtonClose*
		constexpr auto bHasAcceptedTrade = 0x2e0; // bool
	}

	namespace n_UPhysicsSettingsCore { // : UDeveloperSettings
		constexpr auto DefaultGravityZ = 0x38; // float
		constexpr auto DefaultTerminalVelocity = 0x3c; // float
		constexpr auto DefaultFluidFriction = 0x40; // float
		constexpr auto SimulateScratchMemorySize = 0x44; // int32_t
		constexpr auto RagdollAggregateThreshold = 0x48; // int32_t
		constexpr auto TriangleMeshTriangleMinAreaThreshold = 0x4c; // float
		constexpr auto bEnableShapeSharing = 0x50; // bool
		constexpr auto bEnablePCM = 0x51; // bool
		constexpr auto bEnableStabilization = 0x52; // bool
		constexpr auto bWarnMissingLocks = 0x53; // bool
		constexpr auto bEnable2DPhysics = 0x54; // bool
		constexpr auto bDefaultHasComplexCollision = 0x55; // bool
		constexpr auto BounceThresholdVelocity = 0x58; // float
		constexpr auto FrictionCombineMode = 0x5c; // EFrictionCombineMode
		constexpr auto RestitutionCombineMode = 0x5d; // EFrictionCombineMode
		constexpr auto MaxAngularVelocity = 0x60; // float
		constexpr auto MaxDepenetrationVelocity = 0x64; // float
		constexpr auto ContactOffsetMultiplier = 0x68; // float
		constexpr auto MinContactOffset = 0x6c; // float
		constexpr auto MaxContactOffset = 0x70; // float
		constexpr auto bSimulateSkeletalMeshOnDedicatedServer = 0x74; // bool
		constexpr auto DefaultShapeComplexity = 0x75; // ECollisionTraceFlag
		constexpr auto SolverOptions = 0x78; // FChaosSolverConfiguration
	}

	namespace n_UControlPointMeshComponent { // : UStaticMeshComponent
		constexpr auto VirtualTextureMainPassMaxDrawDistance = 0x4d0; // float
	}

	namespace n_UMOBrokerMyOrdersPanel { // : UMOBrokerPanel
		constexpr auto pMOScrollBox_Selling = 0x2d8; // UMOScrollBox*
		constexpr auto pMOScrollBox_Buying = 0x2e0; // UMOScrollBox*
		constexpr auto cMOItemListEntryClass = 0x2e8; // UMOBrokerItemListEntry*
		constexpr auto cMOPetListEntryClass = 0x2f0; // UMOBrokerPetListEntry*
		constexpr auto pMOBrokerPickupItemsPanel = 0x2f8; // UMOBrokerPickupItems*
		constexpr auto vItemEntriesSelling = 0x300; // TArray<UMOBrokerItemListEntry*>
		constexpr auto vItemEntriesBuying = 0x310; // TArray<UMOBrokerItemListEntry*>
		constexpr auto vPetEntriesSelling = 0x320; // TArray<UMOBrokerPetListEntry*>
	}

	namespace n_UProjectileMovementComponent { // : UMovementComponent
		constexpr auto InitialSpeed = 0xf0; // float
		constexpr auto MaxSpeed = 0xf4; // float
		constexpr auto bRotationFollowsVelocity = 0xf8; // char : 1
		constexpr auto bRotationRemainsVertical = 0xf8; // char : 1
		constexpr auto bShouldBounce = 0xf8; // char : 1
		constexpr auto bInitialVelocityInLocalSpace = 0xf8; // char : 1
		constexpr auto bForceSubStepping = 0xf8; // char : 1
		constexpr auto bSimulationEnabled = 0xf8; // char : 1
		constexpr auto bSweepCollision = 0xf8; // char : 1
		constexpr auto bIsHomingProjectile = 0xf8; // char : 1
		constexpr auto bBounceAngleAffectsFriction = 0xf9; // char : 1
		constexpr auto bIsSliding = 0xf9; // char : 1
		constexpr auto bInterpMovement = 0xf9; // char : 1
		constexpr auto bInterpRotation = 0xf9; // char : 1
		constexpr auto PreviousHitTime = 0xfc; // float
		constexpr auto PreviousHitNormal = 0x100; // FVector
		constexpr auto ProjectileGravityScale = 0x10c; // float
		constexpr auto Buoyancy = 0x110; // float
		constexpr auto Bounciness = 0x114; // float
		constexpr auto Friction = 0x118; // float
		constexpr auto BounceVelocityStopSimulatingThreshold = 0x11c; // float
		constexpr auto MinFrictionFraction = 0x120; // float
		constexpr auto OnProjectileBounce = 0x128; // FMulticastInlineDelegate
		constexpr auto OnProjectileStop = 0x138; // FMulticastInlineDelegate
		constexpr auto HomingAccelerationMagnitude = 0x148; // float
		constexpr auto HomingTargetComponent = 0x14c; // TWeakObjectPtr<USceneComponent>
		constexpr auto MaxSimulationTimeStep = 0x154; // float
		constexpr auto MaxSimulationIterations = 0x158; // int32_t
		constexpr auto BounceAdditionalIterations = 0x15c; // int32_t
		constexpr auto InterpLocationTime = 0x160; // float
		constexpr auto InterpRotationTime = 0x164; // float
		constexpr auto InterpLocationMaxLagDistance = 0x168; // float
		constexpr auto InterpLocationSnapToTargetDistance = 0x16c; // float
	}

	namespace n_UMovieSceneCameraAnimTrack { // : UMovieSceneNameableTrack
		constexpr auto CameraAnimSections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_AMOAudioComponentPoolSubsystemActor { // : AActor
		constexpr auto ActiveEffectsComponents = 0x220; // TArray<FMOAudioComponentPoolEntry>
		constexpr auto ActiveVoiceComponents = 0x230; // TArray<FMOAudioComponentPoolEntry>
		constexpr auto InactiveAudioComponents = 0x240; // TArray<UAudioComponent*>
	}

	namespace n_UStreamableRenderAsset { // : UObject
		constexpr auto ForceMipLevelsToBeResidentTimestamp = 0x40; // double
		constexpr auto NumCinematicMipLevels = 0x48; // int32_t
		constexpr auto StreamingIndex = 0x4c; // int32_t
		constexpr auto CachedCombinedLODBias = 0x50; // int32_t
		constexpr auto NeverStream = 0x54; // char : 1
		constexpr auto bGlobalForceMipLevelsToBeResident = 0x54; // char : 1
		constexpr auto bHasStreamingUpdatePending = 0x54; // char : 1
		constexpr auto bForceMiplevelsToBeResident = 0x54; // char : 1
		constexpr auto bIgnoreStreamingMipBias = 0x54; // char : 1
		constexpr auto bUseCinematicMipLevels = 0x54; // char : 1
	}

	namespace n_UParticleModuleVelocity_Seeded { // : UParticleModuleVelocity
		constexpr auto RandomSeedInfo = 0xb0; // FParticleRandomSeedInfo
	}

	namespace n_UFoliageInstancedStaticMeshComponent { // : UHierarchicalInstancedStaticMeshComponent
		constexpr auto OnInstanceTakePointDamage = 0x668; // FMulticastInlineDelegate
		constexpr auto OnInstanceTakeRadialDamage = 0x678; // FMulticastInlineDelegate
		constexpr auto GenerationGuid = 0x688; // FGuid
	}

	namespace n_UOculusResourceHolder { // : UObject
		constexpr auto PokeAHoleMaterial = 0x28; // UMaterial*
	}

	namespace n_UNiagaraDataInterfaceRenderTargetVolume { // : UNiagaraDataInterfaceRWBase
		constexpr auto Size = 0xd8; // FIntVector
		constexpr auto OverrideRenderTargetFormat = 0xe4; // ETextureRenderTargetFormat
		constexpr auto bOverrideFormat = 0xe5; // char : 1
		constexpr auto RenderTargetUserParameter = 0xe8; // FNiagaraUserParameterBinding
		constexpr auto ManagedRenderTargets = 0x108; // TMap<uint64_t, UTextureRenderTargetVolume*>
	}

	namespace n_UDistributionFloatConstantCurve { // : UDistributionFloat
		constexpr auto ConstantCurve = 0x38; // FInterpCurveFloat
	}

	namespace n_UMOAnimationInstanceBow { // : UAnimInstance
		constexpr auto PullSequence = 0x2b8; // UAnimSequenceBase*
		constexpr auto StringRestDistance = 0x2c0; // float
		constexpr auto AttachedParentSkeletalMesh = 0x2c8; // USkeletalMeshComponent*
		constexpr auto StringPull = 0x2d0; // float
		constexpr auto StringMaxPullRange = 0x2d4; // float
		constexpr auto StringPullAlpha = 0x2d8; // float
		constexpr auto StringPullPosition = 0x2dc; // FVector
		constexpr auto ArrowScaleAlpha = 0x2e8; // float
		constexpr auto EnableBowPose = 0x2ec; // float
		constexpr auto BowLooksAtHand = 0x2f0; // float
	}

	namespace n_UEdGraph { // : UObject
		constexpr auto Schema = 0x28; // UEdGraphSchema*
		constexpr auto Nodes = 0x30; // TArray<UEdGraphNode*>
		constexpr auto bEditable = 0x40; // char : 1
		constexpr auto bAllowDeletion = 0x40; // char : 1
		constexpr auto bAllowRenaming = 0x40; // char : 1
	}

	namespace n_UPaperFlipbookComponent { // : UMeshComponent
		constexpr auto SourceFlipbook = 0x468; // UPaperFlipbook*
		constexpr auto Material = 0x470; // UMaterialInterface*
		constexpr auto PlayRate = 0x478; // float
		constexpr auto bLooping = 0x47c; // char : 1
		constexpr auto bReversePlayback = 0x47c; // char : 1
		constexpr auto bPlaying = 0x47c; // char : 1
		constexpr auto AccumulatedTime = 0x480; // float
		constexpr auto CachedFrameIndex = 0x484; // int32_t
		constexpr auto SpriteColor = 0x488; // FLinearColor
		constexpr auto CachedBodySetup = 0x498; // UBodySetup*
		constexpr auto OnFinishedPlaying = 0x4a0; // FMulticastInlineDelegate
	}

	namespace n_UMeshSelectionSet { // : USelectionSet
		constexpr auto Vertices = 0x40; // TArray<int32_t>
		constexpr auto Edges = 0x50; // TArray<int32_t>
		constexpr auto Faces = 0x60; // TArray<int32_t>
		constexpr auto Groups = 0x70; // TArray<int32_t>
	}

	namespace n_UWB_TabButtonNew_Options_C { // : UMOUserWidgetTabButtonNew
		constexpr auto UberGraphFrame = 0x310; // FPointerToUberGraphFrame
		constexpr auto ImageHovered = 0x318; // UImage*
		constexpr auto ImagePressed = 0x320; // UImage*
		constexpr auto Text = 0x328; // FText
	}

	namespace n_UMODataAssetTalkerTalk { // : UPrimaryDataAsset
		constexpr auto vConversationChains = 0x30; // TArray<FTalkerTreePair>
	}

	namespace n_UMovieSceneCameraAnimSection { // : UMovieSceneSection
		constexpr auto AnimData = 0xe8; // FMovieSceneCameraAnimSectionData
		constexpr auto CameraAnim = 0x108; // UCameraAnim*
		constexpr auto PlayRate = 0x110; // float
		constexpr auto PlayScale = 0x114; // float
		constexpr auto BlendInTime = 0x118; // float
		constexpr auto BlendOutTime = 0x11c; // float
		constexpr auto bLooping = 0x120; // bool
	}

	namespace n_UInterpTrackMove { // : UInterpTrack
		constexpr auto PosTrack = 0x70; // FInterpCurveVector
		constexpr auto EulerTrack = 0x88; // FInterpCurveVector
		constexpr auto LookupTrack = 0xa0; // FInterpLookupTrack
		constexpr auto LookAtGroupName = 0xb0; // FName
		constexpr auto LinCurveTension = 0xb8; // float
		constexpr auto AngCurveTension = 0xbc; // float
		constexpr auto bUseQuatInterpolation = 0xc0; // char : 1
		constexpr auto bShowArrowAtKeys = 0xc0; // char : 1
		constexpr auto bDisableMovement = 0xc0; // char : 1
		constexpr auto bShowTranslationOnCurveEd = 0xc0; // char : 1
		constexpr auto bShowRotationOnCurveEd = 0xc0; // char : 1
		constexpr auto bHide3DTrack = 0xc0; // char : 1
		constexpr auto RotMode = 0xc4; // EInterpTrackMoveRotMode
	}

	namespace n_AMOSpiritArm { // : AActor
		constexpr auto pParticleSystem_KauBeam = 0x228; // UNiagaraSystem*
		constexpr auto pParticleSystem_SpiritAttachedBeam = 0x230; // UNiagaraSystem*
	}

	namespace n_UEngineMessage { // : ULocalMessage
		constexpr auto FailedPlaceMessage = 0x28; // FString
		constexpr auto MaxedOutMessage = 0x38; // FString
		constexpr auto EnteredMessage = 0x48; // FString
		constexpr auto LeftMessage = 0x58; // FString
		constexpr auto GlobalNameChange = 0x68; // FString
		constexpr auto SpecEnteredMessage = 0x78; // FString
		constexpr auto NewPlayerMessage = 0x88; // FString
		constexpr auto NewSpecMessage = 0x98; // FString
	}

	namespace n_UMOMail { // : UMOUserWidget
		constexpr auto vPanels = 0x2c8; // TArray<UMOMailPanel*>
		constexpr auto cMOMailItemListEntryClass = 0x2d8; // UMOMailItemListEntry*
		constexpr auto vMOTabButtons = 0x2e0; // TArray<UMOUserWidgetTabButtonNew*>
		constexpr auto pMOTabButton_ReceiveMail = 0x2f0; // UMOUserWidgetTabButtonNew*
		constexpr auto pMOTabButton_SendMail = 0x2f8; // UMOUserWidgetTabButtonNew*
		constexpr auto pMOTabButton_OutgoingMail = 0x300; // UMOUserWidgetTabButtonNew*
		constexpr auto pMOButton_Close = 0x308; // UMOButtonClose*
		constexpr auto pMOMailReceive = 0x310; // UMOMailReceive*
		constexpr auto pMOMailSend = 0x318; // UMOMailSend*
		constexpr auto pMOMailOutgoing = 0x320; // UMOMailOutgoing*
		constexpr auto iCurrentPanelIndex = 0x328; // int32_t
		constexpr auto iCityID = 0x32c; // int32_t
	}

	namespace n_UMOStables { // : UMOUserWidget
		constexpr auto pTabButtonNewText_Add = 0x2c8; // UMOUserWidgetTabButtonNew*
		constexpr auto pTabButtonNewText_Rem = 0x2d0; // UMOUserWidgetTabButtonNew*
		constexpr auto pPanelStablesAddPet = 0x2d8; // UMOStablesAddPet*
		constexpr auto pPanelStablesRemPet = 0x2e0; // UMOStablesRemPet*
		constexpr auto cPetListEntryAddClass = 0x2e8; // UMOPetListEntry*
		constexpr auto cPetListEntryRemClass = 0x2f0; // UMOPetListEntry*
	}

	namespace n_UMOPaperdollCladeGifts { // : UMOWidgetBlueprint
		constexpr auto vCladeGiftButtons = 0x270; // TArray<UMOCladeGiftButton*>
	}

	namespace n_UNiagaraSystem { // : UFXSystemAsset
		constexpr auto bDumpDebugSystemInfo = 0x30; // bool
		constexpr auto bDumpDebugEmitterInfo = 0x31; // bool
		constexpr auto bRequireCurrentFrameData = 0x32; // bool
		constexpr auto bFixedBounds = 0x34; // char : 1
		constexpr auto EffectType = 0x38; // UNiagaraEffectType*
		constexpr auto bOverrideScalabilitySettings = 0x40; // bool
		constexpr auto ScalabilityOverrides = 0x48; // TArray<FNiagaraSystemScalabilityOverride>
		constexpr auto SystemScalabilityOverrides = 0x58; // FNiagaraSystemScalabilityOverrides
		constexpr auto EmitterHandles = 0x68; // TArray<FNiagaraEmitterHandle>
		constexpr auto ParameterCollectionOverrides = 0x78; // TArray<UNiagaraParameterCollectionInstance*>
		constexpr auto SystemSpawnScript = 0x88; // UNiagaraScript*
		constexpr auto SystemUpdateScript = 0x90; // UNiagaraScript*
		constexpr auto SystemCompiledData = 0xa8; // FNiagaraSystemCompiledData
		constexpr auto ExposedParameters = 0x2c0; // FNiagaraUserRedirectionParameterStore
		constexpr auto FixedBounds = 0x388; // FBox
		constexpr auto bAutoDeactivate = 0x3a4; // bool
		constexpr auto WarmupTime = 0x3a8; // float
		constexpr auto WarmupTickCount = 0x3ac; // int32_t
		constexpr auto WarmupTickDelta = 0x3b0; // float
		constexpr auto bHasSystemScriptDIsWithPerInstanceData = 0x3b4; // bool
		constexpr auto UserDINamesReadInSystemScripts = 0x3b8; // TArray<FName>
	}

	namespace n_UMaterialExpressionSobol { // : UMaterialExpression
		constexpr auto Cell = 0x40; // FExpressionInput
		constexpr auto Index = 0x54; // FExpressionInput
		constexpr auto Seed = 0x68; // FExpressionInput
		constexpr auto ConstIndex = 0x7c; // uint32_t
		constexpr auto ConstSeed = 0x80; // FVector2D
	}

	namespace n_UParticleModuleBeamModifier { // : UParticleModuleBeamBase
		constexpr auto ModifierType = 0x30; // BeamModifierType
		constexpr auto PositionOptions = 0x34; // FBeamModifierOptions
		constexpr auto Position = 0x38; // FRawDistributionVector
		constexpr auto TangentOptions = 0x80; // FBeamModifierOptions
		constexpr auto Tangent = 0x88; // FRawDistributionVector
		constexpr auto bAbsoluteTangent = 0xd0; // char : 1
		constexpr auto StrengthOptions = 0xd4; // FBeamModifierOptions
		constexpr auto Strength = 0xd8; // FRawDistributionFloat
	}

	namespace n_ADatasmithImportedSequencesActor { // : AActor
		constexpr auto ImportedSequences = 0x220; // TArray<ULevelSequence*>
	}

	namespace n_UMovieSceneLiveLinkTrack { // : UMovieScenePropertyTrack
		constexpr auto TrackRole = 0xb0; // ULiveLinkRole*
	}

	namespace n_UDLSSOverrideSettings { // : UObject
		constexpr auto EnableDLSSInEditorViewportsOverride = 0x28; // EDLSSSettingOverride
		constexpr auto EnableScreenpercentageManipulationInDLSSEditorViewportsOverride = 0x29; // EDLSSSettingOverride
		constexpr auto EnableDLSSInPlayInEditorViewportsOverride = 0x2a; // EDLSSSettingOverride
		constexpr auto bShowDLSSIncompatiblePluginsToolsWarnings = 0x2b; // bool
		constexpr auto ShowDLSSSDebugOnScreenMessages = 0x2c; // EDLSSSettingOverride
	}

	namespace n_AMOArrowActor { // : AActor
		constexpr auto pStaticMeshBase = 0x248; // UStaticMeshComponent*
		constexpr auto pStaticMeshHead = 0x250; // UStaticMeshComponent*
		constexpr auto arrowData = 0x258; // FMOArrowData
		constexpr auto pArrowBaseData = 0x280; // UMODataAssetArrowBase*
		constexpr auto pArrowHeadData = 0x288; // UMODataAssetArrowHead*
		constexpr auto pFlyingTrailParticleSystemComponent = 0x290; // UParticleSystemComponent*
		constexpr auto pFireParticleSystemComponent = 0x298; // UParticleSystemComponent*
		constexpr auto pBaseMID = 0x2a0; // UMaterialInstanceDynamic*
		constexpr auto pHeadMID = 0x2a8; // UMaterialInstanceDynamic*
	}

	namespace n_UMOBrokerItemListEntry { // : UMOItemListEntry
		constexpr auto pTextBlockCityName = 0x2b0; // UTextBlock*
		constexpr auto pTextBlockPlayerName = 0x2b8; // UTextBlock*
		constexpr auto pTextBlockQuantity = 0x2c0; // UTextBlock*
		constexpr auto pTextBlockDays = 0x2c8; // UTextBlock*
		constexpr auto pMOBrokerButton_Text = 0x2d0; // UTextBlock*
		constexpr auto pImage_SelectedBG = 0x2d8; // UImage*
		constexpr auto pImage_HoveredBG = 0x2e0; // UImage*
		constexpr auto pMOButton_BrokerEntry = 0x2e8; // UMOButton*
		constexpr auto vBaggedItemJsonArray = 0x2f0; // TArray<FString>
		constexpr auto iBagSize = 0x300; // int32_t
		constexpr auto iCuprumCost = 0x308; // uint64_t
		constexpr auto iCurPanelState = 0x310; // int32_t
		constexpr auto bSelectionState = 0x314; // bool
	}

	namespace n_AGeometryCollectionActor { // : AActor
		constexpr auto GeometryCollectionComponent = 0x220; // UGeometryCollectionComponent*
		constexpr auto GeometryCollectionDebugDrawComponent = 0x228; // UGeometryCollectionDebugDrawComponent*
	}

	namespace n_UMOItemSlotContainer { // : UMOItemSlot
		constexpr auto pMemberOwner = 0x340; // UMOContainer*
		constexpr auto pMyWidget = 0x348; // UUserWidget*
	}

	namespace n_UPlatformInterfaceBase { // : UObject
		constexpr auto AllDelegates = 0x28; // TArray<FDelegateArray>
	}

	namespace n_ULiveLinkTransformAxisSwitchPreProcessor { // : ULiveLinkFramePreProcessor
		constexpr auto OrientationAxisX = 0x28; // ELiveLinkAxis
		constexpr auto OrientationAxisY = 0x29; // ELiveLinkAxis
		constexpr auto OrientationAxisZ = 0x2a; // ELiveLinkAxis
		constexpr auto TranslationAxisX = 0x2b; // ELiveLinkAxis
		constexpr auto TranslationAxisY = 0x2c; // ELiveLinkAxis
		constexpr auto TranslationAxisZ = 0x2d; // ELiveLinkAxis
	}

	namespace n_UPaperTileMap { // : UObject
		constexpr auto MapWidth = 0x28; // int32_t
		constexpr auto MapHeight = 0x2c; // int32_t
		constexpr auto TileWidth = 0x30; // int32_t
		constexpr auto TileHeight = 0x34; // int32_t
		constexpr auto PixelsPerUnrealUnit = 0x38; // float
		constexpr auto SeparationPerTileX = 0x3c; // float
		constexpr auto SeparationPerTileY = 0x40; // float
		constexpr auto SeparationPerLayer = 0x44; // float
		constexpr auto SelectedTileSet = 0x48; // TSoftObjectPtr<UPaperTileSet>
		constexpr auto Material = 0x70; // UMaterialInterface*
		constexpr auto TileLayers = 0x78; // TArray<UPaperTileLayer*>
		constexpr auto CollisionThickness = 0x88; // float
		constexpr auto SpriteCollisionDomain = 0x8c; // ESpriteCollisionMode
		constexpr auto ProjectionMode = 0x8d; // ETileMapProjectionMode
		constexpr auto HexSideLength = 0x90; // int32_t
		constexpr auto BodySetup = 0x98; // UBodySetup*
		constexpr auto LayerNameIndex = 0xa0; // int32_t
	}

	namespace n_UMovieSceneCameraShakeSourceShakeSection { // : UMovieSceneSection
		constexpr auto ShakeData = 0xe8; // FMovieSceneCameraShakeSectionData
	}

	namespace n_UInterpGroupCamera { // : UInterpGroup
		constexpr auto CameraAnimInst = 0x50; // UCameraAnim*
		constexpr auto CompressTolerance = 0x58; // float
	}

	namespace n_UBTTask_Wait { // : UBTTaskNode
		constexpr auto WaitTime = 0x70; // float
		constexpr auto RandomDeviation = 0x74; // float
	}

	namespace n_UMediaPlayer { // : UObject
		constexpr auto OnEndReached = 0x28; // FMulticastInlineDelegate
		constexpr auto OnMediaClosed = 0x38; // FMulticastInlineDelegate
		constexpr auto OnMediaOpened = 0x48; // FMulticastInlineDelegate
		constexpr auto OnMediaOpenFailed = 0x58; // FMulticastInlineDelegate
		constexpr auto OnPlaybackResumed = 0x68; // FMulticastInlineDelegate
		constexpr auto OnPlaybackSuspended = 0x78; // FMulticastInlineDelegate
		constexpr auto OnSeekCompleted = 0x88; // FMulticastInlineDelegate
		constexpr auto OnTracksChanged = 0x98; // FMulticastInlineDelegate
		constexpr auto CacheAhead = 0xa8; // FTimespan
		constexpr auto CacheBehind = 0xb0; // FTimespan
		constexpr auto CacheBehindGame = 0xb8; // FTimespan
		constexpr auto NativeAudioOut = 0xc0; // bool
		constexpr auto PlayOnOpen = 0xc1; // bool
		constexpr auto Shuffle = 0xc4; // char : 1
		constexpr auto Loop = 0xc4; // char : 1
		constexpr auto Playlist = 0xc8; // UMediaPlaylist*
		constexpr auto PlaylistIndex = 0xd0; // int32_t
		constexpr auto TimeDelay = 0xd8; // FTimespan
		constexpr auto HorizontalFieldOfView = 0xe0; // float
		constexpr auto VerticalFieldOfView = 0xe4; // float
		constexpr auto ViewRotation = 0xe8; // FRotator
		constexpr auto PlayerGuid = 0x120; // FGuid
	}

	namespace n_UWB_MOCharCreationAppearancePanel_C { // : UMOCharCreationAppearancePanel
		constexpr auto UberGraphFrame = 0x490; // FPointerToUberGraphFrame
		constexpr auto FaceCustomizationRow = 0x498; // UHorizontalBox*
		constexpr auto Overlay_Face = 0x4a0; // UOverlay*
		constexpr auto pLabelText = 0x4a8; // UTextBlock*
		constexpr auto pLabelText_2 = 0x4b0; // UTextBlock*
		constexpr auto pLabelText_3 = 0x4b8; // UTextBlock*
		constexpr auto pLabelText_4 = 0x4c0; // UTextBlock*
		constexpr auto pLabelText_5 = 0x4c8; // UTextBlock*
		constexpr auto pLabelText_6 = 0x4d0; // UTextBlock*
		constexpr auto WB_MO_Scrollbox_Arrow_Down = 0x4d8; // UWB_MO_Scrollbox_Arrow_Down_C*
		constexpr auto WB_MO_Scrollbox_Arrow_Up = 0x4e0; // UWB_MO_Scrollbox_Arrow_Up_C*
	}

	namespace n_ULevelSequenceBurnInOptions { // : UObject
		constexpr auto bUseBurnIn = 0x28; // bool
		constexpr auto BurnInClass = 0x30; // FSoftClassPath
		constexpr auto Settings = 0x48; // ULevelSequenceBurnInInitSettings*
	}

	namespace n_UMOClientEffect { // : UObject
		constexpr auto bRemove = 0x38; // bool
		constexpr auto pOwner = 0x40; // AMOPlayerController*
	}

	namespace n_AMOPhysicsVolumeMountSpeed { // : AMOPhysicsVolume
		constexpr auto sReason = 0x268; // FText
		constexpr auto iMaxThrottle = 0x280; // int32_t
	}

	namespace n_UMaterialExpressionDDX { // : UMaterialExpression
		constexpr auto Value = 0x40; // FExpressionInput
	}

	namespace n_UBrushComponent { // : UPrimitiveComponent
		constexpr auto Brush = 0x440; // UModel*
		constexpr auto BrushBodySetup = 0x448; // UBodySetup*
	}

	namespace n_UMaterialExpressionStaticComponentMaskParameter { // : UMaterialExpressionParameter
		constexpr auto DefaultR = 0x58; // char : 1
		constexpr auto DefaultG = 0x58; // char : 1
		constexpr auto DefaultB = 0x58; // char : 1
		constexpr auto DefaultA = 0x58; // char : 1
	}

	namespace n_UBlueprintCore { // : UObject
		constexpr auto SkeletonGeneratedClass = 0x28; // UObject*
		constexpr auto GeneratedClass = 0x30; // UObject*
		constexpr auto bLegacyNeedToPurgeSkelRefs = 0x38; // bool
		constexpr auto BlueprintGuid = 0x3c; // FGuid
	}

	namespace n_UMaterialExpressionVertexInterpolator { // : UMaterialExpressionCustomOutput
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UMaterialExpressionViewProperty { // : UMaterialExpression
		constexpr auto Property = 0x40; // EMaterialExposedViewProperty
	}

	namespace n_UWheeledVehicleMovementComponent { // : UPawnMovementComponent
		constexpr auto bDeprecatedSpringOffsetMode = 0x140; // char : 1
		constexpr auto bReverseAsBrake = 0x140; // char : 1
		constexpr auto bUseRVOAvoidance = 0x140; // char : 1
		constexpr auto bRawHandbrakeInput = 0x140; // char : 1
		constexpr auto bRawGearUpInput = 0x140; // char : 1
		constexpr auto bRawGearDownInput = 0x140; // char : 1
		constexpr auto bWasAvoidanceUpdated = 0x144; // char : 1
		constexpr auto Mass = 0x148; // float
		constexpr auto WheelSetups = 0x150; // TArray<FWheelSetup>
		constexpr auto DragCoefficient = 0x160; // float
		constexpr auto ChassisWidth = 0x164; // float
		constexpr auto ChassisHeight = 0x168; // float
		constexpr auto DragArea = 0x16c; // float
		constexpr auto EstimatedMaxEngineSpeed = 0x170; // float
		constexpr auto MaxEngineRPM = 0x174; // float
		constexpr auto DebugDragMagnitude = 0x178; // float
		constexpr auto InertiaTensorScale = 0x17c; // FVector
		constexpr auto MinNormalizedTireLoad = 0x188; // float
		constexpr auto MinNormalizedTireLoadFiltered = 0x18c; // float
		constexpr auto MaxNormalizedTireLoad = 0x190; // float
		constexpr auto MaxNormalizedTireLoadFiltered = 0x194; // float
		constexpr auto ThresholdLongitudinalSpeed = 0x198; // float
		constexpr auto LowForwardSpeedSubStepCount = 0x19c; // int32_t
		constexpr auto HighForwardSpeedSubStepCount = 0x1a0; // int32_t
		constexpr auto Wheels = 0x1a8; // TArray<UVehicleWheel*>
		constexpr auto RVOAvoidanceRadius = 0x1d0; // float
		constexpr auto RVOAvoidanceHeight = 0x1d4; // float
		constexpr auto AvoidanceConsiderationRadius = 0x1d8; // float
		constexpr auto RVOSteeringStep = 0x1dc; // float
		constexpr auto RVOThrottleStep = 0x1e0; // float
		constexpr auto AvoidanceUID = 0x1e4; // int32_t
		constexpr auto AvoidanceGroup = 0x1e8; // FNavAvoidanceMask
		constexpr auto GroupsToAvoid = 0x1ec; // FNavAvoidanceMask
		constexpr auto GroupsToIgnore = 0x1f0; // FNavAvoidanceMask
		constexpr auto AvoidanceWeight = 0x1f4; // float
		constexpr auto PendingLaunchVelocity = 0x1f8; // FVector
		constexpr auto ReplicatedState = 0x204; // FReplicatedVehicleState
		constexpr auto RawSteeringInput = 0x21c; // float
		constexpr auto RawThrottleInput = 0x220; // float
		constexpr auto RawBrakeInput = 0x224; // float
		constexpr auto SteeringInput = 0x228; // float
		constexpr auto ThrottleInput = 0x22c; // float
		constexpr auto BrakeInput = 0x230; // float
		constexpr auto HandbrakeInput = 0x234; // float
		constexpr auto IdleBrakeInput = 0x238; // float
		constexpr auto StopThreshold = 0x23c; // float
		constexpr auto WrongDirectionThreshold = 0x240; // float
		constexpr auto ThrottleInputRate = 0x244; // FVehicleInputRate
		constexpr auto BrakeInputRate = 0x24c; // FVehicleInputRate
		constexpr auto HandbrakeInputRate = 0x254; // FVehicleInputRate
		constexpr auto SteeringInputRate = 0x25c; // FVehicleInputRate
		constexpr auto OverrideController = 0x288; // AController*
	}

	namespace n_USkeletalMeshSimulationComponent { // : UActorComponent
		constexpr auto PhysicalMaterial = 0xb8; // UChaosPhysicalMaterial*
		constexpr auto ChaosSolverActor = 0xc0; // AChaosSolverActor*
		constexpr auto OverridePhysicsAsset = 0xc8; // UPhysicsAsset*
		constexpr auto bSimulating = 0xd0; // bool
		constexpr auto bNotifyCollisions = 0xd1; // bool
		constexpr auto ObjectType = 0xd2; // EObjectStateTypeEnum
		constexpr auto Density = 0xd4; // float
		constexpr auto MinMass = 0xd8; // float
		constexpr auto MaxMass = 0xdc; // float
		constexpr auto CollisionType = 0xe0; // ECollisionTypeEnum
		constexpr auto ImplicitShapeParticlesPerUnitArea = 0xe4; // float
		constexpr auto ImplicitShapeMinNumParticles = 0xe8; // int32_t
		constexpr auto ImplicitShapeMaxNumParticles = 0xec; // int32_t
		constexpr auto MinLevelSetResolution = 0xf0; // int32_t
		constexpr auto MaxLevelSetResolution = 0xf4; // int32_t
		constexpr auto CollisionGroup = 0xf8; // int32_t
		constexpr auto InitialVelocityType = 0xfc; // EInitialVelocityTypeEnum
		constexpr auto InitialLinearVelocity = 0x100; // FVector
		constexpr auto InitialAngularVelocity = 0x10c; // FVector
		constexpr auto OnChaosPhysicsCollision = 0x118; // FMulticastInlineDelegate
	}

	namespace n_UNiagaraDataInterfaceSpline { // : UNiagaraDataInterface
		constexpr auto Source = 0x38; // AActor*
	}

	namespace n_UBrushBuilder { // : UObject
		constexpr auto BitmapFilename = 0x28; // FString
		constexpr auto ToolTip = 0x38; // FString
		constexpr auto NotifyBadParams = 0x48; // char : 1
		constexpr auto Vertices = 0x50; // TArray<FVector>
		constexpr auto Polys = 0x60; // TArray<FBuilderPoly>
		constexpr auto Layer = 0x70; // FName
		constexpr auto MergeCoplanars = 0x78; // char : 1
	}

	namespace n_UAsyncTaskDownloadImage { // : UBlueprintAsyncActionBase
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFail = 0x40; // FMulticastInlineDelegate
	}

	namespace n_ABP_Fishing_CaughtFish_C { // : AActor
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto FishMesh = 0x228; // UStaticMeshComponent*
		constexpr auto PhysicsConstraint = 0x230; // UPhysicsConstraintComponent*
		constexpr auto Sphere = 0x238; // UStaticMeshComponent*
		constexpr auto fish = 0x240; // UStaticMeshComponent*
	}

	namespace n_AMOFishingBobberActor { // : AActor
		constexpr auto pStaticMeshBase = 0x220; // UStaticMeshComponent*
	}

	namespace n_UParticleModuleAccelerationConstant { // : UParticleModuleAccelerationBase
		constexpr auto Acceleration = 0x38; // FVector
	}

	namespace n_UGameNetworkManagerSettings { // : UObject
		constexpr auto MinDynamicBandwidth = 0x28; // int32_t
		constexpr auto MaxDynamicBandwidth = 0x2c; // int32_t
		constexpr auto TotalNetBandwidth = 0x30; // int32_t
		constexpr auto BadPingThreshold = 0x34; // int32_t
		constexpr auto bIsStandbyCheckingEnabled = 0x38; // char : 1
		constexpr auto StandbyRxCheatTime = 0x3c; // float
		constexpr auto StandbyTxCheatTime = 0x40; // float
		constexpr auto PercentMissingForRxStandby = 0x44; // float
		constexpr auto PercentMissingForTxStandby = 0x48; // float
		constexpr auto PercentForBadPing = 0x4c; // float
		constexpr auto JoinInProgressStandbyWaitTime = 0x50; // float
	}

	namespace n_ABP_AiEffectSummonUndeadA_C { // : AMOAiEffectActor
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
		constexpr auto iIter = 0x278; // int32_t
		constexpr auto vParticles = 0x280; // TArray<UNiagaraComponent*>
	}

	namespace n_UMovieScene2DTransformSection { // : UMovieSceneSection
		constexpr auto TransformMask = 0xf0; // FMovieScene2DTransformMask
		constexpr auto Translation = 0xf8; // FMovieSceneFloatChannel [0x2]
		constexpr auto Rotation = 0x238; // FMovieSceneFloatChannel
		constexpr auto Scale = 0x2d8; // FMovieSceneFloatChannel [0x2]
		constexpr auto Shear = 0x418; // FMovieSceneFloatChannel [0x2]
	}

	namespace n_UMaterialExpressionArcsineFast { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_USoundMix { // : UObject
		constexpr auto bApplyEQ = 0x28; // char : 1
		constexpr auto EQPriority = 0x2c; // float
		constexpr auto EQSettings = 0x30; // FAudioEQEffect
		constexpr auto SoundClassEffects = 0x70; // TArray<FSoundClassAdjuster>
		constexpr auto InitialDelay = 0x80; // float
		constexpr auto FadeInTime = 0x84; // float
		constexpr auto Duration = 0x88; // float
		constexpr auto FadeOutTime = 0x8c; // float
	}

	namespace n_UMagicLeapSettings { // : UObject
		constexpr auto bEnableZI = 0x28; // bool
		constexpr auto bUseVulkanForZI = 0x29; // bool
		constexpr auto bUseMLAudioForZI = 0x2a; // bool
	}

	namespace n_UMagicLeapARPinSaveGame { // : USaveGame
		constexpr auto PinnedID = 0x28; // FGuid
		constexpr auto ComponentWorldTransform = 0x40; // FTransform
		constexpr auto PinTransform = 0x70; // FTransform
		constexpr auto bShouldPinActor = 0xa0; // bool
	}

	namespace n_ANavigationData { // : AActor
		constexpr auto RenderingComp = 0x228; // UPrimitiveComponent*
		constexpr auto NavDataConfig = 0x230; // FNavDataConfig
		constexpr auto bEnableDrawing = 0x2a8; // char : 1
		constexpr auto bForceRebuildOnLoad = 0x2a8; // char : 1
		constexpr auto bAutoDestroyWhenNoNavigation = 0x2a8; // char : 1
		constexpr auto bCanBeMainNavData = 0x2a8; // char : 1
		constexpr auto bCanSpawnOnRebuild = 0x2a8; // char : 1
		constexpr auto bRebuildAtRuntime = 0x2a8; // char : 1
		constexpr auto RuntimeGeneration = 0x2ac; // ERuntimeGenerationType
		constexpr auto ObservedPathsTickInterval = 0x2b0; // float
		constexpr auto DataVersion = 0x2b4; // uint32_t
		constexpr auto SupportedAreas = 0x3c0; // TArray<FSupportedAreaData>
	}

	namespace n_UMaterialExpressionTransform { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto TransformSourceType = 0x54; // EMaterialVectorCoordTransformSource
		constexpr auto TransformType = 0x55; // EMaterialVectorCoordTransform
	}

	namespace n_UWB_MOComboBoxStringEntry_C { // : UMOComboBoxStringEntry
		constexpr auto UberGraphFrame = 0x330; // FPointerToUberGraphFrame
		constexpr auto BACKGROUND = 0x338; // UImage*
		constexpr auto ToolTip = 0x340; // UWB_BasicTooltip_C*
	}

	namespace n_UEnvQueryTest_GameplayTags { // : UEnvQueryTest
		constexpr auto TagQueryToMatch = 0x1f8; // FGameplayTagQuery
		constexpr auto bUpdatedToUseQuery = 0x240; // bool
		constexpr auto TagsToMatch = 0x241; // EGameplayContainerMatchType
		constexpr auto GameplayTags = 0x248; // FGameplayTagContainer
	}

	namespace n_UBodySetup { // : UBodySetupCore
		constexpr auto AggGeom = 0x48; // FKAggregateGeom
		constexpr auto bAlwaysFullAnimWeight = 0xa0; // char : 1
		constexpr auto bConsiderForBounds = 0xa0; // char : 1
		constexpr auto bMeshCollideAll = 0xa0; // char : 1
		constexpr auto bDoubleSidedGeometry = 0xa0; // char : 1
		constexpr auto bGenerateNonMirroredCollision = 0xa0; // char : 1
		constexpr auto bSharedCookedData = 0xa0; // char : 1
		constexpr auto bGenerateMirroredCollision = 0xa0; // char : 1
		constexpr auto bSupportUVsAndFaceRemap = 0xa0; // char : 1
		constexpr auto PhysMaterial = 0xa8; // UPhysicalMaterial*
		constexpr auto WalkableSlopeOverride = 0xb0; // FWalkableSlopeOverride
		constexpr auto DefaultInstance = 0x128; // FBodyInstance
		constexpr auto BuildScale3D = 0x288; // FVector
	}

	namespace n_UUniformInteger { // : UFieldNodeInt
		constexpr auto Magnitude = 0xb0; // int32_t
	}

	namespace n_AMOAIController { // : AAIController
		constexpr auto bControlledByPlayer = 0x328; // bool
		constexpr auto iPlayerDexterity = 0x35c; // int32_t
	}

	namespace n_UMOFishingEquipment { // : UMOUserWidget
		constexpr auto pMOItemSlot_Line = 0x2c8; // UMOItemSlotPlaceItem*
		constexpr auto pMOItemSlot_Hook = 0x2d0; // UMOItemSlotPlaceItem*
		constexpr auto pMOItemSlot_Bait = 0x2d8; // UMOItemSlotPlaceItem*
		constexpr auto pMOSlider_Depth = 0x2e0; // UMOCraftingSliderWidget*
		constexpr auto pMOEditableTextBox_Depth = 0x2e8; // UMOEditableTextBoxNumbers*
	}

	namespace n_USynth2DSlider { // : UWidget
		constexpr auto ValueX = 0x108; // float
		constexpr auto ValueY = 0x10c; // float
		constexpr auto ValueXDelegate = 0x110; // FDelegate
		constexpr auto ValueYDelegate = 0x120; // FDelegate
		constexpr auto WidgetStyle = 0x130; // FSynth2DSliderStyle
		constexpr auto SliderHandleColor = 0x3e8; // FLinearColor
		constexpr auto IndentHandle = 0x3f8; // bool
		constexpr auto Locked = 0x3f9; // bool
		constexpr auto StepSize = 0x3fc; // float
		constexpr auto IsFocusable = 0x400; // bool
		constexpr auto OnMouseCaptureBegin = 0x408; // FMulticastInlineDelegate
		constexpr auto OnMouseCaptureEnd = 0x418; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureBegin = 0x428; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureEnd = 0x438; // FMulticastInlineDelegate
		constexpr auto OnValueChangedX = 0x448; // FMulticastInlineDelegate
		constexpr auto OnValueChangedY = 0x458; // FMulticastInlineDelegate
	}

	namespace n_UMovieSceneMediaSection { // : UMovieSceneSection
		constexpr auto MediaSource = 0xe8; // UMediaSource*
		constexpr auto bLooping = 0xf0; // bool
		constexpr auto StartFrameOffset = 0xf4; // FFrameNumber
		constexpr auto MediaTexture = 0xf8; // UMediaTexture*
		constexpr auto MediaSoundComponent = 0x100; // UMediaSoundComponent*
		constexpr auto bUseExternalMediaPlayer = 0x108; // bool
		constexpr auto ExternalMediaPlayer = 0x110; // UMediaPlayer*
	}

	namespace n_ABP_MortalOnline2GameModeMenu_C { // : AMOGameModeMenu
		constexpr auto DefaultSceneRoot = 0x300; // USceneComponent*
	}

	namespace n_UMODataAssetShieldFrame { // : UMODataAssetEquipmentShared
		constexpr auto pStaticMesh = 0x308; // UStaticMesh*
		constexpr auto sDisplayName = 0x310; // FText
		constexpr auto pIcon = 0x328; // UTexture2D*
		constexpr auto vSocketEmitterPairs = 0x330; // TArray<FSocketEmitterPair>
		constexpr auto vSocketSoundPairs = 0x340; // TArray<FSocketSoundPair>
		constexpr auto vSocketLightPairs = 0x350; // TArray<FSocketLightPair>
	}

	namespace n_UMaterialExpressionConstant2Vector { // : UMaterialExpression
		constexpr auto R = 0x40; // float
		constexpr auto G = 0x44; // float
	}

	namespace n_ASphereReflectionCapture { // : AReflectionCapture
		constexpr auto DrawCaptureRadius = 0x228; // UDrawSphereComponent*
	}

	namespace n_UArrowComponent { // : UPrimitiveComponent
		constexpr auto ArrowColor = 0x440; // FColor
		constexpr auto ArrowSize = 0x444; // float
		constexpr auto ArrowLength = 0x448; // float
		constexpr auto ScreenSize = 0x44c; // float
		constexpr auto bIsScreenSizeScaled = 0x450; // char : 1
		constexpr auto bTreatAsASprite = 0x450; // char : 1
	}

	namespace n_UEditableGeometryCollectionAdapter { // : UEditableMeshAdapter
		constexpr auto GeometryCollection = 0x28; // UGeometryCollection*
		constexpr auto OriginalGeometryCollection = 0x30; // UGeometryCollection*
		constexpr auto GeometryCollectionLODIndex = 0x38; // int32_t
	}

	namespace n_UMovieSceneCameraShakeSourceShakeTrack { // : UMovieSceneNameableTrack
		constexpr auto CameraShakeSections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UPlatformMediaSource { // : UMediaSource
		constexpr auto MediaSource = 0x80; // UMediaSource*
	}

	namespace n_UTexture2DDynamic { // : UTexture
		constexpr auto Format = 0xe0; // EPixelFormat
	}

	namespace n_UMOBuildablePanel { // : UMOUserWidget
		constexpr auto pBuildable = 0x2c8; // UMOBuildable*
	}

	namespace n_UMOClientEffectAlvarinZoom { // : UMOClientEffect
		constexpr auto vCharacters = 0x48; // TArray<AMOCharacter*>
		constexpr auto vLootBags = 0x58; // TArray<AMOAvatarStaticMeshLoot*>
		constexpr auto pOwnerCharacter = 0x68; // AMOCharacterPlayer*
		constexpr auto pMaterialInstance = 0x70; // UMaterialInstance*
	}

	namespace n_UWB_RingFlare_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Effect = 0x268; // UWidgetAnimation*
		constexpr auto pRingFlare = 0x270; // UImage*
	}

	namespace n_UFKControlRig { // : UControlRig
		constexpr auto IsControlActive = 0x650; // TArray<bool>
		constexpr auto ApplyMode = 0x660; // EControlRigFKRigExecuteMode
	}

	namespace n_UMaterialExpressionCustom { // : UMaterialExpression
		constexpr auto Code = 0x40; // FString
		constexpr auto OutputType = 0x50; // ECustomMaterialOutputType
		constexpr auto Description = 0x58; // FString
		constexpr auto Inputs = 0x68; // TArray<FCustomInput>
		constexpr auto AdditionalOutputs = 0x78; // TArray<FCustomOutput>
		constexpr auto AdditionalDefines = 0x88; // TArray<FCustomDefine>
		constexpr auto IncludeFilePaths = 0x98; // TArray<FString>
	}

	namespace n_UCheckBoxStyleAsset { // : UObject
		constexpr auto CheckBoxStyle = 0x28; // FCheckBoxStyle
	}

	namespace n_UUserDefinedCaptureProtocol { // : UMovieSceneImageCaptureProtocolBase
		constexpr auto World = 0x58; // UWorld*
	}

	namespace n_UMOCombatSystem { // : UObject
		constexpr auto NoPlayerControllerDummyStats = 0x28; // FMOEquipmentStats
		constexpr auto pMOGameUserSettings = 0x60; // UMOGameUserSettings*
	}

	namespace n_ABandwidthTestActor { // : AActor
		constexpr auto BandwidthGenerator = 0x220; // FBandwidthTestGenerator
	}

	namespace n_UMOButtonHold { // : UMOUserWidget
		constexpr auto fAnim_PlaybackSpeed = 0x2d8; // float
		constexpr auto fAnim_PlaybackSpeed_Reverse = 0x2dc; // float
		constexpr auto pMOButton_Hold = 0x2e0; // UMOButton*
		constexpr auto pTextBlock_ButtonText = 0x2e8; // UTextBlock*
		constexpr auto IsButtonHeld = 0x2f0; // bool
	}

	namespace n_UNiagaraPreviewAxis_InterpParamBase { // : UNiagaraPreviewAxis
		constexpr auto Param = 0x28; // FName
		constexpr auto Count = 0x30; // int32_t
	}

	namespace n_UGenlockedTimecodeProvider { // : UTimecodeProvider
		constexpr auto bUseGenlockToCount = 0x30; // bool
	}

	namespace n_UCanvas { // : UObject
		constexpr auto OrgX = 0x28; // float
		constexpr auto OrgY = 0x2c; // float
		constexpr auto ClipX = 0x30; // float
		constexpr auto ClipY = 0x34; // float
		constexpr auto DrawColor = 0x38; // FColor
		constexpr auto bCenterX = 0x3c; // char : 1
		constexpr auto bCenterY = 0x3c; // char : 1
		constexpr auto bNoSmooth = 0x3c; // char : 1
		constexpr auto SizeX = 0x40; // int32_t
		constexpr auto SizeY = 0x44; // int32_t
		constexpr auto ColorModulate = 0x50; // FPlane
		constexpr auto DefaultTexture = 0x60; // UTexture2D*
		constexpr auto GradientTexture0 = 0x68; // UTexture2D*
		constexpr auto ReporterGraph = 0x70; // UReporterGraph*
	}

	namespace n_UBackgroundBlur { // : UContentWidget
		constexpr auto Padding = 0x120; // FMargin
		constexpr auto HorizontalAlignment = 0x130; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x131; // EVerticalAlignment
		constexpr auto bApplyAlphaToBlur = 0x132; // bool
		constexpr auto BlurStrength = 0x134; // float
		constexpr auto bOverrideAutoRadiusCalculation = 0x138; // bool
		constexpr auto BlurRadius = 0x13c; // int32_t
		constexpr auto LowQualityFallbackBrush = 0x140; // FSlateBrush
	}

	namespace n_ULiveLinkSourceSettings { // : UObject
		constexpr auto Mode = 0x28; // ELiveLinkSourceMode
		constexpr auto BufferSettings = 0x30; // FLiveLinkSourceBufferManagementSettings
		constexpr auto ConnectionString = 0x88; // FString
		constexpr auto Factory = 0x98; // ULiveLinkSourceFactory*
	}

	namespace n_AGeometryCollectionRenderLevelSetActor { // : AActor
		constexpr auto TargetVolumeTexture = 0x220; // UVolumeTexture*
		constexpr auto RayMarchMaterial = 0x228; // UMaterial*
		constexpr auto SurfaceTolerance = 0x230; // float
		constexpr auto Isovalue = 0x234; // float
		constexpr auto Enabled = 0x238; // bool
		constexpr auto RenderVolumeBoundingBox = 0x239; // bool
	}

	namespace n_UAsyncActionLoadPrimaryAssetClass { // : UAsyncActionLoadPrimaryAssetBase
		constexpr auto Completed = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UAISenseConfig_Damage { // : UAISenseConfig
		constexpr auto Implementation = 0x48; // UAISense_Damage*
	}

	namespace n_UNiagaraComponentPool { // : UObject
		constexpr auto WorldParticleSystemPools = 0x28; // TMap<UNiagaraSystem*, FNCPool>
	}

	namespace n_UMovieSceneColorSection { // : UMovieSceneSection
		constexpr auto RedCurve = 0xe8; // FMovieSceneFloatChannel
		constexpr auto GreenCurve = 0x188; // FMovieSceneFloatChannel
		constexpr auto BlueCurve = 0x228; // FMovieSceneFloatChannel
		constexpr auto AlphaCurve = 0x2c8; // FMovieSceneFloatChannel
	}

	namespace n_UMOAnimNotifyPlayWeaponSwingSound { // : UMOAnimNotify
		constexpr auto eSwingHand = 0x38; // EHandSlot
	}

	namespace n_UMOContainer { // : UMOUserWidget
		constexpr auto pContainerText = 0x2c8; // UTextBlock*
		constexpr auto vSlotList = 0x2d0; // TArray<UMOItemSlotContainer*>
		constexpr auto sBagGUID = 0x2e0; // FString
		constexpr auto ItemSlotRef = 0x2f0; // UMOItemSlotContainer*
		constexpr auto pSizeBox = 0x358; // USizeBox*
		constexpr auto pGridPanel = 0x360; // UUniformGridPanel*
		constexpr auto pHUD = 0x368; // UMOHUD*
	}

	namespace n_UAnimBlueprint { // : UBlueprint
		constexpr auto TargetSkeleton = 0xa8; // USkeleton*
		constexpr auto Groups = 0xb0; // TArray<FAnimGroupInfo>
		constexpr auto bUseMultiThreadedAnimationUpdate = 0xc0; // bool
		constexpr auto bWarnAboutBlueprintUsage = 0xc1; // bool
	}

	namespace n_ASplineMeshActor { // : AActor
		constexpr auto SplineMeshComponent = 0x220; // USplineMeshComponent*
	}

	namespace n_ANavSystemConfigOverride { // : AActor
		constexpr auto NavigationSystemConfig = 0x220; // UNavigationSystemConfig*
		constexpr auto OverridePolicy = 0x228; // ENavSystemOverridePolicy
		constexpr auto bLoadOnClient = 0x229; // char : 1
	}

	namespace n_UDialogueWave { // : UObject
		constexpr auto bMature = 0x28; // char : 1
		constexpr auto bOverride_SubtitleOverride = 0x28; // char : 1
		constexpr auto SpokenText = 0x30; // FString
		constexpr auto SubtitleOverride = 0x40; // FString
		constexpr auto ContextMappings = 0x50; // TArray<FDialogueContextMapping>
		constexpr auto LocalizationGUID = 0x60; // FGuid
	}

	namespace n_UMaterialExpressionTangent { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Period = 0x54; // float
	}

	namespace n_UAnimStreamable { // : UAnimSequenceBase
		constexpr auto NumFrames = 0xa8; // int32_t
		constexpr auto Interpolation = 0xac; // EAnimInterpolationType
		constexpr auto RetargetSource = 0xb0; // FName
		constexpr auto BoneCompressionSettings = 0xc8; // UAnimBoneCompressionSettings*
		constexpr auto CurveCompressionSettings = 0xd0; // UAnimCurveCompressionSettings*
		constexpr auto bEnableRootMotion = 0xd8; // bool
		constexpr auto RootMotionRootLock = 0xd9; // ERootMotionRootLock
		constexpr auto bForceRootLock = 0xda; // bool
		constexpr auto bUseNormalizedRootMotionScale = 0xdb; // bool
	}

	namespace n_USynthComponent { // : USceneComponent
		constexpr auto bAutoDestroy = 0x1f8; // char : 1
		constexpr auto bStopWhenOwnerDestroyed = 0x1f8; // char : 1
		constexpr auto bAllowSpatialization = 0x1f8; // char : 1
		constexpr auto bOverrideAttenuation = 0x1f8; // char : 1
		constexpr auto bOutputToBusOnly = 0x1fc; // char : 1
		constexpr auto AttenuationSettings = 0x200; // USoundAttenuation*
		constexpr auto AttenuationOverrides = 0x208; // FSoundAttenuationSettings
		constexpr auto ConcurrencySettings = 0x5a8; // USoundConcurrency*
		constexpr auto ConcurrencySet = 0x5b0; // TSet<USoundConcurrency*>
		constexpr auto SoundClass = 0x600; // USoundClass*
		constexpr auto SourceEffectChain = 0x608; // USoundEffectSourcePresetChain*
		constexpr auto SoundSubmix = 0x610; // USoundSubmixBase*
		constexpr auto SoundSubmixSends = 0x618; // TArray<FSoundSubmixSendInfo>
		constexpr auto BusSends = 0x628; // TArray<FSoundSourceBusSendInfo>
		constexpr auto PreEffectBusSends = 0x638; // TArray<FSoundSourceBusSendInfo>
		constexpr auto bIsUISound = 0x648; // char : 1
		constexpr auto bIsPreviewSound = 0x648; // char : 1
		constexpr auto EnvelopeFollowerAttackTime = 0x64c; // int32_t
		constexpr auto EnvelopeFollowerReleaseTime = 0x650; // int32_t
		constexpr auto OnAudioEnvelopeValue = 0x658; // FMulticastInlineDelegate
		constexpr auto Synth = 0x688; // USynthSound*
		constexpr auto AudioComponent = 0x690; // UAudioComponent*
	}

	namespace n_UMOAnimNotifyJump { // : UMOAnimNotify
		constexpr auto bJumpStart = 0x38; // bool
	}

	namespace n_UMaterialExpressionSkyAtmosphereAerialPerspective { // : UMaterialExpression
		constexpr auto WorldPosition = 0x40; // FExpressionInput
	}

	namespace n_UNiagaraSimulationStageGeneric { // : UNiagaraSimulationStageBase
		constexpr auto IterationSource = 0x40; // ENiagaraIterationSource
		constexpr auto Iterations = 0x44; // int32_t
		constexpr auto bSpawnOnly = 0x48; // char : 1
		constexpr auto bDisablePartialParticleUpdate = 0x48; // char : 1
		constexpr auto DataInterface = 0x50; // FNiagaraVariableDataInterfaceBinding
	}

	namespace n_AMOPhysicsVolumeMessage { // : AMOPhysicsVolume
		constexpr auto sMessage = 0x268; // FText
		constexpr auto eShowHint = 0x280; // EHint
	}

	namespace n_UDialogueVoice { // : UObject
		constexpr auto Gender = 0x28; // EGrammaticalGender
		constexpr auto Plurality = 0x29; // EGrammaticalNumber
		constexpr auto LocalizationGUID = 0x2c; // FGuid
	}

	namespace n_UMaterialExpressionDepthFade { // : UMaterialExpression
		constexpr auto InOpacity = 0x40; // FExpressionInput
		constexpr auto FadeDistance = 0x54; // FExpressionInput
		constexpr auto OpacityDefault = 0x68; // float
		constexpr auto FadeDistanceDefault = 0x6c; // float
	}

	namespace n_UAISenseEvent_Hearing { // : UAISenseEvent
		constexpr auto Event = 0x28; // FAINoiseEvent
	}

	namespace n_UVerticalBoxSlot { // : UPanelSlot
		constexpr auto Size = 0x38; // FSlateChildSize
		constexpr auto Padding = 0x40; // FMargin
		constexpr auto HorizontalAlignment = 0x58; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x59; // EVerticalAlignment
	}

	namespace n_UMOCharCreationFaceCustomization { // : UMOUserWidget
		constexpr auto PresetCount = 0x2c8; // int32_t
		constexpr auto PaperdollSceneActor = 0x2d0; // AMOCharacter*
		constexpr auto OnFaceCustomizationValuesChanged = 0x2d8; // FMulticastInlineDelegate
		constexpr auto OnCloseWidgetRequest = 0x2e8; // FMulticastInlineDelegate
		constexpr auto OnFacePresetLoad = 0x2f8; // FMulticastInlineDelegate
		constexpr auto OnFacePresetSave = 0x308; // FMulticastInlineDelegate
		constexpr auto OnRequestSaveToClipboard = 0x318; // FMulticastInlineDelegate
		constexpr auto OnRequestLoadFromClipboard = 0x328; // FMulticastInlineDelegate
		constexpr auto pMOButton_CloseWidget = 0x338; // UMOButtonLarge*
	}

	namespace n_UMovieSceneObjectPropertyTrack { // : UMovieScenePropertyTrack
		constexpr auto PropertyClass = 0xb0; // UObject*
	}

	namespace n_UInteractiveGizmo { // : UObject
		constexpr auto InputBehaviors = 0x30; // UInputBehaviorSet*
	}

	namespace n_USlateWidgetStyleAsset { // : UObject
		constexpr auto CustomStyle = 0x28; // USlateWidgetStyleContainerBase*
	}

	namespace n_UConnectionCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_ATemplateSequenceActor { // : AActor
		constexpr auto PlaybackSettings = 0x228; // FMovieSceneSequencePlaybackSettings
		constexpr auto SequencePlayer = 0x240; // UTemplateSequencePlayer*
		constexpr auto TemplateSequence = 0x248; // FSoftObjectPath
		constexpr auto BindingOverride = 0x260; // FTemplateSequenceBindingOverrideData
	}

	namespace n_UGameplayTagsList { // : UObject
		constexpr auto ConfigFileName = 0x28; // FString
		constexpr auto GameplayTagList = 0x38; // TArray<FGameplayTagTableRow>
	}

	namespace n_UInterpTrackFloatMaterialParam { // : UInterpTrackFloatBase
		constexpr auto TargetMaterials = 0x90; // TArray<UMaterialInterface*>
		constexpr auto ParamName = 0xa0; // FName
	}

	namespace n_UStaticMeshComponent { // : UMeshComponent
		constexpr auto ForcedLodModel = 0x468; // int32_t
		constexpr auto PreviousLODLevel = 0x46c; // int32_t
		constexpr auto MinLOD = 0x470; // int32_t
		constexpr auto SubDivisionStepSize = 0x474; // int32_t
		constexpr auto StaticMesh = 0x478; // UStaticMesh*
		constexpr auto WireframeColorOverride = 0x480; // FColor
		constexpr auto bEvaluateWorldPositionOffset = 0x484; // char : 1
		constexpr auto bOverrideWireframeColor = 0x484; // char : 1
		constexpr auto bOverrideMinLod = 0x484; // char : 1
		constexpr auto bOverrideNavigationExport = 0x484; // char : 1
		constexpr auto bForceNavigationObstacle = 0x484; // char : 1
		constexpr auto bDisallowMeshPaintPerInstance = 0x484; // char : 1
		constexpr auto bIgnoreInstanceForTextureStreaming = 0x484; // char : 1
		constexpr auto bOverrideLightMapRes = 0x484; // char : 1
		constexpr auto bCastDistanceFieldIndirectShadow = 0x485; // char : 1
		constexpr auto bOverrideDistanceFieldSelfShadowBias = 0x485; // char : 1
		constexpr auto bUseSubDivisions = 0x485; // char : 1
		constexpr auto bUseDefaultCollision = 0x485; // char : 1
		constexpr auto bReverseCulling = 0x485; // char : 1
		constexpr auto OverriddenLightMapRes = 0x488; // int32_t
		constexpr auto DistanceFieldIndirectShadowMinVisibility = 0x48c; // float
		constexpr auto DistanceFieldSelfShadowBias = 0x490; // float
		constexpr auto StreamingDistanceMultiplier = 0x494; // float
		constexpr auto LODData = 0x498; // TArray<FStaticMeshComponentLODInfo>
		constexpr auto StreamingTextureData = 0x4a8; // TArray<FStreamingTextureBuildInfo>
		constexpr auto LightmassSettings = 0x4b8; // FLightmassPrimitiveSettings
	}

	namespace n_AVolumetricLightmapDensityVolume { // : AVolume
		constexpr auto AllowedMipLevelRange = 0x258; // FInt32Interval
	}

	namespace n_UNetAnalyticsAggregatorConfig { // : UObject
		constexpr auto NetAnalyticsData = 0x28; // TArray<FNetAnalyticsDataConfig>
	}

	namespace n_UFXSystemAsset { // : UObject
		constexpr auto MaxPoolSize = 0x28; // uint32_t
		constexpr auto PoolPrimeSize = 0x2c; // uint32_t
	}

	namespace n_USoundNodeDistanceCrossFade { // : USoundNode
		constexpr auto CrossFadeInput = 0x48; // TArray<FDistanceDatum>
	}

	namespace n_UAnimSingleNodeInstance { // : UAnimInstance
		constexpr auto CurrentAsset = 0x2b8; // UAnimationAsset*
		constexpr auto PostEvaluateAnimEvent = 0x2c0; // FDelegate
	}

	namespace n_UMaterialFunction { // : UMaterialFunctionInterface
		constexpr auto Description = 0x40; // FString
		constexpr auto bExposeToLibrary = 0x50; // char : 1
		constexpr auto bPrefixParameterNames = 0x50; // char : 1
	}

	namespace n_UMovieSceneTrack { // : UMovieSceneSignedObject
		constexpr auto EvalOptions = 0x50; // FMovieSceneTrackEvalOptions
		constexpr auto bIsEvalDisabled = 0x55; // bool
		constexpr auto EvaluationFieldGuid = 0x58; // FGuid
		constexpr auto EvaluationField = 0x68; // FMovieSceneTrackEvaluationField
	}

	namespace n_UARGetCandidateObjectAsyncTaskBlueprintProxy { // : UARBaseAsyncTaskBlueprintProxy
		constexpr auto OnSuccess = 0x50; // FMulticastInlineDelegate
		constexpr auto OnFailed = 0x60; // FMulticastInlineDelegate
	}

	namespace n_UMaterialParameterCollectionInstance { // : UObject
		constexpr auto Collection = 0x30; // UMaterialParameterCollection*
	}

	namespace n_AWorldSettings { // : AInfo
		constexpr auto VisibilityCellSize = 0x228; // int32_t
		constexpr auto VisibilityAggressiveness = 0x22c; // EVisibilityAggressiveness
		constexpr auto bPrecomputeVisibility = 0x22d; // char : 1
		constexpr auto bPlaceCellsOnlyAlongCameraTracks = 0x22d; // char : 1
		constexpr auto bEnableWorldBoundsChecks = 0x22d; // char : 1
		constexpr auto bEnableNavigationSystem = 0x22d; // char : 1
		constexpr auto bEnableAISystem = 0x22d; // char : 1
		constexpr auto bEnableWorldComposition = 0x22d; // char : 1
		constexpr auto bUseClientSideLevelStreamingVolumes = 0x22d; // char : 1
		constexpr auto bEnableWorldOriginRebasing = 0x22d; // char : 1
		constexpr auto bWorldGravitySet = 0x22e; // char : 1
		constexpr auto bGlobalGravitySet = 0x22e; // char : 1
		constexpr auto bMinimizeBSPSections = 0x22e; // char : 1
		constexpr auto bForceNoPrecomputedLighting = 0x22e; // char : 1
		constexpr auto bHighPriorityLoading = 0x22e; // char : 1
		constexpr auto bHighPriorityLoadingLocal = 0x22e; // char : 1
		constexpr auto bOverrideDefaultBroadphaseSettings = 0x22e; // char : 1
		constexpr auto NavigationSystemConfig = 0x230; // UNavigationSystemConfig*
		constexpr auto NavigationSystemConfigOverride = 0x238; // UNavigationSystemConfig*
		constexpr auto WorldToMeters = 0x240; // float
		constexpr auto KillZ = 0x244; // float
		constexpr auto KillZDamageType = 0x248; // UDamageType*
		constexpr auto WorldGravityZ = 0x250; // float
		constexpr auto GlobalGravityZ = 0x254; // float
		constexpr auto DefaultPhysicsVolumeClass = 0x258; // ADefaultPhysicsVolume*
		constexpr auto PhysicsCollisionHandlerClass = 0x260; // UPhysicsCollisionHandler*
		constexpr auto DefaultGameMode = 0x268; // AGameModeBase*
		constexpr auto GameNetworkManagerClass = 0x270; // AGameNetworkManager*
		constexpr auto PackedLightAndShadowMapTextureSize = 0x278; // int32_t
		constexpr auto DefaultColorScale = 0x27c; // FVector
		constexpr auto DefaultMaxDistanceFieldOcclusionDistance = 0x288; // float
		constexpr auto GlobalDistanceFieldViewDistance = 0x28c; // float
		constexpr auto DynamicIndirectShadowsSelfShadowingIntensity = 0x290; // float
		constexpr auto DefaultReverbSettings = 0x298; // FReverbSettings
		constexpr auto DefaultAmbientZoneSettings = 0x2b8; // FInteriorSettings
		constexpr auto MonoCullingDistance = 0x2dc; // float
		constexpr auto DefaultBaseSoundMix = 0x2e0; // USoundMix*
		constexpr auto TimeDilation = 0x2e8; // float
		constexpr auto MatineeTimeDilation = 0x2ec; // float
		constexpr auto DemoPlayTimeDilation = 0x2f0; // float
		constexpr auto MinGlobalTimeDilation = 0x2f4; // float
		constexpr auto MaxGlobalTimeDilation = 0x2f8; // float
		constexpr auto MinUndilatedFrameTime = 0x2fc; // float
		constexpr auto MaxUndilatedFrameTime = 0x300; // float
		constexpr auto BroadphaseSettings = 0x304; // FBroadphaseSettings
		constexpr auto Pauser = 0x348; // APlayerState*
		constexpr auto ReplicationViewers = 0x350; // TArray<FNetViewer>
		constexpr auto AssetUserData = 0x360; // TArray<UAssetUserData*>
		constexpr auto PauserPlayerState = 0x370; // APlayerState*
		constexpr auto MaxNumberOfBookmarks = 0x378; // int32_t
		constexpr auto DefaultBookmarkClass = 0x380; // UBookmarkBase*
		constexpr auto BookmarkArray = 0x388; // TArray<UBookmarkBase*>
		constexpr auto LastBookmarkClass = 0x398; // UBookmarkBase*
	}

	namespace n_UParticleModuleTypeDataBeam2 { // : UParticleModuleTypeDataBase
		constexpr auto BeamMethod = 0x30; // EBeam2Method
		constexpr auto TextureTile = 0x34; // int32_t
		constexpr auto TextureTileDistance = 0x38; // float
		constexpr auto Sheets = 0x3c; // int32_t
		constexpr auto MaxBeamCount = 0x40; // int32_t
		constexpr auto Speed = 0x44; // float
		constexpr auto InterpolationPoints = 0x48; // int32_t
		constexpr auto bAlwaysOn = 0x4c; // char : 1
		constexpr auto UpVectorStepSize = 0x50; // int32_t
		constexpr auto BranchParentName = 0x54; // FName
		constexpr auto Distance = 0x60; // FRawDistributionFloat
		constexpr auto TaperMethod = 0x90; // EBeamTaperMethod
		constexpr auto TaperFactor = 0x98; // FRawDistributionFloat
		constexpr auto TaperScale = 0xc8; // FRawDistributionFloat
		constexpr auto RenderGeometry = 0xf8; // char : 1
		constexpr auto RenderDirectLine = 0xf8; // char : 1
		constexpr auto RenderLines = 0xf8; // char : 1
		constexpr auto RenderTessellation = 0xf8; // char : 1
	}

	namespace n_UMotoSynthPreset { // : UObject
		constexpr auto Settings = 0x28; // FMotoSynthRuntimeSettings
	}

	namespace n_UARPlaneGeometry { // : UARTrackedGeometry
		constexpr auto Orientation = 0xf8; // EARPlaneOrientation
		constexpr auto Center = 0xfc; // FVector
		constexpr auto Extent = 0x108; // FVector
		constexpr auto BoundaryPolygon = 0x118; // TArray<FVector>
		constexpr auto SubsumedBy = 0x128; // UARPlaneGeometry*
	}

	namespace n_UMaterialExpressionSphericalParticleOpacity { // : UMaterialExpression
		constexpr auto Density = 0x40; // FExpressionInput
		constexpr auto ConstantDensity = 0x54; // float
	}

	namespace n_UMaterialExpressionFeatureLevelSwitch { // : UMaterialExpression
		constexpr auto Default = 0x40; // FExpressionInput
	}

	namespace n_UMOWeatherManager { // : UMOManager
		constexpr auto WeatherZoneUpdateTickRate = 0x28; // float
		constexpr auto WeatherZoneUpdateTickTimer = 0x2c; // float
		constexpr auto NextWeatherZoneTickIndex = 0x30; // uint32_t
		constexpr auto WeatherTweenUpdateTickRate = 0x34; // float
		constexpr auto WeatherTweenUpdateTickTimer = 0x38; // float
		constexpr auto vWeatherTemplates = 0x40; // TArray<FMOWeatherTemplate>
		constexpr auto vWeatherZones = 0x50; // TArray<FMOWeatherZone>
		constexpr auto currentWeather = 0x60; // FMOWeatherTemplate
		constexpr auto weatherToChangeInto = 0xa8; // FMOWeatherTemplate
		constexpr auto pPlayerWeatherTemplate = 0xf0; // UNiagaraSystem*
		constexpr auto pWeatherAudioComponent = 0xf8; // UAudioComponent*
		constexpr auto pMOSunSky = 0x100; // AMOSunSky*
		constexpr auto pAtmosphericFog = 0x108; // AAtmosphericFog*
		constexpr auto pExponentialFog = 0x110; // AExponentialHeightFog*
		constexpr auto pSkyDome = 0x118; // AMOActorSkyDome*
		constexpr auto pWindDirectionalSource = 0x120; // AWindDirectionalSource*
		constexpr auto cLightningStrikeClass = 0x128; // AActor*
		constexpr auto pDataTable_WeatherDataTable = 0x130; // UDataTable*
		constexpr auto pWeatherFoliageParameterCollection = 0x138; // UMaterialParameterCollection*
		constexpr auto pNightParameterCollection = 0x140; // UMaterialParameterCollection*
	}

	namespace n_UMOPetManager { // : UMOManager
		constexpr auto vPetData = 0x28; // TArray<FMOPetData>
	}

	namespace n_UMODragDropOperationPetSkill { // : UMODragDropOperation
		constexpr auto sPetSkillJSon = 0x88; // FString
	}

	namespace n_USourceEffectMidSideSpreaderPreset { // : USoundEffectSourcePreset
		constexpr auto Settings = 0x98; // FSourceEffectMidSideSpreaderSettings
	}

	namespace n_UNiagaraDataInterfaceGrid3D { // : UNiagaraDataInterfaceRWBase
		constexpr auto NumCells = 0xd8; // FIntVector
		constexpr auto CellSize = 0xe4; // float
		constexpr auto NumCellsMaxAxis = 0xe8; // int32_t
		constexpr auto SetResolutionMethod = 0xec; // ESetResolutionMethod
		constexpr auto WorldBBoxSize = 0xf0; // FVector
	}

	namespace n_UWaterSubsystem { // : UWorldSubsystem
		constexpr auto OnCameraUnderwaterStateChanged = 0x70; // FMulticastInlineDelegate
		constexpr auto OnWaterScalabilityChanged = 0x80; // FMulticastInlineDelegate
		constexpr auto DefaultRiverMesh = 0x90; // UStaticMesh*
		constexpr auto DefaultLakeMesh = 0x98; // UStaticMesh*
		constexpr auto WaterMeshActor = 0xa0; // AWaterMeshActor*
		constexpr auto MaterialParameterCollection = 0xd0; // UMaterialParameterCollection*
	}

	namespace n_UVRNotificationsComponent { // : UActorComponent
		constexpr auto HMDTrackingInitializingAndNeedsHMDToBeTrackedDelegate = 0xb0; // FMulticastInlineDelegate
		constexpr auto HMDTrackingInitializedDelegate = 0xc0; // FMulticastInlineDelegate
		constexpr auto HMDRecenteredDelegate = 0xd0; // FMulticastInlineDelegate
		constexpr auto HMDLostDelegate = 0xe0; // FMulticastInlineDelegate
		constexpr auto HMDReconnectedDelegate = 0xf0; // FMulticastInlineDelegate
		constexpr auto HMDConnectCanceledDelegate = 0x100; // FMulticastInlineDelegate
		constexpr auto HMDPutOnHeadDelegate = 0x110; // FMulticastInlineDelegate
		constexpr auto HMDRemovedFromHeadDelegate = 0x120; // FMulticastInlineDelegate
		constexpr auto VRControllerRecenteredDelegate = 0x130; // FMulticastInlineDelegate
	}

	namespace n_UMOArmorManagerComponent { // : UActorComponent
		constexpr auto sArmorDataTest = 0xb0; // FMOArmorPartData
		constexpr auto HeadComponent = 0xd8; // USkeletalMeshComponent*
		constexpr auto ArmorHeadComponent = 0xe0; // USkeletalMeshComponent*
		constexpr auto ArmorTorsoComponent = 0xe8; // USkeletalMeshComponent*
		constexpr auto ArmorLegsComponent = 0xf0; // USkeletalMeshComponent*
		constexpr auto ArmorLeftArmComponent = 0xf8; // USkeletalMeshComponent*
		constexpr auto ArmorRightArmComponent = 0x100; // USkeletalMeshComponent*
		constexpr auto ArmorBackComponent = 0x108; // USkeletalMeshComponent*
		constexpr auto vArmorSlotAssetArmor = 0x110; // TMap<EArmorSlot, UMODataAssetArmor*>
		constexpr auto vArmorSlotAssetResources = 0x160; // TMap<EArmorSlot, UMODataAssetResource*>
		constexpr auto vArmorSlotAssetMIDs = 0x1b0; // TArray<UMaterialInstanceDynamic*>
	}

	namespace n_UMODataAssetBowDefinitions { // : UPrimaryDataAsset
		constexpr auto pSharedData = 0x30; // UMODataAssetEquipmentShared*
		constexpr auto pFallBackBow = 0x38; // TSoftObjectPtr<UMODataAssetBowBase>
		constexpr auto pQuiverMesh = 0x60; // TSoftObjectPtr<UStaticMesh>
		constexpr auto vRecurveBows = 0x88; // TArray<TSoftObjectPtr<UMODataAssetBowBase>>
		constexpr auto vDeCurveBows = 0x98; // TArray<TSoftObjectPtr<UMODataAssetBowBase>>
		constexpr auto vFlatBows = 0xa8; // TArray<TSoftObjectPtr<UMODataAssetBowBase>>
		constexpr auto bBowPartsArePreloaded = 0xb8; // bool
		constexpr auto PreLoadedBowParts = 0xc0; // TArray<UMODataAssetBowBase*>
	}

	namespace n_UWB_ItemSlotActionbar_C { // : UMOItemSlotActionbar
		constexpr auto UberGraphFrame = 0x2f0; // FPointerToUberGraphFrame
		constexpr auto Cooldown = 0x2f8; // UWidgetAnimation*
		constexpr auto Use = 0x300; // UWidgetAnimation*
		constexpr auto FadeInAnimation = 0x308; // UWidgetAnimation*
		constexpr auto FadeOutAnimation = 0x310; // UWidgetAnimation*
		constexpr auto pCooldownImage = 0x318; // UImage*
		constexpr auto DefaultColor = 0x320; // FLinearColor
		constexpr auto DefaultBrush = 0x330; // FSlateBrush
	}

	namespace n_USubmixEffectDynamicsProcessorPreset { // : USoundEffectSubmixPreset
		constexpr auto Settings = 0xe0; // FSubmixEffectDynamicsProcessorSettings
	}

	namespace n_UNiagaraDataInterfaceArrayFloat3 { // : UNiagaraDataInterfaceArray
		constexpr auto FloatData = 0x50; // TArray<FVector>
	}

	namespace n_UNiagaraDataInterfaceVectorField { // : UNiagaraDataInterface
		constexpr auto Field = 0x38; // UVectorField*
		constexpr auto bTileX = 0x40; // bool
		constexpr auto bTileY = 0x41; // bool
		constexpr auto bTileZ = 0x42; // bool
	}

	namespace n_UParticleModuleTypeDataMesh { // : UParticleModuleTypeDataBase
		constexpr auto Mesh = 0x30; // UStaticMesh*
		constexpr auto LODSizeScale = 0x40; // float
		constexpr auto bUseStaticMeshLODs = 0x44; // char : 1
		constexpr auto CastShadows = 0x44; // char : 1
		constexpr auto DoCollisions = 0x44; // char : 1
		constexpr auto MeshAlignment = 0x45; // EMeshScreenAlignment
		constexpr auto bOverrideMaterial = 0x46; // char : 1
		constexpr auto bOverrideDefaultMotionBlurSettings = 0x46; // char : 1
		constexpr auto bEnableMotionBlur = 0x46; // char : 1
		constexpr auto RollPitchYawRange = 0x48; // FRawDistributionVector
		constexpr auto AxisLockOption = 0x90; // EParticleAxisLock
		constexpr auto bCameraFacing = 0x91; // char : 1
		constexpr auto CameraFacingUpAxisOption = 0x92; // EMeshCameraFacingUpAxis
		constexpr auto CameraFacingOption = 0x93; // EMeshCameraFacingOptions
		constexpr auto bApplyParticleRotationAsSpin = 0x94; // char : 1
		constexpr auto bFaceCameraDirectionRatherThanPosition = 0x94; // char : 1
		constexpr auto bCollisionsConsiderPartilceSize = 0x94; // char : 1
	}

	namespace n_UAnimSharingAdditiveInstance { // : UAnimInstance
		constexpr auto BaseComponent = 0x2b8; // TWeakObjectPtr<USkeletalMeshComponent>
		constexpr auto AdditiveAnimation = 0x2c0; // TWeakObjectPtr<UAnimSequence>
		constexpr auto Alpha = 0x2c8; // float
		constexpr auto bStateBool = 0x2cc; // bool
	}

	namespace n_UPhysicalMaterial { // : UObject
		constexpr auto Friction = 0x28; // float
		constexpr auto StaticFriction = 0x2c; // float
		constexpr auto FrictionCombineMode = 0x30; // EFrictionCombineMode
		constexpr auto bOverrideFrictionCombineMode = 0x31; // bool
		constexpr auto Restitution = 0x34; // float
		constexpr auto RestitutionCombineMode = 0x38; // EFrictionCombineMode
		constexpr auto bOverrideRestitutionCombineMode = 0x39; // bool
		constexpr auto Density = 0x3c; // float
		constexpr auto SleepLinearVelocityThreshold = 0x40; // float
		constexpr auto SleepAngularVelocityThreshold = 0x44; // float
		constexpr auto SleepCounterThreshold = 0x48; // int32_t
		constexpr auto RaiseMassToPower = 0x4c; // float
		constexpr auto DestructibleDamageThresholdScale = 0x50; // float
		constexpr auto PhysicalMaterialProperty = 0x58; // UPhysicalMaterialPropertyBase*
		constexpr auto SurfaceType = 0x60; // EPhysicalSurface
	}

	namespace n_UMaterialExpressionWorldPosition { // : UMaterialExpression
		constexpr auto WorldPositionShaderOffset = 0x40; // EWorldPositionIncludedOffsets
	}

	namespace n_UGeometryCollectionCache { // : UObject
		constexpr auto RecordedData = 0x28; // FRecordedTransformTrack
		constexpr auto SupportedCollection = 0x38; // UGeometryCollection*
		constexpr auto CompatibleCollectionState = 0x40; // FGuid
	}

	namespace n_UParticleModuleEventGenerator { // : UParticleModuleEventBase
		constexpr auto Events = 0x30; // TArray<FParticleEvent_GenerateInfo>
	}

	namespace n_USoundNodeDelay { // : USoundNode
		constexpr auto DelayMin = 0x48; // float
		constexpr auto DelayMax = 0x4c; // float
	}

	namespace n_AMOEquipmentActorShield { // : AMOEquipmentActorTwoPart
		constexpr auto ShieldData = 0x2c0; // FMOEquipmentActorShieldData
	}

	namespace n_UAISense_Blueprint { // : UAISense
		constexpr auto ListenerDataType = 0x80; // UUserDefinedStruct*
		constexpr auto ListenerContainer = 0x88; // TArray<UAIPerceptionComponent*>
		constexpr auto UnprocessedEvents = 0x98; // TArray<UAISenseEvent*>
	}

	namespace n_UMOMailItemListEntry { // : UMOItemListEntry
		constexpr auto pMOButton_ReturnItem = 0x2b0; // UMOButtonLarge*
		constexpr auto pTextBlockPlayerName = 0x2b8; // UTextBlock*
	}

	namespace n_UMODayNightComponent { // : USceneComponent
		constexpr auto iActivateTime = 0x1f8; // int32_t
		constexpr auto iDeactivateTime = 0x1fc; // int32_t
		constexpr auto bActiveDuringDay = 0x200; // bool
		constexpr auto OnActivatedOrDeactivated = 0x208; // FMulticastInlineDelegate
	}

	namespace n_UMOUserWidgetOptionsUI { // : UMOUserWidgetOptionsPanel
		constexpr auto vCheckBoxEntries = 0x2d0; // TArray<UMOCheckBoxEntry*>
		constexpr auto pMOCheckBox_UseRoundCompass = 0x2e0; // UMOCheckBoxEntry*
		constexpr auto pMOCheckBox_CenterMouseCursor = 0x2e8; // UMOCheckBoxEntry*
		constexpr auto vSliderEntries = 0x2f0; // TArray<UMOOptionSliderWidget*>
		constexpr auto pOptionsSlider_PlayerScale = 0x300; // UMOOptionSliderWidget*
		constexpr auto pOptionsSlider_PlayerOpacity = 0x308; // UMOOptionSliderWidget*
		constexpr auto pOptionsSlider_TargetScale = 0x310; // UMOOptionSliderWidget*
		constexpr auto pOptionsSlider_TargetOpacity = 0x318; // UMOOptionSliderWidget*
		constexpr auto pOptionsSlider_CompassScale = 0x320; // UMOOptionSliderWidget*
		constexpr auto pMOButton_ResetUI = 0x328; // UMOButton*
		constexpr auto vComboBoxEntries = 0x330; // TArray<UMOComboBoxStringEntry*>
		constexpr auto pMOComboBox_CursorStyle = 0x340; // UMOComboBoxStringEntry*
	}

	namespace n_UNiagaraDataInterfaceCamera { // : UNiagaraDataInterface
		constexpr auto PlayerControllerIndex = 0x38; // int32_t
		constexpr auto bRequireCurrentFrameData = 0x3c; // bool
	}

	namespace n_UEnvQueryGenerator_BlueprintBase { // : UEnvQueryGenerator
		constexpr auto GeneratorsActionDescription = 0x50; // FText
		constexpr auto Context = 0x68; // UEnvQueryContext*
		constexpr auto GeneratedItemType = 0x70; // UEnvQueryItemType*
	}

	namespace n_UMOTrade { // : UMOUserWidget
		constexpr auto cPetListEntryClass = 0x2c8; // UMOPetListEntry*
		constexpr auto pMOButton_Accept = 0x2d0; // UMOButtonMedium*
		constexpr auto pMOScrollBox_Give = 0x2d8; // UMOScrollBoxPlaceItems*
		constexpr auto pMOScrollBox_Recive = 0x2e0; // UMOScrollBox*
		constexpr auto cTradeListEntryClass = 0x2e8; // UMOItemListEntry*
		constexpr auto bTradeApproved = 0x2f0; // bool
		constexpr auto pTextBlock_TradeTargetName = 0x2f8; // UTextBlock*
	}

	namespace n_UParticleModuleLight { // : UParticleModuleLightBase
		constexpr auto bUseInverseSquaredFalloff = 0x30; // bool
		constexpr auto bAffectsTranslucency = 0x31; // bool
		constexpr auto bPreviewLightRadius = 0x32; // bool
		constexpr auto SpawnFraction = 0x34; // float
		constexpr auto ColorScaleOverLife = 0x38; // FRawDistributionVector
		constexpr auto BrightnessOverLife = 0x80; // FRawDistributionFloat
		constexpr auto RadiusScale = 0xb0; // FRawDistributionFloat
		constexpr auto LightExponent = 0xe0; // FRawDistributionFloat
		constexpr auto LightingChannels = 0x110; // FLightingChannels
		constexpr auto VolumetricScatteringIntensity = 0x114; // float
		constexpr auto bHighQualityLights = 0x118; // bool
		constexpr auto bShadowCastingLights = 0x119; // bool
	}

	namespace n_UOverlaySlot { // : UPanelSlot
		constexpr auto Padding = 0x40; // FMargin
		constexpr auto HorizontalAlignment = 0x50; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x51; // EVerticalAlignment
	}

	namespace n_UMaterialExpressionFontSampleParameter { // : UMaterialExpressionFontSample
		constexpr auto ParameterName = 0x50; // FName
		constexpr auto ExpressionGUID = 0x58; // FGuid
		constexpr auto Group = 0x68; // FName
	}

	namespace n_UNiagaraDataInterfaceChaosDestruction { // : UNiagaraDataInterface
		constexpr auto ChaosSolverActorSet = 0x38; // TSet<AChaosSolverActor*>
		constexpr auto DataSourceType = 0x88; // EDataSourceTypeEnum
		constexpr auto DataProcessFrequency = 0x8c; // int32_t
		constexpr auto MaxNumberOfDataEntriesToSpawn = 0x90; // int32_t
		constexpr auto DoSpawn = 0x94; // bool
		constexpr auto SpawnMultiplierMinMax = 0x98; // FVector2D
		constexpr auto SpawnChance = 0xa0; // float
		constexpr auto ImpulseToSpawnMinMax = 0xa4; // FVector2D
		constexpr auto SpeedToSpawnMinMax = 0xac; // FVector2D
		constexpr auto MassToSpawnMinMax = 0xb4; // FVector2D
		constexpr auto ExtentMinToSpawnMinMax = 0xbc; // FVector2D
		constexpr auto ExtentMaxToSpawnMinMax = 0xc4; // FVector2D
		constexpr auto VolumeToSpawnMinMax = 0xcc; // FVector2D
		constexpr auto SolverTimeToSpawnMinMax = 0xd4; // FVector2D
		constexpr auto SurfaceTypeToSpawn = 0xdc; // int32_t
		constexpr auto LocationFilteringMode = 0xe0; // ELocationFilteringModeEnum
		constexpr auto LocationXToSpawn = 0xe1; // ELocationXToSpawnEnum
		constexpr auto LocationXToSpawnMinMax = 0xe4; // FVector2D
		constexpr auto LocationYToSpawn = 0xec; // ELocationYToSpawnEnum
		constexpr auto LocationYToSpawnMinMax = 0xf0; // FVector2D
		constexpr auto LocationZToSpawn = 0xf8; // ELocationZToSpawnEnum
		constexpr auto LocationZToSpawnMinMax = 0xfc; // FVector2D
		constexpr auto DataSortingType = 0x104; // EDataSortTypeEnum
		constexpr auto bGetExternalCollisionData = 0x105; // bool
		constexpr auto DoSpatialHash = 0x106; // bool
		constexpr auto SpatialHashVolumeMin = 0x108; // FVector
		constexpr auto SpatialHashVolumeMax = 0x114; // FVector
		constexpr auto SpatialHashVolumeCellSize = 0x120; // FVector
		constexpr auto MaxDataPerCell = 0x12c; // int32_t
		constexpr auto bApplyMaterialsFilter = 0x130; // bool
		constexpr auto ChaosBreakingMaterialSet = 0x138; // TSet<UPhysicalMaterial*>
		constexpr auto bGetExternalBreakingData = 0x188; // bool
		constexpr auto bGetExternalTrailingData = 0x189; // bool
		constexpr auto RandomPositionMagnitudeMinMax = 0x18c; // FVector2D
		constexpr auto InheritedVelocityMultiplier = 0x194; // float
		constexpr auto RandomVelocityGenerationType = 0x198; // ERandomVelocityGenerationTypeEnum
		constexpr auto RandomVelocityMagnitudeMinMax = 0x19c; // FVector2D
		constexpr auto SpreadAngleMax = 0x1a4; // float
		constexpr auto VelocityOffsetMin = 0x1a8; // FVector
		constexpr auto VelocityOffsetMax = 0x1b4; // FVector
		constexpr auto FinalVelocityMagnitudeMinMax = 0x1c0; // FVector2D
		constexpr auto MaxLatency = 0x1c8; // float
		constexpr auto DebugType = 0x1cc; // EDebugTypeEnum
		constexpr auto LastSpawnedPointID = 0x1d0; // int32_t
		constexpr auto LastSpawnTime = 0x1d4; // float
		constexpr auto SolverTime = 0x1e8; // float
		constexpr auto TimeStampOfLastProcessedData = 0x1ec; // float
	}

	namespace n_UMOMailOutgoing { // : UMOMailPanel
		constexpr auto pMOScrollBox_Items = 0x2d0; // UMOScrollBox*
	}

	namespace n_UMOOptionComboBoxStringWidget { // : UMOUserWidget
		constexpr auto pComboBoxString = 0x2c8; // UComboBoxString*
	}

	namespace n_UGizmoScaledTransformSource { // : UGizmoBaseTransformSource
		constexpr auto ChildTransformSource = 0x48; // TScriptInterface<IGizmoTransformSource>
	}

	namespace n_UAB_CH_Player_Male_Alvarin_Head_Ears_PostProcess_C { // : UMOAnimationInstancePostProcess
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_KawaiiPhysics_2 = 0x300; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x550; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_KawaiiPhysics = 0x570; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x7c0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LinkedInputPose = 0x7e0; // FAnimNode_LinkedInputPose
	}

	namespace n_USafeZone { // : UContentWidget
		constexpr auto PadLeft = 0x120; // bool
		constexpr auto PadRight = 0x121; // bool
		constexpr auto PadTop = 0x122; // bool
		constexpr auto PadBottom = 0x123; // bool
	}

	namespace n_ULiveLinkTimecodeProvider { // : UTimecodeProvider
		constexpr auto SubjectKey = 0x30; // FLiveLinkSubjectKey
		constexpr auto Evaluation = 0x48; // ELiveLinkTimecodeProviderEvaluationType
		constexpr auto bOverrideFrameRate = 0x4c; // bool
		constexpr auto OverrideFrameRate = 0x50; // FFrameRate
		constexpr auto BufferSize = 0x58; // int32_t
	}

	namespace n_AControlRigGizmoActor { // : AActor
		constexpr auto ActorRootComponent = 0x220; // USceneComponent*
		constexpr auto StaticMeshComponent = 0x228; // UStaticMeshComponent*
		constexpr auto ControlRigIndex = 0x230; // uint32_t
		constexpr auto ControlName = 0x234; // FName
		constexpr auto ColorParameterName = 0x23c; // FName
		constexpr auto bEnabled = 0x244; // char : 1
		constexpr auto bSelected = 0x244; // char : 1
		constexpr auto bSelectable = 0x244; // char : 1
		constexpr auto bHovered = 0x244; // char : 1
	}

	namespace n_UAB_WP_Fishingrod_C { // : UMOAnimInstanceFishingRod
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2d8; // FAnimNode_Root
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive_2 = 0x308; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_LinkedInputPose = 0x3d8; // FAnimNode_LinkedInputPose
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive = 0x4f0; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_SequencePlayer = 0x5c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceEvaluator = 0x640; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_KawaiiPhysics = 0x690; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x8e0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x900; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto StringPull = 0x920; // float
		constexpr auto StringMaxPullRange = 0x924; // float
		constexpr auto StringPullAlpha = 0x928; // float
		constexpr auto StringPullPosition = 0x92c; // FVector
		constexpr auto AttachedParentSkeletalMesh = 0x938; // USkeletalMeshComponent*
		constexpr auto ReelSpin = 0x940; // float
		constexpr auto Rotation Z (Yaw) = 0x944; // float
		constexpr auto ReelSpinAcc = 0x948; // float
	}

	namespace n_AInteractiveFoliageActor { // : AStaticMeshActor
		constexpr auto CapsuleComponent = 0x230; // UCapsuleComponent*
		constexpr auto TouchingActorEntryPosition = 0x238; // FVector
		constexpr auto FoliageVelocity = 0x244; // FVector
		constexpr auto FoliageForce = 0x250; // FVector
		constexpr auto FoliagePosition = 0x25c; // FVector
		constexpr auto FoliageDamageImpulseScale = 0x268; // float
		constexpr auto FoliageTouchImpulseScale = 0x26c; // float
		constexpr auto FoliageStiffness = 0x270; // float
		constexpr auto FoliageStiffnessQuadratic = 0x274; // float
		constexpr auto FoliageDamping = 0x278; // float
		constexpr auto MaxDamageImpulse = 0x27c; // float
		constexpr auto MaxTouchImpulse = 0x280; // float
		constexpr auto MaxForce = 0x284; // float
		constexpr auto Mass = 0x288; // float
	}

	namespace n_USkyAtmosphereComponent { // : USceneComponent
		constexpr auto TransformMode = 0x1f8; // ESkyAtmosphereTransformMode
		constexpr auto BottomRadius = 0x1fc; // float
		constexpr auto GroundAlbedo = 0x200; // FColor
		constexpr auto AtmosphereHeight = 0x204; // float
		constexpr auto MultiScatteringFactor = 0x208; // float
		constexpr auto TraceSampleCountScale = 0x20c; // float
		constexpr auto RayleighScatteringScale = 0x210; // float
		constexpr auto RayleighScattering = 0x214; // FLinearColor
		constexpr auto RayleighExponentialDistribution = 0x224; // float
		constexpr auto MieScatteringScale = 0x228; // float
		constexpr auto MieScattering = 0x22c; // FLinearColor
		constexpr auto MieAbsorptionScale = 0x23c; // float
		constexpr auto MieAbsorption = 0x240; // FLinearColor
		constexpr auto MieAnisotropy = 0x250; // float
		constexpr auto MieExponentialDistribution = 0x254; // float
		constexpr auto OtherAbsorptionScale = 0x258; // float
		constexpr auto OtherAbsorption = 0x25c; // FLinearColor
		constexpr auto OtherTentDistribution = 0x26c; // FTentDistribution
		constexpr auto SkyLuminanceFactor = 0x278; // FLinearColor
		constexpr auto AerialPespectiveViewDistanceScale = 0x288; // float
		constexpr auto HeightFogContribution = 0x28c; // float
		constexpr auto TransmittanceMinLightElevationAngle = 0x290; // float
		constexpr auto AerialPerspectiveStartDepth = 0x294; // float
		constexpr auto bStaticLightingBuiltGUID = 0x2bc; // FGuid
	}

	namespace n_AMOCharacterAIGenerated { // : AMOCharacterAI
		constexpr auto sMOEquipmentData = 0xcd8; // FMOFullEquipmentData
		constexpr auto sMOCharacterBodyData = 0xf08; // FMOCharacterBodyData
		constexpr auto sMOCharacterDecorationData = 0xf38; // FMOCharacterDecorationData
		constexpr auto FaceCustomizationData = 0xf80; // FMOCharacterFaceCustomizationData
		constexpr auto fNextFloorAttemptTimer = 0xf90; // float
	}

	namespace n_UChaosPhysicalMaterial { // : UObject
		constexpr auto Friction = 0x28; // float
		constexpr auto StaticFriction = 0x2c; // float
		constexpr auto Restitution = 0x30; // float
		constexpr auto LinearEtherDrag = 0x34; // float
		constexpr auto AngularEtherDrag = 0x38; // float
		constexpr auto SleepingLinearVelocityThreshold = 0x3c; // float
		constexpr auto SleepingAngularVelocityThreshold = 0x40; // float
	}

	namespace n_UMaterialExpressionAdd { // : UMaterialExpression
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_UBTDecorator_CheckGameplayTagsOnActor { // : UBTDecorator
		constexpr auto ActorToCheck = 0x68; // FBlackboardKeySelector
		constexpr auto TagsToMatch = 0x90; // EGameplayContainerMatchType
		constexpr auto GameplayTags = 0x98; // FGameplayTagContainer
		constexpr auto CachedDescription = 0xb8; // FString
	}

	namespace n_USpacer { // : UWidget
		constexpr auto Size = 0x108; // FVector2D
	}

	namespace n_UCheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy { // : UARBaseAsyncTaskBlueprintProxy
		constexpr auto OnSuccess = 0x50; // FMulticastInlineDelegate
		constexpr auto OnFailed = 0x60; // FMulticastInlineDelegate
	}

	namespace n_UDatasmithActorTemplate { // : UDatasmithObjectTemplate
		constexpr auto Layers = 0x30; // TSet<FName>
		constexpr auto Tags = 0x80; // TSet<FName>
	}

	namespace n_UMODataAssetArrowHead { // : UMODataAssetEquipmentShared
		constexpr auto pMesh = 0x308; // UStaticMesh*
		constexpr auto pEquipHitParticles = 0x310; // UNiagaraSystem*
		constexpr auto pGenericHitParticles = 0x318; // UNiagaraSystem*
		constexpr auto pDealDamageSound = 0x320; // USoundCue*
		constexpr auto pGenericHitSound = 0x328; // USoundCue*
	}

	namespace n_AMOPhysicsVolumeDamage { // : AMOPhysicsVolume
		constexpr auto iDamagePerSec = 0x268; // int32_t
		constexpr auto sDamageText = 0x270; // FText
		constexpr auto pDamageSound = 0x288; // USoundCue*
		constexpr auto pDamageParticleSystem = 0x290; // UNiagaraSystem*
	}

	namespace n_UInterpTrackInstLinearColorProp { // : UInterpTrackInstProperty
		constexpr auto ResetColor = 0x58; // FLinearColor
	}

	namespace n_UMaterialExpressionArctangent2Fast { // : UMaterialExpression
		constexpr auto Y = 0x40; // FExpressionInput
		constexpr auto X = 0x54; // FExpressionInput
	}

	namespace n_USubsurfaceProfile { // : UObject
		constexpr auto Settings = 0x28; // FSubsurfaceProfileStruct
	}

	namespace n_UMaterialExpressionArctangent2 { // : UMaterialExpression
		constexpr auto Y = 0x40; // FExpressionInput
		constexpr auto X = 0x54; // FExpressionInput
	}

	namespace n_URadialForceComponent { // : USceneComponent
		constexpr auto Radius = 0x1f8; // float
		constexpr auto Falloff = 0x1fc; // ERadialImpulseFalloff
		constexpr auto ImpulseStrength = 0x200; // float
		constexpr auto bImpulseVelChange = 0x204; // char : 1
		constexpr auto bIgnoreOwningActor = 0x204; // char : 1
		constexpr auto ForceStrength = 0x208; // float
		constexpr auto DestructibleDamage = 0x20c; // float
		constexpr auto ObjectTypesToAffect = 0x210; // TArray<EObjectTypeQuery>
	}

	namespace n_AMatineeActor { // : AActor
		constexpr auto MatineeData = 0x220; // UInterpData*
		constexpr auto MatineeControllerName = 0x228; // FName
		constexpr auto PlayRate = 0x230; // float
		constexpr auto bPlayOnLevelLoad = 0x234; // char : 1
		constexpr auto bForceStartPos = 0x234; // char : 1
		constexpr auto ForceStartPosition = 0x238; // float
		constexpr auto bLooping = 0x23c; // char : 1
		constexpr auto bRewindOnPlay = 0x23c; // char : 1
		constexpr auto bNoResetOnRewind = 0x23c; // char : 1
		constexpr auto bRewindIfAlreadyPlaying = 0x23c; // char : 1
		constexpr auto bDisableRadioFilter = 0x23c; // char : 1
		constexpr auto bClientSideOnly = 0x23c; // char : 1
		constexpr auto bSkipUpdateIfNotVisible = 0x23c; // char : 1
		constexpr auto bIsSkippable = 0x23c; // char : 1
		constexpr auto PreferredSplitScreenNum = 0x240; // int32_t
		constexpr auto bDisableMovementInput = 0x244; // char : 1
		constexpr auto bDisableLookAtInput = 0x244; // char : 1
		constexpr auto bHidePlayer = 0x244; // char : 1
		constexpr auto bHideHud = 0x244; // char : 1
		constexpr auto GroupActorInfos = 0x248; // TArray<FInterpGroupActorInfo>
		constexpr auto bShouldShowGore = 0x258; // char : 1
		constexpr auto GroupInst = 0x260; // TArray<UInterpGroupInst*>
		constexpr auto CameraCuts = 0x270; // TArray<FCameraCutInfo>
		constexpr auto bIsPlaying = 0x280; // char : 1
		constexpr auto bReversePlayback = 0x280; // char : 1
		constexpr auto bPaused = 0x280; // char : 1
		constexpr auto bPendingStop = 0x280; // char : 1
		constexpr auto InterpPosition = 0x284; // float
		constexpr auto ReplicationForceIsPlaying = 0x28c; // char
		constexpr auto OnPlay = 0x290; // FMulticastInlineDelegate
		constexpr auto OnStop = 0x2a0; // FMulticastInlineDelegate
		constexpr auto OnPause = 0x2b0; // FMulticastInlineDelegate
	}

	namespace n_UMaterialBillboardComponent { // : UPrimitiveComponent
		constexpr auto Elements = 0x440; // TArray<FMaterialSpriteElement>
	}

	namespace n_AHUD { // : AActor
		constexpr auto PlayerOwner = 0x220; // APlayerController*
		constexpr auto bLostFocusPaused = 0x228; // char : 1
		constexpr auto bShowHUD = 0x228; // char : 1
		constexpr auto bShowDebugInfo = 0x228; // char : 1
		constexpr auto CurrentTargetIndex = 0x22c; // int32_t
		constexpr auto bShowHitBoxDebugInfo = 0x230; // char : 1
		constexpr auto bShowOverlays = 0x230; // char : 1
		constexpr auto bEnableDebugTextShadow = 0x230; // char : 1
		constexpr auto PostRenderedActors = 0x238; // TArray<AActor*>
		constexpr auto DebugDisplay = 0x250; // TArray<FName>
		constexpr auto ToggledDebugCategories = 0x260; // TArray<FName>
		constexpr auto Canvas = 0x270; // UCanvas*
		constexpr auto DebugCanvas = 0x278; // UCanvas*
		constexpr auto DebugTextList = 0x280; // TArray<FDebugTextInfo>
		constexpr auto ShowDebugTargetDesiredClass = 0x290; // AActor*
		constexpr auto ShowDebugTargetActor = 0x298; // AActor*
	}

	namespace n_UNiagaraDataInterfaceArrayFloat { // : UNiagaraDataInterfaceArray
		constexpr auto FloatData = 0x50; // TArray<float>
	}

	namespace n_AFieldSystemActor { // : AActor
		constexpr auto FieldSystemComponent = 0x220; // UFieldSystemComponent*
	}

	namespace n_UFixedFrameRateCustomTimeStep { // : UEngineCustomTimeStep
		constexpr auto FixedFrameRate = 0x28; // FFrameRate
	}

	namespace n_UAnimNotifyState_Trail { // : UAnimNotifyState
		constexpr auto PSTemplate = 0x30; // UParticleSystem*
		constexpr auto FirstSocketName = 0x38; // FName
		constexpr auto SecondSocketName = 0x40; // FName
		constexpr auto WidthScaleMode = 0x48; // ETrailWidthMode
		constexpr auto WidthScaleCurve = 0x4c; // FName
		constexpr auto bRecycleSpawnedSystems = 0x54; // char : 1
	}

	namespace n_UMovieSceneSubSection { // : UMovieSceneSection
		constexpr auto Parameters = 0xe8; // FMovieSceneSectionParameters
		constexpr auto StartOffset = 0x10c; // float
		constexpr auto TimeScale = 0x110; // float
		constexpr auto PrerollTime = 0x114; // float
		constexpr auto SubSequence = 0x118; // UMovieSceneSequence*
		constexpr auto ActorToRecord = 0x120; // LazyObjectProperty
		constexpr auto TargetSequenceName = 0x140; // FString
		constexpr auto TargetPathToRecordTo = 0x150; // FDirectoryPath
	}

	namespace n_UWB_MOCharCreationHiddenColorEntry_C { // : UMOCharCreationColorEntry
		constexpr auto pImageBGHighlight = 0x308; // UImage*
	}

	namespace n_UControlRigNumericalValidationPass { // : UControlRigValidationPass
		constexpr auto bCheckControls = 0x28; // bool
		constexpr auto bCheckBones = 0x29; // bool
		constexpr auto bCheckCurves = 0x2a; // bool
		constexpr auto TranslationPrecision = 0x2c; // float
		constexpr auto RotationPrecision = 0x30; // float
		constexpr auto ScalePrecision = 0x34; // float
		constexpr auto CurvePrecision = 0x38; // float
		constexpr auto EventNameA = 0x3c; // FName
		constexpr auto EventNameB = 0x44; // FName
		constexpr auto Pose = 0x50; // FRigPose
	}

	namespace n_UMOSpellbookSpell { // : UMOWidgetBlueprint
		constexpr auto pTextBlockName = 0x260; // UTextBlock*
		constexpr auto pTextBlockDescription = 0x268; // UTextBlock*
		constexpr auto pHorizontalBoxRange = 0x270; // UHorizontalBox*
		constexpr auto pTextBlockRange = 0x278; // UTextBlock*
		constexpr auto pHorizontalBoxSpeed = 0x280; // UHorizontalBox*
		constexpr auto pTextBlockSpeed = 0x288; // UTextBlock*
		constexpr auto pHorizontalBoxCastTime = 0x290; // UHorizontalBox*
		constexpr auto pTextBlockCastTime = 0x298; // UTextBlock*
		constexpr auto pHorizontalBoxSkillRange = 0x2a0; // UHorizontalBox*
		constexpr auto pTextBlockSkillRange = 0x2a8; // UTextBlock*
		constexpr auto pHorizontalBoxAlignment = 0x2b0; // UHorizontalBox*
		constexpr auto pTextBlockAlignment = 0x2b8; // UTextBlock*
		constexpr auto pHorizontalBoxMana = 0x2c0; // UHorizontalBox*
		constexpr auto pTextBlockMana = 0x2c8; // UTextBlock*
		constexpr auto pHorizontalBoxDamage = 0x2d0; // UHorizontalBox*
		constexpr auto pTextBlockDamageTitle = 0x2d8; // UTextBlock*
		constexpr auto pTextBlockDamage = 0x2e0; // UTextBlock*
		constexpr auto pButtonSpellWidget = 0x2e8; // UMOButtonSpellWidget*
		constexpr auto pItemSlotStatic0 = 0x2f0; // UMOItemSlotStatic*
		constexpr auto pItemSlotStatic1 = 0x2f8; // UMOItemSlotStatic*
		constexpr auto pItemSlotStatic2 = 0x300; // UMOItemSlotStatic*
		constexpr auto pItemSlotStatic3 = 0x308; // UMOItemSlotStatic*
		constexpr auto pItemSlotStatic4 = 0x310; // UMOItemSlotStatic*
	}

	namespace n_UAnimationSettings { // : UDeveloperSettings
		constexpr auto CompressCommandletVersion = 0x38; // int32_t
		constexpr auto KeyEndEffectorsMatchNameArray = 0x40; // TArray<FString>
		constexpr auto ForceRecompression = 0x50; // bool
		constexpr auto bForceBelowThreshold = 0x51; // bool
		constexpr auto bFirstRecompressUsingCurrentOrDefault = 0x52; // bool
		constexpr auto bRaiseMaxErrorToExisting = 0x53; // bool
		constexpr auto bEnablePerformanceLog = 0x54; // bool
		constexpr auto bStripAnimationDataOnDedicatedServer = 0x55; // bool
		constexpr auto bTickAnimationOnSkeletalMeshInit = 0x56; // bool
		constexpr auto BoneCustomAttributesNames = 0x58; // TArray<FCustomAttributeSetting>
		constexpr auto BoneNamesWithCustomAttributes = 0x68; // TArray<FString>
		constexpr auto AttributeBlendModes = 0x78; // TMap<FName, ECustomAttributeBlendType>
		constexpr auto DefaultAttributeBlendMode = 0xc8; // ECustomAttributeBlendType
	}

	namespace n_USoundNodeWaveParam { // : USoundNode
		constexpr auto WaveParameterName = 0x48; // FName
	}

	namespace n_UMOCooking { // : UMOUserWidget
		constexpr auto pMOButton_Cooking = 0x2c8; // UMOButtonMedium*
		constexpr auto pItemSlotPlaceItem_Resource = 0x2d0; // UMOItemSlotPlaceItem*
		constexpr auto pItemSlotPlaceItem_IngredientSlot_1 = 0x2d8; // UMOItemSlotPlaceItem*
		constexpr auto pItemSlotPlaceItem_IngredientSlot_2 = 0x2e0; // UMOItemSlotPlaceItem*
		constexpr auto pItemSlotPlaceItem_IngredientSlot_3 = 0x2e8; // UMOItemSlotPlaceItem*
		constexpr auto pItemSlotPlaceItem_IngredientSlot_4 = 0x2f0; // UMOItemSlotPlaceItem*
		constexpr auto pItemSlotPlaceItem_IngredientSlot_5 = 0x2f8; // UMOItemSlotPlaceItem*
		constexpr auto pItemSlotPlaceItem_IngredientSlot_6 = 0x300; // UMOItemSlotPlaceItem*
		constexpr auto pItemSlotPlaceItem_IngredientSlot_7 = 0x308; // UMOItemSlotPlaceItem*
		constexpr auto pItemSlotPlaceItem_IngredientSlot_8 = 0x310; // UMOItemSlotPlaceItem*
		constexpr auto pItemSlotPlaceItem_IngredientSlot_9 = 0x318; // UMOItemSlotPlaceItem*
		constexpr auto pItemSlotPlaceItem_IngredientSlot_10 = 0x320; // UMOItemSlotPlaceItem*
		constexpr auto pItemSlotPlaceItem_IngredientSlot_11 = 0x328; // UMOItemSlotPlaceItem*
		constexpr auto pItemSlotPlaceItem_IngredientSlot_12 = 0x330; // UMOItemSlotPlaceItem*
		constexpr auto pItemSlotPlaceItem_IngredientSlot_13 = 0x338; // UMOItemSlotPlaceItem*
		constexpr auto pItemSlotPlaceItem_IngredientSlot_14 = 0x340; // UMOItemSlotPlaceItem*
		constexpr auto pItemSlotPlaceItem_IngredientSlot_15 = 0x348; // UMOItemSlotPlaceItem*
		constexpr auto pItemSlotPlaceItem_IngredientSlot_16 = 0x350; // UMOItemSlotPlaceItem*
		constexpr auto pSlot_000 = 0x358; // UImage*
		constexpr auto pSlot_001 = 0x360; // UImage*
		constexpr auto pSlot_002 = 0x368; // UImage*
		constexpr auto pSlot_003 = 0x370; // UImage*
		constexpr auto pSlot_101 = 0x378; // UImage*
		constexpr auto pSlot_102 = 0x380; // UImage*
		constexpr auto pSlot_103 = 0x388; // UImage*
		constexpr auto pSlot_104 = 0x390; // UImage*
		constexpr auto pSlot_105 = 0x398; // UImage*
		constexpr auto pSlot_106 = 0x3a0; // UImage*
		constexpr auto pSlot_107 = 0x3a8; // UImage*
		constexpr auto pSlot_108 = 0x3b0; // UImage*
		constexpr auto pSlot_109 = 0x3b8; // UImage*
		constexpr auto pSlot_110 = 0x3c0; // UImage*
		constexpr auto pSlot_111 = 0x3c8; // UImage*
		constexpr auto pSlot_112 = 0x3d0; // UImage*
		constexpr auto vIngredientSlotSimplifier = 0x3f0; // TArray<UMOItemSlotPlaceItem*>
		constexpr auto vBasicIngredientsHidden = 0x400; // TArray<UImage*>
		constexpr auto vAdvancedIngredientsHidden = 0x410; // TArray<UImage*>
	}

	namespace n_URotatingMovementComponent { // : UMovementComponent
		constexpr auto RotationRate = 0xf0; // FRotator
		constexpr auto PivotTranslation = 0xfc; // FVector
		constexpr auto bRotationInLocalSpace = 0x108; // char : 1
	}

	namespace n_UControlRigSequence { // : ULevelSequence
		constexpr auto LastExportedToAnimationSequence = 0x1c8; // TSoftObjectPtr<UAnimSequence>
		constexpr auto LastExportedUsingSkeletalMesh = 0x1f0; // TSoftObjectPtr<USkeletalMesh>
		constexpr auto LastExportedFrameRate = 0x218; // float
	}

	namespace n_UMovieSceneFadeSection { // : UMovieSceneSection
		constexpr auto FloatCurve = 0xe8; // FMovieSceneFloatChannel
		constexpr auto FadeColor = 0x188; // FLinearColor
		constexpr auto bFadeAudio = 0x198; // char : 1
	}

	namespace n_UUdpMessagingSettings { // : UObject
		constexpr auto EnabledByDefault = 0x28; // bool
		constexpr auto EnableTransport = 0x29; // bool
		constexpr auto bAutoRepair = 0x2a; // bool
		constexpr auto bStopServiceWhenAppDeactivates = 0x2b; // bool
		constexpr auto UnicastEndpoint = 0x30; // FString
		constexpr auto MulticastEndpoint = 0x40; // FString
		constexpr auto MessageFormat = 0x50; // EUdpMessageFormat
		constexpr auto MulticastTimeToLive = 0x51; // char
		constexpr auto StaticEndpoints = 0x58; // TArray<FString>
		constexpr auto EnableTunnel = 0x68; // bool
		constexpr auto TunnelUnicastEndpoint = 0x70; // FString
		constexpr auto TunnelMulticastEndpoint = 0x80; // FString
		constexpr auto RemoteTunnelEndpoints = 0x90; // TArray<FString>
	}

	namespace n_UPrimitiveComponent { // : USceneComponent
		constexpr auto MinDrawDistance = 0x200; // float
		constexpr auto LDMaxDrawDistance = 0x204; // float
		constexpr auto CachedMaxDrawDistance = 0x208; // float
		constexpr auto DepthPriorityGroup = 0x20c; // ESceneDepthPriorityGroup
		constexpr auto ViewOwnerDepthPriorityGroup = 0x20d; // ESceneDepthPriorityGroup
		constexpr auto IndirectLightingCacheQuality = 0x20e; // EIndirectLightingCacheQuality
		constexpr auto LightmapType = 0x20f; // ELightmapType
		constexpr auto bUseMaxLODAsImposter = 0x210; // char : 1
		constexpr auto bBatchImpostersAsInstances = 0x210; // char : 1
		constexpr auto bNeverDistanceCull = 0x210; // char : 1
		constexpr auto bAlwaysCreatePhysicsState = 0x210; // char : 1
		constexpr auto bGenerateOverlapEvents = 0x211; // char : 1
		constexpr auto bMultiBodyOverlap = 0x211; // char : 1
		constexpr auto bTraceComplexOnMove = 0x211; // char : 1
		constexpr auto bReturnMaterialOnMove = 0x211; // char : 1
		constexpr auto bUseViewOwnerDepthPriorityGroup = 0x211; // char : 1
		constexpr auto bAllowCullDistanceVolume = 0x211; // char : 1
		constexpr auto bHasMotionBlurVelocityMeshes = 0x211; // char : 1
		constexpr auto bVisibleInReflectionCaptures = 0x211; // char : 1
		constexpr auto bVisibleInRealTimeSkyCaptures = 0x212; // char : 1
		constexpr auto bVisibleInRayTracing = 0x212; // char : 1
		constexpr auto bRenderInMainPass = 0x212; // char : 1
		constexpr auto bRenderInDepthPass = 0x212; // char : 1
		constexpr auto bReceivesDecals = 0x212; // char : 1
		constexpr auto bOwnerNoSee = 0x212; // char : 1
		constexpr auto bOnlyOwnerSee = 0x212; // char : 1
		constexpr auto bTreatAsBackgroundForOcclusion = 0x212; // char : 1
		constexpr auto bUseAsOccluder = 0x213; // char : 1
		constexpr auto bSelectable = 0x213; // char : 1
		constexpr auto bForceMipStreaming = 0x213; // char : 1
		constexpr auto bHasPerInstanceHitProxies = 0x213; // char : 1
		constexpr auto CastShadow = 0x213; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x213; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x213; // char : 1
		constexpr auto bCastDynamicShadow = 0x213; // char : 1
		constexpr auto bCastStaticShadow = 0x214; // char : 1
		constexpr auto bCastVolumetricTranslucentShadow = 0x214; // char : 1
		constexpr auto bCastContactShadow = 0x214; // char : 1
		constexpr auto bSelfShadowOnly = 0x214; // char : 1
		constexpr auto bCastFarShadow = 0x214; // char : 1
		constexpr auto bCastInsetShadow = 0x214; // char : 1
		constexpr auto bCastCinematicShadow = 0x214; // char : 1
		constexpr auto bCastHiddenShadow = 0x214; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x215; // char : 1
		constexpr auto bLightAsIfStatic = 0x215; // char : 1
		constexpr auto bLightAttachmentsAsGroup = 0x215; // char : 1
		constexpr auto bExcludeFromLightAttachmentGroup = 0x215; // char : 1
		constexpr auto bReceiveMobileCSMShadows = 0x215; // char : 1
		constexpr auto bSingleSampleShadowFromStationaryLights = 0x215; // char : 1
		constexpr auto bIgnoreRadialImpulse = 0x215; // char : 1
		constexpr auto bIgnoreRadialForce = 0x215; // char : 1
		constexpr auto bApplyImpulseOnDamage = 0x216; // char : 1
		constexpr auto bReplicatePhysicsToAutonomousProxy = 0x216; // char : 1
		constexpr auto bFillCollisionUnderneathForNavmesh = 0x216; // char : 1
		constexpr auto AlwaysLoadOnClient = 0x216; // char : 1
		constexpr auto AlwaysLoadOnServer = 0x216; // char : 1
		constexpr auto bUseEditorCompositing = 0x216; // char : 1
		constexpr auto bRenderCustomDepth = 0x216; // char : 1
		constexpr auto bHasCustomNavigableGeometry = 0x217; // EHasCustomNavigableGeometry
		constexpr auto CanCharacterStepUpOn = 0x219; // ECanBeCharacterBase
		constexpr auto LightingChannels = 0x21a; // FLightingChannels
		constexpr auto CustomDepthStencilWriteMask = 0x21b; // ERendererStencilMask
		constexpr auto CustomDepthStencilValue = 0x21c; // int32_t
		constexpr auto CustomPrimitiveData = 0x220; // FCustomPrimitiveData
		constexpr auto CustomPrimitiveDataInternal = 0x230; // FCustomPrimitiveData
		constexpr auto TranslucencySortPriority = 0x248; // int32_t
		constexpr auto VisibilityId = 0x24c; // int32_t
		constexpr auto RuntimeVirtualTextures = 0x250; // TArray<URuntimeVirtualTexture*>
		constexpr auto VirtualTextureLodBias = 0x260; // int8_t
		constexpr auto VirtualTextureCullMips = 0x261; // int8_t
		constexpr auto VirtualTextureMinCoverage = 0x262; // int8_t
		constexpr auto VirtualTextureRenderPassType = 0x263; // ERuntimeVirtualTextureMainPassType
		constexpr auto LpvBiasMultiplier = 0x268; // float
		constexpr auto BoundsScale = 0x274; // float
		constexpr auto MoveIgnoreActors = 0x288; // TArray<AActor*>
		constexpr auto MoveIgnoreComponents = 0x298; // TArray<UPrimitiveComponent*>
		constexpr auto BodyInstance = 0x2b8; // FBodyInstance
		constexpr auto OnComponentHit = 0x410; // FMulticastSparseDelegate
		constexpr auto OnComponentBeginOverlap = 0x411; // FMulticastSparseDelegate
		constexpr auto OnComponentEndOverlap = 0x412; // FMulticastSparseDelegate
		constexpr auto OnComponentWake = 0x413; // FMulticastSparseDelegate
		constexpr auto OnComponentSleep = 0x414; // FMulticastSparseDelegate
		constexpr auto OnBeginCursorOver = 0x416; // FMulticastSparseDelegate
		constexpr auto OnEndCursorOver = 0x417; // FMulticastSparseDelegate
		constexpr auto OnClicked = 0x418; // FMulticastSparseDelegate
		constexpr auto OnReleased = 0x419; // FMulticastSparseDelegate
		constexpr auto OnInputTouchBegin = 0x41a; // FMulticastSparseDelegate
		constexpr auto OnInputTouchEnd = 0x41b; // FMulticastSparseDelegate
		constexpr auto OnInputTouchEnter = 0x41c; // FMulticastSparseDelegate
		constexpr auto OnInputTouchLeave = 0x41d; // FMulticastSparseDelegate
		constexpr auto LODParentPrimitive = 0x438; // UPrimitiveComponent*
	}

	namespace n_UARComponent { // : USceneComponent
		constexpr auto NativeID = 0x1f8; // FGuid
		constexpr auto bUseDefaultReplication = 0x238; // bool
		constexpr auto DefaultMeshMaterial = 0x240; // UMaterialInterface*
		constexpr auto DefaultWireframeMeshMaterial = 0x248; // UMaterialInterface*
		constexpr auto MRMeshComponent = 0x250; // UMRMeshComponent*
		constexpr auto MyTrackedGeometry = 0x258; // UARTrackedGeometry*
	}

	namespace n_UNavigationQueryFilter { // : UObject
		constexpr auto Areas = 0x28; // TArray<FNavigationFilterArea>
		constexpr auto IncludeFlags = 0x38; // FNavigationFilterFlags
		constexpr auto ExcludeFlags = 0x3c; // FNavigationFilterFlags
	}

	namespace n_ACameraActor { // : AActor
		constexpr auto AutoActivateForPlayer = 0x220; // EAutoReceiveInput
		constexpr auto CameraComponent = 0x228; // UCameraComponent*
		constexpr auto SceneComponent = 0x230; // USceneComponent*
		constexpr auto bConstrainAspectRatio = 0x240; // char : 1
		constexpr auto AspectRatio = 0x244; // float
		constexpr auto FOVAngle = 0x248; // float
		constexpr auto PostProcessBlendWeight = 0x24c; // float
		constexpr auto PostProcessSettings = 0x250; // FPostProcessSettings
	}

	namespace n_UTextLayoutWidget { // : UWidget
		constexpr auto ShapedTextOptions = 0x108; // FShapedTextOptions
		constexpr auto Justification = 0x10b; // ETextJustify
		constexpr auto WrappingPolicy = 0x10c; // ETextWrappingPolicy
		constexpr auto AutoWrapText = 0x10d; // char : 1
		constexpr auto WrapTextAt = 0x110; // float
		constexpr auto Margin = 0x114; // FMargin
		constexpr auto LineHeightPercentage = 0x124; // float
	}

	namespace n_UGeometryCollectionDebugDrawComponent { // : UActorComponent
		constexpr auto GeometryCollectionDebugDrawActor = 0xb0; // AGeometryCollectionDebugDrawActor*
		constexpr auto GeometryCollectionRenderLevelSetActor = 0xb8; // AGeometryCollectionRenderLevelSetActor*
	}

	namespace n_UNavigationSystemConfig { // : UObject
		constexpr auto NavigationSystemClass = 0x28; // FSoftClassPath
		constexpr auto SupportedAgentsMask = 0x40; // FNavAgentSelector
		constexpr auto DefaultAgentName = 0x44; // FName
		constexpr auto bIsOverriden = 0x4c; // char : 1
	}

	namespace n_UParticleModuleMeshRotation_Seeded { // : UParticleModuleMeshRotation
		constexpr auto RandomSeedInfo = 0x80; // FParticleRandomSeedInfo
	}

	namespace n_UNavCollisionBase { // : UObject
		constexpr auto bIsDynamicObstacle = 0x28; // char : 1
	}

	namespace n_UMaterialExpressionReflectionVectorWS { // : UMaterialExpression
		constexpr auto CustomWorldNormal = 0x40; // FExpressionInput
		constexpr auto bNormalizeCustomWorldNormal = 0x54; // char : 1
	}

	namespace n_UPlanarReflectionComponent { // : USceneCaptureComponent
		constexpr auto PreviewBox = 0x2b0; // UBoxComponent*
		constexpr auto NormalDistortionStrength = 0x2b8; // float
		constexpr auto PrefilterRoughness = 0x2bc; // float
		constexpr auto PrefilterRoughnessDistance = 0x2c0; // float
		constexpr auto ScreenPercentage = 0x2c4; // int32_t
		constexpr auto ExtraFOV = 0x2c8; // float
		constexpr auto DistanceFromPlaneFadeStart = 0x2cc; // float
		constexpr auto DistanceFromPlaneFadeEnd = 0x2d0; // float
		constexpr auto DistanceFromPlaneFadeoutStart = 0x2d4; // float
		constexpr auto DistanceFromPlaneFadeoutEnd = 0x2d8; // float
		constexpr auto AngleFromPlaneFadeStart = 0x2dc; // float
		constexpr auto AngleFromPlaneFadeEnd = 0x2e0; // float
		constexpr auto bShowPreviewPlane = 0x2e4; // bool
		constexpr auto bRenderSceneTwoSided = 0x2e5; // bool
	}

	namespace n_ULiveLinkSettings { // : UObject
		constexpr auto DefaultRoleSettings = 0x28; // TArray<FLiveLinkRoleProjectSetting>
		constexpr auto FrameInterpolationProcessor = 0x38; // ULiveLinkFrameInterpolationProcessor*
		constexpr auto DefaultLiveLinkPreset = 0x40; // TSoftObjectPtr<ULiveLinkPreset>
		constexpr auto PresetSaveDir = 0x68; // FDirectoryPath
		constexpr auto ClockOffsetCorrectionStep = 0x78; // float
		constexpr auto DefaultMessageBusSourceMode = 0x7c; // ELiveLinkSourceMode
		constexpr auto MessageBusPingRequestFrequency = 0x80; // double
		constexpr auto MessageBusHeartbeatFrequency = 0x88; // double
		constexpr auto MessageBusHeartbeatTimeout = 0x90; // double
		constexpr auto MessageBusTimeBeforeRemovingInactiveSource = 0x98; // double
		constexpr auto TimeWithoutFrameToBeConsiderAsInvalid = 0xa0; // double
		constexpr auto ValidColor = 0xa8; // FLinearColor
		constexpr auto InvalidColor = 0xb8; // FLinearColor
		constexpr auto TextSizeSource = 0xc8; // char
		constexpr auto TextSizeSubject = 0xc9; // char
	}

	namespace n_UMaterialExpressionTextureSampleParameterSubUV { // : UMaterialExpressionTextureSampleParameter2D
		constexpr auto bBlend = 0x80; // char : 1
	}

	namespace n_UNiagaraPreviewAxis_InterpParamFloat { // : UNiagaraPreviewAxis_InterpParamBase
		constexpr auto Min = 0x38; // float
		constexpr auto Max = 0x3c; // float
	}

	namespace n_UBTTask_SetTagCooldown { // : UBTTaskNode
		constexpr auto CooldownTag = 0x70; // FGameplayTag
		constexpr auto bAddToExistingDuration = 0x78; // bool
		constexpr auto CooldownDuration = 0x7c; // float
	}

	namespace n_UARCandidateImage { // : UDataAsset
		constexpr auto CandidateTexture = 0x30; // UTexture2D*
		constexpr auto FriendlyName = 0x38; // FString
		constexpr auto Width = 0x48; // float
		constexpr auto Height = 0x4c; // float
		constexpr auto Orientation = 0x50; // EARCandidateImageOrientation
	}

	namespace n_USubmixEffectTapDelayPreset { // : USoundEffectSubmixPreset
		constexpr auto Settings = 0xa8; // FSubmixEffectTapDelaySettings
	}

	namespace n_USourceEffectBitCrusherPreset { // : USoundEffectSourcePreset
		constexpr auto Settings = 0xc0; // FSourceEffectBitCrusherSettings
	}

	namespace n_UMORefining { // : UMOUserWidget
		constexpr auto pMOButton_Refining = 0x2c8; // UMOButtonMedium*
		constexpr auto pTextBlock_Sign = 0x2d0; // UTextBlock*
		constexpr auto pItemSlotPlaceItem_Resource = 0x2d8; // UMOItemSlotPlaceItem*
		constexpr auto pItemSlotPlaceItem_CatalystA = 0x2e0; // UMOItemSlotPlaceItem*
		constexpr auto pItemSlotPlaceItem_CatalystB = 0x2e8; // UMOItemSlotPlaceItem*
	}

	namespace n_UHorizontalBoxSlot { // : UPanelSlot
		constexpr auto Padding = 0x40; // FMargin
		constexpr auto Size = 0x50; // FSlateChildSize
		constexpr auto HorizontalAlignment = 0x58; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x59; // EVerticalAlignment
	}

	namespace n_UNiagaraScript { // : UNiagaraScriptBase
		constexpr auto Usage = 0x28; // ENiagaraScriptUsage
		constexpr auto UsageIndex = 0x2c; // int32_t
		constexpr auto UsageId = 0x30; // FGuid
		constexpr auto RapidIterationParameters = 0x40; // FNiagaraParameterStore
		constexpr auto ScriptExecutionParamStore = 0xb8; // FNiagaraScriptExecutionParameterStore
		constexpr auto ScriptExecutionBoundParameters = 0x150; // TArray<FNiagaraBoundParameter>
		constexpr auto CachedScriptVMId = 0x160; // FNiagaraVMExecutableDataId
		constexpr auto CachedScriptVM = 0x1b8; // FNiagaraVMExecutableData
		constexpr auto CachedParameterCollectionReferences = 0x298; // TArray<UNiagaraParameterCollection*>
		constexpr auto CachedDefaultDataInterfaces = 0x2a8; // TArray<FNiagaraScriptDataInterfaceInfo>
	}

	namespace n_UParticleModuleLocationEmitterDirect { // : UParticleModuleLocationBase
		constexpr auto EmitterName = 0x30; // FName
	}

	namespace n_UNiagaraDataInterfaceArrayFloat4 { // : UNiagaraDataInterfaceArray
		constexpr auto FloatData = 0x50; // TArray<FVector4>
	}

	namespace n_UBTTask_GameplayTaskBase { // : UBTTaskNode
		constexpr auto bWaitForGameplayTask = 0x70; // char : 1
	}

	namespace n_UMaterialExpressionDotProduct { // : UMaterialExpression
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_UMultiLineEditableText { // : UTextLayoutWidget
		constexpr auto Text = 0x128; // FText
		constexpr auto HintText = 0x140; // FText
		constexpr auto HintTextDelegate = 0x158; // FDelegate
		constexpr auto WidgetStyle = 0x168; // FTextBlockStyle
		constexpr auto bIsReadOnly = 0x3d8; // bool
		constexpr auto Font = 0x3e0; // FSlateFontInfo
		constexpr auto SelectAllTextWhenFocused = 0x438; // bool
		constexpr auto ClearTextSelectionOnFocusLoss = 0x439; // bool
		constexpr auto RevertTextOnEscape = 0x43a; // bool
		constexpr auto ClearKeyboardFocusOnCommit = 0x43b; // bool
		constexpr auto AllowContextMenu = 0x43c; // bool
		constexpr auto VirtualKeyboardOptions = 0x43d; // FVirtualKeyboardOptions
		constexpr auto VirtualKeyboardDismissAction = 0x43e; // EVirtualKeyboardDismissAction
		constexpr auto OnTextChanged = 0x440; // FMulticastInlineDelegate
		constexpr auto OnTextCommitted = 0x450; // FMulticastInlineDelegate
	}

	namespace n_ULandscapeSplineControlPoint { // : UObject
		constexpr auto Location = 0x28; // FVector
		constexpr auto Rotation = 0x34; // FRotator
		constexpr auto Width = 0x40; // float
		constexpr auto LayerWidthRatio = 0x44; // float
		constexpr auto SideFalloff = 0x48; // float
		constexpr auto LeftSideFalloffFactor = 0x4c; // float
		constexpr auto RightSideFalloffFactor = 0x50; // float
		constexpr auto LeftSideLayerFalloffFactor = 0x54; // float
		constexpr auto RightSideLayerFalloffFactor = 0x58; // float
		constexpr auto EndFalloff = 0x5c; // float
		constexpr auto ConnectedSegments = 0x60; // TArray<FLandscapeSplineConnection>
		constexpr auto Points = 0x70; // TArray<FLandscapeSplineInterpPoint>
		constexpr auto Bounds = 0x80; // FBox
		constexpr auto LocalMeshComponent = 0xa0; // UControlPointMeshComponent*
	}

	namespace n_UMODamageVingette { // : UMOUserWidget
		constexpr auto pImageVingette = 0x2c8; // UImage*
	}

	namespace n_USoundSubmixWithParentBase { // : USoundSubmixBase
		constexpr auto ParentSubmix = 0x38; // USoundSubmixBase*
	}

	namespace n_UMaterialExpressionVirtualTextureFeatureSwitch { // : UMaterialExpression
		constexpr auto No = 0x40; // FExpressionInput
		constexpr auto Yes = 0x54; // FExpressionInput
	}

	namespace n_UMOAnimationInstancePlayerUndead { // : UMOAnimationInstancePlayer
		constexpr auto TurnWhileMovingAngle = 0x690; // float
		constexpr auto RollWhileMovingAngle = 0x694; // float
		constexpr auto PelvisWhileMovingRotator = 0x698; // FRotator
		constexpr auto PelvisWhileMovingTranslation = 0x6a4; // FVector
	}

	namespace n_UEditableGameplayTagQueryExpression_NoExprMatch { // : UEditableGameplayTagQueryExpression
		constexpr auto Expressions = 0x28; // TArray<UEditableGameplayTagQueryExpression*>
	}

	namespace n_UGameMapsSettings { // : UObject
		constexpr auto LocalMapOptions = 0x28; // FString
		constexpr auto TransitionMap = 0x38; // FSoftObjectPath
		constexpr auto bUseSplitscreen = 0x50; // bool
		constexpr auto TwoPlayerSplitscreenLayout = 0x51; // ETwoPlayerSplitScreenType
		constexpr auto ThreePlayerSplitscreenLayout = 0x52; // EThreePlayerSplitScreenType
		constexpr auto FourPlayerSplitscreenLayout = 0x53; // EFourPlayerSplitScreenType
		constexpr auto bOffsetPlayerGamepadIds = 0x54; // bool
		constexpr auto GameInstanceClass = 0x58; // FSoftClassPath
		constexpr auto GameDefaultMap = 0x70; // FSoftObjectPath
		constexpr auto ServerDefaultMap = 0x88; // FSoftObjectPath
		constexpr auto GlobalDefaultGameMode = 0xa0; // FSoftClassPath
		constexpr auto GlobalDefaultServerGameMode = 0xb8; // FSoftClassPath
		constexpr auto GameModeMapPrefixes = 0xd0; // TArray<FGameModeName>
		constexpr auto GameModeClassAliases = 0xe0; // TArray<FGameModeName>
	}

	namespace n_UMOPetsAll { // : UMOUserWidget
		constexpr auto pMOPets = 0x2c8; // UMOPets*
		constexpr auto pMOScrollBox_Pets = 0x2d0; // UMOScrollBox*
		constexpr auto pTextBlockPetPoints = 0x2d8; // UTextBlock*
		constexpr auto pTextBlockPetPointsMax = 0x2e0; // UTextBlock*
		constexpr auto pMOButtonPetSkill_Attack = 0x2e8; // UMOButtonPetSkillWidget*
		constexpr auto pMOButtonPetSkill_Follow = 0x2f0; // UMOButtonPetSkillWidget*
		constexpr auto pMOButtonPetSkill_Stay = 0x2f8; // UMOButtonPetSkillWidget*
		constexpr auto pMOButtonPetSkill_PetBags = 0x300; // UMOButtonPetSkillWidget*
	}

	namespace n_UPaperSprite { // : UObject
		constexpr auto AdditionalSourceTextures = 0x38; // TArray<UTexture*>
		constexpr auto BakedSourceUV = 0x48; // FVector2D
		constexpr auto BakedSourceDimension = 0x50; // FVector2D
		constexpr auto BakedSourceTexture = 0x58; // UTexture2D*
		constexpr auto DefaultMaterial = 0x60; // UMaterialInterface*
		constexpr auto AlternateMaterial = 0x68; // UMaterialInterface*
		constexpr auto Sockets = 0x70; // TArray<FPaperSpriteSocket>
		constexpr auto SpriteCollisionDomain = 0x80; // ESpriteCollisionMode
		constexpr auto PixelsPerUnrealUnit = 0x84; // float
		constexpr auto BodySetup = 0x88; // UBodySetup*
		constexpr auto AlternateMaterialSplitIndex = 0x90; // int32_t
		constexpr auto BakedRenderData = 0x98; // TArray<FVector4>
	}

	namespace n_UMovieSceneEasingExternalCurve { // : UObject
		constexpr auto Curve = 0x30; // UCurveFloat*
	}

	namespace n_UParticleModuleCollision { // : UParticleModuleCollisionBase
		constexpr auto DampingFactor = 0x30; // FRawDistributionVector
		constexpr auto DampingFactorRotation = 0x78; // FRawDistributionVector
		constexpr auto MaxCollisions = 0xc0; // FRawDistributionFloat
		constexpr auto CollisionCompletionOption = 0xf0; // EParticleCollisionComplete
		constexpr auto CollisionTypes = 0xf8; // TArray<EObjectTypeQuery>
		constexpr auto bApplyPhysics = 0x110; // char : 1
		constexpr auto bIgnoreTriggerVolumes = 0x110; // char : 1
		constexpr auto ParticleMass = 0x118; // FRawDistributionFloat
		constexpr auto DirScalar = 0x148; // float
		constexpr auto bPawnsDoNotDecrementCount = 0x14c; // char : 1
		constexpr auto bOnlyVerticalNormalsDecrementCount = 0x14c; // char : 1
		constexpr auto VerticalFudgeFactor = 0x150; // float
		constexpr auto DelayAmount = 0x158; // FRawDistributionFloat
		constexpr auto bDropDetail = 0x188; // char : 1
		constexpr auto bCollideOnlyIfVisible = 0x188; // char : 1
		constexpr auto bIgnoreSourceActor = 0x188; // char : 1
		constexpr auto MaxCollisionDistance = 0x18c; // float
	}

	namespace n_UMaterialExpressionMaterialFunctionCall { // : UMaterialExpression
		constexpr auto MaterialFunction = 0x40; // UMaterialFunctionInterface*
		constexpr auto FunctionParameterInfo = 0x48; // FMaterialParameterInfo
	}

	namespace n_UWB_TabManager_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto WidgetReference = 0x268; // UMOWidgetBlueprint*
		constexpr auto TabButtonArray = 0x270; // TArray<UWB_TabButton_C*>
		constexpr auto WidgetSwitcher = 0x280; // UWidgetSwitcher*
	}

	namespace n_AMOGameModeMenu { // : AGameModeBase
		constexpr auto pLoginHUD = 0x2c0; // UMOLoginHUD*
		constexpr auto sAvatarName = 0x2c8; // FString
		constexpr auto sAvatarData = 0x2d8; // FString
	}

	namespace n_UDatasmithMaterialInstanceTemplate { // : UDatasmithObjectTemplate
		constexpr auto ParentMaterial = 0x30; // TSoftObjectPtr<UMaterialInterface>
		constexpr auto ScalarParameterValues = 0x58; // TMap<FName, float>
		constexpr auto VectorParameterValues = 0xa8; // TMap<FName, FLinearColor>
		constexpr auto TextureParameterValues = 0xf8; // TMap<FName, TSoftObjectPtr<UTexture>>
		constexpr auto StaticParameters = 0x148; // FDatasmithStaticParameterSetTemplate
	}

	namespace n_UEditableTextBoxWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto EditableTextBoxStyle = 0x30; // FEditableTextBoxStyle
	}

	namespace n_UMaterialExpressionStep { // : UMaterialExpression
		constexpr auto Y = 0x40; // FExpressionInput
		constexpr auto X = 0x54; // FExpressionInput
		constexpr auto ConstY = 0x68; // float
		constexpr auto ConstX = 0x6c; // float
	}

	namespace n_UMovieScenePropertyTrack { // : UMovieSceneNameableTrack
		constexpr auto SectionToKey = 0x78; // UMovieSceneSection*
		constexpr auto PropertyBinding = 0x80; // FMovieScenePropertyBinding
		constexpr auto Sections = 0x98; // TArray<UMovieSceneSection*>
	}

	namespace n_UWB_MOCarouselSelectValue_C { // : UMOCarouselSelectValue
		constexpr auto UberGraphFrame = 0x350; // FPointerToUberGraphFrame
		constexpr auto pChangedValue = 0x358; // UWidgetAnimation*
		constexpr auto CanvasPanel_1 = 0x360; // UCanvasPanel*
		constexpr auto pIconImage = 0x368; // UImage*
		constexpr auto WB_RingFlare = 0x370; // UWB_RingFlare_C*
		constexpr auto pIconTexture = 0x378; // UTexture2D*
	}

	namespace n_ULiveLinkAnimationVirtualSubject { // : ULiveLinkVirtualSubject
		constexpr auto bAppendSubjectNameToBones = 0xd9; // bool
	}

	namespace n_ULiveLinkAnimationRoleToTransform { // : ULiveLinkFrameTranslator
		constexpr auto BoneName = 0x28; // FName
	}

	namespace n_UAISense_Damage { // : UAISense
		constexpr auto RegisteredEvents = 0x80; // TArray<FAIDamageEvent>
	}

	namespace n_UMOPerformanceStatsOverlay { // : UMOUserWidget
		constexpr auto pFPSTitle = 0x2c8; // UTextBlock*
		constexpr auto SmoothedFPS = 0x2d0; // float
		constexpr auto TextUpdateTimer = 0x2d4; // float
	}

	namespace n_APlayerState { // : AInfo
		constexpr auto Score = 0x220; // float
		constexpr auto PlayerId = 0x224; // int32_t
		constexpr auto Ping = 0x228; // char
		constexpr auto bShouldUpdateReplicatedPing = 0x22a; // char : 1
		constexpr auto bIsSpectator = 0x22a; // char : 1
		constexpr auto bOnlySpectator = 0x22a; // char : 1
		constexpr auto bIsABot = 0x22a; // char : 1
		constexpr auto bIsInactive = 0x22a; // char : 1
		constexpr auto bFromPreviousLevel = 0x22a; // char : 1
		constexpr auto StartTime = 0x22c; // int32_t
		constexpr auto EngineMessageClass = 0x230; // ULocalMessage*
		constexpr auto SavedNetworkAddress = 0x240; // FString
		constexpr auto UniqueId = 0x250; // FUniqueNetIdRepl
		constexpr auto PawnPrivate = 0x280; // APawn*
		constexpr auto PlayerNamePrivate = 0x300; // FString
	}

	namespace n_UDistributionFloat { // : UDistribution
		constexpr auto bCanBeBaked = 0x30; // char : 1
		constexpr auto bBakedDataSuccesfully = 0x30; // char : 1
	}

	namespace n_UMaterialExpressionQualitySwitch { // : UMaterialExpression
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto Inputs = 0x54; // FExpressionInput [0x4]
	}

	namespace n_UAsyncActionHandleSaveGame { // : UBlueprintAsyncActionBase
		constexpr auto Completed = 0x30; // FMulticastInlineDelegate
		constexpr auto SaveGameObject = 0x60; // USaveGame*
	}

	namespace n_AMaterialInstanceActor { // : AActor
		constexpr auto TargetActors = 0x220; // TArray<AActor*>
	}

	namespace n_UARObjectComponent { // : UARComponent
		constexpr auto ReplicatedPayload = 0x280; // FARObjectUpdatePayload
	}

	namespace n_UForceFeedbackComponent { // : USceneComponent
		constexpr auto ForceFeedbackEffect = 0x1f8; // UForceFeedbackEffect*
		constexpr auto bAutoDestroy = 0x200; // char : 1
		constexpr auto bStopWhenOwnerDestroyed = 0x200; // char : 1
		constexpr auto bLooping = 0x200; // char : 1
		constexpr auto bIgnoreTimeDilation = 0x200; // char : 1
		constexpr auto bOverrideAttenuation = 0x200; // char : 1
		constexpr auto IntensityMultiplier = 0x204; // float
		constexpr auto AttenuationSettings = 0x208; // UForceFeedbackAttenuation*
		constexpr auto AttenuationOverrides = 0x210; // FForceFeedbackAttenuationSettings
		constexpr auto OnForceFeedbackFinished = 0x2c0; // FMulticastInlineDelegate
	}

	namespace n_UGizmoPlaneTranslationParameterSource { // : UGizmoBaseVec2ParameterSource
		constexpr auto AxisSource = 0x90; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0xa0; // TScriptInterface<IGizmoTransformSource>
		constexpr auto Parameter = 0xb0; // FVector2D
		constexpr auto LastChange = 0xb8; // FGizmoVec2ParameterChange
		constexpr auto CurTranslationOrigin = 0xc8; // FVector
		constexpr auto CurTranslationNormal = 0xd4; // FVector
		constexpr auto CurTranslationAxisX = 0xe0; // FVector
		constexpr auto CurTranslationAxisY = 0xec; // FVector
		constexpr auto InitialTransform = 0x100; // FTransform
	}

	namespace n_UMOLoadingSubsystem { // : UMOGameInstanceSubsystemBase
		constexpr auto sCharacterName = 0x40; // FString
		constexpr auto pLoadingWidget = 0x50; // UMOUserWidgetLoadingScreen*
		constexpr auto pLoadingWidgetClass = 0x58; // UMOUserWidgetLoadingScreen*
	}

	namespace n_ASkyLight { // : AInfo
		constexpr auto LightComponent = 0x220; // USkyLightComponent*
		constexpr auto bEnabled = 0x228; // char : 1
	}

	namespace n_UCameraModifier_CameraShake { // : UCameraModifier
		constexpr auto ActiveShakes = 0x48; // TArray<FActiveCameraShakeInfo>
		constexpr auto ExpiredPooledShakesMap = 0x58; // TMap<UCameraShakeBase*, FPooledCameraShakes>
		constexpr auto SplitScreenShakeScale = 0xa8; // float
	}

	namespace n_UMOSpellbookSpellList { // : UMOWidgetBlueprint
		constexpr auto cSpellIconWidgetClass = 0x260; // UUserWidget*
		constexpr auto pTextBlockSchool = 0x268; // UTextBlock*
		constexpr auto pUniformGridPanelSpells = 0x270; // UUniformGridPanel*
		constexpr auto eMagicSchool = 0x278; // EMagicSchools
	}

	namespace n_UParticleModuleAccelerationOverLifetime { // : UParticleModuleAccelerationBase
		constexpr auto AccelOverLife = 0x38; // FRawDistributionVector
	}

	namespace n_UAsyncActionLoadPrimaryAsset { // : UAsyncActionLoadPrimaryAssetBase
		constexpr auto Completed = 0x78; // FMulticastInlineDelegate
	}

	namespace n_ULevelSequencePlayer { // : UMovieSceneSequencePlayer
		constexpr auto OnCameraCut = 0x680; // FMulticastInlineDelegate
	}

	namespace n_UWB_MOCharCreationColorEntry_C { // : UMOCharCreationColorEntry
		constexpr auto pImageBG = 0x308; // UImage*
	}

	namespace n_UMaterialExpressionBlackBody { // : UMaterialExpression
		constexpr auto Temp = 0x40; // FExpressionInput
	}

	namespace n_UMOComboBoxStringEntry { // : UMOOptionsEntry
		constexpr auto pMOComboBoxString = 0x318; // UMOComboBoxString*
		constexpr auto vGenerateComboBoxStringOptions = 0x320; // TArray<FString>
	}

	namespace n_UMaterialExpressionStaticBoolParameter { // : UMaterialExpressionParameter
		constexpr auto DefaultValue = 0x58; // char : 1
	}

	namespace n_ULevelActorContainer { // : UObject
		constexpr auto Actors = 0x28; // TArray<AActor*>
	}

	namespace n_USoundNodeSoundClass { // : USoundNode
		constexpr auto SoundClassOverride = 0x48; // USoundClass*
	}

	namespace n_UMaterialExpressionOneMinus { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UMaterialExpressionLogarithm2 { // : UMaterialExpression
		constexpr auto X = 0x40; // FExpressionInput
	}

	namespace n_UMovieScenePrimitiveMaterialTrack { // : UMovieScenePropertyTrack
		constexpr auto MaterialIndex = 0xb0; // int32_t
	}

	namespace n_UImage { // : UWidget
		constexpr auto Brush = 0x108; // FSlateBrush
		constexpr auto BrushDelegate = 0x190; // FDelegate
		constexpr auto ColorAndOpacity = 0x1a0; // FLinearColor
		constexpr auto ColorAndOpacityDelegate = 0x1b0; // FDelegate
		constexpr auto bFlipForRightToLeftFlowDirection = 0x1c0; // bool
		constexpr auto OnMouseButtonDownEvent = 0x1c4; // FDelegate
	}

	namespace n_UDatasmithStaticMeshTemplate { // : UDatasmithObjectTemplate
		constexpr auto SectionInfoMap = 0x30; // FDatasmithMeshSectionInfoMapTemplate
		constexpr auto LightMapCoordinateIndex = 0x80; // int32_t
		constexpr auto LightMapResolution = 0x84; // int32_t
		constexpr auto BuildSettings = 0x88; // TArray<FDatasmithMeshBuildSettingsTemplate>
		constexpr auto StaticMaterials = 0x98; // TArray<FDatasmithStaticMaterialTemplate>
	}

	namespace n_UMovieSceneSkeletalAnimationSection { // : UMovieSceneSection
		constexpr auto Params = 0xe8; // FMovieSceneSkeletalAnimationParams
		constexpr auto AnimSequence = 0x1c0; // UAnimSequence*
		constexpr auto Animation = 0x1c8; // UAnimSequenceBase*
		constexpr auto StartOffset = 0x1d0; // float
		constexpr auto EndOffset = 0x1d4; // float
		constexpr auto PlayRate = 0x1d8; // float
		constexpr auto bReverse = 0x1dc; // char : 1
		constexpr auto SlotName = 0x1e0; // FName
		constexpr auto StartLocationOffset = 0x1e8; // FVector
		constexpr auto StartRotationOffset = 0x1f4; // FRotator
		constexpr auto bMatchWithPrevious = 0x200; // bool
		constexpr auto MatchedBoneName = 0x204; // FName
		constexpr auto MatchedLocationOffset = 0x20c; // FVector
		constexpr auto MatchedRotationOffset = 0x218; // FRotator
		constexpr auto bMatchTranslation = 0x224; // bool
		constexpr auto bMatchIncludeZHeight = 0x225; // bool
		constexpr auto bMatchRotationYaw = 0x226; // bool
		constexpr auto bMatchRotationPitch = 0x227; // bool
		constexpr auto bMatchRotationRoll = 0x228; // bool
	}

	namespace n_UCreateSessionCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UBrushBaseProperties { // : UInteractiveToolPropertySet
		constexpr auto BrushSize = 0x60; // float
		constexpr auto bSpecifyRadius = 0x64; // bool
		constexpr auto BrushRadius = 0x68; // float
		constexpr auto BrushStrength = 0x6c; // float
		constexpr auto BrushFalloffAmount = 0x70; // float
		constexpr auto bShowStrength = 0x74; // bool
		constexpr auto bShowFalloff = 0x75; // bool
	}

	namespace n_UMODragDropOperationWindow { // : UMODragDropOperation
		constexpr auto pWidgetRef = 0x88; // UUserWidget*
		constexpr auto vMousePosition = 0x90; // FVector2D
	}

	namespace n_UAnimNotifyState_TimedNiagaraEffect { // : UAnimNotifyState
		constexpr auto Template = 0x30; // UNiagaraSystem*
		constexpr auto SocketName = 0x38; // FName
		constexpr auto LocationOffset = 0x40; // FVector
		constexpr auto RotationOffset = 0x4c; // FRotator
		constexpr auto bDestroyAtEnd = 0x58; // bool
	}

	namespace n_UWidgetAnimationPlayCallbackProxy { // : UObject
		constexpr auto Finished = 0x28; // FMulticastInlineDelegate
	}

	namespace n_AMOCharacterAIGeneratedVendor { // : AMOCharacterAIGenerated
		constexpr auto pOpenVendorMale = 0xf98; // USoundCue*
		constexpr auto pCloseVendorMale = 0xfa0; // USoundCue*
		constexpr auto pRefuseVendorMale = 0xfa8; // USoundCue*
		constexpr auto pAcceptVendorMale = 0xfb0; // USoundCue*
		constexpr auto pOpenVendorFemale = 0xfb8; // USoundCue*
		constexpr auto pCloseVendorFemale = 0xfc0; // USoundCue*
		constexpr auto pRefuseVendorFemale = 0xfc8; // USoundCue*
		constexpr auto pAcceptVendorFemale = 0xfd0; // USoundCue*
		constexpr auto pShoutOutVendorMale = 0xfd8; // USoundCue*
		constexpr auto pShoutOutVendorFemale = 0xfe0; // USoundCue*
	}

	namespace n_UMOUserWidgetOptionsGameplay { // : UMOUserWidgetOptionsPanel
		constexpr auto vCheckBoxEntries = 0x2d0; // TArray<UMOCheckBoxEntry*>
		constexpr auto pMOCheckBox_InvertCameraXAxis = 0x2e0; // UMOCheckBoxEntry*
		constexpr auto pMOCheckBox_InvertCameraYAxis = 0x2e8; // UMOCheckBoxEntry*
		constexpr auto pMOCheckBox_InvertAltAttack = 0x2f0; // UMOCheckBoxEntry*
		constexpr auto pMOCheckBox_AimWithArrowTip = 0x2f8; // UMOCheckBoxEntry*
		constexpr auto pMOCheckBox_InvertAttackDirectionHorizontal = 0x300; // UMOCheckBoxEntry*
		constexpr auto pMOCheckBox_InvertAttackDirectionVertical = 0x308; // UMOCheckBoxEntry*
		constexpr auto pMOCheckBox_AttackModifierOverride = 0x310; // UMOCheckBoxEntry*
		constexpr auto pMOCheckBox_CanBecomeCriminal = 0x318; // UMOCheckBoxEntry*
		constexpr auto vComboBoxEntries = 0x320; // TArray<UMOComboBoxStringEntry*>
		constexpr auto pMOComboBox_AttackStyle = 0x330; // UMOComboBoxStringEntry*
		constexpr auto pMOComboBox_BlockStyle = 0x338; // UMOComboBoxStringEntry*
		constexpr auto vSliderEntries = 0x340; // TArray<UMOOptionSliderWidget*>
		constexpr auto pOptionsSlider_MouseSensitivity = 0x350; // UMOOptionSliderWidget*
		constexpr auto pOptionsSlider_ClickDragSensitivity = 0x358; // UMOOptionSliderWidget*
		constexpr auto pOptionsSlider_DragClickSensitivity = 0x360; // UMOOptionSliderWidget*
	}

	namespace n_UMaterialExpressionCeil { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_USkeletalMeshSimplificationSettings { // : UDeveloperSettings
		constexpr auto SkeletalMeshReductionModuleName = 0x38; // FName
	}

	namespace n_UGameplayTask_WaitDelay { // : UGameplayTask
		constexpr auto OnFinish = 0x68; // FMulticastInlineDelegate
	}

	namespace n_USoundNodeRandom { // : USoundNode
		constexpr auto Weights = 0x48; // TArray<float>
		constexpr auto HasBeenUsed = 0x58; // TArray<bool>
		constexpr auto NumRandomUsed = 0x68; // int32_t
		constexpr auto PreselectAtLevelLoad = 0x6c; // int32_t
		constexpr auto bShouldExcludeFromBranchCulling = 0x70; // char : 1
		constexpr auto bSoundCueExcludedFromBranchCulling = 0x70; // char : 1
		constexpr auto bRandomizeWithoutReplacement = 0x70; // char : 1
	}

	namespace n_UParticleModuleParameterDynamic { // : UParticleModuleParameterBase
		constexpr auto DynamicParams = 0x30; // TArray<FEmitterDynamicParameter>
		constexpr auto UpdateFlags = 0x40; // int32_t
		constexpr auto bUsesVelocity = 0x44; // char : 1
	}

	namespace n_UMovieSceneLevelVisibilityTrack { // : UMovieSceneNameableTrack
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_ANiagaraActor { // : AActor
		constexpr auto NiagaraComponent = 0x220; // UNiagaraComponent*
		constexpr auto bDestroyOnSystemFinish = 0x228; // char : 1
	}

	namespace n_UInterpTrackColorProp { // : UInterpTrackVectorBase
		constexpr auto PropertyName = 0x90; // FName
	}

	namespace n_UOnsetNRT { // : UAudioSynesthesiaNRT
		constexpr auto Settings = 0x78; // UOnsetNRTSettings*
	}

	namespace n_UOceanCollisionComponent { // : UPrimitiveComponent
		constexpr auto CachedBodySetup = 0x440; // UBodySetup*
	}

	namespace n_AMOActorCraftingPreview { // : AActor
		constexpr auto pEquipmentActorMelee = 0x220; // AMOEquipmentActorWeapon*
		constexpr auto pEquipmentActorShield = 0x228; // AMOEquipmentActorShield*
		constexpr auto pEquipmentActorBow = 0x230; // AMOEquipmentActorBow*
		constexpr auto pEquipmentActorArmor = 0x238; // AMOEquipmentActorArmor*
		constexpr auto pEquipmentActorPetEquipment = 0x240; // AMOEquipmentActorPetEquipment*
		constexpr auto fFOVTarget = 0x248; // float
		constexpr auto vLights = 0x250; // TArray<ASpotLight*>
		constexpr auto pSceneCaptureActor = 0x260; // AMOSceneCapture2D*
		constexpr auto pBodyComponent = 0x268; // USkeletalMeshComponent*
	}

	namespace n_UMOSkillsTreeSkillIcons { // : UMOWidgetBlueprint
		constexpr auto cSkillsIconClass = 0x260; // UMOButtonSkillWidget*
		constexpr auto pGridPanel = 0x268; // UGridPanel*
	}

	namespace n_UBTDecorator { // : UBTAuxiliaryNode
		constexpr auto bInverseCondition = 0x60; // char : 1
		constexpr auto FlowAbortMode = 0x64; // EBTFlowAbortMode
	}

	namespace n_UMOAnimationInstancePlayerHead { // : UAnimInstance
		constexpr auto CopyPoseSourceMesh = 0x2c0; // USkeletalMeshComponent*
		constexpr auto PoseAsset = 0x2c8; // UPoseAsset*
		constexpr auto ARKitPoses = 0x2d0; // UPoseAsset*
		constexpr auto CustomizationShapes = 0x2d8; // UPoseAsset*
		constexpr auto bEnableARKitFaceCapture = 0x2e0; // bool
		constexpr auto FaceCustomizationShapeSingleCurves = 0x2e8; // TMap<FName, FMOSingleCurveRange>
		constexpr auto FaceCustomizationShapeDualCurves = 0x338; // TMap<FName, FMODualCurveRange>
		constexpr auto ARKitCurves = 0x388; // TArray<FNamedCurveValue>
		constexpr auto LookAtAlpha = 0x398; // float
		constexpr auto LookAtWorldPosition = 0x39c; // FVector
		constexpr auto bEnableLookAt = 0x3a8; // bool
		constexpr auto IdleRandomSeed = 0x3ac; // int32_t
		constexpr auto bTickHighDetailAnimation = 0x3b0; // bool
		constexpr auto bTickHighDetailAnimation_BodyPhysics = 0x3b1; // bool
		constexpr auto bHideEars = 0x3b2; // bool
		constexpr auto HideEarsAlpha = 0x3b4; // float
		constexpr auto bAnyFaceCustomizationCurveChanged = 0x3b8; // bool
		constexpr auto LastFaceCustomizationDataHash = 0x3bc; // int32_t
		constexpr auto bARKitCurvesUpdated = 0x3c0; // bool
		constexpr auto LiveLinkSubjectName = 0x3c4; // FName
	}

	namespace n_UAISenseConfig_Hearing { // : UAISenseConfig
		constexpr auto Implementation = 0x48; // UAISense_Hearing*
		constexpr auto HearingRange = 0x50; // float
		constexpr auto LoSHearingRange = 0x54; // float
		constexpr auto bUseLoSHearing = 0x58; // char : 1
		constexpr auto DetectionByAffiliation = 0x5c; // FAISenseAffiliationFilter
	}

	namespace n_AWaterBodyLake { // : AWaterBody
		constexpr auto LakeGenerator = 0xdd0; // ULakeGenerator*
	}

	namespace n_UPawnAction_Repeat { // : UPawnAction
		constexpr auto ActionToRepeat = 0x98; // UPawnAction*
		constexpr auto RecentActionCopy = 0xa0; // UPawnAction*
		constexpr auto ChildFailureHandlingMode = 0xa8; // EPawnActionFailHandling
	}

	namespace n_UCustomMeshGenerator { // : UWaterBodyGenerator
		constexpr auto MeshComp = 0x28; // UStaticMeshComponent*
	}

	namespace n_UUMGSequencePlayer { // : UObject
		constexpr auto Animation = 0x410; // UWidgetAnimation*
		constexpr auto RootTemplateInstance = 0x420; // FMovieSceneRootEvaluationTemplateInstance
	}

	namespace n_UMOUserWidgetTabButton { // : UMOUserWidget
		constexpr auto pMOCheckBox = 0x2c8; // UMOCheckBox*
	}

	namespace n_UMOAnimationInstancePlayer { // : UMOAnimationInstance
		constexpr auto HeadLookatAlpha = 0x530; // float
		constexpr auto EyeLookAtAlpha = 0x534; // float
		constexpr auto bSwimForward = 0x538; // bool
		constexpr auto bSwimLeft = 0x539; // bool
		constexpr auto bSwimRight = 0x53a; // bool
		constexpr auto bSwimBackward = 0x53b; // bool
		constexpr auto ActivePlayerDefinition = 0x540; // UMODataAssetPlayerBaseDefinition*
		constexpr auto pHeadScaleByHeightCurve = 0x558; // UCurveFloat*
		constexpr auto bMale = 0x560; // bool
		constexpr auto ESpecies = 0x561; // ESpecies
		constexpr auto fDefinitionPenisScale = 0x564; // float
		constexpr auto HelmetHideEarsValue = 0x568; // float
		constexpr auto HeadScale = 0x56c; // FVector
		constexpr auto PenisScale = 0x578; // FVector
		constexpr auto BreastsSimulationAlpha = 0x584; // float
		constexpr auto BodyShape = 0x588; // FMOCharacterBodyShape
		constexpr auto FirstPersonTakeHitTweener = 0x5a0; // FMOTransformTweener
		constexpr auto vFirstPersonHandOffsetLocation = 0x608; // FVector
		constexpr auto rFirstPersonHandOffsetRotation = 0x614; // FRotator
		constexpr auto HandMovementLagMultiplier = 0x620; // float
		constexpr auto HandMovementSwayHorizontalMultiplier = 0x624; // float
		constexpr auto HandMovementSwayVerticalMultiplier = 0x628; // float
		constexpr auto HandMovementSwayRotationDegrees = 0x62c; // float
		constexpr auto HandMovementTurnSwayHorizontalMultiplier = 0x630; // float
		constexpr auto HandMovementTurnSwayVerticalMultiplier = 0x634; // float
		constexpr auto HandMovementDuringChargeMultiplier = 0x638; // float
		constexpr auto HandBreathSwayAmplitude = 0x63c; // float
		constexpr auto fMovementSyncNormalizedTime = 0x640; // float
		constexpr auto DefaultWeaponAnimationSet = 0x648; // UMODataAssetWeaponAnimations*
		constexpr auto ActiveWeaponAnimationSet = 0x650; // UMODataAssetWeaponAnimations*
		constexpr auto CombatAnimSequence_WalkBaseSpeed = 0x658; // float
		constexpr auto CombatAnimSequence_RunBaseSpeed = 0x65c; // float
		constexpr auto CombatAnimSequence_SprintBaseSpeed = 0x660; // float
		constexpr auto Mounted_BalanceAdjustment_Rotator = 0x664; // FRotator
		constexpr auto fAnimCurveLocksPositionFactor = 0x670; // float
		constexpr auto fAnimCurveLocksRotationFactor = 0x674; // float
		constexpr auto SwingYawOffset = 0x678; // float
		constexpr auto bUseStrongAimOffset = 0x67c; // bool
		constexpr auto bUseExactSwingAimOffset = 0x67d; // bool
		constexpr auto bUseCombatAimOffset = 0x67e; // bool
		constexpr auto bUseEmoteStrongAimOffset = 0x67f; // bool
		constexpr auto bUseExactAimDuringCharge = 0x680; // bool
		constexpr auto bUseCombatLocomotionSequences = 0x681; // bool
		constexpr auto CameraStabilization = 0x684; // float
		constexpr auto bPlayerInputAnyMove = 0x688; // bool
		constexpr auto bPlayerInputWalk = 0x689; // bool
		constexpr auto bPlayerInputRun = 0x68a; // bool
		constexpr auto bPlayerInputSprint = 0x68b; // bool
		constexpr auto bBlendUpperBody = 0x68c; // bool
		constexpr auto bUseLocomotionOnUpperBody = 0x68d; // bool
	}

	namespace n_UParticleModuleVectorFieldRotation { // : UParticleModuleVectorFieldBase
		constexpr auto MinInitialRotation = 0x30; // FVector
		constexpr auto MaxInitialRotation = 0x3c; // FVector
	}

	namespace n_ANavLinkProxy { // : AActor
		constexpr auto PointLinks = 0x230; // TArray<FNavigationLink>
		constexpr auto SegmentLinks = 0x240; // TArray<FNavigationSegmentLink>
		constexpr auto SmartLinkComp = 0x250; // UNavLinkCustomComponent*
		constexpr auto bSmartLinkIsRelevant = 0x258; // bool
		constexpr auto OnSmartLinkReached = 0x260; // FMulticastInlineDelegate
	}

	namespace n_UMODataAssetSkillAnimationDefinitions { // : UPrimaryDataAsset
		constexpr auto pSharedSkillAnimations = 0x30; // TMap<SkillAnimation, UMODataAssetSkillAnimationBaseDefinition*>
		constexpr auto pSharedSkillAnimationsHuman = 0x80; // TMap<SkillAnimation, UMODataAssetSkillAnimationBaseDefinition*>
		constexpr auto pSharedSkillAnimationsAlvarin = 0xd0; // TMap<SkillAnimation, UMODataAssetSkillAnimationBaseDefinition*>
		constexpr auto pSharedSkillAnimationsOghmir = 0x120; // TMap<SkillAnimation, UMODataAssetSkillAnimationBaseDefinition*>
		constexpr auto pSharedSkillAnimationsThursar = 0x170; // TMap<SkillAnimation, UMODataAssetSkillAnimationBaseDefinition*>
	}

	namespace n_UAnimationSharingManager { // : UObject
		constexpr auto Skeletons = 0x28; // TArray<USkeleton*>
		constexpr auto PerSkeletonData = 0x38; // TArray<UAnimSharingInstance*>
	}

	namespace n_UBreakpoint { // : UObject
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto Node = 0x30; // UEdGraphNode*
		constexpr auto bStepOnce = 0x38; // char : 1
		constexpr auto bStepOnce_WasPreviouslyDisabled = 0x38; // char : 1
		constexpr auto bStepOnce_RemoveAfterHit = 0x38; // char : 1
	}

	namespace n_UMaterialExpressionPerInstanceCustomData { // : UMaterialExpression
		constexpr auto DefaultValue = 0x40; // FExpressionInput
		constexpr auto ConstDefaultValue = 0x54; // float
		constexpr auto DataIndex = 0x58; // uint32_t
	}

	namespace n_UButton { // : UContentWidget
		constexpr auto Style = 0x120; // USlateWidgetStyleAsset*
		constexpr auto WidgetStyle = 0x128; // FButtonStyle
		constexpr auto ColorAndOpacity = 0x3a0; // FLinearColor
		constexpr auto BackgroundColor = 0x3b0; // FLinearColor
		constexpr auto ClickMethod = 0x3c0; // EButtonClickMethod
		constexpr auto TouchMethod = 0x3c1; // EButtonTouchMethod
		constexpr auto PressMethod = 0x3c2; // EButtonPressMethod
		constexpr auto IsFocusable = 0x3c3; // bool
		constexpr auto OnClicked = 0x3c8; // FMulticastInlineDelegate
		constexpr auto OnPressed = 0x3d8; // FMulticastInlineDelegate
		constexpr auto OnReleased = 0x3e8; // FMulticastInlineDelegate
		constexpr auto OnHovered = 0x3f8; // FMulticastInlineDelegate
		constexpr auto OnUnhovered = 0x408; // FMulticastInlineDelegate
	}

	namespace n_UParticleModuleRotation { // : UParticleModuleRotationBase
		constexpr auto StartRotation = 0x30; // FRawDistributionFloat
	}

	namespace n_UTileView { // : UListView
		constexpr auto EntryHeight = 0x368; // float
		constexpr auto EntryWidth = 0x36c; // float
		constexpr auto TileAlignment = 0x370; // EListItemAlignment
		constexpr auto bWrapHorizontalNavigation = 0x371; // bool
	}

	namespace n_UPlatformEventsComponent { // : UActorComponent
		constexpr auto PlatformChangedToLaptopModeDelegate = 0xb0; // FMulticastInlineDelegate
		constexpr auto PlatformChangedToTabletModeDelegate = 0xc0; // FMulticastInlineDelegate
	}

	namespace n_UMOJournalGroupEntry { // : UMOUserWidget
		constexpr auto pVerticalBox = 0x2c8; // UVerticalBox*
		constexpr auto pTitleText = 0x2d0; // UTextBlock*
		constexpr auto pTotalEntriesText = 0x2d8; // UTextBlock*
		constexpr auto pMOButton = 0x2e0; // UMOButton*
		constexpr auto pHorizontalBoxParent = 0x2e8; // UHorizontalBox*
		constexpr auto iTotalEntries = 0x2f0; // int32_t
	}

	namespace n_UTextureRenderTargetCube { // : UTextureRenderTarget
		constexpr auto SizeX = 0xe0; // int32_t
		constexpr auto ClearColor = 0xe4; // FLinearColor
		constexpr auto OverrideFormat = 0xf4; // EPixelFormat
		constexpr auto bHDR = 0xf5; // char : 1
		constexpr auto bForceLinearGamma = 0xf5; // char : 1
	}

	namespace n_UAnimCurveCompressionSettings { // : UObject
		constexpr auto Codec = 0x28; // UAnimCurveCompressionCodec*
	}

	namespace n_UBTService_DefaultFocus { // : UBTService_BlackboardBase
		constexpr auto FocusPriority = 0x98; // char
	}

	namespace n_UInterpCurveEdSetup { // : UObject
		constexpr auto Tabs = 0x28; // TArray<FCurveEdTab>
		constexpr auto ActiveTab = 0x38; // int32_t
	}

	namespace n_ULightMapVirtualTexture2D { // : UTexture2D
		constexpr auto TypeToLayer = 0x100; // TArray<int8_t>
	}

	namespace n_USCS_Node { // : UObject
		constexpr auto ComponentClass = 0x28; // UObject*
		constexpr auto ComponentTemplate = 0x30; // UActorComponent*
		constexpr auto CookedComponentInstancingData = 0x38; // FBlueprintCookedComponentInstancingData
		constexpr auto AttachToName = 0x80; // FName
		constexpr auto ParentComponentOrVariableName = 0x88; // FName
		constexpr auto ParentComponentOwnerClassName = 0x90; // FName
		constexpr auto bIsParentComponentNative = 0x98; // bool
		constexpr auto ChildNodes = 0xa0; // TArray<USCS_Node*>
		constexpr auto MetaDataArray = 0xb0; // TArray<FBPVariableMetaDataEntry>
		constexpr auto VariableGuid = 0xc0; // FGuid
		constexpr auto InternalVariableName = 0xd0; // FName
	}

	namespace n_UMOPaperdollTitles { // : UMOWidgetBlueprint
		constexpr auto pMOScrollBoxTitlesToEarn = 0x260; // UMOScrollBox*
		constexpr auto pMOScrollBoxTitlesEarned = 0x268; // UMOScrollBox*
		constexpr auto pMOScrollBoxTitlesHidden = 0x270; // UMOScrollBox*
		constexpr auto cCharacterTitleEntryClass = 0x278; // UMOCharacterTitleListEntry*
		constexpr auto pLastTitleSelected = 0x280; // UMOCharacterTitleListEntry*
	}

	namespace n_UGameplayTask { // : UObject
		constexpr auto InstanceName = 0x30; // FName
		constexpr auto ResourceOverlapPolicy = 0x3a; // ETaskResourceOverlapPolicy
		constexpr auto ChildTask = 0x60; // UGameplayTask*
	}

	namespace n_UMOButtonPetSkillWidget { // : UMOUserWidget
		constexpr auto pButton = 0x2c8; // UMOButtonPetSkill*
	}

	namespace n_AMOGameMode { // : AGameModeBase
		constexpr auto pSoundCue_AmbientSound = 0x2e8; // TSoftObjectPtr<USoundCue>
		constexpr auto pSoundMix_Ether = 0x310; // TSoftObjectPtr<USoundMix>
		constexpr auto pParticleSystem_EtherBodyClient = 0x338; // TSoftObjectPtr<UNiagaraSystem>
		constexpr auto pParticleSystem_Ambient = 0x360; // TSoftObjectPtr<UNiagaraSystem>
		constexpr auto pEtherworldLUT = 0x388; // TSoftObjectPtr<UTexture>
		constexpr auto cNavigationBeamPriestClass = 0x3b0; // TSoftClassPtr<UObject>
		constexpr auto GlobalSublevels = 0x3d8; // TArray<TSoftObjectPtr<UWorld>>
		constexpr auto pGlobalActorManager = 0x3e8; // UMOGlobalActorManager*
		constexpr auto pChatManager = 0x3f0; // UMOChatManager*
		constexpr auto pWeatherManager = 0x3f8; // UMOWeatherManager*
		constexpr auto pSocialManager = 0x400; // UMOSocialManager*
		constexpr auto pPetManager = 0x408; // UMOPetManager*
		constexpr auto pPassiveStatIncreaseManager = 0x410; // UMOPassiveStatIncreaseManager*
		constexpr auto vNationNames = 0x418; // TArray<FText>
	}

	namespace n_UMaterialExpressionSine { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Period = 0x54; // float
	}

	namespace n_UProceduralFoliageComponent { // : UActorComponent
		constexpr auto FoliageSpawner = 0xb0; // UProceduralFoliageSpawner*
		constexpr auto TileOverlap = 0xb8; // float
		constexpr auto SpawningVolume = 0xc0; // AVolume*
		constexpr auto ProceduralGuid = 0xc8; // FGuid
	}

	namespace n_UPaperTileSet { // : UObject
		constexpr auto TileSize = 0x28; // FIntPoint
		constexpr auto TileSheet = 0x30; // UTexture2D*
		constexpr auto AdditionalSourceTextures = 0x38; // TArray<UTexture*>
		constexpr auto BorderMargin = 0x48; // FIntMargin
		constexpr auto PerTileSpacing = 0x58; // FIntPoint
		constexpr auto DrawingOffset = 0x60; // FIntPoint
		constexpr auto WidthInTiles = 0x68; // int32_t
		constexpr auto HeightInTiles = 0x6c; // int32_t
		constexpr auto AllocatedWidth = 0x70; // int32_t
		constexpr auto AllocatedHeight = 0x74; // int32_t
		constexpr auto PerTileData = 0x78; // TArray<FPaperTileMetadata>
		constexpr auto Terrains = 0x88; // TArray<FPaperTileSetTerrain>
		constexpr auto TileWidth = 0x98; // int32_t
		constexpr auto TileHeight = 0x9c; // int32_t
		constexpr auto Margin = 0xa0; // int32_t
		constexpr auto Spacing = 0xa4; // int32_t
	}

	namespace n_UMovieSceneByteSection { // : UMovieSceneSection
		constexpr auto ByteCurve = 0xe8; // FMovieSceneByteChannel
	}

	namespace n_UMaterialFunctionInterface { // : UObject
		constexpr auto StateId = 0x28; // FGuid
		constexpr auto MaterialFunctionUsage = 0x38; // EMaterialFunctionUsage
	}

	namespace n_ULiveLinkVirtualSubject { // : UObject
		constexpr auto Role = 0x30; // ULiveLinkRole*
		constexpr auto Subjects = 0x38; // TArray<FLiveLinkSubjectName>
		constexpr auto FrameTranslators = 0x48; // TArray<ULiveLinkFrameTranslator*>
	}

	namespace n_UMovieSceneSequence { // : UMovieSceneSignedObject
		constexpr auto CompiledData = 0x50; // UMovieSceneCompiledData*
		constexpr auto DefaultCompletionMode = 0x58; // EMovieSceneCompletionMode
		constexpr auto bParentContextsAreSignificant = 0x59; // bool
		constexpr auto bPlayableDirectly = 0x5a; // bool
		constexpr auto SequenceFlags = 0x5b; // EMovieSceneSequenceFlags
	}

	namespace n_UDatasmithCineCameraActorTemplate { // : UDatasmithObjectTemplate
		constexpr auto LookatTrackingSettings = 0x30; // FDatasmithCameraLookatTrackingSettingsTemplate
	}

	namespace n_ULevelVariantSets { // : UObject
		constexpr auto DirectorClass = 0x28; // UObject*
		constexpr auto VariantSets = 0x30; // TArray<UVariantSet*>
	}

	namespace n_AActor { // : UObject
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto bNetTemporary = 0x58; // char : 1
		constexpr auto bNetStartup = 0x58; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x58; // char : 1
		constexpr auto bAlwaysRelevant = 0x58; // char : 1
		constexpr auto bReplicateMovement = 0x58; // char : 1
		constexpr auto bHidden = 0x58; // char : 1
		constexpr auto bTearOff = 0x58; // char : 1
		constexpr auto bExchangedRoles = 0x58; // char : 1
		constexpr auto bNetLoadOnClient = 0x59; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x59; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x59; // char : 1
		constexpr auto bRelevantForLevelBounds = 0x59; // char : 1
		constexpr auto bReplayRewindable = 0x59; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x59; // char : 1
		constexpr auto bAutoDestroyWhenFinished = 0x59; // char : 1
		constexpr auto bCanBeDamaged = 0x59; // char : 1
		constexpr auto bBlockInput = 0x5a; // char : 1
		constexpr auto bCollideWhenPlacing = 0x5a; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x5a; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x5a; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x5a; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x5a; // char : 1
		constexpr auto bIsEditorOnlyActor = 0x5a; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x5a; // char : 1
		constexpr auto bReplicates = 0x5b; // char : 1
		constexpr auto bCanBeInCluster = 0x5b; // char : 1
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x5b; // char : 1
		constexpr auto bActorEnableCollision = 0x5c; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x5c; // char : 1
		constexpr auto UpdateOverlapsMethodDuringLevelStreaming = 0x5d; // EActorUpdateOverlapsMethod
		constexpr auto DefaultUpdateOverlapsMethodDuringLevelStreaming = 0x5e; // EActorUpdateOverlapsMethod
		constexpr auto RemoteRole = 0x5f; // ENetRole
		constexpr auto ReplicatedMovement = 0x60; // FRepMovement
		constexpr auto InitialLifeSpan = 0x94; // float
		constexpr auto CustomTimeDilation = 0x98; // float
		constexpr auto AttachmentReplication = 0xa0; // FRepAttachment
		constexpr auto Owner = 0xe0; // AActor*
		constexpr auto NetDriverName = 0xe8; // FName
		constexpr auto Role = 0xf0; // ENetRole
		constexpr auto NetDormancy = 0xf1; // ENetDormancy
		constexpr auto SpawnCollisionHandlingMethod = 0xf2; // ESpawnActorCollisionHandlingMethod
		constexpr auto AutoReceiveInput = 0xf3; // EAutoReceiveInput
		constexpr auto InputPriority = 0xf4; // int32_t
		constexpr auto InputComponent = 0xf8; // UInputComponent*
		constexpr auto NetCullDistanceSquared = 0x100; // float
		constexpr auto NetTag = 0x104; // int32_t
		constexpr auto NetUpdateFrequency = 0x108; // float
		constexpr auto MinNetUpdateFrequency = 0x10c; // float
		constexpr auto NetPriority = 0x110; // float
		constexpr auto Instigator = 0x118; // APawn*
		constexpr auto Children = 0x120; // TArray<AActor*>
		constexpr auto RootComponent = 0x130; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x138; // TArray<AMatineeActor*>
		constexpr auto Layers = 0x150; // TArray<FName>
		constexpr auto ParentComponent = 0x160; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto Tags = 0x170; // TArray<FName>
		constexpr auto OnTakeAnyDamage = 0x180; // FMulticastSparseDelegate
		constexpr auto OnTakePointDamage = 0x181; // FMulticastSparseDelegate
		constexpr auto OnTakeRadialDamage = 0x182; // FMulticastSparseDelegate
		constexpr auto OnActorBeginOverlap = 0x183; // FMulticastSparseDelegate
		constexpr auto OnActorEndOverlap = 0x184; // FMulticastSparseDelegate
		constexpr auto OnBeginCursorOver = 0x185; // FMulticastSparseDelegate
		constexpr auto OnEndCursorOver = 0x186; // FMulticastSparseDelegate
		constexpr auto OnClicked = 0x187; // FMulticastSparseDelegate
		constexpr auto OnReleased = 0x188; // FMulticastSparseDelegate
		constexpr auto OnInputTouchBegin = 0x189; // FMulticastSparseDelegate
		constexpr auto OnInputTouchEnd = 0x18a; // FMulticastSparseDelegate
		constexpr auto OnInputTouchEnter = 0x18b; // FMulticastSparseDelegate
		constexpr auto OnInputTouchLeave = 0x18c; // FMulticastSparseDelegate
		constexpr auto OnActorHit = 0x18d; // FMulticastSparseDelegate
		constexpr auto OnDestroyed = 0x18e; // FMulticastSparseDelegate
		constexpr auto OnEndPlay = 0x18f; // FMulticastSparseDelegate
		constexpr auto InstanceComponents = 0x1f0; // TArray<UActorComponent*>
		constexpr auto BlueprintCreatedComponents = 0x200; // TArray<UActorComponent*>
	}

	namespace n_AMOEquipmentActorWeapon { // : AMOEquipmentActorTwoPart
		constexpr auto WeaponData = 0x2c0; // FMOEquipmentActorWeaponData
		constexpr auto SwingTrailComponent = 0x308; // UParticleSystemComponent*
		constexpr auto BloodTrailComponent = 0x310; // UParticleSystemComponent*
	}

	namespace n_ALightmassPortal { // : AActor
		constexpr auto PortalComponent = 0x220; // ULightmassPortalComponent*
	}

	namespace n_URadialVector { // : UFieldNodeVector
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto Position = 0xb4; // FVector
	}

	namespace n_AServerStatReplicator { // : AInfo
		constexpr auto bUpdateStatNet = 0x220; // bool
		constexpr auto bOverwriteClientStats = 0x221; // bool
		constexpr auto Channels = 0x224; // uint32_t
		constexpr auto InRate = 0x228; // uint32_t
		constexpr auto OutRate = 0x22c; // uint32_t
		constexpr auto MaxPacketOverhead = 0x234; // uint32_t
		constexpr auto InRateClientMax = 0x238; // uint32_t
		constexpr auto InRateClientMin = 0x23c; // uint32_t
		constexpr auto InRateClientAvg = 0x240; // uint32_t
		constexpr auto InPacketsClientMax = 0x244; // uint32_t
		constexpr auto InPacketsClientMin = 0x248; // uint32_t
		constexpr auto InPacketsClientAvg = 0x24c; // uint32_t
		constexpr auto OutRateClientMax = 0x250; // uint32_t
		constexpr auto OutRateClientMin = 0x254; // uint32_t
		constexpr auto OutRateClientAvg = 0x258; // uint32_t
		constexpr auto OutPacketsClientMax = 0x25c; // uint32_t
		constexpr auto OutPacketsClientMin = 0x260; // uint32_t
		constexpr auto OutPacketsClientAvg = 0x264; // uint32_t
		constexpr auto NetNumClients = 0x268; // uint32_t
		constexpr auto InPackets = 0x26c; // uint32_t
		constexpr auto OutPackets = 0x270; // uint32_t
		constexpr auto InBunches = 0x274; // uint32_t
		constexpr auto OutBunches = 0x278; // uint32_t
		constexpr auto OutLoss = 0x27c; // uint32_t
		constexpr auto InLoss = 0x280; // uint32_t
		constexpr auto VoiceBytesSent = 0x284; // uint32_t
		constexpr auto VoiceBytesRecv = 0x288; // uint32_t
		constexpr auto VoicePacketsSent = 0x28c; // uint32_t
		constexpr auto VoicePacketsRecv = 0x290; // uint32_t
		constexpr auto PercentInVoice = 0x294; // uint32_t
		constexpr auto PercentOutVoice = 0x298; // uint32_t
		constexpr auto NumActorChannels = 0x29c; // uint32_t
		constexpr auto NumConsideredActors = 0x2a0; // uint32_t
		constexpr auto PrioritizedActors = 0x2a4; // uint32_t
		constexpr auto NumRelevantActors = 0x2a8; // uint32_t
		constexpr auto NumRelevantDeletedActors = 0x2ac; // uint32_t
		constexpr auto NumReplicatedActorAttempts = 0x2b0; // uint32_t
		constexpr auto NumReplicatedActors = 0x2b4; // uint32_t
		constexpr auto NumActors = 0x2b8; // uint32_t
		constexpr auto NumNetActors = 0x2bc; // uint32_t
		constexpr auto NumDormantActors = 0x2c0; // uint32_t
		constexpr auto NumInitiallyDormantActors = 0x2c4; // uint32_t
		constexpr auto NumNetGUIDsAckd = 0x2c8; // uint32_t
		constexpr auto NumNetGUIDsPending = 0x2cc; // uint32_t
		constexpr auto NumNetGUIDsUnAckd = 0x2d0; // uint32_t
		constexpr auto ObjPathBytes = 0x2d4; // uint32_t
		constexpr auto NetGUIDOutRate = 0x2d8; // uint32_t
		constexpr auto NetGUIDInRate = 0x2dc; // uint32_t
		constexpr auto NetSaturated = 0x2e0; // uint32_t
	}

	namespace n_AOnlineBeaconHostObject { // : AActor
		constexpr auto BeaconTypeName = 0x220; // FString
		constexpr auto ClientBeaconActorClass = 0x230; // AOnlineBeaconClient*
		constexpr auto ClientActors = 0x238; // TArray<AOnlineBeaconClient*>
	}

	namespace n_UCullingField { // : UFieldNodeBase
		constexpr auto Culling = 0xb0; // UFieldNodeBase*
		constexpr auto Field = 0xb8; // UFieldNodeBase*
		constexpr auto Operation = 0xc0; // EFieldCullingOperationType
	}

	namespace n_UGizmoConstantFrameAxisSource { // : UObject
		constexpr auto Origin = 0x30; // FVector
		constexpr auto Direction = 0x3c; // FVector
		constexpr auto TangentX = 0x48; // FVector
		constexpr auto TangentY = 0x54; // FVector
	}

	namespace n_UMOActionBar { // : UMOUserWidget
		constexpr auto vActionBarSlots = 0x2c8; // TArray<UMOItemSlotActionbar*>
		constexpr auto pBorder = 0x2d8; // UMOBorder*
		constexpr auto pSlotsPanel = 0x2e0; // UUniformGridPanel*
		constexpr auto iActionBarID = 0x2e8; // int32_t
		constexpr auto bHoveringIcon = 0x2ec; // bool
		constexpr auto pFadeOutAnimation = 0x2f0; // UWidgetAnimation*
	}

	namespace n_UParticleModuleLocationPrimitiveCylinder { // : UParticleModuleLocationPrimitiveBase
		constexpr auto RadialVelocity = 0xb0; // char : 1
		constexpr auto StartRadius = 0xb8; // FRawDistributionFloat
		constexpr auto StartHeight = 0xe8; // FRawDistributionFloat
		constexpr auto HeightAxis = 0x118; // CylinderHeightAxis
	}

	namespace n_UMODamageDirectionIndcator { // : UMOUserWidget
		constexpr auto pImageIndicator = 0x2c8; // UImage*
		constexpr auto pDamageDealer = 0x2d0; // AActor*
	}

	namespace n_UMOAnimNotifyEquipWeapon { // : UMOAnimNotifyState
		constexpr auto bEquip = 0x30; // bool
		constexpr auto eEquipHand = 0x31; // EHandSlot
	}

	namespace n_UOculusHandComponent { // : UPoseableMeshComponent
		constexpr auto SkeletonType = 0x7e8; // EOculusHandType
		constexpr auto MeshType = 0x7e9; // EOculusHandType
		constexpr auto ConfidenceBehavior = 0x7ea; // EConfidenceBehavior
		constexpr auto SystemGestureBehavior = 0x7eb; // ESystemGestureBehavior
		constexpr auto SystemGestureMaterial = 0x7f0; // UMaterialInterface*
		constexpr auto bInitializePhysics = 0x7f8; // bool
		constexpr auto bUpdateHandScale = 0x7f9; // bool
		constexpr auto MaterialOverride = 0x800; // UMaterialInterface*
		constexpr auto BoneNameMappings = 0x808; // TMap<EBone, FName>
		constexpr auto CollisionCapsules = 0x858; // TArray<FOculusCapsuleCollider>
		constexpr auto bSkeletalMeshInitialized = 0x868; // bool
	}

	namespace n_AOculusMR_CastingCameraActor { // : ASceneCapture2D
		constexpr auto VRNotificationComponent = 0x238; // UVRNotificationsComponent*
		constexpr auto CameraColorTexture = 0x240; // UTexture2D*
		constexpr auto CameraDepthTexture = 0x248; // UTexture2D*
		constexpr auto PlaneMeshComponent = 0x250; // UOculusMR_PlaneMeshComponent*
		constexpr auto ChromaKeyMaterial = 0x258; // UMaterial*
		constexpr auto OpaqueColoredMaterial = 0x260; // UMaterial*
		constexpr auto ChromaKeyMaterialInstance = 0x268; // UMaterialInstanceDynamic*
		constexpr auto CameraFrameMaterialInstance = 0x270; // UMaterialInstanceDynamic*
		constexpr auto BackdropMaterialInstance = 0x278; // UMaterialInstanceDynamic*
		constexpr auto DefaultTexture_White = 0x280; // UTexture2D*
		constexpr auto BackgroundRenderTargets = 0x2d8; // TArray<UTextureRenderTarget2D*>
		constexpr auto ForegroundCaptureActor = 0x2e8; // ASceneCapture2D*
		constexpr auto ForegroundRenderTargets = 0x2f0; // TArray<UTextureRenderTarget2D*>
		constexpr auto PoseTimes = 0x300; // TArray<double>
		constexpr auto MRSettings = 0x310; // UOculusMR_Settings*
		constexpr auto MRState = 0x318; // UOculusMR_State*
	}

	namespace n_ULuminARLightEstimate { // : UARBasicLightEstimate
		constexpr auto AmbientIntensityNits = 0x40; // TArray<float>
	}

	namespace n_UObjectLibrary { // : UObject
		constexpr auto ObjectBaseClass = 0x28; // UObject*
		constexpr auto bHasBlueprintClasses = 0x30; // bool
		constexpr auto Objects = 0x38; // TArray<UObject*>
		constexpr auto WeakObjects = 0x48; // TArray<TWeakObjectPtr<UObject>>
		constexpr auto bUseWeakReferences = 0x58; // bool
		constexpr auto bIsFullyLoaded = 0x59; // bool
	}

	namespace n_UMovieSceneNiagaraTrack { // : UMovieSceneNameableTrack
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_UMagicLeapLightingTrackingComponent { // : UActorComponent
		constexpr auto UseGlobalAmbience = 0xb0; // bool
		constexpr auto UseColorTemp = 0xb1; // bool
	}

	namespace n_UParticleModuleRotationRateMultiplyLife { // : UParticleModuleRotationRateBase
		constexpr auto LifeMultiplier = 0x30; // FRawDistributionFloat
	}

	namespace n_UMOEditableTextBox { // : UEditableTextBox
		constexpr auto iMaxCharacters = 0xa58; // int32_t
		constexpr auto sValidChars = 0xa60; // FString
	}

	namespace n_UMOWorldMap { // : UMOUserWidget
		constexpr auto pMOButtonMedium_TurnOver = 0x2c8; // UMOButtonSmall*
	}

	namespace n_ULandscapeSplinesComponent { // : UPrimitiveComponent
		constexpr auto ControlPoints = 0x440; // TArray<ULandscapeSplineControlPoint*>
		constexpr auto Segments = 0x450; // TArray<ULandscapeSplineSegment*>
		constexpr auto CookedForeignMeshComponents = 0x460; // TArray<UMeshComponent*>
	}

	namespace n_UMOAnimNotifyStateHoldItem { // : UMOAnimNotifyState
		constexpr auto Hand = 0x30; // EHandSlot
		constexpr auto HoldState = 0x31; // EMOAnimNotifyStateHoldItemState
	}

	namespace n_UVariant { // : UObject
		constexpr auto Dependencies = 0x28; // TArray<FVariantDependency>
		constexpr auto DisplayText = 0x38; // FText
		constexpr auto ObjectBindings = 0x68; // TArray<UVariantObjectBinding*>
		constexpr auto Thumbnail = 0x78; // UTexture2D*
	}

	namespace n_UNiagaraEffectType { // : UObject
		constexpr auto UpdateFrequency = 0x28; // ENiagaraScalabilityUpdateFrequency
		constexpr auto CullReaction = 0x2c; // ENiagaraCullReaction
		constexpr auto SignificanceHandler = 0x30; // UNiagaraSignificanceHandler*
		constexpr auto DetailLevelScalabilitySettings = 0x38; // TArray<FNiagaraSystemScalabilitySettings>
		constexpr auto SystemScalabilitySettings = 0x48; // FNiagaraSystemScalabilitySettingsArray
		constexpr auto EmitterScalabilitySettings = 0x58; // FNiagaraEmitterScalabilitySettingsArray
	}

	namespace n_UMovieSceneCameraCutSection { // : UMovieSceneSection
		constexpr auto bLockPreviousCamera = 0xf0; // bool
		constexpr auto CameraGuid = 0xf4; // FGuid
		constexpr auto CameraBindingID = 0x104; // FMovieSceneObjectBindingID
		constexpr auto InitialCameraCutTransform = 0x120; // FTransform
		constexpr auto bHasInitialCameraCutTransform = 0x150; // bool
	}

	namespace n_UPrimaryAssetLabel { // : UPrimaryDataAsset
		constexpr auto Rules = 0x30; // FPrimaryAssetRules
		constexpr auto bLabelAssetsInMyDirectory = 0x3c; // char : 1
		constexpr auto bIsRuntimeLabel = 0x3c; // char : 1
		constexpr auto ExplicitAssets = 0x40; // TArray<TSoftObjectPtr<UObject>>
		constexpr auto ExplicitBlueprints = 0x50; // TArray<TSoftClassPtr<UObject>>
		constexpr auto AssetCollection = 0x60; // FCollectionReference
	}

	namespace n_UBlackboardKeyType_String { // : UBlackboardKeyType
		constexpr auto StringValue = 0x30; // FString
	}

	namespace n_UMOButtonShortcuts { // : UMOUserWidget
		constexpr auto pInventory = 0x2c8; // UMOButton*
		constexpr auto pCharacterSheet = 0x2d0; // UMOButton*
		constexpr auto pSocial = 0x2d8; // UMOButton*
		constexpr auto pSkills = 0x2e0; // UMOButton*
		constexpr auto pPets = 0x2e8; // UMOButton*
		constexpr auto pSpellBook = 0x2f0; // UMOButton*
		constexpr auto pInventoryHotkey = 0x2f8; // FString
		constexpr auto pCharacterSheetHotkey = 0x308; // FString
		constexpr auto pSocialHotkey = 0x318; // FString
		constexpr auto pSkillsHotkey = 0x328; // FString
		constexpr auto pPetsHotkey = 0x338; // FString
		constexpr auto pSpellBookHotkey = 0x348; // FString
	}

	namespace n_UMODataAssetPetEquipment { // : UMODataAssetEquipmentShared
		constexpr auto ArmorPartType = 0x308; // EPetEquipmentType
		constexpr auto pSkeletalMesh = 0x310; // TSoftObjectPtr<USkeletalMesh>
		constexpr auto pAnimInstance = 0x338; // TSoftClassPtr<UObject>
		constexpr auto iMaterialSlot = 0x360; // int32_t
		constexpr auto sDisplayName = 0x368; // FText
		constexpr auto pIcon = 0x380; // UTexture2D*
		constexpr auto pFootstepSound = 0x388; // TSoftObjectPtr<USoundCue>
		constexpr auto pJumpSound = 0x3b0; // TSoftObjectPtr<USoundCue>
		constexpr auto pLandingSound = 0x3d8; // TSoftObjectPtr<USoundCue>
		constexpr auto pEquipSound = 0x400; // TSoftObjectPtr<USoundCue>
		constexpr auto vSocketEmitterPairs = 0x428; // TArray<FSocketEmitterPair>
		constexpr auto vSocketSoundPairs = 0x438; // TArray<FSocketSoundPair>
	}

	namespace n_UInterpTrackInstProperty { // : UInterpTrackInst
		constexpr auto InterpProperty = 0x28; // TFieldPath<FProperty>
		constexpr auto PropertyOuterObjectInst = 0x48; // UObject*
	}

	namespace n_USoundNodeAttenuation { // : USoundNode
		constexpr auto AttenuationSettings = 0x48; // USoundAttenuation*
		constexpr auto AttenuationOverrides = 0x50; // FSoundAttenuationSettings
		constexpr auto bOverrideAttenuation = 0x3f0; // char : 1
	}

	namespace n_UMOEngineSubsystem { // : UEngineSubsystem
		constexpr auto bAtlasIsInitialized = 0x58; // bool
		constexpr auto bIsShuttingDown = 0x59; // bool
		constexpr auto pPIEGameMode = 0x60; // AMOGameMode*
		constexpr auto bIsPlayInEditor = 0x68; // bool
		constexpr auto bStandaloneDevAutoLogin = 0x69; // bool
		constexpr auto bPIEAutoLogin = 0x6a; // bool
		constexpr auto PIEAutoLoginUsernameId = 0x6c; // int32_t
		constexpr auto bPIEStartAtEditorCameraLocation = 0x70; // bool
		constexpr auto PIEDevEntryServer = 0x78; // FString
		constexpr auto PIEMyrlandServer = 0x88; // FString
		constexpr auto LoginServerListEntryId = 0x98; // int32_t
		constexpr auto pDataTableContentInfoStaticMeshes = 0xf0; // UDataTable*
		constexpr auto pDataTableContentInfoSkeletalMeshes = 0xf8; // UDataTable*
		constexpr auto pDataTableContentInfoIcons = 0x100; // UDataTable*
		constexpr auto pDataTableContentInfoSkills = 0x108; // UDataTable*
		constexpr auto pDataTableAIAttackDefinitions = 0x110; // UDataTable*
		constexpr auto pDataTableAIEffectDefinitions = 0x118; // UDataTable*
		constexpr auto pDataTablePlaceablePreview = 0x120; // UDataTable*
		constexpr auto pDataTableFish = 0x128; // UDataTable*
		constexpr auto pPlayerController = 0x138; // AMOPlayerController*
		constexpr auto pGameInstance = 0x140; // UMOGameInstance*
		constexpr auto vCrossNodeActors = 0x188; // TArray<AMOCrossNodeActor*>
	}

	namespace n_UWB_DragDropVisual_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto InAnim = 0x268; // UWidgetAnimation*
		constexpr auto pImage = 0x270; // UImage*
		constexpr auto pMaterialInstance = 0x278; // UMaterialInstance*
	}

	namespace n_USoundNodeSwitch { // : USoundNode
		constexpr auto IntParameterName = 0x48; // FName
	}

	namespace n_UMovieSceneEnumSection { // : UMovieSceneSection
		constexpr auto EnumCurve = 0xe8; // FMovieSceneByteChannel
	}

	namespace n_ADebugCameraController { // : APlayerController
		constexpr auto bShowSelectedInfo = 0x570; // char : 1
		constexpr auto bIsFrozenRendering = 0x570; // char : 1
		constexpr auto bIsOrbitingSelectedActor = 0x570; // char : 1
		constexpr auto bOrbitPivotUseCenter = 0x570; // char : 1
		constexpr auto bEnableBufferVisualization = 0x570; // char : 1
		constexpr auto bEnableBufferVisualizationFullMode = 0x570; // char : 1
		constexpr auto bIsBufferVisualizationInputSetup = 0x570; // char : 1
		constexpr auto bLastDisplayEnabled = 0x570; // char : 1
		constexpr auto DrawFrustum = 0x578; // UDrawFrustumComponent*
		constexpr auto SelectedActor = 0x580; // AActor*
		constexpr auto SelectedComponent = 0x588; // UPrimitiveComponent*
		constexpr auto SelectedHitPoint = 0x590; // FHitResult
		constexpr auto OriginalControllerRef = 0x620; // APlayerController*
		constexpr auto OriginalPlayer = 0x628; // UPlayer*
		constexpr auto SpeedScale = 0x630; // float
		constexpr auto InitialMaxSpeed = 0x634; // float
		constexpr auto InitialAccel = 0x638; // float
		constexpr auto InitialDecel = 0x63c; // float
	}

	namespace n_USoundWave { // : USoundBase
		constexpr auto CompressionQuality = 0x1b8; // int32_t
		constexpr auto StreamingPriority = 0x1bc; // int32_t
		constexpr auto SampleRateQuality = 0x1c0; // ESoundwaveSampleRateSettings
		constexpr auto SoundGroup = 0x1c2; // ESoundGroup
		constexpr auto bLooping = 0x1c3; // char : 1
		constexpr auto bStreaming = 0x1c3; // char : 1
		constexpr auto bSeekableStreaming = 0x1c3; // char : 1
		constexpr auto LoadingBehavior = 0x1c4; // ESoundWaveLoadingBehavior
		constexpr auto bMature = 0x1c5; // char : 1
		constexpr auto bManualWordWrap = 0x1c5; // char : 1
		constexpr auto bSingleLine = 0x1c6; // char : 1
		constexpr auto bIsAmbisonics = 0x1c6; // char : 1
		constexpr auto FrequenciesToAnalyze = 0x1c8; // TArray<float>
		constexpr auto CookedSpectralTimeData = 0x1d8; // TArray<FSoundWaveSpectralTimeData>
		constexpr auto CookedEnvelopeTimeData = 0x1e8; // TArray<FSoundWaveEnvelopeTimeData>
		constexpr auto InitialChunkSize = 0x1f8; // int32_t
		constexpr auto SpokenText = 0x240; // FString
		constexpr auto SubtitlePriority = 0x250; // float
		constexpr auto Volume = 0x254; // float
		constexpr auto Pitch = 0x258; // float
		constexpr auto NumChannels = 0x25c; // int32_t
		constexpr auto SampleRate = 0x260; // int32_t
		constexpr auto Subtitles = 0x270; // TArray<FSubtitleCue>
		constexpr auto Curves = 0x280; // UCurveTable*
		constexpr auto InternalCurves = 0x288; // UCurveTable*
	}

	namespace n_UTextPropertyTestObject { // : UObject
		constexpr auto DefaultedText = 0x28; // FText
		constexpr auto UndefaultedText = 0x40; // FText
		constexpr auto TransientText = 0x58; // FText
	}

	namespace n_UMovieSceneComponentMaterialTrack { // : UMovieSceneMaterialTrack
		constexpr auto MaterialIndex = 0x90; // int32_t
	}

	namespace n_UDrawFrustumComponent { // : UPrimitiveComponent
		constexpr auto FrustumColor = 0x440; // FColor
		constexpr auto FrustumAngle = 0x444; // float
		constexpr auto FrustumAspectRatio = 0x448; // float
		constexpr auto FrustumStartDist = 0x44c; // float
		constexpr auto FrustumEndDist = 0x450; // float
		constexpr auto Texture = 0x458; // UTexture*
	}

	namespace n_AGameModeBase { // : AInfo
		constexpr auto OptionsString = 0x220; // FString
		constexpr auto GameSessionClass = 0x230; // AGameSession*
		constexpr auto GameStateClass = 0x238; // AGameStateBase*
		constexpr auto PlayerControllerClass = 0x240; // APlayerController*
		constexpr auto PlayerStateClass = 0x248; // APlayerState*
		constexpr auto HUDClass = 0x250; // AHUD*
		constexpr auto DefaultPawnClass = 0x258; // APawn*
		constexpr auto SpectatorClass = 0x260; // ASpectatorPawn*
		constexpr auto ReplaySpectatorPlayerControllerClass = 0x268; // APlayerController*
		constexpr auto ServerStatReplicatorClass = 0x270; // AServerStatReplicator*
		constexpr auto GameSession = 0x278; // AGameSession*
		constexpr auto GameState = 0x280; // AGameStateBase*
		constexpr auto ServerStatReplicator = 0x288; // AServerStatReplicator*
		constexpr auto DefaultPlayerName = 0x290; // FText
		constexpr auto bUseSeamlessTravel = 0x2a8; // char : 1
		constexpr auto bStartPlayersAsSpectators = 0x2a8; // char : 1
		constexpr auto bPauseable = 0x2a8; // char : 1
	}

	namespace n_UGeometryCacheTrack { // : UObject
		constexpr auto Duration = 0x28; // float
	}

	namespace n_UMaterialExpressionGetMaterialAttributes { // : UMaterialExpression
		constexpr auto MaterialAttributes = 0x40; // FMaterialAttributesInput
		constexpr auto AttributeGetTypes = 0x58; // TArray<FGuid>
	}

	namespace n_UComboBoxWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto ComboBoxStyle = 0x30; // FComboBoxStyle
	}

	namespace n_UMaterialExpressionSpeedTree { // : UMaterialExpression
		constexpr auto GeometryInput = 0x40; // FExpressionInput
		constexpr auto WindInput = 0x54; // FExpressionInput
		constexpr auto LODInput = 0x68; // FExpressionInput
		constexpr auto ExtraBendWS = 0x7c; // FExpressionInput
		constexpr auto GeometryType = 0x90; // ESpeedTreeGeometryType
		constexpr auto WindType = 0x91; // ESpeedTreeWindType
		constexpr auto LODType = 0x92; // ESpeedTreeLODType
		constexpr auto BillboardThreshold = 0x94; // float
		constexpr auto bAccurateWindVelocities = 0x98; // bool
	}

	namespace n_UBoneMaskFilter { // : UObject
		constexpr auto BlendPoses = 0x28; // TArray<FInputBlendPose>
	}

	namespace n_UParticleModuleLocationEmitter { // : UParticleModuleLocationBase
		constexpr auto EmitterName = 0x30; // FName
		constexpr auto SelectionMethod = 0x38; // ELocationEmitterSelectionMethod
		constexpr auto InheritSourceVelocity = 0x3c; // char : 1
		constexpr auto InheritSourceVelocityScale = 0x40; // float
		constexpr auto bInheritSourceRotation = 0x44; // char : 1
		constexpr auto InheritSourceRotationScale = 0x48; // float
	}

	namespace n_UARTrackedQRCode { // : UARTrackedImage
		constexpr auto QRCode = 0x108; // FString
		constexpr auto Version = 0x118; // int32_t
	}

	namespace n_UGridSlot { // : UPanelSlot
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
		constexpr auto Row = 0x4c; // int32_t
		constexpr auto RowSpan = 0x50; // int32_t
		constexpr auto column = 0x54; // int32_t
		constexpr auto ColumnSpan = 0x58; // int32_t
		constexpr auto Layer = 0x5c; // int32_t
		constexpr auto Nudge = 0x60; // FVector2D
	}

	namespace n_UImgMediaSource { // : UBaseMediaSource
		constexpr auto FrameRateOverride = 0x88; // FFrameRate
		constexpr auto ProxyOverride = 0x90; // FString
		constexpr auto SequencePath = 0xa0; // FDirectoryPath
	}

	namespace n_UMOColorPicker { // : UMOUserWidget
		constexpr auto currentColor = 0x2c8; // FColor
		constexpr auto pPreviewImage = 0x2d0; // UImage*
		constexpr auto pMOSlider_Red = 0x2d8; // UMOSlider*
		constexpr auto pMOSlider_Green = 0x2e0; // UMOSlider*
		constexpr auto pMOSlider_Blue = 0x2e8; // UMOSlider*
		constexpr auto pMOButton_Accept = 0x2f0; // UMOButton*
		constexpr auto pMOButton_Cancel = 0x2f8; // UMOButton*
	}

	namespace n_ARecastNavMesh { // : ANavigationData
		constexpr auto bDrawTriangleEdges = 0x428; // char : 1
		constexpr auto bDrawPolyEdges = 0x428; // char : 1
		constexpr auto bDrawFilledPolys = 0x428; // char : 1
		constexpr auto bDrawNavMeshEdges = 0x428; // char : 1
		constexpr auto bDrawTileBounds = 0x428; // char : 1
		constexpr auto bDrawPathCollidingGeometry = 0x428; // char : 1
		constexpr auto bDrawTileLabels = 0x428; // char : 1
		constexpr auto bDrawPolygonLabels = 0x428; // char : 1
		constexpr auto bDrawDefaultPolygonCost = 0x429; // char : 1
		constexpr auto bDrawLabelsOnPathNodes = 0x429; // char : 1
		constexpr auto bDrawNavLinks = 0x429; // char : 1
		constexpr auto bDrawFailedNavLinks = 0x429; // char : 1
		constexpr auto bDrawClusters = 0x429; // char : 1
		constexpr auto bDrawOctree = 0x429; // char : 1
		constexpr auto bDrawOctreeDetails = 0x429; // char : 1
		constexpr auto bDrawMarkedForbiddenPolys = 0x429; // char : 1
		constexpr auto bDistinctlyDrawTilesBeingBuilt = 0x42a; // char : 1
		constexpr auto DrawOffset = 0x42c; // float
		constexpr auto bFixedTilePoolSize = 0x430; // char : 1
		constexpr auto TilePoolSize = 0x434; // int32_t
		constexpr auto TileSizeUU = 0x438; // float
		constexpr auto CellSize = 0x43c; // float
		constexpr auto CellHeight = 0x440; // float
		constexpr auto AgentRadius = 0x444; // float
		constexpr auto AgentHeight = 0x448; // float
		constexpr auto AgentMaxSlope = 0x44c; // float
		constexpr auto AgentMaxStepHeight = 0x450; // float
		constexpr auto MinRegionArea = 0x454; // float
		constexpr auto MergeRegionSize = 0x458; // float
		constexpr auto MaxSimplificationError = 0x45c; // float
		constexpr auto MaxSimultaneousTileGenerationJobsCount = 0x460; // int32_t
		constexpr auto TileNumberHardLimit = 0x464; // int32_t
		constexpr auto PolyRefTileBits = 0x468; // int32_t
		constexpr auto PolyRefNavPolyBits = 0x46c; // int32_t
		constexpr auto PolyRefSaltBits = 0x470; // int32_t
		constexpr auto NavMeshOriginOffset = 0x474; // FVector
		constexpr auto DefaultDrawDistance = 0x480; // float
		constexpr auto DefaultMaxSearchNodes = 0x484; // float
		constexpr auto DefaultMaxHierarchicalSearchNodes = 0x488; // float
		constexpr auto RegionPartitioning = 0x48c; // ERecastPartitioning
		constexpr auto LayerPartitioning = 0x48d; // ERecastPartitioning
		constexpr auto RegionChunkSplits = 0x490; // int32_t
		constexpr auto LayerChunkSplits = 0x494; // int32_t
		constexpr auto bSortNavigationAreasByCost = 0x498; // char : 1
		constexpr auto bPerformVoxelFiltering = 0x498; // char : 1
		constexpr auto bMarkLowHeightAreas = 0x498; // char : 1
		constexpr auto bUseExtraTopCellWhenMarkingAreas = 0x498; // char : 1
		constexpr auto bFilterLowSpanSequences = 0x498; // char : 1
		constexpr auto bFilterLowSpanFromTileCache = 0x498; // char : 1
		constexpr auto bDoFullyAsyncNavDataGathering = 0x498; // char : 1
		constexpr auto bUseBetterOffsetsFromCorners = 0x498; // char : 1
		constexpr auto bStoreEmptyTileLayers = 0x499; // char : 1
		constexpr auto bUseVirtualFilters = 0x499; // char : 1
		constexpr auto bAllowNavLinkAsPathEnd = 0x499; // char : 1
		constexpr auto bUseVoxelCache = 0x499; // char : 1
		constexpr auto TileSetUpdateInterval = 0x49c; // float
		constexpr auto HeuristicScale = 0x4a0; // float
		constexpr auto VerticalDeviationFromGroundCompensation = 0x4a4; // float
	}

	namespace n_UCrowdManager { // : UCrowdManagerBase
		constexpr auto MyNavData = 0x28; // ANavigationData*
		constexpr auto AvoidanceConfig = 0x30; // TArray<FCrowdAvoidanceConfig>
		constexpr auto SamplingPatterns = 0x40; // TArray<FCrowdAvoidanceSamplingPattern>
		constexpr auto MaxAgents = 0x50; // int32_t
		constexpr auto MaxAgentRadius = 0x54; // float
		constexpr auto MaxAvoidedAgents = 0x58; // int32_t
		constexpr auto MaxAvoidedWalls = 0x5c; // int32_t
		constexpr auto NavmeshCheckInterval = 0x60; // float
		constexpr auto PathOptimizationInterval = 0x64; // float
		constexpr auto SeparationDirClamp = 0x68; // float
		constexpr auto PathOffsetRadiusMultiplier = 0x6c; // float
		constexpr auto bResolveCollisions = 0x70; // char : 1
	}

	namespace n_UInterpGroupInst { // : UObject
		constexpr auto Group = 0x28; // UInterpGroup*
		constexpr auto GroupActor = 0x30; // AActor*
		constexpr auto TrackInst = 0x38; // TArray<UInterpTrackInst*>
	}

	namespace n_UMovieSceneNiagaraParameterTrack { // : UMovieSceneNiagaraTrack
		constexpr auto Parameter = 0x88; // FNiagaraVariable
	}

	namespace n_UMOJournalEntry { // : UMOUserWidget
		constexpr auto sJournalTableRow = 0x2d8; // FMOJournalTableRow
		constexpr auto pIcon = 0x338; // UImage*
		constexpr auto pSelectedBG = 0x340; // UImage*
		constexpr auto pTitleText = 0x348; // UTextBlock*
		constexpr auto pMOButton = 0x350; // UMOButton*
	}

	namespace n_UParticleModuleAttractorParticle { // : UParticleModuleAttractorBase
		constexpr auto EmitterName = 0x30; // FName
		constexpr auto Range = 0x38; // FRawDistributionFloat
		constexpr auto bStrengthByDistance = 0x68; // char : 1
		constexpr auto Strength = 0x70; // FRawDistributionFloat
		constexpr auto bAffectBaseVelocity = 0xa0; // char : 1
		constexpr auto SelectionMethod = 0xa4; // EAttractorParticleSelectionMethod
		constexpr auto bRenewSource = 0xa8; // char : 1
		constexpr auto bInheritSourceVel = 0xa8; // char : 1
		constexpr auto LastSelIndex = 0xac; // int32_t
	}

	namespace n_UVolumetricCloudComponent { // : USceneComponent
		constexpr auto LayerBottomAltitude = 0x1f8; // float
		constexpr auto LayerHeight = 0x1fc; // float
		constexpr auto TracingStartMaxDistance = 0x200; // float
		constexpr auto TracingMaxDistance = 0x204; // float
		constexpr auto PlanetRadius = 0x208; // float
		constexpr auto GroundAlbedo = 0x20c; // FColor
		constexpr auto Material = 0x210; // UMaterialInterface*
		constexpr auto bUsePerSampleAtmosphericLightTransmittance = 0x218; // char : 1
		constexpr auto SkyLightCloudBottomOcclusion = 0x21c; // float
		constexpr auto ViewSampleCountScale = 0x220; // float
		constexpr auto ReflectionSampleCountScale = 0x224; // float
		constexpr auto ShadowViewSampleCountScale = 0x228; // float
		constexpr auto ShadowReflectionSampleCountScale = 0x22c; // float
		constexpr auto ShadowTracingDistance = 0x230; // float
	}

	namespace n_UMOCharCreationInfoEntry { // : UMOUserWidget
		constexpr auto iEntryIndex = 0x2c8; // int32_t
		constexpr auto pDisplayText = 0x2d0; // UTextBlock*
		constexpr auto pValueText = 0x2d8; // UTextBlock*
		constexpr auto pMaxValueText = 0x2e0; // UTextBlock*
		constexpr auto InitializeDisplayText = 0x2e8; // FText
		constexpr auto InitializeToolTipText = 0x300; // FText
		constexpr auto InitDisplayTextFontSize = 0x318; // int32_t
		constexpr auto InitValueTextFontSize = 0x31c; // int32_t
		constexpr auto iValue = 0x320; // int32_t
		constexpr auto iMaxValue = 0x324; // int32_t
	}

	namespace n_UMOPreviewModePlacementUpgrade { // : UMOPreviewModePlacementHouse
		constexpr auto pUpgradeTarget = 0x150; // AMOAvatarStaticMeshBuildable*
	}

	namespace n_UInterpTrackInstMove { // : UInterpTrackInst
		constexpr auto ResetLocation = 0x28; // FVector
		constexpr auto ResetRotation = 0x34; // FRotator
	}

	namespace n_UAsyncActionChangePrimaryAssetBundles { // : UAsyncActionLoadPrimaryAssetBase
		constexpr auto Completed = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UInterpTrackAnimControl { // : UInterpTrackFloatBase
		constexpr auto SlotName = 0x90; // FName
		constexpr auto AnimSeqs = 0x98; // TArray<FAnimControlTrackKey>
		constexpr auto bSkipAnimNotifiers = 0xa8; // char : 1
	}

	namespace n_UTextureRenderTargetVolume { // : UTextureRenderTarget
		constexpr auto SizeX = 0xe0; // int32_t
		constexpr auto SizeY = 0xe4; // int32_t
		constexpr auto SizeZ = 0xe8; // int32_t
		constexpr auto ClearColor = 0xec; // FLinearColor
		constexpr auto OverrideFormat = 0xfc; // EPixelFormat
		constexpr auto bHDR = 0xfd; // char : 1
		constexpr auto bForceLinearGamma = 0xfd; // char : 1
	}

	namespace n_UMOPaperdoll { // : UMOUserWidget
		constexpr auto pInfoEntry_Str = 0x2c8; // UMOInfoEntryAttributeLock*
		constexpr auto pInfoEntry_Dex = 0x2d0; // UMOInfoEntryAttributeLock*
		constexpr auto pInfoEntry_Int = 0x2d8; // UMOInfoEntryAttributeLock*
		constexpr auto pInfoEntry_Psy = 0x2e0; // UMOInfoEntryAttributeLock*
		constexpr auto pInfoEntry_Con = 0x2e8; // UMOInfoEntryAttributeLock*
		constexpr auto pInfoEntry_Size = 0x2f0; // UMOCharCreationInfoEntry*
		constexpr auto pInfoEntry_AttributePoints = 0x2f8; // UMOCharCreationInfoEntry*
		constexpr auto pCharacterTitle = 0x300; // UTextBlock*
		constexpr auto pInfoEntry_Health = 0x308; // UMOCharCreationInfoEntry*
		constexpr auto pInfoEntry_Stamina = 0x310; // UMOCharCreationInfoEntry*
		constexpr auto pInfoEntry_Mana = 0x318; // UMOCharCreationInfoEntry*
		constexpr auto pItemSlotStatic_Book = 0x320; // UMOItemSlotStatic*
		constexpr auto pTextBlockAge = 0x328; // UTextBlock*
		constexpr auto pInfoEntry_DamageBonus = 0x330; // UMOCharCreationInfoEntry*
		constexpr auto pTextBlockWeight = 0x338; // UTextBlock*
		constexpr auto pInfoEntry_Height = 0x340; // UMOCharCreationInfoEntry*
		constexpr auto pPaperdollStatistics = 0x348; // UMOPaperdollStatistics*
		constexpr auto pPaperdollTitles = 0x350; // UMOPaperdollTitles*
		constexpr auto pPaperdollCladeGifts = 0x358; // UMOPaperdollCladeGifts*
		constexpr auto pMOButtonMedium_Home = 0x360; // UMOButtonSmall*
		constexpr auto vSlotMap = 0x368; // TMap<FString, UMOItemSlotPaperdoll*>
		constexpr auto pCaptureCamera = 0x3b8; // AMOSceneCapture2D*
	}

	namespace n_UMOAnimationInstancePostProcess { // : UAnimInstance
		constexpr auto PhysicsAlpha = 0x2b8; // float
	}

	namespace n_UGameEngine { // : UEngine
		constexpr auto MaxDeltaTime = 0xde0; // float
		constexpr auto ServerFlushLogInterval = 0xde4; // float
		constexpr auto GameInstance = 0xde8; // UGameInstance*
	}

	namespace n_UWB_MOCharCreationInfoEntryGreyValue_C { // : UMOCharCreationInfoEntry
		constexpr auto UberGraphFrame = 0x328; // FPointerToUberGraphFrame
		constexpr auto UpdateValue = 0x330; // UWidgetAnimation*
	}

	namespace n_UApplicationLifecycleComponent { // : UActorComponent
		constexpr auto ApplicationWillDeactivateDelegate = 0xb0; // FMulticastInlineDelegate
		constexpr auto ApplicationHasReactivatedDelegate = 0xc0; // FMulticastInlineDelegate
		constexpr auto ApplicationWillEnterBackgroundDelegate = 0xd0; // FMulticastInlineDelegate
		constexpr auto ApplicationHasEnteredForegroundDelegate = 0xe0; // FMulticastInlineDelegate
		constexpr auto ApplicationWillTerminateDelegate = 0xf0; // FMulticastInlineDelegate
		constexpr auto ApplicationShouldUnloadResourcesDelegate = 0x100; // FMulticastInlineDelegate
		constexpr auto ApplicationReceivedStartupArgumentsDelegate = 0x110; // FMulticastInlineDelegate
		constexpr auto OnTemperatureChangeDelegate = 0x120; // FMulticastInlineDelegate
		constexpr auto OnLowPowerModeDelegate = 0x130; // FMulticastInlineDelegate
	}

	namespace n_UIpNetDriver { // : UNetDriver
		constexpr auto LogPortUnreach = 0x748; // char : 1
		constexpr auto AllowPlayerPortUnreach = 0x748; // char : 1
		constexpr auto MaxPortCountToTry = 0x74c; // uint32_t
		constexpr auto ServerDesiredSocketReceiveBufferBytes = 0x75c; // uint32_t
		constexpr auto ServerDesiredSocketSendBufferBytes = 0x760; // uint32_t
		constexpr auto ClientDesiredSocketReceiveBufferBytes = 0x764; // uint32_t
		constexpr auto ClientDesiredSocketSendBufferBytes = 0x768; // uint32_t
		constexpr auto MaxSecondsInReceive = 0x770; // double
		constexpr auto NbPacketsBetweenReceiveTimeTest = 0x778; // int32_t
		constexpr auto ResolutionConnectionTimeout = 0x77c; // float
	}

	namespace n_UMOButtonClose { // : UMOButton
		constexpr auto CustomStyle = 0x438; // USlateWidgetStyleAsset*
	}

	namespace n_UMOCharacterCreation { // : UMOUserWidget
		constexpr auto pValidName = 0x2c8; // UTextBlock*
		constexpr auto pFirstName = 0x2d0; // UMOEditableTextBox*
		constexpr auto pLastName = 0x2d8; // UMOEditableTextBox*
		constexpr auto pCarouselSelect_Gender = 0x2e0; // UMOUserWidgetCarouselSelect*
		constexpr auto pCarouselSelect_Clade = 0x2e8; // UMOUserWidgetCarouselSelect*
		constexpr auto pCarouselSelect_Race = 0x2f0; // UMOUserWidgetCarouselSelect*
		constexpr auto pCarouselSelect_StartingLocation = 0x2f8; // UMOUserWidgetCarouselSelect*
		constexpr auto pCarouselSelect_StartingEquipment = 0x300; // UMOUserWidgetCarouselSelect*
		constexpr auto pCarouselSelect_Hair = 0x308; // UMOUserWidgetCarouselSelect*
		constexpr auto pCarouselSelect_Beard = 0x310; // UMOUserWidgetCarouselSelect*
		constexpr auto pComboBoxString_StartingPoint = 0x318; // UComboBoxString*
	}

	namespace n_UMODataAssetArmorDefinitions { // : UPrimaryDataAsset
		constexpr auto pSharedData = 0x30; // UMODataAssetEquipmentShared*
		constexpr auto pHelmetFallback = 0x38; // UMODataAssetArmor*
		constexpr auto pTorsoFallback = 0x40; // UMODataAssetArmor*
		constexpr auto pBackFallback = 0x48; // UMODataAssetArmor*
		constexpr auto pLegFallback = 0x50; // UMODataAssetArmor*
		constexpr auto pLeftArmFallback = 0x58; // UMODataAssetArmor*
		constexpr auto pRightArmFallback = 0x60; // UMODataAssetArmor*
		constexpr auto pMaleHumanHarnessTorso = 0x68; // UMODataAssetArmor*
		constexpr auto pMaleHumanHarnessLegs = 0x70; // UMODataAssetArmor*
		constexpr auto vMaleHumanHelmetParts = 0x78; // TArray<UMODataAssetArmor*>
		constexpr auto vMaleHumanTorsoParts = 0x88; // TArray<UMODataAssetArmor*>
		constexpr auto vMaleHumanBackParts = 0x98; // TArray<UMODataAssetArmor*>
		constexpr auto vMaleHumanLegParts = 0xa8; // TArray<UMODataAssetArmor*>
		constexpr auto vMaleHumanLeftArmParts = 0xb8; // TArray<UMODataAssetArmor*>
		constexpr auto vMaleHumanRightArmParts = 0xc8; // TArray<UMODataAssetArmor*>
		constexpr auto pFemaleHumanHarnessTorso = 0xd8; // UMODataAssetArmor*
		constexpr auto pFemaleHumanHarnessLegs = 0xe0; // UMODataAssetArmor*
		constexpr auto vFemaleHumanHelmetParts = 0xe8; // TArray<UMODataAssetArmor*>
		constexpr auto vFemaleHumanTorsoParts = 0xf8; // TArray<UMODataAssetArmor*>
		constexpr auto vFemaleHumanBackParts = 0x108; // TArray<UMODataAssetArmor*>
		constexpr auto vFemaleHumanLegParts = 0x118; // TArray<UMODataAssetArmor*>
		constexpr auto vFemaleHumanLeftArmParts = 0x128; // TArray<UMODataAssetArmor*>
		constexpr auto vFemaleHumanRightArmParts = 0x138; // TArray<UMODataAssetArmor*>
		constexpr auto bArmorPartsArePreloaded = 0x148; // bool
		constexpr auto pLoadedSkeletalMeshes = 0x150; // TArray<USkeletalMesh*>
		constexpr auto LoadedAnimInstances = 0x160; // TArray<UAnimInstance*>
		constexpr auto LoadedSounds = 0x170; // TArray<USoundCue*>
	}

	namespace n_UParticleModuleLocationSkelVertSurface { // : UParticleModuleLocationBase
		constexpr auto SourceType = 0x30; // ELocationSkelVertSurfaceSource
		constexpr auto UniversalOffset = 0x34; // FVector
		constexpr auto bUpdatePositionEachFrame = 0x40; // char : 1
		constexpr auto bOrientMeshEmitters = 0x40; // char : 1
		constexpr auto bInheritBoneVelocity = 0x40; // char : 1
		constexpr auto InheritVelocityScale = 0x44; // float
		constexpr auto SkelMeshActorParamName = 0x48; // FName
		constexpr auto ValidAssociatedBones = 0x50; // TArray<FName>
		constexpr auto bEnforceNormalCheck = 0x60; // char : 1
		constexpr auto NormalToCompare = 0x64; // FVector
		constexpr auto NormalCheckToleranceDegrees = 0x70; // float
		constexpr auto NormalCheckTolerance = 0x74; // float
		constexpr auto ValidMaterialIndices = 0x78; // TArray<int32_t>
		constexpr auto bInheritVertexColor = 0x88; // char : 1
		constexpr auto bInheritUV = 0x88; // char : 1
		constexpr auto InheritUVChannel = 0x8c; // uint32_t
	}

	namespace n_UMaterialExpressionSkyAtmosphereLightIlluminance { // : UMaterialExpression
		constexpr auto LightIndex = 0x40; // int32_t
		constexpr auto WorldPosition = 0x44; // FExpressionInput
	}

	namespace n_UVectorField { // : UObject
		constexpr auto Bounds = 0x28; // FBox
		constexpr auto Intensity = 0x44; // float
	}

	namespace n_UMovieSceneMaterialParameterCollectionTrack { // : UMovieSceneMaterialTrack
		constexpr auto MPC = 0x90; // UMaterialParameterCollection*
	}

	namespace n_UDatasmithDeltaGenSceneImportData { // : UDatasmithFBXSceneImportData
		constexpr auto bMergeNodes = 0x48; // bool
		constexpr auto bOptimizeDuplicatedNodes = 0x49; // bool
		constexpr auto bRemoveInvisibleNodes = 0x4a; // bool
		constexpr auto bSimplifyNodeHierarchy = 0x4b; // bool
		constexpr auto bImportVar = 0x4c; // bool
		constexpr auto VarPath = 0x50; // FString
		constexpr auto bImportPos = 0x60; // bool
		constexpr auto PosPath = 0x68; // FString
		constexpr auto bImportTml = 0x78; // bool
		constexpr auto TmlPath = 0x80; // FString
	}

	namespace n_UMovieSceneFolder { // : UObject
		constexpr auto FolderName = 0x28; // FName
		constexpr auto ChildFolders = 0x30; // TArray<UMovieSceneFolder*>
		constexpr auto ChildMasterTracks = 0x40; // TArray<UMovieSceneTrack*>
		constexpr auto ChildObjectBindingStrings = 0x50; // TArray<FString>
	}

	namespace n_ABP_AiEffectStoneThrow_C { // : AMOAiEffectActor
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
		constexpr auto vHitLocation = 0x278; // FVector
	}

	namespace n_UMOCraftingMelee { // : UMOCrafting
		constexpr auto pScrollBox_Handle = 0x310; // UMOScrollBox*
		constexpr auto pScrollBox_Head = 0x318; // UMOScrollBox*
		constexpr auto pItemSlotPlaceItem_HandleCoatingMaterial = 0x320; // UMOItemSlotPlaceItem*
		constexpr auto pItemSlotPlaceItem_HandleCoreMaterial = 0x328; // UMOItemSlotPlaceItem*
		constexpr auto pItemSlotPlaceItem_HeadMaterial = 0x330; // UMOItemSlotPlaceItem*
		constexpr auto pPreviewMaterial = 0x338; // UMaterialInstance*
		constexpr auto sHandleName = 0x340; // FString
		constexpr auto sHandleMaterialCoreName = 0x350; // FString
		constexpr auto sHandleMaterialGripName = 0x360; // FString
		constexpr auto sHeadName = 0x370; // FString
		constexpr auto sHeadMaterialName = 0x380; // FString
		constexpr auto vCraftingInfo_Head = 0x398; // TArray<FMeleeCraftingInfo_Head>
		constexpr auto vCraftingInfo_Handle = 0x3a8; // TArray<FMeleeCraftingInfo_Handle>
		constexpr auto vCraftingHandleGroups = 0x3b8; // TArray<UMOCraftingListEntry*>
	}

	namespace n_AMOEquipmentActorArrow { // : AMOEquipmentActorTwoPart
		constexpr auto arrowData = 0x2c0; // FMOEquipmentActorArrowData
		constexpr auto FlyTrailComponent = 0x2f0; // UParticleSystemComponent*
		constexpr auto MaxRangeForce = 0x2f8; // float
	}

	namespace n_UMOTextBlock { // : UTextBlock
		constexpr auto CustomStyle = 0x2a8; // USlateWidgetStyleAsset*
	}

	namespace n_UCompositionGraphCaptureProtocol { // : UMovieSceneImageCaptureProtocolBase
		constexpr auto IncludeRenderPasses = 0x58; // FCompositionGraphCapturePasses
		constexpr auto bCaptureFramesInHDR = 0x68; // bool
		constexpr auto HDRCompressionQuality = 0x6c; // int32_t
		constexpr auto CaptureGamut = 0x70; // EHDRCaptureGamut
		constexpr auto PostProcessingMaterial = 0x78; // FSoftObjectPath
		constexpr auto bDisableScreenPercentage = 0x90; // bool
		constexpr auto PostProcessingMaterialPtr = 0x98; // UMaterialInterface*
	}

	namespace n_UBTTask_RunBehaviorDynamic { // : UBTTaskNode
		constexpr auto InjectionTag = 0x70; // FGameplayTag
		constexpr auto DefaultBehaviorAsset = 0x78; // UBehaviorTree*
		constexpr auto BehaviorAsset = 0x80; // UBehaviorTree*
	}

	namespace n_USphereComponent { // : UShapeComponent
		constexpr auto SphereRadius = 0x458; // float
	}

	namespace n_UHLODProxy { // : UObject
		constexpr auto ProxyMeshes = 0x28; // TArray<FHLODProxyMesh>
		constexpr auto HLODActors = 0x38; // TMap<UHLODProxyDesc*, FHLODProxyMesh>
	}

	namespace n_UTcpMessagingSettings { // : UObject
		constexpr auto EnableTransport = 0x28; // bool
		constexpr auto ListenEndpoint = 0x30; // FString
		constexpr auto ConnectToEndpoints = 0x40; // TArray<FString>
		constexpr auto ConnectionRetryDelay = 0x50; // int32_t
		constexpr auto bStopServiceWhenAppDeactivates = 0x54; // bool
	}

	namespace n_UTextBlock { // : UTextLayoutWidget
		constexpr auto Text = 0x128; // FText
		constexpr auto TextDelegate = 0x140; // FDelegate
		constexpr auto ColorAndOpacity = 0x150; // FSlateColor
		constexpr auto ColorAndOpacityDelegate = 0x178; // FDelegate
		constexpr auto Font = 0x188; // FSlateFontInfo
		constexpr auto StrikeBrush = 0x1e0; // FSlateBrush
		constexpr auto ShadowOffset = 0x268; // FVector2D
		constexpr auto ShadowColorAndOpacity = 0x270; // FLinearColor
		constexpr auto ShadowColorAndOpacityDelegate = 0x280; // FDelegate
		constexpr auto MinDesiredWidth = 0x290; // float
		constexpr auto bWrapWithInvalidationPanel = 0x294; // bool
		constexpr auto bAutoWrapText = 0x295; // bool
		constexpr auto TextTransformPolicy = 0x296; // ETextTransformPolicy
		constexpr auto bSimpleTextMode = 0x297; // bool
	}

	namespace n_UEditableMesh { // : UObject
		constexpr auto Adapters = 0x3b8; // TArray<UEditableMeshAdapter*>
		constexpr auto TextureCoordinateCount = 0x3d0; // int32_t
		constexpr auto PendingCompactCounter = 0x51c; // int32_t
		constexpr auto SubdivisionCount = 0x520; // int32_t
	}

	namespace n_UWB_CharacterCreation_Head_3DSlider_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto BackgroundImageWidget = 0x268; // UImage*
		constexpr auto BG_Fill = 0x270; // UImage*
		constexpr auto BG_NoSlider = 0x278; // UImage*
		constexpr auto BG_Slider = 0x280; // UImage*
		constexpr auto Canvas = 0x288; // UCanvasPanel*
		constexpr auto Controller = 0x290; // UImage*
		constexpr auto ControllerArea = 0x298; // UButton*
		constexpr auto ControllerAreaCanvas = 0x2a0; // UCanvasPanel*
		constexpr auto LoopImg = 0x2a8; // UImage*
		constexpr auto ResetButton = 0x2b0; // UMOButtonSmall*
		constexpr auto Title_Textblock = 0x2b8; // UMOTextBlock_Base_Small_White_01*
		constexpr auto ZArea = 0x2c0; // UButton*
		constexpr auto ZSlider = 0x2c8; // UMOSlider*
		constexpr auto bNeedsReinit = 0x2d0; // bool
		constexpr auto bMouseDown = 0x2d1; // bool
		constexpr auto On2DValueChanged = 0x2d8; // FMulticastInlineDelegate
		constexpr auto Title = 0x2e8; // FText
		constexpr auto CurveNameX = 0x300; // FName
		constexpr auto CurveNameY = 0x308; // FName
		constexpr auto OnZValueChanged = 0x310; // FMulticastInlineDelegate
		constexpr auto CurveNameZ_Optional = 0x320; // FName
		constexpr auto bUseZSlider = 0x328; // bool
		constexpr auto bReverseX = 0x329; // bool
		constexpr auto bReverseY = 0x32a; // bool
		constexpr auto bReverseZ = 0x32b; // bool
		constexpr auto BackgroundImage = 0x330; // UTexture*
		constexpr auto BackgroundAlpha = 0x338; // float
		constexpr auto NormalizedX = 0x33c; // float
		constexpr auto NormalizedY = 0x340; // float
		constexpr auto NormalizedZ = 0x344; // float
		constexpr auto NormalizedXY = 0x348; // FVector2D
		constexpr auto OnXYValueChanged = 0x350; // FMulticastInlineDelegate
		constexpr auto OnValuesChanged = 0x360; // FMulticastInlineDelegate
	}

	namespace n_UClothingAssetCommon { // : UClothingAssetBase
		constexpr auto PhysicsAsset = 0x48; // UPhysicsAsset*
		constexpr auto ClothConfigs = 0x50; // TMap<FName, UClothConfigBase*>
		constexpr auto ClothSharedSimConfig = 0xa0; // UClothConfigBase*
		constexpr auto ClothSimConfig = 0xa8; // UClothConfigBase*
		constexpr auto ChaosClothSimConfig = 0xb0; // UClothConfigBase*
		constexpr auto ClothLODData = 0xb8; // TArray<UClothLODDataCommon_Legacy*>
		constexpr auto LODData = 0xc8; // TArray<FClothLODDataCommon>
		constexpr auto LodMap = 0xd8; // TArray<int32_t>
		constexpr auto UsedBoneNames = 0xe8; // TArray<FName>
		constexpr auto UsedBoneIndices = 0xf8; // TArray<int32_t>
		constexpr auto ReferenceBoneIndex = 0x108; // int32_t
		constexpr auto CustomData = 0x110; // UClothingAssetCustomData*
		constexpr auto ClothConfig = 0x118; // FClothConfig_Legacy
	}

	namespace n_UFontImportOptions { // : UObject
		constexpr auto Data = 0x28; // FFontImportOptionsData
	}

	namespace n_UShapeComponent { // : UPrimitiveComponent
		constexpr auto ShapeBodySetup = 0x440; // UBodySetup*
		constexpr auto AreaClass = 0x448; // UNavAreaBase*
		constexpr auto ShapeColor = 0x450; // FColor
		constexpr auto bDrawOnlyIfSelected = 0x454; // char : 1
		constexpr auto bShouldCollideWhenPlacing = 0x454; // char : 1
		constexpr auto bDynamicObstacle = 0x454; // char : 1
	}

	namespace n_ADecalActor { // : AActor
		constexpr auto Decal = 0x220; // UDecalComponent*
	}

	namespace n_UMOCharCreationBloodlinePanel { // : UMOCharCreationPanel
		constexpr auto vMOComboBoxEntries_Ancestry = 0x2e0; // TArray<UMOCharCreationComboBox*>
		constexpr auto OnBloodlineUpdatedDelegate = 0x2f0; // FMulticastInlineDelegate
		constexpr auto vPossibleBloodlines = 0x300; // TArray<FString>
		constexpr auto sDominantAncestry = 0x310; // FString
		constexpr auto sSecondaryAncestry = 0x320; // FString
		constexpr auto vAncestrySlateBrushes = 0x330; // TArray<FSlateBrush>
		constexpr auto vAncestryImages = 0x340; // TArray<UImage*>
		constexpr auto pMOComboBox_Ancestry0 = 0x350; // UMOCharCreationComboBox*
		constexpr auto pImage_Ancestry0 = 0x358; // UImage*
		constexpr auto pMOComboBox_Ancestry1 = 0x360; // UMOCharCreationComboBox*
		constexpr auto pImage_Ancestry1 = 0x368; // UImage*
		constexpr auto pMOComboBox_Ancestry2 = 0x370; // UMOCharCreationComboBox*
		constexpr auto pImage_Ancestry2 = 0x378; // UImage*
		constexpr auto pMOComboBox_Ancestry3 = 0x380; // UMOCharCreationComboBox*
		constexpr auto pImage_Ancestry3 = 0x388; // UImage*
		constexpr auto pMOComboBox_Ancestry4 = 0x390; // UMOCharCreationComboBox*
		constexpr auto pImage_Ancestry4 = 0x398; // UImage*
		constexpr auto pMOComboBox_Ancestry5 = 0x3a0; // UMOCharCreationComboBox*
		constexpr auto pImage_Ancestry5 = 0x3a8; // UImage*
		constexpr auto pMainRaceText = 0x3b0; // UMOText*
		constexpr auto pImage_MainRace = 0x3b8; // UImage*
		constexpr auto pTextBlock_Strengths = 0x3c0; // UTextBlock*
		constexpr auto pTextBlock_Summary = 0x3c8; // UTextBlock*
		constexpr auto pTextBlock_Lore = 0x3d0; // UTextBlock*
		constexpr auto vStrenghtsText = 0x3d8; // TArray<FText>
		constexpr auto vSummaryText = 0x3e8; // TArray<FText>
		constexpr auto vLoreText = 0x3f8; // TArray<FText>
	}

	namespace n_URigVM { // : UObject
		constexpr auto WorkMemoryStorage = 0x28; // FRigVMMemoryContainer
		constexpr auto LiteralMemoryStorage = 0xd0; // FRigVMMemoryContainer
		constexpr auto ByteCodeStorage = 0x178; // FRigVMByteCode
		constexpr auto Instructions = 0x1b0; // FRigVMInstructionArray
		constexpr auto Context = 0x1c0; // FRigVMExecuteContext
		constexpr auto FunctionNamesStorage = 0x218; // TArray<FName>
		constexpr auto Parameters = 0x248; // TArray<FRigVMParameter>
		constexpr auto ParametersNameMap = 0x258; // TMap<FName, int32_t>
		constexpr auto DeferredVMToCopy = 0x2f0; // URigVM*
	}

	namespace n_AMOTutorialManager { // : AActor
		constexpr auto pTutorialStartStep = 0x220; // AMOTutorialStep*
		constexpr auto pTutorialEndStep = 0x228; // AMOTutorialStep*
		constexpr auto pFirstStepCombat = 0x230; // AMOTutorialStep*
		constexpr auto pFirstStepCrafting = 0x238; // AMOTutorialStep*
		constexpr auto pCurrentOverrideSteps = 0x240; // AMOTutorialStep*
		constexpr auto pCurrentStepCombat = 0x248; // AMOTutorialStep*
		constexpr auto pCurrentStepCrafting = 0x250; // AMOTutorialStep*
		constexpr auto pOnDeathStep = 0x258; // AMOTutorialStep*
		constexpr auto pWeaponBreakStep = 0x260; // AMOTutorialStep*
		constexpr auto cQuestWidgetClass = 0x270; // UMOQuestWidget*
	}

	namespace n_UMovieScenePrimitiveMaterialSection { // : UMovieSceneSection
		constexpr auto MaterialChannel = 0xe8; // FMovieSceneObjectPathChannel
	}

	namespace n_UMaterialExpressionSceneDepthWithoutWater { // : UMaterialExpression
		constexpr auto InputMode = 0x40; // EMaterialSceneAttributeInputMode
		constexpr auto Input = 0x44; // FExpressionInput
		constexpr auto ConstInput = 0x58; // FVector2D
		constexpr auto FallbackDepth = 0x60; // float
	}

	namespace n_UNiagaraDataInterfaceArrayQuat { // : UNiagaraDataInterfaceArray
		constexpr auto QuatData = 0x50; // TArray<FQuat>
	}

	namespace n_AMOCharacterAICreature { // : AMOCharacterAI
		constexpr auto sFootBoneName_Left = 0xce4; // FName
		constexpr auto sFootBoneName_Right = 0xcec; // FName
		constexpr auto pParticleSystem_BloodSpray = 0xcf8; // UNiagaraSystem*
		constexpr auto pParticleSystem_BloodSlash = 0xd00; // UNiagaraSystem*
		constexpr auto pParticleSystem_BloodPiercing = 0xd08; // UNiagaraSystem*
		constexpr auto pParticleSystem_BloodBlunt = 0xd10; // UNiagaraSystem*
		constexpr auto pParticleSystem_Resurrect = 0xd18; // UNiagaraSystem*
		constexpr auto pParticleSystem_BloodLimbRemoved = 0xd20; // UNiagaraSystem*
		constexpr auto pParticleSystem_BloodPiercingDeath = 0xd28; // UNiagaraSystem*
		constexpr auto pParticleSystem_BloodArrowDeath = 0xd30; // UNiagaraSystem*
		constexpr auto pParticleSystem_BloodBluntDeath = 0xd38; // UNiagaraSystem*
		constexpr auto pSwingBloodTrail = 0xd40; // UParticleSystem*
		constexpr auto vBloodDecalsSmall = 0xd48; // TArray<UMaterialInstance*>
		constexpr auto vBloodDecalsLarge = 0xd58; // TArray<UMaterialInstance*>
		constexpr auto vBloodDecalsSpray = 0xd68; // TArray<UMaterialInstance*>
		constexpr auto pSoundCue_Pain = 0xd78; // USoundCue*
		constexpr auto pSoundCue_Death = 0xd80; // USoundCue*
		constexpr auto pSoundCue_Footsteps = 0xd88; // USoundCue*
		constexpr auto pSoundCue_GoreLimbRemoved = 0xd90; // USoundCue*
		constexpr auto pSoundCue_GorePiercingDeath = 0xd98; // USoundCue*
		constexpr auto pSoundCue_GoreBluntDeath = 0xda0; // USoundCue*
		constexpr auto pSoundCue_GoreBowDeath = 0xda8; // USoundCue*
	}

	namespace n_UGizmoComponentWorldTransformSource { // : UGizmoBaseTransformSource
		constexpr auto Component = 0x48; // USceneComponent*
		constexpr auto bModifyComponentOnTransform = 0x50; // bool
	}

	namespace n_UMovieSceneSection { // : UMovieSceneSignedObject
		constexpr auto EvalOptions = 0x50; // FMovieSceneSectionEvalOptions
		constexpr auto Easing = 0x58; // FMovieSceneEasingSettings
		constexpr auto SectionRange = 0x90; // FMovieSceneFrameRange
		constexpr auto PreRollFrames = 0xa0; // FFrameNumber
		constexpr auto PostRollFrames = 0xa4; // FFrameNumber
		constexpr auto RowIndex = 0xa8; // int32_t
		constexpr auto OverlapPriority = 0xac; // int32_t
		constexpr auto bIsActive = 0xb0; // char : 1
		constexpr auto bIsLocked = 0xb0; // char : 1
		constexpr auto StartTime = 0xb4; // float
		constexpr auto EndTime = 0xb8; // float
		constexpr auto PrerollTime = 0xbc; // float
		constexpr auto PostrollTime = 0xc0; // float
		constexpr auto bIsInfinite = 0xc4; // char : 1
		constexpr auto bSupportsInfiniteRange = 0xc8; // bool
		constexpr auto BlendType = 0xc9; // FOptionalMovieSceneBlendType
	}

	namespace n_ULevelSequenceDirector { // : UObject
		constexpr auto Player = 0x28; // ULevelSequencePlayer*
	}

	namespace n_UParticleEmitter { // : UObject
		constexpr auto EmitterName = 0x28; // FName
		constexpr auto SubUVDataOffset = 0x30; // int32_t
		constexpr auto EmitterRenderMode = 0x34; // EEmitterRenderMode
		constexpr auto SignificanceLevel = 0x35; // EParticleSignificanceLevel
		constexpr auto bUseLegacySpawningBehavior = 0x37; // char : 1
		constexpr auto ConvertedModules = 0x37; // char : 1
		constexpr auto bIsSoloing = 0x37; // char : 1
		constexpr auto bCookedOut = 0x37; // char : 1
		constexpr auto bDisabledLODsKeepEmitterAlive = 0x37; // char : 1
		constexpr auto bDisableWhenInsignficant = 0x38; // char : 1
		constexpr auto LODLevels = 0x40; // TArray<UParticleLODLevel*>
		constexpr auto PeakActiveParticles = 0x50; // int32_t
		constexpr auto InitialAllocationCount = 0x54; // int32_t
		constexpr auto QualityLevelSpawnRateScale = 0x58; // float
		constexpr auto DetailModeBitmask = 0x5c; // uint32_t
	}

	namespace n_UARTextureCameraDepth { // : UARTexture
		constexpr auto DepthQuality = 0xf8; // EARDepthQuality
		constexpr auto DepthAccuracy = 0xf9; // EARDepthAccuracy
		constexpr auto bIsTemporallySmoothed = 0xfa; // bool
	}

	namespace n_UMaterialExpressionVectorNoise { // : UMaterialExpression
		constexpr auto Position = 0x40; // FExpressionInput
		constexpr auto NoiseFunction = 0x54; // EVectorNoiseFunction
		constexpr auto Quality = 0x58; // int32_t
		constexpr auto bTiling = 0x5c; // char : 1
		constexpr auto TileSize = 0x60; // uint32_t
	}

	namespace n_ABP_AiEffectArrowPoison_C { // : AMOAiEffectActor
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
	}

	namespace n_UParticleModuleColorOverLife { // : UParticleModuleColorBase
		constexpr auto ColorOverLife = 0x30; // FRawDistributionVector
		constexpr auto AlphaOverLife = 0x78; // FRawDistributionFloat
		constexpr auto bClampAlpha = 0xa8; // char : 1
	}

	namespace n_UARLifeCycleComponent { // : USceneComponent
		constexpr auto OnARActorSpawnedDelegate = 0x1f8; // FMulticastInlineDelegate
		constexpr auto OnARActorToBeDestroyedDelegate = 0x208; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionStaticBool { // : UMaterialExpression
		constexpr auto Value = 0x40; // char : 1
	}

	namespace n_UParticleModuleLocationPrimitiveSphere_Seeded { // : UParticleModuleLocationPrimitiveSphere
		constexpr auto RandomSeedInfo = 0xe0; // FParticleRandomSeedInfo
	}

	namespace n_UVehicleWheel { // : UObject
		constexpr auto CollisionMesh = 0x28; // UStaticMesh*
		constexpr auto bDontCreateShape = 0x30; // bool
		constexpr auto bAutoAdjustCollisionSize = 0x31; // bool
		constexpr auto Offset = 0x34; // FVector
		constexpr auto ShapeRadius = 0x40; // float
		constexpr auto ShapeWidth = 0x44; // float
		constexpr auto Mass = 0x48; // float
		constexpr auto DampingRate = 0x4c; // float
		constexpr auto SteerAngle = 0x50; // float
		constexpr auto bAffectedByHandbrake = 0x54; // bool
		constexpr auto TireType = 0x58; // UTireType*
		constexpr auto TireConfig = 0x60; // UTireConfig*
		constexpr auto LatStiffMaxLoad = 0x68; // float
		constexpr auto LatStiffValue = 0x6c; // float
		constexpr auto LongStiffValue = 0x70; // float
		constexpr auto SuspensionForceOffset = 0x74; // float
		constexpr auto SuspensionMaxRaise = 0x78; // float
		constexpr auto SuspensionMaxDrop = 0x7c; // float
		constexpr auto SuspensionNaturalFrequency = 0x80; // float
		constexpr auto SuspensionDampingRatio = 0x84; // float
		constexpr auto SweepType = 0x88; // EWheelSweepType
		constexpr auto MaxBrakeTorque = 0x8c; // float
		constexpr auto MaxHandBrakeTorque = 0x90; // float
		constexpr auto VehicleSim = 0x98; // UWheeledVehicleMovementComponent*
		constexpr auto WheelIndex = 0xa0; // int32_t
		constexpr auto DebugLongSlip = 0xa4; // float
		constexpr auto DebugLatSlip = 0xa8; // float
		constexpr auto DebugNormalizedTireLoad = 0xac; // float
		constexpr auto DebugWheelTorque = 0xb4; // float
		constexpr auto DebugLongForce = 0xb8; // float
		constexpr auto DebugLatForce = 0xbc; // float
		constexpr auto Location = 0xc0; // FVector
		constexpr auto OldLocation = 0xcc; // FVector
		constexpr auto Velocity = 0xd8; // FVector
	}

	namespace n_UMoviePlayerSettings { // : UObject
		constexpr auto bWaitForMoviesToComplete = 0x28; // bool
		constexpr auto bMoviesAreSkippable = 0x29; // bool
		constexpr auto StartupMovies = 0x30; // TArray<FString>
	}

	namespace n_UInterpTrackVectorMaterialParam { // : UInterpTrackVectorBase
		constexpr auto TargetMaterials = 0x90; // TArray<UMaterialInterface*>
		constexpr auto ParamName = 0xa0; // FName
	}

	namespace n_ULevel { // : UObject
		constexpr auto OwningWorld = 0xb8; // UWorld*
		constexpr auto Model = 0xc0; // UModel*
		constexpr auto ModelComponents = 0xc8; // TArray<UModelComponent*>
		constexpr auto ActorCluster = 0xd8; // ULevelActorContainer*
		constexpr auto NumTextureStreamingUnbuiltComponents = 0xe0; // int32_t
		constexpr auto NumTextureStreamingDirtyResources = 0xe4; // int32_t
		constexpr auto LevelScriptActor = 0xe8; // ALevelScriptActor*
		constexpr auto NavListStart = 0xf0; // ANavigationObjectBase*
		constexpr auto NavListEnd = 0xf8; // ANavigationObjectBase*
		constexpr auto NavDataChunks = 0x100; // TArray<UNavigationDataChunk*>
		constexpr auto LightmapTotalSize = 0x110; // float
		constexpr auto ShadowmapTotalSize = 0x114; // float
		constexpr auto StaticNavigableGeometry = 0x118; // TArray<FVector>
		constexpr auto StreamingTextureGuids = 0x128; // TArray<FGuid>
		constexpr auto LevelBuildDataId = 0x1d0; // FGuid
		constexpr auto MapBuildData = 0x1e0; // UMapBuildDataRegistry*
		constexpr auto LightBuildLevelOffset = 0x1e8; // FIntVector
		constexpr auto bIsLightingScenario = 0x1f4; // char : 1
		constexpr auto bTextureStreamingRotationChanged = 0x1f4; // char : 1
		constexpr auto bStaticComponentsRegisteredInStreamingManager = 0x1f4; // char : 1
		constexpr auto bIsVisible = 0x1f4; // char : 1
		constexpr auto WorldSettings = 0x258; // AWorldSettings*
		constexpr auto AssetUserData = 0x268; // TArray<UAssetUserData*>
		constexpr auto DestroyedReplicatedStaticActors = 0x288; // TArray<FReplicatedStaticActorDestructionInfo>
	}

	namespace n_UWB_MOCharCreationInfoEntryMaxValue_C { // : UMOCharCreationInfoEntry
		constexpr auto UberGraphFrame = 0x328; // FPointerToUberGraphFrame
		constexpr auto UpdateMaxValue = 0x330; // UWidgetAnimation*
		constexpr auto UpdateValue = 0x338; // UWidgetAnimation*
		constexpr auto HorizontalBox_6 = 0x340; // UHorizontalBox*
	}

	namespace n_UWB_CladeButtonManager_C { // : UMOWidgetBlueprint
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto PaperDollCladeGifts = 0x268; // UMOPaperdollCladeGifts*
		constexpr auto ButtonsArray = 0x270; // TArray<UWB_CladeGiftsButton_C*>
		constexpr auto iCladeGiftPointsLeft = 0x280; // int32_t
		constexpr auto RowsNotFound = 0x284; // int32_t
		constexpr auto CladeGiftName = 0x288; // FName
		constexpr auto ScrollBox = 0x290; // UScrollBox*
		constexpr auto TextArray = 0x298; // TArray<UWB_CladeGiftsLearnedGiftsText_C*>
		constexpr auto TextIsAlreadyInList = 0x2a8; // bool
		constexpr auto CladeGiftsText = 0x2b0; // UWB_CladeGiftsLearnedGiftsText_C*
		constexpr auto pDataTable = 0x2b8; // UDataTable*
	}

	namespace n_UMaterialExpressionLinearInterpolate { // : UMaterialExpression
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto Alpha = 0x68; // FExpressionInput
		constexpr auto ConstA = 0x7c; // float
		constexpr auto ConstB = 0x80; // float
		constexpr auto ConstAlpha = 0x84; // float
	}

	namespace n_UMOPetsInfo { // : UMOUserWidget
		constexpr auto pMOItemSlot_Bags = 0x2c8; // UMOItemSlotPlaceItem*
		constexpr auto pMOItemSlot_Armor = 0x2d0; // UMOItemSlotPlaceItem*
		constexpr auto pCanvasPanel_PetEquipment = 0x2d8; // UCanvasPanel*
		constexpr auto pMOPetListEntry = 0x2e0; // UMOPetListEntryTamed*
		constexpr auto pMOButton_Abandon = 0x2e8; // UMOButtonLarge*
		constexpr auto pMOButton_Rename = 0x2f0; // UMOButtonLarge*
		constexpr auto pMOButton_TradePet = 0x2f8; // UMOButtonLarge*
		constexpr auto pMOButton_PetLevelLockState = 0x300; // UMOButtonAttributeToggle*
		constexpr auto pTextFieldLevelCur = 0x308; // UTextBlock*
		constexpr auto pTextFieldLevelMax = 0x310; // UTextBlock*
		constexpr auto pTextFieldLoyaltyCurrent = 0x318; // UTextBlock*
		constexpr auto pTextFieldLoyaltyMaximum = 0x320; // UTextBlock*
		constexpr auto pTextFieldHungerCur = 0x328; // UTextBlock*
		constexpr auto pTextFieldHungerMax = 0x330; // UTextBlock*
		constexpr auto pTextFieldHealthCur = 0x338; // UTextBlock*
		constexpr auto pTextFieldHealthMax = 0x340; // UTextBlock*
		constexpr auto pTextFieldPointCostCur = 0x348; // UTextBlock*
		constexpr auto pTextFieldPointCostMax = 0x350; // UTextBlock*
		constexpr auto pMOPets = 0x358; // UMOPets*
		constexpr auto pMORenameWidget_PetName = 0x360; // UMORenameUserWidget*
		constexpr auto pMOButtonPetSkill_Attack = 0x368; // UMOButtonPetSkillWidget*
		constexpr auto pMOButtonPetSkill_Follow = 0x370; // UMOButtonPetSkillWidget*
		constexpr auto pMOButtonPetSkill_Stay = 0x378; // UMOButtonPetSkillWidget*
		constexpr auto pMOButtonPetSkill_PetBags = 0x380; // UMOButtonPetSkillWidget*
	}

	namespace n_UARQRCodeComponent { // : UARComponent
		constexpr auto ReplicatedPayload = 0x280; // FARQRCodeUpdatePayload
	}

	namespace n_ALevelVariantSetsActor { // : AActor
		constexpr auto LevelVariantSets = 0x220; // FSoftObjectPath
	}

	namespace n_UNetworkSettings { // : UDeveloperSettings
		constexpr auto bVerifyPeer = 0x38; // char : 1
		constexpr auto bEnableMultiplayerWorldOriginRebasing = 0x38; // char : 1
		constexpr auto MaxRepArraySize = 0x3c; // int32_t
		constexpr auto MaxRepArrayMemory = 0x40; // int32_t
		constexpr auto NetworkEmulationProfiles = 0x48; // TArray<FNetworkEmulationProfileDescription>
	}

	namespace n_AMOCharacterAICreatureMount { // : AMOCharacterAICreature
		constexpr auto fMountStaminaMax = 0xdb0; // float
		constexpr auto vMountMaxSpeed = 0xdb8; // TArray<float>
		constexpr auto SlowestSpeedTurnRate = 0xdc8; // float
		constexpr auto FastestSpeedTurnRate = 0xdcc; // float
		constexpr auto fMountBreakSpeed = 0xdd0; // float
		constexpr auto fMountThrottleSpeed = 0xdd4; // float
		constexpr auto fStaminaGainPct = 0xdd8; // float
		constexpr auto fStaminaDrainPct = 0xddc; // float
		constexpr auto fMovementSpeedPct = 0xde0; // float
		constexpr auto fStaminaDrainBoostPct = 0xde4; // float
		constexpr auto fBoostTime = 0xde8; // float
		constexpr auto fMaxArmorWeight_ModSpeed = 0xdec; // float
		constexpr auto fMaxArmorWeight_ModTurnRate = 0xdf0; // float
		constexpr auto fMaxArmorWeight_AddStaminaDrain = 0xdf4; // float
	}

	namespace n_UMOMailSend { // : UMOMailPanel
		constexpr auto pMOButton_ConfirmSendMail = 0x2d0; // UMOButtonLarge*
		constexpr auto pMOItemSlot_SendItem = 0x2d8; // UMOItemSlotPlaceItem*
		constexpr auto pMOEditableTextBox_Name = 0x2e0; // UMOEditableTextBox*
		constexpr auto pMOEditableCurrencyWidget = 0x2e8; // UMOEditableCurrencyWidget*
	}

	namespace n_UFieldSystemComponent { // : UPrimitiveComponent
		constexpr auto FieldSystem = 0x440; // UFieldSystem*
		constexpr auto SupportedSolvers = 0x458; // TArray<TSoftObjectPtr<AChaosSolverActor>>
	}

	namespace n_UWB_MO_LoginScreen_ServerEntry_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto MapNameTitle = 0x268; // UTextBlock*
		constexpr auto pMOButtonLogin = 0x270; // UMOButtonLarge*
		constexpr auto ServerIPTitle = 0x278; // UTextBlock*
		constexpr auto ServerNameTitle = 0x280; // UTextBlock*
		constexpr auto ServerName = 0x288; // FString
		constexpr auto ServerIP = 0x298; // FString
		constexpr auto PersistentLevel = 0x2a8; // FString
		constexpr auto ServerID = 0x2b8; // int32_t
	}

	namespace n_UComboBoxString { // : UWidget
		constexpr auto DefaultOptions = 0x108; // TArray<FString>
		constexpr auto SelectedOption = 0x118; // FString
		constexpr auto WidgetStyle = 0x128; // FComboBoxStyle
		constexpr auto ItemStyle = 0x518; // FTableRowStyle
		constexpr auto ContentPadding = 0xce0; // FMargin
		constexpr auto MaxListHeight = 0xcf0; // float
		constexpr auto HasDownArrow = 0xcf4; // bool
		constexpr auto EnableGamepadNavigationMode = 0xcf5; // bool
		constexpr auto Font = 0xcf8; // FSlateFontInfo
		constexpr auto ForegroundColor = 0xd50; // FSlateColor
		constexpr auto bIsFocusable = 0xd78; // bool
		constexpr auto OnGenerateWidgetEvent = 0xd7c; // FDelegate
		constexpr auto OnSelectionChanged = 0xd90; // FMulticastInlineDelegate
		constexpr auto OnOpening = 0xda0; // FMulticastInlineDelegate
	}

	namespace n_UMOBrokerCurrencyWidget { // : UMOUserWidget
		constexpr auto pMOEditableCurrencyWidget = 0x2c8; // UMOEditableCurrencyWidget*
		constexpr auto pMOEditableTextBox_Quantity = 0x2d0; // UMOEditableTextBoxNumbers*
		constexpr auto pMOEditableTextBox_Duration = 0x2d8; // UMOEditableTextBoxNumbers*
		constexpr auto pHorizontalBox_Duration = 0x2e0; // UHorizontalBox*
		constexpr auto pHorizontalBox_Quantity = 0x2e8; // UHorizontalBox*
	}

	namespace n_AIntervalGizmoActor { // : AGizmoActor
		constexpr auto UpIntervalComponent = 0x220; // UGizmoLineHandleComponent*
		constexpr auto DownIntervalComponent = 0x228; // UGizmoLineHandleComponent*
		constexpr auto ForwardIntervalComponent = 0x230; // UGizmoLineHandleComponent*
	}

	namespace n_ACineCameraActor { // : ACameraActor
		constexpr auto LookatTrackingSettings = 0x7a0; // FCameraLookatTrackingSettings
	}

	namespace n_ASkyAtmosphere { // : AInfo
		constexpr auto SkyAtmosphereComponent = 0x220; // USkyAtmosphereComponent*
	}

	namespace n_UGFurComponent { // : UMeshComponent
		constexpr auto SkeletalGrowMesh = 0x468; // USkeletalMesh*
		constexpr auto StaticGrowMesh = 0x470; // UStaticMesh*
		constexpr auto FurSplines = 0x478; // UFurSplines*
		constexpr auto SkeletalGuideMeshes = 0x480; // TArray<USkeletalMesh*>
		constexpr auto StaticGuideMeshes = 0x490; // TArray<UStaticMesh*>
		constexpr auto LayerCount = 0x4a0; // int32_t
		constexpr auto MinScreenSize = 0x4a4; // float
		constexpr auto LODs = 0x4a8; // TArray<FFurLod>
		constexpr auto LODFromParent = 0x4b8; // bool
		constexpr auto ShellBias = 0x4bc; // float
		constexpr auto FurLength = 0x4c0; // float
		constexpr auto MinFurLength = 0x4c4; // float
		constexpr auto RemoveFacesWithoutSplines = 0x4c8; // bool
		constexpr auto PhysicsEnabled = 0x4c9; // bool
		constexpr auto ForceDistribution = 0x4cc; // float
		constexpr auto Stiffness = 0x4d0; // float
		constexpr auto Damping = 0x4d4; // float
		constexpr auto ConstantForce = 0x4d8; // FVector
		constexpr auto MaxForce = 0x4e4; // float
		constexpr auto MaxForceTorqueFactor = 0x4e8; // float
		constexpr auto ReferenceHairBias = 0x4ec; // float
		constexpr auto HairLengthForceUniformity = 0x4f0; // float
		constexpr auto MaxPhysicsOffsetLength = 0x4f4; // float
		constexpr auto NoiseStrength = 0x4f8; // float
		constexpr auto DisableMorphTargets = 0x4fc; // bool
		constexpr auto StreamingDistanceMultiplier = 0x500; // float
	}

	namespace n_USlateVectorArtData { // : UObject
		constexpr auto VertexData = 0x28; // TArray<FSlateMeshVertex>
		constexpr auto IndexData = 0x38; // TArray<uint32_t>
		constexpr auto Material = 0x48; // UMaterialInterface*
		constexpr auto ExtentMin = 0x50; // FVector2D
		constexpr auto ExtentMax = 0x58; // FVector2D
	}

	namespace n_UAudioSettings { // : UDeveloperSettings
		constexpr auto DefaultSoundClassName = 0x38; // FSoftObjectPath
		constexpr auto DefaultMediaSoundClassName = 0x50; // FSoftObjectPath
		constexpr auto DefaultSoundConcurrencyName = 0x68; // FSoftObjectPath
		constexpr auto DefaultBaseSoundMix = 0x80; // FSoftObjectPath
		constexpr auto VoiPSoundClass = 0x98; // FSoftObjectPath
		constexpr auto MasterSubmix = 0xb0; // FSoftObjectPath
		constexpr auto ReverbSubmix = 0xc8; // FSoftObjectPath
		constexpr auto EQSubmix = 0xe0; // FSoftObjectPath
		constexpr auto VoiPSampleRate = 0xf8; // EVoiceSampleRate
		constexpr auto DefaultReverbSendLevel = 0xfc; // float
		constexpr auto MaximumConcurrentStreams = 0x100; // int32_t
		constexpr auto GlobalMinPitchScale = 0x104; // float
		constexpr auto GlobalMaxPitchScale = 0x108; // float
		constexpr auto QualityLevels = 0x110; // TArray<FAudioQualitySettings>
		constexpr auto bAllowPlayWhenSilent = 0x120; // char : 1
		constexpr auto bDisableMasterEQ = 0x120; // char : 1
		constexpr auto bAllowCenterChannel3DPanning = 0x120; // char : 1
		constexpr auto NumStoppingSources = 0x124; // uint32_t
		constexpr auto PanningMethod = 0x128; // EPanningMethod
		constexpr auto MonoChannelUpmixMethod = 0x129; // EMonoChannelUpmixMethod
		constexpr auto DialogueFilenameFormat = 0x130; // FString
	}

	namespace n_ABlockoutToolsParent { // : AActor
		constexpr auto Root = 0x220; // USceneComponent*
		constexpr auto Billboard = 0x228; // UBillboardComponent*
		constexpr auto BlockoutGridParent = 0x230; // UMaterialInterface*
		constexpr auto BlockoutGridMID = 0x238; // UMaterialInstanceDynamic*
		constexpr auto BlockoutCurrentMaterial = 0x240; // UMaterialInterface*
		constexpr auto BlockoutMeshComponents = 0x248; // TArray<UStaticMeshComponent*>
		constexpr auto BlockoutMaterialType = 0x258; // EBlockoutMaterialType
		constexpr auto BlockoutMaterialColor = 0x25c; // FLinearColor
		constexpr auto bBlockoutMaterialUseGrid = 0x26c; // bool
		constexpr auto BlockoutMaterialGridSize = 0x270; // float
		constexpr auto BlockoutMaterialCheckerLuminance = 0x274; // float
		constexpr auto bBlockoutMaterialUseTopColor = 0x278; // bool
		constexpr auto BlockoutMaterialTopColor = 0x27c; // FLinearColor
		constexpr auto bUseCustomMaterial = 0x28c; // bool
		constexpr auto CustomMaterial = 0x290; // UMaterialInterface*
		constexpr auto BlockoutCustomMaterial = 0x298; // UMaterialInterface*
		constexpr auto bBlockoutEnableCollisions = 0x2a0; // bool
		constexpr auto bBlockoutCastShadows = 0x2a1; // bool
	}

	namespace n_UOnsetNRTSettings { // : UAudioSynesthesiaNRTSettings
		constexpr auto bDownmixToMono = 0x28; // bool
		constexpr auto GranularityInSeconds = 0x2c; // float
		constexpr auto Sensitivity = 0x30; // float
		constexpr auto MinimumFrequency = 0x34; // float
		constexpr auto MaximumFrequency = 0x38; // float
	}

	namespace n_UEnvQueryTest_Dot { // : UEnvQueryTest
		constexpr auto LineA = 0x1f8; // FEnvDirection
		constexpr auto LineB = 0x218; // FEnvDirection
		constexpr auto TestMode = 0x238; // EEnvTestDot
		constexpr auto bAbsoluteValue = 0x239; // bool
	}

	namespace n_AMagicLeapSharedWorldGameState { // : AGameState
		constexpr auto SharedWorldData = 0x290; // FMagicLeapSharedWorldSharedData
		constexpr auto AlignmentTransforms = 0x2a0; // FMagicLeapSharedWorldAlignmentTransforms
		constexpr auto OnSharedWorldDataUpdated = 0x2b0; // FMulticastInlineDelegate
		constexpr auto OnAlignmentTransformsUpdated = 0x2c0; // FMulticastInlineDelegate
	}

	namespace n_UWaterSplineComponent { // : USplineComponent
		constexpr auto WaterSplineDefaults = 0x538; // FWaterSplineCurveDefaults
		constexpr auto PreviousWaterSplineDefaults = 0x548; // FWaterSplineCurveDefaults
	}

	namespace n_UMOCombatSystemMagic { // : UMOCombatSystem
		constexpr auto wpLastTargetCharacter = 0x19c; // TWeakObjectPtr<AMOCharacter>
		constexpr auto pStaticMeshComponent = 0x1c8; // UStaticMeshComponent*
		constexpr auto vFingerBeamParticles = 0x1d0; // TArray<UNiagaraComponent*>
	}

	namespace n_UNiagaraSpriteRendererProperties { // : UNiagaraRendererProperties
		constexpr auto Material = 0x80; // UMaterialInterface*
		constexpr auto SourceMode = 0x88; // ENiagaraRendererSourceDataMode
		constexpr auto MaterialUserParamBinding = 0x90; // FNiagaraUserParameterBinding
		constexpr auto Alignment = 0xb0; // ENiagaraSpriteAlignment
		constexpr auto FacingMode = 0xb1; // ENiagaraSpriteFacingMode
		constexpr auto PivotInUVSpace = 0xb4; // FVector2D
		constexpr auto SortMode = 0xbc; // ENiagaraSortMode
		constexpr auto SubImageSize = 0xc0; // FVector2D
		constexpr auto bSubImageBlend = 0xc8; // char : 1
		constexpr auto bRemoveHMDRollInVR = 0xc8; // char : 1
		constexpr auto bSortOnlyWhenTranslucent = 0xc8; // char : 1
		constexpr auto bGpuLowLatencyTranslucency = 0xc8; // char : 1
		constexpr auto MinFacingCameraBlendDistance = 0xcc; // float
		constexpr auto MaxFacingCameraBlendDistance = 0xd0; // float
		constexpr auto bEnableCameraDistanceCulling = 0xd4; // char : 1
		constexpr auto MinCameraDistance = 0xd8; // float
		constexpr auto MaxCameraDistance = 0xdc; // float
		constexpr auto RendererVisibility = 0xe0; // uint32_t
		constexpr auto PositionBinding = 0xe8; // FNiagaraVariableAttributeBinding
		constexpr auto ColorBinding = 0x140; // FNiagaraVariableAttributeBinding
		constexpr auto VelocityBinding = 0x198; // FNiagaraVariableAttributeBinding
		constexpr auto SpriteRotationBinding = 0x1f0; // FNiagaraVariableAttributeBinding
		constexpr auto SpriteSizeBinding = 0x248; // FNiagaraVariableAttributeBinding
		constexpr auto SpriteFacingBinding = 0x2a0; // FNiagaraVariableAttributeBinding
		constexpr auto SpriteAlignmentBinding = 0x2f8; // FNiagaraVariableAttributeBinding
		constexpr auto SubImageIndexBinding = 0x350; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterialBinding = 0x3a8; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial1Binding = 0x400; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial2Binding = 0x458; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial3Binding = 0x4b0; // FNiagaraVariableAttributeBinding
		constexpr auto CameraOffsetBinding = 0x508; // FNiagaraVariableAttributeBinding
		constexpr auto UVScaleBinding = 0x560; // FNiagaraVariableAttributeBinding
		constexpr auto MaterialRandomBinding = 0x5b8; // FNiagaraVariableAttributeBinding
		constexpr auto CustomSortingBinding = 0x610; // FNiagaraVariableAttributeBinding
		constexpr auto NormalizedAgeBinding = 0x668; // FNiagaraVariableAttributeBinding
		constexpr auto RendererVisibilityTagBinding = 0x6c0; // FNiagaraVariableAttributeBinding
		constexpr auto MaterialParameterBindings = 0x718; // TArray<FNiagaraMaterialAttributeBinding>
	}

	namespace n_UAnimationAsset { // : UObject
		constexpr auto Skeleton = 0x38; // USkeleton*
		constexpr auto MetaData = 0x60; // TArray<UAnimMetaData*>
		constexpr auto AssetUserData = 0x70; // TArray<UAssetUserData*>
	}

	namespace n_UBorder { // : UContentWidget
		constexpr auto HorizontalAlignment = 0x120; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x121; // EVerticalAlignment
		constexpr auto bShowEffectWhenDisabled = 0x122; // char : 1
		constexpr auto ContentColorAndOpacity = 0x124; // FLinearColor
		constexpr auto ContentColorAndOpacityDelegate = 0x134; // FDelegate
		constexpr auto Padding = 0x144; // FMargin
		constexpr auto BACKGROUND = 0x158; // FSlateBrush
		constexpr auto BackgroundDelegate = 0x1e0; // FDelegate
		constexpr auto BrushColor = 0x1f0; // FLinearColor
		constexpr auto BrushColorDelegate = 0x200; // FDelegate
		constexpr auto DesiredSizeScale = 0x210; // FVector2D
		constexpr auto bFlipForRightToLeftFlowDirection = 0x218; // bool
		constexpr auto OnMouseButtonDownEvent = 0x21c; // FDelegate
		constexpr auto OnMouseButtonUpEvent = 0x22c; // FDelegate
		constexpr auto OnMouseMoveEvent = 0x23c; // FDelegate
		constexpr auto OnMouseDoubleClickEvent = 0x24c; // FDelegate
	}

	namespace n_UDatasmithSceneComponentTemplate { // : UDatasmithObjectTemplate
		constexpr auto RelativeTransform = 0x30; // FTransform
		constexpr auto Mobility = 0x60; // EComponentMobility
		constexpr auto AttachParent = 0x68; // TSoftObjectPtr<USceneComponent>
		constexpr auto bVisible = 0x90; // bool
		constexpr auto Tags = 0x98; // TSet<FName>
	}

	namespace n_UAssetManager { // : UObject
		constexpr auto ObjectReferenceList = 0x2c0; // TArray<UObject*>
		constexpr auto bIsGlobalAsyncScanEnvironment = 0x2d0; // bool
		constexpr auto bShouldGuessTypeAndName = 0x2d1; // bool
		constexpr auto bShouldUseSynchronousLoad = 0x2d2; // bool
		constexpr auto bIsLoadingFromPakFiles = 0x2d3; // bool
		constexpr auto bShouldAcquireMissingChunksOnLoad = 0x2d4; // bool
		constexpr auto bOnlyCookProductionAssets = 0x2d5; // bool
		constexpr auto bIsBulkScanning = 0x2d6; // bool
		constexpr auto bIsPrimaryAssetDirectoryCurrent = 0x2d7; // bool
		constexpr auto bIsManagementDatabaseCurrent = 0x2d8; // bool
		constexpr auto bUpdateManagementDatabaseAfterScan = 0x2d9; // bool
		constexpr auto bIncludeOnlyOnDiskAssets = 0x2da; // bool
		constexpr auto bHasCompletedInitialScan = 0x2db; // bool
		constexpr auto NumberOfSpawnedNotifications = 0x2dc; // int32_t
	}

	namespace n_UGameInstance { // : UObject
		constexpr auto LocalPlayers = 0x38; // TArray<ULocalPlayer*>
		constexpr auto OnlineSession = 0x48; // UOnlineSession*
		constexpr auto ReferencedObjects = 0x50; // TArray<UObject*>
		constexpr auto OnPawnControllerChangedDelegates = 0x78; // FMulticastInlineDelegate
	}

	namespace n_AMOAvatarStaticMeshPickableField { // : AMOAvatarStaticMesh
		constexpr auto vInstanceStaticMeshes = 0x2c8; // TArray<UStaticMesh*>
		constexpr auto vInstances = 0x2d8; // TArray<FPickableFieldInstance>
		constexpr auto iFieldSize = 0x2e8; // int32_t
		constexpr auto iBitField = 0x2ec; // int32_t
	}

	namespace n_AArchVisCharacter { // : ACharacter
		constexpr auto LookUpAxisName = 0x4b8; // FString
		constexpr auto LookUpAtRateAxisName = 0x4c8; // FString
		constexpr auto TurnAxisName = 0x4d8; // FString
		constexpr auto TurnAtRateAxisName = 0x4e8; // FString
		constexpr auto MoveForwardAxisName = 0x4f8; // FString
		constexpr auto MoveRightAxisName = 0x508; // FString
		constexpr auto MouseSensitivityScale_Pitch = 0x518; // float
		constexpr auto MouseSensitivityScale_Yaw = 0x51c; // float
	}

	namespace n_UScrollBox { // : UPanelWidget
		constexpr auto WidgetStyle = 0x120; // FScrollBoxStyle
		constexpr auto WidgetBarStyle = 0x348; // FScrollBarStyle
		constexpr auto Style = 0x818; // USlateWidgetStyleAsset*
		constexpr auto BarStyle = 0x820; // USlateWidgetStyleAsset*
		constexpr auto Orientation = 0x828; // EOrientation
		constexpr auto ScrollBarVisibility = 0x829; // ESlateVisibility
		constexpr auto ConsumeMouseWheel = 0x82a; // EConsumeMouseWheel
		constexpr auto ScrollbarThickness = 0x82c; // FVector2D
		constexpr auto ScrollbarPadding = 0x834; // FMargin
		constexpr auto AlwaysShowScrollbar = 0x844; // bool
		constexpr auto AlwaysShowScrollbarTrack = 0x845; // bool
		constexpr auto AllowOverscroll = 0x846; // bool
		constexpr auto bAnimateWheelScrolling = 0x847; // bool
		constexpr auto NavigationDestination = 0x848; // EDescendantScrollDestination
		constexpr auto NavigationScrollPadding = 0x84c; // float
		constexpr auto ScrollWhenFocusChanges = 0x850; // EScrollWhenFocusChanges
		constexpr auto bAllowRightClickDragScrolling = 0x851; // bool
		constexpr auto WheelScrollMultiplier = 0x854; // float
		constexpr auto OnUserScrolled = 0x858; // FMulticastInlineDelegate
	}

	namespace n_UChannel { // : UObject
		constexpr auto Connection = 0x28; // UNetConnection*
	}

	namespace n_UInputSettings { // : UObject
		constexpr auto AxisConfig = 0x28; // TArray<FInputAxisConfigEntry>
		constexpr auto bAltEnterTogglesFullscreen = 0x38; // char : 1
		constexpr auto bF11TogglesFullscreen = 0x38; // char : 1
		constexpr auto bUseMouseForTouch = 0x38; // char : 1
		constexpr auto bEnableMouseSmoothing = 0x38; // char : 1
		constexpr auto bEnableFOVScaling = 0x38; // char : 1
		constexpr auto bCaptureMouseOnLaunch = 0x38; // char : 1
		constexpr auto bDefaultViewportMouseLock = 0x38; // char : 1
		constexpr auto bAlwaysShowTouchInterface = 0x38; // char : 1
		constexpr auto bShowConsoleOnFourFingerTap = 0x39; // char : 1
		constexpr auto bEnableGestureRecognizer = 0x39; // char : 1
		constexpr auto bUseAutocorrect = 0x3a; // bool
		constexpr auto ExcludedAutocorrectOS = 0x40; // TArray<FString>
		constexpr auto ExcludedAutocorrectCultures = 0x50; // TArray<FString>
		constexpr auto ExcludedAutocorrectDeviceModels = 0x60; // TArray<FString>
		constexpr auto DefaultViewportMouseCaptureMode = 0x70; // EMouseCaptureMode
		constexpr auto DefaultViewportMouseLockMode = 0x71; // EMouseLockMode
		constexpr auto FOVScale = 0x74; // float
		constexpr auto DoubleClickTime = 0x78; // float
		constexpr auto ActionMappings = 0x80; // TArray<FInputActionKeyMapping>
		constexpr auto AxisMappings = 0x90; // TArray<FInputAxisKeyMapping>
		constexpr auto SpeechMappings = 0xa0; // TArray<FInputActionSpeechMapping>
		constexpr auto DefaultPlayerInputClass = 0xb0; // TSoftClassPtr<UObject>
		constexpr auto DefaultInputComponentClass = 0xd8; // TSoftClassPtr<UObject>
		constexpr auto DefaultTouchInterface = 0x100; // FSoftObjectPath
		constexpr auto ConsoleKey = 0x118; // FKey
		constexpr auto ConsoleKeys = 0x130; // TArray<FKey>
	}

	namespace n_UHapticFeedbackEffect_Curve { // : UHapticFeedbackEffect_Base
		constexpr auto HapticDetails = 0x28; // FHapticFeedbackDetails_Curve
	}

	namespace n_UMOCombatSystemRanged { // : UMOCombatSystem
		constexpr auto bAimWithArrowTip = 0x88; // bool
		constexpr auto wpArrowToFire = 0xa0; // TWeakObjectPtr<AMOArrowActor>
	}

	namespace n_UParticleModuleSizeScaleBySpeed { // : UParticleModuleSizeBase
		constexpr auto SpeedScale = 0x30; // FVector2D
		constexpr auto MaxScale = 0x38; // FVector2D
	}

	namespace n_UInputRouter { // : UObject
		constexpr auto bAutoInvalidateOnHover = 0x28; // bool
		constexpr auto bAutoInvalidateOnCapture = 0x29; // bool
		constexpr auto ActiveInputBehaviors = 0x38; // UInputBehaviorSet*
	}

	namespace n_UWidget { // : UVisual
		constexpr auto Slot = 0x28; // UPanelSlot*
		constexpr auto bIsEnabledDelegate = 0x30; // FDelegate
		constexpr auto ToolTipText = 0x40; // FText
		constexpr auto ToolTipTextDelegate = 0x58; // FDelegate
		constexpr auto ToolTipWidget = 0x68; // UWidget*
		constexpr auto ToolTipWidgetDelegate = 0x70; // FDelegate
		constexpr auto VisibilityDelegate = 0x80; // FDelegate
		constexpr auto RenderTransform = 0x90; // FWidgetTransform
		constexpr auto RenderTransformPivot = 0xac; // FVector2D
		constexpr auto bIsVariable = 0xb4; // char : 1
		constexpr auto bCreatedByConstructionScript = 0xb4; // char : 1
		constexpr auto bIsEnabled = 0xb4; // char : 1
		constexpr auto bOverride_Cursor = 0xb4; // char : 1
		constexpr auto AccessibleWidgetData = 0xb8; // USlateAccessibleWidgetData*
		constexpr auto bIsVolatile = 0xc0; // char : 1
		constexpr auto Cursor = 0xc1; // EMouseCursor
		constexpr auto Clipping = 0xc2; // EWidgetClipping
		constexpr auto Visibility = 0xc3; // ESlateVisibility
		constexpr auto RenderOpacity = 0xc4; // float
		constexpr auto Navigation = 0xc8; // UWidgetNavigation*
		constexpr auto FlowDirectionPreference = 0xd0; // EFlowDirectionPreference
		constexpr auto NativeBindings = 0xf8; // TArray<UPropertyBinding*>
	}

	namespace n_UGameplayTagsManager { // : UObject
		constexpr auto TagSources = 0xc0; // TArray<FGameplayTagSource>
		constexpr auto GameplayTagTables = 0x1b0; // TArray<UDataTable*>
	}

	namespace n_UMaterialExpressionTextureSampleParameter { // : UMaterialExpressionTextureSample
		constexpr auto ParameterName = 0x60; // FName
		constexpr auto ExpressionGUID = 0x68; // FGuid
		constexpr auto Group = 0x78; // FName
	}

	namespace n_AAtmosphericFog { // : AInfo
		constexpr auto AtmosphericFogComponent = 0x220; // UAtmosphericFogComponent*
	}

	namespace n_UMaterialExpressionTextureProperty { // : UMaterialExpression
		constexpr auto TextureObject = 0x40; // FExpressionInput
		constexpr auto Property = 0x54; // EMaterialExposedTextureProperty
	}

	namespace n_UPlayer { // : UObject
		constexpr auto PlayerController = 0x30; // APlayerController*
		constexpr auto CurrentNetSpeed = 0x38; // int32_t
		constexpr auto ConfiguredInternetSpeed = 0x3c; // int32_t
		constexpr auto ConfiguredLanSpeed = 0x40; // int32_t
	}

	namespace n_AMOCrossNodeActor { // : AActor
		constexpr auto pStaticMeshComponent = 0x220; // UStaticMeshComponent*
	}

	namespace n_UNavCollision { // : UNavCollisionBase
		constexpr auto CylinderCollision = 0x80; // TArray<FNavCollisionCylinder>
		constexpr auto BoxCollision = 0x90; // TArray<FNavCollisionBox>
		constexpr auto AreaClass = 0xa0; // UNavArea*
		constexpr auto bGatherConvexGeometry = 0xa8; // char : 1
		constexpr auto bCreateOnClient = 0xa8; // char : 1
	}

	namespace n_USequenceCameraShakeSequencePlayer { // : UObject
		constexpr auto BoundObjectOverride = 0x480; // UObject*
		constexpr auto Sequence = 0x488; // UMovieSceneSequence*
		constexpr auto RootTemplateInstance = 0x490; // FMovieSceneRootEvaluationTemplateInstance
	}

	namespace n_UMovieSceneTakeTrack { // : UMovieSceneNameableTrack
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_UMaterialExpressionMin { // : UMaterialExpression
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_UMaterialExpressionRotator { // : UMaterialExpression
		constexpr auto Coordinate = 0x40; // FExpressionInput
		constexpr auto Time = 0x54; // FExpressionInput
		constexpr auto CenterX = 0x68; // float
		constexpr auto CenterY = 0x6c; // float
		constexpr auto Speed = 0x70; // float
		constexpr auto ConstCoordinate = 0x74; // uint32_t
	}

	namespace n_APhysicsVolume { // : AVolume
		constexpr auto TerminalVelocity = 0x258; // float
		constexpr auto Priority = 0x25c; // int32_t
		constexpr auto FluidFriction = 0x260; // float
		constexpr auto bWaterVolume = 0x264; // char : 1
		constexpr auto bPhysicsOnContact = 0x264; // char : 1
	}

	namespace n_UMODataAssetMagicAnimations { // : UPrimaryDataAsset
		constexpr auto FirstPersonOverride = 0x30; // UMODataAssetMagicAnimations*
		constexpr auto ChargeMontage = 0x38; // UAnimMontage*
		constexpr auto PreCastBeginMontage = 0x40; // UAnimSequenceBase*
		constexpr auto PreCastCancelMontage = 0x48; // UAnimSequenceBase*
		constexpr auto PreCastChargeMontage = 0x50; // UAnimSequenceBase*
		constexpr auto PreCastEndMontage = 0x58; // UAnimSequenceBase*
		constexpr auto FizzleMontage = 0x60; // UAnimSequenceBase*
		constexpr auto ReleaseInstantMontage = 0x68; // UAnimSequenceBase*
		constexpr auto ReleaseSelfMontage = 0x70; // UAnimSequenceBase*
		constexpr auto ReleaseProjectileMontage = 0x78; // UAnimSequenceBase*
	}

	namespace n_AGameState { // : AGameStateBase
		constexpr auto MatchState = 0x270; // FName
		constexpr auto PreviousMatchState = 0x278; // FName
		constexpr auto ElapsedTime = 0x280; // int32_t
	}

	namespace n_UMOJournalNotesPanel { // : UMOJournalPanel
		constexpr auto pMOScrollBox_GroupEntries = 0x2d0; // UMOScrollBox*
		constexpr auto pLastClickedEntry = 0x2d8; // UMOJournalNoteEntry*
		constexpr auto pSelectedNoteGroupEntry = 0x2e0; // UMOJournalNoteGroupEntry*
		constexpr auto pSelectedNoteEntry = 0x2e8; // UMOJournalNoteEntry*
		constexpr auto pMOButton_AddNoteGroup = 0x2f0; // UMOButtonLarge*
		constexpr auto pTitleText = 0x2f8; // UTextBlock*
		constexpr auto pEditableNotes = 0x300; // UMOMultiLineEditableTextBox*
		constexpr auto pRenameWidget = 0x308; // UMORenameUserWidget*
		constexpr auto pMOEditableTextBox_Search = 0x310; // UMOEditableTextBox*
		constexpr auto pCanvasPanel_TitleBG = 0x318; // UCanvasPanel*
		constexpr auto cMOJournalEntry = 0x320; // UMOJournalNoteEntry*
		constexpr auto cMOJournalGroupEntry = 0x328; // UMOJournalNoteGroupEntry*
		constexpr auto vJournalEntryMap = 0x330; // TMap<FString, UMOJournalNoteEntry*>
		constexpr auto vJournalGroupMap = 0x380; // TMap<FString, UMOJournalNoteGroupEntry*>
	}

	namespace n_UMOPreviewMode { // : UObject
		constexpr auto pMOGameInstance = 0x28; // UMOGameInstance*
		constexpr auto pOwnerPlayerController = 0x30; // AMOPlayerController*
	}

	namespace n_UMaterialExpressionPreviousFrameSwitch { // : UMaterialExpression
		constexpr auto CurrentFrame = 0x40; // FExpressionInput
		constexpr auto PreviousFrame = 0x54; // FExpressionInput
	}

	namespace n_UGridPathFollowingComponent { // : UPathFollowingComponent
		constexpr auto GridManager = 0x250; // UNavLocalGridManager*
	}

	namespace n_USlider { // : UWidget
		constexpr auto Value = 0x108; // float
		constexpr auto ValueDelegate = 0x10c; // FDelegate
		constexpr auto MinValue = 0x11c; // float
		constexpr auto MaxValue = 0x120; // float
		constexpr auto WidgetStyle = 0x128; // FSliderStyle
		constexpr auto Orientation = 0x468; // EOrientation
		constexpr auto SliderBarColor = 0x46c; // FLinearColor
		constexpr auto SliderHandleColor = 0x47c; // FLinearColor
		constexpr auto IndentHandle = 0x48c; // bool
		constexpr auto Locked = 0x48d; // bool
		constexpr auto MouseUsesStep = 0x48e; // bool
		constexpr auto RequiresControllerLock = 0x48f; // bool
		constexpr auto StepSize = 0x490; // float
		constexpr auto IsFocusable = 0x494; // bool
		constexpr auto OnMouseCaptureBegin = 0x498; // FMulticastInlineDelegate
		constexpr auto OnMouseCaptureEnd = 0x4a8; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureBegin = 0x4b8; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureEnd = 0x4c8; // FMulticastInlineDelegate
		constexpr auto OnValueChanged = 0x4d8; // FMulticastInlineDelegate
	}

	namespace n_UMovieSceneEventSection { // : UMovieSceneSection
		constexpr auto Events = 0xe8; // FNameCurve
		constexpr auto EventData = 0x160; // FMovieSceneEventSectionData
	}

	namespace n_AD2Jail_C { // : AActor
		constexpr auto Door = 0x220; // UStaticMeshComponent*
		constexpr auto initRot = 0x228; // FRotator
		constexpr auto Moving = 0x234; // bool
		constexpr auto Front = 0x235; // bool
		constexpr auto DoorState = 0x238; // int32_t
	}

	namespace n_AMOPhysicsVolumeLogout { // : AMOPhysicsVolume
		constexpr auto sZoneName = 0x268; // FText
		constexpr auto ELogoutZoneRules = 0x280; // ELogoutZoneRules
	}

	namespace n_UPlaneFalloff { // : UFieldNodeFloat
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto MinRange = 0xb4; // float
		constexpr auto MaxRange = 0xb8; // float
		constexpr auto Default = 0xbc; // float
		constexpr auto Distance = 0xc0; // float
		constexpr auto Position = 0xc4; // FVector
		constexpr auto Normal = 0xd0; // FVector
		constexpr auto Falloff = 0xdc; // EFieldFalloffType
	}

	namespace n_UForceFeedbackAttenuation { // : UObject
		constexpr auto Attenuation = 0x28; // FForceFeedbackAttenuationSettings
	}

	namespace n_UMovieSceneCapture { // : UObject
		constexpr auto ImageCaptureProtocolType = 0x38; // FSoftClassPath
		constexpr auto AudioCaptureProtocolType = 0x50; // FSoftClassPath
		constexpr auto ImageCaptureProtocol = 0x68; // UMovieSceneImageCaptureProtocolBase*
		constexpr auto AudioCaptureProtocol = 0x70; // UMovieSceneAudioCaptureProtocolBase*
		constexpr auto Settings = 0x78; // FMovieSceneCaptureSettings
		constexpr auto bUseSeparateProcess = 0xe8; // bool
		constexpr auto bCloseEditorWhenCaptureStarts = 0xe9; // bool
		constexpr auto AdditionalCommandLineArguments = 0xf0; // FString
		constexpr auto InheritedCommandLineArguments = 0x100; // FString
	}

	namespace n_ULevelStreaming { // : UObject
		constexpr auto WorldAsset = 0x28; // TSoftObjectPtr<UWorld>
		constexpr auto PackageNameToLoad = 0x50; // FName
		constexpr auto LODPackageNames = 0x58; // TArray<FName>
		constexpr auto LevelTransform = 0x80; // FTransform
		constexpr auto LevelLODIndex = 0xb0; // int32_t
		constexpr auto StreamingPriority = 0xb4; // int32_t
		constexpr auto bShouldBeVisible = 0xba; // char : 1
		constexpr auto bShouldBeLoaded = 0xba; // char : 1
		constexpr auto bLocked = 0xba; // char : 1
		constexpr auto bIsStatic = 0xba; // char : 1
		constexpr auto bShouldBlockOnLoad = 0xba; // char : 1
		constexpr auto bShouldBlockOnUnload = 0xbb; // char : 1
		constexpr auto bDisableDistanceStreaming = 0xbb; // char : 1
		constexpr auto bDrawOnLevelStatusMap = 0xbb; // char : 1
		constexpr auto LevelColor = 0xbc; // FLinearColor
		constexpr auto EditorStreamingVolumes = 0xd0; // TArray<ALevelStreamingVolume*>
		constexpr auto MinTimeBetweenVolumeUnloadRequests = 0xe0; // float
		constexpr auto OnLevelLoaded = 0xe8; // FMulticastInlineDelegate
		constexpr auto OnLevelUnloaded = 0xf8; // FMulticastInlineDelegate
		constexpr auto OnLevelShown = 0x108; // FMulticastInlineDelegate
		constexpr auto OnLevelHidden = 0x118; // FMulticastInlineDelegate
		constexpr auto LoadedLevel = 0x128; // ULevel*
		constexpr auto PendingUnloadLevel = 0x130; // ULevel*
	}

	namespace n_UEditableGameplayTagQuery { // : UObject
		constexpr auto UserDescription = 0x28; // FString
		constexpr auto RootExpression = 0x48; // UEditableGameplayTagQueryExpression*
		constexpr auto TagQueryExportText_Helper = 0x50; // FGameplayTagQuery
	}

	namespace n_UInterpTrackFloatParticleParam { // : UInterpTrackFloatBase
		constexpr auto ParamName = 0x90; // FName
	}

	namespace n_UMonoWaveTableSynthPreset { // : UObject
		constexpr auto PresetName = 0x28; // FString
		constexpr auto bLockKeyframesToGridBool = 0x38; // char : 1
		constexpr auto LockKeyframesToGrid = 0x3c; // int32_t
		constexpr auto WaveTableResolution = 0x40; // int32_t
		constexpr auto WaveTable = 0x48; // TArray<FRuntimeFloatCurve>
		constexpr auto bNormalizeWaveTables = 0x58; // char : 1
	}

	namespace n_UChildActorComponent { // : USceneComponent
		constexpr auto ChildActorClass = 0x1f8; // AActor*
		constexpr auto ChildActor = 0x200; // AActor*
		constexpr auto ChildActorTemplate = 0x208; // AActor*
	}

	namespace n_UMeshComponent { // : UPrimitiveComponent
		constexpr auto OverrideMaterials = 0x440; // TArray<UMaterialInterface*>
		constexpr auto bEnableMaterialParameterCaching = 0x460; // char : 1
	}

	namespace n_UMOAnimationInstance { // : UAnimInstance
		constexpr auto bVRIsEnabled = 0x2b8; // bool
		constexpr auto bUseFirstPersonState = 0x2b9; // bool
		constexpr auto bIsPlayer = 0x2ba; // bool
		constexpr auto bIsPaperdoll = 0x2bb; // bool
		constexpr auto bIsRagdoll = 0x2bc; // bool
		constexpr auto bUseEtherworldAppearance = 0x2bd; // bool
		constexpr auto OwningCharacter = 0x2c0; // AMOCharacter*
		constexpr auto OwningSkeletalComponent = 0x2c8; // USkeletalMeshComponent*
		constexpr auto OwningMovementComponent = 0x2d0; // UPawnMovementComponent*
		constexpr auto MountParentAnimationInstance = 0x2d8; // UMOAnimationInstance*
		constexpr auto MountParentSkeletalMeshComponent = 0x2e0; // USkeletalMeshComponent*
		constexpr auto MountParentActor = 0x2e8; // AActor*
		constexpr auto bUseMountedAnimations = 0x2f0; // bool
		constexpr auto bSyncWithMountParentAnimations = 0x2f1; // bool
		constexpr auto bTickHighDetailAnimation = 0x2f2; // bool
		constexpr auto bTickHighDetailAnimation_BodyPhysics = 0x2f3; // bool
		constexpr auto bTickHighDetailAnimation_AnimPostProcess = 0x2f4; // bool
		constexpr auto CharacterScale = 0x2f8; // float
		constexpr auto LookAtWorldPosition = 0x2fc; // FVector
		constexpr auto LookAtRotatorWS = 0x308; // FRotator
		constexpr auto LookAtOffsetCS = 0x314; // FRotator
		constexpr auto bEnableLookAt = 0x320; // bool
		constexpr auto LookAtMaxAngle = 0x324; // float
		constexpr auto LookAtIgnoreAngle = 0x328; // float
		constexpr auto HeadLookAtBaseRotation = 0x32c; // FRotator
		constexpr auto HeadLookAtMinMaxTurnSpeed = 0x338; // FVector2D
		constexpr auto MeshAutoUnlockTimer = 0x340; // FTimerHandle
		constexpr auto bMeshIsLockedInPlace = 0x348; // bool
		constexpr auto RootBoneLockedTransform = 0x350; // FTransform
		constexpr auto ViewRotationWorldSpace = 0x380; // FRotator
		constexpr auto ViewRotationMeshSpace = 0x38c; // FRotator
		constexpr auto bViewLockedByMovementSequence = 0x398; // bool
		constexpr auto bMovementSequenceActive = 0x399; // bool
		constexpr auto MovementSequenceAlpha = 0x39c; // float
		constexpr auto MovementSequenceAlphaInverse = 0x3a0; // float
		constexpr auto MovementMode = 0x3a4; // EMovementMode
		constexpr auto MovementPace = 0x3a5; // EMovementPace
		constexpr auto bWalking = 0x3a6; // bool
		constexpr auto bRunning = 0x3a7; // bool
		constexpr auto bSprinting = 0x3a8; // bool
		constexpr auto bMirrorCharacter = 0x3a9; // bool
		constexpr auto bIsGrounded = 0x3aa; // bool
		constexpr auto bIsFalling = 0x3ab; // bool
		constexpr auto bIsCrouching = 0x3ac; // bool
		constexpr auto bIsSwimming = 0x3ad; // bool
		constexpr auto bIsFlying = 0x3ae; // bool
		constexpr auto bWasMovingLastUpdate = 0x3af; // bool
		constexpr auto bIsMoving = 0x3b0; // bool
		constexpr auto bIsTurningInPlace = 0x3b1; // bool
		constexpr auto bIsMovingHorizontally = 0x3b2; // bool
		constexpr auto bStoppedMovingThisFrame = 0x3b3; // bool
		constexpr auto bStartedMovingThisFrame = 0x3b4; // bool
		constexpr auto bSuddenlyChangedMoveDirection = 0x3b5; // bool
		constexpr auto bUseHorizontalMovementAnimation = 0x3b6; // bool
		constexpr auto bPlayJumpAnimation = 0x3b7; // bool
		constexpr auto PreviousCharacterVelocity = 0x3b8; // FVector
		constexpr auto CharacterVelocity = 0x3c4; // FVector
		constexpr auto HorizontalVelocity = 0x3d0; // FVector
		constexpr auto MovementDirectionYaw = 0x3dc; // float
		constexpr auto MovementDirectionYawForStrafer = 0x3e0; // float
		constexpr auto MovementDirectionForwardFacingYaw = 0x3e4; // float
		constexpr auto MovementSpeedAbs = 0x3e8; // float
		constexpr auto MovementSpeedAbsHorizontal = 0x3ec; // float
		constexpr auto MovementSpeedSmoothingInterpSpeed = 0x3f0; // float
		constexpr auto MovementSpeedAbs_Smoothed = 0x3f4; // float
		constexpr auto bIsStrafing = 0x3f8; // bool
		constexpr auto bIsStrafingRight = 0x3f9; // bool
		constexpr auto bMeshShouldOrientTowardsMovementDirection = 0x3fa; // bool
		constexpr auto MeshDefaultOrientation_ActorSpace = 0x3fc; // FRotator
		constexpr auto PreviousMeshOrientation_WorldSpace = 0x408; // FRotator
		constexpr auto MeshOrientation_WorldSpace = 0x414; // FRotator
		constexpr auto MeshAngularVelocity_WorldSpace = 0x420; // FRotator
		constexpr auto MeshAngularVelocity_ComponentSpace = 0x42c; // FRotator
		constexpr auto MeshLastStationaryOrientation_WorldSpace = 0x438; // FRotator
		constexpr auto AngularVelocityYaw_Smoothed = 0x444; // float
		constexpr auto MeshRealignTargetAngle = 0x448; // float
		constexpr auto AimOffsetPitch = 0x44c; // float
		constexpr auto AimOffsetYaw = 0x450; // float
		constexpr auto AimOffsetYaw_Limit = 0x454; // float
		constexpr auto AimOffsetRoll = 0x458; // float
		constexpr auto bAlive = 0x45c; // bool
		constexpr auto bIsInCombat = 0x45d; // bool
		constexpr auto bCombatIsIdle = 0x45e; // bool
		constexpr auto bCombatCharging = 0x45f; // bool
		constexpr auto bCombatReleasing = 0x460; // bool
		constexpr auto bCombatBlocking = 0x461; // bool
		constexpr auto bCombatPushing = 0x462; // bool
		constexpr auto bCastingMagic = 0x463; // bool
		constexpr auto bAllowCorrectingPelvisTranslationDuringCombatRelease = 0x464; // bool
		constexpr auto bCorrectPelvisTranslationDuringCombatRelease = 0x465; // bool
		constexpr auto bInMercyMode = 0x466; // bool
		constexpr auto bRecoverFromMercyMode = 0x467; // bool
		constexpr auto AnimationRandomStream = 0x468; // FRandomStream
		constexpr auto BodyProportionsBaseSequence = 0x470; // UAnimSequenceBase*
		constexpr auto BodyProportionsPoseAsset = 0x478; // UPoseAsset*
		constexpr auto NeutralIdleVariations = 0x480; // UMODataAssetAnimationRandomSet*
		constexpr auto MountedIdleVariations = 0x488; // UMODataAssetAnimationRandomSet*
		constexpr auto IdleVariationSeed = 0x490; // int32_t
		constexpr auto Neutral_WalkBaseSpeed = 0x494; // float
		constexpr auto Neutral_RunBaseSpeed = 0x498; // float
		constexpr auto Neutral_SprintBaseSpeed = 0x49c; // float
		constexpr auto Neutral_WalkBlendspace = 0x4a0; // UBlendSpaceBase*
		constexpr auto Neutral_RunBlendspace = 0x4a8; // UBlendSpaceBase*
		constexpr auto Neutral_Sprint = 0x4b0; // UAnimSequenceBase*
		constexpr auto CombatAnimSequence_WalkBlendspace = 0x4b8; // UBlendSpaceBase*
		constexpr auto CombatAnimSequence_RunBlendspace = 0x4c0; // UBlendSpaceBase*
		constexpr auto CombatAnimSequence_Sprint = 0x4c8; // UAnimSequenceBase*
		constexpr auto CombatAnimSequence_MercyModeIdle = 0x4d0; // UAnimSequenceBase*
		constexpr auto CombatAnimSequence_MercyModeEnter = 0x4d8; // UAnimSequenceBase*
		constexpr auto CombatAnimSequence_MercyModeLeave = 0x4e0; // UAnimSequenceBase*
		constexpr auto CombatAnimSequence_MercyModeWalk = 0x4e8; // UAnimSequenceBase*
		constexpr auto CombatAnimSequence_Idle = 0x4f0; // UAnimSequenceBase*
		constexpr auto CombatAnimSequence_Equip = 0x4f8; // UAnimSequenceBase*
		constexpr auto CombatAnimSequence_Unequip = 0x500; // UAnimSequenceBase*
		constexpr auto CombatAnimSequence_AimOffset = 0x508; // UAimOffsetBlendSpace*
		constexpr auto CombatAnimSequence_TakeHitBlendspace = 0x510; // UBlendSpaceBase*
		constexpr auto bPlayTakeHit = 0x518; // bool
		constexpr auto TakeHitDirectionYaw = 0x51c; // float
		constexpr auto TakeHitDirectionPitch = 0x520; // float
		constexpr auto RootBoneOffsetRotation = 0x524; // FRotator
	}

	namespace n_UMaterialExpressionTruncate { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UParticleModuleLocationPrimitiveBase { // : UParticleModuleLocationBase
		constexpr auto Positive_X = 0x30; // char : 1
		constexpr auto Positive_Y = 0x30; // char : 1
		constexpr auto Positive_Z = 0x30; // char : 1
		constexpr auto Negative_X = 0x30; // char : 1
		constexpr auto Negative_Y = 0x30; // char : 1
		constexpr auto Negative_Z = 0x30; // char : 1
		constexpr auto SurfaceOnly = 0x30; // char : 1
		constexpr auto Velocity = 0x30; // char : 1
		constexpr auto VelocityScale = 0x38; // FRawDistributionFloat
		constexpr auto StartLocation = 0x68; // FRawDistributionVector
	}

	namespace n_UMODataAssetAnimationBase { // : UPrimaryDataAsset
		constexpr auto AnimationInfo = 0x30; // FMOAnimationInfo
		constexpr auto bDuringCombat = 0x98; // bool
		constexpr auto bOutSideOfCombat = 0x99; // bool
	}

	namespace n_UMaterialExpressionArctangentFast { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_USequenceCameraShake { // : UCameraShakeBase
		constexpr auto Sequence = 0x98; // UCameraAnimationSequence*
		constexpr auto PlayRate = 0xa0; // float
		constexpr auto Scale = 0xa4; // float
		constexpr auto BlendInTime = 0xa8; // float
		constexpr auto BlendOutTime = 0xac; // float
		constexpr auto RandomSegmentDuration = 0xb0; // float
		constexpr auto bRandomSegment = 0xb4; // bool
		constexpr auto Player = 0xb8; // USequenceCameraShakeSequencePlayer*
		constexpr auto CameraStandIn = 0xc0; // USequenceCameraShakeCameraStandIn*
	}

	namespace n_ULandscapeInfo { // : UObject
		constexpr auto LandscapeActor = 0x28; // LazyObjectProperty
		constexpr auto LandscapeGuid = 0x44; // FGuid
		constexpr auto ComponentSizeQuads = 0x54; // int32_t
		constexpr auto SubsectionSizeQuads = 0x58; // int32_t
		constexpr auto ComponentNumSubsections = 0x5c; // int32_t
		constexpr auto DrawScale = 0x60; // FVector
		constexpr auto Proxies = 0x110; // TArray<ALandscapeStreamingProxy*>
	}

	namespace n_USoundNodeWavePlayer { // : USoundNodeAssetReferencer
		constexpr auto SoundWaveAssetPtr = 0x48; // TSoftObjectPtr<USoundWave>
		constexpr auto SoundWave = 0x70; // USoundWave*
		constexpr auto bLooping = 0x80; // char : 1
	}

	namespace n_UBoundsCopyComponent { // : UActorComponent
		constexpr auto BoundsSourceActor = 0xb0; // TSoftObjectPtr<AActor>
		constexpr auto bUseCollidingComponentsForSourceBounds = 0xd8; // bool
		constexpr auto bKeepOwnBoundsScale = 0xd9; // bool
		constexpr auto bUseCollidingComponentsForOwnBounds = 0xda; // bool
		constexpr auto PostTransform = 0xe0; // FTransform
		constexpr auto bCopyXBounds = 0x110; // bool
		constexpr auto bCopyYBounds = 0x111; // bool
		constexpr auto bCopyZBounds = 0x112; // bool
	}

	namespace n_UCameraAnimInst { // : UObject
		constexpr auto CamAnim = 0x28; // UCameraAnim*
		constexpr auto InterpGroupInst = 0x30; // UInterpGroupInst*
		constexpr auto PlayRate = 0x50; // float
		constexpr auto MoveTrack = 0x68; // UInterpTrackMove*
		constexpr auto MoveInst = 0x70; // UInterpTrackInstMove*
		constexpr auto PlaySpace = 0x78; // ECameraShakePlaySpace
	}

	namespace n_UAppleImageUtilsBaseAsyncTaskBlueprintProxy { // : UObject
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
		constexpr auto ConversionResult = 0x60; // FAppleImageUtilsImageConversionResult
	}

	namespace n_UNiagaraDataInterfaceVectorCurve { // : UNiagaraDataInterfaceCurveBase
		constexpr auto XCurve = 0x70; // FRichCurve
		constexpr auto YCurve = 0xf0; // FRichCurve
		constexpr auto ZCurve = 0x170; // FRichCurve
	}

	namespace n_UMOGMCharacterButtons { // : UUserWidget
		constexpr auto pMOGMHUD = 0x260; // UMOGMHUD*
	}

	namespace n_UEnvQueryInstanceBlueprintWrapper { // : UObject
		constexpr auto QueryID = 0x30; // int32_t
		constexpr auto ItemType = 0x58; // UEnvQueryItemType*
		constexpr auto OptionIndex = 0x60; // int32_t
		constexpr auto OnQueryFinishedEvent = 0x68; // FMulticastInlineDelegate
	}

	namespace n_ULiveLinkPreset { // : UObject
		constexpr auto Sources = 0x28; // TArray<FLiveLinkSourcePreset>
		constexpr auto Subjects = 0x38; // TArray<FLiveLinkSubjectPreset>
	}

	namespace n_UDistributionVectorParameterBase { // : UDistributionVectorConstant
		constexpr auto ParameterName = 0x50; // FName
		constexpr auto MinInput = 0x58; // FVector
		constexpr auto MaxInput = 0x64; // FVector
		constexpr auto MinOutput = 0x70; // FVector
		constexpr auto MaxOutput = 0x7c; // FVector
		constexpr auto ParamModes = 0x88; // DistributionParamMode [0x3]
	}

	namespace n_UAISenseEvent_Damage { // : UAISenseEvent
		constexpr auto Event = 0x28; // FAIDamageEvent
	}

	namespace n_UTexture { // : UStreamableRenderAsset
		constexpr auto LightingGuid = 0x68; // FGuid
		constexpr auto LODBias = 0x78; // int32_t
		constexpr auto CompressionSettings = 0x7c; // TextureCompressionSettings
		constexpr auto Filter = 0x7d; // TextureFilter
		constexpr auto MipLoadOptions = 0x7e; // ETextureMipLoadOptions
		constexpr auto LODGroup = 0x7f; // TextureGroup
		constexpr auto Downscale = 0x80; // FPerPlatformFloat
		constexpr auto DownscaleOptions = 0x84; // ETextureDownscaleOptions
		constexpr auto SRGB = 0x85; // char : 1
		constexpr auto bNoTiling = 0x85; // char : 1
		constexpr auto VirtualTextureStreaming = 0x85; // char : 1
		constexpr auto CompressionYCoCg = 0x85; // char : 1
		constexpr auto bNotOfflineProcessed = 0x85; // char : 1
		constexpr auto bAsyncResourceReleaseHasBeenStarted = 0x85; // char : 1
		constexpr auto AssetUserData = 0x88; // TArray<UAssetUserData*>
	}

	namespace n_UParticleModuleMeshRotationRateMultiplyLife { // : UParticleModuleRotationRateBase
		constexpr auto LifeMultiplier = 0x30; // FRawDistributionVector
	}

	namespace n_APlayerCameraManager { // : AActor
		constexpr auto PCOwner = 0x220; // APlayerController*
		constexpr auto TransformComponent = 0x228; // USceneComponent*
		constexpr auto DefaultFOV = 0x238; // float
		constexpr auto DefaultOrthoWidth = 0x240; // float
		constexpr auto DefaultAspectRatio = 0x248; // float
		constexpr auto CameraCache = 0x290; // FCameraCacheEntry
		constexpr auto LastFrameCameraCache = 0x880; // FCameraCacheEntry
		constexpr auto ViewTarget = 0xe70; // FTViewTarget
		constexpr auto PendingViewTarget = 0x1470; // FTViewTarget
		constexpr auto CameraCachePrivate = 0x1aa0; // FCameraCacheEntry
		constexpr auto LastFrameCameraCachePrivate = 0x2090; // FCameraCacheEntry
		constexpr auto ModifierList = 0x2680; // TArray<UCameraModifier*>
		constexpr auto DefaultModifiers = 0x2690; // TArray<UCameraModifier*>
		constexpr auto FreeCamDistance = 0x26a0; // float
		constexpr auto FreeCamOffset = 0x26a4; // FVector
		constexpr auto ViewTargetOffset = 0x26b0; // FVector
		constexpr auto OnAudioFadeChangeEvent = 0x26c0; // FMulticastInlineDelegate
		constexpr auto CameraLensEffects = 0x26e0; // TArray<AEmitterCameraLensEffectBase*>
		constexpr auto CachedCameraShakeMod = 0x26f0; // UCameraModifier_CameraShake*
		constexpr auto AnimInstPool = 0x26f8; // UCameraAnimInst* [0x8]
		constexpr auto PostProcessBlendCache = 0x2738; // TArray<FPostProcessSettings>
		constexpr auto ActiveAnims = 0x2758; // TArray<UCameraAnimInst*>
		constexpr auto FreeAnims = 0x2768; // TArray<UCameraAnimInst*>
		constexpr auto AnimCameraActor = 0x2778; // ACameraActor*
		constexpr auto bIsOrthographic = 0x2780; // char : 1
		constexpr auto bDefaultConstrainAspectRatio = 0x2780; // char : 1
		constexpr auto bClientSimulatingViewTarget = 0x2780; // char : 1
		constexpr auto bUseClientSideCameraUpdates = 0x2780; // char : 1
		constexpr auto bGameCameraCutThisFrame = 0x2781; // char : 1
		constexpr auto ViewPitchMin = 0x2784; // float
		constexpr auto ViewPitchMax = 0x2788; // float
		constexpr auto ViewYawMin = 0x278c; // float
		constexpr auto ViewYawMax = 0x2790; // float
		constexpr auto ViewRollMin = 0x2794; // float
		constexpr auto ViewRollMax = 0x2798; // float
		constexpr auto ServerUpdateCameraTimeout = 0x27a0; // float
	}

	namespace n_UEnvQueryTest_Overlap { // : UEnvQueryTest
		constexpr auto OverlapData = 0x1f8; // FEnvOverlapData
	}

	namespace n_APaperTerrainActor { // : AActor
		constexpr auto DummyRoot = 0x220; // USceneComponent*
		constexpr auto SplineComponent = 0x228; // UPaperTerrainSplineComponent*
		constexpr auto RenderComponent = 0x230; // UPaperTerrainComponent*
	}

	namespace n_AControlPointMeshActor { // : AActor
		constexpr auto ControlPointMeshComponent = 0x220; // UControlPointMeshComponent*
	}

	namespace n_USoundSubmixBase { // : UObject
		constexpr auto ChildSubmixes = 0x28; // TArray<USoundSubmixBase*>
	}

	namespace n_UGizmoUniformScaleParameterSource { // : UGizmoBaseVec2ParameterSource
		constexpr auto AxisSource = 0x48; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0x58; // TScriptInterface<IGizmoTransformSource>
		constexpr auto ScaleMultiplier = 0x68; // float
		constexpr auto Parameter = 0x6c; // FVector2D
		constexpr auto LastChange = 0x74; // FGizmoVec2ParameterChange
		constexpr auto CurScaleOrigin = 0x84; // FVector
		constexpr auto CurScaleNormal = 0x90; // FVector
		constexpr auto CurScaleAxisX = 0x9c; // FVector
		constexpr auto CurScaleAxisY = 0xa8; // FVector
		constexpr auto InitialTransform = 0xc0; // FTransform
	}

	namespace n_AAIController { // : AController
		constexpr auto bStartAILogicOnPossess = 0x2d0; // char : 1
		constexpr auto bStopAILogicOnUnposses = 0x2d0; // char : 1
		constexpr auto bLOSflag = 0x2d0; // char : 1
		constexpr auto bSkipExtraLOSChecks = 0x2d0; // char : 1
		constexpr auto bAllowStrafe = 0x2d0; // char : 1
		constexpr auto bWantsPlayerState = 0x2d0; // char : 1
		constexpr auto bSetControlRotationFromPawnOrientation = 0x2d0; // char : 1
		constexpr auto PathFollowingComponent = 0x2d8; // UPathFollowingComponent*
		constexpr auto BrainComponent = 0x2e0; // UBrainComponent*
		constexpr auto PerceptionComponent = 0x2e8; // UAIPerceptionComponent*
		constexpr auto ActionsComp = 0x2f0; // UPawnActionsComponent*
		constexpr auto Blackboard = 0x2f8; // UBlackboardComponent*
		constexpr auto CachedGameplayTasksComponent = 0x300; // UGameplayTasksComponent*
		constexpr auto DefaultNavigationFilterClass = 0x308; // UNavigationQueryFilter*
		constexpr auto ReceiveMoveCompleted = 0x310; // FMulticastInlineDelegate
	}

	namespace n_UCableComponent { // : UMeshComponent
		constexpr auto bAttachStart = 0x468; // bool
		constexpr auto bAttachEnd = 0x469; // bool
		constexpr auto attachEndTo = 0x470; // FComponentReference
		constexpr auto AttachEndToSocketName = 0x498; // FName
		constexpr auto EndLocation = 0x4a0; // FVector
		constexpr auto CableLength = 0x4ac; // float
		constexpr auto NumSegments = 0x4b0; // int32_t
		constexpr auto SubstepTime = 0x4b4; // float
		constexpr auto SolverIterations = 0x4b8; // int32_t
		constexpr auto bEnableStiffness = 0x4bc; // bool
		constexpr auto bUseSubstepping = 0x4bd; // bool
		constexpr auto bSkipCableUpdateWhenNotVisible = 0x4be; // bool
		constexpr auto bSkipCableUpdateWhenNotOwnerRecentlyRendered = 0x4bf; // bool
		constexpr auto bEnableCollision = 0x4c0; // bool
		constexpr auto CollisionFriction = 0x4c4; // float
		constexpr auto CableForce = 0x4c8; // FVector
		constexpr auto CableGravityScale = 0x4d4; // float
		constexpr auto CableWidth = 0x4d8; // float
		constexpr auto NumSides = 0x4dc; // int32_t
		constexpr auto TileMaterial = 0x4e0; // float
	}

	namespace n_UMOSkillsTreeSelectedSkill { // : UMOWidgetBlueprint
		constexpr auto pMOButtonSmall_DeletePoint = 0x260; // UMOButton*
		constexpr auto pMOButton_SkillLockstate = 0x268; // UMOButtonAttributeToggle*
		constexpr auto pTextBlockSkillName = 0x270; // UTextBlock*
		constexpr auto pTextBlockSkillType = 0x278; // UTextBlock*
		constexpr auto pTextBlockSkillActiveLevel = 0x280; // UTextBlock*
		constexpr auto pTextBlockSkillTrainedLevel = 0x288; // UTextBlock*
		constexpr auto pTextBlockSkillCladeGiftsName = 0x290; // UTextBlock*
		constexpr auto pTextBlockSkillCladeGiftsLevel = 0x298; // UTextBlock*
		constexpr auto pTextBlockSkillDescription = 0x2a0; // UTextBlock*
		constexpr auto pTextBlockSkillLimited1_Name = 0x2a8; // UTextBlock*
		constexpr auto pTextBlockSkillLimited1_Type = 0x2b0; // UTextBlock*
		constexpr auto pTextBlockSkillLimited2_Name = 0x2b8; // UTextBlock*
		constexpr auto pTextBlockSkillLimited2_Type = 0x2c0; // UTextBlock*
		constexpr auto pTextBlockAttributeNameA = 0x2c8; // UTextBlock*
		constexpr auto pTextBlockAttributeNumberA = 0x2d0; // UTextBlock*
		constexpr auto pTextBlockAttributeNameB = 0x2d8; // UTextBlock*
		constexpr auto pTextBlockAttributeNumberB = 0x2e0; // UTextBlock*
		constexpr auto pTextBlockSkillExperienceLevel = 0x2e8; // UTextBlock*
		constexpr auto pTextBlockLearnOnUse = 0x2f0; // UTextBlock*
		constexpr auto pScrollBoxDescription = 0x2f8; // UMOScrollBox*
		constexpr auto pMOButtonSkillWidget = 0x300; // UMOButtonSkillWidget*
		constexpr auto pWB_ProgressBar_EffectiveSkill = 0x308; // UMOUserWidgetProgressBar*
		constexpr auto pWB_ProgressBar_Experience = 0x310; // UMOUserWidgetProgressBar*
	}

	namespace n_UChildConnection { // : UNetConnection
		constexpr auto Parent = 0x1af0; // UNetConnection*
	}

	namespace n_UBTTask_MoveDirectlyToward { // : UBTTask_MoveTo
		constexpr auto bDisablePathUpdateOnGoalLocationChange = 0xb0; // char : 1
		constexpr auto bProjectVectorGoalToNavigation = 0xb0; // char : 1
		constexpr auto bUpdatedDeprecatedProperties = 0xb0; // char : 1
	}

	namespace n_USourceEffectEQPreset { // : USoundEffectSourcePreset
		constexpr auto Settings = 0xa0; // FSourceEffectEQSettings
	}

	namespace n_UAssetExportTask { // : UObject
		constexpr auto Object = 0x28; // UObject*
		constexpr auto Exporter = 0x30; // UExporter*
		constexpr auto Filename = 0x38; // FString
		constexpr auto bSelected = 0x48; // bool
		constexpr auto bReplaceIdentical = 0x49; // bool
		constexpr auto bPrompt = 0x4a; // bool
		constexpr auto bAutomated = 0x4b; // bool
		constexpr auto bUseFileArchive = 0x4c; // bool
		constexpr auto bWriteEmptyFiles = 0x4d; // bool
		constexpr auto IgnoreObjectList = 0x50; // TArray<UObject*>
		constexpr auto Options = 0x60; // UObject*
		constexpr auto Errors = 0x68; // TArray<FString>
	}

	namespace n_ULoudnessNRT { // : UAudioSynesthesiaNRT
		constexpr auto Settings = 0x78; // ULoudnessNRTSettings*
	}

	namespace n_UMaterialExpressionTangentOutput { // : UMaterialExpressionCustomOutput
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UEnvQueryTest_PathfindingBatch { // : UEnvQueryTest_Pathfinding
		constexpr auto ScanRangeMultiplier = 0x280; // FAIDataProviderFloatValue
	}

	namespace n_UMovieSceneColorTrack { // : UMovieScenePropertyTrack
		constexpr auto bIsSlateColor = 0xb0; // bool
	}

	namespace n_UDatasmithImportOptions { // : UDatasmithOptionsBase
		constexpr auto SearchPackagePolicy = 0x28; // EDatasmithImportSearchPackagePolicy
		constexpr auto MaterialConflictPolicy = 0x29; // EDatasmithImportAssetConflictPolicy
		constexpr auto TextureConflictPolicy = 0x2a; // EDatasmithImportAssetConflictPolicy
		constexpr auto StaticMeshActorImportPolicy = 0x2b; // EDatasmithImportActorPolicy
		constexpr auto LightImportPolicy = 0x2c; // EDatasmithImportActorPolicy
		constexpr auto CameraImportPolicy = 0x2d; // EDatasmithImportActorPolicy
		constexpr auto OtherActorImportPolicy = 0x2e; // EDatasmithImportActorPolicy
		constexpr auto MaterialQuality = 0x2f; // EDatasmithImportMaterialQuality
		constexpr auto BaseOptions = 0x34; // FDatasmithImportBaseOptions
		constexpr auto ReimportOptions = 0x48; // FDatasmithReimportOptions
		constexpr auto Filename = 0x50; // FString
		constexpr auto FilePath = 0x60; // FString
	}

	namespace n_UMODataAssetArrowDefinitions { // : UPrimaryDataAsset
		constexpr auto pSharedData = 0x30; // UMODataAssetEquipmentShared*
		constexpr auto pFallBackHead = 0x38; // UMODataAssetArrowHead*
		constexpr auto pFallBackBase = 0x40; // UMODataAssetArrowBase*
		constexpr auto vArrowBases = 0x48; // TArray<UMODataAssetArrowBase*>
		constexpr auto vArrowHeads = 0x58; // TArray<UMODataAssetArrowHead*>
	}

	namespace n_AMortalOnline2HUD { // : AHUD
		constexpr auto HUDWidgetClassSoftPtr = 0x310; // TSoftClassPtr<UObject>
		constexpr auto pHUDWidget = 0x338; // UMOHUD*
		constexpr auto bUpdateArcheryCrosshair = 0x340; // bool
		constexpr auto vItemGUIDsToReload = 0x348; // TArray<FString>
		constexpr auto vGuidBagsToReload = 0x358; // TArray<FString>
		constexpr auto vDepositIDsToReload = 0x368; // TArray<int32_t>
		constexpr auto MemberTimerHandle_ReloadCachedItemGuids = 0x378; // FTimerHandle
		constexpr auto spDataTableContentInfoGlobalUI = 0x380; // TSoftObjectPtr<UDataTable>
		constexpr auto pSplitStack = 0x3d0; // UMOSplitStack*
		constexpr auto pStaticTalker = 0x3d8; // AMOAvatarStaticMesh*
		constexpr auto pAudioComponent = 0x3e0; // UAudioComponent*
		constexpr auto pDestroyItemSound = 0x400; // USoundCue*
		constexpr auto pClickOnItemToPicupSound = 0x408; // USoundCue*
		constexpr auto pReleaseItemSound = 0x410; // USoundCue*
	}

	namespace n_UVideoCaptureProtocol { // : UFrameGrabberProtocol
		constexpr auto bUseCompression = 0x68; // bool
		constexpr auto CompressionQuality = 0x6c; // float
	}

	namespace n_UDistributionVectorConstant { // : UDistributionVector
		constexpr auto Constant = 0x38; // FVector
		constexpr auto bLockAxes = 0x44; // char : 1
		constexpr auto LockedAxes = 0x48; // EDistributionVectorLockFlags
	}

	namespace n_UClothPhysicalMeshDataNv_Legacy { // : UClothPhysicalMeshDataBase_Legacy
		constexpr auto MaxDistances = 0xe0; // TArray<float>
		constexpr auto BackstopDistances = 0xf0; // TArray<float>
		constexpr auto BackstopRadiuses = 0x100; // TArray<float>
		constexpr auto AnimDriveMultipliers = 0x110; // TArray<float>
	}

	namespace n_USoundGroups { // : UObject
		constexpr auto SoundGroupProfiles = 0x28; // TArray<FSoundGroup>
	}

	namespace n_UMOEditableTextBoxNumbers { // : UMOEditableTextBox
		constexpr auto iCurrentValue = 0xa80; // int32_t
		constexpr auto iMinValue = 0xa84; // int32_t
		constexpr auto iDefaultValue = 0xa88; // int32_t
		constexpr auto iMaxValue = 0xa8c; // int32_t
	}

	namespace n_ACullDistanceVolume { // : AVolume
		constexpr auto CullDistances = 0x258; // TArray<FCullDistanceSizePair>
		constexpr auto bEnabled = 0x268; // char : 1
	}

	namespace n_ALandscapeStreamingProxy { // : ALandscapeProxy
		constexpr auto LandscapeActor = 0x598; // LazyObjectProperty
	}

	namespace n_UMaterialExpressionMax { // : UMaterialExpression
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_UFieldSystemMetaDataIteration { // : UFieldSystemMetaData
		constexpr auto Iterations = 0xb0; // int32_t
	}

	namespace n_UMasterAudioSubmixCaptureProtocol { // : UMovieSceneAudioCaptureProtocolBase
		constexpr auto Filename = 0x58; // FString
	}

	namespace n_UMOSkillsTree { // : UMOWidgetBlueprint
		constexpr auto bShowUnlearned = 0x260; // bool
		constexpr auto bShowPrimary = 0x261; // bool
		constexpr auto bShowSecondary = 0x262; // bool
		constexpr auto pEditableTextBoxFilter = 0x268; // UMOEditableTextBox*
		constexpr auto pSkillTreeSelectedSkill = 0x270; // UMOSkillsTreeSelectedSkill*
		constexpr auto pSkillTreeSkillIcons = 0x278; // UMOSkillsTreeSkillIcons*
		constexpr auto pSkillTreeList = 0x280; // UMOSkillsTreeList*
		constexpr auto bCraftingSkills = 0x288; // bool
	}

	namespace n_UBoxFalloff { // : UFieldNodeFloat
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto MinRange = 0xb4; // float
		constexpr auto MaxRange = 0xb8; // float
		constexpr auto Default = 0xbc; // float
		constexpr auto Transform = 0xc0; // FTransform
		constexpr auto Falloff = 0xf0; // EFieldFalloffType
	}

	namespace n_UDatasmithSpotLightComponentTemplate { // : UDatasmithObjectTemplate
		constexpr auto InnerConeAngle = 0x30; // float
		constexpr auto OuterConeAngle = 0x34; // float
	}

	namespace n_UMovieSceneObjectPropertySection { // : UMovieSceneSection
		constexpr auto ObjectChannel = 0xe8; // FMovieSceneObjectPathChannel
	}

	namespace n_UBTDecorator_Cooldown { // : UBTDecorator
		constexpr auto CoolDownTime = 0x68; // float
	}

	namespace n_UMOWidgetBlueprintChatBubble { // : UMOWidgetBlueprint
		constexpr auto pTextBlock = 0x260; // UTextBlock*
	}

	namespace n_UMODataAssetEquipmentShared { // : UPrimaryDataAsset
		constexpr auto bCanUseOnMount = 0x30; // bool
		constexpr auto pEquipmentPhysMaterial = 0x38; // UMOPhysicalMaterial*
		constexpr auto pAORM = 0x40; // TSoftObjectPtr<UTexture>
		constexpr auto pColor = 0x68; // TSoftObjectPtr<UTexture>
		constexpr auto pNormal = 0x90; // TSoftObjectPtr<UTexture>
		constexpr auto pResourceAORM = 0xb8; // TSoftObjectPtr<UTexture>
		constexpr auto pResourceColor = 0xe0; // TSoftObjectPtr<UTexture>
		constexpr auto pResourceNormal = 0x108; // TSoftObjectPtr<UTexture>
		constexpr auto pResourceMask = 0x130; // TSoftObjectPtr<UTexture>
		constexpr auto fMaskMultiply = 0x158; // float
		constexpr auto fMaskSubtract = 0x15c; // float
		constexpr auto fResourceTiling = 0x160; // float
		constexpr auto fResourceTilingU = 0x164; // float
		constexpr auto fResourceTilingV = 0x168; // float
		constexpr auto pDecorationAORM = 0x170; // TSoftObjectPtr<UTexture>
		constexpr auto pDecorationColor = 0x198; // TSoftObjectPtr<UTexture>
		constexpr auto pDecorationNormal = 0x1c0; // TSoftObjectPtr<UTexture>
		constexpr auto fDecorationTilingU = 0x1e8; // float
		constexpr auto fDecorationTilingV = 0x1ec; // float
		constexpr auto pFurMask = 0x1f0; // TSoftObjectPtr<UTexture>
		constexpr auto ResourceMaterials = 0x218; // FMODataAssetEquipmentResourceMaterials
		constexpr auto bAssetsArePreloaded = 0x2f0; // bool
		constexpr auto PreloadedTextures = 0x2f8; // TArray<UTexture*>
	}

	namespace n_URendererOverrideSettings { // : UDeveloperSettings
		constexpr auto bSupportAllShaderPermutations = 0x38; // char : 1
		constexpr auto bForceRecomputeTangents = 0x38; // char : 1
	}

	namespace n_UConsoleSettings { // : UObject
		constexpr auto MaxScrollbackSize = 0x28; // int32_t
		constexpr auto ManualAutoCompleteList = 0x30; // TArray<FAutoCompleteCommand>
		constexpr auto AutoCompleteMapPaths = 0x40; // TArray<FString>
		constexpr auto BackgroundOpacityPercentage = 0x50; // float
		constexpr auto bOrderTopToBottom = 0x54; // bool
		constexpr auto bDisplayHelpInAutoComplete = 0x55; // bool
		constexpr auto InputColor = 0x58; // FColor
		constexpr auto HistoryColor = 0x5c; // FColor
		constexpr auto AutoCompleteCommandColor = 0x60; // FColor
		constexpr auto AutoCompleteCVarColor = 0x64; // FColor
		constexpr auto AutoCompleteFadedColor = 0x68; // FColor
	}

	namespace n_UMOEquipmentRangedComponent { // : UMOEquipmentComponent
		constexpr auto pBaseMesh = 0xf0; // USkeletalMeshComponent*
		constexpr auto pQuiverArmorComp = 0xf8; // UStaticMeshComponent*
		constexpr auto pDataAssetBow = 0x100; // UMODataAssetBowBase*
		constexpr auto sEquipmentData = 0x108; // FMOBowData
		constexpr auto pBaseMID = 0x130; // UMaterialInstanceDynamic*
		constexpr auto pCompositeMID = 0x138; // UMaterialInstanceDynamic*
		constexpr auto pQuiverMID = 0x140; // UMaterialInstanceDynamic*
		constexpr auto bIsOnBack = 0x148; // bool
		constexpr auto sArrowDataString = 0x150; // FString
		constexpr auto pVisualArrow = 0x160; // AMOArrowActor*
	}

	namespace n_ASpotLight { // : ALight
		constexpr auto SpotLightComponent = 0x230; // USpotLightComponent*
	}

	namespace n_UMaterialInterface { // : UObject
		constexpr auto SubsurfaceProfile = 0x38; // USubsurfaceProfile*
		constexpr auto LightmassSettings = 0x50; // FLightmassMaterialInterfaceSettings
		constexpr auto TextureStreamingData = 0x60; // TArray<FMaterialTextureInfo>
		constexpr auto AssetUserData = 0x70; // TArray<UAssetUserData*>
	}

	namespace n_UPaperTerrainComponent { // : UPrimitiveComponent
		constexpr auto TerrainMaterial = 0x440; // UPaperTerrainMaterial*
		constexpr auto bClosedSpline = 0x448; // bool
		constexpr auto bFilledSpline = 0x449; // bool
		constexpr auto AssociatedSpline = 0x450; // UPaperTerrainSplineComponent*
		constexpr auto RandomSeed = 0x458; // int32_t
		constexpr auto SegmentOverlapAmount = 0x45c; // float
		constexpr auto TerrainColor = 0x460; // FLinearColor
		constexpr auto ReparamStepsPerSegment = 0x470; // int32_t
		constexpr auto SpriteCollisionDomain = 0x474; // ESpriteCollisionMode
		constexpr auto CollisionThickness = 0x478; // float
		constexpr auto CachedBodySetup = 0x480; // UBodySetup*
	}

	namespace n_UMOCharCreationColorEntry { // : UMOUserWidget
		constexpr auto pMOButton = 0x2c8; // UButton*
		constexpr auto pImage = 0x2d0; // UImage*
		constexpr auto pImage_Selected = 0x2d8; // UImage*
		constexpr auto pBaseMaterial = 0x2e0; // UMaterialInterface*
		constexpr auto sParamName = 0x2e8; // FName
		constexpr auto iColorIndex = 0x2f0; // int32_t
		constexpr auto bSelected = 0x2f4; // bool
		constexpr auto currentColor = 0x2f8; // FColor
		constexpr auto eMyColorEntryType = 0x2fc; // EColorEntryType
		constexpr auto pAppearancePanel = 0x300; // UMOCharCreationAppearancePanel*
	}

	namespace n_UMaterialExpressionRayTracingQualitySwitch { // : UMaterialExpression
		constexpr auto Normal = 0x40; // FExpressionInput
		constexpr auto RayTraced = 0x54; // FExpressionInput
	}

	namespace n_UMaterialExpressionSquareRoot { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UQuitMatchCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_ABP_MOWeather_C { // : AActor
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto DefaultSceneRoot = 0x228; // USceneComponent*
		constexpr auto MoonColor = 0x230; // FLinearColor
		constexpr auto Horizon color curve = 0x240; // UCurveLinearColor*
		constexpr auto Zenith color curve = 0x248; // UCurveLinearColor*
		constexpr auto MoonYRot = 0x250; // float
		constexpr auto MoonXRot = 0x254; // float
		constexpr auto MoonZRot = 0x258; // float
		constexpr auto SkyBrightness = 0x25c; // float
		constexpr auto SkyContrast = 0x260; // float
		constexpr auto SkySaturation = 0x264; // float
		constexpr auto StarsBrightness = 0x268; // float
		constexpr auto SunBloomStrength = 0x26c; // float
		constexpr auto SunFalloff = 0x270; // float
		constexpr auto SunRadius = 0x274; // float
		constexpr auto MoonFalloff = 0x278; // float
		constexpr auto MoonRadius = 0x27c; // float
		constexpr auto MoonBloomStrength = 0x280; // float
		constexpr auto MoonBloomFalloff = 0x284; // float
		constexpr auto MoonRot = 0x288; // float
		constexpr auto MoonTime = 0x28c; // float
		constexpr auto MoonContrast = 0x290; // float
		constexpr auto Coverage = 0x294; // float
		constexpr auto GeneralDensity = 0x298; // float
		constexpr auto CloudWind = 0x29c; // FLinearColor
		constexpr auto ShadowSize = 0x2ac; // float
		constexpr auto LightIntensity = 0x2b0; // float
		constexpr auto AmbientIntensity = 0x2b4; // float
		constexpr auto WeatherFrequency = 0x2b8; // float
		constexpr auto TimeSpeed = 0x2bc; // int32_t
		constexpr auto WeatherLoop1 = 0x2c0; // float
		constexpr auto WeatherLoop2 = 0x2c4; // float
		constexpr auto WeatherChancePerMonth = 0x2c8; // TArray<int32_t>
		constexpr auto WeatherChanceTemp = 0x2d8; // int32_t
		constexpr auto WeatherChance = 0x2dc; // int32_t
		constexpr auto WeatherTransitionSpeed = 0x2e0; // float
		constexpr auto Wind = 0x2e8; // AWindDirectionalSource*
		constexpr auto SkyLightingIntensity = 0x2f0; // float
		constexpr auto SkySunArea = 0x2f4; // float
		constexpr auto NearDensityMorning = 0x2f8; // float
		constexpr auto NearDensityNight = 0x2fc; // float
		constexpr auto FarDensity = 0x300; // float
		constexpr auto SkyHorizonColor = 0x304; // FLinearColor
		constexpr auto HorizonDensity = 0x314; // float
		constexpr auto SkyZenithColor = 0x318; // FLinearColor
		constexpr auto ZenithDensity = 0x328; // float
		constexpr auto SkyLightIntensity = 0x32c; // float
		constexpr auto SkyLightColor = 0x330; // FLinearColor
		constexpr auto SunColor = 0x340; // FLinearColor
		constexpr auto BloomScale = 0x350; // float
		constexpr auto BloomThreshold = 0x354; // float
		constexpr auto BloomTint = 0x358; // FColor
		constexpr auto VolumetricScattering = 0x35c; // float
		constexpr auto ExFogDensity = 0x360; // float
		constexpr auto FogInsColor = 0x364; // FLinearColor
		constexpr auto MoonBloomScale = 0x374; // float
		constexpr auto MoonBloomThreshold = 0x378; // float
		constexpr auto SunIntensityTarget = 0x37c; // float
		constexpr auto MoonIntensityTarget = 0x380; // float
		constexpr auto FoggyChance = 0x384; // int32_t
		constexpr auto Foggy? = 0x388; // bool
		constexpr auto Windy? = 0x389; // bool
		constexpr auto WindyChange = 0x38c; // int32_t
		constexpr auto SunnyWeather = 0x390; // FSunnyWeatherStructure
		constexpr auto SunnyFoggyWeather = 0x3e8; // FSunnyFoggyWeatherStructure
		constexpr auto PartlyCloudyWeather = 0x440; // FPartlyCloudyWeatherStructure
		constexpr auto PartlyCloudyFoggyWeather = 0x498; // FPartlyCloudyFoggyWeatherStructure
		constexpr auto CloudyWeather = 0x4f0; // FCloudyWeatherStructure
		constexpr auto CloudyFoggyWeather = 0x548; // FCloudyFoggyWeatherStructure
		constexpr auto RainyWeather = 0x5a4; // FRainyWeatherStructure
		constexpr auto RainyFoggyWeather = 0x5fc; // FRainyFoggyWeatherStructureComplicated
		constexpr auto SnowyWeather = 0x654; // FSnowyWeatherStructure
		constexpr auto SnowyFoggyWeather = 0x6ac; // FSnowyFoggyWeatherStructure
		constexpr auto DynamicWeatherSystem? = 0x704; // bool
		constexpr auto CloudWindTarget = 0x708; // FLinearColor
		constexpr auto PastSecond = 0x718; // int32_t
		constexpr auto SecondDiff = 0x71c; // int32_t
		constexpr auto Milliseconds = 0x720; // int32_t
		constexpr auto Seconds = 0x724; // int32_t
		constexpr auto Minutes = 0x728; // int32_t
		constexpr auto Hours = 0x72c; // int32_t
		constexpr auto Days = 0x730; // int32_t
		constexpr auto Months = 0x734; // int32_t
		constexpr auto Years = 0x738; // int32_t
		constexpr auto DynamicTime? = 0x73c; // bool
		constexpr auto StartTimeMinute = 0x740; // int32_t
		constexpr auto StartTimeHour = 0x744; // int32_t
		constexpr auto StartTimeDay = 0x748; // int32_t
		constexpr auto StartTimeMonth = 0x74c; // int32_t
		constexpr auto StartTimeYear = 0x750; // int32_t
		constexpr auto SunriseTemp = 0x754; // int32_t
		constexpr auto SunriseTime = 0x758; // int32_t
		constexpr auto SunsetTemp = 0x75c; // int32_t
		constexpr auto SunsetTime = 0x760; // int32_t
		constexpr auto DayTime = 0x764; // int32_t
		constexpr auto NightTime = 0x768; // int32_t
		constexpr auto WindStrength = 0x76c; // float
		constexpr auto CloudShadowScale = 0x770; // FVector
		constexpr auto CloudShadowMaxDist = 0x77c; // float
		constexpr auto StarsRotator = 0x780; // float
		constexpr auto SunColorCurve = 0x788; // UCurveLinearColor*
		constexpr auto PPRainIntensity = 0x790; // float
		constexpr auto SunHorizonColor = 0x798; // UCurveLinearColor*
		constexpr auto SunIntensity = 0x7a0; // float
		constexpr auto MoonIntensity = 0x7a4; // float
		constexpr auto BloomTarget = 0x7a8; // float
		constexpr auto CloudLightIntensity = 0x7b0; // UCurveFloat*
		constexpr auto WeatherParameters = 0x7b8; // FS_MO2_Weather
		constexpr auto MO2Weather = 0x7d0; // FS_MO2_Weather
	}

	namespace n_UBTTask_RunEQSQuery { // : UBTTask_BlackboardBase
		constexpr auto QueryTemplate = 0x98; // UEnvQuery*
		constexpr auto QueryParams = 0xa0; // TArray<FEnvNamedValue>
		constexpr auto QueryConfig = 0xb0; // TArray<FAIDynamicParam>
		constexpr auto RunMode = 0xc0; // EEnvQueryRunMode
		constexpr auto EQSQueryBlackboardKey = 0xc8; // FBlackboardKeySelector
		constexpr auto bUseBBKey = 0xf0; // bool
		constexpr auto EQSRequest = 0xf8; // FEQSParametrizedQueryExecutionRequest
	}

	namespace n_UDeviceProfile { // : UTextureLODSettings
		constexpr auto DeviceType = 0x38; // FString
		constexpr auto BaseProfileName = 0x48; // FString
		constexpr auto Parent = 0x58; // UObject*
		constexpr auto CVars = 0x88; // TArray<FString>
	}

	namespace n_UWB_MO_LoginHUD_C { // : UMOLoginHUD
		constexpr auto UberGraphFrame = 0x308; // FPointerToUberGraphFrame
		constexpr auto pMOUnsavedChanges = 0x310; // UBP_MO_UnsavedChanges_C*
		constexpr auto Reference-BP_Login_Hud = 0x318; // UObject*
		constexpr auto NewVar_1 = 0x320; // UObject*
	}

	namespace n_UMovieScene3DPathSection { // : UMovieScene3DConstraintSection
		constexpr auto TimingCurve = 0x110; // FMovieSceneFloatChannel
		constexpr auto FrontAxisEnum = 0x1b0; // MovieScene3DPathSection_Axis
		constexpr auto UpAxisEnum = 0x1b1; // MovieScene3DPathSection_Axis
		constexpr auto bFollow = 0x1b4; // char : 1
		constexpr auto bReverse = 0x1b4; // char : 1
		constexpr auto bForceUpright = 0x1b4; // char : 1
	}

	namespace n_UMaterialExpressionIf { // : UMaterialExpression
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto AGreaterThanB = 0x68; // FExpressionInput
		constexpr auto AEqualsB = 0x7c; // FExpressionInput
		constexpr auto ALessThanB = 0x90; // FExpressionInput
		constexpr auto EqualsThreshold = 0xa4; // float
		constexpr auto ConstB = 0xa8; // float
		constexpr auto ConstAEqualsB = 0xac; // float
	}

	namespace n_UMOCharacterEffects { // : UObject
		constexpr auto vFingerBeamParticles = 0x28; // TArray<UNiagaraComponent*>
		constexpr auto vFingerAttachTranslation = 0x38; // TArray<FVector>
		constexpr auto vFingerBoneNames = 0x48; // TArray<FName>
		constexpr auto vFishingSoundRefs = 0x98; // TMap<EFishingSounds, UAudioComponent*>
	}

	namespace n_UMOButtonMedium { // : UMOButton
		constexpr auto CustomStyle = 0x438; // USlateWidgetStyleAsset*
	}

	namespace n_UStaticMesh { // : UStreamableRenderAsset
		constexpr auto MinLOD = 0x80; // FPerPlatformInt
		constexpr auto LpvBiasMultiplier = 0x84; // float
		constexpr auto StaticMaterials = 0x88; // TArray<FStaticMaterial>
		constexpr auto LightmapUVDensity = 0x98; // float
		constexpr auto LightMapResolution = 0x9c; // int32_t
		constexpr auto LightMapCoordinateIndex = 0xa0; // int32_t
		constexpr auto DistanceFieldSelfShadowBias = 0xa4; // float
		constexpr auto BodySetup = 0xa8; // UBodySetup*
		constexpr auto LODForCollision = 0xb0; // int32_t
		constexpr auto bGenerateMeshDistanceField = 0xb4; // char : 1
		constexpr auto bStripComplexCollisionForConsole = 0xb4; // char : 1
		constexpr auto bHasNavigationData = 0xb4; // char : 1
		constexpr auto bSupportUniformlyDistributedSampling = 0xb4; // char : 1
		constexpr auto bSupportPhysicalMaterialMasks = 0xb4; // char : 1
		constexpr auto bIsBuiltAtRuntime = 0xb4; // char : 1
		constexpr auto bAllowCPUAccess = 0xb4; // char : 1
		constexpr auto bSupportGpuUniformlyDistributedSampling = 0xb5; // char : 1
		constexpr auto Sockets = 0xd8; // TArray<UStaticMeshSocket*>
		constexpr auto PositiveBoundsExtension = 0xf8; // FVector
		constexpr auto NegativeBoundsExtension = 0x104; // FVector
		constexpr auto ExtendedBounds = 0x110; // FBoxSphereBounds
		constexpr auto ElementToIgnoreForTexFactor = 0x12c; // int32_t
		constexpr auto AssetUserData = 0x130; // TArray<UAssetUserData*>
		constexpr auto EditableMesh = 0x140; // UObject*
		constexpr auto NavCollision = 0x148; // UNavCollisionBase*
	}

	namespace n_UMOUserWidgetLoadingScreen { // : UMOUserWidget
		constexpr auto Message = 0x2c8; // FString
	}

	namespace n_UAB_CH_Player_Male_Human_Undead_C { // : UMOAnimationInstancePlayerUndead
		constexpr auto UberGraphFrame = 0x6b0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x6b8; // FAnimNode_Root
		constexpr auto AnimGraphNode_SaveCachedPose_5 = 0x6e8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_TransitionResult_44 = 0x840; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_43 = 0x868; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_42 = 0x890; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_41 = 0x8b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_40 = 0x8e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_39 = 0x908; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_38 = 0x930; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_37 = 0x958; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_36 = 0x980; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_35 = 0x9a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_34 = 0x9d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_33 = 0x9f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_32 = 0xa20; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_31 = 0xa48; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_30 = 0xa70; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_29 = 0xa98; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_28 = 0xac0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_27 = 0xae8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_26 = 0xb10; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_25 = 0xb38; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_14 = 0xb60; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_21 = 0xbe0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendListByBool_12 = 0xc10; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_8 = 0xcb0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_13 = 0xd98; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_20 = 0xe18; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_7 = 0xe48; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_19 = 0xf30; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_24 = 0xf60; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_12 = 0xf88; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_18 = 0x1008; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_11 = 0x1038; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_17 = 0x10b8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_23 = 0x10e8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_6 = 0x1110; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_16 = 0x11f8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateResult_15 = 0x1228; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_22 = 0x1258; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_BlendSpaceEvaluator_4 = 0x1280; // FAnimNode_BlendSpaceEvaluator
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive_5 = 0x1370; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_ComponentToLocalSpace_3 = 0x1440; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_3 = 0x1460; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_4 = 0x1480; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_TransitionResult_21 = 0x1588; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_20 = 0x15b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_19 = 0x15d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_18 = 0x1600; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_17 = 0x1628; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_16 = 0x1650; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_15 = 0x1678; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_14 = 0x16a0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_13 = 0x16c8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_5 = 0x16f0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_4 = 0x17d8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_11 = 0x18c0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_14 = 0x1960; // FAnimNode_StateResult
		constexpr auto MOAnimGraphNode_RandomPlayer = 0x1990; // FMOAnimNode_RandomPlayer
		constexpr auto AnimGraphNode_StateResult_13 = 0x1ab0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpaceEvaluator_3 = 0x1ae0; // FAnimNode_BlendSpaceEvaluator
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive_4 = 0x1bd0; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_RotateRootBone = 0x1ca0; // FAnimNode_RotateRootBone
		constexpr auto AnimGraphNode_SequencePlayer_10 = 0x1d40; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_10 = 0x1dc0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_9 = 0x1e60; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_12 = 0x1ee0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_3 = 0x1f10; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_2 = 0x1ff8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_9 = 0x20e0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_11 = 0x2180; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_5 = 0x21b0; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_StateResult_10 = 0x2260; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_4 = 0x2290; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_Slot_2 = 0x2340; // FAnimNode_Slot
		constexpr auto AnimGraphNode_TransitionResult_12 = 0x2388; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_11 = 0x23b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_10 = 0x23d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_9 = 0x2400; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_UseCachedPose_9 = 0x2428; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_9 = 0x2450; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_UseCachedPose_8 = 0x2480; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_8 = 0x24a8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_3 = 0x24d8; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_Inertialization = 0x2588; // FAnimNode_Inertialization
		constexpr auto AnimGraphNode_TransitionResult_8 = 0x25f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_7 = 0x2620; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_6 = 0x2648; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_5 = 0x2670; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_4 = 0x2698; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_3 = 0x26c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequenceEvaluator_3 = 0x26e8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_2 = 0x2738; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByBool_8 = 0x2788; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_7 = 0x2828; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_8 = 0x2858; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_7 = 0x28d8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_7 = 0x2978; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_6 = 0x29f8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_6 = 0x2a28; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_6 = 0x2aa8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0x2b48; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_5 = 0x2bc8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x2bf8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_5 = 0x2c78; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x2d18; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_4 = 0x2d98; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x2dc8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_4 = 0x2e48; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer = 0x2ee8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_3 = 0x2f68; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_2 = 0x2f98; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SaveCachedPose_4 = 0x3048; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_3 = 0x31a0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LocalRefPose = 0x3240; // FAnimNode_RefPose
		constexpr auto AnimGraphNode_ModifyCurve_3 = 0x3258; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_PoseBlendNode = 0x32b0; // FAnimNode_PoseBlendNode
		constexpr auto AnimGraphNode_ModifyCurve_2 = 0x3350; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_ModifyBone_3 = 0x33a8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_2 = 0x34b0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_ApplyAdditive = 0x3570; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SequenceEvaluator = 0x3638; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SaveCachedPose_3 = 0x3688; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_7 = 0x37e0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_6 = 0x3808; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ComponentToLocalSpace_2 = 0x3830; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ModifyBone_2 = 0x3850; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_2 = 0x3958; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive_3 = 0x3978; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive_2 = 0x3a48; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_BlendSpaceEvaluator_2 = 0x3b18; // FAnimNode_BlendSpaceEvaluator
		constexpr auto AnimGraphNode_BlendSpaceEvaluator = 0x3c08; // FAnimNode_BlendSpaceEvaluator
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x3cf8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x3d18; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose_2 = 0x3db8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend = 0x3f10; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_5 = 0x3fd0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_4 = 0x3ff8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_3 = 0x4020; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose = 0x4048; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByBool = 0x41a0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0x4240; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Slot = 0x4268; // FAnimNode_Slot
		constexpr auto AnimGraphNode_LegIK = 0x42b0; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive = 0x43a8; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_ModifyBone = 0x4478; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_UseCachedPose = 0x4580; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x45a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult = 0x45d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_ModifyCurve = 0x45f8; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_BlendSpacePlayer = 0x4650; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_2 = 0x4738; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_IdentityPose = 0x4768; // FAnimNode_RefPose
		constexpr auto AnimGraphNode_StateResult = 0x4780; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x47b0; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x4860; // FAnimNode_ConvertComponentToLocalSpace
	}

	namespace n_UAnimCompress_RemoveTrivialKeys { // : UAnimCompress
		constexpr auto MaxPosDiff = 0x40; // float
		constexpr auto MaxAngleDiff = 0x44; // float
		constexpr auto MaxScaleDiff = 0x48; // float
	}

	namespace n_UAsyncActionLoadPrimaryAssetClassList { // : UAsyncActionLoadPrimaryAssetBase
		constexpr auto Completed = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UPlatformGameInstance { // : UGameInstance
		constexpr auto ApplicationWillDeactivateDelegate = 0x1a8; // FMulticastInlineDelegate
		constexpr auto ApplicationHasReactivatedDelegate = 0x1b8; // FMulticastInlineDelegate
		constexpr auto ApplicationWillEnterBackgroundDelegate = 0x1c8; // FMulticastInlineDelegate
		constexpr auto ApplicationHasEnteredForegroundDelegate = 0x1d8; // FMulticastInlineDelegate
		constexpr auto ApplicationWillTerminateDelegate = 0x1e8; // FMulticastInlineDelegate
		constexpr auto ApplicationShouldUnloadResourcesDelegate = 0x1f8; // FMulticastInlineDelegate
		constexpr auto ApplicationReceivedStartupArgumentsDelegate = 0x208; // FMulticastInlineDelegate
		constexpr auto ApplicationRegisteredForRemoteNotificationsDelegate = 0x218; // FMulticastInlineDelegate
		constexpr auto ApplicationRegisteredForUserNotificationsDelegate = 0x228; // FMulticastInlineDelegate
		constexpr auto ApplicationFailedToRegisterForRemoteNotificationsDelegate = 0x238; // FMulticastInlineDelegate
		constexpr auto ApplicationReceivedRemoteNotificationDelegate = 0x248; // FMulticastInlineDelegate
		constexpr auto ApplicationReceivedLocalNotificationDelegate = 0x258; // FMulticastInlineDelegate
		constexpr auto ApplicationReceivedScreenOrientationChangedNotificationDelegate = 0x268; // FMulticastInlineDelegate
	}

	namespace n_UDatasmithStaticMeshComponentTemplate { // : UDatasmithObjectTemplate
		constexpr auto StaticMesh = 0x30; // UStaticMesh*
		constexpr auto OverrideMaterials = 0x38; // TArray<UMaterialInterface*>
	}

	namespace n_UPaperTerrainMaterial { // : UDataAsset
		constexpr auto Rules = 0x30; // TArray<FPaperTerrainMaterialRule>
		constexpr auto InteriorFill = 0x40; // UPaperSprite*
	}

	namespace n_UExporter { // : UObject
		constexpr auto SupportedClass = 0x28; // UObject*
		constexpr auto ExportRootScope = 0x30; // UObject*
		constexpr auto FormatExtension = 0x38; // TArray<FString>
		constexpr auto FormatDescription = 0x48; // TArray<FString>
		constexpr auto PreferredFormatIndex = 0x58; // int32_t
		constexpr auto TextIndent = 0x5c; // int32_t
		constexpr auto bText = 0x60; // char : 1
		constexpr auto bSelectedOnly = 0x60; // char : 1
		constexpr auto bForceFileOperations = 0x60; // char : 1
		constexpr auto ExportTask = 0x68; // UAssetExportTask*
	}

	namespace n_UMOProjectileMovementComponent { // : UActorComponent
		constexpr auto bAutoLaunchOnBeginPlay = 0xb0; // bool
		constexpr auto AutoLaunchVelocityMagnitude = 0xb4; // float
		constexpr auto Gravity = 0xb8; // FVector
		constexpr auto OnProjectileMovementDuringTick = 0xc8; // FMulticastInlineDelegate
		constexpr auto ParentRootComponent = 0xd8; // USceneComponent*
		constexpr auto bSynchronizeWithServer = 0xe0; // bool
		constexpr auto InitialLocation = 0xf0; // FVector
		constexpr auto InitialVelocity = 0xfc; // FVector
	}

	namespace n_UMaterialExpressionTime { // : UMaterialExpression
		constexpr auto bIgnorePause = 0x40; // char : 1
		constexpr auto bOverride_Period = 0x40; // char : 1
		constexpr auto Period = 0x44; // float
	}

	namespace n_UCurveLinearColorAtlas { // : UTexture2D
		constexpr auto TextureSize = 0x100; // uint32_t
		constexpr auto GradientCurves = 0x108; // TArray<UCurveLinearColor*>
	}

	namespace n_UParticleModuleTypeDataGpu { // : UParticleModuleTypeDataBase
		constexpr auto EmitterInfo = 0x30; // FGPUSpriteEmitterInfo
		constexpr auto ResourceData = 0x2b0; // FGPUSpriteResourceData
		constexpr auto CameraMotionBlurAmount = 0x410; // float
		constexpr auto bClearExistingParticlesOnInit = 0x414; // char : 1
	}

	namespace n_UComboButtonWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto ComboButtonStyle = 0x30; // FComboButtonStyle
	}

	namespace n_UMaterialExpressionFloor { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UWB_TooltipSkill_C { // : UMOTooltipSkill
		constexpr auto CanvasPanel_1 = 0x290; // UCanvasPanel*
		constexpr auto Image_Line = 0x298; // UImage*
		constexpr auto TextBlock_1 = 0x2a0; // UTextBlock*
		constexpr auto WeightText = 0x2a8; // UTextBlock*
	}

	namespace n_UMOBrokerBrowseMyPetsPanel { // : UMOBrokerPanel
		constexpr auto pMOButton_Close = 0x2d8; // UMOButton*
		constexpr auto pMOScrollbox_PetEntries = 0x2e0; // UMOScrollBox*
		constexpr auto cMOPetListEntryClass = 0x2e8; // UMOPetListEntry*
		constexpr auto pTextBlock_StableID = 0x2f0; // UTextBlock*
	}

	namespace n_USpinBoxWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto SpinBoxStyle = 0x30; // FSpinBoxStyle
	}

	namespace n_ULiveLinkVirtualSubjectSourceSettings { // : ULiveLinkSourceSettings
		constexpr auto SourceName = 0xa0; // FName
	}

	namespace n_UMOLevelStreamingSubsystem { // : UMOWorldSubsystemBase
		constexpr auto bEnableTerrainGrid = 0x51; // bool
		constexpr auto TerrainGridClass = 0x58; // AMOLevelStreamingGrid*
		constexpr auto vStreamingGroups = 0x60; // TArray<FMOLevelStreamingGroup>
		constexpr auto vIgnoredLayers = 0x70; // TArray<FName>
		constexpr auto vWaitingToHideQueue = 0x80; // TArray<FMOLevelStreamingInfo>
		constexpr auto TerrainStreamingGrid = 0x90; // AMOLevelStreamingGrid*
		constexpr auto StreamingVolumeManager = 0x98; // TWeakObjectPtr<AMOLevelStreamingVolumeManager>
	}

	namespace n_UParticleModuleLight_Seeded { // : UParticleModuleLight
		constexpr auto RandomSeedInfo = 0x120; // FParticleRandomSeedInfo
	}

	namespace n_UMaterialExpressionFunctionInput { // : UMaterialExpression
		constexpr auto Preview = 0x40; // FExpressionInput
		constexpr auto InputName = 0x54; // FName
		constexpr auto Description = 0x60; // FString
		constexpr auto ID = 0x70; // FGuid
		constexpr auto InputType = 0x80; // EFunctionInputType
		constexpr auto PreviewValue = 0x90; // FVector4
		constexpr auto bUsePreviewValueAsDefault = 0xa0; // char : 1
		constexpr auto SortPriority = 0xa4; // int32_t
		constexpr auto bCompilingFunctionPreview = 0xa8; // char : 1
	}

	namespace n_UPoseWatch { // : UObject
		constexpr auto Node = 0x28; // UEdGraphNode*
		constexpr auto PoseWatchColour = 0x30; // FColor
	}

	namespace n_UPathFollowingComponent { // : UActorComponent
		constexpr auto MovementComp = 0xe8; // UNavMovementComponent*
		constexpr auto MyNavData = 0xf8; // ANavigationData*
	}

	namespace n_UTexture2D { // : UTexture
		constexpr auto LevelIndex = 0xd8; // int32_t
		constexpr auto FirstResourceMemMip = 0xdc; // int32_t
		constexpr auto bTemporarilyDisableStreaming = 0xe0; // char : 1
		constexpr auto AddressX = 0xe1; // TextureAddress
		constexpr auto AddressY = 0xe2; // TextureAddress
		constexpr auto ImportedSize = 0xe4; // FIntPoint
	}

	namespace n_USoundfieldEndpointSubmix { // : USoundSubmixBase
		constexpr auto SoundfieldEndpointType = 0x38; // FName
		constexpr auto EndpointSettingsClass = 0x40; // UAudioEndpointSettingsBase*
		constexpr auto EndpointSettings = 0x48; // USoundfieldEndpointSettingsBase*
		constexpr auto EncodingSettingsClass = 0x50; // USoundfieldEncodingSettingsBase*
		constexpr auto EncodingSettings = 0x58; // USoundfieldEncodingSettingsBase*
		constexpr auto SoundfieldEffectChain = 0x60; // TArray<USoundfieldEffectBase*>
	}

	namespace n_UProceduralFoliageSpawner { // : UObject
		constexpr auto RandomSeed = 0x28; // int32_t
		constexpr auto TileSize = 0x2c; // float
		constexpr auto NumUniqueTiles = 0x30; // int32_t
		constexpr auto MinimumQuadTreeSize = 0x34; // float
		constexpr auto FoliageTypes = 0x40; // TArray<FFoliageTypeObject>
	}

	namespace n_UMaterialExpressionRuntimeVirtualTextureReplace { // : UMaterialExpression
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto VirtualTextureOutput = 0x54; // FExpressionInput
	}

	namespace n_ASpectatorBeaconHost { // : AOnlineBeaconHostObject
		constexpr auto State = 0x248; // USpectatorBeaconState*
		constexpr auto bLogoutOnSessionTimeout = 0x2b0; // bool
		constexpr auto SessionTimeoutSecs = 0x2b4; // float
		constexpr auto TravelSessionTimeoutSecs = 0x2b8; // float
	}

	namespace n_UMOPreviewModePlacement { // : UMOPreviewMode
		constexpr auto pQuestWidgetClass = 0x50; // UMOQuestWidget*
		constexpr auto PreviewActors = 0x58; // TArray<AMOStaticMeshActorPlacementPreview*>
		constexpr auto PreviewMaterials = 0x68; // TArray<UMaterialInstanceDynamic*>
		constexpr auto pGameInstance = 0x78; // UMOGameInstance*
		constexpr auto pPlacementSound = 0x80; // USoundCue*
		constexpr auto pQuestWidget = 0x98; // UMOQuestWidget*
	}

	namespace n_UModelComponent { // : UPrimitiveComponent
		constexpr auto ModelBodySetup = 0x458; // UBodySetup*
	}

	namespace n_UMovieSceneMediaTrack { // : UMovieSceneNameableTrack
		constexpr auto MediaSections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UNiagaraDataInterfaceVector2DCurve { // : UNiagaraDataInterfaceCurveBase
		constexpr auto XCurve = 0x70; // FRichCurve
		constexpr auto YCurve = 0xf0; // FRichCurve
	}

	namespace n_UPawnAction_Wait { // : UPawnAction
		constexpr auto TimeToWait = 0x98; // float
	}

	namespace n_UMaterialExpressionPower { // : UMaterialExpression
		constexpr auto Base = 0x40; // FExpressionInput
		constexpr auto Exponent = 0x54; // FExpressionInput
		constexpr auto ConstExponent = 0x68; // float
	}

	namespace n_UPostProcessComponent { // : USceneComponent
		constexpr auto Settings = 0x200; // FPostProcessSettings
		constexpr auto Priority = 0x750; // float
		constexpr auto BlendRadius = 0x754; // float
		constexpr auto BlendWeight = 0x758; // float
		constexpr auto bEnabled = 0x75c; // char : 1
		constexpr auto bUnbound = 0x75c; // char : 1
	}

	namespace n_UMaterialExpressionSceneTexture { // : UMaterialExpression
		constexpr auto Coordinates = 0x40; // FExpressionInput
		constexpr auto SceneTextureId = 0x54; // ESceneTextureId
		constexpr auto bFiltered = 0x55; // bool
	}

	namespace n_UAtmosphericFogComponent { // : USceneComponent
		constexpr auto SunMultiplier = 0x1f8; // float
		constexpr auto FogMultiplier = 0x1fc; // float
		constexpr auto DensityMultiplier = 0x200; // float
		constexpr auto DensityOffset = 0x204; // float
		constexpr auto DistanceScale = 0x208; // float
		constexpr auto AltitudeScale = 0x20c; // float
		constexpr auto DistanceOffset = 0x210; // float
		constexpr auto GroundOffset = 0x214; // float
		constexpr auto StartDistance = 0x218; // float
		constexpr auto SunDiscScale = 0x21c; // float
		constexpr auto DefaultBrightness = 0x220; // float
		constexpr auto DefaultLightColor = 0x224; // FColor
		constexpr auto bDisableSunDisk = 0x228; // char : 1
		constexpr auto bAtmosphereAffectsSunIlluminance = 0x228; // char : 1
		constexpr auto bDisableGroundScattering = 0x228; // char : 1
		constexpr auto PrecomputeParams = 0x22c; // FAtmospherePrecomputeParameters
		constexpr auto TransmittanceTexture = 0x258; // UTexture2D*
		constexpr auto IrradianceTexture = 0x260; // UTexture2D*
	}

	namespace n_APostProcessVolume { // : AVolume
		constexpr auto Settings = 0x260; // FPostProcessSettings
		constexpr auto Priority = 0x7b0; // float
		constexpr auto BlendRadius = 0x7b4; // float
		constexpr auto BlendWeight = 0x7b8; // float
		constexpr auto bEnabled = 0x7bc; // char : 1
		constexpr auto bUnbound = 0x7bc; // char : 1
	}

	namespace n_ULandscapeMeshProxyComponent { // : UStaticMeshComponent
		constexpr auto LandscapeGuid = 0x4d0; // FGuid
		constexpr auto ProxyComponentBases = 0x4e0; // TArray<FIntPoint>
		constexpr auto ProxyLOD = 0x4f0; // int8_t
	}

	namespace n_UCircularThrobber { // : UWidget
		constexpr auto NumberOfPieces = 0x108; // int32_t
		constexpr auto Period = 0x10c; // float
		constexpr auto Radius = 0x110; // float
		constexpr auto PieceImage = 0x118; // USlateBrushAsset*
		constexpr auto Image = 0x120; // FSlateBrush
		constexpr auto bEnableRadius = 0x1a8; // bool
	}

	namespace n_UParticleModuleEventReceiverKillParticles { // : UParticleModuleEventReceiverBase
		constexpr auto bStopSpawning = 0x40; // char : 1
	}

	namespace n_UMODataAssetFishingRod { // : UMODataAssetEquipmentShared
		constexpr auto pMesh = 0x308; // USkeletalMesh*
		constexpr auto RodAnimClass = 0x310; // UAnimInstance*
		constexpr auto AddRodAnimations = 0x318; // UAnimSequenceBase*
		constexpr auto pReelinSound = 0x320; // USoundCue*
		constexpr auto pReelIsPulledbyFish = 0x328; // USoundCue*
		constexpr auto pReelThrowLoop = 0x330; // USoundCue*
		constexpr auto pFishingRodCreekLoop = 0x338; // USoundCue*
		constexpr auto pFishingRodCreeklow = 0x340; // USoundCue*
		constexpr auto pFishingRodCreekMedium = 0x348; // USoundCue*
		constexpr auto pFishingRodCreekHard = 0x350; // USoundCue*
		constexpr auto pLineStrainLow = 0x358; // USoundCue*
		constexpr auto pLineStrainMedium = 0x360; // USoundCue*
		constexpr auto pLineStrainHard = 0x368; // USoundCue*
	}

	namespace n_UDynamicEntryBox { // : UDynamicEntryBoxBase
		constexpr auto EntryWidgetClass = 0x1d8; // UUserWidget*
	}

	namespace n_UMOCharacterTitleListEntry { // : UMOWidgetBlueprint
		constexpr auto pTextBlockDescription = 0x260; // UTextBlock*
		constexpr auto pTextBlockTitleName = 0x268; // UTextBlock*
		constexpr auto pTextBlockProgress = 0x270; // UTextBlock*
		constexpr auto pTextBlockButton = 0x278; // UTextBlock*
		constexpr auto ETitlePlacement = 0x280; // ETitlePlacement
		constexpr auto pImage = 0x288; // UImage*
		constexpr auto pProgressBar = 0x290; // UProgressBar*
		constexpr auto pButton = 0x298; // UMOButtonLarge*
		constexpr auto pParentWidget = 0x2a8; // UMOWidgetBlueprint*
		constexpr auto pParentScrollBox = 0x2b0; // UMOScrollBox*
		constexpr auto bTitleEarned = 0x2b8; // bool
		constexpr auto iTitleIndex = 0x2bc; // int32_t
	}

	namespace n_USourceEffectSimpleDelayPreset { // : USoundEffectSourcePreset
		constexpr auto Settings = 0xa8; // FSourceEffectSimpleDelaySettings
	}

	namespace n_UMaterialExpressionTextureCoordinate { // : UMaterialExpression
		constexpr auto CoordinateIndex = 0x40; // int32_t
		constexpr auto UTiling = 0x44; // float
		constexpr auto VTiling = 0x48; // float
		constexpr auto UnMirrorU = 0x4c; // char : 1
		constexpr auto UnMirrorV = 0x4c; // char : 1
	}

	namespace n_UChainComponent { // : UMeshComponent
		constexpr auto onSoundReached = 0x468; // FMulticastInlineDelegate
		constexpr auto onCollide = 0x478; // FMulticastInlineDelegate
		constexpr auto chainMesh = 0x488; // UStaticMesh*
		constexpr auto Scale = 0x490; // FVector
		constexpr auto Segments = 0x49c; // int32_t
		constexpr auto additiveRotation = 0x4a0; // FVector
		constexpr auto ChainLength = 0x4ac; // float
		constexpr auto endPoint = 0x4b0; // FVector
		constexpr auto attachStart = 0x4bc; // bool
		constexpr auto attachStartTo = 0x4c0; // FComponentReference
		constexpr auto attachStartToSocket = 0x4e8; // FName
		constexpr auto attachEnd = 0x4f0; // bool
		constexpr auto attachEndTo = 0x4f8; // FComponentReference
		constexpr auto attachEndToSocket = 0x520; // FName
		constexpr auto attachComponentToStart = 0x528; // FComponentReference
		constexpr auto rotateStartAttachment = 0x550; // bool
		constexpr auto attachComponentToEnd = 0x558; // FComponentReference
		constexpr auto rotateEndAttachment = 0x580; // bool
		constexpr auto Gravity = 0x584; // float
		constexpr auto Stiffness = 0x588; // int32_t
		constexpr auto Friction = 0x58c; // float
		constexpr auto chainWidth = 0x590; // float
		constexpr auto selfCollision = 0x594; // bool
		constexpr auto selfCollisionWidth = 0x598; // float
		constexpr auto selfCollisionThreshold = 0x59c; // float
		constexpr auto Skip = 0x5a0; // int32_t
		constexpr auto drawDebugger = 0x5a4; // bool
		constexpr auto instanceComponent = 0x5a8; // UInstancedStaticMeshComponent*
		constexpr auto soundThreshold = 0x5b0; // float
		constexpr auto soundSkip = 0x5b4; // int32_t
	}

	namespace n_UMaterialExpressionAtmosphericFogColor { // : UMaterialExpression
		constexpr auto WorldPosition = 0x40; // FExpressionInput
	}

	namespace n_USpringArmComponent { // : USceneComponent
		constexpr auto TargetArmLength = 0x1f8; // float
		constexpr auto SocketOffset = 0x1fc; // FVector
		constexpr auto TargetOffset = 0x208; // FVector
		constexpr auto ProbeSize = 0x214; // float
		constexpr auto ProbeChannel = 0x218; // ECollisionChannel
		constexpr auto bDoCollisionTest = 0x21c; // char : 1
		constexpr auto bUsePawnControlRotation = 0x21c; // char : 1
		constexpr auto bInheritPitch = 0x21c; // char : 1
		constexpr auto bInheritYaw = 0x21c; // char : 1
		constexpr auto bInheritRoll = 0x21c; // char : 1
		constexpr auto bEnableCameraLag = 0x21c; // char : 1
		constexpr auto bEnableCameraRotationLag = 0x21c; // char : 1
		constexpr auto bUseCameraLagSubstepping = 0x21c; // char : 1
		constexpr auto bDrawDebugLagMarkers = 0x21d; // char : 1
		constexpr auto CameraLagSpeed = 0x220; // float
		constexpr auto CameraRotationLagSpeed = 0x224; // float
		constexpr auto CameraLagMaxTimeStep = 0x228; // float
		constexpr auto CameraLagMaxDistance = 0x22c; // float
	}

	namespace n_UDestructibleComponent { // : USkinnedMeshComponent
		constexpr auto bFractureEffectOverride = 0x690; // char : 1
		constexpr auto FractureEffects = 0x698; // TArray<FFractureEffect>
		constexpr auto bEnableHardSleeping = 0x6a8; // bool
		constexpr auto LargeChunkThreshold = 0x6ac; // float
		constexpr auto OnComponentFracture = 0x6c0; // FMulticastInlineDelegate
	}

	namespace n_UUniformVector { // : UFieldNodeVector
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto Direction = 0xb4; // FVector
	}

	namespace n_USourceEffectPannerPreset { // : USoundEffectSourcePreset
		constexpr auto Settings = 0x98; // FSourceEffectPannerSettings
	}

	namespace n_UMovieSceneSignedObject { // : UObject
		constexpr auto Signature = 0x28; // FGuid
	}

	namespace n_UCrowdFollowingComponent { // : UPathFollowingComponent
		constexpr auto CrowdAgentMoveDirection = 0x268; // FVector
	}

	namespace n_UMovieSceneTakeSettings { // : UObject
		constexpr auto HoursName = 0x28; // FString
		constexpr auto MinutesName = 0x38; // FString
		constexpr auto SecondsName = 0x48; // FString
		constexpr auto FramesName = 0x58; // FString
		constexpr auto SubFramesName = 0x68; // FString
		constexpr auto SlateName = 0x78; // FString
	}

	namespace n_UOculusHMDRuntimeSettings { // : UObject
		constexpr auto bAutoEnabled = 0x28; // bool
		constexpr auto SplashDescs = 0x30; // TArray<FOculusSplashDesc>
		constexpr auto bEnableSpecificColorGamut = 0x40; // bool
		constexpr auto ColorSpace = 0x41; // EColorSpace
		constexpr auto bSupportsDash = 0x42; // bool
		constexpr auto bCompositesDepth = 0x43; // bool
		constexpr auto bHQDistortion = 0x44; // bool
		constexpr auto PixelDensityMin = 0x48; // float
		constexpr auto PixelDensityMax = 0x4c; // float
		constexpr auto CPULevel = 0x50; // int32_t
		constexpr auto GPULevel = 0x54; // int32_t
		constexpr auto FFRLevel = 0x58; // EFixedFoveatedRenderingLevel
		constexpr auto FFRDynamic = 0x59; // bool
		constexpr auto bChromaCorrection = 0x5a; // bool
		constexpr auto bRecenterHMDWithController = 0x5b; // bool
		constexpr auto bFocusAware = 0x5c; // bool
		constexpr auto bRequiresSystemKeyboard = 0x5d; // bool
		constexpr auto HandTrackingSupport = 0x5e; // EHandTrackingSupport
	}

	namespace n_USoundClass { // : UObject
		constexpr auto Properties = 0x28; // FSoundClassProperties
		constexpr auto ChildClasses = 0xa8; // TArray<USoundClass*>
		constexpr auto PassiveSoundMixModifiers = 0xb8; // TArray<FPassiveSoundMixModifier>
		constexpr auto ParentClass = 0xc8; // USoundClass*
	}

	namespace n_UNavLinkComponent { // : UPrimitiveComponent
		constexpr auto Links = 0x448; // TArray<FNavigationLink>
	}

	namespace n_UARBasicLightEstimate { // : UARLightEstimate
		constexpr auto AmbientIntensityLumens = 0x28; // float
		constexpr auto AmbientColorTemperatureKelvin = 0x2c; // float
		constexpr auto AmbientColor = 0x30; // FLinearColor
	}

	namespace n_UMOTaskDeliveryPanel { // : UMOTaskPanel
		constexpr auto pMOButtonDeliver = 0x2d0; // UMOButton*
		constexpr auto cTaskRewardEntryClass = 0x2d8; // UMOTaskRewardEntry*
		constexpr auto pItemSlot_DeliverItem = 0x2e0; // UMOItemSlotPlaceItem*
		constexpr auto pMOScrollBox_Rewards = 0x2e8; // UMOScrollBox*
	}

	namespace n_UMODataAssetArrowBase { // : UMODataAssetEquipmentShared
		constexpr auto pMesh = 0x308; // UStaticMesh*
		constexpr auto pFlyingTrail = 0x310; // UParticleSystem*
	}

	namespace n_UParticleModuleRotationRate_Seeded { // : UParticleModuleRotationRate
		constexpr auto RandomSeedInfo = 0x60; // FParticleRandomSeedInfo
	}

	namespace n_UWB_TabButton_C { // : UMOUserWidgetTabButton
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
		constexpr auto ImageHovered = 0x2d8; // UImage*
		constexpr auto ImagePressed = 0x2e0; // UImage*
		constexpr auto TabButton_Text = 0x2e8; // UTextBlock*
		constexpr auto VerticalBox_1 = 0x2f0; // UVerticalBox*
		constexpr auto TabName = 0x2f8; // FText
		constexpr auto TabManager = 0x310; // UWB_TabManager_C*
		constexpr auto ArrayLocationIndex = 0x318; // int32_t
		constexpr auto FontSize = 0x31c; // int32_t
	}

	namespace n_USceneCaptureComponent { // : USceneComponent
		constexpr auto PrimitiveRenderMode = 0x1f8; // ESceneCapturePrimitiveRenderMode
		constexpr auto CaptureSource = 0x1f9; // ESceneCaptureSource
		constexpr auto bCaptureEveryFrame = 0x1fa; // char : 1
		constexpr auto bCaptureOnMovement = 0x1fa; // char : 1
		constexpr auto bAlwaysPersistRenderingState = 0x1fb; // bool
		constexpr auto HiddenComponents = 0x200; // TArray<TWeakObjectPtr<UPrimitiveComponent>>
		constexpr auto HiddenActors = 0x210; // TArray<AActor*>
		constexpr auto ShowOnlyComponents = 0x220; // TArray<TWeakObjectPtr<UPrimitiveComponent>>
		constexpr auto ShowOnlyActors = 0x230; // TArray<AActor*>
		constexpr auto LODDistanceFactor = 0x240; // float
		constexpr auto MaxViewDistanceOverride = 0x244; // float
		constexpr auto CaptureSortPriority = 0x248; // int32_t
		constexpr auto bUseRayTracingIfEnabled = 0x24c; // bool
		constexpr auto ShowFlagSettings = 0x250; // TArray<FEngineShowFlagsSetting>
		constexpr auto ProfilingEventName = 0x290; // FString
	}

	namespace n_UMODataAssetPlayerDefinitions { // : UPrimaryDataAsset
		constexpr auto PlaceholderDummy = 0x30; // TSoftObjectPtr<UMODataAssetPlayerBaseDefinition>
		constexpr auto HumanMaleKallard = 0x58; // TSoftObjectPtr<UMODataAssetPlayerBaseDefinition>
		constexpr auto HumanMaleKhurite = 0x80; // TSoftObjectPtr<UMODataAssetPlayerBaseDefinition>
		constexpr auto HumanMaleSarducaan = 0xa8; // TSoftObjectPtr<UMODataAssetPlayerBaseDefinition>
		constexpr auto HumanMaleSidoian = 0xd0; // TSoftObjectPtr<UMODataAssetPlayerBaseDefinition>
		constexpr auto HumanMaleTindremene = 0xf8; // TSoftObjectPtr<UMODataAssetPlayerBaseDefinition>
		constexpr auto AlvarinMaleSheevra = 0x120; // TSoftObjectPtr<UMODataAssetPlayerBaseDefinition>
		constexpr auto AlvarinMaleVeela = 0x148; // TSoftObjectPtr<UMODataAssetPlayerBaseDefinition>
		constexpr auto OghmirMaleBlainn = 0x170; // TSoftObjectPtr<UMODataAssetPlayerBaseDefinition>
		constexpr auto OghmirMaleHuergar = 0x198; // TSoftObjectPtr<UMODataAssetPlayerBaseDefinition>
		constexpr auto ThursarMale = 0x1c0; // TSoftObjectPtr<UMODataAssetPlayerBaseDefinition>
		constexpr auto RisarMaleVariant00 = 0x1e8; // TSoftObjectPtr<UMODataAssetPlayerBaseDefinition>
		constexpr auto RisarMaleVariant01 = 0x210; // TSoftObjectPtr<UMODataAssetPlayerBaseDefinition>
		constexpr auto RisarMaleVariant02 = 0x238; // TSoftObjectPtr<UMODataAssetPlayerBaseDefinition>
		constexpr auto HumanFemaleKallard = 0x260; // TSoftObjectPtr<UMODataAssetPlayerBaseDefinition>
		constexpr auto HumanFemaleKhurite = 0x288; // TSoftObjectPtr<UMODataAssetPlayerBaseDefinition>
		constexpr auto HumanFemaleSarducaan = 0x2b0; // TSoftObjectPtr<UMODataAssetPlayerBaseDefinition>
		constexpr auto HumanFemaleSidoian = 0x2d8; // TSoftObjectPtr<UMODataAssetPlayerBaseDefinition>
		constexpr auto HumanFemaleTindremene = 0x300; // TSoftObjectPtr<UMODataAssetPlayerBaseDefinition>
		constexpr auto AlvarinFemaleSheevra = 0x328; // TSoftObjectPtr<UMODataAssetPlayerBaseDefinition>
		constexpr auto AlvarinFemaleVeela = 0x350; // TSoftObjectPtr<UMODataAssetPlayerBaseDefinition>
		constexpr auto OghmirFemaleBlainn = 0x378; // TSoftObjectPtr<UMODataAssetPlayerBaseDefinition>
		constexpr auto OghmirFemaleHuergar = 0x3a0; // TSoftObjectPtr<UMODataAssetPlayerBaseDefinition>
		constexpr auto ThursarFemale = 0x3c8; // TSoftObjectPtr<UMODataAssetPlayerBaseDefinition>
		constexpr auto RisarFemaleVariant00 = 0x3f0; // TSoftObjectPtr<UMODataAssetPlayerBaseDefinition>
		constexpr auto RisarFemaleVariant01 = 0x418; // TSoftObjectPtr<UMODataAssetPlayerBaseDefinition>
		constexpr auto RisarFemaleVariant02 = 0x440; // TSoftObjectPtr<UMODataAssetPlayerBaseDefinition>
		constexpr auto pSoundCue_RagdollImpactGround = 0x468; // USoundCue*
		constexpr auto pSoundCue_Ressurect = 0x470; // USoundCue*
		constexpr auto pParticleSystem_BloodSpray = 0x478; // UNiagaraSystem*
		constexpr auto pParticleSystem_BloodSlash = 0x480; // UNiagaraSystem*
		constexpr auto pParticleSystem_BloodPiercing = 0x488; // UNiagaraSystem*
		constexpr auto pParticleSystem_BloodBlunt = 0x490; // UNiagaraSystem*
		constexpr auto pParticleSystem_Resurrect = 0x498; // UNiagaraSystem*
		constexpr auto pParticleSystem_MagicDamageHit = 0x4a0; // UNiagaraSystem*
		constexpr auto pSwingBloodTrail = 0x4a8; // UParticleSystem*
		constexpr auto pParticleSystem_pBloodLimbRemoved = 0x4b0; // UNiagaraSystem*
		constexpr auto pParticleSystem_pBloodPiercingDeath = 0x4b8; // UNiagaraSystem*
		constexpr auto pParticleSystem_BloodArrowDeath = 0x4c0; // UNiagaraSystem*
		constexpr auto pParticleSystem_BloodBluntDeath = 0x4c8; // UNiagaraSystem*
		constexpr auto pParticleSystem_KauBeam = 0x4d0; // UNiagaraSystem*
		constexpr auto vBloodDecalsSmall = 0x4d8; // TArray<UMaterialInstance*>
		constexpr auto vBloodDecalsLarge = 0x4e8; // TArray<UMaterialInstance*>
		constexpr auto vBloodDecalsSpray = 0x4f8; // TArray<UMaterialInstance*>
		constexpr auto vHitBoneNames = 0x508; // TArray<FName>
		constexpr auto bPlayersArePreloaded = 0x518; // bool
		constexpr auto LoadedPlayerDefinitions = 0x520; // TArray<UMODataAssetPlayerBaseDefinition*>
		constexpr auto cFishingBobberClass = 0x530; // AMOFishingBobberActor*
	}

	namespace n_UMaterialExpressionLandscapeVisibilityMask { // : UMaterialExpression
		constexpr auto ExpressionGUID = 0x40; // FGuid
	}

	namespace n_UProceduralMeshComponent { // : UMeshComponent
		constexpr auto bUseComplexAsSimpleCollision = 0x470; // bool
		constexpr auto bUseAsyncCooking = 0x471; // bool
		constexpr auto ProcMeshBodySetup = 0x478; // UBodySetup*
		constexpr auto ProcMeshSections = 0x480; // TArray<FProcMeshSection>
		constexpr auto CollisionConvexElems = 0x490; // TArray<FKConvexElem>
		constexpr auto LocalBounds = 0x4a0; // FBoxSphereBounds
		constexpr auto AsyncBodySetupQueue = 0x4c0; // TArray<UBodySetup*>
	}

	namespace n_UInterpToMovementComponent { // : UMovementComponent
		constexpr auto Duration = 0xf0; // float
		constexpr auto bPauseOnImpact = 0xf4; // char : 1
		constexpr auto bSweep = 0xf8; // bool
		constexpr auto TeleportType = 0xf9; // ETeleportType
		constexpr auto BehaviourType = 0xfa; // EInterpToBehaviourType
		constexpr auto bCheckIfStillInWorld = 0xfb; // bool
		constexpr auto bForceSubStepping = 0xfc; // char : 1
		constexpr auto OnInterpToReverse = 0x100; // FMulticastInlineDelegate
		constexpr auto OnInterpToStop = 0x110; // FMulticastInlineDelegate
		constexpr auto OnWaitBeginDelegate = 0x120; // FMulticastInlineDelegate
		constexpr auto OnWaitEndDelegate = 0x130; // FMulticastInlineDelegate
		constexpr auto OnResetDelegate = 0x140; // FMulticastInlineDelegate
		constexpr auto MaxSimulationTimeStep = 0x150; // float
		constexpr auto MaxSimulationIterations = 0x154; // int32_t
		constexpr auto ControlPoints = 0x158; // TArray<FInterpControlPoint>
	}

	namespace n_UTreeView { // : UListView
		constexpr auto BP_OnGetItemChildren = 0x378; // FDelegate
		constexpr auto BP_OnItemExpansionChanged = 0x388; // FMulticastInlineDelegate
	}

	namespace n_UMODataAssetTattooVisuals { // : UPrimaryDataAsset
		constexpr auto BO_V_Texture_Detail_BCVariation = 0x30; // UTexture*
		constexpr auto BO_V_Texture_Detail_Normal = 0x38; // UTexture*
		constexpr auto BO_V_Texture_Detail_LerpToSkin_Mask_Texture = 0x40; // UTexture*
		constexpr auto BO_V_Texture_Detail_LerpToSkin_Texture = 0x48; // UTexture*
		constexpr auto BO_V_Layer = 0x50; // float
		constexpr auto BO_V_Metallic = 0x54; // float
		constexpr auto BO_V_TintColor = 0x58; // FColor
		constexpr auto BO_V_BCVariation_BreakUp = 0x5c; // float
		constexpr auto BO_V_BCVariation_Desaturate = 0x60; // float
		constexpr auto BO_V_BCVariation_DesaturateSkin = 0x64; // float
		constexpr auto BO_V_BCVariation_LerpToBase = 0x68; // float
		constexpr auto BO_V_BCVariation_LerpToSkin = 0x6c; // float
		constexpr auto BO_V_BCVariation_Multiply = 0x70; // float
		constexpr auto BO_V_BCVariation_Multiply_High = 0x74; // float
		constexpr auto BO_V_BCVariation_Multiply_Low = 0x78; // float
		constexpr auto BO_V_BCVariation_MultiplyAdvanced = 0x7c; // float
		constexpr auto BO_V_BCVariation_MultiplyLuminanceWeight = 0x80; // float
		constexpr auto BO_V_BCVariation_Tiling = 0x84; // float
		constexpr auto BO_V_BCVariation_TintOrPure = 0x88; // float
		constexpr auto BO_V_FlattenNormal_Base = 0x8c; // float
		constexpr auto BO_V_FlattenNormal_Detail = 0x90; // float
		constexpr auto BO_V_FlattenNormal_Pattern = 0x94; // float
		constexpr auto BO_V_FlattenNormal_Skin_Detail = 0x98; // float
		constexpr auto BO_V_FlattenNormal_Stencil = 0x9c; // float
		constexpr auto BO_V_LerpToSkin_Mask_TextureHigh = 0xa0; // float
		constexpr auto BO_V_LerpToSkin_Mask_TextureLow = 0xa4; // float
		constexpr auto BO_V_LerpToSkin_Mask_TextureTiling = 0xa8; // float
		constexpr auto BO_V_LerpToSkin_TextureHigh = 0xac; // float
		constexpr auto BO_V_LerpToSkin_TextureLow = 0xb0; // float
		constexpr auto BO_V_LerpToSkin_TextureTiling = 0xb4; // float
		constexpr auto BO_V_LerpToSkin_TextureWeight = 0xb8; // float
		constexpr auto BO_V_Normal_DeriveNewTangent = 0xbc; // float
		constexpr auto BO_V_Normal_LerpToSkin = 0xc0; // float
		constexpr auto BO_V_Normal_Tiling = 0xc4; // float
		constexpr auto BO_V_Roughness_LerpToSkin = 0xc8; // float
		constexpr auto BO_V_Roughness_Max = 0xcc; // float
		constexpr auto BO_V_Roughness_Min = 0xd0; // float
		constexpr auto BO_V_Specular_LerpToSkin = 0xd4; // float
		constexpr auto BO_V_Specular_Max = 0xd8; // float
		constexpr auto BO_V_Specular_Min = 0xdc; // float
		constexpr auto BO_V_SSS = 0xe0; // float
	}

	namespace n_UMOTaskRewardEntry { // : UMOUserWidget
		constexpr auto pTextBlockRewardName = 0x2c8; // UTextBlock*
		constexpr auto pTextBlockRewardAmount = 0x2d0; // UTextBlock*
		constexpr auto pButton = 0x2d8; // UButton*
		constexpr auto pDeliveryPanel = 0x2e0; // UMOTaskDeliveryPanel*
		constexpr auto bSelected = 0x2e8; // bool
	}

	namespace n_UMOUserWidgetOptionsLanguage { // : UMOUserWidgetOptionsPanel
		constexpr auto vMOCheckBoxEntries = 0x2d0; // TArray<UMOCheckBoxEntryLanguage*>
		constexpr auto pMOCheckboxEntry_English = 0x2e0; // UMOCheckBoxEntryLanguage*
		constexpr auto pMOCheckboxEntry_Swedish = 0x2e8; // UMOCheckBoxEntryLanguage*
		constexpr auto pMOCheckboxEntry_German = 0x2f0; // UMOCheckBoxEntryLanguage*
		constexpr auto pMOCheckboxEntry_French = 0x2f8; // UMOCheckBoxEntryLanguage*
		constexpr auto pMOCheckboxEntry_Spanish = 0x300; // UMOCheckBoxEntryLanguage*
		constexpr auto pMOCheckboxEntry_Russian = 0x308; // UMOCheckBoxEntryLanguage*
		constexpr auto pMOCheckboxEntry_Italian = 0x310; // UMOCheckBoxEntryLanguage*
		constexpr auto pMOCheckboxEntry_Japanese = 0x318; // UMOCheckBoxEntryLanguage*
		constexpr auto pMOCheckboxEntry_Chinese_Simpl = 0x320; // UMOCheckBoxEntryLanguage*
		constexpr auto pMOCheckboxEntry_Chinese_Trad = 0x328; // UMOCheckBoxEntryLanguage*
		constexpr auto pMOCheckboxEntry_Turkish = 0x330; // UMOCheckBoxEntryLanguage*
		constexpr auto pMOCheckboxEntry_Polish = 0x338; // UMOCheckBoxEntryLanguage*
		constexpr auto pMOCheckboxEntry_Portuguese = 0x340; // UMOCheckBoxEntryLanguage*
		constexpr auto pMOCheckboxEntry_Portuguese_BR = 0x348; // UMOCheckBoxEntryLanguage*
		constexpr auto pMOCheckboxEntry_Greek = 0x350; // UMOCheckBoxEntryLanguage*
		constexpr auto pMOCheckboxEntry_Arabic = 0x358; // UMOCheckBoxEntryLanguage*
		constexpr auto pMOCheckboxEntry_Dutch = 0x360; // UMOCheckBoxEntryLanguage*
		constexpr auto pMOCheckboxEntry_Czech = 0x368; // UMOCheckBoxEntryLanguage*
		constexpr auto pMOCheckboxEntry_Korean = 0x370; // UMOCheckBoxEntryLanguage*
	}

	namespace n_UMaterialExpressionFmod { // : UMaterialExpression
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_UInterpTrackInstSlomo { // : UInterpTrackInst
		constexpr auto OldTimeDilation = 0x28; // float
	}

	namespace n_UAnimSharingTransitionInstance { // : UAnimInstance
		constexpr auto FromComponent = 0x2b8; // TWeakObjectPtr<USkeletalMeshComponent>
		constexpr auto ToComponent = 0x2c0; // TWeakObjectPtr<USkeletalMeshComponent>
		constexpr auto BlendTime = 0x2c8; // float
		constexpr auto bBlendBool = 0x2cc; // bool
	}

	namespace n_UEnvQueryTest_InsideWaterBody { // : UEnvQueryTest
		constexpr auto bIncludeWaves = 0x1f8; // bool
		constexpr auto bSimpleWaves = 0x1f9; // bool
		constexpr auto bIgnoreExclusionVolumes = 0x1fa; // bool
	}

	namespace n_ABP_AiEffectAOE_EtherSpikes_C { // : AMOAiEffectActor
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
		constexpr auto PointLight = 0x278; // UPointLightComponent*
		constexpr auto FadeOut_Fade_28C2A0E74FA7846255C030BA391C7BF0 = 0x280; // float
		constexpr auto FadeOut__Direction_28C2A0E74FA7846255C030BA391C7BF0 = 0x284; // ETimelineDirection
		constexpr auto FadeOut = 0x288; // UTimelineComponent*
		constexpr auto iIter = 0x290; // int32_t
		constexpr auto vParticles = 0x298; // TArray<UNiagaraComponent*>
	}

	namespace n_UWB_BasicTooltip_C { // : UMOBasicTooltip
		constexpr auto UberGraphFrame = 0x2c8; // FPointerToUberGraphFrame
		constexpr auto Text = 0x2d0; // UTextBlock*
	}

	namespace n_ALogin_Screen_C { // : ALevelScriptActor
		constexpr auto UberGraphFrame = 0x228; // FPointerToUberGraphFrame
	}

	namespace n_ULevelStreamingDynamic { // : ULevelStreaming
		constexpr auto bInitiallyLoaded = 0x148; // char : 1
		constexpr auto bInitiallyVisible = 0x148; // char : 1
	}

	namespace n_UEnvelopeFollowerListener { // : UActorComponent
		constexpr auto OnEnvelopeFollowerUpdate = 0xb0; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionConstant4Vector { // : UMaterialExpression
		constexpr auto Constant = 0x40; // FLinearColor
	}

	namespace n_USubUVAnimation { // : UObject
		constexpr auto SubUVTexture = 0x28; // UTexture2D*
		constexpr auto SubImages_Horizontal = 0x30; // int32_t
		constexpr auto SubImages_Vertical = 0x34; // int32_t
		constexpr auto BoundingMode = 0x38; // ESubUVBoundingVertexCount
		constexpr auto OpacitySourceMode = 0x39; // EOpacitySourceMode
		constexpr auto AlphaThreshold = 0x3c; // float
	}

	namespace n_UInvalidationBox { // : UContentWidget
		constexpr auto bCanCache = 0x120; // bool
		constexpr auto CacheRelativeTransforms = 0x121; // bool
	}

	namespace n_UMaterialExpressionDeriveNormalZ { // : UMaterialExpression
		constexpr auto InXY = 0x40; // FExpressionInput
	}

	namespace n_UWB_MOCharCreationInfoPanel_C { // : UMOCharCreationInfoPanel
		constexpr auto MO_Logo_Image_2 = 0x370; // UImage*
		constexpr auto pLabelText = 0x378; // UTextBlock*
		constexpr auto pLabelText_4 = 0x380; // UTextBlock*
		constexpr auto pLabelText_5 = 0x388; // UTextBlock*
		constexpr auto pLabelText_6 = 0x390; // UTextBlock*
		constexpr auto pMiddleVertical = 0x398; // UImage*
		constexpr auto WB_MO_Scrollbox_Arrow_Down = 0x3a0; // UWB_MO_Scrollbox_Arrow_Down_C*
		constexpr auto WB_MO_Scrollbox_Arrow_Up = 0x3a8; // UWB_MO_Scrollbox_Arrow_Up_C*
	}

	namespace n_AMagicLeapARPinRenderer { // : AActor
		constexpr auto bInfoActorsVisibilityOverride = 0x220; // bool
		constexpr auto AllInfoActors = 0x228; // TMap<FGuid, AMagicLeapARPinInfoActorBase*>
		constexpr auto ClassToSpawn = 0x280; // AMagicLeapARPinInfoActorBase*
	}

	namespace n_APointLight { // : ALight
		constexpr auto PointLightComponent = 0x230; // UPointLightComponent*
	}

	namespace n_UMOEquipmentFishingRodComponent { // : UMOEquipmentComponent
		constexpr auto pBaseMesh = 0xf0; // USkeletalMeshComponent*
		constexpr auto pDataAssetFishingRod = 0xf8; // UMODataAssetFishingRod*
		constexpr auto sEquipmentData = 0x100; // FMOFishingRodData
		constexpr auto pBaseMID = 0x128; // UMaterialInstanceDynamic*
		constexpr auto pCompositeMID = 0x130; // UMaterialInstanceDynamic*
	}

	namespace n_UCameraShakeBase { // : UObject
		constexpr auto bSingleInstance = 0x28; // bool
		constexpr auto ShakeScale = 0x2c; // float
		constexpr auto CameraManager = 0x30; // APlayerCameraManager*
	}

	namespace n_UReflectionCaptureComponent { // : USceneComponent
		constexpr auto CaptureOffsetComponent = 0x1f8; // UBillboardComponent*
		constexpr auto ReflectionSourceType = 0x200; // EReflectionSourceType
		constexpr auto MobileReflectionCompression = 0x201; // EMobileReflectionCompression
		constexpr auto Cubemap = 0x208; // UTextureCube*
		constexpr auto SourceCubemapAngle = 0x210; // float
		constexpr auto Brightness = 0x214; // float
		constexpr auto bModifyMaxValueRGBM = 0x218; // bool
		constexpr auto MaxValueRGBM = 0x21c; // float
		constexpr auto CaptureOffset = 0x220; // FVector
		constexpr auto MapBuildDataId = 0x22c; // FGuid
		constexpr auto CachedEncodedHDRCubemap = 0x250; // UTextureCube*
	}

	namespace n_UDatasmithStaticMeshIFCImportData { // : UDatasmithStaticMeshImportData
		constexpr auto SourceGlobalId = 0x28; // FString
	}

	namespace n_UBTDecorator_IsBBEntryOfClass { // : UBTDecorator_BlackboardBase
		constexpr auto TestClass = 0x90; // UObject*
	}

	namespace n_UDatasmithDecalComponentTemplate { // : UDatasmithObjectTemplate
		constexpr auto SortOrder = 0x30; // int32_t
		constexpr auto DecalSize = 0x34; // FVector
		constexpr auto Material = 0x40; // UMaterialInterface*
	}

	namespace n_UMaterialShaderQualitySettings { // : UObject
		constexpr auto ForwardSettingMap = 0x28; // TMap<FName, UShaderPlatformQualitySettings*>
	}

	namespace n_UMenuAnchor { // : UContentWidget
		constexpr auto MenuClass = 0x120; // UUserWidget*
		constexpr auto OnGetMenuContentEvent = 0x128; // FDelegate
		constexpr auto OnGetUserMenuContentEvent = 0x138; // FDelegate
		constexpr auto Placement = 0x148; // EMenuPlacement
		constexpr auto bFitInWindow = 0x149; // bool
		constexpr auto ShouldDeferPaintingAfterWindowContent = 0x14a; // bool
		constexpr auto UseApplicationMenuStack = 0x14b; // bool
		constexpr auto OnMenuOpenChanged = 0x150; // FMulticastInlineDelegate
	}

	namespace n_UAutoDestroySubsystem { // : UWorldSubsystem
		constexpr auto ActorsToPoll = 0x38; // TArray<AActor*>
	}

	namespace n_UJoinSessionCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UMOButtonSpellWidget { // : UMOUserWidget
		constexpr auto pButton = 0x2c8; // UMOButtonSpell*
	}

	namespace n_UMODataAssetHandle { // : UMODataAssetEquipmentShared
		constexpr auto pStaticMesh = 0x308; // UStaticMesh*
		constexpr auto sDisplayName = 0x310; // FText
		constexpr auto pIcon = 0x328; // UTexture2D*
		constexpr auto pBlockParticles = 0x330; // UNiagaraSystem*
		constexpr auto pPerfectBlockParticles = 0x338; // UNiagaraSystem*
		constexpr auto pEquipHitParticles = 0x340; // UNiagaraSystem*
		constexpr auto pGenericHitParticles = 0x348; // UNiagaraSystem*
		constexpr auto pSwingTrail = 0x350; // UParticleSystem*
		constexpr auto pDealDamageSoundGeneric = 0x358; // USoundCue*
		constexpr auto pDealDamageSoundSwing = 0x360; // USoundCue*
		constexpr auto pDealDamageSoundStab = 0x368; // USoundCue*
		constexpr auto pSwingSound = 0x370; // USoundCue*
		constexpr auto pBlockSound = 0x378; // USoundCue*
		constexpr auto pPerfectBlockSound = 0x380; // USoundCue*
		constexpr auto pEquipHitSound = 0x388; // USoundCue*
		constexpr auto pEquipSound = 0x390; // USoundCue*
		constexpr auto pUnequipSound = 0x398; // USoundCue*
		constexpr auto pDestroyedSound = 0x3a0; // USoundCue*
		constexpr auto pPushSound = 0x3a8; // USoundCue*
		constexpr auto pHitDuringCharge = 0x3b0; // USoundCue*
		constexpr auto vSocketEmitterPairs = 0x3b8; // TArray<FSocketEmitterPair>
		constexpr auto vSocketSoundPairs = 0x3c8; // TArray<FSocketSoundPair>
		constexpr auto vSocketLightPairs = 0x3d8; // TArray<FSocketLightPair>
	}

	namespace n_UMOTooltip { // : UUserWidget
		constexpr auto pOverlay = 0x260; // UOverlay*
		constexpr auto pStolenText = 0x268; // UTextBlock*
		constexpr auto pWeightText = 0x270; // UTextBlock*
		constexpr auto pDescriptionText = 0x278; // UTextBlock*
		constexpr auto pUseDescriptionText = 0x280; // UTextBlock*
		constexpr auto pMyGridPanel = 0x288; // UGridPanel*
	}

	namespace n_ABP_AiEffectAcidPoison_C { // : AMOAiEffectActor
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
		constexpr auto vHitLocation = 0x278; // FVector
	}

	namespace n_ULevelSequenceAnimSequenceLink { // : UAssetUserData
		constexpr auto AnimSequenceLinks = 0x28; // TArray<FLevelSequenceAnimSequenceLinkItem>
	}

	namespace n_UParticleModuleMeshRotationRate_Seeded { // : UParticleModuleMeshRotationRate
		constexpr auto RandomSeedInfo = 0x78; // FParticleRandomSeedInfo
	}

	namespace n_ARuntimeVirtualTextureVolume { // : AActor
		constexpr auto VirtualTextureComponent = 0x220; // URuntimeVirtualTextureComponent*
	}

	namespace n_ULiveLinkTransformController { // : ULiveLinkControllerBase
		constexpr auto TransformData = 0x30; // FLiveLinkTransformControllerData
	}

	namespace n_AARSharedWorldGameState { // : AGameState
		constexpr auto PreviewImageData = 0x290; // TArray<char>
		constexpr auto ARWorldData = 0x2a0; // TArray<char>
		constexpr auto PreviewImageBytesTotal = 0x2b0; // int32_t
		constexpr auto ARWorldBytesTotal = 0x2b4; // int32_t
		constexpr auto PreviewImageBytesDelivered = 0x2b8; // int32_t
		constexpr auto ARWorldBytesDelivered = 0x2bc; // int32_t
	}

	namespace n_UMaterialExpressionCrossProduct { // : UMaterialExpression
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_UDestructibleMesh { // : USkeletalMesh
		constexpr auto DefaultDestructibleParameters = 0x398; // FDestructibleParameters
		constexpr auto FractureEffects = 0x420; // TArray<FFractureEffect>
	}

	namespace n_ABP_AiEffectLaser_C { // : AMOAiEffectActor
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
	}

	namespace n_UMaterialExpressionSkyAtmosphereLightDirection { // : UMaterialExpression
		constexpr auto LightIndex = 0x40; // int32_t
	}

	namespace n_UHapticFeedbackEffect_SoundWave { // : UHapticFeedbackEffect_Base
		constexpr auto SoundWave = 0x28; // USoundWave*
	}

	namespace n_UMOChatChannelButton { // : UMOUserWidget
		constexpr auto pButton = 0x2c8; // UMOButton*
		constexpr auto pTextField = 0x2d0; // UTextBlock*
		constexpr auto pChatGUI = 0x2e8; // UMOChatGUI*
	}

	namespace n_UMaterialExpressionFunctionOutput { // : UMaterialExpression
		constexpr auto OutputName = 0x40; // FName
		constexpr auto Description = 0x48; // FString
		constexpr auto SortPriority = 0x58; // int32_t
		constexpr auto A = 0x5c; // FExpressionInput
		constexpr auto bLastPreviewed = 0x70; // char : 1
		constexpr auto ID = 0x74; // FGuid
	}

	namespace n_ULuminARSessionConfig { // : UARSessionConfig
		constexpr auto PlanesQuery = 0x110; // FMagicLeapPlanesQuery
		constexpr auto MaxPlaneQueryResults = 0x170; // int32_t
		constexpr auto MinPlaneArea = 0x174; // int32_t
		constexpr auto bArbitraryOrientationPlaneDetection = 0x178; // bool
		constexpr auto PlaneSearchExtents = 0x17c; // FVector
		constexpr auto PlaneQueryFlags = 0x188; // TArray<EMagicLeapPlaneQueryFlags>
		constexpr auto bDiscardZeroExtentPlanes = 0x198; // bool
		constexpr auto bDefaultUseUnreliablePose = 0x199; // bool
	}

	namespace n_UARTexture { // : UTexture
		constexpr auto TextureType = 0xd8; // EARTextureType
		constexpr auto Timestamp = 0xdc; // float
		constexpr auto ExternalTextureGuid = 0xe0; // FGuid
		constexpr auto Size = 0xf0; // FVector2D
	}

	namespace n_UAISense_Touch { // : UAISense
		constexpr auto RegisteredEvents = 0x80; // TArray<FAITouchEvent>
	}

	namespace n_UPawnNoiseEmitterComponent { // : UActorComponent
		constexpr auto bAIPerceptionSystemCompatibilityMode = 0xb0; // char : 1
		constexpr auto LastRemoteNoisePosition = 0xb4; // FVector
		constexpr auto NoiseLifetime = 0xc0; // float
		constexpr auto LastRemoteNoiseVolume = 0xc4; // float
		constexpr auto LastRemoteNoiseTime = 0xc8; // float
		constexpr auto LastLocalNoiseVolume = 0xcc; // float
		constexpr auto LastLocalNoiseTime = 0xd0; // float
	}

	namespace n_UAudioCurveSourceComponent { // : UAudioComponent
		constexpr auto CurveSourceBindingName = 0x868; // FName
		constexpr auto CurveSyncOffset = 0x870; // float
	}

	namespace n_ABP_Magic_Ecumenical_MagicReflect_C { // : AMOMagicEffectBall
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto DefaultSceneRoot = 0x228; // USceneComponent*
		constexpr auto TravelSystem = 0x230; // UNiagaraComponent*
		constexpr auto NewVar_1 = 0x238; // ABodyFireEffect_C*
	}

	namespace n_UAISense_Hearing { // : UAISense
		constexpr auto NoiseEvents = 0x80; // TArray<FAINoiseEvent>
		constexpr auto SpeedOfSoundSq = 0x90; // float
	}

	namespace n_UMOButtonSkillWidget { // : UUserWidget
		constexpr auto pButton = 0x260; // UMOButtonSkill*
	}

	namespace n_UMOSimpleList { // : UMOUserWidget
		constexpr auto pListView = 0x2d8; // UListView*
		constexpr auto pPlayerController = 0x2e0; // AMOPlayerController*
	}

	namespace n_AMOPaperdollSceneActor { // : AMOCharacter
		constexpr auto PreviewIdleAnimationSet = 0xcb0; // UMODataAssetAnimationRandomSet*
		constexpr auto PaperdollType = 0xcb8; // EMOPaperdollActorType
		constexpr auto bPreviewEditorOnlyAppearance = 0xcb9; // bool
		constexpr auto PreviewSex = 0xcba; // ESex
		constexpr auto PreviewClade = 0xcbb; // ESpecies
		constexpr auto PreviewRace = 0xcbc; // int32_t
		constexpr auto PreviewBodyWeight = 0xcc0; // float
		constexpr auto PreviewBodyStrength = 0xcc4; // float
		constexpr auto PreviewHair = 0xcc8; // int32_t
		constexpr auto PreviewHairColor = 0xccc; // int32_t
		constexpr auto PreviewBeard = 0xcd0; // int32_t
		constexpr auto PreviewBeardColor = 0xcd4; // int32_t
		constexpr auto bPreviewShowArmor = 0xcd8; // bool
		constexpr auto PreviewArmor = 0xcdc; // int32_t
		constexpr auto bPreviewShowHelmet = 0xce0; // bool
		constexpr auto bPreviewShowCape = 0xce1; // bool
		constexpr auto bPreviewShowTorso = 0xce2; // bool
		constexpr auto bPreviewShowArmLeft = 0xce3; // bool
		constexpr auto bPreviewShowArmRight = 0xce4; // bool
		constexpr auto bPreviewShowLegs = 0xce5; // bool
		constexpr auto PreviewArmorResourceGroup = 0xce6; // EResourceGroup
		constexpr auto PreviewArmorResource = 0xce8; // int32_t
		constexpr auto PreviewEquipmentGroup = 0xcec; // EEquipmentGroup
		constexpr auto PreviewEquipmentSubgroup = 0xcf0; // int32_t
		constexpr auto PreviewEquipmentIndex = 0xcf4; // int32_t
		constexpr auto PreviewEquipmentResourceGroup = 0xcf8; // EResourceGroup
		constexpr auto PreviewEquipmentResource = 0xcfc; // int32_t
		constexpr auto fZoomAlpha = 0xd00; // float
		constexpr auto InitialTransform = 0xd10; // FTransform
		constexpr auto SceneCaptureInitialTransform = 0xd40; // FTransform
		constexpr auto LastFullscreenResolution = 0xd70; // FIntPoint
		constexpr auto bUsingCameraCloseupInCharacterCreation = 0xd78; // bool
		constexpr auto LoginCameraFaceCloseup = 0xd80; // ACineCameraActor*
		constexpr auto pPreviewDefinition = 0xd88; // UMODataAssetPlayerBaseDefinition*
		constexpr auto bUsePaperdollLightingChannels = 0xd90; // bool
		constexpr auto CameraNear = 0xd98; // ACameraActor*
		constexpr auto CameraFar = 0xda0; // ACameraActor*
		constexpr auto pSceneCaptureActor = 0xda8; // AMOSceneCapture2D*
		constexpr auto vLights = 0xdb0; // TArray<ASpotLight*>
		constexpr auto OnFullscreenRendertargetChanged = 0xdc0; // FMulticastInlineDelegate
		constexpr auto OnActiveOrFullscreenChange = 0xdd0; // FMulticastInlineDelegate
		constexpr auto PreviewRenderTarget = 0xde0; // UTextureRenderTarget2D*
		constexpr auto FullscreenRenderTarget = 0xde8; // UTextureRenderTarget2D*
	}

	namespace n_UActorComponent { // : UObject
		constexpr auto PrimaryComponentTick = 0x30; // FActorComponentTickFunction
		constexpr auto ComponentTags = 0x60; // TArray<FName>
		constexpr auto AssetUserData = 0x70; // TArray<UAssetUserData*>
		constexpr auto UCSSerializationIndex = 0x84; // int32_t
		constexpr auto bNetAddressable = 0x88; // char : 1
		constexpr auto bReplicates = 0x88; // char : 1
		constexpr auto bAutoActivate = 0x89; // char : 1
		constexpr auto bIsActive = 0x8a; // char : 1
		constexpr auto bEditableWhenInherited = 0x8a; // char : 1
		constexpr auto bCanEverAffectNavigation = 0x8a; // char : 1
		constexpr auto bIsEditorOnly = 0x8a; // char : 1
		constexpr auto CreationMethod = 0x8c; // EComponentCreationMethod
		constexpr auto OnComponentActivated = 0x8d; // FMulticastSparseDelegate
		constexpr auto OnComponentDeactivated = 0x8e; // FMulticastSparseDelegate
		constexpr auto UCSModifiedProperties = 0x90; // TArray<FSimpleMemberReference>
	}

	namespace n_USourceEffectWaveShaperPreset { // : USoundEffectSourcePreset
		constexpr auto Settings = 0x98; // FSourceEffectWaveShaperSettings
	}

	namespace n_UMOGuildStoneCreateGuild { // : UMOWidgetBlueprint
		constexpr auto pMOEditableTextBoxGuildName = 0x260; // UMOEditableTextBox*
		constexpr auto pMOButtonLargeCreate = 0x268; // UMOButtonLarge*
		constexpr auto pTextBlockValidName = 0x270; // UTextBlock*
	}

	namespace n_UBTDecorator_BlackboardBase { // : UBTDecorator
		constexpr auto BlackboardKey = 0x68; // FBlackboardKeySelector
	}

	namespace n_UMaterialExpressionFontSample { // : UMaterialExpression
		constexpr auto Font = 0x40; // UFont*
		constexpr auto FontTexturePage = 0x48; // int32_t
	}

	namespace n_UScrollBarWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto ScrollBarStyle = 0x30; // FScrollBarStyle
	}

	namespace n_UMODataAssetHandleDefinitions { // : UPrimaryDataAsset
		constexpr auto pSharedData = 0x30; // UMODataAssetEquipmentShared*
		constexpr auto pFallbackHandle = 0x38; // TSoftObjectPtr<UMODataAssetHandle>
		constexpr auto pUnarmedHandle = 0x60; // TSoftObjectPtr<UMODataAssetHandle>
		constexpr auto vHandles = 0x88; // TArray<TSoftObjectPtr<UMODataAssetHandle>>
		constexpr auto vAxe1HHandles = 0x98; // TArray<TSoftObjectPtr<UMODataAssetHandle>>
		constexpr auto vAxe2HHandles = 0xa8; // TArray<TSoftObjectPtr<UMODataAssetHandle>>
		constexpr auto vDaggerHilts = 0xb8; // TArray<TSoftObjectPtr<UMODataAssetHandle>>
		constexpr auto vHammer1HHandles = 0xc8; // TArray<TSoftObjectPtr<UMODataAssetHandle>>
		constexpr auto vHammer2HHandles = 0xd8; // TArray<TSoftObjectPtr<UMODataAssetHandle>>
		constexpr auto vPoleAxePoles = 0xe8; // TArray<TSoftObjectPtr<UMODataAssetHandle>>
		constexpr auto vPoleSwordPoles = 0xf8; // TArray<TSoftObjectPtr<UMODataAssetHandle>>
		constexpr auto vSpearPoles = 0x108; // TArray<TSoftObjectPtr<UMODataAssetHandle>>
		constexpr auto vSword1HHilts = 0x118; // TArray<TSoftObjectPtr<UMODataAssetHandle>>
		constexpr auto vSword2HHilts = 0x128; // TArray<TSoftObjectPtr<UMODataAssetHandle>>
		constexpr auto vLancePoles = 0x138; // TArray<TSoftObjectPtr<UMODataAssetHandle>>
		constexpr auto vFishingPoles = 0x148; // TArray<TSoftObjectPtr<UMODataAssetHandle>>
		constexpr auto pEquipmentPhysMaterialLeft = 0x158; // UMOPhysicalMaterial*
		constexpr auto pEquipmentPhysMaterialRight = 0x160; // UMOPhysicalMaterial*
		constexpr auto bHandlePartsArePreloaded = 0x168; // bool
		constexpr auto PreLoadedHandleParts = 0x170; // TArray<UMODataAssetHandle*>
	}

	namespace n_UWB_SplitStack_C { // : UMOSplitStack
		constexpr auto UberGraphFrame = 0x2c8; // FPointerToUberGraphFrame
		constexpr auto FadeIn = 0x2d0; // UWidgetAnimation*
		constexpr auto MOButtonSmall_Cancel = 0x2d8; // UMOButtonSmall*
		constexpr auto MOButtonSmall_Split = 0x2e0; // UMOButtonSmall*
		constexpr auto NumericDownButton = 0x2e8; // UMOButtonMinus*
		constexpr auto NumericUpButton = 0x2f0; // UMOButtonPlus*
		constexpr auto pEditableTextBoxSplit = 0x2f8; // UMOEditableTextBox*
		constexpr auto Number = 0x300; // int32_t
		constexpr auto maxNumber = 0x304; // int32_t
		constexpr auto sItemGuid = 0x308; // FString
		constexpr auto iDeposit = 0x318; // int32_t
	}

	namespace n_UTextureRenderTarget2DArray { // : UTextureRenderTarget
		constexpr auto SizeX = 0xe0; // int32_t
		constexpr auto SizeY = 0xe4; // int32_t
		constexpr auto Slices = 0xe8; // int32_t
		constexpr auto ClearColor = 0xec; // FLinearColor
		constexpr auto OverrideFormat = 0xfc; // EPixelFormat
		constexpr auto bHDR = 0xfd; // char : 1
		constexpr auto bForceLinearGamma = 0xfd; // char : 1
	}

	namespace n_UMOGuildStoneDiplomacy { // : UMOWidgetBlueprint
		constexpr auto cGuildStoneWarsListEntryClass = 0x260; // UMOUserWidget*
		constexpr auto pScrollBox = 0x268; // UMOScrollBox*
		constexpr auto pMOEditableTextChallengeName = 0x270; // UMOEditableTextBox*
		constexpr auto pChallenge = 0x278; // UMOButtonMedium*
	}

	namespace n_UWB_LoginMessageBox_C { // : UMOLoginMessageBox
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
		constexpr auto FadeOut = 0x2d8; // UWidgetAnimation*
		constexpr auto FadeIn = 0x2e0; // UWidgetAnimation*
		constexpr auto Image_102 = 0x2e8; // UImage*
		constexpr auto pBodyText = 0x2f0; // UTextBlock*
		constexpr auto pLoadingThrobber = 0x2f8; // UThrobber*
		constexpr auto bHaveBeenInQueue = 0x300; // bool
	}

	namespace n_AMatineeActorCameraAnim { // : AMatineeActor
		constexpr auto CameraAnim = 0x2c8; // UCameraAnim*
	}

	namespace n_UParticleModuleVectorFieldLocal { // : UParticleModuleVectorFieldBase
		constexpr auto VectorField = 0x30; // UVectorField*
		constexpr auto RelativeTranslation = 0x38; // FVector
		constexpr auto RelativeRotation = 0x44; // FRotator
		constexpr auto RelativeScale3D = 0x50; // FVector
		constexpr auto Intensity = 0x5c; // float
		constexpr auto Tightness = 0x60; // float
		constexpr auto bIgnoreComponentTransform = 0x64; // char : 1
		constexpr auto bTileX = 0x64; // char : 1
		constexpr auto bTileY = 0x64; // char : 1
		constexpr auto bTileZ = 0x64; // char : 1
		constexpr auto bUseFixDT = 0x64; // char : 1
	}

	namespace n_USoundNode { // : UObject
		constexpr auto ChildNodes = 0x28; // TArray<USoundNode*>
	}

	namespace n_UMapBuildDataRegistry { // : UObject
		constexpr auto LevelLightingQuality = 0x28; // ELightingBuildQuality
	}

	namespace n_UMovieSceneCameraShakeSection { // : UMovieSceneSection
		constexpr auto ShakeData = 0xe8; // FMovieSceneCameraShakeSectionData
		constexpr auto ShakeClass = 0x108; // UMatineeCameraShake*
		constexpr auto PlayScale = 0x110; // float
		constexpr auto PlaySpace = 0x114; // ECameraShakePlaySpace
		constexpr auto UserDefinedPlaySpace = 0x118; // FRotator
	}

	namespace n_ULayer { // : UObject
		constexpr auto LayerName = 0x28; // FName
		constexpr auto bIsVisible = 0x30; // char : 1
		constexpr auto ActorStats = 0x38; // TArray<FLayerActorStats>
	}

	namespace n_UAREnvironmentCaptureProbe { // : UARTrackedGeometry
		constexpr auto Extent = 0xf8; // FVector
		constexpr auto EnvironmentCaptureTexture = 0x108; // UAREnvironmentCaptureProbeTexture*
	}

	namespace n_UVehicleAnimInstance { // : UAnimInstance
		constexpr auto WheeledVehicleMovementComponent = 0xa40; // UWheeledVehicleMovementComponent*
	}

	namespace n_UMODataAssetHair { // : UPrimaryDataAsset
		constexpr auto bIsBaldVariant = 0x30; // bool
		constexpr auto pSkeletalMesh = 0x38; // USkeletalMesh*
		constexpr auto HairAnimClass = 0x40; // UAnimInstance*
		constexpr auto HairPoseAsset = 0x48; // UPoseAsset*
		constexpr auto pMaterialInstance = 0x50; // UMaterialInterface*
		constexpr auto sDisplayName = 0x58; // FText
	}

	namespace n_UMODataAssetTattooEffectTextures { // : UPrimaryDataAsset
		constexpr auto vTextureStruct = 0x30; // TArray<FMOTattooEffectTextureStruct>
	}

	namespace n_UNiagaraDataInterfaceTexture { // : UNiagaraDataInterface
		constexpr auto Texture = 0x38; // UTexture*
	}

	namespace n_UBTService_RunEQS { // : UBTService_BlackboardBase
		constexpr auto EQSRequest = 0x98; // FEQSParametrizedQueryExecutionRequest
	}

	namespace n_UBlendProfile { // : UObject
		constexpr auto OwningSkeleton = 0x30; // USkeleton*
		constexpr auto ProfileEntries = 0x38; // TArray<FBlendProfileBoneEntry>
	}

	namespace n_UDatasmithAreaLightActorTemplate { // : UDatasmithObjectTemplate
		constexpr auto LightType = 0x30; // EDatasmithAreaLightActorType
		constexpr auto LightShape = 0x31; // EDatasmithAreaLightActorShape
		constexpr auto Dimensions = 0x34; // FVector2D
		constexpr auto Color = 0x3c; // FLinearColor
		constexpr auto Intensity = 0x4c; // float
		constexpr auto IntensityUnits = 0x50; // ELightUnits
		constexpr auto Temperature = 0x54; // float
		constexpr auto IESTexture = 0x58; // TSoftObjectPtr<UTextureLightProfile>
		constexpr auto bUseIESBrightness = 0x80; // bool
		constexpr auto IESBrightnessScale = 0x84; // float
		constexpr auto Rotation = 0x88; // FRotator
		constexpr auto SourceRadius = 0x94; // float
		constexpr auto SourceLength = 0x98; // float
		constexpr auto AttenuationRadius = 0x9c; // float
	}

	namespace n_APlayerController { // : AController
		constexpr auto Player = 0x298; // UPlayer*
		constexpr auto AcknowledgedPawn = 0x2a0; // APawn*
		constexpr auto ControllingDirTrackInst = 0x2a8; // UInterpTrackInstDirector*
		constexpr auto MyHUD = 0x2b0; // AHUD*
		constexpr auto PlayerCameraManager = 0x2b8; // APlayerCameraManager*
		constexpr auto PlayerCameraManagerClass = 0x2c0; // APlayerCameraManager*
		constexpr auto bAutoManageActiveCameraTarget = 0x2c8; // bool
		constexpr auto TargetViewRotation = 0x2cc; // FRotator
		constexpr auto SmoothTargetViewRotationSpeed = 0x2e4; // float
		constexpr auto HiddenActors = 0x2f0; // TArray<AActor*>
		constexpr auto HiddenPrimitiveComponents = 0x300; // TArray<TWeakObjectPtr<UPrimitiveComponent>>
		constexpr auto LastSpectatorStateSynchTime = 0x314; // float
		constexpr auto LastSpectatorSyncLocation = 0x318; // FVector
		constexpr auto LastSpectatorSyncRotation = 0x324; // FRotator
		constexpr auto ClientCap = 0x330; // int32_t
		constexpr auto CheatManager = 0x338; // UCheatManager*
		constexpr auto CheatClass = 0x340; // UCheatManager*
		constexpr auto PlayerInput = 0x348; // UPlayerInput*
		constexpr auto ActiveForceFeedbackEffects = 0x350; // TArray<FActiveForceFeedbackEffect>
		constexpr auto bPlayerIsWaiting = 0x3d0; // char : 1
		constexpr auto NetPlayerIndex = 0x3d4; // char
		constexpr auto PendingSwapConnection = 0x410; // UNetConnection*
		constexpr auto NetConnection = 0x418; // UNetConnection*
		constexpr auto InputYawScale = 0x42c; // float
		constexpr auto InputPitchScale = 0x430; // float
		constexpr auto InputRollScale = 0x434; // float
		constexpr auto bShowMouseCursor = 0x438; // char : 1
		constexpr auto bEnableClickEvents = 0x438; // char : 1
		constexpr auto bEnableTouchEvents = 0x438; // char : 1
		constexpr auto bEnableMouseOverEvents = 0x438; // char : 1
		constexpr auto bEnableTouchOverEvents = 0x438; // char : 1
		constexpr auto bForceFeedbackEnabled = 0x438; // char : 1
		constexpr auto ForceFeedbackScale = 0x43c; // float
		constexpr auto ClickEventKeys = 0x440; // TArray<FKey>
		constexpr auto DefaultMouseCursor = 0x450; // EMouseCursor
		constexpr auto CurrentMouseCursor = 0x451; // EMouseCursor
		constexpr auto DefaultClickTraceChannel = 0x452; // ECollisionChannel
		constexpr auto CurrentClickTraceChannel = 0x453; // ECollisionChannel
		constexpr auto HitResultTraceDistance = 0x454; // float
		constexpr auto SeamlessTravelCount = 0x458; // uint16_t
		constexpr auto LastCompletedSeamlessTravelCount = 0x45a; // uint16_t
		constexpr auto InactiveStateInputComponent = 0x4d0; // UInputComponent*
		constexpr auto bShouldPerformFullTickWhenPaused = 0x4d8; // char : 1
		constexpr auto CurrentTouchInterface = 0x4f0; // UTouchInterface*
		constexpr auto SpectatorPawn = 0x548; // ASpectatorPawn*
		constexpr auto bIsLocalPlayerController = 0x554; // bool
		constexpr auto SpawnLocation = 0x558; // FVector
	}

	namespace n_UCharacterMovementComponent { // : UPawnMovementComponent
		constexpr auto CharacterOwner = 0x148; // ACharacter*
		constexpr auto GravityScale = 0x150; // float
		constexpr auto MaxStepHeight = 0x154; // float
		constexpr auto JumpZVelocity = 0x158; // float
		constexpr auto JumpOffJumpZFactor = 0x15c; // float
		constexpr auto WalkableFloorAngle = 0x160; // float
		constexpr auto WalkableFloorZ = 0x164; // float
		constexpr auto MovementMode = 0x168; // EMovementMode
		constexpr auto CustomMovementMode = 0x169; // char
		constexpr auto NetworkSmoothingMode = 0x16a; // ENetworkSmoothingMode
		constexpr auto GroundFriction = 0x16c; // float
		constexpr auto MaxWalkSpeed = 0x18c; // float
		constexpr auto MaxWalkSpeedCrouched = 0x190; // float
		constexpr auto MaxSwimSpeed = 0x194; // float
		constexpr auto MaxFlySpeed = 0x198; // float
		constexpr auto MaxCustomMovementSpeed = 0x19c; // float
		constexpr auto MaxAcceleration = 0x1a0; // float
		constexpr auto MinAnalogWalkSpeed = 0x1a4; // float
		constexpr auto BrakingFrictionFactor = 0x1a8; // float
		constexpr auto BrakingFriction = 0x1ac; // float
		constexpr auto BrakingSubStepTime = 0x1b0; // float
		constexpr auto BrakingDecelerationWalking = 0x1b4; // float
		constexpr auto BrakingDecelerationFalling = 0x1b8; // float
		constexpr auto BrakingDecelerationSwimming = 0x1bc; // float
		constexpr auto BrakingDecelerationFlying = 0x1c0; // float
		constexpr auto AirControl = 0x1c4; // float
		constexpr auto AirControlBoostMultiplier = 0x1c8; // float
		constexpr auto AirControlBoostVelocityThreshold = 0x1cc; // float
		constexpr auto FallingLateralFriction = 0x1d0; // float
		constexpr auto CrouchedHalfHeight = 0x1d4; // float
		constexpr auto Buoyancy = 0x1d8; // float
		constexpr auto PerchRadiusThreshold = 0x1dc; // float
		constexpr auto PerchAdditionalHeight = 0x1e0; // float
		constexpr auto RotationRate = 0x1e4; // FRotator
		constexpr auto bUseSeparateBrakingFriction = 0x1f0; // char : 1
		constexpr auto bApplyGravityWhileJumping = 0x1f0; // char : 1
		constexpr auto bUseControllerDesiredRotation = 0x1f0; // char : 1
		constexpr auto bOrientRotationToMovement = 0x1f0; // char : 1
		constexpr auto bSweepWhileNavWalking = 0x1f0; // char : 1
		constexpr auto bMovementInProgress = 0x1f0; // char : 1
		constexpr auto bEnableScopedMovementUpdates = 0x1f0; // char : 1
		constexpr auto bEnableServerDualMoveScopedMovementUpdates = 0x1f1; // char : 1
		constexpr auto bForceMaxAccel = 0x1f1; // char : 1
		constexpr auto bRunPhysicsWithNoController = 0x1f1; // char : 1
		constexpr auto bForceNextFloorCheck = 0x1f1; // char : 1
		constexpr auto bShrinkProxyCapsule = 0x1f1; // char : 1
		constexpr auto bCanWalkOffLedges = 0x1f1; // char : 1
		constexpr auto bCanWalkOffLedgesWhenCrouching = 0x1f1; // char : 1
		constexpr auto bNetworkSkipProxyPredictionOnNetUpdate = 0x1f2; // char : 1
		constexpr auto bNetworkAlwaysReplicateTransformUpdateTimestamp = 0x1f2; // char : 1
		constexpr auto bDeferUpdateMoveComponent = 0x1f2; // char : 1
		constexpr auto bEnablePhysicsInteraction = 0x1f2; // char : 1
		constexpr auto bTouchForceScaledToMass = 0x1f2; // char : 1
		constexpr auto bPushForceScaledToMass = 0x1f2; // char : 1
		constexpr auto bPushForceUsingZOffset = 0x1f2; // char : 1
		constexpr auto bScalePushForceToVelocity = 0x1f3; // char : 1
		constexpr auto DeferredUpdatedMoveComponent = 0x1f8; // USceneComponent*
		constexpr auto MaxOutOfWaterStepHeight = 0x200; // float
		constexpr auto OutofWaterZ = 0x204; // float
		constexpr auto Mass = 0x208; // float
		constexpr auto StandingDownwardForceScale = 0x20c; // float
		constexpr auto InitialPushForceFactor = 0x210; // float
		constexpr auto PushForceFactor = 0x214; // float
		constexpr auto PushForcePointZOffsetFactor = 0x218; // float
		constexpr auto TouchForceFactor = 0x21c; // float
		constexpr auto MinTouchForce = 0x220; // float
		constexpr auto MaxTouchForce = 0x224; // float
		constexpr auto RepulsionForce = 0x228; // float
		constexpr auto Acceleration = 0x22c; // FVector
		constexpr auto LastUpdateRotation = 0x240; // FQuat
		constexpr auto LastUpdateLocation = 0x250; // FVector
		constexpr auto LastUpdateVelocity = 0x25c; // FVector
		constexpr auto ServerLastTransformUpdateTimeStamp = 0x268; // float
		constexpr auto ServerLastClientGoodMoveAckTime = 0x26c; // float
		constexpr auto ServerLastClientAdjustmentTime = 0x270; // float
		constexpr auto PendingImpulseToApply = 0x274; // FVector
		constexpr auto PendingForceToApply = 0x280; // FVector
		constexpr auto AnalogInputModifier = 0x28c; // float
		constexpr auto MaxSimulationTimeStep = 0x29c; // float
		constexpr auto MaxSimulationIterations = 0x2a0; // int32_t
		constexpr auto MaxJumpApexAttemptsPerSimulation = 0x2a4; // int32_t
		constexpr auto MaxDepenetrationWithGeometry = 0x2a8; // float
		constexpr auto MaxDepenetrationWithGeometryAsProxy = 0x2ac; // float
		constexpr auto MaxDepenetrationWithPawn = 0x2b0; // float
		constexpr auto MaxDepenetrationWithPawnAsProxy = 0x2b4; // float
		constexpr auto NetworkSimulatedSmoothLocationTime = 0x2b8; // float
		constexpr auto NetworkSimulatedSmoothRotationTime = 0x2bc; // float
		constexpr auto ListenServerNetworkSimulatedSmoothLocationTime = 0x2c0; // float
		constexpr auto ListenServerNetworkSimulatedSmoothRotationTime = 0x2c4; // float
		constexpr auto NetProxyShrinkRadius = 0x2c8; // float
		constexpr auto NetProxyShrinkHalfHeight = 0x2cc; // float
		constexpr auto NetworkMaxSmoothUpdateDistance = 0x2d0; // float
		constexpr auto NetworkNoSmoothUpdateDistance = 0x2d4; // float
		constexpr auto NetworkMinTimeBetweenClientAckGoodMoves = 0x2d8; // float
		constexpr auto NetworkMinTimeBetweenClientAdjustments = 0x2dc; // float
		constexpr auto NetworkMinTimeBetweenClientAdjustmentsLargeCorrection = 0x2e0; // float
		constexpr auto NetworkLargeClientCorrectionDistance = 0x2e4; // float
		constexpr auto LedgeCheckThreshold = 0x2e8; // float
		constexpr auto JumpOutOfWaterPitch = 0x2ec; // float
		constexpr auto CurrentFloor = 0x2f0; // FFindFloorResult
		constexpr auto DefaultLandMovementMode = 0x388; // EMovementMode
		constexpr auto DefaultWaterMovementMode = 0x389; // EMovementMode
		constexpr auto GroundMovementMode = 0x38a; // EMovementMode
		constexpr auto bMaintainHorizontalGroundVelocity = 0x38b; // char : 1
		constexpr auto bImpartBaseVelocityX = 0x38b; // char : 1
		constexpr auto bImpartBaseVelocityY = 0x38b; // char : 1
		constexpr auto bImpartBaseVelocityZ = 0x38b; // char : 1
		constexpr auto bImpartBaseAngularVelocity = 0x38b; // char : 1
		constexpr auto bJustTeleported = 0x38b; // char : 1
		constexpr auto bNetworkUpdateReceived = 0x38b; // char : 1
		constexpr auto bNetworkMovementModeChanged = 0x38b; // char : 1
		constexpr auto bIgnoreClientMovementErrorChecksAndCorrection = 0x38c; // char : 1
		constexpr auto bServerAcceptClientAuthoritativePosition = 0x38c; // char : 1
		constexpr auto bNotifyApex = 0x38c; // char : 1
		constexpr auto bCheatFlying = 0x38c; // char : 1
		constexpr auto bWantsToCrouch = 0x38c; // char : 1
		constexpr auto bCrouchMaintainsBaseLocation = 0x38c; // char : 1
		constexpr auto bIgnoreBaseRotation = 0x38c; // char : 1
		constexpr auto bFastAttachedMove = 0x38c; // char : 1
		constexpr auto bAlwaysCheckFloor = 0x38d; // char : 1
		constexpr auto bUseFlatBaseForFloorChecks = 0x38d; // char : 1
		constexpr auto bPerformingJumpOff = 0x38d; // char : 1
		constexpr auto bWantsToLeaveNavWalking = 0x38d; // char : 1
		constexpr auto bUseRVOAvoidance = 0x38d; // char : 1
		constexpr auto bRequestedMoveUseAcceleration = 0x38d; // char : 1
		constexpr auto bWasSimulatingRootMotion = 0x38d; // char : 1
		constexpr auto bAllowPhysicsRotationDuringAnimRootMotion = 0x38e; // char : 1
		constexpr auto bHasRequestedVelocity = 0x38e; // char : 1
		constexpr auto bRequestedMoveWithMaxSpeed = 0x38e; // char : 1
		constexpr auto bWasAvoidanceUpdated = 0x38e; // char : 1
		constexpr auto bProjectNavMeshWalking = 0x38e; // char : 1
		constexpr auto bProjectNavMeshOnBothWorldChannels = 0x38e; // char : 1
		constexpr auto AvoidanceConsiderationRadius = 0x3a0; // float
		constexpr auto RequestedVelocity = 0x3a4; // FVector
		constexpr auto AvoidanceUID = 0x3b0; // int32_t
		constexpr auto AvoidanceGroup = 0x3b4; // FNavAvoidanceMask
		constexpr auto GroupsToAvoid = 0x3b8; // FNavAvoidanceMask
		constexpr auto GroupsToIgnore = 0x3bc; // FNavAvoidanceMask
		constexpr auto AvoidanceWeight = 0x3c0; // float
		constexpr auto PendingLaunchVelocity = 0x3c4; // FVector
		constexpr auto NavMeshProjectionInterval = 0x474; // float
		constexpr auto NavMeshProjectionTimer = 0x478; // float
		constexpr auto NavMeshProjectionInterpSpeed = 0x47c; // float
		constexpr auto NavMeshProjectionHeightScaleUp = 0x480; // float
		constexpr auto NavMeshProjectionHeightScaleDown = 0x484; // float
		constexpr auto NavWalkingFloorDistTolerance = 0x488; // float
		constexpr auto PostPhysicsTickFunction = 0x490; // FCharacterMovementComponentPostPhysicsTickFunction
		constexpr auto MinTimeBetweenTimeStampResets = 0x4d8; // float
		constexpr auto CurrentRootMotion = 0x988; // FRootMotionSourceGroup
		constexpr auto ServerCorrectionRootMotion = 0x9c0; // FRootMotionSourceGroup
		constexpr auto RootMotionParams = 0xa90; // FRootMotionMovementParams
		constexpr auto AnimRootMotionVelocity = 0xad0; // FVector
	}

	namespace n_UMagicLeapARPinComponent { // : USceneComponent
		constexpr auto ObjectUID = 0x1f8; // FString
		constexpr auto UserIndex = 0x208; // int32_t
		constexpr auto AutoPinType = 0x20c; // EMagicLeapAutoPinType
		constexpr auto bShouldPinActor = 0x20d; // bool
		constexpr auto PinDataClass = 0x210; // UMagicLeapARPinSaveGame*
		constexpr auto SearchPinTypes = 0x218; // TSet<EMagicLeapARPinType>
		constexpr auto SearchVolume = 0x268; // USphereComponent*
		constexpr auto OnPersistentEntityPinned = 0x270; // FMulticastInlineDelegate
		constexpr auto OnPersistentEntityPinLost = 0x280; // FMulticastInlineDelegate
		constexpr auto OnPinDataLoadAttemptCompleted = 0x290; // FMulticastInlineDelegate
		constexpr auto PinnedCFUID = 0x2a0; // FGuid
		constexpr auto PinnedSceneComponent = 0x2b0; // USceneComponent*
		constexpr auto PinData = 0x2b8; // UMagicLeapARPinSaveGame*
	}

	namespace n_UGizmoTransformChangeStateTarget { // : UObject
		constexpr auto TransactionManager = 0x50; // TScriptInterface<IToolContextTransactionProvider>
	}

	namespace n_UMOPreviewModePlacementDecoration { // : UMOPreviewModePlacement
		constexpr auto pPlayerHouse = 0xf8; // AMOAvatarStaticMeshBuildableHouse*
	}

	namespace n_UDestructibleFractureSettings { // : UObject
		constexpr auto CellSiteCount = 0x28; // int32_t
		constexpr auto FractureMaterialDesc = 0x2c; // FFractureMaterial
		constexpr auto RandomSeed = 0x50; // int32_t
		constexpr auto VoronoiSites = 0x58; // TArray<FVector>
		constexpr auto OriginalSubmeshCount = 0x68; // int32_t
		constexpr auto Materials = 0x70; // TArray<UMaterialInterface*>
		constexpr auto ChunkParameters = 0x80; // TArray<FDestructibleChunkParameters>
	}

	namespace n_UCapsuleComponent { // : UShapeComponent
		constexpr auto CapsuleHalfHeight = 0x458; // float
		constexpr auto CapsuleRadius = 0x45c; // float
	}

	namespace n_USourceEffectFilterPreset { // : USoundEffectSourcePreset
		constexpr auto Settings = 0xb0; // FSourceEffectFilterSettings
	}

	namespace n_UMODataAssetResource { // : UPrimaryDataAsset
		constexpr auto pResourceMasterMaterial = 0x30; // TSoftObjectPtr<UMaterialInstance>
		constexpr auto sDisplayName = 0x58; // FText
		constexpr auto vColor = 0x70; // FColor
		constexpr auto pHitSound = 0x78; // TSoftObjectPtr<USoundCue>
		constexpr auto pHitParticles = 0xa0; // TSoftObjectPtr<UNiagaraSystem>
	}

	namespace n_UNavArea { // : UNavAreaBase
		constexpr auto DefaultCost = 0x30; // float
		constexpr auto FixedAreaEnteringCost = 0x34; // float
		constexpr auto DrawColor = 0x38; // FColor
		constexpr auto SupportedAgents = 0x3c; // FNavAgentSelector
		constexpr auto bSupportsAgent0 = 0x40; // char : 1
		constexpr auto bSupportsAgent1 = 0x40; // char : 1
		constexpr auto bSupportsAgent2 = 0x40; // char : 1
		constexpr auto bSupportsAgent3 = 0x40; // char : 1
		constexpr auto bSupportsAgent4 = 0x40; // char : 1
		constexpr auto bSupportsAgent5 = 0x40; // char : 1
		constexpr auto bSupportsAgent6 = 0x40; // char : 1
		constexpr auto bSupportsAgent7 = 0x40; // char : 1
		constexpr auto bSupportsAgent8 = 0x41; // char : 1
		constexpr auto bSupportsAgent9 = 0x41; // char : 1
		constexpr auto bSupportsAgent10 = 0x41; // char : 1
		constexpr auto bSupportsAgent11 = 0x41; // char : 1
		constexpr auto bSupportsAgent12 = 0x41; // char : 1
		constexpr auto bSupportsAgent13 = 0x41; // char : 1
		constexpr auto bSupportsAgent14 = 0x41; // char : 1
		constexpr auto bSupportsAgent15 = 0x41; // char : 1
	}

	namespace n_UConsole { // : UObject
		constexpr auto ConsoleTargetPlayer = 0x38; // ULocalPlayer*
		constexpr auto DefaultTexture_Black = 0x40; // UTexture2D*
		constexpr auto DefaultTexture_White = 0x48; // UTexture2D*
		constexpr auto HistoryBuffer = 0x68; // TArray<FString>
	}

	namespace n_UDatasmithAssetUserData { // : UAssetUserData
		constexpr auto MetaData = 0x28; // TMap<FName, FString>
	}

	namespace n_UNavigationSystemModuleConfig { // : UNavigationSystemConfig
		constexpr auto bStrictlyStatic = 0x50; // char : 1
		constexpr auto bCreateOnClient = 0x50; // char : 1
		constexpr auto bAutoSpawnMissingNavData = 0x50; // char : 1
		constexpr auto bSpawnNavDataInNavBoundsLevel = 0x50; // char : 1
	}

	namespace n_UMaterialExpressionComment { // : UMaterialExpression
		constexpr auto SizeX = 0x40; // int32_t
		constexpr auto SizeY = 0x44; // int32_t
		constexpr auto Text = 0x48; // FString
		constexpr auto CommentColor = 0x58; // FLinearColor
		constexpr auto FontSize = 0x68; // int32_t
	}

	namespace n_UMOFrameLocalPlayer { // : UMOFrameBase
		constexpr auto pMOGameUserSettings = 0x328; // UMOGameUserSettings*
		constexpr auto pDataTableBuffs = 0x330; // UDataTable*
		constexpr auto pProgressBarMana = 0x340; // UMOUserWidgetProgressBar*
		constexpr auto pProgressBarStamina = 0x348; // UMOUserWidgetProgressBar*
		constexpr auto pProgressBarAir = 0x350; // UMOUserWidgetProgressBar*
		constexpr auto pTextBlockMana = 0x358; // UTextBlock*
		constexpr auto pTextBlockStamina = 0x360; // UTextBlock*
		constexpr auto pTextBlockAir = 0x368; // UTextBlock*
		constexpr auto pUniformGridPanel_Buffs = 0x370; // UUniformGridPanel*
		constexpr auto vBuffs = 0x378; // TArray<UMOBuff*>
		constexpr auto fBuffDeltaTime = 0x388; // float
		constexpr auto CurrentTime = 0x390; // double
	}

	namespace n_UMOSteamSubsystem { // : UEngineSubsystem
		constexpr auto OnLeaderboardResults = 0x100; // FMulticastInlineDelegate
	}

	namespace n_AMagicLeapARPinInfoActor_C { // : AMagicLeapARPinInfoActorBase
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto Right = 0x240; // UStaticMeshComponent*
		constexpr auto Forward = 0x248; // UStaticMeshComponent*
		constexpr auto Up = 0x250; // UStaticMeshComponent*
		constexpr auto ValidRadiusVisualizer = 0x258; // USphereComponent*
		constexpr auto AxisRoot = 0x260; // USceneComponent*
		constexpr auto VisualizerRoot = 0x268; // USceneComponent*
		constexpr auto TypeValue = 0x270; // UTextRenderComponent*
		constexpr auto TransErrValue = 0x278; // UTextRenderComponent*
		constexpr auto RotErrValue = 0x280; // UTextRenderComponent*
		constexpr auto ConfidenceValue = 0x288; // UTextRenderComponent*
		constexpr auto TransErrLabel = 0x290; // UTextRenderComponent*
		constexpr auto RotErrLabel = 0x298; // UTextRenderComponent*
		constexpr auto ConfidenceLabel = 0x2a0; // UTextRenderComponent*
		constexpr auto PinIDValue = 0x2a8; // UTextRenderComponent*
		constexpr auto InfoRoot = 0x2b0; // USceneComponent*
		constexpr auto Root = 0x2b8; // USceneComponent*
		constexpr auto RotationSmoothSpeed = 0x2c0; // float
	}

	namespace n_APlanarReflection { // : ASceneCapture
		constexpr auto PlanarReflectionComponent = 0x230; // UPlanarReflectionComponent*
		constexpr auto bShowPreviewPlane = 0x238; // bool
	}

	namespace n_USignificanceManager { // : UObject
		constexpr auto SignificanceManagerClassName = 0x108; // FSoftClassPath
	}

	namespace n_UGizmoBaseComponent { // : UPrimitiveComponent
		constexpr auto Color = 0x440; // FLinearColor
		constexpr auto HoverSizeMultiplier = 0x450; // float
		constexpr auto PixelHitDistanceThreshold = 0x454; // float
	}

	namespace n_URestrictedGameplayTagsList { // : UObject
		constexpr auto ConfigFileName = 0x28; // FString
		constexpr auto RestrictedGameplayTagList = 0x38; // TArray<FRestrictedGameplayTagTableRow>
	}

	namespace n_AMOAvatarStaticMeshBuildableGate { // : AMOAvatarStaticMeshBuildable
		constexpr auto pDoorComponent = 0x2f8; // UStaticMeshComponent*
	}

	namespace n_UMOChatManager { // : UMOManager
		constexpr auto pModChatManager = 0x28; // UModChatManager*
	}

	namespace n_UOculusMR_Settings { // : UObject
		constexpr auto ClippingReference = 0x28; // EOculusMR_ClippingReference
		constexpr auto bUseTrackedCameraResolution = 0x29; // bool
		constexpr auto WidthPerView = 0x2c; // int32_t
		constexpr auto HeightPerView = 0x30; // int32_t
		constexpr auto CastingLatency = 0x34; // float
		constexpr auto BackdropColor = 0x38; // FColor
		constexpr auto HandPoseStateLatency = 0x3c; // float
		constexpr auto ChromaKeyColor = 0x40; // FColor
		constexpr auto ChromaKeySimilarity = 0x44; // float
		constexpr auto ChromaKeySmoothRange = 0x48; // float
		constexpr auto ChromaKeySpillRange = 0x4c; // float
		constexpr auto ExternalCompositionPostProcessEffects = 0x50; // EOculusMR_PostProcessEffects
		constexpr auto bIsCasting = 0x51; // bool
		constexpr auto CompositionMethod = 0x52; // EOculusMR_CompositionMethod
		constexpr auto CapturingCamera = 0x53; // EOculusMR_CameraDeviceEnum
	}

	namespace n_UMOCarouselSelectText { // : UMOUserWidget
		constexpr auto vTextEntries = 0x2c8; // TArray<FText>
		constexpr auto LabelText = 0x2d8; // FText
		constexpr auto iCurrentIndex = 0x2f0; // int32_t
		constexpr auto pMOButton_Forward = 0x318; // UMOButton*
		constexpr auto pMOButton_Back = 0x320; // UMOButton*
		constexpr auto pLabelText = 0x328; // UTextBlock*
		constexpr auto pDisplayText = 0x330; // UTextBlock*
	}

	namespace n_UWB_MOCheckBoxEntry_C { // : UMOCheckBoxEntry
		constexpr auto UberGraphFrame = 0x320; // FPointerToUberGraphFrame
		constexpr auto HorizontalBox_6 = 0x328; // UHorizontalBox*
	}

	namespace n_UGeometryCacheTrackStreamable { // : UGeometryCacheTrack
		constexpr auto Codec = 0x58; // UGeometryCacheCodecBase*
		constexpr auto StartSampleTime = 0xc8; // float
	}

	namespace n_UMovieScene3DConstraintSection { // : UMovieSceneSection
		constexpr auto ConstraintId = 0xe8; // FGuid
		constexpr auto ConstraintBindingID = 0xf8; // FMovieSceneObjectBindingID
	}

	namespace n_UParticleModuleOrbitBase { // : UParticleModule
		constexpr auto bUseEmitterTime = 0x30; // char : 1
	}

	namespace n_UMOCraftingPresetListEntry { // : UMOWidgetBlueprint
		constexpr auto pTextBlockPresetName = 0x260; // UTextBlock*
		constexpr auto sPresetData = 0x268; // FString
		constexpr auto pCraftingParent = 0x278; // UMOCraftingPresets*
	}

	namespace n_UInterpFilter { // : UObject
		constexpr auto Caption = 0x28; // FString
	}

	namespace n_UMODataAssetAiChat { // : UPrimaryDataAsset
		constexpr auto vCombatAskForHelp = 0x30; // TArray<FAIChatData>
		constexpr auto vCombatFoundTarget = 0x40; // TArray<FAIChatData>
		constexpr auto vCombatTaunt = 0x50; // TArray<FAIChatData>
		constexpr auto vCombatStartAttack = 0x60; // TArray<FAIChatData>
		constexpr auto vCombatFleeing = 0x70; // TArray<FAIChatData>
		constexpr auto vCombatDying = 0x80; // TArray<FAIChatData>
		constexpr auto vGeneralLikePlayer = 0x90; // TArray<FAIChatData>
		constexpr auto vGeneralDislikePlayer = 0xa0; // TArray<FAIChatData>
		constexpr auto vGeneralRoaming = 0xb0; // TArray<FAIChatData>
	}

	namespace n_UMODragDropOperationSkill { // : UMODragDropOperation
		constexpr auto sSkillJSon = 0x88; // FString
	}

	namespace n_USourceEffectPhaserPreset { // : USoundEffectSourcePreset
		constexpr auto Settings = 0xa0; // FSourceEffectPhaserSettings
	}

	namespace n_UShaderPlatformQualitySettings { // : UObject
		constexpr auto QualityOverrides = 0x28; // FMaterialQualityOverrides [0x4]
	}

	namespace n_UWB_LoginError_C { // : UMOUserWidget
		constexpr auto UberGraphFrame = 0x2c8; // FPointerToUberGraphFrame
		constexpr auto CloseButton = 0x2d0; // UMOButtonMedium*
		constexpr auto MOButtonClose = 0x2d8; // UMOButtonClose*
		constexpr auto MOMultiLineEditableTextBox_ErrorText = 0x2e0; // UMOMultiLineEditableTextBox*
	}

	namespace n_UMovementComponent { // : UActorComponent
		constexpr auto UpdatedComponent = 0xb0; // USceneComponent*
		constexpr auto UpdatedPrimitive = 0xb8; // UPrimitiveComponent*
		constexpr auto Velocity = 0xc4; // FVector
		constexpr auto PlaneConstraintNormal = 0xd0; // FVector
		constexpr auto PlaneConstraintOrigin = 0xdc; // FVector
		constexpr auto bUpdateOnlyIfRendered = 0xe8; // char : 1
		constexpr auto bAutoUpdateTickRegistration = 0xe8; // char : 1
		constexpr auto bTickBeforeOwner = 0xe8; // char : 1
		constexpr auto bAutoRegisterUpdatedComponent = 0xe8; // char : 1
		constexpr auto bConstrainToPlane = 0xe8; // char : 1
		constexpr auto bSnapToPlaneAtStart = 0xe8; // char : 1
		constexpr auto bAutoRegisterPhysicsVolumeUpdates = 0xe8; // char : 1
		constexpr auto bComponentShouldUpdatePhysicsVolume = 0xe8; // char : 1
		constexpr auto PlaneConstraintAxisSetting = 0xeb; // EPlaneConstraintAxisSetting
	}

	namespace n_UGizmoTransformProxyTransformSource { // : UGizmoBaseTransformSource
		constexpr auto Proxy = 0x48; // UTransformProxy*
	}

	namespace n_AMOCharacterAI { // : AMOCharacter
		constexpr auto pChatMessages = 0xcb0; // UMODataAssetAiChat*
		constexpr auto pDataAssetNPCConversation = 0xcb8; // UMODataAssetNPCConversation*
	}

	namespace n_ULogoutCallbackProxy { // : UBlueprintAsyncActionBase
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UBTDecorator_KeepInCone { // : UBTDecorator
		constexpr auto ConeHalfAngle = 0x68; // float
		constexpr auto ConeOrigin = 0x70; // FBlackboardKeySelector
		constexpr auto Observed = 0x98; // FBlackboardKeySelector
		constexpr auto bUseSelfAsOrigin = 0xc0; // char : 1
		constexpr auto bUseSelfAsObserved = 0xc0; // char : 1
	}

	namespace n_UMaterialExpressionAppendVector { // : UMaterialExpression
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_UMOStablesAddPet { // : UMOUserWidget
		constexpr auto pTextBlockPetPoints = 0x2c8; // UTextBlock*
		constexpr auto pTextBlockPetPointsMax = 0x2d0; // UTextBlock*
		constexpr auto pMOScrollBox_Pets = 0x2d8; // UMOScrollBox*
		constexpr auto pCurrencyWidget = 0x2e0; // UMOCurrencyWidget*
	}

	namespace n_UMOGMOpenPetition { // : UUserWidget
		constexpr auto pMOBorder = 0x260; // UMOBorder*
		constexpr auto pTextBlock_ID = 0x268; // UTextBlock*
		constexpr auto pTextBlock_IP = 0x270; // UTextBlock*
		constexpr auto pTextBlock_Category = 0x278; // UTextBlock*
		constexpr auto pTextBlock_Name = 0x280; // UTextBlock*
		constexpr auto pTextBlock_SteamID = 0x288; // UTextBlock*
		constexpr auto pTextBlock_Server = 0x290; // UTextBlock*
		constexpr auto pTextBlock_TimeStamp = 0x298; // UTextBlock*
		constexpr auto sPlayerReportMessage = 0x2a0; // FString
		constexpr auto pMOGMHUD = 0x2b0; // UMOGMHUD*
	}

	namespace n_UMOWidgetComponentChatBubble { // : UWidgetComponent
		constexpr auto pCharacterOwner = 0x590; // AMOCharacter*
		constexpr auto pCharacterLocal = 0x598; // AMOCharacter*
		constexpr auto fLifeDefault = 0x5a4; // float
		constexpr auto fMinDistance = 0x5a8; // float
		constexpr auto fMaxDistance = 0x5ac; // float
	}

	namespace n_UMOSocial { // : UMOUserWidget
		constexpr auto vTabButtons = 0x2c8; // TArray<UMOUserWidgetTabButtonNew*>
		constexpr auto vWidgetArray = 0x2d8; // TArray<UMOUserWidget*>
		constexpr auto pTabButton_Guild = 0x2e8; // UMOUserWidgetTabButtonNew*
		constexpr auto pTabButton_Friends = 0x2f0; // UMOUserWidgetTabButtonNew*
		constexpr auto pGuildStoneMembers = 0x2f8; // UMOGuildStoneMembers*
		constexpr auto pFriends = 0x300; // UMOSocialFriends*
	}

	namespace n_UEnvQueryTest_Trace { // : UEnvQueryTest
		constexpr auto TraceData = 0x1f8; // FEnvTraceData
		constexpr auto TraceFromContext = 0x228; // FAIDataProviderBoolValue
		constexpr auto ItemHeightOffset = 0x260; // FAIDataProviderFloatValue
		constexpr auto ContextHeightOffset = 0x298; // FAIDataProviderFloatValue
		constexpr auto Context = 0x2d0; // UEnvQueryContext*
	}

	namespace n_UInterpTrackInstParticleReplay { // : UInterpTrackInst
		constexpr auto LastUpdatePosition = 0x28; // float
	}

	namespace n_ULiveLinkBasicFrameInterpolationProcessor { // : ULiveLinkFrameInterpolationProcessor
		constexpr auto bInterpolatePropertyValues = 0x28; // bool
	}

	namespace n_UARPointComponent { // : UARComponent
		constexpr auto ReplicatedPayload = 0x278; // FARPointUpdatePayload
	}

	namespace n_UNavigationSystemV1 { // : UNavigationSystemBase
		constexpr auto MainNavData = 0x28; // ANavigationData*
		constexpr auto AbstractNavData = 0x30; // ANavigationData*
		constexpr auto DefaultAgentName = 0x38; // FName
		constexpr auto CrowdManagerClass = 0x40; // TSoftClassPtr<UObject>
		constexpr auto bAutoCreateNavigationData = 0x68; // char : 1
		constexpr auto bSpawnNavDataInNavBoundsLevel = 0x68; // char : 1
		constexpr auto bAllowClientSideNavigation = 0x68; // char : 1
		constexpr auto bShouldDiscardSubLevelNavData = 0x68; // char : 1
		constexpr auto bTickWhilePaused = 0x68; // char : 1
		constexpr auto bSupportRebuilding = 0x68; // char : 1
		constexpr auto bInitialBuildingLocked = 0x68; // char : 1
		constexpr auto bSkipAgentHeightCheckWhenPickingNavData = 0x69; // char : 1
		constexpr auto bGenerateNavigationOnlyAroundNavigationInvokers = 0x69; // char : 1
		constexpr auto ActiveTilesUpdateInterval = 0x6c; // float
		constexpr auto DataGatheringMode = 0x70; // ENavDataGatheringModeConfig
		constexpr auto DirtyAreaWarningSizeThreshold = 0x74; // float
		constexpr auto SupportedAgents = 0x78; // TArray<FNavDataConfig>
		constexpr auto SupportedAgentsMask = 0x88; // FNavAgentSelector
		constexpr auto NavDataSet = 0x90; // TArray<ANavigationData*>
		constexpr auto NavDataRegistrationQueue = 0xa0; // TArray<ANavigationData*>
		constexpr auto OnNavDataRegisteredEvent = 0xc0; // FMulticastInlineDelegate
		constexpr auto OnNavigationGenerationFinishedDelegate = 0xd0; // FMulticastInlineDelegate
		constexpr auto OperationMode = 0x1bc; // FNavigationSystemRunMode
		constexpr auto DirtyAreasUpdateFreq = 0x15bc; // float
	}

	namespace n_UMaterialExpressionMultiply { // : UMaterialExpression
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_UButtonStyleAsset { // : UObject
		constexpr auto ButtonStyle = 0x28; // FButtonStyle
	}

	namespace n_APlayerStart { // : ANavigationObjectBase
		constexpr auto PlayerStartTag = 0x248; // FName
	}

	namespace n_USystemTimeTimecodeProvider { // : UTimecodeProvider
		constexpr auto FrameRate = 0x30; // FFrameRate
		constexpr auto bGenerateFullFrame = 0x38; // bool
		constexpr auto bUseHighPerformanceClock = 0x39; // bool
	}

	namespace n_UDistributionVectorConstantCurve { // : UDistributionVector
		constexpr auto ConstantCurve = 0x38; // FInterpCurveVector
		constexpr auto bLockAxes = 0x50; // char : 1
		constexpr auto LockedAxes = 0x54; // EDistributionVectorLockFlags
	}

	namespace n_UDatasmithSkyLightComponentTemplate { // : UDatasmithObjectTemplate
		constexpr auto SourceType = 0x30; // ESkyLightSourceType
		constexpr auto CubemapResolution = 0x34; // int32_t
		constexpr auto Cubemap = 0x38; // UTextureCube*
	}

	namespace n_UInterpTrackInstVisibility { // : UInterpTrackInst
		constexpr auto Action = 0x28; // EVisibilityTrackAction
		constexpr auto LastUpdatePosition = 0x2c; // float
	}

	namespace n_UAREnvironmentCaptureProbeTexture { // : UTextureCube
		constexpr auto TextureType = 0x130; // EARTextureType
		constexpr auto Timestamp = 0x134; // float
		constexpr auto ExternalTextureGuid = 0x138; // FGuid
		constexpr auto Size = 0x148; // FVector2D
	}

	namespace n_APaperFlipbookActor { // : AActor
		constexpr auto RenderComponent = 0x220; // UPaperFlipbookComponent*
	}

	namespace n_UPacketHandlerProfileConfig { // : UObject
		constexpr auto Components = 0x28; // TArray<FString>
	}

	namespace n_UUserWidget { // : UWidget
		constexpr auto ColorAndOpacity = 0x110; // FLinearColor
		constexpr auto ColorAndOpacityDelegate = 0x120; // FDelegate
		constexpr auto ForegroundColor = 0x130; // FSlateColor
		constexpr auto ForegroundColorDelegate = 0x158; // FDelegate
		constexpr auto OnVisibilityChanged = 0x168; // FMulticastInlineDelegate
		constexpr auto Padding = 0x190; // FMargin
		constexpr auto ActiveSequencePlayers = 0x1a0; // TArray<UUMGSequencePlayer*>
		constexpr auto AnimationTickManager = 0x1b0; // UUMGSequenceTickManager*
		constexpr auto StoppedSequencePlayers = 0x1b8; // TArray<UUMGSequencePlayer*>
		constexpr auto NamedSlotBindings = 0x1c8; // TArray<FNamedSlotBinding>
		constexpr auto WidgetTree = 0x1d8; // UWidgetTree*
		constexpr auto Priority = 0x1e0; // int32_t
		constexpr auto bSupportsKeyboardFocus = 0x1e4; // char : 1
		constexpr auto bIsFocusable = 0x1e4; // char : 1
		constexpr auto bStopAction = 0x1e4; // char : 1
		constexpr auto bHasScriptImplementedTick = 0x1e4; // char : 1
		constexpr auto bHasScriptImplementedPaint = 0x1e4; // char : 1
		constexpr auto TickFrequency = 0x1f0; // EWidgetTickFrequency
		constexpr auto InputComponent = 0x1f8; // UInputComponent*
		constexpr auto AnimationCallbacks = 0x200; // TArray<FAnimationEventBinding>
	}

	namespace n_UMOCraftingShield { // : UMOCrafting
		constexpr auto pScrollBox_Shield = 0x310; // UMOScrollBox*
		constexpr auto pScrollBox_ShieldFrame = 0x318; // UMOScrollBox*
		constexpr auto pItemSlotPlaceItem_ShieldCoatingMaterial = 0x320; // UMOItemSlotPlaceItem*
		constexpr auto pItemSlotPlaceItem_ShieldCoreMaterial = 0x328; // UMOItemSlotPlaceItem*
		constexpr auto pItemSlotPlaceItem_ShieldFrameMaterial = 0x330; // UMOItemSlotPlaceItem*
		constexpr auto pPreviewMaterial = 0x338; // UMaterialInstance*
		constexpr auto sShieldName = 0x340; // FString
		constexpr auto sShieldMaterialCoreName = 0x350; // FString
		constexpr auto sShieldMaterialGripName = 0x360; // FString
		constexpr auto sShieldFrameName = 0x370; // FString
		constexpr auto sShieldFrameMaterialName = 0x380; // FString
		constexpr auto vCraftingInfo_ShieldFrame = 0x398; // TArray<FShieldCraftingInfo_ShieldFrame>
		constexpr auto vCraftingInfo_Shield = 0x3a8; // TArray<FShieldCraftingInfo_Shield>
		constexpr auto vCraftingShieldGroups = 0x3b8; // TArray<UMOCraftingListEntry*>
	}

	namespace n_AMOLevelStreamingVolumeManager { // : AActor
		constexpr auto BlockingLoadVolumes = 0x220; // TArray<AMOLevelStreamingVolumeBlockingLoadVisible*>
		constexpr auto AsyncLoadVolumes = 0x230; // TArray<AMOLevelStreamingVolumeAsyncLoadHidden*>
		constexpr auto AssociatedLevels = 0x240; // TMap<FName, FMOLevelStreamingVolumeLevelInfo>
	}

	namespace n_UMOBroker { // : UMOUserWidget
		constexpr auto TimerHandle_UpdatePlayerCoins = 0x2c8; // FTimerHandle
		constexpr auto TimerHandle_CheckItems = 0x2d0; // FTimerHandle
		constexpr auto iCurTimerRepeats = 0x2d8; // int32_t
		constexpr auto vAllValidContentGuids = 0x2e0; // TArray<FString>
		constexpr auto vGuidsToIterate = 0x2f0; // TArray<FString>
		constexpr auto vInvalidCategoryIDs = 0x300; // TArray<int32_t>
		constexpr auto vInvalidSubCategoryIDs = 0x310; // TArray<int32_t>
		constexpr auto vPetListEntries = 0x320; // TArray<UMOBrokerPetListEntry*>
		constexpr auto vItemListEntries = 0x330; // TArray<UMOBrokerItemListEntry*>
		constexpr auto pMOEditableTextBox_FilterItems = 0x340; // UMOEditableTextBox*
		constexpr auto pMOEditableTextBox_ActivePage = 0x348; // UMOEditableTextBoxNumbers*
		constexpr auto pMOButton_Browse = 0x350; // UMOButton*
		constexpr auto pMOComboBox_City = 0x358; // UMOCharCreationComboBox*
		constexpr auto pMOComboBox_Sorting = 0x360; // UMOCharCreationComboBox*
		constexpr auto pMOScrollBox_Categories = 0x368; // UMOScrollBox*
		constexpr auto pMOScrollBox_Items = 0x370; // UMOScrollBox*
		constexpr auto pCanvasPanel = 0x378; // UCanvasPanel*
		constexpr auto vCategoryEntries = 0x380; // TArray<UMOBrokerCategoryEntry*>
		constexpr auto pLastSubCategoryClicked = 0x390; // UMOBrokerCategoryEntry*
		constexpr auto pMOButton_NextPage = 0x398; // UMOButton*
		constexpr auto pMOButton_PreviousPage = 0x3a0; // UMOButton*
		constexpr auto pPanel_Browse = 0x3a8; // UMOBrokerBrowsePanel*
		constexpr auto pPanel_BuyOrders = 0x3b0; // UMOBrokerBuyOrdersPanel*
		constexpr auto pPanel_CreateOrders = 0x3b8; // UMOBrokerCreateOrdersPanel*
		constexpr auto pPanel_MyMarket = 0x3c0; // UMOBrokerMyOrdersPanel*
		constexpr auto pPanel_Sell = 0x3c8; // UMOBrokerSellOrdersPanel*
		constexpr auto pPanel_SellPets = 0x3d0; // UMOBrokerSellPetsPanel*
		constexpr auto pPanel_BrowseMyPets = 0x3d8; // UMOBrokerBrowseMyPetsPanel*
		constexpr auto eCurBrokerState = 0x3e0; // EBrokerState
		constexpr auto ePrevBrokerState = 0x3e1; // EBrokerState
		constexpr auto iCurBrokerID = 0x3e4; // int32_t
		constexpr auto CurrentFilterInfo = 0x3e8; // FFilterInfo
		constexpr auto bQueryingAllowed = 0x400; // bool
		constexpr auto iCurrentPanelIndex = 0x404; // int32_t
		constexpr auto iPreviousPanelIndex = 0x408; // int32_t
		constexpr auto vPanels = 0x410; // TArray<UMOBrokerPanel*>
		constexpr auto pCircularThrobber_Loading = 0x420; // UCircularThrobber*
		constexpr auto vMOTabButtons = 0x428; // TArray<UMOUserWidgetTabButtonNew*>
		constexpr auto pMOTabButton_Browse = 0x438; // UMOUserWidgetTabButtonNew*
		constexpr auto pMOTabButton_BuyOrders = 0x440; // UMOUserWidgetTabButtonNew*
		constexpr auto pMOTabButton_MyMarket = 0x448; // UMOUserWidgetTabButtonNew*
		constexpr auto pMOCurrencyWidget_PlayerCurrency = 0x450; // UMOCurrencyWidget*
		constexpr auto pMOButton_Close = 0x458; // UMOButtonClose*
		constexpr auto pTextBlock_ListingName = 0x460; // UTextBlock*
		constexpr auto cMOCategoryClass = 0x468; // UMOBrokerCategoryEntry*
		constexpr auto cMOSubCategoryClass = 0x470; // UMOBrokerCategoryEntry*
		constexpr auto cMOItemListEntryClass = 0x478; // UMOBrokerItemListEntry*
		constexpr auto cMOPetListEntryClass = 0x480; // UMOBrokerPetListEntry*
	}

	namespace n_UMovieSceneTrackInstance { // : UObject
		constexpr auto AnimatedObject = 0x28; // UObject*
		constexpr auto bIsMasterTrackInstance = 0x30; // bool
		constexpr auto Linker = 0x38; // UMovieSceneEntitySystemLinker*
		constexpr auto Inputs = 0x40; // TArray<FMovieSceneTrackInstanceInput>
	}

	namespace n_UToFloatField { // : UFieldNodeFloat
		constexpr auto IntField = 0xb0; // UFieldNodeInt*
	}

	namespace n_ASceneCapture2D { // : ASceneCapture
		constexpr auto CaptureComponent2D = 0x230; // USceneCaptureComponent2D*
	}

	namespace n_UBlackboardKeyType_Class { // : UBlackboardKeyType
		constexpr auto BaseClass = 0x30; // UObject*
	}

	namespace n_AMOMusicList { // : AActor
		constexpr auto pTrackList = 0x220; // USoundCue*
	}

	namespace n_UMaterialExpressionDDY { // : UMaterialExpression
		constexpr auto Value = 0x40; // FExpressionInput
	}

	namespace n_UMODataAssetArmor { // : UMODataAssetEquipmentShared
		constexpr auto ArmorPartType = 0x308; // EArmorPartType
		constexpr auto pSkeletalMesh = 0x310; // TSoftObjectPtr<USkeletalMesh>
		constexpr auto AnimInstanceClass = 0x338; // TSoftClassPtr<UObject>
		constexpr auto sDisplayName = 0x360; // FText
		constexpr auto pIcon = 0x378; // UTexture2D*
		constexpr auto bFullyCoversBodyInSlot = 0x380; // bool
		constexpr auto bHideEarsIfHeadPart = 0x381; // bool
		constexpr auto bHideBeardIfHeadPart = 0x382; // bool
		constexpr auto bHidePenisIfLegsPart = 0x383; // bool
		constexpr auto bHideBreastsIfTorsoPart = 0x384; // bool
		constexpr auto bSimulateBreastsIfTorsoPart = 0x385; // bool
		constexpr auto bOverrideBreastsDefinitionIfTorsoPart = 0x386; // bool
		constexpr auto bOverrideBreastsParametersIfTorsoPart = 0x387; // bool
		constexpr auto pFootstepSound = 0x388; // TSoftObjectPtr<USoundCue>
		constexpr auto pJumpSound = 0x3b0; // TSoftObjectPtr<USoundCue>
		constexpr auto pLandingSound = 0x3d8; // TSoftObjectPtr<USoundCue>
		constexpr auto pEquipSound = 0x400; // TSoftObjectPtr<USoundCue>
		constexpr auto vSocketEmitterPairs = 0x428; // TArray<FSocketEmitterPair>
		constexpr auto vSocketSoundPairs = 0x438; // TArray<FSocketSoundPair>
	}

	namespace n_UMOGuildStoneMembers { // : UMOUserWidget
		constexpr auto cGuildStoneMemberListEntryClass = 0x2c8; // UMOUserWidget*
		constexpr auto pScrollBox = 0x2d0; // UMOScrollBox*
		constexpr auto pMOEditableTextInviteName = 0x2d8; // UMOEditableTextBox*
		constexpr auto pInviteMember = 0x2e0; // UMOButtonMedium*
		constexpr auto vGuildMemberRankName = 0x2e8; // TArray<FText>
	}

	namespace n_UInteractiveTool { // : UObject
		constexpr auto InputBehaviors = 0x48; // UInputBehaviorSet*
		constexpr auto ToolPropertyObjects = 0x50; // TArray<UObject*>
	}

	namespace n_UARFaceGeometry { // : UARTrackedGeometry
		constexpr auto LookAtTarget = 0xf8; // FVector
		constexpr auto bIsTracked = 0x104; // bool
		constexpr auto BlendShapes = 0x108; // TMap<EARFaceBlendShape, float>
		constexpr auto LeftEyeTransform = 0x190; // FTransform
		constexpr auto RightEyeTransform = 0x1c0; // FTransform
	}

	namespace n_APaperCharacter { // : ACharacter
		constexpr auto Sprite = 0x4b8; // UPaperFlipbookComponent*
	}

	namespace n_UCloudStorageBase { // : UPlatformInterfaceBase
		constexpr auto LocalCloudFiles = 0x38; // TArray<FString>
		constexpr auto bSuppressDelegateCalls = 0x48; // char : 1
	}

	namespace n_UMovieSceneCameraCutTrack { // : UMovieSceneNameableTrack
		constexpr auto bCanBlend = 0x78; // bool
		constexpr auto Sections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UMaterialExpressionMapARPassthroughCameraUV { // : UMaterialExpression
		constexpr auto Coordinates = 0x40; // FExpressionInput
	}

	namespace n_UBTDecorator_BlueprintBase { // : UBTDecorator
		constexpr auto AIOwner = 0x68; // AAIController*
		constexpr auto ActorOwner = 0x70; // AActor*
		constexpr auto ObservedKeyNames = 0x78; // TArray<FName>
		constexpr auto bShowPropertyDetails = 0x98; // char : 1
		constexpr auto bCheckConditionOnlyBlackBoardChanges = 0x98; // char : 1
		constexpr auto bIsObservingBB = 0x98; // char : 1
	}

	namespace n_UMOTaskItemListEntry { // : UMOItemListEntry
		constexpr auto pImage_SelectedBG = 0x2a0; // UImage*
		constexpr auto pImage_HoveredBG = 0x2a8; // UImage*
		constexpr auto iCuprumCost = 0x2b0; // uint64_t
		constexpr auto bSelectionState = 0x2b8; // bool
	}

	namespace n_UNodeMappingContainer { // : UObject
		constexpr auto SourceItems = 0x28; // TMap<FName, FNodeItem>
		constexpr auto TargetItems = 0x78; // TMap<FName, FNodeItem>
		constexpr auto SourceToTarget = 0xc8; // TMap<FName, FName>
		constexpr auto SourceAsset = 0x118; // TSoftObjectPtr<UObject>
		constexpr auto TargetAsset = 0x140; // TSoftObjectPtr<UObject>
	}

	namespace n_UMOUserWidgetOptionsVideo { // : UMOUserWidgetOptionsPanel
		constexpr auto bFullyInitialized = 0x2d0; // bool
		constexpr auto pMOCheckBoxEntry_Nudity = 0x2f8; // UMOCheckBoxEntry*
		constexpr auto pMOCheckBoxEntry_Gore = 0x300; // UMOCheckBoxEntry*
		constexpr auto pMOCheckBoxEntry_MotionBlur = 0x308; // UMOCheckBoxEntry*
		constexpr auto pMOCheckBoxEntry_Vsync = 0x310; // UMOCheckBoxEntry*
		constexpr auto pMOCheckBoxEntry_YConstrainedFOV = 0x318; // UMOCheckBoxEntry*
		constexpr auto pMOCheckBoxEntry_MultithreadedRendering = 0x320; // UMOCheckBoxEntry*
		constexpr auto pMOCheckBoxEntry_CharacterDistanceCPUOptimization = 0x328; // UMOCheckBoxEntry*
		constexpr auto pSlider_ResolutionScale = 0x330; // UMOOptionSliderWidget*
		constexpr auto pSlider_FieldOfView = 0x338; // UMOOptionSliderWidget*
		constexpr auto pSlider_ViewDistance = 0x340; // UMOOptionSliderWidget*
		constexpr auto pMOComboBox_WindowMode = 0x348; // UMOComboBoxStringEntry*
		constexpr auto pMOComboBox_Resolution = 0x350; // UMOComboBoxStringEntry*
		constexpr auto pMOComboBox_Shadows = 0x358; // UMOComboBoxStringEntry*
		constexpr auto pMOComboBox_Effects = 0x360; // UMOComboBoxStringEntry*
		constexpr auto pMOComboBox_AntiAliasing = 0x368; // UMOComboBoxStringEntry*
		constexpr auto pMOComboBox_DLSS = 0x370; // UMOComboBoxStringEntry*
		constexpr auto pMOComboBox_PostProcessing = 0x378; // UMOComboBoxStringEntry*
		constexpr auto pMOComboBox_Textures = 0x380; // UMOComboBoxStringEntry*
		constexpr auto pMOComboBox_Foliage = 0x388; // UMOComboBoxStringEntry*
		constexpr auto pMOComboBox_FrameRateCap = 0x390; // UMOComboBoxStringEntry*
		constexpr auto pMOButton_UseRecommendedSettings = 0x398; // UMOButtonLarge*
	}

	namespace n_UMOButtonItem { // : UMOButton
		constexpr auto sReqData = 0x438; // FRequiredData
		constexpr auto sOptData = 0x498; // FOptionalData
		constexpr auto pMaterialInstance = 0x5b0; // UMaterialInstanceDynamic*
	}

	namespace n_UClothConfigNv { // : UClothConfigCommon
		constexpr auto ClothingWindMethod = 0x28; // EClothingWindMethodNv
		constexpr auto VerticalConstraint = 0x2c; // FClothConstraintSetupNv
		constexpr auto HorizontalConstraint = 0x3c; // FClothConstraintSetupNv
		constexpr auto BendConstraint = 0x4c; // FClothConstraintSetupNv
		constexpr auto ShearConstraint = 0x5c; // FClothConstraintSetupNv
		constexpr auto SelfCollisionRadius = 0x6c; // float
		constexpr auto SelfCollisionStiffness = 0x70; // float
		constexpr auto SelfCollisionCullScale = 0x74; // float
		constexpr auto Damping = 0x78; // FVector
		constexpr auto Friction = 0x84; // float
		constexpr auto WindDragCoefficient = 0x88; // float
		constexpr auto WindLiftCoefficient = 0x8c; // float
		constexpr auto LinearDrag = 0x90; // FVector
		constexpr auto AngularDrag = 0x9c; // FVector
		constexpr auto LinearInertiaScale = 0xa8; // FVector
		constexpr auto AngularInertiaScale = 0xb4; // FVector
		constexpr auto CentrifugalInertiaScale = 0xc0; // FVector
		constexpr auto SolverFrequency = 0xcc; // float
		constexpr auto StiffnessFrequency = 0xd0; // float
		constexpr auto GravityScale = 0xd4; // float
		constexpr auto GravityOverride = 0xd8; // FVector
		constexpr auto bUseGravityOverride = 0xe4; // bool
		constexpr auto TetherStiffness = 0xe8; // float
		constexpr auto TetherLimit = 0xec; // float
		constexpr auto CollisionThickness = 0xf0; // float
		constexpr auto AnimDriveSpringStiffness = 0xf4; // float
		constexpr auto AnimDriveDamperStiffness = 0xf8; // float
		constexpr auto WindMethod = 0xfc; // EClothingWindMethod_Legacy
		constexpr auto VerticalConstraintConfig = 0x100; // FClothConstraintSetup_Legacy
		constexpr auto HorizontalConstraintConfig = 0x110; // FClothConstraintSetup_Legacy
		constexpr auto BendConstraintConfig = 0x120; // FClothConstraintSetup_Legacy
		constexpr auto ShearConstraintConfig = 0x130; // FClothConstraintSetup_Legacy
	}

	namespace n_UGizmoAxisRotationParameterSource { // : UGizmoBaseFloatParameterSource
		constexpr auto AxisSource = 0x90; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0xa0; // TScriptInterface<IGizmoTransformSource>
		constexpr auto Angle = 0xb0; // float
		constexpr auto LastChange = 0xb4; // FGizmoFloatParameterChange
		constexpr auto CurRotationAxis = 0xbc; // FVector
		constexpr auto CurRotationOrigin = 0xc8; // FVector
		constexpr auto InitialTransform = 0xe0; // FTransform
	}

	namespace n_UMaterialExpressionRuntimeVirtualTextureOutput { // : UMaterialExpressionCustomOutput
		constexpr auto BaseColor = 0x40; // FExpressionInput
		constexpr auto Specular = 0x54; // FExpressionInput
		constexpr auto Roughness = 0x68; // FExpressionInput
		constexpr auto Normal = 0x7c; // FExpressionInput
		constexpr auto WorldHeight = 0x90; // FExpressionInput
		constexpr auto Opacity = 0xa4; // FExpressionInput
		constexpr auto mask = 0xb8; // FExpressionInput
	}

	namespace n_UMaterialExpressionSceneColor { // : UMaterialExpression
		constexpr auto InputMode = 0x40; // EMaterialSceneAttributeInputMode
		constexpr auto Input = 0x44; // FExpressionInput
		constexpr auto OffsetFraction = 0x58; // FExpressionInput
		constexpr auto ConstInput = 0x6c; // FVector2D
	}

	namespace n_AMOTutorialStep { // : AActor
		constexpr auto pNextStep = 0x228; // AMOTutorialStep*
		constexpr auto pPreviousStep = 0x230; // AMOTutorialStep*
		constexpr auto pCheckUntilThisStepCompleted = 0x238; // AMOTutorialStep*
		constexpr auto bChainedTutorialSteps = 0x240; // bool
		constexpr auto sDescriptionLong = 0x248; // FText
		constexpr auto sDescriptionShort = 0x260; // FText
		constexpr auto vObjectives = 0x278; // TArray<FText>
		constexpr auto vQuestTaskEntries = 0x288; // TArray<UMOQuestTaskEntry*>
		constexpr auto sCategory = 0x298; // FText
		constexpr auto pWaypointMarker = 0x2b0; // UTexture2D*
		constexpr auto iStepMax = 0x2b8; // int32_t
		constexpr auto iStepCur = 0x2bc; // int32_t
		constexpr auto iMovePlayListIndex = 0x2c0; // int32_t
		constexpr auto cTutorialInfoClass = 0x2c8; // UMOTutorialInfo*
		constexpr auto pPreviewMesh = 0x2d0; // UStaticMeshComponent*
		constexpr auto pTextRenderComponent = 0x2d8; // UTextRenderComponent*
		constexpr auto pSpriteComponent = 0x2e0; // UBillboardComponent*
		constexpr auto bPlaceCompassMarker = 0x2e8; // bool
		constexpr auto bCheckStepEvenWhenSaved = 0x2e9; // bool
		constexpr auto eTutorialStepGroup = 0x2ea; // EMOTutorialStepGroup
	}

	namespace n_UAISense_Team { // : UAISense
		constexpr auto RegisteredEvents = 0x80; // TArray<FAITeamStimulusEvent>
	}

	namespace n_UMaterialExpressionSphereMask { // : UMaterialExpression
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto Radius = 0x68; // FExpressionInput
		constexpr auto Hardness = 0x7c; // FExpressionInput
		constexpr auto AttenuationRadius = 0x90; // float
		constexpr auto HardnessPercent = 0x94; // float
	}

	namespace n_UChaosDestructionListener { // : USceneComponent
		constexpr auto bIsCollisionEventListeningEnabled = 0x1f8; // char : 1
		constexpr auto bIsBreakingEventListeningEnabled = 0x1f8; // char : 1
		constexpr auto bIsTrailingEventListeningEnabled = 0x1f8; // char : 1
		constexpr auto CollisionEventRequestSettings = 0x1fc; // FChaosCollisionEventRequestSettings
		constexpr auto BreakingEventRequestSettings = 0x214; // FChaosBreakingEventRequestSettings
		constexpr auto TrailingEventRequestSettings = 0x22c; // FChaosTrailingEventRequestSettings
		constexpr auto ChaosSolverActors = 0x248; // TSet<AChaosSolverActor*>
		constexpr auto GeometryCollectionActors = 0x298; // TSet<AGeometryCollectionActor*>
		constexpr auto OnCollisionEvents = 0x2e8; // FMulticastInlineDelegate
		constexpr auto OnBreakingEvents = 0x2f8; // FMulticastInlineDelegate
		constexpr auto OnTrailingEvents = 0x308; // FMulticastInlineDelegate
	}

	namespace n_ABP_MusicList_C { // : AMOMusicList
		constexpr auto Billboard = 0x228; // UBillboardComponent*
	}

	namespace n_UMovieSceneEntitySystem { // : UObject
		constexpr auto Linker = 0x28; // UMovieSceneEntitySystemLinker*
	}

	namespace n_ALevelSequenceMediaController { // : AActor
		constexpr auto Sequence = 0x228; // ALevelSequenceActor*
		constexpr auto MediaComponent = 0x230; // UMediaComponent*
		constexpr auto ServerStartTimeSeconds = 0x238; // float
	}

	namespace n_ARadialForceActor { // : ARigidBodyBase
		constexpr auto ForceComponent = 0x220; // URadialForceComponent*
	}

	namespace n_UAnimNotify_PlaySound { // : UAnimNotify
		constexpr auto Sound = 0x38; // USoundBase*
		constexpr auto VolumeMultiplier = 0x40; // float
		constexpr auto PitchMultiplier = 0x44; // float
		constexpr auto bFollow = 0x48; // char : 1
		constexpr auto AttachName = 0x4c; // FName
	}

	namespace n_USoundAttenuation { // : UObject
		constexpr auto Attenuation = 0x28; // FSoundAttenuationSettings
	}

	namespace n_USoundEffectSourcePresetChain { // : UObject
		constexpr auto Chain = 0x28; // TArray<FSourceEffectChainEntry>
		constexpr auto bPlayEffectChainTails = 0x38; // char : 1
	}

	namespace n_ANavModifierVolume { // : AVolume
		constexpr auto AreaClass = 0x260; // UNavArea*
		constexpr auto bMaskFillCollisionUnderneathForNavmesh = 0x268; // bool
	}

	namespace n_UEnvQuery { // : UDataAsset
		constexpr auto QueryName = 0x30; // FName
		constexpr auto Options = 0x38; // TArray<UEnvQueryOption*>
	}

	namespace n_USourceEffectStereoDelayPreset { // : USoundEffectSourcePreset
		constexpr auto Settings = 0xb4; // FSourceEffectStereoDelaySettings
	}

	namespace n_UMOHavenInstanceSelect { // : UMOUserWidget
		constexpr auto pTextBlock_InstanceName = 0x2c8; // UTextBlock*
		constexpr auto pMOEditableBox_HavenCode = 0x2d0; // UMOEditableTextBox*
		constexpr auto pMOButtonHold_Confirm = 0x2d8; // UMOButtonHold*
	}

	namespace n_UMaterialExpressionConstantBiasScale { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Bias = 0x54; // float
		constexpr auto Scale = 0x58; // float
	}

	namespace n_UClothingAssetBase { // : UObject
		constexpr auto ImportedFilePath = 0x28; // FString
		constexpr auto AssetGuid = 0x38; // FGuid
	}

	namespace n_UModularSynthComponent { // : USynthComponent
		constexpr auto VoiceCount = 0x6c0; // int32_t
	}

	namespace n_UDistributionVector { // : UDistribution
		constexpr auto bCanBeBaked = 0x30; // char : 1
		constexpr auto bIsDirty = 0x30; // char : 1
		constexpr auto bBakedDataSuccesfully = 0x30; // char : 1
	}

	namespace n_UTransformGizmo { // : UInteractiveGizmo
		constexpr auto ActiveTarget = 0x40; // UTransformProxy*
		constexpr auto bSnapToWorldGrid = 0x48; // bool
		constexpr auto bGridSizeIsExplicit = 0x49; // bool
		constexpr auto ExplicitGridSize = 0x4c; // FVector
		constexpr auto bRotationGridSizeIsExplicit = 0x58; // bool
		constexpr auto ExplicitRotationGridSize = 0x5c; // FRotator
		constexpr auto bSnapToWorldRotGrid = 0x68; // bool
		constexpr auto bUseContextCoordinateSystem = 0x69; // bool
		constexpr auto CurrentCoordinateSystem = 0x6c; // EToolContextCoordinateSystem
		constexpr auto ActiveComponents = 0x100; // TArray<UPrimitiveComponent*>
		constexpr auto NonuniformScaleComponents = 0x110; // TArray<UPrimitiveComponent*>
		constexpr auto ActiveGizmos = 0x120; // TArray<UInteractiveGizmo*>
		constexpr auto CameraAxisSource = 0x140; // UGizmoConstantFrameAxisSource*
		constexpr auto AxisXSource = 0x148; // UGizmoComponentAxisSource*
		constexpr auto AxisYSource = 0x150; // UGizmoComponentAxisSource*
		constexpr auto AxisZSource = 0x158; // UGizmoComponentAxisSource*
		constexpr auto UnitAxisXSource = 0x160; // UGizmoComponentAxisSource*
		constexpr auto UnitAxisYSource = 0x168; // UGizmoComponentAxisSource*
		constexpr auto UnitAxisZSource = 0x170; // UGizmoComponentAxisSource*
		constexpr auto StateTarget = 0x178; // UGizmoTransformChangeStateTarget*
		constexpr auto ScaledTransformSource = 0x180; // UGizmoScaledTransformSource*
	}

	namespace n_UPhysicsConstraintTemplate { // : UObject
		constexpr auto DefaultInstance = 0x28; // FConstraintInstance
		constexpr auto ProfileHandles = 0x1e8; // TArray<FPhysicsConstraintProfileHandle>
		constexpr auto DefaultProfile = 0x1f8; // FConstraintProfileProperties
	}

	namespace n_UMicroTransactionBase { // : UPlatformInterfaceBase
		constexpr auto AvailableProducts = 0x38; // TArray<FPurchaseInfo>
		constexpr auto LastError = 0x48; // FString
		constexpr auto LastErrorSolution = 0x58; // FString
	}

	namespace n_AMOSunSky { // : AActor
		constexpr auto vSkyMaterials = 0x220; // TArray<UMaterialInstanceDynamic*>
	}

	namespace n_UNiagaraDataInterfaceArrayInt32 { // : UNiagaraDataInterfaceArray
		constexpr auto IntData = 0x50; // TArray<int32_t>
	}

	namespace n_USynthSound { // : USoundWaveProcedural
		constexpr auto OwningSynthComponent = 0x3c0; // USynthComponent*
	}

	namespace n_UGizmoCircleComponent { // : UGizmoBaseComponent
		constexpr auto Normal = 0x460; // FVector
		constexpr auto Radius = 0x46c; // float
		constexpr auto Thickness = 0x470; // float
		constexpr auto NumSides = 0x474; // int32_t
		constexpr auto bViewAligned = 0x478; // bool
		constexpr auto bOnlyAllowFrontFacingHits = 0x479; // bool
	}

	namespace n_UMOEquipmentMeleeComponent { // : UMOEquipmentComponent
		constexpr auto pHeadComponent = 0xf8; // UStaticMeshComponent*
		constexpr auto pHandleComponent = 0x100; // UStaticMeshComponent*
		constexpr auto pSwingTrailParticleSystemComponent = 0x108; // UParticleSystemComponent*
		constexpr auto pBloodTrailParticleSystemComponent = 0x110; // UParticleSystemComponent*
		constexpr auto pDataAssetHandle = 0x118; // UMODataAssetHandle*
		constexpr auto pDataAssetHead = 0x120; // UMODataAssetHead*
		constexpr auto sEquipmentData = 0x128; // FMOWeaponData
		constexpr auto pHandleMID = 0x158; // UMaterialInstanceDynamic*
		constexpr auto pHeadMID = 0x160; // UMaterialInstanceDynamic*
	}

	namespace n_UWB_OptionsSlider_C { // : UMOOptionSliderWidget
		constexpr auto UberGraphFrame = 0x330; // FPointerToUberGraphFrame
		constexpr auto Input = 0x338; // UImage*
		constexpr auto Percentage_Text = 0x340; // UTextBlock*
		constexpr auto Shadow = 0x348; // UImage*
		constexpr auto SizeBox_1 = 0x350; // USizeBox*
		constexpr auto Underline = 0x358; // UImage*
		constexpr auto fMinValue = 0x360; // float
		constexpr auto fMaxValue = 0x364; // float
		constexpr auto fOptionsSliderValue = 0x368; // float
		constexpr auto fOptionsSliderModifier = 0x36c; // float
		constexpr auto AppendEndOfStringWith = 0x370; // FString
		constexpr auto bRoundOutVariable = 0x380; // bool
		constexpr auto fPrecisionPower = 0x384; // float
		constexpr auto ToolTip = 0x388; // FText
		constexpr auto TestVariable = 0x3a0; // float
		constexpr auto BackgroundIsVisible = 0x3a4; // bool
	}

	namespace n_UParticleModuleLifetime { // : UParticleModuleLifetimeBase
		constexpr auto LifeTime = 0x30; // FRawDistributionFloat
	}

	namespace n_UWB_MOColorPicker_C { // : UMOColorPicker
		constexpr auto Image_132 = 0x300; // UImage*
	}

	namespace n_UAudioComponent { // : USceneComponent
		constexpr auto Sound = 0x1f8; // USoundBase*
		constexpr auto InstanceParameters = 0x200; // TArray<FAudioComponentParam>
		constexpr auto SoundClassOverride = 0x210; // USoundClass*
		constexpr auto bAutoDestroy = 0x218; // char : 1
		constexpr auto bStopWhenOwnerDestroyed = 0x218; // char : 1
		constexpr auto bShouldRemainActiveIfDropped = 0x218; // char : 1
		constexpr auto bAllowSpatialization = 0x218; // char : 1
		constexpr auto bOverrideAttenuation = 0x218; // char : 1
		constexpr auto bOverrideSubtitlePriority = 0x218; // char : 1
		constexpr auto bIsUISound = 0x218; // char : 1
		constexpr auto bEnableLowPassFilter = 0x218; // char : 1
		constexpr auto bOverridePriority = 0x219; // char : 1
		constexpr auto bSuppressSubtitles = 0x219; // char : 1
		constexpr auto bAutoManageAttachment = 0x21a; // char : 1
		constexpr auto AudioComponentUserID = 0x220; // FName
		constexpr auto PitchModulationMin = 0x228; // float
		constexpr auto PitchModulationMax = 0x22c; // float
		constexpr auto VolumeModulationMin = 0x230; // float
		constexpr auto VolumeModulationMax = 0x234; // float
		constexpr auto VolumeMultiplier = 0x238; // float
		constexpr auto EnvelopeFollowerAttackTime = 0x23c; // int32_t
		constexpr auto EnvelopeFollowerReleaseTime = 0x240; // int32_t
		constexpr auto Priority = 0x244; // float
		constexpr auto SubtitlePriority = 0x248; // float
		constexpr auto SourceEffectChain = 0x250; // USoundEffectSourcePresetChain*
		constexpr auto PitchMultiplier = 0x258; // float
		constexpr auto LowPassFilterFrequency = 0x25c; // float
		constexpr auto AttenuationSettings = 0x268; // USoundAttenuation*
		constexpr auto AttenuationOverrides = 0x270; // FSoundAttenuationSettings
		constexpr auto ConcurrencySettings = 0x610; // USoundConcurrency*
		constexpr auto ConcurrencySet = 0x618; // TSet<USoundConcurrency*>
		constexpr auto AutoAttachLocationRule = 0x674; // EAttachmentRule
		constexpr auto AutoAttachRotationRule = 0x675; // EAttachmentRule
		constexpr auto AutoAttachScaleRule = 0x676; // EAttachmentRule
		constexpr auto ModulationRouting = 0x678; // FSoundModulationDefaultRoutingSettings
		constexpr auto OnAudioPlayStateChanged = 0x6c0; // FMulticastInlineDelegate
		constexpr auto OnAudioVirtualizationChanged = 0x6e8; // FMulticastInlineDelegate
		constexpr auto OnAudioFinished = 0x710; // FMulticastInlineDelegate
		constexpr auto OnAudioPlaybackPercent = 0x738; // FMulticastInlineDelegate
		constexpr auto OnAudioSingleEnvelopeValue = 0x760; // FMulticastInlineDelegate
		constexpr auto OnAudioMultiEnvelopeValue = 0x788; // FMulticastInlineDelegate
		constexpr auto OnQueueSubtitles = 0x7b0; // FDelegate
		constexpr auto AutoAttachParent = 0x7c0; // TWeakObjectPtr<USceneComponent>
		constexpr auto AutoAttachSocketName = 0x7c8; // FName
	}

	namespace n_UInGameAdManager { // : UPlatformInterfaceBase
		constexpr auto bShouldPauseWhileAdOpen = 0x38; // char : 1
		constexpr auto ClickedBannerDelegates = 0x40; // TArray<FDelegate>
		constexpr auto ClosedAdDelegates = 0x50; // TArray<FDelegate>
	}

	namespace n_UNiagaraDataInterfaceGrid2D { // : UNiagaraDataInterfaceRWBase
		constexpr auto NumCellsX = 0xd8; // int32_t
		constexpr auto NumCellsY = 0xdc; // int32_t
		constexpr auto NumCellsMaxAxis = 0xe0; // int32_t
		constexpr auto NumAttributes = 0xe4; // int32_t
		constexpr auto SetGridFromMaxAxis = 0xe8; // bool
		constexpr auto WorldBBoxSize = 0xec; // FVector2D
	}

	namespace n_UParticleModuleSpawnPerUnit { // : UParticleModuleSpawnBase
		constexpr auto UnitScalar = 0x38; // float
		constexpr auto MovementTolerance = 0x3c; // float
		constexpr auto SpawnPerUnit = 0x40; // FRawDistributionFloat
		constexpr auto MaxFrameDistance = 0x70; // float
		constexpr auto bIgnoreSpawnRateWhenMoving = 0x74; // char : 1
		constexpr auto bIgnoreMovementAlongX = 0x74; // char : 1
		constexpr auto bIgnoreMovementAlongY = 0x74; // char : 1
		constexpr auto bIgnoreMovementAlongZ = 0x74; // char : 1
	}

	namespace n_UListViewBase { // : UWidget
		constexpr auto EntryWidgetClass = 0x108; // UUserWidget*
		constexpr auto WheelScrollMultiplier = 0x110; // float
		constexpr auto bEnableScrollAnimation = 0x114; // bool
		constexpr auto bEnableFixedLineOffset = 0x115; // bool
		constexpr auto FixedLineScrollOffset = 0x118; // float
		constexpr auto BP_OnEntryGenerated = 0x120; // FMulticastInlineDelegate
		constexpr auto BP_OnEntryReleased = 0x130; // FMulticastInlineDelegate
		constexpr auto EntryWidgetPool = 0x140; // FUserWidgetPool
	}

	namespace n_AMOStaticMeshActorUseContinent { // : AMOStaticMeshActorUse
		constexpr auto m_iContinentToSwitchTo = 0x2b0; // int32_t
		constexpr auto m_bHACK_MOVE_TO_MYRLAND_AND_USE_CONTINENT_AS_LOCATION = 0x2b4; // bool
	}

	namespace n_UGameplayTask_SpawnActor { // : UGameplayTask
		constexpr auto Success = 0x68; // FMulticastInlineDelegate
		constexpr auto DidNotSpawn = 0x78; // FMulticastInlineDelegate
		constexpr auto ClassToSpawn = 0xa0; // AActor*
	}

	namespace n_UNoiseField { // : UFieldNodeFloat
		constexpr auto MinRange = 0xb0; // float
		constexpr auto MaxRange = 0xb4; // float
		constexpr auto Transform = 0xc0; // FTransform
	}

	namespace n_UWB_CladeGiftsButton_C { // : UMOCladeGiftButton
		constexpr auto UberGraphFrame = 0x300; // FPointerToUberGraphFrame
		constexpr auto AnimateActivate = 0x308; // UWidgetAnimation*
		constexpr auto GiftLearned = 0x310; // UWidgetAnimation*
		constexpr auto ImageShine = 0x318; // UImage*
		constexpr auto pBackgroundActive = 0x320; // UImage*
		constexpr auto pBackgroundPulse = 0x328; // UImage*
		constexpr auto RingCounter = 0x330; // UImage*
		constexpr auto CladeGiftIndex = 0x338; // int32_t
		constexpr auto sTooltipBase = 0x340; // FText
		constexpr auto MOPaperdollCladeGifts = 0x358; // UMOPaperdollCladeGifts*
		constexpr auto SlotImage = 0x360; // UTexture*
		constexpr auto CladeGiftName = 0x368; // FName
		constexpr auto CladeGiftsButtonManagerReference = 0x370; // UWB_CladeButtonManager_C*
		constexpr auto bActive = 0x378; // bool
		constexpr auto bCanBeActive = 0x379; // bool
		constexpr auto bHoldingToActivate = 0x37a; // bool
		constexpr auto pAudioComponent = 0x380; // UAudioComponent*
	}

	namespace n_AMOClouds { // : AActor
		constexpr auto fCloudDensity = 0x220; // float
		constexpr auto fCloudCoverage = 0x224; // float
		constexpr auto vSkyMaterials = 0x228; // TArray<UMaterialInstanceDynamic*>
	}

	namespace n_UBlackboardKeyType_Object { // : UBlackboardKeyType
		constexpr auto BaseClass = 0x30; // UObject*
	}

	namespace n_ULandscapeSplineSegment { // : UObject
		constexpr auto Connections = 0x28; // FLandscapeSplineSegmentConnection [0x2]
		constexpr auto SplineInfo = 0x58; // FInterpCurveVector
		constexpr auto Points = 0x70; // TArray<FLandscapeSplineInterpPoint>
		constexpr auto Bounds = 0x80; // FBox
		constexpr auto LocalMeshComponents = 0xa0; // TArray<USplineMeshComponent*>
	}

	namespace n_UVirtualTexture2D { // : UTexture2D
		constexpr auto Settings = 0x100; // FVirtualTextureBuildSettings
		constexpr auto bContinuousUpdate = 0x10c; // bool
		constexpr auto bSinglePhysicalSpace = 0x10d; // bool
	}

	namespace n_UInterpTrackLinearColorProp { // : UInterpTrackLinearColorBase
		constexpr auto PropertyName = 0x90; // FName
	}

	namespace n_UMaterialExpressionMaterialAttributeLayers { // : UMaterialExpression
		constexpr auto ParameterName = 0x40; // FName
		constexpr auto ExpressionGUID = 0x48; // FGuid
		constexpr auto Input = 0x58; // FMaterialAttributesInput
		constexpr auto DefaultLayers = 0x70; // FMaterialLayersFunctions
		constexpr auto LayerCallers = 0xb0; // TArray<UMaterialExpressionMaterialFunctionCall*>
		constexpr auto NumActiveLayerCallers = 0xc0; // int32_t
		constexpr auto BlendCallers = 0xc8; // TArray<UMaterialExpressionMaterialFunctionCall*>
		constexpr auto NumActiveBlendCallers = 0xd8; // int32_t
		constexpr auto bIsLayerGraphBuilt = 0xdc; // bool
	}

	namespace n_UPawnAction { // : UObject
		constexpr auto ChildAction = 0x28; // UPawnAction*
		constexpr auto ParentAction = 0x30; // UPawnAction*
		constexpr auto OwnerComponent = 0x38; // UPawnActionsComponent*
		constexpr auto Instigator = 0x40; // UObject*
		constexpr auto BrainComp = 0x48; // UBrainComponent*
		constexpr auto bAllowNewSameClassInstance = 0x80; // char : 1
		constexpr auto bReplaceActiveSameClassInstance = 0x80; // char : 1
		constexpr auto bShouldPauseMovement = 0x80; // char : 1
		constexpr auto bAlwaysNotifyOnFinished = 0x80; // char : 1
	}

	namespace n_UARCandidateObject { // : UDataAsset
		constexpr auto CandidateObjectData = 0x30; // TArray<char>
		constexpr auto FriendlyName = 0x40; // FString
		constexpr auto BoundingBox = 0x50; // FBox
	}

	namespace n_UParticleModuleRotation_Seeded { // : UParticleModuleRotation
		constexpr auto RandomSeedInfo = 0x60; // FParticleRandomSeedInfo
	}

	namespace n_UParticleModuleVectorFieldRotationRate { // : UParticleModuleVectorFieldBase
		constexpr auto RotationRate = 0x30; // FVector
	}

	namespace n_UBTDecorator_Blackboard { // : UBTDecorator_BlackboardBase
		constexpr auto IntValue = 0x90; // int32_t
		constexpr auto FloatValue = 0x94; // float
		constexpr auto StringValue = 0x98; // FString
		constexpr auto CachedDescription = 0xa8; // FString
		constexpr auto OperationType = 0xb8; // char
		constexpr auto NotifyObserver = 0xb9; // EBTBlackboardRestart
	}

	namespace n_UNiagaraDataInterfaceRenderTarget2D { // : UNiagaraDataInterfaceRWBase
		constexpr auto Size = 0xd8; // FIntPoint
		constexpr auto OverrideRenderTargetFormat = 0xe0; // ETextureRenderTargetFormat
		constexpr auto bOverrideFormat = 0xe1; // char : 1
		constexpr auto RenderTargetUserParameter = 0xe8; // FNiagaraUserParameterBinding
		constexpr auto ManagedRenderTargets = 0x108; // TMap<uint64_t, UTextureRenderTarget2D*>
	}

	namespace n_UComponentDelegateBinding { // : UDynamicBlueprintBinding
		constexpr auto ComponentDelegateBindings = 0x28; // TArray<FBlueprintComponentDelegateBinding>
	}

	namespace n_UParticleModuleAccelerationBase { // : UParticleModule
		constexpr auto bAlwaysInWorldSpace = 0x30; // char : 1
	}

	namespace n_UMOBuildable { // : UMOUserWidget
		constexpr auto pMOButton_Close = 0x2d0; // UMOButtonClose*
		constexpr auto vTabButtons = 0x2d8; // TArray<UMOUserWidgetTabButtonNew*>
		constexpr auto pMOTabButton_Info = 0x2e8; // UMOUserWidgetTabButtonNew*
		constexpr auto pMOTabButton_Upkeep = 0x2f0; // UMOUserWidgetTabButtonNew*
		constexpr auto pMOTabButton_Settings = 0x2f8; // UMOUserWidgetTabButtonNew*
		constexpr auto vPanels = 0x300; // TArray<UMOBuildablePanel*>
		constexpr auto pMOAvatarStaticMeshBuildable = 0x310; // AMOAvatarStaticMeshBuildable*
		constexpr auto pMOBuildableInfo = 0x318; // UMOBuildableInfoPanel*
		constexpr auto pMOBuildableUpkeep = 0x320; // UMOBuildableUpkeepPanel*
		constexpr auto pMOBuildableSettings = 0x328; // UMOBuildableSettingsPanel*
		constexpr auto pTextBlock_PanelName = 0x330; // UTextBlock*
	}

	namespace n_ABP_MOPaperdollSceneActor_C { // : AMOPaperdollSceneActor
		constexpr auto UberGraphFrame = 0xe10; // FPointerToUberGraphFrame
		constexpr auto Timeline_0_fAnimate_0427BD824690110BB9A500B1B94A3E59 = 0xe18; // float
		constexpr auto Timeline_0__Direction_0427BD824690110BB9A500B1B94A3E59 = 0xe1c; // ETimelineDirection
		constexpr auto Timeline_1 = 0xe20; // UTimelineComponent*
		constexpr auto sDefaultEquipment = 0xe28; // FMOFullEquipmentData
		constexpr auto sDefaultDecoration = 0x1058; // FMOCharacterDecorationData
		constexpr auto sDefaultBody = 0x10a0; // FMOCharacterBodyData
		constexpr auto bDissolved = 0x10d0; // bool
		constexpr auto NearCamearOffset = 0x10d4; // FVector
		constexpr auto CameraRoot = 0x10e0; // AActor*
	}

	namespace n_UWorldComposition { // : UObject
		constexpr auto TilesStreaming = 0x48; // TArray<ULevelStreaming*>
		constexpr auto TilesStreamingTimeThreshold = 0x58; // double
		constexpr auto bLoadAllTilesDuringCinematic = 0x60; // bool
		constexpr auto bRebaseOriginIn3DSpace = 0x61; // bool
		constexpr auto RebaseOriginDistance = 0x64; // float
	}

	namespace n_UAIPerceptionSystem { // : UAISubsystem
		constexpr auto Senses = 0x88; // TArray<UAISense*>
		constexpr auto PerceptionAgingRate = 0x98; // float
	}

	namespace n_UMOUserWidgetProgressBar { // : UMOUserWidget
		constexpr auto pImageHighlights = 0x2c8; // UImage*
		constexpr auto pImageBar = 0x2d0; // UImage*
		constexpr auto pImageBarLerp = 0x2d8; // UImage*
		constexpr auto pImageGreybar = 0x2e0; // UImage*
		constexpr auto FillColorAndOpacity = 0x2f4; // FLinearColor
	}

	namespace n_UCommandlet { // : UObject
		constexpr auto HelpDescription = 0x28; // FString
		constexpr auto HelpUsage = 0x38; // FString
		constexpr auto HelpWebLink = 0x48; // FString
		constexpr auto HelpParamNames = 0x58; // TArray<FString>
		constexpr auto HelpParamDescriptions = 0x68; // TArray<FString>
		constexpr auto IsServer = 0x78; // char : 1
		constexpr auto IsClient = 0x78; // char : 1
		constexpr auto IsEditor = 0x78; // char : 1
		constexpr auto LogToConsole = 0x78; // char : 1
		constexpr auto ShowErrorCount = 0x78; // char : 1
		constexpr auto ShowProgress = 0x78; // char : 1
	}

	namespace n_UDatasmithLandscapeTemplate { // : UDatasmithObjectTemplate
		constexpr auto LandscapeMaterial = 0x30; // UMaterialInterface*
		constexpr auto StaticLightingLOD = 0x38; // int32_t
	}

	namespace n_UMOKVOIPSubsystem { // : UGameInstanceSubsystem
		constexpr auto loggedInPlayerSteamID = 0x38; // FString
		constexpr auto OnVoiceFeedbackTick = 0x50; // FMulticastInlineDelegate
	}

	namespace n_UAsyncTask_LoadXRDeviceVisComponent { // : UBlueprintAsyncActionBase
		constexpr auto OnModelLoaded = 0x30; // FMulticastInlineDelegate
		constexpr auto OnLoadFailure = 0x40; // FMulticastInlineDelegate
		constexpr auto SpawnedComponent = 0x58; // UPrimitiveComponent*
	}

	namespace n_UVOIPTalker { // : UActorComponent
		constexpr auto Settings = 0xb0; // FVoiceSettings
	}

	namespace n_ANavigationObjectBase { // : AActor
		constexpr auto CapsuleComponent = 0x228; // UCapsuleComponent*
		constexpr auto GoodSprite = 0x230; // UBillboardComponent*
		constexpr auto BadSprite = 0x238; // UBillboardComponent*
		constexpr auto bIsPIEPlayerStart = 0x240; // char : 1
	}

	namespace n_UBaseMediaSource { // : UMediaSource
		constexpr auto PlayerName = 0x80; // FName
	}

	namespace n_AMOLevelStreamingGrid { // : AActor
		constexpr auto bInitialized = 0x220; // bool
		constexpr auto Root = 0x228; // USceneComponent*
		constexpr auto TickUpdateDelay = 0x230; // float
		constexpr auto TileSize = 0x234; // float
		constexpr auto GridSize = 0x238; // int32_t
		constexpr auto bReverseX = 0x23c; // bool
		constexpr auto bReverseY = 0x23d; // bool
		constexpr auto bDrawDebug = 0x23e; // bool
		constexpr auto bShowInPIE = 0x23f; // bool
		constexpr auto StreamingDistances = 0x240; // FMOLevelStreamingDistanceZones
		constexpr auto StreamingDistancesFactorLOD1 = 0x24c; // float
		constexpr auto StreamingDistancesLOD0 = 0x250; // FMOLevelStreamingDistanceZones
		constexpr auto StreamingDistancesLOD1 = 0x25c; // FMOLevelStreamingDistanceZones
		constexpr auto TickTimer = 0x268; // float
		constexpr auto LOD0Tiles = 0x270; // TArray<FMOLevelStreamingGridTile>
		constexpr auto LOD1Tiles = 0x280; // TArray<FMOLevelStreamingGridTile>
		constexpr auto LOD2Tiles = 0x290; // TArray<FMOLevelStreamingGridTile>
		constexpr auto GridSizeLOD = 0x2a0; // int32_t
		constexpr auto TileSizeLOD = 0x2a4; // float
		constexpr auto GridLastIndex = 0x2a8; // int32_t
		constexpr auto GridLastIndexLOD = 0x2ac; // int32_t
		constexpr auto TileExtents = 0x2b0; // float
		constexpr auto TileExtentsLOD = 0x2b4; // float
		constexpr auto GridOrigin = 0x2b8; // FVector
	}

	namespace n_UMOUserWidgetCarouselSelect { // : UMOUserWidget
		constexpr auto iSelectIndex = 0x2c8; // int32_t
		constexpr auto bValidSelection = 0x2cc; // bool
	}

	namespace n_ULightComponent { // : ULightComponentBase
		constexpr auto Temperature = 0x228; // float
		constexpr auto MaxDrawDistance = 0x22c; // float
		constexpr auto MaxDistanceFadeRange = 0x230; // float
		constexpr auto bUseTemperature = 0x234; // char : 1
		constexpr auto ShadowMapChannel = 0x238; // int32_t
		constexpr auto MinRoughness = 0x240; // float
		constexpr auto SpecularScale = 0x244; // float
		constexpr auto ShadowResolutionScale = 0x248; // float
		constexpr auto ShadowBias = 0x24c; // float
		constexpr auto ShadowSlopeBias = 0x250; // float
		constexpr auto ShadowSharpen = 0x254; // float
		constexpr auto ContactShadowLength = 0x258; // float
		constexpr auto ContactShadowLengthInWS = 0x25c; // char : 1
		constexpr auto InverseSquaredFalloff = 0x25c; // char : 1
		constexpr auto CastTranslucentShadows = 0x25c; // char : 1
		constexpr auto bCastShadowsFromCinematicObjectsOnly = 0x25c; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x25c; // char : 1
		constexpr auto bForceCachedShadowsForMovablePrimitives = 0x25c; // char : 1
		constexpr auto LightingChannels = 0x260; // FLightingChannels
		constexpr auto LightFunctionMaterial = 0x268; // UMaterialInterface*
		constexpr auto LightFunctionScale = 0x270; // FVector
		constexpr auto IESTexture = 0x280; // UTextureLightProfile*
		constexpr auto bUseIESBrightness = 0x288; // char : 1
		constexpr auto IESBrightnessScale = 0x28c; // float
		constexpr auto LightFunctionFadeDistance = 0x290; // float
		constexpr auto DisabledBrightness = 0x294; // float
		constexpr auto bEnableLightShaftBloom = 0x298; // char : 1
		constexpr auto BloomScale = 0x29c; // float
		constexpr auto BloomThreshold = 0x2a0; // float
		constexpr auto BloomMaxBrightness = 0x2a4; // float
		constexpr auto BloomTint = 0x2a8; // FColor
		constexpr auto bUseRayTracedDistanceFieldShadows = 0x2ac; // bool
		constexpr auto RayStartOffsetDepthScale = 0x2b0; // float
	}

	namespace n_AWheeledVehicle { // : APawn
		constexpr auto Mesh = 0x280; // USkeletalMeshComponent*
		constexpr auto VehicleMovement = 0x288; // UWheeledVehicleMovementComponent*
	}

	namespace n_UClickDragInputBehavior { // : UAnyButtonInputBehavior
		constexpr auto bUpdateModifiersDuringDrag = 0x120; // bool
	}

	namespace n_UMOBuildableInfoPanel { // : UMOBuildablePanel
		constexpr auto pMOButtonAddResource = 0x2d0; // UMOButton*
		constexpr auto pItemSlot_AddResource = 0x2d8; // UMOItemSlotPlaceItem*
		constexpr auto pTextBlock_HouseName = 0x2e0; // UTextBlock*
		constexpr auto pTextBlock_OwnerText = 0x2e8; // UTextBlock*
		constexpr auto pTextBlock_OwnerName = 0x2f0; // UTextBlock*
		constexpr auto pTextBlock_GuildText = 0x2f8; // UTextBlock*
		constexpr auto pTextBlock_GuildName = 0x300; // UTextBlock*
		constexpr auto pTextBlock_Health = 0x308; // UTextBlock*
		constexpr auto pTextBlock_Wood = 0x310; // UTextBlock*
		constexpr auto pTextBlock_Stone = 0x318; // UTextBlock*
		constexpr auto pTextBlock_Metal = 0x320; // UTextBlock*
		constexpr auto pWB_ProgressBar_Health = 0x328; // UMOUserWidgetProgressBar*
		constexpr auto pWB_ProgressBar_Wood = 0x330; // UMOUserWidgetProgressBar*
		constexpr auto pWB_ProgressBar_Stone = 0x338; // UMOUserWidgetProgressBar*
		constexpr auto pWB_ProgressBar_Metal = 0x340; // UMOUserWidgetProgressBar*
	}

	namespace n_UWmfMediaSettings { // : UObject
		constexpr auto AllowNonStandardCodecs = 0x28; // bool
		constexpr auto LowLatency = 0x29; // bool
		constexpr auto NativeAudioOut = 0x2a; // bool
		constexpr auto HardwareAcceleratedVideoDecoding = 0x2b; // bool
	}

	namespace n_UMaterialExpressionBreakMaterialAttributes { // : UMaterialExpression
		constexpr auto MaterialAttributes = 0x40; // FMaterialAttributesInput
	}

	namespace n_UBTService_BlackboardBase { // : UBTService
		constexpr auto BlackboardKey = 0x70; // FBlackboardKeySelector
	}

	namespace n_UEnvQueryGenerator_Donut { // : UEnvQueryGenerator_ProjectedPoints
		constexpr auto InnerRadius = 0x80; // FAIDataProviderFloatValue
		constexpr auto OuterRadius = 0xb8; // FAIDataProviderFloatValue
		constexpr auto NumberOfRings = 0xf0; // FAIDataProviderIntValue
		constexpr auto PointsPerRing = 0x128; // FAIDataProviderIntValue
		constexpr auto ArcDirection = 0x160; // FEnvDirection
		constexpr auto ArcAngle = 0x180; // FAIDataProviderFloatValue
		constexpr auto bUseSpiralPattern = 0x1b8; // bool
		constexpr auto Center = 0x1c0; // UEnvQueryContext*
		constexpr auto bDefineArc = 0x1c8; // char : 1
	}

	namespace n_USceneComponent { // : UActorComponent
		constexpr auto PhysicsVolume = 0xb8; // TWeakObjectPtr<APhysicsVolume>
		constexpr auto AttachParent = 0xc0; // USceneComponent*
		constexpr auto AttachSocketName = 0xc8; // FName
		constexpr auto AttachChildren = 0xd0; // TArray<USceneComponent*>
		constexpr auto ClientAttachedChildren = 0xe0; // TArray<USceneComponent*>
		constexpr auto RelativeLocation = 0x11c; // FVector
		constexpr auto RelativeRotation = 0x128; // FRotator
		constexpr auto RelativeScale3D = 0x134; // FVector
		constexpr auto ComponentVelocity = 0x140; // FVector
		constexpr auto bComponentToWorldUpdated = 0x14c; // char : 1
		constexpr auto bAbsoluteLocation = 0x14c; // char : 1
		constexpr auto bAbsoluteRotation = 0x14c; // char : 1
		constexpr auto bAbsoluteScale = 0x14c; // char : 1
		constexpr auto bVisible = 0x14c; // char : 1
		constexpr auto bShouldBeAttached = 0x14c; // char : 1
		constexpr auto bShouldSnapLocationWhenAttached = 0x14c; // char : 1
		constexpr auto bShouldSnapRotationWhenAttached = 0x14d; // char : 1
		constexpr auto bShouldUpdatePhysicsVolume = 0x14d; // char : 1
		constexpr auto bHiddenInGame = 0x14d; // char : 1
		constexpr auto bBoundsChangeTriggersStreamingDataRebuild = 0x14d; // char : 1
		constexpr auto bUseAttachParentBound = 0x14d; // char : 1
		constexpr auto Mobility = 0x14f; // EComponentMobility
		constexpr auto DetailMode = 0x150; // EDetailMode
		constexpr auto PhysicsVolumeChangedDelegate = 0x151; // FMulticastSparseDelegate
	}

	namespace n_UAB_CH_AI_Quadruped_C { // : UMOAnimationInstance
		constexpr auto UberGraphFrame = 0x530; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x538; // FAnimNode_Root
		constexpr auto AnimGraphNode_SaveCachedPose_5 = 0x568; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_TransitionResult_35 = 0x6c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_34 = 0x6e8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_33 = 0x710; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_32 = 0x738; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_31 = 0x760; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_30 = 0x788; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_29 = 0x7b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_28 = 0x7d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_UseCachedPose_7 = 0x800; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_19 = 0x828; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive_5 = 0x858; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_UseCachedPose_6 = 0x928; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_13 = 0x950; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_18 = 0x9d0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_UseCachedPose_5 = 0xa00; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_17 = 0xa28; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_5 = 0xa58; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_TransitionResult_27 = 0xb08; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_26 = 0xb30; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_25 = 0xb58; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_24 = 0xb80; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_23 = 0xba8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_22 = 0xbd0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequenceEvaluator = 0xbf8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_StateResult_16 = 0xc48; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_12 = 0xc78; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_15 = 0xcf8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_11 = 0xd28; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_14 = 0xda8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_10 = 0xdd8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_13 = 0xe58; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_9 = 0xe88; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_12 = 0xf08; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_4 = 0xf38; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SaveCachedPose_4 = 0xfe8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_ComponentToLocalSpace_3 = 0x1140; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_3 = 0x1160; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_Slot_2 = 0x1180; // FAnimNode_Slot
		constexpr auto AnimGraphNode_ModifyBone_2 = 0x11c8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_Inertialization = 0x12d0; // FAnimNode_Inertialization
		constexpr auto AnimGraphNode_SequencePlayer_8 = 0x1340; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_7 = 0x13c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive_4 = 0x1440; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_BlendSpaceEvaluator_2 = 0x1510; // FAnimNode_BlendSpaceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_2 = 0x1600; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x16c8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TransitionResult_21 = 0x1768; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_20 = 0x1790; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_19 = 0x17b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_18 = 0x17e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_17 = 0x1808; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_16 = 0x1830; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_15 = 0x1858; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_14 = 0x1880; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_13 = 0x18a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_12 = 0x18d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_11 = 0x18f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_10 = 0x1920; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TwoWayBlend = 0x1948; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_6 = 0x1a10; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0x1a90; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_11 = 0x1b10; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x1b40; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_10 = 0x1bc0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_4 = 0x1bf0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_9 = 0x1cd8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_9 = 0x1d08; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_3 = 0x1d30; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_8 = 0x1e18; // FAnimNode_StateResult
		constexpr auto MOAnimGraphNode_RandomPlayer = 0x1e48; // FMOAnimNode_RandomPlayer
		constexpr auto AnimGraphNode_Slot = 0x1f68; // FAnimNode_Slot
		constexpr auto AnimGraphNode_StateResult_7 = 0x1fb0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_3 = 0x1fe0; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_BlendSpacePlayer_2 = 0x2090; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_ModifyBone = 0x2178; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_2 = 0x2280; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_2 = 0x22a0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_BlendSpaceEvaluator = 0x22c0; // FAnimNode_BlendSpaceEvaluator
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive_3 = 0x23b0; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive_2 = 0x2480; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_TransitionResult_8 = 0x2550; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_7 = 0x2578; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_ModifyCurve = 0x25a0; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_BlendSpacePlayer = 0x25f8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_6 = 0x26e0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_IdentityPose = 0x2710; // FAnimNode_RefPose
		constexpr auto AnimGraphNode_StateResult_5 = 0x2728; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_2 = 0x2758; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive = 0x2808; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_TransitionResult_6 = 0x28d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_5 = 0x2900; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_4 = 0x2928; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_3 = 0x2950; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x2978; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult = 0x29a0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x29c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_4 = 0x2a48; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x2a78; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_3 = 0x2af8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer = 0x2b28; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_2 = 0x2ba8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_UseCachedPose_4 = 0x2bd8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult = 0x2c00; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x2c30; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SaveCachedPose_3 = 0x2ce0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_2 = 0x2e38; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_3 = 0x2f90; // FAnimNode_UseCachedPose
		constexpr auto MOAnimGraphNode_HeadLookAt = 0x2fc0; // FMOAnimNode_HeadLookAt
		constexpr auto AnimGraphNode_BlendListByBool = 0x3120; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose = 0x31c0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0x3318; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x3340; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x3360; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_UseCachedPose = 0x3380; // FAnimNode_UseCachedPose
		constexpr auto WalkCutoffSpeed = 0x33a8; // float
		constexpr auto RunCutoffSpeed = 0x33ac; // float
		constexpr auto Turn_Left_181 = 0x33b0; // UAnimSequenceBase*
		constexpr auto Turn_Right_181 = 0x33b8; // UAnimSequenceBase*
		constexpr auto Blend Space = 0x33c0; // UBlendSpace1D*
		constexpr auto SwimIdle = 0x33c8; // UAnimSequenceBase*
		constexpr auto SwimMoving = 0x33d0; // UAnimSequenceBase*
		constexpr auto OnDeath = 0x33d8; // UAnimSequenceBase*
		constexpr auto TurnWhileMovingAngle = 0x33e0; // float
		constexpr auto RollWhileMovingAngle = 0x33e4; // float
		constexpr auto PelvisWhileMovingRotator = 0x33e8; // FRotator
		constexpr auto AimOffsetAsset = 0x33f8; // UBlendSpaceBase*
		constexpr auto Max = 0x3400; // int32_t
		constexpr auto IdleToTurningBlendTime = 0x3404; // float
		constexpr auto AngularSpeedForFullBankAndTurn = 0x3408; // float
		constexpr auto InterpSpeedForFullBankAndTurn = 0x340c; // float
		constexpr auto SpeedForStartBanking = 0x3410; // float
		constexpr auto SpeedForFullBanking = 0x3414; // float
		constexpr auto FullBankAngleWhileTurning = 0x3418; // float
		constexpr auto FullTurnAngleWhileMoving = 0x341c; // float
		constexpr auto MinAngularVelocityForBankingAndTurning = 0x3420; // float
		constexpr auto MovementDirectionYaw_QuadrupedTurningSmoothed = 0x3424; // float
		constexpr auto PhysicsSettings = 0x3428; // FKawaiiPhysicsSettings
		constexpr auto SequenceFalling = 0x3440; // UAnimSequenceBase*
		constexpr auto SequenceJump = 0x3448; // UAnimSequenceBase*
		constexpr auto SequenceLanding = 0x3450; // UAnimSequenceBase*
	}

	namespace n_UGeometryCache { // : UObject
		constexpr auto Materials = 0x30; // TArray<UMaterialInterface*>
		constexpr auto Tracks = 0x40; // TArray<UGeometryCacheTrack*>
		constexpr auto StartFrame = 0x60; // int32_t
		constexpr auto EndFrame = 0x64; // int32_t
	}

	namespace n_APartyBeaconClient { // : AOnlineBeaconClient
		constexpr auto DestSessionId = 0x2e0; // FString
		constexpr auto PendingReservation = 0x2f0; // FPartyReservation
		constexpr auto RequestType = 0x340; // EClientRequestType
		constexpr auto bPendingReservationSent = 0x341; // bool
		constexpr auto bCancelReservation = 0x342; // bool
	}

	namespace n_UEnvQueryManager { // : UAISubsystem
		constexpr auto InstanceCache = 0xa8; // TArray<FEnvQueryInstanceCache>
		constexpr auto LocalContexts = 0xb8; // TArray<UEnvQueryContext*>
		constexpr auto GCShieldedWrappers = 0xc8; // TArray<UEnvQueryInstanceBlueprintWrapper*>
		constexpr auto MaxAllowedTestingTime = 0x12c; // float
		constexpr auto bTestQueriesUsingBreadth = 0x130; // bool
		constexpr auto QueryCountWarningThreshold = 0x134; // int32_t
		constexpr auto QueryCountWarningInterval = 0x138; // double
	}

	namespace n_UHierarchicalLODSetup { // : UObject
		constexpr auto HierarchicalLODSetup = 0x28; // TArray<FHierarchicalSimplification>
		constexpr auto OverrideBaseMaterial = 0x38; // TSoftObjectPtr<UMaterialInterface>
	}

	namespace n_AWaterMeshActor { // : AActor
		constexpr auto WaterVelocityTexture = 0x220; // UTexture2D*
		constexpr auto WaterMesh = 0x228; // UWaterMeshComponent*
	}

	namespace n_UGetGeoLocationAsyncTaskBlueprintProxy { // : UARBaseAsyncTaskBlueprintProxy
		constexpr auto OnSuccess = 0x50; // FMulticastInlineDelegate
		constexpr auto OnFailed = 0x60; // FMulticastInlineDelegate
	}

	namespace n_AGameSession { // : AInfo
		constexpr auto MaxSpectators = 0x220; // int32_t
		constexpr auto MaxPlayers = 0x224; // int32_t
		constexpr auto MaxPartySize = 0x228; // int32_t
		constexpr auto MaxSplitscreensPerConnection = 0x22c; // char
		constexpr auto bRequiresPushToTalk = 0x22d; // bool
		constexpr auto SessionName = 0x230; // FName
	}

	namespace n_UAudioCaptureComponent { // : USynthComponent
		constexpr auto JitterLatencyFrames = 0x6c0; // int32_t
	}

	namespace n_UUMGSequenceTickManager { // : UObject
		constexpr auto WeakUserWidgets = 0x28; // TSet<TWeakObjectPtr<UUserWidget>>
		constexpr auto Linker = 0x78; // UMovieSceneEntitySystemLinker*
	}

	namespace n_UAnimSequenceLevelSequenceLink { // : UAssetUserData
		constexpr auto SkelTrackGuid = 0x28; // FGuid
		constexpr auto PathToLevelSequence = 0x38; // FSoftObjectPath
	}

	namespace n_UMOUserWidgetWaypoint { // : UMOUserWidget
		constexpr auto pWaypointMaterial = 0x2c8; // UMaterial*
		constexpr auto pImage = 0x2d0; // UImage*
		constexpr auto pTextBlock_WaypointName = 0x2d8; // UTextBlock*
		constexpr auto pImage_WaypointName = 0x2e0; // UImage*
	}

	namespace n_UCineCameraComponent { // : UCameraComponent
		constexpr auto FilmbackSettings = 0x7c0; // FCameraFilmbackSettings
		constexpr auto Filmback = 0x7cc; // FCameraFilmbackSettings
		constexpr auto LensSettings = 0x7d8; // FCameraLensSettings
		constexpr auto FocusSettings = 0x7f0; // FCameraFocusSettings
		constexpr auto CurrentFocalLength = 0x848; // float
		constexpr auto CurrentAperture = 0x84c; // float
		constexpr auto CurrentFocusDistance = 0x850; // float
		constexpr auto FilmbackPresets = 0x860; // TArray<FNamedFilmbackPreset>
		constexpr auto LensPresets = 0x870; // TArray<FNamedLensPreset>
		constexpr auto DefaultFilmbackPresetName = 0x880; // FString
		constexpr auto DefaultFilmbackPreset = 0x890; // FString
		constexpr auto DefaultLensPresetName = 0x8a0; // FString
		constexpr auto DefaultLensFocalLength = 0x8b0; // float
		constexpr auto DefaultLensFStop = 0x8b4; // float
	}

	namespace n_UParticleModulePivotOffset { // : UParticleModuleLocationBase
		constexpr auto PivotOffset = 0x30; // FVector2D
	}

	namespace n_UFoliageType_Actor { // : UFoliageType
		constexpr auto ActorClass = 0x3b0; // AActor*
		constexpr auto bShouldAttachToBaseComponent = 0x3b8; // bool
	}

	namespace n_UThrobber { // : UWidget
		constexpr auto NumberOfPieces = 0x108; // int32_t
		constexpr auto bAnimateHorizontally = 0x10c; // bool
		constexpr auto bAnimateVertically = 0x10d; // bool
		constexpr auto bAnimateOpacity = 0x10e; // bool
		constexpr auto PieceImage = 0x110; // USlateBrushAsset*
		constexpr auto Image = 0x118; // FSlateBrush
	}

	namespace n_UMOBuildableSettingsPanel { // : UMOBuildablePanel
		constexpr auto pMORenameWidget = 0x2d0; // UMORenameUserWidget*
		constexpr auto pMOButton_CreateKey = 0x2d8; // UMOButton*
		constexpr auto pMOButton_Transfer = 0x2e0; // UMOButton*
		constexpr auto pMOButton_ChangeLock = 0x2e8; // UMOButton*
		constexpr auto pMOButton_Rename = 0x2f0; // UMOButton*
	}

	namespace n_UMOUserWidgetCompassCircle { // : UMOUserWidgetCompass
		constexpr auto compassImage = 0x2e8; // UImage*
		constexpr auto markerImage = 0x2f0; // UImage*
	}

	namespace n_APhysicsThruster { // : ARigidBodyBase
		constexpr auto ThrusterComponent = 0x220; // UPhysicsThrusterComponent*
	}

	namespace n_UMOItemSlotStatic { // : UMOItemSlot
		constexpr auto pParent = 0x2b0; // UMOUserWidget*
	}

	namespace n_UBuoyancyComponent { // : UActorComponent
		constexpr auto Pontoons = 0xb0; // TArray<FSphericalPontoon>
		constexpr auto OnEnteredWaterDelegate = 0xc0; // FMulticastInlineDelegate
		constexpr auto OnExitedWaterDelegate = 0xd0; // FMulticastInlineDelegate
		constexpr auto BuoyancyData = 0xe0; // FBuoyancyData
		constexpr auto CurrentWaterBodies = 0x130; // TArray<AWaterBody*>
		constexpr auto SimulatingComponent = 0x140; // UPrimitiveComponent*
	}

	namespace n_UMovieSceneCameraShakeTrack { // : UMovieSceneNameableTrack
		constexpr auto CameraShakeSections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UMOMessageBox { // : UMOUserWidget
		constexpr auto pMOCurrencyWidget = 0x2e8; // UMOCurrencyWidget*
		constexpr auto pCaptionText = 0x2f0; // UTextBlock*
		constexpr auto pBodyText = 0x2f8; // UTextBlock*
		constexpr auto pOKButton = 0x300; // UMOButton*
		constexpr auto pCancelButton = 0x308; // UMOButton*
		constexpr auto pOKButtonText = 0x310; // UTextBlock*
		constexpr auto pCancelButtonText = 0x318; // UTextBlock*
		constexpr auto pLoadingThrobber = 0x320; // UThrobber*
		constexpr auto pSpacer = 0x328; // USpacer*
		constexpr auto pContainer = 0x368; // UMOContainer*
	}

	namespace n_UGridPanel { // : UPanelWidget
		constexpr auto ColumnFill = 0x120; // TArray<float>
		constexpr auto RowFill = 0x130; // TArray<float>
	}

	namespace n_UOnlinePIESettings { // : UDeveloperSettings
		constexpr auto bOnlinePIEEnabled = 0x38; // bool
		constexpr auto Logins = 0x40; // TArray<FPIELoginSettingsInternal>
	}

	namespace n_UMOJournalNoteGroupEntry { // : UMOJournalGroupEntry
		constexpr auto pMOButton_AddNote = 0x2f8; // UMOButton*
		constexpr auto pMOButton_RemoveGroup = 0x300; // UMOButton*
		constexpr auto pMOButton_RenameGroup = 0x308; // UMOButton*
	}

	namespace n_UWB_MessageBox_C { // : UMOMessageBox
		constexpr auto UberGraphFrame = 0x378; // FPointerToUberGraphFrame
		constexpr auto FadeIn = 0x380; // UWidgetAnimation*
	}

	namespace n_UMaterialExpressionReroute { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UMaterialExpressionRotateAboutAxis { // : UMaterialExpression
		constexpr auto NormalizedRotationAxis = 0x40; // FExpressionInput
		constexpr auto RotationAngle = 0x54; // FExpressionInput
		constexpr auto PivotPoint = 0x68; // FExpressionInput
		constexpr auto Position = 0x7c; // FExpressionInput
		constexpr auto Period = 0x90; // float
	}

	namespace n_UAnimCompress_RemoveEverySecondKey { // : UAnimCompress
		constexpr auto MinKeys = 0x40; // int32_t
		constexpr auto bStartAtSecondKey = 0x44; // char : 1
	}

	namespace n_AWaterBodyCustom { // : AWaterBody
		constexpr auto CustomGenerator = 0xdd0; // UCustomMeshGenerator*
	}

	namespace n_UAISenseConfig_Blueprint { // : UAISenseConfig
		constexpr auto Implementation = 0x48; // UAISense_Blueprint*
	}

	namespace n_UTextBlockWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto TextBlockStyle = 0x30; // FTextBlockStyle
	}

	namespace n_AMOCharacterSpirit { // : AMOCharacter
		constexpr auto cSpiritArmClass = 0xcb0; // AMOSpiritArm*
	}

	namespace n_UMOCraftingPresets { // : UMOUserWidget
		constexpr auto sCraftingPresetType = 0x2c8; // FString
		constexpr auto pCraftingParent = 0x2d8; // UMOCrafting*
		constexpr auto pScrollBox = 0x2e0; // UMOScrollBox*
		constexpr auto cCraftingPresetListEntryClass = 0x2e8; // UMOWidgetBlueprint*
	}

	namespace n_UPaperGroupedSpriteComponent { // : UMeshComponent
		constexpr auto InstanceMaterials = 0x468; // TArray<UMaterialInterface*>
		constexpr auto PerInstanceSpriteData = 0x478; // TArray<FSpriteInstanceData>
	}

	namespace n_UMODataAssetBowBase { // : UMODataAssetEquipmentShared
		constexpr auto pCompositeDefinition = 0x308; // UMODataAssetBowBase*
		constexpr auto eBowType = 0x310; // EBowTypeGroup
		constexpr auto pMesh = 0x318; // USkeletalMesh*
		constexpr auto BowAnimClass = 0x320; // UMOAnimationInstanceBow*
		constexpr auto BowPullAnimation = 0x328; // UAnimSequenceBase*
		constexpr auto StringRestDistance = 0x330; // float
		constexpr auto sDisplayName = 0x338; // FText
		constexpr auto pIcon = 0x350; // UTexture2D*
		constexpr auto pEquipHitParticles = 0x358; // UNiagaraSystem*
		constexpr auto pEquipHitSound = 0x360; // USoundCue*
		constexpr auto pEquipSound = 0x368; // USoundCue*
		constexpr auto pUnequipSound = 0x370; // USoundCue*
		constexpr auto pDestroyedSound = 0x378; // USoundCue*
		constexpr auto pChargeSound = 0x380; // USoundCue*
		constexpr auto pReleaseArrowSound = 0x388; // USoundCue*
		constexpr auto vSocketEmitterPairs = 0x390; // TArray<FSocketEmitterPair>
		constexpr auto vSocketSoundPairs = 0x3a0; // TArray<FSocketSoundPair>
		constexpr auto vSocketLightPairs = 0x3b0; // TArray<FSocketLightPair>
	}

	namespace n_UMOSkillsTreeListEntry { // : UMOWidgetBlueprint
		constexpr auto pChildren = 0x260; // UVerticalBox*
		constexpr auto pTextBlockSkillName = 0x268; // UTextBlock*
		constexpr auto pTextBlockSkillLevel = 0x270; // UTextBlock*
		constexpr auto pTextBlockSkillSub = 0x278; // UTextBlock*
		constexpr auto fDepthOffset = 0x280; // float
		constexpr auto pSkillTreeParent = 0x2a0; // UMOSkillsTree*
		constexpr auto pParentEntry = 0x2a8; // UMOSkillsTreeListEntry*
		constexpr auto vChildren = 0x2b0; // TArray<UMOSkillsTreeListEntry*>
	}

	namespace n_UWB_MOOptionsAudioPanel_C { // : UMOUserWidgetOptionsAudio
		constexpr auto UberGraphFrame = 0x320; // FPointerToUberGraphFrame
		constexpr auto Image_Line_Audio_1 = 0x328; // UImage*
		constexpr auto Image_Line_Audio_2 = 0x330; // UImage*
		constexpr auto WB_MOOptionsAudioPanel_VoiceMeter = 0x338; // UWB_MOOptionsAudioPanel_VoiceMeter_C*
	}

	namespace n_ABP_AiEffectWeb_C { // : AMOAiEffectActor
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
	}

	namespace n_UMagicLeapARPinContentBindings { // : USaveGame
		constexpr auto AllContentBindings = 0x28; // TMap<FGuid, FMagicLeapARPinObjectIdList>
	}

	namespace n_UMOCategoryEntry { // : UMOUserWidget
		constexpr auto pMOText = 0x2c8; // UMOText*
	}

	namespace n_AOnlineBeaconHost { // : AOnlineBeacon
		constexpr auto ListenPort = 0x250; // int32_t
		constexpr auto ClientActors = 0x258; // TArray<AOnlineBeaconClient*>
	}

	namespace n_UPawnMovementComponent { // : UNavMovementComponent
		constexpr auto PawnOwner = 0x130; // APawn*
	}

	namespace n_UNiagaraDataInterfaceLandscape { // : UNiagaraDataInterface
		constexpr auto SourceLandscape = 0x38; // AActor*
	}

	namespace n_UMaterialExpressionDepthOfFieldFunction { // : UMaterialExpression
		constexpr auto FunctionValue = 0x40; // EDepthOfFieldFunctionValue
		constexpr auto Depth = 0x44; // FExpressionInput
	}

	namespace n_UAISense { // : UObject
		constexpr auto DefaultExpirationAge = 0x28; // float
		constexpr auto NotifyType = 0x2c; // EAISenseNotifyType
		constexpr auto bWantsNewPawnNotification = 0x30; // char : 1
		constexpr auto bAutoRegisterAllPawnsAsSources = 0x30; // char : 1
		constexpr auto PerceptionSystemInstance = 0x38; // UAIPerceptionSystem*
	}

	namespace n_APainCausingVolume { // : APhysicsVolume
		constexpr auto bPainCausing = 0x268; // char : 1
		constexpr auto DamagePerSec = 0x26c; // float
		constexpr auto DamageType = 0x270; // UDamageType*
		constexpr auto PainInterval = 0x278; // float
		constexpr auto bEntryPain = 0x27c; // char : 1
		constexpr auto BACKUP_bPainCausing = 0x27c; // char : 1
		constexpr auto DamageInstigator = 0x280; // AController*
	}

	namespace n_USkeletalMesh { // : UStreamableRenderAsset
		constexpr auto Skeleton = 0x80; // USkeleton*
		constexpr auto ImportedBounds = 0x88; // FBoxSphereBounds
		constexpr auto ExtendedBounds = 0xa4; // FBoxSphereBounds
		constexpr auto PositiveBoundsExtension = 0xc0; // FVector
		constexpr auto NegativeBoundsExtension = 0xcc; // FVector
		constexpr auto Materials = 0xd8; // TArray<FSkeletalMaterial>
		constexpr auto SkelMirrorTable = 0xe8; // TArray<FBoneMirrorInfo>
		constexpr auto LODInfo = 0xf8; // TArray<FSkeletalMeshLODInfo>
		constexpr auto MinLOD = 0x158; // FPerPlatformInt
		constexpr auto DisableBelowMinLodStripping = 0x15c; // FPerPlatformBool
		constexpr auto SkelMirrorAxis = 0x15d; // EAxis
		constexpr auto SkelMirrorFlipAxis = 0x15e; // EAxis
		constexpr auto bUseFullPrecisionUVs = 0x15f; // char : 1
		constexpr auto bUseHighPrecisionTangentBasis = 0x15f; // char : 1
		constexpr auto bHasBeenSimplified = 0x15f; // char : 1
		constexpr auto bHasVertexColors = 0x15f; // char : 1
		constexpr auto bEnablePerPolyCollision = 0x15f; // char : 1
		constexpr auto BodySetup = 0x160; // UBodySetup*
		constexpr auto PhysicsAsset = 0x168; // UPhysicsAsset*
		constexpr auto ShadowPhysicsAsset = 0x170; // UPhysicsAsset*
		constexpr auto NodeMappingData = 0x178; // TArray<UNodeMappingContainer*>
		constexpr auto MorphTargets = 0x188; // TArray<UMorphTarget*>
		constexpr auto PostProcessAnimBlueprint = 0x310; // UAnimInstance*
		constexpr auto MeshClothingAssets = 0x318; // TArray<UClothingAssetBase*>
		constexpr auto SamplingInfo = 0x328; // FSkeletalMeshSamplingInfo
		constexpr auto AssetUserData = 0x358; // TArray<UAssetUserData*>
		constexpr auto Sockets = 0x368; // TArray<USkeletalMeshSocket*>
		constexpr auto SkinWeightProfiles = 0x388; // TArray<FSkinWeightProfileInfo>
	}

	namespace n_UMODataAssetShield { // : UMODataAssetEquipmentShared
		constexpr auto pStaticMesh = 0x308; // UStaticMesh*
		constexpr auto fFrameScale = 0x310; // float
		constexpr auto eShieldType = 0x314; // EShieldGroup
		constexpr auto sDisplayName = 0x318; // FText
		constexpr auto pIcon = 0x330; // UTexture2D*
		constexpr auto pBlockParticles = 0x338; // UNiagaraSystem*
		constexpr auto pPerfectBlockParticles = 0x340; // UNiagaraSystem*
		constexpr auto pEquipHitParticles = 0x348; // UNiagaraSystem*
		constexpr auto pBlockSound = 0x350; // USoundCue*
		constexpr auto pPerfectBlockSound = 0x358; // USoundCue*
		constexpr auto pEquipHitSound = 0x360; // USoundCue*
		constexpr auto pEquipSound = 0x368; // USoundCue*
		constexpr auto pUnequipSound = 0x370; // USoundCue*
		constexpr auto pDestroyedSound = 0x378; // USoundCue*
		constexpr auto pPushSound = 0x380; // USoundCue*
		constexpr auto vSocketEmitterPairs = 0x388; // TArray<FSocketEmitterPair>
		constexpr auto vSocketSoundPairs = 0x398; // TArray<FSocketSoundPair>
		constexpr auto vSocketLightPairs = 0x3a8; // TArray<FSocketLightPair>
	}

	namespace n_ABP_Sky_Sphere_C { // : AActor
		constexpr auto SkySphereMesh = 0x220; // UStaticMeshComponent*
		constexpr auto Base = 0x228; // USceneComponent*
		constexpr auto Sky material = 0x230; // UMaterialInstanceDynamic*
		constexpr auto Refresh material = 0x238; // bool
		constexpr auto Directional light actor = 0x240; // ADirectionalLight*
		constexpr auto Colors determined by sun position = 0x248; // bool
		constexpr auto Sun height = 0x24c; // float
		constexpr auto Sun brightness = 0x250; // float
		constexpr auto Horizon Falloff = 0x254; // float
		constexpr auto Zenith Color = 0x258; // FLinearColor
		constexpr auto Horizon color = 0x268; // FLinearColor
		constexpr auto Cloud color = 0x278; // FLinearColor
		constexpr auto Overall color = 0x288; // FLinearColor
		constexpr auto Cloud speed = 0x298; // float
		constexpr auto Cloud opacity = 0x29c; // float
		constexpr auto Stars brightness = 0x2a0; // float
		constexpr auto Horizon color curve = 0x2a8; // UCurveLinearColor*
		constexpr auto Zenith color curve = 0x2b0; // UCurveLinearColor*
		constexpr auto Cloud color curve = 0x2b8; // UCurveLinearColor*
	}

	namespace n_USoundBase { // : UObject
		constexpr auto SoundClassObject = 0x30; // USoundClass*
		constexpr auto bDebug = 0x38; // char : 1
		constexpr auto bOverrideConcurrency = 0x38; // char : 1
		constexpr auto bOutputToBusOnly = 0x38; // char : 1
		constexpr auto bHasDelayNode = 0x38; // char : 1
		constexpr auto bHasConcatenatorNode = 0x38; // char : 1
		constexpr auto bBypassVolumeScaleForPriority = 0x38; // char : 1
		constexpr auto VirtualizationMode = 0x39; // EVirtualizationMode
		constexpr auto ConcurrencySet = 0x90; // TSet<USoundConcurrency*>
		constexpr auto ConcurrencyOverrides = 0xe0; // FSoundConcurrencySettings
		constexpr auto Duration = 0x108; // float
		constexpr auto MaxDistance = 0x10c; // float
		constexpr auto TotalSamples = 0x110; // float
		constexpr auto Priority = 0x114; // float
		constexpr auto AttenuationSettings = 0x118; // USoundAttenuation*
		constexpr auto ModulationSettings = 0x120; // FSoundModulationDefaultRoutingSettings
		constexpr auto SoundSubmixObject = 0x168; // USoundSubmixBase*
		constexpr auto SoundSubmixSends = 0x170; // TArray<FSoundSubmixSendInfo>
		constexpr auto SourceEffectChain = 0x180; // USoundEffectSourcePresetChain*
		constexpr auto BusSends = 0x188; // TArray<FSoundSourceBusSendInfo>
		constexpr auto PreEffectBusSends = 0x198; // TArray<FSoundSourceBusSendInfo>
		constexpr auto AssetUserData = 0x1a8; // TArray<UAssetUserData*>
	}

	namespace n_UBrainComponent { // : UActorComponent
		constexpr auto BlackboardComp = 0xb8; // UBlackboardComponent*
		constexpr auto AIOwner = 0xc0; // AAIController*
	}

	namespace n_AMagicLeapSharedWorldGameMode { // : AGameMode
		constexpr auto SharedWorldData = 0x308; // FMagicLeapSharedWorldSharedData
		constexpr auto OnNewLocalDataFromClients = 0x318; // FMulticastInlineDelegate
		constexpr auto PinSelectionConfidenceThreshold = 0x328; // float
		constexpr auto ChosenOne = 0x3d0; // AMagicLeapSharedWorldPlayerController*
	}

	namespace n_UNiagaraDataInterfaceVolumeTexture { // : UNiagaraDataInterface
		constexpr auto Texture = 0x38; // UVolumeTexture*
	}

	namespace n_UInterpGroup { // : UObject
		constexpr auto InterpTracks = 0x30; // TArray<UInterpTrack*>
		constexpr auto GroupName = 0x40; // FName
		constexpr auto GroupColor = 0x48; // FColor
		constexpr auto bCollapsed = 0x4c; // char : 1
		constexpr auto bVisible = 0x4c; // char : 1
		constexpr auto bIsFolder = 0x4c; // char : 1
		constexpr auto bIsParented = 0x4c; // char : 1
		constexpr auto bIsSelected = 0x4c; // char : 1
	}

	namespace n_UAB_CH_Player_Male_Human_C { // : UMOAnimationInstancePlayer
		constexpr auto UberGraphFrame = 0x690; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_SaveCachedPose_10 = 0x698; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_37 = 0x7f0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TransitionResult_71 = 0x890; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_70 = 0x8b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_69 = 0x8e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_68 = 0x908; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_67 = 0x930; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_66 = 0x958; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_65 = 0x980; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_64 = 0x9a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_63 = 0x9d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_62 = 0x9f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_61 = 0xa20; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_60 = 0xa48; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_59 = 0xa70; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_58 = 0xa98; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_57 = 0xac0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_56 = 0xae8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_55 = 0xb10; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_54 = 0xb38; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_53 = 0xb60; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_52 = 0xb88; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_22 = 0xbb0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_28 = 0xc30; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendListByBool_36 = 0xc60; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_21 = 0xd00; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_21 = 0xde8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_27 = 0xe68; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_20 = 0xe98; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_26 = 0xf80; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_51 = 0xfb0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TwoWayBlend_3 = 0xfd8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_20 = 0x10a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TransitionResult_50 = 0x1120; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_49 = 0x1148; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_48 = 0x1170; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_47 = 0x1198; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_46 = 0x11c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_45 = 0x11e8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_44 = 0x1210; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_43 = 0x1238; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_42 = 0x1260; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_41 = 0x1288; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_40 = 0x12b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_39 = 0x12d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_38 = 0x1300; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_37 = 0x1328; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_36 = 0x1350; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_35 = 0x1378; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_34 = 0x13a0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_33 = 0x13c8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_32 = 0x13f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_19 = 0x1418; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_25 = 0x1500; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_18 = 0x1530; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_24 = 0x1618; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendListByBool_35 = 0x1648; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_34 = 0x16e8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_19 = 0x1788; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_18 = 0x1808; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_17 = 0x1888; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_23 = 0x1908; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_17 = 0x1938; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_22 = 0x1a20; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_16 = 0x1a50; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_21 = 0x1b38; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_6 = 0x1b68; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_StateResult_20 = 0x1c18; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_16 = 0x1c48; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_19 = 0x1cc8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_31 = 0x1cf8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_15 = 0x1d20; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_18 = 0x1e08; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateResult_17 = 0x1e38; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_30 = 0x1e68; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_UseCachedPose_28 = 0x1e90; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_16 = 0x1eb8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_5 = 0x1ee8; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_Slot_3 = 0x1f98; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SaveCachedPose_9 = 0x1fe0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_TransitionResult_29 = 0x2138; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_28 = 0x2160; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_27 = 0x2188; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_26 = 0x21b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_25 = 0x21d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_24 = 0x2200; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_23 = 0x2228; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_22 = 0x2250; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_21 = 0x2278; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_UseCachedPose_27 = 0x22a0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_15 = 0x22c8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_20 = 0x22f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_UseCachedPose_26 = 0x2320; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_14 = 0x2348; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_15 = 0x2378; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_13 = 0x23f8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_UseCachedPose_25 = 0x2428; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_12 = 0x2450; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_4 = 0x2480; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_Slot_2 = 0x2530; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Inertialization = 0x2578; // FAnimNode_Inertialization
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive_16 = 0x25e8; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_TransitionResult_19 = 0x26b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_18 = 0x26e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_17 = 0x2708; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_16 = 0x2730; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_15 = 0x2758; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_14 = 0x2780; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_13 = 0x27a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_12 = 0x27d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequenceEvaluator_3 = 0x27f8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_2 = 0x2848; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByBool_33 = 0x2898; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_11 = 0x2938; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_14 = 0x2968; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_32 = 0x29e8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_13 = 0x2a88; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_10 = 0x2b08; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_12 = 0x2b38; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_31 = 0x2bb8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_11 = 0x2c58; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_9 = 0x2cd8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_10 = 0x2d08; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_30 = 0x2d88; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_9 = 0x2e28; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_8 = 0x2ea8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_8 = 0x2ed8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_29 = 0x2f58; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_7 = 0x2ff8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_7 = 0x3078; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_3 = 0x30a8; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SaveCachedPose_8 = 0x3158; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_28 = 0x32b0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LocalRefPose = 0x3350; // FAnimNode_RefPose
		constexpr auto AnimGraphNode_BlendListByBool_27 = 0x3368; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose_7 = 0x3408; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_24 = 0x3560; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_23 = 0x3588; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendBoneByChannel = 0x35b0; // FAnimNode_BlendBoneByChannel
		constexpr auto AnimGraphNode_LayeredBoneBlend_3 = 0x3618; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_22 = 0x36d8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_TransitionResult_11 = 0x3700; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_10 = 0x3728; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_ModifyCurve_5 = 0x3750; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_BlendSpacePlayer_14 = 0x37a8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_6 = 0x3890; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_IdentityPose = 0x38c0; // FAnimNode_RefPose
		constexpr auto AnimGraphNode_StateResult_5 = 0x38d8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_2 = 0x3908; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_ComponentToLocalSpace_7 = 0x39b8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto MOAnimGraphNode_HeadLookAt = 0x39e0; // FMOAnimNode_HeadLookAt
		constexpr auto AnimGraphNode_LocalToComponentSpace_7 = 0x3b40; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyCurve_4 = 0x3b60; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_UseCachedPose_21 = 0x3bb8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_20 = 0x3be0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_19 = 0x3c08; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_18 = 0x3c30; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_PoseBlendNode = 0x3c58; // FAnimNode_PoseBlendNode
		constexpr auto AnimGraphNode_ModifyCurve_3 = 0x3cf8; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_LayeredBoneBlend_2 = 0x3d50; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_ApplyAdditive = 0x3e10; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SequenceEvaluator = 0x3ed8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SaveCachedPose_6 = 0x3f28; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_17 = 0x4080; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_16 = 0x40a8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_26 = 0x40d0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_25 = 0x4170; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_Root = 0x4210; // FAnimNode_Root
		constexpr auto AnimGraphNode_BlendListByBool_24 = 0x4240; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_23 = 0x42e0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_15 = 0x4380; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ModifyBone_11 = 0x43a8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_6 = 0x44b0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_6 = 0x44d0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_SaveCachedPose_5 = 0x44f0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_14 = 0x4648; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_13 = 0x4670; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LocalToComponentSpace_5 = 0x4698; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_10 = 0x46b8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_5 = 0x47c0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ModifyBone_9 = 0x47e0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_8 = 0x48e8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_4 = 0x49f0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_4 = 0x4a10; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_BlendListByBool_22 = 0x4a30; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_21 = 0x4ad0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_6 = 0x4b70; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_13 = 0x4bf0; // FAnimNode_BlendSpacePlayer
		constexpr auto MOAnimGraphNode_RandomPlayer_2 = 0x4cd8; // FMOAnimNode_RandomPlayer
		constexpr auto AnimGraphNode_TransitionResult_9 = 0x4df8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_8 = 0x4e20; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_7 = 0x4e48; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_6 = 0x4e70; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_5 = 0x4e98; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_4 = 0x4ec0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_3 = 0x4ee8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x4f10; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult = 0x4f38; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_BlendListByBool_20 = 0x4f60; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_12 = 0x5000; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_11 = 0x50e8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_19 = 0x51d0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_18 = 0x5270; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_10 = 0x5310; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_9 = 0x53f8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_8 = 0x54e0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_17 = 0x55c8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_16 = 0x5668; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_7 = 0x5708; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_4 = 0x57f0; // FAnimNode_StateResult
		constexpr auto MOAnimGraphNode_RandomPlayer = 0x5820; // FMOAnimNode_RandomPlayer
		constexpr auto AnimGraphNode_Slot = 0x5940; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0x5988; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_15 = 0x5a08; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x5aa8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_14 = 0x5b28; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x5bc8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_13 = 0x5c48; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_3 = 0x5ce8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpaceEvaluator_15 = 0x5d18; // FAnimNode_BlendSpaceEvaluator
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive_15 = 0x5e08; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_RotateRootBone = 0x5ed8; // FAnimNode_RotateRootBone
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x5f78; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_12 = 0x5ff8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer = 0x6098; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_2 = 0x6118; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_6 = 0x6148; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_5 = 0x6230; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_11 = 0x6318; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_10 = 0x63b8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_4 = 0x6458; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_3 = 0x6540; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_2 = 0x6628; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_9 = 0x6710; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_8 = 0x67b0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_7 = 0x6850; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer = 0x68f0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult = 0x69d8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x6a08; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SaveCachedPose_4 = 0x6ab8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_HandIKRetargeting = 0x6c10; // FAnimNode_HandIKRetargeting
		constexpr auto AnimGraphNode_ComponentToLocalSpace_3 = 0x6d30; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_TwoBoneIK_2 = 0x6d50; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_TwoBoneIK = 0x6f30; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_LegIK = 0x7110; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_ModifyBone_7 = 0x7208; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_6 = 0x7310; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_5 = 0x7418; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_4 = 0x7520; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_3 = 0x7628; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyCurve_2 = 0x7730; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_ModifyCurve = 0x7788; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_LocalToComponentSpace_3 = 0x77e0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto MOAnimGraphNode_HandSizeIKCorrection = 0x7800; // FMOAnimNode_HandSizeIKCorrection
		constexpr auto AnimGraphNode_BlendListByBool_6 = 0x7930; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_3 = 0x79d0; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_BlendListByBool_5 = 0x7b60; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ModifyBone_2 = 0x7c00; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_2 = 0x7d08; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_2 = 0x7d28; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_2 = 0x7d48; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive_14 = 0x7ed8; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_TwoWayBlend_2 = 0x7fa8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive_13 = 0x8070; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive_12 = 0x8140; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive_11 = 0x8210; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive_10 = 0x82e0; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive_9 = 0x83b0; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_BlendListByBool_4 = 0x8480; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TwoWayBlend = 0x8520; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_3 = 0x85e8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive_8 = 0x8688; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive_7 = 0x8758; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive_6 = 0x8828; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive_5 = 0x88f8; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x89c8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive_4 = 0x8a68; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive_3 = 0x8b38; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_BlendListByBool = 0x8c08; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive_2 = 0x8ca8; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive = 0x8d78; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_BlendSpaceEvaluator_14 = 0x8e48; // FAnimNode_BlendSpaceEvaluator
		constexpr auto AnimGraphNode_BlendSpaceEvaluator_13 = 0x8f38; // FAnimNode_BlendSpaceEvaluator
		constexpr auto AnimGraphNode_BlendSpaceEvaluator_12 = 0x9028; // FAnimNode_BlendSpaceEvaluator
		constexpr auto AnimGraphNode_BlendSpaceEvaluator_11 = 0x9118; // FAnimNode_BlendSpaceEvaluator
		constexpr auto AnimGraphNode_BlendSpaceEvaluator_10 = 0x9208; // FAnimNode_BlendSpaceEvaluator
		constexpr auto AnimGraphNode_BlendSpaceEvaluator_9 = 0x92f8; // FAnimNode_BlendSpaceEvaluator
		constexpr auto AnimGraphNode_BlendSpaceEvaluator_8 = 0x93e8; // FAnimNode_BlendSpaceEvaluator
		constexpr auto AnimGraphNode_BlendSpaceEvaluator_7 = 0x94d8; // FAnimNode_BlendSpaceEvaluator
		constexpr auto AnimGraphNode_BlendSpaceEvaluator_6 = 0x95c8; // FAnimNode_BlendSpaceEvaluator
		constexpr auto AnimGraphNode_BlendSpaceEvaluator_5 = 0x96b8; // FAnimNode_BlendSpaceEvaluator
		constexpr auto AnimGraphNode_BlendSpaceEvaluator_4 = 0x97a8; // FAnimNode_BlendSpaceEvaluator
		constexpr auto AnimGraphNode_BlendSpaceEvaluator_3 = 0x9898; // FAnimNode_BlendSpaceEvaluator
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace = 0x9988; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_BlendSpaceEvaluator_2 = 0x9b18; // FAnimNode_BlendSpaceEvaluator
		constexpr auto AnimGraphNode_BlendSpaceEvaluator = 0x9c08; // FAnimNode_BlendSpaceEvaluator
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x9cf8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x9d18; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LayeredBoneBlend = 0x9d38; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_ModifyBone = 0x9df8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_SaveCachedPose_3 = 0x9f00; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_12 = 0xa058; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_2 = 0xa080; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_11 = 0xa1d8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_10 = 0xa200; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose = 0xa228; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_9 = 0xa380; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_8 = 0xa3a8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_7 = 0xa3d0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_6 = 0xa3f8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_5 = 0xa420; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_4 = 0xa448; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_3 = 0xa470; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0xa498; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose = 0xa4c0; // FAnimNode_UseCachedPose
		constexpr auto vFirstPerson_MovementOffset_ComponentSpace = 0xa4e8; // FVector
		constexpr auto rFirstPerson_RotationOffset_ComponentSpace = 0xa4f4; // FRotator
		constexpr auto fFirstPerson_MovementSway_AnimationTime = 0xa500; // float
		constexpr auto fFirstPerson_TurnSway_Pitch_Previous = 0xa504; // float
		constexpr auto vFirstPerson_TurnSway_ControlRight_Previous = 0xa508; // FVector
		constexpr auto rFirstPerson_TurnSway_RotationOffset_ComponentSpace = 0xa514; // FRotator
		constexpr auto fFirstPerson_TurnSway_RotationRadius_ComponentSpace = 0xa520; // float
		constexpr auto vFirstPerson_TurnSway_PositionOffset = 0xa524; // FVector
		constexpr auto vFirstPerson_PhysicsLag_Offset_ComponentSpace = 0xa530; // FVector
		constexpr auto vFirstPerson_WalkSway_Offset_ComponentSpace = 0xa53c; // FVector
		constexpr auto bFirstPerson_WalkSway_SyncWithFeet = 0xa548; // bool
		constexpr auto PlayerCamera = 0xa550; // UMOCameraComponent*
		constexpr auto DynamicHandsTipComponent = 0xa558; // UStaticMeshComponent*
		constexpr auto DynamicHandsBaseComponent = 0xa560; // UStaticMeshComponent*
		constexpr auto PelvisLocationOffset = 0xa568; // FVector
		constexpr auto PelvisRotationOffset = 0xa574; // FRotator
		constexpr auto EnableCameraInput = 0xa580; // float
		constexpr auto CameraStabilizationAlpha = 0xa584; // float
		constexpr auto rFirstPerson_WalkSway_RotationOffset_ComponentSpace = 0xa588; // FRotator
	}

	namespace n_UNiagaraSimulationStageBase { // : UNiagaraMergeable
		constexpr auto Script = 0x28; // UNiagaraScript*
		constexpr auto SimulationStageName = 0x30; // FName
		constexpr auto bEnabled = 0x38; // char : 1
	}

	namespace n_USourceEffectEnvelopeFollowerPreset { // : USoundEffectSourcePreset
		constexpr auto Settings = 0x9c; // FSourceEffectEnvelopeFollowerSettings
	}

	namespace n_UMODataAssetFishingAnimations { // : UMODataAssetWeaponAnimations
		constexpr auto ReelInMontage = 0x168; // UAnimSequenceBase*
		constexpr auto PullMontage = 0x170; // UAnimSequenceBase*
		constexpr auto TryHookFishReaction = 0x178; // UAnimSequenceBase*
		constexpr auto FishBiteMontage = 0x180; // UAnimSequenceBase*
		constexpr auto IdleFishing = 0x188; // UAnimSequenceBase*
		constexpr auto CatchFish = 0x190; // UAnimSequenceBase*
		constexpr auto FailedCatchFish = 0x198; // UAnimSequenceBase*
	}

	namespace n_UOnlineEngineInterfaceImpl { // : UOnlineEngineInterface
		constexpr auto VoiceSubsystemNameOverride = 0x28; // FName
	}

	namespace n_UMaterialExpressionTemporalSobol { // : UMaterialExpression
		constexpr auto Index = 0x40; // FExpressionInput
		constexpr auto Seed = 0x54; // FExpressionInput
		constexpr auto ConstIndex = 0x68; // uint32_t
		constexpr auto ConstSeed = 0x6c; // FVector2D
	}

	namespace n_UMOAnimationInstancePlayerHair { // : UAnimInstance
		constexpr auto PoseAsset = 0x2b8; // UPoseAsset*
		constexpr auto CopyPoseSourceMesh = 0x2c0; // USkeletalMeshComponent*
	}

	namespace n_UBlendSpace1D { // : UBlendSpaceBase
		constexpr auto bScaleAnimation = 0x148; // bool
	}

	namespace n_UEditableText { // : UWidget
		constexpr auto Text = 0x108; // FText
		constexpr auto TextDelegate = 0x120; // FDelegate
		constexpr auto HintText = 0x130; // FText
		constexpr auto HintTextDelegate = 0x148; // FDelegate
		constexpr auto WidgetStyle = 0x158; // FEditableTextStyle
		constexpr auto Style = 0x378; // USlateWidgetStyleAsset*
		constexpr auto BackgroundImageSelected = 0x380; // USlateBrushAsset*
		constexpr auto BackgroundImageComposing = 0x388; // USlateBrushAsset*
		constexpr auto CaretImage = 0x390; // USlateBrushAsset*
		constexpr auto Font = 0x398; // FSlateFontInfo
		constexpr auto ColorAndOpacity = 0x3f0; // FSlateColor
		constexpr auto IsReadOnly = 0x418; // bool
		constexpr auto IsPassword = 0x419; // bool
		constexpr auto MinimumDesiredWidth = 0x41c; // float
		constexpr auto IsCaretMovedWhenGainFocus = 0x420; // bool
		constexpr auto SelectAllTextWhenFocused = 0x421; // bool
		constexpr auto RevertTextOnEscape = 0x422; // bool
		constexpr auto ClearKeyboardFocusOnCommit = 0x423; // bool
		constexpr auto SelectAllTextOnCommit = 0x424; // bool
		constexpr auto AllowContextMenu = 0x425; // bool
		constexpr auto KeyboardType = 0x426; // EVirtualKeyboardType
		constexpr auto VirtualKeyboardOptions = 0x427; // FVirtualKeyboardOptions
		constexpr auto VirtualKeyboardTrigger = 0x428; // EVirtualKeyboardTrigger
		constexpr auto VirtualKeyboardDismissAction = 0x429; // EVirtualKeyboardDismissAction
		constexpr auto Justification = 0x42a; // ETextJustify
		constexpr auto ShapedTextOptions = 0x42b; // FShapedTextOptions
		constexpr auto OnTextChanged = 0x430; // FMulticastInlineDelegate
		constexpr auto OnTextCommitted = 0x440; // FMulticastInlineDelegate
	}

	namespace n_UMODragDropOperationSpell { // : UMODragDropOperation
		constexpr auto sSpellJSon = 0x88; // FString
	}

	namespace n_UMOEULA { // : UMOUserWidget
		constexpr auto pMOButton_Accept = 0x2c8; // UMOButton*
		constexpr auto pMOButton_Decline = 0x2d0; // UMOButton*
		constexpr auto pMOScrollBox_EULA = 0x2d8; // UMOScrollBox*
	}

	namespace n_UCollisionProfile { // : UDeveloperSettings
		constexpr auto Profiles = 0x38; // TArray<FCollisionResponseTemplate>
		constexpr auto DefaultChannelResponses = 0x48; // TArray<FCustomChannelSetup>
		constexpr auto EditProfiles = 0x58; // TArray<FCustomProfile>
		constexpr auto ProfileRedirects = 0x68; // TArray<FRedirector>
		constexpr auto CollisionChannelRedirects = 0x78; // TArray<FRedirector>
	}

	namespace n_UMOLoginMessageBox { // : UMOUserWidget
		constexpr auto pButton = 0x2c8; // UMOButton*
	}

	namespace n_ATriggerBase { // : AActor
		constexpr auto CollisionComponent = 0x220; // UShapeComponent*
	}

	namespace n_UAIDataProvider_Random { // : UAIDataProvider_QueryParams
		constexpr auto Min = 0x40; // float
		constexpr auto Max = 0x44; // float
		constexpr auto bInteger = 0x48; // char : 1
	}

	namespace n_UParticleModuleAttractorPoint { // : UParticleModuleAttractorBase
		constexpr auto Position = 0x30; // FRawDistributionVector
		constexpr auto Range = 0x78; // FRawDistributionFloat
		constexpr auto Strength = 0xa8; // FRawDistributionFloat
		constexpr auto StrengthByDistance = 0xd8; // char : 1
		constexpr auto bAffectBaseVelocity = 0xd8; // char : 1
		constexpr auto bOverrideVelocity = 0xd8; // char : 1
		constexpr auto bUseWorldSpacePosition = 0xd8; // char : 1
		constexpr auto Positive_X = 0xd8; // char : 1
		constexpr auto Positive_Y = 0xd8; // char : 1
		constexpr auto Positive_Z = 0xd8; // char : 1
		constexpr auto Negative_X = 0xd8; // char : 1
		constexpr auto Negative_Y = 0xd9; // char : 1
		constexpr auto Negative_Z = 0xd9; // char : 1
	}

	namespace n_UMovieSceneEventRepeaterSection { // : UMovieSceneEventSectionBase
		constexpr auto Event = 0xf0; // FMovieSceneEvent
	}

	namespace n_USoundNodeBranch { // : USoundNode
		constexpr auto BoolParameterName = 0x48; // FName
	}

	namespace n_AChaosSolverActor { // : AActor
		constexpr auto Properties = 0x220; // FChaosSolverConfiguration
		constexpr auto TimeStepMultiplier = 0x288; // float
		constexpr auto CollisionIterations = 0x28c; // int32_t
		constexpr auto PushOutIterations = 0x290; // int32_t
		constexpr auto PushOutPairIterations = 0x294; // int32_t
		constexpr auto ClusterConnectionFactor = 0x298; // float
		constexpr auto ClusterUnionConnectionType = 0x29c; // EClusterConnectionTypeEnum
		constexpr auto DoGenerateCollisionData = 0x29d; // bool
		constexpr auto CollisionFilterSettings = 0x2a0; // FSolverCollisionFilterSettings
		constexpr auto DoGenerateBreakingData = 0x2b0; // bool
		constexpr auto BreakingFilterSettings = 0x2b4; // FSolverBreakingFilterSettings
		constexpr auto DoGenerateTrailingData = 0x2c4; // bool
		constexpr auto TrailingFilterSettings = 0x2c8; // FSolverTrailingFilterSettings
		constexpr auto MassScale = 0x2d8; // float
		constexpr auto bGenerateContactGraph = 0x2dc; // bool
		constexpr auto bHasFloor = 0x2dd; // bool
		constexpr auto FloorHeight = 0x2e0; // float
		constexpr auto ChaosDebugSubstepControl = 0x2e4; // FChaosDebugSubstepControl
		constexpr auto SpriteComponent = 0x2e8; // UBillboardComponent*
		constexpr auto GameplayEventDispatcherComponent = 0x308; // UChaosGameplayEventDispatcher*
	}

	namespace n_UPaperTileLayer { // : UObject
		constexpr auto LayerName = 0x28; // FText
		constexpr auto LayerWidth = 0x40; // int32_t
		constexpr auto LayerHeight = 0x44; // int32_t
		constexpr auto bHiddenInGame = 0x48; // char : 1
		constexpr auto bLayerCollides = 0x48; // char : 1
		constexpr auto bOverrideCollisionThickness = 0x48; // char : 1
		constexpr auto bOverrideCollisionOffset = 0x48; // char : 1
		constexpr auto CollisionThicknessOverride = 0x4c; // float
		constexpr auto CollisionOffsetOverride = 0x50; // float
		constexpr auto LayerColor = 0x54; // FLinearColor
		constexpr auto AllocatedWidth = 0x64; // int32_t
		constexpr auto AllocatedHeight = 0x68; // int32_t
		constexpr auto AllocatedCells = 0x70; // TArray<FPaperTileInfo>
		constexpr auto TileSet = 0x80; // UPaperTileSet*
		constexpr auto AllocatedGrid = 0x88; // TArray<int32_t>
	}

	namespace n_UMediaPlaylist { // : UObject
		constexpr auto Items = 0x28; // TArray<UMediaSource*>
	}

	namespace n_UMovieSceneBoolSection { // : UMovieSceneSection
		constexpr auto DefaultValue = 0xe8; // bool
		constexpr auto BoolCurve = 0xf0; // FMovieSceneBoolChannel
	}

	namespace n_UWB_EULA_C { // : UMOEULA
		constexpr auto UberGraphFrame = 0x2e0; // FPointerToUberGraphFrame
	}

	namespace n_UMOSocialFriends { // : UMOUserWidget
		constexpr auto m_TimerHandle_TickFriendList = 0x310; // FTimerHandle
		constexpr auto vFriendsToGenerate = 0x318; // TArray<FFriendEntryStruct>
		constexpr auto vFriendsToUpdate = 0x328; // TArray<FFriendEntryStruct>
		constexpr auto vFriendsToDelete = 0x338; // TArray<FFriendEntryStruct>
		constexpr auto vFriendEntries = 0x348; // TArray<UMOSocialFriendsEntry*>
		constexpr auto cMOFriendsEntryClass = 0x358; // UMOSocialFriendsEntry*
		constexpr auto pMOScrollBox_Friends = 0x360; // UMOScrollBox*
		constexpr auto pMOButton_AddFriend = 0x368; // UMOButton*
		constexpr auto pMOEditableTextBox = 0x370; // UMOEditableTextBox*
	}

	namespace n_USpinBox { // : UWidget
		constexpr auto Value = 0x108; // float
		constexpr auto ValueDelegate = 0x10c; // FDelegate
		constexpr auto WidgetStyle = 0x120; // FSpinBoxStyle
		constexpr auto Style = 0x408; // USlateWidgetStyleAsset*
		constexpr auto MinFractionalDigits = 0x410; // int32_t
		constexpr auto MaxFractionalDigits = 0x414; // int32_t
		constexpr auto bAlwaysUsesDeltaSnap = 0x418; // bool
		constexpr auto Delta = 0x41c; // float
		constexpr auto SliderExponent = 0x420; // float
		constexpr auto Font = 0x428; // FSlateFontInfo
		constexpr auto Justification = 0x480; // ETextJustify
		constexpr auto MinDesiredWidth = 0x484; // float
		constexpr auto ClearKeyboardFocusOnCommit = 0x488; // bool
		constexpr auto SelectAllTextOnCommit = 0x489; // bool
		constexpr auto ForegroundColor = 0x490; // FSlateColor
		constexpr auto OnValueChanged = 0x4b8; // FMulticastInlineDelegate
		constexpr auto OnValueCommitted = 0x4c8; // FMulticastInlineDelegate
		constexpr auto OnBeginSliderMovement = 0x4d8; // FMulticastInlineDelegate
		constexpr auto OnEndSliderMovement = 0x4e8; // FMulticastInlineDelegate
		constexpr auto bOverride_MinValue = 0x4f8; // char : 1
		constexpr auto bOverride_MaxValue = 0x4f8; // char : 1
		constexpr auto bOverride_MinSliderValue = 0x4f8; // char : 1
		constexpr auto bOverride_MaxSliderValue = 0x4f8; // char : 1
		constexpr auto MinValue = 0x4fc; // float
		constexpr auto MaxValue = 0x500; // float
		constexpr auto MinSliderValue = 0x504; // float
		constexpr auto MaxSliderValue = 0x508; // float
	}

	namespace n_UMaterialExpressionAbs { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UMODataAssetShieldDefinitions { // : UPrimaryDataAsset
		constexpr auto pSharedData = 0x30; // UMODataAssetEquipmentShared*
		constexpr auto pFallbackShield = 0x38; // TSoftObjectPtr<UMODataAssetShield>
		constexpr auto pFallbackFrame = 0x60; // TSoftObjectPtr<UMODataAssetShieldFrame>
		constexpr auto vBucklerShields = 0x88; // TArray<TSoftObjectPtr<UMODataAssetShield>>
		constexpr auto vRoundShields = 0x98; // TArray<TSoftObjectPtr<UMODataAssetShield>>
		constexpr auto vKiteShields = 0xa8; // TArray<TSoftObjectPtr<UMODataAssetShield>>
		constexpr auto vTowerShields = 0xb8; // TArray<TSoftObjectPtr<UMODataAssetShield>>
		constexpr auto vBucklerFrames = 0xc8; // TArray<TSoftObjectPtr<UMODataAssetShieldFrame>>
		constexpr auto vRoundFrames = 0xd8; // TArray<TSoftObjectPtr<UMODataAssetShieldFrame>>
		constexpr auto vKiteFrames = 0xe8; // TArray<TSoftObjectPtr<UMODataAssetShieldFrame>>
		constexpr auto vTowerFrames = 0xf8; // TArray<TSoftObjectPtr<UMODataAssetShieldFrame>>
		constexpr auto pEquipmentPhysMaterial = 0x108; // UMOPhysicalMaterial*
		constexpr auto bShieldPartsArePreloaded = 0x110; // bool
		constexpr auto PreLoadedShieldParts = 0x118; // TArray<UMODataAssetShield*>
		constexpr auto PreLoadedFrameParts = 0x128; // TArray<UMODataAssetShieldFrame*>
	}

	namespace n_UBehaviorTreeComponent { // : UBrainComponent
		constexpr auto NodeInstances = 0x128; // TArray<UBTNode*>
		constexpr auto DefaultBehaviorTreeAsset = 0x278; // UBehaviorTree*
	}

	namespace n_UTemplateSequence { // : UMovieSceneSequence
		constexpr auto MovieScene = 0x60; // UMovieScene*
		constexpr auto BoundActorClass = 0x68; // TSoftClassPtr<UObject>
		constexpr auto BoundPreviewActor = 0x90; // TSoftObjectPtr<AActor>
		constexpr auto BoundActorComponents = 0xb8; // TMap<FGuid, FName>
	}

	namespace n_UDatasmithPointLightComponentTemplate { // : UDatasmithObjectTemplate
		constexpr auto IntensityUnits = 0x30; // ELightUnits
		constexpr auto SourceRadius = 0x34; // float
		constexpr auto SourceLength = 0x38; // float
		constexpr auto AttenuationRadius = 0x3c; // float
	}

	namespace n_UUserDefinedImageCaptureProtocol { // : UUserDefinedCaptureProtocol
		constexpr auto Format = 0xd8; // EDesiredImageFormat
		constexpr auto bEnableCompression = 0xd9; // bool
		constexpr auto CompressionQuality = 0xdc; // int32_t
	}

	namespace n_UMODataAssetHeadDefinitions { // : UPrimaryDataAsset
		constexpr auto pSharedData = 0x30; // UMODataAssetEquipmentShared*
		constexpr auto pFallBackHead = 0x38; // TSoftObjectPtr<UMODataAssetHead>
		constexpr auto vHeads = 0x60; // TArray<TSoftObjectPtr<UMODataAssetHead>>
		constexpr auto vAxe1HHeads = 0x70; // TArray<TSoftObjectPtr<UMODataAssetHead>>
		constexpr auto vAxe2HHeads = 0x80; // TArray<TSoftObjectPtr<UMODataAssetHead>>
		constexpr auto vDaggerBlades = 0x90; // TArray<TSoftObjectPtr<UMODataAssetHead>>
		constexpr auto vHammer1HHeads = 0xa0; // TArray<TSoftObjectPtr<UMODataAssetHead>>
		constexpr auto vHammer2HHeads = 0xb0; // TArray<TSoftObjectPtr<UMODataAssetHead>>
		constexpr auto vPoleAxeHeads = 0xc0; // TArray<TSoftObjectPtr<UMODataAssetHead>>
		constexpr auto vPoleSwordBlades = 0xd0; // TArray<TSoftObjectPtr<UMODataAssetHead>>
		constexpr auto vSpearHeads = 0xe0; // TArray<TSoftObjectPtr<UMODataAssetHead>>
		constexpr auto vSword1HBlades = 0xf0; // TArray<TSoftObjectPtr<UMODataAssetHead>>
		constexpr auto vSword2HBlades = 0x100; // TArray<TSoftObjectPtr<UMODataAssetHead>>
		constexpr auto vLanceHeads = 0x110; // TArray<TSoftObjectPtr<UMODataAssetHead>>
		constexpr auto vFishingPoleHeads = 0x120; // TArray<TSoftObjectPtr<UMODataAssetHead>>
		constexpr auto pEquipmentPhysMaterialLeft = 0x130; // UMOPhysicalMaterial*
		constexpr auto pEquipmentPhysMaterialRight = 0x138; // UMOPhysicalMaterial*
		constexpr auto bHeadPartsArePreloaded = 0x140; // bool
		constexpr auto PreLoadedHeadParts = 0x148; // TArray<UMODataAssetHead*>
	}

	namespace n_ACableActor { // : AActor
		constexpr auto CableComponent = 0x220; // UCableComponent*
	}

	namespace n_UParticleSystemComponent { // : UFXSystemComponent
		constexpr auto Template = 0x440; // UParticleSystem*
		constexpr auto EmitterMaterials = 0x448; // TArray<UMaterialInterface*>
		constexpr auto SkelMeshComponents = 0x458; // TArray<USkeletalMeshComponent*>
		constexpr auto bResetOnDetach = 0x469; // char : 1
		constexpr auto bUpdateOnDedicatedServer = 0x469; // char : 1
		constexpr auto bAllowRecycling = 0x469; // char : 1
		constexpr auto bAutoManageAttachment = 0x469; // char : 1
		constexpr auto bAutoAttachWeldSimulatedBodies = 0x469; // char : 1
		constexpr auto bWarmingUp = 0x46a; // char : 1
		constexpr auto bOverrideLODMethod = 0x46a; // char : 1
		constexpr auto bSkipUpdateDynamicDataDuringTick = 0x46a; // char : 1
		constexpr auto LODMethod = 0x475; // ParticleSystemLODMethod
		constexpr auto RequiredSignificance = 0x476; // EParticleSignificanceLevel
		constexpr auto InstanceParameters = 0x478; // TArray<FParticleSysParam>
		constexpr auto OnParticleSpawn = 0x488; // FMulticastInlineDelegate
		constexpr auto OnParticleBurst = 0x498; // FMulticastInlineDelegate
		constexpr auto OnParticleDeath = 0x4a8; // FMulticastInlineDelegate
		constexpr auto OnParticleCollide = 0x4b8; // FMulticastInlineDelegate
		constexpr auto bOldPositionValid = 0x4c8; // bool
		constexpr auto OldPosition = 0x4cc; // FVector
		constexpr auto PartSysVelocity = 0x4d8; // FVector
		constexpr auto WarmupTime = 0x4e4; // float
		constexpr auto WarmupTickRate = 0x4e8; // float
		constexpr auto SecondsBeforeInactive = 0x4f0; // float
		constexpr auto MaxTimeBeforeForceUpdateTransform = 0x4f8; // float
		constexpr auto ReplayClips = 0x518; // TArray<UParticleSystemReplay*>
		constexpr auto CustomTimeDilation = 0x530; // float
		constexpr auto AutoAttachParent = 0x588; // TWeakObjectPtr<USceneComponent>
		constexpr auto AutoAttachSocketName = 0x590; // FName
		constexpr auto AutoAttachLocationRule = 0x598; // EAttachmentRule
		constexpr auto AutoAttachRotationRule = 0x599; // EAttachmentRule
		constexpr auto AutoAttachScaleRule = 0x59a; // EAttachmentRule
		constexpr auto OnSystemFinished = 0x5c8; // FMulticastInlineDelegate
	}

	namespace n_ABP_FishingBobberActor_C { // : AMOFishingBobberActor
		constexpr auto UberGraphFrame = 0x268; // FPointerToUberGraphFrame
		constexpr auto ChildActor = 0x270; // UChildActorComponent*
		constexpr auto PullingStart_fYLocation_55EA2CD3448CB3FB7D1B3CB64F398008 = 0x278; // float
		constexpr auto PullingStart_fXLocation_55EA2CD3448CB3FB7D1B3CB64F398008 = 0x27c; // float
		constexpr auto PullingStart__Direction_55EA2CD3448CB3FB7D1B3CB64F398008 = 0x280; // ETimelineDirection
		constexpr auto PullingStart = 0x288; // UTimelineComponent*
		constexpr auto PullingStop_fYLocation_2D91CB3545D8EA9AEE6FFB84C883B3B4 = 0x290; // float
		constexpr auto PullingStop_fXLocation_2D91CB3545D8EA9AEE6FFB84C883B3B4 = 0x294; // float
		constexpr auto PullingStop__Direction_2D91CB3545D8EA9AEE6FFB84C883B3B4 = 0x298; // ETimelineDirection
		constexpr auto PullingStop = 0x2a0; // UTimelineComponent*
		constexpr auto FishBite_fZLocation_EC3BDEEC4731CC407EA57A977F6F87A3 = 0x2a8; // float
		constexpr auto FishBite__Direction_EC3BDEEC4731CC407EA57A977F6F87A3 = 0x2ac; // ETimelineDirection
		constexpr auto FishBite = 0x2b0; // UTimelineComponent*
		constexpr auto SmallSplash_fZLocation_1F5C5D954DD9D7098B19C9AC77FAB75A = 0x2b8; // float
		constexpr auto SmallSplash__Direction_1F5C5D954DD9D7098B19C9AC77FAB75A = 0x2bc; // ETimelineDirection
		constexpr auto SmallSplash = 0x2c0; // UTimelineComponent*
		constexpr auto BigSplash_fZLocation_A33DFE7C4144456D816A9F8366D8F2E4 = 0x2c8; // float
		constexpr auto BigSplash__Direction_A33DFE7C4144456D816A9F8366D8F2E4 = 0x2cc; // ETimelineDirection
		constexpr auto BigSplash = 0x2d0; // UTimelineComponent*
		constexpr auto HitWater_fZLocation_688617464ED7845EB76673BFFC6196AD = 0x2d8; // float
		constexpr auto HitWater__Direction_688617464ED7845EB76673BFFC6196AD = 0x2dc; // ETimelineDirection
		constexpr auto HitWater = 0x2e0; // UTimelineComponent*
		constexpr auto HitLand_fZLocation_55230C5B43576A79AF5126B0CD7B670B = 0x2e8; // float
		constexpr auto HitLand__Direction_55230C5B43576A79AF5126B0CD7B670B = 0x2ec; // ETimelineDirection
		constexpr auto HitLand = 0x2f0; // UTimelineComponent*
		constexpr auto vLand = 0x2f8; // FVector
		constexpr auto pRodComponent = 0x308; // USkeletalMeshComponent*
		constexpr auto Bobber_Ripples = 0x310; // UNiagaraComponent*
		constexpr auto Bobber_FishBite = 0x318; // UNiagaraComponent*
		constexpr auto Bobber_FishNibble = 0x320; // UNiagaraComponent*
		constexpr auto pFishCaught = 0x328; // ABP_Fishing_CaughtFish_C*
	}

	namespace n_ACharacter { // : APawn
		constexpr auto Mesh = 0x280; // USkeletalMeshComponent*
		constexpr auto CharacterMovement = 0x288; // UCharacterMovementComponent*
		constexpr auto CapsuleComponent = 0x290; // UCapsuleComponent*
		constexpr auto BasedMovement = 0x298; // FBasedMovementInfo
		constexpr auto ReplicatedBasedMovement = 0x2c8; // FBasedMovementInfo
		constexpr auto AnimRootMotionTranslationScale = 0x2f8; // float
		constexpr auto BaseTranslationOffset = 0x2fc; // FVector
		constexpr auto BaseRotationOffset = 0x310; // FQuat
		constexpr auto ReplicatedServerLastTransformUpdateTimeStamp = 0x320; // float
		constexpr auto ReplayLastTransformUpdateTimeStamp = 0x324; // float
		constexpr auto ReplicatedMovementMode = 0x328; // char
		constexpr auto bInBaseReplication = 0x329; // bool
		constexpr auto CrouchedEyeHeight = 0x32c; // float
		constexpr auto bIsCrouched = 0x330; // char : 1
		constexpr auto bProxyIsJumpForceApplied = 0x330; // char : 1
		constexpr auto bPressedJump = 0x330; // char : 1
		constexpr auto bClientUpdating = 0x330; // char : 1
		constexpr auto bClientWasFalling = 0x330; // char : 1
		constexpr auto bClientResimulateRootMotion = 0x330; // char : 1
		constexpr auto bClientResimulateRootMotionSources = 0x330; // char : 1
		constexpr auto bSimGravityDisabled = 0x330; // char : 1
		constexpr auto bClientCheckEncroachmentOnNetUpdate = 0x331; // char : 1
		constexpr auto bServerMoveIgnoreRootMotion = 0x331; // char : 1
		constexpr auto bWasJumping = 0x331; // char : 1
		constexpr auto JumpKeyHoldTime = 0x334; // float
		constexpr auto JumpForceTimeRemaining = 0x338; // float
		constexpr auto ProxyJumpForceStartedTime = 0x33c; // float
		constexpr auto JumpMaxHoldTime = 0x340; // float
		constexpr auto JumpMaxCount = 0x344; // int32_t
		constexpr auto JumpCurrentCount = 0x348; // int32_t
		constexpr auto JumpCurrentCountPreJump = 0x34c; // int32_t
		constexpr auto OnReachedJumpApex = 0x358; // FMulticastInlineDelegate
		constexpr auto MovementModeChangedDelegate = 0x378; // FMulticastInlineDelegate
		constexpr auto OnCharacterMovementUpdated = 0x388; // FMulticastInlineDelegate
		constexpr auto SavedRootMotion = 0x398; // FRootMotionSourceGroup
		constexpr auto ClientRootMotionParams = 0x3d0; // FRootMotionMovementParams
		constexpr auto RootMotionRepMoves = 0x410; // TArray<FSimulatedRootMotionReplicatedMove>
		constexpr auto RepRootMotion = 0x420; // FRepRootMotionMontage
	}

	namespace n_USynthKnob { // : UWidget
		constexpr auto Value = 0x108; // float
		constexpr auto StepSize = 0x10c; // float
		constexpr auto MouseSpeed = 0x110; // float
		constexpr auto MouseFineTuneSpeed = 0x114; // float
		constexpr auto ShowTooltipInfo = 0x118; // char : 1
		constexpr auto ParameterName = 0x120; // FText
		constexpr auto ParameterUnits = 0x138; // FText
		constexpr auto ValueDelegate = 0x150; // FDelegate
		constexpr auto WidgetStyle = 0x160; // FSynthKnobStyle
		constexpr auto Locked = 0x398; // bool
		constexpr auto IsFocusable = 0x399; // bool
		constexpr auto OnMouseCaptureBegin = 0x3a0; // FMulticastInlineDelegate
		constexpr auto OnMouseCaptureEnd = 0x3b0; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureBegin = 0x3c0; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureEnd = 0x3d0; // FMulticastInlineDelegate
		constexpr auto OnValueChanged = 0x3e0; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionTextureBase { // : UMaterialExpression
		constexpr auto Texture = 0x40; // UTexture*
	}

	namespace n_UParticleLODLevel { // : UObject
		constexpr auto Level = 0x28; // int32_t
		constexpr auto bEnabled = 0x2c; // char : 1
		constexpr auto RequiredModule = 0x30; // UParticleModuleRequired*
		constexpr auto Modules = 0x38; // TArray<UParticleModule*>
		constexpr auto TypeDataModule = 0x48; // UParticleModuleTypeDataBase*
		constexpr auto SpawnModule = 0x50; // UParticleModuleSpawn*
		constexpr auto EventGenerator = 0x58; // UParticleModuleEventGenerator*
		constexpr auto SpawningModules = 0x60; // TArray<UParticleModuleSpawnBase*>
		constexpr auto SpawnModules = 0x70; // TArray<UParticleModule*>
		constexpr auto UpdateModules = 0x80; // TArray<UParticleModule*>
		constexpr auto OrbitModules = 0x90; // TArray<UParticleModuleOrbit*>
		constexpr auto EventReceiverModules = 0xa0; // TArray<UParticleModuleEventReceiverBase*>
		constexpr auto ConvertedModules = 0xb0; // char : 1
		constexpr auto PeakActiveParticles = 0xb4; // int32_t
	}

	namespace n_UWrapBoxSlot { // : UPanelSlot
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto bFillEmptySpace = 0x48; // bool
		constexpr auto FillSpanWhenLessThan = 0x4c; // float
		constexpr auto HorizontalAlignment = 0x50; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x51; // EVerticalAlignment
	}

	namespace n_UMovieSceneEventTriggerSection { // : UMovieSceneEventSectionBase
		constexpr auto EventChannel = 0xf0; // FMovieSceneEventChannel
	}

	namespace n_UCharacterCompositionSubsystem { // : UWorldSubsystem
		constexpr auto RegisteredComponents = 0x38; // TArray<UCharacterCompositionComponent*>
		constexpr auto RegisteredStates = 0x48; // TArray<FName>
	}

	namespace n_ALandscapeProxy { // : AActor
		constexpr auto SplineComponent = 0x220; // ULandscapeSplinesComponent*
		constexpr auto LandscapeGuid = 0x228; // FGuid
		constexpr auto LandscapeSectionOffset = 0x238; // FIntPoint
		constexpr auto MaxLODLevel = 0x240; // int32_t
		constexpr auto LODDistanceFactor = 0x244; // float
		constexpr auto LODFalloff = 0x248; // ELandscapeLODFalloff
		constexpr auto ComponentScreenSizeToUseSubSections = 0x24c; // float
		constexpr auto LOD0ScreenSize = 0x250; // float
		constexpr auto LOD0DistributionSetting = 0x254; // float
		constexpr auto LODDistributionSetting = 0x258; // float
		constexpr auto TessellationComponentScreenSize = 0x25c; // float
		constexpr auto UseTessellationComponentScreenSizeFalloff = 0x260; // bool
		constexpr auto TessellationComponentScreenSizeFalloff = 0x264; // float
		constexpr auto OccluderGeometryLOD = 0x268; // int32_t
		constexpr auto StaticLightingLOD = 0x26c; // int32_t
		constexpr auto DefaultPhysMaterial = 0x270; // UPhysicalMaterial*
		constexpr auto StreamingDistanceMultiplier = 0x278; // float
		constexpr auto LandscapeMaterial = 0x280; // UMaterialInterface*
		constexpr auto LandscapeHoleMaterial = 0x2a8; // UMaterialInterface*
		constexpr auto LandscapeMaterialsOverride = 0x2b0; // TArray<FLandscapeProxyMaterialOverride>
		constexpr auto bMeshHoles = 0x2c0; // bool
		constexpr auto MeshHolesMaxLod = 0x2c1; // char
		constexpr auto RuntimeVirtualTextures = 0x2c8; // TArray<URuntimeVirtualTexture*>
		constexpr auto VirtualTextureNumLods = 0x2d8; // int32_t
		constexpr auto VirtualTextureLodBias = 0x2dc; // int32_t
		constexpr auto VirtualTextureRenderPassType = 0x2e0; // ERuntimeVirtualTextureMainPassType
		constexpr auto NegativeZBoundsExtension = 0x2e4; // float
		constexpr auto PositiveZBoundsExtension = 0x2e8; // float
		constexpr auto LandscapeComponents = 0x2f0; // TArray<ULandscapeComponent*>
		constexpr auto CollisionComponents = 0x300; // TArray<ULandscapeHeightfieldCollisionComponent*>
		constexpr auto FoliageComponents = 0x310; // TArray<UHierarchicalInstancedStaticMeshComponent*>
		constexpr auto bHasLandscapeGrass = 0x384; // bool
		constexpr auto StaticLightingResolution = 0x388; // float
		constexpr auto CastShadow = 0x38c; // char : 1
		constexpr auto bCastDynamicShadow = 0x38c; // char : 1
		constexpr auto bCastStaticShadow = 0x38c; // char : 1
		constexpr auto bCastFarShadow = 0x390; // char : 1
		constexpr auto bCastHiddenShadow = 0x394; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x398; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x39c; // char : 1
		constexpr auto LightingChannels = 0x39d; // FLightingChannels
		constexpr auto bUseMaterialPositionOffsetInStaticLighting = 0x3a0; // char : 1
		constexpr auto bRenderCustomDepth = 0x3a0; // char : 1
		constexpr auto CustomDepthStencilWriteMask = 0x3a4; // ERendererStencilMask
		constexpr auto CustomDepthStencilValue = 0x3a8; // int32_t
		constexpr auto LDMaxDrawDistance = 0x3ac; // float
		constexpr auto LightmassSettings = 0x3b0; // FLightmassPrimitiveSettings
		constexpr auto CollisionMipLevel = 0x3c8; // int32_t
		constexpr auto SimpleCollisionMipLevel = 0x3cc; // int32_t
		constexpr auto CollisionThickness = 0x3d0; // float
		constexpr auto BodyInstance = 0x3d8; // FBodyInstance
		constexpr auto bGenerateOverlapEvents = 0x530; // char : 1
		constexpr auto bBakeMaterialPositionOffsetIntoCollision = 0x530; // char : 1
		constexpr auto ComponentSizeQuads = 0x534; // int32_t
		constexpr auto SubsectionSizeQuads = 0x538; // int32_t
		constexpr auto NumSubsections = 0x53c; // int32_t
		constexpr auto bUsedForNavigation = 0x540; // char : 1
		constexpr auto bFillCollisionUnderLandscapeForNavmesh = 0x540; // char : 1
		constexpr auto bUseDynamicMaterialInstance = 0x544; // bool
		constexpr auto NavigationGeometryGatheringMode = 0x545; // ENavDataGatheringMode
		constexpr auto bUseLandscapeForCullingInvisibleHLODVertices = 0x546; // bool
		constexpr auto bHasLayersContent = 0x547; // bool
		constexpr auto WeightmapUsageMap = 0x548; // TMap<UTexture2D*, ULandscapeWeightmapUsage*>
	}

	namespace n_UMovieSceneCaptureProtocolBase { // : UObject
		constexpr auto State = 0x50; // EMovieSceneCaptureProtocolState
	}

	namespace n_ALevelSequenceActor { // : AActor
		constexpr auto PlaybackSettings = 0x230; // FMovieSceneSequencePlaybackSettings
		constexpr auto SequencePlayer = 0x248; // ULevelSequencePlayer*
		constexpr auto LevelSequence = 0x250; // FSoftObjectPath
		constexpr auto CameraSettings = 0x268; // FLevelSequenceCameraSettings
		constexpr auto BurnInOptions = 0x270; // ULevelSequenceBurnInOptions*
		constexpr auto BindingOverrides = 0x278; // UMovieSceneBindingOverrides*
		constexpr auto bAutoPlay = 0x280; // char : 1
		constexpr auto bOverrideInstanceData = 0x280; // char : 1
		constexpr auto bReplicatePlayback = 0x280; // char : 1
		constexpr auto DefaultInstanceData = 0x288; // UObject*
		constexpr auto BurnInInstance = 0x290; // ULevelSequenceBurnIn*
		constexpr auto bShowBurnin = 0x298; // bool
	}

	namespace n_UGizmoArrowComponent { // : UGizmoBaseComponent
		constexpr auto Direction = 0x460; // FVector
		constexpr auto Gap = 0x46c; // float
		constexpr auto Length = 0x470; // float
		constexpr auto Thickness = 0x474; // float
	}

	namespace n_ADatasmithSceneActor { // : AActor
		constexpr auto Scene = 0x220; // UDatasmithScene*
		constexpr auto RelatedActors = 0x228; // TMap<FName, TSoftObjectPtr<AActor>>
	}

	namespace n_UNavModifierComponent { // : UNavRelevantComponent
		constexpr auto AreaClass = 0xe0; // UNavArea*
		constexpr auto FailsafeExtent = 0xe8; // FVector
		constexpr auto bIncludeAgentHeight = 0xf4; // char : 1
	}

	namespace n_UWP_CurrencyWidget_C { // : UMOCurrencyWidget
		constexpr auto UberGraphFrame = 0x280; // FPointerToUberGraphFrame
		constexpr auto Image_Cuprum = 0x288; // UImage*
		constexpr auto Image_Gold = 0x290; // UImage*
		constexpr auto Image_Silver = 0x298; // UImage*
		constexpr auto iGold = 0x2a0; // int32_t
		constexpr auto iSilver = 0x2a4; // int32_t
		constexpr auto iCuprum = 0x2a8; // int64_t
		constexpr auto bShowWhenZero = 0x2b0; // bool
	}

	namespace n_UScrollBoxSlot { // : UPanelSlot
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_USpotLightComponent { // : UPointLightComponent
		constexpr auto InnerConeAngle = 0x358; // float
		constexpr auto OuterConeAngle = 0x35c; // float
	}

	namespace n_UMovieSceneWidgetMaterialTrack { // : UMovieSceneMaterialTrack
		constexpr auto BrushPropertyNamePath = 0x90; // TArray<FName>
		constexpr auto TrackName = 0xa0; // FName
	}

	namespace n_UFont { // : UObject
		constexpr auto FontCacheType = 0x30; // EFontCacheType
		constexpr auto Characters = 0x38; // TArray<FFontCharacter>
		constexpr auto Textures = 0x48; // TArray<UTexture2D*>
		constexpr auto IsRemapped = 0x58; // int32_t
		constexpr auto EmScale = 0x5c; // float
		constexpr auto Ascent = 0x60; // float
		constexpr auto Descent = 0x64; // float
		constexpr auto Leading = 0x68; // float
		constexpr auto Kerning = 0x6c; // int32_t
		constexpr auto ImportOptions = 0x70; // FFontImportOptionsData
		constexpr auto NumCharacters = 0x120; // int32_t
		constexpr auto MaxCharHeight = 0x128; // TArray<int32_t>
		constexpr auto ScalingFactor = 0x138; // float
		constexpr auto LegacyFontSize = 0x13c; // int32_t
		constexpr auto LegacyFontName = 0x140; // FName
		constexpr auto CompositeFont = 0x148; // FCompositeFont
	}

	namespace n_USoundNodeGroupControl { // : USoundNode
		constexpr auto GroupSizes = 0x48; // TArray<int32_t>
	}

	namespace n_UNiagaraDataInterfaceArrayColor { // : UNiagaraDataInterfaceArray
		constexpr auto ColorData = 0x50; // TArray<FLinearColor>
	}

	namespace n_AMainMenu_P_C { // : ALevelScriptActor
		constexpr auto UberGraphFrame = 0x228; // FPointerToUberGraphFrame
		constexpr auto bLoaded = 0x230; // bool
		constexpr auto SkyLight = 0x238; // ASkyLight*
		constexpr auto SkyLightIntensity = 0x240; // float
		constexpr auto DirectionalLight_00 = 0x248; // ADirectionalLight*
		constexpr auto DirectionalLight_01 = 0x250; // ADirectionalLight*
		constexpr auto DirectionalLight_00_Intensity = 0x258; // float
		constexpr auto DirectionalLight_01_Intensity = 0x25c; // float
		constexpr auto BP_MOPaperdollSceneActor_2_ExecuteUbergraph_MainMenu_P_RefProperty = 0x260; // ABP_MOPaperdollSceneActor_C*
	}

	namespace n_UBlackboardKeyType_Enum { // : UBlackboardKeyType
		constexpr auto EnumType = 0x30; // UEnum*
		constexpr auto EnumName = 0x38; // FString
		constexpr auto bIsEnumNameValid = 0x48; // char : 1
	}

	namespace n_UGeneralProjectSettings { // : UObject
		constexpr auto CompanyName = 0x28; // FString
		constexpr auto CompanyDistinguishedName = 0x38; // FString
		constexpr auto CopyrightNotice = 0x48; // FString
		constexpr auto Description = 0x58; // FString
		constexpr auto Homepage = 0x68; // FString
		constexpr auto LicensingTerms = 0x78; // FString
		constexpr auto PrivacyPolicy = 0x88; // FString
		constexpr auto ProjectID = 0x98; // FGuid
		constexpr auto ProjectName = 0xa8; // FString
		constexpr auto ProjectVersion = 0xb8; // FString
		constexpr auto SupportContact = 0xc8; // FString
		constexpr auto ProjectDisplayedTitle = 0xd8; // FText
		constexpr auto ProjectDebugTitleInfo = 0xf0; // FText
		constexpr auto bShouldWindowPreserveAspectRatio = 0x108; // bool
		constexpr auto bUseBorderlessWindow = 0x109; // bool
		constexpr auto bStartInVR = 0x10a; // bool
		constexpr auto bAllowWindowResize = 0x10b; // bool
		constexpr auto bAllowClose = 0x10c; // bool
		constexpr auto bAllowMaximize = 0x10d; // bool
		constexpr auto bAllowMinimize = 0x10e; // bool
	}

	namespace n_UWB_SplashScreens_C { // : UMOWidgetBlueprint
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto FadeOut = 0x268; // UWidgetAnimation*
		constexpr auto AnimateIn = 0x270; // UWidgetAnimation*
		constexpr auto BackgroundImage = 0x278; // UImage*
		constexpr auto ForgroundImage = 0x280; // UImage*
		constexpr auto IntroMovie = 0x288; // UImage*
		constexpr auto LogoMortalOnline = 0x290; // UImage*
		constexpr auto LogoStarVault = 0x298; // UImage*
		constexpr auto TextBlock_PressAnyKey = 0x2a0; // UTextBlock*
		constexpr auto bIsLoaded = 0x2a8; // bool
		constexpr auto pMediaPlayer = 0x2b0; // UMediaPlayer*
		constexpr auto bClicked = 0x2b8; // bool
	}

	namespace n_UMaterialExpressionChannelMaskParameter { // : UMaterialExpressionVectorParameter
		constexpr auto MaskChannel = 0x70; // EChannelMaskParameterColor
	}

	namespace n_UBTTask_PlayAnimation { // : UBTTaskNode
		constexpr auto AnimationToPlay = 0x70; // UAnimationAsset*
		constexpr auto bLooping = 0x78; // char : 1
		constexpr auto bNonBlocking = 0x78; // char : 1
		constexpr auto MyOwnerComp = 0x80; // UBehaviorTreeComponent*
		constexpr auto CachedSkelMesh = 0x88; // USkeletalMeshComponent*
	}

	namespace n_ULandscapeSettings { // : UDeveloperSettings
		constexpr auto MaxNumberOfLayers = 0x38; // int32_t
	}

	namespace n_USplineMeshComponent { // : UStaticMeshComponent
		constexpr auto SplineParams = 0x4d8; // FSplineMeshParams
		constexpr auto SplineUpDir = 0x530; // FVector
		constexpr auto SplineBoundaryMin = 0x53c; // float
		constexpr auto CachedMeshBodySetupGuid = 0x540; // FGuid
		constexpr auto BodySetup = 0x550; // UBodySetup*
		constexpr auto SplineBoundaryMax = 0x558; // float
		constexpr auto bAllowSplineEditingPerInstance = 0x55c; // char : 1
		constexpr auto bSmoothInterpRollScale = 0x55c; // char : 1
		constexpr auto bMeshDirty = 0x55c; // char : 1
		constexpr auto ForwardAxis = 0x55d; // ESplineMeshAxis
		constexpr auto VirtualTextureMainPassMaxDrawDistance = 0x560; // float
	}

	namespace n_UMovieSceneSequencePlayer { // : UObject
		constexpr auto OnPlay = 0x410; // FMulticastInlineDelegate
		constexpr auto OnPlayReverse = 0x420; // FMulticastInlineDelegate
		constexpr auto OnStop = 0x430; // FMulticastInlineDelegate
		constexpr auto OnPause = 0x440; // FMulticastInlineDelegate
		constexpr auto OnFinished = 0x450; // FMulticastInlineDelegate
		constexpr auto Status = 0x460; // EMovieScenePlayerStatus
		constexpr auto bReversePlayback = 0x464; // char : 1
		constexpr auto Sequence = 0x468; // UMovieSceneSequence*
		constexpr auto StartTime = 0x470; // FFrameNumber
		constexpr auto DurationFrames = 0x474; // int32_t
		constexpr auto DurationSubFrames = 0x478; // float
		constexpr auto CurrentNumLoops = 0x47c; // int32_t
		constexpr auto PlaybackSettings = 0x480; // FMovieSceneSequencePlaybackSettings
		constexpr auto RootTemplateInstance = 0x498; // FMovieSceneRootEvaluationTemplateInstance
		constexpr auto NetSyncProps = 0x5e8; // FMovieSceneSequenceReplProperties
		constexpr auto PlaybackClient = 0x5f8; // TScriptInterface<IMovieScenePlaybackClient>
		constexpr auto TickManager = 0x608; // UMovieSceneSequenceTickManager*
	}

	namespace n_UMovieSceneMarginSection { // : UMovieSceneSection
		constexpr auto TopCurve = 0xe8; // FMovieSceneFloatChannel
		constexpr auto LeftCurve = 0x188; // FMovieSceneFloatChannel
		constexpr auto RightCurve = 0x228; // FMovieSceneFloatChannel
		constexpr auto BottomCurve = 0x2c8; // FMovieSceneFloatChannel
	}

	namespace n_UMaterialExpressionLightmassReplace { // : UMaterialExpression
		constexpr auto RealTime = 0x40; // FExpressionInput
		constexpr auto Lightmass = 0x54; // FExpressionInput
	}

	namespace n_UPawnActionsComponent { // : UActorComponent
		constexpr auto ControlledPawn = 0xb0; // APawn*
		constexpr auto ActionStacks = 0xb8; // TArray<FPawnActionStack>
		constexpr auto ActionEvents = 0xc8; // TArray<FPawnActionEvent>
		constexpr auto CurrentAction = 0xd8; // UPawnAction*
	}

	namespace n_UParticleModuleColor { // : UParticleModuleColorBase
		constexpr auto StartColor = 0x30; // FRawDistributionVector
		constexpr auto StartAlpha = 0x78; // FRawDistributionFloat
		constexpr auto bClampAlpha = 0xa8; // char : 1
	}

	namespace n_UMOUserWidgetMOScrollBox { // : UMOUserWidget
		constexpr auto pMOScrollBox = 0x2c8; // UMOScrollBox*
	}

	namespace n_UMOUserWidgetOptions { // : UMOUserWidget
		constexpr auto OnOptionsHide = 0x2c8; // FMulticastInlineDelegate
		constexpr auto OnOptionsShow = 0x2d8; // FMulticastInlineDelegate
		constexpr auto vPanels = 0x2e8; // TArray<UMOUserWidgetOptionsPanel*>
		constexpr auto vTabButtons = 0x2f8; // TArray<UMOUserWidgetTabButtonNew*>
		constexpr auto pCurrentPanel = 0x308; // UMOUserWidgetOptionsPanel*
		constexpr auto pPanelTabButton_Audio = 0x310; // UMOUserWidgetTabButtonNew*
		constexpr auto pOptionsPanel_Audio = 0x318; // UMOUserWidgetOptionsAudio*
		constexpr auto pPanelTabButton_Video = 0x320; // UMOUserWidgetTabButtonNew*
		constexpr auto pOptionsPanel_Video = 0x328; // UMOUserWidgetOptionsVideo*
		constexpr auto pPanelTabButton_Keybinds = 0x330; // UMOUserWidgetTabButtonNew*
		constexpr auto pOptionsPanel_Keybinds = 0x338; // UMOUserWidgetOptionsKeybinds*
		constexpr auto pPanelTabButton_Chat = 0x340; // UMOUserWidgetTabButtonNew*
		constexpr auto pOptionsPanel_Chat = 0x348; // UMOUserWidgetOptionsChat*
		constexpr auto pPanelTabButton_UI = 0x350; // UMOUserWidgetTabButtonNew*
		constexpr auto pOptionsPanel_UI = 0x358; // UMOUserWidgetOptionsUI*
		constexpr auto pPanelTabButton_Gameplay = 0x360; // UMOUserWidgetTabButtonNew*
		constexpr auto pOptionsPanel_Gameplay = 0x368; // UMOUserWidgetOptionsGameplay*
		constexpr auto pPanelTabButton_Language = 0x370; // UMOUserWidgetTabButtonNew*
		constexpr auto pOptionsPanel_Language = 0x378; // UMOUserWidgetOptionsLanguage*
		constexpr auto pSaveChanges_Button = 0x380; // UMOButtonLarge*
		constexpr auto pResetSettings_Button = 0x388; // UMOButtonLarge*
		constexpr auto pCloseMenu_Button = 0x390; // UMOButtonSmall*
	}

	namespace n_UBookMark { // : UBookmarkBase
		constexpr auto Location = 0x28; // FVector
		constexpr auto Rotation = 0x34; // FRotator
		constexpr auto HiddenLevels = 0x40; // TArray<FString>
	}

	namespace n_AOnlineBeaconClient { // : AOnlineBeacon
		constexpr auto BeaconOwner = 0x250; // AOnlineBeaconHostObject*
		constexpr auto BeaconConnection = 0x258; // UNetConnection*
		constexpr auto ConnectionState = 0x260; // EBeaconConnectionState
	}

	namespace n_UCameraComponent { // : USceneComponent
		constexpr auto FieldOfView = 0x1f8; // float
		constexpr auto OrthoWidth = 0x1fc; // float
		constexpr auto OrthoNearClipPlane = 0x200; // float
		constexpr auto OrthoFarClipPlane = 0x204; // float
		constexpr auto AspectRatio = 0x208; // float
		constexpr auto bConstrainAspectRatio = 0x20c; // char : 1
		constexpr auto bUseFieldOfViewForLOD = 0x20c; // char : 1
		constexpr auto bLockToHmd = 0x20c; // char : 1
		constexpr auto bUsePawnControlRotation = 0x20c; // char : 1
		constexpr auto ProjectionMode = 0x20d; // ECameraProjectionMode
		constexpr auto PostProcessBlendWeight = 0x240; // float
		constexpr auto PostProcessSettings = 0x270; // FPostProcessSettings
	}

	namespace n_UMOUISaveGame { // : USaveGame
		constexpr auto sData = 0x28; // FMOSaveData
	}

	namespace n_UGizmoLocalFloatParameterSource { // : UGizmoBaseFloatParameterSource
		constexpr auto Value = 0x48; // float
		constexpr auto LastChange = 0x4c; // FGizmoFloatParameterChange
	}

	namespace n_UParticleModuleOrbit { // : UParticleModuleOrbitBase
		constexpr auto ChainMode = 0x38; // EOrbitChainMode
		constexpr auto OffsetAmount = 0x40; // FRawDistributionVector
		constexpr auto OffsetOptions = 0x88; // FOrbitOptions
		constexpr auto RotationAmount = 0x90; // FRawDistributionVector
		constexpr auto RotationOptions = 0xd8; // FOrbitOptions
		constexpr auto RotationRateAmount = 0xe0; // FRawDistributionVector
		constexpr auto RotationRateOptions = 0x128; // FOrbitOptions
	}

	namespace n_UUserInterfaceSettings { // : UDeveloperSettings
		constexpr auto RenderFocusRule = 0x38; // ERenderFocusRule
		constexpr auto HardwareCursors = 0x40; // TMap<EMouseCursor, FHardwareCursorReference>
		constexpr auto SoftwareCursors = 0x90; // TMap<EMouseCursor, FSoftClassPath>
		constexpr auto DefaultCursor = 0xe0; // FSoftClassPath
		constexpr auto TextEditBeamCursor = 0xf8; // FSoftClassPath
		constexpr auto CrosshairsCursor = 0x110; // FSoftClassPath
		constexpr auto HandCursor = 0x128; // FSoftClassPath
		constexpr auto GrabHandCursor = 0x140; // FSoftClassPath
		constexpr auto GrabHandClosedCursor = 0x158; // FSoftClassPath
		constexpr auto SlashedCircleCursor = 0x170; // FSoftClassPath
		constexpr auto ApplicationScale = 0x188; // float
		constexpr auto UIScaleRule = 0x18c; // EUIScalingRule
		constexpr auto CustomScalingRuleClass = 0x190; // FSoftClassPath
		constexpr auto UIScaleCurve = 0x1a8; // FRuntimeFloatCurve
		constexpr auto bAllowHighDPIInGameMode = 0x230; // bool
		constexpr auto DesignScreenSize = 0x234; // FIntPoint
		constexpr auto bLoadWidgetsOnDedicatedServer = 0x23c; // bool
		constexpr auto CursorClasses = 0x240; // TArray<UObject*>
		constexpr auto CustomScalingRuleClassInstance = 0x250; // UObject*
		constexpr auto CustomScalingRule = 0x258; // UDPICustomScalingRule*
	}

	namespace n_UBTTask_MoveTo { // : UBTTask_BlackboardBase
		constexpr auto AcceptableRadius = 0x98; // float
		constexpr auto FilterClass = 0xa0; // UNavigationQueryFilter*
		constexpr auto ObservedBlackboardValueTolerance = 0xa8; // float
		constexpr auto bObserveBlackboardValue = 0xac; // char : 1
		constexpr auto bAllowStrafe = 0xac; // char : 1
		constexpr auto bAllowPartialPath = 0xac; // char : 1
		constexpr auto bTrackMovingGoal = 0xac; // char : 1
		constexpr auto bProjectGoalLocation = 0xac; // char : 1
		constexpr auto bReachTestIncludesAgentRadius = 0xac; // char : 1
		constexpr auto bReachTestIncludesGoalRadius = 0xac; // char : 1
		constexpr auto bStopOnOverlap = 0xac; // char : 1
		constexpr auto bStopOnOverlapNeedsUpdate = 0xad; // char : 1
	}

	namespace n_UMODataAssetTattooDefinitions { // : UPrimaryDataAsset
		constexpr auto vFacialTattoos = 0x30; // TArray<UMODataAssetTattoo*>
		constexpr auto vBodyTattoos = 0x40; // TArray<UMODataAssetTattoo*>
	}

	namespace n_UNavLinkCustomComponent { // : UNavRelevantComponent
		constexpr auto NavLinkUserId = 0xe8; // uint32_t
		constexpr auto EnabledAreaClass = 0xf0; // UNavArea*
		constexpr auto DisabledAreaClass = 0xf8; // UNavArea*
		constexpr auto SupportedAgents = 0x100; // FNavAgentSelector
		constexpr auto LinkRelativeStart = 0x104; // FVector
		constexpr auto LinkRelativeEnd = 0x110; // FVector
		constexpr auto LinkDirection = 0x11c; // ENavLinkDirection
		constexpr auto bLinkEnabled = 0x120; // char : 1
		constexpr auto bNotifyWhenEnabled = 0x120; // char : 1
		constexpr auto bNotifyWhenDisabled = 0x120; // char : 1
		constexpr auto bCreateBoxObstacle = 0x120; // char : 1
		constexpr auto ObstacleOffset = 0x124; // FVector
		constexpr auto ObstacleExtent = 0x130; // FVector
		constexpr auto ObstacleAreaClass = 0x140; // UNavArea*
		constexpr auto BroadcastRadius = 0x148; // float
		constexpr auto BroadcastInterval = 0x14c; // float
		constexpr auto BroadcastChannel = 0x150; // ECollisionChannel
	}

	namespace n_UDistributionVectorUniform { // : UDistributionVector
		constexpr auto Max = 0x38; // FVector
		constexpr auto Min = 0x44; // FVector
		constexpr auto bLockAxes = 0x50; // char : 1
		constexpr auto LockedAxes = 0x54; // EDistributionVectorLockFlags
		constexpr auto MirrorFlags = 0x55; // EDistributionVectorMirrorFlags [0x3]
		constexpr auto bUseExtremes = 0x58; // char : 1
	}

	namespace n_UAITask { // : UGameplayTask
		constexpr auto OwnerController = 0x68; // AAIController*
	}

	namespace n_UStreamMediaSource { // : UBaseMediaSource
		constexpr auto StreamUrl = 0x88; // FString
	}

	namespace n_UAnimNotifyState_TimedParticleEffect { // : UAnimNotifyState
		constexpr auto PSTemplate = 0x30; // UParticleSystem*
		constexpr auto SocketName = 0x38; // FName
		constexpr auto LocationOffset = 0x40; // FVector
		constexpr auto RotationOffset = 0x4c; // FRotator
		constexpr auto bDestroyAtEnd = 0x58; // bool
	}

	namespace n_UTestMovieSceneSubTrack { // : UMovieSceneSubTrack
		constexpr auto SectionArray = 0x88; // TArray<UMovieSceneSection*>
	}

	namespace n_UControlRigGizmoLibrary { // : UObject
		constexpr auto DefaultGizmo = 0x30; // FControlRigGizmoDefinition
		constexpr auto DefaultMaterial = 0x90; // TSoftObjectPtr<UMaterial>
		constexpr auto MaterialColorParameter = 0xb8; // FName
		constexpr auto Gizmos = 0xc0; // TArray<FControlRigGizmoDefinition>
	}

	namespace n_UDecalComponent { // : USceneComponent
		constexpr auto DecalMaterial = 0x1f8; // UMaterialInterface*
		constexpr auto SortOrder = 0x200; // int32_t
		constexpr auto FadeScreenSize = 0x204; // float
		constexpr auto FadeStartDelay = 0x208; // float
		constexpr auto FadeDuration = 0x20c; // float
		constexpr auto FadeInDuration = 0x210; // float
		constexpr auto FadeInStartDelay = 0x214; // float
		constexpr auto bDestroyOwnerAfterFade = 0x218; // char : 1
		constexpr auto DecalSize = 0x21c; // FVector
	}

	namespace n_UPhysicsAsset { // : UObject
		constexpr auto BoundsBodies = 0x30; // TArray<int32_t>
		constexpr auto SkeletalBodySetups = 0x40; // TArray<USkeletalBodySetup*>
		constexpr auto ConstraintSetup = 0x50; // TArray<UPhysicsConstraintTemplate*>
		constexpr auto SolverIterations = 0x60; // FSolverIterations
		constexpr auto bNotForDedicatedServer = 0x7c; // char : 1
		constexpr auto ThumbnailInfo = 0x120; // UThumbnailInfo*
		constexpr auto BodySetup = 0x128; // TArray<UBodySetup*>
	}

	namespace n_UTextureLODSettings { // : UObject
		constexpr auto TextureLODGroups = 0x28; // TArray<FTextureLODGroup>
	}

	namespace n_UParticleModuleAcceleration { // : UParticleModuleAccelerationBase
		constexpr auto Acceleration = 0x38; // FRawDistributionVector
		constexpr auto bApplyOwnerScale = 0x80; // char : 1
	}

	namespace n_AMOLevelStreamingVolume { // : AVolume
		constexpr auto Sublevels = 0x258; // TArray<TSoftObjectPtr<UWorld>>
		constexpr auto SublevelNames = 0x268; // TArray<FName>
		constexpr auto SublevelPaths = 0x278; // TArray<FName>
		constexpr auto LeaveBufferZoneThickness = 0x288; // float
	}

	namespace n_UNiagaraDataInterfaceArrayFloat2 { // : UNiagaraDataInterfaceArray
		constexpr auto FloatData = 0x50; // TArray<FVector2D>
	}

	namespace n_UAISubsystem { // : UObject
		constexpr auto AISystem = 0x30; // UAISystem*
	}

	namespace n_UMovieScene3DTransformSection { // : UMovieSceneSection
		constexpr auto TransformMask = 0xf0; // FMovieSceneTransformMask
		constexpr auto Translation = 0xf8; // FMovieSceneFloatChannel [0x3]
		constexpr auto Rotation = 0x2d8; // FMovieSceneFloatChannel [0x3]
		constexpr auto Scale = 0x4b8; // FMovieSceneFloatChannel [0x3]
		constexpr auto ManualWeight = 0x698; // FMovieSceneFloatChannel
		constexpr auto bUseQuaternionInterpolation = 0x738; // bool
	}

	namespace n_UMOBrokerCreateOrdersPanel { // : UMOBrokerPanel
		constexpr auto pItemSlot = 0x2d8; // UMOItemSlotPlaceItem*
		constexpr auto pMOBrokerCurrencyWidget = 0x2e0; // UMOBrokerCurrencyWidget*
		constexpr auto pMOEditableTextBox_ActivePage = 0x2e8; // UMOEditableTextBoxNumbers*
		constexpr auto pMOButton_NextPage = 0x2f0; // UMOButton*
		constexpr auto pMOButton_PreviousPage = 0x2f8; // UMOButton*
		constexpr auto pMOButton_Close = 0x300; // UMOButton*
		constexpr auto pMOButton_Browse = 0x308; // UMOButton*
		constexpr auto pMOScrollBox_Category = 0x310; // UMOScrollBox*
		constexpr auto cMOItemListEntryClass = 0x318; // UMOBrokerItemListEntry*
		constexpr auto vItemEntries = 0x320; // TArray<UMOBrokerItemListEntry*>
		constexpr auto vCategoryEntries = 0x330; // TArray<UMOBrokerCategoryEntry*>
		constexpr auto pMOScrollBox_Items = 0x340; // UMOScrollBox*
		constexpr auto pMOEditableTextBox_FilterItems = 0x348; // UMOEditableTextBox*
	}

	namespace n_UMaterialExpressionArcsine { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UInterpTrackInstFloatProp { // : UInterpTrackInstProperty
		constexpr auto ResetFloat = 0x58; // float
	}

	namespace n_UParticleModuleColor_Seeded { // : UParticleModuleColor
		constexpr auto RandomSeedInfo = 0xb0; // FParticleRandomSeedInfo
	}

	namespace n_UBrushStampIndicator { // : UInteractiveGizmo
		constexpr auto BrushRadius = 0x38; // float
		constexpr auto BrushFalloff = 0x3c; // float
		constexpr auto BrushPosition = 0x40; // FVector
		constexpr auto BrushNormal = 0x4c; // FVector
		constexpr auto bDrawIndicatorLines = 0x58; // bool
		constexpr auto bDrawRadiusCircle = 0x59; // bool
		constexpr auto SampleStepCount = 0x5c; // int32_t
		constexpr auto LineColor = 0x60; // FLinearColor
		constexpr auto LineThickness = 0x70; // float
		constexpr auto bDepthTested = 0x74; // bool
		constexpr auto bDrawSecondaryLines = 0x75; // bool
		constexpr auto SecondaryLineThickness = 0x78; // float
		constexpr auto SecondaryLineColor = 0x7c; // FLinearColor
		constexpr auto AttachedComponent = 0x90; // UPrimitiveComponent*
	}

	namespace n_UMOBuff { // : UMOWidgetBlueprint
		constexpr auto bCanTick = 0x260; // bool
		constexpr auto bPlayingRemoveAnim = 0x261; // bool
		constexpr auto fDurationMax = 0x264; // float
		constexpr auto fDurationLeft = 0x268; // float
		constexpr auto pTextBlockTime = 0x270; // UTextBlock*
		constexpr auto pImageIcon = 0x278; // UImage*
		constexpr auto pImageBar = 0x280; // UImage*
		constexpr auto pFrame = 0x288; // UImage*
		constexpr auto sBuffName = 0x290; // FString
		constexpr auto sDisplayName = 0x2a0; // FText
		constexpr auto sDescription = 0x2b8; // FText
	}

	namespace n_ABP_AiEffectArrowExplosion_C { // : AMOAiEffectActor
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
	}

	namespace n_UMOGuildStoneMembersEntry { // : UMOUserWidget
		constexpr auto pName = 0x2c8; // UTextBlock*
		constexpr auto pRank = 0x2d0; // UTextBlock*
		constexpr auto pKick = 0x2d8; // UMOButtonSmall*
		constexpr auto pPromote = 0x2e0; // UMOButtonSmall*
		constexpr auto pDemote = 0x2e8; // UMOButtonSmall*
		constexpr auto pOnlineImage = 0x2f0; // UImage*
		constexpr auto vOnlineImageColor = 0x2f8; // FLinearColor
		constexpr auto vOnlineTextColor = 0x308; // FLinearColor
		constexpr auto vOfflineColor = 0x318; // FLinearColor
	}

	namespace n_ULightmassPortalComponent { // : USceneComponent
		constexpr auto PreviewBox = 0x1f8; // UBoxComponent*
	}

	namespace n_UMovieSceneCompiledData { // : UObject
		constexpr auto EvaluationTemplate = 0x28; // FMovieSceneEvaluationTemplate
		constexpr auto Hierarchy = 0x188; // FMovieSceneSequenceHierarchy
		constexpr auto EntityComponentField = 0x2a0; // FMovieSceneEntityComponentField
		constexpr auto TrackTemplateField = 0x390; // FMovieSceneEvaluationField
		constexpr auto DeterminismFences = 0x3c0; // TArray<FFrameTime>
		constexpr auto CompiledSignature = 0x3d0; // FGuid
		constexpr auto CompilerVersion = 0x3e0; // FGuid
		constexpr auto AccumulatedMask = 0x3f0; // FMovieSceneSequenceCompilerMaskStruct
		constexpr auto AllocatedMask = 0x3f1; // FMovieSceneSequenceCompilerMaskStruct
		constexpr auto AccumulatedFlags = 0x3f2; // EMovieSceneSequenceFlags
	}

	namespace n_UInheritableComponentHandler { // : UObject
		constexpr auto Records = 0x28; // TArray<FComponentOverrideRecord>
		constexpr auto UnnecessaryComponents = 0x38; // TArray<UActorComponent*>
	}

	namespace n_UNiagaraPreviewAxis_InterpParamInt32 { // : UNiagaraPreviewAxis_InterpParamBase
		constexpr auto Min = 0x38; // int32_t
		constexpr auto Max = 0x3c; // int32_t
	}

	namespace n_UWaterMeshComponent { // : UMeshComponent
		constexpr auto ForceCollapseDensityLevel = 0x468; // int32_t
		constexpr auto TileSize = 0x46c; // float
		constexpr auto ExtentInTiles = 0x470; // FIntPoint
		constexpr auto FarDistanceMaterial = 0x478; // UMaterialInterface*
		constexpr auto FarDistanceMeshExtent = 0x480; // float
		constexpr auto RTWorldLocation = 0x484; // FVector
		constexpr auto RTWorldSizeVector = 0x490; // FVector
		constexpr auto TessellationFactor = 0x580; // int32_t
		constexpr auto LODScale = 0x584; // float
	}

	namespace n_UClothLODDataCommon_Legacy { // : UObject
		constexpr auto PhysicalMeshData = 0x28; // UClothPhysicalMeshDataBase_Legacy*
		constexpr auto ClothPhysicalMeshData = 0x30; // FClothPhysicalMeshData
		constexpr auto CollisionData = 0x128; // FClothCollisionData
	}

	namespace n_UMODataAssetResourceDefinitions { // : UPrimaryDataAsset
		constexpr auto pFallbackResource = 0x30; // UMODataAssetResource*
		constexpr auto vBoneResources = 0x38; // TArray<UMODataAssetResource*>
		constexpr auto vCarapaceResources = 0x48; // TArray<UMODataAssetResource*>
		constexpr auto vCrystalResources = 0x58; // TArray<UMODataAssetResource*>
		constexpr auto vFurResources = 0x68; // TArray<UMODataAssetResource*>
		constexpr auto vLeatherResources = 0x78; // TArray<UMODataAssetResource*>
		constexpr auto vMetalResources = 0x88; // TArray<UMODataAssetResource*>
		constexpr auto vScalesResources = 0x98; // TArray<UMODataAssetResource*>
		constexpr auto vSkinResources = 0xa8; // TArray<UMODataAssetResource*>
		constexpr auto vStoneResources = 0xb8; // TArray<UMODataAssetResource*>
		constexpr auto vWoodResources = 0xc8; // TArray<UMODataAssetResource*>
		constexpr auto vTextileResources = 0xd8; // TArray<UMODataAssetResource*>
		constexpr auto bResourcesArePreloaded = 0xe8; // bool
		constexpr auto PreloadedResourceMaterials = 0xf0; // TArray<UMaterialInstance*>
		constexpr auto PreloadedHitSounds = 0x100; // TArray<USoundCue*>
		constexpr auto PreloadedHitParticles = 0x110; // TArray<UNiagaraSystem*>
	}

	namespace n_UAnimCompress_RemoveLinearKeys { // : UAnimCompress
		constexpr auto MaxPosDiff = 0x40; // float
		constexpr auto MaxAngleDiff = 0x44; // float
		constexpr auto MaxScaleDiff = 0x48; // float
		constexpr auto MaxEffectorDiff = 0x4c; // float
		constexpr auto MinEffectorDiff = 0x50; // float
		constexpr auto EffectorDiffSocket = 0x54; // float
		constexpr auto ParentKeyScale = 0x58; // float
		constexpr auto bRetarget = 0x5c; // char : 1
		constexpr auto bActuallyFilterLinearKeys = 0x5c; // char : 1
	}

	namespace n_UParticleModuleLocationBoneSocket { // : UParticleModuleLocationBase
		constexpr auto SourceType = 0x30; // ELocationBoneSocketSource
		constexpr auto UniversalOffset = 0x34; // FVector
		constexpr auto SourceLocations = 0x40; // TArray<FLocationBoneSocketInfo>
		constexpr auto SelectionMethod = 0x50; // ELocationBoneSocketSelectionMethod
		constexpr auto bUpdatePositionEachFrame = 0x54; // char : 1
		constexpr auto bOrientMeshEmitters = 0x54; // char : 1
		constexpr auto bInheritBoneVelocity = 0x54; // char : 1
		constexpr auto InheritVelocityScale = 0x58; // float
		constexpr auto SkelMeshActorParamName = 0x5c; // FName
		constexpr auto NumPreSelectedIndices = 0x64; // int32_t
	}

	namespace n_UMOUserWidgetCompassHUD { // : UMOUserWidget
		constexpr auto pHorizontalCompass = 0x2c8; // UMOUserWidgetCompassHorizontal*
		constexpr auto pCircleCompass = 0x2d0; // UMOUserWidgetCompassCircle*
	}

	namespace n_UFloatingPawnMovement { // : UPawnMovementComponent
		constexpr auto MaxSpeed = 0x138; // float
		constexpr auto Acceleration = 0x13c; // float
		constexpr auto Deceleration = 0x140; // float
		constexpr auto TurningBoost = 0x144; // float
		constexpr auto bPositionCorrected = 0x148; // char : 1
	}

	namespace n_AWaterBodyExclusionVolume { // : APhysicsVolume
		constexpr auto bIgnoreAllOverlappingWaterBodies = 0x268; // bool
		constexpr auto WaterBodiesToIgnore = 0x270; // TArray<AWaterBody*>
	}

	namespace n_UMOGameMessage { // : UMOUserWidget
		constexpr auto pTextBlockScreenMessage = 0x2c8; // UTextBlock*
	}

	namespace n_UTextRenderComponent { // : UPrimitiveComponent
		constexpr auto Text = 0x440; // FText
		constexpr auto TextMaterial = 0x458; // UMaterialInterface*
		constexpr auto Font = 0x460; // UFont*
		constexpr auto HorizontalAlignment = 0x468; // EHorizTextAligment
		constexpr auto VerticalAlignment = 0x469; // EVerticalTextAligment
		constexpr auto TextRenderColor = 0x46c; // FColor
		constexpr auto XScale = 0x470; // float
		constexpr auto YScale = 0x474; // float
		constexpr auto WorldSize = 0x478; // float
		constexpr auto InvDefaultSize = 0x47c; // float
		constexpr auto HorizSpacingAdjust = 0x480; // float
		constexpr auto VertSpacingAdjust = 0x484; // float
		constexpr auto bAlwaysRenderAsText = 0x488; // char : 1
	}

	namespace n_UControlRigObjectHolder { // : UObject
		constexpr auto Objects = 0x28; // TArray<UObject*>
	}

	namespace n_UMOInfoEntryAttributeLock { // : UMOCharCreationInfoEntry
		constexpr auto pMOButtonAttributeToggle = 0x328; // UMOButtonAttributeToggle*
	}

	namespace n_UBTTask_BlueprintBase { // : UBTTaskNode
		constexpr auto AIOwner = 0x70; // AAIController*
		constexpr auto ActorOwner = 0x78; // AActor*
		constexpr auto TickInterval = 0x80; // FIntervalCountdown
		constexpr auto bShowPropertyDetails = 0xa0; // char : 1
	}

	namespace n_UMagicLeapPlanesComponent { // : USceneComponent
		constexpr auto QueryFlags = 0x1f8; // TArray<EMagicLeapPlaneQueryFlags>
		constexpr auto SearchVolume = 0x208; // UBoxComponent*
		constexpr auto MaxResults = 0x210; // int32_t
		constexpr auto MinHolePerimeter = 0x214; // float
		constexpr auto MinPlaneArea = 0x218; // float
		constexpr auto QueryType = 0x21c; // EMagicLeapPlaneQueryType
		constexpr auto SimilarityThreshold = 0x220; // float
		constexpr auto OnPlanesQueryResult = 0x228; // FMulticastInlineDelegate
		constexpr auto OnPersistentPlanesQueryResult = 0x238; // FMulticastInlineDelegate
	}

	namespace n_ACameraRig_Crane { // : AActor
		constexpr auto CranePitch = 0x220; // float
		constexpr auto CraneYaw = 0x224; // float
		constexpr auto CraneArmLength = 0x228; // float
		constexpr auto bLockMountPitch = 0x22c; // bool
		constexpr auto bLockMountYaw = 0x22d; // bool
		constexpr auto TransformComponent = 0x230; // USceneComponent*
		constexpr auto CraneYawControl = 0x238; // USceneComponent*
		constexpr auto CranePitchControl = 0x240; // USceneComponent*
		constexpr auto CraneCameraMount = 0x248; // USceneComponent*
	}

	namespace n_UGameViewportClient { // : UScriptViewportClient
		constexpr auto ViewportConsole = 0x40; // UConsole*
		constexpr auto DebugProperties = 0x48; // TArray<FDebugDisplayProperty>
		constexpr auto MaxSplitscreenPlayers = 0x68; // int32_t
		constexpr auto World = 0x78; // UWorld*
		constexpr auto GameInstance = 0x80; // UGameInstance*
	}

	namespace n_UParticleModuleTypeDataRibbon { // : UParticleModuleTypeDataBase
		constexpr auto MaxTessellationBetweenParticles = 0x30; // int32_t
		constexpr auto SheetsPerTrail = 0x34; // int32_t
		constexpr auto MaxTrailCount = 0x38; // int32_t
		constexpr auto MaxParticleInTrailCount = 0x3c; // int32_t
		constexpr auto bDeadTrailsOnDeactivate = 0x40; // char : 1
		constexpr auto bDeadTrailsOnSourceLoss = 0x40; // char : 1
		constexpr auto bClipSourceSegement = 0x40; // char : 1
		constexpr auto bEnablePreviousTangentRecalculation = 0x40; // char : 1
		constexpr auto bTangentRecalculationEveryFrame = 0x40; // char : 1
		constexpr auto bSpawnInitialParticle = 0x40; // char : 1
		constexpr auto RenderAxis = 0x44; // ETrailsRenderAxisOption
		constexpr auto TangentSpawningScalar = 0x48; // float
		constexpr auto bRenderGeometry = 0x4c; // char : 1
		constexpr auto bRenderSpawnPoints = 0x4c; // char : 1
		constexpr auto bRenderTangents = 0x4c; // char : 1
		constexpr auto bRenderTessellation = 0x4c; // char : 1
		constexpr auto TilingDistance = 0x50; // float
		constexpr auto DistanceTessellationStepSize = 0x54; // float
		constexpr auto bEnableTangentDiffInterpScale = 0x58; // char : 1
		constexpr auto TangentTessellationScalar = 0x5c; // float
	}

	namespace n_UCheckBox { // : UContentWidget
		constexpr auto CheckedState = 0x120; // ECheckBoxState
		constexpr auto CheckedStateDelegate = 0x124; // FDelegate
		constexpr auto WidgetStyle = 0x138; // FCheckBoxStyle
		constexpr auto Style = 0x6b8; // USlateWidgetStyleAsset*
		constexpr auto UncheckedImage = 0x6c0; // USlateBrushAsset*
		constexpr auto UncheckedHoveredImage = 0x6c8; // USlateBrushAsset*
		constexpr auto UncheckedPressedImage = 0x6d0; // USlateBrushAsset*
		constexpr auto CheckedImage = 0x6d8; // USlateBrushAsset*
		constexpr auto CheckedHoveredImage = 0x6e0; // USlateBrushAsset*
		constexpr auto CheckedPressedImage = 0x6e8; // USlateBrushAsset*
		constexpr auto UndeterminedImage = 0x6f0; // USlateBrushAsset*
		constexpr auto UndeterminedHoveredImage = 0x6f8; // USlateBrushAsset*
		constexpr auto UndeterminedPressedImage = 0x700; // USlateBrushAsset*
		constexpr auto HorizontalAlignment = 0x708; // EHorizontalAlignment
		constexpr auto Padding = 0x70c; // FMargin
		constexpr auto BorderBackgroundColor = 0x720; // FSlateColor
		constexpr auto ClickMethod = 0x748; // EButtonClickMethod
		constexpr auto TouchMethod = 0x749; // EButtonTouchMethod
		constexpr auto PressMethod = 0x74a; // EButtonPressMethod
		constexpr auto IsFocusable = 0x74b; // bool
		constexpr auto OnCheckStateChanged = 0x750; // FMulticastInlineDelegate
	}

	namespace n_ABP_MOCharacterAI_Creature_Cougar_Adult_C { // : ABP_MOCharacterAI_Creature_C
		constexpr auto GFur_1 = 0xdd0; // UGFurComponent*
	}

	namespace n_UMOButtonMinus { // : UMOButton
		constexpr auto CustomStyle = 0x438; // USlateWidgetStyleAsset*
	}

	namespace n_UBTDecorator_SetTagCooldown { // : UBTDecorator
		constexpr auto CooldownTag = 0x68; // FGameplayTag
		constexpr auto CooldownDuration = 0x70; // float
		constexpr auto bAddToExistingDuration = 0x74; // bool
	}

	namespace n_UPaperSpriteComponent { // : UMeshComponent
		constexpr auto SourceSprite = 0x468; // UPaperSprite*
		constexpr auto MaterialOverride = 0x470; // UMaterialInterface*
		constexpr auto SpriteColor = 0x478; // FLinearColor
	}

	namespace n_UParticleModuleMeshRotation { // : UParticleModuleRotationBase
		constexpr auto StartRotation = 0x30; // FRawDistributionVector
		constexpr auto bInheritParent = 0x78; // char : 1
	}

	namespace n_UParticleModuleRotationRate { // : UParticleModuleRotationRateBase
		constexpr auto StartRotationRate = 0x30; // FRawDistributionFloat
	}

	namespace n_UInterpTrackEvent { // : UInterpTrack
		constexpr auto EventTrack = 0x70; // TArray<FEventTrackKey>
		constexpr auto bFireEventsWhenForwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenJumpingForwards = 0x80; // char : 1
		constexpr auto bUseCustomEventName = 0x80; // char : 1
	}

	namespace n_UNiagaraDataInterfaceCurveBase { // : UNiagaraDataInterface
		constexpr auto ShaderLUT = 0x38; // TArray<float>
		constexpr auto LUTMinTime = 0x48; // float
		constexpr auto LUTMaxTime = 0x4c; // float
		constexpr auto LUTInvTimeRange = 0x50; // float
		constexpr auto LUTNumSamplesMinusOne = 0x54; // float
		constexpr auto bUseLUT = 0x58; // char : 1
		constexpr auto bExposeCurve = 0x58; // char : 1
		constexpr auto ExposedName = 0x5c; // FName
		constexpr auto ExposedTexture = 0x68; // UTexture2D*
	}

	namespace n_UMOBuildableUpkeepPanel { // : UMOBuildablePanel
		constexpr auto pMOButton_PayUpkeep = 0x2d0; // UMOButton*
		constexpr auto pItemSlot_PayUpkeep = 0x2d8; // UMOItemSlotPlaceItem*
		constexpr auto pTextBlock_UpkeepTimeLeft = 0x2e0; // UTextBlock*
		constexpr auto pMOCurrencyWidget_UpkeepCostPerHour = 0x2e8; // UMOCurrencyWidget*
		constexpr auto pMOCurrencyWidget_CurrentUpkeepPaid = 0x2f0; // UMOCurrencyWidget*
	}

	namespace n_UFoliageType_InstancedStaticMesh { // : UFoliageType
		constexpr auto Mesh = 0x3b0; // UStaticMesh*
		constexpr auto OverrideMaterials = 0x3b8; // TArray<UMaterialInterface*>
		constexpr auto ComponentClass = 0x3c8; // UFoliageInstancedStaticMeshComponent*
	}

	namespace n_UInterpTrackInstBoolProp { // : UInterpTrackInstProperty
		constexpr auto ResetBool = 0x60; // bool
	}

	namespace n_UARSaveWorldAsyncTaskBlueprintProxy { // : UARBaseAsyncTaskBlueprintProxy
		constexpr auto OnSuccess = 0x50; // FMulticastInlineDelegate
		constexpr auto OnFailed = 0x60; // FMulticastInlineDelegate
	}

	namespace n_UMODataAssetEmoteBaseDefinition { // : UMODataAssetAnimationBase
		constexpr auto bEnabledInReleaseBuild = 0xa0; // bool
		constexpr auto bShowInUIForPlayer = 0xa1; // bool
	}

	namespace n_UNiagaraPreviewAxis_InterpParamLinearColor { // : UNiagaraPreviewAxis_InterpParamBase
		constexpr auto Min = 0x38; // FLinearColor
		constexpr auto Max = 0x48; // FLinearColor
	}

	namespace n_UBTService { // : UBTAuxiliaryNode
		constexpr auto Interval = 0x60; // float
		constexpr auto RandomDeviation = 0x64; // float
		constexpr auto bCallTickOnSearchStart = 0x68; // char : 1
		constexpr auto bRestartTimerOnEachActivation = 0x68; // char : 1
	}

	namespace n_UGameplayTasksComponent { // : UActorComponent
		constexpr auto bIsNetDirty = 0xbc; // char : 1
		constexpr auto SimulatedTasks = 0xc0; // TArray<UGameplayTask*>
		constexpr auto TaskPriorityQueue = 0xd0; // TArray<UGameplayTask*>
		constexpr auto TickingTasks = 0xf0; // TArray<UGameplayTask*>
		constexpr auto KnownTasks = 0x100; // TArray<UGameplayTask*>
		constexpr auto OnClaimedResourcesChange = 0x110; // FMulticastInlineDelegate
	}

}