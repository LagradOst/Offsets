// Created by BlueFire1337
// Updated 2022-01-24
// Generated 2022-02-02

namespace off {
	constexpr auto GNames = 0x5e83300;
	constexpr auto GObjects = 0x5e9abf0;
	constexpr auto GWorld = 0x5f82410;

	namespace n_UMM_Popup_SteamIAP { // : UWidgetBase
		constexpr auto m_WebBrowser = 0x2e0; // UMirWebBrowser*
		constexpr auto m_Btn_Close = 0x2e8; // UMirButton*
		constexpr auto DelayCloseTimeHandle = 0x2f0; // FTimerHandle
	}

	namespace n_UMM_TotalMenu_SubSlot { // : UMM_TotalMenu_SlotBase
		constexpr auto m_iSubSlot_Row = 0x308; // int32_t
		constexpr auto m_iSubSlot_Col = 0x30c; // int32_t
		constexpr auto m_Txt_Name = 0x318; // UMirTextBlock*
		constexpr auto m_Btn_Main = 0x320; // UMirButton*
		constexpr auto m_Grid_OpenEffect = 0x328; // UPanelWidget*
		constexpr auto m_Img_Indicator = 0x330; // UMirImage*
		constexpr auto m_OpenEffect = 0x338; // UEffectWidgetBase*
	}

	namespace n_UComboBoxString { // : UWidget
		constexpr auto DefaultOptions = 0x108; // TArray<FString>
		constexpr auto SelectedOption = 0x118; // FString
		constexpr auto WidgetStyle = 0x128; // FComboBoxStyle
		constexpr auto ItemStyle = 0x500; // FTableRowStyle
		constexpr auto ContentPadding = 0xcc8; // FMargin
		constexpr auto MaxListHeight = 0xcd8; // float
		constexpr auto HasDownArrow = 0xcdc; // bool
		constexpr auto EnableGamepadNavigationMode = 0xcdd; // bool
		constexpr auto Font = 0xce0; // FSlateFontInfo
		constexpr auto ForegroundColor = 0xd30; // FSlateColor
		constexpr auto bIsFocusable = 0xd58; // bool
		constexpr auto OnGenerateWidgetEvent = 0xd5c; // DelegateProperty
		constexpr auto OnSelectionChanged = 0xd70; // FScriptMulticastDelegate
		constexpr auto OnOpening = 0xd80; // FScriptMulticastDelegate
	}

	namespace n_UMM_Common_Popup_Reward { // : UWidgetBase
		constexpr auto m_WrapBox = 0x2e0; // UWrapBox*
		constexpr auto RewardList = 0x2e8; // TArray<UMM_Slot_Material*>
		constexpr auto Txt_Title = 0x2f8; // UMirTextBlock*
		constexpr auto RichTxt_GuideMessage = 0x300; // UMirRichTextBlock*
		constexpr auto btn_close = 0x308; // UMM_Common_Btn_Symbol*
		constexpr auto Btn_Background = 0x310; // UMirButton*
		constexpr auto m_IsMakeItem = 0x318; // bool
	}

	namespace n_UMM_Inventory_Tab { // : UWidgetBase
		constexpr auto DefaultIconId = 0x300; // int32_t
		constexpr auto SelectIconId = 0x304; // int32_t
		constexpr auto m_ImgSymbolIcon = 0x308; // UMirImage*
		constexpr auto m_ImgSymbolIcon_Select = 0x310; // UMirImage*
		constexpr auto Grid_Inven = 0x320; // UPanelWidget*
		constexpr auto Grid_Info = 0x328; // UPanelWidget*
		constexpr auto Img_SelectBG = 0x330; // UMirImage*
		constexpr auto Txt_TabNum = 0x338; // UTextBlock*
		constexpr auto Img_Indicator = 0x340; // UImage*
		constexpr auto Img_BtnIndicator = 0x348; // UImage*
		constexpr auto Btn_Tab = 0x350; // UButton*
		constexpr auto Txt_TabName_2 = 0x358; // UTextBlock*
		constexpr auto Btn_Tab_2 = 0x360; // UButton*
		constexpr auto m_Img_TabSelect = 0x368; // UImage*
		constexpr auto m_Img_TabDeSelect = 0x370; // UImage*
		constexpr auto m_PanEffect = 0x378; // UPanelWidget*
	}

	namespace n_UPageTutorialData { // : UDataAsset
		constexpr auto PageTutorialStepArray = 0x30; // TArray<FPageTutorialGroup>
	}

	namespace n_UDemoNetDriver { // : UNetDriver
		constexpr auto RollbackNetStartupActors = 0x800; // TMap<FString, FRollbackNetStartupActorInfo>
		constexpr auto CheckpointSaveMaxMSPerFrame = 0xc14; // float
		constexpr auto MulticastRecordOptions = 0xc48; // TArray<FMulticastRecordOptions>
		constexpr auto bIsLocalReplay = 0xc58; // bool
		constexpr auto SpectatorControllers = 0xc60; // TArray<APlayerController*>
	}

	namespace n_UMM_Occupation_Rank_Reward_List { // : UWidgetBase
		constexpr auto m_Txt_Rank = 0x2e0; // UMirTextBlock*
		constexpr auto m_img_MVP = 0x2e8; // UMirImage*
		constexpr auto m_reward_Item_List = 0x2f0; // TArray<UMM_Slot_Material*>
	}

	namespace n_UParticleModuleParameterBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x29; // char : 1
		constexpr auto LODDuplicate = 0x29; // char : 1
		constexpr auto bSupportsRandomSeed = 0x29; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x29; // char : 1
		constexpr auto LODValidity = 0x2a; // char
	}

	namespace n_ATriggerWayPoint { // : AActivateTrigger
		constexpr auto Next = 0x278; // ATriggerWayPoint*
		constexpr auto prev = 0x280; // ATriggerWayPoint*
	}

	namespace n_UBlackboardData { // : UDataAsset
		constexpr auto Parent = 0x30; // UBlackboardData*
		constexpr auto Keys = 0x38; // TArray<FBlackboardEntry>
		constexpr auto bHasSynchronizedKeys = 0x48; // char : 1
	}

	namespace n_UBTDecorator_ConeCheck { // : UBTDecorator
		constexpr auto ConeHalfAngle = 0x68; // float
		constexpr auto ConeOrigin = 0x70; // FBlackboardKeySelector
		constexpr auto ConeDirection = 0x98; // FBlackboardKeySelector
		constexpr auto Observed = 0xc0; // FBlackboardKeySelector
	}

	namespace n_ACameraRig_Rail { // : AActor
		constexpr auto CurrentPositionOnRail = 0x218; // float
		constexpr auto bLockOrientationToRail = 0x21c; // bool
		constexpr auto TransformComponent = 0x220; // USceneComponent*
		constexpr auto RailSplineComponent = 0x228; // USplineComponent*
		constexpr auto RailCameraMount = 0x230; // USceneComponent*
	}

	namespace n_UClothPhysicalMeshDataNv { // : UClothPhysicalMeshDataBase
		constexpr auto MaxDistances = 0xe0; // TArray<float>
		constexpr auto BackstopDistances = 0xf0; // TArray<float>
		constexpr auto BackstopRadiuses = 0x100; // TArray<float>
		constexpr auto AnimDriveMultipliers = 0x110; // TArray<float>
	}

	namespace n_UCheckBox { // : UContentWidget
		constexpr auto CheckedState = 0x120; // ECheckBoxState
		constexpr auto CheckedStateDelegate = 0x124; // DelegateProperty
		constexpr auto WidgetStyle = 0x138; // FCheckBoxStyle
		constexpr auto Style = 0x6b8; // USlateWidgetStyleAsset*
		constexpr auto UncheckedImage = 0x6c0; // USlateBrushAsset*
		constexpr auto UncheckedHoveredImage = 0x6c8; // USlateBrushAsset*
		constexpr auto UncheckedPressedImage = 0x6d0; // USlateBrushAsset*
		constexpr auto CheckedImage = 0x6d8; // USlateBrushAsset*
		constexpr auto CheckedHoveredImage = 0x6e0; // USlateBrushAsset*
		constexpr auto CheckedPressedImage = 0x6e8; // USlateBrushAsset*
		constexpr auto UndeterminedImage = 0x6f0; // USlateBrushAsset*
		constexpr auto UndeterminedHoveredImage = 0x6f8; // USlateBrushAsset*
		constexpr auto UndeterminedPressedImage = 0x700; // USlateBrushAsset*
		constexpr auto HorizontalAlignment = 0x708; // EHorizontalAlignment
		constexpr auto Padding = 0x70c; // FMargin
		constexpr auto BorderBackgroundColor = 0x720; // FSlateColor
		constexpr auto IsFocusable = 0x748; // bool
		constexpr auto OnCheckStateChanged = 0x750; // FScriptMulticastDelegate
	}

	namespace n_UOverrideExponentialHeightFog { // : UObject
		constexpr auto FogDensity = 0x28; // float
		constexpr auto FogHeightFalloff = 0x2c; // float
		constexpr auto SecondFogData = 0x30; // FExponentialHeightFogData
		constexpr auto FogInscatteringColor = 0x3c; // FLinearColor
		constexpr auto FogMaxOpacity = 0x4c; // float
		constexpr auto StartDistance = 0x50; // float
		constexpr auto FogCutoffDistance = 0x54; // float
		constexpr auto DirectionalInscatteringExponent = 0x58; // float
		constexpr auto DirectionalInscatteringStartDistance = 0x5c; // float
		constexpr auto DirectionalInscatteringColor = 0x60; // FLinearColor
	}

	namespace n_UMM_PopUp_EquipAuto { // : UWidgetBase
		constexpr auto m_EquipSlots = 0x2e0; // TMap<int32_t, UMM_Slot_Inventory*>
		constexpr auto m_CancleBtn = 0x330; // UMM_Common_Btn*
		constexpr auto m_OkBtn = 0x338; // UMM_Common_Btn*
		constexpr auto btn_close = 0x350; // UMM_Common_Btn_Symbol*
	}

	namespace n_UMM_Popup_Party_Info_Slot { // : UWidgetBase
		constexpr auto m_Canvas_Member = 0x2e8; // UMirCanvasPanel*
		constexpr auto m_Img_Class = 0x2f0; // UMirImage*
		constexpr auto m_Img_Icn_Leader = 0x2f8; // UMirImage*
		constexpr auto m_Vrt_All = 0x300; // UVerticalBox*
		constexpr auto m_Txt_Level = 0x308; // UMirTextBlock*
		constexpr auto m_Txt_Nickname = 0x310; // UMirTextBlock*
		constexpr auto m_Txt_CombatPoint = 0x318; // UMirTextBlock*
		constexpr auto m_Grid_Leader = 0x320; // UPanelWidget*
		constexpr auto m_Canvas_Lock = 0x328; // UMirCanvasPanel*
		constexpr auto m_Txt_AbleClass = 0x330; // UMirTextBlock*
		constexpr auto m_Img_Lock = 0x338; // UMirImage*
		constexpr auto m_Img_Bg_Lock = 0x340; // UMirImage*
		constexpr auto m_Txt_Leader = 0x348; // UMirTextBlock*
	}

	namespace n_UAudioSettings { // : UDeveloperSettings
		constexpr auto DefaultSoundClassName = 0x38; // FSoftObjectPath
		constexpr auto DefaultMediaSoundClassName = 0x50; // FSoftObjectPath
		constexpr auto DefaultSoundConcurrencyName = 0x68; // FSoftObjectPath
		constexpr auto DefaultBaseSoundMix = 0x80; // FSoftObjectPath
		constexpr auto VoiPSoundClass = 0x98; // FSoftObjectPath
		constexpr auto VoiPSampleRate = 0xb0; // EVoiceSampleRate
		constexpr auto VoipBufferingDelay = 0xb4; // float
		constexpr auto DefaultReverbSendLevel = 0xb8; // float
		constexpr auto bEnableLegacyReverb = 0xbc; // char : 1
		constexpr auto MaximumConcurrentStreams = 0xc0; // int32_t
		constexpr auto GlobalMinPitchScale = 0xc4; // float
		constexpr auto GlobalMaxPitchScale = 0xc8; // float
		constexpr auto QualityLevels = 0xd0; // TArray<FAudioQualitySettings>
		constexpr auto bAllowPlayWhenSilent = 0xe0; // char : 1
		constexpr auto bDisableMasterEQ = 0xe0; // char : 1
		constexpr auto bAllowCenterChannel3DPanning = 0xe0; // char : 1
		constexpr auto NumStoppingSources = 0xe4; // uint32_t
		constexpr auto PanningMethod = 0xe8; // EPanningMethod
		constexpr auto MonoChannelUpmixMethod = 0xe9; // EMonoChannelUpmixMethod
		constexpr auto DialogueFilenameFormat = 0xf0; // FString
	}

	namespace n_UMovieSceneComponentMaterialTrack { // : UMovieSceneMaterialTrack
		constexpr auto MaterialIndex = 0x68; // int32_t
	}

	namespace n_UFootStepParticleNotify { // : UAnimNotify
		constexpr auto PreviewSurfaceType = 0x38; // EPhysicalSurface
		constexpr auto LocationOffset = 0x3c; // FVector
		constexpr auto Scale = 0x48; // FVector
	}

	namespace n_UParticleModuleVectorFieldRotationRate { // : UParticleModuleVectorFieldBase
		constexpr auto RotationRate = 0x30; // FVector
	}

	namespace n_USoundConcurrency { // : UObject
		constexpr auto Concurrency = 0x28; // FSoundConcurrencySettings
	}

	namespace n_UMM_Customizing_Palette { // : UCustomizingComponentBase
		constexpr auto m_pColorListBox = 0x300; // UWrapBox*
		constexpr auto m_PresetListBox = 0x308; // UWrapBox*
		constexpr auto m_pCostumeDyeListBox = 0x310; // UWrapBox*
		constexpr auto m_PaletteItemArray = 0x318; // TArray<UMM_Customizing_PaletteItem*>
		constexpr auto m_OkBtn = 0x328; // UMM_Common_Btn*
		constexpr auto m_AddSlider = 0x330; // UMM_Customizing_Slider_ControlBar*
	}

	namespace n_UActorComponent { // : UObject
		constexpr auto PrimaryComponentTick = 0x30; // FActorComponentTickFunction
		constexpr auto ComponentTags = 0x60; // TArray<FName>
		constexpr auto AssetUserData = 0x70; // TArray<UAssetUserData*>
		constexpr auto bReplicates = 0x84; // char : 1
		constexpr auto bNetAddressable = 0x84; // char : 1
		constexpr auto bAutoActivate = 0x85; // char : 1
		constexpr auto bIsActive = 0x86; // char : 1
		constexpr auto bEditableWhenInherited = 0x86; // char : 1
		constexpr auto bCanEverAffectNavigation = 0x86; // char : 1
		constexpr auto bIsEditorOnly = 0x86; // char : 1
		constexpr auto CreationMethod = 0x88; // EComponentCreationMethod
		constexpr auto OnComponentActivated = 0x89; // FScriptMulticastDelegate
		constexpr auto OnComponentDeactivated = 0x8a; // FScriptMulticastDelegate
		constexpr auto UCSModifiedProperties = 0x90; // TArray<FSimpleMemberReference>
	}

	namespace n_AController { // : AActor
		constexpr auto PlayerState = 0x220; // APlayerState*
		constexpr auto OnInstigatedAnyDamage = 0x230; // FScriptMulticastDelegate
		constexpr auto StateName = 0x240; // FName
		constexpr auto Pawn = 0x248; // APawn*
		constexpr auto Character = 0x258; // ACharacter*
		constexpr auto TransformComponent = 0x260; // USceneComponent*
		constexpr auto ControlRotation = 0x280; // FRotator
		constexpr auto bAttachToPawn = 0x28c; // char : 1
	}

	namespace n_UParticleModuleVectorFieldScaleOverLife { // : UParticleModuleVectorFieldBase
		constexpr auto VectorFieldScaleOverLife = 0x30; // UDistributionFloat*
		constexpr auto VectorFieldScaleOverLifeRaw = 0x38; // FRawDistributionFloat
	}

	namespace n_UMM_ItemResult_AbilitySlot { // : UWidgetBase
		constexpr auto m_DelayTime = 0x2e0; // float
	}

	namespace n_UAIDataProvider_QueryParams { // : UAIDataProvider
		constexpr auto ParamName = 0x28; // FName
		constexpr auto FloatValue = 0x30; // float
		constexpr auto IntValue = 0x34; // int32_t
		constexpr auto BoolValue = 0x38; // bool
	}

	namespace n_UMM_Slot_Base { // : UWidgetBase
		constexpr auto SlotBackgroundType = 0x2f0; // ESlotBackgroundType
		constexpr auto SlotEmptyType = 0x2f1; // ESlotEmptyType
		constexpr auto Skip_Event = 0x2f2; // bool
		constexpr auto Skip_Pressing = 0x2f3; // bool
		constexpr auto m_ImgBg = 0x2f8; // UMirImage*
		constexpr auto m_ImgIcon = 0x300; // UMirImage*
		constexpr auto m_BtnMain = 0x308; // UMirButton*
		constexpr auto m_PanEffect = 0x310; // UPanelWidget*
		constexpr auto m_ItemTID = 0x328; // int32_t
		constexpr auto m_EquipPosition = 0x32c; // int32_t
		constexpr auto m_iGuildShopTID = 0x330; // int32_t
		constexpr auto m_iSmeltingLevel = 0x334; // int32_t
		constexpr auto m_iTranscendStep = 0x338; // int32_t
		constexpr auto m_SlotIndex = 0x3d8; // int32_t
	}

	namespace n_UDataAsset { // : UObject
		constexpr auto NativeClass = 0x28; // UDataAsset*
	}

	namespace n_APartyBeaconClient { // : AOnlineBeaconClient
		constexpr auto DestSessionId = 0x2d8; // FString
		constexpr auto PendingReservation = 0x2e8; // FPartyReservation
		constexpr auto RequestType = 0x338; // EClientRequestType
		constexpr auto bPendingReservationSent = 0x339; // bool
		constexpr auto bCancelReservation = 0x33a; // bool
	}

	namespace n_UAISenseConfig_Sight { // : UAISenseConfig
		constexpr auto Implementation = 0x48; // UAISense_Sight*
		constexpr auto SightRadius = 0x50; // float
		constexpr auto LoseSightRadius = 0x54; // float
		constexpr auto PeripheralVisionAngleDegrees = 0x58; // float
		constexpr auto DetectionByAffiliation = 0x5c; // FAISenseAffiliationFilter
		constexpr auto AutoSuccessRangeFromLastSeenLocation = 0x60; // float
	}

	namespace n_UBTDecorator_CheckGameplayTagsOnActor { // : UBTDecorator
		constexpr auto ActorToCheck = 0x68; // FBlackboardKeySelector
		constexpr auto TagsToMatch = 0x90; // EGameplayContainerMatchType
		constexpr auto GameplayTags = 0x98; // FGameplayTagContainer
		constexpr auto CachedDescription = 0xb8; // FString
	}

	namespace n_ANetworkGenManager { // : AActor
		constexpr auto m_bNamingPosID = 0x218; // bool
	}

	namespace n_UMaterialExpressionSphereMask { // : UMaterialExpression
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto Radius = 0x68; // FExpressionInput
		constexpr auto Hardness = 0x7c; // FExpressionInput
		constexpr auto AttenuationRadius = 0x90; // float
		constexpr auto HardnessPercent = 0x94; // float
	}

	namespace n_UDistributionFloatParticleParameter { // : UDistributionFloatParameterBase
		constexpr auto ParameterName = 0x40; // FName
		constexpr auto MinInput = 0x48; // float
		constexpr auto MaxInput = 0x4c; // float
		constexpr auto MinOutput = 0x50; // float
		constexpr auto MaxOutput = 0x54; // float
		constexpr auto ParamMode = 0x58; // DistributionParamMode
	}

	namespace n_UAudioCurveSourceComponent { // : UAudioComponent
		constexpr auto CurveSourceBindingName = 0x758; // FName
		constexpr auto CurveSyncOffset = 0x760; // float
	}

	namespace n_UAITask_LockLogic { // : UAITask
		constexpr auto OwnerController = 0x68; // AAIController*
	}

	namespace n_ADebugCameraHUD { // : AHUD
		constexpr auto PlayerOwner = 0x218; // APlayerController*
		constexpr auto bLostFocusPaused = 0x220; // char : 1
		constexpr auto bShowHUD = 0x220; // char : 1
		constexpr auto bShowDebugInfo = 0x220; // char : 1
		constexpr auto CurrentTargetIndex = 0x224; // int32_t
		constexpr auto bShowHitBoxDebugInfo = 0x228; // char : 1
		constexpr auto bShowOverlays = 0x228; // char : 1
		constexpr auto bEnableDebugTextShadow = 0x228; // char : 1
		constexpr auto PostRenderedActors = 0x230; // TArray<AActor*>
		constexpr auto DebugDisplay = 0x248; // TArray<FName>
		constexpr auto ToggledDebugCategories = 0x258; // TArray<FName>
		constexpr auto Canvas = 0x268; // UCanvas*
		constexpr auto DebugCanvas = 0x270; // UCanvas*
		constexpr auto DebugTextList = 0x278; // TArray<FDebugTextInfo>
		constexpr auto ShowDebugTargetDesiredClass = 0x288; // AActor*
		constexpr auto ShowDebugTargetActor = 0x290; // AActor*
	}

	namespace n_UMonsterSkillCameraNotify { // : UAnimNotifyState
		constexpr auto m_InterpSpeed = 0x30; // float
		constexpr auto m_Pitch = 0x34; // float
		constexpr auto m_Distance = 0x38; // float
		constexpr auto m_pPlayer = 0x40; // AActor*
		constexpr auto m_pCamera = 0x48; // ALobbyCameraControl*
	}

	namespace n_UMM_PopupGuildPartnerSlot { // : UWidgetBase
		constexpr auto img_online = 0x2e0; // UMirImage*
		constexpr auto Portrait = 0x2e8; // UMM_GuildMemberPortrait*
		constexpr auto txt_grade = 0x2f0; // UMirTextBlock*
		constexpr auto txt_nickname = 0x2f8; // UMirTextBlock*
		constexpr auto txt_custom_title = 0x300; // UMirTextBlock*
		constexpr auto txt_level = 0x308; // UMirTextBlock*
		constexpr auto img_class = 0x310; // UMirImage*
		constexpr auto txt_class = 0x318; // UMirTextBlock*
		constexpr auto txt_combat_power = 0x320; // UMirTextBlock*
		constexpr auto txt_daily_contribution = 0x328; // UMirTextBlock*
		constexpr auto txt_total_contribution = 0x330; // UMirTextBlock*
		constexpr auto txt_is_partner = 0x338; // UMirTextBlock*
		constexpr auto Img_Select = 0x340; // UMirImage*
		constexpr auto btn_select = 0x348; // UMirButton*
	}

	namespace n_UPopup_DungeonReward_Info2 { // : UWidgetBase
		constexpr auto sclPartyReward = 0x2e0; // UMirScrollBox*
		constexpr auto canReward = 0x2e8; // UMirCanvasPanel*
	}

	namespace n_UTextureRenderTarget2D { // : UTextureRenderTarget
		constexpr auto SizeX = 0xd8; // int32_t
		constexpr auto SizeY = 0xdc; // int32_t
		constexpr auto ClearColor = 0xe0; // FLinearColor
		constexpr auto AddressX = 0xf0; // TextureAddress
		constexpr auto AddressY = 0xf1; // TextureAddress
		constexpr auto bForceLinearGamma = 0xf2; // char : 1
		constexpr auto bHDR = 0xf2; // char : 1
		constexpr auto bGPUSharedFlag = 0xf2; // char : 1
		constexpr auto RenderTargetFormat = 0xf3; // ETextureRenderTargetFormat
		constexpr auto bAutoGenerateMips = 0xf4; // char : 1
		constexpr auto MipsSamplerFilter = 0xf5; // TextureFilter
		constexpr auto MipsAddressU = 0xf6; // TextureAddress
		constexpr auto MipsAddressV = 0xf7; // TextureAddress
		constexpr auto OverrideFormat = 0xf8; // EPixelFormat
	}

	namespace n_UMM_GameOption_InGame_Community { // : UWidgetBase
		constexpr auto Option_BuddyRequestAutoReject = 0x2e0; // UMM_GameOption_Switch*
		constexpr auto Option_BuddyLoginNotice = 0x2e8; // UMM_GameOption_Switch*
		constexpr auto Option_ARejectParty = 0x2f0; // UMM_GameOption_Switch*
		constexpr auto Option_ARejectSquad = 0x2f8; // UMM_GameOption_Switch*
		constexpr auto Option_NotifyItemGain = 0x300; // UMM_GameOption_Switch*
	}

	namespace n_UMM_Slot_QuickSlot { // : UMM_Slot_Base
		constexpr auto m_Img_Disabled = 0x3e8; // UMirImage*
		constexpr auto m_Img_Indicator = 0x3f0; // UMirImage*
		constexpr auto m_Img_TierBg = 0x3f8; // UMirImage*
		constexpr auto m_Img_Checked = 0x400; // UMirImage*
		constexpr auto m_Img_Selected = 0x408; // UMirImage*
		constexpr auto m_TxtCount = 0x410; // UMirTextBlock*
		constexpr auto m_Img_Register = 0x418; // UMirImage*
		constexpr auto m_Image_CoolTime = 0x420; // UMirImage*
		constexpr auto m_Txt_CoolTime = 0x428; // UMirTextBlock*
	}

	namespace n_UMM_StarGrade { // : UWidgetBase
		constexpr auto m_arStarGrade = 0x2e0; // UMirImage* [0x5]
	}

	namespace n_UWidgetSwitcher { // : UPanelWidget
		constexpr auto ActiveWidgetIndex = 0x120; // int32_t
	}

	namespace n_UOnlinePIESettings { // : UDeveloperSettings
		constexpr auto bOnlinePIEEnabled = 0x38; // bool
		constexpr auto Logins = 0x40; // TArray<FPIELoginSettingsInternal>
	}

	namespace n_UMovieSceneEasingExternalCurve { // : UObject
		constexpr auto Curve = 0x30; // UCurveFloat*
	}

	namespace n_UMM_MagicStoneQuickTabSlot { // : UWidgetBase
		constexpr auto m_Img_On = 0x2e8; // UMirImage*
		constexpr auto m_Txt_Index = 0x2f0; // UMirTextBlock*
		constexpr auto m_Btn_Main = 0x2f8; // UMirButton*
	}

	namespace n_UMM_Popup_SquareStageList_Slot { // : UWidgetBase
		constexpr auto txtRoomNum = 0x2e0; // UMirTextBlock*
		constexpr auto txtRoomName = 0x2e8; // UMirTextBlock*
		constexpr auto txtProbability = 0x2f0; // UMirTextBlock*
		constexpr auto txtPercent = 0x2f8; // UMirTextBlock*
		constexpr auto m_pBtn_Info = 0x300; // UButton*
	}

	namespace n_UMM_Skill_Info { // : UWidgetBase
		constexpr auto m_TxtNotice = 0x2f0; // UMirTextBlock*
		constexpr auto m_SlotMaterial = 0x2f8; // UMM_Slot_Material_Item* [0x2]
		constexpr auto m_CBExchange = 0x308; // UMM_Common_Btn_Cost*
		constexpr auto m_CBLevelUp = 0x310; // UMM_Common_Btn_Cost*
		constexpr auto m_CBLearn = 0x318; // UMM_Common_Btn*
	}

	namespace n_UMM_CharAbility_Info_Fame { // : UWidgetBase
		constexpr auto Txt_Fame_Level = 0x2f0; // UMirTextBlock*
		constexpr auto PB_Fame = 0x2f8; // UMirProgressBar*
		constexpr auto Txt_Pb = 0x300; // UMirTextBlock*
		constexpr auto Txt_Fame_Title = 0x308; // UMirTextBlock*
		constexpr auto Txt_Fame_Value = 0x310; // UMirTextBlock*
		constexpr auto Btn_Fame_Info = 0x318; // UMM_Common_Btn_Symbol*
		constexpr auto ScrollBox_Fame = 0x320; // UMirScrollBox*
		constexpr auto FameMainSlot_List = 0x328; // TArray<UMM_Fame_List_MainSlot*>
		constexpr auto m_MaxFameSlotCount = 0x338; // int32_t
		constexpr auto m_CurrentFameSlotCount = 0x33c; // int32_t
	}

	namespace n_AMM_MapPreviewMode { // : AMM_PreviewModeBase
		constexpr auto m_pBackgroundParamCollection = 0x330; // UMaterialParameterCollection*
		constexpr auto m_pFriendMonster = 0x338; // AMM_Monster*
		constexpr auto m_pSelectTarget = 0x340; // AMM_CharacterPawnBase*
		constexpr auto m_pLockOnTarget = 0x348; // AMM_CharacterPawnBase*
		constexpr auto EndLevelTravel = 0x350; // bool
		constexpr auto m_pUIBackGroundActor = 0x400; // AUIBackGroundActor*
		constexpr auto SituationDirectiveActor = 0x408; // AMM_SituationDirectiveEffect*
		constexpr auto MapQuestArrivalDisplayActor = 0x410; // TMap<int32_t, TWeakObjectPtr<AQuestArrivalDisplayActor>>
		constexpr auto m_pHQPlayer = 0x460; // AMM_HQPlayerReferenceActor*
		constexpr auto m_pPortraitCaptureActor = 0x468; // AMM_PortraitCaptureActor*
		constexpr auto m_pPlayerPortraitRenderTarget = 0x470; // UCanvasRenderTarget2D*
		constexpr auto m_pContentsLightManager = 0x478; // AContentsLightManager*
		constexpr auto MyEditorCulture = 0x490; // FString
	}

	namespace n_UParticleModuleBeamTarget { // : UParticleModuleBeamBase
		constexpr auto TargetMethod = 0x30; // Beam2SourceTargetMethod
		constexpr auto TargetName = 0x34; // FName
		constexpr auto Target = 0x40; // FRawDistributionVector
		constexpr auto bTargetAbsolute = 0x88; // char : 1
		constexpr auto bLockTarget = 0x88; // char : 1
		constexpr auto TargetTangentMethod = 0x8c; // Beam2SourceTargetTangentMethod
		constexpr auto TargetTangent = 0x90; // FRawDistributionVector
		constexpr auto bLockTargetTangent = 0xd8; // char : 1
		constexpr auto TargetStrength = 0xe0; // FRawDistributionFloat
		constexpr auto bLockTargetStength = 0x110; // char : 1
		constexpr auto LockRadius = 0x114; // float
	}

	namespace n_AMM_InGameState { // : AMM_GameStateBase
		constexpr auto GameModeClass = 0x218; // AGameModeBase*
		constexpr auto AuthorityGameMode = 0x220; // AGameModeBase*
		constexpr auto SpectatorClass = 0x228; // ASpectatorPawn*
		constexpr auto PlayerArray = 0x230; // TArray<APlayerState*>
		constexpr auto bReplicatedHasBegunPlay = 0x240; // bool
		constexpr auto ReplicatedWorldTimeSeconds = 0x244; // float
		constexpr auto ServerWorldTimeSecondsDelta = 0x248; // float
		constexpr auto ServerWorldTimeSecondsUpdateFrequency = 0x24c; // float
	}

	namespace n_UMM_Popup_ServerVisit_Members_Slot { // : UWidgetBase
		constexpr auto m_Txt_MemberName = 0x2e0; // UMirTextBlock*
		constexpr auto m_Btn_MemberInfo = 0x2e8; // UMM_Common_Btn_Symbol*
		constexpr auto m_Btn_MemberChat = 0x2f0; // UMM_Common_Btn_Symbol*
	}

	namespace n_UMaterialExpressionGetMaterialAttributes { // : UMaterialExpression
		constexpr auto MaterialAttributes = 0x40; // FMaterialAttributesInput
		constexpr auto AttributeGetTypes = 0x58; // TArray<FGuid>
	}

	namespace n_UParticleModuleEventReceiverKillParticles { // : UParticleModuleEventReceiverBase
		constexpr auto bStopSpawning = 0x40; // char : 1
	}

	namespace n_UMM_UserEvent_Gacha_Btn { // : UWidgetBase
		constexpr auto m_Img_CostIcon = 0x2f0; // UImage*
		constexpr auto m_Img_Indicator = 0x2f8; // UImage*
		constexpr auto m_Txt_HaveValue = 0x300; // UMirTextBlock*
		constexpr auto m_Txt_Main = 0x308; // UTextBlock*
		constexpr auto m_Txt_Sub = 0x310; // UTextBlock*
		constexpr auto m_Btn_Main = 0x318; // UMirButton*
	}

	namespace n_UPopup_DungeonReward_Slot { // : UWidgetBase
		constexpr auto imgClassIcon = 0x2e0; // UMirImage*
		constexpr auto txtNickName = 0x2e8; // UMirTextBlock*
		constexpr auto txtLevel = 0x2f0; // UMirTextBlock*
		constexpr auto rtxtGrade = 0x2f8; // UMirRichTextBlock*
		constexpr auto sclRewardListBox = 0x300; // UMirScrollBox*
		constexpr auto arCanReward = 0x308; // TArray<UMirCanvasPanel*>
		constexpr auto arRewardSlot = 0x318; // TArray<UMM_Slot_Material*>
	}

	namespace n_UAISenseBlueprintListener { // : UUserDefinedStruct
		constexpr auto Status = 0xa8; // EUserDefinedStructureStatus
		constexpr auto Guid = 0xac; // FGuid
	}

	namespace n_ANavigationData { // : AActor
		constexpr auto RenderingComp = 0x220; // UPrimitiveComponent*
		constexpr auto NavDataConfig = 0x228; // FNavDataConfig
		constexpr auto bEnableDrawing = 0x2a0; // char : 1
		constexpr auto bForceRebuildOnLoad = 0x2a0; // char : 1
		constexpr auto bAutoDestroyWhenNoNavigation = 0x2a0; // char : 1
		constexpr auto bCanBeMainNavData = 0x2a0; // char : 1
		constexpr auto bCanSpawnOnRebuild = 0x2a0; // char : 1
		constexpr auto bRebuildAtRuntime = 0x2a0; // char : 1
		constexpr auto RuntimeGeneration = 0x2a4; // ERuntimeGenerationType
		constexpr auto ObservedPathsTickInterval = 0x2a8; // float
		constexpr auto DataVersion = 0x2ac; // uint32_t
		constexpr auto SupportedAreas = 0x390; // TArray<FSupportedAreaData>
	}

	namespace n_AChaosSolverActor { // : AActor
		constexpr auto TimeStepMultiplier = 0x218; // float
		constexpr auto CollisionIterations = 0x21c; // int32_t
		constexpr auto PushOutIterations = 0x220; // int32_t
		constexpr auto PushOutPairIterations = 0x224; // int32_t
		constexpr auto ClusterConnectionFactor = 0x228; // float
		constexpr auto ClusterUnionConnectionType = 0x22c; // EClusterConnectionTypeEnum
		constexpr auto DoGenerateCollisionData = 0x22d; // bool
		constexpr auto CollisionFilterSettings = 0x230; // FSolverCollisionFilterSettings
		constexpr auto DoGenerateBreakingData = 0x240; // bool
		constexpr auto BreakingFilterSettings = 0x244; // FSolverBreakingFilterSettings
		constexpr auto DoGenerateTrailingData = 0x254; // bool
		constexpr auto TrailingFilterSettings = 0x258; // FSolverTrailingFilterSettings
		constexpr auto bHasFloor = 0x268; // bool
		constexpr auto FloorHeight = 0x26c; // float
		constexpr auto MassScale = 0x270; // float
		constexpr auto ChaosDebugSubstepControl = 0x274; // FChaosDebugSubstepControl
		constexpr auto SpriteComponent = 0x278; // UBillboardComponent*
		constexpr auto GameplayEventDispatcherComponent = 0x298; // UChaosGameplayEventDispatcher*
	}

	namespace n_UAIResource_Logic { // : UGameplayTaskResource
		constexpr auto ManualResourceID = 0x28; // int32_t
		constexpr auto AutoResourceID = 0x2c; // uint8_t
		constexpr auto bManuallySetID = 0x30; // char : 1
	}

	namespace n_UUMGSequencePlayer { // : UObject
		constexpr auto Animation = 0x408; // UWidgetAnimation*
	}

	namespace n_UMM_ShortCutKeySlot { // : UWidgetBase
		constexpr auto txt_key = 0x2e0; // UMirTextBlock*
		constexpr auto default_key = 0x2e8; // FName
	}

	namespace n_UMM_UserEvent_BenedictionSlot { // : UMM_Slot_Base
		constexpr auto m_Img_GradeBgEffect = 0x3f8; // UMirImage*
		constexpr auto m_ImgDisabled = 0x400; // UMirImage*
		constexpr auto m_ImgCurrSelected = 0x408; // UMirImage*
		constexpr auto m_Img_Complete = 0x410; // UMirImage*
		constexpr auto m_Effect = 0x418; // UEffectWidgetBase*
	}

	namespace n_UNavMeshRenderingComponent { // : UPrimitiveComponent
		constexpr auto MinDrawDistance = 0x228; // float
		constexpr auto LDMaxDrawDistance = 0x22c; // float
		constexpr auto CachedMaxDrawDistance = 0x230; // float
		constexpr auto DepthPriorityGroup = 0x234; // ESceneDepthPriorityGroup
		constexpr auto ViewOwnerDepthPriorityGroup = 0x235; // ESceneDepthPriorityGroup
		constexpr auto IndirectLightingCacheQuality = 0x236; // EIndirectLightingCacheQuality
		constexpr auto LightmapType = 0x237; // ELightmapType
		constexpr auto bUseMaxLODAsImposter = 0x238; // char : 1
		constexpr auto CachedBoundsSphereDiameter = 0x23c; // float
		constexpr auto bBatchImpostersAsInstances = 0x240; // char : 1
		constexpr auto bNeverDistanceCull = 0x240; // char : 1
		constexpr auto bAlwaysCreatePhysicsState = 0x240; // char : 1
		constexpr auto bGenerateOverlapEvents = 0x240; // char : 1
		constexpr auto bMultiBodyOverlap = 0x241; // char : 1
		constexpr auto bTraceComplexOnMove = 0x241; // char : 1
		constexpr auto bReturnMaterialOnMove = 0x241; // char : 1
		constexpr auto bUseViewOwnerDepthPriorityGroup = 0x241; // char : 1
		constexpr auto bAllowCullDistanceVolume = 0x241; // char : 1
		constexpr auto bHasMotionBlurVelocityMeshes = 0x241; // char : 1
		constexpr auto bVisibleInReflectionCaptures = 0x241; // char : 1
		constexpr auto bVisibleInRayTracing = 0x241; // char : 1
		constexpr auto bRenderInMainPass = 0x242; // char : 1
		constexpr auto bRenderInDepthPass = 0x242; // char : 1
		constexpr auto bReceivesDecals = 0x242; // char : 1
		constexpr auto bOwnerNoSee = 0x242; // char : 1
		constexpr auto bOnlyOwnerSee = 0x242; // char : 1
		constexpr auto bTreatAsBackgroundForOcclusion = 0x242; // char : 1
		constexpr auto bUseAsOccluder = 0x242; // char : 1
		constexpr auto bSelectable = 0x242; // char : 1
		constexpr auto bForceMipStreaming = 0x243; // char : 1
		constexpr auto bHasPerInstanceHitProxies = 0x243; // char : 1
		constexpr auto CastShadow = 0x243; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x243; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x243; // char : 1
		constexpr auto bCastDynamicShadow = 0x243; // char : 1
		constexpr auto bCastStaticShadow = 0x243; // char : 1
		constexpr auto bCastVolumetricTranslucentShadow = 0x243; // char : 1
		constexpr auto bSelfShadowOnly = 0x244; // char : 1
		constexpr auto bCastFarShadow = 0x244; // char : 1
		constexpr auto bCastInsetShadow = 0x244; // char : 1
		constexpr auto bCastCinematicShadow = 0x244; // char : 1
		constexpr auto bCastHiddenShadow = 0x244; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x244; // char : 1
		constexpr auto bLightAsIfStatic = 0x244; // char : 1
		constexpr auto bLightAttachmentsAsGroup = 0x244; // char : 1
		constexpr auto bExcludeFromLightAttachmentGroup = 0x245; // char : 1
		constexpr auto bReceiveMobileCSMShadows = 0x245; // char : 1
		constexpr auto bSingleSampleShadowFromStationaryLights = 0x245; // char : 1
		constexpr auto bIgnoreRadialImpulse = 0x245; // char : 1
		constexpr auto bIgnoreRadialForce = 0x245; // char : 1
		constexpr auto bApplyImpulseOnDamage = 0x245; // char : 1
		constexpr auto bReplicatePhysicsToAutonomousProxy = 0x245; // char : 1
		constexpr auto AlwaysLoadOnClient = 0x245; // char : 1
		constexpr auto AlwaysLoadOnServer = 0x246; // char : 1
		constexpr auto bUseEditorCompositing = 0x246; // char : 1
		constexpr auto bRenderCustomDepth = 0x246; // char : 1
		constexpr auto bHasCustomNavigableGeometry = 0x247; // EHasCustomNavigableGeometry
		constexpr auto CanCharacterStepUpOn = 0x249; // ECanBeCharacterBase
		constexpr auto LightingChannels = 0x24a; // FLightingChannels
		constexpr auto CustomDepthStencilWriteMask = 0x24b; // ERendererStencilMask
		constexpr auto CustomDepthStencilValue = 0x24c; // int32_t
		constexpr auto CustomPrimitiveData = 0x250; // FCustomPrimitiveData
		constexpr auto TranslucencySortPriority = 0x260; // int32_t
		constexpr auto VisibilityId = 0x264; // int32_t
		constexpr auto bIgnoreOcclusionVolume = 0x268; // char : 1
		constexpr auto OcclusionVolumeId = 0x26c; // int32_t
		constexpr auto RuntimeVirtualTextures = 0x270; // TArray<URuntimeVirtualTexture*>
		constexpr auto VirtualTextureLodBias = 0x280; // uint8_t
		constexpr auto VirtualTextureCullMips = 0x281; // uint8_t
		constexpr auto VirtualTextureMinCoverage = 0x282; // uint8_t
		constexpr auto VirtualTextureRenderPassType = 0x283; // ERuntimeVirtualTextureMainPassType
		constexpr auto LpvBiasMultiplier = 0x288; // float
		constexpr auto BoundsScale = 0x294; // float
		constexpr auto MoveIgnoreActors = 0x2a8; // TArray<AActor*>
		constexpr auto MoveIgnoreComponents = 0x2b8; // TArray<UPrimitiveComponent*>
		constexpr auto BodyInstance = 0x2d8; // FBodyInstance
		constexpr auto OnComponentHit = 0x3e8; // FScriptMulticastDelegate
		constexpr auto OnComponentBeginOverlap = 0x3e9; // FScriptMulticastDelegate
		constexpr auto OnComponentEndOverlap = 0x3ea; // FScriptMulticastDelegate
		constexpr auto OnComponentWake = 0x3eb; // FScriptMulticastDelegate
		constexpr auto OnComponentSleep = 0x3ec; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x3ee; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x3ef; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x3f0; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x3f1; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x3f2; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x3f3; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x3f4; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x3f5; // FScriptMulticastDelegate
		constexpr auto LODParentPrimitive = 0x410; // UPrimitiveComponent*
	}

	namespace n_UFloatBinding { // : UPropertyBinding
		constexpr auto SourceObject = 0x28; // TWeakObjectPtr<UObject>
		constexpr auto SourcePath = 0x30; // FDynamicPropertyPath
		constexpr auto DestinationProperty = 0x58; // FName
	}

	namespace n_UMM_B_NewGuild { // : UWidgetBase
		constexpr auto m_CT_HrzTabSet = 0x308; // UMM_CommonHorizontalTabSet*
		constexpr auto m_Guild_MainHome = 0x310; // UMM_Guild_MainHome*
		constexpr auto guild_member = 0x318; // UMM_GuildMembers*
		constexpr auto guild_option = 0x320; // UMM_GuildOption*
	}

	namespace n_UNetConnection { // : UPlayer
		constexpr auto Children = 0x48; // TArray<UChildConnection*>
		constexpr auto Driver = 0x58; // UNetDriver*
		constexpr auto PackageMapClass = 0x60; // UPackageMap*
		constexpr auto PackageMap = 0x68; // UPackageMap*
		constexpr auto OpenChannels = 0x70; // TArray<UChannel*>
		constexpr auto SentTemporaries = 0x80; // TArray<AActor*>
		constexpr auto ViewTarget = 0x90; // AActor*
		constexpr auto OwningActor = 0x98; // AActor*
		constexpr auto MaxPacket = 0xa0; // int32_t
		constexpr auto InternalAck = 0xa4; // char : 1
		constexpr auto PlayerId = 0x160; // FUniqueNetIdRepl
		constexpr auto LastReceiveTime = 0x1d0; // double
		constexpr auto ChannelsToTick = 0x14a8; // TArray<UChannel*>
	}

	namespace n_USoundNodeDelay { // : USoundNode
		constexpr auto DelayMin = 0x40; // float
		constexpr auto DelayMax = 0x44; // float
	}

	namespace n_UMM_B_SkillSet { // : UWidgetBase
		constexpr auto m_pHudBtnDirSkill = 0x2f0; // UMM_Btn_HudDirSkill*
		constexpr auto m_pHudSkillDeck = 0x2f8; // UMM_HudSkillDeck*
		constexpr auto m_pCan_Attack = 0x300; // UCanvasPanel*
		constexpr auto m_pBtnAvoid = 0x308; // UMM_HudBtnAction*
		constexpr auto m_pBtnJump = 0x310; // UMM_HudBtnAction*
		constexpr auto m_pBtnSetJump = 0x318; // UMM_HudBtnSetJump*
		constexpr auto m_pBtnNormalAttack = 0x320; // UMM_Btn_HudNormalAttack*
		constexpr auto m_pCanCancelDirSkill = 0x328; // UMirCanvasPanel*
		constexpr auto m_pBtnTargetLockOn = 0x330; // UMM_HudBtnAction*
		constexpr auto m_pBtnDirJump = 0x338; // UMM_Btn_HudDirJump*
		constexpr auto m_pBtnDirAvoid = 0x340; // UMM_Btn_HudDirAvoid*
		constexpr auto m_pHudBackSkill = 0x348; // UMM_Hud_BackSkill*
		constexpr auto m_pCanActionButton = 0x350; // UMirCanvasPanel*
		constexpr auto m_pImgActionButtonIcon = 0x358; // UMirImage*
		constexpr auto m_pImgActionButtonCooltime = 0x360; // UMirImage*
		constexpr auto m_pBtnAction = 0x368; // UMirButton*
		constexpr auto m_pCanReserveAction = 0x370; // UMirCanvasPanel*
		constexpr auto m_pImgDeck01 = 0x378; // UMirImage*
		constexpr auto m_pImgDeck02 = 0x380; // UMirImage*
		constexpr auto m_pImgDeck03 = 0x388; // UMirImage*
		constexpr auto imgTargetListOpen = 0x390; // UMirImage*
		constexpr auto m_pGridActionButtonEffect = 0x3b8; // UPanelWidget*
		constexpr auto m_pFastRunEffect = 0x3c0; // UEffectWidgetBase*
	}

	namespace n_UAISenseConfig_Touch { // : UAISenseConfig
		constexpr auto DebugColor = 0x28; // FColor
		constexpr auto MaxAge = 0x2c; // float
		constexpr auto bStartsEnabled = 0x30; // char : 1
	}

	namespace n_UAimOffsetBlendSpace { // : UBlendSpace
		constexpr auto AxisToScaleAnimation = 0x148; // EBlendSpaceAxis
	}

	namespace n_UMM_Customizing_KeyPad { // : UWidgetBase
		constexpr auto m_Btn_Minus10 = 0x2f0; // UMM_Common_Btn*
		constexpr auto m_Btn_Minus1 = 0x2f8; // UMM_Common_Btn*
		constexpr auto m_Btn_Plus10 = 0x300; // UMM_Common_Btn*
		constexpr auto m_Btn_Plus1 = 0x308; // UMM_Common_Btn*
		constexpr auto m_Btn_Close = 0x310; // UMM_Common_Btn_Symbol*
		constexpr auto m_Btn_Reset = 0x318; // UMM_Common_Btn*
	}

	namespace n_UMM_Fame_List_MainSlot { // : UWidgetBase
		constexpr auto Txt_Title = 0x2f0; // UMirTextBlock*
		constexpr auto Txt_Value = 0x2f8; // UMirTextBlock*
		constexpr auto Img_Icon = 0x300; // UMirImage*
		constexpr auto img_selected = 0x308; // UMirImage*
		constexpr auto Btn_Main = 0x310; // UMirButton*
		constexpr auto m_CategoryID = 0x318; // int32_t
		constexpr auto STRID_POINT = 0x31c; // int32_t
	}

	namespace n_UMM_FSMComponent { // : UActorComponent
		constexpr auto PrimaryComponentTick = 0x30; // FActorComponentTickFunction
		constexpr auto ComponentTags = 0x60; // TArray<FName>
		constexpr auto AssetUserData = 0x70; // TArray<UAssetUserData*>
		constexpr auto bReplicates = 0x84; // char : 1
		constexpr auto bNetAddressable = 0x84; // char : 1
		constexpr auto bAutoActivate = 0x85; // char : 1
		constexpr auto bIsActive = 0x86; // char : 1
		constexpr auto bEditableWhenInherited = 0x86; // char : 1
		constexpr auto bCanEverAffectNavigation = 0x86; // char : 1
		constexpr auto bIsEditorOnly = 0x86; // char : 1
		constexpr auto CreationMethod = 0x88; // EComponentCreationMethod
		constexpr auto OnComponentActivated = 0x89; // FScriptMulticastDelegate
		constexpr auto OnComponentDeactivated = 0x8a; // FScriptMulticastDelegate
		constexpr auto UCSModifiedProperties = 0x90; // TArray<FSimpleMemberReference>
	}

	namespace n_UMM_Hud_Chat_PartyShare { // : UWidgetBase
		constexpr auto m_Img_CharaIcon = 0x2e0; // UMirImage*
		constexpr auto m_Txt_SendTime = 0x2e8; // UMirTextBlock*
		constexpr auto m_Txt_Prefix = 0x2f0; // UMirTextBlock*
		constexpr auto m_Txt_Nickname = 0x2f8; // UMirTextBlock*
		constexpr auto m_Txt_Official = 0x300; // UMirTextBlock*
		constexpr auto Btn_UserInteraction = 0x308; // UMirButton*
		constexpr auto Btn_PartyInvite = 0x310; // UMirButton*
		constexpr auto m_Img_PartyIcon = 0x318; // UMirImage*
		constexpr auto m_Txt_PartyType = 0x320; // UMirTextBlock*
		constexpr auto m_Txt_TargetStageName = 0x328; // UMirTextBlock*
		constexpr auto m_UserUID = 0x330; // uint64_t
		constexpr auto m_UserNickname = 0x338; // FString
		constexpr auto m_PartyUID = 0x348; // uint64_t
		constexpr auto m_StageType = 0x350; // int32_t
		constexpr auto m_TargetStageID = 0x354; // int32_t
	}

	namespace n_UMM_Slot_Registered { // : UMM_Slot_Base
		constexpr auto m_Img_GradeBgEffect = 0x3e8; // UMirImage*
		constexpr auto m_ImgDisabled = 0x3f0; // UMirImage*
		constexpr auto m_ImgEquiped = 0x3f8; // UMirImage*
		constexpr auto m_Imgindicator = 0x400; // UMirImage*
		constexpr auto m_ImgTierBg = 0x408; // UMirImage*
		constexpr auto m_Img_Attribution = 0x410; // UMirImage*
		constexpr auto m_TxtSmeltingLevel = 0x418; // UMirTextBlock*
		constexpr auto m_TxtLockedLevel = 0x420; // UMirTextBlock*
		constexpr auto m_TxtCount = 0x428; // UMirTextBlock*
		constexpr auto m_Img_UserLock = 0x430; // UMirImage*
		constexpr auto m_Img_UserLock_Stack = 0x438; // UMirImage*
	}

	namespace n_UMM_Common_Popup_ItemInfo { // : UWidgetBase
		constexpr auto m_ItemInfo_Left = 0x2e0; // UMM_PopUp_ItemInfo*
		constexpr auto m_ItemInfo_Right = 0x2e8; // UMM_PopUp_ItemInfo*
	}

	namespace n_UMyLogWidget { // : UWidgetBase
		constexpr auto m_LogFont = 0x2e0; // FSlateFontInfo
		constexpr auto m_TxtToggle = 0x338; // UTextBlock*
		constexpr auto m_SBoxLog = 0x340; // UScrollBox*
	}

	namespace n_UPawnSensingComponent { // : UActorComponent
		constexpr auto HearingThreshold = 0xb0; // float
		constexpr auto LOSHearingThreshold = 0xb4; // float
		constexpr auto SightRadius = 0xb8; // float
		constexpr auto SensingInterval = 0xbc; // float
		constexpr auto HearingMaxSoundAge = 0xc0; // float
		constexpr auto bEnableSensingUpdates = 0xc4; // char : 1
		constexpr auto bOnlySensePlayers = 0xc4; // char : 1
		constexpr auto bSeePawns = 0xc4; // char : 1
		constexpr auto bHearNoises = 0xc4; // char : 1
		constexpr auto OnSeePawn = 0xd0; // FScriptMulticastDelegate
		constexpr auto OnHearNoise = 0xe0; // FScriptMulticastDelegate
		constexpr auto PeripheralVisionAngle = 0xf0; // float
		constexpr auto PeripheralVisionCosine = 0xf4; // float
	}

	namespace n_UMaterialExpressionLandscapeLayerBlend { // : UMaterialExpression
		constexpr auto Layers = 0x40; // TArray<FLayerBlendInput>
		constexpr auto ExpressionGUID = 0x50; // FGuid
	}

	namespace n_AProjectileMissile { // : AProjectileBase
		constexpr auto m_pCollSphereComp = 0x218; // USphereComponent*
		constexpr auto m_pShotParticleComp = 0x220; // UParticleSystemComponent*
		constexpr auto m_pImpactParticleComp = 0x228; // UParticleSystemComponent*
	}

	namespace n_URichTextBox { // : UWidget
		constexpr auto Text = 0x108; // FText
		constexpr auto TextDelegate = 0x120; // DelegateProperty
		constexpr auto Color = 0x130; // FLinearColor
		constexpr auto Font = 0x140; // FSlateFontInfo
		constexpr auto ShadowOffset = 0x190; // FVector2D
		constexpr auto ShadowColorAndOpacity = 0x198; // FLinearColor
		constexpr auto MinDesiredWidth = 0x1a8; // float
		constexpr auto Justification = 0x1ac; // ETextJustify
		constexpr auto Margin = 0x1b0; // FMargin
		constexpr auto LineHeightPercentage = 0x1c0; // float
		constexpr auto AutoWrapText = 0x1c4; // bool
		constexpr auto WrapTextAt = 0x1c8; // float
		constexpr auto WrappingPolicy = 0x1cc; // ETextWrappingPolicy
		constexpr auto Decorators = 0x1d0; // TArray<URichTextBoxDecorator*>
	}

	namespace n_AMM_CharacterPawnBase { // : AMM_EntityBase
		constexpr auto IsDesiredRoator = 0x420; // bool
		constexpr auto StartDesiredRoator = 0x424; // FRotator
		constexpr auto DestDesiredRoator = 0x430; // FRotator
		constexpr auto TotalDesiredElapsedTime = 0x43c; // float
		constexpr auto SumDesiredElapsedTime = 0x440; // float
		constexpr auto BeamParticleSystemComponent = 0x448; // UParticleSystemComponent*
		constexpr auto BodyMesh = 0x468; // USkeletalMeshComponent*
		constexpr auto m_MovementComponent = 0x470; // UMM_PawnMovementComponent*
		constexpr auto BasedMovement = 0x478; // FBasedMovementInfo
		constexpr auto m_bMultiTarget = 0x4a9; // bool
		constexpr auto WidgetComp = 0x4f8; // UMirWidgetComponent*
		constexpr auto WidgetComp_2D = 0x500; // UMirWidgetComponent*
		constexpr auto m_HeightCurve = 0x518; // UCurveFloat*
		constexpr auto PivotHead = 0x764; // FVector
		constexpr auto DetectRange = 0x770; // float
		constexpr auto AutoBattleShortRange = 0x774; // float
		constexpr auto AutoBattleMidRange = 0x778; // float
		constexpr auto ShakeTime = 0x77c; // float
		constexpr auto ShakeAngle = 0x780; // float
		constexpr auto NameTagOffset = 0x784; // FVector
		constexpr auto WalkSpeed = 0x790; // float
		constexpr auto RunSpeed = 0x794; // float
		constexpr auto CliffMoveSpeed = 0x798; // float
		constexpr auto m_fConstFlashTime = 0x79c; // float
		constexpr auto m_pBalloonUI = 0x7b0; // ASpeechBalloonUI*
		constexpr auto FSMComp = 0x7d8; // UMM_FSMComponent*
		constexpr auto m_pTarget = 0x830; // UMM_B_Target*
		constexpr auto m_pCharPointLight = 0x838; // UPointLightComponent*
		constexpr auto m_pCCComponent = 0x840; // UMM_CrowdControlComponent*
		constexpr auto ExecuteDecalComponent = 0x848; // UMM_ExecuteDecalComponent*
		constexpr auto m_arrCharMaterial = 0x860; // TArray<FCharMaterialData>
		constexpr auto m_MoveRate = 0x8c8; // float
		constexpr auto m_SpeedAniRate = 0x8cc; // float
		constexpr auto m_CharData = 0x980; // FCharStatistics
	}

	namespace n_UMaterialExpressionTextureSampleParameterSubUV { // : UMaterialExpressionTextureSampleParameter2D
		constexpr auto bBlend = 0xf0; // char : 1
	}

	namespace n_AAIController { // : AController
		constexpr auto bStopAILogicOnUnposses = 0x2c8; // char : 1
		constexpr auto bLOSflag = 0x2c8; // char : 1
		constexpr auto bSkipExtraLOSChecks = 0x2c8; // char : 1
		constexpr auto bAllowStrafe = 0x2c8; // char : 1
		constexpr auto bWantsPlayerState = 0x2c8; // char : 1
		constexpr auto bSetControlRotationFromPawnOrientation = 0x2c8; // char : 1
		constexpr auto PathFollowingComponent = 0x2d0; // UPathFollowingComponent*
		constexpr auto BrainComponent = 0x2d8; // UBrainComponent*
		constexpr auto PerceptionComponent = 0x2e0; // UAIPerceptionComponent*
		constexpr auto ActionsComp = 0x2e8; // UPawnActionsComponent*
		constexpr auto Blackboard = 0x2f0; // UBlackboardComponent*
		constexpr auto CachedGameplayTasksComponent = 0x2f8; // UGameplayTasksComponent*
		constexpr auto DefaultNavigationFilterClass = 0x300; // UNavigationQueryFilter*
		constexpr auto ReceiveMoveCompleted = 0x308; // FScriptMulticastDelegate
	}

	namespace n_UEnvQueryGenerator_BlueprintBase { // : UEnvQueryGenerator
		constexpr auto GeneratorsActionDescription = 0x50; // FText
		constexpr auto Context = 0x68; // UEnvQueryContext*
		constexpr auto GeneratedItemType = 0x70; // UEnvQueryItemType*
	}

	namespace n_UMoviePlayerSettings { // : UObject
		constexpr auto bWaitForMoviesToComplete = 0x28; // bool
		constexpr auto bMoviesAreSkippable = 0x29; // bool
		constexpr auto StartupMovies = 0x30; // TArray<FString>
	}

	namespace n_UMM_B_Costume { // : UWidgetBase
		constexpr auto CostumePartsViewerWidget = 0x300; // UMM_Costume_PartsViewer*
		constexpr auto CostumeInventoryWidget = 0x308; // UMM_Costume_Inventory*
		constexpr auto CollectionListWidget = 0x310; // UMM_PopUp_Costume_CollectionList*
		constexpr auto Img_RenderTarget = 0x318; // UMirImage*
		constexpr auto m_TargetPos = 0x320; // UImage*
		constexpr auto Btn_MainCost = 0x328; // UMM_Common_Btn_Cost*
		constexpr auto Btn_Restore = 0x330; // UMM_Common_Btn_IconText*
		constexpr auto Btn_Palette = 0x338; // UMM_Common_Btn_IconText*
		constexpr auto Costume_CombatPoint = 0x340; // UMM_Costume_CombatPoint*
		constexpr auto PopUp_Palette = 0x348; // UMM_PopUp_Costume_Palette*
		constexpr auto BtnTooltip = 0x350; // UMM_Common_ToolTipBtn*
		constexpr auto STR_PurchaseDesc = 0x358; // int32_t
		constexpr auto STR_PurchaseAble = 0x35c; // int32_t
	}

	namespace n_UMM_NewInventory_MagicStone { // : UMM_NewInventory_Base
		constexpr auto inventory_tab = 0x2e8; // UMM_NewInventoryTab*
		constexpr auto inventory = 0x2f0; // UMM_NewInventory*
	}

	namespace n_UDecalComponent { // : USceneComponent
		constexpr auto DecalMaterial = 0x220; // UMaterialInterface*
		constexpr auto SortOrder = 0x228; // int32_t
		constexpr auto FadeScreenSize = 0x22c; // float
		constexpr auto FadeStartDelay = 0x230; // float
		constexpr auto FadeDuration = 0x234; // float
		constexpr auto FadeInDuration = 0x238; // float
		constexpr auto FadeInStartDelay = 0x23c; // float
		constexpr auto bDestroyOwnerAfterFade = 0x240; // char : 1
		constexpr auto DecalSize = 0x244; // FVector
	}

	namespace n_UFirebaseFacebookCredential { // : UBlueprintAsyncActionBase
		constexpr auto OnComplete = 0x30; // FScriptMulticastDelegate
	}

	namespace n_UMM_Hud_Chat_UserSlot { // : UWidgetBase
		constexpr auto STRING_BTN_UNBLOCK = 0x2e8; // int32_t
		constexpr auto img_profile = 0x2f0; // UMirImage*
		constexpr auto txt_nickname = 0x2f8; // UMirTextBlock*
		constexpr auto Btn_WhisperChat = 0x300; // UMirButton*
		constexpr auto Btn_UnBlock = 0x308; // UMM_Common_Btn*
	}

	namespace n_UInAppPurchaseData { // : USaveGame
		constexpr auto m_IAPProductData = 0x28; // FIAPProductData
	}

	namespace n_UMM_Mastery_Ability_Slot { // : UWidgetBase
		constexpr auto mImgAbilityIcon = 0x300; // UMirImage*
		constexpr auto mTxtAbilityName = 0x308; // UMirTextBlock*
		constexpr auto mTxtAbilityValue = 0x310; // UMirTextBlock*
		constexpr auto mImgArrow = 0x318; // UMirImage*
		constexpr auto mTxtUpgradeAbilityValue = 0x320; // UMirTextBlock*
		constexpr auto mImgSelected = 0x328; // UMirImage*
		constexpr auto mImgIndicator = 0x330; // UMirImage*
		constexpr auto m_BtnMain = 0x338; // UMirButton*
	}

	namespace n_UMM_SynthesisResult_Slot { // : UWidgetBase
		constexpr auto m_pSlotItem = 0x2f0; // UMM_Slot_Inventory*
		constexpr auto m_pTxtItemName = 0x2f8; // UMirTextBlock*
		constexpr auto m_Txt_Seal = 0x300; // UMirTextBlock*
		constexpr auto m_pCanvasItemName = 0x308; // UMirCanvasPanel*
		constexpr auto m_Img_Gold_Card_Squre_Fx = 0x310; // UMirImage*
		constexpr auto m_pCardOpenAni = 0x318; // UWidgetAnimation*
		constexpr auto m_pCardOpenGreatSuccessAni = 0x320; // UWidgetAnimation*
		constexpr auto m_pHeroCardOpenAni = 0x328; // UWidgetAnimation*
		constexpr auto m_pHeroCardOpenGreatSuccessAni = 0x330; // UWidgetAnimation*
		constexpr auto m_pLegendCardOpenAni = 0x338; // UWidgetAnimation*
		constexpr auto m_pLegendCardOpenGreatSuccessAni = 0x340; // UWidgetAnimation*
		constexpr auto m_pSlotStartAni = 0x348; // UWidgetAnimation*
		constexpr auto m_pBounceAni = 0x350; // UWidgetAnimation*
		constexpr auto m_pCardTurnOpen = 0x358; // UWidgetAnimation*
		constexpr auto m_pCenserBounceAni = 0x360; // UWidgetAnimation*
		constexpr auto m_pSuccessBounceImage = 0x368; // UMirImage*
		constexpr auto m_pGreatSuccessAni = 0x370; // UWidgetAnimation*
		constexpr auto m_Grid_Card_Turn_Effect = 0x378; // UGridPanel*
		constexpr auto m_WE_Unsealing_Complete02 = 0x380; // UEffectWidgetBase*
		constexpr auto m_pBtnClick = 0x388; // UMirButton*
		constexpr auto m_pPanelCover = 0x390; // UMirCanvasPanel*
		constexpr auto m_Img_Cover = 0x398; // UMirImage*
		constexpr auto m_pScaleSeal = 0x3a0; // UScaleBox*
		constexpr auto m_Effect_Panel = 0x3a8; // UGridPanel*
		constexpr auto m_Effect_Widget = 0x3b0; // UEffectWidgetBase*
		constexpr auto m_pGreatHeroOpenAni = 0x3b8; // UWidgetAnimation*
		constexpr auto m_pHeroAppearAni = 0x3c0; // UWidgetAnimation*
	}

	namespace n_UAITask { // : UGameplayTask
		constexpr auto OwnerController = 0x68; // AAIController*
	}

	namespace n_AActivateTrigger { // : AActor
		constexpr auto m_EditorTriggerName = 0x220; // FString
		constexpr auto m_pActiveTriggerArray = 0x230; // TArray<AActivateTrigger*>
		constexpr auto m_TriggerIndex = 0x240; // int32_t
		constexpr auto m_TriggerType = 0x244; // ETriggerType
		constexpr auto m_bActiveTriggerCondition = 0x268; // bool
		constexpr auto m_bActivated = 0x269; // bool
		constexpr auto m_pTriggerManager = 0x270; // AMM_TriggerManager*
	}

	namespace n_UNavigationGraphNodeComponent { // : USceneComponent
		constexpr auto Node = 0x220; // FNavGraphNode
		constexpr auto NextNodeComponent = 0x238; // UNavigationGraphNodeComponent*
		constexpr auto PrevNodeComponent = 0x240; // UNavigationGraphNodeComponent*
	}

	namespace n_UFadeWidget { // : UWidgetBase
		constexpr auto m_BackgroundColor = 0x2e0; // FLinearColor
	}

	namespace n_UOnlineSubsystemExtendedFacebookSettings { // : UObject
		constexpr auto FacebookAppId = 0x28; // FString
		constexpr auto FacebookDisplayName = 0x38; // FString
		constexpr auto InitLoginPermissions = 0x48; // FString
		constexpr auto FriendsInviteMessage = 0x58; // FString
		constexpr auto FriendsQueryFields = 0x68; // FString
		constexpr auto bForcePortraitMode = 0x78; // bool
		constexpr auto bForceWebBrowserModeAndroid = 0x79; // bool
		constexpr auto bForceWebBrowserModeIOS = 0x7a; // bool
	}

	namespace n_USourceEffectStereoDelayPreset { // : USoundEffectSourcePreset
		constexpr auto Settings = 0x7c; // FSourceEffectStereoDelaySettings
	}

	namespace n_UMM_Popup_ServerVisitList { // : UWidgetBase
		constexpr auto m_Btn_Close = 0x2f0; // UMM_Common_Btn_Symbol*
		constexpr auto m_Scroll_ServerList = 0x2f8; // UScrollBox*
		constexpr auto m_Scroll_Wrap = 0x300; // UPanelWidget*
	}

	namespace n_UAsyncActionLoadPrimaryAssetList { // : UAsyncActionLoadPrimaryAssetBase
		constexpr auto Completed = 0x78; // FScriptMulticastDelegate
	}

	namespace n_UMM_PopupGetItemWidget { // : UWidgetBase
		constexpr auto TitleStrID = 0x2f0; // int32_t
		constexpr auto SlotPadding = 0x2f4; // FMargin
		constexpr auto Event_ScreenStrID = 0x304; // int32_t
		constexpr auto TreasureGobllin_ScreenStrID = 0x308; // int32_t
		constexpr auto Scr_CategoryList = 0x310; // UScrollBox*
		constexpr auto btn_close = 0x318; // UMM_Common_Btn_Symbol*
		constexpr auto Btn_BG = 0x320; // UMirButton*
		constexpr auto Txt_Title = 0x328; // UTextBlock*
		constexpr auto Category_Depth1 = 0x330; // UScrollBox*
		constexpr auto DetailList = 0x338; // UMM_GetItemWayList*
		constexpr auto Arr_CategoryList = 0x340; // TArray<UMM_GetItemWayListSlot_Category*>
		constexpr auto Arr_TypeList = 0x350; // TArray<UMM_CommonVerticalTabBtn_Symbol*>
		constexpr auto FirstChoice = 0x360; // bool
		constexpr auto bAsyncLoaded = 0x361; // bool
		constexpr auto MakeSlotCount = 0x364; // int32_t
		constexpr auto FirstSelectType_ItemWayType = 0x368; // int32_t
		constexpr auto FirstSelectType_MoneyWayType = 0x36c; // int32_t
		constexpr auto SortIndexList = 0x370; // TArray<int32_t>
	}

	namespace n_UPrimitiveComponent { // : USceneComponent
		constexpr auto MinDrawDistance = 0x228; // float
		constexpr auto LDMaxDrawDistance = 0x22c; // float
		constexpr auto CachedMaxDrawDistance = 0x230; // float
		constexpr auto DepthPriorityGroup = 0x234; // ESceneDepthPriorityGroup
		constexpr auto ViewOwnerDepthPriorityGroup = 0x235; // ESceneDepthPriorityGroup
		constexpr auto IndirectLightingCacheQuality = 0x236; // EIndirectLightingCacheQuality
		constexpr auto LightmapType = 0x237; // ELightmapType
		constexpr auto bUseMaxLODAsImposter = 0x238; // char : 1
		constexpr auto CachedBoundsSphereDiameter = 0x23c; // float
		constexpr auto bBatchImpostersAsInstances = 0x240; // char : 1
		constexpr auto bNeverDistanceCull = 0x240; // char : 1
		constexpr auto bAlwaysCreatePhysicsState = 0x240; // char : 1
		constexpr auto bGenerateOverlapEvents = 0x240; // char : 1
		constexpr auto bMultiBodyOverlap = 0x241; // char : 1
		constexpr auto bTraceComplexOnMove = 0x241; // char : 1
		constexpr auto bReturnMaterialOnMove = 0x241; // char : 1
		constexpr auto bUseViewOwnerDepthPriorityGroup = 0x241; // char : 1
		constexpr auto bAllowCullDistanceVolume = 0x241; // char : 1
		constexpr auto bHasMotionBlurVelocityMeshes = 0x241; // char : 1
		constexpr auto bVisibleInReflectionCaptures = 0x241; // char : 1
		constexpr auto bVisibleInRayTracing = 0x241; // char : 1
		constexpr auto bRenderInMainPass = 0x242; // char : 1
		constexpr auto bRenderInDepthPass = 0x242; // char : 1
		constexpr auto bReceivesDecals = 0x242; // char : 1
		constexpr auto bOwnerNoSee = 0x242; // char : 1
		constexpr auto bOnlyOwnerSee = 0x242; // char : 1
		constexpr auto bTreatAsBackgroundForOcclusion = 0x242; // char : 1
		constexpr auto bUseAsOccluder = 0x242; // char : 1
		constexpr auto bSelectable = 0x242; // char : 1
		constexpr auto bForceMipStreaming = 0x243; // char : 1
		constexpr auto bHasPerInstanceHitProxies = 0x243; // char : 1
		constexpr auto CastShadow = 0x243; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x243; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x243; // char : 1
		constexpr auto bCastDynamicShadow = 0x243; // char : 1
		constexpr auto bCastStaticShadow = 0x243; // char : 1
		constexpr auto bCastVolumetricTranslucentShadow = 0x243; // char : 1
		constexpr auto bSelfShadowOnly = 0x244; // char : 1
		constexpr auto bCastFarShadow = 0x244; // char : 1
		constexpr auto bCastInsetShadow = 0x244; // char : 1
		constexpr auto bCastCinematicShadow = 0x244; // char : 1
		constexpr auto bCastHiddenShadow = 0x244; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x244; // char : 1
		constexpr auto bLightAsIfStatic = 0x244; // char : 1
		constexpr auto bLightAttachmentsAsGroup = 0x244; // char : 1
		constexpr auto bExcludeFromLightAttachmentGroup = 0x245; // char : 1
		constexpr auto bReceiveMobileCSMShadows = 0x245; // char : 1
		constexpr auto bSingleSampleShadowFromStationaryLights = 0x245; // char : 1
		constexpr auto bIgnoreRadialImpulse = 0x245; // char : 1
		constexpr auto bIgnoreRadialForce = 0x245; // char : 1
		constexpr auto bApplyImpulseOnDamage = 0x245; // char : 1
		constexpr auto bReplicatePhysicsToAutonomousProxy = 0x245; // char : 1
		constexpr auto AlwaysLoadOnClient = 0x245; // char : 1
		constexpr auto AlwaysLoadOnServer = 0x246; // char : 1
		constexpr auto bUseEditorCompositing = 0x246; // char : 1
		constexpr auto bRenderCustomDepth = 0x246; // char : 1
		constexpr auto bHasCustomNavigableGeometry = 0x247; // EHasCustomNavigableGeometry
		constexpr auto CanCharacterStepUpOn = 0x249; // ECanBeCharacterBase
		constexpr auto LightingChannels = 0x24a; // FLightingChannels
		constexpr auto CustomDepthStencilWriteMask = 0x24b; // ERendererStencilMask
		constexpr auto CustomDepthStencilValue = 0x24c; // int32_t
		constexpr auto CustomPrimitiveData = 0x250; // FCustomPrimitiveData
		constexpr auto TranslucencySortPriority = 0x260; // int32_t
		constexpr auto VisibilityId = 0x264; // int32_t
		constexpr auto bIgnoreOcclusionVolume = 0x268; // char : 1
		constexpr auto OcclusionVolumeId = 0x26c; // int32_t
		constexpr auto RuntimeVirtualTextures = 0x270; // TArray<URuntimeVirtualTexture*>
		constexpr auto VirtualTextureLodBias = 0x280; // uint8_t
		constexpr auto VirtualTextureCullMips = 0x281; // uint8_t
		constexpr auto VirtualTextureMinCoverage = 0x282; // uint8_t
		constexpr auto VirtualTextureRenderPassType = 0x283; // ERuntimeVirtualTextureMainPassType
		constexpr auto LpvBiasMultiplier = 0x288; // float
		constexpr auto BoundsScale = 0x294; // float
		constexpr auto MoveIgnoreActors = 0x2a8; // TArray<AActor*>
		constexpr auto MoveIgnoreComponents = 0x2b8; // TArray<UPrimitiveComponent*>
		constexpr auto BodyInstance = 0x2d8; // FBodyInstance
		constexpr auto OnComponentHit = 0x3e8; // FScriptMulticastDelegate
		constexpr auto OnComponentBeginOverlap = 0x3e9; // FScriptMulticastDelegate
		constexpr auto OnComponentEndOverlap = 0x3ea; // FScriptMulticastDelegate
		constexpr auto OnComponentWake = 0x3eb; // FScriptMulticastDelegate
		constexpr auto OnComponentSleep = 0x3ec; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x3ee; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x3ef; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x3f0; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x3f1; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x3f2; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x3f3; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x3f4; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x3f5; // FScriptMulticastDelegate
		constexpr auto LODParentPrimitive = 0x410; // UPrimitiveComponent*
	}

	namespace n_UMM_B_UIShopAds { // : UWidgetBase
		constexpr auto m_Panel_MainTabBG = 0x2f0; // UMirCanvasPanel*
		constexpr auto m_MainTabScrollBox = 0x2f8; // UMirScrollBox*
		constexpr auto m_PanelSubTabLine = 0x300; // UMirCanvasPanel*
		constexpr auto m_SubTabScrollBox = 0x308; // UMirScrollBox*
		constexpr auto m_UIShopGoodsList = 0x310; // UMM_UIShopGoodsListNormal*
		constexpr auto m_Panel_Ads = 0x318; // UMirCanvasPanel*
		constexpr auto m_Txt_AdsTooltipTitle = 0x320; // UMirTextBlock*
		constexpr auto m_Txt_AdsCoolTime = 0x328; // UMirTextBlock*
		constexpr auto m_CheckBoxSkip = 0x330; // UMirCheckBox*
		constexpr auto m_Txt_Skip = 0x338; // UMirTextBlock*
		constexpr auto m_Btn_StartAds = 0x340; // UMM_Common_Btn_Cost*
		constexpr auto m_AdsRewardBox = 0x348; // UMM_UIShopAdsRewardBox*
		constexpr auto m_MoviePlayerWidget = 0x350; // UMM_UIShopAdsMovieWidget*
		constexpr auto m_FadeWidget = 0x358; // UFadeWidget*
	}

	namespace n_USiegeBuildingEffectData { // : UObject
		constexpr auto SiegeType = 0x28; // int32_t
	}

	namespace n_UOnlineSessionClient { // : UOnlineSession
		constexpr auto bIsFromInvite = 0x188; // bool
		constexpr auto bHandlingDisconnect = 0x189; // bool
	}

	namespace n_UMM_Dominion_History_Slot { // : UWidgetBase
		constexpr auto m_pTxtTime = 0x320; // UMirTextBlock*
		constexpr auto m_pTxtLog = 0x328; // UMirRichTextBlock*
	}

	namespace n_UWNAndroidDeviceState { // : UBlueprintAsyncActionBase
		constexpr auto OnChangedAndroidDeviceState = 0x30; // FScriptMulticastDelegate
	}

	namespace n_UParticleModuleSizeBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x29; // char : 1
		constexpr auto LODDuplicate = 0x29; // char : 1
		constexpr auto bSupportsRandomSeed = 0x29; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x29; // char : 1
		constexpr auto LODValidity = 0x2a; // char
	}

	namespace n_UAudioComponent { // : USceneComponent
		constexpr auto sound = 0x220; // USoundBase*
		constexpr auto InstanceParameters = 0x228; // TArray<FAudioComponentParam>
		constexpr auto SoundClassOverride = 0x238; // USoundClass*
		constexpr auto bAutoDestroy = 0x240; // char : 1
		constexpr auto bStopWhenOwnerDestroyed = 0x240; // char : 1
		constexpr auto bShouldRemainActiveIfDropped = 0x240; // char : 1
		constexpr auto bAllowSpatialization = 0x240; // char : 1
		constexpr auto bOverrideAttenuation = 0x240; // char : 1
		constexpr auto bOverrideSubtitlePriority = 0x240; // char : 1
		constexpr auto bIsUISound = 0x240; // char : 1
		constexpr auto bEnableLowPassFilter = 0x240; // char : 1
		constexpr auto bOverridePriority = 0x241; // char : 1
		constexpr auto bSuppressSubtitles = 0x241; // char : 1
		constexpr auto bAutoManageAttachment = 0x242; // char : 1
		constexpr auto AudioComponentUserID = 0x248; // FName
		constexpr auto PitchModulationMin = 0x250; // float
		constexpr auto PitchModulationMax = 0x254; // float
		constexpr auto VolumeModulationMin = 0x258; // float
		constexpr auto VolumeModulationMax = 0x25c; // float
		constexpr auto VolumeMultiplier = 0x260; // float
		constexpr auto EnvelopeFollowerAttackTime = 0x264; // int32_t
		constexpr auto EnvelopeFollowerReleaseTime = 0x268; // int32_t
		constexpr auto Priority = 0x26c; // float
		constexpr auto SubtitlePriority = 0x270; // float
		constexpr auto SourceEffectChain = 0x278; // USoundEffectSourcePresetChain*
		constexpr auto PitchMultiplier = 0x280; // float
		constexpr auto LowPassFilterFrequency = 0x284; // float
		constexpr auto AttenuationSettings = 0x290; // USoundAttenuation*
		constexpr auto AttenuationOverrides = 0x298; // FSoundAttenuationSettings
		constexpr auto ConcurrencySettings = 0x588; // USoundConcurrency*
		constexpr auto ConcurrencySet = 0x590; // TSet<USoundConcurrency*>
		constexpr auto AutoAttachLocationRule = 0x5ec; // EAttachmentRule
		constexpr auto AutoAttachRotationRule = 0x5ed; // EAttachmentRule
		constexpr auto AutoAttachScaleRule = 0x5ee; // EAttachmentRule
		constexpr auto OnAudioFinished = 0x5f0; // FScriptMulticastDelegate
		constexpr auto OnAudioPlaybackPercent = 0x618; // FScriptMulticastDelegate
		constexpr auto OnAudioSingleEnvelopeValue = 0x640; // FScriptMulticastDelegate
		constexpr auto OnAudioMultiEnvelopeValue = 0x668; // FScriptMulticastDelegate
		constexpr auto Modulation = 0x690; // FSoundModulation
		constexpr auto OnQueueSubtitles = 0x6a0; // DelegateProperty
		constexpr auto AutoAttachParent = 0x6b0; // TWeakObjectPtr<USceneComponent>
		constexpr auto AutoAttachSocketName = 0x6b8; // FName
	}

	namespace n_UEnvQueryGenerator { // : UEnvQueryNode
		constexpr auto OptionName = 0x30; // FString
		constexpr auto ItemType = 0x40; // UEnvQueryItemType*
		constexpr auto bAutoSortTests = 0x48; // char : 1
	}

	namespace n_UMovieScene3DAttachSection { // : UMovieScene3DConstraintSection
		constexpr auto AttachSocketName = 0x108; // FName
		constexpr auto AttachComponentName = 0x110; // FName
		constexpr auto AttachmentLocationRule = 0x118; // EAttachmentRule
		constexpr auto AttachmentRotationRule = 0x119; // EAttachmentRule
		constexpr auto AttachmentScaleRule = 0x11a; // EAttachmentRule
		constexpr auto DetachmentLocationRule = 0x11b; // EDetachmentRule
		constexpr auto DetachmentRotationRule = 0x11c; // EDetachmentRule
		constexpr auto DetachmentScaleRule = 0x11d; // EDetachmentRule
	}

	namespace n_UImageSequenceProtocol_PNG { // : UCompressedImageSequenceProtocol
		constexpr auto CompressionQuality = 0xd8; // int32_t
	}

	namespace n_UInterpTrackVectorMaterialParam { // : UInterpTrackVectorBase
		constexpr auto TargetMaterials = 0x90; // TArray<UMaterialInterface*>
		constexpr auto ParamName = 0xa0; // FName
	}

	namespace n_ALight { // : AActor
		constexpr auto LightComponent = 0x218; // ULightComponent*
		constexpr auto bEnabled = 0x220; // char : 1
	}

	namespace n_UMM_Popup_Revival { // : UWidgetBase
		constexpr auto Panel_SafeRevival = 0x2f0; // UPanelWidget*
		constexpr auto Panel_HeartCount = 0x2f8; // UPanelWidget*
		constexpr auto RTxt_KillerInfo = 0x300; // UMirRichTextBlock*
		constexpr auto RTxt_HelpInfo = 0x308; // UMirRichTextBlock*
		constexpr auto RTxt_AutoSafeRevivalDesc = 0x310; // UMirRichTextBlock*
		constexpr auto Txt_DeathGuide = 0x318; // UMirTextBlock*
		constexpr auto Txt_HeartCount = 0x320; // UMirTextBlock*
		constexpr auto Txt_DeathPenalty = 0x328; // UMirTextBlock*
		constexpr auto Btn_SafeRevival = 0x330; // UMM_Common_Btn*
		constexpr auto Btn_HelpRevival = 0x338; // UMM_Common_Btn*
		constexpr auto Btn_FreeRevival = 0x340; // UMM_Common_Btn*
		constexpr auto Btn_ImmediateRevival = 0x348; // UMM_Common_Btn_Cost*
		constexpr auto Btn_SituationBoard = 0x350; // UMM_Common_Btn*
		constexpr auto Img_IndicatorChat = 0x358; // UMirImage*
		constexpr auto Txt_IndicatorChat = 0x360; // UMirTextBlock*
		constexpr auto Panel_BtnEffectChat = 0x368; // UPanelWidget*
		constexpr auto Btn_Chat = 0x370; // UMirButton*
		constexpr auto m_pChatWidget = 0x378; // UMM_Hud_Chat*
		constexpr auto m_pScrollPenaltyList = 0x380; // UMirScrollBox*
		constexpr auto m_pTxt_Penalty_Exp = 0x388; // UMirTextBlock*
		constexpr auto m_pTxt_NamePenalty = 0x390; // UMirTextBlock*
		constexpr auto m_pTxt_SafeRevivalDelayResetTime = 0x398; // UMirTextBlock*
		constexpr auto m_pStartAni = 0x3a8; // UWidgetAnimation*
		constexpr auto m_pEndAni = 0x3b0; // UWidgetAnimation*
		constexpr auto m_WidgetData = 0x3c0; // UMirWidgetData*
	}

	namespace n_UMaterialExpressionStaticComponentMaskParameter { // : UMaterialExpressionParameter
		constexpr auto Input = 0x58; // FExpressionInput
		constexpr auto DefaultR = 0x6c; // char : 1
		constexpr auto DefaultG = 0x6c; // char : 1
		constexpr auto DefaultB = 0x6c; // char : 1
		constexpr auto DefaultA = 0x6c; // char : 1
	}

	namespace n_UMM_Hud_Chat_StatusMessage { // : UWidgetBase
		constexpr auto m_RTxt_TalkMessage = 0x2e0; // UMirRichTextBlock*
		constexpr auto Btn_StageInfo = 0x2e8; // UMirButton*
		constexpr auto m_UserUID = 0x2f0; // uint64_t
		constexpr auto m_iSendTime = 0x2f8; // int64_t
	}

	namespace n_URuntimeVirtualTexture { // : UObject
		constexpr auto materialType = 0x28; // ERuntimeVirtualTextureMaterialType
		constexpr auto bCompressTextures = 0x29; // bool
		constexpr auto bEnable = 0x2a; // bool
		constexpr auto bClearTextures = 0x2b; // bool
		constexpr auto bSinglePhysicalSpace = 0x2c; // bool
		constexpr auto bPrivateSpace = 0x2d; // bool
		constexpr auto bEnableScalability = 0x2e; // bool
		constexpr auto Size = 0x30; // int32_t
		constexpr auto TileCount = 0x34; // int32_t
		constexpr auto TileSize = 0x38; // int32_t
		constexpr auto TileBorderSize = 0x3c; // int32_t
		constexpr auto RemoveLowMips = 0x40; // int32_t
		constexpr auto StreamLowMips = 0x44; // int32_t
		constexpr auto StreamingTexture = 0x48; // URuntimeVirtualTextureStreamingProxy*
	}

	namespace n_UMM_B_SynthesisResult { // : UWidgetBase
		constexpr auto STRING_ID_BTN_OPENALL = 0x2e0; // int32_t
		constexpr auto STRING_ID_BTN_CLOSE = 0x2e4; // int32_t
		constexpr auto STRING_TITLE_SYNTHESIS = 0x2e8; // int32_t
		constexpr auto STRING_TITLE_CHANGE = 0x2ec; // int32_t
		constexpr auto STRING_ID_GRADE_EPIC = 0x2f0; // int32_t
		constexpr auto STRING_ID_GRADE_LEGEND = 0x2f4; // int32_t
		constexpr auto NORMAL_CARD_APPEAR_DELAY = 0x2f8; // float
		constexpr auto HERO_CARD_APPEAR_DELAY = 0x2fc; // float
		constexpr auto m_arrItemSlot = 0x300; // TArray<UMM_SynthesisResult_Slot*>
		constexpr auto m_pTitleTxt = 0x310; // UMirTextBlock*
		constexpr auto m_pBtnOk = 0x318; // UMM_Common_Btn*
		constexpr auto m_pStartAni = 0x320; // UWidgetAnimation*
		constexpr auto m_pEndAni = 0x328; // UWidgetAnimation*
		constexpr auto m_RTxt_AddPoint = 0x330; // UMirRichTextBlock* [0x2]
	}

	namespace n_UEditableGameplayTagQueryExpression_AllExprMatch { // : UEditableGameplayTagQueryExpression
		constexpr auto Expressions = 0x28; // TArray<UEditableGameplayTagQueryExpression*>
	}

	namespace n_ACullDistanceVolume { // : AVolume
		constexpr auto PresetType = 0x250; // ECullDistanceVolumePresetType
		constexpr auto CullDistances = 0x258; // TArray<FCullDistanceSizePair>
		constexpr auto bEnabled = 0x268; // char : 1
	}

	namespace n_UMaterialExpressionClamp { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Min = 0x54; // FExpressionInput
		constexpr auto Max = 0x68; // FExpressionInput
		constexpr auto ClampMode = 0x7c; // EClampMode
		constexpr auto MinDefault = 0x80; // float
		constexpr auto MaxDefault = 0x84; // float
	}

	namespace n_USkeletalMeshLODSettings { // : UDataAsset
		constexpr auto MinLOD = 0x30; // FPerPlatformInt
		constexpr auto DisableBelowMinLodStripping = 0x34; // FPerPlatformBool
		constexpr auto bSupportLODStreaming = 0x35; // FPerPlatformBool
		constexpr auto MaxNumStreamedLODs = 0x38; // FPerPlatformInt
		constexpr auto MaxNumOptionalLODs = 0x3c; // FPerPlatformInt
		constexpr auto LODGroups = 0x40; // TArray<FSkeletalMeshLODGroupSettings>
	}

	namespace n_ACountTrigger { // : AActivateTrigger
		constexpr auto m_MaxCount = 0x278; // int32_t
	}

	namespace n_UMM_ItemSynthesis_Inven { // : UWidgetBase
		constexpr auto MIN_SLOT_COUNT = 0x2f0; // int32_t
		constexpr auto MAX_SLOT_LINE = 0x2f4; // int32_t
		constexpr auto m_Scr_Main = 0x2f8; // UMirScrollBox*
		constexpr auto m_Wrap_Main = 0x300; // UPanelWidget*
	}

	namespace n_UCrowdFollowingComponent { // : UPathFollowingComponent
		constexpr auto CharacterMovement = 0x260; // UCharacterMovementComponent*
		constexpr auto CrowdAgentMoveDirection = 0x268; // FVector
	}

	namespace n_UAnimSingleNodeInstance { // : UAnimInstance
		constexpr auto CurrentAsset = 0x268; // UAnimationAsset*
		constexpr auto PostEvaluateAnimEvent = 0x270; // DelegateProperty
	}

	namespace n_UDistributionVectorConstant { // : UDistributionVector
		constexpr auto Constant = 0x38; // FVector
		constexpr auto bLockAxes = 0x44; // char : 1
		constexpr auto LockedAxes = 0x48; // EDistributionVectorLockFlags
	}

	namespace n_UMM_Popup_Passive_Option_Info { // : UWidgetBase
		constexpr auto Txt_SkillPassiveName = 0x2e0; // UMirTextBlock*
		constexpr auto Txt_SkillPassiveState = 0x2e8; // UMirTextBlock*
		constexpr auto Txt_SkillPassiveExplain = 0x2f0; // UMirRichTextBlock*
		constexpr auto Txt_SkillPassiveExplain_Short = 0x2f8; // UMirRichTextBlock*
		constexpr auto Panel_Main = 0x300; // UPanelWidget*
		constexpr auto btn_close = 0x308; // UButton*
	}

	namespace n_UMM_New_Force_Detail_Info { // : UWidgetBase
		constexpr auto m_CurInfo = 0x2f0; // UHorizontalBox*
		constexpr auto m_Txt_ForceName = 0x2f8; // UMirTextBlock*
		constexpr auto m_Btn_Detail = 0x300; // UMM_Common_Btn_Symbol*
		constexpr auto m_NextInfo = 0x308; // UHorizontalBox*
		constexpr auto m_Txt_NextForceName = 0x310; // UMirTextBlock*
		constexpr auto m_Btn_NextDetail = 0x318; // UMM_Common_Btn_Symbol*
	}

	namespace n_UMM_PageIndicator { // : UUserWidget
		constexpr auto ColorAndOpacity = 0x110; // FLinearColor
		constexpr auto ColorAndOpacityDelegate = 0x120; // DelegateProperty
		constexpr auto ForegroundColor = 0x130; // FSlateColor
		constexpr auto ForegroundColorDelegate = 0x158; // DelegateProperty
		constexpr auto Padding = 0x168; // FMargin
		constexpr auto ActiveSequencePlayers = 0x178; // TArray<UUMGSequencePlayer*>
		constexpr auto StoppedSequencePlayers = 0x188; // TArray<UUMGSequencePlayer*>
		constexpr auto NamedSlotBindings = 0x1a8; // TArray<FNamedSlotBinding>
		constexpr auto WidgetTree = 0x1b8; // UWidgetTree*
		constexpr auto Priority = 0x1c0; // int32_t
		constexpr auto bSupportsKeyboardFocus = 0x1c4; // char : 1
		constexpr auto bIsFocusable = 0x1c4; // char : 1
		constexpr auto bStopAction = 0x1c4; // char : 1
		constexpr auto bHasScriptImplementedTick = 0x1c4; // char : 1
		constexpr auto bHasScriptImplementedPaint = 0x1c4; // char : 1
		constexpr auto bCookedWidgetTree = 0x1c4; // char : 1
		constexpr auto TickFrequency = 0x1d0; // EWidgetTickFrequency
		constexpr auto InputComponent = 0x1d8; // UInputComponent*
		constexpr auto AnimationCallbacks = 0x1e0; // TArray<FAnimationEventBinding>
	}

	namespace n_UScrollBoxSlot { // : UPanelSlot
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UMM_RelationQuestDetailList { // : UWidgetBase
		constexpr auto m_ReqRewarToStr = 0x2f0; // int32_t
		constexpr auto m_Txt_Title = 0x2f8; // UMirTextBlock*
		constexpr auto m_ListView_RelationList = 0x300; // UMirListView*
		constexpr auto m_Prog_Quest = 0x308; // UMirProgressBar*
		constexpr auto m_Btn_Reward = 0x310; // UMM_Common_Btn*
		constexpr auto m_Txt_Percent = 0x318; // UMirTextBlock*
		constexpr auto m_Txt_Prog = 0x320; // UMirTextBlock*
		constexpr auto m_Slot_Rewards = 0x328; // TArray<UMM_Slot_Material*>
		constexpr auto m_Img_Scroll = 0x338; // UMirImage*
		constexpr auto m_Img_Complete = 0x340; // UMirImage*
		constexpr auto RECIEVE_BTN_EFECT_ID = 0x34c; // int32_t
		constexpr auto m_arRelationDetailSlotObj = 0x350; // TArray<URelationDetailSlotObj*>
	}

	namespace n_UInterpTrackAudioMaster { // : UInterpTrackVectorBase
		constexpr auto VectorTrack = 0x70; // FInterpCurveVector
		constexpr auto CurveTension = 0x88; // float
	}

	namespace n_ULightMapTexture2D { // : UTexture2D
		constexpr auto LevelIndex = 0xd0; // int32_t
		constexpr auto FirstResourceMemMip = 0xd4; // int32_t
		constexpr auto bTemporarilyDisableStreaming = 0xd8; // char : 1
		constexpr auto AddressX = 0xd9; // TextureAddress
		constexpr auto AddressY = 0xda; // TextureAddress
		constexpr auto ImportedSize = 0xdc; // FIntPoint
	}

	namespace n_UMM_PetGradeUp_InfoSlot { // : UWidgetBase
		constexpr auto m_Txt_Level = 0x2e0; // UMirTextBlock*
		constexpr auto m_Txt_EquipSlotCount = 0x2e8; // UMirTextBlock*
		constexpr auto m_arSkillSlot = 0x2f0; // UMM_PetAbilitySlot* [0x4]
	}

	namespace n_UMasterAudioSubmixCaptureProtocol { // : UMovieSceneAudioCaptureProtocolBase
		constexpr auto Filename = 0x58; // FString
	}

	namespace n_UMM_PatchMovieWidget { // : UWidgetBase
		constexpr auto m_MediaPlayer = 0x2e0; // UMediaPlayer*
		constexpr auto m_MediaTexture = 0x2e8; // UMediaTexture*
		constexpr auto m_Movie_Patch = 0x2f0; // UMediaSource*
		constexpr auto m_MediaSoundActor = 0x300; // AMediaSoundActor*
		constexpr auto m_VolumeController = 0x308; // UMM_VolumeController*
	}

	namespace n_UMM_HudPetBuffIcon { // : UWidgetBase
		constexpr auto m_Img_TierBg = 0x2e8; // UMirImage*
		constexpr auto m_Img_PetIcon = 0x2f0; // UMirImage*
		constexpr auto m_Txt_BuffTime = 0x2f8; // UMirTextBlock*
		constexpr auto m_Btn_Main = 0x300; // UMirButton*
	}

	namespace n_ACameraBlockingVolume { // : AVolume
		constexpr auto BrushType = 0x218; // EBrushType
		constexpr auto BrushColor = 0x21c; // FColor
		constexpr auto PolyFlags = 0x220; // int32_t
		constexpr auto bColored = 0x224; // char : 1
		constexpr auto bSolidWhenSelected = 0x224; // char : 1
		constexpr auto bPlaceableFromClassBrowser = 0x224; // char : 1
		constexpr auto bNotForClientOrServer = 0x224; // char : 1
		constexpr auto Brush = 0x228; // UModel*
		constexpr auto BrushComponent = 0x230; // UBrushComponent*
		constexpr auto bInManipulation = 0x238; // char : 1
		constexpr auto SavedSelections = 0x240; // TArray<FGeomSelection>
	}

	namespace n_UMM_Occupation_SituationBoard { // : UWidgetBase
		constexpr auto m_SiegeMinimap = 0x2f0; // UMM_Occupation_Minimap*
		constexpr auto m_SiegeBattleFieldInfo = 0x2f8; // UMM_Occupation_BattleFieldInfo*
		constexpr auto m_Btn_OpenRankPopup = 0x300; // UMM_Common_Btn_Symbol*
		constexpr auto m_Btn_ChattingPopup = 0x308; // UMM_Common_Btn_Symbol*
		constexpr auto m_Hud_MiniChat = 0x310; // UMM_Hud_Chat*
		constexpr auto m_Position_Notice = 0x318; // UMirCanvasPanel*
		constexpr auto m_Txt_Notice = 0x320; // UMirTextBlock*
		constexpr auto m_CommandList = 0x328; // TArray<UMM_Occupation_CommandSlot*>
		constexpr auto m_Check_MapNotice = 0x338; // UMirCheckBox*
		constexpr auto Panel_Command_Drag = 0x340; // UCanvasPanel*
		constexpr auto m_Img_Drag = 0x348; // UImage*
		constexpr auto m_TouchIndex = 0x350; // int32_t
	}

	namespace n_UParticleModuleKillBox { // : UParticleModuleKillBase
		constexpr auto LowerLeftCorner = 0x30; // FRawDistributionVector
		constexpr auto UpperRightCorner = 0x78; // FRawDistributionVector
		constexpr auto bAbsolute = 0xc0; // char : 1
		constexpr auto bKillInside = 0xc0; // char : 1
		constexpr auto bAxisAlignedAndFixedSize = 0xc0; // char : 1
	}

	namespace n_UMM_Party_LeftTab_Slot { // : UWidgetBase
		constexpr auto ETabType = 0x2f0; // EStageType_PartyLeftTab
		constexpr auto m_Img_Select = 0x2f8; // UMirImage*
		constexpr auto m_Txt_TabName = 0x300; // UMirTextBlock*
		constexpr auto m_Btn_Main = 0x308; // UMirButton*
		constexpr auto m_Effect_Selected = 0x310; // UGridPanel*
		constexpr auto m_Effect_Click = 0x318; // UEffectWidgetBase*
	}

	namespace n_UMM_Share_Channel_Slot { // : UWidgetBase
		constexpr auto m_Title_StringID = 0x2f0; // int32_t
		constexpr auto ShareChannelType = 0x2f4; // CHAT_CHANNEL_TYPE
		constexpr auto Txt_Title = 0x2f8; // UMirTextBlock*
		constexpr auto Btn_Slot = 0x300; // UMirButton*
	}

	namespace n_UMM_AchievementWidget { // : UWidgetBase
		constexpr auto Category = 0x2f8; // UMM_CommonVerticalTabSet*
		constexpr auto Btn_ReceiveAll = 0x300; // UMM_Common_Btn*
		constexpr auto m_ListView_AchList = 0x308; // UMirListView*
		constexpr auto ALL_RECIEVE_BTN_EFECT_ID = 0x310; // int32_t
		constexpr auto m_arAchSlotObj = 0x318; // TArray<UAchSlotObj*>
	}

	namespace n_UChannel { // : UObject
		constexpr auto Connection = 0x28; // UNetConnection*
	}

	namespace n_UMM_Dominion_Title_NormalList { // : UMM_Dominion_Title_ListBase
		constexpr auto m_pVertBox = 0x2e0; // UVerticalBox*
		constexpr auto m_pTxtTitle = 0x2e8; // UMirTextBlock*
	}

	namespace n_UMM_Occupation_Observer { // : UWidgetBase
		constexpr auto m_Txt_RemainTime = 0x300; // UMirTextBlock*
		constexpr auto m_Txt_Defence_Guild_Name = 0x308; // UMirTextBlock*
		constexpr auto m_Txt_Offence_Guild_Name = 0x310; // UMirTextBlock*
		constexpr auto m_GuildIcon_Defence = 0x318; // UMM_GuildIcon*
		constexpr auto m_GuildIcon_Offence = 0x320; // UMM_GuildIcon*
		constexpr auto m_Txt_Catapult_Count = 0x328; // UMirTextBlock*
		constexpr auto m_Txt_Gate_HP = 0x330; // UMirTextBlock*
		constexpr auto m_Txt_Target_Capture_HP = 0x338; // UMirTextBlock*
		constexpr auto m_Txt_Defence_Flag_Count = 0x340; // UMirTextBlock*
		constexpr auto m_Txt_Siege_Tower_Count = 0x348; // UMirTextBlock*
		constexpr auto m_Txt_Offence_Flag_Count = 0x350; // UMirTextBlock*
		constexpr auto m_Txt_ServerName = 0x358; // UMirTextBlock*
		constexpr auto m_KillLog_Defence = 0x360; // UMM_Occupation_Observer_KillLog*
		constexpr auto m_KillLog_Offence = 0x368; // UMM_Occupation_Observer_KillLog*
		constexpr auto m_Btn_Gate = 0x370; // UMirButton*
		constexpr auto m_Btn_Capture = 0x378; // UMirButton*
		constexpr auto m_SiegeObserver_HP = 0x380; // UMM_Occupation_Observer_TargetHP*
	}

	namespace n_UParticleModuleLocationPrimitiveSphere_Seeded { // : UParticleModuleLocationPrimitiveSphere
		constexpr auto RandomSeedInfo = 0xe0; // FParticleRandomSeedInfo
	}

	namespace n_UMediaSoundComponent { // : USynthComponent
		constexpr auto Channels = 0x650; // EMediaSoundChannels
		constexpr auto DynamicRateAdjustment = 0x654; // bool
		constexpr auto RateAdjustmentFactor = 0x658; // float
		constexpr auto RateAdjustmentRange = 0x65c; // FFloatRange
		constexpr auto MediaPlayer = 0x670; // UMediaPlayer*
	}

	namespace n_UMovieScene3DAttachTrack { // : UMovieScene3DConstraintTrack
		constexpr auto ConstraintSections = 0x58; // TArray<UMovieSceneSection*>
	}

	namespace n_UMM_EmotesWidget { // : UWidgetBase
		constexpr auto m_EmotesWrapBox = 0x2e0; // UWrapBox*
	}

	namespace n_UMM_Forge_OptionChange { // : UWidgetBase
		constexpr auto OptionSlotCount = 0x300; // int32_t
		constexpr auto OptionSlotCountEight = 0x304; // int32_t
		constexpr auto m_InvenForge = 0x308; // UMM_NewInventory_Forge*
		constexpr auto Btn_OptionList_Slot = 0x310; // UMM_Common_Btn_Symbol*
		constexpr auto Btn_OptionList_Slot_2 = 0x318; // UMM_Common_Btn_Symbol*
		constexpr auto Btn_Main = 0x320; // UMM_Common_Btn*
		constexpr auto img_cost = 0x328; // UMirImage*
		constexpr auto txt_cost = 0x330; // UMirTextBlock*
		constexpr auto Grid_Unselect = 0x338; // UPanelWidget*
		constexpr auto Grid_Select = 0x340; // UPanelWidget*
		constexpr auto Grid_AllSelectEffect = 0x348; // UPanelWidget*
		constexpr auto Slot_Target = 0x350; // UMM_Slot_Registered_Circle*
		constexpr auto Slot_Material = 0x358; // UMM_Slot_Material_Item*
		constexpr auto Slot_Material1 = 0x360; // UMM_Slot_Material_Item*
		constexpr auto Option_Now = 0x368; // TArray<UMM_AbilityState_Item*>
		constexpr auto Option_Now_2 = 0x378; // TArray<UMM_AbilityState_Item_Simple*>
		constexpr auto Txt_GuideTitle = 0x388; // UMirTextBlock*
		constexpr auto Txt_Guide = 0x390; // UMirRichTextBlock*
		constexpr auto Txt_Notice = 0x398; // UMirRichTextBlock*
		constexpr auto Txt_Notice_2 = 0x3a0; // UMirRichTextBlock*
		constexpr auto Txt_ItemNameTag = 0x3a8; // UMM_Common_Item_NameTag*
		constexpr auto Txt_ItemNameTag_2 = 0x3b0; // UMM_Common_Item_NameTag*
		constexpr auto Btn_OptionList = 0x3b8; // UMM_Common_Btn*
		constexpr auto Btn_OptionList_2 = 0x3c0; // UMM_Common_Btn*
		constexpr auto Btn_Tooltip = 0x3c8; // UMM_Common_ToolTipBtn*
		constexpr auto Canvers_Option1 = 0x3d0; // UMirCanvasPanel*
		constexpr auto Canvers_Option2 = 0x3d8; // UMirCanvasPanel*
		constexpr auto Popup_OptionList = 0x3e0; // UMM_Popup_RandomOptionList*
	}

	namespace n_UMM_B_Friend { // : UWidgetBase
		constexpr auto m_C_Tab = 0x2f0; // UMM_CommonHorizontalTabSet*
		constexpr auto m_Friend_Bottom = 0x2f8; // UMM_Friend_Bottom*
		constexpr auto m_Friend_List = 0x300; // UMM_Friend_List*
		constexpr auto m_C_Empty_Notice = 0x308; // UMM_Common_Board_Notice*
		constexpr auto m_Canvas_Search = 0x310; // UCanvasPanel*
		constexpr auto m_C_Btn_Find = 0x318; // UMM_Common_Btn_Symbol*
		constexpr auto m_EditableText_Find = 0x320; // UMirEditableText*
		constexpr auto m_SortListBtn = 0x328; // UMM_SortListBtn*
	}

	namespace n_UParticleModuleEventBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x29; // char : 1
		constexpr auto LODDuplicate = 0x29; // char : 1
		constexpr auto bSupportsRandomSeed = 0x29; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x29; // char : 1
		constexpr auto LODValidity = 0x2a; // char
	}

	namespace n_UMM_Popup_WantedRegist { // : UWidgetBase
		constexpr auto m_Btn_Close = 0x2e0; // UMM_Common_Btn_Symbol*
		constexpr auto m_Img_CharacterClass = 0x2e8; // UMirImage*
		constexpr auto m_Txt_CharacterName = 0x2f0; // UMirTextBlock*
		constexpr auto m_Btn_CharacterInfo = 0x2f8; // UMM_Common_Btn_Symbol*
		constexpr auto m_GuildIcon = 0x300; // UMM_GuildIcon*
		constexpr auto m_Txt_GuildName = 0x308; // UMirTextBlock*
		constexpr auto m_Img_WantedReward = 0x310; // UMirImage*
		constexpr auto m_Txt_WantedReward = 0x318; // UMirTextBlock*
		constexpr auto m_Btn_Keypad = 0x320; // UMM_Common_Btn_Symbol*
		constexpr auto m_RTxt_WantedRegist_Help_2 = 0x328; // UMirRichTextBlock*
		constexpr auto m_RTxt_WantedRegist_Help_3 = 0x330; // UMirRichTextBlock*
		constexpr auto m_Btn_WantedRegist = 0x338; // UMM_Common_Btn_Cost*
	}

	namespace n_UMovieSceneParticleParameterTrack { // : UMovieSceneNameableTrack
		constexpr auto Sections = 0x58; // TArray<UMovieSceneSection*>
	}

	namespace n_URadialIntMask { // : UFieldNodeInt
		constexpr auto Radius = 0xb0; // float
		constexpr auto Position = 0xb4; // FVector
		constexpr auto InteriorValue = 0xc0; // int32_t
		constexpr auto ExteriorValue = 0xc4; // int32_t
		constexpr auto SetMaskCondition = 0xc8; // ESetMaskConditionType
	}

	namespace n_USavePatchInfo { // : USaveGame
		constexpr auto m_MaxStep = 0x28; // int32_t
		constexpr auto m_PatchFileInfos = 0x30; // TArray<FPatchFileInfo>
		constexpr auto m_nDataTableVersion = 0x40; // int32_t
	}

	namespace n_UParticleModuleRotationOverLifetime { // : UParticleModuleRotationBase
		constexpr auto RotationOverLife = 0x30; // FRawDistributionFloat
		constexpr auto Scale = 0x60; // char : 1
	}

	namespace n_UAnimNotifyState_TimedParticleEffect { // : UAnimNotifyState
		constexpr auto PSTemplate = 0x30; // UParticleSystem*
		constexpr auto SocketName = 0x38; // FName
		constexpr auto LocationOffset = 0x40; // FVector
		constexpr auto RotationOffset = 0x4c; // FRotator
		constexpr auto bDestroyAtEnd = 0x58; // bool
	}

	namespace n_UMaterialExpressionStaticSwitchParameter { // : UMaterialExpressionStaticBoolParameter
		constexpr auto A = 0x60; // FExpressionInput
		constexpr auto B = 0x74; // FExpressionInput
	}

	namespace n_USynthComponentMonoWaveTable { // : USynthComponent
		constexpr auto OnTableAltered = 0x650; // FScriptMulticastDelegate
		constexpr auto OnNumTablesChanged = 0x660; // FScriptMulticastDelegate
		constexpr auto CurrentPreset = 0x670; // UMonoWaveTableSynthPreset*
	}

	namespace n_UInterpTrackFloatAnimBPParam { // : UInterpTrackFloatBase
		constexpr auto AnimBlueprintClass = 0x90; // UObject*
		constexpr auto AnimClass = 0x98; // UAnimInstance*
		constexpr auto ParamName = 0xa0; // FName
	}

	namespace n_AMM_FirstTutorialScript { // : AActor
		constexpr auto FirstQuestID = 0x238; // int32_t
		constexpr auto VirtualJoyStickTutorialQuestID = 0x23c; // int32_t
		constexpr auto QuestTrackerTutorialQuestID = 0x240; // int32_t
		constexpr auto NpcQuestMarkTutorialQuestID = 0x244; // int32_t
		constexpr auto HudHideTutorialQuestID = 0x248; // int32_t
		constexpr auto BattleTutorialPhaseID = 0x24c; // int32_t
		constexpr auto m_TutorialState = 0x254; // EFirstTutorialType
	}

	namespace n_UAIPerceptionComponent { // : UActorComponent
		constexpr auto SensesConfig = 0xb0; // TArray<UAISenseConfig*>
		constexpr auto DominantSense = 0xc0; // UAISense*
		constexpr auto AIOwner = 0xd8; // AAIController*
		constexpr auto OnPerceptionUpdated = 0x160; // FScriptMulticastDelegate
		constexpr auto OnTargetPerceptionUpdated = 0x170; // FScriptMulticastDelegate
	}

	namespace n_UEditableGameplayTagQueryExpression_NoExprMatch { // : UEditableGameplayTagQueryExpression
		constexpr auto Expressions = 0x28; // TArray<UEditableGameplayTagQueryExpression*>
	}

	namespace n_USlateVectorArtData { // : UObject
		constexpr auto VertexData = 0x28; // TArray<FSlateMeshVertex>
		constexpr auto IndexData = 0x38; // TArray<uint32_t>
		constexpr auto Material = 0x48; // UMaterialInterface*
		constexpr auto ExtentMin = 0x50; // FVector2D
		constexpr auto ExtentMax = 0x58; // FVector2D
	}

	namespace n_UMM_PopUp_Costume_CollectionList { // : UWidgetBase
		constexpr auto btn_close = 0x300; // UMM_Common_Btn_Symbol*
		constexpr auto Txt_Name = 0x308; // UMirTextBlock*
		constexpr auto ScrollBox_CollectionList = 0x310; // UMirScrollBox*
		constexpr auto CollectionSlotList = 0x318; // TArray<UMM_Slot_CostumeCollection*>
		constexpr auto m_MaxSlotCount = 0x328; // int32_t
		constexpr auto m_CurrentSlotCount = 0x32c; // int32_t
		constexpr auto m_CostumeParts = 0x330; // COSTUME_PARTS
	}

	namespace n_UAnimInstance { // : UObject
		constexpr auto CurrentSkeleton = 0x28; // USkeleton*
		constexpr auto RootMotionMode = 0x30; // ERootMotionMode
		constexpr auto bUseMultiThreadedAnimationUpdate = 0x31; // char : 1
		constexpr auto bUsingCopyPoseFromMesh = 0x31; // char : 1
		constexpr auto bQueueMontageEvents = 0x31; // char : 1
		constexpr auto OnMontageBlendingOut = 0x38; // FScriptMulticastDelegate
		constexpr auto OnMontageStarted = 0x48; // FScriptMulticastDelegate
		constexpr auto OnMontageEnded = 0x58; // FScriptMulticastDelegate
		constexpr auto OnAllMontageInstancesEnded = 0x68; // FScriptMulticastDelegate
		constexpr auto NotifyQueue = 0x100; // FAnimNotifyQueue
		constexpr auto ActiveAnimNotifyState = 0x170; // TArray<FAnimNotifyEvent>
	}

	namespace n_UMaterialExpressionDistanceFieldGradient { // : UMaterialExpression
		constexpr auto Position = 0x40; // FExpressionInput
	}

	namespace n_UMM_UserEvent_BattlePass { // : UWidgetBase
		constexpr auto STRING_ID_SEASON_END = 0x2f0; // int32_t
		constexpr auto m_Txt_Name = 0x2f8; // UMirTextBlock*
		constexpr auto m_Img_Thumb = 0x300; // UMirImage*
		constexpr auto m_WebBanner = 0x308; // UMM_UserEvent_WebBanner*
		constexpr auto m_Txt_Season_Schedule = 0x310; // UMirTextBlock*
		constexpr auto m_Txt_NextStep = 0x318; // UMirTextBlock*
		constexpr auto m_Prog_MissionPoint = 0x320; // UMirProgressBar*
		constexpr auto m_Txt_ProgMissionPoint = 0x328; // UMirTextBlock*
		constexpr auto m_WidgetSwitcher = 0x330; // UWidgetSwitcher*
		constexpr auto m_BattlePass_Menu_Btn = 0x338; // UMM_BattlePass_Menu_Btn* [0x2]
		constexpr auto m_BattlePass_Reward = 0x348; // UMM_BattlePass_Reward_List*
		constexpr auto m_BattlePass_Mission = 0x350; // UMM_BattlePass_Mission_List*
		constexpr auto m_Rtxt_Desc = 0x358; // UMirRichTextBlock*
		constexpr auto m_C_Btn_ToolTip = 0x360; // UMM_Common_ToolTipBtn*
	}

	namespace n_UMM_USerEvent_BP_Attendance { // : UWidgetBase
		constexpr auto STRING_ID_BTN_BUY = 0x2f0; // int32_t
		constexpr auto STRING_ID_BTN_ACTIVE = 0x2f4; // int32_t
		constexpr auto m_Txt_Name = 0x2f8; // UMirTextBlock*
		constexpr auto m_Img_Thumb = 0x300; // UMirImage*
		constexpr auto m_WebBanner = 0x308; // UMM_UserEvent_WebBanner*
		constexpr auto m_ScrollBox = 0x310; // UMirScrollBox*
		constexpr auto m_Txt_Season_Schedule = 0x318; // UMirTextBlock*
		constexpr auto m_Txt_Btn_Name1 = 0x320; // UMirTextBlock*
		constexpr auto m_Txt_Btn_Name2 = 0x328; // UMirTextBlock*
		constexpr auto m_Btn_Buy1 = 0x330; // UMirButton*
		constexpr auto m_Btn_Buy2 = 0x338; // UMirButton*
		constexpr auto m_Img_Indicator_1 = 0x340; // UMirImage*
		constexpr auto m_Img_Indicator_2 = 0x348; // UMirImage*
		constexpr auto m_C_Btn_ReceiveAll = 0x350; // UMM_Common_Btn*
	}

	namespace n_UBTDecorator_TimeLimit { // : UBTDecorator
		constexpr auto TimeLimit = 0x68; // float
	}

	namespace n_UFloatTextWidget { // : UWidgetBase
		constexpr auto WidgetSIze = 0x870; // FVector2D
		constexpr auto OverlapRandomOffsetMin = 0x878; // float
		constexpr auto OverlapRandomOffsetMax = 0x87c; // float
		constexpr auto Number_1 = 0x880; // FSlateBrush
		constexpr auto Number_2 = 0x908; // FSlateBrush
		constexpr auto Number_3 = 0x990; // FSlateBrush
		constexpr auto Number_4 = 0xa18; // FSlateBrush
		constexpr auto Number_5 = 0xaa0; // FSlateBrush
		constexpr auto Number_6 = 0xb28; // FSlateBrush
		constexpr auto Number_7 = 0xbb0; // FSlateBrush
		constexpr auto Number_8 = 0xc38; // FSlateBrush
		constexpr auto Number_9 = 0xcc0; // FSlateBrush
		constexpr auto Number_10 = 0xd48; // FSlateBrush
		constexpr auto ImageFont_Critical = 0xdd0; // FSlateBrush
		constexpr auto IconID_Critical = 0xe58; // int32_t
		constexpr auto ImageFont_Unbeatable = 0xe60; // FSlateBrush
		constexpr auto IconID_Unbeatable = 0xee8; // int32_t
		constexpr auto ImageFont_ImmuneDamage = 0xef0; // FSlateBrush
		constexpr auto IconID_ImmuneDamage = 0xf78; // int32_t
		constexpr auto ImageFont_Immortal = 0xf80; // FSlateBrush
		constexpr auto IconID_Immortal = 0x1008; // int32_t
		constexpr auto ImageFont_Dodge = 0x1010; // FSlateBrush
		constexpr auto IconID_Dodge = 0x1098; // int32_t
		constexpr auto ImageFont_Miss = 0x10a0; // FSlateBrush
		constexpr auto IconID_Miss = 0x1128; // int32_t
		constexpr auto ImageFont_Defense = 0x1130; // FSlateBrush
		constexpr auto IconID_Defense = 0x11b8; // int32_t
		constexpr auto ImageFont_Shield = 0x11c0; // FSlateBrush
		constexpr auto IconID_Shield = 0x1248; // int32_t
		constexpr auto ImageFont_Absorb = 0x1250; // FSlateBrush
		constexpr auto IconID_Absorb = 0x12d8; // int32_t
		constexpr auto ImageFont_ProtectPVP = 0x12e0; // FSlateBrush
		constexpr auto IconID_ProtectPVP = 0x1368; // int32_t
		constexpr auto ImageFont_Spirit = 0x1370; // FSlateBrush
		constexpr auto IconID_Spirit = 0x13f8; // int32_t
		constexpr auto ImageFont_SiegeGuard = 0x1400; // FSlateBrush
		constexpr auto IconID_SiegeGuard = 0x1488; // int32_t
		constexpr auto Offset_My_Damage = 0x148c; // FVector2D
		constexpr auto Offset_My_Unbeatable = 0x1494; // FVector2D
		constexpr auto Offset_My_ImmuneDamage = 0x149c; // FVector2D
		constexpr auto Offset_My_Immortal = 0x14a4; // FVector2D
		constexpr auto Offset_My_Dodge = 0x14ac; // FVector2D
		constexpr auto Offset_My_Shield = 0x14b4; // FVector2D
		constexpr auto Offset_My_Absorb = 0x14bc; // FVector2D
		constexpr auto Offset_My_Gain = 0x14c4; // FVector2D
		constexpr auto Offset_My_GainHP = 0x14cc; // FVector2D
		constexpr auto Offset_My_GainMP = 0x14d4; // FVector2D
		constexpr auto Offset_My_GainSP = 0x14dc; // FVector2D
		constexpr auto Offset_My_Lost = 0x14e4; // FVector2D
		constexpr auto Offset_My_LostMP = 0x14ec; // FVector2D
		constexpr auto Offset_My_LostSP = 0x14f4; // FVector2D
		constexpr auto Offset_My_ProtectPVP = 0x14fc; // FVector2D
		constexpr auto Offset_My_SiegeGuard = 0x1504; // FVector2D
		constexpr auto Offset_Other_Damage = 0x150c; // FVector2D
		constexpr auto Offset_Other_Unbeatable = 0x1514; // FVector2D
		constexpr auto Offset_Other_ImmuneDamage = 0x151c; // FVector2D
		constexpr auto Offset_Other_Immortal = 0x1524; // FVector2D
		constexpr auto Offset_Other_Dodge = 0x152c; // FVector2D
		constexpr auto Offset_Other_Shield = 0x1534; // FVector2D
		constexpr auto Offset_Other_Absorb = 0x153c; // FVector2D
		constexpr auto Offset_Other_Gain = 0x1544; // FVector2D
		constexpr auto Offset_Other_GainHP = 0x154c; // FVector2D
		constexpr auto Offset_Other_GainMP = 0x1554; // FVector2D
		constexpr auto Offset_Other_GainSP = 0x155c; // FVector2D
		constexpr auto Offset_Other_Lost = 0x1564; // FVector2D
		constexpr auto Offset_Other_LostMP = 0x156c; // FVector2D
		constexpr auto Offset_Other_LostSP = 0x1574; // FVector2D
		constexpr auto Offset_Other_ProtectPVP = 0x157c; // FVector2D
		constexpr auto Offset_Other_SiegeGuard = 0x1584; // FVector2D
		constexpr auto Offset_LinkAttack = 0x158c; // FVector2D
		constexpr auto PlusMinus_Plus = 0x1598; // FSlateBrush
		constexpr auto PlusMinus_Minus = 0x1620; // FSlateBrush
		constexpr auto WidgetAnim_My_Damage = 0x16a8; // UWidgetAnimation*
		constexpr auto WidgetAnim_My_Smite = 0x16b0; // UWidgetAnimation*
		constexpr auto WidgetAnim_My_Critical = 0x16b8; // UWidgetAnimation*
		constexpr auto WidgetAnim_My_TextFont = 0x16c0; // UWidgetAnimation*
		constexpr auto WidgetAnim_My_Gain = 0x16c8; // UWidgetAnimation*
		constexpr auto WidgetAnim_My_Lost = 0x16d0; // UWidgetAnimation*
		constexpr auto WidgetAnim_Other_Damage = 0x16d8; // UWidgetAnimation*
		constexpr auto WidgetAnim_Other_Smite = 0x16e0; // UWidgetAnimation*
		constexpr auto WidgetAnim_Other_Critical = 0x16e8; // UWidgetAnimation*
		constexpr auto WidgetAnim_Other_TextFont = 0x16f0; // UWidgetAnimation*
		constexpr auto WidgetAnim_Other_Gain = 0x16f8; // UWidgetAnimation*
		constexpr auto WidgetAnim_Other_Lost = 0x1700; // UWidgetAnimation*
		constexpr auto m_pImg_100001 = 0x1708; // UImage*
		constexpr auto m_pImg_10001 = 0x1710; // UImage*
		constexpr auto m_pImg_1001 = 0x1718; // UImage*
		constexpr auto m_pImg_101 = 0x1720; // UImage*
		constexpr auto m_pImg_11 = 0x1728; // UImage*
		constexpr auto m_pImg_2 = 0x1730; // UImage*
		constexpr auto m_pImg_Txt = 0x1738; // UImage*
		constexpr auto m_pImg_PlusMinus = 0x1740; // UImage*
		constexpr auto m_pImg_Blood = 0x1748; // UImage*
		constexpr auto BaseGridPanel = 0x1750; // UGridPanel*
	}

	namespace n_UMultiLineEditableTextBox { // : UTextLayoutWidget
		constexpr auto Text = 0x128; // FText
		constexpr auto HintText = 0x140; // FText
		constexpr auto HintTextDelegate = 0x158; // DelegateProperty
		constexpr auto WidgetStyle = 0x168; // FEditableTextBoxStyle
		constexpr auto TextStyle = 0x958; // FTextBlockStyle
		constexpr auto bIsReadOnly = 0xbc0; // bool
		constexpr auto AllowContextMenu = 0xbc1; // bool
		constexpr auto VirtualKeyboardOptions = 0xbc2; // FVirtualKeyboardOptions
		constexpr auto VirtualKeyboardDismissAction = 0xbc3; // EVirtualKeyboardDismissAction
		constexpr auto Style = 0xbc8; // USlateWidgetStyleAsset*
		constexpr auto Font = 0xbd0; // FSlateFontInfo
		constexpr auto ForegroundColor = 0xc20; // FLinearColor
		constexpr auto BackgroundColor = 0xc30; // FLinearColor
		constexpr auto ReadOnlyForegroundColor = 0xc40; // FLinearColor
		constexpr auto OnTextChanged = 0xc50; // FScriptMulticastDelegate
		constexpr auto OnTextCommitted = 0xc60; // FScriptMulticastDelegate
	}

	namespace n_UAnimBlueprintGeneratedClass { // : UBlueprintGeneratedClass
		constexpr auto BakedStateMachines = 0x308; // TArray<FBakedAnimationStateMachine>
		constexpr auto TargetSkeleton = 0x318; // USkeleton*
		constexpr auto AnimNotifies = 0x320; // TArray<FAnimNotifyEvent>
		constexpr auto OrderedSavedPoseIndicesMap = 0x330; // TMap<FName, FCachedPoseIndices>
		constexpr auto SyncGroupNames = 0x400; // TArray<FName>
		constexpr auto EvaluateGraphExposedInputs = 0x410; // TArray<FExposedValueHandler>
		constexpr auto GraphAssetPlayerInformation = 0x420; // TMap<FName, FGraphAssetPlayerInformation>
		constexpr auto GraphBlendOptions = 0x470; // TMap<FName, FAnimGraphBlendOptions>
	}

	namespace n_UMaterialExpressionFontSampleParameter { // : UMaterialExpressionFontSample
		constexpr auto ParameterName = 0x50; // FName
		constexpr auto ExpressionGUID = 0x58; // FGuid
		constexpr auto Group = 0x68; // FName
	}

	namespace n_UBuffInfoListWidget { // : UWidgetBase
		constexpr auto m_pParentWidget = 0x260; // UWidgetBase*
		constexpr auto m_arChildWidget = 0x268; // TArray<TWeakObjectPtr<UWidgetBase>>
		constexpr auto m_arMirTextBlock = 0x280; // TArray<TWeakObjectPtr<UMirTextBlock>>
		constexpr auto m_arMirRichTextBlock = 0x290; // TArray<TWeakObjectPtr<UMirRichTextBlock>>
		constexpr auto m_arMirEditableText = 0x2a0; // TArray<TWeakObjectPtr<UMirEditableText>>
		constexpr auto m_arMirImage = 0x2b0; // TArray<TWeakObjectPtr<UMirImage>>
	}

	namespace n_UMM_B_Goods { // : UWidgetBase
		constexpr auto m_CanScreen = 0x2e0; // UCanvasPanel*
		constexpr auto m_Btn_Return = 0x2e8; // UMirButton*
		constexpr auto m_arGoodsTab = 0x2f0; // UMM_Goods_Tab* [0x3]
		constexpr auto m_arGoodsSlot = 0x308; // UMM_Goods_Slot* [0x3]
		constexpr auto m_Goods_Detail = 0x320; // UMM_Goods_Detail*
		constexpr auto m_CB_Close = 0x328; // UMM_Common_Btn_Symbol*
		constexpr auto m_CB_ToggleDetail = 0x330; // UMM_Common_Btn_Symbol*
		constexpr auto m_Btn_Screen = 0x338; // UMirButton*
		constexpr auto m_Spc_ContentsSpace = 0x340; // USpacer*
		constexpr auto m_pBtnGuide = 0x348; // UMM_Common_GuideBtn*
	}

	namespace n_UMM_ItemResult_AbilityInfo { // : UWidgetBase
		constexpr auto m_pParentWidget = 0x260; // UWidgetBase*
		constexpr auto m_arChildWidget = 0x268; // TArray<TWeakObjectPtr<UWidgetBase>>
		constexpr auto m_arMirTextBlock = 0x280; // TArray<TWeakObjectPtr<UMirTextBlock>>
		constexpr auto m_arMirRichTextBlock = 0x290; // TArray<TWeakObjectPtr<UMirRichTextBlock>>
		constexpr auto m_arMirEditableText = 0x2a0; // TArray<TWeakObjectPtr<UMirEditableText>>
		constexpr auto m_arMirImage = 0x2b0; // TArray<TWeakObjectPtr<UMirImage>>
	}

	namespace n_UBTTask_DisableCounterAttack { // : UBTTaskNode
		constexpr auto ReturnResult = 0x70; // EBTNodeResult
	}

	namespace n_ALightmassImportanceVolume { // : AVolume
		constexpr auto BrushType = 0x218; // EBrushType
		constexpr auto BrushColor = 0x21c; // FColor
		constexpr auto PolyFlags = 0x220; // int32_t
		constexpr auto bColored = 0x224; // char : 1
		constexpr auto bSolidWhenSelected = 0x224; // char : 1
		constexpr auto bPlaceableFromClassBrowser = 0x224; // char : 1
		constexpr auto bNotForClientOrServer = 0x224; // char : 1
		constexpr auto Brush = 0x228; // UModel*
		constexpr auto BrushComponent = 0x230; // UBrushComponent*
		constexpr auto bInManipulation = 0x238; // char : 1
		constexpr auto SavedSelections = 0x240; // TArray<FGeomSelection>
	}

	namespace n_ULandscapeMeshCollisionComponent { // : ULandscapeHeightfieldCollisionComponent
		constexpr auto MeshGuid = 0x4f8; // FGuid
	}

	namespace n_UMaterialExpressionPreviousFrameSwitch { // : UMaterialExpression
		constexpr auto CurrentFrame = 0x40; // FExpressionInput
		constexpr auto PreviousFrame = 0x54; // FExpressionInput
	}

	namespace n_UMaterialExpressionTransformPosition { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto TransformSourceType = 0x54; // EMaterialPositionTransformSource
		constexpr auto TransformType = 0x55; // EMaterialPositionTransformSource
	}

	namespace n_UAISenseConfig_Damage { // : UAISenseConfig
		constexpr auto Implementation = 0x48; // UAISense_Damage*
	}

	namespace n_UMM_Costume_CombatPoint { // : UWidgetBase
		constexpr auto m_C_TxtCombatPoint = 0x300; // UMirTextBlock*
		constexpr auto m_C_BtnDetail = 0x308; // UMM_Common_Btn*
	}

	namespace n_UEditableMesh { // : UObject
		constexpr auto Adapters = 0x3b8; // TArray<UEditableMeshAdapter*>
		constexpr auto TextureCoordinateCount = 0x3d0; // int32_t
		constexpr auto PendingCompactCounter = 0x51c; // int32_t
		constexpr auto SubdivisionCount = 0x520; // int32_t
	}

	namespace n_UMM_NewInventoryUnsealing { // : UMM_NewInventory_Base
		constexpr auto m_InvenTab = 0x2e8; // UMM_NewInventoryTab*
		constexpr auto m_Inven = 0x2f0; // UMM_NewInventory*
		constexpr auto m_pNoticeBox = 0x2f8; // UHorizontalBox*
		constexpr auto m_pTxtNotice = 0x300; // UMirTextBlock*
		constexpr auto m_pCheckOnOff = 0x308; // UMirCheckBox*
	}

	namespace n_UAnimSequencerInstance { // : UAnimCustomInstance
		constexpr auto CurrentSkeleton = 0x28; // USkeleton*
		constexpr auto RootMotionMode = 0x30; // ERootMotionMode
		constexpr auto bUseMultiThreadedAnimationUpdate = 0x31; // char : 1
		constexpr auto bUsingCopyPoseFromMesh = 0x31; // char : 1
		constexpr auto bQueueMontageEvents = 0x31; // char : 1
		constexpr auto OnMontageBlendingOut = 0x38; // FScriptMulticastDelegate
		constexpr auto OnMontageStarted = 0x48; // FScriptMulticastDelegate
		constexpr auto OnMontageEnded = 0x58; // FScriptMulticastDelegate
		constexpr auto OnAllMontageInstancesEnded = 0x68; // FScriptMulticastDelegate
		constexpr auto NotifyQueue = 0x100; // FAnimNotifyQueue
		constexpr auto ActiveAnimNotifyState = 0x170; // TArray<FAnimNotifyEvent>
	}

	namespace n_AInstancedFoliageActor { // : AActor
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto bHidden = 0x58; // char : 1
		constexpr auto bNetTemporary = 0x58; // char : 1
		constexpr auto bNetStartup = 0x58; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x58; // char : 1
		constexpr auto bAlwaysRelevant = 0x58; // char : 1
		constexpr auto bReplicateMovement = 0x58; // char : 1
		constexpr auto bTearOff = 0x58; // char : 1
		constexpr auto bExchangedRoles = 0x58; // char : 1
		constexpr auto bNetLoadOnClient = 0x59; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x59; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x59; // char : 1
		constexpr auto bRelevantForLevelBounds = 0x59; // char : 1
		constexpr auto bReplayRewindable = 0x59; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x59; // char : 1
		constexpr auto bAutoDestroyWhenFinished = 0x59; // char : 1
		constexpr auto bBlockInput = 0x59; // char : 1
		constexpr auto bCanBeDamaged = 0x5a; // char : 1
		constexpr auto bCollideWhenPlacing = 0x5a; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x5a; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x5a; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x5a; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x5a; // char : 1
		constexpr auto bIsEditorOnlyActor = 0x5a; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x5a; // char : 1
		constexpr auto bReplicates = 0x5b; // char : 1
		constexpr auto bCanBeInCluster = 0x5b; // char : 1
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x5b; // char : 1
		constexpr auto bActorEnableCollision = 0x5c; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x5c; // char : 1
		constexpr auto UpdateOverlapsMethodDuringLevelStreaming = 0x5d; // EActorUpdateOverlapsMethod
		constexpr auto DefaultUpdateOverlapsMethodDuringLevelStreaming = 0x5e; // EActorUpdateOverlapsMethod
		constexpr auto RemoteRole = 0x5f; // ENetRole
		constexpr auto ReplicatedMovement = 0x60; // FRepMovement
		constexpr auto InitialLifeSpan = 0x94; // float
		constexpr auto CustomTimeDilation = 0x98; // float
		constexpr auto AttachmentReplication = 0xa0; // FRepAttachment
		constexpr auto Owner = 0xe0; // AActor*
		constexpr auto NetDriverName = 0xe8; // FName
		constexpr auto Role = 0xf0; // ENetRole
		constexpr auto NetDormancy = 0xf1; // ENetDormancy
		constexpr auto SpawnCollisionHandlingMethod = 0xf2; // ESpawnActorCollisionHandlingMethod
		constexpr auto AutoReceiveInput = 0xf3; // EAutoReceiveInput
		constexpr auto InputPriority = 0xf4; // int32_t
		constexpr auto InputComponent = 0xf8; // UInputComponent*
		constexpr auto NetCullDistanceSquared = 0x100; // float
		constexpr auto NetTag = 0x104; // int32_t
		constexpr auto NetUpdateFrequency = 0x108; // float
		constexpr auto MinNetUpdateFrequency = 0x10c; // float
		constexpr auto NetPriority = 0x110; // float
		constexpr auto Instigator = 0x118; // APawn*
		constexpr auto Children = 0x120; // TArray<AActor*>
		constexpr auto RootComponent = 0x130; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x138; // TArray<AMatineeActor*>
		constexpr auto Layers = 0x150; // TArray<FName>
		constexpr auto ParentComponent = 0x160; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto Tags = 0x168; // TArray<FName>
		constexpr auto OnTakeAnyDamage = 0x178; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x179; // FScriptMulticastDelegate
		constexpr auto OnTakeRadialDamage = 0x17a; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x17b; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x17c; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x17d; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x17e; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x17f; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x180; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x181; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x182; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x183; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x184; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x185; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x186; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x187; // FScriptMulticastDelegate
		constexpr auto InstanceComponents = 0x1e8; // TArray<UActorComponent*>
		constexpr auto BlueprintCreatedComponents = 0x1f8; // TArray<UActorComponent*>
	}

	namespace n_UMM_ServerRelocationGroup_Global { // : UWidgetBase
		constexpr auto m_Txt_ServerGroup = 0x2e0; // UMirTextBlock*
		constexpr auto m_Btn_Fold = 0x2e8; // UMirButton*
		constexpr auto m_CheckBox_Flod = 0x2f0; // UMirCheckBox*
		constexpr auto m_Wrap_ServerList = 0x2f8; // UWrapBox*
	}

	namespace n_ULineBatchComponent { // : UPrimitiveComponent
		constexpr auto MinDrawDistance = 0x228; // float
		constexpr auto LDMaxDrawDistance = 0x22c; // float
		constexpr auto CachedMaxDrawDistance = 0x230; // float
		constexpr auto DepthPriorityGroup = 0x234; // ESceneDepthPriorityGroup
		constexpr auto ViewOwnerDepthPriorityGroup = 0x235; // ESceneDepthPriorityGroup
		constexpr auto IndirectLightingCacheQuality = 0x236; // EIndirectLightingCacheQuality
		constexpr auto LightmapType = 0x237; // ELightmapType
		constexpr auto bUseMaxLODAsImposter = 0x238; // char : 1
		constexpr auto CachedBoundsSphereDiameter = 0x23c; // float
		constexpr auto bBatchImpostersAsInstances = 0x240; // char : 1
		constexpr auto bNeverDistanceCull = 0x240; // char : 1
		constexpr auto bAlwaysCreatePhysicsState = 0x240; // char : 1
		constexpr auto bGenerateOverlapEvents = 0x240; // char : 1
		constexpr auto bMultiBodyOverlap = 0x241; // char : 1
		constexpr auto bTraceComplexOnMove = 0x241; // char : 1
		constexpr auto bReturnMaterialOnMove = 0x241; // char : 1
		constexpr auto bUseViewOwnerDepthPriorityGroup = 0x241; // char : 1
		constexpr auto bAllowCullDistanceVolume = 0x241; // char : 1
		constexpr auto bHasMotionBlurVelocityMeshes = 0x241; // char : 1
		constexpr auto bVisibleInReflectionCaptures = 0x241; // char : 1
		constexpr auto bVisibleInRayTracing = 0x241; // char : 1
		constexpr auto bRenderInMainPass = 0x242; // char : 1
		constexpr auto bRenderInDepthPass = 0x242; // char : 1
		constexpr auto bReceivesDecals = 0x242; // char : 1
		constexpr auto bOwnerNoSee = 0x242; // char : 1
		constexpr auto bOnlyOwnerSee = 0x242; // char : 1
		constexpr auto bTreatAsBackgroundForOcclusion = 0x242; // char : 1
		constexpr auto bUseAsOccluder = 0x242; // char : 1
		constexpr auto bSelectable = 0x242; // char : 1
		constexpr auto bForceMipStreaming = 0x243; // char : 1
		constexpr auto bHasPerInstanceHitProxies = 0x243; // char : 1
		constexpr auto CastShadow = 0x243; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x243; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x243; // char : 1
		constexpr auto bCastDynamicShadow = 0x243; // char : 1
		constexpr auto bCastStaticShadow = 0x243; // char : 1
		constexpr auto bCastVolumetricTranslucentShadow = 0x243; // char : 1
		constexpr auto bSelfShadowOnly = 0x244; // char : 1
		constexpr auto bCastFarShadow = 0x244; // char : 1
		constexpr auto bCastInsetShadow = 0x244; // char : 1
		constexpr auto bCastCinematicShadow = 0x244; // char : 1
		constexpr auto bCastHiddenShadow = 0x244; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x244; // char : 1
		constexpr auto bLightAsIfStatic = 0x244; // char : 1
		constexpr auto bLightAttachmentsAsGroup = 0x244; // char : 1
		constexpr auto bExcludeFromLightAttachmentGroup = 0x245; // char : 1
		constexpr auto bReceiveMobileCSMShadows = 0x245; // char : 1
		constexpr auto bSingleSampleShadowFromStationaryLights = 0x245; // char : 1
		constexpr auto bIgnoreRadialImpulse = 0x245; // char : 1
		constexpr auto bIgnoreRadialForce = 0x245; // char : 1
		constexpr auto bApplyImpulseOnDamage = 0x245; // char : 1
		constexpr auto bReplicatePhysicsToAutonomousProxy = 0x245; // char : 1
		constexpr auto AlwaysLoadOnClient = 0x245; // char : 1
		constexpr auto AlwaysLoadOnServer = 0x246; // char : 1
		constexpr auto bUseEditorCompositing = 0x246; // char : 1
		constexpr auto bRenderCustomDepth = 0x246; // char : 1
		constexpr auto bHasCustomNavigableGeometry = 0x247; // EHasCustomNavigableGeometry
		constexpr auto CanCharacterStepUpOn = 0x249; // ECanBeCharacterBase
		constexpr auto LightingChannels = 0x24a; // FLightingChannels
		constexpr auto CustomDepthStencilWriteMask = 0x24b; // ERendererStencilMask
		constexpr auto CustomDepthStencilValue = 0x24c; // int32_t
		constexpr auto CustomPrimitiveData = 0x250; // FCustomPrimitiveData
		constexpr auto TranslucencySortPriority = 0x260; // int32_t
		constexpr auto VisibilityId = 0x264; // int32_t
		constexpr auto bIgnoreOcclusionVolume = 0x268; // char : 1
		constexpr auto OcclusionVolumeId = 0x26c; // int32_t
		constexpr auto RuntimeVirtualTextures = 0x270; // TArray<URuntimeVirtualTexture*>
		constexpr auto VirtualTextureLodBias = 0x280; // uint8_t
		constexpr auto VirtualTextureCullMips = 0x281; // uint8_t
		constexpr auto VirtualTextureMinCoverage = 0x282; // uint8_t
		constexpr auto VirtualTextureRenderPassType = 0x283; // ERuntimeVirtualTextureMainPassType
		constexpr auto LpvBiasMultiplier = 0x288; // float
		constexpr auto BoundsScale = 0x294; // float
		constexpr auto MoveIgnoreActors = 0x2a8; // TArray<AActor*>
		constexpr auto MoveIgnoreComponents = 0x2b8; // TArray<UPrimitiveComponent*>
		constexpr auto BodyInstance = 0x2d8; // FBodyInstance
		constexpr auto OnComponentHit = 0x3e8; // FScriptMulticastDelegate
		constexpr auto OnComponentBeginOverlap = 0x3e9; // FScriptMulticastDelegate
		constexpr auto OnComponentEndOverlap = 0x3ea; // FScriptMulticastDelegate
		constexpr auto OnComponentWake = 0x3eb; // FScriptMulticastDelegate
		constexpr auto OnComponentSleep = 0x3ec; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x3ee; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x3ef; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x3f0; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x3f1; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x3f2; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x3f3; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x3f4; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x3f5; // FScriptMulticastDelegate
		constexpr auto LODParentPrimitive = 0x410; // UPrimitiveComponent*
	}

	namespace n_UGhostTrailMeshData { // : UObject
		constexpr auto BaseStaticMeshComponents = 0x28; // TArray<UStaticMeshComponent*>
		constexpr auto GhostStaticMeshComponents = 0x38; // TArray<UStaticMeshComponent*>
		constexpr auto BaseSkeletalMeshComponents = 0x48; // TArray<USkeletalMeshComponent*>
		constexpr auto GhostPoseableMeshComponents = 0x58; // TArray<UPoseableMeshComponent*>
		constexpr auto MasterSkeletalMeshComponents = 0x68; // TArray<USkeletalMeshComponent*>
		constexpr auto MIDArray = 0x78; // TArray<UMaterialInstanceDynamic*>
	}

	namespace n_UCameraModifier_CameraShake { // : UCameraModifier
		constexpr auto ActiveShakes = 0x48; // TArray<UCameraShake*>
		constexpr auto ExpiredPooledShakesMap = 0x58; // TMap<UCameraShake*, FPooledCameraShakes>
		constexpr auto SplitScreenShakeScale = 0xa8; // float
	}

	namespace n_UMaterialExpressionSine { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Period = 0x54; // float
	}

	namespace n_ATranslucentStaticMeshActor { // : AStaticMeshActor
		constexpr auto StaticMeshComponent = 0x218; // UStaticMeshComponent*
		constexpr auto bStaticMeshReplicateMovement = 0x220; // bool
		constexpr auto NavigationGeometryGatheringMode = 0x221; // ENavDataGatheringMode
	}

	namespace n_UMM_PopUp_Building { // : UWidgetBase
		constexpr auto m_Txt_Title = 0x2f0; // UMirTextBlock*
		constexpr auto m_BtnClose = 0x2f8; // UMM_Common_Btn_Symbol*
		constexpr auto m_BtnDetail = 0x300; // UMM_Common_Btn_Symbol*
		constexpr auto m_Txt_Step = 0x308; // UMirTextBlock*
		constexpr auto m_Img_StepArrow = 0x310; // UMirImage*
		constexpr auto m_Txt_NextStep = 0x318; // UMirTextBlock*
		constexpr auto m_Img_Building = 0x320; // UMirImage*
		constexpr auto m_Img_Combat = 0x328; // UMirImage*
		constexpr auto m_Txt_Combat = 0x330; // UMirTextBlock*
		constexpr auto m_Img_CombatArrow = 0x338; // UMirImage*
		constexpr auto m_Txt_NextCombat = 0x340; // UMirTextBlock*
		constexpr auto m_Txt_PetEffectTitle = 0x348; // UMirTextBlock*
		constexpr auto m_Txt_PetEffect = 0x350; // UMirRichTextBlock*
		constexpr auto m_Txt_BuildingEffectTitle = 0x358; // UMirTextBlock*
		constexpr auto m_Panel_Effects = 0x360; // TArray<UPanelWidget*>
		constexpr auto m_Txt_Effects = 0x370; // TArray<UMirTextBlock*>
		constexpr auto m_Txt_EffectValues = 0x380; // TArray<UMirTextBlock*>
		constexpr auto m_Txt_NextEffectValues = 0x390; // TArray<UMirTextBlock*>
		constexpr auto m_Txt_ConditionTitle = 0x3a0; // UMirTextBlock*
		constexpr auto m_Panel_Conditions = 0x3a8; // UPanelWidget*
		constexpr auto m_OpenConditions = 0x3b0; // TArray<UMM_PopUp_BuildingList*>
		constexpr auto m_Panel_BuildingDesc = 0x3c0; // UPanelWidget*
		constexpr auto m_Txt_BuildingDescTitle = 0x3c8; // UMirTextBlock*
		constexpr auto m_Txt_BuildingDesc = 0x3d0; // UMirRichTextBlock*
		constexpr auto m_Panel_MaxStepUp = 0x3d8; // UPanelWidget*
		constexpr auto m_Ntc_MaxStep = 0x3e0; // UMM_Common_Board_Notice*
		constexpr auto m_Panel_Check = 0x3e8; // UPanelWidget*
		constexpr auto m_Btn_Check = 0x3f0; // UMM_Common_Btn*
		constexpr auto m_Panel_Goods = 0x3f8; // UPanelWidget*
		constexpr auto m_Btn_Request = 0x400; // UMM_Common_Btn*
		constexpr auto m_Panel_ArrGoods = 0x408; // TArray<UPanelWidget*>
		constexpr auto m_Img_Goods = 0x418; // TArray<UMirImage*>
		constexpr auto m_Txt_Goods = 0x428; // TArray<UMirTextBlock*>
		constexpr auto m_Switcher = 0x438; // UWidgetSwitcher*
		constexpr auto m_HorizontalBoxInfo = 0x440; // UHorizontalBox*
		constexpr auto m_OpenAni = 0x448; // UWidgetAnimation*
		constexpr auto m_CloseAni = 0x450; // UWidgetAnimation*
		constexpr auto m_MaxStepStr = 0x458; // int32_t
		constexpr auto m_NotConditionStr = 0x45c; // int32_t
		constexpr auto m_MakeLvStr = 0x460; // int32_t
		constexpr auto m_OpenStr = 0x464; // int32_t
		constexpr auto m_CheckStr = 0x468; // int32_t
		constexpr auto m_PercentFormatStrID = 0x46c; // int32_t
		constexpr auto m_StepUpStrID = 0x470; // int32_t
		constexpr auto m_BuildingEffectStrID = 0x474; // int32_t
	}

	namespace n_UBTTask_RecoverAutoBattleState { // : UBTTaskNode
		constexpr auto ReturnResult = 0x70; // EBTNodeResult
	}

	namespace n_AAudioVolume { // : AVolume
		constexpr auto Priority = 0x250; // float
		constexpr auto bEnabled = 0x254; // char : 1
		constexpr auto Settings = 0x258; // FReverbSettings
		constexpr auto AmbientZoneSettings = 0x278; // FInteriorSettings
	}

	namespace n_UGameplayTagsSettings { // : UGameplayTagsList
		constexpr auto ImportTagsFromConfig = 0x48; // bool
		constexpr auto WarnOnInvalidTags = 0x49; // bool
		constexpr auto FastReplication = 0x4a; // bool
		constexpr auto InvalidTagCharacters = 0x50; // FString
		constexpr auto CategoryRemapping = 0x60; // TArray<FGameplayTagCategoryRemap>
		constexpr auto GameplayTagTableList = 0x70; // TArray<FSoftObjectPath>
		constexpr auto GameplayTagRedirects = 0x80; // TArray<FGameplayTagRedirect>
		constexpr auto CommonlyReplicatedTags = 0x90; // TArray<FName>
		constexpr auto NumBitsForContainerSize = 0xa0; // int32_t
		constexpr auto NetIndexFirstBitSegment = 0xa4; // int32_t
		constexpr auto RestrictedConfigFiles = 0xa8; // TArray<FRestrictedConfigInfo>
	}

	namespace n_UVectorField { // : UObject
		constexpr auto Bounds = 0x28; // FBox
		constexpr auto Intensity = 0x44; // float
	}

	namespace n_UAnimSharingAdditiveInstance { // : UAnimInstance
		constexpr auto BaseComponent = 0x268; // TWeakObjectPtr<USkeletalMeshComponent>
		constexpr auto AdditiveAnimation = 0x270; // TWeakObjectPtr<UAnimSequence>
		constexpr auto Alpha = 0x278; // float
		constexpr auto bStateBool = 0x27c; // bool
	}

	namespace n_UTwitterIntegrationBase { // : UPlatformInterfaceBase
		constexpr auto AllDelegates = 0x28; // TArray<FDelegateArray>
	}

	namespace n_UMissionFailedWidget { // : UWidgetBase
		constexpr auto m_StartAni = 0x2e0; // UWidgetAnimation*
		constexpr auto WaitSeconds = 0x2e8; // float
	}

	namespace n_UMM_PopUp_InventoryExtend { // : UWidgetBase
		constexpr auto m_InputSlider = 0x2f8; // UMM_Item_Make_Slider*
		constexpr auto m_CB_Cancel = 0x300; // UMM_Common_Btn*
		constexpr auto m_CB_Buy = 0x308; // UMM_Common_Btn_Cost*
		constexpr auto m_CB_Close = 0x310; // UMM_Common_Btn_Symbol*
		constexpr auto m_RTxt_Notice = 0x318; // UMirRichTextBlock*
		constexpr auto m_Txt_Title = 0x320; // UMirTextBlock*
		constexpr auto m_C_Btn_ToolTip = 0x328; // UMM_Common_ToolTipBtn*
	}

	namespace n_UConnectionCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto OnFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_UMM_UIShopCashBagSlot { // : UWidgetBase
		constexpr auto mBtnMain = 0x2e0; // UMM_Common_Btn*
		constexpr auto mImgIcon = 0x2e8; // UMirImage*
		constexpr auto mTxtName = 0x2f0; // UMirTextBlock*
	}

	namespace n_UMM_UI_Drag { // : UWidgetBase
		constexpr auto m_PostionType = 0x2e0; // ETouchPositionType
		constexpr auto m_DragType = 0x2e1; // EDragPosType
		constexpr auto OnClicked = 0x2e8; // FScriptMulticastDelegate
		constexpr auto OnDrag = 0x2f8; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x308; // FScriptMulticastDelegate
	}

	namespace n_UMaterialExpressionArctangentFast { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UMovieSceneAudioTrack { // : UMovieSceneNameableTrack
		constexpr auto AudioSections = 0x58; // TArray<UMovieSceneSection*>
	}

	namespace n_UMovieSceneCameraAnimSection { // : UMovieSceneSection
		constexpr auto AnimData = 0xe0; // FMovieSceneCameraAnimSectionData
		constexpr auto CameraAnim = 0x100; // UCameraAnim*
		constexpr auto PlayRate = 0x108; // float
		constexpr auto PlayScale = 0x10c; // float
		constexpr auto BlendInTime = 0x110; // float
		constexpr auto BlendOutTime = 0x114; // float
		constexpr auto bLooping = 0x118; // bool
	}

	namespace n_UEditableGameplayTagQueryExpression_AnyExprMatch { // : UEditableGameplayTagQueryExpression
		constexpr auto Expressions = 0x28; // TArray<UEditableGameplayTagQueryExpression*>
	}

	namespace n_UParticleModuleBeamBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x29; // char : 1
		constexpr auto LODDuplicate = 0x29; // char : 1
		constexpr auto bSupportsRandomSeed = 0x29; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x29; // char : 1
		constexpr auto LODValidity = 0x2a; // char
	}

	namespace n_URendererOverrideSettings { // : UDeveloperSettings
		constexpr auto bSupportAllShaderPermutations = 0x38; // char : 1
		constexpr auto bForceRecomputeTangents = 0x38; // char : 1
	}

	namespace n_UParticleModuleVelocityInheritParent { // : UParticleModuleVelocityBase
		constexpr auto Scale = 0x38; // FRawDistributionVector
	}

	namespace n_ULayer { // : UObject
		constexpr auto LayerName = 0x28; // FName
		constexpr auto bIsVisible = 0x30; // char : 1
		constexpr auto ActorStats = 0x38; // TArray<FLayerActorStats>
	}

	namespace n_AMiniMapDataActor { // : AActor
		constexpr auto m_InfoMainType = 0x218; // EMapMiniInfoMainType
		constexpr auto m_InfoSubType = 0x21c; // int32_t
		constexpr auto m_InfoSubTypeValue = 0x220; // int32_t
		constexpr auto m_InfoSubTypeString = 0x228; // FString
		constexpr auto m_InfoValue = 0x238; // int32_t
		constexpr auto m_DetailInfoValue = 0x23c; // int32_t
		constexpr auto m_InfoStringPosType = 0x240; // EMapMiniInfoStringPosType
		constexpr auto m_InfoStringID = 0x244; // int32_t
		constexpr auto m_InfoString = 0x248; // FString
		constexpr auto m_InfoMemo = 0x258; // FString
	}

	namespace n_UBookMark2D { // : UBookmarkBase
		constexpr auto Zoom2D = 0x28; // float
		constexpr auto Location = 0x2c; // FIntPoint
	}

	namespace n_UMM_PopupGuildSearch { // : UWidgetBase
		constexpr auto btn_close = 0x2e0; // UMM_Common_Btn_Symbol*
		constexpr auto btn_prev = 0x2e8; // UMM_Common_Btn_Symbol*
		constexpr auto btn_next = 0x2f0; // UMM_Common_Btn_Symbol*
		constexpr auto btn_confirm = 0x2f8; // UMM_Common_Btn*
		constexpr auto txt_page = 0x300; // UMirTextBlock*
		constexpr auto Txt_Title = 0x308; // UMirTextBlock*
		constexpr auto Txt_Search = 0x310; // UMirTextBlock*
		constexpr auto sb_list = 0x318; // UMirScrollBox*
	}

	namespace n_UDistributionVectorParameterBase { // : UDistributionVectorConstant
		constexpr auto ParameterName = 0x50; // FName
		constexpr auto MinInput = 0x58; // FVector
		constexpr auto MaxInput = 0x64; // FVector
		constexpr auto MinOutput = 0x70; // FVector
		constexpr auto MaxOutput = 0x7c; // FVector
		constexpr auto ParamModes = 0x88; // DistributionParamMode [0x3]
	}

	namespace n_UReverbEffect { // : UObject
		constexpr auto Density = 0x28; // float
		constexpr auto Diffusion = 0x2c; // float
		constexpr auto Gain = 0x30; // float
		constexpr auto GainHF = 0x34; // float
		constexpr auto DecayTime = 0x38; // float
		constexpr auto DecayHFRatio = 0x3c; // float
		constexpr auto ReflectionsGain = 0x40; // float
		constexpr auto ReflectionsDelay = 0x44; // float
		constexpr auto LateGain = 0x48; // float
		constexpr auto LateDelay = 0x4c; // float
		constexpr auto AirAbsorptionGainHF = 0x50; // float
		constexpr auto RoomRolloffFactor = 0x54; // float
	}

	namespace n_UMovieSceneCameraAnimTrack { // : UMovieSceneNameableTrack
		constexpr auto CameraAnimSections = 0x58; // TArray<UMovieSceneSection*>
	}

	namespace n_UMM_Slot_Costume_Palette { // : UWidgetBase
		constexpr auto Palette_RowID_CH1 = 0x300; // int32_t
		constexpr auto Palette_RowID_CH2 = 0x304; // int32_t
		constexpr auto Palette_CostumeID = 0x308; // int32_t
		constexpr auto Palette_Density_CH1 = 0x30c; // float
		constexpr auto Palette_Density_CH2 = 0x310; // float
		constexpr auto Palette_Color_CH1 = 0x314; // int32_t
		constexpr auto Palette_Color_CH2 = 0x318; // int32_t
		constexpr auto Palette_DyeingType = 0x31c; // int32_t
		constexpr auto Img_Color_1 = 0x320; // UMirImage*
		constexpr auto Img_Color_2 = 0x328; // UMirImage*
		constexpr auto Img_Checked = 0x330; // UMirImage*
		constexpr auto img_selected = 0x338; // UMirImage*
		constexpr auto m_BtnMain = 0x340; // UMirButton*
	}

	namespace n_UInputKeyDelegateBinding { // : UInputDelegateBinding
		constexpr auto InputKeyDelegateBindings = 0x28; // TArray<FBlueprintInputKeyDelegateBinding>
	}

	namespace n_UMM_NewInventoryTab_Slot { // : UWidgetBase
		constexpr auto m_Img_SelectedBG = 0x300; // UMirImage*
		constexpr auto m_Img_Icon = 0x308; // UMirImage*
		constexpr auto m_Img_SelectedIcon = 0x310; // UMirImage*
		constexpr auto m_Txt_Name = 0x318; // UMirTextBlock*
		constexpr auto m_Txt_Count = 0x320; // UMirTextBlock*
		constexpr auto m_Img_Indicator = 0x328; // UMirImage*
		constexpr auto m_Btn_Main = 0x330; // UMirButton*
		constexpr auto m_Grid_Effect = 0x338; // UPanelWidget*
	}

	namespace n_UMapBuildDataRegistry { // : UObject
		constexpr auto LevelLightingQuality = 0x28; // ELightingBuildQuality
	}

	namespace n_USoundNodeOscillator { // : USoundNode
		constexpr auto bModulateVolume = 0x40; // char : 1
		constexpr auto bModulatePitch = 0x40; // char : 1
		constexpr auto AmplitudeMin = 0x44; // float
		constexpr auto AmplitudeMax = 0x48; // float
		constexpr auto FrequencyMin = 0x4c; // float
		constexpr auto FrequencyMax = 0x50; // float
		constexpr auto OffsetMin = 0x54; // float
		constexpr auto OffsetMax = 0x58; // float
		constexpr auto CenterMin = 0x5c; // float
		constexpr auto CenterMax = 0x60; // float
	}

	namespace n_UViewport { // : UContentWidget
		constexpr auto BackgroundColor = 0x120; // FLinearColor
	}

	namespace n_UVoiceChannel { // : UChannel
		constexpr auto Connection = 0x28; // UNetConnection*
	}

	namespace n_UBlendSpace { // : UBlendSpaceBase
		constexpr auto AxisToScaleAnimation = 0x148; // EBlendSpaceAxis
	}

	namespace n_UMM_B_Shop_NPC { // : UWidgetBase
		constexpr auto ListElementClass = 0x2f0; // UMM_B_Shop_ListElement*
		constexpr auto m_TestValue = 0x2f8; // int32_t
		constexpr auto m_Anim_Open = 0x300; // UWidgetAnimation*
		constexpr auto m_Anim_Close = 0x308; // UWidgetAnimation*
		constexpr auto m_BtnClose = 0x310; // UMM_Common_Btn_Symbol*
		constexpr auto m_Goods = 0x318; // UMM_Goods_Slot*
		constexpr auto m_TitleText = 0x320; // UTextBlock*
		constexpr auto m_ScrollBox = 0x328; // UMirScrollBox*
		constexpr auto m_GuildScrollBox = 0x330; // UMirScrollBox*
		constexpr auto btn_reset = 0x338; // UMM_Common_Btn*
		constexpr auto txt_time_value = 0x340; // UMirTextBlock*
		constexpr auto txt_time = 0x348; // UMirTextBlock*
		constexpr auto gp_normal = 0x350; // UGridPanel*
		constexpr auto gp_black_iron = 0x358; // UGridPanel*
		constexpr auto guild_icon = 0x360; // UMM_GuildIcon*
		constexpr auto txt_guild_name = 0x368; // UMirRichTextBlock*
		constexpr auto txt_remain_count = 0x370; // UMirTextBlock*
		constexpr auto txt_remain_time = 0x378; // UMirTextBlock*
		constexpr auto shop_npc_goods = 0x380; // UMM_ShopNpcGoods*
		constexpr auto m_CanvasEventGoods = 0x388; // UMirCanvasPanel*
		constexpr auto m_Img_CostIcon = 0x390; // UMirImage*
		constexpr auto m_Txt_CostValue = 0x398; // UMirTextBlock*
		constexpr auto m_pBtnCommToolTip = 0x3a0; // UMM_Common_ToolTipBtn*
		constexpr auto DEFULT_TOOLTIP_MSG_ID = 0x3ac; // int32_t
		constexpr auto SEPTARIA_TOOLTIP_MSG_ID = 0x3b0; // int32_t
	}

	namespace n_UMM_Common_ToolTipBtn { // : UWidgetBase
		constexpr auto m_iStringToolTipTID = 0x2e0; // int32_t
		constexpr auto ImageVisible = 0x2e4; // bool
		constexpr auto IsOverrideToolTipLocation = 0x2e5; // bool
		constexpr auto OverrideToolTipLocation = 0x2e6; // EToolTipLocation
		constexpr auto m_Btn_Main = 0x2f8; // UMirButton*
		constexpr auto m_Img_Icon = 0x300; // UMirImage*
	}

	namespace n_ASkeletalMeshActor { // : AActor
		constexpr auto bShouldDoAnimNotifies = 0x220; // char : 1
		constexpr auto bWakeOnLevelStart = 0x220; // char : 1
		constexpr auto SkeletalMeshComponent = 0x228; // USkeletalMeshComponent*
		constexpr auto ReplicatedMesh = 0x230; // USkeletalMesh*
		constexpr auto ReplicatedPhysAsset = 0x238; // UPhysicsAsset*
		constexpr auto ReplicatedMaterial0 = 0x240; // UMaterialInterface*
		constexpr auto ReplicatedMaterial1 = 0x248; // UMaterialInterface*
	}

	namespace n_UMM_ItemSealing_Slot { // : UMM_Slot_Base
		constexpr auto m_ImgDisabled = 0x3f8; // UMirImage*
		constexpr auto m_ImgEquiped = 0x400; // UMirImage*
		constexpr auto m_ImgHave = 0x408; // UMirImage*
		constexpr auto m_Imgindicator = 0x410; // UMirImage*
		constexpr auto Img_Select = 0x418; // UImage*
		constexpr auto m_ImgTierBg = 0x420; // UMirImage*
		constexpr auto m_ImgDummy = 0x428; // UMirImage*
		constexpr auto m_PanelEvent = 0x430; // UMirCanvasPanel*
		constexpr auto m_TxtCount = 0x438; // UMirTextBlock*
		constexpr auto m_Img_Attribution = 0x440; // UMirImage*
		constexpr auto ItemMakeId = 0x448; // int32_t
		constexpr auto STR_STACKCOUNT = 0x44c; // int32_t
	}

	namespace n_AMM_PetObject { // : AActor
		constexpr auto m_pSkelMeshComp = 0x218; // USkeletalMeshComponent*
		constexpr auto LoopEffectComponent = 0x220; // UParticleSystemComponent*
		constexpr auto m_pOwnerActor = 0x228; // AActor*
		constexpr auto HeroEffectID = 0x230; // int32_t
		constexpr auto LegendEffectID = 0x234; // int32_t
		constexpr auto skillEffectID = 0x238; // int32_t
		constexpr auto levelUpEffectID = 0x23c; // int32_t
		constexpr auto TargetLocation = 0x240; // FVector
		constexpr auto m_LeftBackRot = 0x24c; // FRotator
		constexpr auto m_RightBackRot = 0x258; // FRotator
		constexpr auto m_TargetDistance = 0x264; // float
		constexpr auto m_MovePitch = 0x268; // float
		constexpr auto m_OwnerMoveThreshold = 0x26c; // float
		constexpr auto m_InterpSpeed = 0x270; // float
		constexpr auto m_MoveSpeed = 0x274; // float
		constexpr auto m_CloseRange = 0x278; // float
		constexpr auto m_FarRange = 0x27c; // float
		constexpr auto m_TargetMoveSpeed = 0x280; // float
		constexpr auto m_pSpeedCurve = 0x288; // UCurveFloat*
	}

	namespace n_UMM_Popup_Chat_Macro { // : UWidgetBase
		constexpr auto btn_close = 0x2e0; // UMM_Common_Btn_Symbol*
		constexpr auto m_SlotList = 0x2e8; // TArray<UMM_Hud_Chat_MacroSlot*>
	}

	namespace n_UWNFreeStopHingeModule { // : UObject
		constexpr auto DeviceStateListener = 0x48; // UWNAndroidDeviceState*
		constexpr auto GameViewportClientWeakPtr = 0x50; // TWeakObjectPtr<UMM_GameViewportClient>
		constexpr auto UpdateFlag = 0x58; // bool
		constexpr auto LerpAlpha = 0x5c; // float
		constexpr auto CurrentTargetSize = 0x60; // FVector2D
		constexpr auto StartTargetSize = 0x68; // FVector2D
		constexpr auto EndTargetSize = 0x70; // FVector2D
		constexpr auto ViewPortSize = 0x78; // FVector2D
		constexpr auto DeviceSafePadding = 0x80; // FVector4
		constexpr auto HalfOpendSafePadding = 0x90; // FVector4
		constexpr auto CurrentSafePadding = 0xa0; // FVector4
		constexpr auto StartSafePadding = 0xb0; // FVector4
		constexpr auto EndSafePadding = 0xc0; // FVector4
		constexpr auto CurrentDeviceState = 0xd0; // EPostureDeviceState
		constexpr auto Current_UI_State = 0xd4; // EPostureDeviceState
	}

	namespace n_UMM_NewInventory_EquipmentAction { // : UWidgetBase
		constexpr auto m_Txt_InvenCount = 0x300; // UMirTextBlock*
		constexpr auto m_Btn_InvenCount = 0x308; // UMirButton*
		constexpr auto m_SortListBtn = 0x310; // UMM_SortListBtn*
		constexpr auto m_Hrz_Default = 0x318; // UPanelWidget*
		constexpr auto m_CB_SellMode = 0x320; // UMM_Common_Btn*
		constexpr auto m_CB_AutoEquipMode = 0x328; // UMM_Common_Btn*
		constexpr auto m_Hrz_SellMode = 0x330; // UPanelWidget*
		constexpr auto m_Img_SellCostType = 0x338; // UMirImage*
		constexpr auto m_Txt_SellCostValue = 0x340; // UMirTextBlock*
		constexpr auto m_CB_Sell = 0x348; // UMM_Common_Btn*
	}

	namespace n_UMM_Popup_GuardianStone { // : UWidgetBase
		constexpr auto Img_Icon = 0x2e0; // UMirImage*
		constexpr auto Txt_Title = 0x2e8; // UMirTextBlock*
		constexpr auto Txt_Owner = 0x2f0; // UMirTextBlock*
		constexpr auto Txt_UnProtectRemaintime = 0x2f8; // UMirTextBlock*
		constexpr auto Txt_Status = 0x300; // UMirTextBlock*
		constexpr auto Txt_Reward01 = 0x308; // UMirRichTextBlock*
		constexpr auto Txt_Reward02 = 0x310; // UMirRichTextBlock*
		constexpr auto Btn_Repair = 0x318; // UMM_Common_Btn*
		constexpr auto btn_support = 0x320; // UMM_Common_Btn*
	}

	namespace n_UGameplayTask_WaitDelay { // : UGameplayTask
		constexpr auto OnFinish = 0x68; // FScriptMulticastDelegate
	}

	namespace n_UBTDecorator_DoesPathExist { // : UBTDecorator
		constexpr auto BlackboardKeyA = 0x68; // FBlackboardKeySelector
		constexpr auto BlackboardKeyB = 0x90; // FBlackboardKeySelector
		constexpr auto bUseSelf = 0xb8; // char : 1
		constexpr auto PathQueryType = 0xbc; // EPathExistanceQueryType
		constexpr auto FilterClass = 0xc0; // UNavigationQueryFilter*
	}

	namespace n_UMM_PopupGuildCostExchange { // : UWidgetBase
		constexpr auto btn_close = 0x2f0; // UMM_Common_Btn_Symbol*
		constexpr auto btn_confirm = 0x2f8; // UMM_Common_Btn*
		constexpr auto Btn_Cancel = 0x300; // UMM_Common_Btn*
		constexpr auto txt_send = 0x308; // UMirTextBlock*
		constexpr auto txt_recv = 0x310; // UMirTextBlock*
		constexpr auto img_send = 0x318; // UMirImage*
		constexpr auto img_recv = 0x320; // UMirImage*
		constexpr auto img_possession = 0x328; // UMirImage*
		constexpr auto txt_possession_value = 0x330; // UMirTextBlock*
		constexpr auto item_make_slider = 0x338; // UMM_Item_Make_Slider*
		constexpr auto lst_slot = 0x340; // TArray<UMM_Popup_GuildDonationSelectSlot*>
	}

	namespace n_UMovieSceneFadeTrack { // : UMovieSceneFloatTrack
		constexpr auto SectionToKey = 0x58; // UMovieSceneSection*
		constexpr auto PropertyName = 0x60; // FName
		constexpr auto PropertyPath = 0x68; // FString
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_UMovieSceneSignedObject { // : UObject
		constexpr auto Signature = 0x28; // FGuid
	}

	namespace n_UMM_CustomizingScreenShot { // : UWidgetBase
		constexpr auto m_pPhotoModeCharacter = 0x2e0; // AMM_PhotoModeCharacter*
		constexpr auto m_pPhotoModeData = 0x2e8; // UPhotoModeData*
		constexpr auto pCustomizingActor = 0x2f0; // AMM_CharacterCustomizingActor*
		constexpr auto pCustomizingLevelActor = 0x2f8; // AMM_CustomizingLevelActor*
		constexpr auto m_mapOption = 0x3c0; // TMap<EPhotoModeOptionType, FPhotoMode_Option>
	}

	namespace n_UDynamicEntryBox { // : UDynamicEntryBoxBase
		constexpr auto EntryWidgetClass = 0x1c8; // UUserWidget*
	}

	namespace n_UMM_Connecting_Login { // : UWidgetBase
		constexpr auto m_fTimeOut = 0x2f0; // float
		constexpr auto m_Grid_Alignment = 0x2f8; // UPanelWidget*
		constexpr auto m_Txt_Connecting = 0x300; // UMirTextBlock*
		constexpr auto m_AniLoop = 0x308; // UWidgetAnimation*
	}

	namespace n_UShaderPlatformQualitySettings { // : UObject
		constexpr auto QualityOverrides = 0x28; // FMaterialQualityOverrides [0x3]
	}

	namespace n_UMaterialExpressionIf { // : UMaterialExpression
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto AGreaterThanB = 0x68; // FExpressionInput
		constexpr auto AEqualsB = 0x7c; // FExpressionInput
		constexpr auto ALessThanB = 0x90; // FExpressionInput
		constexpr auto EqualsThreshold = 0xa4; // float
		constexpr auto ConstB = 0xa8; // float
		constexpr auto ConstAEqualsB = 0xac; // float
	}

	namespace n_UBlackboardComponent { // : UActorComponent
		constexpr auto BrainComp = 0xb0; // UBrainComponent*
		constexpr auto BlackboardAsset = 0xb8; // UBlackboardData*
		constexpr auto KeyInstances = 0xe0; // TArray<UBlackboardKeyType*>
	}

	namespace n_UNetDriver { // : UObject
		constexpr auto NetConnectionClassName = 0x30; // FString
		constexpr auto ReplicationDriverClassName = 0x40; // FString
		constexpr auto MaxDownloadSize = 0x50; // int32_t
		constexpr auto bClampListenServerTickRate = 0x54; // char : 1
		constexpr auto NetServerMaxTickRate = 0x58; // int32_t
		constexpr auto MaxNetTickRate = 0x5c; // int32_t
		constexpr auto MaxInternetClientRate = 0x60; // int32_t
		constexpr auto MaxClientRate = 0x64; // int32_t
		constexpr auto ServerTravelPause = 0x68; // float
		constexpr auto SpawnPrioritySeconds = 0x6c; // float
		constexpr auto RelevantTimeout = 0x70; // float
		constexpr auto KeepAliveTime = 0x74; // float
		constexpr auto InitialConnectTimeout = 0x78; // float
		constexpr auto ConnectionTimeout = 0x7c; // float
		constexpr auto TimeoutMultiplierForUnoptimizedBuilds = 0x80; // float
		constexpr auto bNoTimeouts = 0x84; // bool
		constexpr auto bNeverApplyNetworkEmulationSettings = 0x85; // bool
		constexpr auto ServerConnection = 0x88; // UNetConnection*
		constexpr auto ClientConnections = 0x90; // TArray<UNetConnection*>
		constexpr auto RecentlyDisconnectedTrackingTime = 0x100; // int32_t
		constexpr auto World = 0x140; // UWorld*
		constexpr auto WorldPackage = 0x148; // UPackage*
		constexpr auto NetConnectionClass = 0x170; // UObject*
		constexpr auto ReplicationDriverClass = 0x178; // UObject*
		constexpr auto RoleProperty = 0x180; // UProperty*
		constexpr auto RemoteRoleProperty = 0x188; // UProperty*
		constexpr auto NetDriverName = 0x190; // FName
		constexpr auto ChannelDefinitions = 0x198; // TArray<FChannelDefinition>
		constexpr auto ChannelDefinitionMap = 0x1a8; // TMap<FName, FChannelDefinition>
		constexpr auto ActorChannelPool = 0x1f8; // TArray<UChannel*>
		constexpr auto Time = 0x210; // float
		constexpr auto ReplicationDriver = 0x6e0; // UReplicationDriver*
	}

	namespace n_UMM_Popup_GuildHostility { // : UWidgetBase
		constexpr auto m_Txt_Title = 0x2f0; // UMirTextBlock*
		constexpr auto m_Txt_Desc = 0x2f8; // UMirTextBlock*
		constexpr auto m_Txt_MyGuildName = 0x300; // UMirTextBlock*
		constexpr auto m_Txt_MyGuildCombatPower = 0x308; // UMirTextBlock*
		constexpr auto m_MyGuildIcon = 0x310; // UMM_GuildIcon*
		constexpr auto m_Txt_GuildName = 0x318; // UMirTextBlock*
		constexpr auto m_Txt_GuildCombatPower = 0x320; // UMirTextBlock*
		constexpr auto m_GuildIcon = 0x328; // UMM_GuildIcon*
		constexpr auto m_Panel_EndTime = 0x330; // UMirCanvasPanel*
		constexpr auto m_Txt_EndTime = 0x338; // UMirTextBlock*
		constexpr auto m_Panel_Cost = 0x340; // UHorizontalBox*
		constexpr auto m_Txt_CostTitle = 0x348; // UMirTextBlock*
		constexpr auto m_Img_WarCostIcon = 0x350; // UMirImage*
		constexpr auto m_Txt_WarCostCount = 0x358; // UMirTextBlock*
		constexpr auto m_CB_StartHostility = 0x360; // UMM_Common_Btn*
		constexpr auto m_CB_CancelHostility = 0x368; // UMM_Common_Btn*
		constexpr auto m_CB_Cancel = 0x370; // UMM_Common_Btn*
		constexpr auto m_CB_Close = 0x378; // UMM_Common_Btn_Symbol*
		constexpr auto m_Txt_RemindTime = 0x380; // UMirTextBlock*
		constexpr auto m_OpenAni = 0x388; // UWidgetAnimation*
		constexpr auto m_CloseAni = 0x390; // UWidgetAnimation*
	}

	namespace n_UMM_Popup_Restore_Exp { // : UWidgetBase
		constexpr auto m_pBtnClose = 0x2f8; // UMM_Common_Btn_Symbol*
		constexpr auto m_pBtnRestore = 0x300; // UMM_Common_Btn*
		constexpr auto m_pBtnRestore_Item = 0x308; // UMM_Common_Btn_Cost*
		constexpr auto m_pTxtTitle = 0x310; // UMirTextBlock*
		constexpr auto m_pTxtTab_General = 0x318; // UMirTextBlock*
		constexpr auto m_pTxtTab_Advanced = 0x320; // UMirTextBlock*
		constexpr auto m_pTxtNum = 0x328; // UMirTextBlock*
		constexpr auto m_pTxtRate = 0x330; // UMirTextBlock*
		constexpr auto m_pBtnTab_General = 0x338; // UMirCheckBox*
		constexpr auto m_pBtnTab_Advanced = 0x340; // UMirCheckBox*
		constexpr auto m_pScrollList = 0x348; // UMirScrollBox*
		constexpr auto m_pEmptyNoticeBoard = 0x350; // UMM_Common_Board_Notice*
	}

	namespace n_UInterpTrackBoolProp { // : UInterpTrack
		constexpr auto BoolTrack = 0x70; // TArray<FBoolTrackKey>
		constexpr auto PropertyName = 0x80; // FName
	}

	namespace n_UMM_Dominion_Title_RareList { // : UMM_Dominion_Title_ListBase
		constexpr auto m_pVertBox = 0x2e0; // UVerticalBox*
		constexpr auto m_pTxtTitle = 0x2e8; // UMirTextBlock*
	}

	namespace n_UMM_UIAction_QuestObtain { // : UMM_UIAction
		constexpr auto m_MissionZoneToStr = 0x68; // int32_t
	}

	namespace n_UFirebaseValueListener { // : UBlueprintAsyncActionBase
		constexpr auto OnEvent = 0x30; // FScriptMulticastDelegate
	}

	namespace n_UMovieSceneFloatSection { // : UMovieSceneSection
		constexpr auto FloatCurve = 0xe0; // FMovieSceneFloatChannel
	}

	namespace n_UAISense_Sight { // : UAISense
		constexpr auto MaxTracesPerTick = 0x130; // int32_t
		constexpr auto MinQueriesPerTimeSliceCheck = 0x134; // int32_t
		constexpr auto MaxTimeSlicePerTick = 0x138; // double
		constexpr auto HighImportanceQueryDistanceThreshold = 0x140; // float
		constexpr auto MaxQueryImportance = 0x148; // float
		constexpr auto SightLimitQueryImportance = 0x14c; // float
	}

	namespace n_USystemAlertWidget { // : UWidgetBase
		constexpr auto Txt_BattleTitle = 0x2e0; // UTextBlock*
	}

	namespace n_UBehaviorTree { // : UObject
		constexpr auto RootNode = 0x28; // UBTCompositeNode*
		constexpr auto BlackboardAsset = 0x30; // UBlackboardData*
		constexpr auto RootDecorators = 0x38; // TArray<UBTDecorator*>
		constexpr auto RootDecoratorOps = 0x48; // TArray<FBTDecoratorLogic>
	}

	namespace n_UMM_GuildReportSlot { // : UWidgetBase
		constexpr auto Img_Icon = 0x2e0; // UMirImage*
		constexpr auto Txt_Name = 0x2e8; // UMirTextBlock*
		constexpr auto pb_progress = 0x2f0; // UMirProgressBar*
		constexpr auto txt_progress = 0x2f8; // UMirTextBlock*
		constexpr auto txt_daily_mission = 0x300; // UMirTextBlock*
		constexpr auto btn_reward0 = 0x308; // UMM_Common_Btn_Symbol*
		constexpr auto txt_reward0 = 0x310; // UMirTextBlock*
		constexpr auto btn_reward1 = 0x318; // UMM_Common_Btn_Symbol*
		constexpr auto txt_reward1 = 0x320; // UMirTextBlock*
		constexpr auto btn_reward2 = 0x328; // UMM_Common_Btn_Symbol*
		constexpr auto txt_reward2 = 0x330; // UMirTextBlock*
		constexpr auto btn_recv = 0x338; // UMM_Common_Btn*
		constexpr auto img_clear = 0x340; // UMirImage*
		constexpr auto img_complete = 0x348; // UMirImage*
	}

	namespace n_UParticleModuleVelocityCone { // : UParticleModuleVelocityBase
		constexpr auto Angle = 0x38; // FRawDistributionFloat
		constexpr auto Velocity = 0x68; // FRawDistributionFloat
		constexpr auto Direction = 0x98; // FVector
	}

	namespace n_UAsyncActionLoadPrimaryAssetClassList { // : UAsyncActionLoadPrimaryAssetBase
		constexpr auto Completed = 0x78; // FScriptMulticastDelegate
	}

	namespace n_ARectLight { // : ALight
		constexpr auto RectLightComponent = 0x228; // URectLightComponent*
	}

	namespace n_UMaterialExpressionFunctionInput { // : UMaterialExpression
		constexpr auto Preview = 0x40; // FExpressionInput
		constexpr auto InputName = 0x54; // FName
		constexpr auto Description = 0x60; // FString
		constexpr auto ID = 0x70; // FGuid
		constexpr auto InputType = 0x80; // EFunctionInputType
		constexpr auto PreviewValue = 0x90; // FVector4
		constexpr auto bUsePreviewValueAsDefault = 0xa0; // char : 1
		constexpr auto SortPriority = 0xa4; // int32_t
		constexpr auto bCompilingFunctionPreview = 0xa8; // char : 1
	}

	namespace n_USourceEffectFilterPreset { // : USoundEffectSourcePreset
		constexpr auto Settings = 0x74; // FSourceEffectFilterSettings
	}

	namespace n_UMM_Auction_Tab_Calculate { // : UMM_Auction_Tab_Base
		constexpr auto m_pTxtSoldCount = 0x300; // UMirTextBlock*
		constexpr auto m_pTxtSoldMoney = 0x308; // UMirTextBlock*
		constexpr auto m_pTxtReceiveMoney = 0x310; // UMirTextBlock*
		constexpr auto m_pBtnGetMoney = 0x318; // UMM_Common_Btn*
		constexpr auto m_pListView = 0x320; // UMirListView*
		constexpr auto m_pNotice = 0x328; // UMM_Common_Board_Notice*
	}

	namespace n_UMM_New_Force_Tab { // : UWidgetBase
		constexpr auto m_C_Img_Select = 0x2f8; // UMirImage*
		constexpr auto m_C_Img_Icon = 0x300; // UMirImage*
		constexpr auto m_C_Img_Indicator = 0x308; // UMirImage*
		constexpr auto m_C_Img_Lock = 0x310; // UMirImage*
		constexpr auto m_C_Txt_State = 0x318; // UMirTextBlock*
		constexpr auto m_C_Txt_Percent = 0x320; // UMirTextBlock*
		constexpr auto m_C_Txt_Name = 0x328; // UMirTextBlock*
		constexpr auto m_C_Btn_Tab = 0x330; // UMirButton*
	}

	namespace n_UMM_Popup_Revival_Select { // : UWidgetBase
		constexpr auto OccupationMinimap = 0x2f0; // UMM_Occupation_Minimap*
		constexpr auto m_ListView_RevivalSelectList = 0x2f8; // UMirListView*
		constexpr auto Btn_Revival = 0x300; // UMM_Common_Btn*
		constexpr auto btn_close = 0x308; // UMM_Common_Btn_Symbol*
		constexpr auto m_arRevivalSelectSlotObj = 0x318; // TArray<URevivalSelectSlotObj*>
	}

	namespace n_UInputVectorAxisDelegateBinding { // : UInputAxisKeyDelegateBinding
		constexpr auto InputAxisKeyDelegateBindings = 0x28; // TArray<FBlueprintInputAxisKeyDelegateBinding>
	}

	namespace n_AQuestStatusCheckTrigger { // : AActivateTrigger
		constexpr auto m_QuestID = 0x298; // int32_t
		constexpr auto m_SubQuestIndex = 0x29c; // int32_t
	}

	namespace n_UMM_Popup_DominionBuffSlot { // : UWidgetBase
		constexpr auto m_pImgIcon = 0x2e0; // UMirImage*
		constexpr auto m_pTxtTheme = 0x2e8; // UMirTextBlock*
		constexpr auto m_pTxtInfo = 0x2f0; // UMirTextBlock*
		constexpr auto m_pTxtTime = 0x2f8; // UMirTextBlock*
		constexpr auto m_pTxtRemainCount = 0x300; // UMirTextBlock*
		constexpr auto m_pTxtMaxCount = 0x308; // UMirTextBlock*
		constexpr auto m_pBtnCost = 0x310; // UMM_Common_Btn_Cost*
		constexpr auto m_pTxtNoLimit = 0x318; // UMirTextBlock*
		constexpr auto m_pHorUseCount = 0x320; // UHorizontalBox*
		constexpr auto m_pTxtEffect = 0x328; // UMirTextBlock*
		constexpr auto m_pTxtUseCount = 0x330; // UMirTextBlock*
		constexpr auto m_pTxtDuration = 0x338; // UMirTextBlock*
	}

	namespace n_UBuildPatchManifest { // : UObject
		constexpr auto ManifestFileVersion = 0x28; // char
		constexpr auto bIsFileData = 0x29; // bool
		constexpr auto appId = 0x2c; // uint32_t
		constexpr auto AppName = 0x30; // FString
		constexpr auto BuildVersion = 0x40; // FString
		constexpr auto LaunchExe = 0x50; // FString
		constexpr auto LaunchCommand = 0x60; // FString
		constexpr auto PrereqIds = 0x70; // TSet<FString>
		constexpr auto PrereqName = 0xc0; // FString
		constexpr auto PrereqPath = 0xd0; // FString
		constexpr auto PrereqArgs = 0xe0; // FString
		constexpr auto FileManifestList = 0xf0; // TArray<FFileManifestData>
		constexpr auto ChunkList = 0x100; // TArray<FChunkInfoData>
		constexpr auto CustomFields = 0x110; // TArray<FCustomFieldData>
	}

	namespace n_UClothingAssetBase { // : UObject
		constexpr auto ImportedFilePath = 0x28; // FString
		constexpr auto AssetGuid = 0x38; // FGuid
	}

	namespace n_ULegacyLevelSequenceDirectorBlueprint { // : UBlueprint
		constexpr auto ParentClass = 0x50; // UObject*
		constexpr auto BlueprintType = 0x58; // EBlueprintType
		constexpr auto bRecompileOnLoad = 0x59; // char : 1
		constexpr auto bHasBeenRegenerated = 0x59; // char : 1
		constexpr auto bIsRegeneratingOnLoad = 0x59; // char : 1
		constexpr auto BlueprintSystemVersion = 0x5c; // int32_t
		constexpr auto SimpleConstructionScript = 0x60; // USimpleConstructionScript*
		constexpr auto ComponentTemplates = 0x68; // TArray<UActorComponent*>
		constexpr auto Timelines = 0x78; // TArray<UTimelineTemplate*>
		constexpr auto ComponentClassOverrides = 0x88; // TArray<FBPComponentClassOverride>
		constexpr auto InheritableComponentHandler = 0x98; // UInheritableComponentHandler*
	}

	namespace n_UMaterialExpressionCeil { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_ARuntimeVirtualTextureVolume { // : AActor
		constexpr auto VirtualTextureComponent = 0x218; // URuntimeVirtualTextureComponent*
	}

	namespace n_UCommonPopupLineWidget { // : UWidgetBase
		constexpr auto m_AniBtnOneConfirm = 0x2e0; // UWidgetAnimation*
		constexpr auto m_AniBtnTwoConfirm = 0x2e8; // UWidgetAnimation*
		constexpr auto m_AniBtnTwoCancel = 0x2f0; // UWidgetAnimation*
		constexpr auto m_AniPopup = 0x2f8; // UWidgetAnimation*
		constexpr auto m_TxtTitle = 0x300; // UTextBlock*
		constexpr auto m_RTxtMessage = 0x308; // URichTextBox*
		constexpr auto m_HrzOneBtn = 0x310; // UHorizontalBox*
		constexpr auto m_HrzTwoBtn = 0x318; // UHorizontalBox*
		constexpr auto m_TxtOneConfirm = 0x320; // UTextBlock*
		constexpr auto m_TxtTwoConfirm = 0x328; // UTextBlock*
		constexpr auto m_TxtTwoCancel = 0x330; // UTextBlock*
		constexpr auto m_BtnOneConfirm = 0x338; // UButton*
		constexpr auto m_BtnTwoConfirm = 0x340; // UButton*
		constexpr auto m_BtnTwoCancel = 0x348; // UButton*
	}

	namespace n_UParticleModuleTypeDataMesh { // : UParticleModuleTypeDataBase
		constexpr auto Mesh = 0x30; // UStaticMesh*
		constexpr auto LODSizeScale = 0x40; // float
		constexpr auto bUseStaticMeshLODs = 0x44; // char : 1
		constexpr auto CastShadows = 0x44; // char : 1
		constexpr auto DoCollisions = 0x44; // char : 1
		constexpr auto MeshAlignment = 0x45; // EMeshScreenAlignment
		constexpr auto bOverrideMaterial = 0x46; // char : 1
		constexpr auto bOverrideDefaultMotionBlurSettings = 0x46; // char : 1
		constexpr auto bEnableMotionBlur = 0x46; // char : 1
		constexpr auto RollPitchYawRange = 0x48; // FRawDistributionVector
		constexpr auto AxisLockOption = 0x90; // EParticleAxisLock
		constexpr auto bCameraFacing = 0x91; // char : 1
		constexpr auto CameraFacingUpAxisOption = 0x92; // EMeshCameraFacingUpAxis
		constexpr auto CameraFacingOption = 0x93; // EMeshCameraFacingOptions
		constexpr auto bApplyParticleRotationAsSpin = 0x94; // char : 1
		constexpr auto bFaceCameraDirectionRatherThanPosition = 0x94; // char : 1
		constexpr auto bCollisionsConsiderPartilceSize = 0x94; // char : 1
	}

	namespace n_UHud_userfunction_Btn { // : UWidgetBase
		constexpr auto m_SymbolIcon = 0x2e0; // UObject*
		constexpr auto m_AniClick = 0x2e8; // UWidgetAnimation*
		constexpr auto m_ImgSymbolIcon = 0x2f0; // UImage*
		constexpr auto Txt_BtnDesc = 0x2f8; // UMirTextBlock*
		constexpr auto m_ImgBg = 0x300; // UMirImage*
		constexpr auto m_ImgBgShadow = 0x308; // UMirImage*
		constexpr auto m_BtnMain = 0x310; // UMirButton*
	}

	namespace n_UMM_B_Pet { // : UWidgetBase
		constexpr auto m_pRenderRoom = 0x310; // APetRenderRoom*
		constexpr auto m_Img_RenderTarget = 0x318; // UMirImage*
		constexpr auto m_TargetPos = 0x320; // UImage*
		constexpr auto m_Spc_RotateArea = 0x328; // USpacer*
		constexpr auto m_PetMain = 0x330; // UMM_PetMain*
		constexpr auto m_PetSpeechBalloon = 0x338; // UMM_PetSpeechBalloon*
	}

	namespace n_UInterpTrackInstDirector { // : UInterpTrackInst
		constexpr auto OldViewTarget = 0x28; // AActor*
	}

	namespace n_UParticleModuleParameterDynamic_Seeded { // : UParticleModuleParameterDynamic
		constexpr auto RandomSeedInfo = 0x48; // FParticleRandomSeedInfo
	}

	namespace n_UMM_PlayerRank { // : UWidgetBase
		constexpr auto Txt_Title = 0x2f0; // UMirTextBlock*
		constexpr auto Txt_Value = 0x2f8; // UMirTextBlock*
		constexpr auto Img_None = 0x300; // UMirImage*
		constexpr auto STRID_RANK = 0x308; // int32_t
	}

	namespace n_UMM_Slot_DungeonMaterial { // : UMM_Slot_Material
		constexpr auto m_canBand = 0x468; // UMirCanvasPanel*
		constexpr auto m_imgBand = 0x470; // UMirImage*
		constexpr auto m_txtBand = 0x478; // UMirTextBlock*
	}

	namespace n_UMirProgressBar { // : UProgressBar
		constexpr auto WidgetStyle = 0x108; // FProgressBarStyle
		constexpr auto Style = 0x2a8; // USlateWidgetStyleAsset*
		constexpr auto BackgroundImage = 0x2b0; // USlateBrushAsset*
		constexpr auto FillImage = 0x2b8; // USlateBrushAsset*
		constexpr auto MarqueeImage = 0x2c0; // USlateBrushAsset*
		constexpr auto Percent = 0x2c8; // float
		constexpr auto BarFillType = 0x2cc; // EProgressBarFillType
		constexpr auto bIsMarquee = 0x2cd; // bool
		constexpr auto BorderPadding = 0x2d0; // FVector2D
		constexpr auto PercentDelegate = 0x2d8; // DelegateProperty
		constexpr auto FillColorAndOpacity = 0x2e8; // FLinearColor
		constexpr auto FillColorAndOpacityDelegate = 0x2f8; // DelegateProperty
	}

	namespace n_URuntimeVirtualTextureStreamingProxy { // : UTexture2D
		constexpr auto Settings = 0x100; // FVirtualTextureBuildSettings
		constexpr auto bSinglePhysicalSpace = 0x10c; // bool
		constexpr auto BuildHash = 0x110; // uint32_t
	}

	namespace n_UParticleModuleVectorFieldScale { // : UParticleModuleVectorFieldBase
		constexpr auto VectorFieldScale = 0x30; // UDistributionFloat*
		constexpr auto VectorFieldScaleRaw = 0x38; // FRawDistributionFloat
	}

	namespace n_UBlueprintCore { // : UObject
		constexpr auto SkeletonGeneratedClass = 0x28; // UObject*
		constexpr auto GeneratedClass = 0x30; // UObject*
		constexpr auto bLegacyNeedToPurgeSkelRefs = 0x38; // bool
		constexpr auto BlueprintGuid = 0x3c; // FGuid
	}

	namespace n_UMM_TotalQuickSlot_Potion { // : UWidgetBase
		constexpr auto OpenShopBuyID = 0x2f0; // int32_t
		constexpr auto m_pHPAutoPercent = 0x2f8; // UMM_GameOption_Slider*
		constexpr auto m_pMPAutoPercent = 0x300; // UMM_GameOption_Slider*
		constexpr auto m_pBtnOpenShop = 0x308; // UMirButton*
		constexpr auto m_pBtnSortGrade = 0x310; // UMirButton*
		constexpr auto m_pImgSortGrade_Up = 0x318; // UMirImage*
		constexpr auto m_pImgSortGrade_Down = 0x320; // UMirImage*
		constexpr auto m_pScrollBox_ItemSlot = 0x330; // UMM_SharedScrollBox*
		constexpr auto m_pTxtItemName = 0x338; // UMirTextBlock*
		constexpr auto m_pBtnUseItem = 0x340; // UMM_Common_Btn*
		constexpr auto m_pCommNotice = 0x348; // UMM_Common_Board_Notice*
		constexpr auto m_pTxtShop = 0x350; // UMirTextBlock*
		constexpr auto m_pTxtSortGrade = 0x358; // UMirTextBlock*
	}

	namespace n_UAnimationDataSourceRegistry { // : UObject
		constexpr auto DataSources = 0x28; // TMap<FName, UObject*>
	}

	namespace n_UMM_CommonHorizontalTabSet { // : UWidgetBase
		constexpr auto m_iFontSize = 0x2f0; // int32_t
		constexpr auto m_iBtnMaxCount = 0x2f4; // int32_t
		constexpr auto m_bUseFillBtn = 0x2f8; // bool
		constexpr auto m_Hrz_Main = 0x318; // UPanelWidget*
		constexpr auto m_arTab = 0x320; // TArray<UMM_CommonHorizontalTabBtn*>
	}

	namespace n_UParticleModuleRotationBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x29; // char : 1
		constexpr auto LODDuplicate = 0x29; // char : 1
		constexpr auto bSupportsRandomSeed = 0x29; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x29; // char : 1
		constexpr auto LODValidity = 0x2a; // char
	}

	namespace n_UMovieSceneParticleSection { // : UMovieSceneSection
		constexpr auto ParticleKeys = 0xe0; // FMovieSceneParticleChannel
	}

	namespace n_UMM_Popup_ClosedTraining_CollectResult { // : UWidgetBase
		constexpr auto m_SuccessColor = 0x2e0; // FLinearColor
		constexpr auto m_PaneltyColor = 0x2f0; // FLinearColor
		constexpr auto m_Panel_Success = 0x300; // UMirCanvasPanel*
		constexpr auto m_Panel_Penalty = 0x308; // UMirCanvasPanel*
		constexpr auto m_Btn_Close = 0x310; // UMirButton*
		constexpr auto m_Txt_Name = 0x318; // UMirTextBlock*
		constexpr auto m_Txt_Desc = 0x320; // UMirRichTextBlock*
		constexpr auto m_Txt_Notice = 0x328; // UMirTextBlock*
		constexpr auto m_VBox = 0x330; // UVerticalBox*
		constexpr auto m_Ani_Success = 0x338; // UWidgetAnimation*
		constexpr auto m_Ani_Panelty = 0x340; // UWidgetAnimation*
	}

	namespace n_USharePost { // : UBlueprintAsyncActionBase
		constexpr auto OnSuccess = 0x30; // FScriptMulticastDelegate
		constexpr auto OnFail = 0x40; // FScriptMulticastDelegate
	}

	namespace n_UMM_Dominion_Title_GroupBase { // : UWidgetBase
		constexpr auto m_pParentWidget = 0x260; // UWidgetBase*
		constexpr auto m_arChildWidget = 0x268; // TArray<TWeakObjectPtr<UWidgetBase>>
		constexpr auto m_arMirTextBlock = 0x280; // TArray<TWeakObjectPtr<UMirTextBlock>>
		constexpr auto m_arMirRichTextBlock = 0x290; // TArray<TWeakObjectPtr<UMirRichTextBlock>>
		constexpr auto m_arMirEditableText = 0x2a0; // TArray<TWeakObjectPtr<UMirEditableText>>
		constexpr auto m_arMirImage = 0x2b0; // TArray<TWeakObjectPtr<UMirImage>>
	}

	namespace n_UAISense { // : UObject
		constexpr auto DefaultExpirationAge = 0x28; // float
		constexpr auto NotifyType = 0x2c; // EAISenseNotifyType
		constexpr auto bWantsNewPawnNotification = 0x30; // char : 1
		constexpr auto bAutoRegisterAllPawnsAsSources = 0x30; // char : 1
		constexpr auto PerceptionSystemInstance = 0x38; // UAIPerceptionSystem*
	}

	namespace n_UMM_CommonHorizontalTabBtn { // : UWidgetBase
		constexpr auto m_Txt_TabName = 0x300; // UMirTextBlock*
		constexpr auto m_Img_Locked = 0x308; // UMirImage*
		constexpr auto m_Img_Indicator = 0x310; // UMirImage*
		constexpr auto m_Img_Selected = 0x318; // UMirImage*
		constexpr auto m_Btn_Main = 0x320; // UMirButton*
		constexpr auto m_Spc_Main = 0x328; // USpacer*
		constexpr auto m_Canvas_Effect = 0x330; // UMirCanvasPanel*
		constexpr auto m_AniMyMap = 0x338; // UWidgetAnimation*
	}

	namespace n_UMM_Dominion_TaxGroup { // : UWidgetBase
		constexpr auto TaxList = 0x2e8; // TArray<UMM_Dominion_TaxSlot*>
		constexpr auto m_pTxtTitle = 0x2f8; // UMirTextBlock*
		constexpr auto m_pVerticalBox = 0x300; // UVerticalBox*
	}

	namespace n_UInputAxisDelegateBinding { // : UInputDelegateBinding
		constexpr auto InputAxisDelegateBindings = 0x28; // TArray<FBlueprintInputAxisDelegateBinding>
	}

	namespace n_UAssetManagerSettings { // : UDeveloperSettings
		constexpr auto PrimaryAssetTypesToScan = 0x38; // TArray<FPrimaryAssetTypeInfo>
		constexpr auto DirectoriesToExclude = 0x48; // TArray<FDirectoryPath>
		constexpr auto PrimaryAssetRules = 0x58; // TArray<FPrimaryAssetRulesOverride>
		constexpr auto CustomPrimaryAssetRules = 0x68; // TArray<FPrimaryAssetRulesCustomOverride>
		constexpr auto bOnlyCookProductionAssets = 0x78; // bool
		constexpr auto bShouldManagerDetermineTypeAndName = 0x79; // bool
		constexpr auto bShouldGuessTypeAndNameInEditor = 0x7a; // bool
		constexpr auto bShouldAcquireMissingChunksOnLoad = 0x7b; // bool
		constexpr auto PrimaryAssetIdRedirects = 0x80; // TArray<FAssetManagerRedirect>
		constexpr auto PrimaryAssetTypeRedirects = 0x90; // TArray<FAssetManagerRedirect>
		constexpr auto AssetPathRedirects = 0xa0; // TArray<FAssetManagerRedirect>
		constexpr auto MetaDataTagsForAssetRegistry = 0xb0; // TSet<FName>
	}

	namespace n_UAnimSharingTransitionInstance { // : UAnimInstance
		constexpr auto FromComponent = 0x268; // TWeakObjectPtr<USkeletalMeshComponent>
		constexpr auto ToComponent = 0x270; // TWeakObjectPtr<USkeletalMeshComponent>
		constexpr auto BlendTime = 0x278; // float
		constexpr auto bBlendBool = 0x27c; // bool
	}

	namespace n_UMM_Common_Btn_Translation { // : UWidgetBase
		constexpr auto m_BtnMain = 0x2f0; // UMirButton*
		constexpr auto m_Ani_Translation = 0x2f8; // UWidgetAnimation*
		constexpr auto m_Img_Translate = 0x300; // UMirImage*
		constexpr auto m_Img_Inprogress = 0x308; // UMirImage*
	}

	namespace n_UMaterialExpression { // : UObject
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UMM_PopupPartyPWKeypad { // : UWidgetBase
		constexpr auto btn_back = 0x2e0; // UMM_Common_Btn*
		constexpr auto txt_number = 0x2e8; // UMirTextBlock*
		constexpr auto btn_close = 0x2f0; // UMM_Common_Btn_Symbol*
		constexpr auto Btn_Cancel = 0x2f8; // UMM_Common_Btn*
		constexpr auto btn_confirm = 0x300; // UMM_Common_Btn*
		constexpr auto lst_btn_number = 0x308; // UMirButton* [0xa]
		constexpr auto btn_reset = 0x358; // UMirButton*
		constexpr auto btn_remove = 0x360; // UMirButton*
	}

	namespace n_AMM_GachaObjectActor { // : AActor
		constexpr auto GachaMeshComponent = 0x218; // USkeletalMeshComponent*
		constexpr auto RewardSpriteComponent = 0x220; // UPaperSpriteComponent*
		constexpr auto TouchWidgetComponent = 0x228; // UWidgetComponent*
		constexpr auto NameTagWidgetComponent = 0x230; // UWidgetComponent*
		constexpr auto DefaultParticleComponent = 0x238; // UParticleSystemComponent*
		constexpr auto GachaDirectingData = 0x240; // UGachaDirectingData*
		constexpr auto m_mapGachaMeshObjectPtr = 0x248; // TMap<EGachaType, USkeletalMesh*>
		constexpr auto GachaAnimInstance = 0x298; // UGachaObjectAnimInstance*
		constexpr auto GachaManagerActor = 0x2a0; // AMM_GachaManagerActor*
		constexpr auto m_bSettingComplete = 0x2b0; // bool
		constexpr auto m_GachaRewardName = 0x2b8; // FString
		constexpr auto m_CachedGachaMesh = 0x2c8; // USkeletalMesh*
		constexpr auto m_CachedRewardSprite = 0x2d0; // UPaperSprite*
	}

	namespace n_UParticleModuleLocationSkelVertSurface { // : UParticleModuleLocationBase
		constexpr auto SourceType = 0x30; // ELocationSkelVertSurfaceSource
		constexpr auto UniversalOffset = 0x34; // FVector
		constexpr auto bUpdatePositionEachFrame = 0x40; // char : 1
		constexpr auto bOrientMeshEmitters = 0x40; // char : 1
		constexpr auto bInheritBoneVelocity = 0x40; // char : 1
		constexpr auto InheritVelocityScale = 0x44; // float
		constexpr auto SkelMeshActorParamName = 0x48; // FName
		constexpr auto ValidAssociatedBones = 0x50; // TArray<FName>
		constexpr auto bEnforceNormalCheck = 0x60; // char : 1
		constexpr auto NormalToCompare = 0x64; // FVector
		constexpr auto NormalCheckToleranceDegrees = 0x70; // float
		constexpr auto NormalCheckTolerance = 0x74; // float
		constexpr auto ValidMaterialIndices = 0x78; // TArray<int32_t>
		constexpr auto bInheritVertexColor = 0x88; // char : 1
		constexpr auto bInheritUV = 0x88; // char : 1
		constexpr auto InheritUVChannel = 0x8c; // uint32_t
	}

	namespace n_UMM_Mystical_ItemInfo_Ability { // : UWidgetBase
		constexpr auto m_AbilityIcon = 0x2e0; // UMirImage*
		constexpr auto m_AbilityName = 0x2e8; // UTextBlock*
		constexpr auto m_AbilityValue = 0x2f0; // UMirTextBlock*
		constexpr auto m_AbilityValueDefault = 0x2f8; // UMirTextBlock*
		constexpr auto m_AbilityAddValue = 0x300; // UMirTextBlock*
		constexpr auto m_Txt1 = 0x308; // UTextBlock*
		constexpr auto m_Txt2 = 0x310; // UTextBlock*
		constexpr auto m_WidgetIndex = 0x318; // int32_t
		constexpr auto Img_Arrow = 0x320; // UMirImage*
		constexpr auto Txt_Point = 0x328; // UMirTextBlock*
		constexpr auto m_PolishProgressBar = 0x330; // UProgressBar*
		constexpr auto m_PolishStatValue = 0x338; // UTextBlock*
		constexpr auto m_Img_Grade = 0x340; // UMirImage*
		constexpr auto m_Txt_OptionValue = 0x348; // UTextBlock*
		constexpr auto m_Txt_OptionMin = 0x350; // UTextBlock*
		constexpr auto m_Txt_OptionMax = 0x358; // UTextBlock*
		constexpr auto m_Txt11 = 0x360; // UTextBlock*
		constexpr auto m_Txt12 = 0x368; // UTextBlock*
		constexpr auto m_Txt13 = 0x370; // UTextBlock*
		constexpr auto m_Img_Ability = 0x378; // UMirImage*
		constexpr auto m_Txt_Title_SetItem = 0x380; // UTextBlock*
		constexpr auto m_Txt_Desc_SetItem = 0x388; // UTextBlock*
		constexpr auto m_Txt_Value_SetItem = 0x390; // UTextBlock*
		constexpr auto Txt_Value_Durability = 0x398; // UMirTextBlock*
		constexpr auto Txt_Value_Penalty = 0x3a0; // UMirTextBlock*
		constexpr auto Img_Arrow_Penalty = 0x3a8; // UMirImage*
		constexpr auto Txt_Point_Penalty = 0x3b0; // UMirTextBlock*
		constexpr auto m_Panel_2 = 0x3b8; // UHorizontalBox*
		constexpr auto m_Panel_3 = 0x3c0; // UPanelWidget*
		constexpr auto m_Panel_4 = 0x3c8; // UPanelWidget*
		constexpr auto m_Panel_5 = 0x3d0; // UPanelWidget*
		constexpr auto m_Panel_6 = 0x3d8; // UPanelWidget*
		constexpr auto RESOURCE_ICONID_LOCK = 0x3e0; // int32_t
	}

	namespace n_UMaterialExpressionParticleSpeed { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UFont { // : UObject
		constexpr auto FontCacheType = 0x30; // EFontCacheType
		constexpr auto Characters = 0x38; // TArray<FFontCharacter>
		constexpr auto Textures = 0x48; // TArray<UTexture2D*>
		constexpr auto IsRemapped = 0x58; // int32_t
		constexpr auto EmScale = 0x5c; // float
		constexpr auto Ascent = 0x60; // float
		constexpr auto Descent = 0x64; // float
		constexpr auto Leading = 0x68; // float
		constexpr auto Kerning = 0x6c; // int32_t
		constexpr auto ImportOptions = 0x70; // FFontImportOptionsData
		constexpr auto NumCharacters = 0x120; // int32_t
		constexpr auto MaxCharHeight = 0x128; // TArray<int32_t>
		constexpr auto ScalingFactor = 0x138; // float
		constexpr auto LegacyFontSize = 0x13c; // int32_t
		constexpr auto LegacyFontName = 0x140; // FName
		constexpr auto CompositeFont = 0x148; // FCompositeFont
	}

	namespace n_UPlaneReflectionCaptureComponent { // : UReflectionCaptureComponent
		constexpr auto InfluenceRadiusScale = 0x298; // float
		constexpr auto PreviewInfluenceRadius = 0x2a0; // UDrawSphereComponent*
		constexpr auto PreviewCaptureBox = 0x2a8; // UBoxComponent*
	}

	namespace n_UMM_Guild_Shop { // : UWidgetBase
		constexpr auto mTxtGoodsRecord = 0x2f0; // UMirTextBlock*
		constexpr auto mBtnTooltip = 0x2f8; // UMM_Common_ToolTipBtn*
		constexpr auto mBtnPopupRecord = 0x300; // UMM_Common_Btn_IconText*
		constexpr auto mScrollBox = 0x308; // UMirScrollBox*
		constexpr auto mBtnTabRegist = 0x310; // UMM_Common_Btn_Inven*
		constexpr auto mBtnTabBuy = 0x318; // UMM_Common_Btn_Inven*
		constexpr auto mPanelTargetInfo = 0x320; // UMirCanvasPanel*
		constexpr auto mTargetSlot = 0x328; // UMM_Slot_Inventory*
		constexpr auto mTxtItemDesc = 0x330; // UMirTextBlock*
		constexpr auto mTxtItemName = 0x338; // UMirTextBlock*
		constexpr auto mPanelDevLockRoot = 0x340; // UMirCanvasPanel*
		constexpr auto mPanelDevLock = 0x348; // UMM_GuildDevLock*
		constexpr auto mItemMakeSlider = 0x350; // UMM_Item_Make_Slider*
		constexpr auto mPanelCost = 0x358; // UMirCanvasPanel*
		constexpr auto mImgCostIcon = 0x360; // UMirImage*
		constexpr auto mTxtCost = 0x368; // UMirTextBlock*
		constexpr auto mCBRegist = 0x370; // UMM_Common_Btn*
		constexpr auto mCBBuy = 0x378; // UMM_Common_Btn*
		constexpr auto mGuildShopList = 0x380; // TArray<UMM_Guild_ShopList*>
	}

	namespace n_UMM_DailyWork_List { // : UWidgetBase
		constexpr auto WorkList = 0x2e0; // TArray<UMM_DailyWork_List_Slot*>
		constexpr auto ScrollBox = 0x2f0; // UMirScrollBox*
	}

	namespace n_UMM_Customizing_MainCategoryItem { // : UWidgetBase
		constexpr auto m_pMainCategoryImage = 0x2e0; // UMirImage*
		constexpr auto m_pMainSelectImage = 0x2e8; // UMirImage*
		constexpr auto m_MainCategorySelectBtn = 0x2f0; // UMirButton*
	}

	namespace n_UMM_GameViewportClient { // : UGameViewportClient
		constexpr auto m_pSignificanceTarget = 0x2f0; // AActor*
		constexpr auto m_FadeInCurve = 0x2f8; // UCurveFloat*
		constexpr auto m_FadeOutCurve = 0x300; // UCurveFloat*
		constexpr auto m_CurFadeCurve = 0x308; // UCurveFloat*
	}

	namespace n_UMirColorData { // : UDataAsset
		constexpr auto Text_Default = 0x30; // FLinearColor
		constexpr auto Text_Good = 0x40; // FLinearColor
		constexpr auto Text_Bad = 0x50; // FLinearColor
		constexpr auto Text_Unabled = 0x60; // FLinearColor
		constexpr auto m_arItemGrade = 0x70; // TArray<FLinearColor>
		constexpr auto Gem_Red = 0x80; // FLinearColor
		constexpr auto Gem_SkyBlue = 0x90; // FLinearColor
		constexpr auto Gem_Yellow = 0xa0; // FLinearColor
		constexpr auto Gem_Blue = 0xb0; // FLinearColor
		constexpr auto Gem_Brown = 0xc0; // FLinearColor
		constexpr auto Gem_Green = 0xd0; // FLinearColor
		constexpr auto Gem_BluishViolet = 0xe0; // FLinearColor
		constexpr auto Gem_YellowGreen = 0xf0; // FLinearColor
		constexpr auto Gem_Purple = 0x100; // FLinearColor
		constexpr auto QuestGrade_S = 0x110; // FLinearColor
		constexpr auto QuestGrade_A = 0x120; // FLinearColor
		constexpr auto QuestGrade_B = 0x130; // FLinearColor
		constexpr auto QuestGrade_C = 0x140; // FLinearColor
		constexpr auto QuestGrade_D = 0x150; // FLinearColor
		constexpr auto Goods_Slot_CostMax = 0x160; // FLinearColor
		constexpr auto TotalMenu_Slot_Default = 0x170; // FLinearColor
		constexpr auto TotalMenu_Slot_Selected = 0x180; // FLinearColor
		constexpr auto ServerCongestion_Normal = 0x190; // FLinearColor
		constexpr auto ServerCongestion_Busy = 0x1a0; // FLinearColor
		constexpr auto ServerCongestion_Saturation = 0x1b0; // FLinearColor
		constexpr auto ServerState_Closed = 0x1c0; // FLinearColor
		constexpr auto HUD_PartyTab_Level = 0x1d0; // FLinearColor
		constexpr auto PKArea_TextColor = 0x1e0; // FLinearColor
		constexpr auto SafetyArea_TextColor = 0x1f0; // FLinearColor
		constexpr auto PKNameColor_Lawful = 0x200; // FLinearColor
		constexpr auto PKNameColor_Chaotic = 0x210; // FLinearColor
		constexpr auto PKNameColor_Assault = 0x220; // FLinearColor
		constexpr auto PKNameColor_Aggressor = 0x230; // FLinearColor
		constexpr auto NameColor_Default = 0x240; // FLinearColor
		constexpr auto NameColor_Enemy = 0x250; // FLinearColor
		constexpr auto NameColor_SameParty = 0x260; // FLinearColor
		constexpr auto NameColor_GuildBasic = 0x270; // FLinearColor
		constexpr auto NameColor_SameGuild = 0x280; // FLinearColor
		constexpr auto NameColor_AllyGuild = 0x290; // FLinearColor
		constexpr auto NameColor_ProclaimGuild = 0x2a0; // FLinearColor
		constexpr auto NameColor_GuildWanted = 0x2b0; // FLinearColor
		constexpr auto NameColor_Death = 0x2c0; // FLinearColor
		constexpr auto NameColor_OtherServer = 0x2d0; // FLinearColor
		constexpr auto HpBarColor_Mine = 0x2e0; // FLinearColor
		constexpr auto HpBarColor_Other = 0x2f0; // FLinearColor
		constexpr auto HpBarColor_MyGuild = 0x300; // FLinearColor
		constexpr auto HpBarColor_Ally = 0x310; // FLinearColor
		constexpr auto HpBarColor_Party = 0x320; // FLinearColor
		constexpr auto HpBarColor_Enemy = 0x330; // FLinearColor
		constexpr auto NPCNameColor_Ally = 0x340; // FLinearColor
		constexpr auto NPCNameColor_Enemy = 0x350; // FLinearColor
		constexpr auto ProgressBarColor_Red = 0x360; // FLinearColor
		constexpr auto ProgressBarColor_Green = 0x370; // FLinearColor
		constexpr auto Skill_Slot_Passive_1 = 0x380; // FLinearColor
		constexpr auto Skill_Slot_Passive_2 = 0x390; // FLinearColor
		constexpr auto Skill_Slot_Passive_3 = 0x3a0; // FLinearColor
		constexpr auto Skill_Slot_Passive_4 = 0x3b0; // FLinearColor
		constexpr auto HUD_Damage_MySelf = 0x3c0; // FLinearColor
		constexpr auto HUD_Damage_Enemy = 0x3d0; // FLinearColor
		constexpr auto HUD_Damage_Critical_MySelf = 0x3e0; // FLinearColor
		constexpr auto HUD_Damage_Critical_Enemy = 0x3f0; // FLinearColor
		constexpr auto HUD_Damage_Smite_MySelf = 0x400; // FLinearColor
		constexpr auto HUD_Damage_Smite_Enemy = 0x410; // FLinearColor
		constexpr auto HUD_AttributeDamage_MySelf = 0x420; // FLinearColor
		constexpr auto HUD_AttributeDamage_Enemy = 0x430; // FLinearColor
		constexpr auto HUD_AttributeDamage_Critical_MySelf = 0x440; // FLinearColor
		constexpr auto HUD_AttributeDamage_Critical_Enemy = 0x450; // FLinearColor
		constexpr auto HUD_Dodge_MySelf = 0x460; // FLinearColor
		constexpr auto HUD_Dodge_Enemy = 0x470; // FLinearColor
		constexpr auto HUD_Miss_MySelf = 0x480; // FLinearColor
		constexpr auto HUD_Miss_Enemy = 0x490; // FLinearColor
		constexpr auto HUD_Immune_MySelf = 0x4a0; // FLinearColor
		constexpr auto HUD_Immune_Enemy = 0x4b0; // FLinearColor
		constexpr auto HUD_Absorb_MySelf = 0x4c0; // FLinearColor
		constexpr auto HUD_Absorb_Enemy = 0x4d0; // FLinearColor
		constexpr auto HUD_ProtectPVP_MySelf = 0x4e0; // FLinearColor
		constexpr auto HUD_ProtectPVP_Enemy = 0x4f0; // FLinearColor
		constexpr auto HUD_Resist_MySelf = 0x500; // FLinearColor
		constexpr auto HUD_Resist_Enemy = 0x510; // FLinearColor
		constexpr auto HUD_CCResist_MySelf = 0x520; // FLinearColor
		constexpr auto HUD_CCResist_Enemy = 0x530; // FLinearColor
		constexpr auto HUD_HP_Plus = 0x540; // FLinearColor
		constexpr auto HUD_MP_Plus = 0x550; // FLinearColor
		constexpr auto HUD_MP_Minus = 0x560; // FLinearColor
		constexpr auto HUD_Spirit_Plus = 0x570; // FLinearColor
		constexpr auto HUD_Spirit_Minus = 0x580; // FLinearColor
		constexpr auto HUD_EXP_Plus = 0x590; // FLinearColor
		constexpr auto HUD_Gold_Plus = 0x5a0; // FLinearColor
		constexpr auto HUD_Combo_2 = 0x5b0; // FLinearColor
		constexpr auto HUD_Combo_11 = 0x5c0; // FLinearColor
		constexpr auto HUD_Combo_101 = 0x5d0; // FLinearColor
		constexpr auto HUD_Friend_Buff = 0x5e0; // FLinearColor
		constexpr auto HUD_Friend_Debuff = 0x5f0; // FLinearColor
		constexpr auto HUD_Enemy_Deuff = 0x600; // FLinearColor
		constexpr auto HUD_Friend_CCState = 0x610; // FLinearColor
		constexpr auto HUD_Enemy_CCState = 0x620; // FLinearColor
		constexpr auto ChannelState_Good = 0x630; // FLinearColor
		constexpr auto ChannelState_Normal = 0x640; // FLinearColor
		constexpr auto ChannelState_Busy = 0x650; // FLinearColor
		constexpr auto ChannelState_Heavy = 0x660; // FLinearColor
		constexpr auto ChannelState_Full = 0x670; // FLinearColor
		constexpr auto GrowthListColor = 0x680; // TMap<int32_t, FLinearColor>
		constexpr auto PKModeListColor = 0x6d0; // TMap<EPKModeType, FLinearColor>
		constexpr auto ChatChannel_Local = 0x720; // FLinearColor
		constexpr auto ChatChannel_World = 0x730; // FLinearColor
		constexpr auto ChatChannel_Party = 0x740; // FLinearColor
		constexpr auto ChatChannel_Whisper = 0x750; // FLinearColor
		constexpr auto ChatChannel_Guild = 0x760; // FLinearColor
		constexpr auto ChatChannel_System = 0x770; // FLinearColor
		constexpr auto Guild_PermissionJoin = 0x780; // FLinearColor
		constexpr auto Guild_FreeJoin = 0x790; // FLinearColor
		constexpr auto Guild_InviteJoin = 0x7a0; // FLinearColor
		constexpr auto Guild_Uniform_SameGuild = 0x7b0; // FLinearColor
		constexpr auto Guild_Uniform_AllianceGuild = 0x7c0; // FLinearColor
		constexpr auto Guild_Uniform_EnemyGuild = 0x7d0; // FLinearColor
		constexpr auto Guild_Uniform_EnemyAllianceGuild = 0x7e0; // FLinearColor
		constexpr auto Lucky_Normal = 0x7f0; // FLinearColor
		constexpr auto Lucky_Excellent = 0x800; // FLinearColor
		constexpr auto Lucky_Great = 0x810; // FLinearColor
		constexpr auto Lucky_Fever = 0x820; // FLinearColor
		constexpr auto Mastery_LimitStatusValue_Cur = 0x830; // FLinearColor
		constexpr auto Mastery_LimitStatusValue_Next = 0x840; // FLinearColor
		constexpr auto Mastery_Selected_Slot_Not_Limit = 0x850; // FLinearColor
		constexpr auto Mastery_Selected_Slot_On_Limit = 0x860; // FLinearColor
		constexpr auto ContentsGetItem_Title_Contents = 0x870; // FLinearColor
		constexpr auto ContentsRandomOptionGradeD = 0x880; // FLinearColor
		constexpr auto ContentsRandomOptionGradeC = 0x890; // FLinearColor
		constexpr auto ContentsRandomOptionGradeB = 0x8a0; // FLinearColor
		constexpr auto ContentsRandomOptionGradeA = 0x8b0; // FLinearColor
		constexpr auto ContentsRandomOptionGradeS = 0x8c0; // FLinearColor
		constexpr auto ContentsRandomOptionGradeSS = 0x8d0; // FLinearColor
		constexpr auto ContentsRandomOptionGradeSSS = 0x8e0; // FLinearColor
		constexpr auto ContentsRandomOptionPassive = 0x8f0; // FLinearColor
		constexpr auto SectorGrade_High = 0x900; // FLinearColor
		constexpr auto SectorGrade_Rare = 0x910; // FLinearColor
		constexpr auto SectorGrade_Hero = 0x920; // FLinearColor
		constexpr auto SectorGrade_Legend = 0x930; // FLinearColor
		constexpr auto WinTarget_Seal = 0x940; // FLinearColor
		constexpr auto WinTarget_Protection = 0x950; // FLinearColor
		constexpr auto WinTarget_UnProtection = 0x960; // FLinearColor
		constexpr auto WinTarget_UnProtection_MyGuild = 0x970; // FLinearColor
		constexpr auto WinTarget_UnProtection_OtherGuild = 0x980; // FLinearColor
		constexpr auto Connect_State_On = 0x990; // FLinearColor
		constexpr auto Connect_State_Off = 0x9a0; // FLinearColor
		constexpr auto NAME_FriendlyColor = 0x9b0; // FLinearColor
		constexpr auto NAME_PartyColor = 0x9c0; // FLinearColor
		constexpr auto NAME_CommonColor = 0x9d0; // FLinearColor
		constexpr auto NAME_HostileColor = 0x9e0; // FLinearColor
		constexpr auto SYSTEM_ImportantColor = 0x9f0; // FLinearColor
		constexpr auto SYSTEM_CommonColor = 0xa00; // FLinearColor
		constexpr auto SYSTEM_GoodInfoColor = 0xa10; // FLinearColor
		constexpr auto SYSTEM_GoldColor = 0xa20; // FLinearColor
		constexpr auto SYSTEM_WarningColor = 0xa30; // FLinearColor
		constexpr auto UI_TEXT_White = 0xa40; // FLinearColor
		constexpr auto UI_TEXT_Gray = 0xa50; // FLinearColor
		constexpr auto UI_TEXT_Red = 0xa60; // FLinearColor
		constexpr auto UI_TEXT_Green = 0xa70; // FLinearColor
		constexpr auto UI_TEXT_Blue = 0xa80; // FLinearColor
		constexpr auto HUD_TEXT_MP = 0xa90; // FLinearColor
		constexpr auto HUD_TEXT_SP = 0xaa0; // FLinearColor
		constexpr auto HUD_PK_Peace = 0xab0; // FLinearColor
		constexpr auto HUD_PK_Nor = 0xac0; // FLinearColor
		constexpr auto HUD_PK_Kill = 0xad0; // FLinearColor
		constexpr auto FONT_MAIN = 0xae0; // FLinearColor
		constexpr auto FONT_SUB = 0xaf0; // FLinearColor
		constexpr auto FONT_POINT1 = 0xb00; // FLinearColor
		constexpr auto FONT_POINT2 = 0xb10; // FLinearColor
		constexpr auto FONT_ETC_SUB1 = 0xb20; // FLinearColor
		constexpr auto FONT_ETC_SUB2 = 0xb30; // FLinearColor
		constexpr auto FONT_INCREASE = 0xb40; // FLinearColor
		constexpr auto FONT_DECREASE = 0xb50; // FLinearColor
		constexpr auto VERY_HARD_MISSION = 0xb60; // FLinearColor
		constexpr auto HARD_MISSION = 0xb70; // FLinearColor
		constexpr auto NORMAL_MISSION = 0xb80; // FLinearColor
		constexpr auto EASY_MISSION = 0xb90; // FLinearColor
		constexpr auto HUD_QuestTracker_MainTitle = 0xba0; // FLinearColor
		constexpr auto HUD_QuestTracker_NormalTitle = 0xbb0; // FLinearColor
		constexpr auto HUD_QuestTracker_RepeatTitle = 0xbc0; // FLinearColor
		constexpr auto HUD_QuestTracker_CurrentStageMissionText = 0xbd0; // FLinearColor
		constexpr auto HUD_QuestTracker_OtherStageMissionText = 0xbe0; // FLinearColor
		constexpr auto ITEMINFO_NORMAL = 0xbf0; // FLinearColor
		constexpr auto ITEMINFO_GREEN = 0xc00; // FLinearColor
		constexpr auto ITEMINFO_BLUE = 0xc10; // FLinearColor
		constexpr auto TargetUserGrowthListColor = 0xc20; // TMap<int32_t, FLinearColor>
		constexpr auto SLEEPMODE_NORMAL = 0xc70; // FLinearColor
		constexpr auto SLEEPMODE_RED = 0xc80; // FLinearColor
		constexpr auto SLEEPMODE_BLUE = 0xc90; // FLinearColor
		constexpr auto SLEEPMODE_MP_RED = 0xca0; // FLinearColor
		constexpr auto SLEEPMODE_MP_BLUE = 0xcb0; // FLinearColor
		constexpr auto TERM_ITEM_DEFAULT = 0xcc0; // FLinearColor
		constexpr auto TERM_ITEM_YELLOW = 0xcd0; // FLinearColor
		constexpr auto TERM_ITEM_RED = 0xce0; // FLinearColor
		constexpr auto DominationTitleGradeColor = 0xcf0; // TMap<int32_t, FLinearColor>
		constexpr auto STATUS_FOCUS = 0xd40; // FLinearColor
		constexpr auto BUILDING_ENABLE_STEPUP_CONDITION = 0xd50; // FLinearColor
		constexpr auto BUILDING_ENABLE_OPEN_CONDITION = 0xd60; // FLinearColor
		constexpr auto BUILDING_DISABLE_CONDITION = 0xd70; // FLinearColor
		constexpr auto ItemGetWayListColor = 0xd80; // TMap<int32_t, FLinearColor>
		constexpr auto FORCE_BLOOD_MAX_COLOR = 0xdd0; // FLinearColor
		constexpr auto FORCE_BLOOD_COLOR = 0xde0; // FLinearColor
		constexpr auto FORCE_PANALTY_COLOR = 0xdf0; // FLinearColor
		constexpr auto OFFICAL_TITLE_COLOR = 0xe00; // FLinearColor
		constexpr auto OFFICAL_TITLE_DISABLE_COLOR = 0xe10; // FLinearColor
		constexpr auto SkillGrade1 = 0xe20; // FLinearColor
		constexpr auto SkillGrade2 = 0xe30; // FLinearColor
		constexpr auto SkillGrade3 = 0xe40; // FLinearColor
		constexpr auto DurationSkill = 0xe50; // FLinearColor
		constexpr auto SpecialSkill = 0xe60; // FLinearColor
		constexpr auto AGENCY_TERM_YELLOW = 0xe70; // FLinearColor
		constexpr auto AGENCY_TERM_RED = 0xe80; // FLinearColor
		constexpr auto ItemSlotText_BuffRemainTime = 0xe90; // FLinearColor
	}

	namespace n_ACharSelCameraControl { // : ACameraControlBase
		constexpr auto m_pBackupCameraActor = 0x938; // AActor*
	}

	namespace n_UCharacterMovementComponent { // : UPawnMovementComponent
		constexpr auto CharacterOwner = 0x148; // ACharacter*
		constexpr auto GravityScale = 0x150; // float
		constexpr auto MaxStepHeight = 0x154; // float
		constexpr auto JumpZVelocity = 0x158; // float
		constexpr auto JumpOffJumpZFactor = 0x15c; // float
		constexpr auto WalkableFloorAngle = 0x160; // float
		constexpr auto WalkableFloorZ = 0x164; // float
		constexpr auto MovementMode = 0x168; // EMovementMode
		constexpr auto CustomMovementMode = 0x169; // char
		constexpr auto NetworkSmoothingMode = 0x16a; // ENetworkSmoothingMode
		constexpr auto GroundFriction = 0x16c; // float
		constexpr auto MaxWalkSpeed = 0x18c; // float
		constexpr auto MaxWalkSpeedCrouched = 0x190; // float
		constexpr auto MaxSwimSpeed = 0x194; // float
		constexpr auto MaxFlySpeed = 0x198; // float
		constexpr auto MaxCustomMovementSpeed = 0x19c; // float
		constexpr auto MaxAcceleration = 0x1a0; // float
		constexpr auto MinAnalogWalkSpeed = 0x1a4; // float
		constexpr auto BrakingFrictionFactor = 0x1a8; // float
		constexpr auto BrakingFriction = 0x1ac; // float
		constexpr auto BrakingSubStepTime = 0x1b0; // float
		constexpr auto BrakingDecelerationWalking = 0x1b4; // float
		constexpr auto BrakingDecelerationFalling = 0x1b8; // float
		constexpr auto BrakingDecelerationSwimming = 0x1bc; // float
		constexpr auto BrakingDecelerationFlying = 0x1c0; // float
		constexpr auto AirControl = 0x1c4; // float
		constexpr auto AirControlBoostMultiplier = 0x1c8; // float
		constexpr auto AirControlBoostVelocityThreshold = 0x1cc; // float
		constexpr auto FallingLateralFriction = 0x1d0; // float
		constexpr auto CrouchedHalfHeight = 0x1d4; // float
		constexpr auto Buoyancy = 0x1d8; // float
		constexpr auto PerchRadiusThreshold = 0x1dc; // float
		constexpr auto PerchAdditionalHeight = 0x1e0; // float
		constexpr auto RotationRate = 0x1e4; // FRotator
		constexpr auto bUseSeparateBrakingFriction = 0x1f0; // char : 1
		constexpr auto bApplyGravityWhileJumping = 0x1f0; // char : 1
		constexpr auto bUseControllerDesiredRotation = 0x1f0; // char : 1
		constexpr auto bOrientRotationToMovement = 0x1f0; // char : 1
		constexpr auto bSweepWhileNavWalking = 0x1f0; // char : 1
		constexpr auto bMovementInProgress = 0x1f0; // char : 1
		constexpr auto bEnableScopedMovementUpdates = 0x1f0; // char : 1
		constexpr auto bEnableServerDualMoveScopedMovementUpdates = 0x1f1; // char : 1
		constexpr auto bForceMaxAccel = 0x1f1; // char : 1
		constexpr auto bRunPhysicsWithNoController = 0x1f1; // char : 1
		constexpr auto bForceNextFloorCheck = 0x1f1; // char : 1
		constexpr auto bShrinkProxyCapsule = 0x1f1; // char : 1
		constexpr auto bCanWalkOffLedges = 0x1f1; // char : 1
		constexpr auto bCanWalkOffLedgesWhenCrouching = 0x1f1; // char : 1
		constexpr auto bNetworkSkipProxyPredictionOnNetUpdate = 0x1f2; // char : 1
		constexpr auto bNetworkAlwaysReplicateTransformUpdateTimestamp = 0x1f2; // char : 1
		constexpr auto bDeferUpdateMoveComponent = 0x1f2; // char : 1
		constexpr auto bEnablePhysicsInteraction = 0x1f2; // char : 1
		constexpr auto bTouchForceScaledToMass = 0x1f2; // char : 1
		constexpr auto bPushForceScaledToMass = 0x1f2; // char : 1
		constexpr auto bPushForceUsingZOffset = 0x1f2; // char : 1
		constexpr auto bScalePushForceToVelocity = 0x1f3; // char : 1
		constexpr auto DeferredUpdatedMoveComponent = 0x1f8; // USceneComponent*
		constexpr auto MaxOutOfWaterStepHeight = 0x200; // float
		constexpr auto OutofWaterZ = 0x204; // float
		constexpr auto Mass = 0x208; // float
		constexpr auto StandingDownwardForceScale = 0x20c; // float
		constexpr auto InitialPushForceFactor = 0x210; // float
		constexpr auto PushForceFactor = 0x214; // float
		constexpr auto PushForcePointZOffsetFactor = 0x218; // float
		constexpr auto TouchForceFactor = 0x21c; // float
		constexpr auto MinTouchForce = 0x220; // float
		constexpr auto MaxTouchForce = 0x224; // float
		constexpr auto RepulsionForce = 0x228; // float
		constexpr auto Acceleration = 0x22c; // FVector
		constexpr auto LastUpdateRotation = 0x240; // FQuat
		constexpr auto LastUpdateLocation = 0x250; // FVector
		constexpr auto LastUpdateVelocity = 0x25c; // FVector
		constexpr auto ServerLastTransformUpdateTimeStamp = 0x268; // float
		constexpr auto ServerLastClientGoodMoveAckTime = 0x26c; // float
		constexpr auto ServerLastClientAdjustmentTime = 0x270; // float
		constexpr auto PendingImpulseToApply = 0x274; // FVector
		constexpr auto PendingForceToApply = 0x280; // FVector
		constexpr auto AnalogInputModifier = 0x28c; // float
		constexpr auto MaxSimulationTimeStep = 0x29c; // float
		constexpr auto MaxSimulationIterations = 0x2a0; // int32_t
		constexpr auto MaxJumpApexAttemptsPerSimulation = 0x2a4; // int32_t
		constexpr auto MaxDepenetrationWithGeometry = 0x2a8; // float
		constexpr auto MaxDepenetrationWithGeometryAsProxy = 0x2ac; // float
		constexpr auto MaxDepenetrationWithPawn = 0x2b0; // float
		constexpr auto MaxDepenetrationWithPawnAsProxy = 0x2b4; // float
		constexpr auto NetworkSimulatedSmoothLocationTime = 0x2b8; // float
		constexpr auto NetworkSimulatedSmoothRotationTime = 0x2bc; // float
		constexpr auto ListenServerNetworkSimulatedSmoothLocationTime = 0x2c0; // float
		constexpr auto ListenServerNetworkSimulatedSmoothRotationTime = 0x2c4; // float
		constexpr auto NetProxyShrinkRadius = 0x2c8; // float
		constexpr auto NetProxyShrinkHalfHeight = 0x2cc; // float
		constexpr auto NetworkMaxSmoothUpdateDistance = 0x2d0; // float
		constexpr auto NetworkNoSmoothUpdateDistance = 0x2d4; // float
		constexpr auto NetworkMinTimeBetweenClientAckGoodMoves = 0x2d8; // float
		constexpr auto NetworkMinTimeBetweenClientAdjustments = 0x2dc; // float
		constexpr auto NetworkMinTimeBetweenClientAdjustmentsLargeCorrection = 0x2e0; // float
		constexpr auto NetworkLargeClientCorrectionDistance = 0x2e4; // float
		constexpr auto LedgeCheckThreshold = 0x2e8; // float
		constexpr auto JumpOutOfWaterPitch = 0x2ec; // float
		constexpr auto CurrentFloor = 0x2f0; // FFindFloorResult
		constexpr auto DefaultLandMovementMode = 0x384; // EMovementMode
		constexpr auto DefaultWaterMovementMode = 0x385; // EMovementMode
		constexpr auto GroundMovementMode = 0x386; // EMovementMode
		constexpr auto bMaintainHorizontalGroundVelocity = 0x387; // char : 1
		constexpr auto bImpartBaseVelocityX = 0x387; // char : 1
		constexpr auto bImpartBaseVelocityY = 0x387; // char : 1
		constexpr auto bImpartBaseVelocityZ = 0x387; // char : 1
		constexpr auto bImpartBaseAngularVelocity = 0x387; // char : 1
		constexpr auto bJustTeleported = 0x387; // char : 1
		constexpr auto bNetworkUpdateReceived = 0x387; // char : 1
		constexpr auto bNetworkMovementModeChanged = 0x387; // char : 1
		constexpr auto bIgnoreClientMovementErrorChecksAndCorrection = 0x388; // char : 1
		constexpr auto bServerAcceptClientAuthoritativePosition = 0x388; // char : 1
		constexpr auto bNotifyApex = 0x388; // char : 1
		constexpr auto bCheatFlying = 0x388; // char : 1
		constexpr auto bWantsToCrouch = 0x388; // char : 1
		constexpr auto bCrouchMaintainsBaseLocation = 0x388; // char : 1
		constexpr auto bIgnoreBaseRotation = 0x388; // char : 1
		constexpr auto bFastAttachedMove = 0x388; // char : 1
		constexpr auto bAlwaysCheckFloor = 0x389; // char : 1
		constexpr auto bUseFlatBaseForFloorChecks = 0x389; // char : 1
		constexpr auto bPerformingJumpOff = 0x389; // char : 1
		constexpr auto bWantsToLeaveNavWalking = 0x389; // char : 1
		constexpr auto bUseRVOAvoidance = 0x389; // char : 1
		constexpr auto bRequestedMoveUseAcceleration = 0x389; // char : 1
		constexpr auto bWasSimulatingRootMotion = 0x389; // char : 1
		constexpr auto bAllowPhysicsRotationDuringAnimRootMotion = 0x38a; // char : 1
		constexpr auto bHasRequestedVelocity = 0x38a; // char : 1
		constexpr auto bRequestedMoveWithMaxSpeed = 0x38a; // char : 1
		constexpr auto bWasAvoidanceUpdated = 0x38a; // char : 1
		constexpr auto bProjectNavMeshWalking = 0x38a; // char : 1
		constexpr auto bProjectNavMeshOnBothWorldChannels = 0x38a; // char : 1
		constexpr auto AvoidanceConsiderationRadius = 0x39c; // float
		constexpr auto RequestedVelocity = 0x3a0; // FVector
		constexpr auto AvoidanceUID = 0x3ac; // int32_t
		constexpr auto AvoidanceGroup = 0x3b0; // FNavAvoidanceMask
		constexpr auto GroupsToAvoid = 0x3b4; // FNavAvoidanceMask
		constexpr auto GroupsToIgnore = 0x3b8; // FNavAvoidanceMask
		constexpr auto AvoidanceWeight = 0x3bc; // float
		constexpr auto PendingLaunchVelocity = 0x3c0; // FVector
		constexpr auto NavMeshProjectionInterval = 0x470; // float
		constexpr auto NavMeshProjectionTimer = 0x474; // float
		constexpr auto NavMeshProjectionInterpSpeed = 0x478; // float
		constexpr auto NavMeshProjectionHeightScaleUp = 0x47c; // float
		constexpr auto NavMeshProjectionHeightScaleDown = 0x480; // float
		constexpr auto NavWalkingFloorDistTolerance = 0x484; // float
		constexpr auto PostPhysicsTickFunction = 0x488; // FCharacterMovementComponentPostPhysicsTickFunction
		constexpr auto MinTimeBetweenTimeStampResets = 0x4d0; // float
		constexpr auto CurrentRootMotion = 0x4d8; // FRootMotionSourceGroup
		constexpr auto RootMotionParams = 0x660; // FRootMotionMovementParams
		constexpr auto AnimRootMotionVelocity = 0x6a0; // FVector
	}

	namespace n_UMM_Auction_Tab_Search { // : UMM_Auction_Tab_Base
		constexpr auto m_pNotice = 0x300; // UMM_Common_Board_Notice*
		constexpr auto m_pTabSearchList = 0x308; // UMM_CommonVerticalTabTreeSet*
		constexpr auto m_pCanvalBack = 0x310; // UMirCanvasPanel*
		constexpr auto m_pBtnBack = 0x318; // UMirButton*
		constexpr auto m_pListView = 0x320; // UMirListView*
		constexpr auto m_pFilterGroup = 0x328; // UMM_Auction_Tab_Search_TabGroup*
		constexpr auto m_pColumnName = 0x330; // UMM_Auction_Tab_Search_ColumnName*
	}

	namespace n_UMM_Guild_Dev_BenefitList { // : UWidgetBase
		constexpr auto m_pParentWidget = 0x260; // UWidgetBase*
		constexpr auto m_arChildWidget = 0x268; // TArray<TWeakObjectPtr<UWidgetBase>>
		constexpr auto m_arMirTextBlock = 0x280; // TArray<TWeakObjectPtr<UMirTextBlock>>
		constexpr auto m_arMirRichTextBlock = 0x290; // TArray<TWeakObjectPtr<UMirRichTextBlock>>
		constexpr auto m_arMirEditableText = 0x2a0; // TArray<TWeakObjectPtr<UMirEditableText>>
		constexpr auto m_arMirImage = 0x2b0; // TArray<TWeakObjectPtr<UMirImage>>
	}

	namespace n_UMM_Popup_Occupation_Proclamation { // : UWidgetBase
		constexpr auto m_Txt_Title = 0x2f0; // UMirTextBlock*
		constexpr auto m_Switcher_GuildInfo = 0x2f8; // UWidgetSwitcher*
		constexpr auto m_Widget_GuildIcon = 0x300; // UMM_GuildIcon*
		constexpr auto m_Btn_GuildInfo = 0x308; // UMirButton*
		constexpr auto m_Txt_OccupationPeriod = 0x310; // UMirTextBlock*
		constexpr auto m_Txt_Occupation_None = 0x318; // UMirTextBlock*
		constexpr auto m_Txt_Occupation_Status = 0x320; // UMirTextBlock*
		constexpr auto m_Txt_NextBattleRemainTime = 0x328; // UMirTextBlock*
		constexpr auto m_Btn_Translation_Notice = 0x330; // UMM_Common_Btn_Translation*
		constexpr auto m_Scroll_Txt_Notice = 0x338; // UMirScrollBox*
		constexpr auto m_Txt_Notice = 0x340; // UMirTextBlock*
		constexpr auto m_EmptyCommonBoard = 0x348; // UMM_Common_Board_Notice*
		constexpr auto m_Check_StopWatchingToday = 0x350; // UMirCheckBox*
		constexpr auto m_Btn_Ok = 0x358; // UMM_Common_Btn*
		constexpr auto m_Btn_Close = 0x360; // UMM_Common_Btn_Symbol*
	}

	namespace n_ASceneCaptureLevelScriptActor { // : ALevelScriptActor
		constexpr auto CurrentClassType = 0x220; // EClassType
		constexpr auto CurrentContentsSceneType = 0x221; // EContentsSceneType
		constexpr auto CurrentCameraType = 0x224; // int32_t
		constexpr auto StartPoint = 0x228; // FVector
		constexpr auto BackGroundUILocation = 0x234; // FVector
		constexpr auto SpawnedActor = 0x240; // AActor*
		constexpr auto BackGroundActor = 0x248; // AUIBackGroundActor*
	}

	namespace n_UAISubsystem { // : UObject
		constexpr auto AISystem = 0x30; // UAISystem*
	}

	namespace n_UMM_Slot_Material_CircleA { // : UMM_Slot_Material_Item
		constexpr auto m_Smelt = 0x440; // UMirTextBlock*
	}

	namespace n_UMM_ContentsState { // : UWidgetBase
		constexpr auto m_Txt_TitleName = 0x2e0; // UMirTextBlock*
		constexpr auto m_Txt_TitleValue = 0x2e8; // UMirTextBlock*
		constexpr auto m_arHrz_State = 0x2f0; // UPanelWidget* [0x8]
		constexpr auto m_arImg_StateIcon = 0x330; // UMirImage* [0x8]
		constexpr auto m_arTxt_StateName = 0x370; // UMirTextBlock* [0x8]
		constexpr auto m_arRTxt_StateValue = 0x3b0; // UMirRichTextBlock* [0x8]
	}

	namespace n_UMaterialExpressionParticleMotionBlurFade { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UDefaultLevelSequenceInstanceData { // : UObject
		constexpr auto TransformOriginActor = 0x30; // AActor*
		constexpr auto TransformOrigin = 0x40; // FTransform
	}

	namespace n_UDataTable { // : UObject
		constexpr auto RowStruct = 0x28; // UScriptStruct*
		constexpr auto bStripFromClientBuilds = 0x80; // char : 1
		constexpr auto bIgnoreExtraFields = 0x80; // char : 1
		constexpr auto bIgnoreMissingFields = 0x80; // char : 1
		constexpr auto ImportKeyField = 0x88; // FString
	}

	namespace n_UPlanarReflectionComponent { // : USceneCaptureComponent
		constexpr auto PreviewBox = 0x2d0; // UBoxComponent*
		constexpr auto NormalDistortionStrength = 0x2d8; // float
		constexpr auto PrefilterRoughness = 0x2dc; // float
		constexpr auto PrefilterRoughnessDistance = 0x2e0; // float
		constexpr auto ScreenPercentage = 0x2e4; // int32_t
		constexpr auto ExtraFOV = 0x2e8; // float
		constexpr auto DistanceFromPlaneFadeStart = 0x2ec; // float
		constexpr auto DistanceFromPlaneFadeEnd = 0x2f0; // float
		constexpr auto DistanceFromPlaneFadeoutStart = 0x2f4; // float
		constexpr auto DistanceFromPlaneFadeoutEnd = 0x2f8; // float
		constexpr auto AngleFromPlaneFadeStart = 0x2fc; // float
		constexpr auto AngleFromPlaneFadeEnd = 0x300; // float
		constexpr auto bShowPreviewPlane = 0x304; // bool
		constexpr auto bRenderSceneTwoSided = 0x305; // bool
	}

	namespace n_UMM_B_PopupNFTCharacterList { // : UWidgetBase
		constexpr auto btn_close = 0x2e0; // UMM_Common_Btn_Symbol*
		constexpr auto btn_refresh = 0x2e8; // UMM_Common_Btn*
		constexpr auto btn_confirm = 0x2f0; // UMM_Common_Btn*
		constexpr auto sb_character = 0x2f8; // UMirScrollBox*
	}

	namespace n_UMovieSceneCapture { // : UObject
		constexpr auto ImageCaptureProtocolType = 0x38; // FSoftClassPath
		constexpr auto AudioCaptureProtocolType = 0x50; // FSoftClassPath
		constexpr auto ImageCaptureProtocol = 0x68; // UMovieSceneImageCaptureProtocolBase*
		constexpr auto AudioCaptureProtocol = 0x70; // UMovieSceneAudioCaptureProtocolBase*
		constexpr auto Settings = 0x78; // FMovieSceneCaptureSettings
		constexpr auto bUseSeparateProcess = 0xe8; // bool
		constexpr auto bCloseEditorWhenCaptureStarts = 0xe9; // bool
		constexpr auto AdditionalCommandLineArguments = 0xf0; // FString
		constexpr auto InheritedCommandLineArguments = 0x100; // FString
	}

	namespace n_UInterpTrack { // : UObject
		constexpr auto SubTracks = 0x38; // TArray<UInterpTrack*>
		constexpr auto TrackInstClass = 0x48; // UInterpTrackInst*
		constexpr auto ActiveCondition = 0x50; // ETrackActiveCondition
		constexpr auto TrackTitle = 0x58; // FString
		constexpr auto bOnePerGroup = 0x68; // char : 1
		constexpr auto bDirGroupOnly = 0x68; // char : 1
		constexpr auto bDisableTrack = 0x68; // char : 1
		constexpr auto bIsSelected = 0x68; // char : 1
		constexpr auto bIsAnimControlTrack = 0x68; // char : 1
		constexpr auto bSubTrackOnly = 0x68; // char : 1
		constexpr auto bVisible = 0x68; // char : 1
		constexpr auto bIsRecording = 0x68; // char : 1
	}

	namespace n_AMM_CustomizingLevelActor { // : AActor
		constexpr auto m_pPlanarReflectionComp = 0x218; // UPlanarReflectionComponent*
		constexpr auto m_pCamera = 0x220; // ACameraActor*
		constexpr auto m_pCustomizingTargetPoint = 0x228; // AActor*
		constexpr auto m_CurrentActor = 0x230; // AActor*
		constexpr auto m_ClassID = 0x238; // int32_t
	}

	namespace n_UMM_HudPartyManage { // : UWidgetBase
		constexpr auto BTN_PartyCreateStringID = 0x2e0; // int32_t
		constexpr auto BTN_IconTID = 0x2e4; // int32_t
		constexpr auto m_ImgIcon = 0x2e8; // UImage*
		constexpr auto m_TxtMain = 0x2f0; // UTextBlock*
		constexpr auto m_BtnMain = 0x2f8; // UButton*
	}

	namespace n_UMovieSceneSubTrack { // : UMovieSceneNameableTrack
		constexpr auto Sections = 0x58; // TArray<UMovieSceneSection*>
	}

	namespace n_UParticleModuleLocationBoneSocket { // : UParticleModuleLocationBase
		constexpr auto SourceType = 0x30; // ELocationBoneSocketSource
		constexpr auto UniversalOffset = 0x34; // FVector
		constexpr auto SourceLocations = 0x40; // TArray<FLocationBoneSocketInfo>
		constexpr auto SelectionMethod = 0x50; // ELocationBoneSocketSelectionMethod
		constexpr auto bUpdatePositionEachFrame = 0x54; // char : 1
		constexpr auto bOrientMeshEmitters = 0x54; // char : 1
		constexpr auto bInheritBoneVelocity = 0x54; // char : 1
		constexpr auto InheritVelocityScale = 0x58; // float
		constexpr auto SkelMeshActorParamName = 0x5c; // FName
		constexpr auto NumPreSelectedIndices = 0x64; // int32_t
	}

	namespace n_ULightPropagationVolumeBlendable { // : UObject
		constexpr auto Settings = 0x30; // FLightPropagationVolumeSettings
		constexpr auto BlendWeight = 0x70; // float
	}

	namespace n_UBlackboardKeyType_Enum { // : UBlackboardKeyType
		constexpr auto EnumType = 0x30; // UEnum*
		constexpr auto EnumName = 0x38; // FString
		constexpr auto bIsEnumNameValid = 0x48; // char : 1
	}

	namespace n_UEnvQueryGenerator_ActorsOfClass { // : UEnvQueryGenerator
		constexpr auto SearchedActorClass = 0x50; // AActor*
		constexpr auto GenerateOnlyActorsInRadius = 0x58; // FAIDataProviderBoolValue
		constexpr auto SearchRadius = 0x88; // FAIDataProviderFloatValue
		constexpr auto SearchCenter = 0xb8; // UEnvQueryContext*
	}

	namespace n_UMM_UserEvent_Tab_Slot { // : UWidgetBase
		constexpr auto m_Can_Tab = 0x2f0; // UMirCanvasPanel*
		constexpr auto m_WebBanner = 0x2f8; // UMM_UserEvent_WebBanner*
		constexpr auto m_Txt_Name = 0x300; // UMirTextBlock*
		constexpr auto m_Img_Thumb = 0x308; // UMirImage*
		constexpr auto m_Img_Alarm = 0x310; // UMirImage*
		constexpr auto m_Img_Selected = 0x318; // UMirImage*
		constexpr auto m_Img_Banner = 0x320; // UMirImage*
		constexpr auto m_Btn_Main = 0x328; // UMirButton*
	}

	namespace n_UMM_GuildSupportSlot { // : UWidgetBase
		constexpr auto Portrait = 0x2e0; // UMM_GuildMemberPortrait*
		constexpr auto txt_nickname = 0x2e8; // UMirTextBlock*
		constexpr auto txt_custom_title = 0x2f0; // UMirTextBlock*
		constexpr auto slot_reward = 0x2f8; // UMM_Slot_Material*
		constexpr auto txt_reward = 0x300; // UMirTextBlock*
		constexpr auto pb_count = 0x308; // UMirProgressBar*
		constexpr auto txt_count = 0x310; // UMirTextBlock*
		constexpr auto img_my_support = 0x318; // UMirImage*
	}

	namespace n_ULocalPlayer { // : UPlayer
		constexpr auto ViewportClient = 0x70; // UGameViewportClient*
		constexpr auto AspectRatioAxisConstraint = 0x9c; // EAspectRatioAxisConstraint
		constexpr auto PendingLevelPlayerControllerClass = 0xa0; // APlayerController*
		constexpr auto bSentSplitJoin = 0xa8; // char : 1
		constexpr auto ControllerId = 0xc0; // int32_t
	}

	namespace n_UMM_UIAction_NPC_Making { // : UMM_UIAction
		constexpr auto MAX_MATERIAL_NUM = 0x140; // int32_t
		constexpr auto m_CurrentGroup = 0x144; // int32_t
		constexpr auto m_SelectedMakeID = 0x148; // int32_t
		constexpr auto STRING_MSG_NOTENOUGH_LEVEL = 0x160; // int32_t
		constexpr auto NotEnoughMaterial = 0x164; // int32_t
		constexpr auto NotEnoughCost = 0x168; // int32_t
	}

	namespace n_UMM_Popup_DominionPrizeSlot { // : UWidgetBase
		constexpr auto m_pImgIcon = 0x2e0; // UMirImage*
		constexpr auto m_pTxtName = 0x2e8; // UMirTextBlock*
		constexpr auto m_pTxtCount = 0x2f0; // UMirTextBlock*
		constexpr auto m_pTxtMaxCount = 0x2f8; // UMirTextBlock*
		constexpr auto m_pBtnOk = 0x300; // UMM_Common_Btn_Cost*
		constexpr auto m_pBtnInfo = 0x308; // UMirButton*
		constexpr auto m_pTxtDoPrize = 0x310; // UMirTextBlock*
	}

	namespace n_UMovieScene3DPathTrack { // : UMovieScene3DConstraintTrack
		constexpr auto ConstraintSections = 0x58; // TArray<UMovieSceneSection*>
	}

	namespace n_UMirCheckBox { // : UCheckBox
		constexpr auto CheckedState = 0x120; // ECheckBoxState
		constexpr auto CheckedStateDelegate = 0x124; // DelegateProperty
		constexpr auto WidgetStyle = 0x138; // FCheckBoxStyle
		constexpr auto Style = 0x6b8; // USlateWidgetStyleAsset*
		constexpr auto UncheckedImage = 0x6c0; // USlateBrushAsset*
		constexpr auto UncheckedHoveredImage = 0x6c8; // USlateBrushAsset*
		constexpr auto UncheckedPressedImage = 0x6d0; // USlateBrushAsset*
		constexpr auto CheckedImage = 0x6d8; // USlateBrushAsset*
		constexpr auto CheckedHoveredImage = 0x6e0; // USlateBrushAsset*
		constexpr auto CheckedPressedImage = 0x6e8; // USlateBrushAsset*
		constexpr auto UndeterminedImage = 0x6f0; // USlateBrushAsset*
		constexpr auto UndeterminedHoveredImage = 0x6f8; // USlateBrushAsset*
		constexpr auto UndeterminedPressedImage = 0x700; // USlateBrushAsset*
		constexpr auto HorizontalAlignment = 0x708; // EHorizontalAlignment
		constexpr auto Padding = 0x70c; // FMargin
		constexpr auto BorderBackgroundColor = 0x720; // FSlateColor
		constexpr auto IsFocusable = 0x748; // bool
		constexpr auto OnCheckStateChanged = 0x750; // FScriptMulticastDelegate
	}

	namespace n_UMM_Popup_XsollaIAP { // : UWidgetBase
		constexpr auto m_WebBrowser = 0x2e0; // UMirWebBrowser*
		constexpr auto m_Btn_Close = 0x2e8; // UMirButton*
		constexpr auto DelayCloseTimeHandle = 0x2f0; // FTimerHandle
	}

	namespace n_UMM_B_PopupNFTCharacterListSlot { // : UWidgetBase
		constexpr auto txt_region = 0x2e0; // UMirTextBlock*
		constexpr auto txt_world = 0x2e8; // UMirTextBlock*
		constexpr auto img_character_icon = 0x2f0; // UMirImage*
		constexpr auto txt_nickname = 0x2f8; // UMirTextBlock*
		constexpr auto txt_level = 0x300; // UMirTextBlock*
		constexpr auto img_cost = 0x308; // UMirImage*
		constexpr auto txt_cost = 0x310; // UMirTextBlock*
		constexpr auto txt_collection = 0x318; // UMirTextBlock*
		constexpr auto img_selected = 0x320; // UMirImage*
		constexpr auto btn_selected = 0x328; // UMirButton*
	}

	namespace n_UMM_PopupPackageList { // : UWidgetBase
		constexpr auto m_ScrollBox_PackageList = 0x2f0; // UMirScrollBox*
		constexpr auto m_CommonBtn_Close = 0x2f8; // UMM_Common_Btn_Symbol*
		constexpr auto m_MirTextBlock_Title = 0x300; // UMirTextBlock*
		constexpr auto m_MirTextBlock_Desc = 0x308; // UMirTextBlock*
	}

	namespace n_UMM_Slot_CostumeCollection { // : UWidgetBase
		constexpr auto Img_Icon = 0x2e0; // UMirImage*
		constexpr auto Txt_Name = 0x2e8; // UMirTextBlock*
		constexpr auto Panel_Ability = 0x2f0; // TArray<UHorizontalBox*>
		constexpr auto Img_Ability = 0x300; // TArray<UMirImage*>
		constexpr auto Txt_Ability = 0x310; // TArray<UMirTextBlock*>
		constexpr auto btn_equip = 0x320; // UMM_Common_Btn*
		constexpr auto m_CostumeId = 0x328; // int32_t
		constexpr auto m_CostumePart = 0x32c; // COSTUME_PARTS
		constexpr auto STR_ID_EQUIP = 0x330; // int32_t
		constexpr auto STR_ID_UNEQUIP = 0x334; // int32_t
		constexpr auto STRING_MSG_UNEQUIP_DEFAULT_COSTUME = 0x338; // int32_t
		constexpr auto m_DefaultBtn = 0x340; // UMirButton*
		constexpr auto m_DefaultBtnPanel = 0x348; // UMirCanvasPanel*
	}

	namespace n_AMM_SituationDirectiveEffect { // : AActor
		constexpr auto EffectId = 0x220; // TMap<EDirectiveType, int32_t>
		constexpr auto CurrentType = 0x270; // EDirectiveType
	}

	namespace n_UCompositeCurveTable { // : UCurveTable
		constexpr auto ParentTables = 0xa0; // TArray<UCurveTable*>
		constexpr auto OldParentTables = 0xb0; // TArray<UCurveTable*>
	}

	namespace n_UMM_Common_GuideBtn { // : UWidgetBase
		constexpr auto GuideId = 0x2f0; // int32_t
		constexpr auto UseAutoContentsType = 0x2f4; // bool
		constexpr auto m_Btn_Main = 0x2f8; // UMirButton*
		constexpr auto m_Img_Icon = 0x300; // UMirImage*
	}

	namespace n_ATriggerInfoExtractor { // : AActor
		constexpr auto m_bTestStart = 0x218; // bool
		constexpr auto m_bDeleteTrigger = 0x219; // bool
		constexpr auto m_FontScale = 0x21c; // float
	}

	namespace n_AMM_NPC { // : AMM_NPCBase
		constexpr auto m_NPCNameTag = 0xa38; // UMM_B_NPCNameTag*
		constexpr auto m_NPCMenu = 0xa40; // UMM_B_NPCMenu*
		constexpr auto m_QuestID = 0xa70; // int32_t
		constexpr auto m_QuestIndex = 0xa74; // int32_t
		constexpr auto m_QuestType = 0xa78; // int32_t
		constexpr auto m_pNpcFunctionComponent = 0xaa8; // UMM_NpcFunctionComponent*
	}

	namespace n_UMM_ItemSmeltWidget { // : UWidgetBase
		constexpr auto m_Panel_Smelt = 0x300; // UPanelWidget*
		constexpr auto m_Effect_Grid = 0x308; // UPanelWidget*
		constexpr auto m_Panel_SmeltTarget = 0x310; // UPanelWidget*
		constexpr auto Can_GoToItemMake = 0x318; // UPanelWidget*
		constexpr auto m_Panel_SmeltInven = 0x320; // UPanelWidget*
		constexpr auto m_InvenForge = 0x328; // UMM_NewInventory_Forge*
		constexpr auto m_Btn_GoToItemMake = 0x330; // UMirButton*
		constexpr auto Grid_Unselect = 0x338; // UPanelWidget*
		constexpr auto Grid_Select = 0x340; // UPanelWidget*
		constexpr auto Grid_Material = 0x348; // UPanelWidget*
		constexpr auto Panel_Safety = 0x350; // UPanelWidget*
		constexpr auto Slot_Target = 0x358; // UMM_Slot_Registered_Circle*
		constexpr auto Tag_Target = 0x360; // UMM_Common_Item_NameTag*
		constexpr auto Pan_SuccessPrecnet = 0x368; // UPanelWidget*
		constexpr auto Txt_SuccessPercentTitle = 0x370; // UMirTextBlock*
		constexpr auto Txt_SuccessPercent = 0x378; // UMirTextBlock*
		constexpr auto Txt_Safety = 0x380; // UMirTextBlock*
		constexpr auto Stat_Smelt = 0x388; // UMM_AbilityState_Item*
		constexpr auto Stat_Combat = 0x390; // UMM_AbilityState_Item*
		constexpr auto Slot_Material = 0x398; // UMM_Slot_Material_Item*
		constexpr auto Slot_MaterialCost = 0x3a0; // UMM_Slot_Material_Item*
		constexpr auto txt_cost = 0x3a8; // UMirTextBlock*
		constexpr auto img_cost = 0x3b0; // UImage*
		constexpr auto Btn_Smelt = 0x3b8; // UMM_Common_Btn_Cost*
		constexpr auto Btn_AutoSmelt = 0x3c0; // UMM_Common_Btn*
		constexpr auto Txt_GuideTitle = 0x3c8; // UMirTextBlock*
		constexpr auto Txt_Guide = 0x3d0; // UMirRichTextBlock*
		constexpr auto Txt_Notice = 0x3d8; // UMirRichTextBlock*
		constexpr auto Grid_AllSelectEffect = 0x3e0; // UPanelWidget*
		constexpr auto Grid_AuraEffect = 0x3e8; // UPanelWidget*
		constexpr auto Grid_AllSelectEffect_Red = 0x3f0; // UPanelWidget*
		constexpr auto Grid_AuraEffect_Red = 0x3f8; // UPanelWidget*
		constexpr auto m_Img_PercentBar = 0x400; // UMirImage*
		constexpr auto SelectItemUID = 0x408; // int32_t
		constexpr auto m_AuToSmeltStrID = 0x418; // int32_t
	}

	namespace n_AMM_EntityBase { // : APawn
		constexpr auto CapsuleRadius = 0x2cc; // float
		constexpr auto CapsuleComponent = 0x2d0; // UCapsuleComponent*
		constexpr auto BuffComponent = 0x2d8; // UMM_BuffComponent*
		constexpr auto m_UID = 0x2e8; // int64_t
		constexpr auto TID = 0x2f0; // int32_t
		constexpr auto TargetDecal = 0x300; // UParticleSystemComponent*
		constexpr auto TargetDecalActor = 0x308; // AMM_TargetDecalActor*
		constexpr auto MainTargetDecalActor = 0x310; // AMM_TargetDecalActor*
		constexpr auto m_pPartsComponent = 0x348; // UMM_CharacterPartsComponent*
		constexpr auto MergedMeshComponent = 0x350; // UMergedMeshComponent*
		constexpr auto m_SubState = 0x380; // int32_t
		constexpr auto m_PreSubState = 0x384; // int32_t
		constexpr auto m_CurrentFSM = 0x388; // EFSM_TYPE
		constexpr auto PreFSM = 0x389; // EFSM_TYPE
	}

	namespace n_ULevelStreamingPersistent { // : ULevelStreaming
		constexpr auto WorldAsset = 0x28; // UWorld*
		constexpr auto PackageNameToLoad = 0x50; // FName
		constexpr auto LODPackageNames = 0x58; // TArray<FName>
		constexpr auto LevelTransform = 0x80; // FTransform
		constexpr auto LevelLODIndex = 0xb0; // int32_t
		constexpr auto StreamingPriority = 0xb4; // int32_t
		constexpr auto bShouldBeVisible = 0xba; // char : 1
		constexpr auto bShouldBeLoaded = 0xba; // char : 1
		constexpr auto bLocked = 0xba; // char : 1
		constexpr auto bIsStatic = 0xba; // char : 1
		constexpr auto bShouldBlockOnLoad = 0xba; // char : 1
		constexpr auto bShouldBlockOnUnload = 0xbb; // char : 1
		constexpr auto bDisableDistanceStreaming = 0xbb; // char : 1
		constexpr auto bDrawOnLevelStatusMap = 0xbb; // char : 1
		constexpr auto LevelColor = 0xbc; // FLinearColor
		constexpr auto EditorStreamingVolumes = 0xd0; // TArray<ALevelStreamingVolume*>
		constexpr auto MinTimeBetweenVolumeUnloadRequests = 0xe0; // float
		constexpr auto OnLevelLoaded = 0xe8; // FScriptMulticastDelegate
		constexpr auto OnLevelUnloaded = 0xf8; // FScriptMulticastDelegate
		constexpr auto OnLevelShown = 0x108; // FScriptMulticastDelegate
		constexpr auto OnLevelHidden = 0x118; // FScriptMulticastDelegate
		constexpr auto LoadedLevel = 0x128; // ULevel*
		constexpr auto PendingUnloadLevel = 0x130; // ULevel*
	}

	namespace n_UAnimBlueprint { // : UBlueprint
		constexpr auto TargetSkeleton = 0xa8; // USkeleton*
		constexpr auto Groups = 0xb0; // TArray<FAnimGroupInfo>
		constexpr auto bUseMultiThreadedAnimationUpdate = 0xc0; // bool
		constexpr auto bWarnAboutBlueprintUsage = 0xc1; // bool
	}

	namespace n_UParticleModuleLocationPrimitiveSphere { // : UParticleModuleLocationPrimitiveBase
		constexpr auto StartRadius = 0xb0; // FRawDistributionFloat
	}

	namespace n_USoundNodeEnveloper { // : USoundNode
		constexpr auto LoopStart = 0x40; // float
		constexpr auto LoopEnd = 0x44; // float
		constexpr auto DurationAfterLoop = 0x48; // float
		constexpr auto LoopCount = 0x4c; // int32_t
		constexpr auto bLoopIndefinitely = 0x50; // char : 1
		constexpr auto bLoop = 0x50; // char : 1
		constexpr auto VolumeInterpCurve = 0x58; // UDistributionFloatConstantCurve*
		constexpr auto PitchInterpCurve = 0x60; // UDistributionFloatConstantCurve*
		constexpr auto VolumeCurve = 0x68; // FRuntimeFloatCurve
		constexpr auto PitchCurve = 0xf0; // FRuntimeFloatCurve
		constexpr auto PitchMin = 0x178; // float
		constexpr auto PitchMax = 0x17c; // float
		constexpr auto VolumeMin = 0x180; // float
		constexpr auto VolumeMax = 0x184; // float
	}

	namespace n_UMM_Auction_Slot_Base { // : UWidgetBase
		constexpr auto m_pParentWidget = 0x260; // UWidgetBase*
		constexpr auto m_arChildWidget = 0x268; // TArray<TWeakObjectPtr<UWidgetBase>>
		constexpr auto m_arMirTextBlock = 0x280; // TArray<TWeakObjectPtr<UMirTextBlock>>
		constexpr auto m_arMirRichTextBlock = 0x290; // TArray<TWeakObjectPtr<UMirRichTextBlock>>
		constexpr auto m_arMirEditableText = 0x2a0; // TArray<TWeakObjectPtr<UMirEditableText>>
		constexpr auto m_arMirImage = 0x2b0; // TArray<TWeakObjectPtr<UMirImage>>
	}

	namespace n_UMM_CrowdControlComponent { // : UActorComponent
		constexpr auto m_pCharBase = 0xb0; // AMM_CharacterPawnBase*
		constexpr auto m_mapCCData = 0xb8; // TMap<int32_t, FCrowdControlData>
	}

	namespace n_UMM_Slot_GetHistory { // : UWidgetBase
		constexpr auto m_Img_SlotBg_Normal = 0x2e0; // UMirImage*
		constexpr auto m_Img_SlotBg_Guild = 0x2e8; // UMirImage*
		constexpr auto m_Img_CostIcon = 0x2f0; // UMirImage*
		constexpr auto m_Txt_CostValue = 0x2f8; // UMirTextBlock*
	}

	namespace n_UOperatingButtonWidget { // : UWidgetBase
		constexpr auto m_pAnim_Scale = 0x2e0; // UWidgetAnimation*
		constexpr auto Img_Canvas = 0x2e8; // UCanvasPanel*
		constexpr auto Img_Hand = 0x2f0; // UImage*
		constexpr auto Img_BG = 0x2f8; // UImage*
		constexpr auto Btn_Area = 0x300; // UButton*
		constexpr auto TouchIconPanel = 0x308; // UCanvasPanel*
		constexpr auto GatheringParogressBarPanel = 0x310; // UMirCanvasPanel*
		constexpr auto Text_ObjectCount = 0x318; // UMirTextBlock*
		constexpr auto GatherProgressBar = 0x320; // UMirProgressBar*
		constexpr auto Text_GatherRemainTime = 0x328; // UMirTextBlock*
		constexpr auto ImgBarEffect = 0x330; // UMirImage*
		constexpr auto m_pTxtTargetName = 0x338; // UMirTextBlock*
		constexpr auto OperationObject = 0x340; // AMM_ObjectBase*
	}

	namespace n_USoundNodeDistanceCrossFade { // : USoundNode
		constexpr auto CrossFadeInput = 0x40; // TArray<FDistanceDatum>
	}

	namespace n_UUserDefinedStruct { // : UScriptStruct
		constexpr auto Status = 0xa8; // EUserDefinedStructureStatus
		constexpr auto Guid = 0xac; // FGuid
	}

	namespace n_ASpawnObjectInfoExporter { // : AActor
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto bHidden = 0x58; // char : 1
		constexpr auto bNetTemporary = 0x58; // char : 1
		constexpr auto bNetStartup = 0x58; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x58; // char : 1
		constexpr auto bAlwaysRelevant = 0x58; // char : 1
		constexpr auto bReplicateMovement = 0x58; // char : 1
		constexpr auto bTearOff = 0x58; // char : 1
		constexpr auto bExchangedRoles = 0x58; // char : 1
		constexpr auto bNetLoadOnClient = 0x59; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x59; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x59; // char : 1
		constexpr auto bRelevantForLevelBounds = 0x59; // char : 1
		constexpr auto bReplayRewindable = 0x59; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x59; // char : 1
		constexpr auto bAutoDestroyWhenFinished = 0x59; // char : 1
		constexpr auto bBlockInput = 0x59; // char : 1
		constexpr auto bCanBeDamaged = 0x5a; // char : 1
		constexpr auto bCollideWhenPlacing = 0x5a; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x5a; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x5a; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x5a; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x5a; // char : 1
		constexpr auto bIsEditorOnlyActor = 0x5a; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x5a; // char : 1
		constexpr auto bReplicates = 0x5b; // char : 1
		constexpr auto bCanBeInCluster = 0x5b; // char : 1
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x5b; // char : 1
		constexpr auto bActorEnableCollision = 0x5c; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x5c; // char : 1
		constexpr auto UpdateOverlapsMethodDuringLevelStreaming = 0x5d; // EActorUpdateOverlapsMethod
		constexpr auto DefaultUpdateOverlapsMethodDuringLevelStreaming = 0x5e; // EActorUpdateOverlapsMethod
		constexpr auto RemoteRole = 0x5f; // ENetRole
		constexpr auto ReplicatedMovement = 0x60; // FRepMovement
		constexpr auto InitialLifeSpan = 0x94; // float
		constexpr auto CustomTimeDilation = 0x98; // float
		constexpr auto AttachmentReplication = 0xa0; // FRepAttachment
		constexpr auto Owner = 0xe0; // AActor*
		constexpr auto NetDriverName = 0xe8; // FName
		constexpr auto Role = 0xf0; // ENetRole
		constexpr auto NetDormancy = 0xf1; // ENetDormancy
		constexpr auto SpawnCollisionHandlingMethod = 0xf2; // ESpawnActorCollisionHandlingMethod
		constexpr auto AutoReceiveInput = 0xf3; // EAutoReceiveInput
		constexpr auto InputPriority = 0xf4; // int32_t
		constexpr auto InputComponent = 0xf8; // UInputComponent*
		constexpr auto NetCullDistanceSquared = 0x100; // float
		constexpr auto NetTag = 0x104; // int32_t
		constexpr auto NetUpdateFrequency = 0x108; // float
		constexpr auto MinNetUpdateFrequency = 0x10c; // float
		constexpr auto NetPriority = 0x110; // float
		constexpr auto Instigator = 0x118; // APawn*
		constexpr auto Children = 0x120; // TArray<AActor*>
		constexpr auto RootComponent = 0x130; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x138; // TArray<AMatineeActor*>
		constexpr auto Layers = 0x150; // TArray<FName>
		constexpr auto ParentComponent = 0x160; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto Tags = 0x168; // TArray<FName>
		constexpr auto OnTakeAnyDamage = 0x178; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x179; // FScriptMulticastDelegate
		constexpr auto OnTakeRadialDamage = 0x17a; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x17b; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x17c; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x17d; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x17e; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x17f; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x180; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x181; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x182; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x183; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x184; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x185; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x186; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x187; // FScriptMulticastDelegate
		constexpr auto InstanceComponents = 0x1e8; // TArray<UActorComponent*>
		constexpr auto BlueprintCreatedComponents = 0x1f8; // TArray<UActorComponent*>
	}

	namespace n_UMovieSceneMaterialTrack { // : UMovieSceneNameableTrack
		constexpr auto Sections = 0x58; // TArray<UMovieSceneSection*>
	}

	namespace n_UNavMovementComponent { // : UMovementComponent
		constexpr auto NavAgentProps = 0xf0; // FNavAgentProperties
		constexpr auto FixedPathBrakingDistance = 0x120; // float
		constexpr auto bUpdateNavAgentWithOwnersCollision = 0x124; // char : 1
		constexpr auto bUseAccelerationForPaths = 0x124; // char : 1
		constexpr auto bUseFixedBrakingDistanceForPaths = 0x124; // char : 1
		constexpr auto MovementState = 0x125; // FMovementProperties
		constexpr auto PathFollowingComp = 0x128; // UObject*
	}

	namespace n_AGeometryCollectionActor { // : AActor
		constexpr auto GeometryCollectionComponent = 0x218; // UGeometryCollectionComponent*
		constexpr auto GeometryCollectionDebugDrawComponent = 0x220; // UGeometryCollectionDebugDrawComponent*
	}

	namespace n_UDeviceProfileManager { // : UObject
		constexpr auto Profiles = 0x28; // TArray<UObject*>
	}

	namespace n_ACutsceneActor { // : AActor
		constexpr auto m_pCinematicDialogue = 0x218; // ACinematicDialogue*
		constexpr auto m_NpcID = 0x220; // int32_t
		constexpr auto m_bHidden = 0x224; // bool
		constexpr auto m_pMovePlacement = 0x228; // ACutsceneActor*
		constexpr auto m_MoveSpeed = 0x230; // float
		constexpr auto m_FirstAniName = 0x238; // FString
		constexpr auto m_SecondAniName = 0x248; // FString
		constexpr auto m_bAnimationLoop = 0x258; // bool
		constexpr auto m_bLookAt = 0x259; // bool
		constexpr auto m_LookAt = 0x25c; // FVector
		constexpr auto m_pAnimInstace = 0x268; // UAnimInstance*
		constexpr auto m_pPartsComponent = 0x2f0; // UMM_CharacterPartsComponent*
		constexpr auto m_pMesh = 0x2f8; // USkeletalMeshComponent*
	}

	namespace n_UMM_HudSkillDeck { // : UWidgetBase
		constexpr auto m_pDeckPanel = 0x2f0; // UCanvasPanel*
		constexpr auto m_pHudBtnSkill = 0x2f8; // TArray<UMM_Btn_HudSkill*>
		constexpr auto m_pAniChangeDeck = 0x308; // UWidgetAnimation*
		constexpr auto m_fChangeDeckButtonEffectTime = 0x310; // float
	}

	namespace n_UMM_GreatBuildingMainSlot { // : UWidgetBase
		constexpr auto m_GreatBuildingID = 0x2e0; // int32_t
		constexpr auto m_BtnBack = 0x2e8; // UMirButton*
		constexpr auto m_PanelBuilding = 0x2f0; // UPanelWidget*
		constexpr auto m_BtnBuilding = 0x2f8; // UMirButton*
		constexpr auto m_ImgLockBuilding = 0x300; // UMirImage*
		constexpr auto m_TxtBuildingStep = 0x308; // UMirTextBlock*
		constexpr auto m_TxtBuildingName = 0x310; // UMirTextBlock*
		constexpr auto m_ImgBuildingIndicator = 0x318; // UMirImage*
		constexpr auto m_Eff_Slot = 0x320; // UPanelWidget*
		constexpr auto m_ImgBuilding = 0x328; // UMirImage*
		constexpr auto m_PaneFunc = 0x330; // UPanelWidget*
		constexpr auto m_PanelFaster = 0x338; // UPanelWidget*
		constexpr auto m_BtnFaster = 0x340; // UMM_Common_Btn_Symbol*
		constexpr auto m_ImgFasterIndicator = 0x348; // UMirImage*
		constexpr auto m_PanelGageRoot = 0x350; // UPanelWidget*
		constexpr auto m_ProgStepUp = 0x358; // UMirProgressBar*
		constexpr auto m_TxtProgStepUp = 0x360; // UMirTextBlock*
		constexpr auto m_Vertical_GuildSupport = 0x368; // UPanelWidget*
		constexpr auto m_PanelGuildSupport = 0x370; // UPanelWidget*
		constexpr auto m_ImgGuildSupport = 0x378; // UMirImage*
		constexpr auto m_BtnGuildSupport = 0x380; // UMirButton*
		constexpr auto m_PanelManufacture = 0x388; // UPanelWidget*
		constexpr auto m_ImgManufactureItem = 0x390; // UMirImage*
		constexpr auto m_ImgGradeBg = 0x398; // UMirImage*
		constexpr auto m_TxtItemCount = 0x3a0; // UMirTextBlock*
		constexpr auto m_BtnManufacture = 0x3a8; // UMirButton*
		constexpr auto m_ShowFunc = 0x3b0; // UWidgetAnimation*
		constexpr auto m_CompleteStr = 0x3b8; // int32_t
		constexpr auto m_GuildSupportIconID = 0x3bc; // int32_t
		constexpr auto m_StepStr = 0x3c0; // int32_t
	}

	namespace n_UMM_Guild_BlackIron_Slot { // : UWidgetBase
		constexpr auto m_pTxtName = 0x2e0; // UMirTextBlock*
		constexpr auto m_pIconSlot = 0x2e8; // UMirImage*
		constexpr auto m_pTxtValue = 0x2f0; // UMirTextBlock*
	}

	namespace n_UMM_Popup_GuildAuthoritySlot { // : UWidgetBase
		constexpr auto txt_authority = 0x2e0; // UMirTextBlock*
		constexpr auto img_member = 0x2e8; // UMirImage*
		constexpr auto img_inventory = 0x2f0; // UMirImage*
		constexpr auto img_diplomacy = 0x2f8; // UMirImage*
		constexpr auto img_war = 0x300; // UMirImage*
		constexpr auto img_leader = 0x308; // UMirImage*
	}

	namespace n_UAIAsyncTaskBlueprintProxy { // : UObject
		constexpr auto OnSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto OnFail = 0x38; // FScriptMulticastDelegate
	}

	namespace n_ALevelSequencePlayerActor { // : AActor
		constexpr auto m_RenderClassType = 0x218; // EClassType
		constexpr auto RootSceneComponent = 0x220; // USceneComponent*
		constexpr auto m_PCW = 0x228; // USkeletalMeshComponent*
		constexpr auto m_PCM = 0x230; // USkeletalMeshComponent*
		constexpr auto m_PCT = 0x238; // USkeletalMeshComponent*
		constexpr auto m_PCA = 0x240; // USkeletalMeshComponent*
		constexpr auto m_PCZ = 0x248; // USkeletalMeshComponent*
		constexpr auto m_MeshArray = 0x250; // TArray<USkeletalMeshComponent*>
		constexpr auto m_pSkeletalMesh = 0x260; // USkeletalMeshComponent*
		constexpr auto m_pMesh = 0x268; // USkeletalMeshComponent*
	}

	namespace n_UFacebookQueryUserInfo { // : UBlueprintAsyncActionBase
		constexpr auto OnSuccess = 0x30; // FScriptMulticastDelegate
		constexpr auto OnFail = 0x40; // FScriptMulticastDelegate
	}

	namespace n_UCharPointLightNotify { // : UAnimNotify
		constexpr auto CharPointLight = 0x38; // FCharPointLightData
	}

	namespace n_UMM_Collection_Info { // : UWidgetBase
		constexpr auto Txt_Title = 0x2f0; // UMirTextBlock*
		constexpr auto Txt_Desc = 0x2f8; // UMirTextBlock*
		constexpr auto Grid_Detail = 0x300; // UPanelWidget*
		constexpr auto Btn_Detail = 0x308; // UMM_Common_Btn_Symbol*
		constexpr auto Arr_CollectionAbility = 0x310; // TArray<UMM_Collection_Ability*>
		constexpr auto STR_Title = 0x320; // int32_t
		constexpr auto STR_Desc = 0x324; // int32_t
	}

	namespace n_UMM_PopUp_BuildingList { // : UWidgetBase
		constexpr auto m_MoveStr = 0x2e0; // int32_t
		constexpr auto m_CompleteStr = 0x2e4; // int32_t
		constexpr auto m_levelStr = 0x2e8; // int32_t
		constexpr auto m_CombatStr = 0x2ec; // int32_t
		constexpr auto m_ExpStr = 0x2f0; // int32_t
		constexpr auto m_PerValueStrID = 0x2f4; // int32_t
		constexpr auto m_CollectPlant = 0x2f8; // int32_t
		constexpr auto m_CollectMine = 0x2fc; // int32_t
		constexpr auto m_BlackIron = 0x300; // int32_t
		constexpr auto m_CollectForce = 0x304; // int32_t
		constexpr auto m_HaveNoGuildStr = 0x308; // int32_t
		constexpr auto m_Img_Thumnail = 0x310; // UMirImage*
		constexpr auto m_Img_Thumnail2 = 0x318; // UMirImage*
		constexpr auto m_Img_Icon = 0x320; // UMirImage*
		constexpr auto m_Scale_Box = 0x328; // UScaleBox*
		constexpr auto m_Txt_Condition = 0x330; // UMirTextBlock*
		constexpr auto m_Txt_ConditionValue = 0x338; // UMirTextBlock*
		constexpr auto m_Panel_Complete = 0x340; // UPanelWidget*
		constexpr auto m_Btn_Check = 0x348; // UMirButton*
		constexpr auto m_Btn_Move = 0x350; // UMM_Common_Btn*
	}

	namespace n_UMM_Customizing_Save { // : UWidgetBase
		constexpr auto m_SaveSlotList = 0x2f0; // UMirScrollBox*
		constexpr auto m_SaveButton = 0x2f8; // UMM_Common_Btn_Symbol*
		constexpr auto m_OkButton = 0x300; // UMM_Common_Btn*
		constexpr auto m_AutoCheckBox = 0x308; // UMirCheckBox*
		constexpr auto m_EmptyNotice = 0x310; // UWidget*
		constexpr auto m_SaveSlotArray = 0x318; // TArray<UMM_Customizing_SaveSlot*>
	}

	namespace n_UMM_Map_NameBtn { // : UWidgetBase
		constexpr auto m_TxtMapName = 0x2e8; // UMirTextBlock*
		constexpr auto m_BtnMain = 0x2f0; // UMirButton*
	}

	namespace n_UTextureLODSettings { // : UObject
		constexpr auto TextureLODGroups = 0x28; // TArray<FTextureLODGroup>
	}

	namespace n_USpinBoxWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto SpinBoxStyle = 0x30; // FSpinBoxStyle
	}

	namespace n_UMM_UserEvent_Siege { // : UWidgetBase
		constexpr auto m_Txt_Name = 0x2f0; // UMirTextBlock*
		constexpr auto m_Txt_EndTimeName = 0x2f8; // UMirTextBlock*
		constexpr auto m_Txt_EndTime = 0x300; // UMirTextBlock*
		constexpr auto m_Img_Thumb = 0x308; // UMirImage*
		constexpr auto m_WebBanner = 0x310; // UMM_UserEvent_WebBanner*
		constexpr auto m_Can_KeyPad = 0x318; // UCanvasPanel*
		constexpr auto m_Img_CostItemIcon = 0x320; // UMirImage*
		constexpr auto m_Txt_ItemName = 0x328; // UMirTextBlock*
		constexpr auto m_Txt_ItemCount = 0x330; // UMirTextBlock*
		constexpr auto m_ItemMakeSlider = 0x338; // UMM_Item_Make_Slider*
		constexpr auto m_Overlay_Result = 0x340; // UOverlay*
		constexpr auto m_Txt_Result = 0x348; // UMirTextBlock*
		constexpr auto m_Txt_Remain_Cheer_Count = 0x350; // UMirTextBlock*
		constexpr auto m_Txt_CheerMessage = 0x358; // UMirTextBlock*
		constexpr auto m_Btn_SiegeInfo = 0x360; // UMirButton*
		constexpr auto m_SiegeSlot_Home = 0x368; // UMM_UserEvent_SiegeSlot*
		constexpr auto m_SiegeSlot_Away = 0x370; // UMM_UserEvent_SiegeSlot*
		constexpr auto m_Img_Home_Win = 0x378; // UMirImage*
		constexpr auto m_Img_Away_Win = 0x380; // UMirImage*
	}

	namespace n_UVectorFieldComponent { // : UPrimitiveComponent
		constexpr auto VectorField = 0x418; // UVectorField*
		constexpr auto Intensity = 0x420; // float
		constexpr auto Tightness = 0x424; // float
		constexpr auto bPreviewVectorField = 0x428; // char : 1
	}

	namespace n_AMonsterKillCountTrigger { // : AActivateTrigger
		constexpr auto m_pCheckMonsterGroup = 0x278; // AMonsterGroupTrigger*
	}

	namespace n_UMM_Popup_GachaPercent { // : UWidgetBase
		constexpr auto mWebBrowser = 0x2e0; // UMirWebBrowser*
		constexpr auto mBtnClose = 0x2e8; // UMM_Common_Btn_Symbol*
	}

	namespace n_USoundEffectSourcePresetChain { // : UObject
		constexpr auto Chain = 0x28; // TArray<FSourceEffectChainEntry>
		constexpr auto bPlayEffectChainTails = 0x38; // char : 1
	}

	namespace n_UInterpTrackSound { // : UInterpTrackVectorBase
		constexpr auto Sounds = 0x90; // TArray<FSoundTrackKey>
		constexpr auto bPlayOnReverse = 0xa0; // char : 1
		constexpr auto bContinueSoundOnMatineeEnd = 0xa0; // char : 1
		constexpr auto bSuppressSubtitles = 0xa0; // char : 1
		constexpr auto bTreatAsDialogue = 0xa0; // char : 1
		constexpr auto bAttach = 0xa0; // char : 1
	}

	namespace n_USoundSubmix { // : UObject
		constexpr auto ChildSubmixes = 0x28; // TArray<USoundSubmix*>
		constexpr auto ParentSubmix = 0x38; // USoundSubmix*
		constexpr auto ChannelFormat = 0x40; // ESubmixChannelFormat
		constexpr auto bMuteWhenBackgrounded = 0x41; // char : 1
		constexpr auto SubmixEffectChain = 0x48; // TArray<USoundEffectSubmixPreset*>
		constexpr auto AmbisonicsPluginSettings = 0x58; // UAmbisonicsSubmixSettingsBase*
		constexpr auto EnvelopeFollowerAttackTime = 0x60; // int32_t
		constexpr auto EnvelopeFollowerReleaseTime = 0x64; // int32_t
		constexpr auto OutputVolume = 0x68; // float
		constexpr auto OnSubmixRecordedFileDone = 0x70; // FScriptMulticastDelegate
	}

	namespace n_UGranularSynth { // : USynthComponent
		constexpr auto GranulatedSoundWave = 0x650; // USoundWave*
	}

	namespace n_UMM_Popup_GuildCost { // : UWidgetBase
		constexpr auto mTxtGuildCost = 0x2e0; // UMirTextBlock*
		constexpr auto mGoodSlotList = 0x2e8; // TArray<UMM_Goods_Slot*>
		constexpr auto mBtnClose = 0x2f8; // UMM_Common_Btn_Symbol*
	}

	namespace n_AMeshMergeCullingVolume { // : AVolume
		constexpr auto BrushType = 0x218; // EBrushType
		constexpr auto BrushColor = 0x21c; // FColor
		constexpr auto PolyFlags = 0x220; // int32_t
		constexpr auto bColored = 0x224; // char : 1
		constexpr auto bSolidWhenSelected = 0x224; // char : 1
		constexpr auto bPlaceableFromClassBrowser = 0x224; // char : 1
		constexpr auto bNotForClientOrServer = 0x224; // char : 1
		constexpr auto Brush = 0x228; // UModel*
		constexpr auto BrushComponent = 0x230; // UBrushComponent*
		constexpr auto bInManipulation = 0x238; // char : 1
		constexpr auto SavedSelections = 0x240; // TArray<FGeomSelection>
	}

	namespace n_UMovieSceneTrack { // : UMovieSceneSignedObject
		constexpr auto EvalOptions = 0x50; // FMovieSceneTrackEvalOptions
		constexpr auto bIsEvalDisabled = 0x55; // bool
	}

	namespace n_UMM_CharAbility_Info_Rating { // : UWidgetBase
		constexpr auto m_Btn_CustomTitle = 0x300; // UMM_Common_Btn_Symbol*
		constexpr auto m_Grid_CustomTitle = 0x308; // UHorizontalBox*
		constexpr auto m_MirTextBlock_NickTitle = 0x310; // UMirTextBlock*
		constexpr auto m_MirTextBlock_Nick = 0x318; // UMirTextBlock*
		constexpr auto m_MirTextBlock_CombatTitle = 0x320; // UMirTextBlock*
		constexpr auto m_MirTextBlock_Attck = 0x328; // UMirTextBlock*
		constexpr auto m_MirTextBlock_TendGradeTitle = 0x330; // UMirTextBlock*
		constexpr auto m_MirTextBlock_TendGrade = 0x338; // UMirTextBlock*
		constexpr auto m_MirTextBlock_TendGradeValue = 0x340; // UMirTextBlock*
		constexpr auto m_Btn_TitleEdit = 0x348; // UMM_Common_Btn_Symbol*
		constexpr auto m_Btn_TitleDel = 0x350; // UMM_Common_Btn_Symbol*
	}

	namespace n_UMM_CostumeDyeingCheatWidget { // : UUserWidget
		constexpr auto m_Body01_R = 0x240; // float
		constexpr auto m_Body01_G = 0x244; // float
		constexpr auto m_Body01_B = 0x248; // float
		constexpr auto m_Body01_V = 0x24c; // float
		constexpr auto m_Body02_R = 0x250; // float
		constexpr auto m_Body02_G = 0x254; // float
		constexpr auto m_Body02_B = 0x258; // float
		constexpr auto m_Body02_V = 0x25c; // float
	}

	namespace n_UMM_Slot_Material { // : UMM_Slot_Base
		constexpr auto m_Img_GradeBgEffect = 0x3f0; // UMirImage*
		constexpr auto m_ImgDisabled = 0x3f8; // UMirImage*
		constexpr auto m_Imgindicator = 0x400; // UMirImage*
		constexpr auto m_ImgTierBg = 0x408; // UMirImage*
		constexpr auto m_Img_Attribution = 0x410; // UMirImage*
		constexpr auto m_ImgSeleted = 0x418; // UMirImage*
		constexpr auto m_ImgCurrSelected = 0x420; // UMirImage*
		constexpr auto m_ImgPrevSelected = 0x428; // UMirImage*
		constexpr auto m_TxtCount = 0x430; // UMirTextBlock*
		constexpr auto SlotSize = 0x438; // FVector2D
		constexpr auto m_TxtGrade = 0x440; // UMirTextBlock*
		constexpr auto m_Img_UserLock = 0x448; // UMirImage*
		constexpr auto m_Img_UserLock_Stack = 0x450; // UMirImage*
		constexpr auto m_TxtOtherClass = 0x458; // UMirTextBlock*
		constexpr auto m_TxtSmeltingLevel = 0x460; // UMirTextBlock*
	}

	namespace n_UMaterialExpressionBumpOffset { // : UMaterialExpression
		constexpr auto Coordinate = 0x40; // FExpressionInput
		constexpr auto Height = 0x54; // FExpressionInput
		constexpr auto HeightRatioInput = 0x68; // FExpressionInput
		constexpr auto HeightRatio = 0x7c; // float
		constexpr auto ReferencePlane = 0x80; // float
		constexpr auto ConstCoordinate = 0x84; // uint32_t
	}

	namespace n_UPhysicalMaterial { // : UObject
		constexpr auto Friction = 0x28; // float
		constexpr auto FrictionCombineMode = 0x2c; // EFrictionCombineMode
		constexpr auto bOverrideFrictionCombineMode = 0x2d; // bool
		constexpr auto Restitution = 0x30; // float
		constexpr auto RestitutionCombineMode = 0x34; // EFrictionCombineMode
		constexpr auto bOverrideRestitutionCombineMode = 0x35; // bool
		constexpr auto Density = 0x38; // float
		constexpr auto RaiseMassToPower = 0x3c; // float
		constexpr auto DestructibleDamageThresholdScale = 0x40; // float
		constexpr auto PhysicalMaterialProperty = 0x48; // UPhysicalMaterialPropertyBase*
		constexpr auto SurfaceType = 0x50; // EPhysicalSurface
		constexpr auto TireFrictionScale = 0x54; // float
		constexpr auto TireFrictionScales = 0x58; // TArray<FTireFrictionScalePair>
	}

	namespace n_UPawnAction_BlueprintBase { // : UPawnAction
		constexpr auto ChildAction = 0x28; // UPawnAction*
		constexpr auto ParentAction = 0x30; // UPawnAction*
		constexpr auto OwnerComponent = 0x38; // UPawnActionsComponent*
		constexpr auto Instigator = 0x40; // UObject*
		constexpr auto BrainComp = 0x48; // UBrainComponent*
		constexpr auto bAllowNewSameClassInstance = 0x80; // char : 1
		constexpr auto bReplaceActiveSameClassInstance = 0x80; // char : 1
		constexpr auto bShouldPauseMovement = 0x80; // char : 1
		constexpr auto bAlwaysNotifyOnFinished = 0x80; // char : 1
	}

	namespace n_UParticleSystemReplay { // : UObject
		constexpr auto ClipIDNumber = 0x28; // int32_t
	}

	namespace n_UMM_CombatPoint { // : UWidgetBase
		constexpr auto m_C_TxtCombatPoint = 0x300; // UMirTextBlock*
		constexpr auto m_C_BtnDetail = 0x308; // UMM_Common_Btn_Symbol*
		constexpr auto horizontal_box_combatpower = 0x310; // UHorizontalBox*
		constexpr auto mir_textblock_next_combatpower = 0x318; // UMirTextBlock*
		constexpr auto combat_power = 0x320; // UMM_Common_ComparePoint*
	}

	namespace n_UFoliageType_InstancedStaticMesh { // : UFoliageType
		constexpr auto Mesh = 0x360; // UStaticMesh*
		constexpr auto OverrideMaterials = 0x368; // TArray<UMaterialInterface*>
		constexpr auto ComponentClass = 0x378; // UFoliageInstancedStaticMeshComponent*
	}

	namespace n_USynthComponent { // : USceneComponent
		constexpr auto bAutoDestroy = 0x220; // char : 1
		constexpr auto bStopWhenOwnerDestroyed = 0x220; // char : 1
		constexpr auto bAllowSpatialization = 0x220; // char : 1
		constexpr auto bOverrideAttenuation = 0x220; // char : 1
		constexpr auto bOutputToBusOnly = 0x224; // char : 1
		constexpr auto AttenuationSettings = 0x228; // USoundAttenuation*
		constexpr auto AttenuationOverrides = 0x230; // FSoundAttenuationSettings
		constexpr auto ConcurrencySettings = 0x520; // USoundConcurrency*
		constexpr auto ConcurrencySet = 0x528; // TSet<USoundConcurrency*>
		constexpr auto SoundClass = 0x578; // USoundClass*
		constexpr auto SourceEffectChain = 0x580; // USoundEffectSourcePresetChain*
		constexpr auto SoundSubmix = 0x588; // USoundSubmix*
		constexpr auto SoundSubmixSends = 0x590; // TArray<FSoundSubmixSendInfo>
		constexpr auto BusSends = 0x5a0; // TArray<FSoundSourceBusSendInfo>
		constexpr auto Modulation = 0x5b0; // FSoundModulation
		constexpr auto PreEffectBusSends = 0x5c0; // TArray<FSoundSourceBusSendInfo>
		constexpr auto bIsUISound = 0x5d0; // char : 1
		constexpr auto bIsPreviewSound = 0x5d0; // char : 1
		constexpr auto EnvelopeFollowerAttackTime = 0x5d4; // int32_t
		constexpr auto EnvelopeFollowerReleaseTime = 0x5d8; // int32_t
		constexpr auto OnAudioEnvelopeValue = 0x5e0; // FScriptMulticastDelegate
		constexpr auto Synth = 0x610; // USynthSound*
		constexpr auto AudioComponent = 0x618; // UAudioComponent*
	}

	namespace n_UMM_NewInventory_Base { // : UWidgetBase
		constexpr auto m_iInvenSlotMinCount = 0x2e0; // int32_t
	}

	namespace n_UCompositionGraphCaptureProtocol { // : UMovieSceneImageCaptureProtocolBase
		constexpr auto IncludeRenderPasses = 0x58; // FCompositionGraphCapturePasses
		constexpr auto bCaptureFramesInHDR = 0x68; // bool
		constexpr auto HDRCompressionQuality = 0x6c; // int32_t
		constexpr auto CaptureGamut = 0x70; // EHDRCaptureGamut
		constexpr auto PostProcessingMaterial = 0x78; // FSoftObjectPath
		constexpr auto bDisableScreenPercentage = 0x90; // bool
		constexpr auto PostProcessingMaterialPtr = 0x98; // UMaterialInterface*
	}

	namespace n_AGameMode { // : AGameModeBase
		constexpr auto MatchState = 0x2b8; // FName
		constexpr auto bDelayedStart = 0x2c0; // char : 1
		constexpr auto NumSpectators = 0x2c4; // int32_t
		constexpr auto NumPlayers = 0x2c8; // int32_t
		constexpr auto NumBots = 0x2cc; // int32_t
		constexpr auto MinRespawnDelay = 0x2d0; // float
		constexpr auto NumTravellingPlayers = 0x2d4; // int32_t
		constexpr auto EngineMessageClass = 0x2d8; // ULocalMessage*
		constexpr auto InactivePlayerArray = 0x2e0; // TArray<APlayerState*>
		constexpr auto InactivePlayerStateLifeSpan = 0x2f0; // float
		constexpr auto MaxInactivePlayers = 0x2f4; // int32_t
		constexpr auto bHandleDedicatedServerReplays = 0x2f8; // bool
	}

	namespace n_UMM_GuideDecalComponent { // : UActorComponent
		constexpr auto GuideDecal = 0xd8; // UDecalComponent*
		constexpr auto GuideMaterialInstanceDynamic = 0xe0; // UMaterialInstanceDynamic*
	}

	namespace n_UParticleModuleSourceMovement { // : UParticleModuleLocationBase
		constexpr auto SourceMovementScale = 0x30; // FRawDistributionVector
	}

	namespace n_ANavigationObjectBase { // : AActor
		constexpr auto CapsuleComponent = 0x220; // UCapsuleComponent*
		constexpr auto GoodSprite = 0x228; // UBillboardComponent*
		constexpr auto BadSprite = 0x230; // UBillboardComponent*
		constexpr auto bIsPIEPlayerStart = 0x238; // char : 1
	}

	namespace n_UGoogleLogin { // : UBlueprintAsyncActionBase
		constexpr auto OnSuccess = 0x30; // FScriptMulticastDelegate
		constexpr auto OnFail = 0x40; // FScriptMulticastDelegate
	}

	namespace n_UMM_HudAutoBattle_Element { // : UWidgetBase
		constexpr auto AuotBattleStateIcon = 0x2f0; // TMap<EAutoBattleState, FBrushObject>
		constexpr auto ElementButton = 0x340; // UMirButton*
		constexpr auto IconImage = 0x348; // UMirImage*
	}

	namespace n_UMM_GameOption_Slider { // : UMM_GameOption_BaseSlot
		constexpr auto m_eType = 0x2e8; // EGameOptionSliderType
		constexpr auto m_eTitleLocation = 0x2e9; // EGameOptionSliderTitleLocation
		constexpr auto m_bUseSliderButton = 0x2ea; // bool
		constexpr auto m_iPercent = 0x2ec; // int32_t
		constexpr auto m_Txt_Title_1 = 0x2f0; // UMirTextBlock*
		constexpr auto m_Txt_Title_2 = 0x2f8; // UMirTextBlock*
		constexpr auto m_Slider = 0x300; // UMirSlider*
		constexpr auto m_Txt_SliderPercent = 0x308; // UMirTextBlock*
		constexpr auto m_CB_SliderUp = 0x310; // UMM_Common_Btn_Symbol*
		constexpr auto m_CB_SliderDown = 0x318; // UMM_Common_Btn_Symbol*
		constexpr auto m_pProgressBar = 0x320; // UMirProgressBar*
	}

	namespace n_UMM_Popup_Occupation_Auction { // : UWidgetBase
		constexpr auto BidHistory_01 = 0x2e0; // UMM_Occupation_BidHistory*
		constexpr auto BidHistory_02 = 0x2e8; // UMM_Occupation_BidHistory*
		constexpr auto Txt_Title = 0x2f0; // UMirTextBlock*
		constexpr auto Txt_MinimumBidAmount = 0x2f8; // UMirTextBlock*
		constexpr auto Txt_BidAmount = 0x300; // UMirTextBlock*
		constexpr auto Txt_GuildHoldinAmount = 0x308; // UMirTextBlock*
		constexpr auto Txt_RemainTime = 0x310; // UMirTextBlock*
		constexpr auto Txt_Description = 0x318; // UMirTextBlock*
		constexpr auto btn_refresh = 0x320; // UMM_Common_Btn*
		constexpr auto Btn_Bid = 0x328; // UMM_Common_Btn*
		constexpr auto Btn_Left_Amount = 0x330; // UMM_Common_Btn_Symbol*
		constexpr auto Btn_Right_Amount = 0x338; // UMM_Common_Btn_Symbol*
		constexpr auto btn_close = 0x340; // UMM_Common_Btn_Symbol*
		constexpr auto Img_Guild_Coin1 = 0x348; // UMirImage*
		constexpr auto Img_Guild_Coin2 = 0x350; // UMirImage*
		constexpr auto Btn_OpenNumPad = 0x358; // UMirButton*
	}

	namespace n_UDistributionFloatUniform { // : UDistributionFloat
		constexpr auto Min = 0x38; // float
		constexpr auto Max = 0x3c; // float
	}

	namespace n_UBTTask_WaitBlackboardTime { // : UBTTask_Wait
		constexpr auto BlackboardKey = 0x78; // FBlackboardKeySelector
	}

	namespace n_UMM_GhostTrailComponent { // : UActorComponent
		constexpr auto ActiveAtStart = 0xb0; // bool
		constexpr auto GhostSpawnDelay = 0xb4; // float
		constexpr auto GhostLifetime = 0xb8; // float
		constexpr auto GhostAllMeshes = 0xbc; // bool
		constexpr auto TagsToGhost = 0xc0; // TArray<FName>
		constexpr auto GhostMaterial = 0xd0; // UMaterialInstance*
		constexpr auto MatParams = 0xd8; // TArray<FGhostMaterialParam>
		constexpr auto ScaleOverTime = 0xe8; // bool
		constexpr auto ScaleCurve = 0xf0; // UCurveFloat*
		constexpr auto GhostMaxCount = 0xf8; // int32_t
		constexpr auto LastIsInvisible = 0xfc; // bool
		constexpr auto VelocityDepending = 0xfd; // bool
		constexpr auto VelocityThreshold = 0x100; // float
		constexpr auto Manager = 0x108; // AMM_GhostTrailManager*
		constexpr auto ManagerPath = 0x110; // FString
		constexpr auto ActiveTrail = 0x120; // bool
	}

	namespace n_USubsurfaceProfile { // : UObject
		constexpr auto Settings = 0x28; // FSubsurfaceProfileStruct
	}

	namespace n_USlateWidgetStyleAsset { // : UObject
		constexpr auto CustomStyle = 0x28; // USlateWidgetStyleContainerBase*
	}

	namespace n_UBackgroundBlurSlot { // : UPanelSlot
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UMM_RelationQuestCompleteMsg { // : UMM_QuestBaseMsg
		constexpr auto m_Img_Icon = 0x318; // UMirImage*
		constexpr auto m_Img_Rare_Icon = 0x320; // UMirImage*
		constexpr auto m_Img_Hero_Icon = 0x328; // UMirImage*
		constexpr auto m_Img_Legend_Icon = 0x330; // UMirImage*
	}

	namespace n_UMM_Collection_Ability { // : UWidgetBase
		constexpr auto Txt_CountName = 0x2e0; // UMirTextBlock*
		constexpr auto Txt_Ability_Name = 0x2e8; // UMirTextBlock*
		constexpr auto Icon_Attribute = 0x2f0; // UMirImage*
		constexpr auto Txt_Ability_Point = 0x2f8; // UMirTextBlock*
		constexpr auto STR_CountName = 0x300; // int32_t
	}

	namespace n_UMM_Popup_GuildOtherMembers { // : UWidgetBase
		constexpr auto sb_member = 0x2f0; // UMirScrollBox*
		constexpr auto bn_empty = 0x2f8; // UMM_Common_Board_Notice*
		constexpr auto btn_confirm = 0x300; // UMM_Common_Btn*
		constexpr auto btn_close = 0x308; // UMM_Common_Btn_Symbol*
		constexpr auto Txt_Title = 0x310; // UMirTextBlock*
	}

	namespace n_UMM_SleepMode { // : UWidgetBase
		constexpr auto m_AniFade = 0x2f0; // UWidgetAnimation*
		constexpr auto m_iMSTRID_OffSlidSleepMode = 0x2f8; // int32_t
		constexpr auto m_arrPlayerStateIcon = 0x300; // TArray<FBrushObject>
		constexpr auto m_QuestIconID = 0x310; // int32_t
		constexpr auto m_HpIconID = 0x314; // int32_t
		constexpr auto m_HpPotionIconID = 0x318; // int32_t
		constexpr auto m_MpPotionIconID = 0x31c; // int32_t
		constexpr auto m_InvenIconID = 0x320; // int32_t
		constexpr auto m_AddInvenIconID = 0x324; // int32_t
		constexpr auto m_ExpIconID = 0x328; // int32_t
		constexpr auto m_DeviceInfo = 0x330; // UMM_DeviceInfo*
		constexpr auto m_pTextHour = 0x338; // UMirTextBlock*
		constexpr auto m_pTextMinute = 0x340; // UMirTextBlock*
		constexpr auto m_pTextOffSlideSleepMode = 0x348; // UMirTextBlock*
		constexpr auto m_pImgPlayerState = 0x350; // UMirImage*
		constexpr auto m_pTextPlayerState = 0x358; // UMirTextBlock*
		constexpr auto m_pImgQuest = 0x360; // UMirImage*
		constexpr auto m_pTextQuest = 0x368; // UMirTextBlock*
		constexpr auto m_pImgCurrectHP = 0x370; // UMirImage*
		constexpr auto m_pTextCurrectHP = 0x378; // UMirTextBlock*
		constexpr auto m_pTextPotionCount = 0x380; // UMirTextBlock*
		constexpr auto m_pTextInvenCount = 0x388; // UMirTextBlock*
		constexpr auto m_pTextMessageCount = 0x390; // UMirTextBlock*
		constexpr auto m_pImgCurrentHP = 0x398; // UMirImage*
		constexpr auto m_pImgPotion = 0x3a0; // UMirImage*
		constexpr auto m_pImgInven = 0x3a8; // UMirImage*
		constexpr auto m_pImgMessage = 0x3b0; // UMirImage*
		constexpr auto m_pImgMpPotion = 0x3b8; // UMirImage*
		constexpr auto m_pTextMpPotion = 0x3c0; // UMirTextBlock*
		constexpr auto m_pImgAddItem = 0x3c8; // UMirImage*
		constexpr auto m_pTextAddItem = 0x3d0; // UMirTextBlock*
		constexpr auto m_pImgExp = 0x3d8; // UMirImage*
		constexpr auto m_pTextExp = 0x3e0; // UMirTextBlock*
		constexpr auto m_pTextExpRatio = 0x3e8; // UMirTextBlock*
		constexpr auto m_fStopSliderRatio_ExcuteRatio = 0x40c; // float
		constexpr auto m_fStopSliderRatio_AbleRatio = 0x410; // float
		constexpr auto m_fStopSlider_ActiveTextOpacity = 0x414; // float
		constexpr auto m_StopSlider = 0x420; // UMirSlider*
		constexpr auto m_Img_StopSliderBg = 0x428; // UWidget*
	}

	namespace n_URadialFalloff { // : UFieldNodeFloat
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto MinRange = 0xb4; // float
		constexpr auto MaxRange = 0xb8; // float
		constexpr auto Default = 0xbc; // float
		constexpr auto Radius = 0xc0; // float
		constexpr auto Position = 0xc4; // FVector
		constexpr auto Falloff = 0xd0; // EFieldFalloffType
	}

	namespace n_UMM_New_Occupation_Ranking_List { // : UWidgetBase
		constexpr auto m_Txt_Rank = 0x2e8; // UMirTextBlock*
		constexpr auto m_img_Ranking = 0x2f0; // UMirImage*
		constexpr auto m_Txt_Name = 0x2f8; // UMirTextBlock*
		constexpr auto m_Txt_Info = 0x300; // UMirTextBlock*
		constexpr auto m_Txt_Point = 0x308; // UMirTextBlock*
		constexpr auto m_img_MyRank = 0x310; // UMirImage*
		constexpr auto m_img_GuildMarkIcon = 0x318; // UMirImage*
		constexpr auto m_img_GuildMarkFrame = 0x320; // UMirImage*
		constexpr auto m_RankButton = 0x328; // UMirButton*
	}

	namespace n_UMaterialFunctionInterface { // : UObject
		constexpr auto StateID = 0x28; // FGuid
		constexpr auto MaterialFunctionUsage = 0x38; // EMaterialFunctionUsage
	}

	namespace n_UMM_StrongPoint_HudSlot { // : UWidgetBase
		constexpr auto CircleGague_Mat = 0x2f0; // UMaterialInstanceDynamic*
		constexpr auto Img_Icon = 0x2f8; // UMirImage*
		constexpr auto Img_CircleGauge = 0x300; // UImage*
		constexpr auto Txt_RemainTime = 0x308; // UMirTextBlock*
		constexpr auto Btn_Main = 0x310; // UMirButton*
	}

	namespace n_UMM_ItemCollectEffect { // : UWidgetBase
		constexpr auto m_Txt_Title = 0x2e0; // UMirTextBlock*
		constexpr auto m_ListView_CollectionEffectList = 0x2e8; // UMirListView*
		constexpr auto m_Panel_NoResult = 0x2f0; // UPanelWidget*
		constexpr auto m_Btn_Progress = 0x2f8; // UMM_Common_Btn*
		constexpr auto m_Notice_NoResult = 0x300; // UMM_Common_Board_Notice*
		constexpr auto m_HasNoResultStr = 0x308; // int32_t
		constexpr auto m_CollectAllEffectStr = 0x30c; // int32_t
		constexpr auto m_ObtainStrID = 0x310; // int32_t
		constexpr auto m_arCollectionEffectSlotObj = 0x318; // TArray<UCollectionEffectSlotObj*>
	}

	namespace n_UNoiseField { // : UFieldNodeFloat
		constexpr auto MinRange = 0xb0; // float
		constexpr auto MaxRange = 0xb4; // float
		constexpr auto Transform = 0xc0; // FTransform
	}

	namespace n_UDieEffectNotify { // : UAnimNotify
		constexpr auto BurnColor = 0x38; // FLinearColor
	}

	namespace n_UDestroySessionCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto OnFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_UPanelSlot { // : UVisual
		constexpr auto Parent = 0x28; // UPanelWidget*
		constexpr auto Content = 0x30; // UWidget*
	}

	namespace n_UAnimCompress_PerTrackCompression { // : UAnimCompress_RemoveLinearKeys
		constexpr auto MaxZeroingThreshold = 0x70; // float
		constexpr auto MaxPosDiffBitwise = 0x74; // float
		constexpr auto MaxAngleDiffBitwise = 0x78; // float
		constexpr auto MaxScaleDiffBitwise = 0x7c; // float
		constexpr auto AllowedRotationFormats = 0x80; // TArray<AnimationCompressionFormat>
		constexpr auto AllowedTranslationFormats = 0x90; // TArray<AnimationCompressionFormat>
		constexpr auto AllowedScaleFormats = 0xa0; // TArray<AnimationCompressionFormat>
		constexpr auto bResampleAnimation = 0xb0; // char : 1
		constexpr auto ResampledFramerate = 0xb4; // float
		constexpr auto MinKeysForResampling = 0xb8; // int32_t
		constexpr auto bUseAdaptiveError = 0xbc; // char : 1
		constexpr auto bUseOverrideForEndEffectors = 0xbc; // char : 1
		constexpr auto TrackHeightBias = 0xc0; // int32_t
		constexpr auto ParentingDivisor = 0xc4; // float
		constexpr auto ParentingDivisorExponent = 0xc8; // float
		constexpr auto bUseAdaptiveError2 = 0xcc; // char : 1
		constexpr auto RotationErrorSourceRatio = 0xd0; // float
		constexpr auto TranslationErrorSourceRatio = 0xd4; // float
		constexpr auto ScaleErrorSourceRatio = 0xd8; // float
		constexpr auto MaxErrorPerTrackRatio = 0xdc; // float
		constexpr auto PerturbationProbeSize = 0xe0; // float
	}

	namespace n_UAnimationSettings { // : UDeveloperSettings
		constexpr auto CompressCommandletVersion = 0x38; // int32_t
		constexpr auto KeyEndEffectorsMatchNameArray = 0x40; // TArray<FString>
		constexpr auto DefaultCompressionAlgorithm = 0x50; // UAnimCompress*
		constexpr auto RotationCompressionFormat = 0x58; // AnimationCompressionFormat
		constexpr auto TranslationCompressionFormat = 0x59; // AnimationCompressionFormat
		constexpr auto MaxCurveError = 0x5c; // float
		constexpr auto AlternativeCompressionThreshold = 0x60; // float
		constexpr auto ForceRecompression = 0x64; // bool
		constexpr auto bOnlyCheckForMissingSkeletalMeshes = 0x65; // bool
		constexpr auto bForceBelowThreshold = 0x66; // bool
		constexpr auto bFirstRecompressUsingCurrentOrDefault = 0x67; // bool
		constexpr auto bRaiseMaxErrorToExisting = 0x68; // bool
		constexpr auto bTryExhaustiveSearch = 0x69; // bool
		constexpr auto bEnableSegmenting = 0x6a; // bool
		constexpr auto bEnablePerformanceLog = 0x6b; // bool
		constexpr auto bStripAnimationDataOnDedicatedServer = 0x6c; // bool
		constexpr auto bTickAnimationOnSkeletalMeshInit = 0x6d; // bool
		constexpr auto bAnimCustomModeNotifyStateEndMissingErrorFix = 0x6e; // bool
	}

	namespace n_USmokeTestCommandlet { // : UCommandlet
		constexpr auto HelpDescription = 0x28; // FString
		constexpr auto HelpUsage = 0x38; // FString
		constexpr auto HelpWebLink = 0x48; // FString
		constexpr auto HelpParamNames = 0x58; // TArray<FString>
		constexpr auto HelpParamDescriptions = 0x68; // TArray<FString>
		constexpr auto IsServer = 0x78; // char : 1
		constexpr auto IsClient = 0x78; // char : 1
		constexpr auto IsEditor = 0x78; // char : 1
		constexpr auto LogToConsole = 0x78; // char : 1
		constexpr auto ShowErrorCount = 0x78; // char : 1
		constexpr auto ShowProgress = 0x78; // char : 1
	}

	namespace n_UParticleEffectNotify { // : UAnimNotify
		constexpr auto m_bUseMainPC = 0x50; // bool
		constexpr auto UseElement = 0x51; // bool
		constexpr auto TestElementType = 0x52; // EParticleEffectElementType
		constexpr auto m_bUseColor = 0x53; // bool
		constexpr auto m_bEnemyColor = 0x54; // FLinearColor
		constexpr auto PSTemplate = 0x68; // UParticleSystem*
		constexpr auto SkeletalEffect = 0x70; // AActor*
		constexpr auto SkeletalEffecthAnimation = 0x78; // UAnimationAsset*
		constexpr auto LocationOffset = 0x80; // FVector
		constexpr auto RotationOffset = 0x8c; // FRotator
		constexpr auto Scale = 0x98; // FVector
		constexpr auto Attached = 0xa4; // bool
		constexpr auto m_bUseSkelVert = 0xa5; // bool
		constexpr auto SocketName = 0xa8; // FName
		constexpr auto ParamSize = 0xb0; // FVector
	}

	namespace n_AHUD { // : AActor
		constexpr auto PlayerOwner = 0x218; // APlayerController*
		constexpr auto bLostFocusPaused = 0x220; // char : 1
		constexpr auto bShowHUD = 0x220; // char : 1
		constexpr auto bShowDebugInfo = 0x220; // char : 1
		constexpr auto CurrentTargetIndex = 0x224; // int32_t
		constexpr auto bShowHitBoxDebugInfo = 0x228; // char : 1
		constexpr auto bShowOverlays = 0x228; // char : 1
		constexpr auto bEnableDebugTextShadow = 0x228; // char : 1
		constexpr auto PostRenderedActors = 0x230; // TArray<AActor*>
		constexpr auto DebugDisplay = 0x248; // TArray<FName>
		constexpr auto ToggledDebugCategories = 0x258; // TArray<FName>
		constexpr auto Canvas = 0x268; // UCanvas*
		constexpr auto DebugCanvas = 0x270; // UCanvas*
		constexpr auto DebugTextList = 0x278; // TArray<FDebugTextInfo>
		constexpr auto ShowDebugTargetDesiredClass = 0x288; // AActor*
		constexpr auto ShowDebugTargetActor = 0x290; // AActor*
	}

	namespace n_ULandscapeGrassType { // : UObject
		constexpr auto GrassVarieties = 0x28; // TArray<FGrassVariety>
		constexpr auto bEnableDensityScaling = 0x38; // char : 1
		constexpr auto GrassMesh = 0x40; // UStaticMesh*
		constexpr auto GrassDensity = 0x48; // float
		constexpr auto PlacementJitter = 0x4c; // float
		constexpr auto StartCullDistance = 0x50; // int32_t
		constexpr auto EndCullDistance = 0x54; // int32_t
		constexpr auto RandomRotation = 0x58; // bool
		constexpr auto AlignToSurface = 0x59; // bool
	}

	namespace n_UMovieSubtitleData { // : UDataAsset
		constexpr auto SubtitleDataList = 0x30; // TArray<FMovieSubtitleInfo>
	}

	namespace n_UMovieSceneSlomoSection { // : UMovieSceneFloatSection
		constexpr auto FloatCurve = 0xe0; // FMovieSceneFloatChannel
	}

	namespace n_UMM_Exchange_Tab_HorizonBtn { // : UWidgetBase
		constexpr auto m_Txt_TabName = 0x2f0; // UMirTextBlock*
		constexpr auto m_Img_Selected = 0x2f8; // UMirImage*
		constexpr auto m_Btn_Main = 0x300; // UMirButton*
		constexpr auto m_TutorialHighLight = 0x308; // UTutorialHighlightWidget*
	}

	namespace n_UMM_UIShopMainTab { // : UWidgetBase
		constexpr auto m_ImgSelected = 0x2f8; // UMirImage*
		constexpr auto m_ImgTagIcon = 0x300; // UMirImage*
		constexpr auto m_BtnMainTab = 0x308; // UMirButton*
		constexpr auto m_TxtTabName = 0x310; // UMirTextBlock*
		constexpr auto m_PanelIndicator = 0x318; // UMirCanvasPanel*
	}

	namespace n_UMaterialExpressionStaticBool { // : UMaterialExpression
		constexpr auto Value = 0x40; // char : 1
	}

	namespace n_UAnimSequenceBase { // : UAnimationAsset
		constexpr auto Notifies = 0x80; // TArray<FAnimNotifyEvent>
		constexpr auto SequenceLength = 0x90; // float
		constexpr auto RateScale = 0x94; // float
		constexpr auto RawCurveData = 0x98; // FRawCurveTracks
	}

	namespace n_UBoxReflectionCaptureComponent { // : UReflectionCaptureComponent
		constexpr auto BoxTransitionDistance = 0x298; // float
		constexpr auto PreviewInfluenceBox = 0x2a0; // UBoxComponent*
		constexpr auto PreviewCaptureBox = 0x2a8; // UBoxComponent*
	}

	namespace n_AMM_GameStateBase { // : AGameStateBase
		constexpr auto GameModeClass = 0x218; // AGameModeBase*
		constexpr auto AuthorityGameMode = 0x220; // AGameModeBase*
		constexpr auto SpectatorClass = 0x228; // ASpectatorPawn*
		constexpr auto PlayerArray = 0x230; // TArray<APlayerState*>
		constexpr auto bReplicatedHasBegunPlay = 0x240; // bool
		constexpr auto ReplicatedWorldTimeSeconds = 0x244; // float
		constexpr auto ServerWorldTimeSecondsDelta = 0x248; // float
		constexpr auto ServerWorldTimeSecondsUpdateFrequency = 0x24c; // float
	}

	namespace n_UMM_Auction_ComboSlot { // : UWidgetBase
		constexpr auto m_pTxtName = 0x2e0; // UMirTextBlock*
		constexpr auto m_pImgSelect = 0x2e8; // UMirImage*
		constexpr auto m_pBtnMain = 0x2f0; // UMirButton*
	}

	namespace n_UMM_DungeonCommonTicket { // : UWidgetBase
		constexpr auto txtFixNeedTicket = 0x2e0; // UMirTextBlock*
		constexpr auto slotNeedTicket1 = 0x2e8; // UMM_Slot_Material_Item*
		constexpr auto txtFixHaveTicket = 0x2f0; // UMirTextBlock*
		constexpr auto slotNeedTicket2 = 0x2f8; // UMM_Slot_Material_Item*
		constexpr auto txtFixGuildInfo = 0x300; // UMirTextBlock*
		constexpr auto btnGuildInfo = 0x308; // UMM_Common_Btn_Symbol*
		constexpr auto imgGuildMarkBack = 0x310; // UMirImage*
		constexpr auto imgGuildMark = 0x318; // UMirImage*
		constexpr auto txtGuildName = 0x320; // UMirTextBlock*
		constexpr auto btnChargeTicket = 0x328; // UMirButton*
		constexpr auto txtChargeBtn = 0x330; // UMirTextBlock*
		constexpr auto BtnTooltip = 0x338; // UMM_Common_ToolTipBtn*
		constexpr auto grdDungeonShop = 0x340; // UGridPanel*
		constexpr auto m_pBtnDungeonShop = 0x348; // UMirButton*
	}

	namespace n_UMM_Popup_Friend_OrderOption { // : UWidgetBase
		constexpr auto m_AniStart = 0x2e0; // UWidgetAnimation*
		constexpr auto m_AniEnd = 0x2e8; // UWidgetAnimation*
		constexpr auto m_NormalSortBtn = 0x2f0; // UButton*
		constexpr auto m_LevelSortBtn = 0x2f8; // UButton*
		constexpr auto m_CombatSortBtn = 0x300; // UButton*
		constexpr auto m_GradeSortBtn = 0x308; // UButton*
		constexpr auto m_NormalSort = 0x310; // UImage*
		constexpr auto m_LevelSort = 0x318; // UImage*
		constexpr auto m_CombatSort = 0x320; // UImage*
		constexpr auto m_GradeSort = 0x328; // UImage*
		constexpr auto m_AscendBtn = 0x330; // UButton*
		constexpr auto m_DescendBtn = 0x338; // UButton*
		constexpr auto m_SelectAscend = 0x340; // UImage*
		constexpr auto m_SelectDescend = 0x348; // UImage*
		constexpr auto m_CancelBtn = 0x350; // UMM_Common_Btn*
		constexpr auto m_OkBtn = 0x358; // UMM_Common_Btn*
		constexpr auto m_Btn_Close = 0x360; // UMM_Common_Btn_Symbol*
	}

	namespace n_UMM_Auction_Slot_Material { // : UMM_Auction_Slot_Base
		constexpr auto m_pSlotItem = 0x340; // UMM_Slot_Inventory*
		constexpr auto m_pTxtName = 0x348; // UMirTextBlock*
		constexpr auto m_pTxtEachPrice = 0x350; // UMirTextBlock*
		constexpr auto m_pTxtTotalPrice = 0x358; // UMirTextBlock*
		constexpr auto m_pTxtRemainTime = 0x360; // UMirTextBlock*
		constexpr auto m_pBtnItem = 0x368; // UMirButton*
		constexpr auto m_pBtnClick = 0x370; // UMirButton*
	}

	namespace n_UAnimNotify_PlayMontageNotify { // : UAnimNotify
		constexpr auto NotifyName = 0x38; // FName
	}

	namespace n_UContentsLightData { // : UDataAsset
		constexpr auto CustomizingClassLight = 0x30; // TMap<EPlayerClassID, FContentsLightValue>
		constexpr auto CustomizingClassPostProcess = 0x80; // TMap<EPlayerClassID, FContentsPostProcessValue>
		constexpr auto UIClassLight = 0xd0; // TMap<EPlayerClassID, FContentsLightValue>
		constexpr auto UIClassPostProcess = 0x120; // TMap<EPlayerClassID, FContentsPostProcessValue>
		constexpr auto UIForceLight = 0x170; // TMap<EPlayerClassID, FContentsLightValue>
		constexpr auto UIForcePostProcess = 0x1c0; // TMap<EPlayerClassID, FContentsPostProcessValue>
		constexpr auto VehicleLight = 0x210; // FContentsLightValue
		constexpr auto VehiclePostProcess = 0x254; // FContentsPostProcessValue
		constexpr auto DarkPetLight = 0x270; // FContentsLightValue
		constexpr auto DarkPetPostProcess = 0x2b4; // FContentsPostProcessValue
		constexpr auto BrightPetLight = 0x2d0; // FContentsLightValue
		constexpr auto BrightPetPostProcess = 0x314; // FContentsPostProcessValue
	}

	namespace n_UMM_HudQuestSlot { // : UWidgetBase
		constexpr auto m_iEffectID_Doing_Tracker = 0x2e0; // int32_t
		constexpr auto m_iEffectID_Doing_Icon = 0x2e4; // int32_t
		constexpr auto m_iEffectID_Touched = 0x2e8; // int32_t
		constexpr auto m_iEffectID_Complate = 0x2ec; // int32_t
		constexpr auto m_iEffectID_Complate_Tracker = 0x2f0; // int32_t
		constexpr auto m_iEffectID_Attention = 0x2f4; // int32_t
		constexpr auto m_CompleteSoundID = 0x2f8; // int32_t
		constexpr auto m_arrQuestStateIcon = 0x300; // TArray<FBrushObject>
		constexpr auto m_iMSTRID_Complete = 0x310; // int32_t
		constexpr auto m_iMSTRID_Count = 0x314; // int32_t
		constexpr auto m_iMSTRID_NoControl = 0x318; // int32_t
		constexpr auto m_iMSTRID_Reward = 0x31c; // int32_t
		constexpr auto m_pAniReward01 = 0x320; // UWidgetAnimation*
		constexpr auto m_pAniReward02 = 0x328; // UWidgetAnimation*
		constexpr auto m_pAniReward03 = 0x330; // UWidgetAnimation*
		constexpr auto m_fOtherStageStateIconAlpha = 0x338; // float
		constexpr auto m_pAniQuestUpdate = 0x340; // UWidgetAnimation*
		constexpr auto m_pBtnCancel = 0x348; // UButton*
		constexpr auto m_pTextQuestTitle = 0x350; // UMirTextBlock*
		constexpr auto m_pGridEffect = 0x358; // UPanelWidget*
		constexpr auto m_pEffectSelected = 0x360; // UEffectWidgetBase*
		constexpr auto m_pImgQuestStateIcon = 0x368; // UMirImage*
		constexpr auto m_pBtnTracker = 0x370; // UButton*
		constexpr auto m_pGridEffect_Reward = 0x378; // UPanelWidget*
		constexpr auto m_pTextState = 0x380; // UMirTextBlock*
		constexpr auto m_pTextSubTitle = 0x388; // UMirTextBlock*
		constexpr auto m_pSpacerRight = 0x390; // USpacer*
		constexpr auto m_pCanRewardSlot = 0x398; // UCanvasPanel*
		constexpr auto m_RewardSlots = 0x3a0; // TArray<UMM_Slot_Material*>
		constexpr auto m_pEffectUpdate = 0x3b0; // UPanelWidget*
		constexpr auto m_pGridEffectStateIcon = 0x3b8; // UPanelWidget*
		constexpr auto m_pEffectDoingIcon = 0x3c0; // UEffectWidgetBase*
		constexpr auto m_pEffectComplateIcon = 0x3c8; // UEffectWidgetBase*
		constexpr auto m_pEffectAttentionIcon = 0x3d0; // UEffectWidgetBase*
	}

	namespace n_UWidgetComponent { // : UMeshComponent
		constexpr auto Space = 0x444; // EWidgetSpace
		constexpr auto TimingPolicy = 0x445; // EWidgetTimingPolicy
		constexpr auto WidgetClass = 0x448; // UUserWidget*
		constexpr auto DrawSize = 0x450; // FIntPoint
		constexpr auto bManuallyRedraw = 0x458; // bool
		constexpr auto bRedrawRequested = 0x459; // bool
		constexpr auto RedrawTime = 0x45c; // float
		constexpr auto CurrentDrawSize = 0x468; // FIntPoint
		constexpr auto bDrawAtDesiredSize = 0x470; // bool
		constexpr auto Pivot = 0x474; // FVector2D
		constexpr auto bReceiveHardwareInput = 0x47c; // bool
		constexpr auto bWindowFocusable = 0x47d; // bool
		constexpr auto WindowVisibility = 0x47e; // EWindowVisibility
		constexpr auto bApplyGammaCorrection = 0x47f; // bool
		constexpr auto OwnerPlayer = 0x480; // ULocalPlayer*
		constexpr auto BackgroundColor = 0x488; // FLinearColor
		constexpr auto TintColorAndOpacity = 0x498; // FLinearColor
		constexpr auto OpacityFromTexture = 0x4a8; // float
		constexpr auto BlendMode = 0x4ac; // EWidgetBlendMode
		constexpr auto bIsTwoSided = 0x4ad; // bool
		constexpr auto TickWhenOffscreen = 0x4ae; // bool
		constexpr auto Widget = 0x4b0; // UUserWidget*
		constexpr auto BodySetup = 0x4d8; // UBodySetup*
		constexpr auto TranslucentMaterial = 0x4e0; // UMaterialInterface*
		constexpr auto TranslucentMaterial_OneSided = 0x4e8; // UMaterialInterface*
		constexpr auto OpaqueMaterial = 0x4f0; // UMaterialInterface*
		constexpr auto OpaqueMaterial_OneSided = 0x4f8; // UMaterialInterface*
		constexpr auto MaskedMaterial = 0x500; // UMaterialInterface*
		constexpr auto MaskedMaterial_OneSided = 0x508; // UMaterialInterface*
		constexpr auto RenderTarget = 0x510; // UTextureRenderTarget2D*
		constexpr auto MaterialInstance = 0x518; // UMaterialInstanceDynamic*
		constexpr auto bAddedToScreen = 0x520; // bool
		constexpr auto bEditTimeUsable = 0x521; // bool
		constexpr auto bUsePointSampling = 0x522; // bool
		constexpr auto bDontUseZtest = 0x523; // bool
		constexpr auto bUseDepthScaling = 0x524; // bool
		constexpr auto ScreenZOffset = 0x528; // float
		constexpr auto SharedLayerName = 0x530; // FName
		constexpr auto LayerZOrder = 0x538; // int32_t
		constexpr auto GeometryMode = 0x53c; // EWidgetGeometryMode
		constexpr auto CylinderArcAngle = 0x540; // float
	}

	namespace n_UAndroidPermissionCallbackProxy { // : UObject
		constexpr auto OnPermissionsGrantedDynamicDelegate = 0x28; // FScriptMulticastDelegate
	}

	namespace n_UMirScrollBox { // : UScrollBox
		constexpr auto m_eStyle = 0x880; // EStyle_MirScrollBox
	}

	namespace n_USphereReflectionCaptureComponent { // : UReflectionCaptureComponent
		constexpr auto InfluenceRadius = 0x298; // float
		constexpr auto CaptureDistanceScale = 0x29c; // float
		constexpr auto PreviewInfluenceRadius = 0x2a0; // UDrawSphereComponent*
	}

	namespace n_UMM_Fame_DetailInfo_Slot { // : UWidgetBase
		constexpr auto Txt_Title = 0x2e0; // UMirTextBlock*
		constexpr auto Txt_Value = 0x2e8; // UMirTextBlock*
		constexpr auto STRID_POINT = 0x2f0; // int32_t
	}

	namespace n_ANavigationGraphNode { // : AActor
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto bHidden = 0x58; // char : 1
		constexpr auto bNetTemporary = 0x58; // char : 1
		constexpr auto bNetStartup = 0x58; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x58; // char : 1
		constexpr auto bAlwaysRelevant = 0x58; // char : 1
		constexpr auto bReplicateMovement = 0x58; // char : 1
		constexpr auto bTearOff = 0x58; // char : 1
		constexpr auto bExchangedRoles = 0x58; // char : 1
		constexpr auto bNetLoadOnClient = 0x59; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x59; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x59; // char : 1
		constexpr auto bRelevantForLevelBounds = 0x59; // char : 1
		constexpr auto bReplayRewindable = 0x59; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x59; // char : 1
		constexpr auto bAutoDestroyWhenFinished = 0x59; // char : 1
		constexpr auto bBlockInput = 0x59; // char : 1
		constexpr auto bCanBeDamaged = 0x5a; // char : 1
		constexpr auto bCollideWhenPlacing = 0x5a; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x5a; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x5a; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x5a; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x5a; // char : 1
		constexpr auto bIsEditorOnlyActor = 0x5a; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x5a; // char : 1
		constexpr auto bReplicates = 0x5b; // char : 1
		constexpr auto bCanBeInCluster = 0x5b; // char : 1
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x5b; // char : 1
		constexpr auto bActorEnableCollision = 0x5c; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x5c; // char : 1
		constexpr auto UpdateOverlapsMethodDuringLevelStreaming = 0x5d; // EActorUpdateOverlapsMethod
		constexpr auto DefaultUpdateOverlapsMethodDuringLevelStreaming = 0x5e; // EActorUpdateOverlapsMethod
		constexpr auto RemoteRole = 0x5f; // ENetRole
		constexpr auto ReplicatedMovement = 0x60; // FRepMovement
		constexpr auto InitialLifeSpan = 0x94; // float
		constexpr auto CustomTimeDilation = 0x98; // float
		constexpr auto AttachmentReplication = 0xa0; // FRepAttachment
		constexpr auto Owner = 0xe0; // AActor*
		constexpr auto NetDriverName = 0xe8; // FName
		constexpr auto Role = 0xf0; // ENetRole
		constexpr auto NetDormancy = 0xf1; // ENetDormancy
		constexpr auto SpawnCollisionHandlingMethod = 0xf2; // ESpawnActorCollisionHandlingMethod
		constexpr auto AutoReceiveInput = 0xf3; // EAutoReceiveInput
		constexpr auto InputPriority = 0xf4; // int32_t
		constexpr auto InputComponent = 0xf8; // UInputComponent*
		constexpr auto NetCullDistanceSquared = 0x100; // float
		constexpr auto NetTag = 0x104; // int32_t
		constexpr auto NetUpdateFrequency = 0x108; // float
		constexpr auto MinNetUpdateFrequency = 0x10c; // float
		constexpr auto NetPriority = 0x110; // float
		constexpr auto Instigator = 0x118; // APawn*
		constexpr auto Children = 0x120; // TArray<AActor*>
		constexpr auto RootComponent = 0x130; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x138; // TArray<AMatineeActor*>
		constexpr auto Layers = 0x150; // TArray<FName>
		constexpr auto ParentComponent = 0x160; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto Tags = 0x168; // TArray<FName>
		constexpr auto OnTakeAnyDamage = 0x178; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x179; // FScriptMulticastDelegate
		constexpr auto OnTakeRadialDamage = 0x17a; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x17b; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x17c; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x17d; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x17e; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x17f; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x180; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x181; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x182; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x183; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x184; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x185; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x186; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x187; // FScriptMulticastDelegate
		constexpr auto InstanceComponents = 0x1e8; // TArray<UActorComponent*>
		constexpr auto BlueprintCreatedComponents = 0x1f8; // TArray<UActorComponent*>
	}

	namespace n_USoundCueTemplate { // : USoundCue
		constexpr auto bPrimeOnLoad = 0x160; // char : 1
		constexpr auto FirstNode = 0x168; // USoundNode*
		constexpr auto VolumeMultiplier = 0x170; // float
		constexpr auto PitchMultiplier = 0x174; // float
		constexpr auto AttenuationOverrides = 0x178; // FSoundAttenuationSettings
		constexpr auto SubtitlePriority = 0x468; // float
		constexpr auto bOverrideAttenuation = 0x470; // char : 1
		constexpr auto bExcludeFromRandomNodeBranchCulling = 0x470; // char : 1
		constexpr auto bHasPlayWhenSilent = 0x470; // char : 1
	}

	namespace n_USoundNodeModulatorContinuous { // : USoundNode
		constexpr auto PitchModulationParams = 0x40; // FModulatorContinuousParams
		constexpr auto VolumeModulationParams = 0x60; // FModulatorContinuousParams
	}

	namespace n_USequenceGhostTrailNotify { // : UAnimNotifyState
		constexpr auto m_GhostChar = 0x38; // FGhostTrailData
		constexpr auto m_GhostWpn = 0x50; // FGhostTrailData
	}

	namespace n_UMM_Common_CombatPoint { // : UWidgetBase
		constexpr auto Img_Icon = 0x2f8; // UMirImage*
		constexpr auto Txt_Value = 0x300; // UMirTextBlock*
		constexpr auto Btn_Main = 0x308; // UMirButton*
		constexpr auto CombatValue = 0x310; // int32_t
	}

	namespace n_UHapticFeedbackEffect_SoundWave { // : UHapticFeedbackEffect_Base
		constexpr auto SoundWave = 0x28; // USoundWave*
	}

	namespace n_UParticleModuleKillHeight { // : UParticleModuleKillBase
		constexpr auto Height = 0x30; // FRawDistributionFloat
		constexpr auto bAbsolute = 0x60; // char : 1
		constexpr auto bFloor = 0x60; // char : 1
		constexpr auto bApplyPSysScale = 0x60; // char : 1
	}

	namespace n_USpotLightComponent { // : UPointLightComponent
		constexpr auto InnerConeAngle = 0x398; // float
		constexpr auto OuterConeAngle = 0x39c; // float
		constexpr auto LightShaftConeAngle = 0x3a0; // float
	}

	namespace n_UMM_PopUp_GuildJoinOrCreation { // : UWidgetBase
		constexpr auto Txt_Title = 0x2e0; // UMirTextBlock*
		constexpr auto r_txt_message = 0x2e8; // UMirRichTextBlock*
		constexpr auto Btn_First = 0x2f0; // UMM_Common_Btn*
		constexpr auto Btn_Second = 0x2f8; // UMM_Common_Btn*
		constexpr auto btn_close = 0x300; // UMM_Common_Btn_Symbol*
	}

	namespace n_UMM_Map_Dest { // : UWidgetBase
		constexpr auto m_fRaderScale = 0x2e0; // float
		constexpr auto m_AniActive = 0x2e8; // UWidgetAnimation*
		constexpr auto m_SpcMain = 0x2f8; // USpacer*
		constexpr auto m_ImgDest_1 = 0x300; // UImage*
		constexpr auto m_ImgDest_2 = 0x308; // UImage*
	}

	namespace n_UMM_SelectGuide { // : UWidgetBase
		constexpr auto m_Txt_MainMsg = 0x2e0; // UMirTextBlock*
		constexpr auto m_Txt_SubMsg = 0x2e8; // UMirTextBlock*
	}

	namespace n_UMaterialExpressionSetMaterialAttributes { // : UMaterialExpression
		constexpr auto Inputs = 0x40; // TArray<FExpressionInput>
		constexpr auto AttributeSetTypes = 0x50; // TArray<FGuid>
	}

	namespace n_UMM_Dominion_Title_ListBase { // : UWidgetBase
		constexpr auto m_pVertBox = 0x2e0; // UVerticalBox*
		constexpr auto m_pTxtTitle = 0x2e8; // UMirTextBlock*
	}

	namespace n_UBTDecorator_BlueprintBase { // : UBTDecorator
		constexpr auto AIOwner = 0x68; // AAIController*
		constexpr auto ActorOwner = 0x70; // AActor*
		constexpr auto ObservedKeyNames = 0x78; // TArray<FName>
		constexpr auto bShowPropertyDetails = 0x98; // char : 1
		constexpr auto bCheckConditionOnlyBlackBoardChanges = 0x98; // char : 1
		constexpr auto bIsObservingBB = 0x98; // char : 1
	}

	namespace n_UMaterialExpressionMaterialAttributeLayers { // : UMaterialExpression
		constexpr auto ParameterName = 0x40; // FName
		constexpr auto ExpressionGUID = 0x48; // FGuid
		constexpr auto Input = 0x58; // FMaterialAttributesInput
		constexpr auto DefaultLayers = 0x70; // FMaterialLayersFunctions
		constexpr auto LayerCallers = 0xb0; // TArray<UMaterialExpressionMaterialFunctionCall*>
		constexpr auto NumActiveLayerCallers = 0xc0; // int32_t
		constexpr auto BlendCallers = 0xc8; // TArray<UMaterialExpressionMaterialFunctionCall*>
		constexpr auto NumActiveBlendCallers = 0xd8; // int32_t
		constexpr auto bIsLayerGraphBuilt = 0xdc; // bool
	}

	namespace n_UFirebaseFutureString { // : UBlueprintAsyncActionBase
		constexpr auto OnComplete = 0x30; // FScriptMulticastDelegate
	}

	namespace n_UParticleModuleVectorFieldLocal { // : UParticleModuleVectorFieldBase
		constexpr auto VectorField = 0x30; // UVectorField*
		constexpr auto RelativeTranslation = 0x38; // FVector
		constexpr auto RelativeRotation = 0x44; // FRotator
		constexpr auto RelativeScale3D = 0x50; // FVector
		constexpr auto Intensity = 0x5c; // float
		constexpr auto Tightness = 0x60; // float
		constexpr auto bIgnoreComponentTransform = 0x64; // char : 1
		constexpr auto bTileX = 0x64; // char : 1
		constexpr auto bTileY = 0x64; // char : 1
		constexpr auto bTileZ = 0x64; // char : 1
		constexpr auto bUseFixDT = 0x64; // char : 1
	}

	namespace n_UBTTask_ReturnToCenter { // : UBTTaskNode
		constexpr auto Force = 0x70; // bool
	}

	namespace n_UInterpTrackInstColorProp { // : UInterpTrackInstProperty
		constexpr auto ResetColor = 0x40; // FColor
	}

	namespace n_UCutsceneDialogueWidget { // : UWidgetBase
		constexpr auto m_NameText = 0x2e0; // FText
		constexpr auto m_DialogueVisible = 0x2f8; // ESlateVisibility
		constexpr auto m_SkipButtonVisible = 0x2f9; // ESlateVisibility
		constexpr auto m_pAnim_Next = 0x300; // UWidgetAnimation*
		constexpr auto m_RelationTitleColor = 0x308; // FLinearColor
		constexpr auto m_NameTxtBlock = 0x318; // UTextBlock*
		constexpr auto m_DialogBox = 0x320; // UMirRichTextBlock*
		constexpr auto m_pCanSkip = 0x328; // UCanvasPanel*
		constexpr auto m_pTalkSkip = 0x330; // UCanvasPanel*
		constexpr auto m_pQuestTitlePanel = 0x338; // UMirCanvasPanel*
		constexpr auto m_pTxtQuestTitleName = 0x340; // UMirTextBlock*
	}

	namespace n_UMM_Secret_Popup { // : UWidgetBase
		constexpr auto PartyMatchingStrID = 0x2f0; // int32_t
		constexpr auto EnterStrID = 0x2f4; // int32_t
		constexpr auto MoveStrID = 0x2f8; // int32_t
		constexpr auto btn_close = 0x300; // UMM_Common_Btn_Symbol*
		constexpr auto Txt_Title = 0x308; // UMirTextBlock*
		constexpr auto Txt_Explanation = 0x310; // UMirTextBlock*
		constexpr auto Txt_FixedNowBP = 0x318; // UMirTextBlock*
		constexpr auto Txt_NowBPNum = 0x320; // UMirTextBlock*
		constexpr auto Txt_FixedRecommendBP = 0x328; // UMirTextBlock*
		constexpr auto Txt_RecommendBPNum = 0x330; // UMirTextBlock*
		constexpr auto Txt_Stage = 0x338; // UMirTextBlock*
		constexpr auto Txt_DifficultyNum = 0x340; // UMirTextBlock*
		constexpr auto Btn_LvDown = 0x348; // UMM_Common_Btn_Symbol*
		constexpr auto Btn_LvUp = 0x350; // UMM_Common_Btn_Symbol*
		constexpr auto Img_SelectDungeon = 0x358; // UMirImage*
		constexpr auto Img_Disabled = 0x360; // UMirImage*
		constexpr auto Img_NeedCost = 0x368; // UMM_Slot_Material*
		constexpr auto Txt_NeedCostTitle = 0x370; // UMirTextBlock*
		constexpr auto Txt_NeedCost = 0x378; // UMirTextBlock*
		constexpr auto Img_NeedItem = 0x380; // UMM_Slot_Material*
		constexpr auto Txt_NeedItemTitle = 0x388; // UMirTextBlock*
		constexpr auto Txt_NeedItem = 0x390; // UMirTextBlock*
		constexpr auto Txt_FixedHaveTicket = 0x398; // UMirTextBlock*
		constexpr auto txtFixedDisabled = 0x3a0; // UMirTextBlock*
		constexpr auto Pan_RewardList = 0x3a8; // UPanelWidget*
		constexpr auto slot_reward = 0x3b0; // TArray<UMM_Slot_Material*>
		constexpr auto Btn_PartyMatching = 0x3c0; // UMM_Common_Btn*
		constexpr auto Btn_DungeonEnter = 0x3c8; // UMM_Common_Btn*
		constexpr auto wgtNeedQuest = 0x3d0; // UMM_DungeonQuestSlotWidget*
		constexpr auto Btn_Disable = 0x3d8; // UButton*
	}

	namespace n_UBTService { // : UBTAuxiliaryNode
		constexpr auto Interval = 0x60; // float
		constexpr auto RandomDeviation = 0x64; // float
		constexpr auto bCallTickOnSearchStart = 0x68; // char : 1
		constexpr auto bRestartTimerOnEachActivation = 0x68; // char : 1
	}

	namespace n_UTimeSynchronizableMediaSource { // : UBaseMediaSource
		constexpr auto bUseTimeSynchronization = 0x88; // bool
		constexpr auto FrameDelay = 0x8c; // int32_t
		constexpr auto TimeDelay = 0x90; // double
	}

	namespace n_UFoliageInstancedStaticMeshComponent { // : UHierarchicalInstancedStaticMeshComponent
		constexpr auto OnInstanceTakePointDamage = 0x628; // FScriptMulticastDelegate
		constexpr auto OnInstanceTakeRadialDamage = 0x638; // FScriptMulticastDelegate
	}

	namespace n_UMM_MagicStone_AttributeSlot { // : UWidgetBase
		constexpr auto Img_Icon = 0x2f0; // UMirImage*
		constexpr auto Txt_OptionName = 0x2f8; // UMirTextBlock*
		constexpr auto Txt_OptionValue = 0x300; // UMirTextBlock*
	}

	namespace n_UControlPointMeshComponent { // : UStaticMeshComponent
		constexpr auto VirtualTextureMainPassMaxDrawDistance = 0x4a8; // float
	}

	namespace n_AActor { // : UObject
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto bHidden = 0x58; // char : 1
		constexpr auto bNetTemporary = 0x58; // char : 1
		constexpr auto bNetStartup = 0x58; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x58; // char : 1
		constexpr auto bAlwaysRelevant = 0x58; // char : 1
		constexpr auto bReplicateMovement = 0x58; // char : 1
		constexpr auto bTearOff = 0x58; // char : 1
		constexpr auto bExchangedRoles = 0x58; // char : 1
		constexpr auto bNetLoadOnClient = 0x59; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x59; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x59; // char : 1
		constexpr auto bRelevantForLevelBounds = 0x59; // char : 1
		constexpr auto bReplayRewindable = 0x59; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x59; // char : 1
		constexpr auto bAutoDestroyWhenFinished = 0x59; // char : 1
		constexpr auto bBlockInput = 0x59; // char : 1
		constexpr auto bCanBeDamaged = 0x5a; // char : 1
		constexpr auto bCollideWhenPlacing = 0x5a; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x5a; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x5a; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x5a; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x5a; // char : 1
		constexpr auto bIsEditorOnlyActor = 0x5a; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x5a; // char : 1
		constexpr auto bReplicates = 0x5b; // char : 1
		constexpr auto bCanBeInCluster = 0x5b; // char : 1
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x5b; // char : 1
		constexpr auto bActorEnableCollision = 0x5c; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x5c; // char : 1
		constexpr auto UpdateOverlapsMethodDuringLevelStreaming = 0x5d; // EActorUpdateOverlapsMethod
		constexpr auto DefaultUpdateOverlapsMethodDuringLevelStreaming = 0x5e; // EActorUpdateOverlapsMethod
		constexpr auto RemoteRole = 0x5f; // ENetRole
		constexpr auto ReplicatedMovement = 0x60; // FRepMovement
		constexpr auto InitialLifeSpan = 0x94; // float
		constexpr auto CustomTimeDilation = 0x98; // float
		constexpr auto AttachmentReplication = 0xa0; // FRepAttachment
		constexpr auto Owner = 0xe0; // AActor*
		constexpr auto NetDriverName = 0xe8; // FName
		constexpr auto Role = 0xf0; // ENetRole
		constexpr auto NetDormancy = 0xf1; // ENetDormancy
		constexpr auto SpawnCollisionHandlingMethod = 0xf2; // ESpawnActorCollisionHandlingMethod
		constexpr auto AutoReceiveInput = 0xf3; // EAutoReceiveInput
		constexpr auto InputPriority = 0xf4; // int32_t
		constexpr auto InputComponent = 0xf8; // UInputComponent*
		constexpr auto NetCullDistanceSquared = 0x100; // float
		constexpr auto NetTag = 0x104; // int32_t
		constexpr auto NetUpdateFrequency = 0x108; // float
		constexpr auto MinNetUpdateFrequency = 0x10c; // float
		constexpr auto NetPriority = 0x110; // float
		constexpr auto Instigator = 0x118; // APawn*
		constexpr auto Children = 0x120; // TArray<AActor*>
		constexpr auto RootComponent = 0x130; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x138; // TArray<AMatineeActor*>
		constexpr auto Layers = 0x150; // TArray<FName>
		constexpr auto ParentComponent = 0x160; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto Tags = 0x168; // TArray<FName>
		constexpr auto OnTakeAnyDamage = 0x178; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x179; // FScriptMulticastDelegate
		constexpr auto OnTakeRadialDamage = 0x17a; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x17b; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x17c; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x17d; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x17e; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x17f; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x180; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x181; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x182; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x183; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x184; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x185; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x186; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x187; // FScriptMulticastDelegate
		constexpr auto InstanceComponents = 0x1e8; // TArray<UActorComponent*>
		constexpr auto BlueprintCreatedComponents = 0x1f8; // TArray<UActorComponent*>
	}

	namespace n_UStaticMeshComponent { // : UMeshComponent
		constexpr auto ForcedLodModel = 0x440; // int32_t
		constexpr auto PreviousLODLevel = 0x444; // int32_t
		constexpr auto MinLOD = 0x448; // int32_t
		constexpr auto SubDivisionStepSize = 0x44c; // int32_t
		constexpr auto StaticMesh = 0x450; // UStaticMesh*
		constexpr auto WireframeColorOverride = 0x458; // FColor
		constexpr auto bEvaluateWorldPositionOffset = 0x45c; // char : 1
		constexpr auto bOverrideWireframeColor = 0x45c; // char : 1
		constexpr auto bOverrideMinLOD = 0x45c; // char : 1
		constexpr auto bOverrideNavigationExport = 0x45c; // char : 1
		constexpr auto bForceNavigationObstacle = 0x45c; // char : 1
		constexpr auto bDisallowMeshPaintPerInstance = 0x45c; // char : 1
		constexpr auto bIgnoreInstanceForTextureStreaming = 0x45c; // char : 1
		constexpr auto bOverrideLightMapRes = 0x45c; // char : 1
		constexpr auto bCastDistanceFieldIndirectShadow = 0x45d; // char : 1
		constexpr auto bOverrideDistanceFieldSelfShadowBias = 0x45d; // char : 1
		constexpr auto bUseSubDivisions = 0x45d; // char : 1
		constexpr auto bUseDefaultCollision = 0x45d; // char : 1
		constexpr auto bForceReceiveCSMForLM = 0x45d; // char : 1
		constexpr auto bReverseCulling = 0x45d; // char : 1
		constexpr auto OverriddenLightMapRes = 0x460; // int32_t
		constexpr auto DistanceFieldIndirectShadowMinVisibility = 0x464; // float
		constexpr auto DistanceFieldSelfShadowBias = 0x468; // float
		constexpr auto StreamingDistanceMultiplier = 0x46c; // float
		constexpr auto LODData = 0x470; // TArray<FStaticMeshComponentLODInfo>
		constexpr auto StreamingTextureData = 0x480; // TArray<FStreamingTextureBuildInfo>
		constexpr auto LightmassSettings = 0x490; // FLightmassPrimitiveSettings
	}

	namespace n_UGeometryCacheTrack_FlipbookAnimation { // : UGeometryCacheTrack
		constexpr auto NumMeshSamples = 0x58; // uint32_t
	}

	namespace n_UMM_Customizing_ComponentTitle { // : UWidgetBase
		constexpr auto m_pTextBlock = 0x2e0; // UMirTextBlock*
		constexpr auto m_TitleID = 0x2e8; // int32_t
		constexpr auto m_bLoad = 0x2ec; // bool
	}

	namespace n_UMM_Skill_ListSlot { // : UWidgetBase
		constexpr auto m_Color_SkillGrade1 = 0x2f0; // FLinearColor
		constexpr auto m_Color_SkillGrade2 = 0x300; // FLinearColor
		constexpr auto m_Color_SkillGrade3 = 0x310; // FLinearColor
		constexpr auto m_Color_DurationSkill = 0x320; // FLinearColor
		constexpr auto m_Color_SpecialSkill = 0x330; // FLinearColor
		constexpr auto m_Color_Success = 0x340; // FLinearColor
		constexpr auto m_Color_Fail = 0x350; // FLinearColor
		constexpr auto m_Img_GradeBg = 0x360; // UMirImage*
		constexpr auto m_Img_SelectBg = 0x368; // UMirImage*
		constexpr auto m_SkillSlot = 0x370; // UMM_Skill_DeckSlot*
		constexpr auto m_Txt_Level = 0x378; // UMirTextBlock*
		constexpr auto m_Txt_Name = 0x380; // UMirTextBlock*
		constexpr auto m_Txt_CostTitle = 0x388; // UMirTextBlock*
		constexpr auto m_Txt_CostValue = 0x390; // UMirTextBlock*
		constexpr auto m_Txt_CoolTimeTitle = 0x398; // UMirTextBlock*
		constexpr auto m_Txt_CoolTimeValue = 0x3a0; // UMirTextBlock*
		constexpr auto m_Can_Lock = 0x3a8; // UCanvasPanel*
		constexpr auto m_Txt_Notice = 0x3b0; // UMirTextBlock*
		constexpr auto m_UsedSkillSetList = 0x3b8; // TArray<UOverlay*>
		constexpr auto m_Txt_UsedSkillSetList = 0x3c8; // TArray<UMirTextBlock*>
		constexpr auto m_UnUsedSkillSet = 0x3d8; // UOverlay*
		constexpr auto m_Txt_UnUsedSkillSet = 0x3e0; // UMirTextBlock*
		constexpr auto m_Btn_Main = 0x3e8; // UMirButton*
		constexpr auto mPanelEffectLevelUp = 0x3f0; // UPanelWidget*
		constexpr auto mEffectLevelUp = 0x3f8; // UEffectWidgetBase*
		constexpr auto mImgIndicator = 0x400; // UMirImage*
	}

	namespace n_UMM_ShopNpcGoodsSlot { // : UWidgetBase
		constexpr auto Img_Icon = 0x2e0; // UMirImage*
		constexpr auto Txt_Value = 0x2e8; // UMirTextBlock*
	}

	namespace n_UMovieSceneEventRepeaterSection { // : UMovieSceneEventSectionBase
		constexpr auto Event = 0xe0; // FMovieSceneEvent
	}

	namespace n_UMM_CustomizingAnimInstance { // : UAnimInstance
		constexpr auto m_HeadLookRot = 0x288; // FRotator
		constexpr auto m_NeckLookRot = 0x294; // FRotator
		constexpr auto m_EyeRLookRot = 0x2a0; // FRotator
		constexpr auto m_EyeLLookRot = 0x2ac; // FRotator
		constexpr auto m_NeckSocketName = 0x2b8; // FName
		constexpr auto m_HeadSocketName = 0x2c0; // FName
		constexpr auto m_RightEyeSocketName = 0x2c8; // FName
		constexpr auto m_LeftEyeSocketName = 0x2d0; // FName
		constexpr auto m_HeadOffsetPitch = 0x2d8; // float
		constexpr auto m_EyePitch = 0x2dc; // float
		constexpr auto m_EyeOffset = 0x2e0; // float
		constexpr auto m_HeadRotateAngle = 0x2e4; // float
		constexpr auto m_NeckYawLimit = 0x2e8; // float
		constexpr auto m_NeckPitchLimit = 0x2ec; // float
		constexpr auto m_HeadYawLimit = 0x2f0; // float
		constexpr auto m_HeadPitchLimit = 0x2f4; // float
		constexpr auto m_EyeYawLimit = 0x2f8; // float
		constexpr auto m_EyePitchLimit = 0x2fc; // float
		constexpr auto m_EyeCenter = 0x300; // float
		constexpr auto m_EyeTargetDistance = 0x304; // float
		constexpr auto m_bCustomingPoseFlag = 0x308; // bool
		constexpr auto m_nCustomingPoseIndex = 0x30c; // int32_t
		constexpr auto m_CurrentBoneTransformAlpha = 0x310; // float
		constexpr auto MainState = 0x320; // int32_t
	}

	namespace n_UCineCameraComponent { // : UCameraComponent
		constexpr auto FilmbackSettings = 0x7d0; // FCameraFilmbackSettings
		constexpr auto Filmback = 0x7dc; // FCameraFilmbackSettings
		constexpr auto LensSettings = 0x7e8; // FCameraLensSettings
		constexpr auto FocusSettings = 0x800; // FCameraFocusSettings
		constexpr auto CurrentFocalLength = 0x858; // float
		constexpr auto CurrentAperture = 0x85c; // float
		constexpr auto CurrentFocusDistance = 0x860; // float
		constexpr auto FilmbackPresets = 0x870; // TArray<FNamedFilmbackPreset>
		constexpr auto LensPresets = 0x880; // TArray<FNamedLensPreset>
		constexpr auto DefaultFilmbackPresetName = 0x890; // FString
		constexpr auto DefaultFilmbackPreset = 0x8a0; // FString
		constexpr auto DefaultLensPresetName = 0x8b0; // FString
		constexpr auto DefaultLensFocalLength = 0x8c0; // float
		constexpr auto DefaultLensFStop = 0x8c4; // float
	}

	namespace n_ASplineMeshActor { // : AActor
		constexpr auto SplineMeshComponent = 0x218; // USplineMeshComponent*
	}

	namespace n_UParticleModuleRotationRateBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x29; // char : 1
		constexpr auto LODDuplicate = 0x29; // char : 1
		constexpr auto bSupportsRandomSeed = 0x29; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x29; // char : 1
		constexpr auto LODValidity = 0x2a; // char
	}

	namespace n_UEnvQueryGenerator_Donut { // : UEnvQueryGenerator_ProjectedPoints
		constexpr auto InnerRadius = 0x80; // FAIDataProviderFloatValue
		constexpr auto OuterRadius = 0xb0; // FAIDataProviderFloatValue
		constexpr auto NumberOfRings = 0xe0; // FAIDataProviderIntValue
		constexpr auto PointsPerRing = 0x110; // FAIDataProviderIntValue
		constexpr auto ArcDirection = 0x140; // FEnvDirection
		constexpr auto ArcAngle = 0x160; // FAIDataProviderFloatValue
		constexpr auto bUseSpiralPattern = 0x190; // bool
		constexpr auto Center = 0x198; // UEnvQueryContext*
		constexpr auto bDefineArc = 0x1a0; // char : 1
	}

	namespace n_UPlatformInterfaceWebResponse { // : UObject
		constexpr auto OriginalURL = 0x28; // FString
		constexpr auto ResponseCode = 0x38; // int32_t
		constexpr auto Tag = 0x3c; // int32_t
		constexpr auto StringResponse = 0x40; // FString
		constexpr auto BinaryResponse = 0x50; // TArray<char>
	}

	namespace n_UMM_Popup_Guild_ShopRecord { // : UWidgetBase
		constexpr auto m_CB_Close = 0x2f0; // UMM_Common_Btn_Symbol*
		constexpr auto m_CheckBoxRegist = 0x2f8; // UMirCheckBox*
		constexpr auto m_CheckBoxBuy = 0x300; // UMirCheckBox*
		constexpr auto m_Txt_RecordTitle = 0x308; // UMirTextBlock*
		constexpr auto m_Txt_RegistTitle = 0x310; // UMirTextBlock*
		constexpr auto m_Txt_BuyTitle = 0x318; // UMirTextBlock*
		constexpr auto m_ScrollBox = 0x320; // UMirScrollBox*
		constexpr auto m_Empty_Notice = 0x328; // UMM_Common_Board_Notice*
		constexpr auto m_AniStart = 0x330; // UWidgetAnimation*
		constexpr auto m_AniEnd = 0x338; // UWidgetAnimation*
	}

	namespace n_UFacebookLogin { // : UBlueprintAsyncActionBase
		constexpr auto OnSuccess = 0x30; // FScriptMulticastDelegate
		constexpr auto OnFail = 0x40; // FScriptMulticastDelegate
	}

	namespace n_UBlendProfile { // : UObject
		constexpr auto OwningSkeleton = 0x30; // USkeleton*
		constexpr auto ProfileEntries = 0x38; // TArray<FBlendProfileBoneEntry>
	}

	namespace n_UMaterialExpressionFontSample { // : UMaterialExpression
		constexpr auto Font = 0x40; // UFont*
		constexpr auto FontTexturePage = 0x48; // int32_t
	}

	namespace n_UBTTask_UpdateForceMove { // : UBTTaskNode
		constexpr auto NearRange = 0x70; // float
	}

	namespace n_UMM_Forge_UnsealingSlot { // : UWidgetBase
		constexpr auto m_Img_Selected = 0x300; // UMirImage*
		constexpr auto m_Can_NotRegistered = 0x308; // UPanelWidget*
		constexpr auto m_Img_NotRegisteredSlotLocked = 0x310; // UMirImage*
		constexpr auto m_Img_NotRegisteredSlotPlus = 0x318; // UMirImage*
		constexpr auto m_Can_Registered = 0x320; // UPanelWidget*
		constexpr auto m_Slot_Item = 0x328; // UMM_Slot_Material*
		constexpr auto m_Txt_ItemName = 0x330; // UMirTextBlock*
		constexpr auto m_Txt_SupportCount = 0x338; // UMirTextBlock*
		constexpr auto m_Txt_ItemGrade = 0x340; // UMirTextBlock*
		constexpr auto m_Prg_Time = 0x348; // UMirProgressBar*
		constexpr auto m_Prg_SupportTime = 0x350; // UMirProgressBar*
		constexpr auto m_Txt_Time = 0x358; // UMirTextBlock*
		constexpr auto m_CB_UnmountItem = 0x360; // UMM_Common_Btn_Symbol*
		constexpr auto m_CB_Get = 0x368; // UMM_Common_Btn*
		constexpr auto m_UnsealingCompleteEffect_01 = 0x370; // UWidget*
		constexpr auto m_UnsealingCompleteEffect_02 = 0x378; // UWidget*
		constexpr auto m_pEffectUnsealEmpty = 0x380; // UEffectWidgetBase*
		constexpr auto m_pHrzCost = 0x388; // UHorizontalBox*
		constexpr auto m_pTxtCost = 0x390; // UMirTextBlock*
	}

	namespace n_UCollisionProfile { // : UDeveloperSettings
		constexpr auto Profiles = 0x38; // TArray<FCollisionResponseTemplate>
		constexpr auto DefaultChannelResponses = 0x48; // TArray<FCustomChannelSetup>
		constexpr auto EditProfiles = 0x58; // TArray<FCustomProfile>
		constexpr auto ProfileRedirects = 0x68; // TArray<FRedirector>
		constexpr auto CollisionChannelRedirects = 0x78; // TArray<FRedirector>
	}

	namespace n_UParticleModuleAttractorPointGravity { // : UParticleModuleAttractorBase
		constexpr auto Position = 0x30; // FVector
		constexpr auto Radius = 0x3c; // float
		constexpr auto Strength = 0x40; // UDistributionFloat*
		constexpr auto StrengthRaw = 0x48; // FRawDistributionFloat
	}

	namespace n_UMM_UserEvent_Goal_Slot { // : UWidgetBase
		constexpr auto m_Txt_RelationTitle = 0x2e0; // UMirTextBlock*
		constexpr auto m_RTxt_LevelUpTitle = 0x2e8; // UMirRichTextBlock*
		constexpr auto m_Txt_Description = 0x2f0; // UMirTextBlock*
		constexpr auto m_Img_CompleteBg = 0x2f8; // UMirImage*
		constexpr auto m_Img_CompleteMark = 0x300; // UMirImage*
		constexpr auto m_Img_Lock = 0x308; // UMirImage*
		constexpr auto m_RewardItemSlot = 0x310; // UMM_Slot_Material* [0x2]
		constexpr auto m_C_Btn_Progress = 0x320; // UMM_Common_Btn*
		constexpr auto m_C_Btn_Complete = 0x328; // UMM_Common_Btn*
		constexpr auto m_Can_Relation = 0x330; // UMirCanvasPanel*
		constexpr auto m_Can_LevelUp = 0x338; // UMirCanvasPanel*
	}

	namespace n_UBreakpoint { // : UObject
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto Node = 0x30; // UEdGraphNode*
		constexpr auto bStepOnce = 0x38; // char : 1
		constexpr auto bStepOnce_WasPreviouslyDisabled = 0x38; // char : 1
		constexpr auto bStepOnce_RemoveAfterHit = 0x38; // char : 1
	}

	namespace n_UIntSerialization { // : UObject
		constexpr auto UnsignedInt16Variable = 0x28; // uint16_t
		constexpr auto UnsignedInt32Variable = 0x2c; // uint32_t
		constexpr auto UnsignedInt64Variable = 0x30; // uint64_t
		constexpr auto SignedInt8Variable = 0x38; // uint8_t
		constexpr auto SignedInt16Variable = 0x3a; // int16_t
		constexpr auto SignedInt64Variable = 0x40; // int64_t
		constexpr auto UnsignedInt8Variable = 0x48; // char
		constexpr auto SignedInt32Variable = 0x4c; // int32_t
	}

	namespace n_UMM_GuildMemberPortrait { // : UWidgetBase
		constexpr auto Img_Icon = 0x2e0; // UMirImage*
		constexpr auto img_frame = 0x2e8; // UMirImage*
		constexpr auto img_class = 0x2f0; // UMirImage*
		constexpr auto img_expedition = 0x2f8; // UMirImage*
	}

	namespace n_UWmfMediaSettings { // : UObject
		constexpr auto AllowNonStandardCodecs = 0x28; // bool
		constexpr auto LowLatency = 0x29; // bool
		constexpr auto NativeAudioOut = 0x2a; // bool
		constexpr auto HardwareAcceleratedVideoDecoding = 0x2b; // bool
	}

	namespace n_UTcpMessagingSettings { // : UObject
		constexpr auto EnableTransport = 0x28; // bool
		constexpr auto ListenEndpoint = 0x30; // FString
		constexpr auto ConnectToEndpoints = 0x40; // TArray<FString>
		constexpr auto ConnectionRetryDelay = 0x50; // int32_t
	}

	namespace n_UMaterialExpressionChannelMaskParameter { // : UMaterialExpressionVectorParameter
		constexpr auto MaskChannel = 0x70; // EChannelMaskParameterColor
		constexpr auto Input = 0x74; // FExpressionInput
	}

	namespace n_ALandscapeGizmoActor { // : AActor
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto bHidden = 0x58; // char : 1
		constexpr auto bNetTemporary = 0x58; // char : 1
		constexpr auto bNetStartup = 0x58; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x58; // char : 1
		constexpr auto bAlwaysRelevant = 0x58; // char : 1
		constexpr auto bReplicateMovement = 0x58; // char : 1
		constexpr auto bTearOff = 0x58; // char : 1
		constexpr auto bExchangedRoles = 0x58; // char : 1
		constexpr auto bNetLoadOnClient = 0x59; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x59; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x59; // char : 1
		constexpr auto bRelevantForLevelBounds = 0x59; // char : 1
		constexpr auto bReplayRewindable = 0x59; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x59; // char : 1
		constexpr auto bAutoDestroyWhenFinished = 0x59; // char : 1
		constexpr auto bBlockInput = 0x59; // char : 1
		constexpr auto bCanBeDamaged = 0x5a; // char : 1
		constexpr auto bCollideWhenPlacing = 0x5a; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x5a; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x5a; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x5a; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x5a; // char : 1
		constexpr auto bIsEditorOnlyActor = 0x5a; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x5a; // char : 1
		constexpr auto bReplicates = 0x5b; // char : 1
		constexpr auto bCanBeInCluster = 0x5b; // char : 1
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x5b; // char : 1
		constexpr auto bActorEnableCollision = 0x5c; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x5c; // char : 1
		constexpr auto UpdateOverlapsMethodDuringLevelStreaming = 0x5d; // EActorUpdateOverlapsMethod
		constexpr auto DefaultUpdateOverlapsMethodDuringLevelStreaming = 0x5e; // EActorUpdateOverlapsMethod
		constexpr auto RemoteRole = 0x5f; // ENetRole
		constexpr auto ReplicatedMovement = 0x60; // FRepMovement
		constexpr auto InitialLifeSpan = 0x94; // float
		constexpr auto CustomTimeDilation = 0x98; // float
		constexpr auto AttachmentReplication = 0xa0; // FRepAttachment
		constexpr auto Owner = 0xe0; // AActor*
		constexpr auto NetDriverName = 0xe8; // FName
		constexpr auto Role = 0xf0; // ENetRole
		constexpr auto NetDormancy = 0xf1; // ENetDormancy
		constexpr auto SpawnCollisionHandlingMethod = 0xf2; // ESpawnActorCollisionHandlingMethod
		constexpr auto AutoReceiveInput = 0xf3; // EAutoReceiveInput
		constexpr auto InputPriority = 0xf4; // int32_t
		constexpr auto InputComponent = 0xf8; // UInputComponent*
		constexpr auto NetCullDistanceSquared = 0x100; // float
		constexpr auto NetTag = 0x104; // int32_t
		constexpr auto NetUpdateFrequency = 0x108; // float
		constexpr auto MinNetUpdateFrequency = 0x10c; // float
		constexpr auto NetPriority = 0x110; // float
		constexpr auto Instigator = 0x118; // APawn*
		constexpr auto Children = 0x120; // TArray<AActor*>
		constexpr auto RootComponent = 0x130; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x138; // TArray<AMatineeActor*>
		constexpr auto Layers = 0x150; // TArray<FName>
		constexpr auto ParentComponent = 0x160; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto Tags = 0x168; // TArray<FName>
		constexpr auto OnTakeAnyDamage = 0x178; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x179; // FScriptMulticastDelegate
		constexpr auto OnTakeRadialDamage = 0x17a; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x17b; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x17c; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x17d; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x17e; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x17f; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x180; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x181; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x182; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x183; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x184; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x185; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x186; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x187; // FScriptMulticastDelegate
		constexpr auto InstanceComponents = 0x1e8; // TArray<UActorComponent*>
		constexpr auto BlueprintCreatedComponents = 0x1f8; // TArray<UActorComponent*>
	}

	namespace n_ULocalLightComponent { // : ULightComponent
		constexpr auto IntensityUnits = 0x368; // ELightUnits
		constexpr auto Radius = 0x36c; // float
		constexpr auto AttenuationRadius = 0x370; // float
		constexpr auto LightmassSettings = 0x374; // FLightmassPointLightSettings
	}

	namespace n_AProjectileBase { // : AActor
		constexpr auto m_pCollSphereComp = 0x218; // USphereComponent*
		constexpr auto m_pShotParticleComp = 0x220; // UParticleSystemComponent*
		constexpr auto m_pImpactParticleComp = 0x228; // UParticleSystemComponent*
	}

	namespace n_UMaterialShaderQualitySettings { // : UObject
		constexpr auto ForwardSettingMap = 0x28; // TMap<FName, UShaderPlatformQualitySettings*>
	}

	namespace n_UCullingField { // : UFieldNodeBase
		constexpr auto Culling = 0xb0; // UFieldNodeBase*
		constexpr auto Field = 0xb8; // UFieldNodeBase*
		constexpr auto Operation = 0xc0; // EFieldCullingOperationType
	}

	namespace n_UMM_Popup_GatherList_Slot { // : UWidgetBase
		constexpr auto m_ItemSlot = 0x2e0; // UMM_Slot_Material*
		constexpr auto m_Txt_ItemName = 0x2e8; // UTextBlock*
	}

	namespace n_UBTDecorator_TagCooldown { // : UBTDecorator
		constexpr auto CooldownTag = 0x68; // FGameplayTag
		constexpr auto CooldownDuration = 0x70; // float
		constexpr auto bAddToExistingDuration = 0x74; // bool
		constexpr auto bActivatesCooldown = 0x75; // bool
	}

	namespace n_UParticleSpriteEmitter { // : UParticleEmitter
		constexpr auto EmitterName = 0x28; // FName
		constexpr auto SubUVDataOffset = 0x30; // int32_t
		constexpr auto EmitterRenderMode = 0x34; // EEmitterRenderMode
		constexpr auto SignificanceLevel = 0x35; // EParticleSignificanceLevel
		constexpr auto bUseLegacySpawningBehavior = 0x37; // char : 1
		constexpr auto ConvertedModules = 0x37; // char : 1
		constexpr auto bIsSoloing = 0x37; // char : 1
		constexpr auto bCookedOut = 0x37; // char : 1
		constexpr auto bDisabledLODsKeepEmitterAlive = 0x37; // char : 1
		constexpr auto bDisableWhenInsignficant = 0x38; // char : 1
		constexpr auto LODLevels = 0x40; // TArray<UParticleLODLevel*>
		constexpr auto PeakActiveParticles = 0x50; // int32_t
		constexpr auto InitialAllocationCount = 0x54; // int32_t
		constexpr auto QualityLevelSpawnRateScale = 0x58; // float
		constexpr auto DetailModeBitmask = 0x5c; // uint32_t
	}

	namespace n_UEnvQueryGenerator_OnCircle { // : UEnvQueryGenerator_ProjectedPoints
		constexpr auto CircleRadius = 0x80; // FAIDataProviderFloatValue
		constexpr auto SpaceBetween = 0xb0; // FAIDataProviderFloatValue
		constexpr auto NumberOfPoints = 0xe0; // FAIDataProviderIntValue
		constexpr auto PointOnCircleSpacingMethod = 0x110; // EPointOnCircleSpacingMethod
		constexpr auto ArcDirection = 0x118; // FEnvDirection
		constexpr auto ArcAngle = 0x138; // FAIDataProviderFloatValue
		constexpr auto AngleRadians = 0x168; // float
		constexpr auto CircleCenter = 0x170; // UEnvQueryContext*
		constexpr auto bIgnoreAnyContextActorsWhenGeneratingCircle = 0x178; // bool
		constexpr auto CircleCenterZOffset = 0x180; // FAIDataProviderFloatValue
		constexpr auto TraceData = 0x1b0; // FEnvTraceData
		constexpr auto bDefineArc = 0x1e0; // char : 1
	}

	namespace n_UMaterialExpressionConstantBiasScale { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Bias = 0x54; // float
		constexpr auto Scale = 0x58; // float
	}

	namespace n_UTimecodeProvider { // : UObject
		constexpr auto FrameDelay = 0x28; // int32_t
	}

	namespace n_UMM_CharAbility_Info_Training { // : UWidgetBase
		constexpr auto arrTxtLevel = 0x300; // TArray<UMirTextBlock*>
		constexpr auto Txt_Hidden_1 = 0x310; // UMirTextBlock*
		constexpr auto Txt_Hidden_2 = 0x318; // UMirTextBlock*
		constexpr auto STR_GRADE = 0x320; // int32_t
		constexpr auto STR_NOFORCE = 0x324; // int32_t
		constexpr auto STR_NOSTEP = 0x328; // int32_t
		constexpr auto STR_STEP = 0x32c; // int32_t
	}

	namespace n_UMM_Popup_Addressbook_TabSlot { // : UWidgetBase
		constexpr auto STRING_TAB_NAME_ID = 0x2f0; // int32_t
		constexpr auto ETabType = 0x2f4; // EMail_AddressbookTab
		constexpr auto m_Img_Selected = 0x2f8; // UMirImage*
		constexpr auto m_Txt_TabName = 0x300; // UMirTextBlock*
		constexpr auto m_Btn_Main = 0x308; // UMirButton*
	}

	namespace n_UPaperSpriteComponent { // : UMeshComponent
		constexpr auto SourceSprite = 0x440; // UPaperSprite*
		constexpr auto MaterialOverride = 0x448; // UMaterialInterface*
		constexpr auto SpriteColor = 0x450; // FLinearColor
	}

	namespace n_UMM_Guild_Diplomacy { // : UWidgetBase
		constexpr auto mTopSlotDiplomacy = 0x300; // UMM_Guild_DiplomacyTopMenuSlot*
		constexpr auto mCBGotoGuildPeruse = 0x308; // UMM_Common_Btn*
		constexpr auto mCTVrtTabSet = 0x310; // UMM_CommonVerticalTabSet*
		constexpr auto mSBList = 0x318; // UMirScrollBox*
		constexpr auto mTxtRankTitle = 0x320; // UMirTextBlock*
		constexpr auto mTxtGuildTitle = 0x328; // UMirTextBlock*
		constexpr auto mTxtGuildLevelTitle = 0x330; // UMirTextBlock*
		constexpr auto mTxtCombatPowerTitle = 0x338; // UMirTextBlock*
		constexpr auto mTxtMemberTitle = 0x340; // UMirTextBlock*
		constexpr auto mTxtStatusTitle = 0x348; // UMirTextBlock*
		constexpr auto mEmptyNotice = 0x350; // UMM_Common_Board_Notice*
		constexpr auto mTooltipBtn = 0x358; // UMM_Common_ToolTipBtn*
		constexpr auto mPanelDevLock = 0x360; // UMM_GuildDevLock*
	}

	namespace n_UMM_Party_Member_Slot { // : UWidgetBase
		constexpr auto m_Canvas_User = 0x2f0; // UMirCanvasPanel*
		constexpr auto m_Img_Icn_Leader = 0x2f8; // UMirImage*
		constexpr auto m_Img_Icn_Class = 0x300; // UMirImage*
		constexpr auto m_Txt_Level = 0x308; // UMirTextBlock*
		constexpr auto m_Txt_Nickname = 0x310; // UMirTextBlock*
		constexpr auto m_Txt_CombatPoint = 0x318; // UMirTextBlock*
		constexpr auto m_Canvas_Menu = 0x320; // UMirCanvasPanel*
		constexpr auto m_Grid_Kick = 0x328; // UPanelWidget*
		constexpr auto m_Grid_Detail = 0x330; // UPanelWidget*
		constexpr auto m_Grid_ChangeLeader = 0x338; // UPanelWidget*
		constexpr auto m_C_Btn_ChangeLeader = 0x340; // UMM_Common_Btn_Symbol*
		constexpr auto m_C_Btn_Kick = 0x348; // UMM_Common_Btn_Symbol*
		constexpr auto m_C_Btn_Detail = 0x350; // UMM_Common_Btn_Symbol*
		constexpr auto m_Can_Mine = 0x358; // UMirCanvasPanel*
		constexpr auto m_Txt_UserStage = 0x360; // UMirTextBlock*
		constexpr auto m_Txt_ChangeLeader = 0x368; // UMirTextBlock*
		constexpr auto m_Canvas_Slot = 0x370; // UMirCanvasPanel*
		constexpr auto m_Img_Bg_Lock = 0x378; // UMirImage*
		constexpr auto m_Img_Bg_Unlock = 0x380; // UMirImage*
		constexpr auto m_Img_All = 0x388; // UMirImage*
		constexpr auto m_Img_Lock = 0x390; // UMirImage*
		constexpr auto m_Img_Able_Class = 0x398; // UMirImage*
		constexpr auto m_Txt_Able_Class = 0x3a0; // UMirTextBlock*
		constexpr auto m_Btn_Option = 0x3a8; // UMirButton*
		constexpr auto m_Btn_Invite = 0x3b0; // UMirButton*
		constexpr auto m_Btn_Main = 0x3b8; // UMirButton*
	}

	namespace n_UInterpTrackInstSound { // : UInterpTrackInst
		constexpr auto LastUpdatePosition = 0x28; // float
		constexpr auto PlayAudioComp = 0x30; // UAudioComponent*
	}

	namespace n_UPhysicsHandleComponent { // : UActorComponent
		constexpr auto GrabbedComponent = 0xb0; // UPrimitiveComponent*
		constexpr auto bSoftAngularConstraint = 0xc0; // char : 1
		constexpr auto bSoftLinearConstraint = 0xc0; // char : 1
		constexpr auto bInterpolateTarget = 0xc0; // char : 1
		constexpr auto LinearDamping = 0xc4; // float
		constexpr auto LinearStiffness = 0xc8; // float
		constexpr auto AngularDamping = 0xcc; // float
		constexpr auto AngularStiffness = 0xd0; // float
		constexpr auto InterpolationSpeed = 0x140; // float
	}

	namespace n_UPlayerInput { // : UObject
		constexpr auto DebugExecBindings = 0x120; // TArray<FKeyBind>
		constexpr auto InvertedAxis = 0x160; // TArray<FName>
	}

	namespace n_AAutoAirwalkTrigger { // : AActor
		constexpr auto m_QuestID = 0x238; // int32_t
		constexpr auto m_AutoMoveDirectingID = 0x23c; // int32_t
		constexpr auto m_pCapsuleComponent = 0x240; // UCapsuleComponent*
		constexpr auto m_JumpDistance1 = 0x24c; // float
		constexpr auto m_JumpHeight1 = 0x250; // float
		constexpr auto m_JumpDistance2 = 0x254; // float
		constexpr auto m_JumpHeight2 = 0x258; // float
		constexpr auto m_JumpDistance3 = 0x25c; // float
		constexpr auto m_JumpHeight3 = 0x260; // float
		constexpr auto m_EndDistance = 0x264; // float
		constexpr auto m_EndHeight = 0x268; // float
		constexpr auto m_EndLocation = 0x26c; // FVector
	}

	namespace n_UMM_AddOptionList { // : UWidgetBase
		constexpr auto ListMaxCount = 0x2e0; // int32_t
		constexpr auto AbilitySelectColor = 0x2e4; // FLinearColor
		constexpr auto AbilityTextColor = 0x2f4; // FLinearColor
		constexpr auto PassiveSelectColor = 0x304; // FLinearColor
		constexpr auto PassiveTextColor = 0x314; // FLinearColor
		constexpr auto Txt_Title = 0x328; // UMirTextBlock*
		constexpr auto Arr_Option = 0x330; // TArray<UMM_AddOptionAbility*>
		constexpr auto Canvers_Title = 0x340; // UMirCanvasPanel*
		constexpr auto Canvers_Item = 0x348; // UMirCanvasPanel*
		constexpr auto Slot_Target = 0x350; // UMM_Slot_Registered*
		constexpr auto Btn_OptionList_Slot = 0x358; // UMM_Common_Btn_Symbol*
	}

	namespace n_UMM_B_UIShop { // : UWidgetBase
		constexpr auto m_PanelMainTabBG = 0x2f0; // UMirCanvasPanel*
		constexpr auto m_MainTabScrollBox = 0x2f8; // UMirScrollBox*
		constexpr auto m_PanelSubTabLine = 0x300; // UMirCanvasPanel*
		constexpr auto m_SubTabScrollBox = 0x308; // UMirScrollBox*
		constexpr auto m_BtnCashBag = 0x310; // UMM_UIShopBtnCashBag*
		constexpr auto m_GoodsListView = 0x318; // UMM_UIShopGoodsListView*
		constexpr auto m_UIGacha = 0x320; // UMM_UIShopGacha*
	}

	namespace n_UMM_Popup_PartyUserSubMenu { // : UWidgetBase
		constexpr auto m_Can_Panel = 0x2e0; // UMirCanvasPanel*
		constexpr auto m_pTextInfo = 0x2e8; // UMirTextBlock*
		constexpr auto m_pBtnInfo = 0x2f0; // UMirButton*
		constexpr auto m_pTextTalk = 0x2f8; // UMirTextBlock*
		constexpr auto m_pBtnTalk = 0x300; // UMirButton*
		constexpr auto m_pTextDuel = 0x308; // UMirTextBlock*
		constexpr auto m_pBtnDuel = 0x310; // UMirButton*
		constexpr auto m_pTextAttack = 0x318; // UMirTextBlock*
		constexpr auto m_pBtnAttack = 0x320; // UMirButton*
		constexpr auto m_Can_Move = 0x328; // UCanvasPanel*
		constexpr auto m_Btn_Move = 0x330; // UMirButton*
		constexpr auto m_pCanGuildMark = 0x338; // UCanvasPanel*
		constexpr auto m_pBtnGuildMark = 0x340; // UMirButton*
		constexpr auto m_StrID_Info = 0x36c; // int32_t
		constexpr auto m_StrID_Talk = 0x370; // int32_t
		constexpr auto m_StrID_Duel = 0x374; // int32_t
		constexpr auto SubMenuBoxShowLimitTime = 0x378; // float
	}

	namespace n_UBTDecorator_ForceSuccess { // : UBTDecorator
		constexpr auto bInverseCondition = 0x60; // char : 1
		constexpr auto FlowAbortMode = 0x64; // EBTFlowAbortMode
	}

	namespace n_USoundNodeBranch { // : USoundNode
		constexpr auto BoolParameterName = 0x40; // FName
	}

	namespace n_UMM_Occupation_BidHistory { // : UWidgetBase
		constexpr auto Txt_Value_01 = 0x2f0; // UMirTextBlock*
		constexpr auto Txt_Value_02 = 0x2f8; // UMirTextBlock*
		constexpr auto Txt_Value_03 = 0x300; // UMirTextBlock*
		constexpr auto Txt_Value_04 = 0x308; // UMirTextBlock*
		constexpr auto Btn_AddAlliance_01 = 0x310; // UMM_Common_Btn_Symbol*
		constexpr auto Btn_AddAlliance_02 = 0x318; // UMM_Common_Btn_Symbol*
		constexpr auto Btn_RemoveAlliance_01 = 0x320; // UMM_Common_Btn_Symbol*
		constexpr auto Btn_RemoveAlliance_02 = 0x328; // UMM_Common_Btn_Symbol*
	}

	namespace n_UPhysicsCollisionHandler { // : UObject
		constexpr auto ImpactThreshold = 0x28; // float
		constexpr auto ImpactReFireDelay = 0x2c; // float
		constexpr auto DefaultImpactSound = 0x30; // USoundBase*
		constexpr auto LastImpactSoundTime = 0x38; // float
	}

	namespace n_UMM_Popup_GuildDevBenefit { // : UWidgetBase
		constexpr auto mOpenAni = 0x2e0; // UWidgetAnimation*
		constexpr auto mCloseAni = 0x2e8; // UWidgetAnimation*
		constexpr auto mTxtFxiedTitle = 0x2f0; // UMirTextBlock*
		constexpr auto mTxtFxiedLevel = 0x2f8; // UMirTextBlock*
		constexpr auto mTxtFirstAttributeName = 0x300; // UMirTextBlock*
		constexpr auto mTxtSecondAttributeName = 0x308; // UMirTextBlock*
		constexpr auto mScrollBox = 0x310; // UMirScrollBox*
		constexpr auto mBtnClose = 0x318; // UMM_Common_Btn_Symbol*
	}

	namespace n_UMovieSceneColorTrack { // : UMovieScenePropertyTrack
		constexpr auto bIsSlateColor = 0x88; // bool
	}

	namespace n_UStaticMeshSimulationComponent { // : UActorComponent
		constexpr auto Simulating = 0xb8; // bool
		constexpr auto bNotifyCollisions = 0xb9; // bool
		constexpr auto ObjectType = 0xba; // EObjectStateTypeEnum
		constexpr auto Mass = 0xbc; // float
		constexpr auto CollisionType = 0xc0; // ECollisionTypeEnum
		constexpr auto ImplicitType = 0xc1; // EImplicitTypeEnum
		constexpr auto MinLevelSetResolution = 0xc4; // int32_t
		constexpr auto MaxLevelSetResolution = 0xc8; // int32_t
		constexpr auto InitialVelocityType = 0xcc; // EInitialVelocityTypeEnum
		constexpr auto InitialLinearVelocity = 0xd0; // FVector
		constexpr auto InitialAngularVelocity = 0xdc; // FVector
		constexpr auto DamageThreshold = 0xe8; // float
		constexpr auto PhysicalMaterial = 0xf0; // UChaosPhysicalMaterial*
		constexpr auto ChaosSolverActor = 0xf8; // AChaosSolverActor*
		constexpr auto OnChaosPhysicsCollision = 0x100; // FScriptMulticastDelegate
		constexpr auto SimulatedComponents = 0x120; // TArray<UPrimitiveComponent*>
	}

	namespace n_UPopup_DungeonReward_Info1 { // : UWidgetBase
		constexpr auto HorizontalBox_reward01 = 0x2e0; // UHorizontalBox*
		constexpr auto HorizontalBox_900 = 0x2e8; // UHorizontalBox*
		constexpr auto txtFirstClearReward = 0x2f0; // UMirTextBlock*
		constexpr auto txtFixFirstClearExplain = 0x2f8; // UMirTextBlock*
		constexpr auto txtRewardNone = 0x300; // UMirTextBlock*
		constexpr auto HorizontalBox_reward02 = 0x308; // UHorizontalBox*
		constexpr auto HorizontalBox_4 = 0x310; // UHorizontalBox*
		constexpr auto txtNorClearReward = 0x318; // UMirTextBlock*
		constexpr auto slotReward = 0x320; // UMM_Slot_DungeonMaterial* [0x14]
	}

	namespace n_ULightComponentBase { // : USceneComponent
		constexpr auto LightGuid = 0x220; // FGuid
		constexpr auto Brightness = 0x230; // float
		constexpr auto Intensity = 0x234; // float
		constexpr auto LightColor = 0x238; // FColor
		constexpr auto bAffectsWorld = 0x23c; // char : 1
		constexpr auto CastShadows = 0x23c; // char : 1
		constexpr auto CastStaticShadows = 0x23c; // char : 1
		constexpr auto CastDynamicShadows = 0x23c; // char : 1
		constexpr auto bAffectTranslucentLighting = 0x23c; // char : 1
		constexpr auto bTransmission = 0x23c; // char : 1
		constexpr auto bCastVolumetricShadow = 0x23c; // char : 1
		constexpr auto bCastDeepShadow = 0x23c; // char : 1
		constexpr auto bCastRaytracedShadow = 0x23d; // char : 1
		constexpr auto bAffectReflection = 0x23d; // char : 1
		constexpr auto bAffectGlobalIllumination = 0x23d; // char : 1
		constexpr auto IndirectLightingIntensity = 0x240; // float
		constexpr auto VolumetricScatteringIntensity = 0x244; // float
		constexpr auto SamplesPerPixel = 0x248; // int32_t
	}

	namespace n_UMM_Auction_Tab_Search_Enchant { // : UWidgetBase
		constexpr auto m_pComboList_Min = 0x2f0; // UMM_Auction_Enchant_ComboList*
		constexpr auto m_pComboList_Max = 0x2f8; // UMM_Auction_Enchant_ComboList*
	}

	namespace n_UHttpImageManager { // : UObject
		constexpr auto m_mapProfileKeyData = 0x28; // TMap<FString, FString>
		constexpr auto m_mapProfileImage = 0x78; // TMap<FString, UTexture2D*>
		constexpr auto m_mapReserveUImage = 0xc8; // TMap<FString, FDownloadProfileImagData>
		constexpr auto m_pPhotoTexture = 0x118; // UTexture2D*
	}

	namespace n_UMM_Dominion_Title_GroupInfo { // : UWidgetBase
		constexpr auto m_pParentWidget = 0x260; // UWidgetBase*
		constexpr auto m_arChildWidget = 0x268; // TArray<TWeakObjectPtr<UWidgetBase>>
		constexpr auto m_arMirTextBlock = 0x280; // TArray<TWeakObjectPtr<UMirTextBlock>>
		constexpr auto m_arMirRichTextBlock = 0x290; // TArray<TWeakObjectPtr<UMirRichTextBlock>>
		constexpr auto m_arMirEditableText = 0x2a0; // TArray<TWeakObjectPtr<UMirEditableText>>
		constexpr auto m_arMirImage = 0x2b0; // TArray<TWeakObjectPtr<UMirImage>>
	}

	namespace n_UMaterialExpressionLogarithm10 { // : UMaterialExpression
		constexpr auto X = 0x40; // FExpressionInput
	}

	namespace n_APlanarReflection { // : ASceneCapture
		constexpr auto PlanarReflectionComponent = 0x228; // UPlanarReflectionComponent*
		constexpr auto bShowPreviewPlane = 0x230; // bool
	}

	namespace n_UMM_HudBtnAction { // : UWidgetBase
		constexpr auto m_arrBrushActionBG = 0x2e0; // TArray<FBrushObject>
		constexpr auto m_arrBrushAction = 0x2f0; // TArray<FBrushObject>
		constexpr auto m_CooltimeColorOpacity = 0x300; // FLinearColor
		constexpr auto m_OnRoundCoolTime = 0x310; // bool
		constexpr auto m_AniPress = 0x318; // UWidgetAnimation*
		constexpr auto m_iEffectID_Open = 0x320; // int32_t
		constexpr auto m_iEffectID_Continue = 0x324; // int32_t
		constexpr auto m_iEffectID_EndCooltime = 0x328; // int32_t
		constexpr auto m_iEffectID_UseOK = 0x32c; // int32_t
		constexpr auto m_iEffectID_Touched = 0x330; // int32_t
		constexpr auto m_pImgActionBG = 0x338; // UImage*
		constexpr auto m_pImgAction = 0x340; // UImage*
		constexpr auto m_pImgCooltime = 0x348; // UImage*
		constexpr auto m_pBtnAction = 0x350; // UMirButton*
		constexpr auto m_pGridEffect = 0x358; // UPanelWidget*
		constexpr auto m_pContinueEffect = 0x360; // UEffectWidgetBase*
		constexpr auto m_pEndCooltimeEffect = 0x368; // UEffectWidgetBase*
		constexpr auto m_pImg_RoundCooltime = 0x380; // UImage*
		constexpr auto m_pGrd_RoundCooltime = 0x388; // UPanelWidget*
	}

	namespace n_UFieldNodeBase { // : UActorComponent
		constexpr auto PrimaryComponentTick = 0x30; // FActorComponentTickFunction
		constexpr auto ComponentTags = 0x60; // TArray<FName>
		constexpr auto AssetUserData = 0x70; // TArray<UAssetUserData*>
		constexpr auto bReplicates = 0x84; // char : 1
		constexpr auto bNetAddressable = 0x84; // char : 1
		constexpr auto bAutoActivate = 0x85; // char : 1
		constexpr auto bIsActive = 0x86; // char : 1
		constexpr auto bEditableWhenInherited = 0x86; // char : 1
		constexpr auto bCanEverAffectNavigation = 0x86; // char : 1
		constexpr auto bIsEditorOnly = 0x86; // char : 1
		constexpr auto CreationMethod = 0x88; // EComponentCreationMethod
		constexpr auto OnComponentActivated = 0x89; // FScriptMulticastDelegate
		constexpr auto OnComponentDeactivated = 0x8a; // FScriptMulticastDelegate
		constexpr auto UCSModifiedProperties = 0x90; // TArray<FSimpleMemberReference>
	}

	namespace n_APatchActor { // : AActor
		constexpr auto m_iActiveDownloadPakMax = 0x388; // int32_t
		constexpr auto m_PatchWidget = 0x3b8; // UMM_PatchWidget*
		constexpr auto m_MiniGameActor = 0x3e8; // AMiniGame_ManagerActor*
	}

	namespace n_UMaterialExpressionMakeMaterialAttributes { // : UMaterialExpression
		constexpr auto BaseColor = 0x40; // FExpressionInput
		constexpr auto Metallic = 0x54; // FExpressionInput
		constexpr auto Specular = 0x68; // FExpressionInput
		constexpr auto Roughness = 0x7c; // FExpressionInput
		constexpr auto EmissiveColor = 0x90; // FExpressionInput
		constexpr auto Opacity = 0xa4; // FExpressionInput
		constexpr auto OpacityMask = 0xb8; // FExpressionInput
		constexpr auto Normal = 0xcc; // FExpressionInput
		constexpr auto WorldPositionOffset = 0xe0; // FExpressionInput
		constexpr auto WorldDisplacement = 0xf4; // FExpressionInput
		constexpr auto TessellationMultiplier = 0x108; // FExpressionInput
		constexpr auto SubsurfaceColor = 0x11c; // FExpressionInput
		constexpr auto ClearCoat = 0x130; // FExpressionInput
		constexpr auto ClearCoatRoughness = 0x144; // FExpressionInput
		constexpr auto AmbientOcclusion = 0x158; // FExpressionInput
		constexpr auto Refraction = 0x16c; // FExpressionInput
		constexpr auto CustomizedUVs = 0x180; // FExpressionInput [0x8]
		constexpr auto PixelDepthOffset = 0x220; // FExpressionInput
		constexpr auto ShadingModel = 0x234; // FExpressionInput
	}

	namespace n_UBossAppearNotiWidget { // : UWidgetBase
		constexpr auto m_AniAppear = 0x2e0; // UWidgetAnimation*
	}

	namespace n_UMM_B_Shop_NPC_Making { // : UWidgetBase
		constexpr auto m_ShopNPCGoods = 0x2f0; // UMM_ShopNpcGoods*
		constexpr auto m_BtnClose = 0x2f8; // UMM_Common_Btn_Symbol*
		constexpr auto m_BtnMake = 0x300; // UMM_Common_Btn*
		constexpr auto m_TxtNoItem = 0x308; // UMirTextBlock*
		constexpr auto m_Money1ID = 0x310; // int32_t
		constexpr auto m_Money2ID = 0x314; // int32_t
		constexpr auto m_Money3ID = 0x318; // int32_t
		constexpr auto m_IsPossibleMake = 0x31c; // bool
	}

	namespace n_UMM_Popup_FrontBanner { // : UWidgetBase
		constexpr auto mTxtStopToday = 0x2e0; // UMirTextBlock*
		constexpr auto mCheckBox = 0x2e8; // UMirCheckBox*
		constexpr auto mImgDownLoad = 0x2f0; // UImage*
		constexpr auto mBtnClose = 0x2f8; // UMM_Common_Btn_Symbol*
		constexpr auto mDownloadImage = 0x300; // UAsyncTaskDownloadImage*
	}

	namespace n_UMM_HudLeftTabMenu { // : UWidgetBase
		constexpr auto m_Menu_Info = 0x2f0; // UMM_HudLeftTabMenuSlot*
		constexpr auto m_Menu_List = 0x2f8; // UMM_HudLeftTabMenuSlot*
		constexpr auto m_pPartyList = 0x300; // UMM_HudPartyList*
		constexpr auto m_Txt_AlarmCount = 0x308; // UMirTextBlock*
		constexpr auto m_Btn_FoldPartyList = 0x310; // UMirButton*
		constexpr auto m_Ani_FoldPartyList = 0x318; // UWidgetAnimation*
	}

	namespace n_UMaterialExpressionObjectPositionWS { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UParticleModuleAttractorLine { // : UParticleModuleAttractorBase
		constexpr auto EndPoint0 = 0x30; // FVector
		constexpr auto EndPoint1 = 0x3c; // FVector
		constexpr auto Range = 0x48; // FRawDistributionFloat
		constexpr auto Strength = 0x78; // FRawDistributionFloat
	}

	namespace n_APaperCharacter { // : ACharacter
		constexpr auto Sprite = 0x628; // UPaperFlipbookComponent*
	}

	namespace n_UWidgetAnimation { // : UMovieSceneSequence
		constexpr auto MovieScene = 0x348; // UMovieScene*
		constexpr auto AnimationBindings = 0x350; // TArray<FWidgetAnimationBinding>
		constexpr auto bLegacyFinishOnStop = 0x360; // bool
		constexpr auto DisplayLabel = 0x368; // FString
	}

	namespace n_UMM_Common_Btn { // : UMM_Common_Btn_Base
		constexpr auto m_StringTableType = 0x350; // EStringTableType
		constexpr auto m_StringTableID = 0x354; // int32_t
		constexpr auto m_Text = 0x358; // FText
		constexpr auto m_bEnableSubText = 0x370; // bool
		constexpr auto m_Font = 0x378; // FSlateFontInfo
		constexpr auto m_TxtMain = 0x3d0; // UMirTextBlock*
		constexpr auto m_TxtSub = 0x3d8; // UMirTextBlock*
		constexpr auto m_RichTxtMain = 0x3e0; // UMirRichTextBlock*
		constexpr auto m_EffectPanel = 0x3e8; // UPanelWidget*
		constexpr auto m_Img_Glow = 0x3f0; // UMirImage*
	}

	namespace n_ASpectatorBeaconHost { // : AOnlineBeaconHostObject
		constexpr auto State = 0x240; // USpectatorBeaconState*
		constexpr auto bLogoutOnSessionTimeout = 0x2a8; // bool
		constexpr auto SessionTimeoutSecs = 0x2ac; // float
		constexpr auto TravelSessionTimeoutSecs = 0x2b0; // float
	}

	namespace n_UMM_NewInventory_Auction { // : UMM_NewInventory_Base
		constexpr auto m_pInvenTab = 0x2e8; // UMM_NewInventoryTab*
		constexpr auto m_pInven = 0x2f0; // UMM_NewInventory*
	}

	namespace n_UMM_Popup_VersionSelect { // : UWidgetBase
		constexpr auto m_Wrap_SlotList = 0x2e0; // UWrapBox*
	}

	namespace n_UMM_Slot_Inventory_Dummy { // : UWidgetBase
		constexpr auto m_Image_BG = 0x2e0; // UMirImage*
	}

	namespace n_UMM_UserEvent_Attendance_Day { // : UWidgetBase
		constexpr auto m_Txt_Name = 0x2f0; // UMirTextBlock*
		constexpr auto m_Img_Thumb = 0x2f8; // UMirImage*
		constexpr auto m_WebBanner = 0x300; // UMM_UserEvent_WebBanner*
		constexpr auto m_DaySlot = 0x308; // UMM_UserEvent_Attendance_Day_Slot* [0x7]
	}

	namespace n_ULevelSequencePlayer { // : UMovieSceneSequencePlayer
		constexpr auto OnCameraCut = 0x870; // FScriptMulticastDelegate
	}

	namespace n_UMM_Popup_PetGradeUp { // : UWidgetBase
		constexpr auto m_Btn_Screen = 0x2f0; // UMirButton*
		constexpr auto m_Txt_Title = 0x2f8; // UMirTextBlock*
		constexpr auto m_CB_Close = 0x300; // UMM_Common_Btn_Symbol*
		constexpr auto m_Scr_InfoSlot = 0x308; // UMirScrollBox*
		constexpr auto m_arInfoSlot = 0x310; // UMM_PetGradeUp_InfoSlot* [0x5]
	}

	namespace n_UPointLightComponent { // : ULocalLightComponent
		constexpr auto bUseInverseSquaredFalloff = 0x380; // char : 1
		constexpr auto LightFalloffExponent = 0x384; // float
		constexpr auto SourceRadius = 0x388; // float
		constexpr auto SoftSourceRadius = 0x38c; // float
		constexpr auto SourceLength = 0x390; // float
	}

	namespace n_UMirWidgetComponent { // : UWidgetComponent
		constexpr auto Space = 0x444; // EWidgetSpace
		constexpr auto TimingPolicy = 0x445; // EWidgetTimingPolicy
		constexpr auto WidgetClass = 0x448; // UUserWidget*
		constexpr auto DrawSize = 0x450; // FIntPoint
		constexpr auto bManuallyRedraw = 0x458; // bool
		constexpr auto bRedrawRequested = 0x459; // bool
		constexpr auto RedrawTime = 0x45c; // float
		constexpr auto CurrentDrawSize = 0x468; // FIntPoint
		constexpr auto bDrawAtDesiredSize = 0x470; // bool
		constexpr auto Pivot = 0x474; // FVector2D
		constexpr auto bReceiveHardwareInput = 0x47c; // bool
		constexpr auto bWindowFocusable = 0x47d; // bool
		constexpr auto WindowVisibility = 0x47e; // EWindowVisibility
		constexpr auto bApplyGammaCorrection = 0x47f; // bool
		constexpr auto OwnerPlayer = 0x480; // ULocalPlayer*
		constexpr auto BackgroundColor = 0x488; // FLinearColor
		constexpr auto TintColorAndOpacity = 0x498; // FLinearColor
		constexpr auto OpacityFromTexture = 0x4a8; // float
		constexpr auto BlendMode = 0x4ac; // EWidgetBlendMode
		constexpr auto bIsTwoSided = 0x4ad; // bool
		constexpr auto TickWhenOffscreen = 0x4ae; // bool
		constexpr auto Widget = 0x4b0; // UUserWidget*
		constexpr auto BodySetup = 0x4d8; // UBodySetup*
		constexpr auto TranslucentMaterial = 0x4e0; // UMaterialInterface*
		constexpr auto TranslucentMaterial_OneSided = 0x4e8; // UMaterialInterface*
		constexpr auto OpaqueMaterial = 0x4f0; // UMaterialInterface*
		constexpr auto OpaqueMaterial_OneSided = 0x4f8; // UMaterialInterface*
		constexpr auto MaskedMaterial = 0x500; // UMaterialInterface*
		constexpr auto MaskedMaterial_OneSided = 0x508; // UMaterialInterface*
		constexpr auto RenderTarget = 0x510; // UTextureRenderTarget2D*
		constexpr auto MaterialInstance = 0x518; // UMaterialInstanceDynamic*
		constexpr auto bAddedToScreen = 0x520; // bool
		constexpr auto bEditTimeUsable = 0x521; // bool
		constexpr auto bUsePointSampling = 0x522; // bool
		constexpr auto bDontUseZtest = 0x523; // bool
		constexpr auto bUseDepthScaling = 0x524; // bool
		constexpr auto ScreenZOffset = 0x528; // float
		constexpr auto SharedLayerName = 0x530; // FName
		constexpr auto LayerZOrder = 0x538; // int32_t
		constexpr auto GeometryMode = 0x53c; // EWidgetGeometryMode
		constexpr auto CylinderArcAngle = 0x540; // float
	}

	namespace n_UMM_B_Login { // : UWidgetBase
		constexpr auto m_bAbleTick = 0x2f0; // bool
		constexpr auto m_fProgressSpeed = 0x2f4; // float
		constexpr auto ServerCongestion_Normal = 0x2f8; // FLinearColor
		constexpr auto ServerCongestion_Busy = 0x308; // FLinearColor
		constexpr auto ServerCongestion_Saturation = 0x318; // FLinearColor
		constexpr auto ServerState_Closed = 0x328; // FLinearColor
		constexpr auto m_fShowLoginInfoTime = 0x338; // float
		constexpr auto m_Grid_TouchNotice = 0x350; // UPanelWidget*
		constexpr auto m_Txt_ServerName = 0x358; // UMirTextBlock*
		constexpr auto m_Txt_Peace = 0x360; // UMirTextBlock*
		constexpr auto m_Txt_ServerState = 0x368; // UMirTextBlock*
		constexpr auto m_Btn_ServerChange = 0x370; // UMirButton*
		constexpr auto m_Txt_Version = 0x378; // UMirTextBlock*
		constexpr auto m_Txt_LoadingPercent = 0x380; // UMirTextBlock*
		constexpr auto m_Can_Logout = 0x388; // UPanelWidget*
		constexpr auto m_Img_LogoutIcon = 0x390; // UMirImage*
		constexpr auto m_Btn_Logout = 0x398; // UMirButton*
		constexpr auto m_Can_Option = 0x3a0; // UPanelWidget*
		constexpr auto m_Btn_Option = 0x3a8; // UMirButton*
		constexpr auto m_Overlay_GameStart = 0x3b0; // UPanelWidget*
		constexpr auto m_Btn_GameStart = 0x3b8; // UMirButton*
		constexpr auto m_Btn_Screen = 0x3c0; // UMirButton*
		constexpr auto m_VolumeController = 0x3c8; // UMM_VolumeController*
		constexpr auto m_Btn_AccountPopup = 0x3d0; // UMirButton*
		constexpr auto m_Btn_BlockScreen = 0x3d8; // UMirButton*
	}

	namespace n_UParticleModuleAttractorParticle { // : UParticleModuleAttractorBase
		constexpr auto EmitterName = 0x30; // FName
		constexpr auto Range = 0x38; // FRawDistributionFloat
		constexpr auto bStrengthByDistance = 0x68; // char : 1
		constexpr auto Strength = 0x70; // FRawDistributionFloat
		constexpr auto bAffectBaseVelocity = 0xa0; // char : 1
		constexpr auto SelectionMethod = 0xa4; // EAttractorParticleSelectionMethod
		constexpr auto bRenewSource = 0xa8; // char : 1
		constexpr auto bInheritSourceVel = 0xa8; // char : 1
		constexpr auto LastSelIndex = 0xac; // int32_t
	}

	namespace n_USourceEffectEnvelopeFollowerPreset { // : USoundEffectSourcePreset
		constexpr auto Settings = 0x74; // FSourceEffectEnvelopeFollowerSettings
	}

	namespace n_UMM_UIAction_HUD { // : UMM_UIAction
		constexpr auto State_HP = 0x8a0; // EUserGaugeState
		constexpr auto State_MP = 0x8a1; // EUserGaugeState
		constexpr auto HPRate_Target = 0x8a4; // float
		constexpr auto m_arrSubMenuSlotType = 0x8e8; // TArray<int32_t>
		constexpr auto m_iDungeonTracker_TitleID = 0x8f8; // int32_t
		constexpr auto m_iDungeonTracker_MessageID = 0x8fc; // int32_t
	}

	namespace n_UMM_UserEvent_Attendance_Day_Slot { // : UWidgetBase
		constexpr auto m_Grid_Today = 0x2e0; // UGridPanel*
		constexpr auto m_Grid_OneDay = 0x2e8; // UGridPanel*
		constexpr auto m_Txt_Name_2 = 0x2f0; // UMirTextBlock*
		constexpr auto m_Txt_Name_3 = 0x2f8; // UMirTextBlock*
		constexpr auto m_ItemSlot_2 = 0x300; // UMM_Slot_Material*
		constexpr auto m_ItemSlot_3 = 0x308; // UMM_Slot_Material*
		constexpr auto m_Can_Yellow = 0x310; // UMirCanvasPanel*
		constexpr auto m_Can_Blue = 0x318; // UMirCanvasPanel*
		constexpr auto m_Img_Yellow = 0x320; // UMirImage*
		constexpr auto m_Img_Blue = 0x328; // UMirImage*
		constexpr auto m_C_Btn_Main = 0x330; // UMM_Common_Btn*
	}

	namespace n_ARecastNavMesh { // : ANavigationData
		constexpr auto bDrawTriangleEdges = 0x3f8; // char : 1
		constexpr auto bDrawPolyEdges = 0x3f8; // char : 1
		constexpr auto bDrawFilledPolys = 0x3f8; // char : 1
		constexpr auto bDrawNavMeshEdges = 0x3f8; // char : 1
		constexpr auto bDrawTileBounds = 0x3f8; // char : 1
		constexpr auto bDrawPathCollidingGeometry = 0x3f8; // char : 1
		constexpr auto bDrawTileLabels = 0x3f8; // char : 1
		constexpr auto bDrawPolygonLabels = 0x3f8; // char : 1
		constexpr auto bDrawDefaultPolygonCost = 0x3f9; // char : 1
		constexpr auto bDrawLabelsOnPathNodes = 0x3f9; // char : 1
		constexpr auto bDrawNavLinks = 0x3f9; // char : 1
		constexpr auto bDrawFailedNavLinks = 0x3f9; // char : 1
		constexpr auto bDrawClusters = 0x3f9; // char : 1
		constexpr auto bDrawOctree = 0x3f9; // char : 1
		constexpr auto bDrawOctreeDetails = 0x3f9; // char : 1
		constexpr auto bDrawMarkedForbiddenPolys = 0x3f9; // char : 1
		constexpr auto bDistinctlyDrawTilesBeingBuilt = 0x3fa; // char : 1
		constexpr auto bDrawNavMesh = 0x3fa; // char : 1
		constexpr auto DrawOffset = 0x3fc; // float
		constexpr auto bFixedTilePoolSize = 0x400; // char : 1
		constexpr auto TilePoolSize = 0x404; // int32_t
		constexpr auto TileSizeUU = 0x408; // float
		constexpr auto CellSize = 0x40c; // float
		constexpr auto CellHeight = 0x410; // float
		constexpr auto AgentRadius = 0x414; // float
		constexpr auto AgentHeight = 0x418; // float
		constexpr auto AgentMaxHeight = 0x41c; // float
		constexpr auto AgentMaxSlope = 0x420; // float
		constexpr auto AgentMaxStepHeight = 0x424; // float
		constexpr auto MinRegionArea = 0x428; // float
		constexpr auto MergeRegionSize = 0x42c; // float
		constexpr auto MaxSimplificationError = 0x430; // float
		constexpr auto MaxSimultaneousTileGenerationJobsCount = 0x434; // int32_t
		constexpr auto TileNumberHardLimit = 0x438; // int32_t
		constexpr auto PolyRefTileBits = 0x43c; // int32_t
		constexpr auto PolyRefNavPolyBits = 0x440; // int32_t
		constexpr auto PolyRefSaltBits = 0x444; // int32_t
		constexpr auto NavMeshOriginOffset = 0x448; // FVector
		constexpr auto DefaultDrawDistance = 0x454; // float
		constexpr auto DefaultMaxSearchNodes = 0x458; // float
		constexpr auto DefaultMaxHierarchicalSearchNodes = 0x45c; // float
		constexpr auto RegionPartitioning = 0x460; // ERecastPartitioning
		constexpr auto LayerPartitioning = 0x461; // ERecastPartitioning
		constexpr auto RegionChunkSplits = 0x464; // int32_t
		constexpr auto LayerChunkSplits = 0x468; // int32_t
		constexpr auto bSortNavigationAreasByCost = 0x46c; // char : 1
		constexpr auto bPerformVoxelFiltering = 0x46c; // char : 1
		constexpr auto bMarkLowHeightAreas = 0x46c; // char : 1
		constexpr auto bFilterLowSpanSequences = 0x46c; // char : 1
		constexpr auto bFilterLowSpanFromTileCache = 0x46c; // char : 1
		constexpr auto bDoFullyAsyncNavDataGathering = 0x46c; // char : 1
		constexpr auto bUseBetterOffsetsFromCorners = 0x46c; // char : 1
		constexpr auto bStoreEmptyTileLayers = 0x46c; // char : 1
		constexpr auto bUseVirtualFilters = 0x46d; // char : 1
		constexpr auto bAllowNavLinkAsPathEnd = 0x46d; // char : 1
		constexpr auto bUseVoxelCache = 0x46d; // char : 1
		constexpr auto TileSetUpdateInterval = 0x470; // float
		constexpr auto HeuristicScale = 0x474; // float
		constexpr auto VerticalDeviationFromGroundCompensation = 0x478; // float
	}

	namespace n_UARSessionConfig { // : UDataAsset
		constexpr auto bGenerateMeshDataFromTrackedGeometry = 0x30; // bool
		constexpr auto bGenerateCollisionForMeshData = 0x31; // bool
		constexpr auto bGenerateNavMeshForMeshData = 0x32; // bool
		constexpr auto bUseMeshDataForOcclusion = 0x33; // bool
		constexpr auto bRenderMeshDataInWireframe = 0x34; // bool
		constexpr auto bTrackSceneObjects = 0x35; // bool
		constexpr auto bUsePersonSegmentationForOcclusion = 0x36; // bool
		constexpr auto WorldAlignment = 0x37; // EARWorldAlignment
		constexpr auto SessionType = 0x38; // EARSessionType
		constexpr auto PlaneDetectionMode = 0x39; // EARPlaneDetectionMode
		constexpr auto bHorizontalPlaneDetection = 0x3a; // bool
		constexpr auto bVerticalPlaneDetection = 0x3b; // bool
		constexpr auto bEnableAutoFocus = 0x3c; // bool
		constexpr auto LightEstimationMode = 0x3d; // EARLightEstimationMode
		constexpr auto FrameSyncMode = 0x3e; // EARFrameSyncMode
		constexpr auto bEnableAutomaticCameraOverlay = 0x3f; // bool
		constexpr auto bEnableAutomaticCameraTracking = 0x40; // bool
		constexpr auto bResetCameraTracking = 0x41; // bool
		constexpr auto bResetTrackedObjects = 0x42; // bool
		constexpr auto CandidateImages = 0x48; // TArray<UARCandidateImage*>
		constexpr auto MaxNumSimultaneousImagesTracked = 0x58; // int32_t
		constexpr auto EnvironmentCaptureProbeType = 0x5c; // EAREnvironmentCaptureProbeType
		constexpr auto WorldMapData = 0x60; // TArray<char>
		constexpr auto CandidateObjects = 0x70; // TArray<UARCandidateObject*>
		constexpr auto DesiredVideoFormat = 0x80; // FARVideoFormat
		constexpr auto FaceTrackingDirection = 0x8c; // EARFaceTrackingDirection
		constexpr auto FaceTrackingUpdate = 0x8d; // EARFaceTrackingUpdate
		constexpr auto SerializedARCandidateImageDatabase = 0x90; // TArray<char>
		constexpr auto EnabledSessionTrackingFeature = 0xa0; // EARSessionTrackingFeature
	}

	namespace n_UMM_PassiveSkillInfos { // : UWidgetBase
		constexpr auto m_Txt_Title = 0x2e0; // UMirTextBlock*
		constexpr auto m_Txt_Desc = 0x2e8; // UMirRichTextBlock*
		constexpr auto m_Txt_IncreasePowerValue = 0x2f0; // UMirTextBlock*
		constexpr auto m_ComparePoint = 0x2f8; // UMM_Common_ComparePoint*
	}

	namespace n_AMM_MonsterAIController { // : AMM_AIControllerBase
		constexpr auto m_Monster = 0x3a0; // AMM_Monster*
		constexpr auto LastAttackType = 0x3a8; // EMonsterAttackType
		constexpr auto CurrentShortSkillSetIndex = 0x3ac; // int32_t
		constexpr auto HasShortSkills = 0x3b0; // bool
		constexpr auto CurrentLongSkillSetIndex = 0x3b4; // int32_t
		constexpr auto HasLongSkills = 0x3b8; // bool
		constexpr auto EnoughAttackToUseSkill = 0x3b9; // bool
		constexpr auto PickupedNormalAttackCount = 0x3bc; // int32_t
		constexpr auto NormalAttackCount = 0x3c0; // int32_t
		constexpr auto CurAttackTID = 0x3c4; // int32_t
	}

	namespace n_UInterpTrackMoveAxis { // : UInterpTrackFloatBase
		constexpr auto MoveAxis = 0x90; // EInterpMoveAxis
		constexpr auto LookupTrack = 0x98; // FInterpLookupTrack
	}

	namespace n_UMM_Dominion_TaxList { // : UWidgetBase
		constexpr auto Img_Title = 0x2e0; // UMirImage*
		constexpr auto Txt_Title = 0x2e8; // UMirTextBlock*
		constexpr auto Dominion_TaxGroup_Income = 0x2f0; // UMM_Dominion_TaxGroup*
		constexpr auto Dominion_TaxGroup_Expense = 0x2f8; // UMM_Dominion_TaxGroup*
		constexpr auto Dominion_Tax_Balance = 0x300; // UMM_Dominion_TaxSlot*
	}

	namespace n_UMM_ObjectAnimInstance { // : UMM_AnimInstance
		constexpr auto Object = 0x270; // AMM_ObjectBase*
	}

	namespace n_ASpectatorCamera { // : ACameraActor
		constexpr auto m_OldCameraLocation = 0x780; // FVector
		constexpr auto m_NewCameraLocation = 0x78c; // FVector
		constexpr auto m_OldCameraRotation = 0x798; // FRotator
		constexpr auto m_NewCameraRotation = 0x7a4; // FRotator
		constexpr auto m_MoveDir = 0x7b0; // FVector
		constexpr auto m_MoveSpeed = 0x7bc; // float
		constexpr auto m_WalkSpeed = 0x7c0; // float
		constexpr auto m_RunSpeed = 0x7c4; // float
		constexpr auto m_MouseSensitivity = 0x7c8; // float
		constexpr auto m_MoveInterpSpeed = 0x7cc; // float
		constexpr auto m_RotationInterpSpeed = 0x7d0; // float
		constexpr auto MoveSpeedList = 0x7d8; // TArray<float>
		constexpr auto RunSpeedList = 0x7e8; // TArray<float>
		constexpr auto MouseSensitivityList = 0x7f8; // TArray<float>
		constexpr auto m_pTargetActor = 0x818; // AActor*
	}

	namespace n_UBTService_DefaultFocus { // : UBTService_BlackboardBase
		constexpr auto FocusPriority = 0x98; // char
	}

	namespace n_UMirButton { // : UButton
		constexpr auto m_eStyle = 0x438; // EStyle_MirButton
		constexpr auto m_fLockTime = 0x43c; // float
		constexpr auto m_PRESSING_TIME = 0x440; // float
	}

	namespace n_UMM_VehicleListSlot { // : UWidgetBase
		constexpr auto m_Img_Icon = 0x2f8; // UMirImage*
		constexpr auto m_Img_Locked = 0x300; // UMirImage*
		constexpr auto m_Txt_Name = 0x308; // UMirTextBlock*
		constexpr auto m_Hrz_Cost = 0x310; // UPanelWidget*
		constexpr auto m_Img_Cost = 0x318; // UMirImage*
		constexpr auto m_Txt_Cost = 0x320; // UMirTextBlock*
		constexpr auto m_Img_Selected = 0x328; // UMirImage*
		constexpr auto m_Img_Indicator = 0x330; // UMirImage*
		constexpr auto m_Btn_Select = 0x338; // UButton*
		constexpr auto m_Img_Equip = 0x340; // UMirImage*
		constexpr auto m_Img_Have = 0x348; // UMirImage*
		constexpr auto m_GradePanel = 0x350; // UMirCanvasPanel*
		constexpr auto m_Txt_Grade = 0x358; // UMirTextBlock*
		constexpr auto m_Arr_Slot = 0x360; // TArray<UMM_Popup_Appearance_Slot*>
		constexpr auto m_Canvas_PurchaseAble = 0x370; // UMirCanvasPanel*
		constexpr auto m_Txt_PurchaseAble = 0x378; // UMirTextBlock*
		constexpr auto m_Txt_PurchaseAbleValue = 0x380; // UMirTextBlock*
		constexpr auto ICONID_EQUIP = 0x388; // int32_t
		constexpr auto ICONID_OWNED = 0x38c; // int32_t
	}

	namespace n_UInterpFilter { // : UObject
		constexpr auto Caption = 0x28; // FString
	}

	namespace n_UMaterialExpressionRuntimeVirtualTextureSampleParameter { // : UMaterialExpressionRuntimeVirtualTextureSample
		constexpr auto ParameterName = 0x78; // FName
		constexpr auto ExpressionGUID = 0x80; // FGuid
		constexpr auto Group = 0x90; // FName
	}

	namespace n_UTileView { // : UListView
		constexpr auto EntryHeight = 0x858; // float
		constexpr auto EntryWidth = 0x85c; // float
		constexpr auto TileAlignment = 0x860; // EListItemAlignment
		constexpr auto bWrapHorizontalNavigation = 0x861; // bool
	}

	namespace n_UDemoNetConnection { // : UNetConnection
		constexpr auto Children = 0x48; // TArray<UChildConnection*>
		constexpr auto Driver = 0x58; // UNetDriver*
		constexpr auto PackageMapClass = 0x60; // UPackageMap*
		constexpr auto PackageMap = 0x68; // UPackageMap*
		constexpr auto OpenChannels = 0x70; // TArray<UChannel*>
		constexpr auto SentTemporaries = 0x80; // TArray<AActor*>
		constexpr auto ViewTarget = 0x90; // AActor*
		constexpr auto OwningActor = 0x98; // AActor*
		constexpr auto MaxPacket = 0xa0; // int32_t
		constexpr auto InternalAck = 0xa4; // char : 1
		constexpr auto PlayerId = 0x160; // FUniqueNetIdRepl
		constexpr auto LastReceiveTime = 0x1d0; // double
		constexpr auto ChannelsToTick = 0x14a8; // TArray<UChannel*>
	}

	namespace n_UMaterialExpressionConstant { // : UMaterialExpression
		constexpr auto R = 0x40; // float
	}

	namespace n_AGeneratedMeshAreaLight { // : ASpotLight
		constexpr auto SpotLightComponent = 0x228; // USpotLightComponent*
	}

	namespace n_UMaterialExpressionMaterialProxyReplace { // : UMaterialExpression
		constexpr auto Realtime = 0x40; // FExpressionInput
		constexpr auto MaterialProxy = 0x54; // FExpressionInput
	}

	namespace n_UParticleModuleSubUV { // : UParticleModuleSubUVBase
		constexpr auto Animation = 0x30; // USubUVAnimation*
		constexpr auto SubImageIndex = 0x38; // FRawDistributionFloat
		constexpr auto bUseRealTime = 0x68; // char : 1
	}

	namespace n_UPlatformEventsComponent { // : UActorComponent
		constexpr auto PlatformChangedToLaptopModeDelegate = 0xb0; // FScriptMulticastDelegate
		constexpr auto PlatformChangedToTabletModeDelegate = 0xc0; // FScriptMulticastDelegate
	}

	namespace n_UTextRenderComponent { // : UPrimitiveComponent
		constexpr auto Text = 0x418; // FText
		constexpr auto TextMaterial = 0x430; // UMaterialInterface*
		constexpr auto Font = 0x438; // UFont*
		constexpr auto HorizontalAlignment = 0x440; // EHorizTextAligment
		constexpr auto VerticalAlignment = 0x441; // EVerticalTextAligment
		constexpr auto TextRenderColor = 0x444; // FColor
		constexpr auto XScale = 0x448; // float
		constexpr auto YScale = 0x44c; // float
		constexpr auto WorldSize = 0x450; // float
		constexpr auto InvDefaultSize = 0x454; // float
		constexpr auto HorizSpacingAdjust = 0x458; // float
		constexpr auto VertSpacingAdjust = 0x45c; // float
		constexpr auto bAlwaysRenderAsText = 0x460; // char : 1
	}

	namespace n_APlayerStart { // : ANavigationObjectBase
		constexpr auto PlayerStartTag = 0x240; // FName
	}

	namespace n_UFindSessionsCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto OnFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_UInAppPurchaseCallbackProxy { // : UObject
		constexpr auto OnSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto OnFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_AGuardNpcSpawnTrigger { // : AActivateTrigger
		constexpr auto m_FriendMonsterID = 0x278; // int32_t
		constexpr auto m_MonsterOrderID = 0x27c; // int32_t
		constexpr auto m_pWayPoint = 0x280; // ATriggerWayPoint*
		constexpr auto m_pGuardNpc = 0x288; // AMM_Monster*
	}

	namespace n_UMM_Customizing_My_Costume { // : UCustomizingComponentBase
		constexpr auto m_ListBox = 0x300; // UWrapBox*
		constexpr auto m_ListSlotArray = 0x308; // TArray<UMM_Customizing_ListItem*>
		constexpr auto m_Empty_Title = 0x318; // UMirTextBlock*
	}

	namespace n_UMM_ItemResult_ItemInfo { // : UWidgetBase
		constexpr auto m_pParentWidget = 0x260; // UWidgetBase*
		constexpr auto m_arChildWidget = 0x268; // TArray<TWeakObjectPtr<UWidgetBase>>
		constexpr auto m_arMirTextBlock = 0x280; // TArray<TWeakObjectPtr<UMirTextBlock>>
		constexpr auto m_arMirRichTextBlock = 0x290; // TArray<TWeakObjectPtr<UMirRichTextBlock>>
		constexpr auto m_arMirEditableText = 0x2a0; // TArray<TWeakObjectPtr<UMirEditableText>>
		constexpr auto m_arMirImage = 0x2b0; // TArray<TWeakObjectPtr<UMirImage>>
	}

	namespace n_UParticleModuleCollisionBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x29; // char : 1
		constexpr auto LODDuplicate = 0x29; // char : 1
		constexpr auto bSupportsRandomSeed = 0x29; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x29; // char : 1
		constexpr auto LODValidity = 0x2a; // char
	}

	namespace n_UParticleSystemComponent { // : UFXSystemComponent
		constexpr auto Template = 0x418; // UParticleSystem*
		constexpr auto EmitterMaterials = 0x420; // TArray<UMaterialInterface*>
		constexpr auto SkelMeshComponents = 0x430; // TArray<USkeletalMeshComponent*>
		constexpr auto bResetOnDetach = 0x441; // char : 1
		constexpr auto bUpdateOnDedicatedServer = 0x441; // char : 1
		constexpr auto bAllowRecycling = 0x441; // char : 1
		constexpr auto bAutoManageAttachment = 0x441; // char : 1
		constexpr auto bWarmingUp = 0x442; // char : 1
		constexpr auto bOverrideLODMethod = 0x442; // char : 1
		constexpr auto bSkipUpdateDynamicDataDuringTick = 0x442; // char : 1
		constexpr auto LODMethod = 0x44d; // ParticleSystemLODMethod
		constexpr auto RequiredSignificance = 0x44e; // EParticleSignificanceLevel
		constexpr auto InstanceParameters = 0x450; // TArray<FParticleSysParam>
		constexpr auto OnParticleSpawn = 0x460; // FScriptMulticastDelegate
		constexpr auto OnParticleBurst = 0x470; // FScriptMulticastDelegate
		constexpr auto OnParticleDeath = 0x480; // FScriptMulticastDelegate
		constexpr auto OnParticleCollide = 0x490; // FScriptMulticastDelegate
		constexpr auto OldPosition = 0x4a0; // FVector
		constexpr auto PartSysVelocity = 0x4ac; // FVector
		constexpr auto WarmupTime = 0x4b8; // float
		constexpr auto WarmupTickRate = 0x4bc; // float
		constexpr auto SecondsBeforeInactive = 0x4c4; // float
		constexpr auto MaxTimeBeforeForceUpdateTransform = 0x4cc; // float
		constexpr auto ReplayClips = 0x4f0; // TArray<UParticleSystemReplay*>
		constexpr auto CustomTimeDilation = 0x508; // float
		constexpr auto AutoAttachParent = 0x560; // TWeakObjectPtr<USceneComponent>
		constexpr auto AutoAttachSocketName = 0x568; // FName
		constexpr auto AutoAttachLocationRule = 0x570; // EAttachmentRule
		constexpr auto AutoAttachRotationRule = 0x571; // EAttachmentRule
		constexpr auto AutoAttachScaleRule = 0x572; // EAttachmentRule
		constexpr auto OnSystemFinished = 0x5a0; // FScriptMulticastDelegate
	}

	namespace n_ATriggerBox { // : ATriggerBase
		constexpr auto CollisionComponent = 0x218; // UShapeComponent*
	}

	namespace n_USceneCaptureTool_Slider { // : UWidgetBase
		constexpr auto Slider_X = 0x2f0; // USlider*
		constexpr auto Slider_Y = 0x2f8; // USlider*
		constexpr auto Slider_Z = 0x300; // USlider*
		constexpr auto Txt_X = 0x308; // UMirTextBlock*
		constexpr auto Txt_Y = 0x310; // UMirTextBlock*
		constexpr auto Txt_Z = 0x318; // UMirTextBlock*
	}

	namespace n_UMM_Popup_Restore_Exp_Slot { // : UWidgetBase
		constexpr auto m_pTxtName = 0x2e0; // UMirTextBlock*
		constexpr auto m_pTxtRemainTime = 0x2e8; // UMirTextBlock*
		constexpr auto m_pTxtTime = 0x2f0; // UMirTextBlock*
		constexpr auto m_pGoodsSlot = 0x2f8; // UMM_Dominion_Goods_Slot*
		constexpr auto m_pSlotExp = 0x300; // UMM_Slot_Material*
		constexpr auto m_pImgDiable = 0x308; // UMirImage*
		constexpr auto m_pImgFocus = 0x310; // UMirImage*
		constexpr auto m_pBtnClick = 0x318; // UMirButton*
		constexpr auto m_pBtnSlotClick = 0x320; // UMirButton*
		constexpr auto m_pBtnSlotDelete = 0x328; // UMirButton*
	}

	namespace n_UMM_UIAction_StrongPoint { // : UMM_UIAction
		constexpr auto m_CurSelectStrongPointTID = 0x2e8; // int32_t
		constexpr auto m_UpdateTime = 0x2ec; // float
		constexpr auto m_IsContentsOpen = 0x2f0; // bool
	}

	namespace n_UInterpTrackSlomo { // : UInterpTrackFloatBase
		constexpr auto FloatTrack = 0x70; // FInterpCurveFloat
		constexpr auto CurveTension = 0x88; // float
	}

	namespace n_UEffectWidgetBase { // : UWidgetBase
		constexpr auto m_pParentWidget = 0x260; // UWidgetBase*
		constexpr auto m_arChildWidget = 0x268; // TArray<TWeakObjectPtr<UWidgetBase>>
		constexpr auto m_arMirTextBlock = 0x280; // TArray<TWeakObjectPtr<UMirTextBlock>>
		constexpr auto m_arMirRichTextBlock = 0x290; // TArray<TWeakObjectPtr<UMirRichTextBlock>>
		constexpr auto m_arMirEditableText = 0x2a0; // TArray<TWeakObjectPtr<UMirEditableText>>
		constexpr auto m_arMirImage = 0x2b0; // TArray<TWeakObjectPtr<UMirImage>>
	}

	namespace n_UMM_Guild_BlackIron_Title { // : UWidgetBase
		constexpr auto m_pTxtTitle = 0x2e0; // UMirTextBlock*
		constexpr auto m_pInfo = 0x2e8; // UMM_Common_ToolTipBtn*
	}

	namespace n_UScrollBarWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto ScrollBarStyle = 0x30; // FScrollBarStyle
	}

	namespace n_UMovieSceneBoolTrack { // : UMovieScenePropertyTrack
		constexpr auto SectionToKey = 0x58; // UMovieSceneSection*
		constexpr auto PropertyName = 0x60; // FName
		constexpr auto PropertyPath = 0x68; // FString
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_UMM_PopupBossTime { // : UWidgetBase
		constexpr auto txtNotice = 0x2e0; // UMirRichTextBlock*
		constexpr auto m_StartAni = 0x2e8; // UWidgetAnimation*
	}

	namespace n_UHudSettings { // : UObject
		constexpr auto bShowHUD = 0x28; // char : 1
		constexpr auto DebugDisplay = 0x30; // TArray<FName>
	}

	namespace n_UMovieSceneFadeSection { // : UMovieSceneFloatSection
		constexpr auto FadeColor = 0x180; // FLinearColor
		constexpr auto bFadeAudio = 0x190; // char : 1
	}

	namespace n_URadialForceComponent { // : USceneComponent
		constexpr auto Radius = 0x220; // float
		constexpr auto Falloff = 0x224; // ERadialImpulseFalloff
		constexpr auto ImpulseStrength = 0x228; // float
		constexpr auto bImpulseVelChange = 0x22c; // char : 1
		constexpr auto bIgnoreOwningActor = 0x22c; // char : 1
		constexpr auto ForceStrength = 0x230; // float
		constexpr auto DestructibleDamage = 0x234; // float
		constexpr auto ObjectTypesToAffect = 0x238; // TArray<EObjectTypeQuery>
	}

	namespace n_UMM_MagicStone_EquipedSlot { // : UMM_Slot_Base
		constexpr auto m_ImgJewelLock = 0x408; // UMirImage*
		constexpr auto m_ImgPlus = 0x410; // UMirImage*
		constexpr auto m_Imgindicator = 0x418; // UMirImage*
		constexpr auto m_ImgDisabled = 0x420; // UMirImage*
		constexpr auto txt_grade = 0x428; // UMirTextBlock*
		constexpr auto m_BtnUnmount = 0x430; // UMM_Common_Btn_Symbol*
		constexpr auto m_ActiveSlot = 0x438; // bool
		constexpr auto m_JewelSlotIndex = 0x43c; // int32_t
		constexpr auto img_guide = 0x440; // UMirImage*
		constexpr auto animation_guide = 0x448; // UWidgetAnimation*
	}

	namespace n_UGameUserSettings { // : UObject
		constexpr auto bUseVSync = 0x28; // bool
		constexpr auto bUseDynamicResolution = 0x29; // bool
		constexpr auto ResolutionSizeX = 0x80; // uint32_t
		constexpr auto ResolutionSizeY = 0x84; // uint32_t
		constexpr auto LastUserConfirmedResolutionSizeX = 0x88; // uint32_t
		constexpr auto LastUserConfirmedResolutionSizeY = 0x8c; // uint32_t
		constexpr auto WindowPosX = 0x90; // int32_t
		constexpr auto WindowPosY = 0x94; // int32_t
		constexpr auto FullscreenMode = 0x98; // int32_t
		constexpr auto LastConfirmedFullscreenMode = 0x9c; // int32_t
		constexpr auto PreferredFullscreenMode = 0xa0; // int32_t
		constexpr auto Version = 0xa4; // uint32_t
		constexpr auto AudioQualityLevel = 0xa8; // int32_t
		constexpr auto LastConfirmedAudioQualityLevel = 0xac; // int32_t
		constexpr auto FrameRateLimit = 0xb0; // float
		constexpr auto DesiredScreenWidth = 0xb8; // int32_t
		constexpr auto bUseDesiredScreenHeight = 0xbc; // bool
		constexpr auto DesiredScreenHeight = 0xc0; // int32_t
		constexpr auto LastUserConfirmedDesiredScreenWidth = 0xc4; // int32_t
		constexpr auto LastUserConfirmedDesiredScreenHeight = 0xc8; // int32_t
		constexpr auto LastRecommendedScreenWidth = 0xcc; // float
		constexpr auto LastRecommendedScreenHeight = 0xd0; // float
		constexpr auto LastCPUBenchmarkResult = 0xd4; // float
		constexpr auto LastGPUBenchmarkResult = 0xd8; // float
		constexpr auto LastCPUBenchmarkSteps = 0xe0; // TArray<float>
		constexpr auto LastGPUBenchmarkSteps = 0xf0; // TArray<float>
		constexpr auto LastGPUBenchmarkMultiplier = 0x100; // float
		constexpr auto bUseHDRDisplayOutput = 0x104; // bool
		constexpr auto HDRDisplayOutputNits = 0x108; // int32_t
		constexpr auto OnGameUserSettingsUINeedsUpdate = 0x110; // FScriptMulticastDelegate
	}

	namespace n_UAnimCompress_BitwiseCompressOnly { // : UAnimCompress
		constexpr auto Description = 0x28; // FString
		constexpr auto bNeedsSkeleton = 0x38; // char : 1
		constexpr auto bEnableSegmenting = 0x38; // char : 1
		constexpr auto IdealNumFramesPerSegment = 0x3c; // uint32_t
		constexpr auto MaxNumFramesPerSegment = 0x40; // uint32_t
		constexpr auto TranslationCompressionFormat = 0x44; // AnimationCompressionFormat
		constexpr auto RotationCompressionFormat = 0x45; // AnimationCompressionFormat
		constexpr auto ScaleCompressionFormat = 0x46; // AnimationCompressionFormat
		constexpr auto MaxCurveError = 0x48; // float
	}

	namespace n_UCurveVector { // : UCurveBase
		constexpr auto FloatCurves = 0x30; // FRichCurve [0x3]
	}

	namespace n_ATestBeaconHost { // : AOnlineBeaconHostObject
		constexpr auto BeaconTypeName = 0x218; // FString
		constexpr auto ClientBeaconActorClass = 0x228; // AOnlineBeaconClient*
		constexpr auto ClientActors = 0x230; // TArray<AOnlineBeaconClient*>
	}

	namespace n_UMM_B_Wanted { // : UWidgetBase
		constexpr auto m_Tab_Vertical = 0x2e0; // UMM_CommonVerticalTabSet*
		constexpr auto m_Btn_CombatPoint_Menu = 0x2e8; // UMirButton*
		constexpr auto m_Img_CombatPoint_Menu_Arrow = 0x2f0; // UMirImage*
		constexpr auto m_Btn_Reward_Menu = 0x2f8; // UMirButton*
		constexpr auto m_Img_Reward_Menu_Arrow = 0x300; // UMirImage*
		constexpr auto m_Btn_Chase_Menu = 0x308; // UMirButton*
		constexpr auto m_Img_Chase_Menu_Arrow = 0x310; // UMirImage*
		constexpr auto m_ListView_WantedList = 0x318; // UMirListView*
		constexpr auto m_Empty_Notice = 0x320; // UMM_Common_Board_Notice*
		constexpr auto m_pBtnInfo = 0x328; // UMM_Common_Btn_Symbol*
		constexpr auto m_arWantedSlotObj = 0x348; // TArray<UWantedSlotObj*>
	}

	namespace n_UMM_Inventory_Transcend { // : UMM_NewInventory_Base
		constexpr auto m_InvenTab = 0x2e8; // UMM_NewInventoryTab*
		constexpr auto m_Inven = 0x2f0; // UMM_NewInventory*
		constexpr auto m_pNoticeBox = 0x2f8; // UHorizontalBox*
		constexpr auto m_pTxtNotice = 0x300; // UMirTextBlock*
	}

	namespace n_UMM_Popup_RandomOptionList { // : UWidgetBase
		constexpr auto btn_close = 0x2e0; // UMM_Common_Btn_Symbol*
		constexpr auto Scroll_Main = 0x300; // UScrollBox*
		constexpr auto Txt_Title = 0x308; // UMirTextBlock*
		constexpr auto Txt_Ability = 0x310; // UMirTextBlock*
		constexpr auto Pan_Ability = 0x318; // UPanelWidget*
	}

	namespace n_UMM_Ranking_Reward_List_New { // : UWidgetBase
		constexpr auto m_pImgRank = 0x2e0; // UMirImage*
		constexpr auto m_pTxtRankValue = 0x2e8; // UMirTextBlock*
		constexpr auto m_RewardItem1 = 0x2f0; // UMM_Slot_New_Ranking_Reward_Buff*
		constexpr auto m_RewardItem2 = 0x2f8; // UMM_Slot_New_Ranking_Reward_Buff*
		constexpr auto m_RewardItem3 = 0x300; // UMM_Slot_New_Ranking_Reward_Buff*
		constexpr auto m_RewardItem4 = 0x308; // UMM_Slot_New_Ranking_Reward_Buff*
	}

	namespace n_UMM_Toltip_Slot { // : UWidgetBase
		constexpr auto ScalePanel = 0x2e0; // UScaleBox*
		constexpr auto Txt_Left = 0x2e8; // UMirTextBlock*
		constexpr auto Txt_Right = 0x2f0; // UMirTextBlock*
		constexpr auto Img_Deco_Line = 0x2f8; // UImage*
		constexpr auto ScalePanel1 = 0x300; // UScaleBox*
		constexpr auto Txt_Left1 = 0x308; // UMirTextBlock*
		constexpr auto Txt_Right1 = 0x310; // UMirTextBlock*
		constexpr auto ValueDefault = 0x318; // UMirTextBlock*
		constexpr auto AddValue = 0x320; // UMirTextBlock*
		constexpr auto Img_Deco_Line1 = 0x328; // UImage*
		constexpr auto m_Txt1 = 0x330; // UTextBlock*
		constexpr auto m_Txt2 = 0x338; // UTextBlock*
		constexpr auto ScalePanel2 = 0x340; // UScaleBox*
		constexpr auto Txt_Left2 = 0x348; // UMirTextBlock*
		constexpr auto Txt_Right2 = 0x350; // UMirTextBlock*
		constexpr auto Txt_Value_Penalty = 0x358; // UMirTextBlock*
		constexpr auto Img_Deco_Line2 = 0x360; // UImage*
		constexpr auto m_Txt3 = 0x368; // UTextBlock*
		constexpr auto m_Txt4 = 0x370; // UTextBlock*
		constexpr auto m_Txt5 = 0x378; // UTextBlock*
		constexpr auto Txt_Desc_Default = 0x380; // UMirTextBlock*
		constexpr auto Txt_Desc_Plus = 0x388; // UMirTextBlock*
		constexpr auto Txt_Desc_Durability = 0x390; // UMirTextBlock*
		constexpr auto vPanelSize = 0x398; // FVector2D
		constexpr auto vWidgetSize = 0x3a0; // FVector2D
	}

	namespace n_AGameStateBase { // : AInfo
		constexpr auto GameModeClass = 0x218; // AGameModeBase*
		constexpr auto AuthorityGameMode = 0x220; // AGameModeBase*
		constexpr auto SpectatorClass = 0x228; // ASpectatorPawn*
		constexpr auto PlayerArray = 0x230; // TArray<APlayerState*>
		constexpr auto bReplicatedHasBegunPlay = 0x240; // bool
		constexpr auto ReplicatedWorldTimeSeconds = 0x244; // float
		constexpr auto ServerWorldTimeSecondsDelta = 0x248; // float
		constexpr auto ServerWorldTimeSecondsUpdateFrequency = 0x24c; // float
	}

	namespace n_UInterpTrackInstVectorProp { // : UInterpTrackInstProperty
		constexpr auto ResetVector = 0x40; // FVector
	}

	namespace n_USoundNodeMixer { // : USoundNode
		constexpr auto InputVolume = 0x40; // TArray<float>
	}

	namespace n_UQueryAchievements { // : UBlueprintAsyncActionBase
		constexpr auto OnSuccess = 0x30; // FScriptMulticastDelegate
		constexpr auto OnFail = 0x40; // FScriptMulticastDelegate
	}

	namespace n_UInterpTrackAnimControl { // : UInterpTrackFloatBase
		constexpr auto SlotName = 0x90; // FName
		constexpr auto AnimSeqs = 0x98; // TArray<FAnimControlTrackKey>
		constexpr auto bSkipAnimNotifiers = 0xa8; // char : 1
	}

	namespace n_UMM_Popup_Coupon { // : UWidgetBase
		constexpr auto m_fUnableConfirmBtnTime = 0x2e0; // float
		constexpr auto m_Btn_Screen = 0x300; // UMirButton*
		constexpr auto m_CB_Close = 0x308; // UMM_Common_Btn_Symbol*
		constexpr auto m_Edit_Input = 0x310; // UMirEditableText*
		constexpr auto m_CB_Cancel = 0x318; // UMM_Common_Btn*
		constexpr auto m_CB_Confirm = 0x320; // UMM_Common_Btn*
		constexpr auto m_Ani_Start = 0x328; // UWidgetAnimation*
		constexpr auto m_Ani_End = 0x330; // UWidgetAnimation*
		constexpr auto m_Img_Throbber = 0x338; // UMirImage*
		constexpr auto m_Ani_Throbber = 0x340; // UWidgetAnimation*
	}

	namespace n_UMM_ClassSelect_Slot { // : UWidgetBase
		constexpr auto m_ClassID = 0x2e0; // int32_t
		constexpr auto m_ClassSelectIconVisible = 0x2e4; // ESlateVisibility
		constexpr auto m_pClassFaceImage = 0x2e8; // UMirImage*
		constexpr auto m_pLockImage = 0x2f0; // UMirImage*
		constexpr auto m_ClassNameText = 0x2f8; // UMirTextBlock*
		constexpr auto m_ClassSelectBtn = 0x300; // UMirButton*
	}

	namespace n_UInterpTrackInstProperty { // : UInterpTrackInst
		constexpr auto InterpProperty = 0x28; // UProperty*
		constexpr auto PropertyOuterObjectInst = 0x30; // UObject*
	}

	namespace n_UGameplayTasksComponent { // : UActorComponent
		constexpr auto bIsNetDirty = 0xbc; // char : 1
		constexpr auto SimulatedTasks = 0xc0; // TArray<UGameplayTask*>
		constexpr auto TaskPriorityQueue = 0xd0; // TArray<UGameplayTask*>
		constexpr auto TickingTasks = 0xf0; // TArray<UGameplayTask*>
		constexpr auto KnownTasks = 0x100; // TArray<UGameplayTask*>
		constexpr auto OnClaimedResourcesChange = 0x110; // FScriptMulticastDelegate
	}

	namespace n_UMM_GameInstance_BP_C { // : UMM_GameInstance
		constexpr auto m_pPlayerController = 0x198; // AMM_PlayerController*
		constexpr auto m_strServerInfoJson = 0x1a0; // FString
		constexpr auto m_bUseWemadeServiceLogin = 0x1b0; // bool
		constexpr auto m_bPatched = 0x1b1; // bool
		constexpr auto m_bLoadedShaderLibraryAndPSO = 0x1b2; // bool
		constexpr auto m_pCustomizingManager = 0x1b8; // UMM_CustomizingManager*
		constexpr auto m_pPoolManager = 0x1c0; // UMM_PoolManager*
		constexpr auto m_pWidgetManager = 0x1c8; // UMM_WidgetManager*
		constexpr auto m_pTemplateManager = 0x1d0; // UMM_TemplateManager*
		constexpr auto m_pCinematicManager = 0x1d8; // UMM_CinematicManager*
		constexpr auto WarpMoveManager = 0x1e0; // UMM_WarpMoveManager*
		constexpr auto m_pLoginManager = 0x1e8; // UMM_LoginManager*
		constexpr auto m_pIAPManager = 0x1f0; // UMM_IAPManager*
		constexpr auto m_pAdManager = 0x1f8; // UMM_AdManager*
		constexpr auto m_pSoundManager = 0x200; // AMM_SoundManagerActor*
		constexpr auto EffectManager = 0x208; // UMM_EffectManager*
		constexpr auto m_pUIActionManager = 0x210; // UMM_UIActionManager*
		constexpr auto m_pHttpImageManager = 0x218; // UHttpImageManager*
		constexpr auto m_pScheduleManager = 0x220; // UMM_ScheduleManager*
		constexpr auto m_MainPCData = 0x420; // FCharStatistics
		constexpr auto m_pGameDefineData = 0x4b8; // UGameDefineDataAsset*
		constexpr auto m_pMirColorData = 0x4c0; // UMirColorData*
		constexpr auto m_pFootStepSurfaceData = 0x4c8; // UFootStepSurfaceData*
		constexpr auto m_pDefaultNavigationFilterClass = 0x4d0; // UObject*
		constexpr auto m_pIgnoreCostNavigationFilterClass = 0x4d8; // UObject*
		constexpr auto m_pLinkProxyNavigationFilterClass = 0x4e0; // UObject*
		constexpr auto m_mapPrerequisiteLoadState = 0x4e8; // TMap<EPrerequisiteLoadState, bool>
		constexpr auto m_RichTextStyleTable = 0x538; // UDataTable*
		constexpr auto m_pAccountLocalSave = 0x540; // UAccountLocalSave*
		constexpr auto m_pCharLocalSave = 0x548; // UCharLocalSave*
		constexpr auto m_pInAppPurchaseLocalSave = 0x550; // UInAppPurchaseData*
		constexpr auto m_pMirHudBase = 0x558; // TWeakObjectPtr<AMM_HUDBase>
		constexpr auto m_bRideState = 0x560; // bool
		constexpr auto m_bAvailableRide = 0x561; // bool
		constexpr auto m_bNeedCheckAndroidPermission = 0x562; // bool
		constexpr auto m_pMMGameModeBase = 0x568; // AMM_GameModeBase*
		constexpr auto m_iStageID = 0x578; // int32_t
		constexpr auto m_iPreStageID = 0x57c; // int32_t
		constexpr auto m_bPvPEnable = 0x590; // bool
		constexpr auto m_bLevelStreaming = 0x591; // bool
		constexpr auto m_bMapLoading = 0x592; // bool
		constexpr auto m_bException_LogoToCharSelect = 0x593; // bool
		constexpr auto m_arLoadedLevel = 0x598; // TArray<UObject*>
		constexpr auto m_pLevelStreamingKismet = 0x5a8; // ULevelStreamingDynamic*
		constexpr auto m_pTriggerStreamingKismet = 0x5b0; // ULevelStreamingDynamic*
		constexpr auto m_pLevelStreamingKismet_Logo = 0x5b8; // ULevelStreamingDynamic*
		constexpr auto pMainPC = 0x5f0; // AMM_MainPC*
		constexpr auto m_PSOCacheSkeletalMeshActors = 0x650; // TArray<ASkeletalMeshActor*>
		constexpr auto m_PSOCacheStaticMeshActors = 0x660; // TArray<AStaticMeshActor*>
		constexpr auto m_PSOCacheParticleComponents = 0x670; // TArray<UParticleSystemComponent*>
		constexpr auto FreeStopHingeModule = 0x690; // UWNFreeStopHingeModule*
		constexpr auto m_UnCheater = 0x698; // UMM_UnCheater*
		constexpr auto m_MultiClientSupporter = 0x6a0; // UMM_MultiClientSupporter*
	}

	namespace n_UAnimCompress_RemoveEverySecondKey { // : UAnimCompress
		constexpr auto MinKeys = 0x50; // int32_t
		constexpr auto bStartAtSecondKey = 0x54; // char : 1
	}

	namespace n_APaperTileMapActor { // : AActor
		constexpr auto RenderComponent = 0x218; // UPaperTileMapComponent*
	}

	namespace n_UMM_Guild_BlackIron_InventoryListSlot { // : UWidgetBase
		constexpr auto m_pImgPortrait = 0x2e0; // UMirImage*
		constexpr auto m_pTxtName = 0x2e8; // UMirTextBlock*
		constexpr auto m_pTxtTime = 0x2f0; // UMirTextBlock*
		constexpr auto m_pTxtTypeName = 0x2f8; // UMirTextBlock*
		constexpr auto m_pImgIcon = 0x300; // UMirImage*
		constexpr auto m_pTxtCostValue = 0x308; // UMirTextBlock*
	}

	namespace n_UMM_Dominion_Castle_Tax { // : UWidgetBase
		constexpr auto m_pImgIcon = 0x2e8; // UMirImage*
		constexpr auto m_pTxtTaxValue = 0x2f0; // UMirTextBlock*
		constexpr auto m_pBtnSetTax = 0x2f8; // UMM_Common_Btn_Symbol*
	}

	namespace n_UMM_Dominion_Title_RareSlot { // : UMM_Dominion_Title_SlotBase
		constexpr auto m_pTxtClass = 0x2e0; // UMirTextBlock*
		constexpr auto m_pTxtName = 0x2e8; // UMirTextBlock*
		constexpr auto m_pBtnInfo = 0x2f0; // UMM_Common_Btn_Symbol*
		constexpr auto m_pPortrait = 0x2f8; // UMM_GuildMemberPortrait*
		constexpr auto m_pBtnClick = 0x300; // UMirButton*
	}

	namespace n_UMM_HudLeftTabMenuSlot { // : UWidgetBase
		constexpr auto SymbolIconID = 0x2e0; // int32_t
		constexpr auto SymbolGuildIconID = 0x2e4; // int32_t
		constexpr auto eMenuSlotType = 0x2e8; // ELeftTabMenuSlotType
		constexpr auto m_iEffectID_Touched = 0x2ec; // int32_t
		constexpr auto m_pImgSelected = 0x2f0; // UImage*
		constexpr auto m_pBtnTab = 0x2f8; // UButton*
		constexpr auto m_Img_IcnMake = 0x300; // UMirImage*
		constexpr auto m_pGridEffect = 0x308; // UPanelWidget*
		constexpr auto m_Img_Symbol_Select = 0x310; // UMirImage*
		constexpr auto m_Grid_Indicator = 0x318; // UPanelWidget*
		constexpr auto m_Img_Indicator = 0x320; // UImage*
		constexpr auto m_Txt_Indicator = 0x328; // UMirTextBlock*
		constexpr auto m_Txt_PartyMemberCount = 0x330; // UMirTextBlock*
		constexpr auto m_Effect_FullParty = 0x338; // UEffectWidgetBase*
	}

	namespace n_UParticleModuleCollisionGPU { // : UParticleModuleCollisionBase
		constexpr auto Resilience = 0x30; // FRawDistributionFloat
		constexpr auto ResilienceScaleOverLife = 0x60; // FRawDistributionFloat
		constexpr auto Friction = 0x90; // float
		constexpr auto RandomSpread = 0x94; // float
		constexpr auto RandomDistribution = 0x98; // float
		constexpr auto RadiusScale = 0x9c; // float
		constexpr auto RadiusBias = 0xa0; // float
		constexpr auto Response = 0xa4; // EParticleCollisionResponse
		constexpr auto CollisionMode = 0xa5; // EParticleCollisionMode
	}

	namespace n_UPhysicsThrusterComponent { // : USceneComponent
		constexpr auto ThrustStrength = 0x220; // float
	}

	namespace n_UNavigationSystemConfig { // : UObject
		constexpr auto NavigationSystemClass = 0x28; // FSoftClassPath
		constexpr auto SupportedAgentsMask = 0x40; // FNavAgentSelector
		constexpr auto DefaultAgentName = 0x44; // FName
		constexpr auto bIsOverriden = 0x4c; // char : 1
	}

	namespace n_UMM_Dominion_Title_NormalGroup { // : UMM_Dominion_Title_GroupBase
		constexpr auto m_pParentWidget = 0x260; // UWidgetBase*
		constexpr auto m_arChildWidget = 0x268; // TArray<TWeakObjectPtr<UWidgetBase>>
		constexpr auto m_arMirTextBlock = 0x280; // TArray<TWeakObjectPtr<UMirTextBlock>>
		constexpr auto m_arMirRichTextBlock = 0x290; // TArray<TWeakObjectPtr<UMirRichTextBlock>>
		constexpr auto m_arMirEditableText = 0x2a0; // TArray<TWeakObjectPtr<UMirEditableText>>
		constexpr auto m_arMirImage = 0x2b0; // TArray<TWeakObjectPtr<UMirImage>>
	}

	namespace n_UMM_HudBtnSetJump { // : UWidgetBase
		constexpr auto m_AniStart = 0x2e0; // UWidgetAnimation*
		constexpr auto m_AniEnd = 0x2e8; // UWidgetAnimation*
		constexpr auto m_pBtnJump = 0x2f0; // UMM_HudBtnAction*
		constexpr auto m_pBtnDash = 0x2f8; // UMM_HudBtnAction*
		constexpr auto m_pBtnWallJump = 0x300; // UMM_HudBtnAction*
		constexpr auto m_pBtnLand = 0x308; // UMM_HudBtnAction*
	}

	namespace n_UEnvQueryGenerator_CurrentLocation { // : UEnvQueryGenerator
		constexpr auto QueryContext = 0x50; // UEnvQueryContext*
	}

	namespace n_UMM_GuildMembers { // : UWidgetBase
		constexpr auto guild_member_slot_leader = 0x2f0; // UMM_GuildMemberSlot*
		constexpr auto sb_member = 0x2f8; // UMirScrollBox*
	}

	namespace n_UARTrackedObject { // : UARTrackedGeometry
		constexpr auto DetectedObject = 0xe8; // UARCandidateObject*
	}

	namespace n_UAudioCaptureComponent { // : USynthComponent
		constexpr auto JitterLatencyFrames = 0x650; // int32_t
	}

	namespace n_UAssetMappingTable { // : UObject
		constexpr auto MappedAssets = 0x28; // TArray<FAssetMapping>
	}

	namespace n_UMM_CharInfo_GuildIcon { // : UWidgetBase
		constexpr auto m_Txt_BtnName = 0x2e0; // UMirTextBlock*
		constexpr auto m_Btn = 0x2e8; // UMM_Common_Btn_Symbol*
	}

	namespace n_UMovieScene3DTransformSection { // : UMovieSceneSection
		constexpr auto TransformMask = 0xe0; // FMovieSceneTransformMask
		constexpr auto Translation = 0xe8; // FMovieSceneFloatChannel [0x3]
		constexpr auto Rotation = 0x2c8; // FMovieSceneFloatChannel [0x3]
		constexpr auto Scale = 0x4a8; // FMovieSceneFloatChannel [0x3]
		constexpr auto ManualWeight = 0x688; // FMovieSceneFloatChannel
		constexpr auto bUseQuaternionInterpolation = 0x72c; // bool
	}

	namespace n_UMM_Popup_Durability { // : UWidgetBase
		constexpr auto m_AniStart = 0x2f0; // UWidgetAnimation*
		constexpr auto m_AniEnd = 0x2f8; // UWidgetAnimation*
		constexpr auto Slot_Equip = 0x300; // UMM_Slot_Registered*
		constexpr auto Slot_Material = 0x308; // UMM_Slot_Material*
		constexpr auto Btn_Cancel = 0x310; // UMM_Common_Btn*
		constexpr auto Btn_Accept = 0x318; // UMM_Common_Btn*
		constexpr auto btn_close = 0x320; // UMM_Common_Btn_Symbol*
		constexpr auto Txt_Durability = 0x328; // UMirTextBlock*
		constexpr auto Txt_Material_Count = 0x330; // UMirTextBlock*
		constexpr auto Grid_NeedCost1 = 0x338; // UPanelWidget*
		constexpr auto Grid_NeedCost2 = 0x340; // UPanelWidget*
		constexpr auto Img_NeedCost1 = 0x348; // UMirImage*
		constexpr auto Txt_NeedCost1 = 0x350; // UMirTextBlock*
		constexpr auto BtnMain_NeedCost1 = 0x358; // UMirButton*
		constexpr auto Img_NeedCost2 = 0x360; // UMirImage*
		constexpr auto Txt_NeedCost2 = 0x368; // UMirTextBlock*
		constexpr auto BtnMain_NeedCost2 = 0x370; // UMirButton*
		constexpr auto m_CostType_2 = 0x378; // int32_t
		constexpr auto m_CostType_3 = 0x37c; // int32_t
	}

	namespace n_UNodeMappingContainer { // : UObject
		constexpr auto SourceItems = 0x28; // TMap<FName, FNodeItem>
		constexpr auto TargetItems = 0x78; // TMap<FName, FNodeItem>
		constexpr auto SourceToTarget = 0xc8; // TMap<FName, FName>
		constexpr auto SourceAsset = 0x118; // UObject*
		constexpr auto TargetAsset = 0x140; // UObject*
	}

	namespace n_UMM_ImageText { // : UWidgetBase
		constexpr auto m_Size = 0x2e0; // float
		constexpr auto Number_1 = 0x2e8; // FSlateBrush
		constexpr auto Number_2 = 0x370; // FSlateBrush
		constexpr auto Number_3 = 0x3f8; // FSlateBrush
		constexpr auto Number_4 = 0x480; // FSlateBrush
		constexpr auto Number_5 = 0x508; // FSlateBrush
		constexpr auto Number_6 = 0x590; // FSlateBrush
		constexpr auto Number_7 = 0x618; // FSlateBrush
		constexpr auto Number_8 = 0x6a0; // FSlateBrush
		constexpr auto Number_9 = 0x728; // FSlateBrush
		constexpr auto Number_10 = 0x7b0; // FSlateBrush
	}

	namespace n_USpinBox { // : UWidget
		constexpr auto Value = 0x108; // float
		constexpr auto ValueDelegate = 0x10c; // DelegateProperty
		constexpr auto WidgetStyle = 0x120; // FSpinBoxStyle
		constexpr auto Style = 0x408; // USlateWidgetStyleAsset*
		constexpr auto Delta = 0x410; // float
		constexpr auto SliderExponent = 0x414; // float
		constexpr auto Font = 0x418; // FSlateFontInfo
		constexpr auto Justification = 0x468; // ETextJustify
		constexpr auto MinDesiredWidth = 0x46c; // float
		constexpr auto ClearKeyboardFocusOnCommit = 0x470; // bool
		constexpr auto SelectAllTextOnCommit = 0x471; // bool
		constexpr auto ForegroundColor = 0x478; // FSlateColor
		constexpr auto OnValueChanged = 0x4a0; // FScriptMulticastDelegate
		constexpr auto OnValueCommitted = 0x4b0; // FScriptMulticastDelegate
		constexpr auto OnBeginSliderMovement = 0x4c0; // FScriptMulticastDelegate
		constexpr auto OnEndSliderMovement = 0x4d0; // FScriptMulticastDelegate
		constexpr auto bOverride_MinValue = 0x4e0; // char : 1
		constexpr auto bOverride_MaxValue = 0x4e0; // char : 1
		constexpr auto bOverride_MinSliderValue = 0x4e0; // char : 1
		constexpr auto bOverride_MaxSliderValue = 0x4e0; // char : 1
		constexpr auto MinValue = 0x4e4; // float
		constexpr auto MaxValue = 0x4e8; // float
		constexpr auto MinSliderValue = 0x4ec; // float
		constexpr auto MaxSliderValue = 0x4f0; // float
	}

	namespace n_UInterpTrackInstFloatMaterialParam { // : UInterpTrackInst
		constexpr auto MaterialInstances = 0x28; // TArray<UMaterialInstanceDynamic*>
		constexpr auto ResetFloats = 0x38; // TArray<float>
		constexpr auto PrimitiveMaterialRefs = 0x48; // TArray<FPrimitiveMaterialRef>
		constexpr auto InstancedTrack = 0x58; // UInterpTrackFloatMaterialParam*
	}

	namespace n_AMM_NPCBase { // : AMM_NonePlayer
		constexpr auto m_NPCNameTag = 0xa38; // UMM_B_NPCNameTag*
		constexpr auto m_NPCMenu = 0xa40; // UMM_B_NPCMenu*
		constexpr auto m_QuestID = 0xa70; // int32_t
		constexpr auto m_QuestIndex = 0xa74; // int32_t
		constexpr auto m_QuestType = 0xa78; // int32_t
		constexpr auto m_pNpcFunctionComponent = 0xaa8; // UMM_NpcFunctionComponent*
	}

	namespace n_UBTTask_RunBehavior { // : UBTTaskNode
		constexpr auto BehaviorAsset = 0x70; // UBehaviorTree*
	}

	namespace n_USkeletalMeshSimulationComponent { // : UActorComponent
		constexpr auto PhysicalMaterial = 0xb8; // UChaosPhysicalMaterial*
		constexpr auto ChaosSolverActor = 0xc0; // AChaosSolverActor*
		constexpr auto OverridePhysicsAsset = 0xc8; // UPhysicsAsset*
		constexpr auto bSimulating = 0xd0; // bool
		constexpr auto bNotifyCollisions = 0xd1; // bool
		constexpr auto ObjectType = 0xd2; // EObjectStateTypeEnum
		constexpr auto Density = 0xd4; // float
		constexpr auto MinMass = 0xd8; // float
		constexpr auto MaxMass = 0xdc; // float
		constexpr auto CollisionType = 0xe0; // ECollisionTypeEnum
		constexpr auto ImplicitShapeParticlesPerUnitArea = 0xe4; // float
		constexpr auto ImplicitShapeMinNumParticles = 0xe8; // int32_t
		constexpr auto ImplicitShapeMaxNumParticles = 0xec; // int32_t
		constexpr auto MinLevelSetResolution = 0xf0; // int32_t
		constexpr auto MaxLevelSetResolution = 0xf4; // int32_t
		constexpr auto CollisionGroup = 0xf8; // int32_t
		constexpr auto InitialVelocityType = 0xfc; // EInitialVelocityTypeEnum
		constexpr auto InitialLinearVelocity = 0x100; // FVector
		constexpr auto InitialAngularVelocity = 0x10c; // FVector
		constexpr auto OnChaosPhysicsCollision = 0x118; // FScriptMulticastDelegate
	}

	namespace n_UMaterialExpressionPanner { // : UMaterialExpression
		constexpr auto Coordinate = 0x40; // FExpressionInput
		constexpr auto Time = 0x54; // FExpressionInput
		constexpr auto Speed = 0x68; // FExpressionInput
		constexpr auto SpeedX = 0x7c; // float
		constexpr auto SpeedY = 0x80; // float
		constexpr auto ConstCoordinate = 0x84; // uint32_t
		constexpr auto bFractionalPart = 0x88; // bool
	}

	namespace n_AMM_GuildWarBaseGate { // : AActor
		constexpr auto m_FactionType = 0x238; // EGateFactionType
		constexpr auto BaseGateCollision = 0x240; // UBoxComponent*
	}

	namespace n_UMM_PopupGuildGivePersonal { // : UWidgetBase
		constexpr auto widget_switcher = 0x2f0; // UWidgetSwitcher*
		constexpr auto btn_close = 0x2f8; // UMM_Common_Btn_Symbol*
		constexpr auto txt_tab_member = 0x300; // UMirTextBlock*
		constexpr auto txt_tab_other = 0x308; // UMirTextBlock*
		constexpr auto cb_members = 0x310; // UMirCheckBox*
		constexpr auto cb_others = 0x318; // UMirCheckBox*
		constexpr auto cb_select_others = 0x320; // UMirCheckBox*
		constexpr auto cb_select_members = 0x328; // UMirCheckBox*
		constexpr auto sb_members = 0x330; // UMirScrollBox*
		constexpr auto sb_others = 0x338; // UMirScrollBox*
		constexpr auto btn_search = 0x340; // UMM_Common_Btn*
		constexpr auto btn_give = 0x348; // UMM_Common_Btn*
		constexpr auto empty_notice = 0x350; // UMM_Common_Board_Notice*
		constexpr auto txt_bottom_desc = 0x358; // UMirRichTextBlock*
		constexpr auto cb_sort = 0x360; // UMirCheckBox*
		constexpr auto cp_sort_member = 0x368; // UMirCanvasPanel*
		constexpr auto cp_sort_other = 0x370; // UMirCanvasPanel*
		constexpr auto btn_sort_combat_power_member = 0x378; // UMirButton*
		constexpr auto btn_sort_level_member = 0x380; // UMirButton*
		constexpr auto btn_sort_grade_member = 0x388; // UMirButton*
		constexpr auto img_sort_combat_power_member = 0x390; // UMirImage*
		constexpr auto img_sort_level_member = 0x398; // UMirImage*
		constexpr auto img_sort_grade_member = 0x3a0; // UMirImage*
		constexpr auto btn_sort_combat_power_other = 0x3a8; // UMirButton*
		constexpr auto btn_sort_level_other = 0x3b0; // UMirButton*
		constexpr auto img_sort_combat_power_other = 0x3b8; // UMirImage*
		constexpr auto img_sort_level_other = 0x3c0; // UMirImage*
		constexpr auto txt_sort = 0x3c8; // UMirTextBlock*
		constexpr auto m_pCanvasTabGuild = 0x3d0; // UMirTextBlock*
		constexpr auto m_pCanvasTabOtherUser = 0x3d8; // UMirCanvasPanel*
		constexpr auto m_pTxtDailyGive = 0x3e0; // UMirTextBlock*
	}

	namespace n_UFacebookLogout { // : UBlueprintAsyncActionBase
		constexpr auto OnSuccess = 0x30; // FScriptMulticastDelegate
		constexpr auto OnFail = 0x40; // FScriptMulticastDelegate
	}

	namespace n_UShadowMapTexture2D { // : UTexture2D
		constexpr auto ShadowmapFlags = 0x100; // EShadowMapFlags
	}

	namespace n_UMaterialExpressionLandscapeLayerSample { // : UMaterialExpression
		constexpr auto ParameterName = 0x40; // FName
		constexpr auto PreviewWeight = 0x48; // float
		constexpr auto ExpressionGUID = 0x4c; // FGuid
	}

	namespace n_UMM_Xdraco_InvenLeft { // : UMM_NewInventory_Base
		constexpr auto m_InvenTab = 0x2e8; // UMM_NewInventoryTab*
		constexpr auto m_Inven = 0x2f0; // UMM_NewInventory*
		constexpr auto m_Txt_InvenCount = 0x2f8; // UMirTextBlock*
		constexpr auto m_SortListBtn = 0x300; // UMM_SortListBtn*
		constexpr auto m_Btn_Refresh = 0x308; // UMirButton*
	}

	namespace n_UColorBinding { // : UPropertyBinding
		constexpr auto SourceObject = 0x28; // TWeakObjectPtr<UObject>
		constexpr auto SourcePath = 0x30; // FDynamicPropertyPath
		constexpr auto DestinationProperty = 0x58; // FName
	}

	namespace n_UMM_Occupation_BattleFieldInfo { // : UWidgetBase
		constexpr auto m_Txt_SiegeTitle = 0x300; // UMirTextBlock*
		constexpr auto m_Txt_RemainText = 0x308; // UMirTextBlock*
		constexpr auto m_Txt_Time = 0x310; // UMirTextBlock*
		constexpr auto m_Img_OffenseGuildIcon = 0x318; // UMirImage*
		constexpr auto m_Txt_OffenseGuildName = 0x320; // UMirTextBlock*
		constexpr auto m_Txt_OffenseGuildUserCount = 0x328; // UMirTextBlock*
		constexpr auto m_Img_DefenseGuildIcon = 0x330; // UMirImage*
		constexpr auto m_Txt_DefenseGuildName = 0x338; // UMirTextBlock*
		constexpr auto m_Txt_DefenseGuildUserCount = 0x340; // UMirTextBlock*
		constexpr auto m_Txt_CommandMark = 0x348; // UMirTextBlock*
	}

	namespace n_UNamedInterfaces { // : UObject
		constexpr auto NamedInterfaces = 0x28; // TArray<FNamedInterface>
		constexpr auto NamedInterfaceDefs = 0x38; // TArray<FNamedInterfaceDef>
	}

	namespace n_AMM_FixedNPC { // : AMM_NPCBase
		constexpr auto m_pDialogueWidget = 0xae8; // UCutsceneDialogueWidget*
	}

	namespace n_UMM_Occupation_BattleResult { // : UWidgetBase
		constexpr auto m_AniWin = 0x2e0; // UWidgetAnimation*
		constexpr auto m_AniDefeat = 0x2e8; // UWidgetAnimation*
		constexpr auto Panel_Win = 0x2f0; // UPanelWidget*
		constexpr auto Panel_Lose = 0x2f8; // UPanelWidget*
		constexpr auto Panel_Win_BG = 0x300; // UPanelWidget*
		constexpr auto Panel_Lose_BG = 0x308; // UPanelWidget*
		constexpr auto Scroll_GuildReward = 0x310; // UMirScrollBox*
		constexpr auto Scroll_PersonalReward = 0x318; // UMirScrollBox*
		constexpr auto Txt_Ranking = 0x320; // UMirTextBlock*
		constexpr auto Img_Ranking = 0x328; // UMirImage*
		constexpr auto Btn_Ok = 0x330; // UMM_Common_Btn*
		constexpr auto Btn_Close_BG = 0x338; // UMirButton*
	}

	namespace n_AObserverCameraActor { // : ACameraActor
		constexpr auto m_MoveSpeed = 0x780; // float
		constexpr auto m_MouseSensitivity = 0x784; // float
		constexpr auto m_MouseWheelSensitivity = 0x788; // float
		constexpr auto m_CameraDistanceMin = 0x78c; // float
		constexpr auto m_CameraDistanceMax = 0x790; // float
		constexpr auto m_CameraPitchMin = 0x794; // float
		constexpr auto m_CameraPitchMax = 0x798; // float
		constexpr auto m_CameraHeightGap = 0x79c; // float
		constexpr auto m_CameraSphere = 0x7a0; // float
	}

	namespace n_UParticleModuleAccelerationBase { // : UParticleModule
		constexpr auto bAlwaysInWorldSpace = 0x30; // char : 1
	}

	namespace n_UMaterialExpressionTextureObjectParameter { // : UMaterialExpressionTextureSampleParameter
		constexpr auto ParameterName = 0xd0; // FName
		constexpr auto ExpressionGUID = 0xd8; // FGuid
		constexpr auto Group = 0xe8; // FName
	}

	namespace n_AMM_TestGameState { // : AMM_GameStateBase
		constexpr auto GameModeClass = 0x218; // AGameModeBase*
		constexpr auto AuthorityGameMode = 0x220; // AGameModeBase*
		constexpr auto SpectatorClass = 0x228; // ASpectatorPawn*
		constexpr auto PlayerArray = 0x230; // TArray<APlayerState*>
		constexpr auto bReplicatedHasBegunPlay = 0x240; // bool
		constexpr auto ReplicatedWorldTimeSeconds = 0x244; // float
		constexpr auto ServerWorldTimeSecondsDelta = 0x248; // float
		constexpr auto ServerWorldTimeSecondsUpdateFrequency = 0x24c; // float
	}

	namespace n_UGeometryCacheCodecRaw { // : UGeometryCacheCodecBase
		constexpr auto DummyProperty = 0x38; // int32_t
	}

	namespace n_UParticleModuleTypeDataGpu { // : UParticleModuleTypeDataBase
		constexpr auto EmitterInfo = 0x30; // FGPUSpriteEmitterInfo
		constexpr auto ResourceData = 0x2b0; // FGPUSpriteResourceData
		constexpr auto CameraMotionBlurAmount = 0x410; // float
		constexpr auto bClearExistingParticlesOnInit = 0x414; // char : 1
	}

	namespace n_UWrapBox { // : UPanelWidget
		constexpr auto InnerSlotPadding = 0x120; // FVector2D
		constexpr auto WrapWidth = 0x128; // float
		constexpr auto bExplicitWrapWidth = 0x12c; // bool
	}

	namespace n_UWindDirectionalSourceComponent { // : USceneComponent
		constexpr auto Strength = 0x220; // float
		constexpr auto Speed = 0x224; // float
		constexpr auto MinGustAmount = 0x228; // float
		constexpr auto MaxGustAmount = 0x22c; // float
		constexpr auto Radius = 0x230; // float
		constexpr auto bPointWind = 0x234; // char : 1
	}

	namespace n_APawn { // : AActor
		constexpr auto bUseControllerRotationPitch = 0x220; // char : 1
		constexpr auto bUseControllerRotationYaw = 0x220; // char : 1
		constexpr auto bUseControllerRotationRoll = 0x220; // char : 1
		constexpr auto bCanAffectNavigationGeneration = 0x220; // char : 1
		constexpr auto BaseEyeHeight = 0x224; // float
		constexpr auto AutoPossessPlayer = 0x228; // EAutoReceiveInput
		constexpr auto AutoPossessAI = 0x229; // EAutoPossessAI
		constexpr auto RemoteViewPitch = 0x22a; // char
		constexpr auto AIControllerClass = 0x230; // AController*
		constexpr auto PlayerState = 0x238; // APlayerState*
		constexpr auto LastHitBy = 0x248; // AController*
		constexpr auto Controller = 0x250; // AController*
		constexpr auto ControlInputVector = 0x25c; // FVector
		constexpr auto LastControlInputVector = 0x268; // FVector
	}

	namespace n_UPopup_DungeonTime { // : UWidgetBase
		constexpr auto TxtTitle = 0x2e0; // UMirTextBlock*
		constexpr auto arTxtTimes = 0x2e8; // TArray<UMirTextBlock*>
		constexpr auto txtExplain = 0x2f8; // UMirTextBlock*
		constexpr auto btnClose = 0x300; // UMM_Common_Btn_Symbol*
	}

	namespace n_UMM_ProgressBar_Tail { // : UWidgetBase
		constexpr auto Image_BG = 0x318; // UMirImage*
		constexpr auto ProgressBar_Tail = 0x320; // UProgressBar*
		constexpr auto ProgressBar_Contents = 0x328; // UProgressBar*
		constexpr auto TextBlock_Text = 0x330; // UTextBlock*
		constexpr auto DefaultColor = 0x338; // FPorgressColor
	}

	namespace n_UTownAlarmWidget { // : UWidgetBase
		constexpr auto m_TownAlarmText = 0x2e0; // FText
		constexpr auto WidgetAnim_appear = 0x2f8; // UWidgetAnimation*
		constexpr auto m_TownAlarm = 0x300; // UTextBlock*
	}

	namespace n_UNavigationSystemModuleConfig { // : UNavigationSystemConfig
		constexpr auto bStrictlyStatic = 0x50; // char : 1
		constexpr auto bCreateOnClient = 0x50; // char : 1
		constexpr auto bAutoSpawnMissingNavData = 0x50; // char : 1
		constexpr auto bSpawnNavDataInNavBoundsLevel = 0x50; // char : 1
	}

	namespace n_AInvincibilityTrigger { // : AActivateTrigger
		constexpr auto m_bInvincibility = 0x278; // bool
	}

	namespace n_UMM_Widget_Master { // : UWidgetBase
		constexpr auto m_Can_Default = 0x308; // UPanelWidget*
		constexpr auto m_Can_Effect = 0x310; // UPanelWidget*
	}

	namespace n_UCircularThrobber { // : UWidget
		constexpr auto NumberOfPieces = 0x108; // int32_t
		constexpr auto Period = 0x10c; // float
		constexpr auto Radius = 0x110; // float
		constexpr auto PieceImage = 0x118; // USlateBrushAsset*
		constexpr auto Image = 0x120; // FSlateBrush
		constexpr auto bEnableRadius = 0x1a8; // bool
	}

	namespace n_UMM_Occupation_AuctionProgress { // : UWidgetBase
		constexpr auto ProgressType = 0x2f0; // EOccupationAuctionProgress
		constexpr auto TitleStringTID = 0x2f8; // FString
		constexpr auto m_pTxtTitleOn = 0x308; // UMirTextBlock*
		constexpr auto m_pTxtTitleOff = 0x310; // UMirTextBlock*
		constexpr auto Panel_On = 0x318; // UCanvasPanel*
	}

	namespace n_UStereoLayerComponent { // : USceneComponent
		constexpr auto bLiveTexture = 0x220; // char : 1
		constexpr auto bSupportsDepth = 0x220; // char : 1
		constexpr auto bNoAlphaChannel = 0x220; // char : 1
		constexpr auto Texture = 0x228; // UTexture*
		constexpr auto LeftTexture = 0x230; // UTexture*
		constexpr auto bQuadPreserveTextureRatio = 0x238; // char : 1
		constexpr auto QuadSize = 0x23c; // FVector2D
		constexpr auto UVRect = 0x244; // FBox2D
		constexpr auto CylinderRadius = 0x258; // float
		constexpr auto CylinderOverlayArc = 0x25c; // float
		constexpr auto CylinderHeight = 0x260; // int32_t
		constexpr auto EquirectProps = 0x264; // FEquirectProps
		constexpr auto StereoLayerType = 0x2ac; // EStereoLayerType
		constexpr auto StereoLayerShape = 0x2ad; // EStereoLayerShape
		constexpr auto Priority = 0x2b0; // int32_t
	}

	namespace n_UPawnMovementComponent { // : UNavMovementComponent
		constexpr auto PawnOwner = 0x130; // APawn*
	}

	namespace n_UMM_Hud_Chat_Area { // : UWidgetBase
		constexpr auto Panel_VoiceOption = 0x2f0; // UPanelWidget*
		constexpr auto Toggle_Macro = 0x2f8; // UMirCheckBox*
		constexpr auto Toggle_VoiceChat_Off = 0x300; // UMirCheckBox*
		constexpr auto Toggle_VoiceChat_On = 0x308; // UMirCheckBox*
		constexpr auto EditTxt_Chatting = 0x310; // UMirEditableText*
		constexpr auto STRING_UNABLE_MESSAGE = 0x318; // int32_t
		constexpr auto STRING_ENABLE_MESSAGE = 0x31c; // int32_t
	}

	namespace n_UMM_Common_Btn_Base { // : UWidgetBase
		constexpr auto m_eCommonBtnType = 0x2e0; // ECommonBtnType
		constexpr auto m_fLockTime = 0x2e4; // float
		constexpr auto m_bUseClickAnimation = 0x2e8; // bool
		constexpr auto m_WidgetData = 0x2f0; // UMirWidgetData*
		constexpr auto m_AniClick = 0x2f8; // UWidgetAnimation*
		constexpr auto m_ImgBg = 0x308; // UMirImage*
		constexpr auto m_ImgBgShadow = 0x310; // UMirImage*
		constexpr auto m_BtnMain = 0x318; // UMirButton*
		constexpr auto m_OnClickedEvent = 0x330; // FScriptMulticastDelegate
	}

	namespace n_USimulatedClientNetConnection { // : UNetConnection
		constexpr auto Children = 0x48; // TArray<UChildConnection*>
		constexpr auto Driver = 0x58; // UNetDriver*
		constexpr auto PackageMapClass = 0x60; // UPackageMap*
		constexpr auto PackageMap = 0x68; // UPackageMap*
		constexpr auto OpenChannels = 0x70; // TArray<UChannel*>
		constexpr auto SentTemporaries = 0x80; // TArray<AActor*>
		constexpr auto ViewTarget = 0x90; // AActor*
		constexpr auto OwningActor = 0x98; // AActor*
		constexpr auto MaxPacket = 0xa0; // int32_t
		constexpr auto InternalAck = 0xa4; // char : 1
		constexpr auto PlayerId = 0x160; // FUniqueNetIdRepl
		constexpr auto LastReceiveTime = 0x1d0; // double
		constexpr auto ChannelsToTick = 0x14a8; // TArray<UChannel*>
	}

	namespace n_UMM_Costume_PartsViewer { // : UWidgetBase
		constexpr auto CostumeEquipSlotList = 0x2f0; // TArray<UMM_Costume_Slot_EquipInfo*>
	}

	namespace n_UMM_Status_Info { // : UWidgetBase
		constexpr auto Txt_Left = 0x2e0; // UMirTextBlock*
		constexpr auto Txt_Right = 0x2e8; // UMirTextBlock*
		constexpr auto CanvasPanel = 0x2f0; // UGridPanel*
	}

	namespace n_UMM_CustomTitleSetting { // : UWidgetBase
		constexpr auto STRING_TITLE = 0x2e0; // int32_t
		constexpr auto STRING_GUIDE_NEW = 0x2e4; // int32_t
		constexpr auto STRING_GUIDE_PERIOD = 0x2e8; // int32_t
		constexpr auto STRING_GUIDE_MESSAGE_RESET = 0x2ec; // int32_t
		constexpr auto STRING_REMAIN_DAY = 0x2f0; // int32_t
		constexpr auto STRING_REMAIN_HOUR = 0x2f4; // int32_t
		constexpr auto STRING_REMAIN_SOON = 0x2f8; // int32_t
		constexpr auto STRING_DEL_TITLE = 0x2fc; // int32_t
		constexpr auto STRING_BUTTON_CANCEL = 0x300; // int32_t
		constexpr auto STRING_BUTTON_OK = 0x304; // int32_t
		constexpr auto STRING_ERROR_EMPTY_MATERIAL = 0x308; // int32_t
		constexpr auto STRING_ERROR_RULE_VIOLATION_2 = 0x30c; // int32_t
		constexpr auto STRING_ERROR_RULE_VIOLATION_3 = 0x310; // int32_t
		constexpr auto STRING_ERROR_RULE_VIOLATION_4 = 0x314; // int32_t
		constexpr auto Txt_Title = 0x318; // UMirTextBlock*
		constexpr auto Txt_GuideMsg1 = 0x320; // UMirTextBlock*
		constexpr auto Txt_GuideMsg2 = 0x328; // UMirTextBlock*
		constexpr auto Pan_Remain = 0x330; // UPanelWidget*
		constexpr auto Txt_RemainDay = 0x338; // UMirTextBlock*
		constexpr auto Txt_RemainDay_Del = 0x340; // UMirTextBlock*
		constexpr auto EditTxt_CustomTitle = 0x348; // UMirEditableText*
		constexpr auto Slot_Material = 0x350; // UMM_Slot_Material*
		constexpr auto Pan_Edit = 0x358; // UMirCanvasPanel*
		constexpr auto Btn_Cancel_Edit = 0x360; // UMM_Common_Btn*
		constexpr auto Btn_Ok_Edit = 0x368; // UMM_Common_Btn_Cost*
		constexpr auto Pan_Del = 0x370; // UMirCanvasPanel*
		constexpr auto Btn_Cancel_Del = 0x378; // UMM_Common_Btn*
		constexpr auto Btn_Ok_Del = 0x380; // UMM_Common_Btn*
		constexpr auto m_CloseBtn = 0x388; // UMM_Common_Btn_Symbol*
		constexpr auto m_CustomTitle = 0x390; // FString
	}

	namespace n_UWidget { // : UVisual
		constexpr auto Slot = 0x28; // UPanelSlot*
		constexpr auto bIsEnabledDelegate = 0x30; // DelegateProperty
		constexpr auto ToolTipText = 0x40; // FText
		constexpr auto ToolTipTextDelegate = 0x58; // DelegateProperty
		constexpr auto ToolTipWidget = 0x68; // UWidget*
		constexpr auto ToolTipWidgetDelegate = 0x70; // DelegateProperty
		constexpr auto VisibilityDelegate = 0x80; // DelegateProperty
		constexpr auto RenderTransform = 0x90; // FWidgetTransform
		constexpr auto RenderTransformPivot = 0xac; // FVector2D
		constexpr auto bIsVariable = 0xb4; // char : 1
		constexpr auto bCreatedByConstructionScript = 0xb4; // char : 1
		constexpr auto bIsEnabled = 0xb4; // char : 1
		constexpr auto bOverride_Cursor = 0xb4; // char : 1
		constexpr auto AccessibleWidgetData = 0xb8; // USlateAccessibleWidgetData*
		constexpr auto bIsVolatile = 0xc0; // char : 1
		constexpr auto Cursor = 0xc1; // EMouseCursor
		constexpr auto Clipping = 0xc2; // EWidgetClipping
		constexpr auto Visibility = 0xc3; // ESlateVisibility
		constexpr auto RenderOpacity = 0xc4; // float
		constexpr auto Navigation = 0xc8; // UWidgetNavigation*
		constexpr auto FlowDirectionPreference = 0xd0; // EFlowDirectionPreference
		constexpr auto NativeBindings = 0xf8; // TArray<UPropertyBinding*>
	}

	namespace n_UAIResource_Movement { // : UGameplayTaskResource
		constexpr auto ManualResourceID = 0x28; // int32_t
		constexpr auto AutoResourceID = 0x2c; // uint8_t
		constexpr auto bManuallySetID = 0x30; // char : 1
	}

	namespace n_UMaterialExpressionLandscapeGrassOutput { // : UMaterialExpressionCustomOutput
		constexpr auto GrassTypes = 0x40; // TArray<FGrassInput>
	}

	namespace n_UPrimaryDataAsset { // : UDataAsset
		constexpr auto NativeClass = 0x28; // UDataAsset*
	}

	namespace n_USourceEffectChorusPreset { // : USoundEffectSourcePreset
		constexpr auto Settings = 0x80; // FSourceEffectChorusSettings
	}

	namespace n_USynthKnob { // : UWidget
		constexpr auto Value = 0x108; // float
		constexpr auto StepSize = 0x10c; // float
		constexpr auto MouseSpeed = 0x110; // float
		constexpr auto MouseFineTuneSpeed = 0x114; // float
		constexpr auto ShowTooltipInfo = 0x118; // char : 1
		constexpr auto ParameterName = 0x120; // FText
		constexpr auto ParameterUnits = 0x138; // FText
		constexpr auto ValueDelegate = 0x150; // DelegateProperty
		constexpr auto WidgetStyle = 0x160; // FSynthKnobStyle
		constexpr auto Locked = 0x398; // bool
		constexpr auto IsFocusable = 0x399; // bool
		constexpr auto OnMouseCaptureBegin = 0x3a0; // FScriptMulticastDelegate
		constexpr auto OnMouseCaptureEnd = 0x3b0; // FScriptMulticastDelegate
		constexpr auto OnControllerCaptureBegin = 0x3c0; // FScriptMulticastDelegate
		constexpr auto OnControllerCaptureEnd = 0x3d0; // FScriptMulticastDelegate
		constexpr auto OnValueChanged = 0x3e0; // FScriptMulticastDelegate
	}

	namespace n_UBTTask_SkillExecutionProcess { // : UBTTaskNode
		constexpr auto Services = 0x58; // TArray<UBTService*>
		constexpr auto bIgnoreRestartSelf = 0x68; // char : 1
	}

	namespace n_UMM_Auction_ComboList { // : UWidgetBase
		constexpr auto m_fSlotSizeY = 0x2e0; // float
		constexpr auto m_pCanScroll = 0x2e8; // UMirCanvasPanel*
		constexpr auto m_pScrollList = 0x2f0; // UMirScrollBox*
		constexpr auto m_pBtnMain = 0x2f8; // UMirButton*
		constexpr auto m_pImgArrow = 0x300; // UMirImage*
		constexpr auto m_pTxtTheme = 0x308; // UMirTextBlock*
		constexpr auto m_pTxtValue = 0x310; // UMirTextBlock*
		constexpr auto m_fBaseScrollSize = 0x318; // FVector2D
	}

	namespace n_UMM_MagicStone_EquipedDetailInfo { // : UWidgetBase
		constexpr auto Txt_Name = 0x2f0; // UMirTextBlock*
		constexpr auto magic_stone_selected_slot = 0x2f8; // UMM_Slot_Material*
		constexpr auto lst_slot = 0x300; // TArray<UMM_MagicStone_AttributeSlot*>
		constexpr auto cp_contents = 0x310; // UMirCanvasPanel*
		constexpr auto hb_empty = 0x318; // UHorizontalBox*
	}

	namespace n_UMM_Popup_OneStoreIAP { // : UWidgetBase
		constexpr auto m_WebBrowser = 0x2e0; // UMirWebBrowser*
		constexpr auto m_Btn_Close = 0x2e8; // UMirButton*
		constexpr auto DelayCloseTimeHandle = 0x2f0; // FTimerHandle
	}

	namespace n_USourceEffectWaveShaperPreset { // : USoundEffectSourcePreset
		constexpr auto Settings = 0x70; // FSourceEffectWaveShaperSettings
	}

	namespace n_UEditableText { // : UWidget
		constexpr auto Text = 0x108; // FText
		constexpr auto TextDelegate = 0x120; // DelegateProperty
		constexpr auto HintText = 0x130; // FText
		constexpr auto HintTextDelegate = 0x148; // DelegateProperty
		constexpr auto WidgetStyle = 0x158; // FEditableTextStyle
		constexpr auto Style = 0x370; // USlateWidgetStyleAsset*
		constexpr auto BackgroundImageSelected = 0x378; // USlateBrushAsset*
		constexpr auto BackgroundImageComposing = 0x380; // USlateBrushAsset*
		constexpr auto CaretImage = 0x388; // USlateBrushAsset*
		constexpr auto Font = 0x390; // FSlateFontInfo
		constexpr auto ColorAndOpacity = 0x3e0; // FSlateColor
		constexpr auto IsReadOnly = 0x408; // bool
		constexpr auto IsPassword = 0x409; // bool
		constexpr auto MinimumDesiredWidth = 0x40c; // float
		constexpr auto IsCaretMovedWhenGainFocus = 0x410; // bool
		constexpr auto SelectAllTextWhenFocused = 0x411; // bool
		constexpr auto RevertTextOnEscape = 0x412; // bool
		constexpr auto ClearKeyboardFocusOnCommit = 0x413; // bool
		constexpr auto SelectAllTextOnCommit = 0x414; // bool
		constexpr auto AllowContextMenu = 0x415; // bool
		constexpr auto KeyboardType = 0x416; // EVirtualKeyboardType
		constexpr auto VirtualKeyboardOptions = 0x417; // FVirtualKeyboardOptions
		constexpr auto VirtualKeyboardDismissAction = 0x418; // EVirtualKeyboardDismissAction
		constexpr auto Justification = 0x419; // ETextJustify
		constexpr auto ShapedTextOptions = 0x41a; // FShapedTextOptions
		constexpr auto OnTextChanged = 0x420; // FScriptMulticastDelegate
		constexpr auto OnTextCommitted = 0x430; // FScriptMulticastDelegate
	}

	namespace n_UMaterial { // : UMaterialInterface
		constexpr auto PhysMaterial = 0x88; // UPhysicalMaterial*
		constexpr auto Metallic = 0x90; // FScalarMaterialInput
		constexpr auto Specular = 0xa4; // FScalarMaterialInput
		constexpr auto Normal = 0xb8; // FVectorMaterialInput
		constexpr auto EmissiveColor = 0xcc; // FColorMaterialInput
		constexpr auto MaterialDomain = 0xe0; // EMaterialDomain
		constexpr auto BlendMode = 0xe1; // EBlendMode
		constexpr auto DecalBlendMode = 0xe2; // EDecalBlendMode
		constexpr auto MaterialDecalResponse = 0xe3; // EMaterialDecalResponse
		constexpr auto ShadingModel = 0xe4; // EMaterialShadingModel
		constexpr auto bCastDynamicShadowAsMasked = 0xe5; // char : 1
		constexpr auto ShadingModels = 0xe6; // FMaterialShadingModelField
		constexpr auto OpacityMaskClipValue = 0xe8; // float
		constexpr auto WorldPositionOffset = 0xec; // FVectorMaterialInput
		constexpr auto bUseDepthForUI = 0x100; // char : 1
		constexpr auto Refraction = 0x104; // FScalarMaterialInput
		constexpr auto MaterialAttributes = 0x118; // FMaterialAttributesInput
		constexpr auto PixelDepthOffset = 0x130; // FScalarMaterialInput
		constexpr auto ShadingModelFromMaterialExpression = 0x144; // FShadingModelMaterialInput
		constexpr auto bEnableSeparateTranslucency = 0x158; // char : 1
		constexpr auto bEnableResponsiveAA = 0x158; // char : 1
		constexpr auto bScreenSpaceReflections = 0x158; // char : 1
		constexpr auto bContactShadows = 0x158; // char : 1
		constexpr auto TwoSided = 0x158; // char : 1
		constexpr auto DitheredLODTransition = 0x158; // char : 1
		constexpr auto DistanceCullFade = 0x158; // char : 1
		constexpr auto DitherOpacityMask = 0x158; // char : 1
		constexpr auto bAllowNegativeEmissiveColor = 0x159; // char : 1
		constexpr auto TranslucencyLightingMode = 0x15a; // ETranslucencyLightingMode
		constexpr auto bEnableMobileSeparateTranslucency = 0x15b; // char : 1
		constexpr auto NumCustomizedUVs = 0x15c; // int32_t
		constexpr auto TranslucencyDirectionalLightingIntensity = 0x160; // float
		constexpr auto TranslucentShadowDensityScale = 0x164; // float
		constexpr auto TranslucentSelfShadowDensityScale = 0x168; // float
		constexpr auto TranslucentSelfShadowSecondDensityScale = 0x16c; // float
		constexpr auto TranslucentSelfShadowSecondOpacity = 0x170; // float
		constexpr auto TranslucentBackscatteringExponent = 0x174; // float
		constexpr auto TranslucentMultipleScatteringExtinction = 0x178; // FLinearColor
		constexpr auto TranslucentShadowStartOffset = 0x188; // float
		constexpr auto bDisableDepthTest = 0x18c; // char : 1
		constexpr auto bWriteOnlyAlpha = 0x18c; // char : 1
		constexpr auto bGenerateSphericalParticleNormals = 0x18c; // char : 1
		constexpr auto bTangentSpaceNormal = 0x18c; // char : 1
		constexpr auto bUseEmissiveForDynamicAreaLighting = 0x18c; // char : 1
		constexpr auto bBlockGI = 0x18c; // char : 1
		constexpr auto bUsedAsSpecialEngineMaterial = 0x18c; // char : 1
		constexpr auto bUsedWithSkeletalMesh = 0x18c; // char : 1
		constexpr auto bUsedWithEditorCompositing = 0x18d; // char : 1
		constexpr auto bUsedWithParticleSprites = 0x18d; // char : 1
		constexpr auto bUsedWithBeamTrails = 0x18d; // char : 1
		constexpr auto bUsedWithMeshParticles = 0x18d; // char : 1
		constexpr auto bUsedWithNiagaraSprites = 0x18d; // char : 1
		constexpr auto bUsedWithNiagaraRibbons = 0x18d; // char : 1
		constexpr auto bUsedWithNiagaraMeshParticles = 0x18d; // char : 1
		constexpr auto bUsedWithGeometryCache = 0x18d; // char : 1
		constexpr auto bUsedWithStaticLighting = 0x18e; // char : 1
		constexpr auto bUsedWithMorphTargets = 0x18e; // char : 1
		constexpr auto bUsedWithSplineMeshes = 0x18e; // char : 1
		constexpr auto bUsedWithInstancedStaticMeshes = 0x18e; // char : 1
		constexpr auto bUsedWithGeometryCollections = 0x18e; // char : 1
		constexpr auto bUsesDistortion = 0x18e; // char : 1
		constexpr auto bUsedWithClothing = 0x18e; // char : 1
		constexpr auto bUsedWithWater = 0x190; // char : 1
		constexpr auto bUsedWithHairStrands = 0x190; // char : 1
		constexpr auto bUsedWithUI = 0x194; // char : 1
		constexpr auto bAutomaticallySetUsageInEditor = 0x194; // char : 1
		constexpr auto bFullyRough = 0x194; // char : 1
		constexpr auto bUseFullPrecision = 0x194; // char : 1
		constexpr auto bUseLightmapDirectionality = 0x194; // char : 1
		constexpr auto bUseHQForwardReflections = 0x194; // char : 1
		constexpr auto bUsePlanarForwardReflections = 0x194; // char : 1
		constexpr auto bNormalCurvatureToRoughness = 0x194; // char : 1
		constexpr auto D3D11TessellationMode = 0x195; // EMaterialTessellationMode
		constexpr auto bEnableCrackFreeDisplacement = 0x196; // char : 1
		constexpr auto bEnableAdaptiveTessellation = 0x196; // char : 1
		constexpr auto AllowTranslucentCustomDepthWrites = 0x196; // char : 1
		constexpr auto Wireframe = 0x196; // char : 1
		constexpr auto bOutputVelocityOnBasePass = 0x196; // char : 1
		constexpr auto Expressions = 0x198; // TArray<UMaterialExpression*>
		constexpr auto MaterialFunctionInfos = 0x1a8; // TArray<FMaterialFunctionInfo>
		constexpr auto MaterialParameterCollectionInfos = 0x1b8; // TArray<FMaterialParameterCollectionInfo>
		constexpr auto bCanMaskedBeAssumedOpaque = 0x1c8; // char : 1
		constexpr auto bIsMasked = 0x1c8; // char : 1
		constexpr auto bIsPreviewMaterial = 0x1c8; // char : 1
		constexpr auto bIsFunctionPreviewMaterial = 0x1c8; // char : 1
		constexpr auto bUseMaterialAttributes = 0x1c8; // char : 1
		constexpr auto bCastRayTracedShadows = 0x1c8; // char : 1
		constexpr auto bUseViewSpecular = 0x1c8; // char : 1
		constexpr auto bUseTranslucencyVertexFog = 0x1c8; // char : 1
		constexpr auto bCanReceiveCSMShadowOnTranslucent = 0x1c9; // char : 1
		constexpr auto bIsSky = 0x1c9; // char : 1
		constexpr auto bComputeFogPerPixel = 0x1c9; // char : 1
		constexpr auto bOutputTranslucentVelocity = 0x1c9; // char : 1
		constexpr auto bAllowDevelopmentShaderCompile = 0x1c9; // char : 1
		constexpr auto bIsMaterialEditorStatsMaterial = 0x1c9; // char : 1
		constexpr auto BlendableLocation = 0x1ca; // EBlendableLocation
		constexpr auto BlendableOutputAlpha = 0x1cb; // char : 1
		constexpr auto bEnableStencilTest = 0x1cb; // char : 1
		constexpr auto StencilCompare = 0x1cc; // EMaterialStencilCompare
		constexpr auto StencilRefValue = 0x1cd; // char
		constexpr auto RefractionMode = 0x1ce; // ERefractionMode
		constexpr auto BlendablePriority = 0x1d0; // int32_t
		constexpr auto UsageFlagWarnings = 0x1d4; // uint32_t
		constexpr auto RefractionDepthBias = 0x1d8; // float
		constexpr auto StateID = 0x1dc; // FGuid
		constexpr auto MaxDisplacement = 0x1ec; // float
		constexpr auto CachedQualityLevelsUsed = 0x1f8; // TArray<bool>
		constexpr auto ExpressionTextureReferences = 0x288; // TArray<UObject*>
	}

	namespace n_UMM_GuildWantedSlot { // : UWidgetBase
		constexpr auto img_rank = 0x2e0; // UMirImage*
		constexpr auto txt_rank = 0x2e8; // UMirTextBlock*
		constexpr auto img_profile = 0x2f0; // UMM_ProfileSlot*
		constexpr auto txt_nickname = 0x2f8; // UMirTextBlock*
		constexpr auto txt_level = 0x300; // UMirTextBlock*
		constexpr auto txt_combat_power = 0x308; // UMirTextBlock*
		constexpr auto txt_killed_count = 0x310; // UMirTextBlock*
		constexpr auto txt_time = 0x318; // UMirTextBlock*
		constexpr auto txt_wanted_grade = 0x320; // UMirTextBlock*
		constexpr auto m_pBtnClick = 0x328; // UMirButton*
		constexpr auto txt_wanted_location = 0x330; // UMirTextBlock*
	}

	namespace n_UActorSequencePlayer { // : UMovieSceneSequencePlayer
		constexpr auto OnPlay = 0x408; // FScriptMulticastDelegate
		constexpr auto OnPlayReverse = 0x418; // FScriptMulticastDelegate
		constexpr auto OnStop = 0x428; // FScriptMulticastDelegate
		constexpr auto OnPause = 0x438; // FScriptMulticastDelegate
		constexpr auto OnFinished = 0x448; // FScriptMulticastDelegate
		constexpr auto Status = 0x458; // EMovieScenePlayerStatus
		constexpr auto bReversePlayback = 0x45c; // char : 1
		constexpr auto Sequence = 0x460; // UMovieSceneSequence*
		constexpr auto StartTime = 0x468; // FFrameNumber
		constexpr auto DurationFrames = 0x46c; // int32_t
		constexpr auto CurrentNumLoops = 0x470; // int32_t
		constexpr auto PlaybackSettings = 0x488; // FMovieSceneSequencePlaybackSettings
		constexpr auto RootTemplateInstance = 0x4a0; // FMovieSceneRootEvaluationTemplateInstance
		constexpr auto NetSyncProps = 0x810; // FMovieSceneSequenceReplProperties
		constexpr auto PlaybackClient = 0x820; // TScriptInterface<Class>
	}

	namespace n_UMM_UIAction_GuildExpedition { // : UMM_UIAction_CommonDungeon
		constexpr auto m_pCurDungeonWidget = 0x90; // UMM_B_DungeonCommon*
	}

	namespace n_UMovieSceneEnumSection { // : UMovieSceneSection
		constexpr auto EnumCurve = 0xe0; // FMovieSceneByteChannel
	}

	namespace n_UMM_Popup_DominionGuildMember { // : UWidgetBase
		constexpr auto sb_member = 0x2f0; // UMirScrollBox*
		constexpr auto bn_empty = 0x2f8; // UMM_Common_Board_Notice*
		constexpr auto btn_close = 0x300; // UMM_Common_Btn_Symbol*
		constexpr auto Txt_Title = 0x308; // UMirTextBlock*
		constexpr auto txt_sort = 0x310; // UMirTextBlock*
		constexpr auto cb_sort = 0x318; // UMirCheckBox*
		constexpr auto cp_sort = 0x320; // UMirCanvasPanel*
		constexpr auto btn_sort_combat_point = 0x328; // UMirButton*
		constexpr auto btn_sort_level = 0x330; // UMirButton*
		constexpr auto btn_sort_grade = 0x338; // UMirButton*
		constexpr auto img_sort_combat_point = 0x340; // UMirImage*
		constexpr auto img_sort_level = 0x348; // UMirImage*
		constexpr auto img_sort_grade = 0x350; // UMirImage*
		constexpr auto txt_last = 0x358; // UMirTextBlock*
		constexpr auto tooltip_partner = 0x360; // UMM_Common_ToolTipBtn*
	}

	namespace n_UMM_AchievementSlot { // : UWidgetBase
		constexpr auto ConditionInfo = 0x2e8; // UMM_Condition_info*
		constexpr auto RewardList = 0x2f0; // TArray<UMM_Slot_Material*>
		constexpr auto Btn_Receive = 0x300; // UMM_Common_Btn*
		constexpr auto m_AchievementID = 0x308; // int32_t
		constexpr auto m_CompleteImg = 0x310; // UMirImage*
		constexpr auto m_PanelReward = 0x318; // UPanelWidget*
		constexpr auto m_PanelBtn = 0x320; // UPanelWidget*
		constexpr auto m_SelectBtn = 0x328; // UMirButton*
		constexpr auto m_FocusImg = 0x330; // UMirImage*
	}

	namespace n_UMaterialExpressionSquareRoot { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UEditableGameplayTagQuery { // : UObject
		constexpr auto UserDescription = 0x28; // FString
		constexpr auto RootExpression = 0x48; // UEditableGameplayTagQueryExpression*
		constexpr auto TagQueryExportText_Helper = 0x50; // FGameplayTagQuery
	}

	namespace n_UDistributionFloatParameterBase { // : UDistributionFloatConstant
		constexpr auto ParameterName = 0x40; // FName
		constexpr auto MinInput = 0x48; // float
		constexpr auto MaxInput = 0x4c; // float
		constexpr auto MinOutput = 0x50; // float
		constexpr auto MaxOutput = 0x54; // float
		constexpr auto ParamMode = 0x58; // DistributionParamMode
	}

	namespace n_UInterpTrackFloatParticleParam { // : UInterpTrackFloatBase
		constexpr auto ParamName = 0x90; // FName
	}

	namespace n_UMM_Option_Ability_Compare { // : UWidgetBase
		constexpr auto m_pParentWidget = 0x260; // UWidgetBase*
		constexpr auto m_arChildWidget = 0x268; // TArray<TWeakObjectPtr<UWidgetBase>>
		constexpr auto m_arMirTextBlock = 0x280; // TArray<TWeakObjectPtr<UMirTextBlock>>
		constexpr auto m_arMirRichTextBlock = 0x290; // TArray<TWeakObjectPtr<UMirRichTextBlock>>
		constexpr auto m_arMirEditableText = 0x2a0; // TArray<TWeakObjectPtr<UMirEditableText>>
		constexpr auto m_arMirImage = 0x2b0; // TArray<TWeakObjectPtr<UMirImage>>
	}

	namespace n_UMM_OptionNum { // : UWidgetBase
		constexpr auto Img_Icon = 0x2f0; // UImage*
		constexpr auto Txt_OptionName = 0x2f8; // UTextBlock*
		constexpr auto Txt_OptionNum = 0x300; // UTextBlock*
	}

	namespace n_UMM_UIAction_Achievement { // : UMM_UIAction
		constexpr auto STRING_ERROR_ACHIEVEMNT_COMPLETE = 0x154; // int32_t
		constexpr auto STRING_ERROR_EMPTY_RECEIVEALL = 0x158; // int32_t
		constexpr auto STRING_ERROR_NOTENOUGH_INVENTORY = 0x15c; // int32_t
		constexpr auto STRING_ERROR_ACHIEVEMENT_END = 0x160; // int32_t
		constexpr auto STRING_ERROR_ACHIEVEMENT_MAX_MONEY = 0x164; // int32_t
		constexpr auto m_IsLevelUp = 0x16c; // bool
		constexpr auto m_PrevLevel = 0x170; // int32_t
		constexpr auto m_IsNotRecieve = 0x174; // bool
		constexpr auto STRING_ERROR_MAX_VALUE_GOLD_COIN = 0x17c; // int32_t
		constexpr auto STRING_ERROR_MAX_VALUE_SILVER_COIN = 0x180; // int32_t
		constexpr auto STRING_ERROR_MAX_VALUE_COIN = 0x184; // int32_t
		constexpr auto STRING_ERROR_MAX_VALUE_SAPPHIRE = 0x188; // int32_t
		constexpr auto STRING_ERROR_MAX_VALUE_ENERGY_POINT = 0x18c; // int32_t
		constexpr auto STRING_ERROR_MAX_VALUE_BLACK_IRON = 0x190; // int32_t
		constexpr auto STRING_ERROR_MAX_VALUE_COMBAT_JADE = 0x194; // int32_t
		constexpr auto STRING_ERROR_MAX_VALUE_PVP_SCORE = 0x198; // int32_t
		constexpr auto STRING_ERROR_MAX_VALUE_GUILD_COIN = 0x19c; // int32_t
		constexpr auto STRING_ERROR_MAX_VALUE_FRIENDSHIP_SCORE = 0x1a0; // int32_t
	}

	namespace n_UMaterialExpressionAtmosphericLightColor { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UMM_CharAbility_Info_Rank { // : UWidgetBase
		constexpr auto PlayerRankList = 0x2f0; // TArray<UMM_PlayerRank*>
	}

	namespace n_UMM_ShopNpcGoods { // : UWidgetBase
		constexpr auto slot1 = 0x2e0; // UMM_ShopNpcGoodsSlot*
		constexpr auto slot2 = 0x2e8; // UMM_ShopNpcGoodsSlot*
		constexpr auto slot3 = 0x2f0; // UMM_ShopNpcGoodsSlot*
	}

	namespace n_UMM_Scroll_Dots { // : UWidgetBase
		constexpr auto m_iDotsMaxCount = 0x2f0; // int32_t
		constexpr auto ImgList_ON = 0x2f8; // TArray<UMirImage*>
		constexpr auto PanelList = 0x308; // TArray<UMirCanvasPanel*>
		constexpr auto CurrentDot = 0x318; // int32_t
	}

	namespace n_UBookMark { // : UBookmarkBase
		constexpr auto Location = 0x28; // FVector
		constexpr auto Rotation = 0x34; // FRotator
		constexpr auto HiddenLevels = 0x40; // TArray<FString>
	}

	namespace n_UMM_Map_Minimap { // : UWidgetBase
		constexpr auto m_MapDetail = 0x300; // UMM_Map_Detail*
		constexpr auto m_CTHrzTabSet = 0x308; // UMM_CommonHorizontalTabSet*
		constexpr auto m_MapWaypointList = 0x310; // UMM_Map_Waypoint_List*
		constexpr auto m_MapOccupation = 0x318; // UMM_Map_Occupation*
		constexpr auto m_Grid_DropItem = 0x320; // UPanelWidget*
		constexpr auto m_ListView_DropItemList = 0x328; // UMirListView*
		constexpr auto m_CheckBox_SectorGrade = 0x330; // UMirCheckBox*
		constexpr auto m_pBtnCommToolTip = 0x338; // UMM_Common_ToolTipBtn*
		constexpr auto m_arDropItemSlotObj = 0x340; // TArray<UMaterialSlotObj*>
		constexpr auto m_Hrz_Sanctum = 0x350; // UHorizontalBox*
		constexpr auto m_Txt_Sanctum = 0x358; // UMirTextBlock*
		constexpr auto m_iFontSize = 0x364; // int32_t
		constexpr auto m_iMiddleFontSize = 0x368; // int32_t
		constexpr auto m_iSmallFontSize = 0x36c; // int32_t
		constexpr auto m_iBidoFontSize = 0x370; // int32_t
		constexpr auto m_iEliteFontSize = 0x374; // int32_t
	}

	namespace n_UMM_B_RelationQuest { // : UWidgetBase
		constexpr auto m_List_RelationQuest = 0x2f0; // UMM_RelationQuestList*
		constexpr auto m_RelationQuestDetail = 0x2f8; // UMM_RelationQuestDetailList*
	}

	namespace n_UMMRichTextBox { // : UWidgetBase
		constexpr auto Text = 0x2e0; // FText
		constexpr auto Font = 0x2f8; // FSlateFontInfo
		constexpr auto ShadowOffset = 0x348; // FVector2D
		constexpr auto ShadowColorAndOpacity = 0x350; // FLinearColor
		constexpr auto MinDesiredWidth = 0x360; // float
		constexpr auto Justification = 0x364; // ETextJustify
		constexpr auto Margin = 0x368; // FMargin
		constexpr auto LineHeightPercentage = 0x378; // float
		constexpr auto AutoWrapText = 0x37c; // bool
		constexpr auto WrapTextAt = 0x380; // float
		constexpr auto WrappingPolicy = 0x384; // ETextWrappingPolicy
		constexpr auto m_RTxt_Content = 0x388; // URichTextBox*
	}

	namespace n_ACutsceneCamera { // : ACameraActor
		constexpr auto m_Index = 0x780; // int32_t
		constexpr auto m_CameraAlpha = 0x784; // float
		constexpr auto m_pStartPlacement = 0x788; // ACutsceneCamera*
		constexpr auto m_pEndPlacement = 0x790; // ACutsceneCamera*
		constexpr auto pTextRender = 0x798; // UTextRenderComponent*
	}

	namespace n_UMM_UIShopSubTab { // : UWidgetBase
		constexpr auto m_Img_Selected = 0x2f0; // UMirImage*
		constexpr auto m_Img_TagIcon = 0x2f8; // UMirImage*
		constexpr auto m_Txt_TabName = 0x300; // UMirTextBlock*
		constexpr auto m_Btn_SubTab = 0x308; // UMirButton*
		constexpr auto m_Panel_Indicator = 0x310; // UMirCanvasPanel*
		constexpr auto m_Panel_EffectSelected = 0x318; // UPanelWidget*
		constexpr auto m_Effect_Selected = 0x320; // UEffectWidgetBase*
		constexpr auto m_Panel_EffectClick = 0x328; // UPanelWidget*
		constexpr auto m_Effect_Click = 0x330; // UEffectWidgetBase*
	}

	namespace n_UMM_Popup_GuildDonationSelectSlot { // : UWidgetBase
		constexpr auto img_money = 0x2e0; // UMirImage*
		constexpr auto txt_money = 0x2e8; // UMirTextBlock*
		constexpr auto cb_selected = 0x2f0; // UMirCheckBox*
		constexpr auto Btn_Main = 0x2f8; // UMirButton*
		constexpr auto cp_lock = 0x300; // UMirCanvasPanel*
	}

	namespace n_UParticleModulePivotOffset { // : UParticleModuleLocationBase
		constexpr auto PivotOffset = 0x30; // FVector2D
	}

	namespace n_UMM_PatchWidget { // : UWidgetBase
		constexpr auto m_MediaPlayer = 0x2e0; // UMediaPlayer*
		constexpr auto m_MediaTexture = 0x2e8; // UMediaTexture*
		constexpr auto m_Movie_Logo = 0x2f0; // UMediaSource*
		constexpr auto m_MediaSoundActor = 0x300; // AMediaSoundActor*
		constexpr auto m_Can_Splash = 0x338; // UPanelWidget*
		constexpr auto m_Scl_Movie = 0x340; // UPanelWidget*
		constexpr auto m_Overlay_Warning = 0x348; // UPanelWidget*
		constexpr auto m_RTxt_Warning = 0x350; // UMirRichTextBlock*
		constexpr auto m_Ani_Splash = 0x358; // UWidgetAnimation*
		constexpr auto m_Can_Patch = 0x370; // UPanelWidget*
		constexpr auto m_Txt_DownloadMsg = 0x378; // UMirTextBlock*
		constexpr auto m_Txt_DownloadPercent = 0x380; // UMirTextBlock*
		constexpr auto m_Txt_DownloadSize = 0x388; // UMirTextBlock*
		constexpr auto m_Txt_DownloadSpeed = 0x390; // UMirTextBlock*
		constexpr auto m_Prg_Progress = 0x398; // UMirProgressBar*
		constexpr auto m_Txt_IOS_BackgroundDownload = 0x3a0; // UMirTextBlock*
		constexpr auto m_Overlay_Popup = 0x3a8; // UPanelWidget*
		constexpr auto m_Txt_Title = 0x3b0; // UMirTextBlock*
		constexpr auto m_RTxt_Msg = 0x3b8; // UMirRichTextBlock*
		constexpr auto m_Overlay_Cancel = 0x3c0; // UPanelWidget*
		constexpr auto m_Txt_Cancel = 0x3c8; // UMirTextBlock*
		constexpr auto m_Btn_Cancel = 0x3d0; // UMirButton*
		constexpr auto m_Overlay_Confirm = 0x3d8; // UPanelWidget*
		constexpr auto m_Txt_Confirm = 0x3e0; // UMirTextBlock*
		constexpr auto m_Btn_Confirm = 0x3e8; // UMirButton*
		constexpr auto m_iDebugModeClickCount = 0x414; // int32_t
		constexpr auto m_Can_Debug = 0x420; // UPanelWidget*
		constexpr auto m_Btn_Debug = 0x428; // UMirButton*
		constexpr auto m_Txt_DownloadFileName = 0x430; // UMirTextBlock*
	}

	namespace n_UMM_Popup_UIShopStepGoodsList { // : UWidgetBase
		constexpr auto m_TxtTitle = 0x2f0; // UMirTextBlock*
		constexpr auto m_TxtDesc = 0x2f8; // UMirTextBlock*
		constexpr auto m_ListView = 0x300; // UMirListView*
		constexpr auto m_BtnClose = 0x308; // UMM_Common_Btn_Symbol*
	}

	namespace n_UInterpTrackColorScale { // : UInterpTrackVectorBase
		constexpr auto VectorTrack = 0x70; // FInterpCurveVector
		constexpr auto CurveTension = 0x88; // float
	}

	namespace n_UMM_UIAction_ItemCollection { // : UMM_UIAction
		constexpr auto m_PercentFormatStrID = 0x68; // int32_t
		constexpr auto m_ValueFormatStrID = 0x6c; // int32_t
		constexpr auto m_CharStrID = 0x70; // int32_t
		constexpr auto m_AccountStrID = 0x74; // int32_t
		constexpr auto m_GradeWarningStr = 0x78; // int32_t
		constexpr auto m_GradeWithTradeWarningStr = 0x7c; // int32_t
		constexpr auto m_WarningStrID = 0x80; // int32_t
		constexpr auto m_CheckStrID = 0x84; // int32_t
		constexpr auto m_CancelStrID = 0x88; // int32_t
		constexpr auto m_TimeFormatStrID = 0x8c; // int32_t
	}

	namespace n_UEnvQueryTest_Distance { // : UEnvQueryTest
		constexpr auto TestMode = 0x1c0; // EEnvTestDistance
		constexpr auto DistanceTo = 0x1c8; // UEnvQueryContext*
	}

	namespace n_UGameSessionSettings { // : UObject
		constexpr auto MaxSpectators = 0x28; // int32_t
		constexpr auto MaxPlayers = 0x2c; // int32_t
		constexpr auto bRequiresPushToTalk = 0x30; // char : 1
	}

	namespace n_ASceneCapture2D { // : ASceneCapture
		constexpr auto CaptureComponent2D = 0x228; // USceneCaptureComponent2D*
	}

	namespace n_USynthSamplePlayer { // : USynthComponent
		constexpr auto SoundWave = 0x650; // USoundWave*
		constexpr auto OnSampleLoaded = 0x658; // FScriptMulticastDelegate
		constexpr auto OnSamplePlaybackProgress = 0x668; // FScriptMulticastDelegate
	}

	namespace n_UFrameGrabberProtocol { // : UMovieSceneImageCaptureProtocolBase
		constexpr auto State = 0x50; // EMovieSceneCaptureProtocolState
	}

	namespace n_UMaterialExpressionScalarParameter { // : UMaterialExpressionParameter
		constexpr auto DefaultValue = 0x58; // float
		constexpr auto bUseCustomPrimitiveData = 0x5c; // bool
		constexpr auto PrimitiveDataIndex = 0x5d; // char
	}

	namespace n_UMM_SkillDesc { // : UWidgetBase
		constexpr auto m_Txt_SkillDesc = 0x2e0; // UMirRichTextBlock*
		constexpr auto m_Txt_NextSkillDesc = 0x2e8; // UMirRichTextBlock*
	}

	namespace n_UMM_B_Mail { // : UWidgetBase
		constexpr auto iMailNoticeStringID = 0x2f0; // int32_t
		constexpr auto ARRAY_STRING_TAB_BUTTON_ID = 0x2f8; // TArray<int32_t>
		constexpr auto m_CategoryTab = 0x308; // UMM_CommonVerticalTabSet*
		constexpr auto m_C_Btn_DeleteAll = 0x310; // UMM_Common_Btn*
		constexpr auto m_C_Btn_ReceiveAll = 0x318; // UMM_Common_Btn*
		constexpr auto m_Btn_Refresh = 0x320; // UMM_Common_Btn*
		constexpr auto m_RTxt_Notice = 0x328; // UMirRichTextBlock*
		constexpr auto m_C_Btn_Write = 0x330; // UMM_Common_Btn*
		constexpr auto m_C_Btn_Del = 0x338; // UMM_Common_Btn*
		constexpr auto m_C_Btn_Func = 0x340; // UMM_Common_Btn*
		constexpr auto m_C_Btn_SiegeRank = 0x348; // UMM_Common_Btn*
		constexpr auto m_ListView_MailList = 0x350; // UMirListView*
		constexpr auto m_Canvas_Detail = 0x358; // UMirCanvasPanel*
		constexpr auto m_C_Empty_Notice = 0x360; // UMM_Common_Board_Notice*
		constexpr auto m_VrtBox_Normal = 0x368; // UVerticalBox*
		constexpr auto m_Txt_Title = 0x370; // UMirTextBlock*
		constexpr auto m_Txt_SubTitle = 0x378; // UMirTextBlock*
		constexpr auto m_Txt_SendTime = 0x380; // UMirTextBlock*
		constexpr auto m_RTxt_ExpireTime = 0x388; // UMirRichTextBlock*
		constexpr auto m_RTxt_Contents = 0x390; // UMirRichTextBlock*
		constexpr auto m_ScrollBox_Gift = 0x398; // UMirScrollBox*
		constexpr auto m_Img_Draco = 0x3a0; // UMirImage*
		constexpr auto m_arMailSlotObj = 0x3a8; // TArray<UMailSlotObj*>
		constexpr auto m_Btn_Translation = 0x3b8; // UMM_Common_Btn_Translation*
	}

	namespace n_AWindDirectionalSource { // : AInfo
		constexpr auto Component = 0x218; // UWindDirectionalSourceComponent*
	}

	namespace n_UMM_B_UserEvent_GachaResult { // : UWidgetBase
		constexpr auto STRING_ID_BTN_OPENALL = 0x2e0; // int32_t
		constexpr auto STRING_ID_BTN_CLOSE = 0x2e4; // int32_t
		constexpr auto STRING_ID_GRADE_EPIC = 0x2e8; // int32_t
		constexpr auto STRING_ID_GRADE_LEGEND = 0x2ec; // int32_t
		constexpr auto NORMAL_CARD_APPEAR_DELAY = 0x2f0; // float
		constexpr auto HERO_CARD_APPEAR_DELAY = 0x2f4; // float
		constexpr auto m_arrItemSlot = 0x2f8; // TArray<UMM_UserEvent_GachaResultSlot*>
		constexpr auto m_pTitleTxt = 0x308; // UMirTextBlock*
		constexpr auto m_pBtnOk = 0x310; // UMM_Common_Btn*
		constexpr auto m_Btn_OpenAll = 0x318; // UMM_Common_Btn*
		constexpr auto m_pStartAni = 0x320; // UWidgetAnimation*
		constexpr auto m_pEndAni = 0x328; // UWidgetAnimation*
	}

	namespace n_UDialogueVoice { // : UObject
		constexpr auto Gender = 0x28; // EGrammaticalGender
		constexpr auto Plurality = 0x29; // EGrammaticalNumber
		constexpr auto LocalizationGUID = 0x2c; // FGuid
	}

	namespace n_UParticleModuleMeshRotationRateOverLife { // : UParticleModuleRotationRateBase
		constexpr auto RotRate = 0x30; // FRawDistributionVector
		constexpr auto bScaleRotRate = 0x78; // char : 1
	}

	namespace n_UParticleModuleMeshRotation_Seeded { // : UParticleModuleMeshRotation
		constexpr auto RandomSeedInfo = 0x80; // FParticleRandomSeedInfo
	}

	namespace n_UMaterialExpressionHairAttributes { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UBTTask_GameplayTaskBase { // : UBTTaskNode
		constexpr auto bWaitForGameplayTask = 0x70; // char : 1
	}

	namespace n_UFileMediaSource { // : UBaseMediaSource
		constexpr auto FilePath = 0x88; // FString
		constexpr auto PrecacheFile = 0x98; // bool
	}

	namespace n_AConditionCheckTrigger { // : AActivateTrigger
		constexpr auto m_ConditionType = 0x278; // ECondtionTriggerType
		constexpr auto m_ConditionTargetType = 0x279; // EConditionTriggerTargetType
		constexpr auto m_ConditionTargetID = 0x27c; // int32_t
		constexpr auto m_ConditionValue = 0x280; // float
	}

	namespace n_UHierarchicalLODSetup { // : UObject
		constexpr auto HierarchicalLODSetup = 0x28; // TArray<FHierarchicalSimplification>
		constexpr auto OverrideBaseMaterial = 0x38; // UMaterialInterface*
	}

	namespace n_UMM_GameOption_Environment { // : UWidgetBase
		constexpr auto EnvironmentTabSet = 0x2f0; // UMM_CommonVerticalTabSet*
		constexpr auto WidgetSwitcher = 0x2f8; // UWidgetSwitcher*
		constexpr auto Environment_Graphic = 0x300; // UMM_GameOption_Graphic*
		constexpr auto Environment_Sound = 0x308; // UMM_GameOption_Sound*
		constexpr auto Environment_Language = 0x310; // UMM_GameOption_Language*
	}

	namespace n_UMM_ServerRelocationSlot_Global { // : UWidgetBase
		constexpr auto m_Canvas_Recommend = 0x2e0; // UMirCanvasPanel*
		constexpr auto m_Txt_Server = 0x2e8; // UMirTextBlock*
		constexpr auto m_RTxt_Notice = 0x2f0; // UMirRichTextBlock*
		constexpr auto m_Btn_Select = 0x2f8; // UMirButton*
	}

	namespace n_UMM_B_ItemResult { // : UWidgetBase
		constexpr auto SucessDefaultColor = 0x2e0; // FLinearColor
		constexpr auto SucessTextColor = 0x2f0; // FLinearColor
		constexpr auto FailTextColor = 0x300; // FLinearColor
		constexpr auto FailLightColor = 0x310; // FLinearColor
		constexpr auto m_SkipTime = 0x320; // float
		constexpr auto GuideMsgID = 0x324; // int32_t
		constexpr auto m_OpenAni = 0x340; // UWidgetAnimation*
		constexpr auto m_OpenAni_Succeeded = 0x348; // UWidgetAnimation*
		constexpr auto m_OpenAni_GreateSucceeded = 0x350; // UWidgetAnimation*
		constexpr auto m_OpenAni_Fail = 0x358; // UWidgetAnimation*
		constexpr auto m_OpenAni_Fiasco = 0x360; // UWidgetAnimation*
		constexpr auto m_OpenAni_ForceCriticalFail = 0x368; // UWidgetAnimation*
		constexpr auto m_SuccessEffect = 0x370; // UMirCanvasPanel*
		constexpr auto m_FailEffect = 0x378; // UPanelWidget*
		constexpr auto m_FiascoEffect = 0x380; // UPanelWidget*
		constexpr auto m_ForceCriticalFail = 0x388; // UPanelWidget*
		constexpr auto m_TitleLight = 0x390; // UMirImage* [0x4]
		constexpr auto m_BtnClose = 0x3b0; // UButton*
		constexpr auto m_TxtResultTitle = 0x3b8; // UTextBlock*
		constexpr auto m_TxtGuideMessage = 0x3c0; // UTextBlock*
		constexpr auto m_ItemInfo = 0x3c8; // UMM_ItemResult_ItemInfo*
		constexpr auto m_AbilityInfo = 0x3d0; // UMM_ItemResult_AbilityInfo*
		constexpr auto m_FailInfo = 0x3d8; // UMM_ItemResult_FailInfo*
		constexpr auto m_TranscendFailInfo = 0x3e0; // UMM_PieceItemInfos*
		constexpr auto m_TranscendPassiveSkillInfo = 0x3e8; // UMM_PassiveSkillInfos*
		constexpr auto m_SingleAbilityInfo = 0x3f0; // UMM_ItemResult_SingleAbilityInfo*
		constexpr auto m_PlayAni = 0x3f8; // UWidgetAnimation*
		constexpr auto m_Panel_Center = 0x400; // UPanelWidget*
		constexpr auto m_Txt_NameInCenter = 0x408; // UMirTextBlock*
		constexpr auto m_Txt_ValueInCenter = 0x410; // UMirTextBlock*
		constexpr auto m_Txt_ValueNextnCenter = 0x418; // UMirTextBlock*
		constexpr auto m_IsSkipAni = 0x420; // bool
		constexpr auto m_Panel_Auto_Goods = 0x438; // UPanelWidget*
		constexpr auto m_Txt_UseMat = 0x440; // UMirTextBlock*
		constexpr auto m_Img_SmeltStone = 0x448; // UMirImage*
		constexpr auto m_Txt_SmeltStone = 0x450; // UMirTextBlock*
		constexpr auto m_Img_SmeltBlackIron = 0x458; // UMirImage*
		constexpr auto m_Txt_SmeltBlackIron = 0x460; // UMirTextBlock*
		constexpr auto m_Img_SmeltCost = 0x468; // UMirImage*
		constexpr auto m_Txt_SmeltCost = 0x470; // UMirTextBlock*
		constexpr auto m_Panel_ClosedTraining = 0x478; // UMirCanvasPanel*
		constexpr auto m_Txt_PrevClosedTrainigCollectValue = 0x480; // UMirTextBlock*
		constexpr auto m_Txt_ClosedTrainigCollectValue = 0x488; // UMirTextBlock*
		constexpr auto m_AutoSmeltAni_Succees = 0x490; // UWidgetAnimation*
		constexpr auto m_AutoSmeltAni_Fail = 0x498; // UWidgetAnimation*
		constexpr auto m_AutoSmeltAni_Broken = 0x4a0; // UWidgetAnimation*
	}

	namespace n_UEQSRenderingComponent { // : UPrimitiveComponent
		constexpr auto MinDrawDistance = 0x228; // float
		constexpr auto LDMaxDrawDistance = 0x22c; // float
		constexpr auto CachedMaxDrawDistance = 0x230; // float
		constexpr auto DepthPriorityGroup = 0x234; // ESceneDepthPriorityGroup
		constexpr auto ViewOwnerDepthPriorityGroup = 0x235; // ESceneDepthPriorityGroup
		constexpr auto IndirectLightingCacheQuality = 0x236; // EIndirectLightingCacheQuality
		constexpr auto LightmapType = 0x237; // ELightmapType
		constexpr auto bUseMaxLODAsImposter = 0x238; // char : 1
		constexpr auto CachedBoundsSphereDiameter = 0x23c; // float
		constexpr auto bBatchImpostersAsInstances = 0x240; // char : 1
		constexpr auto bNeverDistanceCull = 0x240; // char : 1
		constexpr auto bAlwaysCreatePhysicsState = 0x240; // char : 1
		constexpr auto bGenerateOverlapEvents = 0x240; // char : 1
		constexpr auto bMultiBodyOverlap = 0x241; // char : 1
		constexpr auto bTraceComplexOnMove = 0x241; // char : 1
		constexpr auto bReturnMaterialOnMove = 0x241; // char : 1
		constexpr auto bUseViewOwnerDepthPriorityGroup = 0x241; // char : 1
		constexpr auto bAllowCullDistanceVolume = 0x241; // char : 1
		constexpr auto bHasMotionBlurVelocityMeshes = 0x241; // char : 1
		constexpr auto bVisibleInReflectionCaptures = 0x241; // char : 1
		constexpr auto bVisibleInRayTracing = 0x241; // char : 1
		constexpr auto bRenderInMainPass = 0x242; // char : 1
		constexpr auto bRenderInDepthPass = 0x242; // char : 1
		constexpr auto bReceivesDecals = 0x242; // char : 1
		constexpr auto bOwnerNoSee = 0x242; // char : 1
		constexpr auto bOnlyOwnerSee = 0x242; // char : 1
		constexpr auto bTreatAsBackgroundForOcclusion = 0x242; // char : 1
		constexpr auto bUseAsOccluder = 0x242; // char : 1
		constexpr auto bSelectable = 0x242; // char : 1
		constexpr auto bForceMipStreaming = 0x243; // char : 1
		constexpr auto bHasPerInstanceHitProxies = 0x243; // char : 1
		constexpr auto CastShadow = 0x243; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x243; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x243; // char : 1
		constexpr auto bCastDynamicShadow = 0x243; // char : 1
		constexpr auto bCastStaticShadow = 0x243; // char : 1
		constexpr auto bCastVolumetricTranslucentShadow = 0x243; // char : 1
		constexpr auto bSelfShadowOnly = 0x244; // char : 1
		constexpr auto bCastFarShadow = 0x244; // char : 1
		constexpr auto bCastInsetShadow = 0x244; // char : 1
		constexpr auto bCastCinematicShadow = 0x244; // char : 1
		constexpr auto bCastHiddenShadow = 0x244; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x244; // char : 1
		constexpr auto bLightAsIfStatic = 0x244; // char : 1
		constexpr auto bLightAttachmentsAsGroup = 0x244; // char : 1
		constexpr auto bExcludeFromLightAttachmentGroup = 0x245; // char : 1
		constexpr auto bReceiveMobileCSMShadows = 0x245; // char : 1
		constexpr auto bSingleSampleShadowFromStationaryLights = 0x245; // char : 1
		constexpr auto bIgnoreRadialImpulse = 0x245; // char : 1
		constexpr auto bIgnoreRadialForce = 0x245; // char : 1
		constexpr auto bApplyImpulseOnDamage = 0x245; // char : 1
		constexpr auto bReplicatePhysicsToAutonomousProxy = 0x245; // char : 1
		constexpr auto AlwaysLoadOnClient = 0x245; // char : 1
		constexpr auto AlwaysLoadOnServer = 0x246; // char : 1
		constexpr auto bUseEditorCompositing = 0x246; // char : 1
		constexpr auto bRenderCustomDepth = 0x246; // char : 1
		constexpr auto bHasCustomNavigableGeometry = 0x247; // EHasCustomNavigableGeometry
		constexpr auto CanCharacterStepUpOn = 0x249; // ECanBeCharacterBase
		constexpr auto LightingChannels = 0x24a; // FLightingChannels
		constexpr auto CustomDepthStencilWriteMask = 0x24b; // ERendererStencilMask
		constexpr auto CustomDepthStencilValue = 0x24c; // int32_t
		constexpr auto CustomPrimitiveData = 0x250; // FCustomPrimitiveData
		constexpr auto TranslucencySortPriority = 0x260; // int32_t
		constexpr auto VisibilityId = 0x264; // int32_t
		constexpr auto bIgnoreOcclusionVolume = 0x268; // char : 1
		constexpr auto OcclusionVolumeId = 0x26c; // int32_t
		constexpr auto RuntimeVirtualTextures = 0x270; // TArray<URuntimeVirtualTexture*>
		constexpr auto VirtualTextureLodBias = 0x280; // uint8_t
		constexpr auto VirtualTextureCullMips = 0x281; // uint8_t
		constexpr auto VirtualTextureMinCoverage = 0x282; // uint8_t
		constexpr auto VirtualTextureRenderPassType = 0x283; // ERuntimeVirtualTextureMainPassType
		constexpr auto LpvBiasMultiplier = 0x288; // float
		constexpr auto BoundsScale = 0x294; // float
		constexpr auto MoveIgnoreActors = 0x2a8; // TArray<AActor*>
		constexpr auto MoveIgnoreComponents = 0x2b8; // TArray<UPrimitiveComponent*>
		constexpr auto BodyInstance = 0x2d8; // FBodyInstance
		constexpr auto OnComponentHit = 0x3e8; // FScriptMulticastDelegate
		constexpr auto OnComponentBeginOverlap = 0x3e9; // FScriptMulticastDelegate
		constexpr auto OnComponentEndOverlap = 0x3ea; // FScriptMulticastDelegate
		constexpr auto OnComponentWake = 0x3eb; // FScriptMulticastDelegate
		constexpr auto OnComponentSleep = 0x3ec; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x3ee; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x3ef; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x3f0; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x3f1; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x3f2; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x3f3; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x3f4; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x3f5; // FScriptMulticastDelegate
		constexpr auto LODParentPrimitive = 0x410; // UPrimitiveComponent*
	}

	namespace n_UUserDefinedEnum { // : UEnum
		constexpr auto DisplayNameMap = 0x60; // TMap<FName, FText>
	}

	namespace n_UPaperTerrainMaterial { // : UDataAsset
		constexpr auto Rules = 0x30; // TArray<FPaperTerrainMaterialRule>
		constexpr auto InteriorFill = 0x40; // UPaperSprite*
	}

	namespace n_UMM_NewInventory { // : UWidgetBase
		constexpr auto m_Scr_Main = 0x300; // UMirScrollBox*
		constexpr auto m_Wrap_Main = 0x308; // UPanelWidget*
		constexpr auto m_arSlot = 0x310; // TArray<UWidgetBase*>
		constexpr auto m_BoardNotice = 0x320; // UMM_Common_Board_Notice*
	}

	namespace n_UMovieSceneByteSection { // : UMovieSceneSection
		constexpr auto ByteCurve = 0xe0; // FMovieSceneByteChannel
	}

	namespace n_UInterpTrackInstAnimControl { // : UInterpTrackInst
		constexpr auto LastUpdatePosition = 0x28; // float
	}

	namespace n_UPaperRuntimeSettings { // : UObject
		constexpr auto bEnableSpriteAtlasGroups = 0x28; // bool
		constexpr auto bEnableTerrainSplineEditing = 0x29; // bool
		constexpr auto bResizeSpriteDataToMatchTextures = 0x2a; // bool
	}

	namespace n_UMaterialExpressionObjectBounds { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UMM_Dominion_Castle_Log { // : UWidgetBase
		constexpr auto m_pImgIcon = 0x2e8; // UMirImage*
		constexpr auto m_pTxtTaxValue = 0x2f0; // UMirTextBlock*
		constexpr auto m_pBtnSetTax = 0x2f8; // UMM_Common_Btn_Symbol*
	}

	namespace n_UMM_Popup_BlackIronShop_Give { // : UWidgetBase
		constexpr auto m_pTxtBlackIron = 0x2f0; // UMirTextBlock*
		constexpr auto m_pTxtPossessionValue = 0x2f8; // UMirTextBlock*
		constexpr auto m_pTxtSelectGuild = 0x300; // UMirTextBlock*
		constexpr auto m_pCanvasGuild = 0x308; // UMirCanvasPanel*
		constexpr auto m_pCanvasEmptyGuild = 0x310; // UMirCanvasPanel*
		constexpr auto m_pBtnSearch = 0x318; // UMM_Common_Btn_Symbol*
		constexpr auto m_pBtnSearchSe = 0x320; // UMirButton*
		constexpr auto m_pImgGuildBg = 0x328; // UMirImage*
		constexpr auto m_pImgGuildMark = 0x330; // UMirImage*
		constexpr auto m_pGuildMasterName = 0x338; // UMirTextBlock*
		constexpr auto m_pGuildName = 0x340; // UMirTextBlock*
		constexpr auto m_pTxtFull = 0x348; // UMirTextBlock*
		constexpr auto m_pHorStorageValue = 0x350; // UHorizontalBox*
		constexpr auto m_pTxtGuildStorageOutValue = 0x358; // UMirTextBlock*
		constexpr auto m_pSliderCount = 0x360; // UMM_Item_Make_Slider_BigInteger*
		constexpr auto m_pBtnClose = 0x368; // UMM_Common_Btn_Symbol*
		constexpr auto btn_confirm = 0x370; // UMM_Common_Btn*
		constexpr auto Btn_Cancel = 0x378; // UMM_Common_Btn*
		constexpr auto m_arrImgIcon = 0x380; // TArray<UMirImage*>
		constexpr auto m_pHorSendTax = 0x390; // UHorizontalBox*
	}

	namespace n_UAnimCompositeBase { // : UAnimSequenceBase
		constexpr auto Notifies = 0x80; // TArray<FAnimNotifyEvent>
		constexpr auto SequenceLength = 0x90; // float
		constexpr auto RateScale = 0x94; // float
		constexpr auto RawCurveData = 0x98; // FRawCurveTracks
	}

	namespace n_UMM_StyleBook_Slot { // : UWidgetBase
		constexpr auto m_pParentWidget = 0x260; // UWidgetBase*
		constexpr auto m_arChildWidget = 0x268; // TArray<TWeakObjectPtr<UWidgetBase>>
		constexpr auto m_arMirTextBlock = 0x280; // TArray<TWeakObjectPtr<UMirTextBlock>>
		constexpr auto m_arMirRichTextBlock = 0x290; // TArray<TWeakObjectPtr<UMirRichTextBlock>>
		constexpr auto m_arMirEditableText = 0x2a0; // TArray<TWeakObjectPtr<UMirEditableText>>
		constexpr auto m_arMirImage = 0x2b0; // TArray<TWeakObjectPtr<UMirImage>>
	}

	namespace n_URig { // : UObject
		constexpr auto TransformBases = 0x30; // TArray<FTransformBase>
		constexpr auto Nodes = 0x40; // TArray<FNode>
	}

	namespace n_UMaterialExpressionDistanceToNearestSurface { // : UMaterialExpression
		constexpr auto Position = 0x40; // FExpressionInput
	}

	namespace n_UApplicationLifecycleComponent { // : UActorComponent
		constexpr auto ApplicationWillDeactivateDelegate = 0xb0; // FScriptMulticastDelegate
		constexpr auto ApplicationHasReactivatedDelegate = 0xc0; // FScriptMulticastDelegate
		constexpr auto ApplicationWillEnterBackgroundDelegate = 0xd0; // FScriptMulticastDelegate
		constexpr auto ApplicationHasEnteredForegroundDelegate = 0xe0; // FScriptMulticastDelegate
		constexpr auto ApplicationWillTerminateDelegate = 0xf0; // FScriptMulticastDelegate
		constexpr auto ApplicationShouldUnloadResourcesDelegate = 0x100; // FScriptMulticastDelegate
		constexpr auto ApplicationReceivedStartupArgumentsDelegate = 0x110; // FScriptMulticastDelegate
		constexpr auto OnTemperatureChangeDelegate = 0x120; // FScriptMulticastDelegate
		constexpr auto OnLowPowerModeDelegate = 0x130; // FScriptMulticastDelegate
	}

	namespace n_UMM_Collect_TierList { // : UWidgetBase
		constexpr auto m_TierStrID = 0x2e0; // int32_t
		constexpr auto m_AllStrID = 0x2e4; // int32_t
		constexpr auto m_OneTierStrID = 0x2e8; // int32_t
		constexpr auto m_TwoTierStrID = 0x2ec; // int32_t
		constexpr auto m_ThreeTierStrID = 0x2f0; // int32_t
		constexpr auto m_FourTierStrID = 0x2f4; // int32_t
		constexpr auto m_Txt_Title = 0x2f8; // UMirTextBlock*
		constexpr auto m_CollectTierList = 0x300; // UMM_Auction_Enchant_ComboList*
	}

	namespace n_UMM_UserEvent_WebBrowser { // : UWidgetBase
		constexpr auto m_Web_Main = 0x2e0; // UMirWebBrowser*
	}

	namespace n_UListViewBase { // : UWidget
		constexpr auto WidgetBarStyle = 0x108; // FScrollBarStyle
		constexpr auto ScrollBarVisibility = 0x5d8; // ESlateVisibility
		constexpr auto ScrollbarThickness = 0x5dc; // FVector2D
		constexpr auto ScrollbarPadding = 0x5e4; // FMargin
		constexpr auto AlwaysShowScrollbar = 0x5f4; // bool
		constexpr auto AlwaysShowScrollbarTrack = 0x5f5; // bool
		constexpr auto EntryWidgetClass = 0x5f8; // UUserWidget*
		constexpr auto WheelScrollMultiplier = 0x600; // float
		constexpr auto bEnableScrollAnimation = 0x604; // bool
		constexpr auto bEnableFixedLineOffset = 0x605; // bool
		constexpr auto FixedLineScrollOffset = 0x608; // float
		constexpr auto BP_OnEntryGenerated = 0x610; // FScriptMulticastDelegate
		constexpr auto BP_OnEntryReleased = 0x620; // FScriptMulticastDelegate
		constexpr auto EntryWidgetPool = 0x630; // FUserWidgetPool
	}

	namespace n_USourceEffectPannerPreset { // : USoundEffectSourcePreset
		constexpr auto Settings = 0x70; // FSourceEffectPannerSettings
	}

	namespace n_UMM_Popup_Auction_ItemInfoSlot { // : UWidgetBase
		constexpr auto m_pScrollInfo = 0x2e0; // UMirScrollBox*
		constexpr auto m_pSlotInven = 0x2e8; // UMM_Slot_Inventory*
		constexpr auto m_pTxtItemName = 0x2f0; // UMirTextBlock*
		constexpr auto m_pTxtItemTranscend = 0x2f8; // UMirTextBlock*
		constexpr auto m_pTxtItemClass = 0x300; // UMirTextBlock*
		constexpr auto m_pGridDesc = 0x308; // UGridPanel*
		constexpr auto m_pGridCombat = 0x310; // UGridPanel*
		constexpr auto m_pGridAbility = 0x318; // UGridPanel*
		constexpr auto m_pGridAddOption = 0x320; // UGridPanel*
		constexpr auto m_pCombatPoint = 0x328; // UMM_PopUp_ItemInfo_Ability*
		constexpr auto m_arrAbility = 0x330; // TArray<UMM_PopUp_ItemInfo_Ability*>
		constexpr auto m_arrOption = 0x340; // TArray<UMM_PopUp_ItemInfo_Ability*>
		constexpr auto m_pTxtDesc = 0x350; // UMirTextBlock*
		constexpr auto m_pBtnItemCompare = 0x358; // UMM_Common_Btn*
		constexpr auto m_pSpecialAbility = 0x360; // UMM_SpecialAbility*
	}

	namespace n_UMM_NpcFunctionComponent { // : UActorComponent
		constexpr auto m_pNpc = 0xd0; // AMM_NPCBase*
	}

	namespace n_UMM_Popup_RevivalWidget { // : UWidgetBase
		constexpr auto PopupRevival_GuildWar = 0x2e0; // UMM_Popup_Revival*
	}

	namespace n_UAutomationTestSettings { // : UObject
		constexpr auto EngineTestModules = 0x28; // TArray<FString>
		constexpr auto EditorTestModules = 0x38; // TArray<FString>
		constexpr auto AutomationTestmap = 0x48; // FSoftObjectPath
		constexpr auto EditorPerformanceTestMaps = 0x60; // TArray<FEditorMapPerformanceTestDefinition>
		constexpr auto AssetsToOpen = 0x70; // TArray<FSoftObjectPath>
		constexpr auto BuildPromotionTest = 0x80; // FBuildPromotionTestSettings
		constexpr auto MaterialEditorPromotionTest = 0x270; // FMaterialEditorPromotionSettings
		constexpr auto ParticleEditorPromotionTest = 0x2a0; // FParticleEditorPromotionSettings
		constexpr auto BlueprintEditorPromotionTest = 0x2b0; // FBlueprintEditorPromotionSettings
		constexpr auto TestLevelFolders = 0x2e0; // TArray<FString>
		constexpr auto ExternalTools = 0x2f0; // TArray<FExternalToolDefinition>
		constexpr auto ImportExportTestDefinitions = 0x300; // TArray<FEditorImportExportTestDefinition>
		constexpr auto LaunchOnSettings = 0x310; // TArray<FLaunchOnTestSettings>
		constexpr auto DefaultScreenshotResolution = 0x320; // FIntPoint
	}

	namespace n_UMM_Map_Worldmap { // : UWidgetBase
		constexpr auto m_arAreaBtn = 0x2e8; // TArray<UMM_Map_AreaBtn*>
		constexpr auto m_CanIcon = 0x2f8; // UCanvasPanel*
		constexpr auto m_ImgWorldMap = 0x300; // UImage*
	}

	namespace n_UMM_BattlePass_Reward_Slot { // : UWidgetBase
		constexpr auto m_Img_Closed = 0x2e0; // UMirImage*
		constexpr auto m_Img_Opened = 0x2e8; // UMirImage*
		constexpr auto m_Img_Open_Cur = 0x2f0; // UMirImage*
		constexpr auto m_Img_Line = 0x2f8; // UMirImage*
		constexpr auto m_ProgressBar = 0x300; // UMirProgressBar*
		constexpr auto m_Txt_Num = 0x308; // UMirTextBlock*
		constexpr auto m_Reward_ItemSlot = 0x310; // UMM_BattlePass_Item_Slot* [0x3]
	}

	namespace n_UAutoCameraData { // : UDataAsset
		constexpr auto Force_AutoType = 0x30; // EAutoCameraType
		constexpr auto Common_InterpSpeedReachTime = 0x34; // float
		constexpr auto Common_InterpRotationSpeed = 0x38; // float
		constexpr auto CollisionPullSpeed = 0x3c; // float
		constexpr auto CollisionReturnSpeed = 0x40; // float
		constexpr auto AutoCamera_InterpSpeed = 0x44; // float
		constexpr auto AutoCamera_DefaultHeight = 0x48; // float
		constexpr auto AutoCamera_DefaultDistance = 0x4c; // float
		constexpr auto AutoCamera_MinDistance = 0x50; // float
		constexpr auto AutoCamera_MaxDistance = 0x54; // float
		constexpr auto AutoCamera_DefaultPitch = 0x58; // float
		constexpr auto AutoCamera_MinPitchAngle = 0x5c; // float
		constexpr auto AutoCamera_MaxPitchAngle = 0x60; // float
		constexpr auto AutoCamera_CameraFOV = 0x64; // float
		constexpr auto AutoCamera_RotationSensitivity = 0x68; // float
		constexpr auto AutoCamera_ZoomSensitivity = 0x6c; // float
		constexpr auto NonBattleKeyInput_Delay = 0x70; // float
		constexpr auto NonBattleKeyInput_InterpSpeed = 0x74; // float
		constexpr auto NonBattleKeyInput_Pitch = 0x78; // float
		constexpr auto NonBattleKeyInput_Height = 0x7c; // float
		constexpr auto NonBattleKeyInput_Distance = 0x80; // float
		constexpr auto AutoMoving_Delay = 0x84; // float
		constexpr auto AutoMoving_InterpSpeed = 0x88; // float
		constexpr auto AutoMoving_Pitch = 0x8c; // float
		constexpr auto AutoMoving_Distance = 0x90; // float
		constexpr auto AutoMoving_Height = 0x94; // float
		constexpr auto RideAutoMovingFirst_Delay = 0x98; // float
		constexpr auto RideAutoMovingSecond_Delay = 0x9c; // float
		constexpr auto RideAutoMovingFirst_Distance = 0xa0; // float
		constexpr auto RideAutoMovingSecond_Distance = 0xa4; // float
		constexpr auto RideAutoMoving_InterpSpeed = 0xa8; // float
		constexpr auto RideAutoMoving_Pitch = 0xac; // float
		constexpr auto RideAutoMoving_SideAngle = 0xb0; // float
		constexpr auto RideAutoMoving_SideDistance = 0xb4; // float
		constexpr auto RideAutoMoving_Height = 0xb8; // float
		constexpr auto ManualBattle_Delay = 0xbc; // float
		constexpr auto ManualBattle_InterpSpeed = 0xc0; // float
		constexpr auto ManualBattle_Pitch = 0xc4; // float
		constexpr auto ManualBattle_Height = 0xc8; // float
		constexpr auto AutoBattle_Delay = 0xcc; // float
		constexpr auto AutoBattle_InterpSpeed = 0xd0; // float
		constexpr auto AutoBattle_Pitch = 0xd4; // float
		constexpr auto AutoBattle_Distance = 0xd8; // float
		constexpr auto AutoBattle_SideAngle = 0xdc; // float
		constexpr auto AutoBattle_SlowSpeedDegree = 0xe0; // float
		constexpr auto AutoBattle_Height = 0xe4; // float
		constexpr auto AutoBattle_HitDistance = 0xe8; // float
		constexpr auto QuarterView_ResetTime = 0xec; // float
		constexpr auto QuarterView_InterpSpeed = 0xf0; // float
		constexpr auto QuarterView_PitchInterpSpeed = 0xf4; // float
		constexpr auto QuarterView_DefaultDistance = 0xf8; // float
		constexpr auto QuarterView_MinDistance = 0xfc; // float
		constexpr auto QuarterView_MaxDistance = 0x100; // float
		constexpr auto QuarterView_DefaultHeight = 0x104; // float
		constexpr auto QuarterView_MinPitch = 0x108; // float
		constexpr auto QuarterView_MaxPitch = 0x10c; // float
		constexpr auto QuarterView_DefaultPitch = 0x110; // float
		constexpr auto QuarterView_RotationSensitivity = 0x114; // float
		constexpr auto QuarterView_ZoomSensitivity = 0x118; // float
		constexpr auto QuarterView_CameraFOV = 0x11c; // float
		constexpr auto ManualMode_InterpSpeed = 0x120; // float
		constexpr auto ManualMode_DefaultDistance = 0x124; // float
		constexpr auto ManualMode_MinDistance = 0x128; // float
		constexpr auto ManualMode_MaxDistance = 0x12c; // float
		constexpr auto ManualMode_DefaultHeight = 0x130; // float
		constexpr auto ManualMode_DefaultPitch = 0x134; // float
		constexpr auto ManualMode_MinPitchAngle = 0x138; // float
		constexpr auto ManualMode_MaxPitchAngle = 0x13c; // float
		constexpr auto ManualMode_RotationSensitivity = 0x140; // float
		constexpr auto ManualMode_ZoomSensitivity = 0x144; // float
		constexpr auto ManualMode_CameraFOV = 0x148; // float
	}

	namespace n_UMaterialExpressionArccosineFast { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UMM_UIShopGoodsSlot { // : UWidgetBase
		constexpr auto m_Panel_Root = 0x2f8; // UMirCanvasPanel*
		constexpr auto m_Img_Bg = 0x300; // UMirImage*
		constexpr auto m_Txt_GoodsName = 0x308; // UMirTextBlock*
		constexpr auto m_ScaleBox_Account = 0x310; // UScaleBox*
		constexpr auto m_Txt_Account = 0x318; // UMirTextBlock*
		constexpr auto m_ScaleBox_PeriodEndTime = 0x320; // UScaleBox*
		constexpr auto m_Txt_PeriodEndTime = 0x328; // UMirTextBlock*
		constexpr auto m_Panel_Detail = 0x330; // UMirCanvasPanel*
		constexpr auto m_Btn_Detail = 0x338; // UMM_Common_Btn_Symbol*
		constexpr auto m_Img_TagIcon = 0x340; // UMirImage*
		constexpr auto m_Img_GoodsIcon = 0x348; // UMirImage*
		constexpr auto m_Img_LabelIcon = 0x350; // UMirImage*
		constexpr auto m_Img_MileageIcon = 0x358; // UMirImage*
		constexpr auto m_Txt_Mileage = 0x360; // UMirTextBlock*
		constexpr auto m_Txt_Time = 0x368; // UMirTextBlock*
		constexpr auto m_Panel_TimeOut = 0x370; // UMirCanvasPanel*
		constexpr auto m_Panel_StepListCost = 0x378; // UMirCanvasPanel*
		constexpr auto m_Panel_NormalCost = 0x380; // UMirCanvasPanel*
		constexpr auto m_RTxt_Reward = 0x388; // UMirRichTextBlock*
		constexpr auto m_RTxt_ReleaseTime = 0x390; // UMirRichTextBlock*
		constexpr auto m_Panel_BtnCost = 0x398; // UMirCanvasPanel*
		constexpr auto m_Btn_Popup = 0x3a0; // UMirButton*
		constexpr auto m_Panel_CommonCost = 0x3a8; // UHorizontalBox*
		constexpr auto m_Overlay_DisCount = 0x3b0; // UOverlay*
		constexpr auto m_Txt_DiscountValue = 0x3b8; // UMirTextBlock*
		constexpr auto m_Img_BuyIcon = 0x3c0; // UMirImage*
		constexpr auto m_Txt_BuyValue = 0x3c8; // UMirTextBlock*
		constexpr auto m_Panel_Notice = 0x3d0; // UMirCanvasPanel*
		constexpr auto m_Txt_Notice = 0x3d8; // UMirTextBlock*
		constexpr auto m_Img_OnePlus = 0x3e0; // UMirImage*
		constexpr auto m_Panel_GuildGift = 0x3e8; // UMirCanvasPanel*
		constexpr auto m_Btn_GuildGift = 0x3f0; // UMirButton*
	}

	namespace n_UMovieSceneVectorTrack { // : UMovieScenePropertyTrack
		constexpr auto NumChannelsUsed = 0x88; // int32_t
	}

	namespace n_UMaterialExpressionAntialiasedTextureMask { // : UMaterialExpressionTextureSampleParameter2D
		constexpr auto Threshold = 0xf0; // float
		constexpr auto Channel = 0xf4; // ETextureColorChannel
	}

	namespace n_UMM_PopUp_StatusContents { // : UWidgetBase
		constexpr auto Exception_Visible = 0x2e0; // int32_t
		constexpr auto btn_close = 0x2e8; // UMM_Common_Btn_Symbol*
		constexpr auto Txt_Stat = 0x2f0; // UMirTextBlock*
		constexpr auto Txt_Value = 0x2f8; // UMirTextBlock*
		constexpr auto SlotContentsList = 0x300; // TArray<UMM_Slot_StatusContents*>
		constexpr auto m_StatID = 0x310; // int32_t
		constexpr auto m_StatusList = 0x318; // TMap<int32_t, int32_t>
		constexpr auto STRID_COMBINE_NAME = 0x368; // int32_t
		constexpr auto STRID_GO_FAIL = 0x36c; // int32_t
		constexpr auto STRING_PERCENT = 0x370; // int32_t
		constexpr auto STRING_PhaseCantUseMenu = 0x374; // int32_t
	}

	namespace n_UMovieScene3DTransformTrack { // : UMovieScenePropertyTrack
		constexpr auto SectionToKey = 0x58; // UMovieSceneSection*
		constexpr auto PropertyName = 0x60; // FName
		constexpr auto PropertyPath = 0x68; // FString
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_UGarbageCollectionSettings { // : UDeveloperSettings
		constexpr auto TimeBetweenPurgingPendingKillObjects = 0x38; // float
		constexpr auto FlushStreamingOnGC = 0x3c; // char : 1
		constexpr auto AllowParallelGC = 0x3c; // char : 1
		constexpr auto IncrementalBeginDestroyEnabled = 0x3c; // char : 1
		constexpr auto MultithreadedDestructionEnabled = 0x3c; // char : 1
		constexpr auto CreateGCClusters = 0x3c; // char : 1
		constexpr auto ActorClusteringEnabled = 0x3c; // char : 1
		constexpr auto BlueprintClusteringEnabled = 0x3c; // char : 1
		constexpr auto UseDisregardForGCOnDedicatedServers = 0x3c; // char : 1
		constexpr auto MinGCClusterSize = 0x40; // int32_t
		constexpr auto NumRetriesBeforeForcingGC = 0x44; // int32_t
		constexpr auto MaxObjectsNotConsideredByGC = 0x48; // int32_t
		constexpr auto SizeOfPermanentObjectPool = 0x4c; // int32_t
		constexpr auto MaxObjectsInGame = 0x50; // int32_t
		constexpr auto MaxObjectsInEditor = 0x54; // int32_t
	}

	namespace n_UMM_Friend_Bottom { // : UWidgetBase
		constexpr auto m_Txt_TabName = 0x2f0; // UMirTextBlock*
		constexpr auto m_Txt_Count = 0x2f8; // UMirTextBlock*
		constexpr auto m_Txt_Message = 0x300; // UMirTextBlock*
		constexpr auto m_C_Btn_All_Accept = 0x308; // UMM_Common_Btn*
		constexpr auto m_C_Btn_All_Refuse = 0x310; // UMM_Common_Btn*
		constexpr auto m_C_Btn_All_Request = 0x318; // UMM_Common_Btn*
		constexpr auto m_C_Btn_All_Cancel = 0x320; // UMM_Common_Btn*
		constexpr auto m_C_Btn_Refresh = 0x328; // UMM_Common_Btn*
	}

	namespace n_UMM_ProgressBar_HP { // : UMM_ProgressBar_Tail
		constexpr auto ProgressBar_Shield = 0x378; // UProgressBar*
		constexpr auto EndEdgeEffect = 0x380; // UCanvasPanel*
		constexpr auto DecoImage = 0x388; // UImage*
		constexpr auto AnimHitEffect = 0x390; // UWidgetAnimation*
		constexpr auto AnimIdleEffect = 0x398; // UWidgetAnimation*
	}

	namespace n_UMM_ServerRelocationRegion_Global { // : UWidgetBase
		constexpr auto m_Img_Icon = 0x2e0; // UMirImage*
		constexpr auto m_Canvas_Select = 0x2e8; // UCanvasPanel*
		constexpr auto m_Txt_Region = 0x2f0; // UMirTextBlock*
		constexpr auto m_Txt_UTC = 0x2f8; // UMirTextBlock*
		constexpr auto m_Btn_Select = 0x300; // UMirButton*
	}

	namespace n_UParticleModuleCameraBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x29; // char : 1
		constexpr auto LODDuplicate = 0x29; // char : 1
		constexpr auto bSupportsRandomSeed = 0x29; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x29; // char : 1
		constexpr auto LODValidity = 0x2a; // char
	}

	namespace n_UMaterialExpressionParticleColor { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UMM_BattlePass_Mission_Slot { // : UWidgetBase
		constexpr auto OVERLAY_OPACITY = 0x2e0; // float
		constexpr auto m_Img_IcnMission = 0x2e8; // UMirImage*
		constexpr auto m_Txt_Title = 0x2f0; // UMirTextBlock*
		constexpr auto m_Txt_Desc = 0x2f8; // UMirTextBlock*
		constexpr auto m_Txt_Prog = 0x300; // UMirTextBlock*
		constexpr auto m_Img_IcnPoint = 0x308; // UMirImage*
		constexpr auto m_Txt_Point = 0x310; // UMirTextBlock*
		constexpr auto m_C_Btn_Immedi = 0x318; // UMM_Common_Btn*
		constexpr auto m_C_Btn_GoToContents = 0x320; // UMM_Common_Btn*
		constexpr auto m_C_Btn_Receive = 0x328; // UMM_Common_Btn*
		constexpr auto m_Img_CompleteEffect = 0x330; // UMirImage*
		constexpr auto m_Img_Complete = 0x338; // UMirImage*
		constexpr auto m_Btn_Main = 0x340; // UMirButton*
		constexpr auto m_Img_Indicator = 0x348; // UMirImage*
		constexpr auto m_Overlay = 0x350; // UOverlay*
	}

	namespace n_UParticleModuleRotationRateMultiplyLife { // : UParticleModuleRotationRateBase
		constexpr auto LifeMultiplier = 0x30; // FRawDistributionFloat
	}

	namespace n_USoundSourceBus { // : USoundWave
		constexpr auto SourceBusChannels = 0x378; // ESourceBusChannels
		constexpr auto SourceBusDuration = 0x37c; // float
		constexpr auto bAutoDeactivateWhenSilent = 0x380; // char : 1
	}

	namespace n_UMM_State_Item { // : UWidgetBase
		constexpr auto m_pParentWidget = 0x260; // UWidgetBase*
		constexpr auto m_arChildWidget = 0x268; // TArray<TWeakObjectPtr<UWidgetBase>>
		constexpr auto m_arMirTextBlock = 0x280; // TArray<TWeakObjectPtr<UMirTextBlock>>
		constexpr auto m_arMirRichTextBlock = 0x290; // TArray<TWeakObjectPtr<UMirRichTextBlock>>
		constexpr auto m_arMirEditableText = 0x2a0; // TArray<TWeakObjectPtr<UMirEditableText>>
		constexpr auto m_arMirImage = 0x2b0; // TArray<TWeakObjectPtr<UMirImage>>
	}

	namespace n_UAsyncActionLoadPrimaryAssetClass { // : UAsyncActionLoadPrimaryAssetBase
		constexpr auto Completed = 0x78; // FScriptMulticastDelegate
	}

	namespace n_UParticleModuleLocationBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x29; // char : 1
		constexpr auto LODDuplicate = 0x29; // char : 1
		constexpr auto bSupportsRandomSeed = 0x29; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x29; // char : 1
		constexpr auto LODValidity = 0x2a; // char
	}

	namespace n_AMM_AIControllerBase { // : AAIController
		constexpr auto bStopAILogicOnUnposses = 0x2c8; // char : 1
		constexpr auto bLOSflag = 0x2c8; // char : 1
		constexpr auto bSkipExtraLOSChecks = 0x2c8; // char : 1
		constexpr auto bAllowStrafe = 0x2c8; // char : 1
		constexpr auto bWantsPlayerState = 0x2c8; // char : 1
		constexpr auto bSetControlRotationFromPawnOrientation = 0x2c8; // char : 1
		constexpr auto PathFollowingComponent = 0x2d0; // UPathFollowingComponent*
		constexpr auto BrainComponent = 0x2d8; // UBrainComponent*
		constexpr auto PerceptionComponent = 0x2e0; // UAIPerceptionComponent*
		constexpr auto ActionsComp = 0x2e8; // UPawnActionsComponent*
		constexpr auto Blackboard = 0x2f0; // UBlackboardComponent*
		constexpr auto CachedGameplayTasksComponent = 0x2f8; // UGameplayTasksComponent*
		constexpr auto DefaultNavigationFilterClass = 0x300; // UNavigationQueryFilter*
		constexpr auto ReceiveMoveCompleted = 0x308; // FScriptMulticastDelegate
	}

	namespace n_UMM_Guild_DevLevelUpResult { // : UWidgetBase
		constexpr auto mOpenAni = 0x2e0; // UWidgetAnimation*
		constexpr auto mCloseAni = 0x2e8; // UWidgetAnimation*
		constexpr auto mAniFail = 0x2f0; // UWidgetAnimation*
		constexpr auto mBtnClose = 0x2f8; // UMirButton*
		constexpr auto mTxtDesc = 0x300; // UMirTextBlock*
		constexpr auto mPanelSuccess = 0x308; // UMirCanvasPanel*
		constexpr auto mTxtLevelUpSuccessTitle = 0x310; // UMirTextBlock*
		constexpr auto mTxtSuccessTitle = 0x318; // UMirTextBlock*
		constexpr auto mTxtBeforeLevel = 0x320; // UMirTextBlock*
		constexpr auto mTxtAfterLevel = 0x328; // UMirTextBlock*
		constexpr auto mImgIcon = 0x330; // UMirImage*
		constexpr auto mPanelFail = 0x338; // UMirCanvasPanel*
		constexpr auto mTxtLevelUpFailTitle = 0x340; // UMirTextBlock*
		constexpr auto mTxtFailTitle = 0x348; // UMirTextBlock*
		constexpr auto mTxtBeforeLevelFail = 0x350; // UMirTextBlock*
		constexpr auto mTxtAfterLevelFail = 0x358; // UMirTextBlock*
		constexpr auto mImgIconFail = 0x360; // UMirImage*
	}

	namespace n_UMM_UIShopGachaBonus { // : UWidgetBase
		constexpr auto m_Btn_GachaBonus = 0x2f0; // UMirButton*
		constexpr auto m_Txt_Title = 0x2f8; // UMirTextBlock*
		constexpr auto m_Img_Indicator = 0x300; // UMirImage*
		constexpr auto m_Txt_GachaName = 0x308; // UMirTextBlock*
		constexpr auto m_Prog_Gague = 0x310; // UMirProgressBar*
		constexpr auto m_Prog_GagueEffect_2 = 0x318; // UMirProgressBar*
		constexpr auto m_Prog_GagueEffect_3 = 0x320; // UMirProgressBar*
		constexpr auto m_Panel_MaxEffect = 0x328; // UMirCanvasPanel*
		constexpr auto m_Img_GlowOn = 0x330; // UMirImage*
		constexpr auto m_Txt_BonusCount = 0x338; // UMirTextBlock*
		constexpr auto m_Panel_EventBonus = 0x340; // UMirCanvasPanel*
		constexpr auto m_Txt_EventTime = 0x348; // UMirTextBlock*
		constexpr auto m_Txt_BonusPointTitle = 0x350; // UMirTextBlock*
		constexpr auto m_Txt_EventBonusPoint = 0x358; // UMirTextBlock*
		constexpr auto m_Txt_BonusPoint = 0x360; // UMirTextBlock*
	}

	namespace n_UMM_FilterBtn { // : UWidgetBase
		constexpr auto m_Check_Main = 0x2e8; // UMirCheckBox*
		constexpr auto m_Txt_Name = 0x2f0; // UMirTextBlock*
		constexpr auto m_Btn_Main = 0x2f8; // UMirButton*
	}

	namespace n_UMM_StrongPoint_Result { // : UWidgetBase
		constexpr auto Ani_ResultStart = 0x2e8; // UWidgetAnimation*
		constexpr auto Can_MVPPanel = 0x2f0; // UMirCanvasPanel*
		constexpr auto Txt_MVPUserName = 0x2f8; // UMirTextBlock*
		constexpr auto Txt_ResultMessage = 0x300; // UMirTextBlock*
		constexpr auto Horizontal_Reward = 0x308; // UHorizontalBox*
		constexpr auto Btn_Ok = 0x310; // UMM_Common_Btn*
	}

	namespace n_UMM_Guild_Dev_BenefitSlot { // : UWidgetBase
		constexpr auto mTxtLevel = 0x2e0; // UMirTextBlock*
		constexpr auto mTxtFirstAttributeValue = 0x2e8; // UMirTextBlock*
		constexpr auto mTxtSecondAttributeValue = 0x2f0; // UMirTextBlock*
		constexpr auto mImgSelected = 0x2f8; // UMirImage*
	}

	namespace n_UMM_UIActionManager { // : UObject
		constexpr auto m_ActionMap = 0x28; // TMap<EMirUIActionType, UMM_UIAction*>
	}

	namespace n_AMM_AutoBehaviorAIController { // : AMM_AIControllerBase
		constexpr auto EnableSkills = 0x430; // TArray<int32_t>
		constexpr auto HasMoveInput = 0x440; // bool
		constexpr auto StartMoveLocation = 0x444; // FVector
		constexpr auto ReservedSkillID = 0x450; // int32_t
	}

	namespace n_USystemTimeTimecodeProvider { // : UTimecodeProvider
		constexpr auto FrameRate = 0x30; // FFrameRate
	}

	namespace n_UMaterialExpressionSkyAtmosphereAerialPerspective { // : UMaterialExpression
		constexpr auto WorldPosition = 0x40; // FExpressionInput
	}

	namespace n_UCommandlet { // : UObject
		constexpr auto HelpDescription = 0x28; // FString
		constexpr auto HelpUsage = 0x38; // FString
		constexpr auto HelpWebLink = 0x48; // FString
		constexpr auto HelpParamNames = 0x58; // TArray<FString>
		constexpr auto HelpParamDescriptions = 0x68; // TArray<FString>
		constexpr auto IsServer = 0x78; // char : 1
		constexpr auto IsClient = 0x78; // char : 1
		constexpr auto IsEditor = 0x78; // char : 1
		constexpr auto LogToConsole = 0x78; // char : 1
		constexpr auto ShowErrorCount = 0x78; // char : 1
		constexpr auto ShowProgress = 0x78; // char : 1
	}

	namespace n_UMM_Popup_Occupation_Rank_Board { // : UWidgetBase
		constexpr auto m_AniStart = 0x300; // UWidgetAnimation*
		constexpr auto m_AniEnd = 0x308; // UWidgetAnimation*
		constexpr auto m_Btn_Close = 0x310; // UMM_Common_Btn_Symbol*
		constexpr auto m_rankingBoard_Defense = 0x318; // UMM_Slot_Occupation_Ranking*
		constexpr auto m_rankingBoard_Offense = 0x320; // UMM_Slot_Occupation_Ranking*
		constexpr auto m_img_Defense_Symbol_BGFrame = 0x328; // UMirImage*
		constexpr auto m_img_Defense_Symbol = 0x330; // UMirImage*
		constexpr auto m_txt_Defense = 0x338; // UMirTextBlock*
		constexpr auto m_txt_Defense_Guild_Name = 0x340; // UMirTextBlock*
		constexpr auto m_img_Offense_Symbol_BGFrame = 0x348; // UMirImage*
		constexpr auto m_img_Offense_Symbol = 0x350; // UMirImage*
		constexpr auto m_txt_Offense = 0x358; // UMirTextBlock*
		constexpr auto m_txt_Offense_Guild_Name = 0x360; // UMirTextBlock*
		constexpr auto m_txt_Remain_Time = 0x368; // UMirTextBlock*
		constexpr auto m_txt_Remain_Time_Value = 0x370; // UMirTextBlock*
		constexpr auto m_Rank_List_Empty_Notice = 0x378; // UMM_Common_Board_Notice*
		constexpr auto m_txt_Rank_Update = 0x380; // UMirTextBlock*
		constexpr auto m_btn_Rank_Update = 0x388; // UMM_Common_Btn_Symbol*
	}

	namespace n_UBTTask_PlayAnimation { // : UBTTaskNode
		constexpr auto AnimationToPlay = 0x70; // UAnimationAsset*
		constexpr auto bLooping = 0x78; // char : 1
		constexpr auto bNonBlocking = 0x78; // char : 1
		constexpr auto MyOwnerComp = 0x80; // UBehaviorTreeComponent*
		constexpr auto CachedSkelMesh = 0x88; // USkeletalMeshComponent*
	}

	namespace n_UMM_Inventory_MysticalPiece { // : UMM_NewInventory_Base
		constexpr auto m_InvenTab = 0x2e8; // UMM_NewInventoryTab*
		constexpr auto m_Inven = 0x2f0; // UMM_NewInventory*
		constexpr auto m_SortListBtn = 0x2f8; // UMM_SortListBtn*
		constexpr auto m_Btn_Compose = 0x300; // UMM_Common_Btn*
		constexpr auto m_Btn_Equip = 0x308; // UMM_Common_Btn*
	}

	namespace n_UFirebaseFutureFetchProvideResult { // : UBlueprintAsyncActionBase
		constexpr auto OnComplete = 0x30; // FScriptMulticastDelegate
	}

	namespace n_UTexture2DArray { // : UTexture
		constexpr auto LightingGuid = 0x48; // FGuid
		constexpr auto LODBias = 0x58; // int32_t
		constexpr auto CompressionSettings = 0x5c; // TextureCompressionSettings
		constexpr auto Filter = 0x5d; // TextureFilter
		constexpr auto MipLoadOptions = 0x5e; // ETextureMipLoadOptions
		constexpr auto LODGroup = 0x5f; // TextureGroup
		constexpr auto SRGB = 0x60; // char : 1
		constexpr auto bNoTiling = 0x60; // char : 1
		constexpr auto VirtualTextureStreaming = 0x60; // char : 1
		constexpr auto CompressionYCoCg = 0x60; // char : 1
		constexpr auto bAsyncResourceReleaseHasBeenStarted = 0x60; // char : 1
		constexpr auto AssetUserData = 0x68; // TArray<UAssetUserData*>
	}

	namespace n_UMM_CommonVerticalTabTreeSubBtn { // : UWidgetBase
		constexpr auto m_pImgSelect = 0x2f0; // UMirImage*
		constexpr auto m_pTxtHyphen = 0x2f8; // UMirTextBlock*
		constexpr auto m_pTxtName = 0x300; // UMirTextBlock*
		constexpr auto m_pBtnClick = 0x308; // UMirButton*
		constexpr auto m_Grid_Effect_1 = 0x310; // UPanelWidget*
		constexpr auto m_Grid_Effect_2 = 0x318; // UPanelWidget*
	}

	namespace n_UMM_HudMapInfo { // : UWidgetBase
		constexpr auto m_iStringID_Safe = 0x2e0; // int32_t
		constexpr auto m_iStringID_PK = 0x2e4; // int32_t
		constexpr auto m_TxtMapName = 0x2e8; // UTextBlock*
		constexpr auto m_TxtChannel = 0x2f0; // UTextBlock*
		constexpr auto m_BtnMapDetail = 0x2f8; // UButton*
		constexpr auto m_Btn_Channel = 0x300; // UMirButton*
		constexpr auto m_Btn_PKInfo = 0x308; // UMM_Common_Btn_Symbol*
		constexpr auto m_PKInfoPanel = 0x310; // UMirCanvasPanel*
		constexpr auto m_Img_SafetyArea = 0x318; // UMirImage*
		constexpr auto m_Txt_SafetyAreaInfo = 0x320; // UMirRichTextBlock*
		constexpr auto m_Img_NormalArea = 0x328; // UMirImage*
		constexpr auto m_Txt_NormalAreaInfo = 0x330; // UMirRichTextBlock*
		constexpr auto m_Img_SpecialArea = 0x338; // UMirImage*
		constexpr auto m_Txt_SpecialAreaInfo = 0x340; // UMirRichTextBlock*
		constexpr auto m_Img_DangerArea = 0x348; // UMirImage*
		constexpr auto m_Txt_DangerAreaInfo = 0x350; // UMirRichTextBlock*
		constexpr auto m_Img_Fight = 0x358; // UMirImage*
		constexpr auto m_Txt_FightInfo = 0x360; // UMirRichTextBlock*
		constexpr auto m_Img_Safe = 0x368; // UMirImage*
		constexpr auto m_Img_PVP = 0x370; // UMirImage*
		constexpr auto m_Img_War = 0x378; // UMirImage*
		constexpr auto m_Txt_WarInfo = 0x380; // UMirRichTextBlock*
		constexpr auto m_Img_Map_Basic_1 = 0x388; // UMirImage*
		constexpr auto m_Img_Map_Basic_2 = 0x390; // UMirImage*
	}

	namespace n_ULogoutCallbackProxy { // : UBlueprintAsyncActionBase
		constexpr auto OnSuccess = 0x30; // FScriptMulticastDelegate
		constexpr auto OnFailure = 0x40; // FScriptMulticastDelegate
	}

	namespace n_UMM_ItemSynthesis { // : UWidgetBase
		constexpr auto STRING_ID_GREAT_SUCCESS = 0x2f0; // int32_t
		constexpr auto STRING_ID_SUCCESS = 0x2f4; // int32_t
		constexpr auto arICON_ITEM_GRADE = 0x2f8; // TArray<int32_t>
		constexpr auto AURAEFFECT_COLOR_GRADE_EPIC = 0x308; // FLinearColor
		constexpr auto AURAEFFECT_COLOR_GRADE_LEGNED = 0x318; // FLinearColor
		constexpr auto STRING_ID_POINT_DEACTIVE = 0x328; // int32_t
		constexpr auto STRING_ID_POINT_LACK = 0x32c; // int32_t
		constexpr auto STRING_ID_POINT_ENOUGH = 0x330; // int32_t
		constexpr auto STRING_ID_CENSER_NAME_NONE = 0x334; // int32_t
		constexpr auto STRING_ID_CENSER_NAME_EPIC = 0x338; // int32_t
		constexpr auto STRING_ID_CENSER_NAME_LEGNED = 0x33c; // int32_t
		constexpr auto m_arItemSynthesisList = 0x340; // UMM_ItemSynthesis_List* [0xa]
		constexpr auto m_C_Btn_AutoReg = 0x390; // UMM_Common_Btn*
		constexpr auto m_C_Btn_Make = 0x398; // UMM_Common_Btn*
		constexpr auto m_Txt_Desc = 0x3a0; // UMirTextBlock*
		constexpr auto m_Can_Censer = 0x3a8; // UMirCanvasPanel*
		constexpr auto m_Can_AuraEffect = 0x3b0; // UMirCanvasPanel*
		constexpr auto m_Can_ItemGrade_Effect = 0x3b8; // UMirCanvasPanel*
		constexpr auto m_Img_IcnItemGrade = 0x3c0; // UMirImage*
		constexpr auto m_Img_AuraEffect_Left = 0x3c8; // UMirImage*
		constexpr auto m_Img_AuraEffect_Right = 0x3d0; // UMirImage*
		constexpr auto m_Btn_PointReward = 0x3d8; // UMirButton*
		constexpr auto m_RTxt_Point = 0x3e0; // UMirRichTextBlock*
		constexpr auto m_Txt_Desc_2 = 0x3e8; // UMirTextBlock*
		constexpr auto m_RTxt_CenserGrade = 0x3f0; // UMirRichTextBlock*
		constexpr auto m_Img_CenserHead = 0x3f8; // UMirImage*
		constexpr auto m_Img_CenserBody = 0x400; // UMirImage*
		constexpr auto m_Img_Indicator = 0x408; // UMirImage*
		constexpr auto m_Img_ItemGrade_Epic = 0x410; // UImage*
		constexpr auto m_Img_ItemGrade_Legned = 0x418; // UImage*
		constexpr auto m_ScrollBox = 0x420; // UMirScrollBox*
		constexpr auto m_AniPointUP = 0x428; // UWidgetAnimation*
	}

	namespace n_ATownAlarmTrigger { // : AActor
		constexpr auto IsBox = 0x218; // bool
		constexpr auto m_BoxExtent = 0x21c; // FVector
		constexpr auto m_BoxColor = 0x228; // FColor
		constexpr auto m_CircleRange = 0x22c; // float
		constexpr auto m_CircleColor = 0x230; // FColor
		constexpr auto m_AreaID = 0x234; // int32_t
		constexpr auto m_pSphereCollision = 0x238; // USphereComponent*
		constexpr auto m_pBoxCollision = 0x240; // UBoxComponent*
	}

	namespace n_UFixedFrameRateCustomTimeStep { // : UEngineCustomTimeStep
		constexpr auto FixedFrameRate = 0x28; // FFrameRate
	}

	namespace n_AGeometryCollectionRenderLevelSetActor { // : AActor
		constexpr auto TargetVolumeTexture = 0x218; // UVolumeTexture*
		constexpr auto RayMarchMaterial = 0x220; // UMaterial*
		constexpr auto SurfaceTolerance = 0x228; // float
		constexpr auto Isovalue = 0x22c; // float
		constexpr auto Enabled = 0x230; // bool
		constexpr auto RenderVolumeBoundingBox = 0x231; // bool
	}

	namespace n_UMaterialExpressionNormalize { // : UMaterialExpression
		constexpr auto VectorInput = 0x40; // FExpressionInput
	}

	namespace n_AMM_NpcAIController { // : AMM_AIControllerBase
		constexpr auto m_Npc = 0x3a0; // AMM_NPC*
	}

	namespace n_UProceduralFoliageComponent { // : UActorComponent
		constexpr auto FoliageSpawner = 0xb0; // UProceduralFoliageSpawner*
		constexpr auto TileOverlap = 0xb8; // float
		constexpr auto SpawningVolume = 0xc0; // AVolume*
		constexpr auto ProceduralGuid = 0xc8; // FGuid
	}

	namespace n_UMM_Customizing_Preset { // : UWidgetBase
		constexpr auto m_pVerticalBox = 0x2e0; // UVerticalBox*
		constexpr auto m_pWrapBox = 0x2e8; // UWrapBox*
		constexpr auto m_PresetArray = 0x2f0; // TArray<UMM_Customizing_PresetItem*>
	}

	namespace n_UCrowdManager { // : UCrowdManagerBase
		constexpr auto MyNavData = 0x28; // ANavigationData*
		constexpr auto AvoidanceConfig = 0x30; // TArray<FCrowdAvoidanceConfig>
		constexpr auto SamplingPatterns = 0x40; // TArray<FCrowdAvoidanceSamplingPattern>
		constexpr auto MaxAgents = 0x50; // int32_t
		constexpr auto MaxAgentRadius = 0x54; // float
		constexpr auto MaxAvoidedAgents = 0x58; // int32_t
		constexpr auto MaxAvoidedWalls = 0x5c; // int32_t
		constexpr auto NavmeshCheckInterval = 0x60; // float
		constexpr auto PathOptimizationInterval = 0x64; // float
		constexpr auto SeparationDirClamp = 0x68; // float
		constexpr auto PathOffsetRadiusMultiplier = 0x6c; // float
		constexpr auto bResolveCollisions = 0x70; // char : 1
	}

	namespace n_UPawnAction_Move { // : UPawnAction
		constexpr auto GoalActor = 0x98; // AActor*
		constexpr auto GoalLocation = 0xa0; // FVector
		constexpr auto AcceptableRadius = 0xac; // float
		constexpr auto FilterClass = 0xb0; // UNavigationQueryFilter*
		constexpr auto bAllowStrafe = 0xb8; // char : 1
		constexpr auto bFinishOnOverlap = 0xb8; // char : 1
		constexpr auto bUsePathfinding = 0xb8; // char : 1
		constexpr auto bAllowPartialPath = 0xb8; // char : 1
		constexpr auto bProjectGoalToNavigation = 0xb8; // char : 1
		constexpr auto bUpdatePathToGoal = 0xb8; // char : 1
		constexpr auto bAbortChildActionOnPathChange = 0xb8; // char : 1
	}

	namespace n_ASceneCapturePawn { // : APawn
		constexpr auto MovementComponent = 0x278; // UPawnMovementComponent*
		constexpr auto CollisionComponent = 0x280; // USphereComponent*
		constexpr auto MeshComponent = 0x288; // UStaticMeshComponent*
		constexpr auto CameraComponent = 0x290; // UCameraComponent*
		constexpr auto CameraLocation = 0x298; // FVector
		constexpr auto CameraPrich = 0x2a4; // float
		constexpr auto CameraFov = 0x2a8; // float
		constexpr auto Sensitivity = 0x2ac; // float
	}

	namespace n_UGameNetworkManagerSettings { // : UObject
		constexpr auto MinDynamicBandwidth = 0x28; // int32_t
		constexpr auto MaxDynamicBandwidth = 0x2c; // int32_t
		constexpr auto TotalNetBandwidth = 0x30; // int32_t
		constexpr auto BadPingThreshold = 0x34; // int32_t
		constexpr auto bIsStandbyCheckingEnabled = 0x38; // char : 1
		constexpr auto StandbyRxCheatTime = 0x3c; // float
		constexpr auto StandbyTxCheatTime = 0x40; // float
		constexpr auto PercentMissingForRxStandby = 0x44; // float
		constexpr auto PercentMissingForTxStandby = 0x48; // float
		constexpr auto PercentForBadPing = 0x4c; // float
		constexpr auto JoinInProgressStandbyWaitTime = 0x50; // float
	}

	namespace n_UMaterialExpressionSceneDepth { // : UMaterialExpression
		constexpr auto InputMode = 0x40; // EMaterialSceneAttributeInputMode
		constexpr auto Input = 0x44; // FExpressionInput
		constexpr auto Coordinates = 0x58; // FExpressionInput
		constexpr auto ConstInput = 0x6c; // FVector2D
	}

	namespace n_URadialVector { // : UFieldNodeVector
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto Position = 0xb4; // FVector
	}

	namespace n_UMM_B_Loading { // : UWidgetBase
		constexpr auto m_fProgressSpeed = 0x2e0; // float
		constexpr auto m_AniHide_ImgLoadingPre = 0x2e8; // UWidgetAnimation*
		constexpr auto m_Can_Main = 0x320; // UPanelWidget*
		constexpr auto m_Can_Pre = 0x328; // UPanelWidget*
		constexpr auto m_Img_Loading_Cur = 0x330; // UImage*
		constexpr auto m_Img_Loading_Pre = 0x338; // UImage*
		constexpr auto m_RTxt_ToolTipTitle_Cur = 0x340; // UMirRichTextBlock*
		constexpr auto m_RTxt_ToolTipContent_Cur = 0x348; // UMirRichTextBlock*
		constexpr auto m_RTxt_ToolTipTitle_Pre = 0x350; // UMirRichTextBlock*
		constexpr auto m_RTxt_ToolTipContent_Pre = 0x358; // UMirRichTextBlock*
		constexpr auto m_LoadingInner = 0x360; // UMM_Loading_Inner*
		constexpr auto m_CB_Left = 0x368; // UMM_Common_Btn_Symbol*
		constexpr auto m_CB_Right = 0x370; // UMM_Common_Btn_Symbol*
	}

	namespace n_ULandscapeMaterialInstanceConstant { // : UMaterialInstanceConstant
		constexpr auto bIsLayerThumbnail = 0x1d8; // char : 1
		constexpr auto bDisableTessellation = 0x1d8; // char : 1
		constexpr auto bMobile = 0x1d8; // char : 1
		constexpr auto bEditorToolUsage = 0x1d8; // char : 1
	}

	namespace n_AEndPlayTrigger { // : AActivateTrigger
		constexpr auto m_DelayTime = 0x298; // float
	}

	namespace n_UMM_B_ClassPhase { // : UWidgetBase
		constexpr auto m_pWidgetSwitcher = 0x2f0; // UWidgetSwitcher*
		constexpr auto m_pClassPhaseSkillInfo = 0x2f8; // UMM_ClassPhase_SkillInfoSlot*
		constexpr auto m_pClassPhaseInfo = 0x300; // UMM_ClassPhase_InfoSlot*
		constexpr auto m_pCurWidget = 0x308; // UWidgetBase*
		constexpr auto m_pScrollClassList = 0x310; // UMirScrollBox*
		constexpr auto m_pBtnPhaseInfo = 0x318; // UMirButton*
		constexpr auto m_pBtnPhaseSkillInfo = 0x320; // UMirButton*
		constexpr auto m_pImgSelectPhaseTab = 0x328; // UMirImage*
		constexpr auto m_pImgSelectSkillTab = 0x330; // UMirImage*
		constexpr auto m_pBtnOk = 0x338; // UMM_Common_Btn_Cost*
		constexpr auto m_arrClassSlot = 0x340; // TArray<UMM_ClassPhase_ClassSlot*>
	}

	namespace n_ABoxReflectionCapture { // : AReflectionCapture
		constexpr auto CaptureComponent = 0x218; // UReflectionCaptureComponent*
	}

	namespace n_UAccountLocalSave { // : USaveGame
		constexpr auto m_MacAddress = 0x28; // FString
		constexpr auto AccountLoginInfo = 0x38; // FAccountLoginInfo
		constexpr auto m_strLastLoginAccountID = 0x88; // FString
		constexpr auto m_arJewelFilter = 0x98; // TMap<int32_t, int32_t>
		constexpr auto m_mapIntSaveData = 0xe8; // TMap<FName, int32_t>
		constexpr auto m_CustomizingAutoSaveData = 0x138; // TMap<int32_t, bool>
		constexpr auto m_CustomizingAutoSaveFlag = 0x188; // bool
		constexpr auto m_nMiniGameBestScore = 0x18c; // int32_t
		constexpr auto m_mapKeySaveData = 0x190; // TMap<FName, FName>
		constexpr auto m_bIsFinishVoiceDownload = 0x1e0; // bool
		constexpr auto m_StoreURL = 0x1e8; // FString
		constexpr auto m_FrontBannerInitDay = 0x1f8; // int32_t
		constexpr auto m_bIsFrontBannerSkip = 0x1fc; // bool
		constexpr auto m_eLanguage = 0x1fd; // ELanguage
		constexpr auto m_bInitLanguage = 0x1fe; // bool
		constexpr auto m_eRegionCode = 0x1ff; // ERegionCode
		constexpr auto m_strRegionCode = 0x200; // FString
		constexpr auto m_bInitRegionCode = 0x210; // bool
		constexpr auto m_strRecommendRegionCode = 0x218; // FString
	}

	namespace n_AMiniGame_MonsterActor { // : AActor
		constexpr auto m_fCurFlipbookLength = 0x218; // float
		constexpr auto m_fCurPlayerPos = 0x21c; // float
		constexpr auto m_MiniGameData = 0x220; // UMiniGameData*
		constexpr auto m_MiniGameActor = 0x228; // AMiniGame_ManagerActor*
	}

	namespace n_UMM_GameOption_InGame { // : UWidgetBase
		constexpr auto InGameTabSet = 0x2f0; // UMM_CommonVerticalTabSet*
		constexpr auto WidgetSwitcher = 0x2f8; // UWidgetSwitcher*
		constexpr auto InGame_Battle = 0x300; // UMM_GameOption_InGame_Battle*
		constexpr auto InGame_QuickSlot = 0x308; // UMM_GameOption_InGame_QuickSlot*
		constexpr auto InGame_HUD = 0x310; // UMM_GameOption_InGame_HUD*
		constexpr auto InGame_Convenience = 0x318; // UMM_GameOption_InGame_Convenience*
		constexpr auto InGame_Community = 0x320; // UMM_GameOption_InGame_Community*
		constexpr auto InGame_Target = 0x328; // UMM_GameOption_InGame_Target*
		constexpr auto InGame_Alarm = 0x330; // UMM_GameOption_InGame_Alarm*
	}

	namespace n_AMM_ClientTestGameMode { // : AMM_GameModeBase
		constexpr auto m_pBackgroundParamCollection = 0x330; // UMaterialParameterCollection*
		constexpr auto m_pFriendMonster = 0x338; // AMM_Monster*
		constexpr auto m_pSelectTarget = 0x340; // AMM_CharacterPawnBase*
		constexpr auto m_pLockOnTarget = 0x348; // AMM_CharacterPawnBase*
		constexpr auto EndLevelTravel = 0x350; // bool
		constexpr auto m_pUIBackGroundActor = 0x400; // AUIBackGroundActor*
		constexpr auto SituationDirectiveActor = 0x408; // AMM_SituationDirectiveEffect*
		constexpr auto MapQuestArrivalDisplayActor = 0x410; // TMap<int32_t, TWeakObjectPtr<AQuestArrivalDisplayActor>>
		constexpr auto m_pHQPlayer = 0x460; // AMM_HQPlayerReferenceActor*
		constexpr auto m_pPortraitCaptureActor = 0x468; // AMM_PortraitCaptureActor*
		constexpr auto m_pPlayerPortraitRenderTarget = 0x470; // UCanvasRenderTarget2D*
		constexpr auto m_pContentsLightManager = 0x478; // AContentsLightManager*
		constexpr auto MyEditorCulture = 0x490; // FString
	}

	namespace n_UEdGraphNode { // : UObject
		constexpr auto DeprecatedPins = 0x38; // TArray<UEdGraphPin_Deprecated*>
		constexpr auto NodePosX = 0x48; // int32_t
		constexpr auto NodePosY = 0x4c; // int32_t
		constexpr auto NodeWidth = 0x50; // int32_t
		constexpr auto NodeHeight = 0x54; // int32_t
		constexpr auto AdvancedPinDisplay = 0x58; // ENodeAdvancedPins
		constexpr auto EnabledState = 0x59; // ENodeEnabledState
		constexpr auto bDisplayAsDisabled = 0x5b; // char : 1
		constexpr auto bUserSetEnabledState = 0x5b; // char : 1
		constexpr auto bIsNodeEnabled = 0x5b; // char : 1
		constexpr auto bHasCompilerMessage = 0x5b; // char : 1
		constexpr auto NodeComment = 0x60; // FString
		constexpr auto ErrorType = 0x70; // int32_t
		constexpr auto ErrorMsg = 0x78; // FString
		constexpr auto NodeGuid = 0x88; // FGuid
	}

	namespace n_UParticleModuleSpawnBase { // : UParticleModule
		constexpr auto bProcessSpawnRate = 0x30; // char : 1
		constexpr auto bProcessBurstList = 0x30; // char : 1
	}

	namespace n_UMovieSceneFolder { // : UObject
		constexpr auto FolderName = 0x28; // FName
		constexpr auto ChildFolders = 0x30; // TArray<UMovieSceneFolder*>
		constexpr auto ChildMasterTracks = 0x40; // TArray<UMovieSceneTrack*>
		constexpr auto ChildObjectBindingStrings = 0x50; // TArray<FString>
	}

	namespace n_UMM_Guild_Dev { // : UWidgetBase
		constexpr auto m_Ani_GuildDevStart = 0x2f0; // UWidgetAnimation*
		constexpr auto m_VerticalTabSet = 0x2f8; // UMM_CommonVerticalTabSet*
		constexpr auto m_ScrollBox = 0x300; // UMirScrollBox*
		constexpr auto m_arGuildDevList = 0x308; // TArray<UMM_Guild_DevList*>
		constexpr auto m_GuildDrawLines = 0x318; // UMM_Guild_Dev_DrawLines*
		constexpr auto m_Txt_TimeTicket = 0x320; // UMirRichTextBlock*
		constexpr auto m_Img_Indicator = 0x328; // UMirImage*
		constexpr auto m_Panel_Dev = 0x330; // UPanelWidget*
		constexpr auto m_Panel_SkillUse = 0x338; // UPanelWidget*
		constexpr auto m_arGuildSkillUseList = 0x340; // TArray<UMM_Guild_Dev_Slot_SkillUse*>
	}

	namespace n_UMM_Hud_Chat { // : UWidgetBase
		constexpr auto m_AniStart = 0x308; // UWidgetAnimation*
		constexpr auto m_AniEnd = 0x310; // UWidgetAnimation*
		constexpr auto MAX_VIEW_MESSAGE_COUNT = 0x318; // int32_t
		constexpr auto TEXT_WRAPPING_SIZE = 0x31c; // float
		constexpr auto m_ScrollBox = 0x320; // UScrollBox*
		constexpr auto m_ChannelId = 0x328; // uint64_t
		constexpr auto m_InitAsyncLoad = 0x330; // bool
	}

	namespace n_UMM_RegionSlot_Global { // : UWidgetBase
		constexpr auto m_Img_Selected = 0x2f0; // UWidget*
		constexpr auto m_WE_Selected = 0x2f8; // UWidget*
		constexpr auto m_Img_Icon = 0x300; // UMirImage*
		constexpr auto m_Txt_Name = 0x308; // UMirTextBlock*
		constexpr auto m_Txt_Ping = 0x310; // UMirTextBlock*
		constexpr auto m_Txt_UTC = 0x318; // UMirTextBlock*
		constexpr auto m_Btn_Main = 0x320; // UMirButton*
		constexpr auto m_Spc_ClickEffect = 0x328; // UWidget*
	}

	namespace n_UMM_CollectItemInfo { // : UWidgetBase
		constexpr auto m_TierStrID = 0x2f0; // int32_t
		constexpr auto m_PlusStrID = 0x2f4; // int32_t
		constexpr auto m_RegistStrID = 0x2f8; // int32_t
		constexpr auto m_SearchStrID = 0x2fc; // int32_t
		constexpr auto m_SmeltStrID = 0x300; // int32_t
		constexpr auto m_TradeCenterStrID = 0x304; // int32_t
		constexpr auto m_AlreadyRegistStrID = 0x308; // int32_t
		constexpr auto m_IsNotTradableItmeStrID = 0x30c; // int32_t
		constexpr auto m_ObtainInfoStrID = 0x310; // int32_t
		constexpr auto m_Txt_Name = 0x318; // UMirTextBlock*
		constexpr auto m_Txt_SmeltingLV = 0x320; // UMirTextBlock*
		constexpr auto m_Txt_Tier = 0x328; // UMirTextBlock*
		constexpr auto m_Img_Tier_BG = 0x330; // UMirImage*
		constexpr auto m_Img_Tier_Count = 0x338; // UMirImage*
		constexpr auto m_Img_Grade = 0x340; // UMirImage*
		constexpr auto m_Txt_GradeName = 0x348; // UMirTextBlock*
		constexpr auto m_Btn_Search = 0x350; // UMM_Common_Btn*
		constexpr auto m_Btn_Regist = 0x358; // UMM_Common_Btn*
		constexpr auto m_Btn_Trade = 0x360; // UMM_Common_Btn*
		constexpr auto m_ItemInfo_List = 0x368; // UMM_PopUp_ItemInfo_List*
		constexpr auto m_DoNotRegist = 0x370; // int32_t
		constexpr auto m_CheckSmeltStr = 0x374; // int32_t
		constexpr auto m_NoRegistItemStr = 0x378; // int32_t
		constexpr auto m_NoSmeltStrID = 0x37c; // int32_t
		constexpr auto m_HasNoItemStrID = 0x380; // int32_t
		constexpr auto m_IsPetStoneStrID = 0x384; // int32_t
		constexpr auto m_IsOverSmletStrID = 0x388; // int32_t
		constexpr auto m_DoNotOpenContentsStrID = 0x38c; // int32_t
	}

	namespace n_AEQSTestingPawn { // : ACharacter
		constexpr auto QueryTemplate = 0x630; // UEnvQuery*
		constexpr auto QueryParams = 0x638; // TArray<FEnvNamedValue>
		constexpr auto QueryConfig = 0x648; // TArray<FAIDynamicParam>
		constexpr auto TimeLimitPerStep = 0x658; // float
		constexpr auto StepToDebugDraw = 0x65c; // int32_t
		constexpr auto HighlightMode = 0x660; // EEnvQueryHightlightMode
		constexpr auto bDrawLabels = 0x664; // char : 1
		constexpr auto bDrawFailedItems = 0x664; // char : 1
		constexpr auto bReRunQueryOnlyOnFinishedMove = 0x664; // char : 1
		constexpr auto bShouldBeVisibleInGame = 0x664; // char : 1
		constexpr auto bTickDuringGame = 0x664; // char : 1
		constexpr auto QueryingMode = 0x668; // EEnvQueryRunMode
		constexpr auto NavAgentProperties = 0x670; // FNavAgentProperties
	}

	namespace n_UMirWrapScrollBox { // : UScrollBox
		constexpr auto m_iSlotCountPerLine = 0x880; // int32_t
		constexpr auto m_vSlotPadding = 0x884; // FMargin
		constexpr auto m_eStyle = 0x894; // EStyle_MirWrapScrollBox
		constexpr auto m_pParentWidget = 0x8a8; // UUserWidget*
		constexpr auto m_arSlot = 0x8b0; // TArray<UWidget*>
		constexpr auto m_arPanel = 0x8c0; // TArray<UPanelWidget*>
	}

	namespace n_UMM_Dominion_Castle { // : UWidgetBase
		constexpr auto STRING_MAIN_BEHAIVOR = 0x2f0; // int32_t
		constexpr auto STRING_SUB_BEHAIVOR = 0x2f4; // int32_t
		constexpr auto m_pBtnPublicService = 0x2f8; // UMM_Guild_Slot_Btn*
		constexpr auto m_pBtnPk = 0x300; // UMM_Guild_Slot_Btn*
		constexpr auto m_pBtnBuff = 0x308; // UMM_Guild_Slot_Btn*
		constexpr auto m_pBtnPrize = 0x310; // UMM_Guild_Slot_Btn*
		constexpr auto m_pCastleGuild = 0x318; // UMM_Dominion_Castle_Guild*
		constexpr auto m_pDominionOccupation = 0x320; // UMM_Dominion_Occupation*
		constexpr auto m_pDominionHistory = 0x328; // UMM_Dominion_History*
	}

	namespace n_USubmixEffectReverbPreset { // : USoundEffectSubmixPreset
		constexpr auto Settings = 0x9c; // FSubmixEffectReverbSettings
	}

	namespace n_UMM_BuildingSimpleInfo { // : UWidgetBase
		constexpr auto m_Img_Icon = 0x2e0; // UMirImage*
		constexpr auto m_Img_Lock = 0x2e8; // UMirImage*
		constexpr auto m_Txt_Step = 0x2f0; // UMirTextBlock*
		constexpr auto m_Txt_Name = 0x2f8; // UMirTextBlock*
		constexpr auto m_Txt_Desc = 0x300; // UMirTextBlock*
		constexpr auto m_Txt_CompleteCount = 0x308; // UMirTextBlock*
		constexpr auto m_Img_Combat = 0x310; // UMirImage*
		constexpr auto m_Txt_Combat = 0x318; // UMirTextBlock*
		constexpr auto m_Btn_Info = 0x320; // UMM_Common_Btn*
		constexpr auto m_Img_Indicator = 0x328; // UMirImage*
		constexpr auto m_StepStrID = 0x330; // int32_t
		constexpr auto m_CompleteOpenStrID = 0x334; // int32_t
		constexpr auto m_CompleteStepUpStrID = 0x338; // int32_t
		constexpr auto m_OnGointStepUpStrID = 0x33c; // int32_t
		constexpr auto m_CountPerMaxStrID = 0x340; // int32_t
		constexpr auto m_DetailInfoStrID = 0x344; // int32_t
	}

	namespace n_UTextPropertyTestObject { // : UObject
		constexpr auto DefaultedText = 0x28; // FText
		constexpr auto UndefaultedText = 0x40; // FText
		constexpr auto TransientText = 0x58; // FText
	}

	namespace n_UMM_Customizing_PaletteThumbnail { // : UCustomizingComponentBase
		constexpr auto m_Txt_Title = 0x2e0; // UMirTextBlock*
	}

	namespace n_UMM_GameOption_InGame_HUD { // : UWidgetBase
		constexpr auto Option_MyGuildMarkOption = 0x2e0; // UMM_GameOption_Switch*
		constexpr auto Option_AllyGuildMarkOption = 0x2e8; // UMM_GameOption_Switch*
		constexpr auto Option_OtherGuildMarkOption = 0x2f0; // UMM_GameOption_Switch*
		constexpr auto Option_MyNameOption = 0x2f8; // UMM_GameOption_Select*
		constexpr auto Option_UserNameOption = 0x300; // UMM_GameOption_Select*
		constexpr auto Option_MonNameOption = 0x308; // UMM_GameOption_Select*
		constexpr auto Option_CustomTitleOption = 0x310; // UMM_GameOption_Switch*
	}

	namespace n_UMM_Guild_DiplomacyListSlot { // : UWidgetBase
		constexpr auto Req_HostilityColor = 0x2e0; // FLinearColor
		constexpr auto Res_HostilityColor = 0x2f0; // FLinearColor
		constexpr auto m_Img_Rank = 0x320; // UMirImage*
		constexpr auto m_Txt_Rank = 0x328; // UMirTextBlock*
		constexpr auto m_Guild_Icon = 0x330; // UMM_GuildIcon*
		constexpr auto m_Txt_Name = 0x338; // UMirTextBlock*
		constexpr auto m_Txt_GuildLevel = 0x340; // UMirTextBlock*
		constexpr auto m_Txt_MemberCount = 0x348; // UMirTextBlock*
		constexpr auto m_Txt_Status = 0x350; // UMirTextBlock*
		constexpr auto m_Btn = 0x358; // UMirButton*
		constexpr auto m_CombatPoint = 0x360; // UMM_Common_CombatPoint*
	}

	namespace n_UAnimationSharingStateProcessor { // : UObject
		constexpr auto AnimationStateEnum = 0x28; // UEnum*
	}

	namespace n_UMirListView { // : UListView
		constexpr auto m_eStyle = 0x858; // EStyle_MirListView
		constexpr auto m_arEntryWidgetClass = 0x860; // TArray<UUserWidget*>
	}

	namespace n_AMM_CharSelState { // : AMM_GameStateBase
		constexpr auto m_pCamera = 0x278; // ACameraActor*
		constexpr auto m_DisplayLocation = 0x2d4; // FVector
		constexpr auto m_DisplayRotation = 0x2e0; // FRotator
		constexpr auto m_CustomizingLocation = 0x2ec; // FVector
		constexpr auto m_CustomizingRotation = 0x2f8; // FRotator
		constexpr auto m_pPlanarReflectionComp = 0x308; // UPlanarReflectionComponent*
		constexpr auto m_CurrentActor = 0x360; // AActor*
		constexpr auto m_ZoomCameraArray = 0x368; // TArray<ACameraActor*>
	}

	namespace n_UMM_Common_Btn_IconText { // : UMM_Common_Btn
		constexpr auto m_Icon = 0x3f8; // UObject*
		constexpr auto m_bUseCustomSize = 0x400; // bool
		constexpr auto m_vCustomSize = 0x404; // FVector2D
		constexpr auto m_ImgIcon = 0x410; // UImage*
	}

	namespace n_UChattingLocalData { // : USaveGame
		constexpr auto MacroMessageMap = 0x28; // TMap<int32_t, FString>
		constexpr auto InitMacroMessageMap = 0x78; // TMap<int32_t, bool>
		constexpr auto RecentlyReadTimeMap = 0xc8; // TMap<uint64_t, int64_t>
		constexpr auto RecentlyChannelId = 0x118; // uint64_t
		constexpr auto GuildSystemMessage = 0x120; // bool
		constexpr auto SaveSlotName = 0x128; // FString
	}

	namespace n_USoundNodeLooping { // : USoundNode
		constexpr auto LoopCount = 0x40; // int32_t
		constexpr auto bLoopIndefinitely = 0x44; // char : 1
	}

	namespace n_UMovieSceneEventTriggerSection { // : UMovieSceneEventSectionBase
		constexpr auto EventChannel = 0xe0; // FMovieSceneEventChannel
	}

	namespace n_UToIntegerField { // : UFieldNodeInt
		constexpr auto FloatField = 0xb0; // UFieldNodeFloat*
	}

	namespace n_AVolume { // : ABrush
		constexpr auto BrushType = 0x218; // EBrushType
		constexpr auto BrushColor = 0x21c; // FColor
		constexpr auto PolyFlags = 0x220; // int32_t
		constexpr auto bColored = 0x224; // char : 1
		constexpr auto bSolidWhenSelected = 0x224; // char : 1
		constexpr auto bPlaceableFromClassBrowser = 0x224; // char : 1
		constexpr auto bNotForClientOrServer = 0x224; // char : 1
		constexpr auto Brush = 0x228; // UModel*
		constexpr auto BrushComponent = 0x230; // UBrushComponent*
		constexpr auto bInManipulation = 0x238; // char : 1
		constexpr auto SavedSelections = 0x240; // TArray<FGeomSelection>
	}

	namespace n_UUniformVector { // : UFieldNodeVector
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto Direction = 0xb4; // FVector
	}

	namespace n_UMM_RelationQuestList { // : UWidgetBase
		constexpr auto m_CategoryToStr = 0x2f0; // TMap<int32_t, int32_t>
		constexpr auto m_ListView_GroupList = 0x340; // UMirListView*
		constexpr auto m_ListView_RelationList = 0x348; // UMirListView*
		constexpr auto m_CategorySet = 0x350; // UMM_CommonHorizontalTabSet*
		constexpr auto m_QuestRelationProg = 0x358; // UMM_QuestRelation_Progress*
		constexpr auto m_arRelationGroupSlotObj = 0x370; // TArray<URelationGroupSlotObj*>
		constexpr auto m_arRelationSlotObj = 0x380; // TArray<URelationSlotObj*>
	}

	namespace n_USynth2DSlider { // : UWidget
		constexpr auto ValueX = 0x108; // float
		constexpr auto ValueY = 0x10c; // float
		constexpr auto ValueXDelegate = 0x110; // DelegateProperty
		constexpr auto ValueYDelegate = 0x120; // DelegateProperty
		constexpr auto WidgetStyle = 0x130; // FSynth2DSliderStyle
		constexpr auto SliderHandleColor = 0x3e8; // FLinearColor
		constexpr auto IndentHandle = 0x3f8; // bool
		constexpr auto Locked = 0x3f9; // bool
		constexpr auto StepSize = 0x3fc; // float
		constexpr auto IsFocusable = 0x400; // bool
		constexpr auto OnMouseCaptureBegin = 0x408; // FScriptMulticastDelegate
		constexpr auto OnMouseCaptureEnd = 0x418; // FScriptMulticastDelegate
		constexpr auto OnControllerCaptureBegin = 0x428; // FScriptMulticastDelegate
		constexpr auto OnControllerCaptureEnd = 0x438; // FScriptMulticastDelegate
		constexpr auto OnValueChangedX = 0x448; // FScriptMulticastDelegate
		constexpr auto OnValueChangedY = 0x458; // FScriptMulticastDelegate
	}

	namespace n_APaperGroupedSpriteActor { // : AActor
		constexpr auto RenderComponent = 0x218; // UPaperGroupedSpriteComponent*
	}

	namespace n_UMM_Slot_Simple { // : UMM_Slot_Base
		constexpr auto m_ImgDisabled = 0x3e8; // UMirImage*
		constexpr auto m_ImgPlus = 0x3f0; // UMirImage*
		constexpr auto m_ImgTierBg = 0x3f8; // UMirImage*
	}

	namespace n_UMaterialExpressionVertexInterpolator { // : UMaterialExpressionCustomOutput
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UTexture { // : UStreamableRenderAsset
		constexpr auto LightingGuid = 0x48; // FGuid
		constexpr auto LODBias = 0x58; // int32_t
		constexpr auto CompressionSettings = 0x5c; // TextureCompressionSettings
		constexpr auto Filter = 0x5d; // TextureFilter
		constexpr auto MipLoadOptions = 0x5e; // ETextureMipLoadOptions
		constexpr auto LODGroup = 0x5f; // TextureGroup
		constexpr auto SRGB = 0x60; // char : 1
		constexpr auto bNoTiling = 0x60; // char : 1
		constexpr auto VirtualTextureStreaming = 0x60; // char : 1
		constexpr auto CompressionYCoCg = 0x60; // char : 1
		constexpr auto bAsyncResourceReleaseHasBeenStarted = 0x60; // char : 1
		constexpr auto AssetUserData = 0x68; // TArray<UAssetUserData*>
	}

	namespace n_UMM_CustomTitleSwitching { // : UWidgetBase
		constexpr auto STRING_TITLE = 0x2f8; // int32_t
		constexpr auto STRING_OFFICAL_EMPTY = 0x2fc; // int32_t
		constexpr auto STRING_TITLE_EMPTY = 0x300; // int32_t
		constexpr auto STRING_REMAIN = 0x304; // int32_t
		constexpr auto STRING_REMAIN_D_H = 0x308; // int32_t
		constexpr auto STRING_REMAIN_H_M = 0x30c; // int32_t
		constexpr auto STRING_REMAIN_M_S = 0x310; // int32_t
		constexpr auto STRING_REMAIN_SECOND = 0x314; // int32_t
		constexpr auto STRING_TITLE_NONE = 0x318; // int32_t
		constexpr auto STRING_RECOMMEND_TITLE_2 = 0x31c; // int32_t
		constexpr auto STRING_RECOMMEND_TITLE_3 = 0x320; // int32_t
		constexpr auto STRING_CAN_USING_TITLE = 0x324; // int32_t
		constexpr auto STRING_DISABLE_TITLE = 0x328; // int32_t
		constexpr auto STRING_OFFICAL_TITLE = 0x32c; // int32_t
		constexpr auto STRING_NEED_TITLE = 0x330; // int32_t
		constexpr auto STRING_DISABLE_TITLE_2 = 0x334; // int32_t
		constexpr auto STRING_DISABLE_TITLE_3 = 0x338; // int32_t
		constexpr auto STRING_USE_TITLE_2 = 0x33c; // int32_t
		constexpr auto STRING_USE_TITLE_3 = 0x340; // int32_t
		constexpr auto STRING_USE_TITLE_4 = 0x344; // int32_t
		constexpr auto STRING_USE_OFFICAL_FAIL = 0x348; // int32_t
		constexpr auto STRING_USE_OFFICAL_FAIL_USE_TITLE = 0x34c; // int32_t
		constexpr auto STRING_USE_OFFICAL_SUCCESS = 0x350; // int32_t
		constexpr auto Txt_OfficialTitle = 0x358; // UMirTextBlock*
		constexpr auto Txt_CustomTitle = 0x360; // UMirTextBlock*
		constexpr auto Btn_CustomTitle = 0x368; // UMirButton*
		constexpr auto Txt_RemainDay = 0x370; // UMirTextBlock*
		constexpr auto Txt_RemainDay_Time = 0x378; // UMirRichTextBlock*
		constexpr auto Txt_CustomTitle_Guide = 0x380; // UMirTextBlock*
		constexpr auto Chk_TitleBase = 0x388; // UCheckBox*
		constexpr auto Chk_TitleUse = 0x390; // UCheckBox*
		constexpr auto Txt_TitleBase = 0x398; // UMirTextBlock*
		constexpr auto Txt_TitleUse = 0x3a0; // UMirTextBlock*
		constexpr auto Btn_Cancel = 0x3a8; // UMM_Common_Btn*
		constexpr auto Btn_Ok = 0x3b0; // UMM_Common_Btn*
		constexpr auto btn_close = 0x3b8; // UMM_Common_Btn_Symbol*
	}

	namespace n_UMaterialExpressionParticleRadius { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UMaterialExpressionParticleDirection { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UMM_PopupGuildSearchEdit { // : UWidgetBase
		constexpr auto edit_txt_search = 0x2e0; // UMirEditableText*
		constexpr auto Btn_Cancel = 0x2e8; // UMM_Common_Btn*
		constexpr auto btn_search = 0x2f0; // UMM_Common_Btn*
		constexpr auto btn_close = 0x2f8; // UMM_Common_Btn_Symbol*
	}

	namespace n_UNavRelevantComponent { // : UActorComponent
		constexpr auto bAttachToOwnersRoot = 0xd4; // char : 1
		constexpr auto CachedNavParent = 0xd8; // UObject*
	}

	namespace n_UMM_ItemMake_Slot { // : UMM_Slot_Base
		constexpr auto m_ImgDisabled = 0x3f8; // UMirImage*
		constexpr auto m_ImgEquiped = 0x400; // UMirImage*
		constexpr auto m_ImgHave = 0x408; // UMirImage*
		constexpr auto m_Imgindicator = 0x410; // UMirImage*
		constexpr auto Img_Select = 0x418; // UImage*
		constexpr auto m_TxtCount = 0x420; // UMirTextBlock*
		constexpr auto m_ImgTierBg = 0x428; // UMirImage*
		constexpr auto m_ImgDummy = 0x430; // UMirImage*
		constexpr auto m_PanelEvent = 0x438; // UMirCanvasPanel*
		constexpr auto m_Img_Attribution = 0x440; // UMirImage*
		constexpr auto ItemMakeId = 0x448; // int32_t
		constexpr auto STR_STACKCOUNT = 0x44c; // int32_t
	}

	namespace n_UIpConnection { // : UNetConnection
		constexpr auto SocketErrorDisconnectDelay = 0x1a10; // float
	}

	namespace n_UMM_Popup_GuestContinue { // : UWidgetBase
		constexpr auto m_Btn_Close = 0x2e0; // UMM_Common_Btn_Symbol*
		constexpr auto m_Btn_LoadAccount = 0x2e8; // UMM_Common_Btn*
		constexpr auto m_Edit_Code = 0x2f0; // UMirEditableText*
		constexpr auto m_Edit_Password = 0x2f8; // UMirEditableText*
	}

	namespace n_UParticleModuleMeshRotationRate { // : UParticleModuleRotationRateBase
		constexpr auto StartRotationRate = 0x30; // FRawDistributionVector
	}

	namespace n_AQuestArrivalDisplayActor { // : AActor
		constexpr auto ArrivalWidgetCom = 0x218; // UWidgetComponent*
		constexpr auto EffectUID = 0x220; // uint32_t
		constexpr auto IconID = 0x224; // int32_t
		constexpr auto MinLimit = 0x228; // float
	}

	namespace n_UBTTask_MoveTo { // : UBTTask_BlackboardBase
		constexpr auto AcceptableRadius = 0x98; // float
		constexpr auto FilterClass = 0xa0; // UNavigationQueryFilter*
		constexpr auto ObservedBlackboardValueTolerance = 0xa8; // float
		constexpr auto bObserveBlackboardValue = 0xac; // char : 1
		constexpr auto bAllowStrafe = 0xac; // char : 1
		constexpr auto bAllowPartialPath = 0xac; // char : 1
		constexpr auto bTrackMovingGoal = 0xac; // char : 1
		constexpr auto bProjectGoalLocation = 0xac; // char : 1
		constexpr auto bReachTestIncludesAgentRadius = 0xac; // char : 1
		constexpr auto bReachTestIncludesGoalRadius = 0xac; // char : 1
		constexpr auto bStopOnOverlap = 0xac; // char : 1
		constexpr auto bStopOnOverlapNeedsUpdate = 0xad; // char : 1
	}

	namespace n_UMaterialExpressionWorldPosition { // : UMaterialExpression
		constexpr auto WorldPositionShaderOffset = 0x40; // EWorldPositionIncludedOffsets
	}

	namespace n_UMM_Popup_ContentsActionResult { // : UWidgetBase
		constexpr auto m_AniStart = 0x2e0; // UWidgetAnimation*
		constexpr auto m_AniEnd = 0x2e8; // UWidgetAnimation*
		constexpr auto m_AniStart_GreatBuilding = 0x2f0; // UWidgetAnimation*
		constexpr auto m_Grid_Deco_Mid = 0x350; // UPanelWidget*
		constexpr auto m_Vrt_Title = 0x358; // UPanelWidget*
		constexpr auto m_Txt_Title = 0x360; // UMirTextBlock*
		constexpr auto m_RTxt_TitleMsg = 0x368; // UMirRichTextBlock*
		constexpr auto m_Vrt_StarGradeTitle = 0x370; // UPanelWidget*
		constexpr auto m_Txt_StarGradeTitle_1 = 0x378; // UMirTextBlock*
		constexpr auto m_Txt_StarGradeTitle_2 = 0x380; // UMirTextBlock*
		constexpr auto m_Hrz_StarGradeTitleDeco = 0x388; // UPanelWidget*
		constexpr auto m_Hrz_StarGrade = 0x390; // UPanelWidget*
		constexpr auto m_StarGrade_Pre = 0x398; // UMM_StarGrade*
		constexpr auto m_StarGrade_Next = 0x3a0; // UMM_StarGrade*
		constexpr auto m_ExchangeItemInfo = 0x3a8; // UMM_ExchangeItemInfo*
		constexpr auto m_Btn_Back = 0x3b0; // UMirButton*
		constexpr auto m_Grid_Result = 0x3b8; // UPanelWidget*
		constexpr auto m_arImg_ResultIcon = 0x3c0; // UMirImage* [0x8]
		constexpr auto m_arTxt_Result = 0x400; // UMirTextBlock* [0x8]
		constexpr auto m_arRTxt_PreValue = 0x440; // UMirRichTextBlock* [0x8]
		constexpr auto m_arImg_Next = 0x480; // UMirImage* [0x8]
		constexpr auto m_arRTxt_NextValue = 0x4c0; // UMirRichTextBlock* [0x8]
		constexpr auto m_Vrt_PetGradeUpSlot = 0x500; // UPanelWidget*
		constexpr auto m_arPetGradeUpSlot = 0x508; // UMM_PetGradeUp_SkillLevelSlot* [0x5]
	}

	namespace n_UPlatformGameInstance { // : UGameInstance
		constexpr auto ApplicationWillDeactivateDelegate = 0x168; // FScriptMulticastDelegate
		constexpr auto ApplicationHasReactivatedDelegate = 0x178; // FScriptMulticastDelegate
		constexpr auto ApplicationWillEnterBackgroundDelegate = 0x188; // FScriptMulticastDelegate
		constexpr auto ApplicationHasEnteredForegroundDelegate = 0x198; // FScriptMulticastDelegate
		constexpr auto ApplicationWillTerminateDelegate = 0x1a8; // FScriptMulticastDelegate
		constexpr auto ApplicationShouldUnloadResourcesDelegate = 0x1b8; // FScriptMulticastDelegate
		constexpr auto ApplicationReceivedStartupArgumentsDelegate = 0x1c8; // FScriptMulticastDelegate
		constexpr auto ApplicationRegisteredForRemoteNotificationsDelegate = 0x1d8; // FScriptMulticastDelegate
		constexpr auto ApplicationRegisteredForUserNotificationsDelegate = 0x1e8; // FScriptMulticastDelegate
		constexpr auto ApplicationFailedToRegisterForRemoteNotificationsDelegate = 0x1f8; // FScriptMulticastDelegate
		constexpr auto ApplicationReceivedRemoteNotificationDelegate = 0x208; // FScriptMulticastDelegate
		constexpr auto ApplicationReceivedLocalNotificationDelegate = 0x218; // FScriptMulticastDelegate
		constexpr auto ApplicationReceivedScreenOrientationChangedNotificationDelegate = 0x228; // FScriptMulticastDelegate
	}

	namespace n_ABGMTrigger { // : AActor
		constexpr auto m_Priority = 0x218; // char
		constexpr auto m_BoxExtent = 0x21c; // FVector
		constexpr auto m_bBoxRender = 0x228; // bool
		constexpr auto m_BoxColor = 0x22c; // FColor
		constexpr auto m_pBoxCollision = 0x230; // UBoxComponent*
		constexpr auto m_bInit = 0x238; // bool
	}

	namespace n_UMM_GameOption_KeySetting { // : UWidgetBase
		constexpr auto sb_group = 0x2e0; // UMirScrollBox*
		constexpr auto btn_reset = 0x2e8; // UMM_Common_Btn*
	}

	namespace n_UMM_Hud_Chat_Message { // : UWidgetBase
		constexpr auto m_RTxt_Message = 0x2e0; // UMirRichTextBlock*
	}

	namespace n_UMM_VehicleAnimInstance { // : UAnimInstance
		constexpr auto MoveSpeed = 0x268; // float
		constexpr auto RideState = 0x26c; // ERideState
		constexpr auto Vehicle = 0x270; // AMM_Vehicle*
	}

	namespace n_UAnimSet { // : UObject
		constexpr auto bAnimRotationOnly = 0x28; // char : 1
		constexpr auto TrackBoneNames = 0x30; // TArray<FName>
		constexpr auto LinkupCache = 0x40; // TArray<FAnimSetMeshLinkup>
		constexpr auto BoneUseAnimTranslation = 0x50; // TArray<char>
		constexpr auto ForceUseMeshTranslation = 0x60; // TArray<char>
		constexpr auto UseTranslationBoneNames = 0x70; // TArray<FName>
		constexpr auto ForceMeshTranslationBoneNames = 0x80; // TArray<FName>
		constexpr auto PreviewSkelMeshName = 0x90; // FName
		constexpr auto BestRatioSkelMeshName = 0x98; // FName
	}

	namespace n_UMovieSceneBuiltInEasingFunction { // : UObject
		constexpr auto Type = 0x30; // EMovieSceneBuiltInEasing
	}

	namespace n_UInterpGroup { // : UObject
		constexpr auto InterpTracks = 0x30; // TArray<UInterpTrack*>
		constexpr auto GroupName = 0x40; // FName
		constexpr auto GroupColor = 0x48; // FColor
		constexpr auto bCollapsed = 0x4c; // char : 1
		constexpr auto bVisible = 0x4c; // char : 1
		constexpr auto bIsFolder = 0x4c; // char : 1
		constexpr auto bIsParented = 0x4c; // char : 1
		constexpr auto bIsSelected = 0x4c; // char : 1
	}

	namespace n_UMM_Item_Make_Slider { // : UWidgetBase
		constexpr auto m_pTxt_CurValueNum = 0x328; // UMirTextBlock*
		constexpr auto m_pBtn_DecreaseValue = 0x330; // UMM_Common_Btn_Symbol*
		constexpr auto m_pBtn_IncreaseValue = 0x338; // UMM_Common_Btn_Symbol*
		constexpr auto m_pBtn_MaxValue = 0x340; // UMM_Common_Btn_Symbol*
		constexpr auto m_pBtn_MinValue = 0x348; // UMM_Common_Btn_Symbol*
		constexpr auto m_pBtn_IncreaseUnit = 0x350; // UMM_Common_Btn*
		constexpr auto m_pBtn_KeyPad = 0x358; // UMM_Common_Btn_Symbol*
		constexpr auto m_pImgCostIcon = 0x360; // UMirImage*
		constexpr auto m_iMinValue = 0x368; // int32_t
		constexpr auto m_iMaxValue = 0x36c; // int32_t
		constexpr auto m_iCurValue = 0x370; // int32_t
		constexpr auto m_iStackValue = 0x374; // int32_t
		constexpr auto m_iIncreaseUnit = 0x378; // int32_t
		constexpr auto m_iCurrentMaxValue = 0x37c; // int32_t
		constexpr auto m_iSellValue = 0x380; // int32_t
		constexpr auto m_Lock = 0x384; // bool
	}

	namespace n_UMovieSceneActorReferenceTrack { // : UMovieScenePropertyTrack
		constexpr auto SectionToKey = 0x58; // UMovieSceneSection*
		constexpr auto PropertyName = 0x60; // FName
		constexpr auto PropertyPath = 0x68; // FString
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_UMaterialExpressionSubtract { // : UMaterialExpression
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_UMM_Option_Ability { // : UWidgetBase
		constexpr auto Img_Icon = 0x2f0; // UImage*
		constexpr auto Txt_OptionName = 0x2f8; // UTextBlock*
		constexpr auto Img_GapIcon = 0x300; // UImage*
		constexpr auto Txt_OptionNum = 0x308; // UTextBlock*
		constexpr auto Btn_Main = 0x310; // UMirButton*
		constexpr auto m_StatID = 0x328; // int32_t
	}

	namespace n_UMM_PopupGuildGiveAllianceSlot { // : UWidgetBase
		constexpr auto img_rank = 0x2e0; // UMirImage*
		constexpr auto cp_rank = 0x2e8; // UMirCanvasPanel*
		constexpr auto txt_rank = 0x2f0; // UMirTextBlock*
		constexpr auto img_guild_frame = 0x2f8; // UMirImage*
		constexpr auto img_guild_mark = 0x300; // UMirImage*
		constexpr auto txt_guild_name = 0x308; // UMirTextBlock*
		constexpr auto txt_combat_power = 0x310; // UMirTextBlock*
		constexpr auto txt_level = 0x318; // UMirTextBlock*
		constexpr auto txt_member_count = 0x320; // UMirTextBlock*
		constexpr auto cb_select = 0x328; // UMirCheckBox*
	}

	namespace n_UMM_B_Ranking { // : UWidgetBase
		constexpr auto m_VerticalSet = 0x2f0; // UMM_CommonVerticalTabSet*
		constexpr auto m_ScrollList = 0x2f8; // UMirScrollBox*
		constexpr auto m_MyRankingSlot = 0x300; // UMM_Slot_Ranking_List*
		constexpr auto m_RankingToggle = 0x308; // UMM_Ranking_Toggle*
		constexpr auto m_BtnReward = 0x310; // UMM_Common_Btn_Symbol*
		constexpr auto m_pTxtDetailValue = 0x318; // UMirTextBlock*
		constexpr auto m_pCommonBoardNotice = 0x320; // UMM_Common_Board_Notice*
		constexpr auto m_pCanMyInfo = 0x328; // UCanvasPanel*
		constexpr auto m_pCanRankInfo = 0x330; // UCanvasPanel*
		constexpr auto m_pTxtFirstName = 0x338; // UMirTextBlock*
		constexpr auto m_pTxtFirstGuild = 0x340; // UMirTextBlock*
		constexpr auto m_pTxtSecondsName = 0x348; // UMirTextBlock*
		constexpr auto m_pTxtSecondGuild = 0x350; // UMirTextBlock*
		constexpr auto m_pBtnCloseDropBox = 0x358; // UMirButton*
		constexpr auto m_pRichTxtDesc = 0x360; // UMirRichTextBlock*
	}

	namespace n_UMergedMeshComponent { // : UPoseableMeshComponent
		constexpr auto SkeletalMesh = 0x440; // USkeletalMesh*
		constexpr auto MasterPoseComponent = 0x448; // TWeakObjectPtr<USkinnedMeshComponent>
		constexpr auto PhysicsAssetOverride = 0x548; // UPhysicsAsset*
		constexpr auto ForcedLodModel = 0x550; // int32_t
		constexpr auto MinLodModel = 0x554; // int32_t
		constexpr auto StreamingDistanceMultiplier = 0x560; // float
		constexpr auto LODInfo = 0x570; // TArray<FSkelMeshComponentLODInfo>
		constexpr auto VisibilityBasedAnimTickOption = 0x5a4; // EVisibilityBasedAnimTickOption
		constexpr auto bOverrideMinLOD = 0x5a6; // char : 1
		constexpr auto bUseAutomaticSwitchingCPUSkinning = 0x5a8; // char : 1
		constexpr auto bUseBoundsFromMasterPoseComponent = 0x5ac; // char : 1
		constexpr auto bForceWireframe = 0x5ac; // char : 1
		constexpr auto bDisplayBones = 0x5ac; // char : 1
		constexpr auto bDisableMorphTarget = 0x5ac; // char : 1
		constexpr auto bHideSkin = 0x5ac; // char : 1
		constexpr auto bPerBoneMotionBlur = 0x5ac; // char : 1
		constexpr auto bComponentUseFixedSkelBounds = 0x5ac; // char : 1
		constexpr auto bConsiderAllBodiesForBounds = 0x5ac; // char : 1
		constexpr auto bSyncAttachParentLOD = 0x5ad; // char : 1
		constexpr auto bCanHighlightSelectedSections = 0x5ad; // char : 1
		constexpr auto bRecentlyRendered = 0x5ad; // char : 1
		constexpr auto bCastCapsuleDirectShadow = 0x5ad; // char : 1
		constexpr auto bCastCapsuleIndirectShadow = 0x5ad; // char : 1
		constexpr auto bCPUSkinning = 0x5ad; // char : 1
		constexpr auto bEnableUpdateRateOptimizations = 0x5ad; // char : 1
		constexpr auto bDisplayDebugUpdateRateOptimizations = 0x5ad; // char : 1
		constexpr auto bRenderStatic = 0x5ae; // char : 1
		constexpr auto bIgnoreMasterPoseComponentLOD = 0x5ae; // char : 1
		constexpr auto bCachedLocalBoundsUpToDate = 0x5ae; // char : 1
		constexpr auto bForceMeshObjectUpdate = 0x5ae; // char : 1
		constexpr auto CapsuleIndirectShadowMinVisibility = 0x5b0; // float
		constexpr auto CachedWorldSpaceBounds = 0x5d8; // FBoxSphereBounds
		constexpr auto CachedWorldToLocalTransform = 0x600; // FMatrix
	}

	namespace n_UMM_New_Force_Skill_Info { // : UWidgetBase
		constexpr auto m_C_Txt_TotalBloodLevel = 0x2f0; // UMirRichTextBlock*
		constexpr auto m_C_TxtCombatPoint = 0x2f8; // UMirTextBlock*
	}

	namespace n_UWorldComposition { // : UObject
		constexpr auto TilesStreaming = 0x48; // TArray<ULevelStreaming*>
		constexpr auto TilesStreamingTimeThreshold = 0x58; // double
		constexpr auto bLoadAllTilesDuringCinematic = 0x60; // bool
		constexpr auto bRebaseOriginIn3DSpace = 0x61; // bool
		constexpr auto RebaseOriginDistance = 0x64; // float
	}

	namespace n_UMM_TotalQuickSlot_Popup { // : UWidgetBase
		constexpr auto m_pAnimOpen = 0x2f0; // UWidgetAnimation*
		constexpr auto m_pAnimClose = 0x2f8; // UWidgetAnimation*
		constexpr auto m_pBtnAttack = 0x300; // UButton*
		constexpr auto m_pBtnAttackSelect = 0x308; // UImage*
		constexpr auto m_pBtnAttackDeSelect = 0x310; // UImage*
		constexpr auto m_pBtnPotion = 0x318; // UButton*
		constexpr auto m_pBtnPotionSelect = 0x320; // UImage*
		constexpr auto m_pBtnPotionDeSelect = 0x328; // UImage*
		constexpr auto m_pWidgetSwitcher = 0x330; // UWidgetSwitcher*
		constexpr auto m_pBtnClose = 0x338; // UMM_Common_Btn_Symbol*
		constexpr auto m_pHudTotal_Attack = 0x340; // UMM_TotalQuickSlot_Attack*
		constexpr auto m_pHudTotal_Potion = 0x348; // UMM_TotalQuickSlot_Potion*
		constexpr auto m_Popup_Main_Title = 0x350; // UMirTextBlock*
	}

	namespace n_UMM_Dominion_Title_UniqueSlot { // : UMM_Dominion_Title_SlotBase
		constexpr auto m_pTxtClass = 0x2e0; // UMirTextBlock*
		constexpr auto m_pTxtName = 0x2e8; // UMirTextBlock*
		constexpr auto m_pBtnInfo = 0x2f0; // UMM_Common_Btn_Symbol*
		constexpr auto m_pPortrait = 0x2f8; // UMM_GuildMemberPortrait*
		constexpr auto m_pBtnClick = 0x300; // UMirButton*
	}

	namespace n_UMM_Popup_Term_Item_Info { // : UWidgetBase
		constexpr auto m_AniStart = 0x300; // UWidgetAnimation*
		constexpr auto m_AniEnd = 0x308; // UWidgetAnimation*
		constexpr auto Array_Slot = 0x310; // TArray<UMM_Slot_Term_Item*>
		constexpr auto btn_close = 0x320; // UMM_Common_Btn_Symbol*
		constexpr auto ScrollBox = 0x328; // UMirScrollBox*
		constexpr auto m_MaxTermItemSlotCount = 0x330; // int32_t
		constexpr auto m_CurrentTermItemSlotCount = 0x334; // int32_t
	}

	namespace n_UCurveFloat { // : UCurveBase
		constexpr auto FloatCurve = 0x30; // FRichCurve
		constexpr auto bIsEventCurve = 0xb0; // bool
	}

	namespace n_UMM_VolumeController { // : UWidgetBase
		constexpr auto m_arVolumeButtonIcon = 0x2e0; // TArray<UObject*>
		constexpr auto m_Img_VolumeButton = 0x2f8; // UMirImage*
		constexpr auto m_Btn_VolumeButton = 0x300; // UMirButton*
		constexpr auto m_Overlay_VolumeController = 0x308; // UPanelWidget*
		constexpr auto m_Prg_VolumeController = 0x310; // UMirProgressBar*
		constexpr auto m_Slider_VolumeController = 0x318; // UMirSlider*
	}

	namespace n_UMM_Goods_Slot { // : UWidgetBase
		constexpr auto m_eCostType = 0x2f0; // ECostType
		constexpr auto m_eTimeTicketType = 0x2f1; // ETimeTicketType
		constexpr auto m_bUse_SimpleDigit = 0x2f2; // bool
		constexpr auto m_bUse_MaxValue = 0x2f3; // bool
		constexpr auto m_bUse_GuildMaxValue = 0x2f4; // bool
		constexpr auto m_bUse_CostName = 0x2f5; // bool
		constexpr auto m_bUse_AddButton = 0x2f6; // bool
		constexpr auto m_bLeftJustify_CostValue = 0x2f7; // bool
		constexpr auto m_iTooltipID = 0x2f8; // int32_t
		constexpr auto m_Img_CostIcon = 0x320; // UMirImage*
		constexpr auto m_Txt_CostName = 0x328; // UMirTextBlock*
		constexpr auto m_Txt_CostValue = 0x330; // UMirTextBlock*
		constexpr auto m_Grid_AddIcon = 0x338; // UPanelWidget*
		constexpr auto m_Btn_Icon = 0x340; // UMirButton*
		constexpr auto m_Btn_Cost = 0x348; // UMirButton*
		constexpr auto m_Btn_CostInfo = 0x350; // UMM_Common_Btn_Symbol*
		constexpr auto m_SB_Tooltip = 0x358; // UWidget*
		constexpr auto m_Btn_Tooltip = 0x360; // UMM_Common_ToolTipBtn*
		constexpr auto m_Can_IncreaseEffect = 0x368; // UPanelWidget*
		constexpr auto m_Ani_IncreaseEffect = 0x370; // UWidgetAnimation*
	}

	namespace n_UFieldSystemComponent { // : UPrimitiveComponent
		constexpr auto FieldSystem = 0x418; // UFieldSystem*
		constexpr auto SupportedSolvers = 0x430; // TArray<AChaosSolverActor*>
	}

	namespace n_ULevelSequence { // : UMovieSceneSequence
		constexpr auto MovieScene = 0x348; // UMovieScene*
		constexpr auto ObjectReferences = 0x350; // FLevelSequenceObjectReferenceMap
		constexpr auto BindingReferences = 0x3a0; // FLevelSequenceBindingReferences
		constexpr auto PossessedObjects = 0x440; // TMap<FString, FLevelSequenceObject>
		constexpr auto DirectorClass = 0x490; // UObject*
	}

	namespace n_UFieldSystemMetaDataProcessingResolution { // : UFieldSystemMetaData
		constexpr auto ResolutionType = 0xb0; // EFieldResolutionType
	}

	namespace n_UMM_PetGradeUp_SkillLevelSlot { // : UWidgetBase
		constexpr auto m_Txt_SkillName = 0x2e0; // UMirTextBlock*
		constexpr auto m_Txt_SkillLevel = 0x2e8; // UMirTextBlock*
		constexpr auto m_Img_Next = 0x2f0; // UMirImage*
		constexpr auto m_Txt_SkillNextLevel = 0x2f8; // UMirTextBlock*
		constexpr auto m_ComparePoint = 0x300; // UMM_Common_ComparePoint*
		constexpr auto m_Txt_MaxLevel = 0x308; // UMirTextBlock*
	}

	namespace n_USourceEffectRingModulationPreset { // : USoundEffectSourcePreset
		constexpr auto Settings = 0x7c; // FSourceEffectRingModulationSettings
	}

	namespace n_AMaterialInstanceActor { // : AActor
		constexpr auto TargetActors = 0x218; // TArray<AActor*>
	}

	namespace n_UNetworkSettings { // : UDeveloperSettings
		constexpr auto bVerifyPeer = 0x38; // char : 1
		constexpr auto bEnableMultiplayerWorldOriginRebasing = 0x38; // char : 1
		constexpr auto MaxRepArraySize = 0x3c; // int32_t
		constexpr auto MaxRepArrayMemory = 0x40; // int32_t
		constexpr auto NetworkEmulationProfiles = 0x48; // TArray<FNetworkEmulationProfileDescription>
	}

	namespace n_UMM_PieceItemInfos { // : UWidgetBase
		constexpr auto m_Txt_Info = 0x2e0; // UMirTextBlock*
		constexpr auto m_PieceSlots = 0x2e8; // TArray<UMM_PieceItemSlot*>
	}

	namespace n_ASkyAtmosphere { // : AInfo
		constexpr auto SkyAtmosphereComponent = 0x218; // USkyAtmosphereComponent*
	}

	namespace n_UGuildWarMonsterComponent { // : UMonsterEntityComponent
		constexpr auto m_Owner = 0xb0; // TWeakObjectPtr<AMM_Monster>
	}

	namespace n_UMM_Popup_Auto_OptionChange { // : UWidgetBase
		constexpr auto m_pBtn_Close = 0x318; // UMM_Common_Btn_Symbol*
		constexpr auto m_pGrade1Box = 0x320; // UHorizontalBox*
		constexpr auto m_pGrade2Box = 0x328; // UHorizontalBox*
		constexpr auto m_pGrade3Box = 0x330; // UHorizontalBox*
		constexpr auto m_pBtn_Box1_Decrease = 0x338; // UMM_Common_Btn_Symbol*
		constexpr auto m_pBtn_Box1_Increase = 0x340; // UMM_Common_Btn_Symbol*
		constexpr auto m_pBtn_Box2_Decrease = 0x348; // UMM_Common_Btn_Symbol*
		constexpr auto m_pBtn_Box2_Increase = 0x350; // UMM_Common_Btn_Symbol*
		constexpr auto m_pBtn_Box3_Decrease = 0x358; // UMM_Common_Btn_Symbol*
		constexpr auto m_pBtn_Box3_Increase = 0x360; // UMM_Common_Btn_Symbol*
		constexpr auto m_pImg_Box1_Grade = 0x368; // UMirImage*
		constexpr auto m_pImg_Box2_Grade = 0x370; // UMirImage*
		constexpr auto m_pImg_Box3_Grade = 0x378; // UMirImage*
		constexpr auto m_pTxt_Box1_GradeCount = 0x380; // UMirTextBlock*
		constexpr auto m_pTxt_Box2_GradeCount = 0x388; // UMirTextBlock*
		constexpr auto m_pTxt_Box3_GradeCount = 0x390; // UMirTextBlock*
		constexpr auto m_pImg_Material1 = 0x398; // UMirImage*
		constexpr auto m_pImg_Material2 = 0x3a0; // UMirImage*
		constexpr auto m_pImg_Material3 = 0x3a8; // UMirImage*
		constexpr auto m_pTxt_MaterialCount1 = 0x3b0; // UMirTextBlock*
		constexpr auto m_pTxt_MaterialCount2 = 0x3b8; // UMirTextBlock*
		constexpr auto m_pTxt_MaterialCount3 = 0x3c0; // UMirTextBlock*
		constexpr auto m_pNumInput = 0x3c8; // UMM_Item_Make_Slider*
		constexpr auto m_pBtn_StartOptionChange = 0x3d0; // UMM_Common_Btn*
		constexpr auto m_pTxt_Info = 0x3d8; // UMirTextBlock*
	}

	namespace n_UMM_PetSkillSlot { // : UWidgetBase
		constexpr auto m_Img_Icon = 0x2e8; // UMirImage*
		constexpr auto m_Btn_Main = 0x2f0; // UMirButton*
		constexpr auto m_Grid_Effect = 0x2f8; // UPanelWidget*
	}

	namespace n_UMM_B_NPCMenu { // : UWidgetBase
		constexpr auto m_Btn_Menu1 = 0x2e0; // UMM_Common_Btn_Symbol*
		constexpr auto m_Btn_Menu2 = 0x2e8; // UMM_Common_Btn_Symbol*
		constexpr auto m_Btn_Menu3 = 0x2f0; // UMM_Common_Btn_Symbol*
		constexpr auto m_Btn_Menu4 = 0x2f8; // UMM_Common_Btn_Symbol*
		constexpr auto BtnMenuArray = 0x300; // TArray<UMM_Common_Btn_Symbol*>
		constexpr auto m_Txt_Menu1 = 0x310; // UTextBlock*
		constexpr auto m_Txt_Menu2 = 0x318; // UTextBlock*
		constexpr auto m_Txt_Menu3 = 0x320; // UTextBlock*
		constexpr auto m_Txt_Menu4 = 0x328; // UTextBlock*
		constexpr auto TxtMenuArray = 0x330; // TArray<UTextBlock*>
		constexpr auto m_Grd_Menu1 = 0x340; // UPanelWidget*
		constexpr auto m_Grd_Menu2 = 0x348; // UPanelWidget*
		constexpr auto m_Grd_Menu3 = 0x350; // UPanelWidget*
		constexpr auto m_Grd_Menu4 = 0x358; // UPanelWidget*
		constexpr auto GridMenuArray = 0x360; // TArray<UPanelWidget*>
		constexpr auto m_Btn_MenuRelation = 0x380; // UMM_Common_Btn_Symbol*
		constexpr auto m_Txt_MenuRelation = 0x388; // UTextBlock*
		constexpr auto m_Grd_MenuRelation = 0x390; // UPanelWidget*
	}

	namespace n_UMM_B_Synthesis { // : UWidgetBase
		constexpr auto m_C_Tab_Vertical = 0x2e0; // UMM_CommonVerticalTabSet*
		constexpr auto m_C_Tab_Horizon = 0x2e8; // UMM_CommonHorizontalTabSet*
		constexpr auto m_ItemSynthesis = 0x2f0; // UMM_ItemSynthesis*
		constexpr auto m_ItemSynthesis_Inven = 0x2f8; // UMM_ItemSynthesis_Inven*
	}

	namespace n_UMM_Popup_FriendlyCharacter { // : UWidgetBase
		constexpr auto btn_close = 0x2e0; // UMM_Common_Btn_Symbol*
		constexpr auto btn_search = 0x2e8; // UMM_Common_Btn*
		constexpr auto btn_confirm = 0x2f0; // UMM_Common_Btn*
		constexpr auto sb_member = 0x2f8; // UMirScrollBox*
		constexpr auto empty_notice = 0x300; // UMM_Common_Board_Notice*
	}

	namespace n_UMM_Customizing_Category { // : UWidgetBase
		constexpr auto m_TopCategoryArray = 0x2e0; // TArray<UMM_Customizing_MainCategoryItem*>
		constexpr auto m_MainCategoryArray = 0x2f0; // TArray<UMM_Customizing_MainCategoryItem*>
		constexpr auto m_SubCategoryArray = 0x300; // TArray<UMM_Customizing_TextCategory*>
		constexpr auto m_ScrSubCategory = 0x310; // UMirScrollBox*
	}

	namespace n_UMaterialExpressionSkyAtmosphereDistantLightScatteredLuminance { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UMM_B_Shop_ListElement { // : UWidgetBase
		constexpr auto OnSelectedItemEvent = 0x2e0; // FScriptMulticastDelegate
		constexpr auto OnBuyItemEvent = 0x2f0; // FScriptMulticastDelegate
		constexpr auto m_BaseWidget = 0x300; // UMM_B_Shop_NPC*
		constexpr auto m_BG = 0x308; // UButton*
		constexpr auto m_ItemSlot = 0x310; // UMM_Slot_Material*
		constexpr auto m_TextName = 0x318; // UTextBlock*
		constexpr auto m_TextLimit = 0x320; // UTextBlock*
		constexpr auto m_Goods = 0x328; // UMM_Goods_Slot*
		constexpr auto m_BtnBuy = 0x330; // UMirButton*
		constexpr auto m_ShopItemID = 0x338; // int32_t
		constexpr auto txt_count = 0x340; // UMirRichTextBlock*
		constexpr auto canvas_limit = 0x348; // UCanvasPanel*
		constexpr auto STR_UNLIMITED = 0x350; // int32_t
		constexpr auto STR_LIMITED = 0x354; // int32_t
	}

	namespace n_UMM_PlayerModelingAnimInstance { // : UAnimInstance
		constexpr auto MainState = 0x268; // int32_t
		constexpr auto SubState = 0x26c; // int32_t
		constexpr auto Stiffness01 = 0x270; // float
		constexpr auto Stiffness02 = 0x274; // float
		constexpr auto Stiffness03 = 0x278; // float
		constexpr auto Stiffness04 = 0x27c; // float
		constexpr auto Stiffness05 = 0x280; // float
		constexpr auto Damping01 = 0x284; // float
		constexpr auto Damping02 = 0x288; // float
		constexpr auto Damping03 = 0x28c; // float
		constexpr auto Damping04 = 0x290; // float
		constexpr auto Damping05 = 0x294; // float
		constexpr auto PlayerModeling = 0x298; // APlayerModelingActor*
	}

	namespace n_UMM_PopUp_ItemInfo_List { // : UWidgetBase
		constexpr auto Combat_Ability = 0x2e8; // UMM_PopUp_ItemInfo_Ability*
		constexpr auto m_CombatGrid = 0x2f0; // UPanelWidget*
		constexpr auto m_CombatTxt = 0x2f8; // UTextBlock*
		constexpr auto m_ItemNameEquipLVGrid = 0x300; // UPanelWidget*
		constexpr auto m_NameGrid = 0x308; // UPanelWidget*
		constexpr auto m_ItemName = 0x310; // UTextBlock*
		constexpr auto m_OverlapEquipAble = 0x318; // UTextBlock*
		constexpr auto m_EquipLvGrid = 0x320; // UPanelWidget*
		constexpr auto m_EquipLvTxt = 0x328; // UTextBlock*
		constexpr auto m_JobTxt = 0x330; // UTextBlock*
		constexpr auto isShowItemLine = 0x338; // bool
		constexpr auto m_ItemLine = 0x340; // UPanelWidget*
		constexpr auto m_SmeltGrid = 0x348; // UPanelWidget*
		constexpr auto m_SmeltValue = 0x350; // UTextBlock*
		constexpr auto m_SpecialAbilityGrid = 0x358; // UPanelWidget*
		constexpr auto m_AbilityLine = 0x360; // UPanelWidget*
		constexpr auto m_AbilityGrid = 0x368; // UPanelWidget*
		constexpr auto m_Abilities = 0x370; // TArray<UMM_PopUp_ItemInfo_Ability*>
		constexpr auto m_Grid_Trade = 0x380; // UMirCanvasPanel*
		constexpr auto m_AddOptionBtn = 0x388; // UMM_Common_Btn_Symbol*
		constexpr auto m_OptionGrid = 0x3a0; // UPanelWidget*
		constexpr auto m_OptionName = 0x3a8; // UMirTextBlock*
		constexpr auto Img_OptionBG = 0x3b0; // UImage*
		constexpr auto m_OptionAbilities = 0x3b8; // TArray<UMM_PopUp_ItemInfo_Ability*>
		constexpr auto m_ItemSetGrid = 0x3c8; // UPanelWidget*
		constexpr auto m_SetNameCount = 0x3d0; // UTextBlock*
		constexpr auto m_SetAbilityGrid = 0x3d8; // UPanelWidget*
		constexpr auto m_SetItemAbillities = 0x3e0; // TArray<UMM_PopUp_ItemInfo_Ability*>
		constexpr auto m_ItemDescGrid = 0x3f0; // UPanelWidget*
		constexpr auto m_ItemDesc = 0x3f8; // UTextBlock*
		constexpr auto m_Grid_Unsealing = 0x400; // UPanelWidget*
		constexpr auto m_Txt_UnsealingTime = 0x408; // UMirTextBlock*
		constexpr auto m_Grid_TermTime = 0x410; // UPanelWidget*
		constexpr auto m_Txt_TermTime = 0x418; // UMirTextBlock*
		constexpr auto m_DurabilityGrid = 0x420; // UPanelWidget*
		constexpr auto m_Txt_Durability = 0x428; // UMirTextBlock*
		constexpr auto m_ItemSellGrid = 0x430; // UPanelWidget*
		constexpr auto m_ItemSellTitle = 0x438; // UMirTextBlock*
		constexpr auto m_ItemSellPrice = 0x440; // UMirTextBlock*
		constexpr auto m_OptionMaxStr = 0x448; // UMirTextBlock*
		constexpr auto m_ScrollInfo = 0x450; // UMirScrollBox*
		constexpr auto m_Panel_Package = 0x458; // UMirCanvasPanel*
		constexpr auto m_PackageBtn = 0x460; // UMM_Common_Btn_Symbol*
		constexpr auto m_Panel_Source = 0x468; // UPanelWidget*
		constexpr auto m_Txt_SourceTitle = 0x470; // UMirTextBlock*
		constexpr auto m_Txt_Source = 0x478; // UMirTextBlock*
		constexpr auto m_Txt_CreateDate = 0x480; // UMirTextBlock*
		constexpr auto m_Txt_Serial = 0x488; // UMirTextBlock*
		constexpr auto m_Txt_SerialNumber = 0x490; // UMirTextBlock*
		constexpr auto m_Txt_Limited = 0x498; // UMirTextBlock*
		constexpr auto m_Txt_LimitedNumber = 0x4a0; // UMirTextBlock*
		constexpr auto m_Line_4 = 0x4a8; // UImage*
		constexpr auto m_Txt_StatNames = 0x4b0; // TArray<UMirTextBlock*>
		constexpr auto m_IsLeftSide = 0x4c0; // bool
		constexpr auto STRID_ITEM_DURABILITY = 0x4c4; // int32_t
		constexpr auto STRID_MSG_TRADABLE = 0x4c8; // int32_t
		constexpr auto STRID_MSG_REINFORCE_STATE = 0x4cc; // int32_t
		constexpr auto STRID_MSG_REINFORCE = 0x4d0; // int32_t
	}

	namespace n_UGameEngine { // : UEngine
		constexpr auto MaxDeltaTime = 0xe28; // float
		constexpr auto ServerFlushLogInterval = 0xe2c; // float
		constexpr auto GameInstance = 0xe30; // UGameInstance*
	}

	namespace n_UMaterialExpressionCollectionParameter { // : UMaterialExpression
		constexpr auto Collection = 0x40; // UMaterialParameterCollection*
		constexpr auto ParameterName = 0x48; // FName
		constexpr auto ParameterId = 0x50; // FGuid
	}

	namespace n_UMM_Forge_Ability_Item { // : UWidgetBase
		constexpr auto Txt_Title = 0x2f0; // UMirTextBlock*
		constexpr auto Txt_BeforeValue = 0x2f8; // UMirTextBlock*
		constexpr auto Txt_AfterValue = 0x300; // UMirTextBlock*
		constexpr auto Txt_PlusValue = 0x308; // UMirTextBlock*
	}

	namespace n_UEnvQueryTest_Random { // : UEnvQueryTest
		constexpr auto TestOrder = 0x30; // int32_t
		constexpr auto TestPurpose = 0x34; // EEnvTestPurpose
		constexpr auto TestComment = 0x38; // FString
		constexpr auto MultipleContextFilterOp = 0x48; // EEnvTestFilterOperator
		constexpr auto MultipleContextScoreOp = 0x49; // EEnvTestScoreOperator
		constexpr auto FilterType = 0x4a; // EEnvTestFilterType
		constexpr auto BoolValue = 0x50; // FAIDataProviderBoolValue
		constexpr auto FloatValueMin = 0x80; // FAIDataProviderFloatValue
		constexpr auto FloatValueMax = 0xb0; // FAIDataProviderFloatValue
		constexpr auto ScoringEquation = 0xe1; // EEnvTestScoreEquation
		constexpr auto ClampMinType = 0xe2; // EEnvQueryTestClamping
		constexpr auto ClampMaxType = 0xe3; // EEnvQueryTestClamping
		constexpr auto NormalizationType = 0xe4; // EEQSNormalizationType
		constexpr auto ScoreClampMin = 0xe8; // FAIDataProviderFloatValue
		constexpr auto ScoreClampMax = 0x118; // FAIDataProviderFloatValue
		constexpr auto ScoringFactor = 0x148; // FAIDataProviderFloatValue
		constexpr auto ReferenceValue = 0x178; // FAIDataProviderFloatValue
		constexpr auto bDefineReferenceValue = 0x1a8; // bool
		constexpr auto bWorkOnFloatValues = 0x1b8; // char : 1
	}

	namespace n_UPluginCommandlet { // : UCommandlet
		constexpr auto HelpDescription = 0x28; // FString
		constexpr auto HelpUsage = 0x38; // FString
		constexpr auto HelpWebLink = 0x48; // FString
		constexpr auto HelpParamNames = 0x58; // TArray<FString>
		constexpr auto HelpParamDescriptions = 0x68; // TArray<FString>
		constexpr auto IsServer = 0x78; // char : 1
		constexpr auto IsClient = 0x78; // char : 1
		constexpr auto IsEditor = 0x78; // char : 1
		constexpr auto LogToConsole = 0x78; // char : 1
		constexpr auto ShowErrorCount = 0x78; // char : 1
		constexpr auto ShowProgress = 0x78; // char : 1
	}

	namespace n_UParticleModuleLifetime { // : UParticleModuleLifetimeBase
		constexpr auto LifeTime = 0x30; // FRawDistributionFloat
	}

	namespace n_ACameraRig_Crane { // : AActor
		constexpr auto CranePitch = 0x218; // float
		constexpr auto CraneYaw = 0x21c; // float
		constexpr auto CraneArmLength = 0x220; // float
		constexpr auto bLockMountPitch = 0x224; // bool
		constexpr auto bLockMountYaw = 0x225; // bool
		constexpr auto TransformComponent = 0x228; // USceneComponent*
		constexpr auto CraneYawControl = 0x230; // USceneComponent*
		constexpr auto CranePitchControl = 0x238; // USceneComponent*
		constexpr auto CraneCameraMount = 0x240; // USceneComponent*
	}

	namespace n_UMM_Dominion_Castle_Guild { // : UWidgetBase
		constexpr auto m_pIconGuild = 0x308; // UMM_GuildIcon*
		constexpr auto m_pTxtGuildName = 0x310; // UMirTextBlock*
		constexpr auto m_pTxtGuildMasterName = 0x318; // UMirTextBlock*
		constexpr auto m_pBtnGuildInfo = 0x320; // UMM_Common_Btn_Symbol*
		constexpr auto m_pWidgetOccupyDur = 0x328; // UHorizontalBox*
		constexpr auto m_pTxtOccupyDur = 0x330; // UMirTextBlock*
		constexpr auto m_pCommToolTip = 0x338; // UMM_Common_ToolTipBtn*
		constexpr auto m_pBtnStorage = 0x340; // UMM_Common_Btn*
		constexpr auto m_pTxtStorage = 0x348; // UMirTextBlock*
		constexpr auto m_pGoodsSlot0 = 0x350; // UMM_Dominion_Goods_Slot*
		constexpr auto m_pGoodsSlot1 = 0x358; // UMM_Dominion_Goods_Slot*
		constexpr auto m_pGoodsSlot2 = 0x360; // UMM_Dominion_Goods_Slot*
		constexpr auto m_pGoodsSlot3 = 0x368; // UMM_Dominion_Goods_Slot*
	}

	namespace n_ADirectingTrigger { // : AActivateTrigger
		constexpr auto m_SequencePlayID = 0x278; // int32_t
		constexpr auto m_DirectingState = 0x27c; // EDirectingTriggerType
	}

	namespace n_ULightComponent { // : ULightComponentBase
		constexpr auto Temperature = 0x250; // float
		constexpr auto MaxDrawDistance = 0x254; // float
		constexpr auto MaxDistanceFadeRange = 0x258; // float
		constexpr auto bUseTemperature = 0x25c; // char : 1
		constexpr auto ShadowMapChannel = 0x260; // int32_t
		constexpr auto MinRoughness = 0x268; // float
		constexpr auto SpecularScale = 0x26c; // float
		constexpr auto ShadowResolutionScale = 0x270; // float
		constexpr auto ShadowBias = 0x274; // float
		constexpr auto ShadowSlopeBias = 0x278; // float
		constexpr auto ShadowSharpen = 0x27c; // float
		constexpr auto ContactShadowLength = 0x280; // float
		constexpr auto ContactShadowLengthInWS = 0x284; // char : 1
		constexpr auto InverseSquaredFalloff = 0x284; // char : 1
		constexpr auto CastTranslucentShadows = 0x284; // char : 1
		constexpr auto bCastShadowsFromCinematicObjectsOnly = 0x284; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x284; // char : 1
		constexpr auto bForceCachedShadowsForMovablePrimitives = 0x284; // char : 1
		constexpr auto LightingChannels = 0x288; // FLightingChannels
		constexpr auto LightFunctionMaterial = 0x290; // UMaterialInterface*
		constexpr auto LightFunctionScale = 0x298; // FVector
		constexpr auto IESTexture = 0x2a8; // UTextureLightProfile*
		constexpr auto bUseIESBrightness = 0x2b0; // char : 1
		constexpr auto IESBrightnessScale = 0x2b4; // float
		constexpr auto LightFunctionFadeDistance = 0x2b8; // float
		constexpr auto DisabledBrightness = 0x2bc; // float
		constexpr auto bEnableLightShaftBloom = 0x2c0; // char : 1
		constexpr auto BloomScale = 0x2c4; // float
		constexpr auto BloomThreshold = 0x2c8; // float
		constexpr auto BloomMaxBrightness = 0x2cc; // float
		constexpr auto BloomTint = 0x2d0; // FColor
		constexpr auto bUseRayTracedDistanceFieldShadows = 0x2d4; // bool
		constexpr auto RayStartOffsetDepthScale = 0x2d8; // float
	}

	namespace n_UInterpTrackLinearColorProp { // : UInterpTrackLinearColorBase
		constexpr auto PropertyName = 0x90; // FName
	}

	namespace n_UMM_DeviceInfo { // : UWidgetBase
		constexpr auto m_bUse_NetworkType = 0x2e0; // bool
		constexpr auto m_bUse_Battery = 0x2e1; // bool
		constexpr auto m_bUse_Time = 0x2e2; // bool
		constexpr auto m_bUse_ExpSpacer = 0x2e3; // bool
		constexpr auto m_fUpdateSignalStrengthInterval = 0x2e4; // float
		constexpr auto m_fUpdateBatteryInterval = 0x2e8; // float
		constexpr auto m_fUpdateTimeInterval = 0x2ec; // float
		constexpr auto m_Spc_NetworkType = 0x308; // USpacer*
		constexpr auto m_Overlay_NetworkType = 0x310; // UPanelWidget*
		constexpr auto m_Img_WiFi = 0x318; // UMirImage*
		constexpr auto m_Txt_Mobile = 0x320; // UMirTextBlock*
		constexpr auto m_Spc_Battery = 0x328; // USpacer*
		constexpr auto m_Can_Battery = 0x330; // UPanelWidget*
		constexpr auto m_Prg_Battery = 0x338; // UMirProgressBar*
		constexpr auto m_Img_BatteryCharge = 0x340; // UMirImage*
		constexpr auto m_Txt_Battery = 0x348; // UMirTextBlock*
		constexpr auto m_Spc_Time = 0x350; // USpacer*
		constexpr auto m_Img_Time = 0x358; // UMirImage*
		constexpr auto m_Txt_Time = 0x360; // UMirTextBlock*
		constexpr auto m_Spc_Exp = 0x368; // USpacer*
		constexpr auto m_Hrz_Ping = 0x370; // UPanelWidget*
		constexpr auto m_Img_Ping = 0x378; // UMirImage*
		constexpr auto m_Txt_Ping = 0x380; // UMirTextBlock*
	}

	namespace n_UMM_GuildMemberSlot { // : UWidgetBase
		constexpr auto Portrait = 0x2e0; // UMM_GuildMemberPortrait*
		constexpr auto txt_nickname = 0x2e8; // UMirTextBlock*
		constexpr auto img_combat_power = 0x2f0; // UMirImage*
		constexpr auto txt_combat_power = 0x2f8; // UMirTextBlock*
		constexpr auto Btn_Main = 0x300; // UMirButton*
		constexpr auto img_online = 0x308; // UMirImage*
		constexpr auto btn_partner = 0x310; // UMM_Common_Btn_Symbol*
		constexpr auto portrait_partner = 0x318; // UMM_GuildMemberPortrait*
		constexpr auto img_partner = 0x320; // UMirImage*
		constexpr auto txt_partner = 0x328; // UMirTextBlock*
		constexpr auto GuildMemberSlotType = 0x330; // int32_t
		constexpr auto ani_effect = 0x338; // UWidgetAnimation*
	}

	namespace n_UWidgetBlueprintGeneratedClass { // : UBlueprintGeneratedClass
		constexpr auto WidgetTree = 0x300; // UWidgetTree*
		constexpr auto bAllowTemplate = 0x308; // char : 1
		constexpr auto bAllowDynamicCreation = 0x308; // char : 1
		constexpr auto bValidTemplate = 0x308; // char : 1
		constexpr auto bTemplateInitialized = 0x308; // char : 1
		constexpr auto bCookedTemplate = 0x308; // char : 1
		constexpr auto bClassRequiresNativeTick = 0x308; // char : 1
		constexpr auto Bindings = 0x310; // TArray<FDelegateRuntimeBinding>
		constexpr auto Animations = 0x320; // TArray<UWidgetAnimation*>
		constexpr auto NamedSlots = 0x330; // TArray<FName>
		constexpr auto TemplateAsset = 0x340; // UUserWidget*
		constexpr auto Template = 0x368; // UUserWidget*
	}

	namespace n_UWidgetNavigation { // : UObject
		constexpr auto Up = 0x28; // FWidgetNavigationData
		constexpr auto Down = 0x4c; // FWidgetNavigationData
		constexpr auto Left = 0x70; // FWidgetNavigationData
		constexpr auto Right = 0x94; // FWidgetNavigationData
		constexpr auto Next = 0xb8; // FWidgetNavigationData
		constexpr auto Previous = 0xdc; // FWidgetNavigationData
	}

	namespace n_UCurveLinearColorAtlas { // : UTexture2D
		constexpr auto TextureSize = 0x100; // uint32_t
		constexpr auto GradientCurves = 0x108; // TArray<UCurveLinearColor*>
	}

	namespace n_APointLight { // : ALight
		constexpr auto PointLightComponent = 0x228; // UPointLightComponent*
	}

	namespace n_UMM_PetEquipSlot { // : UWidgetBase
		constexpr auto m_Img_GradeBg = 0x300; // UMirImage*
		constexpr auto m_Img_Icon = 0x308; // UMirImage*
		constexpr auto m_Img_Tier = 0x310; // UMirImage*
		constexpr auto m_Txt_TranscendStep = 0x318; // UMirTextBlock*
		constexpr auto m_Img_Locked = 0x320; // UMirImage*
		constexpr auto m_Btn_Main = 0x328; // UMirButton*
		constexpr auto m_Can_EquipAbleEffect = 0x330; // UPanelWidget*
		constexpr auto m_Grid_EquippedEffect = 0x338; // UPanelWidget*
		constexpr auto m_Grid_SelectEffect = 0x340; // UPanelWidget*
		constexpr auto m_AniEquipAbleEffect = 0x348; // UWidgetAnimation*
	}

	namespace n_UMaterialFunctionInstance { // : UMaterialFunctionInterface
		constexpr auto Parent = 0x40; // UMaterialFunctionInterface*
		constexpr auto Base = 0x48; // UMaterialFunctionInterface*
		constexpr auto ScalarParameterValues = 0x50; // TArray<FScalarParameterValue>
		constexpr auto VectorParameterValues = 0x60; // TArray<FVectorParameterValue>
		constexpr auto TextureParameterValues = 0x70; // TArray<FTextureParameterValue>
		constexpr auto FontParameterValues = 0x80; // TArray<FFontParameterValue>
		constexpr auto StaticSwitchParameterValues = 0x90; // TArray<FStaticSwitchParameter>
		constexpr auto StaticComponentMaskParameterValues = 0xa0; // TArray<FStaticComponentMaskParameter>
		constexpr auto RuntimeVirtualTextureParameterValues = 0xb0; // TArray<FRuntimeVirtualTextureParameterValue>
	}

	namespace n_UMM_Popup_Appearance_Slot { // : UWidgetBase
		constexpr auto Txt_Name = 0x2e0; // UMirTextBlock*
		constexpr auto Txt_Value = 0x2e8; // UMirTextBlock*
		constexpr auto Img_Icon = 0x2f0; // UMirImage*
	}

	namespace n_UMM_TotalMenu { // : UWidgetBase
		constexpr auto m_arTotalMenuSlot = 0x300; // TArray<UMM_TotalMenu_SlotBase*>
		constexpr auto m_AniStart = 0x310; // UWidgetAnimation*
		constexpr auto m_AniShowSubSlot_1 = 0x318; // UWidgetAnimation*
		constexpr auto m_AniShowSubSlot_2 = 0x320; // UWidgetAnimation*
		constexpr auto m_AniShowSubSlot_3 = 0x328; // UWidgetAnimation*
		constexpr auto m_AniShowSubSlot_4 = 0x330; // UWidgetAnimation*
		constexpr auto m_AniShowSubSlot_5 = 0x338; // UWidgetAnimation*
		constexpr auto m_CB_Close = 0x340; // UMM_Common_Btn_Symbol*
		constexpr auto m_Goods_Detail = 0x348; // UMM_Goods_Detail*
		constexpr auto m_Btn_Screen = 0x350; // UMirButton*
		constexpr auto m_Canvas_Info = 0x358; // UMirCanvasPanel*
		constexpr auto m_Btn_InfoClose = 0x360; // UMM_Common_Btn_Symbol*
		constexpr auto m_Btn_Achieve = 0x368; // UMM_Common_Btn*
		constexpr auto m_Txt_CostValue = 0x370; // UMirTextBlock*
		constexpr auto m_Img_Icon = 0x378; // UMirImage*
		constexpr auto m_Txt_Desc = 0x380; // UMirTextBlock*
		constexpr auto m_Canvas_SimpleGraphic = 0x388; // UMirCanvasPanel*
		constexpr auto m_Btn_SimpleGraphicClose = 0x390; // UMM_Common_Btn_Symbol*
		constexpr auto m_Check_Graphic = 0x398; // UMirCheckBox*
		constexpr auto m_Check_Name = 0x3a0; // UMirCheckBox*
		constexpr auto m_Check_GuildMark = 0x3a8; // UMirCheckBox*
		constexpr auto m_Can_ServerTime = 0x3b0; // UPanelWidget*
		constexpr auto m_Txt_ServerTime = 0x3b8; // UMirTextBlock*
	}

	namespace n_AMM_GuildWarFlagObject { // : AMM_ObjectBase
		constexpr auto m_bPoolingObject = 0x428; // bool
		constexpr auto ObjectNameTagWidget = 0x458; // UObjectNameTagWidget*
		constexpr auto WidgetComp = 0x460; // UWidgetComponent*
		constexpr auto NameTagWidgetComponent = 0x468; // UWidgetComponent*
		constexpr auto InteractionWidgetComponent = 0x470; // UWidgetComponent*
		constexpr auto LoopEffectComponent = 0x480; // UParticleSystemComponent*
		constexpr auto m_LoopParticleSystem = 0x488; // UParticleSystem*
		constexpr auto OperatingBtnWidget = 0x4c8; // UOperatingButtonWidget*
	}

	namespace n_UARTextureCameraImage { // : UARTexture
		constexpr auto TextureType = 0xd0; // EARTextureType
		constexpr auto Timestamp = 0xd4; // float
		constexpr auto ExternalTextureGuid = 0xd8; // FGuid
		constexpr auto Size = 0xe8; // FVector2D
	}

	namespace n_UARTrackedGeometry { // : UObject
		constexpr auto UniqueId = 0x28; // FGuid
		constexpr auto LocalToTrackingTransform = 0x40; // FTransform
		constexpr auto LocalToAlignedTrackingTransform = 0x70; // FTransform
		constexpr auto TrackingState = 0xa0; // EARTrackingState
		constexpr auto UnderlyingMesh = 0xb0; // UMRMeshComponent*
		constexpr auto ObjectClassification = 0xb8; // EARObjectClassification
		constexpr auto LastUpdateFrameNumber = 0xd0; // int32_t
		constexpr auto DebugName = 0xe0; // FName
	}

	namespace n_UMM_UserEvent_Item_Slot { // : UMM_Slot_Base
		constexpr auto m_Img_GradeBgEffect = 0x3e8; // UMirImage*
		constexpr auto m_ImgDisabled = 0x3f0; // UMirImage*
		constexpr auto m_ImgSeleted = 0x3f8; // UMirImage*
		constexpr auto m_ImgCurrSelected = 0x400; // UMirImage*
		constexpr auto m_TxtCount = 0x408; // UMirTextBlock*
		constexpr auto m_Txt_Day = 0x410; // UMirTextBlock*
		constexpr auto m_Img_Indicator = 0x418; // UMirImage*
		constexpr auto m_Grid_SelectEffect = 0x420; // UGridPanel*
		constexpr auto m_AniSelect = 0x428; // UWidgetAnimation*
	}

	namespace n_AMM_GachaInteractionObjectActor { // : AActor
		constexpr auto TestGacha = 0x218; // EGachaBoxType
		constexpr auto TestGachaResult = 0x219; // EGachaResultType
		constexpr auto TestItemID = 0x21c; // int32_t
		constexpr auto m_pPetCameraData = 0x220; // UPetCameraData*
		constexpr auto GachaMeshComponent = 0x228; // USkeletalMeshComponent*
		constexpr auto ResultMeshComponent = 0x230; // USkeletalMeshComponent*
		constexpr auto DefaultParticleComponent = 0x238; // UParticleSystemComponent*
		constexpr auto InteractionParticleComponent = 0x240; // UParticleSystemComponent*
		constexpr auto GachaDirectingData = 0x248; // UGachaDirectingData*
		constexpr auto m_pIdleAnimation = 0x250; // UAnimSequenceBase*
		constexpr auto m_pOpenAnimation = 0x258; // UAnimSequenceBase*
		constexpr auto m_pEndAnimation = 0x260; // UAnimSequenceBase*
		constexpr auto GachaManagerActor = 0x268; // AMM_GachaManagerActor*
		constexpr auto m_pInteractionEffect = 0x270; // UParticleSystem*
		constexpr auto m_pInteractionOpenEffect = 0x278; // UParticleSystem*
		constexpr auto m_pInteractionMaterialEffect = 0x280; // UParticleSystem*
		constexpr auto m_pResultAnimation = 0x288; // UObject*
	}

	namespace n_UMM_Hud_Chat_EmptyGuild { // : UWidgetBase
		constexpr auto Btn_JoinGuild = 0x2e0; // UMM_Common_Btn*
	}

	namespace n_AMiniGame_ManagerActor { // : AActor
		constexpr auto m_MiniGameData = 0x218; // UMiniGameData*
		constexpr auto m_BackgroundActor = 0x220; // AMiniGame_BackgroundActor*
		constexpr auto m_NextBackgroundActor = 0x228; // AMiniGame_BackgroundActor*
		constexpr auto m_PlayerActor = 0x230; // AMiniGame_PlayerActor*
		constexpr auto m_arMonsterActor = 0x238; // TArray<AMiniGame_MonsterActor*>
		constexpr auto m_MiniGameWidget = 0x248; // UMM_MiniGameWidget*
		constexpr auto m_EffectArray = 0x250; // TArray<UPaperFlipbook*>
		constexpr auto m_bBpTickFlag = 0x260; // bool
		constexpr auto m_fCameraProductionFlag = 0x261; // bool
		constexpr auto m_fProductionCameraPos = 0x264; // float
		constexpr auto m_fProductionPlayerPos = 0x268; // float
		constexpr auto m_fPatchEndDelay = 0x26c; // float
	}

	namespace n_UExpandableArea { // : UWidget
		constexpr auto Style = 0x110; // FExpandableAreaStyle
		constexpr auto BorderBrush = 0x230; // FSlateBrush
		constexpr auto BorderColor = 0x2b8; // FSlateColor
		constexpr auto bIsExpanded = 0x2e0; // bool
		constexpr auto MaxHeight = 0x2e4; // float
		constexpr auto HeaderPadding = 0x2e8; // FMargin
		constexpr auto AreaPadding = 0x2f8; // FMargin
		constexpr auto OnExpansionChanged = 0x308; // FScriptMulticastDelegate
		constexpr auto HeaderContent = 0x318; // UWidget*
		constexpr auto BodyContent = 0x320; // UWidget*
	}

	namespace n_UGeometryCache { // : UObject
		constexpr auto Materials = 0x30; // TArray<UMaterialInterface*>
		constexpr auto Tracks = 0x40; // TArray<UGeometryCacheTrack*>
		constexpr auto StartFrame = 0x60; // int32_t
		constexpr auto EndFrame = 0x64; // int32_t
	}

	namespace n_UStaticMesh { // : UStreamableRenderAsset
		constexpr auto MinLOD = 0x60; // FPerPlatformInt
		constexpr auto LpvBiasMultiplier = 0x64; // float
		constexpr auto StaticMaterials = 0x68; // TArray<FStaticMaterial>
		constexpr auto LightmapUVDensity = 0x78; // float
		constexpr auto LightMapResolution = 0x7c; // int32_t
		constexpr auto LightMapCoordinateIndex = 0x80; // int32_t
		constexpr auto DistanceFieldSelfShadowBias = 0x84; // float
		constexpr auto BodySetup = 0x88; // UBodySetup*
		constexpr auto LODForCollision = 0x90; // int32_t
		constexpr auto bGenerateMeshDistanceField = 0x94; // char : 1
		constexpr auto bStripComplexCollisionForConsole = 0x94; // char : 1
		constexpr auto bHasNavigationData = 0x94; // char : 1
		constexpr auto bSupportUniformlyDistributedSampling = 0x94; // char : 1
		constexpr auto bIsBuiltAtRuntime = 0x94; // char : 1
		constexpr auto bAllowCPUAccess = 0x94; // char : 1
		constexpr auto bSupportGpuUniformlyDistributedSampling = 0x94; // char : 1
		constexpr auto Sockets = 0xb8; // TArray<UStaticMeshSocket*>
		constexpr auto PositiveBoundsExtension = 0xd8; // FVector
		constexpr auto NegativeBoundsExtension = 0xe4; // FVector
		constexpr auto ExtendedBounds = 0xf0; // FBoxSphereBounds
		constexpr auto ElementToIgnoreForTexFactor = 0x10c; // int32_t
		constexpr auto AssetUserData = 0x110; // TArray<UAssetUserData*>
		constexpr auto EditableMesh = 0x128; // UObject*
		constexpr auto NavCollision = 0x130; // UNavCollisionBase*
	}

	namespace n_UARTextureCameraDepth { // : UARTexture
		constexpr auto DepthQuality = 0xf0; // EARDepthQuality
		constexpr auto DepthAccuracy = 0xf1; // EARDepthAccuracy
		constexpr auto bIsTemporallySmoothed = 0xf2; // bool
	}

	namespace n_ACharacter { // : APawn
		constexpr auto Mesh = 0x278; // USkeletalMeshComponent*
		constexpr auto CharacterMovement = 0x280; // UCharacterMovementComponent*
		constexpr auto CapsuleComponent = 0x288; // UCapsuleComponent*
		constexpr auto BasedMovement = 0x290; // FBasedMovementInfo
		constexpr auto ReplicatedBasedMovement = 0x2c0; // FBasedMovementInfo
		constexpr auto AnimRootMotionTranslationScale = 0x2f0; // float
		constexpr auto BaseTranslationOffset = 0x2f4; // FVector
		constexpr auto BaseRotationOffset = 0x300; // FQuat
		constexpr auto ReplicatedServerLastTransformUpdateTimeStamp = 0x310; // float
		constexpr auto ReplayLastTransformUpdateTimeStamp = 0x314; // float
		constexpr auto ReplicatedMovementMode = 0x318; // char
		constexpr auto bInBaseReplication = 0x319; // bool
		constexpr auto CrouchedEyeHeight = 0x31c; // float
		constexpr auto bIsCrouched = 0x320; // char : 1
		constexpr auto bProxyIsJumpForceApplied = 0x320; // char : 1
		constexpr auto bPressedJump = 0x320; // char : 1
		constexpr auto bClientUpdating = 0x320; // char : 1
		constexpr auto bClientWasFalling = 0x320; // char : 1
		constexpr auto bClientResimulateRootMotion = 0x320; // char : 1
		constexpr auto bClientResimulateRootMotionSources = 0x320; // char : 1
		constexpr auto bSimGravityDisabled = 0x320; // char : 1
		constexpr auto bClientCheckEncroachmentOnNetUpdate = 0x321; // char : 1
		constexpr auto bServerMoveIgnoreRootMotion = 0x321; // char : 1
		constexpr auto bWasJumping = 0x321; // char : 1
		constexpr auto JumpKeyHoldTime = 0x324; // float
		constexpr auto JumpForceTimeRemaining = 0x328; // float
		constexpr auto ProxyJumpForceStartedTime = 0x32c; // float
		constexpr auto JumpMaxHoldTime = 0x330; // float
		constexpr auto JumpMaxCount = 0x334; // int32_t
		constexpr auto JumpCurrentCount = 0x338; // int32_t
		constexpr auto OnReachedJumpApex = 0x340; // FScriptMulticastDelegate
		constexpr auto MovementModeChangedDelegate = 0x360; // FScriptMulticastDelegate
		constexpr auto OnCharacterMovementUpdated = 0x370; // FScriptMulticastDelegate
		constexpr auto SavedRootMotion = 0x380; // FRootMotionSourceGroup
		constexpr auto ClientRootMotionParams = 0x480; // FRootMotionMovementParams
		constexpr auto RootMotionRepMoves = 0x4c0; // TArray<FSimulatedRootMotionReplicatedMove>
		constexpr auto RepRootMotion = 0x4d0; // FRepRootMotionMontage
	}

	namespace n_UMM_B_NPC_Exchange { // : UWidgetBase
		constexpr auto HorizonBtn = 0x2f0; // UMM_Exchange_Tab_HorizonBtn*
		constexpr auto SubMenuTab = 0x2f8; // UMM_CommonVerticalTabSet*
		constexpr auto Toggle_MakeFilter = 0x300; // UMM_Common_ToggleBtn*
		constexpr auto Txt_ListName = 0x308; // UMirTextBlock*
		constexpr auto ScrollBoxItem = 0x310; // UMirScrollBox*
		constexpr auto VerticalBox_Target = 0x318; // UVerticalBox*
		constexpr auto MakeSlotList_From = 0x320; // TArray<UMM_Item_Make_List_Slot*>
		constexpr auto MakeSlotList_Target = 0x330; // TArray<UMM_NPC_Make_Slot*>
		constexpr auto Grid_MaterialInfo = 0x340; // UPanelWidget*
		constexpr auto Grid_MaterialCost = 0x348; // UPanelWidget*
		constexpr auto Grid_MaterialExe = 0x350; // UPanelWidget*
		constexpr auto Txt_Empty = 0x358; // UMirTextBlock*
		constexpr auto MaterialInfo_From = 0x360; // UMM_Slot_Registered_Circle*
		constexpr auto MaterialInfo_To = 0x368; // UMM_Slot_Registered_Circle*
		constexpr auto Txt_Name_MaterialInfo_From = 0x370; // UMirTextBlock*
		constexpr auto Txt_Name_MaterialInfo_To = 0x378; // UMirTextBlock*
		constexpr auto Grid_MaterialCost_Sub = 0x380; // TArray<UPanelWidget*>
		constexpr auto Img_MaterialCost_Type = 0x390; // TArray<UMirImage*>
		constexpr auto Txt_MaterialCost_Value = 0x3a0; // TArray<UMirTextBlock*>
		constexpr auto BtnMain_MaterialCost = 0x3b0; // TArray<UMirButton*>
		constexpr auto Btn_MaterialCost = 0x3c0; // TArray<UMM_Common_Btn_Symbol*>
		constexpr auto ItemSlider = 0x3d0; // UMM_Item_Make_Slider*
		constexpr auto Btn_MakeItem = 0x3d8; // UMM_Common_Btn*
		constexpr auto m_OpenAni = 0x3e0; // UWidgetAnimation*
		constexpr auto m_CloseAni = 0x3e8; // UWidgetAnimation*
		constexpr auto m_MaxSlotCount = 0x3f0; // int32_t
		constexpr auto m_CurrentSlotCount = 0x3f4; // int32_t
		constexpr auto m_CostType = 0x3f8; // int32_t
		constexpr auto STRING_FILTER_EXCHANGE = 0x3fc; // int32_t
	}

	namespace n_UVirtualTexturePoolConfig { // : UObject
		constexpr auto DefaultSizeInMegabyte = 0x28; // int32_t
		constexpr auto Pools = 0x30; // TArray<FVirtualTextureSpacePoolConfig>
	}

	namespace n_AEmitter { // : AActor
		constexpr auto ParticleSystemComponent = 0x218; // UParticleSystemComponent*
		constexpr auto bDestroyOnSystemFinish = 0x220; // char : 1
		constexpr auto bPostUpdateTickGroup = 0x220; // char : 1
		constexpr auto bCurrentlyActive = 0x220; // char : 1
		constexpr auto OnParticleSpawn = 0x228; // FScriptMulticastDelegate
		constexpr auto OnParticleBurst = 0x238; // FScriptMulticastDelegate
		constexpr auto OnParticleDeath = 0x248; // FScriptMulticastDelegate
		constexpr auto OnParticleCollide = 0x258; // FScriptMulticastDelegate
	}

	namespace n_UMM_Occupation_Minimap { // : UWidgetBase
		constexpr auto MinimapFeatureAvailability = 0x300; // EMinimapFeatureAvailability
		constexpr auto MinimapSize = 0x304; // FVector2D
		constexpr auto m_Player = 0x310; // UMM_Map_Player*
		constexpr auto m_pPlayerSlot = 0x318; // UCanvasPanelSlot*
		constexpr auto Img_Minimap = 0x320; // UMirImage*
		constexpr auto Panel_Icon = 0x328; // UCanvasPanel*
		constexpr auto Btn_TouchBound = 0x330; // UMirImage*
		constexpr auto EffectPanelList = 0x338; // TArray<UCanvasPanel*>
		constexpr auto m_UserImageMap = 0x348; // TMap<uint64_t, UImage*>
		constexpr auto m_MinimapIconMap = 0x398; // TMap<uint64_t, UMM_Occupation_Minimap_Icon*>
		constexpr auto m_MinimapRevivalIconMap = 0x3e8; // TMap<int32_t, UMM_Occupation_Minimap_Icon*>
		constexpr auto m_SelectRevivalIcon = 0x438; // UImage*
		constexpr auto m_CharacterDieIcon = 0x440; // UImage*
		constexpr auto m_PreviousScreenPos = 0x448; // TMap<uint64_t, FVector2D>
		constexpr auto m_DestScreenPos = 0x498; // TMap<uint64_t, FVector2D>
		constexpr auto m_TouchIndex = 0x568; // int32_t
		constexpr auto m_StageID = 0x56c; // int32_t
		constexpr auto m_SelectCorpsNumber = 0x570; // int32_t
		constexpr auto m_GuildWarType = 0x574; // int32_t
		constexpr auto m_SelectGuildUID = 0x578; // uint64_t
		constexpr auto m_MapRatio = 0x580; // FVector2D
		constexpr auto m_MapSize = 0x588; // FVector2D
		constexpr auto m_MapImageSize = 0x590; // FVector2D
		constexpr auto m_MapCoordinate = 0x598; // FMargin
		constexpr auto m_LastGeometry = 0x5a8; // FGeometry
		constexpr auto m_DeltaTime = 0x5e0; // float
		constexpr auto m_Grid_Move = 0x5e8; // UPanelWidget*
		constexpr auto m_Btn_Move = 0x5f0; // UMirButton*
		constexpr auto m_TxtMove = 0x5f8; // UMirTextBlock*
	}

	namespace n_UMM_Party_InviteListSlot { // : UWidgetBase
		constexpr auto m_Grid_User = 0x2e8; // UPanelWidget*
		constexpr auto m_Grid_Info = 0x2f0; // UPanelWidget*
		constexpr auto m_Img_Icn_Number = 0x2f8; // UMirImage*
		constexpr auto m_Img_Icn_Leader = 0x300; // UMirImage*
		constexpr auto m_Img_Icn_Class = 0x308; // UMirImage*
		constexpr auto m_Txt_Level = 0x310; // UMirTextBlock*
		constexpr auto m_Txt_Nickname = 0x318; // UMirTextBlock*
		constexpr auto m_Txt_CombatPoint = 0x320; // UMirTextBlock*
		constexpr auto m_Grid_Guild = 0x328; // UPanelWidget*
		constexpr auto m_Img_Guild_Frame = 0x330; // UMirImage*
		constexpr auto m_Img_Guild_Symbol = 0x338; // UMirImage*
		constexpr auto m_Txt_GuildName = 0x340; // UMirTextBlock*
		constexpr auto m_Grid_Mine_02 = 0x348; // UPanelWidget*
		constexpr auto m_Txt_Mine = 0x350; // UMirTextBlock*
		constexpr auto m_Img_Bg_Mine = 0x358; // UMirImage*
		constexpr auto m_Grid_Btn = 0x360; // UPanelWidget*
		constexpr auto m_Grid_Member = 0x368; // UPanelWidget*
		constexpr auto m_Grid_Logout = 0x370; // UPanelWidget*
		constexpr auto m_Grid_Detail = 0x378; // UPanelWidget*
		constexpr auto m_Txt_Logout = 0x380; // UMirTextBlock*
		constexpr auto m_C_Btn_Invite = 0x388; // UMM_Common_Btn*
		constexpr auto m_C_Btn_Detail = 0x390; // UMM_Common_Btn_IconText*
		constexpr auto m_Btn_Main = 0x398; // UMirButton*
		constexpr auto m_Img_Select = 0x3a0; // UMirImage*
		constexpr auto m_ChatChannelName = 0x3a8; // UMirTextBlock*
	}

	namespace n_UMM_Mastery_Info { // : UWidgetBase
		constexpr auto mMasteryTitle = 0x300; // UMM_Mastery_UpgradeInfo*
		constexpr auto mAbilityList = 0x308; // TArray<UMM_Mastery_Ability_Slot*>
		constexpr auto mTrainingPanel = 0x318; // UMirCanvasPanel*
		constexpr auto mTrainingSlotPanel = 0x320; // UMirCanvasPanel*
		constexpr auto mMatTrainingSlotList = 0x328; // TArray<UMM_Slot_Material_Item*>
		constexpr auto mRTxtSuccessPercent = 0x338; // UMirRichTextBlock*
		constexpr auto mCBTrainingCost = 0x340; // UMM_Common_Btn_Cost*
		constexpr auto mUpgradePanel = 0x348; // UMirCanvasPanel*
		constexpr auto mRTxtNeedCharLevel = 0x350; // UMirRichTextBlock*
		constexpr auto mFirstMatItemPanel = 0x358; // UMirCanvasPanel*
		constexpr auto mSecondMatItemPanel = 0x360; // UMirCanvasPanel*
		constexpr auto mMatUpgradeSlotList = 0x368; // TArray<UMM_Slot_Material_Item*>
		constexpr auto mImgGuideList = 0x378; // TArray<UMirImage*>
		constexpr auto mAniGuideList = 0x388; // TArray<UWidgetAnimation*>
		constexpr auto mCBUpgradeCost = 0x398; // UMM_Common_Btn_Cost*
	}

	namespace n_UMM_CommonVerticalTabBtn_Symbol { // : UWidgetBase
		constexpr auto m_Txt_TabName = 0x2f0; // UMirTextBlock*
		constexpr auto m_Img_Locked = 0x2f8; // UMirImage*
		constexpr auto m_Img_Selected = 0x300; // UMirImage*
		constexpr auto m_Btn_Main = 0x308; // UMirButton*
		constexpr auto m_Img_Indicator = 0x310; // UMirImage*
		constexpr auto m_Grid_Effect_1 = 0x318; // UPanelWidget*
		constexpr auto m_Grid_Effect_2 = 0x320; // UPanelWidget*
		constexpr auto m_Txt_Name = 0x328; // UMirTextBlock*
		constexpr auto m_Img_Icon = 0x330; // UMirImage*
		constexpr auto m_Img_SelectedBG = 0x338; // UMirImage*
		constexpr auto TypeID = 0x340; // int32_t
		constexpr auto CostTypeID = 0x344; // int32_t
	}

	namespace n_APaperFlipbookActor { // : AActor
		constexpr auto RenderComponent = 0x218; // UPaperFlipbookComponent*
	}

	namespace n_UMiniGameData { // : UDataAsset
		constexpr auto m_fSpawnActorLocZ = 0x30; // float
		constexpr auto m_fSpawnActorLocZ_Factor = 0x34; // float
		constexpr auto m_fCameraWidth = 0x38; // float
		constexpr auto m_fChangeDirectionBorder = 0x3c; // float
		constexpr auto m_fStartMoveBorder = 0x40; // float
		constexpr auto m_fMaxWaveCount = 0x44; // float
		constexpr auto m_fMaxKillPoint = 0x48; // float
		constexpr auto m_fNextWaveMaveSpeed = 0x4c; // float
		constexpr auto m_nShowNoticeTime = 0x50; // float
		constexpr auto m_nBestScoreMsg = 0x54; // int32_t
		constexpr auto m_nNowScoreMsg = 0x58; // int32_t
		constexpr auto m_nWaveStartMsg = 0x5c; // int32_t
		constexpr auto m_nNextWaveMsg = 0x60; // int32_t
		constexpr auto m_nFailMsg = 0x64; // int32_t
		constexpr auto m_nRestartMsg = 0x68; // int32_t
		constexpr auto m_fMonsterGenPosition_R = 0x6c; // float
		constexpr auto m_fMonsterGenPosition_L = 0x70; // float
		constexpr auto m_fScrollSpeed_Back = 0x74; // float
		constexpr auto m_fScrollSpeed_Front = 0x78; // float
		constexpr auto m_fBackgroundImageSize = 0x7c; // float
		constexpr auto m_fStartSeqCharacterPosition = 0x80; // float
		constexpr auto m_fStartSeqMonsterPosition = 0x84; // float
		constexpr auto m_fStartSeqCameraPosition1 = 0x88; // float
		constexpr auto m_fStartSeqCameraPosition2 = 0x8c; // float
		constexpr auto m_fStartSeqCameraMoveTime1 = 0x90; // float
		constexpr auto m_fStartSeqCameraMoveTime2 = 0x94; // float
		constexpr auto m_fStartSeqCameraWaitingTime = 0x98; // float
		constexpr auto m_fPlayerHalfSize = 0x9c; // float
		constexpr auto m_fPlayerMapEndSize = 0xa0; // float
		constexpr auto m_fCharacterHp = 0xa4; // float
		constexpr auto m_fCharacterHpRecovery = 0xa8; // float
		constexpr auto m_fPlayerSpeed = 0xac; // float
		constexpr auto m_fPlayerAvoidSpeed = 0xb0; // float
		constexpr auto m_fCharacterDodgeCollTime = 0xb4; // float
		constexpr auto m_fCharacterAttackComboDelay = 0xb8; // float
		constexpr auto m_fCharacterAttack1 = 0xbc; // float
		constexpr auto m_fCharacterAttack1Range = 0xc0; // float
		constexpr auto m_fCharacterAttack1Timing = 0xc4; // float
		constexpr auto m_fCharacterAttack1MoveRange = 0xc8; // float
		constexpr auto m_fCharacterAttack1MoveStartTime = 0xcc; // float
		constexpr auto m_fCharacterAttack1MoveEndTime = 0xd0; // float
		constexpr auto m_fCharacterAttack2 = 0xd4; // float
		constexpr auto m_fCharacterAttack2Range = 0xd8; // float
		constexpr auto m_fCharacterAttack2Timing = 0xdc; // float
		constexpr auto m_fCharacterAttack2MoveRange = 0xe0; // float
		constexpr auto m_fCharacterAttack2MoveStartTime = 0xe4; // float
		constexpr auto m_fCharacterAttack2MoveEndTime = 0xe8; // float
		constexpr auto m_fCharacterAttack3 = 0xec; // float
		constexpr auto m_fCharacterAttack3Range = 0xf0; // float
		constexpr auto m_fCharacterAttack3Timing = 0xf4; // float
		constexpr auto m_fCharacterAttack3MoveRange = 0xf8; // float
		constexpr auto m_fCharacterAttack3MoveStartTime = 0xfc; // float
		constexpr auto m_fCharacterAttack3MoveEndTime = 0x100; // float
		constexpr auto m_fCharacterSternHpRate = 0x104; // float
		constexpr auto m_fCharacterSternTime = 0x108; // float
		constexpr auto m_fCharacterHitRate = 0x10c; // float
		constexpr auto m_fMonsterGenCount_Same = 0x110; // float
		constexpr auto m_fMonsterGenCount_Max = 0x114; // float
		constexpr auto m_fMonsterGenCount_Increase = 0x118; // float
		constexpr auto m_fMonsterGenTime_Max = 0x11c; // float
		constexpr auto m_fMonsterGenTime_Decrease = 0x120; // float
		constexpr auto m_fMonsterGenTime_Min = 0x124; // float
		constexpr auto m_fAdvMonster_Gen = 0x128; // int32_t
		constexpr auto m_fBossMonster_Gen = 0x12c; // int32_t
		constexpr auto m_fNorMonsterHalfSize = 0x130; // float
		constexpr auto m_fAdvMonsterHalfSize = 0x134; // float
		constexpr auto m_fBossMonsterHalfSize = 0x138; // float
		constexpr auto m_fNorMonsterHP = 0x13c; // float
		constexpr auto m_fAdvMonsterHP = 0x140; // float
		constexpr auto m_fBossMonsterHP = 0x144; // float
		constexpr auto m_fNorMonsterHPRecovery = 0x148; // float
		constexpr auto m_fAdvMonsterHPRecovery = 0x14c; // float
		constexpr auto m_fBossMonsterHPRecovery = 0x150; // float
		constexpr auto m_fNorMonsterMoveSpeed = 0x154; // float
		constexpr auto m_fAdvMonsterMoveSpeed = 0x158; // float
		constexpr auto m_fBossMonsterMoveSpeed = 0x15c; // float
		constexpr auto m_fNorMonsterAttackTime1 = 0x160; // float
		constexpr auto m_fAdvMonsterAttackTime1 = 0x164; // float
		constexpr auto m_fBossMonsterAttackTime1 = 0x168; // float
		constexpr auto m_fNorMonsterAttack1 = 0x16c; // float
		constexpr auto m_fAdvMonsterAttack1 = 0x170; // float
		constexpr auto m_fBossMonsterAttack1 = 0x174; // float
		constexpr auto m_fNorMonsterAttackIncrease1 = 0x178; // float
		constexpr auto m_fAdvMonsterAttackIncrease1 = 0x17c; // float
		constexpr auto m_fBossMonsterAttackIncrease1 = 0x180; // float
		constexpr auto m_fNorMonsterAttackRange1 = 0x184; // float
		constexpr auto m_fAdvMonsterAttackRange1 = 0x188; // float
		constexpr auto m_fBossMonsterAttackRange1 = 0x18c; // float
		constexpr auto m_fNorMonsterAttack2 = 0x190; // float
		constexpr auto m_fAdvMonsterAttack2 = 0x194; // float
		constexpr auto m_fBossMonsterAttack2 = 0x198; // float
		constexpr auto m_fNorMonsterAttackIncrease2 = 0x19c; // float
		constexpr auto m_fAdvMonsterAttackIncrease2 = 0x1a0; // float
		constexpr auto m_fBossMonsterAttackIncrease2 = 0x1a4; // float
		constexpr auto m_fNorMonsterAttackRange2 = 0x1a8; // float
		constexpr auto m_fAdvMonsterAttackRange2 = 0x1ac; // float
		constexpr auto m_fBossMonsterAttackRange2 = 0x1b0; // float
		constexpr auto m_fNorMonsterAttack3 = 0x1b4; // float
		constexpr auto m_fAdvMonsterAttack3 = 0x1b8; // float
		constexpr auto m_fBossMonsterAttack3 = 0x1bc; // float
		constexpr auto m_fNorMonsterAttackIncrease3 = 0x1c0; // float
		constexpr auto m_fAdvMonsterAttackIncrease3 = 0x1c4; // float
		constexpr auto m_fBossMonsterAttackIncrease3 = 0x1c8; // float
		constexpr auto m_fNorMonsterAttackRange3 = 0x1cc; // float
		constexpr auto m_fAdvMonsterAttackRange3 = 0x1d0; // float
		constexpr auto m_fBossMonsterAttackRange3 = 0x1d4; // float
		constexpr auto m_fNorMonsterAttackSpeed = 0x1d8; // float
		constexpr auto m_fAdvMonsterAttackSpeed = 0x1dc; // float
		constexpr auto m_fBossMonsterAttackSpeed = 0x1e0; // float
		constexpr auto m_fNorMonsterHitTime = 0x1e4; // float
		constexpr auto m_fAdvMonsterHitTime = 0x1e8; // float
		constexpr auto m_fBossMonsterHitTime = 0x1ec; // float
		constexpr auto m_fNorMonsterNuckBackDis = 0x1f0; // float
		constexpr auto m_fAdvMonsterNuckBackDis = 0x1f4; // float
		constexpr auto m_fBossMonsterNuckBackDis = 0x1f8; // float
		constexpr auto m_fNorMonsterNuckBackTime = 0x1fc; // float
		constexpr auto m_fAdvMonsterNuckBackTime = 0x200; // float
		constexpr auto m_fBossMonsterNuckBackTime = 0x204; // float
		constexpr auto m_fNorMonsterDeathNuckBackDis = 0x208; // float
		constexpr auto m_fAdvMonsterDeathNuckBackDis = 0x20c; // float
		constexpr auto m_fBossMonsterDeathNuckBackDis = 0x210; // float
		constexpr auto m_fNorMonsterDeathNuckBackTime = 0x214; // float
		constexpr auto m_fAdvMonsterDeathNuckBackTime = 0x218; // float
		constexpr auto m_fBossMonsterDeathNuckBackTime = 0x21c; // float
		constexpr auto m_fNorMonsterKillPoint = 0x220; // float
		constexpr auto m_fAdvMonsterKillPoint = 0x224; // float
		constexpr auto m_fBossMonsterKillPoint = 0x228; // float
		constexpr auto m_NorMonsterColor = 0x22c; // FLinearColor
		constexpr auto m_AdvMonsterColor = 0x23c; // FLinearColor
		constexpr auto m_BossMonsterColor = 0x24c; // FLinearColor
		constexpr auto m_MonsterHitBlankColor = 0x25c; // FLinearColor
		constexpr auto m_fNorMonsterScale = 0x26c; // float
		constexpr auto m_fAdvMonsterScale = 0x270; // float
		constexpr auto m_fBossMonsterScale = 0x274; // float
		constexpr auto m_fMonsterHitBlankStart = 0x278; // float
		constexpr auto m_fMonsterHitBlankEnd = 0x27c; // float
		constexpr auto m_fDieMonsterBlankStart_2 = 0x280; // float
		constexpr auto m_fDieMonsterBlankEnd_2 = 0x284; // float
		constexpr auto m_fDieMonsterBlankStart_3 = 0x288; // float
		constexpr auto m_fDieMonsterBlankEnd_3 = 0x28c; // float
		constexpr auto m_vEffectScale_PlayerAtk1 = 0x290; // FVector
		constexpr auto m_vEffectLoc_PlayerAtk1 = 0x29c; // FVector
		constexpr auto m_fEffectDelay_PlayerAtk1 = 0x2a8; // float
		constexpr auto m_vEffectScale_PlayerAtk2 = 0x2ac; // FVector
		constexpr auto m_vEffectLoc_PlayerAtk2 = 0x2b8; // FVector
		constexpr auto m_fEffectDelay_PlayerAtk2 = 0x2c4; // float
		constexpr auto m_vEffectScale_PlayerAtk3 = 0x2c8; // FVector
		constexpr auto m_vEffectLoc_PlayerAtk3 = 0x2d4; // FVector
		constexpr auto m_fEffectDelay_PlayerAtk3 = 0x2e0; // float
		constexpr auto m_vEffectScale_PlayerHit = 0x2e4; // FVector
		constexpr auto m_vEffectLoc_PlayerHit = 0x2f0; // FVector
		constexpr auto m_fEffectDelay_PlayerHit = 0x2fc; // float
		constexpr auto m_vEffectScale_MonsterAtk1 = 0x300; // FVector
		constexpr auto m_vEffectLoc_MonsterAtk1 = 0x30c; // FVector
		constexpr auto m_fEffectDelay_MonsterAtk1 = 0x318; // float
		constexpr auto m_vEffectScale_MonsterAtk2 = 0x31c; // FVector
		constexpr auto m_vEffectLoc_MonsterAtk2 = 0x328; // FVector
		constexpr auto m_fEffectDelay_MonsterAtk2 = 0x334; // float
		constexpr auto m_vEffectScale_MonsterHit = 0x338; // FVector
		constexpr auto m_vEffectLoc_MonsterHit = 0x344; // FVector
		constexpr auto m_fEffectDelay_MonsterHit = 0x350; // float
	}

	namespace n_UMM_Map_Detail { // : UWidgetBase
		constexpr auto m_fMovingRader_ZoomDelta = 0x2f0; // float
		constexpr auto m_fMovingRader_SizeDelta = 0x2f4; // float
		constexpr auto m_fMovingRader_SizeLimit = 0x2f8; // float
		constexpr auto m_Rader_NormalMonster = 0x2fc; // FIconInfo
		constexpr auto m_Rader_BossMonster = 0x308; // FIconInfo
		constexpr auto m_Rader_NamedMonster = 0x314; // FIconInfo
		constexpr auto m_Rader_FieldBossMonster = 0x320; // FIconInfo
		constexpr auto m_Rader_WorldBossMonster = 0x32c; // FIconInfo
		constexpr auto m_Rader_QuestNPC = 0x338; // FIconInfo
		constexpr auto m_Rader_NormalNPC = 0x344; // FIconInfo
		constexpr auto m_Rader_SubQuestNPC_MapNpcShowType = 0x350; // FIconInfo
		constexpr auto m_Rader_SubQuestNPC_CoordinateShowType = 0x35c; // FIconInfo
		constexpr auto m_Rader_NormalPortal = 0x368; // FIconInfo
		constexpr auto m_Rader_UnablePortal = 0x374; // FIconInfo
		constexpr auto m_Rader_DungeonPortal = 0x380; // FIconInfo
		constexpr auto m_Minimap_NamedMonster = 0x38c; // FIconInfo
		constexpr auto m_Minimap_BossMonster = 0x398; // FIconInfo
		constexpr auto m_Minimap_FieldBossMonster = 0x3a4; // FIconInfo
		constexpr auto m_Minimap_WordlBossMonster = 0x3b0; // FIconInfo
		constexpr auto m_Minimap_NamedMonster_Deactive = 0x3bc; // FIconInfo
		constexpr auto m_Minimap_BossMonster_Deactive = 0x3c8; // FIconInfo
		constexpr auto m_Minimap_FieldBossMonster_Deactive = 0x3d4; // FIconInfo
		constexpr auto m_Minimap_WordlBossMonster_Deactive = 0x3e0; // FIconInfo
		constexpr auto m_Minimap_EliteMode_Type = 0x3ec; // FIconInfo
		constexpr auto m_Minimap_EliteMode_Type_Deactive = 0x3f8; // FIconInfo
		constexpr auto m_Minimap_Gen_WorldBossMonster = 0x404; // FIconInfo
		constexpr auto m_Minimap_Gen_FieldBossMonster = 0x410; // FIconInfo
		constexpr auto m_Minimap_QuestNPC = 0x41c; // FIconInfo
		constexpr auto m_Minimap_NormalNPC = 0x428; // FIconInfo
		constexpr auto m_Minimap_SubQuestNPC_MapNpcShowType = 0x434; // FIconInfo
		constexpr auto m_Minimap_SubQuestNPC_CoordinateShowType = 0x440; // FIconInfo
		constexpr auto m_Minimap_DefaultNPC = 0x44c; // FIconInfo
		constexpr auto m_Minimap_ShopNPC = 0x458; // FIconInfo
		constexpr auto m_Minimap_ItemMakeNPC = 0x464; // FIconInfo
		constexpr auto m_Minimap_ExchangeNPC = 0x470; // FIconInfo
		constexpr auto m_Minimap_BeautySalon = 0x47c; // FIconInfo
		constexpr auto m_Minimap_EventNPC = 0x488; // FIconInfo
		constexpr auto m_MiniMap_MissionCoordinateIcon = 0x494; // FIconInfo
		constexpr auto m_Rader_MissionCoordinateIcon = 0x4a0; // FIconInfo
		constexpr auto m_Minimap_RelationCoordinateIcon = 0x4ac; // FIconInfo
		constexpr auto m_Rader_RelationCoordinateIcon = 0x4b8; // FIconInfo
		constexpr auto m_Minimap_InventoryNPC = 0x4c4; // FIconInfo
		constexpr auto m_Minimap_NormalPortal = 0x4d0; // FIconInfo
		constexpr auto m_Minimap_UnablePortal = 0x4dc; // FIconInfo
		constexpr auto m_Minimap_DungeonPortal = 0x4e8; // FIconInfo
		constexpr auto m_Minimap_Area_Default = 0x4f4; // FIconInfo
		constexpr auto m_Minimap_Area_2 = 0x500; // FIconInfo
		constexpr auto m_Minimap_NormalWaypoint = 0x50c; // FIconInfo
		constexpr auto m_Minimap_UnableWaypoint = 0x518; // FIconInfo
		constexpr auto m_Minimap_MiningZone = 0x524; // FIconInfo
		constexpr auto m_Minimap_Gather = 0x530; // FIconInfo
		constexpr auto m_Minimap_BMiningZone = 0x53c; // FIconInfo
		constexpr auto m_Minimap_JinkiZone = 0x548; // FIconInfo
		constexpr auto m_Minimap_MonsterSpawIcon = 0x554; // FIconInfo
		constexpr auto m_Minimap_MonsterSpawIcon_Deactive = 0x560; // FIconInfo
		constexpr auto m_Minimap_SanctumIcon = 0x56c; // FIconInfo
		constexpr auto m_Minimap_SanctumIcon_Deactive = 0x578; // FIconInfo
		constexpr auto m_Minimap_DascoMeltingNPC = 0x584; // FIconInfo
		constexpr auto SECTOR_ICON_ID = 0x590; // int32_t
		constexpr auto ReserveSound = 0x594; // int32_t
		constexpr auto m_Player = 0x5e0; // UMM_Map_Player*
		constexpr auto m_arrDeathItemList = 0x5e8; // TArray<UMM_Map_DeathItem*>
		constexpr auto m_Dest = 0x5f8; // UMM_Map_Dest*
		constexpr auto m_WaypointDest = 0x600; // UMM_Map_WaypointDest*
		constexpr auto m_pPlayerSlot = 0x608; // UCanvasPanelSlot*
		constexpr auto m_pDestSlot = 0x610; // UCanvasPanelSlot*
		constexpr auto m_pWaypointDestSlot = 0x618; // UCanvasPanelSlot*
		constexpr auto canFieldBossSlot = 0x620; // UCanvasPanelSlot*
		constexpr auto imgFieldBossSlot = 0x628; // UImage*
		constexpr auto m_arCommonIconImage = 0x650; // TArray<UImage*>
		constexpr auto m_arNameTag = 0x660; // TArray<UMM_Map_NameTag*>
		constexpr auto m_arStoryQuestNPCIconImage = 0x690; // TArray<UImage*>
		constexpr auto m_arSubQuestNPCIconImage = 0x6a0; // TArray<UImage*>
		constexpr auto m_arMissionCompleteNPCIconImage = 0x6b0; // TArray<UImage*>
		constexpr auto m_arRequestCompleteNPCIconImage = 0x6c0; // TArray<UImage*>
		constexpr auto m_arRelationCompleteNPCIconImage = 0x6d0; // TArray<UImage*>
		constexpr auto m_Grid_Move = 0x6e0; // UPanelWidget*
		constexpr auto m_Btn_Move = 0x6e8; // UMirButton*
		constexpr auto m_Can_SectorGrade = 0x738; // UCanvasPanel*
		constexpr auto m_arSectorGrade = 0x740; // TArray<UMirImage*>
		constexpr auto m_CanIcon = 0x750; // UCanvasPanel*
		constexpr auto m_TxtMove = 0x758; // UMirTextBlock*
		constexpr auto m_ImgMap = 0x760; // UImage*
		constexpr auto m_BtnMain = 0x768; // UButton*
		constexpr auto m_AniMove = 0x770; // UWidgetAnimation*
		constexpr auto m_Grid_ChatMove = 0x778; // UPanelWidget*
		constexpr auto m_Btn_ChatMove = 0x780; // UMirButton*
		constexpr auto m_pChatMovetDestSlot = 0x788; // UCanvasPanelSlot*
		constexpr auto m_ChatMoveDest = 0x790; // UMM_Map_WaypointDest*
		constexpr auto m_Panel_UserName = 0x798; // UCanvasPanel*
		constexpr auto m_Text_UserName = 0x7a0; // UMirRichTextBlock*
	}

	namespace n_USpectatorBeaconState { // : UObject
		constexpr auto SessionName = 0x28; // FName
		constexpr auto NumConsumedReservations = 0x30; // int32_t
		constexpr auto MaxReservations = 0x34; // int32_t
		constexpr auto bRestrictCrossConsole = 0x38; // bool
		constexpr auto Reservations = 0x40; // TArray<FSpectatorReservation>
	}

	namespace n_UParticleModuleVelocity_Seeded { // : UParticleModuleVelocity
		constexpr auto RandomSeedInfo = 0xb0; // FParticleRandomSeedInfo
	}

	namespace n_UMM_B_Dominion { // : UWidgetBase
		constexpr auto m_pTabDominion = 0x300; // UMM_CommonHorizontalTabSet*
		constexpr auto m_pSwitchDominion = 0x308; // UWidgetSwitcher*
		constexpr auto m_pDominionCastle = 0x310; // UMM_Dominion_Castle*
		constexpr auto m_pDominionBase = 0x318; // UMM_Dominion_Base*
	}

	namespace n_UGameplayTagsDeveloperSettings { // : UObject
		constexpr auto DeveloperConfigName = 0x28; // FString
	}

	namespace n_UNavigationSystemV1 { // : UNavigationSystemBase
		constexpr auto MainNavData = 0x28; // ANavigationData*
		constexpr auto AbstractNavData = 0x30; // ANavigationData*
		constexpr auto DefaultAgentName = 0x38; // FName
		constexpr auto CrowdManagerClass = 0x40; // UClass*
		constexpr auto bAutoCreateNavigationData = 0x68; // char : 1
		constexpr auto bSpawnNavDataInNavBoundsLevel = 0x68; // char : 1
		constexpr auto bAllowClientSideNavigation = 0x68; // char : 1
		constexpr auto bShouldDiscardSubLevelNavData = 0x68; // char : 1
		constexpr auto bTickWhilePaused = 0x68; // char : 1
		constexpr auto bSupportRebuilding = 0x68; // char : 1
		constexpr auto bInitialBuildingLocked = 0x68; // char : 1
		constexpr auto bSkipAgentHeightCheckWhenPickingNavData = 0x69; // char : 1
		constexpr auto DataGatheringMode = 0x6c; // ENavDataGatheringModeConfig
		constexpr auto bGenerateNavigationOnlyAroundNavigationInvokers = 0x70; // char : 1
		constexpr auto ActiveTilesUpdateInterval = 0x74; // float
		constexpr auto SupportedAgents = 0x78; // TArray<FNavDataConfig>
		constexpr auto SupportedAgentsMask = 0x88; // FNavAgentSelector
		constexpr auto bUpdateNavModifierVolumeOnLoad = 0x8c; // char : 1
		constexpr auto NavDataSet = 0x90; // TArray<ANavigationData*>
		constexpr auto NavDataRegistrationQueue = 0xa0; // TArray<ANavigationData*>
		constexpr auto OnNavDataRegisteredEvent = 0xc0; // FScriptMulticastDelegate
		constexpr auto OnNavigationGenerationFinishedDelegate = 0xd0; // FScriptMulticastDelegate
		constexpr auto OperationMode = 0x1bc; // FNavigationSystemRunMode
		constexpr auto DirtyAreasUpdateFreq = 0x514; // float
	}

	namespace n_UMaterialFunctionMaterialLayer { // : UMaterialFunction
		constexpr auto Description = 0x40; // FString
		constexpr auto FunctionExpressions = 0x50; // TArray<UMaterialExpression*>
		constexpr auto bExposeToLibrary = 0x60; // char : 1
		constexpr auto bPrefixParameterNames = 0x60; // char : 1
		constexpr auto bReentrantFlag = 0x60; // char : 1
	}

	namespace n_UMM_Popup_ClosedTraining_Collect { // : UWidgetBase
		constexpr auto m_Txt_Title = 0x2e0; // UMirTextBlock*
		constexpr auto m_Txt_Desc = 0x2e8; // UMirTextBlock*
		constexpr auto m_ScrollBox = 0x2f0; // UMirScrollBox*
		constexpr auto m_Btn_Close = 0x2f8; // UMM_Common_Btn_Symbol*
	}

	namespace n_AReflectionCapture { // : AActor
		constexpr auto CaptureComponent = 0x218; // UReflectionCaptureComponent*
	}

	namespace n_UMM_PopUp_SaleItem { // : UWidgetBase
		constexpr auto m_SlotMat = 0x2e0; // UMM_Slot_Material*
		constexpr auto m_ItemName = 0x2e8; // UTextBlock*
		constexpr auto m_NumInput = 0x2f0; // UMM_Item_Make_Slider*
		constexpr auto m_CancleBtn = 0x2f8; // UMM_Common_Btn*
		constexpr auto m_SaleBtn = 0x300; // UMM_Common_Btn_Cost*
		constexpr auto m_Text_Title = 0x308; // UTextBlock*
		constexpr auto btn_close = 0x330; // UMM_Common_Btn_Symbol*
		constexpr auto STR_MSG_ITEMEXTEND_TITLE = 0x338; // int32_t
		constexpr auto STR_MSG_ITEMEXTEND_NORMAL = 0x33c; // int32_t
		constexpr auto STR_MSG_ITEMEXTEND_MAX = 0x340; // int32_t
		constexpr auto STR_MSG_ITEMEXTEND_COUNT = 0x344; // int32_t
	}

	namespace n_URendererSettings { // : UDeveloperSettings
		constexpr auto bMobileHDR = 0x38; // char : 1
		constexpr auto bMobileDisableVertexFog = 0x38; // char : 1
		constexpr auto MaxMobileCascades = 0x3c; // int32_t
		constexpr auto MobileMSAASampleCount = 0x40; // EMobileMSAASampleCount
		constexpr auto bMobileUseLegacyShadingModel = 0x44; // char : 1
		constexpr auto bMobileUseHWsRGBEncoding = 0x44; // char : 1
		constexpr auto bMobileAllowDitheredLODTransition = 0x44; // char : 1
		constexpr auto bAllowMaterialDistanceCullFade = 0x44; // char : 1
		constexpr auto bMobileAllowSoftwareOcclusionCulling = 0x44; // char : 1
		constexpr auto bDiscardUnusedQualityLevels = 0x44; // char : 1
		constexpr auto bApplyCullDistanceToDynamicActor = 0x44; // char : 1
		constexpr auto CullDistanceVolumePresets = 0x48; // TArray<FCullDistanceVolumePreset>
		constexpr auto bOcclusionCulling = 0x58; // char : 1
		constexpr auto MinScreenRadiusForLights = 0x5c; // float
		constexpr auto MinScreenRadiusForEarlyZPass = 0x60; // float
		constexpr auto MinScreenRadiusForCSMdepth = 0x64; // float
		constexpr auto bPrecomputedVisibilityWarning = 0x68; // char : 1
		constexpr auto bTextureStreaming = 0x68; // char : 1
		constexpr auto bUseDXT5NormalMaps = 0x68; // char : 1
		constexpr auto bVirtualTextures = 0x68; // char : 1
		constexpr auto bVirtualTexturedLightmaps = 0x68; // char : 1
		constexpr auto VirtualTextureTileSize = 0x6c; // uint32_t
		constexpr auto VirtualTextureTileBorderSize = 0x70; // uint32_t
		constexpr auto VirtualTextureFeedbackFactor = 0x74; // uint32_t
		constexpr auto bVirtualTextureEnableCompressZlib = 0x78; // char : 1
		constexpr auto bVirtualTextureEnableCompressCrunch = 0x78; // char : 1
		constexpr auto bClearCoatEnableSecondNormal = 0x78; // char : 1
		constexpr auto ReflectionCaptureResolution = 0x7c; // int32_t
		constexpr auto ReflectionEnvironmentLightmapMixBasedOnRoughness = 0x80; // char : 1
		constexpr auto bForwardShading = 0x80; // char : 1
		constexpr auto bVertexFoggingForOpaque = 0x80; // char : 1
		constexpr auto bAllowStaticLighting = 0x80; // char : 1
		constexpr auto bUseNormalMapsForStaticLighting = 0x80; // char : 1
		constexpr auto bGenerateMeshDistanceFields = 0x80; // char : 1
		constexpr auto bEightBitMeshDistanceFields = 0x80; // char : 1
		constexpr auto bGenerateLandscapeGIData = 0x80; // char : 1
		constexpr auto bCompressMeshDistanceFields = 0x81; // char : 1
		constexpr auto TessellationAdaptivePixelsPerTriangle = 0x84; // float
		constexpr auto bSeparateTranslucency = 0x88; // char : 1
		constexpr auto TranslucentSortPolicy = 0x8c; // ETranslucentSortPolicy
		constexpr auto TranslucentSortAxis = 0x90; // FVector
		constexpr auto CustomDepthStencil = 0x9c; // ECustomDepthStencil
		constexpr auto bCustomDepthTaaJitter = 0xa0; // char : 1
		constexpr auto bEnableAlphaChannelInPostProcessing = 0xa4; // EAlphaChannelMode
		constexpr auto bDefaultFeatureBloom = 0xa8; // char : 1
		constexpr auto bDefaultFeatureAmbientOcclusion = 0xa8; // char : 1
		constexpr auto bDefaultFeatureAmbientOcclusionStaticFraction = 0xa8; // char : 1
		constexpr auto bDefaultFeatureAutoExposure = 0xa8; // char : 1
		constexpr auto DefaultFeatureAutoExposure = 0xac; // EAutoExposureMethodUI
		constexpr auto bExtendDefaultLuminanceRangeInAutoExposureSettings = 0xb0; // char : 1
		constexpr auto bUsePreExposure = 0xb0; // char : 1
		constexpr auto bEnablePreExposureOnlyInTheEditor = 0xb0; // char : 1
		constexpr auto bDefaultFeatureMotionBlur = 0xb0; // char : 1
		constexpr auto bDefaultFeatureLensFlare = 0xb0; // char : 1
		constexpr auto bTemporalUpsampling = 0xb0; // char : 1
		constexpr auto bSSGI = 0xb0; // char : 1
		constexpr auto DefaultFeatureAntiAliasing = 0xb4; // EAntiAliasingMethod
		constexpr auto DefaultLightUnits = 0xb5; // ELightUnits
		constexpr auto DefaultBackBufferPixelFormat = 0xb6; // EDefaultBackBufferPixelFormat
		constexpr auto bRenderUnbuiltPreviewShadowsInGame = 0xb8; // char : 1
		constexpr auto bStencilForLODDither = 0xb8; // char : 1
		constexpr auto EarlyZPass = 0xbc; // EEarlyZPass
		constexpr auto bEarlyZPassOnlyMaterialMasking = 0xc0; // char : 1
		constexpr auto bDBuffer = 0xc0; // char : 1
		constexpr auto ClearSceneMethod = 0xc4; // EClearSceneOptions
		constexpr auto bBasePassOutputsVelocity = 0xc8; // char : 1
		constexpr auto bSelectiveBasePassOutputs = 0xc8; // char : 1
		constexpr auto bDefaultParticleCutouts = 0xc8; // char : 1
		constexpr auto GPUSimulationTextureSizeX = 0xcc; // int32_t
		constexpr auto GPUSimulationTextureSizeY = 0xd0; // int32_t
		constexpr auto bGlobalClipPlane = 0xd4; // char : 1
		constexpr auto GBufferFormat = 0xd8; // EGBufferFormat
		constexpr auto bUseGPUMorphTargets = 0xdc; // char : 1
		constexpr auto bNvidiaAftermathEnabled = 0xdc; // char : 1
		constexpr auto bInstancedStereo = 0xdc; // char : 1
		constexpr auto bMultiView = 0xdc; // char : 1
		constexpr auto bMobileMultiView = 0xdc; // char : 1
		constexpr auto bMobileMultiViewDirect = 0xdc; // char : 1
		constexpr auto bRoundRobinOcclusion = 0xdc; // char : 1
		constexpr auto bODSCapture = 0xdc; // char : 1
		constexpr auto WireframeCullThreshold = 0xe0; // float
		constexpr auto bEnableRayTracing = 0xe4; // char : 1
		constexpr auto bEnableRayTracingTextureLOD = 0xe4; // char : 1
		constexpr auto bSupportStationarySkylight = 0xe4; // char : 1
		constexpr auto bSupportLowQualityLightmaps = 0xe4; // char : 1
		constexpr auto bSupportPointLightWholeSceneShadows = 0xe4; // char : 1
		constexpr auto bSupportAtmosphericFog = 0xe4; // char : 1
		constexpr auto bSupportSkyAtmosphere = 0xe4; // char : 1
		constexpr auto bSupportSkyAtmosphereAffectsHeightFog = 0xe4; // char : 1
		constexpr auto bSupportSkinCacheShaders = 0xe5; // char : 1
		constexpr auto bMobileEnableStaticAndCSMShadowReceivers = 0xe5; // char : 1
		constexpr auto bMobileEnableMovableLightCSMShaderCulling = 0xe5; // char : 1
		constexpr auto bMobileAllowDistanceFieldShadows = 0xe5; // char : 1
		constexpr auto bMobileAllowMovableDirectionalLights = 0xe5; // char : 1
		constexpr auto MobileNumDynamicPointLights = 0xe8; // uint32_t
		constexpr auto bMobileDynamicPointLightsUseStaticBranch = 0xec; // char : 1
		constexpr auto bMobileAllowMovableSpotlights = 0xec; // char : 1
		constexpr auto SkinCacheSceneMemoryLimitInMB = 0xf0; // float
		constexpr auto bGPUSkinLimit2BoneInfluences = 0xf4; // char : 1
		constexpr auto bSupportDepthOnlyIndexBuffers = 0xf4; // char : 1
		constexpr auto bSupportReversedIndexBuffers = 0xf4; // char : 1
		constexpr auto bSupportMaterialLayers = 0xf4; // char : 1
		constexpr auto bLPV = 0xf4; // char : 1
	}

	namespace n_UTextureCube { // : UTexture
		constexpr auto LightingGuid = 0x48; // FGuid
		constexpr auto LODBias = 0x58; // int32_t
		constexpr auto CompressionSettings = 0x5c; // TextureCompressionSettings
		constexpr auto Filter = 0x5d; // TextureFilter
		constexpr auto MipLoadOptions = 0x5e; // ETextureMipLoadOptions
		constexpr auto LODGroup = 0x5f; // TextureGroup
		constexpr auto SRGB = 0x60; // char : 1
		constexpr auto bNoTiling = 0x60; // char : 1
		constexpr auto VirtualTextureStreaming = 0x60; // char : 1
		constexpr auto CompressionYCoCg = 0x60; // char : 1
		constexpr auto bAsyncResourceReleaseHasBeenStarted = 0x60; // char : 1
		constexpr auto AssetUserData = 0x68; // TArray<UAssetUserData*>
	}

	namespace n_UAnimClassData { // : UObject
		constexpr auto BakedStateMachines = 0x30; // TArray<FBakedAnimationStateMachine>
		constexpr auto TargetSkeleton = 0x40; // USkeleton*
		constexpr auto AnimNotifies = 0x48; // TArray<FAnimNotifyEvent>
		constexpr auto OrderedSavedPoseIndicesMap = 0x58; // TMap<FName, FCachedPoseIndices>
		constexpr auto AnimBlueprintFunctions = 0xa8; // TArray<FAnimBlueprintFunction>
		constexpr auto AnimNodeProperties = 0xb8; // TArray<UStructProperty*>
		constexpr auto LinkedAnimGraphNodeProperties = 0xc8; // TArray<UStructProperty*>
		constexpr auto LinkedAnimLayerNodeProperties = 0xd8; // TArray<UStructProperty*>
		constexpr auto PreUpdateNodeProperties = 0xe8; // TArray<UStructProperty*>
		constexpr auto DynamicResetNodeProperties = 0xf8; // TArray<UStructProperty*>
		constexpr auto StateMachineNodeProperties = 0x108; // TArray<UStructProperty*>
		constexpr auto InitializationNodeProperties = 0x118; // TArray<UStructProperty*>
		constexpr auto GraphNameAssetPlayers = 0x128; // TMap<FName, FGraphAssetPlayerInformation>
		constexpr auto SyncGroupNames = 0x178; // TArray<FName>
		constexpr auto EvaluateGraphExposedInputs = 0x188; // TArray<FExposedValueHandler>
		constexpr auto GraphBlendOptions = 0x198; // TMap<FName, FAnimGraphBlendOptions>
	}

	namespace n_UAISenseConfig_Hearing { // : UAISenseConfig
		constexpr auto Implementation = 0x48; // UAISense_Hearing*
		constexpr auto HearingRange = 0x50; // float
		constexpr auto LoSHearingRange = 0x54; // float
		constexpr auto bUseLoSHearing = 0x58; // char : 1
		constexpr auto DetectionByAffiliation = 0x5c; // FAISenseAffiliationFilter
	}

	namespace n_UDistributionFloat { // : UDistribution
		constexpr auto bCanBeBaked = 0x30; // char : 1
		constexpr auto bBakedDataSuccesfully = 0x30; // char : 1
	}

	namespace n_USteamNetConnection { // : UIpConnection
		constexpr auto bIsPassthrough = 0x1a20; // bool
	}

	namespace n_UMM_PassiveSkillDesc { // : UWidgetBase
		constexpr auto m_RTxt_Title = 0x2e0; // UMirRichTextBlock*
		constexpr auto m_Rtxt_Desc = 0x2e8; // UMirRichTextBlock*
	}

	namespace n_UCanvas { // : UObject
		constexpr auto OrgX = 0x28; // float
		constexpr auto OrgY = 0x2c; // float
		constexpr auto ClipX = 0x30; // float
		constexpr auto ClipY = 0x34; // float
		constexpr auto DrawColor = 0x38; // FColor
		constexpr auto bCenterX = 0x3c; // char : 1
		constexpr auto bCenterY = 0x3c; // char : 1
		constexpr auto bNoSmooth = 0x3c; // char : 1
		constexpr auto SizeX = 0x40; // int32_t
		constexpr auto SizeY = 0x44; // int32_t
		constexpr auto ColorModulate = 0x50; // FPlane
		constexpr auto DefaultTexture = 0x60; // UTexture2D*
		constexpr auto GradientTexture0 = 0x68; // UTexture2D*
		constexpr auto ReporterGraph = 0x70; // UReporterGraph*
	}

	namespace n_AExponentialHeightFog { // : AInfo
		constexpr auto Component = 0x218; // UExponentialHeightFogComponent*
		constexpr auto bEnabled = 0x220; // char : 1
	}

	namespace n_UMM_Customizing_Component { // : UWidgetBase
		constexpr auto m_ComponentPanel = 0x2e0; // UPanelWidget*
		constexpr auto m_ComponentCanvasPanel = 0x2e8; // UCanvasPanel*
		constexpr auto m_ComponentList = 0x2f0; // TArray<UPanelWidget*>
		constexpr auto m_ScrollBox = 0x300; // UMirScrollBox*
	}

	namespace n_UQueryFriends { // : UBlueprintAsyncActionBase
		constexpr auto OnSuccess = 0x30; // FScriptMulticastDelegate
		constexpr auto OnFail = 0x40; // FScriptMulticastDelegate
	}

	namespace n_UMM_Popup_Addressbook { // : UWidgetBase
		constexpr auto STRING_SEARCH_HINT_ID = 0x2f0; // int32_t
		constexpr auto m_EditableTxt_NickName = 0x2f8; // UMirEditableText*
		constexpr auto m_C_Btn_Close = 0x300; // UMM_Common_Btn_Symbol*
		constexpr auto m_C_Btn_Search = 0x308; // UMM_Common_Btn_Symbol*
		constexpr auto m_ListView_AddressList = 0x310; // UMirListView*
		constexpr auto m_C_Empty_Notice = 0x318; // UMM_Common_Board_Notice*
		constexpr auto m_TabSlot = 0x320; // UMM_Popup_Addressbook_TabSlot* [0x2]
		constexpr auto m_CheckBoxAllSelect = 0x330; // UMirCheckBox*
		constexpr auto m_RTxt_Count = 0x338; // UMirRichTextBlock*
		constexpr auto m_C_Btn_Select = 0x340; // UMM_Common_Btn*
		constexpr auto m_arAddressSlotObj = 0x348; // TArray<UAddressbookSlotObj*>
	}

	namespace n_UImageSequenceProtocol_BMP { // : UImageSequenceProtocol
		constexpr auto State = 0x50; // EMovieSceneCaptureProtocolState
	}

	namespace n_UMM_ExecuteDecalComponent { // : UActorComponent
		constexpr auto InsideName = 0xb0; // FName
		constexpr auto ElapsedTime = 0xb8; // float
		constexpr auto ScalingTime = 0xbc; // float
		constexpr auto AliveTime = 0xc0; // float
		constexpr auto CharScale = 0xc4; // float
		constexpr auto ExecuteDecal = 0xc8; // UDecalComponent*
		constexpr auto ExecuteMaterialInstanceDynamic = 0xd0; // UMaterialInstanceDynamic*
	}

	namespace n_USoundNodeGroupControl { // : USoundNode
		constexpr auto GroupSizes = 0x40; // TArray<int32_t>
	}

	namespace n_UMM_UserEvent_Attendance_Month { // : UWidgetBase
		constexpr auto m_Txt_Name = 0x2f0; // UMirTextBlock*
		constexpr auto m_Img_Thumb = 0x2f8; // UMirImage*
		constexpr auto m_WrapBox = 0x300; // UWrapBox*
		constexpr auto m_WebBanner = 0x308; // UMM_UserEvent_WebBanner*
	}

	namespace n_UMM_Auction_Enchant_ComboList { // : UMM_Auction_ComboList
		constexpr auto m_fSlotSizeY = 0x2e0; // float
		constexpr auto m_pCanScroll = 0x2e8; // UMirCanvasPanel*
		constexpr auto m_pScrollList = 0x2f0; // UMirScrollBox*
		constexpr auto m_pBtnMain = 0x2f8; // UMirButton*
		constexpr auto m_pImgArrow = 0x300; // UMirImage*
		constexpr auto m_pTxtTheme = 0x308; // UMirTextBlock*
		constexpr auto m_pTxtValue = 0x310; // UMirTextBlock*
		constexpr auto m_fBaseScrollSize = 0x318; // FVector2D
	}

	namespace n_UMaterialExpressionSceneTexelSize { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UMM_Ranking_Toggle { // : UWidgetBase
		constexpr auto m_ComboBoxString = 0x2f0; // UComboBoxString*
		constexpr auto m_ItemBoxPanel = 0x2f8; // UMirCanvasPanel*
		constexpr auto m_ItemBox01Panel = 0x300; // UMirCanvasPanel*
		constexpr auto m_ItemBox02Panel = 0x308; // UMirCanvasPanel*
		constexpr auto m_ItemBox03Panel = 0x310; // UMirCanvasPanel*
		constexpr auto m_ItemBox04Panel = 0x318; // UMirCanvasPanel*
		constexpr auto m_ItemBox05Panel = 0x320; // UMirCanvasPanel*
		constexpr auto m_ItemBox06Panel = 0x328; // UMirCanvasPanel*
		constexpr auto m_ItemBox01Text = 0x330; // UMirTextBlock*
		constexpr auto m_ItemBox02Text = 0x338; // UMirTextBlock*
		constexpr auto m_ItemBox03Text = 0x340; // UMirTextBlock*
		constexpr auto m_ItemBox04Text = 0x348; // UMirTextBlock*
		constexpr auto m_ItemBox05Text = 0x350; // UMirTextBlock*
		constexpr auto m_ItemBox06Text = 0x358; // UMirTextBlock*
		constexpr auto m_ItemBox01Btn = 0x360; // UMirButton*
		constexpr auto m_ItemBox02Btn = 0x368; // UMirButton*
		constexpr auto m_ItemBox03Btn = 0x370; // UMirButton*
		constexpr auto m_ItemBox04Btn = 0x378; // UMirButton*
		constexpr auto m_ItemBox05Btn = 0x380; // UMirButton*
		constexpr auto m_ItemBox06Btn = 0x388; // UMirButton*
		constexpr auto m_ComboBoxBtn = 0x390; // UMirButton*
	}

	namespace n_UMovieSceneCinematicShotSection { // : UMovieSceneSubSection
		constexpr auto ShotDisplayName = 0x150; // FString
		constexpr auto DisplayName = 0x160; // FText
	}

	namespace n_UInputTouchDelegateBinding { // : UInputDelegateBinding
		constexpr auto InputTouchDelegateBindings = 0x28; // TArray<FBlueprintInputTouchDelegateBinding>
	}

	namespace n_ATestBeaconClient { // : AOnlineBeaconClient
		constexpr auto BeaconOwner = 0x248; // AOnlineBeaconHostObject*
		constexpr auto BeaconConnection = 0x250; // UNetConnection*
		constexpr auto ConnectionState = 0x258; // EBeaconConnectionState
	}

	namespace n_UMaterialExpressionDeriveNormalZ { // : UMaterialExpression
		constexpr auto InXY = 0x40; // FExpressionInput
	}

	namespace n_UCombatPointPopupWidget { // : UWidgetBase
		constexpr auto m_AniOpen = 0x2e0; // UWidgetAnimation*
	}

	namespace n_AMM_AnimationTestGameMode { // : AMM_PreviewModeBase
		constexpr auto m_pNPCAnimInstance = 0x4b0; // UMM_CharacterBaseAnimInstance*
	}

	namespace n_UMM_PhotoModeWidget { // : UWidgetBase
		constexpr auto m_pPhotoModeCharacter = 0x2e0; // AMM_PhotoModeCharacter*
		constexpr auto m_pPhotoModeData = 0x2e8; // UPhotoModeData*
		constexpr auto m_pPopup_ScreenShotOption = 0x2f0; // UUserWidget*
		constexpr auto m_mapOption = 0x3b0; // TMap<EPhotoModeOptionType, FPhotoMode_Option>
	}

	namespace n_UAISenseEvent_Hearing { // : UAISenseEvent
		constexpr auto Event = 0x28; // FAINoiseEvent
	}

	namespace n_UMovieScenePropertyTrack { // : UMovieSceneNameableTrack
		constexpr auto SectionToKey = 0x58; // UMovieSceneSection*
		constexpr auto PropertyName = 0x60; // FName
		constexpr auto PropertyPath = 0x68; // FString
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_UPawnAction { // : UObject
		constexpr auto ChildAction = 0x28; // UPawnAction*
		constexpr auto ParentAction = 0x30; // UPawnAction*
		constexpr auto OwnerComponent = 0x38; // UPawnActionsComponent*
		constexpr auto Instigator = 0x40; // UObject*
		constexpr auto BrainComp = 0x48; // UBrainComponent*
		constexpr auto bAllowNewSameClassInstance = 0x80; // char : 1
		constexpr auto bReplaceActiveSameClassInstance = 0x80; // char : 1
		constexpr auto bShouldPauseMovement = 0x80; // char : 1
		constexpr auto bAlwaysNotifyOnFinished = 0x80; // char : 1
	}

	namespace n_UMM_Xdraco_InvenRight { // : UMM_NewInventory_Base
		constexpr auto m_InvenTab = 0x2e8; // UMM_NewInventoryTab*
		constexpr auto m_Inven = 0x2f0; // UMM_NewInventory*
		constexpr auto m_Txt_InvenCount = 0x2f8; // UMirTextBlock*
		constexpr auto m_SortListBtn = 0x300; // UMM_SortListBtn*
	}

	namespace n_UMM_GameInstance { // : UGameInstance
		constexpr auto m_pPlayerController = 0x198; // AMM_PlayerController*
		constexpr auto m_strServerInfoJson = 0x1a0; // FString
		constexpr auto m_bUseWemadeServiceLogin = 0x1b0; // bool
		constexpr auto m_bPatched = 0x1b1; // bool
		constexpr auto m_bLoadedShaderLibraryAndPSO = 0x1b2; // bool
		constexpr auto m_pCustomizingManager = 0x1b8; // UMM_CustomizingManager*
		constexpr auto m_pPoolManager = 0x1c0; // UMM_PoolManager*
		constexpr auto m_pWidgetManager = 0x1c8; // UMM_WidgetManager*
		constexpr auto m_pTemplateManager = 0x1d0; // UMM_TemplateManager*
		constexpr auto m_pCinematicManager = 0x1d8; // UMM_CinematicManager*
		constexpr auto WarpMoveManager = 0x1e0; // UMM_WarpMoveManager*
		constexpr auto m_pLoginManager = 0x1e8; // UMM_LoginManager*
		constexpr auto m_pIAPManager = 0x1f0; // UMM_IAPManager*
		constexpr auto m_pAdManager = 0x1f8; // UMM_AdManager*
		constexpr auto m_pSoundManager = 0x200; // AMM_SoundManagerActor*
		constexpr auto EffectManager = 0x208; // UMM_EffectManager*
		constexpr auto m_pUIActionManager = 0x210; // UMM_UIActionManager*
		constexpr auto m_pHttpImageManager = 0x218; // UHttpImageManager*
		constexpr auto m_pScheduleManager = 0x220; // UMM_ScheduleManager*
		constexpr auto m_MainPCData = 0x420; // FCharStatistics
		constexpr auto m_pGameDefineData = 0x4b8; // UGameDefineDataAsset*
		constexpr auto m_pMirColorData = 0x4c0; // UMirColorData*
		constexpr auto m_pFootStepSurfaceData = 0x4c8; // UFootStepSurfaceData*
		constexpr auto m_pDefaultNavigationFilterClass = 0x4d0; // UObject*
		constexpr auto m_pIgnoreCostNavigationFilterClass = 0x4d8; // UObject*
		constexpr auto m_pLinkProxyNavigationFilterClass = 0x4e0; // UObject*
		constexpr auto m_mapPrerequisiteLoadState = 0x4e8; // TMap<EPrerequisiteLoadState, bool>
		constexpr auto m_RichTextStyleTable = 0x538; // UDataTable*
		constexpr auto m_pAccountLocalSave = 0x540; // UAccountLocalSave*
		constexpr auto m_pCharLocalSave = 0x548; // UCharLocalSave*
		constexpr auto m_pInAppPurchaseLocalSave = 0x550; // UInAppPurchaseData*
		constexpr auto m_pMirHudBase = 0x558; // TWeakObjectPtr<AMM_HUDBase>
		constexpr auto m_bRideState = 0x560; // bool
		constexpr auto m_bAvailableRide = 0x561; // bool
		constexpr auto m_bNeedCheckAndroidPermission = 0x562; // bool
		constexpr auto m_pMMGameModeBase = 0x568; // AMM_GameModeBase*
		constexpr auto m_iStageID = 0x578; // int32_t
		constexpr auto m_iPreStageID = 0x57c; // int32_t
		constexpr auto m_bPvPEnable = 0x590; // bool
		constexpr auto m_bLevelStreaming = 0x591; // bool
		constexpr auto m_bMapLoading = 0x592; // bool
		constexpr auto m_bException_LogoToCharSelect = 0x593; // bool
		constexpr auto m_arLoadedLevel = 0x598; // TArray<UObject*>
		constexpr auto m_pLevelStreamingKismet = 0x5a8; // ULevelStreamingDynamic*
		constexpr auto m_pTriggerStreamingKismet = 0x5b0; // ULevelStreamingDynamic*
		constexpr auto m_pLevelStreamingKismet_Logo = 0x5b8; // ULevelStreamingDynamic*
		constexpr auto pMainPC = 0x5f0; // AMM_MainPC*
		constexpr auto m_PSOCacheSkeletalMeshActors = 0x650; // TArray<ASkeletalMeshActor*>
		constexpr auto m_PSOCacheStaticMeshActors = 0x660; // TArray<AStaticMeshActor*>
		constexpr auto m_PSOCacheParticleComponents = 0x670; // TArray<UParticleSystemComponent*>
		constexpr auto FreeStopHingeModule = 0x690; // UWNFreeStopHingeModule*
		constexpr auto m_UnCheater = 0x698; // UMM_UnCheater*
		constexpr auto m_MultiClientSupporter = 0x6a0; // UMM_MultiClientSupporter*
	}

	namespace n_UMM_Common_ComboSlot { // : UWidgetBase
		constexpr auto m_Panel_Back = 0x2e0; // UPanelWidget*
		constexpr auto m_Txt_Name = 0x2e8; // UMirTextBlock*
		constexpr auto m_Img_Select = 0x2f0; // UMirImage*
		constexpr auto m_Btn_Main = 0x2f8; // UMirButton*
	}

	namespace n_UAISenseConfig_Blueprint { // : UAISenseConfig
		constexpr auto Implementation = 0x48; // UAISense_Blueprint*
	}

	namespace n_UMM_BattlePass_Menu_Btn { // : UWidgetBase
		constexpr auto MENU_BTN_TYPE = 0x2f0; // EBattlePassMenu
		constexpr auto STRING_ID_MENU_BTN = 0x2f4; // int32_t
		constexpr auto m_Img_Selected = 0x2f8; // UMirImage*
		constexpr auto m_Img_Locked = 0x300; // UMirImage*
		constexpr auto m_Txt_TabName = 0x308; // UMirTextBlock*
		constexpr auto m_Img_Indicator = 0x310; // UMirImage*
		constexpr auto m_Btn_Main = 0x318; // UMirButton*
	}

	namespace n_UScrollBar { // : UWidget
		constexpr auto WidgetStyle = 0x108; // FScrollBarStyle
		constexpr auto Style = 0x5d8; // USlateWidgetStyleAsset*
		constexpr auto bAlwaysShowScrollbar = 0x5e0; // bool
		constexpr auto bAlwaysShowScrollbarTrack = 0x5e1; // bool
		constexpr auto Orientation = 0x5e2; // EOrientation
		constexpr auto Thickness = 0x5e4; // FVector2D
		constexpr auto Padding = 0x5ec; // FMargin
	}

	namespace n_UMM_GameOption_LanguageSlot { // : UWidgetBase
		constexpr auto m_CB_Main = 0x2e0; // UMM_Common_Btn*
		constexpr auto m_Img_Language = 0x2e8; // UMirImage*
	}

	namespace n_UExponentialHeightFogComponent { // : USceneComponent
		constexpr auto FogDensity = 0x220; // float
		constexpr auto FogHeightFalloff = 0x224; // float
		constexpr auto SecondFogData = 0x228; // FExponentialHeightFogData
		constexpr auto FogInscatteringColor = 0x234; // FLinearColor
		constexpr auto InscatteringColorCubemap = 0x248; // UTextureCube*
		constexpr auto InscatteringColorCubemapAngle = 0x250; // float
		constexpr auto InscatteringTextureTint = 0x254; // FLinearColor
		constexpr auto FullyDirectionalInscatteringColorDistance = 0x264; // float
		constexpr auto NonDirectionalInscatteringColorDistance = 0x268; // float
		constexpr auto DirectionalInscatteringExponent = 0x26c; // float
		constexpr auto DirectionalInscatteringStartDistance = 0x270; // float
		constexpr auto DirectionalInscatteringColor = 0x274; // FLinearColor
		constexpr auto FogMaxOpacity = 0x284; // float
		constexpr auto StartDistance = 0x288; // float
		constexpr auto FogCutoffDistance = 0x28c; // float
		constexpr auto bEnableVolumetricFog = 0x290; // bool
		constexpr auto VolumetricFogScatteringDistribution = 0x294; // float
		constexpr auto VolumetricFogAlbedo = 0x298; // FColor
		constexpr auto VolumetricFogEmissive = 0x29c; // FLinearColor
		constexpr auto VolumetricFogExtinctionScale = 0x2ac; // float
		constexpr auto VolumetricFogDistance = 0x2b0; // float
		constexpr auto VolumetricFogStaticLightingScatteringIntensity = 0x2b4; // float
		constexpr auto bOverrideLightColorsWithFogInscatteringColors = 0x2b8; // bool
	}

	namespace n_UMM_UIAction_QuestAccept { // : UMM_UIAction
		constexpr auto m_DoNotAcceptableRequestToStr = 0x68; // int32_t
	}

	namespace n_UInterpTrackVectorProp { // : UInterpTrackVectorBase
		constexpr auto PropertyName = 0x90; // FName
	}

	namespace n_UParticleModuleTypeDataRibbon { // : UParticleModuleTypeDataBase
		constexpr auto MaxTessellationBetweenParticles = 0x30; // int32_t
		constexpr auto SheetsPerTrail = 0x34; // int32_t
		constexpr auto MaxTrailCount = 0x38; // int32_t
		constexpr auto MaxParticleInTrailCount = 0x3c; // int32_t
		constexpr auto bDeadTrailsOnDeactivate = 0x40; // char : 1
		constexpr auto bDeadTrailsOnSourceLoss = 0x40; // char : 1
		constexpr auto bClipSourceSegement = 0x40; // char : 1
		constexpr auto bEnablePreviousTangentRecalculation = 0x40; // char : 1
		constexpr auto bTangentRecalculationEveryFrame = 0x40; // char : 1
		constexpr auto bSpawnInitialParticle = 0x40; // char : 1
		constexpr auto RenderAxis = 0x44; // ETrailsRenderAxisOption
		constexpr auto TangentSpawningScalar = 0x48; // float
		constexpr auto bRenderGeometry = 0x4c; // char : 1
		constexpr auto bRenderSpawnPoints = 0x4c; // char : 1
		constexpr auto bRenderTangents = 0x4c; // char : 1
		constexpr auto bRenderTessellation = 0x4c; // char : 1
		constexpr auto TilingDistance = 0x50; // float
		constexpr auto DistanceTessellationStepSize = 0x54; // float
		constexpr auto bEnableTangentDiffInterpScale = 0x58; // char : 1
		constexpr auto TangentTessellationScalar = 0x5c; // float
	}

	namespace n_UTrailAnimNotifyState { // : UAnimNotifyState_Trail
		constexpr auto PSTemplate = 0x30; // UParticleSystem*
		constexpr auto FirstSocketName = 0x38; // FName
		constexpr auto SecondSocketName = 0x40; // FName
		constexpr auto WidthScaleMode = 0x48; // ETrailWidthMode
		constexpr auto WidthScaleCurve = 0x4c; // FName
		constexpr auto bRecycleSpawnedSystems = 0x54; // char : 1
	}

	namespace n_UEditableGameplayTagQueryExpression_AnyTagsMatch { // : UEditableGameplayTagQueryExpression
		constexpr auto Tags = 0x28; // FGameplayTagContainer
	}

	namespace n_UOverlay { // : UPanelWidget
		constexpr auto Slots = 0x108; // TArray<UPanelSlot*>
	}

	namespace n_UMaterialExpressionDistanceCullFade { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UProceduralFoliageSpawner { // : UObject
		constexpr auto RandomSeed = 0x28; // int32_t
		constexpr auto TileSize = 0x2c; // float
		constexpr auto NumUniqueTiles = 0x30; // int32_t
		constexpr auto MinimumQuadTreeSize = 0x34; // float
		constexpr auto FoliageTypes = 0x40; // TArray<FFoliageTypeObject>
		constexpr auto bNeedsSimulation = 0x50; // bool
	}

	namespace n_UGameplayTask_TimeLimitedExecution { // : UGameplayTask
		constexpr auto OnFinished = 0x68; // FScriptMulticastDelegate
		constexpr auto OnTimeExpired = 0x78; // FScriptMulticastDelegate
	}

	namespace n_UMM_RevivalTag_Btn { // : UWidgetBase
		constexpr auto m_RevivalIcon = 0x2e0; // UMirImage*
		constexpr auto m_RevivalBtn = 0x2e8; // UMirButton*
		constexpr auto m_pCanvasPanel = 0x2f0; // UCanvasPanel*
		constexpr auto m_pCanvasPanel_PartyMember = 0x2f8; // UCanvasPanel*
		constexpr auto m_pAnimAlarm = 0x300; // UWidgetAnimation*
	}

	namespace n_UFieldNodeInt { // : UFieldNodeBase
		constexpr auto PrimaryComponentTick = 0x30; // FActorComponentTickFunction
		constexpr auto ComponentTags = 0x60; // TArray<FName>
		constexpr auto AssetUserData = 0x70; // TArray<UAssetUserData*>
		constexpr auto bReplicates = 0x84; // char : 1
		constexpr auto bNetAddressable = 0x84; // char : 1
		constexpr auto bAutoActivate = 0x85; // char : 1
		constexpr auto bIsActive = 0x86; // char : 1
		constexpr auto bEditableWhenInherited = 0x86; // char : 1
		constexpr auto bCanEverAffectNavigation = 0x86; // char : 1
		constexpr auto bIsEditorOnly = 0x86; // char : 1
		constexpr auto CreationMethod = 0x88; // EComponentCreationMethod
		constexpr auto OnComponentActivated = 0x89; // FScriptMulticastDelegate
		constexpr auto OnComponentDeactivated = 0x8a; // FScriptMulticastDelegate
		constexpr auto UCSModifiedProperties = 0x90; // TArray<FSimpleMemberReference>
	}

	namespace n_UMM_New_Force_Ability_List { // : UWidgetBase
		constexpr auto m_arAbilityListSlot = 0x2f8; // UMM_New_Force_Ability_Slot* [0x4]
		constexpr auto m_Force_Detail = 0x318; // UMM_New_Force_Detail_Info*
		constexpr auto m_Img_Mat_Freme = 0x320; // UMirImage*
		constexpr auto m_Img_Mat_Bg = 0x328; // UMirImage*
		constexpr auto m_Panel_Success = 0x330; // UPanelWidget*
		constexpr auto m_C_Txt_Success = 0x338; // UMirTextBlock*
		constexpr auto m_C_Txt_SuccessValue = 0x340; // UMirTextBlock*
		constexpr auto m_C_Txt_Fail = 0x348; // UMirTextBlock*
		constexpr auto m_C_Txt_FailValue = 0x350; // UMirTextBlock*
		constexpr auto m_TxtMaxMsg = 0x358; // UMirTextBlock*
		constexpr auto m_C_Mat_Items = 0x360; // TArray<UMM_Slot_Material_Item*>
		constexpr auto m_C_CB_LevelUp = 0x370; // UMM_Common_Btn_Cost*
		constexpr auto m_Panel_Failed = 0x378; // UPanelWidget*
		constexpr auto m_C_Txt_FailedInfo = 0x380; // UMirTextBlock*
		constexpr auto m_C_Txt_FailedTime = 0x388; // UMirTextBlock*
		constexpr auto m_C_Slot_CureMat = 0x390; // UMM_Slot_Material_Item*
		constexpr auto m_C_CB_Cure = 0x398; // UMM_Common_Btn*
	}

	namespace n_ULevelCapture { // : UMovieSceneCapture
		constexpr auto bAutoStartCapture = 0x220; // bool
		constexpr auto PrerequisiteActorId = 0x22c; // FGuid
	}

	namespace n_UInteractiveFoliageComponent { // : UStaticMeshComponent
		constexpr auto ForcedLodModel = 0x440; // int32_t
		constexpr auto PreviousLODLevel = 0x444; // int32_t
		constexpr auto MinLOD = 0x448; // int32_t
		constexpr auto SubDivisionStepSize = 0x44c; // int32_t
		constexpr auto StaticMesh = 0x450; // UStaticMesh*
		constexpr auto WireframeColorOverride = 0x458; // FColor
		constexpr auto bEvaluateWorldPositionOffset = 0x45c; // char : 1
		constexpr auto bOverrideWireframeColor = 0x45c; // char : 1
		constexpr auto bOverrideMinLOD = 0x45c; // char : 1
		constexpr auto bOverrideNavigationExport = 0x45c; // char : 1
		constexpr auto bForceNavigationObstacle = 0x45c; // char : 1
		constexpr auto bDisallowMeshPaintPerInstance = 0x45c; // char : 1
		constexpr auto bIgnoreInstanceForTextureStreaming = 0x45c; // char : 1
		constexpr auto bOverrideLightMapRes = 0x45c; // char : 1
		constexpr auto bCastDistanceFieldIndirectShadow = 0x45d; // char : 1
		constexpr auto bOverrideDistanceFieldSelfShadowBias = 0x45d; // char : 1
		constexpr auto bUseSubDivisions = 0x45d; // char : 1
		constexpr auto bUseDefaultCollision = 0x45d; // char : 1
		constexpr auto bForceReceiveCSMForLM = 0x45d; // char : 1
		constexpr auto bReverseCulling = 0x45d; // char : 1
		constexpr auto OverriddenLightMapRes = 0x460; // int32_t
		constexpr auto DistanceFieldIndirectShadowMinVisibility = 0x464; // float
		constexpr auto DistanceFieldSelfShadowBias = 0x468; // float
		constexpr auto StreamingDistanceMultiplier = 0x46c; // float
		constexpr auto LODData = 0x470; // TArray<FStaticMeshComponentLODInfo>
		constexpr auto StreamingTextureData = 0x480; // TArray<FStreamingTextureBuildInfo>
		constexpr auto LightmassSettings = 0x490; // FLightmassPrimitiveSettings
	}

	namespace n_UMM_TutorialPetGuideWidget { // : UWidgetBase
		constexpr auto m_pMainCanvas = 0x2e0; // UCanvasPanel*
		constexpr auto m_pTargetWidget = 0x2e8; // UWidget*
		constexpr auto m_PosType = 0x2f0; // EPetGuidePosType
		constexpr auto m_MainCanvasSize = 0x2f4; // FVector2D
	}

	namespace n_UMM_Slot_DetailRelationQuest { // : UWidgetBase
		constexpr auto m_EvidenceToStr = 0x2e8; // int32_t
		constexpr auto m_DoNotOpenToStr = 0x2ec; // int32_t
		constexpr auto m_Txt_Title = 0x2f0; // UMirTextBlock*
		constexpr auto m_Txt_Number = 0x2f8; // UMirTextBlock*
		constexpr auto m_Txt_Detail = 0x300; // UMirRichTextBlock*
		constexpr auto m_Hint_Open = 0x308; // UPanelWidget*
		constexpr auto m_Hint_Lock = 0x310; // UPanelWidget*
		constexpr auto m_Txt_Close = 0x318; // UMirTextBlock*
		constexpr auto m_Img_Key = 0x320; // UMirImage*
		constexpr auto m_Img_Complete = 0x328; // UMirImage*
		constexpr auto m_Txt_Complete = 0x330; // UMirTextBlock*
		constexpr auto m_Txt_Purpose = 0x338; // UMirTextBlock*
	}

	namespace n_UPetCameraData { // : UDataAsset
		constexpr auto PetCameraFOV = 0x30; // float
		constexpr auto FloorScale = 0x34; // float
		constexpr auto FloorLocation = 0x38; // FVector
		constexpr auto FloorRotation = 0x44; // FRotator
		constexpr auto MAP_PetPlacement = 0x50; // TMap<int32_t, FPetPlacement>
	}

	namespace n_AMM_TestGameHUD { // : AMM_HUDBase
		constexpr auto PlayerOwner = 0x218; // APlayerController*
		constexpr auto bLostFocusPaused = 0x220; // char : 1
		constexpr auto bShowHUD = 0x220; // char : 1
		constexpr auto bShowDebugInfo = 0x220; // char : 1
		constexpr auto CurrentTargetIndex = 0x224; // int32_t
		constexpr auto bShowHitBoxDebugInfo = 0x228; // char : 1
		constexpr auto bShowOverlays = 0x228; // char : 1
		constexpr auto bEnableDebugTextShadow = 0x228; // char : 1
		constexpr auto PostRenderedActors = 0x230; // TArray<AActor*>
		constexpr auto DebugDisplay = 0x248; // TArray<FName>
		constexpr auto ToggledDebugCategories = 0x258; // TArray<FName>
		constexpr auto Canvas = 0x268; // UCanvas*
		constexpr auto DebugCanvas = 0x270; // UCanvas*
		constexpr auto DebugTextList = 0x278; // TArray<FDebugTextInfo>
		constexpr auto ShowDebugTargetDesiredClass = 0x288; // AActor*
		constexpr auto ShowDebugTargetActor = 0x290; // AActor*
	}

	namespace n_UChaosDestructionListener { // : USceneComponent
		constexpr auto bIsCollisionEventListeningEnabled = 0x220; // char : 1
		constexpr auto bIsBreakingEventListeningEnabled = 0x220; // char : 1
		constexpr auto bIsTrailingEventListeningEnabled = 0x220; // char : 1
		constexpr auto CollisionEventRequestSettings = 0x224; // FChaosCollisionEventRequestSettings
		constexpr auto BreakingEventRequestSettings = 0x23c; // FChaosBreakingEventRequestSettings
		constexpr auto TrailingEventRequestSettings = 0x254; // FChaosTrailingEventRequestSettings
		constexpr auto ChaosSolverActors = 0x270; // TSet<AChaosSolverActor*>
		constexpr auto GeometryCollectionActors = 0x2c0; // TSet<AGeometryCollectionActor*>
		constexpr auto OnCollisionEvents = 0x310; // FScriptMulticastDelegate
		constexpr auto OnBreakingEvents = 0x320; // FScriptMulticastDelegate
		constexpr auto OnTrailingEvents = 0x330; // FScriptMulticastDelegate
	}

	namespace n_UMaterialExpressionSkyAtmosphereViewLuminance { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UMM_B_Target { // : UWidgetBase
		constexpr auto m_NormalColor = 0x2e0; // FLinearColor
		constexpr auto m_LockOnColor = 0x2f0; // FLinearColor
		constexpr auto m_AniLockOn = 0x300; // UWidgetAnimation*
		constexpr auto m_AniLoop = 0x308; // UWidgetAnimation*
	}

	namespace n_UMM_Popup_Occupation_SiegeTank { // : UWidgetBase
		constexpr auto siegeWeaponImage = 0x2f0; // UMirImage*
		constexpr auto siegeWeaponTitle = 0x2f8; // UMirTextBlock*
		constexpr auto siegeWeaponNote = 0x300; // UMirTextBlock*
		constexpr auto siegeWeaponCount = 0x308; // UMirTextBlock*
		constexpr auto siegeWeaponLevel = 0x310; // UMirTextBlock*
		constexpr auto siegeWeaponBuffNote = 0x318; // UMirRichTextBlock*
		constexpr auto weaponCost01 = 0x320; // UMirTextBlock*
		constexpr auto weaponCost02 = 0x328; // UMirTextBlock*
		constexpr auto weaponCost03 = 0x330; // UMirTextBlock*
		constexpr auto weaponCost04 = 0x338; // UMirTextBlock*
		constexpr auto weaponCostIcon01 = 0x340; // UMirImage*
		constexpr auto weaponCostIcon02 = 0x348; // UMirImage*
		constexpr auto weaponCostIcon03 = 0x350; // UMirImage*
		constexpr auto weaponCostIcon04 = 0x358; // UMirImage*
		constexpr auto confirmButton = 0x360; // UMM_Common_Btn*
		constexpr auto cancelButton = 0x368; // UMM_Common_Btn*
		constexpr auto closeButton = 0x370; // UMM_Common_Btn_Symbol*
	}

	namespace n_UMM_Forge_Unsealing { // : UWidgetBase
		constexpr auto ALL_RECIEVE_BTN_EFECT_ID = 0x2f0; // int32_t
		constexpr auto m_Txt_UnsealingStateCount = 0x2f8; // UMirTextBlock*
		constexpr auto m_Scr_UnsealingSlotList = 0x300; // UMirScrollBox*
		constexpr auto m_pBtnGetAll = 0x308; // UMM_Common_Btn*
		constexpr auto m_arUnsealingSlot = 0x310; // TArray<UMM_Forge_UnsealingSlot*>
	}

	namespace n_UMM_PopupGuildWelcome { // : UWidgetBase
		constexpr auto mImgProfile = 0x2e0; // UMirImage*
		constexpr auto mRtxtWelcome = 0x2e8; // UMirRichTextBlock*
		constexpr auto mBtnClose = 0x2f0; // UMirButton*
	}

	namespace n_UMaterialExpressionRound { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_ATriggerSphere { // : ATriggerBase
		constexpr auto CollisionComponent = 0x218; // UShapeComponent*
	}

	namespace n_UMM_Dominion_Title_Info { // : UWidgetBase
		constexpr auto m_pParentWidget = 0x260; // UWidgetBase*
		constexpr auto m_arChildWidget = 0x268; // TArray<TWeakObjectPtr<UWidgetBase>>
		constexpr auto m_arMirTextBlock = 0x280; // TArray<TWeakObjectPtr<UMirTextBlock>>
		constexpr auto m_arMirRichTextBlock = 0x290; // TArray<TWeakObjectPtr<UMirRichTextBlock>>
		constexpr auto m_arMirEditableText = 0x2a0; // TArray<TWeakObjectPtr<UMirEditableText>>
		constexpr auto m_arMirImage = 0x2b0; // TArray<TWeakObjectPtr<UMirImage>>
	}

	namespace n_UMM_Fame_List { // : UWidgetBase
		constexpr auto CanvasPanel = 0x2e0; // UCanvasPanel*
		constexpr auto Grid_Title_Info = 0x2e8; // UPanelWidget*
		constexpr auto ScrollBox_Info = 0x2f0; // UMirScrollBox*
		constexpr auto Grid_Board = 0x2f8; // UPanelWidget*
		constexpr auto ScrollBox_Board = 0x300; // UMirScrollBox*
		constexpr auto Txt_Title_Info = 0x308; // UMirTextBlock*
		constexpr auto Btn_Close_Info = 0x310; // UMM_Common_Btn_Symbol*
		constexpr auto Txt_Title_Board = 0x318; // UMirTextBlock*
		constexpr auto Btn_Close_Board = 0x320; // UMM_Common_Btn_Symbol*
		constexpr auto InfoSlot_List = 0x328; // TArray<UMM_Fame_List_SubSlot*>
		constexpr auto BoardSlot_List = 0x338; // TArray<UMM_Fame_DetailInfo_Slot*>
		constexpr auto m_MaxInfoSlotCount = 0x348; // int32_t
		constexpr auto m_CurrentInfoSlotCount = 0x34c; // int32_t
		constexpr auto m_MaxBoardSlotCount = 0x350; // int32_t
		constexpr auto m_CurrentBoardSlotCount = 0x354; // int32_t
		constexpr auto STRID_BOARD_TITLE = 0x358; // int32_t
	}

	namespace n_UMM_PKRecordList { // : UWidgetBase
		constexpr auto m_Txt_Time = 0x2e8; // UTextBlock*
		constexpr auto m_Img_Win = 0x2f0; // UImage*
		constexpr auto m_Img_Die = 0x2f8; // UImage*
		constexpr auto m_Img_UserClassMark = 0x300; // UImage*
		constexpr auto m_Txt_UserName = 0x308; // UTextBlock*
		constexpr auto m_Txt_UserCombatPoint = 0x310; // UTextBlock*
		constexpr auto m_Img_Frame = 0x318; // UImage*
		constexpr auto m_Img_Symbol = 0x320; // UImage*
		constexpr auto m_Txt_GuildName = 0x328; // UTextBlock*
		constexpr auto m_ActionBtn = 0x330; // UMM_Common_Btn*
	}

	namespace n_UMM_Popup_ServerVisit_GuildAlly_Slot { // : UWidgetBase
		constexpr auto m_Txt_GuildName = 0x2e0; // UMirTextBlock*
		constexpr auto m_Btn_Add_GuildList = 0x2e8; // UMM_Common_Btn_Symbol*
		constexpr auto m_Btn_Remove_GuildList = 0x2f0; // UMM_Common_Btn_Symbol*
	}

	namespace n_AARSkyLight { // : ASkyLight
		constexpr auto CaptureProbe = 0x228; // UAREnvironmentCaptureProbe*
	}

	namespace n_UParticleModuleColorScaleOverLife { // : UParticleModuleColorBase
		constexpr auto ColorScaleOverLife = 0x30; // FRawDistributionVector
		constexpr auto AlphaScaleOverLife = 0x78; // FRawDistributionFloat
		constexpr auto bEmitterTime = 0xa8; // char : 1
	}

	namespace n_UOnlineEngineInterfaceImpl { // : UOnlineEngineInterface
		constexpr auto VoiceSubsystemNameOverride = 0x28; // FName
	}

	namespace n_UMM_Popup_UIShopGuildGift { // : UWidgetBase
		constexpr auto mTxtTitle = 0x2e0; // UMirTextBlock*
		constexpr auto mTxtDesc = 0x2e8; // UMirTextBlock*
		constexpr auto mBtnClose = 0x2f0; // UMM_Common_Btn_Symbol*
		constexpr auto mBtnComfirm = 0x2f8; // UMM_Common_Btn*
	}

	namespace n_UMM_UIShopCashBag { // : UWidgetBase
		constexpr auto mScrollBox = 0x2f0; // UMirScrollBox*
		constexpr auto mTxtCashBagDesc = 0x2f8; // UMirTextBlock*
		constexpr auto mCommonNotice = 0x300; // UMM_Common_Board_Notice*
	}

	namespace n_UMM_GameOptionKeySettingGroup { // : UWidgetBase
		constexpr auto txt_group_name = 0x2e0; // UMirTextBlock*
		constexpr auto vb_group_slot = 0x2e8; // UVerticalBox*
	}

	namespace n_USpeechBalloonWidget { // : UWidgetBase
		constexpr auto m_pParentWidget = 0x260; // UWidgetBase*
		constexpr auto m_arChildWidget = 0x268; // TArray<TWeakObjectPtr<UWidgetBase>>
		constexpr auto m_arMirTextBlock = 0x280; // TArray<TWeakObjectPtr<UMirTextBlock>>
		constexpr auto m_arMirRichTextBlock = 0x290; // TArray<TWeakObjectPtr<UMirRichTextBlock>>
		constexpr auto m_arMirEditableText = 0x2a0; // TArray<TWeakObjectPtr<UMirEditableText>>
		constexpr auto m_arMirImage = 0x2b0; // TArray<TWeakObjectPtr<UMirImage>>
	}

	namespace n_UMM_UIAction_Costume_Editor { // : UMM_UIAction_Costume
		constexpr auto STRING_BTN_PURCHASE = 0x318; // int32_t
		constexpr auto STRING_BTN_PURCHASE_CHOICE = 0x31c; // int32_t
		constexpr auto STRING_BTN_EQUIP = 0x320; // int32_t
		constexpr auto STRING_BTN_UNEQUIP = 0x324; // int32_t
		constexpr auto STRING_ERROR_CHECK_COST = 0x328; // int32_t
		constexpr auto STRING_ERROR_SELCT_COSUTME = 0x32c; // int32_t
		constexpr auto STRING_ERROR_CONTENTS_OPEN = 0x330; // int32_t
		constexpr auto STRING_PURCHASE_MSG = 0x334; // int32_t
		constexpr auto STRING_CHANGECOLOR_COMPLETE_MSG = 0x338; // int32_t
		constexpr auto STRING_CHANGECOLOR_NOT_STRONGPOINT_MSG = 0x33c; // int32_t
		constexpr auto STRING_CHANGECOLOR_NOT_OCCUPATION_MSG = 0x340; // int32_t
		constexpr auto STRING_MSG_CHOSECOLOR = 0x344; // int32_t
		constexpr auto STRING_MSG_NONE_SELECT_COSTUME = 0x348; // int32_t
		constexpr auto STRING_MSG_REQUIER_MONEY_COST = 0x34c; // int32_t
		constexpr auto STRING_MSG_REQUIER_MONEY_ITEM = 0x350; // int32_t
		constexpr auto STRING_MSG_SUCCESS_EQUIP = 0x354; // int32_t
		constexpr auto STRING_MSG_SUCCESS_UNEQUIP = 0x358; // int32_t
		constexpr auto STRING_MSG_SUCCESS_DRYEING = 0x35c; // int32_t
		constexpr auto STRING_MSG_NONE_SELECT_DRYEING = 0x360; // int32_t
		constexpr auto STRING_MSG_HIDDEN_DEFAULT_COSTUME = 0x364; // int32_t
		constexpr auto STRING_MSG_UNEQUIP_DEFAULT_COSTUME = 0x368; // int32_t
		constexpr auto STRING_MSG_REQUEST_EQUIP_COSTUME = 0x36c; // int32_t
		constexpr auto STRING_MSG_NO_CAHNGE_COLOR = 0x370; // int32_t
	}

	namespace n_UMM_UIAction_ClassSelect { // : UMM_UIAction
		constexpr auto m_mapCustomizingActor = 0x68; // TMap<int32_t, AMM_CharacterCustomizingActor*>
	}

	namespace n_UMovieSceneGeometryCacheTrack { // : UMovieSceneNameableTrack
		constexpr auto AnimationSections = 0x58; // TArray<UMovieSceneSection*>
	}

	namespace n_UEdGraphPin_Deprecated { // : UObject
		constexpr auto PinName = 0x28; // FString
		constexpr auto PinToolTip = 0x38; // FString
		constexpr auto Direction = 0x48; // EEdGraphPinDirection
		constexpr auto PinType = 0x50; // FEdGraphPinType
		constexpr auto DefaultValue = 0xa8; // FString
		constexpr auto AutogeneratedDefaultValue = 0xb8; // FString
		constexpr auto DefaultObject = 0xc8; // UObject*
		constexpr auto DefaultTextValue = 0xd0; // FText
		constexpr auto LinkedTo = 0xe8; // TArray<UEdGraphPin_Deprecated*>
		constexpr auto SubPins = 0xf8; // TArray<UEdGraphPin_Deprecated*>
		constexpr auto ParentPin = 0x108; // UEdGraphPin_Deprecated*
		constexpr auto ReferencePassThroughConnection = 0x110; // UEdGraphPin_Deprecated*
	}

	namespace n_UBTTask_Wait { // : UBTTaskNode
		constexpr auto WaitTime = 0x70; // float
		constexpr auto RandomDeviation = 0x74; // float
	}

	namespace n_UUIParticle { // : UWidget
		constexpr auto Asset = 0x108; // UUIParticleAsset*
		constexpr auto EventOnEnd = 0x110; // FScriptMulticastDelegate
		constexpr auto bPlayParticle = 0x120; // char : 1
		constexpr auto IsPlaying = 0x121; // bool
	}

	namespace n_UGameplayTaskResource { // : UObject
		constexpr auto ManualResourceID = 0x28; // int32_t
		constexpr auto AutoResourceID = 0x2c; // uint8_t
		constexpr auto bManuallySetID = 0x30; // char : 1
	}

	namespace n_UEnvQueryManager { // : UAISubsystem
		constexpr auto InstanceCache = 0xa8; // TArray<FEnvQueryInstanceCache>
		constexpr auto LocalContexts = 0xb8; // TArray<UEnvQueryContext*>
		constexpr auto GCShieldedWrappers = 0xc8; // TArray<UEnvQueryInstanceBlueprintWrapper*>
		constexpr auto MaxAllowedTestingTime = 0x12c; // float
		constexpr auto bTestQueriesUsingBreadth = 0x130; // bool
		constexpr auto QueryCountWarningThreshold = 0x134; // int32_t
		constexpr auto QueryCountWarningInterval = 0x138; // double
	}

	namespace n_UMRMeshComponent { // : UPrimitiveComponent
		constexpr auto Material = 0x420; // UMaterialInterface*
		constexpr auto bCreateMeshProxySections = 0x428; // bool
		constexpr auto bUpdateNavMeshOnMeshUpdate = 0x429; // bool
		constexpr auto bNeverCreateCollisionMesh = 0x42a; // bool
		constexpr auto CachedBodySetup = 0x430; // UBodySetup*
		constexpr auto BodySetups = 0x438; // TArray<UBodySetup*>
		constexpr auto WireframeMaterial = 0x448; // UMaterialInterface*
	}

	namespace n_USoundWave { // : USoundBase
		constexpr auto CompressionQuality = 0x160; // int32_t
		constexpr auto StreamingPriority = 0x164; // int32_t
		constexpr auto SampleRateQuality = 0x168; // ESoundwaveSampleRateSettings
		constexpr auto SoundGroup = 0x16a; // ESoundGroup
		constexpr auto bLooping = 0x16b; // char : 1
		constexpr auto bStreaming = 0x16b; // char : 1
		constexpr auto bSeekableStreaming = 0x16b; // char : 1
		constexpr auto LoadingBehavior = 0x16c; // ESoundWaveLoadingBehavior
		constexpr auto bMature = 0x16d; // char : 1
		constexpr auto bManualWordWrap = 0x16d; // char : 1
		constexpr auto bSingleLine = 0x16d; // char : 1
		constexpr auto bIsAmbisonics = 0x16d; // char : 1
		constexpr auto FrequenciesToAnalyze = 0x170; // TArray<float>
		constexpr auto CookedSpectralTimeData = 0x180; // TArray<FSoundWaveSpectralTimeData>
		constexpr auto CookedEnvelopeTimeData = 0x190; // TArray<FSoundWaveEnvelopeTimeData>
		constexpr auto InitialChunkSize = 0x1a0; // int32_t
		constexpr auto SpokenText = 0x1e8; // FString
		constexpr auto SubtitlePriority = 0x1f8; // float
		constexpr auto Volume = 0x1fc; // float
		constexpr auto Pitch = 0x200; // float
		constexpr auto NumChannels = 0x204; // int32_t
		constexpr auto SampleRate = 0x208; // int32_t
		constexpr auto Subtitles = 0x218; // TArray<FSubtitleCue>
		constexpr auto Curves = 0x228; // UCurveTable*
		constexpr auto InternalCurves = 0x230; // UCurveTable*
	}

	namespace n_UMaterialExpressionTextureSampleParameterVolume { // : UMaterialExpressionTextureSampleParameter
		constexpr auto ParameterName = 0xd0; // FName
		constexpr auto ExpressionGUID = 0xd8; // FGuid
		constexpr auto Group = 0xe8; // FName
	}

	namespace n_UCameraAnimInst { // : UObject
		constexpr auto CamAnim = 0x28; // UCameraAnim*
		constexpr auto InterpGroupInst = 0x30; // UInterpGroupInst*
		constexpr auto PlayRate = 0x50; // float
		constexpr auto MoveTrack = 0x68; // UInterpTrackMove*
		constexpr auto MoveInst = 0x70; // UInterpTrackInstMove*
		constexpr auto PlaySpace = 0x78; // ECameraAnimPlaySpace
	}

	namespace n_UBoneMaskFilter { // : UObject
		constexpr auto BlendPoses = 0x28; // TArray<FInputBlendPose>
	}

	namespace n_USkyAtmosphereComponent { // : USceneComponent
		constexpr auto BottomRadius = 0x220; // float
		constexpr auto GroundAlbedo = 0x224; // FColor
		constexpr auto AtmosphereHeight = 0x228; // float
		constexpr auto MultiScatteringFactor = 0x22c; // float
		constexpr auto RayleighScatteringScale = 0x230; // float
		constexpr auto RayleighScattering = 0x234; // FLinearColor
		constexpr auto RayleighExponentialDistribution = 0x244; // float
		constexpr auto MieScatteringScale = 0x248; // float
		constexpr auto MieScattering = 0x24c; // FLinearColor
		constexpr auto MieAbsorptionScale = 0x25c; // float
		constexpr auto MieAbsorption = 0x260; // FLinearColor
		constexpr auto MieAnisotropy = 0x270; // float
		constexpr auto MieExponentialDistribution = 0x274; // float
		constexpr auto OtherAbsorptionScale = 0x278; // float
		constexpr auto OtherAbsorption = 0x27c; // FLinearColor
		constexpr auto OtherTentDistribution = 0x28c; // FTentDistribution
		constexpr auto SkyLuminanceFactor = 0x298; // FLinearColor
		constexpr auto AerialPespectiveViewDistanceScale = 0x2a8; // float
		constexpr auto HeightFogContribution = 0x2ac; // float
		constexpr auto TransmittanceMinLightElevationAngle = 0x2b0; // float
		constexpr auto bStaticLightingBuiltGUID = 0x2dc; // FGuid
	}

	namespace n_UMonoWaveTableSynthPreset { // : UObject
		constexpr auto PresetName = 0x28; // FString
		constexpr auto bLockKeyframesToGridBool = 0x38; // char : 1
		constexpr auto LockKeyframesToGrid = 0x3c; // int32_t
		constexpr auto WaveTableResolution = 0x40; // int32_t
		constexpr auto WaveTable = 0x48; // TArray<FRuntimeFloatCurve>
		constexpr auto bNormalizeWaveTables = 0x58; // char : 1
	}

	namespace n_UInterpTrackColorProp { // : UInterpTrackVectorBase
		constexpr auto PropertyName = 0x90; // FName
	}

	namespace n_APhysicsThruster { // : ARigidBodyBase
		constexpr auto ThrusterComponent = 0x218; // UPhysicsThrusterComponent*
	}

	namespace n_UMM_PetMain { // : UWidgetBase
		constexpr auto m_iInventoryID = 0x2f0; // int32_t
		constexpr auto m_iMinInvenSlotCount = 0x2f4; // int32_t
		constexpr auto m_Btn_ShowGradeUpPopup = 0x320; // UMirButton*
		constexpr auto m_Img_PetTypeBg = 0x328; // UMirImage*
		constexpr auto m_Img_Pet_Origin = 0x330; // UMirImage*
		constexpr auto m_Txt_PetType = 0x338; // UMirTextBlock*
		constexpr auto m_Txt_Name = 0x340; // UMirTextBlock*
		constexpr auto m_Img_Grade = 0x348; // UMirImage*
		constexpr auto m_Txt_CombatPoint = 0x350; // UMirTextBlock*
		constexpr auto m_Overlay_Locked = 0x358; // UPanelWidget*
		constexpr auto m_arSkillSlot = 0x360; // UMM_PetSkillSlot* [0x4]
		constexpr auto m_arEquipSlot = 0x380; // UMM_PetEquipSlot* [0x8]
		constexpr auto m_SkillSlotEffect = 0x3c0; // UEffectWidgetBase*
		constexpr auto m_Can_ShowGradeUpInfo = 0x3c8; // UPanelWidget*
		constexpr auto m_Btn_ShowGradeUpInfo = 0x3d0; // UMirButton*
		constexpr auto m_Can_GradeUpInfo = 0x3d8; // UPanelWidget*
		constexpr auto m_Img_GradeUpPetIcon_Bg = 0x3e0; // UMirImage*
		constexpr auto m_Img_GradeUpPetIcon = 0x3e8; // UMirImage*
		constexpr auto m_Img_GradeUpPetIcon_Grade = 0x3f0; // UMirImage*
		constexpr auto m_Txt_GradeUpPetIcon_Name = 0x3f8; // UMirTextBlock*
		constexpr auto m_Img_GradeUpInfo_PreGrade = 0x400; // UMirImage*
		constexpr auto m_Img_Next = 0x408; // UMirImage*
		constexpr auto m_Img_GradeUpInfo_NextGrade = 0x410; // UMirImage*
		constexpr auto m_Txt_GradeUpInfo_MaxGrade = 0x418; // UMirTextBlock*
		constexpr auto m_arPetGradeUp_SkillLevelSlot = 0x420; // UMM_PetGradeUp_SkillLevelSlot* [0x5]
		constexpr auto m_arSlot_GradeUpMaterial = 0x448; // UMM_Slot_Material_Item* [0x2]
		constexpr auto m_Hrz_MaxGradeNotice = 0x458; // UPanelWidget*
		constexpr auto m_CB_CancelGradeUp = 0x460; // UMM_Common_Btn*
		constexpr auto m_CB_GradeUp = 0x468; // UMM_Common_Btn_Cost*
		constexpr auto m_Vrt_SkillInfo = 0x470; // UPanelWidget*
		constexpr auto m_Txt_SkillName = 0x478; // UMirTextBlock*
		constexpr auto m_RTxt_SkillDes = 0x480; // UMirRichTextBlock*
		constexpr auto m_Vrt_ItemInfo = 0x488; // UPanelWidget*
		constexpr auto m_Txt_ItemName = 0x490; // UMirTextBlock*
		constexpr auto m_RTxt_PassiveName = 0x498; // UMirRichTextBlock*
		constexpr auto m_RTxt_PassiveDes = 0x4a0; // UMirRichTextBlock*
		constexpr auto m_arEquippedItemAbility = 0x4a8; // TArray<UMM_PopUp_ItemInfo_Ability*>
		constexpr auto m_Vrt_StatInfo = 0x4b8; // UPanelWidget*
		constexpr auto m_CB_ShowPopupUnlockedPetStatInfo = 0x4c0; // UMM_Common_Btn_Symbol*
		constexpr auto m_Hrz_StatInfo = 0x4c8; // UPanelWidget* [0x2]
		constexpr auto m_Txt_StatType = 0x4d8; // UMirTextBlock* [0x2]
		constexpr auto m_Txt_StatValue = 0x4e8; // UMirTextBlock* [0x2]
		constexpr auto m_Txt_StatEmpty = 0x4f8; // UMirTextBlock*
		constexpr auto m_Can_Right = 0x500; // UPanelWidget*
		constexpr auto m_PetDeckGroup = 0x508; // UMM_PetDeckGroup*
		constexpr auto m_PetDeckGroup_New = 0x510; // UMM_PetDeckGroup*
		constexpr auto m_PetQuickTab = 0x518; // UMM_PetQuickTab*
		constexpr auto m_Txt_SelectDeckIndex = 0x520; // UMirTextBlock*
		constexpr auto m_Btn_SelectDeck = 0x528; // UMirButton*
		constexpr auto m_Vrt_ShowPopupEquippedPetStat = 0x530; // UPanelWidget*
		constexpr auto m_Btn_ShowPopupEquippedPetStat = 0x538; // UMirButton*
		constexpr auto m_Img_PetQuickTabBg = 0x540; // UMirImage*
		constexpr auto m_Can_PetQuickTab = 0x548; // UPanelWidget*
		constexpr auto m_CB_PetListTab = 0x550; // UMM_Common_Btn_Inven*
		constexpr auto m_CB_ItemListTab = 0x558; // UMM_Common_Btn_Inven*
		constexpr auto m_Scr_PetList = 0x560; // UMirScrollBox*
		constexpr auto m_Wrap_PetList = 0x568; // UPanelWidget*
		constexpr auto m_PetEquipInven = 0x570; // UMM_NewInventory_Pet*
		constexpr auto m_arPetSlot = 0x578; // TArray<UMM_PetSlot*>
		constexpr auto m_SortListBtn = 0x588; // UMM_SortListBtn*
		constexpr auto m_CB_PetCompose = 0x590; // UMM_Common_Btn*
		constexpr auto m_CB_Action = 0x598; // UMM_Common_Btn*
		constexpr auto m_CB_EquipCompose = 0x5a0; // UMM_Common_Btn*
		constexpr auto m_PetEquipGuide = 0x5a8; // UMM_SelectGuide*
		constexpr auto m_PetEquipItemGuide = 0x5b0; // UMM_SelectGuide*
		constexpr auto m_Btn_Back = 0x5b8; // UMirButton*
		constexpr auto m_Btn_PetClick = 0x5c0; // UMirButton*
		constexpr auto m_AniQuickTabStart = 0x5c8; // UWidgetAnimation*
		constexpr auto m_AniQuickTabEnd = 0x5d0; // UWidgetAnimation*
		constexpr auto m_AniQuickTabClick = 0x5d8; // UWidgetAnimation*
		constexpr auto m_AniPetSkillSlot = 0x5e0; // UWidgetAnimation* [0x4]
		constexpr auto m_AniPetEquipSlot = 0x600; // UWidgetAnimation* [0x8]
		constexpr auto m_AniShowSkillInfo = 0x640; // UWidgetAnimation*
		constexpr auto m_AniHideSkillInfo = 0x648; // UWidgetAnimation*
		constexpr auto m_AniShowItemInfo = 0x650; // UWidgetAnimation*
		constexpr auto m_AniHideItemInfo = 0x658; // UWidgetAnimation*
		constexpr auto m_AniShowStatInfo = 0x660; // UWidgetAnimation*
		constexpr auto m_AniHideStatInfo = 0x668; // UWidgetAnimation*
	}

	namespace n_UMM_B_Individual_Storage { // : UWidgetBase
		constexpr auto INVENTORY_ID = 0x2e0; // int32_t
		constexpr auto m_InvenLeft = 0x2e8; // UMM_NewInventory_StorageLeft*
		constexpr auto m_InvenRight = 0x2f0; // UMM_NewInventory_StorageRight*
	}

	namespace n_UEnvQueryTest_Pathfinding { // : UEnvQueryTest
		constexpr auto TestMode = 0x1c0; // EEnvTestPathfinding
		constexpr auto Context = 0x1c8; // UEnvQueryContext*
		constexpr auto PathFromContext = 0x1d0; // FAIDataProviderBoolValue
		constexpr auto SkipUnreachable = 0x200; // FAIDataProviderBoolValue
		constexpr auto FilterClass = 0x230; // UNavigationQueryFilter*
	}

	namespace n_UAsyncActionLoadPrimaryAsset { // : UAsyncActionLoadPrimaryAssetBase
		constexpr auto Completed = 0x78; // FScriptMulticastDelegate
	}

	namespace n_UMM_GuildMemberSlotByGradeSlot { // : UWidgetBase
		constexpr auto lst_slot = 0x2e0; // TArray<UMM_GuildMemberSlot*>
	}

	namespace n_UBorder { // : UContentWidget
		constexpr auto HorizontalAlignment = 0x120; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x121; // EVerticalAlignment
		constexpr auto bShowEffectWhenDisabled = 0x122; // char : 1
		constexpr auto ContentColorAndOpacity = 0x124; // FLinearColor
		constexpr auto ContentColorAndOpacityDelegate = 0x134; // DelegateProperty
		constexpr auto Padding = 0x144; // FMargin
		constexpr auto BackGround = 0x158; // FSlateBrush
		constexpr auto BackgroundDelegate = 0x1e0; // DelegateProperty
		constexpr auto BrushColor = 0x1f0; // FLinearColor
		constexpr auto BrushColorDelegate = 0x200; // DelegateProperty
		constexpr auto DesiredSizeScale = 0x210; // FVector2D
		constexpr auto bFlipForRightToLeftFlowDirection = 0x218; // bool
		constexpr auto OnMouseButtonDownEvent = 0x21c; // DelegateProperty
		constexpr auto OnMouseButtonUpEvent = 0x22c; // DelegateProperty
		constexpr auto OnMouseMoveEvent = 0x23c; // DelegateProperty
		constexpr auto OnMouseDoubleClickEvent = 0x24c; // DelegateProperty
	}

	namespace n_UARTexture { // : UTexture
		constexpr auto TextureType = 0xd0; // EARTextureType
		constexpr auto Timestamp = 0xd4; // float
		constexpr auto ExternalTextureGuid = 0xd8; // FGuid
		constexpr auto Size = 0xe8; // FVector2D
	}

	namespace n_UBaseMediaSource { // : UMediaSource
		constexpr auto PlayerName = 0x80; // FName
	}

	namespace n_AGenDataActor { // : AActor
		constexpr auto PosID = 0x218; // int32_t
		constexpr auto Refer = 0x220; // FString
		constexpr auto Stage = 0x230; // int32_t
		constexpr auto GenObjectID = 0x234; // int32_t
		constexpr auto GenObjectName = 0x238; // FString
		constexpr auto GenObjectType = 0x248; // int32_t
		constexpr auto SpawnCount = 0x24c; // int32_t
		constexpr auto SpawnRange = 0x250; // int32_t
		constexpr auto ActiveType = 0x254; // int32_t
		constexpr auto RegMinTime = 0x258; // int32_t
		constexpr auto RegMaxTime = 0x25c; // int32_t
		constexpr auto GenType = 0x260; // int32_t
		constexpr auto FirstGenDelayMin = 0x264; // int32_t
		constexpr auto FirstGenDelayMax = 0x268; // int32_t
		constexpr auto GroupGenMemo = 0x270; // FString
		constexpr auto GroupGenID = 0x280; // int32_t
		constexpr auto GroupGenTimeLine = 0x288; // TArray<int32_t>
		constexpr auto GroupGenCountThreshold = 0x298; // int32_t
		constexpr auto RoamingId = 0x29c; // int32_t
		constexpr auto RoamingType = 0x2a0; // int32_t
		constexpr auto RoamingPath = 0x2a8; // AGenRoamingDataActor*
		constexpr auto RoamingPathDelay = 0x2b0; // TArray<int32_t>
		constexpr auto LinkGroupMemo = 0x2c0; // FString
		constexpr auto LinkGroup = 0x2d0; // int32_t
		constexpr auto LinkGroupDistance = 0x2d4; // int32_t
		constexpr auto bDrawDistance = 0x2d8; // bool
		constexpr auto Mesh = 0x2e8; // USkeletalMeshComponent*
	}

	namespace n_UBoxComponent { // : UShapeComponent
		constexpr auto BoxExtent = 0x430; // FVector
		constexpr auto LineThickness = 0x43c; // float
	}

	namespace n_UMM_Ability_RandomSlot { // : UWidgetBase
		constexpr auto m_pParentWidget = 0x260; // UWidgetBase*
		constexpr auto m_arChildWidget = 0x268; // TArray<TWeakObjectPtr<UWidgetBase>>
		constexpr auto m_arMirTextBlock = 0x280; // TArray<TWeakObjectPtr<UMirTextBlock>>
		constexpr auto m_arMirRichTextBlock = 0x290; // TArray<TWeakObjectPtr<UMirRichTextBlock>>
		constexpr auto m_arMirEditableText = 0x2a0; // TArray<TWeakObjectPtr<UMirEditableText>>
		constexpr auto m_arMirImage = 0x2b0; // TArray<TWeakObjectPtr<UMirImage>>
	}

	namespace n_UMM_UIShopGachaResult { // : UWidgetBase
		constexpr auto m_Ani_Start = 0x2f0; // UWidgetAnimation*
		constexpr auto m_Ani_End = 0x2f8; // UWidgetAnimation*
		constexpr auto m_Ani_BonusCount = 0x300; // UWidgetAnimation*
		constexpr auto m_Panel_BtnArea = 0x308; // UMirCanvasPanel*
		constexpr auto m_Txt_Skip = 0x310; // UMirTextBlock*
		constexpr auto m_CheckBox_Skip = 0x318; // UMirCheckBox*
		constexpr auto m_Txt_GachaFreeTime1 = 0x320; // UMirTextBlock*
		constexpr auto m_Btn_Close = 0x328; // UMM_Common_Btn*
		constexpr auto m_Hrz_Mileage1 = 0x330; // UHorizontalBox*
		constexpr auto m_Img_Mileage1 = 0x338; // UMirImage*
		constexpr auto m_Txt_MileageCount1 = 0x340; // UMirTextBlock*
		constexpr auto m_Btn_StartGachaCount1 = 0x348; // UMM_Common_Btn_Cost*
		constexpr auto m_Hrz_Mileage11 = 0x350; // UHorizontalBox*
		constexpr auto m_Img_Mileage11 = 0x358; // UMirImage*
		constexpr auto m_Txt_MileageCount11 = 0x360; // UMirTextBlock*
		constexpr auto m_Btn_StartGachaCount11 = 0x368; // UMM_Common_Btn_Cost*
		constexpr auto m_Overlay_Gold = 0x370; // UOverlay*
		constexpr auto m_Img_Gold = 0x378; // UMirImage*
		constexpr auto m_Txt_Gold = 0x380; // UMirTextBlock*
		constexpr auto m_Overlay_Bonus = 0x388; // UOverlay*
		constexpr auto m_Txt_BonusCount = 0x390; // UMirTextBlock*
		constexpr auto m_Txt_BonusPoint = 0x398; // UMirTextBlock*
		constexpr auto m_Panel_EventBonus = 0x3a0; // UMirCanvasPanel*
		constexpr auto m_Txt_EventTime = 0x3a8; // UMirTextBlock*
	}

	namespace n_ASpeechBalloonUI { // : AActor
		constexpr auto m_pSpeechBalloonWidget = 0x218; // USpeechBalloonWidget*
		constexpr auto m_pTargetMesh = 0x220; // USkeletalMeshComponent*
		constexpr auto m_pTarget = 0x228; // AMM_CharacterPawnBase*
	}

	namespace n_UImgMediaSettings { // : UObject
		constexpr auto DefaultFrameRate = 0x28; // FFrameRate
		constexpr auto CacheBehindPercentage = 0x30; // float
		constexpr auto CacheSizeGB = 0x34; // float
		constexpr auto CacheThreads = 0x38; // int32_t
		constexpr auto CacheThreadStackSizeKB = 0x3c; // int32_t
		constexpr auto GlobalCacheSizeGB = 0x40; // float
		constexpr auto UseGlobalCache = 0x44; // bool
		constexpr auto ExrDecoderThreads = 0x48; // uint32_t
		constexpr auto DefaultProxy = 0x50; // FString
		constexpr auto UseDefaultProxy = 0x60; // bool
	}

	namespace n_UARTrackedQRCode { // : UARTrackedImage
		constexpr auto QRCode = 0xf8; // FString
		constexpr auto Version = 0x108; // int32_t
	}

	namespace n_UMM_MAP_Waypoint_Category { // : UWidgetBase
		constexpr auto iCategoryNameStrID = 0x2f0; // int32_t
		constexpr auto m_Img_Bg_Select = 0x2f8; // UMirImage*
		constexpr auto m_Img_Arrow = 0x300; // UMirImage*
		constexpr auto m_Txt_Name = 0x308; // UMirTextBlock*
		constexpr auto m_Txt_Count = 0x310; // UMirTextBlock*
		constexpr auto m_Btn_Main = 0x318; // UMirButton*
		constexpr auto m_Vrt_Waypoint = 0x320; // UVerticalBox*
		constexpr auto m_arWaypointSlot = 0x328; // TArray<UMM_Map_Waypoint_List_Slot*>
	}

	namespace n_UMM_B_NFT_Relocation { // : UWidgetBase
		constexpr auto m_Txt_ConditionCount = 0x2f0; // UMirTextBlock*
		constexpr auto m_Scroll_ConditionList = 0x2f8; // UMirScrollBox*
		constexpr auto m_Btn_Start = 0x300; // UMM_Common_Btn_Cost*
		constexpr auto m_RTxt_ConditionNotice = 0x308; // UMirRichTextBlock*
		constexpr auto m_MenuTabSet = 0x310; // UMM_CommonHorizontalTabSet*
	}

	namespace n_APcWarpTrigger { // : AActivateTrigger
		constexpr auto m_EditorTriggerName = 0x220; // FString
		constexpr auto m_pActiveTriggerArray = 0x230; // TArray<AActivateTrigger*>
		constexpr auto m_TriggerIndex = 0x240; // int32_t
		constexpr auto m_TriggerType = 0x244; // ETriggerType
		constexpr auto m_bActiveTriggerCondition = 0x268; // bool
		constexpr auto m_bActivated = 0x269; // bool
		constexpr auto m_pTriggerManager = 0x270; // AMM_TriggerManager*
	}

	namespace n_UMaterialParameterCollection { // : UObject
		constexpr auto StateID = 0x28; // FGuid
		constexpr auto ScalarParameters = 0x38; // TArray<FCollectionScalarParameter>
		constexpr auto VectorParameters = 0x48; // TArray<FCollectionVectorParameter>
	}

	namespace n_UMM_Popup_CollectComplete { // : UWidgetBase
		constexpr auto m_Btn_Bg = 0x2e0; // UMirButton*
		constexpr auto m_Panel_Effect = 0x2e8; // UPanelWidget*
		constexpr auto m_Txt_Title = 0x2f0; // UMirTextBlock*
		constexpr auto m_Txt_Info = 0x2f8; // UMirTextBlock*
		constexpr auto m_Img_Effect = 0x300; // UMirImage*
		constexpr auto m_Txt_Effect = 0x308; // UMirTextBlock*
		constexpr auto m_OpenAni = 0x310; // UWidgetAnimation*
		constexpr auto m_TitleStrID = 0x318; // int32_t
		constexpr auto m_CloseStrID = 0x31c; // int32_t
	}

	namespace n_AGameModeBase { // : AInfo
		constexpr auto OptionsString = 0x218; // FString
		constexpr auto GameSessionClass = 0x228; // AGameSession*
		constexpr auto GameStateClass = 0x230; // AGameStateBase*
		constexpr auto PlayerControllerClass = 0x238; // APlayerController*
		constexpr auto PlayerStateClass = 0x240; // APlayerState*
		constexpr auto HUDClass = 0x248; // AHUD*
		constexpr auto DefaultPawnClass = 0x250; // APawn*
		constexpr auto SpectatorClass = 0x258; // ASpectatorPawn*
		constexpr auto ReplaySpectatorPlayerControllerClass = 0x260; // APlayerController*
		constexpr auto ServerStatReplicatorClass = 0x268; // AServerStatReplicator*
		constexpr auto GameSession = 0x270; // AGameSession*
		constexpr auto GameState = 0x278; // AGameStateBase*
		constexpr auto ServerStatReplicator = 0x280; // AServerStatReplicator*
		constexpr auto DefaultPlayerName = 0x288; // FText
		constexpr auto bUseSeamlessTravel = 0x2a0; // char : 1
		constexpr auto bStartPlayersAsSpectators = 0x2a0; // char : 1
		constexpr auto bPauseable = 0x2a0; // char : 1
	}

	namespace n_AMM_HQPlayerReferenceActor { // : AActor
		constexpr auto m_pMesh = 0x3f8; // USkeletalMeshComponent*
		constexpr auto m_pPartsComponent = 0x400; // UMM_CharacterPartsComponent*
		constexpr auto m_mapAnimBlueprint = 0x408; // TMap<FName, UObject*>
		constexpr auto CapsuleComponent = 0x458; // UCapsuleComponent*
	}

	namespace n_UFootStepSoundNotify { // : UAnimNotify
		constexpr auto FootStepSoundType = 0x38; // EFootStepSoundType
	}

	namespace n_AMM_GatherObject { // : AMM_ObjectBase
		constexpr auto m_bPoolingObject = 0x428; // bool
		constexpr auto ObjectNameTagWidget = 0x458; // UObjectNameTagWidget*
		constexpr auto WidgetComp = 0x460; // UWidgetComponent*
		constexpr auto NameTagWidgetComponent = 0x468; // UWidgetComponent*
		constexpr auto InteractionWidgetComponent = 0x470; // UWidgetComponent*
		constexpr auto LoopEffectComponent = 0x480; // UParticleSystemComponent*
		constexpr auto m_LoopParticleSystem = 0x488; // UParticleSystem*
		constexpr auto OperatingBtnWidget = 0x4c8; // UOperatingButtonWidget*
	}

	namespace n_UMM_Hud_Chat_BroadcastMessage { // : UWidgetBase
		constexpr auto Txt_WorldMessage = 0x2f0; // UMirTextBlock*
	}

	namespace n_UMM_Popup_UnsealingAcceleration { // : UWidgetBase
		constexpr auto m_CB_Close = 0x300; // UMM_Common_Btn_Symbol*
		constexpr auto m_Slot_Item = 0x308; // UMM_Slot_Material*
		constexpr auto m_Txt_ItemName = 0x310; // UMirTextBlock*
		constexpr auto m_Txt_ItemGrade = 0x318; // UMirTextBlock*
		constexpr auto m_Txt_SupportCount = 0x320; // UMirTextBlock*
		constexpr auto m_Prg_Time = 0x328; // UMirProgressBar*
		constexpr auto m_Prg_SupportTime = 0x330; // UMirProgressBar*
		constexpr auto m_Txt_Time = 0x338; // UMirTextBlock*
		constexpr auto m_Scr_AccelerationList = 0x340; // UMirScrollBox*
		constexpr auto m_arAccelerationSlot = 0x348; // TArray<UMM_UnsealingAccelerationSlot*>
		constexpr auto m_pSliderPoint = 0x358; // UMM_Item_Make_Slider*
		constexpr auto m_pTxtAtTime = 0x360; // UMirTextBlock*
		constexpr auto m_pTxtUsePoint = 0x368; // UMirTextBlock*
		constexpr auto m_pTxtMyPoint = 0x370; // UMirTextBlock*
		constexpr auto m_pBtnCancle = 0x378; // UMM_Common_Btn*
		constexpr auto m_pBtnOk = 0x380; // UMM_Common_Btn*
	}

	namespace n_UMovieSceneSequence { // : UMovieSceneSignedObject
		constexpr auto PrecompiledEvaluationTemplate = 0x50; // FMovieSceneEvaluationTemplate
		constexpr auto DefaultCompletionMode = 0x340; // EMovieSceneCompletionMode
		constexpr auto bParentContextsAreSignificant = 0x341; // bool
		constexpr auto bPlayableDirectly = 0x342; // bool
	}

	namespace n_UMM_DungeonCommonCondition { // : UWidgetBase
		constexpr auto txtFixUserCount = 0x2e0; // UMirTextBlock*
		constexpr auto txtUserCount = 0x2e8; // UMirTextBlock*
		constexpr auto txtFixNeedCombat = 0x2f0; // UMirTextBlock*
		constexpr auto txtNeedCombat = 0x2f8; // UMirTextBlock*
		constexpr auto txtFixRecommendCombat = 0x300; // UMirTextBlock*
		constexpr auto txtRecommendCombat = 0x308; // UMirTextBlock*
		constexpr auto btnDetailInfo = 0x310; // UMM_Common_ToolTipBtn*
	}

	namespace n_UForceFeedbackComponent { // : USceneComponent
		constexpr auto ForceFeedbackEffect = 0x220; // UForceFeedbackEffect*
		constexpr auto bAutoDestroy = 0x228; // char : 1
		constexpr auto bStopWhenOwnerDestroyed = 0x228; // char : 1
		constexpr auto bLooping = 0x228; // char : 1
		constexpr auto bIgnoreTimeDilation = 0x228; // char : 1
		constexpr auto bOverrideAttenuation = 0x228; // char : 1
		constexpr auto IntensityMultiplier = 0x22c; // float
		constexpr auto AttenuationSettings = 0x230; // UForceFeedbackAttenuation*
		constexpr auto AttenuationOverrides = 0x238; // FForceFeedbackAttenuationSettings
		constexpr auto OnForceFeedbackFinished = 0x2e8; // FScriptMulticastDelegate
	}

	namespace n_UMM_Guild_DevItemSlot { // : UWidgetBase
		constexpr auto mImgIcon = 0x2f0; // UMirImage*
		constexpr auto mImgLock = 0x2f8; // UMirImage*
		constexpr auto mTxtCount = 0x300; // UMirTextBlock*
		constexpr auto mTxtFixedSuccess = 0x308; // UMirTextBlock*
		constexpr auto mTxtLockLevel = 0x310; // UMirTextBlock*
		constexpr auto mBtnGotoGuildDev = 0x318; // UMirButton*
	}

	namespace n_UMM_SubTarget { // : UWidgetBase
		constexpr auto m_Ani_SubTarget = 0x2e0; // UWidgetAnimation*
	}

	namespace n_UActorSequenceComponent { // : UActorComponent
		constexpr auto PlaybackSettings = 0xb0; // FMovieSceneSequencePlaybackSettings
		constexpr auto Sequence = 0xc8; // UActorSequence*
		constexpr auto SequencePlayer = 0xd0; // UActorSequencePlayer*
	}

	namespace n_UMovieSceneParticleTrack { // : UMovieSceneNameableTrack
		constexpr auto ParticleSections = 0x58; // TArray<UMovieSceneSection*>
	}

	namespace n_UEditableTextBox { // : UWidget
		constexpr auto Text = 0x108; // FText
		constexpr auto TextDelegate = 0x120; // DelegateProperty
		constexpr auto WidgetStyle = 0x130; // FEditableTextBoxStyle
		constexpr auto Style = 0x920; // USlateWidgetStyleAsset*
		constexpr auto HintText = 0x928; // FText
		constexpr auto HintTextDelegate = 0x940; // DelegateProperty
		constexpr auto Font = 0x950; // FSlateFontInfo
		constexpr auto ForegroundColor = 0x9a0; // FLinearColor
		constexpr auto BackgroundColor = 0x9b0; // FLinearColor
		constexpr auto ReadOnlyForegroundColor = 0x9c0; // FLinearColor
		constexpr auto IsReadOnly = 0x9d0; // bool
		constexpr auto IsPassword = 0x9d1; // bool
		constexpr auto MinimumDesiredWidth = 0x9d4; // float
		constexpr auto Padding = 0x9d8; // FMargin
		constexpr auto IsCaretMovedWhenGainFocus = 0x9e8; // bool
		constexpr auto SelectAllTextWhenFocused = 0x9e9; // bool
		constexpr auto RevertTextOnEscape = 0x9ea; // bool
		constexpr auto ClearKeyboardFocusOnCommit = 0x9eb; // bool
		constexpr auto SelectAllTextOnCommit = 0x9ec; // bool
		constexpr auto AllowContextMenu = 0x9ed; // bool
		constexpr auto KeyboardType = 0x9ee; // EVirtualKeyboardType
		constexpr auto VirtualKeyboardOptions = 0x9ef; // FVirtualKeyboardOptions
		constexpr auto VirtualKeyboardDismissAction = 0x9f0; // EVirtualKeyboardDismissAction
		constexpr auto Justification = 0x9f1; // ETextJustify
		constexpr auto ShapedTextOptions = 0x9f2; // FShapedTextOptions
		constexpr auto OnTextChanged = 0x9f8; // FScriptMulticastDelegate
		constexpr auto OnTextCommitted = 0xa08; // FScriptMulticastDelegate
	}

	namespace n_ALevelSequenceActor { // : AActor
		constexpr auto PlaybackSettings = 0x228; // FMovieSceneSequencePlaybackSettings
		constexpr auto SequencePlayer = 0x240; // ULevelSequencePlayer*
		constexpr auto LevelSequence = 0x248; // FSoftObjectPath
		constexpr auto AdditionalEventReceivers = 0x260; // TArray<AActor*>
		constexpr auto CameraSettings = 0x270; // FLevelSequenceCameraSettings
		constexpr auto BurnInOptions = 0x278; // ULevelSequenceBurnInOptions*
		constexpr auto BindingOverrides = 0x280; // UMovieSceneBindingOverrides*
		constexpr auto bAutoPlay = 0x288; // char : 1
		constexpr auto bOverrideInstanceData = 0x288; // char : 1
		constexpr auto bReplicatePlayback = 0x288; // char : 1
		constexpr auto DefaultInstanceData = 0x290; // UObject*
		constexpr auto BurnInInstance = 0x298; // ULevelSequenceBurnIn*
		constexpr auto bShowBurnin = 0x2a0; // bool
	}

	namespace n_UMM_Popup_DominionTitleTooltip { // : UWidgetBase
		constexpr auto m_pGridTooltip = 0x2e8; // UPanelWidget*
		constexpr auto m_pVerticalBox = 0x2f0; // UVerticalBox*
		constexpr auto m_pBtnBg = 0x2f8; // UMirButton*
		constexpr auto m_pImgBg = 0x300; // UMirImage*
		constexpr auto m_pTxtName = 0x308; // UMirTextBlock*
		constexpr auto m_arrTooltip = 0x310; // TArray<UMM_Dominion_Title_Tooltip*>
	}

	namespace n_UBrushComponent { // : UPrimitiveComponent
		constexpr auto Brush = 0x418; // UModel*
		constexpr auto BrushBodySetup = 0x420; // UBodySetup*
	}

	namespace n_UMaterialExpressionRotateAboutAxis { // : UMaterialExpression
		constexpr auto NormalizedRotationAxis = 0x40; // FExpressionInput
		constexpr auto RotationAngle = 0x54; // FExpressionInput
		constexpr auto PivotPoint = 0x68; // FExpressionInput
		constexpr auto Position = 0x7c; // FExpressionInput
		constexpr auto Period = 0x90; // float
	}

	namespace n_UMM_Popup_ServerSelect { // : UWidgetBase
		constexpr auto m_Can_ServerSelect = 0x2e8; // UPanelWidget*
		constexpr auto m_Can_FindChar = 0x2f0; // UPanelWidget*
		constexpr auto m_CB_ServerListRefresh = 0x2f8; // UMM_Common_Btn_Symbol*
		constexpr auto m_CB_ServerSelectClose = 0x300; // UMM_Common_Btn_Symbol*
		constexpr auto m_Img_TotalFilter_Selected = 0x308; // UMirImage*
		constexpr auto m_Img_RecommendFilter_Selected = 0x310; // UMirImage*
		constexpr auto m_Img_MyFilter_Selected = 0x318; // UMirImage*
		constexpr auto m_Btn_TotalFilter = 0x320; // UMirButton*
		constexpr auto m_Btn_RecommendFilter = 0x328; // UMirButton*
		constexpr auto m_Btn_MyFilter = 0x330; // UMirButton*
		constexpr auto m_WScr_ServerList = 0x338; // UMirWrapScrollBox*
		constexpr auto m_arServerSlot = 0x340; // TArray<UMM_ServerSlot*>
		constexpr auto m_Can_RecentServer = 0x350; // UPanelWidget*
		constexpr auto m_Txt_RecentServerName = 0x358; // UMirTextBlock*
		constexpr auto m_Img_ServerCongestionInfo_1 = 0x360; // UMirImage*
		constexpr auto m_Txt_ServerCongestionInfo_1 = 0x368; // UMirTextBlock*
		constexpr auto m_Img_ServerCongestionInfo_2 = 0x370; // UMirImage*
		constexpr auto m_Txt_ServerCongestionInfo_2 = 0x378; // UMirTextBlock*
		constexpr auto m_Img_ServerCongestionInfo_3 = 0x380; // UMirImage*
		constexpr auto m_Txt_ServerCongestionInfo_3 = 0x388; // UMirTextBlock*
		constexpr auto m_CB_GoToFindChar = 0x390; // UMM_Common_Btn*
		constexpr auto m_CB_FindCharClose = 0x398; // UMM_Common_Btn_Symbol*
		constexpr auto m_Scr_CharList = 0x3a0; // UMirScrollBox*
		constexpr auto m_arCharSlot = 0x3a8; // TArray<UMM_FindCharSlot*>
	}

	namespace n_UMaterialExpressionSkyAtmosphereLightIlluminance { // : UMaterialExpression
		constexpr auto LightIndex = 0x40; // int32_t
		constexpr auto WorldPosition = 0x44; // FExpressionInput
	}

	namespace n_UNullNavSysConfig { // : UNavigationSystemConfig
		constexpr auto NavigationSystemClass = 0x28; // FSoftClassPath
		constexpr auto SupportedAgentsMask = 0x40; // FNavAgentSelector
		constexpr auto DefaultAgentName = 0x44; // FName
		constexpr auto bIsOverriden = 0x4c; // char : 1
	}

	namespace n_UPreviewMeshCollection { // : UDataAsset
		constexpr auto Skeleton = 0x38; // USkeleton*
		constexpr auto SkeletalMeshes = 0x40; // TArray<FPreviewMeshCollectionEntry>
	}

	namespace n_UDebugCameraControllerSettings { // : UDeveloperSettings
		constexpr auto CycleViewModes = 0x38; // TArray<FDebugCameraControllerSettingsViewModeIndex>
	}

	namespace n_UPostProcessComponent { // : USceneComponent
		constexpr auto Settings = 0x230; // FPostProcessSettings
		constexpr auto Priority = 0x760; // float
		constexpr auto BlendRadius = 0x764; // float
		constexpr auto BlendWeight = 0x768; // float
		constexpr auto bEnabled = 0x76c; // char : 1
		constexpr auto bUnbound = 0x76c; // char : 1
	}

	namespace n_UInterpTrackFloatMaterialParam { // : UInterpTrackFloatBase
		constexpr auto TargetMaterials = 0x90; // TArray<UMaterialInterface*>
		constexpr auto ParamName = 0xa0; // FName
	}

	namespace n_UMM_Popup_OptionChange { // : UWidgetBase
		constexpr auto m_fMaxSpeed = 0x2f0; // float
		constexpr auto m_fMinSpeed = 0x2f4; // float
		constexpr auto m_fMaxTime = 0x2f8; // float
		constexpr auto m_fDecreaseTime = 0x2fc; // float
		constexpr auto m_pCurve = 0x300; // UCurveFloat*
		constexpr auto m_fAutoTerm = 0x308; // float
		constexpr auto Ani_Open = 0x310; // UWidgetAnimation*
		constexpr auto Ani_Close = 0x318; // UWidgetAnimation*
		constexpr auto Ani_Show_Up = 0x320; // UWidgetAnimation*
		constexpr auto Ani_Show_Up_2 = 0x328; // UWidgetAnimation*
		constexpr auto Btn_OptionList_Slot = 0x330; // UMM_Common_Btn_Symbol*
		constexpr auto Slot_Target = 0x338; // UMM_Slot_Registered*
		constexpr auto Txt_Target = 0x340; // UMirTextBlock*
		constexpr auto OptionList_Ability = 0x348; // UMM_AddOptionList*
		constexpr auto Txt_NowAbility = 0x350; // UMirTextBlock*
		constexpr auto Ability_Now = 0x358; // UMM_AbilityState_Item* [0x4]
		constexpr auto Txt_NewAbility = 0x378; // UMirTextBlock*
		constexpr auto Ability_New = 0x380; // UMM_AbilityState_Item* [0x4]
		constexpr auto Ability_Now_Eigth = 0x3a0; // UMM_AbilityState_Item* [0x8]
		constexpr auto Ability_New_Eigth = 0x3e0; // UMM_AbilityState_Item* [0x8]
		constexpr auto m_PanelForFour = 0x420; // UMirCanvasPanel*
		constexpr auto m_PanelForEight = 0x428; // UMirCanvasPanel*
		constexpr auto Btn_Continue = 0x430; // UMM_Common_Btn*
		constexpr auto Btn_Apply = 0x438; // UMM_Common_Btn*
		constexpr auto Btn_Auto_Option = 0x440; // UMM_Common_Btn*
		constexpr auto btn_close_2 = 0x448; // UMM_Common_Btn*
		constexpr auto Btn_Apply_2 = 0x450; // UMM_Common_Btn*
		constexpr auto Txt_Notice = 0x458; // UMirRichTextBlock*
		constexpr auto btn_close = 0x460; // UMM_Common_Btn_Symbol*
		constexpr auto txt_money = 0x468; // UMirTextBlock*
		constexpr auto Txt_Money1 = 0x470; // UMirTextBlock*
		constexpr auto Effect_Panel = 0x478; // UPanelWidget*
		constexpr auto Image_Need_Item = 0x480; // UMirImage*
		constexpr auto Txt_Have_Count = 0x488; // UMirTextBlock*
		constexpr auto Txt_Need_Count = 0x490; // UMirTextBlock*
		constexpr auto Btn_Material1 = 0x498; // UMirButton*
		constexpr auto Btn_Material2 = 0x4a0; // UMirButton*
		constexpr auto Txt_Auto_Count = 0x4a8; // UMirRichTextBlock*
	}

	namespace n_ASkyLight { // : AInfo
		constexpr auto LightComponent = 0x218; // USkyLightComponent*
		constexpr auto bEnabled = 0x220; // char : 1
	}

	namespace n_UDistributionVectorUniformCurve { // : UDistributionVector
		constexpr auto ConstantCurve = 0x38; // FInterpCurveTwoVectors
		constexpr auto bLockAxes1 = 0x50; // char : 1
		constexpr auto bLockAxes2 = 0x50; // char : 1
		constexpr auto LockedAxes = 0x54; // EDistributionVectorLockFlags [0x2]
		constexpr auto MirrorFlags = 0x56; // EDistributionVectorMirrorFlags [0x3]
		constexpr auto bUseExtremes = 0x5c; // char : 1
	}

	namespace n_UForceFeedbackEffect { // : UObject
		constexpr auto ChannelDetails = 0x28; // TArray<FForceFeedbackChannelDetails>
		constexpr auto Duration = 0x38; // float
	}

	namespace n_AOnlineBeaconHost { // : AOnlineBeacon
		constexpr auto ListenPort = 0x248; // int32_t
		constexpr auto ClientActors = 0x250; // TArray<AOnlineBeaconClient*>
	}

	namespace n_UComboWidget { // : UWidgetBase
		constexpr auto Color_2 = 0x910; // FLinearColor
		constexpr auto Color_11 = 0x920; // FLinearColor
		constexpr auto Color_101 = 0x930; // FLinearColor
		constexpr auto Number_1 = 0x940; // FSlateBrush
		constexpr auto Number_2 = 0x9c8; // FSlateBrush
		constexpr auto Number_3 = 0xa50; // FSlateBrush
		constexpr auto Number_4 = 0xad8; // FSlateBrush
		constexpr auto Number_5 = 0xb60; // FSlateBrush
		constexpr auto Number_6 = 0xbe8; // FSlateBrush
		constexpr auto Number_7 = 0xc70; // FSlateBrush
		constexpr auto Number_8 = 0xcf8; // FSlateBrush
		constexpr auto Number_9 = 0xd80; // FSlateBrush
		constexpr auto Number_10 = 0xe08; // FSlateBrush
		constexpr auto m_pAnimFadeIn = 0xe90; // UWidgetAnimation*
		constexpr auto m_pAnimChangeNum = 0xe98; // UWidgetAnimation*
		constexpr auto m_pAnimFadeOut = 0xea0; // UWidgetAnimation*
		constexpr auto m_Img_Combo = 0xee8; // UMirImage*
	}

	namespace n_UMM_Skill_DeckBtnTab { // : UWidgetBase
		constexpr auto m_BtnDeck = 0x2f0; // UMirButton*
		constexpr auto m_TxtDeck = 0x2f8; // UMirTextBlock*
		constexpr auto m_ImgLock = 0x300; // UMirImage*
		constexpr auto m_ImgSelect = 0x308; // UMirImage*
	}

	namespace n_APortalInfoExporter { // : AActor
		constexpr auto m_bExport = 0x218; // bool
		constexpr auto m_bImport = 0x219; // bool
	}

	namespace n_UInterpTrackInstVectorMaterialParam { // : UInterpTrackInst
		constexpr auto MaterialInstances = 0x28; // TArray<UMaterialInstanceDynamic*>
		constexpr auto ResetVectors = 0x38; // TArray<FVector>
		constexpr auto PrimitiveMaterialRefs = 0x48; // TArray<FPrimitiveMaterialRef>
		constexpr auto InstancedTrack = 0x58; // UInterpTrackVectorMaterialParam*
	}

	namespace n_UMaterialExpressionStaticBoolParameter { // : UMaterialExpressionParameter
		constexpr auto DefaultValue = 0x58; // char : 1
	}

	namespace n_UPhysicsAsset { // : UObject
		constexpr auto BoundsBodies = 0x30; // TArray<int32_t>
		constexpr auto SkeletalBodySetups = 0x40; // TArray<USkeletalBodySetup*>
		constexpr auto ConstraintSetup = 0x50; // TArray<UPhysicsConstraintTemplate*>
		constexpr auto bNotForDedicatedServer = 0x60; // char : 1
		constexpr auto ThumbnailInfo = 0x108; // UThumbnailInfo*
		constexpr auto BodySetup = 0x110; // TArray<UBodySetup*>
	}

	namespace n_UGridPanel { // : UPanelWidget
		constexpr auto ColumnFill = 0x120; // TArray<float>
		constexpr auto RowFill = 0x130; // TArray<float>
	}

	namespace n_UMaterialExpressionMultiply { // : UMaterialExpression
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_UAnimSharingStateInstance { // : UAnimInstance
		constexpr auto AnimationToPlay = 0x268; // UAnimSequence*
		constexpr auto PermutationTimeOffset = 0x270; // float
		constexpr auto PlayRate = 0x274; // float
		constexpr auto bStateBool = 0x278; // bool
		constexpr auto Instance = 0x280; // UAnimSharingInstance*
	}

	namespace n_UEndMatchCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto OnFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_UAnimCompress_ACL { // : UAnimCompress_ACLBase
		constexpr auto CompressionLevel = 0x50; // ACLCompressionLevel
		constexpr auto DefaultVirtualVertexDistance = 0x54; // float
		constexpr auto SafeVirtualVertexDistance = 0x58; // float
		constexpr auto SafetyFallbackThreshold = 0x5c; // float
		constexpr auto ErrorThreshold = 0x60; // float
	}

	namespace n_UEnvelopeFollowerListener { // : UActorComponent
		constexpr auto OnEnvelopeFollowerUpdate = 0xb0; // FScriptMulticastDelegate
	}

	namespace n_UMM_Dominion_RewardSlot { // : UWidgetBase
		constexpr auto m_pSlotMaterial = 0x2e0; // UMM_Slot_Material*
		constexpr auto m_pTxtItemName = 0x2e8; // UMirTextBlock*
	}

	namespace n_UMM_NewInventory_StorageRight { // : UMM_NewInventory_Base
		constexpr auto m_InvenTab = 0x2e8; // UMM_NewInventoryTab*
		constexpr auto m_Inven = 0x2f0; // UMM_NewInventory*
		constexpr auto m_Txt_InvenCount = 0x2f8; // UMirTextBlock*
		constexpr auto m_SortListBtn = 0x300; // UMM_SortListBtn*
	}

	namespace n_UVolumeTexture { // : UTexture
		constexpr auto LightingGuid = 0x48; // FGuid
		constexpr auto LODBias = 0x58; // int32_t
		constexpr auto CompressionSettings = 0x5c; // TextureCompressionSettings
		constexpr auto Filter = 0x5d; // TextureFilter
		constexpr auto MipLoadOptions = 0x5e; // ETextureMipLoadOptions
		constexpr auto LODGroup = 0x5f; // TextureGroup
		constexpr auto SRGB = 0x60; // char : 1
		constexpr auto bNoTiling = 0x60; // char : 1
		constexpr auto VirtualTextureStreaming = 0x60; // char : 1
		constexpr auto CompressionYCoCg = 0x60; // char : 1
		constexpr auto bAsyncResourceReleaseHasBeenStarted = 0x60; // char : 1
		constexpr auto AssetUserData = 0x68; // TArray<UAssetUserData*>
	}

	namespace n_UMM_Popup_Auction_Guild { // : UWidgetBase
		constexpr auto m_pAuctionGuildSlot = 0x2e8; // UMM_Popup_Auction_GuildSlot*
		constexpr auto m_pTxtGuildTax = 0x2f0; // UMirTextBlock*
		constexpr auto m_pTxtMainCastleTax = 0x2f8; // UMirTextBlock*
		constexpr auto m_pTxtSubCastleTaxTax = 0x300; // UMirTextBlock*
		constexpr auto m_pTxtSystemTax = 0x308; // UMirRichTextBlock*
		constexpr auto m_pTxtTotalTax = 0x310; // UMirTextBlock*
		constexpr auto m_pBtnClose = 0x318; // UMM_Common_Btn_Symbol*
		constexpr auto m_pBtnOk = 0x320; // UMM_Common_Btn*
	}

	namespace n_UInterpFilter_Classes { // : UInterpFilter
		constexpr auto Caption = 0x28; // FString
	}

	namespace n_UMaterialExpressionRayTracingQualitySwitch { // : UMaterialExpression
		constexpr auto Normal = 0x40; // FExpressionInput
		constexpr auto RayTraced = 0x54; // FExpressionInput
	}

	namespace n_UParticleModuleAccelerationDrag { // : UParticleModuleAccelerationBase
		constexpr auto DragCoefficient = 0x38; // UDistributionFloat*
		constexpr auto DragCoefficientRaw = 0x40; // FRawDistributionFloat
	}

	namespace n_UMaterialExpressionClearCoatNormalCustomOutput { // : UMaterialExpressionCustomOutput
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UDialogueSoundWaveProxy { // : USoundBase
		constexpr auto SoundClassObject = 0x28; // USoundClass*
		constexpr auto bDebug = 0x30; // char : 1
		constexpr auto bOverrideConcurrency = 0x30; // char : 1
		constexpr auto bOutputToBusOnly = 0x30; // char : 1
		constexpr auto bHasDelayNode = 0x30; // char : 1
		constexpr auto bHasConcatenatorNode = 0x30; // char : 1
		constexpr auto bBypassVolumeScaleForPriority = 0x30; // char : 1
		constexpr auto VirtualizationMode = 0x31; // EVirtualizationMode
		constexpr auto ConcurrencySet = 0x88; // TSet<USoundConcurrency*>
		constexpr auto ConcurrencyOverrides = 0xd8; // FSoundConcurrencySettings
		constexpr auto Duration = 0xf8; // float
		constexpr auto MaxDistance = 0xfc; // float
		constexpr auto TotalSamples = 0x100; // float
		constexpr auto Priority = 0x104; // float
		constexpr auto AttenuationSettings = 0x108; // USoundAttenuation*
		constexpr auto Modulation = 0x110; // FSoundModulation
		constexpr auto SoundSubmixObject = 0x120; // USoundSubmix*
		constexpr auto SoundSubmixSends = 0x128; // TArray<FSoundSubmixSendInfo>
		constexpr auto SourceEffectChain = 0x138; // USoundEffectSourcePresetChain*
		constexpr auto BusSends = 0x140; // TArray<FSoundSourceBusSendInfo>
		constexpr auto PreEffectBusSends = 0x150; // TArray<FSoundSourceBusSendInfo>
	}

	namespace n_UPhysicsSettings { // : UDeveloperSettings
		constexpr auto DefaultGravityZ = 0x38; // float
		constexpr auto DefaultTerminalVelocity = 0x3c; // float
		constexpr auto DefaultFluidFriction = 0x40; // float
		constexpr auto SimulateScratchMemorySize = 0x44; // int32_t
		constexpr auto RagdollAggregateThreshold = 0x48; // int32_t
		constexpr auto TriangleMeshTriangleMinAreaThreshold = 0x4c; // float
		constexpr auto bEnableShapeSharing = 0x50; // bool
		constexpr auto bEnablePCM = 0x51; // bool
		constexpr auto bEnableStabilization = 0x52; // bool
		constexpr auto bWarnMissingLocks = 0x53; // bool
		constexpr auto bEnable2DPhysics = 0x54; // bool
		constexpr auto PhysicErrorCorrection = 0x58; // FRigidBodyErrorCorrection
		constexpr auto LockedAxis = 0x8c; // ESettingsLockedAxis
		constexpr auto DefaultDegreesOfFreedom = 0x8d; // ESettingsDOF
		constexpr auto BounceThresholdVelocity = 0x90; // float
		constexpr auto FrictionCombineMode = 0x94; // EFrictionCombineMode
		constexpr auto RestitutionCombineMode = 0x95; // EFrictionCombineMode
		constexpr auto MaxAngularVelocity = 0x98; // float
		constexpr auto MaxDepenetrationVelocity = 0x9c; // float
		constexpr auto ContactOffsetMultiplier = 0xa0; // float
		constexpr auto MinContactOffset = 0xa4; // float
		constexpr auto MaxContactOffset = 0xa8; // float
		constexpr auto bSimulateSkeletalMeshOnDedicatedServer = 0xac; // bool
		constexpr auto DefaultShapeComplexity = 0xad; // ECollisionTraceFlag
		constexpr auto bDefaultHasComplexCollision = 0xae; // bool
		constexpr auto bSuppressFaceRemapTable = 0xaf; // bool
		constexpr auto bSupportUVFromHitResults = 0xb0; // bool
		constexpr auto bDisableActiveActors = 0xb1; // bool
		constexpr auto bDisableKinematicStaticPairs = 0xb2; // bool
		constexpr auto bDisableKinematicKinematicPairs = 0xb3; // bool
		constexpr auto bDisableCCD = 0xb4; // bool
		constexpr auto bEnableEnhancedDeterminism = 0xb5; // bool
		constexpr auto AnimPhysicsMinDeltaTime = 0xb8; // float
		constexpr auto bSimulateAnimPhysicsAfterReset = 0xbc; // bool
		constexpr auto MaxPhysicsDeltaTime = 0xc0; // float
		constexpr auto bSubstepping = 0xc4; // bool
		constexpr auto bSubsteppingAsync = 0xc5; // bool
		constexpr auto MaxSubstepDeltaTime = 0xc8; // float
		constexpr auto MaxSubsteps = 0xcc; // int32_t
		constexpr auto SyncSceneSmoothingFactor = 0xd0; // float
		constexpr auto InitialAverageFrameRate = 0xd4; // float
		constexpr auto PhysXTreeRebuildRate = 0xd8; // int32_t
		constexpr auto PhysicalSurfaces = 0xe0; // TArray<FPhysicalSurfaceName>
		constexpr auto DefaultBroadphaseSettings = 0xf0; // FBroadphaseSettings
		constexpr auto ChaosSettings = 0x130; // FChaosPhysicsSettings
	}

	namespace n_UMM_Popup_ServerVisitSelect { // : UWidgetBase
		constexpr auto m_Btn_Close = 0x2f0; // UMM_Common_Btn_Symbol*
		constexpr auto m_Hrz_Contents = 0x2f8; // UHorizontalBox*
		constexpr auto m_arrContentsSlot = 0x300; // TArray<UMM_Popup_ServerVisitSelect_Slot*>
	}

	namespace n_UMM_HudQuestList { // : UWidgetBase
		constexpr auto m_fCheckQuestSelectedTime = 0x2f0; // float
		constexpr auto m_pHudQuestSlotWidget = 0x2f8; // UMM_HudQuestSlot*
		constexpr auto m_fTrackerSlotSizeY = 0x300; // float
		constexpr auto m_pMainQuestSlot = 0x308; // UMM_HudQuestSlot*
		constexpr auto m_pAutoSubQuestSlot = 0x310; // UMM_HudSubQuest_Slot*
		constexpr auto m_pQuestScrollBox = 0x318; // UScrollBox*
		constexpr auto m_pSubQuestSlotList = 0x320; // TArray<UMM_HudQuestSlot*>
		constexpr auto m_pMainGuideIcon = 0x338; // UMirImage*
		constexpr auto m_pMainGuideBG = 0x340; // UMirImage*
		constexpr auto m_pGuideAni = 0x348; // UWidgetAnimation*
	}

	namespace n_UMM_Popup_ServerVisitSelect_Slot { // : UWidgetBase
		constexpr auto m_ImgBg = 0x2e0; // UMirImage*
		constexpr auto m_TxtTitle = 0x2e8; // UMirTextBlock*
		constexpr auto m_RTxtTitleDesc = 0x2f0; // UMirRichTextBlock*
		constexpr auto m_BtnSelect = 0x2f8; // UMM_Common_Btn*
	}

	namespace n_UMM_Skill_AwakenResult { // : UWidgetBase
		constexpr auto m_BtnClose = 0x2e0; // UMirButton*
		constexpr auto m_ImgSkillIcon = 0x2e8; // UMirImage*
		constexpr auto m_TxtSkillTitle = 0x2f0; // UMirTextBlock*
		constexpr auto m_TxtSkillDesc = 0x2f8; // UMirTextBlock*
		constexpr auto m_TxtCloseDesc = 0x300; // UMirTextBlock*
		constexpr auto m_AniAwakenResult = 0x308; // UWidgetAnimation*
	}

	namespace n_UMM_Skill_DeckSetting { // : UWidgetBase
		constexpr auto m_arDeckBtn = 0x2f0; // UMM_Skill_DeckBtnTab* [0x2]
		constexpr auto m_MapSkillSlot = 0x300; // TMap<int32_t, UMM_Skill_DeckSlot*>
	}

	namespace n_UMM_Popup_NPCShopBuyCount { // : UWidgetBase
		constexpr auto mat_slot = 0x2e0; // UMM_Slot_Material*
		constexpr auto Txt_Title = 0x2e8; // UMirTextBlock*
		constexpr auto txt_item_name = 0x2f0; // UMirTextBlock*
		constexpr auto txt_item_count = 0x2f8; // UMirTextBlock*
		constexpr auto make_slider = 0x300; // UMM_Item_Make_Slider*
		constexpr auto btn_cancle = 0x308; // UMM_Common_Btn*
		constexpr auto btn_bye = 0x310; // UMM_Common_Btn_Cost*
		constexpr auto btn_close = 0x318; // UMM_Common_Btn_Symbol*
		constexpr auto m_pNoticePanel = 0x320; // UMirCanvasPanel*
		constexpr auto Txt_Notice = 0x328; // UMirRichTextBlock*
		constexpr auto STR_SELECT_COUNT = 0x330; // int32_t
	}

	namespace n_UMM_UIAction_ItemInfo_Simple { // : UMM_UIAction
		constexpr auto CONTENTS_ID_POPUP = 0x168; // int32_t
	}

	namespace n_AScriptTrigger { // : AActivateTrigger
		constexpr auto m_ScriptDataArray = 0x288; // TArray<FTriggerScriptData>
	}

	namespace n_UBTComposite_Selector { // : UBTCompositeNode
		constexpr auto Children = 0x58; // TArray<FBTCompositeChild>
		constexpr auto Services = 0x68; // TArray<UBTService*>
		constexpr auto bApplyDecoratorScope = 0x88; // char : 1
	}

	namespace n_UBTTask_PawnActionBase { // : UBTTaskNode
		constexpr auto Services = 0x58; // TArray<UBTService*>
		constexpr auto bIgnoreRestartSelf = 0x68; // char : 1
	}

	namespace n_UAREnvironmentCaptureProbeTexture { // : UTextureCube
		constexpr auto TextureType = 0x128; // EARTextureType
		constexpr auto Timestamp = 0x12c; // float
		constexpr auto ExternalTextureGuid = 0x130; // FGuid
		constexpr auto Size = 0x140; // FVector2D
	}

	namespace n_UFirebaseFutureUser { // : UBlueprintAsyncActionBase
		constexpr auto OnComplete = 0x30; // FScriptMulticastDelegate
	}

	namespace n_UMM_Popup_MailWrite { // : UWidgetBase
		constexpr auto STRING_RECEIVE_ID = 0x2f0; // int32_t
		constexpr auto STRING_HINT_TITLE = 0x2f4; // int32_t
		constexpr auto STRING_HINT_CONTENTS = 0x2f8; // int32_t
		constexpr auto MAX_TITLE_STRING_LEN = 0x2fc; // int32_t
		constexpr auto MAX_CONTENTS_STRING_LEN = 0x300; // int32_t
		constexpr auto m_Txt_ReceiveName = 0x308; // UMirTextBlock*
		constexpr auto m_EditableTxt_Title = 0x310; // UMirEditableText*
		constexpr auto m_EditableTxtBox_Contents = 0x318; // UMirMultiLineEditableText*
		constexpr auto m_C_Btn_Close = 0x320; // UMM_Common_Btn_Symbol*
		constexpr auto m_C_Btn_MailAddressbook = 0x328; // UMM_Common_Btn_Symbol*
		constexpr auto m_C_Btn_Cancel = 0x330; // UMM_Common_Btn*
		constexpr auto m_C_Btn_Send = 0x338; // UMM_Common_Btn_Cost*
	}

	namespace n_UParticleModuleColorOverLife { // : UParticleModuleColorBase
		constexpr auto ColorOverLife = 0x30; // FRawDistributionVector
		constexpr auto AlphaOverLife = 0x78; // FRawDistributionFloat
		constexpr auto bClampAlpha = 0xa8; // char : 1
	}

	namespace n_UModularSynthPresetBank { // : UObject
		constexpr auto Presets = 0x28; // TArray<FModularSynthPresetBankEntry>
	}

	namespace n_UMM_QuickItemActionMsg { // : UMM_MessageWidgetBase
		constexpr auto m_fShowTime = 0x2f0; // float
		constexpr auto m_fAniSpeed = 0x2f4; // float
		constexpr auto m_iAutoEquipLevel = 0x2f8; // int32_t
		constexpr auto m_iAutoTransferLevel = 0x2fc; // int32_t
		constexpr auto m_AniStart = 0x300; // UWidgetAnimation*
		constexpr auto m_AniEnd = 0x308; // UWidgetAnimation*
		constexpr auto m_ItemSlot = 0x330; // UMM_Slot_Material*
		constexpr auto m_RTxt_Message = 0x338; // UMirRichTextBlock*
		constexpr auto m_Txt_CombatPoint = 0x340; // UMirTextBlock*
		constexpr auto m_ProgressTime = 0x348; // UMirProgressBar*
		constexpr auto m_Txt_Timer = 0x350; // UMirTextBlock*
		constexpr auto m_Txt_Auto = 0x358; // UMirTextBlock*
		constexpr auto m_Btn_Main = 0x360; // UMirButton*
	}

	namespace n_AWaypointArea { // : AActor
		constexpr auto m_UniqueID = 0x218; // int32_t
		constexpr auto m_ActiveRadius = 0x21c; // int32_t
		constexpr auto m_WarpCoordinate = 0x220; // FVector
		constexpr auto m_bDefaultState = 0x22c; // bool
		constexpr auto m_WaypointWarpNeedCostId = 0x22d; // ECostType
		constexpr auto m_WaypointWarpNeedCostCount = 0x230; // int32_t
		constexpr auto m_WaypointWarpNeedItemId = 0x234; // int32_t
		constexpr auto m_WaypointWarpNeedItemCount = 0x238; // int32_t
		constexpr auto m_WaypointType = 0x23c; // EWaypointType
		constexpr auto m_WaypointSubType = 0x240; // EWaypointSubType
		constexpr auto m_bEnableSubType = 0x244; // bool
		constexpr auto m_WaypointNameID = 0x248; // int32_t
		constexpr auto m_WayPointName = 0x250; // FString
		constexpr auto m_InfoValue = 0x260; // int32_t
		constexpr auto m_bNavInside = 0x264; // bool
	}

	namespace n_UBTDecorator_Cooldown { // : UBTDecorator
		constexpr auto CoolDownTime = 0x68; // float
	}

	namespace n_UAnimCompress { // : UObject
		constexpr auto Description = 0x28; // FString
		constexpr auto bNeedsSkeleton = 0x38; // char : 1
		constexpr auto bEnableSegmenting = 0x38; // char : 1
		constexpr auto IdealNumFramesPerSegment = 0x3c; // uint32_t
		constexpr auto MaxNumFramesPerSegment = 0x40; // uint32_t
		constexpr auto TranslationCompressionFormat = 0x44; // AnimationCompressionFormat
		constexpr auto RotationCompressionFormat = 0x45; // AnimationCompressionFormat
		constexpr auto ScaleCompressionFormat = 0x46; // AnimationCompressionFormat
		constexpr auto MaxCurveError = 0x48; // float
	}

	namespace n_UMaterialExpressionTextureObject { // : UMaterialExpressionTextureBase
		constexpr auto Texture = 0x40; // UTexture*
		constexpr auto SamplerType = 0x48; // EMaterialSamplerType
		constexpr auto IsDefaultMeshpaintTexture = 0x49; // char : 1
	}

	namespace n_UMM_Popup_BattlePsss_BuyInfo { // : UWidgetBase
		constexpr auto STRING_ID_MESSAGE = 0x2e0; // int32_t
		constexpr auto m_Img_Banner = 0x2e8; // UMirImage*
		constexpr auto m_Img_LevelLimit = 0x2f0; // UMirImage*
		constexpr auto m_RTxt_Message = 0x2f8; // UMirRichTextBlock*
		constexpr auto m_Txt_Title = 0x300; // UMirTextBlock*
		constexpr auto m_Txt_LevelLimit = 0x308; // UMirTextBlock*
		constexpr auto m_C_Btn_Close = 0x310; // UMM_Common_Btn_Symbol*
		constexpr auto m_C_Btn_Cancel = 0x318; // UMM_Common_Btn*
		constexpr auto m_C_Btn_Buy = 0x320; // UMM_Common_Btn*
	}

	namespace n_UMM_HudGetSpecialItemMsg { // : UWidgetBase
		constexpr auto m_fShowTime = 0x2e0; // float
		constexpr auto m_AniStart = 0x2e8; // UWidgetAnimation*
		constexpr auto m_AniEnd = 0x2f0; // UWidgetAnimation*
		constexpr auto m_Img_ItemIcon = 0x308; // UMirImage*
		constexpr auto m_Img_ItemGrade = 0x310; // UMirImage*
		constexpr auto m_Txt_ItemName = 0x318; // UMirTextBlock*
		constexpr auto m_Txt_Get = 0x320; // UMirTextBlock*
	}

	namespace n_UPawnAction_Wait { // : UPawnAction
		constexpr auto TimeToWait = 0x98; // float
	}

	namespace n_ALandscape { // : ALandscapeProxy
		constexpr auto SplineComponent = 0x218; // ULandscapeSplinesComponent*
		constexpr auto LandscapeGuid = 0x220; // FGuid
		constexpr auto LandscapeSectionOffset = 0x230; // FIntPoint
		constexpr auto MaxLODLevel = 0x238; // int32_t
		constexpr auto LODDistanceFactor = 0x23c; // float
		constexpr auto LODFalloff = 0x240; // ELandscapeLODFalloff
		constexpr auto ComponentScreenSizeToUseSubSections = 0x244; // float
		constexpr auto LOD0ScreenSize = 0x248; // float
		constexpr auto LOD0DistributionSetting = 0x24c; // float
		constexpr auto LODDistributionSetting = 0x250; // float
		constexpr auto TessellationComponentScreenSize = 0x254; // float
		constexpr auto UseTessellationComponentScreenSizeFalloff = 0x258; // bool
		constexpr auto TessellationComponentScreenSizeFalloff = 0x25c; // float
		constexpr auto OccluderGeometryLOD = 0x260; // int32_t
		constexpr auto StaticLightingLOD = 0x264; // int32_t
		constexpr auto DefaultPhysMaterial = 0x268; // UPhysicalMaterial*
		constexpr auto StreamingDistanceMultiplier = 0x270; // float
		constexpr auto LandscapeMaterial = 0x278; // UMaterialInterface*
		constexpr auto LandscapeHoleMaterial = 0x280; // UMaterialInterface*
		constexpr auto LandscapeMaterialsOverride = 0x288; // TArray<FLandscapeProxyMaterialOverride>
		constexpr auto RuntimeVirtualTextures = 0x298; // TArray<URuntimeVirtualTexture*>
		constexpr auto VirtualTextureNumLods = 0x2a8; // int32_t
		constexpr auto VirtualTextureLodBias = 0x2ac; // int32_t
		constexpr auto VirtualTextureRenderPassType = 0x2b0; // ERuntimeVirtualTextureMainPassType
		constexpr auto NegativeZBoundsExtension = 0x2b4; // float
		constexpr auto PositiveZBoundsExtension = 0x2b8; // float
		constexpr auto LandscapeComponents = 0x2c0; // TArray<ULandscapeComponent*>
		constexpr auto CollisionComponents = 0x2d0; // TArray<ULandscapeHeightfieldCollisionComponent*>
		constexpr auto FoliageComponents = 0x2e0; // TArray<UHierarchicalInstancedStaticMeshComponent*>
		constexpr auto bHasLandscapeGrass = 0x354; // bool
		constexpr auto StaticLightingResolution = 0x358; // float
		constexpr auto bCastStaticShadow = 0x35c; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x35c; // char : 1
		constexpr auto bCastFarShadow = 0x35c; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x360; // char : 1
		constexpr auto LightingChannels = 0x361; // FLightingChannels
		constexpr auto bUseMaterialPositionOffsetInStaticLighting = 0x364; // char : 1
		constexpr auto bRenderCustomDepth = 0x364; // char : 1
		constexpr auto CustomDepthStencilValue = 0x368; // int32_t
		constexpr auto LDMaxDrawDistance = 0x36c; // float
		constexpr auto LightmassSettings = 0x370; // FLightmassPrimitiveSettings
		constexpr auto CollisionMipLevel = 0x388; // int32_t
		constexpr auto SimpleCollisionMipLevel = 0x38c; // int32_t
		constexpr auto CollisionThickness = 0x390; // float
		constexpr auto BodyInstance = 0x398; // FBodyInstance
		constexpr auto bGenerateOverlapEvents = 0x4a8; // char : 1
		constexpr auto bBakeMaterialPositionOffsetIntoCollision = 0x4a8; // char : 1
		constexpr auto ComponentSizeQuads = 0x4ac; // int32_t
		constexpr auto SubsectionSizeQuads = 0x4b0; // int32_t
		constexpr auto NumSubsections = 0x4b4; // int32_t
		constexpr auto bUsedForNavigation = 0x4b8; // char : 1
		constexpr auto bUseDynamicMaterialInstance = 0x4bc; // bool
		constexpr auto NavigationGeometryGatheringMode = 0x4bd; // ENavDataGatheringMode
		constexpr auto bUseLandscapeForCullingInvisibleHLODVertices = 0x4be; // bool
		constexpr auto bHasLayersContent = 0x4bf; // bool
		constexpr auto WeightmapUsageMap = 0x4c0; // TMap<UTexture2D*, ULandscapeWeightmapUsage*>
	}

	namespace n_UTouchInterface { // : UObject
		constexpr auto Controls = 0x28; // TArray<FTouchInputControl>
		constexpr auto ActiveOpacity = 0x38; // float
		constexpr auto InactiveOpacity = 0x3c; // float
		constexpr auto TimeUntilDeactive = 0x40; // float
		constexpr auto TimeUntilReset = 0x44; // float
		constexpr auto ActivationDelay = 0x48; // float
		constexpr auto bPreventRecenter = 0x4c; // bool
		constexpr auto StartupDelay = 0x50; // float
	}

	namespace n_UMM_GuildIconBGPanel { // : UWidgetBase
		constexpr auto m_pParentWidget = 0x260; // UWidgetBase*
		constexpr auto m_arChildWidget = 0x268; // TArray<TWeakObjectPtr<UWidgetBase>>
		constexpr auto m_arMirTextBlock = 0x280; // TArray<TWeakObjectPtr<UMirTextBlock>>
		constexpr auto m_arMirRichTextBlock = 0x290; // TArray<TWeakObjectPtr<UMirRichTextBlock>>
		constexpr auto m_arMirEditableText = 0x2a0; // TArray<TWeakObjectPtr<UMirEditableText>>
		constexpr auto m_arMirImage = 0x2b0; // TArray<TWeakObjectPtr<UMirImage>>
	}

	namespace n_UMM_PopupRewardInfo { // : UWidgetBase
		constexpr auto Btn_BG = 0x2e0; // UMirButton*
		constexpr auto btn_close = 0x2e8; // UMM_Common_Btn_Symbol*
		constexpr auto sb_slot = 0x2f0; // UMirScrollBox*
		constexpr auto Txt_Name = 0x2f8; // UMirTextBlock*
	}

	namespace n_UMaterialExpressionDDY { // : UMaterialExpression
		constexpr auto Value = 0x40; // FExpressionInput
	}

	namespace n_UVectorFieldAnimated { // : UVectorField
		constexpr auto Texture = 0x48; // UTexture2D*
		constexpr auto ConstructionOp = 0x50; // EVectorFieldConstructionOp
		constexpr auto VolumeSizeX = 0x54; // int32_t
		constexpr auto VolumeSizeY = 0x58; // int32_t
		constexpr auto VolumeSizeZ = 0x5c; // int32_t
		constexpr auto SubImagesX = 0x60; // int32_t
		constexpr auto SubImagesY = 0x64; // int32_t
		constexpr auto FrameCount = 0x68; // int32_t
		constexpr auto FramesPerSecond = 0x6c; // float
		constexpr auto bLoop = 0x70; // char : 1
		constexpr auto NoiseField = 0x78; // UVectorFieldStatic*
		constexpr auto NoiseScale = 0x80; // float
		constexpr auto NoiseMax = 0x84; // float
	}

	namespace n_UMM_BattlePass_Mission_List { // : UWidgetBase
		constexpr auto m_ScrollBox = 0x2f0; // UMirScrollBox*
		constexpr auto m_Week_Btn = 0x2f8; // UMM_BattlePass_Week_Btn* [0x3]
	}

	namespace n_UMM_PopupExpBooster { // : UWidgetBase
		constexpr auto Txt_Title = 0x2e0; // UMirTextBlock*
		constexpr auto txt_time = 0x2e8; // UMirRichTextBlock*
		constexpr auto txt_2 = 0x2f0; // UMirRichTextBlock*
		constexpr auto txt_exp_booster = 0x2f8; // UMirTextBlock*
		constexpr auto txt_active = 0x300; // UMirRichTextBlock*
		constexpr auto btn_close = 0x308; // UMM_Common_Btn_Symbol*
		constexpr auto sb_status = 0x310; // UMirScrollBox*
		constexpr auto btn_go_to_shop = 0x318; // UMM_Common_Btn*
	}

	namespace n_UBlackboardKeyType_Class { // : UBlackboardKeyType
		constexpr auto BaseClass = 0x30; // UObject*
	}

	namespace n_UGraphNodeContextMenuContext { // : UObject
		constexpr auto Blueprint = 0x28; // UBlueprint*
		constexpr auto Graph = 0x30; // UEdGraph*
		constexpr auto Node = 0x38; // UEdGraphNode*
		constexpr auto bIsDebugging = 0x48; // bool
	}

	namespace n_UDamageType { // : UObject
		constexpr auto bCausedByWorld = 0x28; // char : 1
		constexpr auto bScaleMomentumByMass = 0x28; // char : 1
		constexpr auto bRadialDamageVelChange = 0x28; // char : 1
		constexpr auto DamageImpulse = 0x2c; // float
		constexpr auto DestructibleImpulse = 0x30; // float
		constexpr auto DestructibleDamageSpreadScale = 0x34; // float
		constexpr auto DamageFalloff = 0x38; // float
	}

	namespace n_UAppInvite { // : UBlueprintAsyncActionBase
		constexpr auto OnSuccess = 0x30; // FScriptMulticastDelegate
		constexpr auto OnFail = 0x40; // FScriptMulticastDelegate
	}

	namespace n_UMaterialExpressionCustom { // : UMaterialExpression
		constexpr auto code = 0x40; // FString
		constexpr auto OutputType = 0x50; // ECustomMaterialOutputType
		constexpr auto Description = 0x58; // FString
		constexpr auto Inputs = 0x68; // TArray<FCustomInput>
	}

	namespace n_UMM_HudBottom { // : UWidgetBase
		constexpr auto m_DeviceInfo = 0x2f0; // UMM_DeviceInfo*
		constexpr auto m_Txt_ExpValue = 0x2f8; // UMirTextBlock*
		constexpr auto m_Prg_Exp = 0x300; // UMirProgressBar*
		constexpr auto m_Can_DisplayArea = 0x308; // UPanelWidget*
	}

	namespace n_UMM_Dominion_WithDrawal_OutSlot { // : UWidgetBase
		constexpr auto m_pImgType = 0x2e0; // UMirImage*
		constexpr auto m_pTxtValue = 0x2e8; // UMirTextBlock*
		constexpr auto m_pTxtInputOut = 0x2f0; // UMirTextBlock*
		constexpr auto m_pBtnPad = 0x2f8; // UMM_Common_Btn_Symbol*
	}

	namespace n_UMM_TemplateManager { // : UObject
		constexpr auto m_TableMap = 0x28; // TMap<ETableType, UDataTable*>
		constexpr auto m_CustomizingBoneDataTables = 0x78; // TArray<UDataTable*>
		constexpr auto m_CustomizingPresetDataTables = 0x88; // TArray<UDataTable*>
		constexpr auto m_CustomizingSettingDataTables = 0x98; // TArray<UDataTable*>
		constexpr auto m_CustomizingTypeDataTable = 0xa8; // UDataTable*
		constexpr auto m_StoryQuestTables = 0xb0; // TArray<UDataTable*>
		constexpr auto m_QuestTableSet = 0xc0; // UDataTable*
		constexpr auto m_strCSVPath = 0x2a8; // FString
		constexpr auto m_arTableNameNotUseCSV = 0x2b8; // TArray<FString>
		constexpr auto m_bInit = 0x2c8; // bool
	}

	namespace n_UPhotoModeData { // : UDataAsset
		constexpr auto DefaultHeight = 0x30; // float
		constexpr auto DefaultYaw = 0x34; // float
		constexpr auto DefaultPitch = 0x38; // float
		constexpr auto DefaultDistance = 0x3c; // float
		constexpr auto CameraWidthRagne = 0x40; // FPhotoMode_ValueRange
		constexpr auto CameraHighRange = 0x48; // FPhotoMode_ValueRange
		constexpr auto CameraPitchRange = 0x50; // FPhotoMode_ValueRange
		constexpr auto CameraDistanceRange = 0x58; // FPhotoMode_ValueRange
		constexpr auto Map_PtrClassAnimBP = 0x60; // TMap<int32_t, UAnimBlueprint*>
		constexpr auto Class1_PoseData = 0xb0; // TArray<FPhotoMode_Pose>
		constexpr auto Class2_PoseData = 0xc0; // TArray<FPhotoMode_Pose>
		constexpr auto Class3_PoseData = 0xd0; // TArray<FPhotoMode_Pose>
		constexpr auto Class4_PoseData = 0xe0; // TArray<FPhotoMode_Pose>
		constexpr auto Class5_PoseData = 0xf0; // TArray<FPhotoMode_Pose>
		constexpr auto FilterData = 0x100; // TArray<FPhotoMode_Filter>
		constexpr auto DOF_FocalDistance_Def = 0x110; // float
		constexpr auto DOF_FocalDistance_Min = 0x114; // float
		constexpr auto DOF_FocalDistance_Max = 0x118; // float
		constexpr auto FOV_Def = 0x11c; // float
		constexpr auto FOV_Min = 0x120; // float
		constexpr auto FOV_Max = 0x124; // float
		constexpr auto Brightness_Def = 0x128; // float
		constexpr auto Brightness_Min = 0x12c; // float
		constexpr auto Brightness_Max = 0x130; // float
		constexpr auto Map_Option = 0x138; // TMap<EPhotoModeOptionType, FPhotoMode_Option>
		constexpr auto STRID_PoseTitle = 0x188; // int32_t
		constexpr auto STRID_FilterTitle = 0x18c; // int32_t
		constexpr auto STRID_DOFTitle = 0x190; // int32_t
		constexpr auto STRID_FOVTitle = 0x194; // int32_t
		constexpr auto STRID_BrightnessTitle = 0x198; // int32_t
		constexpr auto STRID_PhotoModeOption = 0x19c; // int32_t
		constexpr auto STRID_CharShowOption = 0x1a0; // int32_t
		constexpr auto STRID_CharNameTagShowOption = 0x1a4; // int32_t
		constexpr auto STRID_GuildMarkOption = 0x1a8; // int32_t
		constexpr auto STRID_GuildNameOption = 0x1ac; // int32_t
	}

	namespace n_UEdGraph { // : UObject
		constexpr auto Schema = 0x28; // UEdGraphSchema*
		constexpr auto Nodes = 0x30; // TArray<UEdGraphNode*>
		constexpr auto bEditable = 0x40; // char : 1
		constexpr auto bAllowDeletion = 0x40; // char : 1
		constexpr auto bAllowRenaming = 0x40; // char : 1
	}

	namespace n_UMM_ClassSelect { // : UWidgetBase
		constexpr auto m_pMoviePlayerWidget = 0x2f0; // UMM_MoviePlayerWidget*
		constexpr auto m_pClassSymbolImage = 0x2f8; // UMirImage*
		constexpr auto m_ClassNameText = 0x300; // FText
		constexpr auto m_ClassDescriptionText = 0x318; // FText
		constexpr auto m_pClassConfirmBtn = 0x330; // UMM_Common_Btn*
		constexpr auto m_pMovieReplayButton = 0x338; // UMirButton*
		constexpr auto m_pBackButton = 0x340; // UMirButton*
		constexpr auto Ani_ClassSlot = 0x348; // UWidgetAnimation*
		constexpr auto m_SelectSlotArray = 0x350; // TArray<UMM_ClassSelect_Slot*>
	}

	namespace n_UMaterialExpressionSceneTexture { // : UMaterialExpression
		constexpr auto Coordinates = 0x40; // FExpressionInput
		constexpr auto SceneTextureId = 0x54; // ESceneTextureId
		constexpr auto bFiltered = 0x55; // bool
	}

	namespace n_UParticleModuleTypeDataBeam2 { // : UParticleModuleTypeDataBase
		constexpr auto BeamMethod = 0x30; // EBeam2Method
		constexpr auto TextureTile = 0x34; // int32_t
		constexpr auto TextureTileDistance = 0x38; // float
		constexpr auto Sheets = 0x3c; // int32_t
		constexpr auto MaxBeamCount = 0x40; // int32_t
		constexpr auto Speed = 0x44; // float
		constexpr auto InterpolationPoints = 0x48; // int32_t
		constexpr auto bAlwaysOn = 0x4c; // char : 1
		constexpr auto UpVectorStepSize = 0x50; // int32_t
		constexpr auto BranchParentName = 0x54; // FName
		constexpr auto Distance = 0x60; // FRawDistributionFloat
		constexpr auto TaperMethod = 0x90; // EBeamTaperMethod
		constexpr auto TaperFactor = 0x98; // FRawDistributionFloat
		constexpr auto TaperScale = 0xc8; // FRawDistributionFloat
		constexpr auto RenderGeometry = 0xf8; // char : 1
		constexpr auto RenderDirectLine = 0xf8; // char : 1
		constexpr auto RenderLines = 0xf8; // char : 1
		constexpr auto RenderTessellation = 0xf8; // char : 1
	}

	namespace n_ACinematicDialoguePreview { // : AActor
		constexpr auto m_CinematicSettingID = 0x228; // int32_t
		constexpr auto m_bSpawn = 0x22c; // bool
		constexpr auto m_bFileExport = 0x22d; // bool
		constexpr auto m_ActorSettingText = 0x230; // FText
		constexpr auto m_CameraSettingText = 0x248; // FText
		constexpr auto m_ActorArray = 0x260; // TArray<ACutsceneActor*>
		constexpr auto m_CameraArray = 0x270; // TArray<ACutsceneCamera*>
		constexpr auto m_CinematicDialogueID = 0x280; // int32_t
		constexpr auto m_pMainCamera = 0x288; // ACutsceneCamera*
		constexpr auto m_ActionActorArray = 0x290; // TArray<ACutsceneActor*>
		constexpr auto m_bActionFileExport = 0x2a0; // bool
		constexpr auto m_ActionInfoText = 0x2a8; // FText
		constexpr auto m_CameraMoveInfoText = 0x2c0; // FText
	}

	namespace n_UMM_PhotoModeAnimInstance { // : UAnimInstance
		constexpr auto m_pOutGameLookAtData = 0x268; // UOutGameLookAtData*
		constexpr auto m_HeadLookRot = 0x270; // FRotator
		constexpr auto m_NeckLookRot = 0x27c; // FRotator
		constexpr auto m_EyeRLookRot = 0x288; // FRotator
		constexpr auto m_EyeLLookRot = 0x294; // FRotator
		constexpr auto m_LookAtAlpha = 0x2a0; // float
		constexpr auto m_NeckTransformAlpha = 0x2a4; // float
		constexpr auto m_HeadTransformAlpha = 0x2a8; // float
		constexpr auto m_AnimIndex = 0x2ac; // int32_t
	}

	namespace n_AScriptMonsterKillCountTrigger { // : AActivateTrigger
		constexpr auto m_MonsterIDArray = 0x298; // TArray<int32_t>
		constexpr auto m_MonsterOrderIDArray = 0x2a8; // TArray<int32_t>
	}

	namespace n_ASpotLight { // : ALight
		constexpr auto SpotLightComponent = 0x228; // USpotLightComponent*
	}

	namespace n_UInputActionDelegateBinding { // : UInputDelegateBinding
		constexpr auto InputActionDelegateBindings = 0x28; // TArray<FBlueprintInputActionDelegateBinding>
	}

	namespace n_UMM_Dominion_TaxSlot { // : UWidgetBase
		constexpr auto m_pTxtTitle = 0x2e0; // UMirTextBlock*
		constexpr auto m_pImgMoney = 0x2e8; // UMirImage*
		constexpr auto m_pTxtMoney = 0x2f0; // UMirTextBlock*
	}

	namespace n_UAnimComposite { // : UAnimCompositeBase
		constexpr auto AnimationTrack = 0xa8; // FAnimTrack
	}

	namespace n_UGameplayTagsManager { // : UObject
		constexpr auto TagSources = 0xc0; // TArray<FGameplayTagSource>
		constexpr auto GameplayTagTables = 0x1b0; // TArray<UDataTable*>
	}

	namespace n_UMM_Popup_Party_Slot_Option_Item { // : UWidgetBase
		constexpr auto SlotOption = 0x2e0; // ESlotClassOption
		constexpr auto STRING_ID_EXPLAIN_ALL = 0x2e4; // int32_t
		constexpr auto STRING_ID_EXPLAIN_LOCK = 0x2e8; // int32_t
		constexpr auto arSTRING_ID_CLASS_NAME = 0x2f0; // TArray<int32_t>
		constexpr auto arSTRING_ID_CLASS_EXPLAN = 0x300; // TArray<int32_t>
		constexpr auto m_VrtBox_All = 0x310; // UVerticalBox*
		constexpr auto m_VrtBox_Class = 0x318; // UVerticalBox*
		constexpr auto m_VrtBox_Lock = 0x320; // UVerticalBox*
		constexpr auto m_Img_Class = 0x328; // UMirImage*
		constexpr auto m_Txt_ClassName = 0x330; // UMirTextBlock*
		constexpr auto m_Txt_Explain = 0x338; // UMirTextBlock*
		constexpr auto m_Btn_Main = 0x340; // UMirButton*
	}

	namespace n_UMaterialExpressionPerInstanceFadeAmount { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UMovieSceneVectorSection { // : UMovieSceneSection
		constexpr auto Curves = 0xe0; // FMovieSceneFloatChannel [0x4]
		constexpr auto ChannelsUsed = 0x360; // int32_t
	}

	namespace n_UMM_Hud_Invite_Alarm { // : UWidgetBase
		constexpr auto m_Grid_HuntingSquad = 0x2e0; // UPanelWidget*
		constexpr auto m_Grid_Party = 0x2e8; // UPanelWidget*
		constexpr auto m_Txt_HuntingSquad_Num = 0x2f0; // UMirTextBlock*
		constexpr auto m_Txt_Party_Num = 0x2f8; // UMirTextBlock*
		constexpr auto m_C_Btn_HuntingSquad = 0x300; // UMM_Common_Btn_Symbol*
		constexpr auto m_C_Btn_Party = 0x308; // UMM_Common_Btn_Symbol*
	}

	namespace n_UMaterialExpressionArcsine { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UBorderSlot { // : UPanelSlot
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UMM_Auction_Tab_Search_TabGroup { // : UWidgetBase
		constexpr auto m_pBtnItemSearch = 0x308; // UMM_Common_Btn_Symbol*
		constexpr auto m_pTxtFindEmpty = 0x310; // UMirTextBlock*
		constexpr auto m_pEditItemSearch = 0x318; // UMirEditableText*
		constexpr auto m_pBtnRefresh = 0x320; // UMirButton*
		constexpr auto m_pBtnReset = 0x328; // UMirButton*
		constexpr auto m_pComboList_Job = 0x330; // UMM_Auction_ComboList*
		constexpr auto m_pComboList_Grade = 0x338; // UMM_Auction_ComboList*
		constexpr auto m_pSearchEnchant = 0x340; // UMM_Auction_Tab_Search_Enchant*
	}

	namespace n_UMM_B_Item_make { // : UWidgetBase
		constexpr auto Panel_InventoryRect = 0x2f0; // UCanvasPanel*
		constexpr auto PopUp_Material_Change = 0x2f8; // UMM_Popup_Material_Change*
		constexpr auto InventoryRect = 0x300; // UMM_ItemMake_Inventory*
		constexpr auto SubMenuTab = 0x308; // UMM_CommonVerticalTabSet*
		constexpr auto MainMenuTab = 0x310; // UMM_CommonHorizontalTabSet*
		constexpr auto MainMenuTab_5Fill = 0x318; // UMM_CommonHorizontalTabSet*
		constexpr auto HorizonBtn = 0x320; // UMM_Exchange_Tab_HorizonBtn*
		constexpr auto ItemMakeInfo = 0x328; // UMM_Item_Make_Info*
		constexpr auto SelectSlot = 0x330; // TWeakObjectPtr<UMM_Item_Make_List_Slot>
		constexpr auto Toggle_MakeFilter = 0x338; // UMM_Common_ToggleBtn*
		constexpr auto EmptyPanel = 0x340; // UPanelWidget*
		constexpr auto m_Notice_Sub = 0x348; // UMM_Common_Board_Notice*
		constexpr auto Txt_EmptyMessage = 0x350; // UMirTextBlock*
		constexpr auto m_Btn_GoToForgeSmelt = 0x358; // UMirButton*
		constexpr auto m_Canvas_GoToForgeSmelt = 0x360; // UMirCanvasPanel*
		constexpr auto m_Panel_Fail = 0x368; // UMirCanvasPanel*
		constexpr auto m_Btn_Fail = 0x370; // UMirButton*
		constexpr auto STRING_EMPTY_MESSAGE = 0x378; // int32_t
		constexpr auto STRING_FILTER_MAKE = 0x37c; // int32_t
	}

	namespace n_UMM_ClosedTraining_AbilitySlot { // : UWidgetBase
		constexpr auto m_Img_AbilityIcon = 0x2e0; // UMirImage*
		constexpr auto m_Txt_AbilityName = 0x2e8; // UMirTextBlock*
		constexpr auto m_RTxt_CurrValue = 0x2f0; // UMirRichTextBlock*
		constexpr auto m_RTxt_DetailValue = 0x2f8; // UMirRichTextBlock*
	}

	namespace n_UMM_NFTRelocation_SetList { // : UWidgetBase
		constexpr auto m_Txt_Message = 0x2e0; // UMirTextBlock*
		constexpr auto m_Btn_Move = 0x2e8; // UMM_Common_Btn*
	}

	namespace n_UMM_Popup_ServerVisit_Members { // : UWidgetBase
		constexpr auto m_ScrollBox = 0x2f0; // UMirScrollBox*
		constexpr auto m_BtnClose = 0x2f8; // UMM_Common_Btn_Symbol*
	}

	namespace n_UGridPathFollowingComponent { // : UPathFollowingComponent
		constexpr auto GridManager = 0x258; // UNavLocalGridManager*
	}

	namespace n_UMM_GameOption_InGame_QuickSlot { // : UWidgetBase
		constexpr auto Option_AutoPotionHpPercen = 0x2e0; // UMM_GameOption_Slider*
		constexpr auto Option_AutoPotionMpPercent = 0x2e8; // UMM_GameOption_Slider*
	}

	namespace n_UInterpTrackInstFloatParticleParam { // : UInterpTrackInst
		constexpr auto ResetFloat = 0x28; // float
	}

	namespace n_UInterpTrackInstSlomo { // : UInterpTrackInst
		constexpr auto OldTimeDilation = 0x28; // float
	}

	namespace n_UFXSystemAsset { // : UObject
		constexpr auto MaxPoolSize = 0x28; // uint32_t
	}

	namespace n_ADecalActor { // : AActor
		constexpr auto Decal = 0x218; // UDecalComponent*
	}

	namespace n_UPlayMontageCallbackProxy { // : UObject
		constexpr auto OnCompleted = 0x28; // FScriptMulticastDelegate
		constexpr auto OnBlendOut = 0x38; // FScriptMulticastDelegate
		constexpr auto OnInterrupted = 0x48; // FScriptMulticastDelegate
		constexpr auto OnNotifyBegin = 0x58; // FScriptMulticastDelegate
		constexpr auto OnNotifyEnd = 0x68; // FScriptMulticastDelegate
	}

	namespace n_UParticleModuleEventReceiverBase { // : UParticleModuleEventBase
		constexpr auto EventGeneratorType = 0x30; // EParticleEventType
		constexpr auto EventName = 0x34; // FName
	}

	namespace n_UFieldSystemMetaData { // : UActorComponent
		constexpr auto PrimaryComponentTick = 0x30; // FActorComponentTickFunction
		constexpr auto ComponentTags = 0x60; // TArray<FName>
		constexpr auto AssetUserData = 0x70; // TArray<UAssetUserData*>
		constexpr auto bReplicates = 0x84; // char : 1
		constexpr auto bNetAddressable = 0x84; // char : 1
		constexpr auto bAutoActivate = 0x85; // char : 1
		constexpr auto bIsActive = 0x86; // char : 1
		constexpr auto bEditableWhenInherited = 0x86; // char : 1
		constexpr auto bCanEverAffectNavigation = 0x86; // char : 1
		constexpr auto bIsEditorOnly = 0x86; // char : 1
		constexpr auto CreationMethod = 0x88; // EComponentCreationMethod
		constexpr auto OnComponentActivated = 0x89; // FScriptMulticastDelegate
		constexpr auto OnComponentDeactivated = 0x8a; // FScriptMulticastDelegate
		constexpr auto UCSModifiedProperties = 0x90; // TArray<FSimpleMemberReference>
	}

	namespace n_UMM_Popup_QuickSlot_Option { // : UWidgetBase
		constexpr auto m_Btn_Close = 0x2e0; // UMM_Common_Btn_Symbol*
		constexpr auto m_HP_AutoPercent = 0x2e8; // UMM_GameOption_Slider*
		constexpr auto m_MP_AutoPercent = 0x2f0; // UMM_GameOption_Slider*
		constexpr auto m_Option_AutoEquip = 0x2f8; // UMM_GameOption_Select*
		constexpr auto m_Option_QuickSlotAuto = 0x300; // UMM_GameOption_Switch* [0x3]
		constexpr auto m_Option_InvenSort = 0x318; // UMM_GameOption_Select*
		constexpr auto m_Option_InvenOrder = 0x320; // UMM_GameOption_Select*
	}

	namespace n_USkeletalMesh { // : UStreamableRenderAsset
		constexpr auto Skeleton = 0x60; // USkeleton*
		constexpr auto ImportedBounds = 0x68; // FBoxSphereBounds
		constexpr auto ExtendedBounds = 0x84; // FBoxSphereBounds
		constexpr auto PositiveBoundsExtension = 0xa0; // FVector
		constexpr auto NegativeBoundsExtension = 0xac; // FVector
		constexpr auto Materials = 0xb8; // TArray<FSkeletalMaterial>
		constexpr auto SkelMirrorTable = 0xc8; // TArray<FBoneMirrorInfo>
		constexpr auto LODInfo = 0xd8; // TArray<FSkeletalMeshLODInfo>
		constexpr auto MinLOD = 0x138; // FPerPlatformInt
		constexpr auto DisableBelowMinLodStripping = 0x13c; // FPerPlatformBool
		constexpr auto SkelMirrorAxis = 0x13d; // EAxis
		constexpr auto SkelMirrorFlipAxis = 0x13e; // EAxis
		constexpr auto bUseFullPrecisionUVs = 0x13f; // char : 1
		constexpr auto bUseHighPrecisionTangentBasis = 0x13f; // char : 1
		constexpr auto bHasBeenSimplified = 0x13f; // char : 1
		constexpr auto bHasVertexColors = 0x13f; // char : 1
		constexpr auto bEnablePerPolyCollision = 0x13f; // char : 1
		constexpr auto BodySetup = 0x140; // UBodySetup*
		constexpr auto PhysicsAsset = 0x148; // UPhysicsAsset*
		constexpr auto ShadowPhysicsAsset = 0x150; // UPhysicsAsset*
		constexpr auto NodeMappingData = 0x158; // TArray<UNodeMappingContainer*>
		constexpr auto MorphTargets = 0x168; // TArray<UMorphTarget*>
		constexpr auto PostProcessAnimBlueprint = 0x2f0; // UAnimInstance*
		constexpr auto MeshClothingAssets = 0x2f8; // TArray<UClothingAssetBase*>
		constexpr auto SamplingInfo = 0x308; // FSkeletalMeshSamplingInfo
		constexpr auto AssetUserData = 0x338; // TArray<UAssetUserData*>
		constexpr auto Sockets = 0x350; // TArray<USkeletalMeshSocket*>
		constexpr auto SkinWeightProfiles = 0x370; // TArray<FSkinWeightProfileInfo>
	}

	namespace n_UPlatformInterfaceBase { // : UObject
		constexpr auto AllDelegates = 0x28; // TArray<FDelegateArray>
	}

	namespace n_AMM_SparringObject { // : AMM_ObjectBase
		constexpr auto m_RingEffect = 0x520; // UParticleSystemComponent*
		constexpr auto m_SparringRange = 0x528; // int32_t
		constexpr auto m_SparringWarningRange = 0x52c; // int32_t
	}

	namespace n_UMM_Popup_ServerList_Global { // : UWidgetBase
		constexpr auto m_Can_TopArrow = 0x2f0; // UPanelWidget*
		constexpr auto m_Can_BottomArrow = 0x2f8; // UPanelWidget*
		constexpr auto m_Ani_Arrow = 0x300; // UWidgetAnimation*
		constexpr auto m_Btn_Close = 0x308; // UMM_Common_Btn_Symbol*
		constexpr auto m_Scroll_RegionList = 0x310; // UScrollBox*
		constexpr auto m_Scroll_ServerList = 0x318; // UScrollBox*
	}

	namespace n_AGameNetworkManager { // : AInfo
		constexpr auto BadPacketLossThreshold = 0x218; // float
		constexpr auto SeverePacketLossThreshold = 0x21c; // float
		constexpr auto BadPingThreshold = 0x220; // int32_t
		constexpr auto SeverePingThreshold = 0x224; // int32_t
		constexpr auto AdjustedNetSpeed = 0x228; // int32_t
		constexpr auto LastNetSpeedUpdateTime = 0x22c; // float
		constexpr auto TotalNetBandwidth = 0x230; // int32_t
		constexpr auto MinDynamicBandwidth = 0x234; // int32_t
		constexpr auto MaxDynamicBandwidth = 0x238; // int32_t
		constexpr auto bIsStandbyCheckingEnabled = 0x23c; // char : 1
		constexpr auto bHasStandbyCheatTriggered = 0x23c; // char : 1
		constexpr auto StandbyRxCheatTime = 0x240; // float
		constexpr auto StandbyTxCheatTime = 0x244; // float
		constexpr auto PercentMissingForRxStandby = 0x248; // float
		constexpr auto PercentMissingForTxStandby = 0x24c; // float
		constexpr auto PercentForBadPing = 0x250; // float
		constexpr auto JoinInProgressStandbyWaitTime = 0x254; // float
		constexpr auto MoveRepSize = 0x258; // float
		constexpr auto MAXPOSITIONERRORSQUARED = 0x25c; // float
		constexpr auto MAXNEARZEROVELOCITYSQUARED = 0x260; // float
		constexpr auto CLIENTADJUSTUPDATECOST = 0x264; // float
		constexpr auto MAXCLIENTUPDATEINTERVAL = 0x268; // float
		constexpr auto MaxClientForcedUpdateDuration = 0x26c; // float
		constexpr auto ServerForcedUpdateHitchThreshold = 0x270; // float
		constexpr auto ServerForcedUpdateHitchCooldown = 0x274; // float
		constexpr auto MaxMoveDeltaTime = 0x278; // float
		constexpr auto MaxClientSmoothingDeltaTime = 0x27c; // float
		constexpr auto ClientNetSendMoveDeltaTime = 0x280; // float
		constexpr auto ClientNetSendMoveDeltaTimeThrottled = 0x284; // float
		constexpr auto ClientNetSendMoveDeltaTimeStationary = 0x288; // float
		constexpr auto ClientNetSendMoveThrottleAtNetSpeed = 0x28c; // int32_t
		constexpr auto ClientNetSendMoveThrottleOverPlayerCount = 0x290; // int32_t
		constexpr auto ClientAuthorativePosition = 0x294; // bool
		constexpr auto ClientErrorUpdateRateLimit = 0x298; // float
		constexpr auto ClientNetCamUpdateDeltaTime = 0x29c; // float
		constexpr auto ClientNetCamUpdatePositionLimit = 0x2a0; // float
		constexpr auto bMovementTimeDiscrepancyDetection = 0x2a4; // bool
		constexpr auto bMovementTimeDiscrepancyResolution = 0x2a5; // bool
		constexpr auto MovementTimeDiscrepancyMaxTimeMargin = 0x2a8; // float
		constexpr auto MovementTimeDiscrepancyMinTimeMargin = 0x2ac; // float
		constexpr auto MovementTimeDiscrepancyResolutionRate = 0x2b0; // float
		constexpr auto MovementTimeDiscrepancyDriftAllowance = 0x2b4; // float
		constexpr auto bMovementTimeDiscrepancyForceCorrectionsDuringResolution = 0x2b8; // bool
		constexpr auto bUseDistanceBasedRelevancy = 0x2b9; // bool
	}

	namespace n_UEnvQueryGenerator_ProjectedPoints { // : UEnvQueryGenerator
		constexpr auto ProjectionData = 0x50; // FEnvTraceData
	}

	namespace n_UFoliageType { // : UObject
		constexpr auto UpdateGuid = 0x28; // FGuid
		constexpr auto Density = 0x38; // float
		constexpr auto DensityAdjustmentFactor = 0x3c; // float
		constexpr auto Radius = 0x40; // float
		constexpr auto bSingleInstanceModeOverrideRadius = 0x44; // bool
		constexpr auto SingleInstanceModeRadius = 0x48; // float
		constexpr auto Scaling = 0x4c; // EFoliageScaling
		constexpr auto ScaleX = 0x50; // FFloatInterval
		constexpr auto ScaleY = 0x58; // FFloatInterval
		constexpr auto ScaleZ = 0x60; // FFloatInterval
		constexpr auto VertexColorMaskByChannel = 0x68; // FFoliageVertexColorChannelMask [0x4]
		constexpr auto VertexColorMask = 0x98; // FoliageVertexColorMask
		constexpr auto VertexColorMaskThreshold = 0x9c; // float
		constexpr auto VertexColorMaskInvert = 0xa0; // char : 1
		constexpr auto ZOffset = 0xa4; // FFloatInterval
		constexpr auto AlignToNormal = 0xac; // char : 1
		constexpr auto AlignMaxAngle = 0xb0; // float
		constexpr auto RandomYaw = 0xb4; // char : 1
		constexpr auto RandomPitchAngle = 0xb8; // float
		constexpr auto GroundSlopeAngle = 0xbc; // FFloatInterval
		constexpr auto Height = 0xc4; // FFloatInterval
		constexpr auto LandscapeLayers = 0xd0; // TArray<FName>
		constexpr auto MinimumLayerWeight = 0xe0; // float
		constexpr auto ExclusionLandscapeLayers = 0xe8; // TArray<FName>
		constexpr auto MinimumExclusionLayerWeight = 0xf8; // float
		constexpr auto LandscapeLayer = 0xfc; // FName
		constexpr auto CollisionWithWorld = 0x104; // char : 1
		constexpr auto CollisionScale = 0x108; // FVector
		constexpr auto MeshBounds = 0x114; // FBoxSphereBounds
		constexpr auto LowBoundOriginRadius = 0x130; // FVector
		constexpr auto Mobility = 0x13c; // EComponentMobility
		constexpr auto CullDistance = 0x140; // FInt32Interval
		constexpr auto bEnableStaticLighting = 0x148; // char : 1
		constexpr auto CastShadow = 0x148; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x148; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x148; // char : 1
		constexpr auto bCastDynamicShadow = 0x148; // char : 1
		constexpr auto bCastStaticShadow = 0x148; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x148; // char : 1
		constexpr auto bReceivesDecals = 0x148; // char : 1
		constexpr auto bOverrideLightMapRes = 0x149; // char : 1
		constexpr auto OverriddenLightMapRes = 0x14c; // int32_t
		constexpr auto LightmapType = 0x150; // ELightmapType
		constexpr auto bUseAsOccluder = 0x154; // char : 1
		constexpr auto BodyInstance = 0x158; // FBodyInstance
		constexpr auto CustomNavigableGeometry = 0x268; // EHasCustomNavigableGeometry
		constexpr auto LightingChannels = 0x269; // FLightingChannels
		constexpr auto bRenderCustomDepth = 0x26c; // char : 1
		constexpr auto CustomDepthStencilValue = 0x270; // int32_t
		constexpr auto TranslucencySortPriority = 0x274; // int32_t
		constexpr auto CollisionRadius = 0x278; // float
		constexpr auto ShadeRadius = 0x27c; // float
		constexpr auto NumSteps = 0x280; // int32_t
		constexpr auto InitialSeedDensity = 0x284; // float
		constexpr auto AverageSpreadDistance = 0x288; // float
		constexpr auto SpreadVariance = 0x28c; // float
		constexpr auto SeedsPerStep = 0x290; // int32_t
		constexpr auto DistributionSeed = 0x294; // int32_t
		constexpr auto MaxInitialSeedOffset = 0x298; // float
		constexpr auto bCanGrowInShade = 0x29c; // bool
		constexpr auto bSpawnsInShade = 0x29d; // bool
		constexpr auto MaxInitialAge = 0x2a0; // float
		constexpr auto MaxAge = 0x2a4; // float
		constexpr auto OverlapPriority = 0x2a8; // float
		constexpr auto ProceduralScale = 0x2ac; // FFloatInterval
		constexpr auto ScaleCurve = 0x2b8; // FRuntimeFloatCurve
		constexpr auto ChangeCount = 0x340; // int32_t
		constexpr auto ReapplyDensity = 0x344; // char : 1
		constexpr auto ReapplyRadius = 0x344; // char : 1
		constexpr auto ReapplyAlignToNormal = 0x344; // char : 1
		constexpr auto ReapplyRandomYaw = 0x344; // char : 1
		constexpr auto ReapplyScaling = 0x344; // char : 1
		constexpr auto ReapplyScaleX = 0x344; // char : 1
		constexpr auto ReapplyScaleY = 0x344; // char : 1
		constexpr auto ReapplyScaleZ = 0x344; // char : 1
		constexpr auto ReapplyRandomPitchAngle = 0x345; // char : 1
		constexpr auto ReapplyGroundSlope = 0x345; // char : 1
		constexpr auto ReapplyHeight = 0x345; // char : 1
		constexpr auto ReapplyLandscapeLayers = 0x345; // char : 1
		constexpr auto ReapplyZOffset = 0x345; // char : 1
		constexpr auto ReapplyCollisionWithWorld = 0x345; // char : 1
		constexpr auto ReapplyVertexColorMask = 0x345; // char : 1
		constexpr auto bEnableDensityScaling = 0x345; // char : 1
		constexpr auto RuntimeVirtualTextures = 0x348; // TArray<URuntimeVirtualTexture*>
		constexpr auto VirtualTextureCullMips = 0x358; // int32_t
		constexpr auto VirtualTextureRenderPassType = 0x35c; // ERuntimeVirtualTextureMainPassType
	}

	namespace n_UMM_Slot_Material_Reward { // : UMM_Slot_Material
		constexpr auto m_ImgComplete = 0x468; // UMirImage*
	}

	namespace n_UMM_New_Force_Ability_Icon { // : UWidgetBase
		constexpr auto m_SelectColor = 0x300; // FLinearColor
		constexpr auto m_MaxLevelSelectColor = 0x310; // FLinearColor
		constexpr auto m_C_Img_Ability = 0x328; // UMirImage*
		constexpr auto m_C_Img_Indicator = 0x330; // UMirImage*
		constexpr auto m_C_Grid_Effect = 0x338; // UPanelWidget*
		constexpr auto m_C_Img_Selected = 0x340; // UPanelWidget*
		constexpr auto m_C_Grid_Grade = 0x348; // UPanelWidget*
		constexpr auto m_C_Txt_Grade = 0x350; // UMirTextBlock*
		constexpr auto m_C_Btn_Main = 0x358; // UMirButton*
		constexpr auto m_SelectEffect = 0x360; // UMirImage*
		constexpr auto m_AuiGuide = 0x368; // UWidgetAnimation*
	}

	namespace n_UMovieSceneMaterialParameterCollectionTrack { // : UMovieSceneMaterialTrack
		constexpr auto MPC = 0x68; // UMaterialParameterCollection*
	}

	namespace n_UFloatingPawnMovement { // : UPawnMovementComponent
		constexpr auto MaxSpeed = 0x138; // float
		constexpr auto Acceleration = 0x13c; // float
		constexpr auto Deceleration = 0x140; // float
		constexpr auto TurningBoost = 0x144; // float
		constexpr auto bPositionCorrected = 0x148; // char : 1
	}

	namespace n_AAutoFlightTrigger { // : AActor
		constexpr auto m_bForceJump = 0x238; // bool
		constexpr auto m_TriggerID = 0x23c; // int32_t
		constexpr auto m_TriggerGroup = 0x240; // EAutoFlightGroup
		constexpr auto m_DestLocation = 0x244; // FVector
		constexpr auto m_MovePathPoint = 0x250; // TArray<FVector>
		constexpr auto m_RandomYawArray = 0x260; // TArray<float>
		constexpr auto m_Radius = 0x270; // float
		constexpr auto m_bQuestTrigger = 0x274; // bool
		constexpr auto m_AutoFlightDataArray = 0x280; // TArray<FAutoFlightData>
	}

	namespace n_UBasicOverlays { // : UOverlays
		constexpr auto Overlays = 0x28; // TArray<FOverlayItem>
	}

	namespace n_UAISense_Touch { // : UAISense
		constexpr auto RegisteredEvents = 0x80; // TArray<FAITouchEvent>
	}

	namespace n_ULandscapeSplineSegment { // : UObject
		constexpr auto Connections = 0x28; // FLandscapeSplineSegmentConnection [0x2]
		constexpr auto SplineInfo = 0x58; // FInterpCurveVector
		constexpr auto Points = 0x70; // TArray<FLandscapeSplineInterpPoint>
		constexpr auto Bounds = 0x80; // FBox
		constexpr auto LocalMeshComponents = 0xa0; // TArray<USplineMeshComponent*>
	}

	namespace n_UParticleModuleRotation_Seeded { // : UParticleModuleRotation
		constexpr auto RandomSeedInfo = 0x60; // FParticleRandomSeedInfo
	}

	namespace n_UMM_B_XdracoSealing { // : UWidgetBase
		constexpr auto m_pNotice = 0x2f0; // UMM_Common_Board_Notice*
		constexpr auto m_pMainMenuTab = 0x2f8; // UMM_CommonHorizontalTabSet*
		constexpr auto m_pSubMenuTab = 0x300; // UMM_CommonVerticalTabSet*
		constexpr auto m_pToggle_MakeFilter = 0x308; // UMM_Common_ToggleBtn*
		constexpr auto m_pPanel_SealingInvenRect = 0x310; // UCanvasPanel*
		constexpr auto m_pSealing_List = 0x318; // UMM_Xdraco_SealingInventory*
		constexpr auto m_pSealing_Info = 0x320; // UMM_Xdraco_SealingInfo*
	}

	namespace n_USubmixEffectSubmixEQPreset { // : USoundEffectSubmixPreset
		constexpr auto Settings = 0x78; // FSubmixEffectSubmixEQSettings
	}

	namespace n_UAISystemBase { // : UObject
		constexpr auto AISystemClassName = 0x28; // FSoftClassPath
		constexpr auto AISystemModuleName = 0x40; // FName
		constexpr auto bInstantiateAISystemOnClient = 0x50; // bool
	}

	namespace n_UWidgetTree { // : UObject
		constexpr auto RootWidget = 0x28; // UWidget*
	}

	namespace n_UMM_GM_Msg { // : UMM_MessageWidgetBase
		constexpr auto m_fMoveSpeed = 0x2f0; // float
		constexpr auto m_fShowTime = 0x2f4; // float
		constexpr auto m_RTxt_Message = 0x2f8; // UMirRichTextBlock*
		constexpr auto m_pPanelArea = 0x300; // UMirCanvasPanel*
		constexpr auto m_Img_Bg = 0x308; // UMirImage*
	}

	namespace n_UMM_Popup_Relation_RewardInfo { // : UWidgetBase
		constexpr auto m_Btn_BG_Close = 0x2e0; // UMirButton*
		constexpr auto m_Btn_Close = 0x2e8; // UMM_Common_Btn_Symbol*
		constexpr auto m_ListView_RewardList = 0x2f0; // UMirListView*
		constexpr auto m_arRewardSlotObj = 0x310; // TArray<URelationRewardInfoSlotObj*>
	}

	namespace n_UMM_Skill_Ability { // : UWidgetBase
		constexpr auto m_C_RTxt_Main = 0x2e0; // UMirRichTextBlock*
		constexpr auto m_C_Grid_Effect = 0x2e8; // UPanelWidget*
		constexpr auto m_Effect = 0x2f0; // UEffectWidgetBase*
	}

	namespace n_UMM_GuildHistorySlot { // : UWidgetBase
		constexpr auto txt_category = 0x2e0; // UMirTextBlock*
		constexpr auto txt_date = 0x2e8; // UMirTextBlock*
		constexpr auto txt_time = 0x2f0; // UMirTextBlock*
		constexpr auto rtxt_history = 0x2f8; // UMirRichTextBlock*
	}

	namespace n_UMM_Popup_GuildMembersPosSlot { // : UWidgetBase
		constexpr auto Img_Icon = 0x2e0; // UMirImage*
		constexpr auto Txt_Position = 0x2e8; // UMirTextBlock*
		constexpr auto txt_buff = 0x2f0; // UMirTextBlock*
		constexpr auto Btn_Main = 0x2f8; // UMM_Common_Btn*
		constexpr auto btn_dismiss = 0x300; // UMM_Common_Btn*
	}

	namespace n_UMM_Popup_SquareStageList { // : UWidgetBase
		constexpr auto btnClose = 0x2e0; // UMM_Common_Btn_Symbol*
		constexpr auto TxtTitle = 0x2e8; // UMirTextBlock*
		constexpr auto txtExplanation = 0x2f0; // UMirTextBlock*
		constexpr auto scrListBox = 0x2f8; // UMirScrollBox*
	}

	namespace n_UMM_UIAction_Npc_Exchange { // : UMM_UIAction
		constexpr auto m_MainTabIndex = 0x430; // int32_t
		constexpr auto m_SubTabIndex = 0x434; // int32_t
		constexpr auto m_SelectItemTID = 0x438; // int32_t
		constexpr auto m_TargetItemTID = 0x43c; // int32_t
		constexpr auto ReserveNpcID = 0x440; // int32_t
		constexpr auto m_MakeCount = 0x444; // int32_t
		constexpr auto m_MakeTID = 0x448; // int32_t
		constexpr auto m_NPCGroupListID = 0x44c; // int32_t
		constexpr auto MAX_MAKE_COUNT = 0x450; // int32_t
		constexpr auto STR_ExchangeID = 0x454; // int32_t
		constexpr auto STR_NotEnoughCost = 0x458; // int32_t
		constexpr auto STR_NotEnoughMaterial = 0x45c; // int32_t
	}

	namespace n_UMM_SlotWorldBossChannel { // : UWidgetBase
		constexpr auto m_pImgFull = 0x2f0; // UMirImage*
		constexpr auto m_pImgParty = 0x2f8; // UMirImage*
		constexpr auto m_pTxtChannel = 0x300; // UTextBlock*
		constexpr auto m_pTxtCountCapa = 0x308; // UTextBlock*
		constexpr auto m_pTxtAppearanceState = 0x310; // UMirTextBlock*
		constexpr auto m_pBtnMain = 0x318; // UMirButton*
		constexpr auto m_pImgSelect = 0x320; // UMirImage*
	}

	namespace n_AProjectileCannon { // : AProjectileBase
		constexpr auto m_pCollSphereComp = 0x218; // USphereComponent*
		constexpr auto m_pShotParticleComp = 0x220; // UParticleSystemComponent*
		constexpr auto m_pImpactParticleComp = 0x228; // UParticleSystemComponent*
	}

	namespace n_UMaterialExpressionGIReplace { // : UMaterialExpression
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto StaticIndirect = 0x54; // FExpressionInput
		constexpr auto DynamicIndirect = 0x68; // FExpressionInput
	}

	namespace n_UParticleModuleAttractorPoint { // : UParticleModuleAttractorBase
		constexpr auto Position = 0x30; // FRawDistributionVector
		constexpr auto Range = 0x78; // FRawDistributionFloat
		constexpr auto Strength = 0xa8; // FRawDistributionFloat
		constexpr auto StrengthByDistance = 0xd8; // char : 1
		constexpr auto bAffectBaseVelocity = 0xd8; // char : 1
		constexpr auto bOverrideVelocity = 0xd8; // char : 1
		constexpr auto bUseWorldSpacePosition = 0xd8; // char : 1
		constexpr auto Positive_X = 0xd8; // char : 1
		constexpr auto Positive_Y = 0xd8; // char : 1
		constexpr auto Positive_Z = 0xd8; // char : 1
		constexpr auto Negative_X = 0xd8; // char : 1
		constexpr auto Negative_Y = 0xd9; // char : 1
		constexpr auto Negative_Z = 0xd9; // char : 1
	}

	namespace n_ASceneCaptureCube { // : ASceneCapture
		constexpr auto CaptureComponentCube = 0x228; // USceneCaptureComponentCube*
	}

	namespace n_AMM_Vehicle { // : AActor
		constexpr auto BodyMesh = 0x220; // USkeletalMeshComponent*
		constexpr auto CapsuleComponent = 0x228; // UCapsuleComponent*
		constexpr auto m_pPartsComponent = 0x230; // UMM_CharacterPartsComponent*
		constexpr auto m_pAnimInstace = 0x238; // UAnimInstance*
		constexpr auto m_pDefaultMesh = 0x240; // USkeletalMeshComponent*
		constexpr auto IsTakeOff = 0x248; // bool
		constexpr auto m_ThisPC = 0x250; // AMM_PC*
		constexpr auto m_Velocity = 0x270; // float
	}

	namespace n_UEnvQueryGenerator_SimpleGrid { // : UEnvQueryGenerator_ProjectedPoints
		constexpr auto GridSize = 0x80; // FAIDataProviderFloatValue
		constexpr auto SpaceBetween = 0xb0; // FAIDataProviderFloatValue
		constexpr auto GenerateAround = 0xe0; // UEnvQueryContext*
	}

	namespace n_UMovieSceneSequencePlayer { // : UObject
		constexpr auto OnPlay = 0x408; // FScriptMulticastDelegate
		constexpr auto OnPlayReverse = 0x418; // FScriptMulticastDelegate
		constexpr auto OnStop = 0x428; // FScriptMulticastDelegate
		constexpr auto OnPause = 0x438; // FScriptMulticastDelegate
		constexpr auto OnFinished = 0x448; // FScriptMulticastDelegate
		constexpr auto Status = 0x458; // EMovieScenePlayerStatus
		constexpr auto bReversePlayback = 0x45c; // char : 1
		constexpr auto Sequence = 0x460; // UMovieSceneSequence*
		constexpr auto StartTime = 0x468; // FFrameNumber
		constexpr auto DurationFrames = 0x46c; // int32_t
		constexpr auto CurrentNumLoops = 0x470; // int32_t
		constexpr auto PlaybackSettings = 0x488; // FMovieSceneSequencePlaybackSettings
		constexpr auto RootTemplateInstance = 0x4a0; // FMovieSceneRootEvaluationTemplateInstance
		constexpr auto NetSyncProps = 0x810; // FMovieSceneSequenceReplProperties
		constexpr auto PlaybackClient = 0x820; // TScriptInterface<Class>
	}

	namespace n_UScrollBox { // : UPanelWidget
		constexpr auto WidgetStyle = 0x120; // FScrollBoxStyle
		constexpr auto WidgetBarStyle = 0x348; // FScrollBarStyle
		constexpr auto Style = 0x818; // USlateWidgetStyleAsset*
		constexpr auto BarStyle = 0x820; // USlateWidgetStyleAsset*
		constexpr auto Orientation = 0x828; // EOrientation
		constexpr auto ScrollBarVisibility = 0x829; // ESlateVisibility
		constexpr auto ConsumeMouseWheel = 0x82a; // EConsumeMouseWheel
		constexpr auto ScrollbarThickness = 0x82c; // FVector2D
		constexpr auto ScrollbarPadding = 0x834; // FMargin
		constexpr auto AlwaysShowScrollbar = 0x844; // bool
		constexpr auto AlwaysShowScrollbarTrack = 0x845; // bool
		constexpr auto AllowOverscroll = 0x846; // bool
		constexpr auto bAnimateWheelScrolling = 0x847; // bool
		constexpr auto NavigationDestination = 0x848; // EDescendantScrollDestination
		constexpr auto NavigationScrollPadding = 0x84c; // float
		constexpr auto bAllowRightClickDragScrolling = 0x850; // bool
		constexpr auto bAllowXScrollOverScroll = 0x851; // bool
		constexpr auto WheelScrollMultiplier = 0x854; // float
		constexpr auto OnUserScrolled = 0x858; // FScriptMulticastDelegate
	}

	namespace n_APrecomputedVisibilityVolume { // : AVolume
		constexpr auto BrushType = 0x218; // EBrushType
		constexpr auto BrushColor = 0x21c; // FColor
		constexpr auto PolyFlags = 0x220; // int32_t
		constexpr auto bColored = 0x224; // char : 1
		constexpr auto bSolidWhenSelected = 0x224; // char : 1
		constexpr auto bPlaceableFromClassBrowser = 0x224; // char : 1
		constexpr auto bNotForClientOrServer = 0x224; // char : 1
		constexpr auto Brush = 0x228; // UModel*
		constexpr auto BrushComponent = 0x230; // UBrushComponent*
		constexpr auto bInManipulation = 0x238; // char : 1
		constexpr auto SavedSelections = 0x240; // TArray<FGeomSelection>
	}

	namespace n_UMM_Slot_Inventory { // : UMM_Slot_Base
		constexpr auto m_Img_GradeBgEffect = 0x3f0; // UMirImage*
		constexpr auto m_ImgDummy = 0x3f8; // UMirImage*
		constexpr auto m_ImgDisabled = 0x400; // UMirImage*
		constexpr auto m_ImgEquiped = 0x408; // UMirImage*
		constexpr auto m_ImgDeckEquiped = 0x410; // UMirImage*
		constexpr auto m_ImgPetItemEquiped = 0x418; // UMirImage*
		constexpr auto m_ImgPetItemDeckEquiped = 0x420; // UMirImage*
		constexpr auto m_ImgRegistered = 0x428; // UMirImage*
		constexpr auto m_Imgindicator = 0x430; // UMirImage*
		constexpr auto m_Img_Attribution = 0x438; // UMirImage*
		constexpr auto m_ImgSelected = 0x440; // UMirImage*
		constexpr auto m_ImgChecked = 0x448; // UMirImage*
		constexpr auto m_ImgChecked_Material = 0x450; // UMirImage*
		constexpr auto m_ImgTierBg = 0x458; // UMirImage*
		constexpr auto m_ImgTransfer = 0x460; // UMirImage*
		constexpr auto m_TxtSmeltingLevel = 0x468; // UMirTextBlock*
		constexpr auto m_TxtOtherClass = 0x470; // UMirTextBlock*
		constexpr auto m_TxtCount = 0x478; // UMirTextBlock*
		constexpr auto m_HrzCombatPoint = 0x480; // UHorizontalBox*
		constexpr auto m_TxtCombatPoint = 0x488; // UMirTextBlock*
		constexpr auto m_Image_CoolTime = 0x490; // UMirImage*
		constexpr auto m_Txt_CoolTime = 0x498; // UMirTextBlock*
		constexpr auto m_PanEffect_RecommendTransfer = 0x4a0; // UPanelWidget*
		constexpr auto m_pRecommendTransferEffect = 0x4a8; // UEffectWidgetBase*
		constexpr auto m_Txt_MaxLevel = 0x4b0; // UMirTextBlock*
		constexpr auto m_TxtGrade = 0x4b8; // UMirTextBlock*
		constexpr auto m_Txt_CenterText = 0x4c0; // UMirTextBlock*
		constexpr auto m_Img_Durability_Icon = 0x4c8; // UMirImage*
		constexpr auto m_Img_Lock = 0x4d0; // UMirImage*
		constexpr auto m_Img_UserLock = 0x4d8; // UMirImage*
		constexpr auto m_Img_UserLock_Stack = 0x4e0; // UMirImage*
		constexpr auto m_Img_Origin = 0x4e8; // UMirImage*
		constexpr auto tutorial_highlight = 0x4f0; // UTutorialHighlightWidget*
	}

	namespace n_AGuardNpcMoveTrigger { // : AActivateTrigger
		constexpr auto m_pGuardNpcTrigger = 0x278; // AGuardNpcSpawnTrigger*
		constexpr auto m_pWayPoint = 0x280; // ATriggerWayPoint*
		constexpr auto m_pGuardNpc = 0x288; // AMM_Monster*
	}

	namespace n_UInputAxisKeyDelegateBinding { // : UInputDelegateBinding
		constexpr auto InputAxisKeyDelegateBindings = 0x28; // TArray<FBlueprintInputAxisKeyDelegateBinding>
	}

	namespace n_AMM_Monster { // : AMM_NonePlayer
		constexpr auto MonDebugFSMLogCount = 0xa48; // int32_t
		constexpr auto m_MonDebugFSMLogList = 0xa50; // TArray<FString>
		constexpr auto m_MonDebugLog = 0xa60; // TArray<FString>
		constexpr auto m_bDrawPushPullLocation = 0xa70; // bool
		constexpr auto m_PushPullLocationList = 0xa78; // TArray<FVector>
		constexpr auto TestFloat = 0xa88; // float
		constexpr auto m_bPoolingObject = 0xa8c; // bool
		constexpr auto m_pMonNameTag = 0xad8; // UMM_B_MonNameTag*
		constexpr auto m_pMonsterGroup = 0xae8; // AMonsterGroupTrigger*
		constexpr auto m_fDeleteTime = 0xb64; // float
		constexpr auto m_bHideNameTag = 0xb68; // bool
		constexpr auto m_pMonsterEntityComp = 0xbc8; // UMonsterEntityComponent*
		constexpr auto SPState = 0xed0; // int32_t
		constexpr auto SPUpdateTime = 0xed4; // float
		constexpr auto SPStateLimitTime = 0xed8; // float
	}

	namespace n_UMM_UIAction_Costume { // : UMM_UIAction
		constexpr auto STRING_BTN_PURCHASE = 0x318; // int32_t
		constexpr auto STRING_BTN_PURCHASE_CHOICE = 0x31c; // int32_t
		constexpr auto STRING_BTN_EQUIP = 0x320; // int32_t
		constexpr auto STRING_BTN_UNEQUIP = 0x324; // int32_t
		constexpr auto STRING_ERROR_CHECK_COST = 0x328; // int32_t
		constexpr auto STRING_ERROR_SELCT_COSUTME = 0x32c; // int32_t
		constexpr auto STRING_ERROR_CONTENTS_OPEN = 0x330; // int32_t
		constexpr auto STRING_PURCHASE_MSG = 0x334; // int32_t
		constexpr auto STRING_CHANGECOLOR_COMPLETE_MSG = 0x338; // int32_t
		constexpr auto STRING_CHANGECOLOR_NOT_STRONGPOINT_MSG = 0x33c; // int32_t
		constexpr auto STRING_CHANGECOLOR_NOT_OCCUPATION_MSG = 0x340; // int32_t
		constexpr auto STRING_MSG_CHOSECOLOR = 0x344; // int32_t
		constexpr auto STRING_MSG_NONE_SELECT_COSTUME = 0x348; // int32_t
		constexpr auto STRING_MSG_REQUIER_MONEY_COST = 0x34c; // int32_t
		constexpr auto STRING_MSG_REQUIER_MONEY_ITEM = 0x350; // int32_t
		constexpr auto STRING_MSG_SUCCESS_EQUIP = 0x354; // int32_t
		constexpr auto STRING_MSG_SUCCESS_UNEQUIP = 0x358; // int32_t
		constexpr auto STRING_MSG_SUCCESS_DRYEING = 0x35c; // int32_t
		constexpr auto STRING_MSG_NONE_SELECT_DRYEING = 0x360; // int32_t
		constexpr auto STRING_MSG_HIDDEN_DEFAULT_COSTUME = 0x364; // int32_t
		constexpr auto STRING_MSG_UNEQUIP_DEFAULT_COSTUME = 0x368; // int32_t
		constexpr auto STRING_MSG_REQUEST_EQUIP_COSTUME = 0x36c; // int32_t
		constexpr auto STRING_MSG_NO_CAHNGE_COLOR = 0x370; // int32_t
	}

	namespace n_APlayerModelingActor { // : AActor
		constexpr auto CapsuleComponent = 0x218; // UCapsuleComponent*
		constexpr auto m_pPartsComponent = 0x220; // UMM_CharacterPartsComponent*
		constexpr auto m_CustomizingModule = 0x268; // UMM_CharacterCustomizingModule*
		constexpr auto m_ClassID = 0x270; // int32_t
		constexpr auto MainState = 0x274; // int32_t
		constexpr auto SubState = 0x278; // int32_t
		constexpr auto Mesh = 0x280; // USkeletalMeshComponent*
	}

	namespace n_UBTService_BlackboardBase { // : UBTService
		constexpr auto BlackboardKey = 0x70; // FBlackboardKeySelector
	}

	namespace n_URequestNewReadPermissions { // : UBlueprintAsyncActionBase
		constexpr auto OnSuccess = 0x30; // FScriptMulticastDelegate
		constexpr auto OnFail = 0x40; // FScriptMulticastDelegate
	}

	namespace n_ABrushShape { // : ABrush
		constexpr auto BrushType = 0x218; // EBrushType
		constexpr auto BrushColor = 0x21c; // FColor
		constexpr auto PolyFlags = 0x220; // int32_t
		constexpr auto bColored = 0x224; // char : 1
		constexpr auto bSolidWhenSelected = 0x224; // char : 1
		constexpr auto bPlaceableFromClassBrowser = 0x224; // char : 1
		constexpr auto bNotForClientOrServer = 0x224; // char : 1
		constexpr auto Brush = 0x228; // UModel*
		constexpr auto BrushComponent = 0x230; // UBrushComponent*
		constexpr auto bInManipulation = 0x238; // char : 1
		constexpr auto SavedSelections = 0x240; // TArray<FGeomSelection>
	}

	namespace n_UMM_DominionWanted_Slot { // : UWidgetBase
		constexpr auto m_Img_CharacterClass = 0x2e8; // UMirImage*
		constexpr auto m_Txt_CharacterName = 0x2f0; // UMirTextBlock*
		constexpr auto m_Txt_CombatPoint = 0x2f8; // UMirTextBlock*
		constexpr auto m_pImgOnline = 0x300; // UMirImage*
		constexpr auto m_TxtOnline = 0x308; // UMirTextBlock*
		constexpr auto m_GuildIcon = 0x310; // UMM_GuildIcon*
		constexpr auto m_Txt_GuildName = 0x318; // UMirTextBlock*
		constexpr auto m_Txt_GuildEmpty = 0x320; // UMirTextBlock*
		constexpr auto m_Img_RewardCost = 0x328; // UMirImage*
		constexpr auto m_Txt_RewardCost = 0x330; // UMirTextBlock*
		constexpr auto m_WidgetSwitcher_Chase = 0x338; // UWidgetSwitcher*
		constexpr auto m_Txt_RemainTime = 0x340; // UMirTextBlock*
		constexpr auto m_Img_Disable = 0x348; // UMirImage*
		constexpr auto m_pBtnClick = 0x350; // UMirButton*
	}

	namespace n_UARGetCandidateObjectAsyncTaskBlueprintProxy { // : UARBaseAsyncTaskBlueprintProxy
		constexpr auto OnSuccess = 0x50; // FScriptMulticastDelegate
		constexpr auto OnFailed = 0x60; // FScriptMulticastDelegate
	}

	namespace n_UMM_Map_Waypoint_List_Slot { // : UWidgetBase
		constexpr auto m_iIcon_NormalWaypoint = 0x2f0; // int32_t
		constexpr auto m_iIcon_UnableWaypoint = 0x2f4; // int32_t
		constexpr auto IconAbleFixedNPC = 0x2f8; // int32_t
		constexpr auto IconAble_NPC_Shop = 0x2fc; // int32_t
		constexpr auto IconAble_NPC_ItemMake = 0x300; // int32_t
		constexpr auto IconAble_NPC_Exchange = 0x304; // int32_t
		constexpr auto IconAble_NPC_BeautySalon = 0x308; // int32_t
		constexpr auto IconAbleEventNPC = 0x30c; // int32_t
		constexpr auto IconAbleInventoryNPC = 0x310; // int32_t
		constexpr auto IconAble_Relation = 0x314; // int32_t
		constexpr auto IconAbleNamed = 0x318; // int32_t
		constexpr auto IconUnableNamed = 0x31c; // int32_t
		constexpr auto IconAbleBoss = 0x320; // int32_t
		constexpr auto IconUnableBoss = 0x324; // int32_t
		constexpr auto IconAbleFieldBoss = 0x328; // int32_t
		constexpr auto IconUnableFieldBoss = 0x32c; // int32_t
		constexpr auto IconAbleWorldBoss = 0x330; // int32_t
		constexpr auto IconUnableWorldBoss = 0x334; // int32_t
		constexpr auto IconAbleEliteModeType = 0x338; // int32_t
		constexpr auto IconUnableEliteModeType = 0x33c; // int32_t
		constexpr auto IconAbleMining = 0x340; // int32_t
		constexpr auto IconUnableMining = 0x344; // int32_t
		constexpr auto IconAbleGather = 0x348; // int32_t
		constexpr auto IconUnableGather = 0x34c; // int32_t
		constexpr auto IconAbleBMining = 0x350; // int32_t
		constexpr auto IconUnableBMining = 0x354; // int32_t
		constexpr auto IconAbleZinki = 0x358; // int32_t
		constexpr auto IconUnableZinki = 0x35c; // int32_t
		constexpr auto IconAbleMonsterSpawn = 0x360; // int32_t
		constexpr auto IconUnableMonsterSpawn = 0x364; // int32_t
		constexpr auto m_vIconSize = 0x368; // FVector2D
		constexpr auto IconAbleSanctum = 0x370; // int32_t
		constexpr auto IconUnableSanctum = 0x374; // int32_t
		constexpr auto IconAbleDascoMeltingNPC = 0x378; // int32_t
		constexpr auto m_Img_Icon = 0x390; // UMirImage*
		constexpr auto m_Txt_Name = 0x398; // UMirTextBlock*
		constexpr auto m_Txt_Explored = 0x3a0; // UMirTextBlock*
		constexpr auto m_Img_Selected = 0x3a8; // UMirImage*
		constexpr auto m_Grid_Disabled = 0x3b0; // UPanelWidget*
		constexpr auto m_Btn_Main = 0x3b8; // UMirButton*
	}

	namespace n_UMM_Hud_Chat_ChattingRoom { // : UWidgetBase
		constexpr auto Panel_Title = 0x308; // UCanvasPanel*
		constexpr auto txt_nickname = 0x310; // UMirTextBlock*
		constexpr auto Btn_EixtChannel = 0x318; // UMM_Common_Btn_Symbol*
		constexpr auto m_ScrollBox = 0x320; // UScrollBox*
		constexpr auto m_Chat_QuickMove = 0x328; // UMM_Hud_Chat_QuickMove*
	}

	namespace n_UCameraComponent { // : USceneComponent
		constexpr auto FieldOfView = 0x220; // float
		constexpr auto OrthoWidth = 0x224; // float
		constexpr auto OrthoNearClipPlane = 0x228; // float
		constexpr auto OrthoFarClipPlane = 0x22c; // float
		constexpr auto AspectRatio = 0x230; // float
		constexpr auto bConstrainAspectRatio = 0x234; // char : 1
		constexpr auto bUseFieldOfViewForLOD = 0x234; // char : 1
		constexpr auto bLockToHmd = 0x234; // char : 1
		constexpr auto bUsePawnControlRotation = 0x234; // char : 1
		constexpr auto ProjectionMode = 0x235; // ECameraProjectionMode
		constexpr auto PostProcessBlendWeight = 0x270; // float
		constexpr auto PostProcessSettings = 0x2a0; // FPostProcessSettings
	}

	namespace n_ASpectatorPawn { // : ADefaultPawn
		constexpr auto BaseTurnRate = 0x278; // float
		constexpr auto BaseLookUpRate = 0x27c; // float
		constexpr auto MovementComponent = 0x280; // UPawnMovementComponent*
		constexpr auto CollisionComponent = 0x288; // USphereComponent*
		constexpr auto MeshComponent = 0x290; // UStaticMeshComponent*
		constexpr auto bAddDefaultMovementBindings = 0x298; // char : 1
	}

	namespace n_UMaterialExpressionVertexNormalWS { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UMM_B_Guild_Creation { // : UWidgetBase
		constexpr auto m_iCreateCost = 0x2f0; // int32_t
		constexpr auto m_AniStart = 0x2f8; // UWidgetAnimation*
		constexpr auto m_AniEnd = 0x300; // UWidgetAnimation*
		constexpr auto m_Txt_Notice = 0x318; // UTextBlock*
		constexpr auto m_Img_Frame = 0x320; // UImage*
		constexpr auto m_Img_Symbol = 0x328; // UImage*
		constexpr auto m_Edit_GuildName = 0x330; // UEditableText*
		constexpr auto m_Scr_SymbolList = 0x338; // UScrollBox*
		constexpr auto m_Scr_FrameList = 0x340; // UScrollBox*
		constexpr auto m_CB_SymbolList_Left = 0x348; // UMM_Common_Btn_Symbol*
		constexpr auto m_CB_SymbolList_Right = 0x350; // UMM_Common_Btn_Symbol*
		constexpr auto m_CB_FrameList_Left = 0x358; // UMM_Common_Btn_Symbol*
		constexpr auto m_CB_FrameList_Right = 0x360; // UMM_Common_Btn_Symbol*
		constexpr auto m_CB_Create = 0x368; // UMM_Common_Btn_Cost*
	}

	namespace n_UDynamicEntryBoxBase { // : UWidget
		constexpr auto EntryBoxType = 0x108; // EDynamicBoxType
		constexpr auto EntrySpacing = 0x10c; // FVector2D
		constexpr auto SpacingPattern = 0x118; // TArray<FVector2D>
		constexpr auto EntrySizeRule = 0x128; // FSlateChildSize
		constexpr auto EntryHorizontalAlignment = 0x130; // EHorizontalAlignment
		constexpr auto EntryVerticalAlignment = 0x131; // EVerticalAlignment
		constexpr auto MaxElementSize = 0x134; // int32_t
		constexpr auto EntryWidgetPool = 0x148; // FUserWidgetPool
	}

	namespace n_UInterpTrackFade { // : UInterpTrackFloatBase
		constexpr auto bPersistFade = 0x90; // char : 1
		constexpr auto bFadeAudio = 0x90; // char : 1
		constexpr auto FadeColor = 0x94; // FLinearColor
	}

	namespace n_UMM_Popup_CommonCheckBox { // : UWidgetBase
		constexpr auto Txt_Title = 0x2e0; // UMirTextBlock*
		constexpr auto Txt_Description = 0x2e8; // UMirRichTextBlock*
		constexpr auto Btn_Cancel = 0x2f0; // UMM_Common_Btn*
		constexpr auto Btn_Ok = 0x2f8; // UMM_Common_Btn*
		constexpr auto btn_close = 0x300; // UMM_Common_Btn_Symbol*
		constexpr auto Toggle_DoNotAgain = 0x308; // UMM_Common_ToggleBtn*
	}

	namespace n_UMM_Guild_Slot_Btn { // : UWidgetBase
		constexpr auto m_Img_Icon = 0x2f0; // UMirImage*
		constexpr auto m_Txt_Name = 0x2f8; // UMirTextBlock*
		constexpr auto m_Btn = 0x300; // UMirButton*
		constexpr auto m_Img_Indicator = 0x308; // UMirImage*
	}

	namespace n_UMM_Popup_GuildInviteSlot { // : UWidgetBase
		constexpr auto Portrait = 0x2e0; // UMM_GuildMemberPortrait*
		constexpr auto txt_nickname = 0x2e8; // UMirTextBlock*
		constexpr auto img_class = 0x2f0; // UMirImage*
		constexpr auto txt_class = 0x2f8; // UMirTextBlock*
		constexpr auto txt_level = 0x300; // UMirTextBlock*
		constexpr auto Btn_Main = 0x308; // UMirButton*
		constexpr auto btn_invite = 0x310; // UMM_Common_Btn*
		constexpr auto CombatPoint = 0x318; // UMM_Common_CombatPoint*
	}

	namespace n_UMaterialExpressionCameraPositionWS { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UMM_GameOption_BaseSlot { // : UWidgetBase
		constexpr auto TitleStrID = 0x2e0; // int32_t
		constexpr auto SaveOptionType = 0x2e4; // EGameOptionType
	}

	namespace n_UFirebaseFutureDataSnapshot { // : UBlueprintAsyncActionBase
		constexpr auto OnComplete = 0x30; // FScriptMulticastDelegate
	}

	namespace n_UWidgetAnimationDelegateBinding { // : UDynamicBlueprintBinding
		constexpr auto WidgetAnimationDelegateBindings = 0x28; // TArray<FBlueprintWidgetAnimationDelegateBinding>
	}

	namespace n_UMaterialExpressionDivide { // : UMaterialExpression
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_UMM_ClassPhase_SkillSlot { // : UWidgetBase
		constexpr auto m_pImgSlotIcon = 0x2e0; // UMirImage*
		constexpr auto m_pTxtLevel = 0x2e8; // UMirTextBlock*
		constexpr auto m_pImgLevelBg = 0x2f0; // UMirImage*
		constexpr auto m_pImgSelected = 0x2f8; // UMirImage*
		constexpr auto m_pImgLock = 0x300; // UMirImage*
		constexpr auto m_pImgMainSkill = 0x308; // UMirImage*
		constexpr auto m_pBtnClick = 0x310; // UMirButton*
		constexpr auto m_pGrid_AwakenEffect = 0x318; // UGridPanel*
		constexpr auto m_pAwakenEffect = 0x320; // UEffectWidgetBase*
		constexpr auto m_pImgGradeBg = 0x328; // UMirImage*
	}

	namespace n_UMM_HudQuickSlot { // : UWidgetBase
		constexpr auto m_Btn_QuickSlot = 0x2f0; // UMM_HudPotionSlot* [0x9]
		constexpr auto m_Img_Arrow = 0x338; // UMirImage* [0x9]
		constexpr auto m_Ani_Arrow = 0x380; // UWidgetAnimation*
		constexpr auto m_pCanQuickSlotArea = 0x388; // UCanvasPanel*
		constexpr auto m_pImgDeck01 = 0x390; // UMirImage*
		constexpr auto m_pImgDeck02 = 0x398; // UMirImage*
		constexpr auto m_pImgDeck03 = 0x3a0; // UMirImage*
		constexpr auto m_MoveToRight = 0x3a8; // UWidgetAnimation*
		constexpr auto m_MoveToLeft = 0x3b0; // UWidgetAnimation*
	}

	namespace n_UGeometryCacheCodecV1 { // : UGeometryCacheCodecBase
		constexpr auto TopologyRanges = 0x28; // TArray<int32_t>
	}

	namespace n_USoundSimple { // : USoundBase
		constexpr auto Variations = 0x160; // TArray<FSoundVariation>
		constexpr auto SoundWave = 0x170; // USoundWave*
	}

	namespace n_UMM_GuildPeruseListSlot { // : UWidgetBase
		constexpr auto img_rank = 0x2f0; // UMirImage*
		constexpr auto txt_rank = 0x2f8; // UMirTextBlock*
		constexpr auto guild_icon = 0x300; // UMM_GuildIcon*
		constexpr auto Txt_Name = 0x308; // UMirTextBlock*
		constexpr auto txt_level = 0x310; // UMirTextBlock*
		constexpr auto txt_member = 0x318; // UMirTextBlock*
		constexpr auto txt_join_type = 0x320; // UMirTextBlock*
		constexpr auto img_join_combatpower = 0x328; // UMirImage*
		constexpr auto txt_join_combatpower = 0x330; // UMirTextBlock*
		constexpr auto txt_pr = 0x338; // UMirTextBlock*
		constexpr auto Btn_Main = 0x340; // UMirButton*
		constexpr auto CombatPoint = 0x348; // UMM_Common_CombatPoint*
		constexpr auto btn_translation = 0x350; // UMM_Common_Btn_Translation*
	}

	namespace n_UMaterialExpressionQualitySwitch { // : UMaterialExpression
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto Inputs = 0x54; // FExpressionInput [0x3]
	}

	namespace n_UMM_New_Force_Skill_Slot { // : UWidgetBase
		constexpr auto m_C_Img_Icon = 0x2e0; // UMirImage*
		constexpr auto m_C_Txt_Skill_Point = 0x2e8; // UMirTextBlock*
		constexpr auto m_C_Txt_Skill_State = 0x2f0; // UMirTextBlock*
		constexpr auto m_C_Btn_Skill_Slot = 0x2f8; // UMirButton*
	}

	namespace n_ACinematicDialogue { // : AActor
		constexpr auto m_pDialogueCameraPreset = 0x238; // UDialogueCameraData*
		constexpr auto m_ResourceArray = 0x240; // TArray<UObject*>
		constexpr auto m_bTest = 0x250; // bool
		constexpr auto m_TestDirectingID = 0x254; // int32_t
		constexpr auto m_pLevelSequenceActor = 0x2b0; // ALevelSequenceActor*
		constexpr auto m_pLevelSequencePlayer = 0x2b8; // ULevelSequencePlayer*
		constexpr auto m_pCutsceneCamera = 0x2c0; // ACutsceneCamera*
		constexpr auto m_pDialogueWidget = 0x2c8; // UCutsceneDialogueWidget*
		constexpr auto m_pCallbackObject = 0x328; // UObject*
	}

	namespace n_AMM_CutscenePreviewGameMode { // : AMM_GameModeBase
		constexpr auto m_pLevelStreaming = 0x4a0; // ULevelStreamingDynamic*
	}

	namespace n_UARFaceGeometry { // : UARTrackedGeometry
		constexpr auto LookAtTarget = 0xe8; // FVector
		constexpr auto bIsTracked = 0xf4; // bool
		constexpr auto BlendShapes = 0xf8; // TMap<EARFaceBlendShape, float>
	}

	namespace n_UMM_Slot_Request { // : UWidgetBase
		constexpr auto m_ReqRewardToStr = 0x2e8; // int32_t
		constexpr auto m_AcceptToStr = 0x2ec; // int32_t
		constexpr auto m_GiveUpToStr = 0x2f0; // int32_t
		constexpr auto m_MoveToStr = 0x2f4; // int32_t
		constexpr auto m_CompleteToStr = 0x2f8; // int32_t
		constexpr auto m_CombatToStr = 0x2fc; // int32_t
		constexpr auto m_MissionAcceptToStr = 0x300; // int32_t
		constexpr auto m_MissionAcceptNumToStr = 0x304; // int32_t
		constexpr auto m_QuestNormalToStr = 0x308; // int32_t
		constexpr auto m_MissionTitleWithCountToStr = 0x30c; // int32_t
		constexpr auto m_EndToStr = 0x310; // int32_t
		constexpr auto m_QuestRepeatToStr = 0x314; // int32_t
		constexpr auto m_DoNotCommitToStr = 0x318; // int32_t
		constexpr auto m_OnGoingToStr = 0x31c; // int32_t
		constexpr auto m_RequestOnlyOneMsg = 0x320; // int32_t
		constexpr auto m_HideCompleteStageToStr = 0x324; // int32_t
		constexpr auto m_EnableColor = 0x328; // FLinearColor
		constexpr auto m_DisableColor = 0x338; // FLinearColor
		constexpr auto m_CombatDefaultColor = 0x348; // FLinearColor
		constexpr auto m_PartyToImg = 0x358; // int32_t
		constexpr auto m_RepeatCountToStr = 0x35c; // int32_t
		constexpr auto m_RepeatCountCheckToStr = 0x360; // int32_t
		constexpr auto m_DoNotMoveToStr = 0x364; // int32_t
		constexpr auto m_CheckHintToStr = 0x368; // int32_t
		constexpr auto m_DoNotOpenStageStr = 0x36c; // int32_t
		constexpr auto m_DoNotOpenHidenStageStr = 0x370; // int32_t
		constexpr auto CHECK_STAGE_TYPE_STRING_ID = 0x374; // int32_t
		constexpr auto m_DoNotUseInThisStage = 0x378; // int32_t
		constexpr auto m_Img_Focus = 0x380; // UMirImage*
		constexpr auto m_Icon = 0x388; // UMirImage*
		constexpr auto m_QuestTitle = 0x390; // UMirTextBlock*
		constexpr auto m_Title = 0x398; // UMirTextBlock*
		constexpr auto m_CombatPoint = 0x3a0; // UMirTextBlock*
		constexpr auto m_RewardSlots = 0x3a8; // TArray<UMM_Slot_Material*>
		constexpr auto m_Accept = 0x3b8; // UMM_Common_Btn*
		constexpr auto m_CompleteEffectImg = 0x3c0; // UMirImage*
		constexpr auto m_EndImg = 0x3c8; // UMirImage*
		constexpr auto m_GiveUp = 0x3d0; // UMM_Common_Btn*
		constexpr auto m_EnableQuest = 0x3d8; // UMM_Common_Btn*
		constexpr auto m_BtnGrid = 0x3e0; // UPanelWidget*
		constexpr auto m_BtnsGrid = 0x3e8; // UPanelWidget*
		constexpr auto m_Disable = 0x3f0; // UMirImage*
		constexpr auto m_Txt_StageName = 0x3f8; // UMirTextBlock*
		constexpr auto m_Btn_Hint = 0x400; // UMirButton*
		constexpr auto m_Txt_Hint = 0x408; // UMirTextBlock*
		constexpr auto m_Btn_Story = 0x410; // UMirButton*
		constexpr auto m_Txt_Story = 0x418; // UMirTextBlock*
		constexpr auto m_Lock = 0x420; // UMirImage*
		constexpr auto m_Btn_Back = 0x428; // UMirButton*
		constexpr auto m_Btn_Lock = 0x430; // UMirButton*
		constexpr auto m_pCommonPartyMember = 0x438; // UMM_Common_PartyMember*
	}

	namespace n_ADetourCrowdAIController { // : AAIController
		constexpr auto bStopAILogicOnUnposses = 0x2c8; // char : 1
		constexpr auto bLOSflag = 0x2c8; // char : 1
		constexpr auto bSkipExtraLOSChecks = 0x2c8; // char : 1
		constexpr auto bAllowStrafe = 0x2c8; // char : 1
		constexpr auto bWantsPlayerState = 0x2c8; // char : 1
		constexpr auto bSetControlRotationFromPawnOrientation = 0x2c8; // char : 1
		constexpr auto PathFollowingComponent = 0x2d0; // UPathFollowingComponent*
		constexpr auto BrainComponent = 0x2d8; // UBrainComponent*
		constexpr auto PerceptionComponent = 0x2e0; // UAIPerceptionComponent*
		constexpr auto ActionsComp = 0x2e8; // UPawnActionsComponent*
		constexpr auto Blackboard = 0x2f0; // UBlackboardComponent*
		constexpr auto CachedGameplayTasksComponent = 0x2f8; // UGameplayTasksComponent*
		constexpr auto DefaultNavigationFilterClass = 0x300; // UNavigationQueryFilter*
		constexpr auto ReceiveMoveCompleted = 0x308; // FScriptMulticastDelegate
	}

	namespace n_UParticleModuleMeshMaterial { // : UParticleModuleMaterialBase
		constexpr auto MeshMaterials = 0x30; // TArray<UMaterialInterface*>
	}

	namespace n_UMM_Passive_RandomSlot { // : UWidgetBase
		constexpr auto m_pParentWidget = 0x260; // UWidgetBase*
		constexpr auto m_arChildWidget = 0x268; // TArray<TWeakObjectPtr<UWidgetBase>>
		constexpr auto m_arMirTextBlock = 0x280; // TArray<TWeakObjectPtr<UMirTextBlock>>
		constexpr auto m_arMirRichTextBlock = 0x290; // TArray<TWeakObjectPtr<UMirRichTextBlock>>
		constexpr auto m_arMirEditableText = 0x2a0; // TArray<TWeakObjectPtr<UMirEditableText>>
		constexpr auto m_arMirImage = 0x2b0; // TArray<TWeakObjectPtr<UMirImage>>
	}

	namespace n_UDialogueCameraData { // : UDataAsset
		constexpr auto CameraDataArray = 0x30; // TArray<FActorPlacement>
	}

	namespace n_ATimerTrigger { // : AActivateTrigger
		constexpr auto m_Time = 0x278; // float
		constexpr auto m_bShowLimitTimeWidget = 0x27c; // bool
	}

	namespace n_UTutorialHighlightWidget { // : UUserWidget
		constexpr auto m_MainTypeID = 0x240; // int32_t
		constexpr auto m_TargetIndex = 0x244; // FName
	}

	namespace n_UAnimCompress_ACLBase { // : UAnimCompress
		constexpr auto Description = 0x28; // FString
		constexpr auto bNeedsSkeleton = 0x38; // char : 1
		constexpr auto bEnableSegmenting = 0x38; // char : 1
		constexpr auto IdealNumFramesPerSegment = 0x3c; // uint32_t
		constexpr auto MaxNumFramesPerSegment = 0x40; // uint32_t
		constexpr auto TranslationCompressionFormat = 0x44; // AnimationCompressionFormat
		constexpr auto RotationCompressionFormat = 0x45; // AnimationCompressionFormat
		constexpr auto ScaleCompressionFormat = 0x46; // AnimationCompressionFormat
		constexpr auto MaxCurveError = 0x48; // float
	}

	namespace n_UMaterialExpressionAtmosphericFogColor { // : UMaterialExpression
		constexpr auto WorldPosition = 0x40; // FExpressionInput
	}

	namespace n_UMaterialExpressionDepthOfFieldFunction { // : UMaterialExpression
		constexpr auto FunctionValue = 0x40; // EDepthOfFieldFunctionValue
		constexpr auto Depth = 0x44; // FExpressionInput
	}

	namespace n_UMM_HudAlramHelperList { // : UWidgetBase
		constexpr auto m_iAlarmEffectID = 0x2e8; // int32_t
		constexpr auto m_fAlramSlotSize = 0x2ec; // float
		constexpr auto m_fAlramListSize = 0x2f0; // float
		constexpr auto m_fNoticeShowTime = 0x2f4; // float
		constexpr auto m_fAlramListShowTime = 0x2f8; // float
		constexpr auto m_AlarmPanel = 0x318; // UPanelWidget*
		constexpr auto m_ScrollBox = 0x320; // UScrollBox*
		constexpr auto m_AlarmSlotList = 0x328; // TArray<UMM_HudAlramHelperListSolt*>
		constexpr auto m_Grid_Notice = 0x338; // UPanelWidget*
		constexpr auto m_Txt_Notice = 0x340; // UMirTextBlock*
		constexpr auto m_AnitNotice = 0x348; // UWidgetAnimation*
	}

	namespace n_UUdpMessagingSettings { // : UObject
		constexpr auto EnableTransport = 0x28; // bool
		constexpr auto bAutoRepair = 0x29; // bool
		constexpr auto UnicastEndpoint = 0x30; // FString
		constexpr auto MulticastEndpoint = 0x40; // FString
		constexpr auto MulticastTimeToLive = 0x50; // char
		constexpr auto StaticEndpoints = 0x58; // TArray<FString>
		constexpr auto EnableTunnel = 0x68; // bool
		constexpr auto TunnelUnicastEndpoint = 0x70; // FString
		constexpr auto TunnelMulticastEndpoint = 0x80; // FString
		constexpr auto RemoteTunnelEndpoints = 0x90; // TArray<FString>
	}

	namespace n_UPathFollowingComponent { // : UActorComponent
		constexpr auto MovementComp = 0xe8; // UNavMovementComponent*
		constexpr auto MyNavData = 0xf8; // ANavigationData*
	}

	namespace n_UInterpFilter_Custom { // : UInterpFilter
		constexpr auto Caption = 0x28; // FString
	}

	namespace n_AInfo { // : AActor
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto bHidden = 0x58; // char : 1
		constexpr auto bNetTemporary = 0x58; // char : 1
		constexpr auto bNetStartup = 0x58; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x58; // char : 1
		constexpr auto bAlwaysRelevant = 0x58; // char : 1
		constexpr auto bReplicateMovement = 0x58; // char : 1
		constexpr auto bTearOff = 0x58; // char : 1
		constexpr auto bExchangedRoles = 0x58; // char : 1
		constexpr auto bNetLoadOnClient = 0x59; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x59; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x59; // char : 1
		constexpr auto bRelevantForLevelBounds = 0x59; // char : 1
		constexpr auto bReplayRewindable = 0x59; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x59; // char : 1
		constexpr auto bAutoDestroyWhenFinished = 0x59; // char : 1
		constexpr auto bBlockInput = 0x59; // char : 1
		constexpr auto bCanBeDamaged = 0x5a; // char : 1
		constexpr auto bCollideWhenPlacing = 0x5a; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x5a; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x5a; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x5a; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x5a; // char : 1
		constexpr auto bIsEditorOnlyActor = 0x5a; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x5a; // char : 1
		constexpr auto bReplicates = 0x5b; // char : 1
		constexpr auto bCanBeInCluster = 0x5b; // char : 1
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x5b; // char : 1
		constexpr auto bActorEnableCollision = 0x5c; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x5c; // char : 1
		constexpr auto UpdateOverlapsMethodDuringLevelStreaming = 0x5d; // EActorUpdateOverlapsMethod
		constexpr auto DefaultUpdateOverlapsMethodDuringLevelStreaming = 0x5e; // EActorUpdateOverlapsMethod
		constexpr auto RemoteRole = 0x5f; // ENetRole
		constexpr auto ReplicatedMovement = 0x60; // FRepMovement
		constexpr auto InitialLifeSpan = 0x94; // float
		constexpr auto CustomTimeDilation = 0x98; // float
		constexpr auto AttachmentReplication = 0xa0; // FRepAttachment
		constexpr auto Owner = 0xe0; // AActor*
		constexpr auto NetDriverName = 0xe8; // FName
		constexpr auto Role = 0xf0; // ENetRole
		constexpr auto NetDormancy = 0xf1; // ENetDormancy
		constexpr auto SpawnCollisionHandlingMethod = 0xf2; // ESpawnActorCollisionHandlingMethod
		constexpr auto AutoReceiveInput = 0xf3; // EAutoReceiveInput
		constexpr auto InputPriority = 0xf4; // int32_t
		constexpr auto InputComponent = 0xf8; // UInputComponent*
		constexpr auto NetCullDistanceSquared = 0x100; // float
		constexpr auto NetTag = 0x104; // int32_t
		constexpr auto NetUpdateFrequency = 0x108; // float
		constexpr auto MinNetUpdateFrequency = 0x10c; // float
		constexpr auto NetPriority = 0x110; // float
		constexpr auto Instigator = 0x118; // APawn*
		constexpr auto Children = 0x120; // TArray<AActor*>
		constexpr auto RootComponent = 0x130; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x138; // TArray<AMatineeActor*>
		constexpr auto Layers = 0x150; // TArray<FName>
		constexpr auto ParentComponent = 0x160; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto Tags = 0x168; // TArray<FName>
		constexpr auto OnTakeAnyDamage = 0x178; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x179; // FScriptMulticastDelegate
		constexpr auto OnTakeRadialDamage = 0x17a; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x17b; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x17c; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x17d; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x17e; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x17f; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x180; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x181; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x182; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x183; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x184; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x185; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x186; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x187; // FScriptMulticastDelegate
		constexpr auto InstanceComponents = 0x1e8; // TArray<UActorComponent*>
		constexpr auto BlueprintCreatedComponents = 0x1f8; // TArray<UActorComponent*>
	}

	namespace n_UMM_Popup_PKRecord { // : UWidgetBase
		constexpr auto m_ScrollBox = 0x2f0; // UMirScrollBox*
		constexpr auto m_Txt_Title = 0x2f8; // UTextBlock*
		constexpr auto m_Txt_AttackerTitle = 0x300; // UTextBlock*
		constexpr auto m_Img_AttackerClassMark = 0x308; // UImage*
		constexpr auto m_Txt_AttackerName = 0x310; // UTextBlock*
		constexpr auto m_Btn_AttackerInfo = 0x318; // UMM_Common_Btn_Symbol*
		constexpr auto m_Txt_DeaderTitle = 0x320; // UTextBlock*
		constexpr auto m_Img_DeaderClassMark = 0x328; // UImage*
		constexpr auto m_Txt_DeaderName = 0x330; // UTextBlock*
		constexpr auto m_Btn_DeaderInfo = 0x338; // UMM_Common_Btn_Symbol*
		constexpr auto m_Txt_LostCostTitle = 0x340; // UTextBlock*
		constexpr auto m_Txt_LostItemTitle = 0x348; // UTextBlock*
		constexpr auto m_Slot_LostCost = 0x350; // UMM_Goods_Slot*
		constexpr auto m_Grid_AttackerAction = 0x358; // UPanelWidget*
		constexpr auto m_Btn_Confirm = 0x360; // UMM_Common_Btn*
		constexpr auto m_Grid_DeaderAction = 0x368; // UPanelWidget*
		constexpr auto m_Btn_Track = 0x370; // UMM_Common_Btn*
		constexpr auto m_Btn_Wanted = 0x378; // UMM_Common_Btn*
		constexpr auto Btn_Background = 0x380; // UMirButton*
		constexpr auto btn_close = 0x388; // UMM_Common_Btn_Symbol*
	}

	namespace n_APrecomputedVisibilityOverrideVolume { // : AVolume
		constexpr auto OverrideVisibleActors = 0x250; // TArray<AActor*>
		constexpr auto OverrideInvisibleActors = 0x260; // TArray<AActor*>
		constexpr auto OverrideInvisibleLevels = 0x270; // TArray<FName>
	}

	namespace n_UMM_CostumeAbility_Select { // : UWidgetBase
		constexpr auto Txt_Title = 0x2f0; // UMirTextBlock*
		constexpr auto arrSelect_Ability = 0x2f8; // TArray<UMM_PopUp_ItemInfo_Ability*>
	}

	namespace n_UParticleModuleSpawn { // : UParticleModuleSpawnBase
		constexpr auto Rate = 0x38; // FRawDistributionFloat
		constexpr auto RateScale = 0x68; // FRawDistributionFloat
		constexpr auto ParticleBurstMethod = 0x98; // EParticleBurstMethod
		constexpr auto BurstList = 0xa0; // TArray<FParticleBurst>
		constexpr auto BurstScale = 0xb0; // FRawDistributionFloat
		constexpr auto bApplyGlobalSpawnRateScale = 0xe0; // char : 1
	}

	namespace n_UAISenseEvent_Damage { // : UAISenseEvent
		constexpr auto Event = 0x28; // FAIDamageEvent
	}

	namespace n_UMirTextBlock { // : UTextBlock
		constexpr auto m_ResaveColorID = 0x2b0; // int32_t
		constexpr auto m_eStyle = 0x2b4; // EStyle_MirTextBlock
		constexpr auto m_bUseAdjustFontSize = 0x2b5; // bool
		constexpr auto m_StringTableType = 0x2b6; // EStringTableType
		constexpr auto m_StringTableID = 0x2b8; // int32_t
	}

	namespace n_UVectorFieldStatic { // : UVectorField
		constexpr auto SizeX = 0x48; // int32_t
		constexpr auto SizeY = 0x4c; // int32_t
		constexpr auto SizeZ = 0x50; // int32_t
		constexpr auto bAllowCPUAccess = 0x54; // bool
		constexpr auto CPUData = 0xf0; // TArray<FVector4>
	}

	namespace n_UInterpGroupInst { // : UObject
		constexpr auto Group = 0x28; // UInterpGroup*
		constexpr auto GroupActor = 0x30; // AActor*
		constexpr auto TrackInst = 0x38; // TArray<UInterpTrackInst*>
	}

	namespace n_AHeroInfoCamera { // : AActor
		constexpr auto DisplayActor = 0x238; // APlayerModelingActor*
		constexpr auto WheelCameraType = 0x240; // int32_t
		constexpr auto UIBackGroundActor = 0x248; // AUIBackGroundActor*
		constexpr auto m_LoopEffects = 0x250; // TMap<int32_t, TWeakObjectPtr<UParticleSystemComponent>>
		constexpr auto m_OneShotEffectList = 0x2a0; // TArray<TWeakObjectPtr<UParticleSystemComponent>>
		constexpr auto CurrentCharacterAngle = 0x2b0; // float
		constexpr auto TargetCharacterAngle = 0x2b4; // float
		constexpr auto CameraType = 0x2b8; // int32_t
	}

	namespace n_UUserWidget { // : UWidget
		constexpr auto ColorAndOpacity = 0x110; // FLinearColor
		constexpr auto ColorAndOpacityDelegate = 0x120; // DelegateProperty
		constexpr auto ForegroundColor = 0x130; // FSlateColor
		constexpr auto ForegroundColorDelegate = 0x158; // DelegateProperty
		constexpr auto Padding = 0x168; // FMargin
		constexpr auto ActiveSequencePlayers = 0x178; // TArray<UUMGSequencePlayer*>
		constexpr auto StoppedSequencePlayers = 0x188; // TArray<UUMGSequencePlayer*>
		constexpr auto NamedSlotBindings = 0x1a8; // TArray<FNamedSlotBinding>
		constexpr auto WidgetTree = 0x1b8; // UWidgetTree*
		constexpr auto Priority = 0x1c0; // int32_t
		constexpr auto bSupportsKeyboardFocus = 0x1c4; // char : 1
		constexpr auto bIsFocusable = 0x1c4; // char : 1
		constexpr auto bStopAction = 0x1c4; // char : 1
		constexpr auto bHasScriptImplementedTick = 0x1c4; // char : 1
		constexpr auto bHasScriptImplementedPaint = 0x1c4; // char : 1
		constexpr auto bCookedWidgetTree = 0x1c4; // char : 1
		constexpr auto TickFrequency = 0x1d0; // EWidgetTickFrequency
		constexpr auto InputComponent = 0x1d8; // UInputComponent*
		constexpr auto AnimationCallbacks = 0x1e0; // TArray<FAnimationEventBinding>
	}

	namespace n_UIAPSteamStoreModule { // : UIAPStoreModuleBase
		constexpr auto m_UserRequestProductData = 0x58; // FIAPUserRequestData
		constexpr auto m_PurchaseProductData = 0x98; // FIAPProductData
		constexpr auto m_PurchaseInProgress = 0x138; // TArray<EIAPPurchaseState>
		constexpr auto ProcessedTransactionIDs = 0x148; // TArray<FString>
		constexpr auto ProcessedTransactionReceipts = 0x158; // TArray<FString>
		constexpr auto DelayHideBlockScreenTimeHandle = 0x168; // FTimerHandle
		constexpr auto m_MarketProductDataMap = 0x170; // TMap<FString, FIAPMarketProductData>
	}

	namespace n_UCheatConnectServer { // : UWidgetBase
		constexpr auto Btn_MasterServer = 0x2e0; // UMirButton*
		constexpr auto Btn_QAServer = 0x2e8; // UMirButton*
		constexpr auto Btn_PreAlphaServer = 0x2f0; // UMirButton*
		constexpr auto Btn_AlphaServer = 0x2f8; // UMirButton*
		constexpr auto Btn_BetaServer = 0x300; // UMirButton*
		constexpr auto Btn_LiveServer = 0x308; // UMirButton*
		constexpr auto Btn_GB_MasterServer = 0x310; // UMirButton*
		constexpr auto Btn_GB_QAServer = 0x318; // UMirButton*
		constexpr auto Btn_GB_PreAlphaServer = 0x320; // UMirButton*
		constexpr auto Btn_GB_AlphaServer = 0x328; // UMirButton*
		constexpr auto Btn_GB_BetaServer = 0x330; // UMirButton*
		constexpr auto Btn_GB_LiveServer = 0x338; // UMirButton*
	}

	namespace n_UMaterialExpressionReroute { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UMM_Auction_Slot_BookMark { // : UMM_Auction_Slot_Base
		constexpr auto m_pChkBookMark = 0x348; // UMirCheckBox*
		constexpr auto m_pSlotItem = 0x350; // UMM_Slot_Inventory*
		constexpr auto m_pTxtName = 0x358; // UMirTextBlock*
		constexpr auto m_pTxtPrice = 0x360; // UMirTextBlock*
		constexpr auto m_pTxtCount = 0x368; // UMirTextBlock*
		constexpr auto m_pBtnClick = 0x370; // UMirButton*
		constexpr auto m_pImgDisable = 0x378; // UMirImage*
	}

	namespace n_UMM_Hud_Chat_ItemShare { // : UWidgetBase
		constexpr auto m_ShareItemInfo = 0x2e0; // UMM_Slot_Registered*
		constexpr auto Btn_ItemInfo = 0x2e8; // UMirButton*
		constexpr auto m_Img_CharaIcon = 0x2f0; // UMirImage*
		constexpr auto m_Txt_SendTime = 0x2f8; // UMirTextBlock*
		constexpr auto m_Txt_Prefix = 0x300; // UMirTextBlock*
		constexpr auto m_Txt_Nickname = 0x308; // UMirTextBlock*
		constexpr auto m_Txt_ItemName = 0x310; // UMirTextBlock*
		constexpr auto m_SendUserUID = 0x318; // int64_t
		constexpr auto m_ShareItemUID = 0x320; // int64_t
		constexpr auto m_SmeltingLv = 0x328; // int32_t
		constexpr auto m_IsTranscendible = 0x32c; // bool
		constexpr auto m_TranscendStep = 0x330; // int32_t
		constexpr auto Btn_UserInteraction = 0x338; // UMirButton*
		constexpr auto m_SendNickname = 0x340; // FString
	}

	namespace n_AOnlineBeacon { // : AActor
		constexpr auto BeaconConnectionInitialTimeout = 0x220; // float
		constexpr auto BeaconConnectionTimeout = 0x224; // float
		constexpr auto NetDriver = 0x228; // UNetDriver*
	}

	namespace n_UCheckBoxStyleAsset { // : UObject
		constexpr auto CheckBoxStyle = 0x28; // FCheckBoxStyle
	}

	namespace n_UMM_Item_Make_Special_Popup { // : UWidgetBase
		constexpr auto m_Txt_None = 0x2f0; // UMirTextBlock*
		constexpr auto m_Item_Name = 0x2f8; // UMirTextBlock*
		constexpr auto m_Regist_Complete_Btn = 0x300; // UMM_Common_Btn*
		constexpr auto m_Close_Btn = 0x308; // UMM_Common_Btn_Symbol*
		constexpr auto m_Material_Slot_Array = 0x310; // TArray<UMM_MakeItem_Slot_Special*>
		constexpr auto m_ScrollBox = 0x320; // UMM_SharedScrollBox*
		constexpr auto InventoryList = 0x328; // TArray<UMM_Slot_Inventory*>
		constexpr auto mMakeItemID = 0x338; // uint32_t
		constexpr auto SPECIAL_MATERIAL_TITLE_NAME = 0x33c; // uint32_t
		constexpr auto SPECIAL_MATERIAL_WEAPON = 0x340; // uint32_t
		constexpr auto SPECIAL_MATERIAL_ARMOR = 0x344; // uint32_t
		constexpr auto SPECIAL_MATERIAL_ACCESSORY = 0x348; // uint32_t
	}

	namespace n_UMM_PopUp_ItemInfo_Costume { // : UWidgetBase
		constexpr auto m_Grid_Item_Info = 0x300; // UCanvasPanel*
		constexpr auto Slot_Main = 0x308; // UMM_Costume_Slot_InvenItem*
		constexpr auto Txt_Name = 0x310; // UMirTextBlock*
		constexpr auto txt_date = 0x318; // UMirTextBlock*
		constexpr auto Btn_Main = 0x320; // UMirButton*
		constexpr auto btn_close = 0x328; // UMM_Common_Btn_Symbol*
		constexpr auto Panel_Ability = 0x330; // TArray<UPanelWidget*>
		constexpr auto Img_Ability = 0x340; // TArray<UMirImage*>
		constexpr auto Txt_Ability_Name = 0x350; // TArray<UMirTextBlock*>
		constexpr auto Txt_Ability_Value = 0x360; // TArray<UMirTextBlock*>
		constexpr auto Img_Icon_Cost = 0x370; // UMirImage*
		constexpr auto Txt_Name_CostValue = 0x378; // UMirTextBlock*
		constexpr auto m_CostumeParts = 0x380; // COSTUME_PARTS
		constexpr auto m_CostumeId = 0x384; // int32_t
	}

	namespace n_UEnvQueryInstanceBlueprintWrapper { // : UObject
		constexpr auto QueryID = 0x30; // int32_t
		constexpr auto ItemType = 0x58; // UEnvQueryItemType*
		constexpr auto OptionIndex = 0x60; // int32_t
		constexpr auto OnQueryFinishedEvent = 0x68; // FScriptMulticastDelegate
	}

	namespace n_UGameViewportClient { // : UScriptViewportClient
		constexpr auto ViewportConsole = 0x40; // UConsole*
		constexpr auto DebugProperties = 0x48; // TArray<FDebugDisplayProperty>
		constexpr auto World = 0x78; // UWorld*
		constexpr auto GameInstance = 0x80; // UGameInstance*
	}

	namespace n_AMMCheckMacro { // : AActor
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto bHidden = 0x58; // char : 1
		constexpr auto bNetTemporary = 0x58; // char : 1
		constexpr auto bNetStartup = 0x58; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x58; // char : 1
		constexpr auto bAlwaysRelevant = 0x58; // char : 1
		constexpr auto bReplicateMovement = 0x58; // char : 1
		constexpr auto bTearOff = 0x58; // char : 1
		constexpr auto bExchangedRoles = 0x58; // char : 1
		constexpr auto bNetLoadOnClient = 0x59; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x59; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x59; // char : 1
		constexpr auto bRelevantForLevelBounds = 0x59; // char : 1
		constexpr auto bReplayRewindable = 0x59; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x59; // char : 1
		constexpr auto bAutoDestroyWhenFinished = 0x59; // char : 1
		constexpr auto bBlockInput = 0x59; // char : 1
		constexpr auto bCanBeDamaged = 0x5a; // char : 1
		constexpr auto bCollideWhenPlacing = 0x5a; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x5a; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x5a; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x5a; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x5a; // char : 1
		constexpr auto bIsEditorOnlyActor = 0x5a; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x5a; // char : 1
		constexpr auto bReplicates = 0x5b; // char : 1
		constexpr auto bCanBeInCluster = 0x5b; // char : 1
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x5b; // char : 1
		constexpr auto bActorEnableCollision = 0x5c; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x5c; // char : 1
		constexpr auto UpdateOverlapsMethodDuringLevelStreaming = 0x5d; // EActorUpdateOverlapsMethod
		constexpr auto DefaultUpdateOverlapsMethodDuringLevelStreaming = 0x5e; // EActorUpdateOverlapsMethod
		constexpr auto RemoteRole = 0x5f; // ENetRole
		constexpr auto ReplicatedMovement = 0x60; // FRepMovement
		constexpr auto InitialLifeSpan = 0x94; // float
		constexpr auto CustomTimeDilation = 0x98; // float
		constexpr auto AttachmentReplication = 0xa0; // FRepAttachment
		constexpr auto Owner = 0xe0; // AActor*
		constexpr auto NetDriverName = 0xe8; // FName
		constexpr auto Role = 0xf0; // ENetRole
		constexpr auto NetDormancy = 0xf1; // ENetDormancy
		constexpr auto SpawnCollisionHandlingMethod = 0xf2; // ESpawnActorCollisionHandlingMethod
		constexpr auto AutoReceiveInput = 0xf3; // EAutoReceiveInput
		constexpr auto InputPriority = 0xf4; // int32_t
		constexpr auto InputComponent = 0xf8; // UInputComponent*
		constexpr auto NetCullDistanceSquared = 0x100; // float
		constexpr auto NetTag = 0x104; // int32_t
		constexpr auto NetUpdateFrequency = 0x108; // float
		constexpr auto MinNetUpdateFrequency = 0x10c; // float
		constexpr auto NetPriority = 0x110; // float
		constexpr auto Instigator = 0x118; // APawn*
		constexpr auto Children = 0x120; // TArray<AActor*>
		constexpr auto RootComponent = 0x130; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x138; // TArray<AMatineeActor*>
		constexpr auto Layers = 0x150; // TArray<FName>
		constexpr auto ParentComponent = 0x160; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto Tags = 0x168; // TArray<FName>
		constexpr auto OnTakeAnyDamage = 0x178; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x179; // FScriptMulticastDelegate
		constexpr auto OnTakeRadialDamage = 0x17a; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x17b; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x17c; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x17d; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x17e; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x17f; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x180; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x181; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x182; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x183; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x184; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x185; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x186; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x187; // FScriptMulticastDelegate
		constexpr auto InstanceComponents = 0x1e8; // TArray<UActorComponent*>
		constexpr auto BlueprintCreatedComponents = 0x1f8; // TArray<UActorComponent*>
	}

	namespace n_ANote { // : AActor
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto bHidden = 0x58; // char : 1
		constexpr auto bNetTemporary = 0x58; // char : 1
		constexpr auto bNetStartup = 0x58; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x58; // char : 1
		constexpr auto bAlwaysRelevant = 0x58; // char : 1
		constexpr auto bReplicateMovement = 0x58; // char : 1
		constexpr auto bTearOff = 0x58; // char : 1
		constexpr auto bExchangedRoles = 0x58; // char : 1
		constexpr auto bNetLoadOnClient = 0x59; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x59; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x59; // char : 1
		constexpr auto bRelevantForLevelBounds = 0x59; // char : 1
		constexpr auto bReplayRewindable = 0x59; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x59; // char : 1
		constexpr auto bAutoDestroyWhenFinished = 0x59; // char : 1
		constexpr auto bBlockInput = 0x59; // char : 1
		constexpr auto bCanBeDamaged = 0x5a; // char : 1
		constexpr auto bCollideWhenPlacing = 0x5a; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x5a; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x5a; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x5a; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x5a; // char : 1
		constexpr auto bIsEditorOnlyActor = 0x5a; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x5a; // char : 1
		constexpr auto bReplicates = 0x5b; // char : 1
		constexpr auto bCanBeInCluster = 0x5b; // char : 1
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x5b; // char : 1
		constexpr auto bActorEnableCollision = 0x5c; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x5c; // char : 1
		constexpr auto UpdateOverlapsMethodDuringLevelStreaming = 0x5d; // EActorUpdateOverlapsMethod
		constexpr auto DefaultUpdateOverlapsMethodDuringLevelStreaming = 0x5e; // EActorUpdateOverlapsMethod
		constexpr auto RemoteRole = 0x5f; // ENetRole
		constexpr auto ReplicatedMovement = 0x60; // FRepMovement
		constexpr auto InitialLifeSpan = 0x94; // float
		constexpr auto CustomTimeDilation = 0x98; // float
		constexpr auto AttachmentReplication = 0xa0; // FRepAttachment
		constexpr auto Owner = 0xe0; // AActor*
		constexpr auto NetDriverName = 0xe8; // FName
		constexpr auto Role = 0xf0; // ENetRole
		constexpr auto NetDormancy = 0xf1; // ENetDormancy
		constexpr auto SpawnCollisionHandlingMethod = 0xf2; // ESpawnActorCollisionHandlingMethod
		constexpr auto AutoReceiveInput = 0xf3; // EAutoReceiveInput
		constexpr auto InputPriority = 0xf4; // int32_t
		constexpr auto InputComponent = 0xf8; // UInputComponent*
		constexpr auto NetCullDistanceSquared = 0x100; // float
		constexpr auto NetTag = 0x104; // int32_t
		constexpr auto NetUpdateFrequency = 0x108; // float
		constexpr auto MinNetUpdateFrequency = 0x10c; // float
		constexpr auto NetPriority = 0x110; // float
		constexpr auto Instigator = 0x118; // APawn*
		constexpr auto Children = 0x120; // TArray<AActor*>
		constexpr auto RootComponent = 0x130; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x138; // TArray<AMatineeActor*>
		constexpr auto Layers = 0x150; // TArray<FName>
		constexpr auto ParentComponent = 0x160; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto Tags = 0x168; // TArray<FName>
		constexpr auto OnTakeAnyDamage = 0x178; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x179; // FScriptMulticastDelegate
		constexpr auto OnTakeRadialDamage = 0x17a; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x17b; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x17c; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x17d; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x17e; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x17f; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x180; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x181; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x182; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x183; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x184; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x185; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x186; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x187; // FScriptMulticastDelegate
		constexpr auto InstanceComponents = 0x1e8; // TArray<UActorComponent*>
		constexpr auto BlueprintCreatedComponents = 0x1f8; // TArray<UActorComponent*>
	}

	namespace n_UMaterialExpressionVectorParameter { // : UMaterialExpressionParameter
		constexpr auto DefaultValue = 0x58; // FLinearColor
		constexpr auto bUseCustomPrimitiveData = 0x68; // bool
		constexpr auto PrimitiveDataIndex = 0x69; // char
	}

	namespace n_AWorldSettings { // : AInfo
		constexpr auto VisibilityCellSize = 0x220; // int32_t
		constexpr auto VisibilityAggressiveness = 0x224; // EVisibilityAggressiveness
		constexpr auto bPrecomputeVisibility = 0x225; // char : 1
		constexpr auto bPlaceCellsOnlyAlongCameraTracks = 0x225; // char : 1
		constexpr auto bEnableWorldBoundsChecks = 0x225; // char : 1
		constexpr auto bEnableNavigationSystem = 0x225; // char : 1
		constexpr auto bEnableAISystem = 0x225; // char : 1
		constexpr auto bEnableWorldComposition = 0x225; // char : 1
		constexpr auto bUseClientSideLevelStreamingVolumes = 0x225; // char : 1
		constexpr auto bEnableWorldOriginRebasing = 0x225; // char : 1
		constexpr auto bWorldGravitySet = 0x226; // char : 1
		constexpr auto bGlobalGravitySet = 0x226; // char : 1
		constexpr auto bMinimizeBSPSections = 0x226; // char : 1
		constexpr auto bForceNoPrecomputedLighting = 0x226; // char : 1
		constexpr auto bHighPriorityLoading = 0x226; // char : 1
		constexpr auto bHighPriorityLoadingLocal = 0x226; // char : 1
		constexpr auto bOverrideDefaultBroadphaseSettings = 0x226; // char : 1
		constexpr auto NavigationSystemConfig = 0x228; // UNavigationSystemConfig*
		constexpr auto NavigationSystemConfigOverride = 0x230; // UNavigationSystemConfig*
		constexpr auto WorldToMeters = 0x238; // float
		constexpr auto KillZ = 0x23c; // float
		constexpr auto KillZDamageType = 0x240; // UDamageType*
		constexpr auto WorldGravityZ = 0x248; // float
		constexpr auto GlobalGravityZ = 0x24c; // float
		constexpr auto DefaultPhysicsVolumeClass = 0x250; // ADefaultPhysicsVolume*
		constexpr auto PhysicsCollisionHandlerClass = 0x258; // UPhysicsCollisionHandler*
		constexpr auto DefaultGameMode = 0x260; // AGameModeBase*
		constexpr auto GameNetworkManagerClass = 0x268; // AGameNetworkManager*
		constexpr auto PackedLightAndShadowMapTextureSize = 0x270; // int32_t
		constexpr auto DefaultColorScale = 0x274; // FVector
		constexpr auto DefaultMaxDistanceFieldOcclusionDistance = 0x280; // float
		constexpr auto GlobalDistanceFieldViewDistance = 0x284; // float
		constexpr auto DynamicIndirectShadowsSelfShadowingIntensity = 0x288; // float
		constexpr auto DefaultReverbSettings = 0x290; // FReverbSettings
		constexpr auto DefaultAmbientZoneSettings = 0x2b0; // FInteriorSettings
		constexpr auto MonoCullingDistance = 0x2d4; // float
		constexpr auto DefaultBaseSoundMix = 0x2d8; // USoundMix*
		constexpr auto TimeDilation = 0x2e0; // float
		constexpr auto MatineeTimeDilation = 0x2e4; // float
		constexpr auto DemoPlayTimeDilation = 0x2e8; // float
		constexpr auto MinGlobalTimeDilation = 0x2ec; // float
		constexpr auto MaxGlobalTimeDilation = 0x2f0; // float
		constexpr auto MinUndilatedFrameTime = 0x2f4; // float
		constexpr auto MaxUndilatedFrameTime = 0x2f8; // float
		constexpr auto BroadphaseSettings = 0x2fc; // FBroadphaseSettings
		constexpr auto Pauser = 0x340; // APlayerState*
		constexpr auto ReplicationViewers = 0x348; // TArray<FNetViewer>
		constexpr auto AssetUserData = 0x358; // TArray<UAssetUserData*>
		constexpr auto PauserPlayerState = 0x368; // APlayerState*
		constexpr auto MaxNumberOfBookmarks = 0x370; // int32_t
		constexpr auto DefaultBookmarkClass = 0x378; // UBookmarkBase*
		constexpr auto BookmarkArray = 0x380; // TArray<UBookmarkBase*>
		constexpr auto LastBookmarkClass = 0x390; // UBookmarkBase*
	}

	namespace n_UMM_GuildListSlot { // : UWidgetBase
		constexpr auto img_rank = 0x2e0; // UMirImage*
		constexpr auto txt_rank = 0x2e8; // UMirTextBlock*
		constexpr auto guild_icon = 0x2f0; // UMM_GuildIcon*
		constexpr auto Txt_Name = 0x2f8; // UMirTextBlock*
		constexpr auto txt_level = 0x300; // UMirTextBlock*
		constexpr auto txt_member = 0x308; // UMirTextBlock*
		constexpr auto txt_join_type = 0x310; // UMirTextBlock*
		constexpr auto img_join_combatpower = 0x318; // UMirImage*
		constexpr auto txt_join_combatpower = 0x320; // UMirTextBlock*
		constexpr auto Btn_Main = 0x328; // UMirButton*
		constexpr auto CombatPoint = 0x330; // UMM_Common_CombatPoint*
	}

	namespace n_UMM_TopMsg_Slot { // : UWidgetBase
		constexpr auto m_fShowTime = 0x2e0; // float
		constexpr auto m_AniStart = 0x2e8; // UWidgetAnimation*
		constexpr auto m_RTxt_Message = 0x310; // UMirRichTextBlock*
	}

	namespace n_UBehaviorTreeManager { // : UObject
		constexpr auto MaxDebuggerSteps = 0x28; // int32_t
		constexpr auto LoadedTemplates = 0x30; // TArray<FBehaviorTreeTemplateInfo>
		constexpr auto ActiveComponents = 0x40; // TArray<UBehaviorTreeComponent*>
	}

	namespace n_UMM_GuildPerusePopup { // : UWidgetBase
		constexpr auto cb_combatpower = 0x2f0; // UMirCheckBox*
		constexpr auto cb_level = 0x2f8; // UMirCheckBox*
		constexpr auto cb_none = 0x300; // UMirCheckBox*
		constexpr auto cb_recommend = 0x308; // UMirCheckBox*
		constexpr auto cb_request = 0x310; // UMirCheckBox*
		constexpr auto cb_invited = 0x318; // UMirCheckBox*
		constexpr auto btn_close = 0x320; // UMM_Common_Btn_Symbol*
		constexpr auto cb_confirm = 0x328; // UMM_Common_Btn*
		constexpr auto cb_cancel = 0x330; // UMM_Common_Btn*
		constexpr auto cp_filter = 0x338; // UMirCanvasPanel*
	}

	namespace n_UMM_Occupation_CommandMark { // : UWidgetBase
		constexpr auto m_Canvas_Effect = 0x2e0; // UCanvasPanel*
		constexpr auto m_Canvas_Text = 0x2e8; // UMirCanvasPanel*
		constexpr auto m_Img_MarkIcon = 0x2f0; // UMirImage*
		constexpr auto m_Txt_Command = 0x2f8; // UMirTextBlock*
		constexpr auto m_Btn_Icon = 0x300; // UMirButton*
	}

	namespace n_AGhostStaticMesh { // : AActor
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto bHidden = 0x58; // char : 1
		constexpr auto bNetTemporary = 0x58; // char : 1
		constexpr auto bNetStartup = 0x58; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x58; // char : 1
		constexpr auto bAlwaysRelevant = 0x58; // char : 1
		constexpr auto bReplicateMovement = 0x58; // char : 1
		constexpr auto bTearOff = 0x58; // char : 1
		constexpr auto bExchangedRoles = 0x58; // char : 1
		constexpr auto bNetLoadOnClient = 0x59; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x59; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x59; // char : 1
		constexpr auto bRelevantForLevelBounds = 0x59; // char : 1
		constexpr auto bReplayRewindable = 0x59; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x59; // char : 1
		constexpr auto bAutoDestroyWhenFinished = 0x59; // char : 1
		constexpr auto bBlockInput = 0x59; // char : 1
		constexpr auto bCanBeDamaged = 0x5a; // char : 1
		constexpr auto bCollideWhenPlacing = 0x5a; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x5a; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x5a; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x5a; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x5a; // char : 1
		constexpr auto bIsEditorOnlyActor = 0x5a; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x5a; // char : 1
		constexpr auto bReplicates = 0x5b; // char : 1
		constexpr auto bCanBeInCluster = 0x5b; // char : 1
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x5b; // char : 1
		constexpr auto bActorEnableCollision = 0x5c; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x5c; // char : 1
		constexpr auto UpdateOverlapsMethodDuringLevelStreaming = 0x5d; // EActorUpdateOverlapsMethod
		constexpr auto DefaultUpdateOverlapsMethodDuringLevelStreaming = 0x5e; // EActorUpdateOverlapsMethod
		constexpr auto RemoteRole = 0x5f; // ENetRole
		constexpr auto ReplicatedMovement = 0x60; // FRepMovement
		constexpr auto InitialLifeSpan = 0x94; // float
		constexpr auto CustomTimeDilation = 0x98; // float
		constexpr auto AttachmentReplication = 0xa0; // FRepAttachment
		constexpr auto Owner = 0xe0; // AActor*
		constexpr auto NetDriverName = 0xe8; // FName
		constexpr auto Role = 0xf0; // ENetRole
		constexpr auto NetDormancy = 0xf1; // ENetDormancy
		constexpr auto SpawnCollisionHandlingMethod = 0xf2; // ESpawnActorCollisionHandlingMethod
		constexpr auto AutoReceiveInput = 0xf3; // EAutoReceiveInput
		constexpr auto InputPriority = 0xf4; // int32_t
		constexpr auto InputComponent = 0xf8; // UInputComponent*
		constexpr auto NetCullDistanceSquared = 0x100; // float
		constexpr auto NetTag = 0x104; // int32_t
		constexpr auto NetUpdateFrequency = 0x108; // float
		constexpr auto MinNetUpdateFrequency = 0x10c; // float
		constexpr auto NetPriority = 0x110; // float
		constexpr auto Instigator = 0x118; // APawn*
		constexpr auto Children = 0x120; // TArray<AActor*>
		constexpr auto RootComponent = 0x130; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x138; // TArray<AMatineeActor*>
		constexpr auto Layers = 0x150; // TArray<FName>
		constexpr auto ParentComponent = 0x160; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto Tags = 0x168; // TArray<FName>
		constexpr auto OnTakeAnyDamage = 0x178; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x179; // FScriptMulticastDelegate
		constexpr auto OnTakeRadialDamage = 0x17a; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x17b; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x17c; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x17d; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x17e; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x17f; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x180; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x181; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x182; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x183; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x184; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x185; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x186; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x187; // FScriptMulticastDelegate
		constexpr auto InstanceComponents = 0x1e8; // TArray<UActorComponent*>
		constexpr auto BlueprintCreatedComponents = 0x1f8; // TArray<UActorComponent*>
	}

	namespace n_UToFloatField { // : UFieldNodeFloat
		constexpr auto IntField = 0xb0; // UFieldNodeInt*
	}

	namespace n_UAnimNotify_PlayParticleEffect { // : UAnimNotify
		constexpr auto PSTemplate = 0x38; // UParticleSystem*
		constexpr auto LocationOffset = 0x40; // FVector
		constexpr auto RotationOffset = 0x4c; // FRotator
		constexpr auto Scale = 0x58; // FVector
		constexpr auto Attached = 0x80; // char : 1
		constexpr auto SocketName = 0x84; // FName
	}

	namespace n_UMM_Map_Channel_Slot { // : UWidgetBase
		constexpr auto m_Txt_Channel = 0x300; // UMirTextBlock*
		constexpr auto m_Txt_ChannelState = 0x308; // UMirTextBlock*
		constexpr auto m_Img_PartyExist = 0x310; // UMirImage*
		constexpr auto m_Img_Selected = 0x318; // UMirImage*
		constexpr auto m_Btn_Main = 0x320; // UMirButton*
		constexpr auto icon_boss = 0x328; // UMirImage*
	}

	namespace n_UBTTask_RotateToFaceBBEntry { // : UBTTask_BlackboardBase
		constexpr auto Precision = 0x98; // float
	}

	namespace n_UMM_Common_Slider { // : UWidgetBase
		constexpr auto m_iTitleStringID = 0x2f8; // int32_t
	}

	namespace n_UMM_Guild_Info_Btn { // : UWidgetBase
		constexpr auto m_Img_Icon = 0x2f0; // UMirImage*
		constexpr auto m_Txt_Title = 0x2f8; // UMirTextBlock*
		constexpr auto m_Txt_Value = 0x300; // UMirTextBlock*
		constexpr auto m_Btn = 0x308; // UMirButton*
	}

	namespace n_UMM_Common_ToggleBtn { // : UMM_Common_Btn
		constexpr auto m_StringTableType = 0x350; // EStringTableType
		constexpr auto m_StringTableID = 0x354; // int32_t
		constexpr auto m_Text = 0x358; // FText
		constexpr auto m_bEnableSubText = 0x370; // bool
		constexpr auto m_Font = 0x378; // FSlateFontInfo
		constexpr auto m_TxtMain = 0x3d0; // UMirTextBlock*
		constexpr auto m_TxtSub = 0x3d8; // UMirTextBlock*
		constexpr auto m_RichTxtMain = 0x3e0; // UMirRichTextBlock*
		constexpr auto m_EffectPanel = 0x3e8; // UPanelWidget*
		constexpr auto m_Img_Glow = 0x3f0; // UMirImage*
	}

	namespace n_UMM_NewInventoryTab { // : UWidgetBase
		constexpr auto m_arTab = 0x2e0; // TArray<UMM_NewInventoryTab_Slot*>
	}

	namespace n_UMM_B_FT_Exchange { // : UWidgetBase
		constexpr auto m_pBtnRefresh = 0x2e0; // UMM_Common_Btn_Symbol*
		constexpr auto m_pBtnSmelting = 0x2e8; // UMM_Common_Btn*
		constexpr auto m_pBtnExchange = 0x2f0; // UMM_Common_Btn*
		constexpr auto m_pTxtTitle = 0x2f8; // UMirTextBlock*
		constexpr auto m_pTxtBlackIronExchangePerValue = 0x300; // UMirTextBlock*
		constexpr auto m_pTxtRefreshWemixWallet = 0x308; // UMirTextBlock*
		constexpr auto m_pTxtMyDarco = 0x310; // UMirTextBlock*
		constexpr auto m_pTxtMyDarcoValue = 0x318; // UMirTextBlock*
		constexpr auto m_pTxtBlackIronExchangePer = 0x320; // UMirTextBlock*
		constexpr auto m_pTxtDarcoSmelt = 0x328; // UMirTextBlock*
		constexpr auto m_pTxtDarcoExchange = 0x330; // UMirTextBlock*
		constexpr auto m_pTxtFromBlackIronValue = 0x338; // UMirTextBlock*
		constexpr auto m_pTxtToBlackIronValue = 0x340; // UMirTextBlock*
		constexpr auto m_pTxtDesc = 0x348; // UMirTextBlock*
		constexpr auto m_pTxtDailyExchangeCount = 0x350; // UMirTextBlock*
		constexpr auto m_pScaleBoxNotice = 0x358; // UScaleBox*
		constexpr auto m_pRichTxtNotice = 0x360; // UMirRichTextBlock*
	}

	namespace n_UGameInstance { // : UObject
		constexpr auto LocalPlayers = 0x38; // TArray<ULocalPlayer*>
		constexpr auto OnlineSession = 0x48; // UOnlineSession*
		constexpr auto ReferencedObjects = 0x50; // TArray<UObject*>
	}

	namespace n_UMM_HudPartyMatch { // : UWidgetBase
		constexpr auto m_pParentWidget = 0x260; // UWidgetBase*
		constexpr auto m_arChildWidget = 0x268; // TArray<TWeakObjectPtr<UWidgetBase>>
		constexpr auto m_arMirTextBlock = 0x280; // TArray<TWeakObjectPtr<UMirTextBlock>>
		constexpr auto m_arMirRichTextBlock = 0x290; // TArray<TWeakObjectPtr<UMirRichTextBlock>>
		constexpr auto m_arMirEditableText = 0x2a0; // TArray<TWeakObjectPtr<UMirEditableText>>
		constexpr auto m_arMirImage = 0x2b0; // TArray<TWeakObjectPtr<UMirImage>>
	}

	namespace n_UFootStepSurfaceData { // : UDataAsset
		constexpr auto Default_Particle = 0x30; // UParticleSystem*
		constexpr auto Particles = 0x58; // TMap<EPhysicalSurface, UParticleSystem*>
		constexpr auto MALE_DefaultSound = 0xa8; // USoundBase*
		constexpr auto MALE_Sounds = 0xd0; // TMap<EPhysicalSurface, USoundBase*>
		constexpr auto FEMALE_DefaultSound = 0x120; // USoundBase*
		constexpr auto FEMALE_Sounds = 0x148; // TMap<EPhysicalSurface, USoundBase*>
		constexpr auto VEHICLE_HorseDefaultSound = 0x198; // USoundBase*
		constexpr auto VEHICLE_HorseSounds = 0x1c0; // TMap<EPhysicalSurface, USoundBase*>
		constexpr auto VEHICLE_TigerDefaultSound = 0x210; // USoundBase*
		constexpr auto VEHICLE_TigerSounds = 0x238; // TMap<EPhysicalSurface, USoundBase*>
		constexpr auto VEHICLE_PigDefaultSound = 0x288; // USoundBase*
		constexpr auto VEHICLE_PigSounds = 0x2b0; // TMap<EPhysicalSurface, USoundBase*>
		constexpr auto VEHICLE_WoodenFishDefaultSound = 0x300; // USoundBase*
		constexpr auto VEHICLE_WoodenFishSounds = 0x328; // TMap<EPhysicalSurface, USoundBase*>
	}

	namespace n_UDistributionFloatConstant { // : UDistributionFloat
		constexpr auto Constant = 0x38; // float
	}

	namespace n_AMM_GachaManagerActor { // : AActor
		constexpr auto m_pGachaDirectingData = 0x218; // UGachaDirectingData*
		constexpr auto m_GachaObjects = 0x220; // TArray<AMM_GachaObjectActor*>
		constexpr auto m_GachaInteractionObject = 0x230; // AMM_GachaInteractionObjectActor*
	}

	namespace n_ULevelStreamingDynamic { // : ULevelStreaming
		constexpr auto bInitiallyLoaded = 0x148; // char : 1
		constexpr auto bInitiallyVisible = 0x148; // char : 1
	}

	namespace n_UMaterialExpressionShadowReplace { // : UMaterialExpression
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto shadow = 0x54; // FExpressionInput
	}

	namespace n_ALODActor { // : AActor
		constexpr auto StaticMeshComponent = 0x218; // UStaticMeshComponent*
		constexpr auto ImpostersStaticMeshComponents = 0x220; // TMap<UMaterialInterface*, UInstancedStaticMeshComponent*>
		constexpr auto Proxy = 0x270; // UHLODProxy*
		constexpr auto Key = 0x278; // FName
		constexpr auto LODDrawDistance = 0x280; // float
		constexpr auto LODLevel = 0x284; // int32_t
		constexpr auto SubActors = 0x288; // TArray<AActor*>
		constexpr auto CachedNumHLODLevels = 0x298; // char
	}

	namespace n_UResizeFontDataData { // : UDataAsset
		constexpr auto ResizeFontInfos = 0x30; // TArray<FResizeFontInfo>
		constexpr auto ResaveFontColorInfos = 0x40; // TArray<FLinearColor>
	}

	namespace n_UEnvQueryTest_Dot { // : UEnvQueryTest
		constexpr auto LineA = 0x1c0; // FEnvDirection
		constexpr auto LineB = 0x1e0; // FEnvDirection
		constexpr auto TestMode = 0x200; // EEnvTestDot
		constexpr auto bAbsoluteValue = 0x201; // bool
	}

	namespace n_UReturnResultsTerminal { // : UFieldNodeBase
		constexpr auto PrimaryComponentTick = 0x30; // FActorComponentTickFunction
		constexpr auto ComponentTags = 0x60; // TArray<FName>
		constexpr auto AssetUserData = 0x70; // TArray<UAssetUserData*>
		constexpr auto bReplicates = 0x84; // char : 1
		constexpr auto bNetAddressable = 0x84; // char : 1
		constexpr auto bAutoActivate = 0x85; // char : 1
		constexpr auto bIsActive = 0x86; // char : 1
		constexpr auto bEditableWhenInherited = 0x86; // char : 1
		constexpr auto bCanEverAffectNavigation = 0x86; // char : 1
		constexpr auto bIsEditorOnly = 0x86; // char : 1
		constexpr auto CreationMethod = 0x88; // EComponentCreationMethod
		constexpr auto OnComponentActivated = 0x89; // FScriptMulticastDelegate
		constexpr auto OnComponentDeactivated = 0x8a; // FScriptMulticastDelegate
		constexpr auto UCSModifiedProperties = 0x90; // TArray<FSimpleMemberReference>
	}

	namespace n_UParticleModuleParameterDynamic { // : UParticleModuleParameterBase
		constexpr auto DynamicParams = 0x30; // TArray<FEmitterDynamicParameter>
		constexpr auto UpdateFlags = 0x40; // int32_t
		constexpr auto bUsesVelocity = 0x44; // char : 1
	}

	namespace n_UMM_B_HudFoldMain { // : UWidgetBase
		constexpr auto btn_lock = 0x2e0; // UMirButton*
		constexpr auto m_QuickSlot = 0x2e8; // UMM_HudQuickSlot*
		constexpr auto m_pBtnEmotion = 0x2f0; // UMirButton*
		constexpr auto m_pGridBtnEffectEmotion = 0x2f8; // UPanelWidget*
		constexpr auto m_pBtnChat = 0x300; // UMirButton*
		constexpr auto m_pImgIndicatorChat = 0x308; // UMirImage*
		constexpr auto m_pTextIndicatorChat = 0x310; // UMirTextBlock*
		constexpr auto m_pGridBtnEffectChat = 0x318; // UPanelWidget*
		constexpr auto m_pBtnChangeCamera = 0x320; // UMirButton*
		constexpr auto m_pTextChangeCamera = 0x328; // UMirTextBlock*
		constexpr auto m_pGridBtnEffectChangeCamera = 0x330; // UPanelWidget*
		constexpr auto m_pCanBtnVehicle = 0x338; // UMirCanvasPanel*
		constexpr auto m_pImgVehicleCool = 0x340; // UImage*
		constexpr auto m_pBtnVehicle = 0x348; // UMirButton*
		constexpr auto m_pGridBtnEffectVehicle = 0x350; // UPanelWidget*
		constexpr auto m_pSkillSetWidget = 0x358; // UMM_B_SkillSet*
		constexpr auto AutoCounterPanel = 0x360; // UMirCanvasPanel*
		constexpr auto AutoCounterButton = 0x368; // UMirButton*
		constexpr auto AutoCounterEffectParent = 0x370; // UPanelWidget*
		constexpr auto AutoCounterEffect = 0x378; // UEffectWidgetBase*
		constexpr auto m_pCanAutoBattleButton = 0x380; // UMirCanvasPanel*
		constexpr auto m_pImgAutoBattleButton = 0x388; // UMirImage*
		constexpr auto m_pGridEffectAutoBattleButton = 0x390; // UPanelWidget*
		constexpr auto m_pEffectAutoBattleOn = 0x398; // UEffectWidgetBase*
		constexpr auto m_pBtnAutoBattle = 0x3a0; // UMirButton*
		constexpr auto m_pCanAutoGatherButton = 0x3a8; // UMirCanvasPanel*
		constexpr auto m_pImgAutoGatherButton = 0x3b0; // UMirImage*
		constexpr auto m_pGridEffectAutoGatherButton = 0x3b8; // UPanelWidget*
		constexpr auto m_pEffectAutoGatherOn = 0x3c0; // UEffectWidgetBase*
		constexpr auto m_pBtnAutoGather = 0x3c8; // UMirButton*
		constexpr auto m_pChatWidget = 0x3d0; // UMM_Hud_Chat*
		constexpr auto m_pBtnTotalQuickSlot = 0x3d8; // UMirButton*
		constexpr auto m_pHUDVirtualJoystick = 0x3e0; // UMM_HUDVirtualJoystick*
		constexpr auto m_Can_HudBtn_PetChange = 0x3e8; // UPanelWidget*
		constexpr auto m_Btn_PetChange = 0x3f0; // UMirButton*
		constexpr auto m_Grid_BtnEffect_PetChange = 0x3f8; // UPanelWidget*
		constexpr auto m_Overlay_QuickTab = 0x400; // UPanelWidget*
		constexpr auto m_Can_PetQuickTab = 0x408; // UPanelWidget*
		constexpr auto m_Can_MagicStoneQuickTab = 0x410; // UPanelWidget*
		constexpr auto m_Can_MysticalPieceQuickTab = 0x418; // UPanelWidget*
		constexpr auto m_PetQuickTab = 0x420; // UMM_PetQuickTab*
		constexpr auto m_MagicStoneQuickTab = 0x428; // UMM_MagicStoneQuickTab*
		constexpr auto m_MysticalPieceQuickTab = 0x430; // UMM_MysticalPieceQuickTab*
		constexpr auto m_Btn_QuickTabClose = 0x438; // UMirButton*
		constexpr auto m_Ani_PetChange_Start = 0x440; // UWidgetAnimation*
		constexpr auto m_Ani_PetChange_End = 0x448; // UWidgetAnimation*
	}

	namespace n_AMonsterGroupTrigger { // : AActivateTrigger
		constexpr auto m_bRegen = 0x278; // bool
		constexpr auto m_RegenDelay = 0x27c; // float
		constexpr auto m_SpawnerArray = 0x280; // TArray<AMonsterSpawner*>
		constexpr auto m_bLinkGroup = 0x290; // bool
		constexpr auto m_pKillCount = 0x298; // AMonsterKillCountTrigger*
	}

	namespace n_UContentWidget { // : UPanelWidget
		constexpr auto Slots = 0x108; // TArray<UPanelSlot*>
	}

	namespace n_UMM_MonsterDyeingCheatWidget { // : UUserWidget
		constexpr auto m_Body01_R = 0x240; // float
		constexpr auto m_Body01_G = 0x244; // float
		constexpr auto m_Body01_B = 0x248; // float
		constexpr auto m_Body01_V = 0x24c; // float
		constexpr auto m_pMonster = 0x250; // AMM_Monster*
		constexpr auto m_pPrevMonster = 0x258; // AMM_Monster*
	}

	namespace n_UMM_ItemSynthesis_ListSlot { // : UWidgetBase
		constexpr auto m_Grid_Effect = 0x2e0; // UGridPanel*
		constexpr auto m_Slot_Material = 0x2e8; // UMM_Slot_Material*
		constexpr auto m_Effect = 0x2f0; // UEffectWidgetBase*
	}

	namespace n_UMM_Popup_RewardInfoSlot { // : UWidgetBase
		constexpr auto Img_Icon = 0x2e0; // UMirImage*
		constexpr auto Txt_Name = 0x2e8; // UMirTextBlock*
		constexpr auto txt_count = 0x2f0; // UMirTextBlock*
	}

	namespace n_UPropertyBinding { // : UObject
		constexpr auto SourceObject = 0x28; // TWeakObjectPtr<UObject>
		constexpr auto SourcePath = 0x30; // FDynamicPropertyPath
		constexpr auto DestinationProperty = 0x58; // FName
	}

	namespace n_UMM_Popup_ServerVisit_GuildAlly { // : UWidgetBase
		constexpr auto m_Txt_GuildAlly_Title = 0x2e0; // UMirTextBlock*
		constexpr auto m_ScrollBox_GuildList = 0x2e8; // UMirScrollBox*
		constexpr auto m_ScrollBox_AllyGuildList = 0x2f0; // UMirScrollBox*
		constexpr auto m_Btn_Close = 0x2f8; // UMM_Common_Btn_Symbol*
		constexpr auto m_Btn_Refresh_List = 0x300; // UMM_Common_Btn_Symbol*
	}

	namespace n_AOcclusionVolume { // : AVolume
		constexpr auto bEnabled = 0x250; // char : 1
		constexpr auto bRenderExternal = 0x250; // char : 1
		constexpr auto ForceIncludeActors = 0x258; // TArray<AActor*>
		constexpr auto ForceExcludeActors = 0x268; // TArray<AActor*>
		constexpr auto OcclusionVolumeId = 0x278; // int32_t
	}

	namespace n_USpringArmComponent { // : USceneComponent
		constexpr auto TargetArmLength = 0x220; // float
		constexpr auto SocketOffset = 0x224; // FVector
		constexpr auto TargetOffset = 0x230; // FVector
		constexpr auto ProbeSize = 0x23c; // float
		constexpr auto ProbeChannel = 0x240; // ECollisionChannel
		constexpr auto bDoCollisionTest = 0x244; // char : 1
		constexpr auto bUsePawnControlRotation = 0x244; // char : 1
		constexpr auto bInheritPitch = 0x244; // char : 1
		constexpr auto bInheritYaw = 0x244; // char : 1
		constexpr auto bInheritRoll = 0x244; // char : 1
		constexpr auto bEnableCameraLag = 0x244; // char : 1
		constexpr auto bEnableCameraRotationLag = 0x244; // char : 1
		constexpr auto bUseCameraLagSubstepping = 0x244; // char : 1
		constexpr auto bDrawDebugLagMarkers = 0x245; // char : 1
		constexpr auto CameraLagSpeed = 0x248; // float
		constexpr auto CameraRotationLagSpeed = 0x24c; // float
		constexpr auto CameraLagMaxTimeStep = 0x250; // float
		constexpr auto CameraLagMaxDistance = 0x254; // float
	}

	namespace n_UBTTask_SelfComeBack { // : UBTTaskNode
		constexpr auto Services = 0x58; // TArray<UBTService*>
		constexpr auto bIgnoreRestartSelf = 0x68; // char : 1
	}

	namespace n_UMM_HudUserInfo { // : UWidgetBase
		constexpr auto m_iCombatPointFontBigSize = 0x2f0; // int32_t
		constexpr auto m_iCombatPointFontSmallSize = 0x2f4; // int32_t
		constexpr auto m_pImgPartyLeader = 0x2f8; // UImage*
		constexpr auto m_pTextLevel = 0x300; // UMirTextBlock*
		constexpr auto m_pTextCombatPoint = 0x308; // UMirTextBlock*
		constexpr auto Progressbar_UserHP = 0x310; // UMM_ProgressBar_HP*
		constexpr auto m_pProgressMP = 0x318; // UMirProgressBar*
		constexpr auto Text_MyMP = 0x320; // UMirTextBlock*
		constexpr auto Panel_EndEdgeEffect = 0x328; // UCanvasPanel*
		constexpr auto Image_MPDecoImage = 0x330; // UImage*
		constexpr auto Anim_MPIdle = 0x338; // UWidgetAnimation*
		constexpr auto Anim_MPUse = 0x340; // UWidgetAnimation*
		constexpr auto m_pTextPKMode = 0x348; // UMirTextBlock*
		constexpr auto m_pImg_PKMode_Icon = 0x350; // UMirImage*
		constexpr auto m_pCan_PKMode_Effect = 0x358; // UMirCanvasPanel*
		constexpr auto txtBuffCount = 0x3d0; // UMirTextBlock*
		constexpr auto m_pBtnUserInfo = 0x3d8; // UButton*
		constexpr auto m_pBtnPKMode = 0x3e0; // UButton*
		constexpr auto m_pBuffInfoList = 0x3e8; // UMM_HudTargetBuffInfo*
		constexpr auto m_pBtnBuff = 0x3f0; // UButton*
	}

	namespace n_AMiniGame_PlayerActor { // : AActor
		constexpr auto m_fCurFlipbookLength = 0x218; // float
		constexpr auto m_MiniGameActor = 0x220; // AMiniGame_ManagerActor*
	}

	namespace n_UMM_MoviePlayerWidget { // : UWidgetBase
		constexpr auto m_MediaPlayer = 0x2e0; // UMediaPlayer*
		constexpr auto m_MediaTexture = 0x2e8; // UMediaTexture*
		constexpr auto m_MediaTextureMat = 0x2f0; // UMaterialInterface*
		constexpr auto m_MediaSource = 0x2f8; // UMediaSource*
		constexpr auto m_MediaSoundActor = 0x300; // AMediaSoundActor*
		constexpr auto m_Img_Movie = 0x308; // UMirImage*
		constexpr auto m_OnMovieFinishBlueprintEvent = 0x320; // FScriptMulticastDelegate
	}

	namespace n_UAsyncActionChangePrimaryAssetBundles { // : UAsyncActionLoadPrimaryAssetBase
		constexpr auto Completed = 0x78; // FScriptMulticastDelegate
	}

	namespace n_UMaterialInterface { // : UObject
		constexpr auto SubsurfaceProfile = 0x38; // USubsurfaceProfile*
		constexpr auto LightmassSettings = 0x50; // FLightmassMaterialInterfaceSettings
		constexpr auto TextureStreamingData = 0x60; // TArray<FMaterialTextureInfo>
		constexpr auto AssetUserData = 0x70; // TArray<UAssetUserData*>
	}

	namespace n_UMM_CharacterSelect_Slot { // : UWidgetBase
		constexpr auto Panel_SelectBG = 0x2e0; // UPanelWidget*
		constexpr auto Img_ClassSymbol = 0x2e8; // UMirImage*
		constexpr auto Txt_CharacterLevel = 0x2f0; // UMirTextBlock*
		constexpr auto Txt_CharacterName = 0x2f8; // UMirTextBlock*
		constexpr auto Txt_DeleteTime = 0x300; // UMirTextBlock*
		constexpr auto Btn_SelectSlot = 0x308; // UMirButton*
		constexpr auto Panel_Info = 0x310; // UPanelWidget*
		constexpr auto Panel_Lock = 0x318; // UPanelWidget*
		constexpr auto Panel_Empty = 0x320; // UPanelWidget*
		constexpr auto Panel_Delete = 0x328; // UPanelWidget*
		constexpr auto m_Overlay_NFT = 0x330; // UOverlay*
		constexpr auto m_CharacterUID = 0x338; // uint64_t
		constexpr auto m_SlotIndex = 0x340; // uint32_t
		constexpr auto STRING_TIME_DAYS = 0x344; // int32_t
		constexpr auto STRING_TIME_HOURS = 0x348; // int32_t
		constexpr auto STRING_TIME_MINUTES = 0x34c; // int32_t
		constexpr auto Panel_ServerChange = 0x360; // UPanelWidget*
	}

	namespace n_UMaterialExpressionBlendMaterialAttributes { // : UMaterialExpression
		constexpr auto A = 0x40; // FMaterialAttributesInput
		constexpr auto B = 0x58; // FMaterialAttributesInput
		constexpr auto Alpha = 0x70; // FExpressionInput
		constexpr auto PixelAttributeBlendType = 0x84; // EMaterialAttributeBlend
		constexpr auto VertexAttributeBlendType = 0x85; // EMaterialAttributeBlend
	}

	namespace n_UMM_Popup_Map_GradeInfo { // : UWidgetBase
		constexpr auto STRING_NOTICE_ID = 0x2e0; // int32_t
		constexpr auto m_C_Btn_Close = 0x2e8; // UMM_Common_Btn_Symbol*
		constexpr auto m_RTxt_Notice = 0x2f0; // UMirRichTextBlock*
		constexpr auto m_Btn_Background = 0x2f8; // UMirButton*
	}

	namespace n_UMovieSceneIntegerTrack { // : UMovieScenePropertyTrack
		constexpr auto SectionToKey = 0x58; // UMovieSceneSection*
		constexpr auto PropertyName = 0x60; // FName
		constexpr auto PropertyPath = 0x68; // FString
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_UTextBlockWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto TextBlockStyle = 0x30; // FTextBlockStyle
	}

	namespace n_UParticleModuleLocationWorldOffset_Seeded { // : UParticleModuleLocationWorldOffset
		constexpr auto RandomSeedInfo = 0x80; // FParticleRandomSeedInfo
	}

	namespace n_UFirebaseAppleCredential { // : UBlueprintAsyncActionBase
		constexpr auto OnComplete = 0x30; // FScriptMulticastDelegate
	}

	namespace n_AMM_TestGameMode { // : AMM_GameModeBase
		constexpr auto m_pBackgroundParamCollection = 0x330; // UMaterialParameterCollection*
		constexpr auto m_pFriendMonster = 0x338; // AMM_Monster*
		constexpr auto m_pSelectTarget = 0x340; // AMM_CharacterPawnBase*
		constexpr auto m_pLockOnTarget = 0x348; // AMM_CharacterPawnBase*
		constexpr auto EndLevelTravel = 0x350; // bool
		constexpr auto m_pUIBackGroundActor = 0x400; // AUIBackGroundActor*
		constexpr auto SituationDirectiveActor = 0x408; // AMM_SituationDirectiveEffect*
		constexpr auto MapQuestArrivalDisplayActor = 0x410; // TMap<int32_t, TWeakObjectPtr<AQuestArrivalDisplayActor>>
		constexpr auto m_pHQPlayer = 0x460; // AMM_HQPlayerReferenceActor*
		constexpr auto m_pPortraitCaptureActor = 0x468; // AMM_PortraitCaptureActor*
		constexpr auto m_pPlayerPortraitRenderTarget = 0x470; // UCanvasRenderTarget2D*
		constexpr auto m_pContentsLightManager = 0x478; // AContentsLightManager*
		constexpr auto MyEditorCulture = 0x490; // FString
	}

	namespace n_UPoseableMeshComponent { // : USkinnedMeshComponent
		constexpr auto SkeletalMesh = 0x440; // USkeletalMesh*
		constexpr auto MasterPoseComponent = 0x448; // TWeakObjectPtr<USkinnedMeshComponent>
		constexpr auto PhysicsAssetOverride = 0x548; // UPhysicsAsset*
		constexpr auto ForcedLodModel = 0x550; // int32_t
		constexpr auto MinLodModel = 0x554; // int32_t
		constexpr auto StreamingDistanceMultiplier = 0x560; // float
		constexpr auto LODInfo = 0x570; // TArray<FSkelMeshComponentLODInfo>
		constexpr auto VisibilityBasedAnimTickOption = 0x5a4; // EVisibilityBasedAnimTickOption
		constexpr auto bOverrideMinLOD = 0x5a6; // char : 1
		constexpr auto bUseAutomaticSwitchingCPUSkinning = 0x5a8; // char : 1
		constexpr auto bUseBoundsFromMasterPoseComponent = 0x5ac; // char : 1
		constexpr auto bForceWireframe = 0x5ac; // char : 1
		constexpr auto bDisplayBones = 0x5ac; // char : 1
		constexpr auto bDisableMorphTarget = 0x5ac; // char : 1
		constexpr auto bHideSkin = 0x5ac; // char : 1
		constexpr auto bPerBoneMotionBlur = 0x5ac; // char : 1
		constexpr auto bComponentUseFixedSkelBounds = 0x5ac; // char : 1
		constexpr auto bConsiderAllBodiesForBounds = 0x5ac; // char : 1
		constexpr auto bSyncAttachParentLOD = 0x5ad; // char : 1
		constexpr auto bCanHighlightSelectedSections = 0x5ad; // char : 1
		constexpr auto bRecentlyRendered = 0x5ad; // char : 1
		constexpr auto bCastCapsuleDirectShadow = 0x5ad; // char : 1
		constexpr auto bCastCapsuleIndirectShadow = 0x5ad; // char : 1
		constexpr auto bCPUSkinning = 0x5ad; // char : 1
		constexpr auto bEnableUpdateRateOptimizations = 0x5ad; // char : 1
		constexpr auto bDisplayDebugUpdateRateOptimizations = 0x5ad; // char : 1
		constexpr auto bRenderStatic = 0x5ae; // char : 1
		constexpr auto bIgnoreMasterPoseComponentLOD = 0x5ae; // char : 1
		constexpr auto bCachedLocalBoundsUpToDate = 0x5ae; // char : 1
		constexpr auto bForceMeshObjectUpdate = 0x5ae; // char : 1
		constexpr auto CapsuleIndirectShadowMinVisibility = 0x5b0; // float
		constexpr auto CachedWorldSpaceBounds = 0x5d8; // FBoxSphereBounds
		constexpr auto CachedWorldToLocalTransform = 0x600; // FMatrix
	}

	namespace n_UParticleModuleVectorFieldBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x29; // char : 1
		constexpr auto LODDuplicate = 0x29; // char : 1
		constexpr auto bSupportsRandomSeed = 0x29; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x29; // char : 1
		constexpr auto LODValidity = 0x2a; // char
	}

	namespace n_UIpNetDriver { // : UNetDriver
		constexpr auto LogPortUnreach = 0x708; // char : 1
		constexpr auto AllowPlayerPortUnreach = 0x708; // char : 1
		constexpr auto MaxPortCountToTry = 0x70c; // uint32_t
		constexpr auto ServerDesiredSocketReceiveBufferBytes = 0x71c; // uint32_t
		constexpr auto ServerDesiredSocketSendBufferBytes = 0x720; // uint32_t
		constexpr auto ClientDesiredSocketReceiveBufferBytes = 0x724; // uint32_t
		constexpr auto ClientDesiredSocketSendBufferBytes = 0x728; // uint32_t
		constexpr auto MaxSecondsInReceive = 0x730; // double
		constexpr auto NbPacketsBetweenReceiveTimeTest = 0x738; // int32_t
	}

	namespace n_UMM_PopUp_ItemInfo { // : UWidgetBase
		constexpr auto m_pAnim_Start = 0x300; // UWidgetAnimation*
		constexpr auto m_pAnim_End = 0x308; // UWidgetAnimation*
		constexpr auto PANEL_SIDE = 0x310; // PANEL_SIDE
		constexpr auto m_PanelLeft = 0x318; // UMM_PopUp_ItemInfo_Left*
		constexpr auto m_ItemInfoList = 0x320; // UMM_PopUp_ItemInfo_List*
		constexpr auto m_ItemInfo_ROption = 0x328; // UMM_Popup_RandomOptionList*
		constexpr auto m_ChatTabList = 0x330; // TArray<UMM_Hud_Chat_Tab*>
		constexpr auto m_Panel_ROption = 0x340; // UMirCanvasPanel*
		constexpr auto m_ScrollInfo_ROption = 0x348; // UScrollBox*
		constexpr auto m_SellBtn = 0x350; // UMM_Common_Btn*
		constexpr auto m_EquipBtn = 0x358; // UMM_Common_Btn*
		constexpr auto m_UserLockBtn = 0x360; // UMM_Common_Btn*
		constexpr auto m_CloseBtn = 0x368; // UMM_Common_Btn_Symbol*
		constexpr auto m_NameTxt = 0x370; // UMirTextBlock*
		constexpr auto m_SmeltingLv = 0x378; // UMirTextBlock*
		constexpr auto m_GridTier = 0x380; // UPanelWidget*
		constexpr auto m_GridGrade = 0x388; // UPanelWidget*
		constexpr auto m_TierImage = 0x390; // UMirImage*
		constexpr auto m_Grade = 0x398; // UMirTextBlock*
		constexpr auto m_Grid_UnTrade = 0x3a0; // UPanelWidget*
		constexpr auto m_pTxtTrade = 0x3a8; // UMirTextBlock*
		constexpr auto m_Grid_XDraco = 0x3b0; // UPanelWidget*
		constexpr auto m_pTxtXDraco = 0x3b8; // UMirTextBlock*
		constexpr auto STRID_Warnning = 0x3c0; // int32_t
		constexpr auto STRID_BtnCancel = 0x3c4; // int32_t
		constexpr auto STRID_BtnSell = 0x3c8; // int32_t
		constexpr auto STRID_TransferItemSaleWarring = 0x3cc; // int32_t
		constexpr auto STRID_MATERIAL_POPUP = 0x3d0; // int32_t
		constexpr auto STRID_UIMAKEITEM = 0x3d4; // int32_t
		constexpr auto STRID_GO_NPC = 0x3d8; // int32_t
		constexpr auto STRID_GO_UISHOP = 0x3dc; // int32_t
		constexpr auto STRID_CONTENTSNOTOPEN = 0x3e0; // int32_t
		constexpr auto STRID_MSG_UNTRADABLE = 0x3e4; // int32_t
	}

	namespace n_UPaperTileMapComponent { // : UMeshComponent
		constexpr auto MapWidth = 0x440; // int32_t
		constexpr auto MapHeight = 0x444; // int32_t
		constexpr auto TileWidth = 0x448; // int32_t
		constexpr auto TileHeight = 0x44c; // int32_t
		constexpr auto DefaultLayerTileSet = 0x450; // UPaperTileSet*
		constexpr auto Material = 0x458; // UMaterialInterface*
		constexpr auto TileLayers = 0x460; // TArray<UPaperTileLayer*>
		constexpr auto TileMapColor = 0x470; // FLinearColor
		constexpr auto UseSingleLayerIndex = 0x480; // int32_t
		constexpr auto bUseSingleLayer = 0x484; // bool
		constexpr auto TileMap = 0x488; // UPaperTileMap*
	}

	namespace n_UDebugLogPanel { // : UWidgetBase
		constexpr auto FixedList = 0x360; // UScrollBox*
		constexpr auto ScrollList = 0x368; // UScrollBox*
	}

	namespace n_UMaterialExpressionMaterialFunctionCall { // : UMaterialExpression
		constexpr auto MaterialFunction = 0x40; // UMaterialFunctionInterface*
		constexpr auto FunctionParameterInfo = 0x48; // FMaterialParameterInfo
	}

	namespace n_UDrawFrustumComponent { // : UPrimitiveComponent
		constexpr auto FrustumColor = 0x418; // FColor
		constexpr auto FrustumAngle = 0x41c; // float
		constexpr auto FrustumAspectRatio = 0x420; // float
		constexpr auto FrustumStartDist = 0x424; // float
		constexpr auto FrustumEndDist = 0x428; // float
		constexpr auto Texture = 0x430; // UTexture*
	}

	namespace n_UCustomizingComponentBase { // : UWidgetBase
		constexpr auto m_Txt_Title = 0x2e0; // UMirTextBlock*
	}

	namespace n_AImmediatelyKillTrigger { // : AActor
		constexpr auto m_BoxExtent = 0x218; // FVector
		constexpr auto m_BoxColor = 0x224; // FColor
	}

	namespace n_UMM_Popup_Chat_Setting { // : UWidgetBase
		constexpr auto Btn_BlockUser = 0x2e0; // UMM_Common_Btn*
		constexpr auto Btn_BlockList = 0x2e8; // UMM_Common_Btn*
		constexpr auto Btn_RenderOpacity = 0x2f0; // UMM_Common_Btn*
		constexpr auto btn_close = 0x2f8; // UMM_Common_Btn_Symbol*
		constexpr auto Toggle_HideSystemChannel = 0x300; // UMirCheckBox*
		constexpr auto Toggle_HideGuildSystemMessage = 0x308; // UMirCheckBox*
	}

	namespace n_UMM_UIShopGoodsScrollBox { // : UWidgetBase
		constexpr auto mGoodSlot1 = 0x2e8; // UMM_UIShopGoodsSlot*
		constexpr auto mGoodSlot2 = 0x2f0; // UMM_UIShopGoodsSlot*
	}

	namespace n_UNormalPopupWidget { // : UWidgetBase
		constexpr auto OneButton_Visibility = 0x2f8; // ESlateVisibility
		constexpr auto TwoButton_Visibility = 0x310; // ESlateVisibility
		constexpr auto ThreeButton_Visibility = 0x338; // ESlateVisibility
	}

	namespace n_UEnvQueryGenerator_Composite { // : UEnvQueryGenerator
		constexpr auto Generators = 0x50; // TArray<UEnvQueryGenerator*>
		constexpr auto bAllowDifferentItemTypes = 0x60; // char : 1
		constexpr auto bHasMatchingItemType = 0x60; // char : 1
		constexpr auto ForcedItemType = 0x68; // UEnvQueryItemType*
	}

	namespace n_UHapticFeedbackEffect_Buffer { // : UHapticFeedbackEffect_Base
		constexpr auto amplitudes = 0x28; // TArray<char>
		constexpr auto SampleRate = 0x38; // int32_t
	}

	namespace n_UMM_Hud_PKPenalty { // : UWidgetBase
		constexpr auto Panel_Effect = 0x2f0; // UPanelWidget*
		constexpr auto Img_PenaltyIcon = 0x2f8; // UMirImage*
		constexpr auto Btn_Penalty = 0x300; // UMirButton*
		constexpr auto PopupDeathPenalty = 0x308; // UMM_Popup_DeathPenalty*
	}

	namespace n_UIAPInternalStoreModule { // : UIAPStoreModuleBase
		constexpr auto m_UserRequestProductData = 0x58; // FIAPUserRequestData
		constexpr auto m_PurchaseProductData = 0x98; // FIAPProductData
		constexpr auto m_PurchaseInProgress = 0x138; // TArray<EIAPPurchaseState>
		constexpr auto ProcessedTransactionIDs = 0x148; // TArray<FString>
		constexpr auto ProcessedTransactionReceipts = 0x158; // TArray<FString>
		constexpr auto DelayHideBlockScreenTimeHandle = 0x168; // FTimerHandle
		constexpr auto m_MarketProductDataMap = 0x170; // TMap<FString, FIAPMarketProductData>
	}

	namespace n_AMM_CharacterCustomizingActor { // : AActor
		constexpr auto m_pFaceControlMesh = 0x228; // UPoseableMeshComponent*
		constexpr auto m_pFaceAreaMarkMID = 0x230; // UMaterialInstanceDynamic*
		constexpr auto m_pMainFaceMesh = 0x2f8; // USkeletalMeshComponent*
		constexpr auto m_pCopyFaceMesh = 0x300; // UPoseableMeshComponent*
		constexpr auto m_pPartsComponent = 0x318; // UMM_CharacterPartsComponent*
		constexpr auto m_mapCustomizingMeshParts = 0x320; // TMap<int32_t, USkeletalMeshComponent*>
		constexpr auto m_pPoseableFaceMesh = 0x370; // UPoseableMeshComponent*
		constexpr auto m_mapCharacterMID = 0x378; // TMap<int32_t, FCharacterPartsMID>
	}

	namespace n_UPlatformMediaSource { // : UMediaSource
		constexpr auto MediaSource = 0x80; // UMediaSource*
	}

	namespace n_UMM_TutorialStart { // : UWidgetBase
		constexpr auto m_pTitleText = 0x2e0; // UMirTextBlock*
		constexpr auto m_pSkipButton = 0x2e8; // UMM_Common_Btn*
		constexpr auto m_pConfirmButton = 0x2f0; // UMM_Common_Btn*
	}

	namespace n_UMaterialExpressionPreSkinnedLocalBounds { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UMM_Popup_LoginQueue { // : UWidgetBase
		constexpr auto m_RTxt_Msg = 0x2e0; // UMirRichTextBlock*
		constexpr auto m_CB_Cancel = 0x2e8; // UMM_Common_Btn*
	}

	namespace n_UPoseAsset { // : UAnimationAsset
		constexpr auto PoseContainer = 0x80; // FPoseDataContainer
		constexpr auto bAdditivePose = 0x110; // bool
		constexpr auto BasePoseIndex = 0x114; // int32_t
		constexpr auto RetargetSource = 0x118; // FName
	}

	namespace n_UMM_PopupExpBoosterSlot { // : UWidgetBase
		constexpr auto img_status = 0x2e0; // UMirImage*
		constexpr auto Txt_Name = 0x2e8; // UMirTextBlock*
		constexpr auto Txt_Desc = 0x2f0; // UMirTextBlock*
		constexpr auto Txt_Value = 0x2f8; // UMirRichTextBlock*
		constexpr auto Img_Lock = 0x300; // UMirImage*
	}

	namespace n_AMyDrawDebug { // : AActor
		constexpr auto m_BlockingVolumeArray = 0x218; // TArray<ABlockingVolume*>
		constexpr auto m_BoxColor = 0x228; // FColor
		constexpr auto m_BoxBoardColor = 0x22c; // FColor
	}

	namespace n_ALevelSequenceSubtitle { // : AActor
		constexpr auto m_FadeValue = 0x218; // float
		constexpr auto m_StringID = 0x220; // FString
		constexpr auto m_pSoundCue = 0x240; // USoundCue*
		constexpr auto m_WidgetName = 0x250; // FString
	}

	namespace n_UMM_DoorAnimInstance { // : UAnimInstance
		constexpr auto m_bDoorOpen = 0x268; // bool
		constexpr auto m_bImmediately = 0x269; // bool
	}

	namespace n_UMM_TotalMenu_SlotBase { // : UWidgetBase
		constexpr auto m_pParentWidget = 0x260; // UWidgetBase*
		constexpr auto m_arChildWidget = 0x268; // TArray<TWeakObjectPtr<UWidgetBase>>
		constexpr auto m_arMirTextBlock = 0x280; // TArray<TWeakObjectPtr<UMirTextBlock>>
		constexpr auto m_arMirRichTextBlock = 0x290; // TArray<TWeakObjectPtr<UMirRichTextBlock>>
		constexpr auto m_arMirEditableText = 0x2a0; // TArray<TWeakObjectPtr<UMirEditableText>>
		constexpr auto m_arMirImage = 0x2b0; // TArray<TWeakObjectPtr<UMirImage>>
	}

	namespace n_UMM_Popup_ServerVisitRelocation { // : UWidgetBase
		constexpr auto m_Btn_Close = 0x2f0; // UMM_Common_Btn_Symbol*
		constexpr auto m_Btn_ServerSelect = 0x2f8; // UMirButton*
		constexpr auto m_Txt_CurrentServer = 0x300; // UMirTextBlock*
		constexpr auto m_Txt_ChangeServer = 0x308; // UMirTextBlock*
		constexpr auto m_Txt_RemainVisitCount = 0x310; // UMirRichTextBlock*
		constexpr auto m_Txt_ConditionCount = 0x318; // UMirTextBlock*
		constexpr auto m_Scroll_ConditionList = 0x320; // UMirScrollBox*
		constexpr auto m_Btn_VisitStart = 0x328; // UMM_Common_Btn_Cost*
		constexpr auto m_Txt_Notice = 0x330; // UMirRichTextBlock*
		constexpr auto m_Txt_Notice2 = 0x338; // UMirRichTextBlock*
		constexpr auto m_Txt_ConditionNotice = 0x340; // UMirRichTextBlock*
		constexpr auto m_canvas_Deco = 0x348; // UMirCanvasPanel*
		constexpr auto m_canvas_RemainTime = 0x350; // UMirCanvasPanel*
		constexpr auto m_Txt_RemainTime = 0x358; // UMirTextBlock*
	}

	namespace n_UMM_Mastery_Slot { // : UWidgetBase
		constexpr auto mImgSelected = 0x300; // UMirImage*
		constexpr auto mImgLimited = 0x308; // UMirImage*
		constexpr auto mImgIcon = 0x310; // UMirImage*
		constexpr auto mTxtLevel = 0x318; // UMirTextBlock*
		constexpr auto mImgIndicator = 0x320; // UMirImage*
		constexpr auto mBtnMain = 0x328; // UMirButton*
		constexpr auto mGridEffect = 0x330; // UPanelWidget*
		constexpr auto mAuiGuide = 0x338; // UWidgetAnimation*
	}

	namespace n_UMM_Occupation_Observer_KillLog { // : UWidgetBase
		constexpr auto m_PanelMain = 0x2f0; // UPanelWidget*
		constexpr auto KillLogList = 0x2f8; // TArray<UMM_Occupation_Observer_KillLog_Slot*>
		constexpr auto m_InitAsyncLoad = 0x308; // bool
		constexpr auto m_AddMessageLatency = 0x30c; // float
		constexpr auto CampType = 0x310; // KillLogCampType
	}

	namespace n_UBoolBinding { // : UPropertyBinding
		constexpr auto SourceObject = 0x28; // TWeakObjectPtr<UObject>
		constexpr auto SourcePath = 0x30; // FDynamicPropertyPath
		constexpr auto DestinationProperty = 0x58; // FName
	}

	namespace n_UMM_QuestBaseMsg { // : UWidgetBase
		constexpr auto m_Txt_Message = 0x2e0; // UMirRichTextBlock*
		constexpr auto m_RARE_QUEST_ICON = 0x2e8; // int32_t
		constexpr auto m_HERO_QUEST_ICON = 0x2ec; // int32_t
		constexpr auto m_LEGEND_QUEST_ICON = 0x2f0; // int32_t
		constexpr auto m_OpenAni = 0x300; // UWidgetAnimation*
		constexpr auto m_CloseAni = 0x308; // UWidgetAnimation*
	}

	namespace n_UMovementComponent { // : UActorComponent
		constexpr auto UpdatedComponent = 0xb0; // USceneComponent*
		constexpr auto UpdatedPrimitive = 0xb8; // UPrimitiveComponent*
		constexpr auto Velocity = 0xc4; // FVector
		constexpr auto PlaneConstraintNormal = 0xd0; // FVector
		constexpr auto PlaneConstraintOrigin = 0xdc; // FVector
		constexpr auto bUpdateOnlyIfRendered = 0xe8; // char : 1
		constexpr auto bAutoUpdateTickRegistration = 0xe8; // char : 1
		constexpr auto bTickBeforeOwner = 0xe8; // char : 1
		constexpr auto bAutoRegisterUpdatedComponent = 0xe8; // char : 1
		constexpr auto bConstrainToPlane = 0xe8; // char : 1
		constexpr auto bSnapToPlaneAtStart = 0xe8; // char : 1
		constexpr auto bAutoRegisterPhysicsVolumeUpdates = 0xe8; // char : 1
		constexpr auto bComponentShouldUpdatePhysicsVolume = 0xe8; // char : 1
		constexpr auto PlaneConstraintAxisSetting = 0xeb; // EPlaneConstraintAxisSetting
	}

	namespace n_UParticleModuleTypeDataBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x29; // char : 1
		constexpr auto LODDuplicate = 0x29; // char : 1
		constexpr auto bSupportsRandomSeed = 0x29; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x29; // char : 1
		constexpr auto LODValidity = 0x2a; // char
	}

	namespace n_UMM_B_Party_Invite { // : UWidgetBase
		constexpr auto m_AniStart = 0x2f0; // UWidgetAnimation*
		constexpr auto m_AniEnd = 0x2f8; // UWidgetAnimation*
		constexpr auto m_C_Btn_Close = 0x300; // UMM_Common_Btn_Symbol*
		constexpr auto m_C_Vrt_Tab = 0x308; // UMM_CommonVerticalTabSet*
		constexpr auto m_ListView_InviteList = 0x310; // UMirListView*
		constexpr auto m_ListView_MemberList = 0x318; // UMirListView*
		constexpr auto m_Txt_PartyInfo = 0x320; // UMirTextBlock*
		constexpr auto m_Grid_Empty = 0x328; // UPanelWidget*
		constexpr auto m_Editable_NickName = 0x330; // UMirEditableText*
		constexpr auto m_C_Btn_FindUser = 0x338; // UMM_Common_Btn_Symbol*
		constexpr auto m_Can_Notice = 0x340; // UMirCanvasPanel*
		constexpr auto m_HrzBox_Page = 0x348; // UHorizontalBox*
		constexpr auto m_C_Btn_Prev = 0x350; // UMM_Common_Btn_Symbol*
		constexpr auto m_C_Btn_Next = 0x358; // UMM_Common_Btn_Symbol*
		constexpr auto m_Txt_PageNum = 0x360; // UMirTextBlock*
		constexpr auto m_C_Btn_AllInvite = 0x368; // UMM_Common_Btn*
		constexpr auto m_Ani_Start = 0x370; // UWidgetAnimation*
		constexpr auto m_Ani_End = 0x378; // UWidgetAnimation*
		constexpr auto m_arInviteSlotObj = 0x390; // TArray<UPartyInviteListSlotObj*>
		constexpr auto m_arMemberSlotObj = 0x3a0; // TArray<UPartyInviteMemberSlotObj*>
	}

	namespace n_UMM_Customizing_CreatePopup { // : UWidgetBase
		constexpr auto m_pRandomButton = 0x2e0; // UButton*
		constexpr auto m_pCancelButton = 0x2e8; // UMM_Common_Btn*
		constexpr auto m_pDecisionButton = 0x2f0; // UMM_Common_Btn*
		constexpr auto m_pNameEditableText = 0x2f8; // UMirEditableText*
	}

	namespace n_UMaterialExpressionLinearInterpolate { // : UMaterialExpression
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto Alpha = 0x68; // FExpressionInput
		constexpr auto ConstA = 0x7c; // float
		constexpr auto ConstB = 0x80; // float
		constexpr auto ConstAlpha = 0x84; // float
	}

	namespace n_AMM_ObjectBase { // : AMM_EntityBase
		constexpr auto m_bPoolingObject = 0x428; // bool
		constexpr auto ObjectNameTagWidget = 0x458; // UObjectNameTagWidget*
		constexpr auto WidgetComp = 0x460; // UWidgetComponent*
		constexpr auto NameTagWidgetComponent = 0x468; // UWidgetComponent*
		constexpr auto InteractionWidgetComponent = 0x470; // UWidgetComponent*
		constexpr auto LoopEffectComponent = 0x480; // UParticleSystemComponent*
		constexpr auto m_LoopParticleSystem = 0x488; // UParticleSystem*
		constexpr auto OperatingBtnWidget = 0x4c8; // UOperatingButtonWidget*
	}

	namespace n_UMM_Map_Rader { // : UWidgetBase
		constexpr auto m_fRotateSpeed = 0x2e0; // float
		constexpr auto m_TxtMapName = 0x2f0; // UTextBlock*
		constexpr auto m_TxtChannel = 0x2f8; // UTextBlock*
		constexpr auto m_TxtAreaInfo = 0x300; // UTextBlock*
		constexpr auto m_GridMapDetail = 0x308; // UPanelWidget*
		constexpr auto m_GridMapDetailRotate = 0x310; // UPanelWidget*
		constexpr auto m_MapDetail = 0x318; // UMM_Map_Detail*
		constexpr auto m_BtnMapDetail = 0x320; // UButton*
	}

	namespace n_UMM_Slot_Ranking_List { // : UWidgetBase
		constexpr auto m_SelectBtn = 0x2e0; // UMirButton*
		constexpr auto m_MyBGImg = 0x2e8; // UMirImage*
		constexpr auto m_UserSelectBGImg = 0x2f0; // UMirImage*
		constexpr auto m_MyRankingImg = 0x2f8; // UMirImage*
		constexpr auto m_RankIconImg = 0x300; // UMirImage*
		constexpr auto m_ProfileImg = 0x308; // UMirImage*
		constexpr auto m_NameTxt = 0x310; // UMirTextBlock*
		constexpr auto m_GuildFrameImg = 0x318; // UMirImage*
		constexpr auto m_GuildIconImg = 0x320; // UMirImage*
		constexpr auto m_GuildNameTxt = 0x328; // UMirTextBlock*
		constexpr auto m_ClassIconImg = 0x330; // UMirImage*
		constexpr auto m_BattlePointTxt = 0x338; // UMirTextBlock*
		constexpr auto m_BattlePointTxt_NoIcon = 0x340; // UMirTextBlock*
		constexpr auto m_RankCountTxt = 0x348; // UMirTextBlock*
		constexpr auto m_NoGuildTxt = 0x350; // UMirTextBlock*
		constexpr auto m_ProfileImgGuild = 0x368; // UMirImage*
		constexpr auto m_NameTxtGuild = 0x370; // UMirTextBlock*
		constexpr auto m_GuildFrameImgGuild = 0x378; // UMirImage*
		constexpr auto m_GuildIconImgGuild = 0x380; // UMirImage*
		constexpr auto m_GuildNameTxtGuild = 0x388; // UMirTextBlock*
		constexpr auto m_LineImg_2 = 0x390; // UMirImage*
		constexpr auto m_LineImg_3 = 0x398; // UMirImage*
		constexpr auto m_LineImg_4 = 0x3a0; // UMirImage*
	}

	namespace n_ANpcShowTrigger { // : AActivateTrigger
		constexpr auto m_NpcShowID = 0x278; // int32_t
		constexpr auto m_pNpc = 0x280; // AMM_NPC*
	}

	namespace n_UCapsuleComponent { // : UShapeComponent
		constexpr auto CapsuleHalfHeight = 0x430; // float
		constexpr auto CapsuleRadius = 0x434; // float
	}

	namespace n_UTexture2DDynamic { // : UTexture
		constexpr auto Format = 0xd8; // EPixelFormat
	}

	namespace n_ABandwidthTestActor { // : AActor
		constexpr auto BandwidthGenerator = 0x218; // FBandwidthTestGenerator
	}

	namespace n_UMM_ServerRelocation_ServerList { // : UWidgetBase
		constexpr auto m_Canvas_Current = 0x2e0; // UMirCanvasPanel*
		constexpr auto m_Txt_ServerName = 0x2e8; // UMirTextBlock*
		constexpr auto m_Txt_ServerNotice = 0x2f0; // UMirRichTextBlock*
		constexpr auto m_Txt_ServerCharacterCount = 0x2f8; // UMirTextBlock*
		constexpr auto m_Btn_Select = 0x300; // UMirButton*
	}

	namespace n_UMM_HudGetItemMsg_Slot { // : UWidgetBase
		constexpr auto m_fShowTime = 0x2e0; // float
		constexpr auto m_AniStart_Normal = 0x2e8; // UWidgetAnimation*
		constexpr auto m_AniStart_Blue = 0x2f0; // UWidgetAnimation*
		constexpr auto m_AniStart_Purple = 0x2f8; // UWidgetAnimation*
		constexpr auto m_AniStart_Yellow = 0x300; // UWidgetAnimation*
		constexpr auto m_AniStart_Red = 0x308; // UWidgetAnimation*
		constexpr auto m_AniEnd = 0x310; // UWidgetAnimation*
		constexpr auto m_ItemSlot = 0x328; // UMM_Slot_Material*
		constexpr auto m_Txt_ItemName = 0x330; // UTextBlock*
	}

	namespace n_UMM_GuildMemberSlotByGrade { // : UWidgetBase
		constexpr auto img_grade_icon = 0x2e0; // UMirImage*
		constexpr auto txt_grade_name = 0x2e8; // UMirTextBlock*
		constexpr auto txt_member_count = 0x2f0; // UMirTextBlock*
		constexpr auto cb_fold = 0x2f8; // UMirCheckBox*
		constexpr auto vb_member = 0x300; // UVerticalBox*
		constexpr auto btn_fold = 0x308; // UMirButton*
	}

	namespace n_UGameplayTask_ClaimResource { // : UGameplayTask
		constexpr auto InstanceName = 0x30; // FName
		constexpr auto ResourceOverlapPolicy = 0x3a; // ETaskResourceOverlapPolicy
		constexpr auto ChildTask = 0x60; // UGameplayTask*
	}

	namespace n_UMM_CommonVerticalTabBtn { // : UWidgetBase
		constexpr auto m_Txt_TabName = 0x2f8; // UMirTextBlock*
		constexpr auto m_Img_Locked = 0x300; // UMirImage*
		constexpr auto m_Img_Indicator = 0x308; // UMirImage*
		constexpr auto m_Txt_Indicator = 0x310; // UMirTextBlock*
		constexpr auto m_Img_Selected = 0x318; // UMirImage*
		constexpr auto m_Btn_Main = 0x320; // UMirButton*
		constexpr auto m_Grid_Effect_1 = 0x328; // UPanelWidget*
		constexpr auto m_Grid_Effect_2 = 0x330; // UPanelWidget*
		constexpr auto STR_MSGID_SELECTEDEMPTY = 0x338; // int32_t
	}

	namespace n_UParticleModuleKillBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x29; // char : 1
		constexpr auto LODDuplicate = 0x29; // char : 1
		constexpr auto bSupportsRandomSeed = 0x29; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x29; // char : 1
		constexpr auto LODValidity = 0x2a; // char
	}

	namespace n_UAITask_MoveTo { // : UAITask
		constexpr auto OnRequestFailed = 0x70; // FScriptMulticastDelegate
		constexpr auto OnMoveFinished = 0x80; // FScriptMulticastDelegate
		constexpr auto MoveRequest = 0x90; // FAIMoveRequest
	}

	namespace n_UInterpTrackInstBoolProp { // : UInterpTrackInstProperty
		constexpr auto BoolProperty = 0x40; // UBoolProperty*
		constexpr auto ResetBool = 0x48; // bool
	}

	namespace n_UMorphTarget { // : UObject
		constexpr auto BaseSkelMesh = 0x28; // USkeletalMesh*
	}

	namespace n_UMM_Popup_Material_Change { // : UWidgetBase
		constexpr auto Mat_Target_2 = 0x300; // UMM_Slot_Material*
		constexpr auto Mat_Target_3 = 0x308; // UMM_Slot_Material*
		constexpr auto RTxt_Target_Desc = 0x310; // URichTextBox*
		constexpr auto ScrollBox = 0x318; // UMirScrollBox*
		constexpr auto Mat_ListTarget_2 = 0x320; // UMM_Slot_Material*
		constexpr auto Mat_List = 0x328; // TArray<UMM_Slot_Material*>
		constexpr auto btn_close = 0x338; // UMM_Common_Btn_Symbol*
		constexpr auto m_Btn_Ok = 0x340; // UMM_Common_Btn*
		constexpr auto m_Btn_Cancel = 0x348; // UMM_Common_Btn*
		constexpr auto m_Txt_Empty = 0x350; // UMirTextBlock*
		constexpr auto MaterialCount = 0x358; // int32_t
		constexpr auto m_MaxSlotCount = 0x35c; // int32_t
		constexpr auto m_CurrentSlotCount = 0x360; // int32_t
		constexpr auto m_MaterialSlotIndex = 0x364; // int32_t
		constexpr auto m_SelectSlotUID = 0x368; // uint64_t
		constexpr auto m_CheckedSlotUID = 0x370; // uint64_t
		constexpr auto m_SelectSlotTID = 0x378; // uint64_t
		constexpr auto NoMaterail = 0x380; // bool
		constexpr auto STR_MSG_DESC = 0x384; // int32_t
		constexpr auto STR_MSG_DESC2 = 0x388; // int32_t
		constexpr auto STR_MSG_TIER2OVER_DESC = 0x38c; // int32_t
		constexpr auto STR_MSG_TIER2OVER_DESC2 = 0x390; // int32_t
	}

	namespace n_UMM_BossContribution { // : UWidgetBase
		constexpr auto btnClose = 0x2f0; // UMM_Common_Btn_Symbol*
		constexpr auto m_StartAni = 0x2f8; // UWidgetAnimation*
		constexpr auto m_EndAni = 0x300; // UWidgetAnimation*
		constexpr auto TxtTitle = 0x308; // UMirTextBlock*
	}

	namespace n_UMM_CharacterPartsAnimInstance { // : UMM_AnimInstance
		constexpr auto FSMType = 0x268; // EFSM_TYPE
		constexpr auto SubState = 0x26c; // int32_t
	}

	namespace n_URecastFilter_UseDefaultArea { // : UNavigationQueryFilter
		constexpr auto Areas = 0x28; // TArray<FNavigationFilterArea>
		constexpr auto IncludeFlags = 0x38; // FNavigationFilterFlags
		constexpr auto ExcludeFlags = 0x3c; // FNavigationFilterFlags
	}

	namespace n_UMM_PopUp_Quest_Delivery { // : UWidgetBase
		constexpr auto m_CloseBtn = 0x2e0; // UMM_Common_Btn_Symbol*
		constexpr auto m_OkBtn = 0x2e8; // UMM_Common_Btn*
		constexpr auto m_PopupTitle = 0x2f0; // UMirTextBlock*
		constexpr auto m_QuestInfo = 0x2f8; // UMM_Slot_Quest_Info*
		constexpr auto m_OpenAni = 0x300; // UWidgetAnimation*
		constexpr auto m_CloseAni = 0x308; // UWidgetAnimation*
		constexpr auto m_DeliveryToStr = 0x310; // int32_t
		constexpr auto m_DoingDeliveryToStr = 0x314; // int32_t
		constexpr auto m_TitleWithCountToStr = 0x318; // int32_t
		constexpr auto m_CompleteToStr = 0x31c; // int32_t
		constexpr auto m_NotEnoughToStr = 0x320; // int32_t
	}

	namespace n_UWidgetAnimationPlayCallbackProxy { // : UObject
		constexpr auto Finished = 0x28; // FScriptMulticastDelegate
	}

	namespace n_AMM_TriggerManager { // : AActor
		constexpr auto m_bTest = 0x218; // bool
		constexpr auto m_TestTableName = 0x220; // FString
		constexpr auto m_pTriggerTable = 0x230; // UDataTable*
	}

	namespace n_USceneCaptureComponentCube { // : USceneCaptureComponent
		constexpr auto TextureTarget = 0x2d0; // UTextureRenderTargetCube*
		constexpr auto bCaptureRotation = 0x2d8; // bool
		constexpr auto TextureTargetLeft = 0x2e0; // UTextureRenderTargetCube*
		constexpr auto TextureTargetRight = 0x2e8; // UTextureRenderTargetCube*
		constexpr auto TextureTargetODS = 0x2f0; // UTextureRenderTarget2D*
		constexpr auto IPD = 0x2f8; // float
	}

	namespace n_ADefaultPawn { // : APawn
		constexpr auto BaseTurnRate = 0x278; // float
		constexpr auto BaseLookUpRate = 0x27c; // float
		constexpr auto MovementComponent = 0x280; // UPawnMovementComponent*
		constexpr auto CollisionComponent = 0x288; // USphereComponent*
		constexpr auto MeshComponent = 0x290; // UStaticMeshComponent*
		constexpr auto bAddDefaultMovementBindings = 0x298; // char : 1
	}

	namespace n_UMM_Popup_GuildBoard { // : UWidgetBase
		constexpr auto m_WebBrowser = 0x2e0; // UMirWebBrowser*
		constexpr auto m_Btn_Close = 0x2e8; // UMirButton*
	}

	namespace n_UBTDecorator_Blackboard { // : UBTDecorator_BlackboardBase
		constexpr auto IntValue = 0x90; // int32_t
		constexpr auto FloatValue = 0x94; // float
		constexpr auto StringValue = 0x98; // FString
		constexpr auto CachedDescription = 0xa8; // FString
		constexpr auto OperationType = 0xb8; // char
		constexpr auto NotifyObserver = 0xb9; // EBTBlackboardRestart
	}

	namespace n_ALandscapeGizmoActiveActor { // : ALandscapeGizmoActor
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto bHidden = 0x58; // char : 1
		constexpr auto bNetTemporary = 0x58; // char : 1
		constexpr auto bNetStartup = 0x58; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x58; // char : 1
		constexpr auto bAlwaysRelevant = 0x58; // char : 1
		constexpr auto bReplicateMovement = 0x58; // char : 1
		constexpr auto bTearOff = 0x58; // char : 1
		constexpr auto bExchangedRoles = 0x58; // char : 1
		constexpr auto bNetLoadOnClient = 0x59; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x59; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x59; // char : 1
		constexpr auto bRelevantForLevelBounds = 0x59; // char : 1
		constexpr auto bReplayRewindable = 0x59; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x59; // char : 1
		constexpr auto bAutoDestroyWhenFinished = 0x59; // char : 1
		constexpr auto bBlockInput = 0x59; // char : 1
		constexpr auto bCanBeDamaged = 0x5a; // char : 1
		constexpr auto bCollideWhenPlacing = 0x5a; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x5a; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x5a; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x5a; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x5a; // char : 1
		constexpr auto bIsEditorOnlyActor = 0x5a; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x5a; // char : 1
		constexpr auto bReplicates = 0x5b; // char : 1
		constexpr auto bCanBeInCluster = 0x5b; // char : 1
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x5b; // char : 1
		constexpr auto bActorEnableCollision = 0x5c; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x5c; // char : 1
		constexpr auto UpdateOverlapsMethodDuringLevelStreaming = 0x5d; // EActorUpdateOverlapsMethod
		constexpr auto DefaultUpdateOverlapsMethodDuringLevelStreaming = 0x5e; // EActorUpdateOverlapsMethod
		constexpr auto RemoteRole = 0x5f; // ENetRole
		constexpr auto ReplicatedMovement = 0x60; // FRepMovement
		constexpr auto InitialLifeSpan = 0x94; // float
		constexpr auto CustomTimeDilation = 0x98; // float
		constexpr auto AttachmentReplication = 0xa0; // FRepAttachment
		constexpr auto Owner = 0xe0; // AActor*
		constexpr auto NetDriverName = 0xe8; // FName
		constexpr auto Role = 0xf0; // ENetRole
		constexpr auto NetDormancy = 0xf1; // ENetDormancy
		constexpr auto SpawnCollisionHandlingMethod = 0xf2; // ESpawnActorCollisionHandlingMethod
		constexpr auto AutoReceiveInput = 0xf3; // EAutoReceiveInput
		constexpr auto InputPriority = 0xf4; // int32_t
		constexpr auto InputComponent = 0xf8; // UInputComponent*
		constexpr auto NetCullDistanceSquared = 0x100; // float
		constexpr auto NetTag = 0x104; // int32_t
		constexpr auto NetUpdateFrequency = 0x108; // float
		constexpr auto MinNetUpdateFrequency = 0x10c; // float
		constexpr auto NetPriority = 0x110; // float
		constexpr auto Instigator = 0x118; // APawn*
		constexpr auto Children = 0x120; // TArray<AActor*>
		constexpr auto RootComponent = 0x130; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x138; // TArray<AMatineeActor*>
		constexpr auto Layers = 0x150; // TArray<FName>
		constexpr auto ParentComponent = 0x160; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto Tags = 0x168; // TArray<FName>
		constexpr auto OnTakeAnyDamage = 0x178; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x179; // FScriptMulticastDelegate
		constexpr auto OnTakeRadialDamage = 0x17a; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x17b; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x17c; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x17d; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x17e; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x17f; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x180; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x181; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x182; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x183; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x184; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x185; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x186; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x187; // FScriptMulticastDelegate
		constexpr auto InstanceComponents = 0x1e8; // TArray<UActorComponent*>
		constexpr auto BlueprintCreatedComponents = 0x1f8; // TArray<UActorComponent*>
	}

	namespace n_UMovieSceneColorSection { // : UMovieSceneSection
		constexpr auto RedCurve = 0xe0; // FMovieSceneFloatChannel
		constexpr auto GreenCurve = 0x180; // FMovieSceneFloatChannel
		constexpr auto BlueCurve = 0x220; // FMovieSceneFloatChannel
		constexpr auto AlphaCurve = 0x2c0; // FMovieSceneFloatChannel
	}

	namespace n_UMovieSceneSkeletalAnimationSection { // : UMovieSceneSection
		constexpr auto Params = 0xe0; // FMovieSceneSkeletalAnimationParams
		constexpr auto AnimSequence = 0x1b8; // UAnimSequence*
		constexpr auto Animation = 0x1c0; // UAnimSequenceBase*
		constexpr auto StartOffset = 0x1c8; // float
		constexpr auto EndOffset = 0x1cc; // float
		constexpr auto PlayRate = 0x1d0; // float
		constexpr auto bReverse = 0x1d4; // char : 1
		constexpr auto SlotName = 0x1d8; // FName
	}

	namespace n_UOverrideDirectionalLight { // : UObject
		constexpr auto Rotation = 0x28; // FRotator
		constexpr auto Intensity = 0x34; // float
		constexpr auto LightColor = 0x38; // FColor
		constexpr auto ShadowBias = 0x3c; // float
		constexpr auto DynamicShadowDistanceMovableLight = 0x40; // float
		constexpr auto DynamicShadowDistanceStationaryLight = 0x44; // float
	}

	namespace n_UBodySetup { // : UObject
		constexpr auto AggGeom = 0x28; // FKAggregateGeom
		constexpr auto BoneName = 0x80; // FName
		constexpr auto PhysicsType = 0x88; // EPhysicsType
		constexpr auto bAlwaysFullAnimWeight = 0x89; // char : 1
		constexpr auto bConsiderForBounds = 0x89; // char : 1
		constexpr auto bMeshCollideAll = 0x89; // char : 1
		constexpr auto bDoubleSidedGeometry = 0x89; // char : 1
		constexpr auto bGenerateNonMirroredCollision = 0x89; // char : 1
		constexpr auto bSharedCookedData = 0x89; // char : 1
		constexpr auto bGenerateMirroredCollision = 0x89; // char : 1
		constexpr auto CollisionReponse = 0x8b; // EBodyCollisionResponse
		constexpr auto CollisionTraceFlag = 0x8c; // ECollisionTraceFlag
		constexpr auto PhysMaterial = 0x90; // UPhysicalMaterial*
		constexpr auto WalkableSlopeOverride = 0x98; // FWalkableSlopeOverride
		constexpr auto DefaultInstance = 0x110; // FBodyInstance
		constexpr auto BuildScale3D = 0x228; // FVector
	}

	namespace n_UParticleModuleVelocity { // : UParticleModuleVelocityBase
		constexpr auto StartVelocity = 0x38; // FRawDistributionVector
		constexpr auto StartVelocityRadial = 0x80; // FRawDistributionFloat
	}

	namespace n_UMM_Occupation_BattleStart { // : UWidgetBase
		constexpr auto m_Grd_Count = 0x2e0; // UPanelWidget*
		constexpr auto m_Grd_Start = 0x2e8; // UPanelWidget*
		constexpr auto m_Grd_BattleName = 0x2f0; // UPanelWidget*
		constexpr auto m_Img_Count_Num = 0x2f8; // UImage*
		constexpr auto m_Txt_OccupationStageName = 0x300; // UTextBlock*
		constexpr auto m_AniStart = 0x310; // UWidgetAnimation*
		constexpr auto m_AniCount = 0x318; // UWidgetAnimation*
		constexpr auto m_AniBattleName = 0x320; // UWidgetAnimation*
	}

	namespace n_UMM_GuildOption { // : UWidgetBase
		constexpr auto vertical_set = 0x2f0; // UMM_CommonVerticalTabSet*
		constexpr auto cp_option = 0x2f8; // UMirCanvasPanel*
		constexpr auto cp_invited = 0x300; // UMirCanvasPanel*
		constexpr auto cp_history = 0x308; // UMirCanvasPanel*
		constexpr auto txt_guild_name = 0x310; // UMirTextBlock*
		constexpr auto txt_guild_leader = 0x318; // UMirTextBlock*
		constexpr auto txt_members = 0x320; // UMirTextBlock*
		constexpr auto btn_mark_change = 0x328; // UMirButton*
		constexpr auto btn_name_change = 0x330; // UMirButton*
		constexpr auto checkbox_join = 0x338; // UMirCheckBox*
		constexpr auto checkbox_alliance = 0x340; // UMirCheckBox*
		constexpr auto btn_keypad = 0x348; // UMM_Common_Btn_Symbol*
		constexpr auto txt_power_point = 0x350; // UMirTextBlock*
		constexpr auto gow_invite = 0x358; // UMM_GameOption_Switch*
		constexpr auto gow_alliance = 0x360; // UMM_GameOption_Switch*
		constexpr auto gow_war = 0x368; // UMM_GameOption_Switch*
		constexpr auto ctb_war = 0x370; // UMM_Common_ToggleBtn*
		constexpr auto ctb_infamy = 0x378; // UMM_Common_ToggleBtn*
		constexpr auto ctb_cooperation = 0x380; // UMM_Common_ToggleBtn*
		constexpr auto ctb_free = 0x388; // UMM_Common_ToggleBtn*
		constexpr auto ctb_permission = 0x390; // UMM_Common_ToggleBtn*
		constexpr auto btn_destroy = 0x398; // UMM_Common_Btn*
		constexpr auto btn_leave = 0x3a0; // UMM_Common_Btn*
		constexpr auto btn_group_rebuilding = 0x3a8; // UMM_Common_Btn*
		constexpr auto btn_option_change = 0x3b0; // UMM_Common_Btn*
		constexpr auto sb_join_request = 0x3b8; // UMirScrollBox*
		constexpr auto sb_guild_history = 0x3c0; // UMirScrollBox*
		constexpr auto btn_invite_edit = 0x3c8; // UMM_Common_Btn*
		constexpr auto txt_count = 0x3d0; // UMirTextBlock*
		constexpr auto Img_Symbol = 0x3d8; // UMirImage*
		constexpr auto img_frame = 0x3e0; // UMirImage*
		constexpr auto bn_empty = 0x3e8; // UMM_Common_Board_Notice*
		constexpr auto btn_symbol_history_prev = 0x3f0; // UMM_Common_Btn_Symbol*
		constexpr auto btn_symbol_history_next = 0x3f8; // UMM_Common_Btn_Symbol*
		constexpr auto txt_history_curr_page = 0x400; // UMirTextBlock*
		constexpr auto txt_history_group = 0x408; // UMirTextBlock*
		constexpr auto cb_history_group = 0x410; // UMirCheckBox*
		constexpr auto cp_history_group = 0x418; // UMirCanvasPanel*
		constexpr auto btn_history_all = 0x420; // UMirButton*
		constexpr auto btn_history_guild = 0x428; // UMirButton*
		constexpr auto btn_history_diplomacy = 0x430; // UMirButton*
		constexpr auto btn_history_war = 0x438; // UMirButton*
		constexpr auto img_history_all = 0x440; // UMirImage*
		constexpr auto img_history_guild = 0x448; // UMirImage*
		constexpr auto img_history_diplomacy = 0x450; // UMirImage*
		constexpr auto img_history_war = 0x458; // UMirImage*
		constexpr auto bn_empty_history = 0x460; // UMM_Common_Board_Notice*
	}

	namespace n_UMM_Popup_AutoSmelt { // : UWidgetBase
		constexpr auto m_Txt_Title = 0x2f0; // UMirTextBlock*
		constexpr auto m_Txt_SubTitle = 0x2f8; // UMirTextBlock*
		constexpr auto m_BtnClose = 0x300; // UMM_Common_Btn_Symbol*
		constexpr auto m_NumInput = 0x308; // UMM_Item_Make_Slider*
		constexpr auto m_Btn_Init = 0x310; // UMM_Common_Btn*
		constexpr auto m_Btn_ClosePopup = 0x318; // UMM_Common_Btn*
		constexpr auto m_Btn_Ok = 0x320; // UMM_Common_Btn*
		constexpr auto m_InvenSmelt = 0x328; // UMM_Inventory_AutoSmelt*
		constexpr auto m_AutoSmeltTitleStrID = 0x330; // int32_t
		constexpr auto m_AutoSmeltSubTitleStrID = 0x334; // int32_t
		constexpr auto m_CancelStrID = 0x338; // int32_t
		constexpr auto m_AutoSmeltOKStrID = 0x33c; // int32_t
		constexpr auto m_AutoSmeltCancelStrID = 0x340; // int32_t
		constexpr auto m_AllCostDescStrID = 0x344; // int32_t
		constexpr auto m_AddSmeltItemStrID = 0x348; // int32_t
		constexpr auto m_StopSmeltStrID = 0x34c; // int32_t
		constexpr auto m_EffectPlayTime = 0x350; // float
		constexpr auto m_DestroyTime = 0x354; // float
		constexpr auto m_DestroyStartTime = 0x358; // float
		constexpr auto m_Panel_Notice = 0x360; // UPanelWidget*
		constexpr auto m_Board_Notice = 0x368; // UMM_Common_Board_Notice*
		constexpr auto m_Panel_Main = 0x370; // UPanelWidget*
		constexpr auto m_AutoSmeltSlots = 0x378; // TArray<UMM_Slot_Inventory*>
		constexpr auto m_Panel_ColstTotal = 0x388; // UPanelWidget*
		constexpr auto m_Txt_AllCostDesc = 0x390; // UMirRichTextBlock*
		constexpr auto m_Panel_Material = 0x398; // UPanelWidget*
		constexpr auto m_Img_Material = 0x3a0; // UMirImage*
		constexpr auto m_Txt_Material = 0x3a8; // UMirTextBlock*
		constexpr auto m_Panel_Cost = 0x3b0; // UPanelWidget*
		constexpr auto m_Img_Cost = 0x3b8; // UMirImage*
		constexpr auto m_Txt_Cost = 0x3c0; // UMirTextBlock*
		constexpr auto m_Panel_BlackIron = 0x3c8; // UPanelWidget*
		constexpr auto m_Img_BlackIron = 0x3d0; // UMirImage*
		constexpr auto m_Txt_BlackIron = 0x3d8; // UMirTextBlock*
		constexpr auto m_Panel_NumSet = 0x3e0; // UPanelWidget*
		constexpr auto m_Img_NumBlock = 0x3e8; // UMirImage*
		constexpr auto m_Panel_SmeltEnd = 0x3f0; // UPanelWidget*
		constexpr auto m_Txt_SmeltEnd = 0x3f8; // UMirTextBlock*
		constexpr auto m_Panel_Effect = 0x400; // UPanelWidget*
		constexpr auto m_Hrz_Close = 0x408; // UPanelWidget*
		constexpr auto m_Hrz_Smelt = 0x410; // UPanelWidget*
	}

	namespace n_UMM_Popup_Siege_Command_EditText { // : UWidgetBase
		constexpr auto m_Btn_Close = 0x2e0; // UMM_Common_Btn_Symbol*
		constexpr auto m_InputText = 0x2e8; // UMirEditableText*
		constexpr auto m_Btn_Macro = 0x2f0; // UMirButton*
		constexpr auto m_Btn_Ok = 0x2f8; // UMM_Common_Btn*
		constexpr auto m_Btn_Cancel = 0x300; // UMM_Common_Btn*
		constexpr auto m_Macro_Canvas = 0x308; // UMirCanvasPanel*
		constexpr auto m_Btn_Attack = 0x310; // UMirButton*
		constexpr auto m_Btn_Assemble = 0x318; // UMirButton*
		constexpr auto m_Btn_Defence = 0x320; // UMirButton*
		constexpr auto m_Btn_Retreat = 0x328; // UMirButton*
		constexpr auto m_Btn_Wait = 0x330; // UMirButton*
		constexpr auto m_arSelectImg = 0x338; // UMirImage* [0x5]
		constexpr auto m_ImgSelectMark = 0x360; // UMirImage*
	}

	namespace n_UUserDefinedImageCaptureProtocol { // : UUserDefinedCaptureProtocol
		constexpr auto Format = 0xd8; // EDesiredImageFormat
		constexpr auto bEnableCompression = 0xd9; // bool
		constexpr auto CompressionQuality = 0xdc; // int32_t
	}

	namespace n_UMM_CharacterFollowingComponent { // : UPathFollowingComponent
		constexpr auto SkipTooSmallSegmentRecursiveCount = 0x258; // int32_t
	}

	namespace n_UMM_Hud_Chat_TalkMessage { // : UWidgetBase
		constexpr auto m_Img_CharaIcon = 0x2e0; // UMirImage*
		constexpr auto m_Txt_SendTime = 0x2e8; // UMirTextBlock*
		constexpr auto m_Txt_Prefix = 0x2f0; // UMirTextBlock*
		constexpr auto m_Txt_Nickname = 0x2f8; // UMirTextBlock*
		constexpr auto m_Txt_TalkMessage = 0x300; // UMirTextBlock*
		constexpr auto m_RTxt_TalkMessage = 0x308; // UMirRichTextBlock*
		constexpr auto Btn_UserInteraction = 0x310; // UMirButton*
		constexpr auto m_UserUID = 0x318; // uint64_t
		constexpr auto m_UserNickname = 0x320; // FString
		constexpr auto Btn_StageInfo = 0x330; // UMirButton*
		constexpr auto m_Txt_Description = 0x338; // UMirTextBlock*
		constexpr auto m_Txt_Official = 0x340; // UMirTextBlock*
		constexpr auto m_Btn_Translate = 0x348; // UMM_Common_Btn_Translation*
	}

	namespace n_UInterpGroupCamera { // : UInterpGroup
		constexpr auto CameraAnimInst = 0x50; // UCameraAnim*
		constexpr auto CompressTolerance = 0x58; // float
	}

	namespace n_UMM_Popup_DominionWithDrawal { // : UWidgetBase
		constexpr auto m_pWithDrawalGold = 0x2e8; // UMM_Dominion_WithDrawal_MySlot*
		constexpr auto m_pWithDrawalOutGold = 0x2f0; // UMM_Dominion_WithDrawal_OutSlot*
		constexpr auto m_pBtnClose = 0x2f8; // UMM_Common_Btn_Symbol*
		constexpr auto m_pBtnOut = 0x300; // UMM_Common_Btn*
		constexpr auto m_pTxtDominionName = 0x308; // UMirTextBlock*
		constexpr auto m_pTxtTitle = 0x310; // UMirTextBlock*
		constexpr auto m_pTxtOut = 0x318; // UMirTextBlock*
	}

	namespace n_USoundAttenuation { // : UObject
		constexpr auto Attenuation = 0x28; // FSoundAttenuationSettings
	}

	namespace n_UMM_Slot_Occupation_Ranking { // : UWidgetBase
		constexpr auto m_ranking_ListView = 0x2e0; // UMirListView*
		constexpr auto m_rankSlot_List = 0x2e8; // TArray<URankingSlotObj*>
	}

	namespace n_UParticleModuleColor_Seeded { // : UParticleModuleColor
		constexpr auto RandomSeedInfo = 0xb0; // FParticleRandomSeedInfo
	}

	namespace n_UMM_PopupGuildGiveOtherSlot { // : UWidgetBase
		constexpr auto txt_relation = 0x2e0; // UMirTextBlock*
		constexpr auto img_online = 0x2e8; // UMirImage*
		constexpr auto Portrait = 0x2f0; // UMM_GuildMemberPortrait*
		constexpr auto txt_nickname = 0x2f8; // UMirTextBlock*
		constexpr auto txt_custom_title = 0x300; // UMirTextBlock*
		constexpr auto txt_level = 0x308; // UMirTextBlock*
		constexpr auto img_class = 0x310; // UMirImage*
		constexpr auto txt_class = 0x318; // UMirTextBlock*
		constexpr auto txt_combat_power = 0x320; // UMirTextBlock*
		constexpr auto btn_select = 0x328; // UMirButton*
		constexpr auto img_guild_symbol = 0x330; // UMirImage*
		constexpr auto img_guild_frame = 0x338; // UMirImage*
		constexpr auto txt_guild_name = 0x340; // UMirTextBlock*
		constexpr auto cb_selected = 0x348; // UMirCheckBox*
	}

	namespace n_UMovieSceneSpawnSection { // : UMovieSceneBoolSection
		constexpr auto DefaultValue = 0xe0; // bool
		constexpr auto BoolCurve = 0xe8; // FMovieSceneBoolChannel
	}

	namespace n_ADungeonStartTrigger { // : AActor
		constexpr auto m_BoxExtent = 0x218; // FVector
		constexpr auto m_BoxColor = 0x224; // FColor
	}

	namespace n_UMM_HudBtnMenu { // : UWidgetBase
		constexpr auto m_arrBrushMenuIcon = 0x2f0; // TArray<FBrushObject>
		constexpr auto m_iMenuNameFontSize = 0x300; // int32_t
		constexpr auto m_AniPress = 0x308; // UWidgetAnimation*
		constexpr auto m_iEffectID_Touched = 0x310; // int32_t
		constexpr auto m_iEffectID_ContentsOpen = 0x314; // int32_t
		constexpr auto m_iBackgroundEffectID = 0x318; // int32_t
		constexpr auto m_bBlockTutorial = 0x31c; // bool
		constexpr auto m_bUseIndicatorCount = 0x31d; // bool
		constexpr auto m_pImgMenuIcon = 0x320; // UImage*
		constexpr auto m_pBtnMenu = 0x328; // UMirButton*
		constexpr auto m_pGridIndicator = 0x330; // UPanelWidget*
		constexpr auto m_Img_Indicator = 0x338; // UImage*
		constexpr auto m_Txt_Indicator = 0x340; // UMirTextBlock*
		constexpr auto m_pGridEffect = 0x348; // UPanelWidget*
		constexpr auto m_pContentsOpenEffect = 0x350; // UEffectWidgetBase*
		constexpr auto m_BGEffectPanel = 0x358; // UPanelWidget*
		constexpr auto m_pBGEffect = 0x360; // UEffectWidgetBase*
		constexpr auto m_pTextBlockMenuName = 0x368; // UTextBlock*
	}

	namespace n_UDmgTypeBP_Environmental_C { // : UDamageType
		constexpr auto bCausedByWorld = 0x28; // char : 1
		constexpr auto bScaleMomentumByMass = 0x28; // char : 1
		constexpr auto bRadialDamageVelChange = 0x28; // char : 1
		constexpr auto DamageImpulse = 0x2c; // float
		constexpr auto DestructibleImpulse = 0x30; // float
		constexpr auto DestructibleDamageSpreadScale = 0x34; // float
		constexpr auto DamageFalloff = 0x38; // float
	}

	namespace n_ULevelScriptBlueprint { // : UBlueprint
		constexpr auto ParentClass = 0x50; // UObject*
		constexpr auto BlueprintType = 0x58; // EBlueprintType
		constexpr auto bRecompileOnLoad = 0x59; // char : 1
		constexpr auto bHasBeenRegenerated = 0x59; // char : 1
		constexpr auto bIsRegeneratingOnLoad = 0x59; // char : 1
		constexpr auto BlueprintSystemVersion = 0x5c; // int32_t
		constexpr auto SimpleConstructionScript = 0x60; // USimpleConstructionScript*
		constexpr auto ComponentTemplates = 0x68; // TArray<UActorComponent*>
		constexpr auto Timelines = 0x78; // TArray<UTimelineTemplate*>
		constexpr auto ComponentClassOverrides = 0x88; // TArray<FBPComponentClassOverride>
		constexpr auto InheritableComponentHandler = 0x98; // UInheritableComponentHandler*
	}

	namespace n_UParticleModuleSpawnPerUnit { // : UParticleModuleSpawnBase
		constexpr auto UnitScalar = 0x38; // float
		constexpr auto MovementTolerance = 0x3c; // float
		constexpr auto SpawnPerUnit = 0x40; // FRawDistributionFloat
		constexpr auto MaxFrameDistance = 0x70; // float
		constexpr auto bIgnoreSpawnRateWhenMoving = 0x74; // char : 1
		constexpr auto bIgnoreMovementAlongX = 0x74; // char : 1
		constexpr auto bIgnoreMovementAlongY = 0x74; // char : 1
		constexpr auto bIgnoreMovementAlongZ = 0x74; // char : 1
	}

	namespace n_UPhysicsConstraintTemplate { // : UObject
		constexpr auto DefaultInstance = 0x28; // FConstraintInstance
		constexpr auto ProfileHandles = 0x1e0; // TArray<FPhysicsConstraintProfileHandle>
		constexpr auto DefaultProfile = 0x1f0; // FConstraintProfileProperties
	}

	namespace n_UMaterialExpressionSkyAtmosphereLightDirection { // : UMaterialExpression
		constexpr auto LightIndex = 0x40; // int32_t
	}

	namespace n_UScriptSubtitleWidget { // : UWidgetBase
		constexpr auto m_SubtitleText = 0x2e0; // FText
	}

	namespace n_UOnlineSubsystemExtendedAppleWebBrowser { // : UWidget
		constexpr auto OnUrlChanged = 0x108; // FScriptMulticastDelegate
		constexpr auto InitialURL = 0x118; // FString
		constexpr auto bSupportsTransparency = 0x128; // bool
	}

	namespace n_UCameraModifier { // : UObject
		constexpr auto bDebug = 0x28; // char : 1
		constexpr auto bExclusive = 0x28; // char : 1
		constexpr auto Priority = 0x2c; // char
		constexpr auto CameraOwner = 0x30; // APlayerCameraManager*
		constexpr auto AlphaInTime = 0x38; // float
		constexpr auto AlphaOutTime = 0x3c; // float
		constexpr auto Alpha = 0x40; // float
	}

	namespace n_UMM_CharacterBaseAnimInstance { // : UAnimInstance
		constexpr auto IdleStartPosition = 0x268; // float
		constexpr auto FSMType = 0x26c; // EFSM_TYPE
		constexpr auto BattleState = 0x26d; // bool
		constexpr auto SkillId = 0x270; // int32_t
		constexpr auto CCSTANCE = 0x274; // int32_t
		constexpr auto AniIndex = 0x278; // int32_t
		constexpr auto OpObjectType = 0x27c; // int32_t
		constexpr auto AirwalkState = 0x280; // EAIRWALK_STATE
		constexpr auto IsStandJump = 0x281; // bool
		constexpr auto HangOnDir = 0x284; // int32_t
		constexpr auto SideWalkDir = 0x288; // float
		constexpr auto RotDegree = 0x28c; // float
		constexpr auto MoveBlendSpeed = 0x290; // float
		constexpr auto MoveRate = 0x294; // float
		constexpr auto IdleIndex = 0x298; // int32_t
		constexpr auto IsRideStart = 0x29c; // bool
		constexpr auto IsRide = 0x29d; // bool
		constexpr auto VehicleType = 0x2a0; // int32_t
		constexpr auto IsTrace = 0x2a5; // bool
		constexpr auto CharacterBase = 0x2a8; // AMM_CharacterPawnBase*
	}

	namespace n_UMirWebBrowser { // : UWebBrowser
		constexpr auto OnLoadCompleted = 0x150; // FScriptMulticastDelegate
		constexpr auto OnLoadError = 0x160; // FScriptMulticastDelegate
	}

	namespace n_UMovieSceneSpawnTrack { // : UMovieSceneTrack
		constexpr auto Sections = 0x58; // TArray<UMovieSceneSection*>
		constexpr auto ObjectGuid = 0x68; // FGuid
	}

	namespace n_UEnvQueryTest_Volume { // : UEnvQueryTest
		constexpr auto VolumeContext = 0x1c0; // UEnvQueryContext*
		constexpr auto VolumeClass = 0x1c8; // AVolume*
		constexpr auto bDoComplexVolumeTest = 0x1d0; // char : 1
	}

	namespace n_UMaterialExpressionParticleSize { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UCutsceneActorAnimInstance { // : UAnimInstance
		constexpr auto m_RotationAlpha = 0x270; // float
		constexpr auto m_HeadRotation = 0x274; // FRotator
	}

	namespace n_UMM_Item_Make_Info { // : UWidgetBase
		constexpr auto LackOfMoneyStrID = 0x2f0; // int32_t
		constexpr auto LackOfMaterialStrID = 0x2f4; // int32_t
		constexpr auto Slot_MakeItem = 0x2f8; // UMM_Item_Make_Slot_Registered*
		constexpr auto Slot_Material = 0x300; // TArray<UMM_MakeItem_Slot_Special*>
		constexpr auto Slot_LuckyItem = 0x310; // UMM_Item_Make_Slot_Registered*
		constexpr auto Pro_MakeBar = 0x318; // UMM_Item_Make_Slider*
		constexpr auto Grid_NeedCost1 = 0x320; // UPanelWidget*
		constexpr auto Grid_NeedCost2 = 0x328; // UPanelWidget*
		constexpr auto Img_NeedCost1 = 0x330; // UMirImage*
		constexpr auto Txt_NeedCost1 = 0x338; // UMirTextBlock*
		constexpr auto Btn_NeedCost1 = 0x340; // UMM_Common_Btn_Symbol*
		constexpr auto BtnMain_NeedCost1 = 0x348; // UMirButton*
		constexpr auto Txt_NeedCost1_2 = 0x350; // UMirTextBlock*
		constexpr auto Img_NeedCost2 = 0x358; // UMirImage*
		constexpr auto Txt_NeedCost2 = 0x360; // UMirTextBlock*
		constexpr auto Btn_NeedCost2 = 0x368; // UMM_Common_Btn_Symbol*
		constexpr auto BtnMain_NeedCost2 = 0x370; // UMirButton*
		constexpr auto Panel_Bottom = 0x378; // UMirCanvasPanel*
		constexpr auto Btn_HistoryBack = 0x380; // UMM_Common_Btn_Symbol*
		constexpr auto Txt_HistoryBackTitle = 0x388; // UMirTextBlock*
		constexpr auto Btn_Make = 0x390; // UMM_Common_Btn*
		constexpr auto DecoEffectPanel = 0x398; // UPanelWidget*
		constexpr auto m_Ani_GreatSuccess = 0x3a0; // UWidgetAnimation*
		constexpr auto m_GreatSuccessEffect = 0x3a8; // UPanelWidget*
		constexpr auto m_AniTime_GreatSuccess = 0x3b0; // float
		constexpr auto m_AniEndTimer = 0x3b8; // FTimerHandle
		constexpr auto mMakeItemID = 0x3c0; // uint32_t
		constexpr auto Panel_Effect_Basic = 0x3c8; // UMirCanvasPanel*
		constexpr auto Panel_Effect_Red = 0x3d0; // UMirCanvasPanel*
		constexpr auto Deco_Effect_Red = 0x3d8; // UMirCanvasPanel*
		constexpr auto Panel_SuccessInfo = 0x3e0; // UMirCanvasPanel*
		constexpr auto Txt_SuccessPercent = 0x3e8; // UMirTextBlock*
		constexpr auto Panel_Lucky = 0x3f0; // UMirCanvasPanel*
		constexpr auto m_CostType_2 = 0x3f8; // int32_t
		constexpr auto m_CostType_3 = 0x3fc; // int32_t
		constexpr auto Panel_Period = 0x400; // UMirScaleBox*
		constexpr auto Panel_ResetCount = 0x408; // UVerticalBox*
		constexpr auto Panel_ResetInfo = 0x410; // UMirCanvasPanel*
		constexpr auto Panel_ResetSchedule = 0x418; // UMirCanvasPanel*
		constexpr auto Txt_PeriodTime = 0x420; // UMirRichTextBlock*
		constexpr auto Txt_Title_Reset = 0x428; // UMirTextBlock*
		constexpr auto Txt_ResetCount = 0x430; // UMirTextBlock*
		constexpr auto Txt_MakeAndTryCount = 0x438; // UMirRichTextBlock*
		constexpr auto Txt_ResetSchedule = 0x440; // UMirRichTextBlock*
		constexpr auto Panel_Notice_NOMake = 0x448; // UMirCanvasPanel*
		constexpr auto C_Board_Notice = 0x450; // UMM_Common_Board_Notice*
		constexpr auto Panel_Notice_MinReserve = 0x458; // UVerticalBox*
		constexpr auto Txt_Notice_MinReserve = 0x460; // UMirTextBlock*
		constexpr auto RTxt_Notice_MinReserve = 0x468; // UMirRichTextBlock*
	}

	namespace n_UCheckBoxWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto CheckBoxStyle = 0x30; // FCheckBoxStyle
	}

	namespace n_AParticleEventManager { // : AActor
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto bHidden = 0x58; // char : 1
		constexpr auto bNetTemporary = 0x58; // char : 1
		constexpr auto bNetStartup = 0x58; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x58; // char : 1
		constexpr auto bAlwaysRelevant = 0x58; // char : 1
		constexpr auto bReplicateMovement = 0x58; // char : 1
		constexpr auto bTearOff = 0x58; // char : 1
		constexpr auto bExchangedRoles = 0x58; // char : 1
		constexpr auto bNetLoadOnClient = 0x59; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x59; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x59; // char : 1
		constexpr auto bRelevantForLevelBounds = 0x59; // char : 1
		constexpr auto bReplayRewindable = 0x59; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x59; // char : 1
		constexpr auto bAutoDestroyWhenFinished = 0x59; // char : 1
		constexpr auto bBlockInput = 0x59; // char : 1
		constexpr auto bCanBeDamaged = 0x5a; // char : 1
		constexpr auto bCollideWhenPlacing = 0x5a; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x5a; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x5a; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x5a; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x5a; // char : 1
		constexpr auto bIsEditorOnlyActor = 0x5a; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x5a; // char : 1
		constexpr auto bReplicates = 0x5b; // char : 1
		constexpr auto bCanBeInCluster = 0x5b; // char : 1
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x5b; // char : 1
		constexpr auto bActorEnableCollision = 0x5c; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x5c; // char : 1
		constexpr auto UpdateOverlapsMethodDuringLevelStreaming = 0x5d; // EActorUpdateOverlapsMethod
		constexpr auto DefaultUpdateOverlapsMethodDuringLevelStreaming = 0x5e; // EActorUpdateOverlapsMethod
		constexpr auto RemoteRole = 0x5f; // ENetRole
		constexpr auto ReplicatedMovement = 0x60; // FRepMovement
		constexpr auto InitialLifeSpan = 0x94; // float
		constexpr auto CustomTimeDilation = 0x98; // float
		constexpr auto AttachmentReplication = 0xa0; // FRepAttachment
		constexpr auto Owner = 0xe0; // AActor*
		constexpr auto NetDriverName = 0xe8; // FName
		constexpr auto Role = 0xf0; // ENetRole
		constexpr auto NetDormancy = 0xf1; // ENetDormancy
		constexpr auto SpawnCollisionHandlingMethod = 0xf2; // ESpawnActorCollisionHandlingMethod
		constexpr auto AutoReceiveInput = 0xf3; // EAutoReceiveInput
		constexpr auto InputPriority = 0xf4; // int32_t
		constexpr auto InputComponent = 0xf8; // UInputComponent*
		constexpr auto NetCullDistanceSquared = 0x100; // float
		constexpr auto NetTag = 0x104; // int32_t
		constexpr auto NetUpdateFrequency = 0x108; // float
		constexpr auto MinNetUpdateFrequency = 0x10c; // float
		constexpr auto NetPriority = 0x110; // float
		constexpr auto Instigator = 0x118; // APawn*
		constexpr auto Children = 0x120; // TArray<AActor*>
		constexpr auto RootComponent = 0x130; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x138; // TArray<AMatineeActor*>
		constexpr auto Layers = 0x150; // TArray<FName>
		constexpr auto ParentComponent = 0x160; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto Tags = 0x168; // TArray<FName>
		constexpr auto OnTakeAnyDamage = 0x178; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x179; // FScriptMulticastDelegate
		constexpr auto OnTakeRadialDamage = 0x17a; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x17b; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x17c; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x17d; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x17e; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x17f; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x180; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x181; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x182; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x183; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x184; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x185; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x186; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x187; // FScriptMulticastDelegate
		constexpr auto InstanceComponents = 0x1e8; // TArray<UActorComponent*>
		constexpr auto BlueprintCreatedComponents = 0x1f8; // TArray<UActorComponent*>
	}

	namespace n_UTimelineTemplate { // : UObject
		constexpr auto TimelineLength = 0x28; // float
		constexpr auto LengthMode = 0x2c; // ETimelineLengthMode
		constexpr auto bAutoPlay = 0x2d; // char : 1
		constexpr auto bLoop = 0x2d; // char : 1
		constexpr auto bReplicated = 0x2d; // char : 1
		constexpr auto bIgnoreTimeDilation = 0x2d; // char : 1
		constexpr auto EventTracks = 0x30; // TArray<FTTEventTrack>
		constexpr auto FloatTracks = 0x40; // TArray<FTTFloatTrack>
		constexpr auto VectorTracks = 0x50; // TArray<FTTVectorTrack>
		constexpr auto LinearColorTracks = 0x60; // TArray<FTTLinearColorTrack>
		constexpr auto MetaDataArray = 0x70; // TArray<FBPVariableMetaDataEntry>
		constexpr auto TimelineGuid = 0x80; // FGuid
		constexpr auto VariableName = 0x90; // FName
		constexpr auto DirectionPropertyName = 0x98; // FName
		constexpr auto UpdateFunctionName = 0xa0; // FName
		constexpr auto FinishedFunctionName = 0xa8; // FName
	}

	namespace n_UMM_GameOptionKeySettingGroupSlot { // : UWidgetBase
		constexpr auto Slot_2 = 0x2e0; // UMM_GameOptionKeySettingSlot*
		constexpr auto Slot_3 = 0x2e8; // UMM_GameOptionKeySettingSlot*
	}

	namespace n_ARigidBodyBase { // : AActor
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto bHidden = 0x58; // char : 1
		constexpr auto bNetTemporary = 0x58; // char : 1
		constexpr auto bNetStartup = 0x58; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x58; // char : 1
		constexpr auto bAlwaysRelevant = 0x58; // char : 1
		constexpr auto bReplicateMovement = 0x58; // char : 1
		constexpr auto bTearOff = 0x58; // char : 1
		constexpr auto bExchangedRoles = 0x58; // char : 1
		constexpr auto bNetLoadOnClient = 0x59; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x59; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x59; // char : 1
		constexpr auto bRelevantForLevelBounds = 0x59; // char : 1
		constexpr auto bReplayRewindable = 0x59; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x59; // char : 1
		constexpr auto bAutoDestroyWhenFinished = 0x59; // char : 1
		constexpr auto bBlockInput = 0x59; // char : 1
		constexpr auto bCanBeDamaged = 0x5a; // char : 1
		constexpr auto bCollideWhenPlacing = 0x5a; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x5a; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x5a; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x5a; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x5a; // char : 1
		constexpr auto bIsEditorOnlyActor = 0x5a; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x5a; // char : 1
		constexpr auto bReplicates = 0x5b; // char : 1
		constexpr auto bCanBeInCluster = 0x5b; // char : 1
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x5b; // char : 1
		constexpr auto bActorEnableCollision = 0x5c; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x5c; // char : 1
		constexpr auto UpdateOverlapsMethodDuringLevelStreaming = 0x5d; // EActorUpdateOverlapsMethod
		constexpr auto DefaultUpdateOverlapsMethodDuringLevelStreaming = 0x5e; // EActorUpdateOverlapsMethod
		constexpr auto RemoteRole = 0x5f; // ENetRole
		constexpr auto ReplicatedMovement = 0x60; // FRepMovement
		constexpr auto InitialLifeSpan = 0x94; // float
		constexpr auto CustomTimeDilation = 0x98; // float
		constexpr auto AttachmentReplication = 0xa0; // FRepAttachment
		constexpr auto Owner = 0xe0; // AActor*
		constexpr auto NetDriverName = 0xe8; // FName
		constexpr auto Role = 0xf0; // ENetRole
		constexpr auto NetDormancy = 0xf1; // ENetDormancy
		constexpr auto SpawnCollisionHandlingMethod = 0xf2; // ESpawnActorCollisionHandlingMethod
		constexpr auto AutoReceiveInput = 0xf3; // EAutoReceiveInput
		constexpr auto InputPriority = 0xf4; // int32_t
		constexpr auto InputComponent = 0xf8; // UInputComponent*
		constexpr auto NetCullDistanceSquared = 0x100; // float
		constexpr auto NetTag = 0x104; // int32_t
		constexpr auto NetUpdateFrequency = 0x108; // float
		constexpr auto MinNetUpdateFrequency = 0x10c; // float
		constexpr auto NetPriority = 0x110; // float
		constexpr auto Instigator = 0x118; // APawn*
		constexpr auto Children = 0x120; // TArray<AActor*>
		constexpr auto RootComponent = 0x130; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x138; // TArray<AMatineeActor*>
		constexpr auto Layers = 0x150; // TArray<FName>
		constexpr auto ParentComponent = 0x160; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto Tags = 0x168; // TArray<FName>
		constexpr auto OnTakeAnyDamage = 0x178; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x179; // FScriptMulticastDelegate
		constexpr auto OnTakeRadialDamage = 0x17a; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x17b; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x17c; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x17d; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x17e; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x17f; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x180; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x181; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x182; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x183; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x184; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x185; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x186; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x187; // FScriptMulticastDelegate
		constexpr auto InstanceComponents = 0x1e8; // TArray<UActorComponent*>
		constexpr auto BlueprintCreatedComponents = 0x1f8; // TArray<UActorComponent*>
	}

	namespace n_UDirectionalLightComponent { // : ULightComponent
		constexpr auto ShadowCascadeBiasDistribution = 0x368; // float
		constexpr auto bEnableLightShaftOcclusion = 0x36c; // char : 1
		constexpr auto OcclusionMaskDarkness = 0x370; // float
		constexpr auto OcclusionDepthRange = 0x374; // float
		constexpr auto LightShaftOverrideDirection = 0x378; // FVector
		constexpr auto WholeSceneDynamicShadowRadius = 0x384; // float
		constexpr auto DynamicShadowDistanceMovableLight = 0x388; // float
		constexpr auto DynamicShadowDistanceStationaryLight = 0x38c; // float
		constexpr auto DynamicShadowCascades = 0x390; // int32_t
		constexpr auto CascadeDistributionExponent = 0x394; // float
		constexpr auto CascadeTransitionFraction = 0x398; // float
		constexpr auto ShadowDistanceFadeoutFraction = 0x39c; // float
		constexpr auto bUseInsetShadowsForMovableObjects = 0x3a0; // char : 1
		constexpr auto FarShadowCascadeCount = 0x3a4; // int32_t
		constexpr auto FarShadowDistance = 0x3a8; // float
		constexpr auto DistanceFieldShadowDistance = 0x3ac; // float
		constexpr auto LightSourceAngle = 0x3b0; // float
		constexpr auto LightSourceSoftAngle = 0x3b4; // float
		constexpr auto TraceDistance = 0x3b8; // float
		constexpr auto LightmassSettings = 0x3bc; // FLightmassDirectionalLightSettings
		constexpr auto bCastModulatedShadows = 0x3cc; // char : 1
		constexpr auto ModulatedShadowColor = 0x3d0; // FColor
		constexpr auto ShadowAmount = 0x3d4; // float
		constexpr auto bUsedAsAtmosphereSunLight = 0x3d8; // char : 1
		constexpr auto AtmosphereSunLightIndex = 0x3dc; // int32_t
	}

	namespace n_UEngineMessage { // : ULocalMessage
		constexpr auto FailedPlaceMessage = 0x28; // FString
		constexpr auto MaxedOutMessage = 0x38; // FString
		constexpr auto EnteredMessage = 0x48; // FString
		constexpr auto LeftMessage = 0x58; // FString
		constexpr auto GlobalNameChange = 0x68; // FString
		constexpr auto SpecEnteredMessage = 0x78; // FString
		constexpr auto NewPlayerMessage = 0x88; // FString
		constexpr auto NewSpecMessage = 0x98; // FString
	}

	namespace n_UNavLinkDefinition { // : UObject
		constexpr auto Links = 0x28; // TArray<FNavigationLink>
		constexpr auto SegmentLinks = 0x38; // TArray<FNavigationSegmentLink>
	}

	namespace n_UMM_PopupEdit { // : UWidgetBase
		constexpr auto cp_change = 0x2e0; // UMirCanvasPanel*
		constexpr auto cp_reset = 0x2e8; // UMirCanvasPanel*
		constexpr auto Txt_Title = 0x2f0; // UMirTextBlock*
		constexpr auto edit_txt = 0x2f8; // UMirEditableText*
		constexpr auto Btn_Cancel = 0x300; // UMM_Common_Btn*
		constexpr auto btn_confirm = 0x308; // UMM_Common_Btn*
		constexpr auto btn_close = 0x310; // UMM_Common_Btn_Symbol*
		constexpr auto txt_custom_title_reset = 0x318; // UMirTextBlock*
	}

	namespace n_UParticleModuleVelocityOverLifetime { // : UParticleModuleVelocityBase
		constexpr auto VelOverLife = 0x38; // FRawDistributionVector
		constexpr auto Absolute = 0x80; // char : 1
	}

	namespace n_USoundNodeModulator { // : USoundNode
		constexpr auto PitchMin = 0x40; // float
		constexpr auto PitchMax = 0x44; // float
		constexpr auto VolumeMin = 0x48; // float
		constexpr auto VolumeMax = 0x4c; // float
	}

	namespace n_UTextureLightProfile { // : UTexture2D
		constexpr auto Brightness = 0x100; // float
		constexpr auto TextureMultiplier = 0x104; // float
	}

	namespace n_UIAPGoogleStoreModule { // : UIAPStoreModuleBase
		constexpr auto m_UserRequestProductData = 0x58; // FIAPUserRequestData
		constexpr auto m_PurchaseProductData = 0x98; // FIAPProductData
		constexpr auto m_PurchaseInProgress = 0x138; // TArray<EIAPPurchaseState>
		constexpr auto ProcessedTransactionIDs = 0x148; // TArray<FString>
		constexpr auto ProcessedTransactionReceipts = 0x158; // TArray<FString>
		constexpr auto DelayHideBlockScreenTimeHandle = 0x168; // FTimerHandle
		constexpr auto m_MarketProductDataMap = 0x170; // TMap<FString, FIAPMarketProductData>
	}

	namespace n_UPhysicsSpringComponent { // : USceneComponent
		constexpr auto SpringStiffness = 0x220; // float
		constexpr auto SpringDamping = 0x224; // float
		constexpr auto SpringLengthAtRest = 0x228; // float
		constexpr auto SpringRadius = 0x22c; // float
		constexpr auto SpringChannel = 0x230; // ECollisionChannel
		constexpr auto bIgnoreSelf = 0x231; // bool
		constexpr auto SpringCompression = 0x234; // float
	}

	namespace n_UAlignedWrapBoxSlot { // : UPanelSlot
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto bFillEmptySpace = 0x48; // bool
		constexpr auto FillSpanWhenLessThan = 0x4c; // float
		constexpr auto HorizontalAlignment = 0x50; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x51; // EVerticalAlignment
	}

	namespace n_AMM_TotemObject { // : AMM_EntityBase
		constexpr auto ExecuteDecalComponent = 0x400; // UMM_ExecuteDecalComponent*
	}

	namespace n_USmallTalkWidget { // : UWidgetBase
		constexpr auto m_pText_Name = 0x2e0; // UMirTextBlock*
		constexpr auto m_pText_Contents = 0x2e8; // UMirRichTextBlock*
		constexpr auto m_pImage_Face = 0x2f0; // UMirImage*
		constexpr auto m_pBtn_Skip = 0x2f8; // UButton*
		constexpr auto m_pAnim_Start = 0x300; // UWidgetAnimation*
		constexpr auto m_pAnim_End = 0x308; // UWidgetAnimation*
		constexpr auto m_pPlayerPortraitMID = 0x310; // UMaterialInstanceDynamic*
	}

	namespace n_UMyDrawDebugComponent { // : UActorComponent
		constexpr auto PrimaryComponentTick = 0x30; // FActorComponentTickFunction
		constexpr auto ComponentTags = 0x60; // TArray<FName>
		constexpr auto AssetUserData = 0x70; // TArray<UAssetUserData*>
		constexpr auto bReplicates = 0x84; // char : 1
		constexpr auto bNetAddressable = 0x84; // char : 1
		constexpr auto bAutoActivate = 0x85; // char : 1
		constexpr auto bIsActive = 0x86; // char : 1
		constexpr auto bEditableWhenInherited = 0x86; // char : 1
		constexpr auto bCanEverAffectNavigation = 0x86; // char : 1
		constexpr auto bIsEditorOnly = 0x86; // char : 1
		constexpr auto CreationMethod = 0x88; // EComponentCreationMethod
		constexpr auto OnComponentActivated = 0x89; // FScriptMulticastDelegate
		constexpr auto OnComponentDeactivated = 0x8a; // FScriptMulticastDelegate
		constexpr auto UCSModifiedProperties = 0x90; // TArray<FSimpleMemberReference>
	}

	namespace n_AUIBackGroundActor { // : AActor
		constexpr auto m_bUpdate = 0x218; // bool
		constexpr auto m_bMoveComponent = 0x219; // bool
		constexpr auto SceneCaptureComponent2D = 0x220; // USceneCaptureComponent2D*
		constexpr auto m_pRenderTarget2D = 0x228; // UCanvasRenderTarget2D*
		constexpr auto RenderTargetMaterial = 0x230; // UMaterial*
		constexpr auto CachedArrows = 0x238; // TMap<FString, UArrowComponent*>
		constexpr auto BackgroundMaterial = 0x288; // UMaterialInterface*
		constexpr auto UIBackGroundActor = 0x290; // AActor*
		constexpr auto BackgroundDynamicInst = 0x298; // UMaterialInstanceDynamic*
		constexpr auto SceneCaptureTableReferences = 0x2a0; // UDataTable*
		constexpr auto DestCameraLocation = 0x2a8; // FVector
		constexpr auto DestCameraPitch = 0x2b4; // float
		constexpr auto CalculateDestCameraFOV = 0x2b8; // float
		constexpr auto DestCameraFOV = 0x2bc; // float
		constexpr auto IsPendingUpdate = 0x2c0; // int32_t
		constexpr auto mRenderTarget2DList = 0x370; // TArray<UCanvasRenderTarget2D*>
	}

	namespace n_UMaterialExpressionParticleSubUVProperties { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_ALevelStreamingVolume { // : AVolume
		constexpr auto StreamingLevelNames = 0x250; // TArray<FName>
		constexpr auto bEditorPreVisOnly = 0x260; // char : 1
		constexpr auto bDisabled = 0x260; // char : 1
		constexpr auto StreamingUsage = 0x264; // EStreamingVolumeUsage
	}

	namespace n_UMM_Popup_Addressbook_Slot { // : UWidgetBase
		constexpr auto STRING_ONLINE_ID = 0x2e8; // int32_t
		constexpr auto STRING_OFFLINE_ID = 0x2ec; // int32_t
		constexpr auto m_Img_Class = 0x2f0; // UMirImage*
		constexpr auto m_Img_Favorite = 0x2f8; // UMirImage*
		constexpr auto m_Img_Online = 0x300; // UMirImage*
		constexpr auto m_Txt_Level = 0x308; // UMirTextBlock*
		constexpr auto m_Txt_CombatPoint = 0x310; // UMirTextBlock*
		constexpr auto m_Txt_Nickname = 0x318; // UMirTextBlock*
		constexpr auto m_HrzBox_Guild = 0x320; // UHorizontalBox*
		constexpr auto m_Img_Guild_Frame = 0x328; // UMirImage*
		constexpr auto m_Img_Guild_Symbol = 0x330; // UMirImage*
		constexpr auto m_Txt_GuildName = 0x338; // UMirTextBlock*
		constexpr auto m_Txt_UserState = 0x340; // UMirTextBlock*
		constexpr auto m_C_Btn_Select = 0x348; // UMM_Common_Btn*
		constexpr auto m_CheckBox_Select = 0x350; // UMirCheckBox*
	}

	namespace n_ANavModifierVolume { // : AVolume
		constexpr auto AreaClass = 0x258; // UNavArea*
	}

	namespace n_AGhostSkeletalMesh { // : AActor
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto bHidden = 0x58; // char : 1
		constexpr auto bNetTemporary = 0x58; // char : 1
		constexpr auto bNetStartup = 0x58; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x58; // char : 1
		constexpr auto bAlwaysRelevant = 0x58; // char : 1
		constexpr auto bReplicateMovement = 0x58; // char : 1
		constexpr auto bTearOff = 0x58; // char : 1
		constexpr auto bExchangedRoles = 0x58; // char : 1
		constexpr auto bNetLoadOnClient = 0x59; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x59; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x59; // char : 1
		constexpr auto bRelevantForLevelBounds = 0x59; // char : 1
		constexpr auto bReplayRewindable = 0x59; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x59; // char : 1
		constexpr auto bAutoDestroyWhenFinished = 0x59; // char : 1
		constexpr auto bBlockInput = 0x59; // char : 1
		constexpr auto bCanBeDamaged = 0x5a; // char : 1
		constexpr auto bCollideWhenPlacing = 0x5a; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x5a; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x5a; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x5a; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x5a; // char : 1
		constexpr auto bIsEditorOnlyActor = 0x5a; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x5a; // char : 1
		constexpr auto bReplicates = 0x5b; // char : 1
		constexpr auto bCanBeInCluster = 0x5b; // char : 1
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x5b; // char : 1
		constexpr auto bActorEnableCollision = 0x5c; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x5c; // char : 1
		constexpr auto UpdateOverlapsMethodDuringLevelStreaming = 0x5d; // EActorUpdateOverlapsMethod
		constexpr auto DefaultUpdateOverlapsMethodDuringLevelStreaming = 0x5e; // EActorUpdateOverlapsMethod
		constexpr auto RemoteRole = 0x5f; // ENetRole
		constexpr auto ReplicatedMovement = 0x60; // FRepMovement
		constexpr auto InitialLifeSpan = 0x94; // float
		constexpr auto CustomTimeDilation = 0x98; // float
		constexpr auto AttachmentReplication = 0xa0; // FRepAttachment
		constexpr auto Owner = 0xe0; // AActor*
		constexpr auto NetDriverName = 0xe8; // FName
		constexpr auto Role = 0xf0; // ENetRole
		constexpr auto NetDormancy = 0xf1; // ENetDormancy
		constexpr auto SpawnCollisionHandlingMethod = 0xf2; // ESpawnActorCollisionHandlingMethod
		constexpr auto AutoReceiveInput = 0xf3; // EAutoReceiveInput
		constexpr auto InputPriority = 0xf4; // int32_t
		constexpr auto InputComponent = 0xf8; // UInputComponent*
		constexpr auto NetCullDistanceSquared = 0x100; // float
		constexpr auto NetTag = 0x104; // int32_t
		constexpr auto NetUpdateFrequency = 0x108; // float
		constexpr auto MinNetUpdateFrequency = 0x10c; // float
		constexpr auto NetPriority = 0x110; // float
		constexpr auto Instigator = 0x118; // APawn*
		constexpr auto Children = 0x120; // TArray<AActor*>
		constexpr auto RootComponent = 0x130; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x138; // TArray<AMatineeActor*>
		constexpr auto Layers = 0x150; // TArray<FName>
		constexpr auto ParentComponent = 0x160; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto Tags = 0x168; // TArray<FName>
		constexpr auto OnTakeAnyDamage = 0x178; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x179; // FScriptMulticastDelegate
		constexpr auto OnTakeRadialDamage = 0x17a; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x17b; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x17c; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x17d; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x17e; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x17f; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x180; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x181; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x182; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x183; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x184; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x185; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x186; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x187; // FScriptMulticastDelegate
		constexpr auto InstanceComponents = 0x1e8; // TArray<UActorComponent*>
		constexpr auto BlueprintCreatedComponents = 0x1f8; // TArray<UActorComponent*>
	}

	namespace n_UMM_B_CenserResult { // : UWidgetBase
		constexpr auto m_CardSlot = 0x2e0; // UMM_SynthesisResult_Slot*
		constexpr auto m_C_Btn_CenserOpen = 0x2e8; // UMM_Common_Btn*
		constexpr auto m_C_Btn_Close = 0x2f0; // UMM_Common_Btn*
		constexpr auto m_pStartAni = 0x2f8; // UWidgetAnimation*
		constexpr auto m_pEndAni = 0x300; // UWidgetAnimation*
		constexpr auto m_pCardOpenAni = 0x308; // UWidgetAnimation*
	}

	namespace n_UWidgetSwitcherSlot { // : UPanelSlot
		constexpr auto Padding = 0x40; // FMargin
		constexpr auto HorizontalAlignment = 0x50; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x51; // EVerticalAlignment
	}

	namespace n_USkeletalMeshSocket { // : UObject
		constexpr auto SocketName = 0x28; // FName
		constexpr auto BoneName = 0x30; // FName
		constexpr auto RelativeLocation = 0x38; // FVector
		constexpr auto RelativeRotation = 0x44; // FRotator
		constexpr auto RelativeScale = 0x50; // FVector
		constexpr auto bForceAlwaysAnimated = 0x5c; // bool
	}

	namespace n_USoundNodeRandom { // : USoundNode
		constexpr auto Weights = 0x40; // TArray<float>
		constexpr auto HasBeenUsed = 0x50; // TArray<bool>
		constexpr auto NumRandomUsed = 0x60; // int32_t
		constexpr auto PreselectAtLevelLoad = 0x64; // int32_t
		constexpr auto bShouldExcludeFromBranchCulling = 0x68; // char : 1
		constexpr auto bSoundCueExcludedFromBranchCulling = 0x68; // char : 1
		constexpr auto bRandomizeWithoutReplacement = 0x68; // char : 1
	}

	namespace n_UMM_HudPartyList { // : UWidgetBase
		constexpr auto m_fBottomPadding = 0x2f0; // float
		constexpr auto m_AniStart = 0x2f8; // UWidgetAnimation*
		constexpr auto m_AniEnd = 0x300; // UWidgetAnimation*
		constexpr auto SlotSizeY = 0x308; // float
		constexpr auto MaxSlotSizeY = 0x30c; // float
		constexpr auto m_ScrollBox_Party = 0x318; // UScrollBox*
		constexpr auto m_Grid_Squad = 0x320; // UPanelWidget*
		constexpr auto m_arPartyUserSlot = 0x328; // UMM_HudPartyUser* [0x4]
		constexpr auto m_arSquadUserSlot = 0x348; // UMM_HudPartyUser* [0xe]
		constexpr auto m_arOtherUserSlot = 0x3b8; // UMM_HudPartyUser* [0xf]
		constexpr auto m_Manage_Make = 0x430; // UMM_HudPartyManage*
	}

	namespace n_UMM_HUDVirtualJoystick { // : UWidgetBase
		constexpr auto m_pImg_PadBG = 0x2e0; // UImage*
		constexpr auto m_pImg_Direction = 0x2e8; // UImage*
		constexpr auto m_pImg_Thumb = 0x2f0; // UImage*
		constexpr auto m_fResetTime = 0x2f8; // float
		constexpr auto m_pCanInteractionSize = 0x300; // UCanvasPanel*
		constexpr auto m_pCan_VirtualJoystick = 0x308; // UCanvasPanel*
	}

	namespace n_UMirCanvasPanel { // : UCanvasPanel
		constexpr auto Slots = 0x108; // TArray<UPanelSlot*>
	}

	namespace n_UMaterialExpressionMaterialLayerOutput { // : UMaterialExpressionFunctionOutput
		constexpr auto OutputName = 0x40; // FName
		constexpr auto Description = 0x48; // FString
		constexpr auto SortPriority = 0x58; // int32_t
		constexpr auto A = 0x5c; // FExpressionInput
		constexpr auto bLastPreviewed = 0x70; // char : 1
		constexpr auto ID = 0x74; // FGuid
	}

	namespace n_UInterpTrackFloatBase { // : UInterpTrack
		constexpr auto FloatTrack = 0x70; // FInterpCurveFloat
		constexpr auto CurveTension = 0x88; // float
	}

	namespace n_UMM_Common_Popup_EditText { // : UWidgetBase
		constexpr auto Txt_Title = 0x300; // UMirTextBlock*
		constexpr auto EditTxt_Message = 0x308; // UMirEditableText*
		constexpr auto Btn_First = 0x310; // UMM_Common_Btn*
		constexpr auto Btn_Second = 0x318; // UMM_Common_Btn*
		constexpr auto btn_close = 0x320; // UMM_Common_Btn_Symbol*
		constexpr auto Btn_BG = 0x328; // UMirButton*
	}

	namespace n_UInterpCurveEdSetup { // : UObject
		constexpr auto Tabs = 0x28; // TArray<FCurveEdTab>
		constexpr auto ActiveTab = 0x38; // int32_t
	}

	namespace n_UMM_Common_ProgressBar { // : UWidgetBase
		constexpr auto ProgressTextType = 0x2f0; // EProgressTextType
		constexpr auto Panel_HitEffect = 0x2f8; // UCanvasPanel*
		constexpr auto Progress_Sync = 0x300; // UMirProgressBar*
		constexpr auto Progress_Shadow = 0x308; // UMirProgressBar*
		constexpr auto Txt_Gauge = 0x310; // UMirTextBlock*
		constexpr auto Anim_HitEffect = 0x318; // UWidgetAnimation*
	}

	namespace n_UMM_Map_CheckBtn { // : UWidgetBase
		constexpr auto m_TxtMain = 0x2e8; // UMirTextBlock*
		constexpr auto m_CheckMain = 0x2f0; // UCheckBox*
	}

	namespace n_UMM_Popup_GatherList { // : UWidgetBase
		constexpr auto m_pBtnClose = 0x2e8; // UMM_Common_Btn_Symbol*
		constexpr auto m_pTxtRewardCount = 0x2f0; // UMirTextBlock*
		constexpr auto m_pTxtTitle = 0x2f8; // UMirTextBlock*
		constexpr auto m_pScrollList = 0x300; // UMirScrollBox*
	}

	namespace n_UWindowTitleBarArea { // : UContentWidget
		constexpr auto bWindowButtonsEnabled = 0x120; // bool
		constexpr auto bDoubleClickTogglesFullscreen = 0x121; // bool
	}

	namespace n_UMM_Slot_Teleport_List { // : UWidgetBase
		constexpr auto m_pBtnListClick = 0x2f0; // UMirButton*
		constexpr auto m_pTxtMapName = 0x2f8; // UMirTextBlock*
		constexpr auto m_pImgSelect = 0x300; // UMirImage*
	}

	namespace n_UTimeSynchronizationSource { // : UObject
		constexpr auto bUseForSynchronization = 0x28; // bool
		constexpr auto FrameOffset = 0x2c; // int32_t
	}

	namespace n_UMM_AddOptionAbility { // : UWidgetBase
		constexpr auto Mir_Widgetdata = 0x2e0; // UMirWidgetData*
		constexpr auto UnselectColor = 0x2e8; // FLinearColor
		constexpr auto UnselectTextColor = 0x2f8; // FLinearColor
		constexpr auto UnselectOpacity = 0x308; // float
		constexpr auto Img_Select = 0x310; // UMirImage*
		constexpr auto Txt_Ability = 0x318; // UMirTextBlock*
		constexpr auto Btn_Main = 0x320; // UMirButton*
		constexpr auto Effect_Panel = 0x328; // UPanelWidget*
	}

	namespace n_URandomVector { // : UFieldNodeVector
		constexpr auto Magnitude = 0xb0; // float
	}

	namespace n_UMM_ClassPhase_InfoSlot { // : UWidgetBase
		constexpr auto m_pTxtNotice = 0x2e0; // UMirTextBlock*
		constexpr auto m_pTxtCount = 0x2e8; // UMirTextBlock*
		constexpr auto m_pTxtPlace = 0x2f0; // UMirTextBlock*
		constexpr auto m_pTxtParty = 0x2f8; // UMirTextBlock*
		constexpr auto m_pTxtWaitPhaseEnd = 0x300; // UMirTextBlock*
		constexpr auto m_pHorRemainTime = 0x308; // UHorizontalBox*
		constexpr auto m_pTxtRemainTime = 0x310; // UMirTextBlock*
	}

	namespace n_UMM_Popup_WebBrowser { // : UWidgetBase
		constexpr auto m_Can_Back = 0x300; // UPanelWidget*
		constexpr auto m_Btn_Back = 0x308; // UMirButton*
		constexpr auto m_C_WebBrowser = 0x310; // UMirWebBrowser*
		constexpr auto m_CB_Close = 0x318; // UMM_Common_Btn_Symbol*
		constexpr auto m_CB_Home = 0x320; // UMM_Common_Btn_Symbol*
	}

	namespace n_UMM_Common_Popup_Outgame { // : UWidgetBase
		constexpr auto m_Txt_Title = 0x2e0; // UTextBlock*
		constexpr auto m_MatSlot = 0x2e8; // UMM_Slot_Material*
		constexpr auto m_RTxt_Message = 0x2f0; // UMirRichTextBlock*
		constexpr auto m_Hrz_Notice = 0x2f8; // UPanelWidget*
		constexpr auto m_Txt_Notice = 0x300; // UMirTextBlock*
		constexpr auto m_RTxt_Notice = 0x308; // UMirRichTextBlock*
		constexpr auto m_CB_First = 0x310; // UMM_Common_Btn*
		constexpr auto m_CB_Second = 0x318; // UMM_Common_Btn*
		constexpr auto m_CB_Third = 0x320; // UMM_Common_Btn*
		constexpr auto m_CB_Cost = 0x328; // UMM_Common_Btn_Cost*
		constexpr auto m_CB_CostSecond = 0x330; // UMM_Common_Btn_Cost*
		constexpr auto m_CB_Close = 0x338; // UMM_Common_Btn_Symbol*
		constexpr auto m_Btn_Bg = 0x340; // UMirButton*
		constexpr auto hrzCost = 0x348; // UHorizontalBox*
		constexpr auto imgCostIcon = 0x350; // UImage*
		constexpr auto txtCost = 0x358; // UMirTextBlock*
		constexpr auto m_Hrz_Notice_Ext = 0x360; // UPanelWidget*
		constexpr auto m_Txt_Notice_Ext_From = 0x368; // UMirTextBlock*
		constexpr auto m_Txt_Notice_Ext_To = 0x370; // UMirTextBlock*
	}

	namespace n_UMM_UIShopGoodsListView { // : UWidgetBase
		constexpr auto mUIShopCashBag = 0x2e0; // UMM_UIShopCashBag*
		constexpr auto mUIShopGoodsListNormal = 0x2e8; // UMM_UIShopGoodsListNormal*
	}

	namespace n_UImgMediaSource { // : UBaseMediaSource
		constexpr auto FrameRateOverride = 0x88; // FFrameRate
		constexpr auto ProxyOverride = 0x90; // FString
		constexpr auto SequencePath = 0xa0; // FDirectoryPath
	}

	namespace n_AMM_BlueprintActionEffect { // : AActor
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto bHidden = 0x58; // char : 1
		constexpr auto bNetTemporary = 0x58; // char : 1
		constexpr auto bNetStartup = 0x58; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x58; // char : 1
		constexpr auto bAlwaysRelevant = 0x58; // char : 1
		constexpr auto bReplicateMovement = 0x58; // char : 1
		constexpr auto bTearOff = 0x58; // char : 1
		constexpr auto bExchangedRoles = 0x58; // char : 1
		constexpr auto bNetLoadOnClient = 0x59; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x59; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x59; // char : 1
		constexpr auto bRelevantForLevelBounds = 0x59; // char : 1
		constexpr auto bReplayRewindable = 0x59; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x59; // char : 1
		constexpr auto bAutoDestroyWhenFinished = 0x59; // char : 1
		constexpr auto bBlockInput = 0x59; // char : 1
		constexpr auto bCanBeDamaged = 0x5a; // char : 1
		constexpr auto bCollideWhenPlacing = 0x5a; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x5a; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x5a; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x5a; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x5a; // char : 1
		constexpr auto bIsEditorOnlyActor = 0x5a; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x5a; // char : 1
		constexpr auto bReplicates = 0x5b; // char : 1
		constexpr auto bCanBeInCluster = 0x5b; // char : 1
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x5b; // char : 1
		constexpr auto bActorEnableCollision = 0x5c; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x5c; // char : 1
		constexpr auto UpdateOverlapsMethodDuringLevelStreaming = 0x5d; // EActorUpdateOverlapsMethod
		constexpr auto DefaultUpdateOverlapsMethodDuringLevelStreaming = 0x5e; // EActorUpdateOverlapsMethod
		constexpr auto RemoteRole = 0x5f; // ENetRole
		constexpr auto ReplicatedMovement = 0x60; // FRepMovement
		constexpr auto InitialLifeSpan = 0x94; // float
		constexpr auto CustomTimeDilation = 0x98; // float
		constexpr auto AttachmentReplication = 0xa0; // FRepAttachment
		constexpr auto Owner = 0xe0; // AActor*
		constexpr auto NetDriverName = 0xe8; // FName
		constexpr auto Role = 0xf0; // ENetRole
		constexpr auto NetDormancy = 0xf1; // ENetDormancy
		constexpr auto SpawnCollisionHandlingMethod = 0xf2; // ESpawnActorCollisionHandlingMethod
		constexpr auto AutoReceiveInput = 0xf3; // EAutoReceiveInput
		constexpr auto InputPriority = 0xf4; // int32_t
		constexpr auto InputComponent = 0xf8; // UInputComponent*
		constexpr auto NetCullDistanceSquared = 0x100; // float
		constexpr auto NetTag = 0x104; // int32_t
		constexpr auto NetUpdateFrequency = 0x108; // float
		constexpr auto MinNetUpdateFrequency = 0x10c; // float
		constexpr auto NetPriority = 0x110; // float
		constexpr auto Instigator = 0x118; // APawn*
		constexpr auto Children = 0x120; // TArray<AActor*>
		constexpr auto RootComponent = 0x130; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x138; // TArray<AMatineeActor*>
		constexpr auto Layers = 0x150; // TArray<FName>
		constexpr auto ParentComponent = 0x160; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto Tags = 0x168; // TArray<FName>
		constexpr auto OnTakeAnyDamage = 0x178; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x179; // FScriptMulticastDelegate
		constexpr auto OnTakeRadialDamage = 0x17a; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x17b; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x17c; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x17d; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x17e; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x17f; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x180; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x181; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x182; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x183; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x184; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x185; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x186; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x187; // FScriptMulticastDelegate
		constexpr auto InstanceComponents = 0x1e8; // TArray<UActorComponent*>
		constexpr auto BlueprintCreatedComponents = 0x1f8; // TArray<UActorComponent*>
	}

	namespace n_UMicroTransactionBase { // : UPlatformInterfaceBase
		constexpr auto AvailableProducts = 0x38; // TArray<FPurchaseInfo>
		constexpr auto LastError = 0x48; // FString
		constexpr auto LastErrorSolution = 0x58; // FString
	}

	namespace n_AMM_CustomActorBase { // : AActor
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto bHidden = 0x58; // char : 1
		constexpr auto bNetTemporary = 0x58; // char : 1
		constexpr auto bNetStartup = 0x58; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x58; // char : 1
		constexpr auto bAlwaysRelevant = 0x58; // char : 1
		constexpr auto bReplicateMovement = 0x58; // char : 1
		constexpr auto bTearOff = 0x58; // char : 1
		constexpr auto bExchangedRoles = 0x58; // char : 1
		constexpr auto bNetLoadOnClient = 0x59; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x59; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x59; // char : 1
		constexpr auto bRelevantForLevelBounds = 0x59; // char : 1
		constexpr auto bReplayRewindable = 0x59; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x59; // char : 1
		constexpr auto bAutoDestroyWhenFinished = 0x59; // char : 1
		constexpr auto bBlockInput = 0x59; // char : 1
		constexpr auto bCanBeDamaged = 0x5a; // char : 1
		constexpr auto bCollideWhenPlacing = 0x5a; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x5a; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x5a; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x5a; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x5a; // char : 1
		constexpr auto bIsEditorOnlyActor = 0x5a; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x5a; // char : 1
		constexpr auto bReplicates = 0x5b; // char : 1
		constexpr auto bCanBeInCluster = 0x5b; // char : 1
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x5b; // char : 1
		constexpr auto bActorEnableCollision = 0x5c; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x5c; // char : 1
		constexpr auto UpdateOverlapsMethodDuringLevelStreaming = 0x5d; // EActorUpdateOverlapsMethod
		constexpr auto DefaultUpdateOverlapsMethodDuringLevelStreaming = 0x5e; // EActorUpdateOverlapsMethod
		constexpr auto RemoteRole = 0x5f; // ENetRole
		constexpr auto ReplicatedMovement = 0x60; // FRepMovement
		constexpr auto InitialLifeSpan = 0x94; // float
		constexpr auto CustomTimeDilation = 0x98; // float
		constexpr auto AttachmentReplication = 0xa0; // FRepAttachment
		constexpr auto Owner = 0xe0; // AActor*
		constexpr auto NetDriverName = 0xe8; // FName
		constexpr auto Role = 0xf0; // ENetRole
		constexpr auto NetDormancy = 0xf1; // ENetDormancy
		constexpr auto SpawnCollisionHandlingMethod = 0xf2; // ESpawnActorCollisionHandlingMethod
		constexpr auto AutoReceiveInput = 0xf3; // EAutoReceiveInput
		constexpr auto InputPriority = 0xf4; // int32_t
		constexpr auto InputComponent = 0xf8; // UInputComponent*
		constexpr auto NetCullDistanceSquared = 0x100; // float
		constexpr auto NetTag = 0x104; // int32_t
		constexpr auto NetUpdateFrequency = 0x108; // float
		constexpr auto MinNetUpdateFrequency = 0x10c; // float
		constexpr auto NetPriority = 0x110; // float
		constexpr auto Instigator = 0x118; // APawn*
		constexpr auto Children = 0x120; // TArray<AActor*>
		constexpr auto RootComponent = 0x130; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x138; // TArray<AMatineeActor*>
		constexpr auto Layers = 0x150; // TArray<FName>
		constexpr auto ParentComponent = 0x160; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto Tags = 0x168; // TArray<FName>
		constexpr auto OnTakeAnyDamage = 0x178; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x179; // FScriptMulticastDelegate
		constexpr auto OnTakeRadialDamage = 0x17a; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x17b; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x17c; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x17d; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x17e; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x17f; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x180; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x181; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x182; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x183; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x184; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x185; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x186; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x187; // FScriptMulticastDelegate
		constexpr auto InstanceComponents = 0x1e8; // TArray<UActorComponent*>
		constexpr auto BlueprintCreatedComponents = 0x1f8; // TArray<UActorComponent*>
	}

	namespace n_UMM_UIAction_MakeItem { // : UMM_UIAction
		constexpr auto Time_NextMessage_MakeItem = 0x4e0; // float
		constexpr auto NOTHING_TO_MAKE_ITEM_LIST = 0x4e4; // int32_t
		constexpr auto MAX_MATERIAL_NUM = 0x4e8; // int32_t
		constexpr auto MAX_MAKE_COUNT = 0x4ec; // int32_t
		constexpr auto ButtonMakeMsgID = 0x4f0; // int32_t
		constexpr auto NotEnoughCost = 0x4f4; // int32_t
		constexpr auto NotEnoughMaterial = 0x4f8; // int32_t
		constexpr auto STRING_MSG_NOTENOUGH_LEVEL = 0x4fc; // int32_t
		constexpr auto STRING_MSG_NOTMAKE_NOTENOUGH_PREITEM = 0x500; // int32_t
		constexpr auto STRING_MSG_NOTMAKE_NOTENOUGH_LEVEL = 0x504; // int32_t
		constexpr auto SLOT_EFFECT_INDEX = 0x508; // int32_t
		constexpr auto SPECIAL_MAKE_EQUIP_MATERIAL_COUNT = 0x50c; // int32_t
		constexpr auto STRING_MSG_WARRING_MATERIALITEM = 0x510; // int32_t
		constexpr auto STRING_MSG_WARRING_EQUIPITEM = 0x514; // int32_t
		constexpr auto STRING_MSG_WARRING_LOCK_MATERIALITEM = 0x518; // int32_t
		constexpr auto STRING_MSG_INVENTORYFULL = 0x51c; // int32_t
		constexpr auto STRING_MSG_WARRING_SUCCESS_WARRNING = 0x520; // int32_t
		constexpr auto STRING_MSG_WARRING_SUCCESS_EQUIPITEM = 0x524; // int32_t
		constexpr auto DisplayUpdateTime = 0x528; // float
		constexpr auto UpdateTimer = 0x52c; // float
		constexpr auto ANIEND_TIME_FAIL = 0x530; // int32_t
		constexpr auto ANIEND_TIME_SUCCESS = 0x534; // int32_t
		constexpr auto ANIEND_TIME_GREATESUCCESS = 0x538; // int32_t
		constexpr auto m_HistoryStack = 0x6e0; // TArray<int32_t>
		constexpr auto m_MakeTID = 0x6f0; // int32_t
		constexpr auto m_MakeCount = 0x6f4; // int32_t
		constexpr auto m_MainTabIndex = 0x6f8; // int32_t
		constexpr auto m_SubTabIndex = 0x6fc; // int32_t
		constexpr auto m_NPCGroupListID = 0x700; // int32_t
		constexpr auto m_MakeItemUID = 0x708; // int64_t
		constexpr auto m_SelectedMakeTID = 0x710; // int32_t
		constexpr auto m_IsNPCMake = 0x714; // bool
		constexpr auto Reserve_RouteItemTID = 0x718; // int32_t
		constexpr auto Reserve_RouteItemParam = 0x71c; // bool
		constexpr auto Reserve_History = 0x71d; // bool
		constexpr auto m_ItemMake_OpenCheck = 0x71e; // bool
		constexpr auto IsMaterialChanging = 0x71f; // bool
		constexpr auto m_ReserveNpcID = 0x74c; // int32_t
		constexpr auto m_ReserveNpcID_Backup = 0x750; // int32_t
		constexpr auto m_SelectItemTID_NPC = 0x754; // int32_t
		constexpr auto m_TargetItemTID_NPC = 0x758; // int32_t
	}

	namespace n_USoundNodeSwitch { // : USoundNode
		constexpr auto IntParameterName = 0x40; // FName
	}

	namespace n_UMovieScene2DTransformSection { // : UMovieSceneSection
		constexpr auto TransformMask = 0xe0; // FMovieScene2DTransformMask
		constexpr auto Translation = 0xe8; // FMovieSceneFloatChannel [0x2]
		constexpr auto Rotation = 0x228; // FMovieSceneFloatChannel
		constexpr auto Scale = 0x2c8; // FMovieSceneFloatChannel [0x2]
		constexpr auto Shear = 0x408; // FMovieSceneFloatChannel [0x2]
	}

	namespace n_USourceEffectBitCrusherPreset { // : USoundEffectSourcePreset
		constexpr auto Settings = 0x70; // FSourceEffectBitCrusherSettings
	}

	namespace n_ULightmappedSurfaceCollection { // : UObject
		constexpr auto SourceModel = 0x28; // UModel*
		constexpr auto Surfaces = 0x30; // TArray<int32_t>
	}

	namespace n_UMaterialExpressionDecalDerivative { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UMM_B_MagicStone { // : UWidgetBase
		constexpr auto inventory = 0x2f0; // UMM_NewInventory_MagicStone*
		constexpr auto btn_equip = 0x2f8; // UMM_Common_Btn*
		constexpr auto btn_go_to_compose = 0x300; // UMM_Common_Btn*
		constexpr auto magic_stone_equip = 0x308; // UMM_MagicStoneEquip*
		constexpr auto popup_attribute = 0x310; // UMM_Popup_MagicStone_Attribute*
		constexpr auto btn_sort = 0x318; // UMM_SortListBtn*
		constexpr auto detail_info = 0x320; // UMM_MagicStoneDetailInfo*
		constexpr auto txt_select_deckIndex = 0x328; // UMirTextBlock*
		constexpr auto txt_select_deck = 0x330; // UMirTextBlock*
		constexpr auto txt_forge = 0x338; // UMirTextBlock*
		constexpr auto btn_deck = 0x340; // UMirButton*
		constexpr auto btn_transcend = 0x348; // UMirButton*
		constexpr auto transcend_slot = 0x350; // UVerticalBox*
		constexpr auto quick_tab = 0x358; // UMM_MagicStoneQuickTab*
		constexpr auto cp_quick_tab = 0x360; // UMirCanvasPanel*
		constexpr auto cp_quick_tab_bg = 0x368; // UMirCanvasPanel*
	}

	namespace n_UMM_GuildGiftSlot { // : UWidgetBase
		constexpr auto slot_gift = 0x2e8; // UMM_Slot_Material*
		constexpr auto txt_gift_name = 0x2f0; // UMirTextBlock*
		constexpr auto txt_user_name = 0x2f8; // UMirTextBlock*
		constexpr auto hb_time = 0x300; // UHorizontalBox*
		constexpr auto txt_time = 0x308; // UMirTextBlock*
		constexpr auto txt_expiration = 0x310; // UMirTextBlock*
		constexpr auto hb_reward = 0x318; // UHorizontalBox*
		constexpr auto txt_key = 0x320; // UMirTextBlock*
		constexpr auto txt_mileage = 0x328; // UMirTextBlock*
		constexpr auto txt_complete = 0x330; // UMirTextBlock*
		constexpr auto btn_reward = 0x338; // UMM_Common_Btn*
		constexpr auto cp_complete = 0x340; // UMirCanvasPanel*
	}

	namespace n_UMM_HudAutoBattle { // : UWidgetBase
		constexpr auto AuotBattleStateIcon = 0x2f8; // TMap<EAutoBattleState, FBrushObject>
		constexpr auto CounterAttackIcon = 0x348; // FBrushObject
		constexpr auto AutoExecEffectID = 0x368; // int32_t
		constexpr auto TouchEffectID = 0x36c; // int32_t
		constexpr auto BehaviorType = 0x370; // EBehaviorType
		constexpr auto SelecteButton = 0x378; // UMirButton*
		constexpr auto SelectedIcon = 0x380; // UMirImage*
		constexpr auto ExpandList = 0x388; // UVerticalBox*
		constexpr auto ElementList = 0x390; // TArray<UMM_HudAutoBattle_Element*>
		constexpr auto ExecuteEffectWidget = 0x3a0; // UEffectWidgetBase*
		constexpr auto TouchEffectWidget = 0x3a8; // UEffectWidgetBase*
	}

	namespace n_UMM_RelationQuestMsg { // : UMM_QuestBaseMsg
		constexpr auto m_Img_Icon = 0x318; // UMirImage*
		constexpr auto m_Img_Rare_Icon = 0x320; // UMirImage*
		constexpr auto m_Img_Hero_Icon = 0x328; // UMirImage*
		constexpr auto m_Img_Legend_Icon = 0x330; // UMirImage*
	}

	namespace n_UPopup_DungeonReward { // : UWidgetBase
		constexpr auto canVitory = 0x2e0; // UMirCanvasPanel*
		constexpr auto panVitory = 0x2e8; // UPanelWidget*
		constexpr auto imgBossVictory = 0x2f0; // UMirImage*
		constexpr auto txtVictory = 0x2f8; // UMirTextBlock*
		constexpr auto txtVictoryInfo = 0x300; // UMirTextBlock*
		constexpr auto vtcVitory = 0x308; // UVerticalBox*
		constexpr auto canFailMain = 0x310; // UMirCanvasPanel*
		constexpr auto canFail = 0x318; // UMirCanvasPanel*
		constexpr auto imgBossFail = 0x320; // UMirImage*
		constexpr auto txtFail = 0x328; // UMirTextBlock*
		constexpr auto txtFailInfo = 0x330; // UMirTextBlock*
		constexpr auto txtReward = 0x338; // UMirTextBlock*
		constexpr auto txtLeftTime = 0x340; // UMirTextBlock*
		constexpr auto txtLeftTimeExplain = 0x348; // UMirTextBlock*
		constexpr auto txtClearTime = 0x350; // UMirTextBlock*
		constexpr auto txtClearTimeValue = 0x358; // UMirTextBlock*
		constexpr auto txtFailLeftTime = 0x360; // UMirTextBlock*
		constexpr auto txtFailLeftTimeExplain = 0x368; // UMirTextBlock*
		constexpr auto txtDeadCount = 0x370; // UMirTextBlock*
		constexpr auto canContents = 0x378; // UMirCanvasPanel*
		constexpr auto wgtVitoryRewardInfo = 0x380; // UPopup_DungeonReward_Info1*
		constexpr auto wgtPartyRewardInfo = 0x388; // UPopup_DungeonReward_Info2*
		constexpr auto wgtFailRewardInfo = 0x390; // UPopup_DungeonReward_Info3*
		constexpr auto canBtn = 0x398; // UMirCanvasPanel*
		constexpr auto btnPartyReward = 0x3a0; // UMM_Common_Btn*
		constexpr auto btnConfirm = 0x3a8; // UMM_Common_Btn*
		constexpr auto canFailBtn = 0x3b0; // UMirCanvasPanel*
		constexpr auto btnFailConfirm = 0x3b8; // UMM_Common_Btn*
		constexpr auto m_pAni_Win = 0x3d8; // UWidgetAnimation*
		constexpr auto m_pAni_Defeat = 0x3e0; // UWidgetAnimation*
	}

	namespace n_UBlendSpaceBase { // : UAnimationAsset
		constexpr auto bRotationBlendInMeshSpace = 0x88; // bool
		constexpr auto AnimLength = 0x8c; // float
		constexpr auto InterpolationParam = 0x90; // FInterpolationParameter [0x3]
		constexpr auto TargetWeightInterpolationSpeedPerSec = 0xa8; // float
		constexpr auto NotifyTriggerMode = 0xac; // ENotifyTriggerMode
		constexpr auto PerBoneBlend = 0xb0; // TArray<FPerBoneInterpolation>
		constexpr auto SampleIndexWithMarkers = 0xc0; // int32_t
		constexpr auto SampleData = 0xc8; // TArray<FBlendSample>
		constexpr auto GridSamples = 0xd8; // TArray<FEditorElement>
		constexpr auto BlendParameters = 0xe8; // FBlendParameter [0x3]
	}

	namespace n_UMM_Popup_Char_PKPenalty { // : UWidgetBase
		constexpr auto Img_BuffIcon = 0x2e0; // UMirImage*
		constexpr auto Progress_GuildSupport = 0x2e8; // UMirProgressBar*
		constexpr auto Progress_Current = 0x2f0; // UMirProgressBar*
		constexpr auto Txt_ProgressRemainTime = 0x2f8; // UMirTextBlock*
		constexpr auto RTxt_BuffDescription = 0x300; // UMirRichTextBlock*
		constexpr auto Txt_BuffSupport = 0x308; // UMirTextBlock*
		constexpr auto Btn_SupportRequest = 0x310; // UMM_Common_Btn*
		constexpr auto Btn_ImmediateTreatment = 0x318; // UMM_Common_Btn*
		constexpr auto Btn_ImmediateTreatment_Gold = 0x320; // UMM_Common_Btn*
		constexpr auto btn_close = 0x328; // UMM_Common_Btn_Symbol*
		constexpr auto Goods = 0x330; // UMM_ShopNpcGoods*
	}

	namespace n_UAITask_RunEQS { // : UAITask
		constexpr auto OwnerController = 0x68; // AAIController*
	}

	namespace n_UMaterialExpressionRuntimeVirtualTextureSample { // : UMaterialExpression
		constexpr auto Coordinates = 0x40; // FExpressionInput
		constexpr auto MipValue = 0x54; // FExpressionInput
		constexpr auto VirtualTexture = 0x68; // URuntimeVirtualTexture*
		constexpr auto materialType = 0x70; // ERuntimeVirtualTextureMaterialType
		constexpr auto bSinglePhysicalSpace = 0x71; // bool
		constexpr auto MipValueMode = 0x72; // ERuntimeVirtualTextureMipValueMode
	}

	namespace n_ALandscapeStreamingProxy { // : ALandscapeProxy
		constexpr auto LandscapeActor = 0x510; // ALandscape*
	}

	namespace n_UMM_Btn_HudDirJump { // : UWidgetBase
		constexpr auto m_arrIconBrush = 0x2f0; // TArray<FBrushObject>
		constexpr auto m_fShowVirtualPadDelayTime = 0x300; // float
		constexpr auto ClickSound = 0x304; // int32_t
		constexpr auto m_pImgIcon = 0x308; // UImage*
		constexpr auto m_pImgCooltime = 0x310; // UImage*
		constexpr auto m_pBtnArea = 0x318; // UButton*
	}

	namespace n_UNamedSlot { // : UContentWidget
		constexpr auto Slots = 0x108; // TArray<UPanelSlot*>
	}

	namespace n_AKillZVolume { // : APhysicsVolume
		constexpr auto TerminalVelocity = 0x250; // float
		constexpr auto Priority = 0x254; // int32_t
		constexpr auto FluidFriction = 0x258; // float
		constexpr auto bWaterVolume = 0x25c; // char : 1
		constexpr auto bPhysicsOnContact = 0x25c; // char : 1
	}

	namespace n_AMM_HUDBase { // : AHUD
		constexpr auto PlayerOwner = 0x218; // APlayerController*
		constexpr auto bLostFocusPaused = 0x220; // char : 1
		constexpr auto bShowHUD = 0x220; // char : 1
		constexpr auto bShowDebugInfo = 0x220; // char : 1
		constexpr auto CurrentTargetIndex = 0x224; // int32_t
		constexpr auto bShowHitBoxDebugInfo = 0x228; // char : 1
		constexpr auto bShowOverlays = 0x228; // char : 1
		constexpr auto bEnableDebugTextShadow = 0x228; // char : 1
		constexpr auto PostRenderedActors = 0x230; // TArray<AActor*>
		constexpr auto DebugDisplay = 0x248; // TArray<FName>
		constexpr auto ToggledDebugCategories = 0x258; // TArray<FName>
		constexpr auto Canvas = 0x268; // UCanvas*
		constexpr auto DebugCanvas = 0x270; // UCanvas*
		constexpr auto DebugTextList = 0x278; // TArray<FDebugTextInfo>
		constexpr auto ShowDebugTargetDesiredClass = 0x288; // AActor*
		constexpr auto ShowDebugTargetActor = 0x290; // AActor*
	}

	namespace n_UMaterialExpressionTransform { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto TransformSourceType = 0x54; // EMaterialVectorCoordTransformSource
		constexpr auto TransformType = 0x55; // EMaterialVectorCoordTransform
	}

	namespace n_UMaterialExpressionLandscapeVisibilityMask { // : UMaterialExpression
		constexpr auto ExpressionGUID = 0x40; // FGuid
	}

	namespace n_UMM_Guild_ShopList { // : UWidgetBase
		constexpr auto m_Txt_Title = 0x2f0; // UMirTextBlock*
		constexpr auto m_WrapBox = 0x2f8; // UWrapBox*
		constexpr auto m_arSlot = 0x300; // TArray<UMM_Slot_Inventory*>
	}

	namespace n_ULevelSequenceBurnIn { // : UUserWidget
		constexpr auto FrameInformation = 0x240; // FLevelSequencePlayerSnapshot
		constexpr auto LevelSequenceActor = 0x2f8; // ALevelSequenceActor*
	}

	namespace n_AMatineeActorCameraAnim { // : AMatineeActor
		constexpr auto CameraAnim = 0x2c0; // UCameraAnim*
	}

	namespace n_UInterpTrackInstFloatAnimBPParam { // : UInterpTrackInst
		constexpr auto AnimScriptInstance = 0x28; // UAnimInstance*
		constexpr auto ResetFloat = 0x30; // float
	}

	namespace n_UCompositeDataTable { // : UDataTable
		constexpr auto ParentTables = 0xc8; // TArray<UDataTable*>
		constexpr auto OldParentTables = 0xd8; // TArray<UDataTable*>
	}

	namespace n_USoundNodeWavePlayer { // : USoundNodeAssetReferencer
		constexpr auto SoundWaveAssetPtr = 0x40; // USoundWave*
		constexpr auto SoundWave = 0x68; // USoundWave*
		constexpr auto bLooping = 0x70; // char : 1
	}

	namespace n_UMaterialExpressionTextureSampleParameter { // : UMaterialExpressionTextureSample
		constexpr auto ParameterName = 0xd0; // FName
		constexpr auto ExpressionGUID = 0xd8; // FGuid
		constexpr auto Group = 0xe8; // FName
	}

	namespace n_UMM_ServerVisit_ServerList { // : UWidgetBase
		constexpr auto m_Canvas_Current = 0x2e0; // UMirCanvasPanel*
		constexpr auto m_Img_AppearBossBg = 0x2e8; // UMirImage*
		constexpr auto m_Img_StandBossBg = 0x2f0; // UMirImage*
		constexpr auto m_Img_AppearBoss = 0x2f8; // UMirImage*
		constexpr auto m_Img_StandBoss = 0x300; // UMirImage*
		constexpr auto m_Txt_ServerName = 0x308; // UMirTextBlock*
		constexpr auto m_Txt_ServerNotice = 0x310; // UMirRichTextBlock*
		constexpr auto m_Txt_ServerCharacterCount = 0x318; // UMirTextBlock*
		constexpr auto m_Btn_Select = 0x320; // UMirButton*
	}

	namespace n_UMovieSceneSkeletalAnimationOptimizedSection { // : UMovieSceneSection
		constexpr auto EvalOptions = 0x50; // FMovieSceneSectionEvalOptions
		constexpr auto Easing = 0x58; // FMovieSceneEasingSettings
		constexpr auto SectionRange = 0x90; // FMovieSceneFrameRange
		constexpr auto PreRollFrames = 0xa0; // FFrameNumber
		constexpr auto PostRollFrames = 0xa4; // FFrameNumber
		constexpr auto RowIndex = 0xa8; // int32_t
		constexpr auto OverlapPriority = 0xac; // int32_t
		constexpr auto bIsActive = 0xb0; // char : 1
		constexpr auto bIsLocked = 0xb0; // char : 1
		constexpr auto StartTime = 0xb4; // float
		constexpr auto EndTime = 0xb8; // float
		constexpr auto PrerollTime = 0xbc; // float
		constexpr auto PostrollTime = 0xc0; // float
		constexpr auto bIsInfinite = 0xc4; // char : 1
		constexpr auto bSupportsInfiniteRange = 0xc8; // bool
		constexpr auto BlendType = 0xc9; // FOptionalMovieSceneBlendType
	}

	namespace n_UParticleModuleEventReceiverSpawn { // : UParticleModuleEventReceiverBase
		constexpr auto SpawnCount = 0x40; // FRawDistributionFloat
		constexpr auto bUseParticleTime = 0x70; // char : 1
		constexpr auto bUsePSysLocation = 0x70; // char : 1
		constexpr auto bInheritVelocity = 0x70; // char : 1
		constexpr auto InheritVelocityScale = 0x78; // FRawDistributionVector
		constexpr auto PhysicalMaterials = 0xc0; // TArray<UPhysicalMaterial*>
		constexpr auto bBanPhysicalMaterials = 0xd0; // char : 1
	}

	namespace n_AGuardNpcEnterCheckTrigger { // : AActivateTrigger
		constexpr auto m_pFriendNpcTrigger = 0x288; // AGuardNpcSpawnTrigger*
		constexpr auto m_pBoxCollision = 0x290; // UBoxComponent*
		constexpr auto m_pDelayInitActor = 0x298; // AActor*
	}

	namespace n_ACameraControlBase { // : ACameraActor
		constexpr auto ProbeChannel = 0x780; // ECollisionChannel
		constexpr auto StartCollisionGap = 0x784; // float
		constexpr auto CollisionSphere = 0x788; // float
		constexpr auto CollisionPullSpeed = 0x78c; // float
		constexpr auto CollisionReturnSpeed = 0x790; // float
		constexpr auto m_bDoCollision = 0x794; // bool
		constexpr auto DarkChangeCollection = 0x898; // UMaterialParameterCollection*
		constexpr auto FlyDashCollection = 0x8a0; // UMaterialParameterCollection*
		constexpr auto m_pFlyDashParticle = 0x8a8; // TArray<UParticleSystem*>
	}

	namespace n_UMM_GuildDevLock { // : UWidgetBase
		constexpr auto mImgDevIcon = 0x2e0; // UMirImage*
		constexpr auto mTxtDevName = 0x2e8; // UMirTextBlock*
		constexpr auto mTxtDevLockDesc = 0x2f0; // UMirTextBlock*
		constexpr auto mBtnDevPage = 0x2f8; // UMirButton*
	}

	namespace n_UParticleModuleOrbit { // : UParticleModuleOrbitBase
		constexpr auto ChainMode = 0x38; // EOrbitChainMode
		constexpr auto OffsetAmount = 0x40; // FRawDistributionVector
		constexpr auto OffsetOptions = 0x88; // FOrbitOptions
		constexpr auto RotationAmount = 0x90; // FRawDistributionVector
		constexpr auto RotationOptions = 0xd8; // FOrbitOptions
		constexpr auto RotationRateAmount = 0xe0; // FRawDistributionVector
		constexpr auto RotationRateOptions = 0x128; // FOrbitOptions
	}

	namespace n_UParticleModuleSizeMultiplyLife { // : UParticleModuleSizeBase
		constexpr auto LifeMultiplier = 0x30; // FRawDistributionVector
		constexpr auto MultiplyX = 0x78; // char : 1
		constexpr auto MultiplyY = 0x78; // char : 1
		constexpr auto MultiplyZ = 0x78; // char : 1
	}

	namespace n_UMirMobileSettings { // : UDeveloperSettings
		constexpr auto MajorVersion = 0x38; // int32_t
		constexpr auto MinorVersion = 0x3c; // int32_t
		constexpr auto PatchVersion = 0x40; // int32_t
		constexpr auto MaxFPS = 0x44; // float
		constexpr auto PakSearchOrder = 0x48; // EPakSearchOrder
		constexpr auto NotEnoughMemoryThresholdMB = 0x4c; // int32_t
		constexpr auto SkipPreloadingOnNotEnoughMemory = 0x50; // bool
		constexpr auto ConditionalFullPurgeOnAsyncPackageLoader = 0x51; // bool
		constexpr auto GarbageCollectionPerOneSecondOnEditor = 0x52; // bool
		constexpr auto VisualHelperMaxDrawDistance = 0x54; // float
		constexpr auto AdjustAppToken_AosIos = 0x58; // FString
		constexpr auto AdjustAppToken_OneStore = 0x68; // FString
		constexpr auto AdjustAppToken_Galaxy = 0x78; // FString
		constexpr auto AdjustSecretId = 0x88; // FString
		constexpr auto AdjustInfo1 = 0x98; // FString
		constexpr auto AdjustInfo2 = 0xa8; // FString
		constexpr auto AdjustInfo3 = 0xb8; // FString
		constexpr auto AdjustInfo4 = 0xc8; // FString
		constexpr auto CheckMacro_ListCount = 0xd8; // int32_t
		constexpr auto CheckMacro_DetectCount = 0xdc; // int32_t
		constexpr auto CheckMacro_ClickDistanceRatio = 0xe0; // float
		constexpr auto CheckMacro_MoveDistanceRatio = 0xe4; // float
		constexpr auto AlwaysUpdateCullDistanceOnEditor = 0xe8; // bool
	}

	namespace n_UMM_Auction_Guild { // : UWidgetBase
		constexpr auto m_pTxtGuildName = 0x2f0; // UMirRichTextBlock*
		constexpr auto m_pBtnGuildInfo = 0x2f8; // UMM_Common_Btn_Symbol*
	}

	namespace n_UVerticalBoxSlot { // : UPanelSlot
		constexpr auto Size = 0x38; // FSlateChildSize
		constexpr auto Padding = 0x40; // FMargin
		constexpr auto HorizontalAlignment = 0x58; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x59; // EVerticalAlignment
	}

	namespace n_UPanelWidget { // : UWidget
		constexpr auto Slots = 0x108; // TArray<UPanelSlot*>
	}

	namespace n_UMM_Popup_TownNPCPosition { // : UWidgetBase
		constexpr auto m_Btn_Exit = 0x2f0; // UMM_Common_Btn_Symbol*
		constexpr auto m_Txt_StageName = 0x2f8; // UMirTextBlock*
		constexpr auto m_Scr_WaypointList = 0x300; // UScrollBox*
		constexpr auto m_arWaypointCategroy = 0x308; // UMM_MAP_Waypoint_Category* [0x2]
		constexpr auto m_CB_Move = 0x318; // UMM_Common_Btn*
		constexpr auto m_CB_Immedi_Move = 0x320; // UMM_Common_Btn_Cost*
		constexpr auto m_Hrz_Notice = 0x328; // UHorizontalBox*
		constexpr auto m_RTxt_Notice = 0x330; // UMirRichTextBlock*
	}

	namespace n_UAsyncTask_LoadXRDeviceVisComponent { // : UBlueprintAsyncActionBase
		constexpr auto OnModelLoaded = 0x30; // FScriptMulticastDelegate
		constexpr auto OnLoadFailure = 0x40; // FScriptMulticastDelegate
		constexpr auto SpawnedComponent = 0x58; // UPrimitiveComponent*
	}

	namespace n_UNavCollision { // : UNavCollisionBase
		constexpr auto CylinderCollision = 0x80; // TArray<FNavCollisionCylinder>
		constexpr auto BoxCollision = 0x90; // TArray<FNavCollisionBox>
		constexpr auto AreaClass = 0xa0; // UNavArea*
		constexpr auto bGatherConvexGeometry = 0xa8; // char : 1
		constexpr auto bCreateOnClient = 0xa8; // char : 1
	}

	namespace n_UParticleModuleRotationRate_Seeded { // : UParticleModuleRotationRate
		constexpr auto RandomSeedInfo = 0x60; // FParticleRandomSeedInfo
	}

	namespace n_UParticleModuleLocationPrimitiveCylinder { // : UParticleModuleLocationPrimitiveBase
		constexpr auto RadialVelocity = 0xb0; // char : 1
		constexpr auto StartRadius = 0xb8; // FRawDistributionFloat
		constexpr auto StartHeight = 0xe8; // FRawDistributionFloat
		constexpr auto HeightAxis = 0x118; // CylinderHeightAxis
	}

	namespace n_UMaterialExpressionLogarithm2 { // : UMaterialExpression
		constexpr auto X = 0x40; // FExpressionInput
	}

	namespace n_UMM_Popup_ClosedTraining_Ability { // : UWidgetBase
		constexpr auto m_Txt_Title = 0x2e0; // UMirTextBlock*
		constexpr auto m_Btn_Close = 0x2e8; // UMM_Common_Btn_Symbol*
		constexpr auto m_VBox_1 = 0x2f0; // UVerticalBox*
		constexpr auto m_VBox_2 = 0x2f8; // UVerticalBox*
	}

	namespace n_ULandscapeMeshProxyComponent { // : UStaticMeshComponent
		constexpr auto LandscapeGuid = 0x4a8; // FGuid
		constexpr auto ProxyComponentBases = 0x4b8; // TArray<FIntPoint>
		constexpr auto ProxyLOD = 0x4c8; // uint8_t
	}

	namespace n_UMM_ClosedTraining_Slot_Sphere { // : UWidgetBase
		constexpr auto m_Ani_PercentList = 0x2e0; // TArray<UWidgetAnimation*>
	}

	namespace n_UMM_Customizing_Slider_ControlBar { // : UCustomizingComponentBase
		constexpr auto SLIDER_MAX_SIZE = 0x310; // float
		constexpr auto SliderCorrectionValue = 0x314; // float
		constexpr auto m_MinusBtn = 0x318; // UMirButton*
		constexpr auto m_PlusBtn = 0x320; // UMirButton*
		constexpr auto m_ValueSlider = 0x328; // UMirSlider*
		constexpr auto m_DataInfoText = 0x330; // UMirTextBlock*
		constexpr auto Img_KeypadOn = 0x338; // UMirImage*
		constexpr auto Img_KeypadOff = 0x340; // UMirImage*
		constexpr auto m_CustomizingType = 0x348; // int32_t
		constexpr auto m_SliderValue = 0x34c; // int32_t
		constexpr auto m_TypeString = 0x350; // FString
		constexpr auto m_pDragButton = 0x360; // UMM_UI_Drag*
		constexpr auto m_SliderBG_Parent = 0x368; // UCanvasPanel*
		constexpr auto m_SliderBG = 0x370; // USpacer*
		constexpr auto m_ControlPosX = 0x378; // float
		constexpr auto m_ControlRatio = 0x37c; // float
		constexpr auto SumDeltaTime = 0x380; // float
		constexpr auto SaveSec = 0x384; // float
		constexpr auto AddBtnValue = 0x388; // int32_t
		constexpr auto AddValueUpdateTime = 0x38c; // float
		constexpr auto Btn_Pressed_Down = 0x390; // bool
		constexpr auto Btn_Pressed_Up = 0x391; // bool
	}

	namespace n_AVehicleRenderRoom { // : AActor
		constexpr auto m_pSceneComponent = 0x220; // USceneComponent*
		constexpr auto m_pMesh = 0x228; // USkeletalMeshComponent*
		constexpr auto m_pVehicleAnim = 0x230; // UMM_VehicleAnimInstance*
		constexpr auto m_pUIBackGroundActor = 0x238; // AUIBackGroundActor*
	}

	namespace n_AMoveTrigger { // : AActivateTrigger
		constexpr auto m_BoxExtent = 0x280; // FVector
		constexpr auto Next = 0x290; // AMoveTrigger*
		constexpr auto prev = 0x298; // AMoveTrigger*
	}

	namespace n_AWallTrigger { // : AActivateTrigger
		constexpr auto m_pBoxCollision = 0x278; // UBoxComponent*
		constexpr auto m_bWallActivated = 0x280; // bool
	}

	namespace n_UMM_UIAction_ItemInfo { // : UMM_UIAction
		constexpr auto STRID_BTN_SELL = 0x1b0; // int32_t
		constexpr auto STRID_BTN_USE = 0x1b4; // int32_t
		constexpr auto STRID_BTN_EQUIP = 0x1b8; // int32_t
		constexpr auto STRID_BTN_UNSEALING = 0x1bc; // int32_t
		constexpr auto STRID_BTN_TRANSFER = 0x1c0; // int32_t
		constexpr auto STRID_BTN_JEWEL_EQUIP = 0x1c4; // int32_t
		constexpr auto STRID_BTN_JEWEL_UPGRADE = 0x1c8; // int32_t
		constexpr auto STRID_BTN_MOVE = 0x1cc; // int32_t
		constexpr auto STRID_BTN_SMITH = 0x1d0; // int32_t
		constexpr auto STRID_MATERIAL_POPUP = 0x1d4; // int32_t
		constexpr auto STRID_UIMAKEITEM = 0x1d8; // int32_t
		constexpr auto STRID_GO_NPC = 0x1dc; // int32_t
		constexpr auto STRID_GO_UISHOP = 0x1e0; // int32_t
		constexpr auto STRID_CONTENTSNOTOPEN = 0x1e4; // int32_t
		constexpr auto STRID_MSG_SUCCESS_LOCK = 0x1e8; // int32_t
		constexpr auto STRID_MSG_SUCCESS_UNLOCK = 0x1ec; // int32_t
		constexpr auto STRID_MSG_LOCK = 0x1f0; // int32_t
		constexpr auto STRID_MSG_UNLOCK = 0x1f4; // int32_t
		constexpr auto STRID_MSG_LOCK_NOSALE = 0x1f8; // int32_t
		constexpr auto STRID_MSG_LOCK_PETEQUIP = 0x1fc; // int32_t
		constexpr auto STRING_PhaseCantUseMenu = 0x200; // int32_t
		constexpr auto STRID_BTN_TRANS_JEWEL = 0x204; // int32_t
		constexpr auto STRID_BTN_TRANS_PET_STONE = 0x208; // int32_t
		constexpr auto STRID_BTN_TRANS_PET_EQUIP = 0x20c; // int32_t
		constexpr auto STRID_BTN_TRANS_MYSTICAL = 0x210; // int32_t
		constexpr auto STRID_BTN_CONBINE_JEWEL = 0x214; // int32_t
		constexpr auto STRID_BTN_CONBINE = 0x218; // int32_t
		constexpr auto STRID_BTN_MYSTICAL_CONBINE = 0x21c; // int32_t
		constexpr auto STRID_BTN_CONBINE_PET_STONE = 0x220; // int32_t
		constexpr auto STRID_BTN_CONBINE_PET_EQUIP = 0x224; // int32_t
	}

	namespace n_UMM_CharacterPartsComponent { // : UActorComponent
		constexpr auto m_AnimPath = 0x100; // FString
		constexpr auto m_DontDestroyPartsIndex = 0x150; // TArray<int32_t>
		constexpr auto m_pMainAnimInstance = 0x160; // UAnimInstance*
		constexpr auto m_mapSkeletalMeshComponent = 0x238; // TMap<int32_t, USkeletalMeshComponent*>
		constexpr auto m_mapStaticMeshComponent = 0x288; // TMap<int32_t, UStaticMeshComponent*>
		constexpr auto bDoneUseMaterialUpdate = 0x3d1; // char : 1
		constexpr auto bUseAttachParentBound = 0x3d1; // char : 1
		constexpr auto bComponentUseFixedSkelBounds = 0x3d1; // char : 1
		constexpr auto BoundsMin = 0x3d4; // FVector
		constexpr auto BoundsMax = 0x3e0; // FVector
		constexpr auto bCustomBoundsExtension = 0x3ec; // char : 1
		constexpr auto PositiveBounds = 0x3f0; // FVector
		constexpr auto NegativeBounds = 0x3fc; // FVector
		constexpr auto m_BurstEmissive_DCOlor = 0x408; // FLinearColor
		constexpr auto m_fBurstFresnel_Exponenth = 0x418; // float
		constexpr auto m_fBurstFresnel_BaseReflect = 0x41c; // float
		constexpr auto m_fBurstFresnel_power = 0x420; // float
		constexpr auto m_HitColorLow = 0x424; // FLinearColor
		constexpr auto m_fHitFresnel_Exponenth = 0x434; // float
		constexpr auto m_fHitFresnel_BaseReflect = 0x438; // float
		constexpr auto m_fConstFlashTime = 0x43c; // float
		constexpr auto m_fConstGuardHitFlashTime = 0x440; // float
		constexpr auto DieEffectTime = 0x444; // float
		constexpr auto Dissolve = 0x448; // float
		constexpr auto EmissiveBurn = 0x44c; // float
		constexpr auto EmissiveBurn_Color = 0x450; // FLinearColor
		constexpr auto m_mapCharacterMID = 0x488; // TMap<int32_t, FCharacterPartsMID>
		constexpr auto m_mapDieMID = 0x4d8; // TMap<int32_t, FCharacterPartsMID>
		constexpr auto m_mapMaskedMID = 0x528; // TMap<int32_t, FCharacterPartsMID>
		constexpr auto m_mapCachedMID = 0x578; // TMap<int32_t, FCharacterPartsMID>
		constexpr auto m_CustomMaterialInstance = 0x5c8; // UMaterialInstance*
		constexpr auto m_mapCachedAnim = 0x5d0; // TMap<FString, UObject*>
		constexpr auto m_mapCachedMesh = 0x620; // TMap<int32_t, UObject*>
	}

	namespace n_UMM_UIAction_XdracoSealing { // : UMM_UIAction
		constexpr auto Time_NextMessage_MakeItem = 0x180; // float
		constexpr auto ANIEND_TIME_FAIL = 0x184; // int32_t
		constexpr auto ANIEND_TIME_SUCCESS = 0x188; // int32_t
		constexpr auto ANIEND_TIME_GREATESUCCESS = 0x18c; // int32_t
	}

	namespace n_AARSharedWorldGameMode { // : AGameMode
		constexpr auto BufferSizePerChunk = 0x300; // int32_t
	}

	namespace n_UMovieSceneStringTrack { // : UMovieScenePropertyTrack
		constexpr auto SectionToKey = 0x58; // UMovieSceneSection*
		constexpr auto PropertyName = 0x60; // FName
		constexpr auto PropertyPath = 0x68; // FString
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_UMM_GetItemWayList { // : UWidgetBase
		constexpr auto SlotPadding = 0x300; // FMargin
		constexpr auto Txt_Title = 0x320; // UMirTextBlock*
		constexpr auto Img_TypeIcon = 0x328; // UMirImage*
		constexpr auto Grid_BackPanel = 0x330; // UPanelWidget*
		constexpr auto Scr_List = 0x338; // UScrollBox*
		constexpr auto Btn_Slot = 0x340; // UButton*
		constexpr auto TypeIconID = 0x348; // int32_t
		constexpr auto m_Type = 0x34c; // int32_t
		constexpr auto Arr_Slot = 0x350; // TArray<UMM_GetItemWayListSlot*>
		constexpr auto ScrollBox_Pos = 0x360; // FVector2D
		constexpr auto ScrollBox_Size = 0x368; // FVector2D
	}

	namespace n_UClothingAssetCommon { // : UClothingAssetBase
		constexpr auto PhysicsAsset = 0x48; // UPhysicsAsset*
		constexpr auto ClothSimConfig = 0x50; // UClothConfigBase*
		constexpr auto ClothLODData = 0x58; // TArray<UClothLODDataBase*>
		constexpr auto LodMap = 0x68; // TArray<int32_t>
		constexpr auto UsedBoneNames = 0x78; // TArray<FName>
		constexpr auto UsedBoneIndices = 0x88; // TArray<int32_t>
		constexpr auto ReferenceBoneIndex = 0x98; // int32_t
		constexpr auto CustomData = 0xa0; // UClothingAssetCustomData*
	}

	namespace n_UEnvQueryGenerator_Cone { // : UEnvQueryGenerator_ProjectedPoints
		constexpr auto AlignedPointsDistance = 0x80; // FAIDataProviderFloatValue
		constexpr auto ConeDegrees = 0xb0; // FAIDataProviderFloatValue
		constexpr auto AngleStep = 0xe0; // FAIDataProviderFloatValue
		constexpr auto Range = 0x110; // FAIDataProviderFloatValue
		constexpr auto CenterActor = 0x140; // UEnvQueryContext*
		constexpr auto bIncludeContextLocation = 0x148; // char : 1
	}

	namespace n_UParticleModuleLight_Seeded { // : UParticleModuleLight
		constexpr auto RandomSeedInfo = 0x120; // FParticleRandomSeedInfo
	}

	namespace n_UCharMaterialNotify { // : UAnimNotifyState
		constexpr auto m_arrCharMaterial = 0x30; // TArray<FCharMaterialData>
		constexpr auto m_arMaterialInstDynamic = 0x48; // TArray<TWeakObjectPtr<UMaterialInstanceDynamic>>
	}

	namespace n_UMM_NewInventory_StorageLeft { // : UMM_NewInventory_Base
		constexpr auto m_InvenTab = 0x2e8; // UMM_NewInventoryTab*
		constexpr auto m_Inven = 0x2f0; // UMM_NewInventory*
		constexpr auto m_Txt_InvenCount = 0x2f8; // UMirTextBlock*
		constexpr auto m_SortListBtn = 0x300; // UMM_SortListBtn*
		constexpr auto m_Btn_Extend = 0x308; // UMirButton*
	}

	namespace n_UMM_Connecting_Ingame { // : UWidgetBase
		constexpr auto m_Img_Bg = 0x2e8; // UMirImage*
		constexpr auto m_Vrt_Throbber = 0x2f0; // UPanelWidget*
		constexpr auto m_Txt_ThrobberMsg = 0x2f8; // UMirTextBlock*
		constexpr auto m_Grid_Popup = 0x300; // UPanelWidget*
		constexpr auto m_Txt_PopupTitle = 0x308; // UMirTextBlock*
		constexpr auto m_RTxt_PopupMsg = 0x310; // UMirRichTextBlock*
		constexpr auto m_CB_PopupAction = 0x318; // UMM_Common_Btn*
		constexpr auto m_Ani_LoadingThrobber = 0x320; // UWidgetAnimation*
	}

	namespace n_UAsyncTaskDownloadImage { // : UBlueprintAsyncActionBase
		constexpr auto OnSuccess = 0x30; // FScriptMulticastDelegate
		constexpr auto OnFail = 0x40; // FScriptMulticastDelegate
	}

	namespace n_UParticleModuleSubUVMovie { // : UParticleModuleSubUV
		constexpr auto bUseEmitterTime = 0x70; // char : 1
		constexpr auto FrameRate = 0x78; // FRawDistributionFloat
		constexpr auto StartingFrame = 0xa8; // int32_t
	}

	namespace n_UMM_GameOption_InGame_Battle { // : UWidgetBase
		constexpr auto Option_AutoBattleRange = 0x2e0; // UMM_GameOption_Select*
		constexpr auto Option_AutoSkill = 0x2e8; // UMM_GameOption_Select*
		constexpr auto Option_CameraShakeScale = 0x2f0; // UMM_GameOption_Select*
		constexpr auto Option_LeaderCenteredBattle = 0x2f8; // UMM_GameOption_Switch*
		constexpr auto Option_AutoReturnOnDeath = 0x300; // UMM_GameOption_Switch*
		constexpr auto Option_PartyTargetShare = 0x308; // UMM_GameOption_Switch*
		constexpr auto Option_AutoCounterAttack = 0x310; // UMM_GameOption_Switch*
		constexpr auto Option_AutoLockOn = 0x318; // UMM_GameOption_Switch*
		constexpr auto Option_BattleAutoCamera = 0x320; // UMM_GameOption_Switch*
		constexpr auto Option_SkillDarkChange = 0x328; // UMM_GameOption_Switch*
		constexpr auto Option_SkillCameraZoom = 0x330; // UMM_GameOption_Switch*
	}

	namespace n_USoundNodeQualityLevel { // : USoundNode
		constexpr auto ChildNodes = 0x28; // TArray<USoundNode*>
	}

	namespace n_UMM_GuildInventory { // : UWidgetBase
		constexpr auto lst_inventory_goods = 0x2f0; // TArray<UMM_GuildInventoryGoods*>
		constexpr auto sb_log = 0x300; // UMirScrollBox*
		constexpr auto board_notice = 0x308; // UMM_Common_Board_Notice*
		constexpr auto btn_symbol_history_prev = 0x310; // UMM_Common_Btn_Symbol*
		constexpr auto btn_symbol_history_next = 0x318; // UMM_Common_Btn_Symbol*
		constexpr auto txt_history_curr_page = 0x320; // UMirTextBlock*
		constexpr auto btn_donation = 0x328; // UMM_Common_Btn*
		constexpr auto btn_user_give = 0x330; // UMM_Common_Btn*
		constexpr auto btn_guild_give = 0x338; // UMM_Common_Btn*
		constexpr auto btn_exchange = 0x340; // UMM_Common_Btn*
		constexpr auto btn_input = 0x348; // UMM_Common_Btn_Inven*
		constexpr auto btn_output = 0x350; // UMM_Common_Btn_Inven*
	}

	namespace n_UPaperFlipbook { // : UObject
		constexpr auto FramesPerSecond = 0x28; // float
		constexpr auto KeyFrames = 0x30; // TArray<FPaperFlipbookKeyFrame>
		constexpr auto DefaultMaterial = 0x40; // UMaterialInterface*
		constexpr auto CollisionSource = 0x48; // EFlipbookCollisionMode
	}

	namespace n_UMM_NavigationQueryFilter { // : UNavigationQueryFilter
		constexpr auto MaxSearchNodes = 0x48; // int32_t
	}

	namespace n_UMirMultiLineEditableText { // : UMultiLineEditableText
		constexpr auto Text = 0x128; // FText
		constexpr auto HintText = 0x140; // FText
		constexpr auto HintTextDelegate = 0x158; // DelegateProperty
		constexpr auto WidgetStyle = 0x168; // FTextBlockStyle
		constexpr auto bIsReadOnly = 0x3d0; // bool
		constexpr auto Font = 0x3d8; // FSlateFontInfo
		constexpr auto SelectAllTextWhenFocused = 0x428; // bool
		constexpr auto ClearTextSelectionOnFocusLoss = 0x429; // bool
		constexpr auto RevertTextOnEscape = 0x42a; // bool
		constexpr auto ClearKeyboardFocusOnCommit = 0x42b; // bool
		constexpr auto AllowContextMenu = 0x42c; // bool
		constexpr auto VirtualKeyboardOptions = 0x42d; // FVirtualKeyboardOptions
		constexpr auto VirtualKeyboardDismissAction = 0x42e; // EVirtualKeyboardDismissAction
		constexpr auto OnTextChanged = 0x430; // FScriptMulticastDelegate
		constexpr auto OnTextCommitted = 0x440; // FScriptMulticastDelegate
	}

	namespace n_UMM_PopupGuildDonationDetailsSlot { // : UWidgetBase
		constexpr auto txt_grade = 0x2e0; // UMirTextBlock*
		constexpr auto img_online = 0x2e8; // UMirImage*
		constexpr auto Portrait = 0x2f0; // UMM_GuildMemberPortrait*
		constexpr auto txt_nickname = 0x2f8; // UMirTextBlock*
		constexpr auto txt_custom_title = 0x300; // UMirTextBlock*
		constexpr auto img_guild_gold = 0x308; // UMirImage*
		constexpr auto txt_guild_gold = 0x310; // UMirTextBlock*
		constexpr auto img_guild_coin = 0x318; // UMirImage*
		constexpr auto txt_guild_coin = 0x320; // UMirTextBlock*
		constexpr auto img_guild_black_iron = 0x328; // UMirImage*
		constexpr auto txt_guild_black_iron = 0x330; // UMirTextBlock*
		constexpr auto img_guild_spirit = 0x338; // UMirImage*
		constexpr auto txt_guild_spirit = 0x340; // UMirTextBlock*
		constexpr auto img_selected = 0x348; // UMirImage*
	}

	namespace n_ALandscapeProxy { // : AActor
		constexpr auto SplineComponent = 0x218; // ULandscapeSplinesComponent*
		constexpr auto LandscapeGuid = 0x220; // FGuid
		constexpr auto LandscapeSectionOffset = 0x230; // FIntPoint
		constexpr auto MaxLODLevel = 0x238; // int32_t
		constexpr auto LODDistanceFactor = 0x23c; // float
		constexpr auto LODFalloff = 0x240; // ELandscapeLODFalloff
		constexpr auto ComponentScreenSizeToUseSubSections = 0x244; // float
		constexpr auto LOD0ScreenSize = 0x248; // float
		constexpr auto LOD0DistributionSetting = 0x24c; // float
		constexpr auto LODDistributionSetting = 0x250; // float
		constexpr auto TessellationComponentScreenSize = 0x254; // float
		constexpr auto UseTessellationComponentScreenSizeFalloff = 0x258; // bool
		constexpr auto TessellationComponentScreenSizeFalloff = 0x25c; // float
		constexpr auto OccluderGeometryLOD = 0x260; // int32_t
		constexpr auto StaticLightingLOD = 0x264; // int32_t
		constexpr auto DefaultPhysMaterial = 0x268; // UPhysicalMaterial*
		constexpr auto StreamingDistanceMultiplier = 0x270; // float
		constexpr auto LandscapeMaterial = 0x278; // UMaterialInterface*
		constexpr auto LandscapeHoleMaterial = 0x280; // UMaterialInterface*
		constexpr auto LandscapeMaterialsOverride = 0x288; // TArray<FLandscapeProxyMaterialOverride>
		constexpr auto RuntimeVirtualTextures = 0x298; // TArray<URuntimeVirtualTexture*>
		constexpr auto VirtualTextureNumLods = 0x2a8; // int32_t
		constexpr auto VirtualTextureLodBias = 0x2ac; // int32_t
		constexpr auto VirtualTextureRenderPassType = 0x2b0; // ERuntimeVirtualTextureMainPassType
		constexpr auto NegativeZBoundsExtension = 0x2b4; // float
		constexpr auto PositiveZBoundsExtension = 0x2b8; // float
		constexpr auto LandscapeComponents = 0x2c0; // TArray<ULandscapeComponent*>
		constexpr auto CollisionComponents = 0x2d0; // TArray<ULandscapeHeightfieldCollisionComponent*>
		constexpr auto FoliageComponents = 0x2e0; // TArray<UHierarchicalInstancedStaticMeshComponent*>
		constexpr auto bHasLandscapeGrass = 0x354; // bool
		constexpr auto StaticLightingResolution = 0x358; // float
		constexpr auto bCastStaticShadow = 0x35c; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x35c; // char : 1
		constexpr auto bCastFarShadow = 0x35c; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x360; // char : 1
		constexpr auto LightingChannels = 0x361; // FLightingChannels
		constexpr auto bUseMaterialPositionOffsetInStaticLighting = 0x364; // char : 1
		constexpr auto bRenderCustomDepth = 0x364; // char : 1
		constexpr auto CustomDepthStencilValue = 0x368; // int32_t
		constexpr auto LDMaxDrawDistance = 0x36c; // float
		constexpr auto LightmassSettings = 0x370; // FLightmassPrimitiveSettings
		constexpr auto CollisionMipLevel = 0x388; // int32_t
		constexpr auto SimpleCollisionMipLevel = 0x38c; // int32_t
		constexpr auto CollisionThickness = 0x390; // float
		constexpr auto BodyInstance = 0x398; // FBodyInstance
		constexpr auto bGenerateOverlapEvents = 0x4a8; // char : 1
		constexpr auto bBakeMaterialPositionOffsetIntoCollision = 0x4a8; // char : 1
		constexpr auto ComponentSizeQuads = 0x4ac; // int32_t
		constexpr auto SubsectionSizeQuads = 0x4b0; // int32_t
		constexpr auto NumSubsections = 0x4b4; // int32_t
		constexpr auto bUsedForNavigation = 0x4b8; // char : 1
		constexpr auto bUseDynamicMaterialInstance = 0x4bc; // bool
		constexpr auto NavigationGeometryGatheringMode = 0x4bd; // ENavDataGatheringMode
		constexpr auto bUseLandscapeForCullingInvisibleHLODVertices = 0x4be; // bool
		constexpr auto bHasLayersContent = 0x4bf; // bool
		constexpr auto WeightmapUsageMap = 0x4c0; // TMap<UTexture2D*, ULandscapeWeightmapUsage*>
	}

	namespace n_UParticleLODLevel { // : UObject
		constexpr auto Level = 0x28; // int32_t
		constexpr auto bEnabled = 0x2c; // char : 1
		constexpr auto RequiredModule = 0x30; // UParticleModuleRequired*
		constexpr auto Modules = 0x38; // TArray<UParticleModule*>
		constexpr auto TypeDataModule = 0x48; // UParticleModuleTypeDataBase*
		constexpr auto SpawnModule = 0x50; // UParticleModuleSpawn*
		constexpr auto EventGenerator = 0x58; // UParticleModuleEventGenerator*
		constexpr auto SpawningModules = 0x60; // TArray<UParticleModuleSpawnBase*>
		constexpr auto SpawnModules = 0x70; // TArray<UParticleModule*>
		constexpr auto UpdateModules = 0x80; // TArray<UParticleModule*>
		constexpr auto OrbitModules = 0x90; // TArray<UParticleModuleOrbit*>
		constexpr auto EventReceiverModules = 0xa0; // TArray<UParticleModuleEventReceiverBase*>
		constexpr auto ConvertedModules = 0xb0; // char : 1
		constexpr auto PeakActiveParticles = 0xb4; // int32_t
	}

	namespace n_UMM_UIShopGacha { // : UWidgetBase
		constexpr auto m_PanelGachaTitle = 0x2f0; // UMirCanvasPanel*
		constexpr auto m_TxtGachaName = 0x2f8; // UMirTextBlock*
		constexpr auto m_CanvasGachaBtn = 0x300; // UMirCanvasPanel*
		constexpr auto m_TxtGachaFreeTime1 = 0x308; // UMirTextBlock*
		constexpr auto m_HrzMileage1 = 0x310; // UHorizontalBox*
		constexpr auto m_ImgMileage1 = 0x318; // UMirImage*
		constexpr auto m_TxtMileageCount1 = 0x320; // UMirTextBlock*
		constexpr auto m_BtnStartGachaCount1 = 0x328; // UMM_Common_Btn_Cost*
		constexpr auto m_HrzMileage11 = 0x330; // UHorizontalBox*
		constexpr auto m_ImgMileage11 = 0x338; // UMirImage*
		constexpr auto m_TxtMileageCount11 = 0x340; // UMirTextBlock*
		constexpr auto m_BtnStartGachaCount11 = 0x348; // UMM_Common_Btn_Cost*
		constexpr auto m_CheckBoxSkip = 0x350; // UMirCheckBox*
		constexpr auto m_TxtSkip = 0x358; // UMirTextBlock*
		constexpr auto m_PanelGachaPercent = 0x360; // UHorizontalBox*
		constexpr auto m_TxtGachaPercentTitle = 0x368; // UMirTextBlock*
		constexpr auto m_GachaBonus = 0x370; // UMM_UIShopGachaBonus*
		constexpr auto m_GachaFixedPet = 0x378; // UMM_UIShopGachaFixedPet*
	}

	namespace n_ASceneCapture { // : AActor
		constexpr auto MeshComp = 0x218; // UStaticMeshComponent*
		constexpr auto SceneComponent = 0x220; // USceneComponent*
	}

	namespace n_UPendingNetGame { // : UObject
		constexpr auto NetDriver = 0x30; // UNetDriver*
		constexpr auto DemoNetDriver = 0x38; // UDemoNetDriver*
	}

	namespace n_UMM_MysticalPieceQuickSlotBtn { // : UWidgetBase
		constexpr auto m_Img_On = 0x2e8; // UMirImage*
		constexpr auto m_Txt_Index = 0x2f0; // UMirTextBlock*
		constexpr auto m_Btn_Main = 0x2f8; // UMirButton*
	}

	namespace n_UMM_B_QuestNormal { // : UWidgetBase
		constexpr auto m_PreceedingToStr = 0x2f0; // int32_t
		constexpr auto m_HaveNoQuestToStr = 0x2f4; // int32_t
		constexpr auto m_MissionRewardToStr = 0x2f8; // int32_t
		constexpr auto m_HaveNoQuestInLocalToStr = 0x2fc; // int32_t
		constexpr auto m_NormalToStr = 0x300; // int32_t
		constexpr auto m_WatchingAllQuestToStr = 0x304; // int32_t
		constexpr auto m_StageTypeToStr = 0x308; // TMap<EStageType, int32_t>
		constexpr auto m_MaxRepeatCountToStr = 0x358; // int32_t
		constexpr auto m_RepeatCountToStr = 0x35c; // int32_t
		constexpr auto m_VerticalSet = 0x360; // UMM_CommonVerticalTabSet*
		constexpr auto m_HorizontalSet = 0x368; // UMM_CommonHorizontalTabSet*
		constexpr auto m_ListView_QuestList = 0x370; // UMirListView*
		constexpr auto m_CheckCompleteQuest = 0x378; // UMirCheckBox*
		constexpr auto m_CompleteQuest = 0x380; // UMirTextBlock*
		constexpr auto m_Msg = 0x388; // UMirTextBlock*
		constexpr auto m_Txt_Repeat = 0x390; // UMirTextBlock*
		constexpr auto m_Auto_Active = 0x398; // UMirImage*
		constexpr auto m_Auto_DeActive = 0x3a0; // UMirImage*
		constexpr auto m_AutoRun_Btn = 0x3a8; // UMM_Common_Btn*
		constexpr auto m_ReceiveAll_Btn = 0x3b0; // UMM_Common_Btn*
		constexpr auto m_pBtnCommToolTip = 0x3b8; // UMM_Common_ToolTipBtn*
		constexpr auto m_SlotLockInfos = 0x468; // TMap<int32_t, int32_t>
		constexpr auto m_arQuestSlotObj = 0x4c8; // TArray<UQuestSlotObj*>
	}

	namespace n_UMM_B_Guild_MarkChange { // : UWidgetBase
		constexpr auto m_iCreateCost = 0x300; // int32_t
		constexpr auto m_AniStart = 0x308; // UWidgetAnimation*
		constexpr auto m_AniEnd = 0x310; // UWidgetAnimation*
		constexpr auto m_Txt_Notice = 0x328; // UTextBlock*
		constexpr auto m_Img_Frame = 0x330; // UImage*
		constexpr auto m_Img_Symbol = 0x338; // UImage*
		constexpr auto m_Edit_GuildName = 0x340; // UEditableText*
		constexpr auto m_Scr_SymbolList = 0x348; // UScrollBox*
		constexpr auto m_Scr_FrameList = 0x350; // UScrollBox*
		constexpr auto m_arSymbolList = 0x358; // TArray<UMM_GuildIconSlot*>
		constexpr auto m_arFrameList = 0x368; // TArray<UMM_GuildIconSlot*>
		constexpr auto m_CB_SymbolList_Left = 0x378; // UMM_Common_Btn_Symbol*
		constexpr auto m_CB_SymbolList_Right = 0x380; // UMM_Common_Btn_Symbol*
		constexpr auto m_CB_FrameList_Left = 0x388; // UMM_Common_Btn_Symbol*
		constexpr auto m_CB_FrameList_Right = 0x390; // UMM_Common_Btn_Symbol*
		constexpr auto m_CB_Create = 0x398; // UMM_Common_Btn_Cost*
	}

	namespace n_UAlignedWrapBox { // : UPanelWidget
		constexpr auto InnerSlotPadding = 0x120; // FVector2D
		constexpr auto HorizontalAlignment = 0x128; // EHorizontalAlignment
	}

	namespace n_UMM_GameOption_InGame_Alarm { // : UWidgetBase
		constexpr auto Option_CharacterAlarm = 0x2e0; // UMM_GameOption_Switch*
		constexpr auto Option_QuestAlarm = 0x2e8; // UMM_GameOption_Switch*
		constexpr auto Option_GreatBuildingAlarm = 0x2f0; // UMM_GameOption_Switch*
		constexpr auto Option_ContentsOpenAlarm = 0x2f8; // UMM_GameOption_Switch*
		constexpr auto Option_PushAgree = 0x300; // UMM_GameOption_Switch*
		constexpr auto Option_NightPushAgree = 0x308; // UMM_GameOption_Switch*
		constexpr auto m_Grid_PushAgree = 0x310; // UPanelWidget*
		constexpr auto m_Grid_NightPushAgree = 0x318; // UPanelWidget*
	}

	namespace n_APlayerCutsceneActor { // : ACutsceneActor
		constexpr auto m_pWeaponMeshComponent01 = 0x300; // UStaticMeshComponent*
		constexpr auto m_pWeaponMeshComponent02 = 0x308; // UStaticMeshComponent*
	}

	namespace n_UMM_Goods_Tab { // : UWidgetBase
		constexpr auto m_Txt_TabName = 0x2f8; // UMirTextBlock*
		constexpr auto m_Img_Locked = 0x300; // UMirImage*
		constexpr auto m_Img_Indicator = 0x308; // UMirImage*
		constexpr auto m_Img_Selected = 0x310; // UMirImage*
		constexpr auto m_Btn_Main = 0x318; // UMirButton*
	}

	namespace n_UMaterialExpressionComment { // : UMaterialExpression
		constexpr auto SizeX = 0x40; // int32_t
		constexpr auto SizeY = 0x44; // int32_t
		constexpr auto Text = 0x48; // FString
		constexpr auto CommentColor = 0x58; // FLinearColor
		constexpr auto FontSize = 0x68; // int32_t
	}

	namespace n_UMM_Dungeon_List_Slot { // : UMM_DungeonListSlotBase
		constexpr auto NeedLvStrID = 0x2f0; // int32_t
		constexpr auto NormalOpacity = 0x2f4; // float
		constexpr auto DisableOpacity = 0x2f8; // float
		constexpr auto Txt_Title = 0x300; // UMirTextBlock*
		constexpr auto Img_Thumbnail = 0x308; // UMirImage*
		constexpr auto Img_Lock = 0x310; // UMirImage*
		constexpr auto Img_DisableBG = 0x318; // UMirImage*
		constexpr auto Img_Select = 0x320; // UMirImage*
		constexpr auto Img_Indicaotr = 0x328; // UMirImage*
		constexpr auto Img_QuestIcon = 0x330; // UMirImage*
		constexpr auto txt_level = 0x338; // UMirTextBlock*
		constexpr auto Txt_LevelNum = 0x340; // UMirTextBlock*
		constexpr auto Txt_NeedLevel = 0x348; // UMirRichTextBlock*
		constexpr auto ImgBossIcon = 0x350; // UMirImage*
		constexpr auto imgBattle = 0x358; // UMirImage*
	}

	namespace n_UWidgetBinding { // : UPropertyBinding
		constexpr auto SourceObject = 0x28; // TWeakObjectPtr<UObject>
		constexpr auto SourcePath = 0x30; // FDynamicPropertyPath
		constexpr auto DestinationProperty = 0x58; // FName
	}

	namespace n_AProjectile_DirectMove { // : AProjectileBase
		constexpr auto m_pCollSphereComp = 0x218; // USphereComponent*
		constexpr auto m_pShotParticleComp = 0x220; // UParticleSystemComponent*
		constexpr auto m_pImpactParticleComp = 0x228; // UParticleSystemComponent*
	}

	namespace n_UParticleModuleAccelerationConstant { // : UParticleModuleAccelerationBase
		constexpr auto Acceleration = 0x38; // FVector
	}

	namespace n_UMM_Popup_Refund_Sanctions { // : UWidgetBase
		constexpr auto m_Btn_Screen = 0x2e0; // UMirButton*
		constexpr auto m_CB_Close = 0x2e8; // UMM_Common_Btn_Symbol*
		constexpr auto m_Btn_Policy = 0x2f0; // UMirButton*
		constexpr auto m_Scr_RefundList = 0x2f8; // UMirScrollBox*
		constexpr auto m_arRefundList = 0x300; // TArray<UMM_Slot_Refund_Sanctions_List*>
	}

	namespace n_AProjectile_TargetCurve { // : AProjectileBase
		constexpr auto m_pCollSphereComp = 0x218; // USphereComponent*
		constexpr auto m_pShotParticleComp = 0x220; // UParticleSystemComponent*
		constexpr auto m_pImpactParticleComp = 0x228; // UParticleSystemComponent*
	}

	namespace n_UMaterialExpressionLandscapeLayerWeight { // : UMaterialExpression
		constexpr auto Base = 0x40; // FExpressionInput
		constexpr auto Layer = 0x54; // FExpressionInput
		constexpr auto ParameterName = 0x68; // FName
		constexpr auto PreviewWeight = 0x70; // float
		constexpr auto ConstBase = 0x74; // FVector
		constexpr auto ExpressionGUID = 0x80; // FGuid
	}

	namespace n_UReadLeaderboard { // : UBlueprintAsyncActionBase
		constexpr auto OnSuccess = 0x30; // FScriptMulticastDelegate
		constexpr auto OnFail = 0x40; // FScriptMulticastDelegate
	}

	namespace n_UCloudStorageBase { // : UPlatformInterfaceBase
		constexpr auto LocalCloudFiles = 0x38; // TArray<FString>
		constexpr auto bSuppressDelegateCalls = 0x48; // char : 1
	}

	namespace n_UMM_Popup_UIShopBuyGoods { // : UWidgetBase
		constexpr auto m_Txt_Title = 0x2e0; // UMirTextBlock*
		constexpr auto m_Txt_GoodsName = 0x2e8; // UMirTextBlock*
		constexpr auto m_Txt_Account = 0x2f0; // UMirTextBlock*
		constexpr auto m_Img_TagIcon = 0x2f8; // UMirImage*
		constexpr auto m_Img_OnePlus = 0x300; // UMirImage*
		constexpr auto m_Img_GoodsIcon = 0x308; // UMirImage*
		constexpr auto m_Img_LabelIcon = 0x310; // UMirImage*
		constexpr auto m_Img_MileageIcon = 0x318; // UMirImage*
		constexpr auto m_Txt_Mileage = 0x320; // UMirTextBlock*
		constexpr auto m_Txt_Time = 0x328; // UMirTextBlock*
		constexpr auto m_Txt_DescTitle = 0x330; // UMirTextBlock*
		constexpr auto m_Txt_Desc = 0x338; // UMirTextBlock*
		constexpr auto m_Purchaselimit = 0x340; // UVerticalBox*
		constexpr auto m_Txt_PurchaselimitTitle = 0x348; // UMirTextBlock*
		constexpr auto m_Txt_Purchaselimit = 0x350; // UMirTextBlock*
		constexpr auto m_Txt_GoodsListTitle = 0x358; // UMirTextBlock*
		constexpr auto m_Txt_GoodsList = 0x360; // UMirTextBlock*
		constexpr auto m_RichText_CancelNotice = 0x368; // UMirRichTextBlock*
		constexpr auto m_Panel_CancelNotice_3 = 0x370; // UMirCanvasPanel*
		constexpr auto m_Txt_CancelNotice_3 = 0x378; // UMirTextBlock*
		constexpr auto m_Btn_Close = 0x380; // UMM_Common_Btn_Symbol*
		constexpr auto m_Btn_Cancel = 0x388; // UMM_Common_Btn*
		constexpr auto m_Btn_Buy = 0x390; // UMM_Common_Btn*
		constexpr auto m_Txt_AttentionTitle = 0x398; // UMirTextBlock*
		constexpr auto m_Btn_Attention = 0x3a0; // UMirButton*
		constexpr auto m_Panel_CancelPurchase = 0x3a8; // UMirCanvasPanel*
		constexpr auto m_Img_CancelPurchase = 0x3b0; // UImage*
		constexpr auto m_Btn_CancelPurchase = 0x3b8; // UMirButton*
		constexpr auto m_DownloadImage = 0x3c0; // UAsyncTaskDownloadImage*
	}

	namespace n_UCheatManager { // : UObject
		constexpr auto DebugCameraControllerRef = 0x28; // ADebugCameraController*
		constexpr auto DebugCameraControllerClass = 0x30; // ADebugCameraController*
	}

	namespace n_UPaperFlipbookComponent { // : UMeshComponent
		constexpr auto SourceFlipbook = 0x440; // UPaperFlipbook*
		constexpr auto Material = 0x448; // UMaterialInterface*
		constexpr auto PlayRate = 0x450; // float
		constexpr auto bLooping = 0x454; // char : 1
		constexpr auto bReversePlayback = 0x454; // char : 1
		constexpr auto bPlaying = 0x454; // char : 1
		constexpr auto AccumulatedTime = 0x458; // float
		constexpr auto CachedFrameIndex = 0x45c; // int32_t
		constexpr auto SpriteColor = 0x460; // FLinearColor
		constexpr auto CachedBodySetup = 0x470; // UBodySetup*
		constexpr auto OnFinishedPlaying = 0x478; // FScriptMulticastDelegate
	}

	namespace n_UParticleModuleLifetimeBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x29; // char : 1
		constexpr auto LODDuplicate = 0x29; // char : 1
		constexpr auto bSupportsRandomSeed = 0x29; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x29; // char : 1
		constexpr auto LODValidity = 0x2a; // char
	}

	namespace n_UExporter { // : UObject
		constexpr auto SupportedClass = 0x28; // UObject*
		constexpr auto ExportRootScope = 0x30; // UObject*
		constexpr auto FormatExtension = 0x38; // TArray<FString>
		constexpr auto FormatDescription = 0x48; // TArray<FString>
		constexpr auto PreferredFormatIndex = 0x58; // int32_t
		constexpr auto TextIndent = 0x5c; // int32_t
		constexpr auto bText = 0x60; // char : 1
		constexpr auto bSelectedOnly = 0x60; // char : 1
		constexpr auto bForceFileOperations = 0x60; // char : 1
		constexpr auto ExportTask = 0x68; // UAssetExportTask*
	}

	namespace n_UMM_DungeonListSlotBase { // : UWidgetBase
		constexpr auto m_pParentWidget = 0x260; // UWidgetBase*
		constexpr auto m_arChildWidget = 0x268; // TArray<TWeakObjectPtr<UWidgetBase>>
		constexpr auto m_arMirTextBlock = 0x280; // TArray<TWeakObjectPtr<UMirTextBlock>>
		constexpr auto m_arMirRichTextBlock = 0x290; // TArray<TWeakObjectPtr<UMirRichTextBlock>>
		constexpr auto m_arMirEditableText = 0x2a0; // TArray<TWeakObjectPtr<UMirEditableText>>
		constexpr auto m_arMirImage = 0x2b0; // TArray<TWeakObjectPtr<UMirImage>>
	}

	namespace n_UMM_GameOption_InGame_Target { // : UWidgetBase
		constexpr auto Option_select_mode = 0x2f0; // UMM_GameOption_Select*
		constexpr auto arOption_Select = 0x2f8; // TArray<UMM_GameOption_Select*>
	}

	namespace n_UShowLoginUICallbackProxy { // : UBlueprintAsyncActionBase
		constexpr auto OnSuccess = 0x30; // FScriptMulticastDelegate
		constexpr auto OnFailure = 0x40; // FScriptMulticastDelegate
	}

	namespace n_UMM_Customizing_SaveSlot { // : UWidgetBase
		constexpr auto m_CheckBox = 0x300; // UMirCheckBox*
		constexpr auto m_pSelectImage = 0x308; // UMirImage*
		constexpr auto m_DayTitle = 0x310; // UMirTextBlock*
		constexpr auto m_txt_Memo = 0x318; // UMirTextBlock*
		constexpr auto m_Panel_Menu = 0x320; // UPanelWidget*
		constexpr auto m_MenuButton = 0x328; // UMM_Common_Btn_Symbol*
		constexpr auto m_Btn_Memo = 0x330; // UMM_Common_Btn_Symbol*
		constexpr auto m_Btn_Delete = 0x338; // UMM_Common_Btn_Symbol*
		constexpr auto m_Menu_Close = 0x340; // UMM_Common_Btn_Symbol*
	}

	namespace n_UMM_GameOption_PC { // : UWidgetBase
		constexpr auto PC_TabSet = 0x2f0; // UMM_CommonVerticalTabSet*
		constexpr auto WidgetSwitcher = 0x2f8; // UWidgetSwitcher*
		constexpr auto game_option_key_setting = 0x300; // UMM_GameOption_KeySetting*
	}

	namespace n_ANavigationGraph { // : ANavigationData
		constexpr auto RenderingComp = 0x220; // UPrimitiveComponent*
		constexpr auto NavDataConfig = 0x228; // FNavDataConfig
		constexpr auto bEnableDrawing = 0x2a0; // char : 1
		constexpr auto bForceRebuildOnLoad = 0x2a0; // char : 1
		constexpr auto bAutoDestroyWhenNoNavigation = 0x2a0; // char : 1
		constexpr auto bCanBeMainNavData = 0x2a0; // char : 1
		constexpr auto bCanSpawnOnRebuild = 0x2a0; // char : 1
		constexpr auto bRebuildAtRuntime = 0x2a0; // char : 1
		constexpr auto RuntimeGeneration = 0x2a4; // ERuntimeGenerationType
		constexpr auto ObservedPathsTickInterval = 0x2a8; // float
		constexpr auto DataVersion = 0x2ac; // uint32_t
		constexpr auto SupportedAreas = 0x390; // TArray<FSupportedAreaData>
	}

	namespace n_UParticleModuleMaterialBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x29; // char : 1
		constexpr auto LODDuplicate = 0x29; // char : 1
		constexpr auto bSupportsRandomSeed = 0x29; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x29; // char : 1
		constexpr auto LODValidity = 0x2a; // char
	}

	namespace n_AServerStatReplicator { // : AInfo
		constexpr auto bUpdateStatNet = 0x218; // bool
		constexpr auto bOverwriteClientStats = 0x219; // bool
		constexpr auto Channels = 0x21c; // uint32_t
		constexpr auto InRate = 0x220; // uint32_t
		constexpr auto OutRate = 0x224; // uint32_t
		constexpr auto OutSaturation = 0x228; // uint32_t
		constexpr auto MaxPacketOverhead = 0x22c; // uint32_t
		constexpr auto InRateClientMax = 0x230; // uint32_t
		constexpr auto InRateClientMin = 0x234; // uint32_t
		constexpr auto InRateClientAvg = 0x238; // uint32_t
		constexpr auto InPacketsClientMax = 0x23c; // uint32_t
		constexpr auto InPacketsClientMin = 0x240; // uint32_t
		constexpr auto InPacketsClientAvg = 0x244; // uint32_t
		constexpr auto OutRateClientMax = 0x248; // uint32_t
		constexpr auto OutRateClientMin = 0x24c; // uint32_t
		constexpr auto OutRateClientAvg = 0x250; // uint32_t
		constexpr auto OutPacketsClientMax = 0x254; // uint32_t
		constexpr auto OutPacketsClientMin = 0x258; // uint32_t
		constexpr auto OutPacketsClientAvg = 0x25c; // uint32_t
		constexpr auto NetNumClients = 0x260; // uint32_t
		constexpr auto InPackets = 0x264; // uint32_t
		constexpr auto OutPackets = 0x268; // uint32_t
		constexpr auto InBunches = 0x26c; // uint32_t
		constexpr auto OutBunches = 0x270; // uint32_t
		constexpr auto OutLoss = 0x274; // uint32_t
		constexpr auto InLoss = 0x278; // uint32_t
		constexpr auto VoiceBytesSent = 0x27c; // uint32_t
		constexpr auto VoiceBytesRecv = 0x280; // uint32_t
		constexpr auto VoicePacketsSent = 0x284; // uint32_t
		constexpr auto VoicePacketsRecv = 0x288; // uint32_t
		constexpr auto PercentInVoice = 0x28c; // uint32_t
		constexpr auto PercentOutVoice = 0x290; // uint32_t
		constexpr auto NumActorChannels = 0x294; // uint32_t
		constexpr auto NumConsideredActors = 0x298; // uint32_t
		constexpr auto PrioritizedActors = 0x29c; // uint32_t
		constexpr auto NumRelevantActors = 0x2a0; // uint32_t
		constexpr auto NumRelevantDeletedActors = 0x2a4; // uint32_t
		constexpr auto NumReplicatedActorAttempts = 0x2a8; // uint32_t
		constexpr auto NumReplicatedActors = 0x2ac; // uint32_t
		constexpr auto NumActors = 0x2b0; // uint32_t
		constexpr auto NumNetActors = 0x2b4; // uint32_t
		constexpr auto NumDormantActors = 0x2b8; // uint32_t
		constexpr auto NumInitiallyDormantActors = 0x2bc; // uint32_t
		constexpr auto NumNetGUIDsAckd = 0x2c0; // uint32_t
		constexpr auto NumNetGUIDsPending = 0x2c4; // uint32_t
		constexpr auto NumNetGUIDsUnAckd = 0x2c8; // uint32_t
		constexpr auto ObjPathBytes = 0x2cc; // uint32_t
		constexpr auto NetGUIDOutRate = 0x2d0; // uint32_t
		constexpr auto NetGUIDInRate = 0x2d4; // uint32_t
		constexpr auto NetSaturated = 0x2d8; // uint32_t
	}

	namespace n_UMovieScenePrimitiveMaterialSection { // : UMovieSceneSection
		constexpr auto MaterialChannel = 0xe0; // FMovieSceneObjectPathChannel
	}

	namespace n_UMaterialExpressionActorPositionWS { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UNavLinkCustomComponent { // : UNavRelevantComponent
		constexpr auto NavLinkUserId = 0xe8; // uint32_t
		constexpr auto EnabledAreaClass = 0xf0; // UNavArea*
		constexpr auto DisabledAreaClass = 0xf8; // UNavArea*
		constexpr auto SupportedAgents = 0x100; // FNavAgentSelector
		constexpr auto LinkRelativeStart = 0x104; // FVector
		constexpr auto LinkRelativeEnd = 0x110; // FVector
		constexpr auto LinkDirection = 0x11c; // ENavLinkDirection
		constexpr auto bLinkEnabled = 0x120; // char : 1
		constexpr auto bNotifyWhenEnabled = 0x120; // char : 1
		constexpr auto bNotifyWhenDisabled = 0x120; // char : 1
		constexpr auto bCreateBoxObstacle = 0x120; // char : 1
		constexpr auto ObstacleOffset = 0x124; // FVector
		constexpr auto ObstacleExtent = 0x130; // FVector
		constexpr auto ObstacleAreaClass = 0x140; // UNavArea*
		constexpr auto BroadcastRadius = 0x148; // float
		constexpr auto BroadcastInterval = 0x14c; // float
		constexpr auto BroadcastChannel = 0x150; // ECollisionChannel
	}

	namespace n_UPaperTileLayer { // : UObject
		constexpr auto LayerName = 0x28; // FText
		constexpr auto LayerWidth = 0x40; // int32_t
		constexpr auto LayerHeight = 0x44; // int32_t
		constexpr auto bHiddenInGame = 0x48; // char : 1
		constexpr auto bLayerCollides = 0x48; // char : 1
		constexpr auto bOverrideCollisionThickness = 0x48; // char : 1
		constexpr auto bOverrideCollisionOffset = 0x48; // char : 1
		constexpr auto CollisionThicknessOverride = 0x4c; // float
		constexpr auto CollisionOffsetOverride = 0x50; // float
		constexpr auto LayerColor = 0x54; // FLinearColor
		constexpr auto AllocatedWidth = 0x64; // int32_t
		constexpr auto AllocatedHeight = 0x68; // int32_t
		constexpr auto AllocatedCells = 0x70; // TArray<FPaperTileInfo>
		constexpr auto TileSet = 0x80; // UPaperTileSet*
		constexpr auto AllocatedGrid = 0x88; // TArray<int32_t>
	}

	namespace n_UMMUIDirectionalLightComponent { // : USceneComponent
		constexpr auto UICharacterMaterialParameterCollection = 0x220; // UMaterialParameterCollection*
		constexpr auto LightColor = 0x228; // FColor
		constexpr auto LightIntensity = 0x22c; // float
		constexpr auto IsSecondLight = 0x230; // bool
	}

	namespace n_AEmitterCameraLensEffectBase { // : AEmitter
		constexpr auto PS_CameraEffect = 0x268; // UParticleSystem*
		constexpr auto PS_CameraEffectNonExtremeContent = 0x270; // UParticleSystem*
		constexpr auto BaseCamera = 0x278; // APlayerCameraManager*
		constexpr auto RelativeTransform = 0x280; // FTransform
		constexpr auto BaseFOV = 0x2b0; // float
		constexpr auto bAllowMultipleInstances = 0x2b4; // char : 1
		constexpr auto bResetWhenRetriggered = 0x2b4; // char : 1
		constexpr auto EmittersToTreatAsSame = 0x2b8; // TArray<AEmitterCameraLensEffectBase*>
		constexpr auto DistFromCamera = 0x2c8; // float
	}

	namespace n_UMaterialExpressionPower { // : UMaterialExpression
		constexpr auto Base = 0x40; // FExpressionInput
		constexpr auto Exponent = 0x54; // FExpressionInput
		constexpr auto ConstExponent = 0x68; // float
	}

	namespace n_UMaterialExpressionRuntimeVirtualTextureOutput { // : UMaterialExpressionCustomOutput
		constexpr auto BaseColor = 0x40; // FExpressionInput
		constexpr auto Specular = 0x54; // FExpressionInput
		constexpr auto Roughness = 0x68; // FExpressionInput
		constexpr auto Normal = 0x7c; // FExpressionInput
		constexpr auto WorldHeight = 0x90; // FExpressionInput
		constexpr auto Opacity = 0xa4; // FExpressionInput
	}

	namespace n_UMM_PetDeckGroup { // : UWidgetBase
		constexpr auto m_Hrz_Main = 0x2e0; // UPanelWidget*
		constexpr auto m_arDeckSlot = 0x2e8; // UMM_PetSlot* [0x5]
		constexpr auto m_AniAppear = 0x310; // UWidgetAnimation*
		constexpr auto m_AniDisappear = 0x318; // UWidgetAnimation*
	}

	namespace n_UInterpTrackFloatProp { // : UInterpTrackFloatBase
		constexpr auto PropertyName = 0x90; // FName
	}

	namespace n_UMM_Popup_NameChange { // : UWidgetBase
		constexpr auto m_pRandomButton = 0x2e0; // UButton*
		constexpr auto m_pCancelBtn = 0x2e8; // UMM_Common_Btn_Symbol*
		constexpr auto m_pCancelButton = 0x2f0; // UMM_Common_Btn*
		constexpr auto m_pDecisionButton = 0x2f8; // UMM_Common_Btn_Cost*
		constexpr auto m_pNameEditableText = 0x300; // UMirEditableText*
	}

	namespace n_AMyNpcSpawner { // : AActor
		constexpr auto m_pMesh = 0x218; // USkeletalMeshComponent*
		constexpr auto m_BoxExtend = 0x220; // FVector
		constexpr auto m_WarpCoordinate = 0x22c; // FVector
		constexpr auto m_fCapsuleHalfHeigth = 0x238; // float
		constexpr auto m_fCapsuleRadius = 0x23c; // float
		constexpr auto m_NpcID = 0x240; // int32_t
		constexpr auto m_NpcNameTitle = 0x248; // FString
		constexpr auto m_NpcName = 0x258; // FString
		constexpr auto m_InteractionRange = 0x268; // float
		constexpr auto m_SightRange = 0x26c; // float
		constexpr auto m_bShowInteractionRange = 0x270; // bool
		constexpr auto m_bSightRange = 0x271; // bool
	}

	namespace n_UParticleModuleOrientationAxisLock { // : UParticleModuleOrientationBase
		constexpr auto LockAxisFlags = 0x30; // EParticleAxisLock
	}

	namespace n_UMovieSceneCameraCutSection { // : UMovieSceneSection
		constexpr auto CameraGuid = 0xe0; // FGuid
		constexpr auto CameraBindingID = 0xf0; // FMovieSceneObjectBindingID
	}

	namespace n_UMaterialExpressionAppendVector { // : UMaterialExpression
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_UMM_Fame_List_SubSlot { // : UWidgetBase
		constexpr auto Txt_Title = 0x2e0; // UMirTextBlock*
		constexpr auto Txt_Value = 0x2e8; // TArray<UMirRichTextBlock*>
		constexpr auto STRID_SCORE = 0x2f8; // int32_t
	}

	namespace n_UParticleModuleSubUVBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x29; // char : 1
		constexpr auto LODDuplicate = 0x29; // char : 1
		constexpr auto bSupportsRandomSeed = 0x29; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x29; // char : 1
		constexpr auto LODValidity = 0x2a; // char
	}

	namespace n_UParticleModuleSize_Seeded { // : UParticleModuleSize
		constexpr auto RandomSeedInfo = 0x78; // FParticleRandomSeedInfo
	}

	namespace n_UPrimaryAssetLabel { // : UPrimaryDataAsset
		constexpr auto Rules = 0x30; // FPrimaryAssetRules
		constexpr auto bLabelAssetsInMyDirectory = 0x3c; // char : 1
		constexpr auto bIsRuntimeLabel = 0x3c; // char : 1
		constexpr auto ExplicitAssets = 0x40; // TArray<UObject*>
		constexpr auto ExplicitBlueprints = 0x50; // TArray<UClass*>
		constexpr auto AssetCollection = 0x60; // FCollectionReference
	}

	namespace n_AGeometryCacheActor { // : AActor
		constexpr auto GeometryCacheComponent = 0x218; // UGeometryCacheComponent*
	}

	namespace n_UMM_B_PKRecord { // : UWidgetBase
		constexpr auto m_ListView_PKRecordList = 0x2e0; // UMirListView*
		constexpr auto m_arPKRecordSlotObj = 0x2e8; // TArray<UPKRecordSlotObj*>
		constexpr auto m_Txt_Tend = 0x2f8; // UTextBlock*
		constexpr auto m_Txt_TendPoint = 0x300; // UTextBlock*
		constexpr auto m_pTxt_PvpKill = 0x308; // UMirTextBlock*
		constexpr auto m_pTxt_PvpDie = 0x310; // UMirTextBlock*
		constexpr auto m_WinCheckBox = 0x318; // UCheckBox*
		constexpr auto m_DieCheckBox = 0x320; // UCheckBox*
		constexpr auto m_pEmptyListNotice = 0x328; // UMM_Common_Board_Notice*
	}

	namespace n_UMM_Common_Btn_Cost { // : UMM_Common_Btn
		constexpr auto m_CostValueFont = 0x3f8; // FSlateFontInfo
		constexpr auto m_ImgCostIcon = 0x448; // UImage*
		constexpr auto m_TxtCostValue = 0x450; // UMirTextBlock*
		constexpr auto m_CostInfoPanel = 0x458; // UWidget*
		constexpr auto m_Txt_HaveValue = 0x460; // UMirTextBlock*
		constexpr auto STRING_POPUP_TRANSFER_FREE_COST = 0x468; // int32_t
	}

	namespace n_UMM_ClosedTraining_DetailStatSlot { // : UWidgetBase
		constexpr auto m_Txt_Level = 0x2e0; // UMirTextBlock*
		constexpr auto m_Txt_StatValue = 0x2e8; // UMirTextBlock*
		constexpr auto m_Img_Selected = 0x2f0; // UMirImage*
	}

	namespace n_UMM_NewInventory_Forge { // : UMM_NewInventory_Base
		constexpr auto m_InvenTab = 0x2e8; // UMM_NewInventoryTab*
		constexpr auto m_Inven = 0x2f0; // UMM_NewInventory*
		constexpr auto m_pNoticeBox = 0x2f8; // UHorizontalBox*
		constexpr auto m_pTxtNotice = 0x300; // UMirTextBlock*
	}

	namespace n_UIAPXsollaStoreModule { // : UIAPStoreModuleBase
		constexpr auto m_XsollaPayStationSubsystem = 0x1c0; // UGameInstanceSubsystem*
	}

	namespace n_ULandscapeSplinesComponent { // : UPrimitiveComponent
		constexpr auto ControlPoints = 0x418; // TArray<ULandscapeSplineControlPoint*>
		constexpr auto Segments = 0x428; // TArray<ULandscapeSplineSegment*>
		constexpr auto CookedForeignMeshComponents = 0x438; // TArray<UMeshComponent*>
	}

	namespace n_AMM_NonePlayer { // : AMM_CharacterPawnBase
		constexpr auto IsDesiredRoator = 0x420; // bool
		constexpr auto StartDesiredRoator = 0x424; // FRotator
		constexpr auto DestDesiredRoator = 0x430; // FRotator
		constexpr auto TotalDesiredElapsedTime = 0x43c; // float
		constexpr auto SumDesiredElapsedTime = 0x440; // float
		constexpr auto BeamParticleSystemComponent = 0x448; // UParticleSystemComponent*
		constexpr auto BodyMesh = 0x468; // USkeletalMeshComponent*
		constexpr auto m_MovementComponent = 0x470; // UMM_PawnMovementComponent*
		constexpr auto BasedMovement = 0x478; // FBasedMovementInfo
		constexpr auto m_bMultiTarget = 0x4a9; // bool
		constexpr auto WidgetComp = 0x4f8; // UMirWidgetComponent*
		constexpr auto WidgetComp_2D = 0x500; // UMirWidgetComponent*
		constexpr auto m_HeightCurve = 0x518; // UCurveFloat*
		constexpr auto PivotHead = 0x764; // FVector
		constexpr auto DetectRange = 0x770; // float
		constexpr auto AutoBattleShortRange = 0x774; // float
		constexpr auto AutoBattleMidRange = 0x778; // float
		constexpr auto ShakeTime = 0x77c; // float
		constexpr auto ShakeAngle = 0x780; // float
		constexpr auto NameTagOffset = 0x784; // FVector
		constexpr auto WalkSpeed = 0x790; // float
		constexpr auto RunSpeed = 0x794; // float
		constexpr auto CliffMoveSpeed = 0x798; // float
		constexpr auto m_fConstFlashTime = 0x79c; // float
		constexpr auto m_pBalloonUI = 0x7b0; // ASpeechBalloonUI*
		constexpr auto FSMComp = 0x7d8; // UMM_FSMComponent*
		constexpr auto m_pTarget = 0x830; // UMM_B_Target*
		constexpr auto m_pCharPointLight = 0x838; // UPointLightComponent*
		constexpr auto m_pCCComponent = 0x840; // UMM_CrowdControlComponent*
		constexpr auto ExecuteDecalComponent = 0x848; // UMM_ExecuteDecalComponent*
		constexpr auto m_arrCharMaterial = 0x860; // TArray<FCharMaterialData>
		constexpr auto m_MoveRate = 0x8c8; // float
		constexpr auto m_SpeedAniRate = 0x8cc; // float
		constexpr auto m_CharData = 0x980; // FCharStatistics
	}

	namespace n_UMM_Popup_DominionTitle { // : UWidgetBase
		constexpr auto m_pBtnBackGround = 0x2f8; // UMirButton*
		constexpr auto m_pToolTip = 0x300; // UMM_Common_ToolTipBtn*
		constexpr auto m_pBtnClose = 0x308; // UMM_Common_Btn_Symbol*
		constexpr auto m_pTxtTitle = 0x310; // UMirTextBlock*
		constexpr auto m_pScrollViewList = 0x318; // UMirScrollBox*
		constexpr auto m_iDominionID = 0x320; // int32_t
		constexpr auto m_iSelectedPBSID = 0x324; // int32_t
		constexpr auto m_iTargetUserUID = 0x328; // uint64_t
		constexpr auto m_strTargetName = 0x330; // FString
	}

	namespace n_UMM_Hud_Chat_AdvertiseMessage { // : UWidgetBase
		constexpr auto MessageOtherPadding = 0x2e0; // FMargin
		constexpr auto MessageMinePadding = 0x2f0; // FMargin
		constexpr auto Panel_Message = 0x300; // UPanelWidget*
		constexpr auto m_CharacterPanel = 0x308; // UWidget*
		constexpr auto m_OtherTalkBG = 0x310; // UWidget*
		constexpr auto m_MyTalkBG = 0x318; // UWidget*
		constexpr auto m_Img_CharaIcon = 0x320; // UMirImage*
		constexpr auto m_Txt_Level = 0x328; // UMirTextBlock*
		constexpr auto m_Txt_SendTime = 0x330; // UMirTextBlock*
		constexpr auto m_Txt_ChannelName = 0x338; // UMirTextBlock*
		constexpr auto m_Txt_Nickname = 0x340; // UMirTextBlock*
		constexpr auto m_Txt_Description = 0x348; // UMirTextBlock*
		constexpr auto Btn_Advertise = 0x350; // UMM_Common_Btn*
	}

	namespace n_UInputComponent { // : UActorComponent
		constexpr auto CachedKeyToActionInfo = 0x120; // TArray<FCachedKeyToActionInfo>
	}

	namespace n_UParticleModuleColor { // : UParticleModuleColorBase
		constexpr auto StartColor = 0x30; // FRawDistributionVector
		constexpr auto StartAlpha = 0x78; // FRawDistributionFloat
		constexpr auto bClampAlpha = 0xa8; // char : 1
	}

	namespace n_UMaterialExpressionConstant4Vector { // : UMaterialExpression
		constexpr auto Constant = 0x40; // FLinearColor
	}

	namespace n_UPaperTerrainComponent { // : UPrimitiveComponent
		constexpr auto TerrainMaterial = 0x418; // UPaperTerrainMaterial*
		constexpr auto bClosedSpline = 0x420; // bool
		constexpr auto bFilledSpline = 0x421; // bool
		constexpr auto AssociatedSpline = 0x428; // UPaperTerrainSplineComponent*
		constexpr auto RandomSeed = 0x430; // int32_t
		constexpr auto SegmentOverlapAmount = 0x434; // float
		constexpr auto TerrainColor = 0x438; // FLinearColor
		constexpr auto ReparamStepsPerSegment = 0x448; // int32_t
		constexpr auto SpriteCollisionDomain = 0x44c; // ESpriteCollisionMode
		constexpr auto CollisionThickness = 0x450; // float
		constexpr auto CachedBodySetup = 0x458; // UBodySetup*
	}

	namespace n_UMM_B_DailyWork { // : UWidgetBase
		constexpr auto DailyWorkList = 0x2f0; // UMM_DailyWork_List*
		constexpr auto DailyWorkProgress = 0x2f8; // UMM_DailyWork_Progress*
	}

	namespace n_UMM_Dominion_Base_StrongPoint { // : UWidgetBase
		constexpr auto m_pGuildIcon = 0x308; // UMM_GuildIcon*
		constexpr auto m_pTxtGuildName = 0x310; // UMirTextBlock*
		constexpr auto m_pTxtGuildMaster = 0x318; // UMirTextBlock*
		constexpr auto m_pBtnGuildInfo = 0x320; // UMM_Common_Btn_Symbol*
		constexpr auto m_pTxtGuildEmpty = 0x328; // UMirTextBlock*
		constexpr auto m_pSwitcherGuild = 0x330; // UWidgetSwitcher*
		constexpr auto m_pTxtOccupationDur = 0x338; // UMirTextBlock*
		constexpr auto m_pTxtOccupationState = 0x340; // UMirTextBlock*
		constexpr auto m_pTxtBlackIronValue = 0x348; // UMirTextBlock*
		constexpr auto m_pTxtStorageBlackIronValue = 0x350; // UMirTextBlock*
		constexpr auto m_pTxtSellBlackIronValue = 0x358; // UMirTextBlock*
		constexpr auto m_pBtnBlackIronStorage = 0x360; // UMM_Common_Btn*
		constexpr auto img_black_iron_indicator = 0x368; // UMirImage*
		constexpr auto m_pBtnInfoBlackIron = 0x370; // UMirButton*
		constexpr auto m_pBtnInfoBlackIronStorage = 0x378; // UMirButton*
		constexpr auto m_pBtnInfoBlackIronSell = 0x380; // UMirButton*
		constexpr auto m_pEmptyCommonBoard = 0x388; // UMM_Common_Board_Notice*
		constexpr auto m_pBtnTranslation_Notice = 0x390; // UMM_Common_Btn_Translation*
		constexpr auto m_pBtn_Send_Notice = 0x398; // UMM_Common_Btn*
		constexpr auto m_pScr_Edit_Notice = 0x3a0; // UMirScrollBox*
		constexpr auto m_pEdit_Notice = 0x3a8; // UMirMultiLineEditableText*
		constexpr auto m_pScr_Txt_Notice = 0x3b0; // UMirScrollBox*
		constexpr auto m_pTxt_Notice = 0x3b8; // UMirTextBlock*
	}

	namespace n_UAppleLoginSubSystem { // : ULoginSubSystemBase
		constexpr auto m_WindowFirebaseCredential = 0x40; // UFirebaseCredential*
	}

	namespace n_UMM_Popup_CollectItemRegist { // : UWidgetBase
		constexpr auto m_Txt_Title = 0x2f0; // UMirTextBlock*
		constexpr auto m_Btn_Close = 0x2f8; // UMM_Common_Btn_Symbol*
		constexpr auto m_Txt_Registerable = 0x300; // UMirTextBlock*
		constexpr auto m_ListView_CollectionItemList = 0x308; // UMirListView*
		constexpr auto m_Txt_Warning = 0x310; // UMirTextBlock*
		constexpr auto m_Txt_Register = 0x318; // UMirTextBlock*
		constexpr auto m_Btn_Cancel = 0x320; // UMM_Common_Btn*
		constexpr auto m_Btn_Ok = 0x328; // UMM_Common_Btn*
		constexpr auto m_RegistStrID = 0x330; // int32_t
		constexpr auto m_RegistWarningStrID = 0x334; // int32_t
		constexpr auto m_CanYouRegistStrID = 0x338; // int32_t
		constexpr auto m_CheckStrID = 0x33c; // int32_t
		constexpr auto m_CancelStrID = 0x340; // int32_t
		constexpr auto m_PleaseSelectStrID = 0x344; // int32_t
		constexpr auto m_CollectInfoStr = 0x348; // int32_t
		constexpr auto m_ReleaseLockToRegistStr = 0x34c; // int32_t
		constexpr auto m_arCollectionItemSlotObj = 0x368; // TArray<UCollectionItemSlotObj*>
	}

	namespace n_UButton { // : UContentWidget
		constexpr auto Style = 0x120; // USlateWidgetStyleAsset*
		constexpr auto WidgetStyle = 0x128; // FButtonStyle
		constexpr auto ColorAndOpacity = 0x3a0; // FLinearColor
		constexpr auto BackgroundColor = 0x3b0; // FLinearColor
		constexpr auto ClickMethod = 0x3c0; // EButtonClickMethod
		constexpr auto TouchMethod = 0x3c1; // EButtonTouchMethod
		constexpr auto PressMethod = 0x3c2; // EButtonPressMethod
		constexpr auto IsFocusable = 0x3c3; // bool
		constexpr auto DontHandledEvent = 0x3c4; // bool
		constexpr auto OnClicked = 0x3c8; // FScriptMulticastDelegate
		constexpr auto OnPressed = 0x3d8; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x3e8; // FScriptMulticastDelegate
		constexpr auto OnHovered = 0x3f8; // FScriptMulticastDelegate
		constexpr auto OnUnhovered = 0x408; // FScriptMulticastDelegate
	}

	namespace n_UMaterialExpressionShadingModel { // : UMaterialExpression
		constexpr auto ShadingModel = 0x40; // EMaterialShadingModel
	}

	namespace n_UMM_Friend_List { // : UWidgetBase
		constexpr auto m_ListView_FriendList = 0x2f0; // UMirListView*
		constexpr auto m_arFriendSlotObj = 0x2f8; // TArray<UFriendSlotObj*>
	}

	namespace n_UMM_Hud_Chat_Macro { // : UWidgetBase
		constexpr auto m_pParentWidget = 0x260; // UWidgetBase*
		constexpr auto m_arChildWidget = 0x268; // TArray<TWeakObjectPtr<UWidgetBase>>
		constexpr auto m_arMirTextBlock = 0x280; // TArray<TWeakObjectPtr<UMirTextBlock>>
		constexpr auto m_arMirRichTextBlock = 0x290; // TArray<TWeakObjectPtr<UMirRichTextBlock>>
		constexpr auto m_arMirEditableText = 0x2a0; // TArray<TWeakObjectPtr<UMirEditableText>>
		constexpr auto m_arMirImage = 0x2b0; // TArray<TWeakObjectPtr<UMirImage>>
	}

	namespace n_UMM_HudSlotTargetList { // : UWidgetBase
		constexpr auto imgLine = 0x2e0; // UMirImage*
		constexpr auto imgSelect = 0x2e8; // UMirImage*
		constexpr auto imgSelect2 = 0x2f0; // UMirImage*
		constexpr auto imgIcon = 0x2f8; // UMirImage*
		constexpr auto txtName = 0x300; // UMirTextBlock*
		constexpr auto btnMain = 0x308; // UMirButton*
		constexpr auto prgHp = 0x310; // UMirProgressBar*
	}

	namespace n_UMM_ClosedTraining_Info { // : UWidgetBase
		constexpr auto m_Slot_BaseSphere = 0x2f0; // UMM_ClosedTraining_Slot_BaseSphere*
		constexpr auto m_Img_SlotColors = 0x2f8; // TArray<UMirImage*>
		constexpr auto m_Txt_CurLevel = 0x308; // UMirTextBlock*
		constexpr auto m_Panel_MaxLevelBtn = 0x310; // UMirCanvasPanel*
		constexpr auto m_Btn_MaxLevelDetail = 0x318; // UMM_Common_Btn_Symbol*
		constexpr auto m_Panel_NextLevelInfo = 0x320; // UHorizontalBox*
		constexpr auto m_Txt_NextLevel = 0x328; // UMirTextBlock*
		constexpr auto m_Btn_NextLevelDetail = 0x330; // UMM_Common_Btn_Symbol*
		constexpr auto m_Panel_Ability = 0x338; // UMirCanvasPanel*
		constexpr auto m_Img_AbilityIcon = 0x340; // UMirImage*
		constexpr auto m_Txt_AbilityName = 0x348; // UMirTextBlock*
		constexpr auto m_Txt_CurAbilityValue = 0x350; // UMirTextBlock*
		constexpr auto m_Img_Arrow = 0x358; // UMirImage*
		constexpr auto m_Txt_NextAbilityValue = 0x360; // UMirTextBlock*
		constexpr auto m_Horizon_Percent = 0x368; // UHorizontalBox*
		constexpr auto m_RTxt_Success = 0x370; // UMirRichTextBlock*
		constexpr auto m_RTxt_Panelty = 0x378; // UMirRichTextBlock*
		constexpr auto m_Btn_Tooltip = 0x380; // UMM_Common_Btn_Symbol*
		constexpr auto m_RTxt_NoticeCharLevel = 0x388; // UMirRichTextBlock*
		constexpr auto m_Txt_NoticeMaxLevel = 0x390; // UMirTextBlock*
		constexpr auto m_Panel_Mat = 0x398; // UMirCanvasPanel*
		constexpr auto m_Slot_Mats = 0x3a0; // TArray<UMM_Slot_Material_Item*>
		constexpr auto m_Btn_LevelUp = 0x3b0; // UMM_Common_Btn_Cost*
		constexpr auto m_Ani_SphereList = 0x3b8; // TArray<UWidgetAnimation*>
	}

	namespace n_UNavArea_Obstacle { // : UNavArea
		constexpr auto DefaultCost = 0x30; // float
		constexpr auto FixedAreaEnteringCost = 0x34; // float
		constexpr auto DrawColor = 0x38; // FColor
		constexpr auto SupportedAgents = 0x3c; // FNavAgentSelector
		constexpr auto bSupportsAgent0 = 0x40; // char : 1
		constexpr auto bSupportsAgent1 = 0x40; // char : 1
		constexpr auto bSupportsAgent2 = 0x40; // char : 1
		constexpr auto bSupportsAgent3 = 0x40; // char : 1
		constexpr auto bSupportsAgent4 = 0x40; // char : 1
		constexpr auto bSupportsAgent5 = 0x40; // char : 1
		constexpr auto bSupportsAgent6 = 0x40; // char : 1
		constexpr auto bSupportsAgent7 = 0x40; // char : 1
		constexpr auto bSupportsAgent8 = 0x41; // char : 1
		constexpr auto bSupportsAgent9 = 0x41; // char : 1
		constexpr auto bSupportsAgent10 = 0x41; // char : 1
		constexpr auto bSupportsAgent11 = 0x41; // char : 1
		constexpr auto bSupportsAgent12 = 0x41; // char : 1
		constexpr auto bSupportsAgent13 = 0x41; // char : 1
		constexpr auto bSupportsAgent14 = 0x41; // char : 1
		constexpr auto bSupportsAgent15 = 0x41; // char : 1
	}

	namespace n_ACameraActor { // : AActor
		constexpr auto AutoActivateForPlayer = 0x218; // EAutoReceiveInput
		constexpr auto CameraComponent = 0x220; // UCameraComponent*
		constexpr auto SceneComponent = 0x228; // USceneComponent*
		constexpr auto bConstrainAspectRatio = 0x238; // char : 1
		constexpr auto AspectRatio = 0x23c; // float
		constexpr auto FOVAngle = 0x240; // float
		constexpr auto PostProcessBlendWeight = 0x244; // float
		constexpr auto PostProcessSettings = 0x250; // FPostProcessSettings
	}

	namespace n_UBTTaskNode { // : UBTNode
		constexpr auto Services = 0x58; // TArray<UBTService*>
		constexpr auto bIgnoreRestartSelf = 0x68; // char : 1
	}

	namespace n_UMM_PopUp_ItemInfo_Simple { // : UWidgetBase
		constexpr auto m_CloseBtn = 0x2f0; // UMM_Common_Btn_Symbol*
		constexpr auto m_Grid_Item_Info = 0x2f8; // UGridPanel*
		constexpr auto m_Grid_Btn = 0x300; // UGridPanel*
		constexpr auto m_LineGrid = 0x308; // UMirCanvasPanel*
		constexpr auto m_GetWayBtn = 0x310; // UMM_Common_Btn*
		constexpr auto m_CostBtn = 0x318; // UMM_Common_Btn_Cost*
		constexpr auto m_ScrollBox = 0x320; // UMirScrollBox*
		constexpr auto m_NameTxt = 0x328; // UMirTextBlock*
		constexpr auto m_SmeltingLv = 0x330; // UMirTextBlock*
		constexpr auto m_GridTier = 0x338; // UPanelWidget*
		constexpr auto m_GridGrade = 0x340; // UPanelWidget*
		constexpr auto m_TierImage = 0x348; // UMirImage*
		constexpr auto m_Grade = 0x350; // UMirTextBlock*
		constexpr auto m_InventorySlot = 0x358; // UMM_Slot_Inventory*
		constexpr auto m_Combat_Ability = 0x360; // UMM_PopUp_ItemInfo_Ability*
		constexpr auto m_Grid_Ability = 0x368; // UPanelWidget*
		constexpr auto m_Img_Line = 0x370; // UImage*
		constexpr auto m_Ability = 0x378; // TArray<UMM_PopUp_ItemInfo_Ability*>
		constexpr auto m_CombatTxt = 0x388; // UTextBlock*
		constexpr auto m_ItemName = 0x390; // UTextBlock*
		constexpr auto m_GridEquip = 0x398; // UPanelWidget*
		constexpr auto m_Grid_ItemName = 0x3a0; // UPanelWidget*
		constexpr auto m_EquipLvTxt = 0x3a8; // UTextBlock*
		constexpr auto m_EquipLv = 0x3b0; // UTextBlock*
		constexpr auto m_ItemDesc = 0x3b8; // UTextBlock*
		constexpr auto m_Grid_UnTrade = 0x3c0; // UPanelWidget*
		constexpr auto m_Img_Line_TermTime = 0x3c8; // UImage*
		constexpr auto m_Grid_TermTime = 0x3d0; // UPanelWidget*
		constexpr auto m_Txt_TermTime = 0x3d8; // UMirTextBlock*
		constexpr auto m_Grid_Trade = 0x3e0; // UOverlay*
		constexpr auto m_Btn_BGMain = 0x3e8; // UMirButton*
		constexpr auto m_Spc_ContentsSpace = 0x3f0; // USpacer*
		constexpr auto m_Spc_Btn = 0x3f8; // USpacer*
		constexpr auto m_SelectItemTID = 0x400; // int32_t
		constexpr auto m_CostType = 0x404; // ECostType
		constexpr auto m_EquipLvToStr = 0x408; // int32_t
		constexpr auto m_UseLvToStr = 0x40c; // int32_t
	}

	namespace n_UMM_UIAction_TermItem { // : UMM_UIAction
		constexpr auto DisplayWarning_Login = 0x78; // bool
		constexpr auto STR_MSGID_WARNNING_24HOUR = 0x7c; // int32_t
	}

	namespace n_UParticleModuleOrientationBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x29; // char : 1
		constexpr auto LODDuplicate = 0x29; // char : 1
		constexpr auto bSupportsRandomSeed = 0x29; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x29; // char : 1
		constexpr auto LODValidity = 0x2a; // char
	}

	namespace n_UMM_Mastery_Left { // : UWidgetBase
		constexpr auto m_arMasterySlot = 0x2f0; // TArray<UMM_Mastery_Slot*>
	}

	namespace n_UMaterialExpressionRuntimeVirtualTextureReplace { // : UMaterialExpression
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto VirtualTextureOutput = 0x54; // FExpressionInput
	}

	namespace n_UParticleModuleRotation { // : UParticleModuleRotationBase
		constexpr auto StartRotation = 0x30; // FRawDistributionFloat
	}

	namespace n_UEditableGeometryCollectionAdapter { // : UEditableMeshAdapter
		constexpr auto GeometryCollection = 0x28; // UGeometryCollection*
		constexpr auto OriginalGeometryCollection = 0x30; // UGeometryCollection*
		constexpr auto GeometryCollectionLODIndex = 0x38; // int32_t
	}

	namespace n_UBuffInfoSlotWidget { // : UWidgetBase
		constexpr auto m_pParentWidget = 0x260; // UWidgetBase*
		constexpr auto m_arChildWidget = 0x268; // TArray<TWeakObjectPtr<UWidgetBase>>
		constexpr auto m_arMirTextBlock = 0x280; // TArray<TWeakObjectPtr<UMirTextBlock>>
		constexpr auto m_arMirRichTextBlock = 0x290; // TArray<TWeakObjectPtr<UMirRichTextBlock>>
		constexpr auto m_arMirEditableText = 0x2a0; // TArray<TWeakObjectPtr<UMirEditableText>>
		constexpr auto m_arMirImage = 0x2b0; // TArray<TWeakObjectPtr<UMirImage>>
	}

	namespace n_UMM_PopupGuildMembers { // : UWidgetBase
		constexpr auto btn_bg_close = 0x2f0; // UMirButton*
		constexpr auto btn_close = 0x2f8; // UMM_Common_Btn_Symbol*
		constexpr auto btn_bg_grade_close = 0x300; // UMirButton*
		constexpr auto btn_grade_popup_open = 0x308; // UMM_Common_Btn_Symbol*
		constexpr auto btn_grade_close = 0x310; // UMM_Common_Btn_Symbol*
		constexpr auto btn_partner_popup_open = 0x318; // UMM_Common_Btn_Symbol*
		constexpr auto btn_authority = 0x320; // UMirButton*
		constexpr auto btn_bg_authority_close = 0x328; // UMirButton*
		constexpr auto btn_authority_popup_open = 0x330; // UMM_Common_Btn_Symbol*
		constexpr auto btn_authority_close = 0x338; // UMM_Common_Btn_Symbol*
		constexpr auto cp_popup_grade = 0x340; // UMirCanvasPanel*
		constexpr auto cp_popup_authority = 0x348; // UMirCanvasPanel*
		constexpr auto btn_grade_cancel = 0x350; // UMM_Common_Btn*
		constexpr auto btn_grade_confirm = 0x358; // UMM_Common_Btn*
		constexpr auto btn_authority_confirm = 0x360; // UMM_Common_Btn*
		constexpr auto img_authority_selected_00 = 0x368; // UMirImage*
		constexpr auto img_authority_selected_01 = 0x370; // UMirImage*
		constexpr auto img_authority_selected_02 = 0x378; // UMirImage*
		constexpr auto img_authority_selected_03 = 0x380; // UMirImage*
		constexpr auto toggle_00 = 0x388; // UMM_Common_ToggleBtn*
		constexpr auto toggle_01 = 0x390; // UMM_Common_ToggleBtn*
		constexpr auto toggle_02 = 0x398; // UMM_Common_ToggleBtn*
		constexpr auto toggle_03 = 0x3a0; // UMM_Common_ToggleBtn*
		constexpr auto Portrait = 0x3a8; // UMM_GuildMemberPortrait*
		constexpr auto txt_nickname = 0x3b0; // UMirTextBlock*
		constexpr auto txt_custom_title = 0x3b8; // UMirTextBlock*
		constexpr auto txt_level = 0x3c0; // UMirTextBlock*
		constexpr auto img_combat_power = 0x3c8; // UMirImage*
		constexpr auto txt_combat_power = 0x3d0; // UMirTextBlock*
		constexpr auto edit_custom_title = 0x3d8; // UEditableText*
		constexpr auto btn_edit = 0x3e0; // UMM_Common_Btn_Symbol*
		constexpr auto btn_edit_reset = 0x3e8; // UMM_Common_Btn_Symbol*
		constexpr auto txt_grade = 0x3f0; // UMirTextBlock*
		constexpr auto txt_buff = 0x3f8; // UMirTextBlock*
		constexpr auto txt_partner = 0x400; // UMirTextBlock*
		constexpr auto hb_grade = 0x408; // UHorizontalBox*
		constexpr auto btn_confirm = 0x410; // UMM_Common_Btn*
		constexpr auto btn_kick = 0x418; // UMM_Common_Btn*
		constexpr auto btn_delegate = 0x420; // UMM_Common_Btn*
		constexpr auto Btn_Detail = 0x428; // UMM_Common_Btn*
		constexpr auto overlay_authority_members = 0x430; // UOverlay*
		constexpr auto overlay_authority_inventory = 0x438; // UOverlay*
		constexpr auto overlay_authority_diplomacy = 0x440; // UOverlay*
		constexpr auto overlay_authority_war = 0x448; // UOverlay*
		constexpr auto img_online = 0x450; // UMirImage*
		constexpr auto txt_log_out_time = 0x458; // UMirTextBlock*
		constexpr auto cp_partner = 0x460; // UMirCanvasPanel*
		constexpr auto cp_authority = 0x468; // UMirCanvasPanel*
		constexpr auto mImgLock = 0x470; // UMirImage*
	}

	namespace n_UMaterialExpressionArctangent { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_USkyLightComponent { // : ULightComponentBase
		constexpr auto SourceType = 0x250; // ESkyLightSourceType
		constexpr auto Cubemap = 0x258; // UTextureCube*
		constexpr auto SourceCubemapAngle = 0x260; // float
		constexpr auto CubemapResolution = 0x264; // int32_t
		constexpr auto SkyDistanceThreshold = 0x268; // float
		constexpr auto bCaptureEmissiveOnly = 0x26c; // bool
		constexpr auto bLowerHemisphereIsBlack = 0x26d; // bool
		constexpr auto LowerHemisphereColor = 0x270; // FLinearColor
		constexpr auto OcclusionMaxDistance = 0x280; // float
		constexpr auto Contrast = 0x284; // float
		constexpr auto OcclusionExponent = 0x288; // float
		constexpr auto MinOcclusion = 0x28c; // float
		constexpr auto OcclusionTint = 0x290; // FColor
		constexpr auto OcclusionCombineMode = 0x294; // EOcclusionCombineMode
		constexpr auto BlendDestinationCubemap = 0x338; // UTextureCube*
	}

	namespace n_UMM_Hud_Chat_QuickMove { // : UWidgetBase
		constexpr auto m_Panel_QuickChat = 0x2e0; // UPanelWidget*
		constexpr auto m_Txt_Prefix = 0x2e8; // UMirTextBlock*
		constexpr auto m_Txt_Nickname = 0x2f0; // UMirTextBlock*
		constexpr auto m_Txt_Message = 0x2f8; // UMirTextBlock*
		constexpr auto m_Btn_QuickChat = 0x300; // UMirButton*
		constexpr auto m_Panel_QuickSimple = 0x308; // UPanelWidget*
		constexpr auto m_Btn_QuickSimple = 0x310; // UMirButton*
	}

	namespace n_UMM_UIAction_DailyWork { // : UMM_UIAction
		constexpr auto STRING_ERROR_CONTENTS_OPEN = 0x260; // int32_t
		constexpr auto STRING_ERROR_CONTENTS_RUNNING = 0x264; // int32_t
		constexpr auto STRING_DAILY_WORK_PROGRESS = 0x268; // int32_t
		constexpr auto STRING_DAILY_WORK_RECEIVEALL = 0x26c; // int32_t
		constexpr auto STRING_ERROR_END_QUEST = 0x270; // int32_t
		constexpr auto STRING_ERROR_PLUS_REWARD_NONE = 0x274; // int32_t
		constexpr auto STRING_ERROR_PLUS_REWARD_END = 0x278; // int32_t
		constexpr auto STRING_ERROR_RECEIVEALL = 0x27c; // int32_t
	}

	namespace n_ULandscapeHeightfieldCollisionComponent { // : UPrimitiveComponent
		constexpr auto ComponentLayerInfos = 0x418; // TArray<ULandscapeLayerInfoObject*>
		constexpr auto SectionBaseX = 0x428; // int32_t
		constexpr auto SectionBaseY = 0x42c; // int32_t
		constexpr auto CollisionSizeQuads = 0x430; // int32_t
		constexpr auto CollisionScale = 0x434; // float
		constexpr auto SimpleCollisionSizeQuads = 0x438; // int32_t
		constexpr auto CollisionQuadFlags = 0x440; // TArray<char>
		constexpr auto HeightfieldGuid = 0x450; // FGuid
		constexpr auto CachedLocalBox = 0x460; // FBox
		constexpr auto RenderComponent = 0x47c; // ULandscapeComponent*
		constexpr auto CookedPhysicalMaterials = 0x4a8; // TArray<UPhysicalMaterial*>
	}

	namespace n_UMaterialExpressionParticleMacroUV { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UFirebaseMessageInitlize { // : UBlueprintAsyncActionBase
		constexpr auto OnMessageRcv = 0x30; // FScriptMulticastDelegate
		constexpr auto OnTokenRcv = 0x40; // FScriptMulticastDelegate
	}

	namespace n_UHorizontalBoxSlot { // : UPanelSlot
		constexpr auto Padding = 0x40; // FMargin
		constexpr auto Size = 0x50; // FSlateChildSize
		constexpr auto HorizontalAlignment = 0x58; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x59; // EVerticalAlignment
	}

	namespace n_UCheckedStateBinding { // : UPropertyBinding
		constexpr auto SourceObject = 0x28; // TWeakObjectPtr<UObject>
		constexpr auto SourcePath = 0x30; // FDynamicPropertyPath
		constexpr auto DestinationProperty = 0x58; // FName
	}

	namespace n_UScrollBoxWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto ScrollBoxStyle = 0x30; // FScrollBoxStyle
	}

	namespace n_UInterpTrackParticleReplay { // : UInterpTrack
		constexpr auto TrackKeys = 0x70; // TArray<FParticleReplayTrackKey>
	}

	namespace n_UMaterialInstanceDynamic { // : UMaterialInstance
		constexpr auto PhysMaterial = 0x88; // UPhysicalMaterial*
		constexpr auto Parent = 0x90; // UMaterialInterface*
		constexpr auto bHasStaticPermutationResource = 0x98; // char : 1
		constexpr auto bOverrideSubsurfaceProfile = 0x98; // char : 1
		constexpr auto ScalarParameterValues = 0xa0; // TArray<FScalarParameterValue>
		constexpr auto VectorParameterValues = 0xb0; // TArray<FVectorParameterValue>
		constexpr auto TextureParameterValues = 0xc0; // TArray<FTextureParameterValue>
		constexpr auto RuntimeVirtualTextureParameterValues = 0xd0; // TArray<FRuntimeVirtualTextureParameterValue>
		constexpr auto FontParameterValues = 0xe0; // TArray<FFontParameterValue>
		constexpr auto BasePropertyOverrides = 0xf0; // FMaterialInstanceBasePropertyOverrides
		constexpr auto PermutationTextureReferences = 0x108; // TArray<UObject*>
		constexpr auto StaticParameters = 0x118; // FStaticParameterSet
	}

	namespace n_UMM_Popup_UnlockedPetStatInfo { // : UWidgetBase
		constexpr auto m_StatColor = 0x2e0; // FLinearColor
		constexpr auto m_StatPadding = 0x2f0; // FMargin
		constexpr auto m_Btn_Screen = 0x300; // UMirButton*
		constexpr auto m_CB_Close = 0x308; // UMM_Common_Btn_Symbol*
		constexpr auto m_Scr_Stat = 0x310; // UMirScrollBox*
		constexpr auto m_EmptyNotice = 0x318; // UWidget*
	}

	namespace n_UNavigationInvokerComponent { // : UActorComponent
		constexpr auto TileGenerationRadius = 0xb0; // float
		constexpr auto TileRemovalRadius = 0xb4; // float
	}

	namespace n_UMM_CheckBox_Switch { // : UWidgetBase
		constexpr auto m_WidgetSwitcher = 0x2f0; // UWidgetSwitcher*
		constexpr auto m_Btn_Main = 0x2f8; // UMirButton*
		constexpr auto m_ImgOn = 0x300; // UMirImage*
		constexpr auto m_ImgOff = 0x308; // UMirImage*
		constexpr auto m_Txt_On = 0x310; // UMirTextBlock*
		constexpr auto m_Txt_Off = 0x318; // UMirTextBlock*
		constexpr auto m_ESwitchStatus = 0x320; // ESwitchBox
	}

	namespace n_APlayerCameraManager { // : AActor
		constexpr auto PCOwner = 0x218; // APlayerController*
		constexpr auto TransformComponent = 0x220; // USceneComponent*
		constexpr auto DefaultFOV = 0x230; // float
		constexpr auto DefaultOrthoWidth = 0x238; // float
		constexpr auto DefaultAspectRatio = 0x240; // float
		constexpr auto CameraCache = 0x290; // FCameraCacheEntry
		constexpr auto LastFrameCameraCache = 0x860; // FCameraCacheEntry
		constexpr auto ViewTarget = 0xe30; // FTViewTarget
		constexpr auto PendingViewTarget = 0x1410; // FTViewTarget
		constexpr auto CameraCachePrivate = 0x1a10; // FCameraCacheEntry
		constexpr auto LastFrameCameraCachePrivate = 0x1fe0; // FCameraCacheEntry
		constexpr auto ModifierList = 0x25b0; // TArray<UCameraModifier*>
		constexpr auto DefaultModifiers = 0x25c0; // TArray<UCameraModifier*>
		constexpr auto FreeCamDistance = 0x25d0; // float
		constexpr auto FreeCamOffset = 0x25d4; // FVector
		constexpr auto ViewTargetOffset = 0x25e0; // FVector
		constexpr auto CameraLensEffects = 0x2600; // TArray<AEmitterCameraLensEffectBase*>
		constexpr auto CachedCameraShakeMod = 0x2610; // UCameraModifier_CameraShake*
		constexpr auto AnimInstPool = 0x2618; // UCameraAnimInst* [0x8]
		constexpr auto PostProcessBlendCache = 0x2658; // TArray<FPostProcessSettings>
		constexpr auto ActiveAnims = 0x2678; // TArray<UCameraAnimInst*>
		constexpr auto FreeAnims = 0x2688; // TArray<UCameraAnimInst*>
		constexpr auto AnimCameraActor = 0x2698; // ACameraActor*
		constexpr auto bIsOrthographic = 0x26a0; // char : 1
		constexpr auto bDefaultConstrainAspectRatio = 0x26a0; // char : 1
		constexpr auto bClientSimulatingViewTarget = 0x26a0; // char : 1
		constexpr auto bUseClientSideCameraUpdates = 0x26a0; // char : 1
		constexpr auto bGameCameraCutThisFrame = 0x26a1; // char : 1
		constexpr auto ViewPitchMin = 0x26a4; // float
		constexpr auto ViewPitchMax = 0x26a8; // float
		constexpr auto ViewYawMin = 0x26ac; // float
		constexpr auto ViewYawMax = 0x26b0; // float
		constexpr auto ViewRollMin = 0x26b4; // float
		constexpr auto ViewRollMax = 0x26b8; // float
		constexpr auto ServerUpdateCameraTimeout = 0x26c0; // float
	}

	namespace n_UMovieSceneSubSection { // : UMovieSceneSection
		constexpr auto Parameters = 0xe0; // FMovieSceneSectionParameters
		constexpr auto StartOffset = 0xf8; // float
		constexpr auto TimeScale = 0xfc; // float
		constexpr auto PrerollTime = 0x100; // float
		constexpr auto SubSequence = 0x108; // UMovieSceneSequence*
		constexpr auto ActorToRecord = 0x110; // AActor*
		constexpr auto TargetSequenceName = 0x130; // FString
		constexpr auto TargetPathToRecordTo = 0x140; // FDirectoryPath
	}

	namespace n_UParticleModuleRequired { // : UParticleModule
		constexpr auto Material = 0x30; // UMaterialInterface*
		constexpr auto MinFacingCameraBlendDistance = 0x38; // float
		constexpr auto MaxFacingCameraBlendDistance = 0x3c; // float
		constexpr auto EmitterOrigin = 0x40; // FVector
		constexpr auto EmitterRotation = 0x4c; // FRotator
		constexpr auto ScreenAlignment = 0x58; // EParticleScreenAlignment
		constexpr auto bUseLocalSpace = 0x59; // char : 1
		constexpr auto bKillOnDeactivate = 0x59; // char : 1
		constexpr auto bKillOnCompleted = 0x59; // char : 1
		constexpr auto SortMode = 0x5a; // EParticleSortMode
		constexpr auto bUseLegacyEmitterTime = 0x5b; // char : 1
		constexpr auto bRemoveHMDRoll = 0x5b; // char : 1
		constexpr auto bEmitterDurationUseRange = 0x5b; // char : 1
		constexpr auto EmitterDuration = 0x5c; // float
		constexpr auto SpawnRate = 0x60; // FRawDistributionFloat
		constexpr auto BurstList = 0x90; // TArray<FParticleBurst>
		constexpr auto EmitterDelay = 0xa0; // float
		constexpr auto EmitterDelayLow = 0xa4; // float
		constexpr auto bDelayFirstLoopOnly = 0xa8; // char : 1
		constexpr auto InterpolationMethod = 0xa9; // EParticleSubUVInterpMethod
		constexpr auto bScaleUV = 0xaa; // char : 1
		constexpr auto bEmitterDelayUseRange = 0xaa; // char : 1
		constexpr auto ParticleBurstMethod = 0xab; // EParticleBurstMethod
		constexpr auto bOverrideSystemMacroUV = 0xac; // char : 1
		constexpr auto bUseMaxDrawCount = 0xac; // char : 1
		constexpr auto OpacitySourceMode = 0xad; // EOpacitySourceMode
		constexpr auto EmitterNormalsMode = 0xae; // EEmitterNormalsMode
		constexpr auto bOrbitModuleAffectsVelocityAlignment = 0xaf; // char : 1
		constexpr auto SubImages_Horizontal = 0xb0; // int32_t
		constexpr auto SubImages_Vertical = 0xb4; // int32_t
		constexpr auto RandomImageTime = 0xb8; // float
		constexpr auto RandomImageChanges = 0xbc; // int32_t
		constexpr auto MacroUVPosition = 0xc0; // FVector
		constexpr auto MacroUVRadius = 0xcc; // float
		constexpr auto UVFlippingMode = 0xd0; // EParticleUVFlipMode
		constexpr auto BoundingMode = 0xd1; // ESubUVBoundingVertexCount
		constexpr auto bDurationRecalcEachLoop = 0xd2; // char : 1
		constexpr auto NormalsSphereCenter = 0xd4; // FVector
		constexpr auto AlphaThreshold = 0xe0; // float
		constexpr auto EmitterLoops = 0xe4; // int32_t
		constexpr auto CutoutTexture = 0xe8; // UTexture2D*
		constexpr auto MaxDrawCount = 0xf0; // int32_t
		constexpr auto EmitterDurationLow = 0xf4; // float
		constexpr auto NormalsCylinderDirection = 0xf8; // FVector
		constexpr auto NamedMaterialOverrides = 0x108; // TArray<FName>
	}

	namespace n_UEnvQueryTest_Trace { // : UEnvQueryTest
		constexpr auto TraceData = 0x1c0; // FEnvTraceData
		constexpr auto TraceFromContext = 0x1f0; // FAIDataProviderBoolValue
		constexpr auto ItemHeightOffset = 0x220; // FAIDataProviderFloatValue
		constexpr auto ContextHeightOffset = 0x250; // FAIDataProviderFloatValue
		constexpr auto Context = 0x280; // UEnvQueryContext*
	}

	namespace n_UInterpTrackToggle { // : UInterpTrack
		constexpr auto ToggleTrack = 0x70; // TArray<FToggleTrackKey>
		constexpr auto bActivateSystemEachUpdate = 0x80; // char : 1
		constexpr auto bActivateWithJustAttachedFlag = 0x80; // char : 1
		constexpr auto bFireEventsWhenForwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenJumpingForwards = 0x80; // char : 1
	}

	namespace n_UNavCollisionBase { // : UObject
		constexpr auto bIsDynamicObstacle = 0x28; // char : 1
	}

	namespace n_UMaterialExpressionReflectionVectorWS { // : UMaterialExpression
		constexpr auto CustomWorldNormal = 0x40; // FExpressionInput
		constexpr auto bNormalizeCustomWorldNormal = 0x54; // char : 1
	}

	namespace n_UMaterialExpressionNoise { // : UMaterialExpression
		constexpr auto Position = 0x40; // FExpressionInput
		constexpr auto FilterWidth = 0x54; // FExpressionInput
		constexpr auto Scale = 0x68; // float
		constexpr auto quality = 0x6c; // int32_t
		constexpr auto NoiseFunction = 0x70; // ENoiseFunction
		constexpr auto bTurbulence = 0x74; // char : 1
		constexpr auto Levels = 0x78; // int32_t
		constexpr auto OutputMin = 0x7c; // float
		constexpr auto OutputMax = 0x80; // float
		constexpr auto LevelScale = 0x84; // float
		constexpr auto bTiling = 0x88; // char : 1
		constexpr auto RepeatSize = 0x8c; // uint32_t
	}

	namespace n_UAtmosphericFogComponent { // : USceneComponent
		constexpr auto SunMultiplier = 0x220; // float
		constexpr auto FogMultiplier = 0x224; // float
		constexpr auto DensityMultiplier = 0x228; // float
		constexpr auto DensityOffset = 0x22c; // float
		constexpr auto DistanceScale = 0x230; // float
		constexpr auto AltitudeScale = 0x234; // float
		constexpr auto DistanceOffset = 0x238; // float
		constexpr auto GroundOffset = 0x23c; // float
		constexpr auto StartDistance = 0x240; // float
		constexpr auto SunDiscScale = 0x244; // float
		constexpr auto DefaultBrightness = 0x248; // float
		constexpr auto DefaultLightColor = 0x24c; // FColor
		constexpr auto bDisableSunDisk = 0x250; // char : 1
		constexpr auto bAtmosphereAffectsSunIlluminance = 0x250; // char : 1
		constexpr auto bDisableGroundScattering = 0x250; // char : 1
		constexpr auto PrecomputeParams = 0x254; // FAtmospherePrecomputeParameters
		constexpr auto TransmittanceTexture = 0x280; // UTexture2D*
		constexpr auto IrradianceTexture = 0x288; // UTexture2D*
	}

	namespace n_UMockDataMeshTrackerComponent { // : USceneComponent
		constexpr auto OnMeshTrackerUpdated = 0x220; // FScriptMulticastDelegate
		constexpr auto ScanWorld = 0x230; // bool
		constexpr auto RequestNormals = 0x231; // bool
		constexpr auto RequestVertexConfidence = 0x232; // bool
		constexpr auto VertexColorMode = 0x233; // EMeshTrackerVertexColorMode
		constexpr auto BlockVertexColors = 0x238; // TArray<FColor>
		constexpr auto VertexColorFromConfidenceZero = 0x248; // FLinearColor
		constexpr auto VertexColorFromConfidenceOne = 0x258; // FLinearColor
		constexpr auto UpdateInterval = 0x268; // float
		constexpr auto MRMesh = 0x270; // UMRMeshComponent*
	}

	namespace n_AMM_UnifiedGameMode { // : AMM_GameModeBase
		constexpr auto m_pBackgroundParamCollection = 0x330; // UMaterialParameterCollection*
		constexpr auto m_pFriendMonster = 0x338; // AMM_Monster*
		constexpr auto m_pSelectTarget = 0x340; // AMM_CharacterPawnBase*
		constexpr auto m_pLockOnTarget = 0x348; // AMM_CharacterPawnBase*
		constexpr auto EndLevelTravel = 0x350; // bool
		constexpr auto m_pUIBackGroundActor = 0x400; // AUIBackGroundActor*
		constexpr auto SituationDirectiveActor = 0x408; // AMM_SituationDirectiveEffect*
		constexpr auto MapQuestArrivalDisplayActor = 0x410; // TMap<int32_t, TWeakObjectPtr<AQuestArrivalDisplayActor>>
		constexpr auto m_pHQPlayer = 0x460; // AMM_HQPlayerReferenceActor*
		constexpr auto m_pPortraitCaptureActor = 0x468; // AMM_PortraitCaptureActor*
		constexpr auto m_pPlayerPortraitRenderTarget = 0x470; // UCanvasRenderTarget2D*
		constexpr auto m_pContentsLightManager = 0x478; // AContentsLightManager*
		constexpr auto MyEditorCulture = 0x490; // FString
	}

	namespace n_UPopup_DungeonReward_PartySlot { // : UWidgetBase
		constexpr auto txtRank = 0x2e0; // UMirTextBlock*
		constexpr auto imgClassIcon = 0x2e8; // UMirImage*
		constexpr auto txtNickName = 0x2f0; // UMirTextBlock*
		constexpr auto txtLevel = 0x2f8; // UMirTextBlock*
		constexpr auto rtxtContribution = 0x300; // UMirRichTextBlock*
		constexpr auto canParty = 0x308; // UMirCanvasPanel*
		constexpr auto txtNoParty = 0x310; // UMirTextBlock*
	}

	namespace n_UMovieSceneObjectPropertySection { // : UMovieSceneSection
		constexpr auto ObjectChannel = 0xe0; // FMovieSceneObjectPathChannel
	}

	namespace n_UAssetManager { // : UObject
		constexpr auto ObjectReferenceList = 0x2c0; // TArray<UObject*>
		constexpr auto bIsGlobalAsyncScanEnvironment = 0x2d0; // bool
		constexpr auto bShouldGuessTypeAndName = 0x2d1; // bool
		constexpr auto bShouldUseSynchronousLoad = 0x2d2; // bool
		constexpr auto bIsLoadingFromPakFiles = 0x2d3; // bool
		constexpr auto bShouldAcquireMissingChunksOnLoad = 0x2d4; // bool
		constexpr auto bOnlyCookProductionAssets = 0x2d5; // bool
		constexpr auto bIsBulkScanning = 0x2d6; // bool
		constexpr auto bIsPrimaryAssetDirectoryCurrent = 0x2d7; // bool
		constexpr auto bIsManagementDatabaseCurrent = 0x2d8; // bool
		constexpr auto bUpdateManagementDatabaseAfterScan = 0x2d9; // bool
		constexpr auto bIncludeOnlyOnDiskAssets = 0x2da; // bool
		constexpr auto NumberOfSpawnedNotifications = 0x2dc; // int32_t
	}

	namespace n_UMaterialExpressionVirtualTextureFeatureSwitch { // : UMaterialExpression
		constexpr auto No = 0x40; // FExpressionInput
		constexpr auto Yes = 0x54; // FExpressionInput
	}

	namespace n_UMovieSceneVisibilityTrack { // : UMovieSceneBoolTrack
		constexpr auto SectionToKey = 0x58; // UMovieSceneSection*
		constexpr auto PropertyName = 0x60; // FName
		constexpr auto PropertyPath = 0x68; // FString
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_UMovieSceneNameableTrack { // : UMovieSceneTrack
		constexpr auto EvalOptions = 0x50; // FMovieSceneTrackEvalOptions
		constexpr auto bIsEvalDisabled = 0x55; // bool
	}

	namespace n_UUniformInteger { // : UFieldNodeInt
		constexpr auto Magnitude = 0xb0; // int32_t
	}

	namespace n_UMM_Party_Invite_MemberSlot { // : UWidgetBase
		constexpr auto m_Grid_User = 0x2e8; // UPanelWidget*
		constexpr auto m_Img_Icn_Number = 0x2f0; // UMirImage*
		constexpr auto m_Img_Icn_Leader = 0x2f8; // UMirImage*
		constexpr auto m_Img_Icn_Class = 0x300; // UMirImage*
		constexpr auto m_Txt_Level = 0x308; // UMirTextBlock*
		constexpr auto m_Txt_Nickname = 0x310; // UMirTextBlock*
		constexpr auto m_Txt_CombatPoint = 0x318; // UMirTextBlock*
		constexpr auto m_Grid_Guild = 0x320; // UPanelWidget*
		constexpr auto m_Img_Guild_Frame = 0x328; // UMirImage*
		constexpr auto m_Img_Guild_Symbol = 0x330; // UMirImage*
		constexpr auto m_Txt_GuildName = 0x338; // UMirTextBlock*
		constexpr auto m_Can_Mine = 0x340; // UMirCanvasPanel*
		constexpr auto m_Txt_Leader = 0x348; // UMirTextBlock*
		constexpr auto m_Grid_Lock = 0x350; // UPanelWidget*
		constexpr auto m_Img_Icn_Lock = 0x358; // UMirImage*
		constexpr auto m_Txt_AbleClass = 0x360; // UMirTextBlock*
		constexpr auto m_Img_All = 0x368; // UMirImage*
		constexpr auto m_Img_Able_Class = 0x370; // UMirImage*
	}

	namespace n_UMM_CharInfo_Slim { // : UWidgetBase
		constexpr auto m_C_TxtCombatPoint = 0x300; // UMirTextBlock*
		constexpr auto m_C_BtnDetail = 0x308; // UMM_Common_Btn_Symbol*
	}

	namespace n_UMM_HudTargetList { // : UWidgetBase
		constexpr auto arSlotTarget = 0x2f0; // TArray<UMM_HudSlotTargetList*>
		constexpr auto btnClose = 0x300; // UMirButton*
		constexpr auto btnOption = 0x308; // UMirButton*
		constexpr auto btnShare = 0x310; // UMirButton*
		constexpr auto btnMonster = 0x318; // UMirButton*
		constexpr auto hrzTargetList = 0x320; // UHorizontalBox*
		constexpr auto vtbLeft = 0x328; // UVerticalBox*
		constexpr auto vtbRight = 0x330; // UVerticalBox*
		constexpr auto Can_Target_Sharing = 0x338; // UCanvasPanel*
		constexpr auto aniTargetSharing = 0x340; // UWidgetAnimation*
		constexpr auto imgShareLock = 0x348; // UMirImage*
		constexpr auto imgShareOn = 0x350; // UMirImage*
		constexpr auto imgMonsterOff = 0x358; // UMirImage*
		constexpr auto imgOptionLock = 0x360; // UMirImage*
		constexpr auto Can_EmptyList = 0x368; // UMirCanvasPanel*
		constexpr auto txtNotice = 0x370; // UMirTextBlock*
		constexpr auto Can_ServerVisit_GuildAlly = 0x378; // UMirCanvasPanel*
		constexpr auto Btn_ServerVisit_GuildAlly = 0x380; // UMirButton*
	}

	namespace n_UMaterialExpressionViewSize { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UMaterialExpressionAbs { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UMM_Popup_Profile { // : UWidgetBase
		constexpr auto MyProfile = 0x2e0; // UMM_ProfileSlot*
		constexpr auto m_ProfileImageEditor = 0x2e8; // UMM_ProfileImageEditor*
		constexpr auto m_IconArray = 0x2f0; // TArray<UMM_ProfileSlot*>
		constexpr auto m_IconListBox = 0x310; // UWrapBox*
		constexpr auto m_ApplyBtn = 0x318; // UMM_Common_Btn*
		constexpr auto m_AddProfileImage = 0x320; // UMM_Common_Btn*
		constexpr auto m_SelectIcon = 0x328; // UMirImage*
		constexpr auto m_CloseBtn = 0x330; // UMM_Common_Btn_Symbol*
		constexpr auto m_pProfileTexture = 0x338; // UTexture2D*
	}

	namespace n_URecastNavMeshDataChunk { // : UNavigationDataChunk
		constexpr auto NavigationDataName = 0x28; // FName
	}

	namespace n_ATriggerCapsule { // : ATriggerBase
		constexpr auto CollisionComponent = 0x218; // UShapeComponent*
	}

	namespace n_UMaterialExpressionSingleLayerWaterMaterialOutput { // : UMaterialExpressionCustomOutput
		constexpr auto ScatteringCoefficients = 0x40; // FExpressionInput
		constexpr auto AbsorptionCoefficients = 0x54; // FExpressionInput
		constexpr auto PhaseG = 0x68; // FExpressionInput
	}

	namespace n_UMM_Guild_DevSlot { // : UWidgetBase
		constexpr auto mAniRecommend = 0x2f0; // UWidgetAnimation*
		constexpr auto mPanelSlot = 0x2f8; // UCanvasPanel*
		constexpr auto mImgBG = 0x300; // UMirImage*
		constexpr auto mImgLockBG = 0x308; // UMirImage*
		constexpr auto mImgIcon = 0x310; // UMirImage*
		constexpr auto mTxtName = 0x318; // UMirRichTextBlock*
		constexpr auto mTxtLevel = 0x320; // UMirTextBlock*
		constexpr auto mTxtExp = 0x328; // UMirTextBlock*
		constexpr auto mProgressGauge = 0x330; // UMirProgressBar*
		constexpr auto mOverLayRecommend = 0x338; // UOverlay*
		constexpr auto mPanelRecommendAni = 0x340; // UMirCanvasPanel*
		constexpr auto mTxtRecommend = 0x348; // UMirTextBlock*
		constexpr auto mBtnDevSlot = 0x350; // UMirButton*
		constexpr auto mPanelTranscendence = 0x358; // UMirCanvasPanel*
		constexpr auto mTxtTranscendence = 0x360; // UMirTextBlock*
		constexpr auto mPanelSp = 0x368; // UMirCanvasPanel*
		constexpr auto mTxtSp = 0x370; // UMirTextBlock*
	}

	namespace n_UMM_UIAction_CharAbility { // : UMM_UIAction
		constexpr auto m_mapGrowthProgress = 0x650; // TMap<int32_t, int32_t>
		constexpr auto Tab_StrID_1 = 0x6a0; // int32_t
		constexpr auto Tab_StrID_3 = 0x6a4; // int32_t
		constexpr auto StrID_Combat = 0x6a8; // int32_t
		constexpr auto StrID_ParamTwo_Divide = 0x6ac; // int32_t
		constexpr auto StrID_ParamOne_AttackRank = 0x6b0; // int32_t
		constexpr auto StrID_NickName = 0x6b4; // int32_t
		constexpr auto Rank_StrID_Fame = 0x6b8; // int32_t
		constexpr auto Rank_StrID_Level = 0x6bc; // int32_t
		constexpr auto Rank_StrID_CombatPoint = 0x6c0; // int32_t
		constexpr auto Rank_StrID_PVP = 0x6c4; // int32_t
		constexpr auto Rank_StrID_Collection = 0x6c8; // int32_t
		constexpr auto Rank_StrID_Guild = 0x6cc; // int32_t
		constexpr auto StrID_Fame_Percent = 0x6d0; // int32_t
		constexpr auto StrID_Guild_Name = 0x6d4; // int32_t
		constexpr auto StrID_Guild_MemberGrade = 0x6d8; // int32_t
		constexpr auto StrID_Guild_GuildCustom = 0x6dc; // int32_t
		constexpr auto StrID_CustomTitle = 0x6e0; // int32_t
	}

	namespace n_UEndTurnCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto OnFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_USynthSound { // : USoundWaveProcedural
		constexpr auto OwningSynthComponent = 0x3d0; // USynthComponent*
	}

	namespace n_UMM_GameOption_Select { // : UMM_GameOption_BaseSlot
		constexpr auto ToolTipID = 0x2e8; // int32_t
		constexpr auto SelectStrID = 0x2f0; // TArray<int32_t>
		constexpr auto Txt_MainTitle = 0x310; // UTextBlock*
		constexpr auto Btn_Tooltip = 0x318; // UMM_Common_ToolTipBtn*
		constexpr auto Txt_Select = 0x320; // TArray<UTextBlock*>
		constexpr auto Slot_Select = 0x330; // TArray<UCheckBox*>
		constexpr auto Panel_OptionSlotList = 0x340; // TArray<UPanelWidget*>
	}

	namespace n_UMM_Slot_GroupRelation { // : UWidgetBase
		constexpr auto m_Img_Icon = 0x2e8; // UMirImage*
		constexpr auto m_Txt_GroupTitle = 0x2f0; // UMirTextBlock*
		constexpr auto m_Img_Complet = 0x2f8; // UMirImage*
		constexpr auto m_Img_Indicator = 0x300; // UMirImage*
		constexpr auto m_Btn_Click = 0x308; // UMirButton*
		constexpr auto m_Img_Select = 0x310; // UMirImage*
	}

	namespace n_UMaterialExpressionFunctionOutput { // : UMaterialExpression
		constexpr auto OutputName = 0x40; // FName
		constexpr auto Description = 0x48; // FString
		constexpr auto SortPriority = 0x58; // int32_t
		constexpr auto A = 0x5c; // FExpressionInput
		constexpr auto bLastPreviewed = 0x70; // char : 1
		constexpr auto ID = 0x74; // FGuid
	}

	namespace n_UImageSequenceProtocol_JPG { // : UCompressedImageSequenceProtocol
		constexpr auto CompressionQuality = 0xd8; // int32_t
	}

	namespace n_ABeginPlayTrigger { // : AActivateTrigger
		constexpr auto m_EditorTriggerName = 0x220; // FString
		constexpr auto m_pActiveTriggerArray = 0x230; // TArray<AActivateTrigger*>
		constexpr auto m_TriggerIndex = 0x240; // int32_t
		constexpr auto m_TriggerType = 0x244; // ETriggerType
		constexpr auto m_bActiveTriggerCondition = 0x268; // bool
		constexpr auto m_bActivated = 0x269; // bool
		constexpr auto m_pTriggerManager = 0x270; // AMM_TriggerManager*
	}

	namespace n_UMM_Popup_Auction_GuildSlot { // : UWidgetBase
		constexpr auto m_pCanvasGuild = 0x2e0; // UMirCanvasPanel*
		constexpr auto m_pCanvasNoGuild = 0x2e8; // UMirCanvasPanel*
		constexpr auto m_pImgGuildBg = 0x2f0; // UMirImage*
		constexpr auto m_pImgGuildMark = 0x2f8; // UMirImage*
		constexpr auto m_pTxtGuildName = 0x300; // UMirTextBlock*
		constexpr auto m_pTxtGuildMaster = 0x308; // UMirTextBlock*
	}

	namespace n_UClothLODDataBase { // : UObject
		constexpr auto PhysicalMeshData = 0x28; // UClothPhysicalMeshDataBase*
		constexpr auto CollisionData = 0x30; // FClothCollisionData
	}

	namespace n_UMaterialExpressionParticleSubUV { // : UMaterialExpressionTextureSample
		constexpr auto bBlend = 0xd0; // char : 1
	}

	namespace n_UMM_Occupation_Minimap_Icon { // : UWidgetBase
		constexpr auto Animation_Blinking = 0x2e0; // UWidgetAnimation*
		constexpr auto Img_Icon = 0x2e8; // UMirImage*
		constexpr auto m_canvas_HPBar = 0x2f0; // UMirCanvasPanel*
		constexpr auto m_HPBar = 0x2f8; // UMirProgressBar*
		constexpr auto m_AttackEffect = 0x300; // UEffectWidgetBase*
	}

	namespace n_UMM_UIAction_GameOption { // : UMM_UIAction
		constexpr auto TempGameOptionMap = 0xc8; // TMap<int32_t, int32_t>
		constexpr auto GameoptionMap = 0x118; // TMap<EGameOptionType, int32_t>
		constexpr auto OSMaxGrapicOptionMap = 0x208; // TMap<EGameOptionType, int32_t>
	}

	namespace n_UMaterialExpressionSpeedTree { // : UMaterialExpression
		constexpr auto GeometryInput = 0x40; // FExpressionInput
		constexpr auto WindInput = 0x54; // FExpressionInput
		constexpr auto LODInput = 0x68; // FExpressionInput
		constexpr auto ExtraBendWS = 0x7c; // FExpressionInput
		constexpr auto GeometryType = 0x90; // ESpeedTreeGeometryType
		constexpr auto WindType = 0x91; // ESpeedTreeWindType
		constexpr auto LODType = 0x92; // ESpeedTreeLODType
		constexpr auto BillboardThreshold = 0x94; // float
		constexpr auto bAccurateWindVelocities = 0x98; // bool
	}

	namespace n_UMM_Xdraco_SealingInfo { // : UWidgetBase
		constexpr auto m_pSlot_SealingItem = 0x2f0; // UMM_Item_Make_Slot_Registered*
		constexpr auto Slot_Material = 0x2f8; // TArray<UMM_ItemSealing_Material_Slot*>
		constexpr auto Grid_NeedCost1 = 0x308; // UPanelWidget*
		constexpr auto Img_NeedCost1 = 0x310; // UMirImage*
		constexpr auto Txt_NeedCost1 = 0x318; // UMirTextBlock*
		constexpr auto m_pBtn_NeedCost1 = 0x320; // UMM_Common_Btn_Symbol*
		constexpr auto m_pBtnMain_NeedCost1 = 0x328; // UMirButton*
		constexpr auto Grid_NeedCost2 = 0x330; // UPanelWidget*
		constexpr auto Img_NeedCost2 = 0x338; // UMirImage*
		constexpr auto Txt_NeedCost2 = 0x340; // UMirTextBlock*
		constexpr auto m_pBtn_NeedCost2 = 0x348; // UMM_Common_Btn_Symbol*
		constexpr auto m_pBtnMain_NeedCost2 = 0x350; // UMirButton*
		constexpr auto m_CostType_2 = 0x358; // int32_t
		constexpr auto m_CostType_3 = 0x35c; // int32_t
		constexpr auto m_pPanel_Bottom = 0x360; // UMirCanvasPanel*
		constexpr auto m_pBtn_Make = 0x368; // UMM_Common_Btn*
		constexpr auto m_pDecoEffectPanel = 0x370; // UPanelWidget*
		constexpr auto m_pPanel_Effect_Basic = 0x378; // UMirCanvasPanel*
		constexpr auto m_iMakeItemID = 0x380; // uint32_t
		constexpr auto Panel_Notice_MinReserve = 0x388; // UVerticalBox*
		constexpr auto Txt_Notice_MinReserve = 0x390; // UMirTextBlock*
		constexpr auto RTxt_Notice_MinReserve = 0x398; // UMirRichTextBlock*
	}

	namespace n_UMovieSceneBoolSection { // : UMovieSceneSection
		constexpr auto DefaultValue = 0xe0; // bool
		constexpr auto BoolCurve = 0xe8; // FMovieSceneBoolChannel
	}

	namespace n_ACommonUIBackGround { // : AActor
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto bHidden = 0x58; // char : 1
		constexpr auto bNetTemporary = 0x58; // char : 1
		constexpr auto bNetStartup = 0x58; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x58; // char : 1
		constexpr auto bAlwaysRelevant = 0x58; // char : 1
		constexpr auto bReplicateMovement = 0x58; // char : 1
		constexpr auto bTearOff = 0x58; // char : 1
		constexpr auto bExchangedRoles = 0x58; // char : 1
		constexpr auto bNetLoadOnClient = 0x59; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x59; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x59; // char : 1
		constexpr auto bRelevantForLevelBounds = 0x59; // char : 1
		constexpr auto bReplayRewindable = 0x59; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x59; // char : 1
		constexpr auto bAutoDestroyWhenFinished = 0x59; // char : 1
		constexpr auto bBlockInput = 0x59; // char : 1
		constexpr auto bCanBeDamaged = 0x5a; // char : 1
		constexpr auto bCollideWhenPlacing = 0x5a; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x5a; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x5a; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x5a; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x5a; // char : 1
		constexpr auto bIsEditorOnlyActor = 0x5a; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x5a; // char : 1
		constexpr auto bReplicates = 0x5b; // char : 1
		constexpr auto bCanBeInCluster = 0x5b; // char : 1
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x5b; // char : 1
		constexpr auto bActorEnableCollision = 0x5c; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x5c; // char : 1
		constexpr auto UpdateOverlapsMethodDuringLevelStreaming = 0x5d; // EActorUpdateOverlapsMethod
		constexpr auto DefaultUpdateOverlapsMethodDuringLevelStreaming = 0x5e; // EActorUpdateOverlapsMethod
		constexpr auto RemoteRole = 0x5f; // ENetRole
		constexpr auto ReplicatedMovement = 0x60; // FRepMovement
		constexpr auto InitialLifeSpan = 0x94; // float
		constexpr auto CustomTimeDilation = 0x98; // float
		constexpr auto AttachmentReplication = 0xa0; // FRepAttachment
		constexpr auto Owner = 0xe0; // AActor*
		constexpr auto NetDriverName = 0xe8; // FName
		constexpr auto Role = 0xf0; // ENetRole
		constexpr auto NetDormancy = 0xf1; // ENetDormancy
		constexpr auto SpawnCollisionHandlingMethod = 0xf2; // ESpawnActorCollisionHandlingMethod
		constexpr auto AutoReceiveInput = 0xf3; // EAutoReceiveInput
		constexpr auto InputPriority = 0xf4; // int32_t
		constexpr auto InputComponent = 0xf8; // UInputComponent*
		constexpr auto NetCullDistanceSquared = 0x100; // float
		constexpr auto NetTag = 0x104; // int32_t
		constexpr auto NetUpdateFrequency = 0x108; // float
		constexpr auto MinNetUpdateFrequency = 0x10c; // float
		constexpr auto NetPriority = 0x110; // float
		constexpr auto Instigator = 0x118; // APawn*
		constexpr auto Children = 0x120; // TArray<AActor*>
		constexpr auto RootComponent = 0x130; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x138; // TArray<AMatineeActor*>
		constexpr auto Layers = 0x150; // TArray<FName>
		constexpr auto ParentComponent = 0x160; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto Tags = 0x168; // TArray<FName>
		constexpr auto OnTakeAnyDamage = 0x178; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x179; // FScriptMulticastDelegate
		constexpr auto OnTakeRadialDamage = 0x17a; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x17b; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x17c; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x17d; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x17e; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x17f; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x180; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x181; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x182; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x183; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x184; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x185; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x186; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x187; // FScriptMulticastDelegate
		constexpr auto InstanceComponents = 0x1e8; // TArray<UActorComponent*>
		constexpr auto BlueprintCreatedComponents = 0x1f8; // TArray<UActorComponent*>
	}

	namespace n_AMM_GhostTrailManager { // : AActor
		constexpr auto ScaleGhost = 0x218; // bool
		constexpr auto ScaleCurve = 0x220; // UCurveFloat*
		constexpr auto Active = 0x228; // bool
		constexpr auto GhostLifetime = 0x22c; // float
		constexpr auto GhostSpawnDelay = 0x230; // float
		constexpr auto VelocityDepending = 0x234; // bool
		constexpr auto LastInvisible = 0x235; // bool
		constexpr auto VelocityThreshold = 0x238; // float
		constexpr auto GhostMaxCount = 0x23c; // int32_t
		constexpr auto GhostMaterial = 0x240; // UMaterialInstance*
		constexpr auto MatParams = 0x248; // TArray<FGhostMaterialParam>
		constexpr auto SkeletalVelocities = 0x258; // TArray<FVector>
		constexpr auto StaticVelocities = 0x268; // TArray<FVector>
		constexpr auto LastSkelLocations = 0x278; // TArray<FVector>
		constexpr auto LastStaticLocations = 0x288; // TArray<FVector>
		constexpr auto StaticMeshCompsToTrail = 0x298; // TArray<UStaticMeshComponent*>
		constexpr auto SkeletalMeshCompsToTrail = 0x2a8; // TArray<USkeletalMeshComponent*>
		constexpr auto StaticMeshPool = 0x2b8; // TArray<UStaticMeshComponent*>
		constexpr auto PoseableMeshPool = 0x2c8; // TArray<UPoseableMeshComponent*>
		constexpr auto GhostSpawnTimer = 0x2d8; // float
		constexpr auto Ghosts = 0x2e0; // TArray<FGhostInfo>
		constexpr auto GhostCount = 0x2f0; // int32_t
	}

	namespace n_UMM_PopupStyleBook { // : UWidgetBase
		constexpr auto m_pParentWidget = 0x260; // UWidgetBase*
		constexpr auto m_arChildWidget = 0x268; // TArray<TWeakObjectPtr<UWidgetBase>>
		constexpr auto m_arMirTextBlock = 0x280; // TArray<TWeakObjectPtr<UMirTextBlock>>
		constexpr auto m_arMirRichTextBlock = 0x290; // TArray<TWeakObjectPtr<UMirRichTextBlock>>
		constexpr auto m_arMirEditableText = 0x2a0; // TArray<TWeakObjectPtr<UMirEditableText>>
		constexpr auto m_arMirImage = 0x2b0; // TArray<TWeakObjectPtr<UMirImage>>
	}

	namespace n_UGameMapsSettings { // : UObject
		constexpr auto LocalMapOptions = 0x28; // FString
		constexpr auto TransitionMap = 0x38; // FSoftObjectPath
		constexpr auto bUseSplitscreen = 0x50; // bool
		constexpr auto TwoPlayerSplitscreenLayout = 0x51; // ETwoPlayerSplitScreenType
		constexpr auto ThreePlayerSplitscreenLayout = 0x52; // EThreePlayerSplitScreenType
		constexpr auto FourPlayerSplitscreenLayout = 0x53; // EFourPlayerSplitScreenType
		constexpr auto bOffsetPlayerGamepadIds = 0x54; // bool
		constexpr auto GameInstanceClass = 0x58; // FSoftClassPath
		constexpr auto GameDefaultMap = 0x70; // FSoftObjectPath
		constexpr auto ServerDefaultMap = 0x88; // FSoftObjectPath
		constexpr auto GlobalDefaultGameMode = 0xa0; // FSoftClassPath
		constexpr auto GlobalDefaultServerGameMode = 0xb8; // FSoftClassPath
		constexpr auto GameModeMapPrefixes = 0xd0; // TArray<FGameModeName>
		constexpr auto GameModeClassAliases = 0xe0; // TArray<FGameModeName>
	}

	namespace n_UMaterialExpressionSphericalParticleOpacity { // : UMaterialExpression
		constexpr auto Density = 0x40; // FExpressionInput
		constexpr auto ConstantDensity = 0x54; // float
	}

	namespace n_USoundNodeParamCrossFade { // : USoundNodeDistanceCrossFade
		constexpr auto ParamName = 0x50; // FName
	}

	namespace n_USoundNodeDialoguePlayer { // : USoundNode
		constexpr auto DialogueWaveParameter = 0x40; // FDialogueWaveParameter
		constexpr auto bLooping = 0x60; // char : 1
	}

	namespace n_UMM_CostumeAbility_Part_Option { // : UWidgetBase
		constexpr auto Img_Icon = 0x2e0; // UMirImage*
		constexpr auto Txt_Type = 0x2e8; // UMirTextBlock*
		constexpr auto Txt_Value = 0x2f0; // UMirTextBlock*
		constexpr auto AbilityInfoList = 0x2f8; // TArray<UMM_CostumeAbility_Info*>
		constexpr auto STRID_COUNT = 0x308; // int32_t
		constexpr auto MAX_INFO = 0x30c; // int32_t
	}

	namespace n_AMMUIDirectionalLight { // : AActor
		constexpr auto LightComponent = 0x218; // UMMUIDirectionalLightComponent*
	}

	namespace n_UMM_GetItemWayListSlot_Category { // : UWidgetBase
		constexpr auto m_Btn_Main = 0x2f0; // UMirButton*
		constexpr auto m_Grid_Effect = 0x2f8; // UPanelWidget*
		constexpr auto m_Txt_Name = 0x300; // UMirTextBlock*
		constexpr auto m_Img_Icon = 0x308; // UMirImage*
		constexpr auto m_Img_Lock = 0x310; // UMirImage*
		constexpr auto m_Img_Disable = 0x318; // UMirImage*
		constexpr auto m_Txt_Title = 0x320; // UMirTextBlock*
		constexpr auto Txt_StageTitle = 0x328; // URichTextBox*
		constexpr auto m_Btn_Go = 0x330; // UMM_Common_Btn*
		constexpr auto WSwitcher = 0x338; // UWidgetSwitcher*
		constexpr auto m_Type = 0x340; // int32_t
		constexpr auto m_SubType = 0x344; // int32_t
		constexpr auto m_strName = 0x348; // FString
		constexpr auto m_StageLock = 0x358; // int32_t
		constexpr auto m_StageEnableCombatPower = 0x35c; // bool
		constexpr auto STRID_STAGELOCK_LEVEL = 0x360; // int32_t
		constexpr auto STRID_STAGELOCK_QUEST = 0x364; // int32_t
		constexpr auto STRID_STAGELOCK_COMBATPOWER = 0x368; // int32_t
		constexpr auto STRID_STAGELOCK_NOGUILD = 0x36c; // int32_t
		constexpr auto STRID_STAGELEVEL = 0x370; // int32_t
	}

	namespace n_UMirImage { // : UImage
		constexpr auto Brush = 0x108; // FSlateBrush
		constexpr auto BrushDelegate = 0x190; // DelegateProperty
		constexpr auto ColorAndOpacity = 0x1a0; // FLinearColor
		constexpr auto ColorAndOpacityDelegate = 0x1b0; // DelegateProperty
		constexpr auto bFlipForRightToLeftFlowDirection = 0x1c0; // bool
		constexpr auto OnMouseButtonDownEvent = 0x1c4; // DelegateProperty
	}

	namespace n_UParticleModuleLifetime_Seeded { // : UParticleModuleLifetime
		constexpr auto RandomSeedInfo = 0x60; // FParticleRandomSeedInfo
	}

	namespace n_UMaterialExpressionTextureSampleParameter2DArray { // : UMaterialExpressionTextureSampleParameter
		constexpr auto ParameterName = 0xd0; // FName
		constexpr auto ExpressionGUID = 0xd8; // FGuid
		constexpr auto Group = 0xe8; // FName
	}

	namespace n_UMM_EffectManager { // : UObject
		constexpr auto ComponentPool = 0x28; // TArray<UParticleSystemComponent*>
		constexpr auto HiddenEffectArray = 0x38; // TArray<UParticleSystemComponent*>
		constexpr auto ActorPool = 0x48; // TArray<ASkeletalEffect*>
		constexpr auto ScriptEffects = 0x58; // TMap<int32_t, TWeakObjectPtr<UParticleSystemComponent>>
		constexpr auto BeamEffects = 0xa8; // TMap<TWeakObjectPtr<UParticleSystemComponent>, FParticleBeamSpawnInfo>
		constexpr auto TaskIDAndParticleSpawnInfo = 0xf8; // TMap<int32_t, FParticleSpawnInfo>
		constexpr auto TaskIDAndParticleBeamSpawnInfo = 0x148; // TMap<int32_t, FParticleBeamSpawnInfo>
		constexpr auto TaskIDAndDecalSpawnInfo = 0x198; // TMap<int32_t, FDecalSpawnInfo>
	}

	namespace n_URestrictedGameplayTagsList { // : UObject
		constexpr auto ConfigFileName = 0x28; // FString
		constexpr auto RestrictedGameplayTagList = 0x38; // TArray<FRestrictedGameplayTagTableRow>
	}

	namespace n_UParticleModuleMeshRotationRate_Seeded { // : UParticleModuleMeshRotationRate
		constexpr auto RandomSeedInfo = 0x78; // FParticleRandomSeedInfo
	}

	namespace n_UMM_PopUp_Common_ChannelReady { // : UWidgetBase
		constexpr auto m_Txt_Title = 0x2f0; // UTextBlock*
		constexpr auto m_MatSlot = 0x2f8; // UMM_Slot_Material*
		constexpr auto m_Txt_MatName = 0x300; // UMirTextBlock*
		constexpr auto m_Txt_Notice = 0x308; // UMirTextBlock*
		constexpr auto m_Txt_RemainTime = 0x310; // UMirTextBlock*
		constexpr auto m_CB_First = 0x318; // UMM_Common_Btn*
		constexpr auto m_CB_Second = 0x320; // UMM_Common_Btn*
		constexpr auto m_CB_Close = 0x328; // UMM_Common_Btn_Symbol*
		constexpr auto m_Btn_Bg = 0x330; // UMirButton*
		constexpr auto m_pProgressTimer = 0x338; // UMirProgressBar*
	}

	namespace n_ADefaultPhysicsVolume { // : APhysicsVolume
		constexpr auto TerminalVelocity = 0x250; // float
		constexpr auto Priority = 0x254; // int32_t
		constexpr auto FluidFriction = 0x258; // float
		constexpr auto bWaterVolume = 0x25c; // char : 1
		constexpr auto bPhysicsOnContact = 0x25c; // char : 1
	}

	namespace n_UMM_Popup_GuildList { // : UWidgetBase
		constexpr auto sb_list = 0x2f0; // UMirScrollBox*
		constexpr auto bn_empty = 0x2f8; // UMM_Common_Board_Notice*
		constexpr auto btn_close = 0x300; // UMM_Common_Btn_Symbol*
		constexpr auto Txt_Title = 0x308; // UMirTextBlock*
		constexpr auto txt_page = 0x310; // UMirTextBlock*
		constexpr auto m_pBtnPrev = 0x318; // UMM_Common_Btn_Symbol*
		constexpr auto m_pBtnNext = 0x320; // UMM_Common_Btn_Symbol*
	}

	namespace n_ULevelUpWidget { // : UWidgetBase
		constexpr auto Number_1 = 0x2e0; // FSlateBrush
		constexpr auto Number_2 = 0x368; // FSlateBrush
		constexpr auto Number_3 = 0x3f0; // FSlateBrush
		constexpr auto Number_4 = 0x478; // FSlateBrush
		constexpr auto Number_5 = 0x500; // FSlateBrush
		constexpr auto Number_6 = 0x588; // FSlateBrush
		constexpr auto Number_7 = 0x610; // FSlateBrush
		constexpr auto Number_8 = 0x698; // FSlateBrush
		constexpr auto Number_9 = 0x720; // FSlateBrush
		constexpr auto Number_10 = 0x7a8; // FSlateBrush
		constexpr auto m_pAnim_Start = 0x830; // UWidgetAnimation*
		constexpr auto m_pBox_OneTwoDigit = 0x838; // UHorizontalBox*
		constexpr auto m_pPanel_ThreeDigit = 0x840; // UCanvasPanel*
		constexpr auto m_pImg_OneTwo_2 = 0x848; // UImage*
		constexpr auto m_pImg_OneTwo_11 = 0x850; // UImage*
		constexpr auto m_pImg_Three_2 = 0x858; // UImage*
		constexpr auto m_pImg_Three_11 = 0x860; // UImage*
		constexpr auto m_pImg_Three_101 = 0x868; // UImage*
		constexpr auto m_arrNumberImage = 0x870; // FSlateBrush [0xa]
	}

	namespace n_UMM_VehicleInfo { // : UWidgetBase
		constexpr auto m_pRenderRoom = 0x2f0; // AVehicleRenderRoom*
		constexpr auto m_UI_Drag = 0x2f8; // UMM_UI_Drag*
	}

	namespace n_UBTNode { // : UObject
		constexpr auto NodeName = 0x30; // FString
		constexpr auto TreeAsset = 0x40; // UBehaviorTree*
		constexpr auto ParentNode = 0x48; // UBTCompositeNode*
	}

	namespace n_UParticleModule { // : UObject
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x29; // char : 1
		constexpr auto LODDuplicate = 0x29; // char : 1
		constexpr auto bSupportsRandomSeed = 0x29; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x29; // char : 1
		constexpr auto LODValidity = 0x2a; // char
	}

	namespace n_UMM_Hud_OccupationBoard { // : UWidgetBase
		constexpr auto m_AniOpen = 0x300; // UWidgetAnimation*
		constexpr auto m_Switcher_Hud = 0x308; // UWidgetSwitcher*
		constexpr auto m_txtBattlePrepare = 0x310; // UMirTextBlock*
		constexpr auto m_txtBattleEnd = 0x318; // UMirTextBlock*
		constexpr auto m_txtBattlePrepareTime = 0x320; // UMirTextBlock*
		constexpr auto m_txtBattleEndTime = 0x328; // UMirTextBlock*
		constexpr auto m_txtBattleWinGuild = 0x330; // UMirRichTextBlock*
		constexpr auto m_panelBattleExit = 0x338; // UMirCanvasPanel*
		constexpr auto m_txtKillPoint = 0x340; // UMirTextBlock*
		constexpr auto m_txtOccupationPoint = 0x348; // UMirTextBlock*
		constexpr auto m_txtMonsterKillPoint = 0x350; // UMirTextBlock*
		constexpr auto m_cpGateLever = 0x358; // UMirCanvasPanel*
		constexpr auto m_imgGateLeverBg = 0x360; // UMirImage*
		constexpr auto m_imgGateLeverIcon = 0x368; // UMirImage*
		constexpr auto m_txtGateLeverPoint = 0x370; // UMirTextBlock*
		constexpr auto m_cpCommonMenu = 0x378; // UMirCanvasPanel*
		constexpr auto m_btn_CommonTooltip = 0x380; // UMM_Common_ToolTipBtn*
		constexpr auto m_imgCommonBg = 0x388; // UMirImage*
		constexpr auto m_imgCommonIcon = 0x390; // UMirImage*
		constexpr auto m_txtCommonPoint = 0x398; // UMirTextBlock*
		constexpr auto m_cpRevivalFlag = 0x3a0; // UMirCanvasPanel*
		constexpr auto m_imgRevivalFlagBg = 0x3a8; // UMirImage*
		constexpr auto m_imgRevivalFlagIcon = 0x3b0; // UMirImage*
		constexpr auto m_txtRevivalFlagPoint = 0x3b8; // UMirTextBlock*
		constexpr auto Btn_Exit = 0x3c0; // UMM_Common_Btn_Symbol*
	}

	namespace n_ULightMapVirtualTexture2D { // : UTexture2D
		constexpr auto TypeToLayer = 0x100; // TArray<uint8_t>
	}

	namespace n_UMM_B_ClosedTraining { // : UWidgetBase
		constexpr auto m_TabList = 0x2f0; // TArray<UMM_Common_Btn_Inven*>
		constexpr auto m_SlotList = 0x300; // TArray<UMM_ClosedTraining_Slot*>
		constexpr auto m_Txt_CombatPoint = 0x310; // UMirTextBlock*
		constexpr auto m_Txt_TotalLevel = 0x318; // UMirTextBlock*
		constexpr auto m_Prog_TotalLevel = 0x320; // UMirProgressBar*
		constexpr auto m_Txt_CollectName = 0x328; // UMirTextBlock*
		constexpr auto m_Txt_CollectLevel = 0x330; // UMirTextBlock*
		constexpr auto m_Btn_Collect = 0x338; // UMM_Common_Btn_Symbol*
		constexpr auto m_Btn_AbilityDetail = 0x340; // UMM_Common_Btn_Symbol*
		constexpr auto m_SlotInfo = 0x348; // UMM_ClosedTraining_Info*
	}

	namespace n_UMM_CharAbility { // : UWidgetBase
		constexpr auto Panel_Info = 0x2f0; // UMirCanvasPanel*
		constexpr auto Panel_Fame = 0x2f8; // UMirCanvasPanel*
		constexpr auto Info_Rating = 0x300; // UMM_CharAbility_Info_Rating*
		constexpr auto Info_Rank = 0x308; // UMM_CharAbility_Info_Rank*
		constexpr auto Info_Guild = 0x310; // UMM_CharAbility_Info_Guild*
		constexpr auto Info_Fame = 0x318; // UMM_CharAbility_Info_Fame*
		constexpr auto Info_Skill = 0x320; // UMM_CharAbility_Info_Skill*
		constexpr auto Info_Pet = 0x328; // UMM_CharAbility_Info_Pet*
		constexpr auto Info_Training = 0x330; // UMM_CharAbility_Info_Training*
		constexpr auto m_GuildBtnList = 0x338; // UMM_CharInfo_GuildBtnList*
		constexpr auto ScrollBox = 0x340; // UMirScrollBox*
		constexpr auto Tab_List = 0x348; // UMM_Inventory_Tab*
	}

	namespace n_UMovieSceneBindingOverrides { // : UObject
		constexpr auto BindingData = 0x28; // TArray<FMovieSceneBindingOverrideData>
	}

	namespace n_UMM_GameOption_Switch { // : UMM_GameOption_BaseSlot
		constexpr auto Txt_MainTitle = 0x2f8; // UTextBlock*
		constexpr auto Chk_MainSwitch = 0x300; // UCheckBox*
		constexpr auto Btn_CheckDisable = 0x308; // UMirButton*
		constexpr auto SwitchFlag = 0x310; // int32_t
	}

	namespace n_UMM_Force_SimpleInfo { // : UWidgetBase
		constexpr auto m_C_Txt_ForceName = 0x2e0; // UMirTextBlock*
		constexpr auto m_C_Txt_ForceLevel = 0x2e8; // UMirTextBlock*
		constexpr auto m_C_Pgr_Exp = 0x2f0; // UMirProgressBar*
		constexpr auto m_C_Img_Ability = 0x2f8; // UMirImage*
		constexpr auto m_C_Txt_AbilityName = 0x300; // UMirTextBlock*
		constexpr auto m_C_Txt_AbilityValue = 0x308; // UMirTextBlock*
		constexpr auto m_C_Img_ArrowUp = 0x310; // UMirImage*
	}

	namespace n_UBTCompositeNode { // : UBTNode
		constexpr auto Children = 0x58; // TArray<FBTCompositeChild>
		constexpr auto Services = 0x68; // TArray<UBTService*>
		constexpr auto bApplyDecoratorScope = 0x88; // char : 1
	}

	namespace n_UNavArea { // : UNavAreaBase
		constexpr auto DefaultCost = 0x30; // float
		constexpr auto FixedAreaEnteringCost = 0x34; // float
		constexpr auto DrawColor = 0x38; // FColor
		constexpr auto SupportedAgents = 0x3c; // FNavAgentSelector
		constexpr auto bSupportsAgent0 = 0x40; // char : 1
		constexpr auto bSupportsAgent1 = 0x40; // char : 1
		constexpr auto bSupportsAgent2 = 0x40; // char : 1
		constexpr auto bSupportsAgent3 = 0x40; // char : 1
		constexpr auto bSupportsAgent4 = 0x40; // char : 1
		constexpr auto bSupportsAgent5 = 0x40; // char : 1
		constexpr auto bSupportsAgent6 = 0x40; // char : 1
		constexpr auto bSupportsAgent7 = 0x40; // char : 1
		constexpr auto bSupportsAgent8 = 0x41; // char : 1
		constexpr auto bSupportsAgent9 = 0x41; // char : 1
		constexpr auto bSupportsAgent10 = 0x41; // char : 1
		constexpr auto bSupportsAgent11 = 0x41; // char : 1
		constexpr auto bSupportsAgent12 = 0x41; // char : 1
		constexpr auto bSupportsAgent13 = 0x41; // char : 1
		constexpr auto bSupportsAgent14 = 0x41; // char : 1
		constexpr auto bSupportsAgent15 = 0x41; // char : 1
	}

	namespace n_UNavModifierComponent { // : UNavRelevantComponent
		constexpr auto AreaClass = 0xe0; // UNavArea*
		constexpr auto FailsafeExtent = 0xe8; // FVector
		constexpr auto bIncludeAgentHeight = 0xf4; // char : 1
	}

	namespace n_UARCandidateImage { // : UDataAsset
		constexpr auto CandidateTexture = 0x30; // UTexture2D*
		constexpr auto FriendlyName = 0x38; // FString
		constexpr auto Width = 0x48; // float
		constexpr auto Height = 0x4c; // float
		constexpr auto Orientation = 0x50; // EARCandidateImageOrientation
	}

	namespace n_UBrushBuilder { // : UObject
		constexpr auto BitmapFilename = 0x28; // FString
		constexpr auto ToolTip = 0x38; // FString
		constexpr auto NotifyBadParams = 0x48; // char : 1
		constexpr auto Vertices = 0x50; // TArray<FVector>
		constexpr auto Polys = 0x60; // TArray<FBuilderPoly>
		constexpr auto Layer = 0x70; // FName
		constexpr auto MergeCoplanars = 0x78; // char : 1
	}

	namespace n_UChangeMaterialNotifyState { // : UAnimNotifyState
		constexpr auto ChangeMaterial = 0x30; // UMaterial*
		constexpr auto OrgMIDList = 0x38; // TArray<UMaterialInstanceDynamic*>
	}

	namespace n_UMM_Item_Make_Slot_Registered { // : UMM_Slot_Base
		constexpr auto m_Img_GradeBgEffect = 0x3e8; // UMirImage*
		constexpr auto m_TxtName = 0x3f0; // UMirTextBlock*
		constexpr auto m_ImgEquiped = 0x3f8; // UMirImage*
		constexpr auto m_TxtCount = 0x400; // UMirTextBlock*
		constexpr auto m_ImgTier = 0x408; // UMirImage*
		constexpr auto m_PanelName = 0x410; // UGridPanel*
		constexpr auto SLOT_EFFECT_INDEX = 0x418; // int32_t
	}

	namespace n_UMM_New_Force_Info { // : UWidgetBase
		constexpr auto m_arAbilityIcon = 0x2f8; // UMM_New_Force_Ability_Icon* [0x4]
		constexpr auto m_C_Grid_AdvenceMsg = 0x318; // UPanelWidget*
		constexpr auto m_C_Txt_ForceUpgrade = 0x320; // UMirTextBlock*
		constexpr auto m_C_Grid_Pgr_LevelUp = 0x328; // UPanelWidget*
		constexpr auto m_C_Pgr_LevelUp = 0x330; // UMirProgressBar*
		constexpr auto m_C_Txt_BloodLevelIng = 0x338; // UMirTextBlock*
		constexpr auto m_C_Force_Levelup = 0x340; // UMM_Force_LevelUp*
		constexpr auto m_Ani_UpgradingMsg = 0x348; // UWidgetAnimation*
	}

	namespace n_UMaterialInstance { // : UMaterialInterface
		constexpr auto PhysMaterial = 0x88; // UPhysicalMaterial*
		constexpr auto Parent = 0x90; // UMaterialInterface*
		constexpr auto bHasStaticPermutationResource = 0x98; // char : 1
		constexpr auto bOverrideSubsurfaceProfile = 0x98; // char : 1
		constexpr auto ScalarParameterValues = 0xa0; // TArray<FScalarParameterValue>
		constexpr auto VectorParameterValues = 0xb0; // TArray<FVectorParameterValue>
		constexpr auto TextureParameterValues = 0xc0; // TArray<FTextureParameterValue>
		constexpr auto RuntimeVirtualTextureParameterValues = 0xd0; // TArray<FRuntimeVirtualTextureParameterValue>
		constexpr auto FontParameterValues = 0xe0; // TArray<FFontParameterValue>
		constexpr auto BasePropertyOverrides = 0xf0; // FMaterialInstanceBasePropertyOverrides
		constexpr auto PermutationTextureReferences = 0x108; // TArray<UObject*>
		constexpr auto StaticParameters = 0x118; // FStaticParameterSet
	}

	namespace n_UMM_Hud_BackSkill { // : UWidgetBase
		constexpr auto m_pSkillIcon = 0x2e0; // UMirImage*
		constexpr auto m_pMainPanel = 0x2e8; // UPanelWidget*
		constexpr auto m_pAniSkillOn = 0x2f0; // UWidgetAnimation*
	}

	namespace n_UMM_NonePlayerAnimInstance { // : UMM_AnimInstance
		constexpr auto LimitTime = 0x270; // float
		constexpr auto ElapsedTime = 0x274; // float
		constexpr auto MinValue = 0x278; // int32_t
		constexpr auto MaxValue = 0x27c; // int32_t
		constexpr auto ReferenceValue = 0x280; // int32_t
		constexpr auto DefaultGesture = 0x284; // bool
		constexpr auto AirwalkState = 0x285; // EAIRWALK_STATE
		constexpr auto CustomAnimIndex = 0x288; // int32_t
		constexpr auto PlayCustomAnim = 0x28c; // bool
		constexpr auto PlayStdElapsedTime = 0x290; // float
		constexpr auto PlayStdTime = 0x294; // float
		constexpr auto PlayStd01Rate = 0x298; // float
		constexpr auto PlayStd02Rate = 0x29c; // float
		constexpr auto bPlayDefaultStd = 0x2a0; // bool
		constexpr auto Entity = 0x2a8; // AMM_EntityBase*
	}

	namespace n_UMM_UIShopGoodsListNormal { // : UWidgetBase
		constexpr auto mListViewBigSlot = 0x2e0; // UMirListView*
		constexpr auto mListViewNormalSlot = 0x2e8; // UMirListView*
		constexpr auto mCommonNotice = 0x2f0; // UMM_Common_Board_Notice*
	}

	namespace n_UMM_FindCharSlot_Global { // : UWidgetBase
		constexpr auto m_Txt_ServerName = 0x2f8; // UMirTextBlock*
		constexpr auto m_Txt_CharLevel = 0x300; // UMirTextBlock*
		constexpr auto m_Img_CharClass = 0x308; // UMirImage*
		constexpr auto m_Txt_CharName = 0x310; // UMirTextBlock*
		constexpr auto m_Txt_LastLogin = 0x318; // UMirTextBlock*
		constexpr auto m_CB_ServerSelect = 0x320; // UMM_Common_Btn*
	}

	namespace n_UFieldSystemMetaDataIteration { // : UFieldSystemMetaData
		constexpr auto Iterations = 0xb0; // int32_t
	}

	namespace n_UMM_ImmediateBtn { // : UWidgetBase
		constexpr auto m_pCanImmediateMove = 0x2e8; // UCanvasPanel*
		constexpr auto m_pBtnImmediateMove = 0x2f0; // UButton*
		constexpr auto m_TxtAutoMoving = 0x2f8; // UTextBlock*
		constexpr auto m_pBtnFastRun = 0x300; // UMM_HudBtnAction*
	}

	namespace n_UNavTestRenderingComponent { // : UPrimitiveComponent
		constexpr auto MinDrawDistance = 0x228; // float
		constexpr auto LDMaxDrawDistance = 0x22c; // float
		constexpr auto CachedMaxDrawDistance = 0x230; // float
		constexpr auto DepthPriorityGroup = 0x234; // ESceneDepthPriorityGroup
		constexpr auto ViewOwnerDepthPriorityGroup = 0x235; // ESceneDepthPriorityGroup
		constexpr auto IndirectLightingCacheQuality = 0x236; // EIndirectLightingCacheQuality
		constexpr auto LightmapType = 0x237; // ELightmapType
		constexpr auto bUseMaxLODAsImposter = 0x238; // char : 1
		constexpr auto CachedBoundsSphereDiameter = 0x23c; // float
		constexpr auto bBatchImpostersAsInstances = 0x240; // char : 1
		constexpr auto bNeverDistanceCull = 0x240; // char : 1
		constexpr auto bAlwaysCreatePhysicsState = 0x240; // char : 1
		constexpr auto bGenerateOverlapEvents = 0x240; // char : 1
		constexpr auto bMultiBodyOverlap = 0x241; // char : 1
		constexpr auto bTraceComplexOnMove = 0x241; // char : 1
		constexpr auto bReturnMaterialOnMove = 0x241; // char : 1
		constexpr auto bUseViewOwnerDepthPriorityGroup = 0x241; // char : 1
		constexpr auto bAllowCullDistanceVolume = 0x241; // char : 1
		constexpr auto bHasMotionBlurVelocityMeshes = 0x241; // char : 1
		constexpr auto bVisibleInReflectionCaptures = 0x241; // char : 1
		constexpr auto bVisibleInRayTracing = 0x241; // char : 1
		constexpr auto bRenderInMainPass = 0x242; // char : 1
		constexpr auto bRenderInDepthPass = 0x242; // char : 1
		constexpr auto bReceivesDecals = 0x242; // char : 1
		constexpr auto bOwnerNoSee = 0x242; // char : 1
		constexpr auto bOnlyOwnerSee = 0x242; // char : 1
		constexpr auto bTreatAsBackgroundForOcclusion = 0x242; // char : 1
		constexpr auto bUseAsOccluder = 0x242; // char : 1
		constexpr auto bSelectable = 0x242; // char : 1
		constexpr auto bForceMipStreaming = 0x243; // char : 1
		constexpr auto bHasPerInstanceHitProxies = 0x243; // char : 1
		constexpr auto CastShadow = 0x243; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x243; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x243; // char : 1
		constexpr auto bCastDynamicShadow = 0x243; // char : 1
		constexpr auto bCastStaticShadow = 0x243; // char : 1
		constexpr auto bCastVolumetricTranslucentShadow = 0x243; // char : 1
		constexpr auto bSelfShadowOnly = 0x244; // char : 1
		constexpr auto bCastFarShadow = 0x244; // char : 1
		constexpr auto bCastInsetShadow = 0x244; // char : 1
		constexpr auto bCastCinematicShadow = 0x244; // char : 1
		constexpr auto bCastHiddenShadow = 0x244; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x244; // char : 1
		constexpr auto bLightAsIfStatic = 0x244; // char : 1
		constexpr auto bLightAttachmentsAsGroup = 0x244; // char : 1
		constexpr auto bExcludeFromLightAttachmentGroup = 0x245; // char : 1
		constexpr auto bReceiveMobileCSMShadows = 0x245; // char : 1
		constexpr auto bSingleSampleShadowFromStationaryLights = 0x245; // char : 1
		constexpr auto bIgnoreRadialImpulse = 0x245; // char : 1
		constexpr auto bIgnoreRadialForce = 0x245; // char : 1
		constexpr auto bApplyImpulseOnDamage = 0x245; // char : 1
		constexpr auto bReplicatePhysicsToAutonomousProxy = 0x245; // char : 1
		constexpr auto AlwaysLoadOnClient = 0x245; // char : 1
		constexpr auto AlwaysLoadOnServer = 0x246; // char : 1
		constexpr auto bUseEditorCompositing = 0x246; // char : 1
		constexpr auto bRenderCustomDepth = 0x246; // char : 1
		constexpr auto bHasCustomNavigableGeometry = 0x247; // EHasCustomNavigableGeometry
		constexpr auto CanCharacterStepUpOn = 0x249; // ECanBeCharacterBase
		constexpr auto LightingChannels = 0x24a; // FLightingChannels
		constexpr auto CustomDepthStencilWriteMask = 0x24b; // ERendererStencilMask
		constexpr auto CustomDepthStencilValue = 0x24c; // int32_t
		constexpr auto CustomPrimitiveData = 0x250; // FCustomPrimitiveData
		constexpr auto TranslucencySortPriority = 0x260; // int32_t
		constexpr auto VisibilityId = 0x264; // int32_t
		constexpr auto bIgnoreOcclusionVolume = 0x268; // char : 1
		constexpr auto OcclusionVolumeId = 0x26c; // int32_t
		constexpr auto RuntimeVirtualTextures = 0x270; // TArray<URuntimeVirtualTexture*>
		constexpr auto VirtualTextureLodBias = 0x280; // uint8_t
		constexpr auto VirtualTextureCullMips = 0x281; // uint8_t
		constexpr auto VirtualTextureMinCoverage = 0x282; // uint8_t
		constexpr auto VirtualTextureRenderPassType = 0x283; // ERuntimeVirtualTextureMainPassType
		constexpr auto LpvBiasMultiplier = 0x288; // float
		constexpr auto BoundsScale = 0x294; // float
		constexpr auto MoveIgnoreActors = 0x2a8; // TArray<AActor*>
		constexpr auto MoveIgnoreComponents = 0x2b8; // TArray<UPrimitiveComponent*>
		constexpr auto BodyInstance = 0x2d8; // FBodyInstance
		constexpr auto OnComponentHit = 0x3e8; // FScriptMulticastDelegate
		constexpr auto OnComponentBeginOverlap = 0x3e9; // FScriptMulticastDelegate
		constexpr auto OnComponentEndOverlap = 0x3ea; // FScriptMulticastDelegate
		constexpr auto OnComponentWake = 0x3eb; // FScriptMulticastDelegate
		constexpr auto OnComponentSleep = 0x3ec; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x3ee; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x3ef; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x3f0; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x3f1; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x3f2; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x3f3; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x3f4; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x3f5; // FScriptMulticastDelegate
		constexpr auto LODParentPrimitive = 0x410; // UPrimitiveComponent*
	}

	namespace n_AMM_PortraitCaptureActor { // : AActor
		constexpr auto m_pSceneCapture = 0x218; // USceneCaptureComponent2D*
		constexpr auto m_pRenderTarget2D = 0x220; // UCanvasRenderTarget2D*
		constexpr auto m_CharacterRotation = 0x228; // FRotator
		constexpr auto m_pPartsComponent = 0x238; // UMM_CharacterPartsComponent*
		constexpr auto m_mapClassPose = 0x240; // TMap<EPlayerClassID, UAnimationAsset*>
		constexpr auto m_mapClassPoseObj = 0x298; // TMap<EPlayerClassID, UAnimationAsset*>
		constexpr auto BackGroundMesh = 0x2e8; // UStaticMeshComponent*
		constexpr auto BackgroundMID = 0x2f0; // UMaterialInstanceDynamic*
		constexpr auto BackGroundSprite = 0x2f8; // UPaperSprite*
		constexpr auto m_pHQPlayer = 0x300; // AMM_HQPlayerReferenceActor*
		constexpr auto IMAGE_SIZE_X = 0x308; // int32_t
		constexpr auto IMAGE_SIZE_Y = 0x30c; // int32_t
	}

	namespace n_UMM_Occupation_Rank_List { // : UWidgetBase
		constexpr auto Slot_Rank = 0x2e0; // UMM_Slot_Rank*
		constexpr auto Img_Background_Other = 0x2e8; // UMirImage*
		constexpr auto Img_Background_Mine = 0x2f0; // UMirImage*
		constexpr auto Img_GuildMark = 0x2f8; // UMirImage*
		constexpr auto Img_GuildMarkEdge = 0x300; // UMirImage*
		constexpr auto Img_Grade = 0x308; // UMirImage*
		constexpr auto Txt_Camp = 0x310; // UMirTextBlock*
		constexpr auto Txt_GuildName = 0x318; // UMirTextBlock*
		constexpr auto Txt_UserName = 0x320; // UMirTextBlock*
		constexpr auto Txt_KillScore = 0x328; // UMirTextBlock*
		constexpr auto Txt_OccupationScore = 0x330; // UMirTextBlock*
		constexpr auto Txt_DestroyScore = 0x338; // UMirTextBlock*
	}

	namespace n_UMM_PKModeSlot { // : UWidgetBase
		constexpr auto OnSelectedModeEvent = 0x2e0; // FScriptMulticastDelegate
		constexpr auto m_Btn_Base = 0x2f0; // UButton*
		constexpr auto m_Image_Mode = 0x2f8; // UImage*
		constexpr auto m_TextBlock_Mode = 0x300; // UTextBlock*
		constexpr auto m_Image_Selected = 0x308; // UImage*
		constexpr auto m_ModeType = 0x310; // EPKModeType
		constexpr auto m_IsSelected = 0x311; // bool
	}

	namespace n_UMM_UIShopGoodsBigSlot { // : UMM_UIShopGoodsSlot
		constexpr auto m_Panel_GoodsInfo = 0x440; // UMirCanvasPanel*
		constexpr auto m_ScrollBox_DetailSlot = 0x448; // UMirScrollBox*
		constexpr auto m_Panel_OnlyDesc = 0x450; // UMirCanvasPanel*
		constexpr auto m_RTxt_OnlyDesc = 0x458; // UMirRichTextBlock*
		constexpr auto m_ScaleBox_Period = 0x460; // UScaleBox*
		constexpr auto m_Txt_PeriodDesc = 0x468; // UMirTextBlock*
		constexpr auto m_Img_PeriodIndicator = 0x470; // UMirImage*
	}

	namespace n_UMM_Common_Btn_Symbol { // : UMM_Common_Btn_Base
		constexpr auto m_SymbolIcon = 0x350; // UObject*
		constexpr auto m_eSymbolIconAlignment = 0x358; // EAlignmentType
		constexpr auto m_bUseCustomSize = 0x359; // bool
		constexpr auto m_vCustomSize = 0x35c; // FVector2D
		constexpr auto m_fCustomAngle = 0x364; // float
		constexpr auto m_ImgSymbolIcon = 0x368; // UMirImage*
	}

	namespace n_UMM_DungeonCommonTitle3 { // : UWidgetBase
		constexpr auto imgBoss = 0x2e0; // UMirImage* [0x5]
	}

	namespace n_UMM_CinematicManager { // : UObject
		constexpr auto m_pCutsceneDialogue = 0x50; // ACinematicDialogue*
		constexpr auto m_pLevelSequencePlayer = 0x58; // ULevelSequencePlayer*
		constexpr auto m_pLevelSequenceActor = 0x60; // ALevelSequenceActor*
		constexpr auto m_pCallbackObject = 0x78; // UObject*
	}

	namespace n_USceneComponent { // : UActorComponent
		constexpr auto PhysicsVolume = 0xb8; // TWeakObjectPtr<APhysicsVolume>
		constexpr auto AttachParent = 0xc0; // USceneComponent*
		constexpr auto AttachSocketName = 0xc8; // FName
		constexpr auto AttachChildren = 0xd0; // TArray<USceneComponent*>
		constexpr auto ClientAttachedChildren = 0xe0; // TArray<USceneComponent*>
		constexpr auto RelativeLocation = 0x128; // FVector
		constexpr auto RelativeRotation = 0x134; // FRotator
		constexpr auto RelativeScale3D = 0x140; // FVector
		constexpr auto ComponentVelocity = 0x14c; // FVector
		constexpr auto bComponentToWorldUpdated = 0x168; // char : 1
		constexpr auto bAbsoluteLocation = 0x168; // char : 1
		constexpr auto bAbsoluteRotation = 0x168; // char : 1
		constexpr auto bAbsoluteScale = 0x168; // char : 1
		constexpr auto bVisible = 0x168; // char : 1
		constexpr auto bHiddenInGame = 0x168; // char : 1
		constexpr auto bShouldBeAttached = 0x168; // char : 1
		constexpr auto bShouldSnapLocationWhenAttached = 0x169; // char : 1
		constexpr auto bShouldSnapRotationWhenAttached = 0x169; // char : 1
		constexpr auto bShouldUpdatePhysicsVolume = 0x169; // char : 1
		constexpr auto bBoundsChangeTriggersStreamingDataRebuild = 0x169; // char : 1
		constexpr auto bUseAttachParentBound = 0x169; // char : 1
		constexpr auto Mobility = 0x181; // EComponentMobility
		constexpr auto DetailMode = 0x182; // EDetailMode
		constexpr auto PhysicsVolumeChangedDelegate = 0x183; // FScriptMulticastDelegate
	}

	namespace n_UDialogueWave { // : UObject
		constexpr auto bMature = 0x28; // char : 1
		constexpr auto bOverride_SubtitleOverride = 0x28; // char : 1
		constexpr auto SpokenText = 0x30; // FString
		constexpr auto SubtitleOverride = 0x40; // FString
		constexpr auto ContextMappings = 0x50; // TArray<FDialogueContextMapping>
		constexpr auto LocalizationGUID = 0x60; // FGuid
	}

	namespace n_UMM_Common_Popup_Info { // : UWidgetBase
		constexpr auto m_Txt_Title = 0x2e0; // UTextBlock*
		constexpr auto m_Txt_Message = 0x2e8; // UMirRichTextBlock*
	}

	namespace n_UParticleModuleOrbitBase { // : UParticleModule
		constexpr auto bUseEmitterTime = 0x30; // char : 1
	}

	namespace n_UMM_Popup_Teleport { // : UWidgetBase
		constexpr auto m_pBtnBGClose = 0x2f0; // UMirButton*
		constexpr auto m_pBtnSymClose = 0x2f8; // UMM_Common_Btn_Symbol*
		constexpr auto m_pBtnSymTeleport = 0x300; // UMM_Common_Btn*
		constexpr auto m_pScrollBox = 0x308; // UMirScrollBox*
		constexpr auto m_pCommonBoard = 0x310; // UMM_Common_Board_Notice*
	}

	namespace n_UMM_B_Squad_Info { // : UWidgetBase
		constexpr auto m_C_Btn_Close = 0x2f0; // UMM_Common_Btn_Symbol*
		constexpr auto m_ScrollBox_Member = 0x2f8; // UMirScrollBox*
		constexpr auto m_ScrollBox_Reward = 0x300; // UMirScrollBox*
		constexpr auto m_Txt_Title = 0x308; // UMirTextBlock*
		constexpr auto m_Txt_GuildName = 0x310; // UMirTextBlock*
		constexpr auto m_HrzBox_Guild = 0x318; // UHorizontalBox*
		constexpr auto m_Txt_DungeonName = 0x320; // UMirTextBlock*
		constexpr auto m_Img_DungeonThumb = 0x328; // UMirImage*
		constexpr auto m_Txt_LimitCombatPoint = 0x330; // UMirTextBlock*
		constexpr auto m_Txt_DefaultCombatPoint = 0x338; // UMirTextBlock*
		constexpr auto m_Txt_RemainEnterTime = 0x340; // UMirTextBlock*
		constexpr auto m_Img_Level = 0x348; // UMirImage* [0x6]
		constexpr auto m_Hrzbox_TimeTable = 0x378; // UHorizontalBox*
		constexpr auto m_C_Btn_Leave = 0x380; // UMM_Common_Btn*
		constexpr auto m_C_Btn_Delete = 0x388; // UMM_Common_Btn*
		constexpr auto m_C_Btn_Enter = 0x390; // UMM_Common_Btn*
		constexpr auto m_Need_Cost_Material_1 = 0x398; // UMM_Slot_Material_Item*
		constexpr auto m_Need_Cost_Material_2 = 0x3a0; // UMM_Slot_Material_Item*
		constexpr auto m_Party_ExplainTextField = 0x3a8; // UMM_Party_ExplainTextField*
		constexpr auto m_AniStart = 0x3b0; // UWidgetAnimation*
		constexpr auto m_AniEnd = 0x3b8; // UWidgetAnimation*
		constexpr auto m_pBtnCommToolTip = 0x3c0; // UMM_Common_ToolTipBtn*
	}

	namespace n_UMovieSceneLevelVisibilitySection { // : UMovieSceneSection
		constexpr auto Visibility = 0xe0; // ELevelVisibility
		constexpr auto LevelNames = 0xe8; // TArray<FName>
	}

	namespace n_UMM_Btn_HudNormalAttack { // : UWidgetBase
		constexpr auto m_pImg_NormalAttackIcon = 0x2e0; // UImage*
		constexpr auto m_pBtn_Attack = 0x2e8; // UButton*
		constexpr auto m_pAnim_Click = 0x2f0; // UWidgetAnimation*
		constexpr auto m_iEffectID_Continue = 0x2f8; // int32_t
		constexpr auto m_iEffectID_Touched = 0x2fc; // int32_t
		constexpr auto m_pGridEffect = 0x300; // UPanelWidget*
		constexpr auto m_pContinueEffect = 0x308; // UEffectWidgetBase*
	}

	namespace n_UAnimCompress_ACLCustom { // : UAnimCompress_ACLBase
		constexpr auto DefaultVirtualVertexDistance = 0x50; // float
		constexpr auto SafeVirtualVertexDistance = 0x54; // float
		constexpr auto CompressionLevel = 0x58; // ACLCompressionLevel
		constexpr auto RotationFormat = 0x59; // ACLRotationFormat
		constexpr auto TranslationFormat = 0x5a; // ACLVectorFormat
		constexpr auto ScaleFormat = 0x5b; // ACLVectorFormat
		constexpr auto ErrorThreshold = 0x5c; // float
		constexpr auto ConstantRotationThresholdAngle = 0x60; // float
		constexpr auto ConstantTranslationThreshold = 0x64; // float
		constexpr auto ConstantScaleThreshold = 0x68; // float
		constexpr auto bClipRangeReduceRotations = 0x6c; // char : 1
		constexpr auto bClipRangeReduceTranslations = 0x6c; // char : 1
		constexpr auto bClipRangeReduceScales = 0x6c; // char : 1
		constexpr auto EnableSegmenting = 0x6c; // char : 1
		constexpr auto bSegmentRangeReduceRotations = 0x6c; // char : 1
		constexpr auto bSegmentRangeReduceTranslations = 0x6c; // char : 1
		constexpr auto bSegmentRangeReduceScales = 0x6c; // char : 1
		constexpr auto IdealNumKeyFramesPerSegment = 0x70; // uint16_t
		constexpr auto MaxNumKeyFramesPerSegment = 0x72; // uint16_t
	}

	namespace n_ULandscapeInfo { // : UObject
		constexpr auto LandscapeActor = 0x28; // ALandscape*
		constexpr auto LandscapeGuid = 0x44; // FGuid
		constexpr auto ComponentSizeQuads = 0x54; // int32_t
		constexpr auto SubsectionSizeQuads = 0x58; // int32_t
		constexpr auto ComponentNumSubsections = 0x5c; // int32_t
		constexpr auto DrawScale = 0x60; // FVector
		constexpr auto Proxies = 0x110; // TArray<ALandscapeStreamingProxy*>
	}

	namespace n_UBTTask_ExecuteSkill { // : UBTTaskNode
		constexpr auto Desc = 0x78; // FString
	}

	namespace n_UMovieSceneLevelVisibilityTrack { // : UMovieSceneNameableTrack
		constexpr auto Sections = 0x58; // TArray<UMovieSceneSection*>
	}

	namespace n_UOnlineSubsystemExtendedAppleWidget { // : UUserWidget
		constexpr auto WebBrowser = 0x240; // UOnlineSubsystemExtendedAppleWebBrowser*
		constexpr auto m_Btn_Close = 0x278; // UButton*
	}

	namespace n_UMovieScene { // : UMovieSceneSignedObject
		constexpr auto Spawnables = 0x50; // TArray<FMovieSceneSpawnable>
		constexpr auto Possessables = 0x60; // TArray<FMovieScenePossessable>
		constexpr auto ObjectBindings = 0x70; // TArray<FMovieSceneBinding>
		constexpr auto BindingGroups = 0x80; // TMap<FName, FMovieSceneObjectBindingIDs>
		constexpr auto MasterTracks = 0xd0; // TArray<UMovieSceneTrack*>
		constexpr auto CameraCutTrack = 0xe0; // UMovieSceneTrack*
		constexpr auto SelectionRange = 0xe8; // FMovieSceneFrameRange
		constexpr auto PlaybackRange = 0xf8; // FMovieSceneFrameRange
		constexpr auto TickResolution = 0x108; // FFrameRate
		constexpr auto DisplayRate = 0x110; // FFrameRate
		constexpr auto EvaluationType = 0x118; // EMovieSceneEvaluationType
		constexpr auto ClockSource = 0x119; // EUpdateClockSource
		constexpr auto MarkedFrames = 0x120; // TArray<FMovieSceneMarkedFrame>
	}

	namespace n_UInterpTrackInstMove { // : UInterpTrackInst
		constexpr auto ResetLocation = 0x28; // FVector
		constexpr auto ResetRotation = 0x34; // FRotator
	}

	namespace n_UIAPStoreModuleBase { // : UObject
		constexpr auto m_UserRequestProductData = 0x58; // FIAPUserRequestData
		constexpr auto m_PurchaseProductData = 0x98; // FIAPProductData
		constexpr auto m_PurchaseInProgress = 0x138; // TArray<EIAPPurchaseState>
		constexpr auto ProcessedTransactionIDs = 0x148; // TArray<FString>
		constexpr auto ProcessedTransactionReceipts = 0x158; // TArray<FString>
		constexpr auto DelayHideBlockScreenTimeHandle = 0x168; // FTimerHandle
		constexpr auto m_MarketProductDataMap = 0x170; // TMap<FString, FIAPMarketProductData>
	}

	namespace n_UMM_Occupation_FlagSlot { // : UWidgetBase
		constexpr auto Switcher_Flag = 0x2e0; // UWidgetSwitcher*
		constexpr auto m_ObjectTID = 0x2e8; // int32_t
	}

	namespace n_ABlockingVolume { // : AVolume
		constexpr auto BrushType = 0x218; // EBrushType
		constexpr auto BrushColor = 0x21c; // FColor
		constexpr auto PolyFlags = 0x220; // int32_t
		constexpr auto bColored = 0x224; // char : 1
		constexpr auto bSolidWhenSelected = 0x224; // char : 1
		constexpr auto bPlaceableFromClassBrowser = 0x224; // char : 1
		constexpr auto bNotForClientOrServer = 0x224; // char : 1
		constexpr auto Brush = 0x228; // UModel*
		constexpr auto BrushComponent = 0x230; // UBrushComponent*
		constexpr auto bInManipulation = 0x238; // char : 1
		constexpr auto SavedSelections = 0x240; // TArray<FGeomSelection>
	}

	namespace n_UHLODProxy { // : UObject
		constexpr auto ProxyMeshes = 0x28; // TArray<FHLODProxyMesh>
	}

	namespace n_UParticleModuleVectorFieldRotation { // : UParticleModuleVectorFieldBase
		constexpr auto MinInitialRotation = 0x30; // FVector
		constexpr auto MaxInitialRotation = 0x3c; // FVector
	}

	namespace n_UFirebaseGameCenterCredential { // : UBlueprintAsyncActionBase
		constexpr auto OnComplete = 0x30; // FScriptMulticastDelegate
	}

	namespace n_UUIParticleAsset { // : UObject
		constexpr auto Emitters = 0x28; // TArray<FUIParticleEmitterInfo>
	}

	namespace n_UMM_CharAbility_Info_Guild { // : UWidgetBase
		constexpr auto m_MirTextBlock_GuildName = 0x2f0; // UMirTextBlock*
		constexpr auto m_MirTextBlock_GuildGrade = 0x2f8; // UMirTextBlock*
		constexpr auto m_MirTextBlock_Custom = 0x300; // UMirTextBlock*
		constexpr auto m_MirTextBlock_GuildNo = 0x308; // UMirTextBlock*
		constexpr auto m_GuildInfo = 0x310; // UVerticalBox*
		constexpr auto m_Img_GuildMark = 0x318; // UMirImage*
		constexpr auto m_Img_GuildMark_Frame = 0x320; // UMirImage*
		constexpr auto m_CanvasPanel_BtnOtherGuild = 0x328; // UCanvasPanel*
		constexpr auto m_Btn_GoOtherGuild = 0x330; // UMirButton*
		constexpr auto m_Btn_SaveClipBoard = 0x338; // UMM_Common_Btn_Symbol*
	}

	namespace n_UMM_WorldMap_Occupation { // : UWidgetBase
		constexpr auto m_Txt_GuildName = 0x2e0; // UTextBlock*
		constexpr auto m_Txt_OccupationState = 0x2e8; // UTextBlock*
		constexpr auto m_Grid_GuildName = 0x2f0; // UPanelWidget*
		constexpr auto m_Img_Frame = 0x2f8; // UImage*
		constexpr auto m_Img_Symbol = 0x300; // UImage*
	}

	namespace n_ASafetyArea { // : AActor
		constexpr auto m_ActiveRadius = 0x218; // int32_t
	}

	namespace n_UParticleModuleLocationPrimitiveTriangle { // : UParticleModuleLocationBase
		constexpr auto StartOffset = 0x30; // FRawDistributionVector
		constexpr auto Height = 0x78; // FRawDistributionFloat
		constexpr auto Angle = 0xa8; // FRawDistributionFloat
		constexpr auto Thickness = 0xd8; // FRawDistributionFloat
	}

	namespace n_UTexture2D { // : UTexture
		constexpr auto LevelIndex = 0xd0; // int32_t
		constexpr auto FirstResourceMemMip = 0xd4; // int32_t
		constexpr auto bTemporarilyDisableStreaming = 0xd8; // char : 1
		constexpr auto AddressX = 0xd9; // TextureAddress
		constexpr auto AddressY = 0xda; // TextureAddress
		constexpr auto ImportedSize = 0xdc; // FIntPoint
	}

	namespace n_UMM_Common_PopUp_Count { // : UWidgetBase
		constexpr auto WidgetAnimation_Start = 0x348; // UWidgetAnimation*
		constexpr auto WidgetAnimation_Count = 0x350; // UWidgetAnimation*
		constexpr auto WidgetAnimation_Name = 0x358; // UWidgetAnimation*
		constexpr auto Pannel_Count = 0x360; // UPanelWidget*
		constexpr auto Pannel_Start = 0x368; // UPanelWidget*
		constexpr auto Pannel_Name = 0x370; // UPanelWidget*
		constexpr auto Image_Count = 0x378; // UImage*
		constexpr auto TextBlock_Name = 0x380; // UTextBlock*
	}

	namespace n_UMM_Auction_Slot_Result { // : UMM_Auction_Slot_Base
		constexpr auto m_pSlotItem = 0x348; // UMM_Slot_Inventory*
		constexpr auto m_pTxtName = 0x350; // UMirTextBlock*
		constexpr auto m_pTxtSellPrice = 0x358; // UMirTextBlock*
		constexpr auto m_pTxtRealSellPrice = 0x360; // UMirTextBlock*
		constexpr auto m_pTxtRemainTime = 0x368; // UMirRichTextBlock*
		constexpr auto m_pBtnCancle = 0x370; // UMM_Common_Btn*
	}

	namespace n_UParticleModuleLight { // : UParticleModuleLightBase
		constexpr auto bUseInverseSquaredFalloff = 0x30; // bool
		constexpr auto bAffectsTranslucency = 0x31; // bool
		constexpr auto bPreviewLightRadius = 0x32; // bool
		constexpr auto SpawnFraction = 0x34; // float
		constexpr auto ColorScaleOverLife = 0x38; // FRawDistributionVector
		constexpr auto BrightnessOverLife = 0x80; // FRawDistributionFloat
		constexpr auto RadiusScale = 0xb0; // FRawDistributionFloat
		constexpr auto LightExponent = 0xe0; // FRawDistributionFloat
		constexpr auto LightingChannels = 0x110; // FLightingChannels
		constexpr auto VolumetricScatteringIntensity = 0x114; // float
		constexpr auto bHighQualityLights = 0x118; // bool
		constexpr auto bShadowCastingLights = 0x119; // bool
	}

	namespace n_UAnimSequence { // : UAnimSequenceBase
		constexpr auto NumFrames = 0xa8; // int32_t
		constexpr auto TrackToSkeletonMapTable = 0xb0; // TArray<FTrackToSkeletonMap>
		constexpr auto CurveCompressionSettings = 0xd0; // UAnimCurveCompressionSettings*
		constexpr auto AdditiveAnimType = 0x1a8; // EAdditiveAnimationType
		constexpr auto RefPoseType = 0x1a9; // EAdditiveBasePoseType
		constexpr auto RefPoseSeq = 0x1b0; // UAnimSequence*
		constexpr auto RefFrameIndex = 0x1b8; // int32_t
		constexpr auto RetargetSource = 0x1bc; // FName
		constexpr auto Interpolation = 0x1c4; // EAnimInterpolationType
		constexpr auto bEnableRootMotion = 0x1c5; // bool
		constexpr auto RootMotionRootLock = 0x1c6; // ERootMotionRootLock
		constexpr auto bForceRootLock = 0x1c7; // bool
		constexpr auto bUseNormalizedRootMotionScale = 0x1c8; // bool
		constexpr auto bRootMotionSettingsCopiedFromMontage = 0x1c9; // bool
		constexpr auto AuthoredSyncMarkers = 0x1d0; // TArray<FAnimSyncMarker>
	}

	namespace n_UCameraShakeNotify { // : UAnimNotify
		constexpr auto CameraShakeClass = 0x38; // UCameraShake*
		constexpr auto ShakeScale = 0x40; // float
		constexpr auto ShakeDistance = 0x44; // float
	}

	namespace n_UPoseWatch { // : UObject
		constexpr auto Node = 0x28; // UEdGraphNode*
		constexpr auto PoseWatchColour = 0x30; // FColor
	}

	namespace n_UMM_ProgressBar_HP_Stack { // : UMM_ProgressBar_HP
		constexpr auto TextBlock_StackCount = 0x3b8; // UMirTextBlock*
		constexpr auto StackColor = 0x3c0; // TArray<FPorgressColor>
	}

	namespace n_UMM_Panel_Common_Loading { // : UWidgetBase
		constexpr auto m_pParentWidget = 0x260; // UWidgetBase*
		constexpr auto m_arChildWidget = 0x268; // TArray<TWeakObjectPtr<UWidgetBase>>
		constexpr auto m_arMirTextBlock = 0x280; // TArray<TWeakObjectPtr<UMirTextBlock>>
		constexpr auto m_arMirRichTextBlock = 0x290; // TArray<TWeakObjectPtr<UMirRichTextBlock>>
		constexpr auto m_arMirEditableText = 0x2a0; // TArray<TWeakObjectPtr<UMirEditableText>>
		constexpr auto m_arMirImage = 0x2b0; // TArray<TWeakObjectPtr<UMirImage>>
	}

	namespace n_AExponentialHeightFogOverrideVolume { // : APostProcessVolume
		constexpr auto OverrideExponentialHeightFog = 0x7a0; // UOverrideExponentialHeightFog*
	}

	namespace n_UMM_TotalQuick_SkillSlot { // : UWidgetBase
		constexpr auto m_pImgSkillIcon = 0x2e0; // UMirImage*
		constexpr auto m_pImgSlotDirBg = 0x2e8; // UImage*
		constexpr auto m_pCan_AutoSetOn = 0x2f0; // UCanvasPanel*
		constexpr auto m_pCan_AutoSetOff = 0x2f8; // UCanvasPanel*
		constexpr auto m_pImgBookmarkOff = 0x300; // UMirImage*
		constexpr auto m_pImgBookmarkOn = 0x308; // UMirImage*
		constexpr auto m_pBtnClick = 0x310; // UButton*
	}

	namespace n_UMM_UIAction_RecommendEquip { // : UMM_UIAction
		constexpr auto STRING_GUIDE_MESSAGE_CHANGEEQUIP = 0x428; // int32_t
		constexpr auto STRING_COMBAT_POINT_TITLE = 0x42c; // int32_t
	}

	namespace n_UEnvQueryNode { // : UObject
		constexpr auto VerNum = 0x28; // int32_t
	}

	namespace n_UEnvQueryTest_Overlap { // : UEnvQueryTest
		constexpr auto OverlapData = 0x1c0; // FEnvOverlapData
	}

	namespace n_UMM_PieceItemSlot { // : UWidgetBase
		constexpr auto m_Effect = 0x2e0; // UWidgetAnimation*
		constexpr auto m_PieceItemSlot = 0x2e8; // UMM_Slot_Material*
	}

	namespace n_UMM_Popup_Restore_Item_Slot { // : UWidgetBase
		constexpr auto m_pTxtName = 0x2e0; // UMirTextBlock*
		constexpr auto m_pTxtRemainTime = 0x2e8; // UMirTextBlock*
		constexpr auto m_pTxtTime = 0x2f0; // UMirTextBlock*
		constexpr auto m_pImgFocus = 0x2f8; // UMirImage*
		constexpr auto m_pImgDiable = 0x300; // UMirImage*
		constexpr auto m_pBtnClick = 0x308; // UMirButton*
		constexpr auto m_pImgClock = 0x310; // UMirImage*
		constexpr auto m_pHorRemain = 0x318; // UHorizontalBox*
	}

	namespace n_UMediaPlayer { // : UObject
		constexpr auto OnEndReached = 0x28; // FScriptMulticastDelegate
		constexpr auto OnMediaClosed = 0x38; // FScriptMulticastDelegate
		constexpr auto OnMediaOpened = 0x48; // FScriptMulticastDelegate
		constexpr auto OnMediaOpenFailed = 0x58; // FScriptMulticastDelegate
		constexpr auto OnPlaybackResumed = 0x68; // FScriptMulticastDelegate
		constexpr auto OnPlaybackSuspended = 0x78; // FScriptMulticastDelegate
		constexpr auto OnSeekCompleted = 0x88; // FScriptMulticastDelegate
		constexpr auto OnTracksChanged = 0x98; // FScriptMulticastDelegate
		constexpr auto CacheAhead = 0xa8; // FTimespan
		constexpr auto CacheBehind = 0xb0; // FTimespan
		constexpr auto CacheBehindGame = 0xb8; // FTimespan
		constexpr auto NativeAudioOut = 0xc0; // bool
		constexpr auto PlayOnOpen = 0xc1; // bool
		constexpr auto Shuffle = 0xc4; // char : 1
		constexpr auto Loop = 0xc4; // char : 1
		constexpr auto Playlist = 0xc8; // UMediaPlaylist*
		constexpr auto PlaylistIndex = 0xd0; // int32_t
		constexpr auto TimeDelay = 0xd8; // FTimespan
		constexpr auto HorizontalFieldOfView = 0xe0; // float
		constexpr auto VerticalFieldOfView = 0xe4; // float
		constexpr auto ViewRotation = 0xe8; // FRotator
		constexpr auto PlayerGuid = 0x120; // FGuid
	}

	namespace n_UMaterialExpressionPreSkinnedPosition { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UMM_PopupGuildGivePersonalSlot { // : UWidgetBase
		constexpr auto txt_grade = 0x2e0; // UMirTextBlock*
		constexpr auto img_online = 0x2e8; // UMirImage*
		constexpr auto Portrait = 0x2f0; // UMM_GuildMemberPortrait*
		constexpr auto txt_nickname = 0x2f8; // UMirTextBlock*
		constexpr auto txt_custom_title = 0x300; // UMirTextBlock*
		constexpr auto txt_level = 0x308; // UMirTextBlock*
		constexpr auto img_class = 0x310; // UMirImage*
		constexpr auto txt_class = 0x318; // UMirTextBlock*
		constexpr auto txt_combat_power = 0x320; // UMirTextBlock*
		constexpr auto txt_daily_contribution = 0x328; // UMirTextBlock*
		constexpr auto cb_selected = 0x330; // UMirCheckBox*
	}

	namespace n_USkeletalBodySetup { // : UBodySetup
		constexpr auto bSkipScaleFromAnimation = 0x240; // bool
		constexpr auto PhysicalAnimationData = 0x248; // TArray<FPhysicalAnimationProfile>
	}

	namespace n_UFindTurnBasedMatchCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto OnFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_AMirLevelSequenceActor { // : AActor
		constexpr auto m_pLevelSequencePlayer = 0x238; // ULevelSequencePlayer*
		constexpr auto m_pLevelSequenceActor = 0x240; // ALevelSequenceActor*
	}

	namespace n_UMM_Hud_Chat_DottedLine { // : UWidgetBase
		constexpr auto RTxt_DottedLine = 0x2f0; // UMirRichTextBlock*
	}

	namespace n_UMM_PetSpeechBalloon { // : UWidgetBase
		constexpr auto m_fShowTime = 0x2e0; // float
		constexpr auto m_Txt_Speech = 0x2f8; // UMirTextBlock*
		constexpr auto m_AniStart = 0x300; // UWidgetAnimation*
		constexpr auto m_AniEnd = 0x308; // UWidgetAnimation*
	}

	namespace n_AOnlineBeaconClient { // : AOnlineBeacon
		constexpr auto BeaconOwner = 0x248; // AOnlineBeaconHostObject*
		constexpr auto BeaconConnection = 0x250; // UNetConnection*
		constexpr auto ConnectionState = 0x258; // EBeaconConnectionState
	}

	namespace n_UMM_Popup_DominionPrize { // : UWidgetBase
		constexpr auto m_pToolTip = 0x2f8; // UMM_Common_ToolTipBtn*
		constexpr auto m_pBtnClose = 0x300; // UMM_Common_Btn_Symbol*
		constexpr auto m_pBtnCancel = 0x308; // UMM_Common_Btn*
		constexpr auto m_pBtnRefresh = 0x310; // UMM_Common_Btn_Symbol*
		constexpr auto m_pBtnTargetChange = 0x318; // UMM_Common_Btn*
		constexpr auto m_pTxtUserName = 0x320; // UMirTextBlock*
		constexpr auto m_pScrollBox = 0x328; // UMirScrollBox*
	}

	namespace n_UMM_Slot_Registered_Circle { // : UMM_Slot_Base
		constexpr auto m_Img_GradeBgEffect = 0x3f8; // UMirImage*
		constexpr auto m_ImgPlus = 0x400; // UMirImage*
		constexpr auto m_ImgTierBg = 0x408; // UMirImage*
		constexpr auto m_ImgDisabled = 0x410; // UMirImage*
		constexpr auto m_TxtSmeltingLevel = 0x418; // UMirTextBlock*
		constexpr auto m_TxtHavCount = 0x420; // UMirTextBlock*
		constexpr auto m_BtnUnmount = 0x428; // UMM_Common_Btn_Symbol*
		constexpr auto m_Img_UserLock = 0x430; // UMirImage*
		constexpr auto m_Img_UserLock_Stack = 0x438; // UMirImage*
	}

	namespace n_UNavArea_Link { // : UNavArea
		constexpr auto DefaultCost = 0x30; // float
		constexpr auto FixedAreaEnteringCost = 0x34; // float
		constexpr auto DrawColor = 0x38; // FColor
		constexpr auto SupportedAgents = 0x3c; // FNavAgentSelector
		constexpr auto bSupportsAgent0 = 0x40; // char : 1
		constexpr auto bSupportsAgent1 = 0x40; // char : 1
		constexpr auto bSupportsAgent2 = 0x40; // char : 1
		constexpr auto bSupportsAgent3 = 0x40; // char : 1
		constexpr auto bSupportsAgent4 = 0x40; // char : 1
		constexpr auto bSupportsAgent5 = 0x40; // char : 1
		constexpr auto bSupportsAgent6 = 0x40; // char : 1
		constexpr auto bSupportsAgent7 = 0x40; // char : 1
		constexpr auto bSupportsAgent8 = 0x41; // char : 1
		constexpr auto bSupportsAgent9 = 0x41; // char : 1
		constexpr auto bSupportsAgent10 = 0x41; // char : 1
		constexpr auto bSupportsAgent11 = 0x41; // char : 1
		constexpr auto bSupportsAgent12 = 0x41; // char : 1
		constexpr auto bSupportsAgent13 = 0x41; // char : 1
		constexpr auto bSupportsAgent14 = 0x41; // char : 1
		constexpr auto bSupportsAgent15 = 0x41; // char : 1
	}

	namespace n_UGeometryCollectionCache { // : UObject
		constexpr auto RecordedData = 0x28; // FRecordedTransformTrack
		constexpr auto SupportedCollection = 0x38; // UGeometryCollection*
		constexpr auto CompatibleCollectionState = 0x40; // FGuid
	}

	namespace n_UMM_Customizing_ListItem { // : UWidgetBase
		constexpr auto m_pAssetImage = 0x2e0; // UMirImage*
		constexpr auto m_pNameText = 0x2e8; // UMirTextBlock*
		constexpr auto m_pSelectImage = 0x2f0; // UMirImage*
		constexpr auto m_pSelectButton = 0x2f8; // UMirButton*
		constexpr auto m_EmptyIconID = 0x310; // int32_t
		constexpr auto m_EmptyIconOpacity = 0x314; // float
		constexpr auto m_EmptyMessageID = 0x318; // int32_t
	}

	namespace n_ATargetPoint { // : AActor
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto bHidden = 0x58; // char : 1
		constexpr auto bNetTemporary = 0x58; // char : 1
		constexpr auto bNetStartup = 0x58; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x58; // char : 1
		constexpr auto bAlwaysRelevant = 0x58; // char : 1
		constexpr auto bReplicateMovement = 0x58; // char : 1
		constexpr auto bTearOff = 0x58; // char : 1
		constexpr auto bExchangedRoles = 0x58; // char : 1
		constexpr auto bNetLoadOnClient = 0x59; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x59; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x59; // char : 1
		constexpr auto bRelevantForLevelBounds = 0x59; // char : 1
		constexpr auto bReplayRewindable = 0x59; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x59; // char : 1
		constexpr auto bAutoDestroyWhenFinished = 0x59; // char : 1
		constexpr auto bBlockInput = 0x59; // char : 1
		constexpr auto bCanBeDamaged = 0x5a; // char : 1
		constexpr auto bCollideWhenPlacing = 0x5a; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x5a; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x5a; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x5a; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x5a; // char : 1
		constexpr auto bIsEditorOnlyActor = 0x5a; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x5a; // char : 1
		constexpr auto bReplicates = 0x5b; // char : 1
		constexpr auto bCanBeInCluster = 0x5b; // char : 1
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x5b; // char : 1
		constexpr auto bActorEnableCollision = 0x5c; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x5c; // char : 1
		constexpr auto UpdateOverlapsMethodDuringLevelStreaming = 0x5d; // EActorUpdateOverlapsMethod
		constexpr auto DefaultUpdateOverlapsMethodDuringLevelStreaming = 0x5e; // EActorUpdateOverlapsMethod
		constexpr auto RemoteRole = 0x5f; // ENetRole
		constexpr auto ReplicatedMovement = 0x60; // FRepMovement
		constexpr auto InitialLifeSpan = 0x94; // float
		constexpr auto CustomTimeDilation = 0x98; // float
		constexpr auto AttachmentReplication = 0xa0; // FRepAttachment
		constexpr auto Owner = 0xe0; // AActor*
		constexpr auto NetDriverName = 0xe8; // FName
		constexpr auto Role = 0xf0; // ENetRole
		constexpr auto NetDormancy = 0xf1; // ENetDormancy
		constexpr auto SpawnCollisionHandlingMethod = 0xf2; // ESpawnActorCollisionHandlingMethod
		constexpr auto AutoReceiveInput = 0xf3; // EAutoReceiveInput
		constexpr auto InputPriority = 0xf4; // int32_t
		constexpr auto InputComponent = 0xf8; // UInputComponent*
		constexpr auto NetCullDistanceSquared = 0x100; // float
		constexpr auto NetTag = 0x104; // int32_t
		constexpr auto NetUpdateFrequency = 0x108; // float
		constexpr auto MinNetUpdateFrequency = 0x10c; // float
		constexpr auto NetPriority = 0x110; // float
		constexpr auto Instigator = 0x118; // APawn*
		constexpr auto Children = 0x120; // TArray<AActor*>
		constexpr auto RootComponent = 0x130; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x138; // TArray<AMatineeActor*>
		constexpr auto Layers = 0x150; // TArray<FName>
		constexpr auto ParentComponent = 0x160; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto Tags = 0x168; // TArray<FName>
		constexpr auto OnTakeAnyDamage = 0x178; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x179; // FScriptMulticastDelegate
		constexpr auto OnTakeRadialDamage = 0x17a; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x17b; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x17c; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x17d; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x17e; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x17f; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x180; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x181; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x182; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x183; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x184; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x185; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x186; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x187; // FScriptMulticastDelegate
		constexpr auto InstanceComponents = 0x1e8; // TArray<UActorComponent*>
		constexpr auto BlueprintCreatedComponents = 0x1f8; // TArray<UActorComponent*>
	}

	namespace n_UMM_HudProgressBar { // : UWidgetBase
		constexpr auto m_pAnim_Progress_End = 0x2e0; // UWidgetAnimation*
		constexpr auto m_pAnim_Progress_Loof = 0x2e8; // UWidgetAnimation*
		constexpr auto m_CanProgressObj = 0x2f0; // UCanvasPanel*
		constexpr auto m_CanLoopEffect = 0x2f8; // UCanvasPanel*
		constexpr auto Pro_Guage = 0x300; // UProgressBar*
		constexpr auto txt_progress = 0x308; // UTextBlock*
		constexpr auto m_RemainCountHorizontalBox = 0x310; // UHorizontalBox*
		constexpr auto m_Txt_RemainCount = 0x318; // UTextBlock*
		constexpr auto btn_gather_info = 0x320; // UMM_Common_Btn_Symbol*
		constexpr auto TxtTitle = 0x328; // UMirRichTextBlock*
		constexpr auto ovlBuff = 0x330; // UOverlay*
		constexpr auto vtcBuffInfo = 0x338; // UVerticalBox*
		constexpr auto btnBuffTooltip = 0x340; // UMirButton*
		constexpr auto imgBuffIcon = 0x348; // UImage* [0x2]
		constexpr auto wgtBuffInfoSlot = 0x358; // UBuffInfoSlotWidget* [0x2]
	}

	namespace n_UMM_Popup_GuideWebBrowser { // : UWidgetBase
		constexpr auto m_Can_Back = 0x2e0; // UPanelWidget*
		constexpr auto m_Btn_Back = 0x2e8; // UMirButton*
		constexpr auto m_C_WebBrowser = 0x2f0; // UMirWebBrowser*
		constexpr auto m_CB_Close = 0x2f8; // UMM_Common_Btn_Symbol*
	}

	namespace n_UWeaponMaterialNotify { // : UAnimNotifyState
		constexpr auto m_arrWeaponMaterial = 0x30; // TArray<FWeaponMaterialData>
	}

	namespace n_UEdGraphNode_Documentation { // : UEdGraphNode
		constexpr auto link = 0x98; // FString
		constexpr auto Excerpt = 0xa8; // FString
	}

	namespace n_USoundClass { // : UObject
		constexpr auto Properties = 0x28; // FSoundClassProperties
		constexpr auto ChildClasses = 0x58; // TArray<USoundClass*>
		constexpr auto PassiveSoundMixModifiers = 0x68; // TArray<FPassiveSoundMixModifier>
		constexpr auto Modulation = 0x78; // FSoundModulation
		constexpr auto ParentClass = 0x88; // USoundClass*
	}

	namespace n_AVolumetricLightmapDensityVolume { // : AVolume
		constexpr auto AllowedMipLevelRange = 0x250; // FInt32Interval
	}

	namespace n_UInterpToMovementComponent { // : UMovementComponent
		constexpr auto Duration = 0xf0; // float
		constexpr auto bPauseOnImpact = 0xf4; // char : 1
		constexpr auto bSweep = 0xf8; // bool
		constexpr auto TeleportType = 0xf9; // ETeleportType
		constexpr auto BehaviourType = 0xfa; // EInterpToBehaviourType
		constexpr auto bCheckIfStillInWorld = 0xfb; // bool
		constexpr auto bForceSubStepping = 0xfc; // char : 1
		constexpr auto OnInterpToReverse = 0x100; // FScriptMulticastDelegate
		constexpr auto OnInterpToStop = 0x110; // FScriptMulticastDelegate
		constexpr auto OnWaitBeginDelegate = 0x120; // FScriptMulticastDelegate
		constexpr auto OnWaitEndDelegate = 0x130; // FScriptMulticastDelegate
		constexpr auto OnResetDelegate = 0x140; // FScriptMulticastDelegate
		constexpr auto MaxSimulationTimeStep = 0x150; // float
		constexpr auto MaxSimulationIterations = 0x154; // int32_t
		constexpr auto ControlPoints = 0x158; // TArray<FInterpControlPoint>
	}

	namespace n_UMM_B_Map { // : UWidgetBase
		constexpr auto m_HrzMenu = 0x328; // UHorizontalBox* [0x3]
		constexpr auto m_Menu = 0x340; // UMM_Map_NameBtn* [0x3]
		constexpr auto m_CBClose = 0x358; // UMM_Common_Btn_Symbol*
		constexpr auto m_Minimap = 0x360; // UMM_Map_Minimap*
		constexpr auto m_Worldmap = 0x368; // UMM_Map_Worldmap*
		constexpr auto m_ImgBg = 0x370; // UMirImage*
		constexpr auto m_Canvas_AreaMove = 0x378; // UMirCanvasPanel*
		constexpr auto m_Btn_AreaPrev = 0x380; // UMM_Common_Btn_Symbol*
		constexpr auto m_Btn_AreaNext = 0x388; // UMM_Common_Btn_Symbol*
		constexpr auto m_Canvas_ServerChange = 0x390; // UMirCanvasPanel*
		constexpr auto m_Btn_ServerChange = 0x398; // UMirButton*
	}

	namespace n_UMM_GameOption_UI { // : UWidgetBase
		constexpr auto m_pParentWidget = 0x260; // UWidgetBase*
		constexpr auto m_arChildWidget = 0x268; // TArray<TWeakObjectPtr<UWidgetBase>>
		constexpr auto m_arMirTextBlock = 0x280; // TArray<TWeakObjectPtr<UMirTextBlock>>
		constexpr auto m_arMirRichTextBlock = 0x290; // TArray<TWeakObjectPtr<UMirRichTextBlock>>
		constexpr auto m_arMirEditableText = 0x2a0; // TArray<TWeakObjectPtr<UMirEditableText>>
		constexpr auto m_arMirImage = 0x2b0; // TArray<TWeakObjectPtr<UMirImage>>
	}

	namespace n_UMM_Loading_Inner { // : UWidgetBase
		constexpr auto m_Txt_Percent = 0x2e0; // UTextBlock*
		constexpr auto m_Pgr_Loading = 0x2e8; // UProgressBar*
		constexpr auto m_Can_Effect = 0x2f0; // UPanelWidget*
	}

	namespace n_UMM_SortBtn { // : UWidgetBase
		constexpr auto m_Spc_Main = 0x2e8; // USpacer*
		constexpr auto m_Txt_Name = 0x2f0; // UMirTextBlock*
		constexpr auto m_Img_Selected = 0x2f8; // UMirImage*
		constexpr auto m_Btn_Main = 0x300; // UMirButton*
	}

	namespace n_UVOIPTalker { // : UActorComponent
		constexpr auto Settings = 0xb0; // FVoiceSettings
	}

	namespace n_UMM_B_NameTag { // : UWidgetBase
		constexpr auto m_Can_GuildMark = 0x2e0; // UCanvasPanel*
		constexpr auto m_Img_GuildSymbol = 0x2e8; // UImage*
		constexpr auto m_Img_GuildFrame = 0x2f0; // UImage*
		constexpr auto m_Grd_Title = 0x2f8; // UPanelWidget*
		constexpr auto m_Txt_Title = 0x300; // UTextBlock*
		constexpr auto m_Txt_GuildName = 0x308; // UTextBlock*
		constexpr auto m_Txt_Name = 0x310; // UTextBlock*
		constexpr auto m_Grd_HP = 0x318; // UPanelWidget*
		constexpr auto m_Prg_HP = 0x320; // UProgressBar*
		constexpr auto m_Can_SubIcon = 0x328; // UCanvasPanel*
		constexpr auto m_Img_SubIcon = 0x330; // UImage*
		constexpr auto m_Img_BgSubIcon = 0x338; // UImage*
		constexpr auto m_SpeechBalloonLoc = 0x340; // UImage*
		constexpr auto m_NameTextSpacer_GuildMark = 0x348; // USpacer*
		constexpr auto m_NameTextSpacer_ClassIcon = 0x350; // USpacer*
		constexpr auto m_RevivalTag_Btn = 0x358; // UMM_RevivalTag_Btn*
		constexpr auto m_RefuseRebirthGauge = 0x360; // UMM_RefuseRebirthGauge*
		constexpr auto m_canSharedTargetIcon = 0x368; // UMirCanvasPanel*
		constexpr auto m_CanGuildCommandMark = 0x370; // UMirCanvasPanel*
		constexpr auto m_ImgGuildCommandMark = 0x378; // UMirImage*
	}

	namespace n_UMM_ProfileSlot { // : UWidgetBase
		constexpr auto m_IconImage = 0x2f0; // UMirImage*
		constexpr auto m_ApplyWidget = 0x2f8; // UCanvasPanel*
		constexpr auto m_SelectImage = 0x300; // UMirImage*
		constexpr auto m_Btn_Main = 0x308; // UMirButton*
		constexpr auto m_Can_ServerVisit = 0x310; // UMirCanvasPanel*
	}

	namespace n_UTextBinding { // : UPropertyBinding
		constexpr auto SourceObject = 0x28; // TWeakObjectPtr<UObject>
		constexpr auto SourcePath = 0x30; // FDynamicPropertyPath
		constexpr auto DestinationProperty = 0x58; // FName
	}

	namespace n_UMM_Btn_HudDirAvoid { // : UWidgetBase
		constexpr auto m_arrIconBrush = 0x348; // TArray<FBrushObject>
		constexpr auto m_fShowVirtualPadDelayTime = 0x358; // float
		constexpr auto m_iEffectID_UseOK = 0x35c; // int32_t
		constexpr auto CoolTimeFonts = 0x360; // TArray<FBrushObject>
		constexpr auto ClickSound = 0x370; // int32_t
		constexpr auto m_pImgIcon = 0x378; // UImage*
		constexpr auto m_pImgCooltime = 0x380; // UImage*
		constexpr auto m_pBtnArea = 0x388; // UButton*
		constexpr auto m_pGridEffect = 0x390; // UPanelWidget*
		constexpr auto m_pImg_RoundCooltime = 0x398; // UImage*
		constexpr auto ImageCool = 0x3a0; // UImage*
		constexpr auto MaterialInstanceDynamicCool = 0x3a8; // UMaterialInstanceDynamic*
		constexpr auto ImageCoolTimeCount_2 = 0x3b0; // UImage*
		constexpr auto ImageCoolTimeCount_11 = 0x3b8; // UImage*
		constexpr auto ImageCoolTimeCount_101 = 0x3c0; // UImage*
		constexpr auto AlignedWrapBoxCoolFont = 0x3c8; // UAlignedWrapBox*
		constexpr auto ImgSilence = 0x3d0; // UMirImage*
	}

	namespace n_USplineComponent { // : UPrimitiveComponent
		constexpr auto SplineCurves = 0x418; // FSplineCurves
		constexpr auto SplineInfo = 0x480; // FInterpCurveVector
		constexpr auto SplineRotInfo = 0x498; // FInterpCurveQuat
		constexpr auto SplineScaleInfo = 0x4b0; // FInterpCurveVector
		constexpr auto SplineReparamTable = 0x4c8; // FInterpCurveFloat
		constexpr auto bAllowSplineEditingPerInstance = 0x4e0; // bool
		constexpr auto ReparamStepsPerSegment = 0x4e4; // int32_t
		constexpr auto Duration = 0x4e8; // float
		constexpr auto bStationaryEndpoints = 0x4ec; // bool
		constexpr auto bSplineHasBeenEdited = 0x4ed; // bool
		constexpr auto bModifiedByConstructionScript = 0x4ee; // bool
		constexpr auto bInputSplinePointsToConstructionScript = 0x4ef; // bool
		constexpr auto bDrawDebug = 0x4f0; // bool
		constexpr auto bClosedLoop = 0x4f1; // bool
		constexpr auto bLoopPositionOverride = 0x4f2; // bool
		constexpr auto LoopPosition = 0x4f4; // float
		constexpr auto DefaultUpVector = 0x4f8; // FVector
	}

	namespace n_UMM_MagicStoneDetailInfo { // : UWidgetBase
		constexpr auto magic_stone_slot = 0x2f0; // UMM_Slot_Material*
		constexpr auto Txt_Name = 0x2f8; // UMirTextBlock*
		constexpr auto txt_transcend_step = 0x300; // UMirTextBlock*
		constexpr auto lst_slot = 0x308; // TArray<UMM_MagicStone_AttributeSlot*>
		constexpr auto cp_contents = 0x318; // UMirCanvasPanel*
	}

	namespace n_UMaterialExpressionCameraVectorWS { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UMaterialExpressionTwoSidedSign { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UMM_Customizing_PaletteItem { // : UWidgetBase
		constexpr auto m_pColorImage_Main = 0x2f0; // UMirImage*
		constexpr auto m_pColorImage_Sub = 0x2f8; // UMirImage*
		constexpr auto m_pSelectIcon = 0x300; // UMirImage*
		constexpr auto m_pSelectButton = 0x308; // UMirButton*
	}

	namespace n_UMM_HeadlineMsg { // : UMM_MessageWidgetBase
		constexpr auto m_fMoveSpeed = 0x2f0; // float
		constexpr auto m_AniStart = 0x2f8; // UWidgetAnimation*
		constexpr auto m_Grid_DisplayArea = 0x328; // UPanelWidget*
		constexpr auto m_RTxt_Message = 0x330; // UMirRichTextBlock*
		constexpr auto m_Canvas_TextArea = 0x338; // UCanvasPanel*
	}

	namespace n_UEnvQueryTest_PathfindingBatch { // : UEnvQueryTest_Pathfinding
		constexpr auto ScanRangeMultiplier = 0x238; // FAIDataProviderFloatValue
	}

	namespace n_UMeshSimplificationSettings { // : UDeveloperSettings
		constexpr auto MeshReductionModuleName = 0x38; // FName
	}

	namespace n_UMM_RefuseRebirthGauge { // : UWidgetBase
		constexpr auto m_RefuseRebirthGauge = 0x2e0; // UMirImage*
		constexpr auto m_Canvas_PartyMember = 0x2e8; // UCanvasPanel*
	}

	namespace n_UNavAreaMeta_SwitchByAgent { // : UNavAreaMeta
		constexpr auto Agent0Area = 0x48; // UNavArea*
		constexpr auto Agent1Area = 0x50; // UNavArea*
		constexpr auto Agent2Area = 0x58; // UNavArea*
		constexpr auto Agent3Area = 0x60; // UNavArea*
		constexpr auto Agent4Area = 0x68; // UNavArea*
		constexpr auto Agent5Area = 0x70; // UNavArea*
		constexpr auto Agent6Area = 0x78; // UNavArea*
		constexpr auto Agent7Area = 0x80; // UNavArea*
		constexpr auto Agent8Area = 0x88; // UNavArea*
		constexpr auto Agent9Area = 0x90; // UNavArea*
		constexpr auto Agent10Area = 0x98; // UNavArea*
		constexpr auto Agent11Area = 0xa0; // UNavArea*
		constexpr auto Agent12Area = 0xa8; // UNavArea*
		constexpr auto Agent13Area = 0xb0; // UNavArea*
		constexpr auto Agent14Area = 0xb8; // UNavArea*
		constexpr auto Agent15Area = 0xc0; // UNavArea*
	}

	namespace n_UMaterialExpressionFeatureLevelSwitch { // : UMaterialExpression
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto Inputs = 0x54; // FExpressionInput [0x4]
	}

	namespace n_UVRNotificationsComponent { // : UActorComponent
		constexpr auto HMDTrackingInitializingAndNeedsHMDToBeTrackedDelegate = 0xb0; // FScriptMulticastDelegate
		constexpr auto HMDTrackingInitializedDelegate = 0xc0; // FScriptMulticastDelegate
		constexpr auto HMDRecenteredDelegate = 0xd0; // FScriptMulticastDelegate
		constexpr auto HMDLostDelegate = 0xe0; // FScriptMulticastDelegate
		constexpr auto HMDReconnectedDelegate = 0xf0; // FScriptMulticastDelegate
		constexpr auto HMDConnectCanceledDelegate = 0x100; // FScriptMulticastDelegate
		constexpr auto HMDPutOnHeadDelegate = 0x110; // FScriptMulticastDelegate
		constexpr auto HMDRemovedFromHeadDelegate = 0x120; // FScriptMulticastDelegate
		constexpr auto VRControllerRecenteredDelegate = 0x130; // FScriptMulticastDelegate
	}

	namespace n_UGridSlot { // : UPanelSlot
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
		constexpr auto Row = 0x4c; // int32_t
		constexpr auto RowSpan = 0x50; // int32_t
		constexpr auto Column = 0x54; // int32_t
		constexpr auto ColumnSpan = 0x58; // int32_t
		constexpr auto Layer = 0x5c; // int32_t
		constexpr auto Nudge = 0x60; // FVector2D
	}

	namespace n_URichTextBlockImageDecorator { // : URichTextBlockDecorator
		constexpr auto ImageSet = 0x28; // UDataTable*
	}

	namespace n_UTutorialGuidCommentWidget { // : UWidgetBase
		constexpr auto m_TutorialEffectID = 0x2e0; // int32_t
		constexpr auto cp_can = 0x2e8; // UCanvasPanel*
	}

	namespace n_USizeBoxSlot { // : UPanelSlot
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x58; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x59; // EVerticalAlignment
	}

	namespace n_UMM_ClosedTraining_CollectResultSlot { // : UWidgetBase
		constexpr auto m_UpColor = 0x2e0; // FLinearColor
		constexpr auto m_DownColor = 0x2f0; // FLinearColor
		constexpr auto m_Img_AbilityIcon = 0x300; // UMirImage*
		constexpr auto m_Txt_AbilityName = 0x308; // UMirTextBlock*
		constexpr auto m_RTxt_CurrValue = 0x310; // UMirRichTextBlock*
		constexpr auto m_RTxt_NextValue = 0x318; // UMirRichTextBlock*
	}

	namespace n_UMM_PopupWorldBossChannel { // : UWidgetBase
		constexpr auto btnClose = 0x2f0; // UMM_Common_Btn_Symbol*
		constexpr auto m_StartAni = 0x2f8; // UWidgetAnimation*
		constexpr auto m_EndAni = 0x300; // UWidgetAnimation*
	}

	namespace n_UWebBrowserAssetManager { // : UObject
		constexpr auto DefaultMaterial = 0x28; // UMaterial*
	}

	namespace n_AMirSkySphereActor { // : AActor
		constexpr auto UseLightMap = 0x218; // bool
		constexpr auto ColorsDeterminedBySunPosition = 0x219; // bool
		constexpr auto SunBrightness = 0x21c; // float
		constexpr auto CloudSpeed = 0x220; // float
		constexpr auto CloudOpacity = 0x224; // float
		constexpr auto StarsBrightness = 0x228; // float
		constexpr auto SunHeight = 0x22c; // float
		constexpr auto SunRadius = 0x230; // float
		constexpr auto HorizonFalloff = 0x234; // float
		constexpr auto ZenithColor = 0x238; // FLinearColor
		constexpr auto HorizonColor = 0x248; // FLinearColor
		constexpr auto CloudColor = 0x258; // FLinearColor
		constexpr auto OverallColor = 0x268; // FLinearColor
	}

	namespace n_UBTService_RunEQS { // : UBTService_BlackboardBase
		constexpr auto EQSRequest = 0x98; // FEQSParametrizedQueryExecutionRequest
	}

	namespace n_UInterpGroupDirector { // : UInterpGroup
		constexpr auto InterpTracks = 0x30; // TArray<UInterpTrack*>
		constexpr auto GroupName = 0x40; // FName
		constexpr auto GroupColor = 0x48; // FColor
		constexpr auto bCollapsed = 0x4c; // char : 1
		constexpr auto bVisible = 0x4c; // char : 1
		constexpr auto bIsFolder = 0x4c; // char : 1
		constexpr auto bIsParented = 0x4c; // char : 1
		constexpr auto bIsSelected = 0x4c; // char : 1
	}

	namespace n_USoundNodeConcatenator { // : USoundNode
		constexpr auto InputVolume = 0x40; // TArray<float>
	}

	namespace n_UStaticMeshSocket { // : UObject
		constexpr auto SocketName = 0x28; // FName
		constexpr auto RelativeLocation = 0x30; // FVector
		constexpr auto RelativeRotation = 0x3c; // FRotator
		constexpr auto RelativeScale = 0x48; // FVector
		constexpr auto Tag = 0x58; // FString
	}

	namespace n_UConvenientIDWdiget { // : UWidgetBase
		constexpr auto m_pParentWidget = 0x260; // UWidgetBase*
		constexpr auto m_arChildWidget = 0x268; // TArray<TWeakObjectPtr<UWidgetBase>>
		constexpr auto m_arMirTextBlock = 0x280; // TArray<TWeakObjectPtr<UMirTextBlock>>
		constexpr auto m_arMirRichTextBlock = 0x290; // TArray<TWeakObjectPtr<UMirRichTextBlock>>
		constexpr auto m_arMirEditableText = 0x2a0; // TArray<TWeakObjectPtr<UMirEditableText>>
		constexpr auto m_arMirImage = 0x2b0; // TArray<TWeakObjectPtr<UMirImage>>
	}

	namespace n_APostProcessVolume { // : AVolume
		constexpr auto Settings = 0x260; // FPostProcessSettings
		constexpr auto Priority = 0x790; // float
		constexpr auto BlendRadius = 0x794; // float
		constexpr auto BlendWeight = 0x798; // float
		constexpr auto bEnabled = 0x79c; // char : 1
		constexpr auto bUnbound = 0x79c; // char : 1
	}

	namespace n_UMM_Popup_GuildPermission { // : UWidgetBase
		constexpr auto m_Btn_Close = 0x2e0; // UMM_Common_Btn_Symbol*
		constexpr auto m_Btn_Confirm = 0x2e8; // UMM_Common_Btn*
		constexpr auto m_Btn_Cancel = 0x2f0; // UMM_Common_Btn*
		constexpr auto m_Txt_MeetingJoin_Grade = 0x2f8; // UMirTextBlock*
		constexpr auto m_Can_MeetingJoin_List = 0x300; // UMirCanvasPanel*
		constexpr auto m_ComboBox_MeetingJoin = 0x308; // UComboBoxString*
		constexpr auto m_Btn_MeetingJoin = 0x310; // UMirButton*
		constexpr auto m_Btn_MeetingJoin_Grade2 = 0x318; // UMirButton*
		constexpr auto m_Btn_MeetingJoin_Grade3 = 0x320; // UMirButton*
		constexpr auto m_Btn_MeetingJoin_Grade4 = 0x328; // UMirButton*
		constexpr auto m_Btn_MeetingJoin_Grade5 = 0x330; // UMirButton*
		constexpr auto m_Btn_MeetingJoin_GradeAll = 0x338; // UMirButton*
		constexpr auto m_Txt_MeetingView_Grade = 0x340; // UMirTextBlock*
		constexpr auto m_Can_MeetingView_List = 0x348; // UMirCanvasPanel*
		constexpr auto m_ComboBox_MeetingView = 0x350; // UComboBoxString*
		constexpr auto m_Btn_MeetingView = 0x358; // UMirButton*
		constexpr auto m_Btn_MeetingView_Grade2 = 0x360; // UMirButton*
		constexpr auto m_Btn_MeetingView_Grade3 = 0x368; // UMirButton*
		constexpr auto m_Btn_MeetingView_Grade4 = 0x370; // UMirButton*
		constexpr auto m_Btn_MeetingView_Grade5 = 0x378; // UMirButton*
		constexpr auto m_Btn_MeetingView_GradeAll = 0x380; // UMirButton*
	}

	namespace n_UAISenseConfig_Team { // : UAISenseConfig
		constexpr auto DebugColor = 0x28; // FColor
		constexpr auto MaxAge = 0x2c; // float
		constexpr auto bStartsEnabled = 0x30; // char : 1
	}

	namespace n_UMM_IAPManager { // : UObject
		constexpr auto MirStoreModule = 0x110; // UIAPStoreModuleBase*
	}

	namespace n_UActorSequence { // : UMovieSceneSequence
		constexpr auto MovieScene = 0x348; // UMovieScene*
		constexpr auto ObjectReferences = 0x350; // FActorSequenceObjectReferenceMap
	}

	namespace n_UParticleModuleLocationPrimitiveBase { // : UParticleModuleLocationBase
		constexpr auto Positive_X = 0x30; // char : 1
		constexpr auto Positive_Y = 0x30; // char : 1
		constexpr auto Positive_Z = 0x30; // char : 1
		constexpr auto Negative_X = 0x30; // char : 1
		constexpr auto Negative_Y = 0x30; // char : 1
		constexpr auto Negative_Z = 0x30; // char : 1
		constexpr auto SurfaceOnly = 0x30; // char : 1
		constexpr auto Velocity = 0x30; // char : 1
		constexpr auto VelocityScale = 0x38; // FRawDistributionFloat
		constexpr auto StartLocation = 0x68; // FRawDistributionVector
	}

	namespace n_UParticleModuleSize { // : UParticleModuleSizeBase
		constexpr auto StartSize = 0x30; // FRawDistributionVector
	}

	namespace n_UMM_Customizing_List { // : UCustomizingComponentBase
		constexpr auto m_ListArray = 0x300; // TArray<UMM_Customizing_ListItem*>
		constexpr auto m_pListBox = 0x310; // UWrapBox*
		constexpr auto m_pComponentTitle = 0x318; // UMM_Customizing_ComponentTitle*
	}

	namespace n_AQuestCompleteTrigger { // : AActor
		constexpr auto m_Collision = 0x218; // UCapsuleComponent*
		constexpr auto m_Delay = 0x220; // float
	}

	namespace n_UMM_Occupation_AuctionState { // : UWidgetBase
		constexpr auto Txt_Description = 0x2f0; // UMirTextBlock*
		constexpr auto Panel_DefenseGuild = 0x2f8; // UMirCanvasPanel*
		constexpr auto Panel_OffenseGuild = 0x300; // UMirCanvasPanel*
		constexpr auto Img_GuildMarkEdge_Defense = 0x308; // UMirImage*
		constexpr auto Img_GuildMark_Defense = 0x310; // UMirImage*
		constexpr auto Txt_GuildName_Defense = 0x318; // UMirTextBlock*
		constexpr auto m_pGoods_Defense_AuctionPrice = 0x320; // UMM_Dominion_Goods_Slot*
		constexpr auto m_pTxt_Defense_AuctionStatus = 0x328; // UMirTextBlock*
		constexpr auto m_pTxt_Defense_Status = 0x330; // UMirTextBlock*
		constexpr auto m_pCanvasDefenseCombatPoint = 0x338; // UHorizontalBox*
		constexpr auto m_pTxt_Defense_CombatPoint = 0x340; // UMirTextBlock*
		constexpr auto Img_GuildMarkEdge_Offense = 0x348; // UMirImage*
		constexpr auto Img_GuildMark_Offense = 0x350; // UMirImage*
		constexpr auto Txt_GuildName_Offense = 0x358; // UMirTextBlock*
		constexpr auto m_pGoods_Offense_AuctionPrice = 0x360; // UMM_Dominion_Goods_Slot*
		constexpr auto m_pTxt_Offense_AuctionStatus = 0x368; // UMirTextBlock*
		constexpr auto m_pTxt_Offense_Status = 0x370; // UMirTextBlock*
		constexpr auto m_pCanvasOffenseCombatPoint = 0x378; // UHorizontalBox*
		constexpr auto m_pTxt_Offense_CombatPoint = 0x380; // UMirTextBlock*
		constexpr auto m_pCanvasAuction = 0x388; // UMirCanvasPanel*
		constexpr auto m_pImgDefenseWin = 0x390; // UMirImage*
		constexpr auto m_pImgOffenseWin = 0x398; // UMirImage*
		constexpr auto m_pTxtDefAuctionAble = 0x3a0; // UMirTextBlock*
		constexpr auto m_pTxtAtkAuctionAble = 0x3a8; // UMirTextBlock*
		constexpr auto m_pTxtDefSiegeOk = 0x3b0; // UMirTextBlock*
		constexpr auto m_pTxtAtkSiegeOk = 0x3b8; // UMirTextBlock*
	}

	namespace n_UParticleModuleTrailSource { // : UParticleModuleTrailBase
		constexpr auto SourceMethod = 0x30; // ETrail2SourceMethod
		constexpr auto SourceName = 0x34; // FName
		constexpr auto SourceStrength = 0x40; // FRawDistributionFloat
		constexpr auto bLockSourceStength = 0x70; // char : 1
		constexpr auto SourceOffsetCount = 0x74; // int32_t
		constexpr auto SourceOffsetDefaults = 0x78; // TArray<FVector>
		constexpr auto SelectionMethod = 0x88; // EParticleSourceSelectionMethod
		constexpr auto bInheritRotation = 0x8c; // char : 1
	}

	namespace n_UBlockScreenWidget { // : UWidgetBase
		constexpr auto m_Can_Main = 0x338; // UPanelWidget*
		constexpr auto m_Throbber = 0x340; // UWidget*
		constexpr auto m_Ani_LoadingThrobber = 0x348; // UWidgetAnimation*
	}

	namespace n_UAndroidGoodiesSettings { // : UObject
		constexpr auto AndroidDrawablesFolder = 0x38; // FDirectoryPath
		constexpr auto sendSmsPermission = 0x48; // bool
		constexpr auto setAlarmPermission = 0x49; // bool
		constexpr auto cameraPermission = 0x4a; // bool
		constexpr auto flashlightPermission = 0x4b; // bool
		constexpr auto vibratePermission = 0x4c; // bool
		constexpr auto callPhonePermission = 0x4d; // bool
		constexpr auto readPhoneStatePermission = 0x4e; // bool
		constexpr auto readContactsPermission = 0x4f; // bool
		constexpr auto writeContactsPermission = 0x50; // bool
		constexpr auto installPackagesPermission = 0x51; // bool
	}

	namespace n_UBTTask_StopBehavior { // : UBTTaskNode
		constexpr auto ReturnResult = 0x70; // EBTNodeResult
		constexpr auto IsCounterAttack = 0x71; // bool
	}

	namespace n_UParticleModuleBeamSource { // : UParticleModuleBeamBase
		constexpr auto SourceMethod = 0x30; // Beam2SourceTargetMethod
		constexpr auto SourceName = 0x34; // FName
		constexpr auto bSourceAbsolute = 0x3c; // char : 1
		constexpr auto Source = 0x40; // FRawDistributionVector
		constexpr auto bLockSource = 0x88; // char : 1
		constexpr auto SourceTangentMethod = 0x8c; // Beam2SourceTargetTangentMethod
		constexpr auto SourceTangent = 0x90; // FRawDistributionVector
		constexpr auto bLockSourceTangent = 0xd8; // char : 1
		constexpr auto SourceStrength = 0xe0; // FRawDistributionFloat
		constexpr auto bLockSourceStength = 0x110; // char : 1
	}

	namespace n_UMM_Common_Btn_Inven { // : UWidgetBase
		constexpr auto m_Txt_TabName = 0x2f8; // UMirTextBlock*
		constexpr auto m_Txt_TabCount = 0x300; // UMirTextBlock*
		constexpr auto m_Img_SelectedBar = 0x308; // UMirImage*
		constexpr auto m_Grid_Effect = 0x310; // UPanelWidget*
		constexpr auto m_Img_Indicator = 0x318; // UMirImage*
		constexpr auto m_Btn_Main = 0x320; // UMirButton*
	}

	namespace n_UBlackboardKeyType_NativeEnum { // : UBlackboardKeyType
		constexpr auto EnumName = 0x30; // FString
		constexpr auto EnumType = 0x40; // UEnum*
	}

	namespace n_AStaticMeshActor { // : AActor
		constexpr auto StaticMeshComponent = 0x218; // UStaticMeshComponent*
		constexpr auto bStaticMeshReplicateMovement = 0x220; // bool
		constexpr auto NavigationGeometryGatheringMode = 0x221; // ENavDataGatheringMode
	}

	namespace n_UMM_ItemResult_SingleAbilityInfo { // : UWidgetBase
		constexpr auto Img_Before_Symbol = 0x2e0; // UMirImage*
		constexpr auto RichTxt_Before_AbilityOption = 0x2e8; // UMirRichTextBlock*
		constexpr auto Img_After_Symbol = 0x2f0; // UMirImage*
		constexpr auto RichTxt_After_AbilityOption = 0x2f8; // UMirRichTextBlock*
		constexpr auto Img_Arrow = 0x300; // UMirImage*
	}

	namespace n_AMiniMapInfoExporter { // : AActor
		constexpr auto m_StageID = 0x218; // int32_t
		constexpr auto m_pMonsterTemplate = 0x220; // UDataTable*
	}

	namespace n_UMM_Item_Make_List_Slot { // : UWidgetBase
		constexpr auto m_pSelectSlotEffect = 0x300; // UEffectWidgetBase*
		constexpr auto Slot_Main = 0x308; // UMM_Slot_Registered*
		constexpr auto Txt_Name = 0x310; // UTextBlock*
		constexpr auto Grid_ReqLevel = 0x318; // UPanelWidget*
		constexpr auto Txt_ReqLevel_Title = 0x320; // UMirTextBlock*
		constexpr auto Txt_ReqLevel = 0x328; // UMirTextBlock*
		constexpr auto Img_Select = 0x330; // UImage*
		constexpr auto Btn_Slot = 0x338; // UButton*
		constexpr auto m_MakeTID = 0x340; // int32_t
		constexpr auto Panel_Lock = 0x348; // UPanelWidget*
		constexpr auto m_Effect_Panel = 0x350; // UPanelWidget*
		constexpr auto SLOT_EFFECT_INDEX = 0x358; // int32_t
		constexpr auto STR_ID_PACKAGECOUNT = 0x35c; // int32_t
		constexpr auto STR_ID_REQLEVEL_TITLE = 0x360; // int32_t
		constexpr auto STR_ID_REQLEVEL = 0x364; // int32_t
		constexpr auto Img_Equiped = 0x368; // UMirImage*
		constexpr auto STR_ID_STACKCOUNT = 0x370; // int32_t
		constexpr auto ItemTID = 0x374; // int32_t
	}

	namespace n_UBTTask_MakeNoise { // : UBTTaskNode
		constexpr auto Loudnes = 0x70; // float
	}

	namespace n_UMM_Popup_BuildingAcceleration { // : UWidgetBase
		constexpr auto m_Txt_Title = 0x2f0; // UMirTextBlock*
		constexpr auto m_CB_Close = 0x2f8; // UMM_Common_Btn_Symbol*
		constexpr auto m_ImgBuilding = 0x300; // UMirImage*
		constexpr auto m_Txt_BuildingName = 0x308; // UMirTextBlock*
		constexpr auto m_Prg_Time = 0x310; // UMirProgressBar*
		constexpr auto m_Prg_SupportTime = 0x318; // UMirProgressBar*
		constexpr auto m_Txt_Time = 0x320; // UMirTextBlock*
		constexpr auto m_Img_Support = 0x328; // UMirImage*
		constexpr auto m_Txt_SupportCount = 0x330; // UMirTextBlock*
		constexpr auto m_Slider_Point = 0x338; // UMM_Item_Make_Slider*
		constexpr auto m_Txt_PointTime = 0x340; // UMirTextBlock*
		constexpr auto m_Txt_UsePoint = 0x348; // UMirTextBlock*
		constexpr auto m_Txt_MyPoint = 0x350; // UMirTextBlock*
		constexpr auto m_Btn_Cancle = 0x358; // UMM_Common_Btn*
		constexpr auto m_Btn_Ok = 0x360; // UMM_Common_Btn*
		constexpr auto m_BtnDetail = 0x368; // UMM_Common_Btn_Symbol*
		constexpr auto m_AccelStr = 0x370; // int32_t
		constexpr auto m_BuildingIconID = 0x374; // int32_t
		constexpr auto m_SupportFormatID = 0x378; // int32_t
		constexpr auto m_RecudeRemainStr = 0x37c; // int32_t
		constexpr auto m_AccelPointToStr = 0x380; // int32_t
		constexpr auto m_CompleteStr = 0x384; // int32_t
		constexpr auto m_UpgradeStr = 0x388; // int32_t
	}

	namespace n_UMM_QuickSlot_Option_Button { // : UMM_GameOption_BaseSlot
		constexpr auto m_Text = 0x2e8; // FText
		constexpr auto m_iSelected = 0x300; // int32_t
		constexpr auto m_Font = 0x308; // FSlateFontInfo
		constexpr auto m_SelectFontColor = 0x358; // FSlateColor
		constexpr auto m_UnSelectFontColor = 0x380; // FSlateColor
		constexpr auto m_Txt_Name = 0x3b8; // UTextBlock*
		constexpr auto m_Img_Select = 0x3c0; // UMirImage*
		constexpr auto m_Btn_Main = 0x3c8; // UMirButton*
	}

	namespace n_UMM_Ranking_Reward_Item { // : UWidgetBase
		constexpr auto m_pCanPanelItem = 0x2e0; // UCanvasPanel*
		constexpr auto m_pCanPanelStatus = 0x2e8; // UCanvasPanel*
		constexpr auto m_pImgItem = 0x2f0; // UMirImage*
		constexpr auto m_pImgStatus = 0x2f8; // UMirImage*
	}

	namespace n_UBTComposite_Sequence { // : UBTCompositeNode
		constexpr auto Children = 0x58; // TArray<FBTCompositeChild>
		constexpr auto Services = 0x68; // TArray<UBTService*>
		constexpr auto bApplyDecoratorScope = 0x88; // char : 1
	}

	namespace n_UWidgetInteractionComponent { // : USceneComponent
		constexpr auto OnHoveredWidgetChanged = 0x220; // FScriptMulticastDelegate
		constexpr auto VirtualUserIndex = 0x240; // int32_t
		constexpr auto PointerIndex = 0x244; // float
		constexpr auto TraceChannel = 0x248; // ECollisionChannel
		constexpr auto InteractionDistance = 0x24c; // float
		constexpr auto InteractionSource = 0x250; // EWidgetInteractionSource
		constexpr auto bEnableHitTesting = 0x251; // bool
		constexpr auto bShowDebug = 0x252; // bool
		constexpr auto DebugColor = 0x254; // FLinearColor
		constexpr auto CustomHitResult = 0x2e0; // FHitResult
		constexpr auto LocalHitLocation = 0x368; // FVector2D
		constexpr auto LastLocalHitLocation = 0x370; // FVector2D
		constexpr auto HoveredWidgetComponent = 0x378; // UWidgetComponent*
		constexpr auto LastHitResult = 0x380; // FHitResult
		constexpr auto bIsHoveredWidgetInteractable = 0x408; // bool
		constexpr auto bIsHoveredWidgetFocusable = 0x409; // bool
		constexpr auto bIsHoveredWidgetHitTestVisible = 0x40a; // bool
	}

	namespace n_UDebugPanel { // : UWidgetBase
		constexpr auto DebugCanvasPanel = 0x2e0; // UCanvasPanel*
	}

	namespace n_UARCandidateObject { // : UDataAsset
		constexpr auto CandidateObjectData = 0x30; // TArray<char>
		constexpr auto FriendlyName = 0x40; // FString
		constexpr auto BoundingBox = 0x50; // FBox
	}

	namespace n_AGhostTrailEffectActor { // : AActor
		constexpr auto m_pGhostTrailOwner = 0x218; // AActor*
		constexpr auto m_bInit = 0x220; // bool
		constexpr auto m_pGhostTrailData = 0x228; // UGhostTrailActorData*
		constexpr auto m_GhostTrailMeshArray = 0x230; // TArray<UGhostTrailMeshData*>
		constexpr auto BaseStaticMeshArray = 0x240; // TArray<UStaticMeshComponent*>
		constexpr auto BaseSkeletalMeshArray = 0x250; // TArray<USkeletalMeshComponent*>
		constexpr auto MasterSkeletalMeshComponents = 0x260; // TMap<USkeleton*, USkeletalMeshComponent*>
		constexpr auto BodyMeshComponent = 0x2b0; // USkeletalMeshComponent*
		constexpr auto AttatchedParticleList = 0x2b8; // TArray<UParticleSystemComponent*>
	}

	namespace n_AMM_PreviewModeBase { // : AMM_GameModeBase
		constexpr auto m_pBackgroundParamCollection = 0x330; // UMaterialParameterCollection*
		constexpr auto m_pFriendMonster = 0x338; // AMM_Monster*
		constexpr auto m_pSelectTarget = 0x340; // AMM_CharacterPawnBase*
		constexpr auto m_pLockOnTarget = 0x348; // AMM_CharacterPawnBase*
		constexpr auto EndLevelTravel = 0x350; // bool
		constexpr auto m_pUIBackGroundActor = 0x400; // AUIBackGroundActor*
		constexpr auto SituationDirectiveActor = 0x408; // AMM_SituationDirectiveEffect*
		constexpr auto MapQuestArrivalDisplayActor = 0x410; // TMap<int32_t, TWeakObjectPtr<AQuestArrivalDisplayActor>>
		constexpr auto m_pHQPlayer = 0x460; // AMM_HQPlayerReferenceActor*
		constexpr auto m_pPortraitCaptureActor = 0x468; // AMM_PortraitCaptureActor*
		constexpr auto m_pPlayerPortraitRenderTarget = 0x470; // UCanvasRenderTarget2D*
		constexpr auto m_pContentsLightManager = 0x478; // AContentsLightManager*
		constexpr auto MyEditorCulture = 0x490; // FString
	}

	namespace n_AVectorFieldVolume { // : AActor
		constexpr auto VectorFieldComponent = 0x218; // UVectorFieldComponent*
	}

	namespace n_UMaterialFunctionMaterialLayerBlend { // : UMaterialFunction
		constexpr auto Description = 0x40; // FString
		constexpr auto FunctionExpressions = 0x50; // TArray<UMaterialExpression*>
		constexpr auto bExposeToLibrary = 0x60; // char : 1
		constexpr auto bPrefixParameterNames = 0x60; // char : 1
		constexpr auto bReentrantFlag = 0x60; // char : 1
	}

	namespace n_UMM_New_Occupation_KingAscension { // : UWidgetBase
		constexpr auto m_iForceCloseSecond = 0x2e0; // float
		constexpr auto m_pCanvasMain = 0x2e8; // UMirCanvasPanel*
		constexpr auto m_pImgCharacterIcon = 0x2f0; // UMirImage*
		constexpr auto m_pTxtName = 0x2f8; // UMirTextBlock*
		constexpr auto m_pTxtWelcome = 0x300; // UMirTextBlock*
		constexpr auto m_pTxtSuccess = 0x308; // UMirTextBlock*
		constexpr auto m_pAnimStart = 0x310; // UWidgetAnimation*
		constexpr auto m_pAnimEnd = 0x318; // UWidgetAnimation*
	}

	namespace n_UOnlineSubsystemExtendedSteamWebBrowser { // : UWidget
		constexpr auto OnUrlChanged = 0x108; // FScriptMulticastDelegate
		constexpr auto InitialURL = 0x118; // FString
		constexpr auto bSupportsTransparency = 0x128; // bool
	}

	namespace n_UDistributionVector { // : UDistribution
		constexpr auto bCanBeBaked = 0x30; // char : 1
		constexpr auto bIsDirty = 0x30; // char : 1
		constexpr auto bBakedDataSuccesfully = 0x30; // char : 1
	}

	namespace n_UMM_Costume_Slot_EquipInfo { // : UWidgetBase
		constexpr auto CostumeParts = 0x2f0; // COSTUME_PARTS
		constexpr auto DefaultIconId = 0x2f4; // int32_t
		constexpr auto Img_Icon = 0x308; // UMirImage*
		constexpr auto Img_SelectList = 0x310; // UMirImage*
		constexpr auto Img_Open_Eyes = 0x318; // UMirImage*
		constexpr auto Img_Close_Eyes = 0x320; // UMirImage*
		constexpr auto Btn_CostumeVisibility = 0x328; // UMirButton*
		constexpr auto Btn_SelectSlot = 0x330; // UMirButton*
		constexpr auto ColorSlot = 0x338; // UMM_Slot_Costume_Palette*
		constexpr auto Panel_EffectSlot = 0x340; // UPanelWidget*
		constexpr auto Grid_Toggle = 0x348; // UPanelWidget*
		constexpr auto TargetUser = 0x350; // bool
	}

	namespace n_UMM_HudPotionSlot { // : UWidgetBase
		constexpr auto m_arrBrushCoolTimeFont = 0x2f0; // TArray<FBrushObject>
		constexpr auto m_iEffectID_UsePotion = 0x300; // int32_t
		constexpr auto m_iEffectID_EndCooltime = 0x304; // int32_t
		constexpr auto m_fPressedSelectTime = 0x308; // float
		constexpr auto m_TextCount = 0x310; // UMirTextBlock*
		constexpr auto m_pImgIcon = 0x318; // UMirImage*
		constexpr auto NotAutoUseItemStringID = 0x320; // int32_t
		constexpr auto m_pCanSlot = 0x328; // UPanelWidget*
		constexpr auto m_Txt_CoolTime = 0x330; // UMirTextBlock*
		constexpr auto m_pImgPotionCool = 0x338; // UImage*
		constexpr auto m_pGridEffect = 0x340; // UPanelWidget*
		constexpr auto m_pBtnPotionArea = 0x348; // UMirButton*
		constexpr auto m_Img_Empty = 0x350; // UMirImage*
		constexpr auto m_Img_Effect_Auto = 0x358; // UMirImage*
		constexpr auto m_Can_AutoState = 0x360; // UMirCanvasPanel*
		constexpr auto m_pAnim_AutoOn = 0x368; // UWidgetAnimation*
		constexpr auto m_pAnim_AutoOff = 0x370; // UWidgetAnimation*
		constexpr auto m_Can_AniAuto = 0x378; // UMirCanvasPanel*
		constexpr auto m_Can_AniManual = 0x380; // UMirCanvasPanel*
		constexpr auto m_Effect_Use = 0x388; // UEffectWidgetBase*
		constexpr auto m_pCanRemove = 0x390; // UMirCanvasPanel*
		constexpr auto m_pBtnRemove = 0x398; // UMirButton*
	}

	namespace n_UMM_HudStrongPointMenu { // : UWidgetBase
		constexpr auto Btn_Exit = 0x2e0; // UMM_Common_Btn_Symbol*
		constexpr auto HUD_BossMonsterSlot = 0x2e8; // UMM_StrongPoint_HudSlot*
		constexpr auto HUD_ControllerSlot = 0x2f0; // UMM_StrongPoint_HudSlot*
		constexpr auto HUD_HeartSlot = 0x2f8; // UMM_StrongPoint_HudSlot*
		constexpr auto Txt_RemainTime = 0x300; // UMirTextBlock*
	}

	namespace n_UMM_Popup_BlackIronShop_Sell { // : UWidgetBase
		constexpr auto txt_possession = 0x2e0; // UMirTextBlock*
		constexpr auto txt_blackiron_name = 0x2e8; // UMirTextBlock*
		constexpr auto img_likely_return = 0x2f0; // UMirImage*
		constexpr auto txt_likely_return = 0x2f8; // UMirTextBlock*
		constexpr auto txt_remain_time = 0x300; // UMirRichTextBlock*
		constexpr auto item_make_slider_count = 0x308; // UMM_Item_Make_Slider*
		constexpr auto item_make_slider_price = 0x310; // UMM_Item_Make_Slider*
		constexpr auto btn_close = 0x318; // UMM_Common_Btn_Symbol*
		constexpr auto btn_confirm = 0x320; // UMM_Common_Btn*
		constexpr auto Btn_Cancel = 0x328; // UMM_Common_Btn*
		constexpr auto btn_preview = 0x330; // UMM_Common_Btn*
		constexpr auto slot_black_iron = 0x338; // UMM_Slot_Material*
		constexpr auto txt_taxRate = 0x340; // UMirTextBlock*
		constexpr auto txt_is_full = 0x348; // UMirTextBlock*
		constexpr auto cp_preview = 0x350; // UMirCanvasPanel*
		constexpr auto btn_preview_close = 0x358; // UMM_Common_Btn_Symbol*
		constexpr auto guild_icon = 0x360; // UMM_GuildIcon*
		constexpr auto txt_guild_name = 0x368; // UMirRichTextBlock*
		constexpr auto txt_remain_count = 0x370; // UMirTextBlock*
		constexpr auto txt_remain_time_preview = 0x378; // UMirTextBlock*
		constexpr auto sb_preview = 0x380; // UMirScrollBox*
	}

	namespace n_APhaseAreaTrigger { // : AActivateTrigger
		constexpr auto m_Radius = 0x278; // float
		constexpr auto m_Height = 0x27c; // float
		constexpr auto m_BoxCollisionLength = 0x280; // int32_t
	}

	namespace n_UThrobber { // : UWidget
		constexpr auto NumberOfPieces = 0x108; // int32_t
		constexpr auto bAnimateHorizontally = 0x10c; // bool
		constexpr auto bAnimateVertically = 0x10d; // bool
		constexpr auto bAnimateOpacity = 0x10e; // bool
		constexpr auto PieceImage = 0x110; // USlateBrushAsset*
		constexpr auto Image = 0x118; // FSlateBrush
	}

	namespace n_UMM_BattlePass_Reward_List { // : UWidgetBase
		constexpr auto STRING_ID_BTN_BUY = 0x2f0; // int32_t
		constexpr auto STRING_ID_BTN_ACTIVE = 0x2f4; // int32_t
		constexpr auto m_ScrollBox = 0x2f8; // UMirScrollBox*
		constexpr auto m_C_Btn_ReceiveAll = 0x300; // UMM_Common_Btn*
		constexpr auto m_Txt_Notice = 0x308; // UMirTextBlock*
		constexpr auto m_Txt_Btn_Name1 = 0x310; // UMirTextBlock*
		constexpr auto m_Txt_Btn_Name2 = 0x318; // UMirTextBlock*
		constexpr auto m_Btn_Buy1 = 0x320; // UMirButton*
		constexpr auto m_Btn_Buy2 = 0x328; // UMirButton*
		constexpr auto m_Img_Indicator_1 = 0x330; // UMirImage*
		constexpr auto m_Img_Indicator_2 = 0x338; // UMirImage*
	}

	namespace n_ULevelSequenceBurnInOptions { // : UObject
		constexpr auto bUseBurnIn = 0x28; // bool
		constexpr auto BurnInClass = 0x30; // FSoftClassPath
		constexpr auto Settings = 0x48; // ULevelSequenceBurnInInitSettings*
	}

	namespace n_UMovieSceneEulerTransformTrack { // : UMovieScenePropertyTrack
		constexpr auto SectionToKey = 0x58; // UMovieSceneSection*
		constexpr auto PropertyName = 0x60; // FName
		constexpr auto PropertyPath = 0x68; // FString
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_UBoxFalloff { // : UFieldNodeFloat
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto MinRange = 0xb4; // float
		constexpr auto MaxRange = 0xb8; // float
		constexpr auto Default = 0xbc; // float
		constexpr auto Transform = 0xc0; // FTransform
		constexpr auto Falloff = 0xf0; // EFieldFalloffType
	}

	namespace n_UMM_Auction_Tab_Sale { // : UMM_Auction_Tab_Base
		constexpr auto m_pNotice = 0x300; // UMM_Common_Board_Notice*
		constexpr auto m_pTxtSaleCount = 0x308; // UMirRichTextBlock*
		constexpr auto m_pTxtSaleMoney = 0x310; // UMirTextBlock*
		constexpr auto m_pBtnCancleAll = 0x318; // UMM_Common_Btn*
		constexpr auto m_pListView = 0x320; // UMirListView*
		constexpr auto m_pInventory = 0x328; // UMM_NewInventory_Auction*
	}

	namespace n_UMM_ClosedTraining_CollectListSlot { // : UWidgetBase
		constexpr auto m_Txt_Name = 0x2e0; // UMirTextBlock*
		constexpr auto m_RTxt_TotalCollect = 0x2e8; // UMirRichTextBlock*
		constexpr auto m_Img_Selected = 0x2f0; // UMirImage*
		constexpr auto m_VerticalBox = 0x2f8; // UVerticalBox*
	}

	namespace n_UMM_UIShopGoodsDetailSlot { // : UWidgetBase
		constexpr auto mPanel_Title = 0x2e0; // UMirCanvasPanel*
		constexpr auto mTxt_Title = 0x2e8; // UMirTextBlock*
		constexpr auto mPanel_DetailSlot = 0x2f0; // UMirCanvasPanel*
		constexpr auto mImgIcon = 0x2f8; // UMirImage*
		constexpr auto mImgIconGrade = 0x300; // UMirImage*
		constexpr auto mImgCheck = 0x308; // UMirImage*
		constexpr auto mPanel_UsedBigSlot = 0x310; // UMirCanvasPanel*
		constexpr auto mTxtName_UsedBigSlot = 0x318; // UMirTextBlock*
		constexpr auto mPanel_UsedPopupDetail = 0x320; // UMirCanvasPanel*
		constexpr auto mTxtName_UsedPopupDetail = 0x328; // UMirTextBlock*
		constexpr auto mTxtCount = 0x330; // UMirTextBlock*
		constexpr auto mBtnMain = 0x338; // UMirButton*
	}

	namespace n_UMM_PopupCharacterSearch { // : UWidgetBase
		constexpr auto btn_close = 0x2e0; // UMM_Common_Btn_Symbol*
		constexpr auto btn_prev = 0x2e8; // UMM_Common_Btn_Symbol*
		constexpr auto btn_next = 0x2f0; // UMM_Common_Btn_Symbol*
		constexpr auto btn_confirm = 0x2f8; // UMM_Common_Btn*
		constexpr auto txt_page = 0x300; // UMirTextBlock*
		constexpr auto Txt_Title = 0x308; // UMirTextBlock*
		constexpr auto Txt_Search = 0x310; // UMirTextBlock*
		constexpr auto sb_list = 0x318; // UMirScrollBox*
	}

	namespace n_APaperSpriteActor { // : AActor
		constexpr auto RenderComponent = 0x218; // UPaperSpriteComponent*
	}

	namespace n_UIAPAppStoreModule { // : UIAPStoreModuleBase
		constexpr auto m_UserRequestProductData = 0x58; // FIAPUserRequestData
		constexpr auto m_PurchaseProductData = 0x98; // FIAPProductData
		constexpr auto m_PurchaseInProgress = 0x138; // TArray<EIAPPurchaseState>
		constexpr auto ProcessedTransactionIDs = 0x148; // TArray<FString>
		constexpr auto ProcessedTransactionReceipts = 0x158; // TArray<FString>
		constexpr auto DelayHideBlockScreenTimeHandle = 0x168; // FTimerHandle
		constexpr auto m_MarketProductDataMap = 0x170; // TMap<FString, FIAPMarketProductData>
	}

	namespace n_UMM_ItemCollectProgressSlot { // : UWidgetBase
		constexpr auto m_Txt_Title = 0x2e0; // UMirTextBlock*
		constexpr auto m_Img_Ongoing = 0x2e8; // UImage*
		constexpr auto m_Img_End = 0x2f0; // UImage*
		constexpr auto m_Txt_Count = 0x2f8; // UMirRichTextBlock*
		constexpr auto m_Txt_Percent = 0x300; // UTextBlock*
		constexpr auto m_Txt_Ongoing = 0x308; // UTextBlock*
		constexpr auto m_Txt_OngoingNum = 0x310; // UTextBlock*
		constexpr auto m_Txt_Complete = 0x318; // UTextBlock*
		constexpr auto m_Txt_CompleteNum = 0x320; // UTextBlock*
		constexpr auto m_ObtainStrID = 0x328; // int32_t
		constexpr auto m_AllObtainInfoStrID = 0x32c; // int32_t
		constexpr auto m_OngoingStrID = 0x330; // int32_t
		constexpr auto m_ObtainValueStrID = 0x334; // int32_t
		constexpr auto m_CountStrID = 0x338; // int32_t
		constexpr auto m_CountPerAllStrID = 0x33c; // int32_t
		constexpr auto m_PercentStrID = 0x340; // int32_t
		constexpr auto m_GroupInfoStrID = 0x344; // int32_t
	}

	namespace n_UMM_GetItemTypeSlot { // : UWidgetBase
		constexpr auto m_GetType = 0x300; // int32_t
		constexpr auto Img_TypeIcon = 0x308; // UImage*
		constexpr auto Txt_Title = 0x310; // UTextBlock*
		constexpr auto Btn_Slot = 0x318; // UButton*
	}

	namespace n_UMM_Recommend_Btn { // : UWidgetBase
		constexpr auto m_Grid_Recommend = 0x300; // UPanelWidget*
		constexpr auto m_Txt_Recommend_Title = 0x308; // UMirTextBlock*
		constexpr auto m_Txt_Recommend_Desc = 0x310; // UMirTextBlock*
		constexpr auto m_Btn_Recommend = 0x318; // UButton*
		constexpr auto m_makeRecommendItemTID = 0x320; // int32_t
		constexpr auto NOTHING_TO_MAKE_ITEM_LIST = 0x324; // int32_t
	}

	namespace n_UCurveLinearColor { // : UCurveBase
		constexpr auto FloatCurves = 0x30; // FRichCurve [0x4]
		constexpr auto AdjustHue = 0x230; // float
		constexpr auto AdjustSaturation = 0x234; // float
		constexpr auto AdjustBrightness = 0x238; // float
		constexpr auto AdjustBrightnessCurve = 0x23c; // float
		constexpr auto AdjustVibrance = 0x240; // float
		constexpr auto AdjustMinAlpha = 0x244; // float
		constexpr auto AdjustMaxAlpha = 0x248; // float
	}

	namespace n_UARTrackedPose { // : UARTrackedGeometry
		constexpr auto UniqueId = 0x28; // FGuid
		constexpr auto LocalToTrackingTransform = 0x40; // FTransform
		constexpr auto LocalToAlignedTrackingTransform = 0x70; // FTransform
		constexpr auto TrackingState = 0xa0; // EARTrackingState
		constexpr auto UnderlyingMesh = 0xb0; // UMRMeshComponent*
		constexpr auto ObjectClassification = 0xb8; // EARObjectClassification
		constexpr auto LastUpdateFrameNumber = 0xd0; // int32_t
		constexpr auto DebugName = 0xe0; // FName
	}

	namespace n_UStreamingSettings { // : UDeveloperSettings
		constexpr auto AsyncLoadingThreadEnabled = 0x38; // char : 1
		constexpr auto WarnIfTimeLimitExceeded = 0x38; // char : 1
		constexpr auto TimeLimitExceededMultiplier = 0x3c; // float
		constexpr auto TimeLimitExceededMinTime = 0x40; // float
		constexpr auto MinBulkDataSizeForAsyncLoading = 0x44; // int32_t
		constexpr auto UseBackgroundLevelStreaming = 0x48; // char : 1
		constexpr auto AsyncLoadingUseFullTimeLimit = 0x48; // char : 1
		constexpr auto AsyncLoadingTimeLimit = 0x4c; // float
		constexpr auto PriorityAsyncLoadingExtraTime = 0x50; // float
		constexpr auto LevelStreamingActorsUpdateTimeLimit = 0x54; // float
		constexpr auto PriorityLevelStreamingActorsUpdateExtraTime = 0x58; // float
		constexpr auto LevelStreamingComponentsRegistrationGranularity = 0x5c; // int32_t
		constexpr auto LevelStreamingUnregisterComponentsTimeLimit = 0x60; // float
		constexpr auto LevelStreamingComponentsUnregistrationGranularity = 0x64; // int32_t
		constexpr auto EventDrivenLoaderEnabled = 0x68; // char : 1
		constexpr auto FlushStreamingOnExit = 0x68; // char : 1
	}

	namespace n_UMaterialExpressionLandscapeLayerSwitch { // : UMaterialExpression
		constexpr auto LayerUsed = 0x40; // FExpressionInput
		constexpr auto LayerNotUsed = 0x54; // FExpressionInput
		constexpr auto ParameterName = 0x68; // FName
		constexpr auto PreviewUsed = 0x70; // char : 1
		constexpr auto ExpressionGUID = 0x74; // FGuid
	}

	namespace n_UMM_SkillVirtualStick { // : UWidgetBase
		constexpr auto m_pImg_Bg = 0x2e0; // UImage*
		constexpr auto m_pImg_Touch = 0x2e8; // UImage*
		constexpr auto m_pImg_CenterPos = 0x2f0; // UImage*
	}

	namespace n_UAsyncActionHandleSaveGame { // : UBlueprintAsyncActionBase
		constexpr auto Completed = 0x30; // FScriptMulticastDelegate
		constexpr auto SaveGameObject = 0x60; // USaveGame*
	}

	namespace n_UMaterialExpressionDDX { // : UMaterialExpression
		constexpr auto Value = 0x40; // FExpressionInput
	}

	namespace n_UWindowTitleBarAreaSlot { // : UPanelSlot
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UPartyBeaconState { // : UObject
		constexpr auto SessionName = 0x28; // FName
		constexpr auto NumConsumedReservations = 0x30; // int32_t
		constexpr auto MaxReservations = 0x34; // int32_t
		constexpr auto NumTeams = 0x38; // int32_t
		constexpr auto NumPlayersPerTeam = 0x3c; // int32_t
		constexpr auto TeamAssignmentMethod = 0x40; // FName
		constexpr auto ReservedHostTeamNum = 0x48; // int32_t
		constexpr auto ForceTeamNum = 0x4c; // int32_t
		constexpr auto bRestrictCrossConsole = 0x50; // bool
		constexpr auto bEnableRemovalRequests = 0x51; // bool
		constexpr auto Reservations = 0x58; // TArray<FPartyReservation>
	}

	namespace n_UMaterialExpressionTextureBase { // : UMaterialExpression
		constexpr auto Texture = 0x40; // UTexture*
		constexpr auto SamplerType = 0x48; // EMaterialSamplerType
		constexpr auto IsDefaultMeshpaintTexture = 0x49; // char : 1
	}

	namespace n_UMM_GuildSupply { // : UWidgetBase
		constexpr auto vertical_set = 0x2f0; // UMM_CommonVerticalTabSet*
		constexpr auto cp_report = 0x2f8; // UMirCanvasPanel*
		constexpr auto cp_gift = 0x300; // UMirCanvasPanel*
		constexpr auto sb_report = 0x308; // UMirScrollBox*
		constexpr auto btn_report_all_recv = 0x310; // UMM_Common_Btn*
		constexpr auto lv_gift = 0x318; // UMirListView*
		constexpr auto sb_gift = 0x320; // UMirScrollBox*
		constexpr auto txt_gift_level = 0x328; // UMirTextBlock*
		constexpr auto pb_gift_exp = 0x330; // UMirProgressBar*
		constexpr auto txt_gift_exp = 0x338; // UMirTextBlock*
		constexpr auto lst_tab = 0x340; // UMM_Inventory_Tab* [0x2]
		constexpr auto txt_box_name = 0x350; // UMirTextBlock*
		constexpr auto img_box = 0x358; // UMirImage*
		constexpr auto hb_box_time = 0x360; // UHorizontalBox*
		constexpr auto btn_box_open = 0x368; // UMM_Common_Btn*
		constexpr auto cp_box_key = 0x370; // UMirCanvasPanel*
		constexpr auto txt_box_key = 0x378; // UMirTextBlock*
		constexpr auto txt_box_time = 0x380; // UMirTextBlock*
		constexpr auto pb_box = 0x388; // UMirProgressBar*
		constexpr auto btn_all_recv = 0x390; // UMM_Common_Btn*
		constexpr auto btn_delete = 0x398; // UMM_Common_Btn*
		constexpr auto btn_cheat = 0x3a0; // UMM_Common_Btn*
		constexpr auto Img_Indicator = 0x3a8; // UMirImage*
	}

	namespace n_UMM_Goods_Detail { // : UWidgetBase
		constexpr auto m_arMenuIconID = 0x2e0; // TArray<int32_t>
		constexpr auto m_bUse_InfomationBtn = 0x2f0; // bool
		constexpr auto m_arGoodsDetailSlot = 0x2f8; // UMM_Goods_Slot* [0x9]
		constexpr auto m_CB_HideDetail = 0x340; // UMM_Common_Btn_Symbol*
		constexpr auto m_arCan_MenuBtn = 0x348; // UPanelWidget* [0x8]
		constexpr auto m_arImg_MenuIcon = 0x388; // UMirImage* [0x8]
		constexpr auto m_arBtn_Menu = 0x3c8; // UMirButton* [0x8]
	}

	namespace n_UBlackboardKeyType_Object { // : UBlackboardKeyType
		constexpr auto BaseClass = 0x30; // UObject*
	}

	namespace n_UMM_HudAlramHelperListSolt { // : UWidgetBase
		constexpr auto m_Img_Symbol = 0x318; // UImage*
		constexpr auto m_Txt_Description = 0x320; // UTextBlock*
		constexpr auto m_Btn_Close = 0x328; // UMM_Common_Btn_Symbol*
		constexpr auto m_Btn_Link = 0x330; // UButton*
	}

	namespace n_UMaterialExpressionTextureCoordinate { // : UMaterialExpression
		constexpr auto CoordinateIndex = 0x40; // int32_t
		constexpr auto UTiling = 0x44; // float
		constexpr auto VTiling = 0x48; // float
		constexpr auto UnMirrorU = 0x4c; // char : 1
		constexpr auto UnMirrorV = 0x4c; // char : 1
	}

	namespace n_UMM_Party_ExplainTextField { // : UWidgetBase
		constexpr auto arComboBoxStringID = 0x2f0; // TArray<int32_t>
		constexpr auto m_ComboBox = 0x300; // UMM_Common_ComboList*
		constexpr auto m_ComboBox_Spacer = 0x308; // USpacer*
		constexpr auto m_Editable_Explain = 0x310; // UMirEditableText*
		constexpr auto m_Txt_Explan = 0x318; // UMirTextBlock*
		constexpr auto m_C_Btn_Translation = 0x320; // UMM_Common_Btn_Translation*
	}

	namespace n_UMM_Common_ComboList { // : UWidgetBase
		constexpr auto SlotFontSize = 0x2e0; // int32_t
		constexpr auto m_Img_Arrow = 0x2e8; // UMirImage*
		constexpr auto m_Txt_Info = 0x2f0; // UMirTextBlock*
		constexpr auto m_Btn_Combo = 0x2f8; // UMirButton*
		constexpr auto m_ScrollList = 0x300; // UMirScrollBox*
		constexpr auto m_PanelList = 0x308; // UPanelWidget*
	}

	namespace n_UMM_Customizing_SubCategoryItem { // : UWidgetBase
		constexpr auto m_pAssetIconImage = 0x2e0; // UMirImage*
		constexpr auto m_pColorIconImage = 0x2e8; // UMirImage*
		constexpr auto m_pBoneIconImage = 0x2f0; // UMirImage*
		constexpr auto m_pSelectIconImage = 0x2f8; // UMirImage*
		constexpr auto m_SubCategorySelectBtn = 0x300; // UMirButton*
		constexpr auto m_TypeSwitcher = 0x308; // UWidgetSwitcher*
		constexpr auto m_CategoryNameText = 0x310; // UMirTextBlock*
	}

	namespace n_UMM_Slot_Collect_Item { // : UWidgetBase
		constexpr auto m_BtnMain = 0x2e8; // UMirButton*
		constexpr auto m_ImgBg = 0x2f0; // UMirImage*
		constexpr auto m_ImgIcon = 0x2f8; // UMirImage*
		constexpr auto m_Img_GradeBgEffect = 0x300; // UMirImage*
		constexpr auto m_ImgDisabled = 0x308; // UMirImage*
		constexpr auto m_Img_Attribution = 0x310; // UMirImage*
		constexpr auto m_Imgindicator = 0x318; // UMirImage*
		constexpr auto m_ImgTierBg = 0x320; // UMirImage*
		constexpr auto m_ImgSeleted = 0x328; // UMirImage*
		constexpr auto m_ImgCurrSelected = 0x330; // UMirImage*
		constexpr auto m_TxtCount = 0x338; // UMirTextBlock*
		constexpr auto m_Img_Complete = 0x340; // UMirImage*
		constexpr auto m_Txt_Smelt = 0x348; // UMirTextBlock*
		constexpr auto m_Img_UserLock = 0x350; // UMirImage*
		constexpr auto m_Img_UserLock_Stack = 0x358; // UMirImage*
	}

	namespace n_UMM_UnsealingAccelerationSlot { // : UWidgetBase
		constexpr auto m_Slot_Item = 0x300; // UMM_Slot_Inventory*
		constexpr auto m_Txt_ItemName = 0x308; // UMirTextBlock*
		constexpr auto m_Txt_ItemExplain = 0x310; // UMirTextBlock*
		constexpr auto m_Txt_HaveCount = 0x318; // UMirTextBlock*
		constexpr auto m_CB_UseCash = 0x320; // UMM_Common_Btn_Cost*
		constexpr auto m_CB_UseItemAll = 0x328; // UMM_Common_Btn*
		constexpr auto m_CB_UseItem = 0x330; // UMM_Common_Btn*
	}

	namespace n_UClothingAssetNv { // : UClothingAssetCommon
		constexpr auto ClothConfig = 0xa8; // FClothConfig
		constexpr auto LODData = 0x180; // TArray<FClothLODData>
	}

	namespace n_UMM_Popup_TermsOfService { // : UWidgetBase
		constexpr auto m_Btn_SelectAll = 0x2e8; // UMM_Common_Btn*
		constexpr auto m_Btn_Agree = 0x2f0; // UMM_Common_Btn*
		constexpr auto m_Btn_TermsInfo = 0x2f8; // UMM_Common_Btn*
		constexpr auto m_Btn_PrivacyInfo = 0x300; // UMM_Common_Btn*
		constexpr auto m_CheckBox_Terms = 0x308; // UMirCheckBox*
		constexpr auto m_CheckBox_Privacy = 0x310; // UMirCheckBox*
		constexpr auto m_CheckBox_Ad = 0x318; // UMirCheckBox*
		constexpr auto m_CheckBox_NightPush = 0x320; // UMirCheckBox*
		constexpr auto m_Hrz_NightPush = 0x328; // UPanelWidget*
		constexpr auto m_Hrz_Ad = 0x330; // UPanelWidget*
	}

	namespace n_UMM_UIAction_CharacterSelect { // : UMM_UIAction
		constexpr auto MAX_SLOT_COUNT = 0xf8; // int32_t
		constexpr auto LIMIT_SLOT_COUNT = 0xfc; // int32_t
		constexpr auto SOUND_GAMESTART = 0x100; // int32_t
		constexpr auto STRING_DELETE_DIALOG_TITLE = 0x104; // int32_t
		constexpr auto STRING_DELETE_DIALOG_DESCRIPTION = 0x108; // int32_t
		constexpr auto STRING_DELETE_DIALOG_BTN_OK = 0x10c; // int32_t
		constexpr auto STRING_DELETE_DIALOG_BTN_CANCEL = 0x110; // int32_t
		constexpr auto STRING_DELETE_UNABLE_GAMESTART = 0x114; // int32_t
	}

	namespace n_UMouseCursorBinding { // : UPropertyBinding
		constexpr auto SourceObject = 0x28; // TWeakObjectPtr<UObject>
		constexpr auto SourcePath = 0x30; // FDynamicPropertyPath
		constexpr auto DestinationProperty = 0x58; // FName
	}

	namespace n_UMM_DungeonQuestSlotWidget { // : UWidgetBase
		constexpr auto imgFixedIcon = 0x2e0; // UMirImage*
		constexpr auto txtQuestTitle = 0x2e8; // UMirTextBlock*
		constexpr auto txtContidition = 0x2f0; // UMirTextBlock*
	}

	namespace n_UInstancedStaticMeshComponent { // : UStaticMeshComponent
		constexpr auto PerInstanceSMData = 0x4a8; // TArray<FInstancedStaticMeshInstanceData>
		constexpr auto InstancingRandomSeed = 0x4b8; // int32_t
		constexpr auto InstanceStartCullDistance = 0x4bc; // int32_t
		constexpr auto InstanceEndCullDistance = 0x4c0; // int32_t
		constexpr auto InstanceReorderTable = 0x4c8; // TArray<int32_t>
		constexpr auto NumPendingLightmaps = 0x520; // int32_t
		constexpr auto CachedMappings = 0x528; // TArray<FInstancedStaticMeshMappingInfo>
	}

	namespace n_UButtonWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto ButtonStyle = 0x30; // FButtonStyle
	}

	namespace n_UGeometryCollection { // : UObject
		constexpr auto Materials = 0x30; // TArray<UMaterialInterface*>
		constexpr auto CollisionType = 0x40; // ECollisionTypeEnum
		constexpr auto ImplicitType = 0x41; // EImplicitTypeEnum
		constexpr auto MinLevelSetResolution = 0x44; // int32_t
		constexpr auto MaxLevelSetResolution = 0x48; // int32_t
		constexpr auto MinClusterLevelSetResolution = 0x4c; // int32_t
		constexpr auto MaxClusterLevelSetResolution = 0x50; // int32_t
		constexpr auto CollisionObjectReductionPercentage = 0x54; // float
		constexpr auto bMassAsDensity = 0x58; // bool
		constexpr auto Mass = 0x5c; // float
		constexpr auto MinimumMassClamp = 0x60; // float
		constexpr auto CollisionParticlesFraction = 0x64; // float
		constexpr auto MaximumCollisionParticles = 0x68; // int32_t
		constexpr auto SizeSpecificData = 0x70; // TArray<FGeometryCollectionSizeSpecificData>
		constexpr auto EnableRemovePiecesOnFracture = 0x80; // bool
		constexpr auto RemoveOnFractureMaterials = 0x88; // TArray<UMaterialInterface*>
		constexpr auto PersistentGuid = 0x98; // FGuid
		constexpr auto StateGuid = 0xa8; // FGuid
		constexpr auto BoneSelectedMaterialIndex = 0xb8; // int32_t
	}

	namespace n_ULandscapeComponent { // : UPrimitiveComponent
		constexpr auto SectionBaseX = 0x418; // int32_t
		constexpr auto SectionBaseY = 0x41c; // int32_t
		constexpr auto ComponentSizeQuads = 0x420; // int32_t
		constexpr auto SubsectionSizeQuads = 0x424; // int32_t
		constexpr auto NumSubsections = 0x428; // int32_t
		constexpr auto OverrideMaterial = 0x430; // UMaterialInterface*
		constexpr auto OverrideHoleMaterial = 0x438; // UMaterialInterface*
		constexpr auto OverrideMaterials = 0x440; // TArray<FLandscapeComponentMaterialOverride>
		constexpr auto MaterialInstances = 0x450; // TArray<UMaterialInstanceConstant*>
		constexpr auto MaterialInstancesDynamic = 0x460; // TArray<UMaterialInstanceDynamic*>
		constexpr auto LODIndexToMaterialIndex = 0x470; // TArray<uint8_t>
		constexpr auto MaterialIndexToDisabledTessellationMaterial = 0x480; // TArray<uint8_t>
		constexpr auto XYOffsetmapTexture = 0x490; // UTexture2D*
		constexpr auto WeightmapScaleBias = 0x4a0; // FVector4
		constexpr auto WeightmapSubsectionOffset = 0x4b0; // float
		constexpr auto HeightmapScaleBias = 0x4c0; // FVector4
		constexpr auto CachedLocalBox = 0x4d0; // FBox
		constexpr auto CollisionComponent = 0x4ec; // ULandscapeHeightfieldCollisionComponent*
		constexpr auto HeightmapTexture = 0x508; // UTexture2D*
		constexpr auto WeightmapLayerAllocations = 0x510; // TArray<FWeightmapLayerAllocationInfo>
		constexpr auto WeightmapTextures = 0x520; // TArray<UTexture2D*>
		constexpr auto MapBuildDataId = 0x530; // FGuid
		constexpr auto IrrelevantLights = 0x540; // TArray<FGuid>
		constexpr auto CollisionMipLevel = 0x550; // int32_t
		constexpr auto SimpleCollisionMipLevel = 0x554; // int32_t
		constexpr auto NegativeZBoundsExtension = 0x558; // float
		constexpr auto PositiveZBoundsExtension = 0x55c; // float
		constexpr auto StaticLightingResolution = 0x560; // float
		constexpr auto ForcedLOD = 0x564; // int32_t
		constexpr auto LODBias = 0x568; // int32_t
		constexpr auto StateID = 0x56c; // FGuid
		constexpr auto BakedTextureMaterialGuid = 0x57c; // FGuid
		constexpr auto GIBakedBaseColorTexture = 0x590; // UTexture2D*
		constexpr auto MobileBlendableLayerMask = 0x598; // char
		constexpr auto MobileMaterialInterface = 0x5a0; // UMaterialInterface*
		constexpr auto MobileMaterialInterfaces = 0x5a8; // TArray<UMaterialInterface*>
		constexpr auto MobileWeightmapTextures = 0x5b8; // TArray<UTexture2D*>
	}

	namespace n_AFixedCameraPointer { // : AActor
		constexpr auto CameraNumber = 0x218; // int32_t
	}

	namespace n_UMM_Party_List_Slot { // : UWidgetBase
		constexpr auto m_Txt_Explain = 0x2e8; // UMirTextBlock*
		constexpr auto m_Txt_Level = 0x2f0; // UMirTextBlock*
		constexpr auto m_Txt_Nickname = 0x2f8; // UMirTextBlock*
		constexpr auto m_Txt_MemberNum = 0x300; // UMirTextBlock*
		constexpr auto m_Txt_CombatPoint = 0x308; // UMirTextBlock*
		constexpr auto m_Img_Joinable_Lock = 0x310; // UMirImage*
		constexpr auto m_Img_Joinable_UnLock = 0x318; // UMirImage*
		constexpr auto m_Btn_Main = 0x320; // UMirButton*
		constexpr auto m_Txt_Stage = 0x328; // UMirTextBlock*
		constexpr auto m_Img_Member_6 = 0x330; // UMirImage*
		constexpr auto m_Img_Member_16 = 0x338; // UMirImage*
		constexpr auto m_C_Btn_Translation = 0x340; // UMM_Common_Btn_Translation*
	}

	namespace n_UMM_Map_WaypointDest { // : UWidgetBase
		constexpr auto m_AniActive = 0x2e0; // UWidgetAnimation*
		constexpr auto m_SpcMain = 0x2e8; // USpacer*
		constexpr auto m_ImgDest_1 = 0x2f0; // UImage*
		constexpr auto m_ImgDest_2 = 0x2f8; // UImage*
	}

	namespace n_UMM_Map_Channel { // : UWidgetBase
		constexpr auto m_Txt_ChangeChannel = 0x2f0; // UMirTextBlock*
		constexpr auto m_CB_Close = 0x2f8; // UMM_Common_Btn_Symbol*
		constexpr auto m_Img_PartyIcon = 0x300; // UMirImage*
		constexpr auto m_Txt_PartyChannelInfo = 0x308; // UMirTextBlock*
		constexpr auto m_Btn_Main = 0x310; // UMirButton*
		constexpr auto m_ListView_ChannelList = 0x318; // UMirListView*
		constexpr auto m_arChannelSlotObj = 0x320; // TArray<UChannelSlotObj*>
	}

	namespace n_AMM_BattleTestGameMode { // : AMM_GameModeBase
		constexpr auto m_pBackgroundParamCollection = 0x330; // UMaterialParameterCollection*
		constexpr auto m_pFriendMonster = 0x338; // AMM_Monster*
		constexpr auto m_pSelectTarget = 0x340; // AMM_CharacterPawnBase*
		constexpr auto m_pLockOnTarget = 0x348; // AMM_CharacterPawnBase*
		constexpr auto EndLevelTravel = 0x350; // bool
		constexpr auto m_pUIBackGroundActor = 0x400; // AUIBackGroundActor*
		constexpr auto SituationDirectiveActor = 0x408; // AMM_SituationDirectiveEffect*
		constexpr auto MapQuestArrivalDisplayActor = 0x410; // TMap<int32_t, TWeakObjectPtr<AQuestArrivalDisplayActor>>
		constexpr auto m_pHQPlayer = 0x460; // AMM_HQPlayerReferenceActor*
		constexpr auto m_pPortraitCaptureActor = 0x468; // AMM_PortraitCaptureActor*
		constexpr auto m_pPlayerPortraitRenderTarget = 0x470; // UCanvasRenderTarget2D*
		constexpr auto m_pContentsLightManager = 0x478; // AContentsLightManager*
		constexpr auto MyEditorCulture = 0x490; // FString
	}

	namespace n_UActorChannel { // : UChannel
		constexpr auto Actor = 0x70; // AActor*
		constexpr auto CreateSubObjects = 0x160; // TArray<UObject*>
	}

	namespace n_UParticleModuleLocationWorldOffset { // : UParticleModuleLocation
		constexpr auto StartLocation = 0x30; // FRawDistributionVector
		constexpr auto DistributeOverNPoints = 0x78; // float
		constexpr auto DistributeThreshold = 0x7c; // float
	}

	namespace n_USlateBrushAsset { // : UObject
		constexpr auto Brush = 0x28; // FSlateBrush
	}

	namespace n_UMM_HudOccupationMenu { // : UWidgetBase
		constexpr auto m_pHudOccupationBoard = 0x2f0; // UMM_Hud_OccupationBoard*
	}

	namespace n_UMM_QuestRelation_Progress { // : UWidgetBase
		constexpr auto m_TxtProgressValue = 0x2f0; // UMirTextBlock*
		constexpr auto m_ProgressQuest = 0x2f8; // UMirProgressBar*
		constexpr auto m_BtnReward = 0x300; // UMirButton*
		constexpr auto m_ImgRewardIcon = 0x308; // UMirImage*
		constexpr auto m_Imgindicator = 0x310; // UMirImage*
		constexpr auto m_ImgComplete = 0x318; // UMirImage*
	}

	namespace n_UAnimSharingInstance { // : UObject
		constexpr auto RegisteredActors = 0x28; // TArray<AActor*>
		constexpr auto StateProcessor = 0xa8; // UAnimationSharingStateProcessor*
		constexpr auto UsedAnimationSequences = 0xe8; // TArray<UAnimSequence*>
		constexpr auto StateEnum = 0x108; // UEnum*
		constexpr auto SharingActor = 0x110; // AActor*
	}

	namespace n_USoundMix { // : UObject
		constexpr auto bApplyEQ = 0x28; // char : 1
		constexpr auto EQPriority = 0x2c; // float
		constexpr auto EQSettings = 0x30; // FAudioEQEffect
		constexpr auto SoundClassEffects = 0x68; // TArray<FSoundClassAdjuster>
		constexpr auto InitialDelay = 0x78; // float
		constexpr auto FadeInTime = 0x7c; // float
		constexpr auto Duration = 0x80; // float
		constexpr auto FadeOutTime = 0x84; // float
	}

	namespace n_UParticleModuleVelocityBase { // : UParticleModule
		constexpr auto bInWorldSpace = 0x30; // char : 1
		constexpr auto bApplyOwnerScale = 0x30; // char : 1
	}

	namespace n_UMM_B_ItemExchange { // : UWidgetBase
		constexpr auto mHorizonTab = 0x2f0; // UMM_CommonHorizontalTabSet*
		constexpr auto mVerticalTab = 0x2f8; // UMM_CommonVerticalTabSet*
		constexpr auto mNotice = 0x300; // UMM_Common_Board_Notice*
		constexpr auto mScrollBox = 0x308; // UMirScrollBox*
		constexpr auto mWrapBox = 0x310; // UWrapBox*
		constexpr auto mImgExchangeGradeBG = 0x318; // UMirImage*
		constexpr auto mTxtExchangName = 0x320; // UMirRichTextBlock*
		constexpr auto mImgTargetEmpty = 0x328; // UMirImage*
		constexpr auto mImgTargetGradeBG = 0x330; // UMirImage*
		constexpr auto mImgTargetIcon = 0x338; // UMirImage*
		constexpr auto mImgTargetNameBG = 0x340; // UMirImage*
		constexpr auto mTxtTargetName = 0x348; // UMirRichTextBlock*
		constexpr auto mImgTargetTier = 0x350; // UMirImage*
		constexpr auto mImgCost = 0x358; // UMirImage*
		constexpr auto mTxtCost = 0x360; // UMirTextBlock*
		constexpr auto mBtnExchange = 0x368; // UMM_Common_Btn*
		constexpr auto Slot_MakeItem = 0x370; // UMM_Item_Make_Slot_Registered*
	}

	namespace n_UParticleModuleEventGenerator { // : UParticleModuleEventBase
		constexpr auto Events = 0x30; // TArray<FParticleEvent_GenerateInfo>
	}

	namespace n_USourceEffectSimpleDelayPreset { // : USoundEffectSourcePreset
		constexpr auto Settings = 0x80; // FSourceEffectSimpleDelaySettings
	}

	namespace n_UMM_BuffIconWidget { // : UWidgetBase
		constexpr auto m_ImgBuffIcon = 0x2e0; // UImage*
		constexpr auto m_ImgBuffFrame = 0x2e8; // UImage*
		constexpr auto m_BtnBuff = 0x2f0; // UButton*
		constexpr auto m_pAniToggleIcon = 0x2f8; // UWidgetAnimation*
		constexpr auto m_pTxtStack = 0x300; // UMirTextBlock*
		constexpr auto m_IconWidget = 0x318; // FString
		constexpr auto m_IconFrameWidget = 0x328; // FString
		constexpr auto m_BtnWidget = 0x338; // FString
	}

	namespace n_UMM_PopupGuildPartner { // : UWidgetBase
		constexpr auto sb_member = 0x2f0; // UMirScrollBox*
		constexpr auto bn_empty = 0x2f8; // UMM_Common_Board_Notice*
		constexpr auto btn_confirm = 0x300; // UMM_Common_Btn*
		constexpr auto Btn_Cancel = 0x308; // UMM_Common_Btn*
		constexpr auto btn_close = 0x310; // UMM_Common_Btn_Symbol*
		constexpr auto Txt_Title = 0x318; // UMirTextBlock*
		constexpr auto txt_sort = 0x320; // UMirTextBlock*
		constexpr auto cb_sort = 0x328; // UMirCheckBox*
		constexpr auto cp_sort = 0x330; // UMirCanvasPanel*
		constexpr auto btn_sort_combat_point = 0x338; // UMirButton*
		constexpr auto btn_sort_level = 0x340; // UMirButton*
		constexpr auto btn_sort_grade = 0x348; // UMirButton*
		constexpr auto img_sort_combat_point = 0x350; // UMirImage*
		constexpr auto img_sort_level = 0x358; // UMirImage*
		constexpr auto img_sort_grade = 0x360; // UMirImage*
		constexpr auto txt_last = 0x368; // UMirTextBlock*
		constexpr auto tooltip_partner = 0x370; // UMM_Common_ToolTipBtn*
	}

	namespace n_UMM_Auction_Enchant_ComboSlot { // : UMM_Auction_ComboSlot
		constexpr auto m_pTxtName = 0x2e0; // UMirTextBlock*
		constexpr auto m_pImgSelect = 0x2e8; // UMirImage*
		constexpr auto m_pBtnMain = 0x2f0; // UMirButton*
	}

	namespace n_UMM_Popup_Quest_Accept { // : UWidgetBase
		constexpr auto m_RequestAcceptToStr = 0x2e0; // int32_t
		constexpr auto m_RequestGiveupToStr = 0x2e4; // int32_t
		constexpr auto m_DoYouAcceptRequestToStr = 0x2e8; // int32_t
		constexpr auto m_DoYouGiveupRequestToStr = 0x2ec; // int32_t
		constexpr auto m_DoYouAcceptNewRequestToStr = 0x2f0; // int32_t
		constexpr auto m_ChangeRequestToStr = 0x2f4; // int32_t
		constexpr auto m_OnGoingToStr = 0x2f8; // int32_t
		constexpr auto m_NewToStr = 0x2fc; // int32_t
		constexpr auto m_DoYouWantChangeToStr = 0x300; // int32_t
		constexpr auto m_IfRequestChangeToStr = 0x304; // int32_t
		constexpr auto m_PopupTitle = 0x308; // UMirTextBlock*
		constexpr auto m_AcceptMsg = 0x310; // UMirTextBlock*
		constexpr auto m_SubAcceptMsg = 0x318; // UMirTextBlock*
		constexpr auto m_Txt_Ongoing = 0x320; // UMirTextBlock*
		constexpr auto m_Txt_New = 0x328; // UMirTextBlock*
		constexpr auto m_Slot_Ongoing = 0x330; // UMM_Slot_Quest_Info*
		constexpr auto m_Slot_New = 0x338; // UMM_Slot_Quest_Info*
		constexpr auto m_CloseBtn = 0x340; // UMM_Common_Btn_Symbol*
		constexpr auto m_ObtainBtn = 0x348; // UMM_Common_Btn*
	}

	namespace n_UMM_MysticalPieceQuickTab { // : UWidgetBase
		constexpr auto m_arQuickBtn = 0x2f0; // UMM_MysticalPieceQuickSlotBtn* [0x5]
	}

	namespace n_UWorld { // : UObject
		constexpr auto PersistentLevel = 0x30; // ULevel*
		constexpr auto NetDriver = 0x38; // UNetDriver*
		constexpr auto LineBatcher = 0x40; // ULineBatchComponent*
		constexpr auto PersistentLineBatcher = 0x48; // ULineBatchComponent*
		constexpr auto ForegroundLineBatcher = 0x50; // ULineBatchComponent*
		constexpr auto NetworkManager = 0x58; // AGameNetworkManager*
		constexpr auto PhysicsCollisionHandler = 0x60; // UPhysicsCollisionHandler*
		constexpr auto ExtraReferencedObjects = 0x68; // TArray<UObject*>
		constexpr auto PerModuleDataObjects = 0x78; // TArray<UObject*>
		constexpr auto LevelSequenceActors = 0x88; // TArray<AActor*>
		constexpr auto StreamingLevels = 0x98; // TArray<ULevelStreaming*>
		constexpr auto StreamingLevelsToConsider = 0xa8; // FStreamingLevelsToConsider
		constexpr auto StreamingLevelsPrefix = 0xd0; // FString
		constexpr auto CurrentLevelPendingVisibility = 0xe0; // ULevel*
		constexpr auto CurrentLevelPendingInvisibility = 0xe8; // ULevel*
		constexpr auto DemoNetDriver = 0xf0; // UDemoNetDriver*
		constexpr auto MyParticleEventManager = 0xf8; // AParticleEventManager*
		constexpr auto DefaultPhysicsVolume = 0x100; // APhysicsVolume*
		constexpr auto bAreConstraintsDirty = 0x11e; // char : 1
		constexpr auto NavigationSystem = 0x120; // UNavigationSystemBase*
		constexpr auto AuthorityGameMode = 0x128; // AGameModeBase*
		constexpr auto GameState = 0x130; // AGameStateBase*
		constexpr auto AISystem = 0x138; // UAISystemBase*
		constexpr auto AvoidanceManager = 0x140; // UAvoidanceManager*
		constexpr auto Levels = 0x148; // TArray<ULevel*>
		constexpr auto LevelCollections = 0x158; // TArray<FLevelCollection>
		constexpr auto OwningGameInstance = 0x170; // UGameInstance*
		constexpr auto ParameterCollectionInstances = 0x178; // TArray<UMaterialParameterCollectionInstance*>
		constexpr auto CanvasForRenderingToTarget = 0x188; // UCanvas*
		constexpr auto CanvasForDrawMaterialToRenderTarget = 0x190; // UCanvas*
		constexpr auto ComponentsThatNeedEndOfFrameUpdate = 0x1e8; // TArray<UActorComponent*>
		constexpr auto ComponentsThatNeedEndOfFrameUpdate_OnGameThread = 0x1f8; // TArray<UActorComponent*>
		constexpr auto WorldComposition = 0x550; // UWorldComposition*
		constexpr auto PSCPool = 0x5e8; // FWorldPSCPool
	}

	namespace n_AMM_TargetDecalActor { // : AActor
		constexpr auto TestDecalID = 0x220; // int32_t
		constexpr auto m_mapDecal = 0x228; // TMap<int32_t, UParticleSystem*>
		constexpr auto TargetDecalComponent = 0x278; // UParticleSystemComponent*
	}

	namespace n_UMM_UIAction_PopupPackage { // : UMM_UIAction
		constexpr auto STR_MSGID_COSTMAX = 0xec; // int32_t
	}

	namespace n_UPopup_WorldBoss_Reward { // : UWidgetBase
		constexpr auto canVitory = 0x2e0; // UMirCanvasPanel*
		constexpr auto panVitory = 0x2e8; // UPanelWidget*
		constexpr auto imgBossVictory = 0x2f0; // UMirImage*
		constexpr auto vtcVitory = 0x2f8; // UVerticalBox*
		constexpr auto vtcVictoryTitle = 0x300; // UVerticalBox*
		constexpr auto txtVictoryTitle = 0x308; // UMirTextBlock*
		constexpr auto txtVictorySubTitle = 0x310; // UMirTextBlock*
		constexpr auto txtFixResult = 0x318; // UMirTextBlock*
		constexpr auto hrzRank = 0x320; // UHorizontalBox*
		constexpr auto rtxtRank = 0x328; // UMirRichTextBlock*
		constexpr auto rtxtLastHit = 0x330; // UMirRichTextBlock*
		constexpr auto canFailMain = 0x338; // UMirCanvasPanel*
		constexpr auto canFail = 0x340; // UMirCanvasPanel*
		constexpr auto imgBossFail = 0x348; // UMirImage*
		constexpr auto vtcFailTitle = 0x350; // UVerticalBox*
		constexpr auto txtFailTitle = 0x358; // UMirTextBlock*
		constexpr auto txtFailSubTitle = 0x360; // UMirTextBlock*
		constexpr auto txtFailFixReward = 0x368; // UMirTextBlock*
		constexpr auto txtLeftTime = 0x370; // UMirTextBlock*
		constexpr auto txtLeftTimeExplain = 0x378; // UMirTextBlock*
		constexpr auto txtFailLeftTime = 0x380; // UMirTextBlock*
		constexpr auto txtFailLeftTimeExplain = 0x388; // UMirTextBlock*
		constexpr auto canContents = 0x390; // UMirCanvasPanel*
		constexpr auto wgtVitoryContent = 0x398; // UPopup_DungeonReward_Info1*
		constexpr auto wgtPartyContent = 0x3a0; // UPopup_DungeonReward_Info2*
		constexpr auto wgtFailContent = 0x3a8; // UPopup_WorldBossFailRewardInfo*
		constexpr auto canBtn = 0x3b0; // UMirCanvasPanel*
		constexpr auto btnContributeRank = 0x3b8; // UMM_Common_Btn*
		constexpr auto btnConfirm = 0x3c0; // UMM_Common_Btn*
		constexpr auto canFailBtn = 0x3c8; // UMirCanvasPanel*
		constexpr auto btnFailConfirm = 0x3d0; // UMM_Common_Btn*
		constexpr auto m_pAni_Win = 0x3f0; // UWidgetAnimation*
		constexpr auto m_pAni_Defeat = 0x3f8; // UWidgetAnimation*
	}

	namespace n_UAISystem { // : UAISystemBase
		constexpr auto PerceptionSystemClassName = 0x58; // FSoftClassPath
		constexpr auto HotSpotManagerClassName = 0x70; // FSoftClassPath
		constexpr auto AcceptanceRadius = 0x88; // float
		constexpr auto PathfollowingRegularPathPointAcceptanceRadius = 0x8c; // float
		constexpr auto PathfollowingNavLinkAcceptanceRadius = 0x90; // float
		constexpr auto bFinishMoveOnGoalOverlap = 0x94; // bool
		constexpr auto bAcceptPartialPaths = 0x95; // bool
		constexpr auto bAllowStrafing = 0x96; // bool
		constexpr auto bEnableBTAITasks = 0x97; // bool
		constexpr auto bAllowControllersAsEQSQuerier = 0x98; // bool
		constexpr auto bEnableDebuggerPlugin = 0x99; // bool
		constexpr auto DefaultSightCollisionChannel = 0x9a; // ECollisionChannel
		constexpr auto BehaviorTreeManager = 0xa0; // UBehaviorTreeManager*
		constexpr auto EnvironmentQueryManager = 0xa8; // UEnvQueryManager*
		constexpr auto PerceptionSystem = 0xb0; // UAIPerceptionSystem*
		constexpr auto AllProxyObjects = 0xb8; // TArray<UAIAsyncTaskBlueprintProxy*>
		constexpr auto HotSpotManager = 0xc8; // UAIHotSpotManager*
		constexpr auto NavLocalGrids = 0xd0; // UNavLocalGridManager*
	}

	namespace n_UMovieSceneMediaTrack { // : UMovieSceneNameableTrack
		constexpr auto MediaSections = 0x58; // TArray<UMovieSceneSection*>
	}

	namespace n_UInterpTrackDirector { // : UInterpTrack
		constexpr auto CutTrack = 0x70; // TArray<FDirectorTrackCut>
		constexpr auto bSimulateCameraCutsOnClients = 0x80; // char : 1
	}

	namespace n_UMM_CharacterMovementComponent { // : UCharacterMovementComponent
		constexpr auto DeltaRotationScale = 0x6d0; // float
		constexpr auto bAdaptiveRotationRateForNavigation = 0x6d4; // char : 1
		constexpr auto RotationRateScaleForNavigation = 0x6d8; // float
		constexpr auto RotationRateDecreaseCoffForNavigationError = 0x6dc; // float
		constexpr auto bSkipTooSmallNavigationSegment = 0x6e0; // char : 1
		constexpr auto AgentRadiusRatioForSmallNavigationSegmentCheck = 0x6e4; // float
		constexpr auto AgentHalfHeightRatioForSmallNavigationSegmentCheck = 0x6e8; // float
	}

	namespace n_UMM_BP_Attendance_Reward_Slot { // : UWidgetBase
		constexpr auto m_Day_Slot = 0x2e0; // UMM_BP_Attendance_Day_Slot*
		constexpr auto m_Reward_ItemSlot = 0x2e8; // UMM_BattlePass_Item_Slot* [0x2]
	}

	namespace n_USlider { // : UWidget
		constexpr auto Value = 0x108; // float
		constexpr auto ValueDelegate = 0x10c; // DelegateProperty
		constexpr auto MinValue = 0x11c; // float
		constexpr auto MaxValue = 0x120; // float
		constexpr auto WidgetStyle = 0x128; // FSliderStyle
		constexpr auto Orientation = 0x468; // EOrientation
		constexpr auto SliderBarColor = 0x46c; // FLinearColor
		constexpr auto SliderHandleColor = 0x47c; // FLinearColor
		constexpr auto IndentHandle = 0x48c; // bool
		constexpr auto Locked = 0x48d; // bool
		constexpr auto MouseUsesStep = 0x48e; // bool
		constexpr auto RequiresControllerLock = 0x48f; // bool
		constexpr auto StepSize = 0x490; // float
		constexpr auto IsFocusable = 0x494; // bool
		constexpr auto OnMouseCaptureBegin = 0x498; // FScriptMulticastDelegate
		constexpr auto OnMouseCaptureEnd = 0x4a8; // FScriptMulticastDelegate
		constexpr auto OnControllerCaptureBegin = 0x4b8; // FScriptMulticastDelegate
		constexpr auto OnControllerCaptureEnd = 0x4c8; // FScriptMulticastDelegate
		constexpr auto OnValueChanged = 0x4d8; // FScriptMulticastDelegate
	}

	namespace n_UMM_PopUp_AcquiredItem { // : UWidgetBase
		constexpr auto sb_slot = 0x2f0; // UScrollBox*
		constexpr auto btn_close = 0x2f8; // UMM_Common_Btn_Symbol*
	}

	namespace n_UMultiLineEditableText { // : UTextLayoutWidget
		constexpr auto Text = 0x128; // FText
		constexpr auto HintText = 0x140; // FText
		constexpr auto HintTextDelegate = 0x158; // DelegateProperty
		constexpr auto WidgetStyle = 0x168; // FTextBlockStyle
		constexpr auto bIsReadOnly = 0x3d0; // bool
		constexpr auto Font = 0x3d8; // FSlateFontInfo
		constexpr auto SelectAllTextWhenFocused = 0x428; // bool
		constexpr auto ClearTextSelectionOnFocusLoss = 0x429; // bool
		constexpr auto RevertTextOnEscape = 0x42a; // bool
		constexpr auto ClearKeyboardFocusOnCommit = 0x42b; // bool
		constexpr auto AllowContextMenu = 0x42c; // bool
		constexpr auto VirtualKeyboardOptions = 0x42d; // FVirtualKeyboardOptions
		constexpr auto VirtualKeyboardDismissAction = 0x42e; // EVirtualKeyboardDismissAction
		constexpr auto OnTextChanged = 0x430; // FScriptMulticastDelegate
		constexpr auto OnTextCommitted = 0x440; // FScriptMulticastDelegate
	}

	namespace n_UInterpTrackVisibility { // : UInterpTrack
		constexpr auto VisibilityTrack = 0x70; // TArray<FVisibilityTrackKey>
		constexpr auto bFireEventsWhenForwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenJumpingForwards = 0x80; // char : 1
	}

	namespace n_UMM_Mail_Slot_Message { // : UWidgetBase
		constexpr auto ICON_READ_MAIL = 0x2f8; // int32_t
		constexpr auto ICON_NOT_READ_MAIL = 0x2fc; // int32_t
		constexpr auto ICON_READ_SEND_MAIL = 0x300; // int32_t
		constexpr auto ICON_NOT_READ_SEND_MAIL = 0x304; // int32_t
		constexpr auto ICON_READ_MAIL_INCLUDE_ITEM = 0x308; // int32_t
		constexpr auto ICON_NOT_READ_MAIL_INCLUDE_ITEM = 0x30c; // int32_t
		constexpr auto ICON_READ_SEND_MAIL_INCLUDE_ITEM = 0x310; // int32_t
		constexpr auto ICON_NOT_READ_SEND_MAIL_INCLUDE_ITEM = 0x314; // int32_t
		constexpr auto m_Txt_Title = 0x318; // UMirTextBlock*
		constexpr auto m_Txt_SubTitle = 0x320; // UMirTextBlock*
		constexpr auto m_Txt_SendTime = 0x328; // UMirTextBlock*
		constexpr auto m_RTxt_ExpireTime = 0x330; // UMirRichTextBlock*
		constexpr auto m_Img_IconState = 0x338; // UMirImage*
		constexpr auto m_Img_Selected = 0x340; // UMirImage*
		constexpr auto m_Btn_Main = 0x348; // UMirButton*
	}

	namespace n_UMaterialExpressionPrecomputedAOMask { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UParticleModuleColorBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x29; // char : 1
		constexpr auto LODDuplicate = 0x29; // char : 1
		constexpr auto bSupportsRandomSeed = 0x29; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x29; // char : 1
		constexpr auto LODValidity = 0x2a; // char
	}

	namespace n_UMM_MysticalPieceSlot { // : UMM_Slot_Base
		constexpr auto m_ImgJewelLock = 0x408; // UMirImage*
		constexpr auto m_ImgPlus = 0x410; // UMirImage*
		constexpr auto m_Imgindicator = 0x418; // UMirImage*
		constexpr auto m_ImgDisabled = 0x420; // UMirImage*
		constexpr auto txt_grade = 0x428; // UMirTextBlock*
		constexpr auto m_Img_Unlock = 0x430; // UMirImage*
		constexpr auto m_Img_Tier = 0x438; // UMirImage*
		constexpr auto m_BtnUnmount = 0x440; // UMM_Common_Btn_Symbol*
		constexpr auto m_ActiveSlot = 0x448; // bool
		constexpr auto m_JewelSlotIndex = 0x44c; // int32_t
		constexpr auto img_guide = 0x450; // UMirImage*
		constexpr auto animation_guide = 0x458; // UWidgetAnimation*
		constexpr auto m_Img_GradeBgEffect = 0x460; // UMirImage*
		constexpr auto m_Img_GradeBgEquipEffect = 0x468; // UMirImage*
	}

	namespace n_AOnlineBeaconHostObject { // : AActor
		constexpr auto BeaconTypeName = 0x218; // FString
		constexpr auto ClientBeaconActorClass = 0x228; // AOnlineBeaconClient*
		constexpr auto ClientActors = 0x230; // TArray<AOnlineBeaconClient*>
	}

	namespace n_UMM_ProfileImageEditor { // : UWidgetBase
		constexpr auto m_pPhotoTexture = 0x2e0; // UTexture2D*
		constexpr auto m_pParentProfile = 0x2e8; // UMM_Popup_Profile*
		constexpr auto m_BtnOk = 0x2f0; // UMM_Common_Btn*
	}

	namespace n_UPaperTileSet { // : UObject
		constexpr auto TileSize = 0x28; // FIntPoint
		constexpr auto TileSheet = 0x30; // UTexture2D*
		constexpr auto AdditionalSourceTextures = 0x38; // TArray<UTexture*>
		constexpr auto BorderMargin = 0x48; // FIntMargin
		constexpr auto PerTileSpacing = 0x58; // FIntPoint
		constexpr auto DrawingOffset = 0x60; // FIntPoint
		constexpr auto WidthInTiles = 0x68; // int32_t
		constexpr auto HeightInTiles = 0x6c; // int32_t
		constexpr auto AllocatedWidth = 0x70; // int32_t
		constexpr auto AllocatedHeight = 0x74; // int32_t
		constexpr auto PerTileData = 0x78; // TArray<FPaperTileMetadata>
		constexpr auto Terrains = 0x88; // TArray<FPaperTileSetTerrain>
		constexpr auto TileWidth = 0x98; // int32_t
		constexpr auto TileHeight = 0x9c; // int32_t
		constexpr auto Margin = 0xa0; // int32_t
		constexpr auto Spacing = 0xa4; // int32_t
	}

	namespace n_UOnlineSubsystemExtendedGoogleWidget { // : UUserWidget
		constexpr auto WebBrowser = 0x240; // UOnlineSubsystemExtendedGoogleWebBrowser*
		constexpr auto m_Btn_Close = 0x268; // UButton*
	}

	namespace n_UBTDecorator_IsBBEntryOfClass { // : UBTDecorator_BlackboardBase
		constexpr auto TestClass = 0x90; // UObject*
	}

	namespace n_UMM_PlayerAnimInstance { // : UMM_AnimInstance
		constexpr auto MoveBlendSpeed = 0x270; // float
		constexpr auto MoveRate = 0x274; // float
		constexpr auto BattleState = 0x278; // bool
		constexpr auto RideState = 0x279; // ERideState
		constexpr auto VehicleType = 0x27c; // int32_t
		constexpr auto SideWalkDir = 0x280; // float
		constexpr auto IsStandJump = 0x284; // bool
		constexpr auto SkillId = 0x288; // int32_t
		constexpr auto CCSTANCE = 0x28c; // int32_t
		constexpr auto AniIndex = 0x290; // int32_t
		constexpr auto OpObjectType = 0x294; // int32_t
		constexpr auto AirwalkState = 0x298; // EAIRWALK_STATE
		constexpr auto IsHit = 0x299; // bool
		constexpr auto bNewWallJumpStart = 0x29a; // bool
		constexpr auto DashCameraBlurCurve = 0x2a0; // UCurveFloat*
		constexpr auto Jump02Curve = 0x2a8; // UCurveFloat*
		constexpr auto Player = 0x2b0; // AMM_PC*
	}

	namespace n_UMM_PKWarning { // : UWidgetBase
		constexpr auto playSpeed = 0x2e0; // float
		constexpr auto cycleCount = 0x2e4; // int32_t
		constexpr auto IntervalTime = 0x2e8; // float
		constexpr auto warningAni = 0x2f0; // UWidgetAnimation*
	}

	namespace n_UParticleModuleAccelerationDragScaleOverLife { // : UParticleModuleAccelerationBase
		constexpr auto DragScale = 0x38; // UDistributionFloat*
		constexpr auto DragScaleRaw = 0x40; // FRawDistributionFloat
	}

	namespace n_UMM_PopupCharacterSearchSlot { // : UWidgetBase
		constexpr auto img_rank = 0x2e0; // UMirImage*
		constexpr auto txt_rank = 0x2e8; // UMirTextBlock*
		constexpr auto img_portrait = 0x2f0; // UMirImage*
		constexpr auto Txt_Name = 0x2f8; // UMirTextBlock*
		constexpr auto txt_combatpower = 0x300; // UMirTextBlock*
		constexpr auto txt_level = 0x308; // UMirTextBlock*
		constexpr auto guild_icon = 0x310; // UMM_GuildIcon*
		constexpr auto txt_guild_name = 0x318; // UMirTextBlock*
		constexpr auto Btn_Main = 0x320; // UMirButton*
	}

	namespace n_UWrapBoxSlot { // : UPanelSlot
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto bFillEmptySpace = 0x48; // bool
		constexpr auto FillSpanWhenLessThan = 0x4c; // float
		constexpr auto HorizontalAlignment = 0x50; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x51; // EVerticalAlignment
	}

	namespace n_UObjectReferencer { // : UObject
		constexpr auto ReferencedObjects = 0x28; // TArray<UObject*>
	}

	namespace n_UMM_ContentsPoint { // : UWidgetBase
		constexpr auto m_RTxt_Title = 0x2e0; // UMirRichTextBlock*
		constexpr auto m_CB_Detail = 0x2e8; // UMM_Common_Btn_Symbol*
		constexpr auto m_Img_Point = 0x2f0; // UMirImage*
		constexpr auto m_Txt_Point = 0x2f8; // UMirTextBlock*
	}

	namespace n_UARSaveWorldAsyncTaskBlueprintProxy { // : UARBaseAsyncTaskBlueprintProxy
		constexpr auto OnSuccess = 0x50; // FScriptMulticastDelegate
		constexpr auto OnFailed = 0x60; // FScriptMulticastDelegate
	}

	namespace n_UBTTask_ReserveSkill { // : UBTTaskNode
		constexpr auto ReserveRate = 0x74; // int32_t
	}

	namespace n_UInterpTrackInstVisibility { // : UInterpTrackInst
		constexpr auto Action = 0x28; // EVisibilityTrackAction
		constexpr auto LastUpdatePosition = 0x2c; // float
	}

	namespace n_UMM_Slot_DailyWork_Reward { // : UWidgetBase
		constexpr auto mPanelEffect = 0x2e0; // UMirCanvasPanel*
		constexpr auto mImgIcon = 0x2e8; // UMirImage*
		constexpr auto mTxtItemCount = 0x2f0; // UMirTextBlock*
		constexpr auto mBtnSlot = 0x2f8; // UMirButton*
	}

	namespace n_USpectatorPawnMovement { // : UFloatingPawnMovement
		constexpr auto bIgnoreTimeDilation = 0x150; // char : 1
	}

	namespace n_UMM_Invite_Alarm_Slot { // : UWidgetBase
		constexpr auto TXT_COLOR_PARTY_TYPE_6 = 0x2e0; // FString
		constexpr auto TXT_COLOR_PARTY_TYPE_16 = 0x2f0; // FString
		constexpr auto TXT_COLOR_PARTY_TYPE_DUNGEON = 0x300; // FString
		constexpr auto TXT_COLOR_PARTY_TYPE_BOSS = 0x310; // FString
		constexpr auto m_Img_Class = 0x328; // UMirImage*
		constexpr auto m_Txt_Level = 0x330; // UMirTextBlock*
		constexpr auto m_Txt_Nickname = 0x338; // UMirTextBlock*
		constexpr auto m_Txt_CombatPoint = 0x340; // UMirTextBlock*
		constexpr auto m_Img_Frame_Guild = 0x348; // UMirImage*
		constexpr auto m_Img_Symbol_Guild = 0x350; // UMirImage*
		constexpr auto m_Txt_GuildName = 0x358; // UMirTextBlock*
		constexpr auto m_Txt_Time = 0x360; // UMirTextBlock*
		constexpr auto m_Txt_Alarm = 0x368; // UMirTextBlock*
		constexpr auto m_Img_Timer = 0x370; // UMirImage*
		constexpr auto m_Txt_PartyType = 0x378; // UMirTextBlock*
		constexpr auto m_Txt_StageName = 0x380; // UMirTextBlock*
		constexpr auto m_CB_Accept = 0x388; // UMM_Common_Btn*
		constexpr auto m_CB_Refuse = 0x390; // UMM_Common_Btn*
	}

	namespace n_UParticleModuleBeamNoise { // : UParticleModuleBeamBase
		constexpr auto bLowFreq_Enabled = 0x30; // char : 1
		constexpr auto Frequency = 0x34; // int32_t
		constexpr auto Frequency_LowRange = 0x38; // int32_t
		constexpr auto NoiseRange = 0x40; // FRawDistributionVector
		constexpr auto NoiseRangeScale = 0x88; // FRawDistributionFloat
		constexpr auto bNRScaleEmitterTime = 0xb8; // char : 1
		constexpr auto NoiseSpeed = 0xc0; // FRawDistributionVector
		constexpr auto bSmooth = 0x108; // char : 1
		constexpr auto NoiseLockRadius = 0x10c; // float
		constexpr auto bNoiseLock = 0x110; // char : 1
		constexpr auto bOscillate = 0x110; // char : 1
		constexpr auto NoiseLockTime = 0x114; // float
		constexpr auto NoiseTension = 0x118; // float
		constexpr auto bUseNoiseTangents = 0x11c; // char : 1
		constexpr auto NoiseTangentStrength = 0x120; // FRawDistributionFloat
		constexpr auto NoiseTessellation = 0x150; // int32_t
		constexpr auto bTargetNoise = 0x154; // char : 1
		constexpr auto FrequencyDistance = 0x158; // float
		constexpr auto bApplyNoiseScale = 0x15c; // char : 1
		constexpr auto NoiseScale = 0x160; // FRawDistributionFloat
	}

	namespace n_UOverlaySlot { // : UPanelSlot
		constexpr auto Padding = 0x40; // FMargin
		constexpr auto HorizontalAlignment = 0x50; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x51; // EVerticalAlignment
	}

	namespace n_AARSharedWorldPlayerController { // : APlayerController
		constexpr auto Player = 0x290; // UPlayer*
		constexpr auto AcknowledgedPawn = 0x298; // APawn*
		constexpr auto ControllingDirTrackInst = 0x2a0; // UInterpTrackInstDirector*
		constexpr auto MyHUD = 0x2a8; // AHUD*
		constexpr auto PlayerCameraManager = 0x2b0; // APlayerCameraManager*
		constexpr auto PlayerCameraManagerClass = 0x2b8; // APlayerCameraManager*
		constexpr auto bAutoManageActiveCameraTarget = 0x2c0; // bool
		constexpr auto TargetViewRotation = 0x2c4; // FRotator
		constexpr auto SmoothTargetViewRotationSpeed = 0x2dc; // float
		constexpr auto HiddenActors = 0x2e8; // TArray<AActor*>
		constexpr auto HiddenPrimitiveComponents = 0x2f8; // TArray<TWeakObjectPtr<UPrimitiveComponent>>
		constexpr auto LastSpectatorStateSynchTime = 0x30c; // float
		constexpr auto LastSpectatorSyncLocation = 0x310; // FVector
		constexpr auto LastSpectatorSyncRotation = 0x31c; // FRotator
		constexpr auto ClientCap = 0x328; // int32_t
		constexpr auto CheatManager = 0x330; // UCheatManager*
		constexpr auto CheatClass = 0x338; // UCheatManager*
		constexpr auto PlayerInput = 0x340; // UPlayerInput*
		constexpr auto ActiveForceFeedbackEffects = 0x348; // TArray<FActiveForceFeedbackEffect>
		constexpr auto bPlayerIsWaiting = 0x3c8; // char : 1
		constexpr auto NetPlayerIndex = 0x3cc; // char
		constexpr auto PendingSwapConnection = 0x408; // UNetConnection*
		constexpr auto NetConnection = 0x410; // UNetConnection*
		constexpr auto InputYawScale = 0x424; // float
		constexpr auto InputPitchScale = 0x428; // float
		constexpr auto InputRollScale = 0x42c; // float
		constexpr auto bShowMouseCursor = 0x430; // char : 1
		constexpr auto bEnableClickEvents = 0x430; // char : 1
		constexpr auto bEnableTouchEvents = 0x430; // char : 1
		constexpr auto bEnableMouseOverEvents = 0x430; // char : 1
		constexpr auto bEnableTouchOverEvents = 0x430; // char : 1
		constexpr auto bForceFeedbackEnabled = 0x430; // char : 1
		constexpr auto ForceFeedbackScale = 0x434; // float
		constexpr auto ClickEventKeys = 0x438; // TArray<FKey>
		constexpr auto DefaultMouseCursor = 0x448; // EMouseCursor
		constexpr auto CurrentMouseCursor = 0x449; // EMouseCursor
		constexpr auto DefaultClickTraceChannel = 0x44a; // ECollisionChannel
		constexpr auto CurrentClickTraceChannel = 0x44b; // ECollisionChannel
		constexpr auto HitResultTraceDistance = 0x44c; // float
		constexpr auto SeamlessTravelCount = 0x450; // uint16_t
		constexpr auto LastCompletedSeamlessTravelCount = 0x452; // uint16_t
		constexpr auto InactiveStateInputComponent = 0x4c8; // UInputComponent*
		constexpr auto bShouldPerformFullTickWhenPaused = 0x4d0; // char : 1
		constexpr auto CurrentTouchInterface = 0x4e8; // UTouchInterface*
		constexpr auto SpectatorPawn = 0x540; // ASpectatorPawn*
		constexpr auto bIsLocalPlayerController = 0x54c; // bool
		constexpr auto SpawnLocation = 0x550; // FVector
	}

	namespace n_UMM_DungeonCommonTitle2 { // : UWidgetBase
		constexpr auto TxtTitle = 0x2e0; // UMirTextBlock*
		constexpr auto txtExplain = 0x2e8; // UMirTextBlock*
		constexpr auto btnDetailInfo = 0x2f0; // UMM_Common_ToolTipBtn*
	}

	namespace n_UModelComponent { // : UPrimitiveComponent
		constexpr auto ModelBodySetup = 0x430; // UBodySetup*
	}

	namespace n_ADebugCameraController { // : APlayerController
		constexpr auto bShowSelectedInfo = 0x568; // char : 1
		constexpr auto bIsFrozenRendering = 0x568; // char : 1
		constexpr auto bIsOrbitingSelectedActor = 0x568; // char : 1
		constexpr auto bOrbitPivotUseCenter = 0x568; // char : 1
		constexpr auto bEnableBufferVisualization = 0x568; // char : 1
		constexpr auto bEnableBufferVisualizationFullMode = 0x568; // char : 1
		constexpr auto bIsBufferVisualizationInputSetup = 0x568; // char : 1
		constexpr auto bLastDisplayEnabled = 0x568; // char : 1
		constexpr auto DrawFrustum = 0x570; // UDrawFrustumComponent*
		constexpr auto SelectedActor = 0x578; // AActor*
		constexpr auto SelectedComponent = 0x580; // UPrimitiveComponent*
		constexpr auto SelectedHitPoint = 0x588; // FHitResult
		constexpr auto OriginalControllerRef = 0x610; // APlayerController*
		constexpr auto OriginalPlayer = 0x618; // UPlayer*
		constexpr auto SpeedScale = 0x620; // float
		constexpr auto InitialMaxSpeed = 0x624; // float
		constexpr auto InitialAccel = 0x628; // float
		constexpr auto InitialDecel = 0x62c; // float
	}

	namespace n_UMM_NPC_Make_Slot { // : UMM_Slot_Base
		constexpr auto Img_Select = 0x3e8; // UMirImage*
		constexpr auto Img_Arrow = 0x3f0; // UMirImage*
		constexpr auto Txt_ItemName = 0x3f8; // UMirTextBlock*
	}

	namespace n_UIAPOneStorePCModule { // : UIAPStoreModuleBase
		constexpr auto m_UserRequestProductData = 0x58; // FIAPUserRequestData
		constexpr auto m_PurchaseProductData = 0x98; // FIAPProductData
		constexpr auto m_PurchaseInProgress = 0x138; // TArray<EIAPPurchaseState>
		constexpr auto ProcessedTransactionIDs = 0x148; // TArray<FString>
		constexpr auto ProcessedTransactionReceipts = 0x158; // TArray<FString>
		constexpr auto DelayHideBlockScreenTimeHandle = 0x168; // FTimerHandle
		constexpr auto m_MarketProductDataMap = 0x170; // TMap<FString, FIAPMarketProductData>
	}

	namespace n_UTextureRenderTarget { // : UTexture
		constexpr auto TargetGamma = 0xd0; // float
	}

	namespace n_APlaneReflectionCapture { // : AReflectionCapture
		constexpr auto CaptureComponent = 0x218; // UReflectionCaptureComponent*
	}

	namespace n_USourceEffectFoldbackDistortionPreset { // : USoundEffectSourcePreset
		constexpr auto Settings = 0x74; // FSourceEffectFoldbackDistortionSettings
	}

	namespace n_AMonsterMoveTrigger { // : AActivateTrigger
		constexpr auto m_MonsterOrderID = 0x278; // int32_t
		constexpr auto m_MonsterArray = 0x280; // TArray<AMM_Monster*>
	}

	namespace n_UParticleModuleMeshRotationRateMultiplyLife { // : UParticleModuleRotationRateBase
		constexpr auto LifeMultiplier = 0x30; // FRawDistributionVector
	}

	namespace n_UMM_B_Hydra_Exchange { // : UWidgetBase
		constexpr auto TxtTitle = 0x2f0; // UMirTextBlock*
		constexpr auto RichTxtNotice = 0x2f8; // UMirRichTextBlock*
		constexpr auto BtnRefresh = 0x300; // UMM_Common_Btn_Symbol*
		constexpr auto TxtRefreshHydra = 0x308; // UMirTextBlock*
		constexpr auto TxtMyDraco = 0x310; // UMirTextBlock*
		constexpr auto TxtMyHydraValue = 0x318; // UMirTextBlock*
		constexpr auto TxtMyDracoValue = 0x320; // UMirTextBlock*
		constexpr auto TxtMySeptariaValue = 0x328; // UMirTextBlock*
		constexpr auto TxtHydraSmelt = 0x330; // UMirTextBlock*
		constexpr auto TxtDracoValue = 0x338; // UMirTextBlock*
		constexpr auto TxtSeptariaValue = 0x340; // UMirTextBlock*
		constexpr auto TxtExchangeHydra = 0x348; // UMirTextBlock*
		constexpr auto TxtHydraFeeStage = 0x350; // UMirTextBlock*
		constexpr auto SliderExchange = 0x358; // UMM_Item_Make_Slider*
		constexpr auto BtnExchange = 0x360; // UMM_Common_Btn*
		constexpr auto TxtDesc = 0x368; // UMirTextBlock*
	}

	namespace n_UMM_Popup_AccountInfo { // : UWidgetBase
		constexpr auto m_Btn_Confirm = 0x2e0; // UMM_Common_Btn*
		constexpr auto m_Btn_Cancel = 0x2e8; // UMM_Common_Btn*
		constexpr auto m_Txt_ServerName = 0x2f0; // UMirTextBlock*
		constexpr auto m_Img_CharacterClass = 0x2f8; // UMirImage*
		constexpr auto m_Txt_CharacterName = 0x300; // UMirTextBlock*
		constexpr auto m_Txt_CharacterLevel = 0x308; // UMirTextBlock*
	}

	namespace n_ASpawnObjectDataActor { // : AActor
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto bHidden = 0x58; // char : 1
		constexpr auto bNetTemporary = 0x58; // char : 1
		constexpr auto bNetStartup = 0x58; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x58; // char : 1
		constexpr auto bAlwaysRelevant = 0x58; // char : 1
		constexpr auto bReplicateMovement = 0x58; // char : 1
		constexpr auto bTearOff = 0x58; // char : 1
		constexpr auto bExchangedRoles = 0x58; // char : 1
		constexpr auto bNetLoadOnClient = 0x59; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x59; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x59; // char : 1
		constexpr auto bRelevantForLevelBounds = 0x59; // char : 1
		constexpr auto bReplayRewindable = 0x59; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x59; // char : 1
		constexpr auto bAutoDestroyWhenFinished = 0x59; // char : 1
		constexpr auto bBlockInput = 0x59; // char : 1
		constexpr auto bCanBeDamaged = 0x5a; // char : 1
		constexpr auto bCollideWhenPlacing = 0x5a; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x5a; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x5a; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x5a; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x5a; // char : 1
		constexpr auto bIsEditorOnlyActor = 0x5a; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x5a; // char : 1
		constexpr auto bReplicates = 0x5b; // char : 1
		constexpr auto bCanBeInCluster = 0x5b; // char : 1
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x5b; // char : 1
		constexpr auto bActorEnableCollision = 0x5c; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x5c; // char : 1
		constexpr auto UpdateOverlapsMethodDuringLevelStreaming = 0x5d; // EActorUpdateOverlapsMethod
		constexpr auto DefaultUpdateOverlapsMethodDuringLevelStreaming = 0x5e; // EActorUpdateOverlapsMethod
		constexpr auto RemoteRole = 0x5f; // ENetRole
		constexpr auto ReplicatedMovement = 0x60; // FRepMovement
		constexpr auto InitialLifeSpan = 0x94; // float
		constexpr auto CustomTimeDilation = 0x98; // float
		constexpr auto AttachmentReplication = 0xa0; // FRepAttachment
		constexpr auto Owner = 0xe0; // AActor*
		constexpr auto NetDriverName = 0xe8; // FName
		constexpr auto Role = 0xf0; // ENetRole
		constexpr auto NetDormancy = 0xf1; // ENetDormancy
		constexpr auto SpawnCollisionHandlingMethod = 0xf2; // ESpawnActorCollisionHandlingMethod
		constexpr auto AutoReceiveInput = 0xf3; // EAutoReceiveInput
		constexpr auto InputPriority = 0xf4; // int32_t
		constexpr auto InputComponent = 0xf8; // UInputComponent*
		constexpr auto NetCullDistanceSquared = 0x100; // float
		constexpr auto NetTag = 0x104; // int32_t
		constexpr auto NetUpdateFrequency = 0x108; // float
		constexpr auto MinNetUpdateFrequency = 0x10c; // float
		constexpr auto NetPriority = 0x110; // float
		constexpr auto Instigator = 0x118; // APawn*
		constexpr auto Children = 0x120; // TArray<AActor*>
		constexpr auto RootComponent = 0x130; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x138; // TArray<AMatineeActor*>
		constexpr auto Layers = 0x150; // TArray<FName>
		constexpr auto ParentComponent = 0x160; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto Tags = 0x168; // TArray<FName>
		constexpr auto OnTakeAnyDamage = 0x178; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x179; // FScriptMulticastDelegate
		constexpr auto OnTakeRadialDamage = 0x17a; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x17b; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x17c; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x17d; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x17e; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x17f; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x180; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x181; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x182; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x183; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x184; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x185; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x186; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x187; // FScriptMulticastDelegate
		constexpr auto InstanceComponents = 0x1e8; // TArray<UActorComponent*>
		constexpr auto BlueprintCreatedComponents = 0x1f8; // TArray<UActorComponent*>
	}

	namespace n_UBTTask_PreSelectSkill { // : UBTTaskNode
		constexpr auto Conditions = 0x78; // TArray<FSkillCondition>
	}

	namespace n_UMM_CustomizingManager { // : UObject
		constexpr auto m_pPoseableMeshActor = 0xa0; // AMM_CustomizingPoseableMeshActor*
	}

	namespace n_UBackgroundBlur { // : UContentWidget
		constexpr auto Padding = 0x120; // FMargin
		constexpr auto HorizontalAlignment = 0x130; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x131; // EVerticalAlignment
		constexpr auto bApplyAlphaToBlur = 0x132; // bool
		constexpr auto BlurStrength = 0x134; // float
		constexpr auto bOverrideAutoRadiusCalculation = 0x138; // bool
		constexpr auto BlurRadius = 0x13c; // int32_t
		constexpr auto LowQualityFallbackBrush = 0x140; // FSlateBrush
	}

	namespace n_USourceEffectDynamicsProcessorPreset { // : USoundEffectSourcePreset
		constexpr auto Settings = 0x90; // FSourceEffectDynamicsProcessorSettings
	}

	namespace n_USoundWaveProcedural { // : USoundWave
		constexpr auto CompressionQuality = 0x160; // int32_t
		constexpr auto StreamingPriority = 0x164; // int32_t
		constexpr auto SampleRateQuality = 0x168; // ESoundwaveSampleRateSettings
		constexpr auto SoundGroup = 0x16a; // ESoundGroup
		constexpr auto bLooping = 0x16b; // char : 1
		constexpr auto bStreaming = 0x16b; // char : 1
		constexpr auto bSeekableStreaming = 0x16b; // char : 1
		constexpr auto LoadingBehavior = 0x16c; // ESoundWaveLoadingBehavior
		constexpr auto bMature = 0x16d; // char : 1
		constexpr auto bManualWordWrap = 0x16d; // char : 1
		constexpr auto bSingleLine = 0x16d; // char : 1
		constexpr auto bIsAmbisonics = 0x16d; // char : 1
		constexpr auto FrequenciesToAnalyze = 0x170; // TArray<float>
		constexpr auto CookedSpectralTimeData = 0x180; // TArray<FSoundWaveSpectralTimeData>
		constexpr auto CookedEnvelopeTimeData = 0x190; // TArray<FSoundWaveEnvelopeTimeData>
		constexpr auto InitialChunkSize = 0x1a0; // int32_t
		constexpr auto SpokenText = 0x1e8; // FString
		constexpr auto SubtitlePriority = 0x1f8; // float
		constexpr auto Volume = 0x1fc; // float
		constexpr auto Pitch = 0x200; // float
		constexpr auto NumChannels = 0x204; // int32_t
		constexpr auto SampleRate = 0x208; // int32_t
		constexpr auto Subtitles = 0x218; // TArray<FSubtitleCue>
		constexpr auto Curves = 0x228; // UCurveTable*
		constexpr auto InternalCurves = 0x230; // UCurveTable*
	}

	namespace n_UMM_Friend_ListSlot { // : UWidgetBase
		constexpr auto COLOR_User_Online = 0x2e8; // FLinearColor
		constexpr auto COLOR_User_Offline = 0x2f8; // FLinearColor
		constexpr auto STRING_Online = 0x308; // int32_t
		constexpr auto STRING_Offline = 0x30c; // int32_t
		constexpr auto m_CheckBox_Favorite = 0x310; // UMirCheckBox*
		constexpr auto m_Img_Class = 0x318; // UMirImage*
		constexpr auto m_Txt_Level = 0x320; // UMirTextBlock*
		constexpr auto m_Txt_Nickname = 0x328; // UMirTextBlock*
		constexpr auto m_Txt_CustomTitle = 0x330; // UMirTextBlock*
		constexpr auto m_Txt_CombatPoint = 0x338; // UMirTextBlock*
		constexpr auto m_Grid_Guild = 0x340; // UPanelWidget*
		constexpr auto m_Img_Guild_Frame = 0x348; // UMirImage*
		constexpr auto m_Img_Guild_Symbol = 0x350; // UMirImage*
		constexpr auto m_Txt_GuildName = 0x358; // UMirTextBlock*
		constexpr auto m_Img_Online = 0x360; // UMirImage*
		constexpr auto m_Txt_Online = 0x368; // UMirTextBlock*
		constexpr auto m_Grid_Action_Request = 0x370; // UPanelWidget*
		constexpr auto m_C_Btn_Request = 0x378; // UMM_Common_Btn*
		constexpr auto m_C_Btn_RequestCancel = 0x380; // UMM_Common_Btn*
		constexpr auto m_Grid_Action_Recv = 0x388; // UPanelWidget*
		constexpr auto m_C_Btn_Accept = 0x390; // UMM_Common_Btn*
		constexpr auto m_C_Btn_Refuse = 0x398; // UMM_Common_Btn*
		constexpr auto m_Grid_Action_Menu = 0x3a0; // UPanelWidget*
		constexpr auto m_C_Btn_Detail = 0x3a8; // UMM_Common_Btn_Symbol*
		constexpr auto m_C_Btn_Chat = 0x3b0; // UMM_Common_Btn_Symbol*
		constexpr auto m_C_Btn_Delete = 0x3b8; // UMM_Common_Btn_Symbol*
	}

	namespace n_UMM_MagicStoneQuickTab { // : UWidgetBase
		constexpr auto lst_slot = 0x2f0; // UMM_MagicStoneQuickTabSlot* [0x5]
	}

	namespace n_UMM_Slot_Inventory_BG { // : UMM_Slot_Inventory
		constexpr auto slot_inventory_bg = 0x510; // UMirImage*
		constexpr auto slot_inventory = 0x518; // UPanelWidget*
	}

	namespace n_AOpObjectSpawner { // : AActivateTrigger
		constexpr auto m_ObjectID = 0x298; // int32_t
		constexpr auto m_bDefaultObjectSpawn = 0x29c; // bool
		constexpr auto m_bDefaultObjectActive = 0x29d; // bool
	}

	namespace n_ANavigationTestingActor { // : AActor
		constexpr auto CapsuleComponent = 0x228; // UCapsuleComponent*
		constexpr auto InvokerComponent = 0x230; // UNavigationInvokerComponent*
		constexpr auto bActAsNavigationInvoker = 0x238; // char : 1
		constexpr auto NavAgentProps = 0x240; // FNavAgentProperties
		constexpr auto QueryingExtent = 0x270; // FVector
		constexpr auto MyNavData = 0x280; // ANavigationData*
		constexpr auto ProjectedLocation = 0x288; // FVector
		constexpr auto bProjectedLocationValid = 0x294; // char : 1
		constexpr auto bSearchStart = 0x294; // char : 1
		constexpr auto bBacktracking = 0x294; // char : 1
		constexpr auto bUseHierarchicalPathfinding = 0x294; // char : 1
		constexpr auto bGatherDetailedInfo = 0x294; // char : 1
		constexpr auto bDrawDistanceToWall = 0x294; // char : 1
		constexpr auto bShowNodePool = 0x294; // char : 1
		constexpr auto bShowBestPath = 0x294; // char : 1
		constexpr auto bShowDiffWithPreviousStep = 0x295; // char : 1
		constexpr auto bShouldBeVisibleInGame = 0x295; // char : 1
		constexpr auto CostDisplayMode = 0x298; // ENavCostDisplay
		constexpr auto TextCanvasOffset = 0x29c; // FVector2D
		constexpr auto bPathExist = 0x2a4; // char : 1
		constexpr auto bPathIsPartial = 0x2a4; // char : 1
		constexpr auto bPathSearchOutOfNodes = 0x2a4; // char : 1
		constexpr auto PathfindingTime = 0x2a8; // float
		constexpr auto PathCost = 0x2ac; // float
		constexpr auto PathfindingSteps = 0x2b0; // int32_t
		constexpr auto OtherActor = 0x2b8; // ANavigationTestingActor*
		constexpr auto FilterClass = 0x2c0; // UNavigationQueryFilter*
		constexpr auto ShowStepIndex = 0x2c8; // int32_t
		constexpr auto OffsetFromCornersDistance = 0x2cc; // float
	}

	namespace n_UMM_ClassPhase_ClassSlot { // : UWidgetBase
		constexpr auto m_pImgIcon = 0x2e0; // UMirImage*
		constexpr auto m_pTxtName = 0x2e8; // UMirTextBlock*
		constexpr auto m_pImgSelected = 0x2f0; // UMirImage*
		constexpr auto m_pImgDisable = 0x2f8; // UMirImage*
		constexpr auto m_pImgKeep = 0x300; // UMirImage*
		constexpr auto m_pImgNow = 0x308; // UMirImage*
		constexpr auto m_pBtnSelect = 0x310; // UMirButton*
	}

	namespace n_UMM_Popup_Auction_ItemSlot { // : UWidgetBase
		constexpr auto m_pTxtSellCount = 0x2e0; // UMirTextBlock*
		constexpr auto m_pScrollList = 0x2e8; // UMirScrollBox*
	}

	namespace n_UARTrackableNotifyComponent { // : UActorComponent
		constexpr auto OnAddTrackedGeometry = 0xb0; // FScriptMulticastDelegate
		constexpr auto OnUpdateTrackedGeometry = 0xc0; // FScriptMulticastDelegate
		constexpr auto OnRemoveTrackedGeometry = 0xd0; // FScriptMulticastDelegate
		constexpr auto OnAddTrackedPlane = 0xe0; // FScriptMulticastDelegate
		constexpr auto OnUpdateTrackedPlane = 0xf0; // FScriptMulticastDelegate
		constexpr auto OnRemoveTrackedPlane = 0x100; // FScriptMulticastDelegate
		constexpr auto OnAddTrackedPoint = 0x110; // FScriptMulticastDelegate
		constexpr auto OnUpdateTrackedPoint = 0x120; // FScriptMulticastDelegate
		constexpr auto OnRemoveTrackedPoint = 0x130; // FScriptMulticastDelegate
		constexpr auto OnAddTrackedImage = 0x140; // FScriptMulticastDelegate
		constexpr auto OnUpdateTrackedImage = 0x150; // FScriptMulticastDelegate
		constexpr auto OnRemoveTrackedImage = 0x160; // FScriptMulticastDelegate
		constexpr auto OnAddTrackedFace = 0x170; // FScriptMulticastDelegate
		constexpr auto OnUpdateTrackedFace = 0x180; // FScriptMulticastDelegate
		constexpr auto OnRemoveTrackedFace = 0x190; // FScriptMulticastDelegate
		constexpr auto OnAddTrackedEnvProbe = 0x1a0; // FScriptMulticastDelegate
		constexpr auto OnUpdateTrackedEnvProbe = 0x1b0; // FScriptMulticastDelegate
		constexpr auto OnRemoveTrackedEnvProbe = 0x1c0; // FScriptMulticastDelegate
		constexpr auto OnAddTrackedObject = 0x1d0; // FScriptMulticastDelegate
		constexpr auto OnUpdateTrackedObject = 0x1e0; // FScriptMulticastDelegate
		constexpr auto OnRemoveTrackedObject = 0x1f0; // FScriptMulticastDelegate
	}

	namespace n_UBTTask_RunEQSQuery { // : UBTTask_BlackboardBase
		constexpr auto QueryTemplate = 0x98; // UEnvQuery*
		constexpr auto QueryParams = 0xa0; // TArray<FEnvNamedValue>
		constexpr auto QueryConfig = 0xb0; // TArray<FAIDynamicParam>
		constexpr auto RunMode = 0xc0; // EEnvQueryRunMode
		constexpr auto EQSQueryBlackboardKey = 0xc8; // FBlackboardKeySelector
		constexpr auto bUseBBKey = 0xf0; // bool
		constexpr auto EQSRequest = 0xf8; // FEQSParametrizedQueryExecutionRequest
	}

	namespace n_UProxyLODMeshSimplificationSettings { // : UDeveloperSettings
		constexpr auto ProxyLODMeshReductionModuleName = 0x38; // FName
	}

	namespace n_UMM_Popup_GetHistory { // : UWidgetBase
		constexpr auto m_iCol_GetItemList = 0x2e0; // int32_t
		constexpr auto m_iMinRow_GetItemList = 0x2e4; // int32_t
		constexpr auto m_Btn_ScreenBg = 0x2f0; // UMirButton*
		constexpr auto m_Txt_Title = 0x2f8; // UMirTextBlock*
		constexpr auto m_CB_Close = 0x300; // UMM_Common_Btn_Symbol*
		constexpr auto m_CB_Confirm = 0x308; // UMM_Common_Btn*
		constexpr auto m_RTxt_GetItemCount = 0x310; // UMirRichTextBlock*
		constexpr auto m_Txt_Notice = 0x318; // UMirTextBlock*
		constexpr auto m_Hrz_Empty = 0x320; // UPanelWidget*
		constexpr auto m_TileView_GetItemList = 0x328; // UMirTileView*
		constexpr auto m_Scr_GetCost = 0x330; // UMirScrollBox*
		constexpr auto m_arSlot = 0x338; // TArray<UMM_Slot_GetHistory*>
		constexpr auto m_arGetItemSlotObj = 0x348; // TArray<UInventorySlotObj*>
	}

	namespace n_UMM_Ranking_Season_Start { // : UWidgetBase
		constexpr auto Ani_Season_Start = 0x2e0; // UWidgetAnimation*
	}

	namespace n_UMaterialExpressionComponentMask { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto R = 0x54; // char : 1
		constexpr auto G = 0x54; // char : 1
		constexpr auto B = 0x54; // char : 1
		constexpr auto A = 0x54; // char : 1
	}

	namespace n_UMM_HudPartyUser { // : UWidgetBase
		constexpr auto COLOR_HP_BAR_YELLOW = 0x2f0; // FLinearColor
		constexpr auto COLOR_HP_BAR_RED = 0x300; // FLinearColor
		constexpr auto m_Can_Panel = 0x318; // UCanvasPanel*
		constexpr auto m_Img_VoiceChat_On = 0x320; // UMirImage*
		constexpr auto m_Img_VoiceChat_Off = 0x328; // UMirImage*
		constexpr auto m_Img_Leader = 0x330; // UImage*
		constexpr auto m_Img_Class = 0x338; // UImage*
		constexpr auto m_TxtNickName = 0x340; // UTextBlock*
		constexpr auto m_Img_Invite = 0x348; // UImage*
		constexpr auto m_Grid_HP = 0x350; // UPanelWidget*
		constexpr auto m_Prg_HP = 0x358; // UProgressBar*
		constexpr auto m_Prg_Shield = 0x360; // UProgressBar*
		constexpr auto m_Can_PrgEffect_1 = 0x368; // UPanelWidget*
		constexpr auto m_Grid_Revival = 0x370; // UPanelWidget*
		constexpr auto m_Txt_Revival = 0x378; // UMirTextBlock*
		constexpr auto m_Btn_Main = 0x380; // UMirButton*
		constexpr auto m_Btn_Invite = 0x388; // UMirButton*
	}

	namespace n_UMM_Popup_FriendlyCharacterSlot { // : UWidgetBase
		constexpr auto txt_relation = 0x2e0; // UMirTextBlock*
		constexpr auto img_online = 0x2e8; // UMirImage*
		constexpr auto Portrait = 0x2f0; // UMM_GuildMemberPortrait*
		constexpr auto txt_nickname = 0x2f8; // UMirTextBlock*
		constexpr auto txt_custom_title = 0x300; // UMirTextBlock*
		constexpr auto txt_level = 0x308; // UMirTextBlock*
		constexpr auto img_class = 0x310; // UMirImage*
		constexpr auto txt_class = 0x318; // UMirTextBlock*
		constexpr auto txt_combat_power = 0x320; // UMirTextBlock*
		constexpr auto btn_select = 0x328; // UMirButton*
		constexpr auto img_guild_symbol = 0x330; // UMirImage*
		constexpr auto img_guild_frame = 0x338; // UMirImage*
		constexpr auto txt_guild_name = 0x340; // UMirTextBlock*
	}

	namespace n_UMaterialExpressionConstant2Vector { // : UMaterialExpression
		constexpr auto R = 0x40; // float
		constexpr auto G = 0x44; // float
	}

	namespace n_USCS_Node { // : UObject
		constexpr auto ComponentClass = 0x28; // UObject*
		constexpr auto ComponentTemplate = 0x30; // UActorComponent*
		constexpr auto CookedComponentInstancingData = 0x38; // FBlueprintCookedComponentInstancingData
		constexpr auto AttachToName = 0x80; // FName
		constexpr auto ParentComponentOrVariableName = 0x88; // FName
		constexpr auto ParentComponentOwnerClassName = 0x90; // FName
		constexpr auto bIsParentComponentNative = 0x98; // bool
		constexpr auto ChildNodes = 0xa0; // TArray<USCS_Node*>
		constexpr auto MetaDataArray = 0xb0; // TArray<FBPVariableMetaDataEntry>
		constexpr auto VariableGuid = 0xc0; // FGuid
		constexpr auto InternalVariableName = 0xd0; // FName
	}

	namespace n_UMM_Popup_GuildDevShortCut { // : UWidgetBase
		constexpr auto mGridShortCut = 0x2e8; // UPanelWidget*
		constexpr auto mTxtShortCutName = 0x2f0; // UMirTextBlock*
		constexpr auto mTxtShortCutDesc = 0x2f8; // UMirTextBlock*
		constexpr auto mImgIcon = 0x300; // UMirImage*
		constexpr auto mBtnShortCut = 0x308; // UMM_Common_Btn*
		constexpr auto mBtnClose = 0x310; // UMM_Common_Btn_Symbol*
	}

	namespace n_UMaterialExpressionLandscapeLayerCoords { // : UMaterialExpression
		constexpr auto MappingType = 0x40; // ETerrainCoordMappingType
		constexpr auto CustomUVType = 0x41; // ELandscapeCustomizedCoordType
		constexpr auto MappingScale = 0x44; // float
		constexpr auto MappingRotation = 0x48; // float
		constexpr auto MappingPanU = 0x4c; // float
		constexpr auto MappingPanV = 0x50; // float
	}

	namespace n_UMM_Popup_Occupation_Rank_Reward { // : UWidgetBase
		constexpr auto m_Btn_Close = 0x2e0; // UMM_Common_Btn_Symbol*
		constexpr auto m_scroll_List = 0x2e8; // UMirScrollBox*
		constexpr auto m_mvp_RewardInfo = 0x2f0; // UMM_Occupation_Rank_Reward_List*
		constexpr auto m_win_RewardInfoList = 0x2f8; // TArray<UMM_Occupation_Rank_Reward_List*>
		constexpr auto m_lose_RewardInfoList = 0x308; // TArray<UMM_Occupation_Rank_Reward_List*>
	}

	namespace n_AMM_DebugWidgetManager { // : AActor
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto bHidden = 0x58; // char : 1
		constexpr auto bNetTemporary = 0x58; // char : 1
		constexpr auto bNetStartup = 0x58; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x58; // char : 1
		constexpr auto bAlwaysRelevant = 0x58; // char : 1
		constexpr auto bReplicateMovement = 0x58; // char : 1
		constexpr auto bTearOff = 0x58; // char : 1
		constexpr auto bExchangedRoles = 0x58; // char : 1
		constexpr auto bNetLoadOnClient = 0x59; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x59; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x59; // char : 1
		constexpr auto bRelevantForLevelBounds = 0x59; // char : 1
		constexpr auto bReplayRewindable = 0x59; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x59; // char : 1
		constexpr auto bAutoDestroyWhenFinished = 0x59; // char : 1
		constexpr auto bBlockInput = 0x59; // char : 1
		constexpr auto bCanBeDamaged = 0x5a; // char : 1
		constexpr auto bCollideWhenPlacing = 0x5a; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x5a; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x5a; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x5a; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x5a; // char : 1
		constexpr auto bIsEditorOnlyActor = 0x5a; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x5a; // char : 1
		constexpr auto bReplicates = 0x5b; // char : 1
		constexpr auto bCanBeInCluster = 0x5b; // char : 1
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x5b; // char : 1
		constexpr auto bActorEnableCollision = 0x5c; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x5c; // char : 1
		constexpr auto UpdateOverlapsMethodDuringLevelStreaming = 0x5d; // EActorUpdateOverlapsMethod
		constexpr auto DefaultUpdateOverlapsMethodDuringLevelStreaming = 0x5e; // EActorUpdateOverlapsMethod
		constexpr auto RemoteRole = 0x5f; // ENetRole
		constexpr auto ReplicatedMovement = 0x60; // FRepMovement
		constexpr auto InitialLifeSpan = 0x94; // float
		constexpr auto CustomTimeDilation = 0x98; // float
		constexpr auto AttachmentReplication = 0xa0; // FRepAttachment
		constexpr auto Owner = 0xe0; // AActor*
		constexpr auto NetDriverName = 0xe8; // FName
		constexpr auto Role = 0xf0; // ENetRole
		constexpr auto NetDormancy = 0xf1; // ENetDormancy
		constexpr auto SpawnCollisionHandlingMethod = 0xf2; // ESpawnActorCollisionHandlingMethod
		constexpr auto AutoReceiveInput = 0xf3; // EAutoReceiveInput
		constexpr auto InputPriority = 0xf4; // int32_t
		constexpr auto InputComponent = 0xf8; // UInputComponent*
		constexpr auto NetCullDistanceSquared = 0x100; // float
		constexpr auto NetTag = 0x104; // int32_t
		constexpr auto NetUpdateFrequency = 0x108; // float
		constexpr auto MinNetUpdateFrequency = 0x10c; // float
		constexpr auto NetPriority = 0x110; // float
		constexpr auto Instigator = 0x118; // APawn*
		constexpr auto Children = 0x120; // TArray<AActor*>
		constexpr auto RootComponent = 0x130; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x138; // TArray<AMatineeActor*>
		constexpr auto Layers = 0x150; // TArray<FName>
		constexpr auto ParentComponent = 0x160; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto Tags = 0x168; // TArray<FName>
		constexpr auto OnTakeAnyDamage = 0x178; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x179; // FScriptMulticastDelegate
		constexpr auto OnTakeRadialDamage = 0x17a; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x17b; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x17c; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x17d; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x17e; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x17f; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x180; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x181; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x182; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x183; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x184; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x185; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x186; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x187; // FScriptMulticastDelegate
		constexpr auto InstanceComponents = 0x1e8; // TArray<UActorComponent*>
		constexpr auto BlueprintCreatedComponents = 0x1f8; // TArray<UActorComponent*>
	}

	namespace n_UMM_Deul_Result { // : UWidgetBase
		constexpr auto m_AniWin = 0x2e0; // UWidgetAnimation*
		constexpr auto m_AniDefeat = 0x2e8; // UWidgetAnimation*
		constexpr auto Panel_Win = 0x2f0; // UPanelWidget*
		constexpr auto Panel_Lose = 0x2f8; // UPanelWidget*
		constexpr auto Panel_Win_BG = 0x300; // UPanelWidget*
		constexpr auto Panel_Lose_BG = 0x308; // UPanelWidget*
		constexpr auto Btn_Close_BG = 0x310; // UMirButton*
		constexpr auto TextBlock_Win = 0x318; // UTextBlock*
		constexpr auto TextBlock_Lose = 0x320; // UTextBlock*
	}

	namespace n_UAimOffsetBlendSpace1D { // : UBlendSpace1D
		constexpr auto bScaleAnimation = 0x148; // bool
	}

	namespace n_UMM_BossAppearance { // : UWidgetBase
		constexpr auto m_pImageBossIcon = 0x2f0; // UMirImage*
		constexpr auto m_pTxtName = 0x2f8; // UMirTextBlock*
		constexpr auto pTxtTitle = 0x300; // UMirTextBlock*
		constexpr auto m_pTxtMessage = 0x308; // UMirTextBlock*
		constexpr auto m_pAppearAnimation = 0x310; // UWidgetAnimation*
	}

	namespace n_AMM_LoginState { // : AMM_GameStateBase
		constexpr auto m_PatchActor = 0x260; // APatchActor*
	}

	namespace n_UMM_PopupGuildGiveAlliance { // : UWidgetBase
		constexpr auto btn_close = 0x2f0; // UMM_Common_Btn_Symbol*
		constexpr auto sb_alliance = 0x2f8; // UMirScrollBox*
		constexpr auto cb_select = 0x300; // UMirCheckBox*
		constexpr auto btn_give = 0x308; // UMM_Common_Btn*
		constexpr auto empty_notice = 0x310; // UMM_Common_Board_Notice*
		constexpr auto txt_bottom_desc = 0x318; // UMirRichTextBlock*
		constexpr auto cb_sort = 0x320; // UMirCheckBox*
		constexpr auto cp_sort = 0x328; // UMirCanvasPanel*
		constexpr auto btn_sort_combat_power = 0x330; // UMirButton*
		constexpr auto btn_sort_level = 0x338; // UMirButton*
		constexpr auto btn_sort_rank = 0x340; // UMirButton*
		constexpr auto img_sort_combat_power = 0x348; // UMirImage*
		constexpr auto img_sort_level = 0x350; // UMirImage*
		constexpr auto img_sort_rank = 0x358; // UMirImage*
		constexpr auto txt_sort = 0x360; // UMirTextBlock*
	}

	namespace n_UMaterialExpressionSobol { // : UMaterialExpression
		constexpr auto Cell = 0x40; // FExpressionInput
		constexpr auto Index = 0x54; // FExpressionInput
		constexpr auto Seed = 0x68; // FExpressionInput
		constexpr auto ConstIndex = 0x7c; // uint32_t
		constexpr auto ConstSeed = 0x80; // FVector2D
	}

	namespace n_UMM_AnimInstance { // : UAnimInstance
		constexpr auto FSMType = 0x268; // EFSM_TYPE
		constexpr auto SubState = 0x26c; // int32_t
	}

	namespace n_UMM_WemixWebBrowser { // : UWidgetBase
		constexpr auto m_WemixAuth = 0x2e0; // FString
		constexpr auto DracoContractAddress = 0x370; // FString
		constexpr auto CharacterContractAddress = 0x380; // FString
		constexpr auto HydraContractAddress = 0x390; // FString
		constexpr auto BaseItemURI = 0x3a0; // FString
		constexpr auto m_Panel_Main = 0x3b0; // UPanelWidget*
		constexpr auto m_Web_Main = 0x3b8; // UMirWebBrowser*
		constexpr auto m_Btn_Close = 0x3c0; // UMM_Common_Btn_Symbol*
	}

	namespace n_UMM_B_NPCNameTag { // : UWidgetBase
		constexpr auto m_Grd_Root = 0x2e0; // UPanelWidget*
		constexpr auto m_Grd_Title = 0x2e8; // UPanelWidget*
		constexpr auto m_Txt_Nickname = 0x2f0; // UTextBlock*
		constexpr auto m_Txt_Title = 0x2f8; // UTextBlock*
		constexpr auto m_Grd_Effect = 0x300; // UPanelWidget*
		constexpr auto m_Grd_QuestMark = 0x308; // UPanelWidget*
		constexpr auto m_Btn_QuestMark = 0x310; // UMM_Common_Dialog_Btn*
		constexpr auto m_Grd_HP = 0x318; // UPanelWidget*
		constexpr auto m_Prg_HP = 0x320; // UProgressBar*
		constexpr auto m_SpeechBalloonLoc = 0x328; // UImage*
		constexpr auto m_TrackerIcon = 0x330; // UImage*
		constexpr auto m_pAnim_Alarm = 0x338; // UWidgetAnimation*
		constexpr auto m_pAni_Tracker = 0x340; // UWidgetAnimation*
		constexpr auto m_pNpc = 0x358; // AMM_NPCBase*
	}

	namespace n_UARTrackedImage { // : UARTrackedGeometry
		constexpr auto DetectedImage = 0xe8; // UARCandidateImage*
		constexpr auto EstimatedSize = 0xf0; // FVector2D
	}

	namespace n_UMM_Auction_Tab_Base { // : UWidgetBase
		constexpr auto m_pParentWidget = 0x260; // UWidgetBase*
		constexpr auto m_arChildWidget = 0x268; // TArray<TWeakObjectPtr<UWidgetBase>>
		constexpr auto m_arMirTextBlock = 0x280; // TArray<TWeakObjectPtr<UMirTextBlock>>
		constexpr auto m_arMirRichTextBlock = 0x290; // TArray<TWeakObjectPtr<UMirRichTextBlock>>
		constexpr auto m_arMirEditableText = 0x2a0; // TArray<TWeakObjectPtr<UMirEditableText>>
		constexpr auto m_arMirImage = 0x2b0; // TArray<TWeakObjectPtr<UMirImage>>
	}

	namespace n_AMonsterSpawner { // : AActivateTrigger
		constexpr auto m_MonsterID = 0x278; // int32_t
		constexpr auto m_MonsterOrderID = 0x27c; // int32_t
		constexpr auto m_MonsterGroup = 0x280; // AMonsterGroupTrigger*
		constexpr auto m_prevMonsterGroup = 0x288; // AMonsterGroupTrigger*
		constexpr auto m_pMonster = 0x290; // AMM_Monster*
	}

	namespace n_UMaterialExpressionAtmosphericLightVector { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UMM_MagicStoneEquip { // : UWidgetBase
		constexpr auto magic_stone_equip_slot = 0x2f0; // TArray<UMM_MagicStone_EquipedSlot*>
		constexpr auto txt_combat_point = 0x300; // UMirTextBlock*
		constexpr auto btn_popup_attribute = 0x308; // UMM_Common_Btn_Symbol*
		constexpr auto animation_effect = 0x310; // UWidgetAnimation*
		constexpr auto img_rainbow_cover = 0x318; // UMirImage*
	}

	namespace n_UGeometryCacheTrack_TransformGroupAnimation { // : UGeometryCacheTrack
		constexpr auto Duration = 0x28; // float
	}

	namespace n_UUIParticleEmitter { // : UWidget
		constexpr auto Asset = 0x108; // UUIParticleEmitterAsset*
		constexpr auto EventOnEnd = 0x110; // FScriptMulticastDelegate
		constexpr auto bPlayParticle = 0x120; // char : 1
		constexpr auto IsPlaying = 0x121; // bool
	}

	namespace n_APetRenderRoom { // : AActor
		constexpr auto m_pSceneComponent = 0x220; // USceneComponent*
		constexpr auto m_pPetPivot = 0x228; // USceneComponent*
		constexpr auto m_pMesh = 0x230; // USkeletalMeshComponent*
		constexpr auto m_pUIBackGroundActor = 0x238; // AUIBackGroundActor*
		constexpr auto m_pPetCameraData = 0x240; // UPetCameraData*
		constexpr auto m_pAnimInstance = 0x248; // UAnimInstance*
		constexpr auto m_pMontage = 0x250; // UAnimMontage*
		constexpr auto m_pMeshObjcet = 0x258; // UObject*
		constexpr auto m_pAnimObjcet = 0x260; // UObject*
	}

	namespace n_UMM_New_Force_Page { // : UWidgetBase
		constexpr auto m_C_Img_Icon = 0x2f8; // UMirImage*
		constexpr auto m_C_Txt_Info = 0x300; // UMirTextBlock*
		constexpr auto m_Panel_Learn = 0x308; // UPanelWidget*
		constexpr auto m_arOpenMat = 0x310; // UMM_Slot_Material_Item* [0x3]
		constexpr auto m_C_CB_Learn = 0x328; // UMM_Common_Btn*
		constexpr auto m_Panel_Effect = 0x330; // UPanelWidget*
		constexpr auto m_Panel_Failed = 0x338; // UPanelWidget*
		constexpr auto m_C_Slot_CureMat = 0x340; // UMM_Slot_Material_Item*
		constexpr auto m_C_CB_Cure = 0x348; // UMM_Common_Btn*
		constexpr auto m_C_Txt_FailedInfo = 0x350; // UMirTextBlock*
		constexpr auto m_C_Txt_FailedTime = 0x358; // UMirTextBlock*
	}

	namespace n_UParticleModuleCameraOffset { // : UParticleModuleCameraBase
		constexpr auto CameraOffset = 0x30; // FRawDistributionFloat
		constexpr auto bSpawnTimeOnly = 0x60; // char : 1
		constexpr auto UpdateMethod = 0x64; // EParticleCameraOffsetUpdateMethod
	}

	namespace n_AMMUISkyLight { // : AActor
		constexpr auto SceneComponent = 0x218; // USceneComponent*
		constexpr auto UICharacterMaterialParameterCollection = 0x220; // UMaterialParameterCollection*
		constexpr auto UpperLightColor = 0x228; // FColor
		constexpr auto UpperLightIntensity = 0x22c; // float
		constexpr auto LowerLightColor = 0x230; // FColor
		constexpr auto LowerLightIntensity = 0x234; // float
		constexpr auto ReflectionIntensity = 0x238; // float
		constexpr auto RimIntensity = 0x23c; // float
	}

	namespace n_UParticleModuleBeamModifier { // : UParticleModuleBeamBase
		constexpr auto ModifierType = 0x30; // BeamModifierType
		constexpr auto PositionOptions = 0x34; // FBeamModifierOptions
		constexpr auto Position = 0x38; // FRawDistributionVector
		constexpr auto TangentOptions = 0x80; // FBeamModifierOptions
		constexpr auto Tangent = 0x88; // FRawDistributionVector
		constexpr auto bAbsoluteTangent = 0xd0; // char : 1
		constexpr auto StrengthOptions = 0xd4; // FBeamModifierOptions
		constexpr auto Strength = 0xd8; // FRawDistributionFloat
	}

	namespace n_UMM_Guild_DevList { // : UWidgetBase
		constexpr auto m_arCanSlot = 0x2f0; // TArray<UCanvasPanel*>
		constexpr auto m_arSlot1 = 0x300; // TArray<UMM_Guild_DevSlot*>
		constexpr auto m_arSlot2 = 0x310; // TArray<UMM_Guild_DevSlot*>
		constexpr auto m_arSlot3 = 0x320; // TArray<UMM_Guild_DevSlot*>
		constexpr auto m_arSlot4 = 0x330; // TArray<UMM_Guild_DevSlot*>
		constexpr auto m_arUsedDevSlot = 0x348; // TArray<UMM_Guild_DevSlot*>
	}

	namespace n_ADoOnceTrigger { // : AActivateTrigger
		constexpr auto m_EditorTriggerName = 0x220; // FString
		constexpr auto m_pActiveTriggerArray = 0x230; // TArray<AActivateTrigger*>
		constexpr auto m_TriggerIndex = 0x240; // int32_t
		constexpr auto m_TriggerType = 0x244; // ETriggerType
		constexpr auto m_bActiveTriggerCondition = 0x268; // bool
		constexpr auto m_bActivated = 0x269; // bool
		constexpr auto m_pTriggerManager = 0x270; // AMM_TriggerManager*
	}

	namespace n_UMM_PopUp_Item_Tooltip { // : UWidgetBase
		constexpr auto Grid_Item_Info = 0x2e0; // UPanelWidget*
		constexpr auto VBox = 0x2e8; // UVerticalBox*
		constexpr auto m_Spc_ContentsSpace = 0x2f0; // USpacer*
		constexpr auto SlotName = 0x2f8; // UMM_Toltip_Slot*
		constexpr auto SlotTrade = 0x300; // UMM_Toltip_Slot*
		constexpr auto SlotTime = 0x308; // UMM_Toltip_Slot*
		constexpr auto SlotAttribute = 0x310; // TArray<UMM_Toltip_Slot*>
		constexpr auto SlotDesc = 0x320; // UMM_Toltip_Slot*
		constexpr auto m_Passive_Desc = 0x328; // UMM_PassiveSkillDesc*
		constexpr auto m_SlotCount = 0x330; // int32_t
		constexpr auto STR_TRADE_NO = 0x334; // int32_t
		constexpr auto STR_TRADE = 0x338; // int32_t
		constexpr auto STR_TIME_EXPIRE = 0x33c; // int32_t
		constexpr auto STR_NAME_AND_SMELTLV = 0x340; // int32_t
		constexpr auto STR_SMELTLV = 0x344; // int32_t
	}

	namespace n_UAIPerceptionSystem { // : UAISubsystem
		constexpr auto Senses = 0x88; // TArray<UAISense*>
		constexpr auto PerceptionAgingRate = 0x98; // float
	}

	namespace n_UMM_Auction_Slot_Normal { // : UMM_Auction_Slot_Base
		constexpr auto m_pSlotItem = 0x340; // UMM_Slot_Inventory*
		constexpr auto m_pTxtName = 0x348; // UMirTextBlock*
		constexpr auto m_pTxtPrice = 0x350; // UMirTextBlock*
		constexpr auto m_pTxtRemainTime = 0x358; // UMirTextBlock*
		constexpr auto m_pBtnClick = 0x360; // UMirButton*
		constexpr auto m_arrTxtOption = 0x368; // TArray<UMirTextBlock*>
		constexpr auto m_pTxtOverOption = 0x378; // UMirTextBlock*
	}

	namespace n_UParticleModuleLocationEmitter { // : UParticleModuleLocationBase
		constexpr auto EmitterName = 0x30; // FName
		constexpr auto SelectionMethod = 0x38; // ELocationEmitterSelectionMethod
		constexpr auto InheritSourceVelocity = 0x3c; // char : 1
		constexpr auto InheritSourceVelocityScale = 0x40; // float
		constexpr auto bInheritSourceRotation = 0x44; // char : 1
		constexpr auto InheritSourceRotationScale = 0x48; // float
		constexpr auto bApplyOrbitOffset = 0x4c; // char : 1
	}

	namespace n_UMM_B_Smite { // : UWidgetBase
		constexpr auto m_AniLoop = 0x2e0; // UWidgetAnimation*
	}

	namespace n_UBlackboardKeyType_String { // : UBlackboardKeyType
		constexpr auto StringValue = 0x30; // FString
	}

	namespace n_UMM_Map_Occupation { // : UWidgetBase
		constexpr auto m_Txt_GuildName = 0x2e0; // UMirTextBlock*
		constexpr auto m_Img_Frame = 0x2e8; // UImage*
		constexpr auto m_Img_Symbol = 0x2f0; // UImage*
	}

	namespace n_UProceduralFoliageTile { // : UObject
		constexpr auto FoliageSpawner = 0x28; // UProceduralFoliageSpawner*
		constexpr auto InstancesArray = 0xd0; // TArray<FProceduralFoliageInstance>
	}

	namespace n_UNullAudioCaptureProtocol { // : UMovieSceneAudioCaptureProtocolBase
		constexpr auto State = 0x50; // EMovieSceneCaptureProtocolState
	}

	namespace n_UMM_Popup_DominionRewardList { // : UWidgetBase
		constexpr auto m_pBtnClose = 0x2e8; // UMM_Common_Btn_Symbol*
		constexpr auto m_pTxtRewardCount = 0x2f0; // UMirTextBlock*
		constexpr auto m_pTxtTitle = 0x2f8; // UMirTextBlock*
		constexpr auto m_pScrollList = 0x300; // UMirScrollBox*
	}

	namespace n_UMM_UserEvent_SiegeSlot { // : UWidgetBase
		constexpr auto COLOR_UserEvent_Siege_Home = 0x2e0; // FLinearColor
		constexpr auto COLOR_UserEvent_Siege_Away = 0x2f0; // FLinearColor
		constexpr auto m_Txt_Name = 0x300; // UMirTextBlock*
		constexpr auto m_Txt_TotalCount = 0x308; // UMirTextBlock*
		constexpr auto m_Img_Win = 0x310; // UMirImage*
		constexpr auto m_Img_Draw = 0x318; // UMirImage*
		constexpr auto m_SlotMaterial = 0x320; // UMM_Slot_Material*
		constexpr auto m_C_Btn = 0x328; // UMM_Common_Btn*
	}

	namespace n_UMM_ItemSynthesis_List { // : UWidgetBase
		constexpr auto arAURAEFFECT_LEFT = 0x2f0; // TArray<FLinearColor>
		constexpr auto arAURAEFFECT_RIGHT = 0x300; // TArray<FLinearColor>
		constexpr auto m_arMaterialSlot = 0x310; // UMM_ItemSynthesis_ListSlot* [0x4]
		constexpr auto m_RTxt_Grade = 0x330; // UMirRichTextBlock*
		constexpr auto m_Txt_SuccessRate = 0x338; // UMirTextBlock*
		constexpr auto m_Img_Active = 0x340; // UMirImage*
		constexpr auto m_Img_DeActive = 0x348; // UMirImage*
		constexpr auto m_Grid_ItemGrade_Effect = 0x350; // UGridPanel*
		constexpr auto m_Ani_ItemGrade_Rare_Effect = 0x358; // UWidgetAnimation*
		constexpr auto m_Ani_ItemGrade_Epic_Effect = 0x360; // UWidgetAnimation*
		constexpr auto m_Ani_ItemGrade_Legned_Effect = 0x368; // UWidgetAnimation*
	}

	namespace n_UImageSequenceProtocol_EXR { // : UImageSequenceProtocol
		constexpr auto bCompressed = 0xd8; // bool
		constexpr auto CaptureGamut = 0xd9; // EHDRCaptureGamut
	}

	namespace n_UMM_Common_Popup_StopWatchingToday { // : UWidgetBase
		constexpr auto m_Txt_Title = 0x328; // UMirTextBlock*
		constexpr auto m_RTxt_Message = 0x330; // UMirRichTextBlock*
		constexpr auto m_Hrz_Cost = 0x338; // UHorizontalBox*
		constexpr auto m_Img_CostIcon = 0x340; // UMirImage*
		constexpr auto m_Txt_CostCount = 0x348; // UMirTextBlock*
		constexpr auto m_CB_First = 0x350; // UMM_Common_Btn*
		constexpr auto m_CB_Second = 0x358; // UMM_Common_Btn*
		constexpr auto m_CB_Close = 0x360; // UMM_Common_Btn_Symbol*
		constexpr auto m_CheckBox = 0x368; // UMirCheckBox*
		constexpr auto m_Txt_StopWatchingTodayDesc = 0x370; // UMirTextBlock*
	}

	namespace n_UMM_Slot_Simple_Cnt { // : UMM_Slot_Base
		constexpr auto m_ImgDisabled = 0x3e8; // UMirImage*
		constexpr auto m_ImgPlus = 0x3f0; // UMirImage*
		constexpr auto m_ImgTierBg = 0x3f8; // UMirImage*
		constexpr auto txt_count = 0x400; // UMirTextBlock*
		constexpr auto grid_item = 0x408; // UPanelWidget*
		constexpr auto m_Img_Attribution = 0x410; // UMirImage*
	}

	namespace n_UOnlineSubsystemExtendedGoogleWebBrowser { // : UWidget
		constexpr auto OnUrlChanged = 0x108; // FScriptMulticastDelegate
		constexpr auto InitialURL = 0x118; // FString
		constexpr auto bSupportsTransparency = 0x128; // bool
	}

	namespace n_UMM_BuffComponent { // : UActorComponent
		constexpr auto PrimaryComponentTick = 0x30; // FActorComponentTickFunction
		constexpr auto ComponentTags = 0x60; // TArray<FName>
		constexpr auto AssetUserData = 0x70; // TArray<UAssetUserData*>
		constexpr auto bReplicates = 0x84; // char : 1
		constexpr auto bNetAddressable = 0x84; // char : 1
		constexpr auto bAutoActivate = 0x85; // char : 1
		constexpr auto bIsActive = 0x86; // char : 1
		constexpr auto bEditableWhenInherited = 0x86; // char : 1
		constexpr auto bCanEverAffectNavigation = 0x86; // char : 1
		constexpr auto bIsEditorOnly = 0x86; // char : 1
		constexpr auto CreationMethod = 0x88; // EComponentCreationMethod
		constexpr auto OnComponentActivated = 0x89; // FScriptMulticastDelegate
		constexpr auto OnComponentDeactivated = 0x8a; // FScriptMulticastDelegate
		constexpr auto UCSModifiedProperties = 0x90; // TArray<FSimpleMemberReference>
	}

	namespace n_UMM_Costume_Slot_InvenItem { // : UWidgetBase
		constexpr auto Img_Icon = 0x2e0; // UMirImage*
		constexpr auto Img_Tag = 0x2e8; // UMirImage*
		constexpr auto Img_Equipped = 0x2f0; // UMirImage*
		constexpr auto Img_Disabled = 0x2f8; // UMirImage*
		constexpr auto txt_time = 0x300; // UMirTextBlock*
		constexpr auto Img_TimeBG = 0x308; // UMirImage*
	}

	namespace n_ULightmassPortalComponent { // : USceneComponent
		constexpr auto PreviewBox = 0x220; // UBoxComponent*
	}

	namespace n_UBrushBinding { // : UPropertyBinding
		constexpr auto SourceObject = 0x28; // TWeakObjectPtr<UObject>
		constexpr auto SourcePath = 0x30; // FDynamicPropertyPath
		constexpr auto DestinationProperty = 0x58; // FName
	}

	namespace n_ULogoMediaWidget { // : UWidgetBase
		constexpr auto m_MediaPlayer = 0x2e0; // UMediaPlayer*
		constexpr auto m_MediaTexture = 0x2e8; // UMediaTexture*
		constexpr auto m_Movie_StartLoop = 0x2f0; // UMediaSource*
		constexpr auto m_Movie_AccountConnectIn = 0x2f8; // UMediaSource*
		constexpr auto m_Movie_AccountConnectLoop = 0x300; // UMediaSource*
		constexpr auto m_Movie_AccessLoop = 0x308; // UMediaSource*
		constexpr auto m_Movie_EndIn = 0x310; // UMediaSource*
		constexpr auto m_LogoBgm = 0x318; // USoundBase*
		constexpr auto m_MediaSoundActor = 0x328; // AMediaSoundActor*
	}

	namespace n_ADocumentationActor { // : AActor
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto bHidden = 0x58; // char : 1
		constexpr auto bNetTemporary = 0x58; // char : 1
		constexpr auto bNetStartup = 0x58; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x58; // char : 1
		constexpr auto bAlwaysRelevant = 0x58; // char : 1
		constexpr auto bReplicateMovement = 0x58; // char : 1
		constexpr auto bTearOff = 0x58; // char : 1
		constexpr auto bExchangedRoles = 0x58; // char : 1
		constexpr auto bNetLoadOnClient = 0x59; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x59; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x59; // char : 1
		constexpr auto bRelevantForLevelBounds = 0x59; // char : 1
		constexpr auto bReplayRewindable = 0x59; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x59; // char : 1
		constexpr auto bAutoDestroyWhenFinished = 0x59; // char : 1
		constexpr auto bBlockInput = 0x59; // char : 1
		constexpr auto bCanBeDamaged = 0x5a; // char : 1
		constexpr auto bCollideWhenPlacing = 0x5a; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x5a; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x5a; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x5a; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x5a; // char : 1
		constexpr auto bIsEditorOnlyActor = 0x5a; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x5a; // char : 1
		constexpr auto bReplicates = 0x5b; // char : 1
		constexpr auto bCanBeInCluster = 0x5b; // char : 1
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x5b; // char : 1
		constexpr auto bActorEnableCollision = 0x5c; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x5c; // char : 1
		constexpr auto UpdateOverlapsMethodDuringLevelStreaming = 0x5d; // EActorUpdateOverlapsMethod
		constexpr auto DefaultUpdateOverlapsMethodDuringLevelStreaming = 0x5e; // EActorUpdateOverlapsMethod
		constexpr auto RemoteRole = 0x5f; // ENetRole
		constexpr auto ReplicatedMovement = 0x60; // FRepMovement
		constexpr auto InitialLifeSpan = 0x94; // float
		constexpr auto CustomTimeDilation = 0x98; // float
		constexpr auto AttachmentReplication = 0xa0; // FRepAttachment
		constexpr auto Owner = 0xe0; // AActor*
		constexpr auto NetDriverName = 0xe8; // FName
		constexpr auto Role = 0xf0; // ENetRole
		constexpr auto NetDormancy = 0xf1; // ENetDormancy
		constexpr auto SpawnCollisionHandlingMethod = 0xf2; // ESpawnActorCollisionHandlingMethod
		constexpr auto AutoReceiveInput = 0xf3; // EAutoReceiveInput
		constexpr auto InputPriority = 0xf4; // int32_t
		constexpr auto InputComponent = 0xf8; // UInputComponent*
		constexpr auto NetCullDistanceSquared = 0x100; // float
		constexpr auto NetTag = 0x104; // int32_t
		constexpr auto NetUpdateFrequency = 0x108; // float
		constexpr auto MinNetUpdateFrequency = 0x10c; // float
		constexpr auto NetPriority = 0x110; // float
		constexpr auto Instigator = 0x118; // APawn*
		constexpr auto Children = 0x120; // TArray<AActor*>
		constexpr auto RootComponent = 0x130; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x138; // TArray<AMatineeActor*>
		constexpr auto Layers = 0x150; // TArray<FName>
		constexpr auto ParentComponent = 0x160; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto Tags = 0x168; // TArray<FName>
		constexpr auto OnTakeAnyDamage = 0x178; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x179; // FScriptMulticastDelegate
		constexpr auto OnTakeRadialDamage = 0x17a; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x17b; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x17c; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x17d; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x17e; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x17f; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x180; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x181; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x182; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x183; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x184; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x185; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x186; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x187; // FScriptMulticastDelegate
		constexpr auto InstanceComponents = 0x1e8; // TArray<UActorComponent*>
		constexpr auto BlueprintCreatedComponents = 0x1f8; // TArray<UActorComponent*>
	}

	namespace n_UWidgetBase { // : UUserWidget
		constexpr auto m_pParentWidget = 0x260; // UWidgetBase*
		constexpr auto m_arChildWidget = 0x268; // TArray<TWeakObjectPtr<UWidgetBase>>
		constexpr auto m_arMirTextBlock = 0x280; // TArray<TWeakObjectPtr<UMirTextBlock>>
		constexpr auto m_arMirRichTextBlock = 0x290; // TArray<TWeakObjectPtr<UMirRichTextBlock>>
		constexpr auto m_arMirEditableText = 0x2a0; // TArray<TWeakObjectPtr<UMirEditableText>>
		constexpr auto m_arMirImage = 0x2b0; // TArray<TWeakObjectPtr<UMirImage>>
	}

	namespace n_AMM_GameModeBase { // : AGameModeBase
		constexpr auto m_pBackgroundParamCollection = 0x330; // UMaterialParameterCollection*
		constexpr auto m_pFriendMonster = 0x338; // AMM_Monster*
		constexpr auto m_pSelectTarget = 0x340; // AMM_CharacterPawnBase*
		constexpr auto m_pLockOnTarget = 0x348; // AMM_CharacterPawnBase*
		constexpr auto EndLevelTravel = 0x350; // bool
		constexpr auto m_pUIBackGroundActor = 0x400; // AUIBackGroundActor*
		constexpr auto SituationDirectiveActor = 0x408; // AMM_SituationDirectiveEffect*
		constexpr auto MapQuestArrivalDisplayActor = 0x410; // TMap<int32_t, TWeakObjectPtr<AQuestArrivalDisplayActor>>
		constexpr auto m_pHQPlayer = 0x460; // AMM_HQPlayerReferenceActor*
		constexpr auto m_pPortraitCaptureActor = 0x468; // AMM_PortraitCaptureActor*
		constexpr auto m_pPlayerPortraitRenderTarget = 0x470; // UCanvasRenderTarget2D*
		constexpr auto m_pContentsLightManager = 0x478; // AContentsLightManager*
		constexpr auto MyEditorCulture = 0x490; // FString
	}

	namespace n_UMM_Common_Board_Notice { // : UWidgetBase
		constexpr auto m_StringTableType = 0x2e0; // EStringTableType
		constexpr auto m_StringTableID = 0x2e4; // int32_t
		constexpr auto m_Font = 0x2e8; // FSlateFontInfo
		constexpr auto m_Txt_Main = 0x338; // UMirTextBlock*
	}

	namespace n_AMM_DoorObject { // : AActor
		constexpr auto m_PosID = 0x218; // int32_t
		constexpr auto m_InitState = 0x21c; // int32_t
		constexpr auto m_State0Time = 0x220; // int32_t
		constexpr auto m_State1Time = 0x224; // int32_t
		constexpr auto m_BoxExtent = 0x228; // FVector
		constexpr auto m_BoxColor = 0x234; // FColor
		constexpr auto m_pEnableNavArea = 0x238; // UNavArea*
		constexpr auto m_pDisableNavArea = 0x240; // UNavArea*
		constexpr auto m_bLoadPolys = 0x268; // bool
	}

	namespace n_UMM_EquipSlot_Registered { // : UMM_Slot_Base
		constexpr auto SlotSmeltingLevelType = 0x3f8; // ESlotSmeltingLevelType
		constexpr auto m_bUseGradeBgEquipEffect = 0x3f9; // bool
		constexpr auto m_Img_GradeBgEffect = 0x400; // UMirImage*
		constexpr auto m_Img_GradeBgEquipEffect = 0x408; // UMirImage*
		constexpr auto m_TxtSmeltingLV_Left = 0x410; // UMirTextBlock*
		constexpr auto m_TxtSmeltingLV_Right = 0x418; // UMirTextBlock*
		constexpr auto m_Img_Lock = 0x420; // UMirImage*
		constexpr auto m_Img_Tier = 0x428; // UMirImage*
		constexpr auto m_Img_Durability_BG = 0x430; // UMirImage*
		constexpr auto m_Img_Durability_Icon = 0x438; // UMirImage*
		constexpr auto m_Img_UserLock = 0x440; // UMirImage*
	}

	namespace n_UMM_Popup_ContentsState { // : UWidgetBase
		constexpr auto m_Txt_Title = 0x2e8; // UMirTextBlock*
		constexpr auto m_CB_Close = 0x2f0; // UMM_Common_Btn_Symbol*
		constexpr auto m_Scr_Slot = 0x2f8; // UMirScrollBox*
		constexpr auto m_arContentsState = 0x300; // TArray<UMM_ContentsState*>
		constexpr auto m_Btn_Main = 0x310; // UMirButton*
	}

	namespace n_UMM_PetQuickSlotBtn { // : UWidgetBase
		constexpr auto m_Img_On = 0x2e8; // UMirImage*
		constexpr auto m_Txt_Index = 0x2f0; // UMirTextBlock*
		constexpr auto m_Btn_Main = 0x2f8; // UMirButton*
	}

	namespace n_UMM_Popup_Immediate_Confirm { // : UWidgetBase
		constexpr auto m_RTxtNotice = 0x300; // URichTextBox*
		constexpr auto m_CBCancel = 0x308; // UMM_Common_Btn*
		constexpr auto m_CBImmediateMove = 0x310; // UMM_Common_Btn_Cost*
	}

	namespace n_ANavMeshBoundsVolume { // : AVolume
		constexpr auto SupportedAgents = 0x250; // FNavAgentSelector
	}

	namespace n_UMM_Popup_GuestContinueSetting { // : UWidgetBase
		constexpr auto m_Btn_Confirm = 0x2e0; // UMM_Common_Btn*
		constexpr auto m_Btn_Close = 0x2e8; // UMM_Common_Btn_Symbol*
		constexpr auto m_Btn_LinkIDCopy = 0x2f0; // UMM_Common_Btn*
		constexpr auto m_Txt_LinkID = 0x2f8; // UMirTextBlock*
		constexpr auto m_Edit_Password = 0x300; // UMirEditableText*
		constexpr auto m_Txt_Password_Empty = 0x308; // UMirTextBlock*
		constexpr auto m_Txt_Password_Complete = 0x310; // UMirTextBlock*
	}

	namespace n_UMM_GuildInventoryGoods { // : UWidgetBase
		constexpr auto img_goods_icon = 0x2e0; // UMirImage*
		constexpr auto txt_goods_name = 0x2e8; // UMirTextBlock*
		constexpr auto txt_goods_count = 0x2f0; // UMirTextBlock*
		constexpr auto Btn_Tooltip = 0x2f8; // UMM_Common_ToolTipBtn*
	}

	namespace n_UMM_Dominion_Title_NormalSlot { // : UMM_Dominion_Title_SlotBase
		constexpr auto m_pTxtClass = 0x2e0; // UMirTextBlock*
		constexpr auto m_pTxtName = 0x2e8; // UMirTextBlock*
		constexpr auto m_pBtnInfo = 0x2f0; // UMM_Common_Btn_Symbol*
		constexpr auto m_pPortrait = 0x2f8; // UMM_GuildMemberPortrait*
		constexpr auto m_pBtnClick = 0x300; // UMirButton*
	}

	namespace n_UMaterialExpressionTextureSampleParameter2D { // : UMaterialExpressionTextureSampleParameter
		constexpr auto ParameterName = 0xd0; // FName
		constexpr auto ExpressionGUID = 0xd8; // FGuid
		constexpr auto Group = 0xe8; // FName
	}

	namespace n_UMaterialExpressionSign { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UMM_New_Occupation_BattleResult { // : UWidgetBase
		constexpr auto m_AniWin = 0x2f0; // UWidgetAnimation*
		constexpr auto m_AniLose = 0x2f8; // UWidgetAnimation*
		constexpr auto m_Color_Success = 0x300; // FLinearColor
		constexpr auto m_Color_Fail = 0x310; // FLinearColor
		constexpr auto m_txt_AutoMoveTime = 0x320; // UMirTextBlock*
		constexpr auto m_rankingBoard_Defence = 0x328; // UMM_Slot_Occupation_Ranking*
		constexpr auto m_rankingBoard_Offense = 0x330; // UMM_Slot_Occupation_Ranking*
		constexpr auto m_img_Defense_Symbol_BGFrame = 0x338; // UMirImage*
		constexpr auto m_img_Defense_Symbol = 0x340; // UMirImage*
		constexpr auto m_txt_Defense_Guild_Name = 0x348; // UMirTextBlock*
		constexpr auto m_txt_Defense_Result = 0x350; // UMirTextBlock*
		constexpr auto m_img_Offense_Symbol_BGFrame = 0x358; // UMirImage*
		constexpr auto m_img_Offense_Symbol = 0x360; // UMirImage*
		constexpr auto m_txt_Offense_Guild_Name = 0x368; // UMirTextBlock*
		constexpr auto m_txt_Offense_Result = 0x370; // UMirTextBlock*
		constexpr auto m_Btn_Close = 0x378; // UMM_Common_Btn*
		constexpr auto m_Btn_Exit = 0x380; // UMM_Common_Btn*
		constexpr auto m_btn_RewardInfo = 0x388; // UMM_Common_Btn*
		constexpr auto m_Canvas_MVP = 0x390; // UMirCanvasPanel*
		constexpr auto m_txt_MVP = 0x398; // UMirTextBlock*
		constexpr auto m_img_MVP_Symbol_BGFrame = 0x3a0; // UMirImage*
		constexpr auto m_img_MVP_Symbol = 0x3a8; // UMirImage*
		constexpr auto m_txt_MVP_Name = 0x3b0; // UMirTextBlock*
		constexpr auto m_txt_MVP_Point = 0x3b8; // UMirTextBlock*
		constexpr auto m_Txt_StageName = 0x3c0; // UMirTextBlock*
		constexpr auto m_Panel_Effect = 0x3c8; // UMirCanvasPanel*
		constexpr auto m_Img_Win = 0x3d0; // UMirImage*
		constexpr auto m_Img_Lose = 0x3d8; // UMirImage*
	}

	namespace n_UMM_DailyWork_Progress { // : UWidgetBase
		constexpr auto Slot_Plus_Reward01 = 0x2e0; // UMM_Slot_DailyWork_Reward*
		constexpr auto Txt_PlusReward_2 = 0x2e8; // UMirTextBlock*
		constexpr auto Img_Check_PlusReward_2 = 0x2f0; // UMirImage*
		constexpr auto Slot_Plus_Reward02 = 0x2f8; // UMM_Slot_DailyWork_Reward*
		constexpr auto Txt_PlusReward_3 = 0x300; // UMirTextBlock*
		constexpr auto Img_Check_PlusReward_3 = 0x308; // UMirImage*
		constexpr auto RichTxt_Progress = 0x310; // UMirRichTextBlock*
		constexpr auto Progress_DailyWork = 0x318; // UMirProgressBar*
		constexpr auto Txt_Title = 0x320; // UMirTextBlock*
		constexpr auto Btn_ReceiveAll = 0x328; // UMM_Common_Btn*
		constexpr auto STRING_DAILY_WORK_TITLE = 0x330; // int32_t
		constexpr auto STRING_DAILY_WORK_PLUS_REWARD_2 = 0x334; // int32_t
		constexpr auto STRING_DAILY_WORK_PLUS_REWARD_3 = 0x338; // int32_t
		constexpr auto ALL_RECIEVE_BTN_EFECT_ID = 0x33c; // int32_t
	}

	namespace n_AContentsLightManager { // : AActor
		constexpr auto m_pUIDirectionalLight = 0x218; // ADirectionalLight*
		constexpr auto m_pUIPointLight1 = 0x220; // APointLight*
		constexpr auto m_pUIPointLight2 = 0x228; // APointLight*
		constexpr auto m_pUIPostProcessVolume = 0x230; // AMM_PostProcessVolume*
		constexpr auto m_pCustomizeDirectionalLight = 0x238; // ADirectionalLight*
		constexpr auto m_pCustomizePointLight1 = 0x240; // APointLight*
		constexpr auto m_pCustomizePointLight2 = 0x248; // APointLight*
		constexpr auto m_pCustomizePostProcessVolume = 0x250; // AMM_PostProcessVolume*
		constexpr auto m_pContentsLightData = 0x278; // UContentsLightData*
		constexpr auto CurrentContentsState = 0x280; // EContentsLightType
		constexpr auto CurrentClassID = 0x281; // EPlayerClassID
	}

	namespace n_UMM_B_MysticalPiece { // : UWidgetBase
		constexpr auto m_RenderTargetImage = 0x2f0; // UImage*
		constexpr auto m_TargetPos = 0x2f8; // UImage*
		constexpr auto m_CombatPoint = 0x300; // UMM_CombatPoint*
		constexpr auto m_Btn_SelectDeck = 0x308; // UMirButton*
		constexpr auto m_DeckTab = 0x310; // UMM_MysticalPieceQuickTab*
		constexpr auto m_Txt_SelectDeckIndex = 0x318; // UMirTextBlock*
		constexpr auto m_Txt_SelectDeck = 0x320; // UMirTextBlock*
		constexpr auto m_Can_GoToTranscend = 0x328; // UCanvasPanel*
		constexpr auto m_Img_Transcend = 0x330; // UMirImage*
		constexpr auto m_Btn_GoToTranscend = 0x338; // UMirButton*
		constexpr auto m_Txt_Transcend = 0x340; // UMirTextBlock*
		constexpr auto m_Can_EquipSlots = 0x348; // TArray<UMirCanvasPanel*>
		constexpr auto m_Img_EquipBGs = 0x358; // TArray<UMirImage*>
		constexpr auto m_EquipSlots = 0x368; // TArray<UMM_MysticalPieceSlot*>
		constexpr auto m_Overlay_Stats = 0x378; // UOverlay*
		constexpr auto m_Txt_ItemName = 0x380; // UMirTextBlock*
		constexpr auto m_Slot_MysticalPiece = 0x388; // UMM_Slot_Inventory*
		constexpr auto m_Rtxt_DescTitle = 0x390; // UMirRichTextBlock*
		constexpr auto m_Rtxt_Desc = 0x398; // UMirRichTextBlock*
		constexpr auto m_ItemInfo_Passive = 0x3a0; // UMM_Mystical_ItemInfo_Ability*
		constexpr auto m_ItemInfo_Abilitys = 0x3a8; // TArray<UMM_Mystical_ItemInfo_Ability*>
		constexpr auto m_Inven_MysticalPiece = 0x3b8; // UMM_Inventory_MysticalPiece*
		constexpr auto m_Btn_DetailInfos = 0x3c0; // UMM_Common_Btn_Symbol*
		constexpr auto m_Popup_Attribute = 0x3c8; // UMM_Popup_MysticalPieces_Infos*
		constexpr auto m_Btn_ItemInfoBack = 0x3d0; // UMirButton*
		constexpr auto m_DecShow = 0x3e0; // UWidgetAnimation*
		constexpr auto m_DecHide = 0x3e8; // UWidgetAnimation*
		constexpr auto m_SlotOpen = 0x3f0; // UWidgetAnimation*
		constexpr auto m_InvenOpen = 0x3f8; // UWidgetAnimation*
	}

	namespace n_UScaleBox { // : UContentWidget
		constexpr auto Stretch = 0x120; // EStretch
		constexpr auto StretchDirection = 0x121; // EStretchDirection
		constexpr auto UserSpecifiedScale = 0x124; // float
		constexpr auto IgnoreInheritedScale = 0x128; // bool
	}

	namespace n_UMM_B_Party_Info { // : UWidgetBase
		constexpr auto m_C_Btn_Close = 0x2f0; // UMM_Common_Btn_Symbol*
		constexpr auto m_Txt_Title = 0x2f8; // UMirTextBlock*
		constexpr auto m_Party_ExplainTextField = 0x300; // UMM_Party_ExplainTextField*
		constexpr auto m_Txt_JoinableType = 0x308; // UMirTextBlock*
		constexpr auto m_Img_Joinable_Lock = 0x310; // UMirImage*
		constexpr auto m_Img_Joinable_Open = 0x318; // UMirImage*
		constexpr auto m_Txt_CombatPoint = 0x320; // UMirTextBlock*
		constexpr auto m_ScrollBox_Member = 0x328; // UMirScrollBox*
		constexpr auto m_Img_Member_6 = 0x330; // UMirImage*
		constexpr auto m_Img_Member_16 = 0x338; // UMirImage*
		constexpr auto m_HrzBox_Guild = 0x340; // UHorizontalBox*
		constexpr auto m_Txt_GuildName = 0x348; // UMirTextBlock*
		constexpr auto m_C_Btn_Common = 0x350; // UMM_Common_Btn*
		constexpr auto m_C_Btn_Delete = 0x358; // UMM_Common_Btn*
		constexpr auto m_C_Btn_Leave = 0x360; // UMM_Common_Btn*
		constexpr auto m_C_Btn_ToolTip = 0x368; // UMM_Common_ToolTipBtn*
		constexpr auto m_AniStart = 0x370; // UWidgetAnimation*
		constexpr auto m_AniEnd = 0x378; // UWidgetAnimation*
	}

	namespace n_UMM_Popup_Appearance { // : UWidgetBase
		constexpr auto Txt_Name = 0x300; // UMirTextBlock*
		constexpr auto Arr_Slot = 0x308; // TArray<UMM_Popup_Appearance_Slot*>
		constexpr auto CharInfoSlim = 0x318; // UMM_CharInfo_Slim*
		constexpr auto CanvasPanel = 0x320; // UMirCanvasPanel*
		constexpr auto GradePanel = 0x328; // UMirCanvasPanel*
	}

	namespace n_UMM_Slot_Simple_Jewel { // : UMM_Slot_Base
		constexpr auto Img_JewelLock = 0x3e8; // UMirImage*
	}

	namespace n_UPopup_WorldBossFailRewardInfo { // : UWidgetBase
		constexpr auto HorizontalBox_reward02 = 0x2e0; // UHorizontalBox*
		constexpr auto HorizontalBox_4 = 0x2e8; // UHorizontalBox*
		constexpr auto txtFixedRewardNotice = 0x2f0; // UMirTextBlock*
		constexpr auto txtRewardTitle = 0x2f8; // UMirTextBlock*
		constexpr auto txtFailReason = 0x300; // UMirTextBlock*
		constexpr auto slotReward = 0x308; // UMM_Slot_Material* [0x7]
	}

	namespace n_UBTTask_BlueprintBase { // : UBTTaskNode
		constexpr auto AIOwner = 0x70; // AAIController*
		constexpr auto ActorOwner = 0x78; // AActor*
		constexpr auto TickInterval = 0x80; // FIntervalCountdown
		constexpr auto bShowPropertyDetails = 0xa0; // char : 1
	}

	namespace n_UTextLayoutWidget { // : UWidget
		constexpr auto ShapedTextOptions = 0x108; // FShapedTextOptions
		constexpr auto Justification = 0x10b; // ETextJustify
		constexpr auto WrappingPolicy = 0x10c; // ETextWrappingPolicy
		constexpr auto AutoWrapText = 0x10d; // char : 1
		constexpr auto WrapTextAt = 0x110; // float
		constexpr auto Margin = 0x114; // FMargin
		constexpr auto LineHeightPercentage = 0x124; // float
	}

	namespace n_UMM_Map_DeathItem { // : UWidgetBase
		constexpr auto m_fRaderScale = 0x2e0; // float
		constexpr auto m_SpcMain = 0x2e8; // USpacer*
		constexpr auto m_ImgPlayer = 0x2f0; // UImage*
	}

	namespace n_UMM_Map_NameTag { // : UWidgetBase
		constexpr auto m_TxtName = 0x2e0; // UTextBlock*
	}

	namespace n_UMM_B_Party_List { // : UWidgetBase
		constexpr auto m_Tab_Left = 0x2f0; // UMM_Party_LeftTab*
		constexpr auto m_CheckBox_Alarm = 0x2f8; // UMirCheckBox*
		constexpr auto m_CheckBox_Guild = 0x300; // UMirCheckBox*
		constexpr auto m_Txt_MinLv = 0x308; // UMirTextBlock*
		constexpr auto m_Txt_MaxLv = 0x310; // UMirTextBlock*
		constexpr auto m_Btn_MinLv = 0x318; // UMirButton*
		constexpr auto m_Btn_MaxLv = 0x320; // UMirButton*
		constexpr auto m_C_Btn_ResetSearchRange = 0x328; // UMM_Common_Btn_Symbol*
		constexpr auto m_C_Empty_Notice = 0x330; // UMM_Common_Board_Notice*
		constexpr auto m_ListView_PartyList = 0x338; // UMirListView*
		constexpr auto m_C_Btn_Refresh = 0x340; // UMM_Common_Btn*
		constexpr auto m_Canvas_List = 0x348; // UMirCanvasPanel*
		constexpr auto m_arPartySlotObj = 0x358; // TArray<UPartySlotObj*>
	}

	namespace n_UMM_ContentsStateLine { // : UWidgetBase
		constexpr auto m_arHrz_State = 0x2e0; // UPanelWidget* [0x2]
		constexpr auto m_arImg_StateIcon = 0x2f0; // UMirImage* [0x2]
		constexpr auto m_arTxt_StateName = 0x300; // UMirTextBlock* [0x2]
		constexpr auto m_arTxt_StateValue = 0x310; // UMirTextBlock* [0x2]
	}

	namespace n_UMM_PopupKeypad { // : UWidgetBase
		constexpr auto btn_back = 0x2e0; // UMM_Common_Btn*
		constexpr auto txt_number = 0x2e8; // UMirTextBlock*
		constexpr auto btn_close = 0x2f0; // UMM_Common_Btn_Symbol*
		constexpr auto Btn_Cancel = 0x2f8; // UMM_Common_Btn*
		constexpr auto btn_confirm = 0x300; // UMM_Common_Btn*
		constexpr auto lst_btn_number = 0x308; // UMirButton* [0xa]
		constexpr auto btn_reset = 0x358; // UMirButton*
		constexpr auto btn_remove = 0x360; // UMirButton*
		constexpr auto btn_max = 0x368; // UMirButton*
		constexpr auto btn_11 = 0x370; // UMirButton*
		constexpr auto btn_51 = 0x378; // UMirButton*
		constexpr auto btn_101 = 0x380; // UMirButton*
	}

	namespace n_AARSharedWorldGameState { // : AGameState
		constexpr auto PreviewImageData = 0x278; // TArray<char>
		constexpr auto ARWorldData = 0x288; // TArray<char>
		constexpr auto PreviewImageBytesTotal = 0x298; // int32_t
		constexpr auto ARWorldBytesTotal = 0x29c; // int32_t
		constexpr auto PreviewImageBytesDelivered = 0x2a0; // int32_t
		constexpr auto ARWorldBytesDelivered = 0x2a4; // int32_t
	}

	namespace n_UUniformGridPanel { // : UPanelWidget
		constexpr auto SlotPadding = 0x120; // FMargin
		constexpr auto MinDesiredSlotWidth = 0x130; // float
		constexpr auto MinDesiredSlotHeight = 0x134; // float
	}

	namespace n_UMM_Popup_Auction_BuyInfo { // : UWidgetBase
		constexpr auto m_pItemInfo = 0x2f0; // UMM_Popup_Auction_ItemInfoSlot*
		constexpr auto m_pTxtAvrPrice = 0x2f8; // UMirTextBlock*
		constexpr auto m_pTxtBuyCount = 0x300; // UMirTextBlock*
		constexpr auto m_pTxtBuyPrice = 0x308; // UMirTextBlock*
		constexpr auto m_pBtnOk = 0x310; // UMM_Common_Btn*
		constexpr auto m_pBtnCancel = 0x318; // UMM_Common_Btn*
		constexpr auto m_pBtnClose = 0x320; // UMM_Common_Btn_Symbol*
	}

	namespace n_UMM_PopupGuildDonationDetails { // : UWidgetBase
		constexpr auto txt_guild_gold = 0x2e0; // UMirTextBlock*
		constexpr auto txt_guild_coin = 0x2e8; // UMirTextBlock*
		constexpr auto txt_guild_black_iron = 0x2f0; // UMirTextBlock*
		constexpr auto txt_guild_spirit = 0x2f8; // UMirTextBlock*
		constexpr auto btn_close = 0x300; // UMM_Common_Btn_Symbol*
		constexpr auto btn_confirm = 0x308; // UMM_Common_Btn*
		constexpr auto cb_daily = 0x310; // UMirCheckBox*
		constexpr auto cb_weekly = 0x318; // UMirCheckBox*
		constexpr auto txt_daily = 0x320; // UMirTextBlock*
		constexpr auto txt_weekly = 0x328; // UMirTextBlock*
		constexpr auto sb_details = 0x330; // UMirScrollBox*
		constexpr auto cb_sort = 0x338; // UMirCheckBox*
		constexpr auto txt_sort = 0x340; // UMirTextBlock*
		constexpr auto cp_sort = 0x348; // UMirCanvasPanel*
		constexpr auto img_sort_grade = 0x350; // UMirImage*
		constexpr auto btn_sort_grade = 0x358; // UMirButton*
		constexpr auto img_sort_guild_gold = 0x360; // UMirImage*
		constexpr auto btn_sort_guild_gold = 0x368; // UMirButton*
		constexpr auto img_sort_guild_coin = 0x370; // UMirImage*
		constexpr auto btn_sort_guild_coin = 0x378; // UMirButton*
		constexpr auto img_sort_guild_black_iron = 0x380; // UMirImage*
		constexpr auto btn_sort_guild_black_iron = 0x388; // UMirButton*
		constexpr auto img_sort_guild_spirit = 0x390; // UMirImage*
		constexpr auto btn_sort_guild_spirit = 0x398; // UMirButton*
		constexpr auto img_sort_total = 0x3a0; // UMirImage*
		constexpr auto btn_sort_total = 0x3a8; // UMirButton*
	}

	namespace n_ULandscapeSplineControlPoint { // : UObject
		constexpr auto Location = 0x28; // FVector
		constexpr auto Rotation = 0x34; // FRotator
		constexpr auto Width = 0x40; // float
		constexpr auto LayerWidthRatio = 0x44; // float
		constexpr auto SideFalloff = 0x48; // float
		constexpr auto LeftSideFalloffFactor = 0x4c; // float
		constexpr auto RightSideFalloffFactor = 0x50; // float
		constexpr auto LeftSideLayerFalloffFactor = 0x54; // float
		constexpr auto RightSideLayerFalloffFactor = 0x58; // float
		constexpr auto EndFalloff = 0x5c; // float
		constexpr auto ConnectedSegments = 0x60; // TArray<FLandscapeSplineConnection>
		constexpr auto Points = 0x70; // TArray<FLandscapeSplineInterpPoint>
		constexpr auto Bounds = 0x80; // FBox
		constexpr auto LocalMeshComponent = 0xa0; // UControlPointMeshComponent*
	}

	namespace n_URichTextBoxDecorator { // : UObject
		constexpr auto bReveal = 0x28; // bool
		constexpr auto RevealedIndex = 0x2c; // int32_t
	}

	namespace n_UMM_ExchangeItemInfo { // : UWidgetBase
		constexpr auto m_Txt_Title = 0x2e0; // UMirTextBlock* [0x2]
		constexpr auto m_Img_GradeBg = 0x2f0; // UMirImage* [0x2]
		constexpr auto m_Img_TierBg = 0x300; // UMirImage* [0x2]
		constexpr auto m_Img_Icon = 0x310; // UMirImage* [0x2]
		constexpr auto m_Txt_SmeltingLevel = 0x320; // UMirTextBlock* [0x2]
		constexpr auto m_Txt_Name = 0x330; // UMirTextBlock* [0x2]
		constexpr auto m_Txt_Count = 0x340; // UMirTextBlock* [0x2]
	}

	namespace n_UMM_CommonVerticalTabSet { // : UWidgetBase
		constexpr auto m_iFontSize = 0x2f0; // int32_t
		constexpr auto m_bUseBg = 0x2f4; // bool
		constexpr auto m_bHideInsteadOfLock = 0x2f5; // bool
		constexpr auto m_Scr_Main = 0x328; // UMirScrollBox*
		constexpr auto m_arTab = 0x330; // TArray<UMM_CommonVerticalTabBtn*>
		constexpr auto m_SelectedEffect = 0x340; // UEffectWidgetBase*
	}

	namespace n_UMaterialExpressionParticleRelativeTime { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UBTTask_UpdateSkillState { // : UBTTaskNode
		constexpr auto ReturnResult = 0x70; // EBTNodeResult
	}

	namespace n_UMM_AdManager { // : UObject
		constexpr auto m_DelayHideBlockScreenTimeHandle = 0x48; // FTimerHandle
		constexpr auto m_DelayRetryTimeHandle = 0x50; // FTimerHandle
		constexpr auto AdObject = 0x88; // UObject*
	}

	namespace n_UMM_Dungeon_ShopList { // : UWidgetBase
		constexpr auto m_Txt_Title = 0x2e0; // UMirTextBlock*
		constexpr auto m_WrapBox = 0x2e8; // UWrapBox*
	}

	namespace n_UParticleModuleMeshRotation { // : UParticleModuleRotationBase
		constexpr auto StartRotation = 0x30; // FRawDistributionVector
		constexpr auto bInheritParent = 0x78; // char : 1
	}

	namespace n_UMM_Popup_Loading { // : UWidgetBase
		constexpr auto m_pParentWidget = 0x260; // UWidgetBase*
		constexpr auto m_arChildWidget = 0x268; // TArray<TWeakObjectPtr<UWidgetBase>>
		constexpr auto m_arMirTextBlock = 0x280; // TArray<TWeakObjectPtr<UMirTextBlock>>
		constexpr auto m_arMirRichTextBlock = 0x290; // TArray<TWeakObjectPtr<UMirRichTextBlock>>
		constexpr auto m_arMirEditableText = 0x2a0; // TArray<TWeakObjectPtr<UMirEditableText>>
		constexpr auto m_arMirImage = 0x2b0; // TArray<TWeakObjectPtr<UMirImage>>
	}

	namespace n_UARPlaneGeometry { // : UARTrackedGeometry
		constexpr auto Orientation = 0xe8; // EARPlaneOrientation
		constexpr auto Center = 0xec; // FVector
		constexpr auto Extent = 0xf8; // FVector
		constexpr auto SubsumedBy = 0x118; // UARPlaneGeometry*
	}

	namespace n_UMirSlider { // : USlider
		constexpr auto Value = 0x108; // float
		constexpr auto ValueDelegate = 0x10c; // DelegateProperty
		constexpr auto MinValue = 0x11c; // float
		constexpr auto MaxValue = 0x120; // float
		constexpr auto WidgetStyle = 0x128; // FSliderStyle
		constexpr auto Orientation = 0x468; // EOrientation
		constexpr auto SliderBarColor = 0x46c; // FLinearColor
		constexpr auto SliderHandleColor = 0x47c; // FLinearColor
		constexpr auto IndentHandle = 0x48c; // bool
		constexpr auto Locked = 0x48d; // bool
		constexpr auto MouseUsesStep = 0x48e; // bool
		constexpr auto RequiresControllerLock = 0x48f; // bool
		constexpr auto StepSize = 0x490; // float
		constexpr auto IsFocusable = 0x494; // bool
		constexpr auto OnMouseCaptureBegin = 0x498; // FScriptMulticastDelegate
		constexpr auto OnMouseCaptureEnd = 0x4a8; // FScriptMulticastDelegate
		constexpr auto OnControllerCaptureBegin = 0x4b8; // FScriptMulticastDelegate
		constexpr auto OnControllerCaptureEnd = 0x4c8; // FScriptMulticastDelegate
		constexpr auto OnValueChanged = 0x4d8; // FScriptMulticastDelegate
	}

	namespace n_UUniformGridSlot { // : UPanelSlot
		constexpr auto HorizontalAlignment = 0x38; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x39; // EVerticalAlignment
		constexpr auto Row = 0x3c; // int32_t
		constexpr auto Column = 0x40; // int32_t
	}

	namespace n_UFontFace { // : UObject
		constexpr auto SourceFilename = 0x30; // FString
		constexpr auto Hinting = 0x40; // EFontHinting
		constexpr auto LoadingPolicy = 0x41; // EFontLoadingPolicy
		constexpr auto LayoutMethod = 0x42; // EFontLayoutMethod
	}

	namespace n_UMovieSceneEnumTrack { // : UMovieScenePropertyTrack
		constexpr auto Enum = 0x88; // UEnum*
	}

	namespace n_UDistributionFloatUniformCurve { // : UDistributionFloat
		constexpr auto ConstantCurve = 0x38; // FInterpCurveVector2D
	}

	namespace n_UMaterialExpressionViewProperty { // : UMaterialExpression
		constexpr auto Property = 0x40; // EMaterialExposedViewProperty
	}

	namespace n_AGenRoamingDataActor { // : AActor
		constexpr auto Next = 0x218; // AGenRoamingDataActor*
		constexpr auto prev = 0x220; // AGenRoamingDataActor*
	}

	namespace n_UMM_ItemCollectProgress { // : UWidgetBase
		constexpr auto m_All_Progress = 0x2e0; // UMM_ItemCollectProgressSlot*
		constexpr auto m_Event_Progress = 0x2e8; // UMM_ItemCollectProgressSlot*
		constexpr auto m_Panel_Info = 0x2f0; // UPanelWidget*
		constexpr auto m_Panel_NoResult = 0x2f8; // UPanelWidget*
		constexpr auto m_Btn_Effects = 0x300; // UMM_Common_Btn*
		constexpr auto m_Notice_NoResult = 0x308; // UMM_Common_Board_Notice*
		constexpr auto m_Img_BackProgress = 0x310; // UMirImage*
		constexpr auto m_Panel_Title = 0x318; // UPanelWidget*
		constexpr auto m_Txt_Title = 0x320; // UMirTextBlock*
		constexpr auto m_HasNoResultStr = 0x328; // int32_t
		constexpr auto m_AllObtainInfoStrID = 0x32c; // int32_t
		constexpr auto m_EffectStrID = 0x330; // int32_t
	}

	namespace n_UMM_WidgetManager { // : UObject
		constexpr auto m_pWidgetMaster = 0x28; // UMM_Widget_Master*
		constexpr auto m_mapWidgetInfo = 0x30; // TMap<EWidgetID, FWidgetInfo>
		constexpr auto m_mapWidgetPool = 0x80; // TMap<EWidgetID, FWidgetPool>
		constexpr auto m_arShowingPopupWidget = 0xd0; // TArray<EWidgetID>
		constexpr auto m_vUIBGPos = 0xe0; // FVector
		constexpr auto m_pHeroCamera = 0xf0; // AHeroInfoCamera*
		constexpr auto m_iPreloadedClassID = 0xf8; // int32_t
		constexpr auto m_bPreloadedLoginState = 0xfc; // bool
		constexpr auto m_bLoadCompleteLoginState = 0xfd; // bool
		constexpr auto m_mapDynamicWidget = 0x100; // TMap<EWidgetID, UObject*>
		constexpr auto m_mapSkillSprite = 0x150; // TMap<int32_t, UObject*>
		constexpr auto m_pLoadingImage = 0x1a0; // UObject*
		constexpr auto m_mapLoadingResource = 0x1a8; // TMap<FString, UObject*>
		constexpr auto m_mapLoadedBrush = 0x1f8; // TMap<FString, UObject*>
		constexpr auto m_mapBrushLoading = 0x248; // TMap<FString, FBrushLoading>
	}

	namespace n_UBTTask_MoveDirectlyToward { // : UBTTask_MoveTo
		constexpr auto bDisablePathUpdateOnGoalLocationChange = 0xb0; // char : 1
		constexpr auto bProjectVectorGoalToNavigation = 0xb0; // char : 1
		constexpr auto bUpdatedDeprecatedProperties = 0xb0; // char : 1
	}

	namespace n_ULevelSequenceDirector { // : UObject
		constexpr auto Player = 0x28; // ULevelSequencePlayer*
	}

	namespace n_USequenceSkipWidget { // : UWidgetBase
		constexpr auto m_CanSkip = 0x2e8; // UCanvasPanel*
		constexpr auto m_BtnSkip = 0x2f0; // UButton*
	}

	namespace n_UMM_Xdraco_SealingInventory { // : UWidgetBase
		constexpr auto MAX_SLOT = 0x2f0; // int32_t
		constexpr auto MAX_LINE_SLOT = 0x2f4; // int32_t
		constexpr auto m_pScrollBox = 0x2f8; // UMirWrapScrollBox*
		constexpr auto InvenSlotList = 0x300; // TArray<UMM_ItemSealing_Slot*>
		constexpr auto m_MaxSlotCount = 0x310; // int32_t
		constexpr auto m_CurrentSlotCount = 0x314; // int32_t
	}

	namespace n_UMM_Dominion_Title_Tooltip { // : UWidgetBase
		constexpr auto m_pTxtName = 0x2e0; // UMirTextBlock*
		constexpr auto m_pTxtValue = 0x2e8; // UMirTextBlock*
		constexpr auto m_pGridPanel = 0x2f0; // UGridPanel*
		constexpr auto m_pImgIcon = 0x2f8; // UMirImage*
		constexpr auto m_pTxtBuffInfo = 0x300; // URichTextBox*
	}

	namespace n_UBTAuxiliaryNode { // : UBTNode
		constexpr auto NodeName = 0x30; // FString
		constexpr auto TreeAsset = 0x40; // UBehaviorTree*
		constexpr auto ParentNode = 0x48; // UBTCompositeNode*
	}

	namespace n_UMM_SiegeObserver_Situationboard { // : UWidgetBase
		constexpr auto m_SiegeMinimap = 0x300; // UMM_Occupation_Minimap*
		constexpr auto m_SiegeBattleFieldInfo = 0x308; // UMM_Occupation_BattleFieldInfo*
		constexpr auto m_Txt_Offense_CombatPoint = 0x310; // UMirTextBlock*
		constexpr auto m_Txt_Defense_CombatPoint = 0x318; // UMirTextBlock*
		constexpr auto m_Img_Offense_CombatPoint = 0x320; // UMirImage*
		constexpr auto m_Progress_Defense_CombatPoint = 0x328; // UMirProgressBar*
		constexpr auto m_Txt_Offense_Warrior = 0x330; // UMirTextBlock*
		constexpr auto m_Txt_Defense_Warrior = 0x338; // UMirTextBlock*
		constexpr auto m_Img_Offense_Warrior = 0x340; // UMirImage*
		constexpr auto m_Progress_Defense_Warrior = 0x348; // UMirProgressBar*
		constexpr auto m_Txt_Offense_Magician = 0x350; // UMirTextBlock*
		constexpr auto m_Txt_Defense_Magician = 0x358; // UMirTextBlock*
		constexpr auto m_Img_Offense_Magician = 0x360; // UMirImage*
		constexpr auto m_Progress_Defense_Magician = 0x368; // UMirProgressBar*
		constexpr auto m_Txt_Offense_Taoist = 0x370; // UMirTextBlock*
		constexpr auto m_Txt_Defense_Taoist = 0x378; // UMirTextBlock*
		constexpr auto m_Img_Offense_Taoist = 0x380; // UMirImage*
		constexpr auto m_Progress_Defense_Taoist = 0x388; // UMirProgressBar*
		constexpr auto m_Txt_Offense_Assassin = 0x390; // UMirTextBlock*
		constexpr auto m_Txt_Defense_Assassin = 0x398; // UMirTextBlock*
		constexpr auto m_Img_Offense_Assassin = 0x3a0; // UMirImage*
		constexpr auto m_Progress_Defense_Assassin = 0x3a8; // UMirProgressBar*
		constexpr auto m_Txt_Offense_Berserker = 0x3b0; // UMirTextBlock*
		constexpr auto m_Txt_Defense_Berserker = 0x3b8; // UMirTextBlock*
		constexpr auto m_Img_Offense_Berserker = 0x3c0; // UMirImage*
		constexpr auto m_Progress_Defense_Berserker = 0x3c8; // UMirProgressBar*
	}

	namespace n_UMM_WarpMoveManager { // : UObject
		constexpr auto bSendWarp = 0x48; // bool
		constexpr auto UsedPortal = 0x49; // bool
		constexpr auto WarpInProgress = 0x4a; // bool
		constexpr auto WarpMethodType = 0x4b; // EWarpMethodType
		constexpr auto WarpContentsType = 0x4c; // EWarpContentsType
		constexpr auto StageId = 0x50; // int32_t
		constexpr auto DestLocation = 0x54; // FVector
		constexpr auto DestRotator = 0x60; // FRotator
		constexpr auto RecvStageID = 0x6c; // int32_t
		constexpr auto ReservedAutoMoveState = 0x70; // EAutoMoveState
		constexpr auto ReservedAutoBattleState = 0x71; // EAutoBattleState
		constexpr auto ReservedBehaviorType = 0x72; // EBehaviorType
		constexpr auto TargetID = 0x74; // int32_t
		constexpr auto TriggerPortalID = 0x78; // int32_t
		constexpr auto ActiveQuestID = 0x7c; // int32_t
		constexpr auto ActiveQuestType = 0x80; // int32_t
		constexpr auto MoveRequestID = 0x84; // int32_t
		constexpr auto MoveRequestNpcID = 0x88; // int32_t
		constexpr auto ServerWarpMethod = 0x8c; // int32_t
		constexpr auto ScriptWarp = 0x90; // bool
		constexpr auto bChannelWaiting = 0x91; // bool
		constexpr auto iChannelWaitingWarpTID = 0x94; // int32_t
		constexpr auto iChannelWaitingZoneUID = 0x98; // int64_t
		constexpr auto ZoneUniqueID = 0xa0; // int64_t
	}

	namespace n_UHitPostProcessMatNotify { // : UAnimNotify
		constexpr auto HitPostProcessData = 0x38; // FHitPostProcessMaterialData
	}

	namespace n_UMM_GuildCommandMark_Slot { // : UWidgetBase
		constexpr auto m_CanEffect = 0x2e0; // UMirCanvasPanel*
		constexpr auto m_ImgSelect = 0x2e8; // UMirImage*
		constexpr auto m_ImgCheck = 0x2f0; // UMirImage*
		constexpr auto m_ImgMarkIcon = 0x2f8; // UMirImage*
		constexpr auto m_BtnClick = 0x300; // UMirButton*
		constexpr auto m_EffectCoolTime = 0x308; // UEffectWidgetBase*
		constexpr auto m_EffectClick = 0x310; // UEffectWidgetBase*
	}

	namespace n_UMM_Guild_Dev_DrawLines { // : UWidgetBase
		constexpr auto m_pParentWidget = 0x260; // UWidgetBase*
		constexpr auto m_arChildWidget = 0x268; // TArray<TWeakObjectPtr<UWidgetBase>>
		constexpr auto m_arMirTextBlock = 0x280; // TArray<TWeakObjectPtr<UMirTextBlock>>
		constexpr auto m_arMirRichTextBlock = 0x290; // TArray<TWeakObjectPtr<UMirRichTextBlock>>
		constexpr auto m_arMirEditableText = 0x2a0; // TArray<TWeakObjectPtr<UMirEditableText>>
		constexpr auto m_arMirImage = 0x2b0; // TArray<TWeakObjectPtr<UMirImage>>
	}

	namespace n_USphereComponent { // : UShapeComponent
		constexpr auto SphereRadius = 0x430; // float
	}

	namespace n_ULeaderboardFlushCallbackProxy { // : UObject
		constexpr auto OnSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto OnFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_UHapticFeedbackEffect_Curve { // : UHapticFeedbackEffect_Base
		constexpr auto HapticDetails = 0x28; // FHapticFeedbackDetails_Curve
	}

	namespace n_UMM_PopUp_Costume_Palette { // : UWidgetBase
		constexpr auto m_AniStart = 0x300; // UWidgetAnimation*
		constexpr auto m_AniEnd = 0x308; // UWidgetAnimation*
		constexpr auto Palette_Main = 0x310; // UMM_Customizing_PaletteItem*
		constexpr auto Palette_Sub = 0x318; // UMM_Customizing_PaletteItem*
		constexpr auto Grid_Main = 0x320; // UVerticalBox*
		constexpr auto Grid_Sub = 0x328; // UVerticalBox*
		constexpr auto Btn_Random = 0x330; // UMM_Common_Btn_IconText*
		constexpr auto Btn_Go_Preset = 0x338; // UMM_Common_Btn_IconText*
		constexpr auto Btn_Cancel = 0x340; // UMM_Common_Btn*
		constexpr auto Btn_Cost = 0x348; // UMM_Common_Btn_Cost*
		constexpr auto Panel_Summary = 0x350; // UCanvasPanel*
		constexpr auto Panel_Color = 0x358; // UMirCanvasPanel*
		constexpr auto Btn_PaletteClose = 0x360; // UMM_Common_Btn_Symbol*
		constexpr auto Txt_Title = 0x368; // UMirTextBlock*
		constexpr auto Txt_PaletteTitle = 0x370; // UMirTextBlock*
		constexpr auto PaletteSlotList = 0x378; // TArray<UMM_Slot_Costume_Palette*>
		constexpr auto PaletteSlotList_Direct_CH1 = 0x388; // TArray<UMM_Slot_Costume_Palette*>
		constexpr auto PaletteSlotList_Direct_CH2 = 0x398; // TArray<UMM_Slot_Costume_Palette*>
		constexpr auto btn_close = 0x3a8; // UMM_Common_Btn_Symbol*
		constexpr auto Scroll_WrapBox_Preset = 0x3b0; // UMirWrapScrollBox*
		constexpr auto Scroll_WrapBox_Direct_Main = 0x3b8; // UMirWrapScrollBox*
		constexpr auto Scroll_WrapBox_Direct_Sub = 0x3c0; // UMirWrapScrollBox*
		constexpr auto SlideBar_Main = 0x3c8; // UMM_Costume_SlideBar*
		constexpr auto SlideBar_Sub = 0x3d0; // UMM_Costume_SlideBar*
		constexpr auto SelectCostumeID = 0x3d8; // int32_t
		constexpr auto DirtyFlag = 0x3dc; // bool
		constexpr auto WarrnigUseID = 0x3dd; // bool
		constexpr auto ItemUseId = 0x3e0; // int32_t
		constexpr auto m_MaxSlotCount = 0x3e4; // int32_t
		constexpr auto m_CurrentSlotCount = 0x3e8; // int32_t
		constexpr auto Select_PaletteNumber_CH1 = 0x3ec; // int32_t
		constexpr auto Select_PaletteNumber_CH2 = 0x3f0; // int32_t
		constexpr auto m_MaxSlotCount_Direct_CH1 = 0x3f4; // int32_t
		constexpr auto m_CurrentSlotCount_Direct_CH1 = 0x3f8; // int32_t
		constexpr auto m_MaxSlotCount_Direct_CH2 = 0x3fc; // int32_t
		constexpr auto m_CurrentSlotCount_Direct_CH2 = 0x400; // int32_t
		constexpr auto STRING_BTN_PURCHASE = 0x404; // int32_t
		constexpr auto STRING_TITLE_PALETTE = 0x408; // int32_t
		constexpr auto STRING_TITLE_PRESET = 0x40c; // int32_t
		constexpr auto STRING_MAIN_COLOR = 0x410; // int32_t
		constexpr auto STRING_SUB_COLOR = 0x414; // int32_t
	}

	namespace n_UMM_Common_ToolTip { // : UWidgetBase
		constexpr auto m_Overlay_ToolTip = 0x2e0; // UPanelWidget*
		constexpr auto m_RTxt_ToolTip = 0x2e8; // UMirRichTextBlock*
		constexpr auto m_Btn_Screen = 0x2f0; // UMirButton*
	}

	namespace n_UTestMovieSceneSection { // : UMovieSceneSection
		constexpr auto EvalOptions = 0x50; // FMovieSceneSectionEvalOptions
		constexpr auto Easing = 0x58; // FMovieSceneEasingSettings
		constexpr auto SectionRange = 0x90; // FMovieSceneFrameRange
		constexpr auto PreRollFrames = 0xa0; // FFrameNumber
		constexpr auto PostRollFrames = 0xa4; // FFrameNumber
		constexpr auto RowIndex = 0xa8; // int32_t
		constexpr auto OverlapPriority = 0xac; // int32_t
		constexpr auto bIsActive = 0xb0; // char : 1
		constexpr auto bIsLocked = 0xb0; // char : 1
		constexpr auto StartTime = 0xb4; // float
		constexpr auto EndTime = 0xb8; // float
		constexpr auto PrerollTime = 0xbc; // float
		constexpr auto PostrollTime = 0xc0; // float
		constexpr auto bIsInfinite = 0xc4; // char : 1
		constexpr auto bSupportsInfiniteRange = 0xc8; // bool
		constexpr auto BlendType = 0xc9; // FOptionalMovieSceneBlendType
	}

	namespace n_UOpenGraphPost { // : UBlueprintAsyncActionBase
		constexpr auto OnSuccess = 0x30; // FScriptMulticastDelegate
		constexpr auto OnFail = 0x40; // FScriptMulticastDelegate
	}

	namespace n_UAppleLogin { // : UBlueprintAsyncActionBase
		constexpr auto OnSuccess = 0x30; // FScriptMulticastDelegate
		constexpr auto OnFail = 0x40; // FScriptMulticastDelegate
	}

	namespace n_UMM_Guild_Dev_Slot_SkillUse { // : UWidgetBase
		constexpr auto mImgSkillIcon = 0x2e0; // UMirImage*
		constexpr auto mImgDisableIcon = 0x2e8; // UMirImage*
		constexpr auto mTxtSkillName = 0x2f0; // UMirTextBlock*
		constexpr auto mBtnDevSlot = 0x2f8; // UMirButton*
		constexpr auto mRecommandPanel = 0x300; // UGridPanel*
		constexpr auto mOnGoingImg = 0x308; // UImage*
		constexpr auto mReadyImg = 0x310; // UImage*
		constexpr auto mTxtRemainTime = 0x318; // UMirTextBlock*
		constexpr auto mPanelEffectStart = 0x320; // UPanelWidget*
		constexpr auto mPanelEffectGoing = 0x328; // UPanelWidget*
		constexpr auto mDevSkillEffectStart = 0x330; // UEffectWidgetBase*
		constexpr auto mDevSkillEffectGoing = 0x338; // UEffectWidgetBase*
	}

	namespace n_UARBasicLightEstimate { // : UARLightEstimate
		constexpr auto AmbientIntensityLumens = 0x28; // float
		constexpr auto AmbientColorTemperatureKelvin = 0x2c; // float
		constexpr auto AmbientColor = 0x30; // FLinearColor
	}

	namespace n_UMM_Hud_Chat_BroadCast_MSG { // : UWidgetBase
		constexpr auto Btn_ItemInfo = 0x2e0; // UMirButton*
		constexpr auto m_Txt_Notice = 0x2e8; // UMirRichTextBlock*
		constexpr auto m_SendUserUID = 0x2f0; // int64_t
		constexpr auto m_ShareItemUID = 0x2f8; // int64_t
		constexpr auto m_SmeltingLv = 0x300; // int32_t
	}

	namespace n_UMovieSceneFloatTrack { // : UMovieScenePropertyTrack
		constexpr auto SectionToKey = 0x58; // UMovieSceneSection*
		constexpr auto PropertyName = 0x60; // FName
		constexpr auto PropertyPath = 0x68; // FString
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_UMM_DominionMemberSlot { // : UWidgetBase
		constexpr auto m_pTxtClass = 0x2e0; // UMirTextBlock*
		constexpr auto m_pTxtName = 0x2e8; // UMirTextBlock*
		constexpr auto m_pPortrait = 0x2f0; // UMM_GuildMemberPortrait*
		constexpr auto m_pBtnClick = 0x2f8; // UMirButton*
	}

	namespace n_UMM_Dominion_WithDrawal_MySlot { // : UWidgetBase
		constexpr auto m_pImgType = 0x2e0; // UMirImage*
		constexpr auto m_pTxtValue = 0x2e8; // UMirTextBlock*
	}

	namespace n_UForceFeedbackAttenuation { // : UObject
		constexpr auto Attenuation = 0x28; // FForceFeedbackAttenuationSettings
	}

	namespace n_UMaterialExpressionStaticSwitch { // : UMaterialExpression
		constexpr auto DefaultValue = 0x40; // char : 1
		constexpr auto A = 0x44; // FExpressionInput
		constexpr auto B = 0x58; // FExpressionInput
		constexpr auto Value = 0x6c; // FExpressionInput
	}

	namespace n_UMM_LoginManager { // : UObject
		constexpr auto m_GoogleLoginSubSystem = 0x1c8; // UGoogleLoginSubSystem*
		constexpr auto m_AppleLoginSubSystem = 0x1d0; // UAppleLoginSubSystem*
		constexpr auto m_FacebookLoginSubSystem = 0x1d8; // UFacebookLoginSubSystem*
		constexpr auto m_CustomLoginSubSystem = 0x1e0; // UCustomLoginSubSystem*
		constexpr auto m_SteamLoginSubSystem = 0x1e8; // USteamLoginSubSystem*
		constexpr auto m_WSAuthModule = 0x1f0; // UWSAuthModule*
		constexpr auto m_FirebaseMessagingHelper = 0x1f8; // UFirebaseMessagingHelper*
	}

	namespace n_UMM_SharedScrollBox { // : UWidgetBase
		constexpr auto m_WrapBox = 0x2e0; // UWrapBox*
		constexpr auto m_ScrollBox = 0x2e8; // UScrollBox*
	}

	namespace n_UEnvQuery { // : UDataAsset
		constexpr auto QueryName = 0x30; // FName
		constexpr auto Options = 0x38; // TArray<UEnvQueryOption*>
	}

	namespace n_ALandscapeBlueprintBrushBase { // : AActor
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto bHidden = 0x58; // char : 1
		constexpr auto bNetTemporary = 0x58; // char : 1
		constexpr auto bNetStartup = 0x58; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x58; // char : 1
		constexpr auto bAlwaysRelevant = 0x58; // char : 1
		constexpr auto bReplicateMovement = 0x58; // char : 1
		constexpr auto bTearOff = 0x58; // char : 1
		constexpr auto bExchangedRoles = 0x58; // char : 1
		constexpr auto bNetLoadOnClient = 0x59; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x59; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x59; // char : 1
		constexpr auto bRelevantForLevelBounds = 0x59; // char : 1
		constexpr auto bReplayRewindable = 0x59; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x59; // char : 1
		constexpr auto bAutoDestroyWhenFinished = 0x59; // char : 1
		constexpr auto bBlockInput = 0x59; // char : 1
		constexpr auto bCanBeDamaged = 0x5a; // char : 1
		constexpr auto bCollideWhenPlacing = 0x5a; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x5a; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x5a; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x5a; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x5a; // char : 1
		constexpr auto bIsEditorOnlyActor = 0x5a; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x5a; // char : 1
		constexpr auto bReplicates = 0x5b; // char : 1
		constexpr auto bCanBeInCluster = 0x5b; // char : 1
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x5b; // char : 1
		constexpr auto bActorEnableCollision = 0x5c; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x5c; // char : 1
		constexpr auto UpdateOverlapsMethodDuringLevelStreaming = 0x5d; // EActorUpdateOverlapsMethod
		constexpr auto DefaultUpdateOverlapsMethodDuringLevelStreaming = 0x5e; // EActorUpdateOverlapsMethod
		constexpr auto RemoteRole = 0x5f; // ENetRole
		constexpr auto ReplicatedMovement = 0x60; // FRepMovement
		constexpr auto InitialLifeSpan = 0x94; // float
		constexpr auto CustomTimeDilation = 0x98; // float
		constexpr auto AttachmentReplication = 0xa0; // FRepAttachment
		constexpr auto Owner = 0xe0; // AActor*
		constexpr auto NetDriverName = 0xe8; // FName
		constexpr auto Role = 0xf0; // ENetRole
		constexpr auto NetDormancy = 0xf1; // ENetDormancy
		constexpr auto SpawnCollisionHandlingMethod = 0xf2; // ESpawnActorCollisionHandlingMethod
		constexpr auto AutoReceiveInput = 0xf3; // EAutoReceiveInput
		constexpr auto InputPriority = 0xf4; // int32_t
		constexpr auto InputComponent = 0xf8; // UInputComponent*
		constexpr auto NetCullDistanceSquared = 0x100; // float
		constexpr auto NetTag = 0x104; // int32_t
		constexpr auto NetUpdateFrequency = 0x108; // float
		constexpr auto MinNetUpdateFrequency = 0x10c; // float
		constexpr auto NetPriority = 0x110; // float
		constexpr auto Instigator = 0x118; // APawn*
		constexpr auto Children = 0x120; // TArray<AActor*>
		constexpr auto RootComponent = 0x130; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x138; // TArray<AMatineeActor*>
		constexpr auto Layers = 0x150; // TArray<FName>
		constexpr auto ParentComponent = 0x160; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto Tags = 0x168; // TArray<FName>
		constexpr auto OnTakeAnyDamage = 0x178; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x179; // FScriptMulticastDelegate
		constexpr auto OnTakeRadialDamage = 0x17a; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x17b; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x17c; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x17d; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x17e; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x17f; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x180; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x181; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x182; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x183; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x184; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x185; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x186; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x187; // FScriptMulticastDelegate
		constexpr auto InstanceComponents = 0x1e8; // TArray<UActorComponent*>
		constexpr auto BlueprintCreatedComponents = 0x1f8; // TArray<UActorComponent*>
	}

	namespace n_UMovieSceneImageCaptureProtocolBase { // : UMovieSceneCaptureProtocolBase
		constexpr auto State = 0x50; // EMovieSceneCaptureProtocolState
	}

	namespace n_UParticleModuleLocationDirect { // : UParticleModuleLocationBase
		constexpr auto Location = 0x30; // FRawDistributionVector
		constexpr auto LocationOffset = 0x78; // FRawDistributionVector
		constexpr auto ScaleFactor = 0xc0; // FRawDistributionVector
		constexpr auto Direction = 0x108; // FRawDistributionVector
	}

	namespace n_UBTTask_RunBehaviorDynamic { // : UBTTaskNode
		constexpr auto InjectionTag = 0x70; // FGameplayTag
		constexpr auto DefaultBehaviorAsset = 0x78; // UBehaviorTree*
		constexpr auto BehaviorAsset = 0x80; // UBehaviorTree*
	}

	namespace n_UMM_DungeonCommonTitle { // : UWidgetBase
		constexpr auto rtxtTime = 0x2e0; // UMirRichTextBlock*
		constexpr auto TxtTitle = 0x2e8; // UMirTextBlock*
		constexpr auto txtSubTitle = 0x2f0; // UMirTextBlock*
		constexpr auto btnDetailInfo = 0x2f8; // UMM_Common_ToolTipBtn*
		constexpr auto imgBoss = 0x300; // UMirImage*
		constexpr auto imgBackGround = 0x308; // UMirImage*
	}

	namespace n_UMM_Customizing_Costume_Palette { // : UCustomizingComponentBase
		constexpr auto m_PaletteItemArray = 0x300; // TArray<UMM_Customizing_PaletteItem*>
		constexpr auto m_pColorListBox = 0x310; // UWrapBox*
		constexpr auto m_MainColor = 0x318; // UMM_Customizing_PaletteItem*
		constexpr auto m_SubColor = 0x320; // UMM_Customizing_PaletteItem*
		constexpr auto m_pBtnRandomColor = 0x328; // UMM_Common_Btn_IconText*
		constexpr auto m_pBtnPresetPopup = 0x330; // UMM_Common_Btn_IconText*
	}

	namespace n_UMM_PopUp_BuildingChart { // : UWidgetBase
		constexpr auto m_TitleStr = 0x2e0; // int32_t
		constexpr auto m_StepStr = 0x2e4; // int32_t
		constexpr auto m_CombatStr = 0x2e8; // int32_t
		constexpr auto m_Txt_Title = 0x2f0; // UMirTextBlock*
		constexpr auto m_Btn_Close = 0x2f8; // UMM_Common_Btn_Symbol*
		constexpr auto m_Scale_Step = 0x300; // UMirScaleBox*
		constexpr auto m_Txt_Step = 0x308; // UMirTextBlock*
		constexpr auto m_Scale_Titles = 0x310; // TArray<UMirScaleBox*>
		constexpr auto m_Txt_EffectTitles = 0x320; // TArray<UMirTextBlock*>
		constexpr auto m_ScrollChart = 0x330; // UMirScrollBox*
		constexpr auto m_ListView = 0x338; // UMirListView*
		constexpr auto m_ChartSlotObjs = 0x348; // TArray<UBuildingChartSlotObj*>
	}

	namespace n_UAchievementWriteCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto OnFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_UMM_B_Vehicle { // : UWidgetBase
		constexpr auto m_VehicleInfo = 0x300; // UMM_VehicleInfo*
		constexpr auto m_Img_TabIndicator = 0x308; // UMirImage*
		constexpr auto m_arVehicleListSlot = 0x310; // TArray<UMM_VehicleListSlot*>
		constexpr auto m_CB_Equip = 0x320; // UMM_Common_Btn*
		constexpr auto m_CB_Buy = 0x328; // UMM_Common_Btn_Cost*
		constexpr auto m_Img_RenderTarget = 0x330; // UMirImage*
		constexpr auto m_TargetPos = 0x338; // UImage*
		constexpr auto m_Txt_CombatPoint = 0x340; // UMirTextBlock*
		constexpr auto m_Btn_DetailInfo = 0x348; // UMirButton*
		constexpr auto m_Scr_VehicleList = 0x350; // UMirScrollBox*
		constexpr auto m_CB_Achieve = 0x358; // UMM_Common_Btn*
	}

	namespace n_UDistributionVectorParticleParameter { // : UDistributionVectorParameterBase
		constexpr auto ParameterName = 0x50; // FName
		constexpr auto MinInput = 0x58; // FVector
		constexpr auto MaxInput = 0x64; // FVector
		constexpr auto MinOutput = 0x70; // FVector
		constexpr auto MaxOutput = 0x7c; // FVector
		constexpr auto ParamModes = 0x88; // DistributionParamMode [0x3]
	}

	namespace n_APlaySoundTrigger { // : AActivateTrigger
		constexpr auto m_SoundID = 0x278; // int32_t
	}

	namespace n_AMonsterKillTrigger { // : AActivateTrigger
		constexpr auto m_bInstantKill = 0x278; // bool
		constexpr auto m_MonsterOrderID = 0x27c; // int32_t
	}

	namespace n_UMaterialExpressionConstant3Vector { // : UMaterialExpression
		constexpr auto Constant = 0x40; // FLinearColor
	}

	namespace n_UMaterialExpressionDecalMipmapLevel { // : UMaterialExpression
		constexpr auto TextureSize = 0x40; // FExpressionInput
		constexpr auto ConstWidth = 0x54; // float
		constexpr auto ConstHeight = 0x58; // float
	}

	namespace n_AMyPortalTrigger { // : AActivateTrigger
		constexpr auto m_bMiniMapHide = 0x2b0; // bool
		constexpr auto m_ExtentBox = 0x2b4; // FVector
		constexpr auto m_AppearLength = 0x2c0; // float
		constexpr auto m_ArrivalLocation = 0x2c4; // FVector
		constexpr auto m_PortalTriggerID = 0x2d0; // int32_t
		constexpr auto m_CurrentStageID = 0x2d4; // int32_t
		constexpr auto m_NextStageName = 0x2d8; // FString
		constexpr auto m_bHidePortal = 0x2e9; // bool
		constexpr auto m_Memo = 0x2f0; // FString
		constexpr auto m_bEnablePortal = 0x300; // bool
	}

	namespace n_UMM_GameOption_Sound { // : UWidgetBase
		constexpr auto Option_Master = 0x2f0; // UMM_GameOption_Slider*
		constexpr auto Option_BGM = 0x2f8; // UMM_GameOption_Slider*
		constexpr auto Option_SFX = 0x300; // UMM_GameOption_Slider*
		constexpr auto Option_Voice = 0x308; // UMM_GameOption_Slider*
		constexpr auto Option_Ambient = 0x310; // UMM_GameOption_Slider*
	}

	namespace n_UGeometryCacheTrack_TransformAnimation { // : UGeometryCacheTrack
		constexpr auto Duration = 0x28; // float
	}

	namespace n_UMaterialExpressionCosine { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Period = 0x54; // float
	}

	namespace n_UBTService_BlueprintBase { // : UBTService
		constexpr auto AIOwner = 0x70; // AAIController*
		constexpr auto ActorOwner = 0x78; // AActor*
		constexpr auto bShowPropertyDetails = 0x90; // char : 1
		constexpr auto bShowEventDetails = 0x90; // char : 1
	}

	namespace n_UMM_Popup_Worship { // : UWidgetBase
		constexpr auto m_Txt_OccupationInfo = 0x2e0; // UTextBlock*
		constexpr auto m_Txt_OccupationGuild = 0x2e8; // UTextBlock*
		constexpr auto m_Txt_WorshipReward = 0x2f0; // UTextBlock*
		constexpr auto m_Txt_WorshipRewardInfo = 0x2f8; // UTextBlock*
		constexpr auto Img_OccupationGuildMarkFrame = 0x300; // UMirImage*
		constexpr auto Img_OccupationGuildMarkSymbol = 0x308; // UMirImage*
		constexpr auto m_Txt_GuildLevel = 0x310; // UTextBlock*
		constexpr auto m_Txt_GuildName = 0x318; // UTextBlock*
		constexpr auto m_Txt_GuildMaster = 0x320; // UTextBlock*
		constexpr auto m_Txt_GuildMasterNickName = 0x328; // UTextBlock*
		constexpr auto Img_WorshipBuff = 0x330; // UMirImage*
		constexpr auto m_Btn_Worship = 0x338; // UMM_Common_Btn*
		constexpr auto m_Btn_Close = 0x340; // UMM_Common_Btn_Symbol*
	}

	namespace n_UChildActorComponent { // : USceneComponent
		constexpr auto ChildActorClass = 0x220; // AActor*
		constexpr auto ChildActor = 0x228; // AActor*
		constexpr auto ChildActorTemplate = 0x230; // AActor*
	}

	namespace n_UMM_ServerVisitRelocation_SetList { // : UWidgetBase
		constexpr auto m_Txt_Message = 0x2e0; // UMirTextBlock*
		constexpr auto m_Btn_Move = 0x2e8; // UMM_Common_Btn*
	}

	namespace n_UBTDecorator_BlackboardBase { // : UBTDecorator
		constexpr auto BlackboardKey = 0x68; // FBlackboardKeySelector
	}

	namespace n_UMM_Popup_BlackIronShop_Move { // : UWidgetBase
		constexpr auto m_pTxtBlackIron = 0x2f0; // UMirTextBlock*
		constexpr auto m_pTxtPossessionValue = 0x2f8; // UMirTextBlock*
		constexpr auto m_pTxtGuildStorage = 0x300; // UMirTextBlock*
		constexpr auto m_pTxtFull = 0x308; // UMirTextBlock*
		constexpr auto m_pHorStorageValue = 0x310; // UHorizontalBox*
		constexpr auto m_pTxtGuildStorageOutValue = 0x318; // UMirTextBlock*
		constexpr auto m_pSliderCount = 0x320; // UMM_Item_Make_Slider_BigInteger*
		constexpr auto m_pBtnClose = 0x328; // UMM_Common_Btn_Symbol*
		constexpr auto btn_confirm = 0x330; // UMM_Common_Btn*
		constexpr auto Btn_Cancel = 0x338; // UMM_Common_Btn*
		constexpr auto m_arrImgIcon = 0x340; // TArray<UMirImage*>
	}

	namespace n_UFXSystemComponent { // : UPrimitiveComponent
		constexpr auto MinDrawDistance = 0x228; // float
		constexpr auto LDMaxDrawDistance = 0x22c; // float
		constexpr auto CachedMaxDrawDistance = 0x230; // float
		constexpr auto DepthPriorityGroup = 0x234; // ESceneDepthPriorityGroup
		constexpr auto ViewOwnerDepthPriorityGroup = 0x235; // ESceneDepthPriorityGroup
		constexpr auto IndirectLightingCacheQuality = 0x236; // EIndirectLightingCacheQuality
		constexpr auto LightmapType = 0x237; // ELightmapType
		constexpr auto bUseMaxLODAsImposter = 0x238; // char : 1
		constexpr auto CachedBoundsSphereDiameter = 0x23c; // float
		constexpr auto bBatchImpostersAsInstances = 0x240; // char : 1
		constexpr auto bNeverDistanceCull = 0x240; // char : 1
		constexpr auto bAlwaysCreatePhysicsState = 0x240; // char : 1
		constexpr auto bGenerateOverlapEvents = 0x240; // char : 1
		constexpr auto bMultiBodyOverlap = 0x241; // char : 1
		constexpr auto bTraceComplexOnMove = 0x241; // char : 1
		constexpr auto bReturnMaterialOnMove = 0x241; // char : 1
		constexpr auto bUseViewOwnerDepthPriorityGroup = 0x241; // char : 1
		constexpr auto bAllowCullDistanceVolume = 0x241; // char : 1
		constexpr auto bHasMotionBlurVelocityMeshes = 0x241; // char : 1
		constexpr auto bVisibleInReflectionCaptures = 0x241; // char : 1
		constexpr auto bVisibleInRayTracing = 0x241; // char : 1
		constexpr auto bRenderInMainPass = 0x242; // char : 1
		constexpr auto bRenderInDepthPass = 0x242; // char : 1
		constexpr auto bReceivesDecals = 0x242; // char : 1
		constexpr auto bOwnerNoSee = 0x242; // char : 1
		constexpr auto bOnlyOwnerSee = 0x242; // char : 1
		constexpr auto bTreatAsBackgroundForOcclusion = 0x242; // char : 1
		constexpr auto bUseAsOccluder = 0x242; // char : 1
		constexpr auto bSelectable = 0x242; // char : 1
		constexpr auto bForceMipStreaming = 0x243; // char : 1
		constexpr auto bHasPerInstanceHitProxies = 0x243; // char : 1
		constexpr auto CastShadow = 0x243; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x243; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x243; // char : 1
		constexpr auto bCastDynamicShadow = 0x243; // char : 1
		constexpr auto bCastStaticShadow = 0x243; // char : 1
		constexpr auto bCastVolumetricTranslucentShadow = 0x243; // char : 1
		constexpr auto bSelfShadowOnly = 0x244; // char : 1
		constexpr auto bCastFarShadow = 0x244; // char : 1
		constexpr auto bCastInsetShadow = 0x244; // char : 1
		constexpr auto bCastCinematicShadow = 0x244; // char : 1
		constexpr auto bCastHiddenShadow = 0x244; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x244; // char : 1
		constexpr auto bLightAsIfStatic = 0x244; // char : 1
		constexpr auto bLightAttachmentsAsGroup = 0x244; // char : 1
		constexpr auto bExcludeFromLightAttachmentGroup = 0x245; // char : 1
		constexpr auto bReceiveMobileCSMShadows = 0x245; // char : 1
		constexpr auto bSingleSampleShadowFromStationaryLights = 0x245; // char : 1
		constexpr auto bIgnoreRadialImpulse = 0x245; // char : 1
		constexpr auto bIgnoreRadialForce = 0x245; // char : 1
		constexpr auto bApplyImpulseOnDamage = 0x245; // char : 1
		constexpr auto bReplicatePhysicsToAutonomousProxy = 0x245; // char : 1
		constexpr auto AlwaysLoadOnClient = 0x245; // char : 1
		constexpr auto AlwaysLoadOnServer = 0x246; // char : 1
		constexpr auto bUseEditorCompositing = 0x246; // char : 1
		constexpr auto bRenderCustomDepth = 0x246; // char : 1
		constexpr auto bHasCustomNavigableGeometry = 0x247; // EHasCustomNavigableGeometry
		constexpr auto CanCharacterStepUpOn = 0x249; // ECanBeCharacterBase
		constexpr auto LightingChannels = 0x24a; // FLightingChannels
		constexpr auto CustomDepthStencilWriteMask = 0x24b; // ERendererStencilMask
		constexpr auto CustomDepthStencilValue = 0x24c; // int32_t
		constexpr auto CustomPrimitiveData = 0x250; // FCustomPrimitiveData
		constexpr auto TranslucencySortPriority = 0x260; // int32_t
		constexpr auto VisibilityId = 0x264; // int32_t
		constexpr auto bIgnoreOcclusionVolume = 0x268; // char : 1
		constexpr auto OcclusionVolumeId = 0x26c; // int32_t
		constexpr auto RuntimeVirtualTextures = 0x270; // TArray<URuntimeVirtualTexture*>
		constexpr auto VirtualTextureLodBias = 0x280; // uint8_t
		constexpr auto VirtualTextureCullMips = 0x281; // uint8_t
		constexpr auto VirtualTextureMinCoverage = 0x282; // uint8_t
		constexpr auto VirtualTextureRenderPassType = 0x283; // ERuntimeVirtualTextureMainPassType
		constexpr auto LpvBiasMultiplier = 0x288; // float
		constexpr auto BoundsScale = 0x294; // float
		constexpr auto MoveIgnoreActors = 0x2a8; // TArray<AActor*>
		constexpr auto MoveIgnoreComponents = 0x2b8; // TArray<UPrimitiveComponent*>
		constexpr auto BodyInstance = 0x2d8; // FBodyInstance
		constexpr auto OnComponentHit = 0x3e8; // FScriptMulticastDelegate
		constexpr auto OnComponentBeginOverlap = 0x3e9; // FScriptMulticastDelegate
		constexpr auto OnComponentEndOverlap = 0x3ea; // FScriptMulticastDelegate
		constexpr auto OnComponentWake = 0x3eb; // FScriptMulticastDelegate
		constexpr auto OnComponentSleep = 0x3ec; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x3ee; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x3ef; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x3f0; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x3f1; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x3f2; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x3f3; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x3f4; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x3f5; // FScriptMulticastDelegate
		constexpr auto LODParentPrimitive = 0x410; // UPrimitiveComponent*
	}

	namespace n_UMM_Hud_SubMenuSlot { // : UWidgetBase
		constexpr auto m_iEffectID_Loop = 0x2e0; // int32_t
		constexpr auto m_pImgIcon = 0x2e8; // UImage*
		constexpr auto m_pBtnSlot = 0x2f0; // UButton*
		constexpr auto m_pGridEffect = 0x2f8; // UPanelWidget*
		constexpr auto m_pTextInfo = 0x300; // UMirTextBlock*
		constexpr auto m_pLoopEffect = 0x308; // UEffectWidgetBase*
		constexpr auto m_iContentsID = 0x310; // int32_t
	}

	namespace n_UMM_Map_Waypoint_List { // : UWidgetBase
		constexpr auto m_arWaypointCategroy = 0x2f8; // UMM_MAP_Waypoint_Category* [0x8]
		constexpr auto m_arMapCheckBtn = 0x348; // UMM_Map_CheckBtn* [0x2]
		constexpr auto m_Txt_Channel = 0x358; // UMirTextBlock*
		constexpr auto m_Scr_WaypointList = 0x360; // UScrollBox*
		constexpr auto m_CB_ChannelChange = 0x368; // UMM_Common_Btn*
		constexpr auto m_CB_Move = 0x370; // UMM_Common_Btn*
		constexpr auto m_CB_Immedi_Move = 0x378; // UMM_Common_Btn_Cost*
		constexpr auto m_Hrz_Notice = 0x380; // UHorizontalBox*
		constexpr auto m_RTxt_Notice = 0x388; // UMirRichTextBlock*
		constexpr auto m_Txt_MapType = 0x390; // UMirRichTextBlock*
		constexpr auto m_btn_ChangeMapType = 0x398; // UMM_Common_Btn*
	}

	namespace n_UMaterialExpressionShaderStageSwitch { // : UMaterialExpression
		constexpr auto PixelShader = 0x40; // FExpressionInput
		constexpr auto VertexShader = 0x54; // FExpressionInput
	}

	namespace n_UMM_CharInfo { // : UWidgetBase
		constexpr auto m_C_TxtLevel = 0x300; // UMirTextBlock*
		constexpr auto m_C_TxtNickName = 0x308; // UMirTextBlock*
		constexpr auto horizontal_box_levelup = 0x310; // UHorizontalBox*
		constexpr auto mir_textblock_next_level = 0x318; // UMirTextBlock*
		constexpr auto CombatPoint = 0x320; // UMM_CombatPoint*
		constexpr auto m_Profile = 0x328; // UMM_ProfileSlot*
		constexpr auto m_pPanelDominionTitle = 0x330; // UHorizontalBox*
		constexpr auto m_pBtnTitleInfo = 0x338; // UMM_Common_Btn_Symbol*
		constexpr auto m_pTxtTitleName = 0x340; // UMirTextBlock*
		constexpr auto Btn_NickNameCopy = 0x348; // UMM_Common_Btn*
	}

	namespace n_UMaterialExpressionBreakMaterialAttributes { // : UMaterialExpression
		constexpr auto MaterialAttributes = 0x40; // FMaterialAttributesInput
	}

	namespace n_UMM_PKMode { // : UWidgetBase
		constexpr auto m_pAnim_Start = 0x2f0; // UWidgetAnimation*
		constexpr auto m_pAnim_End = 0x2f8; // UWidgetAnimation*
		constexpr auto ListElementClass = 0x300; // UMM_PKModeSlot*
		constexpr auto m_ScrollBoxList = 0x308; // UMirWrapScrollBox*
		constexpr auto PKSlotList = 0x310; // TArray<UMM_PKModeSlot*>
		constexpr auto m_TestValue = 0x320; // int32_t
		constexpr auto ScrollBox_Offset = 0x324; // int32_t
		constexpr auto SkipTimer_ScrollBox = 0x328; // float
		constexpr auto m_TextTitle = 0x330; // UMirTextBlock*
		constexpr auto m_TextBlock_TendGrade = 0x338; // UTextBlock*
		constexpr auto m_TextBlock_TendValue = 0x340; // UTextBlock*
		constexpr auto m_TextPKExplain_1 = 0x348; // UTextBlock*
		constexpr auto m_TextPKExplain_2 = 0x350; // UTextBlock*
		constexpr auto m_CheckBox_OnlyUserTarget = 0x358; // UCheckBox*
		constexpr auto m_TextBlock_OnlyUserTargetNotice = 0x360; // UTextBlock*
		constexpr auto m_Btn_PKRecord = 0x368; // UMM_Common_Btn*
		constexpr auto Btn_Background = 0x370; // UMirButton*
		constexpr auto btn_close = 0x378; // UMM_Common_Btn_Symbol*
		constexpr auto Btn_Tooltip_Mode = 0x380; // UMM_Common_ToolTipBtn*
		constexpr auto Btn_Tooltip_ModeChange = 0x388; // UMM_Common_ToolTipBtn*
		constexpr auto m_VBox_1 = 0x390; // UVerticalBox*
		constexpr auto m_VBox_2 = 0x398; // UVerticalBox*
		constexpr auto m_VBox_3 = 0x3a0; // UVerticalBox*
		constexpr auto m_VBox_4 = 0x3a8; // UVerticalBox*
		constexpr auto m_SlotList_1 = 0x3b0; // TArray<UMM_Option_Ability*>
		constexpr auto m_SlotList_2 = 0x3c0; // TArray<UMM_Option_Ability*>
		constexpr auto m_SlotList_3 = 0x3d0; // TArray<UMM_Option_Ability*>
		constexpr auto m_SlotList_4 = 0x3e0; // TArray<UMM_Option_Ability*>
		constexpr auto m_pRefWidget = 0x3f0; // UMM_Option_Ability*
		constexpr auto m_ScrollDots = 0x3f8; // UMM_Scroll_Dots*
		constexpr auto ScrollBox_Offset_Old = 0x404; // int32_t
		constexpr auto EventSkip = 0x408; // bool
		constexpr auto Can_AllyListBtn = 0x410; // UMirCanvasPanel*
		constexpr auto Btn_AllyList = 0x418; // UMirButton*
	}

	namespace n_AAtmosphericFog { // : AInfo
		constexpr auto AtmosphericFogComponent = 0x218; // UAtmosphericFogComponent*
	}

	namespace n_UEnvQueryTest { // : UEnvQueryNode
		constexpr auto TestOrder = 0x30; // int32_t
		constexpr auto TestPurpose = 0x34; // EEnvTestPurpose
		constexpr auto TestComment = 0x38; // FString
		constexpr auto MultipleContextFilterOp = 0x48; // EEnvTestFilterOperator
		constexpr auto MultipleContextScoreOp = 0x49; // EEnvTestScoreOperator
		constexpr auto FilterType = 0x4a; // EEnvTestFilterType
		constexpr auto BoolValue = 0x50; // FAIDataProviderBoolValue
		constexpr auto FloatValueMin = 0x80; // FAIDataProviderFloatValue
		constexpr auto FloatValueMax = 0xb0; // FAIDataProviderFloatValue
		constexpr auto ScoringEquation = 0xe1; // EEnvTestScoreEquation
		constexpr auto ClampMinType = 0xe2; // EEnvQueryTestClamping
		constexpr auto ClampMaxType = 0xe3; // EEnvQueryTestClamping
		constexpr auto NormalizationType = 0xe4; // EEQSNormalizationType
		constexpr auto ScoreClampMin = 0xe8; // FAIDataProviderFloatValue
		constexpr auto ScoreClampMax = 0x118; // FAIDataProviderFloatValue
		constexpr auto ScoringFactor = 0x148; // FAIDataProviderFloatValue
		constexpr auto ReferenceValue = 0x178; // FAIDataProviderFloatValue
		constexpr auto bDefineReferenceValue = 0x1a8; // bool
		constexpr auto bWorkOnFloatValues = 0x1b8; // char : 1
	}

	namespace n_UMM_UIAction_EquipInfo { // : UMM_UIAction
		constexpr auto STRING_MSG_LOCK_ITEM = 0x1c0; // int32_t
	}

	namespace n_URectLightComponent { // : ULocalLightComponent
		constexpr auto SourceWidth = 0x380; // float
		constexpr auto SourceHeight = 0x384; // float
		constexpr auto BarnDoorAngle = 0x388; // float
		constexpr auto BarnDoorLength = 0x38c; // float
		constexpr auto SourceTexture = 0x390; // UTexture*
	}

	namespace n_AInteractiveFoliageActor { // : AStaticMeshActor
		constexpr auto CapsuleComponent = 0x228; // UCapsuleComponent*
		constexpr auto TouchingActorEntryPosition = 0x230; // FVector
		constexpr auto FoliageVelocity = 0x23c; // FVector
		constexpr auto FoliageForce = 0x248; // FVector
		constexpr auto FoliagePosition = 0x254; // FVector
		constexpr auto FoliageDamageImpulseScale = 0x260; // float
		constexpr auto FoliageTouchImpulseScale = 0x264; // float
		constexpr auto FoliageStiffness = 0x268; // float
		constexpr auto FoliageStiffnessQuadratic = 0x26c; // float
		constexpr auto FoliageDamping = 0x270; // float
		constexpr auto MaxDamageImpulse = 0x274; // float
		constexpr auto MaxTouchImpulse = 0x278; // float
		constexpr auto MaxForce = 0x27c; // float
		constexpr auto Mass = 0x280; // float
	}

	namespace n_UAISense_Hearing { // : UAISense
		constexpr auto NoiseEvents = 0x80; // TArray<FAINoiseEvent>
		constexpr auto SpeedOfSoundSq = 0x90; // float
	}

	namespace n_UImageSequenceProtocol { // : UFrameGrabberProtocol
		constexpr auto State = 0x50; // EMovieSceneCaptureProtocolState
	}

	namespace n_UMM_GrowthProgress { // : UWidgetBase
		constexpr auto m_LinkContentsID = 0x2f0; // int32_t
		constexpr auto m_LinkBtn = 0x2f8; // UMM_Common_Btn_Symbol*
		constexpr auto OnClickLink = 0x300; // FScriptMulticastDelegate
		constexpr auto Img_Progress = 0x310; // UMirImage* [0x5]
		constexpr auto Img_ContentsIcon = 0x338; // UMirImage*
		constexpr auto Txt_ContentsName = 0x340; // UMirTextBlock*
		constexpr auto Txt_ContentsLevel = 0x348; // UMirTextBlock*
		constexpr auto STR_RateValue = 0x350; // int32_t
	}

	namespace n_URotatingMovementComponent { // : UMovementComponent
		constexpr auto RotationRate = 0xf0; // FRotator
		constexpr auto PivotTranslation = 0xfc; // FVector
		constexpr auto bRotationInLocalSpace = 0x108; // char : 1
	}

	namespace n_UMM_B_Equipment { // : UWidgetBase
		constexpr auto m_iInventoryID = 0x2f0; // int32_t
		constexpr auto m_MyCharinfo = 0x2f8; // UMM_MyCharinfo*
		constexpr auto m_SellItem = 0x300; // UMM_SaleItemBasket*
		constexpr auto m_InvenEquipment = 0x308; // UMM_NewInventory_Equipment*
		constexpr auto m_RenderTargetImage = 0x310; // UImage*
		constexpr auto m_TargetPos = 0x318; // UImage*
	}

	namespace n_UMM_Costume_Slot_OptionInfo { // : UWidgetBase
		constexpr auto Img_Symbol = 0x2f0; // UMirImage*
		constexpr auto Txt_OptionType = 0x2f8; // UMirTextBlock*
		constexpr auto Txt_OptionValue = 0x300; // UMirTextBlock*
	}

	namespace n_UMM_PetStatSlot { // : UWidgetBase
		constexpr auto m_Txt_StatType = 0x2e0; // UMirTextBlock*
		constexpr auto m_Txt_StatValue = 0x2e8; // UMirTextBlock*
	}

	namespace n_UMM_Hud_SubMenu { // : UWidgetBase
		constexpr auto m_mapSubMenuSlotTypeInfo = 0x2f0; // TMap<ESubMenuType, int32_t>
		constexpr auto m_arrSubMenuSlotList = 0x340; // UMM_Hud_SubMenuSlot* [0x2]
	}

	namespace n_UMaterialExpressionTangent { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Period = 0x54; // float
	}

	namespace n_UMM_ServerVisit_Waypoint_Category { // : UWidgetBase
		constexpr auto m_Img_Bg_Select = 0x2f0; // UMirImage*
		constexpr auto m_Img_Arrow = 0x2f8; // UMirImage*
		constexpr auto m_Txt_Name = 0x300; // UMirTextBlock*
		constexpr auto m_Btn_Main = 0x308; // UMirButton*
		constexpr auto m_Vrt_Waypoint = 0x310; // UVerticalBox*
		constexpr auto m_arWaypointSlot = 0x318; // TArray<UMM_ServerVisit_WaypointList_Slot*>
	}

	namespace n_USlateAccessibleWidgetData { // : UObject
		constexpr auto bCanChildrenBeAccessible = 0x28; // bool
		constexpr auto AccessibleBehavior = 0x29; // ESlateAccessibleBehavior
		constexpr auto AccessibleSummaryBehavior = 0x2a; // ESlateAccessibleBehavior
		constexpr auto AccessibleText = 0x30; // FText
		constexpr auto AccessibleTextDelegate = 0x48; // DelegateProperty
		constexpr auto AccessibleSummaryText = 0x58; // FText
		constexpr auto AccessibleSummaryTextDelegate = 0x70; // DelegateProperty
	}

	namespace n_UMM_ItemCollectEffectSlot { // : UWidgetBase
		constexpr auto m_Txt_Info = 0x2e8; // UMirTextBlock*
		constexpr auto Img_LevelUpPoint = 0x2f0; // UMirImage*
		constexpr auto m_Grid_Effect = 0x2f8; // UPanelWidget*
		constexpr auto m_PercentFormatStrID = 0x300; // int32_t
		constexpr auto m_ValueFormatStrID = 0x304; // int32_t
		constexpr auto m_CompleteEffectID = 0x308; // int32_t
	}

	namespace n_UMaterialExpressionMapARPassthroughCameraUV { // : UMaterialExpression
		constexpr auto Coordinates = 0x40; // FExpressionInput
	}

	namespace n_APartyBeaconHost { // : AOnlineBeaconHostObject
		constexpr auto State = 0x240; // UPartyBeaconState*
		constexpr auto bLogoutOnSessionTimeout = 0x2a8; // bool
		constexpr auto SessionTimeoutSecs = 0x2ac; // float
		constexpr auto TravelSessionTimeoutSecs = 0x2b0; // float
	}

	namespace n_UAnimCurveCompressionSettings { // : UObject
		constexpr auto Codec = 0x28; // UAnimCurveCompressionCodec*
	}

	namespace n_UAnimStreamable { // : UAnimSequenceBase
		constexpr auto NumFrames = 0xa8; // int32_t
		constexpr auto Interpolation = 0xac; // EAnimInterpolationType
		constexpr auto RetargetSource = 0xb0; // FName
		constexpr auto CurveCompressionSettings = 0xc8; // UAnimCurveCompressionSettings*
		constexpr auto bEnableRootMotion = 0xd0; // bool
		constexpr auto RootMotionRootLock = 0xd1; // ERootMotionRootLock
		constexpr auto bForceRootLock = 0xd2; // bool
		constexpr auto bUseNormalizedRootMotionScale = 0xd3; // bool
	}

	namespace n_USkeleton { // : UObject
		constexpr auto BoneTree = 0x38; // TArray<FBoneNode>
		constexpr auto RefLocalPoses = 0x48; // TArray<FTransform>
		constexpr auto VirtualBoneGuid = 0x170; // FGuid
		constexpr auto VirtualBones = 0x180; // TArray<FVirtualBone>
		constexpr auto Sockets = 0x190; // TArray<USkeletalMeshSocket*>
		constexpr auto SmartNames = 0x1f0; // FSmartNameContainer
		constexpr auto BlendProfiles = 0x270; // TArray<UBlendProfile*>
		constexpr auto SlotGroups = 0x280; // TArray<FAnimSlotGroup>
		constexpr auto AssetUserData = 0x358; // TArray<UAssetUserData*>
	}

	namespace n_UMaterialExpressionCurveAtlasRowParameter { // : UMaterialExpressionScalarParameter
		constexpr auto Curve = 0x60; // UCurveLinearColor*
		constexpr auto Atlas = 0x68; // UCurveLinearColorAtlas*
		constexpr auto InputTime = 0x70; // FExpressionInput
	}

	namespace n_UPaperGroupedSpriteComponent { // : UMeshComponent
		constexpr auto InstanceMaterials = 0x440; // TArray<UMaterialInterface*>
		constexpr auto PerInstanceSpriteData = 0x450; // TArray<FSpriteInstanceData>
	}

	namespace n_UParticleModuleLightBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x29; // char : 1
		constexpr auto LODDuplicate = 0x29; // char : 1
		constexpr auto bSupportsRandomSeed = 0x29; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x29; // char : 1
		constexpr auto LODValidity = 0x2a; // char
	}

	namespace n_ALobbyCameraControl { // : ACameraControlBase
		constexpr auto m_pAutoCameraData = 0x940; // UAutoCameraData*
		constexpr auto m_pMediaSoundActor = 0x948; // AMediaSoundActor*
		constexpr auto m_pCameraParticleComponent = 0x950; // UParticleSystemComponent*
		constexpr auto m_pScriptCameraShake = 0xa48; // UCameraShake*
	}

	namespace n_UMM_B_Skill { // : UWidgetBase
		constexpr auto mScrollBoxSkillList = 0x2f0; // UMirScrollBox*
		constexpr auto mTxtSkillName = 0x2f8; // UMirTextBlock*
		constexpr auto mTxtSkillEffectInfo = 0x300; // UMirTextBlock*
		constexpr auto mRtSkillDesc = 0x308; // UMirRichTextBlock*
		constexpr auto mBtnAwaken = 0x310; // UMirButton*
		constexpr auto mTxtAwaken = 0x318; // UMirTextBlock*
		constexpr auto mTxtSpecialDesc = 0x320; // UMirTextBlock*
		constexpr auto mCBPrev = 0x328; // UMM_Common_Btn_Symbol*
		constexpr auto mCBNext = 0x330; // UMM_Common_Btn_Symbol*
		constexpr auto mSkillInfo = 0x338; // UMM_Skill_Info*
		constexpr auto mSkillDeckSetting = 0x340; // UMM_Skill_DeckSetting*
		constexpr auto mSkillList = 0x348; // TArray<UMM_Skill_ListSlot*>
		constexpr auto mRtSkillEffectDescList = 0x358; // TArray<UMirRichTextBlock*>
	}

	namespace n_UMM_Guild_DiplomacyTopMenuSlot { // : UWidgetBase
		constexpr auto m_Txt_MenuTitle = 0x2e0; // UMirTextBlock*
		constexpr auto m_Txt_MenuValue = 0x2e8; // UMirTextBlock*
	}

	namespace n_UMM_Popup_MagicStone_Attribute { // : UWidgetBase
		constexpr auto sb_slot = 0x2f0; // UMirScrollBox*
		constexpr auto btn_close = 0x2f8; // UMM_Common_Btn_Symbol*
		constexpr auto notice_empty = 0x300; // UMM_Common_Board_Notice*
		constexpr auto Btn_BG = 0x308; // UMirButton*
	}

	namespace n_UMeshComponent { // : UPrimitiveComponent
		constexpr auto OverrideMaterials = 0x418; // TArray<UMaterialInterface*>
		constexpr auto bEnableMaterialParameterCaching = 0x438; // char : 1
	}

	namespace n_UObjectNameTagWidget { // : UWidgetBase
		constexpr auto m_pObjectBase = 0x2e8; // AMM_ObjectBase*
	}

	namespace n_UCameraAnim { // : UObject
		constexpr auto CameraInterpGroup = 0x28; // UInterpGroup*
		constexpr auto AnimLength = 0x30; // float
		constexpr auto BoundingBox = 0x34; // FBox
		constexpr auto bRelativeToInitialTransform = 0x50; // char : 1
		constexpr auto bRelativeToInitialFOV = 0x50; // char : 1
		constexpr auto BaseFOV = 0x54; // float
		constexpr auto BasePostProcessSettings = 0x60; // FPostProcessSettings
		constexpr auto BasePostProcessBlendWeight = 0x590; // float
	}

	namespace n_UFirebaseFutureSignInResult { // : UBlueprintAsyncActionBase
		constexpr auto OnComplete = 0x30; // FScriptMulticastDelegate
	}

	namespace n_UMM_B_DungeonCommon { // : UWidgetBase
		constexpr auto m_pSlotScrollBox = 0x2f0; // UMirScrollBox*
		constexpr auto m_pBtnUseWarpItem = 0x2f8; // UMM_Common_Btn_Cost*
		constexpr auto m_pBtnDirectWarp = 0x300; // UMM_Common_Btn_IconText*
		constexpr auto m_pBtnCreate = 0x308; // UMM_Common_Btn*
		constexpr auto m_pBtnNormalMove = 0x310; // UMM_Common_Btn*
		constexpr auto wgtTitleBossInfo = 0x318; // UMM_DungeonCommonTitle*
		constexpr auto wgtTitleZoneInfo = 0x320; // UMM_DungeonCommonTitle2*
		constexpr auto wgtTitleWaveBossInfo = 0x328; // UMM_DungeonCommonTitle3*
		constexpr auto wgtCondition = 0x330; // UMM_DungeonCommonCondition*
		constexpr auto wgtBossInfo = 0x338; // UMM_DungeonCommonBossInfo*
		constexpr auto wgtTicket = 0x340; // UMM_DungeonCommonTicket*
		constexpr auto wgtGuildDevelopLock = 0x348; // UMM_GuildDevLock*
		constexpr auto wgtGuildExpedition = 0x350; // UMM_DungeonCommonGuildExpTicket*
		constexpr auto wgtReward = 0x358; // UMM_DungeonCommonReward*
	}

	namespace n_UOutGameLookAtData { // : UDataAsset
		constexpr auto NeckSocketName = 0x30; // FName
		constexpr auto HeadSocketName = 0x38; // FName
		constexpr auto RightEyeSocketName = 0x40; // FName
		constexpr auto LeftEyeSocketName = 0x48; // FName
		constexpr auto HeadOffsetPitch = 0x50; // float
		constexpr auto EyePitch = 0x54; // float
		constexpr auto EyeOffset = 0x58; // float
		constexpr auto HeadRotateAngle = 0x5c; // float
		constexpr auto NeckYawLimit = 0x60; // float
		constexpr auto NeckPitchLimit = 0x64; // float
		constexpr auto HeadYawLimit = 0x68; // float
		constexpr auto HeadPitchLimit = 0x6c; // float
		constexpr auto EyeYawLimit = 0x70; // float
		constexpr auto EyePitchLimit = 0x74; // float
	}

	namespace n_AStageSectorDataActor { // : AActor
		constexpr auto m_SectorID = 0x218; // int32_t
		constexpr auto m_Range = 0x21c; // int32_t
		constexpr auto m_Segments = 0x220; // int32_t
		constexpr auto m_Tickness = 0x224; // float
		constexpr auto m_EditScaleRatio = 0x228; // float
	}

	namespace n_UMM_QuestNormal_Auto { // : UWidgetBase
		constexpr auto m_Btn_Close = 0x2f0; // UMM_Common_Btn_Symbol*
		constexpr auto m_All_Check_Box = 0x2f8; // UMirCheckBox*
		constexpr auto m_Btn_Start = 0x300; // UMM_Common_Btn*
		constexpr auto m_Btn_Initialize = 0x308; // UMM_Common_Btn*
		constexpr auto m_List_Scroll = 0x310; // UMirScrollBox*
		constexpr auto m_Txt_List_Empty = 0x318; // UMM_Common_Board_Notice*
		constexpr auto m_PopupTitle = 0x320; // UMirTextBlock*
		constexpr auto m_Txt_Order = 0x328; // UMirTextBlock*
		constexpr auto m_Txt_Mission = 0x330; // UMirTextBlock*
		constexpr auto m_Txt_RepeatMission = 0x338; // UMirTextBlock*
		constexpr auto m_Txt_Local = 0x340; // UMirTextBlock*
		constexpr auto m_Txt_ChangeOrder = 0x348; // UMirTextBlock*
		constexpr auto m_Txt_RepeatCount = 0x350; // UMirTextBlock*
		constexpr auto StartBtnTextID = 0x368; // int32_t
		constexpr auto InitBtnTextID = 0x36c; // int32_t
		constexpr auto PauseBtnTextID = 0x370; // int32_t
		constexpr auto StopBtnTextID = 0x374; // int32_t
		constexpr auto MissionPageBtnTextID = 0x378; // int32_t
		constexpr auto CompleteBtnTextID = 0x37c; // int32_t
		constexpr auto RepeatCountID = 0x380; // int32_t
		constexpr auto RepeatNumID = 0x384; // int32_t
		constexpr auto m_pBtnCommToolTip = 0x388; // UMM_Common_ToolTipBtn*
	}

	namespace n_UEnvQueryTest_Project { // : UEnvQueryTest
		constexpr auto ProjectionData = 0x1c0; // FEnvTraceData
	}

	namespace n_UNetAnalyticsAggregatorConfig { // : UObject
		constexpr auto NetAnalyticsData = 0x28; // TArray<FNetAnalyticsDataConfig>
	}

	namespace n_UOnlineSubsystemExtendedFacebookWebBrowser { // : UWidget
		constexpr auto OnUrlChanged = 0x108; // FScriptMulticastDelegate
		constexpr auto InitialURL = 0x118; // FString
		constexpr auto bSupportsTransparency = 0x128; // bool
	}

	namespace n_UComponentDelegateBinding { // : UDynamicBlueprintBinding
		constexpr auto ComponentDelegateBindings = 0x28; // TArray<FBlueprintComponentDelegateBinding>
	}

	namespace n_UMaterialExpressionDotProduct { // : UMaterialExpression
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_UBlueprint { // : UBlueprintCore
		constexpr auto ParentClass = 0x50; // UObject*
		constexpr auto BlueprintType = 0x58; // EBlueprintType
		constexpr auto bRecompileOnLoad = 0x59; // char : 1
		constexpr auto bHasBeenRegenerated = 0x59; // char : 1
		constexpr auto bIsRegeneratingOnLoad = 0x59; // char : 1
		constexpr auto BlueprintSystemVersion = 0x5c; // int32_t
		constexpr auto SimpleConstructionScript = 0x60; // USimpleConstructionScript*
		constexpr auto ComponentTemplates = 0x68; // TArray<UActorComponent*>
		constexpr auto Timelines = 0x78; // TArray<UTimelineTemplate*>
		constexpr auto ComponentClassOverrides = 0x88; // TArray<FBPComponentClassOverride>
		constexpr auto InheritableComponentHandler = 0x98; // UInheritableComponentHandler*
	}

	namespace n_AMirSplineActor { // : AActor
		constexpr auto SplineComponent = 0x218; // USplineComponent*
	}

	namespace n_AMM_PostProcessVolume { // : APostProcessVolume
		constexpr auto EffectGlobalBrightness = 0x7a0; // float
		constexpr auto CharacterEffectBrightness = 0x7a4; // float
		constexpr auto CharacterIndirectScale = 0x7a8; // float
		constexpr auto BGBaseColorScale = 0x7ac; // float
		constexpr auto isUIVolume = 0x7b0; // bool
		constexpr auto isOverrideDirectionalLight = 0x7b1; // bool
		constexpr auto OverrideDirectionalLight = 0x7b8; // UOverrideDirectionalLight*
		constexpr auto isOverrideExponentialHeightFog = 0x7c0; // bool
		constexpr auto OverrideExponentialHeightFog = 0x7c8; // UOverrideExponentialHeightFog*
	}

	namespace n_UInterpTrackInstParticleReplay { // : UInterpTrackInst
		constexpr auto LastUpdatePosition = 0x28; // float
	}

	namespace n_ATriggerVolume { // : AVolume
		constexpr auto BrushType = 0x218; // EBrushType
		constexpr auto BrushColor = 0x21c; // FColor
		constexpr auto PolyFlags = 0x220; // int32_t
		constexpr auto bColored = 0x224; // char : 1
		constexpr auto bSolidWhenSelected = 0x224; // char : 1
		constexpr auto bPlaceableFromClassBrowser = 0x224; // char : 1
		constexpr auto bNotForClientOrServer = 0x224; // char : 1
		constexpr auto Brush = 0x228; // UModel*
		constexpr auto BrushComponent = 0x230; // UBrushComponent*
		constexpr auto bInManipulation = 0x238; // char : 1
		constexpr auto SavedSelections = 0x240; // TArray<FGeomSelection>
	}

	namespace n_ADirectionalLight { // : ALight
		constexpr auto LightComponent = 0x218; // ULightComponent*
		constexpr auto bEnabled = 0x220; // char : 1
	}

	namespace n_UMaterialExpressionSceneColor { // : UMaterialExpression
		constexpr auto InputMode = 0x40; // EMaterialSceneAttributeInputMode
		constexpr auto Input = 0x44; // FExpressionInput
		constexpr auto OffsetFraction = 0x58; // FExpressionInput
		constexpr auto ConstInput = 0x6c; // FVector2D
	}

	namespace n_UMM_Guild_InventoryListSlot { // : UWidgetBase
		constexpr auto img_portrait = 0x2e0; // UMirImage*
		constexpr auto txt_time = 0x2e8; // UMirTextBlock*
		constexpr auto txt_history = 0x2f0; // UMirTextBlock*
		constexpr auto img_cost = 0x2f8; // TMap<int32_t, UMirImage*>
		constexpr auto txt_cost = 0x348; // TMap<int32_t, UMirTextBlock*>
	}

	namespace n_UTextBlock { // : UTextLayoutWidget
		constexpr auto Text = 0x128; // FText
		constexpr auto TextDelegate = 0x140; // DelegateProperty
		constexpr auto ColorAndOpacity = 0x150; // FSlateColor
		constexpr auto ColorAndOpacityDelegate = 0x178; // DelegateProperty
		constexpr auto Font = 0x188; // FSlateFontInfo
		constexpr auto StrikeBrush = 0x1d8; // FSlateBrush
		constexpr auto ShadowOffset = 0x260; // FVector2D
		constexpr auto ShadowColorAndOpacity = 0x268; // FLinearColor
		constexpr auto ShadowColorAndOpacityDelegate = 0x278; // DelegateProperty
		constexpr auto MinDesiredWidth = 0x288; // float
		constexpr auto bWrapWithInvalidationPanel = 0x28c; // bool
		constexpr auto bAutoWrapText = 0x28d; // bool
		constexpr auto bSimpleTextMode = 0x28e; // bool
	}

	namespace n_UPawnActionsComponent { // : UActorComponent
		constexpr auto ControlledPawn = 0xb0; // APawn*
		constexpr auto ActionStacks = 0xb8; // TArray<FPawnActionStack>
		constexpr auto ActionEvents = 0xc8; // TArray<FPawnActionEvent>
		constexpr auto CurrentAction = 0xd8; // UPawnAction*
	}

	namespace n_UFieldNodeFloat { // : UFieldNodeBase
		constexpr auto PrimaryComponentTick = 0x30; // FActorComponentTickFunction
		constexpr auto ComponentTags = 0x60; // TArray<FName>
		constexpr auto AssetUserData = 0x70; // TArray<UAssetUserData*>
		constexpr auto bReplicates = 0x84; // char : 1
		constexpr auto bNetAddressable = 0x84; // char : 1
		constexpr auto bAutoActivate = 0x85; // char : 1
		constexpr auto bIsActive = 0x86; // char : 1
		constexpr auto bEditableWhenInherited = 0x86; // char : 1
		constexpr auto bCanEverAffectNavigation = 0x86; // char : 1
		constexpr auto bIsEditorOnly = 0x86; // char : 1
		constexpr auto CreationMethod = 0x88; // EComponentCreationMethod
		constexpr auto OnComponentActivated = 0x89; // FScriptMulticastDelegate
		constexpr auto OnComponentDeactivated = 0x8a; // FScriptMulticastDelegate
		constexpr auto UCSModifiedProperties = 0x90; // TArray<FSimpleMemberReference>
	}

	namespace n_UEditableTextWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto EditableTextStyle = 0x30; // FEditableTextStyle
	}

	namespace n_UMM_Common_PartyMember { // : UWidgetBase
		constexpr auto m_pImgParty = 0x2f0; // UMirImage*
		constexpr auto m_pTxtMemberCount = 0x2f8; // UMirTextBlock*
	}

	namespace n_UMM_PopUp_ItemInfo_Ability { // : UWidgetBase
		constexpr auto m_AbilityIcon = 0x2e0; // UMirImage*
		constexpr auto m_AbilityName = 0x2e8; // UTextBlock*
		constexpr auto m_AbilityValue = 0x2f0; // UMirTextBlock*
		constexpr auto m_AbilityValueDefault = 0x2f8; // UMirTextBlock*
		constexpr auto m_AbilityAddValue = 0x300; // UMirTextBlock*
		constexpr auto m_Txt1 = 0x308; // UTextBlock*
		constexpr auto m_Txt2 = 0x310; // UTextBlock*
		constexpr auto m_WidgetIndex = 0x318; // int32_t
		constexpr auto Img_Arrow = 0x320; // UMirImage*
		constexpr auto Txt_Point = 0x328; // UMirTextBlock*
		constexpr auto m_PolishProgressBar = 0x330; // UProgressBar*
		constexpr auto m_PolishStatValue = 0x338; // UTextBlock*
		constexpr auto m_Img_Grade = 0x340; // UMirImage*
		constexpr auto m_Txt_OptionValue = 0x348; // UTextBlock*
		constexpr auto m_Txt_OptionMin = 0x350; // UTextBlock*
		constexpr auto m_Txt_OptionMax = 0x358; // UTextBlock*
		constexpr auto m_Txt11 = 0x360; // UTextBlock*
		constexpr auto m_Txt12 = 0x368; // UTextBlock*
		constexpr auto m_Txt13 = 0x370; // UTextBlock*
		constexpr auto m_Img_Ability = 0x378; // UMirImage*
		constexpr auto m_Txt_Title_SetItem = 0x380; // UTextBlock*
		constexpr auto m_Txt_Desc_SetItem = 0x388; // UTextBlock*
		constexpr auto m_Txt_Value_SetItem = 0x390; // UTextBlock*
		constexpr auto Txt_Value_Durability = 0x398; // UMirTextBlock*
		constexpr auto Txt_Value_Penalty = 0x3a0; // UMirTextBlock*
		constexpr auto Img_Arrow_Penalty = 0x3a8; // UMirImage*
		constexpr auto Txt_Point_Penalty = 0x3b0; // UMirTextBlock*
		constexpr auto m_Panel_2 = 0x3b8; // UHorizontalBox*
		constexpr auto m_Panel_3 = 0x3c0; // UPanelWidget*
		constexpr auto m_Panel_4 = 0x3c8; // UPanelWidget*
		constexpr auto m_Panel_5 = 0x3d0; // UPanelWidget*
		constexpr auto m_Panel_6 = 0x3d8; // UPanelWidget*
		constexpr auto RESOURCE_ICONID_LOCK = 0x3e0; // int32_t
	}

	namespace n_UNavLinkTrivial { // : UNavLinkDefinition
		constexpr auto Links = 0x28; // TArray<FNavigationLink>
		constexpr auto SegmentLinks = 0x38; // TArray<FNavigationSegmentLink>
	}

	namespace n_UPlaneFalloff { // : UFieldNodeFloat
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto MinRange = 0xb4; // float
		constexpr auto MaxRange = 0xb8; // float
		constexpr auto Default = 0xbc; // float
		constexpr auto Distance = 0xc0; // float
		constexpr auto Position = 0xc4; // FVector
		constexpr auto Normal = 0xd0; // FVector
		constexpr auto Falloff = 0xdc; // EFieldFalloffType
	}

	namespace n_UMaterialExpressionFloor { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UFieldNodeVector { // : UFieldNodeBase
		constexpr auto PrimaryComponentTick = 0x30; // FActorComponentTickFunction
		constexpr auto ComponentTags = 0x60; // TArray<FName>
		constexpr auto AssetUserData = 0x70; // TArray<UAssetUserData*>
		constexpr auto bReplicates = 0x84; // char : 1
		constexpr auto bNetAddressable = 0x84; // char : 1
		constexpr auto bAutoActivate = 0x85; // char : 1
		constexpr auto bIsActive = 0x86; // char : 1
		constexpr auto bEditableWhenInherited = 0x86; // char : 1
		constexpr auto bCanEverAffectNavigation = 0x86; // char : 1
		constexpr auto bIsEditorOnly = 0x86; // char : 1
		constexpr auto CreationMethod = 0x88; // EComponentCreationMethod
		constexpr auto OnComponentActivated = 0x89; // FScriptMulticastDelegate
		constexpr auto OnComponentDeactivated = 0x8a; // FScriptMulticastDelegate
		constexpr auto UCSModifiedProperties = 0x90; // TArray<FSimpleMemberReference>
	}

	namespace n_ASceneCaptureGameMode { // : AMM_PreviewModeBase
		constexpr auto BackGroundActor = 0x4b0; // AUIBackGroundActor*
	}

	namespace n_ABrush { // : AActor
		constexpr auto BrushType = 0x218; // EBrushType
		constexpr auto BrushColor = 0x21c; // FColor
		constexpr auto PolyFlags = 0x220; // int32_t
		constexpr auto bColored = 0x224; // char : 1
		constexpr auto bSolidWhenSelected = 0x224; // char : 1
		constexpr auto bPlaceableFromClassBrowser = 0x224; // char : 1
		constexpr auto bNotForClientOrServer = 0x224; // char : 1
		constexpr auto Brush = 0x228; // UModel*
		constexpr auto BrushComponent = 0x230; // UBrushComponent*
		constexpr auto bInManipulation = 0x238; // char : 1
		constexpr auto SavedSelections = 0x240; // TArray<FGeomSelection>
	}

	namespace n_UDistributionFloatConstantCurve { // : UDistributionFloat
		constexpr auto ConstantCurve = 0x38; // FInterpCurveFloat
	}

	namespace n_UMM_GameOption_InGame_Convenience { // : UWidgetBase
		constexpr auto Option_EffectVisual = 0x2e0; // UMM_GameOption_Select*
		constexpr auto Option_SleepModeStartTime = 0x2e8; // UMM_GameOption_Select*
		constexpr auto Option_PetVisual = 0x2f0; // UMM_GameOption_Select*
		constexpr auto Option_CameraMode = 0x2f8; // UMM_GameOption_Select*
		constexpr auto Option_UnSleepModeWhenAttacked = 0x300; // UMM_GameOption_Switch*
		constexpr auto Option_PartyUIAutoVisible = 0x308; // UMM_GameOption_Switch*
		constexpr auto Option_ComplateQuestSort = 0x310; // UMM_GameOption_Switch*
		constexpr auto Option_ComboCounterViewable = 0x318; // UMM_GameOption_Switch*
		constexpr auto Option_TradeItemAsk = 0x320; // UMM_GameOption_Switch*
		constexpr auto Option_MiniMap = 0x328; // UMM_GameOption_Switch*
		constexpr auto Option_HideGuildGiftName = 0x330; // UMM_GameOption_Switch*
		constexpr auto Option_PKAlarm = 0x338; // UMM_GameOption_Switch*
		constexpr auto Option_CharMaxLevelAlarm = 0x340; // UMM_GameOption_Switch*
		constexpr auto Option_ExpBoosterMaxLevelAlarm = 0x348; // UMM_GameOption_Switch*
		constexpr auto m_Scr_Main = 0x350; // UMirScrollBox*
		constexpr auto Option_ItemSmeltingBreakHero = 0x358; // UMM_GameOption_Switch*
		constexpr auto Option_HUDAutoResizing = 0x360; // UMM_GameOption_Switch*
		constexpr auto m_Grid_PingVisible = 0x368; // UPanelWidget*
		constexpr auto Option_PingVisible = 0x370; // UMM_GameOption_Switch*
		constexpr auto Option_PKAutoReverse = 0x378; // UMM_GameOption_Switch*
	}

	namespace n_UMM_PetSlot { // : UWidgetBase
		constexpr auto m_fOpacity_Disabled = 0x2f0; // float
		constexpr auto m_Img_TierBg = 0x300; // UMirImage*
		constexpr auto m_Img_TierEffect = 0x308; // UMirImage*
		constexpr auto m_Img_SlotType = 0x310; // UMirImage*
		constexpr auto m_Img_Icon = 0x318; // UMirImage*
		constexpr auto m_Img_Equipped = 0x320; // UMirImage*
		constexpr auto m_Img_DeckEquipped = 0x328; // UMirImage*
		constexpr auto m_Img_Leader = 0x330; // UMirImage*
		constexpr auto m_Img_Disabled = 0x338; // UMirImage*
		constexpr auto m_Txt_NeedCount = 0x340; // UMirTextBlock*
		constexpr auto m_Img_Selected = 0x348; // UMirImage*
		constexpr auto m_Img_Locked_Center = 0x350; // UMirImage*
		constexpr auto m_Img_Locked_RightTop = 0x358; // UMirImage*
		constexpr auto m_Img_Indicator = 0x360; // UMirImage*
		constexpr auto m_Img_Grade = 0x368; // UMirImage*
		constexpr auto m_Can_EquipAbleEffect = 0x370; // UPanelWidget*
		constexpr auto m_Btn_Main = 0x378; // UMirButton*
		constexpr auto m_AniEquipAbleEffect = 0x380; // UWidgetAnimation*
	}

	namespace n_UMM_ItemSealing_Material_Slot { // : UMM_Slot_Base
		constexpr auto AutoUpdateItemName = 0x3e8; // bool
		constexpr auto m_Img_GradeBgEffect = 0x3f0; // UMirImage*
		constexpr auto m_ImgEquipMaark = 0x3f8; // UMirImage*
		constexpr auto m_ImgTypeImage = 0x400; // UMirImage*
		constexpr auto m_BtnSetItem = 0x408; // UMirButton*
		constexpr auto m_ImgRemoveItemPanel = 0x410; // UPanelWidget*
		constexpr auto m_ImgRemoveItemBtn = 0x418; // UMM_Common_Btn_Symbol*
		constexpr auto m_TxtItemSmeltingLevel = 0x420; // UMirTextBlock*
		constexpr auto m_ImgPlusSpecial = 0x428; // UMirImage*
		constexpr auto Material_Switch = 0x430; // UMM_ItemMake_Switch*
		constexpr auto m_MakeType = 0x438; // EMakeItemType
		constexpr auto m_Img_Tier = 0x440; // UMirImage*
		constexpr auto m_TxtItemName = 0x448; // UMirTextBlock*
		constexpr auto m_TxtCount = 0x450; // UMirTextBlock*
		constexpr auto m_Img_UserLock = 0x458; // UMirImage*
	}

	namespace n_UMaterialExpressionMax { // : UMaterialExpression
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_UMM_Popup_ServerList { // : UWidgetBase
		constexpr auto m_Btn_Close = 0x2f0; // UMM_Common_Btn_Symbol*
		constexpr auto m_Scroll_ServerList = 0x2f8; // UScrollBox*
		constexpr auto m_Scroll_Wrap = 0x300; // UPanelWidget*
	}

	namespace n_UMM_SaleItemBasket { // : UWidgetBase
		constexpr auto m_AniStart = 0x308; // UWidgetAnimation*
		constexpr auto m_arSlot = 0x310; // TArray<UMM_Slot_Inventory*>
		constexpr auto m_CB_Close = 0x320; // UMM_Common_Btn_Symbol*
		constexpr auto m_Txt_SelectedCountValue = 0x328; // UMirTextBlock*
		constexpr auto m_Check_Option = 0x330; // UMirCheckBox*
		constexpr auto m_Wrap_List = 0x338; // UWrapBox*
		constexpr auto m_CB_Filter = 0x340; // UMM_Common_Btn_IconText*
		constexpr auto m_CB_Reset = 0x348; // UMM_Common_Btn*
		constexpr auto m_CB_AutoSelect = 0x350; // UMM_Common_Btn*
		constexpr auto m_Common_Board_Notice = 0x358; // UMM_Common_Board_Notice*
	}

	namespace n_UMM_UIAction_GreatBuilding { // : UMM_UIAction
		constexpr auto m_OpenStrID = 0x68; // int32_t
		constexpr auto m_TaxStrID = 0x6c; // int32_t
		constexpr auto m_InfoStrID = 0x70; // int32_t
		constexpr auto m_StepUpStrID = 0x74; // int32_t
		constexpr auto m_TimeWithDayStr = 0x78; // int32_t
		constexpr auto m_TimeStr = 0x7c; // int32_t
		constexpr auto m_OverLevelStr = 0x80; // int32_t
		constexpr auto m_OverExpStr = 0x84; // int32_t
		constexpr auto m_PlustStr = 0x88; // int32_t
		constexpr auto m_PercentFormatStrID = 0x8c; // int32_t
		constexpr auto m_DashStrID = 0x90; // int32_t
		constexpr auto m_SecondPerPoint = 0x9c; // int32_t
	}

	namespace n_UConsoleSettings { // : UObject
		constexpr auto MaxScrollbackSize = 0x28; // int32_t
		constexpr auto ManualAutoCompleteList = 0x30; // TArray<FAutoCompleteCommand>
		constexpr auto AutoCompleteMapPaths = 0x40; // TArray<FString>
		constexpr auto BackgroundOpacityPercentage = 0x50; // float
		constexpr auto bOrderTopToBottom = 0x54; // bool
		constexpr auto bDisplayHelpInAutoComplete = 0x55; // bool
		constexpr auto InputColor = 0x58; // FColor
		constexpr auto HistoryColor = 0x5c; // FColor
		constexpr auto AutoCompleteCommandColor = 0x60; // FColor
		constexpr auto AutoCompleteCVarColor = 0x64; // FColor
		constexpr auto AutoCompleteFadedColor = 0x68; // FColor
	}

	namespace n_UMM_ItemCollectSlot { // : UWidgetBase
		constexpr auto m_Txt_Repeat = 0x2e8; // UMirTextBlock*
		constexpr auto m_Txt_Title = 0x2f0; // UMirTextBlock*
		constexpr auto m_Txt_Effect = 0x2f8; // UMirTextBlock*
		constexpr auto m_Txt_Term = 0x300; // UMirTextBlock*
		constexpr auto m_Slot_Items = 0x308; // TArray<UMM_Slot_Collect_Item*>
		constexpr auto m_Img_Select = 0x318; // UMirImage*
		constexpr auto m_Btn_Bg = 0x320; // UMirButton*
		constexpr auto m_Check_Fav = 0x328; // UMirCheckBox*
		constexpr auto m_RepeatStrID = 0x330; // int32_t
		constexpr auto m_FromToStrID = 0x334; // int32_t
	}

	namespace n_UMM_Occupation_Observer_KillLog_Slot { // : UWidgetBase
		constexpr auto Defence_Name_Color = 0x2e0; // FLinearColor
		constexpr auto Offence_Name_Color = 0x2f0; // FLinearColor
		constexpr auto m_Txt_AttackerName = 0x300; // UMirTextBlock*
		constexpr auto m_Txt_TargetName = 0x308; // UMirTextBlock*
		constexpr auto m_Img_Defence_Attack_Icon = 0x310; // UMirImage*
		constexpr auto m_Img_Offence_Attack_Icon = 0x318; // UMirImage*
		constexpr auto m_Img_Background = 0x320; // UMirImage*
		constexpr auto AnimationStart_Left = 0x328; // UWidgetAnimation*
		constexpr auto AnimationStart_Right = 0x330; // UWidgetAnimation*
		constexpr auto AnimationEnd_Left = 0x338; // UWidgetAnimation*
		constexpr auto AnimationEnd_Right = 0x340; // UWidgetAnimation*
		constexpr auto m_OwnerWidget = 0x348; // TWeakObjectPtr<UMM_Occupation_Observer_KillLog>
	}

	namespace n_UMM_CommonVerticalTabTreeBtn { // : UMM_CommonVerticalTabBtn
		constexpr auto m_pVrtSubTree = 0x340; // UVerticalBox*
		constexpr auto m_pImgArrowUp = 0x348; // UMirImage*
		constexpr auto m_pImgArrowDown = 0x350; // UMirImage*
	}

	namespace n_UNavigationQueryFilter { // : UObject
		constexpr auto Areas = 0x28; // TArray<FNavigationFilterArea>
		constexpr auto IncludeFlags = 0x38; // FNavigationFilterFlags
		constexpr auto ExcludeFlags = 0x3c; // FNavigationFilterFlags
	}

	namespace n_UBTTask_ChangeBehaviorType { // : UBTTaskNode
		constexpr auto ReturnResult = 0x70; // EBTNodeResult
		constexpr auto NewBehaviorType = 0x71; // EBehaviorType
	}

	namespace n_UMM_FindCharSlot { // : UWidgetBase
		constexpr auto m_Txt_ServerName = 0x2e8; // UMirTextBlock*
		constexpr auto m_Img_CharClass = 0x2f0; // UMirImage*
		constexpr auto m_Txt_CharLevel = 0x2f8; // UMirTextBlock*
		constexpr auto m_Txt_CharName = 0x300; // UMirTextBlock*
		constexpr auto m_Txt_LastLogin = 0x308; // UMirTextBlock*
		constexpr auto m_CB_ServerSelect = 0x310; // UMM_Common_Btn*
	}

	namespace n_UMM_Hud_Popup_ChattingOpacity { // : UWidgetBase
		constexpr auto btn_close = 0x2e0; // UMM_Common_Btn_Symbol*
		constexpr auto Option_ChattingRenderOpacity = 0x2e8; // UMM_GameOption_Select*
	}

	namespace n_UAISenseConfig_Prediction { // : UAISenseConfig
		constexpr auto DebugColor = 0x28; // FColor
		constexpr auto MaxAge = 0x2c; // float
		constexpr auto bStartsEnabled = 0x30; // char : 1
	}

	namespace n_AMediaSoundActor { // : AActor
		constexpr auto m_pMediaSoundComponent = 0x218; // UMediaSoundComponent*
	}

	namespace n_USkinnedMeshComponent { // : UMeshComponent
		constexpr auto SkeletalMesh = 0x440; // USkeletalMesh*
		constexpr auto MasterPoseComponent = 0x448; // TWeakObjectPtr<USkinnedMeshComponent>
		constexpr auto PhysicsAssetOverride = 0x548; // UPhysicsAsset*
		constexpr auto ForcedLodModel = 0x550; // int32_t
		constexpr auto MinLodModel = 0x554; // int32_t
		constexpr auto StreamingDistanceMultiplier = 0x560; // float
		constexpr auto LODInfo = 0x570; // TArray<FSkelMeshComponentLODInfo>
		constexpr auto VisibilityBasedAnimTickOption = 0x5a4; // EVisibilityBasedAnimTickOption
		constexpr auto bOverrideMinLOD = 0x5a6; // char : 1
		constexpr auto bUseAutomaticSwitchingCPUSkinning = 0x5a8; // char : 1
		constexpr auto bUseBoundsFromMasterPoseComponent = 0x5ac; // char : 1
		constexpr auto bForceWireframe = 0x5ac; // char : 1
		constexpr auto bDisplayBones = 0x5ac; // char : 1
		constexpr auto bDisableMorphTarget = 0x5ac; // char : 1
		constexpr auto bHideSkin = 0x5ac; // char : 1
		constexpr auto bPerBoneMotionBlur = 0x5ac; // char : 1
		constexpr auto bComponentUseFixedSkelBounds = 0x5ac; // char : 1
		constexpr auto bConsiderAllBodiesForBounds = 0x5ac; // char : 1
		constexpr auto bSyncAttachParentLOD = 0x5ad; // char : 1
		constexpr auto bCanHighlightSelectedSections = 0x5ad; // char : 1
		constexpr auto bRecentlyRendered = 0x5ad; // char : 1
		constexpr auto bCastCapsuleDirectShadow = 0x5ad; // char : 1
		constexpr auto bCastCapsuleIndirectShadow = 0x5ad; // char : 1
		constexpr auto bCPUSkinning = 0x5ad; // char : 1
		constexpr auto bEnableUpdateRateOptimizations = 0x5ad; // char : 1
		constexpr auto bDisplayDebugUpdateRateOptimizations = 0x5ad; // char : 1
		constexpr auto bRenderStatic = 0x5ae; // char : 1
		constexpr auto bIgnoreMasterPoseComponentLOD = 0x5ae; // char : 1
		constexpr auto bCachedLocalBoundsUpToDate = 0x5ae; // char : 1
		constexpr auto bForceMeshObjectUpdate = 0x5ae; // char : 1
		constexpr auto CapsuleIndirectShadowMinVisibility = 0x5b0; // float
		constexpr auto CachedWorldSpaceBounds = 0x5d8; // FBoxSphereBounds
		constexpr auto CachedWorldToLocalTransform = 0x600; // FMatrix
	}

	namespace n_UMMDataTable { // : UDataTable
		constexpr auto RowStruct = 0x28; // UScriptStruct*
		constexpr auto bStripFromClientBuilds = 0x80; // char : 1
		constexpr auto bIgnoreExtraFields = 0x80; // char : 1
		constexpr auto bIgnoreMissingFields = 0x80; // char : 1
		constexpr auto ImportKeyField = 0x88; // FString
	}

	namespace n_UTutorialGuidWidget { // : UWidgetBase
		constexpr auto m_NonBGCircleEffectID = 0x2e0; // int32_t
		constexpr auto m_BGCircleEffectID = 0x2e4; // int32_t
		constexpr auto m_pFingerEffect = 0x2f0; // UUserWidget*
		constexpr auto m_pCustomEffectWidgetPanel = 0x2f8; // UCanvasPanel*
		constexpr auto m_pBox_Left = 0x300; // USizeBox*
		constexpr auto m_pBox_Top = 0x308; // USizeBox*
		constexpr auto m_pBtn_Target = 0x310; // UButton*
		constexpr auto m_pImg_BgLeft = 0x318; // UImage*
		constexpr auto m_pImg_BgTop = 0x320; // UImage*
		constexpr auto m_pImg_BgRight = 0x328; // UImage*
		constexpr auto m_pImg_BgBottom = 0x330; // UImage*
		constexpr auto m_pBtn_Left = 0x338; // UButton*
		constexpr auto m_pBtn_Top = 0x340; // UButton*
		constexpr auto m_pBtn_Right = 0x348; // UButton*
		constexpr auto m_pBtn_Bottom = 0x350; // UButton*
		constexpr auto m_pScl_Effect = 0x358; // UScaleBox*
		constexpr auto m_pEffect_Target = 0x360; // UEffectWidgetBase*
		constexpr auto m_pCustomEffectWidget = 0x368; // UEffectWidgetBase*
		constexpr auto m_pImg_GuidBoxRect = 0x370; // UImage*
		constexpr auto m_pImg_TouchBlock = 0x378; // UMirImage*
		constexpr auto m_pTargetWidget = 0x380; // UWidget*
		constexpr auto m_OldTargetPos = 0x388; // FVector2D
		constexpr auto m_OldAbsoluteSize = 0x390; // FVector2D
		constexpr auto m_AbsoluteSize = 0x398; // FVector2D
		constexpr auto ani_effect = 0x3a0; // UWidgetAnimation*
		constexpr auto cp_skip = 0x3a8; // UMirCanvasPanel*
		constexpr auto btn_skip = 0x3b0; // UMirButton*
	}

	namespace n_UMovieSceneByteTrack { // : UMovieScenePropertyTrack
		constexpr auto Enum = 0x88; // UEnum*
	}

	namespace n_UChaosDebugDrawComponent { // : UActorComponent
		constexpr auto PrimaryComponentTick = 0x30; // FActorComponentTickFunction
		constexpr auto ComponentTags = 0x60; // TArray<FName>
		constexpr auto AssetUserData = 0x70; // TArray<UAssetUserData*>
		constexpr auto bReplicates = 0x84; // char : 1
		constexpr auto bNetAddressable = 0x84; // char : 1
		constexpr auto bAutoActivate = 0x85; // char : 1
		constexpr auto bIsActive = 0x86; // char : 1
		constexpr auto bEditableWhenInherited = 0x86; // char : 1
		constexpr auto bCanEverAffectNavigation = 0x86; // char : 1
		constexpr auto bIsEditorOnly = 0x86; // char : 1
		constexpr auto CreationMethod = 0x88; // EComponentCreationMethod
		constexpr auto OnComponentActivated = 0x89; // FScriptMulticastDelegate
		constexpr auto OnComponentDeactivated = 0x8a; // FScriptMulticastDelegate
		constexpr auto UCSModifiedProperties = 0x90; // TArray<FSimpleMemberReference>
	}

	namespace n_URuntimeVirtualTextureComponent { // : USceneComponent
		constexpr auto VirtualTexture = 0x220; // URuntimeVirtualTexture*
		constexpr auto bUseStreamingLowMipsInEditor = 0x228; // bool
		constexpr auto BoundsSourceActor = 0x230; // AActor*
	}

	namespace n_USourceEffectPhaserPreset { // : USoundEffectSourcePreset
		constexpr auto Settings = 0x78; // FSourceEffectPhaserSettings
	}

	namespace n_UOnlineSubsystemExtendedSteamWidget { // : UUserWidget
		constexpr auto WebBrowser = 0x240; // UOnlineSubsystemExtendedSteamWebBrowser*
		constexpr auto m_Btn_Close = 0x268; // UButton*
	}

	namespace n_UParticleModuleTypeDataAnimTrail { // : UParticleModuleTypeDataBase
		constexpr auto bDeadTrailsOnDeactivate = 0x30; // char : 1
		constexpr auto bEnablePreviousTangentRecalculation = 0x30; // char : 1
		constexpr auto bTangentRecalculationEveryFrame = 0x30; // char : 1
		constexpr auto TilingDistance = 0x34; // float
		constexpr auto DistanceTessellationStepSize = 0x38; // float
		constexpr auto TangentTessellationStepSize = 0x3c; // float
		constexpr auto WidthTessellationStepSize = 0x40; // float
	}

	namespace n_UMM_HudGetItemMsg { // : UMM_ScrollMsg
		constexpr auto m_fShowTime_Lucky = 0x328; // float
		constexpr auto m_AniStart_Blue = 0x330; // UWidgetAnimation*
		constexpr auto m_AniStart_Purple = 0x338; // UWidgetAnimation*
		constexpr auto m_AniStart_Yellow = 0x340; // UWidgetAnimation*
		constexpr auto m_AniStart_Red = 0x348; // UWidgetAnimation*
		constexpr auto m_AniEnd_Lucky = 0x350; // UWidgetAnimation*
		constexpr auto m_Grid_Lucky = 0x378; // UPanelWidget*
		constexpr auto m_Txt_Lucky = 0x380; // UMirTextBlock*
		constexpr auto m_Img_Bg_1 = 0x388; // UImage*
		constexpr auto m_Img_Bg_2 = 0x390; // UImage*
	}

	namespace n_UMM_CostumeAbility_Info { // : UWidgetBase
		constexpr auto Img_Icon = 0x2e0; // UMirImage*
		constexpr auto Txt_Type = 0x2e8; // UMirTextBlock*
		constexpr auto Txt_Value = 0x2f0; // UMirTextBlock*
	}

	namespace n_UMM_Popup_BlackIronShop_State { // : UWidgetBase
		constexpr auto Txt_Title = 0x2e0; // UMirTextBlock*
		constexpr auto txt_count = 0x2e8; // UMirTextBlock*
		constexpr auto txt_profit = 0x2f0; // UMirTextBlock*
		constexpr auto Txt_Percent = 0x2f8; // UMirTextBlock*
		constexpr auto Txt_Desc_1 = 0x300; // UMirRichTextBlock*
		constexpr auto Txt_Desc_2 = 0x308; // UMirRichTextBlock*
		constexpr auto slot_black_iron = 0x310; // UMM_Slot_Material*
		constexpr auto img_count = 0x318; // UMirImage*
		constexpr auto img_profit = 0x320; // UMirImage*
		constexpr auto btn_close = 0x328; // UMM_Common_Btn_Symbol*
		constexpr auto Btn_Cancel = 0x330; // UMM_Common_Btn*
		constexpr auto btn_re_open = 0x338; // UMM_Common_Btn*
		constexpr auto btn_drag_back = 0x340; // UMM_Common_Btn*
		constexpr auto btn_confirm = 0x348; // UMM_Common_Btn*
	}

	namespace n_UChildConnection { // : UNetConnection
		constexpr auto Parent = 0x19c0; // UNetConnection*
	}

	namespace n_AGameState { // : AGameStateBase
		constexpr auto MatchState = 0x258; // FName
		constexpr auto PreviousMatchState = 0x260; // FName
		constexpr auto ElapsedTime = 0x268; // int32_t
	}

	namespace n_UMM_Btn_HudDirSkill { // : UWidgetBase
		constexpr auto m_iEffectID_EndCooltime = 0x344; // int32_t
		constexpr auto m_iEffectID_Use = 0x348; // int32_t
		constexpr auto m_iEffectID_Smite = 0x34c; // int32_t
		constexpr auto m_iEffectID_ContentsOpen = 0x350; // int32_t
		constexpr auto m_arrBrushCoolTimeFont = 0x358; // TArray<FBrushObject>
		constexpr auto m_CoolTimeFontColor = 0x368; // FLinearColor
		constexpr auto m_CoolTimeFontOverColor = 0x378; // FLinearColor
		constexpr auto m_fRageGaugeInterpSpeed = 0x388; // float
		constexpr auto AreaButton = 0x390; // UButton*
		constexpr auto LockIcon = 0x398; // UImage*
		constexpr auto SilenceIcon = 0x3a0; // UMirImage*
		constexpr auto SkillIcon = 0x3a8; // UImage*
		constexpr auto CoolTimeGauge = 0x3b0; // UImage*
		constexpr auto RageGauge = 0x3b8; // UImage*
		constexpr auto CoolTimeCountWarpBox = 0x3c0; // UAlignedWrapBox*
		constexpr auto CoolTimeCount_2 = 0x3c8; // UImage*
		constexpr auto CoolTimeCount_11 = 0x3d0; // UImage*
		constexpr auto CoolTimeCount_101 = 0x3d8; // UImage*
		constexpr auto EffectPanel = 0x3e0; // UPanelWidget*
		constexpr auto SmiteEffectPanel = 0x3e8; // UPanelWidget*
		constexpr auto SmiteAnimation = 0x3f0; // UWidgetAnimation*
		constexpr auto ClickEffectPanel = 0x3f8; // UPanelWidget*
		constexpr auto ClickAnimation = 0x400; // UWidgetAnimation*
		constexpr auto CoolEndEffectPanel = 0x408; // UPanelWidget*
		constexpr auto CoolEndAnimation = 0x410; // UWidgetAnimation*
	}

	namespace n_UMM_CharAbility_Info_Pet { // : UWidgetBase
		constexpr auto m_pParentWidget = 0x260; // UWidgetBase*
		constexpr auto m_arChildWidget = 0x268; // TArray<TWeakObjectPtr<UWidgetBase>>
		constexpr auto m_arMirTextBlock = 0x280; // TArray<TWeakObjectPtr<UMirTextBlock>>
		constexpr auto m_arMirRichTextBlock = 0x290; // TArray<TWeakObjectPtr<UMirRichTextBlock>>
		constexpr auto m_arMirEditableText = 0x2a0; // TArray<TWeakObjectPtr<UMirEditableText>>
		constexpr auto m_arMirImage = 0x2b0; // TArray<TWeakObjectPtr<UMirImage>>
	}

	namespace n_UMM_CharInfo_GuildBtnList { // : UWidgetBase
		constexpr auto m_Can_AnimationBtn = 0x2f0; // UCanvasPanel*
		constexpr auto m_Btn_AniStart = 0x2f8; // UMirButton*
		constexpr auto m_StartAniOneLine = 0x300; // UWidgetAnimation*
		constexpr auto m_EndAniOneLine = 0x308; // UWidgetAnimation*
		constexpr auto m_StartAniTwoLine = 0x310; // UWidgetAnimation*
		constexpr auto m_EndAniTwoLine = 0x318; // UWidgetAnimation*
		constexpr auto STR_MSG_SERVERVISIT = 0x320; // int32_t
		constexpr auto STR_MSG_TARGET_SERVERVISIT = 0x324; // int32_t
		constexpr auto STR_MSG_TARGET_SERVERVISIT2 = 0x328; // int32_t
	}

	namespace n_UMM_MessageWidgetBase { // : UWidgetBase
		constexpr auto m_pParentWidget = 0x260; // UWidgetBase*
		constexpr auto m_arChildWidget = 0x268; // TArray<TWeakObjectPtr<UWidgetBase>>
		constexpr auto m_arMirTextBlock = 0x280; // TArray<TWeakObjectPtr<UMirTextBlock>>
		constexpr auto m_arMirRichTextBlock = 0x290; // TArray<TWeakObjectPtr<UMirRichTextBlock>>
		constexpr auto m_arMirEditableText = 0x2a0; // TArray<TWeakObjectPtr<UMirEditableText>>
		constexpr auto m_arMirImage = 0x2b0; // TArray<TWeakObjectPtr<UMirImage>>
	}

	namespace n_UMM_UIShopPeriodDetailSlot { // : UWidgetBase
		constexpr auto mTxtPeriodTitle = 0x2e0; // UMirTextBlock*
	}

	namespace n_UPlaySoundNotify { // : UAnimNotify
		constexpr auto sound = 0x38; // USoundBase*
		constexpr auto VolumeMultiplier = 0x40; // float
		constexpr auto PitchMultiplier = 0x44; // float
		constexpr auto bFollow = 0x48; // char : 1
		constexpr auto AttachName = 0x4c; // FName
		constexpr auto SkillSoundConcurrency = 0x58; // USoundConcurrency*
	}

	namespace n_ULocalizedOverlays { // : UOverlays
		constexpr auto DefaultOverlays = 0x28; // UBasicOverlays*
		constexpr auto LocaleToOverlaysMap = 0x30; // TMap<FString, UBasicOverlays*>
	}

	namespace n_ALightmassCharacterIndirectDetailVolume { // : AVolume
		constexpr auto BrushType = 0x218; // EBrushType
		constexpr auto BrushColor = 0x21c; // FColor
		constexpr auto PolyFlags = 0x220; // int32_t
		constexpr auto bColored = 0x224; // char : 1
		constexpr auto bSolidWhenSelected = 0x224; // char : 1
		constexpr auto bPlaceableFromClassBrowser = 0x224; // char : 1
		constexpr auto bNotForClientOrServer = 0x224; // char : 1
		constexpr auto Brush = 0x228; // UModel*
		constexpr auto BrushComponent = 0x230; // UBrushComponent*
		constexpr auto bInManipulation = 0x238; // char : 1
		constexpr auto SavedSelections = 0x240; // TArray<FGeomSelection>
	}

	namespace n_UMM_GameOptionKeySettingSlot { // : UWidgetBase
		constexpr auto Txt_Name = 0x2e0; // UMirTextBlock*
		constexpr auto txt_key = 0x2e8; // UMirTextBlock*
		constexpr auto img_selected = 0x2f0; // UMirImage*
		constexpr auto Btn_Main = 0x2f8; // UMirButton*
	}

	namespace n_UMM_New_B_Force { // : UWidgetBase
		constexpr auto m_C_Scr_Tab = 0x2f0; // UMirScrollBox*
		constexpr auto m_arTab = 0x2f8; // TArray<UMM_New_Force_Tab*>
		constexpr auto m_C_Skill_Info = 0x308; // UMM_New_Force_Skill_Info*
		constexpr auto m_C_Info = 0x310; // UMM_New_Force_Info*
		constexpr auto m_C_Page = 0x318; // UMM_New_Force_Page*
		constexpr auto m_C_AbilityList = 0x320; // UMM_New_Force_Ability_List*
		constexpr auto m_C_Upgrade = 0x328; // UMM_New_Force_Upgrade*
		constexpr auto m_Img_RenderTarget = 0x330; // UImage*
		constexpr auto m_TargetPos = 0x338; // UImage*
	}

	namespace n_UMM_Popup_Xdraco_Sealing { // : UWidgetBase
		constexpr auto STRING_SEAL_TITLE = 0x2e0; // int32_t
		constexpr auto STRING_UNSEAL_TITLE = 0x2e4; // int32_t
		constexpr auto STRING_SEAL_DESC = 0x2e8; // int32_t
		constexpr auto STRING_SEAL_DELAY_DESC = 0x2ec; // int32_t
		constexpr auto STRING_UNSEAL_DESC = 0x2f0; // int32_t
		constexpr auto m_Txt_Title = 0x2f8; // UMirTextBlock*
		constexpr auto m_Txt_ItemName = 0x300; // UMirTextBlock*
		constexpr auto m_Slot_Item = 0x308; // UMM_Slot_Material*
		constexpr auto m_Rtxt_Desc = 0x310; // UMirRichTextBlock*
		constexpr auto m_C_Btn_Close = 0x318; // UMM_Common_Btn_Symbol*
		constexpr auto m_C_Btn_Cancel = 0x320; // UMM_Common_Btn*
		constexpr auto m_C_Btn_UnSeal = 0x328; // UMM_Common_Btn*
		constexpr auto m_C_Btn_Seal = 0x330; // UMM_Common_Btn_Cost*
	}

	namespace n_UMenuAnchor { // : UContentWidget
		constexpr auto MenuClass = 0x120; // UUserWidget*
		constexpr auto OnGetMenuContentEvent = 0x128; // DelegateProperty
		constexpr auto Placement = 0x138; // EMenuPlacement
		constexpr auto bFitInWindow = 0x139; // bool
		constexpr auto ShouldDeferPaintingAfterWindowContent = 0x13a; // bool
		constexpr auto UseApplicationMenuStack = 0x13b; // bool
		constexpr auto OnMenuOpenChanged = 0x140; // FScriptMulticastDelegate
	}

	namespace n_UMM_Customizing_Scroll { // : UCustomizingComponentBase
		constexpr auto m_ScrollBox = 0x308; // UMirScrollBox*
		constexpr auto m_ListSlotArray = 0x310; // TArray<UMM_Customizing_ListItem*>
	}

	namespace n_UMovieSceneSkeletalAnimationTrack { // : UMovieSceneNameableTrack
		constexpr auto AnimationSections = 0x58; // TArray<UMovieSceneSection*>
		constexpr auto AnimationOptimizedSection = 0x68; // UMovieSceneSkeletalAnimationOptimizedSection*
		constexpr auto bUseLegacySectionIndexBlend = 0x70; // bool
	}

	namespace n_UMM_B_Hud { // : UWidgetBase
		constexpr auto m_StrongPointWinTarget = 0x2f0; // UMM_StrongPoint_HudSlot*
		constexpr auto m_pTargetInfoWidget = 0x2f8; // UMM_HudTargetInfo*
		constexpr auto m_pChatWidget = 0x300; // UMM_Hud_Chat*
		constexpr auto m_pHudBottomWidget = 0x308; // UMM_HudBottom*
		constexpr auto m_pRightMenu = 0x310; // UMM_B_HudRightMenu*
		constexpr auto m_QuickSlot = 0x318; // UMM_HudQuickSlot*
		constexpr auto m_pCanTotalQuickSlot = 0x320; // UMirCanvasPanel*
		constexpr auto m_pBtnTotalQuickSlot = 0x328; // UMirButton*
		constexpr auto m_pAlarmHelper = 0x330; // UMM_HudAlramHelperList*
		constexpr auto m_pUserInfoWidget = 0x338; // UMM_HudUserInfo*
		constexpr auto m_pSkillSetWidget = 0x348; // UMM_B_SkillSet*
		constexpr auto m_pLeftTabMenuWidget = 0x358; // UMM_HudLeftTabMenu*
		constexpr auto m_pProgressBarWidget = 0x360; // UMM_HudProgressBar*
		constexpr auto m_pMiniMapWidget = 0x368; // TWeakObjectPtr<UMM_HudMiniMap>
		constexpr auto m_pMapInfoWidget = 0x370; // UMM_HudMapInfo*
		constexpr auto m_pCanInteractionSize = 0x378; // UCanvasPanel*
		constexpr auto m_pHUDVirtualJoystick = 0x380; // UMM_HUDVirtualJoystick*
		constexpr auto m_pCanAutoMoveDistance = 0x388; // UMirCanvasPanel*
		constexpr auto m_pTextAutoMoveDistance = 0x390; // UMirTextBlock*
		constexpr auto m_pCanImmediateMove = 0x398; // UMirCanvasPanel*
		constexpr auto m_pBtnImmediateMove = 0x3a0; // UButton*
		constexpr auto m_pTxtImmediateMove = 0x3a8; // UMirTextBlock*
		constexpr auto m_pHudInviteAlarm = 0x3b0; // UMM_Hud_Invite_Alarm*
		constexpr auto m_pHudDungeonMenuWidget = 0x3b8; // TWeakObjectPtr<UMM_HudDungeonMenu>
		constexpr auto m_pHudMagicSquareMenuWidget = 0x3c0; // TWeakObjectPtr<UMM_HudMagicSquareMenu>
		constexpr auto m_pHudOccupationMenuWidget = 0x3c8; // TWeakObjectPtr<UMM_HudOccupationMenu>
		constexpr auto m_pSkillVirtualStick = 0x3d0; // TWeakObjectPtr<UMM_SkillVirtualStick>
		constexpr auto m_pLeftBottomGroup = 0x3d8; // UCanvasPanel*
		constexpr auto m_pHudMenuGroup01 = 0x3e0; // UAlignedWrapBox*
		constexpr auto m_pCanMenuGuild = 0x3e8; // UMirCanvasPanel*
		constexpr auto m_pImgIndicatorGuild = 0x3f0; // UMirImage*
		constexpr auto m_pBtnMenuGuild = 0x3f8; // UMirButton*
		constexpr auto m_pGridMenuEffectGuild = 0x400; // UPanelWidget*
		constexpr auto m_pCanMenuMission = 0x408; // UMirCanvasPanel*
		constexpr auto m_pImgIndicatorMission = 0x410; // UMirImage*
		constexpr auto m_pBtnMenuMission = 0x418; // UMirButton*
		constexpr auto m_pGridMenuEffectMission = 0x420; // UPanelWidget*
		constexpr auto m_pCanMenuEquip = 0x428; // UMirCanvasPanel*
		constexpr auto m_pImgIndicatorEquip = 0x430; // UMirImage*
		constexpr auto m_pBtnMenuEquip = 0x438; // UMirButton*
		constexpr auto m_pGridMenuEffectEquip = 0x440; // UPanelWidget*
		constexpr auto m_pImgDurabilityBGEquip = 0x448; // UMirImage*
		constexpr auto m_pImgDurabilityIconEquip = 0x450; // UMirImage*
		constexpr auto m_pTxtDurabilityEquip = 0x458; // UMirTextBlock*
		constexpr auto m_pCanMenuAlarm = 0x460; // UMirCanvasPanel*
		constexpr auto m_pImgIndicatorAlarm = 0x468; // UMirImage*
		constexpr auto m_pTextIndicatorAlarm = 0x470; // UMirTextBlock*
		constexpr auto m_pBtnMenuAlarm = 0x478; // UMirButton*
		constexpr auto m_pGridMenuEffectAlarm = 0x480; // UPanelWidget*
		constexpr auto m_pEffectWidgetAlarm = 0x488; // UEffectWidgetBase*
		constexpr auto m_pCanMenuTotal = 0x490; // UMirCanvasPanel*
		constexpr auto m_pImgIndicatorTotal = 0x498; // UMirImage*
		constexpr auto m_pBtnMenuTotal = 0x4a0; // UMirButton*
		constexpr auto m_pHudMenuGroup02 = 0x4a8; // UHorizontalBox*
		constexpr auto m_pCanMenuMail = 0x4b0; // UMirCanvasPanel*
		constexpr auto m_pImgIndicatorMail = 0x4b8; // UMirImage*
		constexpr auto m_pBtnMenuMail = 0x4c0; // UMirButton*
		constexpr auto m_pGridMenuEffectMail = 0x4c8; // UPanelWidget*
		constexpr auto m_pCanMenuShop = 0x4d0; // UMirCanvasPanel*
		constexpr auto m_pImgIndicatorShop = 0x4d8; // UMirImage*
		constexpr auto m_pBtnMenuShop = 0x4e0; // UMirButton*
		constexpr auto m_pGridMenuEffectShop = 0x4e8; // UPanelWidget*
		constexpr auto m_pCanMenuShopAds = 0x4f0; // UMirCanvasPanel*
		constexpr auto m_pImgIndicatorShopAds = 0x4f8; // UMirImage*
		constexpr auto m_pBtnMenuShopAds = 0x500; // UMirButton*
		constexpr auto m_pGridMenuEffectShopAds = 0x508; // UPanelWidget*
		constexpr auto m_pCanMenuEvent = 0x510; // UMirCanvasPanel*
		constexpr auto m_pBtnMenuEvent = 0x518; // UMirButton*
		constexpr auto m_pImgIndicatorEvent = 0x520; // UMirImage*
		constexpr auto m_pGridMenuEffectEvent = 0x528; // UPanelWidget*
		constexpr auto m_pCanGuildSupport = 0x530; // UMirCanvasPanel*
		constexpr auto m_pBtn_GuildSupport = 0x538; // UMirButton*
		constexpr auto m_pTextGuildSupport = 0x540; // UMirTextBlock*
		constexpr auto m_pTextExpBooster = 0x548; // UMirTextBlock*
		constexpr auto m_pBtn_ExpBooster = 0x550; // UMirButton*
		constexpr auto m_pGridMenuEffectExpBooster = 0x558; // UPanelWidget*
		constexpr auto m_pEffectWidgetExpBoosterActive = 0x560; // UEffectWidgetBase*
		constexpr auto m_pEffectWidgetExpBoosterInActive = 0x568; // UEffectWidgetBase*
		constexpr auto m_pBtnEmotion = 0x570; // UMirButton*
		constexpr auto m_pGridBtnEffectEmotion = 0x578; // UPanelWidget*
		constexpr auto m_pBtnChat = 0x580; // UMirButton*
		constexpr auto m_pImgIndicatorChat = 0x588; // UMirImage*
		constexpr auto m_pTextIndicatorChat = 0x590; // UMirTextBlock*
		constexpr auto m_pGridBtnEffectChat = 0x598; // UPanelWidget*
		constexpr auto m_pBtnChangeCamera = 0x5a0; // UMirButton*
		constexpr auto m_pTextChangeCamera = 0x5a8; // UMirTextBlock*
		constexpr auto m_pGridBtnEffectChangeCamera = 0x5b0; // UPanelWidget*
		constexpr auto m_pCanBtnVehicle = 0x5b8; // UMirCanvasPanel*
		constexpr auto m_pImgVehicleCool = 0x5c0; // UImage*
		constexpr auto m_pBtnVehicle = 0x5c8; // UMirButton*
		constexpr auto m_pGridBtnEffectVehicle = 0x5d0; // UPanelWidget*
		constexpr auto m_HudPKPenalty = 0x5d8; // UMM_Hud_PKPenalty*
		constexpr auto m_HudTargetList = 0x5e0; // UMM_HudTargetList*
		constexpr auto m_HudChannelReady = 0x5e8; // UMM_Hud_ChannelReady*
		constexpr auto m_pCanAutoBattleButton = 0x5f8; // UMirCanvasPanel*
		constexpr auto m_pImgAutoBattleButton = 0x600; // UMirImage*
		constexpr auto m_pGridEffectAutoBattleButton = 0x608; // UPanelWidget*
		constexpr auto m_pEffectAutoBattleOn = 0x610; // UEffectWidgetBase*
		constexpr auto m_pBtnAutoBattle = 0x618; // UMirButton*
		constexpr auto m_pCanAutoGatherButton = 0x620; // UMirCanvasPanel*
		constexpr auto m_pImgAutoGatherButton = 0x628; // UMirImage*
		constexpr auto m_pGridEffectAutoGatherButton = 0x630; // UPanelWidget*
		constexpr auto m_pEffectAutoGatherOn = 0x638; // UEffectWidgetBase*
		constexpr auto m_pBtnAutoGather = 0x640; // UMirButton*
		constexpr auto AutoCounterPanel = 0x648; // UMirCanvasPanel*
		constexpr auto AutoCounterButton = 0x650; // UMirButton*
		constexpr auto AutoCounterEffectParent = 0x658; // UPanelWidget*
		constexpr auto AutoCounterEffect = 0x660; // UEffectWidgetBase*
		constexpr auto m_Spc_ContentsSpace = 0x668; // USpacer*
		constexpr auto m_HudScaleBox = 0x670; // UScaleBox*
		constexpr auto m_HudSiszeBox = 0x678; // USizeBox*
		constexpr auto m_arHudPetBuffIcon = 0x680; // UMM_HudPetBuffIcon* [0xa]
		constexpr auto m_Can_HudBtn_PetChange = 0x6d0; // UPanelWidget*
		constexpr auto m_Btn_PetChange = 0x6d8; // UMirButton*
		constexpr auto m_Grid_BtnEffect_PetChange = 0x6e0; // UPanelWidget*
		constexpr auto m_Overlay_QuickTab = 0x6e8; // UPanelWidget*
		constexpr auto m_Can_PetQuickTab = 0x6f0; // UPanelWidget*
		constexpr auto m_Can_MagicStoneQuickTab = 0x6f8; // UPanelWidget*
		constexpr auto m_Can_MysticalPieceQuickTab = 0x700; // UPanelWidget*
		constexpr auto m_PetQuickTab = 0x708; // UMM_PetQuickTab*
		constexpr auto m_MagicStoneQuickTab = 0x710; // UMM_MagicStoneQuickTab*
		constexpr auto m_MysticalPieceQuickTab = 0x718; // UMM_MysticalPieceQuickTab*
		constexpr auto m_Btn_QuickTabClose = 0x720; // UMirButton*
		constexpr auto m_Ani_PetChange_Start = 0x728; // UWidgetAnimation*
		constexpr auto m_Ani_PetChange_End = 0x730; // UWidgetAnimation*
		constexpr auto m_iMSTRID_PhaseCantUseMenu = 0x738; // int32_t
		constexpr auto m_iMSTRID_DualCantUseMenu = 0x73c; // int32_t
		constexpr auto m_iMSTRID_DontMoveArea = 0x740; // int32_t
		constexpr auto m_fShowLogTime = 0x744; // float
	}

	namespace n_AGeometryCollectionDebugDrawActor { // : AActor
		constexpr auto WarningMessage = 0x218; // FGeometryCollectionDebugDrawWarningMessage
		constexpr auto SelectedRigidBody = 0x220; // FGeometryCollectionDebugDrawActorSelectedRigidBody
		constexpr auto bDebugDrawWholeCollection = 0x238; // bool
		constexpr auto bDebugDrawHierarchy = 0x239; // bool
		constexpr auto bDebugDrawClustering = 0x23a; // bool
		constexpr auto HideGeometry = 0x23b; // EGeometryCollectionDebugDrawActorHideGeometry
		constexpr auto bShowRigidBodyId = 0x23c; // bool
		constexpr auto bShowRigidBodyCollision = 0x23d; // bool
		constexpr auto bCollisionAtOrigin = 0x23e; // bool
		constexpr auto bShowRigidBodyTransform = 0x23f; // bool
		constexpr auto bShowRigidBodyInertia = 0x240; // bool
		constexpr auto bShowRigidBodyVelocity = 0x241; // bool
		constexpr auto bShowRigidBodyForce = 0x242; // bool
		constexpr auto bShowRigidBodyInfos = 0x243; // bool
		constexpr auto bShowTransformIndex = 0x244; // bool
		constexpr auto bShowTransform = 0x245; // bool
		constexpr auto bShowParent = 0x246; // bool
		constexpr auto bShowLevel = 0x247; // bool
		constexpr auto bShowConnectivityEdges = 0x248; // bool
		constexpr auto bShowGeometryIndex = 0x249; // bool
		constexpr auto bShowGeometryTransform = 0x24a; // bool
		constexpr auto bShowBoundingBox = 0x24b; // bool
		constexpr auto bShowFaces = 0x24c; // bool
		constexpr auto bShowFaceIndices = 0x24d; // bool
		constexpr auto bShowFaceNormals = 0x24e; // bool
		constexpr auto bShowSingleFace = 0x24f; // bool
		constexpr auto SingleFaceIndex = 0x250; // int32_t
		constexpr auto bShowVertices = 0x254; // bool
		constexpr auto bShowVertexIndices = 0x255; // bool
		constexpr auto bShowVertexNormals = 0x256; // bool
		constexpr auto bUseActiveVisualization = 0x257; // bool
		constexpr auto PointThickness = 0x258; // float
		constexpr auto LineThickness = 0x25c; // float
		constexpr auto bTextShadow = 0x260; // bool
		constexpr auto TextScale = 0x264; // float
		constexpr auto NormalScale = 0x268; // float
		constexpr auto AxisScale = 0x26c; // float
		constexpr auto ArrowScale = 0x270; // float
		constexpr auto RigidBodyIdColor = 0x274; // FColor
		constexpr auto RigidBodyTransformScale = 0x278; // float
		constexpr auto RigidBodyCollisionColor = 0x27c; // FColor
		constexpr auto RigidBodyInertiaColor = 0x280; // FColor
		constexpr auto RigidBodyVelocityColor = 0x284; // FColor
		constexpr auto RigidBodyForceColor = 0x288; // FColor
		constexpr auto RigidBodyInfoColor = 0x28c; // FColor
		constexpr auto TransformIndexColor = 0x290; // FColor
		constexpr auto TransformScale = 0x294; // float
		constexpr auto LevelColor = 0x298; // FColor
		constexpr auto ParentColor = 0x29c; // FColor
		constexpr auto ConnectivityEdgeThickness = 0x2a0; // float
		constexpr auto GeometryIndexColor = 0x2a4; // FColor
		constexpr auto GeometryTransformScale = 0x2a8; // float
		constexpr auto BoundingBoxColor = 0x2ac; // FColor
		constexpr auto FaceColor = 0x2b0; // FColor
		constexpr auto FaceIndexColor = 0x2b4; // FColor
		constexpr auto FaceNormalColor = 0x2b8; // FColor
		constexpr auto SingleFaceColor = 0x2bc; // FColor
		constexpr auto VertexColor = 0x2c0; // FColor
		constexpr auto VertexIndexColor = 0x2c4; // FColor
		constexpr auto VertexNormalColor = 0x2c8; // FColor
		constexpr auto SpriteComponent = 0x2d0; // UBillboardComponent*
	}

	namespace n_UAnimCompress_RemoveLinearKeys { // : UAnimCompress
		constexpr auto MaxPosDiff = 0x50; // float
		constexpr auto MaxAngleDiff = 0x54; // float
		constexpr auto MaxScaleDiff = 0x58; // float
		constexpr auto MaxEffectorDiff = 0x5c; // float
		constexpr auto MinEffectorDiff = 0x60; // float
		constexpr auto EffectorDiffSocket = 0x64; // float
		constexpr auto ParentKeyScale = 0x68; // float
		constexpr auto bRetarget = 0x6c; // char : 1
		constexpr auto bActuallyFilterLinearKeys = 0x6c; // char : 1
		constexpr auto bOptimizeForForwardPlayback = 0x6c; // char : 1
		constexpr auto bUseDecompression = 0x6c; // char : 1
		constexpr auto bUseMultithreading = 0x6c; // char : 1
	}

	namespace n_UMM_Hud_ServerVisitMap { // : UWidgetBase
		constexpr auto m_Btn_Close = 0x2f0; // UMM_Common_Btn_Symbol*
		constexpr auto m_Scr_WaypointList = 0x2f8; // UMirScrollBox*
		constexpr auto m_Btn_Move = 0x300; // UMM_Common_Btn_Cost*
		constexpr auto m_arWaypointCategroy = 0x308; // UMM_ServerVisit_Waypoint_Category* [0x4]
	}

	namespace n_UMM_Map_Player { // : UWidgetBase
		constexpr auto m_fRaderScale = 0x2e0; // float
		constexpr auto m_SpcMain = 0x2e8; // USpacer*
		constexpr auto m_ImgView = 0x2f0; // UImage*
		constexpr auto m_ImgPlayer = 0x2f8; // UImage*
	}

	namespace n_UBTDecorator_Loop { // : UBTDecorator
		constexpr auto NumLoops = 0x68; // int32_t
		constexpr auto bInfiniteLoop = 0x6c; // bool
		constexpr auto InfiniteLoopTimeoutTime = 0x70; // float
	}

	namespace n_UChaosEventListenerComponent { // : UActorComponent
		constexpr auto PrimaryComponentTick = 0x30; // FActorComponentTickFunction
		constexpr auto ComponentTags = 0x60; // TArray<FName>
		constexpr auto AssetUserData = 0x70; // TArray<UAssetUserData*>
		constexpr auto bReplicates = 0x84; // char : 1
		constexpr auto bNetAddressable = 0x84; // char : 1
		constexpr auto bAutoActivate = 0x85; // char : 1
		constexpr auto bIsActive = 0x86; // char : 1
		constexpr auto bEditableWhenInherited = 0x86; // char : 1
		constexpr auto bCanEverAffectNavigation = 0x86; // char : 1
		constexpr auto bIsEditorOnly = 0x86; // char : 1
		constexpr auto CreationMethod = 0x88; // EComponentCreationMethod
		constexpr auto OnComponentActivated = 0x89; // FScriptMulticastDelegate
		constexpr auto OnComponentDeactivated = 0x8a; // FScriptMulticastDelegate
		constexpr auto UCSModifiedProperties = 0x90; // TArray<FSimpleMemberReference>
	}

	namespace n_UMM_GameOption_Language { // : UWidgetBase
		constexpr auto wb_language = 0x2e0; // UWrapBox*
	}

	namespace n_UMM_Auction_Slot_Sell { // : UMM_Auction_Slot_Base
		constexpr auto m_pSlotItem = 0x370; // UMM_Slot_Inventory*
		constexpr auto m_pTxtName = 0x378; // UMirTextBlock*
		constexpr auto m_pTxtPrice = 0x380; // UMirTextBlock*
		constexpr auto m_pTxtRemainTime = 0x388; // UMirRichTextBlock*
		constexpr auto m_pBtnCancle = 0x390; // UMM_Common_Btn*
	}

	namespace n_UMM_B_ItemCollection { // : UWidgetBase
		constexpr auto m_CollectionID = 0x2f0; // int32_t
		constexpr auto m_Set_Horizon = 0x2f8; // UMM_CommonHorizontalTabSet*
		constexpr auto m_Set_Vertical = 0x300; // UMM_CommonVerticalTabSet*
		constexpr auto m_TierFilter = 0x308; // UMM_Collect_TierList*
		constexpr auto m_Btn_Search = 0x310; // UMM_Common_Btn_Symbol*
		constexpr auto m_Btn_CancelSearch = 0x318; // UMM_Common_Btn_Symbol*
		constexpr auto m_InputTxt_Search = 0x320; // UMirEditableText*
		constexpr auto m_Notice_NoResult = 0x328; // UMM_Common_Board_Notice*
		constexpr auto m_Combo_Filter = 0x330; // UMM_Common_ComboList*
		constexpr auto m_SearchSmeltTab = 0x338; // UMM_Auction_Tab_Search_Enchant*
		constexpr auto m_ListView_CollectionList = 0x340; // UMirListView*
		constexpr auto m_Switer_Infos = 0x348; // UWidgetSwitcher*
		constexpr auto m_Collection_Progress = 0x350; // UMM_ItemCollectProgress*
		constexpr auto m_Collection_Effects = 0x358; // UMM_ItemCollectEffect*
		constexpr auto m_Collection_ItemInfo = 0x360; // UMM_CollectItemInfo*
		constexpr auto m_Btn_Info = 0x368; // UMM_Common_ToolTipBtn*
		constexpr auto m_SuccessRegistStrID = 0x370; // int32_t
		constexpr auto m_WarningInsertTextStr = 0x374; // int32_t
		constexpr auto m_WarningOverInsertTextStr = 0x378; // int32_t
		constexpr auto m_HasNoResultStr = 0x37c; // int32_t
		constexpr auto m_HasNoFilterStr = 0x380; // int32_t
		constexpr auto m_InsertSearchStr = 0x384; // int32_t
		constexpr auto m_InfoToolTipID = 0x388; // int32_t
		constexpr auto m_arCollectionSlotObj = 0x390; // TArray<UCollectionSlotObj*>
	}

	namespace n_UInGameAdManager { // : UPlatformInterfaceBase
		constexpr auto bShouldPauseWhileAdOpen = 0x38; // char : 1
		constexpr auto ClickedBannerDelegates = 0x40; // TArray<DelegateProperty>
		constexpr auto ClosedAdDelegates = 0x50; // TArray<DelegateProperty>
	}

	namespace n_UMM_PCAnimInstance { // : UMM_CharacterBaseAnimInstance
		constexpr auto PC = 0x2b0; // AMM_PC*
	}

	namespace n_UMM_Popup_SelectRegion { // : UWidgetBase
		constexpr auto m_pParentWidget = 0x260; // UWidgetBase*
		constexpr auto m_arChildWidget = 0x268; // TArray<TWeakObjectPtr<UWidgetBase>>
		constexpr auto m_arMirTextBlock = 0x280; // TArray<TWeakObjectPtr<UMirTextBlock>>
		constexpr auto m_arMirRichTextBlock = 0x290; // TArray<TWeakObjectPtr<UMirRichTextBlock>>
		constexpr auto m_arMirEditableText = 0x2a0; // TArray<TWeakObjectPtr<UMirEditableText>>
		constexpr auto m_arMirImage = 0x2b0; // TArray<TWeakObjectPtr<UMirImage>>
	}

	namespace n_UPopup_DungeonReward_Info3 { // : UWidgetBase
		constexpr auto txtDifficulty = 0x2e0; // UMirTextBlock*
		constexpr auto arImgDifficultStar = 0x2e8; // UMirImage* [0x5]
		constexpr auto txtFixedDeadNum = 0x310; // UMirTextBlock*
		constexpr auto txtDeadNum = 0x318; // UMirTextBlock*
		constexpr auto canReward = 0x320; // UMirCanvasPanel*
	}

	namespace n_UInterpTrackInstToggle { // : UInterpTrackInst
		constexpr auto Action = 0x28; // ETrackToggleAction
		constexpr auto LastUpdatePosition = 0x2c; // float
		constexpr auto bSavedActiveState = 0x30; // char : 1
	}

	namespace n_UProgressBar { // : UWidget
		constexpr auto WidgetStyle = 0x108; // FProgressBarStyle
		constexpr auto Style = 0x2a8; // USlateWidgetStyleAsset*
		constexpr auto BackgroundImage = 0x2b0; // USlateBrushAsset*
		constexpr auto FillImage = 0x2b8; // USlateBrushAsset*
		constexpr auto MarqueeImage = 0x2c0; // USlateBrushAsset*
		constexpr auto Percent = 0x2c8; // float
		constexpr auto BarFillType = 0x2cc; // EProgressBarFillType
		constexpr auto bIsMarquee = 0x2cd; // bool
		constexpr auto BorderPadding = 0x2d0; // FVector2D
		constexpr auto PercentDelegate = 0x2d8; // DelegateProperty
		constexpr auto FillColorAndOpacity = 0x2e8; // FLinearColor
		constexpr auto FillColorAndOpacityDelegate = 0x2f8; // DelegateProperty
	}

	namespace n_UGeometryCacheCodecBase { // : UObject
		constexpr auto TopologyRanges = 0x28; // TArray<int32_t>
	}

	namespace n_UMaterialExpressionParameter { // : UMaterialExpression
		constexpr auto ParameterName = 0x40; // FName
		constexpr auto ExpressionGUID = 0x48; // FGuid
	}

	namespace n_UMM_Achievement_Option_Slot { // : UWidgetBase
		constexpr auto Txt_OptionName = 0x2e0; // UMirTextBlock*
		constexpr auto Txt_OptionValue = 0x2e8; // UMirTextBlock*
	}

	namespace n_UMM_Dominion_Base_List { // : UWidgetBase
		constexpr auto m_ListView_DominionList = 0x2f0; // UMirListView*
		constexpr auto m_arDominionSlotObj = 0x310; // TArray<UDominionSlotObj*>
	}

	namespace n_UMM_Hud_Chat_Tab { // : UWidgetBase
		constexpr auto Chat_Indicator = 0x2f8; // UMM_Hud_Chat_Indicator*
		constexpr auto Img_ChannelIcon = 0x300; // UMirImage*
		constexpr auto Txt_ChannelName = 0x308; // UMirTextBlock*
		constexpr auto Img_Select = 0x310; // UMirImage*
		constexpr auto Btn_Tab = 0x318; // UMirButton*
		constexpr auto Img_AllianceChannelIcon = 0x320; // UMirImage*
	}

	namespace n_UMM_Item_Make_Slider_BigInteger { // : UWidgetBase
		constexpr auto m_pTxt_CurValueNum = 0x338; // UMirTextBlock*
		constexpr auto m_pBtn_DecreaseValue = 0x340; // UMM_Common_Btn_Symbol*
		constexpr auto m_pBtn_IncreaseValue = 0x348; // UMM_Common_Btn_Symbol*
		constexpr auto m_pBtn_MaxValue = 0x350; // UMM_Common_Btn_Symbol*
		constexpr auto m_pBtn_MinValue = 0x358; // UMM_Common_Btn_Symbol*
		constexpr auto m_pBtn_IncreaseUnit = 0x360; // UMM_Common_Btn*
		constexpr auto m_pBtn_KeyPad = 0x368; // UMM_Common_Btn_Symbol*
		constexpr auto m_pImgCostIcon = 0x370; // UMirImage*
		constexpr auto m_iMinValue = 0x378; // int64_t
		constexpr auto m_iMaxValue = 0x380; // int64_t
		constexpr auto m_iCurValue = 0x388; // int64_t
		constexpr auto m_iStackValue = 0x390; // int64_t
		constexpr auto m_iIncreaseUnit = 0x398; // int64_t
		constexpr auto m_Lock = 0x3a0; // bool
	}

	namespace n_UMM_Occupation_KillLog { // : UWidgetBase
		constexpr auto Panel_Main = 0x2f0; // UPanelWidget*
		constexpr auto KillLogList = 0x2f8; // TArray<UMM_Occupation_KillLog_Slot*>
		constexpr auto m_InitAsyncLoad = 0x308; // bool
		constexpr auto m_AddMessageLatency = 0x30c; // float
	}

	namespace n_ACameraShakeTrigger { // : AActor
		constexpr auto m_BoxExtent = 0x218; // FVector
		constexpr auto m_pBoxComponent = 0x228; // UBoxComponent*
	}

	namespace n_UEditableGameplayTagQueryExpression_NoTagsMatch { // : UEditableGameplayTagQueryExpression
		constexpr auto Tags = 0x28; // FGameplayTagContainer
	}

	namespace n_UCreateSessionCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto OnFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_UVideoCaptureProtocol { // : UFrameGrabberProtocol
		constexpr auto bUseCompression = 0x68; // bool
		constexpr auto CompressionQuality = 0x6c; // float
	}

	namespace n_UMaterialExpressionBlackBody { // : UMaterialExpression
		constexpr auto Temp = 0x40; // FExpressionInput
	}

	namespace n_UMM_Hud_Chat_Indicator { // : UWidgetBase
		constexpr auto IndicatorType = 0x2f0; // EChatIndicatorType
		constexpr auto txt_count = 0x2f8; // UMirTextBlock*
	}

	namespace n_UMaterialFunctionMaterialLayerBlendInstance { // : UMaterialFunctionInstance
		constexpr auto Parent = 0x40; // UMaterialFunctionInterface*
		constexpr auto Base = 0x48; // UMaterialFunctionInterface*
		constexpr auto ScalarParameterValues = 0x50; // TArray<FScalarParameterValue>
		constexpr auto VectorParameterValues = 0x60; // TArray<FVectorParameterValue>
		constexpr auto TextureParameterValues = 0x70; // TArray<FTextureParameterValue>
		constexpr auto FontParameterValues = 0x80; // TArray<FFontParameterValue>
		constexpr auto StaticSwitchParameterValues = 0x90; // TArray<FStaticSwitchParameter>
		constexpr auto StaticComponentMaskParameterValues = 0xa0; // TArray<FStaticComponentMaskParameter>
		constexpr auto RuntimeVirtualTextureParameterValues = 0xb0; // TArray<FRuntimeVirtualTextureParameterValue>
	}

	namespace n_UMM_Guild_ShopRecordListSlot { // : UWidgetBase
		constexpr auto m_Txt_Num = 0x2e0; // UMirTextBlock*
		constexpr auto m_Txt_Name = 0x2e8; // UMirTextBlock*
		constexpr auto m_Txt_Desc = 0x2f0; // UMirRichTextBlock*
		constexpr auto m_Txt_Time = 0x2f8; // UMirTextBlock*
		constexpr auto m_ProfileSlot = 0x300; // UMM_ProfileSlot*
		constexpr auto m_InvenSlot = 0x308; // UMM_Slot_Inventory*
	}

	namespace n_UMaterialExpressionDesaturation { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Fraction = 0x54; // FExpressionInput
		constexpr auto LuminanceFactors = 0x68; // FLinearColor
	}

	namespace n_UMovieSceneAudioSection { // : UMovieSceneSection
		constexpr auto sound = 0xe0; // USoundBase*
		constexpr auto StartFrameOffset = 0xe8; // FFrameNumber
		constexpr auto StartOffset = 0xec; // float
		constexpr auto AudioStartTime = 0xf0; // float
		constexpr auto AudioDilationFactor = 0xf4; // float
		constexpr auto AudioVolume = 0xf8; // float
		constexpr auto SoundVolume = 0x100; // FMovieSceneFloatChannel
		constexpr auto PitchMultiplier = 0x1a0; // FMovieSceneFloatChannel
		constexpr auto bLooping = 0x240; // bool
		constexpr auto bSuppressSubtitles = 0x241; // bool
		constexpr auto bOverrideAttenuation = 0x242; // bool
		constexpr auto AttenuationSettings = 0x248; // USoundAttenuation*
		constexpr auto OnQueueSubtitles = 0x250; // DelegateProperty
		constexpr auto OnAudioFinished = 0x260; // FScriptMulticastDelegate
		constexpr auto OnAudioPlaybackPercent = 0x270; // FScriptMulticastDelegate
	}

	namespace n_USubmixEffectReverbFastPreset { // : USoundEffectSubmixPreset
		constexpr auto Settings = 0x9c; // FSubmixEffectReverbFastSettings
	}

	namespace n_UMM_GameOption_Graphic { // : UWidgetBase
		constexpr auto Option_Simple = 0x2f0; // UMM_GameOption_Select*
		constexpr auto Option_ScreenEffect = 0x2f8; // UMM_GameOption_Select*
		constexpr auto Option_Textrue = 0x300; // UMM_GameOption_Select*
		constexpr auto Option_Resolution = 0x308; // UMM_GameOption_Select*
		constexpr auto Option_FrameSpeed = 0x310; // UMM_GameOption_Select*
		constexpr auto Option_Visual = 0x318; // UMM_GameOption_Select*
		constexpr auto Option_SkillEffect = 0x320; // UMM_GameOption_Select*
		constexpr auto Option_Shadow = 0x328; // UMM_GameOption_Select*
	}

	namespace n_UMM_New_Force_Ability_Slot { // : UWidgetBase
		constexpr auto m_C_Img_Ability = 0x2f8; // UMirImage*
		constexpr auto m_C_Txt_AbilityName = 0x300; // UMirTextBlock*
		constexpr auto m_C_Txt_AbilityLevel = 0x308; // UMirTextBlock*
		constexpr auto m_C_Txt_AbilityValue = 0x310; // UMirTextBlock*
		constexpr auto m_C_Img_Selected = 0x318; // UMirImage*
		constexpr auto m_Txt_BloodName = 0x320; // UMirTextBlock*
		constexpr auto m_Grid_Ability = 0x328; // UPanelWidget*
		constexpr auto m_Txt_NextAbility = 0x330; // UMirTextBlock*
		constexpr auto m_Txt_PenaltyAbility = 0x338; // UMirTextBlock*
		constexpr auto m_C_Btn_Main = 0x340; // UMirButton*
		constexpr auto m_Grid_Effect = 0x348; // UPanelWidget*
		constexpr auto m_C_Img_Indicator = 0x350; // UMirImage*
	}

	namespace n_UMM_Popup_ServerSelect_Global { // : UWidgetBase
		constexpr auto ServerCongestion_Normal = 0x2e0; // FLinearColor
		constexpr auto ServerCongestion_Busy = 0x2f0; // FLinearColor
		constexpr auto ServerCongestion_Saturation = 0x300; // FLinearColor
		constexpr auto Filter_Normal = 0x310; // FLinearColor
		constexpr auto Filter_Selected = 0x320; // FLinearColor
		constexpr auto m_Can_ServerSelect = 0x360; // UPanelWidget*
		constexpr auto m_Can_FindChar = 0x368; // UPanelWidget*
		constexpr auto m_Img_TotalFilter_Selected = 0x370; // UMirImage*
		constexpr auto m_Img_RecommendFilter_Selected = 0x378; // UMirImage*
		constexpr auto m_Img_MyFilter_Selected = 0x380; // UMirImage*
		constexpr auto m_Txt_TotalFilter = 0x388; // UMirTextBlock*
		constexpr auto m_Txt_RecommendFilter = 0x390; // UMirTextBlock*
		constexpr auto m_Txt_MyFilter = 0x398; // UMirTextBlock*
		constexpr auto m_Btn_TotalFilter = 0x3a0; // UMirButton*
		constexpr auto m_Btn_RecommendFilter = 0x3a8; // UMirButton*
		constexpr auto m_Btn_MyFilter = 0x3b0; // UMirButton*
		constexpr auto m_Img_ServerCongestionInfo_1 = 0x3b8; // UMirImage*
		constexpr auto m_Img_ServerCongestionInfo_2 = 0x3c0; // UMirImage*
		constexpr auto m_Img_ServerCongestionInfo_3 = 0x3c8; // UMirImage*
		constexpr auto m_Txt_ServerCongestionInfo_1 = 0x3d0; // UMirTextBlock*
		constexpr auto m_Txt_ServerCongestionInfo_2 = 0x3d8; // UMirTextBlock*
		constexpr auto m_Txt_ServerCongestionInfo_3 = 0x3e0; // UMirTextBlock*
		constexpr auto m_CB_ServerSelectClose = 0x3e8; // UMM_Common_Btn_Symbol*
		constexpr auto m_Scr_RegionList = 0x3f0; // UMirScrollBox*
		constexpr auto m_Scr_ServerList = 0x3f8; // UMirScrollBox*
		constexpr auto m_arRegionSlot = 0x400; // TArray<UMM_RegionSlot_Global*>
		constexpr auto m_arServerGroup = 0x410; // TArray<UMM_ServerGroup_Global*>
		constexpr auto m_Can_TopArrow = 0x420; // UPanelWidget*
		constexpr auto m_Can_BottomArrow = 0x428; // UPanelWidget*
		constexpr auto m_Ani_Arrow = 0x430; // UWidgetAnimation*
		constexpr auto m_Txt_RecentServer = 0x438; // UMirTextBlock*
		constexpr auto m_CB_ServerSelectRefresh = 0x440; // UMM_Common_Btn_Symbol*
		constexpr auto m_CB_GoToFindChar = 0x448; // UMM_Common_Btn*
		constexpr auto m_CB_FindCharClose = 0x450; // UMM_Common_Btn_Symbol*
		constexpr auto m_Scr_FindCharList = 0x458; // UMirScrollBox*
		constexpr auto m_arCharSlot = 0x460; // TArray<UMM_FindCharSlot_Global*>
	}

	namespace n_UMM_Popup_Guild_Wanted { // : UWidgetBase
		constexpr auto Txt_Title = 0x2f0; // UMirTextBlock*
		constexpr auto Txt_Desc = 0x2f8; // UMirTextBlock*
		constexpr auto btn_close = 0x300; // UMM_Common_Btn_Symbol*
		constexpr auto lst_slot = 0x308; // TArray<UMM_Popup_Guild_WantedSlot*>
		constexpr auto Ani_Open = 0x318; // UWidgetAnimation*
		constexpr auto Ani_Close = 0x320; // UWidgetAnimation*
		constexpr auto m_pToolTip = 0x328; // UMM_Common_ToolTipBtn*
	}

	namespace n_ASpectatorBeaconClient { // : AOnlineBeaconClient
		constexpr auto DestSessionId = 0x2d8; // FString
		constexpr auto PendingReservation = 0x2e8; // FSpectatorReservation
		constexpr auto RequestType = 0x360; // ESpectatorClientRequestType
		constexpr auto bPendingReservationSent = 0x361; // bool
		constexpr auto bCancelReservation = 0x362; // bool
	}

	namespace n_UMM_ServerGroup_Global { // : UWidgetBase
		constexpr auto m_Txt_Title = 0x2f0; // UMirTextBlock*
		constexpr auto m_Txt_Ping = 0x2f8; // UMirTextBlock*
		constexpr auto m_Overlay_Maintenance = 0x300; // UPanelWidget*
		constexpr auto m_Txt_Maintenance = 0x308; // UMirTextBlock*
		constexpr auto m_Wrap_ServerSlot = 0x310; // UPanelWidget*
	}

	namespace n_UChaosGameplayEventDispatcher { // : UChaosEventListenerComponent
		constexpr auto CollisionEventRegistrations = 0x1c8; // TMap<UPrimitiveComponent*, FChaosHandlerSet>
		constexpr auto BreakEventRegistrations = 0x218; // TMap<UPrimitiveComponent*, FBreakEventCallbackWrapper>
	}

	namespace n_USafeZone { // : UContentWidget
		constexpr auto PadLeft = 0x120; // bool
		constexpr auto PadRight = 0x121; // bool
		constexpr auto PadTop = 0x122; // bool
		constexpr auto PadBottom = 0x123; // bool
	}

	namespace n_UVoipListenerSynthComponent { // : USynthComponent
		constexpr auto bAutoDestroy = 0x220; // char : 1
		constexpr auto bStopWhenOwnerDestroyed = 0x220; // char : 1
		constexpr auto bAllowSpatialization = 0x220; // char : 1
		constexpr auto bOverrideAttenuation = 0x220; // char : 1
		constexpr auto bOutputToBusOnly = 0x224; // char : 1
		constexpr auto AttenuationSettings = 0x228; // USoundAttenuation*
		constexpr auto AttenuationOverrides = 0x230; // FSoundAttenuationSettings
		constexpr auto ConcurrencySettings = 0x520; // USoundConcurrency*
		constexpr auto ConcurrencySet = 0x528; // TSet<USoundConcurrency*>
		constexpr auto SoundClass = 0x578; // USoundClass*
		constexpr auto SourceEffectChain = 0x580; // USoundEffectSourcePresetChain*
		constexpr auto SoundSubmix = 0x588; // USoundSubmix*
		constexpr auto SoundSubmixSends = 0x590; // TArray<FSoundSubmixSendInfo>
		constexpr auto BusSends = 0x5a0; // TArray<FSoundSourceBusSendInfo>
		constexpr auto Modulation = 0x5b0; // FSoundModulation
		constexpr auto PreEffectBusSends = 0x5c0; // TArray<FSoundSourceBusSendInfo>
		constexpr auto bIsUISound = 0x5d0; // char : 1
		constexpr auto bIsPreviewSound = 0x5d0; // char : 1
		constexpr auto EnvelopeFollowerAttackTime = 0x5d4; // int32_t
		constexpr auto EnvelopeFollowerReleaseTime = 0x5d8; // int32_t
		constexpr auto OnAudioEnvelopeValue = 0x5e0; // FScriptMulticastDelegate
		constexpr auto Synth = 0x610; // USynthSound*
		constexpr auto AudioComponent = 0x618; // UAudioComponent*
	}

	namespace n_UMM_Guild_BlackIron_Inventory { // : UWidgetBase
		constexpr auto m_pStorageTotalValue = 0x2f0; // UMM_GuildInventoryGoods*
		constexpr auto m_pInComeTitle = 0x2f8; // UMM_Guild_BlackIron_Title*
		constexpr auto m_pInComeRemainTime = 0x300; // UMM_Guild_BlackIron_Slot*
		constexpr auto m_pInComeExpect = 0x308; // UMM_Guild_BlackIron_Slot*
		constexpr auto m_pSellTitle = 0x310; // UMM_Guild_BlackIron_Title*
		constexpr auto m_pSellRemainTime = 0x318; // UMM_Guild_BlackIron_Slot*
		constexpr auto m_pSellProfit = 0x320; // UMM_Guild_BlackIron_Slot*
		constexpr auto m_pSellRemainValue = 0x328; // UMM_Guild_BlackIron_Slot*
		constexpr auto m_pTextOpen = 0x330; // UMirTextBlock*
		constexpr auto m_pGiveTitle = 0x338; // UMM_Guild_BlackIron_Title*
		constexpr auto m_pGiveValue = 0x340; // UMM_Guild_BlackIron_Slot*
		constexpr auto m_pScrollLog = 0x348; // UMirScrollBox*
		constexpr auto m_pBoardNotice = 0x350; // UMM_Common_Board_Notice*
		constexpr auto m_pBtnSymbolHistoryPrev = 0x358; // UMM_Common_Btn_Symbol*
		constexpr auto m_pBtnSymbolHistoryNext = 0x360; // UMM_Common_Btn_Symbol*
		constexpr auto m_pTxtHistoryCurrPage = 0x368; // UMirTextBlock*
		constexpr auto m_pBtnSendGuild = 0x370; // UMM_Common_Btn*
		constexpr auto m_pBtnSendOtherGuild = 0x378; // UMM_Common_Btn*
		constexpr auto m_pBtnIron = 0x380; // UMM_Common_Btn*
		constexpr auto m_pBtnSendOtherUser = 0x388; // UMM_Common_Btn*
		constexpr auto m_pImgBlackIronIndicator = 0x390; // UMirImage*
		constexpr auto m_pBtnInput = 0x398; // UMM_Common_Btn_Inven*
		constexpr auto m_pBtnOutPut = 0x3a0; // UMM_Common_Btn_Inven*
	}

	namespace n_UMM_Guild_DevRewardDonation { // : UWidgetBase
		constexpr auto mTxtTitle = 0x2e0; // UMirTextBlock*
		constexpr auto mBtnClose = 0x2e8; // UMM_Common_Btn_Symbol*
		constexpr auto mTxtDevExpTitle = 0x2f0; // UMirTextBlock*
		constexpr auto mImgDevExpIcon = 0x2f8; // UMirImage*
		constexpr auto mTxtDevExpValue = 0x300; // UMirTextBlock*
		constexpr auto mTxtGuildExpTitle = 0x308; // UMirTextBlock*
		constexpr auto mImgGuildExpIcon = 0x310; // UMirImage*
		constexpr auto mTxtGuildExpValue = 0x318; // UMirTextBlock*
		constexpr auto mTxtMoneyTitle_2 = 0x320; // UMirTextBlock*
		constexpr auto mImgMoneyIcon_2 = 0x328; // UMirImage*
		constexpr auto mTxtMoneyValue_2 = 0x330; // UMirTextBlock*
		constexpr auto mTxtMoneyTitle_3 = 0x338; // UMirTextBlock*
		constexpr auto mImgMoneyIcon_3 = 0x340; // UMirImage*
		constexpr auto mTxtMoneyValue_3 = 0x348; // UMirTextBlock*
	}

	namespace n_UMM_Slot_StatusContents { // : UWidgetBase
		constexpr auto Txt_Left = 0x2f0; // UMirTextBlock*
		constexpr auto Txt_Right0 = 0x2f8; // UMirTextBlock*
		constexpr auto Txt_Right1 = 0x300; // UMirTextBlock*
		constexpr auto Txt_Right2 = 0x308; // UMirTextBlock*
		constexpr auto m_Txt1 = 0x310; // UMirTextBlock*
		constexpr auto m_Txt2 = 0x318; // UMirTextBlock*
		constexpr auto Btn_Main = 0x320; // UMirButton*
		constexpr auto m_LinkContentsID = 0x328; // int32_t
	}

	namespace n_UMovieSceneMediaSection { // : UMovieSceneSection
		constexpr auto MediaSource = 0xe0; // UMediaSource*
		constexpr auto bLooping = 0xe8; // bool
		constexpr auto StartFrameOffset = 0xec; // FFrameNumber
		constexpr auto MediaTexture = 0xf0; // UMediaTexture*
		constexpr auto MediaSoundComponent = 0xf8; // UMediaSoundComponent*
		constexpr auto bUseExternalMediaPlayer = 0x100; // bool
		constexpr auto ExternalMediaPlayer = 0x108; // UMediaPlayer*
	}

	namespace n_UMovieScene3DConstraintSection { // : UMovieSceneSection
		constexpr auto ConstraintId = 0xe0; // FGuid
		constexpr auto ConstraintBindingID = 0xf0; // FMovieSceneObjectBindingID
	}

	namespace n_UInterpTrackInstFloatProp { // : UInterpTrackInstProperty
		constexpr auto ResetFloat = 0x40; // float
	}

	namespace n_APlayerState { // : AInfo
		constexpr auto Score = 0x218; // float
		constexpr auto PlayerName = 0x220; // FString
		constexpr auto PlayerId = 0x240; // int32_t
		constexpr auto Ping = 0x244; // char
		constexpr auto bShouldUpdateReplicatedPing = 0x246; // char : 1
		constexpr auto bIsSpectator = 0x246; // char : 1
		constexpr auto bOnlySpectator = 0x246; // char : 1
		constexpr auto bIsABot = 0x246; // char : 1
		constexpr auto bIsInactive = 0x246; // char : 1
		constexpr auto bFromPreviousLevel = 0x246; // char : 1
		constexpr auto StartTime = 0x248; // int32_t
		constexpr auto EngineMessageClass = 0x250; // ULocalMessage*
		constexpr auto SavedNetworkAddress = 0x260; // FString
		constexpr auto UniqueId = 0x270; // FUniqueNetIdRepl
		constexpr auto PawnPrivate = 0x2a0; // APawn*
		constexpr auto PlayerNamePrivate = 0x320; // FString
	}

	namespace n_AAutoBattleMoveTrigger { // : AActor
		constexpr auto Next = 0x238; // AAutoBattleMoveTrigger*
		constexpr auto prev = 0x240; // AAutoBattleMoveTrigger*
		constexpr auto m_TriggerIndex = 0x248; // int32_t
		constexpr auto m_bManualMove = 0x24c; // bool
		constexpr auto m_pBoxCollision = 0x250; // UBoxComponent*
		constexpr auto m_CurrentCollisionState = 0x258; // ECollisionEnabled
	}

	namespace n_UBlendSpace1D { // : UBlendSpaceBase
		constexpr auto bScaleAnimation = 0x148; // bool
	}

	namespace n_UBTDecorator { // : UBTAuxiliaryNode
		constexpr auto bInverseCondition = 0x60; // char : 1
		constexpr auto FlowAbortMode = 0x64; // EBTFlowAbortMode
	}

	namespace n_ANavLinkProxy { // : AActor
		constexpr auto PointLinks = 0x228; // TArray<FNavigationLink>
		constexpr auto SegmentLinks = 0x238; // TArray<FNavigationSegmentLink>
		constexpr auto SmartLinkComp = 0x248; // UNavLinkCustomComponent*
		constexpr auto bSmartLinkIsRelevant = 0x250; // bool
		constexpr auto OnSmartLinkReached = 0x258; // FScriptMulticastDelegate
	}

	namespace n_USafeZoneSlot { // : UPanelSlot
		constexpr auto bIsTitleSafe = 0x38; // bool
		constexpr auto SafeAreaScale = 0x3c; // FMargin
		constexpr auto HAlign = 0x4c; // EHorizontalAlignment
		constexpr auto VAlign = 0x4d; // EVerticalAlignment
		constexpr auto Padding = 0x50; // FMargin
	}

	namespace n_UMM_BP_Attendance_Day_Slot { // : UWidgetBase
		constexpr auto m_Panel_Today = 0x2e0; // UPanelWidget*
		constexpr auto m_Panel_Oneday = 0x2e8; // UPanelWidget*
		constexpr auto m_Txt_Name = 0x2f0; // UMirTextBlock*
		constexpr auto m_ItemSlot_2 = 0x2f8; // UMM_Slot_Material*
		constexpr auto m_ItemSlot_3 = 0x300; // UMM_Slot_Material*
		constexpr auto m_Panel_Yellow = 0x308; // UPanelWidget*
		constexpr auto m_Panel_Blue = 0x310; // UPanelWidget*
		constexpr auto m_Img_Yellow = 0x318; // UMirImage*
		constexpr auto m_Img_Blue = 0x320; // UMirImage*
		constexpr auto m_C_Btn_Main = 0x328; // UMM_Common_Btn*
	}

	namespace n_UMM_DailyWork_List_Slot { // : UWidgetBase
		constexpr auto RewardItem = 0x2f0; // TArray<UMM_Slot_Material*>
		constexpr auto Img_Symbol = 0x300; // UMirImage*
		constexpr auto Txt_Title = 0x308; // UMirTextBlock*
		constexpr auto Txt_Mission = 0x310; // UMirTextBlock*
		constexpr auto Btn_QuestAction = 0x318; // UMM_Common_Btn*
		constexpr auto Img_End = 0x320; // UMirImage*
		constexpr auto Img_Disable = 0x328; // UMirImage*
		constexpr auto m_QuestID = 0x330; // int32_t
		constexpr auto REWARD_SLOT_COUNT = 0x334; // int32_t
	}

	namespace n_UMM_Inventory_AutoSmelt { // : UMM_NewInventory_Base
		constexpr auto m_InvenTab = 0x2f8; // UMM_NewInventoryTab*
		constexpr auto m_Inven = 0x300; // UMM_NewInventory*
	}

	namespace n_UMaterialExpressionFmod { // : UMaterialExpression
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_AMatineeActor { // : AActor
		constexpr auto MatineeData = 0x218; // UInterpData*
		constexpr auto MatineeControllerName = 0x220; // FName
		constexpr auto PlayRate = 0x228; // float
		constexpr auto bPlayOnLevelLoad = 0x22c; // char : 1
		constexpr auto bForceStartPos = 0x22c; // char : 1
		constexpr auto ForceStartPosition = 0x230; // float
		constexpr auto bLooping = 0x234; // char : 1
		constexpr auto bRewindOnPlay = 0x234; // char : 1
		constexpr auto bNoResetOnRewind = 0x234; // char : 1
		constexpr auto bRewindIfAlreadyPlaying = 0x234; // char : 1
		constexpr auto bDisableRadioFilter = 0x234; // char : 1
		constexpr auto bClientSideOnly = 0x234; // char : 1
		constexpr auto bSkipUpdateIfNotVisible = 0x234; // char : 1
		constexpr auto bIsSkippable = 0x234; // char : 1
		constexpr auto PreferredSplitScreenNum = 0x238; // int32_t
		constexpr auto bDisableMovementInput = 0x23c; // char : 1
		constexpr auto bDisableLookAtInput = 0x23c; // char : 1
		constexpr auto bHidePlayer = 0x23c; // char : 1
		constexpr auto bHideHud = 0x23c; // char : 1
		constexpr auto GroupActorInfos = 0x240; // TArray<FInterpGroupActorInfo>
		constexpr auto bShouldShowGore = 0x250; // char : 1
		constexpr auto GroupInst = 0x258; // TArray<UInterpGroupInst*>
		constexpr auto CameraCuts = 0x268; // TArray<FCameraCutInfo>
		constexpr auto bIsPlaying = 0x278; // char : 1
		constexpr auto bReversePlayback = 0x278; // char : 1
		constexpr auto bPaused = 0x278; // char : 1
		constexpr auto bPendingStop = 0x278; // char : 1
		constexpr auto InterpPosition = 0x27c; // float
		constexpr auto ReplicationForceIsPlaying = 0x284; // char
		constexpr auto OnPlay = 0x288; // FScriptMulticastDelegate
		constexpr auto OnStop = 0x298; // FScriptMulticastDelegate
		constexpr auto OnPause = 0x2a8; // FScriptMulticastDelegate
	}

	namespace n_UMaterialExpressionAdd { // : UMaterialExpression
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_UMM_Hud_Chat_SearchWhisper { // : UWidgetBase
		constexpr auto Btn_JoinGuild = 0x300; // UMM_Common_Btn*
		constexpr auto btn_search = 0x308; // UMM_Common_Btn_Symbol*
		constexpr auto Panel_Search = 0x310; // UPanelWidget*
		constexpr auto Panel_EmptyGuild = 0x318; // UPanelWidget*
		constexpr auto Toggle_Guild = 0x320; // UMirCheckBox*
		constexpr auto Toggle_Party = 0x328; // UMirCheckBox*
		constexpr auto Toggle_Search = 0x330; // UMirCheckBox*
		constexpr auto Txt_Guild = 0x338; // UMirTextBlock*
		constexpr auto Txt_Party = 0x340; // UMirTextBlock*
		constexpr auto Txt_Search = 0x348; // UMirTextBlock*
		constexpr auto EditTxt_SearchNickname = 0x350; // UMirEditableText*
		constexpr auto m_ListView_UserList = 0x358; // UMirListView*
		constexpr auto m_arUserSlotObj = 0x360; // TArray<UHudChatUserSlotObj*>
		constexpr auto empty_notice = 0x370; // UMM_Common_Board_Notice*
	}

	namespace n_UMM_ClosedTraining_Slot_BaseSphere { // : UWidgetBase
		constexpr auto m_pParentWidget = 0x260; // UWidgetBase*
		constexpr auto m_arChildWidget = 0x268; // TArray<TWeakObjectPtr<UWidgetBase>>
		constexpr auto m_arMirTextBlock = 0x280; // TArray<TWeakObjectPtr<UMirTextBlock>>
		constexpr auto m_arMirRichTextBlock = 0x290; // TArray<TWeakObjectPtr<UMirRichTextBlock>>
		constexpr auto m_arMirEditableText = 0x2a0; // TArray<TWeakObjectPtr<UMirEditableText>>
		constexpr auto m_arMirImage = 0x2b0; // TArray<TWeakObjectPtr<UMirImage>>
	}

	namespace n_UEnvQueryOption { // : UObject
		constexpr auto Generator = 0x28; // UEnvQueryGenerator*
		constexpr auto Tests = 0x30; // TArray<UEnvQueryTest*>
	}

	namespace n_UMM_UIShopGachaFixedPet { // : UWidgetBase
		constexpr auto m_Txt_Title = 0x2e0; // UMirTextBlock*
		constexpr auto m_Txt_EndTime = 0x2e8; // UMirRichTextBlock*
		constexpr auto m_Img_Pet = 0x2f0; // UMirImage*
		constexpr auto m_Txt_PetName = 0x2f8; // UMirTextBlock*
		constexpr auto m_Btn_GotoPet = 0x300; // UMirButton*
	}

	namespace n_AGroupMeditationTrigger { // : AActor
		constexpr auto m_CircleRange = 0x218; // float
		constexpr auto m_CircleColor = 0x21c; // FColor
		constexpr auto m_pSphereCollision = 0x220; // USphereComponent*
	}

	namespace n_UComboButtonWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto ComboButtonStyle = 0x30; // FComboButtonStyle
	}

	namespace n_UMovieSceneEventTrack { // : UMovieSceneNameableTrack
		constexpr auto bFireEventsWhenForwards = 0x58; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0x58; // char : 1
		constexpr auto EventPosition = 0x5c; // EFireEventsAtPosition
		constexpr auto EventReceivers = 0x60; // TArray<FMovieSceneObjectBindingID>
		constexpr auto Sections = 0x70; // TArray<UMovieSceneSection*>
	}

	namespace n_UPaperTileMap { // : UObject
		constexpr auto MapWidth = 0x28; // int32_t
		constexpr auto MapHeight = 0x2c; // int32_t
		constexpr auto TileWidth = 0x30; // int32_t
		constexpr auto TileHeight = 0x34; // int32_t
		constexpr auto PixelsPerUnrealUnit = 0x38; // float
		constexpr auto SeparationPerTileX = 0x3c; // float
		constexpr auto SeparationPerTileY = 0x40; // float
		constexpr auto SeparationPerLayer = 0x44; // float
		constexpr auto SelectedTileSet = 0x48; // UPaperTileSet*
		constexpr auto Material = 0x70; // UMaterialInterface*
		constexpr auto TileLayers = 0x78; // TArray<UPaperTileLayer*>
		constexpr auto CollisionThickness = 0x88; // float
		constexpr auto SpriteCollisionDomain = 0x8c; // ESpriteCollisionMode
		constexpr auto ProjectionMode = 0x8d; // ETileMapProjectionMode
		constexpr auto HexSideLength = 0x90; // int32_t
		constexpr auto BodySetup = 0x98; // UBodySetup*
		constexpr auto LayerNameIndex = 0xa0; // int32_t
	}

	namespace n_UMM_Popup_DeathPenalty { // : UWidgetBase
		constexpr auto m_arrVerticalBox = 0x2e0; // TArray<UVerticalBox*>
		constexpr auto m_arrImgIcon = 0x2f0; // TArray<UMirImage*>
		constexpr auto m_arrTxtName = 0x300; // TArray<UMirTextBlock*>
		constexpr auto m_arrBtnClick = 0x310; // TArray<UMirButton*>
		constexpr auto m_pImgBg = 0x320; // UMirImage*
	}

	namespace n_UWebBrowser { // : UWidget
		constexpr auto OnUrlChanged = 0x108; // FScriptMulticastDelegate
		constexpr auto OnBeforePopup = 0x118; // FScriptMulticastDelegate
		constexpr auto InitialURL = 0x128; // FString
		constexpr auto bSupportsTransparency = 0x138; // bool
	}

	namespace n_UMapPreviewTool { // : UWidgetBase
		constexpr auto m_pParentWidget = 0x260; // UWidgetBase*
		constexpr auto m_arChildWidget = 0x268; // TArray<TWeakObjectPtr<UWidgetBase>>
		constexpr auto m_arMirTextBlock = 0x280; // TArray<TWeakObjectPtr<UMirTextBlock>>
		constexpr auto m_arMirRichTextBlock = 0x290; // TArray<TWeakObjectPtr<UMirRichTextBlock>>
		constexpr auto m_arMirEditableText = 0x2a0; // TArray<TWeakObjectPtr<UMirEditableText>>
		constexpr auto m_arMirImage = 0x2b0; // TArray<TWeakObjectPtr<UMirImage>>
	}

	namespace n_USubmixEffectFilterPreset { // : USoundEffectSubmixPreset
		constexpr auto Settings = 0x74; // FSubmixEffectFilterSettings
	}

	namespace n_UMM_B_Transcend { // : UWidgetBase
		constexpr auto m_InvenForge = 0x300; // UMM_Inventory_Transcend*
		constexpr auto m_Btn_GoToItemMake = 0x308; // UMirButton*
		constexpr auto Grid_Unselect = 0x310; // UPanelWidget*
		constexpr auto Grid_Select = 0x318; // UPanelWidget*
		constexpr auto Grid_Material = 0x320; // UPanelWidget*
		constexpr auto Panel_Safety = 0x328; // UPanelWidget*
		constexpr auto Slot_Target = 0x330; // UMM_Slot_Registered_Circle*
		constexpr auto Tag_Target = 0x338; // UMM_Common_Item_NameTag*
		constexpr auto Pan_SuccessPrecnet = 0x340; // UPanelWidget*
		constexpr auto Txt_SuccessPercentTitle = 0x348; // UMirTextBlock*
		constexpr auto Txt_SuccessPercent = 0x350; // UMirTextBlock*
		constexpr auto Txt_Safety = 0x358; // UMirTextBlock*
		constexpr auto Stat_Smelt = 0x360; // UMM_AbilityState_Item*
		constexpr auto m_Abilities = 0x368; // TArray<UMM_AbilityState_Item*>
		constexpr auto m_SkillDesc = 0x378; // UMM_SkillDesc*
		constexpr auto m_Stat_Transcend = 0x380; // UMM_AbilityState_Item*
		constexpr auto m_ScaleBoxSkillDesc = 0x388; // UPanelWidget*
		constexpr auto m_Txt_SkillDesc = 0x390; // UMirRichTextBlock*
		constexpr auto Slot_Material = 0x398; // UMM_Slot_Material_Item*
		constexpr auto Slot_MaterialCost = 0x3a0; // UMM_Slot_Material_Item*
		constexpr auto txt_cost = 0x3a8; // UMirTextBlock*
		constexpr auto img_cost = 0x3b0; // UImage*
		constexpr auto btn_transcend = 0x3b8; // UMM_Common_Btn_Cost*
		constexpr auto Txt_GuideTitle = 0x3c0; // UMirTextBlock*
		constexpr auto Txt_Guide = 0x3c8; // UMirRichTextBlock*
		constexpr auto Txt_Notice = 0x3d0; // UMirRichTextBlock*
		constexpr auto Panel_Notice = 0x3d8; // UPanelWidget*
		constexpr auto Grid_AllSelectEffect = 0x3e0; // UPanelWidget*
		constexpr auto Grid_AuraEffect = 0x3e8; // UPanelWidget*
		constexpr auto Grid_AllSelectEffect_Red = 0x3f0; // UPanelWidget*
		constexpr auto Grid_AuraEffect_Red = 0x3f8; // UPanelWidget*
		constexpr auto m_Txt_Title = 0x400; // UMirTextBlock*
		constexpr auto m_Txt_BeforeValue = 0x408; // UMirTextBlock*
		constexpr auto m_Img_Deco_Arrow = 0x410; // UMirImage*
		constexpr auto m_Txt_AfterValue = 0x418; // UMirTextBlock*
		constexpr auto SelectItemUID = 0x420; // int32_t
		constexpr auto m_PetName = 0x428; // UMirTextBlock*
		constexpr auto m_PetPortrait = 0x430; // UMM_Pet_Circle_Portrait*
	}

	namespace n_UMM_Popup_FriendSearch { // : UWidgetBase
		constexpr auto COLOR_User_Online = 0x2f0; // FLinearColor
		constexpr auto COLOR_User_Offline = 0x300; // FLinearColor
		constexpr auto STRING_ID_ONLINE = 0x310; // int32_t
		constexpr auto STRING_ID_OFFLINE = 0x314; // int32_t
		constexpr auto m_C_Btn_Close = 0x318; // UMM_Common_Btn_Symbol*
		constexpr auto m_Txt_Level = 0x320; // UMirTextBlock*
		constexpr auto m_Img_Portrait = 0x328; // UMirImage*
		constexpr auto m_Img_Online = 0x330; // UMirImage*
		constexpr auto m_Txt_State = 0x338; // UMirTextBlock*
		constexpr auto m_Txt_CombatPoint = 0x340; // UMirTextBlock*
		constexpr auto m_Txt_Nickname = 0x348; // UMirTextBlock*
		constexpr auto m_Txt_GuildName = 0x350; // UMirTextBlock*
		constexpr auto m_C_Btn_Cancel = 0x358; // UMM_Common_Btn*
		constexpr auto m_C_Btn_Request = 0x360; // UMM_Common_Btn*
	}

	namespace n_UMaterialExpressionOneMinus { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UMM_HudBottomMsg_Slot { // : UWidgetBase
		constexpr auto m_fShowTime = 0x2e0; // float
		constexpr auto m_AniStart = 0x2e8; // UWidgetAnimation*
		constexpr auto m_RTxt_Message = 0x300; // UMirRichTextBlock*
	}

	namespace n_UMM_ServerVisit_WaypointList_Slot { // : UWidgetBase
		constexpr auto m_Txt_Name = 0x2f0; // UMirTextBlock*
		constexpr auto m_Img_Selected = 0x2f8; // UMirImage*
		constexpr auto m_Grid_Disabled = 0x300; // UPanelWidget*
		constexpr auto m_Btn_Main = 0x308; // UMirButton*
	}

	namespace n_UAISense_Damage { // : UAISense
		constexpr auto RegisteredEvents = 0x80; // TArray<FAIDamageEvent>
	}

	namespace n_UNavLinkRenderingComponent { // : UPrimitiveComponent
		constexpr auto MinDrawDistance = 0x228; // float
		constexpr auto LDMaxDrawDistance = 0x22c; // float
		constexpr auto CachedMaxDrawDistance = 0x230; // float
		constexpr auto DepthPriorityGroup = 0x234; // ESceneDepthPriorityGroup
		constexpr auto ViewOwnerDepthPriorityGroup = 0x235; // ESceneDepthPriorityGroup
		constexpr auto IndirectLightingCacheQuality = 0x236; // EIndirectLightingCacheQuality
		constexpr auto LightmapType = 0x237; // ELightmapType
		constexpr auto bUseMaxLODAsImposter = 0x238; // char : 1
		constexpr auto CachedBoundsSphereDiameter = 0x23c; // float
		constexpr auto bBatchImpostersAsInstances = 0x240; // char : 1
		constexpr auto bNeverDistanceCull = 0x240; // char : 1
		constexpr auto bAlwaysCreatePhysicsState = 0x240; // char : 1
		constexpr auto bGenerateOverlapEvents = 0x240; // char : 1
		constexpr auto bMultiBodyOverlap = 0x241; // char : 1
		constexpr auto bTraceComplexOnMove = 0x241; // char : 1
		constexpr auto bReturnMaterialOnMove = 0x241; // char : 1
		constexpr auto bUseViewOwnerDepthPriorityGroup = 0x241; // char : 1
		constexpr auto bAllowCullDistanceVolume = 0x241; // char : 1
		constexpr auto bHasMotionBlurVelocityMeshes = 0x241; // char : 1
		constexpr auto bVisibleInReflectionCaptures = 0x241; // char : 1
		constexpr auto bVisibleInRayTracing = 0x241; // char : 1
		constexpr auto bRenderInMainPass = 0x242; // char : 1
		constexpr auto bRenderInDepthPass = 0x242; // char : 1
		constexpr auto bReceivesDecals = 0x242; // char : 1
		constexpr auto bOwnerNoSee = 0x242; // char : 1
		constexpr auto bOnlyOwnerSee = 0x242; // char : 1
		constexpr auto bTreatAsBackgroundForOcclusion = 0x242; // char : 1
		constexpr auto bUseAsOccluder = 0x242; // char : 1
		constexpr auto bSelectable = 0x242; // char : 1
		constexpr auto bForceMipStreaming = 0x243; // char : 1
		constexpr auto bHasPerInstanceHitProxies = 0x243; // char : 1
		constexpr auto CastShadow = 0x243; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x243; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x243; // char : 1
		constexpr auto bCastDynamicShadow = 0x243; // char : 1
		constexpr auto bCastStaticShadow = 0x243; // char : 1
		constexpr auto bCastVolumetricTranslucentShadow = 0x243; // char : 1
		constexpr auto bSelfShadowOnly = 0x244; // char : 1
		constexpr auto bCastFarShadow = 0x244; // char : 1
		constexpr auto bCastInsetShadow = 0x244; // char : 1
		constexpr auto bCastCinematicShadow = 0x244; // char : 1
		constexpr auto bCastHiddenShadow = 0x244; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x244; // char : 1
		constexpr auto bLightAsIfStatic = 0x244; // char : 1
		constexpr auto bLightAttachmentsAsGroup = 0x244; // char : 1
		constexpr auto bExcludeFromLightAttachmentGroup = 0x245; // char : 1
		constexpr auto bReceiveMobileCSMShadows = 0x245; // char : 1
		constexpr auto bSingleSampleShadowFromStationaryLights = 0x245; // char : 1
		constexpr auto bIgnoreRadialImpulse = 0x245; // char : 1
		constexpr auto bIgnoreRadialForce = 0x245; // char : 1
		constexpr auto bApplyImpulseOnDamage = 0x245; // char : 1
		constexpr auto bReplicatePhysicsToAutonomousProxy = 0x245; // char : 1
		constexpr auto AlwaysLoadOnClient = 0x245; // char : 1
		constexpr auto AlwaysLoadOnServer = 0x246; // char : 1
		constexpr auto bUseEditorCompositing = 0x246; // char : 1
		constexpr auto bRenderCustomDepth = 0x246; // char : 1
		constexpr auto bHasCustomNavigableGeometry = 0x247; // EHasCustomNavigableGeometry
		constexpr auto CanCharacterStepUpOn = 0x249; // ECanBeCharacterBase
		constexpr auto LightingChannels = 0x24a; // FLightingChannels
		constexpr auto CustomDepthStencilWriteMask = 0x24b; // ERendererStencilMask
		constexpr auto CustomDepthStencilValue = 0x24c; // int32_t
		constexpr auto CustomPrimitiveData = 0x250; // FCustomPrimitiveData
		constexpr auto TranslucencySortPriority = 0x260; // int32_t
		constexpr auto VisibilityId = 0x264; // int32_t
		constexpr auto bIgnoreOcclusionVolume = 0x268; // char : 1
		constexpr auto OcclusionVolumeId = 0x26c; // int32_t
		constexpr auto RuntimeVirtualTextures = 0x270; // TArray<URuntimeVirtualTexture*>
		constexpr auto VirtualTextureLodBias = 0x280; // uint8_t
		constexpr auto VirtualTextureCullMips = 0x281; // uint8_t
		constexpr auto VirtualTextureMinCoverage = 0x282; // uint8_t
		constexpr auto VirtualTextureRenderPassType = 0x283; // ERuntimeVirtualTextureMainPassType
		constexpr auto LpvBiasMultiplier = 0x288; // float
		constexpr auto BoundsScale = 0x294; // float
		constexpr auto MoveIgnoreActors = 0x2a8; // TArray<AActor*>
		constexpr auto MoveIgnoreComponents = 0x2b8; // TArray<UPrimitiveComponent*>
		constexpr auto BodyInstance = 0x2d8; // FBodyInstance
		constexpr auto OnComponentHit = 0x3e8; // FScriptMulticastDelegate
		constexpr auto OnComponentBeginOverlap = 0x3e9; // FScriptMulticastDelegate
		constexpr auto OnComponentEndOverlap = 0x3ea; // FScriptMulticastDelegate
		constexpr auto OnComponentWake = 0x3eb; // FScriptMulticastDelegate
		constexpr auto OnComponentSleep = 0x3ec; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x3ee; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x3ef; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x3f0; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x3f1; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x3f2; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x3f3; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x3f4; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x3f5; // FScriptMulticastDelegate
		constexpr auto LODParentPrimitive = 0x410; // UPrimitiveComponent*
	}

	namespace n_ULandscapeGizmoRenderComponent { // : UPrimitiveComponent
		constexpr auto MinDrawDistance = 0x228; // float
		constexpr auto LDMaxDrawDistance = 0x22c; // float
		constexpr auto CachedMaxDrawDistance = 0x230; // float
		constexpr auto DepthPriorityGroup = 0x234; // ESceneDepthPriorityGroup
		constexpr auto ViewOwnerDepthPriorityGroup = 0x235; // ESceneDepthPriorityGroup
		constexpr auto IndirectLightingCacheQuality = 0x236; // EIndirectLightingCacheQuality
		constexpr auto LightmapType = 0x237; // ELightmapType
		constexpr auto bUseMaxLODAsImposter = 0x238; // char : 1
		constexpr auto CachedBoundsSphereDiameter = 0x23c; // float
		constexpr auto bBatchImpostersAsInstances = 0x240; // char : 1
		constexpr auto bNeverDistanceCull = 0x240; // char : 1
		constexpr auto bAlwaysCreatePhysicsState = 0x240; // char : 1
		constexpr auto bGenerateOverlapEvents = 0x240; // char : 1
		constexpr auto bMultiBodyOverlap = 0x241; // char : 1
		constexpr auto bTraceComplexOnMove = 0x241; // char : 1
		constexpr auto bReturnMaterialOnMove = 0x241; // char : 1
		constexpr auto bUseViewOwnerDepthPriorityGroup = 0x241; // char : 1
		constexpr auto bAllowCullDistanceVolume = 0x241; // char : 1
		constexpr auto bHasMotionBlurVelocityMeshes = 0x241; // char : 1
		constexpr auto bVisibleInReflectionCaptures = 0x241; // char : 1
		constexpr auto bVisibleInRayTracing = 0x241; // char : 1
		constexpr auto bRenderInMainPass = 0x242; // char : 1
		constexpr auto bRenderInDepthPass = 0x242; // char : 1
		constexpr auto bReceivesDecals = 0x242; // char : 1
		constexpr auto bOwnerNoSee = 0x242; // char : 1
		constexpr auto bOnlyOwnerSee = 0x242; // char : 1
		constexpr auto bTreatAsBackgroundForOcclusion = 0x242; // char : 1
		constexpr auto bUseAsOccluder = 0x242; // char : 1
		constexpr auto bSelectable = 0x242; // char : 1
		constexpr auto bForceMipStreaming = 0x243; // char : 1
		constexpr auto bHasPerInstanceHitProxies = 0x243; // char : 1
		constexpr auto CastShadow = 0x243; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x243; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x243; // char : 1
		constexpr auto bCastDynamicShadow = 0x243; // char : 1
		constexpr auto bCastStaticShadow = 0x243; // char : 1
		constexpr auto bCastVolumetricTranslucentShadow = 0x243; // char : 1
		constexpr auto bSelfShadowOnly = 0x244; // char : 1
		constexpr auto bCastFarShadow = 0x244; // char : 1
		constexpr auto bCastInsetShadow = 0x244; // char : 1
		constexpr auto bCastCinematicShadow = 0x244; // char : 1
		constexpr auto bCastHiddenShadow = 0x244; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x244; // char : 1
		constexpr auto bLightAsIfStatic = 0x244; // char : 1
		constexpr auto bLightAttachmentsAsGroup = 0x244; // char : 1
		constexpr auto bExcludeFromLightAttachmentGroup = 0x245; // char : 1
		constexpr auto bReceiveMobileCSMShadows = 0x245; // char : 1
		constexpr auto bSingleSampleShadowFromStationaryLights = 0x245; // char : 1
		constexpr auto bIgnoreRadialImpulse = 0x245; // char : 1
		constexpr auto bIgnoreRadialForce = 0x245; // char : 1
		constexpr auto bApplyImpulseOnDamage = 0x245; // char : 1
		constexpr auto bReplicatePhysicsToAutonomousProxy = 0x245; // char : 1
		constexpr auto AlwaysLoadOnClient = 0x245; // char : 1
		constexpr auto AlwaysLoadOnServer = 0x246; // char : 1
		constexpr auto bUseEditorCompositing = 0x246; // char : 1
		constexpr auto bRenderCustomDepth = 0x246; // char : 1
		constexpr auto bHasCustomNavigableGeometry = 0x247; // EHasCustomNavigableGeometry
		constexpr auto CanCharacterStepUpOn = 0x249; // ECanBeCharacterBase
		constexpr auto LightingChannels = 0x24a; // FLightingChannels
		constexpr auto CustomDepthStencilWriteMask = 0x24b; // ERendererStencilMask
		constexpr auto CustomDepthStencilValue = 0x24c; // int32_t
		constexpr auto CustomPrimitiveData = 0x250; // FCustomPrimitiveData
		constexpr auto TranslucencySortPriority = 0x260; // int32_t
		constexpr auto VisibilityId = 0x264; // int32_t
		constexpr auto bIgnoreOcclusionVolume = 0x268; // char : 1
		constexpr auto OcclusionVolumeId = 0x26c; // int32_t
		constexpr auto RuntimeVirtualTextures = 0x270; // TArray<URuntimeVirtualTexture*>
		constexpr auto VirtualTextureLodBias = 0x280; // uint8_t
		constexpr auto VirtualTextureCullMips = 0x281; // uint8_t
		constexpr auto VirtualTextureMinCoverage = 0x282; // uint8_t
		constexpr auto VirtualTextureRenderPassType = 0x283; // ERuntimeVirtualTextureMainPassType
		constexpr auto LpvBiasMultiplier = 0x288; // float
		constexpr auto BoundsScale = 0x294; // float
		constexpr auto MoveIgnoreActors = 0x2a8; // TArray<AActor*>
		constexpr auto MoveIgnoreComponents = 0x2b8; // TArray<UPrimitiveComponent*>
		constexpr auto BodyInstance = 0x2d8; // FBodyInstance
		constexpr auto OnComponentHit = 0x3e8; // FScriptMulticastDelegate
		constexpr auto OnComponentBeginOverlap = 0x3e9; // FScriptMulticastDelegate
		constexpr auto OnComponentEndOverlap = 0x3ea; // FScriptMulticastDelegate
		constexpr auto OnComponentWake = 0x3eb; // FScriptMulticastDelegate
		constexpr auto OnComponentSleep = 0x3ec; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x3ee; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x3ef; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x3f0; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x3f1; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x3f2; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x3f3; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x3f4; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x3f5; // FScriptMulticastDelegate
		constexpr auto LODParentPrimitive = 0x410; // UPrimitiveComponent*
	}

	namespace n_UFirebaseChildListener { // : UBlueprintAsyncActionBase
		constexpr auto OnEvent = 0x30; // FScriptMulticastDelegate
	}

	namespace n_UMM_ServerRelocation_SetList { // : UWidgetBase
		constexpr auto m_Txt_Message = 0x2e0; // UMirTextBlock*
		constexpr auto m_Btn_Move = 0x2e8; // UMM_Common_Btn*
	}

	namespace n_UQueryInvitableFriends { // : UBlueprintAsyncActionBase
		constexpr auto OnSuccess = 0x30; // FScriptMulticastDelegate
		constexpr auto OnFail = 0x40; // FScriptMulticastDelegate
	}

	namespace n_UParticleModuleAttractorBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x29; // char : 1
		constexpr auto LODDuplicate = 0x29; // char : 1
		constexpr auto bSupportsRandomSeed = 0x29; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x29; // char : 1
		constexpr auto LODValidity = 0x2a; // char
	}

	namespace n_UMM_Popup_ExchangeItem { // : UWidgetBase
		constexpr auto m_Txt_Title = 0x2f0; // UMirTextBlock*
		constexpr auto m_CB_Close = 0x2f8; // UMM_Common_Btn_Symbol*
		constexpr auto m_ExchangeItemInfo = 0x300; // UMM_ExchangeItemInfo*
		constexpr auto m_NumInput = 0x308; // UMM_Item_Make_Slider*
		constexpr auto m_Txt_Notice = 0x310; // UMirTextBlock*
		constexpr auto m_CB_Cancel = 0x318; // UMM_Common_Btn*
		constexpr auto m_CB_Confirm = 0x320; // UMM_Common_Btn*
	}

	namespace n_UMaterialExpressionDeltaTime { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UMaterialExpressionLightVector { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UClothLODDataNv { // : UClothLODDataBase
		constexpr auto PhysicalMeshData = 0x28; // UClothPhysicalMeshDataBase*
		constexpr auto CollisionData = 0x30; // FClothCollisionData
	}

	namespace n_UJoinSessionCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto OnFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_UMM_Hud_Chat_MacroSlot { // : UWidgetBase
		constexpr auto GuideMsgTid = 0x300; // int32_t
		constexpr auto SubmitMsgTID = 0x304; // int32_t
		constexpr auto CheckEmptyTextMsgTID = 0x308; // int32_t
		constexpr auto m_Txt_Number = 0x310; // UTextBlock*
		constexpr auto m_EditTxt_MacroMessage = 0x318; // UEditableText*
		constexpr auto m_Btn_Submit = 0x320; // UMM_Common_Btn*
		constexpr auto m_MacroText = 0x328; // FText
		constexpr auto m_SlotIndex = 0x340; // int32_t
	}

	namespace n_UMM_Popup_Chat_VoiceOption { // : UWidgetBase
		constexpr auto btn_close = 0x2e0; // UMM_Common_Btn_Symbol*
		constexpr auto Toggle_VoiceChat_Sound = 0x2e8; // UMirCheckBox*
		constexpr auto Toggle_VoiceChat_Microphone = 0x2f0; // UMirCheckBox*
	}

	namespace n_AMM_CustomizingPoseableMeshActor { // : AActor
		constexpr auto m_pPoseableMeshComponent = 0x218; // UPoseableMeshComponent*
		constexpr auto m_pSkeletalMeshComponent = 0x220; // USkeletalMeshComponent*
	}

	namespace n_UMM_Dominion_Base_Slot { // : UWidgetBase
		constexpr auto m_pCanvasFlag = 0x310; // UMirCanvasPanel*
		constexpr auto m_pSwitchFlag = 0x318; // UWidgetSwitcher*
		constexpr auto m_pImgThumnailBg = 0x320; // UMirImage*
		constexpr auto m_pImgMonster = 0x328; // UMirImage*
		constexpr auto m_pImgBgMonster = 0x330; // UMirImage*
		constexpr auto m_pGuildIcon = 0x338; // UMM_GuildIcon*
		constexpr auto m_pImgSelected = 0x340; // UMirImage*
		constexpr auto m_pTxtName = 0x348; // UMirTextBlock*
		constexpr auto m_pTxtBossAppear = 0x350; // UMirTextBlock*
		constexpr auto m_pBtnClick = 0x358; // UMirButton*
		constexpr auto m_pImgIndicator = 0x360; // UMirImage*
	}

	namespace n_UMM_HudTargetInfo { // : UWidgetBase
		constexpr auto Can_Mana = 0x2e0; // UCanvasPanel*
		constexpr auto buffIconWidget = 0x2e8; // TArray<UMM_BuffIconWidget*>
		constexpr auto BuffInfoList = 0x2f8; // UMM_HudTargetBuffInfo*
		constexpr auto Img_MaintargetIcon_BG = 0x300; // UMirImage*
		constexpr auto Txt_Maintarget_Grade = 0x308; // UMirRichTextBlock*
		constexpr auto Progressbar_TargetHP = 0x310; // UMM_ProgressBar_HP_Stack*
		constexpr auto targetManaPrg = 0x318; // UProgressBar*
		constexpr auto Text_Mana = 0x320; // UMirTextBlock*
		constexpr auto levelTxt = 0x328; // UMirTextBlock*
		constexpr auto nameTxt = 0x330; // UMirTextBlock*
		constexpr auto MainTargetButton = 0x338; // UMirButton*
		constexpr auto Can_SubTargetInfo = 0x340; // UCanvasPanel*
		constexpr auto Text_SubtargetHP = 0x348; // UMirTextBlock*
		constexpr auto Prg_SubTargetHp = 0x350; // UProgressBar*
		constexpr auto Txt_SubTarget_Level = 0x358; // UMirTextBlock*
		constexpr auto Txt_SubTarget_Name = 0x360; // UMirTextBlock*
		constexpr auto Btn_Sub_Close = 0x368; // UMirButton*
		constexpr auto Can_Worldboss_Con = 0x370; // UCanvasPanel*
		constexpr auto Btn_WorldBoss_Contribution = 0x378; // UMirButton*
		constexpr auto SubTargetButton = 0x380; // UMirButton*
		constexpr auto m_pMainTargetSubMenu = 0x388; // UMM_HudTargetSubMenu*
		constexpr auto m_pSubTargetSubMenu = 0x390; // UMM_HudTargetSubMenu*
		constexpr auto btn_lock = 0x398; // UMirButton*
		constexpr auto Img_Unlock = 0x3a0; // UMirImage*
		constexpr auto Img_Lock = 0x3a8; // UMirImage*
		constexpr auto HorizontalBox_MainBuffListArea = 0x3b0; // UHorizontalBox*
		constexpr auto Can_Target_Sharing = 0x3b8; // UCanvasPanel*
		constexpr auto Btn_Target_Sharing = 0x3c0; // UMirButton*
		constexpr auto aniTargetSharing = 0x3c8; // UWidgetAnimation*
		constexpr auto m_BuffInfoStartAni = 0x3f0; // UWidgetAnimation*
		constexpr auto m_BuffInfoStartAniShort = 0x3f8; // UWidgetAnimation*
		constexpr auto SPBarColor_2 = 0x400; // FLinearColor
		constexpr auto SPBarColor_3 = 0x410; // FLinearColor
		constexpr auto RecoverSPLimitTime = 0x420; // float
		constexpr auto ShieldType = 0x424; // int32_t
		constexpr auto UnbeatableShield = 0x428; // bool
		constexpr auto InRecover = 0x430; // bool
		constexpr auto RecoveryComplete = 0x431; // bool
		constexpr auto ProductionTime = 0x434; // float
		constexpr auto StartTime = 0x438; // float
	}

	namespace n_UMM_UserEvent_Attendance_Day_02 { // : UWidgetBase
		constexpr auto m_Txt_Name = 0x2f0; // UMirTextBlock*
		constexpr auto m_Img_Thumb = 0x2f8; // UMirImage*
		constexpr auto m_WebBanner = 0x300; // UMM_UserEvent_WebBanner*
		constexpr auto m_arDaySlot = 0x308; // TArray<UMM_UserEvent_Attendance_Day_Slot*>
	}

	namespace n_UNavAreaMeta { // : UNavArea
		constexpr auto DefaultCost = 0x30; // float
		constexpr auto FixedAreaEnteringCost = 0x34; // float
		constexpr auto DrawColor = 0x38; // FColor
		constexpr auto SupportedAgents = 0x3c; // FNavAgentSelector
		constexpr auto bSupportsAgent0 = 0x40; // char : 1
		constexpr auto bSupportsAgent1 = 0x40; // char : 1
		constexpr auto bSupportsAgent2 = 0x40; // char : 1
		constexpr auto bSupportsAgent3 = 0x40; // char : 1
		constexpr auto bSupportsAgent4 = 0x40; // char : 1
		constexpr auto bSupportsAgent5 = 0x40; // char : 1
		constexpr auto bSupportsAgent6 = 0x40; // char : 1
		constexpr auto bSupportsAgent7 = 0x40; // char : 1
		constexpr auto bSupportsAgent8 = 0x41; // char : 1
		constexpr auto bSupportsAgent9 = 0x41; // char : 1
		constexpr auto bSupportsAgent10 = 0x41; // char : 1
		constexpr auto bSupportsAgent11 = 0x41; // char : 1
		constexpr auto bSupportsAgent12 = 0x41; // char : 1
		constexpr auto bSupportsAgent13 = 0x41; // char : 1
		constexpr auto bSupportsAgent14 = 0x41; // char : 1
		constexpr auto bSupportsAgent15 = 0x41; // char : 1
	}

	namespace n_UMaterialExpressionRotator { // : UMaterialExpression
		constexpr auto Coordinate = 0x40; // FExpressionInput
		constexpr auto Time = 0x54; // FExpressionInput
		constexpr auto CenterX = 0x68; // float
		constexpr auto CenterY = 0x6c; // float
		constexpr auto Speed = 0x70; // float
		constexpr auto ConstCoordinate = 0x74; // uint32_t
	}

	namespace n_UFirebaseFutureVoid { // : UBlueprintAsyncActionBase
		constexpr auto OnComplete = 0x30; // FScriptMulticastDelegate
	}

	namespace n_AProceduralFoliageBlockingVolume { // : AVolume
		constexpr auto ProceduralFoliageVolume = 0x250; // AProceduralFoliageVolume*
	}

	namespace n_UMM_ContentsGetItemMsg { // : UMM_MessageWidgetBase
		constexpr auto m_eWidgetType = 0x2f0; // EContentsGetItemMsgType
		constexpr auto m_fSettingTime_NextMessage = 0x2f4; // float
		constexpr auto m_fSettingTime_NextMessage_MakeItem = 0x2f8; // float
		constexpr auto m_fSettingTime_TitleEffect = 0x2fc; // float
		constexpr auto m_fSettingTime_StartDisplaySlot = 0x300; // float
		constexpr auto m_fSettingTime_NextSlot = 0x304; // float
		constexpr auto m_fSettingTime_SlotOpacity = 0x308; // float
		constexpr auto m_fSettingTime_SlotEffect = 0x30c; // float
		constexpr auto m_AniStart_Single_Item = 0x310; // UWidgetAnimation*
		constexpr auto m_AniStart_Single_Cost = 0x318; // UWidgetAnimation*
		constexpr auto m_AniStart_Multiple = 0x320; // UWidgetAnimation*
		constexpr auto m_AniStart_Special = 0x328; // UWidgetAnimation*
		constexpr auto m_AniStart_MakeSuccess_Item = 0x330; // UWidgetAnimation*
		constexpr auto m_AniStart_MakeSuccessBonus_Item = 0x338; // UWidgetAnimation*
		constexpr auto m_AniStart_MakeFail_Item = 0x340; // UWidgetAnimation*
		constexpr auto m_AniEnd = 0x348; // UWidgetAnimation*
		constexpr auto m_Btn_Main = 0x450; // UMirButton*
		constexpr auto m_ItemSlot_Title = 0x458; // UMM_Slot_Registered_Circle*
		constexpr auto m_RTxt_TitleMain = 0x460; // UMirRichTextBlock*
		constexpr auto m_Img_Polish_One = 0x468; // UMirImage*
		constexpr auto m_Img_Polish_All = 0x470; // UMirImage*
		constexpr auto m_Hrz_TitleInfoDeco = 0x478; // UPanelWidget*
		constexpr auto m_RTxt_TitleSub = 0x480; // UMirRichTextBlock*
		constexpr auto m_RTxt_AddedOptionName = 0x488; // UMirRichTextBlock*
		constexpr auto m_RTxt_AddedOptionValue = 0x490; // UMirRichTextBlock*
		constexpr auto m_arItemSlot = 0x498; // UMM_Slot_Material* [0xa]
		constexpr auto m_arItemSlot_GridSlot = 0x4e8; // UGridSlot* [0xa]
		constexpr auto m_arItemSlot_EffectPanel = 0x538; // UPanelWidget* [0xa]
	}

	namespace n_UMaterialExpressionPixelDepth { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UMM_HudMiniMap { // : UWidgetBase
		constexpr auto m_Map_Detail = 0x2e8; // UMM_Map_Detail*
		constexpr auto m_RetainerBox_Map = 0x2f0; // URetainerBox*
	}

	namespace n_UMM_Popup_EquippedPetStatInfo { // : UWidgetBase
		constexpr auto m_StatColor = 0x2e0; // FLinearColor
		constexpr auto m_StatPadding = 0x2f0; // FMargin
		constexpr auto m_AbilityPadding = 0x300; // FMargin
		constexpr auto m_Btn_Screen = 0x310; // UMirButton*
		constexpr auto m_Txt_Title = 0x318; // UMirTextBlock*
		constexpr auto m_CB_Close = 0x320; // UMM_Common_Btn_Symbol*
		constexpr auto m_Scr_Stat = 0x328; // UMirScrollBox*
		constexpr auto m_Vrt_PetStat = 0x330; // UPanelWidget*
		constexpr auto m_Vrt_PetSkill = 0x338; // UPanelWidget*
		constexpr auto m_Vrt_PetItem = 0x340; // UPanelWidget*
		constexpr auto m_EmptyNotice = 0x348; // UWidget*
	}

	namespace n_UBTDecorator_CompareBBEntries { // : UBTDecorator
		constexpr auto Operator = 0x68; // EBlackBoardEntryComparison
		constexpr auto BlackboardKeyA = 0x70; // FBlackboardKeySelector
		constexpr auto BlackboardKeyB = 0x98; // FBlackboardKeySelector
	}

	namespace n_UMovieSceneMarginSection { // : UMovieSceneSection
		constexpr auto TopCurve = 0xe0; // FMovieSceneFloatChannel
		constexpr auto LeftCurve = 0x180; // FMovieSceneFloatChannel
		constexpr auto RightCurve = 0x220; // FMovieSceneFloatChannel
		constexpr auto BottomCurve = 0x2c0; // FMovieSceneFloatChannel
	}

	namespace n_UMM_Costume_Inventory_Tab { // : UWidgetBase
		constexpr auto CostumeParts = 0x2f0; // COSTUME_PARTS
		constexpr auto DefaultIconId = 0x2f4; // int32_t
		constexpr auto SelectIconId = 0x2f8; // int32_t
		constexpr auto Img_Symbol = 0x300; // UMirImage*
		constexpr auto Img_Symbol_Select = 0x308; // UMirImage*
		constexpr auto m_Img_Indicator = 0x310; // UMirImage*
		constexpr auto txt_count = 0x318; // UMirTextBlock*
		constexpr auto Btn_Tab = 0x320; // UMirButton*
		constexpr auto m_PanEffect = 0x328; // UPanelWidget*
	}

	namespace n_UGoogleLoginSubSystem { // : ULoginSubSystemBase
		constexpr auto m_WindowFirebaseCredential = 0x40; // UFirebaseCredential*
		constexpr auto m_GoogleCredential = 0x48; // UFirebaseGoogleCredential*
	}

	namespace n_USourceEffectEQPreset { // : USoundEffectSourcePreset
		constexpr auto Settings = 0x78; // FSourceEffectEQSettings
	}

	namespace n_UMM_Popup_Filter { // : UWidgetBase
		constexpr auto m_AniStart = 0x2e8; // UWidgetAnimation*
		constexpr auto m_Hrz_Filter = 0x2f8; // UPanelWidget*
		constexpr auto m_Hrz_Option = 0x300; // UPanelWidget*
		constexpr auto m_Txt_Title = 0x308; // UMirTextBlock*
		constexpr auto m_Txt_Filter = 0x310; // UMirTextBlock*
		constexpr auto m_Txt_Option = 0x318; // UMirTextBlock*
		constexpr auto m_arFilterBtn = 0x320; // UMM_FilterBtn* [0x3]
		constexpr auto m_arOptionBtn = 0x338; // UMM_FilterBtn*
		constexpr auto m_CB_Close = 0x340; // UMM_Common_Btn_Symbol*
		constexpr auto m_CB_Confirm = 0x348; // UMM_Common_Btn*
		constexpr auto m_CB_Cancel = 0x350; // UMM_Common_Btn*
	}

	namespace n_UBTTask_FinishWithResult { // : UBTTaskNode
		constexpr auto Result = 0x70; // EBTNodeResult
	}

	namespace n_AGridPathAIController { // : AAIController
		constexpr auto bStopAILogicOnUnposses = 0x2c8; // char : 1
		constexpr auto bLOSflag = 0x2c8; // char : 1
		constexpr auto bSkipExtraLOSChecks = 0x2c8; // char : 1
		constexpr auto bAllowStrafe = 0x2c8; // char : 1
		constexpr auto bWantsPlayerState = 0x2c8; // char : 1
		constexpr auto bSetControlRotationFromPawnOrientation = 0x2c8; // char : 1
		constexpr auto PathFollowingComponent = 0x2d0; // UPathFollowingComponent*
		constexpr auto BrainComponent = 0x2d8; // UBrainComponent*
		constexpr auto PerceptionComponent = 0x2e0; // UAIPerceptionComponent*
		constexpr auto ActionsComp = 0x2e8; // UPawnActionsComponent*
		constexpr auto Blackboard = 0x2f0; // UBlackboardComponent*
		constexpr auto CachedGameplayTasksComponent = 0x2f8; // UGameplayTasksComponent*
		constexpr auto DefaultNavigationFilterClass = 0x300; // UNavigationQueryFilter*
		constexpr auto ReceiveMoveCompleted = 0x308; // FScriptMulticastDelegate
	}

	namespace n_UClothPhysicalMeshDataBase { // : UObject
		constexpr auto Vertices = 0x28; // TArray<FVector>
		constexpr auto Normals = 0x38; // TArray<FVector>
		constexpr auto Indices = 0x48; // TArray<uint32_t>
		constexpr auto InverseMasses = 0x58; // TArray<float>
		constexpr auto BoneData = 0x68; // TArray<FClothVertBoneData>
		constexpr auto NumFixedVerts = 0x78; // int32_t
		constexpr auto MaxBoneWeights = 0x7c; // int32_t
		constexpr auto SelfCollisionIndices = 0x80; // TArray<uint32_t>
	}

	namespace n_UMirEditableText { // : UEditableText
		constexpr auto m_StringTableType = 0x460; // EStringTableType
		constexpr auto m_StringTableID = 0x464; // int32_t
	}

	namespace n_UDemoPendingNetGame { // : UPendingNetGame
		constexpr auto NetDriver = 0x30; // UNetDriver*
		constexpr auto DemoNetDriver = 0x38; // UDemoNetDriver*
	}

	namespace n_UMovieScene3DPathSection { // : UMovieScene3DConstraintSection
		constexpr auto TimingCurve = 0x108; // FMovieSceneFloatChannel
		constexpr auto FrontAxisEnum = 0x1a8; // MovieScene3DPathSection_Axis
		constexpr auto UpAxisEnum = 0x1a9; // MovieScene3DPathSection_Axis
		constexpr auto bFollow = 0x1ac; // char : 1
		constexpr auto bReverse = 0x1ac; // char : 1
		constexpr auto bForceUpright = 0x1ac; // char : 1
	}

	namespace n_UMM_Popup_ClosedTraining_DetailStat { // : UWidgetBase
		constexpr auto m_Txt_Title = 0x2e0; // UMirTextBlock*
		constexpr auto m_Txt_LevelTitle = 0x2e8; // UMirTextBlock*
		constexpr auto m_Txt_StatName = 0x2f0; // UMirTextBlock*
		constexpr auto m_ScrollBox = 0x2f8; // UMirScrollBox*
		constexpr auto m_BtnClose = 0x300; // UMM_Common_Btn_Symbol*
	}

	namespace n_UInputSettings { // : UObject
		constexpr auto AxisConfig = 0x28; // TArray<FInputAxisConfigEntry>
		constexpr auto bAltEnterTogglesFullscreen = 0x38; // char : 1
		constexpr auto bF11TogglesFullscreen = 0x38; // char : 1
		constexpr auto bUseMouseForTouch = 0x38; // char : 1
		constexpr auto bAvoidInvalidTouchEnd = 0x38; // char : 1
		constexpr auto bEnableMouseSmoothing = 0x38; // char : 1
		constexpr auto bEnableFOVScaling = 0x38; // char : 1
		constexpr auto bCaptureMouseOnLaunch = 0x38; // char : 1
		constexpr auto bDefaultViewportMouseLock = 0x38; // char : 1
		constexpr auto bAlwaysShowTouchInterface = 0x39; // char : 1
		constexpr auto bShowConsoleOnFourFingerTap = 0x39; // char : 1
		constexpr auto bEnableGestureRecognizer = 0x39; // char : 1
		constexpr auto bUseAutocorrect = 0x3a; // bool
		constexpr auto ExcludedAutocorrectOS = 0x40; // TArray<FString>
		constexpr auto ExcludedAutocorrectCultures = 0x50; // TArray<FString>
		constexpr auto ExcludedAutocorrectDeviceModels = 0x60; // TArray<FString>
		constexpr auto DefaultViewportMouseCaptureMode = 0x70; // EMouseCaptureMode
		constexpr auto DefaultViewportMouseLockMode = 0x71; // EMouseLockMode
		constexpr auto FOVScale = 0x74; // float
		constexpr auto DoubleClickTime = 0x78; // float
		constexpr auto ActionMappings = 0x80; // TArray<FInputActionKeyMapping>
		constexpr auto AxisMappings = 0x90; // TArray<FInputAxisKeyMapping>
		constexpr auto SpeechMappings = 0xa0; // TArray<FInputActionSpeechMapping>
		constexpr auto DefaultTouchInterface = 0xb0; // FSoftObjectPath
		constexpr auto ConsoleKey = 0xc8; // FKey
		constexpr auto ConsoleKeys = 0xe0; // TArray<FKey>
	}

	namespace n_UMaterialExpressionSaturate { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UMM_GetItemWayListSlot { // : UWidgetBase
		constexpr auto CombatStrID = 0x2f0; // int32_t
		constexpr auto Img_TypeIcon = 0x308; // UImage*
		constexpr auto Img_Disable = 0x310; // UMirImage*
		constexpr auto Img_LockIcon = 0x318; // UMirImage*
		constexpr auto Img_EndIcon = 0x320; // UMirImage*
		constexpr auto Txt_Title = 0x328; // UTextBlock*
		constexpr auto Txt_SubTitle = 0x330; // UTextBlock*
		constexpr auto Txt_Combat = 0x338; // UMirRichTextBlock*
		constexpr auto Btn_Move = 0x340; // UMM_Common_Btn*
		constexpr auto PartyMember = 0x348; // UMM_Common_PartyMember*
		constexpr auto STR_MONSTER_GRADE12_TITLE = 0x350; // int32_t
		constexpr auto STR_MONSTER_GRADE12_DESC = 0x354; // int32_t
		constexpr auto STR_MONSTER_GRADE3_DESC = 0x358; // int32_t
		constexpr auto STR_MONSTER_GRADE4_DESC = 0x35c; // int32_t
		constexpr auto STR_MESSAGE_MONSTER = 0x360; // int32_t
		constexpr auto STR_GATHER_GRADE1_TITLE = 0x364; // int32_t
		constexpr auto STR_GATHER_GRADE1_DESC = 0x368; // int32_t
		constexpr auto STR_GATHER_GRADE2_TITLE = 0x36c; // int32_t
		constexpr auto STR_GATHER_GRADE2_DESC = 0x370; // int32_t
		constexpr auto STR_MESSAGE_GATHER = 0x374; // int32_t
		constexpr auto STR_MESSAGE_GATHER_MOVE = 0x378; // int32_t
		constexpr auto STR_MINE_GRADE1_TITLE = 0x37c; // int32_t
		constexpr auto STR_MINE_GRADE1_DESC = 0x380; // int32_t
		constexpr auto STR_MINE_GRADE2_TITLE = 0x384; // int32_t
		constexpr auto STR_MINE_GRADE2_DESC = 0x388; // int32_t
		constexpr auto STR_MESSAGE_MINE = 0x38c; // int32_t
		constexpr auto STR_MESSAGE_MINE_MOVE = 0x390; // int32_t
		constexpr auto STR_SEARCH_GRADE1_TITLE = 0x394; // int32_t
		constexpr auto STR_SEARCH_GRADE1_DESC = 0x398; // int32_t
		constexpr auto STR_MESSAGE_SEARCH = 0x39c; // int32_t
		constexpr auto STR_MESSAGE_SEARCH_MOVE = 0x3a0; // int32_t
		constexpr auto STR_ITEMMAKE_UI = 0x3a4; // int32_t
		constexpr auto STR_END_ITEMMAKE_UI = 0x3a8; // int32_t
		constexpr auto STR_MESSAGE_NPCSTORE_MOVE = 0x3ac; // int32_t
		constexpr auto STR_MESSAGE_NPCSTORE_CURRENTSTAGE = 0x3b0; // int32_t
		constexpr auto STR_AUCTION_UI = 0x3b4; // int32_t
		constexpr auto STR_MINE_BLACKIRON_TITLE = 0x3b8; // int32_t
		constexpr auto STR_DAILY_HOMEWORK_UI = 0x3bc; // int32_t
		constexpr auto STR_GACHA_UI = 0x3c0; // int32_t
		constexpr auto STR_MATERIAL_COMPOSE_UI = 0x3c4; // int32_t
		constexpr auto STR_NO_CLASS = 0x3c8; // int32_t
		constexpr auto STR_MATERIAL_HUDEVENT_UI = 0x3cc; // int32_t
		constexpr auto STR_GATHER_JINKI_TITLE = 0x3d0; // int32_t
		constexpr auto STR_GATHER_JINKI_DESC = 0x3d4; // int32_t
		constexpr auto STR_MSG_NO_ENTER_BOSSRAID = 0x3d8; // int32_t
		constexpr auto STRING_PhaseCantUseMenu = 0x3dc; // int32_t
		constexpr auto STR_GUILD_SHOP = 0x3e0; // int32_t
		constexpr auto STR_DUNGEON_SHOP = 0x3e4; // int32_t
		constexpr auto STR_MAKE_FAIL = 0x3e8; // int32_t
		constexpr auto STR_UI_MAKE_FAIL = 0x3ec; // int32_t
		constexpr auto STR_NPC_MAKE_FAIL = 0x3f0; // int32_t
		constexpr auto STR_AGENCY_MAKE_FAIL = 0x3f4; // int32_t
	}

	namespace n_UMaterialBillboardComponent { // : UPrimitiveComponent
		constexpr auto Elements = 0x418; // TArray<FMaterialSpriteElement>
	}

	namespace n_UMM_Guild_MainHome { // : UWidgetBase
		constexpr auto m_Color_DominionGrade_2 = 0x36c; // FLinearColor
		constexpr auto m_Color_DominionGrade_3 = 0x37c; // FLinearColor
		constexpr auto m_Color_DominionGrade_4 = 0x38c; // FLinearColor
		constexpr auto m_Img_Frame = 0x3a0; // UMirImage*
		constexpr auto m_Img_Symbol = 0x3a8; // UMirImage*
		constexpr auto m_Txt_Leader_Title = 0x3b0; // UMirTextBlock*
		constexpr auto m_Txt_Leader = 0x3b8; // UMirTextBlock*
		constexpr auto m_Txt_Member_Title = 0x3c0; // UMirTextBlock*
		constexpr auto m_Txt_Member_Count = 0x3c8; // UMirTextBlock*
		constexpr auto m_Txt_Guild_Dominion = 0x3d0; // UMirTextBlock*
		constexpr auto m_Img_Guild_Dominion = 0x3d8; // UMirImage*
		constexpr auto m_Txt_Guild_Name = 0x3e0; // UMirTextBlock*
		constexpr auto m_Txt_Guild_Lv = 0x3e8; // UMirTextBlock*
		constexpr auto m_Txt_CombatPower_Title = 0x3f0; // UMirTextBlock*
		constexpr auto m_Txt_CombatPower_Value = 0x3f8; // UMirTextBlock*
		constexpr auto m_Prog_Guild_Exp = 0x400; // UMirProgressBar*
		constexpr auto m_Txt_Guild_Exp_Value = 0x408; // UMirTextBlock*
		constexpr auto m_Txt_GuildDev_Point = 0x410; // UMirTextBlock*
		constexpr auto m_CB_GuildDevGroup_2 = 0x418; // UMM_Guild_Info_Btn*
		constexpr auto m_CB_GuildDevGroup_3 = 0x420; // UMM_Guild_Info_Btn*
		constexpr auto m_CB_GuildDevGroup_4 = 0x428; // UMM_Guild_Info_Btn*
		constexpr auto m_Txt_Pr_Title = 0x430; // UMirTextBlock*
		constexpr auto m_Scr_Edit_PR = 0x438; // UMirScrollBox*
		constexpr auto m_Edit_PR = 0x440; // UMirMultiLineEditableText*
		constexpr auto m_Scr_Txt_PR = 0x448; // UMirScrollBox*
		constexpr auto m_Txt_PR = 0x450; // UMirTextBlock*
		constexpr auto m_Can_Send_PR = 0x458; // UCanvasPanel*
		constexpr auto m_Btn_Send_PR = 0x460; // UMM_Common_Btn*
		constexpr auto m_Btn_Translation = 0x468; // UMM_Common_Btn_Translation*
		constexpr auto m_Panel_MyInfo = 0x470; // UMirCanvasPanel*
		constexpr auto m_CB_Support = 0x478; // UMM_Guild_Slot_Btn*
		constexpr auto m_CB_Diplomacy = 0x480; // UMM_Guild_Slot_Btn*
		constexpr auto m_CB_Wanted = 0x488; // UMM_Guild_Slot_Btn*
		constexpr auto m_CB_Event = 0x490; // UMM_Guild_Slot_Btn*
		constexpr auto m_CB_Develop = 0x498; // UMM_Guild_Slot_Btn*
		constexpr auto m_CB_Inventory = 0x4a0; // UMM_Guild_Slot_Btn*
		constexpr auto m_CB_GuildShop = 0x4a8; // UMM_Guild_Slot_Btn*
		constexpr auto m_CB_GuildSupply = 0x4b0; // UMM_Guild_Slot_Btn*
		constexpr auto m_Txt_JoinLimitCombatPoint = 0x4b8; // UMirTextBlock*
		constexpr auto m_CB_Applicant = 0x4c0; // UMM_Common_Btn*
		constexpr auto m_CB_ApplicantCancel = 0x4c8; // UMM_Common_Btn*
		constexpr auto m_CB_InviteAgree = 0x4d0; // UMM_Common_Btn*
		constexpr auto m_CB_InviteDisAgree = 0x4d8; // UMM_Common_Btn*
		constexpr auto m_CB_ReqAlliance = 0x4e0; // UMM_Common_Btn*
		constexpr auto m_CB_ReqAllianceCancel = 0x4e8; // UMM_Common_Btn*
		constexpr auto m_CB_AllianceDisAgree = 0x4f0; // UMM_Common_Btn*
		constexpr auto m_CB_AllianceAgree = 0x4f8; // UMM_Common_Btn*
		constexpr auto m_CB_AllianceClear = 0x500; // UMM_Common_Btn*
		constexpr auto m_CB_Hostility = 0x508; // UMM_Common_Btn*
		constexpr auto m_CB_HostilityCancel = 0x510; // UMM_Common_Btn*
		constexpr auto m_CB_GuildMember = 0x518; // UMM_Common_Btn*
		constexpr auto m_CB_Contribute = 0x520; // UMM_Common_Btn_Symbol*
		constexpr auto m_Panel_OtherInfo = 0x528; // UMirCanvasPanel*
		constexpr auto m_Img_OtherIcon = 0x530; // UMirImage*
		constexpr auto m_RichTxt_OtherStatus = 0x538; // UMirRichTextBlock*
		constexpr auto m_DevSkillBox = 0x540; // UHorizontalBox*
		constexpr auto m_Img_SkillIcons = 0x548; // TArray<UMirImage*>
		constexpr auto m_Btn_SkillIcons = 0x558; // TArray<UMirButton*>
		constexpr auto m_Panel_MaxMembers = 0x568; // UMirCanvasPanel*
		constexpr auto m_RichTxt_MaxMembers = 0x570; // UMirRichTextBlock*
		constexpr auto m_BtnTooltip_GuildInfo = 0x578; // UMM_Common_ToolTipBtn*
		constexpr auto m_BtnTooltip_GuildDev = 0x580; // UMM_Common_ToolTipBtn*
		constexpr auto m_Panel_Sanctum = 0x588; // UMirCanvasPanel*
		constexpr auto m_Panel_SanctumTime = 0x590; // UMirCanvasPanel*
		constexpr auto m_Txt_Sanctum_RemaindTime = 0x598; // UMirTextBlock*
		constexpr auto m_Img_Sanctum = 0x5a0; // UMirImage*
		constexpr auto m_Btn_Sanctum = 0x5a8; // UMirButton*
		constexpr auto m_Ani_Sanctum = 0x5b0; // UWidgetAnimation*
		constexpr auto m_Btn_SaveClipBoard = 0x5b8; // UMM_Common_Btn_Symbol*
	}

	namespace n_UAnimCompress_RemoveTrivialKeys { // : UAnimCompress
		constexpr auto MaxPosDiff = 0x50; // float
		constexpr auto MaxAngleDiff = 0x54; // float
		constexpr auto MaxScaleDiff = 0x58; // float
	}

	namespace n_UBTTask_ExceptionSkill { // : UBTTaskNode
		constexpr auto Conditions = 0x78; // TArray<FSkillCondition>
	}

	namespace n_UPacketHandlerProfileConfig { // : UObject
		constexpr auto Components = 0x28; // TArray<FString>
	}

	namespace n_UMovieScenePrimitiveMaterialTrack { // : UMovieScenePropertyTrack
		constexpr auto MaterialIndex = 0x88; // int32_t
	}

	namespace n_UMM_Hud_ServerVisitMenu { // : UWidgetBase
		constexpr auto m_CanvasPanel = 0x2f0; // UCanvasPanel*
		constexpr auto m_Txt_LimitTime = 0x2f8; // UTextBlock*
		constexpr auto m_Txt_Time = 0x300; // UTextBlock*
		constexpr auto m_Txt_LifeCount = 0x308; // UTextBlock*
		constexpr auto m_Btn_Exit = 0x310; // UButton*
		constexpr auto m_Btn_ShowVisitMembers = 0x318; // UButton*
		constexpr auto m_Btn_ShowWaypoints = 0x320; // UButton*
		constexpr auto m_Ani_Limit_Loop = 0x328; // UWidgetAnimation*
	}

	namespace n_UMaterialExpressionCrossProduct { // : UMaterialExpression
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_UBTDecorator_IsAtLocation { // : UBTDecorator_BlackboardBase
		constexpr auto AcceptableRadius = 0x90; // float
		constexpr auto ParametrizedAcceptableRadius = 0x98; // FAIDataProviderFloatValue
		constexpr auto GeometricDistanceType = 0xc8; // FAIDistanceType
		constexpr auto bUseParametrizedRadius = 0xcc; // char : 1
		constexpr auto bUseNavAgentGoalLocation = 0xcc; // char : 1
		constexpr auto bPathFindingBasedTest = 0xcc; // char : 1
	}

	namespace n_UMM_B_Request { // : UWidgetBase
		constexpr auto m_WatchingAllQuestToStr = 0x2f0; // int32_t
		constexpr auto m_VerticalSet = 0x2f8; // UMM_CommonVerticalTabSet*
		constexpr auto m_ListView_RequestList = 0x300; // UMirListView*
		constexpr auto m_CheckCompleteQuest = 0x308; // UMirCheckBox*
		constexpr auto m_CompleteQuest = 0x310; // UMirTextBlock*
		constexpr auto m_Msg = 0x318; // UMirTextBlock*
		constexpr auto m_Grid_Panel = 0x320; // UPanelWidget*
		constexpr auto m_pCommNotice_Empty = 0x328; // UMM_Common_Board_Notice*
		constexpr auto m_arRequestSlotObj = 0x330; // TArray<URequestSlotObj*>
	}

	namespace n_APlayerStartPIE { // : APlayerStart
		constexpr auto PlayerStartTag = 0x240; // FName
	}

	namespace n_UInterpTrackEvent { // : UInterpTrack
		constexpr auto EventTrack = 0x70; // TArray<FEventTrackKey>
		constexpr auto bFireEventsWhenForwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenJumpingForwards = 0x80; // char : 1
		constexpr auto bUseCustomEventName = 0x80; // char : 1
	}

	namespace n_AControlPointMeshActor { // : AActor
		constexpr auto ControlPointMeshComponent = 0x218; // UControlPointMeshComponent*
	}

	namespace n_UMovieSceneCameraShakeTrack { // : UMovieSceneNameableTrack
		constexpr auto CameraShakeSections = 0x58; // TArray<UMovieSceneSection*>
	}

	namespace n_UButtonStyleAsset { // : UObject
		constexpr auto ButtonStyle = 0x28; // FButtonStyle
	}

	namespace n_UMM_Ranking_Reward_List { // : UWidgetBase
		constexpr auto m_pBtnListClick = 0x2f0; // UMirButton*
		constexpr auto m_pCanPanelRankValue = 0x2f8; // UCanvasPanel*
		constexpr auto m_pImgRankIcon = 0x300; // UMirImage*
		constexpr auto m_pTxtRankValue = 0x308; // UMirTextBlock*
		constexpr auto m_pCanPanelRewardPanel1 = 0x310; // UCanvasPanel*
		constexpr auto m_pCanPanelRewardPanel2 = 0x318; // UCanvasPanel*
		constexpr auto m_pCanPanelRewardPanel3 = 0x320; // UCanvasPanel*
		constexpr auto m_pCanPanelRewardPanel4 = 0x328; // UCanvasPanel*
		constexpr auto m_pRewardItem1 = 0x330; // UMM_Ranking_Reward_Item*
		constexpr auto m_pRewardItem2 = 0x338; // UMM_Ranking_Reward_Item*
		constexpr auto m_pRewardItem3 = 0x340; // UMM_Ranking_Reward_Item*
		constexpr auto m_pRewardItem4 = 0x348; // UMM_Ranking_Reward_Item*
		constexpr auto m_pTxtRewardValue1 = 0x350; // UMirTextBlock*
		constexpr auto m_pTxtRewardValue2 = 0x358; // UMirTextBlock*
		constexpr auto m_pTxtRewardValue3 = 0x360; // UMirTextBlock*
		constexpr auto m_pTxtRewardValue4 = 0x368; // UMirTextBlock*
	}

	namespace n_UMaterialExpressionMin { // : UMaterialExpression
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_UControlChannel { // : UChannel
		constexpr auto Connection = 0x28; // UNetConnection*
	}

	namespace n_UListView { // : UListViewBase
		constexpr auto Orientation = 0x7c8; // EOrientation
		constexpr auto SelectionMode = 0x7c9; // ESelectionMode
		constexpr auto ConsumeMouseWheel = 0x7ca; // EConsumeMouseWheel
		constexpr auto bClearSelectionOnClick = 0x7cb; // bool
		constexpr auto bIsFocusable = 0x7cc; // bool
		constexpr auto EntrySpacing = 0x7d0; // float
		constexpr auto bReturnFocusToSelection = 0x7d4; // bool
		constexpr auto listItems = 0x7d8; // TArray<UObject*>
		constexpr auto BP_OnEntryInitialized = 0x7f8; // FScriptMulticastDelegate
		constexpr auto BP_OnItemClicked = 0x808; // FScriptMulticastDelegate
		constexpr auto BP_OnItemDoubleClicked = 0x818; // FScriptMulticastDelegate
		constexpr auto BP_OnItemIsHoveredChanged = 0x828; // FScriptMulticastDelegate
		constexpr auto BP_OnItemSelectionChanged = 0x838; // FScriptMulticastDelegate
		constexpr auto BP_OnItemScrolledIntoView = 0x848; // FScriptMulticastDelegate
	}

	namespace n_UTireType { // : UDataAsset
		constexpr auto FrictionScale = 0x30; // float
	}

	namespace n_UMM_Popup_AccountGuest { // : UWidgetBase
		constexpr auto m_Btn_AccountSelect = 0x2e0; // UMM_Common_Btn*
		constexpr auto m_Btn_Start = 0x2e8; // UMM_Common_Btn*
		constexpr auto m_RTxt_Description = 0x2f0; // UMirRichTextBlock*
	}

	namespace n_UMaterialExpressionObjectRadius { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UIAPOneStoreModule { // : UIAPStoreModuleBase
		constexpr auto m_OwnedProductList = 0x1c0; // TArray<FIAPProductData>
		constexpr auto m_pOneStoreGetPurchaseFunction = 0x1d0; // UObject*
		constexpr auto m_pUOneStoreIapProductDetailsFunction = 0x1d8; // UObject*
		constexpr auto m_pUOneStoreIapRequestPurchaseFunction = 0x1e0; // UObject*
		constexpr auto m_pUOneStoreIapConsumePurchaseFunction = 0x1e8; // UObject*
		constexpr auto m_pUOneStoreIapRequestLoginFunction = 0x1f0; // UObject*
		constexpr auto m_pUOneStoreIapRequestUpdateFunction = 0x1f8; // UObject*
	}

	namespace n_UMovieSceneWidgetMaterialTrack { // : UMovieSceneMaterialTrack
		constexpr auto BrushPropertyNamePath = 0x68; // TArray<FName>
		constexpr auto TrackName = 0x78; // FName
	}

	namespace n_AAmbientSound { // : AActor
		constexpr auto AudioComponent = 0x218; // UAudioComponent*
	}

	namespace n_UMM_B_DominionWanted { // : UWidgetBase
		constexpr auto m_pTab_Vertical = 0x2f0; // UMM_CommonVerticalTabSet*
		constexpr auto m_pListView_WantedList = 0x2f8; // UMirListView*
		constexpr auto m_pEmpty_Notice = 0x300; // UMM_Common_Board_Notice*
		constexpr auto m_pBtnAddWanted = 0x308; // UMM_Common_Btn*
		constexpr auto m_arWantedSlotObj = 0x310; // TArray<UDominionWantedSlotObj*>
	}

	namespace n_UMM_ScrollMsg { // : UMM_MessageWidgetBase
		constexpr auto m_eType = 0x2f0; // EUIActionMessageWidgetType
		constexpr auto m_fSetMessageTime = 0x2f4; // float
		constexpr auto m_fMoveSpeed = 0x2f8; // float
		constexpr auto m_iSlotMax = 0x2fc; // int32_t
		constexpr auto m_fSlotHeightScale = 0x300; // float
		constexpr auto m_Grid_DisplayArea = 0x310; // UPanelWidget*
		constexpr auto m_arSlot = 0x318; // TArray<FMsgDisplayInfo>
	}

	namespace n_AMM_MainPC { // : AMM_PC
		constexpr auto m_pPlayerController = 0xc08; // APlayerController*
		constexpr auto m_pRefVehicleMesh = 0xc10; // UObject*
		constexpr auto m_pRefVehicleAnimBP = 0xc18; // UObject*
		constexpr auto m_TargetLockOnEffect = 0xc20; // UParticleSystemComponent*
		constexpr auto m_pSharedTargetEffect = 0xc28; // UParticleSystemComponent*
		constexpr auto NearAttackRange = 0xc98; // float
		constexpr auto m_pAutoBehaviorAIController = 0xcd0; // AMM_AutoBehaviorAIController*
		constexpr auto isWallOverlap = 0xd36; // bool
		constexpr auto m_GhostComponet = 0xdc0; // UMM_GhostTrailComponent*
		constexpr auto GuideDecalComponent = 0xdc8; // UMM_GuideDecalComponent*
		constexpr auto SubTargetLineEffect = 0xeb0; // UParticleSystemComponent*
		constexpr auto MainTargetLineEffect = 0xeb8; // UParticleSystemComponent*
		constexpr auto OldAutoMoveState = 0xec0; // EAutoMoveState
		constexpr auto CurrentAutoMoveState = 0xec1; // EAutoMoveState
		constexpr auto OldBehaviorType = 0xecf; // EBehaviorType
		constexpr auto BehaviorType = 0xed0; // EBehaviorType
		constexpr auto DarkTime = 0xee0; // float
		constexpr auto DarkCurve = 0xee8; // UCurveFloat*
	}

	namespace n_UMM_Occupation_CommandSlot { // : UWidgetBase
		constexpr auto CommandSlotType = 0x2f0; // EOccupationCommandSlotType
		constexpr auto m_UIDrag = 0x2f8; // UMM_UI_Drag*
		constexpr auto m_Img_Mark = 0x300; // UMirImage*
		constexpr auto m_Txt_Command = 0x308; // UMirTextBlock*
		constexpr auto m_Img_Disabled = 0x310; // UMirImage*
		constexpr auto m_DisableSpacer = 0x318; // USpacer*
		constexpr auto m_Btn_Edit = 0x320; // UMM_Common_Btn*
		constexpr auto m_Btn_Apply = 0x328; // UMM_Common_Btn*
		constexpr auto m_Btn_Cancel = 0x330; // UMM_Common_Btn*
	}

	namespace n_UTimelineComponent { // : UActorComponent
		constexpr auto TheTimeline = 0xb0; // FTimeline
		constexpr auto bIgnoreTimeDilation = 0x148; // char : 1
	}

	namespace n_UMM_Hud_Chat_Popup { // : UWidgetBase
		constexpr auto m_AniStart = 0x300; // UWidgetAnimation*
		constexpr auto m_AniEnd = 0x308; // UWidgetAnimation*
		constexpr auto Panel_Main = 0x310; // UPanelWidget*
		constexpr auto Panel_LeftMenu = 0x318; // UPanelWidget*
		constexpr auto Chat_TotalIndicator = 0x320; // UMM_Hud_Chat_Indicator*
		constexpr auto m_ContentWidgetSwitcher = 0x328; // UWidgetSwitcher*
		constexpr auto m_ChatAreaPopupSwitcher = 0x330; // UWidgetSwitcher*
		constexpr auto m_ChattingRoom = 0x338; // UMM_Hud_Chat_ChattingRoom*
		constexpr auto m_SearchWhisper = 0x340; // UMM_Hud_Chat_SearchWhisper*
		constexpr auto m_EmptyGuild = 0x348; // UMM_Hud_Chat_EmptyGuild*
		constexpr auto m_PopupMacro = 0x350; // UMM_Popup_Chat_Macro*
		constexpr auto m_PopupVoiceOption = 0x358; // UMM_Popup_Chat_VoiceOption*
		constexpr auto m_PopupUserInteraction = 0x360; // UMM_Popup_Chat_UserInfo*
		constexpr auto m_CloseButton = 0x368; // UMM_Common_Btn_Symbol*
		constexpr auto Toggle_Setting = 0x370; // UMirCheckBox*
		constexpr auto Toggle_WhisperChat = 0x378; // UMirCheckBox*
		constexpr auto Toggle_Menu = 0x380; // UMirCheckBox*
		constexpr auto m_ChatArea = 0x388; // UMM_Hud_Chat_Area*
		constexpr auto m_ListView_ChannelList = 0x390; // UMirListView*
		constexpr auto m_arChannelSlotObj = 0x398; // TArray<UHudChatTabSlotObj*>
		constexpr auto m_StageInfoButton = 0x3a8; // UMM_Common_Btn_Symbol*
	}

	namespace n_UMM_Popup_Party_Info { // : UWidgetBase
		constexpr auto STRING_ID_PASSWORD_HINT = 0x2f0; // int32_t
		constexpr auto m_Txt_Title = 0x2f8; // UMirTextBlock*
		constexpr auto m_C_Btn_Close = 0x300; // UMM_Common_Btn_Symbol*
		constexpr auto m_Txt_Explain = 0x308; // UMirTextBlock*
		constexpr auto m_Img_Lock = 0x310; // UMirImage*
		constexpr auto m_Img_Unlock = 0x318; // UMirImage*
		constexpr auto m_Txt_Password = 0x320; // UMirTextBlock*
		constexpr auto m_Btn_InputPassword = 0x328; // UMirButton*
		constexpr auto m_C_Btn_Join = 0x330; // UMM_Common_Btn*
		constexpr auto m_ListView_MemberList = 0x338; // UMirListView*
		constexpr auto m_C_Btn_Translation = 0x340; // UMM_Common_Btn_Translation*
		constexpr auto m_arMemberSlotObj = 0x360; // TArray<UPopupPartyInfoSlotObj*>
	}

	namespace n_UMM_Skill_DeckSlot { // : UWidgetBase
		constexpr auto SkillIconTintColor = 0x2f0; // FLinearColor
		constexpr auto LearnSuccessEffectID = 0x300; // int32_t
		constexpr auto levelUpEffectID = 0x304; // int32_t
		constexpr auto SlotTouchEffectID = 0x308; // int32_t
		constexpr auto SelectedSlotEffectID = 0x30c; // int32_t
		constexpr auto RegisterSkillEffectID = 0x310; // int32_t
		constexpr auto UnRegisterSkillEffectID = 0x314; // int32_t
		constexpr auto PassiveSkillEffectID = 0x318; // int32_t
		constexpr auto m_Img_MainSkill = 0x320; // UMirImage*
		constexpr auto m_Img_SkillIcon = 0x328; // UMirImage*
		constexpr auto m_Img_Lock = 0x330; // UMirImage*
		constexpr auto m_Txt_SlotIndex = 0x338; // UMirTextBlock*
		constexpr auto m_Grid_Effect = 0x340; // UPanelWidget*
		constexpr auto m_Grid_LevelUpEffect = 0x348; // UPanelWidget*
		constexpr auto m_Grid_AwakenEffect = 0x350; // UPanelWidget*
		constexpr auto m_Btn_Main = 0x358; // UMirButton*
		constexpr auto m_CB_Remove = 0x360; // UMM_Common_Btn_Symbol*
		constexpr auto m_CB_Detail = 0x368; // UMM_Common_Btn_Symbol*
		constexpr auto m_Grid_Set = 0x370; // UPanelWidget*
		constexpr auto m_Btn_Set = 0x378; // UMirButton*
		constexpr auto m_LearnSuccessEffect = 0x380; // UEffectWidgetBase*
		constexpr auto m_LevelUpEffect = 0x388; // UEffectWidgetBase*
		constexpr auto m_AwakenEffect = 0x390; // UEffectWidgetBase*
		constexpr auto m_SlotTouchEffect = 0x398; // UEffectWidgetBase*
		constexpr auto m_SelectedEffect = 0x3a0; // UEffectWidgetBase*
		constexpr auto m_RegisterEffect = 0x3a8; // UEffectWidgetBase*
		constexpr auto m_UnRegisterEffect = 0x3b0; // UEffectWidgetBase*
		constexpr auto m_PassiveEffect = 0x3b8; // UEffectWidgetBase*
		constexpr auto m_Img_LevelBG = 0x3c0; // UMirImage*
		constexpr auto m_Txt_Level = 0x3c8; // UMirTextBlock*
	}

	namespace n_UArrowComponent { // : UPrimitiveComponent
		constexpr auto ArrowColor = 0x418; // FColor
		constexpr auto ArrowSize = 0x41c; // float
		constexpr auto ScreenSize = 0x420; // float
		constexpr auto bIsScreenSizeScaled = 0x424; // char : 1
		constexpr auto bTreatAsASprite = 0x424; // char : 1
	}

	namespace n_UMM_TotalQuickSlot_Attack { // : UWidgetBase
		constexpr auto m_AutoBattle_Range = 0x2e0; // UMM_GameOption_Select*
		constexpr auto m_AutoSkillSwitch = 0x2e8; // UMM_GameOption_Select*
		constexpr auto m_GameOptionSwitch1 = 0x2f0; // UMM_GameOption_Switch*
		constexpr auto m_GameOptionSwitch2 = 0x2f8; // UMM_GameOption_Switch*
		constexpr auto m_GameOptionSwitch3 = 0x300; // UMM_GameOption_Switch*
		constexpr auto m_GameOptionSwitch4 = 0x308; // UMM_GameOption_Switch*
		constexpr auto m_GameOptionSwitch5 = 0x310; // UMM_GameOption_Switch*
		constexpr auto m_AutoBattle_Text = 0x318; // UTextBlock*
	}

	namespace n_ULevelActorContainer { // : UObject
		constexpr auto Actors = 0x28; // TArray<AActor*>
	}

	namespace n_UDistributionVectorConstantCurve { // : UDistributionVector
		constexpr auto ConstantCurve = 0x38; // FInterpCurveVector
		constexpr auto bLockAxes = 0x50; // char : 1
		constexpr auto LockedAxes = 0x54; // EDistributionVectorLockFlags
	}

	namespace n_APainCausingVolume { // : APhysicsVolume
		constexpr auto bPainCausing = 0x260; // char : 1
		constexpr auto DamagePerSec = 0x264; // float
		constexpr auto DamageType = 0x268; // UDamageType*
		constexpr auto PainInterval = 0x270; // float
		constexpr auto bEntryPain = 0x274; // char : 1
		constexpr auto BACKUP_bPainCausing = 0x274; // char : 1
		constexpr auto DamageInstigator = 0x278; // AController*
	}

	namespace n_UMediaPlaylist { // : UObject
		constexpr auto Items = 0x28; // TArray<UMediaSource*>
	}

	namespace n_UBTDecorator_ConditionalLoop { // : UBTDecorator_Blackboard
		constexpr auto IntValue = 0x90; // int32_t
		constexpr auto FloatValue = 0x94; // float
		constexpr auto StringValue = 0x98; // FString
		constexpr auto CachedDescription = 0xa8; // FString
		constexpr auto OperationType = 0xb8; // char
		constexpr auto NotifyObserver = 0xb9; // EBTBlackboardRestart
	}

	namespace n_UMaterialExpressionArcsineFast { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UMM_DungeonCommonReward { // : UWidgetBase
		constexpr auto txtFixReward = 0x2e0; // UMirTextBlock*
		constexpr auto sclRewardListBox = 0x2e8; // UMirScrollBox*
		constexpr auto hrzNotice = 0x2f0; // UHorizontalBox*
		constexpr auto txtNotice = 0x2f8; // UMirTextBlock*
		constexpr auto txtSummonCountDesc = 0x300; // UMirTextBlock*
		constexpr auto txtSummonCount = 0x308; // UMirTextBlock*
		constexpr auto btnSummoninfo = 0x310; // UMM_Common_ToolTipBtn*
	}

	namespace n_UMM_QuestNormal_Auto_Slot { // : UWidgetBase
		constexpr auto m_Check_Box = 0x2f0; // UMirCheckBox*
		constexpr auto m_Txt_Slot_Index = 0x2f8; // UMirTextBlock*
		constexpr auto m_Txt_Mission_Title = 0x300; // UMirTextBlock*
		constexpr auto m_Txt_Mission_SubTitle = 0x308; // UMirTextBlock*
		constexpr auto m_Txt_Mission_Distance = 0x310; // UMirTextBlock*
		constexpr auto m_Txt_Mission_Purpose = 0x318; // UMirTextBlock*
		constexpr auto m_Img_Complete = 0x320; // UMirImage*
		constexpr auto m_Btn_RepeatMin = 0x328; // UMM_Common_Btn_Symbol*
		constexpr auto m_Txt_RepeatCount = 0x330; // UMirTextBlock*
		constexpr auto m_Btn_RepeatAdd = 0x338; // UMM_Common_Btn_Symbol*
		constexpr auto m_Btn_ListUp = 0x340; // UMM_Common_Btn_Symbol*
		constexpr auto m_Btn_ListDown = 0x348; // UMM_Common_Btn_Symbol*
		constexpr auto m_Img_Selected = 0x350; // UMirImage*
		constexpr auto m_Img_Dis_Selected = 0x358; // UMirImage*
		constexpr auto m_Btn_Select = 0x360; // UMirButton*
		constexpr auto m_MissionTitleWithCountToStr = 0x368; // int32_t
		constexpr auto m_RepeatCountToStr = 0x36c; // int32_t
		constexpr auto m_CannotAutoRun = 0x370; // int32_t
		constexpr auto m_CompleteAutoRun = 0x374; // int32_t
	}

	namespace n_UGachaObjectAnimInstance { // : UAnimInstance
		constexpr auto m_bOpen = 0x268; // bool
		constexpr auto m_bImmediate = 0x269; // bool
	}

	namespace n_ASphereReflectionCapture { // : AReflectionCapture
		constexpr auto DrawCaptureRadius = 0x220; // UDrawSphereComponent*
	}

	namespace n_USkeletalMeshComponent { // : USkinnedMeshComponent
		constexpr auto AnimBlueprintGeneratedClass = 0x660; // UObject*
		constexpr auto AnimClass = 0x668; // UAnimInstance*
		constexpr auto AnimScriptInstance = 0x670; // UAnimInstance*
		constexpr auto PostProcessAnimInstance = 0x678; // UAnimInstance*
		constexpr auto AnimationData = 0x680; // FSingleAnimationPlayData
		constexpr auto RootBoneTranslation = 0x6a8; // FVector
		constexpr auto LineCheckBoundsScale = 0x6b4; // FVector
		constexpr auto LinkedInstances = 0x6e0; // TArray<UAnimInstance*>
		constexpr auto CachedBoneSpaceTransforms = 0x6f0; // TArray<FTransform>
		constexpr auto CachedComponentSpaceTransforms = 0x700; // TArray<FTransform>
		constexpr auto GlobalAnimRateScale = 0x730; // float
		constexpr auto KinematicBonesUpdateType = 0x734; // EKinematicBonesUpdateToPhysics
		constexpr auto PhysicsTransformUpdateMode = 0x735; // EPhysicsTransformUpdateMode
		constexpr auto AnimationMode = 0x737; // EAnimationMode
		constexpr auto bDisablePostProcessBlueprint = 0x739; // char : 1
		constexpr auto bUpdateOverlapsOnAnimationFinalize = 0x739; // char : 1
		constexpr auto bHasValidBodies = 0x739; // char : 1
		constexpr auto bBlendPhysics = 0x739; // char : 1
		constexpr auto bEnablePhysicsOnDedicatedServer = 0x739; // char : 1
		constexpr auto bUpdateJointsFromAnimation = 0x73a; // char : 1
		constexpr auto bDisableClothSimulation = 0x73a; // char : 1
		constexpr auto bAllowAnimCurveEvaluation = 0x73a; // char : 1
		constexpr auto bDisableAnimCurves = 0x73a; // char : 1
		constexpr auto bCollideWithEnvironment = 0x73a; // char : 1
		constexpr auto bCollideWithAttachedChildren = 0x73b; // char : 1
		constexpr auto bLocalSpaceSimulation = 0x73b; // char : 1
		constexpr auto bResetAfterTeleport = 0x73b; // char : 1
		constexpr auto bDeferKinematicBoneUpdate = 0x73b; // char : 1
		constexpr auto bNoSkeletonUpdate = 0x73b; // char : 1
		constexpr auto bPauseAnims = 0x73b; // char : 1
		constexpr auto bUseRefPoseOnInitAnim = 0x73b; // char : 1
		constexpr auto bEnablePerPolyCollision = 0x73c; // char : 1
		constexpr auto bForceRefpose = 0x73c; // char : 1
		constexpr auto bOnlyAllowAutonomousTickPose = 0x73c; // char : 1
		constexpr auto bIsAutonomousTickPose = 0x73c; // char : 1
		constexpr auto bOldForceRefPose = 0x73c; // char : 1
		constexpr auto bShowPrePhysBones = 0x73c; // char : 1
		constexpr auto bRequiredBonesUpToDate = 0x73c; // char : 1
		constexpr auto bAnimTreeInitialised = 0x73c; // char : 1
		constexpr auto bIncludeComponentLocationIntoBounds = 0x73d; // char : 1
		constexpr auto bEnableLineCheckWithBounds = 0x73d; // char : 1
		constexpr auto bUseBendingElements = 0x73d; // char : 1
		constexpr auto bUseTetrahedralConstraints = 0x73d; // char : 1
		constexpr auto bUseThinShellVolumeConstraints = 0x73d; // char : 1
		constexpr auto bUseSelfCollisions = 0x73d; // char : 1
		constexpr auto bUseContinuousCollisionDetection = 0x73d; // char : 1
		constexpr auto bPropagateCurvesToSlaves = 0x73d; // char : 1
		constexpr auto bSkipKinematicUpdateWhenInterpolating = 0x73e; // char : 1
		constexpr auto bSkipBoundsUpdateWhenInterpolating = 0x73e; // char : 1
		constexpr auto bNeedsQueuedAnimEventsDispatched = 0x73e; // char : 1
		constexpr auto CachedAnimCurveUidVersion = 0x740; // uint16_t
		constexpr auto MassMode = 0x742; // EClothMassMode
		constexpr auto UniformMass = 0x744; // float
		constexpr auto TotalMass = 0x748; // float
		constexpr auto Density = 0x74c; // float
		constexpr auto MinPerParticleMass = 0x750; // float
		constexpr auto ClothBlendWeight = 0x754; // float
		constexpr auto EdgeStiffness = 0x758; // float
		constexpr auto BendingStiffness = 0x75c; // float
		constexpr auto AreaStiffness = 0x760; // float
		constexpr auto VolumeStiffness = 0x764; // float
		constexpr auto StrainLimitingStiffness = 0x768; // float
		constexpr auto ShapeTargetStiffness = 0x76c; // float
		constexpr auto DisallowedAnimCurves = 0x770; // TArray<FName>
		constexpr auto BodySetup = 0x780; // UBodySetup*
		constexpr auto OnConstraintBroken = 0x790; // FScriptMulticastDelegate
		constexpr auto ClothingSimulationFactory = 0x7a0; // UClothingSimulationFactory*
		constexpr auto TeleportDistanceThreshold = 0x878; // float
		constexpr auto TeleportRotationThreshold = 0x87c; // float
		constexpr auto LastPoseTickFrame = 0x888; // uint32_t
		constexpr auto ClothingInteractor = 0x8e0; // UClothingSimulationInteractor*
		constexpr auto OnAnimInitialized = 0x9b0; // FScriptMulticastDelegate
	}

	namespace n_APhysicsConstraintActor { // : ARigidBodyBase
		constexpr auto ConstraintComp = 0x218; // UPhysicsConstraintComponent*
		constexpr auto ConstraintActor1 = 0x220; // AActor*
		constexpr auto ConstraintActor2 = 0x228; // AActor*
		constexpr auto bDisableCollision = 0x230; // char : 1
	}

	namespace n_UMM_B_GreatBuilding { // : UWidgetBase
		constexpr auto m_EndStepUpStr = 0x2f0; // int32_t
		constexpr auto m_EndSubStepUpStr = 0x2f4; // int32_t
		constexpr auto m_CombatStr = 0x2f8; // int32_t
		constexpr auto m_GuildSupportEndStr = 0x2fc; // int32_t
		constexpr auto m_BuildingOpenStr = 0x300; // int32_t
		constexpr auto m_SimpleInfo = 0x308; // UMM_BuildingSimpleInfo*
		constexpr auto m_StartAni = 0x310; // UWidgetAnimation*
		constexpr auto m_ScrollBox = 0x318; // UMirScrollBox*
		constexpr auto m_Btn_Back = 0x320; // UMirButton*
		constexpr auto m_BuildingSlots = 0x328; // TMap<int32_t, UMM_GreatBuildingMainSlot*>
	}

	namespace n_UMM_GameOption_Account { // : UWidgetBase
		constexpr auto Txt_CharacterName = 0x2f0; // UMirTextBlock*
		constexpr auto Txt_AccountName = 0x2f8; // UMirTextBlock*
		constexpr auto Btn_EditNickName = 0x300; // UMM_Common_Btn_Symbol*
		constexpr auto Btn_Account_Apple = 0x308; // UMM_Common_Btn_Symbol*
		constexpr auto Txt_Account_Apple = 0x310; // UMirTextBlock*
		constexpr auto Btn_Account_Google = 0x318; // UMM_Common_Btn_Symbol*
		constexpr auto Txt_Account_Google = 0x320; // UMirTextBlock*
		constexpr auto Btn_Account_Facebook = 0x328; // UMM_Common_Btn_Symbol*
		constexpr auto Txt_Account_Facebook = 0x330; // UMirTextBlock*
		constexpr auto Btn_Account_Steam = 0x338; // UMM_Common_Btn_Symbol*
		constexpr auto Txt_Account_Steam = 0x340; // UMirTextBlock*
		constexpr auto Can_Slot_Steam = 0x348; // UMirCanvasPanel*
		constexpr auto Slot_Guest = 0x350; // UPanelWidget*
		constexpr auto Txt_Account_Guest = 0x358; // UMirTextBlock*
		constexpr auto Slot_GuestContinue = 0x360; // UPanelWidget*
		constexpr auto Btn_Account_GuestContinue = 0x368; // UMM_Common_Btn_Symbol*
		constexpr auto m_CB_Help = 0x370; // UMM_Common_Btn*
		constexpr auto m_CB_Customer = 0x378; // UMM_Common_Btn*
		constexpr auto m_CB_ServicePolicy = 0x380; // UMM_Common_Btn*
		constexpr auto m_CB_PrivacyPolicy = 0x388; // UMM_Common_Btn*
		constexpr auto m_CB_Withdraw = 0x390; // UMM_Common_Btn*
		constexpr auto m_CB_Coupon = 0x398; // UMM_Common_Btn*
		constexpr auto m_CB_Community = 0x3a0; // UMM_Common_Btn*
		constexpr auto m_CB_OneStoreLogout = 0x3a8; // UMM_Common_Btn*
		constexpr auto m_CB_ChangeCharacter = 0x3b0; // UMM_Common_Btn*
		constexpr auto m_CB_Logout = 0x3b8; // UMM_Common_Btn*
		constexpr auto m_CB_MistranslationReport = 0x3c0; // UMM_Common_Btn*
		constexpr auto m_Txt_VersionValue = 0x3c8; // UMirTextBlock*
		constexpr auto m_Txt_WhiteListVersionValue = 0x3d0; // UMirTextBlock*
	}

	namespace n_UMM_Hud_QuestMessage { // : UMM_QuestBaseMsg
		constexpr auto m_Hor_NormalBg = 0x318; // UPanelWidget*
		constexpr auto m_Hor_NormalLine = 0x320; // UPanelWidget*
		constexpr auto m_Hor_RelationBg = 0x328; // UPanelWidget*
		constexpr auto m_Hor_RelationLine = 0x330; // UPanelWidget*
	}

	namespace n_UMM_PopUp_GameOption { // : UWidgetBase
		constexpr auto Panel_Goods = 0x2f0; // UPanelWidget*
		constexpr auto MainTabSet = 0x2f8; // UMM_CommonHorizontalTabSet*
		constexpr auto WidgetSwitcher = 0x300; // UWidgetSwitcher*
		constexpr auto GameOption_Account = 0x308; // UMM_GameOption_Account*
		constexpr auto GameOption_InGame = 0x310; // UMM_GameOption_InGame*
		constexpr auto GameOption_Environment = 0x318; // UMM_GameOption_Environment*
		constexpr auto GameOption_PC = 0x320; // UMM_GameOption_PC*
		constexpr auto Btn_Return = 0x328; // UMirButton*
		constexpr auto btn_close = 0x330; // UMM_Common_Btn_Symbol*
	}

	namespace n_UAnimCompress_Automatic { // : UAnimCompress
		constexpr auto MaxEndEffectorError = 0x50; // float
		constexpr auto bRunCurrentDefaultCompressor = 0x54; // char : 1
		constexpr auto bAutoReplaceIfExistingErrorTooGreat = 0x54; // char : 1
		constexpr auto bRaiseMaxErrorToExisting = 0x54; // char : 1
		constexpr auto bTryExhaustiveSearch = 0x54; // char : 1
	}

	namespace n_UMM_DungeonCommonBossInfo { // : UWidgetBase
		constexpr auto rtxtBossInfo = 0x2e0; // UMirRichTextBlock*
		constexpr auto txtEventInfo = 0x2e8; // UMirTextBlock*
		constexpr auto txtBossName = 0x2f0; // UMirTextBlock*
		constexpr auto imgBoss = 0x2f8; // UMirImage*
	}

	namespace n_UMM_PopupGuildGive { // : UWidgetBase
		constexpr auto btn_close = 0x2f0; // UMM_Common_Btn_Symbol*
		constexpr auto Btn_Cancel = 0x2f8; // UMM_Common_Btn*
		constexpr auto btn_confirm = 0x300; // UMM_Common_Btn*
		constexpr auto btn_confirm_lock = 0x308; // UMM_Common_Btn*
		constexpr auto Txt_Title = 0x310; // UMirTextBlock*
		constexpr auto txt_send_name = 0x318; // UMirTextBlock*
		constexpr auto txt_send = 0x320; // UMirTextBlock*
		constexpr auto txt_recv = 0x328; // UMirTextBlock*
		constexpr auto img_send = 0x330; // UMirImage*
		constexpr auto img_recv = 0x338; // UMirImage*
		constexpr auto txt_total_give_count = 0x340; // UMirTextBlock*
		constexpr auto txt_total_give_count_value = 0x348; // UMirTextBlock*
		constexpr auto img_total_give_cost = 0x350; // UMirImage*
		constexpr auto txt_total_give_cost = 0x358; // UMirTextBlock*
		constexpr auto txt_total_give_cost_value = 0x360; // UMirTextBlock*
		constexpr auto img_possession = 0x368; // UMirImage*
		constexpr auto txt_possession = 0x370; // UMirTextBlock*
		constexpr auto txt_possession_value = 0x378; // UMirTextBlock*
		constexpr auto txt_commission = 0x380; // UMirTextBlock*
		constexpr auto txt_commission_value = 0x388; // UMirTextBlock*
		constexpr auto item_make_slider = 0x390; // UMM_Item_Make_Slider_BigInteger*
		constexpr auto switcher = 0x398; // UWidgetSwitcher*
		constexpr auto img_dev = 0x3a0; // UMirImage*
		constexpr auto txt_dev = 0x3a8; // UMirTextBlock*
		constexpr auto m_pToolTip = 0x3b0; // UMM_Common_ToolTipBtn*
		constexpr auto lst_slot = 0x3b8; // TArray<UMM_Popup_GuildDonationSelectSlot*>
	}

	namespace n_UMM_MonsterAnimInstance { // : UMM_AnimInstance
		constexpr auto MoveRate = 0x270; // float
		constexpr auto IdleStartPosition = 0x274; // float
		constexpr auto BattleState = 0x278; // bool
		constexpr auto RotDegree = 0x27c; // float
		constexpr auto IsTrace = 0x280; // bool
		constexpr auto UseMoveAnimation = 0x281; // bool
		constexpr auto CCSTANCE = 0x284; // int32_t
		constexpr auto AniIndex = 0x288; // int32_t
		constexpr auto IdleIndex = 0x28c; // int32_t
		constexpr auto StateEelapsedTime = 0x290; // int32_t
		constexpr auto PlayCustomAnim = 0x294; // bool
		constexpr auto CustomAnimIndex = 0x298; // int32_t
		constexpr auto Monster = 0x2a0; // AMM_Monster*
	}

	namespace n_UMM_UIShopAdsRewardBox { // : UWidgetBase
		constexpr auto m_Txt_RewardBoxTitle = 0x2f0; // UMirTextBlock*
		constexpr auto m_Txt_AdsViewTitle = 0x2f8; // UMirTextBlock*
		constexpr auto m_Txt_AdsViewCount = 0x300; // UMirTextBlock*
		constexpr auto m_Prog_Gague = 0x308; // UMirProgressBar*
		constexpr auto m_Btn_GetRewardBox = 0x310; // UMirButton*
	}

	namespace n_UMM_UserEvent_WebBanner { // : UWidgetBase
		constexpr auto BannerSize = 0x2e0; // FVector2D
		constexpr auto m_Img_Banner = 0x2e8; // UImage*
		constexpr auto mDownloadImage = 0x2f0; // UAsyncTaskDownloadImage*
	}

	namespace n_UMM_Wanted_Slot { // : UWidgetBase
		constexpr auto m_Img_CharacterClass = 0x2e8; // UMirImage*
		constexpr auto m_Txt_CharacterName = 0x2f0; // UMirTextBlock*
		constexpr auto m_Txt_CombatPoint = 0x2f8; // UMirTextBlock*
		constexpr auto m_GuildIcon = 0x300; // UMM_GuildIcon*
		constexpr auto m_Txt_GuildName = 0x308; // UMirTextBlock*
		constexpr auto m_Txt_StackCount = 0x310; // UMirTextBlock*
		constexpr auto m_Img_RewardCost = 0x318; // UMirImage*
		constexpr auto m_Txt_RewardCost = 0x320; // UMirTextBlock*
		constexpr auto m_Img_FamePoint = 0x328; // UMirImage*
		constexpr auto m_Txt_FamePoint = 0x330; // UMirTextBlock*
		constexpr auto m_WidgetSwitcher_Chase = 0x338; // UWidgetSwitcher*
		constexpr auto m_Btn_Chase = 0x340; // UMM_Common_Btn*
		constexpr auto m_Txt_RemainTime = 0x348; // UMirTextBlock*
		constexpr auto m_Img_Disable = 0x350; // UMirImage*
		constexpr auto m_Txt_Complete = 0x358; // UMirTextBlock*
		constexpr auto m_Txt_Expired = 0x360; // UMirTextBlock*
	}

	namespace n_ULeaderboardQueryCallbackProxy { // : UObject
		constexpr auto OnSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto OnFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_USubmixEffectDynamicsProcessorPreset { // : USoundEffectSubmixPreset
		constexpr auto Settings = 0x90; // FSubmixEffectDynamicsProcessorSettings
	}

	namespace n_USubmixEffectFlexiverbPreset { // : USoundEffectSubmixPreset
		constexpr auto Settings = 0x78; // FSubmixEffectFlexiverbSettings
	}

	namespace n_UMM_Common_Popup_Ingame { // : UWidgetBase
		constexpr auto m_Grid_Timer = 0x2f0; // UPanelWidget*
		constexpr auto m_Img_Timer = 0x2f8; // UImage*
		constexpr auto m_Txt_Timer = 0x300; // UTextBlock*
		constexpr auto m_RTxt_Message = 0x308; // UMirRichTextBlock*
		constexpr auto m_CB_First = 0x310; // UMM_Common_Btn*
		constexpr auto m_CB_Second = 0x318; // UMM_Common_Btn*
		constexpr auto m_CB_Cost = 0x320; // UMM_Common_Btn_Cost*
	}

	namespace n_UMirScaleBox { // : UScaleBox
		constexpr auto m_fUserSpecifiedScaleOnFold = 0x140; // float
		constexpr auto m_pDeviceStateListener = 0x148; // UWNAndroidDeviceState*
	}

	namespace n_UMM_Dominion_Base_BossReward { // : UWidgetBase
		constexpr auto m_pImgBoss = 0x2f8; // UMirImage*
		constexpr auto m_pTxtBossName = 0x300; // UMirTextBlock*
		constexpr auto m_pTxtTxtBossLevel = 0x308; // UMirTextBlock*
		constexpr auto m_pTxtBossState = 0x310; // UMirTextBlock*
		constexpr auto m_pScollList = 0x318; // UMirScrollBox*
	}

	namespace n_UMirSystemSoundData { // : UDataAsset
		constexpr auto SC_Master = 0x30; // USoundClass*
		constexpr auto SC_BGM = 0x38; // USoundClass*
		constexpr auto SC_AMBIENT = 0x40; // USoundClass*
		constexpr auto SC_SFX = 0x48; // USoundClass*
		constexpr auto SC_UI = 0x50; // USoundClass*
		constexpr auto SC_VOICE = 0x58; // USoundClass*
		constexpr auto SC_VOICE_DIALOGUE = 0x60; // USoundClass*
		constexpr auto SC_VOICE_Male = 0x68; // USoundClass*
		constexpr auto SC_VOICE_Female = 0x70; // USoundClass*
		constexpr auto Mix_MasterSound = 0x78; // USoundMix*
		constexpr auto Con_DialogueVoice = 0x80; // USoundConcurrency*
		constexpr auto Btn_Click_Common = 0x88; // USoundBase*
		constexpr auto Btn_Drop_Coin = 0x90; // USoundBase*
		constexpr auto Pc_Revival = 0x98; // USoundBase*
		constexpr auto Pc_Meditation_Add_Energy = 0xa0; // USoundBase*
		constexpr auto Pc_Vehicle_Off = 0xa8; // USoundBase*
	}

	namespace n_UWriteAndFlushLeaderboards { // : UBlueprintAsyncActionBase
		constexpr auto OnSuccess = 0x30; // FScriptMulticastDelegate
		constexpr auto OnFail = 0x40; // FScriptMulticastDelegate
	}

	namespace n_USoundNodeDoppler { // : USoundNode
		constexpr auto DopplerIntensity = 0x40; // float
		constexpr auto bUseSmoothing = 0x44; // bool
		constexpr auto SmoothingInterpSpeed = 0x48; // float
	}

	namespace n_AMM_EntityObject { // : APawn
		constexpr auto CapsuleRadius = 0x278; // float
		constexpr auto BodyMesh = 0x280; // USkeletalMeshComponent*
		constexpr auto CapsuleComponent = 0x288; // UCapsuleComponent*
		constexpr auto m_CurrentFSM = 0x2a8; // EFSM_TYPE
	}

	namespace n_UMM_Hud_Chat_BlockList_Slot { // : UWidgetBase
		constexpr auto STRING_BTN_UNBLOCK = 0x2e0; // int32_t
		constexpr auto Txt_Nickname_BlockUser = 0x2e8; // UMirTextBlock*
		constexpr auto Btn_UnBlock = 0x2f0; // UMM_Common_Btn*
		constexpr auto m_BlockUserName = 0x2f8; // FString
	}

	namespace n_UDrawSphereComponent { // : USphereComponent
		constexpr auto SphereRadius = 0x430; // float
	}

	namespace n_UInAppPurchaseRestoreCallbackProxy { // : UObject
		constexpr auto OnSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto OnFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_UMM_Popup_Auction_CBack { // : UWidgetBase
		constexpr auto m_pItemSlot = 0x2e8; // UMM_Popup_Auction_ItemSlot*
		constexpr auto m_pTxtSellCount = 0x2f0; // UMirRichTextBlock*
		constexpr auto m_pTxtTheme = 0x2f8; // UMirTextBlock*
		constexpr auto m_pBtnClose = 0x300; // UMM_Common_Btn_Symbol*
		constexpr auto m_pBtnOk = 0x308; // UMM_Common_Btn*
		constexpr auto m_pBtnCancle = 0x310; // UMM_Common_Btn*
	}

	namespace n_UMM_PopUp_AcquiredItemSlot { // : UWidgetBase
		constexpr auto txt_rank = 0x2e0; // UMirTextBlock*
		constexpr auto img_rank = 0x2e8; // UMirImage*
		constexpr auto Img_Icon = 0x2f0; // UMirImage*
		constexpr auto txt_level = 0x2f8; // UMirTextBlock*
		constexpr auto txt_nickname = 0x300; // UMirTextBlock*
		constexpr auto sb_item = 0x308; // UScrollBox*
	}

	namespace n_UMM_HudDungeonMenu { // : UWidgetBase
		constexpr auto m_iStringID_BtnCancel = 0x2f0; // int32_t
		constexpr auto m_iStringID_BtnExit = 0x2f4; // int32_t
		constexpr auto m_iStringID_ExitDungeon = 0x2f8; // int32_t
		constexpr auto m_iStringID_ExitSecretDungeon_Item = 0x2fc; // int32_t
		constexpr auto m_iStringID_ExitSecretDungeon_Quest = 0x300; // int32_t
		constexpr auto m_pAniDoingEffect = 0x308; // UWidgetAnimation*
		constexpr auto m_pAniAttentionEffect = 0x310; // UWidgetAnimation*
		constexpr auto m_pCan_Tracker = 0x318; // UMirCanvasPanel*
		constexpr auto m_pText_Title = 0x320; // UMirTextBlock*
		constexpr auto m_pText_Mission = 0x328; // UMirTextBlock*
		constexpr auto m_pBtn_Tracker = 0x330; // UButton*
		constexpr auto m_pLimitTimerWidget = 0x338; // ULimitTimerWidget*
		constexpr auto m_pBtn_DropInfo = 0x340; // UButton*
		constexpr auto m_pBtn_Exit = 0x348; // UButton*
		constexpr auto m_imgBtn_DropInfo = 0x350; // UImage*
		constexpr auto m_imgBtn_Exit = 0x358; // UImage*
		constexpr auto m_pCanDoingEffect = 0x360; // UCanvasPanel*
		constexpr auto m_pCanAttentionEffect = 0x368; // UCanvasPanel*
		constexpr auto canDropInfo = 0x370; // UCanvasPanel*
		constexpr auto canExit = 0x378; // UCanvasPanel*
	}

	namespace n_UMaterialExpressionArctangent2 { // : UMaterialExpression
		constexpr auto Y = 0x40; // FExpressionInput
		constexpr auto X = 0x54; // FExpressionInput
	}

	namespace n_UMM_Popup_Chat_UserInfo { // : UWidgetBase
		constexpr auto Txt_UserNickname = 0x300; // UMirTextBlock*
		constexpr auto Btn_CharacterDetail = 0x308; // UMM_Common_Btn*
		constexpr auto Btn_PartyInvite = 0x310; // UMM_Common_Btn*
		constexpr auto Btn_WhisperChat = 0x318; // UMM_Common_Btn*
		constexpr auto Btn_BlockUser = 0x320; // UMM_Common_Btn*
		constexpr auto btn_close = 0x328; // UMM_Common_Btn_Symbol*
		constexpr auto Btn_NickNameCopy = 0x330; // UMM_Common_Btn*
		constexpr auto Btn_MessageCopy = 0x338; // UMM_Common_Btn*
	}

	namespace n_UACLStatsDumpCommandlet { // : UCommandlet
		constexpr auto HelpDescription = 0x28; // FString
		constexpr auto HelpUsage = 0x38; // FString
		constexpr auto HelpWebLink = 0x48; // FString
		constexpr auto HelpParamNames = 0x58; // TArray<FString>
		constexpr auto HelpParamDescriptions = 0x68; // TArray<FString>
		constexpr auto IsServer = 0x78; // char : 1
		constexpr auto IsClient = 0x78; // char : 1
		constexpr auto IsEditor = 0x78; // char : 1
		constexpr auto LogToConsole = 0x78; // char : 1
		constexpr auto ShowErrorCount = 0x78; // char : 1
		constexpr auto ShowProgress = 0x78; // char : 1
	}

	namespace n_UPopup_QuestInfo { // : UWidgetBase
		constexpr auto m_Grid_Item_Info = 0x2e0; // UPanelWidget*
		constexpr auto m_Btn_Close = 0x2e8; // UMM_Common_Btn_Symbol*
		constexpr auto m_Btn_Bg = 0x2f0; // UMirButton*
		constexpr auto m_Btn_BGMain = 0x2f8; // UMirButton*
		constexpr auto m_Txt_QuestInfo = 0x300; // UMirTextBlock*
		constexpr auto m_Txt_QuestDetail = 0x308; // UMirRichTextBlock*
		constexpr auto m_Grid_Obj = 0x310; // UPanelWidget*
		constexpr auto m_Txt_Difficult = 0x318; // UMirTextBlock*
		constexpr auto m_Txt_QuestDetailAdd = 0x320; // UMirRichTextBlock*
	}

	namespace n_UMM_B_HudRightMenu { // : UWidgetBase
		constexpr auto m_iStringID_ExitPhase = 0x2f0; // int32_t
		constexpr auto m_iStringID_BtnCancel = 0x2f4; // int32_t
		constexpr auto m_iStringID_BtnExit = 0x2f8; // int32_t
		constexpr auto m_iStringID_ExitDungeon = 0x2fc; // int32_t
		constexpr auto m_pQuestList = 0x300; // UMM_HudQuestList*
		constexpr auto m_pBtnGiveUp = 0x308; // UMM_HudBtnMenu*
		constexpr auto m_pPhaseExitMenuWidget = 0x310; // UMM_HudBtnMenu*
		constexpr auto m_pBtnFoldQuest = 0x318; // UButton*
		constexpr auto m_AniFoldQuest = 0x320; // UWidgetAnimation*
	}

	namespace n_UMM_CharacterCustomizingModule { // : UObject
		constexpr auto m_pPartsComponent = 0x7c; // TWeakObjectPtr<UMM_CharacterPartsComponent>
	}

	namespace n_UMM_AbilityState_Item_Simple { // : UWidgetBase
		constexpr auto Txt_Title = 0x2f0; // UMirTextBlock*
		constexpr auto Txt_AfterValue = 0x2f8; // UMirTextBlock*
		constexpr auto Img_Option_Grade = 0x300; // UMirImage*
		constexpr auto Img_Option_Icon = 0x308; // UMirImage*
		constexpr auto m_OptionIndex = 0x310; // int32_t
		constexpr auto m_IsEqupipped = 0x314; // bool
		constexpr auto m_IsRandomOption = 0x315; // bool
	}

	namespace n_UAssetExportTask { // : UObject
		constexpr auto Object = 0x28; // UObject*
		constexpr auto Exporter = 0x30; // UExporter*
		constexpr auto Filename = 0x38; // FString
		constexpr auto bSelected = 0x48; // bool
		constexpr auto bReplaceIdentical = 0x49; // bool
		constexpr auto bPrompt = 0x4a; // bool
		constexpr auto bAutomated = 0x4b; // bool
		constexpr auto bUseFileArchive = 0x4c; // bool
		constexpr auto bWriteEmptyFiles = 0x4d; // bool
		constexpr auto IgnoreObjectList = 0x50; // TArray<UObject*>
		constexpr auto Options = 0x60; // UObject*
		constexpr auto Errors = 0x68; // TArray<FString>
	}

	namespace n_UParticleSystem { // : UFXSystemAsset
		constexpr auto UpdateTime_FPS = 0x30; // float
		constexpr auto UpdateTime_Delta = 0x34; // float
		constexpr auto WarmupTime = 0x38; // float
		constexpr auto WarmupTickRate = 0x3c; // float
		constexpr auto Emitters = 0x40; // TArray<UParticleEmitter*>
		constexpr auto PreviewComponent = 0x50; // UParticleSystemComponent*
		constexpr auto CurveEdSetup = 0x58; // UInterpCurveEdSetup*
		constexpr auto LODDistanceCheckTime = 0x60; // float
		constexpr auto MacroUVRadius = 0x64; // float
		constexpr auto LODDistances = 0x68; // TArray<float>
		constexpr auto LODSettings = 0x78; // TArray<FParticleSystemLOD>
		constexpr auto FixedRelativeBoundingBox = 0x88; // FBox
		constexpr auto SecondsBeforeInactive = 0xa4; // float
		constexpr auto Delay = 0xa8; // float
		constexpr auto DelayLow = 0xac; // float
		constexpr auto bOrientZAxisTowardCamera = 0xb0; // char : 1
		constexpr auto bUseFixedRelativeBoundingBox = 0xb0; // char : 1
		constexpr auto bShouldResetPeakCounts = 0xb0; // char : 1
		constexpr auto bHasPhysics = 0xb0; // char : 1
		constexpr auto bUseRealtimeThumbnail = 0xb0; // char : 1
		constexpr auto ThumbnailImageOutOfDate = 0xb0; // char : 1
		constexpr auto bUseDelayRange = 0xb1; // char : 1
		constexpr auto bAllowManagedTicking = 0xb1; // char : 1
		constexpr auto bAutoDeactivate = 0xb1; // char : 1
		constexpr auto bRegenerateLODDuplicate = 0xb1; // char : 1
		constexpr auto SystemUpdateMode = 0xb2; // EParticleSystemUpdateMode
		constexpr auto LODMethod = 0xb3; // ParticleSystemLODMethod
		constexpr auto InsignificantReaction = 0xb4; // EParticleSystemInsignificanceReaction
		constexpr auto OcclusionBoundsMethod = 0xb5; // EParticleSystemOcclusionBoundsMethod
		constexpr auto MaxSignificanceLevel = 0xb7; // EParticleSignificanceLevel
		constexpr auto MinTimeBetweenTicks = 0xb8; // uint32_t
		constexpr auto InsignificanceDelay = 0xbc; // float
		constexpr auto MacroUVPosition = 0xc0; // FVector
		constexpr auto CustomOcclusionBounds = 0xcc; // FBox
		constexpr auto SoloTracking = 0xe8; // TArray<FLODSoloTrack>
		constexpr auto NamedMaterialSlots = 0xf8; // TArray<FNamedEmitterMaterial>
	}

	namespace n_UParticleModuleAcceleration { // : UParticleModuleAccelerationBase
		constexpr auto Acceleration = 0x38; // FRawDistributionVector
		constexpr auto bApplyOwnerScale = 0x80; // char : 1
	}

	namespace n_AMissionFailTrigger { // : AActivateTrigger
		constexpr auto m_EditorTriggerName = 0x220; // FString
		constexpr auto m_pActiveTriggerArray = 0x230; // TArray<AActivateTrigger*>
		constexpr auto m_TriggerIndex = 0x240; // int32_t
		constexpr auto m_TriggerType = 0x244; // ETriggerType
		constexpr auto m_bActiveTriggerCondition = 0x268; // bool
		constexpr auto m_bActivated = 0x269; // bool
		constexpr auto m_pTriggerManager = 0x270; // AMM_TriggerManager*
	}

	namespace n_UInterpTrackInstLinearColorProp { // : UInterpTrackInstProperty
		constexpr auto ResetColor = 0x40; // FLinearColor
	}

	namespace n_UAnimMontage { // : UAnimCompositeBase
		constexpr auto BlendIn = 0xa8; // FAlphaBlend
		constexpr auto BlendInTime = 0xd8; // float
		constexpr auto BlendOut = 0xe0; // FAlphaBlend
		constexpr auto BlendOutTime = 0x110; // float
		constexpr auto BlendOutTriggerTime = 0x114; // float
		constexpr auto SyncGroup = 0x118; // FName
		constexpr auto SyncSlotIndex = 0x120; // int32_t
		constexpr auto MarkerData = 0x128; // FMarkerSyncData
		constexpr auto CompositeSections = 0x148; // TArray<FCompositeSection>
		constexpr auto SlotAnimTracks = 0x158; // TArray<FSlotAnimationTrack>
		constexpr auto BranchingPoints = 0x168; // TArray<FBranchingPoint>
		constexpr auto bEnableRootMotionTranslation = 0x178; // bool
		constexpr auto bEnableRootMotionRotation = 0x179; // bool
		constexpr auto bEnableAutoBlendOut = 0x17a; // bool
		constexpr auto RootMotionRootLock = 0x17b; // ERootMotionRootLock
		constexpr auto BranchingPointMarkers = 0x180; // TArray<FBranchingPointMarker>
		constexpr auto BranchingPointStateNotifyIndices = 0x190; // TArray<int32_t>
		constexpr auto TimeStretchCurve = 0x1a0; // FTimeStretchCurve
		constexpr auto TimeStretchCurveName = 0x1c8; // FName
	}

	namespace n_UMaterialExpressionEyeAdaptation { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UVerticalBox { // : UPanelWidget
		constexpr auto Slots = 0x108; // TArray<UPanelSlot*>
	}

	namespace n_UMM_B_XdracoStorage { // : UWidgetBase
		constexpr auto INVENTORY_ID = 0x2e0; // int32_t
		constexpr auto m_InvenLeft = 0x2e8; // UMM_Xdraco_InvenLeft*
		constexpr auto m_InvenRight = 0x2f0; // UMM_Xdraco_InvenRight*
	}

	namespace n_UFirebaseGoogleServerAuthCode { // : UBlueprintAsyncActionBase
		constexpr auto OnComplete = 0x30; // FScriptMulticastDelegate
	}

	namespace n_UMM_Hud_Chat_BlockList { // : UWidgetBase
		constexpr auto Txt_Title = 0x2f0; // UMirTextBlock*
		constexpr auto btn_close = 0x2f8; // UMM_Common_Btn_Symbol*
		constexpr auto m_ListView_UserList = 0x300; // UMirListView*
		constexpr auto m_arUserSlotObj = 0x308; // TArray<UHudChatUserSlotObj*>
	}

	namespace n_UMM_PopUp_Quest_Obtain { // : UWidgetBase
		constexpr auto m_ObtainMissionToStr = 0x2e0; // int32_t
		constexpr auto m_ObtainRequestToStr = 0x2e4; // int32_t
		constexpr auto m_MissionRewardToStr = 0x2e8; // int32_t
		constexpr auto m_RequestRewardToStr = 0x2ec; // int32_t
		constexpr auto m_MissionCompleteToStr = 0x2f0; // int32_t
		constexpr auto m_CloseToStr = 0x2f4; // int32_t
		constexpr auto m_CancleMissionToStr = 0x2f8; // int32_t
		constexpr auto m_CancleRequestToStr = 0x2fc; // int32_t
		constexpr auto m_Title = 0x300; // UMirTextBlock*
		constexpr auto m_Mission = 0x308; // UMirTextBlock*
		constexpr auto m_RewardSlots = 0x310; // TArray<UMM_Slot_Material*>
		constexpr auto m_CancleBtn = 0x320; // UMirButton*
		constexpr auto m_CloseBtn = 0x328; // UMM_Common_Btn_Symbol*
		constexpr auto m_ObtainBtn = 0x330; // UMM_Common_Btn*
		constexpr auto m_PopupTitle = 0x338; // UMirTextBlock*
		constexpr auto m_PopupReward = 0x340; // UMirTextBlock*
		constexpr auto m_OpenAni = 0x348; // UWidgetAnimation*
		constexpr auto m_CloseAni = 0x350; // UWidgetAnimation*
		constexpr auto m_Info = 0x358; // UMM_Slot_Quest_Info*
	}

	namespace n_URequestNewPublishPermissions { // : UBlueprintAsyncActionBase
		constexpr auto OnSuccess = 0x30; // FScriptMulticastDelegate
		constexpr auto OnFail = 0x40; // FScriptMulticastDelegate
	}

	namespace n_UMM_Popup_StageOccupation { // : UWidgetBase
		constexpr auto m_AniStart = 0x2e0; // UWidgetAnimation*
		constexpr auto m_Txt_StageName = 0x2e8; // UMirTextBlock*
		constexpr auto m_Txt_OuucpationInfo = 0x2f0; // URichTextBox*
		constexpr auto m_Can_Stage_MSG = 0x2f8; // UOverlay*
		constexpr auto m_Txt_Stage_MSG = 0x300; // UMirTextBlock*
	}

	namespace n_USoundNode { // : UObject
		constexpr auto ChildNodes = 0x28; // TArray<USoundNode*>
	}

	namespace n_UMM_Skill_AwakenSlot { // : UWidgetBase
		constexpr auto mRTxtName = 0x2e0; // UMirRichTextBlock*
		constexpr auto mRTxtAwakenDescList = 0x2e8; // TArray<UMirRichTextBlock*>
	}

	namespace n_UPaperTerrainSplineComponent { // : USplineComponent
		constexpr auto SplineCurves = 0x418; // FSplineCurves
		constexpr auto SplineInfo = 0x480; // FInterpCurveVector
		constexpr auto SplineRotInfo = 0x498; // FInterpCurveQuat
		constexpr auto SplineScaleInfo = 0x4b0; // FInterpCurveVector
		constexpr auto SplineReparamTable = 0x4c8; // FInterpCurveFloat
		constexpr auto bAllowSplineEditingPerInstance = 0x4e0; // bool
		constexpr auto ReparamStepsPerSegment = 0x4e4; // int32_t
		constexpr auto Duration = 0x4e8; // float
		constexpr auto bStationaryEndpoints = 0x4ec; // bool
		constexpr auto bSplineHasBeenEdited = 0x4ed; // bool
		constexpr auto bModifiedByConstructionScript = 0x4ee; // bool
		constexpr auto bInputSplinePointsToConstructionScript = 0x4ef; // bool
		constexpr auto bDrawDebug = 0x4f0; // bool
		constexpr auto bClosedLoop = 0x4f1; // bool
		constexpr auto bLoopPositionOverride = 0x4f2; // bool
		constexpr auto LoopPosition = 0x4f4; // float
		constexpr auto DefaultUpVector = 0x4f8; // FVector
	}

	namespace n_UMM_GuildIcon { // : UWidgetBase
		constexpr auto Img_Icon = 0x2e0; // UMirImage*
		constexpr auto img_frame = 0x2e8; // UMirImage*
	}

	namespace n_UMM_Popup_Invite_Alarm { // : UWidgetBase
		constexpr auto m_Txt_Alarm_Count = 0x2e0; // UMirTextBlock*
		constexpr auto m_CB_Close = 0x2e8; // UMM_Common_Btn_Symbol*
		constexpr auto m_Slot_Invite_Alarm = 0x2f0; // UMM_Invite_Alarm_Slot*
		constexpr auto m_CB_Accept = 0x2f8; // UMM_Common_Btn*
		constexpr auto m_CB_Refuse = 0x300; // UMM_Common_Btn*
	}

	namespace n_ULandscapeWeightmapUsage { // : UObject
		constexpr auto ChannelUsage = 0x28; // ULandscapeComponent* [0x4]
		constexpr auto LayerGuid = 0x48; // FGuid
	}

	namespace n_AAbstractNavData { // : ANavigationData
		constexpr auto RenderingComp = 0x220; // UPrimitiveComponent*
		constexpr auto NavDataConfig = 0x228; // FNavDataConfig
		constexpr auto bEnableDrawing = 0x2a0; // char : 1
		constexpr auto bForceRebuildOnLoad = 0x2a0; // char : 1
		constexpr auto bAutoDestroyWhenNoNavigation = 0x2a0; // char : 1
		constexpr auto bCanBeMainNavData = 0x2a0; // char : 1
		constexpr auto bCanSpawnOnRebuild = 0x2a0; // char : 1
		constexpr auto bRebuildAtRuntime = 0x2a0; // char : 1
		constexpr auto RuntimeGeneration = 0x2a4; // ERuntimeGenerationType
		constexpr auto ObservedPathsTickInterval = 0x2a8; // float
		constexpr auto DataVersion = 0x2ac; // uint32_t
		constexpr auto SupportedAreas = 0x390; // TArray<FSupportedAreaData>
	}

	namespace n_UGameplayTagsList { // : UObject
		constexpr auto ConfigFileName = 0x28; // FString
		constexpr auto GameplayTagList = 0x38; // TArray<FGameplayTagTableRow>
	}

	namespace n_UGameplayTask { // : UObject
		constexpr auto InstanceName = 0x30; // FName
		constexpr auto ResourceOverlapPolicy = 0x3a; // ETaskResourceOverlapPolicy
		constexpr auto ChildTask = 0x60; // UGameplayTask*
	}

	namespace n_UOnlineSubsystemExtendedFacebookWidget { // : UUserWidget
		constexpr auto WebBrowser = 0x240; // UOnlineSubsystemExtendedFacebookWebBrowser*
		constexpr auto m_Btn_Close = 0x268; // UButton*
	}

	namespace n_UChaosPhysicalMaterial { // : UObject
		constexpr auto Friction = 0x28; // float
		constexpr auto Restitution = 0x2c; // float
		constexpr auto SleepingLinearVelocityThreshold = 0x30; // float
		constexpr auto SleepingAngularVelocityThreshold = 0x34; // float
	}

	namespace n_UMM_Popup_ItemEquip { // : UWidgetBase
		constexpr auto Slot_FromItem = 0x2f0; // UMM_Slot_Registered_Circle*
		constexpr auto Slot_ToItem = 0x2f8; // UMM_Slot_Registered_Circle*
		constexpr auto BattlePointSlot = 0x300; // UMM_AbilityState_Item*
		constexpr auto Txt_FromItemName = 0x308; // UMirTextBlock*
		constexpr auto Txt_ToItemName = 0x310; // UMirTextBlock*
		constexpr auto RichTxt_InfoMessage = 0x318; // UMirRichTextBlock*
		constexpr auto btn_close = 0x320; // UMM_Common_Btn_Symbol*
		constexpr auto Btn_Cancel = 0x328; // UMM_Common_Btn*
		constexpr auto btn_equip = 0x330; // UMM_Common_Btn*
		constexpr auto m_Txt_BattlePointName = 0x338; // UMirTextBlock*
		constexpr auto m_Txt_BattlePoint = 0x340; // UMirTextBlock*
		constexpr auto m_Img_Deco_Arrow = 0x348; // UMirImage*
		constexpr auto m_Txt_AfterValue = 0x350; // UMirTextBlock*
		constexpr auto m_ComparePoint = 0x358; // UMM_Common_ComparePoint*
		constexpr auto m_Img_Option_Grade = 0x360; // UMirImage*
		constexpr auto LEVEL_COUNT_EFFECT = 0x368; // int32_t
		constexpr auto TARGET_SLOT_LOOP_EFFECT = 0x36c; // int32_t
	}

	namespace n_UNavigationPath { // : UObject
		constexpr auto PathUpdatedNotifier = 0x28; // FScriptMulticastDelegate
		constexpr auto PathPoints = 0x38; // TArray<FVector>
		constexpr auto RecalculateOnInvalidation = 0x48; // ENavigationOptionFlag
	}

	namespace n_UMM_GuildJoinReqeustListSlot { // : UWidgetBase
		constexpr auto img_rank = 0x2e0; // UMirImage*
		constexpr auto txt_rank = 0x2e8; // UMirTextBlock*
		constexpr auto img_class = 0x2f0; // UMirImage*
		constexpr auto Txt_Name = 0x2f8; // UMirTextBlock*
		constexpr auto txt_level = 0x300; // UMirTextBlock*
		constexpr auto txt_join_type = 0x308; // UMirTextBlock*
		constexpr auto txt_time = 0x310; // UMirTextBlock*
		constexpr auto Btn_Main = 0x318; // UMirButton*
		constexpr auto CombatPoint = 0x320; // UMM_Common_CombatPoint*
	}

	namespace n_UMM_ScreenMsg { // : UMM_MessageWidgetBase
		constexpr auto m_fShowTime = 0x2f0; // float
		constexpr auto m_AniStart = 0x2f8; // UWidgetAnimation*
		constexpr auto m_RTxt_Message = 0x328; // UMirRichTextBlock*
	}

	namespace n_UBTTask_SetTagCooldown { // : UBTTaskNode
		constexpr auto CooldownTag = 0x70; // FGameplayTag
		constexpr auto bAddToExistingDuration = 0x78; // bool
		constexpr auto CooldownDuration = 0x7c; // float
	}

	namespace n_USceneCaptureComponent { // : USceneComponent
		constexpr auto PrimitiveRenderMode = 0x220; // ESceneCapturePrimitiveRenderMode
		constexpr auto CaptureSource = 0x221; // ESceneCaptureSource
		constexpr auto HiddenComponents = 0x228; // TArray<TWeakObjectPtr<UPrimitiveComponent>>
		constexpr auto HiddenActors = 0x238; // TArray<AActor*>
		constexpr auto ShowOnlyComponents = 0x248; // TArray<TWeakObjectPtr<UPrimitiveComponent>>
		constexpr auto ShowOnlyActors = 0x258; // TArray<AActor*>
		constexpr auto bCaptureEveryFrame = 0x268; // bool
		constexpr auto bCaptureOnMovement = 0x269; // bool
		constexpr auto bAlwaysPersistRenderingState = 0x26a; // bool
		constexpr auto LODDistanceFactor = 0x26c; // float
		constexpr auto MaxViewDistanceOverride = 0x270; // float
		constexpr auto CaptureSortPriority = 0x274; // int32_t
		constexpr auto ShowFlagSettings = 0x278; // TArray<FEngineShowFlagsSetting>
		constexpr auto ViewportOffsetX = 0x290; // float
		constexpr auto ViewportOffsetY = 0x294; // float
		constexpr auto ViewportOriginX = 0x298; // float
		constexpr auto ViewportOriginY = 0x29c; // float
		constexpr auto ViewportSizeX = 0x2a0; // float
		constexpr auto ViewportSizeY = 0x2a4; // float
		constexpr auto ProfilingEventName = 0x2b0; // FString
	}

	namespace n_UBTTask_UpdateEnableSkills { // : UBTTaskNode
		constexpr auto ReturnResult = 0x70; // EBTNodeResult
		constexpr auto IsSmite = 0x71; // bool
	}

	namespace n_UMM_CharInfoDetail { // : UWidgetBase
		constexpr auto ScrollBox_Offset = 0x2f0; // int32_t
		constexpr auto SkipTimer_ScrollBox = 0x2f4; // float
		constexpr auto m_CloseBtn = 0x2f8; // UMM_Common_Btn_Symbol*
		constexpr auto m_ScrollBox = 0x300; // UMirWrapScrollBox*
		constexpr auto m_ScrollPanel_1 = 0x308; // UMirCanvasPanel*
		constexpr auto m_ScrollPanel_2 = 0x310; // UMirCanvasPanel*
		constexpr auto m_VBox_Panel = 0x318; // TArray<UVerticalBox*>
		constexpr auto m_AniStart = 0x328; // UWidgetAnimation*
		constexpr auto m_AniEnd = 0x330; // UWidgetAnimation*
		constexpr auto m_SlotList_1 = 0x338; // TArray<UMM_Option_Ability*>
		constexpr auto m_SlotList_2 = 0x348; // TArray<UMM_Option_Ability*>
		constexpr auto m_SlotList_3 = 0x358; // TArray<UMM_Option_Ability*>
		constexpr auto m_SlotList_4 = 0x368; // TArray<UMM_Option_Ability*>
		constexpr auto m_pRefWidget = 0x398; // UMM_Option_Ability*
		constexpr auto m_ScrollDots = 0x3a0; // UMM_Scroll_Dots*
		constexpr auto ScrollBox_Offset_Old = 0x3a8; // int32_t
		constexpr auto EventSkip = 0x3ac; // bool
	}

	namespace n_UEngine { // : UObject
		constexpr auto TinyFont = 0x30; // UFont*
		constexpr auto TinyFontName = 0x38; // FSoftObjectPath
		constexpr auto SmallFont = 0x50; // UFont*
		constexpr auto SmallFontName = 0x58; // FSoftObjectPath
		constexpr auto MediumFont = 0x70; // UFont*
		constexpr auto MediumFontName = 0x78; // FSoftObjectPath
		constexpr auto LargeFont = 0x90; // UFont*
		constexpr auto LargeFontName = 0x98; // FSoftObjectPath
		constexpr auto SubtitleFont = 0xb0; // UFont*
		constexpr auto SubtitleFontName = 0xb8; // FSoftObjectPath
		constexpr auto AdditionalFonts = 0xd0; // TArray<UFont*>
		constexpr auto AdditionalFontNames = 0xe8; // TArray<FString>
		constexpr auto ConsoleClass = 0xf8; // UConsole*
		constexpr auto ConsoleClassName = 0x100; // FSoftClassPath
		constexpr auto GameViewportClientClass = 0x118; // UGameViewportClient*
		constexpr auto GameViewportClientClassName = 0x120; // FSoftClassPath
		constexpr auto LocalPlayerClass = 0x138; // ULocalPlayer*
		constexpr auto LocalPlayerClassName = 0x140; // FSoftClassPath
		constexpr auto WorldSettingsClass = 0x158; // AWorldSettings*
		constexpr auto WorldSettingsClassName = 0x160; // FSoftClassPath
		constexpr auto NavigationSystemClassName = 0x178; // FSoftClassPath
		constexpr auto NavigationSystemClass = 0x190; // UNavigationSystemBase*
		constexpr auto NavigationSystemConfigClassName = 0x198; // FSoftClassPath
		constexpr auto NavigationSystemConfigClass = 0x1b0; // UNavigationSystemConfig*
		constexpr auto AvoidanceManagerClassName = 0x1b8; // FSoftClassPath
		constexpr auto AvoidanceManagerClass = 0x1d0; // UAvoidanceManager*
		constexpr auto PhysicsCollisionHandlerClass = 0x1d8; // UPhysicsCollisionHandler*
		constexpr auto PhysicsCollisionHandlerClassName = 0x1e0; // FSoftClassPath
		constexpr auto GameUserSettingsClassName = 0x1f8; // FSoftClassPath
		constexpr auto GameUserSettingsClass = 0x210; // UGameUserSettings*
		constexpr auto AIControllerClassName = 0x218; // FSoftClassPath
		constexpr auto GameUserSettings = 0x230; // UGameUserSettings*
		constexpr auto LevelScriptActorClass = 0x238; // ALevelScriptActor*
		constexpr auto LevelScriptActorClassName = 0x240; // FSoftClassPath
		constexpr auto DefaultBlueprintBaseClassName = 0x258; // FSoftClassPath
		constexpr auto GameSingletonClassName = 0x270; // FSoftClassPath
		constexpr auto GameSingleton = 0x288; // UObject*
		constexpr auto AssetManagerClassName = 0x290; // FSoftClassPath
		constexpr auto AssetManager = 0x2a8; // UAssetManager*
		constexpr auto DefaultTexture = 0x2b0; // UTexture2D*
		constexpr auto DefaultTextureName = 0x2b8; // FSoftObjectPath
		constexpr auto DefaultDiffuseTexture = 0x2d0; // UTexture*
		constexpr auto DefaultDiffuseTextureName = 0x2d8; // FSoftObjectPath
		constexpr auto DefaultBSPVertexTexture = 0x2f0; // UTexture2D*
		constexpr auto DefaultBSPVertexTextureName = 0x2f8; // FSoftObjectPath
		constexpr auto HighFrequencyNoiseTexture = 0x310; // UTexture2D*
		constexpr auto HighFrequencyNoiseTextureName = 0x318; // FSoftObjectPath
		constexpr auto DefaultBokehTexture = 0x330; // UTexture2D*
		constexpr auto DefaultBokehTextureName = 0x338; // FSoftObjectPath
		constexpr auto DefaultBloomKernelTexture = 0x350; // UTexture2D*
		constexpr auto DefaultBloomKernelTextureName = 0x358; // FSoftObjectPath
		constexpr auto WireframeMaterial = 0x370; // UMaterial*
		constexpr auto WireframeMaterialName = 0x378; // FString
		constexpr auto HairDefaultMaterial = 0x388; // UMaterial*
		constexpr auto HairDefaultMaterialName = 0x390; // FString
		constexpr auto HairDebugMaterial = 0x3a0; // UMaterial*
		constexpr auto HairDebugMaterialName = 0x3a8; // FString
		constexpr auto DebugMeshMaterial = 0x3b8; // UMaterial*
		constexpr auto DebugMeshMaterialName = 0x3c0; // FSoftObjectPath
		constexpr auto EmissiveMeshMaterial = 0x3d8; // UMaterial*
		constexpr auto EmissiveMeshMaterialName = 0x3e0; // FSoftObjectPath
		constexpr auto LevelColorationLitMaterial = 0x3f8; // UMaterial*
		constexpr auto LevelColorationLitMaterialName = 0x400; // FString
		constexpr auto LevelColorationUnlitMaterial = 0x410; // UMaterial*
		constexpr auto LevelColorationUnlitMaterialName = 0x418; // FString
		constexpr auto LightingTexelDensityMaterial = 0x428; // UMaterial*
		constexpr auto LightingTexelDensityName = 0x430; // FString
		constexpr auto ShadedLevelColorationLitMaterial = 0x440; // UMaterial*
		constexpr auto ShadedLevelColorationLitMaterialName = 0x448; // FString
		constexpr auto ShadedLevelColorationUnlitMaterial = 0x458; // UMaterial*
		constexpr auto ShadedLevelColorationUnlitMaterialName = 0x460; // FString
		constexpr auto RemoveSurfaceMaterial = 0x470; // UMaterial*
		constexpr auto RemoveSurfaceMaterialName = 0x478; // FSoftObjectPath
		constexpr auto VertexColorMaterial = 0x490; // UMaterial*
		constexpr auto VertexColorMaterialName = 0x498; // FString
		constexpr auto VertexColorViewModeMaterial_ColorOnly = 0x4a8; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_ColorOnly = 0x4b0; // FString
		constexpr auto VertexColorViewModeMaterial_AlphaAsColor = 0x4c0; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_AlphaAsColor = 0x4c8; // FString
		constexpr auto VertexColorViewModeMaterial_RedOnly = 0x4d8; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_RedOnly = 0x4e0; // FString
		constexpr auto VertexColorViewModeMaterial_GreenOnly = 0x4f0; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_GreenOnly = 0x4f8; // FString
		constexpr auto VertexColorViewModeMaterial_BlueOnly = 0x508; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_BlueOnly = 0x510; // FString
		constexpr auto DebugEditorMaterialName = 0x520; // FSoftObjectPath
		constexpr auto ConstraintLimitMaterial = 0x538; // UMaterial*
		constexpr auto ConstraintLimitMaterialX = 0x540; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialXAxis = 0x548; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialY = 0x550; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialYAxis = 0x558; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialZ = 0x560; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialZAxis = 0x568; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialPrismatic = 0x570; // UMaterialInstanceDynamic*
		constexpr auto InvalidLightmapSettingsMaterial = 0x578; // UMaterial*
		constexpr auto InvalidLightmapSettingsMaterialName = 0x580; // FSoftObjectPath
		constexpr auto PreviewShadowsIndicatorMaterial = 0x598; // UMaterial*
		constexpr auto PreviewShadowsIndicatorMaterialName = 0x5a0; // FSoftObjectPath
		constexpr auto ArrowMaterial = 0x5b8; // UMaterial*
		constexpr auto ArrowMaterialYellow = 0x5c0; // UMaterialInstanceDynamic*
		constexpr auto ArrowMaterialName = 0x5c8; // FSoftObjectPath
		constexpr auto LightingOnlyBrightness = 0x5e0; // FLinearColor
		constexpr auto ShaderComplexityColors = 0x5f0; // TArray<FLinearColor>
		constexpr auto QuadComplexityColors = 0x600; // TArray<FLinearColor>
		constexpr auto LightComplexityColors = 0x610; // TArray<FLinearColor>
		constexpr auto StationaryLightOverlapColors = 0x620; // TArray<FLinearColor>
		constexpr auto LODColorationColors = 0x630; // TArray<FLinearColor>
		constexpr auto HLODColorationColors = 0x640; // TArray<FLinearColor>
		constexpr auto StreamingAccuracyColors = 0x650; // TArray<FLinearColor>
		constexpr auto MinPixelShaderAdditiveComplexityCount = 0x660; // float
		constexpr auto MinES2PixelShaderAdditiveComplexityCount = 0x664; // float
		constexpr auto MinES3PixelShaderAdditiveComplexityCount = 0x668; // float
		constexpr auto MaxPixelShaderAdditiveComplexityCount = 0x66c; // float
		constexpr auto MaxES2PixelShaderAdditiveComplexityCount = 0x670; // float
		constexpr auto MaxES3PixelShaderAdditiveComplexityCount = 0x674; // float
		constexpr auto MinLightMapDensity = 0x678; // float
		constexpr auto IdealLightMapDensity = 0x67c; // float
		constexpr auto MaxLightMapDensity = 0x680; // float
		constexpr auto bRenderLightMapDensityGrayscale = 0x684; // char : 1
		constexpr auto RenderLightMapDensityGrayscaleScale = 0x688; // float
		constexpr auto RenderLightMapDensityColorScale = 0x68c; // float
		constexpr auto LightMapDensityVertexMappedColor = 0x690; // FLinearColor
		constexpr auto LightMapDensitySelectedColor = 0x6a0; // FLinearColor
		constexpr auto StatColorMappings = 0x6b0; // TArray<FStatColorMapping>
		constexpr auto DefaultPhysMaterial = 0x6c0; // UPhysicalMaterial*
		constexpr auto DefaultPhysMaterialName = 0x6c8; // FSoftObjectPath
		constexpr auto ActiveGameNameRedirects = 0x6e0; // TArray<FGameNameRedirect>
		constexpr auto ActiveClassRedirects = 0x6f0; // TArray<FClassRedirect>
		constexpr auto ActivePluginRedirects = 0x700; // TArray<FPluginRedirect>
		constexpr auto ActiveStructRedirects = 0x710; // TArray<FStructRedirect>
		constexpr auto PreIntegratedSkinBRDFTexture = 0x720; // UTexture2D*
		constexpr auto PreIntegratedSkinBRDFTextureName = 0x728; // FSoftObjectPath
		constexpr auto BlueNoiseTexture = 0x740; // UTexture2D*
		constexpr auto BlueNoiseTextureName = 0x748; // FSoftObjectPath
		constexpr auto MiniFontTexture = 0x760; // UTexture2D*
		constexpr auto MiniFontTextureName = 0x768; // FSoftObjectPath
		constexpr auto WeightMapPlaceholderTexture = 0x780; // UTexture*
		constexpr auto WeightMapPlaceholderTextureName = 0x788; // FSoftObjectPath
		constexpr auto LightMapDensityTexture = 0x7a0; // UTexture2D*
		constexpr auto LightMapDensityTextureName = 0x7a8; // FSoftObjectPath
		constexpr auto GameViewport = 0x7c8; // UGameViewportClient*
		constexpr auto DeferredCommands = 0x7d0; // TArray<FString>
		constexpr auto TickCycles = 0x7e0; // int32_t
		constexpr auto GameCycles = 0x7e4; // int32_t
		constexpr auto ClientCycles = 0x7e8; // int32_t
		constexpr auto NearClipPlane = 0x7ec; // float
		constexpr auto bHardwareSurveyEnabled = 0x7f0; // char : 1
		constexpr auto bSubtitlesEnabled = 0x7f0; // char : 1
		constexpr auto bSubtitlesForcedOff = 0x7f0; // char : 1
		constexpr auto MaximumLoopIterationCount = 0x7f4; // int32_t
		constexpr auto bCanBlueprintsTickByDefault = 0x7f8; // char : 1
		constexpr auto bOptimizeAnimBlueprintMemberVariableAccess = 0x7f8; // char : 1
		constexpr auto bAllowMultiThreadedAnimationUpdate = 0x7f8; // char : 1
		constexpr auto bEnableEditorPSysRealtimeLOD = 0x7f8; // char : 1
		constexpr auto bSmoothFrameRate = 0x7f8; // char : 1
		constexpr auto bUseFixedFrameRate = 0x7f8; // char : 1
		constexpr auto FixedFrameRate = 0x7fc; // float
		constexpr auto SmoothedFrameRateRange = 0x800; // FFloatRange
		constexpr auto DefaultCustomTimeStep = 0x810; // UEngineCustomTimeStep*
		constexpr auto CurrentCustomTimeStep = 0x818; // UEngineCustomTimeStep*
		constexpr auto CustomTimeStepClassName = 0x820; // FSoftClassPath
		constexpr auto DefaultTimecodeProvider = 0x838; // UTimecodeProvider*
		constexpr auto CustomTimecodeProvider = 0x840; // UTimecodeProvider*
		constexpr auto DefaultTimecodeProviderClassName = 0x848; // FSoftClassPath
		constexpr auto TimecodeProviderClassName = 0x860; // FSoftClassPath
		constexpr auto DefaultTimecodeFrameRate = 0x878; // FFrameRate
		constexpr auto bCheckForMultiplePawnsSpawnedInAFrame = 0x880; // char : 1
		constexpr auto NumPawnsAllowedToBeSpawnedInAFrame = 0x884; // int32_t
		constexpr auto bShouldGenerateLowQualityLightmaps = 0x888; // char : 1
		constexpr auto C_WorldBox = 0x88c; // FColor
		constexpr auto C_BrushWire = 0x890; // FColor
		constexpr auto C_AddWire = 0x894; // FColor
		constexpr auto C_SubtractWire = 0x898; // FColor
		constexpr auto C_SemiSolidWire = 0x89c; // FColor
		constexpr auto C_NonSolidWire = 0x8a0; // FColor
		constexpr auto C_WireBackground = 0x8a4; // FColor
		constexpr auto C_ScaleBoxHi = 0x8a8; // FColor
		constexpr auto C_VolumeCollision = 0x8ac; // FColor
		constexpr auto C_BSPCollision = 0x8b0; // FColor
		constexpr auto C_OrthoBackground = 0x8b4; // FColor
		constexpr auto C_Volume = 0x8b8; // FColor
		constexpr auto C_BrushShape = 0x8bc; // FColor
		constexpr auto StreamingDistanceFactor = 0x8c0; // float
		constexpr auto GameScreenshotSaveDirectory = 0x8c8; // FDirectoryPath
		constexpr auto TransitionType = 0x8d8; // ETransitionType
		constexpr auto TransitionDescription = 0x8e0; // FString
		constexpr auto TransitionGameMode = 0x8f0; // FString
		constexpr auto MeshLODRange = 0x900; // float
		constexpr auto bAllowMatureLanguage = 0x904; // char : 1
		constexpr auto CameraRotationThreshold = 0x908; // float
		constexpr auto CameraTranslationThreshold = 0x90c; // float
		constexpr auto PrimitiveProbablyVisibleTime = 0x910; // float
		constexpr auto MaxOcclusionPixelsFraction = 0x914; // float
		constexpr auto bPauseOnLossOfFocus = 0x918; // char : 1
		constexpr auto MaxParticleResize = 0x91c; // int32_t
		constexpr auto MaxParticleResizeWarn = 0x920; // int32_t
		constexpr auto PendingDroppedNotes = 0x928; // TArray<FDropNoteInfo>
		constexpr auto NetClientTicksPerSecond = 0x938; // float
		constexpr auto DisplayGamma = 0x93c; // float
		constexpr auto MinDesiredFrameRate = 0x940; // float
		constexpr auto DefaultSelectedMaterialColor = 0x944; // FLinearColor
		constexpr auto SelectedMaterialColor = 0x954; // FLinearColor
		constexpr auto SelectionOutlineColor = 0x964; // FLinearColor
		constexpr auto SubduedSelectionOutlineColor = 0x974; // FLinearColor
		constexpr auto SelectedMaterialColorOverride = 0x984; // FLinearColor
		constexpr auto bIsOverridingSelectedColor = 0x994; // bool
		constexpr auto bEnableOnScreenDebugMessages = 0x998; // char : 1
		constexpr auto bEnableOnScreenDebugMessagesDisplay = 0x998; // char : 1
		constexpr auto bSuppressMapWarnings = 0x998; // char : 1
		constexpr auto bDisableAILogging = 0x998; // char : 1
		constexpr auto bEnableVisualLogRecordingOnStart = 0x99c; // uint32_t
		constexpr auto ScreenSaverInhibitorSemaphore = 0x9a4; // int32_t
		constexpr auto bLockReadOnlyLevels = 0x9a8; // char : 1
		constexpr auto ParticleEventManagerClassPath = 0x9b0; // FString
		constexpr auto SelectionHighlightIntensity = 0x9d0; // float
		constexpr auto BSPSelectionHighlightIntensity = 0x9d4; // float
		constexpr auto SelectionHighlightIntensityBillboards = 0x9d8; // float
		constexpr auto NetDriverDefinitions = 0xc08; // TArray<FNetDriverDefinition>
		constexpr auto ServerActors = 0xc18; // TArray<FString>
		constexpr auto RuntimeServerActors = 0xc28; // TArray<FString>
		constexpr auto NetErrorLogInterval = 0xc38; // float
		constexpr auto bStartedLoadMapMovie = 0xc48; // char : 1
		constexpr auto NextWorldContextHandle = 0xc90; // int32_t
	}

	namespace n_UMM_Popup_UserEvent { // : UWidgetBase
		constexpr auto m_Txt_Title = 0x2f0; // UMirTextBlock*
		constexpr auto m_C_Btn_Close = 0x2f8; // UMM_Common_Btn_Symbol*
		constexpr auto m_ScrollBox_Tab = 0x300; // UMirScrollBox*
		constexpr auto m_Can_List = 0x308; // UMirCanvasPanel*
		constexpr auto m_Can_Event = 0x310; // UMirCanvasPanel*
		constexpr auto m_UserEvent_Attendance_Month = 0x318; // UMM_UserEvent_Attendance_Month*
		constexpr auto m_UserEvent_Attendance_Day = 0x320; // UMM_UserEvent_Attendance_Day*
		constexpr auto m_UserEvent_Attendance_Day_02 = 0x328; // UMM_UserEvent_Attendance_Day_02*
		constexpr auto m_UserEvent_BattlePass = 0x330; // UMM_UserEvent_BattlePass*
		constexpr auto m_UserEvent_Goal = 0x338; // UMM_UserEvent_Goal*
		constexpr auto m_UserEvent_WebBrowser = 0x340; // UMM_UserEvent_WebBrowser*
		constexpr auto m_UserEvent_Gacha = 0x348; // UMM_UserEvent_Gacha*
		constexpr auto m_UserEvent_Benediction = 0x350; // UMM_UserEvent_Benediction*
		constexpr auto m_UserEvent_Siege = 0x358; // UMM_UserEvent_Siege*
		constexpr auto m_UserEvent_BattlePass_Attendance = 0x360; // UMM_USerEvent_BP_Attendance*
		constexpr auto m_C_Empty_Notice = 0x368; // UMM_Common_Board_Notice*
	}

	namespace n_UInterpGroupInstCamera { // : UInterpGroupInst
		constexpr auto Group = 0x28; // UInterpGroup*
		constexpr auto GroupActor = 0x30; // AActor*
		constexpr auto TrackInst = 0x38; // TArray<UInterpTrackInst*>
	}

	namespace n_UMM_Common_Item_NameTag { // : UWidgetBase
		constexpr auto Txt_TargetItemName = 0x2f0; // UMirTextBlock*
		constexpr auto Txt_TargetItemSmeltingLv = 0x2f8; // UMirTextBlock*
		constexpr auto Img_TargetItemTier = 0x300; // UMirImage*
		constexpr auto Panel_TargetItemGradePanel = 0x308; // UPanelWidget*
		constexpr auto Txt_TargetItemGrade = 0x310; // UMirTextBlock*
		constexpr auto Panel_TargetItemPolishPanel = 0x318; // UPanelWidget*
		constexpr auto Img_TargetItemPolishEffect_One = 0x320; // UMirImage*
		constexpr auto Img_TargetItemPolishEffect_All = 0x328; // UMirImage*
		constexpr auto Panel_TargetItemSetPanel = 0x330; // UPanelWidget*
		constexpr auto m_GridTier = 0x338; // UPanelWidget*
	}

	namespace n_UMM_UserEvent_Gacha { // : UWidgetBase
		constexpr auto m_Txt_Title = 0x2f0; // UMirTextBlock*
		constexpr auto m_Txt_Event_RemainTime = 0x2f8; // UMirTextBlock*
		constexpr auto m_Txt_DailyRemainCount = 0x300; // UMirTextBlock*
		constexpr auto m_Slot_Material_Main = 0x308; // UMM_Slot_Material*
		constexpr auto m_Txt_Main_ItemName = 0x310; // UMirTextBlock*
		constexpr auto m_Slot_Material = 0x318; // UMM_Slot_Material* [0x8]
		constexpr auto m_Can_AuraEffect = 0x358; // UPanelWidget*
		constexpr auto m_Img_IcnItemGrade = 0x360; // UMirImage*
		constexpr auto m_Img_Indicator = 0x368; // UMirImage*
		constexpr auto m_Btn_Mileage = 0x370; // UMirButton*
		constexpr auto m_RTxt_MileagePoint = 0x378; // UMirRichTextBlock*
		constexpr auto m_Img_GradeEffect = 0x380; // UImage*
		constexpr auto m_Synthesis_PointUp_Effect = 0x388; // UMirCanvasPanel*
		constexpr auto m_C_Btn_Gacha_Item = 0x390; // UMM_UserEvent_Gacha_Btn* [0x2]
		constexpr auto m_C_Btn_Gacha_Money = 0x3a0; // UMM_Common_Btn_Cost* [0x2]
		constexpr auto m_AniPointUP = 0x3b0; // UWidgetAnimation*
	}

	namespace n_UBTDecorator_ReachedMoveGoal { // : UBTDecorator
		constexpr auto bInverseCondition = 0x60; // char : 1
		constexpr auto FlowAbortMode = 0x64; // EBTFlowAbortMode
	}

	namespace n_UMovieSceneCaptureProtocolBase { // : UObject
		constexpr auto State = 0x50; // EMovieSceneCaptureProtocolState
	}

	namespace n_UShapeComponent { // : UPrimitiveComponent
		constexpr auto ShapeBodySetup = 0x418; // UBodySetup*
		constexpr auto AreaClass = 0x420; // UNavAreaBase*
		constexpr auto ShapeColor = 0x428; // FColor
		constexpr auto bDrawOnlyIfSelected = 0x42c; // char : 1
		constexpr auto bShouldCollideWhenPlacing = 0x42c; // char : 1
		constexpr auto bDynamicObstacle = 0x42c; // char : 1
	}

	namespace n_UMonsterEntityComponent { // : UActorComponent
		constexpr auto m_Owner = 0xb0; // TWeakObjectPtr<AMM_Monster>
	}

	namespace n_UChaosSolverSettings { // : UDeveloperSettings
		constexpr auto DefaultChaosSolverActorClass = 0x40; // FSoftClassPath
	}

	namespace n_UGeometryCollectionComponent { // : UMeshComponent
		constexpr auto ChaosSolverActor = 0x448; // AChaosSolverActor*
		constexpr auto RestCollection = 0x530; // UGeometryCollection*
		constexpr auto InitializationFields = 0x538; // TArray<AFieldSystemActor*>
		constexpr auto Simulating = 0x548; // bool
		constexpr auto ObjectType = 0x550; // EObjectStateTypeEnum
		constexpr auto EnableClustering = 0x551; // bool
		constexpr auto ClusterGroupIndex = 0x554; // int32_t
		constexpr auto MaxClusterLevel = 0x558; // int32_t
		constexpr auto DamageThreshold = 0x560; // TArray<float>
		constexpr auto ClusterConnectionType = 0x570; // EClusterConnectionTypeEnum
		constexpr auto CollisionGroup = 0x574; // int32_t
		constexpr auto CollisionSampleFraction = 0x578; // float
		constexpr auto PhysicalMaterial = 0x580; // UChaosPhysicalMaterial*
		constexpr auto InitialVelocityType = 0x588; // EInitialVelocityTypeEnum
		constexpr auto InitialLinearVelocity = 0x58c; // FVector
		constexpr auto InitialAngularVelocity = 0x598; // FVector
		constexpr auto CacheParameters = 0x5a8; // FGeomComponentCacheParameters
		constexpr auto NotifyGeometryCollectionPhysicsStateChange = 0x5f8; // FScriptMulticastDelegate
		constexpr auto NotifyGeometryCollectionPhysicsLoadingStateChange = 0x608; // FScriptMulticastDelegate
		constexpr auto OnChaosBreakEvent = 0x630; // FScriptMulticastDelegate
		constexpr auto DesiredCacheTime = 0x640; // float
		constexpr auto CachePlayback = 0x644; // bool
		constexpr auto OnChaosPhysicsCollision = 0x648; // FScriptMulticastDelegate
		constexpr auto bNotifyBreaks = 0x658; // bool
		constexpr auto bNotifyCollisions = 0x659; // bool
		constexpr auto DummyBodySetup = 0x808; // UBodySetup*
	}

	namespace n_UInterpTrackLinearColorBase { // : UInterpTrack
		constexpr auto LinearColorTrack = 0x70; // FInterpCurveLinearColor
		constexpr auto CurveTension = 0x88; // float
	}

	namespace n_UMaterialExpressionDecalLifetimeOpacity { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UTestMovieSceneTrack { // : UMovieSceneTrack
		constexpr auto bHighPassFilter = 0x58; // bool
		constexpr auto SectionArray = 0x60; // TArray<UMovieSceneSection*>
	}

	namespace n_UVisibilityBinding { // : UPropertyBinding
		constexpr auto SourceObject = 0x28; // TWeakObjectPtr<UObject>
		constexpr auto SourcePath = 0x30; // FDynamicPropertyPath
		constexpr auto DestinationProperty = 0x58; // FName
	}

	namespace n_UMM_Dominion_History { // : UWidgetBase
		constexpr auto m_pTxtHistoryTitle = 0x2f8; // UMirTextBlock*
		constexpr auto m_pListView_History = 0x300; // UMirListView*
		constexpr auto m_pNoticeEmpty = 0x308; // UMM_Common_Board_Notice*
	}

	namespace n_UGachaDirectingData { // : UDataAsset
		constexpr auto GachaBoxMeshs = 0x30; // TMap<EGachaBoxType, USkeletalMesh*>
		constexpr auto GachaResultSprite = 0x80; // TMap<EGachaResultType, UPaperSprite*>
		constexpr auto GachaResultMeshs = 0xd0; // TMap<EGachaResultType, USkeletalMesh*>
		constexpr auto GachaResultAnimation = 0x120; // UClass*
		constexpr auto TombstoneTypeEffects = 0x148; // TMap<EGachaResultType, UParticleSystem*>
		constexpr auto LowGradeBeginEffects = 0x198; // UParticleSystem*
		constexpr auto HighGradeBeginEffects = 0x1c0; // UParticleSystem*
		constexpr auto LowGradeGlowEffects = 0x1e8; // UParticleSystem*
		constexpr auto HighGradeGlowEffects = 0x210; // UParticleSystem*
		constexpr auto GradeOpenEffect = 0x238; // TMap<int32_t, UParticleSystem*>
		constexpr auto GradeOpenGlowEffect = 0x288; // TMap<int32_t, UParticleSystem*>
		constexpr auto InteractionEffects = 0x2d8; // TMap<EGachaBoxType, UParticleSystem*>
		constexpr auto DragEffects = 0x328; // TArray<UParticleSystem*>
		constexpr auto DragEffectStep = 0x338; // TArray<float>
		constexpr auto InteractionOpenEffect = 0x348; // UParticleSystem*
		constexpr auto InteractionMaterialEffect = 0x370; // TMap<int32_t, UParticleSystem*>
		constexpr auto EnterButtonSound = 0x3c0; // USoundBase*
		constexpr auto OpenButtonSound = 0x3e8; // USoundBase*
		constexpr auto GlowEffectSound = 0x410; // USoundBase*
		constexpr auto DragSparkSound = 0x438; // USoundBase*
		constexpr auto DragReleaseSound = 0x460; // USoundBase*
		constexpr auto GachaOpenGap = 0x488; // float
		constexpr auto GachaOpenSequence = 0x490; // TArray<int32_t>
		constexpr auto DragMaxSize = 0x4a0; // float
		constexpr auto DragCameraShakeMaxScale = 0x4a4; // float
		constexpr auto HighGradeStandard = 0x4a8; // int32_t
	}

	namespace n_UCanvasPanel { // : UPanelWidget
		constexpr auto Slots = 0x108; // TArray<UPanelSlot*>
	}

	namespace n_URetainerBox { // : UContentWidget
		constexpr auto RenderOnInvalidation = 0x120; // bool
		constexpr auto RenderOnPhase = 0x121; // bool
		constexpr auto Phase = 0x124; // int32_t
		constexpr auto PhaseCount = 0x128; // int32_t
		constexpr auto EffectMaterial = 0x130; // UMaterialInterface*
		constexpr auto TextureParameter = 0x13c; // FName
	}

	namespace n_UMaterialExpressionTextureSampleParameterCube { // : UMaterialExpressionTextureSampleParameter
		constexpr auto ParameterName = 0xd0; // FName
		constexpr auto ExpressionGUID = 0xd8; // FGuid
		constexpr auto Group = 0xe8; // FName
	}

	namespace n_UAISenseConfig { // : UObject
		constexpr auto DebugColor = 0x28; // FColor
		constexpr auto MaxAge = 0x2c; // float
		constexpr auto bStartsEnabled = 0x30; // char : 1
	}

	namespace n_UPhysicalAnimationComponent { // : UActorComponent
		constexpr auto StrengthMultiplyer = 0xb0; // float
		constexpr auto SkeletalMeshComponent = 0xb8; // USkeletalMeshComponent*
	}

	namespace n_UCanvasPanelSlot { // : UPanelSlot
		constexpr auto LayoutData = 0x38; // FAnchorData
		constexpr auto bAutoSize = 0x60; // bool
		constexpr auto ZOrder = 0x64; // int32_t
	}

	namespace n_UParticleEmitter { // : UObject
		constexpr auto EmitterName = 0x28; // FName
		constexpr auto SubUVDataOffset = 0x30; // int32_t
		constexpr auto EmitterRenderMode = 0x34; // EEmitterRenderMode
		constexpr auto SignificanceLevel = 0x35; // EParticleSignificanceLevel
		constexpr auto bUseLegacySpawningBehavior = 0x37; // char : 1
		constexpr auto ConvertedModules = 0x37; // char : 1
		constexpr auto bIsSoloing = 0x37; // char : 1
		constexpr auto bCookedOut = 0x37; // char : 1
		constexpr auto bDisabledLODsKeepEmitterAlive = 0x37; // char : 1
		constexpr auto bDisableWhenInsignficant = 0x38; // char : 1
		constexpr auto LODLevels = 0x40; // TArray<UParticleLODLevel*>
		constexpr auto PeakActiveParticles = 0x50; // int32_t
		constexpr auto InitialAllocationCount = 0x54; // int32_t
		constexpr auto QualityLevelSpawnRateScale = 0x58; // float
		constexpr auto DetailModeBitmask = 0x5c; // uint32_t
	}

	namespace n_USoundNodeAssetReferencer { // : USoundNode
		constexpr auto ChildNodes = 0x28; // TArray<USoundNode*>
	}

	namespace n_UMM_NewInventory_Equipment { // : UMM_NewInventory_Base
		constexpr auto m_InvenTab = 0x2e8; // UMM_NewInventoryTab*
		constexpr auto m_Inven = 0x2f0; // UMM_NewInventory*
		constexpr auto m_InvenEquipAction = 0x2f8; // UMM_NewInventory_EquipmentAction*
	}

	namespace n_UMovieSceneStringSection { // : UMovieSceneSection
		constexpr auto StringCurve = 0xe0; // FMovieSceneStringChannel
	}

	namespace n_UMM_UserEvent_GachaResultSlot { // : UWidgetBase
		constexpr auto m_pSlotItem = 0x2f0; // UMM_Slot_Inventory*
		constexpr auto m_pTxtItemName = 0x2f8; // UMirTextBlock*
		constexpr auto m_Txt_Seal = 0x300; // UMirTextBlock*
		constexpr auto m_pCanvasItemName = 0x308; // UMirCanvasPanel*
		constexpr auto m_Img_Gold_Card_Squre_Fx = 0x310; // UMirImage*
		constexpr auto m_pCardOpenAni = 0x318; // UWidgetAnimation*
		constexpr auto m_pHeroCardOpenAni = 0x320; // UWidgetAnimation*
		constexpr auto m_pLegendCardOpenAni = 0x328; // UWidgetAnimation*
		constexpr auto m_pSlotStartAni = 0x330; // UWidgetAnimation*
		constexpr auto m_pBounceAni = 0x338; // UWidgetAnimation*
		constexpr auto m_pCardTurnOpen = 0x340; // UWidgetAnimation*
		constexpr auto m_Grid_Card_Turn_Effect = 0x348; // UGridPanel*
		constexpr auto m_WE_Unsealing_Complete02 = 0x350; // UEffectWidgetBase*
		constexpr auto m_pBtnClick = 0x358; // UMirButton*
		constexpr auto m_pPanelCover = 0x360; // UMirCanvasPanel*
		constexpr auto m_Img_Cover = 0x368; // UMirImage*
		constexpr auto m_pScaleSeal = 0x370; // UScaleBox*
		constexpr auto m_Effect_Panel = 0x378; // UGridPanel*
		constexpr auto m_Effect_Widget = 0x380; // UEffectWidgetBase*
		constexpr auto m_pGreatHeroOpenAni = 0x388; // UWidgetAnimation*
		constexpr auto m_pHeroAppearAni = 0x390; // UWidgetAnimation*
	}

	namespace n_UMM_GuildPeruse { // : UWidgetBase
		constexpr auto btn_sort = 0x2f0; // UMM_Common_Btn_Symbol*
		constexpr auto sb_list = 0x2f8; // UMirScrollBox*
		constexpr auto btn_prev = 0x300; // UMM_Common_Btn_Symbol*
		constexpr auto btn_next = 0x308; // UMM_Common_Btn_Symbol*
		constexpr auto txt_page = 0x310; // UMirTextBlock*
		constexpr auto txt_sort_filter = 0x318; // UMirTextBlock*
		constexpr auto btn_search = 0x320; // UMM_Common_Btn_Symbol*
		constexpr auto bn_empty = 0x328; // UMM_Common_Board_Notice*
		constexpr auto cp_select_type = 0x330; // UMirCanvasPanel*
		constexpr auto cb_all = 0x338; // UMirCheckBox*
		constexpr auto cb_recommend = 0x340; // UMirCheckBox*
		constexpr auto cb_request = 0x348; // UMirCheckBox*
		constexpr auto cb_invited = 0x350; // UMirCheckBox*
		constexpr auto txt_all = 0x358; // UMirTextBlock*
		constexpr auto txt_recommend = 0x360; // UMirTextBlock*
		constexpr auto txt_request = 0x368; // UMirTextBlock*
		constexpr auto txt_invited = 0x370; // UMirTextBlock*
		constexpr auto cp_sort = 0x378; // UMirCanvasPanel*
		constexpr auto btn_sort_rank = 0x380; // UMirButton*
		constexpr auto btn_sort_level = 0x388; // UMirButton*
		constexpr auto btn_sort_combat_power = 0x390; // UMirButton*
		constexpr auto img_sort_rank = 0x398; // UMirImage*
		constexpr auto img_sort_level = 0x3a0; // UMirImage*
		constexpr auto img_sort_combat_power = 0x3a8; // UMirImage*
		constexpr auto btn_sort_bg = 0x3b0; // UMirButton*
	}

	namespace n_UMovieScene2DTransformTrack { // : UMovieScenePropertyTrack
		constexpr auto SectionToKey = 0x58; // UMovieSceneSection*
		constexpr auto PropertyName = 0x60; // FName
		constexpr auto PropertyPath = 0x68; // FString
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_USceneCaptureComponent2D { // : USceneCaptureComponent
		constexpr auto ProjectionType = 0x2d0; // ECameraProjectionMode
		constexpr auto FOVAngle = 0x2d4; // float
		constexpr auto OrthoWidth = 0x2d8; // float
		constexpr auto TextureTarget = 0x2e0; // UTextureRenderTarget2D*
		constexpr auto CompositeMode = 0x2e8; // ESceneCaptureCompositeMode
		constexpr auto PostProcessSettings = 0x2f0; // FPostProcessSettings
		constexpr auto PostProcessBlendWeight = 0x820; // float
		constexpr auto bOverride_CustomNearClippingPlane = 0x824; // char : 1
		constexpr auto CustomNearClippingPlane = 0x828; // float
		constexpr auto bUseCustomProjectionMatrix = 0x82c; // bool
		constexpr auto CustomProjectionMatrix = 0x830; // FMatrix
		constexpr auto bEnableClipPlane = 0x870; // bool
		constexpr auto ClipPlaneBase = 0x874; // FVector
		constexpr auto ClipPlaneNormal = 0x880; // FVector
		constexpr auto bCameraCutThisFrame = 0x88c; // char : 1
		constexpr auto bConsiderUnrenderedOpaquePixelAsFullyTranslucent = 0x88c; // char : 1
	}

	namespace n_UMM_PoolManager { // : UObject
		constexpr auto m_mapMaintainResourcePool = 0xc8; // TMap<FString, FResourcePoolData>
		constexpr auto m_mapMaintainInStageResourcePool = 0x118; // TMap<FString, FResourcePoolData>
		constexpr auto m_mapInstantResourcePool = 0x168; // TMap<FString, FResourcePoolData>
	}

	namespace n_UNavLinkComponent { // : UPrimitiveComponent
		constexpr auto Links = 0x420; // TArray<FNavigationLink>
	}

	namespace n_UAnimNotify_PlaySound { // : UAnimNotify
		constexpr auto sound = 0x38; // USoundBase*
		constexpr auto VolumeMultiplier = 0x40; // float
		constexpr auto PitchMultiplier = 0x44; // float
		constexpr auto bFollow = 0x48; // char : 1
		constexpr auto AttachName = 0x4c; // FName
	}

	namespace n_UCameraShake { // : UObject
		constexpr auto bSingleInstance = 0x28; // char : 1
		constexpr auto OscillationDuration = 0x2c; // float
		constexpr auto OscillationBlendInTime = 0x30; // float
		constexpr auto OscillationBlendOutTime = 0x34; // float
		constexpr auto RotOscillation = 0x38; // FROscillator
		constexpr auto LocOscillation = 0x5c; // FVOscillator
		constexpr auto FOVOscillation = 0x80; // FFOscillator
		constexpr auto AnimPlayRate = 0x8c; // float
		constexpr auto AnimScale = 0x90; // float
		constexpr auto AnimBlendInTime = 0x94; // float
		constexpr auto AnimBlendOutTime = 0x98; // float
		constexpr auto RandomAnimSegmentDuration = 0x9c; // float
		constexpr auto Anim = 0xa0; // UCameraAnim*
		constexpr auto bRandomAnimSegment = 0xa8; // char : 1
		constexpr auto CameraOwner = 0xc0; // APlayerCameraManager*
		constexpr auto ShakeScale = 0x148; // float
		constexpr auto OscillatorTimeRemaining = 0x14c; // float
		constexpr auto AnimInst = 0x150; // UCameraAnimInst*
	}

	namespace n_UMM_ServerSlot_Global { // : UWidgetBase
		constexpr auto SlotBG_CurRegion = 0x2e0; // FLinearColor
		constexpr auto SlotBG_OtherRegion = 0x2f0; // FLinearColor
		constexpr auto m_Img_Bg = 0x318; // UMirImage*
		constexpr auto m_Img_Selected = 0x320; // UMirImage*
		constexpr auto m_Can_Recommend = 0x328; // UPanelWidget*
		constexpr auto m_Img_New = 0x330; // UMirImage*
		constexpr auto m_Txt_ServerName = 0x338; // UMirTextBlock*
		constexpr auto m_Txt_Peace = 0x340; // UMirTextBlock*
		constexpr auto m_Img_ServerCongestionInfo = 0x348; // UMirImage*
		constexpr auto m_Txt_ServerNotice = 0x350; // UMirTextBlock*
		constexpr auto m_Hrz_CharCount = 0x358; // UPanelWidget*
		constexpr auto m_Txt_CharCount = 0x360; // UMirTextBlock*
		constexpr auto m_Btn_Main = 0x368; // UMirButton*
	}

	namespace n_UShareLinkContent { // : UBlueprintAsyncActionBase
		constexpr auto OnSuccess = 0x30; // FScriptMulticastDelegate
		constexpr auto OnFail = 0x40; // FScriptMulticastDelegate
	}

	namespace n_UUIParticleEmitterAsset { // : UObject
		constexpr auto EmitterType = 0x28; // EEmitterType
		constexpr auto EmitSeconds = 0x2c; // float
		constexpr auto MaxParticleCount = 0x30; // FUIParticleProperty
		constexpr auto SpawnParticlePerSecond = 0x818; // FUIParticleProperty
		constexpr auto ParticleEmitAngle = 0x1000; // FUIParticleProperty
		constexpr auto EmitPosRange = 0x17e8; // FRange_Vector2D
		constexpr auto EmitPosition = 0x1800; // FPosotion_Vector2DCurve
		constexpr auto AutoEmitPosRange = 0x27d0; // bool
		constexpr auto AutoScale = 0x27d1; // bool
		constexpr auto ScaleByX = 0x27d2; // bool
		constexpr auto DesignSize = 0x27d4; // FVector2D
		constexpr auto PositionType = 0x27dc; // EPositionType
		constexpr auto LifeSpan = 0x27e0; // FUIParticleProperty
		constexpr auto Size = 0x2fc8; // FUIParticleProperty
		constexpr auto Pivot = 0x37b0; // FUIParticleProperty
		constexpr auto RotationStart = 0x3f98; // FUIParticleProperty
		constexpr auto RotationSpeed = 0x4780; // FUIParticleProperty
		constexpr auto Color = 0x4f68; // FUIParticleProperty
		constexpr auto ResourceObject = 0x5750; // UObject*
		constexpr auto RotationFollowSpeed = 0x5758; // bool
		constexpr auto UseSeparateSize = 0x5759; // bool
		constexpr auto Gravity = 0x5760; // FUIParticleProperty
		constexpr auto StartSpeed = 0x5f48; // FUIParticleProperty
		constexpr auto AirResistance = 0x6730; // FUIParticleProperty
		constexpr auto RadialAcceleration = 0x6f18; // FUIParticleProperty
		constexpr auto TangentialAcceleration = 0x7700; // FUIParticleProperty
		constexpr auto Radius = 0x7ee8; // FUIParticleProperty
		constexpr auto DegreePerSecond = 0x86d0; // FUIParticleProperty
		constexpr auto PositionX = 0x8eb8; // FUIParticleProperty
		constexpr auto PositionY = 0x96a0; // FUIParticleProperty
		constexpr auto ChildrenEmitters = 0x9e88; // TArray<FChildEmitter>
		constexpr auto ScalarParams = 0x9e98; // TArray<FScalarParamCurve>
		constexpr auto ScalarParamsWhenStart = 0x9ea8; // TArray<FScalarParamCurve>
		constexpr auto DrawEffect = 0x9eb8; // EParticleDrawEffect
		constexpr auto UseScaleFollowSpeedDirection = 0x9eb9; // bool
		constexpr auto ScaleFollowSpeedDirection = 0x9ec0; // FUIParticleProperty
		constexpr auto UseScaleFollowSpeedVertical = 0xa6a8; // bool
		constexpr auto ScaleFollowSpeedVertical = 0xa6b0; // FUIParticleProperty
		constexpr auto DirectionScale = 0xae98; // FUIParticleProperty
		constexpr auto VerticalDirectionScale = 0xb680; // FUIParticleProperty
		constexpr auto SineDirectionStart = 0xbe68; // FUIParticleProperty
		constexpr auto SineDirectionSpeed = 0xc650; // FUIParticleProperty
		constexpr auto SineDirectionRange = 0xce38; // FUIParticleProperty
	}

	namespace n_UMM_Login_VersionSlot { // : UWidgetBase
		constexpr auto m_pTxtName = 0x2e0; // UMirTextBlock*
		constexpr auto m_pImgSelect = 0x2e8; // UMirImage*
		constexpr auto m_pBtnMain = 0x2f0; // UMirButton*
	}

	namespace n_UEmoteMeshNotifyState { // : UAnimNotifyState
		constexpr auto pMeshAsset = 0x30; // UStaticMesh*
		constexpr auto LocationOffset = 0x38; // FVector
		constexpr auto RotationOffset = 0x44; // FRotator
		constexpr auto MeshScale = 0x50; // FVector
		constexpr auto AttachBoneName = 0x5c; // FName
		constexpr auto pStaticMeshActor = 0x68; // AStaticMeshActor*
	}

	namespace n_UParticleModuleLocation_Seeded { // : UParticleModuleLocation
		constexpr auto RandomSeedInfo = 0x80; // FParticleRandomSeedInfo
	}

	namespace n_UInAppPurchaseQueryCallbackProxy { // : UObject
		constexpr auto OnSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto OnFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_UMM_B_Unsealing { // : UWidgetBase
		constexpr auto EFFECT_RECOMMEND_MAKE_ITEM = 0x2e0; // int32_t
		constexpr auto m_TotalMenuTID = 0x2e4; // int32_t
		constexpr auto InventoryIDList = 0x2e8; // TArray<int32_t>
		constexpr auto Ani_Open = 0x2f8; // UWidgetAnimation*
		constexpr auto Ani_Close = 0x300; // UWidgetAnimation*
		constexpr auto inventory_unsealing = 0x308; // UMM_NewInventoryUnsealing*
		constexpr auto unsealing = 0x310; // UMM_Forge_Unsealing*
		constexpr auto Btn_Test = 0x318; // UButton*
		constexpr auto Grid_Effect = 0x320; // UPanelWidget*
		constexpr auto Img_Effect = 0x328; // UImage*
		constexpr auto m_Can_Btn_Inventory = 0x330; // UPanelWidget*
		constexpr auto ReqeustResult = 0x338; // int32_t
	}

	namespace n_UMM_Customizing_DoubleScroll { // : UCustomizingComponentBase
		constexpr auto m_ScrollBox = 0x300; // UMirScrollBox*
		constexpr auto m_ListSlotArray = 0x308; // TArray<UMM_Customizing_ListItem*>
	}

	namespace n_UMM_Dominion_Occupation { // : UWidgetBase
		constexpr auto m_pTxtTitle = 0x2f0; // UMirTextBlock*
		constexpr auto m_pImgCastleBg = 0x2f8; // UMirImage*
		constexpr auto m_pCommToolTip = 0x300; // UMM_Common_ToolTipBtn*
		constexpr auto m_pCommGuideBtn = 0x308; // UMM_Common_ToolTipBtn*
		constexpr auto m_pTxtRemainOpenSiege = 0x310; // UMirTextBlock*
		constexpr auto m_pTxtRemainStartSiege = 0x318; // UMirTextBlock*
		constexpr auto m_pBtnRefresh = 0x320; // UMM_Common_Btn_Symbol*
		constexpr auto m_pBtnMain = 0x328; // UMM_Common_Btn*
		constexpr auto m_pCanvasOccupation = 0x330; // UMirCanvasPanel*
		constexpr auto m_pCanvasNormal = 0x338; // UMirCanvasPanel*
		constexpr auto m_ArrAuctionProgressList = 0x340; // TArray<UMM_Occupation_AuctionProgress*>
		constexpr auto m_pCanvasAuctionTitle = 0x350; // UMirCanvasPanel*
		constexpr auto m_pMainAdminPortrait = 0x368; // UMM_GuildMemberPortrait*
		constexpr auto m_pTxtMainAdminTitle = 0x370; // UMirTextBlock*
		constexpr auto m_pTxtMainAdminName = 0x378; // UMirTextBlock*
		constexpr auto m_arrSubAdmin = 0x380; // TArray<UMM_DominionMemberSlot*>
	}

	namespace n_UMM_PopUp_Status_Info { // : UWidgetBase
		constexpr auto Stat_Title = 0x2e0; // UMM_Status_Info*
		constexpr auto Stat_Info = 0x2e8; // TArray<UMM_Status_Info*>
		constexpr auto Txt_StatName = 0x2f8; // UMirTextBlock*
		constexpr auto VBox = 0x300; // UVerticalBox*
		constexpr auto CanvasPanel = 0x308; // UCanvasPanel*
		constexpr auto m_Btn_BGMain = 0x310; // UMirButton*
		constexpr auto Img_Line1 = 0x318; // UMirImage*
		constexpr auto Img_Line2 = 0x320; // UMirImage*
		constexpr auto m_SlotCount = 0x328; // int32_t
		constexpr auto STR_MSGID_TOTAL = 0x32c; // int32_t
		constexpr auto vSizePadding = 0x330; // FVector2D
	}

	namespace n_UMM_Customizing_Picker { // : UCustomizingComponentBase
		constexpr auto m_pComponentTitle = 0x310; // UMM_Customizing_ComponentTitle*
		constexpr auto m_pDragButton = 0x318; // UMM_UI_Drag*
		constexpr auto m_PickerDetail1 = 0x320; // UMM_Customizing_Picker_DetailBar*
		constexpr auto m_PickerDetail2 = 0x328; // UMM_Customizing_Picker_DetailBar*
		constexpr auto m_EditKeyPad = 0x330; // UMM_Customizing_KeyPad*
		constexpr auto m_TouchAreaBG_Parent = 0x338; // UCanvasPanel*
		constexpr auto m_TouchAreaBG = 0x340; // UMirImage*
	}

	namespace n_UMM_UserEvent_Benediction { // : UWidgetBase
		constexpr auto m_Img_Thumb = 0x2f0; // UMirImage*
		constexpr auto m_WebBanner = 0x2f8; // UMM_UserEvent_WebBanner*
		constexpr auto m_RTxt_RemainTime = 0x300; // UMirRichTextBlock*
		constexpr auto m_RTxt_Notice = 0x308; // UMirRichTextBlock*
		constexpr auto m_Img_ItemIcon = 0x310; // UMirImage*
		constexpr auto m_Txt_NeedItemName = 0x318; // UMirTextBlock*
		constexpr auto m_Txt_NeedItemCount = 0x320; // UMirTextBlock*
		constexpr auto m_C_Btn_Select = 0x328; // UMM_Common_Btn*
		constexpr auto m_BenedictionSlot = 0x330; // UMM_UserEvent_BenedictionSlot* [0x5]
	}

	namespace n_UPlayMovieWidget { // : UWidgetBase
		constexpr auto m_MediaPlayer = 0x2e0; // UMediaPlayer*
		constexpr auto m_MediaTexture = 0x2e8; // UMediaTexture*
		constexpr auto m_MediaSource = 0x2f0; // UMediaSource*
		constexpr auto m_fSkipDelayTime = 0x2f8; // float
		constexpr auto m_pSkipBtnPanel = 0x328; // UCanvasPanel*
		constexpr auto m_pSkipButton = 0x330; // UButton*
		constexpr auto m_pMovieSubtitleText = 0x338; // UMirTextBlock*
		constexpr auto m_pSubtitleData = 0x340; // UMovieSubtitleData*
	}

	namespace n_UAnimNotifyState_Trail { // : UAnimNotifyState
		constexpr auto PSTemplate = 0x30; // UParticleSystem*
		constexpr auto FirstSocketName = 0x38; // FName
		constexpr auto SecondSocketName = 0x40; // FName
		constexpr auto WidthScaleMode = 0x48; // ETrailWidthMode
		constexpr auto WidthScaleCurve = 0x4c; // FName
		constexpr auto bRecycleSpawnedSystems = 0x54; // char : 1
	}

	namespace n_UBehaviorTreeComponent { // : UBrainComponent
		constexpr auto NodeInstances = 0x130; // TArray<UBTNode*>
	}

	namespace n_UParticleModuleRotationRate { // : UParticleModuleRotationRateBase
		constexpr auto StartRotationRate = 0x30; // FRawDistributionFloat
	}

	namespace n_UEnvQueryGenerator_PathingGrid { // : UEnvQueryGenerator_SimpleGrid
		constexpr auto PathToItem = 0xe8; // FAIDataProviderBoolValue
		constexpr auto NavigationFilter = 0x118; // UNavigationQueryFilter*
		constexpr auto ScanRangeMultiplier = 0x120; // FAIDataProviderFloatValue
	}

	namespace n_AMiniGame_BackgroundActor { // : AActor
		constexpr auto m_MiniGameActor = 0x218; // AMiniGame_ManagerActor*
	}

	namespace n_AProjectileBullet { // : AProjectileBase
		constexpr auto m_pCollSphereComp = 0x218; // USphereComponent*
		constexpr auto m_pShotParticleComp = 0x220; // UParticleSystemComponent*
		constexpr auto m_pImpactParticleComp = 0x228; // UParticleSystemComponent*
	}

	namespace n_UMaterialExpressionPreSkinnedNormal { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UMM_Auction_Tab_History { // : UMM_Auction_Tab_Base
		constexpr auto m_pTxtSoldCount = 0x300; // UMirTextBlock*
		constexpr auto m_pTxtSoldMoney = 0x308; // UMirTextBlock*
		constexpr auto m_pTxtReceiveMoney = 0x310; // UMirTextBlock*
		constexpr auto m_pListView = 0x318; // UMirListView*
		constexpr auto m_pNotice = 0x320; // UMM_Common_Board_Notice*
	}

	namespace n_UAvfMediaSettings { // : UObject
		constexpr auto NativeAudioOut = 0x28; // bool
	}

	namespace n_UMM_Slot_Quest_Info { // : UWidgetBase
		constexpr auto m_MissionRewardToStr = 0x2e0; // int32_t
		constexpr auto m_RequestRewardToStr = 0x2e4; // int32_t
		constexpr auto m_QuestStageToStr = 0x2e8; // int32_t
		constexpr auto m_CombatPointToStr = 0x2ec; // int32_t
		constexpr auto m_HideCompleteStageToStr = 0x2f0; // int32_t
		constexpr auto m_Title = 0x2f8; // UMirTextBlock*
		constexpr auto m_Mission = 0x300; // UMirTextBlock*
		constexpr auto m_MissionStage = 0x308; // UMirTextBlock*
		constexpr auto m_CombatPoint = 0x310; // UMirRichTextBlock*
		constexpr auto m_PopupReward = 0x318; // UMirTextBlock*
		constexpr auto m_RewardSlots = 0x320; // TArray<UMM_Slot_Material*>
		constexpr auto m_pCommonPartyMember = 0x330; // UMM_Common_PartyMember*
	}

	namespace n_UStreamMediaSource { // : UBaseMediaSource
		constexpr auto StreamUrl = 0x88; // FString
	}

	namespace n_UNavArea_Default { // : UNavArea
		constexpr auto DefaultCost = 0x30; // float
		constexpr auto FixedAreaEnteringCost = 0x34; // float
		constexpr auto DrawColor = 0x38; // FColor
		constexpr auto SupportedAgents = 0x3c; // FNavAgentSelector
		constexpr auto bSupportsAgent0 = 0x40; // char : 1
		constexpr auto bSupportsAgent1 = 0x40; // char : 1
		constexpr auto bSupportsAgent2 = 0x40; // char : 1
		constexpr auto bSupportsAgent3 = 0x40; // char : 1
		constexpr auto bSupportsAgent4 = 0x40; // char : 1
		constexpr auto bSupportsAgent5 = 0x40; // char : 1
		constexpr auto bSupportsAgent6 = 0x40; // char : 1
		constexpr auto bSupportsAgent7 = 0x40; // char : 1
		constexpr auto bSupportsAgent8 = 0x41; // char : 1
		constexpr auto bSupportsAgent9 = 0x41; // char : 1
		constexpr auto bSupportsAgent10 = 0x41; // char : 1
		constexpr auto bSupportsAgent11 = 0x41; // char : 1
		constexpr auto bSupportsAgent12 = 0x41; // char : 1
		constexpr auto bSupportsAgent13 = 0x41; // char : 1
		constexpr auto bSupportsAgent14 = 0x41; // char : 1
		constexpr auto bSupportsAgent15 = 0x41; // char : 1
	}

	namespace n_UAnimNotify_PlayMontageNotifyWindow { // : UAnimNotifyState
		constexpr auto NotifyName = 0x30; // FName
	}

	namespace n_UOperatorField { // : UFieldNodeBase
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto RightField = 0xb8; // UFieldNodeBase*
		constexpr auto LeftField = 0xc0; // UFieldNodeBase*
		constexpr auto Operation = 0xc8; // EFieldOperationType
	}

	namespace n_UMM_BattlePass_Week_Btn { // : UWidgetBase
		constexpr auto STRING_ID_BTN = 0x2f0; // int32_t
		constexpr auto m_Btn_Main = 0x2f8; // UMirButton*
		constexpr auto m_Img_Lock = 0x300; // UMirImage*
		constexpr auto m_Txt_Name = 0x308; // UMirTextBlock*
		constexpr auto m_Img_Select = 0x310; // UMirImage*
		constexpr auto m_Img_Indicator = 0x318; // UMirImage*
	}

	namespace n_UInt32Binding { // : UPropertyBinding
		constexpr auto SourceObject = 0x28; // TWeakObjectPtr<UObject>
		constexpr auto SourcePath = 0x30; // FDynamicPropertyPath
		constexpr auto DestinationProperty = 0x58; // FName
	}

	namespace n_UMM_B_MonNameTag { // : UWidgetBase
		constexpr auto m_Grid_DropMark = 0x2e0; // UPanelWidget*
		constexpr auto m_Img_DropBG = 0x2e8; // UImage*
		constexpr auto m_Img_DropMark = 0x2f0; // UImage*
		constexpr auto m_Grd_Effect = 0x2f8; // UPanelWidget*
		constexpr auto m_Grd_Title = 0x300; // UPanelWidget*
		constexpr auto m_Txt_Title = 0x308; // UTextBlock*
		constexpr auto m_Txt_Name = 0x310; // UTextBlock*
		constexpr auto m_Grd_HP = 0x318; // UPanelWidget*
		constexpr auto m_Prg_HP = 0x320; // UProgressBar*
		constexpr auto m_SpeechBalloonLoc = 0x328; // UImage*
		constexpr auto m_canSharedTargetIcon = 0x330; // UMirCanvasPanel*
		constexpr auto m_pMon = 0x340; // AMM_Monster*
	}

	namespace n_UARTrackedPoint { // : UARTrackedGeometry
		constexpr auto UniqueId = 0x28; // FGuid
		constexpr auto LocalToTrackingTransform = 0x40; // FTransform
		constexpr auto LocalToAlignedTrackingTransform = 0x70; // FTransform
		constexpr auto TrackingState = 0xa0; // EARTrackingState
		constexpr auto UnderlyingMesh = 0xb0; // UMRMeshComponent*
		constexpr auto ObjectClassification = 0xb8; // EARObjectClassification
		constexpr auto LastUpdateFrameNumber = 0xd0; // int32_t
		constexpr auto DebugName = 0xe0; // FName
	}

	namespace n_URichTextBlock { // : UTextLayoutWidget
		constexpr auto Text = 0x128; // FText
		constexpr auto TextStyleSet = 0x140; // UDataTable*
		constexpr auto DecoratorClasses = 0x148; // TArray<URichTextBlockDecorator*>
		constexpr auto bOverrideDefaultStyle = 0x158; // bool
		constexpr auto DefaultTextStyleOverride = 0x160; // FTextBlockStyle
		constexpr auto MinDesiredWidth = 0x3c8; // float
		constexpr auto InstanceDecorators = 0x638; // TArray<URichTextBlockDecorator*>
	}

	namespace n_UMM_SortListBtn { // : UWidgetBase
		constexpr auto m_eLocation = 0x2e0; // ESortListBtn_Location
		constexpr auto m_vAdjustLocation = 0x2e4; // FVector2D
		constexpr auto arSTRING_ID_FRIEND_BTN = 0x2f0; // TArray<int32_t>
		constexpr auto m_Btn_Main = 0x318; // UMirButton*
		constexpr auto m_Overlay_List = 0x320; // UPanelWidget*
		constexpr auto m_Vrt_List = 0x328; // UPanelWidget*
		constexpr auto m_Img_ListBg = 0x330; // UMirImage*
		constexpr auto m_arSortBtn = 0x338; // TArray<UMM_SortBtn*>
	}

	namespace n_UBTTask_BlackboardBase { // : UBTTaskNode
		constexpr auto BlackboardKey = 0x70; // FBlackboardKeySelector
	}

	namespace n_UConsole { // : UObject
		constexpr auto ConsoleTargetPlayer = 0x38; // ULocalPlayer*
		constexpr auto DefaultTexture_Black = 0x40; // UTexture2D*
		constexpr auto DefaultTexture_White = 0x48; // UTexture2D*
		constexpr auto HistoryBuffer = 0x68; // TArray<FString>
	}

	namespace n_UMovieSceneAudioCaptureProtocolBase { // : UMovieSceneCaptureProtocolBase
		constexpr auto State = 0x50; // EMovieSceneCaptureProtocolState
	}

	namespace n_UMM_HudMagicSquareMenu { // : UWidgetBase
		constexpr auto m_iStringID_BtnExit = 0x2f0; // int32_t
		constexpr auto m_iStringID_BtnCancel = 0x2f4; // int32_t
		constexpr auto m_iStringID_ExitMessage = 0x2f8; // int32_t
		constexpr auto m_iStringID_TimerNotiTitle = 0x2fc; // int32_t
		constexpr auto m_iStringID_TimerNotiMessage = 0x300; // int32_t
		constexpr auto m_iStringID_Move = 0x304; // int32_t
		constexpr auto m_iNextMoveEffectID = 0x308; // int32_t
		constexpr auto m_pLimitTimerWidget = 0x310; // ULimitTimerWidget*
		constexpr auto canNextMove = 0x318; // UCanvasPanel*
		constexpr auto canExit = 0x320; // UCanvasPanel*
		constexpr auto canDrop = 0x328; // UCanvasPanel*
		constexpr auto canInfo = 0x330; // UCanvasPanel*
		constexpr auto m_pBtn_NextMove = 0x338; // UButton*
		constexpr auto m_pBtn_Exit = 0x340; // UButton*
		constexpr auto m_pTextChangeTimer = 0x348; // UMirTextBlock*
		constexpr auto m_pBtn_Info = 0x350; // UButton*
		constexpr auto m_pBtn_Drop = 0x358; // UMM_Common_Btn_Symbol*
		constexpr auto m_pGridEffect = 0x360; // UPanelWidget*
		constexpr auto m_pEffectNextMove = 0x368; // UEffectWidgetBase*
		constexpr auto btnAddTime = 0x370; // UMirButton*
		constexpr auto aniRotation = 0x378; // UWidgetAnimation*
	}

	namespace n_UMM_PetAbilitySlot { // : UWidgetBase
		constexpr auto m_RTxt_Title = 0x2e0; // UMirRichTextBlock*
		constexpr auto m_Rtxt_Desc = 0x2e8; // UMirRichTextBlock*
	}

	namespace n_UParticleModuleLocationEmitterDirect { // : UParticleModuleLocationBase
		constexpr auto EmitterName = 0x30; // FName
	}

	namespace n_UClothConfigNv { // : UClothConfigBase
		constexpr auto WindMethod = 0x28; // EClothingWindMethod
		constexpr auto VerticalConstraintConfig = 0x2c; // FClothConstraintSetup
		constexpr auto HorizontalConstraintConfig = 0x3c; // FClothConstraintSetup
		constexpr auto BendConstraintConfig = 0x4c; // FClothConstraintSetup
		constexpr auto ShearConstraintConfig = 0x5c; // FClothConstraintSetup
		constexpr auto SelfCollisionRadius = 0x6c; // float
		constexpr auto SelfCollisionStiffness = 0x70; // float
		constexpr auto SelfCollisionCullScale = 0x74; // float
		constexpr auto Damping = 0x78; // FVector
		constexpr auto Friction = 0x84; // float
		constexpr auto WindDragCoefficient = 0x88; // float
		constexpr auto WindLiftCoefficient = 0x8c; // float
		constexpr auto LinearDrag = 0x90; // FVector
		constexpr auto AngularDrag = 0x9c; // FVector
		constexpr auto LinearInertiaScale = 0xa8; // FVector
		constexpr auto AngularInertiaScale = 0xb4; // FVector
		constexpr auto CentrifugalInertiaScale = 0xc0; // FVector
		constexpr auto SolverFrequency = 0xcc; // float
		constexpr auto StiffnessFrequency = 0xd0; // float
		constexpr auto GravityScale = 0xd4; // float
		constexpr auto GravityOverride = 0xd8; // FVector
		constexpr auto bUseGravityOverride = 0xe4; // bool
		constexpr auto TetherStiffness = 0xe8; // float
		constexpr auto TetherLimit = 0xec; // float
		constexpr auto CollisionThickness = 0xf0; // float
		constexpr auto AnimDriveSpringStiffness = 0xf4; // float
		constexpr auto AnimDriveDamperStiffness = 0xf8; // float
	}

	namespace n_UMM_ShortCutKey { // : UWidgetBase
		constexpr auto cp_slot = 0x2e0; // UMirCanvasPanel*
		constexpr auto Btn_BG = 0x2e8; // UMirButton*
	}

	namespace n_UInvalidationBox { // : UContentWidget
		constexpr auto bCanCache = 0x120; // bool
		constexpr auto CacheRelativeTransforms = 0x121; // bool
	}

	namespace n_AProceduralFoliageVolume { // : AVolume
		constexpr auto ProceduralComponent = 0x250; // UProceduralFoliageComponent*
	}

	namespace n_UMM_PopUp_Detail_Info { // : UWidgetBase
		constexpr auto m_ScrollBox = 0x2e0; // UMirScrollBox*
		constexpr auto m_C_BtnClose = 0x2e8; // UMM_Common_Btn_Symbol*
		constexpr auto m_Notice_Sub = 0x2f0; // UMM_Common_Board_Notice*
		constexpr auto SlotList = 0x2f8; // TArray<UMM_ItemCollectEffectSlot*>
		constexpr auto m_MaxSlotCount = 0x308; // int32_t
		constexpr auto m_CurrentSlotCount = 0x30c; // int32_t
		constexpr auto m_StatAndValue = 0x310; // TMap<int32_t, int32_t>
		constexpr auto m_iNoticeMsgID = 0x360; // int32_t
	}

	namespace n_UAISense_Prediction { // : UAISense
		constexpr auto RegisteredEvents = 0x80; // TArray<FAIPredictionEvent>
	}

	namespace n_USoundNodeMature { // : USoundNode
		constexpr auto ChildNodes = 0x28; // TArray<USoundNode*>
	}

	namespace n_UScaleBoxSlot { // : UPanelSlot
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UInterpData { // : UObject
		constexpr auto InterpLength = 0x28; // float
		constexpr auto PathBuildTime = 0x2c; // float
		constexpr auto InterpGroups = 0x30; // TArray<UInterpGroup*>
		constexpr auto CurveEdSetup = 0x40; // UInterpCurveEdSetup*
		constexpr auto EdSectionStart = 0x48; // float
		constexpr auto EdSectionEnd = 0x4c; // float
		constexpr auto bShouldBakeAndPrune = 0x50; // char : 1
		constexpr auto CachedDirectorGroup = 0x58; // UInterpGroupDirector*
		constexpr auto AllEventNames = 0x60; // TArray<FName>
	}

	namespace n_UEditableGameplayTagQueryExpression_AllTagsMatch { // : UEditableGameplayTagQueryExpression
		constexpr auto Tags = 0x28; // FGameplayTagContainer
	}

	namespace n_UMM_Guild_Icon { // : UWidgetBase
		constexpr auto m_Img_Bg = 0x2f0; // UImage*
		constexpr auto m_Img_Icon = 0x2f8; // UImage*
		constexpr auto m_Img_Selected = 0x300; // UImage*
		constexpr auto m_Btn_Main = 0x308; // UButton*
	}

	namespace n_UMM_Map_AreaBtn { // : UWidgetBase
		constexpr auto m_vWidgetSIze = 0x2e0; // FVector2D
		constexpr auto m_bDrawMapTouchZone = 0x2e8; // bool
		constexpr auto m_ImgAreaIcon = 0x2f8; // UMirImage*
		constexpr auto m_TxtAreaName = 0x300; // UTextBlock*
		constexpr auto m_BtnMain = 0x308; // UButton*
		constexpr auto m_Txt_FieldName_Level = 0x310; // UMirRichTextBlock*
		constexpr auto m_Btn_OccupationInfo = 0x318; // UMirButton*
		constexpr auto m_Can_Icon = 0x320; // UMirCanvasPanel*
		constexpr auto m_Can_Guild = 0x328; // UMirCanvasPanel*
		constexpr auto m_Img_GuildFrame = 0x330; // UImage*
		constexpr auto m_Img_GuildSymbol = 0x338; // UImage*
		constexpr auto m_Img_IcnDominion = 0x340; // UImage*
		constexpr auto m_Canvas_Effect = 0x348; // UMirCanvasPanel*
		constexpr auto m_Img_Effect = 0x350; // UMirImage*
		constexpr auto m_AniMyMap = 0x358; // UWidgetAnimation*
	}

	namespace n_UTextureRenderTargetCube { // : UTextureRenderTarget
		constexpr auto SizeX = 0xd8; // int32_t
		constexpr auto ClearColor = 0xdc; // FLinearColor
		constexpr auto OverrideFormat = 0xec; // EPixelFormat
		constexpr auto bHDR = 0xed; // char : 1
		constexpr auto bForceLinearGamma = 0xed; // char : 1
	}

	namespace n_UMM_Force_LevelUp { // : UWidgetBase
		constexpr auto Img_Symbol = 0x2e0; // UMirImage*
		constexpr auto Txt_Title = 0x2e8; // UMirTextBlock*
		constexpr auto Txt_Description = 0x2f0; // UMirTextBlock*
	}

	namespace n_UMaterialExpressionDynamicParameter { // : UMaterialExpression
		constexpr auto ParamNames = 0x40; // TArray<FString>
		constexpr auto DefaultValue = 0x50; // FLinearColor
		constexpr auto ParameterIndex = 0x60; // uint32_t
	}

	namespace n_UEditableTextBoxWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto EditableTextBoxStyle = 0x30; // FEditableTextBoxStyle
	}

	namespace n_UMM_ItemResult_FailInfo { // : UWidgetBase
		constexpr auto FailGuideStrID = 0x2e0; // int32_t
		constexpr auto NextPercentStrID = 0x2e4; // int32_t
	}

	namespace n_UMM_Popup_AccountSelect { // : UWidgetBase
		constexpr auto m_AniStart = 0x2f0; // UWidgetAnimation*
		constexpr auto m_AniEnd = 0x2f8; // UWidgetAnimation*
		constexpr auto m_Edit_Account = 0x300; // UMirEditableText*
		constexpr auto m_CB_Login = 0x308; // UMM_Common_Btn*
		constexpr auto Btn_GuestLogin = 0x310; // UMirButton*
		constexpr auto Btn_GoogleLogin = 0x318; // UMirButton*
	}

	namespace n_UMM_Btn_HudSkill { // : UWidgetBase
		constexpr auto m_iEffectID_EndCooltime = 0x340; // int32_t
		constexpr auto m_iEffectID_DechChange = 0x344; // int32_t
		constexpr auto m_iEffectID_ContentsOpen = 0x348; // int32_t
		constexpr auto m_iEffectID_Use = 0x34c; // int32_t
		constexpr auto m_iEffectID_DurationSkill = 0x350; // int32_t
		constexpr auto m_iEffectID_ChangeDeck = 0x354; // int32_t
		constexpr auto m_arrBrushCoolTimeFont = 0x358; // TArray<FBrushObject>
		constexpr auto m_CoolTimeFontColor = 0x368; // FLinearColor
		constexpr auto m_CoolTimeFontOverColor = 0x378; // FLinearColor
		constexpr auto AreaButton = 0x388; // UButton*
		constexpr auto LockIcon = 0x390; // UImage*
		constexpr auto SilenceIcon = 0x398; // UMirImage*
		constexpr auto SkillIcon = 0x3a0; // UMirImage*
		constexpr auto CoolTimeGauge = 0x3a8; // UImage*
		constexpr auto CoolTimeCountWarpBox = 0x3b0; // UAlignedWrapBox*
		constexpr auto CoolTimeCount_2 = 0x3b8; // UImage*
		constexpr auto CoolTimeCount_11 = 0x3c0; // UImage*
		constexpr auto CoolTimeCount_101 = 0x3c8; // UImage*
		constexpr auto WaitTimeGauge = 0x3d0; // UImage*
		constexpr auto ManualStatePanel = 0x3d8; // UMirCanvasPanel*
		constexpr auto AutoStateAniPanel = 0x3e0; // UMirCanvasPanel*
		constexpr auto AutoOnEffect = 0x3e8; // UMirImage*
		constexpr auto AutoOnAnimation = 0x3f0; // UWidgetAnimation*
		constexpr auto AutoOffAnimation = 0x3f8; // UWidgetAnimation*
		constexpr auto AutoAnimationPanel = 0x400; // UMirCanvasPanel*
		constexpr auto ManualAnimationPanel = 0x408; // UMirCanvasPanel*
		constexpr auto EffectPanel = 0x410; // UPanelWidget*
		constexpr auto SmiteEffectPanel = 0x418; // UPanelWidget*
		constexpr auto SmiteAnimation = 0x420; // UWidgetAnimation*
		constexpr auto ClickEffectPanel = 0x428; // UPanelWidget*
		constexpr auto ClickAnimation = 0x430; // UWidgetAnimation*
		constexpr auto DeckChangeEffectPanel = 0x438; // UPanelWidget*
		constexpr auto DeckChangeAnimation = 0x440; // UWidgetAnimation*
		constexpr auto CoolEndEffectPanel = 0x448; // UPanelWidget*
		constexpr auto CoolEndAnimation = 0x450; // UWidgetAnimation*
	}

	namespace n_UMM_Popup_Dominion_TaxDetail { // : UWidgetBase
		constexpr auto ScrollBox_Main = 0x2f0; // UMirScrollBox*
		constexpr auto btn_close = 0x2f8; // UMM_Common_Btn_Symbol*
		constexpr auto m_pBtnOut = 0x300; // UMM_Common_Btn*
		constexpr auto Btn_Background = 0x308; // UMirButton*
	}

	namespace n_UMM_TotalQuick_Battle_Tab { // : UWidgetBase
		constexpr auto m_pBtnClick = 0x2e0; // UMirButton*
		constexpr auto m_pImgLock = 0x2e8; // UMirImage*
		constexpr auto m_pImgSelect = 0x2f0; // UImage*
		constexpr auto m_pImgDeSelect = 0x2f8; // UImage*
		constexpr auto m_pTxtName = 0x300; // UTextBlock*
	}

	namespace n_UParticleModuleLocationPrimitiveCylinder_Seeded { // : UParticleModuleLocationPrimitiveCylinder
		constexpr auto RandomSeedInfo = 0x120; // FParticleRandomSeedInfo
	}

	namespace n_UFoliageType_Actor { // : UFoliageType
		constexpr auto ActorClass = 0x360; // AActor*
		constexpr auto bShouldAttachToBaseComponent = 0x368; // bool
	}

	namespace n_AMyAirWalk { // : AActor
		constexpr auto m_fAnimID = 0x230; // float
		constexpr auto m_PlayerIndex = 0x234; // int32_t
		constexpr auto m_bPlayMatinee = 0x238; // bool
		constexpr auto m_Scale = 0x23c; // FVector
		constexpr auto m_fCapsuleHalfHeigth = 0x248; // float
		constexpr auto m_fCapsuleRadius = 0x24c; // float
		constexpr auto m_pMatinee = 0x250; // AMatineeActor*
		constexpr auto m_pMatineeCam = 0x258; // ACameraActor*
		constexpr auto m_SectionNameArray = 0x260; // TArray<FName>
		constexpr auto m_UseBossNameUi = 0x270; // bool
	}

	namespace n_UMM_Customizing_PresetItem { // : UWidgetBase
		constexpr auto m_pAssetImage = 0x2e0; // UMirImage*
		constexpr auto m_pNameText = 0x2e8; // UMirTextBlock*
		constexpr auto m_pSelectImage = 0x2f0; // UMirImage*
		constexpr auto m_pSelectButton = 0x2f8; // UMirButton*
	}

	namespace n_ULandscapeSettings { // : UDeveloperSettings
		constexpr auto MaxNumberOfLayers = 0x38; // int32_t
	}

	namespace n_UMM_Mastery_UpgradeInfo { // : UWidgetBase
		constexpr auto mTxtCurTitle = 0x2e0; // UMirTextBlock*
		constexpr auto mNextTitlePanel = 0x2e8; // UHorizontalBox*
		constexpr auto mTxtNextTitle = 0x2f0; // UMirTextBlock*
		constexpr auto m_CB_Detail = 0x2f8; // UMM_Common_Btn_Symbol*
	}

	namespace n_UInterpTrackInstEvent { // : UInterpTrackInst
		constexpr auto LastUpdatePosition = 0x28; // float
	}

	namespace n_UMM_Popup_ItemCollectInfo { // : UWidgetBase
		constexpr auto m_Panel_Info = 0x2f0; // UPanelWidget*
		constexpr auto m_Img_ScreenBg = 0x2f8; // UMirImage*
		constexpr auto m_Btn_Bg = 0x300; // UMirButton*
		constexpr auto m_Txt_Menu = 0x308; // UMirTextBlock*
		constexpr auto m_Btn_Close = 0x310; // UMM_Common_Btn_Symbol*
		constexpr auto m_Btn_Rigist = 0x318; // UMM_Common_Btn*
		constexpr auto m_Btn_Info = 0x320; // UMM_Common_Btn*
		constexpr auto m_Btn_Search = 0x328; // UMM_Common_Btn*
		constexpr auto m_MenuStrID = 0x330; // int32_t
		constexpr auto m_RegistStrID = 0x334; // int32_t
		constexpr auto m_InfoStrID = 0x338; // int32_t
		constexpr auto m_SearchStrID = 0x33c; // int32_t
		constexpr auto m_DoNotRegist = 0x340; // int32_t
		constexpr auto m_CheckSmeltStr = 0x344; // int32_t
	}

	namespace n_UMM_Popup_Auction_Count { // : UWidgetBase
		constexpr auto m_pItemSlot = 0x2e0; // UMM_Popup_Auction_ItemSlot*
		constexpr auto m_pTxtTheme = 0x2e8; // UMirTextBlock*
		constexpr auto m_pTxtSellCount = 0x2f0; // UMirRichTextBlock*
		constexpr auto m_pTxtPrice = 0x2f8; // UMirTextBlock*
		constexpr auto m_pTxtCommision = 0x300; // UMirTextBlock*
		constexpr auto m_pTxtTotalPrice = 0x308; // UMirTextBlock*
		constexpr auto m_pBtnClose = 0x310; // UMM_Common_Btn_Symbol*
		constexpr auto m_pBtnOk = 0x318; // UMM_Common_Btn*
		constexpr auto m_pBtnCancle = 0x320; // UMM_Common_Btn*
	}

	namespace n_USubmixEffectDelayPreset { // : USoundEffectSubmixPreset
		constexpr auto Settings = 0x74; // FSubmixEffectDelaySettings
		constexpr auto DynamicSettings = 0x80; // FSubmixEffectDelaySettings
	}

	namespace n_UMM_GuildGiftResult { // : UWidgetBase
		constexpr auto img_high_item_icon = 0x2e0; // UMirImage*
		constexpr auto img_high_item_bg = 0x2e8; // UMirImage*
		constexpr auto img_high_item_tier_bg = 0x2f0; // UMirImage*
		constexpr auto txt_high_item_count = 0x2f8; // UMirTextBlock*
		constexpr auto txt_high_item_name = 0x300; // UMirTextBlock*
		constexpr auto txt_high_user_name = 0x308; // UMirTextBlock*
		constexpr auto img_normal_item_icon = 0x310; // UMirImage*
		constexpr auto img_normal_item_bg = 0x318; // UMirImage*
		constexpr auto img_normal_item_tier_bg = 0x320; // UMirImage*
		constexpr auto txt_normal_item_count = 0x328; // UMirTextBlock*
		constexpr auto txt_normal_item_name = 0x330; // UMirTextBlock*
		constexpr auto txt_normal_user_name = 0x338; // UMirTextBlock*
		constexpr auto ani_high_grade = 0x340; // UWidgetAnimation*
		constexpr auto ani_normal_grade = 0x348; // UWidgetAnimation*
		constexpr auto ani_start = 0x350; // UWidgetAnimation*
		constexpr auto ani_end = 0x358; // UWidgetAnimation*
		constexpr auto btn_close = 0x360; // UMirButton*
		constexpr auto txt_close = 0x368; // UMirTextBlock*
		constexpr auto pb_count = 0x370; // UMirProgressBar*
		constexpr auto txt_count = 0x378; // UMirTextBlock*
	}

	namespace n_UInterpGroupInstDirector { // : UInterpGroupInst
		constexpr auto Group = 0x28; // UInterpGroup*
		constexpr auto GroupActor = 0x30; // AActor*
		constexpr auto TrackInst = 0x38; // TArray<UInterpTrackInst*>
	}

	namespace n_UMaterialExpressionTextureProperty { // : UMaterialExpression
		constexpr auto TextureObject = 0x40; // FExpressionInput
		constexpr auto Property = 0x54; // EMaterialExposedTextureProperty
	}

	namespace n_UMM_NewInventory_Vehicle { // : UMM_NewInventory_Base
		constexpr auto m_Inven = 0x2e8; // UMM_NewInventory*
	}

	namespace n_UObjectLibrary { // : UObject
		constexpr auto ObjectBaseClass = 0x28; // UObject*
		constexpr auto bHasBlueprintClasses = 0x30; // bool
		constexpr auto Objects = 0x38; // TArray<UObject*>
		constexpr auto WeakObjects = 0x48; // TArray<TWeakObjectPtr<UObject>>
		constexpr auto bUseWeakReferences = 0x58; // bool
		constexpr auto bIsFullyLoaded = 0x59; // bool
	}

	namespace n_UMM_Common_Popup_Check { // : UWidgetBase
		constexpr auto m_Txt_Title = 0x2e0; // UMirTextBlock*
		constexpr auto m_RTxt_Message = 0x2e8; // UMirRichTextBlock*
		constexpr auto m_Hrz_Notice = 0x2f0; // UPanelWidget*
		constexpr auto m_Txt_Notice = 0x2f8; // UMirTextBlock*
		constexpr auto m_arTxt_Check = 0x300; // UMirTextBlock* [0x4]
		constexpr auto m_arCB = 0x320; // UMM_Common_Btn* [0x2]
		constexpr auto m_CB_Close = 0x330; // UMM_Common_Btn_Symbol*
		constexpr auto m_Btn_Bg = 0x338; // UMirButton*
	}

	namespace n_UMM_Popup_OccupationInfo { // : UWidgetBase
		constexpr auto m_Txt_Name = 0x2e0; // UMirTextBlock*
		constexpr auto m_Img_DominionThumb = 0x2e8; // UImage*
		constexpr auto m_RTxt_RemainTime = 0x2f0; // UMirRichTextBlock*
		constexpr auto m_Can_Guild = 0x2f8; // UMirCanvasPanel*
		constexpr auto m_Txt_Occupiable = 0x300; // UMirTextBlock*
		constexpr auto m_Txt_GuildName = 0x308; // UMirTextBlock*
		constexpr auto m_Txt_GuildMasterName = 0x310; // UMirTextBlock*
		constexpr auto m_Img_GuildFrame = 0x318; // UImage*
		constexpr auto m_Img_GuildSymbol = 0x320; // UImage*
		constexpr auto m_C_Btn_GuildInfo = 0x328; // UMM_Common_Btn_Symbol*
		constexpr auto m_Can_Buff = 0x330; // UMirCanvasPanel* [0x2]
		constexpr auto m_Img_IcnBuff = 0x340; // UMirImage* [0x2]
		constexpr auto m_RTxt_Buff = 0x350; // UMirRichTextBlock* [0x2]
		constexpr auto m_C_Btn_Close = 0x360; // UMM_Common_Btn*
		constexpr auto m_C_Btn_Enter = 0x368; // UMM_Common_Btn*
		constexpr auto m_C_Btn_X = 0x370; // UMM_Common_Btn_Symbol*
	}

	namespace n_UParticleModuleVectorFieldGlobal { // : UParticleModuleVectorFieldBase
		constexpr auto bOverrideGlobalVectorFieldTightness = 0x30; // char : 1
		constexpr auto GlobalVectorFieldScale = 0x34; // float
		constexpr auto GlobalVectorFieldTightness = 0x38; // float
	}

	namespace n_UAppleImageUtilsBaseAsyncTaskBlueprintProxy { // : UObject
		constexpr auto OnSuccess = 0x30; // FScriptMulticastDelegate
		constexpr auto OnFailure = 0x40; // FScriptMulticastDelegate
		constexpr auto ConversionResult = 0x60; // FAppleImageUtilsImageConversionResult
	}

	namespace n_USlateSettings { // : UObject
		constexpr auto bExplicitCanvasChildZOrder = 0x28; // bool
	}

	namespace n_UMM_MakeItem_Slot_Special { // : UMM_Slot_Material_Item
		constexpr auto m_Img_GradeBgEffect = 0x440; // UMirImage*
		constexpr auto m_ImgEquipMaark = 0x448; // UMirImage*
		constexpr auto m_ImgTypeImage = 0x450; // UMirImage*
		constexpr auto m_BtnSetItem = 0x458; // UMirButton*
		constexpr auto m_ImgRemoveItemPanel = 0x460; // UPanelWidget*
		constexpr auto m_ImgRemoveItemBtn = 0x468; // UMM_Common_Btn_Symbol*
		constexpr auto m_TxtItemSmeltingLevel = 0x470; // UMirTextBlock*
		constexpr auto m_ImgPlusSpecial = 0x478; // UMirImage*
		constexpr auto Material_Switch = 0x480; // UMM_ItemMake_Switch*
		constexpr auto m_MakeType = 0x488; // EMakeItemType
		constexpr auto m_Img_Tier = 0x490; // UMirImage*
	}

	namespace n_ACliffMoveTrigger { // : AActor
		constexpr auto m_pSplineActor = 0x218; // AMirSplineActor*
		constexpr auto m_bRightVector = 0x220; // bool
	}

	namespace n_ALevelBounds { // : AActor
		constexpr auto bAutoUpdateBounds = 0x218; // bool
	}

	namespace n_UBillboardComponent { // : UPrimitiveComponent
		constexpr auto Sprite = 0x418; // UTexture2D*
		constexpr auto bIsScreenSizeScaled = 0x420; // char : 1
		constexpr auto ScreenSize = 0x424; // float
		constexpr auto U = 0x428; // float
		constexpr auto UL = 0x42c; // float
		constexpr auto V = 0x430; // float
		constexpr auto VL = 0x434; // float
	}

	namespace n_UAnimationSharingManager { // : UObject
		constexpr auto Skeletons = 0x28; // TArray<USkeleton*>
		constexpr auto PerSkeletonData = 0x38; // TArray<UAnimSharingInstance*>
	}

	namespace n_USubmixEffectTapDelayPreset { // : USoundEffectSubmixPreset
		constexpr auto Settings = 0x80; // FSubmixEffectTapDelaySettings
	}

	namespace n_UMM_B_CharInfo { // : UWidgetBase
		constexpr auto m_bOtherUserInfo = 0x2f0; // bool
		constexpr auto m_MyCharinfo = 0x2f8; // UMM_MyCharinfo*
		constexpr auto m_CharAbility = 0x300; // UMM_CharAbility*
		constexpr auto m_RenderTargetImage = 0x308; // UImage*
		constexpr auto m_TargetPos = 0x310; // UImage*
		constexpr auto m_Btn_Return = 0x318; // UMirButton*
	}

	namespace n_UDragDropOperation { // : UObject
		constexpr auto Tag = 0x28; // FString
		constexpr auto Payload = 0x38; // UObject*
		constexpr auto DefaultDragVisual = 0x40; // UWidget*
		constexpr auto Pivot = 0x48; // EDragPivot
		constexpr auto Offset = 0x4c; // FVector2D
		constexpr auto OnDrop = 0x58; // FScriptMulticastDelegate
		constexpr auto OnDragCancelled = 0x68; // FScriptMulticastDelegate
		constexpr auto OnDragged = 0x78; // FScriptMulticastDelegate
	}

	namespace n_UMM_Popup_DominionBuff { // : UWidgetBase
		constexpr auto m_pToolTip = 0x2e0; // UMM_Common_ToolTipBtn*
		constexpr auto m_pBtnClose = 0x2e8; // UMM_Common_Btn_Symbol*
		constexpr auto m_pBtnCancel = 0x2f0; // UMM_Common_Btn*
		constexpr auto m_pScrollBox = 0x2f8; // UMirScrollBox*
	}

	namespace n_UMM_Costume_Inventory { // : UWidgetBase
		constexpr auto InventoryTabGroup = 0x2f0; // TArray<UMM_Costume_Inventory_Tab*>
		constexpr auto InvenSlotList = 0x300; // TArray<UMM_Costume_Slot_InvenItem_Long*>
		constexpr auto ScrollBox = 0x310; // UScrollBox*
		constexpr auto Scroll_WrapBox = 0x318; // UWrapBox*
		constexpr auto m_MaxSlotCount = 0x320; // int32_t
		constexpr auto m_CurrentSlotCount = 0x324; // int32_t
	}

	namespace n_UAIDataProvider_Random { // : UAIDataProvider_QueryParams
		constexpr auto Min = 0x40; // float
		constexpr auto Max = 0x44; // float
		constexpr auto bInteger = 0x48; // char : 1
	}

	namespace n_UNavArea_LowHeight { // : UNavArea
		constexpr auto DefaultCost = 0x30; // float
		constexpr auto FixedAreaEnteringCost = 0x34; // float
		constexpr auto DrawColor = 0x38; // FColor
		constexpr auto SupportedAgents = 0x3c; // FNavAgentSelector
		constexpr auto bSupportsAgent0 = 0x40; // char : 1
		constexpr auto bSupportsAgent1 = 0x40; // char : 1
		constexpr auto bSupportsAgent2 = 0x40; // char : 1
		constexpr auto bSupportsAgent3 = 0x40; // char : 1
		constexpr auto bSupportsAgent4 = 0x40; // char : 1
		constexpr auto bSupportsAgent5 = 0x40; // char : 1
		constexpr auto bSupportsAgent6 = 0x40; // char : 1
		constexpr auto bSupportsAgent7 = 0x40; // char : 1
		constexpr auto bSupportsAgent8 = 0x41; // char : 1
		constexpr auto bSupportsAgent9 = 0x41; // char : 1
		constexpr auto bSupportsAgent10 = 0x41; // char : 1
		constexpr auto bSupportsAgent11 = 0x41; // char : 1
		constexpr auto bSupportsAgent12 = 0x41; // char : 1
		constexpr auto bSupportsAgent13 = 0x41; // char : 1
		constexpr auto bSupportsAgent14 = 0x41; // char : 1
		constexpr auto bSupportsAgent15 = 0x41; // char : 1
	}

	namespace n_UMovieSceneTransformTrack { // : UMovieScenePropertyTrack
		constexpr auto SectionToKey = 0x58; // UMovieSceneSection*
		constexpr auto PropertyName = 0x60; // FName
		constexpr auto PropertyPath = 0x68; // FString
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_UMirTileView { // : UTileView
		constexpr auto m_eStyle = 0x878; // EStyle_MirTileView
		constexpr auto m_arEntryWidgetClass = 0x880; // TArray<UUserWidget*>
	}

	namespace n_UMovieSceneGeometryCacheSection { // : UMovieSceneSection
		constexpr auto Params = 0xe0; // FMovieSceneGeometryCacheParams
	}

	namespace n_UMM_Dominion_Goods_Slot { // : UWidgetBase
		constexpr auto m_eCostType = 0x2f0; // ECostType
		constexpr auto m_eTimeTicketType = 0x2f1; // ETimeTicketType
		constexpr auto m_bUse_SimpleDigit = 0x2f2; // bool
		constexpr auto m_bUse_MaxValue = 0x2f3; // bool
		constexpr auto m_bUse_GuildMaxValue = 0x2f4; // bool
		constexpr auto m_bUse_CostName = 0x2f5; // bool
		constexpr auto m_bUse_AddButton = 0x2f6; // bool
		constexpr auto m_bLeftJustify_CostValue = 0x2f7; // bool
		constexpr auto m_iTooltipID = 0x2f8; // int32_t
		constexpr auto m_Img_CostIcon = 0x320; // UMirImage*
		constexpr auto m_Txt_CostName = 0x328; // UMirTextBlock*
		constexpr auto m_Txt_CostValue = 0x330; // UMirTextBlock*
		constexpr auto m_Grid_AddIcon = 0x338; // UPanelWidget*
	}

	namespace n_UMM_MyCharinfo { // : UWidgetBase
		constexpr auto m_DetailStatBtn = 0x2f0; // UMM_Common_Btn*
		constexpr auto CombatPoint = 0x2f8; // UMM_CombatPoint*
		constexpr auto m_OptionNum = 0x308; // UMM_OptionNum* [0x6]
		constexpr auto m_CharInfo = 0x338; // UMM_CharInfo*
		constexpr auto m_EquipSlot = 0x340; // UMM_EquipSlot_Registered* [0xa]
		constexpr auto m_Grid_Option = 0x390; // UPanelWidget*
		constexpr auto m_Grid_TargetCostume = 0x398; // UPanelWidget*
		constexpr auto CostumePartsViewerWidget = 0x3a0; // UMM_Costume_PartsViewer*
		constexpr auto m_CanvasEquipParts = 0x3a8; // UPanelWidget*
		constexpr auto m_CheckBoxSwitch = 0x3b0; // UMM_CheckBox_Switch*
		constexpr auto m_CanvesTerm = 0x3b8; // UCanvasPanel*
		constexpr auto m_TermItemBtn = 0x3c0; // UMirButton*
		constexpr auto m_Img_TermItem_Indicator = 0x3c8; // UMirImage*
		constexpr auto Panel_Detail = 0x3d0; // UGridPanel*
		constexpr auto STR_SWITCH_ON = 0x3d8; // int32_t
		constexpr auto STR_SWITCH_OFF = 0x3dc; // int32_t
		constexpr auto m_Can_GoToItemMake = 0x3e0; // UPanelWidget*
		constexpr auto m_Btn_GoToItemMake = 0x3e8; // UMirButton*
	}

	namespace n_UMM_Popup_DominionGuildMemberSlot { // : UWidgetBase
		constexpr auto img_online = 0x2e0; // UMirImage*
		constexpr auto Portrait = 0x2e8; // UMM_GuildMemberPortrait*
		constexpr auto txt_grade = 0x2f0; // UMirTextBlock*
		constexpr auto txt_nickname = 0x2f8; // UMirTextBlock*
		constexpr auto txt_custom_title = 0x300; // UMirTextBlock*
		constexpr auto txt_level = 0x308; // UMirTextBlock*
		constexpr auto img_class = 0x310; // UMirImage*
		constexpr auto txt_class = 0x318; // UMirTextBlock*
		constexpr auto txt_combat_power = 0x320; // UMirTextBlock*
		constexpr auto txt_daily_contribution = 0x328; // UMirTextBlock*
		constexpr auto txt_total_contribution = 0x330; // UMirTextBlock*
		constexpr auto txt_official = 0x338; // UMirTextBlock*
		constexpr auto Txt_Title = 0x340; // UMirTextBlock*
		constexpr auto Img_Select = 0x348; // UMirImage*
		constexpr auto btn_select = 0x350; // UMirButton*
	}

	namespace n_AMM_SoundManagerActor { // : AActor
		constexpr auto m_Time1 = 0x238; // float
		constexpr auto m_Time2 = 0x23c; // float
		constexpr auto m_pMirSoundData = 0x240; // UMirSystemSoundData*
		constexpr auto m_pBGMAudio = 0x248; // UAudioComponent*
		constexpr auto m_pBGMSound = 0x250; // USoundBase*
		constexpr auto m_pDialogueAudio = 0x260; // UAudioComponent*
		constexpr auto m_DialogueConcurrency = 0x268; // USoundConcurrency*
		constexpr auto Mix_MasterSound = 0x270; // USoundMix*
		constexpr auto m_mapSoundClass = 0x278; // TMap<EMirSoundClass, USoundClass*>
		constexpr auto m_mapSettingVolume = 0x2c8; // TMap<EMirSoundClass, float>
		constexpr auto m_mapMuteState = 0x318; // TMap<EMirSoundClass, bool>
		constexpr auto m_mapAsyncLoadSoundID = 0x368; // TMap<uint32_t, int32_t>
		constexpr auto m_mapPlayAudioComponentList = 0x3b8; // TMap<int32_t, UAudioComponent*>
		constexpr auto m_pBGMTriggerArray = 0x408; // TArray<ABGMTrigger*>
	}

	namespace n_UReflectionCaptureComponent { // : USceneComponent
		constexpr auto CaptureOffsetComponent = 0x220; // UBillboardComponent*
		constexpr auto ReflectionSourceType = 0x228; // EReflectionSourceType
		constexpr auto Cubemap = 0x230; // UTextureCube*
		constexpr auto SourceCubemapAngle = 0x238; // float
		constexpr auto Brightness = 0x23c; // float
		constexpr auto CaptureOffset = 0x240; // FVector
		constexpr auto MapBuildDataId = 0x24c; // FGuid
	}

	namespace n_USoundBase { // : UObject
		constexpr auto SoundClassObject = 0x28; // USoundClass*
		constexpr auto bDebug = 0x30; // char : 1
		constexpr auto bOverrideConcurrency = 0x30; // char : 1
		constexpr auto bOutputToBusOnly = 0x30; // char : 1
		constexpr auto bHasDelayNode = 0x30; // char : 1
		constexpr auto bHasConcatenatorNode = 0x30; // char : 1
		constexpr auto bBypassVolumeScaleForPriority = 0x30; // char : 1
		constexpr auto VirtualizationMode = 0x31; // EVirtualizationMode
		constexpr auto ConcurrencySet = 0x88; // TSet<USoundConcurrency*>
		constexpr auto ConcurrencyOverrides = 0xd8; // FSoundConcurrencySettings
		constexpr auto Duration = 0xf8; // float
		constexpr auto MaxDistance = 0xfc; // float
		constexpr auto TotalSamples = 0x100; // float
		constexpr auto Priority = 0x104; // float
		constexpr auto AttenuationSettings = 0x108; // USoundAttenuation*
		constexpr auto Modulation = 0x110; // FSoundModulation
		constexpr auto SoundSubmixObject = 0x120; // USoundSubmix*
		constexpr auto SoundSubmixSends = 0x128; // TArray<FSoundSubmixSendInfo>
		constexpr auto SourceEffectChain = 0x138; // USoundEffectSourcePresetChain*
		constexpr auto BusSends = 0x140; // TArray<FSoundSourceBusSendInfo>
		constexpr auto PreEffectBusSends = 0x150; // TArray<FSoundSourceBusSendInfo>
	}

	namespace n_UMaterialExpressionVectorNoise { // : UMaterialExpression
		constexpr auto Position = 0x40; // FExpressionInput
		constexpr auto NoiseFunction = 0x54; // EVectorNoiseFunction
		constexpr auto quality = 0x58; // int32_t
		constexpr auto bTiling = 0x5c; // char : 1
		constexpr auto TileSize = 0x60; // uint32_t
	}

	namespace n_UMM_Popup_GuildMembersGradeSlot { // : UWidgetBase
		constexpr auto Img_Grade = 0x2e0; // UMirImage*
		constexpr auto img_selected = 0x2e8; // UMirImage*
		constexpr auto txt_grade_name = 0x2f0; // UMirTextBlock*
		constexpr auto txt_count = 0x2f8; // UMirTextBlock*
		constexpr auto Btn_Main = 0x300; // UMirButton*
	}

	namespace n_UMM_QuickSlot_Option_Switch { // : UMM_GameOption_BaseSlot
		constexpr auto m_iSwitch = 0x2e8; // int32_t
		constexpr auto SwitchStringID = 0x2f0; // TArray<int32_t>
		constexpr auto m_SelectFontColor = 0x300; // FSlateColor
		constexpr auto m_UnSelectFontColor = 0x328; // FSlateColor
		constexpr auto m_Text_Name = 0x350; // UTextBlock* [0x2]
		constexpr auto m_Img_Select = 0x360; // UMirImage* [0x2]
		constexpr auto m_Btn_Main = 0x370; // UMirButton*
	}

	namespace n_USteamLogin { // : UBlueprintAsyncActionBase
		constexpr auto OnSuccess = 0x30; // FScriptMulticastDelegate
		constexpr auto OnFail = 0x40; // FScriptMulticastDelegate
	}

	namespace n_UMM_Popup_GuildDevInfo { // : UWidgetBase
		constexpr auto m_DonateBtn_DefaultSound = 0x2f0; // USoundBase*
		constexpr auto mOpenAni = 0x350; // UWidgetAnimation*
		constexpr auto mCloseAni = 0x358; // UWidgetAnimation*
		constexpr auto mHappyStartAni = 0x360; // UWidgetAnimation*
		constexpr auto mResultStartAni = 0x368; // UWidgetAnimation*
		constexpr auto mTxtDevName = 0x370; // UMirTextBlock*
		constexpr auto mBtnClose = 0x378; // UMM_Common_Btn_Symbol*
		constexpr auto mDevIcon = 0x380; // UMM_Guild_DevItemSlot*
		constexpr auto mTxtDesc = 0x388; // UMirTextBlock*
		constexpr auto mProgressPanel = 0x390; // UCanvasPanel*
		constexpr auto mProgressBarLevel = 0x398; // UMirProgressBar*
		constexpr auto mTxtProgressLevel = 0x3a0; // UMirTextBlock*
		constexpr auto mOverLayRecommend = 0x3a8; // UOverlay*
		constexpr auto mTxtFixedRecommend = 0x3b0; // UMirTextBlock*
		constexpr auto mCanvasLevel = 0x3b8; // UMirCanvasPanel*
		constexpr auto mTxtEffectLevelTitle = 0x3c0; // UMirTextBlock*
		constexpr auto mTxtCurLevel = 0x3c8; // UMirTextBlock*
		constexpr auto mTxtNextLevel = 0x3d0; // UMirTextBlock*
		constexpr auto mImgLevelArrow = 0x3d8; // UMirImage*
		constexpr auto mTxtSkillUseTimeTitle = 0x3e0; // UMirTextBlock*
		constexpr auto mTxtSkillUseTime = 0x3e8; // UMirTextBlock*
		constexpr auto mTxtSkillUseTimeDesc = 0x3f0; // UMirTextBlock*
		constexpr auto mBtnBenefit = 0x3f8; // UMM_Common_Btn_Symbol*
		constexpr auto mCanvasStat3 = 0x400; // UMirCanvasPanel*
		constexpr auto mTxtFirstAttibuteName = 0x408; // UMirTextBlock*
		constexpr auto mTxtFirstAttibuteValue = 0x410; // UMirTextBlock*
		constexpr auto mTxtFirstAttibuteNextValue = 0x418; // UMirTextBlock*
		constexpr auto mImgFirstArrow = 0x420; // UMirImage*
		constexpr auto mTxtSecondAttibuteName = 0x428; // UMirTextBlock*
		constexpr auto mTxtSecondAttibuteValue = 0x430; // UMirTextBlock*
		constexpr auto mTxtSecondAttibuteNextValue = 0x438; // UMirTextBlock*
		constexpr auto mImgSecondArrow = 0x440; // UMirImage*
		constexpr auto mCanvasLock = 0x448; // UMirCanvasPanel*
		constexpr auto mTxtFixedLock = 0x450; // UMirTextBlock*
		constexpr auto mBtnLockTooltip = 0x458; // UMM_Common_ToolTipBtn*
		constexpr auto mLockSlotList = 0x460; // TArray<UMM_Guild_DevItemSlot*>
		constexpr auto mBtnLockConfirm = 0x470; // UMM_Common_Btn*
		constexpr auto mCanvasOpen = 0x478; // UMirCanvasPanel*
		constexpr auto mPrograssBarExp = 0x480; // UMirProgressBar*
		constexpr auto mTxtExpValue = 0x488; // UMirTextBlock*
		constexpr auto mBtnRecommend = 0x490; // UMM_Common_Btn_IconText*
		constexpr auto mBtnRewardDonation = 0x498; // UMM_Common_Btn_Symbol*
		constexpr auto mBtnDonateCancel = 0x4a0; // UMM_Common_Btn*
		constexpr auto mBtnDonateCost = 0x4a8; // UMM_Common_Btn_Cost*
		constexpr auto mPanelTouchArea = 0x4b0; // UMirCanvasPanel*
		constexpr auto mTxtOpenTitle = 0x4b8; // UMirTextBlock*
		constexpr auto mTxtTimeTicket = 0x4c0; // UMirRichTextBlock*
		constexpr auto mTxtTimeTicketDesc = 0x4c8; // UMirTextBlock*
		constexpr auto mDevRewardDonation = 0x4d0; // UMM_Guild_DevRewardDonation*
		constexpr auto mCanvasLucky = 0x4d8; // UMirCanvasPanel*
		constexpr auto mCanvasDonateResult = 0x4e0; // UMirCanvasPanel*
		constexpr auto mTxtRewardExp = 0x4e8; // UMirTextBlock*
		constexpr auto mCanvasLevelUpReady = 0x4f0; // UMirCanvasPanel*
		constexpr auto mProgressBarReady = 0x4f8; // UMirProgressBar*
		constexpr auto mTxtReadyTime = 0x500; // UMirTextBlock*
		constexpr auto mCanvasCostList = 0x508; // TArray<UMirCanvasPanel*>
		constexpr auto mTxtLevelUpCostValueList = 0x518; // TArray<UMirTextBlock*>
		constexpr auto mBtnCostList = 0x528; // TArray<UMirButton*>
		constexpr auto mImgLevelUpCostIconList = 0x538; // TArray<UMirImage*>
		constexpr auto mTxtLevelUpReadyCostDesc = 0x548; // UMirTextBlock*
		constexpr auto mRTxtLevelUpSuccessPercent = 0x550; // UMirRichTextBlock*
		constexpr auto mBtnTooltipSuccessPercent = 0x558; // UMM_Common_ToolTipBtn*
		constexpr auto mImgLevelupReadyIcon = 0x560; // UImage*
		constexpr auto mTxtLevelUpReadyDesc = 0x568; // UMirTextBlock*
		constexpr auto mBtnStartLevelUp = 0x570; // UMM_Common_Btn*
		constexpr auto mBtnGuildCost = 0x578; // UMM_Common_Btn_Symbol*
		constexpr auto mGuildCost = 0x580; // UMM_Popup_GuildCost*
		constexpr auto mCanvasLevelUpIng = 0x588; // UMirCanvasPanel*
		constexpr auto mProgressBarLevelUpIng = 0x590; // UMirProgressBar*
		constexpr auto mTxtLevelUpTimer = 0x598; // UMirTextBlock*
		constexpr auto mBtnRewardLevelUpIng = 0x5a0; // UMM_Common_Btn_Symbol*
		constexpr auto mTxtLevelUpIngDesc = 0x5a8; // UMirTextBlock*
		constexpr auto mBtnLevelUpConfirm = 0x5b0; // UMM_Common_Btn*
		constexpr auto mCanvasMaxLevel = 0x5b8; // UMirCanvasPanel*
		constexpr auto mTxtMaxLevelDesc = 0x5c0; // UMirTextBlock*
		constexpr auto mBtnLevelMaxConfirm = 0x5c8; // UMM_Common_Btn*
		constexpr auto mImgDevlopeIcon = 0x5d0; // UMirImage*
		constexpr auto mImgSkillUseIcon = 0x5d8; // UMirImage*
		constexpr auto mImgReadyDevlopeIcon = 0x5e0; // UMirImage*
		constexpr auto mImgReadySkillUseIcon = 0x5e8; // UMirImage*
		constexpr auto mTxtReadySkillUse = 0x5f0; // UMirTextBlock*
		constexpr auto mTxtReadySkillUseDesc = 0x5f8; // UMirTextBlock*
		constexpr auto mTxtRemainTimeDesc = 0x600; // UMirTextBlock*
		constexpr auto mInfoBtnReady = 0x608; // UMM_Common_ToolTipBtn*
		constexpr auto mInfoBtnOnGoing = 0x610; // UMM_Common_ToolTipBtn*
	}

	namespace n_ULevelStreaming { // : UObject
		constexpr auto WorldAsset = 0x28; // UWorld*
		constexpr auto PackageNameToLoad = 0x50; // FName
		constexpr auto LODPackageNames = 0x58; // TArray<FName>
		constexpr auto LevelTransform = 0x80; // FTransform
		constexpr auto LevelLODIndex = 0xb0; // int32_t
		constexpr auto StreamingPriority = 0xb4; // int32_t
		constexpr auto bShouldBeVisible = 0xba; // char : 1
		constexpr auto bShouldBeLoaded = 0xba; // char : 1
		constexpr auto bLocked = 0xba; // char : 1
		constexpr auto bIsStatic = 0xba; // char : 1
		constexpr auto bShouldBlockOnLoad = 0xba; // char : 1
		constexpr auto bShouldBlockOnUnload = 0xbb; // char : 1
		constexpr auto bDisableDistanceStreaming = 0xbb; // char : 1
		constexpr auto bDrawOnLevelStatusMap = 0xbb; // char : 1
		constexpr auto LevelColor = 0xbc; // FLinearColor
		constexpr auto EditorStreamingVolumes = 0xd0; // TArray<ALevelStreamingVolume*>
		constexpr auto MinTimeBetweenVolumeUnloadRequests = 0xe0; // float
		constexpr auto OnLevelLoaded = 0xe8; // FScriptMulticastDelegate
		constexpr auto OnLevelUnloaded = 0xf8; // FScriptMulticastDelegate
		constexpr auto OnLevelShown = 0x108; // FScriptMulticastDelegate
		constexpr auto OnLevelHidden = 0x118; // FScriptMulticastDelegate
		constexpr auto LoadedLevel = 0x128; // ULevel*
		constexpr auto PendingUnloadLevel = 0x130; // ULevel*
	}

	namespace n_UMM_Popup_GuildAuthority { // : UWidgetBase
		constexpr auto sb_authority = 0x2e0; // UMirScrollBox*
		constexpr auto btn_close = 0x2e8; // UMM_Common_Btn_Symbol*
		constexpr auto btn_confirm = 0x2f0; // UMM_Common_Btn*
	}

	namespace n_UMM_UIAction_ItemGetWay { // : UMM_UIAction
		constexpr auto STR_NPCSTORE_GRADE1_TITLE = 0x130; // int32_t
		constexpr auto STR_NPCSTORE_GRADE2_TITLE = 0x134; // int32_t
		constexpr auto STR_QUEST_LOCK_MESSAGE = 0x138; // int32_t
		constexpr auto STR_QUEST_LOCK_COMMONMESSAGE = 0x13c; // int32_t
		constexpr auto STR_QUEST_MISSION_COMPLETE = 0x140; // int32_t
		constexpr auto STR_QUEST_REQUEST_TITLE = 0x144; // int32_t
		constexpr auto STR_QUEST_REQUEST_COMPLETE = 0x148; // int32_t
		constexpr auto STRID_NOVALIDATE = 0x14c; // int32_t
		constexpr auto STRID_NOVALIDATE_COST = 0x150; // int32_t
		constexpr auto STR_MAKE_FAIL = 0x154; // int32_t
		constexpr auto STR_UI_MAKE_FAIL = 0x158; // int32_t
		constexpr auto STR_NPC_MAKE_FAIL = 0x15c; // int32_t
		constexpr auto STR_AGENCY_MAKE_FAIL = 0x160; // int32_t
	}

	namespace n_UAnimCompress_LeastDestructive { // : UAnimCompress
		constexpr auto Description = 0x28; // FString
		constexpr auto bNeedsSkeleton = 0x38; // char : 1
		constexpr auto bEnableSegmenting = 0x38; // char : 1
		constexpr auto IdealNumFramesPerSegment = 0x3c; // uint32_t
		constexpr auto MaxNumFramesPerSegment = 0x40; // uint32_t
		constexpr auto TranslationCompressionFormat = 0x44; // AnimationCompressionFormat
		constexpr auto RotationCompressionFormat = 0x45; // AnimationCompressionFormat
		constexpr auto ScaleCompressionFormat = 0x46; // AnimationCompressionFormat
		constexpr auto MaxCurveError = 0x48; // float
	}

	namespace n_UAchievementQueryCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto OnFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_AUIBackGroundActorPreview { // : AUIBackGroundActor
		constexpr auto m_bUpdate = 0x218; // bool
		constexpr auto m_bMoveComponent = 0x219; // bool
		constexpr auto SceneCaptureComponent2D = 0x220; // USceneCaptureComponent2D*
		constexpr auto m_pRenderTarget2D = 0x228; // UCanvasRenderTarget2D*
		constexpr auto RenderTargetMaterial = 0x230; // UMaterial*
		constexpr auto CachedArrows = 0x238; // TMap<FString, UArrowComponent*>
		constexpr auto BackgroundMaterial = 0x288; // UMaterialInterface*
		constexpr auto UIBackGroundActor = 0x290; // AActor*
		constexpr auto BackgroundDynamicInst = 0x298; // UMaterialInstanceDynamic*
		constexpr auto SceneCaptureTableReferences = 0x2a0; // UDataTable*
		constexpr auto DestCameraLocation = 0x2a8; // FVector
		constexpr auto DestCameraPitch = 0x2b4; // float
		constexpr auto CalculateDestCameraFOV = 0x2b8; // float
		constexpr auto DestCameraFOV = 0x2bc; // float
		constexpr auto IsPendingUpdate = 0x2c0; // int32_t
		constexpr auto mRenderTarget2DList = 0x370; // TArray<UCanvasRenderTarget2D*>
	}

	namespace n_USignificanceManager { // : UObject
		constexpr auto SignificanceManagerClassName = 0x100; // FSoftClassPath
	}

	namespace n_UMovieScene3DConstraintTrack { // : UMovieSceneTrack
		constexpr auto ConstraintSections = 0x58; // TArray<UMovieSceneSection*>
	}

	namespace n_UMM_UserEvent_Goal { // : UWidgetBase
		constexpr auto m_Txt_Name = 0x2f0; // UMirTextBlock*
		constexpr auto m_Img_Thumb = 0x2f8; // UMirImage*
		constexpr auto m_WebBanner = 0x300; // UMM_UserEvent_WebBanner*
		constexpr auto m_ScrollBox = 0x308; // UMirScrollBox*
	}

	namespace n_UMovieSceneEventSection { // : UMovieSceneSection
		constexpr auto Events = 0xe0; // FNameCurve
		constexpr auto EventData = 0x158; // FMovieSceneEventSectionData
	}

	namespace n_APaperTerrainActor { // : AActor
		constexpr auto DummyRoot = 0x218; // USceneComponent*
		constexpr auto SplineComponent = 0x220; // UPaperTerrainSplineComponent*
		constexpr auto RenderComponent = 0x228; // UPaperTerrainComponent*
	}

	namespace n_UMM_ServerSlot { // : UWidgetBase
		constexpr auto m_Can_Recommend = 0x2e8; // UPanelWidget*
		constexpr auto m_Img_New = 0x2f0; // UMirImage*
		constexpr auto m_Img_ServerCongestionInfo = 0x2f8; // UMirImage*
		constexpr auto m_Txt_ServerName = 0x300; // UMirTextBlock*
		constexpr auto m_Txt_Peace = 0x308; // UMirTextBlock*
		constexpr auto m_Txt_ServerNotice = 0x310; // UMirTextBlock*
		constexpr auto m_Hrz_CharCount = 0x318; // UPanelWidget*
		constexpr auto m_Txt_CharCount = 0x320; // UMirTextBlock*
		constexpr auto m_Btn_Main = 0x328; // UMirButton*
	}

	namespace n_UMaterialInstanceConstant { // : UMaterialInstance
		constexpr auto PhysMaterial = 0x88; // UPhysicalMaterial*
		constexpr auto Parent = 0x90; // UMaterialInterface*
		constexpr auto bHasStaticPermutationResource = 0x98; // char : 1
		constexpr auto bOverrideSubsurfaceProfile = 0x98; // char : 1
		constexpr auto ScalarParameterValues = 0xa0; // TArray<FScalarParameterValue>
		constexpr auto VectorParameterValues = 0xb0; // TArray<FVectorParameterValue>
		constexpr auto TextureParameterValues = 0xc0; // TArray<FTextureParameterValue>
		constexpr auto RuntimeVirtualTextureParameterValues = 0xd0; // TArray<FRuntimeVirtualTextureParameterValue>
		constexpr auto FontParameterValues = 0xe0; // TArray<FFontParameterValue>
		constexpr auto BasePropertyOverrides = 0xf0; // FMaterialInstanceBasePropertyOverrides
		constexpr auto PermutationTextureReferences = 0x108; // TArray<UObject*>
		constexpr auto StaticParameters = 0x118; // FStaticParameterSet
	}

	namespace n_UMaterialExpressionPerInstanceRandom { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UFacebookLoginSubSystem { // : ULoginSubSystemBase
		constexpr auto m_WindowFirebaseCredential = 0x40; // UFirebaseCredential*
	}

	namespace n_UParticleModuleSizeScale { // : UParticleModuleSizeBase
		constexpr auto SizeScale = 0x30; // FRawDistributionVector
		constexpr auto EnableX = 0x78; // char : 1
		constexpr auto EnableY = 0x78; // char : 1
		constexpr auto EnableZ = 0x78; // char : 1
	}

	namespace n_UMM_Common_Dialog_Btn { // : UWidgetBase
		constexpr auto m_QuestSoundID = 0x2e0; // int32_t
		constexpr auto m_RequestSoundID = 0x2e4; // int32_t
		constexpr auto m_AcceptSoundID = 0x2e8; // int32_t
		constexpr auto m_HintSoundID = 0x2ec; // int32_t
		constexpr auto m_Size = 0x2f0; // FVector2D
		constexpr auto m_MainQuestDialogSound = 0x2f8; // int32_t
		constexpr auto m_MissionDialogSound = 0x2fc; // int32_t
		constexpr auto m_RequestDialogSound = 0x300; // int32_t
		constexpr auto m_Spc_Size = 0x308; // USpacer*
		constexpr auto m_Img_Back = 0x318; // UMirImage*
		constexpr auto m_Btn_Main = 0x320; // UMirButton*
		constexpr auto m_AniClick = 0x338; // UWidgetAnimation*
	}

	namespace n_UMM_Mastery_Slot_Info { // : UWidgetBase
		constexpr auto mImgSlotIcon = 0x2f0; // UMirImage*
		constexpr auto mTxtSlotName = 0x2f8; // UMirTextBlock*
		constexpr auto mTxtSlotLv = 0x300; // UMirTextBlock*
		constexpr auto mProgGauge = 0x308; // UMirProgressBar*
		constexpr auto mPanelAbilityList = 0x310; // TArray<UMirCanvasPanel*>
		constexpr auto mImgIconList = 0x320; // TArray<UMirImage*>
		constexpr auto mTxtNameList = 0x330; // TArray<UMirTextBlock*>
		constexpr auto mTxtCurrValueList = 0x340; // TArray<UMirTextBlock*>
		constexpr auto mImgArrow = 0x350; // TArray<UMirImage*>
		constexpr auto mTxtNextValueList = 0x360; // TArray<UMirTextBlock*>
	}

	namespace n_UMM_UIAction_Customizing { // : UMM_UIAction
		constexpr auto DisplayActor = 0x68; // APlayerModelingActor*
		constexpr auto m_pCategoryTable = 0x4f0; // UDataTable*
		constexpr auto m_pComponentTable = 0x4f8; // UDataTable*
		constexpr auto m_pCustomizingActor = 0x500; // AMM_CharacterCustomizingActor*
	}

	namespace n_UMaterialExpressionParticlePositionWS { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UParticleModuleSizeScaleBySpeed { // : UParticleModuleSizeBase
		constexpr auto SpeedScale = 0x30; // FVector2D
		constexpr auto MaxScale = 0x38; // FVector2D
	}

	namespace n_UAISense_Team { // : UAISense
		constexpr auto RegisteredEvents = 0x80; // TArray<FAITeamStimulusEvent>
	}

	namespace n_UMotionControllerComponent { // : UPrimitiveComponent
		constexpr auto PlayerIndex = 0x418; // int32_t
		constexpr auto Hand = 0x41c; // EControllerHand
		constexpr auto MotionSource = 0x420; // FName
		constexpr auto bDisableLowLatencyUpdate = 0x428; // char : 1
		constexpr auto CurrentTrackingStatus = 0x42c; // ETrackingStatus
		constexpr auto bDisplayDeviceModel = 0x42d; // bool
		constexpr auto DisplayModelSource = 0x430; // FName
		constexpr auto CustomDisplayMesh = 0x438; // UStaticMesh*
		constexpr auto DisplayMeshMaterialOverrides = 0x440; // TArray<UMaterialInterface*>
		constexpr auto DisplayComponent = 0x4b0; // UPrimitiveComponent*
	}

	namespace n_UBTDecorator_SetTagCooldown { // : UBTDecorator
		constexpr auto CooldownTag = 0x68; // FGameplayTag
		constexpr auto CooldownDuration = 0x70; // float
		constexpr auto bAddToExistingDuration = 0x74; // bool
	}

	namespace n_ACineCameraActor { // : ACameraActor
		constexpr auto LookatTrackingSettings = 0x780; // FCameraLookatTrackingSettings
	}

	namespace n_UAIPerceptionStimuliSourceComponent { // : UActorComponent
		constexpr auto bAutoRegisterAsSource = 0xb0; // char : 1
		constexpr auto RegisterAsSourceForSenses = 0xb8; // TArray<UAISense*>
	}

	namespace n_UMM_UIShopBtnCashBag { // : UWidgetBase
		constexpr auto mTxtTabName = 0x2f0; // UMirTextBlock*
		constexpr auto mImgSelected = 0x2f8; // UMirImage*
		constexpr auto mImgIndicator = 0x300; // UMirImage*
		constexpr auto mBtnCashBag = 0x308; // UMirButton*
	}

	namespace n_USharePhotoContent { // : UBlueprintAsyncActionBase
		constexpr auto OnSuccess = 0x30; // FScriptMulticastDelegate
		constexpr auto OnFail = 0x40; // FScriptMulticastDelegate
	}

	namespace n_UMM_HudSubQuest_Slot { // : UWidgetBase
		constexpr auto m_pRunningImage = 0x2e0; // UMirImage*
		constexpr auto m_pNotRunningImage = 0x2e8; // UMirImage*
		constexpr auto m_pRunningPanel = 0x2f0; // UPanelWidget*
		constexpr auto m_pNotRunningPanel = 0x2f8; // UCanvasPanel*
		constexpr auto m_pCompletePanel = 0x300; // UCanvasPanel*
		constexpr auto m_pBtnTracker = 0x308; // UButton*
		constexpr auto m_pTxtMissionCount = 0x310; // UMirTextBlock*
		constexpr auto m_pTxtMissionText = 0x318; // UMirTextBlock*
		constexpr auto m_pEffectPanel = 0x320; // UPanelWidget*
		constexpr auto m_pEffectIconPanel = 0x328; // UPanelWidget*
	}

	namespace n_UMM_ItemMake_Inventory { // : UWidgetBase
		constexpr auto InvenSlotList = 0x2f0; // TArray<UMM_ItemMake_Slot*>
		constexpr auto ScrollBox = 0x300; // UMirWrapScrollBox*
		constexpr auto m_MaxSlotCount = 0x308; // int32_t
		constexpr auto m_CurrentSlotCount = 0x30c; // int32_t
		constexpr auto m_SelectedMakeTID = 0x310; // int32_t
		constexpr auto MIN_SLOT = 0x314; // int32_t
		constexpr auto MAX_LINE_SLOT = 0x318; // int32_t
	}

	namespace n_UMaterialExpressionSpriteTextureSampler { // : UMaterialExpressionTextureSampleParameter2D
		constexpr auto bSampleAdditionalTextures = 0xf0; // bool
		constexpr auto AdditionalSlotIndex = 0xf4; // int32_t
		constexpr auto SlotDisplayName = 0xf8; // FText
	}

	namespace n_UMM_BlueprintAsyncLoadAction { // : UBlueprintAsyncActionBase
		constexpr auto AsyncLoadComplete = 0x30; // FScriptMulticastDelegate
	}

	namespace n_UMaterialExpressionFrac { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UMM_Dominion_Title_RareGroup { // : UMM_Dominion_Title_GroupBase
		constexpr auto m_pParentWidget = 0x260; // UWidgetBase*
		constexpr auto m_arChildWidget = 0x268; // TArray<TWeakObjectPtr<UWidgetBase>>
		constexpr auto m_arMirTextBlock = 0x280; // TArray<TWeakObjectPtr<UMirTextBlock>>
		constexpr auto m_arMirRichTextBlock = 0x290; // TArray<TWeakObjectPtr<UMirRichTextBlock>>
		constexpr auto m_arMirEditableText = 0x2a0; // TArray<TWeakObjectPtr<UMirEditableText>>
		constexpr auto m_arMirImage = 0x2b0; // TArray<TWeakObjectPtr<UMirImage>>
	}

	namespace n_UMM_PetAnimInstance { // : UAnimInstance
		constexpr auto CurrentSkeleton = 0x28; // USkeleton*
		constexpr auto RootMotionMode = 0x30; // ERootMotionMode
		constexpr auto bUseMultiThreadedAnimationUpdate = 0x31; // char : 1
		constexpr auto bUsingCopyPoseFromMesh = 0x31; // char : 1
		constexpr auto bQueueMontageEvents = 0x31; // char : 1
		constexpr auto OnMontageBlendingOut = 0x38; // FScriptMulticastDelegate
		constexpr auto OnMontageStarted = 0x48; // FScriptMulticastDelegate
		constexpr auto OnMontageEnded = 0x58; // FScriptMulticastDelegate
		constexpr auto OnAllMontageInstancesEnded = 0x68; // FScriptMulticastDelegate
		constexpr auto NotifyQueue = 0x100; // FAnimNotifyQueue
		constexpr auto ActiveAnimNotifyState = 0x170; // TArray<FAnimNotifyEvent>
	}

	namespace n_UCinematicAnimInstance { // : UAnimInstance
		constexpr auto m_FirstAnimationLength = 0x290; // float
		constexpr auto m_SecondAnimationLength = 0x294; // float
		constexpr auto m_FirstAniLoop = 0x298; // bool
		constexpr auto m_SecondAniLoop = 0x299; // bool
		constexpr auto m_bChangeFirstAnim = 0x29a; // bool
		constexpr auto m_PlayAniState = 0x29b; // EPlayAniType
		constexpr auto m_Speed = 0x29c; // float
		constexpr auto m_LookAtAlpha = 0x2a0; // float
		constexpr auto m_LookAtLocation = 0x2a4; // FVector
		constexpr auto m_pFirstSequence = 0x2c0; // UAnimSequenceBase*
		constexpr auto m_pSecondSequence = 0x2c8; // UAnimSequenceBase*
	}

	namespace n_UMM_PawnMovementComponent { // : UPawnMovementComponent
		constexpr auto OwnerPawn = 0x138; // AMM_CharacterPawnBase*
		constexpr auto RotationRate = 0x140; // FRotator
		constexpr auto MaxWalkSpeed = 0x14c; // float
		constexpr auto MaxAcceleration = 0x150; // float
		constexpr auto bScalePushForceToVelocity = 0x154; // bool
		constexpr auto InitialPushForceFactor = 0x158; // float
		constexpr auto PushForceFactor = 0x15c; // float
		constexpr auto Deceleration = 0x160; // float
		constexpr auto TurningBoost = 0x164; // float
		constexpr auto PerchRadiusThreshold = 0x168; // float
		constexpr auto PhysicsTickFunction = 0x1a8; // FPawnMovementComponentPostPhysicsTickFunction
		constexpr auto WalkableFloorAngle = 0x270; // float
		constexpr auto WalkableFloorZ = 0x274; // float
		constexpr auto GravityScale = 0x290; // float
		constexpr auto MaxStepHeight = 0x294; // float
		constexpr auto bUseFlatBaseForFloorChecks = 0x304; // char : 1
		constexpr auto Acceleration = 0x308; // FVector
		constexpr auto m_bNeedCheckMonsterUp = 0x350; // bool
		constexpr auto m_bMonsterUp = 0x351; // bool
		constexpr auto m_bNeedBaseUpdate = 0x352; // bool
		constexpr auto m_FlyHit = 0x360; // FHitResult
		constexpr auto bHasRequestedVelocity = 0x3e8; // char : 1
		constexpr auto bMaintainHorizontalGroundVelocity = 0x3e8; // char : 1
		constexpr auto GroundMovementMode = 0x3ec; // EMovementMode
		constexpr auto m_MovementMode = 0x3ed; // EMovementMode
		constexpr auto DefaultLandMovementMode = 0x3ee; // EMovementMode
		constexpr auto PhysSurfaceState = 0x3ef; // EPhysicalSurface
	}

	namespace n_UPawnNoiseEmitterComponent { // : UActorComponent
		constexpr auto bAIPerceptionSystemCompatibilityMode = 0xb0; // char : 1
		constexpr auto LastRemoteNoisePosition = 0xb4; // FVector
		constexpr auto NoiseLifetime = 0xc0; // float
		constexpr auto LastRemoteNoiseVolume = 0xc4; // float
		constexpr auto LastRemoteNoiseTime = 0xc8; // float
		constexpr auto LastLocalNoiseVolume = 0xcc; // float
		constexpr auto LastLocalNoiseTime = 0xd0; // float
	}

	namespace n_UMM_Occupation_Revival_Flag { // : UWidgetBase
		constexpr auto neutralGaugeColor = 0x2e0; // FLinearColor
		constexpr auto defenseGaugeColor = 0x2f0; // FLinearColor
		constexpr auto offenseGaugeColor = 0x300; // FLinearColor
		constexpr auto rootPanel = 0x310; // UCanvasPanel*
		constexpr auto guildMarkPanel = 0x318; // UCanvasPanel*
		constexpr auto gaugePanel = 0x320; // UCanvasPanel*
		constexpr auto lockTimePanel = 0x328; // UCanvasPanel*
		constexpr auto revivalFlagName = 0x330; // UTextBlock*
		constexpr auto ownerGuildName = 0x338; // UTextBlock*
		constexpr auto ownerGuildMark = 0x340; // UImage*
		constexpr auto ownerGuildFrame = 0x348; // UImage*
		constexpr auto dominanceGlow = 0x350; // UImage*
		constexpr auto dominanceLine = 0x358; // UImage*
		constexpr auto ownerGauge = 0x360; // UImage*
		constexpr auto dominanceGauge = 0x368; // UImage*
		constexpr auto lockTimeGauge = 0x370; // UImage*
		constexpr auto gaugeHighlight_Home = 0x378; // UImage*
		constexpr auto gaugeHighlight_Away = 0x380; // UImage*
		constexpr auto animRotation_Home = 0x388; // UWidgetAnimation*
		constexpr auto animRotation_Away = 0x390; // UWidgetAnimation*
		constexpr auto animAwayIn = 0x398; // UWidgetAnimation*
	}

	namespace n_UMM_Popup_Guild_Creation { // : UWidgetBase
		constexpr auto m_AniStart = 0x2f0; // UWidgetAnimation*
		constexpr auto img_frame = 0x308; // UMirImage*
		constexpr auto Img_Symbol = 0x310; // UMirImage*
		constexpr auto Txt_GuildName = 0x318; // UMirTextBlock*
		constexpr auto Txt_Message_01 = 0x320; // UMirTextBlock*
		constexpr auto Txt_Message_02 = 0x328; // UMirTextBlock*
	}

	namespace n_UMovieSceneObjectPropertyTrack { // : UMovieScenePropertyTrack
		constexpr auto PropertyClass = 0x88; // UObject*
	}

	namespace n_USkillCameraNotify { // : UAnimNotify
		constexpr auto SkillCameraValue = 0x38; // FSkillCameraValue
	}

	namespace n_UMM_DungeonCommonListSlot { // : UMM_DungeonListSlotBase
		constexpr auto imgBackGround = 0x2f0; // UMirImage*
		constexpr auto imgBossGrade = 0x2f8; // UMirImage*
		constexpr auto imgBoss = 0x300; // UMirImage*
		constexpr auto ovlState1 = 0x308; // UOverlay*
		constexpr auto txtState1 = 0x310; // UMirTextBlock*
		constexpr auto imgDisableSlot = 0x318; // UMirImage*
		constexpr auto imgLockSlot = 0x320; // UMirImage*
		constexpr auto MirTextBlock_25 = 0x328; // UMirTextBlock*
		constexpr auto TxtTitle = 0x330; // UMirTextBlock*
		constexpr auto imgIndicator = 0x338; // UMirImage*
		constexpr auto canQuest = 0x340; // UMirCanvasPanel*
		constexpr auto imgQuestIcon = 0x348; // UMirImage*
		constexpr auto ovlState2 = 0x350; // UOverlay*
		constexpr auto txtState2 = 0x358; // UMirTextBlock*
		constexpr auto imgSelectSlot = 0x360; // UMirImage*
		constexpr auto btnMain = 0x368; // UButton*
		constexpr auto WorldbossColor = 0x370; // FLinearColor
		constexpr auto GuildExpeditionColor = 0x380; // FLinearColor
		constexpr auto SuppressionColor = 0x390; // FLinearColor
		constexpr auto BossSuppressionColor = 0x3a0; // FLinearColor
	}

	namespace n_UMM_NewInventory_Pet { // : UMM_NewInventory_Base
		constexpr auto m_Inven = 0x2e8; // UMM_NewInventory*
	}

	namespace n_ADirectionalLightOverrideVolume { // : APostProcessVolume
		constexpr auto OverrideDirectionalLight = 0x7a0; // UOverrideDirectionalLight*
	}

	namespace n_UDeviceProfile { // : UTextureLODSettings
		constexpr auto DeviceType = 0x38; // FString
		constexpr auto BaseProfileName = 0x48; // FString
		constexpr auto Parent = 0x58; // UObject*
		constexpr auto CVars = 0x78; // TArray<FString>
	}

	namespace n_UMaterialExpressionDistance { // : UMaterialExpression
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_UMM_DungeonCommonGuildExpTicket { // : UWidgetBase
		constexpr auto canCreateState = 0x2e0; // UMirCanvasPanel*
		constexpr auto txtFixNeedTicket = 0x2e8; // UMirTextBlock*
		constexpr auto slotNeedTicket1 = 0x2f0; // UMM_Slot_Material_Item*
		constexpr auto slotNeedTicket2 = 0x2f8; // UMM_Slot_Material_Item*
		constexpr auto slotNeedTicket3 = 0x300; // UMM_Slot_Material_Item*
		constexpr auto canReadyState = 0x308; // UMirCanvasPanel*
		constexpr auto txtNoti1 = 0x310; // UMirTextBlock*
		constexpr auto rtxtNoti2 = 0x318; // UMirRichTextBlock*
		constexpr auto canRunState = 0x320; // UMirCanvasPanel*
		constexpr auto canLeftState = 0x328; // UMirCanvasPanel*
		constexpr auto txtLeftState1 = 0x330; // UMirTextBlock*
		constexpr auto txtLeftState2 = 0x338; // UMirTextBlock*
		constexpr auto canRightState = 0x340; // UMirCanvasPanel*
		constexpr auto txtRightState1 = 0x348; // UMirTextBlock*
		constexpr auto txtRightState2 = 0x350; // UMirTextBlock*
		constexpr auto BtnTooltip = 0x358; // UMM_Common_ToolTipBtn*
	}

	namespace n_UMaterialExpressionLightmassReplace { // : UMaterialExpression
		constexpr auto Realtime = 0x40; // FExpressionInput
		constexpr auto Lightmass = 0x54; // FExpressionInput
	}

	namespace n_UMM_Slot_Refund_Sanctions_List { // : UWidgetBase
		constexpr auto m_Txt_PayTime = 0x350; // UMirTextBlock*
		constexpr auto m_Txt_ProductName = 0x358; // UMirTextBlock*
		constexpr auto m_Txt_PayNumber = 0x360; // UMirTextBlock*
		constexpr auto m_Can_PayButton = 0x368; // UPanelWidget*
		constexpr auto m_Txt_PayCost = 0x370; // UMirTextBlock*
		constexpr auto m_Btn_Pay = 0x378; // UMirButton*
		constexpr auto m_Txt_PayComplete = 0x380; // UMirTextBlock*
	}

	namespace n_ALandscapeMeshProxyActor { // : AActor
		constexpr auto LandscapeMeshProxyComponent = 0x218; // ULandscapeMeshProxyComponent*
	}

	namespace n_AFieldSystemActor { // : AActor
		constexpr auto FieldSystemComponent = 0x218; // UFieldSystemComponent*
	}

	namespace n_UMaterialExpressionTemporalSobol { // : UMaterialExpression
		constexpr auto Index = 0x40; // FExpressionInput
		constexpr auto Seed = 0x54; // FExpressionInput
		constexpr auto ConstIndex = 0x68; // uint32_t
		constexpr auto ConstSeed = 0x6c; // FVector2D
	}

	namespace n_UMaterialExpressionTime { // : UMaterialExpression
		constexpr auto bIgnorePause = 0x40; // char : 1
		constexpr auto bOverride_Period = 0x40; // char : 1
		constexpr auto Period = 0x44; // float
	}

	namespace n_UMM_Costume_Slot_InvenItem_Long { // : UWidgetBase
		constexpr auto m_pSelectSlotEffect = 0x300; // UEffectWidgetBase*
		constexpr auto m_pTutorialWidget = 0x308; // UTutorialHighlightWidget*
		constexpr auto Grid_SaleIcon = 0x310; // UPanelWidget*
		constexpr auto Panel_SaleInfo = 0x318; // UHorizontalBox*
		constexpr auto Txt_Percent = 0x320; // UMirTextBlock*
		constexpr auto Txt_Name = 0x328; // UTextBlock*
		constexpr auto CostGrid = 0x330; // UHorizontalBox*
		constexpr auto Img_CostType = 0x338; // UMirImage*
		constexpr auto Txt_CostValue = 0x340; // UMirTextBlock*
		constexpr auto Img_CostType_Sale = 0x348; // UMirImage*
		constexpr auto Txt_CostValue_Sale = 0x350; // UMirTextBlock*
		constexpr auto Panel_Color = 0x358; // UCanvasPanel*
		constexpr auto Txt_Color = 0x360; // UMirTextBlock*
		constexpr auto Slot_PaletteColor = 0x368; // UMM_Slot_Costume_Palette*
		constexpr auto Img_Select = 0x370; // UImage*
		constexpr auto Btn_Slot = 0x378; // UMirButton*
		constexpr auto Img_Icon = 0x380; // UMirImage*
		constexpr auto Img_Event = 0x388; // UMirImage*
		constexpr auto Img_Equipped = 0x390; // UMirImage*
		constexpr auto Img_Have = 0x398; // UMirImage*
		constexpr auto Img_Default = 0x3a0; // UMirImage*
		constexpr auto Img_Disabled = 0x3a8; // UMirImage*
		constexpr auto Img_Lock = 0x3b0; // UMirImage*
		constexpr auto txt_time = 0x3b8; // UMirTextBlock*
		constexpr auto Img_TimeBG = 0x3c0; // UMirImage*
		constexpr auto Img_Indicator = 0x3c8; // UMirImage*
		constexpr auto m_Arr_Slot = 0x3d0; // TArray<UMM_Popup_Appearance_Slot*>
		constexpr auto m_Effect_Panel = 0x3e0; // UPanelWidget*
		constexpr auto SLOT_EFFECT_INDEX = 0x3e8; // int32_t
		constexpr auto STRING_PERCENT = 0x3ec; // int32_t
		constexpr auto STRING_PurchaseAble = 0x3f0; // int32_t
		constexpr auto ICONID_DEFAULT = 0x3f4; // int32_t
		constexpr auto ICONID_EQUIP = 0x3f8; // int32_t
		constexpr auto ICONID_OWNED = 0x3fc; // int32_t
		constexpr auto m_CostumeParts = 0x400; // COSTUME_PARTS
		constexpr auto m_CostumeId = 0x404; // int32_t
		constexpr auto m_SlotIndex = 0x408; // int32_t
	}

	namespace n_AMM_PC { // : AMM_CharacterPawnBase
		constexpr auto m_pVehicle = 0xa40; // AMM_Vehicle*
		constexpr auto m_pInteractionObject = 0xa58; // AMM_ObjectBase*
		constexpr auto m_VehicleCapsuleHeight = 0xa64; // float
		constexpr auto m_DefaultCapsuleHeight = 0xa68; // float
		constexpr auto CameraControl = 0xa70; // ALobbyCameraControl*
		constexpr auto m_pPetObject = 0xa90; // AMM_PetObject*
		constexpr auto m_WeaponEffectComponentArray = 0xab0; // TArray<UParticleSystemComponent*>
		constexpr auto NormalAttackButtonCheckTime = 0xad8; // float
		constexpr auto ChargingStartDelayTime = 0xadc; // float
		constexpr auto NormalAttackInitTime = 0xae0; // float
		constexpr auto m_AutoRideDistance = 0xae4; // float
		constexpr auto m_AutoRideStepTime = 0xae8; // float
		constexpr auto m_HangOnTime = 0xaec; // float
		constexpr auto m_WallCheckAngle = 0xaf0; // float
		constexpr auto m_WallCheckDistance = 0xaf4; // float
		constexpr auto m_LandCheckDistance = 0xaf8; // float
		constexpr auto m_FlySpeed = 0xafc; // float
		constexpr auto m_FlyDownSpeed = 0xb00; // float
		constexpr auto m_FallMoveSpeed = 0xb04; // float
		constexpr auto m_LandAnimationTime = 0xb08; // float
		constexpr auto m_FastRunControlTime = 0xb0c; // float
		constexpr auto CameraShakeClass01 = 0xb10; // UCameraShake*
		constexpr auto CameraShakeClass02 = 0xb18; // UCameraShake*
		constexpr auto m_RideState = 0xb20; // ERideState
		constexpr auto IsHitState = 0xb21; // bool
		constexpr auto m_ServerUID = 0xb3c; // int32_t
		constexpr auto ChangeBattleStateTime = 0xb44; // float
		constexpr auto m_IsStandJump = 0xb60; // bool
		constexpr auto m_IsStandLand = 0xb61; // bool
		constexpr auto m_SideWalkDir = 0xb64; // float
		constexpr auto m_pNameTag = 0xb70; // UMM_B_NameTag*
		constexpr auto m_AccountGrade = 0xb78; // int32_t
	}

	namespace n_UMaterialExpressionDepthFade { // : UMaterialExpression
		constexpr auto InOpacity = 0x40; // FExpressionInput
		constexpr auto FadeDistance = 0x54; // FExpressionInput
		constexpr auto OpacityDefault = 0x68; // float
		constexpr auto FadeDistanceDefault = 0x6c; // float
	}

	namespace n_AMM_CustomizingDataActor { // : AActor
		constexpr auto m_BoneCustomDataArray = 0x218; // TMap<FString, FBoneCustomizingData>
		constexpr auto m_HairColorArray = 0x268; // TArray<FLinearColor>
		constexpr auto m_EyeColorArray = 0x278; // TArray<FLinearColor>
		constexpr auto m_LipColorArray = 0x288; // TArray<FLinearColor>
		constexpr auto m_SkinColorArray = 0x298; // TArray<FLinearColor>
		constexpr auto m_ClothColorArray = 0x2a8; // TArray<FLinearColor>
		constexpr auto m_HairMeshArray = 0x2b8; // TArray<USkeletalMesh*>
		constexpr auto m_FaceMeshArray = 0x2c8; // TArray<USkeletalMesh*>
		constexpr auto m_BodyMeshArray = 0x2d8; // TArray<USkeletalMesh*>
		constexpr auto m_ControlArray = 0x2e8; // TArray<FBoneControlData>
		constexpr auto m_pDefaultMesh = 0x2f8; // USkeletalMeshComponent*
		constexpr auto m_pHairMesh = 0x300; // UPoseableMeshComponent*
		constexpr auto m_pBodyMesh = 0x308; // UPoseableMeshComponent*
		constexpr auto m_pPoseableMesh = 0x310; // UPoseableMeshComponent*
		constexpr auto m_HeadRotationSpeed = 0x318; // float
		constexpr auto m_HeadRotationReturnSpeed = 0x31c; // float
		constexpr auto m_EyeRotationSpeed = 0x320; // float
		constexpr auto m_pUIBackGroundActor = 0x328; // AUIBackGroundActor*
	}

	namespace n_USoundNodeSoundClass { // : USoundNode
		constexpr auto SoundClassOverride = 0x40; // USoundClass*
	}

	namespace n_UIAPGalaxyStoreModule { // : UIAPStoreModuleBase
		constexpr auto m_OwnedProductList = 0x1c0; // TArray<FIAPProductData>
	}

	namespace n_UMM_Occupation_Observer_TargetHP { // : UMM_ProgressBar_HP
		constexpr auto m_Txt_Name = 0x3a0; // UMirTextBlock*
		constexpr auto m_Img_Icon = 0x3a8; // UMirImage*
	}

	namespace n_UMediaTexture { // : UTexture
		constexpr auto AddressX = 0xd0; // TextureAddress
		constexpr auto AddressY = 0xd1; // TextureAddress
		constexpr auto AutoClear = 0xd2; // bool
		constexpr auto ClearColor = 0xd4; // FLinearColor
		constexpr auto MediaPlayer = 0xe8; // UMediaPlayer*
	}

	namespace n_ATextRenderActor { // : AActor
		constexpr auto TextRender = 0x218; // UTextRenderComponent*
	}

	namespace n_UMovieSceneParameterSection { // : UMovieSceneSection
		constexpr auto ScalarParameterNamesAndCurves = 0xe0; // TArray<FScalarParameterNameAndCurve>
		constexpr auto VectorParameterNamesAndCurves = 0xf0; // TArray<FVectorParameterNameAndCurves>
		constexpr auto ColorParameterNamesAndCurves = 0x100; // TArray<FColorParameterNameAndCurves>
		constexpr auto TransformParameterNamesAndCurves = 0x110; // TArray<FTransformParameterNameAndCurves>
	}

	namespace n_UFirebaseVariant { // : UObject
		constexpr auto DataType = 0x28; // VariantType
		constexpr auto Int64Value = 0x30; // int64_t
		constexpr auto FloatValue = 0x38; // float
		constexpr auto BoolValue = 0x3c; // bool
		constexpr auto StringValue = 0x40; // FString
		constexpr auto VectorValue = 0x50; // TArray<UFirebaseVariant*>
		constexpr auto MapValue = 0x60; // TMap<FString, UFirebaseVariant*>
	}

	namespace n_UAISense_Blueprint { // : UAISense
		constexpr auto ListenerDataType = 0x80; // UUserDefinedStruct*
		constexpr auto ListenerContainer = 0x88; // TArray<UAIPerceptionComponent*>
		constexpr auto UnprocessedEvents = 0x98; // TArray<UAISenseEvent*>
	}

	namespace n_UCompressedImageSequenceProtocol { // : UImageSequenceProtocol
		constexpr auto CompressionQuality = 0xd8; // int32_t
	}

	namespace n_UMM_Dominion_Base { // : UWidgetBase
		constexpr auto m_pImgPerson = 0x2f0; // UMirImage*
		constexpr auto m_pTxtUserCount = 0x2f8; // UMirTextBlock*
		constexpr auto m_pBtnFastEnter = 0x300; // UMM_Common_Btn_Cost*
		constexpr auto m_pBtnEnter = 0x308; // UMM_Common_Btn*
		constexpr auto m_pBaseList = 0x310; // UMM_Dominion_Base_List*
		constexpr auto m_pBaseStrongPoint = 0x318; // UMM_Dominion_Base_StrongPoint*
	}

	namespace n_UMaterialExpressionArccosine { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UParticleModuleTrailBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x29; // char : 1
		constexpr auto LODDuplicate = 0x29; // char : 1
		constexpr auto bSupportsRandomSeed = 0x29; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x29; // char : 1
		constexpr auto LODValidity = 0x2a; // char
	}

	namespace n_UUniformScalar { // : UFieldNodeFloat
		constexpr auto Magnitude = 0xb0; // float
	}

	namespace n_UWriteAchievement { // : UBlueprintAsyncActionBase
		constexpr auto OnSuccess = 0x30; // FScriptMulticastDelegate
		constexpr auto OnFail = 0x40; // FScriptMulticastDelegate
	}

	namespace n_APlayerController { // : AController
		constexpr auto Player = 0x290; // UPlayer*
		constexpr auto AcknowledgedPawn = 0x298; // APawn*
		constexpr auto ControllingDirTrackInst = 0x2a0; // UInterpTrackInstDirector*
		constexpr auto MyHUD = 0x2a8; // AHUD*
		constexpr auto PlayerCameraManager = 0x2b0; // APlayerCameraManager*
		constexpr auto PlayerCameraManagerClass = 0x2b8; // APlayerCameraManager*
		constexpr auto bAutoManageActiveCameraTarget = 0x2c0; // bool
		constexpr auto TargetViewRotation = 0x2c4; // FRotator
		constexpr auto SmoothTargetViewRotationSpeed = 0x2dc; // float
		constexpr auto HiddenActors = 0x2e8; // TArray<AActor*>
		constexpr auto HiddenPrimitiveComponents = 0x2f8; // TArray<TWeakObjectPtr<UPrimitiveComponent>>
		constexpr auto LastSpectatorStateSynchTime = 0x30c; // float
		constexpr auto LastSpectatorSyncLocation = 0x310; // FVector
		constexpr auto LastSpectatorSyncRotation = 0x31c; // FRotator
		constexpr auto ClientCap = 0x328; // int32_t
		constexpr auto CheatManager = 0x330; // UCheatManager*
		constexpr auto CheatClass = 0x338; // UCheatManager*
		constexpr auto PlayerInput = 0x340; // UPlayerInput*
		constexpr auto ActiveForceFeedbackEffects = 0x348; // TArray<FActiveForceFeedbackEffect>
		constexpr auto bPlayerIsWaiting = 0x3c8; // char : 1
		constexpr auto NetPlayerIndex = 0x3cc; // char
		constexpr auto PendingSwapConnection = 0x408; // UNetConnection*
		constexpr auto NetConnection = 0x410; // UNetConnection*
		constexpr auto InputYawScale = 0x424; // float
		constexpr auto InputPitchScale = 0x428; // float
		constexpr auto InputRollScale = 0x42c; // float
		constexpr auto bShowMouseCursor = 0x430; // char : 1
		constexpr auto bEnableClickEvents = 0x430; // char : 1
		constexpr auto bEnableTouchEvents = 0x430; // char : 1
		constexpr auto bEnableMouseOverEvents = 0x430; // char : 1
		constexpr auto bEnableTouchOverEvents = 0x430; // char : 1
		constexpr auto bForceFeedbackEnabled = 0x430; // char : 1
		constexpr auto ForceFeedbackScale = 0x434; // float
		constexpr auto ClickEventKeys = 0x438; // TArray<FKey>
		constexpr auto DefaultMouseCursor = 0x448; // EMouseCursor
		constexpr auto CurrentMouseCursor = 0x449; // EMouseCursor
		constexpr auto DefaultClickTraceChannel = 0x44a; // ECollisionChannel
		constexpr auto CurrentClickTraceChannel = 0x44b; // ECollisionChannel
		constexpr auto HitResultTraceDistance = 0x44c; // float
		constexpr auto SeamlessTravelCount = 0x450; // uint16_t
		constexpr auto LastCompletedSeamlessTravelCount = 0x452; // uint16_t
		constexpr auto InactiveStateInputComponent = 0x4c8; // UInputComponent*
		constexpr auto bShouldPerformFullTickWhenPaused = 0x4d0; // char : 1
		constexpr auto CurrentTouchInterface = 0x4e8; // UTouchInterface*
		constexpr auto SpectatorPawn = 0x540; // ASpectatorPawn*
		constexpr auto bIsLocalPlayerController = 0x54c; // bool
		constexpr auto SpawnLocation = 0x550; // FVector
	}

	namespace n_UPopup_Auto_ExtendTime { // : UWidgetBase
		constexpr auto btnClose = 0x2f0; // UMM_Common_Btn_Symbol*
		constexpr auto txtTile = 0x2f8; // UMirTextBlock*
		constexpr auto Common_ToolTipBtn = 0x300; // UMM_Common_ToolTipBtn*
		constexpr auto optSelectMode = 0x308; // UMM_GameOption_Select*
		constexpr auto swtModeSelector = 0x310; // UWidgetSwitcher*
		constexpr auto swtAutoModeSelector = 0x318; // UWidgetSwitcher*
		constexpr auto txtFixAutoExtending = 0x320; // UMirTextBlock*
		constexpr auto wgtExtendCountSlider = 0x328; // UMM_Item_Make_Slider*
		constexpr auto txtUseGoldCount = 0x330; // UMirTextBlock*
		constexpr auto optSwtUseGold = 0x338; // UMM_GameOption_Switch*
		constexpr auto txtFixUseOrder = 0x340; // UMirTextBlock*
		constexpr auto canUseTicket = 0x348; // UMirCanvasPanel*
		constexpr auto imgTicket = 0x350; // UMirImage*
		constexpr auto ImgTicketNext = 0x358; // UMirImage*
		constexpr auto canUseGold = 0x360; // UMirCanvasPanel*
		constexpr auto imgGold = 0x368; // UMirImage*
		constexpr auto imgGoldNext = 0x370; // UMirImage*
		constexpr auto canUseItem = 0x378; // UMirCanvasPanel*
		constexpr auto imgItem = 0x380; // UMirImage*
		constexpr auto btnStartExtend = 0x388; // UMM_Common_Btn*
		constexpr auto btnStopExtend = 0x390; // UMM_Common_Btn*
		constexpr auto txtFixLeftExendCount = 0x398; // UMirTextBlock*
		constexpr auto txtLeftExtendValue = 0x3a0; // UMirTextBlock*
		constexpr auto txtFixCurExtendCost = 0x3a8; // UMirTextBlock*
		constexpr auto txtCurExtendValue = 0x3b0; // UMirTextBlock*
		constexpr auto imgCurUsingCost = 0x3b8; // UMirImage*
		constexpr auto MatSlot = 0x3c0; // UMM_Slot_Material*
		constexpr auto txtLeftTime = 0x3c8; // UMirTextBlock*
		constexpr auto txtFixNotice = 0x3d0; // UMirTextBlock*
		constexpr auto hrzLimitGoldCount = 0x3d8; // UHorizontalBox*
		constexpr auto txtLimitGoldCount = 0x3e0; // UMirRichTextBlock*
		constexpr auto btnExtendTicket = 0x3e8; // UMM_Common_Btn*
		constexpr auto btnExtendGold = 0x3f0; // UMM_Common_Btn_Cost*
		constexpr auto btnExtendItem = 0x3f8; // UMM_Common_Btn_Cost*
	}

	namespace n_UCharLocalSave { // : USaveGame
		constexpr auto m_iCharUID = 0x28; // int64_t
		constexpr auto m_arNewItemUID = 0x30; // TArray<int64_t>
		constexpr auto m_arSkippableSequenceStage = 0x40; // TSet<int32_t>
		constexpr auto m_arContentsOpen_NeedAction = 0x90; // TArray<int32_t>
		constexpr auto m_ePKModeType = 0xa0; // EPKModeType
		constexpr auto m_ePrePKModeType = 0xa1; // EPKModeType
		constexpr auto m_mapIntSaveData = 0xa8; // TMap<FName, int32_t>
		constexpr auto m_arOpenedStageInfo = 0xf8; // TSet<int32_t>
		constexpr auto m_HUDAutoSetSkill = 0x148; // TMap<int32_t, bool>
		constexpr auto m_HUDIncreaseSkillUse = 0x198; // TMap<int32_t, bool>
		constexpr auto m_iHPPotionID = 0x1e8; // int32_t
		constexpr auto m_iMPPotionID = 0x1ec; // int32_t
		constexpr auto m_arNewRelationID = 0x1f0; // TArray<int32_t>
		constexpr auto m_arMapTrace = 0x200; // TArray<int32_t>
		constexpr auto m_arrAuctionBookMark = 0x210; // TArray<int32_t>
		constexpr auto m_iSeasonStart = 0x220; // TArray<uint32_t>
		constexpr auto m_UIShopBannerInitDay = 0x230; // int32_t
		constexpr auto m_bIsUIShopBannerSkip = 0x234; // bool
		constexpr auto m_arrNewGuildWanted = 0x238; // TArray<int64_t>
		constexpr auto m_arNewCostumeID = 0x248; // TArray<int64_t>
		constexpr auto m_GachaGoodsDay = 0x258; // int32_t
		constexpr auto m_bIsSuccessGacha = 0x25c; // bool
		constexpr auto m_bIsSkipGacha = 0x25d; // bool
		constexpr auto m_GuildDevelopDay = 0x260; // int32_t
		constexpr auto m_bIsSuceessGuildDevelop = 0x264; // bool
		constexpr auto m_bIsSkipGuildDevelop = 0x265; // bool
		constexpr auto m_bIsSkipSicknessRecovery = 0x266; // bool
		constexpr auto m_mapBattlePassPremium1 = 0x268; // TMap<int32_t, bool>
		constexpr auto m_mapBattlePassPremium2 = 0x2b8; // TMap<int32_t, bool>
		constexpr auto m_mapSimpleGraphic = 0x308; // TMap<int32_t, int32_t>
		constexpr auto m_arSortType = 0x358; // TMap<int32_t, int32_t>
		constexpr auto m_AdsCoolTimeTicks = 0x3a8; // int64_t
		constexpr auto m_arNewRequestID = 0x3b0; // TArray<int32_t>
		constexpr auto m_QuickSlotKeepIDs = 0x3c0; // TMap<int32_t, int32_t>
		constexpr auto m_iVehicleIndicator = 0x410; // int32_t
		constexpr auto m_arNewVehicleID = 0x418; // TArray<int32_t>
		constexpr auto m_mapServerVisitGuildList = 0x428; // TMap<uint64_t, FString>
		constexpr auto m_FavoriteCollects = 0x478; // TArray<int32_t>
		constexpr auto m_ProclamationDay = 0x488; // TMap<int32_t, int32_t>
	}

	namespace n_UMM_Slot_Term_Item { // : UWidgetBase
		constexpr auto Slot_Item = 0x2f0; // UMM_Slot_Material*
		constexpr auto Item_Name = 0x2f8; // UMirTextBlock*
		constexpr auto ExpireDateTime = 0x300; // UMirTextBlock*
		constexpr auto Img_Indicator = 0x308; // UMirImage*
		constexpr auto ExpireTimeDate_Period = 0x310; // FDateTime
		constexpr auto ItemTermType = 0x318; // int32_t
		constexpr auto DisplayUpdateTime = 0x31c; // float
		constexpr auto UpdateTimer = 0x320; // float
		constexpr auto STR_MSG_REMAINTIME = 0x324; // int32_t
	}

	namespace n_UMM_Revival_Select_Slot { // : UWidgetBase
		constexpr auto Img_Icon = 0x2e8; // UMirImage*
		constexpr auto Img_Select = 0x2f0; // UMirImage*
		constexpr auto Txt_Name = 0x2f8; // UMirTextBlock*
		constexpr auto Btn_Location = 0x300; // UMirButton*
		constexpr auto m_WarpId = 0x308; // int32_t
	}

	namespace n_UEnvQueryTest_GameplayTags { // : UEnvQueryTest
		constexpr auto TagQueryToMatch = 0x1c0; // FGameplayTagQuery
		constexpr auto bUpdatedToUseQuery = 0x208; // bool
		constexpr auto TagsToMatch = 0x209; // EGameplayContainerMatchType
		constexpr auto GameplayTags = 0x210; // FGameplayTagContainer
	}

	namespace n_AAROriginActor { // : AActor
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto bHidden = 0x58; // char : 1
		constexpr auto bNetTemporary = 0x58; // char : 1
		constexpr auto bNetStartup = 0x58; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x58; // char : 1
		constexpr auto bAlwaysRelevant = 0x58; // char : 1
		constexpr auto bReplicateMovement = 0x58; // char : 1
		constexpr auto bTearOff = 0x58; // char : 1
		constexpr auto bExchangedRoles = 0x58; // char : 1
		constexpr auto bNetLoadOnClient = 0x59; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x59; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x59; // char : 1
		constexpr auto bRelevantForLevelBounds = 0x59; // char : 1
		constexpr auto bReplayRewindable = 0x59; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x59; // char : 1
		constexpr auto bAutoDestroyWhenFinished = 0x59; // char : 1
		constexpr auto bBlockInput = 0x59; // char : 1
		constexpr auto bCanBeDamaged = 0x5a; // char : 1
		constexpr auto bCollideWhenPlacing = 0x5a; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x5a; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x5a; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x5a; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x5a; // char : 1
		constexpr auto bIsEditorOnlyActor = 0x5a; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x5a; // char : 1
		constexpr auto bReplicates = 0x5b; // char : 1
		constexpr auto bCanBeInCluster = 0x5b; // char : 1
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x5b; // char : 1
		constexpr auto bActorEnableCollision = 0x5c; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x5c; // char : 1
		constexpr auto UpdateOverlapsMethodDuringLevelStreaming = 0x5d; // EActorUpdateOverlapsMethod
		constexpr auto DefaultUpdateOverlapsMethodDuringLevelStreaming = 0x5e; // EActorUpdateOverlapsMethod
		constexpr auto RemoteRole = 0x5f; // ENetRole
		constexpr auto ReplicatedMovement = 0x60; // FRepMovement
		constexpr auto InitialLifeSpan = 0x94; // float
		constexpr auto CustomTimeDilation = 0x98; // float
		constexpr auto AttachmentReplication = 0xa0; // FRepAttachment
		constexpr auto Owner = 0xe0; // AActor*
		constexpr auto NetDriverName = 0xe8; // FName
		constexpr auto Role = 0xf0; // ENetRole
		constexpr auto NetDormancy = 0xf1; // ENetDormancy
		constexpr auto SpawnCollisionHandlingMethod = 0xf2; // ESpawnActorCollisionHandlingMethod
		constexpr auto AutoReceiveInput = 0xf3; // EAutoReceiveInput
		constexpr auto InputPriority = 0xf4; // int32_t
		constexpr auto InputComponent = 0xf8; // UInputComponent*
		constexpr auto NetCullDistanceSquared = 0x100; // float
		constexpr auto NetTag = 0x104; // int32_t
		constexpr auto NetUpdateFrequency = 0x108; // float
		constexpr auto MinNetUpdateFrequency = 0x10c; // float
		constexpr auto NetPriority = 0x110; // float
		constexpr auto Instigator = 0x118; // APawn*
		constexpr auto Children = 0x120; // TArray<AActor*>
		constexpr auto RootComponent = 0x130; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x138; // TArray<AMatineeActor*>
		constexpr auto Layers = 0x150; // TArray<FName>
		constexpr auto ParentComponent = 0x160; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto Tags = 0x168; // TArray<FName>
		constexpr auto OnTakeAnyDamage = 0x178; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x179; // FScriptMulticastDelegate
		constexpr auto OnTakeRadialDamage = 0x17a; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x17b; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x17c; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x17d; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x17e; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x17f; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x180; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x181; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x182; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x183; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x184; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x185; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x186; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x187; // FScriptMulticastDelegate
		constexpr auto InstanceComponents = 0x1e8; // TArray<UActorComponent*>
		constexpr auto BlueprintCreatedComponents = 0x1f8; // TArray<UActorComponent*>
	}

	namespace n_UMM_Customizing_TextCategory { // : UWidgetBase
		constexpr auto m_pSelectImage = 0x2e0; // UMirImage*
		constexpr auto m_CategoryNameText = 0x2e8; // UMirTextBlock*
		constexpr auto m_CategorySelectBtn = 0x2f0; // UMirButton*
	}

	namespace n_UMovieSceneEventSectionBase { // : UMovieSceneSection
		constexpr auto EvalOptions = 0x50; // FMovieSceneSectionEvalOptions
		constexpr auto Easing = 0x58; // FMovieSceneEasingSettings
		constexpr auto SectionRange = 0x90; // FMovieSceneFrameRange
		constexpr auto PreRollFrames = 0xa0; // FFrameNumber
		constexpr auto PostRollFrames = 0xa4; // FFrameNumber
		constexpr auto RowIndex = 0xa8; // int32_t
		constexpr auto OverlapPriority = 0xac; // int32_t
		constexpr auto bIsActive = 0xb0; // char : 1
		constexpr auto bIsLocked = 0xb0; // char : 1
		constexpr auto StartTime = 0xb4; // float
		constexpr auto EndTime = 0xb8; // float
		constexpr auto PrerollTime = 0xbc; // float
		constexpr auto PostrollTime = 0xc0; // float
		constexpr auto bIsInfinite = 0xc4; // char : 1
		constexpr auto bSupportsInfiniteRange = 0xc8; // bool
		constexpr auto BlendType = 0xc9; // FOptionalMovieSceneBlendType
	}

	namespace n_UMaterialExpressionArctangent2Fast { // : UMaterialExpression
		constexpr auto Y = 0x40; // FExpressionInput
		constexpr auto X = 0x54; // FExpressionInput
	}

	namespace n_UInviteFriends { // : UBlueprintAsyncActionBase
		constexpr auto OnSuccess = 0x30; // FScriptMulticastDelegate
		constexpr auto OnFail = 0x40; // FScriptMulticastDelegate
	}

	namespace n_ALevelScriptActor { // : AActor
		constexpr auto bInputEnabled = 0x218; // char : 1
	}

	namespace n_UMovieSceneCameraCutTrack { // : UMovieSceneNameableTrack
		constexpr auto Sections = 0x58; // TArray<UMovieSceneSection*>
	}

	namespace n_UMM_Hud_ChannelReady { // : UWidgetBase
		constexpr auto m_Canvas = 0x2f0; // UCanvasPanel*
		constexpr auto m_Txt_Count = 0x2f8; // UMirTextBlock*
		constexpr auto m_Btn_Select = 0x300; // UMirButton*
	}

	namespace n_UMM_PopupKeypad_BigInteger { // : UWidgetBase
		constexpr auto btn_back = 0x2e0; // UMM_Common_Btn*
		constexpr auto txt_number = 0x2e8; // UMirTextBlock*
		constexpr auto btn_close = 0x2f0; // UMM_Common_Btn_Symbol*
		constexpr auto Btn_Cancel = 0x2f8; // UMM_Common_Btn*
		constexpr auto btn_confirm = 0x300; // UMM_Common_Btn*
		constexpr auto lst_btn_number = 0x308; // UMirButton* [0xa]
		constexpr auto btn_reset = 0x358; // UMirButton*
		constexpr auto btn_remove = 0x360; // UMirButton*
		constexpr auto btn_max = 0x368; // UMirButton*
		constexpr auto btn_11 = 0x370; // UMirButton*
		constexpr auto btn_51 = 0x378; // UMirButton*
		constexpr auto btn_101 = 0x380; // UMirButton*
	}

	namespace n_UGhostTrailActorData { // : UDataAsset
		constexpr auto LifeTime = 0x30; // float
		constexpr auto IntervalTime = 0x34; // float
		constexpr auto GhostMaterialInstance = 0x38; // UMaterialInstance*
		constexpr auto MeshParameterList = 0x40; // TArray<FGhostTrailMaterialParameterData>
		constexpr auto LoopParticleList = 0x50; // TArray<FGhostTrailParticleData>
		constexpr auto EndParticleList = 0x60; // TArray<FGhostTrailParticleData>
	}

	namespace n_UMM_Slot_New_Ranking_Reward_Buff { // : UWidgetBase
		constexpr auto m_pImgItem = 0x2e0; // UMirImage*
		constexpr auto m_pTxtItemName = 0x2e8; // UMirTextBlock*
		constexpr auto m_pTxtItemValue = 0x2f0; // UMirTextBlock*
	}

	namespace n_USplineMeshComponent { // : UStaticMeshComponent
		constexpr auto SplineParams = 0x4b0; // FSplineMeshParams
		constexpr auto SplineUpDir = 0x508; // FVector
		constexpr auto SplineBoundaryMin = 0x514; // float
		constexpr auto CachedMeshBodySetupGuid = 0x518; // FGuid
		constexpr auto BodySetup = 0x528; // UBodySetup*
		constexpr auto SplineBoundaryMax = 0x530; // float
		constexpr auto bAllowSplineEditingPerInstance = 0x534; // char : 1
		constexpr auto bSmoothInterpRollScale = 0x534; // char : 1
		constexpr auto bMeshDirty = 0x534; // char : 1
		constexpr auto ForwardAxis = 0x535; // ESplineMeshAxis
		constexpr auto VirtualTextureMainPassMaxDrawDistance = 0x538; // float
	}

	namespace n_UMM_UIShopAdsMovieWidget { // : UWidgetBase
		constexpr auto m_MediaPlayer = 0x2e0; // UMediaPlayer*
		constexpr auto m_MediaTexture = 0x2e8; // UMediaTexture*
		constexpr auto m_MediaSource = 0x2f0; // UMediaSource*
		constexpr auto m_Btn_Skip = 0x2f8; // UMirButton*
		constexpr auto m_MediaSoundActor = 0x300; // AMediaSoundActor*
	}

	namespace n_UTutorialNpcDialog { // : UWidgetBase
		constexpr auto m_pParentWidget = 0x260; // UWidgetBase*
		constexpr auto m_arChildWidget = 0x268; // TArray<TWeakObjectPtr<UWidgetBase>>
		constexpr auto m_arMirTextBlock = 0x280; // TArray<TWeakObjectPtr<UMirTextBlock>>
		constexpr auto m_arMirRichTextBlock = 0x290; // TArray<TWeakObjectPtr<UMirRichTextBlock>>
		constexpr auto m_arMirEditableText = 0x2a0; // TArray<TWeakObjectPtr<UMirEditableText>>
		constexpr auto m_arMirImage = 0x2b0; // TArray<TWeakObjectPtr<UMirImage>>
	}

	namespace n_UInheritableComponentHandler { // : UObject
		constexpr auto Records = 0x28; // TArray<FComponentOverrideRecord>
		constexpr auto UnnecessaryComponents = 0x38; // TArray<UActorComponent*>
	}

	namespace n_UWNGamePluginSettings { // : UObject
		constexpr auto bEnableFreeStopHinge = 0x28; // bool
		constexpr auto bEnableGalaxyStore = 0x29; // bool
		constexpr auto bEnableOneStore = 0x2a; // bool
		constexpr auto bEnableWemix = 0x2b; // bool
	}

	namespace n_UMM_CommonVerticalTabTreeSet { // : UWidgetBase
		constexpr auto m_iFontSize = 0x2f0; // int32_t
		constexpr auto m_bUseBg = 0x2f4; // bool
		constexpr auto m_bHideInsteadOfLock = 0x2f5; // bool
		constexpr auto m_Scr_Main = 0x308; // UMirScrollBox*
		constexpr auto m_SelectedEffect = 0x310; // UEffectWidgetBase*
		constexpr auto m_SelectedSubEffect = 0x318; // UEffectWidgetBase*
	}

	namespace n_UMM_Popup_Contents_Notice { // : UWidgetBase
		constexpr auto m_fShowTime = 0x2e0; // float
		constexpr auto m_AniStart = 0x2e8; // UWidgetAnimation*
		constexpr auto m_AniEnd = 0x2f0; // UWidgetAnimation*
		constexpr auto m_Img_Symbol = 0x308; // UMirImage*
		constexpr auto m_Txt_Title = 0x310; // UMirTextBlock*
		constexpr auto m_Txt_Description = 0x318; // UMirTextBlock*
	}

	namespace n_UMM_Popup_Party_Make { // : UWidgetBase
		constexpr auto STRING_ID_GUILD_WAR_NOTICE = 0x2f0; // int32_t
		constexpr auto STRING_ID_PARTY_MAKE = 0x2f4; // int32_t
		constexpr auto STRING_ID_SQUAD_MAKE = 0x2f8; // int32_t
		constexpr auto STRING_ID_GUILD_NOTICE = 0x2fc; // int32_t
		constexpr auto m_Txt_Title = 0x300; // UMirTextBlock*
		constexpr auto m_C_Btn_Close = 0x308; // UMM_Common_Btn_Symbol*
		constexpr auto m_Txt_ExplainTitle = 0x310; // UMirTextBlock*
		constexpr auto m_Party_ExplainTextField = 0x318; // UMM_Party_ExplainTextField*
		constexpr auto m_Canvas_Squad = 0x320; // UMirCanvasPanel*
		constexpr auto m_Img_Level = 0x328; // UMirImage* [0x6]
		constexpr auto m_Txt_DungeonName = 0x358; // UMirTextBlock*
		constexpr auto m_CheckBox_Public = 0x360; // UCheckBox*
		constexpr auto m_CheckBox_Private = 0x368; // UCheckBox*
		constexpr auto m_CheckBox_Guild = 0x370; // UCheckBox*
		constexpr auto m_CheckBox_Member5 = 0x378; // UCheckBox*
		constexpr auto m_CheckBox_Member15 = 0x380; // UCheckBox*
		constexpr auto m_Img_Lock = 0x388; // UMirImage*
		constexpr auto m_Img_Unlock = 0x390; // UMirImage*
		constexpr auto m_Txt_Password = 0x398; // UMirTextBlock*
		constexpr auto m_Txt_CombatPoint = 0x3a0; // UMirTextBlock*
		constexpr auto m_Btn_Password = 0x3a8; // UMirButton*
		constexpr auto m_Btn_CombatPoint = 0x3b0; // UMirButton*
		constexpr auto m_C_Btn_Create = 0x3b8; // UMM_Common_Btn*
		constexpr auto m_Can_Option_Member_16 = 0x3c0; // UMirCanvasPanel*
	}

	namespace n_UMM_TutorialPage { // : UWidgetBase
		constexpr auto m_pPageTutorialData = 0x2e0; // UPageTutorialData*
		constexpr auto m_FadeLerpTime = 0x2f8; // float
		constexpr auto m_pTitleText = 0x300; // UMirTextBlock*
		constexpr auto m_pDescriptionText01 = 0x308; // UMirRichTextBlock*
		constexpr auto m_pDescriptionText02 = 0x310; // UMirRichTextBlock*
		constexpr auto m_pTutorialImage01 = 0x318; // UMirImage*
		constexpr auto m_pTutorialImage02 = 0x320; // UMirImage*
		constexpr auto m_pSkipButton = 0x328; // UMirButton*
		constexpr auto m_pSkipPanel = 0x330; // UCanvasPanel*
		constexpr auto img_prev = 0x338; // UImage*
		constexpr auto m_pPrevButton = 0x340; // UMirButton*
		constexpr auto m_pNextButton = 0x348; // UMirButton*
		constexpr auto m_pPageIndicator = 0x350; // UMM_PageIndicator*
		constexpr auto m_pFadeInText = 0x358; // UMirRichTextBlock*
		constexpr auto m_pFadeOutText = 0x360; // UMirRichTextBlock*
		constexpr auto m_pFadeInImage = 0x368; // UMirImage*
		constexpr auto m_pFadeOutImage = 0x370; // UMirImage*
		constexpr auto cp_skip = 0x378; // UMirCanvasPanel*
		constexpr auto btn_skip = 0x380; // UMirButton*
	}

	namespace n_UProjectileMovementComponent { // : UMovementComponent
		constexpr auto InitialSpeed = 0xf0; // float
		constexpr auto MaxSpeed = 0xf4; // float
		constexpr auto bRotationFollowsVelocity = 0xf8; // char : 1
		constexpr auto bRotationRemainsVertical = 0xf8; // char : 1
		constexpr auto bShouldBounce = 0xf8; // char : 1
		constexpr auto bInitialVelocityInLocalSpace = 0xf8; // char : 1
		constexpr auto bForceSubStepping = 0xf8; // char : 1
		constexpr auto bSimulationEnabled = 0xf8; // char : 1
		constexpr auto bSweepCollision = 0xf8; // char : 1
		constexpr auto bIsHomingProjectile = 0xf8; // char : 1
		constexpr auto bBounceAngleAffectsFriction = 0xf9; // char : 1
		constexpr auto bIsSliding = 0xf9; // char : 1
		constexpr auto bInterpMovement = 0xf9; // char : 1
		constexpr auto bInterpRotation = 0xf9; // char : 1
		constexpr auto PreviousHitTime = 0xfc; // float
		constexpr auto PreviousHitNormal = 0x100; // FVector
		constexpr auto ProjectileGravityScale = 0x10c; // float
		constexpr auto Buoyancy = 0x110; // float
		constexpr auto Bounciness = 0x114; // float
		constexpr auto Friction = 0x118; // float
		constexpr auto BounceVelocityStopSimulatingThreshold = 0x11c; // float
		constexpr auto MinFrictionFraction = 0x120; // float
		constexpr auto OnProjectileBounce = 0x128; // FScriptMulticastDelegate
		constexpr auto OnProjectileStop = 0x138; // FScriptMulticastDelegate
		constexpr auto HomingAccelerationMagnitude = 0x148; // float
		constexpr auto HomingTargetComponent = 0x14c; // TWeakObjectPtr<USceneComponent>
		constexpr auto MaxSimulationTimeStep = 0x154; // float
		constexpr auto MaxSimulationIterations = 0x158; // int32_t
		constexpr auto BounceAdditionalIterations = 0x15c; // int32_t
		constexpr auto InterpLocationTime = 0x160; // float
		constexpr auto InterpRotationTime = 0x164; // float
		constexpr auto InterpLocationMaxLagDistance = 0x168; // float
		constexpr auto InterpLocationSnapToTargetDistance = 0x16c; // float
	}

	namespace n_UComboBoxWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto ComboBoxStyle = 0x30; // FComboBoxStyle
	}

	namespace n_UNavArea_Null { // : UNavArea
		constexpr auto DefaultCost = 0x30; // float
		constexpr auto FixedAreaEnteringCost = 0x34; // float
		constexpr auto DrawColor = 0x38; // FColor
		constexpr auto SupportedAgents = 0x3c; // FNavAgentSelector
		constexpr auto bSupportsAgent0 = 0x40; // char : 1
		constexpr auto bSupportsAgent1 = 0x40; // char : 1
		constexpr auto bSupportsAgent2 = 0x40; // char : 1
		constexpr auto bSupportsAgent3 = 0x40; // char : 1
		constexpr auto bSupportsAgent4 = 0x40; // char : 1
		constexpr auto bSupportsAgent5 = 0x40; // char : 1
		constexpr auto bSupportsAgent6 = 0x40; // char : 1
		constexpr auto bSupportsAgent7 = 0x40; // char : 1
		constexpr auto bSupportsAgent8 = 0x41; // char : 1
		constexpr auto bSupportsAgent9 = 0x41; // char : 1
		constexpr auto bSupportsAgent10 = 0x41; // char : 1
		constexpr auto bSupportsAgent11 = 0x41; // char : 1
		constexpr auto bSupportsAgent12 = 0x41; // char : 1
		constexpr auto bSupportsAgent13 = 0x41; // char : 1
		constexpr auto bSupportsAgent14 = 0x41; // char : 1
		constexpr auto bSupportsAgent15 = 0x41; // char : 1
	}

	namespace n_UTestMovieSceneSequence { // : UMovieSceneSequence
		constexpr auto MovieScene = 0x348; // UMovieScene*
	}

	namespace n_UMaterialExpressionTruncate { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UMM_UIAction_UIShop { // : UMM_UIAction
		constexpr auto m_pGachaManager = 0x68; // AMM_GachaManagerActor*
	}

	namespace n_ULightmassPrimitiveSettingsObject { // : UObject
		constexpr auto LightmassSettings = 0x28; // FLightmassPrimitiveSettings
	}

	namespace n_UMM_BattlePass_Item_Slot { // : UMM_Slot_Base
		constexpr auto m_Can_ItemSlot = 0x3e8; // UMirCanvasPanel*
		constexpr auto m_Img_GradeBgEffect = 0x3f0; // UMirImage*
		constexpr auto m_Img_CurrSelected = 0x3f8; // UMirImage*
		constexpr auto m_Img_Disabled = 0x400; // UMirImage*
		constexpr auto m_Txt_Count = 0x408; // UMirTextBlock*
		constexpr auto m_Can_Lock = 0x410; // UMirCanvasPanel*
		constexpr auto m_Grid_EffectActive = 0x418; // UPanelWidget*
		constexpr auto m_AniActive = 0x420; // UWidgetAnimation*
	}

	namespace n_UMM_Popup_SkillAwakenList { // : UWidgetBase
		constexpr auto mCBClose = 0x2e0; // UMM_Common_Btn_Symbol*
		constexpr auto mBtnClose = 0x2e8; // UMirButton*
		constexpr auto mTxtTitle = 0x2f0; // UMirTextBlock*
		constexpr auto mScrollBox = 0x2f8; // UMirScrollBox*
	}

	namespace n_UMM_Popup_Auction_RegistInfo { // : UWidgetBase
		constexpr auto m_pItemInfo = 0x2f8; // UMM_Popup_Auction_ItemInfoSlot*
		constexpr auto m_pTxtAvrPrice = 0x300; // UMirTextBlock*
		constexpr auto m_pTxtResultPrice = 0x308; // UMirTextBlock*
		constexpr auto m_pSliderSellCount = 0x310; // UMM_Item_Make_Slider*
		constexpr auto m_pSliderSellPrice = 0x318; // UMM_Item_Make_Slider*
		constexpr auto m_pBtnClose = 0x320; // UMM_Common_Btn_Symbol*
		constexpr auto m_pBtnCancle = 0x328; // UMM_Common_Btn*
		constexpr auto m_pBtnOk = 0x330; // UMM_Common_Btn*
	}

	namespace n_UMM_UIAction_Dominion { // : UMM_UIAction
		constexpr auto m_iNowDominionID = 0xc8; // int32_t
		constexpr auto m_iStartDominionID = 0xcc; // int32_t
		constexpr auto m_iTargetUserUID = 0xd0; // uint64_t
		constexpr auto m_strTargetName = 0xd8; // FString
		constexpr auto m_iSelectPBS_ID = 0xe8; // int32_t
		constexpr auto m_eOpenContentsPopup = 0xec; // ECastleContents
		constexpr auto m_eReservationContents = 0xf0; // ECastleContents
		constexpr auto m_arrActiveTab = 0xf8; // TArray<bool>
	}

	namespace n_UAnimationAsset { // : UObject
		constexpr auto Skeleton = 0x38; // USkeleton*
		constexpr auto metadata = 0x60; // TArray<UAnimMetaData*>
		constexpr auto AssetUserData = 0x70; // TArray<UAssetUserData*>
	}

	namespace n_USceneCaptureTool { // : UWidgetBase
		constexpr auto DirLight = 0x2e0; // TWeakObjectPtr<ADirectionalLight>
		constexpr auto Slider_CameraRotator = 0x2e8; // USceneCaptureTool_Slider*
		constexpr auto Slider_DirLight = 0x2f0; // USceneCaptureTool_Slider*
		constexpr auto ComboBox_ChangePC = 0x2f8; // UComboBoxString*
		constexpr auto ComboBox_ChangeUI = 0x300; // UComboBoxString*
		constexpr auto Btn_Reset_01 = 0x308; // UButton*
		constexpr auto Btn_Reset_02 = 0x310; // UButton*
		constexpr auto Btn_Reset_03 = 0x318; // UButton*
		constexpr auto Btn_Save_01 = 0x320; // UButton*
		constexpr auto Btn_Save_02 = 0x328; // UButton*
		constexpr auto Btn_Save_03 = 0x330; // UButton*
		constexpr auto Txt_Location = 0x338; // UMirTextBlock*
		constexpr auto Txt_Rotator = 0x340; // UMirTextBlock*
		constexpr auto Txt_FOV = 0x348; // UMirTextBlock*
		constexpr auto Txt_Sensitivity = 0x350; // UMirTextBlock*
		constexpr auto Slider_Opacity = 0x358; // USlider*
		constexpr auto Txt_Opacity = 0x360; // UMirTextBlock*
	}

	namespace n_AMM_PhotoModeCharacter { // : AActor
		constexpr auto m_MeshIDArray = 0x238; // TArray<int32_t>
		constexpr auto m_AnimPath = 0x248; // FString
		constexpr auto m_pPhotoModeData = 0x258; // UPhotoModeData*
		constexpr auto m_pSprintArm = 0x260; // USpringArmComponent*
		constexpr auto m_pCamera = 0x268; // UCameraComponent*
		constexpr auto m_pMesh = 0x270; // USkeletalMeshComponent*
		constexpr auto m_pPartsComponent = 0x278; // UMM_CharacterPartsComponent*
		constexpr auto m_bMyCharacterHide = 0x280; // bool
		constexpr auto m_pPhotoModeAnimInstance = 0x2b0; // UMM_PhotoModeAnimInstance*
		constexpr auto m_pPhotoModeWidget = 0x2b8; // UMM_PhotoModeWidget*
	}

	namespace n_UMovieSceneCinematicShotTrack { // : UMovieSceneSubTrack
		constexpr auto Sections = 0x58; // TArray<UMovieSceneSection*>
	}

	namespace n_UMM_MiniGameWidget { // : UWidgetBase
		constexpr auto m_MiniGameActor = 0x2e0; // AMiniGame_ManagerActor*
		constexpr auto m_PlayerActor = 0x2e8; // AMiniGame_PlayerActor*
		constexpr auto m_Prg_PlayerHP = 0x300; // UMirProgressBar*
		constexpr auto m_Txt_KillCountValueBest = 0x308; // UMirTextBlock*
		constexpr auto m_Txt_KillCountValue = 0x310; // UMirTextBlock*
		constexpr auto m_RTxt_Notice = 0x318; // UMirRichTextBlock*
		constexpr auto m_Img_LeftPressed = 0x320; // UMirImage*
		constexpr auto m_Btn_Left = 0x328; // UMirButton*
		constexpr auto m_Img_RightPressed = 0x330; // UMirImage*
		constexpr auto m_Btn_Right = 0x338; // UMirButton*
		constexpr auto m_Can_Avoid = 0x340; // UPanelWidget*
		constexpr auto m_Btn_Avoid = 0x348; // UMirButton*
		constexpr auto m_Img_Avoid = 0x350; // UMirImage*
		constexpr auto m_Btn_Attack = 0x358; // UMirButton*
		constexpr auto m_Txt_KeyA = 0x360; // UMirTextBlock*
		constexpr auto m_Txt_KeyD = 0x368; // UMirTextBlock*
		constexpr auto m_Txt_KeyK = 0x370; // UMirTextBlock*
		constexpr auto m_Txt_KeyL = 0x378; // UMirTextBlock*
		constexpr auto m_Can_Pause = 0x380; // UPanelWidget*
		constexpr auto m_Btn_Pause = 0x388; // UMirButton*
		constexpr auto m_Btn_SetPause = 0x390; // UMirButton*
		constexpr auto m_Btn_Restart = 0x398; // UMirButton*
		constexpr auto m_Can_PatchNotice = 0x3a0; // UPanelWidget*
		constexpr auto m_Overlay_StartPatch = 0x3a8; // UPanelWidget*
		constexpr auto m_RTxt_PatchNotice = 0x3b0; // UMirRichTextBlock*
		constexpr auto m_RTxt_PatchEndNotice = 0x3b8; // UMirRichTextBlock*
		constexpr auto m_Btn_StartPatch = 0x3c0; // UMirButton*
		constexpr auto m_Can_StartBtnAni = 0x3c8; // UPanelWidget*
		constexpr auto m_Ani_StartBtn = 0x3d0; // UWidgetAnimation*
		constexpr auto m_VolumeController = 0x3d8; // UMM_VolumeController*
		constexpr auto m_pCanInteractionSize = 0x400; // UCanvasPanel*
		constexpr auto m_pImg_Thumb = 0x408; // UMirImage*
		constexpr auto m_pImg_PadBG = 0x410; // UMirImage*
	}

	namespace n_UMaterialExpressionScreenPosition { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UMaterialExpressionTextureSample { // : UMaterialExpressionTextureBase
		constexpr auto Coordinates = 0x50; // FExpressionInput
		constexpr auto TextureObject = 0x64; // FExpressionInput
		constexpr auto MipValue = 0x78; // FExpressionInput
		constexpr auto CoordinatesDX = 0x8c; // FExpressionInput
		constexpr auto CoordinatesDY = 0xa0; // FExpressionInput
		constexpr auto AutomaticViewMipBiasValue = 0xb4; // FExpressionInput
		constexpr auto MipValueMode = 0xc8; // ETextureMipValueMode
		constexpr auto SamplerSource = 0xc9; // ESamplerSourceMode
		constexpr auto AutomaticViewMipBias = 0xca; // char : 1
		constexpr auto ConstCoordinate = 0xcb; // char
		constexpr auto ConstMipValue = 0xcc; // int32_t
	}

	namespace n_UMaterialExpressionPixelNormalWS { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_AMiniMapNaviDataExporter { // : AActor
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto bHidden = 0x58; // char : 1
		constexpr auto bNetTemporary = 0x58; // char : 1
		constexpr auto bNetStartup = 0x58; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x58; // char : 1
		constexpr auto bAlwaysRelevant = 0x58; // char : 1
		constexpr auto bReplicateMovement = 0x58; // char : 1
		constexpr auto bTearOff = 0x58; // char : 1
		constexpr auto bExchangedRoles = 0x58; // char : 1
		constexpr auto bNetLoadOnClient = 0x59; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x59; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x59; // char : 1
		constexpr auto bRelevantForLevelBounds = 0x59; // char : 1
		constexpr auto bReplayRewindable = 0x59; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x59; // char : 1
		constexpr auto bAutoDestroyWhenFinished = 0x59; // char : 1
		constexpr auto bBlockInput = 0x59; // char : 1
		constexpr auto bCanBeDamaged = 0x5a; // char : 1
		constexpr auto bCollideWhenPlacing = 0x5a; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x5a; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x5a; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x5a; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x5a; // char : 1
		constexpr auto bIsEditorOnlyActor = 0x5a; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x5a; // char : 1
		constexpr auto bReplicates = 0x5b; // char : 1
		constexpr auto bCanBeInCluster = 0x5b; // char : 1
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x5b; // char : 1
		constexpr auto bActorEnableCollision = 0x5c; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x5c; // char : 1
		constexpr auto UpdateOverlapsMethodDuringLevelStreaming = 0x5d; // EActorUpdateOverlapsMethod
		constexpr auto DefaultUpdateOverlapsMethodDuringLevelStreaming = 0x5e; // EActorUpdateOverlapsMethod
		constexpr auto RemoteRole = 0x5f; // ENetRole
		constexpr auto ReplicatedMovement = 0x60; // FRepMovement
		constexpr auto InitialLifeSpan = 0x94; // float
		constexpr auto CustomTimeDilation = 0x98; // float
		constexpr auto AttachmentReplication = 0xa0; // FRepAttachment
		constexpr auto Owner = 0xe0; // AActor*
		constexpr auto NetDriverName = 0xe8; // FName
		constexpr auto Role = 0xf0; // ENetRole
		constexpr auto NetDormancy = 0xf1; // ENetDormancy
		constexpr auto SpawnCollisionHandlingMethod = 0xf2; // ESpawnActorCollisionHandlingMethod
		constexpr auto AutoReceiveInput = 0xf3; // EAutoReceiveInput
		constexpr auto InputPriority = 0xf4; // int32_t
		constexpr auto InputComponent = 0xf8; // UInputComponent*
		constexpr auto NetCullDistanceSquared = 0x100; // float
		constexpr auto NetTag = 0x104; // int32_t
		constexpr auto NetUpdateFrequency = 0x108; // float
		constexpr auto MinNetUpdateFrequency = 0x10c; // float
		constexpr auto NetPriority = 0x110; // float
		constexpr auto Instigator = 0x118; // APawn*
		constexpr auto Children = 0x120; // TArray<AActor*>
		constexpr auto RootComponent = 0x130; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x138; // TArray<AMatineeActor*>
		constexpr auto Layers = 0x150; // TArray<FName>
		constexpr auto ParentComponent = 0x160; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto Tags = 0x168; // TArray<FName>
		constexpr auto OnTakeAnyDamage = 0x178; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x179; // FScriptMulticastDelegate
		constexpr auto OnTakeRadialDamage = 0x17a; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x17b; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x17c; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x17d; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x17e; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x17f; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x180; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x181; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x182; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x183; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x184; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x185; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x186; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x187; // FScriptMulticastDelegate
		constexpr auto InstanceComponents = 0x1e8; // TArray<UActorComponent*>
		constexpr auto BlueprintCreatedComponents = 0x1f8; // TArray<UActorComponent*>
	}

	namespace n_UMM_B_Auction { // : UWidgetBase
		constexpr auto m_mapAuctionTab = 0x2f0; // TMap<EAuctionTabType, UMM_Auction_Tab_Base*>
		constexpr auto m_pBtnReturn = 0x340; // UMirButton*
		constexpr auto m_pBtnClose = 0x348; // UMM_Common_Btn_Symbol*
		constexpr auto m_pTabAuction = 0x350; // UMM_CommonHorizontalTabSet*
		constexpr auto m_pSwitchAuction = 0x358; // UWidgetSwitcher*
		constexpr auto m_arrAuctionTabList = 0x360; // TArray<UMM_Auction_Tab_Base*>
		constexpr auto m_pGuildInfo = 0x370; // UMM_Auction_Guild*
	}

	namespace n_UMM_CharacterSelect { // : UWidgetBase
		constexpr auto Panel_DeleteInfo = 0x2f0; // UPanelWidget*
		constexpr auto Panel_GuildName = 0x2f8; // UPanelWidget*
		constexpr auto Panel_GuildPosition = 0x300; // UPanelWidget*
		constexpr auto Btn_DeleteCharacterCancel = 0x308; // UMM_Common_Btn_Symbol*
		constexpr auto Txt_DeleteTime = 0x310; // UMirTextBlock*
		constexpr auto SelectList = 0x318; // TArray<UMM_CharacterSelect_Slot*>
		constexpr auto Btn_HistoryBack = 0x328; // UMirButton*
		constexpr auto Img_ClassSymbol = 0x330; // UMirImage*
		constexpr auto txt_nickname = 0x338; // UMirTextBlock*
		constexpr auto txt_level = 0x340; // UMirTextBlock*
		constexpr auto Txt_CombatPoint = 0x348; // UMirTextBlock*
		constexpr auto Txt_GuildName = 0x350; // UMirTextBlock*
		constexpr auto Txt_GuildPosition = 0x358; // UMirTextBlock*
		constexpr auto Txt_Position = 0x360; // UMirTextBlock*
		constexpr auto Btn_DeleteCharacter = 0x368; // UMM_Common_Btn*
		constexpr auto Btn_GameStart = 0x370; // UMM_Common_Btn*
		constexpr auto Btn_FaceJob = 0x378; // UMM_Common_Btn*
		constexpr auto Btn_GameOption = 0x380; // UMirButton*
		constexpr auto Btn_VoiceDownload = 0x388; // UMirButton*
		constexpr auto Panel_VoiceDownload = 0x390; // UPanelWidget*
		constexpr auto Panel_VoiceDownload_Btn = 0x398; // UPanelWidget*
		constexpr auto Panel_VoiceDownload_Progress = 0x3a0; // UPanelWidget*
		constexpr auto btn_nft_import = 0x3a8; // UMM_Common_Btn*
		constexpr auto STRING_TIME_DAYS = 0x3b0; // int32_t
		constexpr auto STRING_TIME_HOURS = 0x3b4; // int32_t
		constexpr auto STRING_TIME_MINUTES = 0x3b8; // int32_t
		constexpr auto STRING_TIME_SECONDS = 0x3bc; // int32_t
		constexpr auto STRING_REMAIN_TIME = 0x3c0; // int32_t
		constexpr auto STRING_CHARACTER_DELETE_TITLE = 0x3c4; // int32_t
		constexpr auto STRING_EMPTY_GUILD_NAME = 0x3c8; // int32_t
		constexpr auto m_CharacterDeleteTime = 0x3cc; // int32_t
		constexpr auto m_CurrentDeltaTime = 0x3d0; // float
		constexpr auto m_DayString = 0x3d8; // FString
		constexpr auto m_HourString = 0x3e8; // FString
		constexpr auto m_MinuteString = 0x3f8; // FString
		constexpr auto m_SecondString = 0x408; // FString
		constexpr auto m_Can_Ping = 0x420; // UPanelWidget*
		constexpr auto m_Img_Ping = 0x428; // UMirImage*
		constexpr auto m_Txt_Ping = 0x430; // UMirTextBlock*
	}

	namespace n_AMM_PlayerState { // : APlayerState
		constexpr auto Score = 0x218; // float
		constexpr auto PlayerName = 0x220; // FString
		constexpr auto PlayerId = 0x240; // int32_t
		constexpr auto Ping = 0x244; // char
		constexpr auto bShouldUpdateReplicatedPing = 0x246; // char : 1
		constexpr auto bIsSpectator = 0x246; // char : 1
		constexpr auto bOnlySpectator = 0x246; // char : 1
		constexpr auto bIsABot = 0x246; // char : 1
		constexpr auto bIsInactive = 0x246; // char : 1
		constexpr auto bFromPreviousLevel = 0x246; // char : 1
		constexpr auto StartTime = 0x248; // int32_t
		constexpr auto EngineMessageClass = 0x250; // ULocalMessage*
		constexpr auto SavedNetworkAddress = 0x260; // FString
		constexpr auto UniqueId = 0x270; // FUniqueNetIdRepl
		constexpr auto PawnPrivate = 0x2a0; // APawn*
		constexpr auto PlayerNamePrivate = 0x320; // FString
	}

	namespace n_UMM_Ranking_Reward_Popup { // : UWidgetBase
		constexpr auto m_pBtnClose = 0x2f0; // UMirButton*
		constexpr auto m_pBtnXClose = 0x2f8; // UMM_Common_Btn_Symbol*
		constexpr auto m_pCheckBoxDaily = 0x300; // UMirCheckBox*
		constexpr auto m_pCheckBoxWeekly = 0x308; // UMirCheckBox*
		constexpr auto m_pCheckBoxSeason = 0x310; // UMirCheckBox*
		constexpr auto m_pBtnSeason = 0x318; // UMirButton*
		constexpr auto m_pCheckBoxDailyTwoTab = 0x320; // UMirCheckBox*
		constexpr auto m_pCheckBoxWeeklyTwoTab = 0x328; // UMirCheckBox*
		constexpr auto m_pCanCheckBox = 0x330; // UCanvasPanel*
		constexpr auto m_pCanCheckBoxTwoTab = 0x338; // UCanvasPanel*
		constexpr auto m_pScrollList = 0x340; // UMirScrollBox*
		constexpr auto m_pTxtDaily = 0x348; // UMirTextBlock*
		constexpr auto m_pTxtWeekly = 0x350; // UMirTextBlock*
		constexpr auto m_pTxtSeason = 0x358; // UMirTextBlock*
		constexpr auto m_pTxtDailyTwoTab = 0x360; // UMirTextBlock*
		constexpr auto m_pTxtWeeklyTwoTab = 0x368; // UMirTextBlock*
		constexpr auto m_pCanRewardInfo = 0x370; // UCanvasPanel*
		constexpr auto m_pCanRewardDetailPanel01 = 0x378; // UCanvasPanel*
		constexpr auto m_pCanRewardDetailPanel02 = 0x380; // UCanvasPanel*
		constexpr auto m_pCanRewardDetailPanel03 = 0x388; // UCanvasPanel*
		constexpr auto m_pCanRewardDetailPanel04 = 0x390; // UCanvasPanel*
		constexpr auto m_pRewardDetailItem1 = 0x398; // UMM_Ranking_Reward_Item*
		constexpr auto m_pRewardDetailItem2 = 0x3a0; // UMM_Ranking_Reward_Item*
		constexpr auto m_pRewardDetailItem3 = 0x3a8; // UMM_Ranking_Reward_Item*
		constexpr auto m_pRewardDetailItem4 = 0x3b0; // UMM_Ranking_Reward_Item*
		constexpr auto m_pTxtRewardDetail1 = 0x3b8; // UMirTextBlock*
		constexpr auto m_pTxtRewardDetail2 = 0x3c0; // UMirTextBlock*
		constexpr auto m_pTxtRewardDetail3 = 0x3c8; // UMirTextBlock*
		constexpr auto m_pTxtRewardDetail4 = 0x3d0; // UMirTextBlock*
		constexpr auto m_pBtnRewardDetailClose = 0x3d8; // UMirButton*
		constexpr auto m_RewardDetailPanelList = 0x3e0; // TArray<UCanvasPanel*>
		constexpr auto m_RewardDetailItemList = 0x3f0; // TArray<UMM_Ranking_Reward_Item*>
		constexpr auto m_RewardDetailDescList = 0x400; // TArray<UMirTextBlock*>
	}

	namespace n_UGameplayTask_SpawnActor { // : UGameplayTask
		constexpr auto Success = 0x68; // FScriptMulticastDelegate
		constexpr auto DidNotSpawn = 0x78; // FScriptMulticastDelegate
		constexpr auto ClassToSpawn = 0xa0; // AActor*
	}

	namespace n_AMM_TestCustomizingCameraGameMode { // : AMM_GameModeBase
		constexpr auto m_SubCategory = 0x550; // int32_t
		constexpr auto m_LinkCameraName = 0x558; // FString
	}

	namespace n_UTreeView { // : UListView
		constexpr auto BP_OnGetItemChildren = 0x868; // DelegateProperty
		constexpr auto BP_OnItemExpansionChanged = 0x878; // FScriptMulticastDelegate
	}

	namespace n_UHierarchicalInstancedStaticMeshComponent { // : UInstancedStaticMeshComponent
		constexpr auto SortedInstances = 0x548; // TArray<int32_t>
		constexpr auto NumBuiltInstances = 0x558; // int32_t
		constexpr auto BuiltInstanceBounds = 0x560; // FBox
		constexpr auto UnbuiltInstanceBounds = 0x57c; // FBox
		constexpr auto UnbuiltInstanceBoundsList = 0x598; // TArray<FBox>
		constexpr auto bEnableDensityScaling = 0x5a8; // char : 1
		constexpr auto OcclusionLayerNumNodes = 0x5b0; // int32_t
		constexpr auto CacheMeshExtendedBounds = 0x5b4; // FBoxSphereBounds
		constexpr auto bDisableCollision = 0x5d4; // bool
		constexpr auto InstanceCountToRender = 0x5d8; // int32_t
	}

	namespace n_UInputKeySelector { // : UWidget
		constexpr auto WidgetStyle = 0x108; // FButtonStyle
		constexpr auto TextStyle = 0x380; // FTextBlockStyle
		constexpr auto SelectedKey = 0x5e8; // FInputChord
		constexpr auto Font = 0x608; // FSlateFontInfo
		constexpr auto Margin = 0x658; // FMargin
		constexpr auto ColorAndOpacity = 0x668; // FLinearColor
		constexpr auto KeySelectionText = 0x678; // FText
		constexpr auto NoKeySpecifiedText = 0x690; // FText
		constexpr auto bAllowModifierKeys = 0x6a8; // bool
		constexpr auto bAllowGamepadKeys = 0x6a9; // bool
		constexpr auto EscapeKeys = 0x6b0; // TArray<FKey>
		constexpr auto OnKeySelected = 0x6c0; // FScriptMulticastDelegate
		constexpr auto OnIsSelectingKeyChanged = 0x6d0; // FScriptMulticastDelegate
	}

	namespace n_UFirebaseAuthStateListener { // : UBlueprintAsyncActionBase
		constexpr auto OnEvent = 0x30; // FScriptMulticastDelegate
	}

	namespace n_UNativeWidgetHost { // : UWidget
		constexpr auto Slot = 0x28; // UPanelSlot*
		constexpr auto bIsEnabledDelegate = 0x30; // DelegateProperty
		constexpr auto ToolTipText = 0x40; // FText
		constexpr auto ToolTipTextDelegate = 0x58; // DelegateProperty
		constexpr auto ToolTipWidget = 0x68; // UWidget*
		constexpr auto ToolTipWidgetDelegate = 0x70; // DelegateProperty
		constexpr auto VisibilityDelegate = 0x80; // DelegateProperty
		constexpr auto RenderTransform = 0x90; // FWidgetTransform
		constexpr auto RenderTransformPivot = 0xac; // FVector2D
		constexpr auto bIsVariable = 0xb4; // char : 1
		constexpr auto bCreatedByConstructionScript = 0xb4; // char : 1
		constexpr auto bIsEnabled = 0xb4; // char : 1
		constexpr auto bOverride_Cursor = 0xb4; // char : 1
		constexpr auto AccessibleWidgetData = 0xb8; // USlateAccessibleWidgetData*
		constexpr auto bIsVolatile = 0xc0; // char : 1
		constexpr auto Cursor = 0xc1; // EMouseCursor
		constexpr auto Clipping = 0xc2; // EWidgetClipping
		constexpr auto Visibility = 0xc3; // ESlateVisibility
		constexpr auto RenderOpacity = 0xc4; // float
		constexpr auto Navigation = 0xc8; // UWidgetNavigation*
		constexpr auto FlowDirectionPreference = 0xd0; // EFlowDirectionPreference
		constexpr auto NativeBindings = 0xf8; // TArray<UPropertyBinding*>
	}

	namespace n_UMM_Occupation_KillLog_Slot { // : UWidgetBase
		constexpr auto AnimationStart = 0x2e0; // UWidgetAnimation*
		constexpr auto AnimationEnd = 0x2e8; // UWidgetAnimation*
		constexpr auto Switcher_KillLog = 0x2f0; // UWidgetSwitcher*
		constexpr auto Txt_KillLog01 = 0x2f8; // UMirTextBlock*
		constexpr auto Txt_KillLog02 = 0x300; // UMirTextBlock*
		constexpr auto Txt_KillLog03 = 0x308; // UMirTextBlock*
		constexpr auto TimeHandle_EndLog = 0x310; // FTimerHandle
		constexpr auto TimeHandle_FinishLog = 0x318; // FTimerHandle
		constexpr auto OwnerObjectWeakPtr = 0x320; // TWeakObjectPtr<UMM_Occupation_KillLog>
		constexpr auto m_img_KillLog = 0x328; // UMirImage*
	}

	namespace n_UMM_PopupCharacterSearchEdit { // : UWidgetBase
		constexpr auto m_pTxtTitle = 0x2e0; // UMirTextBlock*
		constexpr auto edit_txt_search = 0x2e8; // UMirEditableText*
		constexpr auto Btn_Cancel = 0x2f0; // UMM_Common_Btn*
		constexpr auto btn_search = 0x2f8; // UMM_Common_Btn*
		constexpr auto btn_close = 0x300; // UMM_Common_Btn_Symbol*
	}

	namespace n_UMM_Slot_Quest { // : UWidgetBase
		constexpr auto m_ReqRewardToStr = 0x2e8; // int32_t
		constexpr auto m_AcceptToStr = 0x2ec; // int32_t
		constexpr auto m_GiveUpToStr = 0x2f0; // int32_t
		constexpr auto m_MoveToStr = 0x2f4; // int32_t
		constexpr auto m_CompleteToStr = 0x2f8; // int32_t
		constexpr auto m_FinishToStr = 0x2fc; // int32_t
		constexpr auto m_CombatToStr = 0x300; // int32_t
		constexpr auto m_MissionAcceptToStr = 0x304; // int32_t
		constexpr auto m_MissionAcceptNumToStr = 0x308; // int32_t
		constexpr auto m_QuestNormalToStr = 0x30c; // int32_t
		constexpr auto m_MissionTitleWithCountToStr = 0x310; // int32_t
		constexpr auto m_EndToStr = 0x314; // int32_t
		constexpr auto m_QuestRepeatToStr = 0x318; // int32_t
		constexpr auto m_DoNotCommitToStr = 0x31c; // int32_t
		constexpr auto m_EnableColor = 0x320; // FLinearColor
		constexpr auto m_DisableColor = 0x330; // FLinearColor
		constexpr auto m_CombatDefaultColor = 0x340; // FLinearColor
		constexpr auto m_PartyToImg = 0x350; // int32_t
		constexpr auto m_RepeatCountToStr = 0x354; // int32_t
		constexpr auto m_RepeatCountCheckToStr = 0x358; // int32_t
		constexpr auto m_Background = 0x360; // UMirImage*
		constexpr auto m_Img_Focus = 0x368; // UMirImage*
		constexpr auto m_Icon = 0x370; // UMirImage*
		constexpr auto m_PartyIcon = 0x378; // UMirImage*
		constexpr auto m_Type = 0x380; // UMirImage*
		constexpr auto m_QuestTitle = 0x388; // UMirTextBlock*
		constexpr auto m_MissionTitle = 0x390; // UMirTextBlock*
		constexpr auto m_CombatPoint = 0x398; // UMirTextBlock*
		constexpr auto m_RewardSlots = 0x3a0; // TArray<UMM_Slot_Material*>
		constexpr auto m_Accept = 0x3b0; // UMM_Common_Btn*
		constexpr auto m_CompleteEffectImg = 0x3b8; // UMirImage*
		constexpr auto m_EndImg = 0x3c0; // UMirImage*
		constexpr auto m_GiveUp = 0x3c8; // UMM_Common_Btn*
		constexpr auto m_EnableQuest = 0x3d0; // UMM_Common_Btn*
		constexpr auto m_BtnGrid = 0x3d8; // UPanelWidget*
		constexpr auto m_BtnsGrid = 0x3e0; // UPanelWidget*
		constexpr auto m_Disable = 0x3e8; // UMirImage*
		constexpr auto m_Img_RepeatIcon = 0x3f0; // UMirImage*
		constexpr auto m_Txt_RepeatCount = 0x3f8; // UMirTextBlock*
		constexpr auto m_Img_Repeat = 0x400; // UMirImage*
		constexpr auto m_Img_RepeatDisable = 0x408; // UMirImage*
		constexpr auto m_Check_RepeatToggle = 0x410; // UMirCheckBox*
		constexpr auto m_Img_RecommendParty = 0x418; // UMirImage*
		constexpr auto m_MainPanel = 0x420; // UPanelWidget*
		constexpr auto m_Btn_Back = 0x428; // UMirButton*
		constexpr auto m_pCommonPartyMember = 0x430; // UMM_Common_PartyMember*
	}

	namespace n_UPawnAction_Sequence { // : UPawnAction
		constexpr auto ActionSequence = 0x98; // TArray<UPawnAction*>
		constexpr auto ChildFailureHandlingMode = 0xa8; // EPawnActionFailHandling
		constexpr auto RecentActionCopy = 0xb0; // UPawnAction*
	}

	namespace n_UMM_B_Mastery { // : UWidgetBase
		constexpr auto timeMasteryLevelUp = 0x300; // float
		constexpr auto mGridPrograssBar = 0x308; // UPanelWidget*
		constexpr auto mProgTraining = 0x310; // UMirProgressBar*
		constexpr auto mTxtTrainingProg = 0x318; // UMirTextBlock*
		constexpr auto mTxtCombatPoint = 0x320; // UMirTextBlock*
		constexpr auto mMasteryLeft = 0x328; // UMM_Mastery_Left*
		constexpr auto mMasterySlotInfo = 0x330; // UMM_Mastery_Slot_Info*
		constexpr auto mMasteryInfo = 0x338; // UMM_Mastery_Info*
		constexpr auto m_Img_RenderTarget = 0x340; // UImage*
		constexpr auto m_TargetPos = 0x348; // UImage*
	}

	namespace n_UMM_HudTargetBuffInfo { // : UWidgetBase
		constexpr auto m_pParentWidget = 0x260; // UWidgetBase*
		constexpr auto m_arChildWidget = 0x268; // TArray<TWeakObjectPtr<UWidgetBase>>
		constexpr auto m_arMirTextBlock = 0x280; // TArray<TWeakObjectPtr<UMirTextBlock>>
		constexpr auto m_arMirRichTextBlock = 0x290; // TArray<TWeakObjectPtr<UMirRichTextBlock>>
		constexpr auto m_arMirEditableText = 0x2a0; // TArray<TWeakObjectPtr<UMirEditableText>>
		constexpr auto m_arMirImage = 0x2b0; // TArray<TWeakObjectPtr<UMirImage>>
	}

	namespace n_UAvoidanceManager { // : UObject
		constexpr auto DefaultTimeToLive = 0x30; // float
		constexpr auto LockTimeAfterAvoid = 0x34; // float
		constexpr auto LockTimeAfterClean = 0x38; // float
		constexpr auto DeltaTimeToPredict = 0x3c; // float
		constexpr auto ArtificialRadiusExpansion = 0x40; // float
		constexpr auto TestHeightDifference = 0x44; // float
		constexpr auto HeightCheckMargin = 0x48; // float
	}

	namespace n_UMaterialExpressionLightmapUVs { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_USkeletalMeshSimplificationSettings { // : UDeveloperSettings
		constexpr auto SkeletalMeshReductionModuleName = 0x38; // FName
	}

	namespace n_UComboBox { // : UWidget
		constexpr auto Items = 0x108; // TArray<UObject*>
		constexpr auto OnGenerateWidgetEvent = 0x118; // DelegateProperty
		constexpr auto bIsFocusable = 0x128; // bool
	}

	namespace n_UFirebaseGoogleCredential { // : UBlueprintAsyncActionBase
		constexpr auto OnComplete = 0x30; // FScriptMulticastDelegate
	}

	namespace n_UImage { // : UWidget
		constexpr auto Brush = 0x108; // FSlateBrush
		constexpr auto BrushDelegate = 0x190; // DelegateProperty
		constexpr auto ColorAndOpacity = 0x1a0; // FLinearColor
		constexpr auto ColorAndOpacityDelegate = 0x1b0; // DelegateProperty
		constexpr auto bFlipForRightToLeftFlowDirection = 0x1c0; // bool
		constexpr auto OnMouseButtonDownEvent = 0x1c4; // DelegateProperty
	}

	namespace n_UMovieSceneMarginTrack { // : UMovieScenePropertyTrack
		constexpr auto SectionToKey = 0x58; // UMovieSceneSection*
		constexpr auto PropertyName = 0x60; // FName
		constexpr auto PropertyPath = 0x68; // FString
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_USteamNetDriver { // : UIpNetDriver
		constexpr auto LogPortUnreach = 0x708; // char : 1
		constexpr auto AllowPlayerPortUnreach = 0x708; // char : 1
		constexpr auto MaxPortCountToTry = 0x70c; // uint32_t
		constexpr auto ServerDesiredSocketReceiveBufferBytes = 0x71c; // uint32_t
		constexpr auto ServerDesiredSocketSendBufferBytes = 0x720; // uint32_t
		constexpr auto ClientDesiredSocketReceiveBufferBytes = 0x724; // uint32_t
		constexpr auto ClientDesiredSocketSendBufferBytes = 0x728; // uint32_t
		constexpr auto MaxSecondsInReceive = 0x730; // double
		constexpr auto NbPacketsBetweenReceiveTimeTest = 0x738; // int32_t
	}

	namespace n_UMM_Condition_info { // : UWidgetBase
		constexpr auto m_AchieveName = 0x2f0; // UMirTextBlock*
		constexpr auto m_AchieveDesc = 0x2f8; // UMirTextBlock*
		constexpr auto m_AchievBar = 0x300; // UMirProgressBar*
		constexpr auto m_AchievePercent = 0x308; // UMirTextBlock*
		constexpr auto m_Icon = 0x310; // UMirImage*
	}

	namespace n_UMM_GuildMemberGradeList { // : UWidgetBase
		constexpr auto m_Txt_JobName = 0x2f0; // UTextBlock*
		constexpr auto m_Txt_Level = 0x2f8; // UTextBlock*
		constexpr auto m_Img_Class = 0x300; // UImage*
		constexpr auto m_Txt_Nickname = 0x308; // UTextBlock*
		constexpr auto m_Txt_Point = 0x310; // UTextBlock*
		constexpr auto m_Txt_Online = 0x318; // UTextBlock*
		constexpr auto m_Img_Selected = 0x320; // UImage*
		constexpr auto m_Btn_Main = 0x328; // UButton*
	}

	namespace n_UMM_Slot_RelationQuest { // : UWidgetBase
		constexpr auto m_DisableColor = 0x2e8; // FLinearColor
		constexpr auto m_OnGoingColor = 0x2f8; // FLinearColor
		constexpr auto m_EndColor = 0x308; // FLinearColor
		constexpr auto m_Img_Frame = 0x318; // UMirImage*
		constexpr auto m_Txt_Title = 0x320; // UMirTextBlock*
		constexpr auto m_Btn_Open = 0x328; // UMirButton*
		constexpr auto m_Img_Indicator = 0x330; // UMirImage*
		constexpr auto m_Img_Complete = 0x338; // UMirImage*
		constexpr auto m_Txt_Percent = 0x340; // UMirTextBlock*
		constexpr auto m_RARE_QUEST_ICON = 0x348; // int32_t
		constexpr auto m_HERO_QUEST_ICON = 0x34c; // int32_t
		constexpr auto m_LEGEND_QUEST_ICON = 0x350; // int32_t
	}

	namespace n_UAREnvironmentCaptureProbe { // : UARTrackedGeometry
		constexpr auto EnvironmentCaptureTexture = 0xf8; // UAREnvironmentCaptureProbeTexture*
	}

	namespace n_UInterpTrackVectorBase { // : UInterpTrack
		constexpr auto VectorTrack = 0x70; // FInterpCurveVector
		constexpr auto CurveTension = 0x88; // float
	}

	namespace n_UMM_GuildIconSlot { // : UWidgetBase
		constexpr auto guild_icon = 0x2e0; // UMM_Guild_Icon* [0x2]
	}

	namespace n_UMaterialExpressionParticleRandom { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UParticleModuleLocation { // : UParticleModuleLocationBase
		constexpr auto StartLocation = 0x30; // FRawDistributionVector
		constexpr auto DistributeOverNPoints = 0x78; // float
		constexpr auto DistributeThreshold = 0x7c; // float
	}

	namespace n_UMovieSceneIntegerSection { // : UMovieSceneSection
		constexpr auto IntegerCurve = 0xe0; // FMovieSceneIntegerChannel
	}

	namespace n_ULevelStreamingAlwaysLoaded { // : ULevelStreaming
		constexpr auto WorldAsset = 0x28; // UWorld*
		constexpr auto PackageNameToLoad = 0x50; // FName
		constexpr auto LODPackageNames = 0x58; // TArray<FName>
		constexpr auto LevelTransform = 0x80; // FTransform
		constexpr auto LevelLODIndex = 0xb0; // int32_t
		constexpr auto StreamingPriority = 0xb4; // int32_t
		constexpr auto bShouldBeVisible = 0xba; // char : 1
		constexpr auto bShouldBeLoaded = 0xba; // char : 1
		constexpr auto bLocked = 0xba; // char : 1
		constexpr auto bIsStatic = 0xba; // char : 1
		constexpr auto bShouldBlockOnLoad = 0xba; // char : 1
		constexpr auto bShouldBlockOnUnload = 0xbb; // char : 1
		constexpr auto bDisableDistanceStreaming = 0xbb; // char : 1
		constexpr auto bDrawOnLevelStatusMap = 0xbb; // char : 1
		constexpr auto LevelColor = 0xbc; // FLinearColor
		constexpr auto EditorStreamingVolumes = 0xd0; // TArray<ALevelStreamingVolume*>
		constexpr auto MinTimeBetweenVolumeUnloadRequests = 0xe0; // float
		constexpr auto OnLevelLoaded = 0xe8; // FScriptMulticastDelegate
		constexpr auto OnLevelUnloaded = 0xf8; // FScriptMulticastDelegate
		constexpr auto OnLevelShown = 0x108; // FScriptMulticastDelegate
		constexpr auto OnLevelHidden = 0x118; // FScriptMulticastDelegate
		constexpr auto LoadedLevel = 0x128; // ULevel*
		constexpr auto PendingUnloadLevel = 0x130; // ULevel*
	}

	namespace n_UMM_PetQuickTab { // : UWidgetBase
		constexpr auto m_arQuickBtn = 0x2f0; // UMM_PetQuickSlotBtn* [0x5]
	}

	namespace n_UMaterialFunction { // : UMaterialFunctionInterface
		constexpr auto Description = 0x40; // FString
		constexpr auto FunctionExpressions = 0x50; // TArray<UMaterialExpression*>
		constexpr auto bExposeToLibrary = 0x60; // char : 1
		constexpr auto bPrefixParameterNames = 0x60; // char : 1
		constexpr auto bReentrantFlag = 0x60; // char : 1
	}

	namespace n_UQuitMatchCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto OnFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_ALevelSequenceAirWalkActor { // : AActor
		constexpr auto m_NewSectionName = 0x218; // FString
		constexpr auto m_OldSectionName = 0x228; // FString
	}

	namespace n_UMM_Relation_RewardInfo_Slot { // : UWidgetBase
		constexpr auto m_SlotMaterialReward = 0x2e8; // UMM_Slot_Material*
		constexpr auto m_TxtItemName = 0x2f0; // UMirTextBlock*
		constexpr auto m_TxtItemCount = 0x2f8; // UMirTextBlock*
	}

	namespace n_AMM_PlayerController { // : APlayerController
		constexpr auto m_MouseWheelValue = 0x568; // float
		constexpr auto PC = 0x570; // AMM_MainPC*
	}

	namespace n_USoundGroups { // : UObject
		constexpr auto SoundGroupProfiles = 0x28; // TArray<FSoundGroup>
	}

	namespace n_UMM_Popup_Occupation_Target { // : UWidgetBase
		constexpr auto Widget_GuildIcon = 0x2f0; // UMM_GuildIcon*
		constexpr auto Widget_WinTargetHP = 0x2f8; // UMM_Common_ProgressBar*
		constexpr auto btn_close = 0x300; // UMM_Common_Btn_Symbol*
		constexpr auto Btn_Ok = 0x308; // UMM_Common_Btn*
		constexpr auto Btn_Background = 0x310; // UMirButton*
		constexpr auto Switcher_GuildInfo = 0x318; // UWidgetSwitcher*
		constexpr auto Txt_Title = 0x320; // UMirTextBlock*
		constexpr auto Txt_OccupationPeriod = 0x328; // UMirTextBlock*
		constexpr auto Txt_Description_2 = 0x330; // UMirTextBlock*
		constexpr auto Switcher_ContentInfo = 0x338; // UWidgetSwitcher*
		constexpr auto Txt_NextBattleRemainTime = 0x340; // UMirTextBlock*
		constexpr auto Txt_BattleEndRemainTime = 0x348; // UMirTextBlock*
		constexpr auto Btn_GuildInfo = 0x350; // UMirButton*
		constexpr auto Can_ContentMain = 0x358; // UMirCanvasPanel*
		constexpr auto Can_ContentBattle = 0x360; // UMirCanvasPanel*
		constexpr auto Can_TimePanel = 0x368; // UMirCanvasPanel*
		constexpr auto Img_HP_Gauge = 0x370; // UImage*
		constexpr auto Mat_HP_Gauge = 0x378; // UMaterialInstanceDynamic*
		constexpr auto Txt_BattleRemainTime = 0x380; // UMirRichTextBlock*
		constexpr auto Txt_BattleStatus = 0x388; // UMirRichTextBlock*
		constexpr auto Txt_TargetHP = 0x390; // UMirTextBlock*
		constexpr auto Txt_BattleInfo = 0x398; // UMirRichTextBlock*
		constexpr auto Txt_TakeOverRemainTime = 0x3a0; // UMirTextBlock*
		constexpr auto Effect_Hit = 0x3a8; // UEffectWidgetBase*
	}

	namespace n_UMM_Popup_Skill_ItemExchange { // : UWidgetBase
		constexpr auto m_Txt_Title = 0x2f0; // UMirTextBlock*
		constexpr auto m_TargetSmallSlot = 0x2f8; // UMM_Slot_Material*
		constexpr auto m_RT_TargetSmallName = 0x300; // UMirRichTextBlock*
		constexpr auto m_Prog_Curr = 0x308; // UMirProgressBar*
		constexpr auto m_Prog_Next = 0x310; // UMirProgressBar*
		constexpr auto m_ExchangeSlot = 0x318; // UMM_Slot_Material*
		constexpr auto m_Txt_ExchangeName = 0x320; // UMirTextBlock*
		constexpr auto m_Txt_ExchangeCount = 0x328; // UMirTextBlock*
		constexpr auto m_TargetSlot = 0x330; // UMM_Slot_Material*
		constexpr auto m_Txt_TargetName = 0x338; // UMirTextBlock*
		constexpr auto m_Txt_TargetCount = 0x340; // UMirTextBlock*
		constexpr auto m_Make_Slider = 0x348; // UMM_Item_Make_Slider*
		constexpr auto m_CB_Close = 0x350; // UMM_Common_Btn_Symbol*
		constexpr auto m_CB_Exchange = 0x358; // UMM_Common_Btn*
		constexpr auto m_CB_Cancel = 0x360; // UMM_Common_Btn*
	}

	namespace n_UMovieSceneSlomoTrack { // : UMovieSceneFloatTrack
		constexpr auto SectionToKey = 0x58; // UMovieSceneSection*
		constexpr auto PropertyName = 0x60; // FName
		constexpr auto PropertyPath = 0x68; // FString
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_AMM_NetPC { // : AMM_PC
		constexpr auto m_bPoolingObject = 0xb98; // bool
	}

	namespace n_UMM_PopupGuildNameChangeEdit { // : UWidgetBase
		constexpr auto edit_txt_guild_name = 0x2e0; // UMirEditableText*
		constexpr auto Btn_Cancel = 0x2e8; // UMM_Common_Btn*
		constexpr auto btn_close = 0x2f0; // UMM_Common_Btn_Symbol*
		constexpr auto btn_change = 0x2f8; // UMM_Common_Btn_Cost*
	}

	namespace n_UMM_AbilityState_Item { // : UWidgetBase
		constexpr auto IsShowOptionPassive = 0x2f0; // bool
		constexpr auto IsModifiedStats = 0x2f1; // bool
		constexpr auto Panel_NewOption = 0x2f8; // UPanelWidget*
		constexpr auto Panel_LevelUp = 0x300; // UPanelWidget*
		constexpr auto Panel_MaxLevel = 0x308; // UPanelWidget*
		constexpr auto Txt_Title = 0x310; // UMirTextBlock*
		constexpr auto Txt_BeforeValue = 0x318; // UMirTextBlock*
		constexpr auto Txt_AfterValue = 0x320; // UMirTextBlock*
		constexpr auto ComparePointWidget = 0x328; // UMM_Common_ComparePoint*
		constexpr auto Img_Deco_Arrow = 0x330; // UMirImage*
		constexpr auto Img_Option_Grade = 0x338; // UMirImage*
		constexpr auto Img_Option_Icon = 0x340; // UMirImage*
		constexpr auto Btn_Main = 0x348; // UMirButton*
		constexpr auto m_OptionIndex = 0x350; // int32_t
		constexpr auto m_IsRandomOption = 0x354; // bool
		constexpr auto m_IsEqupipped = 0x355; // bool
	}

	namespace n_UMaterialExpressionVertexColor { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UMM_Common_ComparePoint { // : UWidgetBase
		constexpr auto Img_Arrow = 0x2f0; // UMirImage*
		constexpr auto Txt_LeftBlock = 0x2f8; // UMirTextBlock*
		constexpr auto Txt_RightBlock = 0x300; // UMirTextBlock*
		constexpr auto Txt_Point = 0x308; // UMirTextBlock*
	}

	namespace n_UMaterialExpressionShadingPathSwitch { // : UMaterialExpression
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto Inputs = 0x54; // FExpressionInput [0x3]
	}

	namespace n_UMaterialExpressionSkyAtmosphereLightDiskLuminance { // : UMaterialExpression
		constexpr auto LightIndex = 0x40; // int32_t
	}

	namespace n_UMM_CrowdControlText { // : UWidgetBase
		constexpr auto m_pAnimUp = 0x2e0; // UWidgetAnimation*
		constexpr auto m_pAnimDown = 0x2e8; // UWidgetAnimation*
		constexpr auto WidgetAnim_BuffUp = 0x2f0; // UWidgetAnimation*
		constexpr auto WidgetAnim_BuffUp_Pet = 0x2f8; // UWidgetAnimation*
		constexpr auto WidgetAnim_BuffDown = 0x300; // UWidgetAnimation*
		constexpr auto WidgetAnim_CCState = 0x308; // UWidgetAnimation*
		constexpr auto m_vWidgetSIze = 0x310; // FVector2D
		constexpr auto m_vOffset = 0x318; // FVector2D
		constexpr auto m_iFriendlyGoodTextColorID = 0x320; // int32_t
		constexpr auto m_iFriendlyBadTextColorID = 0x324; // int32_t
		constexpr auto m_iEnemyBadTextColorID = 0x328; // int32_t
		constexpr auto Offset_CCState = 0x32c; // FVector2D
		constexpr auto Offset_My_CCState = 0x334; // FVector2D
		constexpr auto Offset_My_Buff = 0x33c; // FVector2D
		constexpr auto Offset_My_Debuff = 0x344; // FVector2D
		constexpr auto Offset_Other_CCState = 0x34c; // FVector2D
		constexpr auto Offset_Other_Buff = 0x354; // FVector2D
		constexpr auto Offset_Other_Debuff = 0x35c; // FVector2D
		constexpr auto Img_Icon = 0x368; // UMirImage*
		constexpr auto Txt_CrowdControl = 0x370; // UTextBlock*
		constexpr auto Img_CrowdControl = 0x378; // UMirImage*
	}

	namespace n_UFontImportOptions { // : UObject
		constexpr auto Data = 0x28; // FFontImportOptionsData
	}

	namespace n_UMM_Dungeon_Shop { // : UWidgetBase
		constexpr auto m_Txt_GoodsRecord = 0x2f8; // UMirTextBlock*
		constexpr auto m_Btn_Tooltip = 0x300; // UMM_Common_ToolTipBtn*
		constexpr auto m_ScrollBox = 0x308; // UMirScrollBox*
		constexpr auto m_Txt_Title = 0x310; // UMirTextBlock*
		constexpr auto m_TargetSlot = 0x318; // UMM_Slot_Inventory*
		constexpr auto m_Txt_ItemDesc = 0x320; // UMirTextBlock*
		constexpr auto m_Txt_ItemName = 0x328; // UMirTextBlock*
		constexpr auto m_ItemMakeSlider = 0x330; // UMM_Item_Make_Slider*
		constexpr auto m_Img_CostIcon = 0x338; // UMirImage*
		constexpr auto m_Txt_Cost = 0x340; // UMirTextBlock*
		constexpr auto m_CB_Buy = 0x348; // UMM_Common_Btn*
	}

	namespace n_UMM_Popup_Auction_Regist { // : UWidgetBase
		constexpr auto m_pItemInfo = 0x2e8; // UMM_Popup_Auction_ItemInfoSlot*
		constexpr auto m_pTxtTerms = 0x2f0; // UMirTextBlock*
		constexpr auto m_pTxtPrice = 0x2f8; // UMirTextBlock*
		constexpr auto m_pTxtCommision = 0x300; // UMirTextBlock*
		constexpr auto m_pTxtTotalPrice = 0x308; // UMirTextBlock*
		constexpr auto m_pBtnClose = 0x310; // UMM_Common_Btn_Symbol*
		constexpr auto m_pBtnCancle = 0x318; // UMM_Common_Btn*
		constexpr auto m_pBtnOk = 0x320; // UMM_Common_Btn*
	}

	namespace n_UPawnAction_Repeat { // : UPawnAction
		constexpr auto ActionToRepeat = 0x98; // UPawnAction*
		constexpr auto RecentActionCopy = 0xa0; // UPawnAction*
		constexpr auto ChildFailureHandlingMode = 0xa8; // EPawnActionFailHandling
	}

	namespace n_UBeamAnimNotifyState { // : UAnimNotifyState
		constexpr auto EffectId = 0x30; // int32_t
	}

	namespace n_UMirRichTextBlock { // : URichTextBlock
		constexpr auto m_ResaveColorID = 0x678; // int32_t
		constexpr auto m_MyDefaultStyle = 0x680; // FTextBlockStyle
		constexpr auto m_bDefaultShadow = 0x8e8; // bool
		constexpr auto m_bUseAdjustFontSize = 0x8e9; // bool
		constexpr auto m_StringTableType = 0x8ea; // EStringTableType
		constexpr auto m_StringTableID = 0x8ec; // int32_t
	}

	namespace n_UMM_Popup_GuildCommandMark { // : UWidgetBase
		constexpr auto m_TxtTargetName = 0x2e0; // UMirTextBlock*
		constexpr auto m_MarkSlots = 0x2e8; // TArray<UMM_GuildCommandMark_Slot*>
		constexpr auto m_BtnClose = 0x2f8; // UMirButton*
	}

	namespace n_ALightmassPortal { // : AActor
		constexpr auto PortalComponent = 0x218; // ULightmassPortalComponent*
	}

	namespace n_UMM_TotalMenu_MainSlot { // : UMM_TotalMenu_SlotBase
		constexpr auto m_iMainSlot_MenuID = 0x308; // int32_t
		constexpr auto m_Img_IconBg = 0x310; // UMirImage*
		constexpr auto m_Img_Icon = 0x318; // UMirImage*
		constexpr auto m_Img_Selected_Icon = 0x320; // UMirImage*
		constexpr auto m_Txt_Name = 0x328; // UMirTextBlock*
		constexpr auto m_Img_Selected_Name = 0x330; // UMirImage*
		constexpr auto m_Btn_Main = 0x338; // UMirButton*
		constexpr auto m_Grid_OpenEffect = 0x340; // UPanelWidget*
		constexpr auto m_Img_Indicator = 0x348; // UMirImage*
		constexpr auto m_OpenEffect = 0x350; // UEffectWidgetBase*
	}

	namespace n_ASkeletalEffect { // : AActor
		constexpr auto m_pSkelMesh = 0x218; // USkeletalMeshComponent*
	}

	namespace n_UParticleModuleAccelerationOverLifetime { // : UParticleModuleAccelerationBase
		constexpr auto AccelOverLife = 0x38; // FRawDistributionVector
	}

	namespace n_UMirWidgetData { // : UDataAsset
		constexpr auto Img_Main_Positive = 0x30; // UObject*
		constexpr auto Img_Main_Negative = 0x38; // UObject*
		constexpr auto Img_Main_Unable = 0x40; // UObject*
		constexpr auto Img_Main_Shadow = 0x48; // UObject*
		constexpr auto m_Main_Practice1_AbleColor = 0x50; // FLinearColor
		constexpr auto m_Main_Practice2_AbleColor = 0x60; // FLinearColor
		constexpr auto m_Main_Margin = 0x70; // FMargin
		constexpr auto Img_Sub_Positive = 0x80; // UObject*
		constexpr auto Img_Sub_Negative = 0x88; // UObject*
		constexpr auto Img_Sub_Practice_2 = 0x90; // UObject*
		constexpr auto Img_Sub_Practice_3 = 0x98; // UObject*
		constexpr auto Img_Sub_Unseal = 0xa0; // UObject*
		constexpr auto Img_Sub_Positive_Glow = 0xa8; // UObject*
		constexpr auto Img_Sub_Positive_Gold = 0xb0; // UObject*
		constexpr auto Img_Sub_Positive_Unable = 0xb8; // UObject*
		constexpr auto Img_Sub_Negative_Unable = 0xc0; // UObject*
		constexpr auto Img_Sub_Practice_1_Unable = 0xc8; // UObject*
		constexpr auto Img_Sub_Practice_2_Unable = 0xd0; // UObject*
		constexpr auto Img_Sub_Unseal_Unable = 0xd8; // UObject*
		constexpr auto Img_Sub_Positive_Glow_Unable = 0xe0; // UObject*
		constexpr auto Img_Sub_Positive_Gold_Unable = 0xe8; // UObject*
		constexpr auto m_Sub_Positive_AbleColor = 0xf0; // FLinearColor
		constexpr auto m_Sub_Negative_AbleColor = 0x100; // FLinearColor
		constexpr auto m_Sub_Practice1_AbleColor = 0x110; // FLinearColor
		constexpr auto m_Sub_Practice2_AbleColor = 0x120; // FLinearColor
		constexpr auto m_Sub_Unseal_AbleColor = 0x130; // FLinearColor
		constexpr auto m_Sub_Positive_Glow_AbleColor = 0x140; // FLinearColor
		constexpr auto m_Sub_Positive_Gold_AbleColor = 0x150; // FLinearColor
		constexpr auto m_Sub_Positive_UnableColor = 0x160; // FLinearColor
		constexpr auto m_Sub_Negative_UnableColor = 0x170; // FLinearColor
		constexpr auto m_Sub_Practice1_UnableColor = 0x180; // FLinearColor
		constexpr auto m_Sub_Practice2_UnableColor = 0x190; // FLinearColor
		constexpr auto m_Sub_Unseal_UnableColor = 0x1a0; // FLinearColor
		constexpr auto m_Sub_Positive_Glow_UnableColor = 0x1b0; // FLinearColor
		constexpr auto m_Sub_Positive_Gold_UnableColor = 0x1c0; // FLinearColor
		constexpr auto m_Sub_Margin = 0x1d0; // FMargin
		constexpr auto m_fGlowSpeed = 0x1e0; // float
		constexpr auto Img_Other_Rect_2 = 0x1e8; // UObject*
		constexpr auto Img_Other_Rect_3 = 0x1f0; // UObject*
		constexpr auto Img_Other_Circle_2 = 0x1f8; // UObject*
		constexpr auto Img_Other_Circle_3 = 0x200; // UObject*
		constexpr auto Img_Other_Round_2 = 0x208; // UObject*
		constexpr auto Img_Party_2 = 0x210; // UObject*
		constexpr auto m_Circle_Margin = 0x218; // FMargin
		constexpr auto m_CommonBtnStyle = 0x228; // FButtonStyle
		constexpr auto m_CommonBtnClickSound_Able = 0x4a0; // FSlateSound
		constexpr auto m_CommonBtnClickSound_Unable = 0x4b8; // FSlateSound
		constexpr auto m_fCommonBtnUnableOpacity = 0x4d0; // float
		constexpr auto m_Default_Margin = 0x4d4; // FMargin
		constexpr auto m_Default_AbleColor = 0x4e4; // FLinearColor
		constexpr auto m_fCommonTabTitleFontSize_Default = 0x4f4; // int32_t
		constexpr auto m_fCommonTabTitleFontSize_Selected = 0x4f8; // int32_t
	}

	namespace n_UParticleModuleCollision { // : UParticleModuleCollisionBase
		constexpr auto DampingFactor = 0x30; // FRawDistributionVector
		constexpr auto DampingFactorRotation = 0x78; // FRawDistributionVector
		constexpr auto MaxCollisions = 0xc0; // FRawDistributionFloat
		constexpr auto CollisionCompletionOption = 0xf0; // EParticleCollisionComplete
		constexpr auto CollisionTypes = 0xf8; // TArray<EObjectTypeQuery>
		constexpr auto bApplyPhysics = 0x110; // char : 1
		constexpr auto bIgnoreTriggerVolumes = 0x110; // char : 1
		constexpr auto ParticleMass = 0x118; // FRawDistributionFloat
		constexpr auto DirScalar = 0x148; // float
		constexpr auto bPawnsDoNotDecrementCount = 0x14c; // char : 1
		constexpr auto bOnlyVerticalNormalsDecrementCount = 0x14c; // char : 1
		constexpr auto VerticalFudgeFactor = 0x150; // float
		constexpr auto DelayAmount = 0x158; // FRawDistributionFloat
		constexpr auto bDropDetail = 0x188; // char : 1
		constexpr auto bCollideOnlyIfVisible = 0x188; // char : 1
		constexpr auto bIgnoreSourceActor = 0x188; // char : 1
		constexpr auto MaxCollisionDistance = 0x18c; // float
	}

	namespace n_USubUVAnimation { // : UObject
		constexpr auto SubUVTexture = 0x28; // UTexture2D*
		constexpr auto SubImages_Horizontal = 0x30; // int32_t
		constexpr auto SubImages_Vertical = 0x34; // int32_t
		constexpr auto BoundingMode = 0x38; // ESubUVBoundingVertexCount
		constexpr auto OpacitySourceMode = 0x39; // EOpacitySourceMode
		constexpr auto AlphaThreshold = 0x3c; // float
	}

	namespace n_UMM_Costume_SlideBar { // : UWidgetBase
		constexpr auto SLIDER_MAX_SIZE = 0x2f0; // float
		constexpr auto SliderCorrectionValue = 0x2f4; // float
		constexpr auto SlideBar_Channel = 0x2f8; // ESLIDEBAR_TYPE
		constexpr auto Btn_Minus = 0x300; // UMirButton*
		constexpr auto Btn_Plus = 0x308; // UMirButton*
		constexpr auto UIDrag_Slide = 0x310; // UMM_UI_Drag*
		constexpr auto Txt_Value = 0x318; // UMirTextBlock*
		constexpr auto m_SliderBG_Parent = 0x320; // UCanvasPanel*
		constexpr auto m_SliderBG = 0x328; // USpacer*
		constexpr auto m_SliderValue = 0x330; // int32_t
		constexpr auto m_ControlPosX = 0x334; // float
		constexpr auto m_ControlRatio = 0x338; // float
		constexpr auto AddBtnValue = 0x33c; // int32_t
		constexpr auto AddValueUpdateTime = 0x340; // float
		constexpr auto Btn_Pressed_Down = 0x344; // bool
		constexpr auto Btn_Pressed_Up = 0x345; // bool
		constexpr auto STR_PERCENT = 0x348; // int32_t
	}

	namespace n_UMM_Party_LeftTab { // : UWidgetBase
		constexpr auto m_pParentWidget = 0x260; // UWidgetBase*
		constexpr auto m_arChildWidget = 0x268; // TArray<TWeakObjectPtr<UWidgetBase>>
		constexpr auto m_arMirTextBlock = 0x280; // TArray<TWeakObjectPtr<UMirTextBlock>>
		constexpr auto m_arMirRichTextBlock = 0x290; // TArray<TWeakObjectPtr<UMirRichTextBlock>>
		constexpr auto m_arMirEditableText = 0x2a0; // TArray<TWeakObjectPtr<UMirEditableText>>
		constexpr auto m_arMirImage = 0x2b0; // TArray<TWeakObjectPtr<UMirImage>>
	}

	namespace n_UGeometryCacheTrack { // : UObject
		constexpr auto Duration = 0x28; // float
	}

	namespace n_UAnimationSharingSetup { // : UObject
		constexpr auto SkeletonSetups = 0x28; // TArray<FPerSkeletonAnimationSharingSetup>
		constexpr auto ScalabilitySettings = 0x38; // FAnimationSharingScalability
	}

	namespace n_UMM_Popup_Restore_Item { // : UWidgetBase
		constexpr auto m_pBtnClose = 0x2f0; // UMM_Common_Btn_Symbol*
		constexpr auto m_pBtnMove = 0x2f8; // UMM_Common_Btn*
		constexpr auto m_pScrollList = 0x300; // UMirScrollBox*
	}

	namespace n_UMM_Slot_Material_Item { // : UMM_Slot_Base
		constexpr auto AutoUpdateItemName = 0x3f8; // bool
		constexpr auto m_DisableColor = 0x3fc; // FLinearColor
		constexpr auto m_ImgPlus = 0x410; // UMirImage*
		constexpr auto m_TxtItemName = 0x418; // UMirTextBlock*
		constexpr auto m_TxtCount = 0x420; // UMirTextBlock*
		constexpr auto m_BtnUnmount = 0x428; // UMM_Common_Btn_Symbol*
		constexpr auto m_Img_Attribution = 0x430; // UMirImage*
		constexpr auto m_Img_UserLock = 0x438; // UMirImage*
	}

	namespace n_UMM_PopupGuildGiveMemberSlot { // : UWidgetBase
		constexpr auto txt_grade = 0x2e0; // UMirTextBlock*
		constexpr auto img_online = 0x2e8; // UMirImage*
		constexpr auto Portrait = 0x2f0; // UMM_GuildMemberPortrait*
		constexpr auto txt_nickname = 0x2f8; // UMirTextBlock*
		constexpr auto txt_custom_title = 0x300; // UMirTextBlock*
		constexpr auto txt_level = 0x308; // UMirTextBlock*
		constexpr auto img_class = 0x310; // UMirImage*
		constexpr auto txt_class = 0x318; // UMirTextBlock*
		constexpr auto txt_combat_power = 0x320; // UMirTextBlock*
		constexpr auto txt_daily_contribution = 0x328; // UMirTextBlock*
		constexpr auto cb_selected = 0x330; // UMirCheckBox*
	}

	namespace n_UPlayer { // : UObject
		constexpr auto PlayerController = 0x30; // APlayerController*
		constexpr auto CurrentNetSpeed = 0x38; // int32_t
		constexpr auto ConfiguredInternetSpeed = 0x3c; // int32_t
		constexpr auto ConfiguredLanSpeed = 0x40; // int32_t
	}

	namespace n_AProjectileMeteor { // : AProjectileBase
		constexpr auto m_pCollSphereComp = 0x218; // USphereComponent*
		constexpr auto m_pShotParticleComp = 0x220; // UParticleSystemComponent*
		constexpr auto m_pImpactParticleComp = 0x228; // UParticleSystemComponent*
	}

	namespace n_ANavSystemConfigOverride { // : AActor
		constexpr auto NavigationSystemConfig = 0x218; // UNavigationSystemConfig*
		constexpr auto OverridePolicy = 0x220; // ENavSystemOverridePolicy
		constexpr auto bLoadOnClient = 0x221; // char : 1
	}

	namespace n_AHiddenPathManagerActor { // : AActor
		constexpr auto m_pPortalTrigger1 = 0x218; // AMyPortalTrigger*
		constexpr auto m_pPortalTrigger2 = 0x220; // AMyPortalTrigger*
		constexpr auto m_pTownAlarmTrigger1 = 0x228; // ATownAlarmTrigger*
		constexpr auto m_pSafetyAreaArray = 0x230; // TArray<ASafetyArea*>
		constexpr auto m_HiddenPathType = 0x240; // int32_t
	}

	namespace n_UStreamableRenderAsset { // : UObject
		constexpr auto ForceMipLevelsToBeResidentTimestamp = 0x28; // double
		constexpr auto NumCinematicMipLevels = 0x30; // int32_t
		constexpr auto StreamingIndex = 0x34; // int32_t
		constexpr auto CachedCombinedLODBias = 0x38; // int32_t
		constexpr auto CachedNumResidentLODs = 0x3c; // char
		constexpr auto bCachedReadyForStreaming = 0x3d; // char : 1
		constexpr auto NeverStream = 0x3d; // char : 1
		constexpr auto bGlobalForceMipLevelsToBeResident = 0x3d; // char : 1
		constexpr auto bIsStreamable = 0x3d; // char : 1
		constexpr auto bHasStreamingUpdatePending = 0x3d; // char : 1
		constexpr auto bForceMiplevelsToBeResident = 0x3d; // char : 1
		constexpr auto bIgnoreStreamingMipBias = 0x3d; // char : 1
		constexpr auto bUseCinematicMipLevels = 0x3d; // char : 1
	}

	namespace n_UModularSynthComponent { // : USynthComponent
		constexpr auto VoiceCount = 0x650; // int32_t
	}

	namespace n_UInterpTrackMove { // : UInterpTrack
		constexpr auto PosTrack = 0x70; // FInterpCurveVector
		constexpr auto EulerTrack = 0x88; // FInterpCurveVector
		constexpr auto LookupTrack = 0xa0; // FInterpLookupTrack
		constexpr auto LookAtGroupName = 0xb0; // FName
		constexpr auto LinCurveTension = 0xb8; // float
		constexpr auto AngCurveTension = 0xbc; // float
		constexpr auto bUseQuatInterpolation = 0xc0; // char : 1
		constexpr auto bShowArrowAtKeys = 0xc0; // char : 1
		constexpr auto bDisableMovement = 0xc0; // char : 1
		constexpr auto bShowTranslationOnCurveEd = 0xc0; // char : 1
		constexpr auto bShowRotationOnCurveEd = 0xc0; // char : 1
		constexpr auto bHide3DTrack = 0xc0; // char : 1
		constexpr auto RotMode = 0xc4; // EInterpTrackMoveRotMode
	}

	namespace n_UMovieSceneSection { // : UMovieSceneSignedObject
		constexpr auto EvalOptions = 0x50; // FMovieSceneSectionEvalOptions
		constexpr auto Easing = 0x58; // FMovieSceneEasingSettings
		constexpr auto SectionRange = 0x90; // FMovieSceneFrameRange
		constexpr auto PreRollFrames = 0xa0; // FFrameNumber
		constexpr auto PostRollFrames = 0xa4; // FFrameNumber
		constexpr auto RowIndex = 0xa8; // int32_t
		constexpr auto OverlapPriority = 0xac; // int32_t
		constexpr auto bIsActive = 0xb0; // char : 1
		constexpr auto bIsLocked = 0xb0; // char : 1
		constexpr auto StartTime = 0xb4; // float
		constexpr auto EndTime = 0xb8; // float
		constexpr auto PrerollTime = 0xbc; // float
		constexpr auto PostrollTime = 0xc0; // float
		constexpr auto bIsInfinite = 0xc4; // char : 1
		constexpr auto bSupportsInfiniteRange = 0xc8; // bool
		constexpr auto BlendType = 0xc9; // FOptionalMovieSceneBlendType
	}

	namespace n_ATriggerBase { // : AActor
		constexpr auto CollisionComponent = 0x218; // UShapeComponent*
	}

	namespace n_UMM_CheatWidget { // : UUserWidget
		constexpr auto ColorAndOpacity = 0x110; // FLinearColor
		constexpr auto ColorAndOpacityDelegate = 0x120; // DelegateProperty
		constexpr auto ForegroundColor = 0x130; // FSlateColor
		constexpr auto ForegroundColorDelegate = 0x158; // DelegateProperty
		constexpr auto Padding = 0x168; // FMargin
		constexpr auto ActiveSequencePlayers = 0x178; // TArray<UUMGSequencePlayer*>
		constexpr auto StoppedSequencePlayers = 0x188; // TArray<UUMGSequencePlayer*>
		constexpr auto NamedSlotBindings = 0x1a8; // TArray<FNamedSlotBinding>
		constexpr auto WidgetTree = 0x1b8; // UWidgetTree*
		constexpr auto Priority = 0x1c0; // int32_t
		constexpr auto bSupportsKeyboardFocus = 0x1c4; // char : 1
		constexpr auto bIsFocusable = 0x1c4; // char : 1
		constexpr auto bStopAction = 0x1c4; // char : 1
		constexpr auto bHasScriptImplementedTick = 0x1c4; // char : 1
		constexpr auto bHasScriptImplementedPaint = 0x1c4; // char : 1
		constexpr auto bCookedWidgetTree = 0x1c4; // char : 1
		constexpr auto TickFrequency = 0x1d0; // EWidgetTickFrequency
		constexpr auto InputComponent = 0x1d8; // UInputComponent*
		constexpr auto AnimationCallbacks = 0x1e0; // TArray<FAnimationEventBinding>
	}

	namespace n_UMM_ClosedTraining_Slot { // : UWidgetBase
		constexpr auto m_LockColor = 0x2f0; // FLinearColor
		constexpr auto m_NormalColor = 0x300; // FLinearColor
		constexpr auto m_Slot_BaseSphere = 0x310; // UMM_ClosedTraining_Slot_BaseSphere*
		constexpr auto m_Img_FXList = 0x318; // TArray<UMirImage*>
		constexpr auto m_Img_SelectedList = 0x328; // TArray<UMirImage*>
		constexpr auto m_Img_Lock = 0x338; // UMirImage*
		constexpr auto m_Img_Indicator = 0x340; // UMirImage*
		constexpr auto m_Txt_AbilityName = 0x348; // UMirTextBlock*
		constexpr auto m_Btn_Slot = 0x350; // UMirButton*
	}

	namespace n_UMM_ItemMake_Switch { // : UWidgetBase
		constexpr auto m_BtnSwitch = 0x2e0; // UMirButton*
		constexpr auto m_AniOn = 0x2e8; // UWidgetAnimation*
		constexpr auto MaterialSlotIndex = 0x2f0; // int32_t
	}

	namespace n_UMM_PopupGuildSearchSlot { // : UWidgetBase
		constexpr auto img_rank = 0x2e0; // UMirImage*
		constexpr auto txt_rank = 0x2e8; // UMirTextBlock*
		constexpr auto guild_icon = 0x2f0; // UMM_GuildIcon*
		constexpr auto Txt_Name = 0x2f8; // UMirTextBlock*
		constexpr auto txt_master_name = 0x300; // UMirTextBlock*
		constexpr auto txt_combatpower = 0x308; // UMirTextBlock*
		constexpr auto txt_level = 0x310; // UMirTextBlock*
		constexpr auto txt_member = 0x318; // UMirTextBlock*
		constexpr auto Btn_Main = 0x320; // UMirButton*
	}

	namespace n_UMM_SpecialAbility { // : UWidgetBase
		constexpr auto m_SpecialAbilityGrid = 0x2e0; // UPanelWidget*
		constexpr auto m_SpecialAbilityName = 0x2e8; // UMirTextBlock*
		constexpr auto m_SpecialAbilityDesc = 0x2f0; // UMirRichTextBlock*
		constexpr auto m_SkillPassiveID = 0x2f8; // int32_t
		constexpr auto STR_MSGID_PASSIVE = 0x2fc; // int32_t
	}

	namespace n_UGeneralProjectSettings { // : UObject
		constexpr auto CompanyName = 0x28; // FString
		constexpr auto CompanyDistinguishedName = 0x38; // FString
		constexpr auto CopyrightNotice = 0x48; // FString
		constexpr auto Description = 0x58; // FString
		constexpr auto Homepage = 0x68; // FString
		constexpr auto LicensingTerms = 0x78; // FString
		constexpr auto PrivacyPolicy = 0x88; // FString
		constexpr auto ProjectId = 0x98; // FGuid
		constexpr auto ProjectName = 0xa8; // FString
		constexpr auto ProjectVersion = 0xb8; // FString
		constexpr auto SupportContact = 0xc8; // FString
		constexpr auto ProjectDisplayedTitle = 0xd8; // FText
		constexpr auto ProjectDebugTitleInfo = 0xf0; // FText
		constexpr auto bShouldWindowPreserveAspectRatio = 0x108; // bool
		constexpr auto bUseBorderlessWindow = 0x109; // bool
		constexpr auto bStartInVR = 0x10a; // bool
		constexpr auto bStartInAR = 0x10b; // bool
		constexpr auto bSupportAR = 0x10c; // bool
		constexpr auto bAllowWindowResize = 0x10d; // bool
		constexpr auto bAllowClose = 0x10e; // bool
		constexpr auto bAllowMaximize = 0x10f; // bool
		constexpr auto bAllowMinimize = 0x110; // bool
	}

	namespace n_UPhysicsConstraintComponent { // : USceneComponent
		constexpr auto ConstraintActor1 = 0x220; // AActor*
		constexpr auto ComponentName1 = 0x228; // FConstrainComponentPropName
		constexpr auto ConstraintActor2 = 0x230; // AActor*
		constexpr auto ComponentName2 = 0x238; // FConstrainComponentPropName
		constexpr auto ConstraintSetup = 0x250; // UPhysicsConstraintTemplate*
		constexpr auto OnConstraintBroken = 0x258; // FScriptMulticastDelegate
		constexpr auto ConstraintInstance = 0x268; // FConstraintInstance
	}

	namespace n_UARPin { // : UObject
		constexpr auto TrackedGeometry = 0x28; // UARTrackedGeometry*
		constexpr auto PinnedComponent = 0x30; // USceneComponent*
		constexpr auto LocalToTrackingTransform = 0x40; // FTransform
		constexpr auto LocalToAlignedTrackingTransform = 0x70; // FTransform
		constexpr auto TrackingState = 0xa0; // EARTrackingState
		constexpr auto OnARTrackingStateChanged = 0xc0; // FScriptMulticastDelegate
		constexpr auto OnARTransformUpdated = 0xd0; // FScriptMulticastDelegate
	}

	namespace n_ULandscapeLayerInfoObject { // : UObject
		constexpr auto LayerName = 0x28; // FName
		constexpr auto PhysMaterial = 0x30; // UPhysicalMaterial*
		constexpr auto Hardness = 0x38; // float
		constexpr auto LayerUsageDebugColor = 0x3c; // FLinearColor
	}

	namespace n_UMovieSceneActorReferenceSection { // : UMovieSceneSection
		constexpr auto ActorReferenceData = 0xe0; // FMovieSceneActorReferenceData
		constexpr auto ActorGuidIndexCurve = 0x180; // FIntegralCurve
		constexpr auto ActorGuidStrings = 0x200; // TArray<FString>
	}

	namespace n_UAnimCustomInstance { // : UAnimInstance
		constexpr auto CurrentSkeleton = 0x28; // USkeleton*
		constexpr auto RootMotionMode = 0x30; // ERootMotionMode
		constexpr auto bUseMultiThreadedAnimationUpdate = 0x31; // char : 1
		constexpr auto bUsingCopyPoseFromMesh = 0x31; // char : 1
		constexpr auto bQueueMontageEvents = 0x31; // char : 1
		constexpr auto OnMontageBlendingOut = 0x38; // FScriptMulticastDelegate
		constexpr auto OnMontageStarted = 0x48; // FScriptMulticastDelegate
		constexpr auto OnMontageEnded = 0x58; // FScriptMulticastDelegate
		constexpr auto OnAllMontageInstancesEnded = 0x68; // FScriptMulticastDelegate
		constexpr auto NotifyQueue = 0x100; // FAnimNotifyQueue
		constexpr auto ActiveAnimNotifyState = 0x170; // TArray<FAnimNotifyEvent>
	}

	namespace n_UMM_Dominion_Title_SlotBase { // : UWidgetBase
		constexpr auto m_pTxtClass = 0x2e0; // UMirTextBlock*
		constexpr auto m_pTxtName = 0x2e8; // UMirTextBlock*
		constexpr auto m_pBtnInfo = 0x2f0; // UMM_Common_Btn_Symbol*
		constexpr auto m_pPortrait = 0x2f8; // UMM_GuildMemberPortrait*
		constexpr auto m_pBtnClick = 0x300; // UMirButton*
	}

	namespace n_UMaterialExpressionBentNormalCustomOutput { // : UMaterialExpressionCustomOutput
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UGeometryCollectionDebugDrawComponent { // : UActorComponent
		constexpr auto GeometryCollectionDebugDrawActor = 0xb0; // AGeometryCollectionDebugDrawActor*
		constexpr auto GeometryCollectionRenderLevelSetActor = 0xb8; // AGeometryCollectionRenderLevelSetActor*
	}

	namespace n_UMaterialExpressionCustomOutput { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UMM_Popup_NewAccount { // : UWidgetBase
		constexpr auto m_fActionDelayForAnimation = 0x2f0; // float
		constexpr auto m_Overlay_GoogleLogin = 0x300; // UPanelWidget*
		constexpr auto m_Overlay_AppleLogin = 0x308; // UPanelWidget*
		constexpr auto m_Overlay_FacebookLogin = 0x310; // UPanelWidget*
		constexpr auto m_Overlay_SteamLogin = 0x318; // UPanelWidget*
		constexpr auto m_Overlay_GuestLogin = 0x320; // UPanelWidget*
		constexpr auto m_Overlay_GuestContinue = 0x328; // UPanelWidget*
		constexpr auto m_Btn_GoogleLogin = 0x330; // UMirButton*
		constexpr auto m_Btn_AppleLogin = 0x338; // UMirButton*
		constexpr auto m_Btn_FacebookLogin = 0x340; // UMirButton*
		constexpr auto m_Btn_SteamLogin = 0x348; // UMirButton*
		constexpr auto m_Btn_GuestLogin = 0x350; // UMirButton*
		constexpr auto m_Btn_GuestContinue = 0x358; // UMirButton*
		constexpr auto m_Grid_Effect_GoogleLogin = 0x360; // UPanelWidget*
		constexpr auto m_Grid_Effect_AppleLogin = 0x368; // UPanelWidget*
		constexpr auto m_Grid_Effect_FaceBookLogin = 0x370; // UPanelWidget*
		constexpr auto m_Grid_Effect_SteamLogin = 0x378; // UPanelWidget*
		constexpr auto m_Grid_Effect_GuestLogin = 0x380; // UPanelWidget*
		constexpr auto m_Grid_Effect_GuestContinue = 0x388; // UPanelWidget*
		constexpr auto m_Ani_Click_Google = 0x390; // UWidgetAnimation*
		constexpr auto m_Ani_Click_Apple = 0x398; // UWidgetAnimation*
		constexpr auto m_Ani_Click_FaceBook = 0x3a0; // UWidgetAnimation*
		constexpr auto m_Ani_Click_Steam = 0x3a8; // UWidgetAnimation*
		constexpr auto m_Ani_Click_GuestLogin = 0x3b0; // UWidgetAnimation*
		constexpr auto m_Ani_Click_GuestContinue = 0x3b8; // UWidgetAnimation*
		constexpr auto m_Txt_Title = 0x3c0; // UMirTextBlock*
		constexpr auto m_Txt_Msg = 0x3c8; // UMirTextBlock*
		constexpr auto m_RTxt_Msg = 0x3d0; // UMirRichTextBlock*
		constexpr auto m_CB_Close = 0x3d8; // UMM_Common_Btn_Symbol*
	}

	namespace n_UNavFilter_AIControllerDefault { // : UNavigationQueryFilter
		constexpr auto Areas = 0x28; // TArray<FNavigationFilterArea>
		constexpr auto IncludeFlags = 0x38; // FNavigationFilterFlags
		constexpr auto ExcludeFlags = 0x3c; // FNavigationFilterFlags
	}

	namespace n_UBTTask_PlaySound { // : UBTTaskNode
		constexpr auto SoundToPlay = 0x70; // USoundCue*
	}

	namespace n_AMM_UIPreviewMode { // : AMM_PreviewModeBase
		constexpr auto m_pBackgroundParamCollection = 0x330; // UMaterialParameterCollection*
		constexpr auto m_pFriendMonster = 0x338; // AMM_Monster*
		constexpr auto m_pSelectTarget = 0x340; // AMM_CharacterPawnBase*
		constexpr auto m_pLockOnTarget = 0x348; // AMM_CharacterPawnBase*
		constexpr auto EndLevelTravel = 0x350; // bool
		constexpr auto m_pUIBackGroundActor = 0x400; // AUIBackGroundActor*
		constexpr auto SituationDirectiveActor = 0x408; // AMM_SituationDirectiveEffect*
		constexpr auto MapQuestArrivalDisplayActor = 0x410; // TMap<int32_t, TWeakObjectPtr<AQuestArrivalDisplayActor>>
		constexpr auto m_pHQPlayer = 0x460; // AMM_HQPlayerReferenceActor*
		constexpr auto m_pPortraitCaptureActor = 0x468; // AMM_PortraitCaptureActor*
		constexpr auto m_pPlayerPortraitRenderTarget = 0x470; // UCanvasRenderTarget2D*
		constexpr auto m_pContentsLightManager = 0x478; // AContentsLightManager*
		constexpr auto MyEditorCulture = 0x490; // FString
	}

	namespace n_UMaterialFunctionMaterialLayerInstance { // : UMaterialFunctionInstance
		constexpr auto Parent = 0x40; // UMaterialFunctionInterface*
		constexpr auto Base = 0x48; // UMaterialFunctionInterface*
		constexpr auto ScalarParameterValues = 0x50; // TArray<FScalarParameterValue>
		constexpr auto VectorParameterValues = 0x60; // TArray<FVectorParameterValue>
		constexpr auto TextureParameterValues = 0x70; // TArray<FTextureParameterValue>
		constexpr auto FontParameterValues = 0x80; // TArray<FFontParameterValue>
		constexpr auto StaticSwitchParameterValues = 0x90; // TArray<FStaticSwitchParameter>
		constexpr auto StaticComponentMaskParameterValues = 0xa0; // TArray<FStaticComponentMaskParameter>
		constexpr auto RuntimeVirtualTextureParameterValues = 0xb0; // TArray<FRuntimeVirtualTextureParameterValue>
	}

	namespace n_UPatchTableData { // : UDataAsset
		constexpr auto ExcludeFileNameList = 0x30; // TArray<FName>
		constexpr auto PatchFolderList = 0x40; // TArray<FName>
	}

	namespace n_UMovieSceneCameraShakeSection { // : UMovieSceneSection
		constexpr auto ShakeData = 0xe0; // FMovieSceneCameraShakeSectionData
		constexpr auto ShakeClass = 0x100; // UCameraShake*
		constexpr auto PlayScale = 0x108; // float
		constexpr auto PlaySpace = 0x10c; // ECameraAnimPlaySpace
		constexpr auto UserDefinedPlaySpace = 0x110; // FRotator
	}

	namespace n_UUserDefinedCaptureProtocol { // : UMovieSceneImageCaptureProtocolBase
		constexpr auto World = 0x58; // UWorld*
	}

	namespace n_ARadialForceActor { // : ARigidBodyBase
		constexpr auto ForceComponent = 0x218; // URadialForceComponent*
	}

	namespace n_UMM_Popup_Guild_WantedSlot { // : UWidgetBase
		constexpr auto txt_grade = 0x2e0; // UMirTextBlock*
		constexpr auto Img_Grade = 0x2e8; // UMirImage*
		constexpr auto txt_reward_name = 0x2f0; // UMirTextBlock*
		constexpr auto img_reward = 0x2f8; // UMirImage*
		constexpr auto txt_reward = 0x300; // UMirTextBlock*
		constexpr auto txt_effect_name = 0x308; // UMirTextBlock*
		constexpr auto Img_Effect = 0x310; // UMirImage*
		constexpr auto txt_effect = 0x318; // UMirTextBlock*
		constexpr auto Btn_Cost = 0x320; // UMM_Common_Btn_Cost*
		constexpr auto txt_time = 0x328; // UMirTextBlock*
		constexpr auto m_pTxtKillCount = 0x330; // UMirTextBlock*
		constexpr auto m_pHorReward = 0x338; // UHorizontalBox*
		constexpr auto m_pHorEffect = 0x340; // UHorizontalBox*
		constexpr auto m_HorRootCount = 0x348; // UHorizontalBox*
		constexpr auto m_pVertRootReward = 0x350; // UVerticalBox*
		constexpr auto m_pChkOne = 0x358; // UMirCheckBox*
		constexpr auto m_pChkTwo = 0x360; // UMirCheckBox*
		constexpr auto m_pTxtCountOne = 0x368; // UMirTextBlock*
		constexpr auto m_pTxtCountTwo = 0x370; // UMirTextBlock*
	}

	namespace n_UMM_Popup_Occupation_SiegeSet { // : UWidgetBase
		constexpr auto m_AniDestory = 0x2e0; // UWidgetAnimation*
		constexpr auto m_AniSet = 0x2e8; // UWidgetAnimation*
		constexpr auto m_cpDestory = 0x2f0; // UMirCanvasPanel*
		constexpr auto m_txtDestory = 0x2f8; // UMirRichTextBlock*
		constexpr auto m_cpSet = 0x300; // UMirCanvasPanel*
		constexpr auto m_txtSet = 0x308; // UMirRichTextBlock*
	}

	namespace n_AGameSession { // : AInfo
		constexpr auto MaxSpectators = 0x218; // int32_t
		constexpr auto MaxPlayers = 0x21c; // int32_t
		constexpr auto MaxPartySize = 0x220; // int32_t
		constexpr auto MaxSplitscreensPerConnection = 0x224; // char
		constexpr auto bRequiresPushToTalk = 0x225; // bool
		constexpr auto SessionName = 0x228; // FName
	}

	namespace n_UUserInterfaceSettings { // : UDeveloperSettings
		constexpr auto RenderFocusRule = 0x38; // ERenderFocusRule
		constexpr auto HardwareCursors = 0x40; // TMap<EMouseCursor, FHardwareCursorReference>
		constexpr auto SoftwareCursors = 0x90; // TMap<EMouseCursor, FSoftClassPath>
		constexpr auto DefaultCursor = 0xe0; // FSoftClassPath
		constexpr auto TextEditBeamCursor = 0xf8; // FSoftClassPath
		constexpr auto CrosshairsCursor = 0x110; // FSoftClassPath
		constexpr auto HandCursor = 0x128; // FSoftClassPath
		constexpr auto GrabHandCursor = 0x140; // FSoftClassPath
		constexpr auto GrabHandClosedCursor = 0x158; // FSoftClassPath
		constexpr auto SlashedCircleCursor = 0x170; // FSoftClassPath
		constexpr auto ApplicationScale = 0x188; // float
		constexpr auto UIScaleRule = 0x18c; // EUIScalingRule
		constexpr auto CustomScalingRuleClass = 0x190; // FSoftClassPath
		constexpr auto UIScaleCurve = 0x1a8; // FRuntimeFloatCurve
		constexpr auto bAllowHighDPIInGameMode = 0x230; // bool
		constexpr auto bLoadWidgetsOnDedicatedServer = 0x231; // bool
		constexpr auto CursorClasses = 0x238; // TArray<UObject*>
		constexpr auto CustomScalingRuleClassInstance = 0x248; // UObject*
		constexpr auto CustomScalingRule = 0x250; // UDPICustomScalingRule*
		constexpr auto bForceCalculateScale = 0x258; // bool
	}

	namespace n_UMaterialExpressionFresnel { // : UMaterialExpression
		constexpr auto ExponentIn = 0x40; // FExpressionInput
		constexpr auto Exponent = 0x54; // float
		constexpr auto BaseReflectFractionIn = 0x58; // FExpressionInput
		constexpr auto BaseReflectFraction = 0x6c; // float
		constexpr auto Normal = 0x70; // FExpressionInput
	}

	namespace n_UMM_PopupExpBoosterCharge { // : UWidgetBase
		constexpr auto btn_close = 0x2e0; // UMM_Common_Btn_Symbol*
		constexpr auto Btn_Cancel = 0x2e8; // UMM_Common_Btn*
		constexpr auto btn_confirm = 0x2f0; // UMM_Common_Btn*
		constexpr auto Slider = 0x2f8; // UMM_Item_Make_Slider*
		constexpr auto sb_exp_booster = 0x300; // UMirScrollBox*
		constexpr auto txt_remained_time = 0x308; // UMirRichTextBlock*
		constexpr auto txt_charge_time = 0x310; // UMirTextBlock*
	}

	namespace n_USoundCue { // : USoundBase
		constexpr auto bPrimeOnLoad = 0x160; // char : 1
		constexpr auto FirstNode = 0x168; // USoundNode*
		constexpr auto VolumeMultiplier = 0x170; // float
		constexpr auto PitchMultiplier = 0x174; // float
		constexpr auto AttenuationOverrides = 0x178; // FSoundAttenuationSettings
		constexpr auto SubtitlePriority = 0x468; // float
		constexpr auto bOverrideAttenuation = 0x470; // char : 1
		constexpr auto bExcludeFromRandomNodeBranchCulling = 0x470; // char : 1
		constexpr auto bHasPlayWhenSilent = 0x470; // char : 1
	}

	namespace n_UGeometryCacheTrackStreamable { // : UGeometryCacheTrack
		constexpr auto Codec = 0x58; // UGeometryCacheCodecBase*
		constexpr auto StartSampleTime = 0x188; // float
	}

	namespace n_USourceEffectMidSideSpreaderPreset { // : USoundEffectSourcePreset
		constexpr auto Settings = 0x74; // FSourceEffectMidSideSpreaderSettings
	}

	namespace n_UMM_Popup_MysticalPieces_Infos { // : UWidgetBase
		constexpr auto m_Txt_Title = 0x2e0; // UMirTextBlock*
		constexpr auto m_Btn_Close = 0x2e8; // UMM_Common_Btn_Symbol*
		constexpr auto m_MirScrollBox = 0x2f0; // UMirScrollBox*
		constexpr auto m_ItemInfo_Abilitys = 0x2f8; // TArray<UMM_PopUp_ItemInfo_Ability*>
		constexpr auto m_SkillInfos = 0x308; // TArray<UMM_PassiveSkillDesc*>
		constexpr auto m_Notice = 0x318; // UMM_Common_Board_Notice*
		constexpr auto m_Btn_Bg = 0x320; // UMirButton*
		constexpr auto m_Txt_Notice = 0x328; // UMirTextBlock*
	}

	namespace n_UMaterialParameterCollectionInstance { // : UObject
		constexpr auto Collection = 0x30; // UMaterialParameterCollection*
	}

	namespace n_AWaypointAreaExporter { // : AActor
		constexpr auto m_StageID = 0x218; // int32_t
		constexpr auto m_strStageIDList = 0x220; // FString
	}

	namespace n_UButtonSlot { // : UPanelSlot
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UCanvasRenderTarget2D { // : UTextureRenderTarget2D
		constexpr auto OnCanvasRenderTargetUpdate = 0x100; // FScriptMulticastDelegate
		constexpr auto World = 0x110; // TWeakObjectPtr<UWorld>
		constexpr auto bShouldClearRenderTargetOnReceiveUpdate = 0x118; // bool
	}

	namespace n_USimpleConstructionScript { // : UObject
		constexpr auto RootNodes = 0x28; // TArray<USCS_Node*>
		constexpr auto AllNodes = 0x38; // TArray<USCS_Node*>
		constexpr auto DefaultSceneRootNode = 0x48; // USCS_Node*
	}

	namespace n_USpacer { // : UWidget
		constexpr auto Size = 0x108; // FVector2D
	}

	namespace n_UBlueprintGeneratedClass { // : UClass
		constexpr auto NumReplicatedProperties = 0x210; // int32_t
		constexpr auto bHasNativizedParent = 0x214; // char : 1
		constexpr auto bHasCookedComponentInstancingData = 0x214; // char : 1
		constexpr auto DynamicBindingObjects = 0x218; // TArray<UDynamicBlueprintBinding*>
		constexpr auto ComponentTemplates = 0x228; // TArray<UActorComponent*>
		constexpr auto Timelines = 0x238; // TArray<UTimelineTemplate*>
		constexpr auto ComponentClassOverrides = 0x248; // TArray<FBPComponentClassOverride>
		constexpr auto SimpleConstructionScript = 0x258; // USimpleConstructionScript*
		constexpr auto InheritableComponentHandler = 0x260; // UInheritableComponentHandler*
		constexpr auto UberGraphFramePointerProperty = 0x268; // UStructProperty*
		constexpr auto UberGraphFunction = 0x270; // UFunction*
		constexpr auto CookedComponentInstancingData = 0x278; // TMap<FName, FBlueprintCookedComponentInstancingData>
	}

	namespace n_APhysicsVolume { // : AVolume
		constexpr auto TerminalVelocity = 0x250; // float
		constexpr auto Priority = 0x254; // int32_t
		constexpr auto FluidFriction = 0x258; // float
		constexpr auto bWaterVolume = 0x25c; // char : 1
		constexpr auto bPhysicsOnContact = 0x25c; // char : 1
	}

	namespace n_UDistributionVectorUniform { // : UDistributionVector
		constexpr auto Max = 0x38; // FVector
		constexpr auto Min = 0x44; // FVector
		constexpr auto bLockAxes = 0x50; // char : 1
		constexpr auto LockedAxes = 0x54; // EDistributionVectorLockFlags
		constexpr auto MirrorFlags = 0x55; // EDistributionVectorMirrorFlags [0x3]
		constexpr auto bUseExtremes = 0x58; // char : 1
	}

	namespace n_ULimitTimerWidget { // : UWidgetBase
		constexpr auto txtLimitTime = 0x2f0; // UTextBlock*
		constexpr auto txtTime = 0x2f8; // UTextBlock*
		constexpr auto btnExtend = 0x300; // UMirButton*
		constexpr auto btnExtend2 = 0x308; // UMirButton*
		constexpr auto imgExtend = 0x310; // UImage*
		constexpr auto m_pOutgamePopupExtendTime = 0x318; // UMM_Common_Popup_Outgame*
		constexpr auto canAutoExtending = 0x320; // UMirCanvasPanel*
		constexpr auto eftAutoExtendWgt = 0x328; // UEffectWidgetBase*
		constexpr auto txtAutoExtendCount = 0x330; // UMirTextBlock*
		constexpr auto btnAutoExtending = 0x338; // UMirButton*
		constexpr auto StartWarnAni = 0x358; // UWidgetAnimation*
	}

	namespace n_AEffectShowTrigger { // : AActivateTrigger
		constexpr auto m_bDefaultShow = 0x278; // bool
		constexpr auto m_EffectID = 0x27c; // int32_t
	}

	namespace n_UMM_GuildShortCut { // : UWidgetBase
		constexpr auto btn_close = 0x2e0; // UMirButton*
		constexpr auto btn_character_detail = 0x2e8; // UMM_Common_Btn*
		constexpr auto btn_guild_grade = 0x2f0; // UMM_Common_Btn*
	}

	namespace n_UMM_GuildWanted { // : UWidgetBase
		constexpr auto mPanelWanted = 0x2f0; // UMirCanvasPanel*
		constexpr auto txt_count = 0x2f8; // UMirTextBlock*
		constexpr auto btn_search = 0x300; // UMirButton*
		constexpr auto sb_wanted = 0x308; // UMirScrollBox*
		constexpr auto bn_empty = 0x310; // UMM_Common_Board_Notice*
		constexpr auto mPanelDevLock = 0x318; // UMM_GuildDevLock*
	}

	namespace n_UMM_PopupPackageSlot { // : UWidgetBase
		constexpr auto m_Slot_Material = 0x2f0; // UMM_Slot_Material*
		constexpr auto m_MirTextBlock_Name = 0x2f8; // UMirTextBlock*
		constexpr auto m_MirTextBlock_Name1 = 0x300; // UMirTextBlock*
		constexpr auto m_MirTextBlock_Desc = 0x308; // UMirRichTextBlock*
		constexpr auto m_Grid_Desc_Goods = 0x310; // UPanelWidget*
		constexpr auto m_Grid_Desc_Item = 0x318; // UPanelWidget*
	}

	namespace n_UMM_Popup_GuildDonation { // : UWidgetBase
		constexpr auto btn_close = 0x2f0; // UMM_Common_Btn_Symbol*
		constexpr auto Btn_Cancel = 0x2f8; // UMM_Common_Btn*
		constexpr auto btn_details = 0x300; // UMM_Common_Btn*
		constexpr auto btn_confirm = 0x308; // UMM_Common_Btn*
		constexpr auto btn_confirm_lock = 0x310; // UMM_Common_Btn*
		constexpr auto lst_slot = 0x318; // TArray<UMM_Popup_GuildDonationSelectSlot*>
		constexpr auto img_send = 0x328; // UMirImage*
		constexpr auto img_recv = 0x330; // UMirImage*
		constexpr auto img_possession = 0x338; // UMirImage*
		constexpr auto txt_send_name = 0x340; // UMirTextBlock*
		constexpr auto txt_send = 0x348; // UMirTextBlock*
		constexpr auto txt_recv = 0x350; // UMirTextBlock*
		constexpr auto txt_possession = 0x358; // UMirTextBlock*
		constexpr auto img_donation = 0x360; // UMirImage*
		constexpr auto txt_donation_name = 0x368; // UMirTextBlock*
		constexpr auto txt_donation = 0x370; // UMirTextBlock*
		constexpr auto cp_commission = 0x378; // UMirCanvasPanel*
		constexpr auto txt_commission = 0x380; // UMirTextBlock*
		constexpr auto item_make_slider = 0x388; // UMM_Item_Make_Slider*
		constexpr auto switcher = 0x390; // UWidgetSwitcher*
		constexpr auto img_dev = 0x398; // UMirImage*
		constexpr auto txt_dev_title = 0x3a0; // UMirTextBlock*
		constexpr auto txt_dev = 0x3a8; // UMirTextBlock*
		constexpr auto Txt_Title = 0x3b0; // UMirTextBlock*
		constexpr auto Txt_Desc = 0x3b8; // UMirTextBlock*
		constexpr auto cp_reward = 0x3c0; // UMirCanvasPanel*
		constexpr auto img_reward_exp = 0x3c8; // UMirImage*
		constexpr auto txt_reward_exp = 0x3d0; // UMirTextBlock*
		constexpr auto img_reward_money = 0x3d8; // UMirImage*
		constexpr auto txt_reward_money = 0x3e0; // UMirTextBlock*
	}

	namespace n_UMM_Ranking_Reward_Popup_New { // : UWidgetBase
		constexpr auto m_pBtnCloseBG = 0x2f0; // UMirButton*
		constexpr auto m_pBtnClose = 0x2f8; // UMM_Common_Btn_Symbol*
		constexpr auto m_pScrollList = 0x300; // UMirScrollBox*
	}

	namespace n_UMaterialExpressionObjectOrientation { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UMM_PopUp_ItemInfo_Left { // : UWidgetBase
		constexpr auto m_InventorySlot = 0x2f0; // UMM_Slot_Inventory*
		constexpr auto m_LevelUPBtn = 0x2f8; // UMM_Common_Btn*
		constexpr auto m_SmeltingBtn = 0x300; // UMM_Common_Btn*
		constexpr auto m_ChangeOptionBtn = 0x308; // UMM_Common_Btn*
		constexpr auto m_CombineBtn = 0x310; // UMM_Common_Btn*
		constexpr auto m_GetWayBtn = 0x318; // UMM_Common_Btn*
		constexpr auto m_TransBtn = 0x320; // UMM_Common_Btn*
		constexpr auto m_ItemShareBtn = 0x328; // UMM_Common_Btn*
		constexpr auto m_ItemRepairBtn = 0x330; // UMM_Common_Btn*
		constexpr auto m_pGoAuction = 0x338; // UMM_Common_Btn*
		constexpr auto m_CollectionBtn = 0x340; // UMM_Common_Btn*
		constexpr auto m_ItemMakeBtn = 0x348; // UMM_Common_Btn*
		constexpr auto m_XDracoSealBtn = 0x350; // UMM_Common_Btn*
		constexpr auto ParentWidget = 0x358; // UMM_PopUp_ItemInfo*
	}

	namespace n_ULevel { // : UObject
		constexpr auto OwningWorld = 0xb8; // UWorld*
		constexpr auto Model = 0xc0; // UModel*
		constexpr auto ModelComponents = 0xc8; // TArray<UModelComponent*>
		constexpr auto ActorCluster = 0xd8; // ULevelActorContainer*
		constexpr auto NumTextureStreamingUnbuiltComponents = 0xe0; // int32_t
		constexpr auto NumTextureStreamingDirtyResources = 0xe4; // int32_t
		constexpr auto LevelScriptActor = 0xe8; // ALevelScriptActor*
		constexpr auto NavListStart = 0xf0; // ANavigationObjectBase*
		constexpr auto NavListEnd = 0xf8; // ANavigationObjectBase*
		constexpr auto NavDataChunks = 0x100; // TArray<UNavigationDataChunk*>
		constexpr auto LightmapTotalSize = 0x110; // float
		constexpr auto ShadowmapTotalSize = 0x114; // float
		constexpr auto StaticNavigableGeometry = 0x118; // TArray<FVector>
		constexpr auto StreamingTextureGuids = 0x128; // TArray<FGuid>
		constexpr auto LevelBuildDataId = 0x1d0; // FGuid
		constexpr auto MapBuildData = 0x1e0; // UMapBuildDataRegistry*
		constexpr auto LightBuildLevelOffset = 0x1e8; // FIntVector
		constexpr auto bIsLightingScenario = 0x1f4; // char : 1
		constexpr auto bTextureStreamingRotationChanged = 0x1f4; // char : 1
		constexpr auto bStaticComponentsRegisteredInStreamingManager = 0x1f4; // char : 1
		constexpr auto bIsVisible = 0x1f4; // char : 1
		constexpr auto WorldSettings = 0x240; // AWorldSettings*
		constexpr auto AssetUserData = 0x250; // TArray<UAssetUserData*>
		constexpr auto DestroyedReplicatedStaticActors = 0x270; // TArray<FReplicatedStaticActorDestructionInfo>
	}

	namespace n_UMM_Smelt_SpecialOptionOpen { // : UWidgetBase
		constexpr auto m_AniStart = 0x2f0; // UWidgetAnimation*
		constexpr auto Panel_Effect = 0x300; // UPanelWidget*
		constexpr auto Img_OptionIcon = 0x308; // UMirImage*
		constexpr auto Txt_SpecialOptionOpenTitle = 0x310; // UMirTextBlock*
		constexpr auto Txt_SpecialOptionDescription = 0x318; // UMirTextBlock*
		constexpr auto Txt_SpecialOptionValue = 0x320; // UMirTextBlock*
	}

	namespace n_UMM_UIShopBanner { // : UWidgetBase
		constexpr auto mTxtStopToday = 0x2e0; // UMirTextBlock*
		constexpr auto mCheckBox = 0x2e8; // UMirCheckBox*
		constexpr auto mImgDownLoad = 0x2f0; // UImage*
		constexpr auto mBtnClose = 0x2f8; // UMM_Common_Btn_Symbol*
		constexpr auto mDownloadImage = 0x300; // UAsyncTaskDownloadImage*
	}

	namespace n_UBrainComponent { // : UActorComponent
		constexpr auto BlackboardComp = 0xb8; // UBlackboardComponent*
		constexpr auto AIOwner = 0xc0; // AAIController*
	}

	namespace n_UBTDecorator_KeepInCone { // : UBTDecorator
		constexpr auto ConeHalfAngle = 0x68; // float
		constexpr auto ConeOrigin = 0x70; // FBlackboardKeySelector
		constexpr auto Observed = 0x98; // FBlackboardKeySelector
		constexpr auto bUseSelfAsOrigin = 0xc0; // char : 1
		constexpr auto bUseSelfAsObserved = 0xc0; // char : 1
	}

	namespace n_UBTComposite_SimpleParallel { // : UBTCompositeNode
		constexpr auto FinishMode = 0x90; // EBTParallelMode
	}

	namespace n_UBTTask_PushPawnAction { // : UBTTask_PawnActionBase
		constexpr auto Action = 0x70; // UPawnAction*
	}

	namespace n_UProgressWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto ProgressBarStyle = 0x30; // FProgressBarStyle
	}

	namespace n_UHorizontalBox { // : UPanelWidget
		constexpr auto Slots = 0x108; // TArray<UPanelSlot*>
	}

	namespace n_UMM_Pet_Circle_Portrait { // : UWidgetBase
		constexpr auto m_Img_TierBg = 0x2e0; // UMirImage*
		constexpr auto m_Img_PetIcon = 0x2e8; // UMirImage*
	}

	namespace n_UPaperSprite { // : UObject
		constexpr auto BakedSourceUV = 0x38; // FVector2D
		constexpr auto BakedSourceDimension = 0x40; // FVector2D
		constexpr auto BakedSourceTexture = 0x48; // UTexture2D*
		constexpr auto DefaultMaterial = 0x50; // UMaterialInterface*
		constexpr auto AlternateMaterial = 0x58; // UMaterialInterface*
		constexpr auto Sockets = 0x60; // TArray<FPaperSpriteSocket>
		constexpr auto SpriteCollisionDomain = 0x70; // ESpriteCollisionMode
		constexpr auto PixelsPerUnrealUnit = 0x74; // float
		constexpr auto BodySetup = 0x78; // UBodySetup*
		constexpr auto AlternateMaterialSplitIndex = 0x80; // int32_t
		constexpr auto BakedRenderData = 0x88; // TArray<FVector4>
	}

	namespace n_UMM_PopUp_BuildingChart_Slot { // : UWidgetBase
		constexpr auto m_Txt_Step = 0x2e8; // UMirTextBlock*
		constexpr auto m_Txt_Effects = 0x2f0; // TArray<UMirTextBlock*>
		constexpr auto m_Img_Select = 0x300; // UMirImage*
	}

	namespace n_UMM_Auction_Tab_Search_ColumnName { // : UWidgetBase
		constexpr auto m_pCanvasBookMark = 0x2e0; // UMirCanvasPanel*
		constexpr auto m_pCanvasNormal = 0x2e8; // UMirCanvasPanel*
		constexpr auto m_pCanvasMaterial = 0x2f0; // UMirCanvasPanel*
		constexpr auto m_pBtnSortNorm = 0x2f8; // UMirButton*
		constexpr auto m_pBtnSortEachMtrl = 0x300; // UMirButton*
		constexpr auto m_pBtnSortMtrl = 0x308; // UMirButton*
		constexpr auto m_arrImgSortEachMtrl = 0x310; // TArray<UMirImage*>
		constexpr auto m_arrImgSortMtrl = 0x320; // TArray<UMirImage*>
		constexpr auto m_arrImgSortNorm = 0x330; // TArray<UMirImage*>
		constexpr auto m_arrTxtList = 0x340; // TArray<UMirTextBlock*>
	}

	namespace n_AMM_SpectatorPawn { // : ASpectatorPawn
		constexpr auto BaseTurnRate = 0x278; // float
		constexpr auto BaseLookUpRate = 0x27c; // float
		constexpr auto MovementComponent = 0x280; // UPawnMovementComponent*
		constexpr auto CollisionComponent = 0x288; // USphereComponent*
		constexpr auto MeshComponent = 0x290; // UStaticMeshComponent*
		constexpr auto bAddDefaultMovementBindings = 0x298; // char : 1
	}

	namespace n_UMM_ClassPhase_SkillInfoSlot { // : UWidgetBase
		constexpr auto m_pTxtSkillName = 0x2e0; // UMirTextBlock*
		constexpr auto m_pTxtSkillInfo = 0x2e8; // UMirTextBlock*
		constexpr auto m_pTxtSkillDesc = 0x2f0; // UMirRichTextBlock*
		constexpr auto m_pTxtSpecialDesc = 0x2f8; // UMirTextBlock*
		constexpr auto m_pBtnPrev = 0x300; // UMM_Common_Btn_Symbol*
		constexpr auto m_pBtnNext = 0x308; // UMM_Common_Btn_Symbol*
		constexpr auto m_pTxtAwaken = 0x310; // UMirTextBlock*
		constexpr auto m_pBtnAwaken = 0x318; // UMirButton*
		constexpr auto m_pPanelSkillDesc = 0x320; // UMirCanvasPanel*
		constexpr auto m_pNoticeEmpty = 0x328; // UMM_Common_Board_Notice*
		constexpr auto m_arrSkillEffectDescList = 0x330; // TArray<UMirRichTextBlock*>
		constexpr auto m_arrSkillSlot = 0x340; // TArray<UMM_ClassPhase_SkillSlot*>
	}

	namespace n_UMM_New_Force_Upgrade { // : UWidgetBase
		constexpr auto m_Force_CurDetail = 0x308; // UMM_New_Force_Detail_Info*
		constexpr auto m_arAbilityListSlot = 0x310; // UMM_New_Force_Ability_Slot* [0x4]
		constexpr auto m_Panel_Mats = 0x330; // UPanelWidget*
		constexpr auto m_C_RTxt_CharLevel = 0x338; // UMirRichTextBlock*
		constexpr auto m_Slot_Mats = 0x340; // TArray<UMM_Slot_Material_Item*>
		constexpr auto m_AniGuide = 0x350; // TArray<UWidgetAnimation*>
		constexpr auto m_Btn_Advence = 0x360; // UMM_Common_Btn_Cost*
		constexpr auto m_Panel_Skip = 0x368; // UPanelWidget*
		constexpr auto m_Slot_Skip = 0x370; // UMM_Slot_Material_Item*
		constexpr auto m_Txt_SkipDesc = 0x378; // UMirTextBlock*
		constexpr auto m_Txt_SkipRemainTime = 0x380; // UMirTextBlock*
		constexpr auto m_Btn_Skip = 0x388; // UMM_Common_Btn*
		constexpr auto m_Panel_Cure = 0x390; // UPanelWidget*
		constexpr auto m_C_Slot_CureMat = 0x398; // UMM_Slot_Material_Item*
		constexpr auto m_C_Txt_FailedInfo = 0x3a0; // UMirTextBlock*
		constexpr auto m_C_Txt_FailedTime = 0x3a8; // UMirTextBlock*
		constexpr auto m_C_CB_Cure = 0x3b0; // UMM_Common_Btn*
	}

	namespace n_UMM_CharAbility_Info_Skill { // : UWidgetBase
		constexpr auto arrSkillSlot = 0x300; // TArray<UMM_Skill_DeckSlot*>
		constexpr auto SkillSlot_Special = 0x310; // UMM_Skill_DeckSlot*
	}

	namespace n_UNavigationDataChunk { // : UObject
		constexpr auto NavigationDataName = 0x28; // FName
	}

	namespace n_USizeBox { // : UContentWidget
		constexpr auto WidthOverride = 0x130; // float
		constexpr auto HeightOverride = 0x134; // float
		constexpr auto MinDesiredWidth = 0x138; // float
		constexpr auto MinDesiredHeight = 0x13c; // float
		constexpr auto MaxDesiredWidth = 0x140; // float
		constexpr auto MaxDesiredHeight = 0x144; // float
		constexpr auto MinAspectRatio = 0x148; // float
		constexpr auto MaxAspectRatio = 0x14c; // float
		constexpr auto bOverride_WidthOverride = 0x150; // char : 1
		constexpr auto bOverride_HeightOverride = 0x150; // char : 1
		constexpr auto bOverride_MinDesiredWidth = 0x150; // char : 1
		constexpr auto bOverride_MinDesiredHeight = 0x150; // char : 1
		constexpr auto bOverride_MaxDesiredWidth = 0x150; // char : 1
		constexpr auto bOverride_MaxDesiredHeight = 0x150; // char : 1
		constexpr auto bOverride_MinAspectRatio = 0x150; // char : 1
		constexpr auto bOverride_MaxAspectRatio = 0x150; // char : 1
	}

	namespace n_UMaterialExpressionTangentOutput { // : UMaterialExpressionCustomOutput
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_USoundNodeAttenuation { // : USoundNode
		constexpr auto AttenuationSettings = 0x40; // USoundAttenuation*
		constexpr auto AttenuationOverrides = 0x48; // FSoundAttenuationSettings
		constexpr auto bOverrideAttenuation = 0x338; // char : 1
	}

	namespace n_UEditableStaticMeshAdapter { // : UEditableMeshAdapter
		constexpr auto StaticMesh = 0x28; // UStaticMesh*
		constexpr auto OriginalStaticMesh = 0x30; // UStaticMesh*
		constexpr auto StaticMeshLODIndex = 0x38; // int32_t
	}

	namespace n_UMM_Popup_GuildOtherMembersSlot { // : UWidgetBase
		constexpr auto Portrait = 0x2e0; // UMM_GuildMemberPortrait*
		constexpr auto txt_grade = 0x2e8; // UMirTextBlock*
		constexpr auto txt_nickname = 0x2f0; // UMirTextBlock*
		constexpr auto txt_custom_title = 0x2f8; // UMirTextBlock*
		constexpr auto txt_level = 0x300; // UMirTextBlock*
		constexpr auto img_class = 0x308; // UMirImage*
		constexpr auto txt_class = 0x310; // UMirTextBlock*
		constexpr auto txt_combat_power = 0x318; // UMirTextBlock*
		constexpr auto btn_select = 0x320; // UMirButton*
	}

	namespace n_UMM_Customizing_Picker_DetailBar { // : UWidgetBase
		constexpr auto Txt_Detail = 0x2f0; // UMirTextBlock*
		constexpr auto m_CustomizingType = 0x2f8; // int32_t
	}

	namespace n_UMM_GuildSupport { // : UWidgetBase
		constexpr auto vertical_set = 0x2f0; // UMM_CommonVerticalTabSet*
		constexpr auto sb_support = 0x2f8; // UMirScrollBox*
		constexpr auto btn_support = 0x300; // UMM_Common_Btn*
		constexpr auto txt_today_contribution = 0x308; // UMirTextBlock*
		constexpr auto txt_guild_point = 0x310; // UMirTextBlock*
		constexpr auto pb_guild_point = 0x318; // UMirProgressBar*
		constexpr auto bn_empty = 0x320; // UMM_Common_Board_Notice*
		constexpr auto cp_point = 0x328; // UMirCanvasPanel*
		constexpr auto ani_point = 0x330; // UWidgetAnimation*
		constexpr auto Txt_Point = 0x338; // UMirTextBlock*
		constexpr auto img_point = 0x340; // UMirImage*
	}

	namespace n_UMM_Popup_Party_Slot_Option { // : UWidgetBase
		constexpr auto m_C_Btn_Close = 0x2e0; // UMM_Common_Btn_Symbol*
		constexpr auto m_arSlotItems = 0x2e8; // TArray<UMM_Popup_Party_Slot_Option_Item*>
	}

	namespace n_UMM_Popup_ServerRelocation { // : UWidgetBase
		constexpr auto m_Btn_Close = 0x2f0; // UMM_Common_Btn_Symbol*
		constexpr auto m_Btn_ServerSelect = 0x2f8; // UMirButton*
		constexpr auto m_Txt_CurrentServer = 0x300; // UMirTextBlock*
		constexpr auto m_Txt_ChangeServer = 0x308; // UMirTextBlock*
		constexpr auto m_Txt_RemainSlotNum = 0x310; // UMirRichTextBlock*
		constexpr auto m_Txt_ConditionCount = 0x318; // UMirTextBlock*
		constexpr auto m_Scroll_ConditionList = 0x320; // UMirScrollBox*
		constexpr auto m_Btn_ChangeStart = 0x328; // UMM_Common_Btn_Cost*
		constexpr auto m_Txt_Notice = 0x330; // UMirRichTextBlock*
		constexpr auto m_Txt_Notice2 = 0x338; // UMirRichTextBlock*
		constexpr auto m_Txt_ConditionNotice = 0x340; // UMirRichTextBlock*
		constexpr auto m_canvas_Deco = 0x348; // UMirCanvasPanel*
	}

	namespace n_UMM_Slot_Rank { // : UWidgetBase
		constexpr auto img_rank = 0x2e0; // UMirImage*
		constexpr auto txt_rank = 0x2e8; // UMirTextBlock*
	}

	namespace n_UMM_Popup_UIShopGoodsDetail { // : UWidgetBase
		constexpr auto m_Txt_GoodsName = 0x2f0; // UMirTextBlock*
		constexpr auto m_Txt_Account = 0x2f8; // UMirTextBlock*
		constexpr auto m_Img_GoodsIcon = 0x300; // UMirImage*
		constexpr auto m_Img_LabelIcon = 0x308; // UMirImage*
		constexpr auto m_Img_OnePlus = 0x310; // UMirImage*
		constexpr auto m_Img_TagIcon = 0x318; // UMirImage*
		constexpr auto m_Img_MileageIcon = 0x320; // UMirImage*
		constexpr auto m_Txt_Mileage = 0x328; // UMirTextBlock*
		constexpr auto m_Btn_Close = 0x330; // UMM_Common_Btn_Symbol*
		constexpr auto m_ScrollBox = 0x338; // UMirScrollBox*
		constexpr auto m_Panel_BtnShowDetail = 0x340; // UMirCanvasPanel*
		constexpr auto m_Btn_ShowDetail = 0x348; // UMirButton*
		constexpr auto m_Txt_ShowDetail = 0x350; // UMirTextBlock*
		constexpr auto m_Panel_ShowDetail = 0x358; // UMirCanvasPanel*
		constexpr auto m_Txt_ShowDetailTitle = 0x360; // UMirTextBlock*
		constexpr auto m_Btn_ShowDetailClose = 0x368; // UMM_Common_Btn_Symbol*
		constexpr auto m_Txt_ShowDetailDesc = 0x370; // UMirTextBlock*
	}

	namespace n_USoundNodeWaveParam { // : USoundNode
		constexpr auto WaveParameterName = 0x40; // FName
	}

	namespace n_UMM_Customizing { // : UWidgetBase
		constexpr auto m_UpStyleHairPanel = 0x2f0; // UPanelWidget*
		constexpr auto m_LookPanel = 0x2f8; // UPanelWidget*
		constexpr auto m_UIPanel = 0x300; // UPanelWidget*
		constexpr auto m_SaveLoadPanel = 0x308; // UPanelWidget*
		constexpr auto m_RevertPanel = 0x310; // UPanelWidget*
		constexpr auto m_UndoPanel = 0x318; // UPanelWidget*
		constexpr auto m_RedoPanel = 0x320; // UPanelWidget*
		constexpr auto m_pPresetPanel = 0x328; // UPanelWidget*
		constexpr auto m_pCategoryPanel = 0x330; // UPanelWidget*
		constexpr auto m_pComponentPanel = 0x338; // UPanelWidget*
		constexpr auto m_pSaveLoadWidget = 0x340; // UMM_Customizing_Save*
		constexpr auto m_pComponentListPanel = 0x348; // UMM_Customizing_Component*
		constexpr auto m_pComponentPalettePanel = 0x350; // UMM_Customizing_Palette*
		constexpr auto m_pSaveLoadLeftPanel = 0x358; // UPanelWidget*
		constexpr auto m_pTopPanel = 0x360; // UPanelWidget*
		constexpr auto m_pLeftTopPanel = 0x368; // UPanelWidget*
		constexpr auto m_pDetailControlButton = 0x370; // UButton*
		constexpr auto m_pCostumeDyeButton = 0x378; // UButton*
		constexpr auto m_pCostumeDyePanel = 0x380; // UWidget*
		constexpr auto m_pRevertButton = 0x388; // UMirButton*
		constexpr auto m_pTempSaveButton = 0x390; // UButton*
		constexpr auto m_pUndoButton = 0x398; // UMirButton*
		constexpr auto m_pRedoButton = 0x3a0; // UMirButton*
		constexpr auto m_pShowUIButton = 0x3a8; // UButton*
		constexpr auto m_pHideUIButton = 0x3b0; // UButton*
		constexpr auto m_pLookCameraImg = 0x3b8; // UMirButton*
		constexpr auto m_pUpStyleHairImg = 0x3c0; // UMirButton*
		constexpr auto m_pLookCameraBtn = 0x3c8; // UMirButton*
		constexpr auto m_pUpStyleHairBtn = 0x3d0; // UMirButton*
		constexpr auto m_pSaveLoadButton = 0x3d8; // UButton*
		constexpr auto m_pBackButton = 0x3e0; // UButton*
		constexpr auto m_pSaveButton = 0x3e8; // UButton*
		constexpr auto m_pLoadButton = 0x3f0; // UButton*
		constexpr auto m_pStyleBookButton = 0x3f8; // UButton*
		constexpr auto m_pScreenShootButton = 0x400; // UButton*
		constexpr auto m_pClassCreateButton = 0x408; // UMM_Common_Btn*
		constexpr auto m_pFaceJobButton = 0x410; // UMM_Common_Btn_Cost*
		constexpr auto m_pCreatePopup = 0x418; // UMM_Customizing_CreatePopup*
		constexpr auto m_pTitle = 0x420; // UMirTextBlock*
		constexpr auto Show_DetailControl = 0x428; // UWidgetAnimation*
		constexpr auto Hide_DetailControl = 0x430; // UWidgetAnimation*
		constexpr auto Show_DetailComponent = 0x438; // UWidgetAnimation*
		constexpr auto Hide_DetailComponent = 0x440; // UWidgetAnimation*
		constexpr auto Show_SaveLoad = 0x448; // UWidgetAnimation*
		constexpr auto Hide_SaveLoad = 0x450; // UWidgetAnimation*
	}

	namespace n_UMM_Popup_Occupation_Rank { // : UWidgetBase
		constexpr auto RankList = 0x2f0; // TArray<UMM_Occupation_Rank_List*>
		constexpr auto MyRankInfo = 0x300; // UMM_Occupation_Rank_List*
		constexpr auto btn_close = 0x308; // UMM_Common_Btn_Symbol*
		constexpr auto Btn_Ok = 0x310; // UMM_Common_Btn*
		constexpr auto Btn_Close_BG = 0x318; // UMirButton*
	}

	namespace n_UMM_Map_Party { // : UWidgetBase
		constexpr auto m_fRaderScale = 0x2e0; // float
		constexpr auto m_SpcMain = 0x300; // USpacer*
		constexpr auto m_ImgLeader = 0x308; // UImage*
		constexpr auto m_ImgMember = 0x310; // UImage*
		constexpr auto m_ImgIndex = 0x318; // UImage*
	}

	namespace n_UGeometryCacheComponent { // : UMeshComponent
		constexpr auto GeometryCache = 0x440; // UGeometryCache*
		constexpr auto bRunning = 0x448; // bool
		constexpr auto bLooping = 0x449; // bool
		constexpr auto StartTimeOffset = 0x44c; // float
		constexpr auto PlaybackSpeed = 0x450; // float
		constexpr auto NumTracks = 0x454; // int32_t
		constexpr auto ElapsedTime = 0x458; // float
		constexpr auto Duration = 0x48c; // float
		constexpr auto bManualTick = 0x490; // bool
	}

	namespace n_UMM_HudTargetSubMenu { // : UWidgetBase
		constexpr auto m_TargetType = 0x310; // int32_t
		constexpr auto m_StrID_Info = 0x314; // int32_t
		constexpr auto m_StrID_Talk = 0x318; // int32_t
		constexpr auto m_StrID_PartyInvite = 0x31c; // int32_t
		constexpr auto m_StrID_PartyKickout = 0x320; // int32_t
		constexpr auto m_StrID_Duel = 0x324; // int32_t
		constexpr auto m_StrID_Attack = 0x328; // int32_t
		constexpr auto m_pTextInfo = 0x330; // UMirTextBlock*
		constexpr auto m_pBtnInfo = 0x338; // UMirButton*
		constexpr auto m_pTextTalk = 0x340; // UMirTextBlock*
		constexpr auto m_pBtnTalk = 0x348; // UMirButton*
		constexpr auto m_pTextParty = 0x350; // UMirTextBlock*
		constexpr auto m_pBtnParty = 0x358; // UMirButton*
		constexpr auto m_pTextDuel = 0x360; // UMirTextBlock*
		constexpr auto m_pBtnDuel = 0x368; // UMirButton*
		constexpr auto m_pTextAttack = 0x370; // UMirTextBlock*
		constexpr auto m_pBtnAttack = 0x378; // UMirButton*
		constexpr auto m_pCanGuildMark = 0x380; // UCanvasPanel*
		constexpr auto m_pBtnGuildMark = 0x388; // UMirButton*
	}

	namespace n_UMM_Popup_GuildInvite { // : UWidgetBase
		constexpr auto btn_close = 0x2f0; // UMM_Common_Btn_Symbol*
		constexpr auto btn_search = 0x2f8; // UMM_Common_Btn_Symbol*
		constexpr auto btn_confirm = 0x300; // UMM_Common_Btn*
		constexpr auto btn_refresh = 0x308; // UMM_Common_Btn*
		constexpr auto sb_recommend = 0x310; // UMirScrollBox*
		constexpr auto notice = 0x318; // UMM_Common_Board_Notice*
		constexpr auto edit_txt_search = 0x320; // UMirEditableText*
		constexpr auto cp_invite = 0x328; // UMirCanvasPanel*
		constexpr auto cp_search = 0x330; // UMirCanvasPanel*
		constexpr auto btn_prev = 0x338; // UMM_Common_Btn_Symbol*
		constexpr auto btn_next = 0x340; // UMM_Common_Btn_Symbol*
		constexpr auto txt_page = 0x348; // UMirTextBlock*
		constexpr auto btn_search_cancel = 0x350; // UMM_Common_Btn*
		constexpr auto btn_confirm_search = 0x358; // UMM_Common_Btn*
	}

}