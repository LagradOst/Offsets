namespace off {
	constexpr auto GNames = 0x672d200;
	constexpr auto GObjects = 0x6759478;
	constexpr auto GWorld = 0x689be48;

	namespace n_UTexture2D {
		constexpr auto LevelIndex = 0xb8; // int32_t
		constexpr auto FirstResourceMemMip = 0xbc; // int32_t
		constexpr auto bTemporarilyDisableStreaming = 0xc0; // char : 1
		constexpr auto AddressX = 0xc1; // TextureAddress
		constexpr auto AddressY = 0xc2; // TextureAddress
		constexpr auto ImportedSize = 0xc4; // FIntPoint
	}

	namespace n_AGameModeBase {
		constexpr auto OptionsString = 0x220; // FString
		constexpr auto GameSessionClass = 0x230; // AGameSession*
		constexpr auto GameStateClass = 0x238; // AGameStateBase*
		constexpr auto PlayerControllerClass = 0x240; // APlayerController*
		constexpr auto PlayerStateClass = 0x248; // APlayerState*
		constexpr auto HUDClass = 0x250; // AHUD*
		constexpr auto DefaultPawnClass = 0x258; // APawn*
		constexpr auto SpectatorClass = 0x260; // ASpectatorPawn*
		constexpr auto ReplaySpectatorPlayerControllerClass = 0x268; // APlayerController*
		constexpr auto ServerStatReplicatorClass = 0x270; // AServerStatReplicator*
		constexpr auto GameSession = 0x278; // AGameSession*
		constexpr auto GameState = 0x280; // AGameStateBase*
		constexpr auto ServerStatReplicator = 0x288; // AServerStatReplicator*
		constexpr auto DefaultPlayerName = 0x290; // FText
		constexpr auto bUseSeamlessTravel = 0x2a8; // char : 1
		constexpr auto bStartPlayersAsSpectators = 0x2a8; // char : 1
		constexpr auto bPauseable = 0x2a8; // char : 1
	}

	namespace n_UKSGroundSpreadRule {
		constexpr auto GroundSpreadVectors = 0x28; // TArray<FVector>
	}

	namespace n_UKSActivityRewardCondition_DamageType {
		constexpr auto MatchingDamageTypes = 0x30; // TArray<UDamageType*>
	}

	namespace n_UWBP_RoguePrimaryWeaponSelectPanel_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto CategoryColumn_One = 0x528; // UVerticalBox*
		constexpr auto CategoryColumn_Two = 0x530; // UVerticalBox*
		constexpr auto CategoryOneCount_SinglePrimary = 0x538; // UTextBlock*
		constexpr auto CategoryOneCount_SinglePrimary_2 = 0x540; // UTextBlock*
		constexpr auto CategoryOneIcon_SinglePrimary = 0x548; // UWBP_AsyncIcon_C*
		constexpr auto CategoryOneIcon_SinglePrimary_2 = 0x550; // UWBP_AsyncIcon_C*
		constexpr auto CategoryOneName_SinglePrimary = 0x558; // UTextBlock*
		constexpr auto CategoryOneName_SinglePrimary_2 = 0x560; // UTextBlock*
		constexpr auto Image = 0x568; // UImage*
		constexpr auto Image_2 = 0x570; // UImage*
		constexpr auto Image_3 = 0x578; // UImage*
		constexpr auto Image_4483 = 0x580; // UImage*
		constexpr auto LockIcon = 0x588; // UImage*
		constexpr auto StatsContainerGrid = 0x590; // UGridPanel*
		constexpr auto TierInfoContainer = 0x598; // UVerticalBox*
		constexpr auto TooltipMasteryBadge = 0x5a0; // UWBP_WeaponMasteryBadge_C*
		constexpr auto WBP_RoguePanelHeader = 0x5a8; // UWBP_RoguePanelHeader_C*
		constexpr auto WBP_WeaponHubStatsEntry = 0x5b0; // UWBP_WeaponHubStatsEntry_C*
		constexpr auto WBP_WeaponHubStatsEntry_2 = 0x5b8; // UWBP_WeaponHubStatsEntry_C*
		constexpr auto WBP_WeaponHubStatsEntry_3 = 0x5c0; // UWBP_WeaponHubStatsEntry_C*
		constexpr auto WBP_WeaponHubStatsEntry_4 = 0x5c8; // UWBP_WeaponHubStatsEntry_C*
		constexpr auto WBP_WeaponHubStatsEntry_5 = 0x5d0; // UWBP_WeaponHubStatsEntry_C*
		constexpr auto WBP_WeaponHubStatsEntry_6 = 0x5d8; // UWBP_WeaponHubStatsEntry_C*
		constexpr auto WBP_WeaponHubUpgradeEntry = 0x5e0; // UWBP_WeaponHubUpgradeEntry_C*
		constexpr auto WBP_WeaponHubUpgradeEntry_2 = 0x5e8; // UWBP_WeaponHubUpgradeEntry_C*
		constexpr auto WBP_WeaponHubUpgradeEntry_3 = 0x5f0; // UWBP_WeaponHubUpgradeEntry_C*
		constexpr auto WBP_WeaponHubUpgradeEntry_4 = 0x5f8; // UWBP_WeaponHubUpgradeEntry_C*
		constexpr auto WBP_WeaponProgressButton = 0x600; // UWBP_WeaponProgressButton_C*
		constexpr auto WBP_WeaponProgressButton_2 = 0x608; // UWBP_WeaponProgressButton_C*
		constexpr auto WBP_WeaponProgressButton_3 = 0x610; // UWBP_WeaponProgressButton_C*
		constexpr auto WBP_WeaponProgressButton_4 = 0x618; // UWBP_WeaponProgressButton_C*
		constexpr auto WBP_WeaponProgressButton_5 = 0x620; // UWBP_WeaponProgressButton_C*
		constexpr auto WBP_WeaponProgressButton_6 = 0x628; // UWBP_WeaponProgressButton_C*
		constexpr auto WBP_WeaponProgressButton_7 = 0x630; // UWBP_WeaponProgressButton_C*
		constexpr auto WeaponCategory = 0x638; // UTextBlock*
		constexpr auto WeaponImage = 0x640; // UWBP_AsyncIcon_C*
		constexpr auto WeaponNameText = 0x648; // UTextBlock*
		constexpr auto WeaponUnlockTooltip = 0x650; // USizeBox*
		constexpr auto RogueDetailsWidget = 0x658; // UKSRogueDetailsWidget*
		constexpr auto NavigationParent = 0x660; // UKSWidget*
		constexpr auto FocusGroup = 0x668; // int32_t
		constexpr auto LocalJobItem = 0x670; // UKSJobItem*
		constexpr auto HoveredWeaponAsset = 0x678; // UKSWeaponAsset*
	}

	namespace n_USplineMeshComponent {
		constexpr auto SplineParams = 0x4f0; // FSplineMeshParams
		constexpr auto SplineUpDir = 0x548; // FVector
		constexpr auto SplineBoundaryMin = 0x554; // float
		constexpr auto CachedMeshBodySetupGuid = 0x558; // FGuid
		constexpr auto BodySetup = 0x568; // UBodySetup*
		constexpr auto SplineBoundaryMax = 0x570; // float
		constexpr auto bAllowSplineEditingPerInstance = 0x574; // char : 1
		constexpr auto bSmoothInterpRollScale = 0x574; // char : 1
		constexpr auto bMeshDirty = 0x574; // char : 1
		constexpr auto ForwardAxis = 0x575; // ESplineMeshAxis
		constexpr auto VirtualTextureMainPassMaxDrawDistance = 0x578; // float
	}

	namespace n_UWBP_CompareFoundersRow_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto StandardCheck = 0x240; // UOverlay*
		constexpr auto StarterCheck = 0x248; // UOverlay*
		constexpr auto TextSlot = 0x250; // UNamedSlot*
		constexpr auto InStarter = 0x258; // bool
		constexpr auto InStandard = 0x259; // bool
	}

	namespace n_UWBP_ItemInfoContainer_Description_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto Show = 0x240; // UWidgetAnimation*
		constexpr auto DescriptionWrapper = 0x248; // UVerticalBox*
		constexpr auto ItemDesc = 0x250; // UTextBlock*
		constexpr auto ItemInfoContainer = 0x258; // UVerticalBox*
		constexpr auto ItemNameField = 0x260; // UTextBlock*
		constexpr auto ItemRaritySwatch = 0x268; // UImage*
		constexpr auto LeftBGDimmer = 0x270; // UImage*
		constexpr auto LeftBGImage = 0x278; // UImage*
		constexpr auto NameWrapper = 0x280; // UOverlay*
		constexpr auto RarityRichText = 0x288; // URichTextBlock*
		constexpr auto RightBGDimmer = 0x290; // UImage*
		constexpr auto RightBGImage = 0x298; // UImage*
		constexpr auto TypeWrapper = 0x2a0; // UHorizontalBox*
		constexpr auto WBP_CosmeticItemTags = 0x2a8; // UWBP_CosmeticItemTags_C*
		constexpr auto Justification = 0x2b0; // ETextJustify
		constexpr auto bHideDesc = 0x2b1; // bool
	}

	namespace n_UMaterialExpressionBreakMaterialAttributes {
		constexpr auto MaterialAttributes = 0x40; // FMaterialAttributesInput
	}

	namespace n_UMaterialExpressionRuntimeVirtualTextureSampleParameter {
		constexpr auto ParameterName = 0x90; // FName
		constexpr auto ExpressionGUID = 0x98; // FGuid
		constexpr auto Group = 0xa8; // FName
	}

	namespace n_UParticleModuleKillHeight {
		constexpr auto Height = 0x30; // FRawDistributionFloat
		constexpr auto bAbsolute = 0x60; // char : 1
		constexpr auto bFloor = 0x60; // char : 1
		constexpr auto bApplyPSysScale = 0x60; // char : 1
	}

	namespace n_UNiagaraPreviewAxis_InterpParamFloat {
		constexpr auto Min = 0x38; // float
		constexpr auto Max = 0x3c; // float
	}

	namespace n_UKSProjWeaponTargetingModule {
		constexpr auto ProjectileSimFrequency = 0x148; // float
		constexpr auto MaxSimTime = 0x14c; // float
	}

	namespace n_UWeaponCollection {
		constexpr auto WeaponCollectionName = 0x98; // FText
		constexpr auto WeaponCollectionDescription = 0xb0; // FText
	}

	namespace n_UAnimSharingInstance {
		constexpr auto RegisteredActors = 0x28; // TArray<AActor*>
		constexpr auto StateProcessor = 0xa8; // UAnimationSharingStateProcessor*
		constexpr auto UsedAnimationSequences = 0xe8; // TArray<UAnimSequence*>
		constexpr auto StateEnum = 0x108; // UEnum*
		constexpr auto SharingActor = 0x110; // AActor*
	}

	namespace n_AFavoritePreviewActor_C {
		constexpr auto FavoritePreviewLoadout = 0x5c8; // UFavoritePreviewLoadoutComponent*
	}

	namespace n_UWBP_Checkbox02_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto Anim_OnHover = 0x528; // UWidgetAnimation*
		constexpr auto Anim_CheckboxActivate = 0x530; // UWidgetAnimation*
		constexpr auto background = 0x538; // UWidgetSwitcher*
		constexpr auto Check = 0x540; // UImage*
		constexpr auto HitTarget = 0x548; // UButton*
		constexpr auto Hovered = 0x550; // UImage*
		constexpr auto Image_195 = 0x558; // UImage*
		constexpr auto Unhovered = 0x560; // UImage*
		constexpr auto Checked = 0x568; // bool
		constexpr auto OnCheckChanged = 0x570; // FMulticastInlineDelegate
		constexpr auto HoverCheckboxSFX = 0x580; // UAkAudioEvent*
		constexpr auto ClickCheckboxSFX = 0x588; // UAkAudioEvent*
	}

	namespace n_ULandscapeComponent {
		constexpr auto SectionBaseX = 0x430; // int32_t
		constexpr auto SectionBaseY = 0x434; // int32_t
		constexpr auto ComponentSizeQuads = 0x438; // int32_t
		constexpr auto SubsectionSizeQuads = 0x43c; // int32_t
		constexpr auto NumSubsections = 0x440; // int32_t
		constexpr auto OverrideMaterial = 0x448; // UMaterialInterface*
		constexpr auto OverrideHoleMaterial = 0x450; // UMaterialInterface*
		constexpr auto OverrideMaterials = 0x458; // TArray<FLandscapeComponentMaterialOverride>
		constexpr auto MaterialInstances = 0x468; // TArray<UMaterialInstanceConstant*>
		constexpr auto MaterialInstancesDynamic = 0x478; // TArray<UMaterialInstanceDynamic*>
		constexpr auto LODIndexToMaterialIndex = 0x488; // TArray<int8_t>
		constexpr auto MaterialIndexToDisabledTessellationMaterial = 0x498; // TArray<int8_t>
		constexpr auto XYOffsetmapTexture = 0x4a8; // UTexture2D*
		constexpr auto WeightmapScaleBias = 0x4b0; // FVector4
		constexpr auto WeightmapSubsectionOffset = 0x4c0; // float
		constexpr auto HeightmapScaleBias = 0x4d0; // FVector4
		constexpr auto CachedLocalBox = 0x4e0; // FBox
		constexpr auto CollisionComponent = 0x4fc; // LazyObjectProperty
		constexpr auto HeightmapTexture = 0x518; // UTexture2D*
		constexpr auto WeightmapLayerAllocations = 0x520; // TArray<FWeightmapLayerAllocationInfo>
		constexpr auto WeightmapTextures = 0x530; // TArray<UTexture2D*>
		constexpr auto MapBuildDataId = 0x540; // FGuid
		constexpr auto IrrelevantLights = 0x550; // TArray<FGuid>
		constexpr auto CollisionMipLevel = 0x560; // int32_t
		constexpr auto SimpleCollisionMipLevel = 0x564; // int32_t
		constexpr auto NegativeZBoundsExtension = 0x568; // float
		constexpr auto PositiveZBoundsExtension = 0x56c; // float
		constexpr auto StaticLightingResolution = 0x570; // float
		constexpr auto ForcedLOD = 0x574; // int32_t
		constexpr auto LODBias = 0x578; // int32_t
		constexpr auto StateId = 0x57c; // FGuid
		constexpr auto BakedTextureMaterialGuid = 0x58c; // FGuid
		constexpr auto GIBakedBaseColorTexture = 0x5a0; // UTexture2D*
		constexpr auto MobileBlendableLayerMask = 0x5a8; // char
		constexpr auto MobileMaterialInterface = 0x5b0; // UMaterialInterface*
		constexpr auto MobileMaterialInterfaces = 0x5b8; // TArray<UMaterialInterface*>
		constexpr auto MobileWeightmapTextures = 0x5c8; // TArray<UTexture2D*>
	}

	namespace n_UViewDependentAkAudioEvent {
		constexpr auto Rules = 0x28; // UViewDependentAkEventRules*
		constexpr auto FirstPersonAkEventPlay = 0x30; // UAkAudioEvent*
		constexpr auto ThirdPersonAkEventPlay = 0x38; // UAkAudioEvent*
		constexpr auto FirstPersonAkEventStop = 0x40; // UAkAudioEvent*
		constexpr auto ThirdPersonAkEventStop = 0x48; // UAkAudioEvent*
	}

	namespace n_UPGame_PerformanceCaptureSettings {
		constexpr auto FOV = 0x28; // float
		constexpr auto StatsToCollect = 0x30; // TArray<FString>
		constexpr auto MapsToProfile = 0x40; // TArray<FString>
		constexpr auto StartingOffsetTime = 0x50; // float
		constexpr auto NumberOfSamples = 0x54; // int32_t
		constexpr auto TimeBetweenSamples = 0x58; // float
		constexpr auto Profiles = 0x60; // TArray<FPGame_PerformanceCaptureProfile>
	}

	namespace n_UInputBehaviorSet {
		constexpr auto Behaviors = 0x28; // TArray<FBehaviorInfo>
	}

	namespace n_UWBP_SidePanel_Left_C {
		constexpr auto PanelContent = 0x238; // UNamedSlot*
	}

	namespace n_UKSMapIconWidgetPool {
		constexpr auto PoolType = 0x28; // FString
		constexpr auto MapIconWidgets = 0x38; // TArray<UKSMapIconWidgetBase*>
	}

	namespace n_UKSContextMenuButton {
		constexpr auto ContextOption = 0x520; // EPlayerContextOptions
	}

	namespace n_UGraphNodeContextMenuContext {
		constexpr auto Blueprint = 0x28; // UBlueprint*
		constexpr auto Graph = 0x30; // UEdGraph*
		constexpr auto Node = 0x38; // UEdGraphNode*
		constexpr auto bIsDebugging = 0x48; // bool
	}

	namespace n_UInterpTrackInstVectorMaterialParam {
		constexpr auto MaterialInstances = 0x28; // TArray<UMaterialInstanceDynamic*>
		constexpr auto ResetVectors = 0x38; // TArray<FVector>
		constexpr auto PrimitiveMaterialRefs = 0x48; // TArray<FPrimitiveMaterialRef>
		constexpr auto InstancedTrack = 0x58; // UInterpTrackVectorMaterialParam*
	}

	namespace n_AEQSTestingPawn {
		constexpr auto QueryTemplate = 0x4c0; // UEnvQuery*
		constexpr auto QueryParams = 0x4c8; // TArray<FEnvNamedValue>
		constexpr auto QueryConfig = 0x4d8; // TArray<FAIDynamicParam>
		constexpr auto TimeLimitPerStep = 0x4e8; // float
		constexpr auto StepToDebugDraw = 0x4ec; // int32_t
		constexpr auto HighlightMode = 0x4f0; // EEnvQueryHightlightMode
		constexpr auto bDrawLabels = 0x4f4; // char : 1
		constexpr auto bDrawFailedItems = 0x4f4; // char : 1
		constexpr auto bReRunQueryOnlyOnFinishedMove = 0x4f4; // char : 1
		constexpr auto bShouldBeVisibleInGame = 0x4f4; // char : 1
		constexpr auto bTickDuringGame = 0x4f4; // char : 1
		constexpr auto QueryingMode = 0x4f8; // EEnvQueryRunMode
		constexpr auto NavAgentProperties = 0x500; // FNavAgentProperties
	}

	namespace n_UControlPointMeshComponent {
		constexpr auto VirtualTextureMainPassMaxDrawDistance = 0x4e8; // float
	}

	namespace n_UMultiLineEditableTextBox {
		constexpr auto Text = 0x130; // FText
		constexpr auto HintText = 0x148; // FText
		constexpr auto HintTextDelegate = 0x160; // FDelegate
		constexpr auto WidgetStyle = 0x170; // FEditableTextBoxStyle
		constexpr auto TextStyle = 0x960; // FTextBlockStyle
		constexpr auto bIsReadOnly = 0xbc8; // bool
		constexpr auto AllowContextMenu = 0xbc9; // bool
		constexpr auto VirtualKeyboardOptions = 0xbca; // FVirtualKeyboardOptions
		constexpr auto VirtualKeyboardDismissAction = 0xbcb; // EVirtualKeyboardDismissAction
		constexpr auto Style = 0xbd0; // USlateWidgetStyleAsset*
		constexpr auto Font = 0xbd8; // FSlateFontInfo
		constexpr auto ForegroundColor = 0xc28; // FLinearColor
		constexpr auto BackgroundColor = 0xc38; // FLinearColor
		constexpr auto ReadOnlyForegroundColor = 0xc48; // FLinearColor
		constexpr auto OnTextChanged = 0xc58; // FMulticastInlineDelegate
		constexpr auto OnTextCommitted = 0xc68; // FMulticastInlineDelegate
	}

	namespace n_UEnvironmentTrackerComponent {
		constexpr auto EnvironmentVolumes = 0xb0; // TArray<UObject*>
		constexpr auto CachedEnvironmentCounts = 0xc0; // TMap<FName, int32_t>
		constexpr auto CachedCurrentEnvironment = 0x110; // FName
		constexpr auto LastEnvironment = 0x118; // FName
		constexpr auto DefaultEnvironment = 0x120; // FName
		constexpr auto OnEnvironmentChanged = 0x128; // FMulticastInlineDelegate
	}

	namespace n_UKSActivityRewardCondition_RevealClass {
		constexpr auto MatchingRevealClasses = 0x30; // TArray<UObject*>
	}

	namespace n_UPUMG_CollectionDataFactory {
		constexpr auto OnCollectionAvatarsUpdated = 0x38; // FMulticastInlineDelegate
		constexpr auto OnCollectionAvatarAcquisition = 0x48; // FMulticastInlineDelegate
		constexpr auto CollectionAvatars = 0x58; // TArray<FPUMG_AvatarData>
	}

	namespace n_UInputKeyDelegateBinding {
		constexpr auto InputKeyDelegateBindings = 0x28; // TArray<FBlueprintInputKeyDelegateBinding>
	}

	namespace n_UKSPlayerMod_Undetectable {
		constexpr auto HiddenFromReveals = 0x330; // FKSPlayerModOverridePropertyStatBool
		constexpr auto HiddenOnRadar = 0x33c; // FKSPlayerModOverridePropertyStatBool
		constexpr auto HiddenFromRemoteExplosives = 0x348; // FKSPlayerModOverridePropertyStatBool
		constexpr auto HiddenFromThermal = 0x354; // FKSPlayerModOverridePropertyStatBool
		constexpr auto HiddenFromShotDetection = 0x360; // FKSPlayerModOverridePropertyStatBool
		constexpr auto HideFootprints = 0x36c; // FKSPlayerModOverridePropertyStatBool
		constexpr auto Camouflaged = 0x378; // FKSPlayerModOverridePropertyStatBool
		constexpr auto RevealTimeMultiplier = 0x384; // FKSPlayerModOverridePropertyStatFloat
	}

	namespace n_AKSRefillZone {
		constexpr auto ReequipWeaponsTypeQuery = 0x228; // FGameplayTagQuery
		constexpr auto ReloadWeaponsTypeQuery = 0x270; // FGameplayTagQuery
		constexpr auto AbilityChargeToRestore = 0x2b8; // int32_t
		constexpr auto HealthToRestore = 0x2bc; // float
		constexpr auto bRefundAllShopPurchases = 0x2c0; // bool
		constexpr auto InteractTime = 0x2c4; // float
		constexpr auto InteractionType = 0x2c8; // UKSInteractionType*
		constexpr auto InteractionMode = 0x2d0; // FName
		constexpr auto bCanInteractFromBehind = 0x2d8; // bool
		constexpr auto bForceLOS = 0x2d9; // bool
		constexpr auto InteractPromptText = 0x2e0; // FText
		constexpr auto CurrentZoneUsers = 0x2f8; // TSet<AKSCharacter*>
		constexpr auto InteractionBlockerManager = 0x348; // UKSInteractionBlockerManager*
		constexpr auto InteractableComponent = 0x350; // UKSInteractableComponent*
	}

	namespace n_ASpotLight {
		constexpr auto SpotLightComponent = 0x230; // USpotLightComponent*
	}

	namespace n_UInterpTrackFloatParticleParam {
		constexpr auto ParamName = 0x90; // FName
	}

	namespace n_UBakedOcclusionLUT {
		constexpr auto LUT = 0x28; // TSet<uint32_t>
		constexpr auto OctreeSampleMap = 0x78; // TArray<uint16_t>
		constexpr auto OctreeLocations = 0x88; // TArray<FIntVector>
	}

	namespace n_UAREnvironmentCaptureProbe {
		constexpr auto EnvironmentCaptureTexture = 0xf8; // UAREnvironmentCaptureProbeTexture*
	}

	namespace n_UFavoritePreviewLoadoutComponent {
		constexpr auto FailSafeFavoriteJob = 0x120; // TSoftObjectPtr<UKSJobItem>
	}

	namespace n_UGameplayTagsManager {
		constexpr auto TagSources = 0xc0; // TArray<FGameplayTagSource>
		constexpr auto GameplayTagTables = 0x1b0; // TArray<UDataTable*>
	}

	namespace n_USourceEffectPhaserPreset {
		constexpr auto Settings = 0x78; // FSourceEffectPhaserSettings
	}

	namespace n_UBodySetup {
		constexpr auto AggGeom = 0x28; // FKAggregateGeom
		constexpr auto BoneName = 0x80; // FName
		constexpr auto PhysicsType = 0x88; // EPhysicsType
		constexpr auto bAlwaysFullAnimWeight = 0x89; // char : 1
		constexpr auto bConsiderForBounds = 0x89; // char : 1
		constexpr auto bMeshCollideAll = 0x89; // char : 1
		constexpr auto bDoubleSidedGeometry = 0x89; // char : 1
		constexpr auto bGenerateNonMirroredCollision = 0x89; // char : 1
		constexpr auto bSharedCookedData = 0x89; // char : 1
		constexpr auto bGenerateMirroredCollision = 0x89; // char : 1
		constexpr auto bSupportUVsAndFaceRemap = 0x89; // char : 1
		constexpr auto CollisionReponse = 0x8b; // EBodyCollisionResponse
		constexpr auto CollisionTraceFlag = 0x8c; // ECollisionTraceFlag
		constexpr auto PhysMaterial = 0x90; // UPhysicalMaterial*
		constexpr auto WalkableSlopeOverride = 0x98; // FWalkableSlopeOverride
		constexpr auto DefaultInstance = 0x120; // FBodyInstance
		constexpr auto BuildScale3D = 0x238; // FVector
	}

	namespace n_UKSDynamicMaskComponent {
		constexpr auto DynamicMaskRenderTarget = 0xb0; // UTextureRenderTarget2D*
		constexpr auto TargetDimPixels = 0xb8; // int32_t
		constexpr auto EmptyColor = 0xbc; // FLinearColor
		constexpr auto FillColor = 0xcc; // FLinearColor
		constexpr auto ConversionBasisComponent = 0xe0; // USceneComponent*
		constexpr auto WorldToTargetScaleX = 0xe8; // float
		constexpr auto WorldToTargetScaleY = 0xec; // float
	}

	namespace n_UChaosDestructionListener {
		constexpr auto bIsCollisionEventListeningEnabled = 0x208; // char : 1
		constexpr auto bIsBreakingEventListeningEnabled = 0x208; // char : 1
		constexpr auto bIsTrailingEventListeningEnabled = 0x208; // char : 1
		constexpr auto CollisionEventRequestSettings = 0x20c; // FChaosCollisionEventRequestSettings
		constexpr auto BreakingEventRequestSettings = 0x224; // FChaosBreakingEventRequestSettings
		constexpr auto TrailingEventRequestSettings = 0x23c; // FChaosTrailingEventRequestSettings
		constexpr auto ChaosSolverActors = 0x258; // TSet<AChaosSolverActor*>
		constexpr auto GeometryCollectionActors = 0x2a8; // TSet<AGeometryCollectionActor*>
		constexpr auto OnCollisionEvents = 0x2f8; // FMulticastInlineDelegate
		constexpr auto OnBreakingEvents = 0x308; // FMulticastInlineDelegate
		constexpr auto OnTrailingEvents = 0x318; // FMulticastInlineDelegate
	}

	namespace n_UKSBTTask_SelectEvadePoint {
		constexpr auto EvadePointKey = 0x70; // FBlackboardKeySelector
		constexpr auto SensesToUse = 0x98; // TArray<UAISense*>
		constexpr auto PerceptionFilter = 0xa8; // FKSPerceptionFilter
		constexpr auto Distance = 0x298; // float
	}

	namespace n_UWBP_ChallengeEntry_Seasonal_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto Hover = 0x528; // UWidgetAnimation*
		constexpr auto ActiveContractWrapper = 0x530; // USizeBox*
		constexpr auto bkg = 0x538; // UImage*
		constexpr auto ChallengeTitle = 0x540; // UTextBlock*
		constexpr auto ComingSoonText = 0x548; // UTextBlock*
		constexpr auto CompletedText_2 = 0x550; // UTextBlock*
		constexpr auto CompleteIcon = 0x558; // USizeBox*
		constexpr auto HeaderWrapper = 0x560; // USizeBox*
		constexpr auto HitTarget = 0x568; // UButton*
		constexpr auto HoverBkg = 0x570; // UImage*
		constexpr auto Image_2 = 0x578; // UImage*
		constexpr auto LockIcon = 0x580; // UImage*
		constexpr auto ProgressText = 0x588; // UTextBlock*
		constexpr auto ProgressTextSwitcher = 0x590; // UWidgetSwitcher*
		constexpr auto SelectionFrame = 0x598; // UImage*
		constexpr auto StatusIcon = 0x5a0; // UWidgetSwitcher*
		constexpr auto WBP_ChallengeEntry_CardHorizontal = 0x5a8; // UWBP_ChallengeEntry_CardHorizontal_C*
		constexpr auto WBP_PipProgressWidget = 0x5b0; // UWBP_PipProgressWidget_C*
		constexpr auto CurrentVisualState = 0x5b8; // EChallengeEntry_Card_State
		constexpr auto WeekTableRowName = 0x5bc; // FName
		constexpr auto CurrentActivitySequence = 0x5c8; // FActivitySequenceRow
		constexpr auto OnWeekGamepadHovered = 0x5f8; // FMulticastInlineDelegate
	}

	namespace n_ASphereReflectionCapture {
		constexpr auto DrawCaptureRadius = 0x228; // UDrawSphereComponent*
	}

	namespace n_UKSBTD_IsApproachingFall {
		constexpr auto LookAheadDistance = 0x68; // float
		constexpr auto FallDistance = 0x6c; // float
	}

	namespace n_UWBP_CustomGameLobby_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto ActionLog = 0x528; // UWBP_CustomGameActionLog_C*
		constexpr auto Blocker = 0x530; // UButton*
		constexpr auto ContextMenu = 0x538; // UWBP_PlayerContextMenu_C*
		constexpr auto GameName = 0x540; // UWBP_Subtitle_C*
		constexpr auto Image = 0x548; // UImage*
		constexpr auto Image_2 = 0x550; // UImage*
		constexpr auto Image_112 = 0x558; // UImage*
		constexpr auto Image_379 = 0x560; // UImage*
		constexpr auto Image_498 = 0x568; // UImage*
		constexpr auto JoiningButton = 0x570; // UWBP_StandardButtonLarge_C*
		constexpr auto Loading = 0x578; // UWBP_ThrobberHorizontal_C*
		constexpr auto LoadingState = 0x580; // USizeBox*
		constexpr auto LoadingWrapper = 0x588; // UVerticalBox*
		constexpr auto LobbyState = 0x590; // UHorizontalBox*
		constexpr auto LobbySwitcher = 0x598; // UWidgetSwitcher*
		constexpr auto SpectateButton = 0x5a0; // UWBP_StandardButtonLarge_C*
		constexpr auto Spectator = 0x5a8; // UVerticalBox*
		constexpr auto SpectatorContainer = 0x5b0; // UVerticalBox*
		constexpr auto StartButton = 0x5b8; // UWBP_StandardButtonLarge_C*
		constexpr auto StartGameSwitcher = 0x5c0; // UWidgetSwitcher*
		constexpr auto TeamA = 0x5c8; // UVerticalBox*
		constexpr auto TeamB = 0x5d0; // UVerticalBox*
		constexpr auto Title = 0x5d8; // UWBP_Header1_C*
		constexpr auto VoiceActivity = 0x5e0; // UWBP_VoiceActivityContainer_C*
		constexpr auto WarningIcon = 0x5e8; // UImage*
		constexpr auto WarningMessage = 0x5f0; // UTextBlock*
		constexpr auto WarningWrapper = 0x5f8; // UHorizontalBox*
		constexpr auto WBP_GameModeInfoPanel_Lobby = 0x600; // UWBP_GameModeInfoPanel_Lobby_C*
		constexpr auto TeamDataMap = 0x608; // TMap<int32_t, FFBP_CustomMatchTeam>
		constexpr auto DataChangeTimer = 0x658; // FTimerHandle
		constexpr auto FmtAdded = 0x660; // FText
		constexpr auto FmtRemoved = 0x678; // FText
		constexpr auto FmtPromoted = 0x690; // FText
		constexpr auto FmtDemoted = 0x6a8; // FText
		constexpr auto FmtInvited = 0x6c0; // FText
		constexpr auto FmtMovedTeam = 0x6d8; // FText
		constexpr auto PendingLogs = 0x6f0; // TMap<UKSPlayerInfo*, FFBP_CustomPendingLogEntry>
		constexpr auto FmtLobbyCreated = 0x740; // FText
		constexpr auto TEMP_Invites = 0x758; // TArray<UPUMG_PlayerInfo*>
		constexpr auto FmtGameName = 0x768; // FText
		constexpr auto ShowCustomGameLobbySFX = 0x780; // UAkAudioEvent*
		constexpr auto FocusGroup_TeamsAndButtons = 0x788; // int32_t
		constexpr auto FocusGroup_ContextMenu = 0x78c; // int32_t
		constexpr auto MembersPopulated = 0x790; // bool
		constexpr auto MaxSpectators = 0x794; // int32_t
	}

	namespace n_UMovieScene3DConstraintTrack {
		constexpr auto ConstraintSections = 0x58; // TArray<UMovieSceneSection*>
	}

	namespace n_UAudioCurveSourceComponent {
		constexpr auto CurveSourceBindingName = 0x7f0; // FName
		constexpr auto CurveSyncOffset = 0x7f8; // float
	}

	namespace n_UKSWeaponAsset {
		constexpr auto ItemDisplayStatParamsTable = 0x250; // UDataTable*
		constexpr auto WeaponDisplayName = 0x258; // FText
		constexpr auto WeaponDescription = 0x270; // FText
		constexpr auto WeaponEquipType = 0x288; // EKSWeaponEquipType
		constexpr auto WeaponClass = 0x290; // TSoftClassPtr<UObject>
		constexpr auto WeaponComponentClass = 0x2b8; // TSoftClassPtr<UObject>
		constexpr auto WeaponAmmoWidgetClass = 0x2e0; // TSoftClassPtr<UObject>
		constexpr auto WeaponDropClass = 0x308; // TSoftClassPtr<UObject>
		constexpr auto bUnique = 0x330; // bool
		constexpr auto bShouldBeRemovedWhenExhausted = 0x331; // bool
		constexpr auto bCanBeDropped = 0x332; // bool
		constexpr auto bWillDropWhenDowned = 0x333; // bool
		constexpr auto bForceUprightDrops = 0x334; // bool
		constexpr auto bDoesRestoreAmmo = 0x335; // bool
		constexpr auto bModsCanReplenishAmmo = 0x336; // bool
		constexpr auto bDoLocalReveals = 0x337; // bool
		constexpr auto bCanEverFire = 0x338; // bool
		constexpr auto bLagCompensatedFire = 0x339; // bool
		constexpr auto bIgnoreNoFire = 0x33a; // bool
		constexpr auto bLimitNumInPlay = 0x33b; // bool
		constexpr auto MaxNumInPlay = 0x33c; // int32_t
		constexpr auto bLimitDeployablesByPlayer = 0x340; // bool
		constexpr auto PlayerDeployableThreshold = 0x344; // int32_t
		constexpr auto bShowReserveAmmo = 0x348; // bool
		constexpr auto bUsesEquipPoint = 0x349; // bool
		constexpr auto bUsesEquipSlot = 0x34a; // bool
		constexpr auto ValidEquipPoints = 0x350; // FGameplayTagContainer
		constexpr auto FireModeType = 0x370; // EFireModeType
		constexpr auto CastType = 0x371; // EWeaponCastType
		constexpr auto RoundsPerBurst = 0x374; // int32_t
		constexpr auto bUseAltFire = 0x378; // bool
		constexpr auto bUseBuildupForCooking = 0x379; // bool
		constexpr auto BuildupTime = 0x37c; // float
		constexpr auto PreFireTime = 0x380; // float
		constexpr auto PreFireInterruptThreshold = 0x384; // float
		constexpr auto AltPreFireTime = 0x388; // float
		constexpr auto PostFireTime = 0x38c; // float
		constexpr auto AltPostFireTime = 0x390; // float
		constexpr auto PostFireForgivenessTime = 0x394; // float
		constexpr auto bSwapAfterFire = 0x398; // bool
		constexpr auto CooldownTime = 0x39c; // float
		constexpr auto bUseChargingFireRate = 0x3a0; // bool
		constexpr auto InitialPostFireTime = 0x3a4; // float
		constexpr auto FinalPostFireTime = 0x3a8; // float
		constexpr auto PostFireChargeTime = 0x3ac; // float
		constexpr auto PostFireDecayTime = 0x3b0; // float
		constexpr auto PostFireDecayDelay = 0x3b4; // float
		constexpr auto bCanEverReload = 0x3b8; // bool
		constexpr auto bConsumeAmmoDirectlyFromInventory = 0x3b9; // bool
		constexpr auto ClipSize = 0x3bc; // int32_t
		constexpr auto ReloadType = 0x3c0; // EReloadType
		constexpr auto PreReloadTime = 0x3c4; // float
		constexpr auto PostReloadTime = 0x3c8; // float
		constexpr auto ReloadCooldownTime = 0x3cc; // float
		constexpr auto bReloadOnEmptyWhileScoped = 0x3d0; // bool
		constexpr auto FirstShotPreReloadTime = 0x3d4; // float
		constexpr auto bCanInterruptPreReload = 0x3d8; // bool
		constexpr auto AmmoType = 0x3d9; // EAmmoType
		constexpr auto DefaultAmmo = 0x3dc; // int32_t
		constexpr auto bUnlimitedAmmo = 0x3e0; // bool
		constexpr auto bMuteEmptyClipWarnings = 0x3e1; // bool
		constexpr auto HolsterTime = 0x3e4; // float
		constexpr auto bShouldRestrictHolsterInPostFire = 0x3e8; // bool
		constexpr auto RetriveTime = 0x3ec; // float
		constexpr auto bCanFireFromRetrieve = 0x3f0; // bool
		constexpr auto ReticleType = 0x3f1; // EReticleType
		constexpr auto bFadeUIOnAim = 0x3f2; // bool
		constexpr auto WeaponStateGraph = 0x3f8; // FWeaponStateGraph
		constexpr auto bDoRadialDamage = 0x538; // bool
		constexpr auto bIsRadialDamageConical = 0x539; // bool
		constexpr auto HeadDamageAmount = 0x53c; // float
		constexpr auto DamageAmount = 0x540; // float
		constexpr auto LimbDamageAmount = 0x544; // float
		constexpr auto DamageFalloffCurve = 0x548; // FInterpCurveFloat
		constexpr auto RadialDamageParams = 0x560; // FRadialDamageParams
		constexpr auto bIgnoreFriendlies = 0x574; // bool
		constexpr auto bIgnoreSelf = 0x575; // bool
		constexpr auto bIgnoreWalls = 0x576; // bool
		constexpr auto RadialConicalHalfAngle = 0x578; // float
		constexpr auto DamageTypeClass = 0x580; // TSoftClassPtr<UObject>
		constexpr auto CautionRadius = 0x5a8; // float
		constexpr auto ShotPenetrationCount = 0x5ac; // int32_t
		constexpr auto DefaultAimTransitionTime = 0x5b0; // float
		constexpr auto bCanEverAimOverShoulder = 0x5b4; // bool
		constexpr auto AimOverShoulderTransitionTime = 0x5b8; // float
		constexpr auto bCanEverAimDownSights = 0x5bc; // bool
		constexpr auto AimDownSightsTransitionTime = 0x5c0; // float
		constexpr auto bLockoutAimStateInCooldown = 0x5c4; // bool
		constexpr auto AimDownSightsFov = 0x5c8; // float
		constexpr auto bCanEverAimAlternate = 0x5cc; // bool
		constexpr auto AimAlternateTransitionTime = 0x5d0; // float
		constexpr auto bPrefireLockon = 0x5d4; // bool
		constexpr auto PrefireLockonAngle = 0x5d8; // float
		constexpr auto PrefireLockonDistance = 0x5dc; // float
		constexpr auto bLimitCameraRotation = 0x5e0; // bool
		constexpr auto MinCameraPitch = 0x5e4; // float
		constexpr auto MaxCameraPitch = 0x5e8; // float
		constexpr auto MinCameraYaw = 0x5ec; // float
		constexpr auto MaxCameraYaw = 0x5f0; // float
		constexpr auto bOverrideShoulderCameraProperties = 0x5f4; // bool
		constexpr auto ShoulderCameraBoomLength = 0x5f8; // float
		constexpr auto ShoulderCameraSocketOffset = 0x5fc; // FVector
		constexpr auto ShoulderCameraTargetOffset = 0x608; // FVector
		constexpr auto ShoulderCameraTransform = 0x620; // FTransform
		constexpr auto bIsMountedWeapon = 0x650; // bool
		constexpr auto bAllowsManualShoulderSwap = 0x651; // bool
		constexpr auto ForcedShoulder = 0x652; // ECameraShoulder
		constexpr auto bUseCrouchAOSCamVertOffset = 0x653; // bool
		constexpr auto GamepadTurnSpeedMultiplier = 0x654; // float
		constexpr auto GamepadAimedTurnSpeedMultiplier = 0x658; // float
		constexpr auto bPrefireOverlapSkipsToFire = 0x65c; // bool
		constexpr auto PrefireSkipWindows = 0x660; // TArray<FPrefireSkipWindow>
		constexpr auto PrefireOverlapGracePeriod = 0x670; // float
		constexpr auto ThirdPersonAimOriginType = 0x674; // EThirdPersonAimOriginType
		constexpr auto ThirdPersonFixedRelativeOffset = 0x678; // FVector
		constexpr auto ThirdPersonAimOriginSocketName = 0x684; // FName
		constexpr auto BaseAccuracy = 0x68c; // float
		constexpr auto CrouchAccuracyModifier = 0x690; // float
		constexpr auto AimOverShoulderAccuracyModifier = 0x694; // float
		constexpr auto InAirAccuracyModifier = 0x698; // float
		constexpr auto MovementAccuracyPenalty = 0x69c; // float
		constexpr auto bUseAccuracyLoss = 0x6a0; // bool
		constexpr auto AccuracyLossPerShot = 0x6a4; // float
		constexpr auto MaxFiringAccuracyLoss = 0x6a8; // float
		constexpr auto AccuracyReturnRate = 0x6ac; // float
		constexpr auto AccuracyGainPerShot = 0x6b0; // float
		constexpr auto MaxFiringAccuracyGain = 0x6b4; // float
		constexpr auto MaxAimedFiringAccuracyGain = 0x6b8; // float
		constexpr auto AccuracyDecayRate = 0x6bc; // float
		constexpr auto AccuracyReturnDelay = 0x6c0; // float
		constexpr auto MaxHipFireAccuracy = 0x6c4; // float
		constexpr auto MaxAimedAccuracy = 0x6c8; // float
		constexpr auto KickbackModule = 0x6d0; // UKickbackModule*
		constexpr auto KickbackApplicationTimeOverride = 0x6d8; // float
		constexpr auto bCanResetKickback = 0x6dc; // bool
		constexpr auto KickbackResetTime = 0x6e0; // float
		constexpr auto bUseKickbackRecovery = 0x6e4; // bool
		constexpr auto KickbackRecoveryDelay = 0x6e8; // float
		constexpr auto KickbackRecoveryRate = 0x6ec; // float
		constexpr auto KickbackRecoveryAcceleration = 0x6f0; // float
		constexpr auto MaxCumulativeKickbackVerticalAngle = 0x6f4; // float
		constexpr auto GamepadKickbackScaling = 0x6f8; // float
		constexpr auto SprintRecoveryTime = 0x6fc; // float
		constexpr auto bStartFireInterruptsSprinting = 0x700; // bool
		constexpr auto bStartReloadInterruptsSprinting = 0x701; // bool
		constexpr auto bStartHolsterInterruptsSprinting = 0x702; // bool
		constexpr auto DodgeRollRecoveryTime = 0x704; // float
		constexpr auto bShouldPreventDodgeRollDuringFire = 0x708; // bool
		constexpr auto bCanFireWhileInPowerSlide = 0x709; // bool
		constexpr auto bCanUseWhileOnZipline = 0x70a; // bool
		constexpr auto bIsAudible = 0x70b; // bool
		constexpr auto AudibleRange = 0x70c; // float
		constexpr auto WalkSpeedModifier = 0x710; // float
		constexpr auto ADSSpeedModifier = 0x714; // float
		constexpr auto FiringSpeedModifier = 0x718; // float
		constexpr auto bCanUseOffGround = 0x71c; // bool
		constexpr auto ValidWeaponAttachmentPoints = 0x720; // FGameplayTagContainer
		constexpr auto ValidAttachments = 0x740; // TSet<TSoftObjectPtr<UKSWeaponAttachment>>
		constexpr auto AttachmentSlotCount = 0x790; // int32_t
		constexpr auto AuxiliaryWeapons = 0x798; // TMap<FName, TSoftObjectPtr<UKSWeaponAsset>>
		constexpr auto VibrationEffect = 0x7e8; // TSoftObjectPtr<UForceFeedbackEffect>
		constexpr auto AlternativeVibrationEffect = 0x810; // TSoftObjectPtr<UForceFeedbackEffect>
		constexpr auto AlternativeVibrationAttenuation = 0x838; // TSoftObjectPtr<UForceFeedbackAttenuation>
		constexpr auto RumbleEvent = 0x860; // UAkAudioEvent*
		constexpr auto WeaponUpgrade = 0x868; // TSoftObjectPtr<UKSWeaponAsset>
		constexpr auto ItemRenderImage = 0x890; // TSoftObjectPtr<UTexture2D>
		constexpr auto ADSRollMultiplier = 0x8b8; // float
		constexpr auto ADSBumpStartStopMultiplier = 0x8bc; // float
		constexpr auto ADSBumpLoopingMultiplier = 0x8c0; // float
		constexpr auto ADSBlurValuesInfo = 0x8c8; // FADSBlurValues
	}

	namespace n_UKSTimerComponent {
		constexpr auto TimerActive = 0xb0; // FMulticastInlineDelegate
		constexpr auto TimerComplete = 0xc0; // FMulticastInlineDelegate
		constexpr auto ReplicatedTimer = 0xd0; // FPGame_ReplicatedTimer
		constexpr auto TimerState = 0x108; // FKSTimerState
		constexpr auto LocalTimerState = 0x110; // FKSTimerState
	}

	namespace n_AKSWeapon_RemoteThrowAndTrigger {
		constexpr auto bUseSequentialDetonation = 0x870; // bool
		constexpr auto AltFireSubWeaponName = 0x874; // FName
	}

	namespace n_UWBP_EventMissionSelect_C {
		constexpr auto UberGraphFrame = 0x4c0; // FPointerToUberGraphFrame
		constexpr auto Anim_OnShown = 0x4c8; // UWidgetAnimation*
		constexpr auto ActivateMissionButton = 0x4d0; // UWBP_StandardButtonMedium_C*
		constexpr auto Border = 0x4d8; // UImage*
		constexpr auto Credit_Counter = 0x4e0; // UTextBlock*
		constexpr auto ExclusiveMissionsGrid = 0x4e8; // UUniformGridPanel*
		constexpr auto Image = 0x4f0; // UImage*
		constexpr auto Image_64 = 0x4f8; // UImage*
		constexpr auto Image_341 = 0x500; // UImage*
		constexpr auto Image_405 = 0x508; // UImage*
		constexpr auto Image_500 = 0x510; // UImage*
		constexpr auto MissionButtonWrapper = 0x518; // UOverlay*
		constexpr auto MissionPanel = 0x520; // UWBP_PanelDefault_C*
		constexpr auto RichTextBlock = 0x528; // URichTextBlock*
		constexpr auto RichTextBlock_137 = 0x530; // URichTextBlock*
		constexpr auto RichTextBlock_353 = 0x538; // URichTextBlock*
		constexpr auto RunwayPortrait = 0x540; // UImage*
		constexpr auto ScanLines = 0x548; // UImage*
		constexpr auto StandardMissionsGrid = 0x550; // UUniformGridPanel*
		constexpr auto WBP_EventMissionItem = 0x558; // UWBP_EventMissionItem_C*
		constexpr auto WBP_EventMissionItem_2 = 0x560; // UWBP_EventMissionItem_C*
		constexpr auto WBP_EventMissionItem_3 = 0x568; // UWBP_EventMissionItem_C*
		constexpr auto WBP_EventMissionItem_4 = 0x570; // UWBP_EventMissionItem_C*
		constexpr auto WBP_EventMissionItem_5 = 0x578; // UWBP_EventMissionItem_C*
		constexpr auto WBP_EventMissionItem_6 = 0x580; // UWBP_EventMissionItem_C*
		constexpr auto WBP_EventMissionItem_7 = 0x588; // UWBP_EventMissionItem_C*
		constexpr auto WBP_EventMissionItem_8 = 0x590; // UWBP_EventMissionItem_C*
		constexpr auto WBP_EventMissionItem_9 = 0x598; // UWBP_EventMissionItem_C*
		constexpr auto WBP_EventMissionItem_10 = 0x5a0; // UWBP_EventMissionItem_C*
		constexpr auto WBP_EventMissionItem_11 = 0x5a8; // UWBP_EventMissionItem_C*
		constexpr auto WBP_EventMissionItem_12 = 0x5b0; // UWBP_EventMissionItem_C*
		constexpr auto WBP_EventMissionItem_13 = 0x5b8; // UWBP_EventMissionItem_C*
		constexpr auto WBP_EventMissionItem_14 = 0x5c0; // UWBP_EventMissionItem_C*
		constexpr auto WBP_EventMissionItem_15 = 0x5c8; // UWBP_EventMissionItem_C*
		constexpr auto WBP_EventMissionItem_16 = 0x5d0; // UWBP_EventMissionItem_C*
		constexpr auto WBP_Header1 = 0x5d8; // UWBP_Header1_C*
		constexpr auto WBP_ModalPopupContainer = 0x5e0; // UWBP_ModalPopupContainer_C*
		constexpr auto WBP_StandardButton_Currency = 0x5e8; // UWBP_StandardButton_Currency_C*
		constexpr auto ChallengeActivityInstances = 0x5f0; // TArray<UKSActivityInstance*>
		constexpr auto FocusedActivityInstance = 0x600; // UKSActivityInstance*
		constexpr auto FocusedActivityWidget = 0x608; // UWBP_EventMissionItem_C*
		constexpr auto PlayerDataFactory = 0x610; // UKSPlayerDataFactory*
	}

	namespace n_USoundfieldSubmix {
		constexpr auto SoundfieldEncodingFormat = 0x40; // FName
		constexpr auto EncodingSettings = 0x48; // USoundfieldEncodingSettingsBase*
		constexpr auto SoundfieldEffectChain = 0x50; // TArray<USoundfieldEffectBase*>
		constexpr auto EncodingSettingsClass = 0x60; // USoundfieldEncodingSettingsBase*
	}

	namespace n_ARadialForceActor {
		constexpr auto ForceComponent = 0x220; // URadialForceComponent*
	}

	namespace n_APGame_GameState {
		constexpr auto r_SonyMatchIdForPlayerFeedback = 0x290; // FString
	}

	namespace n_UMaterialExpressionParameter {
		constexpr auto ParameterName = 0x40; // FName
		constexpr auto ExpressionGUID = 0x48; // FGuid
	}

	namespace n_UKSBTTask_LookInDirection {
		constexpr auto DirectionKey = 0x70; // FBlackboardKeySelector
		constexpr auto LookRotationRate = 0x98; // float
	}

	namespace n_UKSItemDataTable {
		constexpr auto DirectoriesToScan = 0xc8; // TArray<FString>
		constexpr auto ItemClassesToFilter = 0xd8; // TArray<UKSItem*>
	}

	namespace n_UWBP_CustomizeBanner_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto ShowAnim = 0x528; // UWidgetAnimation*
		constexpr auto ItemContainer = 0x530; // UKSSortableGridPanel*
		constexpr auto ScrollBox_1 = 0x538; // UScrollBox*
		constexpr auto WBP_CosmeticItem_Banner = 0x540; // UWBP_CosmeticItem_Banner_C*
		constexpr auto WBP_CosmeticItem_Banner_2 = 0x548; // UWBP_CosmeticItem_Banner_C*
		constexpr auto WBP_CosmeticItem_Banner_3 = 0x550; // UWBP_CosmeticItem_Banner_C*
		constexpr auto WBP_CosmeticItem_Banner_4 = 0x558; // UWBP_CosmeticItem_Banner_C*
		constexpr auto WBP_CosmeticItem_Banner_5 = 0x560; // UWBP_CosmeticItem_Banner_C*
		constexpr auto WBP_CosmeticItem_Banner_6 = 0x568; // UWBP_CosmeticItem_Banner_C*
		constexpr auto WBP_CosmeticItem_Banner_7 = 0x570; // UWBP_CosmeticItem_Banner_C*
		constexpr auto WBP_CosmeticItem_Banner_8 = 0x578; // UWBP_CosmeticItem_Banner_C*
		constexpr auto WBP_PlayerIDCustomize = 0x580; // UWBP_PlayerIDCustomize_C*
		constexpr auto BannerItems = 0x588; // TArray<UWBP_CosmeticItem_Banner_C*>
		constexpr auto EquippedBanner = 0x598; // UWBP_CosmeticItem_Banner_C*
		constexpr auto LoadoutDataFactory = 0x5a0; // UKSLoadoutDataFactory*
		constexpr auto HoveredItem = 0x5a8; // UPlatformInventoryItem*
		constexpr auto VisibleGridRows = 0x5b0; // int32_t
		constexpr auto VisibleGridColumns = 0x5b4; // int32_t
	}

	namespace n_UContextActionData {
		constexpr auto RowName = 0x30; // FName
		constexpr auto FormatAdditive = 0x38; // FText
		constexpr auto RowData = 0x50; // FContextAction
		constexpr auto OnContextAction = 0xa0; // FDelegate
		constexpr auto OnCycleAction = 0xb0; // FDelegate
		constexpr auto OnHoldActionUpdate = 0xc0; // FDelegate
		constexpr auto OnHoldReleaseAction = 0xd0; // FDelegate
	}

	namespace n_AKSLobbyCameraActor {
		constexpr auto CameraTag = 0x800; // FName
	}

	namespace n_UKSActivityRewardCondition_Revive {
		constexpr auto IsBeingRevived = 0x30; // bool
	}

	namespace n_ASmoothRepTimelineActor {
		constexpr auto SmoothTimeline = 0x220; // FTimelineSimulationHandler
		constexpr auto TimelineComponentToSimulate = 0x238; // UTimelineComponent*
	}

	namespace n_UKSSettingsColorOptionsAsset {
		constexpr auto ColorOptions = 0x30; // TArray<FColorOptions>
	}

	namespace n_UNiagaraDataInterfaceParticleRead {
		constexpr auto EmitterName = 0x30; // FString
	}

	namespace n_USlateBrushAsset {
		constexpr auto Brush = 0x28; // FSlateBrush
	}

	namespace n_USoundNodeEnveloper {
		constexpr auto LoopStart = 0x48; // float
		constexpr auto LoopEnd = 0x4c; // float
		constexpr auto DurationAfterLoop = 0x50; // float
		constexpr auto LoopCount = 0x54; // int32_t
		constexpr auto bLoopIndefinitely = 0x58; // char : 1
		constexpr auto bLoop = 0x58; // char : 1
		constexpr auto VolumeInterpCurve = 0x60; // UDistributionFloatConstantCurve*
		constexpr auto PitchInterpCurve = 0x68; // UDistributionFloatConstantCurve*
		constexpr auto VolumeCurve = 0x70; // FRuntimeFloatCurve
		constexpr auto PitchCurve = 0xf8; // FRuntimeFloatCurve
		constexpr auto PitchMin = 0x180; // float
		constexpr auto PitchMax = 0x184; // float
		constexpr auto VolumeMin = 0x188; // float
		constexpr auto VolumeMax = 0x18c; // float
	}

	namespace n_UInterpTrackAkAudioEvent {
		constexpr auto Events = 0x90; // TArray<FAkAudioEventTrackKey>
		constexpr auto bContinueEventOnMatineeEnd = 0xa0; // char : 1
	}

	namespace n_UAIDataProvider_QueryParams {
		constexpr auto ParamName = 0x28; // FName
		constexpr auto FloatValue = 0x30; // float
		constexpr auto IntValue = 0x34; // int32_t
		constexpr auto BoolValue = 0x38; // bool
	}

	namespace n_UPGame_Effect {
		constexpr auto m_Property = 0x28; // FPGame_Property
		constexpr auto m_bApplyOnInternal = 0x4c; // bool
	}

	namespace n_UKSEquipmentManagerComponent {
		constexpr auto EquippedInventory = 0xb0; // TMap<FGameplayTag, AKSEquipment*>
		constexpr auto SlotlessInventory = 0x150; // TArray<AKSEquipment*>
		constexpr auto MultiUseEquipPoints = 0x160; // FGameplayTagContainer
		constexpr auto EquipmentManagerOwner = 0x180; // TScriptInterface<IKSEquipmentManagerOwner>
		constexpr auto OnEquipmentAddedDel = 0x190; // FMulticastInlineDelegate
		constexpr auto OnEquipmentRemovedDel = 0x1b8; // FMulticastInlineDelegate
		constexpr auto EmoteCooldownExpireTime = 0x208; // float
		constexpr auto QuipCooldownExpireTime = 0x20c; // float
		constexpr auto CommunicationCooldownExpireTime = 0x210; // float
		constexpr auto RadialMenuItemCooldownExpireTime = 0x214; // float
	}

	namespace n_UEndMatchCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_APhysicsVolume {
		constexpr auto TerminalVelocity = 0x258; // float
		constexpr auto Priority = 0x25c; // int32_t
		constexpr auto FluidFriction = 0x260; // float
		constexpr auto bWaterVolume = 0x264; // char : 1
		constexpr auto bPhysicsOnContact = 0x264; // char : 1
	}

	namespace n_UKSModInst_PilotOnActivation {
		constexpr auto RepossessionDelay = 0x478; // float
		constexpr auto VehicleDestroyDelay = 0x47c; // float
		constexpr auto bDisplayTransitionPPE = 0x480; // bool
		constexpr auto TransitionPPE = 0x488; // FKSSpecialEffect
		constexpr auto bDisplayFadeOnUnpossessCharacter = 0x4d8; // bool
		constexpr auto FadeOnUnpossessDuration = 0x4dc; // float
		constexpr auto bRestrictCharacterRotation = 0x4e0; // bool
		constexpr auto bShouldCrouchOnActivation = 0x4e1; // bool
		constexpr auto ModsToGive = 0x4e8; // TArray<UKSPlayerMod*>
		constexpr auto SpawnedVehicle = 0x508; // AKSVehicleBase*
		constexpr auto bIsVehiclePossessed = 0x510; // bool
		constexpr auto DeployableActors = 0x518; // TArray<AActor*>
	}

	namespace n_UWBP_QueueSelection_RegionSelectButton_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto Image_229 = 0x528; // UImage*
		constexpr auto PromptImage = 0x530; // UImage*
		constexpr auto PromptImageWrapper = 0x538; // USizeBox*
		constexpr auto SelectedRegion = 0x540; // UTextBlock*
		constexpr auto WBP_StandardButtonMedium = 0x548; // UWBP_StandardButtonMedium_C*
		constexpr auto RegionSelectRequested = 0x550; // FMulticastInlineDelegate
		constexpr auto ActiveAsButton = 0x560; // bool
		constexpr auto CachedInputState = 0x561; // PGAME_INPUT_STATE
		constexpr auto ClickInputChangeRegionSelBtnSFX = 0x568; // UAkAudioEvent*
	}

	namespace n_UMaterialExpressionDecalMipmapLevel {
		constexpr auto TextureSize = 0x40; // FExpressionInput
		constexpr auto ConstWidth = 0x54; // float
		constexpr auto ConstHeight = 0x58; // float
	}

	namespace n_UReverbEffect {
		constexpr auto Density = 0x28; // float
		constexpr auto Diffusion = 0x2c; // float
		constexpr auto Gain = 0x30; // float
		constexpr auto GainHF = 0x34; // float
		constexpr auto DecayTime = 0x38; // float
		constexpr auto DecayHFRatio = 0x3c; // float
		constexpr auto ReflectionsGain = 0x40; // float
		constexpr auto ReflectionsDelay = 0x44; // float
		constexpr auto LateGain = 0x48; // float
		constexpr auto LateDelay = 0x4c; // float
		constexpr auto AirAbsorptionGainHF = 0x50; // float
		constexpr auto RoomRolloffFactor = 0x54; // float
	}

	namespace n_UKSActivityRewardCondition_Backfilling {
		constexpr auto bCheckIsBackfilling = 0x30; // bool
	}

	namespace n_UMovieSceneTrack {
		constexpr auto EvalOptions = 0x50; // FMovieSceneTrackEvalOptions
		constexpr auto bIsEvalDisabled = 0x55; // bool
	}

	namespace n_UKSBTD_ShouldCrouchAtPoint {
		constexpr auto PointKey = 0x68; // FBlackboardKeySelector
	}

	namespace n_UInterpTrackInstAkAudioEvent {
		constexpr auto LastUpdatePosition = 0x28; // float
	}

	namespace n_UInterpGroupInst {
		constexpr auto Group = 0x28; // UInterpGroup*
		constexpr auto GroupActor = 0x30; // AActor*
		constexpr auto TrackInst = 0x38; // TArray<UInterpTrackInst*>
	}

	namespace n_UMovieSceneCameraAnimTrack {
		constexpr auto CameraAnimSections = 0x58; // TArray<UMovieSceneSection*>
	}

	namespace n_AKSIngressPoint {
		constexpr auto RelevantObjective = 0x258; // AKSObjectiveBase*
		constexpr auto AssignedBot = 0x260; // AActor*
	}

	namespace n_AWheeledVehicle {
		constexpr auto Mesh = 0x280; // USkeletalMeshComponent*
		constexpr auto VehicleMovement = 0x288; // UWheeledVehicleMovementComponent*
	}

	namespace n_UKSBTD_CanActivateAbility {
		constexpr auto Ability = 0x68; // TSoftObjectPtr<UKSPlayerMod>
	}

	namespace n_UKSPlayerMod_AbilityRechargeSpeed {
		constexpr auto AbilityRechargeSpeedMultiplier = 0x330; // float
	}

	namespace n_UInteractiveGizmoManager {
		constexpr auto ActiveGizmos = 0x30; // TArray<FActiveGizmo>
		constexpr auto GizmoBuilders = 0x58; // TMap<FString, UInteractiveGizmoBuilder*>
	}

	namespace n_UWBP_VerticalTabGroupEntry_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto animOnGamepadUnfocus = 0x528; // UWidgetAnimation*
		constexpr auto animOnSelect = 0x530; // UWidgetAnimation*
		constexpr auto animOnGamepadSelect = 0x538; // UWidgetAnimation*
		constexpr auto animOnFocus = 0x540; // UWidgetAnimation*
		constexpr auto animOnHover = 0x548; // UWidgetAnimation*
		constexpr auto BackCallout = 0x550; // UWBP_KeyCallout_C*
		constexpr auto BackIcon = 0x558; // UImage*
		constexpr auto BackIconGroup = 0x560; // UOverlay*
		constexpr auto BottomStroke = 0x568; // UImage*
		constexpr auto EndBarDecro = 0x570; // UImage*
		constexpr auto EndBarDecroSizeBox = 0x578; // USizeBox*
		constexpr auto GamepadSelectedGradient = 0x580; // UImage*
		constexpr auto HitTarget = 0x588; // UButton*
		constexpr auto NameText = 0x590; // UTextBlock*
		constexpr auto SelectCallout = 0x598; // UWBP_KeyCallout_C*
		constexpr auto SelectCalloutContainer = 0x5a0; // UOverlay*
		constexpr auto SelectedGradient = 0x5a8; // UImage*
		constexpr auto SimpleBg = 0x5b0; // UImage*
		constexpr auto CurrentViewState = 0x5b8; // EVerticalTabState
		constexpr auto OnTabSelected = 0x5c0; // FMulticastInlineDelegate
		constexpr auto OnTabGamepadSelected = 0x5d0; // FMulticastInlineDelegate
		constexpr auto ViewName = 0x5e0; // FName
		constexpr auto ViewInfo = 0x5e8; // FOverlayTabViewRow
		constexpr auto HoverSound = 0x618; // UAkAudioEvent*
		constexpr auto ClickSound = 0x620; // UAkAudioEvent*
	}

	namespace n_UNiagaraComponentPool {
		constexpr auto WorldParticleSystemPools = 0x28; // TMap<UNiagaraSystem*, FNCPool>
	}

	namespace n_URedeemCodeScreen_C {
		constexpr auto UberGraphFrame = 0x538; // FPointerToUberGraphFrame
		constexpr auto CodeEntry = 0x540; // UWBP_RedeemCodeField_C*
		constexpr auto CodeRedemption = 0x548; // UHorizontalBox*
		constexpr auto ErrorLabel = 0x550; // UTextBlock*
		constexpr auto PendingOverlay = 0x558; // UBorder*
		constexpr auto SelectPrompt = 0x560; // UImage*
		constexpr auto SubmitButton = 0x568; // UWBP_StandardButtonMedium_C*
		constexpr auto WBP_Header1 = 0x570; // UWBP_Header1_C*
		constexpr auto WBP_ModalPopupContainer = 0x578; // UWBP_ModalPopupContainer_C*
		constexpr auto ColorPalette = 0x580; // UDataTable*
		constexpr auto SpamPreventTimer = 0x588; // FTimerHandle
		constexpr auto FocusGroup_NoInteraction = 0x590; // int32_t
		constexpr auto FocusGroup_Input = 0x594; // int32_t
		constexpr auto CharacterLimit = 0x598; // int32_t
	}

	namespace n_UWBP_BonusTypeEntry_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto EventName = 0x240; // UTextBlock*
		constexpr auto Image_154 = 0x248; // UImage*
		constexpr auto WBP_AsyncIcon = 0x250; // UWBP_AsyncIcon_C*
		constexpr auto EventDetails = 0x258; // FKSLimitedTimeEventMetadataRow
	}

	namespace n_UWBP_WeaponHubUpgradeEntry_C {
		constexpr auto Description = 0x238; // UTextBlock*
		constexpr auto Image_221 = 0x240; // UImage*
		constexpr auto PurchaseCost = 0x248; // UTextBlock*
		constexpr auto UpgradeName = 0x250; // UTextBlock*
	}

	namespace n_AFavoriteLobbyCharacter_C {
		constexpr auto UberGraphFrame = 0x3ec8; // FPointerToUberGraphFrame
		constexpr auto WidgetNameplate = 0x3ed0; // UWidgetComponent*
		constexpr auto NeedsToSetNameplate = 0x3ed8; // bool
		constexpr auto PendingPlayerInfo = 0x3ee0; // UKSPlayerInfo*
	}

	namespace n_UKSBTTask_SelectDefensePoint {
		constexpr auto DefensePointActorKey = 0x70; // FBlackboardKeySelector
	}

	namespace n_UAISystem {
		constexpr auto PerceptionSystemClassName = 0x58; // FSoftClassPath
		constexpr auto HotSpotManagerClassName = 0x70; // FSoftClassPath
		constexpr auto AcceptanceRadius = 0x88; // float
		constexpr auto PathfollowingRegularPathPointAcceptanceRadius = 0x8c; // float
		constexpr auto PathfollowingNavLinkAcceptanceRadius = 0x90; // float
		constexpr auto bFinishMoveOnGoalOverlap = 0x94; // bool
		constexpr auto bAcceptPartialPaths = 0x95; // bool
		constexpr auto bAllowStrafing = 0x96; // bool
		constexpr auto bEnableBTAITasks = 0x97; // bool
		constexpr auto bAllowControllersAsEQSQuerier = 0x98; // bool
		constexpr auto bEnableDebuggerPlugin = 0x99; // bool
		constexpr auto bForgetStaleActors = 0x9a; // bool
		constexpr auto DefaultSightCollisionChannel = 0x9b; // ECollisionChannel
		constexpr auto BehaviorTreeManager = 0xa0; // UBehaviorTreeManager*
		constexpr auto EnvironmentQueryManager = 0xa8; // UEnvQueryManager*
		constexpr auto PerceptionSystem = 0xb0; // UAIPerceptionSystem*
		constexpr auto AllProxyObjects = 0xb8; // TArray<UAIAsyncTaskBlueprintProxy*>
		constexpr auto HotSpotManager = 0xc8; // UAIHotSpotManager*
		constexpr auto NavLocalGrids = 0xd0; // UNavLocalGridManager*
	}

	namespace n_USub_Hero_ABP_PowerSlide_C {
		constexpr auto AnimGraphNode_Root = 0x10f0; // FAnimNode_Root
		constexpr auto AnimGraphNode_TransitionResult_10 = 0x1130; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_9 = 0x1168; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_8 = 0x11a0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_7 = 0x11d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_6 = 0x1210; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_5 = 0x1248; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_4 = 0x1280; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_3 = 0x12b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0x12f0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_5 = 0x1378; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_StateResult_7 = 0x14d8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x1518; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_4 = 0x15a0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_StateResult_6 = 0x1700; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x1740; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_3 = 0x17c8; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_StateResult_5 = 0x1928; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequenceSkinned_2 = 0x1968; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x1ac8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_4 = 0x1b50; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer = 0x1b90; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned = 0x1c18; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_StateResult_3 = 0x1d78; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_2 = 0x1db8; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x1e78; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult = 0x1eb0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_LocalToComponentSpace_6 = 0x1ee8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_6 = 0x1f18; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_5 = 0x2030; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_4 = 0x2148; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_6 = 0x2260; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto KSAnimGraphNode_SpeedWarp_2 = 0x2290; // FKSAnimNode_SpeedWarp
		constexpr auto AnimGraphNode_BlendSpacePlayer_15 = 0x23c0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpaceSkinned_15 = 0x24b0; // FAnimNode_BlendSpacePlayerSkinned
		constexpr auto AnimGraphNode_BlendSpacePlayer_14 = 0x26b0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpaceSkinned_14 = 0x27a0; // FAnimNode_BlendSpacePlayerSkinned
		constexpr auto AnimGraphNode_BlendSpacePlayer_13 = 0x29a0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpaceSkinned_13 = 0x2a90; // FAnimNode_BlendSpacePlayerSkinned
		constexpr auto AnimGraphNode_BlendSpacePlayer_12 = 0x2c90; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpaceSkinned_12 = 0x2d80; // FAnimNode_BlendSpacePlayerSkinned
		constexpr auto AnimGraphNode_BlendSpacePlayer_11 = 0x2f80; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpaceSkinned_11 = 0x3070; // FAnimNode_BlendSpacePlayerSkinned
		constexpr auto AnimGraphNode_BlendSpacePlayer_10 = 0x3270; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpaceSkinned_10 = 0x3360; // FAnimNode_BlendSpacePlayerSkinned
		constexpr auto AnimGraphNode_BlendSpacePlayer_9 = 0x3560; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpaceSkinned_9 = 0x3650; // FAnimNode_BlendSpacePlayerSkinned
		constexpr auto AnimGraphNode_BlendSpacePlayer_8 = 0x3850; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpaceSkinned_8 = 0x3940; // FAnimNode_BlendSpacePlayerSkinned
		constexpr auto AnimGraphNode_BlendSpacePlayer_7 = 0x3b40; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpaceSkinned_7 = 0x3c30; // FAnimNode_BlendSpacePlayerSkinned
		constexpr auto AnimGraphNode_BlendSpacePlayer_6 = 0x3e30; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpaceSkinned_6 = 0x3f20; // FAnimNode_BlendSpacePlayerSkinned
		constexpr auto AnimGraphNode_BlendSpacePlayer_5 = 0x4120; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpaceSkinned_5 = 0x4210; // FAnimNode_BlendSpacePlayerSkinned
		constexpr auto AnimGraphNode_BlendSpacePlayer_4 = 0x4410; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpaceSkinned_4 = 0x4500; // FAnimNode_BlendSpacePlayerSkinned
		constexpr auto AnimGraphNode_BlendListByEnum_6 = 0x4700; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_5 = 0x47c0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_4 = 0x4880; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_3 = 0x4940; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_2 = 0x4a00; // FAnimNode_BlendListByEnum
		constexpr auto KSAnimGraphNode_OrientationWarp_5 = 0x4ac0; // FKSAnimNode_OrientationWarp
		constexpr auto KSAnimGraphNode_OrientationWarp_4 = 0x4be0; // FKSAnimNode_OrientationWarp
		constexpr auto KSAnimGraphNode_OrientationWarp_3 = 0x4d00; // FKSAnimNode_OrientationWarp
		constexpr auto AnimGraphNode_LocalToComponentSpace_5 = 0x4e20; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_4 = 0x4e50; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_3 = 0x4e80; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_2 = 0x4eb0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto KSAnimGraphNode_OrientationWarp_2 = 0x4ee0; // FKSAnimNode_OrientationWarp
		constexpr auto AnimGraphNode_ComponentToLocalSpace_5 = 0x5000; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_4 = 0x5030; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_3 = 0x5060; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_2 = 0x5090; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_StateResult_2 = 0x50c0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_3 = 0x5100; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpaceSkinned_3 = 0x51f0; // FAnimNode_BlendSpacePlayerSkinned
		constexpr auto AnimGraphNode_BlendSpacePlayer_2 = 0x53f0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpaceSkinned_2 = 0x54e0; // FAnimNode_BlendSpacePlayerSkinned
		constexpr auto AnimGraphNode_BlendSpacePlayer = 0x56e0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpaceSkinned = 0x57d0; // FAnimNode_BlendSpacePlayerSkinned
		constexpr auto AnimGraphNode_BlendListByEnum = 0x59d0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_ModifyBone_3 = 0x5a90; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_2 = 0x5ba8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone = 0x5cc0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x5dd8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto KSAnimGraphNode_SpeedWarp = 0x5e08; // FKSAnimNode_SpeedWarp
		constexpr auto KSAnimGraphNode_OrientationWarp = 0x5f38; // FKSAnimNode_OrientationWarp
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x6058; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_StateResult = 0x6088; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x60c8; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_BlendListByBool = 0x6188; // FAnimNode_BlendListByBool
		constexpr auto Character = 0x6238; // AKSCharacter*
		constexpr auto bIsInPowerSlideBP = 0x6240; // bool
		constexpr auto ExitPowerSlideBlendTime = 0x6244; // float
		constexpr auto ForceResetSlide = 0x6248; // bool
		constexpr auto K2Node_Event_EndReason = 0x6249; // EKSPowerSlideEndReason
		constexpr auto K2Node_SwitchEnum_CmpSuccess = 0x624a; // bool
		constexpr auto K2Node_DynamicCast_AsKSCharacter = 0x6250; // AKSCharacter*
		constexpr auto K2Node_DynamicCast_bSuccess = 0x6258; // bool
	}

	namespace n_UNiagaraEventReceiverEmitterAction_SpawnParticles {
		constexpr auto NumParticles = 0x28; // uint32_t
	}

	namespace n_UKSTeamEvaluator {
		constexpr auto bMatchUnaffiliated = 0x28; // bool
		constexpr auto bMatchEnemyTeams = 0x29; // bool
		constexpr auto bMatchSameTeam = 0x2a; // bool
	}

	namespace n_UWBP_WeaponHubCosmeticItem_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto animOnHover = 0x528; // UWidgetAnimation*
		constexpr auto BtnBkg = 0x530; // UImage*
		constexpr auto BtnBkgHover = 0x538; // UImage*
		constexpr auto BtnFrame = 0x540; // UImage*
		constexpr auto buttonwrapper = 0x548; // UOverlay*
		constexpr auto Click = 0x550; // UImage*
		constexpr auto HitTarget = 0x558; // UButton*
		constexpr auto ItemDisplay = 0x560; // UWBP_KSCosmeticItemDisplay_C*
		constexpr auto ItemInfo = 0x568; // UWBP_ItemInfoContainer_C*
		constexpr auto Root = 0x570; // UHorizontalBox*
		constexpr auto onSelected = 0x578; // FMulticastInlineDelegate
	}

	namespace n_UTireType {
		constexpr auto FrictionScale = 0x30; // float
	}

	namespace n_UTestMovieSceneSubTrack {
		constexpr auto SectionArray = 0x68; // TArray<UMovieSceneSection*>
	}

	namespace n_UMovieSceneCapture {
		constexpr auto ImageCaptureProtocolType = 0x38; // FSoftClassPath
		constexpr auto AudioCaptureProtocolType = 0x50; // FSoftClassPath
		constexpr auto ImageCaptureProtocol = 0x68; // UMovieSceneImageCaptureProtocolBase*
		constexpr auto AudioCaptureProtocol = 0x70; // UMovieSceneAudioCaptureProtocolBase*
		constexpr auto Settings = 0x78; // FMovieSceneCaptureSettings
		constexpr auto bUseSeparateProcess = 0xe8; // bool
		constexpr auto bCloseEditorWhenCaptureStarts = 0xe9; // bool
		constexpr auto AdditionalCommandLineArguments = 0xf0; // FString
		constexpr auto InheritedCommandLineArguments = 0x100; // FString
	}

	namespace n_UUserInterfaceSettings {
		constexpr auto RenderFocusRule = 0x38; // ERenderFocusRule
		constexpr auto HardwareCursors = 0x40; // TMap<EMouseCursor, FHardwareCursorReference>
		constexpr auto SoftwareCursors = 0x90; // TMap<EMouseCursor, FSoftClassPath>
		constexpr auto DefaultCursor = 0xe0; // FSoftClassPath
		constexpr auto TextEditBeamCursor = 0xf8; // FSoftClassPath
		constexpr auto CrosshairsCursor = 0x110; // FSoftClassPath
		constexpr auto HandCursor = 0x128; // FSoftClassPath
		constexpr auto GrabHandCursor = 0x140; // FSoftClassPath
		constexpr auto GrabHandClosedCursor = 0x158; // FSoftClassPath
		constexpr auto SlashedCircleCursor = 0x170; // FSoftClassPath
		constexpr auto ApplicationScale = 0x188; // float
		constexpr auto UIScaleRule = 0x18c; // EUIScalingRule
		constexpr auto CustomScalingRuleClass = 0x190; // FSoftClassPath
		constexpr auto UIScaleCurve = 0x1a8; // FRuntimeFloatCurve
		constexpr auto bAllowHighDPIInGameMode = 0x230; // bool
		constexpr auto bLoadWidgetsOnDedicatedServer = 0x231; // bool
		constexpr auto CursorClasses = 0x238; // TArray<UObject*>
		constexpr auto CustomScalingRuleClassInstance = 0x248; // UObject*
		constexpr auto CustomScalingRule = 0x250; // UDPICustomScalingRule*
	}

	namespace n_UDynamicSkinTable {
		constexpr auto ActiveDataTables = 0x28; // TArray<FDataTableInfo>
		constexpr auto InactiveDataTables = 0x38; // TArray<FDataTableInfo>
		constexpr auto OnFinishedAllPendingLoadsDel = 0x48; // FMulticastInlineDelegate
		constexpr auto bWantsToBeRecycled = 0x278; // char : 1
		constexpr auto SkinTagAsset = 0x280; // TScriptInterface<ISkinTagAssetInterface>
	}

	namespace n_UANotifyState_DisablesHandIK_C {
		constexpr auto LeftHand Disable = 0x30; // bool
		constexpr auto RightHand Disable = 0x31; // bool
		constexpr auto Left Hand IK Blend Speed = 0x32; // ESpeed
		constexpr auto Right Hand IK Blend Speed = 0x33; // ESpeed
	}

	namespace n_UKSBorder {
		constexpr auto SmallBorderIcon = 0x250; // TSoftObjectPtr<UTexture2D>
		constexpr auto SmallBorderIconInfo = 0x278; // UIconInfo*
		constexpr auto LargeBorderIcon = 0x280; // TSoftObjectPtr<UTexture2D>
		constexpr auto LargeBorderIconInfo = 0x2a8; // UIconInfo*
	}

	namespace n_UMovieSceneEnumSection {
		constexpr auto EnumCurve = 0xe0; // FMovieSceneByteChannel
	}

	namespace n_UMaterialExpressionTextureNumMips {
		constexpr auto TextureObject = 0x50; // FExpressionInput
	}

	namespace n_UMovieSceneCameraCutSection {
		constexpr auto CameraGuid = 0xe0; // FGuid
		constexpr auto CameraBindingID = 0xf0; // FMovieSceneObjectBindingID
	}

	namespace n_UKSMediaPlayerWidget {
		constexpr auto MediaPlayerPlaylistEntries = 0x520; // UDataTable*
		constexpr auto bOnlyWatchFirstEntry = 0x538; // bool
	}

	namespace n_UWBP_ProgressionCardSlot_MercMasteryXP_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto OnLevelUp_Enhanced_2 = 0x240; // UWidgetAnimation*
		constexpr auto OnLevelUp_Enhanced = 0x248; // UWidgetAnimation*
		constexpr auto OnLevelUp_2 = 0x250; // UWidgetAnimation*
		constexpr auto OnLevelUp = 0x258; // UWidgetAnimation*
		constexpr auto Block01 = 0x260; // UImage*
		constexpr auto Block02 = 0x268; // UImage*
		constexpr auto Block03 = 0x270; // UImage*
		constexpr auto Block04 = 0x278; // UImage*
		constexpr auto Block05 = 0x280; // UImage*
		constexpr auto Block06 = 0x288; // UImage*
		constexpr auto Block07 = 0x290; // UImage*
		constexpr auto Block08 = 0x298; // UImage*
		constexpr auto Category = 0x2a0; // UTextBlock*
		constexpr auto Flare01 = 0x2a8; // UImage*
		constexpr auto Flare02 = 0x2b0; // UImage*
		constexpr auto Flare03 = 0x2b8; // UImage*
		constexpr auto Flare04 = 0x2c0; // UImage*
		constexpr auto Flare05 = 0x2c8; // UImage*
		constexpr auto Flare06 = 0x2d0; // UImage*
		constexpr auto Glow01 = 0x2d8; // UImage*
		constexpr auto Glow02 = 0x2e0; // UImage*
		constexpr auto Glow02_2 = 0x2e8; // UImage*
		constexpr auto Particles01 = 0x2f0; // UImage*
		constexpr auto PointsEarned = 0x2f8; // UTextBlock*
		constexpr auto RankChangeText = 0x300; // UTextBlock*
		constexpr auto RogueMasteryFrame = 0x308; // UWBP_RogueMasteryPortrait_C*
		constexpr auto Scanlines01 = 0x310; // UImage*
		constexpr auto TextGlow01 = 0x318; // UImage*
		constexpr auto WBP_ProgressionTally_C_1 = 0x320; // UWBP_ProgressionTally_C*
		constexpr auto XPProgressEarnedBar = 0x328; // UWBP_ProgressEarnedBar_C*
		constexpr auto OnMercLevelUp = 0x330; // FMulticastInlineDelegate
		constexpr auto PlayerProgress = 0x340; // FPlayerProgression
	}

	namespace n_UWBP_RoundRecap_Entry_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto BG_Enemy = 0x240; // UImage*
		constexpr auto BG_Friendly = 0x248; // UImage*
		constexpr auto Eliminated_Enemy = 0x250; // UImage*
		constexpr auto Eliminated_Friendly = 0x258; // UImage*
		constexpr auto IconSwitcher_Enemy = 0x260; // UWidgetSwitcher*
		constexpr auto IconSwitcher_Friendly = 0x268; // UWidgetSwitcher*
		constexpr auto Objective_Enemy = 0x270; // UImage*
		constexpr auto Objective_Friendly = 0x278; // UImage*
		constexpr auto RoundLabelText_Enemy = 0x280; // UTextBlock*
		constexpr auto RoundLabelText_Friendly = 0x288; // UTextBlock*
		constexpr auto TimeExpired_Enemy = 0x290; // UImage*
		constexpr auto TimeExpired_Friendly = 0x298; // UImage*
		constexpr auto WinStroke_Enemy = 0x2a0; // UWBP_BoxStroke_C*
		constexpr auto WinStroke_Friendly = 0x2a8; // UWBP_BoxStroke_C*
		constexpr auto FriendlyTeamWin = 0x2b0; // bool
		constexpr auto RoundName = 0x2b8; // FText
		constexpr auto RoundEndReason = 0x2d0; // E_RoundEndReason
	}

	namespace n_UWBP_PostMatchLobby_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto ShowRankedChangeScreen = 0x528; // UWidgetAnimation*
		constexpr auto ShowScreen_Defeat = 0x530; // UWidgetAnimation*
		constexpr auto ShowScreen_Victory = 0x538; // UWidgetAnimation*
		constexpr auto ShowScreen = 0x540; // UWidgetAnimation*
		constexpr auto Blocker = 0x548; // UButton*
		constexpr auto ContentWrapper = 0x550; // UOverlay*
		constexpr auto ContextMenu = 0x558; // UWBP_PlayerContextMenu_C*
		constexpr auto GamepadBumperLeft = 0x560; // UOverlay*
		constexpr auto GamepadBumperRight = 0x568; // UOverlay*
		constexpr auto MatchEventBonuses = 0x570; // UWBP_AppliedEvents_C*
		constexpr auto MatchIDContainer = 0x578; // UVerticalBox*
		constexpr auto MatchIdDisplay = 0x580; // UTextBlock*
		constexpr auto NavButton_MatchSummary = 0x588; // UWBP_PostMatchNavButton_C*
		constexpr auto NavButton_Progression = 0x590; // UWBP_PostMatchNavButton_C*
		constexpr auto NavButton_Scoreboard = 0x598; // UWBP_PostMatchNavButton_C*
		constexpr auto NavigationContainer = 0x5a0; // UHorizontalBox*
		constexpr auto Overlay_Progression = 0x5a8; // UCanvasPanel*
		constexpr auto Overlay_Scoreboard = 0x5b0; // UOverlay*
		constexpr auto Progression = 0x5b8; // UWBP_Progression_C*
		constexpr auto ReportMenu = 0x5c0; // UReportMenu_C*
		constexpr auto ScoreboardOverview = 0x5c8; // UScoreboardOverview_C*
		constexpr auto SecondaryInstanceIdDisplay = 0x5d0; // UTextBlock*
		constexpr auto TabLeftButtonImage = 0x5d8; // UImage*
		constexpr auto TabRightButtonImage = 0x5e0; // UImage*
		constexpr auto TeamStatus = 0x5e8; // UTextBlock*
		constexpr auto TimePlayedMessage = 0x5f0; // UTextBlock*
		constexpr auto VictoryDefeatGlow = 0x5f8; // UImage*
		constexpr auto VictoryDefeatGlow_Anim = 0x600; // UImage*
		constexpr auto VictoryDefeatLine = 0x608; // UImage*
		constexpr auto VictoryDefeatScanlines = 0x610; // UImage*
		constexpr auto WBP_ActiveBoosterShelf = 0x618; // UWBP_ActiveBoosterShelf_C*
		constexpr auto WBP_Header1 = 0x620; // UWBP_Header1_C*
		constexpr auto WBP_MatchSummary = 0x628; // UWBP_MatchSummary_C*
		constexpr auto WBP_RankChange = 0x630; // UWBP_RankChange_C*
		constexpr auto WeaponsFeatureCalloutText = 0x638; // URichTextBlock*
		constexpr auto TabScreens = 0x640; // TArray<UWidget*>
		constexpr auto CurrentTabIndex = 0x650; // int32_t
		constexpr auto DelayTimeHide = 0x654; // float
		constexpr auto ScoreboardStats = 0x658; // FScoreboardStats
		constexpr auto PopulatedScoreboard = 0x6a8; // bool
		constexpr auto PlayerId = 0x6ac; // int32_t
		constexpr auto FirstPostMatch = 0x6b0; // bool
		constexpr auto RouteName = 0x6b4; // FName
		constexpr auto ShowResultsScreenSFX = 0x6c0; // UAkAudioEvent*
		constexpr auto IsReturnView = 0x6c8; // bool
		constexpr auto NavWidgets = 0x6d0; // TArray<UKSWidget*>
		constexpr auto IsDiscFocused = 0x6e0; // bool
		constexpr auto ExampleGUID = 0x6e8; // FString
	}

	namespace n_UGizmoAxisScaleParameterSource {
		constexpr auto AxisSource = 0x48; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0x58; // TScriptInterface<IGizmoTransformSource>
		constexpr auto ScaleMultiplier = 0x68; // float
		constexpr auto Parameter = 0x6c; // float
		constexpr auto LastChange = 0x70; // FGizmoFloatParameterChange
		constexpr auto CurScaleAxis = 0x78; // FVector
		constexpr auto CurScaleOrigin = 0x84; // FVector
		constexpr auto InitialTransform = 0x90; // FTransform
	}

	namespace n_AKSNeutralBombZone {
		constexpr auto BombZoneGroup = 0x430; // int32_t
		constexpr auto OnBombZoneActive = 0x438; // FMulticastInlineDelegate
		constexpr auto BombZone = 0x448; // UStaticMeshComponent*
		constexpr auto CameraName = 0x450; // FName
		constexpr auto CameraTransitionInTime = 0x458; // float
		constexpr auto CameraTransitionOutTime = 0x45c; // float
		constexpr auto bForceCameraShoulder = 0x460; // bool
		constexpr auto CameraShoulder = 0x461; // ECameraShoulder
		constexpr auto CameraMaxRotation = 0x464; // float
		constexpr auto CameraRotationLockout = 0x468; // bool
		constexpr auto bLockPitch = 0x469; // bool
		constexpr auto bLockYaw = 0x46a; // bool
		constexpr auto bCameraShake = 0x46b; // bool
		constexpr auto CameraShake = 0x470; // UCameraShake*
	}

	namespace n_UMaterialExpressionDeriveNormalZ {
		constexpr auto InXY = 0x40; // FExpressionInput
	}

	namespace n_UWBP_RedeemCodeField_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto CodeEntry = 0x528; // UEditableTextBox*
		constexpr auto OnTextChanged = 0x530; // FMulticastInlineDelegate
		constexpr auto OnTextCommitted = 0x540; // FMulticastInlineDelegate
	}

	namespace n_UChaosSolverSettings {
		constexpr auto DefaultChaosSolverActorClass = 0x40; // FSoftClassPath
	}

	namespace n_UBTDecorator_IsAtLocation {
		constexpr auto AcceptableRadius = 0x90; // float
		constexpr auto ParametrizedAcceptableRadius = 0x98; // FAIDataProviderFloatValue
		constexpr auto GeometricDistanceType = 0xd0; // FAIDistanceType
		constexpr auto bUseParametrizedRadius = 0xd4; // char : 1
		constexpr auto bUseNavAgentGoalLocation = 0xd4; // char : 1
		constexpr auto bPathFindingBasedTest = 0xd4; // char : 1
	}

	namespace n_UScoreboardTeamSection_Lobby_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto HeightLimit = 0x528; // USizeBox*
		constexpr auto PlayerEntries = 0x530; // UVerticalBox*
		constexpr auto ScoreboardPlayerStats_Lobby = 0x538; // UScoreboardPlayerStats_Lobby_C*
		constexpr auto teamScore = 0x540; // UTextBlock*
		constexpr auto TeamScoreContainer = 0x548; // USizeBox*
		constexpr auto TeamScoreGradient = 0x550; // UImage*
		constexpr auto TeamScoreWrapper = 0x558; // UBorder*
		constexpr auto WBP_PanelDefault = 0x560; // UWBP_PanelDefault_C*
		constexpr auto WinText = 0x568; // UTextBlock*
		constexpr auto TeamStruct = 0x570; // FTeamStats
		constexpr auto playerStats = 0x590; // TArray<FPlayerEntryStats>
		constexpr auto PlayerDataFactory = 0x5a0; // UPUMG_PlayerDataFactory*
		constexpr auto Players = 0x5a8; // TArray<UScoreboardPlayerStats_Lobby_C*>
		constexpr auto TeamPlayerStats = 0x5b8; // TArray<FPlayerEntryStats>
		constexpr auto OnPlayersChanged = 0x5c8; // FMulticastInlineDelegate
	}

	namespace n_UKSPlayerMod_ActivatedTarget {
		constexpr auto TargetBuffsGivenOnActivation = 0x3b8; // TArray<TSoftObjectPtr<UKSPlayerMod>>
	}

	namespace n_UWBP_PlayerStatus_ContextMenu_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto ShowAnim = 0x528; // UWidgetAnimation*
		constexpr auto OnlineStatus = 0x530; // UTextBlock*
		constexpr auto OptionsBg = 0x538; // UImage*
		constexpr auto OptionsContainer = 0x540; // UVerticalBox*
		constexpr auto OuterMenuContainer = 0x548; // USizeBox*
		constexpr auto OnReadyNavigation = 0x550; // FMulticastInlineDelegate
		constexpr auto OnMenuHidden = 0x560; // FMulticastInlineDelegate
		constexpr auto OnMenuStart = 0x570; // FMulticastInlineDelegate
		constexpr auto LocalPlayerInfo = 0x580; // UKSPlayerInfo*
		constexpr auto StatusColors = 0x588; // UDataTable*
		constexpr auto OptionButtons = 0x590; // TArray<UWBP_PlayerStatus_ContextMenuOption_C*>
		constexpr auto IsOpen = 0x5a0; // bool
	}

	namespace n_UParticleModulePivotOffset {
		constexpr auto PivotOffset = 0x30; // FVector2D
	}

	namespace n_UKSTeamKillTracker {
		constexpr auto PlayerTeamKillTracker = 0xa0; // TArray<FPlayerTeamTracker>
		constexpr auto TeamKillRequirement = 0xb0; // int32_t
	}

	namespace n_UKSActivityRewardCondition_ItemPickedUp {
		constexpr auto MatchingItemTypes = 0x30; // TArray<TSoftObjectPtr<UKSItem>>
	}

	namespace n_UKSPartyDataFactory {
		constexpr auto OnEmoteMessageReceived = 0x1b0; // FMulticastInlineDelegate
	}

	namespace n_UKSAllyMarkerWidget {
		constexpr auto ArrowWidget = 0x318; // UWidget*
		constexpr auto NameOrStatusWidget = 0x320; // UWidget*
		constexpr auto DownedSectionWidget = 0x328; // UWidget*
		constexpr auto OnGameModeModActivationChanged = 0x330; // FMulticastInlineDelegate
	}

	namespace n_UParticleModuleVelocityInheritParent {
		constexpr auto Scale = 0x38; // FRawDistributionVector
	}

	namespace n_UNiagaraDataInterfaceGrid3D {
		constexpr auto NumVoxels = 0xd0; // FIntVector
		constexpr auto VoxelSize = 0xdc; // float
		constexpr auto SetGridFromVoxelSize = 0xe0; // bool
		constexpr auto WorldBBoxSize = 0xe4; // FVector
	}

	namespace n_AVectorFieldVolume {
		constexpr auto VectorFieldComponent = 0x220; // UVectorFieldComponent*
	}

	namespace n_UMultiSkinObject {
		constexpr auto ParentSkinnedObjects = 0x28; // TArray<UMultiSkinObject*>
		constexpr auto ChildSkinnedObjects = 0x38; // TArray<TWeakObjectPtr<UMultiSkinObject>>
		constexpr auto SubscribedKeywords = 0x48; // TSet<FName>
		constexpr auto SubscribedMaterialPrefixes = 0x98; // TSet<FName>
		constexpr auto bSubscribeToAllKeywords = 0xe8; // char : 1
		constexpr auto bWantsToBeRecycled = 0xe8; // char : 1
		constexpr auto OnFinishedAllPendingLoadsDel = 0x108; // FMulticastInlineDelegate
		constexpr auto DynamicSkinTables = 0x130; // TMap<int32_t, FDynamicSkinTableMapEntry>
		constexpr auto CachedRows = 0x180; // TMap<FName, FCachedRowsEntry>
	}

	namespace n_UWBP_ButtonArrow_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto hoveranim = 0x528; // UWidgetAnimation*
		constexpr auto background = 0x530; // UImage*
		constexpr auto Highlight = 0x538; // UImage*
		constexpr auto HitTarget = 0x540; // UButton*
		constexpr auto OnBtnClicked = 0x548; // FMulticastInlineDelegate
		constexpr auto OnBtnHovered = 0x558; // FMulticastInlineDelegate
		constexpr auto OnBtnUnhovered = 0x568; // FMulticastInlineDelegate
		constexpr auto bIsDisable = 0x578; // bool
		constexpr auto bIsActive = 0x579; // bool
	}

	namespace n_AKSProjectile_ZiplineAnchor {
		constexpr auto ProjectileTarget = 0x970; // FVector
	}

	namespace n_UGizmoPlaneScaleParameterSource {
		constexpr auto AxisSource = 0x90; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0xa0; // TScriptInterface<IGizmoTransformSource>
		constexpr auto ScaleMultiplier = 0xb0; // float
		constexpr auto Parameter = 0xb4; // FVector2D
		constexpr auto LastChange = 0xbc; // FGizmoVec2ParameterChange
		constexpr auto CurScaleOrigin = 0xcc; // FVector
		constexpr auto CurScaleNormal = 0xd8; // FVector
		constexpr auto CurScaleAxisX = 0xe4; // FVector
		constexpr auto CurScaleAxisY = 0xf0; // FVector
		constexpr auto InitialTransform = 0x100; // FTransform
	}

	namespace n_ATransformGizmoActor {
		constexpr auto TranslateX = 0x220; // UPrimitiveComponent*
		constexpr auto TranslateY = 0x228; // UPrimitiveComponent*
		constexpr auto TranslateZ = 0x230; // UPrimitiveComponent*
		constexpr auto TranslateYZ = 0x238; // UPrimitiveComponent*
		constexpr auto TranslateXZ = 0x240; // UPrimitiveComponent*
		constexpr auto TranslateXY = 0x248; // UPrimitiveComponent*
		constexpr auto RotateX = 0x250; // UPrimitiveComponent*
		constexpr auto RotateY = 0x258; // UPrimitiveComponent*
		constexpr auto RotateZ = 0x260; // UPrimitiveComponent*
		constexpr auto UniformScale = 0x268; // UPrimitiveComponent*
		constexpr auto AxisScaleX = 0x270; // UPrimitiveComponent*
		constexpr auto AxisScaleY = 0x278; // UPrimitiveComponent*
		constexpr auto AxisScaleZ = 0x280; // UPrimitiveComponent*
		constexpr auto PlaneScaleYZ = 0x288; // UPrimitiveComponent*
		constexpr auto PlaneScaleXZ = 0x290; // UPrimitiveComponent*
		constexpr auto PlaneScaleXY = 0x298; // UPrimitiveComponent*
	}

	namespace n_AKSDropShipExitVolume {
		constexpr auto YawDirection = 0x268; // float
	}

	namespace n_UPendingNetGame {
		constexpr auto NetDriver = 0x30; // UNetDriver*
		constexpr auto DemoNetDriver = 0x38; // UDemoNetDriver*
	}

	namespace n_UAnimNotify_SkinSelectiveAkEvent {
		constexpr auto SkinKeyword = 0x50; // FName
	}

	namespace n_UWBP_EventBundleItem_C {
		constexpr auto UberGraphFrame = 0x4c0; // FPointerToUberGraphFrame
		constexpr auto animOnHover = 0x4c8; // UWidgetAnimation*
		constexpr auto animOnClick = 0x4d0; // UWidgetAnimation*
		constexpr auto animOnSelected = 0x4d8; // UWidgetAnimation*
		constexpr auto Btn_BkgHoverGradient = 0x4e0; // UImage*
		constexpr auto Btn_BkgPress = 0x4e8; // UImage*
		constexpr auto Btn_Fill = 0x4f0; // UImage*
		constexpr auto Btn_HoverStroke = 0x4f8; // UImage*
		constexpr auto Btn_Stroke = 0x500; // UImage*
		constexpr auto Button_BuyBundle = 0x508; // UWBP_StandardButtonSmall_C*
		constexpr auto ButtonBackground = 0x510; // UOverlay*
		constexpr auto HitTarget = 0x518; // UButton*
		constexpr auto Next_BundleName = 0x520; // UTextBlock*
		constexpr auto Next_BundleNo = 0x528; // UTextBlock*
		constexpr auto NumberBackground = 0x530; // UImage*
		constexpr auto PriceDisplay = 0x538; // UWBP_StorePriceDisplay_C*
		constexpr auto PriceDisplaySwitcher = 0x540; // UWidgetSwitcher*
		constexpr auto Shade = 0x548; // UImage*
		constexpr auto Shade_2 = 0x550; // UImage*
		constexpr auto OnBundleItemClicked = 0x558; // FMulticastInlineDelegate
		constexpr auto StoreItem = 0x568; // UPUMG_StoreItem*
		constexpr auto OnUnlockButtonClicked = 0x570; // FMulticastInlineDelegate
		constexpr auto bIsSelected = 0x580; // bool
		constexpr auto bIsPremium = 0x581; // bool
		constexpr auto EventButtonClickSound = 0x588; // UAkAudioEvent*
		constexpr auto EventButtonHoverSound = 0x590; // UAkAudioEvent*
	}

	namespace n_UKSAvenger {
		constexpr auto PlayerTrackers = 0xa8; // TArray<FPlayerCombatInfo>
		constexpr auto MaxTrackerTimer = 0xb8; // float
	}

	namespace n_UKSHudEditableWidget {
		constexpr auto WidgetName = 0x278; // FName
		constexpr auto bCanScale = 0x280; // bool
		constexpr auto bCanSetOpacity = 0x281; // bool
		constexpr auto bCanBeInvisible = 0x282; // bool
		constexpr auto HudEditor = 0x288; // UKSHudEditor*
	}

	namespace n_APhysicsThruster {
		constexpr auto ThrusterComponent = 0x220; // UPhysicsThrusterComponent*
	}

	namespace n_UInAppPurchaseRestoreCallbackProxy2 {
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UAudioSettings {
		constexpr auto DefaultSoundClassName = 0x38; // FSoftObjectPath
		constexpr auto DefaultMediaSoundClassName = 0x50; // FSoftObjectPath
		constexpr auto DefaultSoundConcurrencyName = 0x68; // FSoftObjectPath
		constexpr auto DefaultBaseSoundMix = 0x80; // FSoftObjectPath
		constexpr auto VoiPSoundClass = 0x98; // FSoftObjectPath
		constexpr auto MasterSubmix = 0xb0; // FSoftObjectPath
		constexpr auto ReverbSubmix = 0xc8; // FSoftObjectPath
		constexpr auto EQSubmix = 0xe0; // FSoftObjectPath
		constexpr auto VoiPSampleRate = 0xf8; // EVoiceSampleRate
		constexpr auto DefaultReverbSendLevel = 0xfc; // float
		constexpr auto MaximumConcurrentStreams = 0x100; // int32_t
		constexpr auto GlobalMinPitchScale = 0x104; // float
		constexpr auto GlobalMaxPitchScale = 0x108; // float
		constexpr auto QualityLevels = 0x110; // TArray<FAudioQualitySettings>
		constexpr auto bAllowPlayWhenSilent = 0x120; // char : 1
		constexpr auto bDisableMasterEQ = 0x120; // char : 1
		constexpr auto bAllowCenterChannel3DPanning = 0x120; // char : 1
		constexpr auto NumStoppingSources = 0x124; // uint32_t
		constexpr auto PanningMethod = 0x128; // EPanningMethod
		constexpr auto MonoChannelUpmixMethod = 0x129; // EMonoChannelUpmixMethod
		constexpr auto DialogueFilenameFormat = 0x130; // FString
	}

	namespace n_UMaterialExpressionConstant4Vector {
		constexpr auto Constant = 0x40; // FLinearColor
	}

	namespace n_UKSBTD_IsWeaponFiring {
		constexpr auto EquipPoint = 0x68; // FGameplayTag
	}

	namespace n_UKSNavArea {
		constexpr auto NavAreaType = 0x48; // EKSNavAreaType
	}

	namespace n_UKSSkinBundle {
		constexpr auto RogueSelectCharacterClass = 0x260; // TSoftClassPtr<UObject>
		constexpr auto SkinSpecificWeaponAttachments = 0x288; // TArray<TSoftObjectPtr<UKSWeaponAttachment>>
		constexpr auto StarterSkin = 0x298; // bool
		constexpr auto SkinFlatImage = 0x2a0; // TSoftObjectPtr<UTexture2D>
		constexpr auto Job = 0x2c8; // TSoftObjectPtr<UKSJobItem>
		constexpr auto bOverrideJobLobbyProps = 0x2f0; // bool
		constexpr auto LobbyPropsToPreload = 0x2f8; // TArray<FSoftObjectPath>
	}

	namespace n_AKSSprayInstance {
		constexpr auto SprayTraceChannel = 0x2e0; // ECollisionChannel
		constexpr auto SprayTraceDistance = 0x2e4; // float
		constexpr auto CachedAim = 0x2e8; // FAimData
		constexpr auto CachedSprayLocation = 0x338; // FVector
		constexpr auto CachedSprayRotation = 0x344; // FRotator
		constexpr auto CachedSprayTarget = 0x350; // TWeakObjectPtr<UPrimitiveComponent>
		constexpr auto CachedSprayNormal = 0x358; // FVector
		constexpr auto CachedSprayRotationByNormal = 0x364; // FRotator
	}

	namespace n_UWBP_OrdinalNumberText_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto MainText = 0x240; // UTextBlock*
		constexpr auto SuperscriptText = 0x248; // UTextBlock*
		constexpr auto Number = 0x250; // int32_t
	}

	namespace n_UKSModInst_DamageOverTime {
		constexpr auto DamagePerTick = 0x1d0; // float
		constexpr auto DamageType = 0x1d8; // UDamageType*
		constexpr auto RadialDamageWeapon = 0x1e0; // UKSWeaponAsset*
	}

	namespace n_UPawnAction_Wait {
		constexpr auto TimeToWait = 0x98; // float
	}

	namespace n_UWBP_Store_C {
		constexpr auto UberGraphFrame = 0x528; // FPointerToUberGraphFrame
		constexpr auto SectionShown = 0x530; // UWidgetAnimation*
		constexpr auto DisplayMode = 0x538; // UWidgetSwitcher*
		constexpr auto Image_106 = 0x540; // UImage*
		constexpr auto SectionsListingBar = 0x548; // UWBP_SectionListingBar_C*
		constexpr auto StoreSections = 0x550; // UScrollBox*
		constexpr auto StoreTimer = 0x558; // UBorder*
		constexpr auto TimeRemaining = 0x560; // UTextBlock*
		constexpr auto WBP_ThrobberHorizontal = 0x568; // UWBP_ThrobberHorizontal_C*
		constexpr auto WBP_ThrobberShield = 0x570; // UWBP_ThrobberShield_C*
		constexpr auto PurchaseConfirmationModel = 0x578; // AKSLobbyCharacter*
		constexpr auto CurrentSectionIndex = 0x580; // int32_t
		constexpr auto StoreSectionData = 0x588; // TArray<UKSStoreSection*>
		constexpr auto CurrentStoreSection = 0x598; // UWBP_StoreSection_C*
		constexpr auto StoreSectionWidgets = 0x5a0; // TArray<UWBP_StoreSection_C*>
		constexpr auto StoreTimerRemaining = 0x5b0; // float
		constexpr auto TimeCount = 0x5b4; // float
	}

	namespace n_UKSBTTask_LeaveDefensePoint {
		constexpr auto DefensePoint = 0x70; // FBlackboardKeySelector
	}

	namespace n_UParticleModuleBeamNoise {
		constexpr auto bLowFreq_Enabled = 0x30; // char : 1
		constexpr auto Frequency = 0x34; // int32_t
		constexpr auto Frequency_LowRange = 0x38; // int32_t
		constexpr auto NoiseRange = 0x40; // FRawDistributionVector
		constexpr auto NoiseRangeScale = 0x88; // FRawDistributionFloat
		constexpr auto bNRScaleEmitterTime = 0xb8; // char : 1
		constexpr auto NoiseSpeed = 0xc0; // FRawDistributionVector
		constexpr auto bSmooth = 0x108; // char : 1
		constexpr auto NoiseLockRadius = 0x10c; // float
		constexpr auto bNoiseLock = 0x110; // char : 1
		constexpr auto bOscillate = 0x110; // char : 1
		constexpr auto NoiseLockTime = 0x114; // float
		constexpr auto NoiseTension = 0x118; // float
		constexpr auto bUseNoiseTangents = 0x11c; // char : 1
		constexpr auto NoiseTangentStrength = 0x120; // FRawDistributionFloat
		constexpr auto NoiseTessellation = 0x150; // int32_t
		constexpr auto bTargetNoise = 0x154; // char : 1
		constexpr auto FrequencyDistance = 0x158; // float
		constexpr auto bApplyNoiseScale = 0x15c; // char : 1
		constexpr auto NoiseScale = 0x160; // FRawDistributionFloat
	}

	namespace n_USourceEffectSimpleDelayPreset {
		constexpr auto Settings = 0x80; // FSourceEffectSimpleDelaySettings
	}

	namespace n_USystemTimeTimecodeProvider {
		constexpr auto FrameRate = 0x30; // FFrameRate
		constexpr auto bGenerateFullFrame = 0x38; // bool
		constexpr auto bUseHighPerformanceClock = 0x39; // bool
	}

	namespace n_UKSFullMapWidget {
		constexpr auto MinimapRendererActor = 0x648; // AActor*
		constexpr auto MinimapWidth = 0x650; // float
	}

	namespace n_UEnvQueryGenerator_ProjectedPoints {
		constexpr auto ProjectionData = 0x50; // FEnvTraceData
	}

	namespace n_UKSPlayerJoinTask {
		constexpr auto OnPlayerJoinTaskComplete = 0x28; // FMulticastInlineDelegate
	}

	namespace n_UNiagaraScript {
		constexpr auto Usage = 0x28; // ENiagaraScriptUsage
		constexpr auto UsageIndex = 0x2c; // int32_t
		constexpr auto UsageId = 0x30; // FGuid
		constexpr auto RapidIterationParameters = 0x40; // FNiagaraParameterStore
		constexpr auto ScriptExecutionParamStore = 0xf8; // FNiagaraScriptExecutionParameterStore
		constexpr auto ScriptExecutionBoundParameters = 0x1d0; // TArray<FNiagaraBoundParameter>
		constexpr auto CachedScriptVMId = 0x1e0; // FNiagaraVMExecutableDataId
		constexpr auto CachedScriptVM = 0x3d8; // FNiagaraVMExecutableData
		constexpr auto CachedParameterCollectionReferences = 0x500; // TArray<UNiagaraParameterCollection*>
		constexpr auto CachedDefaultDataInterfaces = 0x510; // TArray<FNiagaraScriptDataInterfaceInfo>
	}

	namespace n_UKSSettingsSaveGame {
		constexpr auto SavedSettingsConfig = 0x28; // TMap<FName, FString>
		constexpr auto SavedDisplayLanguage = 0x78; // FString
		constexpr auto LastJoinedQueuePrimaryId = 0x88; // int32_t
		constexpr auto SavedLocalActions = 0x90; // TSet<FName>
		constexpr auto SavedSelectedRegion = 0xe0; // int32_t
		constexpr auto LastWhatsNewVersion = 0xe4; // int32_t
		constexpr auto SavedTransientAcquisitionIds = 0xe8; // TArray<int32_t>
		constexpr auto SavedViewedNewsPanelIds = 0xf8; // TSet<FName>
		constexpr auto SavedChallengeVersionId = 0x148; // int32_t
		constexpr auto SavedViewedChallengeIds = 0x150; // TSet<int32_t>
		constexpr auto SavedRecentlySeenStoreItemLootIds = 0x1a0; // TSet<int32_t>
	}

	namespace n_UKSModInst_OnDownOther {
		constexpr auto bListenToDowns = 0x1b8; // bool
		constexpr auto bListenToEliminations = 0x1b9; // bool
		constexpr auto bListenToAssists = 0x1ba; // bool
		constexpr auto bAffectFriendlies = 0x1bb; // bool
	}

	namespace n_UKSLootItem {
		constexpr auto Amount = 0x250; // int32_t
		constexpr auto bShareWithTeam = 0x254; // bool
	}

	namespace n_UBTTask_MakeNoise {
		constexpr auto Loudnes = 0x70; // float
	}

	namespace n_USafeZone {
		constexpr auto PadLeft = 0x128; // bool
		constexpr auto PadRight = 0x129; // bool
		constexpr auto PadTop = 0x12a; // bool
		constexpr auto PadBottom = 0x12b; // bool
	}

	namespace n_UMaterialExpressionDynamicParameter {
		constexpr auto ParamNames = 0x40; // TArray<FString>
		constexpr auto DefaultValue = 0x50; // FLinearColor
		constexpr auto ParameterIndex = 0x60; // uint32_t
	}

	namespace n_UMaterialExpressionDepthFade {
		constexpr auto InOpacity = 0x40; // FExpressionInput
		constexpr auto FadeDistance = 0x54; // FExpressionInput
		constexpr auto OpacityDefault = 0x68; // float
		constexpr auto FadeDistanceDefault = 0x6c; // float
	}

	namespace n_UKSActivityRequirement_Map {
		constexpr auto RequiredMap = 0x30; // FString
	}

	namespace n_UKSActivityRequirement_Queue {
		constexpr auto RequiredActiveQueueId = 0x30; // int32_t
	}

	namespace n_UKSPlayerMod_PlayerIcon {
		constexpr auto ShowPlayerIconToEnemies = 0x330; // FKSPlayerModOverridePropertyStatBool
		constexpr auto PlayerIconRange = 0x33c; // FKSPlayerModOverridePropertyStatFloat
	}

	namespace n_UWBP_ProgressionCardSlot_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto LevelUp = 0x528; // UWidgetAnimation*
		constexpr auto AnimateCard = 0x530; // UWidgetAnimation*
		constexpr auto CardContent = 0x538; // UOverlay*
		constexpr auto Glow = 0x540; // UImage*
		constexpr auto Gradient = 0x548; // UImage*
		constexpr auto LeftSideDecro = 0x550; // UImage*
		constexpr auto ProgressionCardContent = 0x558; // UNamedSlot*
		constexpr auto RightSideDecro = 0x560; // UImage*
		constexpr auto WBP_PanelDefault = 0x568; // UWBP_PanelDefault_C*
		constexpr auto StartAnimation = 0x570; // FMulticastInlineDelegate
		constexpr auto ProgressionCardLvlUpSFX = 0x580; // UAkAudioEvent*
		constexpr auto ShowProgressionCardSFX = 0x588; // UAkAudioEvent*
		constexpr auto StartAnimTimer = 0x590; // FTimerHandle
	}

	namespace n_UImmunityModInst_C {
		constexpr auto UberGraphFrame = 0x1c0; // FPointerToUberGraphFrame
	}

	namespace n_ABP_InWorld_Reticle_C {
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto Reticle = 0x228; // UWidgetComponent*
		constexpr auto DefaultSceneRoot = 0x230; // USceneComponent*
		constexpr auto ReticleWidget = 0x238; // UWBP_InWorld_Reticle_C*
		constexpr auto ReticleComponentWidget = 0x240; // UWBP_InWorld_ReticleComponents_C*
	}

	namespace n_UWBP_MatchSummary_StatEntry_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto StatNameText = 0x528; // UTextBlock*
		constexpr auto StatValueText = 0x530; // UTextBlock*
		constexpr auto NewVar_1 = 0x538; // bool
		constexpr auto StatName = 0x540; // FText
		constexpr auto StatValue = 0x558; // FText
	}

	namespace n_UKSAnimNotify_EmotionDuration {
		constexpr auto Emotion = 0x38; // EKSEmotion
		constexpr auto Duration = 0x3c; // float
	}

	namespace n_UParticleModuleVectorFieldRotationRate {
		constexpr auto RotationRate = 0x30; // FVector
	}

	namespace n_ULevelSequenceBurnInOptions {
		constexpr auto bUseBurnIn = 0x28; // bool
		constexpr auto BurnInClass = 0x30; // FSoftClassPath
		constexpr auto Settings = 0x48; // ULevelSequenceBurnInInitSettings*
	}

	namespace n_ACameraRig_Crane {
		constexpr auto CranePitch = 0x220; // float
		constexpr auto CraneYaw = 0x224; // float
		constexpr auto CraneArmLength = 0x228; // float
		constexpr auto bLockMountPitch = 0x22c; // bool
		constexpr auto bLockMountYaw = 0x22d; // bool
		constexpr auto TransformComponent = 0x230; // USceneComponent*
		constexpr auto CraneYawControl = 0x238; // USceneComponent*
		constexpr auto CranePitchControl = 0x240; // USceneComponent*
		constexpr auto CraneCameraMount = 0x248; // USceneComponent*
	}

	namespace n_ABP_BrightLobbyHUD_C {
		constexpr auto UberGraphFrame = 0x6b8; // FPointerToUberGraphFrame
		constexpr auto LobbyWidget = 0x6c0; // UBrightLobbyWidget_C*
		constexpr auto Loadout Slot Edit = 0x6c8; // char
		constexpr auto Loadout Slot Change = 0x6d0; // FMulticastInlineDelegate
		constexpr auto MatchLoadingRouteName = 0x6e0; // FName
		constexpr auto ClearPendingRouteDataOnSwap = 0x6e8; // TArray<FName>
	}

	namespace n_UWBP_CustomGameActionItem_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto OnEntry = 0x240; // UWidgetAnimation*
		constexpr auto TextBlock = 0x248; // URichTextBlock*
		constexpr auto Text = 0x250; // FText
	}

	namespace n_UParticleModuleSpawnPerUnit {
		constexpr auto UnitScalar = 0x38; // float
		constexpr auto MovementTolerance = 0x3c; // float
		constexpr auto SpawnPerUnit = 0x40; // FRawDistributionFloat
		constexpr auto MaxFrameDistance = 0x70; // float
		constexpr auto bIgnoreSpawnRateWhenMoving = 0x74; // char : 1
		constexpr auto bIgnoreMovementAlongX = 0x74; // char : 1
		constexpr auto bIgnoreMovementAlongY = 0x74; // char : 1
		constexpr auto bIgnoreMovementAlongZ = 0x74; // char : 1
	}

	namespace n_UKSVOPriorityManager {
		constexpr auto AnnouncerSquelchThreshold = 0xb0; // EKSVoiceOverPriority
		constexpr auto AnnouncerDuckThreshold = 0xb1; // EKSVoiceOverPriority
		constexpr auto CharacterSquelchThreshold = 0xb2; // EKSVoiceOverPriority
		constexpr auto CharacterDuckThreshold = 0xb3; // EKSVoiceOverPriority
		constexpr auto PlayingLines = 0xb8; // TArray<FPriorityVoiceLine>
	}

	namespace n_UPartyBeaconState {
		constexpr auto SessionName = 0x28; // FName
		constexpr auto NumConsumedReservations = 0x30; // int32_t
		constexpr auto MaxReservations = 0x34; // int32_t
		constexpr auto NumTeams = 0x38; // int32_t
		constexpr auto NumPlayersPerTeam = 0x3c; // int32_t
		constexpr auto TeamAssignmentMethod = 0x40; // FName
		constexpr auto ReservedHostTeamNum = 0x48; // int32_t
		constexpr auto ForceTeamNum = 0x4c; // int32_t
		constexpr auto bRestrictCrossConsole = 0x50; // bool
		constexpr auto bEnableRemovalRequests = 0x51; // bool
		constexpr auto Reservations = 0x58; // TArray<FPartyReservation>
	}

	namespace n_UParticleModuleBeamSource {
		constexpr auto SourceMethod = 0x30; // Beam2SourceTargetMethod
		constexpr auto SourceName = 0x34; // FName
		constexpr auto bSourceAbsolute = 0x3c; // char : 1
		constexpr auto Source = 0x40; // FRawDistributionVector
		constexpr auto bLockSource = 0x88; // char : 1
		constexpr auto SourceTangentMethod = 0x8c; // Beam2SourceTargetTangentMethod
		constexpr auto SourceTangent = 0x90; // FRawDistributionVector
		constexpr auto bLockSourceTangent = 0xd8; // char : 1
		constexpr auto SourceStrength = 0xe0; // FRawDistributionFloat
		constexpr auto bLockSourceStength = 0x110; // char : 1
	}

	namespace n_UEndpointSubmix {
		constexpr auto EndpointType = 0x38; // FName
		constexpr auto EndpointSettingsClass = 0x40; // UAudioEndpointSettingsBase*
		constexpr auto EndpointSettings = 0x48; // UAudioEndpointSettingsBase*
	}

	namespace n_UWBP_RegionSelect_Entry_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto hoveranim = 0x528; // UWidgetAnimation*
		constexpr auto Button = 0x530; // UButton*
		constexpr auto HoverImage = 0x538; // UImage*
		constexpr auto Image_1 = 0x540; // UImage*
		constexpr auto PreferredSiteIcon = 0x548; // UImage*
		constexpr auto RegionName = 0x550; // UTextBlock*
		constexpr auto SiteId = 0x558; // int32_t
		constexpr auto SiteName = 0x560; // FText
		constexpr auto OnRegionSelected = 0x578; // FMulticastInlineDelegate
		constexpr auto HoverRegionSelectEntrySFX = 0x588; // UAkAudioEvent*
		constexpr auto ClickRegionSelectEntrySFX = 0x590; // UAkAudioEvent*
	}

	namespace n_AKSJobSelectionAuthority {
		constexpr auto bAllowUnownedJobs = 0x230; // bool
		constexpr auto AllowUnownedSpecificJobs = 0x238; // TSet<UKSJobItem*>
		constexpr auto SelectionRules = 0x288; // UKSJobSelectionRules*
		constexpr auto Choices = 0x290; // TArray<FJobSelectionChoice>
		constexpr auto CompletedJobSelectionTasks = 0x2a0; // FJobSelectionTaskList
		constexpr auto ActiveJobSelectionTasks = 0x3d0; // FJobSelectionTaskList
		constexpr auto PendingJobSelectionTasks = 0x500; // FJobSelectionTaskList
		constexpr auto DelayedJobSelectionTasks = 0x630; // FJobSelectionTaskList
		constexpr auto ParticipatingPlayers = 0x760; // TSet<FKSPersistentPlayerId>
		constexpr auto RemainingPlayers = 0x7b0; // TSet<FKSPersistentPlayerId>
		constexpr auto ActiveJobSelectors = 0x800; // TMap<FKSPersistentPlayerId, AKSJobSelector*>
		constexpr auto KnownDisconnectPlayers = 0x850; // TSet<FKSPersistentPlayerId>
		constexpr auto AvailableProxies = 0x8a0; // TArray<FKSPersistentPlayerId>
		constexpr auto AIPlayers = 0x8b0; // TSet<FKSPersistentPlayerId>
		constexpr auto bHasStarted = 0x900; // bool
		constexpr auto bHasCompletedInitialSelection = 0x901; // bool
		constexpr auto TimesStarted = 0x904; // int32_t
		constexpr auto TimerManager = 0x908; // FPGame_ReplicatedTimerManager
		constexpr auto GameModeOwner = 0xa30; // AKSGameMode*
	}

	namespace n_UWBP_RogueMasteryTrackLevel_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto OnSelect = 0x528; // UWidgetAnimation*
		constexpr auto OnHover = 0x530; // UWidgetAnimation*
		constexpr auto GamepadNavCallouts = 0x538; // UHorizontalBox*
		constexpr auto HitTarget = 0x540; // UButton*
		constexpr auto NextCalloutSection = 0x548; // UHorizontalBox*
		constexpr auto NodeLocked = 0x550; // UImage*
		constexpr auto NodeSelected = 0x558; // UImage*
		constexpr auto NodeSwitcher = 0x560; // UWidgetSwitcher*
		constexpr auto NodeUnlocked = 0x568; // UImage*
		constexpr auto PreviousCalloutSection = 0x570; // UHorizontalBox*
		constexpr auto RewardsContainer = 0x578; // UHorizontalBox*
		constexpr auto RewardsWrapper = 0x580; // UOverlay*
		constexpr auto SelectedFrame = 0x588; // UImage*
		constexpr auto WBP_MercMasteryIcon = 0x590; // UWBP_RogueMasteryIcon_C*
		constexpr auto OnTrackLevelSelected = 0x598; // FMulticastInlineDelegate
		constexpr auto ActivityData = 0x5a8; // FActivityTier
		constexpr auto InputState = 0x5e8; // PGAME_INPUT_STATE
		constexpr auto IsSelected = 0x5e9; // bool
		constexpr auto IsAchieved = 0x5ea; // bool
		constexpr auto ClickStandardBtnInnerSFX = 0x5f0; // UAkAudioEvent*
		constexpr auto HoverStandardBtnInnerSFX = 0x5f8; // UAkAudioEvent*
		constexpr auto HasGamepadFocus = 0x600; // bool
	}

	namespace n_UFirstTimeLanguageWidget_C {
		constexpr auto UberGraphFrame = 0x4c0; // FPointerToUberGraphFrame
		constexpr auto Decro = 0x4c8; // UImage*
		constexpr auto Image_159 = 0x4d0; // UImage*
		constexpr auto SettingsWidgetContainer = 0x4d8; // UOverlay*
		constexpr auto Title = 0x4e0; // UTextBlock*
		constexpr auto WBP_StandardButtonMedium = 0x4e8; // UWBP_StandardButtonMedium_C*
		constexpr auto SettingsWidgetConfig = 0x4f0; // FKSSettingsWidgetConfig
		constexpr auto SettingsInfo = 0x500; // UKSSettingsInfoBase*
		constexpr auto SettingsWidget = 0x508; // UKSSettingsWidget*
		constexpr auto ShowFirstTimeLanguageSFX = 0x510; // UAkAudioEvent*
	}

	namespace n_UVehicleAnimInstance {
		constexpr auto WheeledVehicleMovementComponent = 0x970; // UWheeledVehicleMovementComponent*
	}

	namespace n_UKSPlayerMod_DodgeRollLockout {
		constexpr auto LockoutTimeMultiplier = 0x330; // float
	}

	namespace n_UKSWeaponAttachment_Reactive {
		constexpr auto ReactiveWrapPreviewModeActive = 0x2f8; // bool
		constexpr auto ReactiveWrapPreviewDisplayDescription = 0x300; // FText
		constexpr auto ProgressionTrackATitle = 0x318; // FName
		constexpr auto ProgressionTrackBTitle = 0x320; // FName
		constexpr auto ProgressionTrackCTitle = 0x328; // FName
		constexpr auto ReactiveWrapPreviewParameters = 0x330; // TArray<FReactiveWrapMilestoneDisplay>
		constexpr auto StartingMilestonePreviewIndex = 0x340; // int32_t
		constexpr auto UtilizeOnComponentStateChanged = 0x344; // bool
		constexpr auto TriggerOnFire = 0x345; // bool
		constexpr auto ResetOnReload = 0x346; // bool
		constexpr auto ResetOnInactive = 0x347; // bool
		constexpr auto ResetOnHolster = 0x348; // bool
		constexpr auto ResetOnIdleTimer = 0x349; // bool
		constexpr auto IdleResetTimerDuration = 0x34c; // float
		constexpr auto UtilizeOnAimModeChanged = 0x350; // bool
		constexpr auto HideOnADS = 0x351; // bool
		constexpr auto UtilizeOnAnyPlayerDeath = 0x352; // bool
		constexpr auto TriggerOnKillingAnEnemyWithAnything = 0x353; // bool
		constexpr auto TriggerOnKillingAnEnemyWithYourReactiveWeapon = 0x354; // bool
		constexpr auto ResetOnYourDeath = 0x355; // bool
		constexpr auto UtilizeOnAnyPlayerDowned = 0x356; // bool
		constexpr auto TriggerOnDowningAnEnemyWithAnything = 0x357; // bool
		constexpr auto TriggerOnDowningAnEnemyWithYourReactiveWeapon = 0x358; // bool
		constexpr auto ResetOnYourDown = 0x359; // bool
		constexpr auto UtilizeOnOwnedPawnInstigateDamage = 0x35a; // bool
		constexpr auto TriggerOnDamagingAnEnemyWithAnything = 0x35b; // bool
		constexpr auto TriggerOnDamagingAnEnemyWithYourReactiveWeapon = 0x35c; // bool
		constexpr auto ResetOnYouTakeDamage = 0x35d; // bool
		constexpr auto TriggerOnDamageThresholdWithYourReactiveWeaponOnly = 0x35e; // bool
		constexpr auto TargetTriggerDamageThreshold = 0x360; // float
		constexpr auto DamageThresholdResetTimerDuration = 0x364; // float
		constexpr auto UtilizeOnMultiDownAchieved = 0x368; // bool
		constexpr auto TriggerOnMutlipleDownsWithAnything = 0x369; // bool
		constexpr auto TriggerOnMutlipleDownsWithYourReactiveWeapon = 0x36a; // bool
		constexpr auto TargetNumberOfDownsToAchieve = 0x36c; // int32_t
	}

	namespace n_UPUMG_DataFactory {
		constexpr auto MyHud = 0x28; // APUMG_HUD*
	}

	namespace n_UKSWeaponAsset_WithProjectile {
		constexpr auto ProjectileClass = 0x908; // TSoftClassPtr<UObject>
		constexpr auto ProjectileWeaponAsset = 0x930; // TSoftObjectPtr<UKSWeaponAsset>
		constexpr auto AdditionalProjectileWeaponInfos = 0x958; // TArray<FKSProjectileWeaponInfo>
		constexpr auto RadialDamageOriginOffsetDistance = 0x968; // float
		constexpr auto TimeToFullyCook = 0x96c; // float
		constexpr auto CookSpeedMultiplierCurve = 0x970; // UCurveFloat*
		constexpr auto CookDamageMultiplierCurve = 0x978; // UCurveFloat*
		constexpr auto BounceDamageMultiplierCurve = 0x980; // UCurveFloat*
	}

	namespace n_UWBP_ItemPreviewStack_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto BorderBackground = 0x528; // UImage*
		constexpr auto Gradient = 0x530; // UImage*
		constexpr auto ItemPreview2D = 0x538; // UWBP_AsyncIcon_C*
		constexpr auto RarityElementWrapper = 0x540; // UBorder*
		constexpr auto ScanLines = 0x548; // UImage*
		constexpr auto SizeConstraint = 0x550; // USizeBox*
		constexpr auto Title = 0x558; // UTextBlock*
		constexpr auto TitleDisplay = 0x560; // UOverlay*
		constexpr auto WBP_ReactiveWrapStepPreview = 0x568; // UWBP_ReactiveWrapStepPreview_C*
		constexpr auto CharacterIndex = 0x570; // ELobbyCharacterIndex
		constexpr auto ModelName = 0x574; // FName
		constexpr auto JobItem = 0x580; // UKSJobItem*
		constexpr auto PreviewActor = 0x588; // AKSJobSelectPrvwActor_RogueScrn*
		constexpr auto DisplayReactiveDetails = 0x590; // bool
		constexpr auto OwningSceneName = 0x594; // FName
		constexpr auto WeaponOverride = 0x5a0; // UKSWeaponAsset*
	}

	namespace n_UEnvQueryTest_Trace {
		constexpr auto TraceData = 0x1f8; // FEnvTraceData
		constexpr auto TraceFromContext = 0x228; // FAIDataProviderBoolValue
		constexpr auto ItemHeightOffset = 0x260; // FAIDataProviderFloatValue
		constexpr auto ContextHeightOffset = 0x298; // FAIDataProviderFloatValue
		constexpr auto Context = 0x2d0; // UEnvQueryContext*
	}

	namespace n_UKSEmotionComponent {
		constexpr auto OnEmotionChanged = 0xb0; // FMulticastInlineDelegate
		constexpr auto EmotionComponentOwner = 0xc0; // TScriptInterface<IKSEmotionComponentOwner>
		constexpr auto EmotionInstances = 0xd0; // TMap<int32_t, EKSEmotion>
		constexpr auto TopInstanceId = 0x120; // int32_t
		constexpr auto TopEmotionEnum = 0x124; // EKSEmotion
		constexpr auto NextEmotionId = 0x128; // int32_t
		constexpr auto ConversionEntries = 0x180; // TArray<FKSEmoteConversionEntry>
		constexpr auto EmotionNameToEnumMap = 0x190; // TMap<FName, EKSEmotion>
		constexpr auto EmotionEnumToNameMap = 0x1e0; // TMap<EKSEmotion, FName>
	}

	namespace n_UKSInteractionManager {
		constexpr auto CachedInteractionTimeStamp = 0xe8; // float
		constexpr auto InteractRequestId = 0xf0; // char
		constexpr auto State = 0xf8; // UKSInteractionState*
		constexpr auto PreviousState = 0x100; // UKSInteractionState*
		constexpr auto User = 0x108; // AKSCharacter*
		constexpr auto Interactable = 0x110; // TScriptInterface<IKSInteractable>
		constexpr auto CameraTransition = 0x120; // FKSInteractableCameraTransition
	}

	namespace n_UPhysicsCollisionHandler {
		constexpr auto ImpactThreshold = 0x28; // float
		constexpr auto ImpactReFireDelay = 0x2c; // float
		constexpr auto DefaultImpactSound = 0x30; // USoundBase*
		constexpr auto LastImpactSoundTime = 0x38; // float
	}

	namespace n_UStereoLayerShapeCylinder {
		constexpr auto Radius = 0x28; // float
		constexpr auto OverlayArc = 0x2c; // float
		constexpr auto Height = 0x30; // int32_t
	}

	namespace n_UWindowTitleBarAreaSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UAIPerceptionComponent {
		constexpr auto SensesConfig = 0xb0; // TArray<UAISenseConfig*>
		constexpr auto DominantSense = 0xc0; // UAISense*
		constexpr auto AIOwner = 0xd8; // AAIController*
		constexpr auto OnPerceptionUpdated = 0x160; // FMulticastInlineDelegate
		constexpr auto OnTargetPerceptionUpdated = 0x170; // FMulticastInlineDelegate
	}

	namespace n_USoundSubmix {
		constexpr auto bMuteWhenBackgrounded = 0x40; // char : 1
		constexpr auto SubmixEffectChain = 0x48; // TArray<USoundEffectSubmixPreset*>
		constexpr auto AmbisonicsPluginSettings = 0x58; // USoundfieldEncodingSettingsBase*
		constexpr auto EnvelopeFollowerAttackTime = 0x60; // int32_t
		constexpr auto EnvelopeFollowerReleaseTime = 0x64; // int32_t
		constexpr auto OutputVolume = 0x68; // float
		constexpr auto OnSubmixRecordedFileDone = 0x70; // FMulticastInlineDelegate
	}

	namespace n_UBTTask_PushPawnAction {
		constexpr auto Action = 0x70; // UPawnAction*
	}

	namespace n_UMovieSceneMaterialParameterCollectionTrack {
		constexpr auto MPC = 0x68; // UMaterialParameterCollection*
	}

	namespace n_UKSBTDifficulty {
		constexpr auto DifficultyName = 0x30; // FString
	}

	namespace n_UTestMovieSceneTrack {
		constexpr auto bHighPassFilter = 0x58; // bool
		constexpr auto SectionArray = 0x60; // TArray<UMovieSceneSection*>
	}

	namespace n_AKSSafeZone {
		constexpr auto SideNum = 0x238; // int32_t
	}

	namespace n_UKSWeaponSkeletalMeshComponent {
		constexpr auto bApplySkeletalMeshBoundsParameterToMaterials = 0xda0; // bool
		constexpr auto SkeletalMeshBoundsParameterName = 0xda4; // FName
		constexpr auto bApplySkeletalLengthParameterToMaterials = 0xdac; // bool
		constexpr auto SkeletalMeshLengthParameterName = 0xdb0; // FName
		constexpr auto bApplySkeletalWidthParameterToMaterials = 0xdb8; // bool
		constexpr auto SkeletalMeshWidthParameterName = 0xdbc; // FName
		constexpr auto bApplySkeletalHeightParameterToMaterials = 0xdc4; // bool
		constexpr auto SkeletalMeshHeightParameterName = 0xdc8; // FName
	}

	namespace n_UWBP_CosmeticItem_Border_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto Button = 0x528; // UWBP_ButtonSlot_Cosmetic_C*
		constexpr auto Image_134 = 0x530; // UImage*
		constexpr auto WBP_AsyncIcon = 0x538; // UWBP_AsyncIcon_C*
		constexpr auto PlatformItem = 0x540; // UPlatformInventoryItem*
		constexpr auto HoverBorderItemSFX = 0x548; // UAkAudioEvent*
		constexpr auto ClickBorderItemSFX = 0x550; // UAkAudioEvent*
		constexpr auto OnItemHovered = 0x558; // FMulticastInlineDelegate
		constexpr auto OnItemUnhovered = 0x568; // FMulticastInlineDelegate
		constexpr auto OnItemClicked = 0x578; // FMulticastInlineDelegate
	}

	namespace n_UKSHoveringInteractorManagerComponent {
		constexpr auto OnHoveringInteractorsChanged = 0xb0; // FMulticastInlineDelegate
		constexpr auto HoveringInteractors = 0xc0; // TArray<AActor*>
	}

	namespace n_UInterpTrackInstFloatMaterialParam {
		constexpr auto MaterialInstances = 0x28; // TArray<UMaterialInstanceDynamic*>
		constexpr auto ResetFloats = 0x38; // TArray<float>
		constexpr auto PrimitiveMaterialRefs = 0x48; // TArray<FPrimitiveMaterialRef>
		constexpr auto InstancedTrack = 0x58; // UInterpTrackFloatMaterialParam*
	}

	namespace n_UPawnSensingComponent {
		constexpr auto HearingThreshold = 0xb0; // float
		constexpr auto LOSHearingThreshold = 0xb4; // float
		constexpr auto SightRadius = 0xb8; // float
		constexpr auto SensingInterval = 0xbc; // float
		constexpr auto HearingMaxSoundAge = 0xc0; // float
		constexpr auto bEnableSensingUpdates = 0xc4; // char : 1
		constexpr auto bOnlySensePlayers = 0xc4; // char : 1
		constexpr auto bSeePawns = 0xc4; // char : 1
		constexpr auto bHearNoises = 0xc4; // char : 1
		constexpr auto OnSeePawn = 0xd0; // FMulticastInlineDelegate
		constexpr auto OnHearNoise = 0xe0; // FMulticastInlineDelegate
		constexpr auto PeripheralVisionAngle = 0xf0; // float
		constexpr auto PeripheralVisionCosine = 0xf4; // float
	}

	namespace n_UPUMG_PortalOffer {
		constexpr auto SKU = 0x28; // FString
		constexpr auto PreSaleCost = 0x38; // float
		constexpr auto DisplayPreSaleCost = 0x40; // FText
		constexpr auto cost = 0x58; // float
		constexpr auto DisplayCost = 0x60; // FText
		constexpr auto CurrencyCode = 0x78; // FText
		constexpr auto Name = 0x90; // FText
		constexpr auto Desc = 0xa8; // FText
		constexpr auto ShortDesc = 0xc0; // FText
		constexpr auto TaxMessage = 0xd8; // FText
	}

	namespace n_ALevelScriptActor {
		constexpr auto bInputEnabled = 0x220; // char : 1
	}

	namespace n_UKSPlayerDataFactory {
		constexpr auto PlayerStatsManager = 0xb0; // UKSPlayerStatsManager*
		constexpr auto OnPlayerLevelChanged = 0xb8; // FMulticastInlineDelegate
	}

	namespace n_AKSBotFactory {
		constexpr auto bFinishPrecacheOnBeginPlay = 0x220; // bool
		constexpr auto bUseTeamInsteadOfSide = 0x221; // bool
		constexpr auto SideNum = 0x224; // int32_t
		constexpr auto TeamNum = 0x228; // int32_t
		constexpr auto InitialBehaviorState = 0x22c; // ECharacterBehaviorState
		constexpr auto bUseInlineSpawnCollection = 0x22d; // bool
		constexpr auto SpawnCollectionAsset = 0x230; // UKSBotDefinitionCollection*
		constexpr auto SpawnCollectionInline = 0x238; // UKSBotDefinitionCollection*
		constexpr auto bSpawnHidden = 0x240; // bool
		constexpr auto bRandomBot = 0x241; // bool
		constexpr auto bWithoutReplacement = 0x242; // bool
		constexpr auto bRandomLoadout = 0x243; // bool
		constexpr auto bPreserveAIControllers = 0x244; // bool
		constexpr auto OverrideTeamSizeFromQueue = 0x245; // bool
		constexpr auto FillTeamTo = 0x248; // int32_t
		constexpr auto bUseAutoWayPointSets = 0x24c; // bool
		constexpr auto WayPointSet = 0x250; // AKSWayPointSet*
		constexpr auto ShouldReverseWayPointSetDirection = 0x258; // bool
		constexpr auto SpawnPoints = 0x260; // TArray<APlayerStart*>
		constexpr auto SpawnOnBeginPlay = 0x270; // int32_t
		constexpr auto SpawnOnRoundStart = 0x274; // int32_t
		constexpr auto SpawnOnRoundSetup = 0x278; // int32_t
		constexpr auto SpawnOnCollectionTimeout = 0x27c; // int32_t
		constexpr auto SpawnOnHackTimeout = 0x280; // int32_t
		constexpr auto SpawnOnEscapeTimeout = 0x284; // int32_t
		constexpr auto SpawnOnDownloadStart = 0x288; // int32_t
		constexpr auto SpawnOnAlarm = 0x28c; // int32_t
		constexpr auto MinSpawnCount = 0x290; // int32_t
		constexpr auto MaxSpawnCount = 0x294; // int32_t
		constexpr auto bMaintainCountOnBotDeath = 0x298; // bool
		constexpr auto ActiveBots = 0x2a0; // TArray<AKSAIController*>
		constexpr auto TeamState = 0x2b0; // AKSTeamState*
		constexpr auto NextSequentialSpawnStart = 0x2b8; // int32_t
		constexpr auto CurrentLoadoutSeed = 0x2bc; // int32_t
		constexpr auto RelevantObjectiveStates = 0x2c0; // TArray<FName>
		constexpr auto RelevantGameStatesForObjectiveSpawning = 0x2d0; // TArray<FName>
		constexpr auto NumberOfTimesToSpawnForObjectiveRelevancy = 0x2e0; // int32_t
		constexpr auto RelevancyVolume = 0x2e8; // UBoxComponent*
		constexpr auto ContainedPlayers = 0x2f0; // TArray<AKSCharacter*>
		constexpr auto ContainedObjectives = 0x300; // TArray<AKSObjectiveBase*>
	}

	namespace n_URectLightComponent {
		constexpr auto SourceWidth = 0x350; // float
		constexpr auto SourceHeight = 0x354; // float
		constexpr auto BarnDoorAngle = 0x358; // float
		constexpr auto BarnDoorLength = 0x35c; // float
		constexpr auto SourceTexture = 0x360; // UTexture*
	}

	namespace n_UKSNoFlyZoneTracker {
		constexpr auto QuantityDowns = 0xa0; // int32_t
		constexpr auto PlayerDowns = 0xa8; // TMap<AKSPlayerState*, int32_t>
	}

	namespace n_UCamMod_Mantle_C {
		constexpr auto UberGraphFrame = 0x68; // FPointerToUberGraphFrame
		constexpr auto MantleIndex = 0x70; // int32_t
	}

	namespace n_UExponentialHeightFogComponent {
		constexpr auto FogDensity = 0x208; // float
		constexpr auto FogHeightFalloff = 0x20c; // float
		constexpr auto SecondFogData = 0x210; // FExponentialHeightFogData
		constexpr auto FogInscatteringColor = 0x21c; // FLinearColor
		constexpr auto InscatteringColorCubemap = 0x230; // UTextureCube*
		constexpr auto InscatteringColorCubemapAngle = 0x238; // float
		constexpr auto InscatteringTextureTint = 0x23c; // FLinearColor
		constexpr auto FullyDirectionalInscatteringColorDistance = 0x24c; // float
		constexpr auto NonDirectionalInscatteringColorDistance = 0x250; // float
		constexpr auto DirectionalInscatteringExponent = 0x254; // float
		constexpr auto DirectionalInscatteringStartDistance = 0x258; // float
		constexpr auto DirectionalInscatteringColor = 0x25c; // FLinearColor
		constexpr auto FogMaxOpacity = 0x26c; // float
		constexpr auto StartDistance = 0x270; // float
		constexpr auto StartDistancePerPlatformScale = 0x274; // FPerPlatformFloat
		constexpr auto FogCutoffDistance = 0x278; // float
		constexpr auto bEnableVolumetricFog = 0x27c; // bool
		constexpr auto VolumetricFogScatteringDistribution = 0x280; // float
		constexpr auto VolumetricFogAlbedo = 0x284; // FColor
		constexpr auto VolumetricFogEmissive = 0x288; // FLinearColor
		constexpr auto VolumetricFogExtinctionScale = 0x298; // float
		constexpr auto VolumetricFogDistance = 0x29c; // float
		constexpr auto VolumetricFogStaticLightingScatteringIntensity = 0x2a0; // float
		constexpr auto bOverrideLightColorsWithFogInscatteringColors = 0x2a4; // bool
	}

	namespace n_UMaterialExpressionTruncate {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UPGame_GameInstance {
		constexpr auto bLogoffOnAppSuspend = 0x1e8; // bool
		constexpr auto bLogoffOnAppResume = 0x1e9; // bool
		constexpr auto LastSonyMatchId = 0x1f0; // FString
		constexpr auto bStartHotfixProcessingOnUpdateAppSettings = 0x240; // bool
	}

	namespace n_AAIController {
		constexpr auto bStartAILogicOnPossess = 0x2d0; // char : 1
		constexpr auto bStopAILogicOnUnposses = 0x2d0; // char : 1
		constexpr auto bLOSflag = 0x2d0; // char : 1
		constexpr auto bSkipExtraLOSChecks = 0x2d0; // char : 1
		constexpr auto bAllowStrafe = 0x2d0; // char : 1
		constexpr auto bWantsPlayerState = 0x2d0; // char : 1
		constexpr auto bSetControlRotationFromPawnOrientation = 0x2d0; // char : 1
		constexpr auto PathFollowingComponent = 0x2d8; // UPathFollowingComponent*
		constexpr auto BrainComponent = 0x2e0; // UBrainComponent*
		constexpr auto PerceptionComponent = 0x2e8; // UAIPerceptionComponent*
		constexpr auto ActionsComp = 0x2f0; // UPawnActionsComponent*
		constexpr auto Blackboard = 0x2f8; // UBlackboardComponent*
		constexpr auto CachedGameplayTasksComponent = 0x300; // UGameplayTasksComponent*
		constexpr auto DefaultNavigationFilterClass = 0x308; // UNavigationQueryFilter*
		constexpr auto ReceiveMoveCompleted = 0x310; // FMulticastInlineDelegate
	}

	namespace n_USourceEffectChorusPreset {
		constexpr auto Settings = 0x80; // FSourceEffectChorusSettings
	}

	namespace n_UKSLOSEvaluator {
		constexpr auto MatchOnLOSBlocked = 0x28; // bool
		constexpr auto LOSChannel = 0x29; // ECollisionChannel
	}

	namespace n_UKSModInst_CacheAim {
		constexpr auto CachedAim = 0x478; // FAimData
		constexpr auto AimReferenceAsset = 0x4c8; // UKSWeaponAsset*
		constexpr auto AimRange = 0x4d0; // float
		constexpr auto bCacheAimOnSetup = 0x4d4; // bool
	}

	namespace n_UMaterialExpressionViewProperty {
		constexpr auto Property = 0x40; // EMaterialExposedViewProperty
	}

	namespace n_UNavCollisionBase {
		constexpr auto bIsDynamicObstacle = 0x28; // char : 1
	}

	namespace n_UWBP_BoosterInventoryScreen_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto OpenPanel = 0x528; // UWidgetAnimation*
		constexpr auto ActiveBoostsContainer = 0x530; // UVerticalBox*
		constexpr auto ActiveBoostsSwitcher = 0x538; // UWidgetSwitcher*
		constexpr auto ActiveBoostsTitle = 0x540; // UWBP_Header3_C*
		constexpr auto Blocker = 0x548; // UButton*
		constexpr auto BoostInventoryContainer = 0x550; // UWrapBox*
		constexpr auto BoostInventorySwitcher = 0x558; // UWidgetSwitcher*
		constexpr auto BoostInventoryTitle = 0x560; // UWBP_Header3_C*
		constexpr auto Image_114 = 0x568; // UImage*
		constexpr auto Image_157 = 0x570; // UImage*
		constexpr auto NoBoostsInfoGroup = 0x578; // UOverlay*
		constexpr auto WBP_ActiveBoosterEntry = 0x580; // UWBP_ActiveBoosterEntry_C*
		constexpr auto WBP_ActiveBoosterEntry_2 = 0x588; // UWBP_ActiveBoosterEntry_C*
		constexpr auto WBP_BoosterInventoryItem = 0x590; // UWBP_BoosterInventoryItem_C*
		constexpr auto WBP_BoosterInventoryItem_2 = 0x598; // UWBP_BoosterInventoryItem_C*
		constexpr auto WBP_BoosterInventoryItem_3 = 0x5a0; // UWBP_BoosterInventoryItem_C*
		constexpr auto WBP_BoosterInventoryItem_4 = 0x5a8; // UWBP_BoosterInventoryItem_C*
		constexpr auto WBP_BoosterInventoryItem_5 = 0x5b0; // UWBP_BoosterInventoryItem_C*
		constexpr auto WBP_BoosterInventoryItem_6 = 0x5b8; // UWBP_BoosterInventoryItem_C*
		constexpr auto WBP_BoosterInventoryItem_7 = 0x5c0; // UWBP_BoosterInventoryItem_C*
		constexpr auto WBP_BoosterInventoryItem_8 = 0x5c8; // UWBP_BoosterInventoryItem_C*
		constexpr auto WBP_Header1 = 0x5d0; // UWBP_Header1_C*
		constexpr auto WBP_SidePanel_Left = 0x5d8; // UWBP_SidePanel_Left_C*
	}

	namespace n_ULandscapeMeshProxyComponent {
		constexpr auto LandscapeGuid = 0x4e8; // FGuid
		constexpr auto ProxyComponentBases = 0x4f8; // TArray<FIntPoint>
		constexpr auto ProxyLOD = 0x508; // int8_t
	}

	namespace n_UAssetManagerSettings {
		constexpr auto PrimaryAssetTypesToScan = 0x38; // TArray<FPrimaryAssetTypeInfo>
		constexpr auto DirectoriesToExclude = 0x48; // TArray<FDirectoryPath>
		constexpr auto PrimaryAssetRules = 0x58; // TArray<FPrimaryAssetRulesOverride>
		constexpr auto CustomPrimaryAssetRules = 0x68; // TArray<FPrimaryAssetRulesCustomOverride>
		constexpr auto bOnlyCookProductionAssets = 0x78; // bool
		constexpr auto bShouldManagerDetermineTypeAndName = 0x79; // bool
		constexpr auto bShouldGuessTypeAndNameInEditor = 0x7a; // bool
		constexpr auto bShouldAcquireMissingChunksOnLoad = 0x7b; // bool
		constexpr auto PrimaryAssetIdRedirects = 0x80; // TArray<FAssetManagerRedirect>
		constexpr auto PrimaryAssetTypeRedirects = 0x90; // TArray<FAssetManagerRedirect>
		constexpr auto AssetPathRedirects = 0xa0; // TArray<FAssetManagerRedirect>
		constexpr auto MetaDataTagsForAssetRegistry = 0xb0; // TSet<FName>
		constexpr auto PrimaryAssetTypeWrangleWhitelist = 0x100; // TArray<FName>
		constexpr auto bForceUseAllBundlesDuringLoadRecursive = 0x110; // bool
	}

	namespace n_UInAppPurchaseCallbackProxy {
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UHandCrawlingNotify_C {
		constexpr auto StepType = 0x38; // StepType
		constexpr auto BoneName = 0x3c; // FName
	}

	namespace n_UWBP_StorePriceTag_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto CurrencyIcon = 0x528; // UKSAsyncImage*
		constexpr auto CurrencySwitcher = 0x530; // UWidgetSwitcher*
		constexpr auto Image_136 = 0x538; // UImage*
		constexpr auto OriginalPortalPriceWrapper = 0x540; // UOverlay*
		constexpr auto OriginalPrice = 0x548; // UTextBlock*
		constexpr auto OriginalPriceContainer = 0x550; // UCanvasPanel*
		constexpr auto OriginalRealMoneyPrice = 0x558; // UTextBlock*
		constexpr auto PriceAmount = 0x560; // UTextBlock*
		constexpr auto RealMoneyPrice = 0x568; // UTextBlock*
		constexpr auto strikethrough = 0x570; // UImage*
		constexpr auto bIndicateNotEnoughCurrency = 0x578; // bool
		constexpr auto PriceColor = 0x57c; // FLinearColor
		constexpr auto OriginalPriceColor = 0x58c; // FLinearColor
	}

	namespace n_UParticleModuleVectorFieldLocal {
		constexpr auto VectorField = 0x30; // UVectorField*
		constexpr auto RelativeTranslation = 0x38; // FVector
		constexpr auto RelativeRotation = 0x44; // FRotator
		constexpr auto RelativeScale3D = 0x50; // FVector
		constexpr auto Intensity = 0x5c; // float
		constexpr auto Tightness = 0x60; // float
		constexpr auto bIgnoreComponentTransform = 0x64; // char : 1
		constexpr auto bTileX = 0x64; // char : 1
		constexpr auto bTileY = 0x64; // char : 1
		constexpr auto bTileZ = 0x64; // char : 1
		constexpr auto bUseFixDT = 0x64; // char : 1
	}

	namespace n_UKSExpDisplayWidget {
		constexpr auto bIsWaitingForNextQueue = 0x550; // bool
	}

	namespace n_ULiveLinkSettings {
		constexpr auto DefaultRoleSettings = 0x28; // TArray<FLiveLinkRoleProjectSetting>
		constexpr auto FrameInterpolationProcessor = 0x38; // ULiveLinkFrameInterpolationProcessor*
		constexpr auto DefaultLiveLinkPreset = 0x40; // TSoftObjectPtr<ULiveLinkPreset>
		constexpr auto PresetSaveDir = 0x68; // FDirectoryPath
		constexpr auto ClockOffsetCorrectionStep = 0x78; // float
		constexpr auto DefaultMessageBusSourceMode = 0x7c; // ELiveLinkSourceMode
		constexpr auto MessageBusPingRequestFrequency = 0x80; // double
		constexpr auto MessageBusHeartbeatFrequency = 0x88; // double
		constexpr auto MessageBusHeartbeatTimeout = 0x90; // double
		constexpr auto MessageBusTimeBeforeRemovingInactiveSource = 0x98; // double
		constexpr auto TimeWithoutFrameToBeConsiderAsInvalid = 0xa0; // double
		constexpr auto ValidColor = 0xa8; // FLinearColor
		constexpr auto InvalidColor = 0xb8; // FLinearColor
		constexpr auto TextSizeSource = 0xc8; // char
		constexpr auto TextSizeSubject = 0xc9; // char
	}

	namespace n_UWBP_ChallengeView_DailyContracts_C {
		constexpr auto UberGraphFrame = 0x530; // FPointerToUberGraphFrame
		constexpr auto Image_191 = 0x538; // UImage*
		constexpr auto Image_362 = 0x540; // UImage*
		constexpr auto TimeRemaining = 0x548; // UTextBlock*
		constexpr auto TimerSwitcher = 0x550; // UWidgetSwitcher*
		constexpr auto WBP_ChallengeEntry_Card = 0x558; // UWBP_ChallengeEntry_Card_C*
		constexpr auto WBP_ChallengeEntry_Card_2 = 0x560; // UWBP_ChallengeEntry_Card_C*
		constexpr auto WBP_ChallengeEntry_Card_3 = 0x568; // UWBP_ChallengeEntry_Card_C*
		constexpr auto WBP_ChallengeEntry_Weekly = 0x570; // UWBP_ChallengeEntry_Weekly_C*
		constexpr auto CachedTimeRemainingSecs = 0x578; // int32_t
		constexpr auto CachedContractIds = 0x580; // TArray<int32_t>
	}

	namespace n_UOnlineEngineInterfaceImpl {
		constexpr auto VoiceSubsystemNameOverride = 0x28; // FName
	}

	namespace n_UInterpTrackToggle {
		constexpr auto ToggleTrack = 0x70; // TArray<FToggleTrackKey>
		constexpr auto bActivateSystemEachUpdate = 0x80; // char : 1
		constexpr auto bActivateWithJustAttachedFlag = 0x80; // char : 1
		constexpr auto bFireEventsWhenForwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenJumpingForwards = 0x80; // char : 1
	}

	namespace n_UWBP_BattlePassAcquisitionTitle_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto BattlePassSeasonName = 0x528; // UTextBlock*
		constexpr auto Image = 0x530; // UImage*
		constexpr auto Image_183 = 0x538; // UImage*
		constexpr auto Image_533 = 0x540; // UImage*
		constexpr auto TitleText = 0x548; // UTextBlock*
		constexpr auto TypeSwitcher = 0x550; // UWidgetSwitcher*
		constexpr auto UpsellSubtitle = 0x558; // UTextBlock*
		constexpr auto WBP_BattlePassEmblem = 0x560; // UWBP_BattlePassEmblem_C*
	}

	namespace n_UMaterialExpressionBentNormalCustomOutput {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UAttachmentCollection {
		constexpr auto AttachmentCollectionName = 0x98; // FText
		constexpr auto AttachmentCollectionDescription = 0xb0; // FText
	}

	namespace n_UKSActivityRewardCondition_Headshot {
		constexpr auto IsHeadshot = 0x30; // bool
	}

	namespace n_UKSActivityRequirement_MultiItem {
		constexpr auto RequiredEntries = 0x30; // int32_t
		constexpr auto RequiredOwnedItems = 0x38; // TMap<int32_t, int32_t>
	}

	namespace n_UMaterialExpressionSphereMask {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto Radius = 0x68; // FExpressionInput
		constexpr auto Hardness = 0x7c; // FExpressionInput
		constexpr auto AttenuationRadius = 0x90; // float
		constexpr auto HardnessPercent = 0x94; // float
	}

	namespace n_UKSBTTask_InteractWith {
		constexpr auto ShouldHold = 0x98; // bool
	}

	namespace n_UWBP_AmmoCount_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto AmmoActive = 0x240; // UImage*
		constexpr auto AmmoInactive = 0x248; // UImage*
		constexpr auto AmmoTexture = 0x250; // UTexture2D*
		constexpr auto InactiveAmmoTexture = 0x258; // UTexture2D*
	}

	namespace n_UWBP_RewardListEntry_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto onCurrentLoop = 0x528; // UWidgetAnimation*
		constexpr auto SelectedPulse = 0x530; // UWidgetAnimation*
		constexpr auto onSelected = 0x538; // UWidgetAnimation*
		constexpr auto AchievedGradient = 0x540; // UImage*
		constexpr auto AchievedGradient_2 = 0x548; // UImage*
		constexpr auto AchievedOverlay = 0x550; // UWidgetSwitcher*
		constexpr auto AchievedStroke = 0x558; // UBorder*
		constexpr auto AchievedStroke_2 = 0x560; // UBorder*
		constexpr auto AchievedStrokeGlow = 0x568; // UBorder*
		constexpr auto AchievedUnderlay = 0x570; // UWidgetSwitcher*
		constexpr auto CompletedFree = 0x578; // UImage*
		constexpr auto CompletedPremium = 0x580; // UImage*
		constexpr auto CompletedSwitcher = 0x588; // UWidgetSwitcher*
		constexpr auto CurrentLevelIndicator = 0x590; // UImage*
		constexpr auto CurrentLevelUnderlay = 0x598; // USizeBox*
		constexpr auto GlowFreeAdditive = 0x5a0; // UWBP_AdditiveImage_C*
		constexpr auto GlowPremAdditive = 0x5a8; // UWBP_AdditiveImage_C*
		constexpr auto GradientBand = 0x5b0; // UVerticalBox*
		constexpr auto HitTest = 0x5b8; // UButton*
		constexpr auto Locked = 0x5c0; // UImage*
		constexpr auto LockedPremium = 0x5c8; // UImage*
		constexpr auto LockedTierShade = 0x5d0; // UImage*
		constexpr auto RewardIcon = 0x5d8; // UWBP_KSCosmeticItemDisplay_C*
		constexpr auto RewardStatusSwitcher = 0x5e0; // UWidgetSwitcher*
		constexpr auto SelectedGradientBack = 0x5e8; // UImage*
		constexpr auto SelectionFrame = 0x5f0; // UImage*
		constexpr auto SideGlow = 0x5f8; // UImage*
		constexpr auto SideGlow_2 = 0x600; // UImage*
		constexpr auto OnBtnClicked = 0x608; // FMulticastInlineDelegate
		constexpr auto OnBtnHovered = 0x618; // FMulticastInlineDelegate
		constexpr auto OnBtnUnhovered = 0x628; // FMulticastInlineDelegate
		constexpr auto ClickRewardListEntry = 0x638; // UAkAudioEvent*
		constexpr auto HoverRewardListEntry = 0x640; // UAkAudioEvent*
		constexpr auto ActivityTier = 0x648; // FActivityTier
	}

	namespace n_UBTComposite_SimpleParallel {
		constexpr auto FinishMode = 0x90; // EBTParallelMode
	}

	namespace n_UKSBoost {
		constexpr auto BoostCategory = 0x2d0; // EBoostCategory
		constexpr auto BoostDurationCategory = 0x2d1; // EBoostDurationCategory
		constexpr auto IsActiveBooster = 0x2d2; // bool
		constexpr auto BonusProgressionKeys = 0x2d8; // TArray<FString>
	}

	namespace n_USocialParty {
		constexpr auto ReservationBeaconClientClass = 0x58; // APartyBeaconClient*
		constexpr auto SpectatorBeaconClientClass = 0x60; // ASpectatorBeaconClient*
		constexpr auto OwningLocalUserId = 0x78; // FUniqueNetIdRepl
		constexpr auto CurrentLeaderId = 0xa0; // FUniqueNetIdRepl
		constexpr auto PartyMembersById = 0xc8; // TMap<FUniqueNetIdRepl, UPartyMember*>
		constexpr auto bEnableAutomaticPartyRejoin = 0x118; // bool
		constexpr auto ReservationBeaconClient = 0x190; // APartyBeaconClient*
		constexpr auto SpectatorBeaconClient = 0x1a0; // ASpectatorBeaconClient*
	}

	namespace n_UKSActivityRewardCondition_FacingDirection {
		constexpr auto MaxAngle = 0x30; // float
		constexpr auto MinAngle = 0x34; // float
		constexpr auto bCheckInstigator = 0x38; // bool
		constexpr auto bCheckTarget = 0x39; // bool
	}

	namespace n_AKSBlueprintableInteractable {
		constexpr auto InteractionBlockerManager = 0x228; // UKSInteractionBlockerManager*
		constexpr auto InteractableComponent = 0x230; // UKSInteractableComponent*
		constexpr auto Duration = 0x238; // float
		constexpr auto bUseCollisionForInteractionDistance = 0x23c; // bool
		constexpr auto bCanInteractFromBehind = 0x23d; // bool
		constexpr auto bCanInteractWhileDowned = 0x23e; // bool
		constexpr auto bShouldDisplayInteractionProgress = 0x23f; // bool
		constexpr auto InteractionName = 0x240; // FName
		constexpr auto MaxNumberOfInteractors = 0x248; // int32_t
		constexpr auto InteractionPriority = 0x24c; // int32_t
		constexpr auto bInteractionAllowed = 0x250; // bool
		constexpr auto InteractionType = 0x258; // UKSInteractionType*
		constexpr auto OutlinedComponents = 0x260; // TArray<UPrimitiveComponent*>
		constexpr auto ActiveInteractions = 0x280; // TArray<UKSInteractionManager*>
		constexpr auto NumActiveInteractions = 0x290; // int32_t
		constexpr auto ProgressText = 0x298; // FText
		constexpr auto PromptText = 0x2b0; // FText
		constexpr auto OnInteractionStarted = 0x2c8; // FMulticastInlineDelegate
		constexpr auto OnInteractionEnded = 0x2d8; // FMulticastInlineDelegate
		constexpr auto OnInteractionComplete = 0x2e8; // FMulticastInlineDelegate
	}

	namespace n_UKSAssetManager {
		constexpr auto bCookAndPackageActivities = 0x7d8; // bool
		constexpr auto bCookAndPackageJobActivities = 0x7d9; // bool
		constexpr auto bCookAndPackageWeaponActivities = 0x7da; // bool
	}

	namespace n_UImageIconInfo {
		constexpr auto IconImage = 0x28; // FSoftObjectPath
		constexpr auto LegacyIconTexture = 0x40; // TSoftObjectPtr<UTexture2D>
	}

	namespace n_UMainEnvironmentTracker_C {
		constexpr auto Environment Priorties = 0x138; // TArray<FName>
		constexpr auto Temp_name_Variable = 0x148; // FName
		constexpr auto K2Node_SwitchName_CmpSuccess = 0x150; // bool
		constexpr auto Temp_name_Variable_2 = 0x154; // FName
		constexpr auto Temp_name_Variable_3 = 0x15c; // FName
		constexpr auto Temp_name_Variable_4 = 0x164; // FName
		constexpr auto K2Node_Event_OldEnvironment = 0x16c; // FName
	}

	namespace n_UParticleModuleCollisionGPU {
		constexpr auto Resilience = 0x30; // FRawDistributionFloat
		constexpr auto ResilienceScaleOverLife = 0x60; // FRawDistributionFloat
		constexpr auto Friction = 0x90; // float
		constexpr auto RandomSpread = 0x94; // float
		constexpr auto RandomDistribution = 0x98; // float
		constexpr auto RadiusScale = 0x9c; // float
		constexpr auto RadiusBias = 0xa0; // float
		constexpr auto Response = 0xa4; // EParticleCollisionResponse
		constexpr auto CollisionMode = 0xa5; // EParticleCollisionMode
	}

	namespace n_UMaterialExpressionSteppedShadowSkinCustomOutput {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UAkAudioEvent {
		constexpr auto AutomaticMaxAttenuationRadius = 0x58; // float
		constexpr auto LocalizedPlatformAssetDataMap = 0x60; // TMap<FString, TSoftObjectPtr<UAkAssetPlatformData>>
		constexpr auto RequiredBank = 0xb0; // UAkAudioBank*
		constexpr auto CurrentLocalizedPlatformData = 0xb8; // UAkAssetPlatformData*
	}

	namespace n_UMaterialExpressionFresnel {
		constexpr auto ExponentIn = 0x40; // FExpressionInput
		constexpr auto Exponent = 0x54; // float
		constexpr auto BaseReflectFractionIn = 0x58; // FExpressionInput
		constexpr auto BaseReflectFraction = 0x6c; // float
		constexpr auto Normal = 0x70; // FExpressionInput
	}

	namespace n_UAkMediaAssetData {
		constexpr auto IsStreamed = 0x28; // bool
		constexpr auto UseDeviceMemory = 0x29; // bool
	}

	namespace n_UARTrackableNotifyComponent {
		constexpr auto OnAddTrackedGeometry = 0xb0; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedGeometry = 0xc0; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedGeometry = 0xd0; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedPlane = 0xe0; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedPlane = 0xf0; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedPlane = 0x100; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedPoint = 0x110; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedPoint = 0x120; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedPoint = 0x130; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedImage = 0x140; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedImage = 0x150; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedImage = 0x160; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedFace = 0x170; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedFace = 0x180; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedFace = 0x190; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedEnvProbe = 0x1a0; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedEnvProbe = 0x1b0; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedEnvProbe = 0x1c0; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedObject = 0x1d0; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedObject = 0x1e0; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedObject = 0x1f0; // FMulticastInlineDelegate
	}

	namespace n_UWBP_GameModeInfoPanel_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto DescriptionLabel = 0x240; // URichTextBlock*
		constexpr auto Header = 0x248; // UWBP_Header2_C*
		constexpr auto ImageSwitcher = 0x250; // UWidgetSwitcher*
		constexpr auto MapImage = 0x258; // UWBP_AsyncIcon_C*
		constexpr auto mapName = 0x260; // UTextBlock*
		constexpr auto WBP_AsyncIcon = 0x268; // UWBP_AsyncIcon_C*
		constexpr auto DemolitionImage = 0x270; // UTexture2D*
		constexpr auto ExtractionImage = 0x278; // UTexture2D*
		constexpr auto StrikeoutImage = 0x280; // UTexture2D*
		constexpr auto DTCustomQueues = 0x288; // UDataTable*
	}

	namespace n_UWBP_RogueListingOfferPanel_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto OnHoverAnim = 0x528; // UWidgetAnimation*
		constexpr auto BannerContainer = 0x530; // UVerticalBox*
		constexpr auto BtnFill = 0x538; // UImage*
		constexpr auto BtnStroke = 0x540; // UImage*
		constexpr auto DiscountTag = 0x548; // UWBP_StoreDiscountTag_C*
		constexpr auto DLCDesc = 0x550; // UTextBlock*
		constexpr auto DLCName = 0x558; // UTextBlock*
		constexpr auto DLCNameWrapper = 0x560; // UVerticalBox*
		constexpr auto GamepadPrompt = 0x568; // UWBP_KeyCallout_C*
		constexpr auto Image_326 = 0x570; // UImage*
		constexpr auto ItemImage = 0x578; // UWBP_AsyncIcon_C*
		constexpr auto RarityDecro_2 = 0x580; // UImage*
		constexpr auto RefundTotal_2 = 0x588; // UTextBlock*
		constexpr auto RepRefund = 0x590; // UBorder*
		constexpr auto WBP_StorePanelButton = 0x598; // UWBP_StorePanelButton_C*
		constexpr auto StoreItem = 0x5a0; // UPUMG_StoreItem*
		constexpr auto OnOfferClicked = 0x5a8; // FMulticastInlineDelegate
	}

	namespace n_UKSPlayerMatchStats {
		constexpr auto StatsByType = 0x28; // TMap<EPlayerStatType, FPlayerMatchStatInfo>
	}

	namespace n_UWBP_BattlePassLobbyDisplay_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto animCTALoop = 0x528; // UWidgetAnimation*
		constexpr auto animOnHover = 0x530; // UWidgetAnimation*
		constexpr auto animOnClick = 0x538; // UWidgetAnimation*
		constexpr auto BattlePassName = 0x540; // UTextBlock*
		constexpr auto BorderShimmer = 0x548; // UImage*
		constexpr auto Btn_BkgHoverGradient = 0x550; // UImage*
		constexpr auto Btn_BkgPress = 0x558; // UImage*
		constexpr auto Btn_Fill = 0x560; // UImage*
		constexpr auto Btn_HoverStroke = 0x568; // UImage*
		constexpr auto Btn_Stroke = 0x570; // UImage*
		constexpr auto BtnShimmer = 0x578; // UImage*
		constexpr auto ButtonBackground = 0x580; // UOverlay*
		constexpr auto CheckMark_2 = 0x588; // UImage*
		constexpr auto EventProgress = 0x590; // UWBP_ProgressEarnedBar_C*
		constexpr auto EventsHeader = 0x598; // UWBP_Header3_C*
		constexpr auto Fill = 0x5a0; // UImage*
		constexpr auto Fill_2 = 0x5a8; // UImage*
		constexpr auto FillInterior_2 = 0x5b0; // UImage*
		constexpr auto FillShimmer = 0x5b8; // UCanvasPanel*
		constexpr auto FinishedItemIcon_2 = 0x5c0; // UOverlay*
		constexpr auto HitTarget = 0x5c8; // UButton*
		constexpr auto NormalItemIcon = 0x5d0; // UOverlay*
		constexpr auto RewardItem = 0x5d8; // UWBP_KSCosmeticItemDisplay_C*
		constexpr auto WBP_BattlePassEmblem = 0x5e0; // UWBP_BattlePassEmblem_C*
		constexpr auto WBP_CallToAction = 0x5e8; // UWBP_CallToAction_C*
		constexpr auto BattlePassViewed = 0x5f0; // FName
	}

	namespace n_UInterpTrackColorProp {
		constexpr auto PropertyName = 0x90; // FName
	}

	namespace n_UParticleModuleSourceMovement {
		constexpr auto SourceMovementScale = 0x30; // FRawDistributionVector
	}

	namespace n_UKSJsonDataFactory {
		constexpr auto mapFilePathToTexture = 0x48; // TMap<FString, UTexture2DDynamic*>
	}

	namespace n_UKSPlayerMod_MainCameraFov {
		constexpr auto FieldOfViewOverride = 0x330; // float
		constexpr auto SprintFovOverride = 0x334; // float
		constexpr auto CameraBoomLengthBonus = 0x338; // float
		constexpr auto SprintCameraBoomLengthBonus = 0x33c; // float
		constexpr auto SprintCameraShakeOverride = 0x340; // TSoftClassPtr<UObject>
	}

	namespace n_UKSActiveWeaponComponentWidget {
		constexpr auto ActiveWeaponSlot = 0x5b0; // int32_t
		constexpr auto EquipPointsToIgnore = 0x5b8; // FGameplayTagContainer
		constexpr auto bDelayClearUntilNextTick = 0x5d8; // bool
		constexpr auto WeakActiveWeaponComponentPtr = 0x5dc; // TWeakObjectPtr<UKSWeaponComponent>
	}

	namespace n_UMaterialExpressionDotProduct {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_UKSLongShot {
		constexpr auto DistanceRequirement = 0xa0; // float
	}

	namespace n_UKSPlayerMod_Sight {
		constexpr auto SeeFootprints = 0x330; // bool
	}

	namespace n_UWBP_Notification_Icon_C {
		constexpr auto UberGraphFrame = 0x4c0; // FPointerToUberGraphFrame
		constexpr auto WBP_CallToAction = 0x4c8; // UWBP_CallToAction_C*
	}

	namespace n_UWBP_ControllerPrompt_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto Prompt = 0x528; // UImage*
		constexpr auto PromptType = 0x530; // EGamepadPromptType
		constexpr auto ActionName = 0x534; // FName
		constexpr auto Button = 0x540; // FKey
	}

	namespace n_UMaterialFunctionInstance {
		constexpr auto Parent = 0x40; // UMaterialFunctionInterface*
		constexpr auto Base = 0x48; // UMaterialFunctionInterface*
		constexpr auto ScalarParameterValues = 0x50; // TArray<FScalarParameterValue>
		constexpr auto VectorParameterValues = 0x60; // TArray<FVectorParameterValue>
		constexpr auto TextureParameterValues = 0x70; // TArray<FTextureParameterValue>
		constexpr auto FontParameterValues = 0x80; // TArray<FFontParameterValue>
		constexpr auto StaticSwitchParameterValues = 0x90; // TArray<FStaticSwitchParameter>
		constexpr auto StaticComponentMaskParameterValues = 0xa0; // TArray<FStaticComponentMaskParameter>
		constexpr auto RuntimeVirtualTextureParameterValues = 0xb0; // TArray<FRuntimeVirtualTextureParameterValue>
	}

	namespace n_UParticleModuleLocation_Seeded {
		constexpr auto RandomSeedInfo = 0x80; // FParticleRandomSeedInfo
	}

	namespace n_UMovieSceneLiveLinkSubSection {
		constexpr auto SubSectionData = 0x28; // FLiveLinkSubSectionData
		constexpr auto SubjectRole = 0x38; // ULiveLinkRole*
	}

	namespace n_UAudioOcclusionComponent {
		constexpr auto LUT = 0xb0; // UBakedOcclusionLUT*
	}

	namespace n_UEndTurnCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UAssetExportTask {
		constexpr auto Object = 0x28; // UObject*
		constexpr auto Exporter = 0x30; // UExporter*
		constexpr auto Filename = 0x38; // FString
		constexpr auto bSelected = 0x48; // bool
		constexpr auto bReplaceIdentical = 0x49; // bool
		constexpr auto bPrompt = 0x4a; // bool
		constexpr auto bAutomated = 0x4b; // bool
		constexpr auto bUseFileArchive = 0x4c; // bool
		constexpr auto bWriteEmptyFiles = 0x4d; // bool
		constexpr auto IgnoreObjectList = 0x50; // TArray<UObject*>
		constexpr auto Options = 0x60; // UObject*
		constexpr auto Errors = 0x68; // TArray<FString>
	}

	namespace n_UPawnMovementComponent {
		constexpr auto PawnOwner = 0x130; // APawn*
	}

	namespace n_UDistributionFloatUniformCurve {
		constexpr auto ConstantCurve = 0x38; // FInterpCurveVector2D
	}

	namespace n_USoundNodeModulatorContinuous {
		constexpr auto PitchModulationParams = 0x48; // FModulatorContinuousParams
		constexpr auto VolumeModulationParams = 0x68; // FModulatorContinuousParams
	}

	namespace n_UMovieSceneAkTrack {
		constexpr auto Sections = 0x58; // TArray<UMovieSceneSection*>
		constexpr auto bIsAMasterTrack = 0x68; // char : 1
	}

	namespace n_AKSFootstepOverrideVolume {
		constexpr auto OverrideMaterialName = 0x260; // FName
		constexpr auto OverridePriority = 0x268; // float
	}

	namespace n_UKSPlayerModInstance {
		constexpr auto OnModInstRemoved = 0xb0; // FMulticastInlineDelegate
		constexpr auto OnModTriggered = 0xe0; // FMulticastInlineDelegate
		constexpr auto bPreventModInitialization = 0xf0; // bool
		constexpr auto bInitialized = 0xf1; // bool
		constexpr auto OwningPlayerModManager = 0xf8; // AKSPlayerModManager*
		constexpr auto OwnerCharacter = 0x100; // AKSCharacter*
		constexpr auto OwnerCharacterFoundation = 0x110; // AKSCharacterFoundation*
		constexpr auto ModAsset = 0x118; // UKSPlayerMod*
		constexpr auto ModInstigator = 0x120; // AKSPlayerState*
		constexpr auto ModSource = 0x128; // EKSModSource
		constexpr auto ActorInstigator = 0x12c; // TWeakObjectPtr<AActor>
		constexpr auto InstanceCount = 0x134; // int32_t
		constexpr auto LocalInstanceCount = 0x138; // int32_t
		constexpr auto bUsesDuration = 0x13c; // bool
		constexpr auto bDisplaysDuration = 0x13d; // bool
		constexpr auto bUseAssetDataTableManager = 0x150; // bool
		constexpr auto AssetDataTableManager = 0x158; // UDynamicSkinTable*
		constexpr auto PersistentSkinDataTables = 0x160; // TArray<FDataTableInfo>
		constexpr auto UISkinDataTables = 0x170; // TArray<FDataTableInfo>
		constexpr auto bLatencyElapsed = 0x198; // bool
		constexpr auto InputActions = 0x1a8; // TArray<FKSPlayerModInputBinding>
	}

	namespace n_UEditableMesh {
		constexpr auto Adapters = 0x3b8; // TArray<UEditableMeshAdapter*>
		constexpr auto TextureCoordinateCount = 0x3d0; // int32_t
		constexpr auto PendingCompactCounter = 0x51c; // int32_t
		constexpr auto SubdivisionCount = 0x520; // int32_t
	}

	namespace n_UANotifyState_ShowGadget_C {
		constexpr auto bReverse = 0x30; // bool
		constexpr auto bKeepGadgetUnhidden = 0x31; // bool
		constexpr auto OnlyKeepUnhiddenIfGadgetIsEquiped = 0x32; // bool
	}

	namespace n_UARSaveWorldAsyncTaskBlueprintProxy {
		constexpr auto OnSuccess = 0x50; // FMulticastInlineDelegate
		constexpr auto OnFailed = 0x60; // FMulticastInlineDelegate
	}

	namespace n_UWBP_KeyCallout_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto CalloutIcon = 0x240; // UWBP_AsyncIcon_C*
		constexpr auto Key = 0x248; // FKey
		constexpr auto KeyBind = 0x260; // FName
		constexpr auto DisplayKeybind = 0x268; // bool
		constexpr auto SecondaryKey = 0x269; // bool
		constexpr auto FallbackToDefaults = 0x26a; // bool
		constexpr auto GamepadDoubleTap = 0x26b; // bool
	}

	namespace n_UNiagaraDataInterfaceColorCurve {
		constexpr auto RedCurve = 0x58; // FRichCurve
		constexpr auto GreenCurve = 0xd8; // FRichCurve
		constexpr auto BlueCurve = 0x158; // FRichCurve
		constexpr auto AlphaCurve = 0x1d8; // FRichCurve
	}

	namespace n_UNamePromptTempClone_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto MobileLayout = 0x528; // UWidgetAnimation*
		constexpr auto bkg = 0x530; // UImage*
		constexpr auto CreateAccountBtn = 0x538; // UPopupButton_C*
		constexpr auto ErrorWrapper = 0x540; // UHorizontalBox*
		constexpr auto Gradient = 0x548; // UImage*
		constexpr auto PCUsername = 0x550; // UOutlineContainer_C*
		constexpr auto UsernameField = 0x558; // UEditableTextBox*
		constexpr auto WarningIcon_2 = 0x560; // UImage*
		constexpr auto WarningText = 0x568; // UTextBlock*
		constexpr auto LoginDataFac = 0x570; // UPUMG_LoginDataFactory*
	}

	namespace n_AKSVehicle {
		constexpr auto KSVehicleMovementComponent = 0x2a0; // UKSVehicleMovementComponent4W*
		constexpr auto InteractionBlockerManager = 0x2a8; // UKSInteractionBlockerManager*
		constexpr auto InteractableComponent = 0x2b0; // UKSInteractableComponent*
		constexpr auto Seats = 0x2b8; // TArray<UKSVehicleSeatComponent*>
		constexpr auto RiderMap = 0x2c8; // TMap<AKSCharacter*, UKSVehicleSeatComponent*>
		constexpr auto OnVehicleSeatingChanged = 0x318; // FMulticastInlineDelegate
		constexpr auto VehicleName = 0x328; // FText
		constexpr auto TimeToGetIn = 0x340; // float
		constexpr auto MaxSpeedToEnter = 0x344; // float
		constexpr auto MaxAngleFromVehicleToInteract = 0x348; // float
		constexpr auto SwapToDriverSeatHoldTime = 0x34c; // float
		constexpr auto Driver = 0x350; // AKSCharacter*
		constexpr auto Riders = 0x358; // TArray<FKSRiderSeatPair>
		constexpr auto Interacters = 0x368; // TArray<AKSCharacter*>
		constexpr auto PreventRiderSilhouette = 0x379; // bool
		constexpr auto DetachedParachuteLinearDamping = 0x37c; // float
		constexpr auto TimeUntilParachuteDestroyed = 0x380; // float
		constexpr auto ParachuteDetachImpulse = 0x384; // FVector
		constexpr auto ParachuteImpulseBoneNames = 0x390; // TArray<FName>
		constexpr auto ParachuteMesh = 0x3a0; // USkeletalMeshComponent*
		constexpr auto OnManualDetachmentAvailable = 0x3e8; // FMulticastInlineDelegate
		constexpr auto OnManualDetachmentUnavailable = 0x3f8; // FMulticastInlineDelegate
		constexpr auto ValidInteractionTypes = 0x410; // TArray<FName>
		constexpr auto SpringArm = 0x420; // USpringArmComponent*
		constexpr auto MainCamera = 0x428; // UCameraComponent*
		constexpr auto RiderCameraBlendTime = 0x448; // float
		constexpr auto RiderCameraBlendExponent = 0x44c; // float
		constexpr auto CameraXTurnRate = 0x450; // float
		constexpr auto CameraYTurnRate = 0x454; // float
		constexpr auto CameraDeadZoneRate = 0x458; // float
		constexpr auto CameraMinHorizontalAngle = 0x45c; // float
		constexpr auto CameraMaxHorizontalAngle = 0x460; // float
		constexpr auto CameraMinVerticalAngle = 0x464; // float
		constexpr auto CameraMaxVerticalAngle = 0x468; // float
		constexpr auto ViewInfo = 0x46c; // FReplicatedViewInfo
		constexpr auto MaxHealth = 0x474; // float
		constexpr auto CurrentHealth = 0x478; // float
		constexpr auto CurrentHealthStage = 0x480; // float
		constexpr auto OnVehicleHealthChanged = 0x488; // FMulticastInlineDelegate
		constexpr auto Destroyed = 0x498; // bool
		constexpr auto LocalImpulsePosition = 0x49c; // FVector
		constexpr auto DestroyedMesh = 0x4a8; // UStaticMeshComponent*
		constexpr auto DamageableComponents = 0x4b0; // TArray<UPrimitiveComponent*>
		constexpr auto HealthStages = 0x4c8; // TMap<float, FKSVehicleDestructionStage>
		constexpr auto Vulnerabilities = 0x518; // TMap<EDamageCategory, float>
		constexpr auto DamageImpulseMultiplier = 0x568; // float
		constexpr auto DestructionDamageWeapon = 0x570; // UKSWeaponAsset*
		constexpr auto DestructionDamageTypeClass = 0x578; // UDamageType*
		constexpr auto MinSpeedToDamageHitPlayer = 0x5c0; // float
		constexpr auto MaxSpeedToDamageHitPlayer = 0x5c4; // float
		constexpr auto MinPlayerDamageMultiplier = 0x5c8; // float
		constexpr auto MaxPlayerDamageMultiplier = 0x5cc; // float
		constexpr auto PlayerDamageCooldown = 0x5d0; // float
		constexpr auto MinSpeedForImpactDamage = 0x5d4; // float
		constexpr auto MaxSpeedForImpactDamage = 0x5d8; // float
		constexpr auto MinImpactDamage = 0x5dc; // float
		constexpr auto MaxImpactDamage = 0x5e0; // float
		constexpr auto VehicleDamageCooldown = 0x5e4; // float
		constexpr auto MinImpactAngleFromVehicleUp = 0x5e8; // float
		constexpr auto MaxImpactAngleFromVehicleUp = 0x5ec; // float
		constexpr auto MinAngleToSlideCorrect = 0x5f0; // float
		constexpr auto MaxAngleToSlideCorrect = 0x5f4; // float
		constexpr auto MaxSlideCorrectionSpeed = 0x5f8; // float
		constexpr auto ImpactDamageWeapon = 0x608; // UKSWeaponAsset*
		constexpr auto ImpactDamageTypeClass = 0x610; // UDamageType*
		constexpr auto PlayerHitComponent = 0x618; // UCapsuleComponent*
	}

	namespace n_AKSWeapon_MacGuffin {
		constexpr auto bDropOffSuccess = 0x800; // bool
		constexpr auto bHasBeenDropped = 0x801; // bool
		constexpr auto DropThrowSpeed = 0x804; // float
		constexpr auto DropPositionOffset = 0x808; // float
	}

	namespace n_UParticleModuleSizeScaleByTime {
		constexpr auto SizeScaleByTime = 0x30; // FRawDistributionVector
		constexpr auto bEnableX = 0x78; // char : 1
		constexpr auto bEnableY = 0x78; // char : 1
		constexpr auto bEnableZ = 0x78; // char : 1
	}

	namespace n_UMovieSceneMediaTrack {
		constexpr auto MediaSections = 0x58; // TArray<UMovieSceneSection*>
	}

	namespace n_UBTDecorator_BlackboardBase {
		constexpr auto BlackboardKey = 0x68; // FBlackboardKeySelector
	}

	namespace n_UCineCameraComponent {
		constexpr auto FilmbackSettings = 0x7e0; // FCameraFilmbackSettings
		constexpr auto Filmback = 0x7ec; // FCameraFilmbackSettings
		constexpr auto LensSettings = 0x7f8; // FCameraLensSettings
		constexpr auto FocusSettings = 0x810; // FCameraFocusSettings
		constexpr auto CurrentFocalLength = 0x868; // float
		constexpr auto CurrentAperture = 0x86c; // float
		constexpr auto CurrentFocusDistance = 0x870; // float
		constexpr auto FilmbackPresets = 0x880; // TArray<FNamedFilmbackPreset>
		constexpr auto LensPresets = 0x890; // TArray<FNamedLensPreset>
		constexpr auto DefaultFilmbackPresetName = 0x8a0; // FString
		constexpr auto DefaultFilmbackPreset = 0x8b0; // FString
		constexpr auto DefaultLensPresetName = 0x8c0; // FString
		constexpr auto DefaultLensFocalLength = 0x8d0; // float
		constexpr auto DefaultLensFStop = 0x8d4; // float
	}

	namespace n_UAcquisitionItemData {
		constexpr auto StoreItem = 0x28; // UPUMG_StoreItem*
		constexpr auto Quantity = 0x30; // int32_t
		constexpr auto AssociatedWeapon = 0x38; // UKSWeaponAsset*
	}

	namespace n_UMovieSceneCameraShakeTrack {
		constexpr auto CameraShakeSections = 0x58; // TArray<UMovieSceneSection*>
	}

	namespace n_UPacketHandlerProfileConfig {
		constexpr auto Components = 0x28; // TArray<FString>
	}

	namespace n_UKSActivityComponent_Job {
		constexpr auto JobItem = 0x30; // TSoftObjectPtr<UKSJobItem>
	}

	namespace n_UKSHUDComponent_GameInfo {
		constexpr auto Header = 0xb0; // FText
		constexpr auto bShowTopHUDBar = 0xc8; // bool
	}

	namespace n_UMaterialExpressionSceneDepth {
		constexpr auto InputMode = 0x40; // EMaterialSceneAttributeInputMode
		constexpr auto Input = 0x44; // FExpressionInput
		constexpr auto Coordinates = 0x58; // FExpressionInput
		constexpr auto ConstInput = 0x6c; // FVector2D
	}

	namespace n_UKSHairSkeletalMeshComponent {
		constexpr auto SimulationRootBoneName = 0xe58; // FName
	}

	namespace n_AKSInteractableLootSite {
		constexpr auto InteractionBlockerManager = 0x350; // UKSInteractionBlockerManager*
		constexpr auto LootBoxName = 0x358; // FText
		constexpr auto bChoosesBeforeInteraction = 0x370; // bool
		constexpr auto bPressAndHoldPrompt = 0x371; // bool
		constexpr auto InteractableComponent = 0x378; // UKSInteractableComponent*
		constexpr auto bLooted = 0x380; // bool
		constexpr auto ChosenLoot = 0x388; // FLootSiteDropInfo
		constexpr auto Looters = 0x3b8; // TArray<AKSCharacter*>
		constexpr auto LooterManagers = 0x3c8; // TArray<UKSInteractionManager*>
		constexpr auto PossibleLoot = 0x3d8; // TArray<FLootSiteDropInfo>
	}

	namespace n_AKSLobbyLevelSequenceActor {
		constexpr auto SequenceTag = 0x2b0; // FName
	}

	namespace n_UFontImportOptions {
		constexpr auto Data = 0x28; // FFontImportOptionsData
	}

	namespace n_UMaterialExpressionPerInstanceCustomData {
		constexpr auto DefaultValue = 0x40; // FExpressionInput
		constexpr auto ConstDefaultValue = 0x54; // float
		constexpr auto DataIndex = 0x58; // uint32_t
	}

	namespace n_AKSPlayerStateAssistant {
		constexpr auto ResourceManagerComponent = 0x220; // UKSResourceManagerComponent*
		constexpr auto LastOwnerPlayerId = 0x228; // FKSPersistentPlayerId
		constexpr auto PlayerStateOwner = 0x238; // AKSPlayerState*
		constexpr auto PlayerModManager = 0x240; // AKSPlayerModManager*
	}

	namespace n_AKSVehicleBase {
		constexpr auto PositionHistoryComponent = 0xcf0; // UPGame_PositionHistoryComponent*
		constexpr auto OnStartVehicleDestruction = 0xcf8; // FMulticastInlineDelegate
		constexpr auto OnEndVehicleDestruction = 0xd08; // FMulticastInlineDelegate
		constexpr auto SpringArm = 0xd18; // USpringArmComponent*
		constexpr auto MainCamera = 0xd20; // UCameraComponent*
		constexpr auto CameraBlendTime = 0xd28; // float
		constexpr auto CameraXTurnRate = 0xd2c; // float
		constexpr auto CameraYTurnRate = 0xd30; // float
		constexpr auto CameraMinHorizontalAngle = 0xd34; // float
		constexpr auto CameraMaxHorizontalAngle = 0xd38; // float
		constexpr auto CameraMinVerticalAngle = 0xd3c; // float
		constexpr auto CameraMaxVerticalAngle = 0xd40; // float
		constexpr auto DefaultPPE = 0xd58; // FKSSpecialEffect
		constexpr auto bDisplayDefaultPPE = 0xda8; // bool
		constexpr auto bDisplayFadeInOnStart = 0xda9; // bool
		constexpr auto FadeInDuration = 0xdac; // float
		constexpr auto DestroyedMesh = 0xdb0; // USkinnableStaticMeshComponent*
		constexpr auto MaxHealth = 0xdb8; // float
		constexpr auto bShouldDisplayFriendlyOutline = 0xdbc; // bool
		constexpr auto DeathInfo = 0xdc0; // FKSVehicleDeathInfo
		constexpr auto InstantDeathDamageType = 0xde0; // UKSDamageTypeBase*
		constexpr auto LastCharacterToDamageMe = 0xde8; // ACharacter*
		constexpr auto bIsSelfDestructing = 0xdf1; // bool
		constexpr auto KilledDamageTypeClass = 0xdf8; // UDamageType*
		constexpr auto OnVehicleDeathStateChangedDel = 0xe00; // FMulticastInlineDelegate
		constexpr auto OnAbilityOnePressed = 0xe28; // FMulticastInlineDelegate
		constexpr auto OnAbilityOneReleased = 0xe38; // FMulticastInlineDelegate
		constexpr auto OnAbilityTwoPressed = 0xe48; // FMulticastInlineDelegate
		constexpr auto OnAbilityTwoReleased = 0xe58; // FMulticastInlineDelegate
		constexpr auto OnAbilityThreePressed = 0xe68; // FMulticastInlineDelegate
		constexpr auto OnAbilityThreeReleased = 0xe78; // FMulticastInlineDelegate
		constexpr auto VehicleDisplayName = 0xe88; // FText
		constexpr auto bReportsDamage = 0xea0; // bool
		constexpr auto HudIconPath = 0xea8; // FSoftObjectPath
		constexpr auto bHidesWeaponReticule = 0xec0; // bool
		constexpr auto OnVehicleHoverChange = 0xec8; // FMulticastInlineDelegate
		constexpr auto SkinObject = 0xed8; // UMultiSkinObject*
		constexpr auto ApparelObjectsToListenTo = 0xee0; // TArray<FName>
		constexpr auto SkeletalMeshKeywordList = 0xef0; // TArray<FName>
		constexpr auto DestroyedMeshKeyword = 0xf00; // FName
	}

	namespace n_UWBP_WeaponCategoryScreen_C {
		constexpr auto UberGraphFrame = 0x588; // FPointerToUberGraphFrame
		constexpr auto Anim_OnShow = 0x590; // UWidgetAnimation*
		constexpr auto BG = 0x598; // UImage*
		constexpr auto ButtonContainer = 0x5a0; // UUniformGridPanel*
		constexpr auto VerticalBox_2 = 0x5a8; // UVerticalBox*
		constexpr auto WBP_WeaponMasteryBadge = 0x5b0; // UWBP_WeaponMasteryBadge_C*
		constexpr auto WBP_WeaponProgressButton = 0x5b8; // UWBP_WeaponProgressButton_C*
		constexpr auto WBP_WeaponProgressButton_2 = 0x5c0; // UWBP_WeaponProgressButton_C*
		constexpr auto WBP_WeaponProgressButton_3 = 0x5c8; // UWBP_WeaponProgressButton_C*
		constexpr auto WBP_WeaponProgressButton_4 = 0x5d0; // UWBP_WeaponProgressButton_C*
		constexpr auto WBP_WeaponProgressButton_80 = 0x5d8; // UWBP_WeaponProgressButton_C*
		constexpr auto WBP_WeaponProgressButton_158 = 0x5e0; // UWBP_WeaponProgressButton_C*
		constexpr auto WeaponUnlockTooltip = 0x5e8; // USizeBox*
		constexpr auto WeaponRowWidth = 0x5f0; // int32_t
		constexpr auto WeaponCategoryDetails = 0x5f8; // FWeaponCategoryDetails
		constexpr auto GamePad_FaceButtonTOP_SFX = 0x6f0; // UAkAudioEvent*
		constexpr auto GamePad_FaceButtonLEFT_SFX = 0x6f8; // UAkAudioEvent*
	}

	namespace n_UKSGenericSoundLibrary {
		constexpr auto BackToScreenSound = 0x28; // UAkAudioEvent*
		constexpr auto ErrorSound = 0x30; // UAkAudioEvent*
		constexpr auto ScreenTransitionSound = 0x38; // UAkAudioEvent*
	}

	namespace n_UKSSpawnRule {
		constexpr auto RuleName = 0x28; // FName
		constexpr auto OverridePropertyNames = 0x30; // TArray<FName>
	}

	namespace n_UARTrackedImage {
		constexpr auto DetectedImage = 0xe8; // UARCandidateImage*
		constexpr auto EstimatedSize = 0xf0; // FVector2D
	}

	namespace n_UMaterialExpressionSceneTexture {
		constexpr auto Coordinates = 0x40; // FExpressionInput
		constexpr auto SceneTextureId = 0x54; // ESceneTextureId
		constexpr auto bFiltered = 0x55; // bool
	}

	namespace n_UAnimNotify_SelectiveAkEvent {
		constexpr auto AttachName = 0x38; // FName
		constexpr auto Event = 0x40; // USelectiveAkAudioEvent*
		constexpr auto bFollow = 0x48; // bool
	}

	namespace n_UKSSettingsGroup {
		constexpr auto SettingsContainers = 0x520; // TArray<UKSSettingsContainer*>
		constexpr auto SettingsContainerClass = 0x530; // UKSSettingsContainer*
		constexpr auto GroupConfig = 0x538; // FKSSettingsGroupConfig
	}

	namespace n_UKSAcquisitionModal {
		constexpr auto HeaderOverridesTable = 0x520; // UDataTable*
		constexpr auto HeaderOverridesFromJson = 0x528; // TMap<int32_t, FText>
	}

	namespace n_UAISense_Prediction {
		constexpr auto RegisteredEvents = 0x80; // TArray<FAIPredictionEvent>
	}

	namespace n_UUniformGridPanel {
		constexpr auto SlotPadding = 0x128; // FMargin
		constexpr auto MinDesiredSlotWidth = 0x138; // float
		constexpr auto MinDesiredSlotHeight = 0x13c; // float
	}

	namespace n_UProceduralFoliageTile {
		constexpr auto FoliageSpawner = 0x28; // UProceduralFoliageSpawner*
		constexpr auto InstancesArray = 0xd0; // TArray<FProceduralFoliageInstance>
	}

	namespace n_ULiveLinkVirtualSubject {
		constexpr auto Role = 0x30; // ULiveLinkRole*
		constexpr auto Subjects = 0x38; // TArray<FLiveLinkSubjectName>
		constexpr auto FrameTranslators = 0x48; // TArray<ULiveLinkFrameTranslator*>
	}

	namespace n_UWBP_RadialSelect_C {
		constexpr auto UberGraphFrame = 0x5c0; // FPointerToUberGraphFrame
		constexpr auto WheelCycle_Left = 0x5c8; // UWidgetAnimation*
		constexpr auto WheelCycle_Generic = 0x5d0; // UWidgetAnimation*
		constexpr auto WheelCycle_Right = 0x5d8; // UWidgetAnimation*
		constexpr auto Show = 0x5e0; // UWidgetAnimation*
		constexpr auto ActiveRadialMenuText = 0x5e8; // UTextBlock*
		constexpr auto BGGradientLeft = 0x5f0; // UImage*
		constexpr auto BGGradientRight = 0x5f8; // UImage*
		constexpr auto BGImage = 0x600; // UImage*
		constexpr auto BlurVolume = 0x608; // UBackgroundBlur*
		constexpr auto CursorImg = 0x610; // UImage*
		constexpr auto CycleLeftInputCallout = 0x618; // UWBP_InputCallout_C*
		constexpr auto CycleLeftPanel = 0x620; // UHorizontalBox*
		constexpr auto CycleLeftPanelWrapper = 0x628; // UOverlay*
		constexpr auto CycleLeftText = 0x630; // UTextBlock*
		constexpr auto CycleRightInputCallout = 0x638; // UWBP_InputCallout_C*
		constexpr auto CycleRightPanel = 0x640; // UHorizontalBox*
		constexpr auto CycleRightPanelWrapper = 0x648; // UOverlay*
		constexpr auto CycleRightText = 0x650; // UTextBlock*
		constexpr auto DividerContainer = 0x658; // UCanvasPanel*
		constexpr auto IconContainer = 0x660; // UCanvasPanel*
		constexpr auto Image = 0x668; // UImage*
		constexpr auto Image_2 = 0x670; // UImage*
		constexpr auto Image_129 = 0x678; // UImage*
		constexpr auto Image_294 = 0x680; // UImage*
		constexpr auto RadialItemNameText = 0x688; // UTextBlock*
		constexpr auto RadialItemNameWrapper = 0x690; // USizeBox*
		constexpr auto SelectorGroup = 0x698; // UCanvasPanel*
		constexpr auto SelectPrompt = 0x6a0; // UHorizontalBox*
		constexpr auto SelectPromptCallout = 0x6a8; // UWBP_InputCallout_C*
		constexpr auto ToggleBackInputCallout = 0x6b0; // UWBP_InputCallout_C*
		constexpr auto ToggleBackPrompt = 0x6b8; // UHorizontalBox*
		constexpr auto TogglePromptContainer = 0x6c0; // UBorder*
		constexpr auto WBP_RadialMenuEntry = 0x6c8; // UWBP_RadialMenuEntry_C*
		constexpr auto WBP_RadialMenuEntry_2 = 0x6d0; // UWBP_RadialMenuEntry_C*
		constexpr auto WBP_RadialMenuEntry_Divider = 0x6d8; // UWBP_RadialMenuEntry_Divider_C*
		constexpr auto WBP_RadialMenuHighlight = 0x6e0; // UWBP_RadialMenuHighlight_C*
		constexpr auto WheelBg = 0x6e8; // UImage*
		constexpr auto VisibleTextCosmeticSlots = 0x6f0; // TArray<EMercCosmeticSlot>
		constexpr auto ActivatedItemSelected = 0x700; // bool
		constexpr auto CycleMenusSFX = 0x708; // UAkAudioEvent*
		constexpr auto HoverOptionsSFX = 0x710; // UAkAudioEvent*
		constexpr auto OpenMenusSFX = 0x718; // UAkAudioEvent*
		constexpr auto CloseMenusSFX = 0x720; // UAkAudioEvent*
		constexpr auto HoldConfirmInputCallout = 0x728; // UWBP_InputCallout_C*
		constexpr auto HoverOptionsRumbleSFX = 0x730; // UAkAudioEvent*
		constexpr auto ContextualPingTypesDT = 0x738; // UDataTable*
		constexpr auto ContextualPingMessagesDT = 0x740; // UDataTable*
	}

	namespace n_USourceEffectMidSideSpreaderPreset {
		constexpr auto Settings = 0x74; // FSourceEffectMidSideSpreaderSettings
	}

	namespace n_UKSActivityRequirement_Job {
		constexpr auto RequiredJob = 0x30; // TSoftObjectPtr<UKSItem>
	}

	namespace n_UKSLoadingScreenSettings {
		constexpr auto DefaultLoadingScreen = 0x38; // FSoftObjectPath
		constexpr auto ThrobberPiece = 0x50; // FSoftObjectPath
		constexpr auto HorizontalRule = 0x68; // FSoftObjectPath
		constexpr auto HeadingFont = 0x80; // FSoftObjectPath
		constexpr auto DefaultFont = 0x98; // FSoftObjectPath
	}

	namespace n_AKSCameraManager_C {
		constexpr auto UberGraphFrame = 0x27d0; // FPointerToUberGraphFrame
		constexpr auto Vault_Medium_Running_Rotation_19357AD44276670DB6B495B6695BBF6C = 0x27d8; // FVector
		constexpr auto Vault_Medium_Running_Location_19357AD44276670DB6B495B6695BBF6C = 0x27e4; // FVector
		constexpr auto Vault_Medium_Running_FOV_19357AD44276670DB6B495B6695BBF6C = 0x27f0; // float
		constexpr auto Vault_Medium_Running__Direction_19357AD44276670DB6B495B6695BBF6C = 0x27f4; // ETimelineDirection
		constexpr auto Vault_Medium_Running = 0x27f8; // UTimelineComponent*
		constexpr auto Vault_Short_Rotation_F73D9F61446F5474502BD8BF3252D762 = 0x2800; // FVector
		constexpr auto Vault_Short_Location_F73D9F61446F5474502BD8BF3252D762 = 0x280c; // FVector
		constexpr auto Vault_Short_FOV_F73D9F61446F5474502BD8BF3252D762 = 0x2818; // float
		constexpr auto Vault_Short__Direction_F73D9F61446F5474502BD8BF3252D762 = 0x281c; // ETimelineDirection
		constexpr auto Vault_Short = 0x2820; // UTimelineComponent*
		constexpr auto Vault_Medium_Rotation_973BB77943BEA34D1A27C0A9070CFD1F = 0x2828; // FVector
		constexpr auto Vault_Medium_Location_973BB77943BEA34D1A27C0A9070CFD1F = 0x2834; // FVector
		constexpr auto Vault_Medium_FOV_973BB77943BEA34D1A27C0A9070CFD1F = 0x2840; // float
		constexpr auto Vault_Medium__Direction_973BB77943BEA34D1A27C0A9070CFD1F = 0x2844; // ETimelineDirection
		constexpr auto Vault_Medium = 0x2848; // UTimelineComponent*
		constexpr auto Vault_Tall_Rotation_7F94194A49D4BE17D3B299B0FF993F6D = 0x2850; // FVector
		constexpr auto Vault_Tall_Location_7F94194A49D4BE17D3B299B0FF993F6D = 0x285c; // FVector
		constexpr auto Vault_Tall_FOV_7F94194A49D4BE17D3B299B0FF993F6D = 0x2868; // float
		constexpr auto Vault_Tall__Direction_7F94194A49D4BE17D3B299B0FF993F6D = 0x286c; // ETimelineDirection
		constexpr auto Vault_Tall = 0x2870; // UTimelineComponent*
		constexpr auto Mantle_Short_Rotation_CF02379640077BEA8312A4A97CABFFE5 = 0x2878; // FVector
		constexpr auto Mantle_Short_Location_CF02379640077BEA8312A4A97CABFFE5 = 0x2884; // FVector
		constexpr auto Mantle_Short_FOV_CF02379640077BEA8312A4A97CABFFE5 = 0x2890; // float
		constexpr auto Mantle_Short__Direction_CF02379640077BEA8312A4A97CABFFE5 = 0x2894; // ETimelineDirection
		constexpr auto Mantle_Short = 0x2898; // UTimelineComponent*
		constexpr auto Mantle_Medium_Rotation_BD9A8E7641CB9B707C1CE6BA8842B569 = 0x28a0; // FVector
		constexpr auto Mantle_Medium_Location_BD9A8E7641CB9B707C1CE6BA8842B569 = 0x28ac; // FVector
		constexpr auto Mantle_Medium_FOV_BD9A8E7641CB9B707C1CE6BA8842B569 = 0x28b8; // float
		constexpr auto Mantle_Medium__Direction_BD9A8E7641CB9B707C1CE6BA8842B569 = 0x28bc; // ETimelineDirection
		constexpr auto Mantle_Medium = 0x28c0; // UTimelineComponent*
		constexpr auto Mantle_Tall_Rotation_745F8D394D1BA4D0F0F12C9F36C8F1F2 = 0x28c8; // FVector
		constexpr auto Mantle_Tall_Location_745F8D394D1BA4D0F0F12C9F36C8F1F2 = 0x28d4; // FVector
		constexpr auto Mantle_Tall_FOV_745F8D394D1BA4D0F0F12C9F36C8F1F2 = 0x28e0; // float
		constexpr auto Mantle_Tall__Direction_745F8D394D1BA4D0F0F12C9F36C8F1F2 = 0x28e4; // ETimelineDirection
		constexpr auto Mantle_Tall = 0x28e8; // UTimelineComponent*
		constexpr auto JumpLanding_Rotation_F0A9B6BE484D0B52D2A1D2A14592B75A = 0x28f0; // FVector
		constexpr auto JumpLanding_Location_F0A9B6BE484D0B52D2A1D2A14592B75A = 0x28fc; // FVector
		constexpr auto JumpLanding_FOV_F0A9B6BE484D0B52D2A1D2A14592B75A = 0x2908; // float
		constexpr auto JumpLanding__Direction_F0A9B6BE484D0B52D2A1D2A14592B75A = 0x290c; // ETimelineDirection
		constexpr auto JumpLanding = 0x2910; // UTimelineComponent*
		constexpr auto JumpStart_Rotation_626F506A47DB820B20B53DBAEA84159F = 0x2918; // FVector
		constexpr auto JumpStart_Location_626F506A47DB820B20B53DBAEA84159F = 0x2924; // FVector
		constexpr auto JumpStart_FOV_626F506A47DB820B20B53DBAEA84159F = 0x2930; // float
		constexpr auto JumpStart__Direction_626F506A47DB820B20B53DBAEA84159F = 0x2934; // ETimelineDirection
		constexpr auto JumpStart = 0x2938; // UTimelineComponent*
	}

	namespace n_UKSJobSelectionComponent {
		constexpr auto JobSelectionList = 0xb0; // FJobSelectionList
		constexpr auto SelectionActivityStatus = 0x1d0; // FSelectionActivityStatus
		constexpr auto AllowUnownedJobsStruct = 0x220; // FKSJobSelectionAllowUnownedJobs
		constexpr auto EnforcedJobUniqueness = 0x240; // EJobUniquenessRule
		constexpr auto JobTableVendorId = 0x244; // int32_t
		constexpr auto JobCollection = 0x248; // UJobCollection*
		constexpr auto OnJobSelectionEntryAdded = 0x250; // FMulticastInlineDelegate
		constexpr auto OnJobSelectionEntryChanged = 0x260; // FMulticastInlineDelegate
		constexpr auto OnJobSelectionInitialized = 0x270; // FMulticastInlineDelegate
		constexpr auto OnAllPlayersLockedIn = 0x280; // FMulticastInlineDelegate
		constexpr auto OnSelectionActivityStatusChanged = 0x290; // FMulticastInlineDelegate
		constexpr auto BannedJobIds = 0x300; // TArray<int32_t>
		constexpr auto ExpectedBanCount = 0x310; // int32_t
		constexpr auto CachedOwner = 0x318; // AKSTeamState*
		constexpr auto bSelectionEnabled = 0x320; // bool
		constexpr auto EntryCount = 0x324; // int32_t
		constexpr auto pAudioManager = 0x330; // UKSAudioManager*
	}

	namespace n_ULightComponentBase {
		constexpr auto LightGuid = 0x208; // FGuid
		constexpr auto Brightness = 0x218; // float
		constexpr auto Intensity = 0x21c; // float
		constexpr auto LightColor = 0x220; // FColor
		constexpr auto bAffectsWorld = 0x224; // char : 1
		constexpr auto CastShadows = 0x224; // char : 1
		constexpr auto CastStaticShadows = 0x224; // char : 1
		constexpr auto CastDynamicShadows = 0x224; // char : 1
		constexpr auto bAffectTranslucentLighting = 0x224; // char : 1
		constexpr auto bTransmission = 0x224; // char : 1
		constexpr auto bCastVolumetricShadow = 0x224; // char : 1
		constexpr auto bCastDeepShadow = 0x224; // char : 1
		constexpr auto bCastRaytracedShadow = 0x225; // char : 1
		constexpr auto bAffectReflection = 0x225; // char : 1
		constexpr auto bAffectGlobalIllumination = 0x225; // char : 1
		constexpr auto IndirectLightingIntensity = 0x228; // float
		constexpr auto VolumetricScatteringIntensity = 0x22c; // float
		constexpr auto SamplesPerPixel = 0x230; // int32_t
	}

	namespace n_UKSActivityRewardCondition_Affiliation {
		constexpr auto AffiliationFilter = 0x30; // FKSAffiliationFilter
	}

	namespace n_UAkXboxOneGDKInitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettings
		constexpr auto ApuHeapSettings = 0x88; // FAkXboxOneGDKApuHeapInitializationSettings
		constexpr auto CommunicationSettings = 0x90; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xb8; // FAkXboxOneGDKAdvancedInitializationSettings
	}

	namespace n_UPhysicsConstraintTemplate {
		constexpr auto DefaultInstance = 0x28; // FConstraintInstance
		constexpr auto ProfileHandles = 0x1e0; // TArray<FPhysicsConstraintProfileHandle>
		constexpr auto DefaultProfile = 0x1f0; // FConstraintProfileProperties
	}

	namespace n_UWBP_subscreen_nav_tab_C {
		constexpr auto UberGraphFrame = 0x560; // FPointerToUberGraphFrame
		constexpr auto BattlepassGradientPulse = 0x568; // UWidgetAnimation*
		constexpr auto Unhover = 0x570; // UWidgetAnimation*
		constexpr auto Selected = 0x578; // UWidgetAnimation*
		constexpr auto Hovered = 0x580; // UWidgetAnimation*
		constexpr auto BackFill = 0x588; // UImage*
		constexpr auto BackFill_Free = 0x590; // UImage*
		constexpr auto BackFill_Premium = 0x598; // UImage*
		constexpr auto BottomEdge = 0x5a0; // UImage*
		constexpr auto BottomEdge_Free = 0x5a8; // UImage*
		constexpr auto BottomEdge_Premium = 0x5b0; // UImage*
		constexpr auto Container = 0x5b8; // UOverlay*
		constexpr auto LockIcon = 0x5c0; // UImage*
		constexpr auto LockIcon_2 = 0x5c8; // UImage*
		constexpr auto LockIcon_3 = 0x5d0; // UImage*
		constexpr auto SelectedGradient = 0x5d8; // UImage*
		constexpr auto SelectedGradient_Free = 0x5e0; // UImage*
		constexpr auto SelectedGradient_Premium = 0x5e8; // UImage*
		constexpr auto TabButton = 0x5f0; // UButton*
		constexpr auto TabColorSwitcher = 0x5f8; // UWidgetSwitcher*
		constexpr auto text_TabFree = 0x600; // UTextBlock*
		constexpr auto text_TabPremium = 0x608; // UTextBlock*
		constexpr auto text_TabStandard = 0x610; // UTextBlock*
		constexpr auto CalloutClass = 0x618; // TSoftClassPtr<UObject>
		constexpr auto CalloutWidget = 0x640; // UWidget*
		constexpr auto CalloutWidget_HorizontalAlignment = 0x648; // EHorizontalAlignment
		constexpr auto CalloutWidget_VerticalAlignment = 0x649; // EVerticalAlignment
		constexpr auto CalloutWidget_Padding = 0x64c; // FMargin
		constexpr auto HoverSubscreenNavTabSFX = 0x660; // UAkAudioEvent*
		constexpr auto ClickSubscreenNavTabSFX = 0x668; // UAkAudioEvent*
		constexpr auto UsesBattlePassColoring = 0x670; // bool
	}

	namespace n_UActorSequenceComponent {
		constexpr auto PlaybackSettings = 0xb0; // FMovieSceneSequencePlaybackSettings
		constexpr auto Sequence = 0xc8; // UActorSequence*
		constexpr auto SequencePlayer = 0xd0; // UActorSequencePlayer*
	}

	namespace n_AKSOutOfBoundsRecoveryPoint {
		constexpr auto SideNum = 0x248; // int32_t
	}

	namespace n_UKSAttachCompatRules_WeaponType {
		constexpr auto CompatibleWeaponTypes = 0x28; // FGameplayTagContainer
	}

	namespace n_UKSMassInviteModal {
		constexpr auto SelectedPlayers = 0x520; // TArray<UKSPlayerInfo*>
		constexpr auto RouteData = 0x530; // UKSDataMassInviteBase*
	}

	namespace n_AKSViewModel {
		constexpr auto ViewModelName = 0x2d0; // FName
		constexpr auto EquipmentContainer = 0x2d8; // FKSEquipmentContainer
		constexpr auto DefaultViewModelRotationOverride = 0x500; // FRotator
		constexpr auto MaxAxisRotation = 0x50c; // FVector
		constexpr auto IdleSecondsToResetRotation = 0x518; // float
		constexpr auto ResetRotationSpeedRadians = 0x51c; // float
		constexpr auto RotationRatePerAxis = 0x520; // FVector
		constexpr auto bForceOverrideViewModelRotation = 0x52c; // bool
		constexpr auto bModelDataIsDirty = 0x570; // bool
		constexpr auto DesiredWeaponAsset = 0x578; // UKSWeaponAsset*
		constexpr auto DesiredAttachments = 0x580; // TMap<char, UKSWeaponAttachment*>
		constexpr auto ActiveWeaponComponent = 0x5d0; // UKSWeaponComponent*
		constexpr auto ActiveAttachmentCosmetics = 0x5d8; // TArray<UKSWeaponAttachmentCosmeticInst*>
		constexpr auto ActiveWeaponModelMeshComponent = 0x5e8; // UKSWeaponSkeletalMeshComponent*
		constexpr auto PendingWeaponComponentId = 0x5f0; // FKSEquipmentId
		constexpr auto PendingWeaponAsset = 0x5f8; // UKSWeaponAsset*
		constexpr auto PendingWeaponComponent = 0x600; // UKSWeaponComponent*
		constexpr auto PendingWeaponCosmeticIds = 0x608; // TSet<FKSEquipmentId>
		constexpr auto PendingInfos = 0x658; // TArray<FPendingCosmeticInfo>
		constexpr auto ModelUpdateDebounceTime = 0x668; // float
		constexpr auto bClearActiveModelWhileTransitioning = 0x678; // bool
	}

	namespace n_UStaticMeshComponent {
		constexpr auto StaticMeshGuid = 0x458; // FGuid
		constexpr auto ForcedLodModel = 0x468; // int32_t
		constexpr auto PreviousLODLevel = 0x46c; // int32_t
		constexpr auto MinLOD = 0x470; // int32_t
		constexpr auto SubDivisionStepSize = 0x474; // int32_t
		constexpr auto StaticMesh = 0x478; // UStaticMesh*
		constexpr auto WireframeColorOverride = 0x480; // FColor
		constexpr auto bEvaluateWorldPositionOffset = 0x484; // char : 1
		constexpr auto bOverrideWireframeColor = 0x484; // char : 1
		constexpr auto bOverrideMinLod = 0x484; // char : 1
		constexpr auto bOverrideNavigationExport = 0x484; // char : 1
		constexpr auto bForceNavigationObstacle = 0x484; // char : 1
		constexpr auto bDisallowMeshPaintPerInstance = 0x484; // char : 1
		constexpr auto bIgnoreInstanceForTextureStreaming = 0x484; // char : 1
		constexpr auto bOverrideLightMapRes = 0x484; // char : 1
		constexpr auto bCastDistanceFieldIndirectShadow = 0x485; // char : 1
		constexpr auto bOverrideDistanceFieldSelfShadowBias = 0x485; // char : 1
		constexpr auto bUseSubDivisions = 0x485; // char : 1
		constexpr auto bUseDefaultCollision = 0x485; // char : 1
		constexpr auto bReverseCulling = 0x485; // char : 1
		constexpr auto bHasReflectionCaptureOverrideLocation = 0x485; // char : 1
		constexpr auto ReflectionCaptureOverrideLocation = 0x488; // FVector
		constexpr auto OverriddenLightMapRes = 0x494; // int32_t
		constexpr auto DistanceFieldIndirectShadowMinVisibility = 0x498; // float
		constexpr auto DistanceFieldSelfShadowBias = 0x49c; // float
		constexpr auto StreamingDistanceMultiplier = 0x4a0; // float
		constexpr auto LODData = 0x4a8; // TArray<FStaticMeshComponentLODInfo>
		constexpr auto StreamingTextureData = 0x4b8; // TArray<FStreamingTextureBuildInfo>
		constexpr auto LightmassSettings = 0x4c8; // FLightmassPrimitiveSettings
	}

	namespace n_APerfSpline {
		constexpr auto SplineCamPosComponent = 0x220; // USplineComponent*
		constexpr auto CamComponent = 0x228; // AActor*
		constexpr auto SplineCamLookAtComponent = 0x230; // USplineComponent*
		constexpr auto SplineDuration = 0x238; // float
		constexpr auto NumOfCaptures = 0x23c; // int32_t
	}

	namespace n_UWBP_ItemDescSlotNew_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto Fill = 0x240; // UImage*
		constexpr auto IconWrapper = 0x248; // UOverlay*
		constexpr auto ItemDesc = 0x250; // UTextBlock*
		constexpr auto ItemIcon = 0x258; // UWBP_AsyncIcon_C*
		constexpr auto ItemName = 0x260; // UTextBlock*
		constexpr auto ItemType = 0x268; // UTextBlock*
		constexpr auto Stroke = 0x270; // UImage*
		constexpr auto HideIconBorder = 0x278; // bool
		constexpr auto ItemTypeText = 0x280; // FText
	}

	namespace n_UWBP_WeaponMasteryTrackLevel_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto SelectionLoop = 0x528; // UWidgetAnimation*
		constexpr auto OnSelect = 0x530; // UWidgetAnimation*
		constexpr auto OnHover = 0x538; // UWidgetAnimation*
		constexpr auto AdditiveBlur_Pulse = 0x540; // UWBP_AdditiveImage_C*
		constexpr auto BadgeSwitcher = 0x548; // UWidgetSwitcher*
		constexpr auto GamepadNavCallouts = 0x550; // UHorizontalBox*
		constexpr auto GradientBand = 0x558; // UVerticalBox*
		constexpr auto HitTarget = 0x560; // UButton*
		constexpr auto NextCalloutSection = 0x568; // UHorizontalBox*
		constexpr auto NodeLocked = 0x570; // UImage*
		constexpr auto NodeSelected = 0x578; // UImage*
		constexpr auto NodeSwitcher = 0x580; // UWidgetSwitcher*
		constexpr auto NodeUnlocked = 0x588; // UImage*
		constexpr auto PreviousCalloutSection = 0x590; // UHorizontalBox*
		constexpr auto RewardsContainer = 0x598; // UHorizontalBox*
		constexpr auto RewardsWrapper = 0x5a0; // UOverlay*
		constexpr auto SelectedGradientBack = 0x5a8; // UImage*
		constexpr auto SelectedItemGradient = 0x5b0; // USizeBox*
		constexpr auto SideGlow = 0x5b8; // UImage*
		constexpr auto SideGlow_2 = 0x5c0; // UImage*
		constexpr auto WBP_WeaponCategoryMasteryBadge = 0x5c8; // UWBP_WeaponCategoryMasteryBadge_C*
		constexpr auto WBP_WeaponMasteryBadge = 0x5d0; // UWBP_WeaponMasteryBadge_C*
		constexpr auto OnTrackLevelSelected = 0x5d8; // FMulticastInlineDelegate
		constexpr auto RewardTier = 0x5e8; // FActivityTier
		constexpr auto InputState = 0x628; // PGAME_INPUT_STATE
		constexpr auto IsSelected = 0x629; // bool
		constexpr auto IsAchieved = 0x62a; // bool
		constexpr auto ClickStandardBtnInnerSFX = 0x630; // UAkAudioEvent*
		constexpr auto HoverStandardBtnInnerSFX = 0x638; // UAkAudioEvent*
		constexpr auto HasGamepadFocus = 0x640; // bool
		constexpr auto CurrentWeaponMasteryType = 0x641; // EKSWeaponMasteryType
		constexpr auto CurrentMasteryContextObject = 0x648; // UObject*
	}

	namespace n_UVirtualTexturePoolConfig {
		constexpr auto DefaultSizeInMegabyte = 0x28; // int32_t
		constexpr auto Pools = 0x30; // TArray<FVirtualTextureSpacePoolConfig>
	}

	namespace n_UWBP_AdditiveImage_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto Texture = 0x240; // UImage*
		constexpr auto DefaultBrush = 0x248; // FSlateBrush
		constexpr auto BrushMaterial = 0x2d0; // UMaterialInterface*
		constexpr auto ParameterName = 0x2d8; // FName
	}

	namespace n_UWBP_TextChat_C {
		constexpr auto UberGraphFrame = 0x560; // FPointerToUberGraphFrame
		constexpr auto ChatWindow = 0x568; // UWBP_TextChat_ChatWindow_C*
		constexpr auto ClickCatcher = 0x570; // UButton*
		constexpr auto TextInput = 0x578; // UWBP_TextChat_Input_C*
		constexpr auto IsEditingActive = 0x580; // bool
		constexpr auto ChatMessageAutoHideDelay = 0x584; // float
		constexpr auto CachedCurrentChannel = 0x588; // FPUMG_ActiveChatChannelData
		constexpr auto NeedToClearFocus = 0x598; // bool
		constexpr auto CancelKeys = 0x5a0; // TArray<FKey>
		constexpr auto WaitForCancelReleaseToClearFocus = 0x5b0; // bool
	}

	namespace n_USoundSubmixBase {
		constexpr auto ChildSubmixes = 0x28; // TArray<USoundSubmixBase*>
	}

	namespace n_UKSGameUserSettings {
		constexpr auto SettingsVersionMajor = 0x158; // int32_t
		constexpr auto SettingsVersionMinor = 0x15c; // int32_t
		constexpr auto GamepadIconSet = 0x160; // EKSGamepadIcons
		constexpr auto DefaultScreenResolution = 0x164; // FIntPoint
		constexpr auto SavedScreenResolution = 0x16c; // FIntPoint
		constexpr auto SavedDisplayLanguage = 0x1d8; // FString
		constexpr auto LastJoinedQueuePrimaryId = 0x1e8; // int32_t
		constexpr auto SavedSelectedRegion = 0x1ec; // int32_t
		constexpr auto LastWhatsNewVersion = 0x1f0; // int32_t
		constexpr auto SavedTransientAcquisitionIds = 0x1f8; // TArray<int32_t>
		constexpr auto SavedViewedNewsPanelIds = 0x208; // TSet<FName>
		constexpr auto SavedChallengeVersionId = 0x258; // int32_t
		constexpr auto SavedViewedChallengeIds = 0x260; // TSet<int32_t>
		constexpr auto SavedRecentlySeenStoreItemLootIds = 0x2b0; // TSet<int32_t>
		constexpr auto SavedSettingsConfig = 0x300; // TMap<FName, FString>
		constexpr auto SavedLocalActions = 0x350; // TSet<FName>
		constexpr auto OnGamepadIconSetSettingsApplied = 0x490; // FMulticastInlineDelegate
		constexpr auto OnLocalSettingSaved = 0x4a0; // FMulticastInlineDelegate
		constexpr auto OnSettingApplied = 0x4b0; // FMulticastInlineDelegate
	}

	namespace n_UKSPlayerMod_MeleeAttackSpeed {
		constexpr auto MeleeAttackSpeedMultiplier = 0x330; // float
	}

	namespace n_URotatingMovementComponent {
		constexpr auto RotationRate = 0xf0; // FRotator
		constexpr auto PivotTranslation = 0xfc; // FVector
		constexpr auto bRotationInLocalSpace = 0x108; // char : 1
	}

	namespace n_USkeletalMeshLODSettings {
		constexpr auto MinLOD = 0x30; // FPerPlatformInt
		constexpr auto MaxLod = 0x34; // FPerPlatformInt
		constexpr auto DisableBelowMinLodStripping = 0x38; // FPerPlatformBool
		constexpr auto bSupportLODStreaming = 0x39; // FPerPlatformBool
		constexpr auto MaxNumStreamedLODs = 0x3c; // FPerPlatformInt
		constexpr auto MaxNumOptionalLODs = 0x40; // FPerPlatformInt
		constexpr auto LODGroups = 0x48; // TArray<FSkeletalMeshLODGroupSettings>
		constexpr auto bOverrideWillNeverMergeMesh = 0x58; // char : 1
		constexpr auto bWillNeverMergeMesh = 0x58; // char : 1
	}

	namespace n_UAkItemProperties {
		constexpr auto OnSelectionChanged = 0x110; // FMulticastInlineDelegate
		constexpr auto OnPropertyDragged = 0x120; // FMulticastInlineDelegate
	}

	namespace n_UAsyncActionChangePrimaryAssetBundles {
		constexpr auto Completed = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UDragDropOperation {
		constexpr auto Tag = 0x28; // FString
		constexpr auto Payload = 0x38; // UObject*
		constexpr auto DefaultDragVisual = 0x40; // UWidget*
		constexpr auto Pivot = 0x48; // EDragPivot
		constexpr auto Offset = 0x4c; // FVector2D
		constexpr auto OnDrop = 0x58; // FMulticastInlineDelegate
		constexpr auto OnDragCancelled = 0x68; // FMulticastInlineDelegate
		constexpr auto OnDragged = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UTimeSynchronizableMediaSource {
		constexpr auto bUseTimeSynchronization = 0x88; // bool
		constexpr auto FrameDelay = 0x8c; // int32_t
		constexpr auto TimeDelay = 0x90; // double
	}

	namespace n_ANavLinkProxy {
		constexpr auto PointLinks = 0x230; // TArray<FNavigationLink>
		constexpr auto SegmentLinks = 0x240; // TArray<FNavigationSegmentLink>
		constexpr auto SmartLinkComp = 0x250; // UNavLinkCustomComponent*
		constexpr auto bSmartLinkIsRelevant = 0x258; // bool
		constexpr auto OnSmartLinkReached = 0x260; // FMulticastInlineDelegate
	}

	namespace n_AKSItemDrop {
		constexpr auto InteractionBlockerManager = 0x240; // UKSInteractionBlockerManager*
		constexpr auto InteractableComponent = 0x258; // UKSInteractableComponent*
		constexpr auto AllowedCharacters = 0x260; // TArray<AKSCharacter*>
		constexpr auto ItemDropInteractDuration = 0x270; // float
		constexpr auto Price = 0x274; // int32_t
		constexpr auto bIsInstantPickup = 0x278; // bool
		constexpr auto bAllowManualInstantPickup = 0x27a; // bool
		constexpr auto bCanPickupWithModifiedRange = 0x27b; // bool
		constexpr auto StimuliSourceComponent = 0x280; // UKSItemStimuliSourceComponent*
		constexpr auto SightOffset = 0x288; // FVector
		constexpr auto ActorsSeenBy = 0x298; // TArray<AActor*>
		constexpr auto bCanPing = 0x2a8; // bool
		constexpr auto AssociatedPingID = 0x2ac; // int32_t
		constexpr auto AssociatedPingPlayerState = 0x2b0; // AKSPlayerState*
		constexpr auto ItemAsset = 0x2b8; // UKSItem*
		constexpr auto InteractionType = 0x2c0; // UKSInteractionType*
		constexpr auto bDestroyOnPickUp = 0x2c8; // bool
		constexpr auto OnItemPickup = 0x2d0; // FMulticastInlineDelegate
		constexpr auto PendingPickupCharacter = 0x300; // AKSCharacter*
		constexpr auto CurrentInteractionManager = 0x308; // UKSInteractionManager*
		constexpr auto CollisionMesh = 0x310; // UKSStaticMeshComponent*
		constexpr auto InactiveStencilValue = 0x31b; // EPlayerSilhouetteType
		constexpr auto ActiveStencilValue = 0x31c; // EPlayerSilhouetteType
		constexpr auto LootSiteSpawnRotation = 0x320; // FRotator
		constexpr auto SkinTagContainer = 0x330; // FGameplayTagContainer
		constexpr auto DropHidePlayer = 0x368; // AController*
		constexpr auto bClientDropUnhide = 0x370; // bool
		constexpr auto OriginalOwnerId = 0x374; // int32_t
		constexpr auto OriginalOwnerTeamNum = 0x378; // int32_t
		constexpr auto ItemTags = 0x380; // TArray<FGameplayTag>
		constexpr auto bIsPlayerDrop = 0x390; // bool
		constexpr auto Rarity = 0x391; // EKSRarity
		constexpr auto DropPickupConfig = 0x392; // EDropPickupConfig
		constexpr auto ObjectiveId = 0x394; // int32_t
		constexpr auto PickupSound = 0x398; // UAkAudioEvent*
		constexpr auto NudgeComponent = 0x3a0; // UKSNudgeComponent*
		constexpr auto bCanBeNudged = 0x3a8; // bool
		constexpr auto bOnlyVisibleIfCanPickup = 0x3a9; // bool
	}

	namespace n_UKSModInst_RevealOnMinimap {
		constexpr auto MinimapDisplayWidget = 0x1b8; // TSoftClassPtr<UObject>
		constexpr auto bRevealOnFullMap = 0x1e0; // bool
	}

	namespace n_UARPlaneGeometry {
		constexpr auto Orientation = 0xe8; // EARPlaneOrientation
		constexpr auto Center = 0xec; // FVector
		constexpr auto Extent = 0xf8; // FVector
		constexpr auto SubsumedBy = 0x118; // UARPlaneGeometry*
	}

	namespace n_UWBP_HomeQuickPlay_C {
		constexpr auto UberGraphFrame = 0x538; // FPointerToUberGraphFrame
		constexpr auto SupplementaryBtnClick = 0x540; // UWidgetAnimation*
		constexpr auto SupplementaryBtnHover_Disabled = 0x548; // UWidgetAnimation*
		constexpr auto PlayBtnClick = 0x550; // UWidgetAnimation*
		constexpr auto PlayButtonMode = 0x558; // UWidgetAnimation*
		constexpr auto SupplementaryBtnHover = 0x560; // UWidgetAnimation*
		constexpr auto PlayBtnHover = 0x568; // UWidgetAnimation*
		constexpr auto AffirmativeIcon = 0x570; // UImage*
		constexpr auto BusyWrapper = 0x578; // USizeBox*
		constexpr auto GamemodeDisplayWrapper = 0x580; // USizeBox*
		constexpr auto GameModeNameTextForJoin = 0x588; // UTextBlock*
		constexpr auto GameModeNameTextForStatus = 0x590; // UTextBlock*
		constexpr auto PlayBtn_Fill = 0x598; // UImage*
		constexpr auto PlayBtn_HoverFill = 0x5a0; // UImage*
		constexpr auto PlayBtn_HoverStroke = 0x5a8; // UImage*
		constexpr auto PlayBtn_Stroke = 0x5b0; // UImage*
		constexpr auto PlayBtnEdge_EdgeDeco = 0x5b8; // UImage*
		constexpr auto PlayBtnGamepadCallout = 0x5c0; // UImage*
		constexpr auto PlayBtnHitTarget = 0x5c8; // UStandardButtonNoArt_C*
		constexpr auto PlayBtnStatus_Fill = 0x5d0; // UImage*
		constexpr auto PlayBtnStatus_HoverFill = 0x5d8; // UImage*
		constexpr auto PlayBtnStatus_HoverStroke = 0x5e0; // UImage*
		constexpr auto PlayBtnStatus_Stroke = 0x5e8; // UImage*
		constexpr auto PlayButton_JoinMode = 0x5f0; // UOverlay*
		constexpr auto PlayButton_StatusMode = 0x5f8; // UOverlay*
		constexpr auto PlayIcon = 0x600; // UImage*
		constexpr auto StatusIconSwitcherLeft_2 = 0x608; // UWidgetSwitcher*
		constexpr auto StatusMsgText = 0x610; // UTextBlock*
		constexpr auto StatusMsgWrapper = 0x618; // UScaleBox*
		constexpr auto SupplementaryBtn_EdgeDeco = 0x620; // UImage*
		constexpr auto SupplementaryBtn_Fill = 0x628; // UImage*
		constexpr auto SupplementaryBtn_HoverFill = 0x630; // UImage*
		constexpr auto SupplementaryBtn_HoverStroke = 0x638; // UImage*
		constexpr auto SupplementaryBtn_Stroke = 0x640; // UImage*
		constexpr auto SupplementaryBtnChangeMode = 0x648; // UOverlay*
		constexpr auto SupplementaryBtnGamepadCallout = 0x650; // UImage*
		constexpr auto SupplementaryBtnHitTarget = 0x658; // UStandardButtonNoArt_C*
		constexpr auto SupplementaryBtnLabel = 0x660; // UTextBlock*
		constexpr auto SupplementaryBtnOverlay = 0x668; // UOverlay*
		constexpr auto SupplementaryBtnStandardWrapper = 0x670; // UOverlay*
		constexpr auto WarningIcon = 0x678; // UImage*
		constexpr auto PlayShortcutEnabled = 0x680; // bool
		constexpr auto CurrentPenaltyTimeLeft = 0x684; // int32_t
		constexpr auto StatusMsg_Unknown = 0x688; // FText
		constexpr auto StatusMsg_NoQueuesAvailable = 0x6a0; // FText
		constexpr auto StatusMsg_NoSelection = 0x6b8; // FText
		constexpr auto StatusMsg_QueueUnavailable = 0x6d0; // FText
		constexpr auto StatusMsg_PartyLimit = 0x6e8; // FText
		constexpr auto StatusMsg_ReadyToJoin = 0x700; // FText
		constexpr auto StatusMsg_WaitingForLeader = 0x718; // FText
		constexpr auto StatusMsg_QueuedStatus = 0x730; // FText
		constexpr auto StatusMsg_EnteringMatch = 0x748; // FText
		constexpr auto StatusMsg_PartyLevel = 0x760; // FText
		constexpr auto StatusMsg_PlayerLevel = 0x778; // FText
		constexpr auto StatusMsg_DeserterStatus = 0x790; // FText
		constexpr auto Msg_ChooseGamemode = 0x7a8; // FText
		constexpr auto Msg_CancelSearch = 0x7c0; // FText
		constexpr auto bPlayBtnEnabled = 0x7d8; // bool
		constexpr auto bSupplementaryBtnEnabled = 0x7d9; // bool
		constexpr auto TriggerStatusModeDisplayUpdate = 0x7e0; // FMulticastInlineDelegate
		constexpr auto bForceFirstTimeUpdate = 0x7f0; // bool
		constexpr auto CurrentQueueTimeElapsed = 0x7f4; // float
		constexpr auto Msg_ReadyToRejoin = 0x7f8; // FText
		constexpr auto Msg_LeaveMatch = 0x810; // FText
		constexpr auto Msg_LeaveCustomMatch = 0x828; // FText
		constexpr auto PendingQueueUpdateTimer = 0x840; // FTimerHandle
		constexpr auto PendingQueueUpdateTimeoutTime = 0x848; // float
		constexpr auto MsgLeaveCustomLobby = 0x84c; // bool
		constexpr auto ClickPlayBtnHomeQuickPlaySFX = 0x850; // UAkAudioEvent*
		constexpr auto ClickCancelBtnHomeQuickPlaySFX = 0x858; // UAkAudioEvent*
		constexpr auto StatusMsg_PartyLimitMin = 0x860; // FText
		constexpr auto StatusMsg_RankedRangeTooFar = 0x878; // FText
		constexpr auto LeaveQueueShortcutEnabled = 0x890; // bool
		constexpr auto StatusMsg_PartyPlatformDisallowed = 0x898; // FText
		constexpr auto StatusMsg_Retrying = 0x8b0; // FText
	}

	namespace n_UKSAISense_Objective {
		constexpr auto ObjectiveEvents = 0xe8; // TArray<FAIObjectiveEvent>
	}

	namespace n_APlayerStart {
		constexpr auto PlayerStartTag = 0x248; // FName
	}

	namespace n_UWBP_QuickPlay_C {
		constexpr auto UberGraphFrame = 0x558; // FPointerToUberGraphFrame
		constexpr auto ShowDetail = 0x560; // UWidgetAnimation*
		constexpr auto BattleZoneinfo = 0x568; // UOverlay*
		constexpr auto ButtonText = 0x570; // UTextBlock*
		constexpr auto ContentSwitcher = 0x578; // UWidgetSwitcher*
		constexpr auto Divider = 0x580; // UWBP_panel_bevel_C*
		constexpr auto Divider_2 = 0x588; // UWBP_panel_bevel_C*
		constexpr auto EmptyContent = 0x590; // UCanvasPanel*
		constexpr auto EmptyContentBackButton = 0x598; // UNewBackButton_C*
		constexpr auto ErrorContainer = 0x5a0; // UScaleBox*
		constexpr auto ErrorLabel = 0x5a8; // UTextBlock*
		constexpr auto GrandmasterText = 0x5b0; // UTextBlock*
		constexpr auto Image = 0x5b8; // UImage*
		constexpr auto Image_2 = 0x5c0; // UImage*
		constexpr auto Image_3 = 0x5c8; // UImage*
		constexpr auto Image_4 = 0x5d0; // UImage*
		constexpr auto Image_5 = 0x5d8; // UImage*
		constexpr auto Image_6 = 0x5e0; // UImage*
		constexpr auto Image_7 = 0x5e8; // UImage*
		constexpr auto Image_8 = 0x5f0; // UImage*
		constexpr auto Image_9 = 0x5f8; // UImage*
		constexpr auto Image_10 = 0x600; // UImage*
		constexpr auto Image_11 = 0x608; // UImage*
		constexpr auto Image_12 = 0x610; // UImage*
		constexpr auto Image_13 = 0x618; // UImage*
		constexpr auto Image_14 = 0x620; // UImage*
		constexpr auto Image_15 = 0x628; // UImage*
		constexpr auto Image_110 = 0x630; // UImage*
		constexpr auto Image_142 = 0x638; // UImage*
		constexpr auto Image_222 = 0x640; // UImage*
		constexpr auto Image_329 = 0x648; // UImage*
		constexpr auto Image_392 = 0x650; // UImage*
		constexpr auto MapRotationHeader = 0x658; // UWBP_QuickPlay_QueueTypeHeader_C*
		constexpr auto MapScrollBox = 0x660; // UScrollBox*
		constexpr auto MapScrollPrompt = 0x668; // UWBP_ControllerPrompt_C*
		constexpr auto MapScrollPromptContainer = 0x670; // USizeBox*
		constexpr auto MapThumbnailGrid = 0x678; // UUniformGridPanel*
		constexpr auto MobileSelectQueueBtn = 0x680; // UWBP_Graphic_Button_C*
		constexpr auto ObjectiveTxt = 0x688; // UTextBlock*
		constexpr auto PartyMaxLabel = 0x690; // UTextBlock*
		constexpr auto PartyMinLabel = 0x698; // UTextBlock*
		constexpr auto PlayerCount = 0x6a0; // UTextBlock*
		constexpr auto QueueDataSwitcher = 0x6a8; // UWidgetSwitcher*
		constexpr auto QueueDescription = 0x6b0; // UTextBlock*
		constexpr auto QueueDescWrapper = 0x6b8; // USizeBox*
		constexpr auto QueueDetailsDisplay = 0x6c0; // UWidgetSwitcher*
		constexpr auto QueueDetailSwitcher = 0x6c8; // UWidgetSwitcher*
		constexpr auto QueueDetailWrapper = 0x6d0; // UOverlay*
		constexpr auto QueueName = 0x6d8; // UTextBlock*
		constexpr auto QueueScrollBox = 0x6e0; // UScrollBox*
		constexpr auto QueueSectionContainer = 0x6e8; // UVerticalBox*
		constexpr auto QueueSelectContainer = 0x6f0; // UHorizontalBox*
		constexpr auto QueueSelectPanel = 0x6f8; // UOverlay*
		constexpr auto RankedDetailContainer22 = 0x700; // UOverlay*
		constexpr auto RankedInfoButton = 0x708; // UWBP_StandardButtonMedium_C*
		constexpr auto RankedProgressBadge = 0x710; // UWBP_RankedIcon_C*
		constexpr auto RankedProgressText = 0x718; // UTextBlock*
		constexpr auto RegionSwitcher = 0x720; // UWidgetSwitcher*
		constexpr auto RichTextBlock = 0x728; // URichTextBlock*
		constexpr auto RichTextBlock_2 = 0x730; // URichTextBlock*
		constexpr auto RichTextBlock_3 = 0x738; // URichTextBlock*
		constexpr auto RichTextBlock_4 = 0x740; // URichTextBlock*
		constexpr auto RichTextBlock_5 = 0x748; // URichTextBlock*
		constexpr auto RichTextBlock_6 = 0x750; // URichTextBlock*
		constexpr auto RichTextBlock_7 = 0x758; // URichTextBlock*
		constexpr auto RichTextBlock_8 = 0x760; // URichTextBlock*
		constexpr auto RichTextBlock_9 = 0x768; // URichTextBlock*
		constexpr auto RichTextBlock_10 = 0x770; // URichTextBlock*
		constexpr auto SeasonLabel = 0x778; // UTextBlock*
		constexpr auto WBP_panel_bevel = 0x780; // UWBP_panel_bevel_C*
		constexpr auto WBP_ProgressEarnedBar = 0x788; // UWBP_ProgressEarnedBar_C*
		constexpr auto WBP_QueueSelection_RegionSelectButton = 0x790; // UWBP_QueueSelection_RegionSelectButton_C*
		constexpr auto WBP_QuickPlay_MapThumbnail = 0x798; // UWBP_QuickPlay_MapThumbnail_C*
		constexpr auto WBP_QuickPlay_QueueTypeSection = 0x7a0; // UWBP_QuickPlay_QueueTypeSection_C*
		constexpr auto WBP_QuickPlay_QueueTypeSection_129 = 0x7a8; // UWBP_QuickPlay_QueueTypeSection_C*
		constexpr auto WBP_RegionSelect = 0x7b0; // UWBP_RegionSelect_C*
		constexpr auto WBP_ThrobberHorizontal = 0x7b8; // UWBP_ThrobberHorizontal_C*
		constexpr auto NavigationButtons = 0x7c0; // TArray<UKSWidget*>
		constexpr auto AllQueueButtons = 0x7d0; // TArray<UWBP_QuickPlay_QueueButton_C*>
		constexpr auto MaxColumn = 0x7e0; // int32_t
		constexpr auto QueueDataFactory = 0x7e8; // UKSQueueDataFactory*
		constexpr auto SelectedQueueInfo = 0x7f0; // FClientQueueInfo
		constexpr auto CurrentScreen = 0x8c8; // UWidget*
		constexpr auto ScreenToWidget = 0x8d0; // TMap<UWidget*, int32_t>
		constexpr auto MapScrollSpeed = 0x920; // float
		constexpr auto ShowQuickPlaySFX = 0x928; // UAkAudioEvent*
		constexpr auto CustomMatchButton = 0x930; // UKSWidget*
		constexpr auto FoundQueueToFocus = 0x938; // bool
		constexpr auto TopQueueButton = 0x940; // UWidget*
	}

	namespace n_USoundBase {
		constexpr auto SoundClassObject = 0x28; // USoundClass*
		constexpr auto bDebug = 0x30; // char : 1
		constexpr auto bOverrideConcurrency = 0x30; // char : 1
		constexpr auto bOutputToBusOnly = 0x30; // char : 1
		constexpr auto bHasDelayNode = 0x30; // char : 1
		constexpr auto bHasConcatenatorNode = 0x30; // char : 1
		constexpr auto bBypassVolumeScaleForPriority = 0x30; // char : 1
		constexpr auto VirtualizationMode = 0x31; // EVirtualizationMode
		constexpr auto ConcurrencySet = 0x88; // TSet<USoundConcurrency*>
		constexpr auto ConcurrencyOverrides = 0xd8; // FSoundConcurrencySettings
		constexpr auto Duration = 0xf8; // float
		constexpr auto MaxDistance = 0xfc; // float
		constexpr auto TotalSamples = 0x100; // float
		constexpr auto Priority = 0x104; // float
		constexpr auto AttenuationSettings = 0x108; // USoundAttenuation*
		constexpr auto Modulation = 0x110; // FSoundModulation
		constexpr auto SoundSubmixObject = 0x120; // USoundSubmixBase*
		constexpr auto SoundSubmixSends = 0x128; // TArray<FSoundSubmixSendInfo>
		constexpr auto SourceEffectChain = 0x138; // USoundEffectSourcePresetChain*
		constexpr auto BusSends = 0x140; // TArray<FSoundSourceBusSendInfo>
		constexpr auto PreEffectBusSends = 0x150; // TArray<FSoundSourceBusSendInfo>
	}

	namespace n_AKSDefensePoint {
		constexpr auto RelevantObjective = 0x258; // AKSObjectiveBase*
		constexpr auto AssignedDefenders = 0x260; // TArray<AActor*>
	}

	namespace n_UBorderSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UWBP_TextChat_ChatEntry_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto FadeOut = 0x240; // UWidgetAnimation*
		constexpr auto Show = 0x248; // UWidgetAnimation*
		constexpr auto NameButton = 0x250; // UButton*
		constexpr auto NameText = 0x258; // UTextBlock*
		constexpr auto Panel = 0x260; // UCanvasPanel*
		constexpr auto Text = 0x268; // UTextBlock*
		constexpr auto ChatDataCopy = 0x270; // FPUMG_ChatData
		constexpr auto IsWindowCollapsed = 0x2b0; // bool
		constexpr auto IsInitialShowFinished = 0x2b1; // bool
		constexpr auto ChatMessageDisplayDuration = 0x2b4; // float
	}

	namespace n_UKSModInst_FilterComponent {
		constexpr auto OnFilterActorAddedDel = 0x1b8; // FMulticastInlineDelegate
		constexpr auto OnFilterActorRemovedDel = 0x1c8; // FMulticastInlineDelegate
		constexpr auto ActorFilterConfig = 0x1d8; // FKSActorFilterConfig
		constexpr auto ManagedFilterComponent = 0x200; // UKSActorFilterComponent*
	}

	namespace n_UCameraAnim {
		constexpr auto CameraInterpGroup = 0x28; // UInterpGroup*
		constexpr auto AnimLength = 0x30; // float
		constexpr auto BoundingBox = 0x34; // FBox
		constexpr auto bRelativeToInitialTransform = 0x50; // char : 1
		constexpr auto bRelativeToInitialFOV = 0x50; // char : 1
		constexpr auto BaseFOV = 0x54; // float
		constexpr auto BasePostProcessSettings = 0x60; // FPostProcessSettings
		constexpr auto BasePostProcessBlendWeight = 0x5b0; // float
	}

	namespace n_UPointLightComponent {
		constexpr auto bUseInverseSquaredFalloff = 0x350; // char : 1
		constexpr auto LightFalloffExponent = 0x354; // float
		constexpr auto SourceRadius = 0x358; // float
		constexpr auto SoftSourceRadius = 0x35c; // float
		constexpr auto SourceLength = 0x360; // float
	}

	namespace n_UWBP_PanelDefault_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto PanelBG = 0x240; // UImage*
		constexpr auto PanelContent = 0x248; // UNamedSlot*
		constexpr auto PanelColor = 0x250; // FLinearColor
		constexpr auto ContentPadding = 0x260; // FMargin
	}

	namespace n_UWBP_VoucherAcquisition_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto OnShow = 0x528; // UWidgetAnimation*
		constexpr auto ClaimButton = 0x530; // UWBP_StandardButtonMedium_C*
		constexpr auto DLCImage = 0x538; // UKSAsyncImage*
		constexpr auto FullSplashBG = 0x540; // UScaleBox*
		constexpr auto Image = 0x548; // UImage*
		constexpr auto Image_139 = 0x550; // UImage*
		constexpr auto MultipleVoucherContainer = 0x558; // UHorizontalBox*
		constexpr auto MultipleVoucherScrollBox = 0x560; // UScrollBox*
		constexpr auto Overlay_52 = 0x568; // UOverlay*
		constexpr auto RedeemingOverlay = 0x570; // UCanvasPanel*
		constexpr auto Subtitle = 0x578; // UTextBlock*
		constexpr auto Throbber_164 = 0x580; // UThrobber*
		constexpr auto WBP_Header1 = 0x588; // UWBP_Header1_C*
		constexpr auto WBP_ModalPopupContainer = 0x590; // UWBP_ModalPopupContainer_C*
		constexpr auto DLCVoucher = 0x598; // UPUMG_StoreItem*
		constexpr auto IsRedeeming = 0x5a0; // bool
		constexpr auto ShowVoucherAcquisitionSFX = 0x5a8; // UAkAudioEvent*
		constexpr auto VoucherItems = 0x5b0; // TArray<UPUMG_StoreItem*>
		constexpr auto ScrollDirection = 0x5c0; // float
	}

	namespace n_UWBP_HorizontalRule_Bottom_C {
		constexpr auto Image_148 = 0x238; // UImage*
	}

	namespace n_UBackgroundBlur {
		constexpr auto Padding = 0x128; // FMargin
		constexpr auto HorizontalAlignment = 0x138; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x139; // EVerticalAlignment
		constexpr auto bApplyAlphaToBlur = 0x13a; // bool
		constexpr auto BlurStrength = 0x13c; // float
		constexpr auto bOverrideAutoRadiusCalculation = 0x140; // bool
		constexpr auto BlurRadius = 0x144; // int32_t
		constexpr auto LowQualityFallbackBrush = 0x148; // FSlateBrush
	}

	namespace n_UWBP_RewardsTrackMeterSegment_C {
		constexpr auto UberGraphFrame = 0x540; // FPointerToUberGraphFrame
		constexpr auto BarBackgroundFill = 0x548; // UImage*
		constexpr auto CanvasPanel_1 = 0x550; // UCanvasPanel*
		constexpr auto MeterBase = 0x558; // UImage*
		constexpr auto MeterGlow = 0x560; // UImage*
		constexpr auto MeterSpacer = 0x568; // USpacer*
		constexpr auto ProgressBarColor = 0x570; // UBorder*
		constexpr auto ProgressBarContainer = 0x578; // UOverlay*
		constexpr auto SegmentLabel = 0x580; // UTextBlock*
		constexpr auto ShearSpacerL = 0x588; // USpacer*
		constexpr auto ShearSpacerR = 0x590; // USpacer*
	}

	namespace n_UWBP_AbilityDurationBar_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto AbilityIcon = 0x240; // UImage*
		constexpr auto DurationRemaining = 0x248; // UProgressBar*
		constexpr auto DurationRemaining_2 = 0x250; // UProgressBar*
		constexpr auto Timer = 0x258; // UTextBlock*
		constexpr auto TotalDuration = 0x260; // float
		constexpr auto ModInstance = 0x268; // UKSPlayerModInstance*
	}

	namespace n_UWBP_ItemInfoPanel_StatBar_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto BarGroup = 0x240; // USizeBox*
		constexpr auto LerpingBarCurrent = 0x248; // UWBP_LerpingBar_C*
		constexpr auto LerpingBarProjected = 0x250; // UWBP_LerpingBar_C*
		constexpr auto NameWrapper = 0x258; // USizeBox*
		constexpr auto StatsWrapper = 0x260; // UScaleBox*
		constexpr auto StatText = 0x268; // UTextBlock*
		constexpr auto StatText_2 = 0x270; // UTextBlock*
		constexpr auto UpgradeArrow = 0x278; // UImage*
		constexpr auto UpgradeArrow_2 = 0x280; // UImage*
		constexpr auto UpgradeValueText = 0x288; // UTextBlock*
		constexpr auto UpgradeValueText_2 = 0x290; // UTextBlock*
		constexpr auto ValueText = 0x298; // UTextBlock*
		constexpr auto ValueText_2 = 0x2a0; // UTextBlock*
		constexpr auto VerticalBox_1 = 0x2a8; // UVerticalBox*
		constexpr auto VerticalStack = 0x2b0; // UHorizontalBox*
		constexpr auto bTextOnTop = 0x2b8; // bool
		constexpr auto InitialValue = 0x2bc; // float
		constexpr auto InitialUpgradeValue = 0x2c0; // float
	}

	namespace n_UWBP_BattlePassLevelPurchase_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto TitleText = 0x528; // UTextBlock*
		constexpr auto WBP_PanelDefault = 0x530; // UWBP_PanelDefault_C*
		constexpr auto WBP_YellowButton = 0x538; // UWBP_YellowButton_C*
		constexpr auto NumUnlockTiers = 0x540; // int32_t
		constexpr auto OnButtonClicked = 0x548; // FMulticastInlineDelegate
	}

	namespace n_UKSTextChatWidget {
		constexpr auto RadialMenuItemsToShowInChat = 0x520; // TArray<EMercCosmeticSlot>
		constexpr auto ActiveChatChannelsDirty = 0x530; // bool
		constexpr auto ActiveChatChannels = 0x538; // TArray<FPUMG_ActiveChatChannelData>
		constexpr auto CurrentChatChannelIndex = 0x548; // int32_t
		constexpr auto OnCurrentChatChannelChanged = 0x550; // FMulticastInlineDelegate
	}

	namespace n_UWBP_RoundRecap_C {
		constexpr auto RoundResultsContainer = 0x238; // UHorizontalBox*
		constexpr auto WBP_RoundRecap_Entry = 0x240; // UWBP_RoundRecap_Entry_C*
		constexpr auto WBP_RoundRecap_Entry_2 = 0x248; // UWBP_RoundRecap_Entry_C*
		constexpr auto WBP_RoundRecap_Entry_200 = 0x250; // UWBP_RoundRecap_Entry_C*
		constexpr auto WBP_RoundRecap_Entry_335 = 0x258; // UWBP_RoundRecap_Entry_C*
		constexpr auto WBP_RoundRecap_Entry_432 = 0x260; // UWBP_RoundRecap_Entry_C*
		constexpr auto WBP_RoundRecap_Entry_559 = 0x268; // UWBP_RoundRecap_Entry_C*
		constexpr auto WBP_RoundRecap_Entry_896 = 0x270; // UWBP_RoundRecap_Entry_C*
		constexpr auto WBP_RoundRecap_Entry_1052 = 0x278; // UWBP_RoundRecap_Entry_C*
		constexpr auto WBP_RoundRecap_Entry_1226 = 0x280; // UWBP_RoundRecap_Entry_C*
		constexpr auto WBP_RoundRecap_Entry_1413 = 0x288; // UWBP_RoundRecap_Entry_C*
		constexpr auto WBP_RoundRecap_Entry_1592 = 0x290; // UWBP_RoundRecap_Entry_C*
	}

	namespace n_UBrightLobbyHeader_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto LoggedOutStates = 0x528; // TArray<EPUMG_LoginState>
		constexpr auto LoginDataFactory = 0x538; // UPUMG_LoginDataFactory*
	}

	namespace n_UWBP_PlayerInfoDisplay_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto AvatarContainer = 0x528; // UScaleBox*
		constexpr auto IconA = 0x530; // UKSAsyncImage*
		constexpr auto IconsShelf = 0x538; // UHorizontalBox*
		constexpr auto InputIcon = 0x540; // UImage*
		constexpr auto InputIconContainer = 0x548; // USizeBox*
		constexpr auto LevelText = 0x550; // UTextBlock*
		constexpr auto MetaStatusLabel = 0x558; // UTextBlock*
		constexpr auto PartyLeaderContainer = 0x560; // USizeBox*
		constexpr auto PartyLeaderIcon = 0x568; // UImage*
		constexpr auto PlatformIcon = 0x570; // UWBP_PlatformIcon_C*
		constexpr auto PlatformIconA = 0x578; // UWBP_PlatformIcon_C*
		constexpr auto PlatformIconContainer = 0x580; // USizeBox*
		constexpr auto PlayerLevelGroup = 0x588; // UOverlay*
		constexpr auto PlayerNameText = 0x590; // UTextBlock*
		constexpr auto RankedBadgeWrapper = 0x598; // USizeBox*
		constexpr auto StatusContainer = 0x5a0; // UHorizontalBox*
		constexpr auto StatusLabel = 0x5a8; // UTextBlock*
		constexpr auto StatusSwatch = 0x5b0; // UImage*
		constexpr auto VoiceIconContainer = 0x5b8; // USizeBox*
		constexpr auto WBP_RankedIcon = 0x5c0; // UWBP_RankedIcon_C*
		constexpr auto WBP_VoiceActivityIcon = 0x5c8; // UWBP_VoiceActivityIcon_C*
		constexpr auto ShowStatus = 0x5d0; // bool
		constexpr auto ShowPartyLeaderIcon = 0x5d1; // bool
		constexpr auto IconShelfAlignment = 0x5d2; // EHorizontalAlignment
		constexpr auto CachedPlayerInfo = 0x5d8; // UKSPlayerInfo*
		constexpr auto StatusColors = 0x5e0; // UDataTable*
		constexpr auto PlayerNameColor = 0x5e8; // FSlateColor
		constexpr auto PlayerNameFont = 0x610; // FSlateFontInfo
		constexpr auto IsMuted = 0x660; // bool
		constexpr auto IsTalking = 0x661; // bool
		constexpr auto IconShelfMargin = 0x664; // FMargin
		constexpr auto HideRankedBadge = 0x674; // bool
	}

	namespace n_UCurveVector {
		constexpr auto FloatCurves = 0x30; // FRichCurve [0x3]
	}

	namespace n_UWBP_PlayerIdentity_Title_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto PlayerTitleText = 0x528; // UTextBlock*
		constexpr auto RarityBackground = 0x530; // UBorder*
	}

	namespace n_UForceFeedbackComponent {
		constexpr auto ForceFeedbackEffect = 0x208; // UForceFeedbackEffect*
		constexpr auto bAutoDestroy = 0x210; // char : 1
		constexpr auto bStopWhenOwnerDestroyed = 0x210; // char : 1
		constexpr auto bLooping = 0x210; // char : 1
		constexpr auto bIgnoreTimeDilation = 0x210; // char : 1
		constexpr auto bOverrideAttenuation = 0x210; // char : 1
		constexpr auto IntensityMultiplier = 0x214; // float
		constexpr auto AttenuationSettings = 0x218; // UForceFeedbackAttenuation*
		constexpr auto AttenuationOverrides = 0x220; // FForceFeedbackAttenuationSettings
		constexpr auto OnForceFeedbackFinished = 0x2d0; // FMulticastInlineDelegate
	}

	namespace n_UNiagaraDataInterfaceTexture {
		constexpr auto Texture = 0x30; // UTexture*
	}

	namespace n_UGameSessionSettings {
		constexpr auto MaxSpectators = 0x28; // int32_t
		constexpr auto MaxPlayers = 0x2c; // int32_t
		constexpr auto bRequiresPushToTalk = 0x30; // char : 1
	}

	namespace n_UAxisAngleGizmo {
		constexpr auto AxisSource = 0x48; // TScriptInterface<IGizmoAxisSource>
		constexpr auto AngleSource = 0x58; // TScriptInterface<IGizmoFloatParameterSource>
		constexpr auto HitTarget = 0x68; // TScriptInterface<IGizmoClickTarget>
		constexpr auto StateTarget = 0x78; // TScriptInterface<IGizmoStateTarget>
		constexpr auto bInInteraction = 0x88; // bool
		constexpr auto RotationOrigin = 0x8c; // FVector
		constexpr auto RotationAxis = 0x98; // FVector
		constexpr auto RotationPlaneX = 0xa4; // FVector
		constexpr auto RotationPlaneY = 0xb0; // FVector
		constexpr auto InteractionStartPoint = 0xbc; // FVector
		constexpr auto InteractionCurPoint = 0xc8; // FVector
		constexpr auto InteractionStartAngle = 0xd4; // float
		constexpr auto InteractionCurAngle = 0xd8; // float
	}

	namespace n_UNiagaraPreviewAxis_InterpParamVector4 {
		constexpr auto Min = 0x40; // FVector4
		constexpr auto Max = 0x50; // FVector4
	}

	namespace n_UPlayerInfoPrevwLoadoutComponent {
		constexpr auto CurrentJob = 0xb8; // UKSJobItem*
		constexpr auto FailSafeJob = 0xc0; // TSoftObjectPtr<UKSJobItem>
		constexpr auto SkinMap = 0xe8; // TMap<UKSItem*, UKSItem*>
		constexpr auto WeakPlayerInfo = 0x138; // TWeakObjectPtr<UKSPlayerInfo>
	}

	namespace n_AKSPlayerShopZone {
		constexpr auto OnInShopZoneChanged = 0x220; // FMulticastInlineDelegate
	}

	namespace n_UFoliageInstancedStaticMeshComponent {
		constexpr auto OnInstanceTakePointDamage = 0x680; // FMulticastInlineDelegate
		constexpr auto OnInstanceTakeRadialDamage = 0x690; // FMulticastInlineDelegate
		constexpr auto GenerationGuid = 0x6a0; // FGuid
	}

	namespace n_UMaterialExpressionArctangent2 {
		constexpr auto Y = 0x40; // FExpressionInput
		constexpr auto X = 0x54; // FExpressionInput
	}

	namespace n_USourceEffectDynamicsProcessorPreset {
		constexpr auto Settings = 0x90; // FSourceEffectDynamicsProcessorSettings
	}

	namespace n_AKSDropshipInterior {
		constexpr auto DefaultSceneRoot = 0x220; // USceneComponent*
		constexpr auto SharedRoot = 0x228; // USceneComponent*
		constexpr auto StartingDoorLocation = 0x230; // FVector
		constexpr auto StartingMeshLocation1 = 0x23c; // FVector
		constexpr auto StartingMeshLocation2 = 0x248; // FVector
		constexpr auto StartingDoorRotator = 0x254; // FRotator
		constexpr auto StartingMeshRotator1 = 0x260; // FRotator
		constexpr auto StartingMeshRotator2 = 0x26c; // FRotator
	}

	namespace n_UKSInteractableComponent {
		constexpr auto InteractionPriority = 0xb0; // int32_t
	}

	namespace n_UKSButtonSoundLibrary {
		constexpr auto ButtonClicked = 0x28; // UAkAudioEvent*
		constexpr auto ButtonHovered = 0x30; // UAkAudioEvent*
		constexpr auto ButtonUnhovered = 0x38; // UAkAudioEvent*
	}

	namespace n_UAnimNotifyState_TimedParticleEffect {
		constexpr auto PSTemplate = 0x30; // UParticleSystem*
		constexpr auto SocketName = 0x38; // FName
		constexpr auto LocationOffset = 0x40; // FVector
		constexpr auto RotationOffset = 0x4c; // FRotator
		constexpr auto bDestroyAtEnd = 0x58; // bool
	}

	namespace n_UWBP_RadialMenuEntry_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto BigItemNameText = 0x240; // UTextBlock*
		constexpr auto DisabledIcon = 0x248; // UImage*
		constexpr auto DisplayTypeSwitcher = 0x250; // UWidgetSwitcher*
		constexpr auto HoverOverlay = 0x258; // UOverlay*
		constexpr auto ItemNameText = 0x260; // UTextBlock*
		constexpr auto WBP_AsyncIcon = 0x268; // UWBP_AsyncIcon_C*
	}

	namespace n_UGameplayTask_WaitDelay {
		constexpr auto OnFinish = 0x68; // FMulticastInlineDelegate
	}

	namespace n_UANotifyState_MagazineHide_C {
		constexpr auto Is DodgeRollReload Montage = 0x30; // bool
		constexpr auto Reverse = 0x31; // bool
		constexpr auto Only Unhide = 0x32; // bool
		constexpr auto Only Hide = 0x33; // bool
	}

	namespace n_UCurveLinearColorAtlas {
		constexpr auto TextureSize = 0xe8; // uint32_t
		constexpr auto GradientCurves = 0xf0; // TArray<UCurveLinearColor*>
	}

	namespace n_UNiagaraDataInterfaceCurlNoise {
		constexpr auto Seed = 0x30; // uint32_t
	}

	namespace n_AGameState {
		constexpr auto MatchState = 0x270; // FName
		constexpr auto PreviousMatchState = 0x278; // FName
		constexpr auto ElapsedTime = 0x280; // int32_t
	}

	namespace n_AGeometryCacheActor {
		constexpr auto GeometryCacheComponent = 0x220; // UGeometryCacheComponent*
	}

	namespace n_UPlatformGameInstance {
		constexpr auto ApplicationWillDeactivateDelegate = 0x198; // FMulticastInlineDelegate
		constexpr auto ApplicationHasReactivatedDelegate = 0x1a8; // FMulticastInlineDelegate
		constexpr auto ApplicationWillEnterBackgroundDelegate = 0x1b8; // FMulticastInlineDelegate
		constexpr auto ApplicationHasEnteredForegroundDelegate = 0x1c8; // FMulticastInlineDelegate
		constexpr auto ApplicationWillTerminateDelegate = 0x1d8; // FMulticastInlineDelegate
		constexpr auto ApplicationShouldUnloadResourcesDelegate = 0x1e8; // FMulticastInlineDelegate
		constexpr auto ApplicationReceivedStartupArgumentsDelegate = 0x1f8; // FMulticastInlineDelegate
		constexpr auto ApplicationRegisteredForRemoteNotificationsDelegate = 0x208; // FMulticastInlineDelegate
		constexpr auto ApplicationRegisteredForUserNotificationsDelegate = 0x218; // FMulticastInlineDelegate
		constexpr auto ApplicationFailedToRegisterForRemoteNotificationsDelegate = 0x228; // FMulticastInlineDelegate
		constexpr auto ApplicationReceivedRemoteNotificationDelegate = 0x238; // FMulticastInlineDelegate
		constexpr auto ApplicationReceivedLocalNotificationDelegate = 0x248; // FMulticastInlineDelegate
		constexpr auto ApplicationReceivedScreenOrientationChangedNotificationDelegate = 0x258; // FMulticastInlineDelegate
	}

	namespace n_UStreamMediaSource {
		constexpr auto StreamUrl = 0x88; // FString
	}

	namespace n_AAtmosphericFog {
		constexpr auto AtmosphericFogComponent = 0x220; // UAtmosphericFogComponent*
	}

	namespace n_UPGame_PlayerInputDefault {
		constexpr auto bRestrictInvalidInputType = 0x28; // bool
	}

	namespace n_USoundAttenuation {
		constexpr auto Attenuation = 0x28; // FSoundAttenuationSettings
	}

	namespace n_AKSCinematicCharacterManager {
		constexpr auto CinematicSequenceManager = 0x428; // AKSCinematicSequenceManager*
		constexpr auto CinematicCharacterType = 0x430; // EKSCinematicCharacterType
		constexpr auto bRequireCharacterToBeVisibleToCountAsLoaded = 0x431; // bool
	}

	namespace n_ACameraShakeSourceActor {
		constexpr auto CameraShakeSourceComponent = 0x220; // UCameraShakeSourceComponent*
	}

	namespace n_UPlatformInterfaceBase {
		constexpr auto AllDelegates = 0x28; // TArray<FDelegateArray>
	}

	namespace n_UKSAnimNotify_PlayParticleEffect {
		constexpr auto SkinTableRowName = 0x90; // FName
	}

	namespace n_UCameraComponent {
		constexpr auto FieldOfView = 0x208; // float
		constexpr auto OrthoWidth = 0x20c; // float
		constexpr auto OrthoNearClipPlane = 0x210; // float
		constexpr auto OrthoFarClipPlane = 0x214; // float
		constexpr auto AspectRatio = 0x218; // float
		constexpr auto MaxAspectRatio = 0x21c; // float
		constexpr auto bConstrainAspectRatio = 0x220; // char : 1
		constexpr auto bUseFieldOfViewForLOD = 0x220; // char : 1
		constexpr auto bLockToHmd = 0x220; // char : 1
		constexpr auto bUsePawnControlRotation = 0x220; // char : 1
		constexpr auto ProjectionMode = 0x221; // ECameraProjectionMode
		constexpr auto PostProcessBlendWeight = 0x260; // float
		constexpr auto PostProcessSettings = 0x290; // FPostProcessSettings
	}

	namespace n_UMaterialExpressionLinearInterpolate {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto Alpha = 0x68; // FExpressionInput
		constexpr auto ConstA = 0x7c; // float
		constexpr auto ConstB = 0x80; // float
		constexpr auto ConstAlpha = 0x84; // float
	}

	namespace n_UVectorField {
		constexpr auto Bounds = 0x28; // FBox
		constexpr auto Intensity = 0x44; // float
	}

	namespace n_UEnvQueryGenerator_Cone {
		constexpr auto AlignedPointsDistance = 0x80; // FAIDataProviderFloatValue
		constexpr auto ConeDegrees = 0xb8; // FAIDataProviderFloatValue
		constexpr auto AngleStep = 0xf0; // FAIDataProviderFloatValue
		constexpr auto Range = 0x128; // FAIDataProviderFloatValue
		constexpr auto CenterActor = 0x160; // UEnvQueryContext*
		constexpr auto bIncludeContextLocation = 0x168; // char : 1
	}

	namespace n_UWBP_WeaponMasteryMilestoneProgress_C {
		constexpr auto UberGraphFrame = 0x558; // FPointerToUberGraphFrame
		constexpr auto AnimOnShown = 0x560; // UWidgetAnimation*
		constexpr auto MilestoneEntryContainer = 0x568; // UHorizontalBox*
		constexpr auto ShadeBox = 0x570; // UImage*
		constexpr auto WBP_StandardButtonMedium = 0x578; // UWBP_StandardButtonMedium_C*
		constexpr auto WBP_WeaponMilestoneEntry_Progression = 0x580; // UWBP_WeaponMilestoneEntry_Progression_C*
		constexpr auto WBP_WeaponMilestoneEntry_Progression_2 = 0x588; // UWBP_WeaponMilestoneEntry_Progression_C*
		constexpr auto WBP_WeaponMilestoneEntry_Progression_3 = 0x590; // UWBP_WeaponMilestoneEntry_Progression_C*
		constexpr auto WBP_WeaponMilestoneEntry_Progression_4 = 0x598; // UWBP_WeaponMilestoneEntry_Progression_C*
		constexpr auto WeaponViewActorName = 0x5a0; // FName
		constexpr auto CurrentAnimRewardXpBonus = 0x5a8; // int32_t
		constexpr auto WaitingForModel = 0x5ac; // bool
		constexpr auto WaitingForWeaponMeter = 0x5ad; // bool
	}

	namespace n_UKSEmoteCosmeticSubInstance_Play {
		constexpr auto MinimumEmoteLoopDuration = 0x28; // float
	}

	namespace n_UInteractiveGizmo {
		constexpr auto InputBehaviors = 0x30; // UInputBehaviorSet*
	}

	namespace n_UGizmoLineHandleComponent {
		constexpr auto Normal = 0x450; // FVector
		constexpr auto HandleSize = 0x45c; // float
		constexpr auto Thickness = 0x460; // float
		constexpr auto Direction = 0x464; // FVector
		constexpr auto Length = 0x470; // float
		constexpr auto bImageScale = 0x474; // bool
	}

	namespace n_UWBP_KeyboardBackButton_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto Back_TextBlock = 0x240; // UTextBlock*
		constexpr auto BackButton = 0x248; // UButton*
		constexpr auto KBMIconBorder = 0x250; // UBorder*
		constexpr auto OnBackButtonClicked = 0x258; // FMulticastInlineDelegate
		constexpr auto UseTouchStyling = 0x268; // bool
	}

	namespace n_UPawnNoiseEmitterComponent {
		constexpr auto bAIPerceptionSystemCompatibilityMode = 0xb0; // char : 1
		constexpr auto LastRemoteNoisePosition = 0xb4; // FVector
		constexpr auto NoiseLifetime = 0xc0; // float
		constexpr auto LastRemoteNoiseVolume = 0xc4; // float
		constexpr auto LastRemoteNoiseTime = 0xc8; // float
		constexpr auto LastLocalNoiseVolume = 0xcc; // float
		constexpr auto LastLocalNoiseTime = 0xd0; // float
	}

	namespace n_UWBP_CosmeticItem_Title_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto Button = 0x528; // UWBP_ButtonSlot_Cosmetic_C*
		constexpr auto Gradient = 0x530; // UImage*
		constexpr auto RarityElementWrapper = 0x538; // UBorder*
		constexpr auto ScanLines = 0x540; // UImage*
		constexpr auto Title = 0x548; // UTextBlock*
		constexpr auto PlatformItem = 0x550; // UPlatformInventoryItem*
		constexpr auto OnItemHovered = 0x558; // FMulticastInlineDelegate
		constexpr auto OnItemUnhovered = 0x568; // FMulticastInlineDelegate
		constexpr auto OnItemClicked = 0x578; // FMulticastInlineDelegate
		constexpr auto HoverTitleItemSFX = 0x588; // UAkAudioEvent*
		constexpr auto ClickTitleItemSFX = 0x590; // UAkAudioEvent*
	}

	namespace n_UMaterialExpressionCeil {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UWBP_ChallengeEntry_SeasonalMastery_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto background = 0x240; // UImage*
		constexpr auto ChallengeDescription = 0x248; // UTextBlock*
		constexpr auto ChallengeProgressText = 0x250; // UTextBlock*
		constexpr auto CompletedText = 0x258; // UTextBlock*
		constexpr auto HeaderBG = 0x260; // UImage*
		constexpr auto ProgressBar = 0x268; // UWBP_ProgressEarnedBar_C*
		constexpr auto ProgressTextSwitcher = 0x270; // UWidgetSwitcher*
		constexpr auto RewardBadge_EXAMPLE = 0x278; // UWBP_Challenge_Rewards_Badge_C*
		constexpr auto RewardBadge_EXAMPLE_01 = 0x280; // UWBP_Challenge_Rewards_Badge_C*
		constexpr auto RewardsContainer = 0x288; // UHorizontalBox*
		constexpr auto TimeRemainingWrapper = 0x290; // UHorizontalBox*
		constexpr auto IsComplete = 0x298; // bool
	}

	namespace n_APGame_GameMode {
		constexpr auto bAutoEnableCombatLog = 0x3e8; // bool
		constexpr auto bUploadCombatLogOverride = 0x3e9; // bool
		constexpr auto bFubarForCPUFramerate = 0x438; // bool
		constexpr auto bFubarForPacketLoss = 0x439; // bool
		constexpr auto FubarShutdownWaitTimeoutTime = 0x43c; // float
		constexpr auto bDeferWelcomeUntilAllPlayersConnect = 0x440; // bool
		constexpr auto bReadyForWelcome = 0x441; // bool
		constexpr auto SonyActivityId = 0x4a0; // FString
		constexpr auto SonyMatchOwnerNetTimeout = 0x4b0; // float
		constexpr auto SonyMatchData = 0x4b8; // FPGame_SonyMatchData
		constexpr auto SonyIneligibleMatchOwners = 0x4d0; // TArray<uint32_t>
		constexpr auto PGame_InactivePlayerArray = 0x4f0; // TArray<FPGame_InactivePlayerStateEntry>
	}

	namespace n_UKSSettingsInfo_CrosshairColor {
		constexpr auto ColorOptions = 0x118; // UKSSettingsColorOptionsAsset*
	}

	namespace n_AFieldSystemActor {
		constexpr auto FieldSystemComponent = 0x220; // UFieldSystemComponent*
	}

	namespace n_UKSShopItemButtonBase {
		constexpr auto OnShopSelection = 0x520; // FMulticastInlineDelegate
		constexpr auto OnShopViewItemDetails = 0x530; // FMulticastInlineDelegate
		constexpr auto OnItemSelected = 0x540; // FMulticastInlineDelegate
		constexpr auto OnItemViewDetails = 0x550; // FMulticastInlineDelegate
		constexpr auto ActiveShopSlot = 0x560; // EShopItemType
	}

	namespace n_UParticleEmitter {
		constexpr auto EmitterName = 0x28; // FName
		constexpr auto SubUVDataOffset = 0x30; // int32_t
		constexpr auto EmitterRenderMode = 0x34; // EEmitterRenderMode
		constexpr auto SignificanceLevel = 0x35; // EParticleSignificanceLevel
		constexpr auto bUseLegacySpawningBehavior = 0x37; // char : 1
		constexpr auto ConvertedModules = 0x37; // char : 1
		constexpr auto bIsSoloing = 0x37; // char : 1
		constexpr auto bCookedOut = 0x37; // char : 1
		constexpr auto bDisabledLODsKeepEmitterAlive = 0x37; // char : 1
		constexpr auto bDisableWhenInsignficant = 0x38; // char : 1
		constexpr auto LODLevels = 0x40; // TArray<UParticleLODLevel*>
		constexpr auto PeakActiveParticles = 0x50; // int32_t
		constexpr auto InitialAllocationCount = 0x54; // int32_t
		constexpr auto QualityLevelSpawnRateScale = 0x58; // float
		constexpr auto DetailModeBitmask = 0x5c; // uint32_t
		constexpr auto m_ParticleChannels = 0x1b8; // FParticleChannelContainer
	}

	namespace n_UWBP_StoreSection_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto CTAWrapper = 0x528; // USizeBox*
		constexpr auto Image_147 = 0x530; // UImage*
		constexpr auto RemainingContainer = 0x538; // UHorizontalBox*
		constexpr auto SectionContents = 0x540; // UGridPanel*
		constexpr auto SectionName = 0x548; // UTextBlock*
		constexpr auto TaxContainer = 0x550; // UScaleBox*
		constexpr auto TaxSub = 0x558; // UTextBlock*
		constexpr auto TimeRemaining = 0x560; // UTextBlock*
		constexpr auto WBP_CallToAction = 0x568; // UWBP_CallToAction_C*
		constexpr auto OwningStore = 0x570; // UWBP_Store_C*
		constexpr auto SectionMetaData = 0x578; // UKSStoreSection*
		constexpr auto SectionRemainingTime = 0x580; // float
		constexpr auto Overflow = 0x584; // float
		constexpr auto TickTimer = 0x588; // FTimerHandle
		constexpr auto STORE_TIMER_INTERVAL = 0x590; // float
		constexpr auto CTAWrapper_1 = 0x598; // USizeBox*
	}

	namespace n_UKSAvatar {
		constexpr auto LargeAvatarIcon = 0x250; // TSoftObjectPtr<UTexture2D>
		constexpr auto LargeAvatarIconInfo = 0x278; // UIconInfo*
	}

	namespace n_ULandscapeSplineSegment {
		constexpr auto Connections = 0x28; // FLandscapeSplineSegmentConnection [0x2]
		constexpr auto SplineInfo = 0x58; // FInterpCurveVector
		constexpr auto Points = 0x70; // TArray<FLandscapeSplineInterpPoint>
		constexpr auto Bounds = 0x80; // FBox
		constexpr auto LocalMeshComponents = 0xa0; // TArray<USplineMeshComponent*>
	}

	namespace n_UEnvQueryManager {
		constexpr auto InstanceCache = 0xa8; // TArray<FEnvQueryInstanceCache>
		constexpr auto LocalContexts = 0xb8; // TArray<UEnvQueryContext*>
		constexpr auto GCShieldedWrappers = 0xc8; // TArray<UEnvQueryInstanceBlueprintWrapper*>
		constexpr auto MaxAllowedTestingTime = 0x12c; // float
		constexpr auto bTestQueriesUsingBreadth = 0x130; // bool
		constexpr auto QueryCountWarningThreshold = 0x134; // int32_t
		constexpr auto QueryCountWarningInterval = 0x138; // double
	}

	namespace n_UKSVehicleSeatComponent {
		constexpr auto SeatPriority = 0x208; // float
		constexpr auto MainCameraViewInfo = 0x20c; // FReplicatedViewInfo
		constexpr auto AimCameraViewInfo = 0x214; // FReplicatedViewInfo
		constexpr auto AttachSocket = 0x234; // FName
		constexpr auto GetInSequence = 0x240; // UAnimMontage*
		constexpr auto GetOutSequence = 0x248; // UAnimMontage*
		constexpr auto IdleSequence = 0x250; // UAnimSequence*
		constexpr auto LeanOutSequence = 0x258; // UAnimSequence*
	}

	namespace n_UWBP_ProgressEarnedBar_C {
		constexpr auto UberGraphFrame = 0x540; // FPointerToUberGraphFrame
		constexpr auto OnLevelDown = 0x548; // UWidgetAnimation*
		constexpr auto OnLevelUp = 0x550; // UWidgetAnimation*
		constexpr auto BarBackground = 0x558; // UHorizontalBox*
		constexpr auto BarBackgroundImage = 0x560; // UImage*
		constexpr auto LevelUpAnimBar = 0x568; // UImage*
		constexpr auto ProgressBarBase = 0x570; // UOverlay*
		constexpr auto ProgressBarFill = 0x578; // UHorizontalBox*
		constexpr auto ProgressBarFill_Bonus = 0x580; // UHorizontalBox*
		constexpr auto xp_base = 0x588; // UImage*
		constexpr auto xp_base_tip = 0x590; // UImage*
		constexpr auto xp_progress = 0x598; // UImage*
		constexpr auto xp_progress_bonus = 0x5a0; // UImage*
		constexpr auto Progression = 0x5a8; // FPlayerProgression
		constexpr auto CurrentTierIndex = 0x718; // int32_t
		constexpr auto OnLevelUpEvent = 0x720; // FMulticastInlineDelegate
		constexpr auto OnLevelDownEvent = 0x730; // FMulticastInlineDelegate
		constexpr auto BaseColor = 0x740; // FSlateColor
		constexpr auto IncreaseColor = 0x768; // FSlateColor
		constexpr auto DecreaseColor = 0x790; // FSlateColor
		constexpr auto PlayRankProgressionSFX = 0x7b8; // UAkAudioEvent*
		constexpr auto StopRankProgressionSFX = 0x7c0; // UAkAudioEvent*
		constexpr auto BackgroundColor = 0x7c8; // FSlateColor
		constexpr auto Clamped Base Pct = 0x7f0; // float
		constexpr auto Clamped Delta Pct = 0x7f4; // float
		constexpr auto BonusIncreaseColor = 0x7f8; // FSlateColor
		constexpr auto OnLerpUpdate = 0x820; // FMulticastInlineDelegate
		constexpr auto AnimTimeInitial = 0x830; // float
		constexpr auto AnimTimeFinal = 0x834; // float
		constexpr auto ShowGradientTip = 0x838; // bool
	}

	namespace n_UDistributionFloatParameterBase {
		constexpr auto ParameterName = 0x40; // FName
		constexpr auto MinInput = 0x48; // float
		constexpr auto MaxInput = 0x4c; // float
		constexpr auto MinOutput = 0x50; // float
		constexpr auto MaxOutput = 0x54; // float
		constexpr auto ParamMode = 0x58; // DistributionParamMode
	}

	namespace n_UMaterialExpressionComment {
		constexpr auto SizeX = 0x40; // int32_t
		constexpr auto SizeY = 0x44; // int32_t
		constexpr auto Text = 0x48; // FString
		constexpr auto CommentColor = 0x58; // FLinearColor
		constexpr auto FontSize = 0x68; // int32_t
	}

	namespace n_UGizmoUniformScaleParameterSource {
		constexpr auto AxisSource = 0x48; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0x58; // TScriptInterface<IGizmoTransformSource>
		constexpr auto ScaleMultiplier = 0x68; // float
		constexpr auto Parameter = 0x6c; // FVector2D
		constexpr auto LastChange = 0x74; // FGizmoVec2ParameterChange
		constexpr auto CurScaleOrigin = 0x84; // FVector
		constexpr auto CurScaleNormal = 0x90; // FVector
		constexpr auto CurScaleAxisX = 0x9c; // FVector
		constexpr auto CurScaleAxisY = 0xa8; // FVector
		constexpr auto InitialTransform = 0xc0; // FTransform
	}

	namespace n_UKSSpray {
		constexpr auto StatTrackingActivity = 0x320; // TSoftObjectPtr<UKSActivity>
	}

	namespace n_UKSDistanceOptimizationComponent {
		constexpr auto DistanceOptimizationChangedDelegate = 0xb0; // FMulticastInlineDelegate
		constexpr auto bAlwaysDisableOnServer = 0xc0; // bool
		constexpr auto ActiveDistance = 0xc4; // float
		constexpr auto CurrentDistance = 0xc8; // float
		constexpr auto ComponentsToControl = 0xd0; // TArray<UActorComponent*>
		constexpr auto ActorsToControl = 0xe0; // TArray<AActor*>
	}

	namespace n_UPhysicsHandleComponent {
		constexpr auto GrabbedComponent = 0xb0; // UPrimitiveComponent*
		constexpr auto bSoftAngularConstraint = 0xc0; // char : 1
		constexpr auto bSoftLinearConstraint = 0xc0; // char : 1
		constexpr auto bInterpolateTarget = 0xc0; // char : 1
		constexpr auto LinearDamping = 0xc4; // float
		constexpr auto LinearStiffness = 0xc8; // float
		constexpr auto AngularDamping = 0xcc; // float
		constexpr auto AngularStiffness = 0xd0; // float
		constexpr auto InterpolationSpeed = 0x140; // float
	}

	namespace n_UKSBTD_CompareKeyToObjective {
		constexpr auto Objective = 0x90; // UKSBTObjective*
	}

	namespace n_UKSThreatComponent {
		constexpr auto ThreatUpdateIndex = 0xb0; // int32_t
		constexpr auto CurrentThreat = 0xb4; // float
		constexpr auto ThreatBucketValue = 0xb8; // float
		constexpr auto OwningThreat = 0xc0; // UKSThreatComponent*
		constexpr auto OwnedThreats = 0xc8; // TArray<UKSThreatComponent*>
		constexpr auto OwningCharacter = 0xd8; // AKSCharacter*
		constexpr auto LocalPlayerCharacter = 0xe0; // TWeakObjectPtr<AKSCharacter>
		constexpr auto SelfThreatValue = 0xf8; // float
		constexpr auto AllyThreatValue = 0xfc; // float
		constexpr auto DefaultThreatValue = 0x100; // float
		constexpr auto BucketValues = 0x108; // TArray<float>
		constexpr auto bUseFocused = 0x118; // bool
		constexpr auto FocusedValue = 0x11c; // float
		constexpr auto FocusedWeight = 0x120; // float
		constexpr auto FocusedInnerAngle = 0x124; // float
		constexpr auto FocusedOuterAngle = 0x12c; // float
		constexpr auto bUseFocusTarget = 0x134; // bool
		constexpr auto FocusTargetValue = 0x138; // float
		constexpr auto FocusTargetWeight = 0x13c; // float
		constexpr auto FocusTargetInnerAngle = 0x140; // float
		constexpr auto FocusTargetOuterAngle = 0x148; // float
		constexpr auto bUseProximity = 0x150; // bool
		constexpr auto ProximityValue = 0x154; // float
		constexpr auto ProximityWeight = 0x158; // float
		constexpr auto ProximityInnerDistance = 0x15c; // float
		constexpr auto ProximityOuterDistance = 0x160; // float
		constexpr auto bUseBehind = 0x164; // bool
		constexpr auto BehindValue = 0x168; // float
		constexpr auto BehindWeight = 0x16c; // float
		constexpr auto BehindInnerAngle = 0x170; // float
		constexpr auto BehindOuterAngle = 0x178; // float
		constexpr auto bUseEffectiveRange = 0x180; // bool
		constexpr auto EffectiveRangeValue = 0x184; // float
		constexpr auto EffectiveRangeWeight = 0x188; // float
	}

	namespace n_AKSLootCrate {
		constexpr auto SideAlignment = 0x300; // int32_t
		constexpr auto bRequiresSideAlignmentToLoot = 0x304; // bool
		constexpr auto bIsEnabled = 0x328; // bool
		constexpr auto bIsActive = 0x329; // bool
		constexpr auto bIsOpen = 0x32a; // bool
		constexpr auto OnLootcrateInfoChangedDel = 0x330; // FMulticastInlineDelegate
		constexpr auto LootCrateInfo = 0x340; // FKSLootCrateInfo
		constexpr auto LootItemInfos = 0x368; // TArray<FKSLootItemInfo>
	}

	namespace n_USkinnedMeshComponent {
		constexpr auto SkeletalMesh = 0x458; // USkeletalMesh*
		constexpr auto MasterPoseComponent = 0x460; // TWeakObjectPtr<USkinnedMeshComponent>
		constexpr auto SkinCacheUsage = 0x468; // TArray<ESkinCacheUsage>
		constexpr auto bSuppressSocketByNameWarnings = 0x548; // bool
		constexpr auto PhysicsAssetOverride = 0x578; // UPhysicsAsset*
		constexpr auto ForcedLodModel = 0x580; // int32_t
		constexpr auto MinLodModel = 0x584; // int32_t
		constexpr auto StreamingDistanceMultiplier = 0x590; // float
		constexpr auto LODInfo = 0x5a0; // TArray<FSkelMeshComponentLODInfo>
		constexpr auto VisibilityBasedAnimTickOption = 0x5d4; // EVisibilityBasedAnimTickOption
		constexpr auto bOverrideMinLod = 0x5d6; // char : 1
		constexpr auto bUseBoundsFromMasterPoseComponent = 0x5d6; // char : 1
		constexpr auto bForceWireframe = 0x5d6; // char : 1
		constexpr auto bDisplayBones = 0x5d6; // char : 1
		constexpr auto bDisableMorphTarget = 0x5d6; // char : 1
		constexpr auto bHideSkin = 0x5d6; // char : 1
		constexpr auto bPerBoneMotionBlur = 0x5d7; // char : 1
		constexpr auto bComponentUseFixedSkelBounds = 0x5d7; // char : 1
		constexpr auto bConsiderAllBodiesForBounds = 0x5d7; // char : 1
		constexpr auto bSyncAttachParentLOD = 0x5d7; // char : 1
		constexpr auto bCanHighlightSelectedSections = 0x5d7; // char : 1
		constexpr auto bRecentlyRendered = 0x5d7; // char : 1
		constexpr auto bCastCapsuleDirectShadow = 0x5d7; // char : 1
		constexpr auto bCastCapsuleIndirectShadow = 0x5d7; // char : 1
		constexpr auto bCPUSkinning = 0x5d8; // char : 1
		constexpr auto bEnableUpdateRateOptimizations = 0x5d8; // char : 1
		constexpr auto bDisplayDebugUpdateRateOptimizations = 0x5d8; // char : 1
		constexpr auto bRenderStatic = 0x5d8; // char : 1
		constexpr auto bIgnoreMasterPoseComponentLOD = 0x5d8; // char : 1
		constexpr auto bCachedLocalBoundsUpToDate = 0x5d8; // char : 1
		constexpr auto bForceMeshObjectUpdate = 0x5d9; // char : 1
		constexpr auto CapsuleIndirectShadowMinVisibility = 0x5dc; // float
		constexpr auto CachedWorldSpaceBounds = 0x5f0; // FBoxSphereBounds
		constexpr auto CachedWorldToLocalTransform = 0x610; // FMatrix
	}

	namespace n_AKSGameShop {
		constexpr auto OnLoadoutChanged = 0x220; // FMulticastInlineDelegate
		constexpr auto OnAvailable = 0x240; // FMulticastInlineDelegate
		constexpr auto OnUnavailable = 0x250; // FMulticastInlineDelegate
		constexpr auto bAvailable = 0x260; // bool
		constexpr auto bOpen = 0x261; // bool
		constexpr auto OnOpened = 0x268; // FMulticastInlineDelegate
		constexpr auto OnClosed = 0x278; // FMulticastInlineDelegate
		constexpr auto PurchaseHistory = 0x288; // TArray<UKSGameShopItemComponent*>
	}

	namespace n_ULiveLinkSubjectSettings {
		constexpr auto PreProcessors = 0x28; // TArray<ULiveLinkFramePreProcessor*>
		constexpr auto InterpolationProcessor = 0x38; // ULiveLinkFrameInterpolationProcessor*
		constexpr auto Translators = 0x40; // TArray<ULiveLinkFrameTranslator*>
		constexpr auto Role = 0x50; // ULiveLinkRole*
	}

	namespace n_UWBP_StandardButtonSmall_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto ShowButton = 0x528; // UWidgetAnimation*
		constexpr auto OnClick = 0x530; // UWidgetAnimation*
		constexpr auto Highlight = 0x538; // UWidgetAnimation*
		constexpr auto BtnBkg = 0x540; // UImage*
		constexpr auto BtnBkgHover = 0x548; // UImage*
		constexpr auto BtnBkgRedButton = 0x550; // UImage*
		constexpr auto BtnClickImage = 0x558; // UImage*
		constexpr auto BtnEdge = 0x560; // UImage*
		constexpr auto BtnEdgeHover = 0x568; // UImage*
		constexpr auto BtnFrame = 0x570; // UImage*
		constexpr auto BtnFrameHover = 0x578; // UImage*
		constexpr auto BtnStandardWrapper = 0x580; // UOverlay*
		constexpr auto ButtonText = 0x588; // UTextBlock*
		constexpr auto HitTarget = 0x590; // UButton*
		constexpr auto HoverWrapper = 0x598; // UOverlay*
		constexpr auto KeyPrompt = 0x5a0; // UImage*
		constexpr auto KeyPromptContainer = 0x5a8; // UCanvasPanel*
		constexpr auto SizeWrapper = 0x5b0; // USizeBox*
		constexpr auto OnClicked = 0x5b8; // FMulticastInlineDelegate
		constexpr auto OnHovered = 0x5c8; // FMulticastInlineDelegate
		constexpr auto OnUnhovered = 0x5d8; // FMulticastInlineDelegate
		constexpr auto DefaultButtonText = 0x5e8; // FText
		constexpr auto DefaultWidth = 0x600; // float
		constexpr auto ShowPromptOnFocus = 0x604; // bool
		constexpr auto IsRedButton = 0x605; // bool
		constexpr auto DefaultHeight = 0x608; // float
		constexpr auto ClickSmallBtnSFX = 0x610; // UAkAudioEvent*
		constexpr auto HoverSmallBtnSFX = 0x618; // UAkAudioEvent*
		constexpr auto PromptKey = 0x620; // FKey
		constexpr auto IsConfirm = 0x638; // bool
		constexpr auto IsCancel = 0x639; // bool
	}

	namespace n_UDistributionFloatUniform {
		constexpr auto Min = 0x38; // float
		constexpr auto Max = 0x3c; // float
	}

	namespace n_UKSJsonData {
		constexpr auto UniqueId = 0x28; // FName
		constexpr auto AssociatedLootId = 0x30; // int32_t
		constexpr auto HideIfItemOwned = 0x38; // TArray<int32_t>
		constexpr auto ShowIfItemOwned = 0x48; // TArray<int32_t>
		constexpr auto HideIfOwned = 0x58; // bool
		constexpr auto MinLevel = 0x5c; // int32_t
		constexpr auto MaxLevel = 0x60; // int32_t
		constexpr auto showSteam = 0x78; // bool
		constexpr auto showEpic = 0x79; // bool
		constexpr auto showPS4 = 0x7a; // bool
		constexpr auto showPS5 = 0x7b; // bool
		constexpr auto showXB1 = 0x7c; // bool
		constexpr auto showXSX = 0x7d; // bool
		constexpr auto showNX = 0x7e; // bool
	}

	namespace n_UInterpTrackInstLinearColorProp {
		constexpr auto ResetColor = 0x60; // FLinearColor
	}

	namespace n_USplineMovementComponent {
		constexpr auto bPauseOnImpact = 0xf0; // char : 1
		constexpr auto BehaviourType = 0xf4; // ESplineBehaviourType
		constexpr auto bForceSubStepping = 0xf8; // char : 1
		constexpr auto OnSplineReverse = 0x100; // FMulticastInlineDelegate
		constexpr auto OnSplineStop = 0x110; // FMulticastInlineDelegate
		constexpr auto OnWaitBeginDelegate = 0x120; // FMulticastInlineDelegate
		constexpr auto OnWaitEndDelegate = 0x130; // FMulticastInlineDelegate
		constexpr auto OnResetDelegate = 0x140; // FMulticastInlineDelegate
		constexpr auto MaxSimulationTimeStep = 0x150; // float
		constexpr auto MaxSimulationIterations = 0x154; // int32_t
		constexpr auto Spline = 0x158; // USplineComponent*
		constexpr auto Speed = 0x160; // float
	}

	namespace n_AKSProjectile_Melee {
		constexpr auto ProjectileDamageType = 0x950; // UDamageType*
		constexpr auto HitActors = 0x958; // TArray<AActor*>
	}

	namespace n_UWBP_Graphic_Button_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto hoveranim = 0x528; // UWidgetAnimation*
		constexpr auto Active = 0x530; // UImage*
		constexpr auto button_base = 0x538; // UImage*
		constexpr auto ButtonContent = 0x540; // UNamedSlot*
		constexpr auto HitTarget = 0x548; // UButton*
		constexpr auto Hover = 0x550; // UImage*
		constexpr auto OnGraphicBtnClicked = 0x558; // FMulticastInlineDelegate
		constexpr auto OnGraphicBtnHovered = 0x568; // FMulticastInlineDelegate
		constexpr auto OnGraphicBtnUnhovered = 0x578; // FMulticastInlineDelegate
		constexpr auto NormalButtonImage = 0x588; // UTexture2D*
		constexpr auto NormalButtonTint = 0x590; // FLinearColor
		constexpr auto HoverButtonImage = 0x5a0; // UTexture2D*
		constexpr auto HoverButtonTint = 0x5a8; // FLinearColor
		constexpr auto bIsDisable = 0x5b8; // bool
		constexpr auto bIsActive = 0x5b9; // bool
		constexpr auto ClickGraphicBtnSFX = 0x5c0; // UAkAudioEvent*
		constexpr auto HoverGraphicBtnSFX = 0x5c8; // UAkAudioEvent*
	}

	namespace n_UParticleModuleLight_Seeded {
		constexpr auto RandomSeedInfo = 0x120; // FParticleRandomSeedInfo
	}

	namespace n_UInterpTrackInstDirector {
		constexpr auto OldViewTarget = 0x28; // AActor*
	}

	namespace n_ULightmappedSurfaceCollection {
		constexpr auto SourceModel = 0x28; // UModel*
		constexpr auto Surfaces = 0x30; // TArray<int32_t>
	}

	namespace n_UKSShopSoundLibrary {
		constexpr auto ShopOpen = 0x28; // UAkAudioEvent*
		constexpr auto ShopClose = 0x30; // UAkAudioEvent*
		constexpr auto PurchaseSucceeded = 0x38; // UAkAudioEvent*
		constexpr auto PurchaseFailed = 0x40; // UAkAudioEvent*
	}

	namespace n_AARSharedWorldGameMode {
		constexpr auto BufferSizePerChunk = 0x308; // int32_t
	}

	namespace n_UKSPersistentPlayerData {
		constexpr auto bIsBoundToMinPlayerData = 0x28; // bool
		constexpr auto PlayerState = 0x30; // AKSPlayerState*
		constexpr auto ID = 0x48; // FKSPersistentPlayerId
		constexpr auto TeamNum = 0x58; // int32_t
		constexpr auto PlayerName = 0x60; // FString
		constexpr auto OnMinimumPlayerDataUpdatedDel = 0x70; // FMulticastInlineDelegate
		constexpr auto OnPlayerDataTeamChangedDel = 0x98; // FMulticastInlineDelegate
		constexpr auto bAbandoned = 0xc0; // bool
		constexpr auto OnPersistentPlayerDataAbandonedDel = 0xc8; // FMulticastInlineDelegate
		constexpr auto CachedEliminations = 0xf0; // int32_t
		constexpr auto CachedDowns = 0xf4; // int32_t
		constexpr auto CachedAssists = 0xf8; // int32_t
		constexpr auto CachedDeaths = 0xfc; // int32_t
		constexpr auto CachedRevives = 0x100; // int32_t
		constexpr auto CachedMoney = 0x104; // int32_t
		constexpr auto CachedTotalCashEarned = 0x108; // int32_t
		constexpr auto CachedBounty = 0x10c; // int32_t
		constexpr auto SkinMap = 0x110; // TMap<UKSItem*, UKSItem*>
		constexpr auto ActiveJob = 0x160; // UKSJobItem*
		constexpr auto OnActiveJobMasteryXpChanged = 0x180; // FMulticastInlineDelegate
		constexpr auto ActiveJobMasteryXp = 0x190; // int32_t
		constexpr auto ActiveJobMasteryLevel = 0x194; // int32_t
	}

	namespace n_AMaterialInstanceActor {
		constexpr auto TargetActors = 0x220; // TArray<AActor*>
	}

	namespace n_UKSBTTask_ActivateAbility {
		constexpr auto ActivatedAbility = 0x70; // TSoftObjectPtr<UKSPlayerMod>
	}

	namespace n_UKSReverseTracker {
		constexpr auto PlayerDamageInfo = 0xa0; // TArray<FPlayerDamageInfo>
	}

	namespace n_UKSModInst_ReviveDrone {
		constexpr auto OnReviveDroneAbilityStateChanged = 0x528; // FMulticastInlineDelegate
		constexpr auto KSReviveDroneAbilityState = 0x538; // EKSReviveDroneAbilityState
		constexpr auto ResetToAvailabilityTimerHandle = 0x540; // FTimerHandle
		constexpr auto TimeToResetAvailability = 0x548; // float
		constexpr auto CurrentDrone = 0x54c; // TWeakObjectPtr<AKSAgent_RevivalDrone>
		constexpr auto OnReviveDroneSetTarget = 0x558; // FMulticastInlineDelegate
		constexpr auto DroneTargetCharacter = 0x568; // TWeakObjectPtr<AKSCharacter>
	}

	namespace n_UKSSpawnRule_Vacant {
		constexpr auto OccupiedByPawnScore = 0x40; // float
		constexpr auto RequiresAdjustmentScore = 0x44; // float
	}

	namespace n_UWBP_WeaponHubStatsEntry_C {
		constexpr auto StatBar = 0x520; // UWBP_ItemInfoPanel_StatBar_C*
	}

	namespace n_AKSAimAssistActor {
		constexpr auto TeamNumOverride = 0x230; // int32_t
		constexpr auto AimAssistAnchor = 0x238; // UKSAimAssistAnchorComponent*
		constexpr auto BoneToHitLocationTypeMap = 0x248; // TMap<FName, EHitLocationType>
		constexpr auto bCanBeKilled = 0x298; // bool
		constexpr auto MaxHealth = 0x29c; // float
		constexpr auto bLocallyKilled = 0x2a0; // bool
		constexpr auto HealthInfo = 0x2a4; // FAimAssistActorHealthInfo
	}

	namespace n_AKSEnforcedEquipmentState {
		constexpr auto EnforcedItems = 0x220; // TArray<UKSItem*>
		constexpr auto OnEnforcedItemsUpdated = 0x230; // FMulticastInlineDelegate
	}

	namespace n_AKSWeapon_Targeted {
		constexpr auto DisplayTargetList = 0x6d8; // FMulticastInlineDelegate
		constexpr auto TargetSelectCancelled = 0x6e8; // FMulticastInlineDelegate
		constexpr auto PotentialTargets = 0x6f8; // TArray<AActor*>
		constexpr auto SelectTargetOnRetrieve = 0x708; // bool
		constexpr auto TargetedActor = 0x70c; // TWeakObjectPtr<AActor>
	}

	namespace n_UParticleLODLevel {
		constexpr auto Level = 0x28; // int32_t
		constexpr auto bEnabled = 0x2c; // char : 1
		constexpr auto RequiredModule = 0x30; // UParticleModuleRequired*
		constexpr auto Modules = 0x38; // TArray<UParticleModule*>
		constexpr auto TypeDataModule = 0x48; // UParticleModuleTypeDataBase*
		constexpr auto SpawnModule = 0x50; // UParticleModuleSpawn*
		constexpr auto EventGenerator = 0x58; // UParticleModuleEventGenerator*
		constexpr auto SpawningModules = 0x60; // TArray<UParticleModuleSpawnBase*>
		constexpr auto SpawnModules = 0x70; // TArray<UParticleModule*>
		constexpr auto UpdateModules = 0x80; // TArray<UParticleModule*>
		constexpr auto OrbitModules = 0x90; // TArray<UParticleModuleOrbit*>
		constexpr auto EventReceiverModules = 0xa0; // TArray<UParticleModuleEventReceiverBase*>
		constexpr auto ConvertedModules = 0xb0; // char : 1
		constexpr auto PeakActiveParticles = 0xb4; // int32_t
	}

	namespace n_APrecomputedVisibilityOverrideVolume {
		constexpr auto OverrideVisibleActors = 0x258; // TArray<AActor*>
		constexpr auto OverrideInvisibleActors = 0x268; // TArray<AActor*>
		constexpr auto OverrideInvisibleLevels = 0x278; // TArray<FName>
	}

	namespace n_UMovieSceneNiagaraVectorParameterTrack {
		constexpr auto ChannelsUsed = 0x90; // int32_t
	}

	namespace n_UKSRadialMenuItem {
		constexpr auto RadialMenuItemInstanceClass = 0x258; // TSoftClassPtr<UObject>
		constexpr auto AssetDataTables = 0x280; // TArray<FSoftDataTableInfo>
		constexpr auto JobAllowList = 0x290; // TArray<TSoftObjectPtr<UKSJobItem>>
		constexpr auto GlobalRadialMenuItemCooldownTime = 0x2a0; // float
		constexpr auto InterruptNotifyBehavior = 0x2a4; // ERadialMenuItemInterruptNotifyBehaviorType
		constexpr auto RadialMenuItemIsPlayingTimeout = 0x2a8; // float
		constexpr auto InterruptRules = 0x2ac; // FKSRadialMenuItemInterruptRules
		constexpr auto bLockPawnRotationWhilePlaying = 0x2b0; // bool
		constexpr auto Emotion = 0x2b1; // EKSEmotion
	}

	namespace n_UFileMediaSource {
		constexpr auto FilePath = 0x88; // FString
		constexpr auto PrecacheFile = 0x98; // bool
	}

	namespace n_UParticleModuleColor_Seeded {
		constexpr auto RandomSeedInfo = 0xb0; // FParticleRandomSeedInfo
	}

	namespace n_UBTTask_Wait {
		constexpr auto WaitTime = 0x70; // float
		constexpr auto RandomDeviation = 0x74; // float
	}

	namespace n_UKSOverlayTabHubBase {
		constexpr auto ViewsTable = 0x520; // UDataTable*
		constexpr auto ViewNames = 0x528; // TArray<FName>
		constexpr auto CurrentViewName = 0x538; // FName
		constexpr auto MyViewRouteName = 0x590; // FName
	}

	namespace n_USpacer {
		constexpr auto Size = 0x110; // FVector2D
	}

	namespace n_UComboBoxWidgetStyle {
		constexpr auto ComboBoxStyle = 0x30; // FComboBoxStyle
	}

	namespace n_USpectatorBeaconState {
		constexpr auto SessionName = 0x28; // FName
		constexpr auto NumConsumedReservations = 0x30; // int32_t
		constexpr auto MaxReservations = 0x34; // int32_t
		constexpr auto bRestrictCrossConsole = 0x38; // bool
		constexpr auto Reservations = 0x40; // TArray<FSpectatorReservation>
	}

	namespace n_UNetDriver {
		constexpr auto NetConnectionClassName = 0x30; // FString
		constexpr auto ReplicationDriverClassName = 0x40; // FString
		constexpr auto MaxDownloadSize = 0x50; // int32_t
		constexpr auto bClampListenServerTickRate = 0x54; // char : 1
		constexpr auto NetServerMaxTickRate = 0x58; // int32_t
		constexpr auto MaxNetTickRate = 0x5c; // int32_t
		constexpr auto MaxInternetClientRate = 0x60; // int32_t
		constexpr auto MaxClientRate = 0x64; // int32_t
		constexpr auto ServerTravelPause = 0x68; // float
		constexpr auto SpawnPrioritySeconds = 0x6c; // float
		constexpr auto RelevantTimeout = 0x70; // float
		constexpr auto KeepAliveTime = 0x74; // float
		constexpr auto HandshakeTimeout = 0x78; // float
		constexpr auto InitialConnectTimeout = 0x7c; // float
		constexpr auto ConnectionTimeout = 0x80; // float
		constexpr auto TimeoutMultiplierForUnoptimizedBuilds = 0x84; // float
		constexpr auto bNoTimeouts = 0x88; // bool
		constexpr auto bNeverApplyNetworkEmulationSettings = 0x89; // bool
		constexpr auto ServerConnection = 0x90; // UNetConnection*
		constexpr auto ClientConnections = 0x98; // TArray<UNetConnection*>
		constexpr auto RecentlyDisconnectedTrackingTime = 0x108; // int32_t
		constexpr auto World = 0x148; // UWorld*
		constexpr auto WorldPackage = 0x150; // UPackage*
		constexpr auto NetConnectionClass = 0x178; // UObject*
		constexpr auto ReplicationDriverClass = 0x180; // UObject*
		constexpr auto NetDriverName = 0x198; // FName
		constexpr auto ChannelDefinitions = 0x1a0; // TArray<FChannelDefinition>
		constexpr auto ChannelDefinitionMap = 0x1b0; // TMap<FName, FChannelDefinition>
		constexpr auto ThrottleSpawnDefinitions = 0x200; // TArray<FNetThrottleSpawnDefinition>
		constexpr auto ThrottleSpawnsRemaining = 0x210; // TArray<int32_t>
		constexpr auto ThrottleSpawnPausedFrameNumber = 0x220; // uint32_t
		constexpr auto ActorChannelPool = 0x228; // TArray<UChannel*>
		constexpr auto Time = 0x240; // float
		constexpr auto ReplicationDriver = 0x718; // UReplicationDriver*
	}

	namespace n_UMediaComponent {
		constexpr auto MediaTexture = 0xb0; // UMediaTexture*
		constexpr auto MediaPlayer = 0xb8; // UMediaPlayer*
	}

	namespace n_UANotifyState_DropMagazine_C {
		constexpr auto Is DodgeRollReload = 0x30; // bool
	}

	namespace n_UANotifyState_MeleeCombo_C {
		constexpr auto ComboTarget = 0x30; // FName
		constexpr auto IsQuickMelee = 0x38; // bool
	}

	namespace n_UGamepadPromptBasic_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto ActionText = 0x240; // UTextBlock*
		constexpr auto ButtonIcon = 0x248; // UWBP_KeyCallout_C*
		constexpr auto Data = 0x250; // FButtonPromptData
		constexpr auto IsSet = 0x280; // bool
	}

	namespace n_ULightmassPrimitiveSettingsObject {
		constexpr auto LightmassSettings = 0x28; // FLightmassPrimitiveSettings
	}

	namespace n_UMaterialExpressionShadowReplace {
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto Shadow = 0x54; // FExpressionInput
	}

	namespace n_UKSEditableTextBox {
		constexpr auto OnKeyDown = 0xa30; // FDelegate
	}

	namespace n_UMaterialShaderQualitySettings {
		constexpr auto ForwardSettingMap = 0x28; // TMap<FName, UShaderPlatformQualitySettings*>
	}

	namespace n_UKSBanner {
		constexpr auto SmallBannerIcon = 0x250; // TSoftObjectPtr<UTexture2D>
		constexpr auto SmallBannerIconInfo = 0x278; // UIconInfo*
		constexpr auto LargeBannerIcon = 0x280; // TSoftObjectPtr<UTexture2D>
		constexpr auto LargeBannerIconInfo = 0x2a8; // UIconInfo*
	}

	namespace n_ALobbyMainCharacter_C {
		constexpr auto UberGraphFrame = 0x3e10; // FPointerToUberGraphFrame
		constexpr auto LobbyProp01_Timeline__Direction_311B7F8B46533A11B70CFAA92E9DA987 = 0x3e18; // ETimelineDirection
		constexpr auto LobbyProp01_Timeline = 0x3e20; // UTimelineComponent*
		constexpr auto LobbyWeapon02_Timeline__Direction_6E3E791441C09FAF955C7099C1934001 = 0x3e28; // ETimelineDirection
		constexpr auto LobbyWeapon02_Timeline = 0x3e30; // UTimelineComponent*
		constexpr auto LobbyWeapon01_Timeline__Direction_A9FF0C36405CB79CE4A5609C33E7F935 = 0x3e38; // ETimelineDirection
		constexpr auto LobbyWeapon01_Timeline = 0x3e40; // UTimelineComponent*
		constexpr auto LobbyFidgetKeywordArray = 0x3e48; // TArray<FName>
		constexpr auto Transform Reset = 0x3e60; // FTransform
		constexpr auto Lobby Anim total duration = 0x3e90; // float
		constexpr auto Lobby Anim timer = 0x3e98; // FTimerHandle
		constexpr auto Loop montage = 0x3ea0; // bool
		constexpr auto Current Persistent Material Override IDs = 0x3ea8; // TArray<int32_t>
		constexpr auto Lobby Character Animation Pose = 0x3eb8; // EKSLobbyCharacterAnimationPose
		constexpr auto Lobby Anim Starting Time = 0x3ebc; // float
		constexpr auto HasInitializedNameplate = 0x3ec0; // bool
		constexpr auto Emote = 0x3ec1; // bool
		constexpr auto Emote Queued = 0x3ec2; // bool
	}

	namespace n_UARPin {
		constexpr auto TrackedGeometry = 0x28; // UARTrackedGeometry*
		constexpr auto PinnedComponent = 0x30; // USceneComponent*
		constexpr auto LocalToTrackingTransform = 0x40; // FTransform
		constexpr auto LocalToAlignedTrackingTransform = 0x70; // FTransform
		constexpr auto TrackingState = 0xa0; // EARTrackingState
		constexpr auto OnARTrackingStateChanged = 0xc0; // FMulticastInlineDelegate
		constexpr auto OnARTransformUpdated = 0xd0; // FMulticastInlineDelegate
	}

	namespace n_ULandscapeLayerInfoObject {
		constexpr auto LayerName = 0x28; // FName
		constexpr auto PhysMaterial = 0x30; // UPhysicalMaterial*
		constexpr auto Hardness = 0x38; // float
		constexpr auto LayerUsageDebugColor = 0x3c; // FLinearColor
	}

	namespace n_UAnimCompress_RemoveEverySecondKey {
		constexpr auto MinKeys = 0x40; // int32_t
		constexpr auto bStartAtSecondKey = 0x44; // char : 1
	}

	namespace n_UKSPunishmentRuleComponent {
		constexpr auto PunishmentConfigClass = 0xb0; // UKSPunishmentConfig*
		constexpr auto PunishmentConfig = 0xb8; // UKSPunishmentConfig*
		constexpr auto UseDeserterPenalty = 0xc0; // bool
		constexpr auto PlayerPunishmentTrackers = 0xc8; // TMap<int64_t, FPlayerPunishmentTracker>
	}

	namespace n_UAkLinuxInitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettingsWithSampleRate
		constexpr auto CommunicationSettings = 0x90; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xb8; // FAkAdvancedInitializationSettingsWithMultiCoreRendering
	}

	namespace n_UParticleModuleAccelerationBase {
		constexpr auto bAlwaysInWorldSpace = 0x30; // char : 1
	}

	namespace n_UParticleModuleAccelerationDragScaleOverLife {
		constexpr auto DragScale = 0x38; // UDistributionFloat*
		constexpr auto DragScaleRaw = 0x40; // FRawDistributionFloat
	}

	namespace n_UKSApparelAsset_SkinnedMesh {
		constexpr auto MeshClass = 0x2e0; // TSoftClassPtr<UObject>
		constexpr auto AttachPointName = 0x308; // FName
		constexpr auto CollisionProfile = 0x310; // FName
		constexpr auto bSlaveToCharacterMesh = 0x318; // bool
		constexpr auto bSimulatePhysics = 0x319; // bool
		constexpr auto ApparelObjectsToListenTo = 0x320; // TArray<FName>
	}

	namespace n_UKSActivityRewardCondition_PartySize {
		constexpr auto MinPartySize = 0x30; // int32_t
		constexpr auto MaxPartySize = 0x34; // int32_t
	}

	namespace n_UKSEnvQueryContext_Character {
		constexpr auto BlackboardKeyName = 0x28; // FName
	}

	namespace n_UKSSpawnSelectorComponent {
		constexpr auto BaseRoot = 0xb0; // FKSSpawnSelectorTreeNode
		constexpr auto SideRoot = 0xd8; // FKSSpawnSelectorTreeNode
		constexpr auto FlipRoot = 0x100; // FKSSpawnSelectorTreeNode
		constexpr auto GameRoot = 0x128; // FKSSpawnSelectorTreeNode
		constexpr auto PlayerStarts = 0x150; // TArray<APlayerStart*>
		constexpr auto FriendlyName = 0x160; // FName
		constexpr auto bCanEverFlip = 0x178; // bool
		constexpr auto InvalidFlipPercent = 0x17c; // float
		constexpr auto bFlipped = 0x180; // bool
	}

	namespace n_AKSWeapon_ReviveDroneDirect {
		constexpr auto OnDroneReviveBegin = 0x6f0; // FMulticastInlineDelegate
		constexpr auto OnDroneReviveComplete = 0x700; // FMulticastInlineDelegate
		constexpr auto OnDroneAbort = 0x710; // FMulticastInlineDelegate
		constexpr auto OnDroneTargetRevive = 0x720; // FMulticastInlineDelegate
		constexpr auto OnDroneTargetDied = 0x730; // FMulticastInlineDelegate
		constexpr auto OnDroneDestroyed = 0x740; // FMulticastInlineDelegate
		constexpr auto OnDroneSpawned = 0x750; // FMulticastInlineDelegate
		constexpr auto DroneClass = 0x760; // AKSAgent_RevivalDrone*
		constexpr auto DroneActor = 0x768; // TWeakObjectPtr<AKSAgent_RevivalDrone>
	}

	namespace n_UKSEquipAllData {
		constexpr auto CosmeticItem = 0x28; // UKSItem*
		constexpr auto HeaderText = 0x30; // FText
		constexpr auto DescText = 0x48; // FText
		constexpr auto EquipAllCompletedCallback = 0x60; // FMulticastInlineDelegate
		constexpr auto EquipType = 0x70; // EEquipAllType
		constexpr auto SlotType = 0x74; // int32_t
		constexpr auto SlotPosition = 0x78; // int32_t
		constexpr auto WeaponToEquipTo = 0x80; // UKSWeaponAsset*
	}

	namespace n_UGizmoBoxComponent {
		constexpr auto Origin = 0x450; // FVector
		constexpr auto Rotation = 0x460; // FQuat
		constexpr auto Dimensions = 0x470; // FVector
		constexpr auto LineThickness = 0x47c; // float
		constexpr auto bRemoveHiddenLines = 0x480; // bool
		constexpr auto bEnableAxisFlip = 0x481; // bool
	}

	namespace n_UKSStoreItemWithWeaponData {
		constexpr auto AssociatedWeaponAsset = 0x58; // UKSWeaponAsset*
	}

	namespace n_UMovieSceneNiagaraParameterTrack {
		constexpr auto Parameter = 0x68; // FNiagaraVariable
	}

	namespace n_UDatasmithSceneComponentTemplate {
		constexpr auto RelativeTransform = 0x30; // FTransform
		constexpr auto Mobility = 0x60; // EComponentMobility
		constexpr auto AttachParent = 0x68; // TSoftObjectPtr<USceneComponent>
		constexpr auto Tags = 0x90; // TSet<FName>
	}

	namespace n_UKSHeatSourceComponent {
		constexpr auto OnTemperatureChanged = 0xb0; // FMulticastInlineDelegate
		constexpr auto bSkipCosmeticIfOwnerIsLocallyViewed = 0xc0; // bool
		constexpr auto bOnlySkipCosmeticForOnAndViewedState = 0xc1; // bool
		constexpr auto Temperature = 0xc4; // float
		constexpr auto TemperatureScalarModifier = 0xc8; // float
		constexpr auto bDisableTickWhenTemperatureTransitionCompletes = 0xcc; // bool
		constexpr auto TransitionTargetTemp = 0xd0; // float
		constexpr auto TransitionRate = 0xd4; // float
		constexpr auto LastKnownViewModeState = 0xd8; // EModViewModeState
		constexpr auto WithoutHeatVisibilityBlockers = 0xe0; // TArray<UPrimitiveComponent*>
		constexpr auto HeatOnlyVisibilityBlockers = 0xf0; // TArray<UPrimitiveComponent*>
	}

	namespace n_UKSJobSelectorWidget {
		constexpr auto bAutoBindJobSelector = 0x520; // bool
		constexpr auto bWaitForPlayerToBecomeRelevant = 0x521; // bool
		constexpr auto bBindToTasksChangedEvent = 0x522; // bool
		constexpr auto bBindToPendingTasksChangedEvent = 0x523; // bool
		constexpr auto bBindToPersonalTaskChangedEvent = 0x524; // bool
		constexpr auto bBindToChoicesChangedEvent = 0x525; // bool
		constexpr auto bBindToTaskCompletedEvent = 0x526; // bool
		constexpr auto bBindToAllPersonalTasksCompletedEvent = 0x527; // bool
		constexpr auto bBindToEndJobSelectionEvent = 0x528; // bool
		constexpr auto JobSelector = 0x52c; // TWeakObjectPtr<AKSJobSelector>
	}

	namespace n_AKSDropshipBase {
		constexpr auto DefaultSceneRoot = 0x220; // USceneComponent*
		constexpr auto SharedRoot = 0x228; // USceneComponent*
		constexpr auto PlaneBase = 0x230; // UStaticMeshComponent*
		constexpr auto EnvironmentStaticMesh = 0x238; // UChildActorComponent*
		constexpr auto NoFireZone = 0x240; // UChildActorComponent*
		constexpr auto OutOfBoundsVolume = 0x248; // UChildActorComponent*
		constexpr auto DoorCollider = 0x250; // UStaticMeshComponent*
		constexpr auto DropshipInteriorRoot = 0x258; // USceneComponent*
		constexpr auto DropshipInteriorGeometry = 0x260; // UChildActorComponent*
		constexpr auto DropshipInteriorLights = 0x268; // UChildActorComponent*
		constexpr auto DropshipExteriorRoot = 0x270; // USceneComponent*
		constexpr auto DropshipExteriorGeometry = 0x278; // UChildActorComponent*
		constexpr auto FreeFallHeightMarker = 0x280; // UChildActorComponent*
		constexpr auto PlayerShopZone = 0x288; // UChildActorComponent*
		constexpr auto DropshipExitZone = 0x290; // UChildActorComponent*
		constexpr auto DropshipModZone = 0x298; // UChildActorComponent*
		constexpr auto KSPlayerStart_01 = 0x2a0; // UChildActorComponent*
		constexpr auto KSPlayerStart_02 = 0x2a8; // UChildActorComponent*
		constexpr auto KSPlayerStart_03 = 0x2b0; // UChildActorComponent*
		constexpr auto KSPlayerStart_04 = 0x2b8; // UChildActorComponent*
		constexpr auto KSPlayerStart_05 = 0x2c0; // UChildActorComponent*
		constexpr auto KSPlayerStart_06 = 0x2c8; // UChildActorComponent*
		constexpr auto KSPlayerStart_07 = 0x2d0; // UChildActorComponent*
		constexpr auto KSPlayerStart_08 = 0x2d8; // UChildActorComponent*
		constexpr auto BotFactory = 0x2e0; // UChildActorComponent*
		constexpr auto PlayerDetectionVolume = 0x2e8; // UBoxComponent*
		constexpr auto KSDistanceOptimization = 0x2f0; // UKSDistanceOptimizationComponent*
		constexpr auto DropshipSideNumber = 0x2f8; // int32_t
		constexpr auto bOutOfBoundsEnabled = 0x2fc; // bool
		constexpr auto OutOfBoundsMaxScale = 0x300; // float
		constexpr auto OutOfBoundsInitialScale = 0x304; // float
		constexpr auto OutOfBoundsStartSeconds = 0x308; // float
		constexpr auto bDoorOpen = 0x30c; // bool
		constexpr auto bCloaked = 0x30d; // bool
		constexpr auto InitialPlayerStarts = 0x310; // TArray<APlayerStart*>
		constexpr auto DropshipInteriorVar = 0x320; // AKSDropshipInterior*
		constexpr auto DropshipInteriorLightsVar = 0x328; // AKSDropshipLights*
		constexpr auto DropshipExteriorVar = 0x330; // AKSDropshipExterior*
		constexpr auto bShouldReverseWayPointSetDirection = 0x358; // bool
		constexpr auto WayPointSet = 0x360; // AKSWayPointSet*
		constexpr auto BotSpawnCollection = 0x368; // UKSBotDefinitionCollection*
	}

	namespace n_UMovieScenePrimitiveMaterialSection {
		constexpr auto MaterialChannel = 0xe0; // FMovieSceneObjectPathChannel
	}

	namespace n_UCensorTable {
		constexpr auto CensorTablePath = 0x28; // FSoftObjectPath
	}

	namespace n_UInterpTrackInstToggle {
		constexpr auto Action = 0x28; // ETrackToggleAction
		constexpr auto LastUpdatePosition = 0x2c; // float
		constexpr auto bSavedActiveState = 0x30; // char : 1
	}

	namespace n_UKSGameShopItemComponent_Job {
		constexpr auto GameShopJobItemType = 0x130; // EKSGameShopJobItemType
		constexpr auto JobItem = 0x138; // UKSJobItem*
	}

	namespace n_AKSShield {
		constexpr auto OnShieldDamagedDel = 0x220; // FMulticastInlineDelegate
		constexpr auto bShieldEnabled = 0x248; // bool
		constexpr auto Health = 0x24c; // float
	}

	namespace n_UKSTitle {
		constexpr auto TitleText = 0x250; // FText
	}

	namespace n_UGizmoTransformChangeStateTarget {
		constexpr auto TransactionManager = 0x50; // TScriptInterface<IToolContextTransactionProvider>
	}

	namespace n_UParticleModuleCameraOffset {
		constexpr auto CameraOffset = 0x30; // FRawDistributionFloat
		constexpr auto bSpawnTimeOnly = 0x60; // char : 1
		constexpr auto UpdateMethod = 0x64; // EParticleCameraOffsetUpdateMethod
	}

	namespace n_UAkSettingsPerUser {
		constexpr auto WwiseWindowsInstallationPath = 0x28; // FDirectoryPath
		constexpr auto WwiseMacInstallationPath = 0x38; // FFilePath
		constexpr auto WaapiIPAddress = 0x48; // FString
		constexpr auto WaapiPort = 0x58; // uint32_t
		constexpr auto AutoSyncSelection = 0x5c; // bool
		constexpr auto SuppressWwiseProjectPathWarnings = 0x5d; // bool
		constexpr auto SoundDataGenerationSkipLanguage = 0x5e; // bool
	}

	namespace n_ANavMeshBoundsVolume {
		constexpr auto SupportedAgents = 0x258; // FNavAgentSelector
	}

	namespace n_AKSEmoteMusicManager {
		constexpr auto MaxAudibleEmoteDistance = 0x248; // float
	}

	namespace n_UKSTeamWidget {
		constexpr auto bTrackPersistentPlayerData = 0x520; // bool
		constexpr auto bTrackRelevantPlayerStates = 0x521; // bool
		constexpr auto TeamState = 0x524; // TWeakObjectPtr<AKSTeamState>
	}

	namespace n_UARTrackedQRCode {
		constexpr auto QRCode = 0xf8; // FString
		constexpr auto Version = 0x108; // int32_t
	}

	namespace n_UWBP_BattlePassUpsellScreen_C {
		constexpr auto UberGraphFrame = 0x5b0; // FPointerToUberGraphFrame
		constexpr auto confirmation_transition = 0x5b8; // UWidgetAnimation*
		constexpr auto screen_transition = 0x5c0; // UWidgetAnimation*
		constexpr auto SheenLeft = 0x5c8; // UImage*
		constexpr auto SheenRight = 0x5d0; // UImage*
	}

	namespace n_UMaterialExpressionSkyAtmosphereLightDirection {
		constexpr auto LightIndex = 0x40; // int32_t
	}

	namespace n_UBTTask_FinishWithResult {
		constexpr auto Result = 0x70; // EBTNodeResult
	}

	namespace n_UAkSlider {
		constexpr auto Value = 0x110; // float
		constexpr auto ValueDelegate = 0x114; // FDelegate
		constexpr auto WidgetStyle = 0x128; // FSliderStyle
		constexpr auto Orientation = 0x468; // EOrientation
		constexpr auto SliderBarColor = 0x46c; // FLinearColor
		constexpr auto SliderHandleColor = 0x47c; // FLinearColor
		constexpr auto IndentHandle = 0x48c; // bool
		constexpr auto Locked = 0x48d; // bool
		constexpr auto StepSize = 0x490; // float
		constexpr auto IsFocusable = 0x494; // bool
		constexpr auto ThePropertyToControl = 0x498; // FAkPropertyToControl
		constexpr auto ItemToControl = 0x4a8; // FAkWwiseItemToControl
		constexpr auto OnValueChanged = 0x4e8; // FMulticastInlineDelegate
		constexpr auto OnItemDropped = 0x4f8; // FMulticastInlineDelegate
		constexpr auto OnPropertyDropped = 0x508; // FMulticastInlineDelegate
	}

	namespace n_UPGame_LandingPanelJSONHandler {
		constexpr auto OnHandlerObjectReady = 0x28; // FMulticastInlineDelegate
		constexpr auto OnJsonDownloaded = 0x38; // FMulticastInlineDelegate
		constexpr auto OnJsonReady = 0x48; // FMulticastInlineDelegate
		constexpr auto OnImagesDownloaded = 0x58; // FMulticastInlineDelegate
		constexpr auto mapFilePathToTexture = 0x120; // TMap<FString, UTexture2DDynamic*>
	}

	namespace n_UAkGameObject {
		constexpr auto AkAudioEvent = 0x208; // UAkAudioEvent*
		constexpr auto EventName = 0x210; // FString
	}

	namespace n_AKSDropshipExterior {
		constexpr auto DefaultSceneRoot = 0x220; // USceneComponent*
		constexpr auto SharedRoot = 0x228; // USceneComponent*
		constexpr auto StartingDoorLocation = 0x230; // FVector
		constexpr auto StartingMeshLocation1 = 0x23c; // FVector
		constexpr auto StartingMeshLocation2 = 0x248; // FVector
		constexpr auto StartingDoorRotator = 0x254; // FRotator
		constexpr auto StartingMeshRotator1 = 0x260; // FRotator
		constexpr auto StartingMeshRotator2 = 0x26c; // FRotator
	}

	namespace n_UPlayerHealthMeterPadding_C {
		constexpr auto PaddingContainer = 0x238; // UHorizontalBox*
	}

	namespace n_UPlanarReflectionComponent {
		constexpr auto PreviewBox = 0x2a0; // UBoxComponent*
		constexpr auto NormalDistortionStrength = 0x2a8; // float
		constexpr auto PrefilterRoughness = 0x2ac; // float
		constexpr auto PrefilterRoughnessDistance = 0x2b0; // float
		constexpr auto ScreenPercentage = 0x2b4; // int32_t
		constexpr auto ExtraFOV = 0x2b8; // float
		constexpr auto DistanceFromPlaneFadeStart = 0x2bc; // float
		constexpr auto DistanceFromPlaneFadeEnd = 0x2c0; // float
		constexpr auto DistanceFromPlaneFadeoutStart = 0x2c4; // float
		constexpr auto DistanceFromPlaneFadeoutEnd = 0x2c8; // float
		constexpr auto AngleFromPlaneFadeStart = 0x2cc; // float
		constexpr auto AngleFromPlaneFadeEnd = 0x2d0; // float
		constexpr auto bShowPreviewPlane = 0x2d4; // bool
		constexpr auto bRenderSceneTwoSided = 0x2d5; // bool
	}

	namespace n_USkeletalMeshSocket {
		constexpr auto SocketName = 0x28; // FName
		constexpr auto BoneName = 0x30; // FName
		constexpr auto RelativeLocation = 0x38; // FVector
		constexpr auto RelativeRotation = 0x44; // FRotator
		constexpr auto RelativeScale = 0x50; // FVector
		constexpr auto bForceAlwaysAnimated = 0x5c; // bool
	}

	namespace n_USubsurfaceProfile {
		constexpr auto Settings = 0x28; // FSubsurfaceProfileStruct
	}

	namespace n_UKSStoreSectionItem {
		constexpr auto StorePanelItems = 0x28; // TArray<UKSStorePanelItem*>
		constexpr auto column = 0x38; // int32_t
		constexpr auto Row = 0x3c; // int32_t
		constexpr auto WidgetType = 0x40; // EStoreItemWidgetType
		constexpr auto CurrentlyViewedItem = 0x48; // UKSStorePanelItem*
	}

	namespace n_UWBP_ChallengeEntry_Weekly_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto background = 0x240; // UImage*
		constexpr auto ChallengeDescription = 0x248; // UTextBlock*
		constexpr auto ChallengeProgressText = 0x250; // UTextBlock*
		constexpr auto CompletedText = 0x258; // UTextBlock*
		constexpr auto Header = 0x260; // UImage*
		constexpr auto ProgressBar = 0x268; // UWBP_ProgressEarnedBar_C*
		constexpr auto ProgressTextSwitcher = 0x270; // UWidgetSwitcher*
		constexpr auto RewardBadge_EXAMPLE = 0x278; // UWBP_Challenge_Rewards_Badge_C*
		constexpr auto RewardBadge_EXAMPLE_01 = 0x280; // UWBP_Challenge_Rewards_Badge_C*
		constexpr auto RewardsContainer = 0x288; // UHorizontalBox*
		constexpr auto TimeRemaining_2 = 0x290; // UTextBlock*
		constexpr auto TimeRemainingLabel = 0x298; // UTextBlock*
		constexpr auto TimeRemainingWrapper = 0x2a0; // UHorizontalBox*
		constexpr auto IsComplete = 0x2a8; // bool
	}

	namespace n_UKSPlayerMod_VaultHeight {
		constexpr auto VaultHeight = 0x330; // float
		constexpr auto VaultName = 0x334; // FName
	}

	namespace n_UWBP_CosmeticItemTagEntry_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto Image_176 = 0x528; // UImage*
		constexpr auto Text = 0x530; // UTextBlock*
		constexpr auto TagText = 0x538; // FText
	}

	namespace n_UWBP_PlayerProfileScreen_AccountLevel_C {
		constexpr auto background = 0x238; // UImage*
		constexpr auto DiamondProgress = 0x240; // UImage*
		constexpr auto Image_498 = 0x248; // UImage*
		constexpr auto TextBlock_92 = 0x250; // UTextBlock*
		constexpr auto TxtCurrentXP = 0x258; // UTextBlock*
		constexpr auto TxtNoRecentProgress = 0x260; // UTextBlock*
		constexpr auto TxtPlayerLevel = 0x268; // UTextBlock*
		constexpr auto TxtTargetXp = 0x270; // UTextBlock*
		constexpr auto WidgetSwitcher_1 = 0x278; // UWidgetSwitcher*
		constexpr auto OnActivityInstanceChanged = 0x280; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionLogarithm10 {
		constexpr auto X = 0x40; // FExpressionInput
	}

	namespace n_ULiveLinkTransformController {
		constexpr auto TransformData = 0x30; // FLiveLinkTransformControllerData
	}

	namespace n_UViewport {
		constexpr auto BackgroundColor = 0x128; // FLinearColor
	}

	namespace n_UEnvQueryTest_Pathfinding {
		constexpr auto TestMode = 0x1f8; // EEnvTestPathfinding
		constexpr auto Context = 0x200; // UEnvQueryContext*
		constexpr auto PathFromContext = 0x208; // FAIDataProviderBoolValue
		constexpr auto SkipUnreachable = 0x240; // FAIDataProviderBoolValue
		constexpr auto FilterClass = 0x278; // UNavigationQueryFilter*
	}

	namespace n_UMaterialExpressionLogarithm2 {
		constexpr auto X = 0x40; // FExpressionInput
	}

	namespace n_UKSAcquisition {
		constexpr auto AcquisitionType = 0x28; // EKSAcquisitionType
		constexpr auto AcquisitionItems = 0x30; // TArray<UAcquisitionItemData*>
		constexpr auto DisplayedJob = 0x40; // UKSJobItem*
	}

	namespace n_UKSCharacterSkeletalMeshComponent {
		constexpr auto ChildPhysicsAssetMap = 0xda8; // TMap<FName, UPhysicsAsset*>
		constexpr auto ChildPhysicsAssetKeywords = 0xdf8; // TArray<FKSChildPhysicsAssetKeywords>
		constexpr auto bBasePhysicsAssetChanged = 0xe08; // bool
		constexpr auto LastBasePhysAssetFromMesh = 0xe0c; // TWeakObjectPtr<UPhysicsAsset>
		constexpr auto bApplySkeletalLengthParameterToMaterials = 0xe14; // bool
		constexpr auto SkeletalMeshLengthParameterName = 0xe18; // FName
		constexpr auto bApplySkeletalWidthParameterToMaterials = 0xe20; // bool
		constexpr auto SkeletalMeshWidthParameterName = 0xe24; // FName
		constexpr auto bApplySkeletalHeightParameterToMaterials = 0xe2c; // bool
		constexpr auto SkeletalMeshHeightParameterName = 0xe30; // FName
		constexpr auto PreRegistrationChildCollisionCache = 0xe38; // TArray<FChildBodyCollisionProfileCache>
	}

	namespace n_AKSWeapon_Shotgun {
		constexpr auto CachedPelletSpread = 0x800; // TArray<FAimData>
	}

	namespace n_ALODActor {
		constexpr auto StaticMeshComponent = 0x220; // UStaticMeshComponent*
		constexpr auto ImpostersStaticMeshComponents = 0x228; // TMap<UMaterialInterface*, UInstancedStaticMeshComponent*>
		constexpr auto Proxy = 0x278; // UHLODProxy*
		constexpr auto Key = 0x280; // FName
		constexpr auto LODDrawDistance = 0x288; // float
		constexpr auto LODLevel = 0x28c; // int32_t
		constexpr auto SubActors = 0x290; // TArray<AActor*>
		constexpr auto CachedNumHLODLevels = 0x2a0; // char
	}

	namespace n_UDefaultLevelSequenceInstanceData {
		constexpr auto TransformOriginActor = 0x30; // AActor*
		constexpr auto TransformOrigin = 0x40; // FTransform
	}

	namespace n_ULayer {
		constexpr auto LayerName = 0x28; // FName
		constexpr auto bIsVisible = 0x30; // char : 1
		constexpr auto ActorStats = 0x38; // TArray<FLayerActorStats>
	}

	namespace n_UARTrackedGeometry {
		constexpr auto UniqueId = 0x28; // FGuid
		constexpr auto LocalToTrackingTransform = 0x40; // FTransform
		constexpr auto LocalToAlignedTrackingTransform = 0x70; // FTransform
		constexpr auto TrackingState = 0xa0; // EARTrackingState
		constexpr auto UnderlyingMesh = 0xb0; // UMRMeshComponent*
		constexpr auto ObjectClassification = 0xb8; // EARObjectClassification
		constexpr auto LastUpdateFrameNumber = 0xd0; // int32_t
		constexpr auto DebugName = 0xe0; // FName
	}

	namespace n_UImageSequenceProtocol_EXR {
		constexpr auto bCompressed = 0xd8; // bool
		constexpr auto CaptureGamut = 0xd9; // EHDRCaptureGamut
	}

	namespace n_UMaterialExpressionMax {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_ADebugCameraController {
		constexpr auto bShowSelectedInfo = 0x588; // char : 1
		constexpr auto bIsFrozenRendering = 0x588; // char : 1
		constexpr auto bIsOrbitingSelectedActor = 0x588; // char : 1
		constexpr auto bOrbitPivotUseCenter = 0x588; // char : 1
		constexpr auto bEnableBufferVisualization = 0x588; // char : 1
		constexpr auto bEnableBufferVisualizationFullMode = 0x588; // char : 1
		constexpr auto bIsBufferVisualizationInputSetup = 0x588; // char : 1
		constexpr auto bLastDisplayEnabled = 0x588; // char : 1
		constexpr auto DrawFrustum = 0x590; // UDrawFrustumComponent*
		constexpr auto SelectedActor = 0x598; // AActor*
		constexpr auto SelectedComponent = 0x5a0; // UPrimitiveComponent*
		constexpr auto SelectedHitPoint = 0x5a8; // FHitResult
		constexpr auto OriginalControllerRef = 0x630; // APlayerController*
		constexpr auto OriginalPlayer = 0x638; // UPlayer*
		constexpr auto SpeedScale = 0x640; // float
		constexpr auto InitialMaxSpeed = 0x644; // float
		constexpr auto InitialAccel = 0x648; // float
		constexpr auto InitialDecel = 0x64c; // float
	}

	namespace n_UKSInteractionState {
		constexpr auto Result = 0x28; // EKSInteractionResult
	}

	namespace n_UKSPlayerMod_AdsMoveSpeed {
		constexpr auto AdsMoveSpeedMultiplier = 0x330; // float
	}

	namespace n_ULiveLinkTransformAxisSwitchPreProcessor {
		constexpr auto OrientationAxisX = 0x28; // ELiveLinkAxis
		constexpr auto OrientationAxisY = 0x29; // ELiveLinkAxis
		constexpr auto OrientationAxisZ = 0x2a; // ELiveLinkAxis
		constexpr auto TranslationAxisX = 0x2b; // ELiveLinkAxis
		constexpr auto TranslationAxisY = 0x2c; // ELiveLinkAxis
		constexpr auto TranslationAxisZ = 0x2d; // ELiveLinkAxis
	}

	namespace n_UKSBTTask_MoveToward {
		constexpr auto SpeedMultiplier = 0xb8; // float
		constexpr auto bSprint = 0xbc; // bool
		constexpr auto MoveAction = 0xc0; // UKSBTAction*
		constexpr auto SprintAction = 0xc8; // UKSBTAction*
	}

	namespace n_UAnimSharingStateInstance {
		constexpr auto AnimationToPlay = 0x268; // UAnimSequence*
		constexpr auto PermutationTimeOffset = 0x270; // float
		constexpr auto PlayRate = 0x274; // float
		constexpr auto bStateBool = 0x278; // bool
		constexpr auto Instance = 0x280; // UAnimSharingInstance*
	}

	namespace n_UMaterialExpressionMakeMaterialAttributes {
		constexpr auto BaseColor = 0x40; // FExpressionInput
		constexpr auto Metallic = 0x54; // FExpressionInput
		constexpr auto Specular = 0x68; // FExpressionInput
		constexpr auto Roughness = 0x7c; // FExpressionInput
		constexpr auto Anisotropy = 0x90; // FExpressionInput
		constexpr auto EmissiveColor = 0xa4; // FExpressionInput
		constexpr auto Opacity = 0xb8; // FExpressionInput
		constexpr auto OpacityMask = 0xcc; // FExpressionInput
		constexpr auto Normal = 0xe0; // FExpressionInput
		constexpr auto Tangent = 0xf4; // FExpressionInput
		constexpr auto WorldPositionOffset = 0x108; // FExpressionInput
		constexpr auto WorldDisplacement = 0x11c; // FExpressionInput
		constexpr auto TessellationMultiplier = 0x130; // FExpressionInput
		constexpr auto SubsurfaceColor = 0x144; // FExpressionInput
		constexpr auto ClearCoat = 0x158; // FExpressionInput
		constexpr auto ClearCoatRoughness = 0x16c; // FExpressionInput
		constexpr auto AmbientOcclusion = 0x180; // FExpressionInput
		constexpr auto Refraction = 0x194; // FExpressionInput
		constexpr auto CustomizedUVs = 0x1a8; // FExpressionInput [0x8]
		constexpr auto PixelDepthOffset = 0x248; // FExpressionInput
		constexpr auto ShadingModel = 0x25c; // FExpressionInput
	}

	namespace n_UKSContextualPingMarkerWidget {
		constexpr auto OnPingRemovedCalled = 0x318; // FMulticastInlineDelegate
		constexpr auto OnPingChangedCalled = 0x328; // FMulticastInlineDelegate
		constexpr auto CurrentPingInfo = 0x338; // FPingInfo
		constexpr auto PingManager = 0x3e8; // UKSPingManager*
	}

	namespace n_UBTService {
		constexpr auto Interval = 0x60; // float
		constexpr auto RandomDeviation = 0x64; // float
		constexpr auto bCallTickOnSearchStart = 0x68; // char : 1
		constexpr auto bRestartTimerOnEachActivation = 0x68; // char : 1
	}

	namespace n_USoundNodeRandom {
		constexpr auto Weights = 0x48; // TArray<float>
		constexpr auto HasBeenUsed = 0x58; // TArray<bool>
		constexpr auto NumRandomUsed = 0x68; // int32_t
		constexpr auto PreselectAtLevelLoad = 0x6c; // int32_t
		constexpr auto bShouldExcludeFromBranchCulling = 0x70; // char : 1
		constexpr auto bSoundCueExcludedFromBranchCulling = 0x70; // char : 1
		constexpr auto bRandomizeWithoutReplacement = 0x70; // char : 1
	}

	namespace n_UKSActivityComponent_BattlePass {
		constexpr auto SeasonTag = 0x30; // FGameplayTag
		constexpr auto Battlepass = 0x38; // UKSBattlepass*
	}

	namespace n_UWBP_PartyModule_C {
		constexpr auto UberGraphFrame = 0x530; // FPointerToUberGraphFrame
		constexpr auto LeaveParty = 0x538; // UWBP_LeaveParty_C*
		constexpr auto SlotA = 0x540; // UWBP_PartyModuleCardSlot_C*
		constexpr auto SlotB = 0x548; // UWBP_PartyModuleCardSlot_C*
		constexpr auto SlotC = 0x550; // UWBP_PartyModuleCardSlot_C*
		constexpr auto SlotD = 0x558; // UWBP_PartyModuleCardSlot_C*
		constexpr auto SlotE = 0x560; // UWBP_PartyModuleCardSlot_C*
		constexpr auto SlotF = 0x568; // UWBP_PartyModuleCardSlot_C*
		constexpr auto WBP_Header3_C = 0x570; // UWBP_Header3_C*
		constexpr auto WBP_ModuleHeader = 0x578; // UWBP_ModuleHeader_C*
		constexpr auto WBP_Social_Snapshot = 0x580; // UWBP_Social_Snapshot_C*
		constexpr auto WBP_VoiceActivityContainer = 0x588; // UWBP_VoiceActivityContainer_C*
		constexpr auto OnPlayerCardSelected = 0x590; // FMulticastInlineDelegate
		constexpr auto OnPlayerCardBackButton = 0x5a0; // FMulticastInlineDelegate
		constexpr auto OnPartyLeaveVisibilityChange = 0x5b0; // FMulticastInlineDelegate
	}

	namespace n_UWBP_Social_Accordian_Header_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto Hover = 0x528; // UWidgetAnimation*
		constexpr auto Arrow = 0x530; // UImage*
		constexpr auto ArrowBg_Default = 0x538; // UImage*
		constexpr auto ArrowBG_Over = 0x540; // UImage*
		constexpr auto ArrowContainer = 0x548; // UOverlay*
		constexpr auto Background_Default = 0x550; // UImage*
		constexpr auto Background_Over = 0x558; // UImage*
		constexpr auto CallToActionWrapper = 0x560; // USizeBox*
		constexpr auto CountLabel = 0x568; // UTextBlock*
		constexpr auto HitArea = 0x570; // UButton*
		constexpr auto Label = 0x578; // UTextBlock*
		constexpr auto MessageContainer = 0x580; // USizeBox*
		constexpr auto MessageText = 0x588; // UTextBlock*
		constexpr auto ProcessingIndicator = 0x590; // USizeBox*
		constexpr auto Prompt = 0x598; // UWBP_ControllerPrompt_C*
		constexpr auto PromptContainer = 0x5a0; // USizeBox*
		constexpr auto ToggleActionGroup = 0x5a8; // UHorizontalBox*
		constexpr auto WBP_CallToAction = 0x5b0; // UWBP_CallToAction_C*
		constexpr auto WBP_ThrobberHorizontal = 0x5b8; // UWBP_ThrobberHorizontal_C*
		constexpr auto WidgetSwitcher_1 = 0x5c0; // UWidgetSwitcher*
		constexpr auto OnClicked = 0x5c8; // FMulticastInlineDelegate
		constexpr auto DataItem = 0x5d8; // UKSDataSocialCategory*
		constexpr auto IsExpanded = 0x5e0; // bool
		constexpr auto IsHoverState = 0x5e1; // bool
		constexpr auto HasPlayerData = 0x5e2; // bool
	}

	namespace n_UPhysicalMaterialMask {
		constexpr auto UVChannelIndex = 0x28; // int32_t
		constexpr auto AddressX = 0x2c; // TextureAddress
		constexpr auto AddressY = 0x2d; // TextureAddress
	}

	namespace n_UNoiseField {
		constexpr auto MinRange = 0xb0; // float
		constexpr auto MaxRange = 0xb4; // float
		constexpr auto Transform = 0xc0; // FTransform
	}

	namespace n_UWBP_MasteryPointsCount_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto AlignmentSwitcher = 0x240; // UWidgetSwitcher*
		constexpr auto AmountText = 0x248; // UTextBlock*
		constexpr auto AmountText_2 = 0x250; // UTextBlock*
		constexpr auto Icon = 0x258; // UScaleBox*
		constexpr auto Icon_2 = 0x260; // UScaleBox*
		constexpr auto IconMasteryPoints = 0x268; // UImage*
		constexpr auto IconMasteryPoints_2 = 0x270; // UImage*
		constexpr auto MasteryPointsTextSmall = 0x278; // UTextBlock*
		constexpr auto MasteryPointsTextSmall_2 = 0x280; // UTextBlock*
		constexpr auto Alignment = 0x288; // ETextJustify
		constexpr auto MasteryScreenMode = 0x289; // EKSWeaponMasteryType
	}

	namespace n_UWBP_ActiveBoosterEntry_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto GlowPulse = 0x240; // UWidgetAnimation*
		constexpr auto BGGradient = 0x248; // UImage*
		constexpr auto BonusIcon = 0x250; // UWBP_AsyncIcon_C*
		constexpr auto BoostDescriptionContainer = 0x258; // UVerticalBox*
		constexpr auto BoosterIconSize = 0x260; // USizeBox*
		constexpr auto BoosterShine = 0x268; // UImage*
		constexpr auto DescRichText = 0x270; // URichTextBlock*
		constexpr auto EventName = 0x278; // UTextBlock*
		constexpr auto EventTimeRemaining = 0x280; // UTextBlock*
		constexpr auto TimeRemainingIcon = 0x288; // UImage*
		constexpr auto TimeRemainingIconWrapper = 0x290; // USizeBox*
		constexpr auto isCompactView = 0x298; // bool
	}

	namespace n_UWBP_WeaponMilestoneEntry_Progression_C {
		constexpr auto UberGraphFrame = 0x528; // FPointerToUberGraphFrame
		constexpr auto AnimSlideDown = 0x530; // UWidgetAnimation*
		constexpr auto AnimSlideUp = 0x538; // UWidgetAnimation*
		constexpr auto AnimOnTierRefresh = 0x540; // UWidgetAnimation*
		constexpr auto AnimOnMilestoneComplete = 0x548; // UWidgetAnimation*
		constexpr auto 1pxBar = 0x550; // USizeBox*
		constexpr auto background = 0x558; // UImage*
		constexpr auto CardContent = 0x560; // UHorizontalBox*
		constexpr auto ChallengeDescription = 0x568; // UTextBlock*
		constexpr auto ChallengeProgressBar = 0x570; // UWBP_ProgressEarnedBar_C*
		constexpr auto ChallengeProgressText = 0x578; // UTextBlock*
		constexpr auto ChallengeProgressText_WidthOffest = 0x580; // UTextBlock*
		constexpr auto CompletedBorderGlow = 0x588; // UImage*
		constexpr auto Content_active = 0x590; // UVerticalBox*
		constexpr auto ContractWrapper = 0x598; // UOverlay*
		constexpr auto DiamondGradient = 0x5a0; // UImage*
		constexpr auto EdgeGlowTop = 0x5a8; // UImage*
		constexpr auto Gradient = 0x5b0; // UImage*
		constexpr auto Image_544 = 0x5b8; // UImage*
		constexpr auto LevelUpText = 0x5c0; // UTextBlock*
		constexpr auto LockedWrapper = 0x5c8; // UOverlay*
		constexpr auto ProgressGroup = 0x5d0; // UHorizontalBox*
		constexpr auto RewardImage = 0x5d8; // UKSAsyncImage*
		constexpr auto RewardQtyText = 0x5e0; // UTextBlock*
		constexpr auto Root = 0x5e8; // UOverlay*
		constexpr auto TopBar = 0x5f0; // UImage*
		constexpr auto TopLineRule = 0x5f8; // UImage*
		constexpr auto TransitionFlash = 0x600; // UImage*
		constexpr auto XPBarShimmer = 0x608; // UImage*
		constexpr auto CurrentVisualState = 0x610; // EChallengeEntry_Card_State
		constexpr auto WeekTableRowName = 0x614; // FName
		constexpr auto CurrentActivitySequence = 0x620; // FActivitySequenceRow
		constexpr auto ButtonClickSound = 0x650; // UAkAudioEvent*
		constexpr auto ButtonHoverSound = 0x658; // UAkAudioEvent*
		constexpr auto MilestoneIndex = 0x660; // int32_t
		constexpr auto OnMilestoneCompleted = 0x668; // FMulticastInlineDelegate
		constexpr auto ProgressSummary = 0x678; // FKSMilestoneCompletedSummaryEntry
		constexpr auto AnimStartCount = 0x718; // int32_t
		constexpr auto OnAnimSequenceFinished = 0x720; // FMulticastInlineDelegate
		constexpr auto AnimEndCount = 0x730; // int32_t
		constexpr auto SignaledFinished = 0x734; // bool
		constexpr auto CurrentAnimState = 0x735; // EKSMilestoneCompleteAnimState
		constexpr auto DelayBeforeTierUp = 0x738; // float
		constexpr auto DelayBetweenMilestones = 0x73c; // float
		constexpr auto BarLerpDuration = 0x740; // float
		constexpr auto AnimBlockTimeout = 0x748; // FTimerHandle
	}

	namespace n_UNiagaraRendererProperties {
		constexpr auto SortOrderHint = 0x28; // int32_t
		constexpr auto bIsEnabled = 0x2c; // bool
		constexpr auto bMotionBlurEnabled = 0x2d; // bool
	}

	namespace n_UKSActivityRewardCondition_Down {
		constexpr auto IsDown = 0x30; // bool
	}

	namespace n_UMaster_WeaponComponent_C {
		constexpr auto Is ADS = 0x638; // bool
		constexpr auto Owner Fire Section = 0x63c; // FName
		constexpr auto Owner 1p ADS Fire Section = 0x648; // TArray<FName>
		constexpr auto Deattach Slot Name = 0x658; // FName
		constexpr auto Attach Slot Name = 0x660; // FName
		constexpr auto MIrror Attach Slot Name = 0x668; // FName
		constexpr auto Weapon Fire Sound ID = 0x670; // int32_t
		constexpr auto Weapon Fire Sound Interrupts = 0x674; // bool
		constexpr auto Weapon Casing Sound = 0x678; // UAkAudioEvent*
		constexpr auto Equip Sound = 0x680; // UAkAudioEvent*
		constexpr auto Speed of Sound = 0x688; // float
		constexpr auto Echo Max Distance = 0x68c; // float
		constexpr auto Echo Directions = 0x690; // TArray<FRotator>
		constexpr auto Echo Sound Location = 0x6a0; // FVector
		constexpr auto Muzzle Flash 3p = 0x6b0; // UParticleSystem*
		constexpr auto Muzzle Flash 1p = 0x6b8; // UParticleSystem*
		constexpr auto MuzzleSocketName = 0x6c0; // FName
		constexpr auto Cartridge Ejection Attach Name = 0x6c8; // FName
		constexpr auto Default Decal Info = 0x6d0; // FHitDecalInfo
		constexpr auto Physical Decal Materials = 0x6f8; // TMap<EPhysicalSurface, FHitDecalInfo>
		constexpr auto Tracer Template = 0x748; // UParticleSystem*
		constexpr auto Next Tracer Time = 0x750; // float
		constexpr auto Minimum Tracer Delay = 0x754; // float
		constexpr auto Maximum Tracer Delay = 0x758; // float
		constexpr auto Shot Count = 0x75c; // int32_t
		constexpr auto Tracer Mesh = 0x760; // UStaticMesh*
		constexpr auto Tracer Frequency = 0x768; // int32_t
		constexpr auto Decal Physical Surface = 0x76c; // EPhysicalSurface
		constexpr auto Decal Location = 0x770; // FVector
		constexpr auto Temp Mesh Material Override = 0x780; // UMaterialInterface*
		constexpr auto CountedShotsLeft = 0x788; // int32_t
		constexpr auto 1P ADS Camera Shake = 0x790; // UObject*
		constexpr auto Owner 3p Fire Section = 0x798; // TArray<FName>
		constexpr auto Counter = 0x7a8; // int32_t
		constexpr auto AOS Camera Shake = 0x7b0; // UObject*
		constexpr auto 3P Camera Shake = 0x7b8; // UObject*
		constexpr auto CountedMagSize = 0x7c0; // int32_t
		constexpr auto bIsSecondaryWeapon = 0x7c4; // bool
		constexpr auto Is Pistol = 0x7c5; // bool
		constexpr auto Is Dual Guns = 0x7c6; // bool
		constexpr auto ShouldSpawnTracers = 0x7c7; // bool
		constexpr auto ShouldHaveBulletFX = 0x7c8; // bool
		constexpr auto ShouldHaveBulletSpangs = 0x7c9; // bool
		constexpr auto bWasFiredByOwner = 0x7ca; // bool
		constexpr auto MagazineDropBone = 0x7cc; // FName
		constexpr auto Mirror Reload Enabled = 0x7d4; // bool
		constexpr auto Mirror_MagazineDropBone = 0x7d8; // FName
		constexpr auto DropBoneOnWeapon = 0x7e0; // bool
		constexpr auto TrackingMagDropBone = 0x7e1; // bool
		constexpr auto DropMagSpawnTransformOveride = 0x7f0; // FTransform
		constexpr auto DropBonePreviousPosition = 0x820; // FVector
		constexpr auto DropBoneVelocity = 0x82c; // FVector
		constexpr auto DropVelocityOverride = 0x838; // FVector
		constexpr auto Is Gun Holstered = 0x844; // bool
		constexpr auto DropMultipleMags = 0x845; // bool
		constexpr auto Drop Multiple Mags Velocity Inheritance Override = 0x846; // bool
		constexpr auto MultiMagArray = 0x848; // TArray<FMultiMagDropInfo>
		constexpr auto Maintain Holster = 0x858; // bool
		constexpr auto Is Shotgun = 0x859; // bool
		constexpr auto Target Shell Housing Spin = 0x85c; // FRotator
		constexpr auto Missing Shell Count = 0x868; // int32_t
		constexpr auto Interp Speed = 0x86c; // float
		constexpr auto VsWorldAlphaDiff = 0x870; // float
		constexpr auto LastUpdatedAlpha = 0x874; // float
		constexpr auto Prevent Vs World Active = 0x878; // bool
		constexpr auto Is Vs World Force Reset Delay = 0x879; // bool
		constexpr auto Vs World Reset Delay Time = 0x87c; // float
		constexpr auto Able to Magdrop? = 0x880; // bool
		constexpr auto Force Holster Mantle = 0x881; // bool
		constexpr auto Force Holster Zipline = 0x882; // bool
		constexpr auto Scope Mesh Scale = 0x883; // bool
		constexpr auto Scope Scale Alpha = 0x884; // float
		constexpr auto Hide Materials Array = 0x888; // TArray<UMaterialInterface*>
		constexpr auto Is Vcol Hide Needed = 0x898; // bool
		constexpr auto OnSetScopeScaleAlpha = 0x8a0; // FMulticastInlineDelegate
		constexpr auto OnSetRevolverChamberRotate = 0x8b0; // FMulticastInlineDelegate
		constexpr auto CosmeticShotTraceDist = 0x8c0; // float
		constexpr auto CartridgeEjectParticles = 0x8c8; // TArray<UParticleSystemComponent*>
		constexpr auto 1PMuzzleFlashParticles = 0x8d8; // TArray<UParticleSystemComponent*>
		constexpr auto 3pMuzzleFlashParticles = 0x8e8; // TArray<UParticleSystemComponent*>
		constexpr auto bShouldPlayADSFire = 0x8f8; // bool
		constexpr auto ADSFirePlayPosition = 0x8fc; // float
		constexpr auto AOSFirePlayPosition = 0x900; // float
		constexpr auto ADSFireDelay = 0x904; // float
		constexpr auto OnSetLobbyState = 0x908; // FMulticastInlineDelegate
		constexpr auto DropMagazineLockout = 0x918; // bool
		constexpr auto 3P Camera Shake Hi = 0x920; // UObject*
		constexpr auto FireCameraModifier = 0x928; // UObject*
		constexpr auto QueuedAimData = 0x930; // TArray<FFullFireRepData>
		constexpr auto ValidHits_Event = 0x940; // TArray<FHitResult>
		constexpr auto Should Play Impact Sound = 0x950; // bool
		constexpr auto Should Hide On Holster = 0x951; // bool
		constexpr auto FireAudioMode = 0x952; // EFireAudioMode
		constexpr auto AllowNewShotAudio = 0x953; // bool
		constexpr auto Post Reload Delay Period = 0x954; // float
		constexpr auto Folded Stock = 0x958; // bool
		constexpr auto Stock Rotation = 0x95c; // FRotator
		constexpr auto Stock alt Rotation = 0x968; // FRotator
		constexpr auto Multi Stage Reload Lockout = 0x974; // bool
		constexpr auto ViewPawnForwardDir = 0x978; // FVector
		constexpr auto ViewPawnLeftDir = 0x984; // FVector
		constexpr auto LastBulletMissTime = 0x990; // float
		constexpr auto LoopingFireAudioCheckTriggerDelay = 0x994; // float
		constexpr auto LoopingFireAudioFadeOutDuration = 0x998; // int32_t
		constexpr auto IsFirstShot = 0x99c; // bool
		constexpr auto IsPlayerControlled = 0x99d; // bool
		constexpr auto 1PAuxMuzzleFlashParticles = 0x9a0; // TArray<UParticleSystemComponent*>
		constexpr auto 3pAuxMuzzleFlashParticles = 0x9b0; // TArray<UParticleSystemComponent*>
		constexpr auto ShouldPlayBlockedImpactSound = 0x9c0; // bool
		constexpr auto Revolving timer = 0x9c8; // FTimerHandle
		constexpr auto Eval Target Shell Housing Spin = 0x9d0; // FRotator
		constexpr auto ShouldComputeCosmeticHits = 0x9dc; // bool
		constexpr auto On Init Hide Magazine = 0x9dd; // bool
		constexpr auto Use laser sight = 0x9de; // bool
		constexpr auto Reticle Material = 0x9e0; // UMaterialInstanceDynamic*
		constexpr auto RetrieveCombatState = 0x9e8; // ECombatState
		constexpr auto Post Reload Timer = 0x9f0; // FTimerHandle
		constexpr auto Old State = 0x9f8; // EWeaponStateNew
		constexpr auto TracerStartPointLocalToOwner = 0x9fc; // FVector
		constexpr auto TracerMinimumOffsetLocallyViewed = 0xa08; // float
		constexpr auto TracerMaximumOffsetLocallyViewed = 0xa0c; // float
		constexpr auto TracerMinimumOffsetNPC = 0xa10; // float
		constexpr auto TracerMaximumOffsetNPC = 0xa14; // float
		constexpr auto Combat State Change Time = 0xa18; // float
		constexpr auto Mirror Deattach Slot Active = 0xa1c; // bool
		constexpr auto Mirror Deattach Slot Name = 0xa20; // FName
		constexpr auto ScopeWidgetClass = 0xa28; // UObject*
		constexpr auto ScopeWidgetActor = 0xa30; // AActor*
		constexpr auto OnSetShieldActive = 0xa38; // FMulticastInlineDelegate
		constexpr auto PS5 Trigger Type = 0xa48; // EGamepadTriggerType
		constexpr auto PS5 Trigger Start Position = 0xa49; // char
		constexpr auto PS5 Trigger Stop Position = 0xa4a; // char
		constexpr auto PS5 Trigger Haptic Strength = 0xa4b; // char
		constexpr auto CurrentFirePlayPosition = 0xa4c; // float
		constexpr auto Tracer Particle System = 0xa50; // UParticleSystem*
		constexpr auto Friendly Tracer Material = 0xa58; // UMaterialInterface*
		constexpr auto Enemy Tracer MaterialInst = 0xa60; // UMaterialInterface*
		constexpr auto SprintingIsActive = 0xa68; // bool
		constexpr auto ReloadWhileSprintingActive = 0xa69; // bool
		constexpr auto Temp_int_Loop_Counter_Variable = 0xa6c; // int32_t
		constexpr auto K2Node_CustomEvent_Hit = 0xa70; // FHitResult
		constexpr auto K2Node_CustomEvent_bBlockingHit = 0xaf8; // bool
		constexpr auto K2Node_CustomEvent_OutHits = 0xb00; // TArray<FHitResult>
		constexpr auto K2Node_CustomEvent_Start = 0xb10; // FVector
		constexpr auto K2Node_CustomEvent_End = 0xb1c; // FVector
		constexpr auto CallFunc_BreakHitResult_bBlockingHit = 0xb28; // bool
		constexpr auto CallFunc_BreakHitResult_bInitialOverlap = 0xb29; // bool
		constexpr auto CallFunc_BreakHitResult_Time = 0xb2c; // float
		constexpr auto CallFunc_BreakHitResult_Distance = 0xb30; // float
		constexpr auto CallFunc_BreakHitResult_Location = 0xb34; // FVector
		constexpr auto CallFunc_BreakHitResult_ImpactPoint = 0xb40; // FVector
		constexpr auto CallFunc_BreakHitResult_Normal = 0xb4c; // FVector
		constexpr auto CallFunc_BreakHitResult_ImpactNormal = 0xb58; // FVector
		constexpr auto CallFunc_BreakHitResult_PhysMat = 0xb68; // UPhysicalMaterial*
		constexpr auto CallFunc_BreakHitResult_HitActor = 0xb70; // AActor*
		constexpr auto CallFunc_BreakHitResult_HitComponent = 0xb78; // UPrimitiveComponent*
		constexpr auto CallFunc_BreakHitResult_HitBoneName = 0xb80; // FName
		constexpr auto CallFunc_BreakHitResult_HitItem = 0xb88; // int32_t
		constexpr auto CallFunc_BreakHitResult_FaceIndex = 0xb8c; // int32_t
		constexpr auto CallFunc_BreakHitResult_TraceStart = 0xb90; // FVector
		constexpr auto CallFunc_BreakHitResult_TraceEnd = 0xb9c; // FVector
		constexpr auto CallFunc_BreakHitResult_bBlockingHit_2 = 0xba8; // bool
		constexpr auto CallFunc_BreakHitResult_bInitialOverlap_2 = 0xba9; // bool
		constexpr auto CallFunc_BreakHitResult_Time_2 = 0xbac; // float
		constexpr auto CallFunc_BreakHitResult_Distance_2 = 0xbb0; // float
		constexpr auto CallFunc_BreakHitResult_Location_2 = 0xbb4; // FVector
		constexpr auto CallFunc_BreakHitResult_ImpactPoint_2 = 0xbc0; // FVector
		constexpr auto CallFunc_BreakHitResult_Normal_2 = 0xbcc; // FVector
		constexpr auto CallFunc_BreakHitResult_ImpactNormal_2 = 0xbd8; // FVector
		constexpr auto CallFunc_BreakHitResult_PhysMat_2 = 0xbe8; // UPhysicalMaterial*
		constexpr auto CallFunc_BreakHitResult_HitActor_2 = 0xbf0; // AActor*
		constexpr auto CallFunc_BreakHitResult_HitComponent_2 = 0xbf8; // UPrimitiveComponent*
		constexpr auto CallFunc_BreakHitResult_HitBoneName_2 = 0xc00; // FName
		constexpr auto CallFunc_BreakHitResult_HitItem_2 = 0xc08; // int32_t
		constexpr auto CallFunc_BreakHitResult_FaceIndex_2 = 0xc0c; // int32_t
		constexpr auto CallFunc_BreakHitResult_TraceStart_2 = 0xc10; // FVector
		constexpr auto CallFunc_BreakHitResult_TraceEnd_2 = 0xc1c; // FVector
		constexpr auto CallFunc_Get_Decal_Material_Decal_Info = 0xc28; // FHitDecalInfo
		constexpr auto K2Node_CustomEvent_bBlockingHit_2 = 0xc50; // bool
		constexpr auto K2Node_CustomEvent_OutHits_2 = 0xc58; // TArray<FHitResult>
		constexpr auto K2Node_CustomEvent_Start_2 = 0xc68; // FVector
		constexpr auto K2Node_CustomEvent_End_2 = 0xc74; // FVector
		constexpr auto K2Node_CustomEvent_bBlockingHit_3 = 0xc80; // bool
		constexpr auto K2Node_CustomEvent_OutHits_3 = 0xc88; // TArray<FHitResult>
		constexpr auto K2Node_CustomEvent_Start_3 = 0xc98; // FVector
		constexpr auto K2Node_CustomEvent_End_3 = 0xca4; // FVector
		constexpr auto K2Node_CustomEvent_Data = 0xcb0; // FFullFireRepData
		constexpr auto Temp_name_Variable = 0xd18; // FName
		constexpr auto K2Node_DynamicCast_AsPlayer_Controller = 0xd20; // APlayerController*
		constexpr auto K2Node_DynamicCast_bSuccess = 0xd28; // bool
		constexpr auto K2Node_CustomEvent_Blocking_Hit = 0xd29; // bool
		constexpr auto K2Node_CustomEvent_Out_Hits = 0xd30; // TArray<FHitResult>
		constexpr auto K2Node_CustomEvent_Start_4 = 0xd40; // FVector
		constexpr auto K2Node_CustomEvent_End_4 = 0xd4c; // FVector
		constexpr auto K2Node_CustomEvent_Allow_Spangs = 0xd58; // bool
		constexpr auto K2Node_CustomEvent_Allow_Tracers = 0xd59; // bool
		constexpr auto K2Node_CustomEvent_Allow_Decals = 0xd5a; // bool
		constexpr auto CallFunc_Filter_Cosmetic_Hit_Results_Filtered_Hit_Results = 0xd60; // TArray<FHitResult>
		constexpr auto K2Node_DynamicCast_AsKSDefault_Aim_Targeting_Module = 0xd70; // UKSDefaultAimTargetingModule*
		constexpr auto K2Node_DynamicCast_bSuccess_2 = 0xd78; // bool
		constexpr auto CallFunc_IsWallMarkerActive_WallLocation = 0xd7c; // FVector
		constexpr auto K2Node_CustomEvent_Hits = 0xd88; // TArray<FHitResult>
		constexpr auto K2Node_CustomEvent_Start_5 = 0xd98; // FVector
		constexpr auto K2Node_CustomEvent_End_5 = 0xda4; // FVector
		constexpr auto K2Node_CreateDelegate_OutputDelegate = 0xdb0; // FDelegate
		constexpr auto K2Node_CreateDelegate_OutputDelegate_2 = 0xdc0; // FDelegate
		constexpr auto Temp_int_Array_Index_Variable = 0xdd0; // int32_t
		constexpr auto CallFunc_Array_Get_Item = 0xdd8; // UParticleSystemComponent*
		constexpr auto K2Node_CustomEvent_Hits_2 = 0xde0; // TArray<FHitResult>
		constexpr auto K2Node_CustomEvent_Trace_End = 0xdf0; // FVector
		constexpr auto K2Node_Event_DeltaSeconds = 0xdfc; // float
		constexpr auto K2Node_Event_OldState = 0xe00; // EWeaponStateNew
		constexpr auto K2Node_Event_NewState = 0xe01; // EWeaponStateNew
		constexpr auto K2Node_SwitchEnum_CmpSuccess = 0xe02; // bool
		constexpr auto K2Node_Event_Data = 0xe08; // FFullFireRepData
		constexpr auto K2Node_SwitchEnum_CmpSuccess_2 = 0xe70; // bool
		constexpr auto CallFunc_GetAnimMontage_Priority = 0xe74; // int32_t
		constexpr auto CallFunc_GetAnimMontage_Priority_2 = 0xe78; // int32_t
		constexpr auto Temp_int_Loop_Counter_Variable_2 = 0xe7c; // int32_t
		constexpr auto K2Node_CustomEvent_Hits_3 = 0xe80; // TArray<FHitResult>
		constexpr auto K2Node_CreateDelegate_OutputDelegate_3 = 0xe90; // FDelegate
		constexpr auto Temp_int_Array_Index_Variable_2 = 0xea0; // int32_t
		constexpr auto CallFunc_Array_Get_Item_2 = 0xea8; // UParticleSystemComponent*
		constexpr auto CallFunc_GetBool_Priority = 0xeb0; // int32_t
		constexpr auto K2Node_CustomEvent_bBlockingHit_4 = 0xeb4; // bool
		constexpr auto K2Node_CustomEvent_OutHits_4 = 0xeb8; // TArray<FHitResult>
		constexpr auto K2Node_CustomEvent_Start_6 = 0xec8; // FVector
		constexpr auto K2Node_CustomEvent_End_6 = 0xed4; // FVector
		constexpr auto CallFunc_Get_Character_Anim_Instance_Anim_Inst = 0xee0; // UKSCharacterAnimInst*
		constexpr auto CallFunc_GetBool_Priority_2 = 0xee8; // int32_t
		constexpr auto K2Node_CustomEvent_Fire_Data = 0xef0; // FFullFireRepData
		constexpr auto K2Node_CustomEvent_ViewPawn = 0xf58; // APawn*
		constexpr auto K2Node_CustomEvent_NewState = 0xf60; // ECombatState
		constexpr auto CallFunc_Get_Character_Anim_Instance_Anim_Inst_2 = 0xf68; // UKSCharacterAnimInst*
		constexpr auto CallFunc_Get_Character_Anim_Instance_Anim_Inst_3 = 0xf70; // UKSCharacterAnimInst*
		constexpr auto CallFunc_Get_Character_Anim_Instance_Anim_Inst_4 = 0xf78; // UKSCharacterAnimInst*
		constexpr auto Temp_int_Variable = 0xf80; // int32_t
		constexpr auto CallFunc_GetAudioEvent_Priority = 0xf84; // int32_t
		constexpr auto CallFunc_GetAudioEvent_Priority_2 = 0xf88; // int32_t
		constexpr auto CallFunc_GetAudioEvent_Priority_3 = 0xf8c; // int32_t
		constexpr auto K2Node_CreateDelegate_OutputDelegate_4 = 0xf90; // FDelegate
		constexpr auto CallFunc_GetAnimMontage_Priority_3 = 0xfa0; // int32_t
		constexpr auto CallFunc_Get_Player_1P_Fire_Montage_Montage = 0xfa8; // UAnimMontage*
		constexpr auto CallFunc_GetAnimMontage_Priority_4 = 0xfb0; // int32_t
		constexpr auto CallFunc_GetAnimMontage_Priority_5 = 0xfb4; // int32_t
		constexpr auto Temp_struct_Variable = 0xfb8; // TArray<FAkExternalSourceInfo>
		constexpr auto K2Node_Event_SkinnableSkelComp = 0xfc8; // USkinnableSkeletalMeshComponent*
		constexpr auto Temp_delegate_Variable = 0xfd0; // FDelegate
		constexpr auto Temp_int_Array_Index_Variable_3 = 0xfe0; // int32_t
		constexpr auto Temp_int_Loop_Counter_Variable_3 = 0xfe4; // int32_t
		constexpr auto K2Node_CreateDelegate_OutputDelegate_5 = 0xfe8; // FDelegate
		constexpr auto Temp_int_Array_Index_Variable_4 = 0xff8; // int32_t
		constexpr auto CallFunc_Array_Get_Item_3 = 0x1000; // UParticleSystemComponent*
		constexpr auto K2Node_SwitchEnum_CmpSuccess_3 = 0x1008; // bool
		constexpr auto Temp_int_Loop_Counter_Variable_4 = 0x100c; // int32_t
		constexpr auto Temp_int_Loop_Counter_Variable_5 = 0x1010; // int32_t
		constexpr auto K2Node_Event_EndPlayReason = 0x1014; // EEndPlayReason
		constexpr auto Temp_int_Array_Index_Variable_5 = 0x1018; // int32_t
		constexpr auto CallFunc_Array_Get_Item_4 = 0x1020; // UParticleSystemComponent*
		constexpr auto K2Node_CustomEvent_KillerCharacter = 0x1028; // AKSCharacterFoundation*
		constexpr auto K2Node_CustomEvent_KilledCharacter = 0x1030; // AKSCharacterFoundation*
		constexpr auto K2Node_SwitchEnum_CmpSuccess_4 = 0x1038; // bool
		constexpr auto K2Node_CustomEvent_NewController = 0x1040; // AController*
		constexpr auto K2Node_DynamicCast_AsKSPlayer_Controller = 0x1048; // AKSPlayerController*
		constexpr auto K2Node_DynamicCast_bSuccess_3 = 0x1050; // bool
		constexpr auto Temp_struct_Variable_2 = 0x1058; // TArray<FAkExternalSourceInfo>
		constexpr auto Temp_delegate_Variable_2 = 0x1068; // FDelegate
		constexpr auto Temp_struct_Variable_3 = 0x1078; // TArray<FAkExternalSourceInfo>
		constexpr auto CallFunc_GetBool_Priority_3 = 0x1088; // int32_t
		constexpr auto CallFunc_GetAnimMontage_Priority_6 = 0x108c; // int32_t
		constexpr auto CallFunc_GetAnimMontage_Priority_7 = 0x1090; // int32_t
		constexpr auto CallFunc_Get_Character_Anim_Instance_Anim_Inst_5 = 0x1098; // UKSCharacterAnimInst*
		constexpr auto Temp_delegate_Variable_3 = 0x10a0; // FDelegate
		constexpr auto CallFunc_Get_Character_Anim_Instance_Anim_Inst_6 = 0x10b0; // UKSCharacterAnimInst*
		constexpr auto CallFunc_GetAnimMontage_Priority_8 = 0x10b8; // int32_t
		constexpr auto CallFunc_GetAnimMontage_Priority_9 = 0x10bc; // int32_t
		constexpr auto CallFunc_GetBool_Priority_4 = 0x10c0; // int32_t
		constexpr auto CallFunc_GetAnimMontage_Priority_10 = 0x10c4; // int32_t
		constexpr auto CallFunc_GetAnimMontage_Priority_11 = 0x10c8; // int32_t
		constexpr auto CallFunc_GetAnimMontage_Priority_12 = 0x10cc; // int32_t
		constexpr auto CallFunc_GetAnimMontage_Priority_13 = 0x10d0; // int32_t
		constexpr auto CallFunc_Get_Character_Anim_Instance_Anim_Inst_7 = 0x10d8; // UKSCharacterAnimInst*
		constexpr auto Temp_bool_Variable = 0x10e0; // bool
		constexpr auto K2Node_Select_Default = 0x10e8; // UAnimMontage*
		constexpr auto CallFunc_Get_Character_Anim_Instance_Anim_Inst_8 = 0x10f0; // UKSCharacterAnimInst*
		constexpr auto CallFunc_GetAnimMontage_Priority_14 = 0x10f8; // int32_t
		constexpr auto CallFunc_GetAnimMontage_Priority_15 = 0x10fc; // int32_t
		constexpr auto CallFunc_GetMaterials_ReturnValue = 0x1100; // TArray<UMaterialInterface*>
		constexpr auto CallFunc_Array_Get_Item_5 = 0x1110; // UMaterialInterface*
		constexpr auto K2Node_DynamicCast_AsMaterial_Instance_Dynamic = 0x1118; // UMaterialInstanceDynamic*
		constexpr auto K2Node_DynamicCast_bSuccess_4 = 0x1120; // bool
		constexpr auto CallFunc_Get_Character_Anim_Instance_Anim_Inst_9 = 0x1128; // UKSCharacterAnimInst*
		constexpr auto Temp_int_Loop_Counter_Variable_6 = 0x1130; // int32_t
		constexpr auto CallFunc_End_Reload_Weapon_Cancelled_A_Reload = 0x1134; // bool
		constexpr auto CallFunc_Get_Character_Anim_Instance_Anim_Inst_10 = 0x1138; // UKSCharacterAnimInst*
		constexpr auto Temp_int_Variable_2 = 0x1140; // int32_t
		constexpr auto Temp_object_Variable = 0x1148; // TArray<AActor*>
		constexpr auto CallFunc_GetAudioEvent_Priority_4 = 0x1158; // int32_t
		constexpr auto Temp_int_Variable_3 = 0x115c; // int32_t
		constexpr auto Temp_name_Variable_2 = 0x1160; // FName
		constexpr auto Temp_name_Variable_3 = 0x1168; // FName
		constexpr auto Temp_name_Variable_4 = 0x1170; // FName
		constexpr auto Temp_name_Variable_5 = 0x1178; // FName
		constexpr auto Temp_bool_Variable_2 = 0x1180; // bool
		constexpr auto K2Node_Select_Default_2 = 0x1188; // UAnimMontage*
		constexpr auto K2Node_CustomEvent_OldCombatState = 0x1190; // ECombatState
		constexpr auto K2Node_CustomEvent_NewCombatState = 0x1191; // ECombatState
		constexpr auto K2Node_CreateDelegate_OutputDelegate_6 = 0x1194; // FDelegate
		constexpr auto Temp_object_Variable_2 = 0x11a8; // UTexture2D*
		constexpr auto Temp_bool_Variable_3 = 0x11b0; // bool
		constexpr auto CallFunc_Get_Character_Anim_Instance_Anim_Inst_11 = 0x11b8; // UKSCharacterAnimInst*
		constexpr auto Temp_int_Array_Index_Variable_6 = 0x11c0; // int32_t
		constexpr auto CallFunc_Array_Get_Item_6 = 0x11c8; // UParticleSystemComponent*
		constexpr auto K2Node_CreateDelegate_OutputDelegate_7 = 0x11d0; // FDelegate
		constexpr auto CallFunc_Get_Character_Anim_Instance_Anim_Inst_12 = 0x11e0; // UKSCharacterAnimInst*
		constexpr auto Temp_delegate_Variable_4 = 0x11e8; // FDelegate
		constexpr auto Temp_struct_Variable_4 = 0x11f8; // TArray<FAkExternalSourceInfo>
		constexpr auto K2Node_DynamicCast_AsKSWeapon_Anim_Instance = 0x1208; // UKSWeaponAnimInstance*
		constexpr auto K2Node_DynamicCast_bSuccess_5 = 0x1210; // bool
		constexpr auto CallFunc_Get_Player_3P_Fire_Montage_Montage = 0x1218; // UAnimMontage*
		constexpr auto K2Node_CreateDelegate_OutputDelegate_8 = 0x1220; // FDelegate
		constexpr auto K2Node_CreateDelegate_OutputDelegate_9 = 0x1230; // FDelegate
		constexpr auto K2Node_CreateDelegate_OutputDelegate_10 = 0x1240; // FDelegate
		constexpr auto K2Node_Select_Default_3 = 0x1250; // UTexture2D*
	}

	namespace n_UParticleModuleLifetime_Seeded {
		constexpr auto RandomSeedInfo = 0x60; // FParticleRandomSeedInfo
	}

	namespace n_UWBP_SettingsContainer_C {
		constexpr auto UberGraphFrame = 0x540; // FPointerToUberGraphFrame
		constexpr auto RowFocus = 0x548; // UWidgetAnimation*
		constexpr auto Image_160 = 0x550; // UImage*
		constexpr auto SettingDisplayName = 0x558; // UTextBlock*
		constexpr auto SettingWidgetBox = 0x560; // UHorizontalBox*
		constexpr auto HoverSettingsContainerSFX = 0x568; // UAkAudioEvent*
		constexpr auto PreviewWidget = 0x570; // UKSWidget*
		constexpr auto OnAddToPreview = 0x578; // FMulticastInlineDelegate
	}

	namespace n_UKSPlayerMod_Charge {
		constexpr auto bIsMultiplier = 0x330; // bool
		constexpr auto ChargeMultiplier = 0x334; // float
		constexpr auto bIsDiscount = 0x338; // bool
		constexpr auto ChargeDiscount = 0x33c; // int32_t
	}

	namespace n_ULightPropagationVolumeBlendable {
		constexpr auto Settings = 0x30; // FLightPropagationVolumeSettings
		constexpr auto BlendWeight = 0x70; // float
	}

	namespace n_UKSFloatTickLerpWidgetBase {
		constexpr auto OnLerpComplete = 0x238; // FMulticastInlineDelegate
		constexpr auto LerpTime = 0x248; // float
		constexpr auto LerpPower = 0x24c; // float
	}

	namespace n_UDamageNumberDisplayWidget {
		constexpr auto OnNumberAnimationComplete = 0x238; // FMulticastInlineDelegate
		constexpr auto DamageTarget = 0x248; // AActor*
		constexpr auto InitialDamageLocation = 0x250; // FVector
		constexpr auto TetherToEventLocation = 0x25c; // bool
		constexpr auto DamageAmount = 0x260; // float
		constexpr auto DamageBaseType = 0x264; // EDamageBaseType
		constexpr auto DamageFlourishType = 0x265; // EDamageFlourishType
		constexpr auto DamageModifier = 0x266; // EDamageModifier
		constexpr auto DamageTargetType = 0x267; // EKSUIDamageTargetType
		constexpr auto DelayBeforeAnimation = 0x268; // float
		constexpr auto StackWaitTime = 0x26c; // float
		constexpr auto PlayingNumberAnimation = 0x270; // bool
		constexpr auto VerticalWorldOffset = 0x274; // float
		constexpr auto ChangePosition = 0x278; // bool
	}

	namespace n_UAkRoomComponent {
		constexpr auto bEnable = 0x228; // char : 1
		constexpr auto NextLowerPriorityComponent = 0x230; // UAkRoomComponent*
		constexpr auto Priority = 0x238; // float
		constexpr auto WallOcclusion = 0x23c; // float
		constexpr auto AuxSendLevel = 0x240; // float
		constexpr auto AutoPost = 0x244; // bool
	}

	namespace n_UApparelCollection {
		constexpr auto ApparelCollectionName = 0x98; // FText
		constexpr auto ApparelCollectionDescription = 0xb0; // FText
	}

	namespace n_AWorldSettings {
		constexpr auto VisibilityCellSize = 0x228; // int32_t
		constexpr auto VisibilityAggressiveness = 0x22c; // EVisibilityAggressiveness
		constexpr auto bPrecomputeVisibility = 0x22d; // char : 1
		constexpr auto bPlaceCellsOnlyAlongCameraTracks = 0x22d; // char : 1
		constexpr auto bEnableWorldBoundsChecks = 0x22d; // char : 1
		constexpr auto bEnableNavigationSystem = 0x22d; // char : 1
		constexpr auto bEnableAISystem = 0x22d; // char : 1
		constexpr auto bEnableWorldComposition = 0x22d; // char : 1
		constexpr auto bUseClientSideLevelStreamingVolumes = 0x22d; // char : 1
		constexpr auto bEnableWorldOriginRebasing = 0x22d; // char : 1
		constexpr auto bWorldGravitySet = 0x22e; // char : 1
		constexpr auto bGlobalGravitySet = 0x22e; // char : 1
		constexpr auto bMinimizeBSPSections = 0x22e; // char : 1
		constexpr auto bForceNoPrecomputedLighting = 0x22e; // char : 1
		constexpr auto bHighPriorityLoading = 0x22e; // char : 1
		constexpr auto bHighPriorityLoadingLocal = 0x22e; // char : 1
		constexpr auto bOverrideDefaultBroadphaseSettings = 0x22e; // char : 1
		constexpr auto NavigationSystemConfig = 0x230; // UNavigationSystemConfig*
		constexpr auto NavigationSystemConfigOverride = 0x238; // UNavigationSystemConfig*
		constexpr auto WorldToMeters = 0x240; // float
		constexpr auto KillZ = 0x244; // float
		constexpr auto KillZDamageType = 0x248; // UDamageType*
		constexpr auto WorldGravityZ = 0x250; // float
		constexpr auto GlobalGravityZ = 0x254; // float
		constexpr auto DefaultPhysicsVolumeClass = 0x258; // ADefaultPhysicsVolume*
		constexpr auto PhysicsCollisionHandlerClass = 0x260; // UPhysicsCollisionHandler*
		constexpr auto DefaultGameMode = 0x268; // AGameModeBase*
		constexpr auto GameNetworkManagerClass = 0x270; // AGameNetworkManager*
		constexpr auto PackedLightAndShadowMapTextureSize = 0x278; // int32_t
		constexpr auto DefaultColorScale = 0x27c; // FVector
		constexpr auto DefaultMaxDistanceFieldOcclusionDistance = 0x288; // float
		constexpr auto GlobalDistanceFieldViewDistance = 0x28c; // float
		constexpr auto DynamicIndirectShadowsSelfShadowingIntensity = 0x290; // float
		constexpr auto DefaultReverbSettings = 0x298; // FReverbSettings
		constexpr auto DefaultAmbientZoneSettings = 0x2b8; // FInteriorSettings
		constexpr auto MonoCullingDistance = 0x2dc; // float
		constexpr auto DefaultBaseSoundMix = 0x2e0; // USoundMix*
		constexpr auto TimeDilation = 0x2e8; // float
		constexpr auto MatineeTimeDilation = 0x2ec; // float
		constexpr auto DemoPlayTimeDilation = 0x2f0; // float
		constexpr auto MinGlobalTimeDilation = 0x2f4; // float
		constexpr auto MaxGlobalTimeDilation = 0x2f8; // float
		constexpr auto MinUndilatedFrameTime = 0x2fc; // float
		constexpr auto MaxUndilatedFrameTime = 0x300; // float
		constexpr auto BroadphaseSettings = 0x304; // FBroadphaseSettings
		constexpr auto Pauser = 0x348; // APlayerState*
		constexpr auto ReplicationViewers = 0x350; // TArray<FNetViewer>
		constexpr auto AssetUserData = 0x360; // TArray<UAssetUserData*>
		constexpr auto PauserPlayerState = 0x370; // APlayerState*
		constexpr auto MaxNumberOfBookmarks = 0x378; // int32_t
		constexpr auto DefaultBookmarkClass = 0x380; // UBookmarkBase*
		constexpr auto BookmarkArray = 0x388; // TArray<UBookmarkBase*>
		constexpr auto LastBookmarkClass = 0x398; // UBookmarkBase*
	}

	namespace n_UKSSocialSearchPanel {
		constexpr auto OnOpen = 0x580; // FMulticastInlineDelegate
		constexpr auto OnClose = 0x590; // FMulticastInlineDelegate
	}

	namespace n_ANeutralBombZone_C {
		constexpr auto UberGraphFrame = 0x478; // FPointerToUberGraphFrame
		constexpr auto Z Axis = 0x480; // UBoxComponent*
		constexpr auto ZoneMaterial = 0x488; // UMaterialInstanceDynamic*
		constexpr auto BombHolderWhenArming = 0x490; // AKSCharacterBase*
		constexpr auto NewVar_1 = 0x498; // FGameplayTag
	}

	namespace n_UAIPerceptionStimuliSourceComponent {
		constexpr auto bAutoRegisterAsSource = 0xb0; // char : 1
		constexpr auto RegisterAsSourceForSenses = 0xb8; // TArray<UAISense*>
	}

	namespace n_UAkWwiseTreeSelector {
		constexpr auto OnSelectionChanged = 0x110; // FMulticastInlineDelegate
		constexpr auto OnItemDragged = 0x120; // FMulticastInlineDelegate
	}

	namespace n_UBTTask_BlueprintBase {
		constexpr auto AIOwner = 0x70; // AAIController*
		constexpr auto ActorOwner = 0x78; // AActor*
		constexpr auto TickInterval = 0x80; // FIntervalCountdown
		constexpr auto bShowPropertyDetails = 0xa0; // char : 1
	}

	namespace n_UWBP_EquipAllPopup_C {
		constexpr auto UberGraphFrame = 0x528; // FPointerToUberGraphFrame
		constexpr auto AcceptEquipAll = 0x530; // UWBP_StandardButtonMedium_C*
		constexpr auto CancelEquipAllButton = 0x538; // UWBP_StandardButtonMedium_C*
		constexpr auto EquipAllDesc = 0x540; // UTextBlock*
		constexpr auto EquipToAllIcon = 0x548; // UWBP_KSCosmeticItemDisplay_C*
		constexpr auto Header = 0x550; // UWBP_Header1_C*
		constexpr auto WBP_ModalPopupContainer = 0x558; // UWBP_ModalPopupContainer_C*
		constexpr auto ShowEquipAllRogueCustomSelectSFX = 0x560; // UAkAudioEvent*
	}

	namespace n_UGeometryCollectionComponent {
		constexpr auto ChaosSolverActor = 0x460; // AChaosSolverActor*
		constexpr auto RestCollection = 0x548; // UGeometryCollection*
		constexpr auto InitializationFields = 0x550; // TArray<AFieldSystemActor*>
		constexpr auto Simulating = 0x560; // bool
		constexpr auto ObjectType = 0x568; // EObjectStateTypeEnum
		constexpr auto EnableClustering = 0x569; // bool
		constexpr auto ClusterGroupIndex = 0x56c; // int32_t
		constexpr auto MaxClusterLevel = 0x570; // int32_t
		constexpr auto DamageThreshold = 0x578; // TArray<float>
		constexpr auto ClusterConnectionType = 0x588; // EClusterConnectionTypeEnum
		constexpr auto CollisionGroup = 0x58c; // int32_t
		constexpr auto CollisionSampleFraction = 0x590; // float
		constexpr auto LinearEtherDrag = 0x594; // float
		constexpr auto AngularEtherDrag = 0x598; // float
		constexpr auto PhysicalMaterial = 0x5a0; // UChaosPhysicalMaterial*
		constexpr auto InitialVelocityType = 0x5a8; // EInitialVelocityTypeEnum
		constexpr auto InitialLinearVelocity = 0x5ac; // FVector
		constexpr auto InitialAngularVelocity = 0x5b8; // FVector
		constexpr auto CacheParameters = 0x5c8; // FGeomComponentCacheParameters
		constexpr auto NotifyGeometryCollectionPhysicsStateChange = 0x618; // FMulticastInlineDelegate
		constexpr auto NotifyGeometryCollectionPhysicsLoadingStateChange = 0x628; // FMulticastInlineDelegate
		constexpr auto OnChaosBreakEvent = 0x650; // FMulticastInlineDelegate
		constexpr auto DesiredCacheTime = 0x660; // float
		constexpr auto CachePlayback = 0x664; // bool
		constexpr auto OnChaosPhysicsCollision = 0x668; // FMulticastInlineDelegate
		constexpr auto bNotifyBreaks = 0x678; // bool
		constexpr auto bNotifyCollisions = 0x679; // bool
		constexpr auto DummyBodySetup = 0x858; // UBodySetup*
	}

	namespace n_UWBP_WelcomeToRankedPopup_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto Bronze = 0x528; // UWBP_RankedIcon_C*
		constexpr auto BronzeText = 0x530; // URichTextBlock*
		constexpr auto Diamond = 0x538; // UWBP_RankedIcon_C*
		constexpr auto DiamondText = 0x540; // URichTextBlock*
		constexpr auto DismissButton = 0x548; // UWBP_StandardButtonMedium_C*
		constexpr auto Gold = 0x550; // UWBP_RankedIcon_C*
		constexpr auto GoldText = 0x558; // URichTextBlock*
		constexpr auto MoreInfoButton = 0x560; // UWBP_StandardButtonMedium_C*
		constexpr auto Platinum = 0x568; // UWBP_RankedIcon_C*
		constexpr auto PlatinumText = 0x570; // URichTextBlock*
		constexpr auto RichTextBlock_80 = 0x578; // URichTextBlock*
		constexpr auto Rogue = 0x580; // UWBP_RankedIcon_C*
		constexpr auto RogueText = 0x588; // URichTextBlock*
		constexpr auto ScaleBox = 0x590; // UScaleBox*
		constexpr auto ScaleBox_2 = 0x598; // UScaleBox*
		constexpr auto ScaleBox_3 = 0x5a0; // UScaleBox*
		constexpr auto ScaleBox_4 = 0x5a8; // UScaleBox*
		constexpr auto ScaleBox_5 = 0x5b0; // UScaleBox*
		constexpr auto Silver = 0x5b8; // UWBP_RankedIcon_C*
		constexpr auto SilverText = 0x5c0; // URichTextBlock*
		constexpr auto WBP_ModalPopupContainer = 0x5c8; // UWBP_ModalPopupContainer_C*
	}

	namespace n_UKSAISense_MapPoint {
		constexpr auto RegisteredEvents = 0x80; // TArray<FKSAIMapPointStimulusEvent>
	}

	namespace n_UARBasicLightEstimate {
		constexpr auto AmbientIntensityLumens = 0x28; // float
		constexpr auto AmbientColorTemperatureKelvin = 0x2c; // float
		constexpr auto AmbientColor = 0x30; // FLinearColor
	}

	namespace n_UMovieSceneSequencePlayer {
		constexpr auto OnPlay = 0x408; // FMulticastInlineDelegate
		constexpr auto OnPlayReverse = 0x418; // FMulticastInlineDelegate
		constexpr auto OnStop = 0x428; // FMulticastInlineDelegate
		constexpr auto OnPause = 0x438; // FMulticastInlineDelegate
		constexpr auto OnFinished = 0x448; // FMulticastInlineDelegate
		constexpr auto Status = 0x458; // EMovieScenePlayerStatus
		constexpr auto bReversePlayback = 0x45c; // char : 1
		constexpr auto Sequence = 0x460; // UMovieSceneSequence*
		constexpr auto StartTime = 0x468; // FFrameNumber
		constexpr auto DurationFrames = 0x46c; // int32_t
		constexpr auto CurrentNumLoops = 0x470; // int32_t
		constexpr auto PlaybackSettings = 0x488; // FMovieSceneSequencePlaybackSettings
		constexpr auto RootTemplateInstance = 0x4a0; // FMovieSceneRootEvaluationTemplateInstance
		constexpr auto NetSyncProps = 0x828; // FMovieSceneSequenceReplProperties
		constexpr auto PlaybackClient = 0x838; // TScriptInterface<IMovieScenePlaybackClient>
	}

	namespace n_AKSWeapon_Build {
		constexpr auto OnInvalidBuildPlacementDel = 0x818; // FMulticastInlineDelegate
		constexpr auto OnValidBuildPlacementDel = 0x840; // FMulticastInlineDelegate
		constexpr auto BuildLocationOffset = 0x850; // FVector
		constexpr auto MaxAdjustBuildDistanceHorizontal = 0x85c; // float
		constexpr auto MaxAdjustBuildDistanceVertical = 0x860; // float
		constexpr auto MaxAdjustBuildDistanceOffGround = 0x864; // float
		constexpr auto BuildPreviewActor = 0x868; // AKSBuildPreview*
		constexpr auto BuildState = 0x870; // EKSBuildState
		constexpr auto OnBuildSpawned = 0x8b8; // FMulticastInlineDelegate
	}

	namespace n_AKSRoundBasedObject {
		constexpr auto SideNum = 0x228; // int32_t
		constexpr auto SkyDiverRelevanceRules = 0x22c; // ELocalRequirements
		constexpr auto SkyDiverLimit = 0x22d; // ELimitPerRound
	}

	namespace n_UAudioComponent {
		constexpr auto Sound = 0x208; // USoundBase*
		constexpr auto InstanceParameters = 0x210; // TArray<FAudioComponentParam>
		constexpr auto SoundClassOverride = 0x220; // USoundClass*
		constexpr auto bAutoDestroy = 0x228; // char : 1
		constexpr auto bStopWhenOwnerDestroyed = 0x228; // char : 1
		constexpr auto bShouldRemainActiveIfDropped = 0x228; // char : 1
		constexpr auto bAllowSpatialization = 0x228; // char : 1
		constexpr auto bOverrideAttenuation = 0x228; // char : 1
		constexpr auto bOverrideSubtitlePriority = 0x228; // char : 1
		constexpr auto bIsUISound = 0x228; // char : 1
		constexpr auto bEnableLowPassFilter = 0x228; // char : 1
		constexpr auto bOverridePriority = 0x229; // char : 1
		constexpr auto bSuppressSubtitles = 0x229; // char : 1
		constexpr auto bAutoManageAttachment = 0x22a; // char : 1
		constexpr auto AudioComponentUserID = 0x230; // FName
		constexpr auto PitchModulationMin = 0x238; // float
		constexpr auto PitchModulationMax = 0x23c; // float
		constexpr auto VolumeModulationMin = 0x240; // float
		constexpr auto VolumeModulationMax = 0x244; // float
		constexpr auto VolumeMultiplier = 0x248; // float
		constexpr auto EnvelopeFollowerAttackTime = 0x24c; // int32_t
		constexpr auto EnvelopeFollowerReleaseTime = 0x250; // int32_t
		constexpr auto Priority = 0x254; // float
		constexpr auto SubtitlePriority = 0x258; // float
		constexpr auto SourceEffectChain = 0x260; // USoundEffectSourcePresetChain*
		constexpr auto PitchMultiplier = 0x268; // float
		constexpr auto LowPassFilterFrequency = 0x26c; // float
		constexpr auto AttenuationSettings = 0x278; // USoundAttenuation*
		constexpr auto AttenuationOverrides = 0x280; // FSoundAttenuationSettings
		constexpr auto ConcurrencySettings = 0x620; // USoundConcurrency*
		constexpr auto ConcurrencySet = 0x628; // TSet<USoundConcurrency*>
		constexpr auto AutoAttachLocationRule = 0x684; // EAttachmentRule
		constexpr auto AutoAttachRotationRule = 0x685; // EAttachmentRule
		constexpr auto AutoAttachScaleRule = 0x686; // EAttachmentRule
		constexpr auto OnAudioFinished = 0x688; // FMulticastInlineDelegate
		constexpr auto OnAudioPlaybackPercent = 0x6b0; // FMulticastInlineDelegate
		constexpr auto OnAudioSingleEnvelopeValue = 0x6d8; // FMulticastInlineDelegate
		constexpr auto OnAudioMultiEnvelopeValue = 0x700; // FMulticastInlineDelegate
		constexpr auto Modulation = 0x728; // FSoundModulation
		constexpr auto OnQueueSubtitles = 0x738; // FDelegate
		constexpr auto AutoAttachParent = 0x748; // TWeakObjectPtr<USceneComponent>
		constexpr auto AutoAttachSocketName = 0x750; // FName
	}

	namespace n_ATextRenderActor {
		constexpr auto TextRender = 0x220; // UTextRenderComponent*
	}

	namespace n_UQosRegionManager {
		constexpr auto NumTestsPerRegion = 0x28; // int32_t
		constexpr auto PingTimeout = 0x2c; // float
		constexpr auto RegionDefinitions = 0x30; // TArray<FQosRegionInfo>
		constexpr auto DatacenterDefinitions = 0x40; // TArray<FQosDatacenterInfo>
		constexpr auto LastCheckTimestamp = 0x50; // FDateTime
		constexpr auto Evaluator = 0x58; // UQosEvaluator*
		constexpr auto QosEvalResult = 0x60; // EQosCompletionResult
		constexpr auto RegionOptions = 0x68; // TArray<FRegionQosInstance>
		constexpr auto ForceRegionId = 0x78; // FString
		constexpr auto bRegionForcedViaCommandline = 0x88; // bool
		constexpr auto SelectedRegionId = 0x90; // FString
	}

	namespace n_UWBP_ReactiveWrapStepPreview_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto ShowReactiveWrapInfo = 0x240; // UWidgetAnimation*
		constexpr auto Gradient = 0x248; // UImage*
		constexpr auto Image_303 = 0x250; // UImage*
		constexpr auto ReactiveWrapDesc = 0x258; // UBorder*
		constexpr auto Text = 0x260; // UTextBlock*
	}

	namespace n_UPopupButton_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto Hover = 0x528; // UWidgetAnimation*
		constexpr auto background = 0x530; // UImage*
		constexpr auto Button = 0x538; // UButton*
		constexpr auto ButtonCallout = 0x540; // USizeBox*
		constexpr auto ButtonCalloutImage = 0x548; // UImage*
		constexpr auto DisplayTextBlock = 0x550; // UTextBlock*
		constexpr auto HoverImage = 0x558; // UImage*
		constexpr auto ButtonText = 0x560; // FText
		constexpr auto ButtonColor = 0x578; // FLinearColor
		constexpr auto Index = 0x588; // int32_t
		constexpr auto OnClicked = 0x590; // FMulticastInlineDelegate
		constexpr auto OnNavigateBackAction = 0x5a0; // FMulticastInlineDelegate
		constexpr auto CapturesNavBack = 0x5b0; // bool
		constexpr auto DisableClickSound = 0x5b1; // bool
		constexpr auto NavBackPopupBtnSFX = 0x5b8; // UAkAudioEvent*
		constexpr auto ClickPopupBtnSFX = 0x5c0; // UAkAudioEvent*
		constexpr auto HoverPopupBtnSFX = 0x5c8; // UAkAudioEvent*
	}

	namespace n_UKSActivityRequirement_ContractActive {
		constexpr auto ContractItems = 0x30; // TArray<UKSContainerItem_Item*>
	}

	namespace n_UBoxComponent {
		constexpr auto BoxExtent = 0x448; // FVector
		constexpr auto LineThickness = 0x454; // float
	}

	namespace n_AVolumetricLightmapDensityVolume {
		constexpr auto AllowedMipLevelRange = 0x258; // FInt32Interval
	}

	namespace n_UMaterialExpressionFontSampleParameter {
		constexpr auto ParameterName = 0x50; // FName
		constexpr auto ExpressionGUID = 0x58; // FGuid
		constexpr auto Group = 0x68; // FName
	}

	namespace n_UKSDataBatchInviteSetup {
		constexpr auto OnSelect = 0x78; // FDelegate
	}

	namespace n_UKSToastNotificationWidgetBase {
		constexpr auto OnToastReceived = 0x520; // FMulticastInlineDelegate
		constexpr auto MaxToastNotification = 0x530; // int32_t
		constexpr auto CurrentToastCount = 0x534; // int32_t
		constexpr auto IsBusy = 0x538; // bool
		constexpr auto ToastQueue = 0x540; // TArray<FToastData>
		constexpr auto PostMatchToasts = 0x550; // TArray<FToastData>
	}

	namespace n_UKSPlayerMod_HealOnEvent {
		constexpr auto bHealUpTo = 0x330; // bool
		constexpr auto bHealAsPercentage = 0x331; // bool
		constexpr auto HealthPercentage = 0x334; // float
		constexpr auto HealthAmount = 0x338; // float
		constexpr auto HealDelay = 0x33c; // float
		constexpr auto HealPeriod = 0x340; // float
		constexpr auto HealTickCount = 0x344; // int32_t
		constexpr auto bFirstTickImmediately = 0x348; // bool
	}

	namespace n_UBTDecorator_CompareBBEntries {
		constexpr auto Operator = 0x68; // EBlackBoardEntryComparison
		constexpr auto BlackboardKeyA = 0x70; // FBlackboardKeySelector
		constexpr auto BlackboardKeyB = 0x98; // FBlackboardKeySelector
	}

	namespace n_UNiagaraRibbonRendererProperties {
		constexpr auto Material = 0x50; // UMaterialInterface*
		constexpr auto MaterialUserParamBinding = 0x58; // FNiagaraUserParameterBinding
		constexpr auto FacingMode = 0x80; // ENiagaraRibbonFacingMode
		constexpr auto UV0TilingDistance = 0x84; // float
		constexpr auto UV0Scale = 0x88; // FVector2D
		constexpr auto UV0Offset = 0x90; // FVector2D
		constexpr auto UV0AgeOffsetMode = 0x98; // ENiagaraRibbonAgeOffsetMode
		constexpr auto UV1TilingDistance = 0x9c; // float
		constexpr auto UV1Scale = 0xa0; // FVector2D
		constexpr auto UV1Offset = 0xa8; // FVector2D
		constexpr auto UV1AgeOffsetMode = 0xb0; // ENiagaraRibbonAgeOffsetMode
		constexpr auto DrawDirection = 0xb1; // ENiagaraRibbonDrawDirection
		constexpr auto CurveTension = 0xb4; // float
		constexpr auto TessellationMode = 0xb8; // ENiagaraRibbonTessellationMode
		constexpr auto TessellationFactor = 0xbc; // int32_t
		constexpr auto bUseConstantFactor = 0xc0; // bool
		constexpr auto TessellationAngle = 0xc4; // float
		constexpr auto bScreenSpaceTessellation = 0xc8; // bool
		constexpr auto PositionBinding = 0xd0; // FNiagaraVariableAttributeBinding
		constexpr auto ColorBinding = 0x148; // FNiagaraVariableAttributeBinding
		constexpr auto VelocityBinding = 0x1c0; // FNiagaraVariableAttributeBinding
		constexpr auto NormalizedAgeBinding = 0x238; // FNiagaraVariableAttributeBinding
		constexpr auto RibbonTwistBinding = 0x2b0; // FNiagaraVariableAttributeBinding
		constexpr auto RibbonWidthBinding = 0x328; // FNiagaraVariableAttributeBinding
		constexpr auto RibbonFacingBinding = 0x3a0; // FNiagaraVariableAttributeBinding
		constexpr auto RibbonIdBinding = 0x418; // FNiagaraVariableAttributeBinding
		constexpr auto RibbonLinkOrderBinding = 0x490; // FNiagaraVariableAttributeBinding
		constexpr auto MaterialRandomBinding = 0x508; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterialBinding = 0x580; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial1Binding = 0x5f8; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial2Binding = 0x670; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial3Binding = 0x6e8; // FNiagaraVariableAttributeBinding
	}

	namespace n_UMaterialExpressionSpeedTree {
		constexpr auto GeometryInput = 0x40; // FExpressionInput
		constexpr auto WindInput = 0x54; // FExpressionInput
		constexpr auto LODInput = 0x68; // FExpressionInput
		constexpr auto ExtraBendWS = 0x7c; // FExpressionInput
		constexpr auto GeometryType = 0x90; // ESpeedTreeGeometryType
		constexpr auto WindType = 0x91; // ESpeedTreeWindType
		constexpr auto LODType = 0x92; // ESpeedTreeLODType
		constexpr auto BillboardThreshold = 0x94; // float
		constexpr auto bAccurateWindVelocities = 0x98; // bool
	}

	namespace n_UWBP_ModuleHeader_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto Bar = 0x528; // UImage*
		constexpr auto HeaderText = 0x530; // UTextBlock*
		constexpr auto Text = 0x538; // FText
	}

	namespace n_UKSModInst_OnDamageOther {
		constexpr auto MinimumDamage = 0x1b8; // float
		constexpr auto bUseActualDamageDone = 0x1bc; // bool
		constexpr auto ValidDamageCategories = 0x1c0; // TArray<EDamageCategory>
	}

	namespace n_USubmixEffectFlexiverbPreset {
		constexpr auto Settings = 0x78; // FSubmixEffectFlexiverbSettings
	}

	namespace n_UAssetMappingTable {
		constexpr auto MappedAssets = 0x28; // TArray<FAssetMapping>
	}

	namespace n_ULeaderboardFlushCallbackProxy {
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UIpNetDriver {
		constexpr auto LogPortUnreach = 0x778; // char : 1
		constexpr auto AllowPlayerPortUnreach = 0x778; // char : 1
		constexpr auto MaxPortCountToTry = 0x77c; // uint32_t
		constexpr auto ServerDesiredSocketReceiveBufferBytes = 0x78c; // uint32_t
		constexpr auto ServerDesiredSocketSendBufferBytes = 0x790; // uint32_t
		constexpr auto ClientDesiredSocketReceiveBufferBytes = 0x794; // uint32_t
		constexpr auto ClientDesiredSocketSendBufferBytes = 0x798; // uint32_t
		constexpr auto MaxSecondsInReceive = 0x7a0; // double
		constexpr auto NbPacketsBetweenReceiveTimeTest = 0x7a8; // int32_t
		constexpr auto ResolutionConnectionTimeout = 0x7ac; // float
	}

	namespace n_UAnimCompress {
		constexpr auto bNeedsSkeleton = 0x38; // char : 1
		constexpr auto TranslationCompressionFormat = 0x3c; // AnimationCompressionFormat
		constexpr auto RotationCompressionFormat = 0x3d; // AnimationCompressionFormat
		constexpr auto ScaleCompressionFormat = 0x3e; // AnimationCompressionFormat
	}

	namespace n_UMaterialExpressionPreviousFrameSwitch {
		constexpr auto CurrentFrame = 0x40; // FExpressionInput
		constexpr auto PreviousFrame = 0x54; // FExpressionInput
	}

	namespace n_UKSPlayerMod_Hacking {
		constexpr auto HackSpeedMultiplier = 0x330; // float
		constexpr auto DehackSpeedMultiplier = 0x334; // float
	}

	namespace n_UParticleModuleMeshRotation {
		constexpr auto StartRotation = 0x30; // FRawDistributionVector
		constexpr auto bInheritParent = 0x78; // char : 1
	}

	namespace n_UToIntegerField {
		constexpr auto FloatField = 0xb0; // UFieldNodeFloat*
	}

	namespace n_UWBP_ItemInfoContainer_Centered_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto Show = 0x240; // UWidgetAnimation*
		constexpr auto ItemNameBG = 0x248; // UImage*
		constexpr auto ItemNameBG_2 = 0x250; // UImage*
		constexpr auto ItemNameField = 0x258; // UTextBlock*
		constexpr auto ItemRaritySwatch = 0x260; // UImage*
		constexpr auto RarityRichText = 0x268; // URichTextBlock*
		constexpr auto Current Item Type Text = 0x270; // FText
		constexpr auto Current Rarity Format Text = 0x288; // FText
		constexpr auto Current IsCurrency = 0x2a0; // bool
	}

	namespace n_UMaterialExpressionVectorNoise {
		constexpr auto Position = 0x40; // FExpressionInput
		constexpr auto NoiseFunction = 0x54; // EVectorNoiseFunction
		constexpr auto Quality = 0x58; // int32_t
		constexpr auto bTiling = 0x5c; // char : 1
		constexpr auto TileSize = 0x60; // uint32_t
	}

	namespace n_UVectorFieldAnimated {
		constexpr auto Texture = 0x48; // UTexture2D*
		constexpr auto ConstructionOp = 0x50; // EVectorFieldConstructionOp
		constexpr auto VolumeSizeX = 0x54; // int32_t
		constexpr auto VolumeSizeY = 0x58; // int32_t
		constexpr auto VolumeSizeZ = 0x5c; // int32_t
		constexpr auto SubImagesX = 0x60; // int32_t
		constexpr auto SubImagesY = 0x64; // int32_t
		constexpr auto FrameCount = 0x68; // int32_t
		constexpr auto FramesPerSecond = 0x6c; // float
		constexpr auto bLoop = 0x70; // char : 1
		constexpr auto NoiseField = 0x78; // UVectorFieldStatic*
		constexpr auto NoiseScale = 0x80; // float
		constexpr auto NoiseMax = 0x84; // float
	}

	namespace n_UKSActivityRewardCondition_DistanceSprinted {
		constexpr auto MinDistanceSprinted = 0x30; // float
		constexpr auto MaxDistanceSprinted = 0x34; // float
	}

	namespace n_AKSEquipment {
		constexpr auto bInitialized = 0x220; // bool
		constexpr auto EquipInfo = 0x224; // FKSEquipRepInfo
		constexpr auto EquipmentManagerOwner = 0x250; // TScriptInterface<IKSEquipmentManagerOwner>
		constexpr auto EquipmentManagerComponent = 0x260; // UKSEquipmentManagerComponent*
		constexpr auto GiveParameters = 0x280; // FGiveItemParameters
		constexpr auto EquipmentId = 0x2b0; // uint16_t
		constexpr auto EquipmentCosmeticComponent = 0x2b8; // UKSEquipmentCosmeticComponent*
		constexpr auto OnCosmeticComponentCreated = 0x2c8; // FMulticastInlineDelegate
	}

	namespace n_UAkXSXInitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettings
		constexpr auto ApuHeapSettings = 0x88; // FAkXSXApuHeapInitializationSettings
		constexpr auto CommunicationSettings = 0x90; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xb8; // FAkXSXAdvancedInitializationSettings
	}

	namespace n_UMaterialExpressionShadingPathSwitch {
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto Inputs = 0x54; // FExpressionInput [0x3]
	}

	namespace n_UDistributionVectorUniform {
		constexpr auto Max = 0x38; // FVector
		constexpr auto Min = 0x44; // FVector
		constexpr auto bLockAxes = 0x50; // char : 1
		constexpr auto LockedAxes = 0x54; // EDistributionVectorLockFlags
		constexpr auto MirrorFlags = 0x55; // EDistributionVectorMirrorFlags [0x3]
		constexpr auto bUseExtremes = 0x58; // char : 1
	}

	namespace n_UGridPathFollowingComponent {
		constexpr auto GridManager = 0x258; // UNavLocalGridManager*
	}

	namespace n_UTimeSynchronizationSource {
		constexpr auto bUseForSynchronization = 0x28; // bool
		constexpr auto FrameOffset = 0x2c; // int32_t
	}

	namespace n_ANavigationTestingActor {
		constexpr auto CapsuleComponent = 0x230; // UCapsuleComponent*
		constexpr auto InvokerComponent = 0x238; // UNavigationInvokerComponent*
		constexpr auto bActAsNavigationInvoker = 0x240; // char : 1
		constexpr auto NavAgentProps = 0x248; // FNavAgentProperties
		constexpr auto QueryingExtent = 0x278; // FVector
		constexpr auto MyNavData = 0x288; // ANavigationData*
		constexpr auto ProjectedLocation = 0x290; // FVector
		constexpr auto bProjectedLocationValid = 0x29c; // char : 1
		constexpr auto bSearchStart = 0x29c; // char : 1
		constexpr auto CostLimitFactor = 0x2a0; // float
		constexpr auto MinimumCostLimit = 0x2a4; // float
		constexpr auto bBacktracking = 0x2a8; // char : 1
		constexpr auto bUseHierarchicalPathfinding = 0x2a8; // char : 1
		constexpr auto bGatherDetailedInfo = 0x2a8; // char : 1
		constexpr auto bDrawDistanceToWall = 0x2a8; // char : 1
		constexpr auto bShowNodePool = 0x2a8; // char : 1
		constexpr auto bShowBestPath = 0x2a8; // char : 1
		constexpr auto bShowDiffWithPreviousStep = 0x2a8; // char : 1
		constexpr auto bShouldBeVisibleInGame = 0x2a8; // char : 1
		constexpr auto CostDisplayMode = 0x2ac; // ENavCostDisplay
		constexpr auto TextCanvasOffset = 0x2b0; // FVector2D
		constexpr auto bPathExist = 0x2b8; // char : 1
		constexpr auto bPathIsPartial = 0x2b8; // char : 1
		constexpr auto bPathSearchOutOfNodes = 0x2b8; // char : 1
		constexpr auto PathfindingTime = 0x2bc; // float
		constexpr auto PathCost = 0x2c0; // float
		constexpr auto PathfindingSteps = 0x2c4; // int32_t
		constexpr auto OtherActor = 0x2c8; // ANavigationTestingActor*
		constexpr auto FilterClass = 0x2d0; // UNavigationQueryFilter*
		constexpr auto ShowStepIndex = 0x2d8; // int32_t
		constexpr auto OffsetFromCornersDistance = 0x2dc; // float
	}

	namespace n_UWBP_SettingsEntryList_C {
		constexpr auto UberGraphFrame = 0x578; // FPointerToUberGraphFrame
		constexpr auto Overlay_56 = 0x580; // UOverlay*
		constexpr auto DropdownList = 0x588; // UDropdownList_C*
		constexpr auto OnSelection = 0x590; // FMulticastInlineDelegate
	}

	namespace n_UKSPerkTreeEdgeBase {
		constexpr auto bTopEnabled = 0x520; // bool
		constexpr auto bLeftEnabled = 0x521; // bool
		constexpr auto bDiagonalEnabled = 0x522; // bool
		constexpr auto bBackDiagonalEnabled = 0x523; // bool
		constexpr auto AccentColor = 0x524; // FLinearColor
	}

	namespace n_AKSLootSitePowerUp {
		constexpr auto PossibleLoot = 0x348; // TArray<FLootSiteDropInfo>
	}

	namespace n_UARFaceGeometry {
		constexpr auto LookAtTarget = 0xe8; // FVector
		constexpr auto bIsTracked = 0xf4; // bool
		constexpr auto BlendShapes = 0xf8; // TMap<EARFaceBlendShape, float>
	}

	namespace n_UKSPlayerMod_DamageDealt {
		constexpr auto DamageDealtMultiplier = 0x330; // float
		constexpr auto SlowedDamageDealtMultiplier = 0x334; // float
		constexpr auto DeployableDamageDealtMultiplier = 0x338; // float
		constexpr auto bRequireHeadshot = 0x33c; // bool
		constexpr auto ValidDamageTypes = 0x340; // TArray<UDamageType*>
	}

	namespace n_AKSAgent_RevivalDrone {
		constexpr auto OnArrive = 0x388; // FMulticastInlineDelegate
		constexpr auto MaxFlightSpeed = 0x398; // float
		constexpr auto InvisibleMovementTime = 0x39c; // float
		constexpr auto ReviveTime = 0x3a0; // float
		constexpr auto ReviveHealth = 0x3a4; // float
		constexpr auto bDroneVisibility = 0x3a8; // bool
		constexpr auto bDroneVulnerability = 0x3a9; // bool
		constexpr auto bOngoingReviveEffectsActive = 0x3aa; // bool
		constexpr auto TargetCharacter = 0x3ac; // TWeakObjectPtr<AKSCharacter>
		constexpr auto MovementStage = 0x3b4; // EReviveDroneState
		constexpr auto FlightPath = 0x3b5; // EReviveDroneFlightPath
		constexpr auto PreferredHoverHeight = 0x3b8; // float
		constexpr auto TransitHeight = 0x3bc; // float
		constexpr auto HoverCorrectionTime = 0x3c0; // float
		constexpr auto DepartureHeight = 0x3c4; // float
		constexpr auto bUseCustomReviveTime = 0x3c8; // bool
		constexpr auto CustomReviveTime = 0x3cc; // float
		constexpr auto bInheritReviveTimeMods = 0x3d0; // bool
		constexpr auto DrawOutline = 0x3d1; // bool
		constexpr auto OutlineStencilColor = 0x3d2; // char
		constexpr auto ApplyOnReleaseMod = 0x3d8; // UKSPlayerMod*
		constexpr auto bDrawEnemyDroneOutline = 0x3e8; // bool
		constexpr auto StimuliSourceComponent = 0x3f0; // UKSItemStimuliSourceComponent*
	}

	namespace n_UWBP_ThrobberHorizontal_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto Cycle = 0x240; // UWidgetAnimation*
		constexpr auto Diamond = 0x248; // UImage*
		constexpr auto Diamond_2 = 0x250; // UImage*
		constexpr auto Diamond_3 = 0x258; // UImage*
		constexpr auto ThrobberBox = 0x260; // UHorizontalBox*
	}

	namespace n_UKSPayBackTracker {
		constexpr auto PlayerElimTracker = 0xa0; // TArray<FTrackPlayerElim>
	}

	namespace n_UBehaviorTreeComponent {
		constexpr auto NodeInstances = 0x130; // TArray<UBTNode*>
		constexpr auto DefaultBehaviorTreeAsset = 0x268; // UBehaviorTree*
	}

	namespace n_UBTTaskNode {
		constexpr auto Services = 0x58; // TArray<UBTService*>
		constexpr auto bIgnoreRestartSelf = 0x68; // char : 1
	}

	namespace n_UNiagaraDataInterfaceAudioOscilloscope {
		constexpr auto Submix = 0x30; // USoundSubmix*
		constexpr auto Resolution = 0x38; // int32_t
		constexpr auto ScopeInMilliseconds = 0x3c; // float
	}

	namespace n_AEmoteSoundManager_C {
		constexpr auto DefaultSceneRoot = 0x260; // USceneComponent*
	}

	namespace n_UMaterialInstance {
		constexpr auto PhysMaterial = 0x88; // UPhysicalMaterial*
		constexpr auto PhysicalMaterialMap = 0x90; // UPhysicalMaterial* [0x8]
		constexpr auto Parent = 0xd0; // UMaterialInterface*
		constexpr auto bHasStaticPermutationResource = 0xd8; // char : 1
		constexpr auto bOverrideSubsurfaceProfile = 0xd8; // char : 1
		constexpr auto ScalarParameterValues = 0xe0; // TArray<FScalarParameterValue>
		constexpr auto VectorParameterValues = 0xf0; // TArray<FVectorParameterValue>
		constexpr auto TextureParameterValues = 0x100; // TArray<FTextureParameterValue>
		constexpr auto RuntimeVirtualTextureParameterValues = 0x110; // TArray<FRuntimeVirtualTextureParameterValue>
		constexpr auto FontParameterValues = 0x120; // TArray<FFontParameterValue>
		constexpr auto BasePropertyOverrides = 0x130; // FMaterialInstanceBasePropertyOverrides
		constexpr auto StaticParameters = 0x148; // FStaticParameterSet
		constexpr auto CachedLayerParameters = 0x188; // FMaterialCachedParameters
		constexpr auto CachedReferencedTextures = 0x328; // TArray<UObject*>
	}

	namespace n_UKSWidgetInfoComponent {
		constexpr auto WidgetParamsToCreate = 0xb0; // TArray<FKSWidgetInfoParams>
	}

	namespace n_UKSActivityRewardCondition_WeaponEquippedByVictim {
		constexpr auto MatchingWeapons = 0x30; // TArray<TSoftObjectPtr<UKSItem>>
	}

	namespace n_UBTService_DefaultFocus {
		constexpr auto FocusPriority = 0x98; // char
	}

	namespace n_UMaterialFunctionInterface {
		constexpr auto StateId = 0x28; // FGuid
		constexpr auto MaterialFunctionUsage = 0x38; // EMaterialFunctionUsage
	}

	namespace n_ALevelSequenceActor {
		constexpr auto PlaybackSettings = 0x230; // FMovieSceneSequencePlaybackSettings
		constexpr auto SequencePlayer = 0x248; // ULevelSequencePlayer*
		constexpr auto LevelSequence = 0x250; // FSoftObjectPath
		constexpr auto AdditionalEventReceivers = 0x268; // TArray<AActor*>
		constexpr auto CameraSettings = 0x278; // FLevelSequenceCameraSettings
		constexpr auto BurnInOptions = 0x280; // ULevelSequenceBurnInOptions*
		constexpr auto BindingOverrides = 0x288; // UMovieSceneBindingOverrides*
		constexpr auto bAutoPlay = 0x290; // char : 1
		constexpr auto bOverrideInstanceData = 0x290; // char : 1
		constexpr auto bReplicatePlayback = 0x290; // char : 1
		constexpr auto DefaultInstanceData = 0x298; // UObject*
		constexpr auto BurnInInstance = 0x2a0; // ULevelSequenceBurnIn*
		constexpr auto bShowBurnin = 0x2a8; // bool
	}

	namespace n_UANotifyState_HideUplineDevice_C {
		constexpr auto Keep ZiplineVisible = 0x30; // bool
		constexpr auto bKeepGadgetUnhidden = 0x31; // bool
	}

	namespace n_UWBP_Header2_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto Decro = 0x240; // UImage*
		constexpr auto Text = 0x248; // UTextBlock*
		constexpr auto TextValue = 0x250; // FText
		constexpr auto Justification = 0x268; // ETextJustify
	}

	namespace n_AKSLagCompensatedActor {
		constexpr auto RealActor = 0x220; // AKSLagCompensatedActor*
		constexpr auto FakeActor = 0x228; // AKSLagCompensatedActor*
		constexpr auto PredictedSpawnTimeoutTime = 0x230; // float
		constexpr auto bDestroyFakeOnYieldToReal = 0x234; // bool
		constexpr auto DefaultTeamNum = 0x238; // int32_t
		constexpr auto InstigatorId = 0x240; // FSerializedMctsNetId
		constexpr auto LagCompActorID = 0x248; // uint64_t
	}

	namespace n_UPUMG_LoadoutDataFactory {
		constexpr auto OnLoadoutsInitialized = 0x30; // FMulticastInlineDelegate
		constexpr auto OnLoadoutsUpdatedFromServer = 0x40; // FMulticastInlineDelegate
		constexpr auto OnLoadoutFactoryReadyNoLoadouts = 0x50; // FMulticastInlineDelegate
		constexpr auto OnLoadoutChanged = 0x60; // FMulticastInlineDelegate
		constexpr auto OnLoadoutAdded = 0x70; // FMulticastInlineDelegate
		constexpr auto OnLoadoutDeleted = 0x80; // FMulticastInlineDelegate
		constexpr auto Loadouts = 0x98; // TArray<UPUMG_Loadout*>
	}

	namespace n_UMaterialExpressionTextureProperty {
		constexpr auto TextureObject = 0x40; // FExpressionInput
		constexpr auto Property = 0x54; // EMaterialExposedTextureProperty
	}

	namespace n_UNavLinkDefinition {
		constexpr auto Links = 0x28; // TArray<FNavigationLink>
		constexpr auto SegmentLinks = 0x38; // TArray<FNavigationSegmentLink>
	}

	namespace n_UKSActivityRewardCondition_TimeSinceHeadshot {
		constexpr auto MinSecondsSinceLastHeadshot = 0x30; // float
		constexpr auto MaxSecondsSinceLastHeadshot = 0x34; // float
		constexpr auto SucceedIfNeverHeadshot = 0x38; // bool
	}

	namespace n_UEnvQueryGenerator_CurrentLocation {
		constexpr auto QueryContext = 0x50; // UEnvQueryContext*
	}

	namespace n_UWBP_RogueMasteryPanel_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto RefreshRewardList = 0x528; // UWidgetAnimation*
		constexpr auto RefreshPreview = 0x530; // UWidgetAnimation*
		constexpr auto FinalPrestigeText = 0x538; // UTextBlock*
		constexpr auto ItemPreviewStack = 0x540; // UWBP_ItemPreviewStack_C*
		constexpr auto MasteryPortraitPreview = 0x548; // UWBP_RogueMasteryPortrait_C*
		constexpr auto MasteryTrack = 0x550; // UWBP_RogueMasteryPanelTrack_C*
		constexpr auto RewardDisplaySwitcher = 0x558; // UWidgetSwitcher*
		constexpr auto RewardItemList = 0x560; // UVerticalBox*
		constexpr auto WBP_RoguePanelHeader = 0x568; // UWBP_RoguePanelHeader_C*
		constexpr auto RewardItems = 0x570; // TArray<UWBP_ListButton_Cosmetic_C*>
		constexpr auto CurrentMasteryLevel = 0x580; // int32_t
		constexpr auto CurrentMasteryXP = 0x584; // int32_t
		constexpr auto MaxRegularLevel = 0x588; // int32_t
		constexpr auto PreviewedReward = 0x590; // FMasteryRewardData
		constexpr auto MercMasteryActivityInstance = 0x5a0; // UKSActivityInstance*
		constexpr auto JobItem = 0x5a8; // UKSJobItem*
		constexpr auto MyFocusGroup = 0x5b0; // int32_t
		constexpr auto NavParent = 0x5b8; // UKSWidget*
		constexpr auto HasGamepadFocus = 0x5c0; // bool
		constexpr auto SelectedReward = 0x5c8; // UWidget*
		constexpr auto OnNavLeftFailed = 0x5d0; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionArcsine {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UKSPlayerMod_DisableUI {
		constexpr auto DisableGrenadeFailurePrompt = 0x330; // FKSPlayerModOverridePropertyStatBool
	}

	namespace n_ULoginExisting_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto MobileLayout = 0x528; // UWidgetAnimation*
		constexpr auto ActionText = 0x530; // UTextBlock*
		constexpr auto AnonLoginButton = 0x538; // UButton*
		constexpr auto AnonLoginPromptGamepad = 0x540; // UGamepadPromptBasic_C*
		constexpr auto AnonLoginPromptMouse = 0x548; // UGamepadPromptBasic_C*
		constexpr auto AnonLoginPromptSwitcher = 0x550; // UWidgetSwitcher*
		constexpr auto bkg = 0x558; // UImage*
		constexpr auto change_user_prompt = 0x560; // UHorizontalBox*
		constexpr auto ConsoleLoginPrompt = 0x568; // UWBP_KeyCallout_C*
		constexpr auto ErrorCode = 0x570; // UTextBlock*
		constexpr auto ErrorWrapper = 0x578; // UHorizontalBox*
		constexpr auto Gradient = 0x580; // UImage*
		constexpr auto highlightborder = 0x588; // UImage*
		constexpr auto hirez_logo = 0x590; // UImage*
		constexpr auto Image_47 = 0x598; // UImage*
		constexpr auto Image_531 = 0x5a0; // UImage*
		constexpr auto Image_607 = 0x5a8; // UImage*
		constexpr auto Image_610 = 0x5b0; // UImage*
		constexpr auto login_prompt_wrapper = 0x5b8; // UHorizontalBox*
		constexpr auto LoginAsGamertagText = 0x5c0; // UTextBlock*
		constexpr auto LoginDownloadProgressBar = 0x5c8; // ULoginDownloadProgressBar_C*
		constexpr auto LoginInterfaceAnonymous = 0x5d0; // UCanvasPanel*
		constexpr auto LoginInterfaceApple = 0x5d8; // UCanvasPanel*
		constexpr auto LoginInterfaceConsole = 0x5e0; // UCanvasPanel*
		constexpr auto LoginInterfacePC = 0x5e8; // UCanvasPanel*
		constexpr auto LoginInterfaceSwitcher = 0x5f0; // UWidgetSwitcher*
		constexpr auto LoginPrompt = 0x5f8; // UTextBlock*
		constexpr auto Password_Required_Msg = 0x600; // UTextBlock*
		constexpr auto PasswordError = 0x608; // UWBP_error_report_C*
		constexpr auto PasswordField = 0x610; // UEditableTextBox*
		constexpr auto PCCreateButton = 0x618; // UPopupButton_C*
		constexpr auto PCLoginButton = 0x620; // UPopupButton_C*
		constexpr auto PCPassword = 0x628; // UOutlineContainer_C*
		constexpr auto PCUsername = 0x630; // UOutlineContainer_C*
		constexpr auto roco_logo = 0x638; // UImage*
		constexpr auto SignInWithAppleButton = 0x640; // UButton*
		constexpr auto SIWA_Icon = 0x648; // UImage*
		constexpr auto Username_Required_Msg = 0x650; // UTextBlock*
		constexpr auto UsernameError = 0x658; // UWBP_error_report_C*
		constexpr auto UsernameField = 0x660; // UEditableTextBox*
		constexpr auto VersionDisplay = 0x668; // UTextBlock*
		constexpr auto WarningIcon = 0x670; // UImage*
		constexpr auto WarningText = 0x678; // UTextBlock*
		constexpr auto WBP_EpilepsyWarning = 0x680; // UWBP_EpilepsyWarning_C*
		constexpr auto WBP_GameNotification = 0x688; // UWBP_GameNotification_C*
		constexpr auto WBP_text_button_C_1 = 0x690; // UWBP_text_button_C*
		constexpr auto WBP_text_button_C_2 = 0x698; // UWBP_text_button_C*
		constexpr auto XboxCalloutWrapper = 0x6a0; // UButton*
		constexpr auto XboxChangeUserPrompt = 0x6a8; // UWBP_KeyCallout_C*
		constexpr auto LoginDataFac = 0x6b0; // UPUMG_LoginDataFactory*
		constexpr auto FirstLogin = 0x6b8; // bool
		constexpr auto ProfileChangeAction = 0x6bc; // FName
	}

	namespace n_UKSBTD_GameState {
		constexpr auto bCheckMatchInProgress = 0x68; // bool
		constexpr auto MatchInProgress = 0x69; // EBasicKeyOperation
		constexpr auto bCheckInSetup = 0x6a; // bool
		constexpr auto InSetup = 0x6b; // EBasicKeyOperation
		constexpr auto bCheckMatchPhase = 0x6c; // bool
		constexpr auto MatchPhase = 0x6d; // EBasicKeyOperation
		constexpr auto MatchPhaseName = 0x70; // FName
	}

	namespace n_UMaterialExpressionCosine {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Period = 0x54; // float
	}

	namespace n_UMaterialExpressionCurveAtlasRowParameter {
		constexpr auto Curve = 0x60; // UCurveLinearColor*
		constexpr auto Atlas = 0x68; // UCurveLinearColorAtlas*
		constexpr auto InputTime = 0x70; // FExpressionInput
	}

	namespace n_UKSPlayerMod_Revive {
		constexpr auto ReviveTimeMultiplier = 0x330; // float
		constexpr auto bHasTextOverride = 0x334; // bool
		constexpr auto ReviveText = 0x338; // FText
		constexpr auto ReviveInteractionMode = 0x350; // FName
		constexpr auto HealChargeMultiplier = 0x358; // float
	}

	namespace n_UWBP_Challenge_Renderer_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto ShowHover = 0x528; // UWidgetAnimation*
		constexpr auto rotating_arrows = 0x530; // UWidgetAnimation*
		constexpr auto btnStroke1px = 0x538; // UImage*
		constexpr auto ChallengeDescription = 0x540; // UTextBlock*
		constexpr auto ChallengeDisplayMode = 0x548; // UWidgetSwitcher*
		constexpr auto ChallengeProgress = 0x550; // UTextBlock*
		constexpr auto CheckMark = 0x558; // UImage*
		constexpr auto HitTarget = 0x560; // UButton*
		constexpr auto HoverButton = 0x568; // UButton*
		constexpr auto ProgressBar = 0x570; // UWBP_ProgressBar_C*
		constexpr auto RerollArrows = 0x578; // UImage*
		constexpr auto RerollButton = 0x580; // UButton*
		constexpr auto RerollIndicator = 0x588; // UCanvasPanel*
		constexpr auto RewardImageSwitcher = 0x590; // UWidgetSwitcher*
		constexpr auto RewardImageWithoutQty = 0x598; // UKSAsyncImage*
		constexpr auto RewardImageWithQty = 0x5a0; // UKSAsyncImage*
		constexpr auto RewardQty = 0x5a8; // UTextBlock*
		constexpr auto SelectionFrame = 0x5b0; // UImage*
		constexpr auto Stroke1px_2 = 0x5b8; // UImage*
		constexpr auto ChallengeActivityInstance = 0x5c0; // UKSActivityInstance*
		constexpr auto DisplayRerollPrompt = 0x5c8; // FMulticastInlineDelegate
		constexpr auto HoverChallegeRendererSFX = 0x5d8; // UAkAudioEvent*
		constexpr auto ClickRefreshChallegeRendererSFX = 0x5e0; // UAkAudioEvent*
	}

	namespace n_UWidgetAnimation {
		constexpr auto MovieScene = 0x348; // UMovieScene*
		constexpr auto AnimationBindings = 0x350; // TArray<FWidgetAnimationBinding>
		constexpr auto bLegacyFinishOnStop = 0x360; // bool
		constexpr auto DisplayLabel = 0x368; // FString
	}

	namespace n_UMapBuildDataRegistry {
		constexpr auto LevelLightingQuality = 0x28; // ELightingBuildQuality
		constexpr auto LightingScenarioQuality = 0x29; // ELightingScenarioQuality
		constexpr auto bIsDataStripped = 0x2a; // bool
	}

	namespace n_UNiagaraDataInterfaceSpline {
		constexpr auto Source = 0x30; // AActor*
	}

	namespace n_USkinnableMergedMeshComponent {
		constexpr auto OnMeshMergeComplete = 0xcf8; // FMulticastInlineDelegate
		constexpr auto CompositeSkeletalMeshKeywords = 0xd08; // TArray<FName>
		constexpr auto bAlwaysUseTheFailsafeMeshWhileMerging = 0xd18; // bool
		constexpr auto MeshNeedsCPUAccessKeyword = 0xd1c; // FName
		constexpr auto bDelayFullSkinUpdateUntilMeshMergingIsComplete = 0xd24; // bool
		constexpr auto BestPlaceHolderMesh = 0xd28; // USkeletalMesh*
		constexpr auto bMergeMarkedComplete = 0xd30; // bool
		constexpr auto CachedMergeResult = 0xd38; // USkeletalMesh*
	}

	namespace n_UKSActivityRewardCondition_Sequence {
		constexpr auto ActivitySequenceName = 0x30; // FName
		constexpr auto ActivitySequenceTable = 0x38; // UDataTable*
	}

	namespace n_UWorld {
		constexpr auto PersistentLevel = 0x30; // ULevel*
		constexpr auto NetDriver = 0x38; // UNetDriver*
		constexpr auto LineBatcher = 0x40; // ULineBatchComponent*
		constexpr auto PersistentLineBatcher = 0x48; // ULineBatchComponent*
		constexpr auto ForegroundLineBatcher = 0x50; // ULineBatchComponent*
		constexpr auto NetworkManager = 0x58; // AGameNetworkManager*
		constexpr auto PhysicsCollisionHandler = 0x60; // UPhysicsCollisionHandler*
		constexpr auto ExtraReferencedObjects = 0x68; // TArray<UObject*>
		constexpr auto PerModuleDataObjects = 0x78; // TArray<UObject*>
		constexpr auto LevelSequenceActors = 0x88; // TArray<AActor*>
		constexpr auto StreamingLevels = 0x98; // TArray<ULevelStreaming*>
		constexpr auto StreamingLevelsToConsider = 0xa8; // FStreamingLevelsToConsider
		constexpr auto StreamingLevelsPrefix = 0xd0; // FString
		constexpr auto CurrentLevelPendingVisibility = 0xe0; // ULevel*
		constexpr auto CurrentLevelPendingInvisibility = 0xe8; // ULevel*
		constexpr auto DemoNetDriver = 0xf0; // UDemoNetDriver*
		constexpr auto MyParticleEventManager = 0xf8; // AParticleEventManager*
		constexpr auto DefaultPhysicsVolume = 0x100; // APhysicsVolume*
		constexpr auto bAreConstraintsDirty = 0x11e; // char : 1
		constexpr auto NavigationSystem = 0x120; // UNavigationSystemBase*
		constexpr auto AuthorityGameMode = 0x128; // AGameModeBase*
		constexpr auto GameState = 0x130; // AGameStateBase*
		constexpr auto AISystem = 0x138; // UAISystemBase*
		constexpr auto AvoidanceManager = 0x140; // UAvoidanceManager*
		constexpr auto Levels = 0x148; // TArray<ULevel*>
		constexpr auto LevelCollections = 0x158; // TArray<FLevelCollection>
		constexpr auto OwningGameInstance = 0x188; // UGameInstance*
		constexpr auto ParameterCollectionInstances = 0x190; // TArray<UMaterialParameterCollectionInstance*>
		constexpr auto CanvasForRenderingToTarget = 0x1a0; // UCanvas*
		constexpr auto CanvasForDrawMaterialToRenderTarget = 0x1a8; // UCanvas*
		constexpr auto ComponentsThatNeedEndOfFrameUpdate = 0x200; // TArray<UActorComponent*>
		constexpr auto ComponentsThatNeedEndOfFrameUpdate_OnGameThread = 0x210; // TArray<UActorComponent*>
		constexpr auto WorldComposition = 0x560; // UWorldComposition*
		constexpr auto PSCPool = 0x5f0; // FWorldPSCPool
		constexpr auto HirezObjectPool = 0x710; // FHirezObjectPool
	}

	namespace n_USourceEffectFilterPreset {
		constexpr auto Settings = 0x74; // FSourceEffectFilterSettings
	}

	namespace n_UKSDailyChallengeViewBase {
		constexpr auto ChallengeTimerRefreshRate = 0x520; // float
	}

	namespace n_UKSPartyManagerWidgetBase {
		constexpr auto CachedDisplayedPartyMembers = 0x520; // TArray<FPUMG_PartyMemberData>
	}

	namespace n_UWBP_BattlePassLevelTracker_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto NewTierLoop = 0x528; // UWidgetAnimation*
		constexpr auto FadeIn = 0x530; // UWidgetAnimation*
		constexpr auto OnPlayerLevelUp = 0x538; // UWidgetAnimation*
		constexpr auto CanvasPanel_1 = 0x540; // UCanvasPanel*
		constexpr auto EmblemOverlaySheen_Free = 0x548; // UImage*
		constexpr auto EmblemOverlaySheen_Premium = 0x550; // UImage*
		constexpr auto EmblemOverlaySheenSwitcher = 0x558; // UWidgetSwitcher*
		constexpr auto Fill = 0x560; // UImage*
		constexpr auto FillStandard_3 = 0x568; // UImage*
		constexpr auto GlitchOverlay = 0x570; // UImage*
		constexpr auto Glow_2 = 0x578; // UImage*
		constexpr auto Glow_3 = 0x580; // UImage*
		constexpr auto Gradient = 0x588; // UImage*
		constexpr auto LevelRewardWrapper = 0x590; // USizeBox*
		constexpr auto LevelUpText = 0x598; // UTextBlock*
		constexpr auto ProgressionTally = 0x5a0; // UWBP_ProgressionTally_C*
		constexpr auto RequiredXPForLevel = 0x5a8; // UTextBlock*
		constexpr auto RequiredXPForLevel_2 = 0x5b0; // UTextBlock*
		constexpr auto RewardShimmer = 0x5b8; // UImage*
		constexpr auto TypeSwitcher = 0x5c0; // UWidgetSwitcher*
		constexpr auto WBP_BattlePassEmblem = 0x5c8; // UWBP_BattlePassEmblem_C*
		constexpr auto WBP_KSCosmeticItemDisplay_3 = 0x5d0; // UWBP_KSCosmeticItemDisplay_C*
		constexpr auto XPAmountText = 0x5d8; // UTextBlock*
		constexpr auto XPBar = 0x5e0; // UWBP_ProgressEarnedBar_C*
		constexpr auto XPBarShimmer = 0x5e8; // UImage*
		constexpr auto XPCurrencyText = 0x5f0; // UTextBlock*
		constexpr auto XPDisplayBox = 0x5f8; // UHorizontalBox*
		constexpr auto XPGainLabel = 0x600; // UTextBlock*
		constexpr auto XPInfoBox = 0x608; // UHorizontalBox*
		constexpr auto XPProgressInLevel = 0x610; // UTextBlock*
		constexpr auto Progression = 0x618; // FPlayerProgression
		constexpr auto CanAnimate = 0x788; // bool
		constexpr auto BaseFillPercentage = 0x78c; // float
		constexpr auto LerpTimeframe = 0x790; // float
		constexpr auto CurrentTierIndex = 0x794; // int32_t
		constexpr auto CurrentLerpIncrement = 0x798; // float
		constexpr auto PlayLevelUpRewardSFX = 0x7a0; // UAkAudioEvent*
		constexpr auto PlayLevelProgressionSFX = 0x7a8; // UAkAudioEvent*
		constexpr auto StopLevelProgressionSFX = 0x7b0; // UAkAudioEvent*
		constexpr auto XPProgressNumber = 0x7b8; // int32_t
	}

	namespace n_UKSModInst_ActivatedStateMachine {
		constexpr auto ManagedModAssets = 0x478; // TMap<FName, UKSPlayerMod_Activated*>
		constexpr auto ManagedMods = 0x4c8; // TArray<FStateMachineModEntry>
		constexpr auto CurrentActiveMod = 0x4d8; // UKSModInst_Activated*
		constexpr auto LocalActiveMod = 0x4e0; // UKSModInst_Activated*
		constexpr auto bChargeAll = 0x4e8; // bool
		constexpr auto bSharedDuration = 0x4e9; // bool
		constexpr auto bDelayActivation = 0x4ea; // bool
		constexpr auto StateStorage = 0x4f0; // TArray<FStateMachineObjectEntry>
		constexpr auto OnStateStorageChangedDel = 0x500; // FMulticastInlineDelegate
	}

	namespace n_UShaderPlatformQualitySettings {
		constexpr auto QualityOverrides = 0x28; // FMaterialQualityOverrides [0x3]
	}

	namespace n_UMaterialExpressionCustom {
		constexpr auto Code = 0x40; // FString
		constexpr auto OutputType = 0x50; // ECustomMaterialOutputType
		constexpr auto Description = 0x58; // FString
		constexpr auto Inputs = 0x68; // TArray<FCustomInput>
		constexpr auto AdditionalDefines = 0x78; // TArray<FCustomDefine>
		constexpr auto IncludeFilePaths = 0x88; // TArray<FString>
	}

	namespace n_UDatasmithStaticMeshGLTFImportData {
		constexpr auto SourceMeshName = 0x28; // FString
	}

	namespace n_UWBP_ChallengeView_LoginRewards_C {
		constexpr auto UberGraphFrame = 0x548; // FPointerToUberGraphFrame
		constexpr auto Image_191 = 0x550; // UImage*
		constexpr auto Image_362 = 0x558; // UImage*
		constexpr auto ItemInfoContainer_2 = 0x560; // UWBP_ItemInfoContainer_Centered_C*
		constexpr auto TimeRemaining = 0x568; // UTextBlock*
		constexpr auto TimerSwitcher = 0x570; // UWidgetSwitcher*
		constexpr auto WBP_LoginRewardsGrid = 0x578; // UWBP_LoginRewardsGrid_C*
	}

	namespace n_UGizmoLocalFloatParameterSource {
		constexpr auto Value = 0x48; // float
		constexpr auto LastChange = 0x4c; // FGizmoFloatParameterChange
	}

	namespace n_UKSLoadoutBundle {
		constexpr auto LoadoutClass = 0x260; // TSoftObjectPtr<UKSLoadoutClass>
		constexpr auto Gadget = 0x288; // TSoftObjectPtr<UKSWeaponAsset>
		constexpr auto BundledAbilities = 0x2b0; // TArray<TSoftObjectPtr<UKSPlayerMod_Activated>>
	}

	namespace n_ULoginEula_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto MobileLayout = 0x528; // UWidgetAnimation*
		constexpr auto AcceptNew = 0x530; // UWBP_StandardButtonLarge_C*
		constexpr auto ArrowDown = 0x538; // UImage*
		constexpr auto ArrowUp = 0x540; // UImage*
		constexpr auto BackNew = 0x548; // UWBP_StandardButtonLarge_C*
		constexpr auto bkg = 0x550; // UImage*
		constexpr auto CheckBox = 0x558; // UCheckbox_C*
		constexpr auto Divider = 0x560; // UImage*
		constexpr auto EulaContainer = 0x568; // UScrollBox*
		constexpr auto EulaText_Mobile = 0x570; // UTextBlock*
		constexpr auto EulaText_PC = 0x578; // UTextBlock*
		constexpr auto Image_190 = 0x580; // UImage*
		constexpr auto InvalidationBox_Mobile = 0x588; // UInvalidationBox*
		constexpr auto InvalidationBox_PC = 0x590; // UInvalidationBox*
		constexpr auto NextSwitcher = 0x598; // UWidgetSwitcher*
		constexpr auto PUMG_UnsafeZone_1 = 0x5a0; // UPUMG_UnsafeZone*
		constexpr auto ScrollCalloutDown = 0x5a8; // UImage*
		constexpr auto ScrollCalloutSwitcher = 0x5b0; // UWidgetSwitcher*
		constexpr auto ScrollCalloutUp = 0x5b8; // UImage*
		constexpr auto StudioLogo = 0x5c0; // UImage*
		constexpr auto TitleLogo = 0x5c8; // UImage*
		constexpr auto VerticalBox_1 = 0x5d0; // UVerticalBox*
		constexpr auto WBP_PanelDefault = 0x5d8; // UWBP_PanelDefault_C*
		constexpr auto CalloutTimer = 0x5e0; // FTimerHandle
	}

	namespace n_UMaterialExpressionTangent {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Period = 0x54; // float
	}

	namespace n_UKSCharacterAnimInst {
		constexpr auto GadgetAdditiveRetrieveBlendTime = 0x3c8; // float
		constexpr auto GadgetAdditiveThrowBlendTime = 0x3cc; // float
		constexpr auto bMountedWeaponActive = 0x3d0; // bool
		constexpr auto bMountedOnCoverActive = 0x3d1; // bool
		constexpr auto MountedWeaponTargetHeight = 0x3d4; // float
		constexpr auto MountedWeaponModifiedAimPitch = 0x3d8; // float
		constexpr auto MountedWeaponMountLocation = 0x3dc; // FVector
		constexpr auto MountedWeaponMountRotation = 0x3e8; // FRotator
		constexpr auto bEmoteMontagePlayingGlobal = 0x3f4; // bool
		constexpr auto bEmoteMontagePlayingLocal = 0x3f5; // bool
		constexpr auto EmoteMontageGlobalWeight = 0x3f8; // float
		constexpr auto EmoteMontageLocalWeight = 0x3fc; // float
		constexpr auto EmoteSlotName = 0x400; // FName
		constexpr auto EmotePropRandomizerStoredInt = 0x408; // int32_t
		constexpr auto bEmotePropRandomizerStaticSpawned = 0x40c; // bool
		constexpr auto bEmotePropRandomizerSkeletalSpawned = 0x40d; // bool
		constexpr auto EmoteFastBlendMultiplier = 0x410; // float
		constexpr auto EmoteSlowBlendMultiplier = 0x414; // float
		constexpr auto bSprayIsPlaying = 0x418; // bool
		constexpr auto CurrentMeshLOD = 0x41c; // int32_t
		constexpr auto Speed = 0x420; // float
		constexpr auto SpeedXY = 0x424; // float
		constexpr auto SpeedZ = 0x428; // float
		constexpr auto Forward = 0x42c; // float
		constexpr auto Right = 0x430; // float
		constexpr auto BodyLean = 0x434; // float
		constexpr auto BodyLeanRotator = 0x438; // FRotator
		constexpr auto HeadLeanRotator = 0x444; // FRotator
		constexpr auto bEnableAnimMirroring = 0x450; // bool
		constexpr auto bCanTransitionDirections = 0x454; // char : 1
		constexpr auto bEnableMovementImprovements = 0x458; // bool
		constexpr auto bEnableDynamicLobbyPose = 0x459; // bool
		constexpr auto SprintImpulseAmount = 0x45c; // float
		constexpr auto SprintLeftRightBodyLeanRange = 0x460; // FVector2D
		constexpr auto ForwardRotate = 0x468; // float
		constexpr auto RightRotate = 0x46c; // float
		constexpr auto BackRotate = 0x470; // float
		constexpr auto LeftRotate = 0x474; // float
		constexpr auto ForwardRotatePostMirror = 0x478; // float
		constexpr auto RightRotatePostMirror = 0x47c; // float
		constexpr auto BackRotatePostMirror = 0x480; // float
		constexpr auto LeftRotatePostMirror = 0x484; // float
		constexpr auto ForwardCrouchPelvicVector = 0x488; // FVector
		constexpr auto ForwardCrouchFeetIKVector = 0x494; // FVector
		constexpr auto BackCrouchPelvicVector = 0x4a0; // FVector
		constexpr auto BackCrouchFeetIKVector = 0x4ac; // FVector
		constexpr auto LeftCrouchPelvicVector = 0x4b8; // FVector
		constexpr auto LeftCrouchFeetIKVector = 0x4c4; // FVector
		constexpr auto RightCrouchPelvicVector = 0x4d0; // FVector
		constexpr auto RightCrouchFeetIKVector = 0x4dc; // FVector
		constexpr auto ForwardCrouchPelvicOffset = 0x4e8; // float
		constexpr auto ForwardCrouchFeetIKOffset = 0x4ec; // float
		constexpr auto BackCrouchPelvicOffset = 0x4f0; // float
		constexpr auto BackCrouchFeetIKOffset = 0x4f4; // float
		constexpr auto LeftCrouchPelvicOffset = 0x4f8; // float
		constexpr auto LeftCrouchFeetIKOffset = 0x4fc; // float
		constexpr auto RightCrouchPelvicOffset = 0x500; // float
		constexpr auto RightCrouchFeetIKOffset = 0x504; // float
		constexpr auto CurrentAccelVectorLength = 0x508; // float
		constexpr auto MaxSlowWalkSpeed = 0x50c; // float
		constexpr auto MaxWalkSpeed = 0x510; // float
		constexpr auto MaxADSWalkSpeed = 0x514; // float
		constexpr auto MaxSprintSpeed = 0x518; // float
		constexpr auto MaxCrouchSpeed = 0x51c; // float
		constexpr auto MaxADSCrouchSpeed = 0x520; // float
		constexpr auto bShouldTransitionADSCrouch = 0x524; // char : 1
		constexpr auto CurSpeedFraction = 0x528; // float
		constexpr auto CurSpeedScaling = 0x52c; // float
		constexpr auto bDoCheckFirstStepCurve = 0x530; // bool
		constexpr auto FirstStepTransitionAlpha = 0x534; // float
		constexpr auto SpeedWarpingAlpha = 0x538; // float
		constexpr auto ParachuteMovementPitch = 0x53c; // float
		constexpr auto ParachuteMovementYaw = 0x540; // float
		constexpr auto ParachuteMovementForward = 0x544; // float
		constexpr auto ParachuteMovementLateral = 0x548; // float
		constexpr auto bSkydiveTurnOverridesStrafe = 0x54c; // bool
		constexpr auto bIsNoseDiving = 0x54d; // bool
		constexpr auto ParachuteYawInterpSpeed = 0x550; // float
		constexpr auto ParachutePitchInterpSpeed = 0x554; // float
		constexpr auto ParachuteForwardInterpSpeed = 0x558; // float
		constexpr auto ParachuteLateralInterpSpeed = 0x55c; // float
		constexpr auto ParachuteForwardThreshold = 0x560; // float
		constexpr auto bParachuteReady = 0x564; // bool
		constexpr auto ParachuteYawRotationFactor = 0x568; // float
		constexpr auto LastFreeFallMovementVector = 0x56c; // FVector
		constexpr auto HitSpringRollState = 0x578; // FFloatHitSpringState
		constexpr auto HitSpringPitchState = 0x580; // FFloatHitSpringState
		constexpr auto HitSpringYawState = 0x588; // FFloatHitSpringState
		constexpr auto HitRotationAmountRoll = 0x590; // float
		constexpr auto HitRotationAmountPitch = 0x594; // float
		constexpr auto HitRotationAmountYaw = 0x598; // float
		constexpr auto HitRotationPitchMax = 0x59c; // float
		constexpr auto HitRotationRollMax = 0x5a0; // float
		constexpr auto HitRotationYawMax = 0x5a4; // float
		constexpr auto PelvisHitOffset = 0x5a8; // FVector
		constexpr auto SpineHitOffset = 0x5b4; // FRotator
		constexpr auto NeckHitOffset = 0x5c0; // FRotator
		constexpr auto ArmHitOffset = 0x5cc; // FRotator
		constexpr auto QueuedHits = 0x5d8; // TArray<FHitReaction>
		constexpr auto HitReactionTimeScale = 0x5e8; // UCurveVector*
		constexpr auto HitReactionDamageScale = 0x5f0; // UCurveFloat*
		constexpr auto ADSHitReactionBlend = 0x5f8; // float
		constexpr auto AOSHitReactionBlend = 0x5fc; // float
		constexpr auto HipfireHitReactionBlend = 0x600; // float
		constexpr auto SimClientHitReactionBlend = 0x604; // float
		constexpr auto CurrentHitReactionBlend = 0x608; // float
		constexpr auto SpineFireRotationLimit = 0x60c; // float
		constexpr auto NeckFireRotationLimit = 0x610; // float
		constexpr auto ClavicleFireRotationLimit = 0x614; // float
		constexpr auto UpperArmFireRotationPitchLimit = 0x618; // float
		constexpr auto UpperArmFireRotationYawLimit = 0x61c; // float
		constexpr auto ForearmFireRotationLimit = 0x620; // float
		constexpr auto SpineFireSpringState = 0x624; // FFloatHitSpringState
		constexpr auto NeckFireSpringState = 0x62c; // FFloatHitSpringState
		constexpr auto ClavicleFireSpringState = 0x634; // FFloatHitSpringState
		constexpr auto UpperArmFireSpringState = 0x63c; // FFloatHitSpringState
		constexpr auto UpperArmFireYawSpringState = 0x644; // FFloatHitSpringState
		constexpr auto ForearmFireSpringState = 0x64c; // FFloatHitSpringState
		constexpr auto SpineFireRotationAmountPitch = 0x654; // float
		constexpr auto NeckFireRotationAmountPitch = 0x658; // float
		constexpr auto ClavicleFireRotationAmountYaw = 0x65c; // float
		constexpr auto UpperArmFireRotationAmountPitch = 0x660; // float
		constexpr auto UpperArmFireRotationAmountYaw = 0x664; // float
		constexpr auto ForarmFireRotationAmountPitch = 0x668; // float
		constexpr auto SpineFireOffset = 0x66c; // FRotator
		constexpr auto NeckFireOffset = 0x678; // FRotator
		constexpr auto ClavicleFireOffset = 0x684; // FRotator
		constexpr auto UpperArmFireOffset = 0x690; // FRotator
		constexpr auto ForearmFireOffset = 0x69c; // FRotator
		constexpr auto WeaponFireAlpha = 0x6a8; // float
		constexpr auto WeaponAdditiveAlpha = 0x6ac; // float
		constexpr auto CurrentRecoilProfile = 0x6b0; // FRecoilProfile
		constexpr auto FireImpulseCounter = 0x89c; // int32_t
		constexpr auto bIsRecoiling = 0x8a0; // bool
		constexpr auto bBypassRecoiling = 0x8a1; // bool
		constexpr auto SubAnimInstances = 0x8a8; // TMap<FName, UKSCharacterAnimInst*>
		constexpr auto bCanSwitchStartAnim = 0x8f8; // bool
		constexpr auto bTriggerCustomPivot = 0x8f9; // bool
		constexpr auto bActionDisablesLeftHandIKAlpha = 0x8fa; // bool
		constexpr auto bActionDisablesRightHandIKAlpha = 0x8fb; // bool
		constexpr auto bActionDisablesLeftHandGripOnly = 0x8fc; // bool
		constexpr auto bActionDisablesRightHandGripOnly = 0x8fd; // bool
		constexpr auto bForceDisableLHIK = 0x8fe; // bool
		constexpr auto bForceDisableRHIK = 0x8ff; // bool
		constexpr auto bUseRightHandGadgetOverride = 0x900; // bool
		constexpr auto bShouldUseFootIKDuringFreefall = 0x901; // bool
		constexpr auto ADSRollValue = 0x904; // float
		constexpr auto ADSBumpValue = 0x908; // FVector
		constexpr auto bWantsNonComOffset = 0x914; // bool
		constexpr auto bIsWeaponNonComOffset = 0x915; // bool
		constexpr auto bSkinUseNonComOffset = 0x916; // bool
		constexpr auto EngHeadAdditiveAlpha = 0x918; // float
		constexpr auto bTestGadgetAdditive = 0x91c; // bool
		constexpr auto GadgetStartedRetrieve = 0x91d; // bool
		constexpr auto GadgetFinishedRetrieve = 0x91e; // bool
		constexpr auto GadgetStartedThrow = 0x91f; // bool
		constexpr auto GadgetFinishedThrow = 0x920; // bool
		constexpr auto HandIKAdditiveAlpha = 0x924; // float
		constexpr auto LeftHandIKAlpha = 0x928; // float
		constexpr auto LeftHandIKAlphaTarget = 0x92c; // float
		constexpr auto LeftHandIKBlendSpeed = 0x930; // float
		constexpr auto RightHandIKAlpha = 0x934; // float
		constexpr auto RightHandIKAlphaTarget = 0x938; // float
		constexpr auto RightHandIKBlendSpeed = 0x93c; // float
		constexpr auto SlowIKBlendSpeed = 0x940; // float
		constexpr auto MediumIKBlendSpeed = 0x944; // float
		constexpr auto FastIKBlendSpeed = 0x948; // float
		constexpr auto UplineIKAlpha = 0x94c; // float
		constexpr auto UplineIKAlphaTarget = 0x950; // float
		constexpr auto NextLeftHandIKForceRequestId = 0x954; // int32_t
		constexpr auto bLeftHandIKForceOffFromRequests = 0x958; // bool
		constexpr auto LeftHandIkForceOffRequests = 0x960; // TSet<int32_t>
		constexpr auto bLeftHandIKOffFromMainInstNotifyStates = 0x9b0; // bool
		constexpr auto FootIKAlpha = 0xa08; // float
		constexpr auto FootIKAlphaTarget = 0xa0c; // float
		constexpr auto OnBeginZipline = 0xa10; // FMulticastInlineDelegate
		constexpr auto OnEndZipline = 0xa20; // FMulticastInlineDelegate
		constexpr auto ZiplineRootOffset = 0xa30; // FVector
		constexpr auto AppliedADSRootTranslation = 0xa3c; // FVector
		constexpr auto DefaultADSRootTranslation = 0xa48; // FVector
		constexpr auto ForceZiplineMontage = 0xa54; // bool
		constexpr auto ApplyAimstoZiplineMontage = 0xa55; // bool
		constexpr auto ZiplineMontageLHIKOverride = 0xa56; // bool
		constexpr auto ZiplineMontageLHIKAlpha = 0xa58; // float
		constexpr auto ActionPreventsZiplineIntro = 0xa5c; // bool
		constexpr auto ForceZiplineLoop = 0xa5d; // bool
		constexpr auto ForwardRotateInputRange = 0xa60; // FVector2D
		constexpr auto ForwardRotateOutputRange = 0xa68; // FVector2D
		constexpr auto RightRotateInputRange = 0xa70; // FVector2D
		constexpr auto RightRotateOutputRange = 0xa78; // FVector2D
		constexpr auto LocomotionStartDirection = 0xa80; // EKSMovementDirection
		constexpr auto LocomotionStopDirection = 0xa81; // EKSMovementDirection
		constexpr auto LocomotionPivotDirection = 0xa82; // EKSMovementDirection
		constexpr auto MovementDirectionRotate = 0xa84; // float
		constexpr auto MovementDirectionRotateOnStartOrStop = 0xa88; // float
		constexpr auto DirectionBlendSpeed = 0xa8c; // float
		constexpr auto DirectionChangedBlendSpeed = 0xa94; // float
		constexpr auto bUseLimitedMovement = 0xa98; // bool
		constexpr auto bEngUseLimitedMovement = 0xa99; // bool
		constexpr auto bComUseLimitedMovement = 0xa9a; // bool
		constexpr auto bNonComUseLimitedMovement = 0xa9b; // bool
		constexpr auto bZeroVelocity = 0xa9c; // char : 1
		constexpr auto bZeroAcceleration = 0xa9c; // char : 1
		constexpr auto bJumping = 0xa9c; // char : 1
		constexpr auto bWasJumping = 0xa9c; // char : 1
		constexpr auto bDisableUpperBodyLands = 0xa9c; // char : 1
		constexpr auto bInFreeFall = 0xa9c; // char : 1
		constexpr auto bReadyForFreeFall = 0xa9c; // char : 1
		constexpr auto bVaulting = 0xa9c; // char : 1
		constexpr auto bIsMantling = 0xa9d; // char : 1
		constexpr auto bMantleIsVault = 0xa9d; // char : 1
		constexpr auto bCanInterruptMantle = 0xa9d; // char : 1
		constexpr auto TotalVaultDuration = 0xaa0; // float
		constexpr auto CurrentMantleSequence = 0xaa8; // UAnimSequence*
		constexpr auto CurrentMantleConfig = 0xab0; // FMantleConfig
		constexpr auto VaultStartTime = 0xb58; // float
		constexpr auto PreVaultWorldHeight = 0xb5c; // float
		constexpr auto CurrentVaultTime = 0xb60; // float
		constexpr auto VaultTimeScaleCurve = 0xb68; // FInterpCurveFloat
		constexpr auto VaultScaledVertCurve = 0xb80; // FInterpCurveFloat
		constexpr auto MantleGrabLocation = 0xb98; // FVector
		constexpr auto MantleDistanceToTop = 0xba4; // float
		constexpr auto MantleTowardsWallDir = 0xba8; // FVector
		constexpr auto bMantleIKLeftHand = 0xbb4; // bool
		constexpr auto bMantleIKRightHand = 0xbb5; // bool
		constexpr auto MantleIKLeftHandAlpha = 0xbb8; // float
		constexpr auto MantleIKRightHandAlpha = 0xbbc; // float
		constexpr auto MantleIKLeftHandLocation = 0xbc0; // FVector
		constexpr auto MantleIKRightHandLocation = 0xbcc; // FVector
		constexpr auto bDodgeRolling = 0xbd8; // char : 1
		constexpr auto DodgeRollDuration = 0xbdc; // float
		constexpr auto DodgeRollDirection = 0xbe0; // FName
		constexpr auto bIsInPowerSlide = 0xbe8; // char : 1
		constexpr auto bAbilityMovement = 0xbe8; // char : 1
		constexpr auto bZipLining = 0xbe8; // char : 1
		constexpr auto bZipLineBracing = 0xbe8; // char : 1
		constexpr auto bZipLineEnding = 0xbe8; // char : 1
		constexpr auto ZiplineEndBlendtime = 0xbec; // float
		constexpr auto ZiplineEndOffsetBlendtime = 0xbf0; // float
		constexpr auto bZipLineIsUpline = 0xbf4; // char : 1
		constexpr auto bZipLineIntro = 0xbf4; // char : 1
		constexpr auto bStunned = 0xbf4; // char : 1
		constexpr auto bIsBlinded = 0xbf4; // char : 1
		constexpr auto bHardLand = 0xbf4; // char : 1
		constexpr auto bCrouching = 0xbf4; // char : 1
		constexpr auto bWantsToCrouch = 0xbf4; // char : 1
		constexpr auto bWasCrouchedBeforeRoll = 0xbf4; // char : 1
		constexpr auto bSprinting = 0xbf5; // char : 1
		constexpr auto bIsInVehicle = 0xbf5; // char : 1
		constexpr auto VehicleIdle = 0xbf8; // UAnimSequence*
		constexpr auto bIsSwimming = 0xc00; // char : 1
		constexpr auto bIsSubmerged = 0xc00; // char : 1
		constexpr auto SwimSpineRotation = 0xc04; // FRotator
		constexpr auto AdditiveLandsAlphaMin = 0xc10; // float
		constexpr auto AdditiveLandsAlphaMax = 0xc14; // float
		constexpr auto bCombat = 0xc18; // char : 1
		constexpr auto bDead = 0xc18; // char : 1
		constexpr auto bDowned = 0xc18; // char : 1
		constexpr auto bKnockedBack = 0xc18; // char : 1
		constexpr auto bIsStopped = 0xc18; // char : 1
		constexpr auto DownedRootFacing = 0xc1c; // FRotator
		constexpr auto OnGoDown = 0xc28; // FMulticastInlineDelegate
		constexpr auto bActivatingMod = 0xc38; // char : 1
		constexpr auto bAnyModsActive = 0xc38; // char : 1
		constexpr auto bEnableSprintAdditiveForAbilities = 0xc3c; // bool
		constexpr auto InteractionState = 0xc40; // FName
		constexpr auto bIsReviving = 0xc48; // bool
		constexpr auto IsInVehicleAlpha = 0xc4c; // float
		constexpr auto IsInVehicleInverseAlpha = 0xc50; // float
		constexpr auto MinZSpeedforJumpLand = 0xc54; // float
		constexpr auto bCachedCameraLockout = 0xc58; // char : 1
		constexpr auto bCachedCameraLockoutCooldown = 0xc58; // char : 1
		constexpr auto CachedCameraLockoutAlpha = 0xc60; // float
		constexpr auto FallDown = 0xc68; // UAnimSequence*
		constexpr auto AdditiveLandsAlpha = 0xc70; // float
		constexpr auto bDownedCosmetic = 0xc74; // bool
		constexpr auto bWasRecentlyRevived = 0xc75; // bool
		constexpr auto bHasManuallyCanceledDownedCosmetic = 0xc76; // bool
		constexpr auto PreviousLocalAccelDirection = 0xc78; // FVector
		constexpr auto LocalRelativeVelocity = 0xc84; // FVector
		constexpr auto FwdBackIntroLean = 0xc90; // float
		constexpr auto LeftRightIntroLean = 0xc94; // float
		constexpr auto IntroLeanMultiplier = 0xc98; // float
		constexpr auto IntroLeanSpeed = 0xc9c; // float
		constexpr auto VelocityVsAccelDotProduct = 0xca0; // float
		constexpr auto FacingDirection = 0xca4; // FVector
		constexpr auto PowerSlideSlopeAngleRotation = 0xcb0; // FRotator
		constexpr auto FootHeightAdjustmentOnSlope = 0xcbc; // FVector
		constexpr auto PelvisAdjustmentOnSlope = 0xcc8; // FVector
		constexpr auto LocomotionState = 0xcd4; // EKSLocomotionState
		constexpr auto HasLocomotionStartLocation = 0xcd5; // bool
		constexpr auto LocomotionStartLocation = 0xcd8; // FVector
		constexpr auto DistFromLocomotionStart = 0xce4; // float
		constexpr auto DistFromLocomotionStartMax = 0xce8; // float
		constexpr auto HasLocomotionStopLocation = 0xcec; // bool
		constexpr auto LocomotionStopLocation = 0xcf0; // FVector
		constexpr auto DistFromLocomotionStop = 0xcfc; // float
		constexpr auto LocomotionStopBufferTime = 0xd00; // float
		constexpr auto LocomotionStopBufferExpireTime = 0xd04; // float
		constexpr auto bSuccessPivotCompleteThisFrame = 0xd08; // bool
		constexpr auto HasLocomotionPivotLocation = 0xd09; // bool
		constexpr auto HasLocomotionPrePivotLocation = 0xd0a; // bool
		constexpr auto HasLocomotionPostPivotLocation = 0xd0b; // bool
		constexpr auto LocomotionPivotThreshold = 0xd0c; // float
		constexpr auto LocomotionPivotLocation = 0xd10; // FVector
		constexpr auto CachedLocomotionPivotLocation = 0xd1c; // FVector
		constexpr auto DistFromLocomotionPivot = 0xd28; // float
		constexpr auto DistFromLocomotionPivotMax = 0xd2c; // float
		constexpr auto LocomotionPrePivotLocation = 0xd30; // FVector
		constexpr auto DistFromLocomotionPrePivot = 0xd3c; // float
		constexpr auto LocomotionPostPivotLocation = 0xd40; // FVector
		constexpr auto DistFromLocomotionPostPivot = 0xd4c; // float
		constexpr auto bLocomotionStartUsesPivotDistance = 0xd50; // bool
		constexpr auto HasJumpStartLocation = 0xd51; // bool
		constexpr auto JumpStartLocation = 0xd54; // FVector
		constexpr auto IsSprintJumping = 0xd60; // bool
		constexpr auto IsShortJumping = 0xd61; // bool
		constexpr auto DistFromJumpStart = 0xd64; // float
		constexpr auto DistFromJumpStartMax = 0xd68; // float
		constexpr auto ShortJumpThreshold = 0xd6c; // float
		constexpr auto HasJumpLandLocation = 0xd70; // bool
		constexpr auto JumpLandLocationOnGround = 0xd71; // bool
		constexpr auto JumpLandLocation = 0xd74; // FVector
		constexpr auto JumpLandLocationTarget = 0xd80; // FVector
		constexpr auto JumpLandLocationInterpSpeed = 0xd8c; // float
		constexpr auto DistFromJumpLand = 0xda8; // float
		constexpr auto InitialDistFromJumpLand = 0xdac; // float
		constexpr auto DistFromJumpLandTarget = 0xdb0; // float
		constexpr auto DistFromJumpLandInterpSpeed = 0xdb4; // float
		constexpr auto SmoothedVelocity = 0xdb8; // FVector
		constexpr auto SmoothedVelocityInterp = 0xdc4; // float
		constexpr auto SmoothedVelocitySpeedThreshold = 0xdc8; // float
		constexpr auto SmoothedVelocityInterpRate = 0xdcc; // float
		constexpr auto SmoothedVelocityInterpRateBelowThreshold = 0xdd0; // float
		constexpr auto PowerSlideProgress = 0xdd4; // float
		constexpr auto PowerSlideAngle = 0xdd8; // float
		constexpr auto PowerSlideRotation = 0xddc; // FRotator
		constexpr auto PowerSlideEndReason = 0xde8; // EKSPowerSlideEndReason
		constexpr auto bIsPowerSlidingOnSlope = 0xde9; // bool
		constexpr auto bIsLocallyViewed = 0xdea; // bool
		constexpr auto JumpLandLocationInWater = 0xdeb; // bool
		constexpr auto DesiredComponentYaw = 0xdec; // float
		constexpr auto bTurnInPlaceInProgress = 0xdf0; // bool
		constexpr auto TurnInPlaceTurnValue = 0xdf4; // float
		constexpr auto CurrentTurnInPlaceThreshold = 0xdf8; // float
		constexpr auto LastTurnInPlaceAnimationVariant = 0xdfc; // EKSTurnInPlaceAnimationVariant
		constexpr auto TurnInPlaceMinThreshold = 0xe00; // float
		constexpr auto TurnInPlaceMaxOffset = 0xe04; // float
		constexpr auto TurnInPlaceRetriggerMinThreshold = 0xe08; // float
		constexpr auto TurnInPlaceRecoverySpeedWithAcceleration = 0xe0c; // float
		constexpr auto TurnInPlaceRecoverySpeed90 = 0xe10; // float
		constexpr auto TurnInPlaceRecoverySpeed180 = 0xe14; // float
		constexpr auto AppliedTurnInPlaceRotator = 0xe18; // FRotator
		constexpr auto WorldTurnInPlaceRotator = 0xe24; // FRotator
		constexpr auto bDisableTurnInPlaceCounterRotate = 0xe40; // bool
		constexpr auto bEnableTurnInPlaceForAOS = 0xe41; // bool
		constexpr auto EnableCounterRotateBlendTime = 0xe44; // float
		constexpr auto DisableCounterRotateBlendTime = 0xe48; // float
		constexpr auto bShouldSplitUpperBody = 0xe4c; // bool
		constexpr auto bForceDisableSplitUpperBody = 0xe4d; // bool
		constexpr auto bEnableSplitUpperBodyForAbilities = 0xe4e; // bool
		constexpr auto bDisableUpperBodyTurnInPlace = 0xe4f; // bool
		constexpr auto bIsLockedToWorldRotation = 0xe50; // bool
		constexpr auto IsLockedToWorldRotationAlpha = 0xe51; // bool
		constexpr auto LockedWorldRotation = 0xe54; // FRotator
		constexpr auto WorldRotationLockIds = 0xe60; // TSet<char>
		constexpr auto NextWorldRotationLockId = 0xeb0; // char
		constexpr auto bIsAimOverShoulder = 0xed0; // bool
		constexpr auto bIsLeavingAOS = 0xed1; // bool
		constexpr auto bIsAimDownSights = 0xed2; // bool
		constexpr auto IsAimDownSightsAlpha = 0xed4; // float
		constexpr auto bIsAimDownSightsFirstPerson = 0xed8; // bool
		constexpr auto IsAimDownSightsFirstPersonAlpha = 0xedc; // float
		constexpr auto bIs3PAimDownSights = 0xee0; // bool
		constexpr auto PreviousCachedAimRotation = 0xee4; // FRotator
		constexpr auto CachedAimRotation = 0xef0; // FRotator
		constexpr auto DeltaAimRotation = 0xefc; // FRotator
		constexpr auto ThirdPersonAppliedAimRotator = 0xf08; // FRotator
		constexpr auto ThirdPersonAimYaw = 0xf14; // float
		constexpr auto ThirdPersonAimYawInverted = 0xf18; // float
		constexpr auto ThirdPersonAimYawCosmetic = 0xf1c; // float
		constexpr auto ThirdPersonEngagedAimYawCosmetic = 0xf20; // float
		constexpr auto ThirdPersonAimPitch = 0xf24; // float
		constexpr auto ThirdPersonAimPitchInverted = 0xf28; // float
		constexpr auto ThirdPersonAimPitchUpline = 0xf2c; // float
		constexpr auto ThirdPersonLean = 0xf30; // float
		constexpr auto ThirdPersonFwdLean = 0xf34; // float
		constexpr auto ThirdPersonLeanAlpha = 0xf38; // float
		constexpr auto ThirdPersonLeanMultiplier = 0xf3c; // float
		constexpr auto ComLeanMultiplier = 0xf40; // float
		constexpr auto NonComLeanMultiplier = 0xf44; // float
		constexpr auto EngagedLeanMultiplier = 0xf48; // float
		constexpr auto ThirdPersonLeanSpeed = 0xf4c; // float
		constexpr auto YawDeltaMinimum = 0xf50; // float
		constexpr auto MinPitchAngle = 0xf54; // float
		constexpr auto MaxPitchAngle = 0xf58; // float
		constexpr auto MinYawAngle = 0xf5c; // float
		constexpr auto MaxYawAngle = 0xf60; // float
		constexpr auto NormalYawInterpSpeed = 0xf64; // float
		constexpr auto ZipLineYawInterpSpeed = 0xf68; // float
		constexpr auto ZipLineYawInterpSpeedOver180 = 0xf6c; // float
		constexpr auto CurrentYawInterpSpeed = 0xf70; // float
		constexpr auto TargetYawInterpSpeed = 0xf74; // float
		constexpr auto NormalYawInterpAcceleration = 0xf78; // float
		constexpr auto ADSBlendToCrouchSlotTime = 0xf7c; // float
		constexpr auto ADSBlendToStandingSlotTime = 0xf80; // float
		constexpr auto bIsReloading = 0xf84; // char : 1
		constexpr auto bIsSwitchingWeapon = 0xf84; // char : 1
		constexpr auto bIsUsingItem = 0xf84; // char : 1
		constexpr auto bIsUsingAbility = 0xf84; // char : 1
		constexpr auto bIsRetrievingWeapon = 0xf84; // char : 1
		constexpr auto bIsHacking = 0xf84; // char : 1
		constexpr auto bAttachHandWhileCrouching = 0xf84; // char : 1
		constexpr auto bAttachHandMelee = 0xf84; // char : 1
		constexpr auto bAttachHandWhileIdle = 0xf85; // char : 1
		constexpr auto bAttachHandWhileSprinting = 0xf85; // char : 1
		constexpr auto bAttachHandWhileMoving = 0xf85; // char : 1
		constexpr auto bAttachHandWhileZiplining = 0xf85; // char : 1
		constexpr auto bAttachRightHandWhileZiplining = 0xf85; // char : 1
		constexpr auto bForceAttachHandIfNotNonCom = 0xf85; // char : 1
		constexpr auto bAttachRightHand = 0xf85; // char : 1
		constexpr auto bWeaponScale = 0xf85; // char : 1
		constexpr auto bRightPropBScale = 0xf86; // char : 1
		constexpr auto bLeftPropBScale = 0xf86; // char : 1
		constexpr auto bAimsDisabled = 0xf86; // char : 1
		constexpr auto bMantlePlaying = 0xf86; // char : 1
		constexpr auto bIsPreRagdoll = 0xf86; // char : 1
		constexpr auto bIsRagdoll = 0xf86; // char : 1
		constexpr auto LeftPropBScaleAlpha = 0xf88; // float
		constexpr auto RightPropBScaleAlpha = 0xf8c; // float
		constexpr auto FreeFallAlpha = 0xf90; // float
		constexpr auto BlindedAlpha = 0xf94; // float
		constexpr auto TabletScaleAlpha = 0xf98; // float
		constexpr auto HolsterLockAlpha = 0xf9c; // float
		constexpr auto PropLockAlpha = 0xfa0; // float
		constexpr auto LeftHolsterLockAlpha = 0xfa4; // float
		constexpr auto HeadAccessoryScaleAlpha = 0xfa8; // float
		constexpr auto DebugDesiredAimDifference = 0xfac; // FRotator
		constexpr auto bUsingZipLineOver180InterpSpeed = 0xfb8; // bool
		constexpr auto FirstPersonAppliedAimRotator = 0xfbc; // FRotator
		constexpr auto FirstPersonAppliedBreathStepTranslation = 0xfc8; // FVector
		constexpr auto FirstPersonBreathSpeed = 0xfd4; // float
		constexpr auto FirstPersonBreathHeight = 0xfd8; // float
		constexpr auto FirstPersonStepSpeedStanding = 0xfdc; // float
		constexpr auto FirstPersonStepSpeedCrouching = 0xfe0; // float
		constexpr auto FirstPersonStepHeight = 0xfe4; // float
		constexpr auto FirstPersonStepMinSpeed = 0xfe8; // float
		constexpr auto FirstPersonLaggingAimRotator = 0xfec; // FRotator
		constexpr auto Normal1PAimInterpSpeed = 0xff8; // float
		constexpr auto CurrentAimPitchSway = 0xffc; // float
		constexpr auto CurrentAimPitchSwayOffset = 0x1000; // float
		constexpr auto CurrentAimYawSway = 0x1004; // float
		constexpr auto CurrentAimYawSwayOffset = 0x1008; // float
		constexpr auto NormalLeanAndSwayInterpSpeed = 0x100c; // float
		constexpr auto ADSBreathingTime = 0x101c; // float
		constexpr auto ADSSteppingTime = 0x1020; // float
		constexpr auto bScaleOutWeapon = 0x1024; // bool
		constexpr auto WeaponScaleAlpha = 0x1028; // float
		constexpr auto WeaponScaleLeftPropOnly = 0x102c; // bool
		constexpr auto WeaponScaleRightPropOnly = 0x102d; // bool
		constexpr auto bUnarmed = 0x102e; // bool
		constexpr auto bMelee = 0x102f; // bool
		constexpr auto bQuickMelee = 0x1030; // bool
		constexpr auto bIsUsingMedPen = 0x1031; // bool
		constexpr auto bEnableMeleeLowerBody = 0x1032; // bool
		constexpr auto bMeleeAim = 0x1033; // bool
		constexpr auto bMeleeNoAim = 0x1034; // bool
		constexpr auto MeleeLowerBodyDuration = 0x1038; // float
		constexpr auto MeleeLowerBodyDirection = 0x103c; // EKSMovementDirection
		constexpr auto bIsUsingTestLocomotion = 0x103d; // bool
		constexpr auto TestCombatState = 0x103e; // ECombatState
		constexpr auto CombatState = 0x103f; // ECombatState
		constexpr auto InitialCombatState = 0x1040; // ECombatState
		constexpr auto DefaultCombatState = 0x1041; // ECombatState
		constexpr auto CombatStateCooldownTime = 0x1044; // float
		constexpr auto TestCombatStateCooldownTime = 0x1048; // float
		constexpr auto WeaponCombatStateCooldownTime = 0x104c; // float
		constexpr auto OnCombatStateChanged = 0x1050; // FMulticastInlineDelegate
		constexpr auto CombatStateCooldownTimer = 0x1060; // FTimerHandle
		constexpr auto TestCombatStateCooldownTimer = 0x1068; // FTimerHandle
		constexpr auto EngHeadAdditiveAlphaTimer = 0x1070; // FTimerHandle
		constexpr auto bCooldownBlocked = 0x1078; // bool
		constexpr auto EngagedBlendTime = 0x107c; // float
		constexpr auto ComBlendTime = 0x1080; // float
		constexpr auto NonComBlendTime = 0x1084; // float
		constexpr auto LeftHandAdditiveReloadOverrideDisableBlendTime = 0x1088; // float
		constexpr auto bDownedIdleToCrawlLoop = 0x108c; // bool
		constexpr auto bDownedCrawlLoopToIdle = 0x108d; // bool
		constexpr auto bCanBlink = 0x108e; // bool
		constexpr auto bIsBlinking = 0x108f; // bool
		constexpr auto bBlinkIsClosingEyes = 0x1090; // bool
		constexpr auto bIsSlowBlinking = 0x1091; // bool
		constexpr auto bIsDoubleBlinking = 0x1092; // bool
		constexpr auto EyeBlinkAlpha = 0x1094; // float
		constexpr auto TimeToNextBlink = 0x1098; // float
		constexpr auto MinimumTimeBetweenBlinks = 0x109c; // float
		constexpr auto MaximumTimeBetweenBlinks = 0x10a0; // float
		constexpr auto EyeBlinkSpeed = 0x10a4; // float
		constexpr auto EyeBlinkSpeedSlow = 0x10a8; // float
		constexpr auto SlowBlinkPercentageChance = 0x10ac; // float
		constexpr auto DoubleBlinkPercentageChance = 0x10b0; // float
		constexpr auto BlinkTimer = 0x10b8; // FTimerHandle
		constexpr auto Emotion = 0x10c0; // EKSEmotion
		constexpr auto EmotionAnimTime = 0x10c4; // float
		constexpr auto OnAnimationEvent = 0x10c8; // FMulticastInlineDelegate
		constexpr auto bIsNonComIdle = 0x10e8; // bool
	}

	namespace n_UInterpGroup {
		constexpr auto InterpTracks = 0x30; // TArray<UInterpTrack*>
		constexpr auto GroupName = 0x40; // FName
		constexpr auto GroupColor = 0x48; // FColor
		constexpr auto bCollapsed = 0x4c; // char : 1
		constexpr auto bVisible = 0x4c; // char : 1
		constexpr auto bIsFolder = 0x4c; // char : 1
		constexpr auto bIsParented = 0x4c; // char : 1
		constexpr auto bIsSelected = 0x4c; // char : 1
	}

	namespace n_UKSPlayerMod_Aim {
		constexpr auto AimLocked = 0x330; // bool
		constexpr auto CrosshairHidden = 0x331; // bool
		constexpr auto SensitivityMultiplier = 0x334; // float
	}

	namespace n_USceneCaptureComponent {
		constexpr auto PrimitiveRenderMode = 0x208; // ESceneCapturePrimitiveRenderMode
		constexpr auto CaptureSource = 0x209; // ESceneCaptureSource
		constexpr auto bCaptureEveryFrame = 0x20a; // char : 1
		constexpr auto bCaptureOnMovement = 0x20a; // char : 1
		constexpr auto bAlwaysPersistRenderingState = 0x20b; // bool
		constexpr auto HiddenComponents = 0x210; // TArray<TWeakObjectPtr<UPrimitiveComponent>>
		constexpr auto HiddenActors = 0x220; // TArray<AActor*>
		constexpr auto ShowOnlyComponents = 0x230; // TArray<TWeakObjectPtr<UPrimitiveComponent>>
		constexpr auto ShowOnlyActors = 0x240; // TArray<AActor*>
		constexpr auto LODDistanceFactor = 0x250; // float
		constexpr auto MaxViewDistanceOverride = 0x254; // float
		constexpr auto CaptureSortPriority = 0x258; // int32_t
		constexpr auto bUseRayTracingIfEnabled = 0x25c; // bool
		constexpr auto ShowFlagSettings = 0x260; // TArray<FEngineShowFlagsSetting>
		constexpr auto ProfilingEventName = 0x280; // FString
	}

	namespace n_UKSPlayerQueryDataFactory {
		constexpr auto CheckTimerHandle = 0x138; // FTimerHandle
	}

	namespace n_UKSActivityRewardCondition_GameWon {
		constexpr auto bCheckGameWon = 0x30; // bool
	}

	namespace n_UAIPerceptionSystem {
		constexpr auto Senses = 0x88; // TArray<UAISense*>
		constexpr auto PerceptionAgingRate = 0x98; // float
	}

	namespace n_UMaterialExpressionShadingModel {
		constexpr auto ShadingModel = 0x40; // EMaterialShadingModel
	}

	namespace n_UMovieSceneFloatSection {
		constexpr auto FloatCurve = 0xe0; // FMovieSceneFloatChannel
	}

	namespace n_UMaterialExpressionAppendVector {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_UInterpTrackLinearColorProp {
		constexpr auto PropertyName = 0x90; // FName
	}

	namespace n_UWindowTitleBarArea {
		constexpr auto bWindowButtonsEnabled = 0x128; // bool
		constexpr auto bDoubleClickTogglesFullscreen = 0x129; // bool
	}

	namespace n_UMovieSceneByteTrack {
		constexpr auto Enum = 0x88; // UEnum*
	}

	namespace n_AMagicLeapSharedWorldGameMode {
		constexpr auto SharedWorldData = 0x308; // FMagicLeapSharedWorldSharedData
		constexpr auto OnNewLocalDataFromClients = 0x318; // FMulticastInlineDelegate
		constexpr auto PinSelectionConfidenceThreshold = 0x328; // float
		constexpr auto ChosenOne = 0x3d0; // AMagicLeapSharedWorldPlayerController*
	}

	namespace n_UUserWidget {
		constexpr auto ColorAndOpacity = 0x118; // FLinearColor
		constexpr auto ColorAndOpacityDelegate = 0x128; // FDelegate
		constexpr auto ForegroundColor = 0x138; // FSlateColor
		constexpr auto ForegroundColorDelegate = 0x160; // FDelegate
		constexpr auto Padding = 0x170; // FMargin
		constexpr auto ActiveSequencePlayers = 0x180; // TArray<UUMGSequencePlayer*>
		constexpr auto StoppedSequencePlayers = 0x190; // TArray<UUMGSequencePlayer*>
		constexpr auto NamedSlotBindings = 0x1a0; // TArray<FNamedSlotBinding>
		constexpr auto WidgetTree = 0x1b0; // UWidgetTree*
		constexpr auto Priority = 0x1b8; // int32_t
		constexpr auto bSupportsKeyboardFocus = 0x1bc; // char : 1
		constexpr auto bIsFocusable = 0x1bc; // char : 1
		constexpr auto bStopAction = 0x1bc; // char : 1
		constexpr auto bHasScriptImplementedTick = 0x1bc; // char : 1
		constexpr auto bHasScriptImplementedPaint = 0x1bc; // char : 1
		constexpr auto bCookedWidgetTree = 0x1bc; // char : 1
		constexpr auto TickFrequency = 0x1c8; // EWidgetTickFrequency
		constexpr auto InputComponent = 0x1d0; // UInputComponent*
		constexpr auto AnimationCallbacks = 0x1d8; // TArray<FAnimationEventBinding>
	}

	namespace n_UMaterialFunction {
		constexpr auto Description = 0x40; // FString
		constexpr auto bExposeToLibrary = 0x50; // char : 1
		constexpr auto bPrefixParameterNames = 0x50; // char : 1
		constexpr auto bReentrantFlag = 0x50; // char : 1
	}

	namespace n_UKSBTTask_SetObjectiveOnBlackboard {
		constexpr auto Objective = 0x98; // UKSBTObjective*
	}

	namespace n_USplineComponent {
		constexpr auto SplineCurves = 0x430; // FSplineCurves
		constexpr auto SplineInfo = 0x498; // FInterpCurveVector
		constexpr auto SplineRotInfo = 0x4b0; // FInterpCurveQuat
		constexpr auto SplineScaleInfo = 0x4c8; // FInterpCurveVector
		constexpr auto SplineReparamTable = 0x4e0; // FInterpCurveFloat
		constexpr auto bAllowSplineEditingPerInstance = 0x4f8; // bool
		constexpr auto ReparamStepsPerSegment = 0x4fc; // int32_t
		constexpr auto Duration = 0x500; // float
		constexpr auto bStationaryEndpoints = 0x504; // bool
		constexpr auto bSplineHasBeenEdited = 0x505; // bool
		constexpr auto bModifiedByConstructionScript = 0x506; // bool
		constexpr auto bInputSplinePointsToConstructionScript = 0x507; // bool
		constexpr auto bDrawDebug = 0x508; // bool
		constexpr auto bClosedLoop = 0x509; // bool
		constexpr auto bLoopPositionOverride = 0x50a; // bool
		constexpr auto LoopPosition = 0x50c; // float
		constexpr auto DefaultUpVector = 0x510; // FVector
	}

	namespace n_AKSGlobalShotListener {
		constexpr auto ShotNotifyDelegate = 0x220; // FMulticastInlineDelegate
	}

	namespace n_UWBP_error_report_C {
		constexpr auto Image_62 = 0x238; // UImage*
	}

	namespace n_UWBP_CosmeticItem_BannerEmpty_C {
		constexpr auto Image_76 = 0x520; // UImage*
	}

	namespace n_UWBP_LoginRewardItem_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto ClaimAnim = 0x528; // UWidgetAnimation*
		constexpr auto BorderGlow = 0x530; // UImage*
		constexpr auto ClaimedBottomDecro = 0x538; // UImage*
		constexpr auto ClaimedBottomDecro_2 = 0x540; // UImage*
		constexpr auto ClaimedCheckmarkEpic = 0x548; // UImage*
		constexpr auto ClaimedCheckmarkLegendary = 0x550; // UImage*
		constexpr auto ClaimedCheckmarkRare = 0x558; // UImage*
		constexpr auto ClaimedCheckmarkSwitcher = 0x560; // UWidgetSwitcher*
		constexpr auto ClaimedCheckmarkUncommon = 0x568; // UImage*
		constexpr auto ClaimedDimmer = 0x570; // UImage*
		constexpr auto ClaimedOverlay = 0x578; // UOverlay*
		constexpr auto CurrentReward = 0x580; // UOverlay*
		constexpr auto EdgeFlareLeft = 0x588; // UImage*
		constexpr auto EdgeFlareRight = 0x590; // UImage*
		constexpr auto EffectContainer = 0x598; // UOverlay*
		constexpr auto Gradient = 0x5a0; // UImage*
		constexpr auto HitTarget = 0x5a8; // UButton*
		constexpr auto IconOverlayGlow = 0x5b0; // UImage*
		constexpr auto RewardLabel = 0x5b8; // UBorder*
		constexpr auto RewardLabelText = 0x5c0; // UTextBlock*
		constexpr auto RewardStroke = 0x5c8; // UImage*
		constexpr auto SelectedGlow = 0x5d0; // UImage*
		constexpr auto UnclaimedDimmer = 0x5d8; // UImage*
		constexpr auto UnclaimedOverlay = 0x5e0; // UOverlay*
		constexpr auto WBP_KSCosmeticItemDisplay = 0x5e8; // UWBP_KSCosmeticItemDisplay_C*
		constexpr auto ClaimAnimationComplete = 0x5f0; // FMulticastInlineDelegate
		constexpr auto RewardItem = 0x600; // FLoginRewardItem
		constexpr auto AnimationCompleteDelay = 0x610; // float
		constexpr auto CustomRarity = 0x618; // TMap<int32_t, UDataTable*>
		constexpr auto AllowToClaim = 0x668; // bool
		constexpr auto OnRewardHovered = 0x670; // FMulticastInlineDelegate
		constexpr auto OnRewardUnhovered = 0x680; // FMulticastInlineDelegate
		constexpr auto AKHoverRewardListEntry = 0x690; // UAkAudioEvent*
		constexpr auto OnRewardClicked = 0x698; // FMulticastInlineDelegate
		constexpr auto CustomRarityTag = 0x6a8; // FGameplayTagContainer
	}

	namespace n_USkeletalMeshComponent {
		constexpr auto AnimBlueprintGeneratedClass = 0x670; // UObject*
		constexpr auto AnimClass = 0x678; // UAnimInstance*
		constexpr auto AnimScriptInstance = 0x680; // UAnimInstance*
		constexpr auto PostProcessAnimInstance = 0x688; // UAnimInstance*
		constexpr auto AnimationData = 0x690; // FSingleAnimationPlayData
		constexpr auto RootBoneTranslation = 0x6b8; // FVector
		constexpr auto LineCheckBoundsScale = 0x6c4; // FVector
		constexpr auto LinkedInstances = 0x710; // TArray<UAnimInstance*>
		constexpr auto CachedBoneSpaceTransforms = 0x720; // TArray<FTransform>
		constexpr auto CachedComponentSpaceTransforms = 0x730; // TArray<FTransform>
		constexpr auto GlobalAnimRateScale = 0x760; // float
		constexpr auto KinematicBonesUpdateType = 0x764; // EKinematicBonesUpdateToPhysics
		constexpr auto PhysicsTransformUpdateMode = 0x765; // EPhysicsTransformUpdateMode
		constexpr auto AnimationMode = 0x767; // EAnimationMode
		constexpr auto bDisablePostProcessBlueprint = 0x769; // char : 1
		constexpr auto bUpdateOverlapsOnAnimationFinalize = 0x769; // char : 1
		constexpr auto bHasValidBodies = 0x769; // char : 1
		constexpr auto bBlendPhysics = 0x769; // char : 1
		constexpr auto bEnablePhysicsOnDedicatedServer = 0x769; // char : 1
		constexpr auto bUpdateJointsFromAnimation = 0x76a; // char : 1
		constexpr auto bDisableClothSimulation = 0x76a; // char : 1
		constexpr auto bDisableRigidBodyAnimNode = 0x76a; // char : 1
		constexpr auto bAllowAnimCurveEvaluation = 0x76a; // char : 1
		constexpr auto bDisableAnimCurves = 0x76a; // char : 1
		constexpr auto bCollideWithEnvironment = 0x76b; // char : 1
		constexpr auto bCollideWithAttachedChildren = 0x76b; // char : 1
		constexpr auto bLocalSpaceSimulation = 0x76b; // char : 1
		constexpr auto bResetAfterTeleport = 0x76b; // char : 1
		constexpr auto bDeferKinematicBoneUpdate = 0x76b; // char : 1
		constexpr auto bNoSkeletonUpdate = 0x76b; // char : 1
		constexpr auto bPauseAnims = 0x76b; // char : 1
		constexpr auto bUseRefPoseOnInitAnim = 0x76c; // char : 1
		constexpr auto bEnablePerPolyCollision = 0x76c; // char : 1
		constexpr auto bForceRefpose = 0x76c; // char : 1
		constexpr auto bOnlyAllowAutonomousTickPose = 0x76c; // char : 1
		constexpr auto bIsAutonomousTickPose = 0x76c; // char : 1
		constexpr auto bOldForceRefPose = 0x76c; // char : 1
		constexpr auto bShowPrePhysBones = 0x76c; // char : 1
		constexpr auto bRequiredBonesUpToDate = 0x76c; // char : 1
		constexpr auto bAnimTreeInitialised = 0x76d; // char : 1
		constexpr auto bIncludeComponentLocationIntoBounds = 0x76d; // char : 1
		constexpr auto bEnableLineCheckWithBounds = 0x76d; // char : 1
		constexpr auto bUseBendingElements = 0x76d; // char : 1
		constexpr auto bUseTetrahedralConstraints = 0x76d; // char : 1
		constexpr auto bUseThinShellVolumeConstraints = 0x76d; // char : 1
		constexpr auto bUseSelfCollisions = 0x76d; // char : 1
		constexpr auto bUseContinuousCollisionDetection = 0x76d; // char : 1
		constexpr auto bPropagateCurvesToSlaves = 0x76e; // char : 1
		constexpr auto bSkipKinematicUpdateWhenInterpolating = 0x76e; // char : 1
		constexpr auto bSkipBoundsUpdateWhenInterpolating = 0x76e; // char : 1
		constexpr auto bNeedsQueuedAnimEventsDispatched = 0x76e; // char : 1
		constexpr auto CachedAnimCurveUidVersion = 0x770; // uint16_t
		constexpr auto MassMode = 0x772; // EClothMassMode
		constexpr auto UniformMass = 0x774; // float
		constexpr auto TotalMass = 0x778; // float
		constexpr auto Density = 0x77c; // float
		constexpr auto MinPerParticleMass = 0x780; // float
		constexpr auto ClothBlendWeight = 0x784; // float
		constexpr auto EdgeStiffness = 0x788; // float
		constexpr auto BendingStiffness = 0x78c; // float
		constexpr auto AreaStiffness = 0x790; // float
		constexpr auto VolumeStiffness = 0x794; // float
		constexpr auto StrainLimitingStiffness = 0x798; // float
		constexpr auto ShapeTargetStiffness = 0x79c; // float
		constexpr auto DisallowedAnimCurves = 0x7a0; // TArray<FName>
		constexpr auto BodySetup = 0x7b0; // UBodySetup*
		constexpr auto OnConstraintBroken = 0x7c0; // FMulticastInlineDelegate
		constexpr auto ClothingSimulationFactory = 0x7d0; // UClothingSimulationFactory*
		constexpr auto TeleportDistanceThreshold = 0x8a8; // float
		constexpr auto TeleportRotationThreshold = 0x8ac; // float
		constexpr auto LastPoseTickFrame = 0x8b8; // uint32_t
		constexpr auto bDelayedAnimTaskValid = 0x8c8; // bool
		constexpr auto bDisableDelayedAnimTask = 0x8c9; // bool
		constexpr auto ClothingInteractor = 0x920; // UClothingSimulationInteractor*
		constexpr auto OnAnimInitialized = 0xa50; // FMulticastInlineDelegate
	}

	namespace n_UKSGameShopItemComponentWidget {
		constexpr auto GameShopItemComponentWeakPtr = 0x520; // TWeakObjectPtr<UKSGameShopItemComponent>
		constexpr auto ItemText = 0x528; // UTextBlock*
		constexpr auto ItemIcon = 0x530; // UKSAsyncImage*
		constexpr auto ItemIconThrobber = 0x538; // UThrobber*
		constexpr auto PurchaseButton = 0x540; // UButton*
	}

	namespace n_UKSAnimationAuditComponent {
		constexpr auto CurrentAnimInst = 0xb0; // UKSAnimInstance*
	}

	namespace n_UMediaPlayer {
		constexpr auto OnEndReached = 0x28; // FMulticastInlineDelegate
		constexpr auto OnMediaClosed = 0x38; // FMulticastInlineDelegate
		constexpr auto OnMediaOpened = 0x48; // FMulticastInlineDelegate
		constexpr auto OnMediaOpenFailed = 0x58; // FMulticastInlineDelegate
		constexpr auto OnPlaybackResumed = 0x68; // FMulticastInlineDelegate
		constexpr auto OnPlaybackSuspended = 0x78; // FMulticastInlineDelegate
		constexpr auto OnSeekCompleted = 0x88; // FMulticastInlineDelegate
		constexpr auto OnTracksChanged = 0x98; // FMulticastInlineDelegate
		constexpr auto CacheAhead = 0xa8; // FTimespan
		constexpr auto CacheBehind = 0xb0; // FTimespan
		constexpr auto CacheBehindGame = 0xb8; // FTimespan
		constexpr auto NativeAudioOut = 0xc0; // bool
		constexpr auto PlayOnOpen = 0xc1; // bool
		constexpr auto Shuffle = 0xc4; // char : 1
		constexpr auto Loop = 0xc4; // char : 1
		constexpr auto Playlist = 0xc8; // UMediaPlaylist*
		constexpr auto PlaylistIndex = 0xd0; // int32_t
		constexpr auto TimeDelay = 0xd8; // FTimespan
		constexpr auto HorizontalFieldOfView = 0xe0; // float
		constexpr auto VerticalFieldOfView = 0xe4; // float
		constexpr auto ViewRotation = 0xe8; // FRotator
		constexpr auto PlayerGuid = 0x120; // FGuid
	}

	namespace n_UKSPlayerMod_MeleeMoveSpeed {
		constexpr auto MeleeMoveSpeedMultiplier = 0x330; // float
	}

	namespace n_UTexture {
		constexpr auto LightingGuid = 0x48; // FGuid
		constexpr auto LODBias = 0x58; // int32_t
		constexpr auto CompressionSettings = 0x5c; // TextureCompressionSettings
		constexpr auto Filter = 0x5d; // TextureFilter
		constexpr auto MipLoadOptions = 0x5e; // ETextureMipLoadOptions
		constexpr auto LODGroup = 0x5f; // TextureGroup
		constexpr auto SRGB = 0x60; // char : 1
		constexpr auto bNoTiling = 0x60; // char : 1
		constexpr auto VirtualTextureStreaming = 0x60; // char : 1
		constexpr auto CompressionYCoCg = 0x60; // char : 1
		constexpr auto bAsyncResourceReleaseHasBeenStarted = 0x60; // char : 1
		constexpr auto AssetUserData = 0x68; // TArray<UAssetUserData*>
	}

	namespace n_UMaterialExpressionLandscapeLayerWeight {
		constexpr auto Base = 0x40; // FExpressionInput
		constexpr auto Layer = 0x54; // FExpressionInput
		constexpr auto ParameterName = 0x68; // FName
		constexpr auto PreviewWeight = 0x70; // float
		constexpr auto ConstBase = 0x74; // FVector
		constexpr auto ExpressionGUID = 0x80; // FGuid
	}

	namespace n_UKSDestroyableHazardComponent {
		constexpr auto MinPerceptionValue = 0xb0; // float
		constexpr auto MaxPerceptionValue = 0xb4; // float
		constexpr auto RandomizedPerceptionValue = 0xb8; // float
		constexpr auto ShouldReactWithEMP = 0xbc; // bool
		constexpr auto ShouldReactWithGunshot = 0xbd; // bool
		constexpr auto ActorsSeenBy = 0xc0; // TArray<TSoftObjectPtr<AActor>>
	}

	namespace n_UInputTouchDelegateBinding {
		constexpr auto InputTouchDelegateBindings = 0x28; // TArray<FBlueprintInputTouchDelegateBinding>
	}

	namespace n_UKSBTD_AnyActorPerceived {
		constexpr auto SensesToUse = 0x68; // TArray<UAISense*>
		constexpr auto PerceptionFilter = 0x78; // FKSPerceptionFilter
	}

	namespace n_UKSModInst_OnProjectileBounce {
		constexpr auto bTrackEnemyProjectile = 0x1b8; // bool
		constexpr auto bTrackFriendlyProjectile = 0x1b9; // bool
		constexpr auto bTrackSelfProjectile = 0x1ba; // bool
		constexpr auto bListenToBounce = 0x1bb; // bool
		constexpr auto bListenToStop = 0x1bc; // bool
	}

	namespace n_UBookMark2D {
		constexpr auto Zoom2D = 0x28; // float
		constexpr auto Location = 0x2c; // FIntPoint
	}

	namespace n_USkeletalMesh {
		constexpr auto Skeleton = 0x60; // USkeleton*
		constexpr auto ImportedBounds = 0x68; // FBoxSphereBounds
		constexpr auto ExtendedBounds = 0x84; // FBoxSphereBounds
		constexpr auto PositiveBoundsExtension = 0xa0; // FVector
		constexpr auto NegativeBoundsExtension = 0xac; // FVector
		constexpr auto Materials = 0xb8; // TArray<FSkeletalMaterial>
		constexpr auto SkelMirrorTable = 0xc8; // TArray<FBoneMirrorInfo>
		constexpr auto LODInfo = 0xd8; // TArray<FSkeletalMeshLODInfo>
		constexpr auto MinLOD = 0x138; // FPerPlatformInt
		constexpr auto MaxLod = 0x13c; // FPerPlatformInt
		constexpr auto DisableBelowMinLodStripping = 0x140; // FPerPlatformBool
		constexpr auto SkelMirrorAxis = 0x141; // EAxis
		constexpr auto SkelMirrorFlipAxis = 0x142; // EAxis
		constexpr auto bWillNeverMergeMesh = 0x143; // char : 1
		constexpr auto bUseFullPrecisionUVs = 0x143; // char : 1
		constexpr auto bUseHighPrecisionTangentBasis = 0x143; // char : 1
		constexpr auto bSmoothNormalsInVertexColor = 0x143; // char : 1
		constexpr auto bVertexCurvature = 0x143; // char : 1
		constexpr auto bHasBeenSimplified = 0x143; // char : 1
		constexpr auto bHasVertexColors = 0x143; // char : 1
		constexpr auto bEnablePerPolyCollision = 0x144; // char : 1
		constexpr auto BodySetup = 0x148; // UBodySetup*
		constexpr auto PhysicsAsset = 0x150; // UPhysicsAsset*
		constexpr auto ShadowPhysicsAsset = 0x158; // UPhysicsAsset*
		constexpr auto NodeMappingData = 0x160; // TArray<UNodeMappingContainer*>
		constexpr auto MorphTargets = 0x170; // TArray<UMorphTarget*>
		constexpr auto PostProcessAnimBlueprint = 0x2f8; // UAnimInstance*
		constexpr auto MeshClothingAssets = 0x300; // TArray<UClothingAssetBase*>
		constexpr auto SamplingInfo = 0x310; // FSkeletalMeshSamplingInfo
		constexpr auto AssetUserData = 0x340; // TArray<UAssetUserData*>
		constexpr auto Sockets = 0x358; // TArray<USkeletalMeshSocket*>
		constexpr auto SkinWeightProfiles = 0x378; // TArray<FSkinWeightProfileInfo>
	}

	namespace n_UStreamingSettings {
		constexpr auto AsyncLoadingThreadEnabled = 0x38; // char : 1
		constexpr auto WarnIfTimeLimitExceeded = 0x38; // char : 1
		constexpr auto TimeLimitExceededMultiplier = 0x3c; // float
		constexpr auto TimeLimitExceededMinTime = 0x40; // float
		constexpr auto MinBulkDataSizeForAsyncLoading = 0x44; // int32_t
		constexpr auto UseBackgroundLevelStreaming = 0x48; // char : 1
		constexpr auto AsyncLoadingUseFullTimeLimit = 0x48; // char : 1
		constexpr auto AsyncLoadingTimeLimit = 0x4c; // float
		constexpr auto PriorityAsyncLoadingExtraTime = 0x50; // float
		constexpr auto LevelStreamingActorsUpdateTimeLimit = 0x54; // float
		constexpr auto PriorityLevelStreamingActorsUpdateExtraTime = 0x58; // float
		constexpr auto LevelStreamingComponentsRegistrationGranularity = 0x5c; // int32_t
		constexpr auto LevelStreamingUnregisterComponentsTimeLimit = 0x60; // float
		constexpr auto LevelStreamingComponentsUnregistrationGranularity = 0x64; // int32_t
		constexpr auto FlushStreamingOnExit = 0x68; // char : 1
		constexpr auto EventDrivenLoaderEnabled = 0x68; // char : 1
	}

	namespace n_UInterpTrackFloatAnimBPParam {
		constexpr auto AnimBlueprintClass = 0x90; // UObject*
		constexpr auto AnimClass = 0x98; // UAnimInstance*
		constexpr auto ParamName = 0xa0; // FName
	}

	namespace n_UNiagaraMeshRendererProperties {
		constexpr auto ParticleMesh = 0x50; // UStaticMesh*
		constexpr auto SortMode = 0x58; // ENiagaraSortMode
		constexpr auto bOverrideMaterials = 0x5c; // char : 1
		constexpr auto bSortOnlyWhenTranslucent = 0x5c; // char : 1
		constexpr auto OverrideMaterials = 0x60; // TArray<FNiagaraMeshMaterialOverride>
		constexpr auto SubImageSize = 0x70; // FVector2D
		constexpr auto bSubImageBlend = 0x78; // char : 1
		constexpr auto FacingMode = 0x7c; // ENiagaraMeshFacingMode
		constexpr auto bLockedAxisEnable = 0x80; // char : 1
		constexpr auto LockedAxis = 0x84; // FVector
		constexpr auto LockedAxisSpace = 0x90; // ENiagaraMeshLockedAxisSpace
		constexpr auto PositionBinding = 0x98; // FNiagaraVariableAttributeBinding
		constexpr auto ColorBinding = 0x110; // FNiagaraVariableAttributeBinding
		constexpr auto VelocityBinding = 0x188; // FNiagaraVariableAttributeBinding
		constexpr auto MeshOrientationBinding = 0x200; // FNiagaraVariableAttributeBinding
		constexpr auto ScaleBinding = 0x278; // FNiagaraVariableAttributeBinding
		constexpr auto SubImageIndexBinding = 0x2f0; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterialBinding = 0x368; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial1Binding = 0x3e0; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial2Binding = 0x458; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial3Binding = 0x4d0; // FNiagaraVariableAttributeBinding
		constexpr auto MaterialRandomBinding = 0x548; // FNiagaraVariableAttributeBinding
		constexpr auto CustomSortingBinding = 0x5c0; // FNiagaraVariableAttributeBinding
		constexpr auto NormalizedAgeBinding = 0x638; // FNiagaraVariableAttributeBinding
		constexpr auto CameraOffsetBinding = 0x6b0; // FNiagaraVariableAttributeBinding
	}

	namespace n_UParticleModuleLocationDirect {
		constexpr auto Location = 0x30; // FRawDistributionVector
		constexpr auto LocationOffset = 0x78; // FRawDistributionVector
		constexpr auto ScaleFactor = 0xc0; // FRawDistributionVector
		constexpr auto Direction = 0x108; // FRawDistributionVector
	}

	namespace n_UInterpTrackAkAudioRTPC {
		constexpr auto Param = 0x90; // FString
		constexpr auto bPlayOnReverse = 0xa0; // char : 1
		constexpr auto bContinueRTPCOnMatineeEnd = 0xa0; // char : 1
	}

	namespace n_UMyPluginObject {
		constexpr auto MyStruct = 0x28; // FMyPluginStruct
	}

	namespace n_UChaosClothConfig {
		constexpr auto MassMode = 0x28; // EClothMassMode
		constexpr auto UniformMass = 0x2c; // float
		constexpr auto TotalMass = 0x30; // float
		constexpr auto Density = 0x34; // float
		constexpr auto MinPerParticleMass = 0x38; // float
		constexpr auto EdgeStiffness = 0x3c; // float
		constexpr auto BendingStiffness = 0x40; // float
		constexpr auto AreaStiffness = 0x44; // float
		constexpr auto VolumeStiffness = 0x48; // float
		constexpr auto StrainLimitingStiffness = 0x4c; // float
		constexpr auto LimitScale = 0x50; // float
		constexpr auto bUseGeodesicDistance = 0x54; // bool
		constexpr auto ShapeTargetStiffness = 0x58; // float
		constexpr auto CollisionThickness = 0x5c; // float
		constexpr auto FrictionCoefficient = 0x60; // float
		constexpr auto DampingCoefficient = 0x64; // float
		constexpr auto DragCoefficient = 0x68; // float
		constexpr auto AnimDriveSpringStiffness = 0x6c; // float
		constexpr auto bUseBendingElements = 0x70; // bool
		constexpr auto bUseTetrahedralConstraints = 0x71; // bool
		constexpr auto bUseThinShellVolumeConstraints = 0x72; // bool
		constexpr auto bUseSelfCollisions = 0x73; // bool
		constexpr auto bUseContinuousCollisionDetection = 0x74; // bool
		constexpr auto LinearVelocityScale = 0x78; // FVector
		constexpr auto AngularVelocityScale = 0x84; // float
	}

	namespace n_ULightMapVirtualTexture2D {
		constexpr auto TypeToLayer = 0xe8; // TArray<int8_t>
	}

	namespace n_UInterpTrackVisibility {
		constexpr auto VisibilityTrack = 0x70; // TArray<FVisibilityTrackKey>
		constexpr auto bFireEventsWhenForwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenJumpingForwards = 0x80; // char : 1
	}

	namespace n_UMovieSceneEventTriggerSection {
		constexpr auto EventChannel = 0xe0; // FMovieSceneEventChannel
	}

	namespace n_UKSActivityRequirement_ActivitySelected {
		constexpr auto SelectedStatusItemIds = 0x30; // TArray<int32_t>
	}

	namespace n_AKSLootDrop {
		constexpr auto Amount = 0x3b0; // int32_t
	}

	namespace n_UWidgetSwitcher {
		constexpr auto ActiveWidgetIndex = 0x128; // int32_t
	}

	namespace n_UKSWeaponTargetingModule {
		constexpr auto TargetingTick = 0x28; // FTargetingModuleTickFunction
		constexpr auto bAimedAtEnemy = 0x58; // bool
		constexpr auto bAimedAtFriendly = 0x59; // bool
		constexpr auto TargetingIndex = 0x5c; // int32_t
		constexpr auto ModeKey = 0x60; // FName
		constexpr auto OverriddenOriginTransform = 0x70; // FTransform
		constexpr auto OverriddenOriginTransformOffset = 0xa0; // FTransform
		constexpr auto bOverrideOriginTransform = 0xd0; // bool
		constexpr auto bCookTimeAffectsVisuals = 0xd1; // bool
		constexpr auto AimPostProcessCookTimeParameterName = 0xd4; // FName
		constexpr auto AimPostProcessMaterial = 0xe0; // UMaterialInterface*
		constexpr auto AimPostProcessMaterialInstance = 0xe8; // UMaterialInstanceDynamic*
		constexpr auto OverriddenWeaponAsset = 0xf0; // UKSWeaponAsset*
		constexpr auto ChildTargetingModules = 0xf8; // TArray<UKSWeaponTargetingModule*>
		constexpr auto HitScanRange = 0x108; // float
		constexpr auto OwningWeaponComponent = 0x118; // UKSWeaponComponent*
		constexpr auto OwningCharacter = 0x120; // AKSCharacter*
	}

	namespace n_UMaterialExpressionTemporalSobol {
		constexpr auto Index = 0x40; // FExpressionInput
		constexpr auto Seed = 0x54; // FExpressionInput
		constexpr auto ConstIndex = 0x68; // uint32_t
		constexpr auto ConstSeed = 0x6c; // FVector2D
	}

	namespace n_UBTTask_SetTagCooldown {
		constexpr auto CooldownTag = 0x70; // FGameplayTag
		constexpr auto bAddToExistingDuration = 0x78; // bool
		constexpr auto CooldownDuration = 0x7c; // float
	}

	namespace n_UPGameBTTask_AlwaysReturn {
		constexpr auto AlwaysReturn = 0x70; // EBTNodeResult
	}

	namespace n_UInheritableComponentHandler {
		constexpr auto Records = 0x28; // TArray<FComponentOverrideRecord>
		constexpr auto UnnecessaryComponents = 0x38; // TArray<UActorComponent*>
	}

	namespace n_UCanvasPanelSlot {
		constexpr auto LayoutData = 0x38; // FAnchorData
		constexpr auto bAutoSize = 0x60; // bool
		constexpr auto ZOrder = 0x64; // int32_t
	}

	namespace n_UNiagaraDataInterfaceGrid2D {
		constexpr auto NumCellsX = 0xd0; // int32_t
		constexpr auto NumCellsY = 0xd4; // int32_t
		constexpr auto NumCellsMaxAxis = 0xd8; // int32_t
		constexpr auto NumAttributes = 0xdc; // int32_t
		constexpr auto SetGridFromMaxAxis = 0xe0; // bool
		constexpr auto WorldBBoxSize = 0xe4; // FVector2D
	}

	namespace n_AKSAIController {
		constexpr auto KSCharacter = 0x378; // AKSCharacterBase*
		constexpr auto CachedKSCharacter = 0x380; // AKSCharacter*
		constexpr auto bAutoManageWayPointSet = 0x398; // bool
		constexpr auto WayPointSet = 0x3a8; // AKSWayPointSet*
		constexpr auto bShouldReverseWayPointSetDirection = 0x3b0; // bool
		constexpr auto Shop = 0x3c8; // AKSPlayerShop*
		constexpr auto StartPointToSpawnAt = 0x400; // AActor*
		constexpr auto CharacterToSpawn = 0x408; // AKSCharacter*
		constexpr auto TreeToRun = 0x410; // UBehaviorTree*
		constexpr auto InitialDifficulty = 0x418; // UKSBTDifficulty*
		constexpr auto DifficultyTable = 0x428; // UDataTable*
		constexpr auto SpawnDifficultyConfig = 0x430; // FKSBTDifficultyConfig
		constexpr auto ObjectivePriorityTable = 0x4a8; // UDataTable*
		constexpr auto ItemPriorityTable = 0x4b0; // UDataTable*
		constexpr auto AbilityTable = 0x4b8; // UDataTable*
		constexpr auto InitialLoadout = 0x4c0; // FKSInitialLoadout
		constexpr auto KSAIPerception = 0x4f8; // UKSAIPerceptionComponent*
		constexpr auto ActorForFocalOffset = 0x528; // AActor*
		constexpr auto CrowdCollisionQueryRange = 0x540; // float
		constexpr auto CrowdPathOptimizationRange = 0x544; // float
		constexpr auto CrowdAvoidanceRangeMultiplier = 0x548; // float
		constexpr auto CrowdSeparationWeight = 0x54c; // float
		constexpr auto bStartWithCrowdFollowing = 0x550; // bool
		constexpr auto TeamNumber = 0x554; // int32_t
		constexpr auto AllowedJobQuery = 0x588; // FGameplayTagQuery
		constexpr auto ItemPriorityComponent = 0x5d0; // UKSAIItemPriorityComponent*
		constexpr auto TempItemPriorityComponent = 0x5d8; // UKSAIItemPriorityComponent*
		constexpr auto ObjectivePriorityComponent = 0x5e0; // UKSAIObjectivePriorityComponent*
		constexpr auto DifficultyComponent = 0x5e8; // UKSAIDifficultyComponent*
	}

	namespace n_UParticleModuleSize_Seeded {
		constexpr auto RandomSeedInfo = 0x78; // FParticleRandomSeedInfo
	}

	namespace n_UWidgetAnimationDelegateBinding {
		constexpr auto WidgetAnimationDelegateBindings = 0x28; // TArray<FBlueprintWidgetAnimationDelegateBinding>
	}

	namespace n_AKSObjectiveBase {
		constexpr auto OnObjectiveUpdate = 0x230; // FMulticastInlineDelegate
		constexpr auto MapIconType = 0x240; // EObjectiveIconType
		constexpr auto DisplayId = 0x244; // int32_t
		constexpr auto ActiveObjectiveIndex = 0x248; // int32_t
		constexpr auto bUsed = 0x24c; // bool
		constexpr auto ObjectiveState = 0x250; // FObjectiveState
		constexpr auto ObjectiveId = 0x264; // int32_t
		constexpr auto ObjectiveType = 0x268; // EObjectiveType
		constexpr auto DefaultState = 0x26c; // FName
		constexpr auto InitialActivateState = 0x274; // FName
		constexpr auto DisplayName = 0x280; // FText
		constexpr auto ObjectiveDisplayLabel = 0x298; // FString
		constexpr auto bAppendActiveIndexToLabel = 0x2a8; // bool
		constexpr auto ObjectiveLootGroup = 0x2c8; // int32_t
		constexpr auto NavigationLocation = 0x2cc; // FVector
		constexpr auto UseNavLocationForDistance = 0x2e4; // bool
		constexpr auto MinimapDisplayWidget = 0x2e8; // TSoftClassPtr<UObject>
		constexpr auto FullmapDisplayWidget = 0x310; // TSoftClassPtr<UObject>
		constexpr auto OverlayDisplayWidget = 0x338; // TSoftClassPtr<UObject>
		constexpr auto StimuliSourceComponent = 0x360; // UKSItemStimuliSourceComponent*
		constexpr auto SoundEventName = 0x370; // FName
		constexpr auto SoundEventLoudness = 0x378; // float
		constexpr auto RepeatTimeToNotifyBots = 0x37c; // float
	}

	namespace n_UMovieSceneCaptureProtocolBase {
		constexpr auto State = 0x50; // EMovieSceneCaptureProtocolState
	}

	namespace n_UWidgetComponent {
		constexpr auto bUseWidgetPool = 0x458; // bool
		constexpr auto bPrimePoolOnFirstUse = 0x459; // bool
		constexpr auto MaxPoolSize = 0x45c; // int32_t
		constexpr auto Space = 0x460; // EWidgetSpace
		constexpr auto TimingPolicy = 0x461; // EWidgetTimingPolicy
		constexpr auto WidgetClass = 0x468; // UUserWidget*
		constexpr auto DrawSize = 0x470; // FIntPoint
		constexpr auto bManuallyRedraw = 0x478; // bool
		constexpr auto bRedrawRequested = 0x479; // bool
		constexpr auto RedrawTime = 0x47c; // float
		constexpr auto CurrentDrawSize = 0x488; // FIntPoint
		constexpr auto bDrawAtDesiredSize = 0x490; // bool
		constexpr auto Pivot = 0x494; // FVector2D
		constexpr auto bReceiveHardwareInput = 0x49c; // bool
		constexpr auto bWindowFocusable = 0x49d; // bool
		constexpr auto WindowVisibility = 0x49e; // EWindowVisibility
		constexpr auto bApplyGammaCorrection = 0x49f; // bool
		constexpr auto bApplyColorDeficiencyCorrection = 0x4a0; // bool
		constexpr auto OwnerPlayer = 0x4a8; // ULocalPlayer*
		constexpr auto BackgroundColor = 0x4b0; // FLinearColor
		constexpr auto TintColorAndOpacity = 0x4c0; // FLinearColor
		constexpr auto OpacityFromTexture = 0x4d0; // float
		constexpr auto BlendMode = 0x4d4; // EWidgetBlendMode
		constexpr auto bIsTwoSided = 0x4d5; // bool
		constexpr auto TickWhenOffscreen = 0x4d6; // bool
		constexpr auto Widget = 0x4d8; // UUserWidget*
		constexpr auto BodySetup = 0x500; // UBodySetup*
		constexpr auto TranslucentMaterial = 0x508; // UMaterialInterface*
		constexpr auto TranslucentMaterial_OneSided = 0x510; // UMaterialInterface*
		constexpr auto OpaqueMaterial = 0x518; // UMaterialInterface*
		constexpr auto OpaqueMaterial_OneSided = 0x520; // UMaterialInterface*
		constexpr auto MaskedMaterial = 0x528; // UMaterialInterface*
		constexpr auto MaskedMaterial_OneSided = 0x530; // UMaterialInterface*
		constexpr auto RenderTarget = 0x538; // UTextureRenderTarget2D*
		constexpr auto MaterialInstance = 0x540; // UMaterialInstanceDynamic*
		constexpr auto bAddedToScreen = 0x548; // bool
		constexpr auto bEditTimeUsable = 0x549; // bool
		constexpr auto SharedLayerName = 0x54c; // FName
		constexpr auto LayerZOrder = 0x554; // int32_t
		constexpr auto GeometryMode = 0x558; // EWidgetGeometryMode
		constexpr auto CylinderArcAngle = 0x55c; // float
	}

	namespace n_UKSToastSoundLibrary {
		constexpr auto FriendToast = 0x28; // UAkAudioEvent*
		constexpr auto PartyToast = 0x30; // UAkAudioEvent*
		constexpr auto ErrorToast = 0x38; // UAkAudioEvent*
		constexpr auto InfoToast = 0x40; // UAkAudioEvent*
	}

	namespace n_UKSWeaponCategoryButton {
		constexpr auto WeaponCategory = 0x520; // TSoftObjectPtr<UKSWeaponCategoryAsset>
	}

	namespace n_UMaterialExpressionBumpOffset {
		constexpr auto Coordinate = 0x40; // FExpressionInput
		constexpr auto Height = 0x54; // FExpressionInput
		constexpr auto HeightRatioInput = 0x68; // FExpressionInput
		constexpr auto HeightRatio = 0x7c; // float
		constexpr auto ReferencePlane = 0x80; // float
		constexpr auto ConstCoordinate = 0x84; // uint32_t
	}

	namespace n_URadialFalloff {
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto MinRange = 0xb4; // float
		constexpr auto MaxRange = 0xb8; // float
		constexpr auto Default = 0xbc; // float
		constexpr auto Radius = 0xc0; // float
		constexpr auto Position = 0xc4; // FVector
		constexpr auto Falloff = 0xd0; // EFieldFalloffType
	}

	namespace n_UBoxFalloff {
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto MinRange = 0xb4; // float
		constexpr auto MaxRange = 0xb8; // float
		constexpr auto Default = 0xbc; // float
		constexpr auto Transform = 0xc0; // FTransform
		constexpr auto Falloff = 0xf0; // EFieldFalloffType
	}

	namespace n_UWBP_PipProgressWidget_C {
		constexpr auto PipContainer = 0x238; // UHorizontalBox*
		constexpr auto WBP_PipProgressEntry = 0x240; // UWBP_PipProgressEntry_C*
		constexpr auto WBP_PipProgressEntry_2 = 0x248; // UWBP_PipProgressEntry_C*
		constexpr auto BaseColor = 0x250; // FLinearColor
		constexpr auto FillColor = 0x260; // FLinearColor
	}

	namespace n_UNewStartMenu_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto ButtonBox = 0x528; // UVerticalBox*
		constexpr auto ButtonContracts = 0x530; // UWBP_StandardButton_02_C*
		constexpr auto ButtonNews = 0x538; // UWBP_StandardButton_02_C*
		constexpr auto ButtonQuit = 0x540; // UWBP_StandardButton_02_C*
		constexpr auto ButtonSettings = 0x548; // UWBP_StandardButton_02_C*
		constexpr auto logo = 0x550; // UImage*
		constexpr auto MenuContainer = 0x558; // UOverlay*
		constexpr auto VersionDisplay = 0x560; // UTextBlock*
		constexpr auto CachedLastRoute = 0x568; // FName
		constexpr auto BackClickNewStartMenuSFX = 0x570; // UAkAudioEvent*
	}

	namespace n_UInputAxisKeyDelegateBinding {
		constexpr auto InputAxisKeyDelegateBindings = 0x28; // TArray<FBlueprintInputAxisKeyDelegateBinding>
	}

	namespace n_UABP_GuavaSpider_C {
		constexpr auto UberGraphFrame = 0x3d0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x3d8; // FAnimNode_Root
		constexpr auto AnimGraphNode_TransitionResult_19 = 0x418; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_18 = 0x450; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_17 = 0x488; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_16 = 0x4c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_15 = 0x4f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_14 = 0x530; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_13 = 0x568; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_12 = 0x5a0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_11 = 0x5d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_10 = 0x610; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_9 = 0x648; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_8 = 0x680; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_7 = 0x6b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_6 = 0x6f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_5 = 0x728; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_4 = 0x760; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_16 = 0x798; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_13 = 0x820; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_2 = 0x860; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_12 = 0x950; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_15 = 0x990; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_14 = 0xa18; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_13 = 0xaa0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_12 = 0xb28; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum = 0xbb0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_StateResult_11 = 0xc70; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_11 = 0xcb0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_10 = 0xd38; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_10 = 0xd78; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_9 = 0xe00; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_9 = 0xe40; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_8 = 0xec8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_8 = 0xf08; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_7 = 0xf90; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_7 = 0xfd0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_6 = 0x1058; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_6 = 0x1098; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_3 = 0x1120; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0x11d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_5 = 0x1258; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer = 0x1298; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_4 = 0x1388; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_2 = 0x13c8; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_Slot = 0x1488; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Inertialization = 0x14e0; // FAnimNode_Inertialization
		constexpr auto AnimGraphNode_LookAt = 0x1560; // FAnimNode_LookAt
		constexpr auto AnimGraphNode_ComponentToLocalSpace_2 = 0x1720; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_2 = 0x1750; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x1780; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x1830; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool = 0x18b8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x1968; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_2 = 0x1998; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x1ab0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ModifyBone = 0x1ae0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_SaveCachedPose = 0x1bf8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0x1cc0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose = 0x1cf8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ApplyAdditive = 0x1d30; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_TransitionResult_3 = 0x1e08; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x1e40; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult = 0x1e78; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x1eb0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_3 = 0x1f38; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x1f78; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_2 = 0x2000; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer = 0x2040; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult = 0x20c8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x2108; // FAnimNode_StateMachine
		constexpr auto Speed = 0x21c8; // float
		constexpr auto SpiderCharacter = 0x21d0; // AKSVehicle_RCCrawler*
		constexpr auto IsJumping = 0x21d8; // bool
		constexpr auto IsFalling = 0x21d9; // bool
		constexpr auto LandingAlpha = 0x21dc; // float
		constexpr auto Deactivated = 0x21e0; // bool
		constexpr auto Turn in Place = 0x21e8; // UAnimSequenceBase*
		constexpr auto IsTurnInPlace = 0x21f0; // bool
		constexpr auto TurnRight = 0x21f1; // bool
		constexpr auto BPSpiderCharacter = 0x21f8; // ABP_GuavaSpider_C*
		constexpr auto TurnInPlaceRate = 0x2200; // float
		constexpr auto PrevMovementDirection = 0x2204; // EKSMovementDirection
		constexpr auto CurrentMovementDirection = 0x2205; // EKSMovementDirection
		constexpr auto NewMovementDirection = 0x2206; // EKSMovementDirection
		constexpr auto PreviousActorLocation = 0x2208; // FVector
		constexpr auto WalkPlayRate = 0x2214; // float
		constexpr auto Right = 0x2218; // float
		constexpr auto Forward = 0x221c; // float
		constexpr auto isDestroyed = 0x2220; // bool
		constexpr auto JumpDirectionAlpha = 0x2224; // float
	}

	namespace n_UKSBattlepassUpsellWidget {
		constexpr auto BaseBundleButton = 0x530; // UKSBattlepassUpsellWidgetButton*
		constexpr auto EliteBundleButton = 0x538; // UKSBattlepassUpsellWidgetButton*
		constexpr auto ConfirmPurchaseButton = 0x540; // UKSBattlepassUpsellWidgetButton*
		constexpr auto CurrencySummary = 0x548; // UKSCurrencyDisplay*
		constexpr auto BattlepassTimeRemaining = 0x550; // UTextBlock*
		constexpr auto ConfirmationBundleName = 0x558; // UTextBlock*
		constexpr auto background = 0x560; // UImage*
		constexpr auto ShadeOverlay = 0x568; // UImage*
		constexpr auto OutfitsModule = 0x570; // UImage*
		constexpr auto WingsuitModule = 0x578; // UImage*
		constexpr auto WeaponWrapModule = 0x580; // UImage*
		constexpr auto ChaseModule = 0x588; // UImage*
		constexpr auto SmokeModule = 0x590; // UImage*
		constexpr auto CurrencyModule = 0x598; // UImage*
		constexpr auto PurchasingTimeoutTime = 0x5a8; // float
	}

	namespace n_USpinBoxWidgetStyle {
		constexpr auto SpinBoxStyle = 0x30; // FSpinBoxStyle
	}

	namespace n_UWBP_Social_Header_Cosmetic_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto AvatarIcon = 0x528; // UWBP_AsyncIcon_C*
		constexpr auto DNDToggleBtn = 0x530; // UButton*
		constexpr auto NameLabel = 0x538; // UTextBlock*
		constexpr auto PlayerBanner = 0x540; // UKSAsyncImage*
		constexpr auto PlayerStatusGamepadCallout = 0x548; // UWBP_ControllerPrompt_C*
		constexpr auto WBP_PlayerStatus_ContextMenu = 0x550; // UWBP_PlayerStatus_ContextMenu_C*
		constexpr auto CurrentPlayerInfo = 0x558; // UKSPlayerInfo*
		constexpr auto OnNavigationReady = 0x560; // FMulticastInlineDelegate
		constexpr auto OnMenuShown = 0x570; // FMulticastInlineDelegate
		constexpr auto OnMenuHidden = 0x580; // FMulticastInlineDelegate
		constexpr auto ClickSocialHeaderCosmeticSFX = 0x590; // UAkAudioEvent*
	}

	namespace n_AKSImpactEffect {
		constexpr auto m_DefaultFX = 0x220; // UParticleSystem*
		constexpr auto m_SurfaceHit = 0x228; // FHitResult
		constexpr auto m_pScene = 0x2b0; // USceneComponent*
	}

	namespace n_UWBP_CosmeticItem_Banner_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto Button = 0x528; // UWBP_ButtonSlot_Cosmetic_C*
		constexpr auto WBP_AsyncIcon = 0x530; // UWBP_AsyncIcon_C*
		constexpr auto OnItemHovered = 0x538; // FMulticastInlineDelegate
		constexpr auto OnItemUnhovered = 0x548; // FMulticastInlineDelegate
		constexpr auto OnItemClicked = 0x558; // FMulticastInlineDelegate
		constexpr auto PlatformItem = 0x568; // UPlatformInventoryItem*
		constexpr auto HoverBannerItemSFX = 0x570; // UAkAudioEvent*
		constexpr auto ClickBannerItemSFX = 0x578; // UAkAudioEvent*
	}

	namespace n_AWaypointBeacon_C {
		constexpr auto UberGraphFrame = 0x2e0; // FPointerToUberGraphFrame
		constexpr auto ParticleSystem = 0x2e8; // UParticleSystemComponent*
	}

	namespace n_UPUMG_PopupManager {
		constexpr auto PopupQueue = 0x4d0; // TArray<FPUMG_PopupConfig>
		constexpr auto m_nPopupId = 0x4e0; // int32_t
		constexpr auto CommittedText = 0x5c8; // FText
	}

	namespace n_ABrush {
		constexpr auto BrushType = 0x220; // EBrushType
		constexpr auto BrushColor = 0x224; // FColor
		constexpr auto PolyFlags = 0x228; // int32_t
		constexpr auto bColored = 0x22c; // char : 1
		constexpr auto bSolidWhenSelected = 0x22c; // char : 1
		constexpr auto bPlaceableFromClassBrowser = 0x22c; // char : 1
		constexpr auto bNotForClientOrServer = 0x22c; // char : 1
		constexpr auto Brush = 0x230; // UModel*
		constexpr auto BrushComponent = 0x238; // UBrushComponent*
		constexpr auto bInManipulation = 0x240; // char : 1
		constexpr auto SavedSelections = 0x248; // TArray<FGeomSelection>
	}

	namespace n_ULandscapeInfo {
		constexpr auto LandscapeActor = 0x28; // LazyObjectProperty
		constexpr auto LandscapeGuid = 0x44; // FGuid
		constexpr auto ComponentSizeQuads = 0x54; // int32_t
		constexpr auto SubsectionSizeQuads = 0x58; // int32_t
		constexpr auto ComponentNumSubsections = 0x5c; // int32_t
		constexpr auto DrawScale = 0x60; // FVector
		constexpr auto Proxies = 0x110; // TArray<ALandscapeStreamingProxy*>
	}

	namespace n_UOperatorField {
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto RightField = 0xb8; // UFieldNodeBase*
		constexpr auto LeftField = 0xc0; // UFieldNodeBase*
		constexpr auto Operation = 0xc8; // EFieldOperationType
	}

	namespace n_UWBP_WeaponProgressButton_C {
		constexpr auto UberGraphFrame = 0x560; // FPointerToUberGraphFrame
		constexpr auto Anim_OnFavoriteButtonHover = 0x568; // UWidgetAnimation*
		constexpr auto Anim_OnSubButtonHover = 0x570; // UWidgetAnimation*
		constexpr auto Anim_OnHover = 0x578; // UWidgetAnimation*
		constexpr auto bg_fill = 0x580; // UImage*
		constexpr auto Bg_Gradient = 0x588; // UImage*
		constexpr auto CosmeticItem = 0x590; // UWBP_KSCosmeticItemDisplay_C*
		constexpr auto FavoriteStarButton = 0x598; // UButton*
		constexpr auto FavoriteStarSwitcher = 0x5a0; // UWidgetSwitcher*
		constexpr auto HitTarget = 0x5a8; // UButton*
		constexpr auto HorizontalBox_51 = 0x5b0; // UHorizontalBox*
		constexpr auto IsFavorite = 0x5b8; // UOverlay*
		constexpr auto LockIcon = 0x5c0; // UImage*
		constexpr auto MakeFavorite = 0x5c8; // UOverlay*
		constexpr auto ProgressBar = 0x5d0; // UWBP_ProgressEarnedBar_C*
		constexpr auto ProgressGroup = 0x5d8; // UOverlay*
		constexpr auto SimpleHoverFrame = 0x5e0; // UImage*
		constexpr auto Stroke = 0x5e8; // UImage*
		constexpr auto SubButton = 0x5f0; // UButton*
		constexpr auto SubButtonBG = 0x5f8; // UImage*
		constexpr auto SubButtonClickable = 0x600; // UOverlay*
		constexpr auto SubButtonIcon = 0x608; // UImage*
		constexpr auto SubButtonStroke = 0x610; // UImage*
		constexpr auto WBP_WeaponMasteryBadge = 0x618; // UWBP_WeaponMasteryBadge_C*
		constexpr auto WeaponImage = 0x620; // UWBP_AsyncIcon_C*
		constexpr auto WeaponName = 0x628; // UBorder*
		constexpr auto WeaponNameText = 0x630; // UTextBlock*
		constexpr auto WidgetSize = 0x638; // USizeBox*
		constexpr auto bHideCosmeticIcon = 0x640; // bool
		constexpr auto bHideMastery = 0x641; // bool
		constexpr auto bCompactView = 0x642; // bool
		constexpr auto HoverWEPProgressButtonSFX = 0x648; // UAkAudioEvent*
		constexpr auto WidthOverride = 0x650; // float
		constexpr auto HeightOverride = 0x654; // float
		constexpr auto JobItem = 0x658; // UKSJobItem*
		constexpr auto bWeaponOwnedByRogue = 0x660; // bool
		constexpr auto bIsFavoritedByRogue = 0x661; // bool
		constexpr auto bIsPrimarySelectButton = 0x662; // bool
		constexpr auto bIsBoundToLoadouts = 0x663; // bool
		constexpr auto bIsMastered = 0x664; // bool
		constexpr auto bForceFavoriteStar = 0x665; // bool
		constexpr auto OnFavoriteSelected = 0x668; // FMulticastInlineDelegate
		constexpr auto ClickWeaponProgressButtonSFX = 0x678; // UAkAudioEvent*
		constexpr auto ClickSubButton_SFX = 0x680; // UAkAudioEvent*
		constexpr auto GamePad_WeaponProgressButtonSFX = 0x688; // UAkAudioEvent*
	}

	namespace n_ADefaultPawn {
		constexpr auto BaseTurnRate = 0x280; // float
		constexpr auto BaseLookUpRate = 0x284; // float
		constexpr auto MovementComponent = 0x288; // UPawnMovementComponent*
		constexpr auto CollisionComponent = 0x290; // USphereComponent*
		constexpr auto MeshComponent = 0x298; // UStaticMeshComponent*
		constexpr auto bAddDefaultMovementBindings = 0x2a0; // char : 1
	}

	namespace n_UMaterialExpressionVertexInterpolator {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UParticleModuleColorOverLife {
		constexpr auto ColorOverLife = 0x30; // FRawDistributionVector
		constexpr auto AlphaOverLife = 0x78; // FRawDistributionFloat
		constexpr auto bClampAlpha = 0xa8; // char : 1
	}

	namespace n_UKSModInst_Activated {
		constexpr auto bCanBecomeFullyChargedOnEndActivation = 0x1b8; // bool
		constexpr auto bUsesAbilityMovement = 0x1b9; // bool
		constexpr auto MovementMode = 0x1ba; // EMovementMode
		constexpr auto CustomMovementMode = 0x1bb; // EKSGame_CustomMovement
		constexpr auto LockoutTimer = 0x1c0; // UKSTimerComponent*
		constexpr auto bIsLocked = 0x1d8; // bool
		constexpr auto OnModLocked = 0x1e0; // FMulticastInlineDelegate
		constexpr auto OnModLockoutTick = 0x1f0; // FMulticastInlineDelegate
		constexpr auto SetupTimer = 0x210; // UKSTimerComponent*
		constexpr auto OnBonusAbilityDurationReceived = 0x218; // FMulticastInlineDelegate
		constexpr auto BonusAbilityDuration = 0x228; // float
		constexpr auto LocalBonusAbilityDuration = 0x22c; // float
		constexpr auto SetupActionRestrictor = 0x230; // FKSActionRestrictor
		constexpr auto CurrentSetupRestrictor = 0x238; // int32_t
		constexpr auto RecoveryActionRestrictor = 0x23c; // FKSActionRestrictor
		constexpr auto bUseDownedActionRestrictors = 0x244; // bool
		constexpr auto DownedSetupActionRestrictor = 0x245; // FKSActionRestrictor
		constexpr auto DownedRecoveryActionRestrictor = 0x24d; // FKSActionRestrictor
		constexpr auto OnModActivated = 0x270; // FMulticastInlineDelegate
		constexpr auto ActivateMod = 0x280; // UKSPlayerMod_Activated*
		constexpr auto OnChargeChanged = 0x288; // FMulticastInlineDelegate
		constexpr auto bEndActivationOnNullCharacter = 0x298; // bool
		constexpr auto bDelayChargeConsumption = 0x299; // bool
		constexpr auto bConsumeChargeOnEndActivation = 0x29a; // bool
		constexpr auto OnModSetup = 0x2a0; // FMulticastInlineDelegate
		constexpr auto ActivationSoundEvent = 0x2b0; // UAkAudioEvent*
		constexpr auto SpacialActivationSoundEvent = 0x2b8; // UAkAudioEvent*
		constexpr auto SetupSoundEvent = 0x2c0; // UAkAudioEvent*
		constexpr auto SpacialSetupSoundEvent = 0x2c8; // UAkAudioEvent*
		constexpr auto DeactivationSoundEvent = 0x2d0; // UAkAudioEvent*
		constexpr auto bUnCrouchOnActivation = 0x2d8; // bool
		constexpr auto bCanActivateWithoutRequiredCharge = 0x2d9; // bool
		constexpr auto bCanAddPerSecondChargeWhileActive = 0x2da; // bool
		constexpr auto OnModFailedToActivate = 0x2e0; // FMulticastInlineDelegate
		constexpr auto CurrentCharge = 0x320; // float
		constexpr auto bDeactivateWhenWeaponFired = 0x420; // bool
		constexpr auto WeaponsToIgnore = 0x428; // TArray<AKSWeapon*>
		constexpr auto bDeactivateWhenMacGuffinFired = 0x438; // bool
		constexpr auto DamageTypesThatCancel = 0x440; // TArray<UDamageType*>
		constexpr auto OnModHoldChanged = 0x450; // FMulticastInlineDelegate
		constexpr auto CurrentlyHeldId = 0x460; // int32_t
		constexpr auto LocalHeldId = 0x464; // int32_t
		constexpr auto bCurrentlyHeld = 0x468; // bool
		constexpr auto ActivatedStateMachine = 0x470; // UKSModInst_ActivatedStateMachine*
	}

	namespace n_UMultiLineEditableText {
		constexpr auto Text = 0x130; // FText
		constexpr auto HintText = 0x148; // FText
		constexpr auto HintTextDelegate = 0x160; // FDelegate
		constexpr auto WidgetStyle = 0x170; // FTextBlockStyle
		constexpr auto bIsReadOnly = 0x3d8; // bool
		constexpr auto Font = 0x3e0; // FSlateFontInfo
		constexpr auto SelectAllTextWhenFocused = 0x430; // bool
		constexpr auto ClearTextSelectionOnFocusLoss = 0x431; // bool
		constexpr auto RevertTextOnEscape = 0x432; // bool
		constexpr auto ClearKeyboardFocusOnCommit = 0x433; // bool
		constexpr auto AllowContextMenu = 0x434; // bool
		constexpr auto VirtualKeyboardOptions = 0x435; // FVirtualKeyboardOptions
		constexpr auto VirtualKeyboardDismissAction = 0x436; // EVirtualKeyboardDismissAction
		constexpr auto OnTextChanged = 0x438; // FMulticastInlineDelegate
		constexpr auto OnTextCommitted = 0x448; // FMulticastInlineDelegate
	}

	namespace n_UKSDamageTypeFlashBang {
		constexpr auto EffectiveAngle = 0x138; // float
	}

	namespace n_UKSCheatComponent {
		constexpr auto WeaponStatDisplayTime = 0xb0; // float
		constexpr auto DifficultyLevelsDisplayTime = 0xb4; // float
		constexpr auto r_bNoCooldown = 0xb8; // char : 1
		constexpr auto r_bNoEnergyUsage = 0xb8; // char : 1
		constexpr auto r_bNoDamageTaken = 0xb8; // char : 1
		constexpr auto r_CanViewHealth = 0xb8; // char : 1
		constexpr auto r_CanViewLocation = 0xb8; // char : 1
		constexpr auto r_HudVisible = 0xb8; // char : 1
		constexpr auto CachedWeaponStats = 0xc0; // TArray<FString>
		constexpr auto WeaponDisplayStartTime = 0xd0; // float
		constexpr auto CachedDifficultyLevels = 0xd8; // TArray<FString>
		constexpr auto DifficultyLevelsDisplayStartTime = 0xe8; // float
		constexpr auto BaseDrawPosition = 0xec; // FVector2D
	}

	namespace n_UMovieSceneEventTrack {
		constexpr auto bFireEventsWhenForwards = 0x58; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0x58; // char : 1
		constexpr auto EventPosition = 0x5c; // EFireEventsAtPosition
		constexpr auto EventReceivers = 0x60; // TArray<FMovieSceneObjectBindingID>
		constexpr auto Sections = 0x70; // TArray<UMovieSceneSection*>
	}

	namespace n_UAkWinGDKInitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettingsWithSampleRate
		constexpr auto CommunicationSettings = 0x90; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xb8; // FAkWinGDKAdvancedInitializationSettings
	}

	namespace n_UInAppPurchaseQueryCallbackProxy2 {
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UWBP_subscreen_header_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto Image_65 = 0x240; // UImage*
		constexpr auto Image_219 = 0x248; // UImage*
		constexpr auto TextBlock_126 = 0x250; // UTextBlock*
		constexpr auto HeaderText = 0x258; // FText
	}

	namespace n_UClothingAssetBase {
		constexpr auto ImportedFilePath = 0x28; // FString
		constexpr auto AssetGuid = 0x38; // FGuid
	}

	namespace n_UKSActivityBehavior {
		constexpr auto PlayerController = 0x28; // TWeakObjectPtr<AKSPlayerController>
		constexpr auto WeakActivityInstance = 0x30; // TWeakObjectPtr<UKSActivityInstance>
	}

	namespace n_UPUMG_VoiceChatManager {
		constexpr auto bPendingPartyVoipJoin = 0x28; // bool
		constexpr auto bPendingMatchVoipJoin = 0x29; // bool
		constexpr auto CurrentPartyVoiceChatChannel = 0x30; // FString
		constexpr auto CurrentPartyId = 0x40; // int32_t
		constexpr auto CurrentMatchVoiceChatChannel = 0x48; // FString
		constexpr auto CurrentMatchStatus = 0x58; // EPUMG_MatchStatus
		constexpr auto CurrentMatchId = 0x60; // FSerializedMatchId
		constexpr auto bCurrentIsTokenForTaskForce = 0x70; // bool
		constexpr auto PartyDataFactory = 0x78; // UPUMG_PartyDataFactory*
		constexpr auto QueueDataFactory = 0x80; // UPUMG_QueueDataFactory*
	}

	namespace n_UInputActionDelegateBinding {
		constexpr auto InputActionDelegateBindings = 0x28; // TArray<FBlueprintInputActionDelegateBinding>
	}

	namespace n_UWBP_QuickPlay_MapThumbnail_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto Image = 0x240; // UImage*
		constexpr auto Image_2 = 0x248; // UImage*
		constexpr auto Image_3 = 0x250; // UImage*
		constexpr auto Image_58 = 0x258; // UImage*
		constexpr auto MapImage = 0x260; // UWBP_AsyncIcon_C*
		constexpr auto mapName = 0x268; // UTextBlock*
		constexpr auto UIMapInfo = 0x270; // FUIMapInfo
		constexpr auto MapDetail = 0x2c8; // FMapDetail
	}

	namespace n_ACineCameraActor {
		constexpr auto LookatTrackingSettings = 0x7a0; // FCameraLookatTrackingSettings
	}

	namespace n_UPopupManager_C {
		constexpr auto UberGraphFrame = 0x5e0; // FPointerToUberGraphFrame
		constexpr auto OnShow = 0x5e8; // UWidgetAnimation*
		constexpr auto BackfillRewardWrapper = 0x5f0; // UOverlay*
		constexpr auto background = 0x5f8; // UImage*
		constexpr auto ButtonContainer = 0x600; // UHorizontalBox*
		constexpr auto ContentBox = 0x608; // USizeBox*
		constexpr auto ContentVertBox = 0x610; // UVerticalBox*
		constexpr auto DescRichText = 0x618; // URichTextBlock*
		constexpr auto HeaderText = 0x620; // UTextBlock*
		constexpr auto Image_1 = 0x628; // UImage*
		constexpr auto Image_197 = 0x630; // UImage*
		constexpr auto Shadow = 0x638; // UImage*
		constexpr auto StandardButton_02 = 0x640; // UWBP_StandardButton_02_C*
		constexpr auto StandardButton_02_C_2 = 0x648; // UWBP_StandardButton_02_C*
		constexpr auto SubheaderText = 0x650; // UTextBlock*
		constexpr auto TextEntry = 0x658; // UEditableTextBox*
		constexpr auto Warning = 0x660; // UTextBlock*
		constexpr auto WBP_panel_bevel_C_3 = 0x668; // UWBP_panel_bevel_C*
		constexpr auto CurrentPopupId = 0x670; // int32_t
		constexpr auto Buttons = 0x678; // TArray<UWBP_StandardButton_02_C*>
		constexpr auto CurrentInputState = 0x688; // PGAME_INPUT_STATE
		constexpr auto BackHeldOnShown = 0x689; // bool
		constexpr auto ActionMapKeysToAllow = 0x690; // TArray<FName>
		constexpr auto KeysToAllowDownUp = 0x6a0; // TArray<FKey>
		constexpr auto CancelClickPopupManSFX = 0x6b0; // UAkAudioEvent*
	}

	namespace n_UANotifyState_PropLock_C {
		constexpr auto HolsterLock = 0x30; // bool
		constexpr auto Left Holster Lock = 0x31; // bool
		constexpr auto No Prop Lock While Moving = 0x32; // bool
	}

	namespace n_UStandardButtonNoArt_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto Highlight = 0x528; // UWidgetAnimation*
		constexpr auto HighlightGroup = 0x530; // UNamedSlot*
		constexpr auto LoadoutButton = 0x538; // UButton*
		constexpr auto NamedSlot_1 = 0x540; // UNamedSlot*
		constexpr auto TextGroup = 0x548; // UNamedSlot*
		constexpr auto OnClicked = 0x550; // FMulticastInlineDelegate
		constexpr auto OnHovered = 0x560; // FMulticastInlineDelegate
		constexpr auto OnUnhovered = 0x570; // FMulticastInlineDelegate
		constexpr auto ClickStandardButtonNoArtSFX = 0x580; // UAkAudioEvent*
		constexpr auto HoverStandardButtonNoArtSFX = 0x588; // UAkAudioEvent*
	}

	namespace n_UWBP_CustomLobbyPlayer_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto PlayerContextHover = 0x528; // UWidgetAnimation*
		constexpr auto ControlsEnterLeft = 0x530; // UWidgetAnimation*
		constexpr auto ControlsEnterRight = 0x538; // UWidgetAnimation*
		constexpr auto PlayerCardHover = 0x540; // UWidgetAnimation*
		constexpr auto CardSwitcher = 0x548; // UWidgetSwitcher*
		constexpr auto ContextMenuArrow = 0x550; // USizeBox*
		constexpr auto EmptyState = 0x558; // UOverlay*
		constexpr auto EmptyText = 0x560; // UTextBlock*
		constexpr auto FilledState = 0x568; // UOverlay*
		constexpr auto HoverBG = 0x570; // UImage*
		constexpr auto HoverControls = 0x578; // UVerticalBox*
		constexpr auto Image_8 = 0x580; // UImage*
		constexpr auto InvitePendingState = 0x588; // UOverlay*
		constexpr auto KickButton = 0x590; // UWBP_CustomKickButton_C*
		constexpr auto LeftBackGamepadCallout = 0x598; // UWBP_ControllerPrompt_C*
		constexpr auto LeftBackGroup = 0x5a0; // UOverlay*
		constexpr auto LobbyLeaderIcon = 0x5a8; // UImage*
		constexpr auto LobbyPlayerButton = 0x5b0; // UButton*
		constexpr auto PendingText = 0x5b8; // UTextBlock*
		constexpr auto PlayerCardButton = 0x5c0; // UButton*
		constexpr auto SwapButton = 0x5c8; // UWBP_CustomSwapButton_C*
		constexpr auto WBP_PlayerInfoDisplay = 0x5d0; // UWBP_PlayerInfoDisplay_C*
		constexpr auto WBP_ThrobberHorizontal_2 = 0x5d8; // UWBP_ThrobberHorizontal_C*
		constexpr auto bHiddenWhenEmpty = 0x5e0; // bool
		constexpr auto ControlsSide = 0x5e1; // ELaterality
		constexpr auto OnPlayerClicked = 0x5e8; // FMulticastInlineDelegate
		constexpr auto OnEmptyClicked = 0x5f8; // FMulticastInlineDelegate
		constexpr auto CachedPlayerInfo = 0x608; // FPUMG_CustomMatchMember
		constexpr auto OnPlayerSwap = 0x618; // FMulticastInlineDelegate
		constexpr auto OnPlayerKick = 0x628; // FMulticastInlineDelegate
		constexpr auto RouteName = 0x638; // FName
		constexpr auto Prompt_Swap = 0x640; // FName
		constexpr auto Prompt_Kick = 0x648; // FName
	}

	namespace n_UCrowdManager {
		constexpr auto MyNavData = 0x28; // ANavigationData*
		constexpr auto AvoidanceConfig = 0x30; // TArray<FCrowdAvoidanceConfig>
		constexpr auto SamplingPatterns = 0x40; // TArray<FCrowdAvoidanceSamplingPattern>
		constexpr auto MaxAgents = 0x50; // int32_t
		constexpr auto MaxAgentRadius = 0x54; // float
		constexpr auto MaxAvoidedAgents = 0x58; // int32_t
		constexpr auto MaxAvoidedWalls = 0x5c; // int32_t
		constexpr auto NavmeshCheckInterval = 0x60; // float
		constexpr auto PathOptimizationInterval = 0x64; // float
		constexpr auto SeparationDirClamp = 0x68; // float
		constexpr auto PathOffsetRadiusMultiplier = 0x6c; // float
		constexpr auto bResolveCollisions = 0x70; // char : 1
	}

	namespace n_UKSOverlayTabHubRouteData {
		constexpr auto RedirectViewName = 0x28; // FName
		constexpr auto LandingWidgetInView = 0x30; // UPUMG_Widget*
	}

	namespace n_UDatasmithCommonTessellationOptions {
		constexpr auto Options = 0x28; // FDatasmithTessellationOptions
	}

	namespace n_ULoginCreateAccount_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto BackButton = 0x528; // UPopupButton_C*
		constexpr auto bkg = 0x530; // UImage*
		constexpr auto CheckBox = 0x538; // UCheckbox_C*
		constexpr auto CheckboxError = 0x540; // UWBP_error_report_C*
		constexpr auto EmailContainer = 0x548; // UOutlineContainer_C*
		constexpr auto EmailError = 0x550; // UWBP_error_report_C*
		constexpr auto EmailField = 0x558; // UEditableText*
		constexpr auto highlightborder = 0x560; // UImage*
		constexpr auto Image_531 = 0x568; // UImage*
		constexpr auto Image_607 = 0x570; // UImage*
		constexpr auto LoginPrompt = 0x578; // UTextBlock*
		constexpr auto PasswordContainer = 0x580; // UOutlineContainer_C*
		constexpr auto PasswordError = 0x588; // UWBP_error_report_C*
		constexpr auto PasswordField = 0x590; // UEditableText*
		constexpr auto PasswordMismatchText = 0x598; // UTextBlock*
		constexpr auto RepeatPasswordContainer = 0x5a0; // UOutlineContainer_C*
		constexpr auto RepeatPasswordError = 0x5a8; // UWBP_error_report_C*
		constexpr auto RepeatPasswordField = 0x5b0; // UEditableText*
		constexpr auto SubmitButton = 0x5b8; // UPopupButton_C*
		constexpr auto TitleLogo = 0x5c0; // UImage*
		constexpr auto UsernameContainer = 0x5c8; // UOutlineContainer_C*
		constexpr auto UsernameError = 0x5d0; // UWBP_error_report_C*
		constexpr auto UsernameField = 0x5d8; // UEditableText*
		constexpr auto WarningIcon = 0x5e0; // UImage*
		constexpr auto WarningText = 0x5e8; // UTextBlock*
		constexpr auto WBP_check_box = 0x5f0; // UWBP_check_box_C*
		constexpr auto WBP_text_button = 0x5f8; // UWBP_text_button_C*
	}

	namespace n_UPUMG_LoginDataFactory {
		constexpr auto OnLoginUserChanged = 0x38; // FMulticastInlineDelegate
		constexpr auto OnLoginStateChanged = 0x48; // FMulticastInlineDelegate
		constexpr auto OnLoginError = 0x58; // FMulticastInlineDelegate
		constexpr auto OnControllerDisconnected = 0x70; // FMulticastInlineDelegate
		constexpr auto bAllowLoginDuringPartialInstall = 0x80; // bool
		constexpr auto ErrorMsgsDT = 0x88; // UDataTable*
		constexpr auto bAttemptedDeferredInviteAutoLogin = 0x90; // bool
		constexpr auto bNeedsValidateDisplayName = 0xf3; // bool
		constexpr auto CustomDisplayName = 0x108; // FString
		constexpr auto MinCustomDisplayNameLength = 0x118; // int32_t
		constexpr auto MaxCustomDisplayNameLength = 0x11c; // int32_t
		constexpr auto CustomDisplayNameInvalidChars = 0x120; // FString
		constexpr auto OnLoginWaitQueueMessage = 0x140; // FMulticastInlineDelegate
	}

	namespace n_UAnimNotify_PlayNiagaraEffect {
		constexpr auto Template = 0x38; // UNiagaraSystem*
		constexpr auto LocationOffset = 0x40; // FVector
		constexpr auto RotationOffset = 0x4c; // FRotator
		constexpr auto Scale = 0x58; // FVector
		constexpr auto Attached = 0x80; // char : 1
		constexpr auto SocketName = 0x84; // FName
	}

	namespace n_UWBP_LeaveParty_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto Hover = 0x528; // UWidgetAnimation*
		constexpr auto BackgroundImage = 0x530; // UImage*
		constexpr auto Button_102 = 0x538; // UButton*
		constexpr auto ButtonCallout = 0x540; // UImage*
		constexpr auto GamepadCalloutWrapper = 0x548; // UOverlay*
		constexpr auto LeaveLabel = 0x550; // UTextBlock*
		constexpr auto TabBar = 0x558; // UImage*
		constexpr auto PartyDF = 0x560; // UKSPartyDataFactory*
		constexpr auto OnPartyLeaveVisibilityChange = 0x568; // FMulticastInlineDelegate
		constexpr auto ClickLeavePartySFX = 0x578; // UAkAudioEvent*
		constexpr auto HoverLeavePartySFX = 0x580; // UAkAudioEvent*
	}

	namespace n_UBTDecorator_Loop {
		constexpr auto NumLoops = 0x68; // int32_t
		constexpr auto bInfiniteLoop = 0x6c; // bool
		constexpr auto InfiniteLoopTimeoutTime = 0x70; // float
	}

	namespace n_UPlatformEventsComponent {
		constexpr auto PlatformChangedToLaptopModeDelegate = 0xb0; // FMulticastInlineDelegate
		constexpr auto PlatformChangedToTabletModeDelegate = 0xc0; // FMulticastInlineDelegate
	}

	namespace n_UKSPlayerMod_GiveWeaponConfig {
		constexpr auto Radius = 0x3f0; // float
		constexpr auto bCanActivateInAir = 0x3f4; // bool
		constexpr auto ReclaimCharge = 0x3f8; // float
		constexpr auto AllowedActiveDeployableCount = 0x3fc; // int32_t
	}

	namespace n_AExponentialHeightFog {
		constexpr auto Component = 0x220; // UExponentialHeightFogComponent*
		constexpr auto bEnabled = 0x228; // char : 1
	}

	namespace n_UChatroom {
		constexpr auto CurrentChatRoomId = 0x28; // FString
		constexpr auto MaxChatRoomRetries = 0x38; // int32_t
		constexpr auto NumChatRoomRetries = 0x3c; // int32_t
	}

	namespace n_UKSDataMassInviteBase {
		constexpr auto Title = 0x28; // FText
		constexpr auto ButtonLabel = 0x40; // FText
		constexpr auto OnShouldShow = 0x58; // FDelegate
		constexpr auto OnClose = 0x68; // FDelegate
	}

	namespace n_UEditableTextBoxWidgetStyle {
		constexpr auto EditableTextBoxStyle = 0x30; // FEditableTextBoxStyle
	}

	namespace n_UPUMG_StorePurchaseRequest {
		constexpr auto LootTableItemId = 0x28; // int32_t
		constexpr auto VendorId = 0x2c; // int32_t
		constexpr auto PriceInUI = 0x30; // int32_t
		constexpr auto CurrencyType = 0x38; // UPlatformInventoryItem*
		constexpr auto Quantity = 0x40; // int32_t
		constexpr auto LocationId = 0x44; // int32_t
		constexpr auto ExternalTransactionId = 0x48; // FString
		constexpr auto CouponId = 0x58; // int32_t
		constexpr auto GiftPlayerId = 0x5c; // int32_t
		constexpr auto GiftMsgIndex = 0x60; // int32_t
		constexpr auto AnonymousGift = 0x64; // bool
		constexpr auto SkipCurrencyAmountValidation = 0x65; // bool
		constexpr auto pItemHelper = 0x68; // TWeakObjectPtr<UPUMG_StoreItemHelper>
	}

	namespace n_UWBP_CosmeticSlotNavTab_C {
		constexpr auto UberGraphFrame = 0x678; // FPointerToUberGraphFrame
		constexpr auto CosmeticSlot = 0x680; // EMercCosmeticSlot
	}

	namespace n_UWBP_ActiveBoosterShelf_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto Hover = 0x528; // UWidgetAnimation*
		constexpr auto ActiveBoostContainer = 0x530; // UHorizontalBox*
		constexpr auto Bottom = 0x538; // UImage*
		constexpr auto HitTarget = 0x540; // UButton*
		constexpr auto Middle = 0x548; // UImage*
		constexpr auto Root = 0x550; // UCanvasPanel*
		constexpr auto Top = 0x558; // UImage*
		constexpr auto WBP_ActiveBoosterEntry = 0x560; // UWBP_ActiveBoosterEntry_C*
		constexpr auto WBP_ActiveBoosterEntry_2 = 0x568; // UWBP_ActiveBoosterEntry_C*
		constexpr auto WBP_ActiveBoosterEntry_3 = 0x570; // UWBP_ActiveBoosterEntry_C*
	}

	namespace n_UPersistentPlayerLoadoutComponent {
		constexpr auto SkinMap = 0xc8; // TMap<UKSItem*, UKSItem*>
		constexpr auto JobToUse = 0x118; // UKSJobItem*
	}

	namespace n_UParticleModuleLocationSkelVertSurface {
		constexpr auto SourceType = 0x30; // ELocationSkelVertSurfaceSource
		constexpr auto UniversalOffset = 0x34; // FVector
		constexpr auto bUpdatePositionEachFrame = 0x40; // char : 1
		constexpr auto bOrientMeshEmitters = 0x40; // char : 1
		constexpr auto bInheritBoneVelocity = 0x40; // char : 1
		constexpr auto InheritVelocityScale = 0x44; // float
		constexpr auto SkelMeshActorParamName = 0x48; // FName
		constexpr auto ValidAssociatedBones = 0x50; // TArray<FName>
		constexpr auto bEnforceNormalCheck = 0x60; // char : 1
		constexpr auto NormalToCompare = 0x64; // FVector
		constexpr auto NormalCheckToleranceDegrees = 0x70; // float
		constexpr auto NormalCheckTolerance = 0x74; // float
		constexpr auto ValidMaterialIndices = 0x78; // TArray<int32_t>
		constexpr auto bInheritVertexColor = 0x88; // char : 1
		constexpr auto bInheritUV = 0x88; // char : 1
		constexpr auto InheritUVChannel = 0x8c; // uint32_t
	}

	namespace n_ANavigationData {
		constexpr auto RenderingComp = 0x228; // UPrimitiveComponent*
		constexpr auto NavDataConfig = 0x230; // FNavDataConfig
		constexpr auto bEnableDrawing = 0x2a8; // char : 1
		constexpr auto bForceRebuildOnLoad = 0x2a8; // char : 1
		constexpr auto bAutoDestroyWhenNoNavigation = 0x2a8; // char : 1
		constexpr auto bCanBeMainNavData = 0x2a8; // char : 1
		constexpr auto bCanSpawnOnRebuild = 0x2a8; // char : 1
		constexpr auto bRebuildAtRuntime = 0x2a8; // char : 1
		constexpr auto RuntimeGeneration = 0x2ac; // ERuntimeGenerationType
		constexpr auto ObservedPathsTickInterval = 0x2b0; // float
		constexpr auto DataVersion = 0x2b4; // uint32_t
		constexpr auto SupportedAreas = 0x398; // TArray<FSupportedAreaData>
	}

	namespace n_AKSJobSelectPrvwActor_RogueScrn {
		constexpr auto RogueScreenLoadoutComponent = 0x5c8; // URogueScreenLoadoutComponent*
	}

	namespace n_UMaterialExpressionStaticBoolParameter {
		constexpr auto DefaultValue = 0x58; // char : 1
	}

	namespace n_UKSPlayerMod_DownedRoll {
		constexpr auto CooldownMultiplier = 0x330; // float
		constexpr auto DistanceMultiplier = 0x334; // float
		constexpr auto SpeedMultiplier = 0x338; // float
		constexpr auto AdditionalDownedHealth = 0x33c; // float
	}

	namespace n_UKSBTD_DestructibleState {
		constexpr auto DestructibleStateFilter = 0x90; // FKSDestructibleStateFilter
	}

	namespace n_UKSSpawnRule_PlayerProximity {
		constexpr auto bConsiderFriendlies = 0x48; // bool
		constexpr auto bConsiderEnemies = 0x49; // bool
		constexpr auto bUseAverageScore = 0x4a; // bool
	}

	namespace n_UKSTabletAnimInstance {
		constexpr auto bIsClosed = 0x330; // bool
	}

	namespace n_UAnimNotifyState_SkinnedPropBase {
		constexpr auto SkinObjectName = 0x30; // FName
		constexpr auto MeshSkinKeyword = 0x38; // FName
		constexpr auto ComponentClassSkinKeyword = 0x40; // FName
		constexpr auto PropIdentifier = 0x48; // FName
		constexpr auto ExtendedLifetime = 0x50; // float
		constexpr auto bSkipExtendedLifetime = 0x54; // bool
		constexpr auto PropAttachmentInfo = 0x58; // FPoolAttachmentInfo
	}

	namespace n_AKSWeapon_ReviveDrone {
		constexpr auto DroneClass = 0x718; // AKSAgent_RevivalDrone*
		constexpr auto DroneActor = 0x720; // TWeakObjectPtr<AKSAgent_RevivalDrone>
	}

	namespace n_UInteractiveToolPropertySet {
		constexpr auto CachedProperties = 0x40; // UObject*
		constexpr auto bIsPropertySetEnabled = 0x48; // bool
	}

	namespace n_UParticleModuleSpawnBase {
		constexpr auto bProcessSpawnRate = 0x30; // char : 1
		constexpr auto bProcessBurstList = 0x30; // char : 1
	}

	namespace n_UWBP_HorizontalRule_Top_C {
		constexpr auto Image_148 = 0x238; // UImage*
	}

	namespace n_USocialPrivateMessageChannel {
		constexpr auto TargetUser = 0xe8; // USocialUser*
	}

	namespace n_UMaterialExpressionLandscapeGrassOutput {
		constexpr auto GrassTypes = 0x40; // TArray<FGrassInput>
	}

	namespace n_UObjectLibrary {
		constexpr auto ObjectBaseClass = 0x28; // UObject*
		constexpr auto bHasBlueprintClasses = 0x30; // bool
		constexpr auto Objects = 0x38; // TArray<UObject*>
		constexpr auto WeakObjects = 0x48; // TArray<TWeakObjectPtr<UObject>>
		constexpr auto bUseWeakReferences = 0x58; // bool
		constexpr auto bIsFullyLoaded = 0x59; // bool
	}

	namespace n_UParticleModuleLocationPrimitiveSphere {
		constexpr auto StartRadius = 0xb0; // FRawDistributionFloat
	}

	namespace n_USubmixEffectSubmixEQPreset {
		constexpr auto Settings = 0x78; // FSubmixEffectSubmixEQSettings
	}

	namespace n_UInterpTrackInstParticleReplay {
		constexpr auto LastUpdatePosition = 0x28; // float
	}

	namespace n_APGame_GameModeBase {
		constexpr auto PersistentMapSuffix = 0x388; // FString
		constexpr auto SublevelSuffixes = 0x398; // TArray<FString>
		constexpr auto HighMemorySublevelSuffixes = 0x3a8; // TArray<FString>
		constexpr auto LowMemorySublevelSuffixes = 0x3b8; // TArray<FString>
	}

	namespace n_UParticleModuleVectorFieldRotation {
		constexpr auto MinInitialRotation = 0x30; // FVector
		constexpr auto MaxInitialRotation = 0x3c; // FVector
	}

	namespace n_UBTCompositeNode {
		constexpr auto Children = 0x58; // TArray<FBTCompositeChild>
		constexpr auto Services = 0x68; // TArray<UBTService*>
		constexpr auto bApplyDecoratorScope = 0x88; // char : 1
	}

	namespace n_UBlackboardKeyType_String {
		constexpr auto StringValue = 0x30; // FString
	}

	namespace n_UMovieSceneCameraShakeSection {
		constexpr auto ShakeData = 0xe0; // FMovieSceneCameraShakeSectionData
		constexpr auto ShakeClass = 0x100; // UCameraShake*
		constexpr auto PlayScale = 0x108; // float
		constexpr auto PlaySpace = 0x10c; // ECameraAnimPlaySpace
		constexpr auto UserDefinedPlaySpace = 0x110; // FRotator
	}

	namespace n_AControlPointMeshActor {
		constexpr auto ControlPointMeshComponent = 0x220; // UControlPointMeshComponent*
	}

	namespace n_UNiagaraDataInterfaceVectorCurve {
		constexpr auto XCurve = 0x58; // FRichCurve
		constexpr auto YCurve = 0xd8; // FRichCurve
		constexpr auto ZCurve = 0x158; // FRichCurve
	}

	namespace n_UDatasmithFBXSceneImportData {
		constexpr auto bGenerateLightmapUVs = 0x28; // bool
		constexpr auto TexturesDir = 0x30; // FString
		constexpr auto IntermediateSerialization = 0x40; // char
		constexpr auto bColorizeMaterials = 0x41; // bool
	}

	namespace n_UMaterialExpressionMetallicCustomOutput {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UAISense_Team {
		constexpr auto RegisteredEvents = 0x80; // TArray<FAITeamStimulusEvent>
	}

	namespace n_UVariant {
		constexpr auto DisplayText = 0x28; // FText
		constexpr auto ObjectBindings = 0x58; // TArray<UVariantObjectBinding*>
		constexpr auto Thumbnail = 0x68; // UTexture2D*
	}

	namespace n_UKSAnimNotifyState_EmoteProp {
		constexpr auto PropMesh = 0x30; // UStreamableRenderAsset*
		constexpr auto AnimClass = 0x38; // UAnimInstance*
		constexpr auto AnimMontage = 0x40; // UAnimMontage*
		constexpr auto bAddPropToSilhouette = 0x48; // bool
		constexpr auto ForceLOD = 0x4c; // int32_t
		constexpr auto PropAttachmentInfo = 0x50; // FPoolAttachmentInfo
		constexpr auto bUseLightingChannel0 = 0x80; // bool
		constexpr auto bUseLightingChannel1 = 0x81; // bool
		constexpr auto bUseLightingChannel2 = 0x82; // bool
		constexpr auto EmotePropGuid = 0x84; // FGuid
	}

	namespace n_AKSWeapon {
		constexpr auto bCanSwapOnFire = 0x2d8; // bool
		constexpr auto bCanSwapOnDown = 0x2d9; // bool
		constexpr auto bCanSwapOutOnInteraction = 0x2da; // bool
		constexpr auto bCanSwapOutWhileAimingDownSights = 0x2db; // bool
		constexpr auto LoadedDropClass = 0x2f0; // AKSItemDrop*
		constexpr auto bNoWeaponAsset = 0x300; // bool
		constexpr auto WeaponAssetPtr = 0x308; // TSoftObjectPtr<UKSWeaponAsset>
		constexpr auto WeaponAsset = 0x330; // UKSWeaponAsset*
		constexpr auto AutoSwapOutWeaponId = 0x348; // uint32_t
		constexpr auto AuxiliaryWeaponInfo = 0x350; // FAuxiliaryWeaponInfo
		constexpr auto AuxiliaryWeapons = 0x360; // TMap<FName, AKSWeapon*>
		constexpr auto OnCreatedDeployable = 0x3b0; // FMulticastInlineDelegate
		constexpr auto DestroyReason = 0x3c0; // EKSWeaponDestroyReason
		constexpr auto CharacterOwner = 0x3c8; // AKSCharacter*
		constexpr auto PlayerStateInstigator = 0x3d0; // AKSPlayerState*
		constexpr auto bUseCompressStateTransmission = 0x3d8; // bool
		constexpr auto WeaponState = 0x3f0; // EWeaponStateNew
		constexpr auto LocalWeaponState = 0x3f1; // EWeaponStateNew
		constexpr auto LastStateChangeTimeStamp = 0x3f4; // float
		constexpr auto PendingStateChangeRequests = 0x3f8; // TArray<FWeaponStateChangeRequest>
		constexpr auto NextStateRequestId = 0x40a; // uint16_t
		constexpr auto OnWeaponStateChangedDel = 0x410; // FMulticastInlineDelegate
		constexpr auto bPendingFire = 0x451; // bool
		constexpr auto bBotPendingFire = 0x452; // bool
		constexpr auto bFireOnce = 0x453; // bool
		constexpr auto KickbackShotIndex = 0x454; // int32_t
		constexpr auto KickbackResetTimeLeft = 0x458; // float
		constexpr auto BurstShotIndex = 0x45c; // int32_t
		constexpr auto MinCookTimeStamp = 0x460; // float
		constexpr auto bUsingPostFireForgiveness = 0x464; // bool
		constexpr auto PrefireStartTime = 0x468; // float
		constexpr auto FireLockout = 0x46c; // FKSActionRestrictor
		constexpr auto OnFire = 0x478; // FMulticastInlineDelegate
		constexpr auto OnReloadFailed = 0x488; // FMulticastInlineDelegate
		constexpr auto DeathShotForgivenessTime = 0x498; // float
		constexpr auto bTryToReloadEveryTickOnEmpty = 0x49c; // bool
		constexpr auto CachedReloadSize = 0x4a0; // int32_t
		constexpr auto AmmoInClip = 0x4a4; // int32_t
		constexpr auto ClipSize = 0x4a8; // int32_t
		constexpr auto AmmoConsumedSinceLastReload = 0x4ac; // int32_t
		constexpr auto LastReloadRequest = 0x4b0; // FWeaponStateChangeRequest
		constexpr auto bWeaponStartsLoaded = 0x4c0; // bool
		constexpr auto ReloadReplicationFlags = 0x4c1; // EReloadReplicationFlags
		constexpr auto OnExhaustedDel = 0x4c8; // FMulticastInlineDelegate
		constexpr auto bShouldResumeReload = 0x4d8; // bool
		constexpr auto bFirstReload = 0x4d9; // bool
		constexpr auto OnAmmoChangedDel = 0x4e0; // FMulticastInlineDelegate
		constexpr auto OnAmmoInClipConsumed = 0x508; // FMulticastInlineDelegate
		constexpr auto LoadedDamageTypeClass = 0x520; // UDamageType*
		constexpr auto OnHiddenInteractableUpdate = 0x528; // FMulticastInlineDelegate
		constexpr auto CachedHiddenInteractable = 0x538; // AActor*
		constexpr auto NextExpectedTimerEndTime = 0x558; // float
		constexpr auto ActiveTimer = 0x560; // FTimerHandle
		constexpr auto bCanEverInterruptSprinting = 0x568; // bool
		constexpr auto SprintRecoveryRemaining = 0x56c; // float
		constexpr auto bReleasedFireInSprintRecovery = 0x570; // bool
		constexpr auto bDodgeRollInterruptedReload = 0x571; // bool
		constexpr auto bSprintCanInterruptReload = 0x572; // bool
		constexpr auto bDodgeRollCanInterruptReload = 0x573; // bool
		constexpr auto DodgeRollRecoveryRemaining = 0x574; // float
		constexpr auto bInLockon = 0x590; // bool
		constexpr auto LockonProgress = 0x594; // float
		constexpr auto LockonDuration = 0x598; // float
		constexpr auto LockonStartRotation = 0x59c; // FRotator
		constexpr auto LockonEndRotation = 0x5a8; // FRotator
		constexpr auto WeaponRandomStream = 0x60c; // FRandomStream
		constexpr auto AimAssistLockData = 0x668; // UKSAimLockData*
		constexpr auto AimAssistSnapData = 0x670; // UKSAimSnapData*
		constexpr auto bRequireInputForAimAssistLock = 0x678; // bool
		constexpr auto AimAssistLockCurve = 0x680; // UCurveVector*
		constexpr auto AimAssistLockDistanceCurve = 0x688; // UCurveFloat*
		constexpr auto bRequireInputForHipAimAssistLock = 0x690; // bool
		constexpr auto HipAimAssistLockCurve = 0x698; // UCurveVector*
		constexpr auto HipAimAssistLockDistanceCurve = 0x6a0; // UCurveFloat*
		constexpr auto AimAssistSnapCurve = 0x6a8; // UCurveVector*
	}

	namespace n_ULocalLightComponent {
		constexpr auto IntensityUnits = 0x338; // ELightUnits
		constexpr auto Radius = 0x33c; // float
		constexpr auto AttenuationRadius = 0x340; // float
		constexpr auto LightmassSettings = 0x344; // FLightmassPointLightSettings
	}

	namespace n_UKSBloodSplatterComponent {
		constexpr auto Damage = 0x130; // float
	}

	namespace n_AKSJobSelectPreviewActor_Lobby {
		constexpr auto CharacterIndex = 0x428; // ELobbyCharacterIndex
		constexpr auto bControlChildCharacterNameplate = 0x429; // bool
		constexpr auto ChildCharacterDefaultScaleOverride = 0x42c; // float
		constexpr auto WeakPlayerInfo = 0x430; // TWeakObjectPtr<UKSPlayerInfo>
		constexpr auto bPlayerPendingPartyAccept = 0x438; // bool
		constexpr auto bAllowJobChangeOnPlayEmote = 0x439; // bool
		constexpr auto bStopPlayingEmoteWhileLoadingNewEmote = 0x43a; // bool
		constexpr auto EmoteCameraPositionLocationOffsets = 0x440; // TMap<EEmoteCameraPositionType, FVector>
		constexpr auto EmoteCameraPositionScaleOverrides = 0x490; // TMap<EEmoteCameraPositionType, float>
		constexpr auto FailSafeEmoteJob = 0x4e0; // TSoftObjectPtr<UKSJobItem>
		constexpr auto PendingEmote = 0x508; // UKSEmote*
		constexpr auto PendingEmoteComponentId = 0x520; // FKSEquipmentId
		constexpr auto PendingEmoteComponent = 0x528; // UKSEmoteCosmeticComponent*
		constexpr auto PendingEmoteExpectedJob = 0x530; // TSoftObjectPtr<UKSJobItem>
		constexpr auto ActiveEmoteExpectedJob = 0x558; // TSoftObjectPtr<UKSJobItem>
		constexpr auto ActiveEmoteComponent = 0x580; // UKSEmoteCosmeticComponent*
		constexpr auto ChildCharacterDefaultLocation = 0x588; // FVector
	}

	namespace n_UKSPlayerMod_ActionRestrictor {
		constexpr auto bRestrictSprint = 0x330; // bool
		constexpr auto bRestrictDodgeRoll = 0x331; // bool
		constexpr auto bRestrictMantleAndVault = 0x332; // bool
		constexpr auto bRestrictQuickMelee = 0x333; // bool
		constexpr auto bRestrictGadgetUse = 0x334; // bool
		constexpr auto bRestrictInteracting = 0x335; // bool
		constexpr auto bRestrictJumping = 0x336; // bool
		constexpr auto bRestrictCrouching = 0x337; // bool
		constexpr auto bRestrictEmotesAndSprays = 0x338; // bool
	}

	namespace n_UModularSynthComponent {
		constexpr auto VoiceCount = 0x6e0; // int32_t
	}

	namespace n_UKSRuleBasedPhaseProxy {
		constexpr auto OnPhaseCompleted = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailedToStart = 0x38; // FMulticastInlineDelegate
		constexpr auto MatchPhase = 0x5c; // FMatchPhase
	}

	namespace n_UKSPlayerChallengesManager {
		constexpr auto OnPlayerChallengesReady = 0x230; // FMulticastInlineDelegate
		constexpr auto OnPlayerChallengesChanged = 0x240; // FMulticastInlineDelegate
		constexpr auto OnPlayerDailyContractTimerChanged = 0x250; // FMulticastInlineDelegate
		constexpr auto ChallengesReady = 0x260; // bool
		constexpr auto TestPlayerChallengeComplete = 0x268; // FMulticastInlineDelegate
		constexpr auto OnLoginRewardClaimed = 0x288; // FMulticastInlineDelegate
	}

	namespace n_UWBP_RadialMenuEntry_Divider_C {
		constexpr auto Image_114 = 0x238; // UImage*
	}

	namespace n_UGarbageCollectionSettings {
		constexpr auto TimeBetweenPurgingPendingKillObjects = 0x38; // float
		constexpr auto FlushStreamingOnGC = 0x3c; // char : 1
		constexpr auto AllowParallelGC = 0x3c; // char : 1
		constexpr auto IncrementalBeginDestroyEnabled = 0x3c; // char : 1
		constexpr auto MultithreadedDestructionEnabled = 0x3c; // char : 1
		constexpr auto CreateGCClusters = 0x3c; // char : 1
		constexpr auto AssetClusteringEnabled = 0x3c; // char : 1
		constexpr auto ActorClusteringEnabled = 0x3c; // char : 1
		constexpr auto BlueprintClusteringEnabled = 0x3c; // char : 1
		constexpr auto UseDisregardForGCOnDedicatedServers = 0x3d; // char : 1
		constexpr auto MinGCClusterSize = 0x40; // int32_t
		constexpr auto NumRetriesBeforeForcingGC = 0x44; // int32_t
		constexpr auto MaxObjectsNotConsideredByGC = 0x48; // int32_t
		constexpr auto SizeOfPermanentObjectPool = 0x4c; // int32_t
		constexpr auto MaxObjectsInGame = 0x50; // int32_t
		constexpr auto MaxObjectsInEditor = 0x54; // int32_t
	}

	namespace n_UNiagaraDataInterfaceStaticMesh {
		constexpr auto DefaultMesh = 0x30; // UStaticMesh*
		constexpr auto Source = 0x38; // AActor*
		constexpr auto SourceComponent = 0x40; // UStaticMeshComponent*
		constexpr auto SectionFilter = 0x48; // FNDIStaticMeshSectionFilter
	}

	namespace n_UMaterialParameterCollection {
		constexpr auto StateId = 0x28; // FGuid
		constexpr auto ScalarParameters = 0x38; // TArray<FCollectionScalarParameter>
		constexpr auto VectorParameters = 0x48; // TArray<FCollectionVectorParameter>
	}

	namespace n_UKSBattlepass {
		constexpr auto UpsellScreenData = 0x288; // FBattlepassUpsellData
		constexpr auto ProgressItemId = 0x3c8; // int32_t
		constexpr auto PremiumRewardVendorId = 0x3cc; // int32_t
		constexpr auto LevelPurchaseLootTableId = 0x3d0; // int64_t
		constexpr auto LevelPurchaseLootId = 0x3d8; // int64_t
		constexpr auto InstantUnlockRewardVendorId = 0x3e0; // int64_t
		constexpr auto FreeIcon = 0x3e8; // TSoftObjectPtr<UTexture2D>
		constexpr auto PremiumIcon = 0x410; // TSoftObjectPtr<UTexture2D>
	}

	namespace n_UNavigationGraphNodeComponent {
		constexpr auto Node = 0x208; // FNavGraphNode
		constexpr auto NextNodeComponent = 0x220; // UNavigationGraphNodeComponent*
		constexpr auto PrevNodeComponent = 0x228; // UNavigationGraphNodeComponent*
	}

	namespace n_UKSActiveDurationBar {
		constexpr auto BoundPlayerMod = 0x550; // UKSPlayerModInstance*
	}

	namespace n_UKSSpawnRule_Side {
		constexpr auto NullTeamScore = 0x40; // float
	}

	namespace n_UKSLowAmmoAlertWidget {
		constexpr auto LowAmmoThreshold = 0x5e8; // float
		constexpr auto CachedLowAmmoState = 0x5ec; // ELowAmmoState
		constexpr auto OnAmmoStateChangedDel = 0x5f0; // FMulticastInlineDelegate
	}

	namespace n_UPlanePositionGizmo {
		constexpr auto AxisSource = 0x48; // TScriptInterface<IGizmoAxisSource>
		constexpr auto ParameterSource = 0x58; // TScriptInterface<IGizmoVec2ParameterSource>
		constexpr auto HitTarget = 0x68; // TScriptInterface<IGizmoClickTarget>
		constexpr auto StateTarget = 0x78; // TScriptInterface<IGizmoStateTarget>
		constexpr auto bEnableSignedAxis = 0x88; // bool
		constexpr auto bFlipX = 0x89; // bool
		constexpr auto bFlipY = 0x8a; // bool
		constexpr auto bInInteraction = 0x8b; // bool
		constexpr auto InteractionOrigin = 0x8c; // FVector
		constexpr auto InteractionNormal = 0x98; // FVector
		constexpr auto InteractionAxisX = 0xa4; // FVector
		constexpr auto InteractionAxisY = 0xb0; // FVector
		constexpr auto InteractionStartPoint = 0xbc; // FVector
		constexpr auto InteractionCurPoint = 0xc8; // FVector
		constexpr auto InteractionStartParameter = 0xd4; // FVector2D
		constexpr auto InteractionCurParameter = 0xdc; // FVector2D
		constexpr auto ParameterSigns = 0xe4; // FVector2D
	}

	namespace n_UMaterialExpressionVectorParameter {
		constexpr auto DefaultValue = 0x58; // FLinearColor
		constexpr auto bUseCustomPrimitiveData = 0x68; // bool
		constexpr auto PrimitiveDataIndex = 0x69; // char
	}

	namespace n_UAUD_ExplosionWithEcho_C {
		constexpr auto UberGraphFrame = 0xb0; // FPointerToUberGraphFrame
		constexpr auto Explosion Sound = 0xb8; // UAkAudioEvent*
		constexpr auto Echo Directions = 0xc0; // TArray<FRotator>
		constexpr auto Echo Max Distance = 0xd0; // float
		constexpr auto Echo Sound Location = 0xd4; // FVector
		constexpr auto Speed of Sound = 0xe0; // float
		constexpr auto Echo Sound = 0xe8; // UAkAudioEvent*
		constexpr auto Units From Ground = 0xf0; // int32_t
	}

	namespace n_UWBP_RadialMenuHighlight_C {
		constexpr auto DividerLeft = 0x238; // UWBP_RadialMenuEntry_Divider_Highlight_C*
		constexpr auto DividerRight = 0x240; // UWBP_RadialMenuEntry_Divider_Highlight_C*
		constexpr auto Highlight = 0x248; // UImage*
	}

	namespace n_ALevelSequenceMediaController {
		constexpr auto Sequence = 0x228; // ALevelSequenceActor*
		constexpr auto MediaComponent = 0x230; // UMediaComponent*
		constexpr auto ServerStartTimeSeconds = 0x238; // float
	}

	namespace n_AKSLobbyCharacter {
		constexpr auto ViewModelName = 0x3cc0; // FName
		constexpr auto ActiveLobbyMontage = 0x3cc8; // UAnimMontage*
		constexpr auto bEnableRogueSelectWeaponPose = 0x3cd0; // bool
		constexpr auto bEnableWalkinCinematicWeaponPose = 0x3cd1; // bool
		constexpr auto CharacterIndex = 0x3cd2; // ELobbyCharacterIndex
		constexpr auto LobbyWeapon01Component = 0x3cd8; // UKSWeaponSkeletalMeshComponent*
		constexpr auto LobbyWeapon02Component = 0x3ce0; // UKSWeaponSkeletalMeshComponent*
		constexpr auto LobbyProp01Component = 0x3ce8; // UKSWeaponSkeletalMeshComponent*
		constexpr auto LobbyProp02Component = 0x3cf0; // UKSWeaponSkeletalMeshComponent*
		constexpr auto LobbyPropStatic01Component = 0x3cf8; // UKSStaticMeshComponent*
		constexpr auto LobbyPropStatic02Component = 0x3d00; // UKSStaticMeshComponent*
		constexpr auto SkeletalPropMapping = 0x3d08; // TMap<FName, FLobbySkeletalPropInfo>
		constexpr auto StaticPropMapping = 0x3d58; // TMap<FName, FLobbyStaticPropInfo>
		constexpr auto ShouldHideInGame = 0x3da8; // bool
		constexpr auto bWereTexturesStreamedIn = 0x3da9; // bool
		constexpr auto bIsSet = 0x3daa; // bool
		constexpr auto bHideUntilTexturesStream = 0x3dab; // bool
		constexpr auto bForceEnableClothSim = 0x3dac; // bool
		constexpr auto bPrestreamTextures = 0x3dad; // bool
		constexpr auto ForcedLodModel = 0x3db0; // int32_t
		constexpr auto bCustomForcedLodForSwitch = 0x3db4; // bool
		constexpr auto ForcedLodModelSwitch = 0x3db8; // int32_t
		constexpr auto CurrentAnimState = 0x3dc4; // ELobbyCharacterAnimState
		constexpr auto OnVisibilityChangedDel = 0x3dc8; // FMulticastInlineDelegate
		constexpr auto bIsRotatable = 0x3dd8; // bool
		constexpr auto MaxAxisRotation = 0x3ddc; // FVector
		constexpr auto IdleSecondsToResetRotation = 0x3de8; // float
		constexpr auto ResetRotationSpeedRadians = 0x3dec; // float
		constexpr auto RotationRatePerAxis = 0x3df0; // FVector
	}

	namespace n_ULiveLinkAnimationRoleToTransform {
		constexpr auto BoneName = 0x28; // FName
	}

	namespace n_AKSInspectableMusicManagerActor {
		constexpr auto AkEvent = 0x220; // UAkAudioEvent*
		constexpr auto NamesForRtpcQueries = 0x228; // TArray<FName>
		constexpr auto NamesForSwitchQueries = 0x238; // TArray<FName>
		constexpr auto bQueryResultsReady = 0x2f0; // bool
		constexpr auto StaleCounter = 0x2f4; // int32_t
	}

	namespace n_UKSHUDStateTracker {
		constexpr auto OnHUDMatchPhaseChanged = 0x28; // FMulticastInlineDelegate
		constexpr auto PhaseTime = 0x38; // float
		constexpr auto TrackedCurrentMatchPhase = 0x3c; // FMatchPhase
	}

	namespace n_UKSMilestoneCompletedScreen {
		constexpr auto WeaponMasteryMeter = 0x520; // UKSWeaponProgressMeter*
		constexpr auto PopulatedWeapon = 0x528; // UKSWeaponAsset*
		constexpr auto CurrentMilestoneData = 0x530; // UKSMilestoneCompletedSummary*
	}

	namespace n_AKSWeapon_Proximity {
		constexpr auto ProximityComponentClass = 0x6d8; // UKSProximityComponent*
		constexpr auto ProximityComponent = 0x6e0; // UKSProximityComponent*
		constexpr auto bCacheProximityActorsWhileFiring = 0x6e8; // bool
		constexpr auto bProximityActiveOnlyInHand = 0x6e9; // bool
		constexpr auto ProximityActors = 0x6f0; // TArray<AActor*>
		constexpr auto CachedProximityActors = 0x700; // TArray<AActor*>
		constexpr auto ProximityComponents = 0x710; // TArray<UPrimitiveComponent*>
		constexpr auto CachedProximityComponents = 0x720; // TArray<UPrimitiveComponent*>
		constexpr auto OnCachedProximityActorsUpdatedDel = 0x730; // FMulticastInlineDelegate
	}

	namespace n_UKSViewRedirector_LocalSetting {
		constexpr auto LocalActionName = 0x28; // FName
	}

	namespace n_USourceEffectEnvelopeFollowerPreset {
		constexpr auto Settings = 0x74; // FSourceEffectEnvelopeFollowerSettings
	}

	namespace n_UGameNetworkManagerSettings {
		constexpr auto MinDynamicBandwidth = 0x28; // int32_t
		constexpr auto MaxDynamicBandwidth = 0x2c; // int32_t
		constexpr auto TotalNetBandwidth = 0x30; // int32_t
		constexpr auto BadPingThreshold = 0x34; // int32_t
		constexpr auto bIsStandbyCheckingEnabled = 0x38; // char : 1
		constexpr auto StandbyRxCheatTime = 0x3c; // float
		constexpr auto StandbyTxCheatTime = 0x40; // float
		constexpr auto PercentMissingForRxStandby = 0x44; // float
		constexpr auto PercentMissingForTxStandby = 0x48; // float
		constexpr auto PercentForBadPing = 0x4c; // float
		constexpr auto JoinInProgressStandbyWaitTime = 0x50; // float
	}

	namespace n_UBTTask_MoveDirectlyToward {
		constexpr auto bDisablePathUpdateOnGoalLocationChange = 0xb0; // char : 1
		constexpr auto bProjectVectorGoalToNavigation = 0xb0; // char : 1
		constexpr auto bUpdatedDeprecatedProperties = 0xb0; // char : 1
	}

	namespace n_UKSAnnouncementQueuedMessageWidget {
		constexpr auto OnEndDisplay = 0x520; // FMulticastInlineDelegate
		constexpr auto AnnouncementData = 0x530; // FAnnouncementData
	}

	namespace n_UKSProfileRogueStatsWidget {
		constexpr auto DisplayedPlayerStats = 0x520; // TArray<UKSStatWrapper*>
		constexpr auto DisplayedRogueStats = 0x530; // TArray<UKSStatWrapper*>
	}

	namespace n_UAsyncTask_LoadXRDeviceVisComponent {
		constexpr auto OnModelLoaded = 0x30; // FMulticastInlineDelegate
		constexpr auto OnLoadFailure = 0x40; // FMulticastInlineDelegate
		constexpr auto SpawnedComponent = 0x58; // UPrimitiveComponent*
	}

	namespace n_UKSBTTask_FindGrenadeTarget_SimpleCover {
		constexpr auto FloorHeightFudgeFactor = 0x118; // float
		constexpr auto FullCoverOffsetDistance = 0x11c; // float
		constexpr auto MediumCoverHeightOffset = 0x120; // float
		constexpr auto MediumCoverHeightOffsetCrouched = 0x124; // float
	}

	namespace n_ULevelCapture {
		constexpr auto bAutoStartCapture = 0x220; // bool
		constexpr auto PrerequisiteActorId = 0x22c; // FGuid
	}

	namespace n_UWBP_LoginRewards_ClaimScreen_C {
		constexpr auto UberGraphFrame = 0x548; // FPointerToUberGraphFrame
		constexpr auto TransitionIn = 0x550; // UWidgetAnimation*
		constexpr auto TransitionOut = 0x558; // UWidgetAnimation*
		constexpr auto background = 0x560; // UImage*
		constexpr auto Decro = 0x568; // UImage*
		constexpr auto Image_213 = 0x570; // UImage*
		constexpr auto Image_221 = 0x578; // UImage*
		constexpr auto Text = 0x580; // UTextBlock*
		constexpr auto TimeFrame = 0x588; // UTextBlock*
		constexpr auto WBP_LoginRewardsGrid = 0x590; // UWBP_LoginRewardsGrid_C*
		constexpr auto WBP_PanelDefault = 0x598; // UWBP_PanelDefault_C*
		constexpr auto WBP_StandardButtonLarge = 0x5a0; // UWBP_StandardButtonLarge_C*
		constexpr auto WBP_Subtitle = 0x5a8; // UWBP_Subtitle_C*
		constexpr auto Sound_ClaimedItem = 0x5b0; // UAkAudioEvent*
	}

	namespace n_UAkLuminInitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettingsWithSampleRate
		constexpr auto CommunicationSettings = 0x90; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xb8; // FAkAdvancedInitializationSettingsWithMultiCoreRendering
	}

	namespace n_UKSActivityRequirement_RankedSeason {
		constexpr auto RequiredRankedSeason = 0x30; // FString
	}

	namespace n_UKSMultiStateTargetingModule {
		constexpr auto TargetingModuleInfos = 0x128; // TArray<FKSTargetingModuleInfo>
	}

	namespace n_UParticleModuleVelocityCone {
		constexpr auto Angle = 0x38; // FRawDistributionFloat
		constexpr auto Velocity = 0x68; // FRawDistributionFloat
		constexpr auto Direction = 0x98; // FVector
	}

	namespace n_UWBP_SettingsRadio_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto Hover_Selected = 0x528; // UWidgetAnimation*
		constexpr auto Hover = 0x530; // UWidgetAnimation*
		constexpr auto Select = 0x538; // UWidgetAnimation*
		constexpr auto RadioButton = 0x540; // UButton*
		constexpr auto RadioText = 0x548; // UTextBlock*
		constexpr auto DisplayText = 0x550; // FText
		constexpr auto On Radio Button Selected = 0x568; // FMulticastInlineDelegate
		constexpr auto bSelected = 0x578; // bool
		constexpr auto HoverSettingsRadioSFX = 0x580; // UAkAudioEvent*
		constexpr auto ClickSettingsRadioSFX = 0x588; // UAkAudioEvent*
	}

	namespace n_UWBP_ChallengeView_SeasonalContracts_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto DescText = 0x528; // UTextBlock*
		constexpr auto DescWrapper = 0x530; // UHorizontalBox*
		constexpr auto Image_362 = 0x538; // UImage*
		constexpr auto TimeRemaining = 0x540; // UTextBlock*
		constexpr auto TimerSwitcher = 0x548; // UWidgetSwitcher*
		constexpr auto WBP_ChallengeEntry_SeasonalChallenge_C = 0x550; // UWBP_ChallengeEntry_Seasonal_C*
		constexpr auto WBP_ChallengeEntry_SeasonalChallenge_C_1 = 0x558; // UWBP_ChallengeEntry_Seasonal_C*
		constexpr auto WBP_ChallengeEntry_SeasonalChallenge_C_2 = 0x560; // UWBP_ChallengeEntry_Seasonal_C*
		constexpr auto WBP_ChallengeEntry_SeasonalChallenge_C_3 = 0x568; // UWBP_ChallengeEntry_Seasonal_C*
		constexpr auto WBP_ChallengeEntry_SeasonalMastery = 0x570; // UWBP_ChallengeEntry_SeasonalMastery_C*
		constexpr auto WeeklyTrackContainer = 0x578; // UVerticalBox*
		constexpr auto WeeklyTrackScrollBox = 0x580; // UScrollBox*
		constexpr auto NumWeeks = 0x588; // int32_t
	}

	namespace n_UKSVehicleMovementComponent4W {
		constexpr auto ParachuteDeployed = 0x408; // bool
		constexpr auto ParachuteDetached = 0x409; // bool
		constexpr auto SpeedToConsiderParachuteDeployment = 0x40c; // float
		constexpr auto DistanceToDeployParachute = 0x410; // float
		constexpr auto DistanceToDetachParachute = 0x414; // float
		constexpr auto DistanceToAllowManualDetachment = 0x418; // float
		constexpr auto TimeUntilParachuteDeployed = 0x41c; // float
		constexpr auto ParachuteDownwardSpeed = 0x420; // float
		constexpr auto ManualDetachmentAllowed = 0x424; // bool
		constexpr auto ReorientedPitch = 0x428; // float
		constexpr auto TimeToReorientPitch = 0x42c; // float
		constexpr auto FallingTurnSpeed = 0x430; // float
		constexpr auto SlowFallingSpeed = 0x434; // float
		constexpr auto DefaultFallingSpeed = 0x438; // float
		constexpr auto FastFallingSpeed = 0x43c; // float
		constexpr auto TimeToReachDesiredFallSpeed = 0x440; // float
		constexpr auto AirSpeedInput = 0x444; // float
		constexpr auto MaxAngleToPreventRoll = 0x448; // float
	}

	namespace n_USlateAccessibleWidgetData {
		constexpr auto bCanChildrenBeAccessible = 0x28; // bool
		constexpr auto AccessibleBehavior = 0x29; // ESlateAccessibleBehavior
		constexpr auto AccessibleSummaryBehavior = 0x2a; // ESlateAccessibleBehavior
		constexpr auto AccessibleText = 0x30; // FText
		constexpr auto AccessibleTextDelegate = 0x48; // FDelegate
		constexpr auto AccessibleSummaryText = 0x58; // FText
		constexpr auto AccessibleSummaryTextDelegate = 0x70; // FDelegate
	}

	namespace n_UDistributionVector {
		constexpr auto bCanBeBaked = 0x30; // char : 1
		constexpr auto bIsDirty = 0x30; // char : 1
		constexpr auto bBakedDataSuccesfully = 0x30; // char : 1
	}

	namespace n_UWBP_JoinMatchBlocker_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto OnShow = 0x528; // UWidgetAnimation*
		constexpr auto BackfillCallout = 0x530; // UVerticalBox*
		constexpr auto BlockerBkg = 0x538; // UImage*
		constexpr auto CancelButton = 0x540; // UWBP_StandardButtonSmall_C*
		constexpr auto JoiningText = 0x548; // UTextBlock*
		constexpr auto MainWrapper = 0x550; // UCanvasPanel*
		constexpr auto WBP_LoadingThrobber = 0x558; // UWBP_ThrobberShield_C*
		constexpr auto WBP_ModalPopupContainer = 0x560; // UWBP_ModalPopupContainer_C*
	}

	namespace n_UKSActivityRewardCondition_ActivityEventTrigger {
		constexpr auto MatchingGameplayTags = 0x30; // TArray<FGameplayTag>
	}

	namespace n_UWBP_PurchaseConfirmation_C {
		constexpr auto UberGraphFrame = 0x538; // FPointerToUberGraphFrame
		constexpr auto OnShow = 0x540; // UWidgetAnimation*
		constexpr auto ActionButtonContainer = 0x548; // UVerticalBox*
		constexpr auto BattlePassEmblemSizeBox = 0x550; // USizeBox*
		constexpr auto BattlePassEmblemWrapper = 0x558; // UScaleBox*
		constexpr auto BattlePassTierDecrement = 0x560; // UHorizontalBox*
		constexpr auto BattlePassTierIncrement = 0x568; // UHorizontalBox*
		constexpr auto BattlePassWidgetWrapper = 0x570; // UHorizontalBox*
		constexpr auto BundleItem0 = 0x578; // UWBP_KSCosmeticItemDisplay_C*
		constexpr auto BundleItem1 = 0x580; // UWBP_KSCosmeticItemDisplay_C*
		constexpr auto BundleItem2 = 0x588; // UWBP_KSCosmeticItemDisplay_C*
		constexpr auto BundleItem3 = 0x590; // UWBP_KSCosmeticItemDisplay_C*
		constexpr auto BundleItem4 = 0x598; // UWBP_KSCosmeticItemDisplay_C*
		constexpr auto BundleItemsWrapper = 0x5a0; // UVerticalBox*
		constexpr auto ButtonArrowNext = 0x5a8; // UWBP_ButtonArrow_C*
		constexpr auto ButtonArrowPrev = 0x5b0; // UWBP_ButtonArrow_C*
		constexpr auto CurrencyRequiredLabel = 0x5b8; // UTextBlock*
		constexpr auto CurrencyRequiredWrapper = 0x5c0; // UHorizontalBox*
		constexpr auto CurrencySummary = 0x5c8; // UWBP_CurrencySummary_C*
		constexpr auto FullscreenMarketingImage = 0x5d0; // UWBP_AsyncIcon_C*
		constexpr auto GamepadScrollContainer = 0x5d8; // UCanvasPanel*
		constexpr auto GamepadScrollLeft = 0x5e0; // UKSAsyncImage*
		constexpr auto GamepadScrollRight = 0x5e8; // UKSAsyncImage*
		constexpr auto GamepadTierDecrementKey = 0x5f0; // UPUMG_AsyncImage*
		constexpr auto GamepadTierIncrementKey = 0x5f8; // UPUMG_AsyncImage*
		constexpr auto GampadNextItemDisplay = 0x600; // UPUMG_AsyncImage*
		constexpr auto GampadPrevItemDisplay = 0x608; // UPUMG_AsyncImage*
		constexpr auto HeaderTypeSwitcher = 0x610; // UWidgetSwitcher*
		constexpr auto Image_155 = 0x618; // UImage*
		constexpr auto ItemCountDisplay = 0x620; // UOverlay*
		constexpr auto ItemCountDisplayText = 0x628; // UTextBlock*
		constexpr auto ItemDescription = 0x630; // UTextBlock*
		constexpr auto ItemDescriptionScrollBox = 0x638; // UKSScrollBox*
		constexpr auto ItemIcon = 0x640; // UWBP_AsyncIcon_C*
		constexpr auto ItemIconHolder = 0x648; // USizeBox*
		constexpr auto ItemInfoContainer = 0x650; // UWBP_ItemInfoContainer_Centered_C*
		constexpr auto ItemName = 0x658; // UTextBlock*
		constexpr auto NextItemContainer = 0x660; // UOverlay*
		constexpr auto OwnedSwitcher = 0x668; // UWidgetSwitcher*
		constexpr auto PanelSubtitleImage = 0x670; // UWBP_AsyncIcon_C*
		constexpr auto PanelSubtitleImageContainer = 0x678; // USizeBox*
		constexpr auto PrevItemContainer = 0x680; // UOverlay*
		constexpr auto PurchaseBackPanel = 0x688; // UOverlay*
		constexpr auto PurchaseBackPanelVert = 0x690; // UVerticalBox*
		constexpr auto PurchasingBlocker = 0x698; // UCanvasPanel*
		constexpr auto RarityBorder = 0x6a0; // UWBP_ButtonSlot_Cosmetic_C*
		constexpr auto RarityColorBlock = 0x6a8; // UImage*
		constexpr auto RarityColorBlock_2 = 0x6b0; // UImage*
		constexpr auto RarityGradient = 0x6b8; // UImage*
		constexpr auto RarityRichText = 0x6c0; // URichTextBlock*
		constexpr auto RefundItems = 0x6c8; // UBorder*
		constexpr auto RefundQuantity = 0x6d0; // UTextBlock*
		constexpr auto RefundText = 0x6d8; // UHorizontalBox*
		constexpr auto RequiredCurrencyIcon = 0x6e0; // UKSAsyncImage*
		constexpr auto RequiredCurrencyText = 0x6e8; // UTextBlock*
		constexpr auto RightThumbstickScrollImage = 0x6f0; // UKSAsyncImage*
		constexpr auto ScrollLeftButton = 0x6f8; // UWBP_ButtonArrow_C*
		constexpr auto ScrollLeftButton_2 = 0x700; // UWBP_ButtonArrow_C*
		constexpr auto ScrollLeftIndicator = 0x708; // UHorizontalBox*
		constexpr auto ScrollRightButton = 0x710; // UWBP_ButtonArrow_C*
		constexpr auto ScrollRightButton_2 = 0x718; // UWBP_ButtonArrow_C*
		constexpr auto ScrollRightIndicator = 0x720; // UHorizontalBox*
		constexpr auto SlowPurchaseBackButton = 0x728; // UWBP_StandardButtonMedium_C*
		constexpr auto StandardItemHeader = 0x730; // UHorizontalBox*
		constexpr auto TextBlock = 0x738; // UTextBlock*
		constexpr auto TextHeader = 0x740; // UHorizontalBox*
		constexpr auto TextHeaderText = 0x748; // UTextBlock*
		constexpr auto WBP_BattlePassEmblem = 0x750; // UWBP_BattlePassEmblem_C*
		constexpr auto WBP_BundleUpsellButton = 0x758; // UWBP_BundleUpsellButton_C*
		constexpr auto WBP_CosmeticItemTags = 0x760; // UWBP_CosmeticItemTags_C*
		constexpr auto WBP_ItemPreviewStack = 0x768; // UWBP_ItemPreviewStack_C*
		constexpr auto CurrentIndex = 0x770; // int32_t
		constexpr auto StoreItems = 0x778; // TArray<UKSStorePanelItem*>
		constexpr auto ScrollValue = 0x788; // int32_t
		constexpr auto IsPurchasing = 0x78c; // bool
		constexpr auto BundleContents = 0x790; // TArray<UPUMG_StoreItem*>
		constexpr auto IsBattlePassPurchase = 0x7a0; // bool
		constexpr auto IsViewingBundleContents = 0x7a1; // bool
		constexpr auto BundleButtons = 0x7a8; // TArray<UWBP_KSCosmeticItemDisplay_C*>
		constexpr auto BundleButtonScrollIndex = 0x7b8; // int32_t
		constexpr auto NAV_GROUP_MAIN = 0x7bc; // int32_t
		constexpr auto NAV_GROUP_PURCHASING = 0x7c0; // int32_t
		constexpr auto BundleContentsButton = 0x7c8; // UWBP_PurchaseConfirmationButton_C*
		constexpr auto BundleHighlightIndex = 0x7d0; // int32_t
		constexpr auto ShowPurchaseConfirmSFX = 0x7d8; // UAkAudioEvent*
		constexpr auto PurchasingTimeout = 0x7e0; // float
		constexpr auto BattlePassStoreItems = 0x7e8; // TArray<UPUMG_StoreItem*>
		constexpr auto IsPostAcquisitionState = 0x7f8; // bool
		constexpr auto PreviewActor = 0x800; // AKSJobSelectPrvwActor_RogueScrn*
		constexpr auto CurrencySummary_1 = 0x808; // UWBP_CurrencySummary_C*
		constexpr auto EquipData = 0x810; // UKSEquipOnAcquisitionData*
		constexpr auto AdditionalCurrencyPurchaseInfo = 0x818; // UKSStoreItemWithPurchaseData*
		constexpr auto PreviousItem = 0x820; // UObject*
		constexpr auto PurchaseAcquisitionConfirmedSFX = 0x828; // UAkAudioEvent*
		constexpr auto ShowPurchaseQuantity = 0x830; // bool
	}

	namespace n_AGameStateBase {
		constexpr auto GameModeClass = 0x220; // AGameModeBase*
		constexpr auto AuthorityGameMode = 0x228; // AGameModeBase*
		constexpr auto SpectatorClass = 0x230; // ASpectatorPawn*
		constexpr auto PlayerArray = 0x238; // TArray<APlayerState*>
		constexpr auto bReplicatedHasBegunPlay = 0x248; // bool
		constexpr auto ReplicatedWorldTimeSeconds = 0x24c; // float
		constexpr auto ServerWorldTimeSecondsDelta = 0x250; // float
		constexpr auto ServerWorldTimeSecondsUpdateFrequency = 0x254; // float
	}

	namespace n_AKSMapPoint {
		constexpr auto MapPointTypes = 0x220; // FGameplayTagContainer
		constexpr auto ValidSides = 0x240; // TArray<int32_t>
		constexpr auto bShouldCrouch = 0x250; // bool
	}

	namespace n_UMaterialExpressionStaticSwitchParameter {
		constexpr auto A = 0x60; // FExpressionInput
		constexpr auto B = 0x74; // FExpressionInput
	}

	namespace n_USoundClass {
		constexpr auto Properties = 0x28; // FSoundClassProperties
		constexpr auto ChildClasses = 0x88; // TArray<USoundClass*>
		constexpr auto PassiveSoundMixModifiers = 0x98; // TArray<FPassiveSoundMixModifier>
		constexpr auto Modulation = 0xa8; // FSoundModulation
		constexpr auto ParentClass = 0xb8; // USoundClass*
	}

	namespace n_UBlackboardKeyType_Object {
		constexpr auto BaseClass = 0x30; // UObject*
	}

	namespace n_UListViewBase {
		constexpr auto EntryWidgetClass = 0x110; // UUserWidget*
		constexpr auto WheelScrollMultiplier = 0x118; // float
		constexpr auto bEnableScrollAnimation = 0x11c; // bool
		constexpr auto bEnableFixedLineOffset = 0x11d; // bool
		constexpr auto FixedLineScrollOffset = 0x120; // float
		constexpr auto BP_OnEntryGenerated = 0x128; // FMulticastInlineDelegate
		constexpr auto BP_OnEntryReleased = 0x138; // FMulticastInlineDelegate
		constexpr auto EntryWidgetPool = 0x148; // FUserWidgetPool
	}

	namespace n_UAkIOSInitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettingsWithSampleRate
		constexpr auto AudioSession = 0x90; // FAkAudioSession
		constexpr auto CommunicationSettings = 0xa0; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xc8; // FAkAdvancedInitializationSettings
	}

	namespace n_UKSBTTask_SelectIngressPoint {
		constexpr auto IngressPointActorKey = 0x70; // FBlackboardKeySelector
		constexpr auto bShouldLeave = 0x98; // bool
	}

	namespace n_UKSPlayerMod_ProjectileDamage {
		constexpr auto BounceDamageMultiplier = 0x330; // float
	}

	namespace n_UKSWeaponAttachmentInst_VarScope {
		constexpr auto VariableScopeAsset = 0x130; // UKSWeaponAttachment_VarScope*
		constexpr auto ScopeZoomIndex = 0x138; // char
	}

	namespace n_UKSJobSelectCaptainStatusWidget {
		constexpr auto CachedCaptainTask = 0x548; // FJobSelectionTask
		constexpr auto CachedCaptainPlayerData = 0x590; // UKSPersistentPlayerData*
		constexpr auto CachedCaptainId = 0x598; // FKSPersistentPlayerId
	}

	namespace n_UPCM_Hero_ABP_C {
		constexpr auto AnimGraphNode_ModifyBone_44 = 0x10f0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_BlendListByBool_96 = 0x1208; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TransitionResult_30 = 0x12b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_BlendSpaceSkinned_4 = 0x12f0; // FAnimNode_BlendSpacePlayerSkinned
		constexpr auto AnimGraphNode_BlendSpaceSkinned_3 = 0x14f0; // FAnimNode_BlendSpacePlayerSkinned
		constexpr auto AnimGraphNode_BlendSpacePlayer_4 = 0x16f0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_95 = 0x17e0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_3 = 0x1890; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_20 = 0x1980; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequenceSkinned_73 = 0x19c0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_72 = 0x1b20; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_79 = 0x1c80; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_78 = 0x1d08; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_94 = 0x1d90; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_19 = 0x1e40; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_6 = 0x1e80; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_ModifyBone_43 = 0x1f40; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_42 = 0x2058; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_31 = 0x2170; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_156 = 0x2240; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_30 = 0x2278; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SaveCachedPose_56 = 0x2348; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_155 = 0x2410; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Slot_16 = 0x2448; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose_154 = 0x24a0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ModifyBone_41 = 0x24d8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_SaveCachedPose_55 = 0x25f0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_ModifyBone_40 = 0x26b8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_39 = 0x27d0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_38 = 0x28e8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_37 = 0x2a00; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_29 = 0x2b18; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SaveCachedPose_54 = 0x2be8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_153 = 0x2cb0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_53 = 0x2ce8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_93 = 0x2db0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_92 = 0x2e60; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_Slot_15 = 0x2f10; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_14 = 0x2f68; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SaveCachedPose_52 = 0x2fc0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_152 = 0x3088; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_151 = 0x30c0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_91 = 0x30f8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_33 = 0x31a8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_33 = 0x31d8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_36 = 0x3208; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_32 = 0x3320; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_Fabrik_4 = 0x3350; // FAnimNode_Fabrik
		constexpr auto AnimGraphNode_ModifyBone_35 = 0x34f0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_34 = 0x3608; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_33 = 0x3720; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_BlendListByBool_90 = 0x3838; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LocalToComponentSpace_32 = 0x38e8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_31 = 0x3918; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_BlendListByBool_89 = 0x3948; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_30 = 0x39f8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_31 = 0x3a28; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_BlendListByBool_88 = 0x3a58; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TransitionResult_29 = 0x3b08; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_PoseSnapshot = 0x3b40; // FAnimNode_PoseSnapshot
		constexpr auto AnimGraphNode_StateResult_18 = 0x3be0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_77 = 0x3c20; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_17 = 0x3ca8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_5 = 0x3ce8; // FAnimNode_StateMachine
		constexpr auto __CustomProperty_StringMantlesTogether_461224144FFC5A148A9487A371F95429 = 0x3da8; // bool
		constexpr auto __CustomProperty_Max2StoryMantleHt_461224144FFC5A148A9487A371F95429 = 0x3dac; // float
		constexpr auto __CustomProperty_MaxMantleHt_461224144FFC5A148A9487A371F95429 = 0x3db0; // float
		constexpr auto AnimGraphNode_SubInstance_4 = 0x3db8; // FAnimNode_LinkedAnimGraph
		constexpr auto AnimGraphNode_BlendListByEnum_16 = 0x3e68; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SaveCachedPose_51 = 0x3f28; // FAnimNode_SaveCachedPose
		constexpr auto __CustomProperty_EnableLayeredHandAdditives_E3950B524F93AEA4F112E2B3A71E8E86 = 0x3ff0; // bool
		constexpr auto __CustomProperty_UseHuntingRifleHold_E3950B524F93AEA4F112E2B3A71E8E86 = 0x3ff1; // bool
		constexpr auto __CustomProperty_Enable Zipline Eng Aims_E3950B524F93AEA4F112E2B3A71E8E86 = 0x3ff2; // bool
		constexpr auto AnimGraphNode_LinkedAnimGraph_2 = 0x3ff8; // FAnimNode_LinkedAnimGraph
		constexpr auto AnimGraphNode_AimOffsetSkinned_16 = 0x40a8; // FAnimNode_AimOffsetSkinned
		constexpr auto AnimGraphNode_AimOffsetSkinned_15 = 0x4268; // FAnimNode_AimOffsetSkinned
		constexpr auto AnimGraphNode_AimOffsetSkinned_14 = 0x4428; // FAnimNode_AimOffsetSkinned
		constexpr auto __CustomProperty_MeleeLowerBodyDirection_3741820D49F2DBC1518975A785322FAF = 0x45e8; // EKSMovementDirection
		constexpr auto __CustomProperty_bEnableMeleeLowerBody_3741820D49F2DBC1518975A785322FAF = 0x45e9; // bool
		constexpr auto __CustomProperty_bCanTransitionDirections_3741820D49F2DBC1518975A785322FAF = 0x45ea; // bool
		constexpr auto __CustomProperty_PrototypeLocomotionGraphEnable_3741820D49F2DBC1518975A785322FAF = 0x45eb; // bool
		constexpr auto __CustomProperty_MasterWeaponIsGrenade_3741820D49F2DBC1518975A785322FAF = 0x45ec; // bool
		constexpr auto __CustomProperty_CachedPivotAngle_3741820D49F2DBC1518975A785322FAF = 0x45f0; // float
		constexpr auto __CustomProperty_Cached Stop Angle_3741820D49F2DBC1518975A785322FAF = 0x45f4; // float
		constexpr auto __CustomProperty_Dodge Rolling BP_3741820D49F2DBC1518975A785322FAF = 0x45f8; // bool
		constexpr auto __CustomProperty_Starting a Pivot_3741820D49F2DBC1518975A785322FAF = 0x45f9; // bool
		constexpr auto __CustomProperty_StringMantlesTogether_3741820D49F2DBC1518975A785322FAF = 0x45fa; // bool
		constexpr auto __CustomProperty_MaxMantleHt_3741820D49F2DBC1518975A785322FAF = 0x45fc; // float
		constexpr auto AnimGraphNode_SubInstance_3 = 0x4600; // FAnimNode_LinkedAnimGraph
		constexpr auto AnimGraphNode_BlendListByBool_87 = 0x46b0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_Slot_13 = 0x4760; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_12 = 0x47b8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_ModifyBone_32 = 0x4810; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_28 = 0x4928; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_150 = 0x49f8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_50 = 0x4a30; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_149 = 0x4af8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LocalToComponentSpace_30 = 0x4b30; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_31 = 0x4b60; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_TransitionResult_28 = 0x4c78; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_27 = 0x4cb0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_26 = 0x4ce8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_25 = 0x4d20; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_24 = 0x4d58; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequenceSkinned_71 = 0x4d90; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_76 = 0x4ef0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_86 = 0x4f78; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_75 = 0x5028; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_70 = 0x50b0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_69 = 0x5210; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_74 = 0x5370; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_68 = 0x53f8; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_73 = 0x5558; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_67 = 0x55e0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_72 = 0x5740; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_15 = 0x57c8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_StateResult_16 = 0x5888; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequenceSkinned_66 = 0x58c8; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_71 = 0x5a28; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_70 = 0x5ab0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_65 = 0x5b38; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_69 = 0x5c98; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_68 = 0x5d20; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_64 = 0x5da8; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_67 = 0x5f08; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_85 = 0x5f90; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceSkinned_63 = 0x6040; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_62 = 0x61a0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_66 = 0x6300; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_61 = 0x6388; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_60 = 0x64e8; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_65 = 0x6648; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_64 = 0x66d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_59 = 0x6758; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_BlendListByBool_84 = 0x68b8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_83 = 0x6968; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_82 = 0x6a18; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByEnum_14 = 0x6ac8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_StateResult_15 = 0x6b88; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_63 = 0x6bc8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_14 = 0x6c50; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_62 = 0x6c90; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_13 = 0x6d18; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_4 = 0x6d58; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_ModifyBone_30 = 0x6e18; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_BlendListByBool_81 = 0x6f30; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_80 = 0x6fe0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose_49 = 0x7090; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_79 = 0x7158; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_Slot_11 = 0x7208; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByBool_78 = 0x7260; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ModifyBone_29 = 0x7310; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_BlendListByBool_77 = 0x7428; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose_48 = 0x74d8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_76 = 0x75a0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose_47 = 0x7650; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_75 = 0x7718; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_Slot_10 = 0x77c8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose_148 = 0x7820; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_46 = 0x7858; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_74 = 0x7920; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_73 = 0x79d0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LocalToComponentSpace_29 = 0x7a80; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_28 = 0x7ab0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_29 = 0x7bc8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LayeredBoneBlend_27 = 0x7bf8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SaveCachedPose_45 = 0x7cc8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_147 = 0x7d90; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_146 = 0x7dc8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_145 = 0x7e00; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_44 = 0x7e38; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_ModifyBone_27 = 0x7f00; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_28 = 0x8018; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_28 = 0x8048; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_UseCachedPose_144 = 0x8078; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ModifyBone_26 = 0x80b0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_BlendListByBool_72 = 0x81c8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_27 = 0x8278; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_26 = 0x82a8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_BlendListByBool_71 = 0x82d8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ModifyBone_25 = 0x8388; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_27 = 0x84a0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_26 = 0x84d0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_24 = 0x8500; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_23 = 0x8618; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_25 = 0x8730; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_25 = 0x8760; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_AimOffsetSkinned_13 = 0x8790; // FAnimNode_AimOffsetSkinned
		constexpr auto AnimGraphNode_UseCachedPose_143 = 0x8950; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_26 = 0x8988; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_142 = 0x8a58; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive_7 = 0x8a90; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_LayeredBoneBlend_25 = 0x8b70; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SaveCachedPose_43 = 0x8c40; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_70 = 0x8d08; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceSkinned_58 = 0x8db8; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_61 = 0x8f18; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Fabrik_3 = 0x8fa0; // FAnimNode_Fabrik
		constexpr auto AnimGraphNode_UseCachedPose_141 = 0x9140; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_42 = 0x9178; // FAnimNode_SaveCachedPose
		constexpr auto KSAnimGraphNode_Recoil_12 = 0x9240; // FKSAnimNode_Recoil
		constexpr auto AnimGraphNode_SaveCachedPose_41 = 0x9400; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_140 = 0x94c8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_139 = 0x9500; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_5 = 0x9538; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_SaveCachedPose_40 = 0x96d0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_138 = 0x9798; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_4 = 0x97d0; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_BlendListByEnum_13 = 0x9968; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_3 = 0x9a28; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_2 = 0x9bc0; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_TwoWayBlend_11 = 0x9d58; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_CopyBone_4 = 0x9e30; // FAnimNode_CopyBone
		constexpr auto AnimGraphNode_CopyBone_3 = 0x9f30; // FAnimNode_CopyBone
		constexpr auto AnimGraphNode_CopyBone_2 = 0xa030; // FAnimNode_CopyBone
		constexpr auto AnimGraphNode_CopyBone = 0xa130; // FAnimNode_CopyBone
		constexpr auto AnimGraphNode_SaveCachedPose_39 = 0xa230; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_137 = 0xa2f8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_136 = 0xa330; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_38 = 0xa368; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_ComponentToLocalSpace_24 = 0xa430; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_UseCachedPose_135 = 0xa460; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_134 = 0xa498; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LocalToComponentSpace_24 = 0xa4d0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_SaveCachedPose_37 = 0xa500; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_69 = 0xa5c8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_133 = 0xa678; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_36 = 0xa6b0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_ComponentToLocalSpace_23 = 0xa778; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_UseCachedPose_132 = 0xa7a8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_131 = 0xa7e0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LocalToComponentSpace_23 = 0xa818; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_SaveCachedPose_35 = 0xa848; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_34 = 0xa910; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_130 = 0xa9d8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_TransitionResult_23 = 0xaa10; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_22 = 0xaa48; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequenceSkinned_57 = 0xaa80; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_60 = 0xabe0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_56 = 0xac68; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_59 = 0xadc8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_68 = 0xae50; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_12 = 0xaf00; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_2 = 0xaf40; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpaceSkinned_2 = 0xb030; // FAnimNode_BlendSpacePlayerSkinned
		constexpr auto AnimGraphNode_BlendSpacePlayer = 0xb230; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpaceSkinned = 0xb320; // FAnimNode_BlendSpacePlayerSkinned
		constexpr auto AnimGraphNode_BlendListByBool_67 = 0xb520; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_11 = 0xb5d0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_3 = 0xb610; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SaveCachedPose_33 = 0xb6d0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive_6 = 0xb798; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_UseCachedPose_129 = 0xb878; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_128 = 0xb8b0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive_5 = 0xb8e8; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_LayeredBoneBlend_24 = 0xb9c8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_LayeredBoneBlend_23 = 0xba98; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SaveCachedPose_32 = 0xbb68; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_31 = 0xbc30; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_127 = 0xbcf8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_126 = 0xbd30; // FAnimNode_UseCachedPose
		constexpr auto KSAnimGraphNode_Recoil_11 = 0xbd68; // FKSAnimNode_Recoil
		constexpr auto AnimGraphNode_LocalToComponentSpace_22 = 0xbf28; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_22 = 0xbf58; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto KSAnimGraphNode_Recoil_10 = 0xbf88; // FKSAnimNode_Recoil
		constexpr auto AnimGraphNode_UseCachedPose_125 = 0xc148; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_124 = 0xc180; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ModifyBone_22 = 0xc1b8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_21 = 0xc2d0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_UseCachedPose_123 = 0xc3e8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Slot_9 = 0xc420; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose_122 = 0xc478; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_30 = 0xc4b0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_121 = 0xc578; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_120 = 0xc5b0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_66 = 0xc5e8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace = 0xc698; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto KSAnimGraphNode_Mirror = 0xc830; // FKSAnimNode_Mirror
		constexpr auto AnimGraphNode_LocalToComponentSpace_21 = 0xc950; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_21 = 0xc980; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_BlendListByBool_65 = 0xc9b0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_119 = 0xca60; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_118 = 0xca98; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_29 = 0xcad0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_Slot_8 = 0xcb98; // FAnimNode_Slot
		constexpr auto AnimGraphNode_LayeredBoneBlend_22 = 0xcbf0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_LocalToComponentSpace_20 = 0xccc0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto KSAnimGraphNode_Recoil_9 = 0xccf0; // FKSAnimNode_Recoil
		constexpr auto KSAnimGraphNode_Recoil_8 = 0xceb0; // FKSAnimNode_Recoil
		constexpr auto KSAnimGraphNode_Recoil_7 = 0xd070; // FKSAnimNode_Recoil
		constexpr auto KSAnimGraphNode_Recoil_6 = 0xd230; // FKSAnimNode_Recoil
		constexpr auto AnimGraphNode_LayeredBoneBlend_21 = 0xd3f0; // FAnimNode_LayeredBoneBlend
		constexpr auto KSAnimGraphNode_Recoil_5 = 0xd4c0; // FKSAnimNode_Recoil
		constexpr auto KSAnimGraphNode_Recoil_4 = 0xd680; // FKSAnimNode_Recoil
		constexpr auto KSAnimGraphNode_Recoil_3 = 0xd840; // FKSAnimNode_Recoil
		constexpr auto AnimGraphNode_BlendListByBool_64 = 0xda00; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_20 = 0xdab0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_UseCachedPose_117 = 0xdae0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_28 = 0xdb18; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_Fabrik_2 = 0xdbe0; // FAnimNode_Fabrik
		constexpr auto AnimGraphNode_Fabrik = 0xdd80; // FAnimNode_Fabrik
		constexpr auto AnimGraphNode_BlendListByBool_63 = 0xdf20; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LocalToComponentSpace_19 = 0xdfd0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_19 = 0xe000; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_18 = 0xe030; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto KSAnimGraphNode_Recoil_2 = 0xe060; // FKSAnimNode_Recoil
		constexpr auto KSAnimGraphNode_Recoil = 0xe220; // FKSAnimNode_Recoil
		constexpr auto AnimGraphNode_BlendListByBool_62 = 0xe3e0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_17 = 0xe490; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LayeredBoneBlend_20 = 0xe4c0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SaveCachedPose_27 = 0xe590; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_116 = 0xe658; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequenceSkinned_55 = 0xe690; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_ApplyAdditive_5 = 0xe7f0; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SaveCachedPose_26 = 0xe8c8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_58 = 0xe990; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SaveCachedPose_25 = 0xea18; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_115 = 0xeae0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_114 = 0xeb18; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByEnum_12 = 0xeb50; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_UseCachedPose_113 = 0xec10; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_112 = 0xec48; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_24 = 0xec80; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_61 = 0xed48; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose_23 = 0xedf8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_ComponentToLocalSpace_16 = 0xeec0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_UseCachedPose_111 = 0xeef0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LocalToComponentSpace_18 = 0xef28; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_UseCachedPose_110 = 0xef58; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LocalToComponentSpace_17 = 0xef90; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_SaveCachedPose_22 = 0xefc0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_ComponentToLocalSpace_15 = 0xf088; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_UseCachedPose_109 = 0xf0b8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LocalToComponentSpace_16 = 0xf0f0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_UseCachedPose_108 = 0xf120; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LocalToComponentSpace_15 = 0xf158; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_UseCachedPose_107 = 0xf188; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_106 = 0xf1c0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_21 = 0xf1f8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_105 = 0xf2c0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_104 = 0xf2f8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_103 = 0xf330; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_102 = 0xf368; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByEnum_11 = 0xf3a0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_57 = 0xf460; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_56 = 0xf4e8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_55 = 0xf570; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_60 = 0xf5f8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_59 = 0xf6a8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_58 = 0xf758; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_54 = 0xf808; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_53 = 0xf890; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_52 = 0xf918; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_UseCachedPose_101 = 0xf9a0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_20 = 0xf9d8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_100 = 0xfaa0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequenceSkinned_54 = 0xfad8; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_53 = 0xfc38; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_52 = 0xfd98; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_51 = 0xfef8; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_50 = 0x10058; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_49 = 0x101b8; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_LayeredBoneBlend_19 = 0x10318; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByBool_57 = 0x103e8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_99 = 0x10498; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_98 = 0x104d0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_97 = 0x10508; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_18 = 0x10540; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_96 = 0x10610; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_95 = 0x10648; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ApplyAdditive_4 = 0x10680; // FAnimNode_ApplyAdditive
		constexpr auto __CustomProperty_bIsLobby_9FDD1A7146055937A755E6ACD99BC318 = 0x10758; // bool
		constexpr auto __CustomProperty_bIsServer_9FDD1A7146055937A755E6ACD99BC318 = 0x10759; // bool
		constexpr auto AnimGraphNode_SubInstance_2 = 0x10760; // FAnimNode_LinkedAnimGraph
		constexpr auto AnimGraphNode_SaveCachedPose_19 = 0x10810; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_94 = 0x108d8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_93 = 0x10910; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_92 = 0x10948; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_56 = 0x10980; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_91 = 0x10a30; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_90 = 0x10a68; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Slot_7 = 0x10aa0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose_89 = 0x10af8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_88 = 0x10b30; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_87 = 0x10b68; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_86 = 0x10ba0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_55 = 0x10bd8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_54 = 0x10c88; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceSkinned_48 = 0x10d38; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_51 = 0x10e98; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_47 = 0x10f20; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_50 = 0x11080; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_UseCachedPose_85 = 0x11108; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByEnum_10 = 0x11140; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_UseCachedPose_84 = 0x11200; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_53 = 0x11238; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_83 = 0x112e8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_17 = 0x11320; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_82 = 0x113f0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ModifyBone_20 = 0x11428; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_14 = 0x11540; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ModifyBone_19 = 0x11570; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_UseCachedPose_81 = 0x11688; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LocalToComponentSpace_14 = 0x116c0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_SaveCachedPose_18 = 0x116f0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_17 = 0x117b8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_80 = 0x11880; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_16 = 0x118b8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_RigidBodySkipServer = 0x11980; // FAnimNode_RigidBodySkipServer
		constexpr auto AnimGraphNode_ComponentToLocalSpace_13 = 0x11f30; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_UseCachedPose_79 = 0x11f60; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LocalToComponentSpace_13 = 0x11f98; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_BlendByLOD_2 = 0x11fc8; // FAnimNode_BlendByLOD
		constexpr auto AnimGraphNode_UseCachedPose_78 = 0x12078; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_77 = 0x120b0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_TransitionResult_21 = 0x120e8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_20 = 0x12120; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_19 = 0x12158; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_18 = 0x12190; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_17 = 0x121c8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_16 = 0x12200; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_15 = 0x12238; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_14 = 0x12270; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_13 = 0x122a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_12 = 0x122e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_11 = 0x12318; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_10 = 0x12350; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_9 = 0x12388; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_8 = 0x123c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_7 = 0x123f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_6 = 0x12430; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_5 = 0x12468; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_BlendListByEnum_9 = 0x124a0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_49 = 0x12560; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_48 = 0x125e8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_47 = 0x12670; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_46 = 0x126f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_46 = 0x12780; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_45 = 0x128e0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_44 = 0x12a40; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_43 = 0x12ba0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_TwoWayBlend_10 = 0x12d00; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_52 = 0x12dd8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TwoWayBlend_9 = 0x12e88; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_51 = 0x12f60; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TwoWayBlend_8 = 0x13010; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_50 = 0x130e8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TwoWayBlend_7 = 0x13198; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_49 = 0x13270; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_48 = 0x13320; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_45 = 0x133d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_44 = 0x13458; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_43 = 0x134e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_42 = 0x13568; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_42 = 0x135f0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_41 = 0x13750; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_40 = 0x138b0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_39 = 0x13a10; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_TwoWayBlend_6 = 0x13b70; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_47 = 0x13c48; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TwoWayBlend_5 = 0x13cf8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_46 = 0x13dd0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TwoWayBlend_4 = 0x13e80; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_45 = 0x13f58; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TwoWayBlend_3 = 0x14008; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_44 = 0x140e0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByEnum_8 = 0x14190; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_StateResult_10 = 0x14250; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_ComponentToLocalSpace_12 = 0x14290; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_12 = 0x142c0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto KSAnimGraphNode_OrientationWarp_7 = 0x142f0; // FKSAnimNode_OrientationWarp
		constexpr auto AnimGraphNode_ComponentToLocalSpace_11 = 0x14410; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_11 = 0x14440; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto KSAnimGraphNode_OrientationWarp_6 = 0x14470; // FKSAnimNode_OrientationWarp
		constexpr auto AnimGraphNode_BlendListByEnum_7 = 0x14590; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_41 = 0x14650; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_40 = 0x146d8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_38 = 0x14760; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_37 = 0x148c0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_39 = 0x14a20; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_36 = 0x14aa8; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_38 = 0x14c08; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_35 = 0x14c90; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_BlendListByBool_43 = 0x14df0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_37 = 0x14ea0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_36 = 0x14f28; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_35 = 0x14fb0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_34 = 0x15038; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_34 = 0x150c0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_33 = 0x15220; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_32 = 0x15380; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_31 = 0x154e0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_BlendListByEnum_6 = 0x15640; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_ModifyBone_18 = 0x15700; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_10 = 0x15818; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_10 = 0x15848; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_StateResult_9 = 0x15878; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_33 = 0x158b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_8 = 0x15940; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequenceSkinned_30 = 0x15980; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_32 = 0x15ae0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_7 = 0x15b68; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_31 = 0x15ba8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_30 = 0x15c30; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_29 = 0x15cb8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_28 = 0x15d40; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ModifyBone_17 = 0x15dc8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_9 = 0x15ee0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_16 = 0x15f10; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_BlendListByEnum_5 = 0x16028; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_LocalToComponentSpace_8 = 0x160e8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto KSAnimGraphNode_OrientationWarp_5 = 0x16118; // FKSAnimNode_OrientationWarp
		constexpr auto KSAnimGraphNode_OrientationWarp_4 = 0x16238; // FKSAnimNode_OrientationWarp
		constexpr auto KSAnimGraphNode_OrientationWarp_3 = 0x16358; // FKSAnimNode_OrientationWarp
		constexpr auto AnimGraphNode_ModifyBone_15 = 0x16478; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_7 = 0x16590; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_14 = 0x165c0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_6 = 0x166d8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto KSAnimGraphNode_OrientationWarp_2 = 0x16708; // FKSAnimNode_OrientationWarp
		constexpr auto AnimGraphNode_ComponentToLocalSpace_9 = 0x16828; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_8 = 0x16858; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_7 = 0x16888; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_6 = 0x168b8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_SequenceSkinned_29 = 0x168e8; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_28 = 0x16a48; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_27 = 0x16ba8; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_26 = 0x16d08; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_StateResult_6 = 0x16e68; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequenceSkinned_25 = 0x16ea8; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_27 = 0x17008; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_5 = 0x17090; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_2 = 0x170d0; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_BlendListByBool_42 = 0x17190; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_76 = 0x17240; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ModifyBone_13 = 0x17278; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_SaveCachedPose_15 = 0x17390; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_75 = 0x17458; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_41 = 0x17490; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_74 = 0x17540; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive_4 = 0x17578; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_SequencePlayer_26 = 0x17658; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_24 = 0x176e0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SaveCachedPose_14 = 0x17840; // FAnimNode_SaveCachedPose
		constexpr auto KSAnimGraphNode_OrientationWarp = 0x17908; // FKSAnimNode_OrientationWarp
		constexpr auto AnimGraphNode_UseCachedPose_73 = 0x17a28; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LocalToComponentSpace_5 = 0x17a60; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_5 = 0x17a90; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_BlendListByBool_40 = 0x17ac0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_72 = 0x17b70; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ModifyBone_12 = 0x17ba8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_11 = 0x17cc0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_10 = 0x17dd8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_UseCachedPose_71 = 0x17ef0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_39 = 0x17f28; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose_13 = 0x17fd8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_16 = 0x180a0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_70 = 0x18170; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_38 = 0x181a8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_69 = 0x18258; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_68 = 0x18290; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_15 = 0x182c8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_67 = 0x18398; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_37 = 0x183d0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_66 = 0x18480; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_65 = 0x184b8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_64 = 0x184f0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_63 = 0x18528; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_36 = 0x18560; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose_12 = 0x18610; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_62 = 0x186d8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_61 = 0x18710; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_60 = 0x18748; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_35 = 0x18780; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose_11 = 0x18830; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_59 = 0x188f8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_58 = 0x18930; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_14 = 0x18968; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_ModifyBone_9 = 0x18a38; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_4 = 0x18b50; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_4 = 0x18b80; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ModifyBone_8 = 0x18bb0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_7 = 0x18cc8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_SaveCachedPose_10 = 0x18de0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_57 = 0x18ea8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_56 = 0x18ee0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_55 = 0x18f18; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_54 = 0x18f50; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendByLOD = 0x18f88; // FAnimNode_BlendByLOD
		constexpr auto AnimGraphNode_UseCachedPose_53 = 0x19038; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_9 = 0x19070; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_34 = 0x19138; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive_3 = 0x191e8; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_UseCachedPose_52 = 0x192c8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Slot_6 = 0x19300; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SequencePlayer_25 = 0x19358; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_33 = 0x193e0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_Slot_5 = 0x19490; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SaveCachedPose_8 = 0x194e8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_51 = 0x195b0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_50 = 0x195e8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Slot_4 = 0x19620; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByBool_32 = 0x19678; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByEnum_4 = 0x19728; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_AimOffsetSkinned_12 = 0x197e8; // FAnimNode_AimOffsetSkinned
		constexpr auto AnimGraphNode_AimOffsetSkinned_11 = 0x199a8; // FAnimNode_AimOffsetSkinned
		constexpr auto AnimGraphNode_AimOffsetSkinned_10 = 0x19b68; // FAnimNode_AimOffsetSkinned
		constexpr auto AnimGraphNode_UseCachedPose_49 = 0x19d28; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_48 = 0x19d60; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_47 = 0x19d98; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_31 = 0x19dd0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LinkedAnimGraph = 0x19e80; // FAnimNode_LinkedAnimGraph
		constexpr auto AnimGraphNode_UseCachedPose_46 = 0x19f30; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_45 = 0x19f68; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Slot_3 = 0x19fa0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_AimOffsetSkinned_9 = 0x19ff8; // FAnimNode_AimOffsetSkinned
		constexpr auto AnimGraphNode_ModifyBone_6 = 0x1a1b8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_3 = 0x1a2d0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_3 = 0x1a300; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_BlendListByBool_30 = 0x1a330; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceSkinned_23 = 0x1a3e0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_24 = 0x1a540; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_29 = 0x1a5c8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_Slot_2 = 0x1a678; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot = 0x1a6d0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose_44 = 0x1a728; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendBoneByChannel = 0x1a760; // FAnimNode_BlendBoneByChannel
		constexpr auto AnimGraphNode_ApplyAdditive_3 = 0x1a7d8; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_BlendListByEnum_3 = 0x1a8b0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_28 = 0x1a970; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_27 = 0x1aa20; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_26 = 0x1aad0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_23 = 0x1ab80; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_22 = 0x1ac08; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_22 = 0x1ad68; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_21 = 0x1adf0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_21 = 0x1af50; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_20 = 0x1afd8; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_20 = 0x1b138; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_19 = 0x1b1c0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_19 = 0x1b320; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_18 = 0x1b3a8; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_18 = 0x1b508; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_17 = 0x1b590; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_BlendListByBool_25 = 0x1b6f0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_24 = 0x1b7a0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LayeredBoneBlend_13 = 0x1b850; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_43 = 0x1b920; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_42 = 0x1b958; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_TwoWayBlend_2 = 0x1b990; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_AimOffsetSkinned_8 = 0x1ba68; // FAnimNode_AimOffsetSkinned
		constexpr auto AnimGraphNode_AimOffsetSkinned_7 = 0x1bc28; // FAnimNode_AimOffsetSkinned
		constexpr auto AnimGraphNode_UseCachedPose_41 = 0x1bde8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_40 = 0x1be20; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_7 = 0x1be58; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_12 = 0x1bf20; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_39 = 0x1bff0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_23 = 0x1c028; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LayeredBoneBlend_11 = 0x1c0d8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_38 = 0x1c1a8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_37 = 0x1c1e0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_10 = 0x1c218; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByBool_22 = 0x1c2e8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_21 = 0x1c398; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_20 = 0x1c448; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_36 = 0x1c4f8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_35 = 0x1c530; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_9 = 0x1c568; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_34 = 0x1c638; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_19 = 0x1c670; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ApplyAdditive_2 = 0x1c720; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_UseCachedPose_33 = 0x1c7f8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_6 = 0x1c830; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_32 = 0x1c8f8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_18 = 0x1c930; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_17 = 0x1c9e0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_16 = 0x1ca90; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_17 = 0x1cb40; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_16 = 0x1cbc8; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_16 = 0x1cd28; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_15 = 0x1cdb0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_15 = 0x1cf10; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_14 = 0x1cf98; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_14 = 0x1d0f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_13 = 0x1d180; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_13 = 0x1d2e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_12 = 0x1d368; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_12 = 0x1d4c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_11 = 0x1d550; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_BlendListByEnum_2 = 0x1d6b0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_LayeredBoneBlend_8 = 0x1d770; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_31 = 0x1d840; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_15 = 0x1d878; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LayeredBoneBlend_7 = 0x1d928; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_30 = 0x1d9f8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_5 = 0x1da30; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_14 = 0x1daf8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_29 = 0x1dba8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_6 = 0x1dbe0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByBool_13 = 0x1dcb0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_28 = 0x1dd60; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_27 = 0x1dd98; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_5 = 0x1ddd0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TransitionResult_4 = 0x1dea0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_3 = 0x1ded8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x1df10; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult = 0x1df48; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequenceSkinned_10 = 0x1df80; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_11 = 0x1e0e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_4 = 0x1e168; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_10 = 0x1e1a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_9 = 0x1e230; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_LayeredBoneBlend_4 = 0x1e390; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequenceSkinned_8 = 0x1e460; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_9 = 0x1e5c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_3 = 0x1e648; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequenceSkinned_7 = 0x1e688; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_8 = 0x1e7e8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_2 = 0x1e870; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequenceSkinned_6 = 0x1e8b0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_7 = 0x1ea10; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult = 0x1ea98; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x1ead8; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_BlendListByBool_12 = 0x1eb98; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LayeredBoneBlend_3 = 0x1ec48; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SaveCachedPose_4 = 0x1ed18; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_26 = 0x1ede0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_AimOffsetSkinned_6 = 0x1ee18; // FAnimNode_AimOffsetSkinned
		constexpr auto AnimGraphNode_UseCachedPose_25 = 0x1efd8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_AimOffsetSkinned_5 = 0x1f010; // FAnimNode_AimOffsetSkinned
		constexpr auto AnimGraphNode_UseCachedPose_24 = 0x1f1d0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_23 = 0x1f208; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_22 = 0x1f240; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_21 = 0x1f278; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_11 = 0x1f2b0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_6 = 0x1f360; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SaveCachedPose_3 = 0x1f3e8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_20 = 0x1f4b0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_10 = 0x1f4e8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ModifyBone_5 = 0x1f598; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LegIK = 0x1f6b0; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_Root = 0x1f7b8; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequenceSkinned_5 = 0x1f7f8; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0x1f958; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_4 = 0x1f9e0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_BlendListByBool_9 = 0x1fb40; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_19 = 0x1fbf0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_18 = 0x1fc28; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_17 = 0x1fc60; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_16 = 0x1fc98; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_15 = 0x1fcd0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_8 = 0x1fd08; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x1fdb8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_3 = 0x1fe40; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_BlendListByBool_7 = 0x1ffa0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x20050; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_2 = 0x200d8; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_UseCachedPose_14 = 0x20238; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_13 = 0x20270; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_2 = 0x202a8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByBool_6 = 0x20378; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_5 = 0x20428; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LayeredBoneBlend = 0x204d8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SaveCachedPose_2 = 0x205a8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_ApplyAdditive = 0x20670; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SeqEvalSkinned = 0x20748; // FAnimNode_SeqEvalSkinned
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x208b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_AimOffsetSkinned_4 = 0x20940; // FAnimNode_AimOffsetSkinned
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive_2 = 0x20b00; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_UseCachedPose_12 = 0x20be0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_AimOffsetSkinned_3 = 0x20c18; // FAnimNode_AimOffsetSkinned
		constexpr auto AnimGraphNode_UseCachedPose_11 = 0x20dd8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_10 = 0x20e10; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_9 = 0x20e48; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_8 = 0x20e80; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_7 = 0x20eb8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_6 = 0x20ef0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_5 = 0x20f28; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SubInstance = 0x20f60; // FAnimNode_LinkedAnimGraph
		constexpr auto AnimGraphNode_SaveCachedPose = 0x21010; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_4 = 0x210d8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_3 = 0x21188; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LocalRefPose_2 = 0x21238; // FAnimNode_RefPose
		constexpr auto AnimGraphNode_LocalRefPose = 0x21260; // FAnimNode_RefPose
		constexpr auto AnimGraphNode_ModifyBone_4 = 0x21288; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_2 = 0x213a0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_2 = 0x213d0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ModifyBone_3 = 0x21400; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_2 = 0x21518; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone = 0x21630; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x21748; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x21778; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x217a8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_4 = 0x21858; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool = 0x21890; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_3 = 0x21940; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequencePlayer = 0x21978; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned = 0x21a00; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive = 0x21b60; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_TwoWayBlend = 0x21c40; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_AimOffsetSkinned_2 = 0x21d18; // FAnimNode_AimOffsetSkinned
		constexpr auto AnimGraphNode_AimOffsetSkinned = 0x21ed8; // FAnimNode_AimOffsetSkinned
		constexpr auto AnimGraphNode_BlendListByEnum = 0x22098; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0x22158; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose = 0x22190; // FAnimNode_UseCachedPose
		constexpr auto Time = 0x221c8; // float
		constexpr auto Movement Direction = 0x221cc; // float
		constexpr auto Save Last Yaw = 0x221d0; // float
		constexpr auto Turn Value = 0x221d4; // float
		constexpr auto Character = 0x221d8; // AKSCharacter*
		constexpr auto ADS Rotator = 0x221e0; // FRotator
		constexpr auto Step Type = 0x221ec; // FName
		constexpr auto Material Type = 0x221f4; // FName
		constexpr auto Shoe Type = 0x221fc; // FName
		constexpr auto Clothing Type = 0x22204; // FName
		constexpr auto Roll Direction = 0x2220c; // FName
		constexpr auto Cached Dodge Roll = 0x22218; // UAnimMontage*
		constexpr auto Control Rotation = 0x22220; // FRotator
		constexpr auto TurnWounded = 0x22230; // UAnimSequence*
		constexpr auto Cached Angle = 0x22238; // float
		constexpr auto AimYawInterpSpeed = 0x2223c; // float
		constexpr auto bCanResetAimYaw = 0x22240; // bool
		constexpr auto AimYawInterpSpeedTarget = 0x22244; // float
		constexpr auto AimYawResetTimer = 0x22248; // FTimerHandle
		constexpr auto Cached Stop Angle = 0x22250; // float
		constexpr auto OnMagThrow = 0x22258; // FMulticastInlineDelegate
		constexpr auto bIsAdjustingAimYaw = 0x22268; // bool
		constexpr auto Dodge Rolling BP = 0x22269; // bool
		constexpr auto Master Weapon Ref = 0x22270; // UKSWeaponComponent*
		constexpr auto Back Holster Inventory = 0x22278; // TArray<UMaster_WeaponComponent_C*>
		constexpr auto bInteraction = 0x22288; // bool
		constexpr auto locoStartDir = 0x22289; // EKSMovementDirection
		constexpr auto Stop Disable Moving A = 0x22290; // UAnimSequenceBase*
		constexpr auto Stop Disable Moving B = 0x22298; // UAnimSequenceBase*
		constexpr auto Current Stop Disable Moving = 0x222a0; // UAnimSequenceBase*
		constexpr auto InteractionMontage = 0x222a8; // UAnimMontage*
		constexpr auto InitialDistanceFromJumpLand = 0x222b0; // float
		constexpr auto locoStopDir = 0x222b4; // EKSMovementDirection
		constexpr auto Starting a Pivot = 0x222b5; // bool
		constexpr auto MaxMantleHt = 0x222b8; // float
		constexpr auto Max2StoryMantleHt = 0x222bc; // float
		constexpr auto StringMantlesTogether = 0x222c0; // bool
		constexpr auto CatchingWeapon = 0x222c1; // bool
		constexpr auto StoppedRootRotation = 0x222c4; // FRotator
		constexpr auto StoppedRootLocation = 0x222d0; // FVector
		constexpr auto RagdollToMontageTime = 0x222dc; // float
		constexpr auto GetUpSequence = 0x222e0; // UAnimSequence*
		constexpr auto GetUpMontage = 0x222e8; // UAnimMontage*
		constexpr auto RagdollPelvisTransform = 0x222f0; // FTransform
		constexpr auto RagdollPelvisTransformAlpha = 0x22320; // float
		constexpr auto EnableRagdollPelvisTransform = 0x22324; // bool
		constexpr auto DownedMontage = 0x22328; // UAnimMontage*
		constexpr auto Disable upper body lands = 0x22330; // bool
		constexpr auto bWantsToNoseDive = 0x22331; // bool
		constexpr auto bCanChangeNoseDiveState = 0x22332; // bool
		constexpr auto bFreeFallIntroComplete = 0x22333; // bool
		constexpr auto FreeFallDiveAlpha = 0x22334; // float
		constexpr auto DisableTurnInPlaceCounterRotate = 0x22338; // bool
		constexpr auto bIsInPowerSlideBP = 0x22339; // bool
		constexpr auto ExitPowerSlideBlendTime = 0x2233c; // float
		constexpr auto RootMantleWallFacing = 0x22340; // FRotator
		constexpr auto HitDirectionPrimary_Fwd = 0x2234c; // float
		constexpr auto HitDirectionPrimary_Right = 0x22350; // float
		constexpr auto HitDirectionSecondary_Fwd = 0x22354; // float
		constexpr auto HitDirectionSecondary_Right = 0x22358; // float
		constexpr auto CachedPivotAngle = 0x2235c; // float
		constexpr auto Melee Recoil = 0x22360; // FRecoilInfo
		constexpr auto Melee Recoil Counter = 0x223c0; // int32_t
		constexpr auto HitReactionAlpha = 0x223c4; // float
		constexpr auto Any Grip Override Active = 0x223c8; // bool
		constexpr auto Left Hand Grip Override = 0x223c9; // bool
		constexpr auto Right Hand Grip Override = 0x223ca; // bool
		constexpr auto bIsHitReacting = 0x223cb; // bool
		constexpr auto bIsServer = 0x223cc; // bool
		constexpr auto bUseCollar = 0x223cd; // bool
		constexpr auto CollarDirection = 0x223d0; // float
		constexpr auto Use EngHeadMod = 0x223d4; // bool
		constexpr auto Master Weapon Is Grenade = 0x223d5; // bool
		constexpr auto ADS Hand Position L = 0x223d8; // FVector
		constexpr auto ADS Hand Position R = 0x223e4; // FVector
		constexpr auto ADS Hand Rotation L = 0x223f0; // FRotator
		constexpr auto ADS Hand Rotation R = 0x223fc; // FRotator
		constexpr auto ADS Roll Controls = 0x22408; // ADSRollControlsEnum
		constexpr auto ADS Roll Interp speed = 0x2240c; // float
		constexpr auto ADS Bump Looping Speed = 0x22410; // float
		constexpr auto ADS Bump Interp speed = 0x22414; // float
		constexpr auto Stop Max = 0x22418; // float
		constexpr auto Stop Min = 0x2241c; // float
		constexpr auto ADS Bump Time = 0x22420; // float
		constexpr auto ADS Bump Start = 0x22424; // bool
		constexpr auto Ads Bump Start Time Delay = 0x22428; // float
		constexpr auto Ads Bump Stop Time Delay = 0x2242c; // float
		constexpr auto ADS Bump Stop = 0x22430; // bool
		constexpr auto ADS Bump start Run Timer = 0x22438; // FTimerHandle
		constexpr auto ADS Bump stop Run Timer = 0x22440; // FTimerHandle
		constexpr auto NonComOffset = 0x22448; // float
		constexpr auto ChildPhysicsAssetEnable = 0x2244c; // bool
		constexpr auto SkinUseCharacterScale = 0x2244d; // bool
		constexpr auto CharacterScale = 0x22450; // FVector
		constexpr auto ExitWoundedBlendOutTime = 0x2245c; // float
		constexpr auto Constant_2 = 0x22460; // float
		constexpr auto EngHeadAdditiveSecondaryActive = 0x22464; // bool
		constexpr auto UseHuntingRifleHold = 0x22465; // bool
		constexpr auto PrototypeLocomotionGraphEnable = 0x22466; // bool
		constexpr auto Enable Zipline Eng Aims = 0x22467; // bool
		constexpr auto EnableLayeredHandAdditives = 0x22468; // bool
		constexpr auto DisableHand = 0x22469; // bool
		constexpr auto UseRightWristGadgetAdditive = 0x2246a; // bool
		constexpr auto bActiveWeaponUsesCollar = 0x2246b; // bool
		constexpr auto DisableEngHeadAdditiveSecondary = 0x2246c; // bool
		constexpr auto DisableEngHeadAdditivePrimary = 0x2246d; // bool
		constexpr auto RemoveHeadAccessory = 0x2246e; // bool
		constexpr auto HeadAccessoryScaleAlphaBP = 0x22470; // float
		constexpr auto K2Node_CustomEvent_NotifyName_5 = 0x22474; // FName
		constexpr auto K2Node_CustomEvent_MontageInstanceID_5 = 0x2247c; // int32_t
		constexpr auto K2Node_CustomEvent_NotifyName_4 = 0x22480; // FName
		constexpr auto K2Node_CustomEvent_MontageInstanceID_4 = 0x22488; // int32_t
		constexpr auto K2Node_CreateDelegate_OutputDelegate = 0x2248c; // FDelegate
		constexpr auto K2Node_CustomEvent_NotifyName_3 = 0x2249c; // FName
		constexpr auto K2Node_CustomEvent_MontageInstanceID_3 = 0x224a4; // int32_t
		constexpr auto K2Node_CreateDelegate_OutputDelegate_2 = 0x224a8; // FDelegate
		constexpr auto K2Node_CustomEvent_NotifyName_2 = 0x224b8; // FName
		constexpr auto K2Node_CustomEvent_MontageInstanceID_2 = 0x224c0; // int32_t
		constexpr auto K2Node_CreateDelegate_OutputDelegate_3 = 0x224c4; // FDelegate
		constexpr auto K2Node_CustomEvent_NotifyName = 0x224d4; // FName
		constexpr auto K2Node_CustomEvent_MontageInstanceID = 0x224dc; // int32_t
		constexpr auto K2Node_CreateDelegate_OutputDelegate_4 = 0x224e0; // FDelegate
		constexpr auto Temp_int_Variable = 0x224f0; // int32_t
		constexpr auto Temp_name_Variable = 0x224f4; // FName
		constexpr auto K2Node_CustomEvent_NotifyName_22 = 0x224fc; // FName
		constexpr auto K2Node_CustomEvent_MontageInstanceID_22 = 0x22504; // int32_t
		constexpr auto K2Node_CreateDelegate_OutputDelegate_5 = 0x22508; // FDelegate
		constexpr auto K2Node_CustomEvent_NotifyName_23 = 0x22518; // FName
		constexpr auto K2Node_CustomEvent_MontageInstanceID_23 = 0x22520; // int32_t
		constexpr auto K2Node_CreateDelegate_OutputDelegate_6 = 0x22524; // FDelegate
		constexpr auto K2Node_CreateDelegate_OutputDelegate_7 = 0x22534; // FDelegate
		constexpr auto K2Node_CustomEvent_NotifyName_24 = 0x22544; // FName
		constexpr auto K2Node_CustomEvent_MontageInstanceID_24 = 0x2254c; // int32_t
		constexpr auto K2Node_CreateDelegate_OutputDelegate_8 = 0x22550; // FDelegate
		constexpr auto K2Node_CustomEvent_NotifyName_25 = 0x22560; // FName
		constexpr auto K2Node_CustomEvent_MontageInstanceID_25 = 0x22568; // int32_t
		constexpr auto K2Node_CreateDelegate_OutputDelegate_9 = 0x2256c; // FDelegate
		constexpr auto Temp_name_Variable_2 = 0x2257c; // FName
		constexpr auto Temp_int_Variable_2 = 0x22584; // int32_t
		constexpr auto K2Node_CustomEvent_NotifyName_26 = 0x22588; // FName
		constexpr auto K2Node_CustomEvent_MontageInstanceID_26 = 0x22590; // int32_t
		constexpr auto K2Node_CreateDelegate_OutputDelegate_10 = 0x22594; // FDelegate
		constexpr auto K2Node_CustomEvent_NotifyName_27 = 0x225a4; // FName
		constexpr auto K2Node_CustomEvent_MontageInstanceID_27 = 0x225ac; // int32_t
		constexpr auto K2Node_CreateDelegate_OutputDelegate_11 = 0x225b0; // FDelegate
		constexpr auto Temp_name_Variable_3 = 0x225c0; // FName
		constexpr auto K2Node_CustomEvent_NotifyName_28 = 0x225c8; // FName
		constexpr auto K2Node_CustomEvent_MontageInstanceID_28 = 0x225d0; // int32_t
		constexpr auto K2Node_CreateDelegate_OutputDelegate_12 = 0x225d4; // FDelegate
		constexpr auto Temp_int_Variable_3 = 0x225e4; // int32_t
		constexpr auto K2Node_CustomEvent_NotifyName_29 = 0x225e8; // FName
		constexpr auto K2Node_CustomEvent_MontageInstanceID_29 = 0x225f0; // int32_t
		constexpr auto K2Node_CreateDelegate_OutputDelegate_13 = 0x225f4; // FDelegate
		constexpr auto K2Node_CustomEvent_NotifyName_30 = 0x22604; // FName
		constexpr auto K2Node_CustomEvent_MontageInstanceID_30 = 0x2260c; // int32_t
		constexpr auto K2Node_CreateDelegate_OutputDelegate_14 = 0x22610; // FDelegate
		constexpr auto Temp_name_Variable_4 = 0x22620; // FName
		constexpr auto Temp_int_Variable_4 = 0x22628; // int32_t
		constexpr auto K2Node_CustomEvent_NotifyName_6 = 0x2262c; // FName
		constexpr auto K2Node_CustomEvent_MontageInstanceID_6 = 0x22634; // int32_t
		constexpr auto K2Node_CustomEvent_NotifyName_31 = 0x22638; // FName
		constexpr auto K2Node_CustomEvent_MontageInstanceID_31 = 0x22640; // int32_t
		constexpr auto K2Node_CreateDelegate_OutputDelegate_15 = 0x22644; // FDelegate
		constexpr auto K2Node_CustomEvent_NotifyName_32 = 0x22654; // FName
		constexpr auto K2Node_CustomEvent_MontageInstanceID_32 = 0x2265c; // int32_t
		constexpr auto K2Node_CreateDelegate_OutputDelegate_16 = 0x22660; // FDelegate
		constexpr auto K2Node_CustomEvent_NotifyName_33 = 0x22670; // FName
		constexpr auto K2Node_CustomEvent_MontageInstanceID_33 = 0x22678; // int32_t
		constexpr auto K2Node_CreateDelegate_OutputDelegate_17 = 0x2267c; // FDelegate
		constexpr auto K2Node_CustomEvent_NotifyName_34 = 0x2268c; // FName
		constexpr auto K2Node_CustomEvent_MontageInstanceID_34 = 0x22694; // int32_t
		constexpr auto K2Node_CreateDelegate_OutputDelegate_18 = 0x22698; // FDelegate
		constexpr auto K2Node_CustomEvent_NotifyName_35 = 0x226a8; // FName
		constexpr auto K2Node_CustomEvent_MontageInstanceID_35 = 0x226b0; // int32_t
		constexpr auto K2Node_CreateDelegate_OutputDelegate_19 = 0x226b4; // FDelegate
		constexpr auto K2Node_CreateDelegate_OutputDelegate_20 = 0x226c4; // FDelegate
		constexpr auto Temp_name_Variable_5 = 0x226d4; // FName
		constexpr auto Temp_int_Variable_5 = 0x226dc; // int32_t
		constexpr auto CallFunc_BreakVector2D_X = 0x226e0; // float
		constexpr auto CallFunc_BreakVector2D_Y = 0x226e4; // float
		constexpr auto K2Node_CustomEvent_NotifyName_36 = 0x226e8; // FName
		constexpr auto K2Node_CustomEvent_MontageInstanceID_36 = 0x226f0; // int32_t
		constexpr auto K2Node_CreateDelegate_OutputDelegate_21 = 0x226f4; // FDelegate
		constexpr auto K2Node_CustomEvent_NotifyName_37 = 0x22704; // FName
		constexpr auto K2Node_CustomEvent_MontageInstanceID_37 = 0x2270c; // int32_t
		constexpr auto K2Node_CreateDelegate_OutputDelegate_22 = 0x22710; // FDelegate
		constexpr auto K2Node_CustomEvent_NotifyName_38 = 0x22720; // FName
		constexpr auto K2Node_CustomEvent_MontageInstanceID_38 = 0x22728; // int32_t
		constexpr auto K2Node_CustomEvent_NotifyName_39 = 0x2272c; // FName
		constexpr auto K2Node_CustomEvent_MontageInstanceID_39 = 0x22734; // int32_t
		constexpr auto K2Node_CreateDelegate_OutputDelegate_23 = 0x22738; // FDelegate
		constexpr auto K2Node_CreateDelegate_OutputDelegate_24 = 0x22748; // FDelegate
		constexpr auto K2Node_CustomEvent_NotifyName_40 = 0x22758; // FName
		constexpr auto K2Node_CustomEvent_MontageInstanceID_40 = 0x22760; // int32_t
		constexpr auto K2Node_CreateDelegate_OutputDelegate_25 = 0x22764; // FDelegate
		constexpr auto Temp_name_Variable_6 = 0x22774; // FName
		constexpr auto Temp_int_Variable_6 = 0x2277c; // int32_t
		constexpr auto K2Node_CustomEvent_NotifyName_41 = 0x22780; // FName
		constexpr auto K2Node_CustomEvent_MontageInstanceID_41 = 0x22788; // int32_t
		constexpr auto K2Node_CreateDelegate_OutputDelegate_26 = 0x2278c; // FDelegate
		constexpr auto K2Node_CustomEvent_NotifyName_7 = 0x2279c; // FName
		constexpr auto K2Node_CustomEvent_MontageInstanceID_7 = 0x227a4; // int32_t
		constexpr auto K2Node_CustomEvent_NotifyName_42 = 0x227a8; // FName
		constexpr auto K2Node_CustomEvent_MontageInstanceID_42 = 0x227b0; // int32_t
		constexpr auto K2Node_CreateDelegate_OutputDelegate_27 = 0x227b4; // FDelegate
		constexpr auto K2Node_CustomEvent_NotifyName_43 = 0x227c4; // FName
		constexpr auto K2Node_CustomEvent_MontageInstanceID_43 = 0x227cc; // int32_t
		constexpr auto K2Node_CreateDelegate_OutputDelegate_28 = 0x227d0; // FDelegate
		constexpr auto K2Node_CustomEvent_NotifyName_44 = 0x227e0; // FName
		constexpr auto K2Node_CustomEvent_MontageInstanceID_44 = 0x227e8; // int32_t
		constexpr auto K2Node_CreateDelegate_OutputDelegate_29 = 0x227ec; // FDelegate
		constexpr auto K2Node_CustomEvent_NotifyName_45 = 0x227fc; // FName
		constexpr auto K2Node_CustomEvent_MontageInstanceID_45 = 0x22804; // int32_t
		constexpr auto K2Node_CreateDelegate_OutputDelegate_30 = 0x22808; // FDelegate
		constexpr auto Temp_name_Variable_7 = 0x22818; // FName
		constexpr auto Temp_int_Variable_7 = 0x22820; // int32_t
		constexpr auto K2Node_CustomEvent_NotifyName_46 = 0x22824; // FName
		constexpr auto K2Node_CustomEvent_MontageInstanceID_46 = 0x2282c; // int32_t
		constexpr auto K2Node_CreateDelegate_OutputDelegate_31 = 0x22830; // FDelegate
		constexpr auto K2Node_CreateDelegate_OutputDelegate_32 = 0x22840; // FDelegate
		constexpr auto K2Node_CustomEvent_NotifyName_47 = 0x22850; // FName
		constexpr auto K2Node_CustomEvent_MontageInstanceID_47 = 0x22858; // int32_t
		constexpr auto K2Node_CreateDelegate_OutputDelegate_33 = 0x2285c; // FDelegate
		constexpr auto K2Node_CustomEvent_NotifyName_48 = 0x2286c; // FName
		constexpr auto K2Node_CustomEvent_MontageInstanceID_48 = 0x22874; // int32_t
		constexpr auto K2Node_CreateDelegate_OutputDelegate_34 = 0x22878; // FDelegate
		constexpr auto K2Node_CustomEvent_NotifyName_49 = 0x22888; // FName
		constexpr auto K2Node_CustomEvent_MontageInstanceID_49 = 0x22890; // int32_t
		constexpr auto K2Node_CreateDelegate_OutputDelegate_35 = 0x22894; // FDelegate
		constexpr auto K2Node_CustomEvent_NotifyName_50 = 0x228a4; // FName
		constexpr auto K2Node_CustomEvent_MontageInstanceID_50 = 0x228ac; // int32_t
		constexpr auto K2Node_CreateDelegate_OutputDelegate_36 = 0x228b0; // FDelegate
		constexpr auto Temp_bool_Variable = 0x228c0; // bool
		constexpr auto Temp_bool_Variable_2 = 0x228c1; // bool
		constexpr auto Temp_float_Variable = 0x228c4; // float
		constexpr auto Temp_bool_Variable_3 = 0x228c8; // bool
		constexpr auto Temp_bool_Has_Been_Initd_Variable = 0x228c9; // bool
		constexpr auto K2Node_CustomEvent_NotifyName_8 = 0x228cc; // FName
		constexpr auto K2Node_CustomEvent_MontageInstanceID_8 = 0x228d4; // int32_t
		constexpr auto Temp_float_Variable_2 = 0x228d8; // float
		constexpr auto Temp_bool_Variable_4 = 0x228dc; // bool
		constexpr auto Temp_float_Variable_3 = 0x228e0; // float
		constexpr auto Temp_bool_IsClosed_Variable = 0x228e4; // bool
		constexpr auto Temp_float_Variable_4 = 0x228e8; // float
		constexpr auto Temp_bool_Variable_5 = 0x228ec; // bool
		constexpr auto K2Node_Select_Default = 0x228f0; // float
		constexpr auto K2Node_CreateDelegate_OutputDelegate_37 = 0x228f4; // FDelegate
		constexpr auto K2Node_CustomEvent_NotifyName_9 = 0x22904; // FName
		constexpr auto K2Node_CustomEvent_MontageInstanceID_9 = 0x2290c; // int32_t
		constexpr auto K2Node_CreateDelegate_OutputDelegate_38 = 0x22910; // FDelegate
		constexpr auto K2Node_Select_Default_2 = 0x22920; // float
		constexpr auto K2Node_Select_Default_3 = 0x22924; // float
		constexpr auto K2Node_Select_Default_4 = 0x22928; // float
		constexpr auto K2Node_Select_Default_5 = 0x2292c; // float
		constexpr auto K2Node_DynamicCast_AsKSCharacter = 0x22930; // AKSCharacter*
		constexpr auto K2Node_DynamicCast_bSuccess = 0x22938; // bool
		constexpr auto K2Node_Event_Duration = 0x2293c; // float
		constexpr auto K2Node_Event_Direction = 0x22940; // FVector2D
		constexpr auto K2Node_Event_NewInteractState = 0x22948; // FName
		constexpr auto K2Node_Event_NewInteractHeight = 0x22950; // float
		constexpr auto K2Node_Event_NewInteractTime = 0x22954; // float
		constexpr auto K2Node_SwitchName_CmpSuccess = 0x22958; // bool
		constexpr auto K2Node_Event_OldInteractState = 0x2295c; // FName
		constexpr auto K2Node_SwitchName_CmpSuccess_2 = 0x22964; // bool
		constexpr auto K2Node_Event_PivotLocation = 0x22968; // FVector
		constexpr auto CallFunc_GetAncillaryMeshes_ReturnValue = 0x22978; // TArray<USkeletalMeshComponent*>
		constexpr auto CallFunc_GetAncillaryMeshes_ReturnValue_2 = 0x22988; // TArray<USkeletalMeshComponent*>
		constexpr auto CallFunc_Array_Get_Item = 0x22998; // USkeletalMeshComponent*
		constexpr auto CallFunc_Array_Get_Item_2 = 0x229a0; // USkeletalMeshComponent*
		constexpr auto K2Node_DynamicCast_AsMaster_Weapon_ABP = 0x229a8; // UMasterWeapon_ABP_C*
		constexpr auto K2Node_DynamicCast_bSuccess_2 = 0x229b0; // bool
		constexpr auto K2Node_CustomEvent_RootLocation = 0x229b4; // FVector
		constexpr auto K2Node_CustomEvent_RootRotation = 0x229c0; // FRotator
		constexpr auto K2Node_Event_StopLocation = 0x229cc; // FVector
		constexpr auto K2Node_Event_StartLocation = 0x229d8; // FVector
		constexpr auto K2Node_Event_OldDirection = 0x229e4; // EKSMovementDirection
		constexpr auto K2Node_Event_NewDirection = 0x229e5; // EKSMovementDirection
		constexpr auto CallFunc_CreateProxyObjectForPlayMontage_CreatedInstanceID = 0x229e8; // int32_t
		constexpr auto CallFunc_CreateProxyObjectForPlayMontage_ReturnValue = 0x229f0; // UPlayMontageCallbackProxy*
		constexpr auto CallFunc_IsValid_ReturnValue = 0x229f8; // bool
		constexpr auto CallFunc_CreateProxyObjectForPlayMontage_CreatedInstanceID_2 = 0x229fc; // int32_t
		constexpr auto CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_2 = 0x22a00; // UPlayMontageCallbackProxy*
		constexpr auto CallFunc_IsValid_ReturnValue_2 = 0x22a08; // bool
		constexpr auto CallFunc_CreateProxyObjectForPlayMontage_CreatedInstanceID_3 = 0x22a0c; // int32_t
		constexpr auto CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_3 = 0x22a10; // UPlayMontageCallbackProxy*
		constexpr auto CallFunc_IsValid_ReturnValue_3 = 0x22a18; // bool
		constexpr auto K2Node_Event_InMantleHeight = 0x22a1c; // float
		constexpr auto K2Node_Event_bInVault = 0x22a20; // bool
		constexpr auto K2Node_Event_InVaultDrop = 0x22a24; // float
		constexpr auto K2Node_Event_InUpDuration = 0x22a28; // float
		constexpr auto K2Node_Event_InAcrossDuration = 0x22a2c; // float
		constexpr auto K2Node_Event_InDownDuration = 0x22a30; // float
		constexpr auto K2Node_Event_InMantleName = 0x22a34; // FName
		constexpr auto K2Node_CustomEvent_NotifyName_10 = 0x22a3c; // FName
		constexpr auto K2Node_CustomEvent_MontageInstanceID_10 = 0x22a44; // int32_t
		constexpr auto K2Node_Event_DeltaTimeX = 0x22a48; // float
		constexpr auto K2Node_CreateDelegate_OutputDelegate_39 = 0x22a4c; // FDelegate
		constexpr auto K2Node_CreateDelegate_OutputDelegate_40 = 0x22a5c; // FDelegate
		constexpr auto CallFunc_CreateProxyObjectForPlayMontage_CreatedInstanceID_4 = 0x22a6c; // int32_t
		constexpr auto CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_4 = 0x22a70; // UPlayMontageCallbackProxy*
		constexpr auto K2Node_CreateDelegate_OutputDelegate_41 = 0x22a78; // FDelegate
		constexpr auto CallFunc_IsValid_ReturnValue_5 = 0x22a88; // bool
		constexpr auto K2Node_CreateDelegate_OutputDelegate_42 = 0x22a8c; // FDelegate
		constexpr auto K2Node_CreateDelegate_OutputDelegate_43 = 0x22a9c; // FDelegate
		constexpr auto Temp_name_Variable_8 = 0x22aac; // FName
		constexpr auto CallFunc_CreateProxyObjectForPlayMontage_CreatedInstanceID_5 = 0x22ab4; // int32_t
		constexpr auto CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_5 = 0x22ab8; // UPlayMontageCallbackProxy*
		constexpr auto Temp_name_Variable_9 = 0x22ac0; // FName
		constexpr auto CallFunc_IsValid_ReturnValue_6 = 0x22ac8; // bool
		constexpr auto Temp_name_Variable_10 = 0x22acc; // FName
		constexpr auto CallFunc_GetSkinnedAnimMontage_bHasOverride = 0x22ad4; // bool
		constexpr auto CallFunc_CreateProxyObjectForPlayMontage_CreatedInstanceID_6 = 0x22ad8; // int32_t
		constexpr auto CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_6 = 0x22ae0; // UPlayMontageCallbackProxy*
		constexpr auto CallFunc_IsValid_ReturnValue_8 = 0x22ae8; // bool
		constexpr auto K2Node_DynamicCast_AsKSCharacter_Anim_Inst = 0x22af0; // UKSCharacterAnimInst*
		constexpr auto K2Node_DynamicCast_bSuccess_3 = 0x22af8; // bool
		constexpr auto K2Node_DynamicCast_AsKSCharacter_Anim_Inst_2 = 0x22b00; // UKSCharacterAnimInst*
		constexpr auto K2Node_DynamicCast_bSuccess_4 = 0x22b08; // bool
		constexpr auto K2Node_Event_EndReason = 0x22b09; // EKSPowerSlideEndReason
		constexpr auto K2Node_SwitchEnum_CmpSuccess = 0x22b0a; // bool
		constexpr auto K2Node_DynamicCast_AsKSCharacter_Anim_Inst_3 = 0x22b10; // UKSCharacterAnimInst*
		constexpr auto K2Node_DynamicCast_bSuccess_5 = 0x22b18; // bool
		constexpr auto Temp_name_Variable_11 = 0x22b1c; // FName
		constexpr auto K2Node_CustomEvent_NewMoveDirection_2 = 0x22b24; // EKSMovementDirection
		constexpr auto K2Node_CustomEvent_NewMoveDirection = 0x22b25; // EKSMovementDirection
		constexpr auto Temp_name_Variable_12 = 0x22b28; // FName
		constexpr auto CallFunc_Map_Find_Value = 0x22b30; // UKSCharacterAnimInst*
		constexpr auto Temp_int_Variable_8 = 0x22b38; // int32_t
		constexpr auto K2Node_Event_NewCombatState = 0x22b3c; // ECombatState
		constexpr auto K2Node_Event_bBlockCooldown = 0x22b3d; // bool
		constexpr auto K2Node_Event_bForce = 0x22b3e; // bool
		constexpr auto K2Node_Event_ReviveMontage = 0x22b40; // UAnimMontage*
		constexpr auto K2Node_Event_bIsInAir = 0x22b48; // bool
		constexpr auto K2Node_Event_Weapon_2 = 0x22b50; // UKSWeaponComponent*
		constexpr auto CallFunc_CreateProxyObjectForPlayMontage_CreatedInstanceID_7 = 0x22b58; // int32_t
		constexpr auto CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_7 = 0x22b60; // UPlayMontageCallbackProxy*
		constexpr auto K2Node_Event_Weapon = 0x22b68; // UKSWeaponComponent*
		constexpr auto CallFunc_IsValid_ReturnValue_12 = 0x22b70; // bool
		constexpr auto K2Node_CustomEvent_In_Character = 0x22b78; // AKSCharacter*
		constexpr auto K2Node_CustomEvent_Character = 0x22b80; // AKSCharacterFoundation*
		constexpr auto K2Node_CustomEvent_Response = 0x22b88; // FDamageEffect
		constexpr auto K2Node_DynamicCast_AsKSCharacter_2 = 0x22bd8; // AKSCharacter*
		constexpr auto K2Node_DynamicCast_bSuccess_6 = 0x22be0; // bool
		constexpr auto CallFunc_ProcessTakePointHitDamage_WorldHitLocation = 0x22be4; // FVector
		constexpr auto CallFunc_ProcessTakePointHitDamage_WorldHitNormal = 0x22bf0; // FVector
		constexpr auto CallFunc_ProcessTakePointHitDamage_VectorToHitSource = 0x22bfc; // FVector
		constexpr auto CallFunc_ProcessTakePointHitDamage_HitDirection = 0x22c08; // EKSMovementDirection
		constexpr auto K2Node_CustomEvent_NotifyName_11 = 0x22c0c; // FName
		constexpr auto K2Node_CustomEvent_MontageInstanceID_11 = 0x22c14; // int32_t
		constexpr auto K2Node_CreateDelegate_OutputDelegate_44 = 0x22c18; // FDelegate
		constexpr auto K2Node_CustomEvent_NotifyName_12 = 0x22c28; // FName
		constexpr auto K2Node_CustomEvent_MontageInstanceID_12 = 0x22c30; // int32_t
		constexpr auto K2Node_CreateDelegate_OutputDelegate_45 = 0x22c34; // FDelegate
		constexpr auto CallFunc_GetSkinnedAnimMontage_bHasOverride_2 = 0x22c44; // bool
		constexpr auto CallFunc_GetDownedTransitionMontage_OutAnimMontage = 0x22c48; // UAnimMontage*
		constexpr auto K2Node_Event_AnimationVariant = 0x22c50; // EKSTurnInPlaceAnimationVariant
		constexpr auto K2Node_Event_DelayTime = 0x22c54; // float
		constexpr auto K2Node_SwitchEnum_CmpSuccess_2 = 0x22c58; // bool
		constexpr auto K2Node_CustomEvent_NotifyName_13 = 0x22c5c; // FName
		constexpr auto K2Node_CustomEvent_MontageInstanceID_13 = 0x22c64; // int32_t
		constexpr auto K2Node_CreateDelegate_OutputDelegate_46 = 0x22c68; // FDelegate
		constexpr auto K2Node_CustomEvent_NotifyName_14 = 0x22c78; // FName
		constexpr auto K2Node_CustomEvent_MontageInstanceID_14 = 0x22c80; // int32_t
		constexpr auto K2Node_CreateDelegate_OutputDelegate_47 = 0x22c84; // FDelegate
		constexpr auto K2Node_CustomEvent_Keywords = 0x22c98; // TSet<FName>
		constexpr auto K2Node_CustomEvent_NotifyName_15 = 0x22ce8; // FName
		constexpr auto K2Node_CustomEvent_MontageInstanceID_15 = 0x22cf0; // int32_t
		constexpr auto K2Node_CreateDelegate_OutputDelegate_48 = 0x22cf4; // FDelegate
		constexpr auto Temp_name_Variable_13 = 0x22d04; // FName
		constexpr auto Temp_int_Variable_9 = 0x22d0c; // int32_t
		constexpr auto K2Node_CustomEvent_NotifyName_16 = 0x22d10; // FName
		constexpr auto K2Node_CustomEvent_MontageInstanceID_16 = 0x22d18; // int32_t
		constexpr auto K2Node_CreateDelegate_OutputDelegate_49 = 0x22d1c; // FDelegate
		constexpr auto K2Node_CustomEvent_NotifyName_17 = 0x22d2c; // FName
		constexpr auto K2Node_CustomEvent_MontageInstanceID_17 = 0x22d34; // int32_t
		constexpr auto K2Node_CreateDelegate_OutputDelegate_50 = 0x22d38; // FDelegate
		constexpr auto Temp_bool_Has_Been_Initd_Variable_2 = 0x22d48; // bool
		constexpr auto CallFunc_UpdateCollarDisableLogic_PlayCollarForWepType = 0x22d49; // bool
		constexpr auto K2Node_CustomEvent_NotifyName_18 = 0x22d4c; // FName
		constexpr auto K2Node_CustomEvent_MontageInstanceID_18 = 0x22d54; // int32_t
		constexpr auto K2Node_CreateDelegate_OutputDelegate_51 = 0x22d58; // FDelegate
		constexpr auto CallFunc_GetSkinnedAnimMontage_bHasOverride_3 = 0x22d68; // bool
		constexpr auto K2Node_CustomEvent_NotifyName_19 = 0x22d6c; // FName
		constexpr auto K2Node_CustomEvent_MontageInstanceID_19 = 0x22d74; // int32_t
		constexpr auto CallFunc_GetSkinnedAnimMontage_bHasOverride_4 = 0x22d78; // bool
		constexpr auto K2Node_CustomEvent_IsSprinting = 0x22d79; // bool
		constexpr auto K2Node_CreateDelegate_OutputDelegate_52 = 0x22d7c; // FDelegate
		constexpr auto CallFunc_GetSkinnedAnimMontage_bHasOverride_5 = 0x22d8c; // bool
		constexpr auto CallFunc_GetAllSkinKeywords_InOutKeywords = 0x22d90; // TSet<FName>
		constexpr auto K2Node_CreateDelegate_OutputDelegate_53 = 0x22de0; // FDelegate
		constexpr auto K2Node_CustomEvent_NotifyName_20 = 0x22df0; // FName
		constexpr auto K2Node_CustomEvent_MontageInstanceID_20 = 0x22df8; // int32_t
		constexpr auto CallFunc_GetSkinnedAnimMontage_bHasOverride_6 = 0x22dfc; // bool
		constexpr auto CallFunc_GetSkinnedAnimMontage_bHasOverride_7 = 0x22dfd; // bool
		constexpr auto K2Node_CreateDelegate_OutputDelegate_54 = 0x22e00; // FDelegate
		constexpr auto CallFunc_GetSkinnedAnimMontage_bHasOverride_8 = 0x22e10; // bool
		constexpr auto CallFunc_GetSkinnedAnimMontage_bHasOverride_9 = 0x22e11; // bool
		constexpr auto CallFunc_CreateProxyObjectForPlayMontage_CreatedInstanceID_8 = 0x22e14; // int32_t
		constexpr auto CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_8 = 0x22e18; // UPlayMontageCallbackProxy*
		constexpr auto CallFunc_IsValid_ReturnValue_14 = 0x22e20; // bool
		constexpr auto CallFunc_Get_Roll_Animation_Set_Cached = 0x22e28; // UAnimMontage*
		constexpr auto Temp_name_Variable_14 = 0x22e30; // FName
		constexpr auto Temp_int_Variable_10 = 0x22e38; // int32_t
		constexpr auto CallFunc_GetSkinnedAnimSequence_bHasOverride = 0x22e3c; // bool
		constexpr auto Temp_bool_IsClosed_Variable_2 = 0x22e3d; // bool
		constexpr auto K2Node_CustomEvent_NotifyName_21 = 0x22e40; // FName
		constexpr auto K2Node_CustomEvent_MontageInstanceID_21 = 0x22e48; // int32_t
		constexpr auto K2Node_Event_bSetIsShieldActive = 0x22e4c; // bool
		constexpr auto CallFunc_CreateProxyObjectForPlayMontage_CreatedInstanceID_9 = 0x22e50; // int32_t
		constexpr auto CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_9 = 0x22e58; // UPlayMontageCallbackProxy*
		constexpr auto CallFunc_IsValid_ReturnValue_16 = 0x22e60; // bool
		constexpr auto CallFunc_CreateProxyObjectForPlayMontage_CreatedInstanceID_10 = 0x22e64; // int32_t
		constexpr auto CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_10 = 0x22e68; // UPlayMontageCallbackProxy*
		constexpr auto CallFunc_IsValid_ReturnValue_17 = 0x22e70; // bool
		constexpr auto K2Node_CreateDelegate_OutputDelegate_55 = 0x22e74; // FDelegate
	}

	namespace n_UAnimNotify_AkEvent_C {
		constexpr auto Attach Name = 0x38; // FString
		constexpr auto Event = 0x48; // UAkAudioEvent*
		constexpr auto Follow = 0x50; // bool
		constexpr auto EventName = 0x58; // FString
		constexpr auto Post to root component = 0x68; // bool
	}

	namespace n_UKSActivityRequirement_GameModeTag {
		constexpr auto RequiredGameModeTags = 0x30; // TArray<FGameplayTag>
		constexpr auto TrueIfMatches = 0x40; // bool
		constexpr auto RequireAllTagsToMatch = 0x41; // bool
	}

	namespace n_UKSActivityRewardCondition_WeaponUsed {
		constexpr auto MatchingWeapons = 0x30; // TArray<TSoftObjectPtr<UKSItem>>
	}

	namespace n_USoundMix {
		constexpr auto bApplyEQ = 0x28; // char : 1
		constexpr auto EQPriority = 0x2c; // float
		constexpr auto EQSettings = 0x30; // FAudioEQEffect
		constexpr auto SoundClassEffects = 0x70; // TArray<FSoundClassAdjuster>
		constexpr auto InitialDelay = 0x80; // float
		constexpr auto FadeInTime = 0x84; // float
		constexpr auto Duration = 0x88; // float
		constexpr auto FadeOutTime = 0x8c; // float
	}

	namespace n_UAnimationSharingManager {
		constexpr auto Skeletons = 0x28; // TArray<USkeleton*>
		constexpr auto PerSkeletonData = 0x38; // TArray<UAnimSharingInstance*>
	}

	namespace n_UKSFreezeFramePawnAnimInst {
		constexpr auto PawnAnimation = 0x330; // UAnimationAsset*
		constexpr auto FacialAnimationSet = 0x338; // UAnimSequence*
		constexpr auto FacialAnimationPose = 0x340; // EKSEmotion
		constexpr auto AnimationPlayRate = 0x344; // float
		constexpr auto AnimationStartTime = 0x348; // float
	}

	namespace n_UANotifyState_WeaponHide_C {
		constexpr auto Is DodgeRollReload Montage = 0x30; // bool
		constexpr auto Reverse = 0x31; // bool
		constexpr auto Only Hide = 0x32; // bool
		constexpr auto Only Unhide = 0x33; // bool
		constexpr auto For Emote = 0x34; // bool
		constexpr auto Hide Left Prop Only = 0x35; // bool
		constexpr auto Hide Right Prop Only = 0x36; // bool
	}

	namespace n_UWBP_StoreSectionTab_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto Hover = 0x528; // UWidgetAnimation*
		constexpr auto ActiveIndicator = 0x530; // UImage*
		constexpr auto ButtonText = 0x538; // UTextBlock*
		constexpr auto CTAWrapper = 0x540; // UCanvasPanel*
		constexpr auto GamepadPrompt = 0x548; // UWBP_KeyCallout_C*
		constexpr auto GamepadPromptContainer = 0x550; // UCanvasPanel*
		constexpr auto TabButton = 0x558; // UButton*
		constexpr auto WBP_CallToAction = 0x560; // UWBP_CallToAction_C*
		constexpr auto OnClicked = 0x568; // FMulticastInlineDelegate
		constexpr auto OnHovered = 0x578; // FMulticastInlineDelegate
		constexpr auto OnUnhovered = 0x588; // FMulticastInlineDelegate
		constexpr auto IsActive = 0x598; // bool
		constexpr auto Index = 0x59c; // int32_t
		constexpr auto HoverStoreSectionTabSFX = 0x5a0; // UAkAudioEvent*
		constexpr auto ClickStoreSectionTabSFX = 0x5a8; // UAkAudioEvent*
	}

	namespace n_UWBP_SettingsGroup_C {
		constexpr auto UberGraphFrame = 0x550; // FPointerToUberGraphFrame
		constexpr auto MainSettingBox = 0x558; // UVerticalBox*
		constexpr auto SubSettingsBox = 0x560; // UVerticalBox*
		constexpr auto SubSettingsContainer = 0x568; // UHorizontalBox*
	}

	namespace n_UNavigationSystemModuleConfig {
		constexpr auto bStrictlyStatic = 0x50; // char : 1
		constexpr auto bCreateOnClient = 0x50; // char : 1
		constexpr auto bAutoSpawnMissingNavData = 0x50; // char : 1
		constexpr auto bSpawnNavDataInNavBoundsLevel = 0x50; // char : 1
	}

	namespace n_UWBP_BoosterInventoryItem_C {
		constexpr auto UberGraphFrame = 0x530; // FPointerToUberGraphFrame
		constexpr auto BoostItemIcon = 0x538; // UWBP_AsyncIcon_C*
		constexpr auto DecroLine = 0x540; // UImage*
		constexpr auto DescText = 0x548; // UTextBlock*
		constexpr auto DescTextBg = 0x550; // UImage*
		constexpr auto QuantityText = 0x558; // UTextBlock*
		constexpr auto TitleText = 0x560; // UTextBlock*
		constexpr auto TitleTextBg = 0x568; // UImage*
		constexpr auto WBP_ButtonSlot_Cosmetic = 0x570; // UWBP_ButtonSlot_Cosmetic_C*
		constexpr auto Current Item Old = 0x578; // UKSItem*
		constexpr auto BoostConfirmSound = 0x580; // UAkAudioEvent*
	}

	namespace n_UWBP_JobGeneralButton_Empty_C {
		constexpr auto background = 0x238; // UImage*
	}

	namespace n_UKSBTTask_MakeNoiseEvent {
		constexpr auto Loudness = 0x70; // float
		constexpr auto EventTag = 0x74; // FName
	}

	namespace n_UInterpTrackInstBoolProp {
		constexpr auto ResetBool = 0x68; // bool
	}

	namespace n_UMaterialExpressionSobol {
		constexpr auto Cell = 0x40; // FExpressionInput
		constexpr auto Index = 0x54; // FExpressionInput
		constexpr auto Seed = 0x68; // FExpressionInput
		constexpr auto ConstIndex = 0x7c; // uint32_t
		constexpr auto ConstSeed = 0x80; // FVector2D
	}

	namespace n_USkyLightComponent {
		constexpr auto SourceType = 0x238; // ESkyLightSourceType
		constexpr auto Cubemap = 0x240; // UTextureCube*
		constexpr auto SourceCubemapAngle = 0x248; // float
		constexpr auto CubemapResolution = 0x24c; // int32_t
		constexpr auto SkyDistanceThreshold = 0x250; // float
		constexpr auto bCaptureEmissiveOnly = 0x254; // bool
		constexpr auto bLowerHemisphereIsBlack = 0x255; // bool
		constexpr auto LowerHemisphereColor = 0x258; // FLinearColor
		constexpr auto OcclusionMaxDistance = 0x268; // float
		constexpr auto Contrast = 0x26c; // float
		constexpr auto OcclusionExponent = 0x270; // float
		constexpr auto MinOcclusion = 0x274; // float
		constexpr auto OcclusionTint = 0x278; // FColor
		constexpr auto OcclusionCombineMode = 0x27c; // EOcclusionCombineMode
		constexpr auto BlendDestinationCubemap = 0x328; // UTextureCube*
	}

	namespace n_UBasePoolComponent {
		constexpr auto MaxPoolSize = 0xb0; // int32_t
		constexpr auto StartingPoolSize = 0xb4; // int32_t
		constexpr auto ComponentClassName = 0xb8; // FString
		constexpr auto OverflowType = 0xc8; // EPoolOverflowHandling
	}

	namespace n_UJobCollection {
		constexpr auto CollectionName = 0x98; // FText
		constexpr auto CollectionDescription = 0xb0; // FText
	}

	namespace n_UAutoDestroySubsystem {
		constexpr auto ActorsToPoll = 0x38; // TArray<AActor*>
	}

	namespace n_UParticleModuleMeshRotation_Seeded {
		constexpr auto RandomSeedInfo = 0x80; // FParticleRandomSeedInfo
	}

	namespace n_UMediaTexture {
		constexpr auto AddressX = 0xb8; // TextureAddress
		constexpr auto AddressY = 0xb9; // TextureAddress
		constexpr auto AutoClear = 0xba; // bool
		constexpr auto ClearColor = 0xbc; // FLinearColor
		constexpr auto EnableGenMips = 0xcc; // bool
		constexpr auto NumMips = 0xcd; // char
		constexpr auto MediaPlayer = 0xd0; // UMediaPlayer*
	}

	namespace n_UKSHudEditorSettingsInfo {
		constexpr auto InRange = 0x108; // FVector2D
		constexpr auto OutRange = 0x110; // FVector2D
		constexpr auto PropertyName = 0x118; // FName
		constexpr auto ActiveWidget = 0x120; // UKSHudEditableWidget*
	}

	namespace n_UMovieSceneGeometryCollectionSection {
		constexpr auto Params = 0xe0; // FMovieSceneGeometryCollectionParams
	}

	namespace n_UKSPlayerMod_PickupRange {
		constexpr auto PickupRadius = 0x330; // float
		constexpr auto PickupCylinderRadius = 0x334; // float
		constexpr auto CompleteRadiusOverride = 0x338; // bool
	}

	namespace n_UNavArea {
		constexpr auto DefaultCost = 0x30; // float
		constexpr auto FixedAreaEnteringCost = 0x34; // float
		constexpr auto DrawColor = 0x38; // FColor
		constexpr auto SupportedAgents = 0x3c; // FNavAgentSelector
		constexpr auto bSupportsAgent0 = 0x40; // char : 1
		constexpr auto bSupportsAgent1 = 0x40; // char : 1
		constexpr auto bSupportsAgent2 = 0x40; // char : 1
		constexpr auto bSupportsAgent3 = 0x40; // char : 1
		constexpr auto bSupportsAgent4 = 0x40; // char : 1
		constexpr auto bSupportsAgent5 = 0x40; // char : 1
		constexpr auto bSupportsAgent6 = 0x40; // char : 1
		constexpr auto bSupportsAgent7 = 0x40; // char : 1
		constexpr auto bSupportsAgent8 = 0x41; // char : 1
		constexpr auto bSupportsAgent9 = 0x41; // char : 1
		constexpr auto bSupportsAgent10 = 0x41; // char : 1
		constexpr auto bSupportsAgent11 = 0x41; // char : 1
		constexpr auto bSupportsAgent12 = 0x41; // char : 1
		constexpr auto bSupportsAgent13 = 0x41; // char : 1
		constexpr auto bSupportsAgent14 = 0x41; // char : 1
		constexpr auto bSupportsAgent15 = 0x41; // char : 1
	}

	namespace n_UImage {
		constexpr auto Brush = 0x110; // FSlateBrush
		constexpr auto BrushDelegate = 0x198; // FDelegate
		constexpr auto ColorAndOpacity = 0x1a8; // FLinearColor
		constexpr auto ColorAndOpacityDelegate = 0x1b8; // FDelegate
		constexpr auto bFlipForRightToLeftFlowDirection = 0x1c8; // bool
		constexpr auto OnMouseButtonDownEvent = 0x1cc; // FDelegate
	}

	namespace n_UConnectionCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_ACullDistanceVolume {
		constexpr auto CullDistances = 0x258; // TArray<FCullDistanceSizePair>
		constexpr auto bEnabled = 0x268; // char : 1
	}

	namespace n_UAudioImpulseResponse {
		constexpr auto ImpulseResponse = 0x28; // TArray<float>
		constexpr auto NumChannels = 0x38; // int32_t
		constexpr auto SampleRate = 0x3c; // int32_t
		constexpr auto NormalizationVolumeDb = 0x40; // float
		constexpr auto IRData = 0x48; // TArray<float>
	}

	namespace n_AKSCharacterBase {
		constexpr auto PawnId = 0xce8; // char
		constexpr auto OnTakeArmorDamage = 0xcf0; // FMulticastInlineDelegate
		constexpr auto HealthRegenerationPerSecond = 0xd30; // float
		constexpr auto HealthRegenerationPeriod = 0xd34; // float
		constexpr auto HealthRegenerationDelay = 0xd38; // float
		constexpr auto OnHealthRegenDelayTimerActive = 0xd40; // FMulticastInlineDelegate
		constexpr auto OnHealthRegenDelayTimerTick = 0xd50; // FMulticastInlineDelegate
		constexpr auto OnHealthRegenDelayTimerComplete = 0xd60; // FMulticastInlineDelegate
		constexpr auto HealthRegenDelayTimer = 0xd70; // UKSTimerComponent*
		constexpr auto CurrentOverheal = 0xd80; // float
		constexpr auto OverhealDecayPerSecond = 0xd84; // float
		constexpr auto OverhealDecayPeriod = 0xd88; // float
		constexpr auto OnOverhealChanged = 0xdb0; // FMulticastInlineDelegate
		constexpr auto QueuedMovementForgivenessPeriod = 0xdc0; // float
		constexpr auto QueuedMovementForgivenessEndTime = 0xdc4; // float
		constexpr auto CurrentQueuedMovement = 0xdc8; // EKSQueuedMovement
		constexpr auto FreeFallCollisionProfileName = 0xdcc; // FName
		constexpr auto CurrentFreeFallCameraShake = 0xde4; // TWeakObjectPtr<UCameraShake>
		constexpr auto FreeFallCameraShake = 0xdf8; // UKSVelocityCameraShake*
		constexpr auto OnEndFreeFallDel = 0xe00; // FMulticastInlineDelegate
		constexpr auto bRealWantsCrouch = 0xe10; // bool
		constexpr auto OnSprintChanged = 0xe18; // FMulticastInlineDelegate
		constexpr auto bReplicatedSprinting = 0xe28; // bool
		constexpr auto ReplicatedAccelDirection = 0xe2c; // FVector_NetQuantizeNormal
		constexpr auto OnPowerSlideChanged = 0xe38; // FMulticastInlineDelegate
		constexpr auto bReplicatedPowerSlide = 0xe48; // FKSPowerSlideInfo
		constexpr auto DodgeRollDuration = 0xe4c; // float
		constexpr auto bReplicatedDodgeRoll = 0xe50; // bool
		constexpr auto OnDOdgeRollChanged = 0xe58; // FMulticastInlineDelegate
		constexpr auto OnNearMiss = 0xe98; // FMulticastInlineDelegate
		constexpr auto NearMissRange = 0xeb0; // float
		constexpr auto NearMissCooldownTime = 0xeb4; // float
		constexpr auto NearMissADSCameraShakeScaleOverride = 0xeb8; // float
		constexpr auto NearMissSpecialEffect = 0xec0; // FKSSpecialEffect
		constexpr auto NearMissFrontCameraShake = 0xf10; // UCameraShake*
		constexpr auto NearMissBackCameraShake = 0xf18; // UCameraShake*
		constexpr auto NearMissRightCameraShake = 0xf20; // UCameraShake*
		constexpr auto NearMissLeftCameraShake = 0xf28; // UCameraShake*
		constexpr auto LungeInfo = 0xf30; // FKSLungeInfo
		constexpr auto OnLungeChanged = 0xf40; // FMulticastInlineDelegate
		constexpr auto bReplicatedAbilityMovement = 0xf50; // bool
		constexpr auto bReplicatedZipLineBracing = 0xf51; // bool
		constexpr auto bReplicatedZipLineEnding = 0xf52; // bool
		constexpr auto bReplicatedUpline = 0xf53; // bool
		constexpr auto SecondsAwayToBraceOnZipLine = 0xf54; // float
		constexpr auto SecondsAwayToEndOnZipLine = 0xf58; // float
		constexpr auto ReplicatedZipLineInfo = 0xf60; // FKSZipLineInfo
		constexpr auto bPrevPressedJump = 0xf70; // bool
		constexpr auto OnJumpedDel = 0xf78; // FMulticastInlineDelegate
		constexpr auto OnLandedDel = 0xf88; // FMulticastInlineDelegate
		constexpr auto OnStartFallingDel = 0xf98; // FMulticastInlineDelegate
		constexpr auto bReplicatedStun = 0xfbe; // bool
		constexpr auto bReplicatedHardLand = 0xfe0; // bool
		constexpr auto CurrentSprintCameraShake = 0x1018; // TWeakObjectPtr<UCameraShake>
		constexpr auto SprintCameraShake = 0x1028; // UKSSprintCameraShake*
		constexpr auto CurrentLandedCameraShake = 0x1030; // TWeakObjectPtr<UCameraShake>
		constexpr auto LandedCameraShake = 0x1040; // UKSCharacterCameraShake*
		constexpr auto OnAimStateChanged = 0x1048; // FMulticastInlineDelegate
		constexpr auto ProjectileThrowComponent = 0x1058; // USceneComponent*
		constexpr auto GrenadeThrowComponent = 0x1060; // USceneComponent*
		constexpr auto MeleeThrowComponent = 0x1068; // USceneComponent*
		constexpr auto ReplicatedAimState = 0x1070; // EKSCharacterAimMode
		constexpr auto LastReplicatedAimState = 0x1071; // EKSCharacterAimMode
		constexpr auto bEnableSmoothedAimRotation = 0x1072; // bool
		constexpr auto ViewInfo = 0x1074; // FReplicatedViewInfo
		constexpr auto bUseCameraLagSubstepping = 0x107c; // bool
		constexpr auto CameraLagMaxTimeStep = 0x1080; // float
		constexpr auto CameraRotationLagSpeed = 0x1084; // float
		constexpr auto PreviousDesiredRot = 0x1088; // FRotator
		constexpr auto SmoothedViewRotation = 0x1094; // FRotator
		constexpr auto bIsSmoothingAimRotation = 0x10a0; // bool
		constexpr auto DeathInfo = 0x10a8; // FKSDeathInfo
		constexpr auto InstantDeathDamageType = 0x10d0; // UKSDamageTypeBase*
		constexpr auto bRadialMiss = 0x10d8; // bool
		constexpr auto LastCharacterToDamageMe = 0x10e0; // AKSCharacterBase*
		constexpr auto OnDeathStateChangedDel = 0x1100; // FMulticastInlineDelegate
		constexpr auto HeadCollisionComponent = 0x1148; // USphereComponent*
		constexpr auto ZiplineMeshComponent = 0x1150; // USkeletalMeshComponent*
		constexpr auto UplineMeshComponent = 0x1158; // USkeletalMeshComponent*
		constexpr auto BackupPlayerState = 0x1160; // APlayerState*
		constexpr auto HeadBones = 0x1170; // TArray<FName>
		constexpr auto LimbBones = 0x1180; // TArray<FName>
		constexpr auto CachedBoneToHitLocationType = 0x1190; // TMap<FName, EHitLocationType>
		constexpr auto HeadshotPassthroughBones = 0x11e0; // TArray<FName>
		constexpr auto FriendlyVisibilityRevealParameters = 0x11f8; // FKSRevealInfo
		constexpr auto AimedAtRevealParameters = 0x1240; // FKSRevealInfo
		constexpr auto KilledByRevealParameters = 0x1288; // FKSRevealInfo
		constexpr auto KilledByRevealTimeSeconds = 0x12d0; // float
		constexpr auto bRevealed = 0x12d4; // bool
		constexpr auto CurrentRevealColor = 0x12d8; // FLinearColor
		constexpr auto OutlineZFadeMin = 0x12e8; // float
		constexpr auto OutlineZFadeMax = 0x12ec; // float
		constexpr auto SpawnImmuneOutlineColorEnemy = 0x12f0; // FLinearColor
		constexpr auto FriendlyOutlineFadeDistanceMin = 0x1300; // float
		constexpr auto FriendlyOutlineFadeDistanceMax = 0x1304; // float
		constexpr auto bReevaluateSilhouetteNextTick = 0x1308; // bool
		constexpr auto bForceSilhouette = 0x1309; // bool
		constexpr auto ForcedSilhouetteType = 0x130a; // EPlayerSilhouetteType
		constexpr auto bForcedFillSilhouette = 0x130b; // bool
		constexpr auto bForcedMarkSilhouette = 0x130c; // bool
		constexpr auto SilhouetteType = 0x130d; // EPlayerSilhouetteType
		constexpr auto bFillSilhouette = 0x130e; // bool
		constexpr auto bMarkSilhouette = 0x130f; // bool
		constexpr auto SilhouetteQualifier = 0x1310; // EPlayerSilhouetteQualifier
		constexpr auto bSilhouetteComponentsDirty = 0x1328; // bool
		constexpr auto CachedSilhouetteComponents = 0x1330; // TArray<UPrimitiveComponent*>
		constexpr auto OnRootChanged = 0x1340; // FMulticastInlineDelegate
		constexpr auto ReplicatedMantleInfo = 0x1350; // FKSMantleInfo
		constexpr auto OnMantleChanged = 0x1398; // FMulticastInlineDelegate
		constexpr auto InteractionState = 0x13c0; // FName
		constexpr auto InteractionHeight = 0x13c8; // float
		constexpr auto InteractionTime = 0x13cc; // float
		constexpr auto OnCharacterStartedMovingDel = 0x13e8; // FMulticastInlineDelegate
		constexpr auto OnCharacterStoppedMovingDel = 0x13f8; // FMulticastInlineDelegate
		constexpr auto OnSwimmingChangedDel = 0x1420; // FMulticastInlineDelegate
		constexpr auto OnSubmergedChangedDel = 0x1430; // FMulticastInlineDelegate
		constexpr auto OnBreathUpdate = 0x1440; // FMulticastInlineDelegate
		constexpr auto bIsSubmerged = 0x1450; // bool
		constexpr auto MaximumLungCapacity = 0x1454; // float
		constexpr auto CurrentLungCapacity = 0x1458; // float
		constexpr auto LungCapacityRecoveryTime = 0x145c; // float
		constexpr auto bDestroyOnRoundSetup = 0x1460; // bool
		constexpr auto CharacterSockets = 0x1480; // TMap<FName, FKSCharacterSocketInfo>
		constexpr auto OnEmoteStartedPlaying = 0x14d0; // FMulticastInlineDelegate
		constexpr auto OnEmoteStoppedPlaying = 0x14e0; // FMulticastInlineDelegate
		constexpr auto bIsSpawnImmune = 0x14f0; // bool
	}

	namespace n_AKSMedPack {
		constexpr auto bUseWhileMovingOverride = 0x6d8; // bool
		constexpr auto bCanStopFire = 0x6d9; // bool
	}

	namespace n_UAnimSharingAdditiveInstance {
		constexpr auto BaseComponent = 0x268; // TWeakObjectPtr<USkeletalMeshComponent>
		constexpr auto AdditiveAnimation = 0x270; // TWeakObjectPtr<UAnimSequence>
		constexpr auto Alpha = 0x278; // float
		constexpr auto bStateBool = 0x27c; // bool
	}

	namespace n_ULevelSequenceDirector {
		constexpr auto Player = 0x28; // ULevelSequencePlayer*
	}

	namespace n_UKSSpawnRule_Proximity {
		constexpr auto OuterRadius = 0x40; // float
		constexpr auto InnerRadius = 0x44; // float
	}

	namespace n_UBreakpoint {
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto Node = 0x30; // UEdGraphNode*
		constexpr auto bStepOnce = 0x38; // char : 1
		constexpr auto bStepOnce_WasPreviouslyDisabled = 0x38; // char : 1
		constexpr auto bStepOnce_RemoveAfterHit = 0x38; // char : 1
	}

	namespace n_UWBP_WeaponCategoryMasteryBadge_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto Mastered = 0x240; // UWBP_AsyncIcon_C*
		constexpr auto Standard = 0x248; // UWBP_AsyncIcon_C*
		constexpr auto WidgetSwitcher_74 = 0x250; // UWidgetSwitcher*
	}

	namespace n_UTextPropertyTestObject {
		constexpr auto DefaultedText = 0x28; // FText
		constexpr auto UndefaultedText = 0x40; // FText
		constexpr auto TransientText = 0x58; // FText
	}

	namespace n_UAkLateReverbComponent {
		constexpr auto bEnable = 0x208; // char : 1
		constexpr auto AuxBus = 0x210; // UAkAuxBus*
		constexpr auto AuxBusName = 0x218; // FString
		constexpr auto SendLevel = 0x228; // float
		constexpr auto FadeRate = 0x22c; // float
		constexpr auto Priority = 0x230; // float
		constexpr auto NextLowerPriorityComponent = 0x238; // UAkLateReverbComponent*
	}

	namespace n_ASceneCapture2D {
		constexpr auto CaptureComponent2D = 0x230; // USceneCaptureComponent2D*
	}

	namespace n_UWBP_SettingsRadioButtonGroup_C {
		constexpr auto UberGraphFrame = 0x578; // FPointerToUberGraphFrame
		constexpr auto RadioButtonBox = 0x580; // UHorizontalBox*
		constexpr auto Settings Radio Button = 0x588; // UWBP_SettingsRadio_C*
		constexpr auto Radio Buttons = 0x590; // TArray<UWBP_SettingsRadio_C*>
	}

	namespace n_UWBP_SettingsSlider_C {
		constexpr auto UberGraphFrame = 0x578; // FPointerToUberGraphFrame
		constexpr auto Hover = 0x580; // UWidgetAnimation*
		constexpr auto DisplayText = 0x588; // UTextBlock*
		constexpr auto HoverButton = 0x590; // UButton*
		constexpr auto hoverstroke = 0x598; // UImage*
		constexpr auto SettingsSlider = 0x5a0; // USlider*
		constexpr auto SliderBar = 0x5a8; // UProgressBar*
		constexpr auto bIsHovered = 0x5b0; // bool
		constexpr auto CurrentAcceleration = 0x5b4; // float
		constexpr auto MaxAcceleration = 0x5b8; // float
		constexpr auto MinAcceleration = 0x5bc; // float
		constexpr auto LinearAccelerationCoeff = 0x5c0; // float
	}

	namespace n_UMaterialExpressionFontSample {
		constexpr auto Font = 0x40; // UFont*
		constexpr auto FontTexturePage = 0x48; // int32_t
	}

	namespace n_UKSBTTask_FindGrenadeTarget {
		constexpr auto TargetKey = 0x70; // FBlackboardKeySelector
		constexpr auto WeaponOverrideKey = 0x98; // FBlackboardKeySelector
		constexpr auto OutTargetLocationKey = 0xc0; // FBlackboardKeySelector
		constexpr auto OutIntendedTargetLocationKey = 0xe8; // FBlackboardKeySelector
		constexpr auto bDrawDebug = 0x110; // bool
	}

	namespace n_UKSPlayerMod_HipfireSprint {
		constexpr auto bCanHipfireSprint = 0x330; // bool
		constexpr auto bCanReloadSprint = 0x331; // bool
	}

	namespace n_AKSPlayerStart {
		constexpr auto bInitialSpawnPoint = 0x260; // bool
		constexpr auto bRespawnPoint = 0x261; // bool
		constexpr auto SideNum = 0x264; // int32_t
		constexpr auto bBotOnly = 0x268; // bool
		constexpr auto bPlayerOnly = 0x269; // bool
		constexpr auto InitialBehaviorState = 0x26a; // ECharacterBehaviorState
		constexpr auto bUseInitialBehaviorOverride = 0x26b; // bool
		constexpr auto InitialBehaviorStateOverride = 0x26c; // ECharacterBehaviorState
		constexpr auto InventoryToGive = 0x270; // TArray<UKSItem*>
		constexpr auto InitialSpawnInventoryToGive = 0x280; // TArray<UKSItem*>
		constexpr auto RespawnInventoryToGive = 0x290; // TArray<UKSItem*>
		constexpr auto ModsToGive = 0x2a0; // TArray<UKSPlayerMod*>
		constexpr auto InitialSpawnModsToGive = 0x2b0; // TArray<UKSPlayerMod*>
		constexpr auto RespawnModsToGive = 0x2c0; // TArray<UKSPlayerMod*>
	}

	namespace n_UKSJobSelectBanWidget {
		constexpr auto CachedBanTasks = 0x548; // TArray<FJobSelectionTask>
	}

	namespace n_UWBP_BattlePassTitle_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto BackGradient = 0x528; // UImage*
		constexpr auto BattlePassSeasonName = 0x530; // UTextBlock*
		constexpr auto Fill = 0x538; // UImage*
		constexpr auto FillStandard = 0x540; // UImage*
		constexpr auto Glow = 0x548; // UImage*
		constexpr auto Glow_2 = 0x550; // UImage*
		constexpr auto TimeRemainingGroup = 0x558; // UHorizontalBox*
		constexpr auto TimeRemainingText = 0x560; // UTextBlock*
		constexpr auto TypeSwitcher = 0x568; // UWidgetSwitcher*
		constexpr auto WBP_BattlePassEmblem = 0x570; // UWBP_BattlePassEmblem_C*
		constexpr auto XPGainLabel = 0x578; // UTextBlock*
		constexpr auto HasPremium = 0x580; // bool
	}

	namespace n_UWBP_VerticalTabGroup_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto EntryContainer = 0x528; // UVerticalBox*
		constexpr auto OnSubviewFocus = 0x530; // FMulticastInlineDelegate
		constexpr auto OnSubviewChange = 0x540; // FMulticastInlineDelegate
	}

	namespace n_UExpandableArea {
		constexpr auto Style = 0x118; // FExpandableAreaStyle
		constexpr auto BorderBrush = 0x238; // FSlateBrush
		constexpr auto BorderColor = 0x2c0; // FSlateColor
		constexpr auto bIsExpanded = 0x2e8; // bool
		constexpr auto MaxHeight = 0x2ec; // float
		constexpr auto HeaderPadding = 0x2f0; // FMargin
		constexpr auto AreaPadding = 0x300; // FMargin
		constexpr auto OnExpansionChanged = 0x310; // FMulticastInlineDelegate
		constexpr auto HeaderContent = 0x320; // UWidget*
		constexpr auto BodyContent = 0x328; // UWidget*
	}

	namespace n_UWBP_CustomSwapButton_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto Hover = 0x240; // UWidgetAnimation*
		constexpr auto SwapButton = 0x248; // UButton*
		constexpr auto OnClicked = 0x250; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionLightmassReplace {
		constexpr auto Realtime = 0x40; // FExpressionInput
		constexpr auto Lightmass = 0x54; // FExpressionInput
	}

	namespace n_UNavigationQueryFilter {
		constexpr auto Areas = 0x28; // TArray<FNavigationFilterArea>
		constexpr auto IncludeFlags = 0x38; // FNavigationFilterFlags
		constexpr auto ExcludeFlags = 0x3c; // FNavigationFilterFlags
	}

	namespace n_UFootstepNotify_C {
		constexpr auto StepType = 0x48; // StepType
		constexpr auto BoneName = 0x4c; // FName
	}

	namespace n_ANavSystemConfigOverride {
		constexpr auto NavigationSystemConfig = 0x220; // UNavigationSystemConfig*
		constexpr auto OverridePolicy = 0x228; // ENavSystemOverridePolicy
		constexpr auto bLoadOnClient = 0x229; // char : 1
	}

	namespace n_UKSMapLabel {
		constexpr auto Map = 0x68; // TSoftObjectPtr<UWorld>
		constexpr auto MiniMapTexture = 0x90; // TSoftObjectPtr<UTexture2D>
		constexpr auto LoadingScreenImage = 0xb8; // TSoftObjectPtr<UTexture2D>
		constexpr auto MapDisplayName = 0xe0; // FText
		constexpr auto MapRegion = 0xf8; // FText
		constexpr auto MapDescription = 0x110; // FText
	}

	namespace n_URadialVector {
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto Position = 0xb4; // FVector
	}

	namespace n_UKSBTD_HasAmmo {
		constexpr auto EquipPoint = 0x68; // FGameplayTag
		constexpr auto ClipOperation = 0x70; // EArithmeticKeyOperation
		constexpr auto ClipPercentage = 0x74; // float
		constexpr auto bOrCheck = 0x78; // bool
		constexpr auto InventoryOperation = 0x79; // EArithmeticKeyOperation
		constexpr auto InventoryPercentage = 0x7c; // float
	}

	namespace n_UParticleModuleLocationPrimitiveBase {
		constexpr auto Positive_X = 0x30; // char : 1
		constexpr auto Positive_Y = 0x30; // char : 1
		constexpr auto Positive_Z = 0x30; // char : 1
		constexpr auto Negative_X = 0x30; // char : 1
		constexpr auto Negative_Y = 0x30; // char : 1
		constexpr auto Negative_Z = 0x30; // char : 1
		constexpr auto SurfaceOnly = 0x30; // char : 1
		constexpr auto Velocity = 0x30; // char : 1
		constexpr auto VelocityScale = 0x38; // FRawDistributionFloat
		constexpr auto StartLocation = 0x68; // FRawDistributionVector
	}

	namespace n_ALocalPlayerLobbyCharacter_C {
		constexpr auto PendingPlayerName = 0x3ec8; // FString
		constexpr auto PendingAvatar = 0x3ed8; // UKSItem*
		constexpr auto PendingIsLeader = 0x3ee0; // bool
		constexpr auto NeedsToSetNameplate = 0x3ee1; // bool
	}

	namespace n_UKSBTTask_SelectDropLocation {
		constexpr auto InitializeDropLocation = 0x70; // bool
		constexpr auto UseObjectiveProximity = 0x71; // bool
		constexpr auto MaxBotsAtDropLocation = 0x74; // int32_t
		constexpr auto InitializeWayPointSet = 0x78; // bool
		constexpr auto DropLocationKey = 0x80; // FBlackboardKeySelector
		constexpr auto DropLocationVectorKey = 0xa8; // FBlackboardKeySelector
		constexpr auto FlightLocationVectorKey = 0xd0; // FBlackboardKeySelector
	}

	namespace n_UMovieSceneAkAudioRTPCSection {
		constexpr auto RTPC = 0xe0; // UAkRtpc*
		constexpr auto Name = 0xe8; // FString
		constexpr auto FloatCurve = 0xf8; // FRichCurve
		constexpr auto FloatChannelSerializationHelper = 0x178; // FMovieSceneFloatChannelSerializationHelper
		constexpr auto RTPCChannel = 0x1a8; // FMovieSceneFloatChannel
	}

	namespace n_ADatasmithSceneActor {
		constexpr auto Scene = 0x220; // UDatasmithScene*
		constexpr auto RelatedActors = 0x228; // TMap<FName, TSoftObjectPtr<AActor>>
	}

	namespace n_AKSAgent_Aimed {
		constexpr auto OnAgentStartFire = 0x320; // FMulticastInlineDelegate
		constexpr auto bDisplayAimTargeter = 0x330; // bool
		constexpr auto AimTargeterWidget = 0x338; // TSoftClassPtr<UObject>
		constexpr auto CachedAim = 0x360; // FAimData
		constexpr auto WeaponAsset = 0x3b0; // UKSWeaponAsset*
		constexpr auto CachedProjectileAsset = 0x3b8; // UKSWeaponAsset_WithProjectile*
		constexpr auto StateTransitionHandle = 0x3c0; // FTimerHandle
		constexpr auto ExpectedTransitionEndTime = 0x3c8; // float
		constexpr auto CurrentAmmo = 0x3cc; // int32_t
		constexpr auto CurrentBurstCount = 0x3d0; // int32_t
		constexpr auto FiringState = 0x3d4; // EWeaponStateNew
		constexpr auto ReplicatedStateChanges = 0x3d8; // FAgentStateChangeList
		constexpr auto NextShotId = 0x460; // int32_t
		constexpr auto TargeterLocation = 0x464; // FVector
		constexpr auto ProjectileSimFrequency = 0x470; // float
		constexpr auto MaxSimTime = 0x474; // float
		constexpr auto CollisionProfileName = 0x478; // FName
	}

	namespace n_UPoseWatch {
		constexpr auto Node = 0x28; // UEdGraphNode*
		constexpr auto PoseWatchColour = 0x30; // FColor
	}

	namespace n_UKSPerkTreeNodeBase {
		constexpr auto AssignedPerk = 0x520; // TSoftObjectPtr<UKSPlayerMod>
		constexpr auto OnTreeNodeHovered = 0x548; // FMulticastInlineDelegate
		constexpr auto OnTreeNodeSelected = 0x558; // FMulticastInlineDelegate
		constexpr auto OnRequestPerkPurchase = 0x568; // FMulticastInlineDelegate
		constexpr auto bIsPlaceholder = 0x578; // bool
		constexpr auto NodeState = 0x579; // EPerkTreeNodeState
	}

	namespace n_UParticleSystemComponent {
		constexpr auto Template = 0x430; // UParticleSystem*
		constexpr auto EmitterMaterials = 0x438; // TArray<UMaterialInterface*>
		constexpr auto SkelMeshComponents = 0x448; // TArray<USkeletalMeshComponent*>
		constexpr auto bRenderAfterDLSS = 0x459; // char : 1
		constexpr auto bResetOnDetach = 0x459; // char : 1
		constexpr auto bUpdateOnDedicatedServer = 0x459; // char : 1
		constexpr auto bAllowRecycling = 0x459; // char : 1
		constexpr auto bAutoManageAttachment = 0x459; // char : 1
		constexpr auto bAutoAttachWeldSimulatedBodies = 0x459; // char : 1
		constexpr auto bWarmingUp = 0x45a; // char : 1
		constexpr auto bOverrideLODMethod = 0x45a; // char : 1
		constexpr auto bSkipUpdateDynamicDataDuringTick = 0x45a; // char : 1
		constexpr auto LODMethod = 0x465; // ParticleSystemLODMethod
		constexpr auto RequiredSignificance = 0x466; // EParticleSignificanceLevel
		constexpr auto InstanceParameters = 0x468; // TArray<FParticleSysParam>
		constexpr auto OnParticleSpawn = 0x478; // FMulticastInlineDelegate
		constexpr auto OnParticleBurst = 0x488; // FMulticastInlineDelegate
		constexpr auto OnParticleDeath = 0x498; // FMulticastInlineDelegate
		constexpr auto OnParticleCollide = 0x4a8; // FMulticastInlineDelegate
		constexpr auto OnParticleCollidePacked = 0x4b8; // FMulticastInlineDelegate
		constexpr auto m_ParticleChannels = 0x4c8; // FParticleChannelContainer
		constexpr auto bOldPositionValid = 0x4cc; // bool
		constexpr auto OldPosition = 0x4d0; // FVector
		constexpr auto PartSysVelocity = 0x4dc; // FVector
		constexpr auto WarmupTime = 0x4e8; // float
		constexpr auto WarmupTickRate = 0x4ec; // float
		constexpr auto SecondsBeforeInactive = 0x4f4; // float
		constexpr auto MaxTimeBeforeForceUpdateTransform = 0x4fc; // float
		constexpr auto ReplayClips = 0x520; // TArray<UParticleSystemReplay*>
		constexpr auto CustomTimeDilation = 0x538; // float
		constexpr auto AutoAttachParent = 0x590; // TWeakObjectPtr<USceneComponent>
		constexpr auto AutoAttachSocketName = 0x598; // FName
		constexpr auto AutoAttachLocationRule = 0x5a0; // EAttachmentRule
		constexpr auto AutoAttachRotationRule = 0x5a1; // EAttachmentRule
		constexpr auto AutoAttachScaleRule = 0x5a2; // EAttachmentRule
		constexpr auto OnSystemFinished = 0x5d0; // FMulticastInlineDelegate
	}

	namespace n_USoundNodeSwitch {
		constexpr auto IntParameterName = 0x48; // FName
	}

	namespace n_UKSBTD_CompareBlackboardToValue {
		constexpr auto TargetValue = 0x90; // float
	}

	namespace n_UKSSpawnRule_PlayerEventProximity {
		constexpr auto RecordDuration = 0x48; // float
		constexpr auto bScoreDecaysWithTime = 0x4c; // bool
		constexpr auto bConsidersFriendlies = 0x4d; // bool
		constexpr auto bConsidersEnemies = 0x4e; // bool
		constexpr auto bConsidersSelf = 0x4f; // bool
	}

	namespace n_UKSWhatsNewPanel {
		constexpr auto Header = 0x80; // FText
		constexpr auto SubHeader = 0x98; // FText
		constexpr auto HeaderAlignment = 0xb0; // ENewsHeaderAlignment
		constexpr auto SubPanels = 0xb8; // TArray<FSubPanel>
		constexpr auto Alignment = 0xc8; // ESubPanelAlignment
		constexpr auto BgBoxOpacity = 0xcc; // int32_t
		constexpr auto Image = 0xd0; // UTexture2DDynamic*
		constexpr auto URL = 0xd8; // FString
	}

	namespace n_UPGame_EffectGroup {
		constexpr auto m_EffectGroupTypes = 0x28; // FGameplayTagContainer
		constexpr auto m_BehaviorCategories = 0x48; // FGameplayTagContainer
		constexpr auto m_Effects = 0x68; // TArray<UPGame_Effect*>
		constexpr auto m_AttachmentClass = 0x78; // UPGame_EffectAttachment*
	}

	namespace n_UARSessionConfig {
		constexpr auto bGenerateMeshDataFromTrackedGeometry = 0x30; // bool
		constexpr auto bGenerateCollisionForMeshData = 0x31; // bool
		constexpr auto bGenerateNavMeshForMeshData = 0x32; // bool
		constexpr auto bUseMeshDataForOcclusion = 0x33; // bool
		constexpr auto bRenderMeshDataInWireframe = 0x34; // bool
		constexpr auto bTrackSceneObjects = 0x35; // bool
		constexpr auto bUsePersonSegmentationForOcclusion = 0x36; // bool
		constexpr auto WorldAlignment = 0x37; // EARWorldAlignment
		constexpr auto SessionType = 0x38; // EARSessionType
		constexpr auto PlaneDetectionMode = 0x39; // EARPlaneDetectionMode
		constexpr auto bHorizontalPlaneDetection = 0x3a; // bool
		constexpr auto bVerticalPlaneDetection = 0x3b; // bool
		constexpr auto bEnableAutoFocus = 0x3c; // bool
		constexpr auto LightEstimationMode = 0x3d; // EARLightEstimationMode
		constexpr auto FrameSyncMode = 0x3e; // EARFrameSyncMode
		constexpr auto bEnableAutomaticCameraOverlay = 0x3f; // bool
		constexpr auto bEnableAutomaticCameraTracking = 0x40; // bool
		constexpr auto bResetCameraTracking = 0x41; // bool
		constexpr auto bResetTrackedObjects = 0x42; // bool
		constexpr auto CandidateImages = 0x48; // TArray<UARCandidateImage*>
		constexpr auto MaxNumSimultaneousImagesTracked = 0x58; // int32_t
		constexpr auto EnvironmentCaptureProbeType = 0x5c; // EAREnvironmentCaptureProbeType
		constexpr auto WorldMapData = 0x60; // TArray<char>
		constexpr auto CandidateObjects = 0x70; // TArray<UARCandidateObject*>
		constexpr auto DesiredVideoFormat = 0x80; // FARVideoFormat
		constexpr auto FaceTrackingDirection = 0x8c; // EARFaceTrackingDirection
		constexpr auto FaceTrackingUpdate = 0x8d; // EARFaceTrackingUpdate
		constexpr auto SerializedARCandidateImageDatabase = 0x90; // TArray<char>
		constexpr auto EnabledSessionTrackingFeature = 0xa0; // EARSessionTrackingFeature
	}

	namespace n_UGameplayTask_TimeLimitedExecution {
		constexpr auto OnFinished = 0x68; // FMulticastInlineDelegate
		constexpr auto OnTimeExpired = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UDropdown_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto hoveranim = 0x528; // UWidgetAnimation*
		constexpr auto DropArrow = 0x530; // UImage*
		constexpr auto DropdownAnchor = 0x538; // UMenuAnchor*
		constexpr auto DropDownBkg = 0x540; // UImage*
		constexpr auto HitTarget = 0x548; // UButton*
		constexpr auto SelectionText = 0x550; // UTextBlock*
		constexpr auto OnSelectionChanged = 0x558; // FMulticastInlineDelegate
		constexpr auto Options = 0x568; // TArray<FText>
		constexpr auto DefaultSelection = 0x578; // FText
		constexpr auto HoverIndex = 0x590; // int32_t
		constexpr auto SelectionIndex = 0x594; // int32_t
		constexpr auto HintText = 0x598; // FText
		constexpr auto IgnoreFirst = 0x5b0; // bool
		constexpr auto IgnoreCanceled = 0x5b1; // bool
		constexpr auto DropdownList = 0x5b8; // UDropdownList_C*
		constexpr auto ClickDropdownSFX = 0x5c0; // UAkAudioEvent*
		constexpr auto HoverDropdownSFX = 0x5c8; // UAkAudioEvent*
		constexpr auto OnHoverPreview = 0x5d0; // FMulticastInlineDelegate
		constexpr auto OnSelectionCanceled = 0x5e0; // FMulticastInlineDelegate
	}

	namespace n_UWBP_ProgressBar_C {
		constexpr auto BaseBar = 0x238; // UHorizontalBox*
		constexpr auto ProgressBarFill = 0x240; // UHorizontalBox*
	}

	namespace n_UAvoidanceManager {
		constexpr auto DefaultTimeToLive = 0x30; // float
		constexpr auto LockTimeAfterAvoid = 0x34; // float
		constexpr auto LockTimeAfterClean = 0x38; // float
		constexpr auto DeltaTimeToPredict = 0x3c; // float
		constexpr auto ArtificialRadiusExpansion = 0x40; // float
		constexpr auto TestHeightDifference = 0x44; // float
		constexpr auto HeightCheckMargin = 0x48; // float
	}

	namespace n_UWBP_Challenge_Rewards_Badge_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto NewAnimation = 0x528; // UWidgetAnimation*
		constexpr auto CurrencyDisplay = 0x530; // UVerticalBox*
		constexpr auto FrameSwitcher = 0x538; // UWidgetSwitcher*
		constexpr auto RewardImage = 0x540; // UKSAsyncImage*
		constexpr auto RewardQtyText = 0x548; // UTextBlock*
		constexpr auto RewardTypeSwitcher = 0x550; // UWidgetSwitcher*
		constexpr auto Root = 0x558; // UOverlay*
		constexpr auto SizeControl = 0x560; // USizeBox*
		constexpr auto WBP_KSCosmeticItemDisplay = 0x568; // UWBP_KSCosmeticItemDisplay_C*
		constexpr auto Wrapper = 0x570; // UOverlay*
		constexpr auto Quantity = 0x578; // int32_t
		constexpr auto SoftRewardItem = 0x580; // TSoftObjectPtr<UPlatformInventoryItem>
		constexpr auto IsCompletedState = 0x5a8; // bool
	}

	namespace n_UKSGameShopWidget {
		constexpr auto GameShopWeakPtr = 0x528; // TWeakObjectPtr<AKSGameShop>
		constexpr auto ShopItemComponentWidgetMap = 0x530; // TMap<UKSGameShopItemComponent*, TSoftClassPtr<UObject>>
		constexpr auto UndoButton = 0x580; // UButton*
	}

	namespace n_UWidgetNavigation {
		constexpr auto Up = 0x28; // FWidgetNavigationData
		constexpr auto Down = 0x4c; // FWidgetNavigationData
		constexpr auto Left = 0x70; // FWidgetNavigationData
		constexpr auto Right = 0x94; // FWidgetNavigationData
		constexpr auto Next = 0xb8; // FWidgetNavigationData
		constexpr auto Previous = 0xdc; // FWidgetNavigationData
	}

	namespace n_UWBP_SettingsMenu_C {
		constexpr auto UberGraphFrame = 0x548; // FPointerToUberGraphFrame
		constexpr auto BackHovered = 0x550; // UWidgetAnimation*
		constexpr auto RevertHovered = 0x558; // UWidgetAnimation*
		constexpr auto ApplyHovered = 0x560; // UWidgetAnimation*
		constexpr auto LeftTabCallout = 0x568; // UWBP_KeyCallout_C*
		constexpr auto NavTabBox = 0x570; // UHorizontalBox*
		constexpr auto PreviewContainer = 0x578; // UOverlay*
		constexpr auto RightTabCallout = 0x580; // UWBP_KeyCallout_C*
		constexpr auto SettingsDescription = 0x588; // UTextBlock*
		constexpr auto SettingsPageWidgetSwitcher = 0x590; // UWidgetSwitcher*
		constexpr auto SettingsTitle = 0x598; // UTextBlock*
		constexpr auto WBP_panel_bevel = 0x5a0; // UWBP_panel_bevel_C*
		constexpr auto WBP_subscreen_nav_tabs = 0x5a8; // TArray<UWBP_subscreen_nav_tab_C*>
		constexpr auto TopWidgets = 0x5b8; // TArray<UPUMG_Widget*>
		constexpr auto BottomWidgets = 0x5c8; // TArray<UPUMG_Widget*>
		constexpr auto Login State = 0x5d8; // EPUMG_LoginState
		constexpr auto TAB_LEFT_NAME = 0x5dc; // FName
		constexpr auto TAB_RIGHT_NAME = 0x5e4; // FName
		constexpr auto APPLY_NAME = 0x5ec; // FName
		constexpr auto RESTORE_NAME = 0x5f4; // FName
		constexpr auto WBP_SubScreens = 0x600; // TArray<UKSSettingsPage*>
		constexpr auto ESC_NAME = 0x610; // FName
		constexpr auto BackSettingsMenuSFX = 0x618; // UAkAudioEvent*
		constexpr auto RevertSettingsMenuSFX = 0x620; // UAkAudioEvent*
		constexpr auto ApplySettingsMenuSFX = 0x628; // UAkAudioEvent*
		constexpr auto PreviewWidgets = 0x630; // TArray<UKSWidget*>
		constexpr auto bContainsAnyKeyBindings = 0x640; // bool
	}

	namespace n_UKSPawnAction_StartFire {
		constexpr auto EquipPoint = 0xa0; // FGameplayTag
		constexpr auto bInfiniteAmmo = 0xa8; // bool
		constexpr auto PersistentAmmoCount = 0xac; // int32_t
	}

	namespace n_UAnimationSettings {
		constexpr auto CompressCommandletVersion = 0x38; // int32_t
		constexpr auto KeyEndEffectorsMatchNameArray = 0x40; // TArray<FString>
		constexpr auto ForceRecompression = 0x50; // bool
		constexpr auto bOnlyCheckForMissingSkeletalMeshes = 0x51; // bool
		constexpr auto bForceBelowThreshold = 0x52; // bool
		constexpr auto bFirstRecompressUsingCurrentOrDefault = 0x53; // bool
		constexpr auto bRaiseMaxErrorToExisting = 0x54; // bool
		constexpr auto bEnablePerformanceLog = 0x55; // bool
		constexpr auto bStripAnimationDataOnDedicatedServer = 0x56; // bool
		constexpr auto bTickAnimationOnSkeletalMeshInit = 0x57; // bool
	}

	namespace n_UKSBackfillRuleComponent {
		constexpr auto BackfillRequestTimeToLive = 0xe8; // float
		constexpr auto BackfillRequestOverlapTime = 0xec; // float
		constexpr auto BackfillRequestBatchDelay = 0xf0; // float
		constexpr auto BackfillRankingType = 0x100; // EKSBackfillRankingType
		constexpr auto bStartSealed = 0x101; // bool
		constexpr auto bDynamicSeal = 0x102; // bool
		constexpr auto DynamicSealInfo = 0x104; // FKSBackfillDynamicSealInfo
	}

	namespace n_UWBP_StoreItemRotator_C {
		constexpr auto ActiveTick = 0x520; // UTextBlock*
		constexpr auto Progress = 0x528; // UProgressBar*
		constexpr auto RotatorTickBox = 0x530; // UHorizontalBox*
		constexpr auto TickExample1 = 0x538; // UWBP_StoreRotatorTick_C*
		constexpr auto TickExample2 = 0x540; // UWBP_StoreRotatorTick_C*
		constexpr auto RotatorObjects = 0x548; // TArray<UWBP_StoreRotatorTick_C*>
		constexpr auto NumTicks = 0x558; // int32_t
	}

	namespace n_UHorizontalBoxSlot {
		constexpr auto Padding = 0x40; // FMargin
		constexpr auto Size = 0x50; // FSlateChildSize
		constexpr auto HorizontalAlignment = 0x58; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x59; // EVerticalAlignment
	}

	namespace n_UMaterialExpressionTextureLOD {
		constexpr auto Coordinates = 0x50; // FExpressionInput
		constexpr auto TextureObject = 0x64; // FExpressionInput
		constexpr auto SamplerSource = 0x78; // ESamplerSourceMode
		constexpr auto ConstCoordinate = 0x79; // char
	}

	namespace n_UEnvQueryGenerator_SimpleGrid {
		constexpr auto GridSize = 0x80; // FAIDataProviderFloatValue
		constexpr auto SpaceBetween = 0xb8; // FAIDataProviderFloatValue
		constexpr auto GenerateAround = 0xf0; // UEnvQueryContext*
	}

	namespace n_APUMG_HUD {
		constexpr auto OnInputStateChanged = 0x310; // FMulticastInlineDelegate
		constexpr auto PlayerDataUpdated = 0x320; // TMap<int64_t, FMulticastInlineDelegate>
		constexpr auto InputManager = 0x370; // UPUMG_InputManager*
		constexpr auto ViewManager = 0x378; // UPUMG_ViewManager*
		constexpr auto InputManagerClass = 0x380; // UPUMG_InputManager*
		constexpr auto SoundTheme = 0x388; // UPUMG_UISoundTheme*
	}

	namespace n_AKSGameState_RoundGame {
		constexpr auto RoundInfo = 0x19e8; // FReplicatedRoundInfo
		constexpr auto PreviousRoundInfo = 0x1a00; // FReplicatedRoundInfo
		constexpr auto RoundEndFadeOutAtMatchTime = 0x1a18; // float
		constexpr auto RoundEndFadeOutDelayTime = 0x1a1c; // float
		constexpr auto RoundEndFadeOutTime = 0x1a20; // float
		constexpr auto bUsingRoundDelayedGarbageCollection = 0x1a24; // bool
		constexpr auto OnRoundInfoChangedDel = 0x1a28; // FMulticastInlineDelegate
		constexpr auto RoundResult = 0x1a50; // FRoundResult
		constexpr auto AllRoundResults = 0x1a70; // TArray<FRoundResult>
		constexpr auto TotalRounds = 0x1a80; // int32_t
		constexpr auto RoundsToWin = 0x1a84; // int32_t
		constexpr auto OnTotalRoundsSet = 0x1a88; // FMulticastInlineDelegate
		constexpr auto OnRoundsToWinSet = 0x1a98; // FMulticastInlineDelegate
		constexpr auto RoundInitState = 0x1aa8; // FRoundInitState
		constexpr auto OnRoundSetupDel = 0x1ab8; // FMulticastInlineDelegate
		constexpr auto OnRoundStartDel = 0x1ae0; // FMulticastInlineDelegate
		constexpr auto OnRoundOverDel = 0x1b08; // FMulticastInlineDelegate
		constexpr auto CashPerWinningPlayer = 0x1b30; // int32_t
		constexpr auto ConsecutiveCashPerLosingPlayer = 0x1b38; // TArray<int32_t>
		constexpr auto RoundEndCamPreDeathDuration = 0x1b50; // float
		constexpr auto RoundEndCamPostDeathDuration = 0x1b54; // float
		constexpr auto RoundEndCamPreDeathDilation = 0x1b58; // float
		constexpr auto RoundEndCamTimeDilation = 0x1b5c; // float
		constexpr auto EndOfMatchKillCamDelay = 0x1b60; // float
	}

	namespace n_UMaterialExpressionTime {
		constexpr auto bIgnorePause = 0x40; // char : 1
		constexpr auto bOverride_Period = 0x40; // char : 1
		constexpr auto Period = 0x44; // float
	}

	namespace n_UMaterialExpressionTextureSampleParameter {
		constexpr auto ParameterName = 0xd0; // FName
		constexpr auto ExpressionGUID = 0xd8; // FGuid
		constexpr auto Group = 0xe8; // FName
	}

	namespace n_UKSModInst_WeaponSkinOverride {
		constexpr auto WeaponTypeSkinTables = 0x1b8; // TMap<FGameplayTag, FDataTableInfo>
		constexpr auto DefaultWeaponSkinTable = 0x208; // FDataTableInfo
		constexpr auto WeaponTypeSkinObjects = 0x280; // TMap<FGameplayTag, UMultiSkinObject*>
		constexpr auto DefaultWeaponSkinObject = 0x2d0; // UMultiSkinObject*
		constexpr auto AppliedWeaponComponents = 0x2d8; // TArray<TWeakObjectPtr<UKSWeaponComponent>>
	}

	namespace n_AReflectionCapture {
		constexpr auto CaptureComponent = 0x220; // UReflectionCaptureComponent*
	}

	namespace n_UPUMG_AsyncImage {
		constexpr auto WaitingWidget = 0x218; // UWidget*
		constexpr auto OnAsyncImageLoadStarted = 0x220; // FMulticastInlineDelegate
		constexpr auto OnAsyncImageLoadComplete = 0x230; // FMulticastInlineDelegate
		constexpr auto OnAsyncImageLoadCanceled = 0x240; // FMulticastInlineDelegate
		constexpr auto OnAsyncImageBrushChanged = 0x250; // FMulticastInlineDelegate
	}

	namespace n_UHudSettings {
		constexpr auto bShowHUD = 0x28; // char : 1
		constexpr auto DebugDisplay = 0x30; // TArray<FName>
	}

	namespace n_UMeshSelectionSet {
		constexpr auto Vertices = 0x40; // TArray<int32_t>
		constexpr auto Edges = 0x50; // TArray<int32_t>
		constexpr auto Faces = 0x60; // TArray<int32_t>
		constexpr auto Groups = 0x70; // TArray<int32_t>
	}

	namespace n_UKSSkeletalMeshComponent {
		constexpr auto bForceTextureResidentFlagOnAllTextures = 0xd50; // bool
		constexpr auto TeleportDistanceDeltaThreshold = 0xd68; // float
		constexpr auto bEnableDedicatedServerRequiredBones = 0xd88; // bool
		constexpr auto RequiredDedicatedServerBoneNames = 0xd90; // TArray<FName>
	}

	namespace n_UKSPlayerAmmoLoaderWidget {
		constexpr auto PendingAmmoWidgetClass = 0x538; // TSoftClassPtr<UObject>
		constexpr auto LoadedAmmoWidgetClass = 0x560; // UKSAmmoWidget*
	}

	namespace n_UMaterialExpressionRotateAboutAxis {
		constexpr auto NormalizedRotationAxis = 0x40; // FExpressionInput
		constexpr auto RotationAngle = 0x54; // FExpressionInput
		constexpr auto PivotPoint = 0x68; // FExpressionInput
		constexpr auto Position = 0x7c; // FExpressionInput
		constexpr auto Period = 0x90; // float
	}

	namespace n_AController {
		constexpr auto PlayerState = 0x228; // APlayerState*
		constexpr auto OnInstigatedAnyDamage = 0x238; // FMulticastInlineDelegate
		constexpr auto StateName = 0x248; // FName
		constexpr auto Pawn = 0x250; // APawn*
		constexpr auto Character = 0x260; // ACharacter*
		constexpr auto TransformComponent = 0x268; // USceneComponent*
		constexpr auto ControlRotation = 0x288; // FRotator
		constexpr auto bAttachToPawn = 0x294; // char : 1
	}

	namespace n_UKSFirstBloodTracker {
		constexpr auto RoundsWithFirstBloodEarned = 0xa0; // TSet<int32_t>
	}

	namespace n_UNetConnection {
		constexpr auto Children = 0x48; // TArray<UChildConnection*>
		constexpr auto Driver = 0x58; // UNetDriver*
		constexpr auto PackageMapClass = 0x60; // UPackageMap*
		constexpr auto PackageMap = 0x68; // UPackageMap*
		constexpr auto OpenChannels = 0x70; // TArray<UChannel*>
		constexpr auto SentTemporaries = 0x80; // TArray<AActor*>
		constexpr auto ViewTarget = 0x90; // AActor*
		constexpr auto OwningActor = 0x98; // AActor*
		constexpr auto MaxPacket = 0xa0; // int32_t
		constexpr auto InternalAck = 0xa4; // char : 1
		constexpr auto PlayerId = 0x160; // FUniqueNetIdRepl
		constexpr auto LastReceiveTime = 0x1d0; // double
		constexpr auto ChannelsToTick = 0x1510; // TArray<UChannel*>
	}

	namespace n_UCameraShake {
		constexpr auto bSingleInstance = 0x28; // char : 1
		constexpr auto OscillationDuration = 0x2c; // float
		constexpr auto OscillationBlendInTime = 0x30; // float
		constexpr auto OscillationBlendOutTime = 0x34; // float
		constexpr auto RotOscillation = 0x38; // FROscillator
		constexpr auto LocOscillation = 0x5c; // FVOscillator
		constexpr auto FOVOscillation = 0x80; // FFOscillator
		constexpr auto AnimPlayRate = 0x8c; // float
		constexpr auto AnimScale = 0x90; // float
		constexpr auto AnimBlendInTime = 0x94; // float
		constexpr auto AnimBlendOutTime = 0x98; // float
		constexpr auto RandomAnimSegmentDuration = 0x9c; // float
		constexpr auto Anim = 0xa0; // UCameraAnim*
		constexpr auto bRandomAnimSegment = 0xa8; // char : 1
		constexpr auto CameraOwner = 0xc0; // APlayerCameraManager*
		constexpr auto ShakeScale = 0x148; // float
		constexpr auto OscillatorTimeRemaining = 0x14c; // float
		constexpr auto AnimInst = 0x150; // UCameraAnimInst*
	}

	namespace n_UKSActivityProgress_ViewRedirector {
		constexpr auto ActivityProgressMilestone = 0x38; // TArray<int32_t>
		constexpr auto ActivityProgressMilestoneSetting = 0x48; // FString
		constexpr auto IncrementActivityProgressBeforeCheck = 0x58; // bool
	}

	namespace n_UAISubsystem {
		constexpr auto AISystem = 0x30; // UAISystem*
	}

	namespace n_UPoolableDecalComponent {
		constexpr auto OnDecalReturnedToPoolDelegate = 0x260; // FMulticastInlineDelegate
		constexpr auto bInUse = 0x270; // bool
	}

	namespace n_UKSEvent {
		constexpr auto EventTag = 0x250; // FName
		constexpr auto CanBeEquippedPostEvent = 0x258; // bool
		constexpr auto ActivityVendorIds = 0x260; // TArray<int32_t>
		constexpr auto ActivityRewardVendorIds = 0x270; // TArray<int32_t>
		constexpr auto OwnershipItemId = 0x280; // int32_t
	}

	namespace n_UAkCallbackInfo {
		constexpr auto AkComponent = 0x28; // UAkComponent*
	}

	namespace n_ULevelStreamingLightingScenario {
		constexpr auto LightingScenarioQuality = 0x150; // ELightingScenarioQuality
		constexpr auto bDataIsStripped = 0x151; // bool
	}

	namespace n_AKSHUDCommon {
		constexpr auto OnPreferredSiteUpdated = 0x5a0; // FMulticastInlineDelegate
		constexpr auto LoginDataFactory = 0x5b0; // UPUMG_LoginDataFactory*
		constexpr auto SettingsFactory = 0x5b8; // UKSSettingsDataFactory*
		constexpr auto ChatDataFactory = 0x5c0; // UKSChatDataFactory*
		constexpr auto PartyDataFactory = 0x5c8; // UKSPartyDataFactory*
		constexpr auto NPEDataFactory = 0x5d0; // UKSNPEDataFactory*
		constexpr auto PlayerDataFactory = 0x5d8; // UKSPlayerDataFactory*
		constexpr auto bDisplayWatermark = 0x5e0; // bool
		constexpr auto WatermarkAlpha = 0x5e4; // float
		constexpr auto WatermarkOffsetLeft = 0x5e8; // float
		constexpr auto WatermarkOffsetTop = 0x5ec; // float
		constexpr auto WatermarkOffsetRight = 0x5f0; // float
		constexpr auto WatermarkOffsetBottom = 0x5f4; // float
		constexpr auto WatermarkChangePositionTime = 0x5f8; // float
		constexpr auto ColorPaletteDT = 0x600; // UDataTable*
		constexpr auto FontPaletteDT = 0x608; // UDataTable*
		constexpr auto CrosshairColorOptions = 0x610; // UKSSettingsColorOptionsAsset*
	}

	namespace n_UKSSettingsInfo_MobilePerformanceMode {
		constexpr auto MobilePerformanceOptions = 0x108; // TArray<FKSMobilePerformanceOptions>
	}

	namespace n_UPreviewActorLoadoutComponentDirect {
		constexpr auto CurrentJob = 0xb8; // UKSJobItem*
		constexpr auto CurrentSkin = 0xc0; // UKSSkinBundle*
		constexpr auto SkinMap = 0xc8; // TMap<UKSItem*, UKSItem*>
	}

	namespace n_UFoliageType_Actor {
		constexpr auto ActorClass = 0x360; // AActor*
		constexpr auto bShouldAttachToBaseComponent = 0x368; // bool
	}

	namespace n_USub_Hero_ABP_Swimming_C {
		constexpr auto AnimGraphNode_Root = 0x10f0; // FAnimNode_Root
		constexpr auto AnimGraphNode_TransitionResult_37 = 0x1130; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_36 = 0x1168; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_35 = 0x11a0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_34 = 0x11d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_33 = 0x1210; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_32 = 0x1248; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_31 = 0x1280; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_30 = 0x12b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_29 = 0x12f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_28 = 0x1328; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_27 = 0x1360; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_26 = 0x1398; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_25 = 0x13d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_24 = 0x1408; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_23 = 0x1440; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_22 = 0x1478; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_21 = 0x14b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_20 = 0x14e8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_19 = 0x1520; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_18 = 0x1558; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_17 = 0x1590; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_16 = 0x15c8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_15 = 0x1600; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_14 = 0x1638; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_13 = 0x1670; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_12 = 0x16a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_11 = 0x16e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_10 = 0x1718; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_9 = 0x1750; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_8 = 0x1788; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_7 = 0x17c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_6 = 0x17f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_5 = 0x1830; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_4 = 0x1868; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_3 = 0x18a0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x18d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult = 0x1910; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequenceSkinned_13 = 0x1948; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_13 = 0x1aa8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_9 = 0x1b30; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequenceSkinned_12 = 0x1b70; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_11 = 0x1cd0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_10 = 0x1e30; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_9 = 0x1f90; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_12 = 0x20f0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt_2 = 0x2178; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_SequencePlayer_11 = 0x2228; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_10 = 0x22b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt = 0x2338; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_SequencePlayer_9 = 0x23e8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_11 = 0x2470; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_8 = 0x2520; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequenceSkinned_8 = 0x2560; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_7 = 0x26c0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_BlendSpaceSkinned_6 = 0x2820; // FAnimNode_BlendSpacePlayerSkinned
		constexpr auto AnimGraphNode_BlendSpacePlayer_6 = 0x2a20; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_8 = 0x2b10; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_10 = 0x2b98; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_9 = 0x2c48; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_7 = 0x2cf8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_7 = 0x2d80; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequenceEvaluator_2 = 0x2dc0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator = 0x2e18; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByBool_8 = 0x2e70; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_6 = 0x2f20; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpaceSkinned_5 = 0x2f60; // FAnimNode_BlendSpacePlayerSkinned
		constexpr auto AnimGraphNode_BlendSpaceSkinned_4 = 0x3160; // FAnimNode_BlendSpacePlayerSkinned
		constexpr auto AnimGraphNode_BlendSpacePlayer_5 = 0x3360; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_7 = 0x3450; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_4 = 0x3500; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_5 = 0x35f0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequenceSkinned_6 = 0x3630; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_5 = 0x3790; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_4 = 0x38f0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_3 = 0x3a50; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_BlendSpaceSkinned_3 = 0x3bb0; // FAnimNode_BlendSpacePlayerSkinned
		constexpr auto AnimGraphNode_SequencePlayer_6 = 0x3db0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0x3e38; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x3ec0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x3f48; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum = 0x3fd0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_6 = 0x4090; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_3 = 0x4140; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_4 = 0x4230; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpaceSkinned_2 = 0x4270; // FAnimNode_BlendSpacePlayerSkinned
		constexpr auto AnimGraphNode_BlendSpaceSkinned = 0x4470; // FAnimNode_BlendSpacePlayerSkinned
		constexpr auto AnimGraphNode_BlendSpacePlayer_2 = 0x4670; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_5 = 0x4760; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer = 0x4810; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_3 = 0x4900; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequenceSkinned_2 = 0x4940; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned = 0x4aa0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x4c00; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_RandomPlayer = 0x4c88; // FAnimNode_RandomPlayer
		constexpr auto AnimGraphNode_BlendListByBool_4 = 0x4d10; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_2 = 0x4dc0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_2 = 0x4e00; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SequencePlayer = 0x4ec0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult = 0x4f48; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x4f88; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_BlendListByBool_3 = 0x5048; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x50f8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x51a8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x51d8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ModifyBone = 0x5208; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_BlendListByBool = 0x5320; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_AimOffsetSkinned = 0x53d0; // FAnimNode_AimOffsetSkinned
		constexpr auto AnimGraphNode_SaveCachedPose = 0x5590; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_3 = 0x5658; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0x5690; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose = 0x56c8; // FAnimNode_UseCachedPose
		constexpr auto MaxMantleHt = 0x5700; // float
		constexpr auto Max2StoryMantleHt = 0x5704; // float
		constexpr auto StringMantlesTogether = 0x5708; // bool
		constexpr auto Start Swim Moving = 0x5710; // UAnimSequenceBase*
		constexpr auto Start Swim Moving B = 0x5718; // UAnimSequenceBase*
		constexpr auto Start Swim Moving A = 0x5720; // UAnimSequenceBase*
		constexpr auto Cached Angle = 0x5728; // float
		constexpr auto Stop Swim Moving A = 0x5730; // UAnimSequenceBase*
		constexpr auto Stop Swim Moving B = 0x5738; // UAnimSequenceBase*
		constexpr auto Stop Swim Moving = 0x5740; // UAnimSequenceBase*
		constexpr auto Cached Stop Angle = 0x5748; // float
		constexpr auto locoStartDir = 0x574c; // EKSMovementDirection
		constexpr auto locoStopDir = 0x574d; // EKSMovementDirection
		constexpr auto TurnVal = 0x5750; // int32_t
		constexpr auto Transition_Downed = 0x5754; // bool
		constexpr auto Transition_Pivot = 0x5755; // bool
		constexpr auto IsFallingToWater = 0x5756; // bool
		constexpr auto Replace with code = 0x5758; // FVector
		constexpr auto Character = 0x5768; // AKSCharacter*
		constexpr auto Transition State Lock = 0x5770; // bool
		constexpr auto CallFunc_BreakRotator_Roll = 0x5774; // float
		constexpr auto CallFunc_BreakRotator_Pitch = 0x5778; // float
		constexpr auto CallFunc_BreakRotator_Yaw = 0x577c; // float
		constexpr auto CallFunc_BreakRotator_Roll_2 = 0x5780; // float
		constexpr auto CallFunc_BreakRotator_Pitch_2 = 0x5784; // float
		constexpr auto CallFunc_BreakRotator_Yaw_2 = 0x5788; // float
		constexpr auto CallFunc_BreakRotator_Roll_3 = 0x578c; // float
		constexpr auto CallFunc_BreakRotator_Pitch_3 = 0x5790; // float
		constexpr auto CallFunc_BreakRotator_Yaw_3 = 0x5794; // float
		constexpr auto CallFunc_BreakRotator_Roll_4 = 0x5798; // float
		constexpr auto CallFunc_BreakRotator_Pitch_4 = 0x579c; // float
		constexpr auto CallFunc_BreakRotator_Yaw_4 = 0x57a0; // float
		constexpr auto CallFunc_BreakRotator_Roll_5 = 0x57a4; // float
		constexpr auto CallFunc_BreakRotator_Pitch_5 = 0x57a8; // float
		constexpr auto CallFunc_BreakRotator_Yaw_5 = 0x57ac; // float
		constexpr auto CallFunc_BreakVector_X = 0x57b0; // float
		constexpr auto CallFunc_BreakVector_Y = 0x57b4; // float
		constexpr auto CallFunc_BreakVector_Z = 0x57b8; // float
		constexpr auto CallFunc_BreakRotator_Roll_6 = 0x57bc; // float
		constexpr auto CallFunc_BreakRotator_Pitch_6 = 0x57c0; // float
		constexpr auto CallFunc_BreakRotator_Yaw_6 = 0x57c4; // float
		constexpr auto Temp_bool_Variable = 0x57c8; // bool
		constexpr auto K2Node_Select_Default = 0x57cc; // FVector
		constexpr auto CallFunc_BreakVector_X_2 = 0x57d8; // float
		constexpr auto CallFunc_BreakVector_Y_2 = 0x57dc; // float
		constexpr auto CallFunc_BreakVector_Z_2 = 0x57e0; // float
		constexpr auto Temp_bool_Variable_2 = 0x57e4; // bool
		constexpr auto K2Node_Select_Default_2 = 0x57e8; // FVector
		constexpr auto Temp_bool_Variable_3 = 0x57f4; // bool
		constexpr auto Temp_bool_Variable_4 = 0x57f5; // bool
		constexpr auto K2Node_Select_Default_3 = 0x57f8; // FVector
		constexpr auto K2Node_Event_DeltaTimeX = 0x5804; // float
		constexpr auto K2Node_Select_Default_4 = 0x5808; // FVector
		constexpr auto K2Node_Event_StartLocation = 0x5814; // FVector
		constexpr auto CallFunc_BreakVector_X_3 = 0x5820; // float
		constexpr auto CallFunc_BreakVector_Y_3 = 0x5824; // float
		constexpr auto CallFunc_BreakVector_Z_3 = 0x5828; // float
		constexpr auto K2Node_Event_StopLocation = 0x582c; // FVector
		constexpr auto K2Node_Event_AnimationVariant = 0x5838; // EKSTurnInPlaceAnimationVariant
		constexpr auto K2Node_Event_DelayTime = 0x583c; // float
		constexpr auto K2Node_SwitchEnum_CmpSuccess = 0x5840; // bool
		constexpr auto K2Node_DynamicCast_AsKSCharacter = 0x5848; // AKSCharacter*
		constexpr auto K2Node_DynamicCast_bSuccess = 0x5850; // bool
		constexpr auto K2Node_Event_PivotLocation = 0x5854; // FVector
		constexpr auto K2Node_Event_bShouldLock = 0x5860; // bool
	}

	namespace n_ULiveLinkPreset {
		constexpr auto Sources = 0x28; // TArray<FLiveLinkSourcePreset>
		constexpr auto Subjects = 0x38; // TArray<FLiveLinkSubjectPreset>
	}

	namespace n_UParticleModuleLocationEmitterDirect {
		constexpr auto EmitterName = 0x30; // FName
	}

	namespace n_UKSEnvQueryTest_CharacterTrace {
		constexpr auto TraceData = 0x1f8; // FEnvTraceData
		constexpr auto TraceFromContext = 0x228; // FAIDataProviderBoolValue
		constexpr auto ItemHeightOffset = 0x260; // FAIDataProviderFloatValue
		constexpr auto ContextHeightOffset = 0x298; // FAIDataProviderFloatValue
		constexpr auto Context = 0x2d0; // UEnvQueryContext*
	}

	namespace n_UKSActivityRequirement_MapTag {
		constexpr auto RequiredMapTag = 0x30; // FGameplayTag
	}

	namespace n_UKSWeaponAnimInstance {
		constexpr auto m_bIsReloading = 0x330; // bool
		constexpr auto m_fIKAlpha = 0x334; // float
		constexpr auto m_fIKBlendInTime = 0x338; // float
		constexpr auto m_fIKBlendOutTime = 0x33c; // float
		constexpr auto m_vADSOffset = 0x340; // FVector
		constexpr auto m_bIsMoving = 0x34c; // bool
		constexpr auto m_fMovingAlpha = 0x350; // float
		constexpr auto m_nFireImpulseCounter = 0x354; // int32_t
		constexpr auto m_bFireImpulse = 0x358; // bool
		constexpr auto m_fADSAlpha = 0x35c; // float
		constexpr auto m_bIsSprinting = 0x360; // bool
		constexpr auto m_fLeadingPitch = 0x364; // float
		constexpr auto m_fLeadingYaw = 0x368; // float
		constexpr auto m_fLeadingPitchADS = 0x36c; // float
		constexpr auto m_fLeadingYawADS = 0x370; // float
		constexpr auto LeadingPitch = 0x374; // FWeaponLeadingInfo
		constexpr auto LeadingYaw = 0x384; // FWeaponLeadingInfo
		constexpr auto LeadingPitchADS = 0x394; // FWeaponLeadingInfo
		constexpr auto LeadingYawADS = 0x3a4; // FWeaponLeadingInfo
		constexpr auto m_LandImpulseCounter = 0x3c0; // int32_t
		constexpr auto m_JumpImpulseCounter = 0x3c4; // int32_t
		constexpr auto m_bFoldIronSights = 0x3c8; // bool
		constexpr auto WeaponAnimIndex = 0x3cc; // int32_t
		constexpr auto bPlayerCrouching = 0x3d0; // bool
		constexpr auto TempPhoneFlip = 0x3d4; // float
		constexpr auto TargetBarrelRotation = 0x3d8; // FRotator
		constexpr auto bEnableBarrelRotation = 0x3e4; // bool
		constexpr auto bEnableRogueSelectPose = 0x3e5; // bool
		constexpr auto bEnableWalkInPose = 0x3e6; // bool
		constexpr auto bNeedsWalkInStartTime = 0x3e7; // bool
		constexpr auto WalkInStartTime = 0x3e8; // float
	}

	namespace n_UInAppPurchaseQueryCallbackProxy {
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UDropdownList_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto ClickBlocker = 0x528; // UButton*
		constexpr auto DropdownScroll = 0x530; // UScrollBox*
		constexpr auto SizeBox_1 = 0x538; // USizeBox*
		constexpr auto Options = 0x540; // TArray<FText>
		constexpr auto OnSelection = 0x550; // FMulticastInlineDelegate
		constexpr auto OnCancel = 0x560; // FMulticastInlineDelegate
		constexpr auto DropdownEntries = 0x570; // TArray<UDropdownEntry_C*>
		constexpr auto SelectedEntry = 0x580; // UDropdownEntry_C*
		constexpr auto SizeBoxMaxHeight = 0x588; // float
		constexpr auto OnHoverPreview = 0x590; // FMulticastInlineDelegate
	}

	namespace n_UWBP_VoiceActivityContainer_C {
		constexpr auto Content = 0x590; // UNamedSlot*
	}

	namespace n_UKSWeaponAttachment_QuickMag {
		constexpr auto ReloadPeriodMultiplier = 0x2f8; // float
	}

	namespace n_ULoggedInInventoryCheck_C {
		constexpr auto UberGraphFrame = 0x538; // FPointerToUberGraphFrame
		constexpr auto background = 0x540; // UImage*
		constexpr auto DisconnectButton = 0x548; // UWBP_StandardButtonMedium_C*
		constexpr auto DisconnectPrompt = 0x550; // UGamepadPromptBasic_C*
		constexpr auto LoadingBar = 0x558; // UProgressBar*
		constexpr auto PromptSwitcher = 0x560; // UWidgetSwitcher*
		constexpr auto WBP_EpilepsyWarning = 0x568; // UWBP_EpilepsyWarning_C*
		constexpr auto WBP_ThrobberShield = 0x570; // UWBP_ThrobberShield_C*
		constexpr auto CurrentProgress = 0x578; // float
		constexpr auto CurrentSeconds = 0x57c; // float
	}

	namespace n_USynthSound {
		constexpr auto OwningSynthComponent = 0x360; // USynthComponent*
	}

	namespace n_USourceEffectPannerPreset {
		constexpr auto Settings = 0x70; // FSourceEffectPannerSettings
	}

	namespace n_UBoxReflectionCaptureComponent {
		constexpr auto BoxTransitionDistance = 0x280; // float
		constexpr auto PreviewInfluenceBox = 0x288; // UBoxComponent*
		constexpr auto PreviewCaptureBox = 0x290; // UBoxComponent*
	}

	namespace n_UWBP_Daily_Challenge_Timer_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto ContractTimer = 0x528; // UTextBlock*
		constexpr auto NextChallengeSwitcher = 0x530; // UWidgetSwitcher*
		constexpr auto CachedSecondsRemaining = 0x538; // float
		constexpr auto CachedRealTimeSeconds = 0x53c; // float
	}

	namespace n_UWBP_WeaponMasteryLevelTracker_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto AnimOnLevelUp = 0x528; // UWidgetAnimation*
		constexpr auto AltDescText = 0x530; // UTextBlock*
		constexpr auto CanvasPanel = 0x538; // UCanvasPanel*
		constexpr auto GlitchOverlay = 0x540; // UImage*
		constexpr auto Icon_2 = 0x548; // UScaleBox*
		constexpr auto IconMasteryPoints_2 = 0x550; // UImage*
		constexpr auto Image = 0x558; // UImage*
		constexpr auto Image_156 = 0x560; // UImage*
		constexpr auto Image_162 = 0x568; // UImage*
		constexpr auto LevelRewardWrapper = 0x570; // USizeBox*
		constexpr auto LevelUpText = 0x578; // UTextBlock*
		constexpr auto MasteryPointsTextSmall_2 = 0x580; // UTextBlock*
		constexpr auto MasteryRewardCalloutWrapper = 0x588; // UVerticalBox*
		constexpr auto NextRewardLabel = 0x590; // UTextBlock*
		constexpr auto PageTitle = 0x598; // UVerticalBox*
		constexpr auto PageTitle_2 = 0x5a0; // UVerticalBox*
		constexpr auto ProgressGroup = 0x5a8; // UVerticalBox*
		constexpr auto ProgressGroupSwitcher = 0x5b0; // UWidgetSwitcher*
		constexpr auto ProgressInfoSwitcher = 0x5b8; // UWidgetSwitcher*
		constexpr auto RewardShimmer = 0x5c0; // UImage*
		constexpr auto Tooltip = 0x5c8; // UHorizontalBox*
		constexpr auto WBP_KSCosmeticItemDisplay_3 = 0x5d0; // UWBP_KSCosmeticItemDisplay_C*
		constexpr auto WBP_WeaponMasteryBadgeLarge = 0x5d8; // UWBP_WeaponMasteryBadgeLarge_C*
		constexpr auto WeaponCategoryText_2 = 0x5e0; // UTextBlock*
		constexpr auto WeaponMasteryBadgeWrapper = 0x5e8; // USizeBox*
		constexpr auto WeaponNameText = 0x5f0; // UTextBlock*
		constexpr auto WeaponNameText_2 = 0x5f8; // UTextBlock*
		constexpr auto XPBar = 0x600; // UWBP_ProgressEarnedBar_C*
		constexpr auto XPBarShimmer = 0x608; // UImage*
		constexpr auto XPCount = 0x610; // UTextBlock*
		constexpr auto XPCountWrapper = 0x618; // UHorizontalBox*
	}

	namespace n_UKSActorRangeEvaluator {
		constexpr auto OriginActor = 0x40; // TWeakObjectPtr<AActor>
	}

	namespace n_UPlatformInventoryItem {
		constexpr auto ItemId = 0x30; // int32_t
		constexpr auto ItemDisplayName = 0x38; // FText
		constexpr auto ItemDescription = 0x50; // FText
		constexpr auto FriendlySearchName = 0x68; // FString
		constexpr auto IsOwnableInventoryItem = 0x78; // bool
		constexpr auto DisplayableLootIds = 0x80; // TArray<int64_t>
		constexpr auto ItemIcon = 0x90; // TSoftObjectPtr<UTexture2D>
		constexpr auto ItemIconPath = 0xb8; // FSoftObjectPath
		constexpr auto LegacyItemIconTexture = 0xd0; // TSoftObjectPtr<UTexture2D>
		constexpr auto Icons = 0xf8; // TArray<FIconReference>
		constexpr auto CollectionContainer = 0x108; // FGameplayTagContainer
		constexpr auto ExternalProductSkus = 0x128; // TMap<EExternalSkuSource, FString>
		constexpr auto OnlyDisplayAcqusitionIfWhitelisted = 0x178; // bool
		constexpr auto BlackListedLootIds = 0x180; // TArray<int64_t>
	}

	namespace n_USourceEffectBitCrusherPreset {
		constexpr auto Settings = 0x70; // FSourceEffectBitCrusherSettings
	}

	namespace n_UNiagaraDataInterfaceVolumeTexture {
		constexpr auto Texture = 0x30; // UVolumeTexture*
	}

	namespace n_UKSRocketMovementComponent {
		constexpr auto MaxSpeed = 0x680; // float
		constexpr auto RocketAcceleration = 0x684; // float
		constexpr auto RocketIgniteTime = 0x688; // float
		constexpr auto RocketRotationCatchUpDegrees = 0x68c; // float
		constexpr auto bSmoothRotation = 0x690; // bool
		constexpr auto OnIgnitionKickoff = 0x698; // FMulticastInlineDelegate
		constexpr auto OnRocketStop = 0x6a8; // FMulticastInlineDelegate
	}

	namespace n_UMovieSceneActorReferenceSection {
		constexpr auto ActorReferenceData = 0xe0; // FMovieSceneActorReferenceData
		constexpr auto ActorGuidIndexCurve = 0x190; // FIntegralCurve
		constexpr auto ActorGuidStrings = 0x210; // TArray<FString>
	}

	namespace n_UMaterialExpressionNormalize {
		constexpr auto VectorInput = 0x40; // FExpressionInput
	}

	namespace n_USubmixEffectConvolutionReverbPreset {
		constexpr auto Settings = 0x40; // FSubmixEffectConvolutionReverbSettings
		constexpr auto ImpulseResponse = 0x60; // UAudioImpulseResponse*
		constexpr auto BlockSize = 0x68; // ESubmixEffectConvolutionReverbBlockSize
		constexpr auto bEnableHardwareAcceleration = 0x69; // bool
	}

	namespace n_UAkGeometryComponent {
		constexpr auto MeshType = 0x208; // AkMeshType
		constexpr auto LOD = 0x20c; // int32_t
		constexpr auto StaticMeshSurfaceOverride = 0x210; // TMap<UMaterialInterface*, FAkGeometrySurfaceOverride>
		constexpr auto CollisionMeshSurfaceOverride = 0x260; // FAkGeometrySurfaceOverride
		constexpr auto bEnableDiffraction = 0x270; // char : 1
		constexpr auto bEnableDiffractionOnBoundaryEdges = 0x270; // char : 1
		constexpr auto AssociatedRoom = 0x278; // AActor*
		constexpr auto GeometryData = 0x288; // FAkGeometryData
	}

	namespace n_UAnimSequenceBase {
		constexpr auto Notifies = 0x80; // TArray<FAnimNotifyEvent>
		constexpr auto SequenceLength = 0x90; // float
		constexpr auto RateScale = 0x94; // float
		constexpr auto RawCurveData = 0x98; // FRawCurveTracks
	}

	namespace n_UKSMatchDataRecorder {
		constexpr auto MatchRecord = 0x28; // FMatchRecord
		constexpr auto InProgressWeaponSummaries = 0x2b0; // TMap<uint64_t, FWeaponUseSummaryRecord>
	}

	namespace n_UVRNotificationsComponent {
		constexpr auto HMDTrackingInitializingAndNeedsHMDToBeTrackedDelegate = 0xb0; // FMulticastInlineDelegate
		constexpr auto HMDTrackingInitializedDelegate = 0xc0; // FMulticastInlineDelegate
		constexpr auto HMDRecenteredDelegate = 0xd0; // FMulticastInlineDelegate
		constexpr auto HMDLostDelegate = 0xe0; // FMulticastInlineDelegate
		constexpr auto HMDReconnectedDelegate = 0xf0; // FMulticastInlineDelegate
		constexpr auto HMDConnectCanceledDelegate = 0x100; // FMulticastInlineDelegate
		constexpr auto HMDPutOnHeadDelegate = 0x110; // FMulticastInlineDelegate
		constexpr auto HMDRemovedFromHeadDelegate = 0x120; // FMulticastInlineDelegate
		constexpr auto VRControllerRecenteredDelegate = 0x130; // FMulticastInlineDelegate
	}

	namespace n_APGame_WorldSettings {
		constexpr auto ActorsToAlwaysSpawn = 0x3a0; // TArray<AActor*>
		constexpr auto HighMemorySublevelSuffixes = 0x3b0; // TArray<FString>
		constexpr auto LowMemorySublevelSuffixes = 0x3c0; // TArray<FString>
	}

	namespace n_UAISenseEvent_Hearing {
		constexpr auto Event = 0x28; // FAINoiseEvent
	}

	namespace n_UMovieSceneFolder {
		constexpr auto FolderName = 0x28; // FName
		constexpr auto ChildFolders = 0x30; // TArray<UMovieSceneFolder*>
		constexpr auto ChildMasterTracks = 0x40; // TArray<UMovieSceneTrack*>
		constexpr auto ChildObjectBindingStrings = 0x50; // TArray<FString>
	}

	namespace n_UMaterialExpressionShaderStageSwitch {
		constexpr auto PixelShader = 0x40; // FExpressionInput
		constexpr auto VertexShader = 0x54; // FExpressionInput
	}

	namespace n_UKSBTTask_SkydiveToward {
		constexpr auto TargetSkydiveLocation = 0xd0; // FBlackboardKeySelector
		constexpr auto BlendStartDistance = 0xf8; // float
		constexpr auto BlendEndDistance = 0xfc; // float
	}

	namespace n_ADroppedMagazine_C {
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto StaticMesh = 0x228; // UStaticMeshComponent*
		constexpr auto SkeletalMesh = 0x230; // USkeletalMeshComponent*
		constexpr auto Collision = 0x238; // UBoxComponent*
	}

	namespace n_UDatasmithStaticMeshTemplate {
		constexpr auto SectionInfoMap = 0x30; // FDatasmithMeshSectionInfoMapTemplate
		constexpr auto LightMapCoordinateIndex = 0x80; // int32_t
		constexpr auto LightMapResolution = 0x84; // int32_t
		constexpr auto BuildSettings = 0x88; // TArray<FDatasmithMeshBuildSettingsTemplate>
		constexpr auto StaticMaterials = 0x98; // TArray<FDatasmithStaticMaterialTemplate>
	}

	namespace n_UWBP_Acquisition_C {
		constexpr auto UberGraphFrame = 0x578; // FPointerToUberGraphFrame
		constexpr auto OnShow = 0x580; // UWidgetAnimation*
		constexpr auto AcquireTypeHeader = 0x588; // UWBP_Header1_C*
		constexpr auto BundleContents = 0x590; // UWrapBox*
		constexpr auto Contents = 0x598; // UScrollBox*
		constexpr auto ItemInfoContainer = 0x5a0; // UWBP_ItemInfoContainer_Centered_C*
		constexpr auto UnlockedItemText = 0x5a8; // UTextBlock*
		constexpr auto WBP_ItemPreviewStack = 0x5b0; // UWBP_ItemPreviewStack_C*
		constexpr auto StoreItem = 0x5b8; // UPUMG_StoreItem*
		constexpr auto AcquisitionItemWidgets = 0x5c0; // TArray<UWBP_KSCosmeticItemDisplay_C*>
		constexpr auto IsBundleAcquisition = 0x5d0; // bool
		constexpr auto ShowAcquisitionSFX = 0x5d8; // UAkAudioEvent*
		constexpr auto CurrentSkin = 0x5e0; // UKSSkinBundle*
		constexpr auto CurrentCharacterJob = 0x5e8; // UKSJobItem*
		constexpr auto PreviewActor = 0x5f0; // AKSJobSelectPrvwActor_RogueScrn*
		constexpr auto PurchaseAcquisitionConfirmedSFX = 0x5f8; // UAkAudioEvent*
	}

	namespace n_UWBP_BattlePassRewardsScreen_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto Outro = 0x528; // UWidgetAnimation*
		constexpr auto Intro = 0x530; // UWidgetAnimation*
		constexpr auto Image_221 = 0x538; // UImage*
		constexpr auto ItemPreviewStack = 0x540; // UWBP_ItemPreviewStack_C*
		constexpr auto ReflectedgradientShade = 0x548; // UImage*
		constexpr auto WBP_BattlePassLevelPurchase = 0x550; // UWBP_BattlePassLevelPurchase_C*
		constexpr auto WBP_BattlePassTitle = 0x558; // UWBP_BattlePassTitle_C*
		constexpr auto WBP_BattlePassUpsellPanel = 0x560; // UWBP_BattlePassUpsellPanel_C*
		constexpr auto WBP_Header3 = 0x568; // UWBP_Header3_C*
		constexpr auto WBP_ItemInfoContainer_Description = 0x570; // UWBP_ItemInfoContainer_Description_C*
		constexpr auto WBP_RewardsTrack = 0x578; // UWBP_RewardsTrack_C*
		constexpr auto WBP_SeasonalChallengePanel = 0x580; // UWBP_SeasonalChallengePanel_C*
		constexpr auto ActivityInstance = 0x588; // UKSActivityInstance*
		constexpr auto SelectedEntry = 0x590; // UWBP_RewardListEntry_C*
		constexpr auto SelectedData = 0x598; // UPUMG_StoreItem*
	}

	namespace n_UBaseMediaSource {
		constexpr auto PlayerName = 0x80; // FName
	}

	namespace n_UParticleChannelContainerWrapper {
		constexpr auto Channels = 0x28; // FParticleChannelContainer
	}

	namespace n_UNiagaraComponent {
		constexpr auto Asset = 0x430; // UNiagaraSystem*
		constexpr auto TickBehavior = 0x438; // ENiagaraTickBehavior
		constexpr auto OverrideParameters = 0x440; // FNiagaraUserRedirectionParameterStore
		constexpr auto bForceSolo = 0x548; // char : 1
		constexpr auto bAutoDestroy = 0x574; // char : 1
		constexpr auto bRenderingEnabled = 0x574; // char : 1
		constexpr auto bAutoManageAttachment = 0x574; // char : 1
		constexpr auto bAutoAttachWeldSimulatedBodies = 0x574; // char : 1
		constexpr auto MaxTimeBeforeForceUpdateTransform = 0x578; // float
		constexpr auto OnSystemFinished = 0x580; // FMulticastInlineDelegate
		constexpr auto AutoAttachParent = 0x590; // TWeakObjectPtr<USceneComponent>
		constexpr auto AutoAttachSocketName = 0x598; // FName
		constexpr auto AutoAttachLocationRule = 0x5a0; // EAttachmentRule
		constexpr auto AutoAttachRotationRule = 0x5a1; // EAttachmentRule
		constexpr auto AutoAttachScaleRule = 0x5a2; // EAttachmentRule
		constexpr auto bRenderAfterDLSS = 0x5a3; // char : 1
	}

	namespace n_UEnvQueryTest_Overlap {
		constexpr auto OverlapData = 0x1f8; // FEnvOverlapData
	}

	namespace n_UKSBTAbilityConditionValidator {
		constexpr auto bShouldUsePerceptionFilter = 0x30; // bool
		constexpr auto SensesToUse = 0x38; // TArray<UAISense*>
		constexpr auto PerceptionFilter = 0x48; // FKSPerceptionFilter
		constexpr auto MinPerceivedStimuliCount = 0x238; // int32_t
		constexpr auto bCheckCombatTarget = 0x23c; // bool
		constexpr auto bCheckTargetVisible = 0x23d; // bool
		constexpr auto bCheckTargetHidden = 0x23e; // bool
		constexpr auto bCheckDistance = 0x23f; // bool
		constexpr auto MinDistanceMeters = 0x240; // float
		constexpr auto MaxDistanceMeters = 0x244; // float
	}

	namespace n_UParticleModuleAttractorPoint {
		constexpr auto Position = 0x30; // FRawDistributionVector
		constexpr auto Range = 0x78; // FRawDistributionFloat
		constexpr auto Strength = 0xa8; // FRawDistributionFloat
		constexpr auto StrengthByDistance = 0xd8; // char : 1
		constexpr auto bAffectBaseVelocity = 0xd8; // char : 1
		constexpr auto bOverrideVelocity = 0xd8; // char : 1
		constexpr auto bUseWorldSpacePosition = 0xd8; // char : 1
		constexpr auto Positive_X = 0xd8; // char : 1
		constexpr auto Positive_Y = 0xd8; // char : 1
		constexpr auto Positive_Z = 0xd8; // char : 1
		constexpr auto Negative_X = 0xd8; // char : 1
		constexpr auto Negative_Y = 0xd9; // char : 1
		constexpr auto Negative_Z = 0xd9; // char : 1
	}

	namespace n_UAnimBoneCompressionCodec {
		constexpr auto Description = 0x28; // FString
	}

	namespace n_UAkSettings {
		constexpr auto MaxSimultaneousReverbVolumes = 0x28; // char
		constexpr auto WwiseProjectPath = 0x30; // FFilePath
		constexpr auto WwiseSoundDataFolder = 0x40; // FDirectoryPath
		constexpr auto bAutoConnectToWAAPI = 0x50; // bool
		constexpr auto DefaultOcclusionCollisionChannel = 0x51; // ECollisionChannel
		constexpr auto AkGeometryMap = 0x58; // TMap<TSoftObjectPtr<UPhysicalMaterial>, FAkGeometrySurfacePropertiesToMap>
		constexpr auto SplitSwitchContainerMedia = 0xa8; // bool
		constexpr auto UseEventBasedPackaging = 0xa9; // bool
		constexpr auto EnableAutomaticAssetSynchronization = 0xaa; // bool
		constexpr auto CommandletCommitMessage = 0xb0; // FString
		constexpr auto UnrealCultureToWwiseCulture = 0xc0; // TMap<FString, FString>
		constexpr auto AskedToUseNewAssetManagement = 0x110; // bool
		constexpr auto bEnableMultiCoreRendering = 0x111; // bool
		constexpr auto MigratedEnableMultiCoreRendering = 0x112; // bool
		constexpr auto WwiseWindowsInstallationPath = 0x118; // FDirectoryPath
		constexpr auto WwiseMacInstallationPath = 0x128; // FFilePath
	}

	namespace n_UWBP_RogueMasteryTrackSection_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto MasteryRewardEntries = 0x528; // UHorizontalBox*
		constexpr auto WBP_ProgressEarnedBar = 0x530; // UWBP_ProgressEarnedBar_C*
		constexpr auto WBP_RogueMasteryTrackEntry = 0x538; // UWBP_RogueMasteryTrackLevel_C*
		constexpr auto WBP_RogueMasteryTrackEntry_2 = 0x540; // UWBP_RogueMasteryTrackLevel_C*
		constexpr auto WBP_RogueMasteryTrackEntry_3 = 0x548; // UWBP_RogueMasteryTrackLevel_C*
		constexpr auto WBP_RogueMasteryTrackEntry_4 = 0x550; // UWBP_RogueMasteryTrackLevel_C*
		constexpr auto WBP_RogueMasteryTrackEntry_5 = 0x558; // UWBP_RogueMasteryTrackLevel_C*
		constexpr auto WBP_RogueMasteryTrackEntry_6 = 0x560; // UWBP_RogueMasteryTrackLevel_C*
		constexpr auto WBP_RogueMasteryTrackEntry_7 = 0x568; // UWBP_RogueMasteryTrackLevel_C*
		constexpr auto WBP_RogueMasteryTrackEntry_8 = 0x570; // UWBP_RogueMasteryTrackLevel_C*
		constexpr auto WBP_RogueMasteryTrackEntry_9 = 0x578; // UWBP_RogueMasteryTrackLevel_C*
		constexpr auto WBP_RogueMasteryTrackEntry_10 = 0x580; // UWBP_RogueMasteryTrackLevel_C*
		constexpr auto OnTrackEntrySelected = 0x588; // FMulticastInlineDelegate
		constexpr auto LastSelectedActivity = 0x598; // FActivityTier
	}

	namespace n_UNavigationInvokerComponent {
		constexpr auto TileGenerationRadius = 0xb0; // float
		constexpr auto TileRemovalRadius = 0xb4; // float
	}

	namespace n_AKSLootSiteBase {
		constexpr auto OnLootSiteSpawned = 0x230; // FMulticastInlineDelegate
		constexpr auto OnLootSiteStateChanged = 0x240; // FMulticastInlineDelegate
		constexpr auto RarityTag = 0x250; // ELootSiteRarity
		constexpr auto OnLootSiteRarityChanged = 0x258; // FMulticastInlineDelegate
		constexpr auto SiteGroupNumber = 0x268; // char
		constexpr auto RarityLootSiteTableMap = 0x270; // TMap<ELootSiteRarity, UDataTable*>
		constexpr auto SpawnedDrop = 0x2d0; // TWeakObjectPtr<AKSItemDrop>
		constexpr auto ObjectsToKeepAround = 0x2d8; // TArray<UObject*>
		constexpr auto SpawnRate = 0x2e8; // float
		constexpr auto SpawnDelay = 0x2ec; // float
		constexpr auto RespawnDelay = 0x2f0; // float
		constexpr auto bAutoRespawn = 0x2f4; // bool
		constexpr auto bDestroySiteOnLooted = 0x2f5; // bool
		constexpr auto bDisableWeaponCosmeticZOffset = 0x2f6; // bool
		constexpr auto ChildSpawners = 0x2f8; // TArray<AKSLootSiteBase*>
		constexpr auto SurfaceCheckHeight = 0x308; // float
		constexpr auto bUsePrecisePlacement = 0x30c; // bool
		constexpr auto LootSiteState = 0x30d; // FLootSiteState
		constexpr auto CosmeticVisible = 0x30f; // bool
		constexpr auto SpawnDelayTimer = 0x310; // FTimerHandle
		constexpr auto NavigationLocation = 0x318; // FVector
		constexpr auto StimuliSourceComponent = 0x330; // UKSItemStimuliSourceComponent*
		constexpr auto ActorsSeenBy = 0x338; // TArray<AActor*>
	}

	namespace n_UParticleModuleSpawn {
		constexpr auto Rate = 0x38; // FRawDistributionFloat
		constexpr auto RateScale = 0x68; // FRawDistributionFloat
		constexpr auto ParticleBurstMethod = 0x98; // EParticleBurstMethod
		constexpr auto BurstList = 0xa0; // TArray<FParticleBurst>
		constexpr auto BurstScale = 0xb0; // FRawDistributionFloat
		constexpr auto bApplyGlobalSpawnRateScale = 0xe0; // char : 1
	}

	namespace n_ARuntimeVirtualTextureVolume {
		constexpr auto VirtualTextureComponent = 0x220; // URuntimeVirtualTextureComponent*
	}

	namespace n_UBTDecorator_Blackboard {
		constexpr auto IntValue = 0x90; // int32_t
		constexpr auto FloatValue = 0x94; // float
		constexpr auto StringValue = 0x98; // FString
		constexpr auto CachedDescription = 0xa8; // FString
		constexpr auto OperationType = 0xb8; // char
		constexpr auto NotifyObserver = 0xb9; // EBTBlackboardRestart
	}

	namespace n_UMovieScene {
		constexpr auto Spawnables = 0x50; // TArray<FMovieSceneSpawnable>
		constexpr auto Possessables = 0x60; // TArray<FMovieScenePossessable>
		constexpr auto ObjectBindings = 0x70; // TArray<FMovieSceneBinding>
		constexpr auto BindingGroups = 0x80; // TMap<FName, FMovieSceneObjectBindingIDs>
		constexpr auto MasterTracks = 0xd0; // TArray<UMovieSceneTrack*>
		constexpr auto CameraCutTrack = 0xe0; // UMovieSceneTrack*
		constexpr auto SelectionRange = 0xe8; // FMovieSceneFrameRange
		constexpr auto PlaybackRange = 0xf8; // FMovieSceneFrameRange
		constexpr auto TickResolution = 0x108; // FFrameRate
		constexpr auto DisplayRate = 0x110; // FFrameRate
		constexpr auto EvaluationType = 0x118; // EMovieSceneEvaluationType
		constexpr auto ClockSource = 0x119; // EUpdateClockSource
		constexpr auto CustomClockSourcePath = 0x120; // FSoftObjectPath
		constexpr auto MarkedFrames = 0x138; // TArray<FMovieSceneMarkedFrame>
	}

	namespace n_UMaterialExpressionScalarParameter {
		constexpr auto DefaultValue = 0x58; // float
		constexpr auto bUseCustomPrimitiveData = 0x5c; // bool
		constexpr auto PrimitiveDataIndex = 0x5d; // char
	}

	namespace n_UParticleModuleMeshMaterial {
		constexpr auto MeshMaterials = 0x30; // TArray<UMaterialInterface*>
	}

	namespace n_UWBP_SimulmediaRewardItem_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto AnimOnShown = 0x240; // UWidgetAnimation*
		constexpr auto BorderGlow = 0x248; // UImage*
		constexpr auto EffectContainer = 0x250; // UOverlay*
		constexpr auto godrays = 0x258; // UImage*
		constexpr auto RarityName = 0x260; // UTextBlock*
		constexpr auto ScanLines = 0x268; // UImage*
		constexpr auto WBP_KSCosmeticItemDisplay = 0x270; // UWBP_KSCosmeticItemDisplay_C*
	}

	namespace n_UMaterialExpressionNoise {
		constexpr auto Position = 0x40; // FExpressionInput
		constexpr auto FilterWidth = 0x54; // FExpressionInput
		constexpr auto Scale = 0x68; // float
		constexpr auto Quality = 0x6c; // int32_t
		constexpr auto NoiseFunction = 0x70; // ENoiseFunction
		constexpr auto bTurbulence = 0x74; // char : 1
		constexpr auto Levels = 0x78; // int32_t
		constexpr auto OutputMin = 0x7c; // float
		constexpr auto OutputMax = 0x80; // float
		constexpr auto LevelScale = 0x84; // float
		constexpr auto bTiling = 0x88; // char : 1
		constexpr auto RepeatSize = 0x8c; // uint32_t
	}

	namespace n_UGameUserSettings {
		constexpr auto bUseVSync = 0x28; // bool
		constexpr auto bUseDynamicResolution = 0x29; // bool
		constexpr auto ResolutionSizeX = 0x80; // uint32_t
		constexpr auto ResolutionSizeY = 0x84; // uint32_t
		constexpr auto LastUserConfirmedResolutionSizeX = 0x88; // uint32_t
		constexpr auto LastUserConfirmedResolutionSizeY = 0x8c; // uint32_t
		constexpr auto WindowPosX = 0x90; // int32_t
		constexpr auto WindowPosY = 0x94; // int32_t
		constexpr auto FullscreenMode = 0x98; // int32_t
		constexpr auto LastConfirmedFullscreenMode = 0x9c; // int32_t
		constexpr auto PreferredFullscreenMode = 0xa0; // int32_t
		constexpr auto Version = 0xa4; // uint32_t
		constexpr auto AudioQualityLevel = 0xa8; // int32_t
		constexpr auto LastConfirmedAudioQualityLevel = 0xac; // int32_t
		constexpr auto FrameRateLimit = 0xb0; // float
		constexpr auto DesiredScreenWidth = 0xb8; // int32_t
		constexpr auto bUseDesiredScreenHeight = 0xbc; // bool
		constexpr auto DesiredScreenHeight = 0xc0; // int32_t
		constexpr auto LastUserConfirmedDesiredScreenWidth = 0xc4; // int32_t
		constexpr auto LastUserConfirmedDesiredScreenHeight = 0xc8; // int32_t
		constexpr auto LastRecommendedScreenWidth = 0xcc; // float
		constexpr auto LastRecommendedScreenHeight = 0xd0; // float
		constexpr auto LastCPUBenchmarkResult = 0xd4; // float
		constexpr auto LastGPUBenchmarkResult = 0xd8; // float
		constexpr auto LastCPUBenchmarkSteps = 0xe0; // TArray<float>
		constexpr auto LastGPUBenchmarkSteps = 0xf0; // TArray<float>
		constexpr auto LastGPUBenchmarkMultiplier = 0x100; // float
		constexpr auto bUseHDRDisplayOutput = 0x104; // bool
		constexpr auto HDRDisplayOutputNits = 0x108; // int32_t
		constexpr auto OnGameUserSettingsUINeedsUpdate = 0x110; // FMulticastInlineDelegate
	}

	namespace n_UKSBTTask_SelectObjective {
		constexpr auto ObjectiveTargetKey = 0x70; // FBlackboardKeySelector
		constexpr auto ObjectiveTypeKey = 0x98; // FBlackboardKeySelector
		constexpr auto BlackboardKeyObjectives = 0xc0; // TArray<UKSBTObjective*>
		constexpr auto CurrentHighestPriorityObjective = 0xd8; // UKSBTObjective*
		constexpr auto CurrentHighestPriorityActor = 0xe0; // AActor*
	}

	namespace n_USettingsInfo_Quality_C {
		constexpr auto UberGraphFrame = 0x118; // FPointerToUberGraphFrame
	}

	namespace n_UUserDefinedEnum {
		constexpr auto DisplayNameMap = 0x60; // TMap<FName, FText>
	}

	namespace n_UKSEquipOnAcquisitionData {
		constexpr auto LoadoutTypeId = 0x28; // int32_t
		constexpr auto LoadoutSlotTypeId = 0x2c; // int32_t
		constexpr auto LoadoutSlotPosition = 0x30; // int32_t
		constexpr auto JobToEquipTo = 0x38; // UKSJobItem*
		constexpr auto WeaponToEquipTo = 0x40; // UKSWeaponAsset*
		constexpr auto ItemToEquip = 0x48; // UKSItem*
	}

	namespace n_UDestructibleMesh {
		constexpr auto DefaultDestructibleParameters = 0x388; // FDestructibleParameters
		constexpr auto FractureEffects = 0x410; // TArray<FFractureEffect>
	}

	namespace n_UKSAttachCompatRules_SpecificList {
		constexpr auto CompatibleWeapons = 0x28; // TArray<FSoftObjectPath>
	}

	namespace n_UKSBattlepassUpsellWidgetButton {
		constexpr auto bCanAfford = 0x530; // bool
		constexpr auto GamepadPromptHolder = 0x538; // UOverlay*
		constexpr auto DiscountBanner = 0x540; // UOverlay*
		constexpr auto DiscountPercentageDisplay = 0x548; // UTextBlock*
		constexpr auto ButtonText = 0x550; // UTextBlock*
		constexpr auto AdditionalLevelsText = 0x558; // UTextBlock*
		constexpr auto PriceTag = 0x560; // UKSPriceTag*
		constexpr auto ButtonSwitcher = 0x568; // UWidgetSwitcher*
		constexpr auto StoreItem = 0x570; // UPUMG_StoreItem*
		constexpr auto IsCurrentlyHovered = 0x578; // bool
	}

	namespace n_UWBP_SimulmediaEntrypoint_C {
		constexpr auto Image_148 = 0x520; // UImage*
		constexpr auto RichTextBlock_196 = 0x528; // URichTextBlock*
		constexpr auto WBP_YellowButton = 0x530; // UWBP_YellowButton_C*
	}

	namespace n_UScrollBox {
		constexpr auto WidgetStyle = 0x128; // FScrollBoxStyle
		constexpr auto WidgetBarStyle = 0x350; // FScrollBarStyle
		constexpr auto Style = 0x820; // USlateWidgetStyleAsset*
		constexpr auto BarStyle = 0x828; // USlateWidgetStyleAsset*
		constexpr auto Orientation = 0x830; // EOrientation
		constexpr auto ScrollBarVisibility = 0x831; // ESlateVisibility
		constexpr auto ConsumeMouseWheel = 0x832; // EConsumeMouseWheel
		constexpr auto ScrollbarThickness = 0x834; // FVector2D
		constexpr auto ScrollbarPadding = 0x83c; // FMargin
		constexpr auto AlwaysShowScrollbar = 0x84c; // bool
		constexpr auto AlwaysShowScrollbarTrack = 0x84d; // bool
		constexpr auto AllowOverscroll = 0x84e; // bool
		constexpr auto bAnimateWheelScrolling = 0x84f; // bool
		constexpr auto NavigationDestination = 0x850; // EDescendantScrollDestination
		constexpr auto NavigationScrollPadding = 0x854; // float
		constexpr auto ScrollWhenFocusChanges = 0x858; // EScrollWhenFocusChanges
		constexpr auto bAllowRightClickDragScrolling = 0x859; // bool
		constexpr auto WheelScrollMultiplier = 0x85c; // float
		constexpr auto OnUserScrolled = 0x860; // FMulticastInlineDelegate
	}

	namespace n_UKSBTTaskNode_SetCrowdFollowing {
		constexpr auto bEnable = 0x70; // bool
	}

	namespace n_UKSDamageTypeSonar {
		constexpr auto bRevealOnly = 0x138; // bool
		constexpr auto RevealDuration = 0x13c; // float
	}

	namespace n_UWBP_BattlePassAcquisitionScreen_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto ShowUpsellAnim = 0x528; // UWidgetAnimation*
		constexpr auto Outro = 0x530; // UWidgetAnimation*
		constexpr auto Intro = 0x538; // UWidgetAnimation*
		constexpr auto AcquisitionCanvas = 0x540; // UCanvasPanel*
		constexpr auto AnimCanvas = 0x548; // UCanvasPanel*
		constexpr auto Image_221 = 0x550; // UImage*
		constexpr auto ItemPreviewStack = 0x558; // UWBP_ItemPreviewStack_C*
		constexpr auto ReflectedgradientShade = 0x560; // UImage*
		constexpr auto WBP_BattlePassAcquisitionTitle_C_1 = 0x568; // UWBP_BattlePassAcquisitionTitle_C*
		constexpr auto WBP_BattlepassTransitionBanner = 0x570; // UWBP_BattlepassTransitionBanner_C*
		constexpr auto WBP_BattlePassUpsellPanel = 0x578; // UWBP_BattlePassUpsellPanel_C*
		constexpr auto WBP_ItemInfoContainer_Description = 0x580; // UWBP_ItemInfoContainer_Description_C*
		constexpr auto WBP_RewardsTrack = 0x588; // UWBP_RewardsTrack_C*
		constexpr auto ActivityInstance = 0x590; // UKSActivityInstance*
		constexpr auto SelectedEntry = 0x598; // UWBP_RewardListEntry_C*
		constexpr auto PlayPremiumTransition = 0x5a0; // FMulticastInlineDelegate
		constexpr auto SelectedData = 0x5b0; // UPUMG_StoreItem*
		constexpr auto bPlayinTransitionAnim = 0x5b8; // bool
	}

	namespace n_UWBP_ItemInfoContainer_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto Show = 0x240; // UWidgetAnimation*
		constexpr auto ItemInfoContainer = 0x248; // UVerticalBox*
		constexpr auto ItemNameField = 0x250; // UTextBlock*
		constexpr auto ItemRaritySwatch = 0x258; // UImage*
		constexpr auto LeftBGDimmer = 0x260; // UImage*
		constexpr auto LeftBGImage = 0x268; // UImage*
		constexpr auto NameWrapper = 0x270; // UOverlay*
		constexpr auto RarityRichText = 0x278; // URichTextBlock*
		constexpr auto RightBGDimmer = 0x280; // UImage*
		constexpr auto RightBGImage = 0x288; // UImage*
		constexpr auto TypeWrapper = 0x290; // UHorizontalBox*
		constexpr auto Justification = 0x298; // ETextJustify
	}

	namespace n_UMaterialExpressionDistanceToNearestSurface {
		constexpr auto Position = 0x40; // FExpressionInput
	}

	namespace n_UKSAimAssistAnchorComponent {
		constexpr auto AimAssistPriority = 0x450; // float
	}

	namespace n_UKSMultiElimTracker {
		constexpr auto MultiElimAccolades = 0xa0; // TArray<FAccoladeMultiElimTracker>
		constexpr auto TrackPlayers = 0xb0; // TArray<FAccoladePlayerTrackers>
	}

	namespace n_UKSWeaponAttachmentSkinDetails {
		constexpr auto Weapon = 0x30; // TSoftObjectPtr<UKSWeaponAsset>
		constexpr auto AttachmentCosmetic = 0x58; // TSoftClassPtr<UObject>
		constexpr auto AssetOverrideTables = 0x80; // TArray<FDataTableInfo>
	}

	namespace n_UWBP_BattlepassTransitionBanner_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto NewTierPremium = 0x528; // UWidgetAnimation*
		constexpr auto NewTierFree = 0x530; // UWidgetAnimation*
		constexpr auto PremiumUnlocked = 0x538; // UWidgetAnimation*
		constexpr auto AreaShimmer_ColorWrapper = 0x540; // UBorder*
		constexpr auto AreaShineLeft_2 = 0x548; // UImage*
		constexpr auto AreaShineRight_2 = 0x550; // UImage*
		constexpr auto Arrow = 0x558; // UImage*
		constexpr auto Arrow_2 = 0x560; // UImage*
		constexpr auto Arrow_3 = 0x568; // UImage*
		constexpr auto Arrow_4 = 0x570; // UImage*
		constexpr auto Arrow_5 = 0x578; // UImage*
		constexpr auto Arrow_6 = 0x580; // UImage*
		constexpr auto BackgroundDecoration = 0x588; // UOverlay*
		constexpr auto BackgroundFlare = 0x590; // UImage*
		constexpr auto BackgroundFlare_ColorWrapper = 0x598; // UBorder*
		constexpr auto Badge = 0x5a0; // UImage*
		constexpr auto BadgeShimmer = 0x5a8; // UImage*
		constexpr auto Bottomtri = 0x5b0; // UImage*
		constexpr auto CenterGradient = 0x5b8; // UImage*
		constexpr auto DiamondBack_ColorWrapper = 0x5c0; // UBorder*
		constexpr auto DiamondBase = 0x5c8; // UImage*
		constexpr auto DiamondBase_2 = 0x5d0; // UImage*
		constexpr auto DiamondBlur = 0x5d8; // UImage*
		constexpr auto DiamondInterior_ColorWrapper = 0x5e0; // UBorder*
		constexpr auto EdgeGlow = 0x5e8; // UImage*
		constexpr auto EdgeGlow_2 = 0x5f0; // UImage*
		constexpr auto Fill = 0x5f8; // UImage*
		constexpr auto FillShadow = 0x600; // UImage*
		constexpr auto Glitch_Center = 0x608; // UImage*
		constexpr auto GlitchCenter_ColorWrapper = 0x610; // UBorder*
		constexpr auto GlowBanner_ColorWrapper = 0x618; // UBorder*
		constexpr auto glowLine = 0x620; // UWBP_AdditiveImage_C*
		constexpr auto glowLine_3 = 0x628; // UWBP_AdditiveImage_C*
		constexpr auto godrays = 0x630; // UImage*
		constexpr auto IconFlares_ColorWrapper = 0x638; // UBorder*
		constexpr auto LenseFlare1 = 0x640; // UImage*
		constexpr auto LineShimmer_ColorWrapper = 0x648; // UBorder*
		constexpr auto LineShineLeft = 0x650; // UImage*
		constexpr auto LineShineRight = 0x658; // UImage*
		constexpr auto PrimaryBannerShade = 0x660; // UImage*
		constexpr auto PrimaryBannerText = 0x668; // UTextBlock*
		constexpr auto ScanLines = 0x670; // UWBP_AdditiveImage_C*
		constexpr auto ScanLines_3 = 0x678; // UWBP_AdditiveImage_C*
		constexpr auto SheenLeft = 0x680; // UImage*
		constexpr auto SheenRight = 0x688; // UImage*
		constexpr auto ShieldLogo = 0x690; // UImage*
		constexpr auto SideDeco_2 = 0x698; // UImage*
		constexpr auto SideDeco_3 = 0x6a0; // UImage*
		constexpr auto Stroke = 0x6a8; // UImage*
		constexpr auto SubtitleBannerShade = 0x6b0; // UImage*
		constexpr auto SubtitleText = 0x6b8; // UTextBlock*
		constexpr auto VictoryDefeatGlow = 0x6c0; // UImage*
		constexpr auto VictoryDefeatGlow_2 = 0x6c8; // UImage*
		constexpr auto VictoryDefeatGlow_Pulse = 0x6d0; // UImage*
		constexpr auto VictoryDefeatGlow_Pulse_2 = 0x6d8; // UImage*
		constexpr auto WBP_BattlePassEmblem = 0x6e0; // UWBP_BattlePassEmblem_C*
		constexpr auto TickTime = 0x6e8; // float
		constexpr auto TransitionFinished = 0x6f0; // FMulticastInlineDelegate
	}

	namespace n_APlanarReflection {
		constexpr auto PlanarReflectionComponent = 0x230; // UPlanarReflectionComponent*
		constexpr auto bShowPreviewPlane = 0x238; // bool
	}

	namespace n_USoundNodeDelay {
		constexpr auto DelayMin = 0x48; // float
		constexpr auto DelayMax = 0x4c; // float
	}

	namespace n_UDistributionVectorUniformParameter {
		constexpr auto MaxParamName = 0x38; // FName
		constexpr auto MinParamName = 0x40; // FName
		constexpr auto DefaultMaxValue = 0x48; // FVector
		constexpr auto DefaultMinValue = 0x54; // FVector
	}

	namespace n_UAITask {
		constexpr auto OwnerController = 0x68; // AAIController*
	}

	namespace n_USourceEffectEQPreset {
		constexpr auto Settings = 0x78; // FSourceEffectEQSettings
	}

	namespace n_UMicroTransactionBase {
		constexpr auto AvailableProducts = 0x38; // TArray<FPurchaseInfo>
		constexpr auto LastError = 0x48; // FString
		constexpr auto LastErrorSolution = 0x58; // FString
	}

	namespace n_UKSBattlePassProgressionManager {
		constexpr auto OnBattlePassProgressionActivitiesReady = 0x228; // FMulticastInlineDelegate
		constexpr auto BattlePassReady = 0x238; // bool
	}

	namespace n_UBTTask_BlackboardBase {
		constexpr auto BlackboardKey = 0x70; // FBlackboardKeySelector
	}

	namespace n_UWBP_RegionSelectRedirect_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto WBP_RegionSelect = 0x528; // UWBP_RegionSelect_C*
		constexpr auto ShowSFX = 0x530; // UAkAudioEvent*
	}

	namespace n_UWBP_RogueMasteryRewardIcon_C {
		constexpr auto Fill = 0x238; // UImage*
		constexpr auto Stroke = 0x240; // UImage*
	}

	namespace n_UInvalidationBox {
		constexpr auto bCanCache = 0x128; // bool
		constexpr auto CacheRelativeTransforms = 0x129; // bool
	}

	namespace n_UCameraShakeSourceComponent {
		constexpr auto Attenuation = 0x208; // ECameraShakeAttenuation
		constexpr auto InnerAttenuationRadius = 0x20c; // float
		constexpr auto OuterAttenuationRadius = 0x210; // float
		constexpr auto CameraShake = 0x218; // UCameraShake*
		constexpr auto bAutoPlay = 0x220; // bool
	}

	namespace n_UMovieSceneStringSection {
		constexpr auto StringCurve = 0xe0; // FMovieSceneStringChannel
	}

	namespace n_UKSActivityRequirement_Item {
		constexpr auto RequiredOwnedItemId = 0x30; // int32_t
		constexpr auto RequiredItemQuantity = 0x34; // int32_t
	}

	namespace n_AKSOutOfBoundsZone {
		constexpr auto TickDamage = 0x228; // float
		constexpr auto WarningDuration = 0x22c; // float
		constexpr auto ShouldDisableCollisionAtRoundEnd = 0x230; // bool
	}

	namespace n_UNewWBP_LobbyNameplate_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto AvatarIcon = 0x528; // UKSAsyncImage*
		constexpr auto PartyLeader = 0x530; // UImage*
		constexpr auto PartyLeaderIcon = 0x538; // USizeBox*
		constexpr auto PlayerDisplay = 0x540; // UHorizontalBox*
		constexpr auto PlayerName = 0x548; // UTextBlock*
		constexpr auto ProgressNum = 0x550; // UTextBlock*
		constexpr auto RankedDisplayWrapper = 0x558; // UHorizontalBox*
		constexpr auto RankedIcon = 0x560; // UWBP_RankedIcon_C*
		constexpr auto RankedProgress = 0x568; // UVerticalBox*
		constexpr auto RankedProgressBar = 0x570; // UWBP_ProgressEarnedBar_C*
		constexpr auto TotalNum = 0x578; // UTextBlock*
		constexpr auto PartyDataFactory = 0x580; // UKSPartyDataFactory*
		constexpr auto MaxNameLength = 0x588; // int32_t
		constexpr auto StoredPlayerInfo = 0x590; // UKSPlayerInfo*
		constexpr auto QueueDataFactory = 0x598; // UKSQueueDataFactory*
		constexpr auto ShouldShowRankedXp = 0x5a0; // bool
	}

	namespace n_USlateSettings {
		constexpr auto bExplicitCanvasChildZOrder = 0x28; // bool
	}

	namespace n_UParticleModuleMeshRotationRateMultiplyLife {
		constexpr auto LifeMultiplier = 0x30; // FRawDistributionVector
	}

	namespace n_UKSTargetMarkerWidget {
		constexpr auto OnTargetChanged = 0x328; // FMulticastInlineDelegate
		constexpr auto OnModUsed = 0x338; // FMulticastInlineDelegate
		constexpr auto CurrentTarget = 0x348; // AActor*
		constexpr auto TargetModInst = 0x350; // UKSModInst_Activated*
		constexpr auto Targeter = 0x358; // TScriptInterface<IKSTargeter>
	}

	namespace n_UInterpTrackInstSlomo {
		constexpr auto OldTimeDilation = 0x28; // float
	}

	namespace n_UActorChannel {
		constexpr auto Actor = 0x70; // AActor*
		constexpr auto CreateSubObjects = 0x168; // TArray<UObject*>
	}

	namespace n_UStaticMeshSocket {
		constexpr auto SocketName = 0x28; // FName
		constexpr auto RelativeLocation = 0x30; // FVector
		constexpr auto RelativeRotation = 0x3c; // FRotator
		constexpr auto RelativeScale = 0x48; // FVector
		constexpr auto Tag = 0x58; // FString
	}

	namespace n_UListView {
		constexpr auto Orientation = 0x2e0; // EOrientation
		constexpr auto SelectionMode = 0x2e1; // ESelectionMode
		constexpr auto ConsumeMouseWheel = 0x2e2; // EConsumeMouseWheel
		constexpr auto bClearSelectionOnClick = 0x2e3; // bool
		constexpr auto bIsFocusable = 0x2e4; // bool
		constexpr auto EntrySpacing = 0x2e8; // float
		constexpr auto bReturnFocusToSelection = 0x2ec; // bool
		constexpr auto ListItems = 0x2f0; // TArray<UObject*>
		constexpr auto BP_OnEntryInitialized = 0x310; // FMulticastInlineDelegate
		constexpr auto BP_OnItemClicked = 0x320; // FMulticastInlineDelegate
		constexpr auto BP_OnItemDoubleClicked = 0x330; // FMulticastInlineDelegate
		constexpr auto BP_OnItemIsHoveredChanged = 0x340; // FMulticastInlineDelegate
		constexpr auto BP_OnItemSelectionChanged = 0x350; // FMulticastInlineDelegate
		constexpr auto BP_OnItemScrolledIntoView = 0x360; // FMulticastInlineDelegate
		constexpr auto BP_OnListViewScrolled = 0x370; // FMulticastInlineDelegate
	}

	namespace n_UInputKeySelector {
		constexpr auto WidgetStyle = 0x110; // FButtonStyle
		constexpr auto TextStyle = 0x388; // FTextBlockStyle
		constexpr auto SelectedKey = 0x5f0; // FInputChord
		constexpr auto Font = 0x610; // FSlateFontInfo
		constexpr auto Margin = 0x660; // FMargin
		constexpr auto ColorAndOpacity = 0x670; // FLinearColor
		constexpr auto KeySelectionText = 0x680; // FText
		constexpr auto NoKeySpecifiedText = 0x698; // FText
		constexpr auto bAllowModifierKeys = 0x6b0; // bool
		constexpr auto bAllowGamepadKeys = 0x6b1; // bool
		constexpr auto EscapeKeys = 0x6b8; // TArray<FKey>
		constexpr auto OnKeySelected = 0x6c8; // FMulticastInlineDelegate
		constexpr auto OnIsSelectingKeyChanged = 0x6d8; // FMulticastInlineDelegate
	}

	namespace n_UKSPlayerMod_AngleConfig {
		constexpr auto AngleThreshold = 0x330; // float
		constexpr auto bUseDistance = 0x334; // bool
		constexpr auto DistanceThreshold = 0x338; // float
	}

	namespace n_UKSRadialSelectionWidgetBase {
		constexpr auto EmoteSlots = 0x520; // TArray<FGameplayTag>
		constexpr auto QuipSlots = 0x530; // TArray<FGameplayTag>
		constexpr auto CommunicationSlots = 0x540; // TArray<FGameplayTag>
		constexpr auto SpraySlots = 0x550; // TArray<FGameplayTag>
		constexpr auto AdditionalInputsToDisableOnOpen = 0x560; // TArray<FName>
		constexpr auto RadialMenuCosmeticSlots = 0x570; // TArray<EMercCosmeticSlot>
		constexpr auto bCycleBetweenMenusEnabled = 0x580; // bool
		constexpr auto RadialWheelActivationMode = 0x589; // ERadialWheelActivationMode
	}

	namespace n_AGeometryCollectionRenderLevelSetActor {
		constexpr auto TargetVolumeTexture = 0x220; // UVolumeTexture*
		constexpr auto RayMarchMaterial = 0x228; // UMaterial*
		constexpr auto SurfaceTolerance = 0x230; // float
		constexpr auto Isovalue = 0x234; // float
		constexpr auto Enabled = 0x238; // bool
		constexpr auto RenderVolumeBoundingBox = 0x239; // bool
	}

	namespace n_UPUMG_QueueDataFactory {
		constexpr auto OnQueueJoined = 0x38; // FMulticastInlineDelegate
		constexpr auto OnQueueLeft = 0x48; // FMulticastInlineDelegate
		constexpr auto OnQueueStatusChange = 0x58; // FMulticastInlineDelegate
		constexpr auto OnQueueDataUpdated = 0x68; // FMulticastInlineDelegate
		constexpr auto OnMatchStatusUpdatedError = 0x78; // FMulticastInlineDelegate
		constexpr auto OnCustomMatchJoined = 0x88; // FMulticastInlineDelegate
		constexpr auto OnCustomQueueMemberAdded = 0x98; // FMulticastInlineDelegate
		constexpr auto OnCustomQueueMemberRemoved = 0xa8; // FMulticastInlineDelegate
		constexpr auto OnCustomQueueMemberUpdated = 0xb8; // FMulticastInlineDelegate
		constexpr auto OnCustomQueueChanged = 0xc8; // FMulticastInlineDelegate
		constexpr auto OnCustomInviteErrorRecieved = 0xd8; // FMulticastInlineDelegate
		constexpr auto PendingCustomMatchMapId = 0xe8; // int32_t
		constexpr auto ActivityQueuePairs = 0xf0; // TArray<FPUMG_ActivityQueuePair>
		constexpr auto ActivityToJoin = 0x100; // FString
		constexpr auto bActivityToJoinIsMultiplayer = 0x110; // bool
		constexpr auto QueueIds = 0x118; // TArray<int32_t>
		constexpr auto QueueUpdatePollInterval = 0x188; // float
		constexpr auto QueueUpdateTimerHandle = 0x190; // FTimerHandle
		constexpr auto CustomMatchMembers = 0x198; // TArray<FPUMG_CustomMatchMember>
		constexpr auto CustomMatchSpectateTeamId = 0x218; // int32_t
		constexpr auto RepeatMapGameIds = 0x220; // TArray<int32_t>
		constexpr auto RepeatMapOdds = 0x230; // float
	}

	namespace n_UKSLoginRewardsModal {
		constexpr auto OnLoginRewardsReady = 0x520; // FMulticastInlineDelegate
		constexpr auto LoginRewardItems = 0x530; // TArray<FLoginRewardItem>
		constexpr auto nDefaultItemsPerRow = 0x540; // int32_t
	}

	namespace n_UInterpTrackInstFloatProp {
		constexpr auto ResetFloat = 0x60; // float
	}

	namespace n_UCheckBoxWidgetStyle {
		constexpr auto CheckBoxStyle = 0x30; // FCheckBoxStyle
	}

	namespace n_UPostEventAsync {
		constexpr auto Completed = 0x30; // FMulticastInlineDelegate
	}

	namespace n_UMovieSceneFadeSection {
		constexpr auto FadeColor = 0x180; // FLinearColor
		constexpr auto bFadeAudio = 0x190; // char : 1
	}

	namespace n_UAISense_Hearing {
		constexpr auto NoiseEvents = 0x80; // TArray<FAINoiseEvent>
		constexpr auto SpeedOfSoundSq = 0x90; // float
	}

	namespace n_UWBP_PlayerAwardsScreen_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto OnShow = 0x528; // UWidgetAnimation*
		constexpr auto BG = 0x530; // UImage*
		constexpr auto GrdAwardEntries = 0x538; // UKSSortableGridPanel*
		constexpr auto SclAwardEntries = 0x540; // UScrollBox*
		constexpr auto WBP_Header1 = 0x548; // UWBP_Header1_C*
		constexpr auto ScrollSpeed = 0x550; // float
	}

	namespace n_AKSWeapon_Melee {
		constexpr auto OnMeleeHit = 0x800; // FMulticastInlineDelegate
		constexpr auto OnProjectileSpawned = 0x828; // FMulticastInlineDelegate
		constexpr auto Projectile = 0x858; // AKSProjectile*
		constexpr auto FakeProjectile = 0x860; // AKSProjectile*
		constexpr auto MeleeWeaponAsset = 0x868; // UKSWeaponAsset_Melee*
		constexpr auto bMeleeSwinging = 0x870; // bool
		constexpr auto MeleeSwingingTimerHandle = 0x878; // FTimerHandle
		constexpr auto DamagedTargetsInSwing = 0x880; // TArray<TWeakObjectPtr<AActor>>
		constexpr auto bIsInQuickMelee = 0x890; // bool
	}

	namespace n_UKSPlayerMod_ApplyModOnEvent {
		constexpr auto ModDuration = 0x330; // float
		constexpr auto ModsToGiveOnEvent = 0x338; // TArray<TSoftObjectPtr<UKSPlayerMod>>
	}

	namespace n_UKSGameEngine {
		constexpr auto OnGoPlayMapReady = 0xee0; // FMulticastInlineDelegate
	}

	namespace n_UKSJobSelectionChoiceWidget {
		constexpr auto HitTargets = 0x568; // TArray<UButton*>
		constexpr auto LocalJob = 0x578; // UKSJobItem*
	}

	namespace n_UKSPlayerInput {
		constexpr auto SavedSettingsConfig = 0x12f0; // TMap<FName, FString>
		constexpr auto GamepadLookAcceleration = 0x1434; // FVector2D
		constexpr auto MinMouseSenseScaling = 0x143c; // float
		constexpr auto MaxMouseSenseScaling = 0x1440; // float
		constexpr auto TouchLookSensitivityADS = 0x1444; // float
		constexpr auto OnKeyMappingsUpdated = 0x1450; // FMulticastInlineDelegate
		constexpr auto KSCustomActionKeyMappings = 0x1460; // TMap<FName, FKSCustomInputActionKeyMappings>
		constexpr auto KSCustomAxisKeyMappings = 0x1500; // TMap<FName, FKSCustomInputAxisKeyMappings>
		constexpr auto KSLeftAnalogStickFilterClass = 0x15a0; // UKSAnalogStickFilter*
		constexpr auto KSRightAnalogStickFilterClass = 0x15a8; // UKSAnalogStickFilter*
		constexpr auto LeftAnalogStickFilter = 0x15b0; // UKSAnalogStickFilter*
		constexpr auto RightAnalogStickFilter = 0x15c8; // UKSAnalogStickFilter*
	}

	namespace n_UWBP_CosmeticItem_BorderEmpty_C {
		constexpr auto Image_76 = 0x520; // UImage*
	}

	namespace n_USimpleConstructionScript {
		constexpr auto RootNodes = 0x28; // TArray<USCS_Node*>
		constexpr auto AllNodes = 0x38; // TArray<USCS_Node*>
		constexpr auto DefaultSceneRootNode = 0x48; // USCS_Node*
	}

	namespace n_AMatineeActorCameraAnim {
		constexpr auto CameraAnim = 0x2c8; // UCameraAnim*
	}

	namespace n_UAkMarkerCallbackInfo {
		constexpr auto Identifier = 0x38; // int32_t
		constexpr auto Position = 0x3c; // int32_t
		constexpr auto Label = 0x40; // FString
	}

	namespace n_UAISenseConfig {
		constexpr auto DebugColor = 0x28; // FColor
		constexpr auto MaxAge = 0x2c; // float
		constexpr auto bStartsEnabled = 0x30; // char : 1
	}

	namespace n_UMovieSceneParticleSection {
		constexpr auto ParticleKeys = 0xe0; // FMovieSceneParticleChannel
	}

	namespace n_UKSRoundedSquareDeadZoneFilter {
		constexpr auto CardinalSize = 0x38; // float
		constexpr auto CornerRadius = 0x3c; // float
	}

	namespace n_UTemplateSequence {
		constexpr auto MovieScene = 0x348; // UMovieScene*
		constexpr auto BoundActorClass = 0x350; // TSoftClassPtr<UObject>
		constexpr auto BoundPreviewActor = 0x378; // TSoftObjectPtr<AActor>
		constexpr auto BoundActorComponents = 0x3a0; // TMap<FGuid, FName>
	}

	namespace n_UCanvas {
		constexpr auto OrgX = 0x28; // float
		constexpr auto OrgY = 0x2c; // float
		constexpr auto ClipX = 0x30; // float
		constexpr auto ClipY = 0x34; // float
		constexpr auto DrawColor = 0x38; // FColor
		constexpr auto bCenterX = 0x3c; // char : 1
		constexpr auto bCenterY = 0x3c; // char : 1
		constexpr auto bNoSmooth = 0x3c; // char : 1
		constexpr auto SizeX = 0x40; // int32_t
		constexpr auto SizeY = 0x44; // int32_t
		constexpr auto ColorModulate = 0x50; // FPlane
		constexpr auto DefaultTexture = 0x60; // UTexture2D*
		constexpr auto GradientTexture0 = 0x68; // UTexture2D*
		constexpr auto ReporterGraph = 0x70; // UReporterGraph*
	}

	namespace n_UKSSettingsContainerConfigAsset {
		constexpr auto bIsAvailableOffline = 0x30; // bool
		constexpr auto bRequires120HzDisplay = 0x31; // bool
		constexpr auto AllowedPlatformTypes = 0x32; // FKSAllowedPlatformTypes
		constexpr auto RequiredInputTypes = 0x3c; // FKSRequiredInputTypes
		constexpr auto RequiredExperiment = 0x40; // FString
		constexpr auto SwitchDockedModeSetting = 0x50; // FKSSwitchDockedModeSetting
		constexpr auto bUsePreview = 0x52; // bool
		constexpr auto PreviewWidget = 0x58; // UKSSettingsPreview*
		constexpr auto WidgetConfigs = 0x60; // TArray<FKSSettingsWidgetConfig>
		constexpr auto SettingName = 0x70; // FText
		constexpr auto SettingNameByPlatform = 0x88; // TMap<FString, FText>
		constexpr auto SettingDescription = 0xd8; // FText
		constexpr auto SettingDescriptionByPlatform = 0xf0; // TMap<FString, FText>
	}

	namespace n_ULocalizedOverlays {
		constexpr auto DefaultOverlays = 0x28; // UBasicOverlays*
		constexpr auto LocaleToOverlaysMap = 0x30; // TMap<FString, UBasicOverlays*>
	}

	namespace n_UWBP_SettingsDropdown_C {
		constexpr auto UberGraphFrame = 0x578; // FPointerToUberGraphFrame
		constexpr auto Dropdown = 0x580; // UDropdown_C*
	}

	namespace n_UKSMatchResult {
		constexpr auto FinalResultEndTime = 0x52c; // float
		constexpr auto RoundResultAnnoucement = 0x530; // FRoundResultAnnoucement
		constexpr auto pTeamNum = 0x550; // int32_t
		constexpr auto pOpposeTeamNum = 0x554; // int32_t
		constexpr auto pTeamScore = 0x558; // int32_t
		constexpr auto pOpposeTeamScore = 0x55c; // int32_t
		constexpr auto bIsEndOfMatch = 0x560; // bool
		constexpr auto bMatchEndedInSurrender = 0x561; // bool
	}

	namespace n_UWBP_SettingsPage_C {
		constexpr auto UberGraphFrame = 0x540; // FPointerToUberGraphFrame
		constexpr auto PageScrollBox = 0x548; // UScrollBox*
		constexpr auto SettingsGroupBox = 0x550; // UVerticalBox*
		constexpr auto StartTranslationXAnim = 0x558; // float
		constexpr auto StartOpacityAnim = 0x55c; // float
		constexpr auto AnimPlayTime = 0x560; // float
	}

	namespace n_USocialToolkit {
		constexpr auto LocalUser = 0x60; // USocialUser*
		constexpr auto AllUsers = 0x68; // TArray<USocialUser*>
		constexpr auto LocalPlayerOwner = 0xc8; // ULocalPlayer*
		constexpr auto SocialChatManager = 0xd0; // USocialChatManager*
	}

	namespace n_UAutomationTestSettings {
		constexpr auto EngineTestModules = 0x28; // TArray<FString>
		constexpr auto EditorTestModules = 0x38; // TArray<FString>
		constexpr auto AutomationTestmap = 0x48; // FSoftObjectPath
		constexpr auto EditorPerformanceTestMaps = 0x60; // TArray<FEditorMapPerformanceTestDefinition>
		constexpr auto AssetsToOpen = 0x70; // TArray<FSoftObjectPath>
		constexpr auto BuildPromotionTest = 0x80; // FBuildPromotionTestSettings
		constexpr auto MaterialEditorPromotionTest = 0x270; // FMaterialEditorPromotionSettings
		constexpr auto ParticleEditorPromotionTest = 0x2a0; // FParticleEditorPromotionSettings
		constexpr auto BlueprintEditorPromotionTest = 0x2b0; // FBlueprintEditorPromotionSettings
		constexpr auto TestLevelFolders = 0x2e0; // TArray<FString>
		constexpr auto ExternalTools = 0x2f0; // TArray<FExternalToolDefinition>
		constexpr auto ImportExportTestDefinitions = 0x300; // TArray<FEditorImportExportTestDefinition>
		constexpr auto LaunchOnSettings = 0x310; // TArray<FLaunchOnTestSettings>
		constexpr auto DefaultScreenshotResolution = 0x320; // FIntPoint
	}

	namespace n_USoundWave {
		constexpr auto CompressionQuality = 0x160; // int32_t
		constexpr auto StreamingPriority = 0x164; // int32_t
		constexpr auto SampleRateQuality = 0x168; // ESoundwaveSampleRateSettings
		constexpr auto SoundGroup = 0x16a; // ESoundGroup
		constexpr auto bLooping = 0x16b; // char : 1
		constexpr auto bStreaming = 0x16b; // char : 1
		constexpr auto bSeekableStreaming = 0x16b; // char : 1
		constexpr auto LoadingBehavior = 0x16c; // ESoundWaveLoadingBehavior
		constexpr auto bMature = 0x16d; // char : 1
		constexpr auto bManualWordWrap = 0x16d; // char : 1
		constexpr auto bSingleLine = 0x16d; // char : 1
		constexpr auto bIsAmbisonics = 0x16e; // char : 1
		constexpr auto FrequenciesToAnalyze = 0x170; // TArray<float>
		constexpr auto CookedSpectralTimeData = 0x180; // TArray<FSoundWaveSpectralTimeData>
		constexpr auto CookedEnvelopeTimeData = 0x190; // TArray<FSoundWaveEnvelopeTimeData>
		constexpr auto InitialChunkSize = 0x1a0; // int32_t
		constexpr auto SpokenText = 0x1e8; // FString
		constexpr auto SubtitlePriority = 0x1f8; // float
		constexpr auto Volume = 0x1fc; // float
		constexpr auto Pitch = 0x200; // float
		constexpr auto NumChannels = 0x204; // int32_t
		constexpr auto SampleRate = 0x208; // int32_t
		constexpr auto Subtitles = 0x218; // TArray<FSubtitleCue>
		constexpr auto Curves = 0x228; // UCurveTable*
		constexpr auto InternalCurves = 0x230; // UCurveTable*
	}

	namespace n_UMaterialExpressionPower {
		constexpr auto Base = 0x40; // FExpressionInput
		constexpr auto Exponent = 0x54; // FExpressionInput
		constexpr auto ConstExponent = 0x68; // float
	}

	namespace n_UAudioCaptureComponent {
		constexpr auto JitterLatencyFrames = 0x6e0; // int32_t
	}

	namespace n_UParticleModuleRotationRate_Seeded {
		constexpr auto RandomSeedInfo = 0x60; // FParticleRandomSeedInfo
	}

	namespace n_UAsyncActionLoadPrimaryAssetClass {
		constexpr auto Completed = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UCameraModifier {
		constexpr auto bDebug = 0x28; // char : 1
		constexpr auto bExclusive = 0x28; // char : 1
		constexpr auto Priority = 0x2c; // char
		constexpr auto CameraOwner = 0x30; // APlayerCameraManager*
		constexpr auto AlphaInTime = 0x38; // float
		constexpr auto AlphaOutTime = 0x3c; // float
		constexpr auto Alpha = 0x40; // float
	}

	namespace n_UKSLocalPlayer {
		constexpr auto OnLocalViewedPawnChangedDel = 0x260; // FMulticastInlineDelegate
		constexpr auto KillCam = 0x288; // UKSKillCam*
		constexpr auto KillCamControllerClass = 0x290; // AKSKillCamController*
	}

	namespace n_UInterpTrackAnimControl {
		constexpr auto SlotName = 0x90; // FName
		constexpr auto AnimSeqs = 0x98; // TArray<FAnimControlTrackKey>
		constexpr auto bSkipAnimNotifiers = 0xa8; // char : 1
	}

	namespace n_ALobbyBeaconState {
		constexpr auto MaxPlayers = 0x220; // int32_t
		constexpr auto LobbyBeaconPlayerStateClass = 0x228; // ALobbyBeaconPlayerState*
		constexpr auto bLobbyStarted = 0x238; // bool
		constexpr auto WaitForPlayersTimeRemaining = 0x23c; // float
		constexpr auto Players = 0x240; // FLobbyPlayerStateInfoArray
	}

	namespace n_UKSModInst_GiveWeaponOnActivation {
		constexpr auto bActivatesOnIdle = 0x498; // bool
		constexpr auto bActivatesOnFire = 0x499; // bool
		constexpr auto bRestrictSwapping = 0x4a8; // bool
		constexpr auto bSwapToMain = 0x4a9; // bool
		constexpr auto bConsiderAsSwapToPrevious = 0x4aa; // bool
		constexpr auto bEndActivationOnHolster = 0x4d0; // bool
		constexpr auto bEndActivationOnEmptyClip = 0x4d1; // bool
		constexpr auto bEndActivationOnExhausted = 0x4d2; // bool
		constexpr auto bConsumeChargeWhenItemRemoved = 0x4d3; // bool
		constexpr auto bConsumeChargeWhenFired = 0x4d4; // bool
		constexpr auto bConsumeChargeWhenAmmoConsumed = 0x4d5; // bool
		constexpr auto bReplenishesAmmoOnFullyCharged = 0x4d6; // bool
		constexpr auto bReplenishesAmmoOnDurationIncreased = 0x4d7; // bool
		constexpr auto bShouldBroadcastWeaponHits = 0x4d8; // bool
		constexpr auto SwapFromRetryTimer = 0x4e0; // FTimerHandle
		constexpr auto SwapFromRetryTime = 0x4e8; // float
		constexpr auto bSwappingOff = 0x4ec; // bool
		constexpr auto DeployableActors = 0x4f0; // TArray<AActor*>
	}

	namespace n_UANotifyState_MeleeRecoil_C {
		constexpr auto Melee Swing Recoil = 0x30; // FRecoilInfo
	}

	namespace n_UInterpTrackMoveAxis {
		constexpr auto MoveAxis = 0x90; // EInterpMoveAxis
		constexpr auto LookupTrack = 0x98; // FInterpLookupTrack
	}

	namespace n_UInterpTrackInstAkAudioRTPC {
		constexpr auto LastUpdatePosition = 0x28; // float
	}

	namespace n_UInterpTrackFloatProp {
		constexpr auto PropertyName = 0x90; // FName
	}

	namespace n_UInterpTrackVectorProp {
		constexpr auto PropertyName = 0x90; // FName
	}

	namespace n_ARecastNavMesh {
		constexpr auto bDrawTriangleEdges = 0x400; // char : 1
		constexpr auto bDrawPolyEdges = 0x400; // char : 1
		constexpr auto bDrawFilledPolys = 0x400; // char : 1
		constexpr auto bDrawNavMeshEdges = 0x400; // char : 1
		constexpr auto bDrawTileBounds = 0x400; // char : 1
		constexpr auto bDrawPathCollidingGeometry = 0x400; // char : 1
		constexpr auto bDrawTileLabels = 0x400; // char : 1
		constexpr auto bDrawPolygonLabels = 0x400; // char : 1
		constexpr auto bDrawDefaultPolygonCost = 0x401; // char : 1
		constexpr auto bDrawLabelsOnPathNodes = 0x401; // char : 1
		constexpr auto bDrawNavLinks = 0x401; // char : 1
		constexpr auto bDrawFailedNavLinks = 0x401; // char : 1
		constexpr auto bDrawClusters = 0x401; // char : 1
		constexpr auto bDrawOctree = 0x401; // char : 1
		constexpr auto bDrawOctreeDetails = 0x401; // char : 1
		constexpr auto bDrawMarkedForbiddenPolys = 0x401; // char : 1
		constexpr auto bDistinctlyDrawTilesBeingBuilt = 0x402; // char : 1
		constexpr auto bDrawNavMesh = 0x402; // char : 1
		constexpr auto DrawOffset = 0x404; // float
		constexpr auto bFixedTilePoolSize = 0x408; // char : 1
		constexpr auto TilePoolSize = 0x40c; // int32_t
		constexpr auto TileSizeUU = 0x410; // float
		constexpr auto CellSize = 0x414; // float
		constexpr auto CellHeight = 0x418; // float
		constexpr auto AgentRadius = 0x41c; // float
		constexpr auto AgentHeight = 0x420; // float
		constexpr auto AgentMaxHeight = 0x424; // float
		constexpr auto AgentMaxSlope = 0x428; // float
		constexpr auto AgentMaxStepHeight = 0x42c; // float
		constexpr auto MinRegionArea = 0x430; // float
		constexpr auto MergeRegionSize = 0x434; // float
		constexpr auto MaxSimplificationError = 0x438; // float
		constexpr auto MaxSimultaneousTileGenerationJobsCount = 0x43c; // int32_t
		constexpr auto TileNumberHardLimit = 0x440; // int32_t
		constexpr auto PolyRefTileBits = 0x444; // int32_t
		constexpr auto PolyRefNavPolyBits = 0x448; // int32_t
		constexpr auto PolyRefSaltBits = 0x44c; // int32_t
		constexpr auto NavMeshOriginOffset = 0x450; // FVector
		constexpr auto DefaultDrawDistance = 0x45c; // float
		constexpr auto DefaultMaxSearchNodes = 0x460; // float
		constexpr auto DefaultMaxHierarchicalSearchNodes = 0x464; // float
		constexpr auto RegionPartitioning = 0x468; // ERecastPartitioning
		constexpr auto LayerPartitioning = 0x469; // ERecastPartitioning
		constexpr auto RegionChunkSplits = 0x46c; // int32_t
		constexpr auto LayerChunkSplits = 0x470; // int32_t
		constexpr auto bSortNavigationAreasByCost = 0x474; // char : 1
		constexpr auto bPerformVoxelFiltering = 0x474; // char : 1
		constexpr auto bMarkLowHeightAreas = 0x474; // char : 1
		constexpr auto bFilterLowSpanSequences = 0x474; // char : 1
		constexpr auto bFilterLowSpanFromTileCache = 0x474; // char : 1
		constexpr auto bDoFullyAsyncNavDataGathering = 0x474; // char : 1
		constexpr auto bUseBetterOffsetsFromCorners = 0x474; // char : 1
		constexpr auto bStoreEmptyTileLayers = 0x474; // char : 1
		constexpr auto bUseVirtualFilters = 0x475; // char : 1
		constexpr auto bAllowNavLinkAsPathEnd = 0x475; // char : 1
		constexpr auto bUseVoxelCache = 0x475; // char : 1
		constexpr auto TileSetUpdateInterval = 0x478; // float
		constexpr auto HeuristicScale = 0x47c; // float
		constexpr auto VerticalDeviationFromGroundCompensation = 0x480; // float
	}

	namespace n_UParticleModuleLifetime {
		constexpr auto Lifetime = 0x30; // FRawDistributionFloat
	}

	namespace n_UKSHUDComponent_Objective {
		constexpr auto TopBarObjectiveIcon = 0xb0; // TSoftObjectPtr<UTexture2D>
		constexpr auto NameplateObjectiveIcon = 0xd8; // TSoftObjectPtr<UTexture2D>
		constexpr auto ScoreIcon = 0x100; // TSoftObjectPtr<UTexture2D>
		constexpr auto TicketIcon = 0x128; // TSoftObjectPtr<UTexture2D>
		constexpr auto ShowNameplateObjectiveForEnemy = 0x150; // bool
		constexpr auto ForceAlwaysShowNameplateObjective = 0x151; // bool
		constexpr auto ShowTopBarObjectiveMarker = 0x152; // bool
		constexpr auto ShowBombIconInTopBar = 0x153; // bool
		constexpr auto ConnectTopBarMarkerToTimer = 0x154; // bool
		constexpr auto ShowInWorldMarkerTimer = 0x155; // bool
		constexpr auto ObjectiveMarkerProgressFills = 0x156; // bool
		constexpr auto ScoreboardDisplayIntraScoring = 0x157; // bool
		constexpr auto UseIntraScoring = 0x158; // bool
		constexpr auto UseTicketSystem = 0x159; // bool
		constexpr auto PointsBarType = 0x15a; // ETopbarPointsBarType
		constexpr auto TicketDisplaySide = 0x15b; // ETopbarTicketDisplaySide
		constexpr auto MarkerTimerType = 0x15c; // EGameTimerType
	}

	namespace n_UKSWeaponAttachment_ExtMagazine {
		constexpr auto ClipSize = 0x2f8; // int32_t
	}

	namespace n_UKSContextMenu {
		constexpr auto OnContextOptionsUpdated = 0x520; // FMulticastInlineDelegate
		constexpr auto OnReportPlayer = 0x530; // FMulticastInlineDelegate
		constexpr auto MenuContext = 0x540; // EPlayerContextMenuContext
		constexpr auto bAllowReportPlayer = 0x541; // bool
		constexpr auto CurrentPlayerInfo = 0x548; // UKSPlayerInfo*
		constexpr auto ContextMenuButtons = 0x550; // TArray<UKSContextMenuButton*>
		constexpr auto MenuViewSide = 0x560; // EViewSide
		constexpr auto CachedQueuedOrInMatch = 0x564; // int32_t
		constexpr auto bCachedReportedPlayer = 0x568; // bool
	}

	namespace n_UMasterMelee_WeaponComponent_C {
		constexpr auto WindupMontage = 0x1258; // UAnimMontage*
		constexpr auto ThrowMontage = 0x1260; // UAnimMontage*
		constexpr auto WindupSection = 0x1268; // FName
		constexpr auto ThrowSection = 0x1270; // FName
		constexpr auto WindupSound = 0x1278; // UAkAudioEvent*
		constexpr auto ThrowSound = 0x1280; // UAkAudioEvent*
		constexpr auto Cached Player 3P Fire Montage = 0x1288; // UAnimMontage*
		constexpr auto bHasBeenThrown = 0x1290; // bool
		constexpr auto FireSectionLowerBodyFacings = 0x1298; // TArray<EKSMovementDirection>
		constexpr auto MainCharacterVOComponent = 0x12a8; // UKSVOComponent*
		constexpr auto VOMeleeAttack = 0x12b0; // FKSVoicelineEvent
		constexpr auto IsLungingSFX_C = 0x12e8; // bool
		constexpr auto NoLungeRange = 0x12ec; // float
		constexpr auto CallFunc_IsLungingMontageActive_Lunging_Active = 0x12f0; // bool
		constexpr auto K2Node_Event_Data = 0x12f8; // FFullFireRepData
		constexpr auto K2Node_Event_PlayNoChainFireMontage = 0x1360; // bool
		constexpr auto K2Node_Event_DeltaSeconds = 0x1364; // float
		constexpr auto K2Node_DynamicCast_AsPlayer_Controller = 0x1368; // APlayerController*
		constexpr auto K2Node_DynamicCast_bSuccess = 0x1370; // bool
		constexpr auto K2Node_SwitchEnum_CmpSuccess = 0x1371; // bool
		constexpr auto K2Node_Event_OldState = 0x1372; // EWeaponStateNew
		constexpr auto K2Node_Event_NewState = 0x1373; // EWeaponStateNew
		constexpr auto K2Node_SwitchEnum_CmpSuccess_2 = 0x1374; // bool
		constexpr auto K2Node_SwitchEnum_CmpSuccess_3 = 0x1375; // bool
		constexpr auto CallFunc_GetAnimAimOffset_Priority = 0x1378; // int32_t
		constexpr auto CallFunc_GetAnimMontage_Priority = 0x137c; // int32_t
		constexpr auto CallFunc_Get_Character_Anim_Instance_Anim_Inst = 0x1380; // UKSCharacterAnimInst*
		constexpr auto CallFunc_Get_Character_Anim_Instance_Anim_Inst_2 = 0x1388; // UKSCharacterAnimInst*
		constexpr auto Temp_delegate_Variable = 0x1390; // FDelegate
		constexpr auto Temp_struct_Variable = 0x13a0; // TArray<FAkExternalSourceInfo>
		constexpr auto CallFunc_Get_Character_Anim_Instance_Anim_Inst_3 = 0x13b0; // UKSCharacterAnimInst*
		constexpr auto K2Node_SwitchEnum_CmpSuccess_4 = 0x13b8; // bool
		constexpr auto K2Node_MakeStruct_KSActionRestrictor = 0x13b9; // FKSActionRestrictor
		constexpr auto Temp_delegate_Variable_2 = 0x13c4; // FDelegate
		constexpr auto K2Node_MakeStruct_KSActionRestrictor_2 = 0x13d4; // FKSActionRestrictor
		constexpr auto Temp_bool_Has_Been_Initd_Variable = 0x13dc; // bool
		constexpr auto CallFunc_Get_Character_Anim_Instance_Anim_Inst_4 = 0x13e0; // UKSCharacterAnimInst*
		constexpr auto CallFunc_GetAudioEvent_Priority = 0x13e8; // int32_t
		constexpr auto CallFunc_GetAudioEvent_Priority_2 = 0x13ec; // int32_t
		constexpr auto CallFunc_Get_Character_Anim_Instance_Anim_Inst_5 = 0x13f0; // UKSCharacterAnimInst*
		constexpr auto CallFunc_GetAudioEvent_Priority_3 = 0x13f8; // int32_t
		constexpr auto CallFunc_Get_Character_Anim_Instance_Anim_Inst_6 = 0x1400; // UKSCharacterAnimInst*
		constexpr auto CallFunc_GetAnimMontage_Priority_2 = 0x1408; // int32_t
		constexpr auto Temp_bool_IsClosed_Variable = 0x140c; // bool
		constexpr auto Temp_struct_Variable_2 = 0x1410; // TArray<FAkExternalSourceInfo>
		constexpr auto K2Node_CustomEvent_IsLunging = 0x1420; // bool
		constexpr auto K2Node_CreateDelegate_OutputDelegate = 0x1424; // FDelegate
		constexpr auto CallFunc_Get_Character_3p_Fire_Section_3p_Fire_Section = 0x1434; // FName
		constexpr auto CallFunc_Get_Player_3P_Lunge_Montage_Montage = 0x1440; // UAnimMontage*
		constexpr auto CallFunc_Get_Character_Anim_Instance_Anim_Inst_7 = 0x1448; // UKSCharacterAnimInst*
		constexpr auto CallFunc_GetMeleeStillMontage_Montage = 0x1450; // UAnimMontage*
		constexpr auto CallFunc_GetMeleeStillMontage_Montage_2 = 0x1458; // UAnimMontage*
		constexpr auto K2Node_DynamicCast_AsMain_Character_VOComponent = 0x1460; // UKSVOComponent*
		constexpr auto K2Node_DynamicCast_bSuccess_2 = 0x1468; // bool
		constexpr auto CallFunc_Get_Character_Anim_Instance_Anim_Inst_8 = 0x1470; // UKSCharacterAnimInst*
		constexpr auto CallFunc_GetAudioEvent_Priority_4 = 0x1478; // int32_t
		constexpr auto K2Node_DynamicCast_AsMaster_Melee_ABP = 0x1480; // UKSWeaponAnimInstance*
		constexpr auto K2Node_DynamicCast_bSuccess_3 = 0x1488; // bool
		constexpr auto Temp_struct_Variable_3 = 0x1490; // TArray<FAkExternalSourceInfo>
		constexpr auto CallFunc_GetAudioEvent_Priority_5 = 0x14a0; // int32_t
		constexpr auto CallFunc_GetAudioEvent_Priority_6 = 0x14a4; // int32_t
		constexpr auto K2Node_Event_Fire_Data = 0x14a8; // FFullFireRepData
		constexpr auto K2Node_CreateDelegate_OutputDelegate_2 = 0x1510; // FDelegate
		constexpr auto K2Node_DynamicCast_AsKSWeapon_Asset_Melee = 0x1520; // UKSWeaponAsset_Melee*
		constexpr auto K2Node_DynamicCast_bSuccess_4 = 0x1528; // bool
		constexpr auto Temp_bool_Has_Been_Initd_Variable_2 = 0x1529; // bool
		constexpr auto Temp_object_Variable = 0x1530; // TArray<AActor*>
		constexpr auto Temp_delegate_Variable_3 = 0x1540; // FDelegate
		constexpr auto Temp_delegate_Variable_4 = 0x1550; // FDelegate
		constexpr auto Temp_struct_Variable_4 = 0x1560; // TArray<FAkExternalSourceInfo>
		constexpr auto Temp_delegate_Variable_5 = 0x1570; // FDelegate
		constexpr auto K2Node_CreateDelegate_OutputDelegate_3 = 0x1580; // FDelegate
		constexpr auto Temp_bool_IsClosed_Variable_2 = 0x1590; // bool
		constexpr auto Temp_struct_Variable_5 = 0x1598; // TArray<FAkExternalSourceInfo>
		constexpr auto Temp_struct_Variable_6 = 0x15a8; // TArray<FAkExternalSourceInfo>
		constexpr auto Temp_delegate_Variable_6 = 0x15b8; // FDelegate
	}

	namespace n_UBlueprintCore {
		constexpr auto SkeletonGeneratedClass = 0x28; // UObject*
		constexpr auto GeneratedClass = 0x30; // UObject*
		constexpr auto bLegacyNeedToPurgeSkelRefs = 0x38; // bool
		constexpr auto BlueprintGuid = 0x3c; // FGuid
	}

	namespace n_UShadowMapTexture2D {
		constexpr auto ShadowmapFlags = 0xe8; // EShadowMapFlags
	}

	namespace n_UKSCosmeticSlotDetails {
		constexpr auto CosmeticItem = 0x28; // UPlatformInventoryItem*
		constexpr auto StoreItem = 0x30; // UPUMG_StoreItem*
		constexpr auto AssociatedJobItem = 0x38; // UKSJobItem*
		constexpr auto MercCosmeticSlot = 0x40; // EMercCosmeticSlot
		constexpr auto WeaponSlot = 0x41; // EWeaponSlot
		constexpr auto SlotPosition = 0x44; // int32_t
		constexpr auto NavigatedFromNews = 0x48; // bool
	}

	namespace n_UBTDecorator_DoesPathExist {
		constexpr auto BlackboardKeyA = 0x68; // FBlackboardKeySelector
		constexpr auto BlackboardKeyB = 0x90; // FBlackboardKeySelector
		constexpr auto bUseSelf = 0xb8; // char : 1
		constexpr auto PathQueryType = 0xbc; // EPathExistanceQueryType
		constexpr auto FilterClass = 0xc0; // UNavigationQueryFilter*
	}

	namespace n_UKSJobSelectChoiceGridWidget {
		constexpr auto GridPanel = 0x548; // UGridPanel*
		constexpr auto ChoiceWidgetClass = 0x550; // UKSJobSelectionChoiceWidget*
		constexpr auto PaddingWidgetClass = 0x558; // UUserWidget*
		constexpr auto GridWidth = 0x560; // int32_t
		constexpr auto ActiveChoiceWidgets = 0x568; // TArray<UKSJobSelectionChoiceWidget*>
		constexpr auto ActivePaddingWidgets = 0x578; // TArray<UUserWidget*>
		constexpr auto OnChoiceWidgetHovered = 0x588; // FMulticastInlineDelegate
		constexpr auto OnChoiceWidgetUnhovered = 0x598; // FMulticastInlineDelegate
		constexpr auto OnChoiceGridRebuilt = 0x5a8; // FMulticastInlineDelegate
	}

	namespace n_ANavigationObjectBase {
		constexpr auto CapsuleComponent = 0x228; // UCapsuleComponent*
		constexpr auto GoodSprite = 0x230; // UBillboardComponent*
		constexpr auto BadSprite = 0x238; // UBillboardComponent*
		constexpr auto bIsPIEPlayerStart = 0x240; // char : 1
	}

	namespace n_UKSAudioPlayerStateParameterData {
		constexpr auto ActiveGameMode = 0x28; // FString
		constexpr auto ActiveMapLevel = 0x38; // FString
		constexpr auto ActiveMusicPack = 0x48; // FString
		constexpr auto ActivePlayerCharacter = 0x58; // FString
		constexpr auto IsSpectating = 0x68; // bool
		constexpr auto PreviousGameMode = 0x70; // FString
		constexpr auto PreviousMapLevel = 0x80; // FString
		constexpr auto PreviousMusicPack = 0x90; // FString
		constexpr auto PreviousPlayerCharacter = 0xa0; // FString
		constexpr auto PreviousIsSpectating = 0xb0; // bool
	}

	namespace n_UKSPlayerMod_HardLandAvoid {
		constexpr auto AllowBunnyHopping = 0x330; // bool
	}

	namespace n_UKSViewedPawnInventoryWidget {
		constexpr auto ActiveInventoryItem = 0x5b0; // FPlayerInventorySlot
	}

	namespace n_UVideoCaptureProtocol {
		constexpr auto bUseCompression = 0x68; // bool
		constexpr auto CompressionQuality = 0x6c; // float
	}

	namespace n_USoundfieldEffectBase {
		constexpr auto Settings = 0x28; // USoundfieldEffectSettingsBase*
	}

	namespace n_AKSWeapon_RemoteThrow {
		constexpr auto OnDetonatorEquipped = 0x840; // FMulticastInlineDelegate
		constexpr auto DetonatorAsset = 0x860; // UKSWeaponAsset*
		constexpr auto ReadyForDetonator = 0x868; // bool
	}

	namespace n_UAISenseEvent_Damage {
		constexpr auto Event = 0x28; // FAIDamageEvent
	}

	namespace n_AKSProjectile_MacGuffin {
		constexpr auto bAutomaticPickup = 0x950; // bool
	}

	namespace n_UANotifyState_ShowTablet_C {
		constexpr auto bReverse = 0x30; // bool
		constexpr auto bKeepTabletUnhidden = 0x31; // bool
	}

	namespace n_USoundCue {
		constexpr auto bPrimeOnLoad = 0x160; // char : 1
		constexpr auto FirstNode = 0x168; // USoundNode*
		constexpr auto VolumeMultiplier = 0x170; // float
		constexpr auto PitchMultiplier = 0x174; // float
		constexpr auto AttenuationOverrides = 0x178; // FSoundAttenuationSettings
		constexpr auto SubtitlePriority = 0x518; // float
		constexpr auto bOverrideAttenuation = 0x520; // char : 1
		constexpr auto bExcludeFromRandomNodeBranchCulling = 0x520; // char : 1
		constexpr auto CookedQualityIndex = 0x524; // int32_t
		constexpr auto bHasPlayWhenSilent = 0x528; // char : 1
	}

	namespace n_UAkComponent {
		constexpr auto bUseSpatialAudio = 0x228; // bool
		constexpr auto OcclusionCollisionChannel = 0x230; // ECollisionChannel
		constexpr auto EnableSpotReflectors = 0x234; // char : 1
		constexpr auto EarlyReflectionAuxBus = 0x238; // UAkAuxBus*
		constexpr auto EarlyReflectionAuxBusName = 0x240; // FString
		constexpr auto EarlyReflectionOrder = 0x250; // int32_t
		constexpr auto EarlyReflectionBusSendGain = 0x254; // float
		constexpr auto EarlyReflectionMaxPathLength = 0x258; // float
		constexpr auto roomReverbAuxBusGain = 0x25c; // float
		constexpr auto diffractionMaxEdges = 0x260; // int32_t
		constexpr auto diffractionMaxPaths = 0x264; // int32_t
		constexpr auto diffractionMaxPathLength = 0x268; // float
		constexpr auto DrawFirstOrderReflections = 0x26c; // char : 1
		constexpr auto DrawSecondOrderReflections = 0x26c; // char : 1
		constexpr auto DrawHigherOrderReflections = 0x26c; // char : 1
		constexpr auto DrawDiffraction = 0x26c; // char : 1
		constexpr auto StopWhenOwnerDestroyed = 0x270; // bool
		constexpr auto CurrentMaxAttenuation = 0x274; // float
		constexpr auto AttenuationScalingFactor = 0x278; // float
		constexpr auto OcclusionRefreshInterval = 0x27c; // float
		constexpr auto bUseReverbVolumes = 0x280; // bool
	}

	namespace n_UMaterialExpressionConstant {
		constexpr auto R = 0x40; // float
	}

	namespace n_UParticleModuleOrbit {
		constexpr auto ChainMode = 0x38; // EOrbitChainMode
		constexpr auto OffsetAmount = 0x40; // FRawDistributionVector
		constexpr auto OffsetOptions = 0x88; // FOrbitOptions
		constexpr auto RotationAmount = 0x90; // FRawDistributionVector
		constexpr auto RotationOptions = 0xd8; // FOrbitOptions
		constexpr auto RotationRateAmount = 0xe0; // FRawDistributionVector
		constexpr auto RotationRateOptions = 0x128; // FOrbitOptions
	}

	namespace n_UWBP_RankedIcon_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto RankedIcon = 0x240; // UWBP_AsyncIcon_C*
		constexpr auto RankedLabel = 0x248; // URichTextBlock*
		constexpr auto RankedLabelWrapper = 0x250; // UScaleBox*
		constexpr auto RankedLevel = 0x258; // UTextBlock*
		constexpr auto bDisplayRankName = 0x260; // bool
		constexpr auto bHideRankLevel = 0x261; // bool
		constexpr auto OnRankTierSet = 0x268; // FMulticastInlineDelegate
	}

	namespace n_UMovieScene3DConstraintSection {
		constexpr auto ConstraintId = 0xe0; // FGuid
		constexpr auto ConstraintBindingID = 0xf0; // FMovieSceneObjectBindingID
	}

	namespace n_UKSJobSelectionRules_Draft {
		constexpr auto InitialDraftList = 0xd8; // TArray<FJobSelectDraftingTask>
		constexpr auto RepeatingDraftList = 0xe8; // TArray<FJobSelectDraftingTask>
		constexpr auto FailSafeTimeToPick = 0xf8; // float
		constexpr auto bImmediatelyLock = 0xfc; // bool
		constexpr auto TimeToTrade = 0x100; // float
		constexpr auto bTeamNumRepresentSideNum = 0x104; // bool
		constexpr auto AlternateSecondaryRules = 0x108; // UKSJobSelectionRules*
	}

	namespace n_URifleReticle_C {
		constexpr auto UberGraphFrame = 0x258; // FPointerToUberGraphFrame
		constexpr auto GaugeFade = 0x260; // UWidgetAnimation*
		constexpr auto AmmoProgress = 0x268; // UOverlay*
		constexpr auto Center_Dot = 0x270; // UWidgetSwitcher*
		constexpr auto CenterDot_Image = 0x278; // UImage*
		constexpr auto CenterDot_Image_2 = 0x280; // UImage*
		constexpr auto circle_ammo_replenish = 0x288; // UImage*
		constexpr auto circle_progress = 0x290; // UImage*
		constexpr auto cirlce_progress_bg = 0x298; // UImage*
		constexpr auto reddot = 0x2a0; // UImage*
		constexpr auto WBP_ReticleHair_Bottom = 0x2a8; // UWBP_ReticleHair_C*
		constexpr auto WBP_ReticleHair_Left = 0x2b0; // UWBP_ReticleHair_C*
		constexpr auto WBP_ReticleHair_Right = 0x2b8; // UWBP_ReticleHair_C*
		constexpr auto WBP_ReticleHair_Top = 0x2c0; // UWBP_ReticleHair_C*
		constexpr auto GrenadeTickTimer = 0x2c8; // FTimerHandle
		constexpr auto OffsetScaleThreshold = 0x2d0; // float
		constexpr auto MagazineOffset = 0x2d4; // FVector2D
		constexpr auto LowAmmoThreshold_0_1 = 0x2dc; // float
		constexpr auto ReticleType = 0x2e0; // EReticleType
		constexpr auto MinOffset = 0x2e4; // float
		constexpr auto BonusAmmo = 0x2e8; // float
		constexpr auto BonusAmmoTime = 0x2ec; // float
		constexpr auto AmmoColor = 0x2f0; // FLinearColor
	}

	namespace n_UBlackboardKeyType_Class {
		constexpr auto BaseClass = 0x30; // UObject*
	}

	namespace n_UBTDecorator_IsBBEntryOfClass {
		constexpr auto TestClass = 0x90; // UObject*
	}

	namespace n_UKSBTTask_SetBetweenBlackboards {
		constexpr auto SourceBlackboardActor = 0x70; // FBlackboardKeySelector
		constexpr auto SourceKey = 0x98; // FBlackboardKeySelector
		constexpr auto TargetBlackboardActor = 0xc0; // FBlackboardKeySelector
		constexpr auto TargetKey = 0xe8; // FBlackboardKeySelector
	}

	namespace n_UMaterialExpressionClearCoatNormalCustomOutput {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UAkSwitchInitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettingsWithSampleRate
		constexpr auto CommunicationSettings = 0x90; // FAkCommunicationSettingsWithCommSelection
		constexpr auto AdvancedSettings = 0xb8; // FAkAdvancedInitializationSettingsWithMultiCoreRendering
	}

	namespace n_UPreviewActorLoadoutComponent {
		constexpr auto PreviewActorOwner = 0xb0; // AKSJobSelectPreviewActor*
	}

	namespace n_UKSTreeView {
		constexpr auto MyHud = 0x3d8; // TWeakObjectPtr<APUMG_HUD>
	}

	namespace n_UParticleModuleLocationPrimitiveCylinder {
		constexpr auto RadialVelocity = 0xb0; // char : 1
		constexpr auto StartRadius = 0xb8; // FRawDistributionFloat
		constexpr auto StartHeight = 0xe8; // FRawDistributionFloat
		constexpr auto HeightAxis = 0x118; // CylinderHeightAxis
	}

	namespace n_UComboBoxString {
		constexpr auto DefaultOptions = 0x110; // TArray<FString>
		constexpr auto SelectedOption = 0x120; // FString
		constexpr auto WidgetStyle = 0x130; // FComboBoxStyle
		constexpr auto ItemStyle = 0x520; // FTableRowStyle
		constexpr auto ContentPadding = 0xce8; // FMargin
		constexpr auto MaxListHeight = 0xcf8; // float
		constexpr auto HasDownArrow = 0xcfc; // bool
		constexpr auto EnableGamepadNavigationMode = 0xcfd; // bool
		constexpr auto Font = 0xd00; // FSlateFontInfo
		constexpr auto ForegroundColor = 0xd50; // FSlateColor
		constexpr auto bIsFocusable = 0xd78; // bool
		constexpr auto OnGenerateWidgetEvent = 0xd7c; // FDelegate
		constexpr auto OnSelectionChanged = 0xd90; // FMulticastInlineDelegate
		constexpr auto OnOpening = 0xda0; // FMulticastInlineDelegate
		constexpr auto OnClosing = 0xdb0; // FMulticastInlineDelegate
	}

	namespace n_AKSWayPoint {
		constexpr auto WayPointSetLinks = 0x258; // TMap<AKSWayPointSet*, FKSWayPointLink>
		constexpr auto DefaultWayPointLinks = 0x2a8; // FKSWayPointLink
		constexpr auto DefensePointProbability = 0x2c8; // float
		constexpr auto DefensePointWaitTimeMin = 0x2cc; // float
		constexpr auto DefensePointWaitTimeMax = 0x2d0; // float
		constexpr auto DefensePointsForward = 0x2d8; // TArray<AKSDefensePoint*>
		constexpr auto DefensePointsReverse = 0x2e8; // TArray<AKSDefensePoint*>
	}

	namespace n_UNetAnalyticsAggregatorConfig {
		constexpr auto NetAnalyticsData = 0x28; // TArray<FNetAnalyticsDataConfig>
	}

	namespace n_UPUMG_InputManager {
		constexpr auto InputFocusData = 0x28; // TMap<UPUMG_Widget*, FPUMG_InputFocusDetails>
		constexpr auto InputComponent = 0xa0; // UInputComponent*
		constexpr auto GlobalRouteName = 0xe4; // FName
		constexpr auto ContextActionInputComponent = 0xf0; // UInputComponent*
		constexpr auto ContextActionDataTableClassName = 0xf8; // FSoftObjectPath
		constexpr auto ContextActionDT = 0x110; // UDataTable*
		constexpr auto RouteContextInfoMap = 0x118; // TMap<FName, FRouteContextInfo>
		constexpr auto ActiveRoute = 0x168; // FName
		constexpr auto OverrideRouteStack = 0x170; // TArray<FName>
	}

	namespace n_UEditableGameplayTagQueryExpression_NoExprMatch {
		constexpr auto Expressions = 0x28; // TArray<UEditableGameplayTagQueryExpression*>
	}

	namespace n_UMovieSceneCameraAnimSection {
		constexpr auto AnimData = 0xe0; // FMovieSceneCameraAnimSectionData
		constexpr auto CameraAnim = 0x100; // UCameraAnim*
		constexpr auto PlayRate = 0x108; // float
		constexpr auto PlayScale = 0x10c; // float
		constexpr auto BlendInTime = 0x110; // float
		constexpr auto BlendOutTime = 0x114; // float
		constexpr auto bLooping = 0x118; // bool
	}

	namespace n_UMovieSceneLevelVisibilityTrack {
		constexpr auto Sections = 0x58; // TArray<UMovieSceneSection*>
	}

	namespace n_AKSWeapon_RemoteVehicle {
		constexpr auto RemoteVehicleToSpawn = 0x6d8; // AKSVehicle_Remote*
		constexpr auto RemoteVehicleRelativeTransform = 0x6e0; // FTransform
		constexpr auto SpawnedRemoteVehicle = 0x710; // AKSVehicle_Remote*
	}

	namespace n_UKSAnimNotifyState_Prop {
		constexpr auto SkeletalMesh = 0x30; // USkeletalMesh*
		constexpr auto AnimClass = 0x38; // UAnimInstance*
		constexpr auto StaticMesh = 0x40; // UStaticMesh*
		constexpr auto PropAttachmentInfo = 0x48; // FPoolAttachmentInfo
	}

	namespace n_AKSProjectile_RemoteTrigger {
		constexpr auto CanDetonateNow = 0xa10; // bool
		constexpr auto bCanDetonateBeforeStopping = 0xa11; // bool
		constexpr auto DetectionMod = 0xa18; // UKSPlayerMod*
		constexpr auto bRequiresMatchingDetonator = 0xa28; // bool
		constexpr auto RelativeInteractionPoint = 0xa2c; // FVector
		constexpr auto DetectedEnemy = 0xa39; // bool
	}

	namespace n_ULiveLinkTimeSynchronizationSource {
		constexpr auto SubjectName = 0x30; // FLiveLinkSubjectName
	}

	namespace n_USphereReflectionCaptureComponent {
		constexpr auto InfluenceRadius = 0x280; // float
		constexpr auto CaptureDistanceScale = 0x284; // float
		constexpr auto PreviewInfluenceRadius = 0x288; // UDrawSphereComponent*
	}

	namespace n_UMovieScenePrimitiveMaterialTrack {
		constexpr auto MaterialIndex = 0x88; // int32_t
	}

	namespace n_UClothLODDataCommon_Legacy {
		constexpr auto PhysicalMeshData = 0x28; // UClothPhysicalMeshDataBase_Legacy*
		constexpr auto ClothPhysicalMeshData = 0x30; // FClothPhysicalMeshData
		constexpr auto CollisionData = 0x128; // FClothCollisionData
	}

	namespace n_UJoinSessionCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UParticleModuleTypeDataRibbon {
		constexpr auto MaxTessellationBetweenParticles = 0x30; // int32_t
		constexpr auto SheetsPerTrail = 0x34; // int32_t
		constexpr auto MaxTrailCount = 0x38; // int32_t
		constexpr auto MaxParticleInTrailCount = 0x3c; // int32_t
		constexpr auto bDeadTrailsOnDeactivate = 0x40; // char : 1
		constexpr auto bDeadTrailsOnSourceLoss = 0x40; // char : 1
		constexpr auto bClipSourceSegement = 0x40; // char : 1
		constexpr auto bEnablePreviousTangentRecalculation = 0x40; // char : 1
		constexpr auto bTangentRecalculationEveryFrame = 0x40; // char : 1
		constexpr auto bSpawnInitialParticle = 0x40; // char : 1
		constexpr auto RenderAxis = 0x44; // ETrailsRenderAxisOption
		constexpr auto TangentSpawningScalar = 0x48; // float
		constexpr auto bRenderGeometry = 0x4c; // char : 1
		constexpr auto bRenderSpawnPoints = 0x4c; // char : 1
		constexpr auto bRenderTangents = 0x4c; // char : 1
		constexpr auto bRenderTessellation = 0x4c; // char : 1
		constexpr auto TilingDistance = 0x50; // float
		constexpr auto DistanceTessellationStepSize = 0x54; // float
		constexpr auto bEnableTangentDiffInterpScale = 0x58; // char : 1
		constexpr auto TangentTessellationScalar = 0x5c; // float
	}

	namespace n_UKSActivityInstance {
		constexpr auto OnProgressIncremented = 0x28; // FMulticastInlineDelegate
		constexpr auto OnProgressTierReached = 0x38; // FMulticastInlineDelegate
		constexpr auto OnProgressCompleted = 0x48; // FMulticastInlineDelegate
		constexpr auto OnProgressInitialized = 0x58; // FMulticastInlineDelegate
		constexpr auto TrackerInstance = 0x68; // UKSEventTracker*
		constexpr auto BehaviorInstances = 0x70; // TArray<UKSActivityBehavior*>
		constexpr auto ProgressCount = 0x80; // int32_t
		constexpr auto HasProgressBeenInitialized = 0x84; // bool
		constexpr auto ActivityTiers = 0x88; // TArray<FActivityTier>
		constexpr auto PlayerController = 0xb8; // TWeakObjectPtr<AKSPlayerController>
		constexpr auto Activity = 0xc0; // UKSActivity*
		constexpr auto ActivityManager = 0xc8; // TWeakObjectPtr<UKSActivityManagerBase>
		constexpr auto bIsInitialized = 0xd0; // bool
		constexpr auto InitialProgress = 0xd4; // int32_t
		constexpr auto InitialUnlocked = 0xd8; // bool
		constexpr auto CurrentProgressEarned = 0xdc; // int32_t
		constexpr auto TotalProgressEarned = 0xe0; // int32_t
		constexpr auto ShouldSetProgress = 0xe4; // bool
		constexpr auto PlatformProgressPerAchievement = 0xe8; // TMap<FString, double>
		constexpr auto TotalProgressEarnedBySource = 0x138; // TMap<ERewardSource, float>
		constexpr auto TotalProgressEarnedByEvent = 0x188; // TMap<FString, float>
		constexpr auto TotalProgressEarnedByBooster = 0x1d8; // TMap<FString, float>
		constexpr auto ExtraData = 0x228; // TMap<FString, float>
	}

	namespace n_ULoginTwoFactor_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto BackButton = 0x528; // UStandardButton_C*
		constexpr auto BG = 0x530; // UImage*
		constexpr auto CodeField = 0x538; // UEditableText*
		constexpr auto NextButton = 0x540; // UStandardButton_C*
		constexpr auto NextSwitcher = 0x548; // UWidgetSwitcher*
		constexpr auto OutlineContainer = 0x550; // UOutlineContainer_C*
		constexpr auto TitleLogo_2 = 0x558; // UImage*
		constexpr auto WarningIcon = 0x560; // UImage*
		constexpr auto WarningText = 0x568; // UTextBlock*
		constexpr auto WBP_ModalPopupContainer = 0x570; // UWBP_ModalPopupContainer_C*
	}

	namespace n_USoundNodeDialoguePlayer {
		constexpr auto DialogueWaveParameter = 0x48; // FDialogueWaveParameter
		constexpr auto bLooping = 0x68; // char : 1
	}

	namespace n_UAkMacInitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettingsWithSampleRate
		constexpr auto CommunicationSettings = 0x90; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xb8; // FAkAdvancedInitializationSettingsWithMultiCoreRendering
	}

	namespace n_UInputAxisDelegateBinding {
		constexpr auto InputAxisDelegateBindings = 0x28; // TArray<FBlueprintInputAxisDelegateBinding>
	}

	namespace n_UKSJobEquipmentRuleComponent {
		constexpr auto KSJobEquipmentTypesToGive = 0xb0; // FKSJobEquipmentTypesToGive
	}

	namespace n_UKSNavigationQueryFilter {
		constexpr auto DefaultFilter = 0x48; // UNavigationQueryFilter*
		constexpr auto NoJumpFilter = 0x50; // UNavigationQueryFilter*
		constexpr auto NoZiplineFilter = 0x58; // UNavigationQueryFilter*
		constexpr auto NoJumpNoZiplineFilter = 0x60; // UNavigationQueryFilter*
		constexpr auto MaxSearchNodes = 0x68; // uint32_t
	}

	namespace n_UTickAnimationManager {
		constexpr auto AnimsByName = 0x28; // TMap<FName, FTickAnimationParams>
	}

	namespace n_UWBP_SectionListingBar_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto LeftGamepadTrigger = 0x528; // UKSAsyncImage*
		constexpr auto RightGamepadTrigger = 0x530; // UKSAsyncImage*
		constexpr auto SectionButtons = 0x538; // UHorizontalBox*
		constexpr auto TriggerContainer = 0x540; // UOverlay*
		constexpr auto TriggerContainer1 = 0x548; // UOverlay*
		constexpr auto OnSectionSelected = 0x550; // FMulticastInlineDelegate
	}

	namespace n_UWBP_PlayerProfileScreen_StatPanel_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto Image_187 = 0x528; // UImage*
		constexpr auto Loading = 0x530; // UWBP_ThrobberHorizontal_C*
		constexpr auto LoadingWrapper = 0x538; // UVerticalBox*
		constexpr auto PanelContent = 0x540; // UVerticalBox*
		constexpr auto Stat1 = 0x548; // UWBP_PlayerProfileScreen_StatEntry_C*
		constexpr auto Stat2 = 0x550; // UWBP_PlayerProfileScreen_StatEntry_C*
		constexpr auto Stat3 = 0x558; // UWBP_PlayerProfileScreen_StatEntry_C*
		constexpr auto Stat4 = 0x560; // UWBP_PlayerProfileScreen_StatEntry_C*
		constexpr auto Title = 0x568; // UTextBlock*
		constexpr auto TitleWrapper = 0x570; // UVerticalBox*
		constexpr auto WBP_PanelButton = 0x578; // UWBP_PanelButton_C*
		constexpr auto WBP_PlayerProfileScreen_AccountLevel = 0x580; // UWBP_PlayerProfileScreen_AccountLevel_C*
		constexpr auto WidgetSwitcher_3 = 0x588; // UWidgetSwitcher*
		constexpr auto IsDisabled = 0x590; // bool
	}

	namespace n_UKSAssetManagerSettings {
		constexpr auto bCookAndPackageActivities = 0x38; // bool
		constexpr auto bCookAndPackageJobActivities = 0x39; // bool
		constexpr auto bCookAndPackageWeaponActivities = 0x3a; // bool
		constexpr auto ActiveContentProductionChunkId = 0x3c; // int32_t
		constexpr auto ActiveMapProductionChunkId = 0x40; // int32_t
	}

	namespace n_UProceduralFoliageComponent {
		constexpr auto FoliageSpawner = 0xb0; // UProceduralFoliageSpawner*
		constexpr auto TileOverlap = 0xb8; // float
		constexpr auto SpawningVolume = 0xc0; // AVolume*
		constexpr auto ProceduralGuid = 0xc8; // FGuid
	}

	namespace n_UInAppPurchaseRestoreCallbackProxy {
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UMovieScene3DAttachSection {
		constexpr auto AttachSocketName = 0x108; // FName
		constexpr auto AttachComponentName = 0x110; // FName
		constexpr auto AttachmentLocationRule = 0x118; // EAttachmentRule
		constexpr auto AttachmentRotationRule = 0x119; // EAttachmentRule
		constexpr auto AttachmentScaleRule = 0x11a; // EAttachmentRule
		constexpr auto DetachmentLocationRule = 0x11b; // EDetachmentRule
		constexpr auto DetachmentRotationRule = 0x11c; // EDetachmentRule
		constexpr auto DetachmentScaleRule = 0x11d; // EDetachmentRule
	}

	namespace n_UNiagaraDataInterfaceCamera {
		constexpr auto PlayerControllerIndex = 0x30; // int32_t
	}

	namespace n_AKSGameMode_RoundGame {
		constexpr auto bRunRespawnAndEliminationLogicBetweenRounds = 0xf88; // bool
		constexpr auto PostRoundDuration = 0xf8c; // float
		constexpr auto FinalPostRoundDuration = 0xf90; // float
		constexpr auto bSkipSelectionCinematicAfterFirstRound = 0xf94; // bool
		constexpr auto RoundStateSetupComplete = 0xf98; // FName
		constexpr auto RoundNumber = 0xfa0; // int32_t
		constexpr auto RoundsNeededToWin = 0xfa4; // int32_t
		constexpr auto TotalNumberOfRounds = 0xfa8; // int32_t
		constexpr auto bPlayersCanRestartDuringRoundInProgress = 0xfac; // bool
		constexpr auto bHoldPlayerRestartUntilFirstRoundSetup = 0xfad; // bool
		constexpr auto bWinRoundByElimination = 0xfae; // bool
		constexpr auto bAwardPointOnDraw = 0xfaf; // bool
		constexpr auto RoundSetupTime = 0xfb0; // float
		constexpr auto RoundDuration = 0xfb4; // float
		constexpr auto RoundStartPhase = 0xfb8; // FName
		constexpr auto bNewPawnOnRoundStart = 0xfc0; // bool
		constexpr auto WinByEliminationTeam = 0xfd0; // AKSTeamState*
		constexpr auto NumberOfConsecutiveLossesToEnableEpicGroupSiteGuarantees = 0xff4; // int32_t
		constexpr auto bKillDownedPlayersAtEndOfRound = 0xff8; // bool
		constexpr auto bSpareWinningDownedPlayers = 0xff9; // bool
		constexpr auto InventoryRestore = 0xffb; // EPlayerInfoInventoryRestoreType
		constexpr auto bAllowPlayersToKeepInventoryBetweenRounds = 0xffc; // bool
		constexpr auto bRequirePlayerToBeAlive = 0xffd; // bool
		constexpr auto bRequirePlayerToBeStanding = 0xffe; // bool
		constexpr auto bRequirePlayerToBeOnWinningTeam = 0xfff; // bool
		constexpr auto bSideSwapWipesEquipment = 0x1000; // bool
		constexpr auto bRestoreEquipment = 0x1001; // bool
		constexpr auto InventoryRestoreEquipPointRequirements = 0x1008; // FGameplayTagQuery
		constexpr auto bRestoreSlotlessEquipment = 0x1050; // bool
		constexpr auto bRestoreNonEquipment = 0x1051; // bool
		constexpr auto GuaranteedInventory = 0x1058; // TArray<FInventoryRestoreInfo>
		constexpr auto FlipTeamSideFrequency = 0x1068; // int32_t
		constexpr auto MaxTeamSideFlipsPerMatch = 0x106c; // int32_t
		constexpr auto bSideSwapClearsConsecutiveLosses = 0x1070; // bool
		constexpr auto TeamSideFlipsThisMatch = 0x1074; // int32_t
		constexpr auto LatestTeamSideFlipRoundNumber = 0x1078; // int32_t
		constexpr auto bBlockWeaponsPostRound = 0x107c; // bool
	}

	namespace n_UDataTable {
		constexpr auto RowStruct = 0x28; // UScriptStruct*
		constexpr auto bStripFromClientBuilds = 0x80; // char : 1
		constexpr auto bIgnoreExtraFields = 0x80; // char : 1
		constexpr auto bIgnoreMissingFields = 0x80; // char : 1
		constexpr auto ImportKeyField = 0x88; // FString
	}

	namespace n_UWBP_StoreDiscountTag_C {
		constexpr auto background = 0x238; // UImage*
		constexpr auto Background_Dimmer = 0x240; // UImage*
		constexpr auto DiscountTag = 0x248; // UTextBlock*
		constexpr auto EndDecro = 0x250; // UImage*
		constexpr auto GradientImage = 0x258; // UImage*
	}

	namespace n_USkinnableSkeletalMeshComponent {
		constexpr auto bDelaySkinUpdatesUntilTick = 0xbb0; // bool
		constexpr auto bSkinUpdateIsQueued = 0xbb1; // bool
		constexpr auto SkeletalMeshKeyword = 0xbb4; // FName
		constexpr auto FailSafeSkeletalMesh = 0xbc0; // USkeletalMesh*
		constexpr auto PhysicsAssetKeyword = 0xbc8; // FName
		constexpr auto FailSafePhysicsAsset = 0xbd0; // UPhysicsAsset*
		constexpr auto AnimInstanceClassKeyword = 0xbd8; // FName
		constexpr auto FailSafeAnimClass = 0xbe0; // UAnimInstance*
		constexpr auto LastSkinnedAnimClass = 0xbe8; // UAnimInstance*
		constexpr auto bForceAnimationUpdateOnSkinUpdate = 0xbf0; // bool
		constexpr auto SkinObject = 0xbf8; // UMultiSkinObject*
		constexpr auto OnAnimInitializedOnSkinnableMeshDel = 0xc00; // FMulticastInlineDelegate
		constexpr auto bAllowMaterialSkinning = 0xc40; // bool
		constexpr auto MaterialSkinningPrefixes = 0xc48; // TArray<FString>
		constexpr auto MaterialSkinningPrefixes_New = 0xc58; // TSet<FName>
		constexpr auto ForcedLodModel_Skinned = 0xcf0; // int32_t
	}

	namespace n_UHLODProxy {
		constexpr auto ProxyMeshes = 0x28; // TArray<FHLODProxyMesh>
	}

	namespace n_UAmbisonicsEncodingSettings {
		constexpr auto AmbisonicsOrder = 0x28; // int32_t
	}

	namespace n_AKSFreezeFramePawn {
		constexpr auto PawnMeshComponent = 0x280; // USkeletalMeshComponent*
		constexpr auto PawnMesh = 0x3d0; // USkeletalMesh*
		constexpr auto PawnSkinTable = 0x3d8; // UDataTable*
		constexpr auto PawnAnimation = 0x3e0; // UAnimationAsset*
		constexpr auto FacialAnimationSet = 0x3e8; // UAnimSequence*
		constexpr auto FacialAnimationPose = 0x3f0; // EKSEmotion
		constexpr auto AnimationMode = 0x3f1; // EAnimationMode
		constexpr auto AnimationClass = 0x3f8; // UKSFreezeFramePawnAnimInst*
		constexpr auto AnimationPlayRate = 0x400; // float
		constexpr auto AnimationStartTime = 0x404; // float
		constexpr auto Props = 0x408; // TArray<FKSFreezeFramePawnProp>
		constexpr auto WeaponProps = 0x418; // TArray<FKSFreezeFramePawnWeaponProp>
		constexpr auto VFXEntries = 0x428; // TArray<FKSFreezeFrameVFXEntry>
	}

	namespace n_UKSTouchHudWidget {
		constexpr auto bAlwaysShowQuickMelee = 0x520; // bool
		constexpr auto bIsInEditMode = 0x521; // bool
		constexpr auto QuickMeleeWeaponAsset = 0x528; // UKSWeaponAsset_Melee*
		constexpr auto ThrowGrenadeButton = 0x530; // UWidget*
		constexpr auto QuickMeleeButton = 0x538; // UWidget*
		constexpr auto AbilityButton = 0x540; // UWidget*
		constexpr auto MyAimDownSightsWidget = 0x548; // UImage*
		constexpr auto MyAutoSprintWidget = 0x550; // UImage*
		constexpr auto AimDownSightsEnableIcon = 0x558; // UTexture2D*
		constexpr auto AimDownSightsCancelIcon = 0x560; // UTexture2D*
		constexpr auto AutoSprintEnableIcon = 0x568; // UTexture2D*
		constexpr auto AutoSprintCancelIcon = 0x570; // UTexture2D*
		constexpr auto ContextualPingButton = 0x578; // UWidget*
		constexpr auto PrimaryWeaponSwitcher = 0x580; // UWidgetSwitcher*
	}

	namespace n_UMaterialExpressionCrossProduct {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_UPUMG_ChatDataFactory {
		constexpr auto OnChatMessageReceived = 0x38; // FMulticastInlineDelegate
		constexpr auto OnChatMessageRead = 0x48; // FMulticastInlineDelegate
		constexpr auto OnChatChannelJoined = 0x58; // FMulticastInlineDelegate
		constexpr auto OnChatChannelLeft = 0x68; // FMulticastInlineDelegate
		constexpr auto ChatMessageIds = 0x78; // TArray<int32_t>
		constexpr auto PendingChatMessageIds = 0x88; // TArray<int32_t>
		constexpr auto ChatMessagesById = 0x98; // TMap<int32_t, FPUMG_ChatData>
		constexpr auto LastCreatedMessageId = 0xe8; // int32_t
		constexpr auto m_FilteredPlayerIds = 0xf0; // TArray<int64_t>
		constexpr auto ChatCommands = 0x100; // TArray<FPUMG_ChatCommand>
	}

	namespace n_UAnimBoneCompressionSettings {
		constexpr auto Codecs = 0x28; // TArray<UAnimBoneCompressionCodec*>
	}

	namespace n_UAkMediaAsset {
		constexpr auto ID = 0x28; // uint32_t
		constexpr auto UserData = 0x30; // TArray<UObject*>
		constexpr auto CurrentMediaAssetData = 0x40; // UAkMediaAssetData*
	}

	namespace n_UKSLoadoutClass {
		constexpr auto DynamicPoseImage = 0x250; // TSoftObjectPtr<UTexture2D>
		constexpr auto ThemeColorLight = 0x278; // FLinearColor
		constexpr auto ThemeColorDark = 0x288; // FLinearColor
		constexpr auto PerkCategories = 0x298; // TArray<TSoftObjectPtr<UPerkCategory>>
		constexpr auto AvailablePerks = 0x2a8; // TArray<TSoftObjectPtr<UKSPlayerMod>>
		constexpr auto AvailableAbilities = 0x2b8; // TArray<TSoftObjectPtr<UKSPlayerMod_Activated>>
		constexpr auto AvailableGadgets = 0x2c8; // TArray<TSoftObjectPtr<UKSWeaponAsset>>
		constexpr auto CanUseGlobalGadgets = 0x2d8; // bool
		constexpr auto AvailablePistols = 0x2e0; // TArray<TSoftObjectPtr<UKSWeaponAsset>>
		constexpr auto CanUseGlobalPistols = 0x2f0; // bool
		constexpr auto AutoEquippedMods = 0x2f8; // TArray<TSoftObjectPtr<UKSPlayerMod>>
	}

	namespace n_UKSWeaponMilestoneUnlock {
		constexpr auto WeaponReference = 0x250; // TSoftObjectPtr<UKSWeaponAsset>
	}

	namespace n_UAnimCompress_PerTrackCompression {
		constexpr auto MaxZeroingThreshold = 0x60; // float
		constexpr auto MaxPosDiffBitwise = 0x64; // float
		constexpr auto MaxAngleDiffBitwise = 0x68; // float
		constexpr auto MaxScaleDiffBitwise = 0x6c; // float
		constexpr auto AllowedRotationFormats = 0x70; // TArray<AnimationCompressionFormat>
		constexpr auto AllowedTranslationFormats = 0x80; // TArray<AnimationCompressionFormat>
		constexpr auto AllowedScaleFormats = 0x90; // TArray<AnimationCompressionFormat>
		constexpr auto bResampleAnimation = 0xa0; // char : 1
		constexpr auto ResampledFramerate = 0xa4; // float
		constexpr auto MinKeysForResampling = 0xa8; // int32_t
		constexpr auto bUseAdaptiveError = 0xac; // char : 1
		constexpr auto bUseOverrideForEndEffectors = 0xac; // char : 1
		constexpr auto TrackHeightBias = 0xb0; // int32_t
		constexpr auto ParentingDivisor = 0xb4; // float
		constexpr auto ParentingDivisorExponent = 0xb8; // float
		constexpr auto bUseAdaptiveError2 = 0xbc; // char : 1
		constexpr auto RotationErrorSourceRatio = 0xc0; // float
		constexpr auto TranslationErrorSourceRatio = 0xc4; // float
		constexpr auto ScaleErrorSourceRatio = 0xc8; // float
		constexpr auto MaxErrorPerTrackRatio = 0xcc; // float
		constexpr auto PerturbationProbeSize = 0xd0; // float
	}

	namespace n_AKSProjectile_GrenadeSpread {
		constexpr auto TimeToStartSpread = 0xa00; // float
		constexpr auto TickSpreadFrequency = 0xa04; // float
		constexpr auto TickSpreadTimerHandle = 0xa08; // FTimerHandle
		constexpr auto SpreadRuleClass = 0xa10; // UKSGrenadeSpreadRule*
		constexpr auto NormalZMin = 0xa18; // float
		constexpr auto SpreadList = 0xa20; // FKSSpreadList
		constexpr auto MaxSpreadDistance = 0xb40; // float
		constexpr auto PreventCollisionBeneathSpread = 0xb44; // bool
		constexpr auto SpreadTimerHandle = 0xb48; // FTimerHandle
		constexpr auto QueuedTransforms = 0xb50; // TArray<FTransform>
		constexpr auto SpreadStartLocations = 0xb60; // TArray<FVector>
		constexpr auto SpreadProjectileCount = 0xb70; // int32_t
		constexpr auto SpreadProjectiles = 0xb78; // TArray<AKSSpreadProjectile*>
		constexpr auto SpreadProjectileToSpawn = 0xb88; // AKSSpreadProjectile*
		constexpr auto SpreadProjectileRotationMin = 0xb90; // float
		constexpr auto SpreadProjectileRotationMax = 0xb94; // float
		constexpr auto SpreadProjectileHeight = 0xb98; // float
		constexpr auto ChildSpreadGrenades = 0xba0; // TArray<TWeakObjectPtr<AKSProjectile_GrenadeSpread>>
		constexpr auto ParentSpreadGrenade = 0xbb0; // TWeakObjectPtr<AKSProjectile_GrenadeSpread>
		constexpr auto MaxHealthPerTransform = 0xbb8; // float
		constexpr auto DamageTypeImmunities = 0xbc0; // TArray<EDamageCategory>
		constexpr auto SphereCollisionRadius = 0xbd0; // float
		constexpr auto bExtinguishable = 0xbd4; // bool
		constexpr auto OverlapClassFilter = 0xbd8; // AActor*
		constexpr auto OverlapObjectTypes = 0xbe0; // TArray<EObjectTypeQuery>
		constexpr auto ToDestroyOnOverlap = 0xbf0; // TArray<TSoftClassPtr<UObject>>
		constexpr auto bUseDestroyOnOverlapList = 0xc00; // bool
		constexpr auto LingerDuration = 0xc18; // float
		constexpr auto AffectedActors = 0xc20; // TArray<AActor*>
		constexpr auto LingeringAffectedActors = 0xc30; // TMap<AActor*, FTimerHandle>
		constexpr auto TickDamageAmount = 0xc84; // float
		constexpr auto TickDamageClass = 0xc88; // UDamageType*
		constexpr auto TickDamageFrequency = 0xc90; // float
		constexpr auto KSNavModifierComponent = 0xc98; // UKSNavModifierComponent*
		constexpr auto ParticleSystemComponents = 0xca0; // TArray<UParticleSystemComponent*>
		constexpr auto DecalComponents = 0xcb0; // TArray<UDecalComponent*>
		constexpr auto MeshComponents = 0xcc0; // TArray<UMeshComponent*>
		constexpr auto ParticleSystemTemplate = 0xcd0; // UParticleSystem*
		constexpr auto TranslucencySortPriority = 0xcd8; // int32_t
		constexpr auto PreDeactivateTime = 0xcdc; // float
		constexpr auto ParticleOcclusionRadius = 0xce0; // float
		constexpr auto DecalMaterial = 0xce8; // UMaterialInterface*
		constexpr auto DecalDepth = 0xcf0; // float
		constexpr auto MeshAsset = 0xcf8; // UObject*
		constexpr auto FriendlyMaterial = 0xd00; // UMaterialInstance*
		constexpr auto EnemyMaterial = 0xd08; // UMaterialInstance*
		constexpr auto MeshOutlineThickness = 0xd10; // float
		constexpr auto SkeletalAnimClass = 0xd18; // UAnimInstance*
		constexpr auto MeshTransform = 0xd20; // FTransform
	}

	namespace n_UWBP_ReticleHair_C {
		constexpr auto CrosshairImage = 0x238; // UImage*
		constexpr auto CrosshairTextures = 0x240; // TArray<UTexture2D*>
	}

	namespace n_UCurveLinearColor {
		constexpr auto FloatCurves = 0x30; // FRichCurve [0x4]
		constexpr auto AdjustHue = 0x230; // float
		constexpr auto AdjustSaturation = 0x234; // float
		constexpr auto AdjustBrightness = 0x238; // float
		constexpr auto AdjustBrightnessCurve = 0x23c; // float
		constexpr auto AdjustVibrance = 0x240; // float
		constexpr auto AdjustMinAlpha = 0x244; // float
		constexpr auto AdjustMaxAlpha = 0x248; // float
	}

	namespace n_UBlackboardComponent {
		constexpr auto BrainComp = 0xb0; // UBrainComponent*
		constexpr auto DefaultBlackboardAsset = 0xb8; // UBlackboardData*
		constexpr auto BlackboardAsset = 0xc0; // UBlackboardData*
		constexpr auto KeyInstances = 0xe8; // TArray<UBlackboardKeyType*>
	}

	namespace n_UBTDecorator_TagCooldown {
		constexpr auto CooldownTag = 0x68; // FGameplayTag
		constexpr auto CooldownDuration = 0x70; // float
		constexpr auto bAddToExistingDuration = 0x74; // bool
		constexpr auto bActivatesCooldown = 0x75; // bool
	}

	namespace n_UKSSortableVerticalBox {
		constexpr auto OnSortCompareChildrenEvent = 0x138; // FDelegate
	}

	namespace n_UKSViewRedirector_OpeningCinematic {
		constexpr auto MediaPlayerDataTable = 0x28; // UDataTable*
	}

	namespace n_UKSActivityRequirement_Experiment {
		constexpr auto ExperimentName = 0x30; // FString
		constexpr auto RequireEnabled = 0x40; // bool
	}

	namespace n_AKSWeapon_ReviveDartDirect {
		constexpr auto DartProjectile = 0x6f0; // TWeakObjectPtr<AKSProjectile_ReviveDart>
		constexpr auto OnSucceed = 0x6f8; // FMulticastInlineDelegate
		constexpr auto OnFailed = 0x708; // FMulticastInlineDelegate
	}

	namespace n_UPostEventAtLocationAsync {
		constexpr auto Completed = 0x30; // FMulticastInlineDelegate
	}

	namespace n_UKSPlayerJobSelectWidgetBase {
		constexpr auto JobSelectionManager = 0x520; // UKSJobSelectionManager*
		constexpr auto JobSelectionComponent = 0x528; // UKSJobSelectionComponent*
		constexpr auto JobDetailEntries = 0x530; // TArray<UJobSelectionEntryDetails*>
		constexpr auto CurrentPlayerSelectionState = 0x540; // EPlayerSelectionState
		constexpr auto EnemyJobDetailsEntries = 0x548; // TArray<UJobSelectionEntryDetails*>
		constexpr auto BoundEnemyJobSelectionComponent = 0x558; // TWeakObjectPtr<UKSJobSelectionComponent>
		constexpr auto BoundLocalJobSelectionComponent = 0x560; // TWeakObjectPtr<UKSJobSelectionComponent>
	}

	namespace n_UKSWeaponAttachment_ScopeFixedFOV {
		constexpr auto AimDownSightsFov = 0x2f8; // float
	}

	namespace n_UClothPhysicalMeshDataBase_Legacy {
		constexpr auto Vertices = 0x28; // TArray<FVector>
		constexpr auto Normals = 0x38; // TArray<FVector>
		constexpr auto Indices = 0x48; // TArray<uint32_t>
		constexpr auto InverseMasses = 0x58; // TArray<float>
		constexpr auto BoneData = 0x68; // TArray<FClothVertBoneData>
		constexpr auto NumFixedVerts = 0x78; // int32_t
		constexpr auto MaxBoneWeights = 0x7c; // int32_t
		constexpr auto SelfCollisionIndices = 0x80; // TArray<uint32_t>
	}

	namespace n_UMorphTarget {
		constexpr auto BaseSkelMesh = 0x28; // USkeletalMesh*
	}

	namespace n_USubmixEffectDelayPreset {
		constexpr auto Settings = 0x74; // FSubmixEffectDelaySettings
		constexpr auto DynamicSettings = 0x80; // FSubmixEffectDelaySettings
	}

	namespace n_USynthComponentMonoWaveTable {
		constexpr auto OnTableAltered = 0x6e0; // FMulticastInlineDelegate
		constexpr auto OnNumTablesChanged = 0x6f0; // FMulticastInlineDelegate
		constexpr auto CurrentPreset = 0x700; // UMonoWaveTableSynthPreset*
	}

	namespace n_UKSBTD_AbilityState {
		constexpr auto bCheckAbilityReady = 0x90; // bool
		constexpr auto AbilityReady = 0x91; // EBasicKeyOperation
		constexpr auto bCheckActive = 0x92; // bool
		constexpr auto AbilityActive = 0x93; // EBasicKeyOperation
	}

	namespace n_USoundNodeSoundClass {
		constexpr auto SoundClassOverride = 0x48; // USoundClass*
	}

	namespace n_ATriggerBase {
		constexpr auto CollisionComponent = 0x220; // UShapeComponent*
	}

	namespace n_UDeviceProfileManager {
		constexpr auto Profiles = 0x28; // TArray<UObject*>
	}

	namespace n_UParticleModuleVectorFieldScale {
		constexpr auto VectorFieldScale = 0x30; // UDistributionFloat*
		constexpr auto VectorFieldScaleRaw = 0x38; // FRawDistributionFloat
	}

	namespace n_USceneCaptureComponent2D {
		constexpr auto ProjectionType = 0x2a0; // ECameraProjectionMode
		constexpr auto FOVAngle = 0x2a4; // float
		constexpr auto OrthoWidth = 0x2a8; // float
		constexpr auto TextureTarget = 0x2b0; // UTextureRenderTarget2D*
		constexpr auto CompositeMode = 0x2b8; // ESceneCaptureCompositeMode
		constexpr auto PostProcessSettings = 0x2c0; // FPostProcessSettings
		constexpr auto PostProcessBlendWeight = 0x810; // float
		constexpr auto bOverride_CustomNearClippingPlane = 0x814; // char : 1
		constexpr auto CustomNearClippingPlane = 0x818; // float
		constexpr auto bUseCustomProjectionMatrix = 0x81c; // bool
		constexpr auto CustomProjectionMatrix = 0x820; // FMatrix
		constexpr auto bEnableClipPlane = 0x860; // bool
		constexpr auto ClipPlaneBase = 0x864; // FVector
		constexpr auto ClipPlaneNormal = 0x870; // FVector
		constexpr auto bCameraCutThisFrame = 0x87c; // char : 1
		constexpr auto bConsiderUnrenderedOpaquePixelAsFullyTranslucent = 0x87c; // char : 1
		constexpr auto bDisableFlipCopyGLES = 0x880; // bool
	}

	namespace n_UAISenseConfig_Damage {
		constexpr auto Implementation = 0x48; // UAISense_Damage*
	}

	namespace n_UBehaviorTreeManager {
		constexpr auto MaxDebuggerSteps = 0x28; // int32_t
		constexpr auto LoadedTemplates = 0x30; // TArray<FBehaviorTreeTemplateInfo>
		constexpr auto ActiveComponents = 0x40; // TArray<UBehaviorTreeComponent*>
	}

	namespace n_UKSCinematicDataContainer {
		constexpr auto CinematicDatas = 0x30; // TMap<FName, FKSCinematicData>
	}

	namespace n_UKSPlayerMod_GiveEquipPoints {
		constexpr auto EquipPointsToGive = 0x330; // FGameplayTagContainer
	}

	namespace n_ABP_LobbyState_C {
		constexpr auto UberGraphFrame = 0x290; // FPointerToUberGraphFrame
		constexpr auto DefaultSceneRoot = 0x298; // USceneComponent*
		constexpr auto EmoteMusicManager = 0x2a0; // AKSEmoteMusicManager*
	}

	namespace n_UAnimBlueprintGeneratedClass {
		constexpr auto BakedStateMachines = 0x330; // TArray<FBakedAnimationStateMachine>
		constexpr auto TargetSkeleton = 0x340; // USkeleton*
		constexpr auto AnimNotifies = 0x348; // TArray<FAnimNotifyEvent>
		constexpr auto OrderedSavedPoseIndicesMap = 0x358; // TMap<FName, FCachedPoseIndices>
		constexpr auto SyncGroupNames = 0x428; // TArray<FName>
		constexpr auto EvaluateGraphExposedInputs = 0x438; // TArray<FExposedValueHandler>
		constexpr auto GraphAssetPlayerInformation = 0x448; // TMap<FName, FGraphAssetPlayerInformation>
		constexpr auto GraphBlendOptions = 0x498; // TMap<FName, FAnimGraphBlendOptions>
	}

	namespace n_UWBP_StandardButtonLarge_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto OnClick = 0x528; // UWidgetAnimation*
		constexpr auto Highlight = 0x530; // UWidgetAnimation*
		constexpr auto BtnBkg = 0x538; // UImage*
		constexpr auto BtnBkgHover = 0x540; // UImage*
		constexpr auto BtnBkgRedButton = 0x548; // UImage*
		constexpr auto BtnClickImage = 0x550; // UImage*
		constexpr auto BtnEdge = 0x558; // UImage*
		constexpr auto BtnEdgeHover = 0x560; // UImage*
		constexpr auto BtnFrame = 0x568; // UImage*
		constexpr auto BtnFrameHover = 0x570; // UImage*
		constexpr auto BtnStandardWrapper = 0x578; // UOverlay*
		constexpr auto ButtonText = 0x580; // UTextBlock*
		constexpr auto HitTarget = 0x588; // UButton*
		constexpr auto HoverWrapper = 0x590; // UOverlay*
		constexpr auto KeyPrompt = 0x598; // UWBP_KeyCallout_C*
		constexpr auto KeyPromptContainer = 0x5a0; // UCanvasPanel*
		constexpr auto NamedSlot_66 = 0x5a8; // UNamedSlot*
		constexpr auto SizeWrapper = 0x5b0; // USizeBox*
		constexpr auto OnClicked = 0x5b8; // FMulticastInlineDelegate
		constexpr auto OnHovered = 0x5c8; // FMulticastInlineDelegate
		constexpr auto OnUnhovered = 0x5d8; // FMulticastInlineDelegate
		constexpr auto ClickLrgBtnSFX = 0x5e8; // UAkAudioEvent*
		constexpr auto DefaultButtonText = 0x5f0; // FText
		constexpr auto DefaultWidth = 0x608; // float
		constexpr auto ShowPromptOnFocus = 0x60c; // bool
		constexpr auto PromptKey = 0x610; // FKey
		constexpr auto IsRedButton = 0x628; // bool
		constexpr auto IsConfirm = 0x629; // bool
		constexpr auto IsCancel = 0x62a; // bool
		constexpr auto DefaultHeight = 0x62c; // float
		constexpr auto HoverLrgBtnSFX = 0x630; // UAkAudioEvent*
		constexpr auto EFontStyle = 0x638; // E_ButtonFontStyle
		constexpr auto IsDisabled = 0x639; // bool
	}

	namespace n_UThermalScopePPComponent {
		constexpr auto ManagerComponent = 0xb0; // UThermalScopeManagerComponent*
		constexpr auto CameraManagerOwner = 0xb8; // AKSPlayerCameraManager*
		constexpr auto ThermalPostProcessMaterial = 0xc0; // UMaterialInterface*
		constexpr auto ThermalPostProcessMaterialDynamic = 0xc8; // UMaterialInstanceDynamic*
	}

	namespace n_UPGame_EffectManagerComponent {
		constexpr auto r_ReplicatedEffectData = 0xd8; // FPGame_PersistentEffectRepDataContainer
		constexpr auto r_ReplicatedProperties = 0x1f8; // FPGame_EffectManagerPropertyContainer
	}

	namespace n_UKSWeaponMasteryManager {
		constexpr auto MiscRewardsTable = 0x228; // UDataTable*
	}

	namespace n_AKSEnvironmentVolumeActor {
		constexpr auto EnvironmentTag = 0x228; // FName
		constexpr auto ContainedEnvironmentTrackers = 0x230; // TArray<UEnvironmentTrackerComponent*>
	}

	namespace n_UMovieSceneSkeletalAnimationTrack {
		constexpr auto AnimationSections = 0x58; // TArray<UMovieSceneSection*>
		constexpr auto bUseLegacySectionIndexBlend = 0x68; // bool
	}

	namespace n_UMovieSceneColorTrack {
		constexpr auto bIsSlateColor = 0x88; // bool
	}

	namespace n_UPGame_EffectGroupPersistent {
		constexpr auto m_StackingCategory = 0x80; // FGameplayTag
		constexpr auto m_ApplicationRule = 0x88; // EEffectGroupApplicationRule
		constexpr auto m_nMaxStackCount = 0x8c; // char
		constexpr auto m_bApplyInstantOnInterval = 0x8d; // bool
		constexpr auto m_bApplyStackOnInterval = 0x8e; // bool
		constexpr auto m_fStartDuration = 0x90; // float
		constexpr auto m_fDuration = 0x94; // float
		constexpr auto m_fIntervalDuration = 0x98; // float
		constexpr auto m_fApplicationStrength = 0x9c; // float
	}

	namespace n_UBrushStampIndicator {
		constexpr auto BrushRadius = 0x38; // float
		constexpr auto BrushFalloff = 0x3c; // float
		constexpr auto BrushPosition = 0x40; // FVector
		constexpr auto BrushNormal = 0x4c; // FVector
		constexpr auto bDrawIndicatorLines = 0x58; // bool
		constexpr auto bDrawRadiusCircle = 0x59; // bool
		constexpr auto bDrawFalloffCircle = 0x5a; // bool
		constexpr auto SampleStepCount = 0x5c; // int32_t
		constexpr auto LineColor = 0x60; // FLinearColor
		constexpr auto LineThickness = 0x70; // float
		constexpr auto bDepthTested = 0x74; // bool
		constexpr auto bDrawSecondaryLines = 0x75; // bool
		constexpr auto SecondaryLineThickness = 0x78; // float
		constexpr auto SecondaryLineColor = 0x7c; // FLinearColor
		constexpr auto AttachedComponent = 0x90; // UPrimitiveComponent*
	}

	namespace n_UWBP_EmailCollectionPopup_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto Anim_OnShown = 0x528; // UWidgetAnimation*
		constexpr auto Anim_ErrorShake = 0x530; // UWidgetAnimation*
		constexpr auto Anim_ShowSection = 0x538; // UWidgetAnimation*
		constexpr auto AgreementCheckboxErrorContainer = 0x540; // UHorizontalBox*
		constexpr auto ArrowDown = 0x548; // UImage*
		constexpr auto ArrowUp = 0x550; // UImage*
		constexpr auto AutoFillLabelWrapper = 0x558; // UHorizontalBox*
		constexpr auto BackCallout = 0x560; // UWBP_KeyCallout_C*
		constexpr auto BackPrompt = 0x568; // UHorizontalBox*
		constexpr auto BG = 0x570; // UImage*
		constexpr auto CloseButtonGamepad = 0x578; // UWBP_StandardButtonLarge_C*
		constexpr auto DismissEulaButton = 0x580; // UWBP_StandardButtonLarge_C*
		constexpr auto EmailErrorContainer = 0x588; // UHorizontalBox*
		constexpr auto EmailInputWrapper = 0x590; // USizeBox*
		constexpr auto EmailSubmission = 0x598; // UVerticalBox*
		constexpr auto EulaContainer = 0x5a0; // UScrollBox*
		constexpr auto EulaScrollContent = 0x5a8; // UVerticalBox*
		constexpr auto EulaText = 0x5b0; // UTextBlock*
		constexpr auto EulaVertBox = 0x5b8; // UVerticalBox*
		constexpr auto FormStateSwitcher = 0x5c0; // UWidgetSwitcher*
		constexpr auto GamepadCallouts = 0x5c8; // UBorder*
		constexpr auto InvalidationBox_1 = 0x5d0; // UInvalidationBox*
		constexpr auto OKButton = 0x5d8; // UWBP_StandardButtonLarge_C*
		constexpr auto PendingOverlay = 0x5e0; // UBorder*
		constexpr auto PendingOverlayText = 0x5e8; // UTextBlock*
		constexpr auto ScrollCallout = 0x5f0; // UWBP_KeyCallout_C*
		constexpr auto SelectCallout = 0x5f8; // UWBP_KeyCallout_C*
		constexpr auto SelectPrompt = 0x600; // UHorizontalBox*
		constexpr auto SubmissionComplete = 0x608; // UVerticalBox*
		constexpr auto SubmitButton = 0x610; // UWBP_StandardButtonLarge_C*
		constexpr auto TermsAndConditions = 0x618; // UVerticalBox*
		constexpr auto TermsAndConditionsPrompt = 0x620; // UHorizontalBox*
		constexpr auto WBP_CheckboxButton = 0x628; // UWBP_CheckboxButton_C*
		constexpr auto WBP_Header1_2 = 0x630; // UWBP_Header1_C*
		constexpr auto WBP_KeyCallout = 0x638; // UWBP_KeyCallout_C*
		constexpr auto WBP_ModalPopupContainer = 0x640; // UWBP_ModalPopupContainer_C*
		constexpr auto WBP_TextInputButton = 0x648; // UWBP_TextInputButton_C*
		constexpr auto EmailValidationTimer = 0x650; // float
		constexpr auto ScrollDirection = 0x654; // float
	}

	namespace n_UWBP_WeaponHubStatsPanel_C {
		constexpr auto UberGraphFrame = 0x540; // FPointerToUberGraphFrame
		constexpr auto AnimPanelButtonHover = 0x548; // UWidgetAnimation*
		constexpr auto AnimTogglePanel = 0x550; // UWidgetAnimation*
		constexpr auto CollapseContent = 0x558; // UVerticalBox*
		constexpr auto DescText = 0x560; // UTextBlock*
		constexpr auto ExpandedBGGroup = 0x568; // UOverlay*
		constexpr auto ExpandedContent = 0x570; // UVerticalBox*
		constexpr auto Image_160 = 0x578; // UImage*
		constexpr auto Image_257 = 0x580; // UImage*
		constexpr auto NextTierButton = 0x588; // UButton*
		constexpr auto NextTierCallout = 0x590; // UWBP_KeyCallout_C*
		constexpr auto PrevTierButton = 0x598; // UButton*
		constexpr auto PrevTierCallout = 0x5a0; // UWBP_KeyCallout_C*
		constexpr auto StatsHeaderText = 0x5a8; // UTextBlock*
		constexpr auto TooltipBackground = 0x5b0; // UImage*
		constexpr auto WeaponStatsGrid = 0x5b8; // UGridPanel*
		constexpr auto OpenedState = 0x5c0; // bool
		constexpr auto ClickWEPHUBPrevTierSFX = 0x5c8; // UAkAudioEvent*
		constexpr auto HoverWEPHUBStatsPanelTierSFX = 0x5d0; // UAkAudioEvent*
		constexpr auto ClickWEPHUBNextTierSFX = 0x5d8; // UAkAudioEvent*
		constexpr auto ClickWEPHUBStatsOpenSFX = 0x5e0; // UAkAudioEvent*
		constexpr auto HoverWEPHUBStatsOpenSFX = 0x5e8; // UAkAudioEvent*
		constexpr auto StatsCount = 0x5f0; // int32_t
	}

	namespace n_UKSModInst_ActivatedViewMode {
		constexpr auto OnViewStateChange = 0x478; // FMulticastInlineDelegate
		constexpr auto CurrentState = 0x488; // EModViewModeState
	}

	namespace n_UKSGrenadeTargetingModule {
		constexpr auto FuseWarningColor = 0x3a8; // FLinearColor
		constexpr auto FuseSafeColor = 0x3b8; // FLinearColor
		constexpr auto FuseWarningStartTime = 0x3c8; // float
		constexpr auto GrenadeAsset = 0x3d0; // UKSWeaponAsset_Grenade*
	}

	namespace n_UKSDataSocialCategory {
		constexpr auto OnPlayersUpdated = 0x28; // FMulticastInlineDelegate
		constexpr auto OnHeaderUpdated = 0x38; // FMulticastInlineDelegate
		constexpr auto OnMessageUpdated = 0x48; // FMulticastInlineDelegate
		constexpr auto SortedPlayerList = 0xd0; // TArray<UKSDataSocialPlayer*>
	}

	namespace n_UWBP_StoreDiscountTagPriceButton_C {
		constexpr auto DiscountTag = 0x238; // UTextBlock*
	}

	namespace n_UKSSpawnRuleDebugComponent {
		constexpr auto GameScore = 0x484; // float
		constexpr auto FailureReason = 0x488; // FName
	}

	namespace n_UWBP_ButtonStacked_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto OnClickAnim = 0x528; // UWidgetAnimation*
		constexpr auto HoverAnim_Red = 0x530; // UWidgetAnimation*
		constexpr auto hoveranim = 0x538; // UWidgetAnimation*
		constexpr auto background = 0x540; // UImage*
		constexpr auto ButtonContent = 0x548; // UNamedSlot*
		constexpr auto Click = 0x550; // UImage*
		constexpr auto EndCap = 0x558; // UImage*
		constexpr auto Highlight = 0x560; // UImage*
		constexpr auto HitTarget = 0x568; // UButton*
		constexpr auto Selected = 0x570; // UImage*
		constexpr auto OnBtnStackedClicked = 0x578; // FMulticastInlineDelegate
		constexpr auto OnBtnStackedHovered = 0x588; // FMulticastInlineDelegate
		constexpr auto OnBtnStackedUnhovered = 0x598; // FMulticastInlineDelegate
		constexpr auto bIsDisable = 0x5a8; // bool
		constexpr auto bIsActive = 0x5a9; // bool
		constexpr auto OnBtnStackedReleased = 0x5b0; // FMulticastInlineDelegate
		constexpr auto IsRedButton = 0x5c0; // bool
		constexpr auto ClickBtnStackedSFX = 0x5c8; // UAkAudioEvent*
		constexpr auto HoverBtnStackedSFX = 0x5d0; // UAkAudioEvent*
	}

	namespace n_AKSKillCamController {
		constexpr auto KillCamObjectCamera = 0xf28; // AKSKillCamObjectCamera*
	}

	namespace n_UMovieSceneObjectPropertyTrack {
		constexpr auto PropertyClass = 0x88; // UObject*
	}

	namespace n_URandomVector {
		constexpr auto Magnitude = 0xb0; // float
	}

	namespace n_UWBP_StoreButtonMedium_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto SlideLeftToPrimary = 0x528; // UWidgetAnimation*
		constexpr auto SlideLeftToSecondary = 0x530; // UWidgetAnimation*
		constexpr auto PrimaryStoreItem = 0x538; // UWBP_StoreItemInterior_C*
		constexpr auto SecondaryStoreItem = 0x540; // UWBP_StoreItemInterior_C*
		constexpr auto StoreItemRotator = 0x548; // UWBP_StoreItemRotator_C*
		constexpr auto WBP_StorePanelButton = 0x550; // UWBP_StorePanelButton_C*
		constexpr auto MyStoreSection = 0x558; // UKSStoreSectionItem*
		constexpr auto CurrentStoreIndex = 0x560; // int32_t
		constexpr auto IsRotating = 0x564; // bool
		constexpr auto TimeVisible = 0x568; // float
		constexpr auto MaxTimeVisible = 0x56c; // float
		constexpr auto NewVar_1 = 0x570; // float
		constexpr auto ROTATION_TIMER_INTERVAL = 0x574; // float
	}

	namespace n_UWBP_ChallengeEntry_Daily_Truncated_C {
		constexpr auto UberGraphFrame = 0x528; // FPointerToUberGraphFrame
		constexpr auto Hover = 0x530; // UWidgetAnimation*
		constexpr auto ActiveContractWrapper = 0x538; // USizeBox*
		constexpr auto ChallengeBkg_Switcher = 0x540; // UWidgetSwitcher*
		constexpr auto ChallengeDescription = 0x548; // UTextBlock*
		constexpr auto CompletedText = 0x550; // UTextBlock*
		constexpr auto ContentContainer = 0x558; // UHorizontalBox*
		constexpr auto DescriptionSwitcher = 0x560; // UWidgetSwitcher*
		constexpr auto HitTarget = 0x568; // UButton*
		constexpr auto Image = 0x570; // UImage*
		constexpr auto Image_390 = 0x578; // UImage*
		constexpr auto ProgressBar = 0x580; // UWBP_ProgressEarnedBar_C*
		constexpr auto RewardsContainer = 0x588; // UHorizontalBox*
		constexpr auto RewardSwitcher = 0x590; // UWidgetSwitcher*
		constexpr auto Root = 0x598; // UCanvasPanel*
		constexpr auto SelectionFrame = 0x5a0; // UImage*
		constexpr auto Shade_Fill = 0x5a8; // UImage*
		constexpr auto TimeRemainingWrapper = 0x5b0; // UHorizontalBox*
		constexpr auto WBP_Challenge_Rewards_Badge_EXAMPLE = 0x5b8; // UWBP_Challenge_Rewards_Badge_C*
		constexpr auto WBP_Challenge_Rewards_Badge_EXAMPLE_01 = 0x5c0; // UWBP_Challenge_Rewards_Badge_C*
		constexpr auto CurrentVisualState = 0x5c8; // EChallengeEntryCardState
		constexpr auto OnClick = 0x5d0; // FMulticastInlineDelegate
	}

	namespace n_UKSVOComponent {
		constexpr auto CharacterOwner = 0xc8; // AKSCharacter*
		constexpr auto GlobalCooldownDuration = 0x110; // float
		constexpr auto CooldownGroupMap = 0x118; // TMap<int32_t, float>
		constexpr auto TimeNextEventCanPlayAfter = 0x168; // float
		constexpr auto OnVOLineFinished = 0x16c; // FDelegate
		constexpr auto VODuckingAmount = 0x17c; // float
	}

	namespace n_AGameSession {
		constexpr auto MaxSpectators = 0x220; // int32_t
		constexpr auto MaxPlayers = 0x224; // int32_t
		constexpr auto MaxPartySize = 0x228; // int32_t
		constexpr auto MaxSplitscreensPerConnection = 0x22c; // char
		constexpr auto bRequiresPushToTalk = 0x22d; // bool
		constexpr auto SessionName = 0x230; // FName
	}

	namespace n_UDatasmithCineCameraActorTemplate {
		constexpr auto LookatTrackingSettings = 0x30; // FDatasmithCameraLookatTrackingSettingsTemplate
	}

	namespace n_ULoadingScreenImageManager {
		constexpr auto FailSafeLoadingScreen = 0x30; // FLoadingScreenImageInfo
	}

	namespace n_UChildConnection {
		constexpr auto Parent = 0x1a80; // UNetConnection*
	}

	namespace n_UMaterialExpressionSceneColor {
		constexpr auto InputMode = 0x40; // EMaterialSceneAttributeInputMode
		constexpr auto Input = 0x44; // FExpressionInput
		constexpr auto OffsetFraction = 0x58; // FExpressionInput
		constexpr auto ConstInput = 0x6c; // FVector2D
	}

	namespace n_UKSCharacterCameraHandler {
		constexpr auto OnShoulderSwapChanged = 0x208; // FMulticastInlineDelegate
		constexpr auto CameraRootComponent = 0x218; // UKSSmoothingComponent*
		constexpr auto MainCameraBoom = 0x220; // UKSSpringArmComponent*
		constexpr auto MainCameraComponent = 0x228; // UCameraComponent*
		constexpr auto SprintCameraBoom = 0x230; // UKSSpringArmComponent*
		constexpr auto SprintCameraComponent = 0x238; // UCameraComponent*
		constexpr auto TransitionCameraBoom = 0x240; // UKSSpringArmComponent*
		constexpr auto TransitionCameraComponent = 0x248; // UCameraComponent*
		constexpr auto ShoulderCameraBoom = 0x250; // UKSSpringArmComponent*
		constexpr auto ShoulderCameraComponent = 0x258; // UCameraComponent*
		constexpr auto FirstPersonCameraComponent = 0x260; // UCameraComponent*
		constexpr auto TabletCameraBoom = 0x268; // UKSSpringArmComponent*
		constexpr auto TabletCameraComponent = 0x270; // UCameraComponent*
		constexpr auto ActionCameraBoom1 = 0x278; // UKSSpringArmComponent*
		constexpr auto ActionCameraComponent = 0x280; // UCameraComponent*
		constexpr auto SwimCameraBoom = 0x288; // UKSSpringArmComponent*
		constexpr auto SwimCameraComponent = 0x290; // UCameraComponent*
		constexpr auto MountedCameraBoom = 0x298; // UKSSpringArmComponent*
		constexpr auto MountedCameraComponent = 0x2a0; // UCameraComponent*
		constexpr auto ActiveCameraComponent = 0x2a8; // UCameraComponent*
		constexpr auto PendingCameraComponent = 0x2b8; // UCameraComponent*
		constexpr auto CameraShoulder = 0x2c8; // ECameraShoulder
		constexpr auto DesiredCameraShoulder = 0x2c9; // ECameraShoulder
		constexpr auto NextShoulderSwapTime = 0x2cc; // float
		constexpr auto ShoulderSwapCooldownTime = 0x2d0; // float
		constexpr auto AutoShoulderSwapTime = 0x2d4; // float
		constexpr auto MeshADSPitchPivotBoneName = 0x2d8; // FName
		constexpr auto CameraFocualThreshold = 0x2e0; // float
		constexpr auto MinimumFocalPointMaintenanceDistance = 0x2e4; // float
		constexpr auto AimSnapThrottleTime = 0x2e8; // float
		constexpr auto ShoulderSwapTime = 0x2ec; // float
		constexpr auto ZipLineShoulderCameraBoomLength = 0x2f0; // float
		constexpr auto ZipLineShoulderBoomLengthChangeTime = 0x2f4; // float
		constexpr auto CrouchCameraShiftInterpSpeed = 0x2f8; // float
		constexpr auto CrouchCameraBoomLengthScale = 0x2fc; // float
		constexpr auto SprintCameraChangeDuration = 0x300; // float
		constexpr auto SprintOutCameraChangeDuration = 0x304; // float
		constexpr auto AimDownSightsScopeInterpSpeed = 0x308; // float
		constexpr auto bMantainFocualPointOnCameraTransition = 0x30c; // bool
		constexpr auto bUseAdvancedFocalPointTracking = 0x30d; // bool
		constexpr auto ShoulderSwapProgress = 0x310; // float
		constexpr auto ZiplineAOSCamVertOffset = 0x314; // float
		constexpr auto CrouchAOSCamVertOffset = 0x318; // float
		constexpr auto SwimCameraBoomFloatHeight = 0x31c; // float
		constexpr auto ShoulderSwapBlendExponent = 0x320; // float
		constexpr auto bUseFocalPointDoubleCheck = 0x324; // bool
		constexpr auto FocalPointDoubleCheckAllowedBlockDistance = 0x328; // float
		constexpr auto bFocalPointMaintenanceEnabled = 0x32c; // bool
		constexpr auto LastManualShoulderSwapLocation = 0x330; // FVector
		constexpr auto LastShoulderSwapTimestamp = 0x33c; // float
		constexpr auto CurrentShoulderSwapTime = 0x340; // float
		constexpr auto CameraTransitionRotationDelta = 0x344; // FRotator
		constexpr auto CameraTransitionRotationDeltaRemaining = 0x350; // FRotator
		constexpr auto NextValidAimSnapTime = 0x35c; // float
		constexpr auto CameraPivotTargetActor = 0x360; // AActor*
		constexpr auto bPivotCameraToActorNotLocation = 0x36a; // bool
		constexpr auto bTrackTargetAfterPivotingToIt = 0x36b; // bool
		constexpr auto CachedSnapAnchor = 0x370; // UKSAimAssistAnchorComponent*
		constexpr auto AppliedFocalPointCorrection = 0x378; // FRotator
		constexpr auto CameraPivotCurve = 0x3a8; // UCurveFloat*
		constexpr auto StandEmoteCameraVertOffset = 0x3b0; // float
		constexpr auto CrouchEmoteCameraVertOffset = 0x3b4; // float
		constexpr auto ProneEmoteCameraVertOffset = 0x3b8; // float
		constexpr auto StandEmoteCameraInterpSpeed = 0x3bc; // float
		constexpr auto CrouchEmoteCameraInterpSpeed = 0x3c0; // float
		constexpr auto ProneEmoteCameraInterpSpeed = 0x3c4; // float
		constexpr auto RelativeFocalPoint = 0x3e4; // FVector
		constexpr auto NonFocalPointRotation = 0x3f0; // FRotator
		constexpr auto AppliedFocalPointYawRotation = 0x3fc; // FRotator
		constexpr auto CachedPrimaryWeaponFieldOfView = 0x418; // float
		constexpr auto CameraInterpSpeed = 0x438; // float
		constexpr auto CurrentEmoteCameraVertOffset = 0x43c; // float
		constexpr auto CurrentEmoteCameraInterpSpeed = 0x440; // float
		constexpr auto bUsingEmoteCamera = 0x444; // bool
		constexpr auto CachedCameraFOV = 0x448; // float
		constexpr auto CachedViewPortSize = 0x44c; // FVector2D
		constexpr auto CachedHalfTanFOV = 0x454; // float
	}

	namespace n_UClothConfigNv {
		constexpr auto ClothingWindMethod = 0x28; // EClothingWindMethodNv
		constexpr auto VerticalConstraint = 0x2c; // FClothConstraintSetupNv
		constexpr auto HorizontalConstraint = 0x3c; // FClothConstraintSetupNv
		constexpr auto BendConstraint = 0x4c; // FClothConstraintSetupNv
		constexpr auto ShearConstraint = 0x5c; // FClothConstraintSetupNv
		constexpr auto SelfCollisionRadius = 0x6c; // float
		constexpr auto SelfCollisionStiffness = 0x70; // float
		constexpr auto SelfCollisionCullScale = 0x74; // float
		constexpr auto Damping = 0x78; // FVector
		constexpr auto Friction = 0x84; // float
		constexpr auto WindDragCoefficient = 0x88; // float
		constexpr auto WindLiftCoefficient = 0x8c; // float
		constexpr auto LinearDrag = 0x90; // FVector
		constexpr auto AngularDrag = 0x9c; // FVector
		constexpr auto LinearInertiaScale = 0xa8; // FVector
		constexpr auto AngularInertiaScale = 0xb4; // FVector
		constexpr auto CentrifugalInertiaScale = 0xc0; // FVector
		constexpr auto SolverFrequency = 0xcc; // float
		constexpr auto StiffnessFrequency = 0xd0; // float
		constexpr auto GravityScale = 0xd4; // float
		constexpr auto GravityOverride = 0xd8; // FVector
		constexpr auto bUseGravityOverride = 0xe4; // bool
		constexpr auto TetherStiffness = 0xe8; // float
		constexpr auto TetherLimit = 0xec; // float
		constexpr auto CollisionThickness = 0xf0; // float
		constexpr auto AnimDriveSpringStiffness = 0xf4; // float
		constexpr auto AnimDriveDamperStiffness = 0xf8; // float
		constexpr auto WindMethod = 0xfc; // EClothingWindMethod_Legacy
		constexpr auto VerticalConstraintConfig = 0x100; // FClothConstraintSetup_Legacy
		constexpr auto HorizontalConstraintConfig = 0x110; // FClothConstraintSetup_Legacy
		constexpr auto BendConstraintConfig = 0x120; // FClothConstraintSetup_Legacy
		constexpr auto ShearConstraintConfig = 0x130; // FClothConstraintSetup_Legacy
	}

	namespace n_UKSZiplineAnimInst {
		constexpr auto WheelSpeedModifier = 0x10f0; // float
		constexpr auto WheelCurrentSpeed = 0x10f4; // float
		constexpr auto UpperWheelRotator = 0x10f8; // FRotator
		constexpr auto LowerWheelRotator = 0x1104; // FRotator
		constexpr auto ZiplineTopLockRot = 0x1110; // FRotator
		constexpr auto ZiplineTopLockRotModifierPitch = 0x111c; // float
		constexpr auto ZiplineTopLockRotModifierRoll = 0x1120; // float
		constexpr auto ZiplineTopLockRotModifierYaw = 0x1124; // float
	}

	namespace n_UNiagaraSimulationStageBase {
		constexpr auto Script = 0x28; // UNiagaraScript*
		constexpr auto SimulationStageName = 0x30; // FName
	}

	namespace n_UBookMark {
		constexpr auto Location = 0x28; // FVector
		constexpr auto Rotation = 0x34; // FRotator
		constexpr auto HiddenLevels = 0x40; // TArray<FString>
	}

	namespace n_UAISenseConfig_Blueprint {
		constexpr auto Implementation = 0x48; // UAISense_Blueprint*
	}

	namespace n_USubmixEffectDynamicsProcessorPreset {
		constexpr auto Settings = 0xb8; // FSubmixEffectDynamicsProcessorSettings
	}

	namespace n_UWBP_RankChange_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto RankUpAnim_withEvent_withBanner_3 = 0x528; // UWidgetAnimation*
		constexpr auto RankUpAnim_withEvent_withBanner_1 = 0x530; // UWidgetAnimation*
		constexpr auto RankUpAnim_withEvent_withBanner_2 = 0x538; // UWidgetAnimation*
		constexpr auto RankUpAnim_withEvent_withBanner = 0x540; // UWidgetAnimation*
		constexpr auto RankUpAnim_withEvent_newTiming = 0x548; // UWidgetAnimation*
		constexpr auto RankDownAnim_withEvent = 0x550; // UWidgetAnimation*
		constexpr auto RankUpAnim_withEvent = 0x558; // UWidgetAnimation*
		constexpr auto OnShownAnim = 0x560; // UWidgetAnimation*
		constexpr auto BadgeMaterialize = 0x568; // UImage*
		constexpr auto CenterGradient = 0x570; // UImage*
		constexpr auto ChromaticRing = 0x578; // UImage*
		constexpr auto EdgeGlow = 0x580; // UImage*
		constexpr auto EdgeGlow_2 = 0x588; // UImage*
		constexpr auto Flare01 = 0x590; // UImage*
		constexpr auto Flare03 = 0x598; // UImage*
		constexpr auto Flare04 = 0x5a0; // UImage*
		constexpr auto Flare05 = 0x5a8; // UImage*
		constexpr auto Glitch_Center = 0x5b0; // UImage*
		constexpr auto GlitchCenter_ColorWrapper = 0x5b8; // UBorder*
		constexpr auto Glow01 = 0x5c0; // UImage*
		constexpr auto Glow02 = 0x5c8; // UImage*
		constexpr auto GlowBanner_ColorWrapper = 0x5d0; // UBorder*
		constexpr auto glowLine = 0x5d8; // UWBP_AdditiveImage_C*
		constexpr auto glowLine_3 = 0x5e0; // UWBP_AdditiveImage_C*
		constexpr auto godrays = 0x5e8; // UImage*
		constexpr auto GrandMasterPoints = 0x5f0; // UWBP_LerpingNumberWidget_C*
		constexpr auto GrandMasterPointsWrapper = 0x5f8; // UCanvasPanel*
		constexpr auto Particles01 = 0x600; // UImage*
		constexpr auto PointsEarned = 0x608; // UTextBlock*
		constexpr auto PrimaryBannerShade = 0x610; // UImage*
		constexpr auto PrimaryBannerText = 0x618; // UTextBlock*
		constexpr auto RankBadge = 0x620; // UWBP_RankedIcon_C*
		constexpr auto RankChangeText = 0x628; // UTextBlock*
		constexpr auto RankedProgressSwitcher = 0x630; // UWidgetSwitcher*
		constexpr auto RankedTierText = 0x638; // URichTextBlock*
		constexpr auto ScanLines = 0x640; // UWBP_AdditiveImage_C*
		constexpr auto ScanLines_3 = 0x648; // UWBP_AdditiveImage_C*
		constexpr auto Scanlines01 = 0x650; // UImage*
		constexpr auto ShadeBox = 0x658; // UImage*
		constexpr auto SheenLeft = 0x660; // UImage*
		constexpr auto SheenRight = 0x668; // UImage*
		constexpr auto TeamStatus = 0x670; // UTextBlock*
		constexpr auto VictoryDefeatGlow = 0x678; // UImage*
		constexpr auto VictoryDefeatGlow_2 = 0x680; // UImage*
		constexpr auto VictoryDefeatGlow_3 = 0x688; // UImage*
		constexpr auto VictoryDefeatGlow_Anim = 0x690; // UImage*
		constexpr auto VictoryDefeatGlow_Pulse = 0x698; // UImage*
		constexpr auto VictoryDefeatGlow_Pulse_2 = 0x6a0; // UImage*
		constexpr auto VictoryDefeatLine = 0x6a8; // UImage*
		constexpr auto VictoryDefeatScanlines = 0x6b0; // UImage*
		constexpr auto WBP_StandardButtonLarge_C_1 = 0x6b8; // UWBP_StandardButtonLarge_C*
		constexpr auto XPProgressEarnedBar = 0x6c0; // UWBP_ranked_level_tracker_C*
		constexpr auto XPProgressionBarWrapper = 0x6c8; // USizeBox*
		constexpr auto HasRankedData = 0x6d0; // bool
		constexpr auto OnRankedPopupClosed = 0x6d8; // FMulticastInlineDelegate
		constexpr auto PendingLevelValue = 0x6e8; // int32_t
		constexpr auto EndingXPValue = 0x6ec; // int32_t
		constexpr auto RANKED_LERP_TIME = 0x6f0; // float
		constexpr auto IsDerankingFromRogue = 0x6f4; // bool
		constexpr auto ProgressionData = 0x6f8; // FPlayerProgression
	}

	namespace n_UMaterialExpressionMinLevelForBlurredNormal {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UAISense_Sight {
		constexpr auto MaxTracesPerTick = 0x148; // int32_t
		constexpr auto MinQueriesPerTimeSliceCheck = 0x14c; // int32_t
		constexpr auto MaxTimeSlicePerTick = 0x150; // double
		constexpr auto HighImportanceQueryDistanceThreshold = 0x158; // float
		constexpr auto MaxQueryImportance = 0x160; // float
		constexpr auto SightLimitQueryImportance = 0x164; // float
	}

	namespace n_UDatasmithAssetUserData {
		constexpr auto MetaData = 0x28; // TMap<FName, FString>
	}

	namespace n_UDatasmithSpotLightComponentTemplate {
		constexpr auto InnerConeAngle = 0x30; // float
		constexpr auto OuterConeAngle = 0x34; // float
	}

	namespace n_UKSActivityRewardCondition_HealthPercent {
		constexpr auto MinHealthPercent = 0x30; // float
		constexpr auto MaxHealthPercent = 0x34; // float
		constexpr auto CheckInstigator = 0x38; // bool
		constexpr auto CheckTarget = 0x39; // bool
	}

	namespace n_USpringArmComponent {
		constexpr auto TargetArmLength = 0x208; // float
		constexpr auto SocketOffset = 0x20c; // FVector
		constexpr auto TargetOffset = 0x218; // FVector
		constexpr auto ProbeSize = 0x224; // float
		constexpr auto ProbeChannel = 0x228; // ECollisionChannel
		constexpr auto bDoCollisionTest = 0x22c; // char : 1
		constexpr auto bUsePawnControlRotation = 0x22c; // char : 1
		constexpr auto bInheritPitch = 0x22c; // char : 1
		constexpr auto bInheritYaw = 0x22c; // char : 1
		constexpr auto bInheritRoll = 0x22c; // char : 1
		constexpr auto bEnableCameraLag = 0x22c; // char : 1
		constexpr auto bEnableCameraRotationLag = 0x22c; // char : 1
		constexpr auto bUseCameraLagSubstepping = 0x22c; // char : 1
		constexpr auto bDrawDebugLagMarkers = 0x22d; // char : 1
		constexpr auto CameraLagSpeed = 0x230; // float
		constexpr auto CameraRotationLagSpeed = 0x234; // float
		constexpr auto CameraLagMaxTimeStep = 0x238; // float
		constexpr auto CameraLagMaxDistance = 0x23c; // float
	}

	namespace n_UMaterialExpressionMultiply {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_USignificanceManager {
		constexpr auto SignificanceManagerClassName = 0x108; // FSoftClassPath
	}

	namespace n_UKSCurrency {
		constexpr auto IsDLCVoucher = 0x250; // bool
		constexpr auto SortOrder = 0x254; // int32_t
		constexpr auto CurrencyDataByQtyTable = 0x258; // TSoftObjectPtr<UDataTable>
		constexpr auto FullSplash = 0x280; // TSoftObjectPtr<UTexture2D>
		constexpr auto CurrencySmallIcon = 0x2a8; // TSoftObjectPtr<UTexture2D>
	}

	namespace n_UMaterialExpressionMaterialProxyReplace {
		constexpr auto Realtime = 0x40; // FExpressionInput
		constexpr auto MaterialProxy = 0x54; // FExpressionInput
	}

	namespace n_UBTDecorator {
		constexpr auto bInverseCondition = 0x60; // char : 1
		constexpr auto FlowAbortMode = 0x64; // EBTFlowAbortMode
	}

	namespace n_UCanvasRenderTarget2D {
		constexpr auto OnCanvasRenderTargetUpdate = 0xe8; // FMulticastInlineDelegate
		constexpr auto World = 0xf8; // TWeakObjectPtr<UWorld>
		constexpr auto bShouldClearRenderTargetOnReceiveUpdate = 0x100; // bool
	}

	namespace n_UWBP_ChallengeEntry_Card_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto OnRerollHoverAnim = 0x528; // UWidgetAnimation*
		constexpr auto OnHoverAnim_COMPLETE = 0x530; // UWidgetAnimation*
		constexpr auto OnRerollAnim = 0x538; // UWidgetAnimation*
		constexpr auto OnHoverAnim = 0x540; // UWidgetAnimation*
		constexpr auto CardContentGroup = 0x548; // UVerticalBox*
		constexpr auto ChallengeBkg_Switcher = 0x550; // UWidgetSwitcher*
		constexpr auto ChallengeDescription = 0x558; // UTextBlock*
		constexpr auto ChallengeProgressText = 0x560; // UTextBlock*
		constexpr auto CompletedText = 0x568; // UTextBlock*
		constexpr auto GamepadPrompt_Bright = 0x570; // UGamepadPrompt_Bright_C*
		constexpr auto HoverButton = 0x578; // UButton*
		constexpr auto Image = 0x580; // UImage*
		constexpr auto Image_390 = 0x588; // UImage*
		constexpr auto Image_1045 = 0x590; // UImage*
		constexpr auto ProgressBar = 0x598; // UWBP_ProgressEarnedBar_C*
		constexpr auto PromptSwitcher = 0x5a0; // UWidgetSwitcher*
		constexpr auto RerollButton = 0x5a8; // UButton*
		constexpr auto RerollButtonWrapper = 0x5b0; // UOverlay*
		constexpr auto RewardsContainer = 0x5b8; // UHorizontalBox*
		constexpr auto RewardSwitcher = 0x5c0; // UWidgetSwitcher*
		constexpr auto SelectionFrame = 0x5c8; // UImage*
		constexpr auto SimpleEmptyText = 0x5d0; // UTextBlock*
		constexpr auto WBP_Challenge_Rewards_Badge_EXAMPLE = 0x5d8; // UWBP_Challenge_Rewards_Badge_C*
		constexpr auto WBP_Challenge_Rewards_Badge_EXAMPLE_01 = 0x5e0; // UWBP_Challenge_Rewards_Badge_C*
		constexpr auto Current Visual State = 0x5e8; // EChallengeEntry_Card_State
		constexpr auto Challenge Activity Instance = 0x5f0; // UKSActivityInstance*
	}

	namespace n_UKSBotEncounter {
		constexpr auto BotSideNumber = 0x30; // int32_t
		constexpr auto bUseTeamInsteadOfSide = 0x34; // bool
		constexpr auto BotTeamNumber = 0x38; // int32_t
		constexpr auto BotWaves = 0x40; // TArray<UKSEncounterWave*>
		constexpr auto nmEncounterName = 0x50; // FName
		constexpr auto CachedTeamState = 0x60; // AKSTeamState*
	}

	namespace n_UKSPlayerMod_ShowTeamHovers {
		constexpr auto ShowTeamHovers = 0x330; // bool
		constexpr auto Priority_ShowTeamHovers = 0x334; // int32_t
		constexpr auto HoverCharacterLingerExtraTime = 0x338; // float
		constexpr auto Priority_HoverCharacterLingerExtraTime = 0x33c; // int32_t
	}

	namespace n_UKSQuickPlay {
		constexpr auto OnSelectedQueueChanged = 0x520; // FMulticastInlineDelegate
		constexpr auto CanCurrentlyJoinQueue = 0x530; // bool
		constexpr auto CanControlQueue = 0x531; // bool
		constexpr auto DefaultSelectedQueueId = 0x534; // int32_t
		constexpr auto ChunksInstallingQueueId = 0x538; // int32_t
		constexpr auto ReadyForQueueing = 0x550; // bool
	}

	namespace n_UARGetCandidateObjectAsyncTaskBlueprintProxy {
		constexpr auto OnSuccess = 0x50; // FMulticastInlineDelegate
		constexpr auto OnFailed = 0x60; // FMulticastInlineDelegate
	}

	namespace n_UWBP_ToastNotification_Manager_C {
		constexpr auto UberGraphFrame = 0x560; // FPointerToUberGraphFrame
		constexpr auto ChallengeNotificationContainer = 0x568; // UVerticalBox*
		constexpr auto NotificationContainer = 0x570; // UVerticalBox*
		constexpr auto LocalizeTexts = 0x578; // TArray<FText>
		constexpr auto CanDisplaySocialToasts = 0x588; // bool
	}

	namespace n_UKSBTTask_SelectTargetOfTarget {
		constexpr auto CopyTarget = 0x70; // FBlackboardKeySelector
		constexpr auto KeyToCopy = 0x98; // FBlackboardKeySelector
	}

	namespace n_UBrightLobbyWidget_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto MobileLayout = 0x528; // UWidgetAnimation*
		constexpr auto AlwaysPersistent = 0x530; // UPUMG_CanvasPanel*
		constexpr auto AlwaysVisibile = 0x538; // UPUMG_CanvasPanel*
		constexpr auto bkg = 0x540; // UImage*
		constexpr auto Blocker = 0x548; // UBlocker_C*
		constexpr auto BrightLobbyHeader = 0x550; // UBrightLobbyHeader_C*
		constexpr auto Content = 0x558; // UPUMG_CanvasPanel*
		constexpr auto PlayerCard = 0x560; // UWBP_local_player_card_C*
		constexpr auto PopupContent = 0x568; // UPUMG_CanvasPanel*
		constexpr auto PopupManager = 0x570; // UPopupManager_C*
		constexpr auto StickyContent = 0x578; // UPUMG_CanvasPanel*
		constexpr auto StickyContentTop = 0x580; // UPUMG_CanvasPanel*
		constexpr auto TextChat = 0x588; // UWBP_TextChat_C*
		constexpr auto ToastNotificationManager = 0x590; // UWBP_ToastNotification_Manager_C*
		constexpr auto WBP_ActiveBoosterShelf = 0x598; // UWBP_ActiveBoosterShelf_C*
		constexpr auto WBP_Context_Bar = 0x5a0; // UWBP_Context_Bar_C*
		constexpr auto WBP_QueueTimer_v2 = 0x5a8; // UWBP_QueueTimer_v2_C*
		constexpr auto WBP_RadialSelect = 0x5b0; // UWBP_RadialSelect_C*
		constexpr auto WBP_TopNavBar = 0x5b8; // UWBP_TopNavBar_C*
		constexpr auto WBP_VersionNumber = 0x5c0; // UWBP_VersionNumber_C*
		constexpr auto Latest Viewport Size = 0x5c8; // FVector2D
		constexpr auto BackButtonClicked = 0x5d0; // FMulticastInlineDelegate
		constexpr auto StickyWidgets = 0x5e0; // TArray<FStickyWidgetData>
	}

	namespace n_ULoginLinkPrompt_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto CreateButton = 0x528; // UStandardButton_C*
		constexpr auto DeclineButton = 0x530; // UStandardButton_C*
		constexpr auto ExistingButton = 0x538; // UStandardButton_C*
		constexpr auto highlight_stroke = 0x540; // UImage*
		constexpr auto highlightborder = 0x548; // UImage*
		constexpr auto Image_56 = 0x550; // UImage*
		constexpr auto Image_297 = 0x558; // UImage*
		constexpr auto Image_531 = 0x560; // UImage*
		constexpr auto NextSwitcher = 0x568; // UWidgetSwitcher*
		constexpr auto TitleLogo = 0x570; // UImage*
	}

	namespace n_UMaterialExpressionMaterialAttributeLayers {
		constexpr auto ParameterName = 0x40; // FName
		constexpr auto ExpressionGUID = 0x48; // FGuid
		constexpr auto Input = 0x58; // FMaterialAttributesInput
		constexpr auto DefaultLayers = 0x70; // FMaterialLayersFunctions
		constexpr auto LayerCallers = 0xb0; // TArray<UMaterialExpressionMaterialFunctionCall*>
		constexpr auto NumActiveLayerCallers = 0xc0; // int32_t
		constexpr auto BlendCallers = 0xc8; // TArray<UMaterialExpressionMaterialFunctionCall*>
		constexpr auto NumActiveBlendCallers = 0xd8; // int32_t
		constexpr auto bIsLayerGraphBuilt = 0xdc; // bool
	}

	namespace n_UTransformGizmo {
		constexpr auto ActiveTarget = 0x40; // UTransformProxy*
		constexpr auto bSnapToWorldGrid = 0x48; // bool
		constexpr auto bUseContextCoordinateSystem = 0x49; // bool
		constexpr auto CurrentCoordinateSystem = 0x4c; // EToolContextCoordinateSystem
		constexpr auto ActiveComponents = 0xe0; // TArray<UPrimitiveComponent*>
		constexpr auto NonuniformScaleComponents = 0xf0; // TArray<UPrimitiveComponent*>
		constexpr auto ActiveGizmos = 0x100; // TArray<UInteractiveGizmo*>
		constexpr auto CameraAxisSource = 0x120; // UGizmoConstantFrameAxisSource*
		constexpr auto AxisXSource = 0x128; // UGizmoComponentAxisSource*
		constexpr auto AxisYSource = 0x130; // UGizmoComponentAxisSource*
		constexpr auto AxisZSource = 0x138; // UGizmoComponentAxisSource*
		constexpr auto UnitAxisXSource = 0x140; // UGizmoComponentAxisSource*
		constexpr auto UnitAxisYSource = 0x148; // UGizmoComponentAxisSource*
		constexpr auto UnitAxisZSource = 0x150; // UGizmoComponentAxisSource*
		constexpr auto StateTarget = 0x158; // UGizmoTransformChangeStateTarget*
		constexpr auto ScaledTransformSource = 0x160; // UGizmoScaledTransformSource*
	}

	namespace n_UFieldSystemComponent {
		constexpr auto FieldSystem = 0x430; // UFieldSystem*
		constexpr auto SupportedSolvers = 0x448; // TArray<TSoftObjectPtr<AChaosSolverActor>>
	}

	namespace n_UKSBTD_RandomCooldown {
		constexpr auto MinCoolDownTime = 0x68; // float
		constexpr auto MaxCoolDownTime = 0x6c; // float
	}

	namespace n_ALobbyPlayerController {
		constexpr auto PendingHUDClass = 0x6b8; // AHUD*
	}

	namespace n_URogueScreenLoadoutComponent {
		constexpr auto CurrentJob = 0xb8; // UKSJobItem*
		constexpr auto OverrideSkin = 0xc0; // UKSSkinBundle*
		constexpr auto SkinMap = 0xc8; // TMap<UKSItem*, UKSItem*>
		constexpr auto bBoundToLoadoutFactory = 0x118; // bool
		constexpr auto LastLoadoutId = 0x11c; // int32_t
	}

	namespace n_UDestructibleComponent {
		constexpr auto bFractureEffectOverride = 0x670; // char : 1
		constexpr auto FractureEffects = 0x678; // TArray<FFractureEffect>
		constexpr auto bEnableHardSleeping = 0x688; // bool
		constexpr auto LargeChunkThreshold = 0x68c; // float
		constexpr auto OnComponentFracture = 0x6a0; // FMulticastInlineDelegate
	}

	namespace n_ULiveLinkSourceSettings {
		constexpr auto Mode = 0x28; // ELiveLinkSourceMode
		constexpr auto BufferSettings = 0x30; // FLiveLinkSourceBufferManagementSettings
		constexpr auto ConnectionString = 0x80; // FString
		constexpr auto Factory = 0x90; // ULiveLinkSourceFactory*
	}

	namespace n_UKSPawnAction_StopFire {
		constexpr auto EquipPoint = 0xa0; // FGameplayTag
	}

	namespace n_AKSPlayerModManager {
		constexpr auto bOnlyChargeModsWhenAlive = 0x220; // bool
		constexpr auto PlayerStateOwner = 0x228; // AKSPlayerState*
		constexpr auto ActiveMods = 0x248; // TArray<UKSPlayerModInstance*>
	}

	namespace n_UMaterialBillboardComponent {
		constexpr auto Elements = 0x430; // TArray<FMaterialSpriteElement>
	}

	namespace n_UKSActivityRewardCondition_CashEarnedReason {
		constexpr auto MatchingReasons = 0x30; // TArray<FText>
	}

	namespace n_UKSAimAssistDataBase {
		constexpr auto JoyConFallback = 0x30; // EControllerInputType
		constexpr auto JoyConADSFallback = 0x31; // EControllerInputType
		constexpr auto TouchFallback = 0x32; // EControllerInputType
		constexpr auto TouchADSFallback = 0x33; // EControllerInputType
		constexpr auto PCGamepadADSFallback = 0x34; // EControllerInputType
	}

	namespace n_UKSSpawnSelectorTierBranch {
		constexpr auto DefaultBranch = 0x40; // FKSSpawnSelectorTreeNode
		constexpr auto bDoesHandleFailure = 0x68; // bool
		constexpr auto FailureBranch = 0x70; // FKSSpawnSelectorTreeNode
	}

	namespace n_ULandscapeGrassType {
		constexpr auto GrassVarieties = 0x28; // TArray<FGrassVariety>
		constexpr auto bEnableDensityScaling = 0x38; // char : 1
		constexpr auto GrassMesh = 0x40; // UStaticMesh*
		constexpr auto GrassDensity = 0x48; // float
		constexpr auto PlacementJitter = 0x4c; // float
		constexpr auto StartCullDistance = 0x50; // int32_t
		constexpr auto EndCullDistance = 0x54; // int32_t
		constexpr auto RandomRotation = 0x58; // bool
		constexpr auto AlignToSurface = 0x59; // bool
	}

	namespace n_UParticleModuleLocationPrimitiveCylinder_Seeded {
		constexpr auto RandomSeedInfo = 0x120; // FParticleRandomSeedInfo
	}

	namespace n_UNavigationDataChunk {
		constexpr auto NavigationDataName = 0x28; // FName
	}

	namespace n_UMovieSceneSection {
		constexpr auto EvalOptions = 0x50; // FMovieSceneSectionEvalOptions
		constexpr auto Easing = 0x58; // FMovieSceneEasingSettings
		constexpr auto SectionRange = 0x90; // FMovieSceneFrameRange
		constexpr auto PreRollFrames = 0xa0; // FFrameNumber
		constexpr auto PostRollFrames = 0xa4; // FFrameNumber
		constexpr auto RowIndex = 0xa8; // int32_t
		constexpr auto OverlapPriority = 0xac; // int32_t
		constexpr auto bIsActive = 0xb0; // char : 1
		constexpr auto bIsLocked = 0xb0; // char : 1
		constexpr auto StartTime = 0xb4; // float
		constexpr auto EndTime = 0xb8; // float
		constexpr auto PrerollTime = 0xbc; // float
		constexpr auto PostrollTime = 0xc0; // float
		constexpr auto bIsInfinite = 0xc4; // char : 1
		constexpr auto bSupportsInfiniteRange = 0xc8; // bool
		constexpr auto BlendType = 0xc9; // FOptionalMovieSceneBlendType
	}

	namespace n_UTireConfig {
		constexpr auto FrictionScale = 0x30; // float
		constexpr auto TireFrictionScales = 0x38; // TArray<FTireConfigMaterialFriction>
	}

	namespace n_UGeometryCacheTrackStreamable {
		constexpr auto Codec = 0x58; // UGeometryCacheCodecBase*
		constexpr auto StartSampleTime = 0xc8; // float
	}

	namespace n_UBrushBaseProperties {
		constexpr auto BrushSize = 0x50; // float
		constexpr auto bSpecifyRadius = 0x54; // bool
		constexpr auto BrushRadius = 0x58; // float
		constexpr auto BrushStrength = 0x5c; // float
		constexpr auto BrushFalloffAmount = 0x60; // float
		constexpr auto bShowStrength = 0x64; // bool
		constexpr auto bShowFalloff = 0x65; // bool
	}

	namespace n_UKSBTD_InteractableState {
		constexpr auto InteractableStateFilter = 0x90; // FKSInteractableStateFilter
	}

	namespace n_UInputRouter {
		constexpr auto bAutoInvalidateOnHover = 0x28; // bool
		constexpr auto bAutoInvalidateOnCapture = 0x29; // bool
		constexpr auto ActiveInputBehaviors = 0x38; // UInputBehaviorSet*
	}

	namespace n_USizeBox {
		constexpr auto WidthOverride = 0x138; // float
		constexpr auto HeightOverride = 0x13c; // float
		constexpr auto MinDesiredWidth = 0x140; // float
		constexpr auto MinDesiredHeight = 0x144; // float
		constexpr auto MaxDesiredWidth = 0x148; // float
		constexpr auto MaxDesiredHeight = 0x14c; // float
		constexpr auto MinAspectRatio = 0x150; // float
		constexpr auto MaxAspectRatio = 0x154; // float
		constexpr auto bOverride_WidthOverride = 0x158; // char : 1
		constexpr auto bOverride_HeightOverride = 0x158; // char : 1
		constexpr auto bOverride_MinDesiredWidth = 0x158; // char : 1
		constexpr auto bOverride_MinDesiredHeight = 0x158; // char : 1
		constexpr auto bOverride_MaxDesiredWidth = 0x158; // char : 1
		constexpr auto bOverride_MaxDesiredHeight = 0x158; // char : 1
		constexpr auto bOverride_MinAspectRatio = 0x158; // char : 1
		constexpr auto bOverride_MaxAspectRatio = 0x158; // char : 1
	}

	namespace n_UWBP_RogueArmoryPanel_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto CategoryOneCount_SinglePrimary = 0x528; // UTextBlock*
		constexpr auto CategoryOneIcon_SinglePrimary = 0x530; // UWBP_AsyncIcon_C*
		constexpr auto CategoryOneName_SinglePrimary = 0x538; // UTextBlock*
		constexpr auto CategoryTwoCount_SinglePrimary = 0x540; // UTextBlock*
		constexpr auto CategoryTwoIcon_SinglePrimary = 0x548; // UWBP_AsyncIcon_C*
		constexpr auto CategoryTwoName_SinglePrimary = 0x550; // UTextBlock*
		constexpr auto GadgetSlot1 = 0x558; // UWBP_WeaponProgressButton_C*
		constexpr auto GadgetSlot2 = 0x560; // UWBP_WeaponProgressButton_C*
		constexpr auto MeleeSlot = 0x568; // UWBP_WeaponProgressButton_C*
		constexpr auto PrimarySlot = 0x570; // UWBP_WeaponProgressButton_C*
		constexpr auto PrimaryWeaponSwapButton = 0x578; // UWBP_StandardButton_02_C*
		constexpr auto SecondarySlot = 0x580; // UWBP_WeaponProgressButton_C*
		constexpr auto WBP_CallToAction = 0x588; // UWBP_CallToAction_C*
		constexpr auto WBP_RoguePanelHeader = 0x590; // UWBP_RoguePanelHeader_C*
		constexpr auto RogueDetailsWidget = 0x598; // UKSRogueDetailsWidget*
		constexpr auto OnSelectPrimaryWeaponSwap = 0x5a0; // FMulticastInlineDelegate
		constexpr auto LocalJobItem = 0x5b0; // UKSJobItem*
	}

	namespace n_UTextBlock {
		constexpr auto Text = 0x130; // FText
		constexpr auto TextDelegate = 0x148; // FDelegate
		constexpr auto ColorAndOpacity = 0x158; // FSlateColor
		constexpr auto ColorAndOpacityDelegate = 0x180; // FDelegate
		constexpr auto Font = 0x190; // FSlateFontInfo
		constexpr auto StrikeBrush = 0x1e0; // FSlateBrush
		constexpr auto ShadowOffset = 0x268; // FVector2D
		constexpr auto ShadowColorAndOpacity = 0x270; // FLinearColor
		constexpr auto ShadowColorAndOpacityDelegate = 0x280; // FDelegate
		constexpr auto MinDesiredWidth = 0x290; // float
		constexpr auto bWrapWithInvalidationPanel = 0x294; // bool
		constexpr auto bAutoWrapText = 0x295; // bool
		constexpr auto bSimpleTextMode = 0x296; // bool
	}

	namespace n_AKSNeutralBombSpawner {
		constexpr auto BombInfo = 0x348; // FLootSiteDropInfo
		constexpr auto bInitialSpawn = 0x378; // bool
		constexpr auto bRespawn = 0x379; // bool
	}

	namespace n_UWBP_Header1_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto Decro = 0x240; // UImage*
		constexpr auto Text = 0x248; // UTextBlock*
		constexpr auto TextValue = 0x250; // FText
		constexpr auto Justification = 0x268; // ETextJustify
	}

	namespace n_UAISenseConfig_Sight {
		constexpr auto Implementation = 0x48; // UAISense_Sight*
		constexpr auto SightRadius = 0x50; // float
		constexpr auto LoseSightRadius = 0x54; // float
		constexpr auto PeripheralVisionAngleDegrees = 0x58; // float
		constexpr auto DetectionByAffiliation = 0x5c; // FAISenseAffiliationFilter
		constexpr auto AutoSuccessRangeFromLastSeenLocation = 0x60; // float
	}

	namespace n_USubmixEffectReverbPreset {
		constexpr auto Settings = 0x9c; // FSubmixEffectReverbSettings
	}

	namespace n_UBTTask_GameplayTaskBase {
		constexpr auto bWaitForGameplayTask = 0x70; // char : 1
	}

	namespace n_AKSRocket {
		constexpr auto RocketRotationCatchUpRadians = 0x4c0; // float
		constexpr auto CameraInitialLockoutTime = 0x4c4; // float
		constexpr auto SpringArm = 0x4d0; // USpringArmComponent*
		constexpr auto MainCamera = 0x4d8; // UCameraComponent*
		constexpr auto ExplodeWeaponAsset = 0x4e0; // UKSWeaponAsset*
		constexpr auto FlightDuration = 0x4e8; // float
		constexpr auto OnFlightDurationTimerTick = 0x4f0; // FMulticastInlineDelegate
		constexpr auto OnFlightDurationTimerActive = 0x500; // FMulticastInlineDelegate
		constexpr auto OnFlightDurationTimerComplete = 0x510; // FMulticastInlineDelegate
		constexpr auto FlightDurationTimer = 0x520; // UKSTimerComponent*
	}

	namespace n_UGameViewportClient {
		constexpr auto ViewportConsole = 0x40; // UConsole*
		constexpr auto DebugProperties = 0x48; // TArray<FDebugDisplayProperty>
		constexpr auto MaxSplitscreenPlayers = 0x68; // int32_t
		constexpr auto World = 0x78; // UWorld*
		constexpr auto GameInstance = 0x80; // UGameInstance*
	}

	namespace n_UActorComponent {
		constexpr auto PrimaryComponentTick = 0x30; // FActorComponentTickFunction
		constexpr auto ComponentTags = 0x60; // TArray<FName>
		constexpr auto AssetUserData = 0x70; // TArray<UAssetUserData*>
		constexpr auto UCSSerializationIndex = 0x84; // int32_t
		constexpr auto bNetAddressable = 0x88; // char : 1
		constexpr auto bReplicates = 0x88; // char : 1
		constexpr auto bAutoActivate = 0x89; // char : 1
		constexpr auto bIsActive = 0x8a; // char : 1
		constexpr auto bEditableWhenInherited = 0x8a; // char : 1
		constexpr auto bCanEverAffectNavigation = 0x8a; // char : 1
		constexpr auto bIsEditorOnly = 0x8a; // char : 1
		constexpr auto CreationMethod = 0x8c; // EComponentCreationMethod
		constexpr auto OnComponentActivated = 0x8d; // FMulticastSparseDelegate
		constexpr auto OnComponentDeactivated = 0x8e; // FMulticastSparseDelegate
		constexpr auto UCSModifiedProperties = 0x90; // TArray<FSimpleMemberReference>
	}

	namespace n_UMaterialExpressionStaticComponentMaskParameter {
		constexpr auto Input = 0x58; // FExpressionInput
		constexpr auto DefaultR = 0x6c; // char : 1
		constexpr auto DefaultG = 0x6c; // char : 1
		constexpr auto DefaultB = 0x6c; // char : 1
		constexpr auto DefaultA = 0x6c; // char : 1
	}

	namespace n_UParticleModuleBeamTarget {
		constexpr auto TargetMethod = 0x30; // Beam2SourceTargetMethod
		constexpr auto TargetName = 0x34; // FName
		constexpr auto Target = 0x40; // FRawDistributionVector
		constexpr auto bTargetAbsolute = 0x88; // char : 1
		constexpr auto bLockTarget = 0x88; // char : 1
		constexpr auto TargetTangentMethod = 0x8c; // Beam2SourceTargetTangentMethod
		constexpr auto TargetTangent = 0x90; // FRawDistributionVector
		constexpr auto bLockTargetTangent = 0xd8; // char : 1
		constexpr auto TargetStrength = 0xe0; // FRawDistributionFloat
		constexpr auto bLockTargetStength = 0x110; // char : 1
		constexpr auto LockRadius = 0x114; // float
	}

	namespace n_UBlackboardData {
		constexpr auto Parent = 0x30; // UBlackboardData*
		constexpr auto Keys = 0x38; // TArray<FBlackboardEntry>
		constexpr auto bHasSynchronizedKeys = 0x48; // char : 1
	}

	namespace n_ULiveLinkAnimationVirtualSubject {
		constexpr auto bAppendSubjectNameToBones = 0xd9; // bool
	}

	namespace n_USynthSamplePlayer {
		constexpr auto SoundWave = 0x6e0; // USoundWave*
		constexpr auto OnSampleLoaded = 0x6e8; // FMulticastInlineDelegate
		constexpr auto OnSamplePlaybackProgress = 0x6f8; // FMulticastInlineDelegate
	}

	namespace n_AKSExponentialHeightFog {
		constexpr auto bAllowManualSetVisibility = 0x220; // bool
		constexpr auto ActivatedCinematicSubLevelNames = 0x228; // TArray<FString>
		constexpr auto Component = 0x238; // UExponentialHeightFogComponent*
	}

	namespace n_UKSActivity_ViewRedirector {
		constexpr auto ActivitiesToCheck = 0x28; // TArray<TSoftObjectPtr<UKSActivity>>
	}

	namespace n_AIntervalGizmoActor {
		constexpr auto UpIntervalComponent = 0x220; // UGizmoLineHandleComponent*
		constexpr auto DownIntervalComponent = 0x228; // UGizmoLineHandleComponent*
		constexpr auto ForwardIntervalComponent = 0x230; // UGizmoLineHandleComponent*
	}

	namespace n_UMaterialExpressionAntialiasedTextureMask {
		constexpr auto Threshold = 0xf0; // float
		constexpr auto Channel = 0xf4; // ETextureColorChannel
	}

	namespace n_UParticleModuleTypeDataAnimTrail {
		constexpr auto bDeadTrailsOnDeactivate = 0x30; // char : 1
		constexpr auto bEnablePreviousTangentRecalculation = 0x30; // char : 1
		constexpr auto bTangentRecalculationEveryFrame = 0x30; // char : 1
		constexpr auto TilingDistance = 0x34; // float
		constexpr auto DistanceTessellationStepSize = 0x38; // float
		constexpr auto TangentTessellationStepSize = 0x3c; // float
		constexpr auto WidthTessellationStepSize = 0x40; // float
	}

	namespace n_UScaleBox {
		constexpr auto Stretch = 0x128; // EStretch
		constexpr auto StretchDirection = 0x129; // EStretchDirection
		constexpr auto UserSpecifiedScale = 0x12c; // float
		constexpr auto IgnoreInheritedScale = 0x130; // bool
	}

	namespace n_UAkPoolComponent {
		constexpr auto PooledAkComponentClass = 0xd8; // UAkComponent*
		constexpr auto UnusedComponentsArray = 0xe0; // TArray<UAkComponent*>
		constexpr auto UsedComponentsSet = 0xf0; // TSet<UAkComponent*>
		constexpr auto PeekedAkComponent = 0x140; // UAkComponent*
	}

	namespace n_UBlocker_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto Closer = 0x528; // UButton*
		constexpr auto Image_1 = 0x530; // UImage*
		constexpr auto Target = 0x538; // UPUMG_Widget*
		constexpr auto ClickToClose = 0x540; // bool
	}

	namespace n_UWBP_PanelInteractive_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto animClick = 0x528; // UWidgetAnimation*
		constexpr auto animHover = 0x530; // UWidgetAnimation*
		constexpr auto ClickBG = 0x538; // UImage*
		constexpr auto HitTarget = 0x540; // UButton*
		constexpr auto PanelBG = 0x548; // UImage*
		constexpr auto PanelContent_3 = 0x550; // UNamedSlot*
		constexpr auto PanelColor = 0x558; // FLinearColor
		constexpr auto ContentPadding = 0x568; // FMargin
		constexpr auto OnBtnClicked = 0x578; // FMulticastInlineDelegate
		constexpr auto OnBtnHovered = 0x588; // FMulticastInlineDelegate
		constexpr auto OnBtnUnhovered = 0x598; // FMulticastInlineDelegate
		constexpr auto bIsDisable = 0x5a8; // bool
		constexpr auto bIsActive = 0x5a9; // bool
		constexpr auto TintColor = 0x5ac; // FLinearColor
		constexpr auto bColorOverride = 0x5bc; // bool
		constexpr auto PanelInteractiveHoverSound = 0x5c0; // UAkAudioEvent*
		constexpr auto PanelInteractiveClickSound = 0x5c8; // UAkAudioEvent*
	}

	namespace n_UPlatformInterfaceWebResponse {
		constexpr auto OriginalURL = 0x28; // FString
		constexpr auto ResponseCode = 0x38; // int32_t
		constexpr auto Tag = 0x3c; // int32_t
		constexpr auto StringResponse = 0x40; // FString
		constexpr auto BinaryResponse = 0x50; // TArray<char>
	}

	namespace n_UMaterialExpressionDDY {
		constexpr auto Value = 0x40; // FExpressionInput
	}

	namespace n_UKSAISense_Player {
		constexpr auto RegisteredEvents = 0x80; // TArray<FKSAIPlayerStimulusEvent>
	}

	namespace n_UParticleModuleSubUVMovie {
		constexpr auto bUseEmitterTime = 0x70; // char : 1
		constexpr auto FrameRate = 0x78; // FRawDistributionFloat
		constexpr auto StartingFrame = 0xa8; // int32_t
	}

	namespace n_UEnvelopeFollowerListener {
		constexpr auto OnEnvelopeFollowerUpdate = 0xb0; // FMulticastInlineDelegate
	}

	namespace n_USubmixEffectFilterPreset {
		constexpr auto Settings = 0x74; // FSubmixEffectFilterSettings
	}

	namespace n_UParticleModuleColorScaleOverLife {
		constexpr auto ColorScaleOverLife = 0x30; // FRawDistributionVector
		constexpr auto AlphaScaleOverLife = 0x78; // FRawDistributionFloat
		constexpr auto bEmitterTime = 0xa8; // char : 1
	}

	namespace n_UKSEmoteCosmeticComponent {
		constexpr auto PawnRotationLockId = 0x120; // char
		constexpr auto EmotionInstanceId = 0x124; // int32_t
		constexpr auto EmoteAsset = 0x158; // UKSEmote*
		constexpr auto PlayTicker = 0x160; // uint16_t
		constexpr auto SkinObject = 0x168; // UMultiSkinObject*
		constexpr auto SkinTable = 0x170; // UDynamicSkinTable*
		constexpr auto bIsInitialized = 0x218; // bool
		constexpr auto bIsPlaying = 0x219; // bool
		constexpr auto bShouldLoop = 0x21a; // bool
		constexpr auto LastEmotePlayedLocation = 0x21c; // FVector
		constexpr auto InterruptTick = 0x230; // FKSEmoteInterruptTickFunction
		constexpr auto SubInstances = 0x288; // TArray<UKSEmoteCosmeticSubInstance*>
	}

	namespace n_UKSJobRole {
		constexpr auto JobRoleDisplayName = 0x30; // FText
		constexpr auto JobRoleName = 0x48; // FName
		constexpr auto JobRoleDescription = 0x50; // FText
		constexpr auto JobRoleSortOrder = 0x68; // int32_t
		constexpr auto ShouldHideRole = 0x6c; // bool
		constexpr auto JobRoleIcon = 0x70; // UTexture2D*
	}

	namespace n_UWBP_ranked_level_tracker_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto CurrentProgress = 0x528; // UTextBlock*
		constexpr auto RankBadgeEnd = 0x530; // UWBP_RankedIcon_C*
		constexpr auto RankBadgeStart = 0x538; // UWBP_RankedIcon_C*
		constexpr auto TotalProgress = 0x540; // UTextBlock*
		constexpr auto XPBar = 0x548; // UWBP_ProgressEarnedBar_C*
		constexpr auto XPEarnedWrapper = 0x550; // UHorizontalBox*
		constexpr auto Progression = 0x558; // FPlayerProgression
		constexpr auto PlayLevelUpRewardSFX = 0x6c8; // UAkAudioEvent*
		constexpr auto PlayLevelProgressionSFX = 0x6d0; // UAkAudioEvent*
		constexpr auto StopLevelProgressionSFX = 0x6d8; // UAkAudioEvent*
		constexpr auto OnLevelUpEvent = 0x6e0; // FMulticastInlineDelegate
		constexpr auto OnLevelDownEvent = 0x6f0; // FMulticastInlineDelegate
		constexpr auto CurrentLevel = 0x700; // int32_t
	}

	namespace n_UEditableGameplayTagQueryExpression_AnyExprMatch {
		constexpr auto Expressions = 0x28; // TArray<UEditableGameplayTagQueryExpression*>
	}

	namespace n_UWBP_RogueStatsScreen_TabEntry_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto Hover = 0x528; // UWidgetAnimation*
		constexpr auto ActiveIconOverlay = 0x530; // UImage*
		constexpr auto BtnSelect = 0x538; // UButton*
		constexpr auto Highlight = 0x540; // UImage*
		constexpr auto KSAsyncImage_1 = 0x548; // UKSAsyncImage*
		constexpr auto Selected = 0x550; // UImage*
		constexpr auto StatIcon = 0x558; // UWBP_AsyncIcon_C*
		constexpr auto StatName = 0x560; // UTextBlock*
		constexpr auto StatValue = 0x568; // UTextBlock*
		constexpr auto TopDivider = 0x570; // UKSAsyncImage*
		constexpr auto onSelected = 0x578; // FMulticastInlineDelegate
		constexpr auto IsSelected = 0x588; // bool
		constexpr auto ClickRogueStatsScreenTabEntrySFX = 0x590; // UAkAudioEvent*
		constexpr auto HoverRogueStatsScreenTabEntrySFX_1 = 0x598; // UAkAudioEvent*
		constexpr auto PlayerStat = 0x5a0; // UKSStatWrapper*
		constexpr auto PlayerStatObject = 0x5a8; // UKSStatWrapper*
		constexpr auto RogueStat = 0x5b0; // UKSStatWrapper*
	}

	namespace n_AKSFlightPoint {
		constexpr auto SplineComponent = 0x220; // USplineComponent*
		constexpr auto SplinePointType = 0x228; // ESplinePointType
		constexpr auto bIsEndPoint = 0x229; // bool
	}

	namespace n_UHRA_AnimNotify_PlayCameraAnim {
		constexpr auto CameraShake = 0x38; // UCameraShake*
		constexpr auto Scale = 0x40; // float
		constexpr auto Space = 0x44; // ECameraAnimPlaySpace
		constexpr auto CustomPlaySpace = 0x48; // FRotator
	}

	namespace n_UAIAsyncTaskBlueprintProxy {
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFail = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UKSPerkTreeBase {
		constexpr auto OnPerkHovered = 0x520; // FMulticastInlineDelegate
		constexpr auto OnPerkSelected = 0x530; // FMulticastInlineDelegate
		constexpr auto OnPerkUnlockRequest = 0x540; // FMulticastInlineDelegate
		constexpr auto HoverTarget = 0x550; // UWidget*
	}

	namespace n_UWBP_EventScreen_HolidayY1_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto AnimOnShown = 0x528; // UWidgetAnimation*
		constexpr auto BonusTooltip = 0x530; // UBorder*
		constexpr auto ChallengesContainer = 0x538; // UVerticalBox*
		constexpr auto Image_148 = 0x540; // UImage*
		constexpr auto Image_334 = 0x548; // UImage*
		constexpr auto Image_497 = 0x550; // UImage*
		constexpr auto Image_683 = 0x558; // UImage*
		constexpr auto RemainingContainer = 0x560; // UHorizontalBox*
		constexpr auto RichTextBlock_1 = 0x568; // URichTextBlock*
		constexpr auto TimeRemaining = 0x570; // UTextBlock*
		constexpr auto TimeRemainingVal = 0x578; // UTextBlock*
		constexpr auto WBP_ChallengeEntry_Event = 0x580; // UWBP_ChallengeEntry_Event_C*
		constexpr auto WBP_ChallengeEntry_Event_2 = 0x588; // UWBP_ChallengeEntry_Event_C*
		constexpr auto WBP_ChallengeEntry_Event_3 = 0x590; // UWBP_ChallengeEntry_Event_C*
		constexpr auto WBP_Header1_2 = 0x598; // UWBP_Header1_C*
		constexpr auto WBP_Header2 = 0x5a0; // UWBP_Header2_C*
		constexpr auto WBP_HolidayBundleItem_2 = 0x5a8; // UWBP_HolidayBundleItem_C*
		constexpr auto WBP_HolidayBundleItem_3 = 0x5b0; // UWBP_HolidayBundleItem_C*
		constexpr auto WBP_HolidayBundleItem_Free = 0x5b8; // UWBP_HolidayBundleItem_C*
		constexpr auto Current Challenge Data Table Row = 0x5c0; // FName
		constexpr auto Current Challenge Data Table Tag = 0x5c8; // FGameplayTag
		constexpr auto BundleFocusGroup = 0x5d0; // int32_t
		constexpr auto ChallengesFocusGroup = 0x5d4; // int32_t
		constexpr auto SnowPatrolScorchBundleID = 0x5d8; // int32_t
		constexpr auto DoctorFrostySaintBundleID = 0x5dc; // int32_t
		constexpr auto MistletoeVyBundleID = 0x5e0; // int32_t
		constexpr auto HolidayEventLocalAction = 0x5e4; // FName
		constexpr auto CurrentFocusGroup = 0x5ec; // int32_t
		constexpr auto EventTimeRemaining = 0x5f0; // int32_t
		constexpr auto Time Count = 0x5f4; // float
	}

	namespace n_UDestroySessionCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_ALightmassPortal {
		constexpr auto PortalComponent = 0x220; // ULightmassPortalComponent*
	}

	namespace n_UGameplayTagsSettings {
		constexpr auto ImportTagsFromConfig = 0x48; // bool
		constexpr auto WarnOnInvalidTags = 0x49; // bool
		constexpr auto FastReplication = 0x4a; // bool
		constexpr auto InvalidTagCharacters = 0x50; // FString
		constexpr auto CategoryRemapping = 0x60; // TArray<FGameplayTagCategoryRemap>
		constexpr auto GameplayTagTableList = 0x70; // TArray<FSoftObjectPath>
		constexpr auto GameplayTagRedirects = 0x80; // TArray<FGameplayTagRedirect>
		constexpr auto CommonlyReplicatedTags = 0x90; // TArray<FName>
		constexpr auto NumBitsForContainerSize = 0xa0; // int32_t
		constexpr auto NetIndexFirstBitSegment = 0xa4; // int32_t
		constexpr auto RestrictedConfigFiles = 0xa8; // TArray<FRestrictedConfigInfo>
	}

	namespace n_UInterpTrackInstEvent {
		constexpr auto LastUpdatePosition = 0x28; // float
	}

	namespace n_UWBP_CustomMassInviteEntry_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto Selected = 0x528; // UWidgetAnimation*
		constexpr auto Hover = 0x530; // UWidgetAnimation*
		constexpr auto HitArea = 0x538; // UButton*
		constexpr auto InviteSentBg = 0x540; // UOverlay*
		constexpr auto WBP_PlayerInfoDisplay = 0x548; // UWBP_PlayerInfoDisplay_C*
		constexpr auto OnClicked = 0x550; // FMulticastInlineDelegate
		constexpr auto IsToggled = 0x560; // bool
		constexpr auto DisplayHovered = 0x561; // bool
	}

	namespace n_USoundfieldEndpointSubmix {
		constexpr auto SoundfieldEndpointType = 0x38; // FName
		constexpr auto EndpointSettingsClass = 0x40; // UAudioEndpointSettingsBase*
		constexpr auto EndpointSettings = 0x48; // USoundfieldEndpointSettingsBase*
		constexpr auto EncodingSettingsClass = 0x50; // USoundfieldEncodingSettingsBase*
		constexpr auto EncodingSettings = 0x58; // USoundfieldEncodingSettingsBase*
		constexpr auto SoundfieldEffectChain = 0x60; // TArray<USoundfieldEffectBase*>
	}

	namespace n_UKSAutoPickupComponent {
		constexpr auto AutoPickupMinPickupTimeSinceCreation = 0xb0; // float
		constexpr auto AutoPickupDistance = 0xb4; // float
		constexpr auto AutoPickupQueryInterval = 0xb8; // float
		constexpr auto bActivateAutoPickups = 0xbc; // bool
		constexpr auto ItemPriorityMap = 0xc0; // TMap<UKSItem*, int32_t>
		constexpr auto bAutoPickupClusivityEnabled = 0x110; // bool
		constexpr auto ClusivityQuery = 0x118; // FGameplayTagQuery
	}

	namespace n_UAnimationAsset {
		constexpr auto Skeleton = 0x38; // USkeleton*
		constexpr auto MetaData = 0x60; // TArray<UAnimMetaData*>
		constexpr auto AssetUserData = 0x70; // TArray<UAssetUserData*>
	}

	namespace n_UMaterialExpressionStaticBool {
		constexpr auto Value = 0x40; // char : 1
	}

	namespace n_UWBP_ProgressionTally_Entry_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto BGWrapper = 0x528; // UBorder*
		constexpr auto BonusPointsEarned = 0x530; // UTextBlock*
		constexpr auto BonusType = 0x538; // EKSProgressionBonusType
	}

	namespace n_UAkInitBankAssetData {
		constexpr auto PluginInfos = 0x88; // TArray<FAkPluginInfo>
	}

	namespace n_ULoginDownloadProgressBar_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
		constexpr auto Installing = 0x250; // UWidgetAnimation*
		constexpr auto LoadingBar_2 = 0x258; // UProgressBar*
		constexpr auto ProgressText = 0x260; // UTextBlock*
	}

	namespace n_UMovieSceneEventRepeaterSection {
		constexpr auto Event = 0xe0; // FMovieSceneEvent
	}

	namespace n_UAnimationSharingSetup {
		constexpr auto SkeletonSetups = 0x28; // TArray<FPerSkeletonAnimationSharingSetup>
		constexpr auto ScalabilitySettings = 0x38; // FAnimationSharingScalability
	}

	namespace n_UKSPawnActionBase {
		constexpr auto KSChar = 0x98; // AKSCharacter*
	}

	namespace n_UGeometryCacheTrack_FlipbookAnimation {
		constexpr auto NumMeshSamples = 0x58; // uint32_t
	}

	namespace n_UKSActorFilterComponent {
		constexpr auto OnFilterActorAddedDel = 0xb0; // FMulticastInlineDelegate
		constexpr auto OnFilterActorRemovedDel = 0xc0; // FMulticastInlineDelegate
		constexpr auto ActorFilterConfig = 0xd0; // FKSActorFilterConfig
		constexpr auto Filter = 0x100; // FKSActorFilter
		constexpr auto RepFilteredActors = 0x120; // TArray<TWeakObjectPtr<AActor>>
		constexpr auto CachedFilteredActors = 0x130; // TArray<TWeakObjectPtr<AActor>>
	}

	namespace n_UVectorFieldComponent {
		constexpr auto VectorField = 0x430; // UVectorField*
		constexpr auto Intensity = 0x438; // float
		constexpr auto Tightness = 0x43c; // float
		constexpr auto bPreviewVectorField = 0x440; // char : 1
	}

	namespace n_UDamageType {
		constexpr auto bCausedByWorld = 0x28; // char : 1
		constexpr auto bScaleMomentumByMass = 0x28; // char : 1
		constexpr auto bRadialDamageVelChange = 0x28; // char : 1
		constexpr auto DamageImpulse = 0x2c; // float
		constexpr auto DestructibleImpulse = 0x30; // float
		constexpr auto DestructibleDamageSpreadScale = 0x34; // float
		constexpr auto DamageFalloff = 0x38; // float
	}

	namespace n_UPUMG_GenericRouteDataObject {
		constexpr auto StringValue = 0x28; // FString
		constexpr auto IntValue = 0x38; // int32_t
		constexpr auto NameValue = 0x3c; // FName
	}

	namespace n_UWBP_GameModeInfoPanel_Lobby_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto DescriptionLabel = 0x240; // URichTextBlock*
		constexpr auto Header = 0x248; // UWBP_Header2_C*
		constexpr auto ImageSwitcher = 0x250; // UWidgetSwitcher*
		constexpr auto MapImage = 0x258; // UWBP_AsyncIcon_C*
		constexpr auto mapName = 0x260; // UTextBlock*
		constexpr auto WBP_AsyncIcon = 0x268; // UWBP_AsyncIcon_C*
		constexpr auto DemolitionImage = 0x270; // UTexture2D*
		constexpr auto ExtractionImage = 0x278; // UTexture2D*
		constexpr auto StrikeoutImage = 0x280; // UTexture2D*
		constexpr auto DTCustomQueues = 0x288; // UDataTable*
	}

	namespace n_UKSResourceManagerComponent {
		constexpr auto OnResourceAddedDel = 0xb0; // FMulticastInlineDelegate
		constexpr auto OnResourceRemovedDel = 0xc0; // FMulticastInlineDelegate
		constexpr auto OnResourceValueChangedDel = 0xd0; // FMulticastInlineDelegate
		constexpr auto OnResourceFilledDel = 0xe0; // FMulticastInlineDelegate
		constexpr auto OnResourceDepletedDel = 0xf0; // FMulticastInlineDelegate
		constexpr auto StartingResources = 0x100; // TArray<FKSResourceInfo>
		constexpr auto ActiveResourceInfoContainer = 0x110; // FKSResourceInfoSerializerContainer
	}

	namespace n_UKSTargetingDetailsWidget {
		constexpr auto CurrentDistance = 0x238; // float
	}

	namespace n_UDatasmithStaticMeshIFCImportData {
		constexpr auto SourceGlobalId = 0x28; // FString
	}

	namespace n_URuntimeVirtualTextureStreamingProxy {
		constexpr auto Settings = 0xe8; // FVirtualTextureBuildSettings
		constexpr auto bSinglePhysicalSpace = 0xf4; // bool
		constexpr auto BuildHash = 0xf8; // uint32_t
	}

	namespace n_UKSPlayerMod_RetrieveTime {
		constexpr auto RetrieveTimeMultiplier = 0x330; // float
	}

	namespace n_UMovieSceneCinematicShotSection {
		constexpr auto ShotDisplayName = 0x158; // FString
		constexpr auto DisplayName = 0x168; // FText
	}

	namespace n_UKSEnforcedEquipmentRuleComponent {
		constexpr auto ItemTables = 0xb0; // TMap<UDataTable*, FGameplayTag>
		constexpr auto ChosenEquipment = 0x100; // TMap<UKSItem*, FGameplayTag>
		constexpr auto EnforcedEquipmentState = 0x1a0; // AKSEnforcedEquipmentState*
	}

	namespace n_UEnvQueryTest_Distance {
		constexpr auto TestMode = 0x1f8; // EEnvTestDistance
		constexpr auto DistanceTo = 0x200; // UEnvQueryContext*
	}

	namespace n_UKSInteractionType {
		constexpr auto InteractionMode = 0x28; // FName
		constexpr auto bInteractionStartsCameraLockout = 0x30; // bool
		constexpr auto CharacterStartSound = 0x38; // FSkinnableAudioEvent
		constexpr auto InteractableStartSound = 0x48; // FSkinnableAudioEvent
		constexpr auto LocalStartSound = 0x58; // FSkinnableAudioEvent
		constexpr auto CharacterEndSound = 0x68; // TMap<EKSInteractionResult, FSkinnableAudioEvent>
		constexpr auto InteractableEndSound = 0xb8; // TMap<EKSInteractionResult, FSkinnableAudioEvent>
		constexpr auto LocalEndSound = 0x108; // TMap<EKSInteractionResult, FSkinnableAudioEvent>
		constexpr auto bAutomaticallyPlayAudio = 0x158; // bool
		constexpr auto bAttachCharacterAutoAudioToSource = 0x159; // bool
		constexpr auto bAttachInteractableAutoAudioToSource = 0x15a; // bool
		constexpr auto CharacterStartEffect = 0x160; // FKSParticleSystemAttachment
		constexpr auto InteractableStartEffect = 0x198; // FKSParticleSystemAttachment
		constexpr auto CharacterEndEffect = 0x1d0; // TMap<EKSInteractionResult, FKSParticleSystemAttachment>
		constexpr auto InteractableEndEffect = 0x220; // TMap<EKSInteractionResult, FKSParticleSystemAttachment>
		constexpr auto CurrentCharacterEffect = 0x270; // TWeakObjectPtr<UParticleSystemComponent>
		constexpr auto CurrentInteractableEffect = 0x278; // TWeakObjectPtr<UParticleSystemComponent>
		constexpr auto StartInteractionMontageRow = 0x280; // FName
		constexpr auto EndInteractionMontageSection = 0x288; // TMap<EKSInteractionResult, FName>
		constexpr auto EndInteractionMontageRow = 0x2d8; // TMap<EKSInteractionResult, FName>
	}

	namespace n_UPhysicsConstraintComponent {
		constexpr auto ConstraintActor1 = 0x208; // AActor*
		constexpr auto ComponentName1 = 0x210; // FConstrainComponentPropName
		constexpr auto ConstraintActor2 = 0x218; // AActor*
		constexpr auto ComponentName2 = 0x220; // FConstrainComponentPropName
		constexpr auto ConstraintSetup = 0x238; // UPhysicsConstraintTemplate*
		constexpr auto OnConstraintBroken = 0x240; // FMulticastInlineDelegate
		constexpr auto ConstraintInstance = 0x250; // FConstraintInstance
	}

	namespace n_ALandscapeMeshProxyActor {
		constexpr auto LandscapeMeshProxyComponent = 0x220; // ULandscapeMeshProxyComponent*
	}

	namespace n_UGizmoComponentAxisSource {
		constexpr auto Component = 0x30; // USceneComponent*
		constexpr auto AxisIndex = 0x38; // int32_t
		constexpr auto bLocalAxes = 0x3c; // bool
	}

	namespace n_AKSControlPoint {
		constexpr auto POIState = 0x390; // EKSPOIState
		constexpr auto ObjectiveInfo = 0x398; // FKSObjectiveInfo
		constexpr auto ObjectiveTimerInfo = 0x400; // FKSObjectiveTimerInfo
		constexpr auto ObjectiveCaptureInfo = 0x438; // FKSObjectiveCaptureInfo
		constexpr auto OnCapturedDelegate = 0x450; // FMulticastInlineDelegate
		constexpr auto OnUncapturedDelegate = 0x460; // FMulticastInlineDelegate
		constexpr auto OnContestedDelegate = 0x470; // FMulticastInlineDelegate
		constexpr auto OnUncontestedDelegate = 0x480; // FMulticastInlineDelegate
		constexpr auto OnOwningTeamChangedDelegate = 0x490; // FMulticastInlineDelegate
		constexpr auto OnCapturingTeamChangedDelegate = 0x4a0; // FMulticastInlineDelegate
		constexpr auto OnScorePeriodElapsedDelegate = 0x4b0; // FMulticastInlineDelegate
		constexpr auto ControlPointSettings = 0x4c0; // FKSControlPointSettings
		constexpr auto OwningTeam = 0x4f0; // AKSTeamState*
		constexpr auto CapturingTeam = 0x4f8; // AKSTeamState*
		constexpr auto CaptureProgress = 0x500; // float
		constexpr auto ScoreUpdatePeriod = 0x504; // float
		constexpr auto NumTeamMembersCapturing = 0x508; // char
		constexpr auto SimulatedProgressRate = 0x50c; // float
		constexpr auto SimulatedTimeUntilScore = 0x510; // float
		constexpr auto FavoredSide = 0x514; // int32_t
		constexpr auto bHideLocked = 0x518; // bool
		constexpr auto RegisteredPawnOverlapComponents = 0x520; // TArray<UPrimitiveComponent*>
		constexpr auto OverlappingPawns = 0x530; // TArray<AKSCharacterBase*>
	}

	namespace n_UMaterialExpressionConstant2Vector {
		constexpr auto R = 0x40; // float
		constexpr auto G = 0x44; // float
	}

	namespace n_UNearMissCurveComponent_C {
		constexpr auto UberGraphFrame = 0x130; // FPointerToUberGraphFrame
	}

	namespace n_UTouchRegionSettings {
		constexpr auto MaxFullAxisLength = 0x28; // float
		constexpr auto MaxFullAxisDeadZoneLength = 0x2c; // float
		constexpr auto MaxDeltaAxisLength = 0x30; // float
		constexpr auto SwipeMaxDuration = 0x34; // float
		constexpr auto SwipeMinLength = 0x38; // float
		constexpr auto SwipeDirectionAngleThreshold = 0x3c; // float
		constexpr auto TapMaxDuration = 0x40; // float
		constexpr auto TapMaxLength = 0x44; // float
		constexpr auto DoubleTapMaxLength = 0x48; // float
		constexpr auto DoubleTapMaxDuration = 0x4c; // float
		constexpr auto TouchRegions = 0x50; // TArray<FTouchRegion>
	}

	namespace n_UKSAnimNotifyState_Emotion {
		constexpr auto Emotion = 0x30; // EKSEmotion
	}

	namespace n_UBlackboardKeyType_NativeEnum {
		constexpr auto EnumName = 0x30; // FString
		constexpr auto EnumType = 0x40; // UEnum*
	}

	namespace n_UObjectReferencer {
		constexpr auto ReferencedObjects = 0x28; // TArray<UObject*>
	}

	namespace n_UWBP_LobbyEventDisplay_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto animCTALoop = 0x528; // UWidgetAnimation*
		constexpr auto HighlightCompleted = 0x530; // UWidgetAnimation*
		constexpr auto OnClick = 0x538; // UWidgetAnimation*
		constexpr auto Highlight = 0x540; // UWidgetAnimation*
		constexpr auto BorderShimmer = 0x548; // UImage*
		constexpr auto Btn_BkgHoverGradient = 0x550; // UImage*
		constexpr auto Btn_BkgPress = 0x558; // UImage*
		constexpr auto Btn_Fill = 0x560; // UImage*
		constexpr auto Btn_HoverStroke = 0x568; // UImage*
		constexpr auto Btn_Stroke = 0x570; // UImage*
		constexpr auto BtnShimmer = 0x578; // UImage*
		constexpr auto ButtonBackground = 0x580; // UOverlay*
		constexpr auto BuyThroughEventProgress = 0x588; // UWBP_ProgressEarnedBar_C*
		constexpr auto BuyThroughRewardItem = 0x590; // UWBP_KSCosmeticItemDisplay_C*
		constexpr auto CheckMark = 0x598; // UImage*
		constexpr auto CheckMark_2 = 0x5a0; // UImage*
		constexpr auto ContentsSwitcher = 0x5a8; // UWidgetSwitcher*
		constexpr auto EventProgress = 0x5b0; // UWBP_ProgressEarnedBar_C*
		constexpr auto EventsHeader = 0x5b8; // UWBP_Header3_C*
		constexpr auto EventXPText = 0x5c0; // UTextBlock*
		constexpr auto EventXPText_2 = 0x5c8; // UTextBlock*
		constexpr auto EventXPText_3 = 0x5d0; // UTextBlock*
		constexpr auto Fill = 0x5d8; // UImage*
		constexpr auto Fill_2 = 0x5e0; // UImage*
		constexpr auto Fill_3 = 0x5e8; // UImage*
		constexpr auto Fill_4 = 0x5f0; // UImage*
		constexpr auto FillInterior = 0x5f8; // UImage*
		constexpr auto FillInterior_2 = 0x600; // UImage*
		constexpr auto FillShimmer = 0x608; // UCanvasPanel*
		constexpr auto FinishedItemIcon = 0x610; // UOverlay*
		constexpr auto FinishedItemIcon_2 = 0x618; // UOverlay*
		constexpr auto HitTarget = 0x620; // UButton*
		constexpr auto IconSwitcher_BuyThroughIcon = 0x628; // UWidgetSwitcher*
		constexpr auto NormalItemIcon = 0x630; // UOverlay*
		constexpr auto NormalItemIcon_2 = 0x638; // UOverlay*
		constexpr auto RewardCountText = 0x640; // UTextBlock*
		constexpr auto RewardCountText_2 = 0x648; // UTextBlock*
		constexpr auto RewardItem = 0x650; // UWBP_KSCosmeticItemDisplay_C*
		constexpr auto StatusIconSmall = 0x658; // UWidgetSwitcher*
		constexpr auto WBP_BattlePassEmblem = 0x660; // UWBP_BattlePassEmblem_C*
		constexpr auto WBP_CallToAction = 0x668; // UWBP_CallToAction_C*
		constexpr auto WidgetSwitcher_BuyThroughText = 0x670; // UWidgetSwitcher*
		constexpr auto IsFinished = 0x678; // bool
		constexpr auto ClickLobbyEventDisplaySFX = 0x680; // UAkAudioEvent*
		constexpr auto HoverLobbyEventDisplaySFX = 0x688; // UAkAudioEvent*
		constexpr auto OverlayLobbyEventDisplaySFX = 0x690; // UAkAudioEvent*
		constexpr auto DisplayType = 0x698; // EEventDisplayType
		constexpr auto EventItemId = 0x69c; // int32_t
		constexpr auto EventScreenViewed = 0x6a0; // FName
	}

	namespace n_ULoadoutClassCollection {
		constexpr auto CollectionName = 0x98; // FText
		constexpr auto CollectionDescription = 0xb0; // FText
	}

	namespace n_UWBP_QuickPlay_QueueButton_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto hoveranim = 0x528; // UWidgetAnimation*
		constexpr auto ButtonText = 0x530; // UTextBlock*
		constexpr auto WarningIcon = 0x538; // UImage*
		constexpr auto WBP_Graphic_Button = 0x540; // UWBP_Graphic_Button_C*
		constexpr auto OnQueueBtnClicked = 0x548; // FMulticastInlineDelegate
		constexpr auto OnQueueBtnHovered = 0x558; // FMulticastInlineDelegate
		constexpr auto OnQueueBtnUnhovered = 0x568; // FMulticastInlineDelegate
		constexpr auto QueueInfo = 0x578; // FClientQueueInfo
	}

	namespace n_UMovieSceneCameraCutTrack {
		constexpr auto bCanBlend = 0x58; // bool
		constexpr auto Sections = 0x60; // TArray<UMovieSceneSection*>
	}

	namespace n_UWBP_ActiveMissionPanel_C {
		constexpr auto UberGraphFrame = 0x4c0; // FPointerToUberGraphFrame
		constexpr auto ActiveMission_4 = 0x4c8; // UWBP_EventMissionItem_C*
		constexpr auto ActiveMission_Bar_7 = 0x4d0; // UImage*
		constexpr auto ActiveMission_Bar_8 = 0x4d8; // UImage*
		constexpr auto Border = 0x4e0; // UImage*
		constexpr auto Btn_Fill_7 = 0x4e8; // UImage*
		constexpr auto Btn_Fill_8 = 0x4f0; // UImage*
		constexpr auto Btn_HoverStroke_7 = 0x4f8; // UImage*
		constexpr auto Btn_HoverStroke_8 = 0x500; // UImage*
		constexpr auto Btn_Stroke_7 = 0x508; // UImage*
		constexpr auto Btn_Stroke_8 = 0x510; // UImage*
		constexpr auto ButtonBackground_7 = 0x518; // UOverlay*
		constexpr auto ButtonBackground_8 = 0x520; // UOverlay*
		constexpr auto chevron = 0x528; // UImage*
		constexpr auto chevron_2 = 0x530; // UImage*
		constexpr auto ChooseActiveMissionWrapper = 0x538; // UHorizontalBox*
		constexpr auto ChooseMissionCallout = 0x540; // UWBP_KeyCallout_C*
		constexpr auto Completed_7 = 0x548; // UImage*
		constexpr auto Completed_8 = 0x550; // UImage*
		constexpr auto MissionPanel = 0x558; // UWBP_PanelInteractive_C*
		constexpr auto PromptSwitcher = 0x560; // UWidgetSwitcher*
		constexpr auto RunwayPortrait = 0x568; // UImage*
		constexpr auto ScanLines = 0x570; // UImage*
		constexpr auto StatusSwitcher_4 = 0x578; // UWidgetSwitcher*
		constexpr auto OnPanelClicked = 0x580; // FMulticastInlineDelegate
	}

	namespace n_UCheckbox_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto background = 0x528; // UWidgetSwitcher*
		constexpr auto Check = 0x530; // UImage*
		constexpr auto HitTarget = 0x538; // UButton*
		constexpr auto Hovered = 0x540; // UImage*
		constexpr auto Unhovered = 0x548; // UImage*
		constexpr auto Checked = 0x550; // bool
		constexpr auto OnCheckChanged = 0x558; // FMulticastInlineDelegate
		constexpr auto HoverCheckboxSFX = 0x568; // UAkAudioEvent*
		constexpr auto ClickCheckboxSFX = 0x570; // UAkAudioEvent*
	}

	namespace n_AKSPlayerController {
		constexpr auto ProjectileDebugLifetime = 0x6b8; // float
		constexpr auto OnKSPlayerStateReplicatedDel = 0x6c0; // FMulticastInlineDelegate
		constexpr auto DeferredViewTargetChangedUpdate = 0x718; // TArray<FDeferredViewTargetChangeInfo>
		constexpr auto CurrentSpectateTarget = 0x730; // AKSPlayerState*
		constexpr auto CurrentSpectateController = 0x738; // TWeakObjectPtr<AController>
		constexpr auto CurrentSpectateViewTarget = 0x740; // TWeakObjectPtr<AActor>
		constexpr auto OnBeginPlayingState = 0x788; // FMulticastInlineDelegate
		constexpr auto ClientContext = 0x798; // FClientContext
		constexpr auto ClientInputTypeUse = 0x860; // FClientInputTypeUse
		constexpr auto bRecordingFrameRateInfo = 0x868; // bool
		constexpr auto Render = 0x86c; // FClientStatistics
		constexpr auto Game = 0x884; // FClientStatistics
		constexpr auto GPU = 0x89c; // FClientStatistics
		constexpr auto RHIT = 0x8b4; // FClientStatistics
		constexpr auto Frame = 0x8cc; // FClientStatistics
		constexpr auto ResolutionFractionApproximation = 0x8e4; // FClientStatistics
		constexpr auto FrameRateDataSmoothingFactor = 0x8fc; // float
		constexpr auto FrameRateDataPushCountdown = 0x900; // float
		constexpr auto DefaultCameraName = 0x904; // FName
		constexpr auto bWaitingToViewPawn = 0x90c; // bool
		constexpr auto LastPingCalcTime = 0x910; // float
		constexpr auto HUDClass = 0x918; // TSoftClassPtr<UObject>
		constexpr auto ShotListener = 0x940; // UKSPlayerShotListener*
		constexpr auto OnHUDSetup = 0x948; // FMulticastInlineDelegate
		constexpr auto bCachedIsUIRelevant = 0x998; // bool
		constexpr auto bCachedIsOnlyASpector = 0x999; // bool
		constexpr auto OnPlayerControllerIsUIRelevantDel = 0x9a0; // FMulticastInlineDelegate
		constexpr auto OnViewedPawnChangedDel = 0x9d0; // FMulticastInlineDelegate
		constexpr auto OnControllerChangedDel = 0x9f8; // FMulticastInlineDelegate
		constexpr auto OnSpectateStateChanged = 0xa08; // FMulticastInlineDelegate
		constexpr auto KSCharacter = 0xa20; // AKSCharacterBase*
		constexpr auto IsInTouchMode = 0xa28; // bool
		constexpr auto StartInTouchMode = 0xa29; // bool
		constexpr auto TouchModeAutoFireRadius = 0xa2c; // float
		constexpr auto TouchModeAutoFireTickRate = 0xa30; // float
		constexpr auto TouchModeClearAdsDelay = 0xa34; // float
		constexpr auto bTouchAutoFireNeededAds = 0xa38; // bool
		constexpr auto LastTouchAutoFireWeaponID = 0xa50; // uint32_t
		constexpr auto RenderThreadInputHandler = 0xa58; // URenderThreadInputHandler*
		constexpr auto OnTouchModeChanged = 0xa68; // FMulticastInlineDelegate
		constexpr auto MouseLookSensitivityCurve = 0xa78; // UCurveFloat*
		constexpr auto LookSensitivityToMaxLookSpeed = 0xa80; // FInterpCurveFloat
		constexpr auto BaseGamepadTurnRateScale = 0xa98; // float
		constexpr auto BaseGamepadLookUpRateScale = 0xa9c; // float
		constexpr auto GamepadRightStickVelocity = 0xaa0; // FVector2D
		constexpr auto AccumulatedRotationInput = 0xaa8; // FRotator
		constexpr auto GamepadLook = 0xab8; // FVector2D
		constexpr auto GamepadLookSpeedManagerClass = 0xac0; // UKSGamepadLookSpeedManager*
		constexpr auto JoyConLookSpeedManagerClass = 0xac8; // UKSGamepadLookSpeedManager*
		constexpr auto GamepadLookSpeedManager = 0xad0; // UKSGamepadLookSpeedManager*
		constexpr auto JoyConLookSpeedManager = 0xad8; // UKSGamepadLookSpeedManager*
		constexpr auto InputYawScaleADS = 0xae0; // float
		constexpr auto InputPitchScaleADS = 0xae4; // float
		constexpr auto InputRollScaleADS = 0xae8; // float
		constexpr auto ThisFrameKickbackRotationCache = 0xaec; // FRotator
		constexpr auto bKickbackEnabled = 0xaf8; // bool
		constexpr auto ActiveKickback = 0xb00; // TArray<FKickbackPlayback>
		constexpr auto bKickbackRecoveryActive = 0xb10; // bool
		constexpr auto KickbackRecoveryDelayRemaining = 0xb14; // float
		constexpr auto KickbackRecoveryAcceleration = 0xb18; // float
		constexpr auto KickbackRecoveryTargetRate = 0xb1c; // float
		constexpr auto KickbackRecoveryRate = 0xb20; // float
		constexpr auto MaxCumulativeKickbackVerticalAngle = 0xb24; // float
		constexpr auto KickbackRecoveryRotation = 0xb28; // FRotator
		constexpr auto KickbackCancelRotation = 0xb34; // FRotator
		constexpr auto KickbackCancelThreshold = 0xb40; // float
		constexpr auto bAllowKickbackRecoveryCancel = 0xb48; // bool
		constexpr auto bUseSmartKickbackRecovery = 0xb49; // bool
		constexpr auto KickbackRecoveryEndThreshold = 0xb4c; // float
		constexpr auto KickbackScalingFactorMouse = 0xb50; // float
		constexpr auto AimAssistComponent = 0xb58; // UKSAimAssistComponent*
		constexpr auto ViewedPawnTakeDamageDel = 0xb60; // FMulticastInlineDelegate
		constexpr auto ViewedPawnTakeArmorDamageDel = 0xb70; // FMulticastInlineDelegate
		constexpr auto ViewedPawnInstigateDamageDel = 0xb80; // FMulticastInlineDelegate
		constexpr auto ViewedPawnInstigateDamageNotifyDel = 0xb90; // FMulticastInlineDelegate
		constexpr auto OwnedPawnInstigateDamageNotifyDel = 0xba0; // FMulticastInlineDelegate
		constexpr auto OwnedPawnInstigateWeaponFireNotifyDel = 0xbb0; // FMulticastInlineDelegate
		constexpr auto OwnedPawnTakesDamageNotifyDel = 0xbc0; // FMulticastInlineDelegate
		constexpr auto OnOwnedPawnTakeDamageFromInstigatorDel = 0xbd0; // FMulticastInlineDelegate
		constexpr auto OnHUDAnnouncementComponentCreated = 0xbe0; // FMulticastInlineDelegate
		constexpr auto bCreateHUDAnnouncementComponent = 0xbf0; // bool
		constexpr auto HUDAnnouncementComponent = 0xbf8; // UKSHUDAnnouncementComponent*
		constexpr auto bFirstPawnAcknowledged = 0xc48; // bool
		constexpr auto bFirstCharacterApparelFinished = 0xc49; // bool
		constexpr auto bFirstCharacterWeaponsEquipped = 0xc4a; // bool
		constexpr auto bKillcamWorldReady = 0xc4b; // bool
		constexpr auto LastTimePlayedTime = 0xc88; // float
		constexpr auto PingManager = 0xc90; // UKSPingManager*
		constexpr auto RadialMenuManager = 0xc98; // UKSRadialMenuManager*
		constexpr auto JobSelectionManager = 0xca0; // UKSJobSelectionManager*
		constexpr auto GyroTargetSpeedCurve = 0xcd8; // UCurveFloat*
		constexpr auto GyroSensitivityConversionCurve = 0xce0; // UCurveFloat*
		constexpr auto EquipmentManagerComponent = 0xce8; // UKSEquipmentManagerComponent*
		constexpr auto TeamCinematicSequenceActor = 0xcf0; // ALevelSequenceActor*
		constexpr auto bIsTeamLoadedInLobby = 0xcf8; // bool
		constexpr auto OnGameFubarDel = 0xd00; // FMulticastInlineDelegate
		constexpr auto OnRadialMenuPressed = 0xd10; // FMulticastInlineDelegate
		constexpr auto OnRadialMenuReleased = 0xd20; // FMulticastInlineDelegate
		constexpr auto OnRadialMenuUsedLastSelection = 0xd30; // FMulticastInlineDelegate
		constexpr auto OnRadialMenuForceClosed = 0xd40; // FMulticastInlineDelegate
		constexpr auto bRadialMenuOpen = 0xd50; // bool
		constexpr auto OnAutoPickupChanged = 0xd58; // FMulticastInlineDelegate
		constexpr auto OnNewPollCalled = 0xd78; // FMulticastInlineDelegate
		constexpr auto OnLocalPlayerHasVoted = 0xd88; // FMulticastInlineDelegate
		constexpr auto OnPollCompleted = 0xd98; // FMulticastInlineDelegate
		constexpr auto OnVoteCountUpdated = 0xda8; // FMulticastInlineDelegate
		constexpr auto OnPollStateChanged = 0xdb8; // FMulticastInlineDelegate
		constexpr auto bLeftChoiceHeldDown = 0xdc8; // bool
		constexpr auto bRightChoiceHeldDown = 0xdc9; // bool
		constexpr auto bTelemetryFeatureActive = 0xdcd; // bool
		constexpr auto OnTelemetrySettingsChanged = 0xdd0; // FMulticastInlineDelegate
		constexpr auto bUseFallackTeamNum = 0xe4c; // bool
		constexpr auto FallbackTeamNum = 0xe50; // int32_t
		constexpr auto CachedMinimapRenderer = 0xe58; // AKSMinimapRendererBase*
		constexpr auto OnUpdatePlayerRevealedUI = 0xe60; // FMulticastInlineDelegate
		constexpr auto OnUpdateEnemyDetectedUI = 0xe70; // FMulticastInlineDelegate
		constexpr auto OnUpdateActorRevealStateLocally = 0xe80; // FMulticastInlineDelegate
		constexpr auto OnLocalViewAffected = 0xe90; // FMulticastInlineDelegate
		constexpr auto QueueDivertType = 0xea1; // EQueueDivertType
		constexpr auto OnJobSelectorAddedDel = 0xea8; // FMulticastInlineDelegate
	}

	namespace n_UKSPawnInventoryWidget {
		constexpr auto EquipmentWidgets = 0x540; // TMap<FKSEquipmentId, UKSWeaponComponentWidget*>
	}

	namespace n_UKSScreenMarkerWidgetBase {
		constexpr auto bHideWhenOffscreen = 0x318; // bool
		constexpr auto OffscreenMargins = 0x31c; // FVector2D
	}

	namespace n_APlayerState {
		constexpr auto Score = 0x220; // float
		constexpr auto PlayerId = 0x224; // int32_t
		constexpr auto Ping = 0x228; // char
		constexpr auto bShouldUpdateReplicatedPing = 0x22a; // char : 1
		constexpr auto bIsSpectator = 0x22a; // char : 1
		constexpr auto bOnlySpectator = 0x22a; // char : 1
		constexpr auto bIsABot = 0x22a; // char : 1
		constexpr auto bIsInactive = 0x22a; // char : 1
		constexpr auto bFromPreviousLevel = 0x22a; // char : 1
		constexpr auto StartTime = 0x22c; // int32_t
		constexpr auto EngineMessageClass = 0x230; // ULocalMessage*
		constexpr auto SavedNetworkAddress = 0x240; // FString
		constexpr auto UniqueId = 0x250; // FUniqueNetIdRepl
		constexpr auto PawnPrivate = 0x280; // APawn*
		constexpr auto PlayerNamePrivate = 0x300; // FString
	}

	namespace n_ATemplateSequenceActor {
		constexpr auto PlaybackSettings = 0x228; // FMovieSceneSequencePlaybackSettings
		constexpr auto SequencePlayer = 0x240; // UTemplateSequencePlayer*
		constexpr auto TemplateSequence = 0x248; // FSoftObjectPath
		constexpr auto BindingOverride = 0x260; // FTemplateSequenceBindingOverrideData
	}

	namespace n_UClothPhysicalMeshDataNv_Legacy {
		constexpr auto MaxDistances = 0xe0; // TArray<float>
		constexpr auto BackstopDistances = 0xf0; // TArray<float>
		constexpr auto BackstopRadiuses = 0x100; // TArray<float>
		constexpr auto AnimDriveMultipliers = 0x110; // TArray<float>
	}

	namespace n_UBillboardComponent {
		constexpr auto Sprite = 0x430; // UTexture2D*
		constexpr auto bIsScreenSizeScaled = 0x438; // char : 1
		constexpr auto ScreenSize = 0x43c; // float
		constexpr auto U = 0x440; // float
		constexpr auto UL = 0x444; // float
		constexpr auto V = 0x448; // float
		constexpr auto VL = 0x44c; // float
	}

	namespace n_UWBP_WeaponMilestoneEntry_C {
		constexpr auto UberGraphFrame = 0x528; // FPointerToUberGraphFrame
		constexpr auto animHover = 0x530; // UWidgetAnimation*
		constexpr auto CardContent = 0x538; // UHorizontalBox*
		constexpr auto CardContentStateSwitcher = 0x540; // UWidgetSwitcher*
		constexpr auto ChallengeBkg_2 = 0x548; // UImage*
		constexpr auto ChallengeBkg_3 = 0x550; // UImage*
		constexpr auto ChallengeBkg_Switcher = 0x558; // UWidgetSwitcher*
		constexpr auto ChallengeDescription = 0x560; // UTextBlock*
		constexpr auto ChallengeProgressBar = 0x568; // UWBP_ProgressEarnedBar_C*
		constexpr auto ChallengeProgressText = 0x570; // UTextBlock*
		constexpr auto Content_active = 0x578; // UVerticalBox*
		constexpr auto HitTarget = 0x580; // UButton*
		constexpr auto Image_181 = 0x588; // UImage*
		constexpr auto Image_370 = 0x590; // UImage*
		constexpr auto Locked = 0x598; // UOverlay*
		constexpr auto LockedBkg = 0x5a0; // UOverlay*
		constexpr auto LockedDescription = 0x5a8; // UTextBlock*
		constexpr auto LockedTierText = 0x5b0; // UTextBlock*
		constexpr auto ProgressGroup = 0x5b8; // UHorizontalBox*
		constexpr auto RewardImage = 0x5c0; // UKSAsyncImage*
		constexpr auto RewardQtyText = 0x5c8; // UTextBlock*
		constexpr auto RewardSwitcher = 0x5d0; // UWidgetSwitcher*
		constexpr auto Root = 0x5d8; // UOverlay*
		constexpr auto SelectionFrame = 0x5e0; // UImage*
		constexpr auto TopLineRule = 0x5e8; // UImage*
		constexpr auto UnlockedBkg = 0x5f0; // UOverlay*
		constexpr auto CurrentVisualState = 0x5f8; // EChallengeEntry_Card_State
		constexpr auto WeekTableRowName = 0x5fc; // FName
		constexpr auto CurrentActivitySequence = 0x608; // FActivitySequenceRow
		constexpr auto OnMilestoneSelected = 0x638; // FMulticastInlineDelegate
		constexpr auto ButtonClickSound = 0x648; // UAkAudioEvent*
		constexpr auto ButtonHoverSound = 0x650; // UAkAudioEvent*
		constexpr auto MilestoneIndex = 0x658; // int32_t
	}

	namespace n_UKSActivityComponent_MercMastery {
		constexpr auto MercMasteryStatTag = 0x30; // FGameplayTag
		constexpr auto Icon = 0x38; // TSoftObjectPtr<UTexture2D>
		constexpr auto DisplayName = 0x60; // FText
	}

	namespace n_UKSActivityRequirement_JobTag {
		constexpr auto RequiredJobTag = 0x30; // FGameplayTag
	}

	namespace n_UDrawFrustumComponent {
		constexpr auto FrustumColor = 0x430; // FColor
		constexpr auto FrustumAngle = 0x434; // float
		constexpr auto FrustumAspectRatio = 0x438; // float
		constexpr auto FrustumStartDist = 0x43c; // float
		constexpr auto FrustumEndDist = 0x440; // float
		constexpr auto Texture = 0x448; // UTexture*
	}

	namespace n_USocialChatManager {
		constexpr auto DirectChannelsByTargetUser = 0x78; // TMap<TWeakObjectPtr<USocialUser>, USocialPrivateMessageChannel*>
		constexpr auto ChatRoomsById = 0xc8; // TMap<FString, USocialChatRoom*>
		constexpr auto ReadOnlyChannelsByDisplayName = 0x118; // TMap<FString, USocialReadOnlyChatChannel*>
		constexpr auto bEnableChatSlashCommands = 0x168; // bool
		constexpr auto GroupChannels = 0x170; // TMap<FUniqueNetIdRepl, USocialGroupChannel*>
	}

	namespace n_UKSWidget {
		constexpr auto bIsUIOnlyWidget = 0x4c0; // bool
		constexpr auto bIsExclusiveMenuWidget = 0x4c1; // bool
		constexpr auto AmbientSoundRtpc = 0x4c4; // int32_t
		constexpr auto TickAnimations = 0x4c8; // UTickAnimationManager*
		constexpr auto ViewportEvent = 0x4d0; // FDelegate
		constexpr auto bSubstituteKillCamWorld = 0x4e0; // bool
		constexpr auto bSubstituteKillCamOwningPlayer = 0x4e1; // bool
		constexpr auto bWantsKillCamCallbacks = 0x4e2; // bool
		constexpr auto OpacityWhenAiming = 0x500; // float
		constexpr auto DoesFadeOutWhenAiming = 0x504; // bool
		constexpr auto AimTransitionProgress = 0x508; // float
	}

	namespace n_UScrollBoxWidgetStyle {
		constexpr auto ScrollBoxStyle = 0x30; // FScrollBoxStyle
	}

	namespace n_UWBP_Header3_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto Decro = 0x240; // UImage*
		constexpr auto Text = 0x248; // UTextBlock*
		constexpr auto TextValue = 0x250; // FText
	}

	namespace n_UParticleModuleCollision {
		constexpr auto DampingFactor = 0x30; // FRawDistributionVector
		constexpr auto DampingFactorRotation = 0x78; // FRawDistributionVector
		constexpr auto MaxCollisions = 0xc0; // FRawDistributionFloat
		constexpr auto CollisionCompletionOption = 0xf0; // EParticleCollisionComplete
		constexpr auto CollisionTypes = 0xf8; // TArray<EObjectTypeQuery>
		constexpr auto bApplyPhysics = 0x110; // char : 1
		constexpr auto bIgnoreTriggerVolumes = 0x110; // char : 1
		constexpr auto ParticleMass = 0x118; // FRawDistributionFloat
		constexpr auto DirScalar = 0x148; // float
		constexpr auto bPawnsDoNotDecrementCount = 0x14c; // char : 1
		constexpr auto bOnlyVerticalNormalsDecrementCount = 0x14c; // char : 1
		constexpr auto VerticalFudgeFactor = 0x150; // float
		constexpr auto DelayAmount = 0x158; // FRawDistributionFloat
		constexpr auto bDropDetail = 0x188; // char : 1
		constexpr auto bCollideOnlyIfVisible = 0x188; // char : 1
		constexpr auto bIgnoreSourceActor = 0x188; // char : 1
		constexpr auto MaxCollisionDistance = 0x18c; // float
	}

	namespace n_USkeletalMeshSimplificationSettings {
		constexpr auto SkeletalMeshReductionModuleName = 0x38; // FName
	}

	namespace n_UKSBTD_DistanceFromBlackboard {
		constexpr auto ArithmeticOperation = 0x90; // EArithmeticKeyOperation
		constexpr auto DistanceThreshold = 0x94; // float
	}

	namespace n_UKSMVPDeterminant {
		constexpr auto TopStats = 0x30; // TArray<EPlayerStatType>
		constexpr auto StatToWeightMap = 0x40; // TMap<EPlayerStatType, float>
	}

	namespace n_UWBP_BulletedListEntry_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto TextBlock = 0x240; // URichTextBlock*
		constexpr auto Text = 0x248; // FText
	}

	namespace n_UMagicLeapARPinSettings {
		constexpr auto UpdateCheckFrequency = 0x28; // float
		constexpr auto OnUpdatedEventTriggerDelta = 0x2c; // FMagicLeapARPinState
	}

	namespace n_UInteractiveToolsContext {
		constexpr auto InputRouter = 0x58; // UInputRouter*
		constexpr auto ToolManager = 0x60; // UInteractiveToolManager*
		constexpr auto GizmoManager = 0x68; // UInteractiveGizmoManager*
		constexpr auto ToolManagerClass = 0x70; // TSoftClassPtr<UObject>
	}

	namespace n_UKSActivityRewardCondition_RoundWon {
		constexpr auto bCheckRoundWon = 0x30; // bool
	}

	namespace n_AKSProjectile_ProximityGrenade {
		constexpr auto ProximityComponent = 0x9f8; // UKSProximityComponent*
		constexpr auto bInitializeProximityCheckingOnStopped = 0xa00; // bool
	}

	namespace n_UKSActivityRewardCondition_EliminationsAchieved {
		constexpr auto MinEliminationsAchieved = 0x30; // int32_t
		constexpr auto MaxEliminationsAchieved = 0x34; // int32_t
	}

	namespace n_UKSArmorAsset {
		constexpr auto Durability = 0x908; // float
		constexpr auto StartingDurability = 0x90c; // float
		constexpr auto DamageAbsorbPercent = 0x910; // float
		constexpr auto DisplayLevel = 0x914; // int32_t
		constexpr auto bAbsorbsHeadDamage = 0x918; // bool
		constexpr auto bAbsorbsBreakingHit = 0x919; // bool
		constexpr auto bArmorIsRepairable = 0x91a; // bool
		constexpr auto bDestroyOnBreak = 0x91b; // bool
		constexpr auto bRepairableByInteract = 0x91c; // bool
	}

	namespace n_UNavLinkComponent {
		constexpr auto Links = 0x438; // TArray<FNavigationLink>
	}

	namespace n_UKSBTTask_LookAt {
		constexpr auto LookRotationRate = 0xa4; // float
		constexpr auto bLockUntilComplete = 0xa8; // bool
		constexpr auto HorizonAngle = 0xac; // FRotator
		constexpr auto CorridorSmoothingCount = 0xb8; // int32_t
	}

	namespace n_UKSInteractionBlockerManager {
		constexpr auto bIsInteractionBlocked = 0xc0; // bool
	}

	namespace n_UKSEMODataFactory {
		constexpr auto haveRecieveMatchReport = 0x4c; // bool
		constexpr auto OnRewardsRecieved = 0x100; // FMulticastInlineDelegate
		constexpr auto OnProgressionRecieved = 0x110; // FMulticastInlineDelegate
	}

	namespace n_UWBP_RankedOverview_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto ShowSceneAnim = 0x528; // UWidgetAnimation*
		constexpr auto Bronze_2 = 0x530; // UWBP_RankedIcon_C*
		constexpr auto BronzeText_2 = 0x538; // URichTextBlock*
		constexpr auto Diamond_2 = 0x540; // UWBP_RankedIcon_C*
		constexpr auto DiamondText = 0x548; // URichTextBlock*
		constexpr auto DismissButton = 0x550; // UWBP_StandardButtonMedium_C*
		constexpr auto DivisionRPText = 0x558; // UTextBlock*
		constexpr auto Gold_2 = 0x560; // UWBP_RankedIcon_C*
		constexpr auto GoldText = 0x568; // URichTextBlock*
		constexpr auto Image_2 = 0x570; // UImage*
		constexpr auto Image_3 = 0x578; // UImage*
		constexpr auto Image_4 = 0x580; // UImage*
		constexpr auto Image_5 = 0x588; // UImage*
		constexpr auto Image_6 = 0x590; // UImage*
		constexpr auto Image_7 = 0x598; // UImage*
		constexpr auto Image_8 = 0x5a0; // UImage*
		constexpr auto Image_9 = 0x5a8; // UImage*
		constexpr auto Image_10 = 0x5b0; // UImage*
		constexpr auto Image_11 = 0x5b8; // UImage*
		constexpr auto Image_12 = 0x5c0; // UImage*
		constexpr auto Image_13 = 0x5c8; // UImage*
		constexpr auto Image_14 = 0x5d0; // UImage*
		constexpr auto Image_15 = 0x5d8; // UImage*
		constexpr auto Image_16 = 0x5e0; // UImage*
		constexpr auto Image_17 = 0x5e8; // UImage*
		constexpr auto Image_18 = 0x5f0; // UImage*
		constexpr auto Image_19 = 0x5f8; // UImage*
		constexpr auto Image_20 = 0x600; // UImage*
		constexpr auto Image_21 = 0x608; // UImage*
		constexpr auto Image_22 = 0x610; // UImage*
		constexpr auto Image_23 = 0x618; // UImage*
		constexpr auto Image_24 = 0x620; // UImage*
		constexpr auto Image_25 = 0x628; // UImage*
		constexpr auto Image_28 = 0x630; // UImage*
		constexpr auto Image_229 = 0x638; // UImage*
		constexpr auto Image_251 = 0x640; // UImage*
		constexpr auto Image_437 = 0x648; // UImage*
		constexpr auto Image_705 = 0x650; // UImage*
		constexpr auto Image_1038 = 0x658; // UImage*
		constexpr auto Image_1167 = 0x660; // UImage*
		constexpr auto Platinum_2 = 0x668; // UWBP_RankedIcon_C*
		constexpr auto PlatinumText = 0x670; // URichTextBlock*
		constexpr auto RankedHeader = 0x678; // UTextBlock*
		constexpr auto RichTextBlock_241 = 0x680; // URichTextBlock*
		constexpr auto Rogue_2 = 0x688; // UWBP_RankedIcon_C*
		constexpr auto RogueText = 0x690; // URichTextBlock*
		constexpr auto ScaleBox_2 = 0x698; // UScaleBox*
		constexpr auto ScaleBox_3 = 0x6a0; // UScaleBox*
		constexpr auto ScaleBox_4 = 0x6a8; // UScaleBox*
		constexpr auto ScaleBox_5 = 0x6b0; // UScaleBox*
		constexpr auto ScaleBox_6 = 0x6b8; // UScaleBox*
		constexpr auto Silver_2 = 0x6c0; // UWBP_RankedIcon_C*
		constexpr auto SilverText = 0x6c8; // URichTextBlock*
		constexpr auto WBP_BulletedListEntry_C_2 = 0x6d0; // UWBP_BulletedListEntry_C*
		constexpr auto WBP_BulletedListEntry_C_3 = 0x6d8; // UWBP_BulletedListEntry_C*
		constexpr auto WBP_BulletedListEntry_C_4 = 0x6e0; // UWBP_BulletedListEntry_C*
		constexpr auto WBP_BulletedListEntry_C_5 = 0x6e8; // UWBP_BulletedListEntry_C*
		constexpr auto WBP_BulletedListEntry_C_6 = 0x6f0; // UWBP_BulletedListEntry_C*
		constexpr auto WBP_ButtonSlot_Cosmetic = 0x6f8; // UWBP_ButtonSlot_Cosmetic_C*
		constexpr auto WBP_ButtonSlot_Cosmetic_2 = 0x700; // UWBP_ButtonSlot_Cosmetic_C*
		constexpr auto WBP_Header2 = 0x708; // UWBP_Header2_C*
		constexpr auto WBP_Header2_2 = 0x710; // UWBP_Header2_C*
		constexpr auto WBP_KSCosmeticItemDisplay = 0x718; // UWBP_KSCosmeticItemDisplay_C*
	}

	namespace n_UShotgunReticle_C {
		constexpr auto UberGraphFrame = 0x258; // FPointerToUberGraphFrame
		constexpr auto GaugeFade = 0x260; // UWidgetAnimation*
		constexpr auto ADSFade = 0x268; // UWidgetAnimation*
		constexpr auto AmmoGauge = 0x270; // UCanvasPanel*
		constexpr auto AmmoGaugeBG = 0x278; // UImage*
		constexpr auto AmmoGaugeFill = 0x280; // UProgressBar*
		constexpr auto AmmoGuade_Replenish = 0x288; // UProgressBar*
		constexpr auto Bottom_Left_Bracket = 0x290; // UWidgetSwitcher*
		constexpr auto Bottom_Right_Bracket = 0x298; // UWidgetSwitcher*
		constexpr auto CenterDot = 0x2a0; // UImage*
		constexpr auto CurveBottomLeft = 0x2a8; // UImage*
		constexpr auto CurveBottomLeft_2 = 0x2b0; // UImage*
		constexpr auto CurveBottomLeft_3 = 0x2b8; // UImage*
		constexpr auto CurveBottomRight = 0x2c0; // UImage*
		constexpr auto CurveBottomRight_2 = 0x2c8; // UImage*
		constexpr auto CurveBottomRight_3 = 0x2d0; // UImage*
		constexpr auto CurveTopLeft = 0x2d8; // UImage*
		constexpr auto CurveTopLeft_2 = 0x2e0; // UImage*
		constexpr auto CurveTopLeft_3 = 0x2e8; // UImage*
		constexpr auto CurveTopRight = 0x2f0; // UImage*
		constexpr auto CurveTopRight_2 = 0x2f8; // UImage*
		constexpr auto CurveTopRight_3 = 0x300; // UImage*
		constexpr auto reddot = 0x308; // UImage*
		constexpr auto Top_Left_Bracket = 0x310; // UWidgetSwitcher*
		constexpr auto Top_Right_Bracket = 0x318; // UWidgetSwitcher*
		constexpr auto GrenadeTickTimer = 0x320; // FTimerHandle
		constexpr auto CachedOffset = 0x328; // float
		constexpr auto AmmoColor = 0x32c; // FLinearColor
		constexpr auto BonusAmmo = 0x33c; // float
		constexpr auto BonusAmmoTime = 0x340; // float
	}

	namespace n_UEnvQueryGenerator {
		constexpr auto OptionName = 0x30; // FString
		constexpr auto ItemType = 0x40; // UEnvQueryItemType*
		constexpr auto bAutoSortTests = 0x48; // char : 1
	}

	namespace n_UNiagaraEmitter {
		constexpr auto bLocalSpace = 0x28; // bool
		constexpr auto bDeterminism = 0x29; // bool
		constexpr auto RandomSeed = 0x2c; // int32_t
		constexpr auto AllocationMode = 0x30; // EParticleAllocationMode
		constexpr auto PreAllocationCount = 0x34; // int32_t
		constexpr auto UpdateScriptProps = 0x38; // FNiagaraEmitterScriptProperties
		constexpr auto SpawnScriptProps = 0x60; // FNiagaraEmitterScriptProperties
		constexpr auto EmitterSpawnScriptProps = 0x88; // FNiagaraEmitterScriptProperties
		constexpr auto EmitterUpdateScriptProps = 0xb0; // FNiagaraEmitterScriptProperties
		constexpr auto SimTarget = 0xd8; // ENiagaraSimTarget
		constexpr auto FixedBounds = 0xdc; // FBox
		constexpr auto MinDetailLevel = 0xf8; // int32_t
		constexpr auto MaxDetailLevel = 0xfc; // int32_t
		constexpr auto GlobalSpawnCountScaleOverrides = 0x100; // FNiagaraDetailsLevelScaleOverrides
		constexpr auto Platforms = 0x118; // FNiagaraPlatformSet
		constexpr auto ScalabilityOverrides = 0x138; // FNiagaraEmitterScalabilityOverrides
		constexpr auto bInterpolatedSpawning = 0x148; // char : 1
		constexpr auto bFixedBounds = 0x148; // char : 1
		constexpr auto bUseMinDetailLevel = 0x148; // char : 1
		constexpr auto bUseMaxDetailLevel = 0x148; // char : 1
		constexpr auto bOverrideGlobalSpawnCountScale = 0x148; // char : 1
		constexpr auto bRequiresPersistentIDs = 0x148; // char : 1
		constexpr auto MaxDeltaTimePerTick = 0x14c; // float
		constexpr auto DefaultShaderStageIndex = 0x150; // uint32_t
		constexpr auto MaxUpdateIterations = 0x154; // uint32_t
		constexpr auto SpawnStages = 0x158; // TSet<uint32_t>
		constexpr auto bSimulationStagesEnabled = 0x1a8; // char : 1
		constexpr auto bDeprecatedShaderStagesEnabled = 0x1a8; // char : 1
		constexpr auto bLimitDeltaTime = 0x1a8; // char : 1
		constexpr auto UniqueEmitterName = 0x1b0; // FString
		constexpr auto RendererProperties = 0x1c0; // TArray<UNiagaraRendererProperties*>
		constexpr auto EventHandlerScriptProps = 0x1d0; // TArray<FNiagaraEventScriptProperties>
		constexpr auto SimulationStages = 0x1e0; // TArray<UNiagaraSimulationStageBase*>
		constexpr auto GPUComputeScript = 0x1f0; // UNiagaraScript*
		constexpr auto SharedEventGeneratorIds = 0x1f8; // TArray<FName>
	}

	namespace n_UGuidedMenuCalloutData {
		constexpr auto HeaderText = 0x28; // FText
		constexpr auto CalloutCards = 0x40; // TArray<FGuidedCalloutCardData>
	}

	namespace n_UParticleModuleSizeScale {
		constexpr auto SizeScale = 0x30; // FRawDistributionVector
		constexpr auto EnableX = 0x78; // char : 1
		constexpr auto EnableY = 0x78; // char : 1
		constexpr auto EnableZ = 0x78; // char : 1
	}

	namespace n_UPawnAction_Move {
		constexpr auto GoalActor = 0x98; // AActor*
		constexpr auto GoalLocation = 0xa0; // FVector
		constexpr auto AcceptableRadius = 0xac; // float
		constexpr auto FilterClass = 0xb0; // UNavigationQueryFilter*
		constexpr auto bAllowStrafe = 0xb8; // char : 1
		constexpr auto bFinishOnOverlap = 0xb8; // char : 1
		constexpr auto bUsePathfinding = 0xb8; // char : 1
		constexpr auto bAllowPartialPath = 0xb8; // char : 1
		constexpr auto bProjectGoalToNavigation = 0xb8; // char : 1
		constexpr auto bUpdatePathToGoal = 0xb8; // char : 1
		constexpr auto bAbortChildActionOnPathChange = 0xb8; // char : 1
	}

	namespace n_UParticleSystem {
		constexpr auto UpdateTime_FPS = 0x30; // float
		constexpr auto UpdateTime_Delta = 0x34; // float
		constexpr auto WarmupTime = 0x38; // float
		constexpr auto WarmupTickRate = 0x3c; // float
		constexpr auto Emitters = 0x40; // TArray<UParticleEmitter*>
		constexpr auto PreviewComponent = 0x50; // UParticleSystemComponent*
		constexpr auto CurveEdSetup = 0x58; // UInterpCurveEdSetup*
		constexpr auto LODDistanceCheckTime = 0x60; // float
		constexpr auto MacroUVRadius = 0x64; // float
		constexpr auto LODDistances = 0x68; // TArray<float>
		constexpr auto LODSettings = 0x78; // TArray<FParticleSystemLOD>
		constexpr auto FixedRelativeBoundingBox = 0x88; // FBox
		constexpr auto SecondsBeforeInactive = 0xa4; // float
		constexpr auto Delay = 0xa8; // float
		constexpr auto DelayLow = 0xac; // float
		constexpr auto bOrientZAxisTowardCamera = 0xb0; // char : 1
		constexpr auto bUseFixedRelativeBoundingBox = 0xb0; // char : 1
		constexpr auto bShouldResetPeakCounts = 0xb0; // char : 1
		constexpr auto bHasPhysics = 0xb0; // char : 1
		constexpr auto bUseRealtimeThumbnail = 0xb0; // char : 1
		constexpr auto ThumbnailImageOutOfDate = 0xb0; // char : 1
		constexpr auto bUseDelayRange = 0xb1; // char : 1
		constexpr auto bAllowManagedTicking = 0xb1; // char : 1
		constexpr auto bAutoDeactivate = 0xb1; // char : 1
		constexpr auto bRegenerateLODDuplicate = 0xb1; // char : 1
		constexpr auto SystemUpdateMode = 0xb2; // EParticleSystemUpdateMode
		constexpr auto LODMethod = 0xb3; // ParticleSystemLODMethod
		constexpr auto InsignificantReaction = 0xb4; // EParticleSystemInsignificanceReaction
		constexpr auto OcclusionBoundsMethod = 0xb5; // EParticleSystemOcclusionBoundsMethod
		constexpr auto MaxSignificanceLevel = 0xb7; // EParticleSignificanceLevel
		constexpr auto MinTimeBetweenTicks = 0xb8; // uint32_t
		constexpr auto InsignificanceDelay = 0xbc; // float
		constexpr auto MacroUVPosition = 0xc0; // FVector
		constexpr auto CustomOcclusionBounds = 0xcc; // FBox
		constexpr auto SoloTracking = 0xe8; // TArray<FLODSoloTrack>
		constexpr auto NamedMaterialSlots = 0xf8; // TArray<FNamedEmitterMaterial>
	}

	namespace n_UCompositeCurveTable {
		constexpr auto ParentTables = 0xa0; // TArray<UCurveTable*>
		constexpr auto OldParentTables = 0xb0; // TArray<UCurveTable*>
	}

	namespace n_UParticleModuleLocationBoneSocket {
		constexpr auto SourceType = 0x30; // ELocationBoneSocketSource
		constexpr auto UniversalOffset = 0x34; // FVector
		constexpr auto SourceLocations = 0x40; // TArray<FLocationBoneSocketInfo>
		constexpr auto SelectionMethod = 0x50; // ELocationBoneSocketSelectionMethod
		constexpr auto bUpdatePositionEachFrame = 0x54; // char : 1
		constexpr auto bOrientMeshEmitters = 0x54; // char : 1
		constexpr auto bInheritBoneVelocity = 0x54; // char : 1
		constexpr auto InheritVelocityScale = 0x58; // float
		constexpr auto SkelMeshActorParamName = 0x5c; // FName
		constexpr auto NumPreSelectedIndices = 0x64; // int32_t
	}

	namespace n_UBackgroundBlurSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_URichTextBlock {
		constexpr auto Text = 0x130; // FText
		constexpr auto TextStyleSet = 0x148; // UDataTable*
		constexpr auto DecoratorClasses = 0x150; // TArray<URichTextBlockDecorator*>
		constexpr auto bOverrideDefaultStyle = 0x160; // bool
		constexpr auto DefaultTextStyleOverride = 0x168; // FTextBlockStyle
		constexpr auto MinDesiredWidth = 0x3d0; // float
		constexpr auto InstanceDecorators = 0x640; // TArray<URichTextBlockDecorator*>
	}

	namespace n_UMaterialExpressionConstantBiasScale {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Bias = 0x54; // float
		constexpr auto Scale = 0x58; // float
	}

	namespace n_UKSApparelAsset_SkinDataTables {
		constexpr auto AssetDataTables = 0x2c0; // TArray<FSoftDataTableInfo>
		constexpr auto ApparelObjectsToInfluence = 0x2d0; // TArray<FName>
	}

	namespace n_UKSPlayerModInst_Omniscience {
		constexpr auto bHandleEnemiesOnly = 0x1b8; // bool
	}

	namespace n_UNiagaraPreviewAxis_InterpParamVector2D {
		constexpr auto Min = 0x38; // FVector2D
		constexpr auto Max = 0x40; // FVector2D
	}

	namespace n_UParticleModuleSizeMultiplyLife {
		constexpr auto LifeMultiplier = 0x30; // FRawDistributionVector
		constexpr auto MultiplyX = 0x78; // char : 1
		constexpr auto MultiplyY = 0x78; // char : 1
		constexpr auto MultiplyZ = 0x78; // char : 1
	}

	namespace n_UKSActivityRequirement_Rewards {
		constexpr auto RequireEnabled = 0x30; // bool
	}

	namespace n_UKSSocialWidgetBase {
		constexpr auto CachedPartyDataFactory = 0x520; // UKSPartyDataFactory*
	}

	namespace n_UGamepadPrompt_Bright_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto GamepadIcon = 0x240; // UImage*
		constexpr auto PromptText = 0x248; // UTextBlock*
		constexpr auto Prompt = 0x250; // FText
		constexpr auto Action = 0x268; // FName
		constexpr auto IsConfirmGamepad = 0x270; // bool
		constexpr auto IsCancelGamepad = 0x271; // bool
		constexpr auto FontColor = 0x278; // FSlateColor
	}

	namespace n_UArrowComponent {
		constexpr auto ArrowColor = 0x430; // FColor
		constexpr auto ArrowSize = 0x434; // float
		constexpr auto ScreenSize = 0x438; // float
		constexpr auto bIsScreenSizeScaled = 0x43c; // char : 1
		constexpr auto bTreatAsASprite = 0x43c; // char : 1
	}

	namespace n_UKSBTTask_GetRotationFromPoint {
		constexpr auto MapPointActorKey = 0x70; // FBlackboardKeySelector
		constexpr auto MapPointRotationKey = 0x98; // FBlackboardKeySelector
	}

	namespace n_UKSBTTask_UpdateCachedWeapon {
		constexpr auto CachedWeaponClassKey = 0x70; // FBlackboardKeySelector
	}

	namespace n_UKSModInst_GiveBuildOnActivation {
		constexpr auto OnBuildSucceededDel = 0x518; // FMulticastInlineDelegate
		constexpr auto OnBuildFailedDel = 0x540; // FMulticastInlineDelegate
		constexpr auto bStartFireOnActivation = 0x550; // bool
		constexpr auto bRefundOnReclaim = 0x552; // bool
	}

	namespace n_UNavigationSystemV1 {
		constexpr auto MainNavData = 0x28; // ANavigationData*
		constexpr auto AbstractNavData = 0x30; // ANavigationData*
		constexpr auto DefaultAgentName = 0x38; // FName
		constexpr auto CrowdManagerClass = 0x40; // TSoftClassPtr<UObject>
		constexpr auto bAutoCreateNavigationData = 0x68; // char : 1
		constexpr auto bSpawnNavDataInNavBoundsLevel = 0x68; // char : 1
		constexpr auto bAllowClientSideNavigation = 0x68; // char : 1
		constexpr auto bShouldDiscardSubLevelNavData = 0x68; // char : 1
		constexpr auto bTickWhilePaused = 0x68; // char : 1
		constexpr auto bSupportRebuilding = 0x68; // char : 1
		constexpr auto bInitialBuildingLocked = 0x68; // char : 1
		constexpr auto bSkipAgentHeightCheckWhenPickingNavData = 0x69; // char : 1
		constexpr auto DataGatheringMode = 0x6c; // ENavDataGatheringModeConfig
		constexpr auto bGenerateNavigationOnlyAroundNavigationInvokers = 0x70; // char : 1
		constexpr auto ActiveTilesUpdateInterval = 0x74; // float
		constexpr auto SupportedAgents = 0x78; // TArray<FNavDataConfig>
		constexpr auto SupportedAgentsMask = 0x88; // FNavAgentSelector
		constexpr auto NavDataSet = 0x90; // TArray<ANavigationData*>
		constexpr auto NavDataRegistrationQueue = 0xa0; // TArray<ANavigationData*>
		constexpr auto OnNavDataRegisteredEvent = 0xc0; // FMulticastInlineDelegate
		constexpr auto OnNavigationGenerationFinishedDelegate = 0xd0; // FMulticastInlineDelegate
		constexpr auto OperationMode = 0x1bc; // FNavigationSystemRunMode
		constexpr auto DirtyAreasUpdateFreq = 0x514; // float
	}

	namespace n_UHapticFeedbackEffect_SoundWave {
		constexpr auto SoundWave = 0x28; // USoundWave*
	}

	namespace n_UKSSettingsMenu {
		constexpr auto SettingsState = 0x520; // FKSSettingsState
		constexpr auto SettingsPages = 0x528; // TArray<UKSSettingsPage*>
		constexpr auto SettingsPageClass = 0x538; // UKSSettingsPage*
		constexpr auto MenuConfigAsset = 0x540; // UKSSettingsMenuConfigAsset*
	}

	namespace n_UGameMapsSettings {
		constexpr auto LocalMapOptions = 0x28; // FString
		constexpr auto TransitionMap = 0x38; // FSoftObjectPath
		constexpr auto bUseSplitscreen = 0x50; // bool
		constexpr auto TwoPlayerSplitscreenLayout = 0x51; // ETwoPlayerSplitScreenType
		constexpr auto ThreePlayerSplitscreenLayout = 0x52; // EThreePlayerSplitScreenType
		constexpr auto FourPlayerSplitscreenLayout = 0x53; // EFourPlayerSplitScreenType
		constexpr auto bOffsetPlayerGamepadIds = 0x54; // bool
		constexpr auto GameInstanceClass = 0x58; // FSoftClassPath
		constexpr auto GameDefaultMap = 0x70; // FSoftObjectPath
		constexpr auto ServerDefaultMap = 0x88; // FSoftObjectPath
		constexpr auto GlobalDefaultGameMode = 0xa0; // FSoftClassPath
		constexpr auto GlobalDefaultServerGameMode = 0xb8; // FSoftClassPath
		constexpr auto GameModeMapPrefixes = 0xd0; // TArray<FGameModeName>
		constexpr auto GameModeClassAliases = 0xe0; // TArray<FGameModeName>
	}

	namespace n_USub_Hero_ABP_MountedWeapon_C {
		constexpr auto UberGraphFrame = 0x10f0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x10f8; // FAnimNode_Root
		constexpr auto AnimGraphNode_BlendSpaceSkinned = 0x1138; // FAnimNode_BlendSpacePlayerSkinned
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x1338; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x13c0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceSkinned = 0x1470; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer = 0x15d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult = 0x1658; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x1698; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_AimOffsetSkinned_2 = 0x1758; // FAnimNode_AimOffsetSkinned
		constexpr auto AnimGraphNode_BlendListByBool = 0x1918; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_AimOffsetSkinned = 0x19c8; // FAnimNode_AimOffsetSkinned
		constexpr auto AnimGraphNode_SaveCachedPose = 0x1b88; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0x1c50; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose = 0x1c88; // FAnimNode_UseCachedPose
		constexpr auto Character = 0x1cc0; // AKSCharacter*
	}

	namespace n_UWBP_ChevronProgressBar_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto BackBar_3 = 0x240; // UImage*
		constexpr auto BackWrapper = 0x248; // UScaleBox*
		constexpr auto Fill = 0x250; // UImage*
		constexpr auto Fill_2 = 0x258; // UImage*
		constexpr auto FillWrapper = 0x260; // UScaleBox*
		constexpr auto FillColor = 0x268; // FSlateColor
		constexpr auto FillColor_Highlight = 0x290; // FSlateColor
		constexpr auto BackColor = 0x2b8; // FSlateColor
	}

	namespace n_UWBP_PlayerProfileScreen_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto OnShow = 0x528; // UWidgetAnimation*
		constexpr auto BG = 0x530; // UImage*
		constexpr auto PlayerIdDisplay = 0x538; // UTextBlock*
		constexpr auto PortalIcon = 0x540; // UKSAsyncImage*
		constexpr auto WBP_PlayerProfileScreen_AccountPanel = 0x548; // UWBP_PlayerProfileScreen_AccountPanel_C*
		constexpr auto WBP_PlayerProfileScreen_AwardPanel = 0x550; // UWBP_PlayerProfileScreen_AwardPanel_C*
		constexpr auto WBP_PlayerProfileScreen_StatPanel = 0x558; // UWBP_PlayerProfileScreen_StatPanel_C*
	}

	namespace n_AKSKillCamObjectCamera {
		constexpr auto MainCameraBoom = 0x220; // UKSSpringArmComponent*
		constexpr auto MainCameraComponent = 0x228; // UCameraComponent*
		constexpr auto EmptyComponent = 0x230; // USceneComponent*
	}

	namespace n_UParticleModuleVelocity {
		constexpr auto StartVelocity = 0x38; // FRawDistributionVector
		constexpr auto StartVelocityRadial = 0x80; // FRawDistributionFloat
	}

	namespace n_AKSCharacterFoundation {
		constexpr auto CachedAimAssistVisibility = 0x4d4; // bool
		constexpr auto NextValidAimAssistVisibilityTime = 0x4d8; // float
		constexpr auto bCanEverBeConsideredForAimAssist = 0x4dc; // bool
		constexpr auto bIgnoreCollisionWithTeammates = 0x4dd; // bool
		constexpr auto CachedOutOfBoundsComponent = 0x4e0; // UKSOutOfBoundsComponent*
		constexpr auto ReleasedCachedTimeSeconds = 0x4e8; // float
		constexpr auto OnPlayerStateChangedDel = 0x4f8; // FMulticastInlineDelegate
		constexpr auto PlayerModManagerOverride = 0x520; // AKSPlayerModManager*
		constexpr auto Health = 0x528; // float
		constexpr auto OnHealthChangedDel = 0x530; // FMulticastInlineDelegate
		constexpr auto OnKilled = 0x540; // FMulticastInlineDelegate
		constexpr auto OnPlayHitFromPointDamageDel = 0x550; // FMulticastInlineDelegate
		constexpr auto OnPlayHitFromRadialDamageDel = 0x560; // FMulticastInlineDelegate
		constexpr auto ActiveFXCurveComponents = 0x5d8; // TMap<FName, UKSFXCurveComponent*>
		constexpr auto BlendableSettings = 0x630; // FPostProcessSettings
		constexpr auto CharacterAkComponent = 0xbb0; // UKSAkComponent*
		constexpr auto HitByShieldedAkEvent = 0xbb8; // UAkAudioEvent*
		constexpr auto HitByArmorBreakAkEvent = 0xbc0; // UAkAudioEvent*
		constexpr auto bIsHovered = 0xbc8; // bool
		constexpr auto bUseScreenSizeCutoff = 0xbc9; // bool
		constexpr auto PlayerHoverRange = 0xbcc; // float
		constexpr auto HoverMinScreenHeightPct = 0xbd0; // float
		constexpr auto HoverMinScreenHeightPctADS = 0xbd4; // float
		constexpr auto bUseConeHover = 0xbd8; // bool
		constexpr auto HoverConeAngle = 0xbdc; // float
		constexpr auto ADSHoverConeScreenRadius = 0xbe0; // float
		constexpr auto AlwaysHoverDistance = 0xbe4; // float
		constexpr auto bUnhoverWhenOccludedByHoveredCharacter = 0xbe8; // bool
		constexpr auto CachedCameraFOV = 0xbec; // float
		constexpr auto CachedViewPortSize = 0xbf0; // FVector2D
		constexpr auto CachedHalfTanFOV = 0xbf8; // float
		constexpr auto MinimapDisplayWidget = 0xc50; // TSoftClassPtr<UObject>
		constexpr auto FullmapDisplayWidget = 0xc78; // TSoftClassPtr<UObject>
		constexpr auto OverlayDisplayWidget = 0xca0; // TSoftClassPtr<UObject>
		constexpr auto RoundCreated = 0xcc8; // char
	}

	namespace n_UMovieSceneSubSection {
		constexpr auto Parameters = 0xe0; // FMovieSceneSectionParameters
		constexpr auto StartOffset = 0x104; // float
		constexpr auto TimeScale = 0x108; // float
		constexpr auto PrerollTime = 0x10c; // float
		constexpr auto SubSequence = 0x110; // UMovieSceneSequence*
		constexpr auto ActorToRecord = 0x118; // LazyObjectProperty
		constexpr auto TargetSequenceName = 0x138; // FString
		constexpr auto TargetPathToRecordTo = 0x148; // FDirectoryPath
	}

	namespace n_ULandscapeHeightfieldCollisionComponent {
		constexpr auto ComponentLayerInfos = 0x430; // TArray<ULandscapeLayerInfoObject*>
		constexpr auto SectionBaseX = 0x440; // int32_t
		constexpr auto SectionBaseY = 0x444; // int32_t
		constexpr auto CollisionSizeQuads = 0x448; // int32_t
		constexpr auto CollisionScale = 0x44c; // float
		constexpr auto SimpleCollisionSizeQuads = 0x450; // int32_t
		constexpr auto CollisionQuadFlags = 0x458; // TArray<char>
		constexpr auto HeightfieldGuid = 0x468; // FGuid
		constexpr auto CachedLocalBox = 0x478; // FBox
		constexpr auto RenderComponent = 0x494; // LazyObjectProperty
		constexpr auto CookedPhysicalMaterials = 0x4c0; // TArray<UPhysicalMaterial*>
	}

	namespace n_UCapsuleComponent {
		constexpr auto CapsuleHalfHeight = 0x448; // float
		constexpr auto CapsuleRadius = 0x44c; // float
	}

	namespace n_UKSPlayerMod_HealthRegeneration {
		constexpr auto HealthRegenerationPerSecondAdded = 0x330; // float
		constexpr auto Priority_HealthRegenerationPerSecondAdded = 0x334; // int32_t
		constexpr auto HealthRegenerationDelayAdded = 0x338; // float
		constexpr auto Priority_HealthRegenerationDelayAdded = 0x33c; // int32_t
		constexpr auto ShouldAllowHealthRegen = 0x340; // bool
		constexpr auto Priority_ShouldAllowHealthRegen = 0x344; // int32_t
	}

	namespace n_URetainerBox {
		constexpr auto RenderOnInvalidation = 0x128; // bool
		constexpr auto RenderOnPhase = 0x129; // bool
		constexpr auto Phase = 0x12c; // int32_t
		constexpr auto PhaseCount = 0x130; // int32_t
		constexpr auto bEnableRetainedRendering = 0x134; // bool
		constexpr auto EffectMaterial = 0x138; // UMaterialInterface*
		constexpr auto TextureParameter = 0x140; // FName
	}

	namespace n_UAkAssetDataSwitchContainer {
		constexpr auto SwitchContainers = 0x88; // TArray<UAkAssetDataSwitchContainerData*>
	}

	namespace n_AKSAgent_RevealDrone {
		constexpr auto MaxFlightSpeed = 0x320; // float
		constexpr auto DistanceToFly = 0x324; // float
		constexpr auto TimeBetweenPings = 0x328; // float
		constexpr auto RevealPeriodDuration = 0x32c; // float
		constexpr auto ReplicatedRevealTimer = 0x330; // FPGame_ReplicatedTimer
		constexpr auto UpdateReplicatedTimerPeriod = 0x368; // float
		constexpr auto bAppliesScrambleEffectToEnemies = 0x36c; // bool
		constexpr auto CurrentSweepFoundChars = 0x3b0; // TArray<AKSCharacter*>
	}

	namespace n_UKSVelocityCameraShake {
		constexpr auto VelocityForMinShaking = 0x178; // float
		constexpr auto VelocityForMaxShaking = 0x17c; // float
	}

	namespace n_USocialGroupChannel {
		constexpr auto SocialUser = 0x28; // USocialUser*
		constexpr auto GroupId = 0x30; // FUniqueNetIdRepl
		constexpr auto DisplayName = 0x58; // FText
		constexpr auto Members = 0x70; // TArray<USocialUser*>
	}

	namespace n_UScoreboardOverview_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto DisconnectedPlayers = 0x528; // UWBP_ScoreboardDisconnectedSection_Lobby_C*
		constexpr auto Eliminated_Enemy = 0x530; // UImage*
		constexpr auto Objective_Enemy = 0x538; // UImage*
		constexpr auto ScoreboardTeamSection_Lobby = 0x540; // UScoreboardTeamSection_Lobby_C*
		constexpr auto ScrollBox_1 = 0x548; // UScrollBox*
		constexpr auto TeamSections = 0x550; // UVerticalBox*
		constexpr auto TimeExpired_Enemy = 0x558; // UImage*
		constexpr auto WBP_PanelDefault = 0x560; // UWBP_PanelDefault_C*
		constexpr auto WBP_RoundRecap = 0x568; // UWBP_RoundRecap_C*
		constexpr auto PlayerDataFactory = 0x570; // UPUMG_PlayerDataFactory*
		constexpr auto teams = 0x578; // TArray<UScoreboardTeamSection_Lobby_C*>
		constexpr auto DidWin = 0x588; // bool
		constexpr auto OnTeamsChanged = 0x590; // FMulticastInlineDelegate
	}

	namespace n_AKSPowerUp {
		constexpr auto OnPowerUpPickedUp = 0x220; // FMulticastInlineDelegate
		constexpr auto CollisionBox = 0x230; // UBoxComponent*
		constexpr auto OverlapSphere = 0x238; // USphereComponent*
		constexpr auto ProximityComponent = 0x240; // UKSProximityComponent*
		constexpr auto OwningTeam = 0x248; // int32_t
		constexpr auto bDestroyOnProximity = 0x24c; // bool
		constexpr auto DestroyDelay = 0x250; // float
	}

	namespace n_UPlayerInput {
		constexpr auto DebugExecBindings = 0x120; // TArray<FKeyBind>
		constexpr auto InvertedAxis = 0x160; // TArray<FName>
		constexpr auto TouchRegionStates = 0x12a0; // TArray<FTouchRegionState>
	}

	namespace n_UMovieSceneComponentMaterialTrack {
		constexpr auto MaterialIndex = 0x68; // int32_t
	}

	namespace n_ABP_BrightLobbyHUDMinimal_C {
		constexpr auto DefaultSceneRoot = 0x6b0; // USceneComponent*
	}

	namespace n_UEnvQueryGenerator_BlueprintBase {
		constexpr auto GeneratorsActionDescription = 0x50; // FText
		constexpr auto Context = 0x68; // UEnvQueryContext*
		constexpr auto GeneratedItemType = 0x70; // UEnvQueryItemType*
	}

	namespace n_UMediaSoundComponent {
		constexpr auto Channels = 0x6e0; // EMediaSoundChannels
		constexpr auto DynamicRateAdjustment = 0x6e4; // bool
		constexpr auto RateAdjustmentFactor = 0x6e8; // float
		constexpr auto RateAdjustmentRange = 0x6ec; // FFloatRange
		constexpr auto MediaPlayer = 0x700; // UMediaPlayer*
	}

	namespace n_UParticleModuleParameterDynamic_Seeded {
		constexpr auto RandomSeedInfo = 0x48; // FParticleRandomSeedInfo
	}

	namespace n_UWidgetTree {
		constexpr auto RootWidget = 0x28; // UWidget*
	}

	namespace n_UMaterialExpressionComponentMask {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto R = 0x54; // char : 1
		constexpr auto G = 0x54; // char : 1
		constexpr auto B = 0x54; // char : 1
		constexpr auto A = 0x54; // char : 1
	}

	namespace n_UNiagaraDataInterfaceVector4Curve {
		constexpr auto XCurve = 0x58; // FRichCurve
		constexpr auto YCurve = 0xd8; // FRichCurve
		constexpr auto ZCurve = 0x158; // FRichCurve
		constexpr auto WCurve = 0x1d8; // FRichCurve
	}

	namespace n_UKSBTD_CompareBetweenBlackboards {
		constexpr auto SourceBlackboardActor = 0x68; // FBlackboardKeySelector
		constexpr auto SourceKey = 0x90; // FBlackboardKeySelector
		constexpr auto TargetBlackboardActor = 0xb8; // FBlackboardKeySelector
		constexpr auto TargetKey = 0xe0; // FBlackboardKeySelector
	}

	namespace n_UMovieSceneBoolSection {
		constexpr auto DefaultValue = 0xe0; // bool
		constexpr auto BoolCurve = 0xe8; // FMovieSceneBoolChannel
	}

	namespace n_UEditableGameplayTagQueryExpression_AllTagsMatch {
		constexpr auto Tags = 0x28; // FGameplayTagContainer
	}

	namespace n_UEditableGameplayTagQueryExpression_AllExprMatch {
		constexpr auto Expressions = 0x28; // TArray<UEditableGameplayTagQueryExpression*>
	}

	namespace n_ADestructibleActor {
		constexpr auto DestructibleComponent = 0x220; // UDestructibleComponent*
		constexpr auto OnActorFracture = 0x228; // FMulticastInlineDelegate
	}

	namespace n_UParticleModuleMeshRotationRate {
		constexpr auto StartRotationRate = 0x30; // FRawDistributionVector
	}

	namespace n_UKSAmmoWidget {
		constexpr auto CachedAmmoInClip = 0x528; // int32_t
		constexpr auto CachedClipSize = 0x52c; // int32_t
		constexpr auto CachedInReserve = 0x530; // int32_t
		constexpr auto CachedIsReloading = 0x534; // bool
	}

	namespace n_UMovieSceneNiagaraSystemSpawnSection {
		constexpr auto SectionStartBehavior = 0xe0; // ENiagaraSystemSpawnSectionStartBehavior
		constexpr auto SectionEvaluateBehavior = 0xe4; // ENiagaraSystemSpawnSectionEvaluateBehavior
		constexpr auto SectionEndBehavior = 0xe8; // ENiagaraSystemSpawnSectionEndBehavior
		constexpr auto AgeUpdateMode = 0xec; // ENiagaraAgeUpdateMode
	}

	namespace n_UKSWeaponComponent {
		constexpr auto WeaponComponentTickType = 0x128; // EWeaponComponentTickType
		constexpr auto bAllowTickingOnItemDropActor = 0x129; // bool
		constexpr auto ForcedWeaponLODWhenLocallyViewed = 0x12a; // char
		constexpr auto bForceResidentFlagOnWeaponTextures = 0x12b; // bool
		constexpr auto bAllowAnimationAsItemDrop = 0x12c; // bool
		constexpr auto WeaponState = 0x12d; // EWeaponStateNew
		constexpr auto InitialState = 0x12e; // EWeaponStateNew
		constexpr auto WeaponAsset = 0x130; // UKSWeaponAsset*
		constexpr auto bPendingFire = 0x138; // bool
		constexpr auto InitialAmmoInClip = 0x139; // char
		constexpr auto AmmoInClip = 0x13a; // char
		constexpr auto bInitializationStarted = 0x13b; // bool
		constexpr auto bInitializationCompleted = 0x13c; // bool
		constexpr auto OnAmmoChangedDel = 0x140; // FMulticastInlineDelegate
		constexpr auto OnFireRateChangedDel = 0x168; // FMulticastInlineDelegate
		constexpr auto OnWeaponComponentInitializationCompletedDel = 0x180; // FMulticastInlineDelegate
		constexpr auto bCachedWeaponVisibility = 0x1a9; // bool
		constexpr auto MeshMaxDrawDistance = 0x1ac; // float
		constexpr auto bUseMaxDistForCharacterOwnedWeapons = 0x1b0; // bool
		constexpr auto bHideAncillaryMagazine = 0x1b1; // bool
		constexpr auto AncillaryMagazineIndex = 0x1b4; // int32_t
		constexpr auto bIsGrenade = 0x1b8; // bool
		constexpr auto bUsesHeavyGadget = 0x1b9; // bool
		constexpr auto MeleeComboTarget = 0x1bc; // FName
		constexpr auto bPreventReturnToHolsterFlag = 0x1c4; // bool
		constexpr auto WeaponAttachType = 0x1c5; // EWeaponComponentAttachmentType
		constexpr auto SkeletalMesh = 0x1c8; // USkeletalMesh*
		constexpr auto PhysicsAsset = 0x1d0; // UPhysicsAsset*
		constexpr auto WeaponSkeletalMeshCollisionProfileName = 0x1d8; // FName
		constexpr auto bLoadWeaponSkeletalMeshComponentOnServer = 0x1e0; // bool
		constexpr auto ActiveRequiredDedicatedServerCharacterBoneNames = 0x1e8; // TArray<FName>
		constexpr auto MeshComponentVisibilityBasedAnimTickOption = 0x1f8; // EVisibilityBasedAnimTickOption
		constexpr auto bAllowMeshCompositing = 0x1f9; // bool
		constexpr auto ScopeMesh = 0x200; // USkeletalMesh*
		constexpr auto ScopeAttachmentTag = 0x208; // FGameplayTag
		constexpr auto MagazineMesh = 0x210; // USkeletalMesh*
		constexpr auto MagazineAttachmentTag = 0x218; // FGameplayTag
		constexpr auto StockMesh = 0x220; // USkeletalMesh*
		constexpr auto StockAttachmentTag = 0x228; // FGameplayTag
		constexpr auto SilencerMesh = 0x230; // USkeletalMesh*
		constexpr auto SilencerAttachmentTag = 0x238; // FGameplayTag
		constexpr auto GripMesh = 0x240; // USkeletalMesh*
		constexpr auto GripAttachmentTag = 0x248; // FGameplayTag
		constexpr auto KeywordsForCompositingMesh = 0x250; // TArray<FName>
		constexpr auto BaseMeshOverrideKeyword = 0x260; // FName
		constexpr auto MeshNeedsCPUAccessKeyword = 0x268; // FName
		constexpr auto PhysicsAssetOverrideKeyword = 0x270; // FName
		constexpr auto AnimInstance = 0x278; // UAnimInstance*
		constexpr auto AnimInstanceOverrideKeyword = 0x280; // FName
		constexpr auto EquipSocketOverride = 0x288; // FName
		constexpr auto WeaponSkeletalMeshComponent = 0x290; // UKSWeaponSkeletalMeshComponent*
		constexpr auto PropWeaponSkeletalMeshComponent = 0x298; // TWeakObjectPtr<UKSWeaponSkeletalMeshComponent>
		constexpr auto bHideOnCreation = 0x2a0; // bool
		constexpr auto bDuplicate = 0x2a1; // bool
		constexpr auto DuplicateSocket = 0x2a4; // FName
		constexpr auto DuplicateSkeletalMeshComponent = 0x2b0; // UKSWeaponSkeletalMeshComponent*
		constexpr auto bWeaponLoweringEnabled = 0x2b8; // bool
		constexpr auto CharacterRightShoulderBoneName = 0x2bc; // FName
		constexpr auto CharacterRightElbowBoneName = 0x2c4; // FName
		constexpr auto CharacterLeftShoulderBoneName = 0x2cc; // FName
		constexpr auto CharacterLeftElbowBoneName = 0x2d4; // FName
		constexpr auto CharacterChestBoneName = 0x2dc; // FName
		constexpr auto WeaponBarrelBoneName = 0x2e4; // FName
		constexpr auto WeaponLowerSphereTraceRadius = 0x2ec; // float
		constexpr auto WeaponLowerTestDistanceAdjustment = 0x2f0; // float
		constexpr auto AncillaryMeshData = 0x2f8; // TArray<FAncillaryWeaponMeshInfo>
		constexpr auto WeaponLowerViewDotThreshold = 0x308; // float
		constexpr auto bResetLocked = 0x30c; // bool
		constexpr auto NextBroadcastId = 0x310; // uint32_t
		constexpr auto LastBroadcastReceived = 0x314; // uint32_t
		constexpr auto AncillaryMeshes = 0x318; // TArray<USkeletalMeshComponent*>
		constexpr auto bPreventRetreive = 0x328; // bool
		constexpr auto bForceDisableLHIK = 0x329; // bool
		constexpr auto bAttachHandWhileSprinting = 0x32a; // bool
		constexpr auto bAttachHandWhileMoving = 0x32b; // bool
		constexpr auto bAttachHandWhileCrouching = 0x32c; // bool
		constexpr auto bAttachHandMelee = 0x32d; // bool
		constexpr auto bAttachHandWhileIdle = 0x32e; // bool
		constexpr auto bAttachHandWhileZiplining = 0x32f; // bool
		constexpr auto bForceAttachHandIfNotNonCom = 0x330; // bool
		constexpr auto bForceDisableRHIK = 0x331; // bool
		constexpr auto bAttachRightHand = 0x332; // bool
		constexpr auto bAttachRightHandWhileZiplining = 0x333; // bool
		constexpr auto bHasMirroredReloadAnim = 0x334; // bool
		constexpr auto bHasMirroredQuickReloadAnim = 0x335; // bool
		constexpr auto bHasMirroredFireAnim = 0x336; // bool
		constexpr auto bReplicateWeaponStateAsVariable = 0x337; // bool
		constexpr auto bForceBroadcastAllWeaponStateChanges = 0x338; // bool
		constexpr auto bForceReliableWeaponStateBroadcast = 0x339; // bool
		constexpr auto ShotsFiredSinceLastReload = 0x33c; // int32_t
		constexpr auto bFirstReload = 0x340; // bool
		constexpr auto bShouldBroadcastEmptyFire = 0x341; // bool
		constexpr auto bShouldReliablyBroadcastEmptyFire = 0x342; // bool
		constexpr auto bShouldReliablyBroadcastAmmoChanges = 0x343; // bool
		constexpr auto OnWeaponComponentStateChangedDel = 0x348; // FMulticastInlineDelegate
		constexpr auto bIsInAction = 0x370; // bool
		constexpr auto bNonComUseLimitedMovement = 0x371; // bool
		constexpr auto bComUseLimitedMovement = 0x372; // bool
		constexpr auto bEngUseLimitedMovement = 0x373; // bool
		constexpr auto bEnableTurnInPlaceForAOS = 0x374; // bool
		constexpr auto ZoomFOVChanged = 0x378; // FMulticastInlineDelegate
		constexpr auto CachedAimMode = 0x388; // EKSCharacterAimMode
		constexpr auto DefaultAimCameraTransitionTime = 0x38c; // float
		constexpr auto AimOverShoulderCameraTransitionTime = 0x390; // float
		constexpr auto AimDownSightsCameraTransitionTime = 0x394; // float
		constexpr auto OnWeaponComponentAimModeChangedDel = 0x398; // FMulticastInlineDelegate
		constexpr auto AttachmentCosmetics = 0x3e0; // TArray<UKSWeaponAttachmentCosmeticInst*>
		constexpr auto SkinObjectParenting = 0x3f0; // ESkinObjectParentingType
		constexpr auto ActiveIndex = 0x3f4; // int32_t
		constexpr auto OnEquipmentBecomeActiveDel = 0x3f8; // FMulticastInlineDelegate
		constexpr auto OnEquipmentEndActiveDel = 0x420; // FMulticastInlineDelegate
		constexpr auto ActiveReloadMontage = 0x458; // UAnimMontage*
		constexpr auto ActiveWeaponReloadMontage = 0x460; // UAnimMontage*
		constexpr auto bMultiStageReload = 0x468; // bool
		constexpr auto bSpeedloaded = 0x469; // bool
		constexpr auto PostReloadTimerIsActive = 0x46a; // bool
		constexpr auto EnableAimsDuringReload = 0x46b; // bool
		constexpr auto bShieldIsActive = 0x46c; // bool
		constexpr auto MuzzleSocketKeyword = 0x470; // FName
		constexpr auto ApparelObjectsToListenTo = 0x4a8; // TArray<FName>
		constexpr auto BaseAssetDataTables = 0x4b8; // TArray<FDataTableInfo>
		constexpr auto bCreateDataTableForLegacyAssets = 0x4c8; // bool
		constexpr auto AssetDataTableManager = 0x4d0; // UDynamicSkinTable*
		constexpr auto SkinObject = 0x4d8; // UMultiSkinObject*
		constexpr auto bSkinObjectAdded = 0x4e0; // bool
		constexpr auto ViewModelScale = 0x4f8; // FVector
		constexpr auto ViewModelRotation = 0x504; // FRotator
		constexpr auto ViewModelLocationOffset = 0x510; // FVector
		constexpr auto WeaponCombatStateCooldown = 0x520; // float
		constexpr auto ForceNonCombatShotBlockDistance = 0x524; // float
		constexpr auto TargetingVisualizationClass = 0x528; // UKSWeaponTargetingModule*
		constexpr auto bIsTargeting = 0x530; // bool
		constexpr auto TargetingVisualizerInstance = 0x538; // UKSWeaponTargetingModule*
		constexpr auto VibrationEffect = 0x540; // UForceFeedbackEffect*
		constexpr auto AlternateVibrationEffect = 0x548; // UForceFeedbackEffect*
		constexpr auto AlternativeVibrationAttenuation = 0x550; // UForceFeedbackAttenuation*
		constexpr auto RecoilProfileAsset = 0x558; // URecoilProfileAsset*
		constexpr auto bIsMeleeWeaponComponent = 0x560; // bool
		constexpr auto VFXSpangKeywordPrefix = 0x568; // FString
		constexpr auto DecalSpangKeywordPrefix = 0x578; // FString
		constexpr auto VFXSpangDefaultKeyword = 0x588; // FName
		constexpr auto VFXSpangKeywordMap = 0x590; // TMap<EPhysicalSurface, FName>
		constexpr auto DecalSpangDefaultKeyword = 0x5e0; // FName
		constexpr auto DecalSpangKeywordMap = 0x5e8; // TMap<EPhysicalSurface, FName>
	}

	namespace n_UInterpTrackParticleReplay {
		constexpr auto TrackKeys = 0x70; // TArray<FParticleReplayTrackKey>
	}

	namespace n_UKSModInst_ReviveTarget {
		constexpr auto MaxDistance = 0x478; // float
		constexpr auto OverrideReviveeMontageRowName = 0x47c; // FName
	}

	namespace n_UKSPlayerInputDefault {
		constexpr auto SettingsConfig = 0x28; // TArray<FSettingConfigPair>
		constexpr auto KSInputActionNameTypePairs = 0x38; // TArray<FKSInputActionNameTypePair>
		constexpr auto KSInputActionTiedNames = 0x48; // TArray<FKSInputActionTiedNames>
		constexpr auto CustomInputActionKeys = 0x58; // TArray<FKSCustomInputActionKey>
		constexpr auto CustomInputAxisKeys = 0x68; // TArray<FKSCustomInputAxisKey>
	}

	namespace n_AKSWeapon_Aimed {
		constexpr auto CachedAim = 0x6d8; // FAimData
		constexpr auto LastHitValidationRequestId = 0x728; // uint16_t
		constexpr auto HitValidationRecoveryList = 0x730; // TMap<uint16_t, FHitValidationRecoveryInfo>
		constexpr auto bAimOverShoulder = 0x780; // bool
		constexpr auto CachedAimBonus = 0x784; // float
		constexpr auto bApplyAccuracyServerSide = 0x788; // bool
		constexpr auto Range = 0x7b4; // float
		constexpr auto FiredReplicationFlags = 0x7b8; // EFiredReplicationFlags
		constexpr auto AimAssistCorrectionData = 0x7c0; // UKSAimCorrectionData*
		constexpr auto bAllowAimCorrection = 0x7c8; // bool
		constexpr auto HeadAimCorrectionOffset = 0x7cc; // float
		constexpr auto HeadAimCorrectionOffsetPC = 0x7d0; // float
		constexpr auto HeadAimCorrectionRange = 0x7d4; // float
		constexpr auto bAllowHipAimCorrection = 0x7d8; // bool
		constexpr auto HeadHipAimCorrectionOffset = 0x7dc; // float
		constexpr auto HeadHipMouseAimCorrectionOffset = 0x7e0; // float
		constexpr auto HeadHipAimCorrectionRange = 0x7e4; // float
		constexpr auto ValidationSweepRadius = 0x7e8; // float
		constexpr auto AimOriginOffsetLenience = 0x7ec; // float
		constexpr auto AimOriginAngularLenience = 0x7f0; // float
		constexpr auto MinimumShotDirCoincidence = 0x7f4; // float
		constexpr auto CosAngularLenience = 0x7f8; // float
	}

	namespace n_USlateWidgetStyleAsset {
		constexpr auto CustomStyle = 0x28; // USlateWidgetStyleContainerBase*
	}

	namespace n_UFoliageType {
		constexpr auto UpdateGuid = 0x28; // FGuid
		constexpr auto Density = 0x38; // float
		constexpr auto DensityAdjustmentFactor = 0x3c; // float
		constexpr auto Radius = 0x40; // float
		constexpr auto bSingleInstanceModeOverrideRadius = 0x44; // bool
		constexpr auto SingleInstanceModeRadius = 0x48; // float
		constexpr auto Scaling = 0x4c; // EFoliageScaling
		constexpr auto ScaleX = 0x50; // FFloatInterval
		constexpr auto ScaleY = 0x58; // FFloatInterval
		constexpr auto ScaleZ = 0x60; // FFloatInterval
		constexpr auto VertexColorMaskByChannel = 0x68; // FFoliageVertexColorChannelMask [0x4]
		constexpr auto VertexColorMask = 0x98; // FoliageVertexColorMask
		constexpr auto VertexColorMaskThreshold = 0x9c; // float
		constexpr auto VertexColorMaskInvert = 0xa0; // char : 1
		constexpr auto ZOffset = 0xa4; // FFloatInterval
		constexpr auto AlignToNormal = 0xac; // char : 1
		constexpr auto AlignMaxAngle = 0xb0; // float
		constexpr auto RandomYaw = 0xb4; // char : 1
		constexpr auto RandomPitchAngle = 0xb8; // float
		constexpr auto GroundSlopeAngle = 0xbc; // FFloatInterval
		constexpr auto Height = 0xc4; // FFloatInterval
		constexpr auto LandscapeLayers = 0xd0; // TArray<FName>
		constexpr auto MinimumLayerWeight = 0xe0; // float
		constexpr auto ExclusionLandscapeLayers = 0xe8; // TArray<FName>
		constexpr auto MinimumExclusionLayerWeight = 0xf8; // float
		constexpr auto LandscapeLayer = 0xfc; // FName
		constexpr auto CollisionWithWorld = 0x104; // char : 1
		constexpr auto CollisionScale = 0x108; // FVector
		constexpr auto MeshBounds = 0x114; // FBoxSphereBounds
		constexpr auto LowBoundOriginRadius = 0x130; // FVector
		constexpr auto Mobility = 0x13c; // EComponentMobility
		constexpr auto CullDistance = 0x140; // FInt32Interval
		constexpr auto bEnableStaticLighting = 0x148; // char : 1
		constexpr auto CastShadow = 0x148; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x148; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x148; // char : 1
		constexpr auto bCastDynamicShadow = 0x148; // char : 1
		constexpr auto bCastStaticShadow = 0x148; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x148; // char : 1
		constexpr auto bReceivesDecals = 0x148; // char : 1
		constexpr auto bOverrideLightMapRes = 0x149; // char : 1
		constexpr auto OverriddenLightMapRes = 0x14c; // int32_t
		constexpr auto LightmapType = 0x150; // ELightmapType
		constexpr auto bUseAsOccluder = 0x154; // char : 1
		constexpr auto BodyInstance = 0x158; // FBodyInstance
		constexpr auto CustomNavigableGeometry = 0x268; // EHasCustomNavigableGeometry
		constexpr auto LightingChannels = 0x269; // FLightingChannels
		constexpr auto bRenderCustomDepth = 0x26c; // char : 1
		constexpr auto CustomDepthStencilValue = 0x270; // int32_t
		constexpr auto TranslucencySortPriority = 0x274; // int32_t
		constexpr auto CollisionRadius = 0x278; // float
		constexpr auto ShadeRadius = 0x27c; // float
		constexpr auto NumSteps = 0x280; // int32_t
		constexpr auto InitialSeedDensity = 0x284; // float
		constexpr auto AverageSpreadDistance = 0x288; // float
		constexpr auto SpreadVariance = 0x28c; // float
		constexpr auto SeedsPerStep = 0x290; // int32_t
		constexpr auto DistributionSeed = 0x294; // int32_t
		constexpr auto MaxInitialSeedOffset = 0x298; // float
		constexpr auto bCanGrowInShade = 0x29c; // bool
		constexpr auto bSpawnsInShade = 0x29d; // bool
		constexpr auto MaxInitialAge = 0x2a0; // float
		constexpr auto MaxAge = 0x2a4; // float
		constexpr auto OverlapPriority = 0x2a8; // float
		constexpr auto ProceduralScale = 0x2ac; // FFloatInterval
		constexpr auto ScaleCurve = 0x2b8; // FRuntimeFloatCurve
		constexpr auto ChangeCount = 0x340; // int32_t
		constexpr auto ReapplyDensity = 0x344; // char : 1
		constexpr auto ReapplyRadius = 0x344; // char : 1
		constexpr auto ReapplyAlignToNormal = 0x344; // char : 1
		constexpr auto ReapplyRandomYaw = 0x344; // char : 1
		constexpr auto ReapplyScaling = 0x344; // char : 1
		constexpr auto ReapplyScaleX = 0x344; // char : 1
		constexpr auto ReapplyScaleY = 0x344; // char : 1
		constexpr auto ReapplyScaleZ = 0x344; // char : 1
		constexpr auto ReapplyRandomPitchAngle = 0x345; // char : 1
		constexpr auto ReapplyGroundSlope = 0x345; // char : 1
		constexpr auto ReapplyHeight = 0x345; // char : 1
		constexpr auto ReapplyLandscapeLayers = 0x345; // char : 1
		constexpr auto ReapplyZOffset = 0x345; // char : 1
		constexpr auto ReapplyCollisionWithWorld = 0x345; // char : 1
		constexpr auto ReapplyVertexColorMask = 0x345; // char : 1
		constexpr auto bEnableDensityScaling = 0x345; // char : 1
		constexpr auto RuntimeVirtualTextures = 0x348; // TArray<URuntimeVirtualTexture*>
		constexpr auto VirtualTextureCullMips = 0x358; // int32_t
		constexpr auto VirtualTextureRenderPassType = 0x35c; // ERuntimeVirtualTextureMainPassType
	}

	namespace n_UGameplayTasksComponent {
		constexpr auto bIsNetDirty = 0xbc; // char : 1
		constexpr auto SimulatedTasks = 0xc0; // TArray<UGameplayTask*>
		constexpr auto TaskPriorityQueue = 0xd0; // TArray<UGameplayTask*>
		constexpr auto TickingTasks = 0xf0; // TArray<UGameplayTask*>
		constexpr auto KnownTasks = 0x100; // TArray<UGameplayTask*>
		constexpr auto OnClaimedResourcesChange = 0x110; // FMulticastInlineDelegate
	}

	namespace n_UKSActivityRewardCondition_WeaponTagUsed {
		constexpr auto MatchingWeaponTags = 0x30; // TArray<FGameplayTag>
	}

	namespace n_UKSBTTask_CopyActorLocation {
		constexpr auto ActorKey = 0x70; // FBlackboardKeySelector
		constexpr auto LocationKey = 0x98; // FBlackboardKeySelector
	}

	namespace n_UInterpTrackInstProperty {
		constexpr auto InterpProperty = 0x28; // TFieldPath<FProperty>
		constexpr auto PropertyOuterObjectInst = 0x50; // UObject*
	}

	namespace n_UKickbackModuleRandom {
		constexpr auto MinAmplitude = 0x28; // float
		constexpr auto MaxAmplitude = 0x2c; // float
		constexpr auto MinDuration = 0x30; // float
		constexpr auto MaxDuration = 0x34; // float
		constexpr auto MaxOffsetFromVertical = 0x38; // float
	}

	namespace n_UKSWeaponAttachment_DefaultAmmo {
		constexpr auto DefaultAmmoIncrease = 0x2f8; // int32_t
	}

	namespace n_UKSBoostInventoryItemWidget {
		constexpr auto CurrentItemDetails = 0x520; // FAccountConsumableDetails
	}

	namespace n_UWBP_WeaponDetails_C {
		constexpr auto UberGraphFrame = 0x590; // FPointerToUberGraphFrame
		constexpr auto EquippedWrap = 0x598; // UWBP_WeaponHubCosmeticItem_C*
		constexpr auto GadgetDesc = 0x5a0; // UBorder*
		constexpr auto GadgetDescText = 0x5a8; // UTextBlock*
		constexpr auto Image = 0x5b0; // UImage*
		constexpr auto Image_162 = 0x5b8; // UImage*
		constexpr auto Image_303 = 0x5c0; // UImage*
		constexpr auto PageTitle = 0x5c8; // UVerticalBox*
		constexpr auto ScorcherRender = 0x5d0; // UKSAsyncImage*
		constexpr auto UnlockMilestonesButton = 0x5d8; // UWBP_UnlockMilestonesButton_C*
		constexpr auto WBP_ReactiveWrapStepPreview = 0x5e0; // UWBP_ReactiveWrapStepPreview_C*
		constexpr auto WeaponCategoryText = 0x5e8; // UTextBlock*
		constexpr auto WeaponNameText = 0x5f0; // UTextBlock*
		constexpr auto WeaponViewActorName = 0x5f8; // FName
		constexpr auto GamePad_FaceButtonTOP_SFX = 0x600; // UAkAudioEvent*
		constexpr auto GamePad_LTrigger_SFX = 0x608; // UAkAudioEvent*
		constexpr auto GamePad_RTrigger_SFX = 0x610; // UAkAudioEvent*
		constexpr auto GamePad_FaceButtonLEFT_SFX = 0x618; // UAkAudioEvent*
	}

	namespace n_UKSPlayerMod_GiveItemOnActivation {
		constexpr auto GivenItem = 0x3b8; // TSoftObjectPtr<UKSItem>
		constexpr auto GivenItems = 0x3e0; // TArray<TSoftObjectPtr<UKSItem>>
	}

	namespace n_UAkGroupValue {
		constexpr auto GroupShortID = 0x40; // uint32_t
	}

	namespace n_UWBP_GameNotification_C {
		constexpr auto BodyText = 0x520; // UTextBlock*
		constexpr auto Image_296 = 0x528; // UImage*
		constexpr auto TitleText = 0x530; // UTextBlock*
		constexpr auto WBP_PanelDefault = 0x538; // UWBP_PanelDefault_C*
	}

	namespace n_UWBP_TextChat_Input_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto background = 0x528; // UImage*
		constexpr auto Blur = 0x530; // UBackgroundBlur*
		constexpr auto Button_200 = 0x538; // UButton*
		constexpr auto ChannelOverlay = 0x540; // UOverlay*
		constexpr auto ChannelText = 0x548; // UTextBlock*
		constexpr auto GamepadFocus = 0x550; // UImage*
		constexpr auto HorizontalLayout = 0x558; // UHorizontalBox*
		constexpr auto Input = 0x560; // UKSEditableTextBox*
		constexpr auto OpenChatButton = 0x568; // UButton*
		constexpr auto ParentPanel = 0x570; // UCanvasPanel*
		constexpr auto PromptContainer = 0x578; // USizeBox*
		constexpr auto PromptIcon = 0x580; // UWBP_ControllerPrompt_C*
		constexpr auto PromptText = 0x588; // UTextBlock*
		constexpr auto OnTabPressed = 0x590; // FMulticastInlineDelegate
		constexpr auto OnCancelPressed = 0x5a0; // FMulticastInlineDelegate
		constexpr auto OnLeftPressed = 0x5b0; // FMulticastInlineDelegate
		constexpr auto OnRightPressed = 0x5c0; // FMulticastInlineDelegate
		constexpr auto OnUpPressed = 0x5d0; // FMulticastInlineDelegate
		constexpr auto OnDownPressed = 0x5e0; // FMulticastInlineDelegate
		constexpr auto TextChatWidget = 0x5f0; // UWBP_TextChat_C*
		constexpr auto IsEngaged = 0x5f8; // bool
		constexpr auto PreviousText = 0x600; // FText
		constexpr auto IsPromptActive = 0x618; // bool
	}

	namespace n_UGameplayTagsDeveloperSettings {
		constexpr auto DeveloperConfigName = 0x28; // FString
	}

	namespace n_UWBP_LaunchCinematic_C {
		constexpr auto UberGraphFrame = 0x558; // FPointerToUberGraphFrame
		constexpr auto FadeOutThrobber = 0x560; // UWidgetAnimation*
		constexpr auto FadeInThrobber = 0x568; // UWidgetAnimation*
		constexpr auto FadeOutMediaTexture = 0x570; // UWidgetAnimation*
		constexpr auto FadeInMediaTexture = 0x578; // UWidgetAnimation*
		constexpr auto CinematicMediaTexture = 0x580; // UImage*
		constexpr auto GamepadPromptBasic = 0x588; // UGamepadPromptBasic_C*
		constexpr auto HitTarget = 0x590; // UButton*
		constexpr auto WBP_ThrobberShield = 0x598; // UWBP_ThrobberShield_C*
		constexpr auto MediaPlayer = 0x5a0; // UMediaPlayer*
		constexpr auto Msg_SkipPrompt = 0x5a8; // FText
		constexpr auto AudioStartEvent = 0x5c0; // UAkAudioEvent*
		constexpr auto AudioStopEvent = 0x5c8; // UAkAudioEvent*
		constexpr auto LocalActionName = 0x5d0; // FName
		constexpr auto SkipKeys = 0x5d8; // TArray<FKey>
	}

	namespace n_UKSAccoladeQueueWidget {
		constexpr auto IsBusy = 0x520; // bool
		constexpr auto NumInQueue = 0x524; // int32_t
		constexpr auto OnAccoladeReceived = 0x528; // FMulticastInlineDelegate
		constexpr auto OnAccoladeUpdateMultiplier = 0x538; // FMulticastInlineDelegate
	}

	namespace n_UKSProjectileMovementComponent {
		constexpr auto OnProjectilePenetrated = 0x1d0; // FMulticastInlineDelegate
		constexpr auto PreStopVelocity = 0x1e0; // FVector
		constexpr auto LifetimeUponStop = 0x1ec; // float
		constexpr auto ProjectileVelocityDeflectDampener = 0x1f0; // float
	}

	namespace n_ASkyLight {
		constexpr auto LightComponent = 0x220; // USkyLightComponent*
		constexpr auto bEnabled = 0x228; // char : 1
	}

	namespace n_APGame_CombatLogVisualizer {
		constexpr auto LogFileName = 0x220; // FString
	}

	namespace n_UFirstTimeBrightnessWidget_C {
		constexpr auto UberGraphFrame = 0x4c0; // FPointerToUberGraphFrame
		constexpr auto Decro = 0x4c8; // UImage*
		constexpr auto SettingsWidgetContainer = 0x4d0; // UOverlay*
		constexpr auto Title = 0x4d8; // UTextBlock*
		constexpr auto WBP_StandardButtonMedium = 0x4e0; // UWBP_StandardButtonMedium_C*
		constexpr auto SettingsWidgetConfig = 0x4e8; // FKSSettingsWidgetConfig
		constexpr auto SettingsInfo = 0x4f8; // UKSSettingsInfoBase*
		constexpr auto SettingsWidget = 0x500; // UKSSettingsWidget*
		constexpr auto ShowFirstTimeBrightnessSFX = 0x508; // UAkAudioEvent*
	}

	namespace n_UWBP_RogueCustomizationSelector_C {
		constexpr auto UberGraphFrame = 0x550; // FPointerToUberGraphFrame
		constexpr auto Show = 0x558; // UWidgetAnimation*
		constexpr auto ActionBtnText = 0x560; // UTextBlock*
		constexpr auto CommunicationCosmeticItemContainer = 0x568; // UKSSortableGridPanel*
		constexpr auto CommunicationScrollbox = 0x570; // UKSScrollBox*
		constexpr auto CompleteCosmeticSlotNavBar = 0x578; // UHorizontalBox*
		constexpr auto CosmeticSwitcher = 0x580; // UWidgetSwitcher*
		constexpr auto EmoteCosmeticItemContainer = 0x588; // UKSSortableGridPanel*
		constexpr auto EmoteScrollbox = 0x590; // UKSScrollBox*
		constexpr auto EquipCosmeticBtn = 0x598; // UWBP_ButtonStacked_C*
		constexpr auto EquippedGamepadIcon = 0x5a0; // UImage*
		constexpr auto FakeFill = 0x5a8; // UImage*
		constexpr auto OutfitCosmeticItemContainer = 0x5b0; // UKSSortableGridPanel*
		constexpr auto OutfitScrollbox = 0x5b8; // UKSScrollBox*
		constexpr auto QuipCosmeticItemContainer = 0x5c0; // UKSSortableGridPanel*
		constexpr auto QuipScrollbox = 0x5c8; // UKSScrollBox*
		constexpr auto RogueIcon = 0x5d0; // UKSAsyncImage*
		constexpr auto SprayCosmeticItemContainer = 0x5d8; // UKSSortableGridPanel*
		constexpr auto SprayImage = 0x5e0; // UWBP_AsyncIcon_C*
		constexpr auto SprayImageContainer = 0x5e8; // USizeBox*
		constexpr auto SprayScrollbox = 0x5f0; // UKSScrollBox*
		constexpr auto TabLeftButtonImage = 0x5f8; // UImage*
		constexpr auto TabRightButtonImage = 0x600; // UImage*
		constexpr auto WBP_CommunicationsCosmeticSlotNavTab = 0x608; // UWBP_CosmeticSlotNavTab_C*
		constexpr auto WBP_EmotesCosmeticSlotNavTab = 0x610; // UWBP_CosmeticSlotNavTab_C*
		constexpr auto WBP_ItemInfoContainer_Description = 0x618; // UWBP_ItemInfoContainer_Description_C*
		constexpr auto WBP_OutfitsCosmeticSlotNavTab = 0x620; // UWBP_CosmeticSlotNavTab_C*
		constexpr auto WBP_QuipsCosmeticSlotNavTab = 0x628; // UWBP_CosmeticSlotNavTab_C*
		constexpr auto WBP_SpraysCosmeticSlotNavTab = 0x630; // UWBP_CosmeticSlotNavTab_C*
		constexpr auto WBP_WingsuitsCosmeticSlotNavTab = 0x638; // UWBP_CosmeticSlotNavTab_C*
		constexpr auto WBP_WrapsCosmeticSlotNavTab = 0x640; // UWBP_CosmeticSlotNavTab_C*
		constexpr auto WingsuitCosmeticItemContainer = 0x648; // UKSSortableGridPanel*
		constexpr auto WingsuitScrollbox = 0x650; // UKSScrollBox*
		constexpr auto WrapCosmeticItemContainer = 0x658; // UKSSortableGridPanel*
		constexpr auto WrapScrollbox = 0x660; // UKSScrollBox*
		constexpr auto CosmeticItems = 0x668; // TArray<UWBP_KSCosmeticItemSelector_C*>
		constexpr auto OnEquipCosmeticItem = 0x678; // FMulticastInlineDelegate
		constexpr auto CosmeticSlotDetail = 0x688; // FCosmeticSlotDetails
		constexpr auto MercManager = 0x6a0; // UKSMercManager*
		constexpr auto LoadoutDataFactory = 0x6a8; // UKSLoadoutDataFactory*
		constexpr auto MercSelectionCharacter = 0x6b0; // AKSLobbyCharacter*
		constexpr auto SelectedCosmeticKSItem = 0x6b8; // UKSItem*
		constexpr auto WingSuitAsset = 0x6c0; // UKSWeaponAsset*
		constexpr auto EquippedSlot = 0x6c8; // UWBP_KSCosmeticItemSelector_C*
		constexpr auto HoveredItem = 0x6d0; // UKSItem*
		constexpr auto ShowEquipAllRogueCustomSelectSFX = 0x6d8; // UAkAudioEvent*
		constexpr auto WingsuitEquipSound = 0x6e0; // UAkAudioEvent*
		constexpr auto SprayEquipSound = 0x6e8; // UAkAudioEvent*
		constexpr auto WrapEmoteEquipSound = 0x6f0; // UAkAudioEvent*
		constexpr auto Skin Preview Line = 0x6f8; // FKSVoicelineEvent
		constexpr auto SkinEquipSound = 0x730; // UAkAudioEvent*
		constexpr auto SelectedStoreItem = 0x738; // UPUMG_StoreItem*
		constexpr auto ReturnToItemSelection = 0x740; // UPUMG_StoreItem*
		constexpr auto HoveredStoreItem = 0x748; // UPUMG_StoreItem*
	}

	namespace n_UBTTask_PlayAnimation {
		constexpr auto AnimationToPlay = 0x70; // UAnimationAsset*
		constexpr auto bLooping = 0x78; // char : 1
		constexpr auto bNonBlocking = 0x78; // char : 1
		constexpr auto MyOwnerComp = 0x80; // UBehaviorTreeComponent*
		constexpr auto CachedSkelMesh = 0x88; // USkeletalMeshComponent*
	}

	namespace n_UPUMG_StoreItemHelper {
		constexpr auto OnPurchaseItem = 0x28; // FMulticastInlineDelegate
		constexpr auto OnPurchasePortalItem = 0x38; // FMulticastInlineDelegate
		constexpr auto OnNotEnoughCurrency = 0x48; // FMulticastInlineDelegate
		constexpr auto OnReceiveVendor = 0x58; // FMulticastInlineDelegate
		constexpr auto OnReceiveXpTables = 0x68; // FMulticastInlineDelegate
		constexpr auto OnReceivePricePoints = 0x78; // FMulticastInlineDelegate
		constexpr auto OnPortalOffersReceived = 0x88; // FMulticastInlineDelegate
		constexpr auto OnPendingPurchaseReceived = 0x98; // FMulticastInlineDelegate
		constexpr auto OnPurchaseSubmitted = 0xa8; // FMulticastInlineDelegate
		constexpr auto PremiumCurrencyRulesetId = 0xb8; // int32_t
		constexpr auto SkuToStoreItem = 0xe0; // TMap<FString, UPUMG_StoreItem*>
		constexpr auto StoreItems = 0x130; // TMap<int32_t, UPUMG_StoreItem*>
		constexpr auto XpTables = 0x1e0; // TMap<int64_t, UPUMG_XpTable*>
		constexpr auto XpTablesLoaded = 0x280; // bool
		constexpr auto PricePointsLoaded = 0x281; // bool
		constexpr auto PortalOffersLoaded = 0x282; // bool
		constexpr auto GameInstance = 0x288; // UGameInstance*
	}

	namespace n_UMaster_Melee_ABP_C {
		constexpr auto UberGraphFrame = 0x3f0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x3f8; // FAnimNode_Root
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x438; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult = 0x470; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_LocalRefPose_3 = 0x4a8; // FAnimNode_RefPose
		constexpr auto AnimGraphNode_SequenceSkinned_4 = 0x4d0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_StateResult_3 = 0x630; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_LocalRefPose_2 = 0x670; // FAnimNode_RefPose
		constexpr auto AnimGraphNode_SequenceSkinned_3 = 0x698; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_StateResult_2 = 0x7f8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_2 = 0x838; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SequenceSkinned_2 = 0x8f8; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_LocalRefPose = 0xa58; // FAnimNode_RefPose
		constexpr auto AnimGraphNode_SequenceSkinned = 0xa80; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_StateResult = 0xbe0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0xc20; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_BlendListByBool = 0xce0; // FAnimNode_BlendListByBool
		constexpr auto Is Holstered = 0xd90; // bool
	}

	namespace n_UKSPurchaseConfirmationWidget {
		constexpr auto PurchaseItem = 0x520; // UPUMG_StoreItem*
		constexpr auto PurchaseQuantity = 0x528; // int32_t
		constexpr auto PurchaseRequestData = 0x530; // UKSPurchaseData*
	}

	namespace n_UABP_GAD_ZiplineDevice_C {
		constexpr auto UberGraphFrame = 0x1130; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x1138; // FAnimNode_Root
		constexpr auto AnimGraphNode_ModifyBone_6 = 0x1178; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_5 = 0x1290; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_4 = 0x13a8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_4 = 0x14c0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_4 = 0x14f0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_BlendListByBool_3 = 0x1520; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x15d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult = 0x1658; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x1698; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_LocalToComponentSpace_3 = 0x1758; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_3 = 0x1788; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_SaveCachedPose = 0x17b8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose = 0x1880; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x18b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_CCDIK = 0x1940; // FAnimNode_CCDIK
		constexpr auto AnimGraphNode_ModifyBone_3 = 0x1ad0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x1be8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_2 = 0x1c98; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_2 = 0x1cc8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x1cf8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ModifyBone_2 = 0x1d80; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_BlendListByBool = 0x1e98; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x1f48; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x1f78; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_SequencePlayer = 0x1fa8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ModifyBone = 0x2030; // FAnimNode_ModifyBone
		constexpr auto HeroABP = 0x2148; // UPCM_Hero_ABP_C*
		constexpr auto Zipline IK Target Location = 0x2150; // FVector
		constexpr auto Zipline Device Rope Pivot = 0x215c; // FVector
		constexpr auto Zipline IK Target Rotation = 0x2168; // FRotator
		constexpr auto L_ZiplineDevice Location = 0x2174; // FVector
		constexpr auto R_ZiplineDevice Location = 0x2180; // FVector
	}

	namespace n_UWBP_BoxStroke_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto Image_E = 0x240; // UImage*
		constexpr auto Image_N = 0x248; // UImage*
		constexpr auto Image_S = 0x250; // UImage*
		constexpr auto Image_W = 0x258; // UImage*
		constexpr auto SB_E = 0x260; // USizeBox*
		constexpr auto SB_N = 0x268; // USizeBox*
		constexpr auto SB_S = 0x270; // USizeBox*
		constexpr auto SB_W = 0x278; // USizeBox*
		constexpr auto StrokeSize = 0x280; // float
		constexpr auto StrokeColor = 0x284; // FLinearColor
	}

	namespace n_UChannel {
		constexpr auto Connection = 0x28; // UNetConnection*
	}

	namespace n_UKSPurchaseData {
		constexpr auto StoreItem = 0x28; // UPUMG_StoreItem*
		constexpr auto PurchaseQuantity = 0x30; // int32_t
		constexpr auto ExternalTransactionId = 0x38; // FString
		constexpr auto PurchaseCompletedCallback = 0x48; // FMulticastInlineDelegate
	}

	namespace n_UParticleModuleLocationPrimitiveSphere_Seeded {
		constexpr auto RandomSeedInfo = 0xe0; // FParticleRandomSeedInfo
	}

	namespace n_UKSBTD_CompareRoundNumber {
		constexpr auto RoundNumber = 0x68; // int32_t
		constexpr auto ArithmeticOperation = 0x6c; // EArithmeticKeyOperation
	}

	namespace n_UUserDefinedCaptureProtocol {
		constexpr auto World = 0x58; // UWorld*
	}

	namespace n_UScrollBar {
		constexpr auto WidgetStyle = 0x110; // FScrollBarStyle
		constexpr auto Style = 0x5e0; // USlateWidgetStyleAsset*
		constexpr auto bAlwaysShowScrollbar = 0x5e8; // bool
		constexpr auto bAlwaysShowScrollbarTrack = 0x5e9; // bool
		constexpr auto Orientation = 0x5ea; // EOrientation
		constexpr auto Thickness = 0x5ec; // FVector2D
		constexpr auto Padding = 0x5f4; // FMargin
	}

	namespace n_UKSFXCurveComponent {
		constexpr auto PostProcessMID = 0x100; // UMaterialInstanceDynamic*
		constexpr auto PostProcessMIDParent = 0x108; // UMaterialInterface*
		constexpr auto ParticleSystem = 0x110; // UParticleSystemComponent*
		constexpr auto ParticleSystemParent = 0x118; // UParticleSystem*
		constexpr auto bPlaying = 0x120; // bool
		constexpr auto bReversing = 0x121; // bool
		constexpr auto bLooping = 0x122; // bool
		constexpr auto CurrentTime = 0x124; // float
	}

	namespace n_USoundSourceBus {
		constexpr auto SourceBusChannels = 0x310; // ESourceBusChannels
		constexpr auto SourceBusDuration = 0x314; // float
		constexpr auto bAutoDeactivateWhenSilent = 0x318; // char : 1
	}

	namespace n_UKSEmoteCosmeticComponent_Spray {
		constexpr auto StatTrackingNumber = 0x298; // int32_t
	}

	namespace n_UNavRelevantComponent {
		constexpr auto bAttachToOwnersRoot = 0xd4; // char : 1
		constexpr auto CachedNavParent = 0xd8; // UObject*
	}

	namespace n_UNavAreaMeta_SwitchByAgent {
		constexpr auto Agent0Area = 0x48; // UNavArea*
		constexpr auto Agent1Area = 0x50; // UNavArea*
		constexpr auto Agent2Area = 0x58; // UNavArea*
		constexpr auto Agent3Area = 0x60; // UNavArea*
		constexpr auto Agent4Area = 0x68; // UNavArea*
		constexpr auto Agent5Area = 0x70; // UNavArea*
		constexpr auto Agent6Area = 0x78; // UNavArea*
		constexpr auto Agent7Area = 0x80; // UNavArea*
		constexpr auto Agent8Area = 0x88; // UNavArea*
		constexpr auto Agent9Area = 0x90; // UNavArea*
		constexpr auto Agent10Area = 0x98; // UNavArea*
		constexpr auto Agent11Area = 0xa0; // UNavArea*
		constexpr auto Agent12Area = 0xa8; // UNavArea*
		constexpr auto Agent13Area = 0xb0; // UNavArea*
		constexpr auto Agent14Area = 0xb8; // UNavArea*
		constexpr auto Agent15Area = 0xc0; // UNavArea*
	}

	namespace n_UInterpTrackInstFloatAnimBPParam {
		constexpr auto AnimScriptInstance = 0x28; // UAnimInstance*
		constexpr auto ResetFloat = 0x30; // float
	}

	namespace n_ULandscapeSettings {
		constexpr auto MaxNumberOfLayers = 0x38; // int32_t
	}

	namespace n_UAkSurfaceReflectorSetComponent {
		constexpr auto bEnableSurfaceReflectors = 0x208; // char : 1
		constexpr auto AcousticPolys = 0x210; // TArray<FAkPoly>
		constexpr auto bEnableDiffraction = 0x220; // char : 1
		constexpr auto bEnableDiffractionOnBoundaryEdges = 0x220; // char : 1
		constexpr auto AssociatedRoom = 0x228; // AActor*
	}

	namespace n_UWBP_PlayerIdentity_Avatar_C {
		constexpr auto AvatarIcon = 0x520; // UWBP_AsyncIcon_C*
	}

	namespace n_UEditableStaticMeshAdapter {
		constexpr auto StaticMesh = 0x28; // UStaticMesh*
		constexpr auto OriginalStaticMesh = 0x30; // UStaticMesh*
		constexpr auto StaticMeshLODIndex = 0x38; // int32_t
	}

	namespace n_UProgressWidgetStyle {
		constexpr auto ProgressBarStyle = 0x30; // FProgressBarStyle
	}

	namespace n_UAsyncActionLoadPrimaryAssetClassList {
		constexpr auto Completed = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UToFloatField {
		constexpr auto IntField = 0xb0; // UFieldNodeInt*
	}

	namespace n_UKSModInst_ActivatedTarget {
		constexpr auto ActivateTargetMod = 0x478; // UKSPlayerMod_ActivatedTarget*
		constexpr auto Target = 0x480; // AKSCharacter*
		constexpr auto TargetAssetDataTableManager = 0x490; // UDynamicSkinTable*
	}

	namespace n_UWBP_AsyncIcon_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto Icon = 0x240; // UKSAsyncImage*
		constexpr auto LoadingThrobber = 0x248; // UThrobber*
		constexpr auto OnIconUpdated = 0x250; // FMulticastInlineDelegate
		constexpr auto DefaultBrush = 0x260; // FSlateBrush
	}

	namespace n_UAnimCompress_RemoveTrivialKeys {
		constexpr auto MaxPosDiff = 0x40; // float
		constexpr auto MaxAngleDiff = 0x44; // float
		constexpr auto MaxScaleDiff = 0x48; // float
	}

	namespace n_UKSLimitDeployablesRuleComponent {
		constexpr auto LimitThreshold = 0xb0; // uint32_t
		constexpr auto bLimitPerAsset = 0xb4; // bool
	}

	namespace n_UKSWeaponAttachment_Silencer {
		constexpr auto AudibleRange = 0x2f8; // float
		constexpr auto bModifyFalloffRange = 0x2fc; // bool
		constexpr auto FalloffRangeMultiplier = 0x300; // float
	}

	namespace n_AKillCamController_C {
		constexpr auto UberGraphFrame = 0xf30; // FPointerToUberGraphFrame
	}

	namespace n_UNiagaraSimulationStageGeneric {
		constexpr auto IterationSource = 0x38; // ENiagaraIterationSource
		constexpr auto Iterations = 0x3c; // int32_t
		constexpr auto bSpawnOnly = 0x40; // char : 1
		constexpr auto DataInterface = 0x48; // FNiagaraVariableDataInterfaceBinding
	}

	namespace n_UMaterialExpressionOneMinus {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UEnvQueryGenerator_PathingGrid {
		constexpr auto PathToItem = 0xf8; // FAIDataProviderBoolValue
		constexpr auto NavigationFilter = 0x130; // UNavigationQueryFilter*
		constexpr auto ScanRangeMultiplier = 0x138; // FAIDataProviderFloatValue
	}

	namespace n_UDatasmithCineCameraComponentTemplate {
		constexpr auto FilmbackSettings = 0x30; // FDatasmithCameraFilmbackSettingsTemplate
		constexpr auto LensSettings = 0x38; // FDatasmithCameraLensSettingsTemplate
		constexpr auto FocusSettings = 0x3c; // FDatasmithCameraFocusSettingsTemplate
		constexpr auto CurrentFocalLength = 0x44; // float
		constexpr auto CurrentAperture = 0x48; // float
		constexpr auto PostProcessSettings = 0x50; // FDatasmithPostProcessSettingsTemplate
	}

	namespace n_USoundNodeWaveParam {
		constexpr auto WaveParameterName = 0x48; // FName
	}

	namespace n_UBTTask_MoveTo {
		constexpr auto AcceptableRadius = 0x98; // float
		constexpr auto FilterClass = 0xa0; // UNavigationQueryFilter*
		constexpr auto ObservedBlackboardValueTolerance = 0xa8; // float
		constexpr auto bObserveBlackboardValue = 0xac; // char : 1
		constexpr auto bAllowStrafe = 0xac; // char : 1
		constexpr auto bAllowPartialPath = 0xac; // char : 1
		constexpr auto bTrackMovingGoal = 0xac; // char : 1
		constexpr auto bProjectGoalLocation = 0xac; // char : 1
		constexpr auto bReachTestIncludesAgentRadius = 0xac; // char : 1
		constexpr auto bReachTestIncludesGoalRadius = 0xac; // char : 1
		constexpr auto bStopOnOverlap = 0xac; // char : 1
		constexpr auto bStopOnOverlapNeedsUpdate = 0xad; // char : 1
	}

	namespace n_AKSPowerUp_Reequip {
		constexpr auto ReequipWeaponTypesQuery = 0x258; // FGameplayTagQuery
		constexpr auto bDropLeftovers = 0x2a0; // bool
	}

	namespace n_UEnvironmentListenerComponent {
		constexpr auto CurrentEnvironmentTag = 0xb0; // FName
		constexpr auto StartingEnvironment = 0xb8; // FName
		constexpr auto LastTrackerComponent = 0xc0; // TWeakObjectPtr<UEnvironmentTrackerComponent>
	}

	namespace n_ASpectatorBeaconHost {
		constexpr auto State = 0x248; // USpectatorBeaconState*
		constexpr auto bLogoutOnSessionTimeout = 0x2b0; // bool
		constexpr auto SessionTimeoutSecs = 0x2b4; // float
		constexpr auto TravelSessionTimeoutSecs = 0x2b8; // float
	}

	namespace n_UKSQueueDataFactory {
		constexpr auto OnSetQueueId = 0x250; // FMulticastInlineDelegate
		constexpr auto OnQueueErrorRelevantStateChanged = 0x260; // FMulticastInlineDelegate
		constexpr auto ChunksInstallingQueueId = 0x270; // int32_t
		constexpr auto DefaultQueueId = 0x274; // int32_t
		constexpr auto CancelJoinMatchDelay = 0x278; // float
		constexpr auto OnSetQueueInputState = 0x280; // FMulticastInlineDelegate
		constexpr auto PreviousCustomMatchMemberIds = 0x290; // TArray<int64_t>
		constexpr auto SelectedQueueId = 0x2a0; // int32_t
		constexpr auto TimeoutForSwitchFromShelteredToMainQueue = 0x2a4; // float
		constexpr auto bWaitingOnLeaveForShelteredSwitch = 0x2a8; // bool
		constexpr auto bWaitingOnJoinForShelteredSwitch = 0x2a9; // bool
		constexpr auto MaxRetriesForAlternateQueue = 0x2ac; // int32_t
		constexpr auto TimeBetweenRetriesForAlternateQueue = 0x2b0; // float
		constexpr auto RetryingDisplayTime = 0x2b4; // float
		constexpr auto bRetryingViaAutoRejoin = 0x2b8; // bool
		constexpr auto NumRetriesForAlternateQueue = 0x2cc; // int32_t
		constexpr auto MapInfos = 0x2d0; // TArray<FMapDetail>
		constexpr auto QueueDetailDataTable = 0x2e0; // UDataTable*
	}

	namespace n_UProceduralFoliageSpawner {
		constexpr auto RandomSeed = 0x28; // int32_t
		constexpr auto TileSize = 0x2c; // float
		constexpr auto NumUniqueTiles = 0x30; // int32_t
		constexpr auto MinimumQuadTreeSize = 0x34; // float
		constexpr auto FoliageTypes = 0x40; // TArray<FFoliageTypeObject>
	}

	namespace n_UCompressedImageSequenceProtocol {
		constexpr auto CompressionQuality = 0xd8; // int32_t
	}

	namespace n_AAudioVolume {
		constexpr auto Priority = 0x258; // float
		constexpr auto bEnabled = 0x25c; // char : 1
		constexpr auto Settings = 0x260; // FReverbSettings
		constexpr auto AmbientZoneSettings = 0x280; // FInteriorSettings
	}

	namespace n_UPGame_CharacterMovementComponent {
		constexpr auto bUseTweenWalkingPhysics = 0x6a0; // bool
		constexpr auto r_ChargeInfo = 0x6a8; // FChargeInfo
		constexpr auto r_TweenInfo = 0x6c4; // FTweenInfo
	}

	namespace n_UKSActivityRewardCondition_ItemPurchased {
		constexpr auto MatchingItems = 0x30; // TArray<TSoftObjectPtr<UKSItem>>
	}

	namespace n_UKSSettingsPageConfigAsset {
		constexpr auto SettingsSectionConfigs = 0x30; // TArray<UKSSettingsSectionConfigAsset*>
		constexpr auto PageName = 0x40; // FText
		constexpr auto HeadingByPlatform = 0x58; // TMap<FString, FText>
	}

	namespace n_UKSJobItem {
		constexpr auto IsStarterJob = 0x250; // bool
		constexpr auto IsRandomJob = 0x251; // bool
		constexpr auto AllowDuplicates = 0x252; // bool
		constexpr auto JobDefaultSkin = 0x258; // TSoftObjectPtr<UKSSkinBundle>
		constexpr auto JobSkinBundleLootTableId = 0x280; // int32_t
		constexpr auto JobRoleItem = 0x288; // TSoftObjectPtr<UKSJobRole>
		constexpr auto UniqueItem = 0x2b0; // TSoftObjectPtr<UKSItem>
		constexpr auto PrimaryWeaponOptionOne = 0x2d8; // TSoftObjectPtr<UKSItem>
		constexpr auto PrimaryWeaponCategoryOptionOne = 0x300; // TSoftObjectPtr<UKSWeaponCategoryAsset>
		constexpr auto PrimaryWeaponOptionOneIsDefault = 0x328; // bool
		constexpr auto PrimaryWeaponOptionTwo = 0x330; // TSoftObjectPtr<UKSItem>
		constexpr auto PrimaryWeaponCategoryOptionTwo = 0x358; // TSoftObjectPtr<UKSWeaponCategoryAsset>
		constexpr auto PrimaryWeaponOptionTwoIsDefault = 0x380; // bool
		constexpr auto SecondaryWeaponOptionOne = 0x388; // TSoftObjectPtr<UKSItem>
		constexpr auto SecondaryWeaponOptionOneIsDefault = 0x3b0; // bool
		constexpr auto SecondaryWeaponOptionTwo = 0x3b8; // TSoftObjectPtr<UKSItem>
		constexpr auto SecondaryWeaponOptionTwoIsDefault = 0x3e0; // bool
		constexpr auto MeleeWeapon = 0x3e8; // TSoftObjectPtr<UKSItem>
		constexpr auto QuickMeleeWeapon = 0x410; // TSoftObjectPtr<UKSItem>
		constexpr auto Passives = 0x438; // TArray<TSoftObjectPtr<UKSItem>>
		constexpr auto GadgetOptionOne = 0x448; // TSoftObjectPtr<UKSItem>
		constexpr auto GadgetOptionOneIsDefault = 0x470; // bool
		constexpr auto GadgetOptionTwo = 0x478; // TSoftObjectPtr<UKSItem>
		constexpr auto GadgetOptionTwoIsDefault = 0x4a0; // bool
		constexpr auto PerkOptionOne = 0x4a8; // TSoftObjectPtr<UKSItem>
		constexpr auto PerkOptionOneIsDefault = 0x4d0; // bool
		constexpr auto PerkOptionTwo = 0x4d8; // TSoftObjectPtr<UKSItem>
		constexpr auto PerkOptionTwoIsDefault = 0x500; // bool
		constexpr auto PerkOptionThree = 0x508; // TSoftObjectPtr<UKSItem>
		constexpr auto PerkOptionThreeIsDefault = 0x530; // bool
		constexpr auto PerkOptionFour = 0x538; // TSoftObjectPtr<UKSItem>
		constexpr auto PerkOptionFourIsDefault = 0x560; // bool
		constexpr auto PerkOptionFive = 0x568; // TSoftObjectPtr<UKSItem>
		constexpr auto PerkOptionFiveIsDefault = 0x590; // bool
		constexpr auto PerkOptionSix = 0x598; // TSoftObjectPtr<UKSItem>
		constexpr auto PerkOptionSixIsDefault = 0x5c0; // bool
		constexpr auto GambitOptionOne = 0x5c8; // TSoftObjectPtr<UKSItem>
		constexpr auto GambitOptionOneIsDefault = 0x5f0; // bool
		constexpr auto GambitOptionTwo = 0x5f8; // TSoftObjectPtr<UKSItem>
		constexpr auto GambitOptionTwoIsDefault = 0x620; // bool
		constexpr auto GambitOptionThree = 0x628; // TSoftObjectPtr<UKSItem>
		constexpr auto GambitOptionThreeIsDefault = 0x650; // bool
		constexpr auto GambitOptionFour = 0x658; // TSoftObjectPtr<UKSItem>
		constexpr auto GambitOptionFourIsDefault = 0x680; // bool
		constexpr auto GambitOptionFive = 0x688; // TSoftObjectPtr<UKSItem>
		constexpr auto GambitOptionFiveIsDefault = 0x6b0; // bool
		constexpr auto GambitOptionSix = 0x6b8; // TSoftObjectPtr<UKSItem>
		constexpr auto GambitOptionSixIsDefault = 0x6e0; // bool
		constexpr auto DefaultEmotes = 0x6e8; // TArray<TSoftObjectPtr<UKSEmote>>
		constexpr auto DefaultQuips = 0x6f8; // TArray<TSoftObjectPtr<UKSQuip>>
		constexpr auto DefaultCommunications = 0x708; // TArray<TSoftObjectPtr<UKSCommunication>>
		constexpr auto DefaultSprays = 0x718; // TArray<TSoftObjectPtr<UKSSpray>>
		constexpr auto DefaultWingsuit = 0x728; // TSoftObjectPtr<UKSItem>
		constexpr auto LobbyPropsToPreload = 0x750; // TArray<FSoftObjectPath>
		constexpr auto SmallJobIcon = 0x760; // TSoftObjectPtr<UTexture2D>
		constexpr auto JobPortrait = 0x788; // TSoftObjectPtr<UTexture2D>
		constexpr auto JobDiamondPortrait = 0x7b0; // TSoftObjectPtr<UTexture2D>
		constexpr auto JobSquarePortrait = 0x7d8; // TSoftObjectPtr<UTexture2D>
	}

	namespace n_USceneComponent {
		constexpr auto PhysicsVolume = 0xb8; // TWeakObjectPtr<APhysicsVolume>
		constexpr auto AttachParent = 0xc0; // USceneComponent*
		constexpr auto AttachSocketName = 0xc8; // FName
		constexpr auto AttachChildren = 0xd0; // TArray<USceneComponent*>
		constexpr auto ClientAttachedChildren = 0xe0; // TArray<USceneComponent*>
		constexpr auto RelativeLocation = 0x11c; // FVector
		constexpr auto RelativeRotation = 0x128; // FRotator
		constexpr auto RelativeScale3D = 0x134; // FVector
		constexpr auto ComponentVelocity = 0x140; // FVector
		constexpr auto bComponentToWorldUpdated = 0x14c; // char : 1
		constexpr auto bAbsoluteLocation = 0x14c; // char : 1
		constexpr auto bAbsoluteRotation = 0x14c; // char : 1
		constexpr auto bAbsoluteScale = 0x14c; // char : 1
		constexpr auto bVisible = 0x14c; // char : 1
		constexpr auto bShouldBeAttached = 0x14c; // char : 1
		constexpr auto bShouldSnapLocationWhenAttached = 0x14c; // char : 1
		constexpr auto bShouldSnapRotationWhenAttached = 0x14d; // char : 1
		constexpr auto bShouldUpdatePhysicsVolume = 0x14d; // char : 1
		constexpr auto bHiddenInGame = 0x14d; // char : 1
		constexpr auto bBoundsChangeTriggersStreamingDataRebuild = 0x14d; // char : 1
		constexpr auto bUseAttachParentBound = 0x14d; // char : 1
		constexpr auto Mobility = 0x14f; // EComponentMobility
		constexpr auto DetailMode = 0x150; // EDetailMode
		constexpr auto PhysicsVolumeChangedDelegate = 0x151; // FMulticastSparseDelegate
	}

	namespace n_UInstancedStaticMeshComponent {
		constexpr auto PerInstanceSMData = 0x4e8; // TArray<FInstancedStaticMeshInstanceData>
		constexpr auto NumCustomDataFloats = 0x4f8; // int32_t
		constexpr auto PerInstanceSMCustomData = 0x500; // TArray<float>
		constexpr auto InstancingRandomSeed = 0x510; // int32_t
		constexpr auto InstanceStartCullDistance = 0x514; // int32_t
		constexpr auto InstanceEndCullDistance = 0x518; // int32_t
		constexpr auto InstanceReorderTable = 0x520; // TArray<int32_t>
		constexpr auto NumPendingLightmaps = 0x578; // int32_t
		constexpr auto CachedMappings = 0x580; // TArray<FInstancedStaticMeshMappingInfo>
	}

	namespace n_UBTTask_RunBehavior {
		constexpr auto BehaviorAsset = 0x70; // UBehaviorTree*
	}

	namespace n_UAkXboxOneInitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettings
		constexpr auto ApuHeapSettings = 0x88; // FAkXboxOneApuHeapInitializationSettings
		constexpr auto CommunicationSettings = 0x90; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xb8; // FAkXboxOneAdvancedInitializationSettings
	}

	namespace n_UFloatingPawnMovement {
		constexpr auto MaxSpeed = 0x138; // float
		constexpr auto Acceleration = 0x13c; // float
		constexpr auto Deceleration = 0x140; // float
		constexpr auto TurningBoost = 0x144; // float
		constexpr auto bPositionCorrected = 0x148; // char : 1
	}

	namespace n_UBasicOverlays {
		constexpr auto Overlays = 0x28; // TArray<FOverlayItem>
	}

	namespace n_UMovieSceneObjectPropertySection {
		constexpr auto ObjectChannel = 0xe0; // FMovieSceneObjectPathChannel
	}

	namespace n_UStereoLayerShapeEquirect {
		constexpr auto LeftUVRect = 0x28; // FBox2D
		constexpr auto RightUVRect = 0x3c; // FBox2D
		constexpr auto LeftScale = 0x50; // FVector2D
		constexpr auto RightScale = 0x58; // FVector2D
		constexpr auto LeftBias = 0x60; // FVector2D
		constexpr auto RightBias = 0x68; // FVector2D
	}

	namespace n_UEnvQueryTest_Volume {
		constexpr auto VolumeContext = 0x1f8; // UEnvQueryContext*
		constexpr auto VolumeClass = 0x200; // AVolume*
		constexpr auto bDoComplexVolumeTest = 0x208; // char : 1
	}

	namespace n_USkeletalBodySetup {
		constexpr auto bSkipScaleFromAnimation = 0x250; // bool
		constexpr auto PhysicalAnimationData = 0x258; // TArray<FPhysicalAnimationProfile>
	}

	namespace n_AProceduralFoliageVolume {
		constexpr auto ProceduralComponent = 0x258; // UProceduralFoliageComponent*
	}

	namespace n_UTouchInterface {
		constexpr auto Controls = 0x28; // TArray<FTouchInputControl>
		constexpr auto ActiveOpacity = 0x38; // float
		constexpr auto InactiveOpacity = 0x3c; // float
		constexpr auto TimeUntilDeactive = 0x40; // float
		constexpr auto TimeUntilReset = 0x44; // float
		constexpr auto ActivationDelay = 0x48; // float
		constexpr auto bPreventRecenter = 0x4c; // bool
		constexpr auto StartupDelay = 0x50; // float
	}

	namespace n_UAkAndroidInitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettingsWithSampleRate
		constexpr auto CommunicationSettings = 0x90; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xb8; // FAkAndroidAdvancedInitializationSettings
	}

	namespace n_AKSWeapon_Zipline {
		constexpr auto OnEndPointUpdated = 0x800; // FMulticastInlineDelegate
		constexpr auto ZipLineClass = 0x810; // AKSZipLine*
		constexpr auto Zipline = 0x818; // AKSZipLine*
		constexpr auto PreviewTraceChannel = 0x820; // ETraceTypeQuery
		constexpr auto MaxRange = 0x824; // float
		constexpr auto MinRange = 0x828; // float
		constexpr auto ProjectileSpeed = 0x82c; // float
	}

	namespace n_ULiveLinkInstance {
		constexpr auto CurrentRetargetAsset = 0x268; // ULiveLinkRetargetAsset*
	}

	namespace n_UWBP_PlayerProfileScreen_StatEntry_C {
		constexpr auto Image_498 = 0x238; // UImage*
		constexpr auto ImgIcon = 0x240; // UWBP_AsyncIcon_C*
		constexpr auto TxtName = 0x248; // UTextBlock*
		constexpr auto TxtValue = 0x250; // UTextBlock*
		constexpr auto ActivityInstance = 0x258; // UKSActivityInstance*
	}

	namespace n_UKSBTTask_Strafe {
		constexpr auto DirectionAngleMax = 0xf0; // float
		constexpr auto DirectionAngleMin = 0xf4; // float
		constexpr auto bInvertAngle = 0xf8; // bool
		constexpr auto MinDistance = 0xfc; // float
		constexpr auto MaxDistance = 0x100; // float
	}

	namespace n_UThrobber {
		constexpr auto NumberOfPieces = 0x110; // int32_t
		constexpr auto bAnimateHorizontally = 0x114; // bool
		constexpr auto bAnimateVertically = 0x115; // bool
		constexpr auto bAnimateOpacity = 0x116; // bool
		constexpr auto PieceImage = 0x118; // USlateBrushAsset*
		constexpr auto Image = 0x120; // FSlateBrush
	}

	namespace n_UWBP_RogueCustomizationPanel_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto Show = 0x528; // UWidgetAnimation*
		constexpr auto Outfit = 0x530; // UWBP_KSCosmeticItemDisplay_C*
		constexpr auto OutfitLabel = 0x538; // UWBP_ItemInfoContainer_C*
		constexpr auto RadialSlot01 = 0x540; // UWBP_KSCosmeticItemDisplay_C*
		constexpr auto RadialSlot02 = 0x548; // UWBP_KSCosmeticItemDisplay_C*
		constexpr auto RadialSlot03 = 0x550; // UWBP_KSCosmeticItemDisplay_C*
		constexpr auto RadialSlot04 = 0x558; // UWBP_KSCosmeticItemDisplay_C*
		constexpr auto RadialSlot05 = 0x560; // UWBP_KSCosmeticItemDisplay_C*
		constexpr auto RadialSlot06 = 0x568; // UWBP_KSCosmeticItemDisplay_C*
		constexpr auto RadialSlot07 = 0x570; // UWBP_KSCosmeticItemDisplay_C*
		constexpr auto RadialSlot08 = 0x578; // UWBP_KSCosmeticItemDisplay_C*
		constexpr auto WBP_RoguePanelHeader = 0x580; // UWBP_RoguePanelHeader_C*
		constexpr auto WingSuit = 0x588; // UWBP_KSCosmeticItemDisplay_C*
		constexpr auto WingsuitLabel = 0x590; // UWBP_ItemInfoContainer_C*
		constexpr auto MercManager = 0x598; // UKSMercManager*
		constexpr auto GotoCustomizationScreen = 0x5a0; // FMulticastInlineDelegate
		constexpr auto JobItem = 0x5b0; // UKSJobItem*
		constexpr auto CosmeticSlots = 0x5b8; // TArray<UWBP_KSCosmeticItemDisplay_C*>
		constexpr auto MyFocusGroup = 0x5c8; // int32_t
		constexpr auto CosmeticLabels = 0x5d0; // TArray<UWBP_ItemInfoContainer_C*>
	}

	namespace n_AKSWeapon_GrenadeThrow {
		constexpr auto OnGrenadeThrown = 0x820; // FMulticastInlineDelegate
	}

	namespace n_UParticleModuleVelocity_Seeded {
		constexpr auto RandomSeedInfo = 0xb0; // FParticleRandomSeedInfo
	}

	namespace n_UParticleModuleVectorFieldScaleOverLife {
		constexpr auto VectorFieldScaleOverLife = 0x30; // UDistributionFloat*
		constexpr auto VectorFieldScaleOverLifeRaw = 0x38; // FRawDistributionFloat
	}

	namespace n_UKSBTD_IsGameMode {
		constexpr auto GameModeClass = 0x68; // AGameModeBase*
	}

	namespace n_UParticleModuleVelocityOverLifetime {
		constexpr auto VelOverLife = 0x38; // FRawDistributionVector
		constexpr auto Absolute = 0x80; // char : 1
	}

	namespace n_UKSActivityComponent_Contract {
		constexpr auto TimedContractTag = 0x30; // FGameplayTag
		constexpr auto AllowRerolls = 0x38; // bool
		constexpr auto RerollTrackerItemId = 0x3c; // int32_t
	}

	namespace n_UClothingAssetCommon {
		constexpr auto PhysicsAsset = 0x48; // UPhysicsAsset*
		constexpr auto ClothConfigs = 0x50; // TMap<FName, UClothConfigBase*>
		constexpr auto ClothSharedSimConfig = 0xa0; // UClothConfigBase*
		constexpr auto ClothSimConfig = 0xa8; // UClothConfigBase*
		constexpr auto ChaosClothSimConfig = 0xb0; // UClothConfigBase*
		constexpr auto ClothLODData = 0xb8; // TArray<UClothLODDataCommon_Legacy*>
		constexpr auto LODData = 0xc8; // TArray<FClothLODDataCommon>
		constexpr auto LodMap = 0xd8; // TArray<int32_t>
		constexpr auto UsedBoneNames = 0xe8; // TArray<FName>
		constexpr auto UsedBoneIndices = 0xf8; // TArray<int32_t>
		constexpr auto ReferenceBoneIndex = 0x108; // int32_t
		constexpr auto CustomData = 0x110; // UClothingAssetCustomData*
		constexpr auto ClothConfig = 0x118; // FClothConfig_Legacy
	}

	namespace n_AKSTeamCinematicSequenceManager {
		constexpr auto SequenceList = 0x248; // TMap<int32_t, ULevelSequence*>
		constexpr auto DefaultLevelSequence = 0x298; // ULevelSequence*
	}

	namespace n_AKSDropShipExitZone {
		constexpr auto YawDirection = 0x220; // float
	}

	namespace n_UKSGameViewportClient {
		constexpr auto FadeTexture = 0x378; // UTexture2D*
	}

	namespace n_ANiagaraPreviewGrid {
		constexpr auto System = 0x220; // UNiagaraSystem*
		constexpr auto ResetMode = 0x228; // ENiagaraPreviewGridResetMode
		constexpr auto PreviewAxisX = 0x230; // UNiagaraPreviewAxis*
		constexpr auto PreviewAxisY = 0x238; // UNiagaraPreviewAxis*
		constexpr auto PreviewClass = 0x240; // ANiagaraPreviewBase*
		constexpr auto SpacingX = 0x248; // float
		constexpr auto SpacingY = 0x24c; // float
		constexpr auto NumX = 0x250; // int32_t
		constexpr auto NumY = 0x254; // int32_t
		constexpr auto PreviewComponents = 0x258; // TArray<UChildActorComponent*>
	}

	namespace n_UGameplayTask {
		constexpr auto InstanceName = 0x30; // FName
		constexpr auto ResourceOverlapPolicy = 0x3a; // ETaskResourceOverlapPolicy
		constexpr auto ChildTask = 0x60; // UGameplayTask*
	}

	namespace n_UCharacterMovementComponent {
		constexpr auto CharacterOwner = 0x148; // ACharacter*
		constexpr auto GravityScale = 0x150; // float
		constexpr auto MaxStepHeight = 0x154; // float
		constexpr auto JumpZVelocity = 0x158; // float
		constexpr auto JumpOffJumpZFactor = 0x15c; // float
		constexpr auto WalkableFloorAngle = 0x160; // float
		constexpr auto WalkableFloorZ = 0x164; // float
		constexpr auto MovementMode = 0x168; // EMovementMode
		constexpr auto CustomMovementMode = 0x169; // char
		constexpr auto NetworkSmoothingMode = 0x16a; // ENetworkSmoothingMode
		constexpr auto GroundFriction = 0x16c; // float
		constexpr auto MaxWalkSpeed = 0x18c; // float
		constexpr auto MaxWalkSpeedCrouched = 0x190; // float
		constexpr auto MaxSwimSpeed = 0x194; // float
		constexpr auto MaxFlySpeed = 0x198; // float
		constexpr auto MaxCustomMovementSpeed = 0x19c; // float
		constexpr auto MaxAcceleration = 0x1a0; // float
		constexpr auto MinAnalogWalkSpeed = 0x1a4; // float
		constexpr auto BrakingFrictionFactor = 0x1a8; // float
		constexpr auto BrakingFriction = 0x1ac; // float
		constexpr auto BrakingSubStepTime = 0x1b0; // float
		constexpr auto BrakingDecelerationWalking = 0x1b4; // float
		constexpr auto BrakingDecelerationFalling = 0x1b8; // float
		constexpr auto BrakingDecelerationSwimming = 0x1bc; // float
		constexpr auto BrakingDecelerationFlying = 0x1c0; // float
		constexpr auto AirControl = 0x1c4; // float
		constexpr auto AirControlBoostMultiplier = 0x1c8; // float
		constexpr auto AirControlBoostVelocityThreshold = 0x1cc; // float
		constexpr auto FallingLateralFriction = 0x1d0; // float
		constexpr auto CrouchedHalfHeight = 0x1d4; // float
		constexpr auto Buoyancy = 0x1d8; // float
		constexpr auto PerchRadiusThreshold = 0x1dc; // float
		constexpr auto PerchAdditionalHeight = 0x1e0; // float
		constexpr auto RotationRate = 0x1e4; // FRotator
		constexpr auto bUseSeparateBrakingFriction = 0x1f0; // char : 1
		constexpr auto bApplyGravityWhileJumping = 0x1f0; // char : 1
		constexpr auto bUseControllerDesiredRotation = 0x1f0; // char : 1
		constexpr auto bOrientRotationToMovement = 0x1f0; // char : 1
		constexpr auto bSweepWhileNavWalking = 0x1f0; // char : 1
		constexpr auto bMovementInProgress = 0x1f0; // char : 1
		constexpr auto bEnableScopedMovementUpdates = 0x1f0; // char : 1
		constexpr auto bEnableServerDualMoveScopedMovementUpdates = 0x1f1; // char : 1
		constexpr auto bForceMaxAccel = 0x1f1; // char : 1
		constexpr auto bRunPhysicsWithNoController = 0x1f1; // char : 1
		constexpr auto bForceNextFloorCheck = 0x1f1; // char : 1
		constexpr auto bShrinkProxyCapsule = 0x1f1; // char : 1
		constexpr auto bCanWalkOffLedges = 0x1f1; // char : 1
		constexpr auto bCanWalkOffLedgesWhenCrouching = 0x1f1; // char : 1
		constexpr auto bNetworkSkipProxyPredictionOnNetUpdate = 0x1f2; // char : 1
		constexpr auto bNetworkAlwaysReplicateTransformUpdateTimestamp = 0x1f2; // char : 1
		constexpr auto bDeferUpdateMoveComponent = 0x1f2; // char : 1
		constexpr auto bPreventMeshDoubleMode = 0x1f2; // char : 1
		constexpr auto bEnablePhysicsInteraction = 0x1f2; // char : 1
		constexpr auto bTouchForceScaledToMass = 0x1f2; // char : 1
		constexpr auto bPushForceScaledToMass = 0x1f2; // char : 1
		constexpr auto bPushForceUsingZOffset = 0x1f3; // char : 1
		constexpr auto bScalePushForceToVelocity = 0x1f3; // char : 1
		constexpr auto DeferredUpdatedMoveComponent = 0x1f8; // USceneComponent*
		constexpr auto MaxOutOfWaterStepHeight = 0x200; // float
		constexpr auto OutofWaterZ = 0x204; // float
		constexpr auto Mass = 0x208; // float
		constexpr auto StandingDownwardForceScale = 0x20c; // float
		constexpr auto InitialPushForceFactor = 0x210; // float
		constexpr auto PushForceFactor = 0x214; // float
		constexpr auto PushForcePointZOffsetFactor = 0x218; // float
		constexpr auto TouchForceFactor = 0x21c; // float
		constexpr auto MinTouchForce = 0x220; // float
		constexpr auto MaxTouchForce = 0x224; // float
		constexpr auto RepulsionForce = 0x228; // float
		constexpr auto Acceleration = 0x22c; // FVector
		constexpr auto LastUpdateRotation = 0x240; // FQuat
		constexpr auto LastUpdateLocation = 0x250; // FVector
		constexpr auto LastUpdateVelocity = 0x25c; // FVector
		constexpr auto bHasQueuedServerMove = 0x268; // bool
		constexpr auto QueuedServerLocation = 0x26c; // FVector
		constexpr auto QueuedServerRotation = 0x280; // FQuat
		constexpr auto ParallelUpdateMoveMode = 0x298; // EMovementMode
		constexpr auto ParallelUpdateTransform = 0x2a0; // FTransform
		constexpr auto ServerLastTransformUpdateTimeStamp = 0x2d0; // float
		constexpr auto ServerLastClientGoodMoveAckTime = 0x2d4; // float
		constexpr auto ServerLastClientAdjustmentTime = 0x2d8; // float
		constexpr auto PendingImpulseToApply = 0x2dc; // FVector
		constexpr auto PendingForceToApply = 0x2e8; // FVector
		constexpr auto AnalogInputModifier = 0x2f4; // float
		constexpr auto MaxSimulationTimeStep = 0x304; // float
		constexpr auto MaxSimulationIterations = 0x308; // int32_t
		constexpr auto MaxJumpApexAttemptsPerSimulation = 0x30c; // int32_t
		constexpr auto MaxDepenetrationWithGeometry = 0x310; // float
		constexpr auto MaxDepenetrationWithGeometryAsProxy = 0x314; // float
		constexpr auto MaxDepenetrationWithPawn = 0x318; // float
		constexpr auto MaxDepenetrationWithPawnAsProxy = 0x31c; // float
		constexpr auto NetworkSimulatedSmoothLocationTime = 0x320; // float
		constexpr auto NetworkSimulatedSmoothRotationTime = 0x324; // float
		constexpr auto ListenServerNetworkSimulatedSmoothLocationTime = 0x328; // float
		constexpr auto ListenServerNetworkSimulatedSmoothRotationTime = 0x32c; // float
		constexpr auto NetProxyShrinkRadius = 0x330; // float
		constexpr auto NetProxyShrinkHalfHeight = 0x334; // float
		constexpr auto NetworkMaxSmoothUpdateDistance = 0x338; // float
		constexpr auto NetworkNoSmoothUpdateDistance = 0x33c; // float
		constexpr auto NetworkMinTimeBetweenClientAckGoodMoves = 0x340; // float
		constexpr auto NetworkMinTimeBetweenClientAdjustments = 0x344; // float
		constexpr auto NetworkMinTimeBetweenClientAdjustmentsLargeCorrection = 0x348; // float
		constexpr auto NetworkLargeClientCorrectionDistance = 0x34c; // float
		constexpr auto LedgeCheckThreshold = 0x350; // float
		constexpr auto JumpOutOfWaterPitch = 0x354; // float
		constexpr auto CurrentFloor = 0x358; // FFindFloorResult
		constexpr auto DefaultLandMovementMode = 0x3ec; // EMovementMode
		constexpr auto DefaultWaterMovementMode = 0x3ed; // EMovementMode
		constexpr auto GroundMovementMode = 0x3ee; // EMovementMode
		constexpr auto bMaintainHorizontalGroundVelocity = 0x3ef; // char : 1
		constexpr auto bImpartBaseVelocityX = 0x3ef; // char : 1
		constexpr auto bImpartBaseVelocityY = 0x3ef; // char : 1
		constexpr auto bImpartBaseVelocityZ = 0x3ef; // char : 1
		constexpr auto bImpartBaseAngularVelocity = 0x3ef; // char : 1
		constexpr auto bJustTeleported = 0x3ef; // char : 1
		constexpr auto bNetworkUpdateReceived = 0x3ef; // char : 1
		constexpr auto bNetworkMovementModeChanged = 0x3ef; // char : 1
		constexpr auto bIgnoreClientMovementErrorChecksAndCorrection = 0x3f0; // char : 1
		constexpr auto bServerAcceptClientAuthoritativePosition = 0x3f0; // char : 1
		constexpr auto bNotifyApex = 0x3f0; // char : 1
		constexpr auto bCheatFlying = 0x3f0; // char : 1
		constexpr auto bWantsToCrouch = 0x3f0; // char : 1
		constexpr auto bCrouchMaintainsBaseLocation = 0x3f0; // char : 1
		constexpr auto bIgnoreBaseRotation = 0x3f0; // char : 1
		constexpr auto bFastAttachedMove = 0x3f0; // char : 1
		constexpr auto bAlwaysCheckFloor = 0x3f1; // char : 1
		constexpr auto bUseFlatBaseForFloorChecks = 0x3f1; // char : 1
		constexpr auto bPerformingJumpOff = 0x3f1; // char : 1
		constexpr auto bWantsToLeaveNavWalking = 0x3f1; // char : 1
		constexpr auto bUseRVOAvoidance = 0x3f1; // char : 1
		constexpr auto bRequestedMoveUseAcceleration = 0x3f1; // char : 1
		constexpr auto bWasSimulatingRootMotion = 0x3f1; // char : 1
		constexpr auto bAllowPhysicsRotationDuringAnimRootMotion = 0x3f2; // char : 1
		constexpr auto bHasRequestedVelocity = 0x3f2; // char : 1
		constexpr auto bRequestedMoveWithMaxSpeed = 0x3f2; // char : 1
		constexpr auto bWasAvoidanceUpdated = 0x3f2; // char : 1
		constexpr auto bProjectNavMeshWalking = 0x3f2; // char : 1
		constexpr auto bProjectNavMeshOnBothWorldChannels = 0x3f2; // char : 1
		constexpr auto AvoidanceConsiderationRadius = 0x408; // float
		constexpr auto RequestedVelocity = 0x40c; // FVector
		constexpr auto AvoidanceUID = 0x418; // int32_t
		constexpr auto AvoidanceGroup = 0x41c; // FNavAvoidanceMask
		constexpr auto GroupsToAvoid = 0x420; // FNavAvoidanceMask
		constexpr auto GroupsToIgnore = 0x424; // FNavAvoidanceMask
		constexpr auto AvoidanceWeight = 0x428; // float
		constexpr auto PendingLaunchVelocity = 0x42c; // FVector
		constexpr auto NavMeshProjectionInterval = 0x4d8; // float
		constexpr auto NavMeshProjectionTimer = 0x4dc; // float
		constexpr auto NavMeshProjectionInterpSpeed = 0x4e0; // float
		constexpr auto NavMeshProjectionHeightScaleUp = 0x4e4; // float
		constexpr auto NavMeshProjectionHeightScaleDown = 0x4e8; // float
		constexpr auto NavWalkingFloorDistTolerance = 0x4ec; // float
		constexpr auto PostPhysicsTickFunction = 0x4f0; // FCharacterMovementComponentPostPhysicsTickFunction
		constexpr auto MinTimeBetweenTimeStampResets = 0x538; // float
		constexpr auto CurrentRootMotion = 0x540; // FRootMotionSourceGroup
		constexpr auto RootMotionParams = 0x610; // FRootMotionMovementParams
		constexpr auto AnimRootMotionVelocity = 0x650; // FVector
	}

	namespace n_UDynamicEntryBox {
		constexpr auto EntryWidgetClass = 0x1d0; // UUserWidget*
	}

	namespace n_UWBP_StoreRotatorTick_C {
		constexpr auto TickMark = 0x520; // UBorder*
	}

	namespace n_UWBP_RogueStatsScreen_C {
		constexpr auto UberGraphFrame = 0x540; // FPointerToUberGraphFrame
		constexpr auto OnShow = 0x548; // UWidgetAnimation*
		constexpr auto KSScrollBox_97 = 0x550; // UKSScrollBox*
		constexpr auto PnlStatEntries = 0x558; // UKSSortableVerticalBox*
		constexpr auto PnlStatTabs = 0x560; // UVerticalBox*
		constexpr auto SclStatsEntries = 0x568; // UScrollBox*
		constexpr auto StatIcon = 0x570; // UWBP_AsyncIcon_C*
		constexpr auto StatName = 0x578; // UTextBlock*
		constexpr auto StatValue = 0x580; // UTextBlock*
		constexpr auto PooledStatEntries = 0x588; // TArray<UWBP_RogueStatsScreen_RogueEntry_C*>
		constexpr auto ActiveStatEntries = 0x598; // TArray<UWBP_RogueStatsScreen_RogueEntry_C*>
		constexpr auto TabWidgets = 0x5a8; // TArray<UWBP_RogueStatsScreen_TabEntry_C*>
		constexpr auto ScrollSpeed = 0x5b8; // float
		constexpr auto CurrentPlayerStat = 0x5c0; // UKSStatWrapper*
		constexpr auto CurrentRogueStat = 0x5c8; // UKSStatWrapper*
	}

	namespace n_UAxisPositionGizmo {
		constexpr auto AxisSource = 0x48; // TScriptInterface<IGizmoAxisSource>
		constexpr auto ParameterSource = 0x58; // TScriptInterface<IGizmoFloatParameterSource>
		constexpr auto HitTarget = 0x68; // TScriptInterface<IGizmoClickTarget>
		constexpr auto StateTarget = 0x78; // TScriptInterface<IGizmoStateTarget>
		constexpr auto bEnableSignedAxis = 0x88; // bool
		constexpr auto bInInteraction = 0x89; // bool
		constexpr auto InteractionOrigin = 0x8c; // FVector
		constexpr auto InteractionAxis = 0x98; // FVector
		constexpr auto InteractionStartPoint = 0xa4; // FVector
		constexpr auto InteractionCurPoint = 0xb0; // FVector
		constexpr auto InteractionStartParameter = 0xbc; // float
		constexpr auto InteractionCurParameter = 0xc0; // float
		constexpr auto ParameterSign = 0xc4; // float
	}

	namespace n_USphereComponent {
		constexpr auto SphereRadius = 0x448; // float
	}

	namespace n_AKSCinematicSequenceManager {
		constexpr auto SequenceActor = 0x220; // ALevelSequenceActor*
		constexpr auto Sequence = 0x228; // ULevelSequence*
		constexpr auto CinematicCharacterHandles = 0x230; // TArray<AKSCinematicCharacterManager*>
		constexpr auto CinematicCharacterClass = 0x240; // AKSLobbyCharacter*
	}

	namespace n_UKSDropRuleComponent {
		constexpr auto WeaponSlotsToDropOnDeath = 0xb0; // FGameplayTagContainer
		constexpr auto RandomDeathDropList = 0xd0; // TArray<FKSRandomDropEntry>
		constexpr auto WeaponSlotsToDropOnDowned = 0xe0; // FGameplayTagContainer
		constexpr auto RandomDownDropList = 0x100; // TArray<FKSRandomDropEntry>
		constexpr auto PlayerDropLifetime = 0x110; // float
		constexpr auto RequiredAmmoPercent = 0x114; // float
	}

	namespace n_AKSGameMode {
		constexpr auto PlayerReadyTimeoutTime = 0x538; // float
		constexpr auto KSPlayerJoinRuleComponentClass = 0x540; // UKSPlayerJoinRuleComponent*
		constexpr auto KSPlayerJoinRuleComponent = 0x548; // UKSPlayerJoinRuleComponent*
		constexpr auto ChargeRuleComponent = 0x550; // UKSChargeRuleComponent*
		constexpr auto BackfillRuleComponent = 0x558; // UKSBackfillRuleComponent*
		constexpr auto bCachedShouldPlayersStartSpectatingDefaultCamera = 0x568; // bool
		constexpr auto RespawnConfiguration = 0x570; // FKSRespawnConfig
		constexpr auto OnPhaseChangeDel = 0x588; // FMulticastInlineDelegate
		constexpr auto OnPhaseTimerExpired = 0x598; // FMulticastInlineDelegate
		constexpr auto MatchPhase = 0x5b8; // FMatchPhase
		constexpr auto bUseMatchTimer = 0x5cc; // bool
		constexpr auto MatchSetupTime = 0x5d0; // float
		constexpr auto bUseSelectionPhase = 0x5d4; // bool
		constexpr auto PreSelectionPhaseTime = 0x5d8; // float
		constexpr auto SelectionPhaseTime = 0x5dc; // float
		constexpr auto PostSelectionPhaseTime = 0x5e0; // float
		constexpr auto PostSelectionPhaseMinTime = 0x5e4; // float
		constexpr auto bSkipPostSelectionCinematic = 0x5e8; // bool
		constexpr auto PostSelectionCinematicPhaseTime = 0x5ec; // float
		constexpr auto bUsePostMatchMVPLineup = 0x5f0; // bool
		constexpr auto TimeBeforeMVPLineupCinematicBegins = 0x5f4; // float
		constexpr auto PostMatchMVPLineupPhaseTime = 0x5f8; // float
		constexpr auto MatchDefaultPhaseTime = 0x5fc; // float
		constexpr auto MatchTimerUpdatePeriod = 0x630; // float
		constexpr auto KSSpawnSelectorComponentClass = 0x648; // UKSSpawnSelectorComponent*
		constexpr auto KSSpawnSelectorComponentSoftClass = 0x650; // TSoftClassPtr<UObject>
		constexpr auto KSSpawnSelectorComponent = 0x678; // UKSSpawnSelectorComponent*
		constexpr auto bAllowFindInactivePlayer = 0x680; // bool
		constexpr auto bUseLoginStartSpotForPawn = 0x681; // bool
		constexpr auto bAIPlayersUseLoginStartSpotForPawn = 0x682; // bool
		constexpr auto DefaultTeamCount = 0x6b8; // int32_t
		constexpr auto TeamAssignmentType = 0x6bc; // EKSTeamAssignmentType
		constexpr auto bFirstDebugPlayerIsOnlySpectator = 0x6bd; // bool
		constexpr auto RevealManager = 0x730; // AKSRevealManager*
		constexpr auto RevealManagerClass = 0x738; // AKSRevealManager*
		constexpr auto MatchStatsFinalizedDelegate = 0x750; // FMulticastInlineDelegate
		constexpr auto MatchStartTime = 0x778; // float
		constexpr auto MatchEndTime = 0x77c; // float
		constexpr auto bIsTutorial = 0x780; // bool
		constexpr auto bIsPractice = 0x781; // bool
		constexpr auto bIsAiPvpMode = 0x782; // bool
		constexpr auto bIsPlayerSpectateOnlyMode = 0x783; // bool
		constexpr auto DefaultMinimapWidth = 0x784; // float
		constexpr auto DefaultTeamState = 0x788; // AKSTeamState*
		constexpr auto ReverseFriendlyFireStartThreshold = 0x790; // float
		constexpr auto FriendlyFireModiferBase = 0x794; // float
		constexpr auto ReverseFriendlyFireModiferBase = 0x798; // float
		constexpr auto bCanDownPlayers = 0x79c; // bool
		constexpr auto bCanDownBots = 0x79d; // bool
		constexpr auto bCreditInstantKillWithDown = 0x79e; // bool
		constexpr auto bCreditSuicideWithDown = 0x79f; // bool
		constexpr auto bImmediateDeathForLastManStanding = 0x7a0; // bool
		constexpr auto bEliminatePlayerOnDeath = 0x7a1; // bool
		constexpr auto bPivotToKillerOnDeath = 0x7a2; // bool
		constexpr auto bTrackKillerOnDeath = 0x7a3; // bool
		constexpr auto bRevealKillerOnDeath = 0x7a4; // bool
		constexpr auto bShouldRandomizeSides = 0x7a5; // bool
		constexpr auto bStartJobSelectionOnSideSwap = 0x7a6; // bool
		constexpr auto ShotListener = 0x7a8; // AKSGlobalShotListener*
		constexpr auto OnTeamSidesFlipped = 0x7b8; // FMulticastInlineDelegate
		constexpr auto bClearObjectivesMarkedUsedOnSidesFlipped = 0x7c8; // bool
		constexpr auto Winner = 0x7d0; // AActor*
		constexpr auto CheatWinner = 0x7d8; // AActor*
		constexpr auto DefaultRewardsCalculatorClass = 0x7e0; // UKSRewardsCalculator*
		constexpr auto bIncludeInitialInventoryFromDefaultPawnInStartingInventory = 0x7e8; // bool
		constexpr auto StartingInventory = 0x7f0; // TArray<UKSItem*>
		constexpr auto bGiveStartingInventoryToBots = 0x800; // bool
		constexpr auto PlayerSpawnInventory = 0x808; // TArray<UKSItem*>
		constexpr auto PlayerInitialSpawnInventory = 0x818; // TArray<UKSItem*>
		constexpr auto PlayerRespawnInventory = 0x828; // TArray<UKSItem*>
		constexpr auto PlayerSpawnMods = 0x838; // TArray<UKSPlayerMod*>
		constexpr auto PlayerInitialSpawnMods = 0x848; // TArray<UKSPlayerMod*>
		constexpr auto PlayerRespawnMods = 0x858; // TArray<UKSPlayerMod*>
		constexpr auto FreefallMod = 0x868; // UKSPlayerMod*
		constexpr auto bIsBotMatch = 0x8a0; // bool
		constexpr auto StartingCash = 0x8a4; // int32_t
		constexpr auto OnSpecialtyItemVendorLoaded = 0x8a8; // FMulticastInlineDelegate
		constexpr auto bUsePlayerLoadouts = 0x8bc; // bool
		constexpr auto bDisableLoadoutValidation = 0x8bd; // bool
		constexpr auto WaitForPlayersTimeout = 0xb08; // float
		constexpr auto LoadingLoot = 0xb20; // TMap<TSoftObjectPtr<UKSWeaponAsset>, int32_t>
		constexpr auto bPopulateLootSites = 0xb70; // bool
		constexpr auto LootGroupGuarantees = 0xb78; // TMap<ELootSiteRarity, FKSLootGroupGuaranteeMap>
		constexpr auto bSpawnLootOnMatchStart = 0xbc8; // bool
		constexpr auto LootRaritySwaps = 0xc20; // TArray<FKSLootRaritySwapInfo>
		constexpr auto LootRespawnMode = 0xc30; // EKSLootRespawnMode
		constexpr auto LootSiteRespawnPeriods = 0xc38; // TMap<ELootSiteRarity, float>
		constexpr auto AIActorCollection = 0xcd8; // UKSAIActorCollection*
		constexpr auto bRecordKillCam = 0xce0; // bool
		constexpr auto AFKIdleTime = 0xce4; // float
		constexpr auto AccoladeTrackerDataTable = 0xd20; // UDataTable*
		constexpr auto AccoladeTrackerInstances = 0xd28; // TArray<UKSAccoladeTracker*>
		constexpr auto AccoladeTrackerClasses = 0xd38; // TArray<UKSAccoladeTracker*>
		constexpr auto GameModeHUDSettings = 0xd48; // FKSGameHUDSettings
		constexpr auto InteractiveObjectCache = 0xd60; // TArray<TSoftObjectPtr<AActor>>
		constexpr auto OutOfBoundsManagerClass = 0xd70; // UKSOutOfBoundsManager*
		constexpr auto MatchDataRecorder = 0xd78; // UKSMatchDataRecorder*
		constexpr auto ShouldForceCompetitiveLogic = 0xd88; // bool
		constexpr auto PerSecondChargeMode = 0xd89; // EKSPerSecondChargeMode
		constexpr auto PerSecondChargePercent = 0xd8c; // float
		constexpr auto GameRules = 0xd90; // TArray<UKSGameRuleComponent*>
		constexpr auto EditorPropertyMap = 0xda0; // TMap<FName, FString>
		constexpr auto FriendlyAudioName = 0xe40; // FString
		constexpr auto KSAnnouncerClass = 0xe50; // AKSAnnouncer*
		constexpr auto BurnTestNumberOfRoundToWin = 0xe58; // int32_t
		constexpr auto OnCharacterControlTransferred = 0xe70; // FMulticastInlineDelegate
		constexpr auto bUseLegacyJobSelectionTech = 0xe80; // bool
		constexpr auto bAllowPlayersToUseUnownedJobs = 0xe81; // bool
		constexpr auto AllowedUnownedJobIds = 0xe88; // TArray<int32_t>
		constexpr auto EnforcedJobUniqueness = 0xe98; // EJobUniquenessRule
		constexpr auto bUseJobSelectionByDraft = 0xe99; // bool
		constexpr auto bSkipDraftMidMatch = 0xe9a; // bool
		constexpr auto bDraftAlternateTeams = 0xe9b; // bool
		constexpr auto DraftNumPlayersSelecting = 0xe9c; // int32_t
		constexpr auto DraftFirstSelectionNumOverride = 0xea0; // int32_t
		constexpr auto DraftPostSelectionPhaseTime = 0xea4; // float
		constexpr auto bDraftIncludesBans = 0xea8; // bool
		constexpr auto bDraftBanAlternateTeams = 0xea9; // bool
		constexpr auto DraftBanNumPlayersBanning = 0xeac; // int32_t
		constexpr auto DraftBanTurns = 0xeb0; // TArray<int32_t>
		constexpr auto JobSelectionRules = 0xec0; // UKSJobSelectionRules*
		constexpr auto JobSelectionAuthority = 0xec8; // AKSJobSelectionAuthority*
		constexpr auto CurrentDraftTurnNum = 0xed0; // int32_t
		constexpr auto CurrentTeamNumSelecting = 0xed4; // int32_t
		constexpr auto bCurrentlyBanning = 0xed8; // bool
		constexpr auto bWasBanning = 0xed9; // bool
		constexpr auto LastTeamNumToBan = 0xedc; // int32_t
		constexpr auto bHasEverCompletedJobSelection = 0xee0; // bool
		constexpr auto bFubarIfNoVendorsByMatchStart = 0xee1; // bool
		constexpr auto bOnlyFubarIfNoJobVendor = 0xee2; // bool
		constexpr auto bFubarIfAbsentPlayers = 0xee3; // bool
		constexpr auto BotNamingMethod = 0xee6; // EKSBotNameGeneration
		constexpr auto bUseIntraScoring = 0xef0; // bool
		constexpr auto GameModeDisplayName = 0xef8; // FText
		constexpr auto EmoteMusicManagerClass = 0xf10; // AKSEmoteMusicManager*
		constexpr auto bRequireJobToEnterPlay = 0xf18; // bool
		constexpr auto CinematicDataContainer = 0xf20; // UKSCinematicDataContainer*
		constexpr auto MVPDeterminant = 0xf28; // UKSMVPDeterminant*
		constexpr auto SeamlessTravelInfo = 0xf30; // UKSSeamlessTravelTransferInfo*
		constexpr auto SeamlessTravelSettings = 0xf38; // FKSSeamlessTravelSettings
		constexpr auto GameModeTags = 0xf50; // TArray<FGameplayTag>
		constexpr auto NumericId = 0xf60; // int32_t
		constexpr auto bAbandonPlayersOnLogOut = 0xf64; // bool
		constexpr auto bGlobalDisableAIBackfill = 0xf65; // bool
		constexpr auto bAllowAIBackfill = 0xf66; // bool
		constexpr auto BackfillBotDefinition = 0xf68; // UKSBotDefinition*
		constexpr auto NextPawnId = 0xf80; // char
	}

	namespace n_UWBP_WeaponCategoryButton_Horizontal_C {
		constexpr auto UberGraphFrame = 0x558; // FPointerToUberGraphFrame
		constexpr auto Anim_OnHover = 0x560; // UWidgetAnimation*
		constexpr auto BG = 0x568; // UImage*
		constexpr auto CategoryIcon = 0x570; // UWBP_AsyncIcon_C*
		constexpr auto CategoryNameText = 0x578; // UTextBlock*
		constexpr auto ClassMasteryBadge = 0x580; // UWBP_WeaponCategoryMasteryBadge_C*
		constexpr auto HitTarget = 0x588; // UButton*
		constexpr auto Image_126 = 0x590; // UImage*
		constexpr auto MasteredLabel = 0x598; // UTextBlock*
		constexpr auto ProgressFill = 0x5a0; // UImage*
		constexpr auto ProgressFill_BG = 0x5a8; // UImage*
		constexpr auto ProgressMask = 0x5b0; // USizeBox*
		constexpr auto ProgressText = 0x5b8; // UTextBlock*
		constexpr auto SimpleHoverFrame = 0x5c0; // UImage*
		constexpr auto Stroke = 0x5c8; // UImage*
		constexpr auto HoverWEPCategoryButtonSFX = 0x5d0; // UAkAudioEvent*
		constexpr auto ClickWEPCategoryButtonSFX = 0x5d8; // UAkAudioEvent*
		constexpr auto GamePad_WEPCategoryButtonSFX = 0x5e0; // UAkAudioEvent*
	}

	namespace n_AKSRevealManager {
		constexpr auto OnServerRevealAdded = 0x220; // FMulticastInlineDelegate
		constexpr auto FriendlyColor = 0x230; // FLinearColor
		constexpr auto EnemyColor = 0x240; // FLinearColor
		constexpr auto NeutralColor = 0x250; // FLinearColor
		constexpr auto FriendlyObjectiveColor = 0x260; // FLinearColor
		constexpr auto EnemyObjectiveColor = 0x270; // FLinearColor
		constexpr auto NeutralObjectiveColor = 0x280; // FLinearColor
		constexpr auto GameStateRef = 0x290; // AKSGameState*
		constexpr auto ActiveRevealInfoContainer = 0x298; // FKSRevealInfoSerializerContainer
		constexpr auto LocalActiveRevealInfos = 0x3b8; // TArray<FKSRevealInfo>
	}

	namespace n_UKSModInst_DirectTargetWeapon {
		constexpr auto TargetedWeapon = 0x510; // TWeakObjectPtr<AKSWeapon_DirectTarget>
		constexpr auto OnTargetAcquired = 0x518; // FMulticastInlineDelegate
	}

	namespace n_UMoviePlayerSettings {
		constexpr auto bWaitForMoviesToComplete = 0x28; // bool
		constexpr auto bMoviesAreSkippable = 0x29; // bool
		constexpr auto StartupMovies = 0x30; // TArray<FString>
	}

	namespace n_UMaterialExpressionSetMaterialAttributes {
		constexpr auto Inputs = 0x40; // TArray<FExpressionInput>
		constexpr auto AttributeSetTypes = 0x50; // TArray<FGuid>
	}

	namespace n_URig {
		constexpr auto TransformBases = 0x30; // TArray<FTransformBase>
		constexpr auto Nodes = 0x40; // TArray<FNode>
	}

	namespace n_ASpectatorBeaconClient {
		constexpr auto DestSessionId = 0x2e0; // FString
		constexpr auto PendingReservation = 0x2f0; // FSpectatorReservation
		constexpr auto RequestType = 0x368; // ESpectatorClientRequestType
		constexpr auto bPendingReservationSent = 0x369; // bool
		constexpr auto bCancelReservation = 0x36a; // bool
	}

	namespace n_UInputComponent {
		constexpr auto CachedKeyToActionInfo = 0x120; // TArray<FCachedKeyToActionInfo>
	}

	namespace n_UInterpTrackInstVisibility {
		constexpr auto Action = 0x28; // EVisibilityTrackAction
		constexpr auto LastUpdatePosition = 0x2c; // float
	}

	namespace n_UWBP_PlayerContextMenuOption_C {
		constexpr auto UberGraphFrame = 0x528; // FPointerToUberGraphFrame
		constexpr auto Hover = 0x530; // UWidgetAnimation*
		constexpr auto GamepadPromptWrapper = 0x538; // USizeBox*
		constexpr auto OptionText = 0x540; // UTextBlock*
		constexpr auto SelectGamepadIcon = 0x548; // UImage*
		constexpr auto WBP_ButtonStacked = 0x550; // UWBP_ButtonStacked_C*
		constexpr auto OnContextOptionSelected = 0x558; // FMulticastInlineDelegate
		constexpr auto IsActiveInMenu = 0x568; // bool
		constexpr auto Current Input State = 0x569; // PGAME_INPUT_STATE
		constexpr auto Is Hovered = 0x56a; // bool
	}

	namespace n_UInterpFilter {
		constexpr auto Caption = 0x28; // FString
	}

	namespace n_UKSActivityRewardCondition_Deserter {
		constexpr auto bAllowProgressionIfDeserter = 0x30; // bool
		constexpr auto bAllowRegressionIfDeserter = 0x31; // bool
	}

	namespace n_AKSEmoteTestManager {
		constexpr auto SkinAssetQueryComponent = 0x220; // UKSAssetQueryHelperComponent*
		constexpr auto EmoteAssetQueryComponent = 0x228; // UKSAssetQueryHelperComponent*
		constexpr auto bStartOnBeginPlay = 0x230; // bool
		constexpr auto bAutoDisableTick = 0x231; // bool
		constexpr auto DefaultEmote = 0x238; // UKSEmote*
		constexpr auto RequestedSkinBundles = 0x240; // TArray<UKSSkinBundle*>
		constexpr auto bRequestedSkinsOnly = 0x250; // bool
		constexpr auto BotFactories = 0x258; // TArray<AKSBotFactory*>
		constexpr auto SkinArrayIdx = 0x268; // int32_t
		constexpr auto EmoteArrayIdx = 0x26c; // int32_t
		constexpr auto EmoteInstances = 0x270; // TArray<AKSEmoteInstance*>
		constexpr auto bEmotesNeedPlay = 0x280; // bool
	}

	namespace n_UNavLinkCustomComponent {
		constexpr auto NavLinkUserId = 0xe8; // uint32_t
		constexpr auto EnabledAreaClass = 0xf0; // UNavArea*
		constexpr auto DisabledAreaClass = 0xf8; // UNavArea*
		constexpr auto SupportedAgents = 0x100; // FNavAgentSelector
		constexpr auto LinkRelativeStart = 0x104; // FVector
		constexpr auto LinkRelativeEnd = 0x110; // FVector
		constexpr auto LinkDirection = 0x11c; // ENavLinkDirection
		constexpr auto bLinkEnabled = 0x120; // char : 1
		constexpr auto bNotifyWhenEnabled = 0x120; // char : 1
		constexpr auto bNotifyWhenDisabled = 0x120; // char : 1
		constexpr auto bCreateBoxObstacle = 0x120; // char : 1
		constexpr auto ObstacleOffset = 0x124; // FVector
		constexpr auto ObstacleExtent = 0x130; // FVector
		constexpr auto ObstacleAreaClass = 0x140; // UNavArea*
		constexpr auto BroadcastRadius = 0x148; // float
		constexpr auto BroadcastInterval = 0x14c; // float
		constexpr auto BroadcastChannel = 0x150; // ECollisionChannel
	}

	namespace n_UPUMG_FriendDataFactory {
		constexpr auto OnFriendDataUpdated = 0x38; // FMulticastInlineDelegate
		constexpr auto OnFriendAddSuccess = 0x48; // FMulticastInlineDelegate
		constexpr auto OnFriendAddError = 0x58; // FMulticastInlineDelegate
		constexpr auto FriendInviteReceived = 0x68; // FMulticastInlineDelegate
		constexpr auto OnFriendAdded = 0x78; // FMulticastInlineDelegate
		constexpr auto OnFriendRejected = 0x88; // FMulticastInlineDelegate
		constexpr auto OnlineFriends = 0x98; // int32_t
		constexpr auto TotalFriends = 0x9c; // int32_t
		constexpr auto CachedFriends = 0xa0; // TArray<FPUMG_FriendData>
		constexpr auto CachedPendingFriends = 0xb0; // TArray<FPUMG_FriendData>
		constexpr auto CachedFriendRequests = 0xc0; // TArray<FPUMG_FriendData>
		constexpr auto FriendsListUpdatePollInterval = 0x100; // float
		constexpr auto FriendsListUpdatePollingTimerHandle = 0x108; // FTimerHandle
		constexpr auto IsFriendsListUpdatePollingEnabled = 0x110; // bool
	}

	namespace n_UTracerStaticMeshComponent {
		constexpr auto start = 0x4f0; // FVector
		constexpr auto end = 0x4fc; // FVector
		constexpr auto TravelSpeed = 0x508; // float
		constexpr auto bDestroyOnDestinationReached = 0x50c; // bool
		constexpr auto bEnableTravel = 0x50d; // bool
		constexpr auto OnTracerParticleReachedDestiniationDel = 0x510; // FMulticastInlineDelegate
	}

	namespace n_UWBP_SettingsPreview_ShotgunReticleSize_C {
		constexpr auto UberGraphFrame = 0x538; // FPointerToUberGraphFrame
		constexpr auto Image_42 = 0x540; // UImage*
		constexpr auto Image_305 = 0x548; // UImage*
		constexpr auto ShotgunReticle_2 = 0x550; // UShotgunReticle_C*
		constexpr auto SettingsDataFactory = 0x558; // UKSSettingsDataFactory*
	}

	namespace n_UEnvQueryTest {
		constexpr auto TestOrder = 0x30; // int32_t
		constexpr auto TestPurpose = 0x34; // EEnvTestPurpose
		constexpr auto TestComment = 0x38; // FString
		constexpr auto MultipleContextFilterOp = 0x48; // EEnvTestFilterOperator
		constexpr auto MultipleContextScoreOp = 0x49; // EEnvTestScoreOperator
		constexpr auto FilterType = 0x4a; // EEnvTestFilterType
		constexpr auto BoolValue = 0x50; // FAIDataProviderBoolValue
		constexpr auto FloatValueMin = 0x88; // FAIDataProviderFloatValue
		constexpr auto FloatValueMax = 0xc0; // FAIDataProviderFloatValue
		constexpr auto ScoringEquation = 0xf9; // EEnvTestScoreEquation
		constexpr auto ClampMinType = 0xfa; // EEnvQueryTestClamping
		constexpr auto ClampMaxType = 0xfb; // EEnvQueryTestClamping
		constexpr auto NormalizationType = 0xfc; // EEQSNormalizationType
		constexpr auto ScoreClampMin = 0x100; // FAIDataProviderFloatValue
		constexpr auto ScoreClampMax = 0x138; // FAIDataProviderFloatValue
		constexpr auto ScoringFactor = 0x170; // FAIDataProviderFloatValue
		constexpr auto ReferenceValue = 0x1a8; // FAIDataProviderFloatValue
		constexpr auto bDefineReferenceValue = 0x1e0; // bool
		constexpr auto bWorkOnFloatValues = 0x1f0; // char : 1
	}

	namespace n_UDatasmithActorTemplate {
		constexpr auto Layers = 0x30; // TSet<FName>
		constexpr auto Tags = 0x80; // TSet<FName>
	}

	namespace n_UMaterialExpressionRotator {
		constexpr auto Coordinate = 0x40; // FExpressionInput
		constexpr auto Time = 0x54; // FExpressionInput
		constexpr auto CenterX = 0x68; // float
		constexpr auto CenterY = 0x6c; // float
		constexpr auto Speed = 0x70; // float
		constexpr auto ConstCoordinate = 0x74; // uint32_t
	}

	namespace n_UMagicLeapARPinSaveGame {
		constexpr auto PinnedID = 0x28; // FGuid
		constexpr auto ComponentWorldTransform = 0x40; // FTransform
		constexpr auto PinTransform = 0x70; // FTransform
	}

	namespace n_UKSActivityComponent_Achievement {
		constexpr auto AchievementIdByOSSName = 0x30; // TMap<FName, FString>
	}

	namespace n_UTextureRenderTargetCube {
		constexpr auto SizeX = 0xc0; // int32_t
		constexpr auto ClearColor = 0xc4; // FLinearColor
		constexpr auto OverrideFormat = 0xd4; // EPixelFormat
		constexpr auto bHDR = 0xd5; // char : 1
		constexpr auto bForceLinearGamma = 0xd5; // char : 1
	}

	namespace n_UDialogueVoice {
		constexpr auto Gender = 0x28; // EGrammaticalGender
		constexpr auto Plurality = 0x29; // EGrammaticalNumber
		constexpr auto LocalizationGUID = 0x2c; // FGuid
	}

	namespace n_UKSAnimNotifyState_WeaponProp {
		constexpr auto WeaponAsset = 0x30; // FSoftObjectPath
		constexpr auto AnimClassRowNameOverride = 0x48; // FName
		constexpr auto ActivationMontage = 0x50; // UAnimMontage*
		constexpr auto PropIdentifier = 0x58; // FName
		constexpr auto ExtendedLifetime = 0x60; // float
		constexpr auto bSkipExtendedLifetime = 0x64; // bool
		constexpr auto PropAttachmentInfo = 0x68; // FPoolAttachmentInfo
	}

	namespace n_UKSUISessionManager {
		constexpr auto bAchievementIntegrationEnabled = 0xbb; // bool
		constexpr auto bHasInitialInventory = 0xbc; // bool
		constexpr auto DivertFromQueueId = 0xc0; // int32_t
		constexpr auto DivertToQueueId = 0xc4; // int32_t
		constexpr auto QueueDivertType = 0xc8; // EQueueDivertType
		constexpr auto ShelteredMMAttemptTimeout = 0xcc; // float
		constexpr auto ShelteredMMLevelLimit = 0xd0; // float
		constexpr auto ForcedBotMatchLimit = 0xd4; // int32_t
		constexpr auto MercyMatchLossesRequired = 0xd8; // int32_t
		constexpr auto bHasReceivedPlayerEmail = 0xdc; // bool
		constexpr auto bEmailCallWasSuccess = 0xdd; // bool
		constexpr auto PlayerEmail = 0xe0; // FString
	}

	namespace n_AGameMode {
		constexpr auto MatchState = 0x2c0; // FName
		constexpr auto bDelayedStart = 0x2c8; // char : 1
		constexpr auto NumSpectators = 0x2cc; // int32_t
		constexpr auto NumPlayers = 0x2d0; // int32_t
		constexpr auto NumBots = 0x2d4; // int32_t
		constexpr auto MinRespawnDelay = 0x2d8; // float
		constexpr auto NumTravellingPlayers = 0x2dc; // int32_t
		constexpr auto EngineMessageClass = 0x2e0; // ULocalMessage*
		constexpr auto InactivePlayerArray = 0x2e8; // TArray<APlayerState*>
		constexpr auto InactivePlayerStateLifeSpan = 0x2f8; // float
		constexpr auto MaxInactivePlayers = 0x2fc; // int32_t
		constexpr auto bHandleDedicatedServerReplays = 0x300; // bool
	}

	namespace n_UKSSettingsSectionConfigAsset {
		constexpr auto SettingsGroups = 0x30; // TArray<FKSSettingsGroupConfig>
		constexpr auto Heading = 0x40; // FText
		constexpr auto HeadingByPlatform = 0x58; // TMap<FString, FText>
	}

	namespace n_UOnlineSessionClient {
		constexpr auto bIsFromInvite = 0x1d8; // bool
		constexpr auto bHandlingDisconnect = 0x1d9; // bool
	}

	namespace n_UKSActivityRewardCondition_WeaponUsed_OriginalAffiliation {
		constexpr auto AffiliationFilter = 0x30; // FKSAffiliationFilter
	}

	namespace n_UKSScrollButtonSoundLibrary {
		constexpr auto ScrollClicked = 0x28; // UAkAudioEvent*
		constexpr auto ScrollHovered = 0x30; // UAkAudioEvent*
		constexpr auto ScrollUnhovered = 0x38; // UAkAudioEvent*
		constexpr auto ScrollingSound = 0x40; // UAkAudioEvent*
	}

	namespace n_UKSWeaponDetailScreen {
		constexpr auto WeaponMasteryMeter = 0x520; // UKSWeaponProgressMeter*
		constexpr auto RelatedRogues = 0x528; // UKSRelatedRoguesGroup*
		constexpr auto SideNavigationOverlay = 0x530; // UKSSideNavigationOverlay*
		constexpr auto WeaponMilestones = 0x538; // UKSWeaponMilestoneDisplay*
		constexpr auto WeaponStatsPanel = 0x540; // UKSWeaponStatsPanel*
		constexpr auto PopulatedWeaponAsset = 0x548; // UKSWeaponAsset*
		constexpr auto DesiredEquipSound = 0x580; // FName
		constexpr auto bPlayedWeaponEquipSound = 0x588; // bool
	}

	namespace n_UKSModInst_MartialArtist {
		constexpr auto TargetThrowDirection = 0x588; // EThrowDirection
		constexpr auto ChargeTime = 0x58c; // float
	}

	namespace n_UMaterialInterface {
		constexpr auto SubsurfaceProfile = 0x38; // USubsurfaceProfile*
		constexpr auto LightmassSettings = 0x50; // FLightmassMaterialInterfaceSettings
		constexpr auto TextureStreamingData = 0x60; // TArray<FMaterialTextureInfo>
		constexpr auto AssetUserData = 0x70; // TArray<UAssetUserData*>
	}

	namespace n_UPawnActionsComponent {
		constexpr auto ControlledPawn = 0xb0; // APawn*
		constexpr auto ActionStacks = 0xb8; // TArray<FPawnActionStack>
		constexpr auto ActionEvents = 0xc8; // TArray<FPawnActionEvent>
		constexpr auto CurrentAction = 0xd8; // UPawnAction*
	}

	namespace n_UParticleModuleOrientationAxisLock {
		constexpr auto LockAxisFlags = 0x30; // EParticleAxisLock
	}

	namespace n_UKSPlayerMod_PilotOnActivation {
		constexpr auto Vehicle = 0x3b8; // AKSVehicleBase*
		constexpr auto bAppliesCustomMaxHealth = 0x3c0; // bool
		constexpr auto CustomMaxHealthValue = 0x3c4; // float
		constexpr auto SpawnPositionOffset = 0x3c8; // FVector
		constexpr auto bCanActivateInAir = 0x3d4; // bool
	}

	namespace n_UWBP_QuickPlay_QueueTypeSection_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto ButtonText = 0x528; // UTextBlock*
		constexpr auto CustomButton = 0x530; // UWBP_Graphic_Button_C*
		constexpr auto CustomMatchBtn = 0x538; // UHorizontalBox*
		constexpr auto QueueButtonsContainer = 0x540; // UVerticalBox*
		constexpr auto QueueTypeHeader = 0x548; // UWBP_QuickPlay_QueueTypeHeader_C*
		constexpr auto WarningIcon = 0x550; // UImage*
		constexpr auto WBP_QuickPlay_QueueButton = 0x558; // UWBP_QuickPlay_QueueButton_C*
		constexpr auto WBP_QuickPlay_QueueButton_108 = 0x560; // UWBP_QuickPlay_QueueButton_C*
		constexpr auto QueueSectionInfo = 0x568; // FQueueSection
		constexpr auto OnQueueSelected = 0x580; // FMulticastInlineDelegate
		constexpr auto OnQueueHovered = 0x590; // FMulticastInlineDelegate
		constexpr auto OnQueueUnhovered = 0x5a0; // FMulticastInlineDelegate
		constexpr auto QueueButtons = 0x5b0; // TArray<UWBP_QuickPlay_QueueButton_C*>
		constexpr auto OnQueuePopulated = 0x5c0; // FMulticastInlineDelegate
		constexpr auto AssociatedQueues = 0x5d0; // TArray<FClientQueueInfo>
		constexpr auto OnCustomMatchSelected = 0x5e0; // FMulticastInlineDelegate
		constexpr auto OnCustomMatchPopulated = 0x5f0; // FMulticastInlineDelegate
		constexpr auto KSQueueDataFactory = 0x600; // UKSQueueDataFactory*
	}

	namespace n_UWBP_BattlePassEmblem_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto EmblemSwitcher = 0x528; // UWidgetSwitcher*
		constexpr auto LevelOrBadgeSwitcher = 0x530; // UWidgetSwitcher*
		constexpr auto LockIcon = 0x538; // UImage*
		constexpr auto PremiumEmblem = 0x540; // UWBP_AsyncIcon_C*
		constexpr auto StandardEmblem = 0x548; // UWBP_AsyncIcon_C*
		constexpr auto TierNumber = 0x550; // UTextBlock*
	}

	namespace n_UKSWeaponMasteryLevelUpSummary {
		constexpr auto MasteryEntries = 0x28; // TArray<FKSWeaponMasteryLevelUpSummaryEntry>
	}

	namespace n_UParticleModuleTrailSource {
		constexpr auto SourceMethod = 0x30; // ETrail2SourceMethod
		constexpr auto SourceName = 0x34; // FName
		constexpr auto SourceStrength = 0x40; // FRawDistributionFloat
		constexpr auto bLockSourceStength = 0x70; // char : 1
		constexpr auto SourceOffsetCount = 0x74; // int32_t
		constexpr auto SourceOffsetDefaults = 0x78; // TArray<FVector>
		constexpr auto SelectionMethod = 0x88; // EParticleSourceSelectionMethod
		constexpr auto bInheritRotation = 0x8c; // char : 1
	}

	namespace n_UBombActivator_ABP_C {
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x278; // FAnimNode_Root
		constexpr auto AnimGraphNode_Slot = 0x2b8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_TransitionResult_4 = 0x310; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_3 = 0x348; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x380; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult = 0x3b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x3f0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_4 = 0x478; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x4b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_3 = 0x540; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x580; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_2 = 0x608; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer = 0x648; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult = 0x6d0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x710; // FAnimNode_StateMachine
		constexpr auto BombDisarming = 0x7d0; // bool
		constexpr auto BombPlanted = 0x7d1; // bool
		constexpr auto NewVar_1 = 0x7d2; // bool
	}

	namespace n_UPlaneReflectionCaptureComponent {
		constexpr auto InfluenceRadiusScale = 0x280; // float
		constexpr auto PreviewInfluenceRadius = 0x288; // UDrawSphereComponent*
		constexpr auto PreviewCaptureBox = 0x290; // UBoxComponent*
	}

	namespace n_UKSVehicleWheel {
		constexpr auto WheelEffectMap = 0xf0; // TMap<EPhysicalSurface, UParticleSystem*>
		constexpr auto WheelParticleSystem = 0x140; // UParticleSystemComponent*
		constexpr auto AttachSocketOverrideName = 0x148; // FName
		constexpr auto VehicleSpeedParticleParameter = 0x150; // FName
		constexpr auto EffectSpeedInterpolationAlpha = 0x158; // float
		constexpr auto MinimumWheelEffectSpeed = 0x15c; // float
		constexpr auto MaximumWheelEffectSpeed = 0x160; // float
	}

	namespace n_USkinBundleCollection {
		constexpr auto SkinBundleCollectionName = 0x98; // FText
		constexpr auto SkinBundleCollectionDescription = 0xb0; // FText
	}

	namespace n_AKSWeapon_TargetSurface {
		constexpr auto OnSurfaceTargetFireFailure = 0x800; // FMulticastInlineDelegate
		constexpr auto OnSurfaceValidityChanged = 0x810; // FMulticastInlineDelegate
		constexpr auto ValidTarget = 0x820; // bool
	}

	namespace n_UMainCharacterVOComponent_C {
		constexpr auto UberGraphFrame = 0x180; // FPointerToUberGraphFrame
		constexpr auto UnderFire = 0x188; // FKSVoicelineEvent
		constexpr auto TakingDamage = 0x1c0; // FKSVoicelineEvent
		constexpr auto AngleThresholdForShotFromBehind = 0x1f8; // float
		constexpr auto ShotFromBehind = 0x200; // FKSVoicelineEvent
		constexpr auto AbilityOnCooldown = 0x238; // FKSVoicelineEvent
		constexpr auto PrimaryPickedUp = 0x270; // FKSVoicelineEvent
		constexpr auto GadgetPickedUp = 0x2a8; // FKSVoicelineEvent
		constexpr auto MeleePickedUp = 0x2e0; // FKSVoicelineEvent
		constexpr auto MedPackPickedUp = 0x318; // FKSVoicelineEvent
		constexpr auto Revived = 0x350; // FKSVoicelineEvent
		constexpr auto RevivedOther = 0x388; // FKSVoicelineEvent
		constexpr auto RevivedOtherRemote = 0x3c0; // FKSVoicelineEvent
		constexpr auto LastManStanding = 0x3f8; // FKSVoicelineEvent
		constexpr auto Zipline = 0x430; // FKSVoicelineEvent
		constexpr auto Upline = 0x468; // FKSVoicelineEvent
		constexpr auto Landed = 0x4a0; // FKSVoicelineEvent
		constexpr auto Mantle = 0x4d8; // FKSVoicelineEvent
		constexpr auto Jumped = 0x510; // FKSVoicelineEvent
		constexpr auto DodgeRoll = 0x548; // FKSVoicelineEvent
		constexpr auto GetObjective = 0x580; // FKSVoicelineEvent
		constexpr auto Victory = 0x5b8; // FKSVoicelineEvent
		constexpr auto Skydive = 0x5f0; // FKSVoicelineEvent
		constexpr auto LethalGadget = 0x628; // FKSVoicelineEvent
		constexpr auto UtilityGadget = 0x660; // FKSVoicelineEvent
		constexpr auto UtilityDeployable = 0x698; // FKSVoicelineEvent
		constexpr auto LethalDeployable = 0x6d0; // FKSVoicelineEvent
		constexpr auto InteractObjective = 0x708; // FKSVoicelineEvent
		constexpr auto Select = 0x740; // FKSVoicelineEvent
		constexpr auto ShopPurchase = 0x778; // FKSVoicelineEvent
		constexpr auto ShopRuleComponent = 0x7b0; // UKSShopRuleComponent*
		constexpr auto Intro = 0x7b8; // FKSVoicelineEvent
		constexpr auto ReviveMe = 0x7f0; // FKSVoicelineEvent
		constexpr auto Acknowledged = 0x828; // FKSVoicelineEvent
		constexpr auto CancelThat = 0x860; // FKSVoicelineEvent
		constexpr auto SuddenDeath = 0x898; // FKSVoicelineEvent
		constexpr auto PingVOMap = 0x8d0; // TMap<EPingMessage, FKSVoicelineEvent>
		constexpr auto BombPickedUp = 0x920; // FKSVoicelineEvent
		constexpr auto BombPlant = 0x958; // FKSVoicelineEvent
		constexpr auto BombSpottedArmed = 0x990; // FKSVoicelineEvent
		constexpr auto BombSpottedUnarmed = 0x9c8; // FKSVoicelineEvent
		constexpr auto BombDefusing = 0xa00; // FKSVoicelineEvent
		constexpr auto PlayerState = 0xa38; // AKSPlayerState*
		constexpr auto SprintStart = 0xa40; // FKSVoicelineEvent
		constexpr auto SprintEnd = 0xa78; // FKSVoicelineEvent
		constexpr auto SprintStarted = 0xab0; // bool
		constexpr auto SprintEndStop = 0xab8; // FKSVoicelineEvent
		constexpr auto SprintPlaying = 0xaf0; // bool
		constexpr auto SprintingTimer = 0xaf4; // float
		constexpr auto SprintTimerExhale = 0xaf8; // bool
		constexpr auto SprintTimerHandle = 0xb00; // FTimerHandle
		constexpr auto Ouch = 0xb08; // FKSVoicelineEvent
	}

	namespace n_UWBP_news_article_C {
		constexpr auto BackgroundBox = 0x520; // UImage*
		constexpr auto Desc = 0x528; // UTextBlock*
		constexpr auto Header = 0x530; // UTextBlock*
		constexpr auto MasterSize = 0x538; // USizeBox*
	}

	namespace n_ALandscapeStreamingProxy {
		constexpr auto LandscapeActor = 0x540; // LazyObjectProperty
	}

	namespace n_UKSAISense_Team {
		constexpr auto RegisteredEvents = 0x80; // TArray<FKSAITeamStimulusEvent>
	}

	namespace n_UParticleModuleVelocityBase {
		constexpr auto bInWorldSpace = 0x30; // char : 1
		constexpr auto bApplyOwnerScale = 0x30; // char : 1
	}

	namespace n_UMaterialExpressionDepthOfFieldFunction {
		constexpr auto FunctionValue = 0x40; // EDepthOfFieldFunctionValue
		constexpr auto Depth = 0x44; // FExpressionInput
	}

	namespace n_UDebugMenu_C {
		constexpr auto UberGraphFrame = 0x530; // FPointerToUberGraphFrame
		constexpr auto BackImage = 0x538; // UImage*
		constexpr auto BaseCommandBox = 0x540; // UVerticalBox*
		constexpr auto CommandScroll = 0x548; // UScrollBox*
		constexpr auto ConfirmImage = 0x550; // UImage*
		constexpr auto CommandStack = 0x558; // TArray<FDebugMenuCommandInfo>
	}

	namespace n_UInterpTrackEvent {
		constexpr auto EventTrack = 0x70; // TArray<FEventTrackKey>
		constexpr auto bFireEventsWhenForwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenJumpingForwards = 0x80; // char : 1
		constexpr auto bUseCustomEventName = 0x80; // char : 1
	}

	namespace n_UMaterialExpressionLandscapeVisibilityMask {
		constexpr auto ExpressionGUID = 0x40; // FGuid
	}

	namespace n_UStandardButton_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto Hover = 0x528; // UWidgetAnimation*
		constexpr auto bkg = 0x530; // UImage*
		constexpr auto HoverLeft = 0x538; // UImage*
		constexpr auto LoadoutButton = 0x540; // UButton*
		constexpr auto NamedSlot_1 = 0x548; // UNamedSlot*
		constexpr auto OnClicked = 0x550; // FMulticastInlineDelegate
		constexpr auto OnHovered = 0x560; // FMulticastInlineDelegate
		constexpr auto OnUnhovered = 0x570; // FMulticastInlineDelegate
		constexpr auto ClickStandardBtnSFX = 0x580; // UAkAudioEvent*
		constexpr auto HoverStandardBtnSFX = 0x588; // UAkAudioEvent*
	}

	namespace n_UKSReticleWidgetBase {
		constexpr auto ShrinkAnimationTime = 0x538; // float
		constexpr auto BlockedShotIconMaxScale = 0x53c; // float
		constexpr auto BlockedShotIconMinScale = 0x540; // float
		constexpr auto BlockedShotMinScaleSqDist = 0x544; // float
		constexpr auto bGrenadeCooking = 0x548; // bool
		constexpr auto bInADS = 0x549; // bool
		constexpr auto bCachedBlockIconVisible = 0x54a; // bool
		constexpr auto CachedWeaponAccuracy = 0x54c; // float
		constexpr auto CachedReticleOffset = 0x550; // float
	}

	namespace n_UAkPS5InitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettings
		constexpr auto CommunicationSettings = 0x88; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xb0; // FAkPS5AdvancedInitializationSettings
	}

	namespace n_UKSAttachCosmeticInst_Reactive {
		constexpr auto bWasInitializedOnNewWeapon = 0x1b0; // bool
		constexpr auto DemoModePreviewStateIndex = 0x1b4; // int32_t
		constexpr auto WeaponMesh = 0x1c8; // TWeakObjectPtr<UKSWeaponSkeletalMeshComponent>
		constexpr auto bEnableDemoPreviewMode = 0x1e0; // bool
		constexpr auto bCosmeticUpdatesHidden = 0x1e1; // bool
		constexpr auto CurrentWeaponState = 0x1e2; // EWeaponStateNew
		constexpr auto bOwningPawnInstigatedMostRecentDown = 0x1e3; // bool
		constexpr auto bOwningWeaponInstigatedMostRecentDown = 0x1e4; // bool
		constexpr auto DamageWithinTimePeriod = 0x1e8; // float
		constexpr auto IdleCooldownTimer = 0x1f0; // FTimerHandle
		constexpr auto DamageWithinTimePeriodTimer = 0x1f8; // FTimerHandle
		constexpr auto WepAttachReactive = 0x200; // UKSWeaponAttachment_Reactive*
		constexpr auto ProgressionIntA = 0x208; // int32_t
		constexpr auto ProgressionIntB = 0x20c; // int32_t
		constexpr auto ProgressionIntC = 0x210; // int32_t
		constexpr auto ProgressionFloatA = 0x214; // float
		constexpr auto ProgressionFloatB = 0x218; // float
		constexpr auto ProgressionFloatC = 0x21c; // float
		constexpr auto bTrackAIsResetting = 0x220; // bool
		constexpr auto bTrackBIsResetting = 0x221; // bool
		constexpr auto bTrackCIsResetting = 0x222; // bool
		constexpr auto bTrackAShouldResetOnNewWeapons = 0x223; // bool
		constexpr auto bTrackBShouldResetOnNewWeapons = 0x224; // bool
		constexpr auto bTrackCShouldResetOnNewWeapons = 0x225; // bool
		constexpr auto PersistentCacheA = 0x226; // char
		constexpr auto PersistentCacheB = 0x227; // char
		constexpr auto PersistentCacheC = 0x228; // char
		constexpr auto PersistentFlags = 0x229; // char
	}

	namespace n_UKSSightStimulusComponent {
		constexpr auto MaximumStimulusDistance = 0xd8; // float
		constexpr auto MaximumStimulusAngle = 0xdc; // float
		constexpr auto OffsetFromOwner = 0xe0; // FVector
		constexpr auto bCheckForOffsetBlocks = 0xec; // bool
	}

	namespace n_UParticleModuleAttractorLine {
		constexpr auto EndPoint0 = 0x30; // FVector
		constexpr auto EndPoint1 = 0x3c; // FVector
		constexpr auto Range = 0x48; // FRawDistributionFloat
		constexpr auto Strength = 0x78; // FRawDistributionFloat
	}

	namespace n_UActorSequence {
		constexpr auto MovieScene = 0x348; // UMovieScene*
		constexpr auto ObjectReferences = 0x350; // FActorSequenceObjectReferenceMap
	}

	namespace n_UFindSessionsCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UKSAutoTeamWidget {
		constexpr auto AutoTeamType = 0x550; // EKSAutoTeamType
		constexpr auto TeamNumber = 0x554; // int32_t
	}

	namespace n_UAnimNotify_PlaySound {
		constexpr auto Sound = 0x38; // USoundBase*
		constexpr auto VolumeMultiplier = 0x40; // float
		constexpr auto PitchMultiplier = 0x44; // float
		constexpr auto bFollow = 0x48; // char : 1
		constexpr auto AttachName = 0x4c; // FName
	}

	namespace n_UWBP_ReportMenuCommentField_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto Hover = 0x528; // UWidgetAnimation*
		constexpr auto bg_fill = 0x530; // UImage*
		constexpr auto bg_stroke = 0x538; // UImage*
		constexpr auto EditableText = 0x540; // UMultiLineEditableText*
		constexpr auto HoverReportMenuCommentFieldSFX = 0x548; // UAkAudioEvent*
	}

	namespace n_UWBP_ProgressionCardSlot_PlayerXP_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto LevelUpAnim = 0x240; // UWidgetAnimation*
		constexpr auto Category = 0x248; // UTextBlock*
		constexpr auto PlayerLevelText = 0x250; // UTextBlock*
		constexpr auto PointsEarned = 0x258; // UTextBlock*
		constexpr auto ProgressionTally = 0x260; // UWBP_ProgressionTally_C*
		constexpr auto TextGlow01 = 0x268; // UImage*
		constexpr auto XPProgressEarnedBar = 0x270; // UWBP_ProgressEarnedBar_C*
		constexpr auto PlayerProgress = 0x278; // FPlayerProgression
		constexpr auto OnPlayerLevelUp = 0x3e8; // FMulticastInlineDelegate
		constexpr auto ShouldShowXPBar = 0x3f8; // bool
	}

	namespace n_UWBP_NavBar_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto DisableOverlay = 0x528; // UImage*
		constexpr auto GamepadBumperLeft = 0x530; // UOverlay*
		constexpr auto GamepadBumperRight = 0x538; // UOverlay*
		constexpr auto NavigationContainer = 0x540; // UHorizontalBox*
		constexpr auto TabLeftButtonImage = 0x548; // UImage*
		constexpr auto TabRightButtonImage = 0x550; // UImage*
		constexpr auto TopBarContainer = 0x558; // UOverlay*
		constexpr auto OnButtonSelected = 0x560; // FMulticastInlineDelegate
		constexpr auto NextIsTarget = 0x570; // bool
		constexpr auto OnButtonsCreated = 0x578; // FMulticastInlineDelegate
		constexpr auto TabIndex = 0x588; // int32_t
	}

	namespace n_UKSScreenLogWidget {
		constexpr auto ContextualPingTypesDT = 0x520; // UDataTable*
		constexpr auto ContextualPingMessagesDT = 0x528; // UDataTable*
	}

	namespace n_UAnimationDataSourceRegistry {
		constexpr auto DataSources = 0x28; // TMap<FName, TWeakObjectPtr<UObject>>
	}

	namespace n_UMaterialExpressionSkyAtmosphereAerialPerspective {
		constexpr auto WorldPosition = 0x40; // FExpressionInput
	}

	namespace n_UMaterialExpressionTextureCoordinate {
		constexpr auto CoordinateIndex = 0x40; // int32_t
		constexpr auto UTiling = 0x44; // float
		constexpr auto VTiling = 0x48; // float
		constexpr auto UnMirrorU = 0x4c; // char : 1
		constexpr auto UnMirrorV = 0x4c; // char : 1
	}

	namespace n_UKSPlayerMod_PingOnOtherDowned {
		constexpr auto NumberOfPings = 0x330; // int32_t
		constexpr auto NumberOfEnemiesToPing = 0x334; // int32_t
		constexpr auto ShouldPingDownedPlayer = 0x338; // bool
		constexpr auto SecondsToRevealPingedEnemies = 0x33c; // float
		constexpr auto PingPeriod = 0x340; // float
		constexpr auto PingRadius = 0x344; // float
		constexpr auto PingAllEnemyTeams = 0x348; // bool
		constexpr auto BroadcastPingToAllies = 0x349; // bool
		constexpr auto DelayPingPastDownImmune = 0x34a; // bool
		constexpr auto EmitterTemplate = 0x350; // TSoftObjectPtr<UParticleSystem>
	}

	namespace n_UWBP_Social_Friends_Tab_C {
		constexpr auto UberGraphFrame = 0x598; // FPointerToUberGraphFrame
		constexpr auto PlayerList = 0x5a0; // UKSTreeView*
		constexpr auto ClickSocialFriendsSFX = 0x5a8; // UAkAudioEvent*
		constexpr auto OnPlayerListScrolled = 0x5b0; // FMulticastInlineDelegate
	}

	namespace n_UWBP_AmmoWrapper_C {
		constexpr auto AmmoWrapper = 0x238; // UHorizontalBox*
		constexpr auto WBP_AmmoCount = 0x240; // UWBP_AmmoCount_C*
		constexpr auto WBP_AmmoCount_95 = 0x248; // UWBP_AmmoCount_C*
		constexpr auto AmmoWidgets = 0x250; // TArray<UWBP_AmmoCount_C*>
	}

	namespace n_UWBP_MatchCardSlot_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto Category = 0x240; // UTextBlock*
		constexpr auto Decro = 0x248; // UImage*
		constexpr auto Gradient = 0x250; // UImage*
		constexpr auto Image_125 = 0x258; // UImage*
		constexpr auto OrdinalNumberText = 0x260; // UWBP_OrdinalNumberText_C*
		constexpr auto PointsEarned = 0x268; // UTextBlock*
		constexpr auto WBP_PanelDefault = 0x270; // UWBP_PanelDefault_C*
		constexpr auto PlayerStat = 0x278; // FPlayerMatchStatInfo
		constexpr auto MyHud = 0x288; // APUMG_HUD*
		constexpr auto NewCurrencyXP = 0x290; // int32_t
		constexpr auto CurrencyEarned = 0x294; // int32_t
		constexpr auto CurrentCurrency = 0x298; // int32_t
		constexpr auto DeltaTime = 0x29c; // float
		constexpr auto StartAnimation = 0x2a0; // FMulticastInlineDelegate
		constexpr auto CanStartAnimation = 0x2b0; // bool
		constexpr auto GoldFontColor = 0x2b4; // FLinearColor
	}

	namespace n_UMaterialExpressionTextureBase {
		constexpr auto Texture = 0x40; // UTexture*
		constexpr auto SamplerType = 0x48; // EMaterialSamplerType
		constexpr auto IsDefaultMeshpaintTexture = 0x49; // char : 1
	}

	namespace n_ULoggingInStatusTempClone_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto background = 0x528; // UImage*
		constexpr auto Gradient = 0x530; // UImage*
		constexpr auto Image_106 = 0x538; // UImage*
		constexpr auto LogOffBtn = 0x540; // UWBP_StandardButtonMedium_C*
		constexpr auto WaitQueueMessage = 0x548; // UTextBlock*
		constexpr auto WaitQueueTitle = 0x550; // UTextBlock*
		constexpr auto WaitQueueWrapper = 0x558; // UOverlay*
		constexpr auto WBP_EpilepsyWarning = 0x560; // UWBP_EpilepsyWarning_C*
		constexpr auto WBP_ThrobberShield = 0x568; // UWBP_ThrobberShield_C*
		constexpr auto LoginDataFactory = 0x570; // UPUMG_LoginDataFactory*
	}

	namespace n_ACameraRig_Rail {
		constexpr auto CurrentPositionOnRail = 0x220; // float
		constexpr auto bLockOrientationToRail = 0x224; // bool
		constexpr auto TransformComponent = 0x228; // USceneComponent*
		constexpr auto RailSplineComponent = 0x230; // USplineComponent*
		constexpr auto RailCameraMount = 0x238; // USceneComponent*
	}

	namespace n_AKSProjectile_ReviveDart {
		constexpr auto TargetCharacter = 0x950; // TWeakObjectPtr<AKSCharacter>
		constexpr auto ReviveTime = 0x968; // float
		constexpr auto TargetCharacterMod = 0x970; // UKSPlayerMod*
		constexpr auto OnSucceed = 0x978; // FMulticastInlineDelegate
		constexpr auto OnFailed = 0x988; // FMulticastInlineDelegate
	}

	namespace n_UGizmoPlaneTranslationParameterSource {
		constexpr auto AxisSource = 0x90; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0xa0; // TScriptInterface<IGizmoTransformSource>
		constexpr auto Parameter = 0xb0; // FVector2D
		constexpr auto LastChange = 0xb8; // FGizmoVec2ParameterChange
		constexpr auto CurTranslationOrigin = 0xc8; // FVector
		constexpr auto CurTranslationNormal = 0xd4; // FVector
		constexpr auto CurTranslationAxisX = 0xe0; // FVector
		constexpr auto CurTranslationAxisY = 0xec; // FVector
		constexpr auto InitialTransform = 0x100; // FTransform
	}

	namespace n_UAsyncTaskDownloadImage {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFail = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UNodeMappingContainer {
		constexpr auto SourceItems = 0x28; // TMap<FName, FNodeItem>
		constexpr auto TargetItems = 0x78; // TMap<FName, FNodeItem>
		constexpr auto SourceToTarget = 0xc8; // TMap<FName, FName>
		constexpr auto SourceAsset = 0x118; // TSoftObjectPtr<UObject>
		constexpr auto TargetAsset = 0x140; // TSoftObjectPtr<UObject>
	}

	namespace n_UKSMinimapWidgetBase {
		constexpr auto MinimapRepresentedWidth = 0x648; // float
		constexpr auto BackgroundWidth = 0x64c; // float
		constexpr auto ClampStyle = 0x650; // EMinimapWidgetClampStyle
	}

	namespace n_UGizmoRectangleComponent {
		constexpr auto DirectionX = 0x450; // FVector
		constexpr auto DirectionY = 0x45c; // FVector
		constexpr auto OffsetX = 0x468; // float
		constexpr auto OffsetY = 0x46c; // float
		constexpr auto LengthX = 0x470; // float
		constexpr auto LengthY = 0x474; // float
		constexpr auto Thickness = 0x478; // float
		constexpr auto SegmentFlags = 0x47c; // char
	}

	namespace n_UFontFace {
		constexpr auto SourceFilename = 0x30; // FString
		constexpr auto Hinting = 0x40; // EFontHinting
		constexpr auto LoadingPolicy = 0x41; // EFontLoadingPolicy
		constexpr auto LayoutMethod = 0x42; // EFontLayoutMethod
	}

	namespace n_UDatasmithMaterialInstanceTemplate {
		constexpr auto ParentMaterial = 0x30; // TSoftObjectPtr<UMaterialInterface>
		constexpr auto ScalarParameterValues = 0x58; // TMap<FName, float>
		constexpr auto VectorParameterValues = 0xa8; // TMap<FName, FLinearColor>
		constexpr auto TextureParameterValues = 0xf8; // TMap<FName, TSoftObjectPtr<UTexture>>
		constexpr auto StaticParameters = 0x148; // FDatasmithStaticParameterSetTemplate
	}

	namespace n_UWBP_RogueListing_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto JobSelectionGrid = 0x528; // UGridPanel*
		constexpr auto JobSelectionGridOverlay = 0x530; // UOverlay*
		constexpr auto Loading = 0x538; // UWBP_ThrobberHorizontal_C*
		constexpr auto LoadingWrapper = 0x540; // UVerticalBox*
		constexpr auto Mask = 0x548; // URetainerBox*
		constexpr auto OuterSizeBox = 0x550; // USizeBox*
		constexpr auto RogueGridSizeBox = 0x558; // USizeBox*
		constexpr auto RoleFilters = 0x560; // UHorizontalBox*
		constexpr auto ScrollBox_1 = 0x568; // UScrollBox*
		constexpr auto WBP_RogueListingOfferPanel = 0x570; // UWBP_RogueListingOfferPanel_C*
		constexpr auto JobButtons = 0x578; // TArray<UWBP_JobGeneralButton_C*>
		constexpr auto OnJobSelected = 0x588; // FMulticastInlineDelegate
		constexpr auto OnJobListReady = 0x598; // FMulticastInlineDelegate
		constexpr auto MercSelectionCharacter = 0x5a8; // AKSLobbyCharacter*
		constexpr auto ValidJobs = 0x5b0; // int32_t
		constexpr auto JobRoles = 0x5b8; // TArray<UKSJobRole*>
		constexpr auto CurrentlyHoveredJob = 0x5c8; // UKSItem*
		constexpr auto MercManager = 0x5d0; // UKSMercManager*
		constexpr auto bCurrentlyHoveredRogueOwned = 0x5d8; // bool
		constexpr auto GRID WIDTH = 0x5dc; // int32_t
		constexpr auto SelectedJob = 0x5e0; // UKSJobItem*
		constexpr auto PreserveSelectedJobOnHide = 0x5e8; // bool
		constexpr auto DLC_OFFSET = 0x5ec; // float
		constexpr auto GRID_SIZE = 0x5f0; // FVector2D
		constexpr auto MASK_PADDING = 0x5f8; // FVector2D
		constexpr auto AdStoreOffer = 0x600; // UPUMG_StoreItem*
	}

	namespace n_UParticleModuleLight {
		constexpr auto bUseInverseSquaredFalloff = 0x30; // bool
		constexpr auto bAffectsTranslucency = 0x31; // bool
		constexpr auto bPreviewLightRadius = 0x32; // bool
		constexpr auto SpawnFraction = 0x34; // float
		constexpr auto ColorScaleOverLife = 0x38; // FRawDistributionVector
		constexpr auto BrightnessOverLife = 0x80; // FRawDistributionFloat
		constexpr auto RadiusScale = 0xb0; // FRawDistributionFloat
		constexpr auto LightExponent = 0xe0; // FRawDistributionFloat
		constexpr auto LightingChannels = 0x110; // FLightingChannels
		constexpr auto VolumetricScatteringIntensity = 0x114; // float
		constexpr auto bHighQualityLights = 0x118; // bool
		constexpr auto bShadowCastingLights = 0x119; // bool
	}

	namespace n_USoundEffectSourcePresetChain {
		constexpr auto Chain = 0x28; // TArray<FSourceEffectChainEntry>
		constexpr auto bPlayEffectChainTails = 0x38; // char : 1
	}

	namespace n_AKSPlayerCameraManager {
		constexpr auto ThermalScopePPCount = 0x27c8; // int32_t
	}

	namespace n_UKSPlayerMod_SprintSpeed {
		constexpr auto SprintSpeedMultiplier = 0x330; // float
	}

	namespace n_UWmfMediaSettings {
		constexpr auto AllowNonStandardCodecs = 0x28; // bool
		constexpr auto LowLatency = 0x29; // bool
		constexpr auto NativeAudioOut = 0x2a; // bool
		constexpr auto HardwareAcceleratedVideoDecoding = 0x2b; // bool
	}

	namespace n_UWBP_CurrencySummary_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto CurrencyIcon0 = 0x528; // UWBP_AsyncIcon_C*
		constexpr auto CurrencyIcon1 = 0x530; // UWBP_AsyncIcon_C*
		constexpr auto CurrencyIcon2 = 0x538; // UWBP_AsyncIcon_C*
		constexpr auto CurrencySummaryContainer = 0x540; // UVerticalBox*
		constexpr auto CurrencyText0 = 0x548; // UTextBlock*
		constexpr auto CurrencyText1 = 0x550; // UTextBlock*
		constexpr auto CurrencyText2 = 0x558; // UTextBlock*
		constexpr auto PlayerDataFactory = 0x560; // UKSPlayerDataFactory*
		constexpr auto DisplayedCurrencies = 0x568; // TArray<int32_t>
	}

	namespace n_UKSJobSelectionRules {
		constexpr auto PickExclusivity = 0x28; // EJobPickExclusivity
		constexpr auto PickProxyRules = 0x29; // EJobSelectProxyRules
		constexpr auto bProxyAlwaysCompletesPicks = 0x2a; // bool
		constexpr auto bCanAbstainFromBan = 0x2b; // bool
		constexpr auto BanEffects = 0x2c; // EJobBanEffects
		constexpr auto BanProxyRules = 0x2d; // EJobSelectProxyRules
		constexpr auto bProxyAlwaysCompletesBans = 0x2e; // bool
		constexpr auto LockProxyRules = 0x2f; // EJobSelectProxyRules
		constexpr auto bProxyAlwaysCompletesLocks = 0x30; // bool
		constexpr auto BlacklistOrWhitelist = 0x31; // EKSBlacklistOrWhitelist
		constexpr auto FilteredJobs = 0x38; // TArray<TSoftObjectPtr<UKSJobItem>>
		constexpr auto ReserveTime = 0x48; // float
		constexpr auto ReselectTime = 0x4c; // float
		constexpr auto bRequireJobOwnership = 0x50; // bool
		constexpr auto bShowOnUnavailableJobsOnUI = 0x51; // bool
		constexpr auto AIJobSelectionQuery = 0x58; // FGameplayTagQuery
		constexpr auto JobCollection = 0xa0; // UJobCollection*
		constexpr auto RandomJob = 0xa8; // TSoftObjectPtr<UKSJobItem>
		constexpr auto bAllowRandomJob = 0xd0; // bool
	}

	namespace n_UMovieSceneMarginSection {
		constexpr auto TopCurve = 0xe0; // FMovieSceneFloatChannel
		constexpr auto LeftCurve = 0x180; // FMovieSceneFloatChannel
		constexpr auto RightCurve = 0x220; // FMovieSceneFloatChannel
		constexpr auto BottomCurve = 0x2c0; // FMovieSceneFloatChannel
	}

	namespace n_USlider {
		constexpr auto Value = 0x110; // float
		constexpr auto ValueDelegate = 0x114; // FDelegate
		constexpr auto MinValue = 0x124; // float
		constexpr auto MaxValue = 0x128; // float
		constexpr auto WidgetStyle = 0x130; // FSliderStyle
		constexpr auto Orientation = 0x470; // EOrientation
		constexpr auto SliderBarColor = 0x474; // FLinearColor
		constexpr auto SliderHandleColor = 0x484; // FLinearColor
		constexpr auto IndentHandle = 0x494; // bool
		constexpr auto Locked = 0x495; // bool
		constexpr auto MouseUsesStep = 0x496; // bool
		constexpr auto RequiresControllerLock = 0x497; // bool
		constexpr auto StepSize = 0x498; // float
		constexpr auto IsFocusable = 0x49c; // bool
		constexpr auto OnMouseCaptureBegin = 0x4a0; // FMulticastInlineDelegate
		constexpr auto OnMouseCaptureEnd = 0x4b0; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureBegin = 0x4c0; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureEnd = 0x4d0; // FMulticastInlineDelegate
		constexpr auto OnValueChanged = 0x4e0; // FMulticastInlineDelegate
	}

	namespace n_ASceneCaptureCube {
		constexpr auto CaptureComponentCube = 0x230; // USceneCaptureComponentCube*
	}

	namespace n_UKSActivityRequirement_Ranked {
		constexpr auto RequireEnabled = 0x30; // bool
	}

	namespace n_UKSSettingsInfoBase {
		constexpr auto OnSettingValueChanged = 0x28; // FMulticastInlineDelegate
		constexpr auto OnSettingPreviewChanged = 0x38; // FMulticastInlineDelegate
		constexpr auto bIsAutoApplied = 0x48; // bool
		constexpr auto bIsAutoSaved = 0x49; // bool
		constexpr auto TextOptions = 0xd0; // TArray<FText>
		constexpr auto OnTextOptionsChanged = 0xe0; // FMulticastInlineDelegate
		constexpr auto MinValue = 0xf0; // float
		constexpr auto MaxValue = 0xf4; // float
		constexpr auto StepValue = 0xf8; // float
		constexpr auto bRoundValue = 0xfc; // bool
		constexpr auto RoundToNearest = 0x100; // float
		constexpr auto bIsPercent = 0x104; // bool
	}

	namespace n_UAnimComposite {
		constexpr auto AnimationTrack = 0xa8; // FAnimTrack
	}

	namespace n_UWBP_BundleUpsellButton_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto Anim_OnClick = 0x528; // UWidgetAnimation*
		constexpr auto Anim_OnHover = 0x530; // UWidgetAnimation*
		constexpr auto BtnFill = 0x538; // UImage*
		constexpr auto BtnStroke = 0x540; // UImage*
		constexpr auto DiscountTag = 0x548; // UWBP_StoreDiscountTag_C*
		constexpr auto HitTarget = 0x550; // UButton*
		constexpr auto Icon = 0x558; // UWBP_AsyncIcon_C*
		constexpr auto Image = 0x560; // UImage*
		constexpr auto Image_120 = 0x568; // UImage*
		constexpr auto LabelVerticalBox = 0x570; // UVerticalBox*
		constexpr auto Name = 0x578; // UTextBlock*
		constexpr auto OnRawClick = 0x580; // FMulticastInlineDelegate
		constexpr auto StoreItem = 0x590; // UPUMG_StoreItem*
		constexpr auto ClickSound = 0x598; // UAkAudioEvent*
		constexpr auto HoverSound = 0x5a0; // UAkAudioEvent*
	}

	namespace n_USCS_Node {
		constexpr auto ComponentClass = 0x28; // UObject*
		constexpr auto ComponentTemplate = 0x30; // UActorComponent*
		constexpr auto CookedComponentInstancingData = 0x38; // FBlueprintCookedComponentInstancingData
		constexpr auto AttachToName = 0x80; // FName
		constexpr auto ParentComponentOrVariableName = 0x88; // FName
		constexpr auto ParentComponentOwnerClassName = 0x90; // FName
		constexpr auto bIsParentComponentNative = 0x98; // bool
		constexpr auto ChildNodes = 0xa0; // TArray<USCS_Node*>
		constexpr auto MetaDataArray = 0xb0; // TArray<FBPVariableMetaDataEntry>
		constexpr auto VariableGuid = 0xc0; // FGuid
		constexpr auto InternalVariableName = 0xd0; // FName
	}

	namespace n_UAISense_Blueprint {
		constexpr auto ListenerDataType = 0x80; // UUserDefinedStruct*
		constexpr auto ListenerContainer = 0x88; // TArray<UAIPerceptionComponent*>
		constexpr auto UnprocessedEvents = 0x98; // TArray<UAISenseEvent*>
	}

	namespace n_UAkAssetPlatformData {
		constexpr auto CurrentAssetData = 0x28; // UAkAssetData*
	}

	namespace n_UBlendSpace {
		constexpr auto AxisToScaleAnimation = 0x148; // EBlendSpaceAxis
	}

	namespace n_UKSMapIconWidgetBase {
		constexpr auto bDoesIconRotate = 0x238; // bool
		constexpr auto MarkerAnchorHeight = 0x23c; // float
		constexpr auto HeightThreshold = 0x240; // float
		constexpr auto CachedRawMetersAway = 0x248; // float
		constexpr auto UniqueId = 0x24c; // int32_t
		constexpr auto CreatingPlayer = 0x250; // TWeakObjectPtr<AKSPlayerState>
		constexpr auto ParentMapDisplayType = 0x258; // EDisplayType
		constexpr auto AssociatedActor = 0x25c; // TWeakObjectPtr<AActor>
		constexpr auto AssociatedObject = 0x264; // TWeakObjectPtr<UObject>
		constexpr auto DefaultLocation = 0x26c; // FVector
		constexpr auto Lifespan = 0x278; // float
		constexpr auto ParentMapWidget = 0x27c; // TWeakObjectPtr<UKSMapWidgetBase>
		constexpr auto ScreenMargins = 0x284; // FVector2D
		constexpr auto CenterPercentageWidth = 0x28c; // float
		constexpr auto CenterPercentageHeight = 0x290; // float
		constexpr auto OpacityWhenAiming = 0x294; // float
		constexpr auto DoesFadeOutWhenAiming = 0x298; // bool
		constexpr auto AimTransitionOpacity = 0x29c; // float
		constexpr auto IconOffset = 0x2a0; // FVector
		constexpr auto HoverDelaySeconds = 0x2c4; // float
		constexpr auto OnMapIconWidgetReady = 0x2e0; // FMulticastInlineDelegate
		constexpr auto OnMapIconWidgetRemove = 0x2f0; // FMulticastInlineDelegate
		constexpr auto bIsWidgetPool = 0x300; // bool
		constexpr auto WidgetPoolName = 0x308; // FString
	}

	namespace n_UKSWeaponMilestoneEntry {
		constexpr auto PopulatedMilestoneInstance = 0x520; // UKSActivityInstance*
	}

	namespace n_ULiveLinkCurveRemapSettings {
		constexpr auto CurveConversionSettings = 0x98; // FLiveLinkCurveConversionSettings
	}

	namespace n_URadialForceComponent {
		constexpr auto Radius = 0x208; // float
		constexpr auto Falloff = 0x20c; // ERadialImpulseFalloff
		constexpr auto ImpulseStrength = 0x210; // float
		constexpr auto bImpulseVelChange = 0x214; // char : 1
		constexpr auto bIgnoreOwningActor = 0x214; // char : 1
		constexpr auto ForceStrength = 0x218; // float
		constexpr auto DestructibleDamage = 0x21c; // float
		constexpr auto ObjectTypesToAffect = 0x220; // TArray<EObjectTypeQuery>
	}

	namespace n_AKSDropshipLights {
		constexpr auto DefaultSceneRoot = 0x220; // USceneComponent*
		constexpr auto SharedRoot = 0x228; // USceneComponent*
	}

	namespace n_UKSPawnAction_SwapWeapon {
		constexpr auto EquipPoint = 0xa0; // FGameplayTag
	}

	namespace n_UInterpTrackSound {
		constexpr auto Sounds = 0x90; // TArray<FSoundTrackKey>
		constexpr auto bPlayOnReverse = 0xa0; // char : 1
		constexpr auto bContinueSoundOnMatineeEnd = 0xa0; // char : 1
		constexpr auto bSuppressSubtitles = 0xa0; // char : 1
		constexpr auto bTreatAsDialogue = 0xa0; // char : 1
		constexpr auto bAttach = 0xa0; // char : 1
	}

	namespace n_UKSPlayerMod_GlobalMoveSpeed {
		constexpr auto GlobalMoveSpeedMultiplier = 0x330; // float
		constexpr auto bSprintOverride = 0x334; // bool
		constexpr auto GlobalSprintSpeedMultiplier = 0x338; // float
		constexpr auto bDodgeRollOverride = 0x33c; // bool
		constexpr auto GlobalDodgeRollSpeedMultiplier = 0x340; // float
		constexpr auto bCrouchOverride = 0x344; // bool
		constexpr auto GlobalCrouchSpeedMultiplier = 0x348; // float
		constexpr auto CanSprintWhenAffected = 0x34c; // bool
		constexpr auto CanDodgeRollWhenAffected = 0x34d; // bool
		constexpr auto LerpGoal = 0x350; // float
	}

	namespace n_UKSPunishmentConfig {
		constexpr auto GoodBehaviorConfig = 0x30; // TArray<FPunishmentConfigEntry>
		constexpr auto BadBehaviorConfig = 0x40; // TArray<FBadBehaviorConfigEntry>
		constexpr auto EndMatchPunishConfig = 0x50; // TArray<FEndMatchPunishConfigEntry>
	}

	namespace n_UKSWeaponProgressButton {
		constexpr auto OnWeaponPreview = 0x520; // FMulticastInlineDelegate
		constexpr auto OnWeaponSelected = 0x530; // FMulticastInlineDelegate
		constexpr auto OnWeaponUnhovered = 0x540; // FMulticastInlineDelegate
		constexpr auto bOnCosmeticNavToDetails = 0x550; // bool
		constexpr auto WeaponAsset = 0x558; // UKSWeaponAsset*
	}

	namespace n_ULogoutCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UKSActivity {
		constexpr auto ItemDescriptionSingular = 0x1b8; // FText
		constexpr auto ProgressLootId = 0x1d0; // int64_t
		constexpr auto RemoveProgressLootId = 0x1d8; // int64_t
		constexpr auto SetProgressLootId = 0x1e0; // int64_t
		constexpr auto ResetProgressLootId = 0x1e8; // int64_t
		constexpr auto SpecialLootId = 0x1f0; // int64_t
		constexpr auto RewardVendorId = 0x1f8; // int64_t
		constexpr auto RewardXpTableId = 0x200; // int64_t
		constexpr auto SortOrder = 0x208; // int64_t
		constexpr auto EntitlementItemIds = 0x210; // TArray<int64_t>
		constexpr auto TrackerClass = 0x220; // TSoftClassPtr<UObject>
		constexpr auto ProgressInterval = 0x248; // int32_t
		constexpr auto MaxProgressPerMatch = 0x24c; // int32_t
		constexpr auto bAllowMultipleProgressFromTriggerEvent = 0x250; // bool
		constexpr auto bResetAccumulationAfterTriggerEvent = 0x251; // bool
		constexpr auto bResetAccumulationAfterProgressIncrease = 0x252; // bool
		constexpr auto bIsClientAuthority = 0x253; // bool
		constexpr auto bCreateTrackerIfFinished = 0x254; // bool
		constexpr auto bCreateInstanceIfInvalid = 0x255; // bool
		constexpr auto bAlwaysPackageActivityIfCreated = 0x256; // bool
		constexpr auto bCanPackageActivityWithoutTracker = 0x257; // bool
		constexpr auto bAllowLastTierToRepeat = 0x258; // bool
		constexpr auto ProgressDisplayPreference = 0x259; // EKSActivityProgressDisplayType
		constexpr auto ClientNotifyFrequency = 0x25a; // EKSActivityClientNotifyFrequency
		constexpr auto ActivityTierData = 0x260; // TArray<FActivityTierStructure>
		constexpr auto bShowInPostMatchLobby = 0x270; // bool
		constexpr auto bDisableAfterJobChange = 0x271; // bool
		constexpr auto bIsOwnableItem = 0x272; // bool
		constexpr auto bShouldDisplay = 0x273; // bool
		constexpr auto bDuplicateProgressToSpecialLootId = 0x274; // bool
		constexpr auto ActivityComponents = 0x278; // TArray<UKSActivityComponent*>
		constexpr auto ActivityRequirements = 0x288; // TArray<UKSActivityRequirement*>
		constexpr auto ActivityRewardConditions = 0x298; // TArray<UKSActivityRewardCondition*>
		constexpr auto ActivityBehaviors = 0x2a8; // TArray<TSoftClassPtr<UObject>>
		constexpr auto ActivityTypes = 0x2b8; // TArray<FGameplayTag>
		constexpr auto bDevCookOnly = 0x2c8; // bool
	}

	namespace n_APlayerCameraManager {
		constexpr auto PCOwner = 0x220; // APlayerController*
		constexpr auto TransformComponent = 0x228; // USceneComponent*
		constexpr auto DefaultFOV = 0x238; // float
		constexpr auto DefaultOrthoWidth = 0x240; // float
		constexpr auto DefaultAspectRatio = 0x248; // float
		constexpr auto CameraCache = 0x290; // FCameraCacheEntry
		constexpr auto LastFrameCameraCache = 0x880; // FCameraCacheEntry
		constexpr auto ViewTarget = 0xe70; // FTViewTarget
		constexpr auto PendingViewTarget = 0x1470; // FTViewTarget
		constexpr auto CameraCachePrivate = 0x1aa0; // FCameraCacheEntry
		constexpr auto LastFrameCameraCachePrivate = 0x2090; // FCameraCacheEntry
		constexpr auto ModifierList = 0x2680; // TArray<UCameraModifier*>
		constexpr auto DefaultModifiers = 0x2690; // TArray<UCameraModifier*>
		constexpr auto FreeCamDistance = 0x26a0; // float
		constexpr auto FreeCamOffset = 0x26a4; // FVector
		constexpr auto ViewTargetOffset = 0x26b0; // FVector
		constexpr auto CameraLensEffects = 0x26d0; // TArray<AEmitterCameraLensEffectBase*>
		constexpr auto CachedCameraShakeMod = 0x26e0; // UCameraModifier_CameraShake*
		constexpr auto AnimInstPool = 0x26e8; // UCameraAnimInst* [0x8]
		constexpr auto PostProcessBlendCache = 0x2728; // TArray<FPostProcessSettings>
		constexpr auto ActiveAnims = 0x2748; // TArray<UCameraAnimInst*>
		constexpr auto FreeAnims = 0x2758; // TArray<UCameraAnimInst*>
		constexpr auto AnimCameraActor = 0x2768; // ACameraActor*
		constexpr auto bIsOrthographic = 0x2770; // char : 1
		constexpr auto bDefaultConstrainAspectRatio = 0x2770; // char : 1
		constexpr auto bClientSimulatingViewTarget = 0x2770; // char : 1
		constexpr auto bUseClientSideCameraUpdates = 0x2770; // char : 1
		constexpr auto bGameCameraCutThisFrame = 0x2771; // char : 1
		constexpr auto bForceLocalSpaceForInterpolatedRendering = 0x2771; // char : 1
		constexpr auto ViewPitchMin = 0x2774; // float
		constexpr auto ViewPitchMax = 0x2778; // float
		constexpr auto ViewYawMin = 0x277c; // float
		constexpr auto ViewYawMax = 0x2780; // float
		constexpr auto ViewRollMin = 0x2784; // float
		constexpr auto ViewRollMax = 0x2788; // float
		constexpr auto ServerUpdateCameraTimeout = 0x2790; // float
	}

	namespace n_UKSBoxDeadZoneFilter {
		constexpr auto InnerDeadZone = 0x38; // FVector2D
		constexpr auto OuterDeadZone = 0x40; // FVector2D
	}

	namespace n_UUdpMessagingSettings {
		constexpr auto EnableTransport = 0x28; // bool
		constexpr auto bAutoRepair = 0x29; // bool
		constexpr auto bStopServiceWhenAppDeactivates = 0x2a; // bool
		constexpr auto UnicastEndpoint = 0x30; // FString
		constexpr auto MulticastEndpoint = 0x40; // FString
		constexpr auto MessageFormat = 0x50; // EUdpMessageFormat
		constexpr auto MulticastTimeToLive = 0x51; // char
		constexpr auto StaticEndpoints = 0x58; // TArray<FString>
		constexpr auto EnableTunnel = 0x68; // bool
		constexpr auto TunnelUnicastEndpoint = 0x70; // FString
		constexpr auto TunnelMulticastEndpoint = 0x80; // FString
		constexpr auto RemoteTunnelEndpoints = 0x90; // TArray<FString>
	}

	namespace n_AHUD {
		constexpr auto PlayerOwner = 0x220; // APlayerController*
		constexpr auto bLostFocusPaused = 0x228; // char : 1
		constexpr auto bShowHUD = 0x228; // char : 1
		constexpr auto bShowDebugInfo = 0x228; // char : 1
		constexpr auto CurrentTargetIndex = 0x22c; // int32_t
		constexpr auto bShowHitBoxDebugInfo = 0x230; // char : 1
		constexpr auto bShowOverlays = 0x230; // char : 1
		constexpr auto bEnableDebugTextShadow = 0x230; // char : 1
		constexpr auto PostRenderedActors = 0x238; // TArray<AActor*>
		constexpr auto DebugDisplay = 0x250; // TArray<FName>
		constexpr auto ToggledDebugCategories = 0x260; // TArray<FName>
		constexpr auto Canvas = 0x270; // UCanvas*
		constexpr auto DebugCanvas = 0x278; // UCanvas*
		constexpr auto DebugTextList = 0x280; // TArray<FDebugTextInfo>
		constexpr auto ShowDebugTargetDesiredClass = 0x290; // AActor*
		constexpr auto ShowDebugTargetActor = 0x298; // AActor*
	}

	namespace n_USoundSubmixWithParentBase {
		constexpr auto ParentSubmix = 0x38; // USoundSubmixBase*
	}

	namespace n_USizeBoxSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x58; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x59; // EVerticalAlignment
	}

	namespace n_UKSActivityRewardCondition_DamageHistoryCount {
		constexpr auto MinDamageHistoryEntries = 0x30; // int32_t
		constexpr auto MaxDamageHistoryEntries = 0x34; // int32_t
	}

	namespace n_UAttackBomb_WeaponComponent_C {
		constexpr auto K2Node_Event_SkyDiver_3 = 0x1258; // AKSCharacter*
		constexpr auto CallFunc_DoesCharacterHaveHoverboard_Has_Hoverboard = 0x1260; // bool
		constexpr auto K2Node_Event_SkyDiver_2 = 0x1268; // AKSCharacter*
		constexpr auto K2Node_Event_SkyDiver = 0x1270; // AKSCharacter*
		constexpr auto K2Node_Event_OldState = 0x1278; // EWeaponStateNew
		constexpr auto K2Node_Event_NewState = 0x1279; // EWeaponStateNew
		constexpr auto K2Node_SwitchEnum_CmpSuccess = 0x127a; // bool
		constexpr auto CallFunc_DoesCharacterHaveBackpack_HasBackpack = 0x127b; // bool
		constexpr auto CallFunc_DoesCharacterHaveBackpack_HasBackpack_2 = 0x127c; // bool
	}

	namespace n_UEditableTextWidgetStyle {
		constexpr auto EditableTextStyle = 0x30; // FEditableTextStyle
	}

	namespace n_UMaterialExpressionFeatureLevelSwitch {
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto Inputs = 0x54; // FExpressionInput [0x4]
	}

	namespace n_UWBP_NewTag_C {
		constexpr auto background = 0x238; // UImage*
	}

	namespace n_UKSBTD_CheckRole {
		constexpr auto RequiredRoles = 0x68; // TArray<ECharacterRole>
		constexpr auto RequireAll = 0x78; // bool
	}

	namespace n_AKSJobSelectPreviewActor {
		constexpr auto OwningPersistantPlayerData = 0x220; // TWeakObjectPtr<UKSPersistentPlayerData>
		constexpr auto LobbyCharacterClass = 0x228; // AKSLobbyCharacter*
		constexpr auto ChildLobbyCharacter = 0x230; // AKSLobbyCharacter*
		constexpr auto ModelViewerDelay = 0x238; // float
		constexpr auto JobSelectionState = 0x23c; // EJobSelectionState
		constexpr auto SkinPreloadBundles = 0x268; // TArray<FName>
		constexpr auto PositionIndex = 0x278; // int32_t
		constexpr auto bOffsetCharacterByCapsuleHeight = 0x27c; // bool
		constexpr auto bKeepActiveJobVisibleWhileLoading = 0x27d; // bool
		constexpr auto BaseComponent = 0x280; // USceneComponent*
		constexpr auto JobModelViewerTimer = 0x288; // FTimerHandle
		constexpr auto ActiveJobItem = 0x290; // UKSJobItem*
		constexpr auto ActiveSkinBundle = 0x298; // UKSSkinBundle*
		constexpr auto ActiveFullSkinMap = 0x2a0; // TMap<UKSItem*, UKSItem*>
		constexpr auto QueuedJob = 0x2f0; // TSoftObjectPtr<UKSJobItem>
		constexpr auto CachedState = 0x318; // EKSJobSelectPreviewLoadState
		constexpr auto bHideChildCharacter = 0x319; // bool
		constexpr auto OnJobPreviewStateChangedDel = 0x338; // FMulticastInlineDelegate
		constexpr auto OnPersistentPlayerDataSetDel = 0x348; // FMulticastInlineDelegate
		constexpr auto JobFromLoadout = 0x370; // UKSJobItem*
		constexpr auto PendingFullSkinMap = 0x378; // TMap<UKSItem*, UKSItem*>
		constexpr auto PropsAndSkins = 0x3c8; // TMap<UKSItem*, FPreviewActorPropSkinInfo>
		constexpr auto bHasTriggeredVO = 0x420; // bool
	}

	namespace n_UKSBTD_IsActionAllowed {
		constexpr auto Action = 0x68; // UKSBTAction*
	}

	namespace n_UAkAuxBus {
		constexpr auto RequiredBank = 0x58; // UAkAudioBank*
	}

	namespace n_ULiveLinkComponentController {
		constexpr auto SubjectRepresentation = 0xb0; // FLiveLinkSubjectRepresentation
		constexpr auto ControllerMap = 0xc0; // TMap<ULiveLinkRole*, ULiveLinkControllerBase*>
		constexpr auto bUpdateInEditor = 0x110; // bool
		constexpr auto OnLiveLinkUpdated = 0x118; // FMulticastInlineDelegate
		constexpr auto ComponentToControl = 0x128; // FComponentReference
	}

	namespace n_UKSBTD_WeightedPerceptionCheck {
		constexpr auto WeightedEntries = 0x68; // TArray<FKSWeightedPerceptionEntry>
		constexpr auto CriticalWeightDifference = 0x78; // int32_t
	}

	namespace n_UKSWeaponAsset_Build {
		constexpr auto SoftBuildActorClass = 0x908; // TSoftClassPtr<UObject>
		constexpr auto SoftBuildPreviewActorClass = 0x930; // TSoftClassPtr<UObject>
		constexpr auto BuildActivationDelay = 0x958; // float
	}

	namespace n_AStaticMeshActor {
		constexpr auto StaticMeshComponent = 0x220; // UStaticMeshComponent*
		constexpr auto bStaticMeshReplicateMovement = 0x228; // bool
		constexpr auto NavigationGeometryGatheringMode = 0x229; // ENavDataGatheringMode
	}

	namespace n_UKSWhatsNewModal {
		constexpr auto maxPanelCount = 0x520; // int32_t
		constexpr auto StoredPanels = 0x528; // TArray<UKSWhatsNewPanel*>
	}

	namespace n_UDropdownEntry_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto Hover = 0x528; // UWidgetAnimation*
		constexpr auto Color_Swatch_Brush = 0x530; // UImage*
		constexpr auto HitTarget = 0x538; // UButton*
		constexpr auto OptionText = 0x540; // UTextBlock*
		constexpr auto Selected = 0x548; // UImage*
		constexpr auto Text = 0x550; // FText
		constexpr auto Index = 0x568; // int32_t
		constexpr auto OnOptionSelected = 0x570; // FMulticastInlineDelegate
		constexpr auto OnOptionHovered = 0x580; // FMulticastInlineDelegate
		constexpr auto HoverDropdownEntrySFX = 0x590; // UAkAudioEvent*
		constexpr auto ClickDropdownEntrySFX = 0x598; // UAkAudioEvent*
	}

	namespace n_UKSVoiceActivityWidget {
		constexpr auto VoiceAccountNamePairsUpdated = 0x520; // FMulticastInlineDelegate
		constexpr auto VoiceParticipantAdded = 0x530; // FMulticastInlineDelegate
		constexpr auto VoiceParticipantRemoved = 0x540; // FMulticastInlineDelegate
		constexpr auto VoiceParticipantUpdated = 0x550; // FMulticastInlineDelegate
		constexpr auto VoiceAudioStateChange = 0x560; // FMulticastInlineDelegate
	}

	namespace n_UWBP_StorePanelButton_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto OnHover = 0x528; // UWidgetAnimation*
		constexpr auto ClickFill = 0x530; // UImage*
		constexpr auto HighlightBorderWrapper = 0x538; // UBorder*
		constexpr auto HitTarget = 0x540; // UButton*
		constexpr auto Image_215 = 0x548; // UImage*
		constexpr auto NamedSlot_151 = 0x550; // UNamedSlot*
		constexpr auto PanelBG = 0x558; // UImage*
		constexpr auto OnBtnClicked = 0x560; // FMulticastInlineDelegate
		constexpr auto OnBtnHovered = 0x570; // FMulticastInlineDelegate
		constexpr auto OnBtnUnhovered = 0x580; // FMulticastInlineDelegate
		constexpr auto bIsDisable = 0x590; // bool
		constexpr auto bIsActive = 0x591; // bool
		constexpr auto TintColor = 0x594; // FLinearColor
		constexpr auto bColorOverride = 0x5a4; // bool
		constexpr auto HoverStorePanelBtnSFX = 0x5a8; // UAkAudioEvent*
		constexpr auto ClickStorePanelBtnSFX = 0x5b0; // UAkAudioEvent*
	}

	namespace n_UNavMovementComponent {
		constexpr auto NavAgentProps = 0xf0; // FNavAgentProperties
		constexpr auto FixedPathBrakingDistance = 0x120; // float
		constexpr auto bUpdateNavAgentWithOwnersCollision = 0x124; // char : 1
		constexpr auto bUseAccelerationForPaths = 0x124; // char : 1
		constexpr auto bUseFixedBrakingDistanceForPaths = 0x124; // char : 1
		constexpr auto MovementState = 0x125; // FMovementProperties
		constexpr auto PathFollowingComp = 0x128; // UObject*
	}

	namespace n_UAnimNotifyState_TimedNiagaraEffect {
		constexpr auto Template = 0x30; // UNiagaraSystem*
		constexpr auto SocketName = 0x38; // FName
		constexpr auto LocationOffset = 0x40; // FVector
		constexpr auto RotationOffset = 0x4c; // FRotator
		constexpr auto bDestroyAtEnd = 0x58; // bool
	}

	namespace n_UWBP_ChallengeEntry_CardHorizontal_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto animHover = 0x528; // UWidgetAnimation*
		constexpr auto CardContent = 0x530; // UHorizontalBox*
		constexpr auto ChallengeBkg_2 = 0x538; // UImage*
		constexpr auto ChallengeBkg_Complete = 0x540; // UImage*
		constexpr auto ChallengeBkg_Switcher = 0x548; // UWidgetSwitcher*
		constexpr auto ChallengeContentSwitcher = 0x550; // UWidgetSwitcher*
		constexpr auto ChallengeDescription = 0x558; // UTextBlock*
		constexpr auto ChallengeDescription_2 = 0x560; // UTextBlock*
		constexpr auto ChallengeDescription_4 = 0x568; // UTextBlock*
		constexpr auto ChallengeDescription_5 = 0x570; // UTextBlock*
		constexpr auto ChallengeProgressBar = 0x578; // UWBP_ProgressEarnedBar_C*
		constexpr auto ChallengeProgressText = 0x580; // UTextBlock*
		constexpr auto CompletedIcons = 0x588; // UOverlay*
		constexpr auto Content_active = 0x590; // UVerticalBox*
		constexpr auto Content_AllComplete = 0x598; // UVerticalBox*
		constexpr auto Content_WeekComplete = 0x5a0; // UVerticalBox*
		constexpr auto HitTarget = 0x5a8; // UButton*
		constexpr auto Image = 0x5b0; // UImage*
		constexpr auto Image_390 = 0x5b8; // UImage*
		constexpr auto RewardBadge_EXAMPLE = 0x5c0; // UWBP_Challenge_Rewards_Badge_C*
		constexpr auto RewardBadge_EXAMPLE_01 = 0x5c8; // UWBP_Challenge_Rewards_Badge_C*
		constexpr auto RewardsActive = 0x5d0; // UHorizontalBox*
		constexpr auto RewardSwitcher = 0x5d8; // UWidgetSwitcher*
		constexpr auto SelectionFrame = 0x5e0; // UImage*
		constexpr auto TimeRemainingWrapper = 0x5e8; // UHorizontalBox*
		constexpr auto CurrentVisualState = 0x5f0; // EChallengeEntry_Card_State
		constexpr auto WeekTableRowName = 0x5f4; // FName
		constexpr auto CurrentActivitySequence = 0x600; // FActivitySequenceRow
		constexpr auto OnClicked = 0x630; // FMulticastInlineDelegate
		constexpr auto ButtonClickSound = 0x640; // UAkAudioEvent*
		constexpr auto ButtonHoverSound = 0x648; // UAkAudioEvent*
	}

	namespace n_UPlatformStoreAsset {
		constexpr auto LootId = 0x1b8; // int32_t
		constexpr auto Rules = 0x1bc; // FPrimaryAssetRules
	}

	namespace n_UAkTVOSInitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettingsWithSampleRate
		constexpr auto AudioSession = 0x90; // FAkAudioSession
		constexpr auto CommunicationSettings = 0xa0; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xc8; // FAkAdvancedInitializationSettings
	}

	namespace n_UNiagaraPreviewAxis_InterpParamInt32 {
		constexpr auto Min = 0x38; // int32_t
		constexpr auto Max = 0x3c; // int32_t
	}

	namespace n_ULevel {
		constexpr auto OwningWorld = 0xb8; // UWorld*
		constexpr auto Model = 0xc0; // UModel*
		constexpr auto ModelComponents = 0xc8; // TArray<UModelComponent*>
		constexpr auto ActorCluster = 0xd8; // ULevelActorContainer*
		constexpr auto NumTextureStreamingUnbuiltComponents = 0xe0; // int32_t
		constexpr auto NumTextureStreamingDirtyResources = 0xe4; // int32_t
		constexpr auto LevelScriptActor = 0xe8; // ALevelScriptActor*
		constexpr auto NavListStart = 0xf0; // ANavigationObjectBase*
		constexpr auto NavListEnd = 0xf8; // ANavigationObjectBase*
		constexpr auto NavDataChunks = 0x100; // TArray<UNavigationDataChunk*>
		constexpr auto LightmapTotalSize = 0x110; // float
		constexpr auto ShadowmapTotalSize = 0x114; // float
		constexpr auto StaticNavigableGeometry = 0x118; // TArray<FVector>
		constexpr auto StreamingTextureGuids = 0x128; // TArray<FGuid>
		constexpr auto LevelBuildDataId = 0x1d0; // FGuid
		constexpr auto MapBuildData = 0x1e0; // UMapBuildDataRegistry*
		constexpr auto LightBuildLevelOffset = 0x1e8; // FIntVector
		constexpr auto LightingScenarioQuality = 0x1f4; // ELightingScenarioQuality
		constexpr auto bIsLightingScenario = 0x1f5; // char : 1
		constexpr auto bTextureStreamingRotationChanged = 0x1f5; // char : 1
		constexpr auto bStaticComponentsRegisteredInStreamingManager = 0x1f5; // char : 1
		constexpr auto bIsVisible = 0x1f5; // char : 1
		constexpr auto WorldSettings = 0x248; // AWorldSettings*
		constexpr auto AssetUserData = 0x258; // TArray<UAssetUserData*>
		constexpr auto DestroyedReplicatedStaticActors = 0x278; // TArray<FReplicatedStaticActorDestructionInfo>
	}

	namespace n_UDatasmithStaticMeshComponentTemplate {
		constexpr auto StaticMesh = 0x30; // UStaticMesh*
		constexpr auto OverrideMaterials = 0x38; // TArray<UMaterialInterface*>
	}

	namespace n_AKSAnnouncer {
		constexpr auto OnAllyLivingPlayersChanged = 0x238; // FMulticastInlineDelegate
		constexpr auto OnEnemyLivingPlayersChanged = 0x248; // FMulticastInlineDelegate
		constexpr auto PriorityManager = 0x258; // UKSVOPriorityManager*
		constexpr auto AnnouncerAkComponent = 0x270; // UAkComponent*
		constexpr auto PhaseTimeAnnouncements = 0x278; // TMap<FName, FTimeAnnouncementList>
		constexpr auto SuddenDeathAnnouncement = 0x2c8; // UAkAudioEvent*
		constexpr auto FallbackEliminationAnnouncement = 0x2d8; // UAkAudioEvent*
		constexpr auto FallbackEliminationAnnouncementAlly = 0x2e0; // UAkAudioEvent*
		constexpr auto MaxAnnouncementDuration = 0x328; // float
		constexpr auto OnVOLineFinished = 0x32c; // FDelegate
		constexpr auto VODuckingAmount = 0x33c; // float
	}

	namespace n_UWBP_PlayerIdentity_PlayerLevel_C {
		constexpr auto Image_166 = 0x520; // UImage*
		constexpr auto LevelLoadingSwitcher = 0x528; // UWidgetSwitcher*
		constexpr auto PlayerLevelText = 0x530; // UTextBlock*
		constexpr auto PlayerLevelThrobber = 0x538; // UThrobber*
		constexpr auto WBP_BoxStroke = 0x540; // UWBP_BoxStroke_C*
	}

	namespace n_UAnimationSharingStateProcessor {
		constexpr auto AnimationStateEnum = 0x28; // TSoftObjectPtr<UEnum>
	}

	namespace n_UWBP_SettingsBinding_C {
		constexpr auto UberGraphFrame = 0x578; // FPointerToUberGraphFrame
		constexpr auto WBP_InputKeySelector_Gamepad = 0x580; // UWBP_InputKeySelector_C*
		constexpr auto WBP_InputKeySelector_Primary = 0x588; // UWBP_InputKeySelector_C*
		constexpr auto WBP_InputKeySelector_Secondary = 0x590; // UWBP_InputKeySelector_C*
		constexpr auto WBP_SettingsBinding_Clear_GP = 0x598; // UWBP_SettingsBinding_Clear_C*
		constexpr auto WBP_SettingsBinding_Clear_KBM = 0x5a0; // UWBP_SettingsBinding_Clear_C*
		constexpr auto CachedPrimaryBinding = 0x5a8; // FInputChord
		constexpr auto CachedSecondaryBinding = 0x5c8; // FInputChord
		constexpr auto CachedGamepadBinding = 0x5e8; // FInputChord
		constexpr auto bCachedGamepadEnabled = 0x608; // bool
		constexpr auto bCachedPrimaryEnabled = 0x609; // bool
		constexpr auto bCachedSecondaryEnabled = 0x60a; // bool
		constexpr auto TimeToWaitForCombo = 0x60c; // float
		constexpr auto Pending Gamepad Key = 0x610; // FKey
		constexpr auto Combo Key Timer Handle = 0x628; // FTimerHandle
		constexpr auto bAllowClear = 0x630; // bool
	}

	namespace n_UFindTurnBasedMatchCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UKSPlayerShotListener {
		constexpr auto MinimapShotNofify = 0xb0; // FMulticastInlineDelegate
		constexpr auto EnemyShotPingWidgetPools = 0x118; // TArray<FString>
		constexpr auto OverlayDisplayWidget = 0x128; // TSoftClassPtr<UObject>
	}

	namespace n_UStaticMeshPoolComponent {
		constexpr auto UnusedComponentsArray = 0xd8; // TArray<UStaticMeshComponent*>
		constexpr auto UsedComponentsSet = 0xe8; // TSet<UStaticMeshComponent*>
		constexpr auto PeekedStaticMeshComponent = 0x138; // UStaticMeshComponent*
		constexpr auto PooledStaticMeshComponentClass = 0x140; // UStaticMeshComponent*
	}

	namespace n_UGizmoComponentHitTarget {
		constexpr auto Component = 0x30; // UPrimitiveComponent*
	}

	namespace n_UBTService_RunEQS {
		constexpr auto EQSRequest = 0x98; // FEQSParametrizedQueryExecutionRequest
	}

	namespace n_UNiagaraLightRendererProperties {
		constexpr auto bUseInverseSquaredFalloff = 0x50; // char : 1
		constexpr auto bAffectsTranslucency = 0x50; // char : 1
		constexpr auto bOverrideRenderingEnabled = 0x50; // char : 1
		constexpr auto RadiusScale = 0x54; // float
		constexpr auto ColorAdd = 0x58; // FVector
		constexpr auto LightRenderingEnabledBinding = 0x68; // FNiagaraVariableAttributeBinding
		constexpr auto LightExponentBinding = 0xe0; // FNiagaraVariableAttributeBinding
		constexpr auto PositionBinding = 0x158; // FNiagaraVariableAttributeBinding
		constexpr auto ColorBinding = 0x1d0; // FNiagaraVariableAttributeBinding
		constexpr auto RadiusBinding = 0x248; // FNiagaraVariableAttributeBinding
		constexpr auto VolumetricScatteringBinding = 0x2c0; // FNiagaraVariableAttributeBinding
	}

	namespace n_UKSActivityRewardCondition_AffectedByGadgetOrMod {
		constexpr auto RequireAffected = 0x30; // bool
		constexpr auto ModsToIgnore = 0x38; // TArray<TSoftObjectPtr<UKSPlayerMod>>
	}

	namespace n_UKSBotDefinitionCollection {
		constexpr auto BotDefinitions = 0x30; // TArray<UKSBotDefinition*>
	}

	namespace n_AKSJobSelectZone {
		constexpr auto InteractTime = 0x228; // float
		constexpr auto InteractionType = 0x230; // UKSInteractionType*
		constexpr auto InteractionMode = 0x238; // FName
		constexpr auto bCanInteractFromBehind = 0x240; // bool
		constexpr auto bForceLOS = 0x241; // bool
		constexpr auto InteractPromptText = 0x248; // FText
		constexpr auto CurrentZoneUsers = 0x260; // TSet<AKSCharacter*>
		constexpr auto InteractionBlockerManager = 0x2b0; // UKSInteractionBlockerManager*
		constexpr auto InteractableComponent = 0x2b8; // UKSInteractableComponent*
	}

	namespace n_UParticleModuleTypeDataGpu {
		constexpr auto EmitterInfo = 0x30; // FGPUSpriteEmitterInfo
		constexpr auto ResourceData = 0x2b0; // FGPUSpriteResourceData
		constexpr auto CameraMotionBlurAmount = 0x410; // float
		constexpr auto bClearExistingParticlesOnInit = 0x414; // char : 1
	}

	namespace n_UItemCollection {
		constexpr auto Rules = 0x30; // FPrimaryAssetRules
		constexpr auto CollectionQuery = 0x40; // FGameplayTagQuery
		constexpr auto PrimaryAssetType = 0x88; // FName
	}

	namespace n_UKSDamageTypeBase {
		constexpr auto DamageCategory = 0x40; // EDamageCategory
		constexpr auto HitPawnEffect = 0x48; // UParticleSystem*
		constexpr auto HitBodyAudioEvent = 0x50; // UAkAudioEvent*
		constexpr auto HitHeadAudioEvent = 0x58; // UAkAudioEvent*
		constexpr auto HitResistedAudioEvent = 0x60; // UAkAudioEvent*
		constexpr auto HitReducedAudioEvent = 0x68; // UAkAudioEvent*
		constexpr auto HitByAudioEvent = 0x70; // UAkAudioEvent*
		constexpr auto HitByResistedAudioEvent = 0x78; // UAkAudioEvent*
		constexpr auto HitByReducedAudioEvent = 0x80; // UAkAudioEvent*
		constexpr auto HitSpecialEffect = 0x88; // FKSSpecialEffect
		constexpr auto EffectAttachPointName = 0xd8; // FName
		constexpr auto bPreProcessResistable = 0xe0; // bool
		constexpr auto bRequiresDamageForDebuffs = 0xe1; // bool
		constexpr auto bUIDisplayable = 0xe2; // bool
		constexpr auto bClientPredictable = 0xe3; // bool
		constexpr auto bHideDamageDirection = 0xe4; // bool
		constexpr auto bCountTowardsTrackedFriendlyFireDamage = 0xe5; // bool
		constexpr auto bDoFriendlyDamageWithReverseFriendlyFire = 0xe6; // bool
		constexpr auto DebuffsAppliedOnDamage = 0xe8; // TArray<UKSPlayerMod*>
		constexpr auto FlinchDuration = 0xf8; // float
		constexpr auto FlinchRecoveryRate = 0xfc; // float
		constexpr auto FlinchMinHeightBody = 0x100; // float
		constexpr auto FlinchMaxHeightBody = 0x104; // float
		constexpr auto FlinchMinHeightHead = 0x108; // float
		constexpr auto FlinchMaxHeightHead = 0x10c; // float
		constexpr auto DamageTags = 0x110; // FGameplayTagContainer
		constexpr auto ImpulseMagnitudePerDamage = 0x130; // float
	}

	namespace n_UKSBTTask_RandomizeWayPointDefensePoint {
		constexpr auto WayPoint = 0x70; // FBlackboardKeySelector
		constexpr auto DefensePoint = 0x98; // FBlackboardKeySelector
	}

	namespace n_UMaterialExpressionVirtualTextureFeatureSwitch {
		constexpr auto No = 0x40; // FExpressionInput
		constexpr auto Yes = 0x54; // FExpressionInput
	}

	namespace n_UWBP_CustomMassInvite_C {
		constexpr auto UberGraphFrame = 0x538; // FPointerToUberGraphFrame
		constexpr auto LoadingSearch = 0x540; // UWidgetAnimation*
		constexpr auto Intro = 0x548; // UWidgetAnimation*
		constexpr auto Loading = 0x550; // UWidgetAnimation*
		constexpr auto AutoListContent = 0x558; // UOverlay*
		constexpr auto AutoListError = 0x560; // UTextBlock*
		constexpr auto AutoListSwitcher = 0x568; // UWidgetSwitcher*
		constexpr auto AutoLoadThrobber = 0x570; // UWBP_ThrobberShield_C*
		constexpr auto AutoLoadThrobber2 = 0x578; // UWBP_ThrobberHorizontal_C*
		constexpr auto AutoTab = 0x580; // UWBP_subscreen_nav_tab_C*
		constexpr auto Blocker = 0x588; // UBorder*
		constexpr auto BlockerButton = 0x590; // UButton*
		constexpr auto ContentSwitcher = 0x598; // UWidgetSwitcher*
		constexpr auto PlayerList = 0x5a0; // UKSTreeView*
		constexpr auto SearchBar = 0x5a8; // UWBP_Social_Search_bar_C*
		constexpr auto SearchList = 0x5b0; // UKSTreeView*
		constexpr auto SearchListContent = 0x5b8; // UOverlay*
		constexpr auto SearchListError = 0x5c0; // UTextBlock*
		constexpr auto SearchLoadThrobber = 0x5c8; // UWBP_ThrobberShield_C*
		constexpr auto SearchLoadThrobber2 = 0x5d0; // UWBP_ThrobberHorizontal_C*
		constexpr auto SearchSwitcher = 0x5d8; // UWidgetSwitcher*
		constexpr auto SearchTab = 0x5e0; // UWBP_subscreen_nav_tab_C*
		constexpr auto SubmitBtn = 0x5e8; // UWBP_StandardButtonMedium_C*
		constexpr auto TitleLabel = 0x5f0; // UTextBlock*
		constexpr auto WBP_ModalPopupContainer = 0x5f8; // UWBP_ModalPopupContainer_C*
		constexpr auto RouteName = 0x600; // FName
		constexpr auto OnSelect = 0x608; // FMulticastInlineDelegate
		constexpr auto AutoListFocusGroup = 0x618; // int32_t
		constexpr auto NoFocusGroup = 0x61c; // int32_t
		constexpr auto SearchListFocusGroup = 0x620; // int32_t
		constexpr auto SearchHandle = 0x628; // FKSPlayerQueryHandle
	}

	namespace n_URichTextBlockImageDecorator {
		constexpr auto ImageSet = 0x28; // UDataTable*
	}

	namespace n_UMovieSceneSkeletalAnimationSection {
		constexpr auto Params = 0xe0; // FMovieSceneSkeletalAnimationParams
		constexpr auto AnimSequence = 0x1b8; // UAnimSequence*
		constexpr auto Animation = 0x1c0; // UAnimSequenceBase*
		constexpr auto StartOffset = 0x1c8; // float
		constexpr auto EndOffset = 0x1cc; // float
		constexpr auto PlayRate = 0x1d0; // float
		constexpr auto bReverse = 0x1d4; // char : 1
		constexpr auto SlotName = 0x1d8; // FName
	}

	namespace n_UPhysicsThrusterComponent {
		constexpr auto ThrustStrength = 0x208; // float
	}

	namespace n_USlateVectorArtData {
		constexpr auto VertexData = 0x28; // TArray<FSlateMeshVertex>
		constexpr auto IndexData = 0x38; // TArray<uint32_t>
		constexpr auto Material = 0x48; // UMaterialInterface*
		constexpr auto ExtentMin = 0x50; // FVector2D
		constexpr auto ExtentMax = 0x58; // FVector2D
	}

	namespace n_UKSStatWrapper {
		constexpr auto Icon = 0x28; // TSoftObjectPtr<UTexture2D>
		constexpr auto DisplayName = 0x50; // FText
		constexpr auto ShouldRepresentValueAsFloat = 0x68; // bool
	}

	namespace n_UBTTask_RotateToFaceBBEntry {
		constexpr auto Precision = 0x98; // float
	}

	namespace n_UKSBTTask_PerformRandomDodgeRoll {
		constexpr auto PreferredAngles = 0x70; // TArray<float>
		constexpr auto SecondaryAngles = 0x80; // TArray<float>
		constexpr auto MinDodgeRollMovementPercent = 0x90; // float
		constexpr auto DodgeRollCheckDistance = 0x94; // float
		constexpr auto MaximumHeightChangePerCheckDistance = 0x98; // float
	}

	namespace n_UKSBTTask_RunBehaviorForTarget {
		constexpr auto SourceKeyVector = 0x78; // TArray<FBlackboardKeySelector>
		constexpr auto TargetKeyVector = 0x88; // TArray<FBlackboardKeySelector>
		constexpr auto SourceFloatVector = 0x98; // TArray<float>
		constexpr auto TargetFloatKeyVector = 0xa8; // TArray<FBlackboardKeySelector>
		constexpr auto TempBools = 0xb8; // TArray<bool>
		constexpr auto TempClasses = 0xc8; // TArray<UObject*>
		constexpr auto TempEnums = 0xd8; // TArray<char>
		constexpr auto TempFloats = 0xe8; // TArray<float>
		constexpr auto TempInts = 0xf8; // TArray<int32_t>
		constexpr auto TempNames = 0x108; // TArray<FName>
		constexpr auto TempNativeEnums = 0x118; // TArray<char>
		constexpr auto TempObjects = 0x128; // TArray<UObject*>
		constexpr auto TempRotators = 0x138; // TArray<FRotator>
		constexpr auto TempStrings = 0x148; // TArray<FString>
		constexpr auto TempVectors = 0x158; // TArray<FVector>
	}

	namespace n_UDatasmithGLTFSceneImportData {
		constexpr auto Generator = 0x28; // FString
		constexpr auto Version = 0x38; // float
		constexpr auto Author = 0x40; // FString
		constexpr auto License = 0x50; // FString
		constexpr auto Source = 0x60; // FString
	}

	namespace n_UTracerStaticMeshPoolComponent {
		constexpr auto PooledTraceStaticMeshComponentClass = 0xd8; // UTracerStaticMeshComponent*
		constexpr auto UnusedComponentsArray = 0xe0; // TArray<UTracerStaticMeshComponent*>
		constexpr auto UsedComponentsSet = 0xf0; // TSet<UTracerStaticMeshComponent*>
		constexpr auto PeekedTracerStaticMeshComponent = 0x140; // UTracerStaticMeshComponent*
	}

	namespace n_UWBP_CosmeticItem_TitleEmpty_C {
		constexpr auto Image_76 = 0x520; // UImage*
	}

	namespace n_UTcpMessagingSettings {
		constexpr auto EnableTransport = 0x28; // bool
		constexpr auto ListenEndpoint = 0x30; // FString
		constexpr auto ConnectToEndpoints = 0x40; // TArray<FString>
		constexpr auto ConnectionRetryDelay = 0x50; // int32_t
		constexpr auto bStopServiceWhenAppDeactivates = 0x54; // bool
	}

	namespace n_USoundConcurrency {
		constexpr auto Concurrency = 0x28; // FSoundConcurrencySettings
	}

	namespace n_UParticleModuleVectorFieldGlobal {
		constexpr auto bOverrideGlobalVectorFieldTightness = 0x30; // char : 1
		constexpr auto GlobalVectorFieldScale = 0x34; // float
		constexpr auto GlobalVectorFieldTightness = 0x38; // float
	}

	namespace n_UMockDataMeshTrackerComponent {
		constexpr auto OnMeshTrackerUpdated = 0x208; // FMulticastInlineDelegate
		constexpr auto ScanWorld = 0x218; // bool
		constexpr auto RequestNormals = 0x219; // bool
		constexpr auto RequestVertexConfidence = 0x21a; // bool
		constexpr auto VertexColorMode = 0x21b; // EMeshTrackerVertexColorMode
		constexpr auto BlockVertexColors = 0x220; // TArray<FColor>
		constexpr auto VertexColorFromConfidenceZero = 0x230; // FLinearColor
		constexpr auto VertexColorFromConfidenceOne = 0x240; // FLinearColor
		constexpr auto UpdateInterval = 0x250; // float
		constexpr auto MRMesh = 0x258; // UMRMeshComponent*
	}

	namespace n_ALobbyAnnouncer_C {
		constexpr auto UberGraphFrame = 0x340; // FPointerToUberGraphFrame
		constexpr auto GameInstance = 0x348; // UKSGameInstance*
	}

	namespace n_ALevelBounds {
		constexpr auto BoxComponent = 0x220; // UBoxComponent*
		constexpr auto bAutoUpdateBounds = 0x228; // bool
	}

	namespace n_UInteractiveToolManager {
		constexpr auto ActiveLeftTool = 0x30; // UInteractiveTool*
		constexpr auto ActiveRightTool = 0x38; // UInteractiveTool*
		constexpr auto ToolBuilders = 0x90; // TMap<FString, UInteractiveToolBuilder*>
	}

	namespace n_UWBP_RogueMasteryIcon_C {
		constexpr auto background = 0x238; // UImage*
		constexpr auto BadgeSwitcher = 0x240; // UWidgetSwitcher*
		constexpr auto MasteryLevel = 0x248; // UTextBlock*
		constexpr auto MaxMastery = 0x250; // UImage*
		constexpr auto MaxMasteryWrapper = 0x258; // USizeBox*
		constexpr auto RegularMastery = 0x260; // UOverlay*
	}

	namespace n_AARSkyLight {
		constexpr auto CaptureProbe = 0x230; // UAREnvironmentCaptureProbe*
	}

	namespace n_UGizmoBaseComponent {
		constexpr auto Color = 0x430; // FLinearColor
		constexpr auto HoverSizeMultiplier = 0x440; // float
		constexpr auto PixelHitDistanceThreshold = 0x444; // float
	}

	namespace n_UKSMeleeTargetingModule {
		constexpr auto bHasLungeTarget = 0x3a8; // bool
		constexpr auto bHasThrowTarget = 0x3a9; // bool
		constexpr auto MeleeAsset = 0x3b0; // UKSWeaponAsset_Melee*
		constexpr auto ImpactOnCharacterComponentSize = 0x3b8; // FVector
		constexpr auto ImpactOnCharacterComponentMaterial = 0x3c8; // UMaterialInterface*
		constexpr auto ImpactOnCharacterColorParameterName = 0x3d0; // FName
		constexpr auto ImpactOnCharacterCookParameterName = 0x3d8; // FName
		constexpr auto ImpactOnCharacterMesh = 0x3e0; // UStaticMesh*
		constexpr auto ImpactOnCharacterMaterialInstance = 0x3e8; // UMaterialInstanceDynamic*
		constexpr auto ImpactOnCharacterComponent = 0x3f0; // UStaticMeshComponent*
	}

	namespace n_UPComGameEngine {
		constexpr auto bRedirectLogsToConsole = 0xeb8; // bool
		constexpr auto bAllowReloadingDefaultLevel = 0xeb9; // bool
	}

	namespace n_AAkAmbientSound {
		constexpr auto AkAudioEvent = 0x220; // UAkAudioEvent*
		constexpr auto AkComponent = 0x228; // UAkComponent*
		constexpr auto StopWhenOwnerIsDestroyed = 0x230; // bool
		constexpr auto AutoPost = 0x231; // bool
		constexpr auto ForceNoTickingOnAkComponent = 0x232; // bool
	}

	namespace n_UCableComponent {
		constexpr auto bUpdateOnlyIfRendered = 0x458; // bool
		constexpr auto bAttachStart = 0x459; // bool
		constexpr auto bAttachEnd = 0x45a; // bool
		constexpr auto AttachEndTo = 0x460; // FComponentReference
		constexpr auto AttachEndToSocketName = 0x488; // FName
		constexpr auto EndLocation = 0x490; // FVector
		constexpr auto CableLength = 0x49c; // float
		constexpr auto NumSegments = 0x4a0; // int32_t
		constexpr auto SubstepTime = 0x4a4; // float
		constexpr auto SolverIterations = 0x4a8; // int32_t
		constexpr auto bEnableStiffness = 0x4ac; // bool
		constexpr auto bEnableCollision = 0x4ad; // bool
		constexpr auto CollisionFriction = 0x4b0; // float
		constexpr auto CableForce = 0x4b4; // FVector
		constexpr auto CableGravityScale = 0x4c0; // float
		constexpr auto CableWidth = 0x4c4; // float
		constexpr auto NumSides = 0x4c8; // int32_t
		constexpr auto TileMaterial = 0x4cc; // float
	}

	namespace n_UCurveFloat {
		constexpr auto FloatCurve = 0x30; // FRichCurve
		constexpr auto bIsEventCurve = 0xb0; // bool
	}

	namespace n_UBlackboardKeyType_Enum {
		constexpr auto EnumType = 0x30; // UEnum*
		constexpr auto EnumName = 0x38; // FString
		constexpr auto bIsEnumNameValid = 0x48; // char : 1
	}

	namespace n_UKSAIActorCollection {
		constexpr auto DropLocations = 0xb0; // TArray<AKSDropLocation*>
		constexpr auto BotNameTable = 0xc0; // UDataTable*
	}

	namespace n_UExplosiveStakeMeleeWeaponComponent_C {
		constexpr auto IsPlayingAbilityVO = 0x15c8; // bool
		constexpr auto K2Node_Event_DeltaSeconds = 0x15cc; // float
		constexpr auto K2Node_Event_OldState = 0x15d0; // EWeaponStateNew
		constexpr auto K2Node_Event_NewState = 0x15d1; // EWeaponStateNew
		constexpr auto K2Node_SwitchEnum_CmpSuccess = 0x15d2; // bool
		constexpr auto CallFunc_Get_Character_Anim_Instance_Anim_Inst = 0x15d8; // UKSCharacterAnimInst*
		constexpr auto Temp_struct_Variable = 0x15e0; // TArray<FAkExternalSourceInfo>
		constexpr auto Temp_name_Variable = 0x15f0; // FName
		constexpr auto CallFunc_GetAudioEvent_Priority = 0x15f8; // int32_t
		constexpr auto Temp_delegate_Variable = 0x15fc; // FDelegate
	}

	namespace n_AEnvironmentVolume {
		constexpr auto EnvironmentTag = 0x260; // FName
	}

	namespace n_UKSWeaponPropManagerComponent {
		constexpr auto ActiveNamelessProps = 0x188; // TArray<FActiveWeaponProp>
		constexpr auto ActiveProps = 0x198; // TMap<FPropIdentifier, FActiveWeaponProp>
		constexpr auto LegacyProps = 0x1e8; // TMap<FPropIdentifier, FLegacyWeaponProp>
		constexpr auto bAllowAnimNotifyStatesToCreatePropSpawners = 0x288; // bool
	}

	namespace n_UWBP_check_box_C {
		constexpr auto Button_809 = 0x238; // UButton*
		constexpr auto highlightborder = 0x240; // UImage*
		constexpr auto Image_343 = 0x248; // UImage*
		constexpr auto Image_619 = 0x250; // UImage*
		constexpr auto Image_621 = 0x258; // UImage*
		constexpr auto Image_622 = 0x260; // UImage*
		constexpr auto Image_1282 = 0x268; // UImage*
		constexpr auto Image_1357 = 0x270; // UImage*
		constexpr auto Image_1832 = 0x278; // UImage*
	}

	namespace n_UKSAnalogStickFilter {
		constexpr auto StickType = 0x28; // EKSAnalogStickType
		constexpr auto PlayerInput = 0x30; // UKSPlayerInput*
	}

	namespace n_UWBP_QuickPlay_QueueTypeHeader_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto QueueType = 0x240; // UTextBlock*
	}

	namespace n_UNiagaraDataInterfaceAudioSpectrum {
		constexpr auto Resolution = 0x38; // int32_t
		constexpr auto MinimumFrequency = 0x3c; // float
		constexpr auto MaximumFrequency = 0x40; // float
		constexpr auto NoiseFloorDb = 0x44; // float
	}

	namespace n_UKSKillCardWidget {
		constexpr auto DisplayDuration = 0x520; // float
	}

	namespace n_UKSModInst_OverTimeEffect {
		constexpr auto EffectTimer = 0x1b8; // UKSTimerComponent*
		constexpr auto EffectTickPeriod = 0x1c0; // float
		constexpr auto EffectTickCount = 0x1c4; // int32_t
		constexpr auto bShouldImmediatelyEffect = 0x1c8; // bool
		constexpr auto bResetTickCountOnStackIncrease = 0x1c9; // bool
		constexpr auto TickCount = 0x1cc; // int32_t
	}

	namespace n_UKSSettingsWidget {
		constexpr auto WidgetConfig = 0x520; // FKSSettingsWidgetConfig
		constexpr auto WidgetContainerTitle = 0x530; // FText
		constexpr auto WidgetContainerDescription = 0x548; // FText
		constexpr auto bHasPreview = 0x560; // bool
		constexpr auto WidgetContainerPreviewWidget = 0x568; // UKSSettingsPreview*
		constexpr auto SettingsInfo = 0x570; // UKSSettingsInfoBase*
	}

	namespace n_UAISenseConfig_Hearing {
		constexpr auto Implementation = 0x48; // UAISense_Hearing*
		constexpr auto HearingRange = 0x50; // float
		constexpr auto LoSHearingRange = 0x54; // float
		constexpr auto bUseLoSHearing = 0x58; // char : 1
		constexpr auto DetectionByAffiliation = 0x5c; // FAISenseAffiliationFilter
	}

	namespace n_UWBP_WeaponMasteryMeter_C {
		constexpr auto UberGraphFrame = 0x548; // FPointerToUberGraphFrame
		constexpr auto CompletedPulse = 0x550; // UWidgetAnimation*
		constexpr auto AnimOnLevelUp = 0x558; // UWidgetAnimation*
		constexpr auto AltDescText = 0x560; // UTextBlock*
		constexpr auto CanvasPanel_1 = 0x568; // UCanvasPanel*
		constexpr auto ClassMasteryBadgeWrapper = 0x570; // USizeBox*
		constexpr auto EmblemImageSwitcher = 0x578; // UWidgetSwitcher*
		constexpr auto GlitchOverlay = 0x580; // UImage*
		constexpr auto Image = 0x588; // UImage*
		constexpr auto Image_156 = 0x590; // UImage*
		constexpr auto Image_162 = 0x598; // UImage*
		constexpr auto LevelRewardWrapper = 0x5a0; // USizeBox*
		constexpr auto MasteryRewardCalloutWrapper = 0x5a8; // UVerticalBox*
		constexpr auto MasteryRewardsCallout = 0x5b0; // UHorizontalBox*
		constexpr auto MasteryRewardsTextHitTarget = 0x5b8; // UButton*
		constexpr auto NextRewardLabel = 0x5c0; // UTextBlock*
		constexpr auto PageTitle = 0x5c8; // UVerticalBox*
		constexpr auto PageTitle_2 = 0x5d0; // UVerticalBox*
		constexpr auto ProgressAmountTextSmall = 0x5d8; // UTextBlock*
		constexpr auto ProgressGroup = 0x5e0; // UVerticalBox*
		constexpr auto ProgressGroupSwitcher = 0x5e8; // UWidgetSwitcher*
		constexpr auto ProgressInfoBox = 0x5f0; // UVerticalBox*
		constexpr auto ProgressInfoBoxSmall = 0x5f8; // UHorizontalBox*
		constexpr auto ProgressInfoSwitcher = 0x600; // UWidgetSwitcher*
		constexpr auto ProgressNameText = 0x608; // UTextBlock*
		constexpr auto ProgressNameTextSmall = 0x610; // UTextBlock*
		constexpr auto RewardShimmer = 0x618; // UImage*
		constexpr auto Tooltip = 0x620; // UHorizontalBox*
		constexpr auto ViewMasteryRewardsCalloutText = 0x628; // UTextBlock*
		constexpr auto ViewRewardsGamepadPrompt = 0x630; // UWBP_KeyCallout_C*
		constexpr auto ViewRewardsKBMPrompt = 0x638; // UWBP_InputCallout_C*
		constexpr auto ViewRewardsSwitcher = 0x640; // UWidgetSwitcher*
		constexpr auto WBP_KSCosmeticItemDisplay_3 = 0x648; // UWBP_KSCosmeticItemDisplay_C*
		constexpr auto WBP_WeaponCategoryMasteryBadge = 0x650; // UWBP_WeaponCategoryMasteryBadge_C*
		constexpr auto WBP_WeaponMasteryBadgeLarge = 0x658; // UWBP_WeaponMasteryBadgeLarge_C*
		constexpr auto WeaponCategoryPercentage = 0x660; // UWBP_MasteryPointsCount_C*
		constexpr auto WeaponCategoryText = 0x668; // UTextBlock*
		constexpr auto WeaponCategoryText_2 = 0x670; // UTextBlock*
		constexpr auto WeaponCategoryXP = 0x678; // UWBP_MasteryPointsCount_C*
		constexpr auto WeaponMasteryBadgeWrapper = 0x680; // USizeBox*
		constexpr auto WeaponNameText = 0x688; // UTextBlock*
		constexpr auto WeaponNameText_2 = 0x690; // UTextBlock*
		constexpr auto WeaponXP = 0x698; // UWBP_MasteryPointsCount_C*
		constexpr auto XPBar = 0x6a0; // UWBP_ProgressEarnedBar_C*
		constexpr auto XPBarCompletedGlow = 0x6a8; // UWBP_AdditiveImage_C*
		constexpr auto XPBarShimmer = 0x6b0; // UImage*
		constexpr auto MasteryType = 0x6b8; // EKSWeaponMasteryType
		constexpr auto AnimBaseCount = 0x6bc; // int32_t
		constexpr auto AnimStartProgressCount = 0x6c0; // int32_t
		constexpr auto AnimTargetProgressCount = 0x6c4; // int32_t
		constexpr auto AnimFinalProgressCount = 0x6c8; // int32_t
		constexpr auto AnimIsToFullBar = 0x6cc; // bool
		constexpr auto LevelUpComplete = 0x6d0; // FMulticastInlineDelegate
	}

	namespace n_UParticleSystemPoolComponentBase {
		constexpr auto PooledParticleSystemComponentClass = 0xd8; // UParticleSystemComponent*
		constexpr auto UnusedComponentsArray = 0xe0; // TArray<UParticleSystemComponent*>
		constexpr auto UsedComponentsSet = 0xf0; // TSet<UParticleSystemComponent*>
		constexpr auto PeekedParticleSystemComponent = 0x140; // UParticleSystemComponent*
		constexpr auto bClearTemplateWhenReturnedToPool = 0x148; // bool
	}

	namespace n_AKSWaterFXVolume {
		constexpr auto WaterFXUpdatePeriod = 0x258; // float
		constexpr auto SurfaceOffsetZ = 0x25c; // float
		constexpr auto ActorCountdownMap = 0x260; // TMap<AActor*, float>
		constexpr auto CachedBounds = 0x2b0; // FBoxSphereBounds
	}

	namespace n_UInterpTrackInstFloatParticleParam {
		constexpr auto ResetFloat = 0x28; // float
	}

	namespace n_UMaterialExpressionBlendMaterialAttributes {
		constexpr auto A = 0x40; // FMaterialAttributesInput
		constexpr auto B = 0x58; // FMaterialAttributesInput
		constexpr auto Alpha = 0x70; // FExpressionInput
		constexpr auto PixelAttributeBlendType = 0x84; // EMaterialAttributeBlend
		constexpr auto VertexAttributeBlendType = 0x85; // EMaterialAttributeBlend
	}

	namespace n_USynth2DSlider {
		constexpr auto ValueX = 0x110; // float
		constexpr auto ValueY = 0x114; // float
		constexpr auto ValueXDelegate = 0x118; // FDelegate
		constexpr auto ValueYDelegate = 0x128; // FDelegate
		constexpr auto WidgetStyle = 0x138; // FSynth2DSliderStyle
		constexpr auto SliderHandleColor = 0x3f0; // FLinearColor
		constexpr auto IndentHandle = 0x400; // bool
		constexpr auto Locked = 0x401; // bool
		constexpr auto StepSize = 0x404; // float
		constexpr auto IsFocusable = 0x408; // bool
		constexpr auto OnMouseCaptureBegin = 0x410; // FMulticastInlineDelegate
		constexpr auto OnMouseCaptureEnd = 0x420; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureBegin = 0x430; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureEnd = 0x440; // FMulticastInlineDelegate
		constexpr auto OnValueChangedX = 0x450; // FMulticastInlineDelegate
		constexpr auto OnValueChangedY = 0x460; // FMulticastInlineDelegate
	}

	namespace n_USettingsInfo_Language_C {
		constexpr auto UberGraphFrame = 0x108; // FPointerToUberGraphFrame
		constexpr auto CultureFriendlyNames = 0x110; // UDataTable*
	}

	namespace n_UParticleModuleTypeDataBeam2 {
		constexpr auto BeamMethod = 0x30; // EBeam2Method
		constexpr auto TextureTile = 0x34; // int32_t
		constexpr auto TextureTileDistance = 0x38; // float
		constexpr auto Sheets = 0x3c; // int32_t
		constexpr auto MaxBeamCount = 0x40; // int32_t
		constexpr auto Speed = 0x44; // float
		constexpr auto InterpolationPoints = 0x48; // int32_t
		constexpr auto bAlwaysOn = 0x4c; // char : 1
		constexpr auto UpVectorStepSize = 0x50; // int32_t
		constexpr auto BranchParentName = 0x54; // FName
		constexpr auto Distance = 0x60; // FRawDistributionFloat
		constexpr auto TaperMethod = 0x90; // EBeamTaperMethod
		constexpr auto TaperFactor = 0x98; // FRawDistributionFloat
		constexpr auto TaperScale = 0xc8; // FRawDistributionFloat
		constexpr auto RenderGeometry = 0xf8; // char : 1
		constexpr auto RenderDirectLine = 0xf8; // char : 1
		constexpr auto RenderLines = 0xf8; // char : 1
		constexpr auto RenderTessellation = 0xf8; // char : 1
	}

	namespace n_UWrapBoxSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto bFillEmptySpace = 0x48; // bool
		constexpr auto FillSpanWhenLessThan = 0x4c; // float
		constexpr auto HorizontalAlignment = 0x50; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x51; // EVerticalAlignment
	}

	namespace n_UEnvQuery {
		constexpr auto QueryName = 0x30; // FName
		constexpr auto Options = 0x38; // TArray<UEnvQueryOption*>
	}

	namespace n_AKSBuild_Shop {
		constexpr auto ShopperManagers = 0x3a0; // TArray<UKSInteractionManager*>
	}

	namespace n_UWBP_PlayerProfileScreen_AccountPanel_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto ComingSoon = 0x528; // UTextBlock*
		constexpr auto ContentBox = 0x530; // UVerticalBox*
		constexpr auto LockIcon = 0x538; // UImage*
		constexpr auto Title = 0x540; // UTextBlock*
		constexpr auto WBP_PanelButton = 0x548; // UWBP_PanelButton_C*
		constexpr auto WBP_PlayerIdentity_Full = 0x550; // UWBP_PlayerIdentity_Full_C*
		constexpr auto IsDisabled = 0x558; // bool
	}

	namespace n_USkinnedAnimInstance {
		constexpr auto SkinObject = 0x2b8; // UMultiSkinObject*
	}

	namespace n_UVectorFieldStatic {
		constexpr auto SizeX = 0x48; // int32_t
		constexpr auto SizeY = 0x4c; // int32_t
		constexpr auto SizeZ = 0x50; // int32_t
		constexpr auto bAllowCPUAccess = 0x54; // bool
		constexpr auto CPUData = 0x88; // TArray<FVector4>
	}

	namespace n_UARCandidateImage {
		constexpr auto CandidateTexture = 0x30; // UTexture2D*
		constexpr auto FriendlyName = 0x38; // FString
		constexpr auto Width = 0x48; // float
		constexpr auto Height = 0x4c; // float
		constexpr auto Orientation = 0x50; // EARCandidateImageOrientation
	}

	namespace n_USoundNodeLooping {
		constexpr auto LoopCount = 0x48; // int32_t
		constexpr auto bLoopIndefinitely = 0x4c; // char : 1
	}

	namespace n_URewardsTrackSavedPosition_C {
		constexpr auto Page = 0x28; // int32_t
		constexpr auto Index = 0x2c; // int32_t
		constexpr auto Context = 0x30; // FString
	}

	namespace n_UAISense_Damage {
		constexpr auto RegisteredEvents = 0x80; // TArray<FAIDamageEvent>
	}

	namespace n_UMaterialExpressionLandscapeLayerSwitch {
		constexpr auto LayerUsed = 0x40; // FExpressionInput
		constexpr auto LayerNotUsed = 0x54; // FExpressionInput
		constexpr auto ParameterName = 0x68; // FName
		constexpr auto PreviewUsed = 0x70; // char : 1
		constexpr auto ExpressionGUID = 0x74; // FGuid
	}

	namespace n_UMaterialExpressionGetMaterialAttributes {
		constexpr auto MaterialAttributes = 0x40; // FMaterialAttributesInput
		constexpr auto AttributeGetTypes = 0x58; // TArray<FGuid>
	}

	namespace n_USoundNodeWavePlayer {
		constexpr auto SoundWaveAssetPtr = 0x48; // TSoftObjectPtr<USoundWave>
		constexpr auto SoundWave = 0x70; // USoundWave*
		constexpr auto bLooping = 0x78; // char : 1
	}

	namespace n_UPrimaryAssetLabel {
		constexpr auto Rules = 0x30; // FPrimaryAssetRules
		constexpr auto bLabelAssetsInMyDirectory = 0x3c; // char : 1
		constexpr auto bIsRuntimeLabel = 0x3c; // char : 1
		constexpr auto ExplicitAssets = 0x40; // TArray<TSoftObjectPtr<UObject>>
		constexpr auto ExplicitBlueprints = 0x50; // TArray<TSoftClassPtr<UObject>>
		constexpr auto AssetCollection = 0x60; // FCollectionReference
	}

	namespace n_AKSProjectile_Pierce {
		constexpr auto ProjectileEdgeTolerance = 0x950; // float
		constexpr auto TraceChannel = 0x954; // ETraceTypeQuery
		constexpr auto ObjectTypes = 0x958; // TArray<EObjectTypeQuery>
		constexpr auto bDrawDebugLine = 0x968; // bool
		constexpr auto AlreadyHitActors = 0x970; // TArray<AActor*>
		constexpr auto bHasHitWall = 0x980; // bool
		constexpr auto bHasHitEnemy = 0x981; // bool
	}

	namespace n_UKSShopRuleComponent {
		constexpr auto StartingCash = 0xb8; // int32_t
		constexpr auto StartingCashRoundBonus = 0xbc; // EStartingCashRoundBonus
		constexpr auto bResetShopsOnTeamSidesFlipped = 0xbd; // bool
		constexpr auto TypesToNotResetOnTeamSidesFlipped = 0xc0; // TSet<EShopItemType>
		constexpr auto bResetShopsOnRoundPrepare = 0x110; // bool
		constexpr auto TypesToNotResetOnRoundPrepare = 0x118; // TSet<EShopItemType>
		constexpr auto bLockUndoEachRound = 0x168; // bool
		constexpr auto bAllowShopAccessWhileDead = 0x169; // bool
		constexpr auto bDisableShopOnClose = 0x16a; // bool
		constexpr auto bDisableShopOnSignificantAction = 0x16b; // bool
		constexpr auto bAllowUnmasteredWeapons = 0x16c; // bool
		constexpr auto bCircleGameShopEnabled = 0x16d; // bool
		constexpr auto ShopClass = 0x170; // AKSPlayerShop*
		constexpr auto GameShopClass = 0x178; // AKSGameShop*
		constexpr auto PlayerShops = 0x180; // TMap<int64_t, AKSPlayerShop*>
		constexpr auto ShopPricing = 0x220; // FKSShopPricing
		constexpr auto PermanentItems = 0x328; // TSet<EShopItemType>
		constexpr auto StartActiveItems = 0x378; // TSet<EShopItemType>
		constexpr auto OneTimePurchaseItems = 0x3c8; // TSet<EShopItemType>
		constexpr auto ExhaustibleItems = 0x418; // TSet<EShopItemType>
		constexpr auto RoundItems = 0x468; // TSet<EShopItemType>
		constexpr auto PrerequisiteMap = 0x4b8; // TMap<EShopItemType, FShopItemList>
		constexpr auto RestrictionMap = 0x508; // TMap<EShopItemType, FShopItemList>
		constexpr auto MaxCategoryPurchases = 0x558; // FKSMaxCategoryPurchases
		constexpr auto GlobalGambitList = 0x578; // TArray<FKSGlobalGambitList>
		constexpr auto GlobalPerkList = 0x5b8; // FKSGlobalPerkList
		constexpr auto ShopOptions = 0x638; // FShopOptions
	}

	namespace n_UConsole {
		constexpr auto ConsoleTargetPlayer = 0x38; // ULocalPlayer*
		constexpr auto DefaultTexture_Black = 0x40; // UTexture2D*
		constexpr auto DefaultTexture_White = 0x48; // UTexture2D*
		constexpr auto HistoryBuffer = 0x68; // TArray<FString>
		constexpr auto DefaultHeight = 0x130; // float
	}

	namespace n_UKSWeaponComponentWidget {
		constexpr auto WeaponComponent = 0x520; // TWeakObjectPtr<UKSWeaponComponent>
		constexpr auto EquipmentId = 0x528; // FKSEquipmentId
	}

	namespace n_UKSBRC_GiveEquipment {
		constexpr auto bAddToLoadout = 0xc8; // bool
		constexpr auto ItemsToGive = 0xd0; // TArray<UKSItem*>
		constexpr auto SlotsToRemove = 0xe0; // TArray<FGameplayTag>
	}

	namespace n_UMaterialExpressionQualitySwitch {
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto Inputs = 0x54; // FExpressionInput [0x3]
	}

	namespace n_UMaterialExpressionSkyAtmosphereLightDiskLuminance {
		constexpr auto LightIndex = 0x40; // int32_t
	}

	namespace n_UKSPlayerMod_RocketDash {
		constexpr auto Priority = 0x330; // uint32_t
		constexpr auto DodgeRollCooldownMultiplier = 0x334; // float
		constexpr auto DodgeRollDistanceMultiplier = 0x338; // float
		constexpr auto DodgeRollSpeedMultiplier = 0x33c; // float
		constexpr auto DodgeRollLockoutMultiplier = 0x340; // float
		constexpr auto MidairDodgeRollLimit = 0x344; // uint32_t
	}

	namespace n_UPhysicalMaterial {
		constexpr auto Friction = 0x28; // float
		constexpr auto FrictionCombineMode = 0x2c; // EFrictionCombineMode
		constexpr auto bOverrideFrictionCombineMode = 0x2d; // bool
		constexpr auto Restitution = 0x30; // float
		constexpr auto RestitutionCombineMode = 0x34; // EFrictionCombineMode
		constexpr auto bOverrideRestitutionCombineMode = 0x35; // bool
		constexpr auto Density = 0x38; // float
		constexpr auto RaiseMassToPower = 0x3c; // float
		constexpr auto DestructibleDamageThresholdScale = 0x40; // float
		constexpr auto PhysicalMaterialProperty = 0x48; // UPhysicalMaterialPropertyBase*
		constexpr auto SurfaceType = 0x50; // EPhysicalSurface
		constexpr auto TireFrictionScale = 0x54; // float
		constexpr auto TireFrictionScales = 0x58; // TArray<FTireFrictionScalePair>
	}

	namespace n_UBTDecorator_SetTagCooldown {
		constexpr auto CooldownTag = 0x68; // FGameplayTag
		constexpr auto CooldownDuration = 0x70; // float
		constexpr auto bAddToExistingDuration = 0x74; // bool
	}

	namespace n_UWidgetAnimationPlayCallbackProxy {
		constexpr auto Finished = 0x28; // FMulticastInlineDelegate
	}

	namespace n_UGeometryCacheCodecRaw {
		constexpr auto DummyProperty = 0x38; // int32_t
	}

	namespace n_UKSActivityManagerBase {
		constexpr auto GameInstance = 0x40; // TWeakObjectPtr<UKSGameInstance>
		constexpr auto GameMode = 0x48; // TWeakObjectPtr<AKSGameMode>
		constexpr auto ActivityInstancesPerPlayer = 0xf0; // TMap<int64_t, UKSPlayerActivityInstanceContainer*>
		constexpr auto VendorsLoadGroupId = 0x190; // int32_t
		constexpr auto Activities = 0x198; // TArray<TSoftObjectPtr<UKSActivity>>
		constexpr auto PlayerControllers = 0x1a8; // TArray<TWeakObjectPtr<AKSPlayerController>>
		constexpr auto SetupPhase = 0x208; // EKSActivityManagerSetupPhase
	}

	namespace n_UWBP_VersionNumber_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto VersionDisplay = 0x528; // UTextBlock*
	}

	namespace n_UWBP_CustomizeBorder_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto ShowAnim = 0x528; // UWidgetAnimation*
		constexpr auto ItemContainer = 0x530; // UKSSortableGridPanel*
		constexpr auto ScrollBox_1 = 0x538; // UScrollBox*
		constexpr auto WBP_CosmeticItem_Border = 0x540; // UWBP_CosmeticItem_Border_C*
		constexpr auto WBP_CosmeticItem_Border_2 = 0x548; // UWBP_CosmeticItem_Border_C*
		constexpr auto WBP_CosmeticItem_Border_3 = 0x550; // UWBP_CosmeticItem_Border_C*
		constexpr auto WBP_CosmeticItem_Border_4 = 0x558; // UWBP_CosmeticItem_Border_C*
		constexpr auto WBP_CosmeticItem_Border_5 = 0x560; // UWBP_CosmeticItem_Border_C*
		constexpr auto WBP_CosmeticItem_Border_6 = 0x568; // UWBP_CosmeticItem_Border_C*
		constexpr auto WBP_CosmeticItem_Border_7 = 0x570; // UWBP_CosmeticItem_Border_C*
		constexpr auto WBP_CosmeticItem_Border_8 = 0x578; // UWBP_CosmeticItem_Border_C*
		constexpr auto WBP_PlayerIDCustomize = 0x580; // UWBP_PlayerIDCustomize_C*
		constexpr auto BorderItems = 0x588; // TArray<UWBP_CosmeticItem_Border_C*>
		constexpr auto EquippedBorder = 0x598; // UWBP_CosmeticItem_Border_C*
		constexpr auto LoadoutDataFactory = 0x5a0; // UKSLoadoutDataFactory*
		constexpr auto HoveredItem = 0x5a8; // UPlatformInventoryItem*
		constexpr auto VisibleGridRows = 0x5b0; // int32_t
		constexpr auto VisibleGridColumns = 0x5b4; // int32_t
	}

	namespace n_UIntervalGizmo {
		constexpr auto StateTarget = 0x38; // UGizmoTransformChangeStateTarget*
		constexpr auto TransformProxy = 0x50; // UTransformProxy*
		constexpr auto ActiveComponents = 0x58; // TArray<UPrimitiveComponent*>
		constexpr auto ActiveGizmos = 0x68; // TArray<UInteractiveGizmo*>
		constexpr auto AxisYSource = 0x90; // UGizmoComponentAxisSource*
		constexpr auto AxisZSource = 0x98; // UGizmoComponentAxisSource*
	}

	namespace n_UKSAcquisitionManager {
		constexpr auto OnAcquisitionReady = 0x58; // FMulticastInlineDelegate
		constexpr auto QueuedAcquisitions = 0x78; // TArray<UKSAcquisition*>
		constexpr auto PendingAcquisition = 0x88; // UKSAcquisition*
		constexpr auto PendingEquipables = 0x90; // TArray<UKSEquipOnAcquisitionData*>
	}

	namespace n_UForceFeedbackAttenuation {
		constexpr auto Attenuation = 0x28; // FForceFeedbackAttenuationSettings
	}

	namespace n_UKSWeaponAttachment_ScopeMultiply {
		constexpr auto ScopeMultiplier = 0x2f8; // float
	}

	namespace n_ACharacter {
		constexpr auto Mesh = 0x280; // USkeletalMeshComponent*
		constexpr auto CharacterMovement = 0x288; // UCharacterMovementComponent*
		constexpr auto CapsuleComponent = 0x290; // UCapsuleComponent*
		constexpr auto BasedMovement = 0x298; // FBasedMovementInfo
		constexpr auto ReplicatedBasedMovement = 0x2c8; // FBasedMovementInfo
		constexpr auto AnimRootMotionTranslationScale = 0x2f8; // float
		constexpr auto BaseTranslationOffset = 0x2fc; // FVector
		constexpr auto BaseRotationOffset = 0x310; // FQuat
		constexpr auto ReplicatedServerLastTransformUpdateTimeStamp = 0x320; // float
		constexpr auto ReplayLastTransformUpdateTimeStamp = 0x324; // float
		constexpr auto ReplicatedMovementMode = 0x328; // char
		constexpr auto bInBaseReplication = 0x329; // bool
		constexpr auto CrouchedEyeHeight = 0x32c; // float
		constexpr auto bIsCrouched = 0x330; // char : 1
		constexpr auto bProxyIsJumpForceApplied = 0x330; // char : 1
		constexpr auto bPressedJump = 0x330; // char : 1
		constexpr auto bClientUpdating = 0x330; // char : 1
		constexpr auto bClientWasFalling = 0x330; // char : 1
		constexpr auto bClientResimulateRootMotion = 0x330; // char : 1
		constexpr auto bClientResimulateRootMotionSources = 0x330; // char : 1
		constexpr auto bSimGravityDisabled = 0x330; // char : 1
		constexpr auto bClientCheckEncroachmentOnNetUpdate = 0x331; // char : 1
		constexpr auto bServerMoveIgnoreRootMotion = 0x331; // char : 1
		constexpr auto bWasJumping = 0x331; // char : 1
		constexpr auto JumpKeyHoldTime = 0x334; // float
		constexpr auto JumpForceTimeRemaining = 0x338; // float
		constexpr auto ProxyJumpForceStartedTime = 0x33c; // float
		constexpr auto JumpMaxHoldTime = 0x340; // float
		constexpr auto JumpMaxCount = 0x344; // int32_t
		constexpr auto JumpCurrentCount = 0x348; // int32_t
		constexpr auto JumpCurrentCountPreJump = 0x34c; // int32_t
		constexpr auto OnReachedJumpApex = 0x358; // FMulticastInlineDelegate
		constexpr auto MovementModeChangedDelegate = 0x378; // FMulticastInlineDelegate
		constexpr auto OnCharacterMovementUpdated = 0x388; // FMulticastInlineDelegate
		constexpr auto SavedRootMotion = 0x398; // FRootMotionSourceGroup
		constexpr auto ClientRootMotionParams = 0x3d0; // FRootMotionMovementParams
		constexpr auto RootMotionRepMoves = 0x410; // TArray<FSimulatedRootMotionReplicatedMove>
		constexpr auto RepRootMotion = 0x420; // FRepRootMotionMontage
	}

	namespace n_UMaterialExpressionReflectionVectorWS {
		constexpr auto CustomWorldNormal = 0x40; // FExpressionInput
		constexpr auto bNormalizeCustomWorldNormal = 0x54; // char : 1
	}

	namespace n_URecoilProfileAsset {
		constexpr auto RecoilProfile = 0x30; // FRecoilProfile
		constexpr auto DontPlayRecoilMontage = 0x21c; // bool
	}

	namespace n_UKSWeaponHubHelper {
		constexpr auto WeaponCategoryDetailsTable = 0x28; // UDataTable*
		constexpr auto WeaponMasteryManager = 0x30; // UKSWeaponMasteryManager*
	}

	namespace n_UKSProjectileTargetingModule {
		constexpr auto StateValidators = 0x128; // TArray<FKSProjectileTargetingStateValidator>
		constexpr auto ProjectileSimFrequency = 0x138; // float
		constexpr auto MaxSimTime = 0x13c; // float
		constexpr auto InitialStrideTime = 0x140; // float
		constexpr auto ArcTemplate = 0x148; // UStaticMesh*
		constexpr auto ArcSegmentMaterials = 0x150; // TArray<UMaterialInterface*>
		constexpr auto FirstSegmentScalarParameterName = 0x160; // FName
		constexpr auto ArcColorParameterName = 0x168; // FName
		constexpr auto ArcCookParameterName = 0x170; // FName
		constexpr auto PostProcessStopLocationParameterName = 0x178; // FName
		constexpr auto PostProcessRadiusParameterName = 0x180; // FName
		constexpr auto bPostProcessParameterIndexed = 0x188; // bool
		constexpr auto ImpactComponentType = 0x189; // EKSProjectileTargetingHitComponentType
		constexpr auto BounceComponentType = 0x18a; // EKSProjectileTargetingHitComponentType
		constexpr auto ImpactComponentSize = 0x18c; // FVector
		constexpr auto BounceComponentSize = 0x198; // FVector
		constexpr auto ImpactComponentMaterial = 0x1a8; // UMaterialInterface*
		constexpr auto BounceComponentMaterial = 0x1b0; // UMaterialInterface*
		constexpr auto ImpactColorParameterName = 0x1b8; // FName
		constexpr auto ImpactCookParameterName = 0x1c0; // FName
		constexpr auto BounceColorParameterName = 0x1c8; // FName
		constexpr auto BounceCookParameterName = 0x1d0; // FName
		constexpr auto ImpactMesh = 0x1d8; // UStaticMesh*
		constexpr auto BounceMesh = 0x1e0; // UStaticMesh*
		constexpr auto SplineMeshAxisType = 0x1e8; // ESplineMeshAxis
		constexpr auto ArcSegmentScale = 0x1ec; // FVector2D
		constexpr auto BounceCount = 0x1f4; // int32_t
		constexpr auto MaxSegmentsPerBounceArc = 0x1f8; // int32_t
		constexpr auto TargetingDetailsWidgetClass = 0x200; // UKSTargetingDetailsWidget*
		constexpr auto ArcComponent = 0x208; // TArray<USplineMeshComponent*>
		constexpr auto ImpactMaterialInstance = 0x218; // UMaterialInstanceDynamic*
		constexpr auto BounceMaterialInstance = 0x220; // UMaterialInstanceDynamic*
		constexpr auto ArcSegmentMaterialInstances = 0x228; // TArray<UMaterialInstanceDynamic*>
		constexpr auto ImpactComponent = 0x238; // USceneComponent*
		constexpr auto BounceComponents = 0x240; // TArray<USceneComponent*>
		constexpr auto TargetingDetailsWidgetComponent = 0x250; // UWidgetComponent*
		constexpr auto TargetingDetailsWidget = 0x258; // UKSTargetingDetailsWidget*
		constexpr auto bTargetingVisualsInitialized = 0x260; // bool
		constexpr auto ProjectileAsset = 0x268; // UKSWeaponAsset_WithProjectile*
		constexpr auto ProjectileCDO = 0x270; // AKSProjectile*
		constexpr auto CachedPredictedPathResults = 0x288; // FPredictProjectilePathResult
		constexpr auto PredictedGrenadePathArcLength = 0x340; // float
	}

	namespace n_UDirectionalLightComponent {
		constexpr auto ShadowCascadeBiasDistribution = 0x338; // float
		constexpr auto bEnableLightShaftOcclusion = 0x33c; // char : 1
		constexpr auto OcclusionMaskDarkness = 0x340; // float
		constexpr auto OcclusionDepthRange = 0x344; // float
		constexpr auto LightShaftOverrideDirection = 0x348; // FVector
		constexpr auto WholeSceneDynamicShadowRadius = 0x354; // float
		constexpr auto DynamicShadowDistanceMovableLight = 0x358; // float
		constexpr auto DynamicShadowDistanceStationaryLight = 0x35c; // float
		constexpr auto DynamicShadowCascades = 0x360; // int32_t
		constexpr auto CascadeDistributionExponent = 0x364; // float
		constexpr auto CascadeTransitionFraction = 0x368; // float
		constexpr auto ShadowDistanceFadeoutFraction = 0x36c; // float
		constexpr auto bOnlyMovableObjectsInCascades = 0x370; // char : 1
		constexpr auto bUseInsetShadowsForMovableObjects = 0x370; // char : 1
		constexpr auto FarShadowCascadeCount = 0x374; // int32_t
		constexpr auto FarShadowDistance = 0x378; // float
		constexpr auto DistanceFieldShadowDistance = 0x37c; // float
		constexpr auto LightSourceAngle = 0x380; // float
		constexpr auto LightSourceSoftAngle = 0x384; // float
		constexpr auto TraceDistance = 0x388; // float
		constexpr auto LightmassSettings = 0x38c; // FLightmassDirectionalLightSettings
		constexpr auto bCastModulatedShadows = 0x39c; // char : 1
		constexpr auto ModulatedShadowColor = 0x3a0; // FColor
		constexpr auto ShadowAmount = 0x3a4; // float
		constexpr auto bUsedAsAtmosphereSunLight = 0x3a8; // char : 1
		constexpr auto AtmosphereSunLightIndex = 0x3ac; // int32_t
	}

	namespace n_USoundNodeOscillator {
		constexpr auto bModulateVolume = 0x48; // char : 1
		constexpr auto bModulatePitch = 0x48; // char : 1
		constexpr auto AmplitudeMin = 0x4c; // float
		constexpr auto AmplitudeMax = 0x50; // float
		constexpr auto FrequencyMin = 0x54; // float
		constexpr auto FrequencyMax = 0x58; // float
		constexpr auto OffsetMin = 0x5c; // float
		constexpr auto OffsetMax = 0x60; // float
		constexpr auto CenterMin = 0x64; // float
		constexpr auto CenterMax = 0x68; // float
	}

	namespace n_UKSActivityRewardCondition_TimeSinceDamagedByVictim {
		constexpr auto MinSecondsSinceLastDamage = 0x30; // float
		constexpr auto MaxSecondsSinceLastDamage = 0x34; // float
		constexpr auto SucceedIfNeverDamaged = 0x38; // bool
	}

	namespace n_UWidgetBlueprintGeneratedClass {
		constexpr auto WidgetTree = 0x328; // UWidgetTree*
		constexpr auto bAllowTemplate = 0x330; // char : 1
		constexpr auto bAllowDynamicCreation = 0x330; // char : 1
		constexpr auto bValidTemplate = 0x330; // char : 1
		constexpr auto bTemplateInitialized = 0x330; // char : 1
		constexpr auto bCookedTemplate = 0x330; // char : 1
		constexpr auto bClassRequiresNativeTick = 0x330; // char : 1
		constexpr auto Bindings = 0x338; // TArray<FDelegateRuntimeBinding>
		constexpr auto Animations = 0x348; // TArray<UWidgetAnimation*>
		constexpr auto NamedSlots = 0x358; // TArray<FName>
		constexpr auto TemplateAsset = 0x368; // TSoftObjectPtr<UUserWidget>
		constexpr auto Template = 0x390; // UUserWidget*
	}

	namespace n_UKSStoreItemWithPurchaseData {
		constexpr auto EquipOnPurchase = 0x58; // UKSEquipOnAcquisitionData*
	}

	namespace n_USourceEffectRingModulationPreset {
		constexpr auto Settings = 0x7c; // FSourceEffectRingModulationSettings
	}

	namespace n_UKSActivityRequirement_CustomMatch {
		constexpr auto RequireEnabled = 0x30; // bool
	}

	namespace n_UChaosGameplayEventDispatcher {
		constexpr auto CollisionEventRegistrations = 0x1c8; // TMap<UPrimitiveComponent*, FChaosHandlerSet>
		constexpr auto BreakEventRegistrations = 0x218; // TMap<UPrimitiveComponent*, FBreakEventCallbackWrapper>
	}

	namespace n_UKSWeaponComponentAmmoWidget {
		constexpr auto CachedAmmoInClip = 0x540; // int32_t
		constexpr auto CachedClipSize = 0x544; // int32_t
		constexpr auto CachedInReserve = 0x548; // int32_t
		constexpr auto CachedIsReloading = 0x54c; // bool
	}

	namespace n_AOnlineBeaconHostObject {
		constexpr auto BeaconTypeName = 0x220; // FString
		constexpr auto ClientBeaconActorClass = 0x230; // AOnlineBeaconClient*
		constexpr auto ClientActors = 0x238; // TArray<AOnlineBeaconClient*>
	}

	namespace n_UWBP_Challenge_Hub_C {
		constexpr auto UberGraphFrame = 0x5a0; // FPointerToUberGraphFrame
		constexpr auto AnimShowSubview = 0x5a8; // UWidgetAnimation*
		constexpr auto BG = 0x5b0; // UImage*
		constexpr auto Image_148 = 0x5b8; // UImage*
		constexpr auto SubviewStub3 = 0x5c0; // UTextBlock*
		constexpr auto SubviewSwitcher = 0x5c8; // UWidgetSwitcher*
		constexpr auto WBP_ChallengeView_DailyContracts = 0x5d0; // UWBP_ChallengeView_DailyContracts_C*
		constexpr auto WBP_ChallengeView_SeasonalContracts = 0x5d8; // UWBP_ChallengeView_SeasonalContracts_C*
		constexpr auto WBP_SidePanel_Left = 0x5e0; // UWBP_SidePanel_Left_C*
		constexpr auto WBP_VerticalTabGroup = 0x5e8; // UWBP_VerticalTabGroup_C*
		constexpr auto ViewWidgetMap = 0x5f0; // TMap<FName, UPUMG_Widget*>
	}

	namespace n_UGameInstance {
		constexpr auto LocalPlayers = 0x38; // TArray<ULocalPlayer*>
		constexpr auto OnlineSession = 0x48; // UOnlineSession*
		constexpr auto ReferencedObjects = 0x50; // TArray<UObject*>
	}

	namespace n_UWBP_WeaponSideNavigationOverlay_C {
		constexpr auto UberGraphFrame = 0x530; // FPointerToUberGraphFrame
		constexpr auto animToggleLeft = 0x538; // UWidgetAnimation*
		constexpr auto animToggleRight = 0x540; // UWidgetAnimation*
		constexpr auto animHoverRight = 0x548; // UWidgetAnimation*
		constexpr auto animHoverLeft = 0x550; // UWidgetAnimation*
		constexpr auto GamepadPrompt = 0x558; // UWBP_KeyCallout_C*
		constexpr auto GamepadPrompt_2 = 0x560; // UWBP_KeyCallout_C*
		constexpr auto GamepadSwitcher_Left = 0x568; // UWidgetSwitcher*
		constexpr auto GamepadSwitcher_Right = 0x570; // UWidgetSwitcher*
		constexpr auto HitTargetLeft = 0x578; // UButton*
		constexpr auto HitTargetRight = 0x580; // UButton*
		constexpr auto HoverOverlay_Left = 0x588; // UImage*
		constexpr auto HoverOverlay_Right = 0x590; // UImage*
		constexpr auto LeftArrow = 0x598; // UImage*
		constexpr auto LeftGroup = 0x5a0; // UHorizontalBox*
		constexpr auto NextWeaponText = 0x5a8; // UTextBlock*
		constexpr auto PrevWeaponText = 0x5b0; // UTextBlock*
		constexpr auto RightArrow = 0x5b8; // UImage*
		constexpr auto RightGroup = 0x5c0; // UHorizontalBox*
		constexpr auto ClickWEPSideNavOverlaySFX = 0x5c8; // UAkAudioEvent*
		constexpr auto HoverWEPSideNavOverlaySFX = 0x5d0; // UAkAudioEvent*
	}

	namespace n_UPropertyBinding {
		constexpr auto SourceObject = 0x28; // TWeakObjectPtr<UObject>
		constexpr auto SourcePath = 0x30; // FDynamicPropertyPath
		constexpr auto DestinationProperty = 0x58; // FName
	}

	namespace n_UAnimSharingTransitionInstance {
		constexpr auto FromComponent = 0x268; // TWeakObjectPtr<USkeletalMeshComponent>
		constexpr auto ToComponent = 0x270; // TWeakObjectPtr<USkeletalMeshComponent>
		constexpr auto BlendTime = 0x278; // float
		constexpr auto bBlendBool = 0x27c; // bool
	}

	namespace n_ALevelVariantSetsActor {
		constexpr auto LevelVariantSets = 0x220; // FSoftObjectPath
	}

	namespace n_UKSBTD_HasBeenHitRecently {
		constexpr auto MaxTimeSinceHit = 0x68; // float
	}

	namespace n_UAchievementQueryCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_ADatasmithImportedSequencesActor {
		constexpr auto ImportedSequences = 0x220; // TArray<ULevelSequence*>
	}

	namespace n_UKSSettingsMenuConfigAsset {
		constexpr auto SettingsPageConfigs = 0x30; // TArray<UKSSettingsPageConfigAsset*>
	}

	namespace n_UKSStorePanelItem {
		constexpr auto StoreItem = 0x28; // UPUMG_StoreItem*
		constexpr auto IsNew = 0x30; // bool
		constexpr auto DisplaySaleTag = 0x31; // bool
		constexpr auto HasBeenSeen = 0x32; // bool
		constexpr auto CustomBannerText = 0x38; // FText
	}

	namespace n_UAISense {
		constexpr auto DefaultExpirationAge = 0x28; // float
		constexpr auto NotifyType = 0x2c; // EAISenseNotifyType
		constexpr auto bWantsNewPawnNotification = 0x30; // char : 1
		constexpr auto bAutoRegisterAllPawnsAsSources = 0x30; // char : 1
		constexpr auto PerceptionSystemInstance = 0x38; // UAIPerceptionSystem*
	}

	namespace n_UTexture2DDynamic {
		constexpr auto Format = 0xc0; // EPixelFormat
	}

	namespace n_UKSActiveBonusesWidget {
		constexpr auto EventLookupTable = 0x520; // UDataTable*
	}

	namespace n_UPreviewMeshCollection {
		constexpr auto Skeleton = 0x38; // USkeleton*
		constexpr auto SkeletalMeshes = 0x40; // TArray<FPreviewMeshCollectionEntry>
	}

	namespace n_APartyBeaconClient {
		constexpr auto DestSessionId = 0x2e0; // FString
		constexpr auto PendingReservation = 0x2f0; // FPartyReservation
		constexpr auto RequestType = 0x340; // EClientRequestType
		constexpr auto bPendingReservationSent = 0x341; // bool
		constexpr auto bCancelReservation = 0x342; // bool
	}

	namespace n_URadialIntMask {
		constexpr auto Radius = 0xb0; // float
		constexpr auto Position = 0xb4; // FVector
		constexpr auto InteriorValue = 0xc0; // int32_t
		constexpr auto ExteriorValue = 0xc4; // int32_t
		constexpr auto SetMaskCondition = 0xc8; // ESetMaskConditionType
	}

	namespace n_UMaterialExpressionSubsurfaceMaskCustomOutput {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UNiagaraDataInterfaceChaosDestruction {
		constexpr auto ChaosSolverActorSet = 0x30; // TSet<AChaosSolverActor*>
		constexpr auto DataSourceType = 0x80; // EDataSourceTypeEnum
		constexpr auto DataProcessFrequency = 0x84; // int32_t
		constexpr auto MaxNumberOfDataEntriesToSpawn = 0x88; // int32_t
		constexpr auto DoSpawn = 0x8c; // bool
		constexpr auto SpawnMultiplierMinMax = 0x90; // FVector2D
		constexpr auto SpawnChance = 0x98; // float
		constexpr auto ImpulseToSpawnMinMax = 0x9c; // FVector2D
		constexpr auto SpeedToSpawnMinMax = 0xa4; // FVector2D
		constexpr auto MassToSpawnMinMax = 0xac; // FVector2D
		constexpr auto ExtentMinToSpawnMinMax = 0xb4; // FVector2D
		constexpr auto ExtentMaxToSpawnMinMax = 0xbc; // FVector2D
		constexpr auto VolumeToSpawnMinMax = 0xc4; // FVector2D
		constexpr auto SolverTimeToSpawnMinMax = 0xcc; // FVector2D
		constexpr auto SurfaceTypeToSpawn = 0xd4; // int32_t
		constexpr auto LocationFilteringMode = 0xd8; // ELocationFilteringModeEnum
		constexpr auto LocationXToSpawn = 0xd9; // ELocationXToSpawnEnum
		constexpr auto LocationXToSpawnMinMax = 0xdc; // FVector2D
		constexpr auto LocationYToSpawn = 0xe4; // ELocationYToSpawnEnum
		constexpr auto LocationYToSpawnMinMax = 0xe8; // FVector2D
		constexpr auto LocationZToSpawn = 0xf0; // ELocationZToSpawnEnum
		constexpr auto LocationZToSpawnMinMax = 0xf4; // FVector2D
		constexpr auto DataSortingType = 0xfc; // EDataSortTypeEnum
		constexpr auto bGetExternalCollisionData = 0xfd; // bool
		constexpr auto DoSpatialHash = 0xfe; // bool
		constexpr auto SpatialHashVolumeMin = 0x100; // FVector
		constexpr auto SpatialHashVolumeMax = 0x10c; // FVector
		constexpr auto SpatialHashVolumeCellSize = 0x118; // FVector
		constexpr auto MaxDataPerCell = 0x124; // int32_t
		constexpr auto bApplyMaterialsFilter = 0x128; // bool
		constexpr auto ChaosBreakingMaterialSet = 0x130; // TSet<UPhysicalMaterial*>
		constexpr auto bGetExternalBreakingData = 0x180; // bool
		constexpr auto bGetExternalTrailingData = 0x181; // bool
		constexpr auto RandomPositionMagnitudeMinMax = 0x184; // FVector2D
		constexpr auto InheritedVelocityMultiplier = 0x18c; // float
		constexpr auto RandomVelocityGenerationType = 0x190; // ERandomVelocityGenerationTypeEnum
		constexpr auto RandomVelocityMagnitudeMinMax = 0x194; // FVector2D
		constexpr auto SpreadAngleMax = 0x19c; // float
		constexpr auto VelocityOffsetMin = 0x1a0; // FVector
		constexpr auto VelocityOffsetMax = 0x1ac; // FVector
		constexpr auto FinalVelocityMagnitudeMinMax = 0x1b8; // FVector2D
		constexpr auto MaxLatency = 0x1c0; // float
		constexpr auto DebugType = 0x1c4; // EDebugTypeEnum
		constexpr auto LastSpawnedPointID = 0x1c8; // int32_t
		constexpr auto LastSpawnTime = 0x1cc; // float
		constexpr auto SolverTime = 0x1e0; // float
		constexpr auto TimeStampOfLastProcessedData = 0x1e4; // float
	}

	namespace n_UWBP_EventGrandPrizeItem_C {
		constexpr auto UberGraphFrame = 0x4c0; // FPointerToUberGraphFrame
		constexpr auto animOnHover = 0x4c8; // UWidgetAnimation*
		constexpr auto animOnClick = 0x4d0; // UWidgetAnimation*
		constexpr auto animOnSelected = 0x4d8; // UWidgetAnimation*
		constexpr auto Btn_BkgHoverGradient = 0x4e0; // UImage*
		constexpr auto Btn_BkgPress = 0x4e8; // UImage*
		constexpr auto Btn_Fill = 0x4f0; // UImage*
		constexpr auto Btn_HoverStroke = 0x4f8; // UImage*
		constexpr auto Btn_Stroke = 0x500; // UImage*
		constexpr auto ButtonBackground = 0x508; // UOverlay*
		constexpr auto CornerOverlay = 0x510; // USizeBox*
		constexpr auto GrandPrizeProgress = 0x518; // UWBP_ProgressEarnedBar_C*
		constexpr auto HitTarget = 0x520; // UButton*
		constexpr auto Next_BundleDesc = 0x528; // UTextBlock*
		constexpr auto Next_BundleName = 0x530; // UTextBlock*
		constexpr auto RewardItem = 0x538; // UWBP_KSCosmeticItemDisplay_C*
		constexpr auto StatusSwitcher = 0x540; // UWidgetSwitcher*
		constexpr auto OnBundleItemClicked = 0x548; // FMulticastInlineDelegate
		constexpr auto StoreItem_1 = 0x558; // UPUMG_StoreItem*
		constexpr auto bIsSelected = 0x560; // bool
		constexpr auto GrandPrizeClickSound = 0x568; // UAkAudioEvent*
		constexpr auto GrandPrizeHoverSound = 0x570; // UAkAudioEvent*
	}

	namespace n_UKSAimLockData {
		constexpr auto RequireInputForAimLock = 0x38; // TMap<EControllerInputType, bool>
		constexpr auto AimLockCurve = 0x88; // TMap<EControllerInputType, UCurveVector*>
		constexpr auto AimLockDistanceCurve = 0xd8; // TMap<EControllerInputType, UCurveFloat*>
		constexpr auto RequireInputOverride = 0x128; // TArray<FKSAimAssistPropertyBool>
		constexpr auto LockCurveOverride = 0x138; // TArray<FKSAimAssistPropertyCurveVector>
		constexpr auto DistanceCurveOverride = 0x148; // TArray<FKSAimAssistPropertyCurveFloat>
		constexpr auto FullRequireInputForAimLock = 0x158; // TMap<EControllerInputType, bool>
		constexpr auto FullAimLockCurve = 0x1a8; // TMap<EControllerInputType, UCurveVector*>
		constexpr auto FullAimLockDistanceCurve = 0x1f8; // TMap<EControllerInputType, UCurveFloat*>
	}

	namespace n_AKSAkAmbientSound {
		constexpr auto AkAudioEvent = 0x220; // UAkAudioEvent*
		constexpr auto AkComponent = 0x228; // UKSAkAmbientComponent*
		constexpr auto StopWhenOwnerIsDestroyed = 0x230; // bool
		constexpr auto AutoPost = 0x231; // bool
		constexpr auto ForceNoTickingOnAkComponent = 0x232; // bool
	}

	namespace n_UInterpTrackFade {
		constexpr auto bPersistFade = 0x90; // char : 1
		constexpr auto bFadeAudio = 0x90; // char : 1
		constexpr auto FadeColor = 0x94; // FLinearColor
	}

	namespace n_UKSOutOfBoundsManager_RoundGame {
		constexpr auto SecondsIntoRoundToFreeze = 0x140; // float
		constexpr auto FrozenCharacterModAsset = 0x158; // UKSPlayerMod*
	}

	namespace n_AMainCharacter_C {
		constexpr auto RightKneeAimAssitAnchor = 0x3c20; // UKSAimAssistAnchorComponent*
		constexpr auto LeftKneeAimAssistAnchor = 0x3c28; // UKSAimAssistAnchorComponent*
		constexpr auto PelvisAimAssistAnchor = 0x3c30; // UKSAimAssistAnchorComponent*
		constexpr auto OutOfBoundsComponent = 0x3c38; // UOutOfBoundsComponent_C*
		constexpr auto MountedAimOrigin = 0x3c40; // UKSCharacterSocketComponent*
		constexpr auto UnderslungAimOrigin = 0x3c48; // UKSCharacterSocketComponent*
		constexpr auto FX_Blinded = 0x3c50; // UParticleSystemComponent*
		constexpr auto CharacterHeatSourceComponent = 0x3c58; // UCharacterHeatSourceComponent_C*
		constexpr auto PerformanceAimOrigin = 0x3c60; // UKSCharacterSocketComponent*
		constexpr auto CharacterEmotionComponent = 0x3c68; // UCharacterEmotionComponent_C*
		constexpr auto SkyDiveCameraBoom = 0x3c70; // USpringArmComponent*
		constexpr auto Nameplate = 0x3c78; // UWidgetComponent*
		constexpr auto MainCharacterThreatComponent = 0x3c80; // UMainCharacterThreatComponent_C*
		constexpr auto NewTablet = 0x3c88; // UKSTabletMeshComponent*
		constexpr auto MainEnvironmentTracker = 0x3c90; // UMainEnvironmentTracker_C*
		constexpr auto BodyAimAssistAnchor = 0x3c98; // UKSAimAssistAnchorComponent*
		constexpr auto HeadAimAssistAnchor = 0x3ca0; // UKSAimAssistAnchorComponent*
		constexpr auto Free Fall Particle Component = 0x3ca8; // UParticleSystemComponent*
		constexpr auto SkyDiveCamera = 0x3cb0; // UCameraComponent*
		constexpr auto EnterFreeFallFOVTimeline_FOV_214483C64B8EF94ABEE010ACC0C82B47 = 0x3cb8; // float
		constexpr auto EnterFreeFallFOVTimeline__Direction_214483C64B8EF94ABEE010ACC0C82B47 = 0x3cbc; // ETimelineDirection
		constexpr auto EnterFreeFallFOVTimeline = 0x3cc0; // UTimelineComponent*
		constexpr auto NoseDiveFOVTimeline_FOV_B4B28FE84FD9F70D4702AD94CD02429F = 0x3cc8; // float
		constexpr auto NoseDiveFOVTimeline__Direction_B4B28FE84FD9F70D4702AD94CD02429F = 0x3ccc; // ETimelineDirection
		constexpr auto NoseDiveFOVTimeline = 0x3cd0; // UTimelineComponent*
		constexpr auto Martial_Artist_Target_Front_Camera_Offset_2353812C44E84070E58EA28AC0C39A7A = 0x3cd8; // FVector
		constexpr auto Martial_Artist_Target_Front_Camera_Rotation_2353812C44E84070E58EA28AC0C39A7A = 0x3ce4; // FVector
		constexpr auto Martial_Artist_Target_Front__Direction_2353812C44E84070E58EA28AC0C39A7A = 0x3cf0; // ETimelineDirection
		constexpr auto Martial Artist Target Front = 0x3cf8; // UTimelineComponent*
		constexpr auto Martial_Artist_Target_Back_Camera_Offset_1BFA9A6E4FC29401CE8D43B8AAD4581C = 0x3d00; // FVector
		constexpr auto Martial_Artist_Target_Back_Camera_Rotation_1BFA9A6E4FC29401CE8D43B8AAD4581C = 0x3d0c; // FVector
		constexpr auto Martial_Artist_Target_Back__Direction_1BFA9A6E4FC29401CE8D43B8AAD4581C = 0x3d18; // ETimelineDirection
		constexpr auto Martial Artist Target Back = 0x3d20; // UTimelineComponent*
		constexpr auto Martial_Artist_Instigator_Front_Camera_Offset_F70AEBFB4CDEF611144DE3BBA0C06E0C = 0x3d28; // FVector
		constexpr auto Martial_Artist_Instigator_Front_Camera_Rotation_F70AEBFB4CDEF611144DE3BBA0C06E0C = 0x3d34; // FVector
		constexpr auto Martial_Artist_Instigator_Front__Direction_F70AEBFB4CDEF611144DE3BBA0C06E0C = 0x3d40; // ETimelineDirection
		constexpr auto Martial Artist Instigator Front = 0x3d48; // UTimelineComponent*
		constexpr auto Martial_Artist_Instigator_Back_Camera_Offset_28F092594C0CD50C0A3EA1BF17E2C5E1 = 0x3d50; // FVector
		constexpr auto Martial_Artist_Instigator_Back_Camera_Rotation_28F092594C0CD50C0A3EA1BF17E2C5E1 = 0x3d5c; // FVector
		constexpr auto Martial_Artist_Instigator_Back__Direction_28F092594C0CD50C0A3EA1BF17E2C5E1 = 0x3d68; // ETimelineDirection
		constexpr auto Martial Artist Instigator Back = 0x3d70; // UTimelineComponent*
		constexpr auto CameraDodgeRoll_Relative_Position_4B7EB20A461034BB0B80418AE71BD9F4 = 0x3d78; // FVector
		constexpr auto CameraDodgeRoll_Camera_Boom_Length_4B7EB20A461034BB0B80418AE71BD9F4 = 0x3d84; // float
		constexpr auto CameraDodgeRoll__Direction_4B7EB20A461034BB0B80418AE71BD9F4 = 0x3d88; // ETimelineDirection
		constexpr auto CameraDodgeRoll = 0x3d90; // UTimelineComponent*
		constexpr auto SprintFOVTimeline_FOVAlpha_F9A879E74FD1B4D844684CBEE4230863 = 0x3d98; // float
		constexpr auto SprintFOVTimeline__Direction_F9A879E74FD1B4D844684CBEE4230863 = 0x3d9c; // ETimelineDirection
		constexpr auto SprintFOVTimeline = 0x3da0; // UTimelineComponent*
		constexpr auto EndImmunity_Invulnerable_4A69979040C00E80AB6D5687355E98EA = 0x3da8; // float
		constexpr auto EndImmunity__Direction_4A69979040C00E80AB6D5687355E98EA = 0x3dac; // ETimelineDirection
		constexpr auto EndImmunity = 0x3db0; // UTimelineComponent*
		constexpr auto StartImmunity_Invulnerable_F2F49BA44D30D2903638919AFE6C1704 = 0x3db8; // float
		constexpr auto StartImmunity__Direction_F2F49BA44D30D2903638919AFE6C1704 = 0x3dbc; // ETimelineDirection
		constexpr auto StartImmunity = 0x3dc0; // UTimelineComponent*
		constexpr auto Camera_Boom_Timeline_Player_Mesh_ADS_Weight_Reverse_7F7960E24E458B7FB9796A9428D9E3C5 = 0x3dc8; // float
		constexpr auto Camera_Boom_Timeline_Player_Mesh_ADS_Weight_Forward_7F7960E24E458B7FB9796A9428D9E3C5 = 0x3dcc; // float
		constexpr auto Camera_Boom_Timeline_FOV_Weight_7F7960E24E458B7FB9796A9428D9E3C5 = 0x3dd0; // float
		constexpr auto Camera_Boom_Timeline_Camera_Boom_Length_7F7960E24E458B7FB9796A9428D9E3C5 = 0x3dd4; // float
		constexpr auto Camera_Boom_Timeline__Direction_7F7960E24E458B7FB9796A9428D9E3C5 = 0x3dd8; // ETimelineDirection
		constexpr auto Camera Boom Timeline = 0x3de0; // UTimelineComponent*
		constexpr auto Elapsed = 0x3de8; // float
		constexpr auto StopwatchOn = 0x3dec; // bool
		constexpr auto PlayerLocation = 0x3df0; // FVector
		constexpr auto Successful Hit AkEvent = 0x3e00; // UAkAudioEvent*
		constexpr auto ADS Test = 0x3e08; // bool
		constexpr auto Camera Boom Arm Max = 0x3e0c; // float
		constexpr auto Cached 1p Field of View = 0x3e10; // float
		constexpr auto Test Alpha = 0x3e14; // float
		constexpr auto InFreeFall = 0x3e18; // bool
		constexpr auto Turn Right = 0x3e19; // bool
		constexpr auto Turn Left = 0x3e1a; // bool
		constexpr auto Pitch = 0x3e1c; // float
		constexpr auto Friendly Free Fall = 0x3e20; // UParticleSystem*
		constexpr auto Enemy Free Fall = 0x3e28; // UParticleSystem*
		constexpr auto Yaw = 0x3e30; // float
		constexpr auto Main Camera Cached FOV = 0x3e34; // float
		constexpr auto HitDirs = 0x3e38; // int32_t
		constexpr auto HitEnum = 0x3e3c; // HitEnum
		constexpr auto DownedPPEffect = 0x3e40; // FKSSpecialEffect
		constexpr auto Downed PP Transition Duration = 0x3e90; // float
		constexpr auto IsTrailActive = 0x3e94; // bool
		constexpr auto FlashBang PP Material = 0x3e98; // UMaterialInterface*
		constexpr auto FlashBang PP Material Instance = 0x3ea0; // UMaterialInstanceDynamic*
		constexpr auto SFX Grenade Damage Type = 0x3ea8; // TArray<UObject*>
		constexpr auto SFX Blade Damage Type = 0x3eb8; // TArray<UObject*>
		constexpr auto SFX Damage Target = 0x3ec8; // AActor*
		constexpr auto LeftTempLoc = 0x3ed0; // FVector
		constexpr auto AffectRange = 0x3edc; // float
		constexpr auto RightTempLoc = 0x3ee0; // FVector
		constexpr auto Out Of Bounds PP Material = 0x3ef0; // UMaterialInterface*
		constexpr auto Out Of Bounds PP Material Instance = 0x3ef8; // UMaterialInstanceDynamic*
		constexpr auto CachedFOV = 0x3f00; // float
		constexpr auto LastHitInfo = 0x3f08; // FLastHitImpulse
		constexpr auto KnockbackRotation = 0x3f48; // FRotator
		constexpr auto DeltaTime = 0x3f54; // float
		constexpr auto bIsRagdoll = 0x3f58; // bool
		constexpr auto bIsLaunchedOnDown = 0x3f59; // bool
		constexpr auto bSnapshotPoseFacingUp = 0x3f5a; // bool
		constexpr auto GetUpMontage = 0x3f60; // UAnimMontage*
		constexpr auto bIsRagdollOnGround = 0x3f68; // bool
		constexpr auto RagdollPelvisLocation = 0x3f6c; // FVector
		constexpr auto RagdollCapsuleLocation = 0x3f78; // FVector
		constexpr auto TimeInRagdoll = 0x3f84; // float
		constexpr auto MaxTimeInRagdoll = 0x3f88; // float
		constexpr auto FireParticle = 0x3f90; // UParticleSystemComponent*
		constexpr auto GrenadeImpactPointMID = 0x3f98; // UMaterialInstanceDynamic*
		constexpr auto ZiplineActive1 = 0x3fa0; // bool
		constexpr auto SprintFov = 0x3fa4; // float
		constexpr auto SprintFOVChangeDuration = 0x3fa8; // float
		constexpr auto ZiplineFov = 0x3fac; // float
		constexpr auto PreviousFov = 0x3fb0; // float
		constexpr auto InterpLengthHist = 0x3fb8; // FDebugFloatHistory
		constexpr auto AppliedDownedCurveComponent = 0x3fd8; // UKSFXCurveComponent*
		constexpr auto Effect = 0x3fe0; // FDamageEffect
		constexpr auto BloodPPEffect = 0x4030; // FKSSpecialEffect
		constexpr auto HealthPostProcess = 0x4080; // UMaterial*
		constexpr auto Health PP MID = 0x4088; // UMaterialInstanceDynamic*
		constexpr auto HealthPPInterpSpeed = 0x4090; // float
		constexpr auto SonarPPEffect = 0x4098; // FKSSpecialEffect
		constexpr auto EMPPPEffect = 0x40e8; // FKSSpecialEffect
		constexpr auto bEnableDirectionalDowns = 0x4138; // bool
		constexpr auto bEnableComplexDirectionalDowns = 0x4139; // bool
		constexpr auto FreeFallParticleDetachTime = 0x413c; // float
		constexpr auto OutOfBoundsPPEffect = 0x4140; // FKSSpecialEffect
		constexpr auto OutOfBoundsEffectCurve = 0x4190; // UKSFXCurveComponent*
		constexpr auto ConfirmHitPPEffect = 0x4198; // FKSSpecialEffect
		constexpr auto Active Index = 0x41e8; // int32_t
		constexpr auto FirePostProcess = 0x41f0; // FKSSpecialEffect
		constexpr auto QueuedDamageEffects = 0x4240; // TArray<FDamageEffect>
		constexpr auto InLowTreshold = 0x4250; // bool
		constexpr auto LowHealthTreshold = 0x4254; // float
		constexpr auto PP_SkyDive = 0x4258; // FKSSpecialEffect
		constexpr auto GadgetSwapSound = 0x42a8; // UAkAudioEvent*
		constexpr auto ConfirmHitPPEffectEnabled = 0x42b0; // bool
		constexpr auto ConfirmPickupPPEffect = 0x42b8; // FKSSpecialEffect
		constexpr auto StopLoopingReviveSFX = 0x4308; // int32_t
		constexpr auto StopLoopingArmorSFX = 0x430c; // int32_t
		constexpr auto OnPrimaryOneWeaponHolstered = 0x4310; // FMulticastInlineDelegate
		constexpr auto OnPrimaryTwoWeaponHolstered = 0x4320; // FMulticastInlineDelegate
		constexpr auto ShowFootprintStepTypes = 0x4330; // TArray<StepType>
		constexpr auto Temp_struct_Variable = 0x4340; // TArray<FAkExternalSourceInfo>
		constexpr auto Temp_delegate_Variable = 0x4350; // FDelegate
		constexpr auto Temp_struct_Variable_2 = 0x4360; // TArray<FAkExternalSourceInfo>
		constexpr auto Temp_delegate_Variable_2 = 0x4370; // FDelegate
		constexpr auto Temp_name_Variable = 0x4380; // FName
		constexpr auto Temp_delegate_Variable_3 = 0x4388; // FDelegate
		constexpr auto K2Node_CustomEvent_Effect_3 = 0x4398; // FDamageEffect
		constexpr auto Temp_struct_Variable_3 = 0x43e8; // TArray<FAkExternalSourceInfo>
		constexpr auto K2Node_ClassDynamicCast_AsKSDamage_Type_Base = 0x43f8; // UObject*
		constexpr auto K2Node_ClassDynamicCast_bSuccess = 0x4400; // bool
		constexpr auto Temp_delegate_Variable_4 = 0x4404; // FDelegate
		constexpr auto Temp_struct_Variable_4 = 0x4418; // TArray<FAkExternalSourceInfo>
		constexpr auto Temp_name_Variable_2 = 0x4428; // FName
		constexpr auto Temp_name_Variable_3 = 0x4430; // FName
		constexpr auto K2Node_Event_Damage = 0x4438; // float
		constexpr auto K2Node_Event_DamageTypeClass_2 = 0x4440; // UObject*
		constexpr auto K2Node_Event_DamageImpulse = 0x4448; // float
		constexpr auto K2Node_Event_RelativeImpactLocation = 0x444c; // FVector
		constexpr auto K2Node_Event_BoneName = 0x4458; // FName
		constexpr auto K2Node_Event_DamageCauser_2 = 0x4460; // AActor*
		constexpr auto Temp_name_Variable_4 = 0x4468; // FName
		constexpr auto K2Node_Event_EndReason = 0x4470; // EKSPowerSlideEndReason
		constexpr auto CallFunc_GetRagdollFacingDirection_IsUp = 0x4471; // bool
		constexpr auto Temp_name_Variable_5 = 0x4474; // FName
		constexpr auto K2Node_CustomEvent_IsGrounded = 0x447c; // bool
		constexpr auto Temp_name_Variable_6 = 0x4480; // FName
		constexpr auto CallFunc_K2_SetWorldLocation_SweepHitResult = 0x4488; // FHitResult
		constexpr auto Temp_name_Variable_7 = 0x4510; // FName
		constexpr auto CallFunc_GetPhysicsLinearVelocity_ReturnValue = 0x4518; // FVector
		constexpr auto Temp_name_Variable_8 = 0x4524; // FName
		constexpr auto Temp_name_Variable_9 = 0x452c; // FName
		constexpr auto Temp_name_Variable_10 = 0x4534; // FName
		constexpr auto Temp_bool_Has_Been_Initd_Variable = 0x453c; // bool
		constexpr auto Temp_delegate_Variable_5 = 0x4540; // FDelegate
		constexpr auto Temp_struct_Variable_5 = 0x4550; // TArray<FAkExternalSourceInfo>
		constexpr auto Temp_delegate_Variable_6 = 0x4560; // FDelegate
		constexpr auto Temp_struct_Variable_6 = 0x4570; // TArray<FAkExternalSourceInfo>
		constexpr auto K2Node_CreateDelegate_OutputDelegate = 0x4580; // FDelegate
		constexpr auto K2Node_CreateDelegate_OutputDelegate_2 = 0x4590; // FDelegate
		constexpr auto CallFunc_ShouldLastHitLaunchIntoRagdoll_bShouldRagdoll = 0x45a0; // bool
		constexpr auto Temp_delegate_Variable_7 = 0x45a4; // FDelegate
		constexpr auto Temp_struct_Variable_7 = 0x45b8; // TArray<FAkExternalSourceInfo>
		constexpr auto Temp_delegate_Variable_8 = 0x45c8; // FDelegate
		constexpr auto Temp_struct_Variable_8 = 0x45d8; // TArray<FAkExternalSourceInfo>
		constexpr auto K2Node_CustomEvent_DeltaSeconds = 0x45e8; // float
		constexpr auto Temp_bool_IsClosed_Variable = 0x45ec; // bool
		constexpr auto CallFunc_ProcessTakePointHitDamage_WorldHitLocation = 0x45f0; // FVector
		constexpr auto CallFunc_ProcessTakePointHitDamage_WorldHitNormal = 0x45fc; // FVector
		constexpr auto CallFunc_ProcessTakePointHitDamage_VectorToHitSource = 0x4608; // FVector
		constexpr auto CallFunc_ProcessTakePointHitDamage_HitDirection = 0x4614; // EKSMovementDirection
		constexpr auto Temp_delegate_Variable_9 = 0x4618; // FDelegate
		constexpr auto K2Node_Event_SequenceName = 0x4628; // FName
		constexpr auto K2Node_SwitchName_CmpSuccess = 0x4630; // bool
		constexpr auto K2Node_CustomEvent_Camera_Rotation = 0x4634; // FVector
		constexpr auto K2Node_CustomEvent_Uses_Rotation = 0x4640; // bool
		constexpr auto K2Node_CustomEvent_Camera_Offset = 0x4644; // FVector
		constexpr auto CallFunc_BreakVector_X = 0x4650; // float
		constexpr auto CallFunc_BreakVector_Y = 0x4654; // float
		constexpr auto CallFunc_BreakVector_Z = 0x4658; // float
		constexpr auto CallFunc_BreakVector_X_2 = 0x465c; // float
		constexpr auto CallFunc_BreakVector_Y_2 = 0x4660; // float
		constexpr auto CallFunc_BreakVector_Z_2 = 0x4664; // float
		constexpr auto Temp_struct_Variable_9 = 0x4668; // TArray<FAkExternalSourceInfo>
		constexpr auto CallFunc_K2_SetRelativeRotation_SweepHitResult = 0x4678; // FHitResult
		constexpr auto CallFunc_K2_SetRelativeLocation_SweepHitResult = 0x4700; // FHitResult
		constexpr auto Temp_bool_Has_Been_Initd_Variable_2 = 0x4788; // bool
		constexpr auto Temp_delegate_Variable_10 = 0x478c; // FDelegate
		constexpr auto Temp_struct_Variable_10 = 0x47a0; // TArray<FAkExternalSourceInfo>
		constexpr auto Temp_delegate_Variable_11 = 0x47b0; // FDelegate
		constexpr auto K2Node_DynamicCast_AsSkinnable_Skeletal_Mesh_Component = 0x47c0; // USkinnableSkeletalMeshComponent*
		constexpr auto K2Node_DynamicCast_bSuccess = 0x47c8; // bool
		constexpr auto Temp_struct_Variable_11 = 0x47d0; // TArray<FAkExternalSourceInfo>
		constexpr auto K2Node_DynamicCast_AsSkinnable_Skeletal_Mesh_Component_2 = 0x47e0; // USkinnableSkeletalMeshComponent*
		constexpr auto K2Node_DynamicCast_bSuccess_2 = 0x47e8; // bool
		constexpr auto Temp_bool_IsClosed_Variable_2 = 0x47e9; // bool
		constexpr auto K2Node_Event_bVisible = 0x47ea; // bool
		constexpr auto Temp_delegate_Variable_12 = 0x47ec; // FDelegate
		constexpr auto Temp_bool_Has_Been_Initd_Variable_3 = 0x47fc; // bool
		constexpr auto Temp_bool_IsClosed_Variable_3 = 0x47fd; // bool
		constexpr auto Temp_struct_Variable_12 = 0x4800; // TArray<FAkExternalSourceInfo>
		constexpr auto K2Node_CreateDelegate_OutputDelegate_3 = 0x4810; // FDelegate
		constexpr auto K2Node_CustomEvent_Effect_2 = 0x4820; // FDamageEffect
		constexpr auto Temp_name_Variable_11 = 0x4870; // FName
		constexpr auto K2Node_ClassDynamicCast_AsKSDamage_Type_Base_2 = 0x4878; // UObject*
		constexpr auto K2Node_ClassDynamicCast_bSuccess_2 = 0x4880; // bool
		constexpr auto Temp_name_Variable_12 = 0x4884; // FName
		constexpr auto K2Node_DynamicCast_AsKSBlood_Splatter_Component = 0x4890; // UKSBloodSplatterComponent*
		constexpr auto K2Node_DynamicCast_bSuccess_3 = 0x4898; // bool
		constexpr auto Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable = 0x4899; // bool
		constexpr auto CallFunc_GetLocalSettingAsBool_OutBool = 0x489a; // bool
		constexpr auto K2Node_CustomEvent_Effect = 0x48a0; // FDamageEffect
		constexpr auto K2Node_ClassDynamicCast_AsKSDamage_Type_Base_3 = 0x48f0; // UObject*
		constexpr auto K2Node_ClassDynamicCast_bSuccess_3 = 0x48f8; // bool
		constexpr auto K2Node_Event_DamageInfo_2 = 0x4900; // FCombatEventInfo
		constexpr auto K2Node_Event_DamageAmount = 0x4968; // float
		constexpr auto K2Node_Event_DamageTypeClass = 0x4970; // UObject*
		constexpr auto K2Node_Event_DamageCauser = 0x4978; // AActor*
		constexpr auto K2Node_Event_DamageOrigin = 0x4980; // FVector
		constexpr auto K2Node_Event_DamageInfo = 0x4990; // FCombatEventInfo
		constexpr auto Temp_delegate_Variable_13 = 0x49f8; // FDelegate
		constexpr auto Temp_struct_Variable_13 = 0x4a08; // TArray<FAkExternalSourceInfo>
		constexpr auto CallFunc_GetHitPawnEffectOverride_ParticleSystem = 0x4a18; // UParticleSystem*
		constexpr auto Temp_delegate_Variable_14 = 0x4a20; // FDelegate
		constexpr auto Temp_struct_Variable_14 = 0x4a30; // TArray<FAkExternalSourceInfo>
		constexpr auto K2Node_Event_Effect_2 = 0x4a40; // FDamageEffect
		constexpr auto K2Node_Event_Effect = 0x4a90; // FDamageEffect
		constexpr auto CallFunc_ProcessTakePointHitDamage_WorldHitLocation_2 = 0x4ae0; // FVector
		constexpr auto CallFunc_ProcessTakePointHitDamage_WorldHitNormal_2 = 0x4aec; // FVector
		constexpr auto CallFunc_ProcessTakePointHitDamage_VectorToHitSource_2 = 0x4af8; // FVector
		constexpr auto CallFunc_ProcessTakePointHitDamage_HitDirection_2 = 0x4b04; // EKSMovementDirection
		constexpr auto K2Node_ClassDynamicCast_AsKSDamage_Type_Base_4 = 0x4b08; // UObject*
		constexpr auto K2Node_ClassDynamicCast_bSuccess_4 = 0x4b10; // bool
		constexpr auto Temp_delegate_Variable_15 = 0x4b14; // FDelegate
		constexpr auto K2Node_CustomEvent_Character_2 = 0x4b28; // AKSCharacterFoundation*
		constexpr auto Temp_struct_Variable_15 = 0x4b30; // TArray<FAkExternalSourceInfo>
		constexpr auto Temp_delegate_Variable_16 = 0x4b40; // FDelegate
		constexpr auto Temp_struct_Variable_16 = 0x4b50; // TArray<FAkExternalSourceInfo>
		constexpr auto Temp_delegate_Variable_17 = 0x4b60; // FDelegate
		constexpr auto Temp_struct_Variable_17 = 0x4b70; // TArray<FAkExternalSourceInfo>
		constexpr auto Temp_delegate_Variable_18 = 0x4b80; // FDelegate
		constexpr auto Temp_struct_Variable_18 = 0x4b90; // TArray<FAkExternalSourceInfo>
		constexpr auto Temp_delegate_Variable_19 = 0x4ba0; // FDelegate
		constexpr auto Temp_struct_Variable_19 = 0x4bb0; // TArray<FAkExternalSourceInfo>
		constexpr auto Temp_delegate_Variable_20 = 0x4bc0; // FDelegate
		constexpr auto Temp_struct_Variable_20 = 0x4bd0; // TArray<FAkExternalSourceInfo>
		constexpr auto Temp_delegate_Variable_21 = 0x4be0; // FDelegate
		constexpr auto Temp_struct_Variable_21 = 0x4bf0; // TArray<FAkExternalSourceInfo>
		constexpr auto K2Node_CustomEvent_Player = 0x4c00; // APlayerState*
		constexpr auto K2Node_DynamicCast_AsINameplate_Widget = 0x4c08; // TScriptInterface<IINameplateWidget_C>
		constexpr auto K2Node_DynamicCast_bSuccess_4 = 0x4c18; // bool
		constexpr auto Temp_delegate_Variable_22 = 0x4c1c; // FDelegate
		constexpr auto Temp_struct_Variable_22 = 0x4c30; // TArray<FAkExternalSourceInfo>
		constexpr auto K2Node_Event_ExtraTime = 0x4c40; // float
		constexpr auto K2Node_DynamicCast_AsINameplate_Widget_2 = 0x4c48; // TScriptInterface<IINameplateWidget_C>
		constexpr auto K2Node_DynamicCast_bSuccess_5 = 0x4c58; // bool
		constexpr auto K2Node_DynamicCast_AsINameplate_Widget_3 = 0x4c60; // TScriptInterface<IINameplateWidget_C>
		constexpr auto K2Node_DynamicCast_bSuccess_6 = 0x4c70; // bool
		constexpr auto K2Node_Event_PrevMovementMode = 0x4c71; // EMovementMode
		constexpr auto K2Node_Event_NewMovementMode = 0x4c72; // EMovementMode
		constexpr auto K2Node_Event_PrevCustomMode = 0x4c73; // char
		constexpr auto K2Node_Event_NewCustomMode = 0x4c74; // char
		constexpr auto K2Node_DynamicCast_AsKSCharacter_Movement_Component = 0x4c78; // UKSCharacterMovementComponent*
		constexpr auto K2Node_DynamicCast_bSuccess_7 = 0x4c80; // bool
		constexpr auto K2Node_CustomEvent_EventInfo_2 = 0x4c88; // FCombatEventInfo
		constexpr auto K2Node_CustomEvent_ExpBonus_2 = 0x4cf0; // int32_t
		constexpr auto K2Node_CustomEvent_Revivee = 0x4cf8; // AKSPlayerState*
		constexpr auto K2Node_CustomEvent_Reviver = 0x4d00; // AKSPlayerState*
		constexpr auto K2Node_CustomEvent_ExpBonus = 0x4d08; // int32_t
		constexpr auto K2Node_DynamicCast_AsKSPlayer_State = 0x4d10; // AKSPlayerState*
		constexpr auto K2Node_DynamicCast_bSuccess_8 = 0x4d18; // bool
		constexpr auto K2Node_DynamicCast_AsKSPlayer_State_2 = 0x4d20; // AKSPlayerState*
		constexpr auto K2Node_DynamicCast_bSuccess_9 = 0x4d28; // bool
		constexpr auto Temp_delegate_Variable_23 = 0x4d2c; // FDelegate
		constexpr auto Temp_struct_Variable_23 = 0x4d40; // TArray<FAkExternalSourceInfo>
		constexpr auto Temp_delegate_Variable_24 = 0x4d50; // FDelegate
		constexpr auto K2Node_CustomEvent_EventInfo = 0x4d60; // FCombatEventInfo
		constexpr auto K2Node_DynamicCast_AsKSPlayer_State_3 = 0x4dc8; // AKSPlayerState*
		constexpr auto K2Node_DynamicCast_bSuccess_10 = 0x4dd0; // bool
		constexpr auto K2Node_DynamicCast_AsKSPlayer_State_4 = 0x4dd8; // AKSPlayerState*
		constexpr auto K2Node_DynamicCast_bSuccess_11 = 0x4de0; // bool
		constexpr auto Temp_bool_Has_Been_Initd_Variable_4 = 0x4de1; // bool
		constexpr auto Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_2 = 0x4de2; // bool
		constexpr auto Temp_bool_IsClosed_Variable_4 = 0x4de3; // bool
		constexpr auto Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_3 = 0x4de4; // bool
		constexpr auto Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_4 = 0x4de5; // bool
		constexpr auto K2Node_Event_Enabled = 0x4de6; // bool
		constexpr auto Temp_struct_Variable_24 = 0x4de8; // TArray<FAkExternalSourceInfo>
		constexpr auto Temp_bool_Has_Been_Initd_Variable_5 = 0x4df8; // bool
		constexpr auto K2Node_CreateDelegate_OutputDelegate_4 = 0x4dfc; // FDelegate
		constexpr auto K2Node_Event_Reviver_3 = 0x4e10; // AKSCharacter*
		constexpr auto K2Node_Event_ReviveTime = 0x4e18; // float
		constexpr auto K2Node_Event_Remote = 0x4e1c; // bool
		constexpr auto K2Node_Event_Reviver_2 = 0x4e20; // AKSCharacter*
		constexpr auto K2Node_Event_Reviver = 0x4e28; // AKSCharacter*
		constexpr auto K2Node_CustomEvent_IsSprinting = 0x4e30; // bool
		constexpr auto K2Node_CustomEvent_IsDodgeRolling_2 = 0x4e31; // bool
		constexpr auto Temp_bool_IsClosed_Variable_5 = 0x4e32; // bool
		constexpr auto K2Node_CreateDelegate_OutputDelegate_5 = 0x4e34; // FDelegate
		constexpr auto CallFunc_KeepActionCameraAboveWater_OutBoomPosition = 0x4e44; // FVector
		constexpr auto CallFunc_K2_SetRelativeLocation_SweepHitResult_2 = 0x4e50; // FHitResult
		constexpr auto K2Node_CreateDelegate_OutputDelegate_6 = 0x4ed8; // FDelegate
		constexpr auto K2Node_Event_DeltaSeconds = 0x4ee8; // float
		constexpr auto Temp_delegate_Variable_25 = 0x4eec; // FDelegate
		constexpr auto Temp_struct_Variable_25 = 0x4f00; // TArray<FAkExternalSourceInfo>
		constexpr auto K2Node_CreateDelegate_OutputDelegate_7 = 0x4f10; // FDelegate
		constexpr auto K2Node_Event_BreakingLocation = 0x4f20; // FVector
		constexpr auto K2Node_Event_BreakingDirection = 0x4f2c; // FVector
		constexpr auto K2Node_Event_BreakingNormal = 0x4f38; // FVector
		constexpr auto K2Node_CustomEvent_IsPowerSliding = 0x4f44; // bool
		constexpr auto CallFunc_GetTargetFov_TargetFov = 0x4f48; // float
		constexpr auto K2Node_CustomEvent_IsZiplining = 0x4f4c; // bool
		constexpr auto K2Node_CreateDelegate_OutputDelegate_8 = 0x4f50; // FDelegate
		constexpr auto K2Node_CreateDelegate_OutputDelegate_9 = 0x4f60; // FDelegate
		constexpr auto K2Node_CreateDelegate_OutputDelegate_10 = 0x4f70; // FDelegate
		constexpr auto K2Node_Event_bEnterNoseDive = 0x4f80; // bool
		constexpr auto K2Node_Event_AnimLength = 0x4f84; // float
		constexpr auto K2Node_Event_SwingMontageSectionName = 0x4f88; // FString
		constexpr auto K2Node_DynamicCast_AsMaster_Weapon_Component = 0x4f98; // UMaster_WeaponComponent_C*
		constexpr auto K2Node_DynamicCast_bSuccess_12 = 0x4fa0; // bool
		constexpr auto K2Node_CreateDelegate_OutputDelegate_11 = 0x4fa4; // FDelegate
		constexpr auto Temp_bool_Has_Been_Initd_Variable_6 = 0x4fb4; // bool
		constexpr auto K2Node_Event_PC_2 = 0x4fb8; // APlayerController*
		constexpr auto K2Node_Event_PC = 0x4fc0; // APlayerController*
		constexpr auto K2Node_Event_UpdateTargetRotation = 0x4fc8; // bool
		constexpr auto K2Node_Event_AffectCapsule = 0x4fc9; // bool
		constexpr auto K2Node_CreateDelegate_OutputDelegate_12 = 0x4fcc; // FDelegate
		constexpr auto K2Node_InputKeyEvent_Key = 0x4fe0; // FKey
		constexpr auto CallFunc_DetermineKnockbackFacing_ActorRotation = 0x4ff8; // FRotator
		constexpr auto Temp_object_Variable = 0x5008; // UParticleSystem*
		constexpr auto Temp_bool_Variable = 0x5010; // bool
		constexpr auto Temp_bool_Has_Been_Initd_Variable_7 = 0x5011; // bool
		constexpr auto Temp_delegate_Variable_26 = 0x5014; // FDelegate
		constexpr auto K2Node_Event_Hit = 0x5024; // FHitResult
		constexpr auto Temp_struct_Variable_26 = 0x50b0; // TArray<FAkExternalSourceInfo>
		constexpr auto Temp_delegate_Variable_27 = 0x50c0; // FDelegate
		constexpr auto Temp_struct_Variable_27 = 0x50d0; // TArray<FAkExternalSourceInfo>
		constexpr auto K2Node_CreateDelegate_OutputDelegate_13 = 0x50e0; // FDelegate
		constexpr auto Temp_byte_Variable = 0x50f0; // HitEnum
		constexpr auto Temp_byte_Variable_2 = 0x50f1; // HitEnum
		constexpr auto Temp_byte_Variable_3 = 0x50f2; // HitEnum
		constexpr auto Temp_byte_Variable_4 = 0x50f3; // HitEnum
		constexpr auto Temp_bool_IsClosed_Variable_6 = 0x50f4; // bool
		constexpr auto K2Node_CustomEvent_IsDodgeRolling = 0x50f5; // bool
		constexpr auto Temp_byte_Variable_5 = 0x50f6; // EKSMovementDirection
		constexpr auto Temp_struct_Variable_28 = 0x50f8; // FVector
		constexpr auto K2Node_Select_Default = 0x5104; // HitEnum
		constexpr auto Temp_bool_Variable_2 = 0x5105; // bool
		constexpr auto Temp_bool_Variable_3 = 0x5106; // bool
		constexpr auto K2Node_Select_Default_2 = 0x5108; // FVector
		constexpr auto K2Node_Select_Default_3 = 0x5118; // UParticleSystem*
		constexpr auto K2Node_Select_Default_4 = 0x5120; // UParticleSystem*
		constexpr auto K2Node_CreateDelegate_OutputDelegate_14 = 0x5128; // FDelegate
		constexpr auto Temp_bool_IsClosed_Variable_7 = 0x5138; // bool
		constexpr auto K2Node_MakeStruct_SettingDelegateStruct = 0x513c; // FSettingDelegateStruct
		constexpr auto K2Node_CreateDelegate_OutputDelegate_15 = 0x515c; // FDelegate
		constexpr auto Temp_delegate_Variable_28 = 0x516c; // FDelegate
		constexpr auto Temp_struct_Variable_29 = 0x5180; // TArray<FAkExternalSourceInfo>
		constexpr auto K2Node_Event_bFullyHealed = 0x5190; // bool
		constexpr auto Temp_delegate_Variable_29 = 0x5194; // FDelegate
		constexpr auto Temp_struct_Variable_30 = 0x51a8; // TArray<FAkExternalSourceInfo>
		constexpr auto Temp_delegate_Variable_30 = 0x51b8; // FDelegate
		constexpr auto Temp_struct_Variable_31 = 0x51c8; // TArray<FAkExternalSourceInfo>
		constexpr auto Temp_delegate_Variable_31 = 0x51d8; // FDelegate
		constexpr auto Temp_struct_Variable_32 = 0x51e8; // TArray<FAkExternalSourceInfo>
		constexpr auto Temp_delegate_Variable_32 = 0x51f8; // FDelegate
		constexpr auto Temp_struct_Variable_33 = 0x5208; // TArray<FAkExternalSourceInfo>
		constexpr auto K2Node_DynamicCast_AsKSZipline_Mesh_Component = 0x5218; // UKSZiplineMeshComponent*
		constexpr auto K2Node_DynamicCast_bSuccess_13 = 0x5220; // bool
		constexpr auto K2Node_DynamicCast_AsKSZipline_Mesh_Component_2 = 0x5228; // UKSZiplineMeshComponent*
		constexpr auto K2Node_DynamicCast_bSuccess_14 = 0x5230; // bool
		constexpr auto K2Node_InputAxisKeyEvent_AxisValue_2 = 0x5234; // float
		constexpr auto K2Node_InputAxisKeyEvent_AxisValue = 0x5238; // float
		constexpr auto Temp_delegate_Variable_33 = 0x523c; // FDelegate
		constexpr auto Temp_struct_Variable_34 = 0x5250; // TArray<FAkExternalSourceInfo>
		constexpr auto K2Node_CreateDelegate_OutputDelegate_16 = 0x5260; // FDelegate
		constexpr auto Temp_delegate_Variable_34 = 0x5270; // FDelegate
		constexpr auto Temp_struct_Variable_35 = 0x5280; // TArray<FAkExternalSourceInfo>
		constexpr auto K2Node_DynamicCast_AsKSZipline_Mesh_Component_3 = 0x5290; // UKSZiplineMeshComponent*
		constexpr auto K2Node_DynamicCast_bSuccess_15 = 0x5298; // bool
		constexpr auto K2Node_DynamicCast_AsKSZipline_Mesh_Component_4 = 0x52a0; // UKSZiplineMeshComponent*
		constexpr auto K2Node_DynamicCast_bSuccess_16 = 0x52a8; // bool
		constexpr auto K2Node_CustomEvent_Character = 0x52b0; // AKSCharacter*
		constexpr auto K2Node_CustomEvent_ItemDrop = 0x52b8; // AKSItemDrop*
		constexpr auto K2Node_CustomEvent_Item = 0x52c0; // UKSItem*
		constexpr auto K2Node_Event_InteractTime = 0x52c8; // float
		constexpr auto Temp_bool_Variable_4 = 0x52cc; // bool
		constexpr auto CallFunc_BreakVector_X_3 = 0x52d0; // float
		constexpr auto CallFunc_BreakVector_Y_3 = 0x52d4; // float
		constexpr auto CallFunc_BreakVector_Z_3 = 0x52d8; // float
		constexpr auto K2Node_DynamicCast_AsKSPlayer_Controller = 0x52e0; // AKSPlayerController*
		constexpr auto K2Node_DynamicCast_bSuccess_17 = 0x52e8; // bool
		constexpr auto CallFunc_K2_SetRelativeLocation_SweepHitResult_3 = 0x52ec; // FHitResult
		constexpr auto K2Node_SwitchEnum_CmpSuccess = 0x5374; // bool
		constexpr auto K2Node_DynamicCast_AsKSPlayer_Controller_2 = 0x5378; // AKSPlayerController*
		constexpr auto K2Node_DynamicCast_bSuccess_18 = 0x5380; // bool
		constexpr auto K2Node_DynamicCast_AsKSPlayer_Controller_3 = 0x5388; // AKSPlayerController*
		constexpr auto K2Node_DynamicCast_bSuccess_19 = 0x5390; // bool
		constexpr auto K2Node_SwitchEnum_CmpSuccess_2 = 0x5391; // bool
		constexpr auto K2Node_SwitchEnum_CmpSuccess_3 = 0x5392; // bool
		constexpr auto K2Node_Event_Intensity = 0x5393; // EFlashBangIntensity
		constexpr auto K2Node_SwitchEnum_CmpSuccess_4 = 0x5394; // bool
		constexpr auto Temp_bool_Has_Been_Initd_Variable_8 = 0x5395; // bool
		constexpr auto CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput = 0x5398; // TScriptInterface<IBlendableInterface>
		constexpr auto CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_2 = 0x53a8; // TScriptInterface<IBlendableInterface>
		constexpr auto Temp_byte_Variable_6 = 0x53b8; // HitEnum
		constexpr auto Temp_byte_Variable_7 = 0x53b9; // HitEnum
		constexpr auto Temp_byte_Variable_8 = 0x53ba; // HitEnum
		constexpr auto Temp_byte_Variable_9 = 0x53bb; // HitEnum
		constexpr auto Temp_byte_Variable_10 = 0x53bc; // EKSMovementDirection
		constexpr auto K2Node_Select_Default_5 = 0x53bd; // HitEnum
		constexpr auto Temp_bool_IsClosed_Variable_8 = 0x53be; // bool
		constexpr auto Temp_object_Variable_2 = 0x53c0; // UAnimMontage*
		constexpr auto Temp_object_Variable_3 = 0x53c8; // UAnimMontage*
		constexpr auto Temp_bool_Variable_5 = 0x53d0; // bool
		constexpr auto K2Node_Select_Default_6 = 0x53d8; // UAnimMontage*
		constexpr auto K2Node_CustomEvent_New_Blind_FX_State = 0x53e0; // bool
		constexpr auto K2Node_MakeStruct_LastHitImpulse = 0x53e8; // FLastHitImpulse
	}

	namespace n_UWBP_RoleFilterButton_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto FilterButton = 0x528; // UButton*
		constexpr auto RoleIcon = 0x530; // UKSAsyncImage*
		constexpr auto Role = 0x538; // UKSJobRole*
	}

	namespace n_UWBP_Context_Bar_C {
		constexpr auto MobileLayout = 0x520; // UWidgetAnimation*
		constexpr auto FooterBG = 0x528; // UImage*
		constexpr auto FooterBG_2 = 0x530; // UImage*
	}

	namespace n_UKSActivityRequirement_Sequence {
		constexpr auto ActivitySequenceName = 0x30; // FName
		constexpr auto ActivitySequenceTable = 0x38; // UDataTable*
	}

	namespace n_UWBP_player_card_module_C {
		constexpr auto UberGraphFrame = 0x530; // FPointerToUberGraphFrame
		constexpr auto Hover = 0x538; // UWidgetAnimation*
		constexpr auto CardBackground = 0x540; // UBorder*
		constexpr auto CardGroup = 0x548; // UOverlay*
		constexpr auto CardStyleSwitcher = 0x550; // UWidgetSwitcher*
		constexpr auto EmptyGroup = 0x558; // UOverlay*
		constexpr auto HitTarget = 0x560; // UButton*
		constexpr auto HoverGroup = 0x568; // UWidgetSwitcher*
		constexpr auto HoverGroup_Under = 0x570; // UWidgetSwitcher*
		constexpr auto Image_8 = 0x578; // UImage*
		constexpr auto Image_11 = 0x580; // UImage*
		constexpr auto Image_13 = 0x588; // UImage*
		constexpr auto Image_134 = 0x590; // UImage*
		constexpr auto LeftBackGamepadCallout = 0x598; // UWBP_ControllerPrompt_C*
		constexpr auto LeftBackGroup = 0x5a0; // UOverlay*
		constexpr auto LeftBackHoverGroup = 0x5a8; // UOverlay*
		constexpr auto LeftBackHoverGroup_Under = 0x5b0; // UOverlay*
		constexpr auto LeftBackHoverPrompt = 0x5b8; // UWBP_ControllerPrompt_C*
		constexpr auto LeftHoverGroup = 0x5c0; // UOverlay*
		constexpr auto LeftHoverGroup_Under = 0x5c8; // UOverlay*
		constexpr auto LeftHoverPrompt = 0x5d0; // UWBP_ControllerPrompt_C*
		constexpr auto PlayerDisplay = 0x5d8; // UWBP_PlayerInfoDisplay_C*
		constexpr auto RedGradient = 0x5e0; // UImage*
		constexpr auto RedGradient2 = 0x5e8; // UImage*
		constexpr auto RedGradient3 = 0x5f0; // UImage*
		constexpr auto RedGradient4 = 0x5f8; // UImage*
		constexpr auto RightBackGamepadCallout = 0x600; // UWBP_ControllerPrompt_C*
		constexpr auto RightBackGroup = 0x608; // UOverlay*
		constexpr auto RightBackHoverGroup = 0x610; // UOverlay*
		constexpr auto RightBackHoverGroup_Under = 0x618; // UOverlay*
		constexpr auto RightBackHoverPrompt = 0x620; // UWBP_ControllerPrompt_C*
		constexpr auto RightHoverGroup = 0x628; // UOverlay*
		constexpr auto RightHoverGroup_Under = 0x630; // UOverlay*
		constexpr auto RightHoverPrompt = 0x638; // UWBP_ControllerPrompt_C*
		constexpr auto OnPlayerClicked = 0x640; // FMulticastInlineDelegate
		constexpr auto ShowPlayerCardAnimationDuration = 0x650; // float
		constexpr auto ShowAnimDelay = 0x654; // float
		constexpr auto OnNavigateLeftFailure = 0x658; // FMulticastInlineDelegate
		constexpr auto OnNavigateRightFailure = 0x668; // FMulticastInlineDelegate
		constexpr auto OnCardHovered = 0x678; // FMulticastInlineDelegate
		constexpr auto CanShowPartyLeaderIcon = 0x688; // bool
		constexpr auto StatusColors = 0x690; // UDataTable*
		constexpr auto Player Card Style = 0x698; // EPlayerCardStyle
		constexpr auto OnBackButton = 0x6a0; // FMulticastInlineDelegate
		constexpr auto ContextSide = 0x6b0; // ELaterality
		constexpr auto CurrentPlayerInfo = 0x6b8; // UPUMG_PlayerInfo*
		constexpr auto DefaultState = 0x6c0; // EPlayerCardStyle
		constexpr auto HoverPlayercardmoduleSFX = 0x6c8; // UAkAudioEvent*
		constexpr auto OnPlayerUpdated = 0x6d0; // FMulticastInlineDelegate
	}

	namespace n_AFriendlyLobbyPreviewActor_C {
		constexpr auto PlayerInfoLoadoutComponent = 0x5c8; // UPlayerInfoPrevwLoadoutComponent*
	}

	namespace n_UKSAnnouncementQueueWidget {
		constexpr auto IsBusy = 0x520; // bool
		constexpr auto OnReadyForNextAnnouncement = 0x528; // FMulticastInlineDelegate
	}

	namespace n_UKSSettingsInfo_Binding {
		constexpr auto PrimaryKeyBindInfo = 0x108; // FKSKeyBindInfo
		constexpr auto GamepadKeyBindInfo = 0x118; // FKSKeyBindInfo
	}

	namespace n_APGame_PlayerController {
		constexpr auto SonyMatchId = 0x658; // FString
		constexpr auto SonyActivityId = 0x668; // FString
		constexpr auto SonyMatchState = 0x678; // ESonyMatchState
		constexpr auto QueuedSonyMatchState = 0x679; // ESonyMatchState
		constexpr auto bIsSonyMatchOwner = 0x67a; // bool
		constexpr auto bIsEligibleSonyMatchOwner = 0x67b; // bool
		constexpr auto bIsExclusiveSonyMatchOwner = 0x67c; // bool
		constexpr auto m_CheatComponentClass = 0x690; // UPGame_CheatComponent*
		constexpr auto r_CheatComponent = 0x698; // UPGame_CheatComponent*
		constexpr auto r_ReplicatedNetId = 0x6a0; // FSerializedMctsNetId
		constexpr auto InputComponentClass = 0x6a8; // UInputComponent*
	}

	namespace n_AKSGameHUDNew {
		constexpr auto AimAssistDebugWidgetClass = 0x620; // UUserWidget*
		constexpr auto AimAssistDebugWidget = 0x628; // TWeakObjectPtr<UUserWidget>
		constexpr auto CurrentKSPlayerState = 0x630; // TWeakObjectPtr<AKSPlayerState>
		constexpr auto BaseAssetDataTables = 0x638; // TArray<FDataTableInfo>
		constexpr auto AssetDataTableManager = 0x648; // UDynamicSkinTable*
		constexpr auto SkinObject = 0x650; // UMultiSkinObject*
		constexpr auto HUDStateTracker = 0x658; // UKSHUDStateTracker*
		constexpr auto OnHudFubarDel = 0x6b0; // FMulticastInlineDelegate
	}

	namespace n_UMainCharacterThreatComponent_C {
		constexpr auto DebugColorMap = 0x190; // TMap<int32_t, FLinearColor>
		constexpr auto DebuggingVisuals = 0x1e0; // bool
		constexpr auto K2Node_MakeStruct_LinearColor = 0x1e4; // FLinearColor
		constexpr auto K2Node_Event_DeltaSeconds = 0x1f4; // float
		constexpr auto K2Node_Event_Show = 0x1f8; // bool
		constexpr auto K2Node_MakeStruct_LinearColor_2 = 0x1fc; // FLinearColor
		constexpr auto CallFunc_Map_Find_Value = 0x20c; // FLinearColor
	}

	namespace n_UMaterialExpressionSingleLayerWaterMaterialOutput {
		constexpr auto ScatteringCoefficients = 0x40; // FExpressionInput
		constexpr auto AbsorptionCoefficients = 0x54; // FExpressionInput
		constexpr auto PhaseG = 0x68; // FExpressionInput
	}

	namespace n_ULandscapeSplineControlPoint {
		constexpr auto Location = 0x28; // FVector
		constexpr auto Rotation = 0x34; // FRotator
		constexpr auto Width = 0x40; // float
		constexpr auto LayerWidthRatio = 0x44; // float
		constexpr auto SideFalloff = 0x48; // float
		constexpr auto LeftSideFalloffFactor = 0x4c; // float
		constexpr auto RightSideFalloffFactor = 0x50; // float
		constexpr auto LeftSideLayerFalloffFactor = 0x54; // float
		constexpr auto RightSideLayerFalloffFactor = 0x58; // float
		constexpr auto EndFalloff = 0x5c; // float
		constexpr auto ConnectedSegments = 0x60; // TArray<FLandscapeSplineConnection>
		constexpr auto Points = 0x70; // TArray<FLandscapeSplineInterpPoint>
		constexpr auto Bounds = 0x80; // FBox
		constexpr auto LocalMeshComponent = 0xa0; // UControlPointMeshComponent*
	}

	namespace n_UMaterialExpressionDesaturation {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Fraction = 0x54; // FExpressionInput
		constexpr auto LuminanceFactors = 0x68; // FLinearColor
	}

	namespace n_UMovementComponent {
		constexpr auto UpdatedComponent = 0xb0; // USceneComponent*
		constexpr auto UpdatedPrimitive = 0xb8; // UPrimitiveComponent*
		constexpr auto Velocity = 0xc4; // FVector
		constexpr auto PlaneConstraintNormal = 0xd0; // FVector
		constexpr auto PlaneConstraintOrigin = 0xdc; // FVector
		constexpr auto bUpdateOnlyIfRendered = 0xe8; // char : 1
		constexpr auto bAutoUpdateTickRegistration = 0xe8; // char : 1
		constexpr auto bTickBeforeOwner = 0xe8; // char : 1
		constexpr auto bAutoRegisterUpdatedComponent = 0xe8; // char : 1
		constexpr auto bConstrainToPlane = 0xe8; // char : 1
		constexpr auto bSnapToPlaneAtStart = 0xe8; // char : 1
		constexpr auto bAutoRegisterPhysicsVolumeUpdates = 0xe8; // char : 1
		constexpr auto bComponentShouldUpdatePhysicsVolume = 0xe8; // char : 1
		constexpr auto PlaneConstraintAxisSetting = 0xeb; // EPlaneConstraintAxisSetting
	}

	namespace n_UKSBTD_DestroyableHazardState {
		constexpr auto DestroyableHazardStateFilter = 0x90; // FKSDestroyableHazardStateFilter
	}

	namespace n_UNewMenuMain_C {
		constexpr auto UberGraphFrame = 0x4d0; // FPointerToUberGraphFrame
		constexpr auto Hover = 0x4d8; // UWidgetAnimation*
		constexpr auto Button = 0x4e0; // UOverlay*
		constexpr auto ContentWrapper = 0x4e8; // UOverlay*
		constexpr auto HitTarget = 0x4f0; // UButton*
		constexpr auto Icon = 0x4f8; // UImage*
		constexpr auto HoveredNewMenuMainSFX = 0x500; // UAkAudioEvent*
		constexpr auto ClickNewMenuMainSFX = 0x508; // UAkAudioEvent*
	}

	namespace n_UParticleModuleLocation {
		constexpr auto StartLocation = 0x30; // FRawDistributionVector
		constexpr auto DistributeOverNPoints = 0x78; // float
		constexpr auto DistributeThreshold = 0x7c; // float
	}

	namespace n_UWBP_KSCosmeticItemSelector_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto CosmeticItemDisplay = 0x528; // UWBP_KSCosmeticItemDisplay_C*
		constexpr auto PlatformItem = 0x530; // UPlatformInventoryItem*
		constexpr auto OnItemHovered = 0x538; // FMulticastInlineDelegate
		constexpr auto OnItemUnhovered = 0x548; // FMulticastInlineDelegate
		constexpr auto OnItemSelected = 0x558; // FMulticastInlineDelegate
		constexpr auto StoreItem = 0x568; // UPUMG_StoreItem*
		constexpr auto CosmeticDetails = 0x570; // FCosmeticSlotDetails
		constexpr auto IsClearSlot = 0x588; // bool
		constexpr auto OnPurchaseItem = 0x590; // FMulticastInlineDelegate
		constexpr auto HoverCosmeticItemSelectorSFX = 0x5a0; // UAkAudioEvent*
		constexpr auto ClickCosmeticItemSelectorSFX = 0x5a8; // UAkAudioEvent*
		constexpr auto IsGamepadHovered = 0x5b0; // bool
		constexpr auto IsSelected = 0x5b1; // bool
	}

	namespace n_ASplineMeshActor {
		constexpr auto SplineMeshComponent = 0x220; // USplineMeshComponent*
	}

	namespace n_UStaticPropManagerComponent {
		constexpr auto ActiveNamelessProps = 0x188; // TArray<FActiveStaticProp>
		constexpr auto ActiveProps = 0x198; // TMap<FPropIdentifier, FActiveStaticProp>
		constexpr auto bAllowSpawnerPooling = 0x1e8; // bool
		constexpr auto SpawnerPoolingLifespan = 0x1ec; // float
	}

	namespace n_UCheatManager {
		constexpr auto DebugCameraControllerRef = 0x28; // ADebugCameraController*
		constexpr auto DebugCameraControllerClass = 0x30; // ADebugCameraController*
	}

	namespace n_UMeshComponent {
		constexpr auto OverrideMaterials = 0x430; // TArray<UMaterialInterface*>
		constexpr auto bEnableMaterialParameterCaching = 0x450; // char : 1
	}

	namespace n_UWBP_ChallengeEntry_Event_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto animHover = 0x528; // UWidgetAnimation*
		constexpr auto CardContent = 0x530; // UHorizontalBox*
		constexpr auto ChallengeBkg_2 = 0x538; // UImage*
		constexpr auto ChallengeBkg_4 = 0x540; // UImage*
		constexpr auto ChallengeBkg_Complete = 0x548; // UImage*
		constexpr auto ChallengeBkg_Switcher = 0x550; // UWidgetSwitcher*
		constexpr auto ChallengeContentSwitcher = 0x558; // UWidgetSwitcher*
		constexpr auto ChallengeDescription = 0x560; // UTextBlock*
		constexpr auto ChallengeProgressBar = 0x568; // UWBP_ProgressEarnedBar_C*
		constexpr auto ChallengeProgressText = 0x570; // UTextBlock*
		constexpr auto CompletedChallengeBG = 0x578; // UOverlay*
		constexpr auto CompletedCheck = 0x580; // UImage*
		constexpr auto CompletedIcons = 0x588; // UOverlay*
		constexpr auto Content_active = 0x590; // UVerticalBox*
		constexpr auto HeightControl = 0x598; // USizeBox*
		constexpr auto HitTarget = 0x5a0; // UButton*
		constexpr auto Image = 0x5a8; // UImage*
		constexpr auto Image_390 = 0x5b0; // UImage*
		constexpr auto RewardBadge_EXAMPLE = 0x5b8; // UWBP_Challenge_Rewards_Badge_C*
		constexpr auto RewardBadge_EXAMPLE_01 = 0x5c0; // UWBP_Challenge_Rewards_Badge_C*
		constexpr auto RewardsActive = 0x5c8; // UHorizontalBox*
		constexpr auto RewardSwitcher = 0x5d0; // UWidgetSwitcher*
		constexpr auto SelectionFrame = 0x5d8; // UImage*
		constexpr auto CurrentVisualState = 0x5e0; // EChallengeEntry_Card_State
		constexpr auto CurrentActivitySequence = 0x5e8; // FActivitySequenceRow
		constexpr auto OnClicked = 0x618; // FMulticastInlineDelegate
		constexpr auto ButtonClickSound = 0x628; // UAkAudioEvent*
		constexpr auto ButtonHoverSound = 0x630; // UAkAudioEvent*
		constexpr auto Height = 0x638; // float
		constexpr auto Displayed Challenge = 0x640; // UKSActivityInstance*
		constexpr auto RewardScale = 0x648; // float
	}

	namespace n_UBTService_BlackboardBase {
		constexpr auto BlackboardKey = 0x70; // FBlackboardKeySelector
	}

	namespace n_UWBP_StandardButton_Currency_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto Anim_OnHover = 0x528; // UWidgetAnimation*
		constexpr auto ButtonText = 0x530; // UTextBlock*
		constexpr auto Image_65 = 0x538; // UImage*
		constexpr auto SizeBox_113 = 0x540; // USizeBox*
		constexpr auto Text_Price = 0x548; // UTextBlock*
		constexpr auto WBP_StandardButtonMedium = 0x550; // UWBP_StandardButtonMedium_C*
	}

	namespace n_UKSBTD_CanActivateUniqueAbility {
		constexpr auto AbilityValidatorTable = 0x68; // UDataTable*
	}

	namespace n_UClickDragInputBehavior {
		constexpr auto bUpdateModifiersDuringDrag = 0x120; // bool
	}

	namespace n_USoundNodeDistanceCrossFade {
		constexpr auto CrossFadeInput = 0x48; // TArray<FDistanceDatum>
	}

	namespace n_UNiagaraDataInterfaceSkeletalMesh {
		constexpr auto Source = 0x30; // AActor*
		constexpr auto MeshUserParameter = 0x38; // FNiagaraUserParameterBinding
		constexpr auto SourceComponent = 0x60; // USkeletalMeshComponent*
		constexpr auto SkinningMode = 0x68; // ENDISkeletalMesh_SkinningMode
		constexpr auto SamplingRegions = 0x70; // TArray<FName>
		constexpr auto WholeMeshLOD = 0x80; // int32_t
		constexpr auto FilteredBones = 0x88; // TArray<FName>
		constexpr auto FilteredSockets = 0x98; // TArray<FName>
		constexpr auto ExcludeBoneName = 0xa8; // FName
		constexpr auto bExcludeBone = 0xb0; // char : 1
	}

	namespace n_ADecalActor {
		constexpr auto Decal = 0x220; // UDecalComponent*
	}

	namespace n_ALobby_Core_RV_C {
		constexpr auto UberGraphFrame = 0x228; // FPointerToUberGraphFrame
	}

	namespace n_UKSDownloadProgressWidget {
		constexpr auto UpdatePeriod = 0x238; // float
		constexpr auto bMarkedFinished = 0x23c; // bool
		constexpr auto TimeUntilNextUpdate = 0x240; // float
	}

	namespace n_APostProcessVolume {
		constexpr auto Settings = 0x260; // FPostProcessSettings
		constexpr auto Priority = 0x7b0; // float
		constexpr auto BlendRadius = 0x7b4; // float
		constexpr auto BlendWeight = 0x7b8; // float
		constexpr auto bEnabled = 0x7bc; // char : 1
		constexpr auto bUnbound = 0x7bc; // char : 1
	}

	namespace n_UTransformProxy {
		constexpr auto bRotatePerObject = 0x70; // bool
		constexpr auto bSetPivotMode = 0x71; // bool
		constexpr auto SharedTransform = 0x90; // FTransform
		constexpr auto InitialSharedTransform = 0xc0; // FTransform
	}

	namespace n_ALobby_Core_RogueScreen_C {
		constexpr auto UberGraphFrame = 0x228; // FPointerToUberGraphFrame
		constexpr auto Enable Pose Rogue Time Dilation = 0x230; // bool
		constexpr auto PosedRogueActor_ExecuteUbergraph_Lobby_Core_RogueScreen_RefProperty = 0x238; // ARogueScreenPreviewActor_WithPose_C*
		constexpr auto PosedRogueCamera_ExecuteUbergraph_Lobby_Core_RogueScreen_RefProperty = 0x240; // AKSLobbyCameraActor*
	}

	namespace n_UNavCollision {
		constexpr auto CylinderCollision = 0x80; // TArray<FNavCollisionCylinder>
		constexpr auto BoxCollision = 0x90; // TArray<FNavCollisionBox>
		constexpr auto AreaClass = 0xa0; // UNavArea*
		constexpr auto bGatherConvexGeometry = 0xa8; // char : 1
		constexpr auto bCreateOnClient = 0xa8; // char : 1
	}

	namespace n_UWBP_QueueTimer_v2_C {
		constexpr auto UberGraphFrame = 0x530; // FPointerToUberGraphFrame
		constexpr auto Hover = 0x538; // UWidgetAnimation*
		constexpr auto ButtonText = 0x540; // UTextBlock*
		constexpr auto CancelBg = 0x548; // UBorder*
		constexpr auto CancelContainer = 0x550; // UHorizontalBox*
		constexpr auto CancelQueueButton = 0x558; // UButton*
		constexpr auto CancelQueueGamepad = 0x560; // UWBP_KeyCallout_C*
		constexpr auto Container = 0x568; // UOverlay*
		constexpr auto ContentBkg = 0x570; // UBorder*
		constexpr auto HorizontalBox_2 = 0x578; // UHorizontalBox*
		constexpr auto StatusLabel = 0x580; // UTextBlock*
		constexpr auto ColorPalette = 0x588; // UDataTable*
		constexpr auto QueueDataFactory = 0x590; // UKSQueueDataFactory*
	}

	namespace n_UWBP_CompareFoundersEditions_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto OnShow = 0x528; // UWidgetAnimation*
		constexpr auto ConfirmButton = 0x530; // UWBP_StandardButton_02_C*
		constexpr auto Image = 0x538; // UImage*
		constexpr auto Image_2 = 0x540; // UImage*
		constexpr auto Image_3 = 0x548; // UImage*
		constexpr auto Image_4 = 0x550; // UImage*
		constexpr auto Image_156 = 0x558; // UImage*
		constexpr auto Image_525 = 0x560; // UImage*
		constexpr auto Image_947 = 0x568; // UImage*
		constexpr auto Image_1104 = 0x570; // UImage*
		constexpr auto PopupContainer = 0x578; // UWBP_ModalPopupContainer_C*
		constexpr auto RBIcon_2 = 0x580; // UImage*
	}

	namespace n_UARTextureCameraDepth {
		constexpr auto DepthQuality = 0xd8; // EARDepthQuality
		constexpr auto DepthAccuracy = 0xd9; // EARDepthAccuracy
		constexpr auto bIsTemporallySmoothed = 0xda; // bool
	}

	namespace n_UWBP_PlayerIdentity_Full_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto LargeAvatarWrapper = 0x528; // UVerticalBox*
		constexpr auto NameLoadingSwitcher = 0x530; // UWidgetSwitcher*
		constexpr auto NameLoadingWrapper = 0x538; // UScaleBox*
		constexpr auto PlayerNameText = 0x540; // UTextBlock*
		constexpr auto PlayerNameThrobber = 0x548; // UWBP_ThrobberHorizontal_C*
		constexpr auto PlayerNameWrapper = 0x550; // UHorizontalBox*
		constexpr auto RogueMasteryPortrait = 0x558; // UWBP_RogueMasteryPortrait_C*
		constexpr auto RogueMasteryWrapper = 0x560; // UCanvasPanel*
		constexpr auto SmallAvatarWrapper = 0x568; // USizeBox*
		constexpr auto TitleWrapper = 0x570; // USizeBox*
		constexpr auto WBP_PlayerIdentity_Avatar = 0x578; // UWBP_PlayerIdentity_Avatar_C*
		constexpr auto WBP_PlayerIdentity_Avatar_339 = 0x580; // UWBP_PlayerIdentity_Avatar_C*
		constexpr auto WBP_PlayerIdentity_Banner = 0x588; // UWBP_PlayerIdentity_Banner_C*
		constexpr auto WBP_PlayerIdentity_PlayerLevel = 0x590; // UWBP_PlayerIdentity_PlayerLevel_C*
		constexpr auto WBP_PlayerIdentity_Title = 0x598; // UWBP_PlayerIdentity_Title_C*
		constexpr auto LayoutType = 0x5a0; // EPlayerIdentityLayoutType
		constexpr auto Bound Player Info = 0x5a8; // UKSPlayerInfo*
		constexpr auto NameHorizontalAlignment = 0x5b0; // EHorizontalAlignment
		constexpr auto Bound Player State = 0x5b8; // AKSPlayerState*
		constexpr auto UseLocalLoadoutData = 0x5c0; // bool
	}

	namespace n_UPUMG_Widget {
		constexpr auto OnGamepadHovered = 0x238; // FMulticastInlineDelegate
		constexpr auto OnMouseEntered = 0x248; // FMulticastInlineDelegate
		constexpr auto OnNavigateBack = 0x258; // FMulticastInlineDelegate
		constexpr auto OnTextureLoadComplete = 0x268; // FMulticastInlineDelegate
		constexpr auto OnNavigateUpFailed = 0x278; // FMulticastInlineDelegate
		constexpr auto OnNavigateDownFailed = 0x288; // FMulticastInlineDelegate
		constexpr auto OnNavigateLeftFailed = 0x298; // FMulticastInlineDelegate
		constexpr auto OnNavigateRightFailed = 0x2a8; // FMulticastInlineDelegate
		constexpr auto OnFocusGroupNavigateUpFailed = 0x2b8; // FMulticastInlineDelegate
		constexpr auto OnFocusGroupNavigateDownFailed = 0x2c8; // FMulticastInlineDelegate
		constexpr auto OnFocusGroupNavigateLeftFailed = 0x2d8; // FMulticastInlineDelegate
		constexpr auto OnFocusGroupNavigateRightFailed = 0x2e8; // FMulticastInlineDelegate
		constexpr auto OnHideSequenceFinished = 0x2f8; // FMulticastInlineDelegate
		constexpr auto OnShowSequenceFinished = 0x308; // FMulticastInlineDelegate
		constexpr auto MyHud = 0x318; // TWeakObjectPtr<APUMG_HUD>
		constexpr auto MyRouteName = 0x320; // FName
		constexpr auto CloseOnLogout = 0x328; // bool
		constexpr auto IsComponent = 0x329; // bool
		constexpr auto StartsHidden = 0x32a; // bool
		constexpr auto UsesBlocker = 0x32b; // bool
		constexpr auto BlockerClickToClose = 0x32c; // bool
		constexpr auto EnableGameStateSetNotify = 0x32d; // bool
		constexpr auto LoadedTexture = 0x330; // TSoftObjectPtr<UTexture2D>
		constexpr auto MobileLayoutSequencePlayer = 0x4a8; // UPUMG_MobileLayoutSequencePlayer*
		constexpr auto MobileLayoutAnim = 0x4b0; // UWidgetAnimation*
		constexpr auto bMobileLayoutActive = 0x4b8; // bool
	}

	namespace n_UKSNavTabWidget {
		constexpr auto OnNavTabSelected = 0x520; // FMulticastInlineDelegate
		constexpr auto OnNavTabUnselected = 0x530; // FMulticastInlineDelegate
		constexpr auto bSelected = 0x540; // bool
		constexpr auto bDisabled = 0x541; // bool
		constexpr auto NavText = 0x548; // FText
	}

	namespace n_UKSActivityRewardCondition_Distance {
		constexpr auto MaxDistance = 0x30; // float
		constexpr auto MinDistance = 0x34; // float
	}

	namespace n_UKSWeaponMilestoneDisplay {
		constexpr auto PopulatedWeaponAsset = 0x520; // UKSWeaponAsset*
	}

	namespace n_UWBP_ThrobberShield_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto Cycle = 0x240; // UWidgetAnimation*
		constexpr auto Section1 = 0x248; // UImage*
		constexpr auto Section2 = 0x250; // UImage*
		constexpr auto Section3 = 0x258; // UImage*
		constexpr auto Section4 = 0x260; // UImage*
		constexpr auto Section5 = 0x268; // UImage*
		constexpr auto Section6 = 0x270; // UImage*
	}

	namespace n_UFieldSystemMetaDataProcessingResolution {
		constexpr auto ResolutionType = 0xb0; // EFieldResolutionType
	}

	namespace n_UWBP_Guided_Tutorial_Tips_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto OnHidden = 0x528; // UWidgetAnimation*
		constexpr auto OnShow = 0x530; // UWidgetAnimation*
		constexpr auto hover_anim = 0x538; // UWidgetAnimation*
		constexpr auto background = 0x540; // UOverlay*
		constexpr auto GotItButton = 0x548; // UWBP_StandardButtonLarge_C*
		constexpr auto Image_1 = 0x550; // UImage*
		constexpr auto Image_3 = 0x558; // UImage*
		constexpr auto Image_130 = 0x560; // UImage*
		constexpr auto WBP_Guided_Tutorial_Card = 0x568; // UWBP_Guided_Tutorial_Card_C*
		constexpr auto WBP_Guided_Tutorial_Card_2 = 0x570; // UWBP_Guided_Tutorial_Card_C*
		constexpr auto WBP_Guided_Tutorial_Card_3 = 0x578; // UWBP_Guided_Tutorial_Card_C*
		constexpr auto WBP_Header1 = 0x580; // UWBP_Header1_C*
		constexpr auto WBP_panel_bevel = 0x588; // UWBP_panel_bevel_C*
		constexpr auto WBP_panel_bevel_C_1 = 0x590; // UWBP_panel_bevel_C*
		constexpr auto LoginState = 0x598; // EPUMG_LoginState
		constexpr auto CurrentTipScreen = 0x599; // EConfigPropertyGuidedCalloutScenes
		constexpr auto ShowGuidedTutorialTipsSFX = 0x5a0; // UAkAudioEvent*
		constexpr auto NavBackGuidedTutorialTipsSFX = 0x5a8; // UAkAudioEvent*
	}

	namespace n_UMaterialExpressionSubtract {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_UAssetManager {
		constexpr auto ObjectReferenceList = 0x2c0; // TArray<UObject*>
		constexpr auto bIsGlobalAsyncScanEnvironment = 0x2d0; // bool
		constexpr auto bShouldGuessTypeAndName = 0x2d1; // bool
		constexpr auto bShouldUseSynchronousLoad = 0x2d2; // bool
		constexpr auto bIsLoadingFromPakFiles = 0x2d3; // bool
		constexpr auto bShouldAcquireMissingChunksOnLoad = 0x2d4; // bool
		constexpr auto bOnlyCookProductionAssets = 0x2d5; // bool
		constexpr auto bIsBulkScanning = 0x2d6; // bool
		constexpr auto bIsPrimaryAssetDirectoryCurrent = 0x2d7; // bool
		constexpr auto bIsManagementDatabaseCurrent = 0x2d8; // bool
		constexpr auto bUpdateManagementDatabaseAfterScan = 0x2d9; // bool
		constexpr auto bIncludeOnlyOnDiskAssets = 0x2da; // bool
		constexpr auto NumberOfSpawnedNotifications = 0x2dc; // int32_t
		constexpr auto bForceUseAllBundlesDuringLoadRecursive = 0x3d0; // bool
	}

	namespace n_UKSViewedItemLabel {
		constexpr auto UpdateViewLimitPosition = 0x558; // bool
		constexpr auto ViewLimitPosition = 0x55c; // FVector2D
	}

	namespace n_UWBP_DisabledIcon_C {
		constexpr auto Icon = 0x238; // UImage*
	}

	namespace n_ULevelStreaming {
		constexpr auto WorldAsset = 0x28; // TSoftObjectPtr<UWorld>
		constexpr auto PackageNameToLoad = 0x50; // FName
		constexpr auto LODPackageNames = 0x58; // TArray<FName>
		constexpr auto LevelTransform = 0x80; // FTransform
		constexpr auto LevelLODIndex = 0xb4; // int32_t
		constexpr auto StreamingPriority = 0xb8; // int32_t
		constexpr auto bShouldBeVisible = 0xbe; // char : 1
		constexpr auto bShouldBeLoaded = 0xbe; // char : 1
		constexpr auto bLocked = 0xbe; // char : 1
		constexpr auto bIsStatic = 0xbe; // char : 1
		constexpr auto bShouldBlockOnLoad = 0xbe; // char : 1
		constexpr auto bShouldBlockOnUnload = 0xbf; // char : 1
		constexpr auto bDisableDistanceStreaming = 0xbf; // char : 1
		constexpr auto bDrawOnLevelStatusMap = 0xbf; // char : 1
		constexpr auto LevelColor = 0xc0; // FLinearColor
		constexpr auto EditorStreamingVolumes = 0xd0; // TArray<ALevelStreamingVolume*>
		constexpr auto MinTimeBetweenVolumeUnloadRequests = 0xe0; // float
		constexpr auto bExcludeFromAutomatedLightBake = 0xe8; // bool
		constexpr auto OnLevelLoaded = 0xf0; // FMulticastInlineDelegate
		constexpr auto OnLevelUnloaded = 0x100; // FMulticastInlineDelegate
		constexpr auto OnLevelShown = 0x110; // FMulticastInlineDelegate
		constexpr auto OnLevelHidden = 0x120; // FMulticastInlineDelegate
		constexpr auto LoadedLevel = 0x130; // ULevel*
		constexpr auto PendingUnloadLevel = 0x138; // ULevel*
	}

	namespace n_UDebugMenuItem_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto Arrow = 0x528; // UImage*
		constexpr auto ColorBkg = 0x530; // UBorder*
		constexpr auto CommandText = 0x538; // UTextBlock*
		constexpr auto ItemSelected = 0x540; // FMulticastInlineDelegate
		constexpr auto DebugCommand = 0x550; // FDebugMenuCommandInfo
	}

	namespace n_AKSTeamState {
		constexpr auto r_TeamNum = 0x220; // int32_t
		constexpr auto bTeamEliminated = 0x224; // bool
		constexpr auto bTeamEliminatedOrDowned = 0x225; // bool
		constexpr auto OnTeamEliminated = 0x228; // FMulticastInlineDelegate
		constexpr auto OnTeamEliminatedOrDowned = 0x238; // FMulticastInlineDelegate
		constexpr auto OnTeamMemberEliminatedDel = 0x248; // FMulticastInlineDelegate
		constexpr auto OnTeamMemberDownedDel = 0x258; // FMulticastInlineDelegate
		constexpr auto AllMembers = 0x280; // TArray<AKSPlayerState*>
		constexpr auto PlayerMembers = 0x290; // TArray<AKSPlayerState*>
		constexpr auto OnMemberAdded = 0x2b0; // FMulticastInlineDelegate
		constexpr auto OnMemberRemoved = 0x2d8; // FMulticastInlineDelegate
		constexpr auto RespawnConfig = 0x300; // FKSRespawnConfig
		constexpr auto Respawns = 0x318; // int32_t
		constexpr auto OnRespawnsChangedDel = 0x320; // FMulticastInlineDelegate
		constexpr auto OnRespawnQueueChangedDel = 0x330; // FMulticastInlineDelegate
		constexpr auto OnRespawnConfigChangedDel = 0x340; // FMulticastInlineDelegate
		constexpr auto RespawnQueue = 0x350; // TArray<AKSPlayerState*>
		constexpr auto PersistentRespawnQueue = 0x360; // TArray<UKSPersistentPlayerData*>
		constexpr auto Score = 0x370; // int32_t
		constexpr auto IntraScore = 0x374; // int32_t
		constexpr auto IntraScoreGoal = 0x378; // int32_t
		constexpr auto RoundWins = 0x37c; // int32_t
		constexpr auto RoundLosses = 0x380; // int32_t
		constexpr auto OnScoreChanged = 0x388; // FMulticastInlineDelegate
		constexpr auto OnIntraScoreChanged = 0x398; // FMulticastInlineDelegate
		constexpr auto OnIntraScoreGoalChanged = 0x3a8; // FMulticastInlineDelegate
		constexpr auto OnObjectiveRoleChanged = 0x3b8; // FMulticastInlineDelegate
		constexpr auto TeamType = 0x3c8; // EExtractionTeamType
		constexpr auto OnPingAdded = 0x3d0; // FMulticastInlineDelegate
		constexpr auto OnPingRemoved = 0x3e0; // FMulticastInlineDelegate
		constexpr auto OnPingChanged = 0x3f0; // FMulticastInlineDelegate
		constexpr auto JobSelectionClass = 0x400; // UKSJobSelectionComponent*
		constexpr auto JobSelectionComponent = 0x408; // UKSJobSelectionComponent*
		constexpr auto OnJobSelectionComponentReady = 0x410; // FMulticastInlineDelegate
		constexpr auto TotalKills = 0x468; // int32_t
		constexpr auto TotalDeaths = 0x46c; // int32_t
		constexpr auto TotalAssists = 0x470; // int32_t
		constexpr auto SideNum = 0x474; // int32_t
		constexpr auto LocalSideNum = 0x478; // int32_t
		constexpr auto PersistentTeamMembers = 0x480; // TArray<UKSPersistentPlayerData*>
		constexpr auto OnPersistentTeamMemberAdded = 0x490; // FMulticastInlineDelegate
		constexpr auto OnPersistentTeamMemberRemoved = 0x4b8; // FMulticastInlineDelegate
		constexpr auto OnTeamCanSurrenderChanged = 0x4e0; // FMulticastInlineDelegate
		constexpr auto bTeamCanProposeSurrender = 0x4f0; // bool
		constexpr auto SkinMapReplicator = 0x518; // FMultiPlayerSkinMapReplicator
	}

	namespace n_UWBP_ButtonSlot_Cosmetic_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto hoverNoZoom = 0x528; // UWidgetAnimation*
		constexpr auto OnSelect = 0x530; // UWidgetAnimation*
		constexpr auto HueShiftRed = 0x538; // UWidgetAnimation*
		constexpr auto OnHover = 0x540; // UWidgetAnimation*
		constexpr auto ActiveFrame = 0x548; // UImage*
		constexpr auto ActiveFrame_Locked = 0x550; // UImage*
		constexpr auto BaseColorWrapper = 0x558; // UBorder*
		constexpr auto BaseStroke = 0x560; // UImage*
		constexpr auto ButtonContent = 0x568; // UNamedSlot*
		constexpr auto ClickFill = 0x570; // UImage*
		constexpr auto EquippedFrame = 0x578; // UImage*
		constexpr auto GradientFill = 0x580; // UImage*
		constexpr auto GradientFillLight = 0x588; // UImage*
		constexpr auto HighlightColorWrapper = 0x590; // UBorder*
		constexpr auto highlightstroke = 0x598; // UImage*
		constexpr auto HitTarget = 0x5a0; // UButton*
		constexpr auto Image_115 = 0x5a8; // UImage*
		constexpr auto LockedDimmer = 0x5b0; // UImage*
		constexpr auto LockIcon = 0x5b8; // UImage*
		constexpr auto MythicFrame_ColorWrapper = 0x5c0; // UBorder*
		constexpr auto SelectedFrame = 0x5c8; // UImage*
		constexpr auto SelectedFrameSwitcher = 0x5d0; // UWidgetSwitcher*
		constexpr auto OnBtnClicked = 0x5d8; // FMulticastInlineDelegate
		constexpr auto OnBtnHovered = 0x5e8; // FMulticastInlineDelegate
		constexpr auto OnBtnUnhovered = 0x5f8; // FMulticastInlineDelegate
		constexpr auto bIsDisable = 0x608; // bool
		constexpr auto bIsActive = 0x609; // bool
		constexpr auto TintColor = 0x60c; // FLinearColor
		constexpr auto bColorOverride = 0x61c; // bool
		constexpr auto ClickBtnSlotCosmeticSFX = 0x620; // UAkAudioEvent*
		constexpr auto HoverBtnSlotCosmeticSFX = 0x628; // UAkAudioEvent*
	}

	namespace n_UAsyncActionLoadPrimaryAsset {
		constexpr auto Completed = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UOnlineHotfixManager {
		constexpr auto OSSName = 0x1e0; // FString
		constexpr auto HotfixManagerClassName = 0x1f0; // FString
		constexpr auto DebugPrefix = 0x200; // FString
		constexpr auto AssetsHotfixedFromIniFiles = 0x210; // TArray<UObject*>
	}

	namespace n_UWBP_EpilepsyWarning_C {
		constexpr auto RichTextBlock_152 = 0x238; // URichTextBlock*
	}

	namespace n_UEnvQueryGenerator_Composite {
		constexpr auto Generators = 0x50; // TArray<UEnvQueryGenerator*>
		constexpr auto bAllowDifferentItemTypes = 0x60; // char : 1
		constexpr auto bHasMatchingItemType = 0x60; // char : 1
		constexpr auto ForcedItemType = 0x68; // UEnvQueryItemType*
	}

	namespace n_UThermalScopeManagerComponent {
		constexpr auto ThermalScopePPComponentClass = 0xb0; // UThermalScopePPComponent*
		constexpr auto CharacterOwner = 0xc0; // AKSCharacter*
		constexpr auto ActiveThermals = 0xc8; // TArray<FActiveThermalPPComponentInfo>
	}

	namespace n_UWBP_StorePriceDisplay_C {
		constexpr auto PricesBox = 0x238; // UHorizontalBox*
	}

	namespace n_AKSActivityTestManager {
		constexpr auto Activities = 0x220; // TArray<UKSActivity*>
		constexpr auto bInitializeOnBeginPlay = 0x230; // bool
		constexpr auto ActivityInstances = 0x238; // TArray<UKSActivityInstance*>
	}

	namespace n_UWBP_SettingsPreview_Reticle_C {
		constexpr auto UberGraphFrame = 0x538; // FPointerToUberGraphFrame
		constexpr auto Image_42 = 0x540; // UImage*
		constexpr auto Image_305 = 0x548; // UImage*
		constexpr auto RifleReticle = 0x550; // URifleReticle_C*
		constexpr auto ShotgunReticle = 0x558; // UShotgunReticle_C*
		constexpr auto WidgetSwitcher_1 = 0x560; // UWidgetSwitcher*
		constexpr auto SettingsDataFactory = 0x568; // UKSSettingsDataFactory*
	}

	namespace n_UParticleModuleEventReceiverSpawn {
		constexpr auto SpawnCount = 0x40; // FRawDistributionFloat
		constexpr auto bUseParticleTime = 0x70; // char : 1
		constexpr auto bUsePSysLocation = 0x70; // char : 1
		constexpr auto bInheritVelocity = 0x70; // char : 1
		constexpr auto InheritVelocityScale = 0x78; // FRawDistributionVector
		constexpr auto PhysicalMaterials = 0xc0; // TArray<UPhysicalMaterial*>
		constexpr auto bBanPhysicalMaterials = 0xd0; // char : 1
	}

	namespace n_ULandscapeMeshCollisionComponent {
		constexpr auto MeshGuid = 0x510; // FGuid
	}

	namespace n_UWBP_PlayerIDCustomize_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto BG = 0x528; // UImage*
		constexpr auto CosmeticGridSlot = 0x530; // UNamedSlot*
		constexpr auto WBP_Header3 = 0x538; // UWBP_Header3_C*
		constexpr auto WBP_ItemInfoPanel = 0x540; // UWBP_ItemInfoPanel_C*
		constexpr auto WBP_NavBar = 0x548; // UWBP_NavBar_C*
		constexpr auto WBP_PanelDefault = 0x550; // UWBP_PanelDefault_C*
		constexpr auto WBP_PlayerIdentity_Full = 0x558; // UWBP_PlayerIdentity_Full_C*
		constexpr auto CurrentTabIndex = 0x560; // int32_t
		constexpr auto TabCount = 0x564; // int32_t
		constexpr auto PlayerIdentityDirty = 0x568; // bool
	}

	namespace n_UMediaPlaylist {
		constexpr auto Items = 0x28; // TArray<UMediaSource*>
	}

	namespace n_UARTexture {
		constexpr auto TextureType = 0xb8; // EARTextureType
		constexpr auto Timestamp = 0xbc; // float
		constexpr auto ExternalTextureGuid = 0xc0; // FGuid
		constexpr auto Size = 0xd0; // FVector2D
	}

	namespace n_UKSProximityComponent {
		constexpr auto OnProximityInfoUpdated = 0xb0; // FMulticastInlineDelegate
		constexpr auto ProximityFilter = 0xc0; // FKSProximityFilter
		constexpr auto MaxTimeBetweenUpdates = 0xe8; // float
		constexpr auto LOSChannel = 0xec; // ECollisionChannel
		constexpr auto ActorProximityInfoMap = 0xf0; // TMap<AActor*, FKSActorProximityInfo>
		constexpr auto RegisteredShape = 0x150; // UPrimitiveComponent*
		constexpr auto bProximityCheckingEnabled = 0x158; // bool
	}

	namespace n_UStaticMeshSimulationComponent {
		constexpr auto Simulating = 0xb8; // bool
		constexpr auto bNotifyCollisions = 0xb9; // bool
		constexpr auto ObjectType = 0xba; // EObjectStateTypeEnum
		constexpr auto Mass = 0xbc; // float
		constexpr auto CollisionType = 0xc0; // ECollisionTypeEnum
		constexpr auto ImplicitType = 0xc1; // EImplicitTypeEnum
		constexpr auto MinLevelSetResolution = 0xc4; // int32_t
		constexpr auto MaxLevelSetResolution = 0xc8; // int32_t
		constexpr auto InitialVelocityType = 0xcc; // EInitialVelocityTypeEnum
		constexpr auto InitialLinearVelocity = 0xd0; // FVector
		constexpr auto InitialAngularVelocity = 0xdc; // FVector
		constexpr auto DamageThreshold = 0xe8; // float
		constexpr auto PhysicalMaterial = 0xf0; // UChaosPhysicalMaterial*
		constexpr auto ChaosSolverActor = 0xf8; // AChaosSolverActor*
		constexpr auto OnChaosPhysicsCollision = 0x100; // FMulticastInlineDelegate
		constexpr auto SimulatedComponents = 0x120; // TArray<UPrimitiveComponent*>
	}

	namespace n_UAnimNotify_SkinnedAkEvent {
		constexpr auto AttachName = 0x38; // FName
		constexpr auto Event = 0x40; // UAkAudioEvent*
		constexpr auto bFollow = 0x48; // bool
		constexpr auto EventName = 0x50; // FString
		constexpr auto SkinKeyword = 0x60; // FName
	}

	namespace n_UFieldSystemMetaDataIteration {
		constexpr auto Iterations = 0xb0; // int32_t
	}

	namespace n_UShowLoginUICallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UKSBTTask_WeaponDistanceChecks {
		constexpr auto IntervalCheckRangeMeters = 0x70; // float
		constexpr auto CombatTargetKey = 0x78; // FBlackboardKeySelector
		constexpr auto IdealAttackRangeKey = 0xa0; // FBlackboardKeySelector
		constexpr auto StartAttackRangeKey = 0xc8; // FBlackboardKeySelector
		constexpr auto InIdealRangeKey = 0xf0; // FBlackboardKeySelector
		constexpr auto InAttackRangeKey = 0x118; // FBlackboardKeySelector
		constexpr auto TooCloseKey = 0x140; // FBlackboardKeySelector
	}

	namespace n_UPlayerHealthMeterSegment_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto DownedPulse = 0x240; // UWidgetAnimation*
		constexpr auto ImmunePulse = 0x248; // UWidgetAnimation*
		constexpr auto DisableImmune = 0x250; // UWidgetAnimation*
		constexpr auto EnableImmune = 0x258; // UWidgetAnimation*
		constexpr auto DamagePulse = 0x260; // UWidgetAnimation*
		constexpr auto Dot_Lower = 0x268; // UImage*
		constexpr auto Dot_Upper = 0x270; // UImage*
		constexpr auto Dots = 0x278; // UCanvasPanel*
		constexpr auto EnemyDownedBG = 0x280; // UImage*
		constexpr auto Image_120 = 0x288; // UImage*
		constexpr auto IsDownedSwitcher = 0x290; // UWidgetSwitcher*
		constexpr auto SegmentBGSwitcher = 0x298; // UWidgetSwitcher*
		constexpr auto SliceArmor = 0x2a0; // UOverlay*
		constexpr auto SliceArmorDamaged = 0x2a8; // UImage*
		constexpr auto SliceArmorFill = 0x2b0; // UImage*
		constexpr auto SliceArmorTrim = 0x2b8; // UImage*
		constexpr auto SliceDownedFill_2 = 0x2c0; // UImage*
		constexpr auto SliceDownedTrim_2 = 0x2c8; // UImage*
		constexpr auto SliceHealth = 0x2d0; // UOverlay*
		constexpr auto SliceHealthDamaged = 0x2d8; // UImage*
		constexpr auto SliceHealthFill = 0x2e0; // UImage*
		constexpr auto SliceHealthTrim = 0x2e8; // UImage*
		constexpr auto SliceImmuneFill = 0x2f0; // UImage*
		constexpr auto SliceImmuneOverlay = 0x2f8; // UOverlay*
		constexpr auto SliceInactive = 0x300; // UOverlay*
		constexpr auto SliceInactiveFill = 0x308; // UImage*
		constexpr auto SliceMissing = 0x310; // USpacer*
		constexpr auto SliceOverheal = 0x318; // UOverlay*
		constexpr auto SliceOverhealDamaged = 0x320; // UImage*
		constexpr auto SliceOverhealFill = 0x328; // UImage*
		constexpr auto SliceOverhealTrim = 0x330; // UImage*
		constexpr auto StandardBG = 0x338; // UImage*
		constexpr auto bIsEnemyHealth = 0x340; // bool
		constexpr auto ColorCorrection = 0x341; // EColorVisionDeficiency
	}

	namespace n_UWBP_RelatedRoguesGroup_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto EntryContainer = 0x528; // UWrapBox*
		constexpr auto Label = 0x530; // UTextBlock*
		constexpr auto ShowLabel = 0x538; // USizeBox*
		constexpr auto WBP_RelatedRogueEntry_EXAMPLE = 0x540; // UWBP_RelatedRogueEntry_C*
		constexpr auto WBP_RelatedRogueEntry_EXAMPLE_2 = 0x548; // UWBP_RelatedRogueEntry_C*
		constexpr auto WBP_RelatedRogueEntry_EXAMPLE_3 = 0x550; // UWBP_RelatedRogueEntry_C*
		constexpr auto WBP_RelatedRogueEntry_EXAMPLE_4 = 0x558; // UWBP_RelatedRogueEntry_C*
		constexpr auto WBP_RelatedRogueEntry_EXAMPLE_5 = 0x560; // UWBP_RelatedRogueEntry_C*
		constexpr auto WBP_RelatedRogueEntry_EXAMPLE_6 = 0x568; // UWBP_RelatedRogueEntry_C*
		constexpr auto WBP_RelatedRogueEntry_EXAMPLE_7 = 0x570; // UWBP_RelatedRogueEntry_C*
		constexpr auto WBP_RelatedRogueEntry_EXAMPLE_8 = 0x578; // UWBP_RelatedRogueEntry_C*
		constexpr auto WBP_RelatedRogueEntry_EXAMPLE_9 = 0x580; // UWBP_RelatedRogueEntry_C*
		constexpr auto WBP_RelatedRogueEntry_EXAMPLE_10 = 0x588; // UWBP_RelatedRogueEntry_C*
		constexpr auto bHideLabel = 0x590; // bool
	}

	namespace n_UCheckBoxStyleAsset {
		constexpr auto CheckBoxStyle = 0x28; // FCheckBoxStyle
	}

	namespace n_UMaterialExpressionClamp {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Min = 0x54; // FExpressionInput
		constexpr auto Max = 0x68; // FExpressionInput
		constexpr auto ClampMode = 0x7c; // EClampMode
		constexpr auto MinDefault = 0x80; // float
		constexpr auto MaxDefault = 0x84; // float
	}

	namespace n_ARectLight {
		constexpr auto RectLightComponent = 0x230; // URectLightComponent*
	}

	namespace n_UBTDecorator_Cooldown {
		constexpr auto CooldownTime = 0x68; // float
	}

	namespace n_UKSWAttachmentCosmetic_VarScope {
		constexpr auto VariableScopeAsset = 0x1b0; // UKSWeaponAttachment_VarScope*
		constexpr auto ScopeZoomIndex = 0x1b8; // char
	}

	namespace n_UKSWeaponAttachment {
		constexpr auto FunctionalClass = 0x250; // TSoftClassPtr<UObject>
		constexpr auto CosmeticClass = 0x278; // TSoftClassPtr<UObject>
		constexpr auto ValidAttachPoints = 0x2a0; // FGameplayTagContainer
		constexpr auto WeaponCompatibilityRules = 0x2c0; // UKSAttachmentCompatRules*
		constexpr auto CompatibleWeaponTypes = 0x2c8; // FGameplayTagContainer
		constexpr auto bShouldBeInAttachmentCollection = 0x2e8; // bool
		constexpr auto GlobalWeaponAttachmentCollection = 0x2f0; // UAttachmentCollection*
	}

	namespace n_UKSBTTask_SetWaypointDefenseTimer {
		constexpr auto WayPoint = 0x70; // FBlackboardKeySelector
		constexpr auto DefenseTimer = 0x98; // FBlackboardKeySelector
	}

	namespace n_UKSAnimInstance {
		constexpr auto bIsInLobbyViewer = 0x2c8; // bool
		constexpr auto bRecordAnimStats = 0x2c9; // bool
		constexpr auto AuditingComponent = 0x2d0; // UKSAnimationAuditComponent*
		constexpr auto bPlayingMirrorTransition = 0x2e8; // bool
		constexpr auto bAnimMirrorDelay = 0x2e9; // bool
		constexpr auto bDisableMirrorPose = 0x2ea; // bool
		constexpr auto bWantsMirroredPoseCosmetic = 0x2eb; // bool
		constexpr auto PoseMirrorAlphaCosmetic = 0x2ec; // float
		constexpr auto MirrorInterpSpeed = 0x2f0; // float
		constexpr auto MirrorInterpSpeedEngaged = 0x2f4; // float
		constexpr auto ShoulderSwapProgress = 0x2f8; // float
		constexpr auto CurrentShoulderCosmetic = 0x2fc; // ECameraShoulder
		constexpr auto BoneMirrorConfig = 0x300; // FBoneMirrorConfig
		constexpr auto CurrentShoulder = 0x320; // ECameraShoulder
		constexpr auto bWantsMirroredPose = 0x321; // bool
		constexpr auto PoseMirrorAlpha = 0x324; // float
		constexpr auto bIsShieldActive = 0x328; // bool
	}

	namespace n_UGridPanel {
		constexpr auto ColumnFill = 0x128; // TArray<float>
		constexpr auto RowFill = 0x138; // TArray<float>
	}

	namespace n_UMovieScenePropertyTrack {
		constexpr auto SectionToKey = 0x58; // UMovieSceneSection*
		constexpr auto PropertyName = 0x60; // FName
		constexpr auto PropertyPath = 0x68; // FString
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_UReticleBase_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto LoneDot = 0x240; // UImage*
		constexpr auto LowAmmoThreshold = 0x248; // float
		constexpr auto CriticallyLowAmmoThreshold = 0x24c; // float
		constexpr auto SettingsColorOptionAsset = 0x250; // UKSSettingsColorOptionsAsset*
	}

	namespace n_UDatasmithSkyLightComponentTemplate {
		constexpr auto SourceType = 0x30; // ESkyLightSourceType
		constexpr auto CubemapResolution = 0x34; // int32_t
		constexpr auto Cubemap = 0x38; // UTextureCube*
	}

	namespace n_ULocalPlayer {
		constexpr auto ViewportClient = 0x70; // UGameViewportClient*
		constexpr auto AspectRatioAxisConstraint = 0x94; // EAspectRatioAxisConstraint
		constexpr auto PendingLevelPlayerControllerClass = 0x98; // APlayerController*
		constexpr auto bSentSplitJoin = 0xa0; // char : 1
		constexpr auto ControllerId = 0xb8; // int32_t
	}

	namespace n_UMaterialExpressionArctangent2Fast {
		constexpr auto Y = 0x40; // FExpressionInput
		constexpr auto X = 0x54; // FExpressionInput
	}

	namespace n_UMovieSceneAudioSection {
		constexpr auto Sound = 0xe0; // USoundBase*
		constexpr auto StartFrameOffset = 0xe8; // FFrameNumber
		constexpr auto StartOffset = 0xec; // float
		constexpr auto AudioStartTime = 0xf0; // float
		constexpr auto AudioDilationFactor = 0xf4; // float
		constexpr auto AudioVolume = 0xf8; // float
		constexpr auto SoundVolume = 0x100; // FMovieSceneFloatChannel
		constexpr auto PitchMultiplier = 0x1a0; // FMovieSceneFloatChannel
		constexpr auto AttachActorData = 0x240; // FMovieSceneActorReferenceData
		constexpr auto bSuppressSubtitles = 0x2f0; // bool
		constexpr auto bOverrideAttenuation = 0x2f1; // bool
		constexpr auto AttenuationSettings = 0x2f8; // USoundAttenuation*
		constexpr auto OnQueueSubtitles = 0x300; // FDelegate
		constexpr auto OnAudioFinished = 0x310; // FMulticastInlineDelegate
		constexpr auto OnAudioPlaybackPercent = 0x320; // FMulticastInlineDelegate
	}

	namespace n_UKSBTD_IsApproachingDropLocation {
		constexpr auto DropLocationKey = 0x68; // FBlackboardKeySelector
		constexpr auto DropLocationVectorKey = 0x90; // FBlackboardKeySelector
	}

	namespace n_UProjectileMovementComponent {
		constexpr auto InitialSpeed = 0xf0; // float
		constexpr auto MaxSpeed = 0xf4; // float
		constexpr auto bRotationFollowsVelocity = 0xf8; // char : 1
		constexpr auto bRotationRemainsVertical = 0xf8; // char : 1
		constexpr auto bShouldBounce = 0xf8; // char : 1
		constexpr auto bInitialVelocityInLocalSpace = 0xf8; // char : 1
		constexpr auto bForceSubStepping = 0xf8; // char : 1
		constexpr auto bSimulationEnabled = 0xf8; // char : 1
		constexpr auto bSweepCollision = 0xf8; // char : 1
		constexpr auto bIsHomingProjectile = 0xf8; // char : 1
		constexpr auto bBounceAngleAffectsFriction = 0xf9; // char : 1
		constexpr auto bIsSliding = 0xf9; // char : 1
		constexpr auto bInterpMovement = 0xf9; // char : 1
		constexpr auto bInterpRotation = 0xf9; // char : 1
		constexpr auto PreviousHitTime = 0xfc; // float
		constexpr auto PreviousHitNormal = 0x100; // FVector
		constexpr auto ProjectileGravityScale = 0x10c; // float
		constexpr auto Buoyancy = 0x110; // float
		constexpr auto Bounciness = 0x114; // float
		constexpr auto Friction = 0x118; // float
		constexpr auto BounceVelocityStopSimulatingThreshold = 0x11c; // float
		constexpr auto MinFrictionFraction = 0x120; // float
		constexpr auto OnProjectileBounce = 0x128; // FMulticastInlineDelegate
		constexpr auto OnProjectileStop = 0x138; // FMulticastInlineDelegate
		constexpr auto HomingAccelerationMagnitude = 0x148; // float
		constexpr auto HomingTargetComponent = 0x14c; // TWeakObjectPtr<USceneComponent>
		constexpr auto MaxSimulationTimeStep = 0x154; // float
		constexpr auto MaxSimulationIterations = 0x158; // int32_t
		constexpr auto BounceAdditionalIterations = 0x15c; // int32_t
		constexpr auto InterpLocationTime = 0x160; // float
		constexpr auto InterpRotationTime = 0x164; // float
		constexpr auto InterpLocationMaxLagDistance = 0x168; // float
		constexpr auto InterpLocationSnapToTargetDistance = 0x16c; // float
	}

	namespace n_UDemoNetDriver {
		constexpr auto RollbackNetStartupActors = 0x870; // TMap<FString, FRollbackNetStartupActorInfo>
		constexpr auto CheckpointSaveMaxMSPerFrame = 0xc84; // float
		constexpr auto MulticastRecordOptions = 0xcb8; // TArray<FMulticastRecordOptions>
		constexpr auto bIsLocalReplay = 0xd18; // bool
		constexpr auto SpectatorControllers = 0xd20; // TArray<APlayerController*>
	}

	namespace n_UNiagaraSettings {
		constexpr auto AdditionalParameterTypes = 0x38; // TArray<FSoftObjectPath>
		constexpr auto AdditionalPayloadTypes = 0x48; // TArray<FSoftObjectPath>
		constexpr auto AdditionalParameterEnums = 0x58; // TArray<FSoftObjectPath>
		constexpr auto DefaultEffectType = 0x68; // FSoftObjectPath
		constexpr auto QualityLevels = 0x80; // TArray<FText>
		constexpr auto DefaultEffectTypePtr = 0x90; // UNiagaraEffectType*
	}

	namespace n_UWBP_Subtitle_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto Text = 0x240; // UTextBlock*
		constexpr auto TextValue = 0x248; // FText
	}

	namespace n_UWBP_InputCallout_C {
		constexpr auto UberGraphFrame = 0x4c0; // FPointerToUberGraphFrame
		constexpr auto ComboText = 0x4c8; // UTextBlock*
		constexpr auto MeterBkg = 0x4d0; // UImage*
		constexpr auto PrimaryBox = 0x4d8; // USizeBox*
		constexpr auto PrimaryImage = 0x4e0; // UWBP_KeyCallout_C*
		constexpr auto PrimaryPrompt = 0x4e8; // UTextBlock*
		constexpr auto PrimarySwitcher = 0x4f0; // UWidgetSwitcher*
		constexpr auto ProgressCircle = 0x4f8; // UImage*
		constexpr auto SecondaryBox = 0x500; // USizeBox*
		constexpr auto SecondaryImage = 0x508; // UWBP_KeyCallout_C*
		constexpr auto SecondaryPrompt = 0x510; // UTextBlock*
		constexpr auto SecondarySwitcher = 0x518; // UWidgetSwitcher*
		constexpr auto ActionNames = 0x520; // TArray<FName>
		constexpr auto KBM_Name = 0x530; // FName
		constexpr auto GP_Name = 0x538; // FName
		constexpr auto M_Name = 0x540; // FName
		constexpr auto IsGamepadDoubleTap = 0x548; // bool
		constexpr auto SecondaryKey = 0x550; // FKey
		constexpr auto PrimaryKey = 0x568; // FKey
		constexpr auto bFallbackToDefaultInputs = 0x580; // bool
	}

	namespace n_UANotifyState_VFX_C {
		constexpr auto ParticleSystem = 0x30; // UParticleSystem*
		constexpr auto LocationOffset = 0x38; // FVector
		constexpr auto RotationOffset = 0x44; // FRotator
		constexpr auto Scale = 0x50; // FVector
		constexpr auto Attached = 0x5c; // bool
		constexpr auto SocketName = 0x60; // FName
		constexpr auto UseSkinnedParticleSystem = 0x68; // bool
		constexpr auto SkinnedParticleSystemName = 0x6c; // FName
	}

	namespace n_UTimelineComponent {
		constexpr auto TheTimeline = 0xb0; // FTimeline
		constexpr auto bIgnoreTimeDilation = 0x148; // char : 1
	}

	namespace n_UKSSettingsContainer {
		constexpr auto SettingsWidgets = 0x520; // TArray<UKSSettingsWidget*>
		constexpr auto AssociatePreviewWidget = 0x530; // UKSSettingsPreview*
		constexpr auto ContainerConfigAsset = 0x538; // UKSSettingsContainerConfigAsset*
	}

	namespace n_UMaterialExpressionArctangentFast {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UWBP_WeaponMasteryTrackSection_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto MasteryRewardEntries = 0x528; // UHorizontalBox*
		constexpr auto WBP_ProgressEarnedBar = 0x530; // UWBP_ProgressEarnedBar_C*
		constexpr auto WBP_WeaponMasteryTrackLevel = 0x538; // UWBP_WeaponMasteryTrackLevel_C*
		constexpr auto WBP_WeaponMasteryTrackLevel_2 = 0x540; // UWBP_WeaponMasteryTrackLevel_C*
		constexpr auto WBP_WeaponMasteryTrackLevel_3 = 0x548; // UWBP_WeaponMasteryTrackLevel_C*
		constexpr auto WBP_WeaponMasteryTrackLevel_4 = 0x550; // UWBP_WeaponMasteryTrackLevel_C*
		constexpr auto WBP_WeaponMasteryTrackLevel_5 = 0x558; // UWBP_WeaponMasteryTrackLevel_C*
		constexpr auto WBP_WeaponMasteryTrackLevel_6 = 0x560; // UWBP_WeaponMasteryTrackLevel_C*
		constexpr auto OnTrackEntrySelected = 0x568; // FMulticastInlineDelegate
		constexpr auto LastSelectedActivity = 0x578; // FActivityTier
	}

	namespace n_UKSNewsRotatorData {
		constexpr auto Image = 0x80; // UTexture2DDynamic*
		constexpr auto Header = 0x88; // FText
		constexpr auto Body = 0xa0; // FText
		constexpr auto PanelAction = 0xb8; // ENewsActions
		constexpr auto ActionDetails = 0xc0; // FString
	}

	namespace n_UBTDecorator_TimeLimit {
		constexpr auto TimeLimit = 0x68; // float
	}

	namespace n_UCameraAnimInst {
		constexpr auto CamAnim = 0x28; // UCameraAnim*
		constexpr auto InterpGroupInst = 0x30; // UInterpGroupInst*
		constexpr auto PlayRate = 0x50; // float
		constexpr auto MoveTrack = 0x68; // UInterpTrackMove*
		constexpr auto MoveInst = 0x70; // UInterpTrackInstMove*
		constexpr auto PlaySpace = 0x78; // ECameraAnimPlaySpace
	}

	namespace n_ALevelStreamingVolume {
		constexpr auto StreamingLevelNames = 0x258; // TArray<FName>
		constexpr auto bEditorPreVisOnly = 0x268; // char : 1
		constexpr auto bDisabled = 0x268; // char : 1
		constexpr auto StreamingUsage = 0x26c; // EStreamingVolumeUsage
	}

	namespace n_UPropertyValue {
		constexpr auto Properties = 0x88; // TArray<TFieldPath<FProperty>>
		constexpr auto PropertyIndices = 0x98; // TArray<int32_t>
		constexpr auto CapturedPropSegments = 0xa8; // TArray<FCapturedPropSegment>
		constexpr auto FullDisplayString = 0xb8; // FString
		constexpr auto PropertySetterName = 0xc8; // FName
		constexpr auto PropertySetterParameterDefaults = 0xd0; // TMap<FString, FString>
		constexpr auto bHasRecordedData = 0x120; // bool
		constexpr auto LeafPropertyClass = 0x128; // UObject*
		constexpr auto ValueBytes = 0x138; // TArray<char>
		constexpr auto PropCategory = 0x148; // EPropertyValueCategory
	}

	namespace n_UNavigationSystemConfig {
		constexpr auto NavigationSystemClass = 0x28; // FSoftClassPath
		constexpr auto SupportedAgentsMask = 0x40; // FNavAgentSelector
		constexpr auto DefaultAgentName = 0x44; // FName
		constexpr auto bIsOverriden = 0x4c; // char : 1
	}

	namespace n_UWBP_Challenge_Panel_v2_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto OnButtonHoverAnim = 0x528; // UWidgetAnimation*
		constexpr auto Btn_BkgHoverGradient = 0x530; // UImage*
		constexpr auto Btn_BkgPress = 0x538; // UImage*
		constexpr auto Btn_Fill = 0x540; // UImage*
		constexpr auto Btn_HoverStroke = 0x548; // UImage*
		constexpr auto Btn_Stroke = 0x550; // UImage*
		constexpr auto ButtonBackground = 0x558; // UOverlay*
		constexpr auto CarouselControls = 0x560; // UHorizontalBox*
		constexpr auto CarouselHeaderWrapper = 0x568; // UHorizontalBox*
		constexpr auto Challenge0 = 0x570; // UWBP_ChallengeEntry_Daily_Truncated_C*
		constexpr auto Challenge1 = 0x578; // UWBP_ChallengeEntry_Daily_Truncated_C*
		constexpr auto Challenge2 = 0x580; // UWBP_ChallengeEntry_Daily_Truncated_C*
		constexpr auto ContractsDisplay = 0x588; // UVerticalBox*
		constexpr auto CTAWrapper = 0x590; // UScaleBox*
		constexpr auto HitTarget = 0x598; // UButton*
		constexpr auto LeftNavPrompt_2 = 0x5a0; // UWBP_ControllerPrompt_C*
		constexpr auto NavLeftSwitcher = 0x5a8; // UWidgetSwitcher*
		constexpr auto NavRightSwitcher = 0x5b0; // UWidgetSwitcher*
		constexpr auto RightNavPrompt = 0x5b8; // UWBP_ControllerPrompt_C*
		constexpr auto RotatorButtons = 0x5c0; // UHorizontalBox*
		constexpr auto ScrollLeftButton = 0x5c8; // UWBP_ButtonArrow_C*
		constexpr auto ScrollLeftButton_2 = 0x5d0; // UWBP_ButtonArrow_C*
		constexpr auto WaitingForChallenges = 0x5d8; // UCanvasPanel*
		constexpr auto WBP_CallToAction = 0x5e0; // UWBP_CallToAction_C*
		constexpr auto WBP_Header3 = 0x5e8; // UWBP_Header3_C*
		constexpr auto WBP_NewsRotatorButton = 0x5f0; // UWBP_NewsRotatorButton_C*
		constexpr auto ChallengeRenderers = 0x5f8; // TArray<UWBP_Challenge_Renderer_C*>
		constexpr auto SceneOwner = 0x608; // FName
		constexpr auto CompoundHover = 0x610; // bool
		constexpr auto CurrentChallengeDataTableRow = 0x614; // FName
		constexpr auto CurrentChallengeDataTableTag = 0x61c; // FGameplayTag
		constexpr auto ContractsTag = 0x624; // FGameplayTag
	}

	namespace n_UMonoWaveTableSynthPreset {
		constexpr auto PresetName = 0x28; // FString
		constexpr auto bLockKeyframesToGridBool = 0x38; // char : 1
		constexpr auto LockKeyframesToGrid = 0x3c; // int32_t
		constexpr auto WaveTableResolution = 0x40; // int32_t
		constexpr auto WaveTable = 0x48; // TArray<FRuntimeFloatCurve>
		constexpr auto bNormalizeWaveTables = 0x58; // char : 1
	}

	namespace n_UBlueprintGeneratedClass {
		constexpr auto NumReplicatedProperties = 0x230; // int32_t
		constexpr auto bHasNativizedParent = 0x234; // char : 1
		constexpr auto bHasCookedComponentInstancingData = 0x234; // char : 1
		constexpr auto DynamicBindingObjects = 0x238; // TArray<UDynamicBlueprintBinding*>
		constexpr auto ComponentTemplates = 0x248; // TArray<UActorComponent*>
		constexpr auto Timelines = 0x258; // TArray<UTimelineTemplate*>
		constexpr auto ComponentClassOverrides = 0x268; // TArray<FBPComponentClassOverride>
		constexpr auto SimpleConstructionScript = 0x278; // USimpleConstructionScript*
		constexpr auto InheritableComponentHandler = 0x280; // UInheritableComponentHandler*
		constexpr auto UberGraphFramePointerProperty = 0x288; // UStructProperty*
		constexpr auto UberGraphFunction = 0x298; // UFunction*
		constexpr auto CookedComponentInstancingData = 0x2a0; // TMap<FName, FBlueprintCookedComponentInstancingData>
	}

	namespace n_UKSCharacterAnimInstBase {
		constexpr auto MovementDirection = 0x330; // EKSMovementDirection
		constexpr auto Velocity = 0x334; // FVector
		constexpr auto LocalVelocity = 0x340; // FVector
		constexpr auto AccelDirection = 0x34c; // FVector
		constexpr auto LocalAccelDirection = 0x358; // FVector
		constexpr auto CurMaxSpeed = 0x364; // float
		constexpr auto FloorNormal = 0x368; // FVector
		constexpr auto AccelRightDirection = 0x374; // FVector
		constexpr auto AccelNormDirection = 0x380; // FVector
		constexpr auto SlopeAngle = 0x38c; // float
		constexpr auto SlopeAngleTarget = 0x390; // float
		constexpr auto SlopeAngleDirectional = 0x394; // FVector2D
		constexpr auto SlopeAngleDirectionalRotation = 0x39c; // FRotator
		constexpr auto SlopeFeetAlpha = 0x3a8; // float
		constexpr auto SlopeFeetAlphaTarget = 0x3ac; // float
		constexpr auto RootAdjustmentOnSlope = 0x3b0; // FVector
		constexpr auto bDisableFeetTilting = 0x3bc; // bool
		constexpr auto fSlopeInterpSpeed = 0x3c0; // float
		constexpr auto bUpdateMovement = 0x3c4; // char : 1
		constexpr auto bFalling = 0x3c4; // char : 1
	}

	namespace n_UKSItem_Gender {
		constexpr auto Gender = 0x250; // FKSCharacterGender
	}

	namespace n_UKSModInst_PingOnOtherDowned {
		constexpr auto PingHandles = 0x1b8; // TArray<FDownedEnemyPingHandle>
		constexpr auto DownedRevealParameters = 0x1c8; // FKSRevealInfo
		constexpr auto CastOwningMod = 0x210; // TWeakObjectPtr<UKSPlayerMod_PingOnOtherDowned>
		constexpr auto OwningController = 0x218; // TWeakObjectPtr<AKSPlayerController>
	}

	namespace n_UWidgetInteractionComponent {
		constexpr auto OnHoveredWidgetChanged = 0x208; // FMulticastInlineDelegate
		constexpr auto VirtualUserIndex = 0x228; // int32_t
		constexpr auto PointerIndex = 0x22c; // float
		constexpr auto TraceChannel = 0x230; // ECollisionChannel
		constexpr auto InteractionDistance = 0x234; // float
		constexpr auto InteractionSource = 0x238; // EWidgetInteractionSource
		constexpr auto bEnableHitTesting = 0x239; // bool
		constexpr auto bShowDebug = 0x23a; // bool
		constexpr auto DebugColor = 0x23c; // FLinearColor
		constexpr auto CustomHitResult = 0x2c8; // FHitResult
		constexpr auto LocalHitLocation = 0x350; // FVector2D
		constexpr auto LastLocalHitLocation = 0x358; // FVector2D
		constexpr auto HoveredWidgetComponent = 0x360; // UWidgetComponent*
		constexpr auto LastHitResult = 0x368; // FHitResult
		constexpr auto bIsHoveredWidgetInteractable = 0x3f0; // bool
		constexpr auto bIsHoveredWidgetFocusable = 0x3f1; // bool
		constexpr auto bIsHoveredWidgetHitTestVisible = 0x3f2; // bool
	}

	namespace n_UPrimitiveComponent {
		constexpr auto MinDrawDistance = 0x210; // float
		constexpr auto LDMaxDrawDistance = 0x214; // float
		constexpr auto CachedMaxDrawDistance = 0x218; // float
		constexpr auto DepthPriorityGroup = 0x21c; // ESceneDepthPriorityGroup
		constexpr auto ViewOwnerDepthPriorityGroup = 0x21d; // ESceneDepthPriorityGroup
		constexpr auto IndirectLightingCacheQuality = 0x21e; // EIndirectLightingCacheQuality
		constexpr auto LightmapType = 0x21f; // ELightmapType
		constexpr auto bUseMaxLODAsImposter = 0x220; // char : 1
		constexpr auto bBatchImpostersAsInstances = 0x220; // char : 1
		constexpr auto bNeverDistanceCull = 0x220; // char : 1
		constexpr auto bForceLocalLighting = 0x220; // char : 1
		constexpr auto bAlwaysCreatePhysicsState = 0x221; // char : 1
		constexpr auto bGenerateOverlapEvents = 0x221; // char : 1
		constexpr auto bMultiBodyOverlap = 0x221; // char : 1
		constexpr auto bTraceComplexOnMove = 0x221; // char : 1
		constexpr auto bReturnMaterialOnMove = 0x221; // char : 1
		constexpr auto bUseViewOwnerDepthPriorityGroup = 0x221; // char : 1
		constexpr auto bAllowCullDistanceVolume = 0x221; // char : 1
		constexpr auto bHasMotionBlurVelocityMeshes = 0x221; // char : 1
		constexpr auto bVisibleInReflectionCaptures = 0x222; // char : 1
		constexpr auto bVisibleInRayTracing = 0x222; // char : 1
		constexpr auto bRenderInMainPass = 0x222; // char : 1
		constexpr auto bRenderInDepthPass = 0x222; // char : 1
		constexpr auto bReceivesDecals = 0x222; // char : 1
		constexpr auto bOwnerNoSee = 0x222; // char : 1
		constexpr auto bOnlyOwnerSee = 0x222; // char : 1
		constexpr auto bTreatAsBackgroundForOcclusion = 0x222; // char : 1
		constexpr auto bUseAsOccluder = 0x223; // char : 1
		constexpr auto bSelectable = 0x223; // char : 1
		constexpr auto bForceMipStreaming = 0x223; // char : 1
		constexpr auto bHasPerInstanceHitProxies = 0x223; // char : 1
		constexpr auto CastShadow = 0x223; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x223; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x223; // char : 1
		constexpr auto bCastDynamicShadow = 0x223; // char : 1
		constexpr auto bCastStaticShadow = 0x224; // char : 1
		constexpr auto bCastVolumetricTranslucentShadow = 0x224; // char : 1
		constexpr auto bSelfShadowOnly = 0x224; // char : 1
		constexpr auto bCastFarShadow = 0x224; // char : 1
		constexpr auto bCastInsetShadow = 0x224; // char : 1
		constexpr auto bCastCinematicShadow = 0x224; // char : 1
		constexpr auto bCastHiddenShadow = 0x224; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x224; // char : 1
		constexpr auto bShouldNotReceiveCapsuleShadows = 0x225; // char : 1
		constexpr auto bLightAsIfStatic = 0x225; // char : 1
		constexpr auto bLightAttachmentsAsGroup = 0x225; // char : 1
		constexpr auto bExcludeFromLightAttachmentGroup = 0x225; // char : 1
		constexpr auto bReceiveMobileCSMShadows = 0x225; // char : 1
		constexpr auto bSingleSampleShadowFromStationaryLights = 0x225; // char : 1
		constexpr auto bIgnoreRadialImpulse = 0x225; // char : 1
		constexpr auto bIgnoreRadialForce = 0x225; // char : 1
		constexpr auto bApplyImpulseOnDamage = 0x226; // char : 1
		constexpr auto bReplicatePhysicsToAutonomousProxy = 0x226; // char : 1
		constexpr auto bFillCollisionUnderneathForNavmesh = 0x226; // char : 1
		constexpr auto AlwaysLoadOnClient = 0x226; // char : 1
		constexpr auto AlwaysLoadOnServer = 0x226; // char : 1
		constexpr auto bUseEditorCompositing = 0x226; // char : 1
		constexpr auto bRenderCustomDepth = 0x226; // char : 1
		constexpr auto bExcludeFromContributionCulling = 0x226; // char : 1
		constexpr auto bHasCustomNavigableGeometry = 0x228; // EHasCustomNavigableGeometry
		constexpr auto OutlineDepthMode = 0x229; // EOutlineDepthMode
		constexpr auto CanCharacterStepUpOn = 0x22b; // ECanBeCharacterBase
		constexpr auto LightingChannels = 0x22c; // FLightingChannels
		constexpr auto CustomDepthStencilWriteMask = 0x22d; // ERendererStencilMask
		constexpr auto CustomDepthStencilValue = 0x230; // int32_t
		constexpr auto CustomPrimitiveData = 0x238; // FCustomPrimitiveData
		constexpr auto CustomPrimitiveDataInternal = 0x248; // FCustomPrimitiveData
		constexpr auto TranslucencySortPriority = 0x260; // int32_t
		constexpr auto VisibilityId = 0x264; // int32_t
		constexpr auto RuntimeVirtualTextures = 0x268; // TArray<URuntimeVirtualTexture*>
		constexpr auto VirtualTextureLodBias = 0x278; // int8_t
		constexpr auto VirtualTextureCullMips = 0x279; // int8_t
		constexpr auto VirtualTextureMinCoverage = 0x27a; // int8_t
		constexpr auto VirtualTextureRenderPassType = 0x27b; // ERuntimeVirtualTextureMainPassType
		constexpr auto LpvBiasMultiplier = 0x280; // float
		constexpr auto OutlineThicknessMultiplier = 0x284; // float
		constexpr auto OutlineColor = 0x288; // FLinearColor
		constexpr auto OutlineZFadeMin = 0x298; // float
		constexpr auto OutlineZFadeMax = 0x29c; // float
		constexpr auto BoundsScale = 0x2a8; // float
		constexpr auto MoveIgnoreActors = 0x2b8; // TArray<AActor*>
		constexpr auto MoveIgnoreComponents = 0x2c8; // TArray<UPrimitiveComponent*>
		constexpr auto BodyInstance = 0x2e8; // FBodyInstance
		constexpr auto OnComponentHit = 0x3f8; // FMulticastSparseDelegate
		constexpr auto OnComponentBeginOverlap = 0x3f9; // FMulticastSparseDelegate
		constexpr auto OnComponentEndOverlap = 0x3fa; // FMulticastSparseDelegate
		constexpr auto OnComponentWake = 0x3fb; // FMulticastSparseDelegate
		constexpr auto OnComponentSleep = 0x3fc; // FMulticastSparseDelegate
		constexpr auto OnBeginCursorOver = 0x3fe; // FMulticastSparseDelegate
		constexpr auto OnEndCursorOver = 0x3ff; // FMulticastSparseDelegate
		constexpr auto OnClicked = 0x400; // FMulticastSparseDelegate
		constexpr auto OnReleased = 0x401; // FMulticastSparseDelegate
		constexpr auto OnInputTouchBegin = 0x402; // FMulticastSparseDelegate
		constexpr auto OnInputTouchEnd = 0x403; // FMulticastSparseDelegate
		constexpr auto OnInputTouchEnter = 0x404; // FMulticastSparseDelegate
		constexpr auto OnInputTouchLeave = 0x405; // FMulticastSparseDelegate
		constexpr auto LODParentPrimitive = 0x420; // UPrimitiveComponent*
		constexpr auto CustomFOV = 0x428; // float
	}

	namespace n_UEditableGameplayTagQuery {
		constexpr auto UserDescription = 0x28; // FString
		constexpr auto RootExpression = 0x48; // UEditableGameplayTagQueryExpression*
		constexpr auto TagQueryExportText_Helper = 0x50; // FGameplayTagQuery
	}

	namespace n_UPawnAction_Repeat {
		constexpr auto ActionToRepeat = 0x98; // UPawnAction*
		constexpr auto RecentActionCopy = 0xa0; // UPawnAction*
		constexpr auto ChildFailureHandlingMode = 0xa8; // EPawnActionFailHandling
	}

	namespace n_UKSAmmoDropAsset {
		constexpr auto AmmoType = 0x270; // EAmmoType
	}

	namespace n_UKSWeaponAsset_Pierce {
		constexpr auto DamageScalarAfterWalls = 0x988; // float
		constexpr auto PierceClass = 0x990; // TSoftClassPtr<UObject>
	}

	namespace n_UEdGraphPin_Deprecated {
		constexpr auto PinName = 0x28; // FString
		constexpr auto PinToolTip = 0x38; // FString
		constexpr auto Direction = 0x48; // EEdGraphPinDirection
		constexpr auto PinType = 0x50; // FEdGraphPinType
		constexpr auto DefaultValue = 0xa8; // FString
		constexpr auto AutogeneratedDefaultValue = 0xb8; // FString
		constexpr auto DefaultObject = 0xc8; // UObject*
		constexpr auto DefaultTextValue = 0xd0; // FText
		constexpr auto LinkedTo = 0xe8; // TArray<UEdGraphPin_Deprecated*>
		constexpr auto SubPins = 0xf8; // TArray<UEdGraphPin_Deprecated*>
		constexpr auto ParentPin = 0x108; // UEdGraphPin_Deprecated*
		constexpr auto ReferencePassThroughConnection = 0x110; // UEdGraphPin_Deprecated*
	}

	namespace n_UParticleModuleOrbitBase {
		constexpr auto bUseEmitterTime = 0x30; // char : 1
	}

	namespace n_AActor {
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto bNetTemporary = 0x58; // char : 1
		constexpr auto bNetStartup = 0x58; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x58; // char : 1
		constexpr auto bAlwaysRelevant = 0x58; // char : 1
		constexpr auto bReplicateMovement = 0x58; // char : 1
		constexpr auto bHidden = 0x58; // char : 1
		constexpr auto bTearOff = 0x58; // char : 1
		constexpr auto bExchangedRoles = 0x58; // char : 1
		constexpr auto bNetLoadOnClient = 0x59; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x59; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x59; // char : 1
		constexpr auto bRelevantForLevelBounds = 0x59; // char : 1
		constexpr auto bReplayRewindable = 0x59; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x59; // char : 1
		constexpr auto bAutoDestroyWhenFinished = 0x59; // char : 1
		constexpr auto bCanBeDamaged = 0x59; // char : 1
		constexpr auto bBlockInput = 0x5a; // char : 1
		constexpr auto bCollideWhenPlacing = 0x5a; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x5a; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x5a; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x5a; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x5a; // char : 1
		constexpr auto bIsEditorOnlyActor = 0x5a; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x5a; // char : 1
		constexpr auto bReplicates = 0x5b; // char : 1
		constexpr auto bCanBeInCluster = 0x5b; // char : 1
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x5b; // char : 1
		constexpr auto bActorEnableCollision = 0x5c; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x5c; // char : 1
		constexpr auto UpdateOverlapsMethodDuringLevelStreaming = 0x5d; // EActorUpdateOverlapsMethod
		constexpr auto DefaultUpdateOverlapsMethodDuringLevelStreaming = 0x5e; // EActorUpdateOverlapsMethod
		constexpr auto RemoteRole = 0x5f; // ENetRole
		constexpr auto ReplicatedMovement = 0x60; // FRepMovement
		constexpr auto InitialLifeSpan = 0x94; // float
		constexpr auto CustomTimeDilation = 0x98; // float
		constexpr auto AttachmentReplication = 0xa0; // FRepAttachment
		constexpr auto Owner = 0xe0; // AActor*
		constexpr auto NetDriverName = 0xe8; // FName
		constexpr auto Role = 0xf0; // ENetRole
		constexpr auto NetDormancy = 0xf1; // ENetDormancy
		constexpr auto SpawnCollisionHandlingMethod = 0xf2; // ESpawnActorCollisionHandlingMethod
		constexpr auto AutoReceiveInput = 0xf3; // EAutoReceiveInput
		constexpr auto InputPriority = 0xf4; // int32_t
		constexpr auto InputComponent = 0xf8; // UInputComponent*
		constexpr auto NetCullDistanceSquared = 0x100; // float
		constexpr auto NetTag = 0x104; // int32_t
		constexpr auto NetUpdateFrequency = 0x108; // float
		constexpr auto MinNetUpdateFrequency = 0x10c; // float
		constexpr auto NetPriority = 0x110; // float
		constexpr auto Instigator = 0x118; // APawn*
		constexpr auto Children = 0x120; // TArray<AActor*>
		constexpr auto RootComponent = 0x130; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x138; // TArray<AMatineeActor*>
		constexpr auto Layers = 0x150; // TArray<FName>
		constexpr auto ParentComponent = 0x160; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto Tags = 0x170; // TArray<FName>
		constexpr auto OnTakeAnyDamage = 0x180; // FMulticastSparseDelegate
		constexpr auto OnTakePointDamage = 0x181; // FMulticastSparseDelegate
		constexpr auto OnTakeRadialDamage = 0x182; // FMulticastSparseDelegate
		constexpr auto OnActorBeginOverlap = 0x183; // FMulticastSparseDelegate
		constexpr auto OnActorEndOverlap = 0x184; // FMulticastSparseDelegate
		constexpr auto OnBeginCursorOver = 0x185; // FMulticastSparseDelegate
		constexpr auto OnEndCursorOver = 0x186; // FMulticastSparseDelegate
		constexpr auto OnClicked = 0x187; // FMulticastSparseDelegate
		constexpr auto OnReleased = 0x188; // FMulticastSparseDelegate
		constexpr auto OnInputTouchBegin = 0x189; // FMulticastSparseDelegate
		constexpr auto OnInputTouchEnd = 0x18a; // FMulticastSparseDelegate
		constexpr auto OnInputTouchEnter = 0x18b; // FMulticastSparseDelegate
		constexpr auto OnInputTouchLeave = 0x18c; // FMulticastSparseDelegate
		constexpr auto OnActorHit = 0x18d; // FMulticastSparseDelegate
		constexpr auto OnDestroyed = 0x18e; // FMulticastSparseDelegate
		constexpr auto OnEndPlay = 0x18f; // FMulticastSparseDelegate
		constexpr auto InstanceComponents = 0x1f0; // TArray<UActorComponent*>
		constexpr auto BlueprintCreatedComponents = 0x200; // TArray<UActorComponent*>
	}

	namespace n_USoundNodeMixer {
		constexpr auto InputVolume = 0x48; // TArray<float>
	}

	namespace n_AKSArmor {
		constexpr auto Durability = 0x6d8; // float
		constexpr auto bArmorIsBroken = 0x6dc; // bool
	}

	namespace n_UMovieSceneMediaPlayerPropertySection {
		constexpr auto MediaSource = 0xe0; // UMediaSource*
		constexpr auto bLoop = 0xe8; // bool
	}

	namespace n_UKSDamageTypeStun {
		constexpr auto StunDuration = 0x138; // float
	}

	namespace n_UAtmosphericFogComponent {
		constexpr auto SunMultiplier = 0x208; // float
		constexpr auto FogMultiplier = 0x20c; // float
		constexpr auto DensityMultiplier = 0x210; // float
		constexpr auto DensityOffset = 0x214; // float
		constexpr auto DistanceScale = 0x218; // float
		constexpr auto AltitudeScale = 0x21c; // float
		constexpr auto DistanceOffset = 0x220; // float
		constexpr auto GroundOffset = 0x224; // float
		constexpr auto StartDistance = 0x228; // float
		constexpr auto SunDiscScale = 0x22c; // float
		constexpr auto DefaultBrightness = 0x230; // float
		constexpr auto DefaultLightColor = 0x234; // FColor
		constexpr auto bDisableSunDisk = 0x238; // char : 1
		constexpr auto bAtmosphereAffectsSunIlluminance = 0x238; // char : 1
		constexpr auto bDisableGroundScattering = 0x238; // char : 1
		constexpr auto PrecomputeParams = 0x23c; // FAtmospherePrecomputeParameters
		constexpr auto TransmittanceTexture = 0x268; // UTexture2D*
		constexpr auto IrradianceTexture = 0x270; // UTexture2D*
	}

	namespace n_UMovieSceneBuiltInEasingFunction {
		constexpr auto Type = 0x30; // EMovieSceneBuiltInEasing
	}

	namespace n_UBehaviorTree {
		constexpr auto RootNode = 0x30; // UBTCompositeNode*
		constexpr auto BlackboardAsset = 0x38; // UBlackboardData*
		constexpr auto RootDecorators = 0x40; // TArray<UBTDecorator*>
		constexpr auto RootDecoratorOps = 0x50; // TArray<FBTDecoratorLogic>
	}

	namespace n_UKSActivityRewardCondition_TotalCashEarned {
		constexpr auto MinCashEarned = 0x30; // int32_t
		constexpr auto MaxCashEarned = 0x34; // int32_t
	}

	namespace n_UPUMG_PartyDataFactory {
		constexpr auto OnPartyDataUpdated = 0x38; // FMulticastInlineDelegate
		constexpr auto OnPartyLocalPlayerLeft = 0x48; // FMulticastInlineDelegate
		constexpr auto OnPartyLocalPlayerPromoted = 0x58; // FMulticastInlineDelegate
		constexpr auto OnPartyMemberPromoted = 0x68; // FMulticastInlineDelegate
		constexpr auto OnPartyMemberDataUpdated = 0x78; // FMulticastInlineDelegate
		constexpr auto OnPendingPartyMemberDataAdded = 0x88; // FMulticastInlineDelegate
		constexpr auto OnPendingPartyMemberAccepted = 0x98; // FMulticastInlineDelegate
		constexpr auto OnPartyMemberRemoved = 0xa8; // FMulticastInlineDelegate
		constexpr auto OnPartyMemberLeft = 0xb8; // FMulticastInlineDelegate
		constexpr auto OnPartyDisbanded = 0xc8; // FMulticastInlineDelegate
		constexpr auto OnPartyInvitationError = 0xd8; // FMulticastInlineDelegate
		constexpr auto OnPartyInvitationSent = 0xe8; // FMulticastInlineDelegate
		constexpr auto OnPartyInvitationReceived = 0xf8; // FMulticastInlineDelegate
		constexpr auto OnPartyMessageReceived = 0x108; // FMulticastInlineDelegate
		constexpr auto OnPartyInvitationAccepted = 0x118; // FMulticastInlineDelegate
		constexpr auto OnPartyInvitationRejected = 0x128; // FMulticastInlineDelegate
		constexpr auto OnPartyInvitationExpired = 0x138; // FMulticastInlineDelegate
		constexpr auto OnPartyInfoUpdated = 0x148; // FMulticastInlineDelegate
		constexpr auto PartyMembers = 0x158; // TArray<FPUMG_PartyMemberData>
		constexpr auto PartyInviter = 0x168; // UPUMG_PlayerInfo*
		constexpr auto LastInviteSentErrorMessage = 0x170; // FString
		constexpr auto MaxPartySize = 0x198; // int32_t
	}

	namespace n_UKSModInst_OnEndActiveReload {
		constexpr auto OnReloadStart = 0x1b8; // FMulticastInlineDelegate
		constexpr auto OnReloadEnd = 0x1c8; // FMulticastInlineDelegate
		constexpr auto bUseWeaponAssetReloadTime = 0x1d8; // bool
		constexpr auto ReloadTime = 0x1dc; // float
	}

	namespace n_UMaterialExpressionArccosineFast {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_ULoggedInProcessRewards_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto background = 0x528; // UImage*
		constexpr auto WBP_EpilepsyWarning = 0x530; // UWBP_EpilepsyWarning_C*
		constexpr auto WBP_ThrobberShield = 0x538; // UWBP_ThrobberShield_C*
	}

	namespace n_UIpConnection { // : UNetConnection
		constexpr auto SocketErrorDisconnectDelay = 0x1ad0; // float
	}

	namespace n_UWBP_PipProgressEntry_C {
		constexpr auto Empty = 0x238; // UImage*
		constexpr auto Fill = 0x240; // UImage*
		constexpr auto BaseColor = 0x248; // FLinearColor
		constexpr auto FillColor = 0x258; // FLinearColor
	}

	namespace n_UKSPlayerInventoryHelper {
		constexpr auto DynamicCallbacksPerInventoryId = 0x118; // TMap<FInventoryId, FMulticastInlineDelegate>
		constexpr auto DynamicCallbacksPerInventoryTypeId = 0x168; // TMap<FInventoryTypeId, FMulticastInlineDelegate>
	}

	namespace n_UKSNewStartMenuData {
		constexpr auto Image = 0x80; // UTexture2DDynamic*
	}

	namespace n_UMaterialExpressionAdd {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_UEnvQueryOption {
		constexpr auto Generator = 0x28; // UEnvQueryGenerator*
		constexpr auto Tests = 0x30; // TArray<UEnvQueryTest*>
	}

	namespace n_UPathFollowingComponent {
		constexpr auto MovementComp = 0xe8; // UNavMovementComponent*
		constexpr auto MyNavData = 0xf8; // ANavigationData*
	}

	namespace n_UWBP_Toast2_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto Waiting = 0x528; // UWidgetAnimation*
		constexpr auto Outro = 0x530; // UWidgetAnimation*
		constexpr auto Intro = 0x538; // UWidgetAnimation*
		constexpr auto 1pxBar = 0x540; // USizeBox*
		constexpr auto 1pxBar_2 = 0x548; // USizeBox*
		constexpr auto AchievementDetails = 0x550; // UTextBlock*
		constexpr auto AchievementName = 0x558; // UTextBlock*
		constexpr auto AchievementType = 0x560; // UTextBlock*
		constexpr auto Back = 0x568; // UImage*
		constexpr auto BottomBar = 0x570; // UImage*
		constexpr auto EdgeGlowBottom = 0x578; // UImage*
		constexpr auto EdgeGlowTop = 0x580; // UImage*
		constexpr auto Gradient = 0x588; // UImage*
		constexpr auto HeaderBar = 0x590; // UImage*
		constexpr auto IconBack = 0x598; // UImage*
		constexpr auto IconSwitcher = 0x5a0; // UWidgetSwitcher*
		constexpr auto MasteryPortrait = 0x5a8; // UWBP_RogueMasteryPortrait_C*
		constexpr auto PlayerLevel = 0x5b0; // USizeBox*
		constexpr auto PlayerLevelText = 0x5b8; // UTextBlock*
		constexpr auto ToastIcon = 0x5c0; // UWBP_AsyncIcon_C*
		constexpr auto TopBar = 0x5c8; // UImage*
		constexpr auto OnRemoveToastNotification = 0x5d0; // FMulticastInlineDelegate
		constexpr auto FinishedOutroAnimation = 0x5e0; // FMulticastInlineDelegate
		constexpr auto ToastData = 0x5f0; // FToastData
		constexpr auto NewVar_1 = 0x648; // UWidgetAnimation*
		constexpr auto WaitDuration = 0x650; // float
		constexpr auto DEFAULT_WAIT_DURATION = 0x654; // float
	}

	namespace n_UInterpTrack {
		constexpr auto SubTracks = 0x38; // TArray<UInterpTrack*>
		constexpr auto TrackInstClass = 0x48; // UInterpTrackInst*
		constexpr auto ActiveCondition = 0x50; // ETrackActiveCondition
		constexpr auto TrackTitle = 0x58; // FString
		constexpr auto bOnePerGroup = 0x68; // char : 1
		constexpr auto bDirGroupOnly = 0x68; // char : 1
		constexpr auto bDisableTrack = 0x68; // char : 1
		constexpr auto bIsSelected = 0x68; // char : 1
		constexpr auto bIsAnimControlTrack = 0x68; // char : 1
		constexpr auto bSubTrackOnly = 0x68; // char : 1
		constexpr auto bVisible = 0x68; // char : 1
		constexpr auto bIsRecording = 0x68; // char : 1
	}

	namespace n_UAnimNotify_PlayParticleEffect {
		constexpr auto PSTemplate = 0x38; // UParticleSystem*
		constexpr auto LocationOffset = 0x40; // FVector
		constexpr auto RotationOffset = 0x4c; // FRotator
		constexpr auto Scale = 0x58; // FVector
		constexpr auto Attached = 0x80; // char : 1
		constexpr auto SocketName = 0x84; // FName
	}

	namespace n_UKSBTD_CharacterState {
		constexpr auto CharacterStateFilter = 0x90; // FKSCharacterStateFilter
	}

	namespace n_UPUMG_SafeZone {
		constexpr auto bBorderLeft = 0x140; // bool
		constexpr auto bBorderRight = 0x141; // bool
		constexpr auto bBorderTop = 0x142; // bool
		constexpr auto bBorderBottom = 0x143; // bool
		constexpr auto bForceDrawBorders = 0x144; // bool
	}

	namespace n_UMaterialExpressionDDX {
		constexpr auto Value = 0x40; // FExpressionInput
	}

	namespace n_UAnimSet {
		constexpr auto bAnimRotationOnly = 0x28; // char : 1
		constexpr auto TrackBoneNames = 0x30; // TArray<FName>
		constexpr auto LinkupCache = 0x40; // TArray<FAnimSetMeshLinkup>
		constexpr auto BoneUseAnimTranslation = 0x50; // TArray<char>
		constexpr auto ForceUseMeshTranslation = 0x60; // TArray<char>
		constexpr auto UseTranslationBoneNames = 0x70; // TArray<FName>
		constexpr auto ForceMeshTranslationBoneNames = 0x80; // TArray<FName>
		constexpr auto PreviewSkelMeshName = 0x90; // FName
		constexpr auto BestRatioSkelMeshName = 0x98; // FName
	}

	namespace n_UParticleModuleAttractorParticle {
		constexpr auto EmitterName = 0x30; // FName
		constexpr auto Range = 0x38; // FRawDistributionFloat
		constexpr auto bStrengthByDistance = 0x68; // char : 1
		constexpr auto Strength = 0x70; // FRawDistributionFloat
		constexpr auto bAffectBaseVelocity = 0xa0; // char : 1
		constexpr auto SelectionMethod = 0xa4; // EAttractorParticleSelectionMethod
		constexpr auto bRenewSource = 0xa8; // char : 1
		constexpr auto bInheritSourceVel = 0xa8; // char : 1
		constexpr auto LastSelIndex = 0xac; // int32_t
	}

	namespace n_AKSPingBeaconBase {
		constexpr auto ContextualPingTypesDT = 0x220; // UDataTable*
		constexpr auto PlayerOwner = 0x228; // AKSPlayerState*
		constexpr auto BeaconPingInfo = 0x230; // FPingInfo
	}

	namespace n_UKSPlayerMod {
		constexpr auto bIsPerk = 0x250; // bool
		constexpr auto bCanBePickup = 0x251; // bool
		constexpr auto FunctionalClass = 0x258; // TSoftClassPtr<UObject>
		constexpr auto bIsInstanceReplicated = 0x280; // bool
		constexpr auto ModUnlockTier = 0x284; // int32_t
		constexpr auto AttachmentInteraction = 0x288; // EModInterferenceType
		constexpr auto bSingleInstanceStack = 0x289; // bool
		constexpr auto bStacksPerInstigator = 0x28a; // bool
		constexpr auto bRemoveAllInstances = 0x28b; // bool
		constexpr auto MaxStackCount = 0x28c; // int32_t
		constexpr auto bCapInstanceCount = 0x290; // bool
		constexpr auto ModType = 0x291; // EPlayerModType
		constexpr auto bShouldAssist = 0x292; // bool
		constexpr auto EffectCategories = 0x298; // FGameplayTagContainer
		constexpr auto TriggerEvents = 0x2b8; // TArray<FName>
		constexpr auto AnimEventPriorityMap = 0x2c8; // TMap<FName, int32_t>
		constexpr auto RemovesFromLoadout = 0x318; // TArray<TSoftObjectPtr<UKSPlayerMod>>
		constexpr auto bLerpModifiers = 0x328; // bool
		constexpr auto bShouldLagCompensateEffects = 0x329; // bool
		constexpr auto bGiveModToAllControlledPawns = 0x32a; // bool
		constexpr auto bCanActivateOnZipline = 0x32b; // bool
	}

	namespace n_UWBP_Social_Platform_ID_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto NameLabel = 0x240; // UTextBlock*
		constexpr auto PlatformIcon = 0x248; // UWBP_PlatformIcon_C*
	}

	namespace n_UEngineMessage {
		constexpr auto FailedPlaceMessage = 0x28; // FString
		constexpr auto MaxedOutMessage = 0x38; // FString
		constexpr auto EnteredMessage = 0x48; // FString
		constexpr auto LeftMessage = 0x58; // FString
		constexpr auto GlobalNameChange = 0x68; // FString
		constexpr auto SpecEnteredMessage = 0x78; // FString
		constexpr auto NewPlayerMessage = 0x88; // FString
		constexpr auto NewSpecMessage = 0x98; // FString
	}

	namespace n_UTimecodeProvider {
		constexpr auto FrameDelay = 0x28; // float
	}

	namespace n_UEnvQueryTest_Dot {
		constexpr auto LineA = 0x1f8; // FEnvDirection
		constexpr auto LineB = 0x218; // FEnvDirection
		constexpr auto TestMode = 0x238; // EEnvTestDot
		constexpr auto bAbsoluteValue = 0x239; // bool
	}

	namespace n_AAkAcousticPortal {
		constexpr auto InitialState = 0x258; // AkAcousticPortalState
		constexpr auto ObstructionRefreshInterval = 0x25c; // float
		constexpr auto ObstructionCollisionChannel = 0x260; // ECollisionChannel
	}

	namespace n_UNiagaraPrecompileContainer {
		constexpr auto Scripts = 0x28; // TArray<UNiagaraScript*>
		constexpr auto System = 0x38; // UNiagaraSystem*
	}

	namespace n_USoundNodeParamCrossFade {
		constexpr auto ParamName = 0x58; // FName
	}

	namespace n_UMaterialExpressionReroute {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UAnimNotify_PlaySkinnedParticleEffect {
		constexpr auto SkinKeyword = 0x90; // FName
	}

	namespace n_UParticleModuleTypeDataMesh {
		constexpr auto Mesh = 0x30; // UStaticMesh*
		constexpr auto LODSizeScale = 0x40; // float
		constexpr auto bUseStaticMeshLODs = 0x44; // char : 1
		constexpr auto CastShadows = 0x44; // char : 1
		constexpr auto DoCollisions = 0x44; // char : 1
		constexpr auto MeshAlignment = 0x45; // EMeshScreenAlignment
		constexpr auto bOverrideMaterial = 0x46; // char : 1
		constexpr auto bOverrideDefaultMotionBlurSettings = 0x46; // char : 1
		constexpr auto bEnableMotionBlur = 0x46; // char : 1
		constexpr auto RollPitchYawRange = 0x48; // FRawDistributionVector
		constexpr auto AxisLockOption = 0x90; // EParticleAxisLock
		constexpr auto bCameraFacing = 0x91; // char : 1
		constexpr auto CameraFacingUpAxisOption = 0x92; // EMeshCameraFacingUpAxis
		constexpr auto CameraFacingOption = 0x93; // EMeshCameraFacingOptions
		constexpr auto bApplyParticleRotationAsSpin = 0x94; // char : 1
		constexpr auto bFaceCameraDirectionRatherThanPosition = 0x94; // char : 1
		constexpr auto bCollisionsConsiderPartilceSize = 0x94; // char : 1
	}

	namespace n_UKSPlayerMod_ReloadAndRetrieve {
		constexpr auto RetrieveTimeMultiplier = 0x330; // float
		constexpr auto ReloadTimeMultiplier = 0x334; // float
	}

	namespace n_AGeometryCollectionActor {
		constexpr auto GeometryCollectionComponent = 0x220; // UGeometryCollectionComponent*
		constexpr auto GeometryCollectionDebugDrawComponent = 0x228; // UGeometryCollectionDebugDrawComponent*
	}

	namespace n_ALobbyBeaconClient {
		constexpr auto LobbyState = 0x2b0; // ALobbyBeaconState*
		constexpr auto PlayerState = 0x2b8; // ALobbyBeaconPlayerState*
		constexpr auto LobbyJoinServerState = 0x2c1; // ELobbyBeaconJoinState
	}

	namespace n_AProceduralFoliageBlockingVolume {
		constexpr auto ProceduralFoliageVolume = 0x258; // AProceduralFoliageVolume*
	}

	namespace n_UUserDefinedStruct {
		constexpr auto Status = 0xc0; // EUserDefinedStructureStatus
		constexpr auto Guid = 0xc4; // FGuid
	}

	namespace n_UKSWeaponMasteryLevelUpScreen {
		constexpr auto PopulatedEntry = 0x520; // FKSWeaponMasteryLevelUpSummaryEntry
		constexpr auto ViewActorName = 0x568; // FName
	}

	namespace n_UWBP_EventBuyThroughScreen_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto Anim_OnShown = 0x528; // UWidgetAnimation*
		constexpr auto BundleItem0 = 0x530; // UWBP_KSCosmeticItemDisplay_C*
		constexpr auto BundleItem1 = 0x538; // UWBP_KSCosmeticItemDisplay_C*
		constexpr auto BundleItem2 = 0x540; // UWBP_KSCosmeticItemDisplay_C*
		constexpr auto BundleItem3 = 0x548; // UWBP_KSCosmeticItemDisplay_C*
		constexpr auto BundleItem4 = 0x550; // UWBP_KSCosmeticItemDisplay_C*
		constexpr auto BundleItemsWrapper = 0x558; // UVerticalBox*
		constexpr auto CurrencySummary = 0x560; // UWBP_CurrencySummary_C*
		constexpr auto FFB = 0x568; // UImage*
		constexpr auto GamepadScrollLeft = 0x570; // UKSAsyncImage*
		constexpr auto GamepadScrollRight = 0x578; // UKSAsyncImage*
		constexpr auto Image_221 = 0x580; // UImage*
		constexpr auto ItemPreviewStack = 0x588; // UWBP_ItemPreviewStack_C*
		constexpr auto RewardDetailsContainer = 0x590; // UOverlay*
		constexpr auto ScrollLeftIndicator = 0x598; // UHorizontalBox*
		constexpr auto ScrollRightIndicator = 0x5a0; // UHorizontalBox*
		constexpr auto TimeRemaining = 0x5a8; // UTextBlock*
		constexpr auto WBP_ActiveMissionPanel = 0x5b0; // UWBP_ActiveMissionPanel_C*
		constexpr auto WBP_EventBundleItem_1 = 0x5b8; // UWBP_EventBundleItem_C*
		constexpr auto WBP_EventBundleItem_2 = 0x5c0; // UWBP_EventBundleItem_C*
		constexpr auto WBP_EventBundleItem_3 = 0x5c8; // UWBP_EventBundleItem_C*
		constexpr auto WBP_EventBundleItem_4 = 0x5d0; // UWBP_EventBundleItem_C*
		constexpr auto WBP_EventBundleItem_5 = 0x5d8; // UWBP_EventBundleItem_C*
		constexpr auto WBP_EventBundleItem_6 = 0x5e0; // UWBP_EventBundleItem_C*
		constexpr auto WBP_EventBundleItem_7 = 0x5e8; // UWBP_EventBundleItem_C*
		constexpr auto WBP_EventBundleItem_8 = 0x5f0; // UWBP_EventBundleItem_C*
		constexpr auto WBP_EventBundleItem_GrandPrize = 0x5f8; // UWBP_EventGrandPrizeItem_C*
		constexpr auto WBP_Header1 = 0x600; // UWBP_Header1_C*
		constexpr auto WBP_ItemInfoContainer_Description = 0x608; // UWBP_ItemInfoContainer_Description_C*
		constexpr auto BundlePreviewButtons = 0x610; // TArray<UWBP_KSCosmeticItemDisplay_C*>
		constexpr auto BundleButtons = 0x620; // TArray<UWBP_EventBundleItem_C*>
		constexpr auto SelectedBundle = 0x630; // UWBP_EventBundleItem_C*
		constexpr auto BundlePreviewItemIndex = 0x638; // int32_t
		constexpr auto BundlePreviewItems = 0x640; // TArray<UPUMG_StoreItem*>
		constexpr auto EventBundleItems = 0x650; // TArray<UPUMG_StoreItem*>
	}

	namespace n_UOnlinePIESettings {
		constexpr auto bOnlinePIEEnabled = 0x38; // bool
		constexpr auto Logins = 0x40; // TArray<FPIELoginSettingsInternal>
	}

	namespace n_UMaterialExpressionArcsineFast {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UGeometryCache {
		constexpr auto Materials = 0x30; // TArray<UMaterialInterface*>
		constexpr auto Tracks = 0x40; // TArray<UGeometryCacheTrack*>
		constexpr auto StartFrame = 0x60; // int32_t
		constexpr auto EndFrame = 0x64; // int32_t
	}

	namespace n_USoundNodeAttenuation {
		constexpr auto AttenuationSettings = 0x48; // USoundAttenuation*
		constexpr auto AttenuationOverrides = 0x50; // FSoundAttenuationSettings
		constexpr auto bOverrideAttenuation = 0x3f0; // char : 1
	}

	namespace n_UKSAkComponent {
		constexpr auto OcclusionType = 0x3f0; // EOcclusionType
		constexpr auto MinTimeBetweenOcclusionUpdates = 0x3f4; // float
		constexpr auto OcclusionDistanceMultiplier = 0x3f8; // float
		constexpr auto OcclusionInterpolationMilliseconds = 0x3fc; // int32_t
		constexpr auto CurrentObstruction = 0x400; // float
		constexpr auto CurrentOcclusion = 0x404; // float
		constexpr auto RequiresListenerDistance = 0x40c; // bool
		constexpr auto MinTimeBetweenDistanceUpdates = 0x410; // float
		constexpr auto RequiresListenerDirection = 0x418; // bool
		constexpr auto MinTimeBetweenDirectionUpdates = 0x41c; // float
		constexpr auto LUT = 0x428; // UBakedOcclusionLUT*
		constexpr auto PendingStopEvents = 0x430; // TArray<UAkAudioEvent*>
		constexpr auto LoopIdToStopEventMap = 0x440; // TMap<int32_t, UAkAudioEvent*>
	}

	namespace n_APointLight {
		constexpr auto PointLightComponent = 0x230; // UPointLightComponent*
	}

	namespace n_UKSSocialOverlay {
		constexpr auto OnDataChanged = 0x520; // FMulticastInlineDelegate
		constexpr auto CategoriesList = 0x530; // TArray<UKSDataSocialCategory*>
		constexpr auto PlayerCategoryMap = 0x548; // TMap<TWeakObjectPtr<UKSPlayerInfo>, EKSSocialOverlaySection>
		constexpr auto PlayersToUpdate = 0x598; // TArray<TWeakObjectPtr<UKSPlayerInfo>>
		constexpr auto UnusedEntries = 0x5b0; // TArray<UKSDataSocialPlayer*>
	}

	namespace n_UBlendSpaceBase {
		constexpr auto bRotationBlendInMeshSpace = 0x88; // bool
		constexpr auto AnimLength = 0x8c; // float
		constexpr auto InterpolationParam = 0x90; // FInterpolationParameter [0x3]
		constexpr auto TargetWeightInterpolationSpeedPerSec = 0xa8; // float
		constexpr auto NotifyTriggerMode = 0xac; // ENotifyTriggerMode
		constexpr auto PerBoneBlend = 0xb0; // TArray<FPerBoneInterpolation>
		constexpr auto SampleIndexWithMarkers = 0xc0; // int32_t
		constexpr auto SampleData = 0xc8; // TArray<FBlendSample>
		constexpr auto GridSamples = 0xd8; // TArray<FEditorElement>
		constexpr auto BlendParameters = 0xe8; // FBlendParameter [0x3]
	}

	namespace n_USocialManager {
		constexpr auto SocialToolkits = 0x48; // TArray<USocialToolkit*>
		constexpr auto SocialDebugTools = 0x58; // USocialDebugTools*
	}

	namespace n_UAnimClassData {
		constexpr auto BakedStateMachines = 0x30; // TArray<FBakedAnimationStateMachine>
		constexpr auto TargetSkeleton = 0x40; // USkeleton*
		constexpr auto AnimNotifies = 0x48; // TArray<FAnimNotifyEvent>
		constexpr auto OrderedSavedPoseIndicesMap = 0x58; // TMap<FName, FCachedPoseIndices>
		constexpr auto AnimBlueprintFunctions = 0xa8; // TArray<FAnimBlueprintFunction>
		constexpr auto AnimBlueprintFunctionData = 0xb8; // TArray<FAnimBlueprintFunctionData>
		constexpr auto AnimNodeProperties = 0xc8; // TArray<TFieldPath<FStructProperty>>
		constexpr auto LinkedAnimGraphNodeProperties = 0xe8; // TArray<TFieldPath<FStructProperty>>
		constexpr auto LinkedAnimLayerNodeProperties = 0x108; // TArray<TFieldPath<FStructProperty>>
		constexpr auto PreUpdateNodeProperties = 0x128; // TArray<TFieldPath<FStructProperty>>
		constexpr auto DynamicResetNodeProperties = 0x148; // TArray<TFieldPath<FStructProperty>>
		constexpr auto StateMachineNodeProperties = 0x168; // TArray<TFieldPath<FStructProperty>>
		constexpr auto InitializationNodeProperties = 0x188; // TArray<TFieldPath<FStructProperty>>
		constexpr auto GraphNameAssetPlayers = 0x1a8; // TMap<FName, FGraphAssetPlayerInformation>
		constexpr auto SyncGroupNames = 0x1f8; // TArray<FName>
		constexpr auto EvaluateGraphExposedInputs = 0x208; // TArray<FExposedValueHandler>
		constexpr auto GraphBlendOptions = 0x218; // TMap<FName, FAnimGraphBlendOptions>
	}

	namespace n_UProceduralMeshComponent {
		constexpr auto bUseComplexAsSimpleCollision = 0x460; // bool
		constexpr auto bUseAsyncCooking = 0x461; // bool
		constexpr auto ProcMeshBodySetup = 0x468; // UBodySetup*
		constexpr auto ProcMeshSections = 0x470; // TArray<FProcMeshSection>
		constexpr auto CollisionConvexElems = 0x480; // TArray<FKConvexElem>
		constexpr auto LocalBounds = 0x490; // FBoxSphereBounds
		constexpr auto AsyncBodySetupQueue = 0x4b0; // TArray<UBodySetup*>
	}

	namespace n_UChaosPhysicalMaterial {
		constexpr auto Friction = 0x28; // float
		constexpr auto StaticFriction = 0x2c; // float
		constexpr auto Restitution = 0x30; // float
		constexpr auto LinearEtherDrag = 0x34; // float
		constexpr auto AngularEtherDrag = 0x38; // float
		constexpr auto SleepingLinearVelocityThreshold = 0x3c; // float
		constexpr auto SleepingAngularVelocityThreshold = 0x40; // float
	}

	namespace n_UInterpTrackDirector {
		constexpr auto CutTrack = 0x70; // TArray<FDirectorTrackCut>
		constexpr auto bSimulateCameraCutsOnClients = 0x80; // char : 1
	}

	namespace n_UInterpTrackVectorMaterialParam {
		constexpr auto TargetMaterials = 0x90; // TArray<UMaterialInterface*>
		constexpr auto ParamName = 0xa0; // FName
	}

	namespace n_UKSVehicleBaseMovementComponent {
		constexpr auto VehicleBaseOwner = 0x680; // AKSVehicleBase*
	}

	namespace n_UWBP_LoginRewardsGrid_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto RewardGrid = 0x528; // UUniformGridPanel*
		constexpr auto WBP_LoginRewardItem_C_1 = 0x530; // UWBP_LoginRewardItem_C*
		constexpr auto WBP_LoginRewardItem_C_2 = 0x538; // UWBP_LoginRewardItem_C*
		constexpr auto WBP_LoginRewardItem_C_3 = 0x540; // UWBP_LoginRewardItem_C*
		constexpr auto WBP_LoginRewardItem_C_4 = 0x548; // UWBP_LoginRewardItem_C*
		constexpr auto WBP_LoginRewardItem_C_5 = 0x550; // UWBP_LoginRewardItem_C*
		constexpr auto WBP_LoginRewardItem_C_6 = 0x558; // UWBP_LoginRewardItem_C*
		constexpr auto WBP_LoginRewardItem_C_7 = 0x560; // UWBP_LoginRewardItem_C*
		constexpr auto WBP_LoginRewardItem_C_8 = 0x568; // UWBP_LoginRewardItem_C*
		constexpr auto WBP_LoginRewardItem_C_9 = 0x570; // UWBP_LoginRewardItem_C*
		constexpr auto WBP_LoginRewardItem_C_10 = 0x578; // UWBP_LoginRewardItem_C*
		constexpr auto WBP_LoginRewardItem_C_11 = 0x580; // UWBP_LoginRewardItem_C*
		constexpr auto WBP_LoginRewardItem_C_12 = 0x588; // UWBP_LoginRewardItem_C*
		constexpr auto WBP_LoginRewardItem_C_13 = 0x590; // UWBP_LoginRewardItem_C*
		constexpr auto WBP_LoginRewardItem_C_14 = 0x598; // UWBP_LoginRewardItem_C*
		constexpr auto MaxPerRow = 0x5a0; // int32_t
		constexpr auto OnClaimRewardAnimComplete = 0x5a8; // FMulticastInlineDelegate
		constexpr auto LoginRewardItems = 0x5b8; // TArray<UWBP_LoginRewardItem_C*>
		constexpr auto OnRewardItemsPopulated = 0x5c8; // FMulticastInlineDelegate
		constexpr auto OnRewardHovered = 0x5d8; // FMulticastInlineDelegate
		constexpr auto OnRewardUnhovered = 0x5e8; // FMulticastInlineDelegate
		constexpr auto OnRewardClicked = 0x5f8; // FMulticastInlineDelegate
	}

	namespace n_UDistributionFloatConstantCurve {
		constexpr auto ConstantCurve = 0x38; // FInterpCurveFloat
	}

	namespace n_UKSPlayerInfo {
		constexpr auto OnPlayerStatusChanged = 0x80; // FMulticastInlineDelegate
	}

	namespace n_AKSQuipInstance {
		constexpr auto VoicelineAudience = 0x2e0; // EKSVoicelineAudience
		constexpr auto QuipCooldownGroup = 0x2e4; // int32_t
		constexpr auto QuipCooldownDuration = 0x2e8; // float
	}

	namespace n_AKSGameMode_Modular {
		constexpr auto OnTeamWiped = 0x1088; // FMulticastInlineDelegate
		constexpr auto OnTimerModifiedMidPhase = 0x1098; // FMulticastInlineDelegate
		constexpr auto bMarkedInProgress = 0x10a8; // bool
		constexpr auto bUseInitialSpawnPoints = 0x10a9; // bool
		constexpr auto bAutoRestoreRespawnConfigOnNewRound = 0x10aa; // bool
		constexpr auto bAutoRevertTeamSwapsOnNewRound = 0x10ab; // bool
		constexpr auto OnTeamChanged = 0x10b0; // FMulticastInlineDelegate
		constexpr auto bAwardBonusPointToRoundWinner = 0x10c0; // bool
		constexpr auto OriginalPlayersToTeams = 0x10c8; // TMap<AKSPlayerState*, AKSTeamState*>
		constexpr auto ScoreAtRoundStart = 0x1118; // TMap<int32_t, int32_t>
		constexpr auto ActivePhaseRule = 0x1168; // UKSPhaseRuleComponent*
	}

	namespace n_UWBP_RogueDetailsPanelButton_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto animOnSelected = 0x528; // UWidgetAnimation*
		constexpr auto animOnHover = 0x530; // UWidgetAnimation*
		constexpr auto BGGlowingGradient = 0x538; // UImage*
		constexpr auto BGGradient = 0x540; // UImage*
		constexpr auto DetailsButton = 0x548; // UButton*
		constexpr auto Icon = 0x550; // UKSAsyncImage*
		constexpr auto IconSizeBox = 0x558; // USizeBox*
		constexpr auto SideDecro = 0x560; // UImage*
		constexpr auto Text = 0x568; // UTextBlock*
		constexpr auto WBP_CallToAction = 0x570; // UWBP_CallToAction_C*
		constexpr auto OnClicked = 0x578; // FMulticastInlineDelegate
		constexpr auto ButtonImage = 0x588; // UTexture2D*
		constexpr auto ButtonText = 0x590; // FText
		constexpr auto bIsSelected = 0x5a8; // bool
		constexpr auto ActivePanel = 0x5b0; // UKSWidget*
		constexpr auto HoverRogueDetailsPanelSFX = 0x5b8; // UAkAudioEvent*
		constexpr auto ClickRogueDetailsPanelSFX = 0x5c0; // UAkAudioEvent*
		constexpr auto CurrentTabState = 0x5c8; // EVerticalTabState
	}

	namespace n_USocialSettings {
		constexpr auto OssNamesWithEnvironmentIdPrefix = 0x28; // TArray<FName>
		constexpr auto DefaultMaxPartySize = 0x38; // int32_t
		constexpr auto bPreferPlatformInvites = 0x3c; // bool
		constexpr auto bMustSendPrimaryInvites = 0x3d; // bool
		constexpr auto bLeavePartyOnDisconnect = 0x3e; // bool
		constexpr auto UserListAutoUpdateRate = 0x40; // float
		constexpr auto MinNicknameLength = 0x44; // int32_t
		constexpr auto MaxNicknameLength = 0x48; // int32_t
	}

	namespace n_UWBP_Progression_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto ProgressionCards = 0x528; // UHorizontalBox*
		constexpr auto ProgressionRow = 0x530; // UHorizontalBox*
		constexpr auto ProgressReputation = 0x538; // UWBP_ProgressionCardSlot_Reputation_C*
		constexpr auto ProgressXP = 0x540; // UWBP_ProgressionCardSlot_PlayerXP_C*
		constexpr auto Quests = 0x548; // UVerticalBox*
		constexpr auto RankedXPCard = 0x550; // UWBP_ProgressionCardSlot_RankedXP_C*
		constexpr auto RankedXPPanel = 0x558; // UWBP_ProgressionCardSlot_C*
		constexpr auto RepPanel = 0x560; // UWBP_ProgressionCardSlot_C*
		constexpr auto RogueMastery0Panel = 0x568; // UWBP_ProgressionCardSlot_C*
		constexpr auto RogueMastery1Panel = 0x570; // UWBP_ProgressionCardSlot_C*
		constexpr auto RogueMasteryCard0 = 0x578; // UWBP_ProgressionCardSlot_MercMasteryXP_C*
		constexpr auto RogueMasteryCard1 = 0x580; // UWBP_ProgressionCardSlot_MercMasteryXP_C*
		constexpr auto WBP_BattlePassLevelTracker = 0x588; // UWBP_BattlePassLevelTracker_C*
		constexpr auto XPPanel = 0x590; // UWBP_ProgressionCardSlot_C*
		constexpr auto MyHud_1 = 0x598; // APUMG_HUD*
		constexpr auto FontBaseColor = 0x5a0; // FLinearColor
		constexpr auto EMODataFactory = 0x5b0; // UKSEMODataFactory*
		constexpr auto ShowXp = 0x5b8; // bool
		constexpr auto RogueMasteryIndex = 0x5bc; // int32_t
		constexpr auto CurrentDelay = 0x5c0; // float
		constexpr auto BASE_DELAY = 0x5c4; // float
		constexpr auto DELAY_INCREMENT = 0x5c8; // float
		constexpr auto ShowRankedXP = 0x5cc; // bool
		constexpr auto ShowBattlePassXp = 0x5cd; // bool
		constexpr auto ShowRep = 0x5ce; // bool
	}

	namespace n_UInterpTrackInstVectorProp {
		constexpr auto ResetVector = 0x60; // FVector
	}

	namespace n_UParticleModuleEventReceiverBase {
		constexpr auto EventGeneratorType = 0x30; // EParticleEventType
		constexpr auto EventName = 0x34; // FName
	}

	namespace n_UCullingField {
		constexpr auto Culling = 0xb0; // UFieldNodeBase*
		constexpr auto Field = 0xb8; // UFieldNodeBase*
		constexpr auto Operation = 0xc0; // EFieldCullingOperationType
	}

	namespace n_UKSActivityRewardCondition_TimeSinceFireStarted {
		constexpr auto MinSecondsSinceFireStarted = 0x30; // float
		constexpr auto MaxSecondsSinceFireStarted = 0x34; // float
	}

	namespace n_UKSActivityRequirement_Achievements {
		constexpr auto RequireEnabled = 0x30; // bool
	}

	namespace n_UMaterialExpressionFunctionOutput {
		constexpr auto OutputName = 0x40; // FName
		constexpr auto Description = 0x48; // FString
		constexpr auto SortPriority = 0x58; // int32_t
		constexpr auto A = 0x5c; // FExpressionInput
		constexpr auto bLastPreviewed = 0x70; // char : 1
		constexpr auto ID = 0x74; // FGuid
	}

	namespace n_URejoinCheck {
		constexpr auto LastKnownStatus = 0x28; // ERejoinStatus
		constexpr auto bRejoinAfterCheck = 0x29; // bool
		constexpr auto bAttemptingRejoin = 0x2a; // bool
	}

	namespace n_UBTDecorator_KeepInCone {
		constexpr auto ConeHalfAngle = 0x68; // float
		constexpr auto ConeOrigin = 0x70; // FBlackboardKeySelector
		constexpr auto Observed = 0x98; // FBlackboardKeySelector
		constexpr auto bUseSelfAsOrigin = 0xc0; // char : 1
		constexpr auto bUseSelfAsObserved = 0xc0; // char : 1
	}

	namespace n_UWBP_PlatformIcon_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto Icon = 0x528; // UImage*
		constexpr auto Platform = 0x530; // EKSPlatformType
	}

	namespace n_UComponentDelegateBinding {
		constexpr auto ComponentDelegateBindings = 0x28; // TArray<FBlueprintComponentDelegateBinding>
	}

	namespace n_AMatineeActor {
		constexpr auto MatineeData = 0x220; // UInterpData*
		constexpr auto MatineeControllerName = 0x228; // FName
		constexpr auto PlayRate = 0x230; // float
		constexpr auto bPlayOnLevelLoad = 0x234; // char : 1
		constexpr auto bForceStartPos = 0x234; // char : 1
		constexpr auto ForceStartPosition = 0x238; // float
		constexpr auto bLooping = 0x23c; // char : 1
		constexpr auto bRewindOnPlay = 0x23c; // char : 1
		constexpr auto bNoResetOnRewind = 0x23c; // char : 1
		constexpr auto bRewindIfAlreadyPlaying = 0x23c; // char : 1
		constexpr auto bDisableRadioFilter = 0x23c; // char : 1
		constexpr auto bClientSideOnly = 0x23c; // char : 1
		constexpr auto bSkipUpdateIfNotVisible = 0x23c; // char : 1
		constexpr auto bIsSkippable = 0x23c; // char : 1
		constexpr auto PreferredSplitScreenNum = 0x240; // int32_t
		constexpr auto bDisableMovementInput = 0x244; // char : 1
		constexpr auto bDisableLookAtInput = 0x244; // char : 1
		constexpr auto bHidePlayer = 0x244; // char : 1
		constexpr auto bHideHud = 0x244; // char : 1
		constexpr auto GroupActorInfos = 0x248; // TArray<FInterpGroupActorInfo>
		constexpr auto bShouldShowGore = 0x258; // char : 1
		constexpr auto GroupInst = 0x260; // TArray<UInterpGroupInst*>
		constexpr auto CameraCuts = 0x270; // TArray<FCameraCutInfo>
		constexpr auto bIsPlaying = 0x280; // char : 1
		constexpr auto bReversePlayback = 0x280; // char : 1
		constexpr auto bPaused = 0x280; // char : 1
		constexpr auto bPendingStop = 0x280; // char : 1
		constexpr auto InterpPosition = 0x284; // float
		constexpr auto ReplicationForceIsPlaying = 0x28c; // char
		constexpr auto OnPlay = 0x290; // FMulticastInlineDelegate
		constexpr auto OnStop = 0x2a0; // FMulticastInlineDelegate
		constexpr auto OnPause = 0x2b0; // FMulticastInlineDelegate
	}

	namespace n_UKSGamepadCurvedLookSpeedManager {
		constexpr auto bUseBaseVelocity = 0x30; // bool
		constexpr auto LookBaseVelocityCurve = 0x38; // UCurveVector*
		constexpr auto BoostThreshold = 0x40; // FVector2D
		constexpr auto BoostMultiplier = 0x48; // FVector2D
		constexpr auto BoostAcceleration = 0x50; // float
		constexpr auto MouseLookMaxVelocityCurve = 0x58; // UCurveVector*
		constexpr auto MouseLookMaxVelocityADSCurve = 0x60; // UCurveVector*
		constexpr auto TurnRateMultiplier = 0x68; // float
		constexpr auto LookUpRateMultiplier = 0x6c; // float
		constexpr auto MouseLookAccelerationCurve = 0x70; // UCurveVector*
		constexpr auto MouseLookAccelerationADSCurve = 0x78; // UCurveVector*
		constexpr auto TestBaseVelocityCurves = 0x80; // TMap<FName, UCurveVector*>
		constexpr auto LastRotationVelocityScale = 0xd0; // FVector2D
		constexpr auto PrevInput = 0xd8; // FVector2D
		constexpr auto CurrentTurnSpeed = 0xe0; // FVector2D
	}

	namespace n_UKSOutOfBoundsComponent {
		constexpr auto OnOutOfBoundsBeginDel = 0xb8; // FMulticastInlineDelegate
		constexpr auto OnOutOfBoundsWarningEndDel = 0xc8; // FMulticastInlineDelegate
		constexpr auto OnOutOfBoundsEndDel = 0xd8; // FMulticastInlineDelegate
		constexpr auto OutOfBoundsInfo = 0xe8; // FKSOutOfBoundsInfo
		constexpr auto bLocalOutOfBounds = 0xf0; // bool
		constexpr auto OutOfBoundsManager = 0xf8; // UKSOutOfBoundsManager*
		constexpr auto OutOfBoundsEffectCurve = 0x100; // UKSFXCurveComponent*
		constexpr auto OutOfBoundsPPEffect = 0x108; // FKSSpecialEffect
		constexpr auto OutOfBoundsPPMaterial = 0x158; // UMaterialInterface*
		constexpr auto OutOfBoundsPPMaterialInstance = 0x160; // UMaterialInstanceDynamic*
		constexpr auto CharacterFoundationOwner = 0x168; // AKSCharacterFoundation*
	}

	namespace n_UInterpTrackMove {
		constexpr auto PosTrack = 0x70; // FInterpCurveVector
		constexpr auto EulerTrack = 0x88; // FInterpCurveVector
		constexpr auto LookupTrack = 0xa0; // FInterpLookupTrack
		constexpr auto LookAtGroupName = 0xb0; // FName
		constexpr auto LinCurveTension = 0xb8; // float
		constexpr auto AngCurveTension = 0xbc; // float
		constexpr auto bUseQuatInterpolation = 0xc0; // char : 1
		constexpr auto bShowArrowAtKeys = 0xc0; // char : 1
		constexpr auto bDisableMovement = 0xc0; // char : 1
		constexpr auto bShowTranslationOnCurveEd = 0xc0; // char : 1
		constexpr auto bShowRotationOnCurveEd = 0xc0; // char : 1
		constexpr auto bHide3DTrack = 0xc0; // char : 1
		constexpr auto RotMode = 0xc4; // EInterpTrackMoveRotMode
	}

	namespace n_UAchievementWriteCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UKSActivityRequirement_Booster {
		constexpr auto RequiredActiveBoosterId = 0x30; // int32_t
	}

	namespace n_UKSBTTask_SetTimer {
		constexpr auto Duration = 0x98; // float
		constexpr auto RandomDeviation = 0x9c; // float
	}

	namespace n_UAnimSingleNodeInstance {
		constexpr auto CurrentAsset = 0x268; // UAnimationAsset*
		constexpr auto PostEvaluateAnimEvent = 0x270; // FDelegate
	}

	namespace n_UTreeView {
		constexpr auto BP_OnGetItemChildren = 0x390; // FDelegate
		constexpr auto BP_OnItemExpansionChanged = 0x3a0; // FMulticastInlineDelegate
	}

	namespace n_UDatasmithAreaLightActorTemplate {
		constexpr auto LightType = 0x30; // EDatasmithAreaLightActorType
		constexpr auto LightShape = 0x31; // EDatasmithAreaLightActorShape
		constexpr auto Dimensions = 0x34; // FVector2D
		constexpr auto Color = 0x3c; // FLinearColor
		constexpr auto Intensity = 0x4c; // float
		constexpr auto IntensityUnits = 0x50; // ELightUnits
		constexpr auto Temperature = 0x54; // float
		constexpr auto IESTexture = 0x58; // TSoftObjectPtr<UTextureLightProfile>
		constexpr auto bUseIESBrightness = 0x80; // bool
		constexpr auto IESBrightnessScale = 0x84; // float
		constexpr auto Rotation = 0x88; // FRotator
		constexpr auto SourceRadius = 0x94; // float
		constexpr auto SourceLength = 0x98; // float
		constexpr auto AttenuationRadius = 0x9c; // float
	}

	namespace n_UEngine {
		constexpr auto TinyFont = 0x30; // UFont*
		constexpr auto TinyFontName = 0x38; // FSoftObjectPath
		constexpr auto SmallFont = 0x50; // UFont*
		constexpr auto SmallFontName = 0x58; // FSoftObjectPath
		constexpr auto MediumFont = 0x70; // UFont*
		constexpr auto MediumFontName = 0x78; // FSoftObjectPath
		constexpr auto LargeFont = 0x90; // UFont*
		constexpr auto LargeFontName = 0x98; // FSoftObjectPath
		constexpr auto SubtitleFont = 0xb0; // UFont*
		constexpr auto SubtitleFontName = 0xb8; // FSoftObjectPath
		constexpr auto AdditionalFonts = 0xd0; // TArray<UFont*>
		constexpr auto AdditionalFontNames = 0xe8; // TArray<FString>
		constexpr auto ConsoleClass = 0xf8; // UConsole*
		constexpr auto ShippingConsoleClass = 0x100; // UShippingConsole*
		constexpr auto ConsoleClassName = 0x108; // FSoftClassPath
		constexpr auto ShippingConsoleClassName = 0x120; // FSoftClassPath
		constexpr auto GameViewportClientClass = 0x138; // UGameViewportClient*
		constexpr auto GameViewportClientClassName = 0x140; // FSoftClassPath
		constexpr auto LocalPlayerClass = 0x158; // ULocalPlayer*
		constexpr auto LocalPlayerClassName = 0x160; // FSoftClassPath
		constexpr auto WorldSettingsClass = 0x178; // AWorldSettings*
		constexpr auto WorldSettingsClassName = 0x180; // FSoftClassPath
		constexpr auto NavigationSystemClassName = 0x198; // FSoftClassPath
		constexpr auto NavigationSystemClass = 0x1b0; // UNavigationSystemBase*
		constexpr auto NavigationSystemConfigClassName = 0x1b8; // FSoftClassPath
		constexpr auto NavigationSystemConfigClass = 0x1d0; // UNavigationSystemConfig*
		constexpr auto AvoidanceManagerClassName = 0x1d8; // FSoftClassPath
		constexpr auto AvoidanceManagerClass = 0x1f0; // UAvoidanceManager*
		constexpr auto PhysicsCollisionHandlerClass = 0x1f8; // UPhysicsCollisionHandler*
		constexpr auto PhysicsCollisionHandlerClassName = 0x200; // FSoftClassPath
		constexpr auto GameUserSettingsClassName = 0x218; // FSoftClassPath
		constexpr auto GameUserSettingsClass = 0x230; // UGameUserSettings*
		constexpr auto AIControllerClassName = 0x238; // FSoftClassPath
		constexpr auto GameUserSettings = 0x250; // UGameUserSettings*
		constexpr auto LevelScriptActorClass = 0x258; // ALevelScriptActor*
		constexpr auto LevelScriptActorClassName = 0x260; // FSoftClassPath
		constexpr auto DefaultBlueprintBaseClassName = 0x278; // FSoftClassPath
		constexpr auto GameSingletonClassName = 0x290; // FSoftClassPath
		constexpr auto GameSingleton = 0x2a8; // UObject*
		constexpr auto AssetManagerClassName = 0x2b0; // FSoftClassPath
		constexpr auto AssetManager = 0x2c8; // UAssetManager*
		constexpr auto DefaultTexture = 0x2d0; // UTexture2D*
		constexpr auto DefaultTextureName = 0x2d8; // FSoftObjectPath
		constexpr auto DefaultDiffuseTexture = 0x2f0; // UTexture*
		constexpr auto DefaultDiffuseTextureName = 0x2f8; // FSoftObjectPath
		constexpr auto DefaultBSPVertexTexture = 0x310; // UTexture2D*
		constexpr auto DefaultBSPVertexTextureName = 0x318; // FSoftObjectPath
		constexpr auto HighFrequencyNoiseTexture = 0x330; // UTexture2D*
		constexpr auto HighFrequencyNoiseTextureName = 0x338; // FSoftObjectPath
		constexpr auto DefaultBokehTexture = 0x350; // UTexture2D*
		constexpr auto DefaultBokehTextureName = 0x358; // FSoftObjectPath
		constexpr auto DefaultBloomKernelTexture = 0x370; // UTexture2D*
		constexpr auto DefaultBloomKernelTextureName = 0x378; // FSoftObjectPath
		constexpr auto WireframeMaterial = 0x390; // UMaterial*
		constexpr auto WireframeMaterialName = 0x398; // FString
		constexpr auto DebugMeshMaterial = 0x3a8; // UMaterial*
		constexpr auto DebugMeshMaterialName = 0x3b0; // FSoftObjectPath
		constexpr auto EmissiveMeshMaterial = 0x3c8; // UMaterial*
		constexpr auto EmissiveMeshMaterialName = 0x3d0; // FSoftObjectPath
		constexpr auto LevelColorationLitMaterial = 0x3e8; // UMaterial*
		constexpr auto LevelColorationLitMaterialName = 0x3f0; // FString
		constexpr auto LevelColorationUnlitMaterial = 0x400; // UMaterial*
		constexpr auto LevelColorationUnlitMaterialName = 0x408; // FString
		constexpr auto LightingTexelDensityMaterial = 0x418; // UMaterial*
		constexpr auto WorldNormalsMaterialName = 0x420; // FString
		constexpr auto WorldNormalsMaterial = 0x430; // UMaterial*
		constexpr auto LightingTexelDensityName = 0x438; // FString
		constexpr auto ShadedLevelColorationLitMaterial = 0x448; // UMaterial*
		constexpr auto ShadedLevelColorationLitMaterialName = 0x450; // FString
		constexpr auto ShadedLevelColorationUnlitMaterial = 0x460; // UMaterial*
		constexpr auto ShadedLevelColorationUnlitMaterialName = 0x468; // FString
		constexpr auto RemoveSurfaceMaterial = 0x478; // UMaterial*
		constexpr auto RemoveSurfaceMaterialName = 0x480; // FSoftObjectPath
		constexpr auto VertexColorMaterial = 0x498; // UMaterial*
		constexpr auto VertexColorMaterialName = 0x4a0; // FString
		constexpr auto VertexColorViewModeMaterial_ColorOnly = 0x4b0; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_ColorOnly = 0x4b8; // FString
		constexpr auto VertexColorViewModeMaterial_AlphaAsColor = 0x4c8; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_AlphaAsColor = 0x4d0; // FString
		constexpr auto VertexColorViewModeMaterial_RedOnly = 0x4e0; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_RedOnly = 0x4e8; // FString
		constexpr auto VertexColorViewModeMaterial_GreenOnly = 0x4f8; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_GreenOnly = 0x500; // FString
		constexpr auto VertexColorViewModeMaterial_BlueOnly = 0x510; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_BlueOnly = 0x518; // FString
		constexpr auto DebugEditorMaterialName = 0x528; // FSoftObjectPath
		constexpr auto ConstraintLimitMaterial = 0x540; // UMaterial*
		constexpr auto ConstraintLimitMaterialX = 0x548; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialXAxis = 0x550; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialY = 0x558; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialYAxis = 0x560; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialZ = 0x568; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialZAxis = 0x570; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialPrismatic = 0x578; // UMaterialInstanceDynamic*
		constexpr auto InvalidLightmapSettingsMaterial = 0x580; // UMaterial*
		constexpr auto InvalidLightmapSettingsMaterialName = 0x588; // FSoftObjectPath
		constexpr auto PreviewShadowsIndicatorMaterial = 0x5a0; // UMaterial*
		constexpr auto PreviewShadowsIndicatorMaterialName = 0x5a8; // FSoftObjectPath
		constexpr auto ArrowMaterial = 0x5c0; // UMaterial*
		constexpr auto ArrowMaterialYellow = 0x5c8; // UMaterialInstanceDynamic*
		constexpr auto ArrowMaterialName = 0x5d0; // FSoftObjectPath
		constexpr auto LightingOnlyBrightness = 0x5e8; // FLinearColor
		constexpr auto ShaderComplexityColors = 0x5f8; // TArray<FLinearColor>
		constexpr auto QuadComplexityColors = 0x608; // TArray<FLinearColor>
		constexpr auto LightComplexityColors = 0x618; // TArray<FLinearColor>
		constexpr auto StationaryLightOverlapColors = 0x628; // TArray<FLinearColor>
		constexpr auto LODColorationColors = 0x638; // TArray<FLinearColor>
		constexpr auto HLODColorationColors = 0x648; // TArray<FLinearColor>
		constexpr auto StreamingAccuracyColors = 0x658; // TArray<FLinearColor>
		constexpr auto MaxPixelShaderAdditiveComplexityCount = 0x668; // float
		constexpr auto MaxES3PixelShaderAdditiveComplexityCount = 0x66c; // float
		constexpr auto MinLightMapDensity = 0x670; // float
		constexpr auto IdealLightMapDensity = 0x674; // float
		constexpr auto MaxLightMapDensity = 0x678; // float
		constexpr auto bRenderLightMapDensityGrayscale = 0x67c; // char : 1
		constexpr auto RenderLightMapDensityGrayscaleScale = 0x680; // float
		constexpr auto RenderLightMapDensityColorScale = 0x684; // float
		constexpr auto LightMapDensityVertexMappedColor = 0x688; // FLinearColor
		constexpr auto LightMapDensitySelectedColor = 0x698; // FLinearColor
		constexpr auto StatColorMappings = 0x6a8; // TArray<FStatColorMapping>
		constexpr auto DefaultPhysMaterial = 0x6b8; // UPhysicalMaterial*
		constexpr auto DefaultPhysMaterialName = 0x6c0; // FSoftObjectPath
		constexpr auto ActiveGameNameRedirects = 0x6d8; // TArray<FGameNameRedirect>
		constexpr auto ActiveClassRedirects = 0x6e8; // TArray<FClassRedirect>
		constexpr auto ActivePluginRedirects = 0x6f8; // TArray<FPluginRedirect>
		constexpr auto ActiveStructRedirects = 0x708; // TArray<FStructRedirect>
		constexpr auto PreIntegratedSkinBRDFTexture = 0x718; // UTexture2D*
		constexpr auto PreIntegratedSkinBRDFTextureName = 0x720; // FSoftObjectPath
		constexpr auto HirezPreIntegratedSkinBRDFTexture = 0x738; // UTexture2D*
		constexpr auto HirezPreIntegratedSkinBRDFTextureName = 0x740; // FSoftObjectPath
		constexpr auto HirezPreIntegratedShadowTexture = 0x758; // UTexture2D*
		constexpr auto HirezPreIntegratedShadowTextureName = 0x760; // FSoftObjectPath
		constexpr auto BlueNoiseTexture = 0x778; // UTexture2D*
		constexpr auto BlueNoiseTextureName = 0x780; // FSoftObjectPath
		constexpr auto MiniFontTexture = 0x798; // UTexture2D*
		constexpr auto MiniFontTextureName = 0x7a0; // FSoftObjectPath
		constexpr auto WeightMapPlaceholderTexture = 0x7b8; // UTexture*
		constexpr auto WeightMapPlaceholderTextureName = 0x7c0; // FSoftObjectPath
		constexpr auto LightMapDensityTexture = 0x7d8; // UTexture2D*
		constexpr auto LightMapDensityTextureName = 0x7e0; // FSoftObjectPath
		constexpr auto GameViewport = 0x800; // UGameViewportClient*
		constexpr auto DeferredCommands = 0x808; // TArray<FString>
		constexpr auto TickCycles = 0x818; // int32_t
		constexpr auto GameCycles = 0x81c; // int32_t
		constexpr auto ClientCycles = 0x820; // int32_t
		constexpr auto NearClipPlane = 0x824; // float
		constexpr auto bStreamTexturesDuringLoadScreen = 0x828; // char : 1
		constexpr auto bHardwareSurveyEnabled = 0x828; // char : 1
		constexpr auto bSubtitlesEnabled = 0x828; // char : 1
		constexpr auto bSubtitlesForcedOff = 0x828; // char : 1
		constexpr auto MaximumLoopIterationCount = 0x82c; // int32_t
		constexpr auto bCanBlueprintsTickByDefault = 0x830; // char : 1
		constexpr auto bOptimizeAnimBlueprintMemberVariableAccess = 0x830; // char : 1
		constexpr auto bAllowMultiThreadedAnimationUpdate = 0x830; // char : 1
		constexpr auto bEnableEditorPSysRealtimeLOD = 0x830; // char : 1
		constexpr auto bSmoothFrameRate = 0x830; // char : 1
		constexpr auto bUseFixedFrameRate = 0x830; // char : 1
		constexpr auto FixedFrameRate = 0x834; // float
		constexpr auto SmoothedFrameRateRange = 0x838; // FFloatRange
		constexpr auto CustomTimeStep = 0x848; // UEngineCustomTimeStep*
		constexpr auto CustomTimeStepClassName = 0x870; // FSoftClassPath
		constexpr auto TimecodeProvider = 0x888; // UTimecodeProvider*
		constexpr auto TimecodeProviderClassName = 0x8b0; // FSoftClassPath
		constexpr auto bGenerateDefaultTimecode = 0x8c8; // bool
		constexpr auto GenerateDefaultTimecodeFrameRate = 0x8cc; // FFrameRate
		constexpr auto GenerateDefaultTimecodeFrameDelay = 0x8d4; // float
		constexpr auto bCheckForMultiplePawnsSpawnedInAFrame = 0x8d8; // char : 1
		constexpr auto NumPawnsAllowedToBeSpawnedInAFrame = 0x8dc; // int32_t
		constexpr auto bShouldGenerateLowQualityLightmaps = 0x8e0; // char : 1
		constexpr auto C_WorldBox = 0x8e4; // FColor
		constexpr auto C_BrushWire = 0x8e8; // FColor
		constexpr auto C_AddWire = 0x8ec; // FColor
		constexpr auto C_SubtractWire = 0x8f0; // FColor
		constexpr auto C_SemiSolidWire = 0x8f4; // FColor
		constexpr auto C_NonSolidWire = 0x8f8; // FColor
		constexpr auto C_WireBackground = 0x8fc; // FColor
		constexpr auto C_ScaleBoxHi = 0x900; // FColor
		constexpr auto C_VolumeCollision = 0x904; // FColor
		constexpr auto C_BSPCollision = 0x908; // FColor
		constexpr auto C_OrthoBackground = 0x90c; // FColor
		constexpr auto C_Volume = 0x910; // FColor
		constexpr auto C_BrushShape = 0x914; // FColor
		constexpr auto StreamingDistanceFactor = 0x918; // float
		constexpr auto GameScreenshotSaveDirectory = 0x920; // FDirectoryPath
		constexpr auto TransitionType = 0x930; // ETransitionType
		constexpr auto TransitionDescription = 0x938; // FString
		constexpr auto TransitionGameMode = 0x948; // FString
		constexpr auto MeshLODRange = 0x958; // float
		constexpr auto bAllowMatureLanguage = 0x95c; // char : 1
		constexpr auto CameraRotationThreshold = 0x960; // float
		constexpr auto CameraTranslationThreshold = 0x964; // float
		constexpr auto PrimitiveProbablyVisibleTime = 0x968; // float
		constexpr auto MaxOcclusionPixelsFraction = 0x96c; // float
		constexpr auto bPauseOnLossOfFocus = 0x970; // char : 1
		constexpr auto MaxParticleResize = 0x974; // int32_t
		constexpr auto MaxParticleResizeWarn = 0x978; // int32_t
		constexpr auto PendingDroppedNotes = 0x980; // TArray<FDropNoteInfo>
		constexpr auto NetClientTicksPerSecond = 0x990; // float
		constexpr auto DisplayGamma = 0x994; // float
		constexpr auto MinDesiredFrameRate = 0x998; // float
		constexpr auto DefaultSelectedMaterialColor = 0x99c; // FLinearColor
		constexpr auto SelectedMaterialColor = 0x9ac; // FLinearColor
		constexpr auto SelectionOutlineColor = 0x9bc; // FLinearColor
		constexpr auto SubduedSelectionOutlineColor = 0x9cc; // FLinearColor
		constexpr auto SelectedMaterialColorOverride = 0x9dc; // FLinearColor
		constexpr auto bIsOverridingSelectedColor = 0x9ec; // bool
		constexpr auto bEnableOnScreenDebugMessages = 0x9f0; // char : 1
		constexpr auto bEnableOnScreenDebugMessagesDisplay = 0x9f0; // char : 1
		constexpr auto bSuppressMapWarnings = 0x9f0; // char : 1
		constexpr auto bDisableAILogging = 0x9f0; // char : 1
		constexpr auto bEnableVisualLogRecordingOnStart = 0x9f4; // uint32_t
		constexpr auto ScreenSaverInhibitorSemaphore = 0x9fc; // int32_t
		constexpr auto bLockReadOnlyLevels = 0xa00; // char : 1
		constexpr auto ParticleEventManagerClassPath = 0xa08; // FString
		constexpr auto SelectionHighlightIntensity = 0xa18; // float
		constexpr auto BSPSelectionHighlightIntensity = 0xa1c; // float
		constexpr auto SelectionHighlightIntensityBillboards = 0xa20; // float
		constexpr auto NetDriverDefinitions = 0xc70; // TArray<FNetDriverDefinition>
		constexpr auto ServerActors = 0xc80; // TArray<FString>
		constexpr auto RuntimeServerActors = 0xc90; // TArray<FString>
		constexpr auto NetErrorLogInterval = 0xca0; // float
		constexpr auto bStartedLoadMapMovie = 0xca4; // char : 1
		constexpr auto NextWorldContextHandle = 0xcc0; // int32_t
	}

	namespace n_UWBP_Social_Overlay_C {
		constexpr auto UberGraphFrame = 0x5c0; // FPointerToUberGraphFrame
		constexpr auto OpenPanel = 0x5c8; // UWidgetAnimation*
		constexpr auto background = 0x5d0; // UImage*
		constexpr auto Blocker = 0x5d8; // UButton*
		constexpr auto ContentSwitcher = 0x5e0; // UWidgetSwitcher*
		constexpr auto ContextBlocker = 0x5e8; // UButton*
		constexpr auto ContextMenu = 0x5f0; // UWBP_PlayerContextMenu_C*
		constexpr auto dropshadowgradient = 0x5f8; // UImage*
		constexpr auto FriendsPanel = 0x600; // UWBP_Social_Friends_Tab_C*
		constexpr auto NavButton0 = 0x608; // UWBP_subscreen_nav_tab_C*
		constexpr auto NavButton1 = 0x610; // UWBP_subscreen_nav_tab_C*
		constexpr auto NavButton2 = 0x618; // UWBP_subscreen_nav_tab_C*
		constexpr auto PromptTabLeft = 0x620; // UWBP_ControllerPrompt_C*
		constexpr auto PromptTabLeftContainer = 0x628; // USizeBox*
		constexpr auto PromptTabRight = 0x630; // UWBP_ControllerPrompt_C*
		constexpr auto PromptTabRightContainer = 0x638; // USizeBox*
		constexpr auto SearchPanel = 0x640; // UWBP_Social_Search_Tab_C*
		constexpr auto WBP_Social_Header_Cosmetic = 0x648; // UWBP_Social_Header_Cosmetic_C*
		constexpr auto NavButtons = 0x650; // TMap<UWBP_subscreen_nav_tab_C*, UKSWidget*>
		constexpr auto ActiveTabButton = 0x6a0; // UWBP_subscreen_nav_tab_C*
		constexpr auto ContextMenuFocusGroup = 0x6a8; // int32_t
		constexpr auto StatusContextMenuFocusGroup = 0x6ac; // int32_t
		constexpr auto IsOpen = 0x6b0; // bool
		constexpr auto ShowSocialOverlaySFX = 0x6b8; // UAkAudioEvent*
		constexpr auto GamePadTabSocialOverlaySFX = 0x6c0; // UAkAudioEvent*
	}

	namespace n_UParticleModuleAccelerationOverLifetime {
		constexpr auto AccelOverLife = 0x38; // FRawDistributionVector
	}

	namespace n_AKSBuild_APS {
		constexpr auto DetectionSphere = 0x3a8; // USphereComponent*
		constexpr auto DetectionSphereRadius = 0x3b0; // float
		constexpr auto MaxProjectilesDestroyed = 0x3b4; // int32_t
		constexpr auto TimeToActivate = 0x3b8; // float
		constexpr auto MarkedProjectiles = 0x3c0; // TArray<AKSProjectile*>
		constexpr auto bIsActive = 0x3d4; // bool
	}

	namespace n_UCreateSessionCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UKSEventTracker {
		constexpr auto OnTriggered = 0x30; // FMulticastInlineDelegate
		constexpr auto bDoesTick = 0x40; // bool
		constexpr auto PlayerController = 0x44; // TWeakObjectPtr<AKSPlayerController>
		constexpr auto WeakActivityInstance = 0x4c; // TWeakObjectPtr<UKSActivityInstance>
		constexpr auto ProgressEarnedBySource = 0x58; // TMap<ERewardSource, float>
		constexpr auto ProgressEarnedByEvent = 0xa8; // TMap<FString, float>
		constexpr auto ProgressEarnedByBooster = 0xf8; // TMap<FString, float>
		constexpr auto ExtraData = 0x148; // TMap<FString, float>
		constexpr auto PlayerData = 0x198; // UKSEventTrackerPlayerData*
	}

	namespace n_UMasterLobby_ABP_C {
		constexpr auto UberGraphFrame = 0x10f0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x10f8; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x1138; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned = 0x11c0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_StateResult = 0x1320; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x1360; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_LocalToComponentSpace_4 = 0x1420; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_4 = 0x1450; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LayeredBoneBlend = 0x1480; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer = 0x1550; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_CopyBone_2 = 0x15d8; // FAnimNode_CopyBone
		constexpr auto AnimGraphNode_CopyBone = 0x16d8; // FAnimNode_CopyBone
		constexpr auto AnimGraphNode_SaveCachedPose_3 = 0x17d8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_5 = 0x18a0; // FAnimNode_UseCachedPose
		constexpr auto __CustomProperty_bIsLobby_90FBADB5424A5A00D7B0F4B018D67A66 = 0x18d8; // bool
		constexpr auto __CustomProperty_bIsServer_90FBADB5424A5A00D7B0F4B018D67A66 = 0x18d9; // bool
		constexpr auto AnimGraphNode_SubInstance = 0x18e0; // FAnimNode_LinkedAnimGraph
		constexpr auto AnimGraphNode_Slot_2 = 0x1990; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x19e8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LocalToComponentSpace_3 = 0x1a98; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_3 = 0x1ac8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ModifyBone_2 = 0x1af8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_SaveCachedPose_2 = 0x1c10; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_4 = 0x1cd8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_3 = 0x1d10; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool = 0x1d48; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_RigidBodySkipServer = 0x1e00; // FAnimNode_RigidBodySkipServer
		constexpr auto AnimGraphNode_ComponentToLocalSpace_2 = 0x23b0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_2 = 0x23e0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_SaveCachedPose = 0x2410; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0x24d8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose = 0x2510; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Slot = 0x2548; // FAnimNode_Slot
		constexpr auto AnimGraphNode_ModifyBone = 0x25a0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x26b8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x26e8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto R_Prop_Lock_Alpha = 0x2718; // float
		constexpr auto L_Prop_Lock_Alpha = 0x271c; // float
		constexpr auto bIsServer = 0x2720; // bool
		constexpr auto SkinUseCharacterScale = 0x2721; // bool
		constexpr auto CharacterScale = 0x2724; // FVector
		constexpr auto ChildPhysicsAssetEnable = 0x2730; // bool
		constexpr auto RemoveHeadAccessory = 0x2731; // bool
	}

	namespace n_UGeometryCacheComponent {
		constexpr auto GeometryCache = 0x458; // UGeometryCache*
		constexpr auto bRunning = 0x460; // bool
		constexpr auto bLooping = 0x461; // bool
		constexpr auto StartTimeOffset = 0x464; // float
		constexpr auto PlaybackSpeed = 0x468; // float
		constexpr auto NumTracks = 0x46c; // int32_t
		constexpr auto ElapsedTime = 0x470; // float
		constexpr auto Duration = 0x4a4; // float
		constexpr auto bManualTick = 0x4a8; // bool
	}

	namespace n_UWBP_ModalPopupContainer_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto CloseButton = 0x528; // UButton*
		constexpr auto Image_53 = 0x530; // UImage*
		constexpr auto Image_197 = 0x538; // UImage*
		constexpr auto PopupContent = 0x540; // UNamedSlot*
		constexpr auto useCloseButton = 0x548; // bool
		constexpr auto CloseButtonClicked = 0x550; // FMulticastInlineDelegate
		constexpr auto ClickCloseBtnModalPopupContainerSFX = 0x560; // UAkAudioEvent*
		constexpr auto HoverCloseBtnModalPopupContainerSFX = 0x568; // UAkAudioEvent*
	}

	namespace n_UMovieSceneSpawnTrack {
		constexpr auto Sections = 0x58; // TArray<UMovieSceneSection*>
		constexpr auto ObjectGuid = 0x68; // FGuid
	}

	namespace n_UNiagaraSpriteRendererProperties {
		constexpr auto Material = 0x50; // UMaterialInterface*
		constexpr auto MaterialUserParamBinding = 0x58; // FNiagaraUserParameterBinding
		constexpr auto Alignment = 0x80; // ENiagaraSpriteAlignment
		constexpr auto FacingMode = 0x81; // ENiagaraSpriteFacingMode
		constexpr auto PivotInUVSpace = 0x84; // FVector2D
		constexpr auto SortMode = 0x8c; // ENiagaraSortMode
		constexpr auto SubImageSize = 0x90; // FVector2D
		constexpr auto bSubImageBlend = 0x98; // char : 1
		constexpr auto bRemoveHMDRollInVR = 0x98; // char : 1
		constexpr auto bSortOnlyWhenTranslucent = 0x98; // char : 1
		constexpr auto MinFacingCameraBlendDistance = 0x9c; // float
		constexpr auto MaxFacingCameraBlendDistance = 0xa0; // float
		constexpr auto PositionBinding = 0xa8; // FNiagaraVariableAttributeBinding
		constexpr auto ColorBinding = 0x120; // FNiagaraVariableAttributeBinding
		constexpr auto VelocityBinding = 0x198; // FNiagaraVariableAttributeBinding
		constexpr auto SpriteRotationBinding = 0x210; // FNiagaraVariableAttributeBinding
		constexpr auto SpriteSizeBinding = 0x288; // FNiagaraVariableAttributeBinding
		constexpr auto SpriteFacingBinding = 0x300; // FNiagaraVariableAttributeBinding
		constexpr auto SpriteAlignmentBinding = 0x378; // FNiagaraVariableAttributeBinding
		constexpr auto SubImageIndexBinding = 0x3f0; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterialBinding = 0x468; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial1Binding = 0x4e0; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial2Binding = 0x558; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial3Binding = 0x5d0; // FNiagaraVariableAttributeBinding
		constexpr auto CameraOffsetBinding = 0x648; // FNiagaraVariableAttributeBinding
		constexpr auto UVScaleBinding = 0x6c0; // FNiagaraVariableAttributeBinding
		constexpr auto MaterialRandomBinding = 0x738; // FNiagaraVariableAttributeBinding
		constexpr auto CustomSortingBinding = 0x7b0; // FNiagaraVariableAttributeBinding
		constexpr auto NormalizedAgeBinding = 0x828; // FNiagaraVariableAttributeBinding
	}

	namespace n_UKSBTAction {
		constexpr auto ActionName = 0x30; // FString
	}

	namespace n_UWBP_WeaponMasteryBadge_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto LevelText = 0x240; // UTextBlock*
		constexpr auto Mastered = 0x248; // UImage*
		constexpr auto MasteryMax = 0x250; // UImage*
		constexpr auto Unmastered = 0x258; // UImage*
		constexpr auto WidgetSwitcher_88 = 0x260; // UWidgetSwitcher*
	}

	namespace n_UARCandidateObject {
		constexpr auto CandidateObjectData = 0x30; // TArray<char>
		constexpr auto FriendlyName = 0x40; // FString
		constexpr auto BoundingBox = 0x50; // FBox
	}

	namespace n_AKSMapDifficultyManager {
		constexpr auto AppliesToNPEMatches = 0x220; // bool
		constexpr auto Difficulties = 0x228; // TArray<UKSBTDifficulty*>
		constexpr auto InitialTeamDifficulties = 0x238; // TMap<int32_t, int32_t>
		constexpr auto MinDifficultyWhenDefeated = 0x288; // int32_t
		constexpr auto ApplicableGameModes = 0x290; // TArray<AGameModeBase*>
		constexpr auto WinLossRatioAdjustEasier = 0x2a0; // TArray<float>
		constexpr auto WinLossRatioAdjustHarder = 0x2b0; // TArray<float>
		constexpr auto AllowAdjustmentAtStartOfRound = 0x2c0; // bool
		constexpr auto AllowAdjustmentForDeaths = 0x2c1; // bool
		constexpr auto DeathsPerAdjustmentCalculation = 0x2c4; // int32_t
		constexpr auto AllowAdjustmentForTeamDeaths = 0x2c8; // bool
		constexpr auto TeamDeathsPerAdjustmentCalculation = 0x2cc; // int32_t
		constexpr auto AllowAdjustmentForObjectivesClaimed = 0x2d0; // bool
		constexpr auto ObjectivesPerAdjustmentCalculation = 0x2d4; // int32_t
		constexpr auto AllowAdjustmentForTimeElapsed = 0x2d8; // bool
		constexpr auto SecondsPerAdjustmentCalculation = 0x2dc; // int32_t
		constexpr auto KillDeathRatioAdjustEasier = 0x2e0; // TArray<float>
		constexpr auto KillDeathRatioAdjustHarder = 0x2f0; // TArray<float>
		constexpr auto RoundWinPercentAdjustEasier = 0x300; // TArray<float>
		constexpr auto RoundWinPercentAdjustHarder = 0x310; // TArray<float>
	}

	namespace n_UKSComponentReticleWidgetBase {
		constexpr auto ShrinkAnimationTime = 0x5e8; // float
		constexpr auto BlockedShotIconMaxScale = 0x5ec; // float
		constexpr auto BlockedShotIconMinScale = 0x5f0; // float
		constexpr auto BlockedShotMinScaleSqDist = 0x5f4; // float
		constexpr auto bGrenadeCooking = 0x5f8; // bool
		constexpr auto bInADS = 0x5f9; // bool
		constexpr auto bCachedBlockIconVisible = 0x5fa; // bool
		constexpr auto CachedWeaponAccuracy = 0x5fc; // float
		constexpr auto CachedReticleOffset = 0x600; // float
	}

	namespace n_AKSExtractionComputer {
		constexpr auto ObjectiveInfo = 0x398; // FKSObjectiveInfo
		constexpr auto ObjectiveTimerInfo = 0x400; // FKSObjectiveTimerInfo
		constexpr auto ObjectiveCaptureInfo = 0x438; // FKSObjectiveCaptureInfo
		constexpr auto POIState = 0x44c; // EKSPOIState
		constexpr auto InteractionBlockerManager = 0x450; // UKSInteractionBlockerManager*
		constexpr auto InteractableComponent = 0x468; // UKSInteractableComponent*
		constexpr auto FavoredSide = 0x470; // int32_t
		constexpr auto TimeToHack = 0x474; // float
		constexpr auto TimeToDehack = 0x478; // float
		constexpr auto CurrentInteractionProgress = 0x47c; // float
		constexpr auto CurrentInteractionManager = 0x480; // UKSInteractionManager*
		constexpr auto ComputerUser = 0x488; // AKSCharacter*
		constexpr auto HackingInteractionProgressText = 0x490; // FText
		constexpr auto DehackingInteractionProgressText = 0x4a8; // FText
		constexpr auto HackingInteractionPromptText = 0x4c0; // FText
		constexpr auto DehackingInteractionPromptText = 0x4d8; // FText
		constexpr auto InteractionRangeSphereComponent = 0x4f0; // USphereComponent*
		constexpr auto RelativeInteractionPoint = 0x4f8; // FVector
		constexpr auto CameraName = 0x504; // FName
		constexpr auto CameraTransitionInTime = 0x50c; // float
		constexpr auto CameraTransitionOutTime = 0x510; // float
		constexpr auto bForceCameraShoulder = 0x514; // bool
		constexpr auto CameraShoulder = 0x515; // ECameraShoulder
		constexpr auto CameraMaxRotation = 0x518; // float
		constexpr auto CameraRotationLockout = 0x51c; // bool
		constexpr auto bLockPitch = 0x51d; // bool
		constexpr auto bLockYaw = 0x51e; // bool
		constexpr auto FacesInteract = 0x51f; // bool
		constexpr auto bCameraShake = 0x520; // bool
		constexpr auto CameraShake = 0x528; // UCameraShake*
	}

	namespace n_APhysicsConstraintActor {
		constexpr auto ConstraintComp = 0x220; // UPhysicsConstraintComponent*
		constexpr auto ConstraintActor1 = 0x228; // AActor*
		constexpr auto ConstraintActor2 = 0x230; // AActor*
		constexpr auto bDisableCollision = 0x238; // char : 1
	}

	namespace n_UPUMG_ViewManager {
		constexpr auto ViewLayers = 0x28; // TArray<UPUMG_ViewLayer*>
		constexpr auto StickyWidgetMap = 0x38; // TMap<FName, UPUMG_Widget*>
		constexpr auto OnViewStateChanged = 0x88; // FMulticastInlineDelegate
		constexpr auto OnViewStateChangeStarted = 0x98; // FMulticastInlineDelegate
		constexpr auto HudRef = 0xa8; // APUMG_HUD*
		constexpr auto CanvasPanels = 0xb0; // TArray<UCanvasPanel*>
		constexpr auto StickyWidgets = 0xc0; // TArray<FStickyWidgetData>
		constexpr auto Routes = 0xd0; // UDataTable*
		constexpr auto AlwaysCheckRouteData = 0xd8; // TArray<FViewRouteRedirectData>
	}

	namespace n_UKSGameInstance {
		constexpr auto LoadingScreenBeganDel = 0x258; // FMulticastInlineDelegate
		constexpr auto LoadingScreenEndedDel = 0x268; // FMulticastInlineDelegate
		constexpr auto AlwaysNeededPrimaryAssetQuery = 0x278; // FGameplayTagQuery
		constexpr auto AlwaysNeededPrimaryAssetBundles = 0x2c0; // TArray<FName>
		constexpr auto LoadingScreenTipsTable = 0x328; // UDataTable*
		constexpr auto LoadingScreenImageManager = 0x330; // ULoadingScreenImageManager*
		constexpr auto ActivityManagers = 0x348; // TArray<TWeakObjectPtr<UKSActivityManagerBase>>
		constexpr auto AcquisitionManager = 0x358; // UKSAcquisitionManager*
		constexpr auto StoreItemHelper = 0x360; // UPUMG_StoreItemHelper*
		constexpr auto JsonDataFactory = 0x368; // UKSJsonDataFactory*
		constexpr auto LoadoutDataFactory = 0x370; // UKSLoadoutDataFactory*
		constexpr auto UISessionManager = 0x378; // UKSUISessionManager*
		constexpr auto ActivityInstanceManager = 0x380; // UKSActivityInstanceManager*
		constexpr auto PlayerInventoryHelper = 0x388; // UKSPlayerInventoryHelper*
		constexpr auto PlayerStatsManager = 0x390; // UKSPlayerStatsManager*
		constexpr auto PlayerChallengesManager = 0x398; // UKSPlayerChallengesManager*
		constexpr auto NPETrackManager = 0x3a0; // UKSNPETrackManager*
		constexpr auto MercMasteryManager = 0x3a8; // UKSMercMasteryManager*
		constexpr auto MercManager = 0x3b0; // UKSMercManager*
		constexpr auto WeaponManager = 0x3b8; // UKSWeaponManager*
		constexpr auto AwardsManager = 0x3c0; // UKSAwardsManager*
		constexpr auto GeneralProgressionManager = 0x3c8; // UKSGeneralProgressionManager*
		constexpr auto RankedManager = 0x3d0; // UKSRankedManager*
		constexpr auto BattlePassProgressionManager = 0x3d8; // UKSBattlePassProgressionManager*
		constexpr auto EventChallengesManager = 0x3e0; // UKSEventChallengesManager*
		constexpr auto SeasonalEventChallengesManager = 0x3e8; // UKSSeasonalEventChallengesManager*
		constexpr auto ActivitySequenceManager = 0x3f0; // UKSActivitySequenceManager*
		constexpr auto AudioManager = 0x3f8; // UKSAudioManager*
		constexpr auto PunishmentManager = 0x400; // UKSPunishmentManager*
		constexpr auto BoosterManager = 0x408; // UKSBoosterManager*
		constexpr auto WeaponMasteryManager = 0x410; // UKSWeaponMasteryManager*
		constexpr auto VoiceChatManager = 0x418; // UPUMG_VoiceChatManager*
		constexpr auto WingsuitWeaponAsset = 0x4a0; // UKSWeaponAsset*
		constexpr auto ShouldUseZombiePrevention = 0x4a8; // bool
		constexpr auto ZombiePreventionSeconds = 0x4ac; // int32_t
	}

	namespace n_UKSPlayerMod_AdjustCashRewards {
		constexpr auto BonusCashPerDown = 0x330; // int32_t
	}

	namespace n_UKSPlayerModInst_WeaponAttachment {
		constexpr auto AttachmentsToGive = 0x1b8; // TArray<UKSWeaponAttachment*>
		constexpr auto ItemSourcesThatAllowAttachmentGiving = 0x1c8; // TArray<EItemSourceType>
		constexpr auto ItemSourcesThatForbidAttachmentGiving = 0x1d8; // TArray<EItemSourceType>
		constexpr auto bAttachmentsPersistOnDrop = 0x1e8; // bool
		constexpr auto GivenAttachmentInstances = 0x1f0; // TArray<TWeakObjectPtr<UKSWeaponAttachmentInstance>>
	}

	namespace n_UGizmoAxisTranslationParameterSource {
		constexpr auto AxisSource = 0x90; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0xa0; // TScriptInterface<IGizmoTransformSource>
		constexpr auto Parameter = 0xb0; // float
		constexpr auto LastChange = 0xb4; // FGizmoFloatParameterChange
		constexpr auto CurTranslationAxis = 0xbc; // FVector
		constexpr auto CurTranslationOrigin = 0xc8; // FVector
		constexpr auto InitialTransform = 0xe0; // FTransform
	}

	namespace n_UMaterialExpressionTextureSampleParameterSubUV {
		constexpr auto bBlend = 0xf0; // char : 1
	}

	namespace n_UInterpGroupCamera {
		constexpr auto CameraAnimInst = 0x50; // UCameraAnim*
		constexpr auto CompressTolerance = 0x58; // float
	}

	namespace n_UNiagaraPreviewAxis_InterpParamVector {
		constexpr auto Min = 0x38; // FVector
		constexpr auto Max = 0x44; // FVector
	}

	namespace n_UParticleModuleRequired {
		constexpr auto Material = 0x30; // UMaterialInterface*
		constexpr auto MinFacingCameraBlendDistance = 0x38; // float
		constexpr auto MaxFacingCameraBlendDistance = 0x3c; // float
		constexpr auto EmitterOrigin = 0x40; // FVector
		constexpr auto EmitterRotation = 0x4c; // FRotator
		constexpr auto ScreenAlignment = 0x58; // EParticleScreenAlignment
		constexpr auto bUseLocalSpace = 0x59; // char : 1
		constexpr auto bKillOnDeactivate = 0x59; // char : 1
		constexpr auto bKillOnCompleted = 0x59; // char : 1
		constexpr auto SortMode = 0x5a; // EParticleSortMode
		constexpr auto bUseLegacyEmitterTime = 0x5b; // char : 1
		constexpr auto bRemoveHMDRoll = 0x5b; // char : 1
		constexpr auto bEmitterDurationUseRange = 0x5b; // char : 1
		constexpr auto EmitterDuration = 0x5c; // float
		constexpr auto SpawnRate = 0x60; // FRawDistributionFloat
		constexpr auto BurstList = 0x90; // TArray<FParticleBurst>
		constexpr auto EmitterDelay = 0xa0; // float
		constexpr auto EmitterDelayLow = 0xa4; // float
		constexpr auto bDelayFirstLoopOnly = 0xa8; // char : 1
		constexpr auto InterpolationMethod = 0xa9; // EParticleSubUVInterpMethod
		constexpr auto bScaleUV = 0xaa; // char : 1
		constexpr auto bEmitterDelayUseRange = 0xaa; // char : 1
		constexpr auto ParticleBurstMethod = 0xab; // EParticleBurstMethod
		constexpr auto bOverrideSystemMacroUV = 0xac; // char : 1
		constexpr auto bUseMaxDrawCount = 0xac; // char : 1
		constexpr auto OpacitySourceMode = 0xad; // EOpacitySourceMode
		constexpr auto EmitterNormalsMode = 0xae; // EEmitterNormalsMode
		constexpr auto bOrbitModuleAffectsVelocityAlignment = 0xaf; // char : 1
		constexpr auto SubImages_Horizontal = 0xb0; // int32_t
		constexpr auto SubImages_Vertical = 0xb4; // int32_t
		constexpr auto RandomImageTime = 0xb8; // float
		constexpr auto RandomImageChanges = 0xbc; // int32_t
		constexpr auto MacroUVPosition = 0xc0; // FVector
		constexpr auto MacroUVRadius = 0xcc; // float
		constexpr auto UVFlippingMode = 0xd0; // EParticleUVFlipMode
		constexpr auto BoundingMode = 0xd1; // ESubUVBoundingVertexCount
		constexpr auto bDurationRecalcEachLoop = 0xd2; // char : 1
		constexpr auto NormalsSphereCenter = 0xd4; // FVector
		constexpr auto AlphaThreshold = 0xe0; // float
		constexpr auto EmitterLoops = 0xe4; // int32_t
		constexpr auto CutoutTexture = 0xe8; // UTexture2D*
		constexpr auto MaxDrawCount = 0xf0; // int32_t
		constexpr auto EmitterDurationLow = 0xf4; // float
		constexpr auto NormalsCylinderDirection = 0xf8; // FVector
		constexpr auto NamedMaterialOverrides = 0x108; // TArray<FName>
	}

	namespace n_UImgMediaSource {
		constexpr auto FrameRateOverride = 0x88; // FFrameRate
		constexpr auto ProxyOverride = 0x90; // FString
		constexpr auto SequencePath = 0xa0; // FDirectoryPath
	}

	namespace n_UUserDefinedImageCaptureProtocol {
		constexpr auto Format = 0xd8; // EDesiredImageFormat
		constexpr auto bEnableCompression = 0xd9; // bool
		constexpr auto CompressionQuality = 0xdc; // int32_t
	}

	namespace n_UWBP_ListButton_Cosmetic_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto ArrowLoop = 0x528; // UWidgetAnimation*
		constexpr auto OnSelect = 0x530; // UWidgetAnimation*
		constexpr auto OnHover = 0x538; // UWidgetAnimation*
		constexpr auto Arrow = 0x540; // UImage*
		constexpr auto CosmeticIcon = 0x548; // UWBP_KSCosmeticItemDisplay_C*
		constexpr auto HitTarget = 0x550; // UButton*
		constexpr auto HoveredState = 0x558; // UOverlay*
		constexpr auto ItemName = 0x560; // UTextBlock*
		constexpr auto RarityRichText = 0x568; // URichTextBlock*
		constexpr auto SelectedState = 0x570; // UOverlay*
		constexpr auto WBP_MercMasteryIcon = 0x578; // UWBP_RogueMasteryIcon_C*
		constexpr auto IsSelected = 0x580; // bool
		constexpr auto OnRewardSelected = 0x588; // FMulticastInlineDelegate
		constexpr auto RewardItem = 0x598; // FMasteryRewardData
		constexpr auto ClickStandardBtnInnerSFX = 0x5a8; // UAkAudioEvent*
		constexpr auto HoverStandardBtnInnerSFX = 0x5b0; // UAkAudioEvent*
		constexpr auto CurrentRewardDisplayData = 0x5b8; // FWeaponMasteryRewardDisplayData
	}

	namespace n_UWBP_SettingsBinding_Clear_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto Hover = 0x528; // UWidgetAnimation*
		constexpr auto Image_361 = 0x530; // UImage*
		constexpr auto RadioButton = 0x538; // UButton*
		constexpr auto On Cleared = 0x540; // FMulticastInlineDelegate
		constexpr auto HoverSettingsRadioSFX = 0x550; // UAkAudioEvent*
		constexpr auto ClickSettingsRadioSFX = 0x558; // UAkAudioEvent*
	}

	namespace n_UWBP_UnlockMilestonesButton_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto ArrowLoop = 0x528; // UWidgetAnimation*
		constexpr auto OnClick = 0x530; // UWidgetAnimation*
		constexpr auto Highlight = 0x538; // UWidgetAnimation*
		constexpr auto Arrow = 0x540; // UImage*
		constexpr auto ButtonText = 0x548; // UTextBlock*
		constexpr auto HitTarget = 0x550; // UButton*
		constexpr auto KeyPrompt = 0x558; // UWBP_KeyCallout_C*
		constexpr auto KeyPromptContainer = 0x560; // UCanvasPanel*
		constexpr auto MilestonesIcon = 0x568; // UImage*
		constexpr auto SizeWrapper = 0x570; // USizeBox*
		constexpr auto TopBevel = 0x578; // UImage*
		constexpr auto TopBevel_ClickFill = 0x580; // UImage*
		constexpr auto TopBevel_Hover = 0x588; // UImage*
		constexpr auto TopBevel_Stroke = 0x590; // UImage*
		constexpr auto OnClicked = 0x598; // FMulticastInlineDelegate
		constexpr auto OnHovered = 0x5a8; // FMulticastInlineDelegate
		constexpr auto OnUnhovered = 0x5b8; // FMulticastInlineDelegate
		constexpr auto ClickMedBtnSFX = 0x5c8; // UAkAudioEvent*
		constexpr auto DefaultButtonText = 0x5d0; // FText
		constexpr auto DefaultWidth = 0x5e8; // float
		constexpr auto ShowPromptOnFocus = 0x5ec; // bool
		constexpr auto PromptKey = 0x5f0; // FKey
		constexpr auto HoverMedBtnSFX = 0x608; // UAkAudioEvent*
		constexpr auto IsConfirm = 0x610; // bool
		constexpr auto IsCancel = 0x611; // bool
	}

	namespace n_UInterpCurveEdSetup {
		constexpr auto Tabs = 0x28; // TArray<FCurveEdTab>
		constexpr auto ActiveTab = 0x38; // int32_t
	}

	namespace n_UOutlineContainer_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto BG = 0x528; // UImage*
		constexpr auto ContentSlot = 0x530; // UNamedSlot*
		constexpr auto HitTarget = 0x538; // UButton*
		constexpr auto Hover = 0x540; // UImage*
		constexpr auto Outline = 0x548; // UImage*
		constexpr auto OutlineTexture = 0x550; // UObject*
		constexpr auto OutlineMargin = 0x558; // FMargin
		constexpr auto Gamepad Confirm = 0x568; // FMulticastInlineDelegate
		constexpr auto ClickOutlineContainerSFX = 0x578; // UAkAudioEvent*
		constexpr auto HoverOutlineContainerSFX = 0x580; // UAkAudioEvent*
	}

	namespace n_USoundNodeModulator {
		constexpr auto PitchMin = 0x48; // float
		constexpr auto PitchMax = 0x4c; // float
		constexpr auto VolumeMin = 0x50; // float
		constexpr auto VolumeMax = 0x54; // float
	}

	namespace n_UNiagaraDataInterfaceRWBase {
		constexpr auto OutputShaderStages = 0x30; // TSet<int32_t>
		constexpr auto IterationShaderStages = 0x80; // TSet<int32_t>
	}

	namespace n_UUniformInteger {
		constexpr auto Magnitude = 0xb0; // int32_t
	}

	namespace n_UParticleModuleLocationEmitter {
		constexpr auto EmitterName = 0x30; // FName
		constexpr auto SelectionMethod = 0x38; // ELocationEmitterSelectionMethod
		constexpr auto InheritSourceVelocity = 0x3c; // char : 1
		constexpr auto InheritSourceVelocityScale = 0x40; // float
		constexpr auto bInheritSourceRotation = 0x44; // char : 1
		constexpr auto InheritSourceRotationScale = 0x48; // float
	}

	namespace n_UKSModInst_ApplyDebuffOnDamage {
		constexpr auto DebuffsToApply = 0x1d0; // TArray<UKSPlayerMod*>
		constexpr auto bGiveDebuffsUniquely = 0x1e0; // bool
		constexpr auto DebuffDuration = 0x1e4; // float
	}

	namespace n_UKSSpecialty {
		constexpr auto RequiredUnlockLevel = 0x250; // int32_t
		constexpr auto DynamicPoseImage = 0x258; // TSoftObjectPtr<UTexture2D>
		constexpr auto BannerIcon = 0x280; // TSoftObjectPtr<UTexture2D>
		constexpr auto LeftBannerIcon = 0x2a8; // TSoftObjectPtr<UTexture2D>
		constexpr auto RightBannerIcon = 0x2d0; // TSoftObjectPtr<UTexture2D>
		constexpr auto SmallIcon = 0x2f8; // TSoftObjectPtr<UTexture2D>
		constexpr auto AvailableKillstreaks = 0x320; // TArray<TSoftObjectPtr<UKSPlayerMod>>
		constexpr auto AvailableAbilities = 0x330; // TArray<TSoftObjectPtr<UKSPlayerMod>>
		constexpr auto AvailableGadgets = 0x340; // TArray<TSoftObjectPtr<UKSWeaponAsset>>
		constexpr auto AvailablePistols = 0x350; // TArray<TSoftObjectPtr<UKSWeaponAsset>>
		constexpr auto AvailableWeaponAttachments = 0x360; // TArray<TSoftObjectPtr<UKSWeaponAttachment>>
		constexpr auto RoleType = 0x370; // ESpecialtyRoleType
		constexpr auto AutoEquippedMods = 0x378; // TArray<TSoftObjectPtr<UKSPlayerMod>>
		constexpr auto PerkSlotOneCategory = 0x388; // TSoftObjectPtr<UPerkCategory>
		constexpr auto PerkSlotTwoCategory = 0x3b0; // TSoftObjectPtr<UPerkCategory>
	}

	namespace n_UMRMeshComponent {
		constexpr auto Material = 0x438; // UMaterialInterface*
		constexpr auto bCreateMeshProxySections = 0x440; // bool
		constexpr auto bUpdateNavMeshOnMeshUpdate = 0x441; // bool
		constexpr auto bNeverCreateCollisionMesh = 0x442; // bool
		constexpr auto CachedBodySetup = 0x448; // UBodySetup*
		constexpr auto BodySetups = 0x450; // TArray<UBodySetup*>
		constexpr auto WireframeMaterial = 0x460; // UMaterialInterface*
	}

	namespace n_USkeletalMeshSimulationComponent {
		constexpr auto PhysicalMaterial = 0xb8; // UChaosPhysicalMaterial*
		constexpr auto ChaosSolverActor = 0xc0; // AChaosSolverActor*
		constexpr auto OverridePhysicsAsset = 0xc8; // UPhysicsAsset*
		constexpr auto bSimulating = 0xd0; // bool
		constexpr auto bNotifyCollisions = 0xd1; // bool
		constexpr auto ObjectType = 0xd2; // EObjectStateTypeEnum
		constexpr auto Density = 0xd4; // float
		constexpr auto MinMass = 0xd8; // float
		constexpr auto MaxMass = 0xdc; // float
		constexpr auto CollisionType = 0xe0; // ECollisionTypeEnum
		constexpr auto ImplicitShapeParticlesPerUnitArea = 0xe4; // float
		constexpr auto ImplicitShapeMinNumParticles = 0xe8; // int32_t
		constexpr auto ImplicitShapeMaxNumParticles = 0xec; // int32_t
		constexpr auto MinLevelSetResolution = 0xf0; // int32_t
		constexpr auto MaxLevelSetResolution = 0xf4; // int32_t
		constexpr auto CollisionGroup = 0xf8; // int32_t
		constexpr auto InitialVelocityType = 0xfc; // EInitialVelocityTypeEnum
		constexpr auto InitialLinearVelocity = 0x100; // FVector
		constexpr auto InitialAngularVelocity = 0x10c; // FVector
		constexpr auto OnChaosPhysicsCollision = 0x118; // FMulticastInlineDelegate
	}

	namespace n_UKSPlayerStimulusComponentBase {
		constexpr auto OnStartStimulatingPlayer = 0xb0; // FMulticastInlineDelegate
		constexpr auto OnStopStimulatingPlayer = 0xc0; // FMulticastInlineDelegate
		constexpr auto StimulateTarget = 0xd0; // EKSStimulateTarget
		constexpr auto bRegisterOnBeginPlay = 0xd1; // bool
	}

	namespace n_USkeleton {
		constexpr auto BoneTree = 0x38; // TArray<FBoneNode>
		constexpr auto RefLocalPoses = 0x48; // TArray<FTransform>
		constexpr auto VirtualBoneGuid = 0x170; // FGuid
		constexpr auto VirtualBones = 0x180; // TArray<FVirtualBone>
		constexpr auto Sockets = 0x190; // TArray<USkeletalMeshSocket*>
		constexpr auto SmartNames = 0x1f0; // FSmartNameContainer
		constexpr auto BlendProfiles = 0x270; // TArray<UBlendProfile*>
		constexpr auto SlotGroups = 0x280; // TArray<FAnimSlotGroup>
		constexpr auto AssetUserData = 0x358; // TArray<UAssetUserData*>
	}

	namespace n_UWBP_BattlePassUpsellPanel_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto AdditionalUnlocks = 0x528; // UVerticalBox*
		constexpr auto AlsoUnlockText = 0x530; // UTextBlock*
		constexpr auto IconText = 0x538; // UTextBlock*
		constexpr auto Image_613 = 0x540; // UImage*
		constexpr auto InstantUnlocksText = 0x548; // UTextBlock*
		constexpr auto PremiumRewardsText = 0x550; // UTextBlock*
		constexpr auto RogueBucksStack = 0x558; // UVerticalBox*
		constexpr auto RogueBucksText = 0x560; // UTextBlock*
		constexpr auto TitleText = 0x568; // UTextBlock*
		constexpr auto WBP_PanelDefault = 0x570; // UWBP_PanelDefault_C*
		constexpr auto WBP_YellowButton = 0x578; // UWBP_YellowButton_C*
		constexpr auto OnButtonClicked = 0x580; // FMulticastInlineDelegate
	}

	namespace n_UApplicationLifecycleComponent {
		constexpr auto ApplicationWillDeactivateDelegate = 0xb0; // FMulticastInlineDelegate
		constexpr auto ApplicationHasReactivatedDelegate = 0xc0; // FMulticastInlineDelegate
		constexpr auto ApplicationWillEnterBackgroundDelegate = 0xd0; // FMulticastInlineDelegate
		constexpr auto ApplicationHasEnteredForegroundDelegate = 0xe0; // FMulticastInlineDelegate
		constexpr auto ApplicationWillTerminateDelegate = 0xf0; // FMulticastInlineDelegate
		constexpr auto ApplicationShouldUnloadResourcesDelegate = 0x100; // FMulticastInlineDelegate
		constexpr auto ApplicationReceivedStartupArgumentsDelegate = 0x110; // FMulticastInlineDelegate
		constexpr auto OnTemperatureChangeDelegate = 0x120; // FMulticastInlineDelegate
		constexpr auto OnLowPowerModeDelegate = 0x130; // FMulticastInlineDelegate
	}

	namespace n_UEnvQueryTest_PathfindingBatch {
		constexpr auto ScanRangeMultiplier = 0x280; // FAIDataProviderFloatValue
	}

	namespace n_UKSModInst_OnFireWeaponType {
		constexpr auto ValidWeaponTypes = 0x1b8; // TArray<FGameplayTag>
	}

	namespace n_UKSPlayerMod_Blind {
		constexpr auto IsBlind = 0x330; // bool
	}

	namespace n_UConsoleSettings {
		constexpr auto MaxScrollbackSize = 0x28; // int32_t
		constexpr auto ManualAutoCompleteList = 0x30; // TArray<FAutoCompleteCommand>
		constexpr auto AutoCompleteMapPaths = 0x40; // TArray<FString>
		constexpr auto BackgroundOpacityPercentage = 0x50; // float
		constexpr auto bOrderTopToBottom = 0x54; // bool
		constexpr auto bDisplayHelpInAutoComplete = 0x55; // bool
		constexpr auto InputColor = 0x58; // FColor
		constexpr auto HistoryColor = 0x5c; // FColor
		constexpr auto AutoCompleteCommandColor = 0x60; // FColor
		constexpr auto AutoCompleteCVarColor = 0x64; // FColor
		constexpr auto AutoCompleteFadedColor = 0x68; // FColor
	}

	namespace n_UWBP_NewsRotatorButton_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto EmptyPip = 0x528; // UImage*
		constexpr auto PipButton = 0x530; // UButton*
		constexpr auto SelectedPip = 0x538; // UImage*
		constexpr auto IsActivePip = 0x540; // bool
		constexpr auto OnClicked = 0x548; // FMulticastInlineDelegate
		constexpr auto ButtonIndex = 0x558; // int32_t
	}

	namespace n_UDecalComponent {
		constexpr auto DecalMaterial = 0x208; // UMaterialInterface*
		constexpr auto SortOrder = 0x210; // int32_t
		constexpr auto FadeScreenSize = 0x214; // float
		constexpr auto FadeStartDelay = 0x218; // float
		constexpr auto FadeDuration = 0x21c; // float
		constexpr auto FadeInDuration = 0x220; // float
		constexpr auto FadeInStartDelay = 0x224; // float
		constexpr auto bDestroyOwnerAfterFade = 0x228; // char : 1
		constexpr auto DecalSize = 0x22c; // FVector
	}

	namespace n_UKSSettingsDataFactory {
		constexpr auto OnSettingsReceivedFromPlayerAccount = 0xe0; // FMulticastInlineDelegate
		constexpr auto OnKeyBindSettingsApplied = 0x190; // FMulticastInlineDelegate
		constexpr auto OnKeyBindSettingsSaved = 0x1a0; // FMulticastInlineDelegate
		constexpr auto BoolSettingPropertyIds = 0x1b0; // TArray<FKSSettingPropertyId>
		constexpr auto IntSettingPropertyIds = 0x210; // TArray<FKSSettingPropertyId>
		constexpr auto FloatSettingPropertyIds = 0x270; // TArray<FKSSettingPropertyId>
		constexpr auto KSSettingsMenuConfigAssetSoftObjectPtr = 0x330; // TSoftObjectPtr<UKSSettingsMenuConfigAsset>
		constexpr auto KSSettingsMenuConfigAsset = 0x358; // UKSSettingsMenuConfigAsset*
		constexpr auto OnDisplayLanguageApplied = 0x370; // FMulticastInlineDelegate
		constexpr auto OnDisplayLanguageSaved = 0x380; // FMulticastInlineDelegate
		constexpr auto OnScreenResolutionApplied = 0x390; // FMulticastInlineDelegate
		constexpr auto OnScreenResolutionSaved = 0x3a0; // FMulticastInlineDelegate
	}

	namespace n_UCharacterEmotionComponent_C {
		constexpr auto CachedPlayerHealth = 0x238; // float
		constexpr auto PainedDuration = 0x23c; // float
		constexpr auto FocusedId = 0x240; // int32_t
		constexpr auto DeadId = 0x244; // int32_t
		constexpr auto WoundedId = 0x248; // int32_t
		constexpr auto K2Node_CreateDelegate_OutputDelegate = 0x24c; // FDelegate
		constexpr auto K2Node_DynamicCast_AsKSCharacter = 0x260; // AKSCharacter*
		constexpr auto K2Node_DynamicCast_bSuccess = 0x268; // bool
		constexpr auto K2Node_CreateDelegate_OutputDelegate_2 = 0x26c; // FDelegate
		constexpr auto K2Node_CreateDelegate_OutputDelegate_3 = 0x27c; // FDelegate
		constexpr auto K2Node_DynamicCast_AsKSCharacter_Base = 0x290; // AKSCharacterBase*
		constexpr auto K2Node_DynamicCast_bSuccess_2 = 0x298; // bool
		constexpr auto K2Node_CreateDelegate_OutputDelegate_4 = 0x29c; // FDelegate
	}

	namespace n_UKSItemBundle {
		constexpr auto BundledItems = 0x250; // TArray<TSoftObjectPtr<UKSItem>>
	}

	namespace n_UWBP_SettingsPreview_ReticleSize_C {
		constexpr auto UberGraphFrame = 0x538; // FPointerToUberGraphFrame
		constexpr auto Image_42 = 0x540; // UImage*
		constexpr auto Image_305 = 0x548; // UImage*
		constexpr auto RifleReticle = 0x550; // URifleReticle_C*
		constexpr auto SettingsDataFactory = 0x558; // UKSSettingsDataFactory*
	}

	namespace n_UMaterialExpressionRadialBlurSceneTexture {
		constexpr auto BlurDist = 0x40; // FExpressionInput
		constexpr auto ScreenUV = 0x54; // FExpressionInput
		constexpr auto SceneTextureId = 0x68; // ESceneTextureId
	}

	namespace n_UHierarchicalLODSetup {
		constexpr auto HierarchicalLODSetup = 0x28; // TArray<FHierarchicalSimplification>
		constexpr auto OverrideBaseMaterial = 0x38; // TSoftObjectPtr<UMaterialInterface>
	}

	namespace n_UImgMediaSettings {
		constexpr auto DefaultFrameRate = 0x28; // FFrameRate
		constexpr auto CacheBehindPercentage = 0x30; // float
		constexpr auto CacheSizeGB = 0x34; // float
		constexpr auto CacheThreads = 0x38; // int32_t
		constexpr auto CacheThreadStackSizeKB = 0x3c; // int32_t
		constexpr auto GlobalCacheSizeGB = 0x40; // float
		constexpr auto UseGlobalCache = 0x44; // bool
		constexpr auto ExrDecoderThreads = 0x48; // uint32_t
		constexpr auto DefaultProxy = 0x50; // FString
		constexpr auto UseDefaultProxy = 0x60; // bool
	}

	namespace n_UKSJobSelectOverallStatusWidget {
		constexpr auto CachedDisplayText = 0x548; // FText
		constexpr auto CachedDisplayTimerId = 0x560; // FPGame_ReplicatedTimerId
		constexpr auto CachedTimerState = 0x561; // EPGame_ReplicateTimerState
		constexpr auto CachedPrimaryTask = 0x568; // FJobSelectionTask
		constexpr auto TimerUpdatePeriod = 0x5b0; // float
	}

	namespace n_UKSAimSnapData {
		constexpr auto MaxAimSnapRotation = 0x38; // TMap<EControllerInputType, FRotator>
		constexpr auto AimSnapDistanceCurve = 0x88; // TMap<EControllerInputType, UCurveFloat*>
		constexpr auto AimSnapCurve = 0xd8; // TMap<EControllerInputType, UCurveVector*>
	}

	namespace n_UKSWeaponProgressMeter {
		constexpr auto CurrentMasteryType = 0x520; // EKSWeaponMasteryType
		constexpr auto CurrentMasteryInstance = 0x528; // UKSActivityInstance*
		constexpr auto PopulatedWeaponAsset = 0x540; // UKSWeaponAsset*
	}

	namespace n_UWBP_RogueMasteryTrackSection_FinalPrestige_C {
		constexpr auto WBP_ChevronProgressBar = 0x238; // UWBP_ChevronProgressBar_C*
	}

	namespace n_UFirstTimeSafeZoneWidget_C {
		constexpr auto UberGraphFrame = 0x4c0; // FPointerToUberGraphFrame
		constexpr auto Decro = 0x4c8; // UImage*
		constexpr auto Image_3 = 0x4d0; // UImage*
		constexpr auto Image_159 = 0x4d8; // UImage*
		constexpr auto SettingsWidgetContainer = 0x4e0; // UOverlay*
		constexpr auto Title = 0x4e8; // UTextBlock*
		constexpr auto WBP_StandardButtonMedium = 0x4f0; // UWBP_StandardButtonMedium_C*
		constexpr auto SettingsWidgetConfig = 0x4f8; // FKSSettingsWidgetConfig
		constexpr auto SettingsInfo = 0x508; // UKSSettingsInfoBase*
		constexpr auto SettingsWidget = 0x510; // UKSSettingsWidget*
	}

	namespace n_UPUMG_StoreItem {
		constexpr auto OnPriceSetDirty = 0x28; // FMulticastInlineDelegate
		constexpr auto pItemHelper = 0x48; // TWeakObjectPtr<UPUMG_StoreItemHelper>
		constexpr auto InventoryItem = 0x50; // TSoftObjectPtr<UPlatformInventoryItem>
		constexpr auto PortalOffer = 0x78; // UPUMG_PortalOffer*
	}

	namespace n_UWBP_local_player_card_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto AvatarShade = 0x528; // UImage*
		constexpr auto BackgroundFill = 0x530; // UImage*
		constexpr auto IconSizer = 0x538; // USizeBox*
		constexpr auto PendingPurchaseThrobber = 0x540; // UCircularThrobber*
		constexpr auto PlayerAvatar = 0x548; // UWBP_PlayerIdentity_Avatar_C*
		constexpr auto PlayerLevel = 0x550; // UWBP_PlayerIdentity_PlayerLevel_C*
		constexpr auto PlayerName = 0x558; // UTextBlock*
		constexpr auto PlayerNameShade = 0x560; // UImage*
		constexpr auto RBCount = 0x568; // UTextBlock*
		constexpr auto RBIcon = 0x570; // UImage*
		constexpr auto RBIconSizer = 0x578; // USizeBox*
		constexpr auto RBSwitcher = 0x580; // UWidgetSwitcher*
		constexpr auto RepSwitcher = 0x588; // UWidgetSwitcher*
		constexpr auto ReputationCount = 0x590; // UTextBlock*
		constexpr auto ReputationIcon = 0x598; // UImage*
		constexpr auto ReputationWrapper = 0x5a0; // UHorizontalBox*
		constexpr auto RogueBucksWrapper = 0x5a8; // UHorizontalBox*
		constexpr auto Throbber = 0x5b0; // UThrobber*
		constexpr auto Throbber_2 = 0x5b8; // UThrobber*
		constexpr auto PlayerDataFactory = 0x5c0; // UKSPlayerDataFactory*
		constexpr auto AvatarOptions = 0x5c8; // TArray<UTexture2D*>
		constexpr auto LoadoutDataFactory = 0x5d8; // UKSLoadoutDataFactory*
	}

	namespace n_ULiveLinkTimecodeProvider {
		constexpr auto SubjectKey = 0x30; // FLiveLinkSubjectKey
		constexpr auto Evaluation = 0x48; // ELiveLinkTimecodeProviderEvaluationType
		constexpr auto bOverrideFrameRate = 0x4c; // bool
		constexpr auto OverrideFrameRate = 0x50; // FFrameRate
		constexpr auto BufferSize = 0x58; // int32_t
	}

	namespace n_ASwitchActor {
		constexpr auto SceneComponent = 0x238; // USceneComponent*
		constexpr auto LastSelectedOption = 0x240; // int32_t
	}

	namespace n_UGameplayTask_SpawnActor {
		constexpr auto Success = 0x68; // FMulticastInlineDelegate
		constexpr auto DidNotSpawn = 0x78; // FMulticastInlineDelegate
		constexpr auto ClassToSpawn = 0xa0; // AActor*
	}

	namespace n_UKSApparelAsset {
		constexpr auto Priority = 0x250; // int32_t
		constexpr auto ApparelSlot = 0x254; // FGameplayTag
		constexpr auto SlotsToOverride = 0x260; // FGameplayTagContainer
		constexpr auto AsyncLoadPriority = 0x2a8; // int32_t
		constexpr auto LocalPlayerAsyncLoadPriority = 0x2ac; // int32_t
	}

	namespace n_ALobbyBeaconHost {
		constexpr auto LobbyStateClass = 0x250; // TSoftClassPtr<UObject>
		constexpr auto LobbyState = 0x278; // ALobbyBeaconState*
	}

	namespace n_UDatasmithImportOptions {
		constexpr auto SearchPackagePolicy = 0x28; // EDatasmithImportSearchPackagePolicy
		constexpr auto MaterialConflictPolicy = 0x29; // EDatasmithImportAssetConflictPolicy
		constexpr auto TextureConflictPolicy = 0x2a; // EDatasmithImportAssetConflictPolicy
		constexpr auto StaticMeshActorImportPolicy = 0x2b; // EDatasmithImportActorPolicy
		constexpr auto LightImportPolicy = 0x2c; // EDatasmithImportActorPolicy
		constexpr auto CameraImportPolicy = 0x2d; // EDatasmithImportActorPolicy
		constexpr auto OtherActorImportPolicy = 0x2e; // EDatasmithImportActorPolicy
		constexpr auto MaterialQuality = 0x2f; // EDatasmithImportMaterialQuality
		constexpr auto BaseOptions = 0x34; // FDatasmithImportBaseOptions
		constexpr auto ReimportOptions = 0x48; // FDatasmithReimportOptions
		constexpr auto Filename = 0x50; // FString
		constexpr auto FilePath = 0x60; // FString
	}

	namespace n_UKSActivityComponent_WeaponMastery_Milestone {
		constexpr auto MilestoneTier = 0x30; // int32_t
	}

	namespace n_ULightComponent {
		constexpr auto Temperature = 0x238; // float
		constexpr auto MaxDrawDistance = 0x23c; // float
		constexpr auto MaxDistanceFadeRange = 0x240; // float
		constexpr auto bUseTemperature = 0x244; // char : 1
		constexpr auto ShadowMapChannel = 0x248; // int32_t
		constexpr auto MinRoughness = 0x250; // float
		constexpr auto SpecularScale = 0x254; // float
		constexpr auto ShadowResolutionScale = 0x258; // float
		constexpr auto ShadowBias = 0x25c; // float
		constexpr auto ShadowSlopeBias = 0x260; // float
		constexpr auto ShadowSharpen = 0x264; // float
		constexpr auto ContactShadowLength = 0x268; // float
		constexpr auto ContactShadowLengthInWS = 0x26c; // char : 1
		constexpr auto InverseSquaredFalloff = 0x26c; // char : 1
		constexpr auto CastTranslucentShadows = 0x26c; // char : 1
		constexpr auto bCastShadowsFromCinematicObjectsOnly = 0x26c; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x26c; // char : 1
		constexpr auto bForceCachedShadowsForMovablePrimitives = 0x26c; // char : 1
		constexpr auto LightingChannels = 0x270; // FLightingChannels
		constexpr auto LightFunctionMaterial = 0x278; // UMaterialInterface*
		constexpr auto LightFunctionScale = 0x280; // FVector
		constexpr auto IESTexture = 0x290; // UTextureLightProfile*
		constexpr auto bUseIESBrightness = 0x298; // char : 1
		constexpr auto IESBrightnessScale = 0x29c; // float
		constexpr auto LightFunctionFadeDistance = 0x2a0; // float
		constexpr auto DisabledBrightness = 0x2a4; // float
		constexpr auto bEnableLightShaftBloom = 0x2a8; // char : 1
		constexpr auto BloomScale = 0x2ac; // float
		constexpr auto BloomThreshold = 0x2b0; // float
		constexpr auto BloomMaxBrightness = 0x2b4; // float
		constexpr auto BloomTint = 0x2b8; // FColor
		constexpr auto bUseRayTracedDistanceFieldShadows = 0x2bc; // bool
		constexpr auto RayStartOffsetDepthScale = 0x2c0; // float
	}

	namespace n_UKSMatchInvitationModal {
		constexpr auto InvitationExpireTimeout = 0x528; // FTimerHandle
	}

	namespace n_UKSTestWeaponCategory {
		constexpr auto CategoryDisplayNameSingular = 0x250; // FText
		constexpr auto CategoryTag = 0x268; // FGameplayTag
		constexpr auto SoftSymbolIcon = 0x270; // TSoftObjectPtr<UTexture2D>
		constexpr auto SoftMasteryIcon = 0x298; // TSoftObjectPtr<UTexture2D>
		constexpr auto SoftVerticalSplash = 0x2c0; // TSoftObjectPtr<UTexture2D>
		constexpr auto SoftHorizontalSplash = 0x2e8; // TSoftObjectPtr<UTexture2D>
		constexpr auto ShowsMasteryUI = 0x310; // bool
		constexpr auto ShowsWeaponUnlockUI = 0x311; // bool
		constexpr auto ShowsRelatedJobsUI = 0x312; // bool
	}

	namespace n_UKSSpringArmComponent {
		constexpr auto bEnableSmoothLengthReturn = 0x290; // bool
		constexpr auto SmoothLengthReturnSpeed = 0x294; // float
		constexpr auto SmoothingCurve = 0x298; // UCurveFloat*
		constexpr auto OffsetCurve = 0x2a0; // UCurveVector*
		constexpr auto bRelativeTargetOffset = 0x2a8; // bool
		constexpr auto CharacterOwner = 0x2b0; // AKSCharacter*
	}

	namespace n_AKSWorldSettings {
		constexpr auto bUseLowDrainBatteryMode = 0x3e0; // bool
		constexpr auto ParticleSystemPoolComponent = 0x3e8; // UParticleSystemPoolComponent*
		constexpr auto DecalPoolComponent = 0x3f0; // UDecalPoolComponent*
		constexpr auto GunshotDecalPoolComponent = 0x3f8; // UGunshotDecalPoolComponent*
		constexpr auto FootprintDecalPoolComponent = 0x400; // UFootprintDecalPoolComponent*
		constexpr auto SkeletalMeshPoolComponent = 0x408; // USkeletalMeshPoolComponent*
		constexpr auto StaticMeshPoolComponent = 0x410; // UStaticMeshPoolComponent*
		constexpr auto TracerParticlePoolComponent = 0x418; // UTracerParticlePoolComponent*
		constexpr auto TracerStaticMeshPoolComponent = 0x420; // UTracerStaticMeshPoolComponent*
		constexpr auto AkPoolComponent = 0x428; // UAkPoolComponent*
		constexpr auto EchoRequestCount = 0x430; // int32_t
		constexpr auto FriendlyAudioName = 0x448; // FString
		constexpr auto FriendlyAchievementName = 0x458; // FString
		constexpr auto MapTags = 0x468; // TArray<FGameplayTag>
		constexpr auto AudioPlayerToSpawn = 0x478; // TSoftClassPtr<UObject>
		constexpr auto AudioOcclusionLUT = 0x4a0; // UBakedOcclusionLUT*
		constexpr auto BoolPropertyMap = 0x4a8; // TMap<FName, bool>
		constexpr auto IntPropertyMap = 0x4f8; // TMap<FName, int32_t>
		constexpr auto FloatPropertyMap = 0x548; // TMap<FName, float>
	}

	namespace n_USubmixEffectReverbFastPreset {
		constexpr auto Settings = 0xa0; // FSubmixEffectReverbFastSettings
	}

	namespace n_UMaterialExpressionLandscapeLayerSample {
		constexpr auto ParameterName = 0x40; // FName
		constexpr auto PreviewWeight = 0x48; // float
		constexpr auto ExpressionGUID = 0x4c; // FGuid
	}

	namespace n_UAkAssetDataSwitchContainerData {
		constexpr auto GroupValue = 0x28; // TSoftObjectPtr<UAkGroupValue>
		constexpr auto MediaList = 0x50; // TArray<TSoftObjectPtr<UAkMediaAsset>>
		constexpr auto Children = 0x60; // TArray<UAkAssetDataSwitchContainerData*>
	}

	namespace n_UKSProjectileClusterComponent {
		constexpr auto ProjectileClusterSpreadType = 0xbc; // EProjectileClusterSpreadType
		constexpr auto ClusterSegmentSpawnOffset = 0xc0; // FVector
		constexpr auto bLinkSpreadGrenades = 0xcc; // bool
		constexpr auto bIgnoreZAxisForClusterDirection = 0xcd; // bool
		constexpr auto bAlwaysUseInitialClusterDirection = 0xce; // bool
		constexpr auto RandomMinPitch = 0xd0; // float
		constexpr auto RandomMaxPitch = 0xd4; // float
		constexpr auto RandomMinYaw = 0xd8; // float
		constexpr auto RandomMaxYaw = 0xdc; // float
		constexpr auto ClusterSegmentDefinitions = 0xe0; // TArray<FKSProjectileClusterSegment>
		constexpr auto ClusterSegments = 0xf0; // TArray<AKSProjectile*>
		constexpr auto OnOwnedSegmentKilled = 0x100; // FMulticastInlineDelegate
	}

	namespace n_UGeometryCollectionDebugDrawComponent {
		constexpr auto GeometryCollectionDebugDrawActor = 0xb0; // AGeometryCollectionDebugDrawActor*
		constexpr auto GeometryCollectionRenderLevelSetActor = 0xb8; // AGeometryCollectionRenderLevelSetActor*
	}

	namespace n_USoundGroups {
		constexpr auto SoundGroupProfiles = 0x28; // TArray<FSoundGroup>
	}

	namespace n_UParticleModuleEventReceiverKillParticles {
		constexpr auto bStopSpawning = 0x40; // char : 1
	}

	namespace n_UKSPlayerMod_RevealTarget {
		constexpr auto RevealParameters = 0x330; // FKSRevealInfo
	}

	namespace n_UDatasmithLandscapeTemplate {
		constexpr auto LandscapeMaterial = 0x30; // UMaterialInterface*
		constexpr auto StaticLightingLOD = 0x38; // int32_t
	}

	namespace n_UPUMG_StoreItemPrice {
		constexpr auto PreSalePrice = 0x28; // int32_t
		constexpr auto Price = 0x2c; // int32_t
		constexpr auto CurrencyType = 0x30; // TSoftObjectPtr<UPlatformInventoryItem>
		constexpr auto pItemHelper = 0x58; // TWeakObjectPtr<UPUMG_StoreItemHelper>
	}

	namespace n_UEditableGameplayTagQueryExpression_NoTagsMatch {
		constexpr auto Tags = 0x28; // FGameplayTagContainer
	}

	namespace n_USoundNode {
		constexpr auto ChildNodes = 0x28; // TArray<USoundNode*>
	}

	namespace n_UKSQuip {
		constexpr auto OverriddenAudioEventName = 0x2b8; // FName
		constexpr auto QuipAudioEvent = 0x2c0; // TSoftObjectPtr<UAkAudioEvent>
	}

	namespace n_UUniformScalar {
		constexpr auto Magnitude = 0xb0; // float
	}

	namespace n_UWBP_WrapCustomization_C {
		constexpr auto UberGraphFrame = 0x580; // FPointerToUberGraphFrame
		constexpr auto ActionBtnText = 0x588; // UTextBlock*
		constexpr auto CosmeticSwitcher = 0x590; // UWidgetSwitcher*
		constexpr auto EquipButtonScaler = 0x598; // USizeBox*
		constexpr auto EquipWrapButton = 0x5a0; // UWBP_ButtonStacked_C*
		constexpr auto GradientShade = 0x5a8; // UImage*
		constexpr auto RedUnderscore = 0x5b0; // UImage*
		constexpr auto SubtitleLabel = 0x5b8; // UTextBlock*
		constexpr auto WBP_ItemInfoContainer_Description = 0x5c0; // UWBP_ItemInfoContainer_Description_C*
		constexpr auto WBP_ReactiveWrapStepPreview = 0x5c8; // UWBP_ReactiveWrapStepPreview_C*
		constexpr auto WBP_WrapSelectionEntry_EXAMPLE = 0x5d0; // UWBP_WrapSelectionEntry_C*
		constexpr auto WBP_WrapSelectionEntry_EXAMPLE_2 = 0x5d8; // UWBP_WrapSelectionEntry_C*
		constexpr auto WBP_WrapSelectionEntry_EXAMPLE_3 = 0x5e0; // UWBP_WrapSelectionEntry_C*
		constexpr auto WBP_WrapSelectionEntry_EXAMPLE_4 = 0x5e8; // UWBP_WrapSelectionEntry_C*
		constexpr auto WBP_WrapSelectionEntry_EXAMPLE_5 = 0x5f0; // UWBP_WrapSelectionEntry_C*
		constexpr auto WBP_WrapSelectionEntry_EXAMPLE_6 = 0x5f8; // UWBP_WrapSelectionEntry_C*
		constexpr auto WBP_WrapSelectionEntry_EXAMPLE_7 = 0x600; // UWBP_WrapSelectionEntry_C*
		constexpr auto WBP_WrapSelectionEntry_EXAMPLE_8 = 0x608; // UWBP_WrapSelectionEntry_C*
		constexpr auto WBP_WrapSelectionEntry_EXAMPLE_9 = 0x610; // UWBP_WrapSelectionEntry_C*
		constexpr auto WBP_WrapSelectionEntry_EXAMPLE_10 = 0x618; // UWBP_WrapSelectionEntry_C*
		constexpr auto WBP_WrapSelectionEntry_EXAMPLE_11 = 0x620; // UWBP_WrapSelectionEntry_C*
		constexpr auto WBP_WrapSelectionEntry_EXAMPLE_12 = 0x628; // UWBP_WrapSelectionEntry_C*
		constexpr auto WBP_WrapSelectionEntry_EXAMPLE_13 = 0x630; // UWBP_WrapSelectionEntry_C*
		constexpr auto WBP_WrapSelectionEntry_EXAMPLE_14 = 0x638; // UWBP_WrapSelectionEntry_C*
		constexpr auto WBP_WrapSelectionEntry_EXAMPLE_15 = 0x640; // UWBP_WrapSelectionEntry_C*
		constexpr auto WBP_WrapSelectionEntry_EXAMPLE_16 = 0x648; // UWBP_WrapSelectionEntry_C*
		constexpr auto WBP_WrapSelectionEntry_EXAMPLE_17 = 0x650; // UWBP_WrapSelectionEntry_C*
		constexpr auto WBP_WrapSelectionEntry_EXAMPLE_18 = 0x658; // UWBP_WrapSelectionEntry_C*
		constexpr auto WBP_WrapSelectionEntry_EXAMPLE_19 = 0x660; // UWBP_WrapSelectionEntry_C*
		constexpr auto WBP_WrapSelectionEntry_EXAMPLE_20 = 0x668; // UWBP_WrapSelectionEntry_C*
		constexpr auto WBP_WrapSelectionEntry_EXAMPLE_21 = 0x670; // UWBP_WrapSelectionEntry_C*
		constexpr auto WeaponCategoryText = 0x678; // UTextBlock*
		constexpr auto WeaponNameText = 0x680; // UTextBlock*
		constexpr auto WrapItemContainer = 0x688; // UUniformGridPanel*
		constexpr auto WrapScrollbox = 0x690; // UKSScrollBox*
		constexpr auto WeaponViewActorName = 0x698; // FName
		constexpr auto ItemRowWidth = 0x6a0; // int32_t
		constexpr auto DefaultFocusWidget = 0x6a8; // UKSWrapSelectionEntry*
	}

	namespace n_UKSModInst_ApplyDebuffOnDownOther {
		constexpr auto DebuffsToApply = 0x1c0; // TArray<UKSPlayerMod*>
		constexpr auto bGiveDebuffsUniquely = 0x1d0; // bool
		constexpr auto DebuffDuration = 0x1d4; // float
		constexpr auto bRemoveDebuffOnRevive = 0x1d8; // bool
	}

	namespace n_UInterpToMovementComponent {
		constexpr auto Duration = 0xf0; // float
		constexpr auto bPauseOnImpact = 0xf4; // char : 1
		constexpr auto bSweep = 0xf8; // bool
		constexpr auto TeleportType = 0xf9; // ETeleportType
		constexpr auto BehaviourType = 0xfa; // EInterpToBehaviourType
		constexpr auto bCheckIfStillInWorld = 0xfb; // bool
		constexpr auto bForceSubStepping = 0xfc; // char : 1
		constexpr auto OnInterpToReverse = 0x100; // FMulticastInlineDelegate
		constexpr auto OnInterpToStop = 0x110; // FMulticastInlineDelegate
		constexpr auto OnWaitBeginDelegate = 0x120; // FMulticastInlineDelegate
		constexpr auto OnWaitEndDelegate = 0x130; // FMulticastInlineDelegate
		constexpr auto OnResetDelegate = 0x140; // FMulticastInlineDelegate
		constexpr auto MaxSimulationTimeStep = 0x150; // float
		constexpr auto MaxSimulationIterations = 0x154; // int32_t
		constexpr auto ControlPoints = 0x158; // TArray<FInterpControlPoint>
	}

	namespace n_UKSItem {
		constexpr auto ItemDropClass = 0x1b8; // TSoftClassPtr<UObject>
		constexpr auto ItemPrice = 0x1e0; // int32_t
		constexpr auto ItemType = 0x1e4; // FGameplayTag
		constexpr auto bUsePreviewIconInfo = 0x1ec; // bool
		constexpr auto PreviewIconInfo = 0x1f0; // UImageIconInfo*
		constexpr auto DefaultItemIcon = 0x1f8; // UTexture2D*
		constexpr auto SpecialItemWidgetClass = 0x200; // TSoftClassPtr<UObject>
		constexpr auto ColorCode = 0x228; // FColor
		constexpr auto Rules = 0x22c; // FPrimaryAssetRules
		constexpr auto ItemTags = 0x238; // TArray<FGameplayTag>
		constexpr auto AlsoInBundleLootId = 0x248; // int32_t
	}

	namespace n_UGizmoScaledTransformSource {
		constexpr auto ChildTransformSource = 0x48; // TScriptInterface<IGizmoTransformSource>
	}

	namespace n_UShapeComponent {
		constexpr auto ShapeBodySetup = 0x430; // UBodySetup*
		constexpr auto AreaClass = 0x438; // UNavAreaBase*
		constexpr auto ShapeColor = 0x440; // FColor
		constexpr auto bDrawOnlyIfSelected = 0x444; // char : 1
		constexpr auto bShouldCollideWhenPlacing = 0x444; // char : 1
		constexpr auto bDynamicObstacle = 0x444; // char : 1
	}

	namespace n_UPUMG_AcquisitionManager {
		constexpr auto OnAcquisitionSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnAcquisitionFailed = 0x38; // FMulticastInlineDelegate
		constexpr auto StoreItemHelper = 0x48; // UPUMG_StoreItemHelper*
	}

	namespace n_UKSPlayerMod_StartingEquipment {
		constexpr auto EquipmentAsset = 0x330; // TSoftObjectPtr<UKSItem>
	}

	namespace n_UMaterialExpressionMin {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_UGuidedMenuCalloutsViewRedirector {
		constexpr auto GuidedCalloutsTable = 0x28; // UDataTable*
	}

	namespace n_USkeletalMeshPoolComponent {
		constexpr auto UnusedComponentsArray = 0xd8; // TArray<USkeletalMeshComponent*>
		constexpr auto UsedComponentsSet = 0xe8; // TSet<USkeletalMeshComponent*>
		constexpr auto PeekedSkeletalMeshComponent = 0x138; // USkeletalMeshComponent*
		constexpr auto PooledSkeletalMeshComponentClass = 0x140; // USkeletalMeshComponent*
	}

	namespace n_UMovieSceneIntegerSection {
		constexpr auto IntegerCurve = 0xe0; // FMovieSceneIntegerChannel
	}

	namespace n_UKSActivityRewardCondition_Operator_And {
		constexpr auto SubConditions = 0x30; // TArray<UKSActivityRewardCondition*>
	}

	namespace n_UGizmoArrowComponent {
		constexpr auto Direction = 0x450; // FVector
		constexpr auto Gap = 0x45c; // float
		constexpr auto Length = 0x460; // float
		constexpr auto Thickness = 0x464; // float
	}

	namespace n_ULevelActorContainer {
		constexpr auto Actors = 0x28; // TArray<AActor*>
	}

	namespace n_UBTDecorator_CheckGameplayTagsOnActor {
		constexpr auto ActorToCheck = 0x68; // FBlackboardKeySelector
		constexpr auto TagsToMatch = 0x90; // EGameplayContainerMatchType
		constexpr auto GameplayTags = 0x98; // FGameplayTagContainer
		constexpr auto CachedDescription = 0xb8; // FString
	}

	namespace n_UDefaultEnvironmentListener_C {
		constexpr auto UberGraphFrame = 0xc8; // FPointerToUberGraphFrame
		constexpr auto LevelStateGroup = 0xd0; // FName
		constexpr auto LevelToStateGroupMap = 0xd8; // TMap<FString, FName>
	}

	namespace n_UPUMG_Loadout {
		constexpr auto OnRenamed = 0x28; // FMulticastInlineDelegate
		constexpr auto OnNumberChanged = 0x38; // FMulticastInlineDelegate
		constexpr auto OnTypeChanged = 0x48; // FMulticastInlineDelegate
		constexpr auto OnServerUpdate = 0x58; // FMulticastInlineDelegate
		constexpr auto OnLocalUpdate = 0x68; // FMulticastInlineDelegate
	}

	namespace n_UWBP_StoreButtonSmall_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto OnHover = 0x528; // UWidgetAnimation*
		constexpr auto SlideLeftToPrimary = 0x530; // UWidgetAnimation*
		constexpr auto SlideLeftToSecondary = 0x538; // UWidgetAnimation*
		constexpr auto PrimaryStoreItem = 0x540; // UWBP_StoreItemInterior_C*
		constexpr auto SecondaryStoreItem = 0x548; // UWBP_StoreItemInterior_C*
		constexpr auto StoreItemRotator = 0x550; // UWBP_StoreItemRotator_C*
		constexpr auto WBP_StorePanelButton = 0x558; // UWBP_StorePanelButton_C*
		constexpr auto MyStoreSection = 0x560; // UKSStoreSectionItem*
		constexpr auto CurrentStoreIndex = 0x568; // int32_t
		constexpr auto IsRotating = 0x56c; // bool
		constexpr auto TimeVisible = 0x570; // float
		constexpr auto MaxTimeVisible = 0x574; // float
		constexpr auto ROTATION_TIMER_INTERVAL = 0x578; // float
	}

	namespace n_AServerStatReplicator {
		constexpr auto bUpdateStatNet = 0x220; // bool
		constexpr auto bOverwriteClientStats = 0x221; // bool
		constexpr auto Channels = 0x224; // uint32_t
		constexpr auto InRate = 0x228; // uint32_t
		constexpr auto OutRate = 0x22c; // uint32_t
		constexpr auto MaxPacketOverhead = 0x234; // uint32_t
		constexpr auto InRateClientMax = 0x238; // uint32_t
		constexpr auto InRateClientMin = 0x23c; // uint32_t
		constexpr auto InRateClientAvg = 0x240; // uint32_t
		constexpr auto InPacketsClientMax = 0x244; // uint32_t
		constexpr auto InPacketsClientMin = 0x248; // uint32_t
		constexpr auto InPacketsClientAvg = 0x24c; // uint32_t
		constexpr auto OutRateClientMax = 0x250; // uint32_t
		constexpr auto OutRateClientMin = 0x254; // uint32_t
		constexpr auto OutRateClientAvg = 0x258; // uint32_t
		constexpr auto OutPacketsClientMax = 0x25c; // uint32_t
		constexpr auto OutPacketsClientMin = 0x260; // uint32_t
		constexpr auto OutPacketsClientAvg = 0x264; // uint32_t
		constexpr auto NetNumClients = 0x268; // uint32_t
		constexpr auto InPackets = 0x26c; // uint32_t
		constexpr auto OutPackets = 0x270; // uint32_t
		constexpr auto InBunches = 0x274; // uint32_t
		constexpr auto OutBunches = 0x278; // uint32_t
		constexpr auto OutLoss = 0x27c; // uint32_t
		constexpr auto InLoss = 0x280; // uint32_t
		constexpr auto VoiceBytesSent = 0x284; // uint32_t
		constexpr auto VoiceBytesRecv = 0x288; // uint32_t
		constexpr auto VoicePacketsSent = 0x28c; // uint32_t
		constexpr auto VoicePacketsRecv = 0x290; // uint32_t
		constexpr auto PercentInVoice = 0x294; // uint32_t
		constexpr auto PercentOutVoice = 0x298; // uint32_t
		constexpr auto NumActorChannels = 0x29c; // uint32_t
		constexpr auto NumConsideredActors = 0x2a0; // uint32_t
		constexpr auto PrioritizedActors = 0x2a4; // uint32_t
		constexpr auto NumRelevantActors = 0x2a8; // uint32_t
		constexpr auto NumRelevantDeletedActors = 0x2ac; // uint32_t
		constexpr auto NumReplicatedActorAttempts = 0x2b0; // uint32_t
		constexpr auto NumReplicatedActors = 0x2b4; // uint32_t
		constexpr auto NumActors = 0x2b8; // uint32_t
		constexpr auto NumNetActors = 0x2bc; // uint32_t
		constexpr auto NumDormantActors = 0x2c0; // uint32_t
		constexpr auto NumInitiallyDormantActors = 0x2c4; // uint32_t
		constexpr auto NumNetGUIDsAckd = 0x2c8; // uint32_t
		constexpr auto NumNetGUIDsPending = 0x2cc; // uint32_t
		constexpr auto NumNetGUIDsUnAckd = 0x2d0; // uint32_t
		constexpr auto ObjPathBytes = 0x2d4; // uint32_t
		constexpr auto NetGUIDOutRate = 0x2d8; // uint32_t
		constexpr auto NetGUIDInRate = 0x2dc; // uint32_t
		constexpr auto NetSaturated = 0x2e0; // uint32_t
	}

	namespace n_ALobbyBeaconPlayerState {
		constexpr auto DisplayName = 0x220; // FText
		constexpr auto UniqueId = 0x238; // FUniqueNetIdRepl
		constexpr auto PartyOwnerUniqueId = 0x260; // FUniqueNetIdRepl
		constexpr auto bInLobby = 0x288; // bool
		constexpr auto ClientActor = 0x290; // AOnlineBeaconClient*
	}

	namespace n_ACameraActor {
		constexpr auto AutoActivateForPlayer = 0x220; // EAutoReceiveInput
		constexpr auto CameraComponent = 0x228; // UCameraComponent*
		constexpr auto SceneComponent = 0x230; // USceneComponent*
		constexpr auto bConstrainAspectRatio = 0x240; // char : 1
		constexpr auto AspectRatio = 0x244; // float
		constexpr auto FOVAngle = 0x248; // float
		constexpr auto PostProcessBlendWeight = 0x24c; // float
		constexpr auto PostProcessSettings = 0x250; // FPostProcessSettings
	}

	namespace n_UDynamicEntryBoxBase {
		constexpr auto EntryBoxType = 0x110; // EDynamicBoxType
		constexpr auto EntrySpacing = 0x114; // FVector2D
		constexpr auto SpacingPattern = 0x120; // TArray<FVector2D>
		constexpr auto EntrySizeRule = 0x130; // FSlateChildSize
		constexpr auto EntryHorizontalAlignment = 0x138; // EHorizontalAlignment
		constexpr auto EntryVerticalAlignment = 0x139; // EVerticalAlignment
		constexpr auto MaxElementSize = 0x13c; // int32_t
		constexpr auto EntryWidgetPool = 0x150; // FUserWidgetPool
	}

	namespace n_UBTDecorator_BlueprintBase {
		constexpr auto AIOwner = 0x68; // AAIController*
		constexpr auto ActorOwner = 0x70; // AActor*
		constexpr auto ObservedKeyNames = 0x78; // TArray<FName>
		constexpr auto bShowPropertyDetails = 0x98; // char : 1
		constexpr auto bCheckConditionOnlyBlackBoardChanges = 0x98; // char : 1
		constexpr auto bIsObservingBB = 0x98; // char : 1
	}

	namespace n_ULiveLinkComponent {
		constexpr auto OnLiveLinkUpdated = 0xb0; // FMulticastInlineDelegate
	}

	namespace n_UWBP_MatchSummary_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto BestStatsContainer = 0x528; // UHorizontalBox*
		constexpr auto StatContainer = 0x530; // UVerticalBox*
		constexpr auto StatDamage = 0x538; // UWBP_MatchSummary_StatEntry_C*
		constexpr auto StatDeaths = 0x540; // UWBP_MatchSummary_StatEntry_C*
		constexpr auto StatDowns = 0x548; // UWBP_MatchSummary_StatEntry_C*
		constexpr auto StatEliminations = 0x550; // UWBP_MatchSummary_StatEntry_C*
		constexpr auto StatObjectives = 0x558; // UWBP_MatchSummary_StatEntry_C*
		constexpr auto StatRevives = 0x560; // UWBP_MatchSummary_StatEntry_C*
		constexpr auto EMODataFactory = 0x568; // UKSEMODataFactory*
	}

	namespace n_UFont {
		constexpr auto FontCacheType = 0x30; // EFontCacheType
		constexpr auto Characters = 0x38; // TArray<FFontCharacter>
		constexpr auto Textures = 0x48; // TArray<UTexture2D*>
		constexpr auto IsRemapped = 0x58; // int32_t
		constexpr auto EmScale = 0x5c; // float
		constexpr auto Ascent = 0x60; // float
		constexpr auto Descent = 0x64; // float
		constexpr auto Leading = 0x68; // float
		constexpr auto Kerning = 0x6c; // int32_t
		constexpr auto ImportOptions = 0x70; // FFontImportOptionsData
		constexpr auto NumCharacters = 0x120; // int32_t
		constexpr auto MaxCharHeight = 0x128; // TArray<int32_t>
		constexpr auto ScalingFactor = 0x138; // float
		constexpr auto LegacyFontSize = 0x13c; // int32_t
		constexpr auto LegacyFontName = 0x140; // FName
		constexpr auto CompositeFont = 0x148; // FCompositeFont
	}

	namespace n_UWBP_SimulmediaRewardsScreen_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto AnimOnShown = 0x528; // UWidgetAnimation*
		constexpr auto BackCallout = 0x530; // UWBP_KeyCallout_C*
		constexpr auto BackPrompt = 0x538; // UHorizontalBox*
		constexpr auto CloseButtonGamepad = 0x540; // UWBP_StandardButtonLarge_C*
		constexpr auto Content = 0x548; // UVerticalBox*
		constexpr auto GamepadCallouts = 0x550; // UBorder*
		constexpr auto Gradient = 0x558; // UImage*
		constexpr auto Image = 0x560; // UImage*
		constexpr auto Image_142 = 0x568; // UImage*
		constexpr auto Image_386 = 0x570; // UImage*
		constexpr auto NoAdsAvailableMessage = 0x578; // UBorder*
		constexpr auto PendingOverlay = 0x580; // UBorder*
		constexpr auto PendingOverlayText = 0x588; // UTextBlock*
		constexpr auto ProgressReward_Booster = 0x590; // UOverlay*
		constexpr auto ProgressRewardBar = 0x598; // UImage*
		constexpr auto ProgressRewardIcon = 0x5a0; // UKSAsyncImage*
		constexpr auto ProgressRewardText = 0x5a8; // UTextBlock*
		constexpr auto RewardContainer = 0x5b0; // UWrapBox*
		constexpr auto RewardIcon = 0x5b8; // UKSAsyncImage*
		constexpr auto RewardSwitcher = 0x5c0; // UWidgetSwitcher*
		constexpr auto ScanLines = 0x5c8; // UImage*
		constexpr auto SubmitButton = 0x5d0; // UWBP_StandardButtonLarge_C*
		constexpr auto TitleDisplay = 0x5d8; // UOverlay*
		constexpr auto WatchReward_Reputation = 0x5e0; // UOverlay*
		constexpr auto WBP_ModalPopupContainer = 0x5e8; // UWBP_ModalPopupContainer_C*
		constexpr auto WBP_SimulmediaRewardItem = 0x5f0; // UWBP_SimulmediaRewardItem_C*
		constexpr auto WBP_SimulmediaRewardItem_2 = 0x5f8; // UWBP_SimulmediaRewardItem_C*
		constexpr auto WBP_SimulmediaRewardItem_3 = 0x600; // UWBP_SimulmediaRewardItem_C*
		constexpr auto WBP_SimulmediaRewardItem_4 = 0x608; // UWBP_SimulmediaRewardItem_C*
		constexpr auto WidgetSwitcher_1 = 0x610; // UWidgetSwitcher*
	}

	namespace n_ANavModifierVolume {
		constexpr auto AreaClass = 0x260; // UNavArea*
	}

	namespace n_UGizmoWorldAxisSource {
		constexpr auto Origin = 0x30; // FVector
		constexpr auto AxisIndex = 0x3c; // int32_t
	}

	namespace n_UNiagaraEffectType {
		constexpr auto UpdateFrequency = 0x28; // ENiagaraScalabilityUpdateFrequency
		constexpr auto CullReaction = 0x2c; // ENiagaraCullReaction
		constexpr auto DetailLevelScalabilitySettings = 0x30; // TArray<FNiagaraSystemScalabilitySettings>
		constexpr auto SystemScalabilitySettings = 0x40; // FNiagaraSystemScalabilitySettingsArray
		constexpr auto EmitterScalabilitySettings = 0x50; // FNiagaraEmitterScalabilitySettingsArray
	}

	namespace n_AKSModZone {
		constexpr auto EnterModZoneInfos = 0x240; // TArray<FKSModZoneModInfo>
		constexpr auto ExitModZoneInfos = 0x250; // TArray<FKSModZoneModInfo>
	}

	namespace n_UPerkCategory {
		constexpr auto PerkCategoryName = 0x98; // FText
		constexpr auto PerkCategoryDescription = 0xb0; // FText
		constexpr auto AssociatedPerkTree = 0xc8; // TSoftClassPtr<UObject>
		constexpr auto ThemeColorLight = 0xf0; // FLinearColor
		constexpr auto ThemeColorDark = 0x100; // FLinearColor
		constexpr auto PerkCategoryIcon = 0x120; // TSoftObjectPtr<UTexture2D>
	}

	namespace n_UAkDurationCallbackInfo {
		constexpr auto Duration = 0x38; // float
		constexpr auto EstimatedDuration = 0x3c; // float
		constexpr auto AudioNodeID = 0x40; // int32_t
		constexpr auto MediaID = 0x44; // int32_t
		constexpr auto bStreaming = 0x48; // bool
	}

	namespace n_UKSActivityRewardCondition_TimeSinceReload {
		constexpr auto MinSecondsSinceLastReload = 0x30; // float
		constexpr auto MaxSecondsSinceLastReload = 0x34; // float
		constexpr auto SucceedIfNeverReloaded = 0x38; // bool
	}

	namespace n_USourceEffectWaveShaperPreset {
		constexpr auto Settings = 0x70; // FSourceEffectWaveShaperSettings
	}

	namespace n_UBrushBuilder {
		constexpr auto BitmapFilename = 0x28; // FString
		constexpr auto Tooltip = 0x38; // FString
		constexpr auto NotifyBadParams = 0x48; // char : 1
		constexpr auto Vertices = 0x50; // TArray<FVector>
		constexpr auto Polys = 0x60; // TArray<FBuilderPoly>
		constexpr auto Layer = 0x70; // FName
		constexpr auto MergeCoplanars = 0x78; // char : 1
	}

	namespace n_AAkSpotReflector {
		constexpr auto EarlyReflectionAuxBus = 0x220; // UAkAuxBus*
		constexpr auto EarlyReflectionAuxBusName = 0x228; // FString
		constexpr auto AcousticTexture = 0x238; // UAkAcousticTexture*
		constexpr auto DistanceScalingFactor = 0x240; // float
		constexpr auto Level = 0x244; // float
	}

	namespace n_UWBP_WeaponHub_C {
		constexpr auto UberGraphFrame = 0x550; // FPointerToUberGraphFrame
		constexpr auto Anim_OnShow = 0x558; // UWidgetAnimation*
		constexpr auto BG = 0x560; // UImage*
		constexpr auto ButtonContainer = 0x568; // UHorizontalBox*
		constexpr auto LowerButtonContainer = 0x570; // UHorizontalBox*
		constexpr auto WBP_WeaponCategoryButton = 0x578; // UWBP_WeaponCategoryButton_C*
		constexpr auto WBP_WeaponCategoryButton_2 = 0x580; // UWBP_WeaponCategoryButton_C*
		constexpr auto WBP_WeaponCategoryButton_3 = 0x588; // UWBP_WeaponCategoryButton_C*
		constexpr auto WBP_WeaponCategoryButton_4 = 0x590; // UWBP_WeaponCategoryButton_C*
		constexpr auto WBP_WeaponCategoryButton_5 = 0x598; // UWBP_WeaponCategoryButton_C*
		constexpr auto WBP_WeaponCategoryButton_6 = 0x5a0; // UWBP_WeaponCategoryButton_C*
		constexpr auto WBP_WeaponCategoryButton_Horizontal = 0x5a8; // UWBP_WeaponCategoryButton_Horizontal_C*
		constexpr auto WBP_WeaponCategoryButton_Horizontal_2 = 0x5b0; // UWBP_WeaponCategoryButton_Horizontal_C*
		constexpr auto WBP_WeaponCategoryButton_Horizontal_3 = 0x5b8; // UWBP_WeaponCategoryButton_Horizontal_C*
		constexpr auto GamePad_FaceButtonTOP_SFX = 0x5c0; // UAkAudioEvent*
		constexpr auto ArmoryTabSeen = 0x5c8; // FName
	}

	namespace n_UMovieSceneLiveLinkTrack {
		constexpr auto TrackRole = 0x88; // ULiveLinkRole*
	}

	namespace n_UPUMG_PlayerDataFactory {
		constexpr auto OnPlayerDataChanged = 0x38; // FMulticastInlineDelegate
		constexpr auto OnPlayerRankChanged = 0x48; // FMulticastInlineDelegate
		constexpr auto OnCrossplayChanged = 0x58; // FMulticastInlineDelegate
		constexpr auto PlayerId = 0x68; // int64_t
		constexpr auto PlayerName = 0x70; // FString
		constexpr auto Level = 0x80; // int32_t
		constexpr auto AvatarId = 0x84; // int32_t
		constexpr auto LastMMR = 0x88; // int32_t
		constexpr auto CurrentMMR = 0x8c; // int32_t
		constexpr auto BestMMR = 0x90; // int32_t
		constexpr auto CurrentWinRank = 0x94; // int32_t
		constexpr auto PreviousWinRank = 0x98; // int32_t
		constexpr auto CurrentWinPeak = 0x9c; // int32_t
		constexpr auto PreviousWinPeak = 0xa0; // int32_t
		constexpr auto CurrentWinStreak = 0xa4; // int32_t
		constexpr auto PreviousWinStreak = 0xa8; // int32_t
	}

	namespace n_UKSBTD_NearbyEnemyCount {
		constexpr auto SensesToUse = 0x68; // TArray<UAISense*>
		constexpr auto ArithmeticOperation = 0x78; // EArithmeticKeyOperation
		constexpr auto EnemyCount = 0x7c; // int32_t
		constexpr auto DistanceThreshold = 0x80; // float
		constexpr auto bCheckLOS = 0x84; // bool
	}

	namespace n_UParticleModuleAccelerationConstant {
		constexpr auto Acceleration = 0x38; // FVector
	}

	namespace n_UKSCircleDeadZoneFilter {
		constexpr auto DeadZoneRadius = 0x38; // float
		constexpr auto CardinalDeadZoneHalfWidth = 0x3c; // float
	}

	namespace n_UInteractiveTool {
		constexpr auto InputBehaviors = 0x48; // UInputBehaviorSet*
		constexpr auto ToolPropertyObjects = 0x50; // TArray<UObject*>
	}

	namespace n_UANotify_PlayParticleEffectMirroring_C {
		constexpr auto Particle System = 0x38; // UParticleSystem*
		constexpr auto Location Offset = 0x40; // FVector
		constexpr auto Rotation Offset = 0x4c; // FRotator
		constexpr auto Scale = 0x58; // FVector
		constexpr auto Socket Attach = 0x64; // FName
		constexpr auto Socket Attach Mirrored = 0x6c; // FName
	}

	namespace n_UGizmoAxisIntervalParameterSource {
		constexpr auto FloatParameterSource = 0x48; // TScriptInterface<IGizmoFloatParameterSource>
		constexpr auto MinParameter = 0x58; // float
		constexpr auto MaxParameter = 0x5c; // float
	}

	namespace n_UMovieSceneBindingOverrides {
		constexpr auto BindingData = 0x28; // TArray<FMovieSceneBindingOverrideData>
	}

	namespace n_UWindDirectionalSourceComponent {
		constexpr auto Strength = 0x208; // float
		constexpr auto Speed = 0x20c; // float
		constexpr auto MinGustAmount = 0x210; // float
		constexpr auto MaxGustAmount = 0x214; // float
		constexpr auto Radius = 0x218; // float
		constexpr auto bPointWind = 0x21c; // char : 1
	}

	namespace n_UDeviceProfile {
		constexpr auto DeviceType = 0x38; // FString
		constexpr auto BaseProfileName = 0x48; // FString
		constexpr auto Parent = 0x58; // UObject*
		constexpr auto CVars = 0x78; // TArray<FString>
	}

	namespace n_UKSBTTargetSelector {
		constexpr auto SensesToUse = 0x30; // TArray<UAISense*>
		constexpr auto PerceptionFilter = 0x40; // FKSPerceptionFilter
		constexpr auto SelectCombatTargetOfResult = 0x230; // bool
		constexpr auto SelectClosestTarget = 0x231; // bool
		constexpr auto SelectFurthestTarget = 0x232; // bool
		constexpr auto SelectRandomTarget = 0x233; // bool
	}

	namespace n_UWBP_WeaponMasteryTrack_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto MasteryLevel = 0x528; // UTextBlock*
		constexpr auto WBP_MasteryPointsCount = 0x530; // UWBP_MasteryPointsCount_C*
		constexpr auto WeaponMasterySection = 0x538; // UWBP_WeaponMasteryTrackSection_C*
		constexpr auto XPWrapper = 0x540; // UHorizontalBox*
		constexpr auto OnMasteryLevelSelectedEvent = 0x548; // FMulticastInlineDelegate
		constexpr auto OnPrestiegeSelected = 0x558; // FMulticastInlineDelegate
	}

	namespace n_UAsyncActionLoadPrimaryAssetList {
		constexpr auto Completed = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UWBP_SettingsCarousel_Light_Indicator_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto LightUp = 0x240; // UWidgetAnimation*
		constexpr auto MarkerImage = 0x248; // UImage*
		constexpr auto bIsLitUp = 0x250; // bool
	}

	namespace n_UFXSystemAsset {
		constexpr auto MaxPoolSize = 0x28; // uint32_t
	}

	namespace n_UKSWeaponAsset_Shotgun {
		constexpr auto PelletsPerShot = 0x908; // int32_t
		constexpr auto AimDownSightsAccuracy = 0x90c; // float
		constexpr auto bUseSpreadPattern = 0x910; // bool
		constexpr auto SpreadPattern = 0x918; // TArray<FVector2D>
		constexpr auto HitPercentageForHeadshot = 0x928; // float
		constexpr auto NonlinearPelletDamageCurve = 0x930; // UCurveFloat*
	}

	namespace n_UKSNudgeComponent {
		constexpr auto NudgeClassFilters = 0xb0; // TArray<AActor*>
		constexpr auto NudgeSpeed = 0xc0; // float
		constexpr auto MaxNudgeDistance = 0xc4; // float
		constexpr auto CachedNudgingActors = 0xc8; // TArray<TWeakObjectPtr<AActor>>
	}

	namespace n_UGizmoLocalVec2ParameterSource {
		constexpr auto Value = 0x48; // FVector2D
		constexpr auto LastChange = 0x50; // FGizmoVec2ParameterChange
	}

	namespace n_AKSEncounterManager {
		constexpr auto BotEncounters = 0x220; // TArray<UKSBotEncounter*>
		constexpr auto OnBotDeath = 0x230; // FMulticastInlineDelegate
		constexpr auto OnWaveFinished = 0x240; // FMulticastInlineDelegate
		constexpr auto OnBotSpawned = 0x250; // FMulticastInlineDelegate
		constexpr auto bPermaRevealFill = 0x260; // bool
		constexpr auto bPermaRevealMark = 0x261; // bool
		constexpr auto bPreferHiddenPlayerStarts = 0x262; // bool
		constexpr auto fAutoSpawnScoreRate = 0x2f8; // float
		constexpr auto fAutoSpawnScore = 0x304; // float
	}

	namespace n_UWBP_PanelButton_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto OnClick = 0x528; // UWidgetAnimation*
		constexpr auto Highlight = 0x530; // UWidgetAnimation*
		constexpr auto LoadoutButton = 0x538; // UButton*
		constexpr auto PanelBG = 0x540; // UImage*
		constexpr auto PanelBorder = 0x548; // UImage*
		constexpr auto PanelGlow = 0x550; // UImage*
		constexpr auto PanelHighlight = 0x558; // UImage*
		constexpr auto OnClicked = 0x560; // FMulticastInlineDelegate
		constexpr auto OnHovered = 0x570; // FMulticastInlineDelegate
		constexpr auto OnUnhovered = 0x580; // FMulticastInlineDelegate
		constexpr auto ClickPanelButtonSFX = 0x590; // UAkAudioEvent*
		constexpr auto DefaultButtonText = 0x598; // FText
		constexpr auto IsDisabled = 0x5b0; // bool
		constexpr auto HoverPanelButtonSFX = 0x5b8; // UAkAudioEvent*
	}

	namespace n_UKSPlayerMod_FullSpeedADS {
		constexpr auto FullSpeedAlpha = 0x330; // float
	}

	namespace n_UBP_GameInstance_C {
		constexpr auto UberGraphFrame = 0x550; // FPointerToUberGraphFrame
	}

	namespace n_UGeometryCacheCodecBase {
		constexpr auto TopologyRanges = 0x28; // TArray<int32_t>
	}

	namespace n_UKSPlayerMod_ReloadTime {
		constexpr auto ReloadTimeMultiplier = 0x330; // float
	}

	namespace n_UKSModInst_HoldToTarget {
		constexpr auto TargeterConfig = 0x480; // FKSTargeterConfig
		constexpr auto OnTargetAcquired = 0x490; // FMulticastInlineDelegate
		constexpr auto CurrentTarget = 0x4a0; // AActor*
	}

	namespace n_USFXEvent_C {
		constexpr auto AkEvent = 0x38; // UAkAudioEvent*
		constexpr auto bStopWhenAttachedToDestroyed = 0x40; // bool
	}

	namespace n_UAnimMontage {
		constexpr auto BlendIn = 0xa8; // FAlphaBlend
		constexpr auto BlendInTime = 0xd8; // float
		constexpr auto BlendOut = 0xe0; // FAlphaBlend
		constexpr auto BlendOutTime = 0x110; // float
		constexpr auto BlendOutTriggerTime = 0x114; // float
		constexpr auto SyncGroup = 0x118; // FName
		constexpr auto SyncSlotIndex = 0x120; // int32_t
		constexpr auto MarkerData = 0x128; // FMarkerSyncData
		constexpr auto CompositeSections = 0x148; // TArray<FCompositeSection>
		constexpr auto SlotAnimTracks = 0x158; // TArray<FSlotAnimationTrack>
		constexpr auto BranchingPoints = 0x168; // TArray<FBranchingPoint>
		constexpr auto bEnableRootMotionTranslation = 0x178; // bool
		constexpr auto bEnableRootMotionRotation = 0x179; // bool
		constexpr auto bEnableAutoBlendOut = 0x17a; // bool
		constexpr auto RootMotionRootLock = 0x17b; // ERootMotionRootLock
		constexpr auto BranchingPointMarkers = 0x180; // TArray<FBranchingPointMarker>
		constexpr auto BranchingPointStateNotifyIndices = 0x190; // TArray<int32_t>
		constexpr auto TimeStretchCurve = 0x1a0; // FTimeStretchCurve
		constexpr auto TimeStretchCurveName = 0x1c8; // FName
	}

	namespace n_ASkeletalMeshActor {
		constexpr auto bShouldDoAnimNotifies = 0x228; // char : 1
		constexpr auto bWakeOnLevelStart = 0x228; // char : 1
		constexpr auto SkeletalMeshComponent = 0x230; // USkeletalMeshComponent*
		constexpr auto ReplicatedMesh = 0x238; // USkeletalMesh*
		constexpr auto ReplicatedPhysAsset = 0x240; // UPhysicsAsset*
		constexpr auto ReplicatedMaterial0 = 0x248; // UMaterialInterface*
		constexpr auto ReplicatedMaterial1 = 0x250; // UMaterialInterface*
	}

	namespace n_UNamedInterfaces {
		constexpr auto NamedInterfaces = 0x28; // TArray<FNamedInterface>
		constexpr auto NamedInterfaceDefs = 0x38; // TArray<FNamedInterfaceDef>
	}

	namespace n_UParticleModuleAcceleration {
		constexpr auto Acceleration = 0x38; // FRawDistributionVector
		constexpr auto bApplyOwnerScale = 0x80; // char : 1
	}

	namespace n_UPGameBTComposite_Random {
		constexpr auto Probabilities = 0x90; // TArray<float>
	}

	namespace n_UButton {
		constexpr auto Style = 0x128; // USlateWidgetStyleAsset*
		constexpr auto WidgetStyle = 0x130; // FButtonStyle
		constexpr auto ColorAndOpacity = 0x3a8; // FLinearColor
		constexpr auto BackgroundColor = 0x3b8; // FLinearColor
		constexpr auto ClickMethod = 0x3c8; // EButtonClickMethod
		constexpr auto TouchMethod = 0x3c9; // EButtonTouchMethod
		constexpr auto PressMethod = 0x3ca; // EButtonPressMethod
		constexpr auto IsFocusable = 0x3cb; // bool
		constexpr auto bAllowTouchFallthrough = 0x3cc; // bool
		constexpr auto OnClicked = 0x3d0; // FMulticastInlineDelegate
		constexpr auto OnPressed = 0x3e0; // FMulticastInlineDelegate
		constexpr auto OnReleased = 0x3f0; // FMulticastInlineDelegate
		constexpr auto OnHovered = 0x400; // FMulticastInlineDelegate
		constexpr auto OnUnhovered = 0x410; // FMulticastInlineDelegate
	}

	namespace n_ULeaderboardQueryCallbackProxy {
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_USynthComponent {
		constexpr auto bAutoDestroy = 0x208; // char : 1
		constexpr auto bStopWhenOwnerDestroyed = 0x208; // char : 1
		constexpr auto bAllowSpatialization = 0x208; // char : 1
		constexpr auto bOverrideAttenuation = 0x208; // char : 1
		constexpr auto bOutputToBusOnly = 0x20c; // char : 1
		constexpr auto AttenuationSettings = 0x210; // USoundAttenuation*
		constexpr auto AttenuationOverrides = 0x218; // FSoundAttenuationSettings
		constexpr auto ConcurrencySettings = 0x5b8; // USoundConcurrency*
		constexpr auto ConcurrencySet = 0x5c0; // TSet<USoundConcurrency*>
		constexpr auto SoundClass = 0x610; // USoundClass*
		constexpr auto SourceEffectChain = 0x618; // USoundEffectSourcePresetChain*
		constexpr auto SoundSubmix = 0x620; // USoundSubmixBase*
		constexpr auto SoundSubmixSends = 0x628; // TArray<FSoundSubmixSendInfo>
		constexpr auto BusSends = 0x638; // TArray<FSoundSourceBusSendInfo>
		constexpr auto Modulation = 0x648; // FSoundModulation
		constexpr auto PreEffectBusSends = 0x658; // TArray<FSoundSourceBusSendInfo>
		constexpr auto bIsUISound = 0x668; // char : 1
		constexpr auto bIsPreviewSound = 0x668; // char : 1
		constexpr auto EnvelopeFollowerAttackTime = 0x66c; // int32_t
		constexpr auto EnvelopeFollowerReleaseTime = 0x670; // int32_t
		constexpr auto OnAudioEnvelopeValue = 0x678; // FMulticastInlineDelegate
		constexpr auto Synth = 0x6a8; // USynthSound*
		constexpr auto AudioComponent = 0x6b0; // UAudioComponent*
	}

	namespace n_UKSDamageTypeFire {
		constexpr auto FireDuration = 0x138; // float
	}

	namespace n_UKSWeaponAsset_Grenade {
		constexpr auto bAllowCooking = 0x988; // bool
		constexpr auto MinimumCookTime = 0x98c; // float
		constexpr auto FuseTime = 0x990; // float
		constexpr auto MinHandRemainingFuse = 0x994; // float
		constexpr auto bFuseTicksInHand = 0x998; // bool
		constexpr auto GrenadeClass = 0x9a0; // TSoftClassPtr<UObject>
	}

	namespace n_UTimelineTemplate {
		constexpr auto TimelineLength = 0x28; // float
		constexpr auto LengthMode = 0x2c; // ETimelineLengthMode
		constexpr auto bAutoPlay = 0x2d; // char : 1
		constexpr auto bLoop = 0x2d; // char : 1
		constexpr auto bReplicated = 0x2d; // char : 1
		constexpr auto bIgnoreTimeDilation = 0x2d; // char : 1
		constexpr auto EventTracks = 0x30; // TArray<FTTEventTrack>
		constexpr auto FloatTracks = 0x40; // TArray<FTTFloatTrack>
		constexpr auto VectorTracks = 0x50; // TArray<FTTVectorTrack>
		constexpr auto LinearColorTracks = 0x60; // TArray<FTTLinearColorTrack>
		constexpr auto MetaDataArray = 0x70; // TArray<FBPVariableMetaDataEntry>
		constexpr auto TimelineGuid = 0x80; // FGuid
		constexpr auto VariableName = 0x90; // FName
		constexpr auto DirectionPropertyName = 0x98; // FName
		constexpr auto UpdateFunctionName = 0xa0; // FName
		constexpr auto FinishedFunctionName = 0xa8; // FName
	}

	namespace n_UKSStoreSection {
		constexpr auto SectionItems = 0x28; // TArray<UKSStoreSectionItem*>
		constexpr auto SectionType = 0x38; // EStoreSectionTypes
	}

	namespace n_UKSAIItemPriorityComponent {
		constexpr auto ItemPriorities = 0xb0; // TArray<FKSBTItemPriorityTableRow>
	}

	namespace n_UMaterialExpressionConstant3Vector {
		constexpr auto Constant = 0x40; // FLinearColor
	}

	namespace n_UPhysicsSpringComponent {
		constexpr auto SpringStiffness = 0x208; // float
		constexpr auto SpringDamping = 0x20c; // float
		constexpr auto SpringLengthAtRest = 0x210; // float
		constexpr auto SpringRadius = 0x214; // float
		constexpr auto SpringChannel = 0x218; // ECollisionChannel
		constexpr auto bIgnoreSelf = 0x219; // bool
		constexpr auto SpringCompression = 0x21c; // float
	}

	namespace n_UKSBTTask_CopyObjectFacingVector {
		constexpr auto CopyTarget = 0x70; // FBlackboardKeySelector
		constexpr auto FacingVector = 0x98; // FBlackboardKeySelector
	}

	namespace n_UKSJobSelectionManager {
		constexpr auto bJobManagerReady = 0xb0; // bool
		constexpr auto OnJobSelectionManagerReady = 0xb8; // FMulticastInlineDelegate
		constexpr auto OnJobSelectionAcknowledge = 0xc8; // FMulticastInlineDelegate
		constexpr auto CachedOwner = 0xd8; // AKSPlayerController*
		constexpr auto CachedSelectionComponent = 0xe0; // UKSJobSelectionComponent*
	}

	namespace n_UNetworkSettings {
		constexpr auto bVerifyPeer = 0x38; // char : 1
		constexpr auto bEnableMultiplayerWorldOriginRebasing = 0x38; // char : 1
		constexpr auto MaxRepArraySize = 0x3c; // int32_t
		constexpr auto MaxRepArrayMemory = 0x40; // int32_t
		constexpr auto NetworkEmulationProfiles = 0x48; // TArray<FNetworkEmulationProfileDescription>
	}

	namespace n_USub_Hero_ABP_Zipline_C {
		constexpr auto AnimGraphNode_Root = 0x10f0; // FAnimNode_Root
		constexpr auto AnimGraphNode_TransitionResult_15 = 0x1130; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_14 = 0x1168; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_13 = 0x11a0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_12 = 0x11d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_11 = 0x1210; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_10 = 0x1248; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_9 = 0x1280; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_8 = 0x12b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_7 = 0x12f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_6 = 0x1328; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_5 = 0x1360; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_4 = 0x1398; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_3 = 0x13d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_StateResult_9 = 0x1408; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpaceSkinned_8 = 0x1448; // FAnimNode_BlendSpacePlayerSkinned
		constexpr auto AnimGraphNode_BlendSpacePlayer_8 = 0x1648; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_8 = 0x1738; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_6 = 0x1778; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_8 = 0x1800; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpaceSkinned_7 = 0x18b0; // FAnimNode_BlendSpacePlayerSkinned
		constexpr auto AnimGraphNode_BlendSpacePlayer_7 = 0x1ab0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_7 = 0x1ba0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpaceSkinned_6 = 0x1be0; // FAnimNode_BlendSpacePlayerSkinned
		constexpr auto AnimGraphNode_BlendSpacePlayer_6 = 0x1de0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpaceSkinned_5 = 0x1ed0; // FAnimNode_BlendSpacePlayerSkinned
		constexpr auto AnimGraphNode_BlendSpacePlayer_5 = 0x20d0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_2 = 0x21c0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendSpaceSkinned_4 = 0x2280; // FAnimNode_BlendSpacePlayerSkinned
		constexpr auto AnimGraphNode_BlendSpacePlayer_4 = 0x2480; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpaceSkinned_3 = 0x2570; // FAnimNode_BlendSpacePlayerSkinned
		constexpr auto AnimGraphNode_BlendSpacePlayer_3 = 0x2770; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_6 = 0x2860; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpaceSkinned_2 = 0x28a0; // FAnimNode_BlendSpacePlayerSkinned
		constexpr auto AnimGraphNode_BlendSpacePlayer_2 = 0x2aa0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_5 = 0x2b90; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_3 = 0x2bd0; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0x2c90; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_4 = 0x2d18; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_2 = 0x2d58; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_BlendListByBool_7 = 0x2e18; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x2ec8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult = 0x2f00; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequenceSkinned_5 = 0x2f38; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x3098; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_3 = 0x3120; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpaceSkinned = 0x3160; // FAnimNode_BlendSpacePlayerSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_4 = 0x3360; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_LayeredBoneBlend_4 = 0x34c0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x3590; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer = 0x3618; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_2 = 0x3708; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequenceSkinned_3 = 0x3748; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x38a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult = 0x3930; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x3970; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_BlendListByBool_6 = 0x3a30; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose_4 = 0x3ae0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_18 = 0x3ba8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_TwoWayBlend_4 = 0x3be0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_AimOffsetSkinned_8 = 0x3cb8; // FAnimNode_AimOffsetSkinned
		constexpr auto AnimGraphNode_AimOffsetSkinned_7 = 0x3e78; // FAnimNode_AimOffsetSkinned
		constexpr auto AnimGraphNode_UseCachedPose_17 = 0x4038; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_5 = 0x4070; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TwoWayBlend_3 = 0x4120; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_AimOffsetSkinned_6 = 0x41f8; // FAnimNode_AimOffsetSkinned
		constexpr auto AnimGraphNode_AimOffsetSkinned_5 = 0x43b8; // FAnimNode_AimOffsetSkinned
		constexpr auto AnimGraphNode_UseCachedPose_16 = 0x4578; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_15 = 0x45b0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByEnum = 0x45e8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_UseCachedPose_14 = 0x46a8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_TwoWayBlend_2 = 0x46e0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_AimOffsetSkinned_4 = 0x47b8; // FAnimNode_AimOffsetSkinned
		constexpr auto AnimGraphNode_AimOffsetSkinned_3 = 0x4978; // FAnimNode_AimOffsetSkinned
		constexpr auto AnimGraphNode_UseCachedPose_13 = 0x4b38; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_3 = 0x4b70; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_4 = 0x4c38; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_12 = 0x4ce8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_11 = 0x4d20; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ApplyAdditive = 0x4d58; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SequencePlayer = 0x4e30; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_2 = 0x4eb8; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_BlendListByBool_3 = 0x5018; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x50c8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool = 0x5178; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LayeredBoneBlend_3 = 0x5228; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_LayeredBoneBlend_2 = 0x52f8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_LayeredBoneBlend = 0x53c8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SaveCachedPose_2 = 0x5498; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_10 = 0x5560; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_9 = 0x5598; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_8 = 0x55d0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose = 0x5608; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_7 = 0x56d0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_6 = 0x5708; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_5 = 0x5740; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_4 = 0x5778; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_3 = 0x57b0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequenceSkinned = 0x57e8; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0x5948; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_TwoWayBlend = 0x5980; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_AimOffsetSkinned_2 = 0x5a58; // FAnimNode_AimOffsetSkinned
		constexpr auto AnimGraphNode_AimOffsetSkinned = 0x5c18; // FAnimNode_AimOffsetSkinned
		constexpr auto AnimGraphNode_UseCachedPose = 0x5dd8; // FAnimNode_UseCachedPose
		constexpr auto Character = 0x5e10; // AKSCharacter*
		constexpr auto Zipline Lower Wheel Rotator = 0x5e18; // FRotator
		constexpr auto Zipline Upper Wheel Rotator = 0x5e24; // FRotator
		constexpr auto Wheel Speed = 0x5e30; // float
		constexpr auto Enable Zipline Eng Aims = 0x5e34; // bool
		constexpr auto UseHuntingRifleHold = 0x5e35; // bool
		constexpr auto EnableLayeredHandAdditives = 0x5e36; // bool
		constexpr auto bIsServer = 0x5e37; // bool
		constexpr auto Temp_float_Variable = 0x5e38; // float
		constexpr auto Temp_float_Variable_2 = 0x5e3c; // float
		constexpr auto Temp_bool_Variable = 0x5e40; // bool
		constexpr auto K2Node_Select_Default = 0x5e44; // float
		constexpr auto Temp_bool_Variable_2 = 0x5e48; // bool
		constexpr auto CallFunc_BreakRotator_Roll = 0x5e4c; // float
		constexpr auto CallFunc_BreakRotator_Pitch = 0x5e50; // float
		constexpr auto CallFunc_BreakRotator_Yaw = 0x5e54; // float
		constexpr auto Temp_float_Variable_3 = 0x5e58; // float
		constexpr auto Temp_float_Variable_4 = 0x5e5c; // float
		constexpr auto Temp_bool_Variable_3 = 0x5e60; // bool
		constexpr auto K2Node_Select_Default_2 = 0x5e64; // float
		constexpr auto CallFunc_BreakRotator_Roll_2 = 0x5e68; // float
		constexpr auto CallFunc_BreakRotator_Pitch_2 = 0x5e6c; // float
		constexpr auto CallFunc_BreakRotator_Yaw_2 = 0x5e70; // float
		constexpr auto Temp_float_Variable_5 = 0x5e74; // float
		constexpr auto Temp_float_Variable_6 = 0x5e78; // float
		constexpr auto Temp_bool_Variable_4 = 0x5e7c; // bool
		constexpr auto K2Node_Select_Default_3 = 0x5e80; // float
		constexpr auto Temp_float_Variable_7 = 0x5e84; // float
		constexpr auto Temp_float_Variable_8 = 0x5e88; // float
		constexpr auto K2Node_Select_Default_4 = 0x5e8c; // float
		constexpr auto K2Node_DynamicCast_AsKSCharacter = 0x5e90; // AKSCharacter*
		constexpr auto K2Node_DynamicCast_bSuccess = 0x5e98; // bool
	}

	namespace n_UWBP_Social_Search_bar_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto Hover = 0x528; // UWidgetAnimation*
		constexpr auto background = 0x530; // UImage*
		constexpr auto bottomborder = 0x538; // UImage*
		constexpr auto InputText = 0x540; // UKSEditableTextBox*
		constexpr auto leftborder = 0x548; // UImage*
		constexpr auto RightBorder = 0x550; // UImage*
		constexpr auto SubmitButton = 0x558; // UWBP_StandardButtonInner_C*
		constexpr auto topborder = 0x560; // UImage*
		constexpr auto OnSearchTermChange = 0x568; // FMulticastInlineDelegate
		constexpr auto TextIsDirty = 0x578; // bool
		constexpr auto OnHovered = 0x580; // FMulticastInlineDelegate
		constexpr auto OnUnhovered = 0x590; // FMulticastInlineDelegate
	}

	namespace n_AKSPlayerState {
		constexpr auto bIsDemoRecording = 0x328; // bool
		constexpr auto OnCharacterOwnerChangedDel = 0x330; // FMulticastInlineDelegate
		constexpr auto OnBackupCharacterOwnerChangedDel = 0x340; // FMulticastInlineDelegate
		constexpr auto OnFriendlyFireInflicted = 0x350; // FMulticastInlineDelegate
		constexpr auto TrackedFriendlyFireDamage = 0x360; // float
		constexpr auto bReverseFriendlyFireEnabled = 0x364; // bool
		constexpr auto PredictionFudge = 0x368; // float
		constexpr auto MaxPredictionPing = 0x36c; // float
		constexpr auto OnTrackedActorBegin = 0x370; // FMulticastInlineDelegate
		constexpr auto OnTrackedActorEnd = 0x380; // FMulticastInlineDelegate
		constexpr auto PlayerType = 0x390; // EIsPlayer
		constexpr auto r_Team = 0x398; // AKSTeamState*
		constexpr auto BackupTeamNum = 0x3a8; // int32_t
		constexpr auto bHasServerTravelled = 0x3ac; // bool
		constexpr auto OnKSPlayerStateTeamChangedDel = 0x3b0; // FMulticastInlineDelegate
		constexpr auto OnKSPlayerStateNameChangedDel = 0x3d8; // FMulticastInlineDelegate
		constexpr auto CharacterOwner = 0x400; // TWeakObjectPtr<AKSCharacterBase>
		constexpr auto BackupCharacterOwner = 0x408; // TWeakObjectPtr<AKSCharacterBase>
		constexpr auto CharacterFoundationOwner = 0x410; // TWeakObjectPtr<AKSCharacterFoundation>
		constexpr auto EliminatedState = 0x448; // EEliminationState
		constexpr auto OnPlayerEliminated = 0x450; // FMulticastInlineDelegate
		constexpr auto OnPlayerInPlay = 0x460; // FMulticastInlineDelegate
		constexpr auto OnPlayerLeftPlay = 0x470; // FMulticastInlineDelegate
		constexpr auto bDowned = 0x480; // bool
		constexpr auto OnPlayerDownedChangedDel = 0x488; // FMulticastInlineDelegate
		constexpr auto LastKnownLocation = 0x498; // FVector
		constexpr auto LocalSideNum = 0x4a4; // int32_t
		constexpr auto bUIRelevant = 0x4a8; // bool
		constexpr auto bMarkedUIIrrelevant = 0x4a9; // bool
		constexpr auto r_ReplicatedNetId = 0x4b0; // FSerializedMctsNetId
		constexpr auto OnRespawnTicketsChanged = 0x4d0; // FMulticastInlineDelegate
		constexpr auto RespawnTickets = 0x4e0; // int32_t
		constexpr auto bIsPendingRepossession = 0x4e4; // bool
		constexpr auto RespawnTimer = 0x4e8; // UKSTimerComponent*
		constexpr auto DisallowGiveUpTimer = 0x4f0; // UKSTimerComponent*
		constexpr auto OnRespawnTimerTick = 0x4f8; // FMulticastInlineDelegate
		constexpr auto OnRespawnTimerActive = 0x508; // FMulticastInlineDelegate
		constexpr auto OnRespawnTimerComplete = 0x518; // FMulticastInlineDelegate
		constexpr auto OnDisallowGiveUpTimerTick = 0x528; // FMulticastInlineDelegate
		constexpr auto OnDisallowGiveUpTimerActive = 0x538; // FMulticastInlineDelegate
		constexpr auto OnDisallowGiveUpTimerComplete = 0x548; // FMulticastInlineDelegate
		constexpr auto OnScoreChanged = 0x558; // FMulticastInlineDelegate
		constexpr auto OnMultiDownAchievedDel = 0x568; // FMulticastInlineDelegate
		constexpr auto OnMultiDownAchievedWithDataDel = 0x578; // FMulticastInlineDelegate
		constexpr auto Kills = 0x58c; // int32_t
		constexpr auto deaths = 0x590; // int32_t
		constexpr auto Assists = 0x594; // int32_t
		constexpr auto downs = 0x598; // int32_t
		constexpr auto DownSpree = 0x59c; // int32_t
		constexpr auto Revives = 0x5a0; // int32_t
		constexpr auto eliminations = 0x5a4; // int32_t
		constexpr auto Headshots = 0x5a8; // int32_t
		constexpr auto Hacks = 0x5ac; // int32_t
		constexpr auto Dehacks = 0x5b0; // int32_t
		constexpr auto MitigatedDamageDealt = 0x5b4; // int32_t
		constexpr auto MitigatedDamageReceived = 0x5b8; // int32_t
		constexpr auto RawDamageDealt = 0x5bc; // int32_t
		constexpr auto RawDamageReceived = 0x5c0; // int32_t
		constexpr auto RoundsPlayed = 0x5c4; // int32_t
		constexpr auto TimeAlive = 0x5c8; // int32_t
		constexpr auto timePlayed = 0x5cc; // int32_t
		constexpr auto OnUIRelevantPlayerStateChangedDel = 0x5e8; // FMulticastInlineDelegate
		constexpr auto ScoreChangeList = 0x5f8; // FKSScoreChangeList
		constexpr auto PreviewRecordedStats = 0x688; // UKSPlayerMatchStats*
		constexpr auto Money = 0x690; // int32_t
		constexpr auto LastMoney = 0x694; // int32_t
		constexpr auto OnMoneyEarned = 0x698; // FMulticastInlineDelegate
		constexpr auto OnMoneyChanged = 0x6a8; // FMulticastInlineDelegate
		constexpr auto bMoneyGivesCharge = 0x6b8; // bool
		constexpr auto cash = 0x6bc; // int32_t
		constexpr auto LastCash = 0x6c0; // int32_t
		constexpr auto bHasReceivedStartingCash = 0x6c4; // bool
		constexpr auto TotalCashEarned = 0x6c8; // int32_t
		constexpr auto LastCashEarned = 0x6cc; // int32_t
		constexpr auto OnCashChanged = 0x6d0; // FMulticastInlineDelegate
		constexpr auto OnCashEarnedChanged = 0x6e0; // FMulticastInlineDelegate
		constexpr auto OnCashChangeEvent = 0x6f0; // FMulticastInlineDelegate
		constexpr auto CashChangeList = 0x700; // FKSCashChangeList
		constexpr auto OnItemPickedUpBySelf = 0x790; // FMulticastInlineDelegate
		constexpr auto OnItemPickedUpByTeam = 0x7a0; // FMulticastInlineDelegate
		constexpr auto bShouldRestoreInventory = 0x7b0; // bool
		constexpr auto PlayerStateAssistant = 0x7c8; // AKSPlayerStateAssistant*
		constexpr auto ModsToRestoreOnReactivated = 0x7d0; // TArray<UKSPlayerMod*>
		constexpr auto OnPlayerModCharge = 0x7e0; // FMulticastInlineDelegate
		constexpr auto OnPlayerModActivationChange = 0x7f0; // FMulticastInlineDelegate
		constexpr auto OnModAddedDel = 0x800; // FMulticastInlineDelegate
		constexpr auto OnModRemovedDel = 0x828; // FMulticastInlineDelegate
		constexpr auto Specialties = 0x850; // TArray<UKSSpecialty*>
		constexpr auto OnJobChanged = 0x860; // FMulticastInlineDelegate
		constexpr auto JobItem = 0x870; // UKSJobItem*
		constexpr auto JobMasteryXpLevel = 0x878; // int32_t
		constexpr auto OnJobLoadFinishedDel = 0x880; // FMulticastInlineDelegate
		constexpr auto OnJobMasteryXpLevelChanged = 0x8a8; // FMulticastInlineDelegate
		constexpr auto SkinItem = 0x8c0; // UKSSkinBundle*
		constexpr auto OnSkinChanged = 0x8c8; // FMulticastInlineDelegate
		constexpr auto LoadoutClass = 0x8d8; // UKSLoadoutClass*
		constexpr auto ItemsDroppedOnDeath = 0x8e0; // TArray<AKSItemDrop*>
		constexpr auto Gender = 0x908; // FKSCharacterGender
		constexpr auto LocalGender = 0x90a; // FKSCharacterGender
		constexpr auto SkinTagContainer = 0x910; // FGameplayTagContainer
		constexpr auto bStale = 0x948; // bool
		constexpr auto AllyWidgetPoolName = 0x950; // TArray<FString>
		constexpr auto OnShopItemPurchased = 0x960; // FMulticastInlineDelegate
		constexpr auto OnShopItemRefunded = 0x970; // FMulticastInlineDelegate
		constexpr auto OnShopItemActive = 0x980; // FMulticastInlineDelegate
		constexpr auto OnShopItemInactive = 0x990; // FMulticastInlineDelegate
		constexpr auto OnPersistentPlayerDataChanged = 0x9a0; // FMulticastInlineDelegate
		constexpr auto bPollInProgress = 0x9d0; // bool
		constexpr auto bHasVoted = 0x9d1; // bool
		constexpr auto CurrentPollType = 0x9d8; // UKSPollBase*
		constexpr auto CachedPollData = 0x9e0; // FKSPollData
		constexpr auto bCachedLocallyViewed = 0x9f0; // bool
		constexpr auto OnCharacterLocalViewChange = 0x9f8; // FMulticastInlineDelegate
		constexpr auto StimulatingObjects = 0xa08; // TArray<TWeakObjectPtr<AActor>>
		constexpr auto RevealManager = 0xa18; // AKSRevealManager*
		constexpr auto OnActivityEventTriggered = 0xa20; // FMulticastInlineDelegate
		constexpr auto OnCombatActivityEventTriggered = 0xa30; // FMulticastInlineDelegate
		constexpr auto OnTargetedActivityEventTriggered = 0xa40; // FMulticastInlineDelegate
		constexpr auto OnRevealEventTriggered = 0xa50; // FMulticastInlineDelegate
		constexpr auto OnWeaponReloaded = 0xa60; // FMulticastInlineDelegate
		constexpr auto OnWeaponFiredPreDamage = 0xa70; // FMulticastInlineDelegate
		constexpr auto OnWeaponFiredPostDamage = 0xa80; // FMulticastInlineDelegate
		constexpr auto bBackfill = 0xa90; // bool
		constexpr auto SavedHumanPlayerId = 0xa94; // int32_t
		constexpr auto ActionTimestampMap = 0xa98; // TMap<FString, float>
		constexpr auto LastDamagedByPlayerTimestampMap = 0xae8; // TMap<int64_t, float>
		constexpr auto CachedItemValueMap = 0xb38; // TMap<int32_t, int32_t>
		constexpr auto ActivityBehaviorCache = 0xb88; // TMap<FString, float>
		constexpr auto VehicleOwner = 0xbd8; // TWeakObjectPtr<AKSVehicleBase>
		constexpr auto OnCharacterFoundationPossessionChangedDel = 0xbe0; // FMulticastInlineDelegate
	}

	namespace n_UWBP_WeaponMasteryLevelUpBanner_C {
		constexpr auto UberGraphFrame = 0x578; // FPointerToUberGraphFrame
		constexpr auto Anim_ClassMasteryLevel = 0x580; // UWidgetAnimation*
		constexpr auto Anim_WeaponMasteryLevel = 0x588; // UWidgetAnimation*
		constexpr auto AreaShimmer_ColorWrapper = 0x590; // UBorder*
		constexpr auto AreaShineLeft_2 = 0x598; // UImage*
		constexpr auto AreaShineRight_2 = 0x5a0; // UImage*
		constexpr auto Back = 0x5a8; // UImage*
		constexpr auto BackgroundCategoryRender = 0x5b0; // UImage*
		constexpr auto BackgroundFlare = 0x5b8; // UImage*
		constexpr auto BackgroundFlare_ColorWrapper = 0x5c0; // UBorder*
		constexpr auto BackgroundSwitcher = 0x5c8; // UWidgetSwitcher*
		constexpr auto BannerScanlines_ColorWrapper = 0x5d0; // UBorder*
		constexpr auto CenterGradient = 0x5d8; // UImage*
		constexpr auto CenterLensFlare1 = 0x5e0; // UImage*
		constexpr auto chevron = 0x5e8; // UImage*
		constexpr auto chevron_2 = 0x5f0; // UImage*
		constexpr auto chevron_3 = 0x5f8; // UImage*
		constexpr auto chevron_4 = 0x600; // UImage*
		constexpr auto chevron_5 = 0x608; // UImage*
		constexpr auto chevron_6 = 0x610; // UImage*
		constexpr auto Chevrons_ColorWrapper = 0x618; // UBorder*
		constexpr auto CircleGlowing_Left = 0x620; // UImage*
		constexpr auto CircleGlowing_Right = 0x628; // UImage*
		constexpr auto CircleThick_Left = 0x630; // UImage*
		constexpr auto CircleThick_Right = 0x638; // UImage*
		constexpr auto CornerDeco = 0x640; // UImage*
		constexpr auto CornerDeco_2 = 0x648; // UImage*
		constexpr auto DecorationsContainer = 0x650; // UOverlay*
		constexpr auto DecorativeBits_ColorWrapper = 0x658; // UBorder*
		constexpr auto DiamondBase = 0x660; // UImage*
		constexpr auto DiamondBlur = 0x668; // UImage*
		constexpr auto DiamondInterior_ColorWrapper = 0x670; // UBorder*
		constexpr auto EdgeGlow = 0x678; // UImage*
		constexpr auto EdgeGlow_2 = 0x680; // UImage*
		constexpr auto Fill = 0x688; // UImage*
		constexpr auto FillShadow = 0x690; // UImage*
		constexpr auto GlitchCenter_ColorWrapper = 0x698; // UBorder*
		constexpr auto GlitchMaterial = 0x6a0; // UImage*
		constexpr auto glowLine = 0x6a8; // UWBP_AdditiveImage_C*
		constexpr auto glowLine_3 = 0x6b0; // UWBP_AdditiveImage_C*
		constexpr auto godrays = 0x6b8; // UImage*
		constexpr auto IconFlares_ColorWrapper = 0x6c0; // UBorder*
		constexpr auto LineShimmer_ColorWrapper = 0x6c8; // UBorder*
		constexpr auto LineShineLeft = 0x6d0; // UImage*
		constexpr auto LineShineRight = 0x6d8; // UImage*
		constexpr auto MainFlare_ColorWrapper = 0x6e0; // UBorder*
		constexpr auto MasteryBadgeSwitcher = 0x6e8; // UWidgetSwitcher*
		constexpr auto Pip_RightSlant = 0x6f0; // UImage*
		constexpr auto Pip_RightSlant_2 = 0x6f8; // UImage*
		constexpr auto Pip_RightSlant_3 = 0x700; // UImage*
		constexpr auto Pip_RightSlant_4 = 0x708; // UImage*
		constexpr auto Pip_RightSlant_5 = 0x710; // UImage*
		constexpr auto Pip_RightSlant_6 = 0x718; // UImage*
		constexpr auto PrimaryBannerShade = 0x720; // UImage*
		constexpr auto PrimaryBannerText = 0x728; // UTextBlock*
		constexpr auto RewardEntryContainer = 0x730; // UWrapBox*
		constexpr auto ScanLines = 0x738; // UWBP_AdditiveImage_C*
		constexpr auto ScanLines_3 = 0x740; // UWBP_AdditiveImage_C*
		constexpr auto ShadeBox = 0x748; // UImage*
		constexpr auto ShadeBox_2 = 0x750; // UImage*
		constexpr auto SheenLeft = 0x758; // UImage*
		constexpr auto SheenRight = 0x760; // UImage*
		constexpr auto Sheens_ColorWrapper = 0x768; // UBorder*
		constexpr auto Stroke = 0x770; // UImage*
		constexpr auto SubtitleBannerShade = 0x778; // UImage*
		constexpr auto SubtitleText = 0x780; // UTextBlock*
		constexpr auto TechnoCircles_ColorWrapper = 0x788; // UBorder*
		constexpr auto VictoryDefeatGlow = 0x790; // UImage*
		constexpr auto VictoryDefeatGlow_2 = 0x798; // UImage*
		constexpr auto VictoryDefeatGlow_Pulse = 0x7a0; // UImage*
		constexpr auto VictoryDefeatGlow_Pulse_2 = 0x7a8; // UImage*
		constexpr auto WBP_ListButton_Cosmetic = 0x7b0; // UWBP_ListButton_Cosmetic_C*
		constexpr auto WBP_ListButton_Cosmetic_2 = 0x7b8; // UWBP_ListButton_Cosmetic_C*
		constexpr auto WBP_ListButton_Cosmetic_3 = 0x7c0; // UWBP_ListButton_Cosmetic_C*
		constexpr auto WBP_ListButton_Cosmetic_4 = 0x7c8; // UWBP_ListButton_Cosmetic_C*
		constexpr auto WBP_ListButton_Cosmetic_5 = 0x7d0; // UWBP_ListButton_Cosmetic_C*
		constexpr auto WBP_ListButton_Cosmetic_6 = 0x7d8; // UWBP_ListButton_Cosmetic_C*
		constexpr auto WBP_StandardButtonMedium = 0x7e0; // UWBP_StandardButtonMedium_C*
		constexpr auto WBP_WeaponCategoryMasteryBadge = 0x7e8; // UWBP_WeaponCategoryMasteryBadge_C*
		constexpr auto WBP_WeaponMasteryBadgeLarge = 0x7f0; // UWBP_WeaponMasteryBadgeLarge_C*
		constexpr auto WeaponIcon = 0x7f8; // UImage*
		constexpr auto WeaponIconTriangle = 0x800; // UImage*
		constexpr auto WeaponIconTriangle_2 = 0x808; // UImage*
		constexpr auto TickTime = 0x810; // float
		constexpr auto TransitionFinished = 0x818; // FMulticastInlineDelegate
		constexpr auto NewMasteryLevelSFX = 0x828; // UAkAudioEvent*
		constexpr auto CurrentPopulatedMastery = 0x830; // EKSWeaponMasteryType
		constexpr auto ClassMasteryLevelSFX = 0x838; // UAkAudioEvent*
		constexpr auto WeaponsMasterSFX = 0x840; // UAkAudioEvent*
		constexpr auto TransitionMasteryAwardSFX = 0x848; // UAkAudioEvent*
		constexpr auto QueuedWeaponForCategory = 0x850; // TMap<UKSWeaponCategoryAsset*, UKSWeaponAsset*>
		constexpr auto PreviousWeapon = 0x8a0; // UKSWeaponAsset*
	}

	namespace n_UMotionControllerComponent {
		constexpr auto PlayerIndex = 0x430; // int32_t
		constexpr auto Hand = 0x434; // EControllerHand
		constexpr auto MotionSource = 0x438; // FName
		constexpr auto bDisableLowLatencyUpdate = 0x440; // char : 1
		constexpr auto CurrentTrackingStatus = 0x444; // ETrackingStatus
		constexpr auto bDisplayDeviceModel = 0x445; // bool
		constexpr auto DisplayModelSource = 0x448; // FName
		constexpr auto CustomDisplayMesh = 0x450; // UStaticMesh*
		constexpr auto DisplayMeshMaterialOverrides = 0x458; // TArray<UMaterialInterface*>
		constexpr auto DisplayComponent = 0x4d0; // UPrimitiveComponent*
	}

	namespace n_UParticleModuleSubUV {
		constexpr auto Animation = 0x30; // USubUVAnimation*
		constexpr auto SubImageIndex = 0x38; // FRawDistributionFloat
		constexpr auto bUseRealTime = 0x68; // char : 1
	}

	namespace n_USynthKnob {
		constexpr auto Value = 0x110; // float
		constexpr auto StepSize = 0x114; // float
		constexpr auto MouseSpeed = 0x118; // float
		constexpr auto MouseFineTuneSpeed = 0x11c; // float
		constexpr auto ShowTooltipInfo = 0x120; // char : 1
		constexpr auto ParameterName = 0x128; // FText
		constexpr auto ParameterUnits = 0x140; // FText
		constexpr auto ValueDelegate = 0x158; // FDelegate
		constexpr auto WidgetStyle = 0x168; // FSynthKnobStyle
		constexpr auto Locked = 0x3a0; // bool
		constexpr auto IsFocusable = 0x3a1; // bool
		constexpr auto OnMouseCaptureBegin = 0x3a8; // FMulticastInlineDelegate
		constexpr auto OnMouseCaptureEnd = 0x3b8; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureBegin = 0x3c8; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureEnd = 0x3d8; // FMulticastInlineDelegate
		constexpr auto OnValueChanged = 0x3e8; // FMulticastInlineDelegate
	}

	namespace n_UKSAISenseEvent_Objective {
		constexpr auto Event = 0x28; // FAIObjectiveEvent
	}

	namespace n_UKSActivityRewardCondition_DamageHistoryClass {
		constexpr auto MatchingDamageTypes = 0x30; // TArray<UDamageType*>
	}

	namespace n_UGizmoAxisRotationParameterSource {
		constexpr auto AxisSource = 0x48; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0x58; // TScriptInterface<IGizmoTransformSource>
		constexpr auto Angle = 0x68; // float
		constexpr auto LastChange = 0x6c; // FGizmoFloatParameterChange
		constexpr auto CurRotationAxis = 0x74; // FVector
		constexpr auto CurRotationOrigin = 0x80; // FVector
		constexpr auto InitialTransform = 0x90; // FTransform
	}

	namespace n_UPostProcessComponent {
		constexpr auto Settings = 0x210; // FPostProcessSettings
		constexpr auto Priority = 0x760; // float
		constexpr auto BlendRadius = 0x764; // float
		constexpr auto BlendWeight = 0x768; // float
		constexpr auto bEnabled = 0x76c; // char : 1
		constexpr auto bUnbound = 0x76c; // char : 1
	}

	namespace n_UKSActivityRequirement_BackfillEnabledQueue {
		constexpr auto bRequireEnabled = 0x30; // bool
	}

	namespace n_AKSRemoteControlledVehicle {
		constexpr auto bDurationHasEnded = 0xf08; // bool
	}

	namespace n_UWBP_ProgressionTally_C {
		constexpr auto UberGraphFrame = 0x690; // FPointerToUberGraphFrame
		constexpr auto BackfillBonus_Horizontal = 0x698; // UWBP_ProgressionTally_Entry_C*
		constexpr auto BackfillBonus_Vertical = 0x6a0; // UWBP_ProgressionTally_Entry_C*
		constexpr auto EventBonus_Horizontal = 0x6a8; // UWBP_ProgressionTally_Entry_C*
		constexpr auto EventBonus_Vertical = 0x6b0; // UWBP_ProgressionTally_Entry_C*
		constexpr auto LayoutSwitcher = 0x6b8; // UWidgetSwitcher*
		constexpr auto MiscBonus_Horizontal = 0x6c0; // UWBP_ProgressionTally_Entry_C*
		constexpr auto MiscBonus_Vertical = 0x6c8; // UWBP_ProgressionTally_Entry_C*
		constexpr auto TallyContainer_Horizontal = 0x6d0; // UHorizontalBox*
		constexpr auto TallyContainer_Vertical = 0x6d8; // UVerticalBox*
		constexpr auto WinBonus_Horizontal = 0x6e0; // UWBP_ProgressionTally_Entry_C*
		constexpr auto WinBonus_Vertical = 0x6e8; // UWBP_ProgressionTally_Entry_C*
		constexpr auto UseHorizontalLayout = 0x6f0; // bool
	}

	namespace n_UParticleModuleSize {
		constexpr auto StartSize = 0x30; // FRawDistributionVector
	}

	namespace n_UParticleModuleRotationOverLifetime {
		constexpr auto RotationOverLife = 0x30; // FRawDistributionFloat
		constexpr auto Scale = 0x60; // char : 1
	}

	namespace n_UExporter {
		constexpr auto SupportedClass = 0x28; // UObject*
		constexpr auto ExportRootScope = 0x30; // UObject*
		constexpr auto FormatExtension = 0x38; // TArray<FString>
		constexpr auto FormatDescription = 0x48; // TArray<FString>
		constexpr auto PreferredFormatIndex = 0x58; // int32_t
		constexpr auto TextIndent = 0x5c; // int32_t
		constexpr auto bText = 0x60; // char : 1
		constexpr auto bSelectedOnly = 0x60; // char : 1
		constexpr auto bForceFileOperations = 0x60; // char : 1
		constexpr auto ExportTask = 0x68; // UAssetExportTask*
	}

	namespace n_UWBP_PlayerProfileScreen_AwardPanel_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto AwardEntry1 = 0x528; // UWBP_PlayerProfileScreen_AwardEntry_C*
		constexpr auto AwardEntry2 = 0x530; // UWBP_PlayerProfileScreen_AwardEntry_C*
		constexpr auto AwardEntry3 = 0x538; // UWBP_PlayerProfileScreen_AwardEntry_C*
		constexpr auto AwardEntry4 = 0x540; // UWBP_PlayerProfileScreen_AwardEntry_C*
		constexpr auto ContentBox = 0x548; // UVerticalBox*
		constexpr auto Loading = 0x550; // UWBP_ThrobberHorizontal_C*
		constexpr auto LoadingWrapper = 0x558; // UVerticalBox*
		constexpr auto LockIcon = 0x560; // UImage*
		constexpr auto PanelContent = 0x568; // UVerticalBox*
		constexpr auto Title = 0x570; // UTextBlock*
		constexpr auto TitleWrapper = 0x578; // UVerticalBox*
		constexpr auto TxtNoRecentProgress = 0x580; // UTextBlock*
		constexpr auto WBP_PanelButton = 0x588; // UWBP_PanelButton_C*
		constexpr auto WidgetSwitcher_1 = 0x590; // UWidgetSwitcher*
		constexpr auto IsDisabled = 0x598; // bool
	}

	namespace n_UGizmoTransformProxyTransformSource {
		constexpr auto Proxy = 0x48; // UTransformProxy*
	}

	namespace n_UWBP_EventRulesPopup_C {
		constexpr auto UberGraphFrame = 0x4c0; // FPointerToUberGraphFrame
		constexpr auto Anim_OnShown = 0x4c8; // UWidgetAnimation*
		constexpr auto Button_GotIt = 0x4d0; // UWBP_StandardButtonMedium_C*
		constexpr auto RedUnderline = 0x4d8; // UImage*
		constexpr auto Text_ModalBody = 0x4e0; // UTextBlock*
		constexpr auto WBP_ModalPopupContainer = 0x4e8; // UWBP_ModalPopupContainer_C*
		constexpr auto WhiteLIneRule = 0x4f0; // UImage*
	}

	namespace n_UMaterialExpressionRuntimeVirtualTextureReplace {
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto VirtualTextureOutput = 0x54; // FExpressionInput
	}

	namespace n_UKSDefaultAimTargetingModule {
		constexpr auto WallMarkerMaxDistance = 0x128; // float
		constexpr auto bBlockedByWall = 0x12c; // bool
		constexpr auto bWallMarkerActive = 0x12d; // bool
		constexpr auto WallMarkerWorldLocation = 0x130; // FVector
		constexpr auto ProjWeaponAsset = 0x140; // UKSWeaponAsset_WithProjectile*
	}

	namespace n_UKSDataIndividualInviteSetup {
		constexpr auto OnGetIsSelected = 0x78; // FDelegate
		constexpr auto OnSelect = 0x88; // FDelegate
	}

	namespace n_UWBP_ChallengeView_EventContracts_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto ContractContainer = 0x528; // UVerticalBox*
		constexpr auto DescText = 0x530; // UTextBlock*
		constexpr auto DescWrapper = 0x538; // UHorizontalBox*
		constexpr auto Image_362 = 0x540; // UImage*
		constexpr auto TimeRemaining = 0x548; // UTextBlock*
		constexpr auto TimerSwitcher = 0x550; // UWidgetSwitcher*
		constexpr auto WBP_ChallengeEntry_Event_C_1 = 0x558; // UWBP_ChallengeEntry_Event_C*
		constexpr auto WBP_ChallengeEntry_Event_C_2 = 0x560; // UWBP_ChallengeEntry_Event_C*
		constexpr auto WBP_ChallengeEntry_Event_C_3 = 0x568; // UWBP_ChallengeEntry_Event_C*
		constexpr auto WeeklyTrackScrollBox = 0x570; // UScrollBox*
		constexpr auto NumWeeks = 0x578; // int32_t
	}

	namespace n_UKSPersistentDataTeamBarWidget {
		constexpr auto HoldReapply = 0x558; // int32_t
		constexpr auto bWantsRepply = 0x55c; // bool
		constexpr auto TeamPlayerData = 0x560; // TArray<UKSPersistentPlayerData*>
	}

	namespace n_UVOIPTalker {
		constexpr auto Settings = 0xb0; // FVoiceSettings
	}

	namespace n_UWBP_CosmeticItem_Avatar_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto Button = 0x528; // UWBP_ButtonSlot_Cosmetic_C*
		constexpr auto WBP_AsyncIcon = 0x530; // UWBP_AsyncIcon_C*
		constexpr auto PlatformItem = 0x538; // UPlatformInventoryItem*
		constexpr auto OnItemHovered = 0x540; // FMulticastInlineDelegate
		constexpr auto OnItemUnhovered = 0x550; // FMulticastInlineDelegate
		constexpr auto OnItemClicked = 0x560; // FMulticastInlineDelegate
		constexpr auto HoverAvatarItemSFX = 0x570; // UAkAudioEvent*
		constexpr auto ClickAvatarItemSFX = 0x578; // UAkAudioEvent*
	}

	namespace n_UKSBTTask_SetWeaponRanges {
		constexpr auto WeaponRangeConfigTable = 0x70; // UDataTable*
		constexpr auto EquipPoint = 0x78; // FGameplayTag
		constexpr auto IdealAttackRangeKey = 0x80; // FBlackboardKeySelector
		constexpr auto StartAttackRangeKey = 0xa8; // FBlackboardKeySelector
	}

	namespace n_UWBP_WeaponMasteryRewards_C {
		constexpr auto UberGraphFrame = 0x578; // FPointerToUberGraphFrame
		constexpr auto RefreshRewardList = 0x580; // UWidgetAnimation*
		constexpr auto RefreshPreview = 0x588; // UWidgetAnimation*
		constexpr auto diamondbg = 0x590; // UImage*
		constexpr auto EnemyPlayerName = 0x598; // UTextBlock*
		constexpr auto ItemPreviewStack = 0x5a0; // UWBP_ItemPreviewStack_C*
		constexpr auto KillFeedImage = 0x5a8; // UKSAsyncImage*
		constexpr auto KillFeedWrapper = 0x5b0; // UHorizontalBox*
		constexpr auto MasteryBadgeSwitcher = 0x5b8; // UWidgetSwitcher*
		constexpr auto MasteryIconContainer = 0x5c0; // UScaleBox*
		constexpr auto MasteryRewardsHeader = 0x5c8; // UTextBlock*
		constexpr auto PreviewPlayerName = 0x5d0; // UTextBlock*
		constexpr auto RelatedRoguesGroup = 0x5d8; // UWBP_RelatedRoguesGroup_C*
		constexpr auto RewardItemList = 0x5e0; // UVerticalBox*
		constexpr auto RewardPreviewImage = 0x5e8; // UKSAsyncImage*
		constexpr auto RewardPreviewSpecialDetails = 0x5f0; // USizeBox*
		constexpr auto RewardPreviewSwitcher = 0x5f8; // UWidgetSwitcher*
		constexpr auto Unlock = 0x600; // UImage*
		constexpr auto WBP_AsyncIcon = 0x608; // UWBP_AsyncIcon_C*
		constexpr auto WBP_Header1 = 0x610; // UWBP_Header1_C*
		constexpr auto WBP_ReactiveWrapStepPreview = 0x618; // UWBP_ReactiveWrapStepPreview_C*
		constexpr auto WBP_WeaponCategoryMasteryBadge = 0x620; // UWBP_WeaponCategoryMasteryBadge_C*
		constexpr auto WBP_WeaponMasteryBadgeLarge = 0x628; // UWBP_WeaponMasteryBadgeLarge_C*
		constexpr auto WBP_WeaponMasteryTrack = 0x630; // UWBP_WeaponMasteryTrack_C*
		constexpr auto WeaponName = 0x638; // UTextBlock*
		constexpr auto WeaponPreviewImage = 0x640; // UKSAsyncImage*
		constexpr auto WeaponRogueUnlockText = 0x648; // UTextBlock*
		constexpr auto WeaponTitleBox = 0x650; // USizeBox*
		constexpr auto RewardItems = 0x658; // TArray<UWBP_ListButton_Cosmetic_C*>
		constexpr auto SelectedRewardIndex = 0x668; // int32_t
		constexpr auto Last Selected Reward Entry = 0x670; // UWBP_ListButton_Cosmetic_C*
	}

	namespace n_APainCausingVolume {
		constexpr auto bPainCausing = 0x268; // char : 1
		constexpr auto DamagePerSec = 0x26c; // float
		constexpr auto DamageType = 0x270; // UDamageType*
		constexpr auto PainInterval = 0x278; // float
		constexpr auto bEntryPain = 0x27c; // char : 1
		constexpr auto BACKUP_bPainCausing = 0x27c; // char : 1
		constexpr auto DamageInstigator = 0x280; // AController*
	}

	namespace n_UKSRewardsTrackWidgetBase {
		constexpr auto MaxPageCount = 0x520; // int32_t
		constexpr auto CurrentPage = 0x524; // int32_t
		constexpr auto ItemButtons = 0x528; // TArray<UKSWidget*>
		constexpr auto ActivityInstance = 0x538; // UKSActivityInstance*
		constexpr auto Acquisition = 0x540; // UKSAcquisition*
	}

	namespace n_UParticleModuleRotation_Seeded {
		constexpr auto RandomSeedInfo = 0x60; // FParticleRandomSeedInfo
	}

	namespace n_ULandscapeWeightmapUsage {
		constexpr auto ChannelUsage = 0x28; // ULandscapeComponent* [0x4]
		constexpr auto LayerGuid = 0x48; // FGuid
	}

	namespace n_UKSPlayerBehaviorRuleComponent {
		constexpr auto FilteredPlayer = 0xb0; // AController*
		constexpr auto FilteredTeam = 0xb8; // AKSTeamState*
		constexpr auto PlayerSetChangeReaction = 0xc0; // EPlayerBehaviorChangeReact
	}

	namespace n_UPGame_PlayerInput {
		constexpr auto KeyMouseSwitchDelta = 0x12d0; // float
		constexpr auto GamepadSwitchDelta = 0x12d8; // float
	}

	namespace n_UKSWeaponAttachment_VarScope {
		constexpr auto ScopeSettings = 0x2f8; // TArray<float>
		constexpr auto ScopeType = 0x308; // EKSVariableScopeType
	}

	namespace n_UTextBlockWidgetStyle {
		constexpr auto TextBlockStyle = 0x30; // FTextBlockStyle
	}

	namespace n_UInterpTrackFloatMaterialParam {
		constexpr auto TargetMaterials = 0x90; // TArray<UMaterialInterface*>
		constexpr auto ParamName = 0xa0; // FName
	}

	namespace n_UDatasmithDeltaGenSceneImportData {
		constexpr auto bMergeNodes = 0x48; // bool
		constexpr auto bOptimizeDuplicatedNodes = 0x49; // bool
		constexpr auto bRemoveInvisibleNodes = 0x4a; // bool
		constexpr auto bSimplifyNodeHierarchy = 0x4b; // bool
		constexpr auto bImportVar = 0x4c; // bool
		constexpr auto VarPath = 0x50; // FString
		constexpr auto bImportPos = 0x60; // bool
		constexpr auto PosPath = 0x68; // FString
		constexpr auto bImportTml = 0x78; // bool
		constexpr auto TmlPath = 0x80; // FString
	}

	namespace n_UParticleModuleBeamModifier {
		constexpr auto ModifierType = 0x30; // BeamModifierType
		constexpr auto PositionOptions = 0x34; // FBeamModifierOptions
		constexpr auto Position = 0x38; // FRawDistributionVector
		constexpr auto TangentOptions = 0x80; // FBeamModifierOptions
		constexpr auto Tangent = 0x88; // FRawDistributionVector
		constexpr auto bAbsoluteTangent = 0xd0; // char : 1
		constexpr auto StrengthOptions = 0xd4; // FBeamModifierOptions
		constexpr auto Strength = 0xd8; // FRawDistributionFloat
	}

	namespace n_UParticleModuleLocationPrimitiveTriangle {
		constexpr auto StartOffset = 0x30; // FRawDistributionVector
		constexpr auto Height = 0x78; // FRawDistributionFloat
		constexpr auto Angle = 0xa8; // FRawDistributionFloat
		constexpr auto Thickness = 0xd8; // FRawDistributionFloat
	}

	namespace n_UBrainComponent {
		constexpr auto BlackboardComp = 0xb8; // UBlackboardComponent*
		constexpr auto AIOwner = 0xc0; // AAIController*
	}

	namespace n_UFixedFrameRateCustomTimeStep {
		constexpr auto FixedFrameRate = 0x28; // FFrameRate
	}

	namespace n_UQosEvaluator {
		constexpr auto bInProgress = 0x48; // bool
		constexpr auto bCancelOperation = 0x49; // bool
		constexpr auto Datacenters = 0x50; // TArray<FDatacenterQosInstance>
	}

	namespace n_UKSWrapCustomizationScreen {
		constexpr auto PopulatedWeaponAsset = 0x520; // UKSWeaponAsset*
		constexpr auto PreviewedWeaponWrap = 0x528; // UKSWeaponAttachment*
		constexpr auto PreviewedStoreItem = 0x530; // UPUMG_StoreItem*
	}

	namespace n_UWBP_InWorld_Reticle_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto BatteryImage = 0x240; // UImage*
		constexpr auto BottomReticle_B = 0x248; // USizeBox*
		constexpr auto BottomReticle_M = 0x250; // USizeBox*
		constexpr auto BottomReticle_T = 0x258; // USizeBox*
		constexpr auto HR_LeftReticle_L = 0x260; // UImage*
		constexpr auto HR_RightReticle_R = 0x268; // UImage*
		constexpr auto Image_74 = 0x270; // UImage*
		constexpr auto InvalidationBox_1 = 0x278; // UInvalidationBox*
		constexpr auto LeftReticle_L = 0x280; // USizeBox*
		constexpr auto MiddleReticle = 0x288; // UImage*
		constexpr auto Reticle_Brackets = 0x290; // UImage*
		constexpr auto ReticleBorder_Bottom = 0x298; // UImage*
		constexpr auto ReticleBorder_Left = 0x2a0; // UImage*
		constexpr auto ReticleBorder_Right = 0x2a8; // UImage*
		constexpr auto ReticleBorder_Top = 0x2b0; // UImage*
		constexpr auto RightReticle_R = 0x2b8; // USizeBox*
		constexpr auto TopReticle = 0x2c0; // USizeBox*
		constexpr auto VR_BottomReticle_B = 0x2c8; // UImage*
		constexpr auto VR_BottomReticle_M = 0x2d0; // UImage*
		constexpr auto VR_BottomReticle_T = 0x2d8; // UImage*
		constexpr auto VR_TopReticle = 0x2e0; // UImage*
		constexpr auto WBP_InWorld_ReticleComponents = 0x2e8; // UWBP_InWorld_ReticleComponents_C*
		constexpr auto ZoomImage = 0x2f0; // UImage*
		constexpr auto ReticleImages = 0x2f8; // TArray<UImage*>
		constexpr auto ModInstances = 0x308; // TArray<UKSModInst_Activated*>
	}

	namespace n_UWBP_InputKeySelector_C {
		constexpr auto UberGraphFrame = 0x4c0; // FPointerToUberGraphFrame
		constexpr auto HideKeyText = 0x4c8; // UWidgetAnimation*
		constexpr auto Hover = 0x4d0; // UWidgetAnimation*
		constexpr auto ComboText = 0x4d8; // UTextBlock*
		constexpr auto GamepadCallout = 0x4e0; // UWBP_KeyCallout_C*
		constexpr auto GamepadCallout2 = 0x4e8; // UWBP_KeyCallout_C*
		constexpr auto GamepadImage2Wrapper = 0x4f0; // USizeBox*
		constexpr auto Icon_Text_Switcher = 0x4f8; // UWidgetSwitcher*
		constexpr auto IconBox = 0x500; // UHorizontalBox*
		constexpr auto KeySelector = 0x508; // UInputKeySelector*
		constexpr auto KeyText = 0x510; // UTextBlock*
		constexpr auto OnKeySelected = 0x518; // FMulticastInlineDelegate
		constexpr auto OnIsSelectingKeyChanged = 0x528; // FMulticastInlineDelegate
		constexpr auto bIsSelecting = 0x538; // bool
		constexpr auto OnComboKeySelected = 0x540; // FMulticastInlineDelegate
		constexpr auto bIsCapturingCombo = 0x550; // bool
		constexpr auto HoverInputKeySelectorSFX = 0x558; // UAkAudioEvent*
		constexpr auto ClickInputKeySelectorSFX = 0x560; // UAkAudioEvent*
	}

	namespace n_UWBP_RogueBioPanel_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto AbilitySlot = 0x528; // UWBP_ItemDescSlotNew_C*
		constexpr auto background = 0x530; // UImage*
		constexpr auto Background_Dimmer = 0x538; // UImage*
		constexpr auto EndDecro = 0x540; // UImage*
		constexpr auto FreeRotation = 0x548; // UVerticalBox*
		constexpr auto GamepadCallout = 0x550; // UWBP_KeyCallout_C*
		constexpr auto GradientImage = 0x558; // UImage*
		constexpr auto Image_2 = 0x560; // UImage*
		constexpr auto Image_643 = 0x568; // UImage*
		constexpr auto JobPrices = 0x570; // UVerticalBox*
		constexpr auto Linerule = 0x578; // UImage*
		constexpr auto LockedRogueLabel = 0x580; // UVerticalBox*
		constexpr auto PassiveSlot = 0x588; // UWBP_ItemDescSlotNew_C*
		constexpr auto PurchaseButton = 0x590; // USizeBox*
		constexpr auto RichTextBlock_257 = 0x598; // URichTextBlock*
		constexpr auto RoleText = 0x5a0; // URichTextBlock*
		constexpr auto ShortBio = 0x5a8; // UTextBlock*
		constexpr auto Text = 0x5b0; // UTextBlock*
		constexpr auto Text_2 = 0x5b8; // UTextBlock*
		constexpr auto UnlockButton = 0x5c0; // UWBP_StandardButtonLarge_C*
		constexpr auto WBP_RoguePanelHeader = 0x5c8; // UWBP_RoguePanelHeader_C*
		constexpr auto RogueDetailsWidget = 0x5d0; // UKSRogueDetailsWidget*
		constexpr auto StoreItem = 0x5d8; // UPUMG_StoreItem*
		constexpr auto IsPurchasable = 0x5e0; // bool
	}

	namespace n_UMaterialExpressionDivide {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_UEditableGeometryCollectionAdapter {
		constexpr auto GeometryCollection = 0x28; // UGeometryCollection*
		constexpr auto OriginalGeometryCollection = 0x30; // UGeometryCollection*
		constexpr auto GeometryCollectionLODIndex = 0x38; // int32_t
	}

	namespace n_AKSWeapon_RemoteRocket {
		constexpr auto CameraBlendTime = 0x6d8; // float
		constexpr auto CameraBlendFunction = 0x6dc; // EViewTargetBlendFunction
		constexpr auto CameraBlendExp = 0x6e0; // float
		constexpr auto CameraLockOutgoing = 0x6e4; // bool
		constexpr auto PostDestroyDelay = 0x6e8; // float
		constexpr auto RemoteRocketToSpawn = 0x6f0; // AKSRocket*
		constexpr auto RemoteRocketRelativeLocation = 0x6f8; // FVector
		constexpr auto SpawnedRemoteRocket = 0x708; // AKSRocket*
		constexpr auto RocketController = 0x710; // AController*
	}

	namespace n_UScrollBarWidgetStyle {
		constexpr auto ScrollBarStyle = 0x30; // FScrollBarStyle
	}

	namespace n_UEdGraphNode_Documentation {
		constexpr auto Link = 0x98; // FString
		constexpr auto Excerpt = 0xa8; // FString
	}

	namespace n_ASkyAtmosphere {
		constexpr auto SkyAtmosphereComponent = 0x220; // USkyAtmosphereComponent*
	}

	namespace n_UForceFeedbackEffect {
		constexpr auto ChannelDetails = 0x28; // TArray<FForceFeedbackChannelDetails>
		constexpr auto Duration = 0x38; // float
	}

	namespace n_AKSPlayerShop {
		constexpr auto PlayerState = 0x230; // AKSPlayerState*
		constexpr auto OnPurchaseAcknowledged = 0x238; // FMulticastInlineDelegate
		constexpr auto OnRefundAcknowledged = 0x248; // FMulticastInlineDelegate
		constexpr auto OnShopManifestChanged = 0x258; // FMulticastInlineDelegate
		constexpr auto OnShopOfferingsChanged = 0x268; // FMulticastInlineDelegate
		constexpr auto OnShopItemChanged = 0x278; // FMulticastInlineDelegate
		constexpr auto OnShopItemPurchased = 0x288; // FMulticastInlineDelegate
		constexpr auto OnShopItemRefunded = 0x298; // FMulticastInlineDelegate
		constexpr auto OnShopItemActive = 0x2a8; // FMulticastInlineDelegate
		constexpr auto OnShopItemInactive = 0x2b8; // FMulticastInlineDelegate
		constexpr auto OnShopOpened = 0x2c8; // FMulticastInlineDelegate
		constexpr auto OnShopClosed = 0x2d8; // FMulticastInlineDelegate
		constexpr auto bWeaponMasterySwapEnabled = 0x2e8; // bool
		constexpr auto CashPerKSPoint = 0x2ec; // float
		constexpr auto bDelayApplyPurchases = 0x2f0; // bool
		constexpr auto ShopManifestMap = 0x308; // FShopManifest
		constexpr auto ConfiguratorObject = 0x428; // UObject*
		constexpr auto NextTransactionId = 0x820; // int32_t
		constexpr auto bShopOpen = 0x830; // bool
		constexpr auto bShopInitialized = 0x832; // bool
		constexpr auto bPlayersCanAccessShopWhileDead = 0x833; // bool
		constexpr auto MinimumUndoableTransactionId = 0x834; // uint32_t
		constexpr auto PlayerShopHistoryComponent = 0x838; // UKSPlayerShopHistoryComponent*
		constexpr auto bAvailable = 0x840; // bool
		constexpr auto OnShopAvailabilityChanged = 0x848; // FMulticastInlineDelegate
		constexpr auto OnShopOptionsChanged = 0x858; // FMulticastInlineDelegate
		constexpr auto ShopOptions = 0x868; // FShopOptions
		constexpr auto PrimaryOneOfferings = 0x870; // TArray<FPrimaryOffering>
		constexpr auto PrimaryTwoOfferings = 0x880; // TArray<FPrimaryOffering>
		constexpr auto PistolWeaponCategory = 0x890; // UKSWeaponCategoryAsset*
		constexpr auto PistolOfferings = 0x898; // TArray<FPrimaryOffering>
		constexpr auto MeleeWeaponCategory = 0x8a8; // UKSWeaponCategoryAsset*
		constexpr auto MeleeOfferings = 0x8b0; // TArray<FPrimaryOffering>
		constexpr auto GadgetWeaponCategory = 0x8c0; // UKSWeaponCategoryAsset*
		constexpr auto GadgetOneOfferings = 0x8c8; // TArray<FPrimaryOffering>
		constexpr auto GadgetTwoOfferings = 0x8d8; // TArray<FPrimaryOffering>
		constexpr auto bDisableShopOnClose = 0x8e9; // bool
	}

	namespace n_UNavigationPath {
		constexpr auto PathUpdatedNotifier = 0x28; // FMulticastInlineDelegate
		constexpr auto PathPoints = 0x38; // TArray<FVector>
		constexpr auto RecalculateOnInvalidation = 0x48; // ENavigationOptionFlag
	}

	namespace n_UKSWeaponCategoryScreen {
		constexpr auto CategoryMasteryMeter = 0x520; // UKSWeaponProgressMeter*
		constexpr auto RelatedRogues = 0x528; // UKSRelatedRoguesGroup*
		constexpr auto WeaponUnlockTooltipDisplay = 0x530; // UWidget*
		constexpr auto WeaponCountText = 0x538; // UTextBlock*
		constexpr auto PopulatedCategory = 0x570; // UKSWeaponCategoryAsset*
		constexpr auto HoveredWeapon = 0x578; // UKSWeaponAsset*
	}

	namespace n_UAnimInstance {
		constexpr auto CurrentSkeleton = 0x28; // USkeleton*
		constexpr auto RootMotionMode = 0x30; // ERootMotionMode
		constexpr auto bUseMultiThreadedAnimationUpdate = 0x31; // char : 1
		constexpr auto bUsingCopyPoseFromMesh = 0x31; // char : 1
		constexpr auto bReceiveNotifiesFromLinkedInstances = 0x31; // char : 1
		constexpr auto bPropagateNotifiesToLinkedInstances = 0x31; // char : 1
		constexpr auto bQueueMontageEvents = 0x31; // char : 1
		constexpr auto OnMontageBlendingOut = 0x38; // FMulticastInlineDelegate
		constexpr auto OnMontageStarted = 0x48; // FMulticastInlineDelegate
		constexpr auto OnMontageEnded = 0x58; // FMulticastInlineDelegate
		constexpr auto OnAllMontageInstancesEnded = 0x68; // FMulticastInlineDelegate
		constexpr auto NotifyQueue = 0x100; // FAnimNotifyQueue
		constexpr auto ActiveAnimNotifyState = 0x170; // TArray<FAnimNotifyEvent>
		constexpr auto SubAnimInstanceWeight = 0x180; // float
	}

	namespace n_UEnvQueryTest_Project {
		constexpr auto ProjectionData = 0x1f8; // FEnvTraceData
	}

	namespace n_ULiveLinkBasicFrameInterpolationProcessor {
		constexpr auto bInterpolatePropertyValues = 0x28; // bool
	}

	namespace n_UKSAsyncImage {
		constexpr auto MaterialToUse = 0x260; // UMaterialInstanceDynamic*
		constexpr auto MaterialParameter = 0x268; // FName
	}

	namespace n_UWBP_ShearedButton_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto BeginSizedPadding_SizeWrapper = 0x528; // USizeBox*
		constexpr auto ButtonBorderImage = 0x530; // UImage*
		constexpr auto ButtonIcon = 0x538; // UImage*
		constexpr auto ButtonTopLayer = 0x540; // UOverlay*
		constexpr auto EndSizedPadding_SizeWrapper = 0x548; // USizeBox*
		constexpr auto HeaderSwitcher = 0x550; // UWidgetSwitcher*
		constexpr auto HitTarget = 0x558; // UButton*
		constexpr auto HitTarget_Overlay = 0x560; // UOverlay*
		constexpr auto HitTargetSizeWrapper = 0x568; // USizeBox*
		constexpr auto IconOverlay = 0x570; // UOverlay*
		constexpr auto IconSizeWrapper = 0x578; // USizeBox*
		constexpr auto PrimaryBorderBottomBegin_Image = 0x580; // UImage*
		constexpr auto PrimaryBorderBottomEnd_Image = 0x588; // UImage*
		constexpr auto PrimaryButtonImage = 0x590; // UImage*
		constexpr auto PrimaryTriangleBegin_Image = 0x598; // UImage*
		constexpr auto PrimaryTriangleBegin_SizeWrapper = 0x5a0; // USizeBox*
		constexpr auto PrimaryTriangleEnd_Image = 0x5a8; // UImage*
		constexpr auto PrimaryTriangleEnd_SizeWrapper = 0x5b0; // USizeBox*
		constexpr auto Shadow_Overlay = 0x5b8; // UOverlay*
		constexpr auto ShadowImage = 0x5c0; // UImage*
		constexpr auto ShadowSizeWrapper = 0x5c8; // USizeBox*
		constexpr auto ShadowTriangleBegin_Image = 0x5d0; // UImage*
		constexpr auto ShadowTriangleBegin_SizeWrapper = 0x5d8; // USizeBox*
		constexpr auto ShadowTriangleEnd_Image = 0x5e0; // UImage*
		constexpr auto ShadowTriangleEnd_SizeWrapper = 0x5e8; // USizeBox*
		constexpr auto SizeWrapper = 0x5f0; // USizeBox*
		constexpr auto TitleText = 0x5f8; // UTextBlock*
		constexpr auto TitleText_Overlay = 0x600; // UOverlay*
		constexpr auto TitleTextSizeWrapper = 0x608; // USizeBox*
		constexpr auto ShowDropShadow = 0x610; // bool
		constexpr auto ShowOnlyLowerDropShadow = 0x611; // bool
		constexpr auto bDisableReleaseAnim = 0x612; // bool
		constexpr auto ShowIcon = 0x613; // bool
		constexpr auto Idle_PrimaryColor = 0x614; // FLinearColor
		constexpr auto Idle_SecondaryColor = 0x624; // FLinearColor
		constexpr auto Title = 0x638; // FText
		constexpr auto DropshadowColor = 0x650; // FLinearColor
		constexpr auto Width = 0x660; // float
		constexpr auto ShadowOffset = 0x664; // float
		constexpr auto Height = 0x668; // float
		constexpr auto OnClicked = 0x670; // FMulticastInlineDelegate
		constexpr auto OnHovered = 0x680; // FMulticastInlineDelegate
		constexpr auto OnUnhovered = 0x690; // FMulticastInlineDelegate
		constexpr auto IsActive = 0x6a0; // bool
		constexpr auto IsDisabled = 0x6a1; // bool
		constexpr auto HoverAnimationDurationMS = 0x6a4; // float
		constexpr auto Idle_FontInfo = 0x6a8; // FSlateFontInfo
		constexpr auto Hover_FontInfo = 0x6f8; // FSlateFontInfo
		constexpr auto Active_FontInfo = 0x748; // FSlateFontInfo
		constexpr auto Hover_PrimaryColor = 0x798; // FLinearColor
		constexpr auto Active_PrimaryColor = 0x7a8; // FLinearColor
		constexpr auto Hover_SecondaryColor = 0x7b8; // FLinearColor
		constexpr auto Active_SecondaryColor = 0x7c8; // FLinearColor
		constexpr auto IsCurrentlyHovered = 0x7d8; // bool
		constexpr auto Disabled_PrimaryColor = 0x7dc; // FLinearColor
		constexpr auto Disabled_SecondaryColor = 0x7ec; // FLinearColor
		constexpr auto Disabled_FontInfo = 0x800; // FSlateFontInfo
		constexpr auto IconTexture = 0x850; // UTexture2D*
		constexpr auto ButtonSound = 0x858; // UKSButtonSoundLibrary*
	}

	namespace n_UKSActivityRequirement_Event {
		constexpr auto RequiredEventName = 0x30; // FString
	}

	namespace n_UWBP_SlotHeading_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto Heading = 0x240; // UTextBlock*
		constexpr auto UnderlineBorder = 0x248; // UImage*
		constexpr auto HeadingText = 0x250; // FText
	}

	namespace n_UNiagaraSystem {
		constexpr auto bDumpDebugSystemInfo = 0x31; // bool
		constexpr auto bDumpDebugEmitterInfo = 0x32; // bool
		constexpr auto bFixedBounds = 0x34; // char : 1
		constexpr auto EffectType = 0x38; // UNiagaraEffectType*
		constexpr auto bOverrideScalabilitySettings = 0x40; // bool
		constexpr auto ScalabilityOverrides = 0x48; // TArray<FNiagaraSystemScalabilityOverride>
		constexpr auto SystemScalabilityOverrides = 0x58; // FNiagaraSystemScalabilityOverrides
		constexpr auto EmitterHandles = 0x68; // TArray<FNiagaraEmitterHandle>
		constexpr auto ParameterCollectionOverrides = 0x78; // TArray<UNiagaraParameterCollectionInstance*>
		constexpr auto SystemSpawnScript = 0x88; // UNiagaraScript*
		constexpr auto SystemUpdateScript = 0x90; // UNiagaraScript*
		constexpr auto SystemCompiledData = 0xa8; // FNiagaraSystemCompiledData
		constexpr auto ExposedParameters = 0x300; // FNiagaraUserRedirectionParameterStore
		constexpr auto FixedBounds = 0x408; // FBox
		constexpr auto bAutoDeactivate = 0x424; // bool
		constexpr auto WarmupTime = 0x428; // float
		constexpr auto WarmupTickCount = 0x42c; // int32_t
		constexpr auto WarmupTickDelta = 0x430; // float
		constexpr auto bHasSystemScriptDIsWithPerInstanceData = 0x434; // bool
		constexpr auto UserDINamesReadInSystemScripts = 0x438; // TArray<FName>
	}

	namespace n_UMaterialExpressionBlurredNormalCustomOutput {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UAkAudioEventData {
		constexpr auto MaxAttenuationRadius = 0xa8; // float
		constexpr auto IsInfinite = 0xac; // bool
		constexpr auto MinimumDuration = 0xb0; // float
		constexpr auto MaximumDuration = 0xb4; // float
		constexpr auto LocalizedMedia = 0xb8; // TMap<FString, UAkAssetDataSwitchContainer*>
	}

	namespace n_ULiveLinkComponentSettings {
		constexpr auto DefaultControllerForRole = 0x28; // TMap<ULiveLinkRole*, ULiveLinkControllerBase*>
	}

	namespace n_UNiagaraDataInterfaceAudioSubmix {
		constexpr auto Submix = 0x30; // USoundSubmix*
	}

	namespace n_UEnvQueryTest_GameplayTags {
		constexpr auto TagQueryToMatch = 0x1f8; // FGameplayTagQuery
		constexpr auto bUpdatedToUseQuery = 0x240; // bool
		constexpr auto TagsToMatch = 0x241; // EGameplayContainerMatchType
		constexpr auto GameplayTags = 0x248; // FGameplayTagContainer
	}

	namespace n_UAkAssetBase {
		constexpr auto PlatformAssetData = 0x40; // UAkAssetPlatformData*
	}

	namespace n_UPUMG_PlayerWhoDataFactory {
		constexpr auto OnSearchByNameResultsUpdated = 0x38; // FMulticastInlineDelegate
		constexpr auto CachedSearchByNameResults = 0x48; // TArray<UPUMG_PlayerInfo*>
	}

	namespace n_ALight {
		constexpr auto LightComponent = 0x220; // ULightComponent*
		constexpr auto bEnabled = 0x228; // char : 1
	}

	namespace n_UKSBTTask_AimAt {
		constexpr auto AimRadius = 0xc0; // float
		constexpr auto AimOffset = 0xc4; // FVector
		constexpr auto AimAheadSeconds = 0xd0; // float
	}

	namespace n_UKSHudEditorSettings {
		constexpr auto bIsLayoutDirty = 0x38; // bool
		constexpr auto HudEditableData = 0x40; // TArray<FHudEditableData>
	}

	namespace n_UAnimCurveCompressionSettings {
		constexpr auto Codec = 0x28; // UAnimCurveCompressionCodec*
	}

	namespace n_UReflectionCaptureComponent {
		constexpr auto CaptureOffsetComponent = 0x208; // UBillboardComponent*
		constexpr auto ReflectionSourceType = 0x210; // EReflectionSourceType
		constexpr auto Cubemap = 0x218; // UTextureCube*
		constexpr auto SourceCubemapAngle = 0x220; // float
		constexpr auto Brightness = 0x224; // float
		constexpr auto CaptureOffset = 0x228; // FVector
		constexpr auto MapBuildDataId = 0x234; // FGuid
	}

	namespace n_UMaterialExpressionArccosine {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UMaterialExpressionRuntimeVirtualTextureOutput {
		constexpr auto BaseColor = 0x40; // FExpressionInput
		constexpr auto Specular = 0x54; // FExpressionInput
		constexpr auto Roughness = 0x68; // FExpressionInput
		constexpr auto Normal = 0x7c; // FExpressionInput
		constexpr auto WorldHeight = 0x90; // FExpressionInput
		constexpr auto Opacity = 0xa4; // FExpressionInput
		constexpr auto Mask = 0xb8; // FExpressionInput
	}

	namespace n_UKSPlayerActivityInstanceContainer {
		constexpr auto ActivityInstances = 0x30; // TMap<FInventoryId, UKSActivityInstance*>
	}

	namespace n_UMaterialExpressionArctangent {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UMaterialExpressionDistance {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_UKSPlayerMod_Omniscience {
		constexpr auto MinimapZoomModifier = 0x330; // float
	}

	namespace n_UGizmoConstantAxisSource {
		constexpr auto Origin = 0x30; // FVector
		constexpr auto Direction = 0x3c; // FVector
	}

	namespace n_AGameNetworkManager {
		constexpr auto BadPacketLossThreshold = 0x220; // float
		constexpr auto SeverePacketLossThreshold = 0x224; // float
		constexpr auto BadPingThreshold = 0x228; // int32_t
		constexpr auto SeverePingThreshold = 0x22c; // int32_t
		constexpr auto AdjustedNetSpeed = 0x230; // int32_t
		constexpr auto LastNetSpeedUpdateTime = 0x234; // float
		constexpr auto TotalNetBandwidth = 0x238; // int32_t
		constexpr auto MinDynamicBandwidth = 0x23c; // int32_t
		constexpr auto MaxDynamicBandwidth = 0x240; // int32_t
		constexpr auto bIsStandbyCheckingEnabled = 0x244; // char : 1
		constexpr auto bHasStandbyCheatTriggered = 0x244; // char : 1
		constexpr auto StandbyRxCheatTime = 0x248; // float
		constexpr auto StandbyTxCheatTime = 0x24c; // float
		constexpr auto PercentMissingForRxStandby = 0x250; // float
		constexpr auto PercentMissingForTxStandby = 0x254; // float
		constexpr auto PercentForBadPing = 0x258; // float
		constexpr auto JoinInProgressStandbyWaitTime = 0x25c; // float
		constexpr auto MoveRepSize = 0x260; // float
		constexpr auto MAXPOSITIONERRORSQUARED = 0x264; // float
		constexpr auto MAXNEARZEROVELOCITYSQUARED = 0x268; // float
		constexpr auto CLIENTADJUSTUPDATECOST = 0x26c; // float
		constexpr auto MAXCLIENTUPDATEINTERVAL = 0x270; // float
		constexpr auto MaxClientForcedUpdateDuration = 0x274; // float
		constexpr auto ServerForcedUpdateHitchThreshold = 0x278; // float
		constexpr auto ServerForcedUpdateHitchCooldown = 0x27c; // float
		constexpr auto MaxMoveDeltaTime = 0x280; // float
		constexpr auto MaxClientSmoothingDeltaTime = 0x284; // float
		constexpr auto ClientNetSendMoveDeltaTime = 0x288; // float
		constexpr auto ClientNetSendMoveDeltaTimeThrottled = 0x28c; // float
		constexpr auto ClientNetSendMoveDeltaTimeStationary = 0x290; // float
		constexpr auto ClientNetSendMoveThrottleAtNetSpeed = 0x294; // int32_t
		constexpr auto ClientNetSendMoveThrottleOverPlayerCount = 0x298; // int32_t
		constexpr auto ClientAuthorativePosition = 0x29c; // bool
		constexpr auto ClientErrorUpdateRateLimit = 0x2a0; // float
		constexpr auto ClientNetCamUpdateDeltaTime = 0x2a4; // float
		constexpr auto ClientNetCamUpdatePositionLimit = 0x2a8; // float
		constexpr auto bMovementTimeDiscrepancyDetection = 0x2ac; // bool
		constexpr auto bMovementTimeDiscrepancyResolution = 0x2ad; // bool
		constexpr auto MovementTimeDiscrepancyMaxTimeMargin = 0x2b0; // float
		constexpr auto MovementTimeDiscrepancyMinTimeMargin = 0x2b4; // float
		constexpr auto MovementTimeDiscrepancyResolutionRate = 0x2b8; // float
		constexpr auto MovementTimeDiscrepancyDriftAllowance = 0x2bc; // float
		constexpr auto bMovementTimeDiscrepancyForceCorrectionsDuringResolution = 0x2c0; // bool
		constexpr auto bUseDistanceBasedRelevancy = 0x2c1; // bool
	}

	namespace n_UWBP_Context_Menu_Prompt_C {
		constexpr auto UberGraphFrame = 0x4d0; // FPointerToUberGraphFrame
		constexpr auto CycleActionText = 0x4d8; // UTextBlock*
		constexpr auto CycleContextAction = 0x4e0; // UCanvasPanel*
		constexpr auto CycleNext = 0x4e8; // UWBP_ButtonArrow_C*
		constexpr auto CycleNextCallout = 0x4f0; // UWBP_KeyCallout_C*
		constexpr auto CyclePrevious = 0x4f8; // UWBP_ButtonArrow_C*
		constexpr auto CyclePreviousCallout = 0x500; // UWBP_KeyCallout_C*
		constexpr auto GamepadCallout = 0x508; // UWBP_KeyCallout_C*
		constexpr auto GamepadContainer = 0x510; // UCanvasPanel*
		constexpr auto GamepadContextText = 0x518; // UTextBlock*
		constexpr auto KBMButton = 0x520; // UWBP_StandardButton_02_C*
		constexpr auto KBMButtonText = 0x528; // UTextBlock*
		constexpr auto KBMButtonWrapper = 0x530; // UButton*
		constexpr auto KBMContextText = 0x538; // UTextBlock*
		constexpr auto KBMWithKeyButton = 0x540; // UWBP_StandardButton_02_C*
		constexpr auto KBMWithKeyWrapper = 0x548; // UButton*
		constexpr auto KeyText = 0x550; // UTextBlock*
		constexpr auto KeyWrapper = 0x558; // UBorder*
		constexpr auto StandardContextAction = 0x560; // UCanvasPanel*
		constexpr auto CurrentInputState = 0x568; // PGAME_INPUT_STATE
		constexpr auto OnPromptClicked = 0x570; // FMulticastInlineDelegate
		constexpr auto IsBackBtnOverrideSFX = 0x580; // UAkAudioEvent*
		constexpr auto KBMWithKey = 0x588; // bool
		constexpr auto Data = 0x590; // UContextActionData*
	}

	namespace n_UKSAnimNotify_Footstep {
		constexpr auto FootprintTraceObjectTypes = 0x38; // TArray<EObjectTypeQuery>
	}

	namespace n_UKSModInst_ReviveSelfOnActivation {
		constexpr auto bUsesCustomDuration = 0x478; // bool
		constexpr auto CustomReviveTime = 0x47c; // float
		constexpr auto bCanUseWhileUp = 0x480; // bool
		constexpr auto bReviveDuringSetup = 0x481; // bool
		constexpr auto UpAbilitySetupDuration = 0x484; // float
		constexpr auto UpAbilityDuration = 0x488; // float
		constexpr auto UpAbilityRecoveryDuration = 0x48c; // float
		constexpr auto UpAbilityRecoveryActionRestrictor = 0x490; // FKSActionRestrictor
		constexpr auto UpBuffsGivenOnActivation = 0x498; // TArray<UKSPlayerMod*>
	}

	namespace n_UPUMG_ContextBarPrompt {
		constexpr auto ContextActionData = 0x4c0; // UContextActionData*
		constexpr auto IsPoolable = 0x4c8; // bool
	}

	namespace n_UMovieSceneMaterialTrack {
		constexpr auto Sections = 0x58; // TArray<UMovieSceneSection*>
	}

	namespace n_UEnvQueryNode {
		constexpr auto VerNum = 0x28; // int32_t
	}

	namespace n_UPlatformMediaSource {
		constexpr auto MediaSource = 0x80; // UMediaSource*
	}

	namespace n_UKSBTTask_SetFloatOnBlackboard {
		constexpr auto FloatValue = 0x98; // float
	}

	namespace n_UKSPlayerMod_MedPackSpeed {
		constexpr auto MedPackSpeedMultiplier = 0x330; // float
	}

	namespace n_UWBP_ViewItems_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto BundleItem0 = 0x528; // UWBP_KSCosmeticItemDisplay_C*
		constexpr auto BundleItem1 = 0x530; // UWBP_KSCosmeticItemDisplay_C*
		constexpr auto BundleItem2 = 0x538; // UWBP_KSCosmeticItemDisplay_C*
		constexpr auto BundleItem3 = 0x540; // UWBP_KSCosmeticItemDisplay_C*
		constexpr auto BundleItem4 = 0x548; // UWBP_KSCosmeticItemDisplay_C*
		constexpr auto BundleItemsWrapper = 0x550; // UVerticalBox*
		constexpr auto GamepadScrollLeft = 0x558; // UWBP_KeyCallout_C*
		constexpr auto GamepadScrollRight = 0x560; // UWBP_KeyCallout_C*
		constexpr auto InfoContainer = 0x568; // UWBP_ItemInfoContainer_Description_C*
		constexpr auto ItemPreviewStack = 0x570; // UWBP_ItemPreviewStack_C*
		constexpr auto RewardDetailsContainer = 0x578; // UOverlay*
		constexpr auto ScrollLeftButton = 0x580; // UWBP_ButtonArrow_C*
		constexpr auto ScrollLeftIndicator = 0x588; // UHorizontalBox*
		constexpr auto ScrollRightButton = 0x590; // UWBP_ButtonArrow_C*
		constexpr auto ScrollRightIndicator = 0x598; // UHorizontalBox*
		constexpr auto ViewCamera = 0x5a0; // FName
		constexpr auto LobbyCharacter = 0x5a8; // ELobbyCharacterIndex
		constexpr auto ViewModel = 0x5ac; // FName
		constexpr auto ViewItemData = 0x5b8; // UKSViewItemData*
		constexpr auto BundledItems = 0x5c0; // TArray<UPUMG_StoreItem*>
		constexpr auto ScrollIndex = 0x5d0; // int32_t
		constexpr auto BundleItems = 0x5d8; // TArray<UWBP_KSCosmeticItemDisplay_C*>
	}

	namespace n_UVehicleWheel {
		constexpr auto CollisionMesh = 0x28; // UStaticMesh*
		constexpr auto bDontCreateShape = 0x30; // bool
		constexpr auto bAutoAdjustCollisionSize = 0x31; // bool
		constexpr auto Offset = 0x34; // FVector
		constexpr auto ShapeRadius = 0x40; // float
		constexpr auto ShapeWidth = 0x44; // float
		constexpr auto Mass = 0x48; // float
		constexpr auto DampingRate = 0x4c; // float
		constexpr auto SteerAngle = 0x50; // float
		constexpr auto bAffectedByHandbrake = 0x54; // bool
		constexpr auto TireType = 0x58; // UTireType*
		constexpr auto TireConfig = 0x60; // UTireConfig*
		constexpr auto LatStiffMaxLoad = 0x68; // float
		constexpr auto LatStiffValue = 0x6c; // float
		constexpr auto LongStiffValue = 0x70; // float
		constexpr auto SuspensionForceOffset = 0x74; // float
		constexpr auto SuspensionMaxRaise = 0x78; // float
		constexpr auto SuspensionMaxDrop = 0x7c; // float
		constexpr auto SuspensionNaturalFrequency = 0x80; // float
		constexpr auto SuspensionDampingRatio = 0x84; // float
		constexpr auto SweepType = 0x88; // EWheelSweepType
		constexpr auto MaxBrakeTorque = 0x8c; // float
		constexpr auto MaxHandBrakeTorque = 0x90; // float
		constexpr auto VehicleSim = 0x98; // UWheeledVehicleMovementComponent*
		constexpr auto WheelIndex = 0xa0; // int32_t
		constexpr auto DebugLongSlip = 0xa4; // float
		constexpr auto DebugLatSlip = 0xa8; // float
		constexpr auto DebugNormalizedTireLoad = 0xac; // float
		constexpr auto DebugWheelTorque = 0xb4; // float
		constexpr auto DebugLongForce = 0xb8; // float
		constexpr auto DebugLatForce = 0xbc; // float
		constexpr auto Location = 0xc0; // FVector
		constexpr auto OldLocation = 0xcc; // FVector
		constexpr auto Velocity = 0xd8; // FVector
	}

	namespace n_UAkItemBoolProperties {
		constexpr auto OnSelectionChanged = 0x110; // FMulticastInlineDelegate
		constexpr auto OnPropertyDragged = 0x120; // FMulticastInlineDelegate
	}

	namespace n_UWBP_PerkDescSlot_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto ItemDesc = 0x240; // UTextBlock*
		constexpr auto ItemIcon = 0x248; // UWBP_AsyncIcon_C*
		constexpr auto ItemIconWrapper = 0x250; // USizeBox*
		constexpr auto ItemName = 0x258; // UTextBlock*
		constexpr auto ItemTypeText = 0x260; // FText
	}

	namespace n_UMaterialExpressionTransformPosition {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto TransformSourceType = 0x54; // EMaterialPositionTransformSource
		constexpr auto TransformType = 0x55; // EMaterialPositionTransformSource
	}

	namespace n_UReloadOnDodgeRollModInst_C {
		constexpr auto UberGraphFrame = 0x1c0; // FPointerToUberGraphFrame
		constexpr auto Previous ammo in clip = 0x1c8; // int32_t
	}

	namespace n_UTracerParticleSystemComponent {
		constexpr auto start = 0x6b0; // FVector
		constexpr auto end = 0x6bc; // FVector
		constexpr auto TravelSpeed = 0x6c8; // float
		constexpr auto bDestroyOnDestinationReached = 0x6cc; // bool
		constexpr auto bDeactivateOnDestinationReached = 0x6cd; // bool
		constexpr auto bEnableTravel = 0x6ce; // bool
		constexpr auto OnTracerParticleReachedDestiniationDel = 0x6d0; // FMulticastInlineDelegate
	}

	namespace n_UKSBTD_IsWeaponReady {
		constexpr auto EquipPoint = 0x68; // FGameplayTag
	}

	namespace n_UParticleSystemReplay {
		constexpr auto ClipIDNumber = 0x28; // int32_t
	}

	namespace n_USafeZoneSlot {
		constexpr auto bIsTitleSafe = 0x38; // bool
		constexpr auto SafeAreaScale = 0x3c; // FMargin
		constexpr auto HAlign = 0x4c; // EHorizontalAlignment
		constexpr auto VAlign = 0x4d; // EVerticalAlignment
		constexpr auto Padding = 0x50; // FMargin
	}

	namespace n_UCharacterHeatSourceComponent_C {
		constexpr auto ThermalVisionExtraParticlesPS = 0x100; // UParticleSystem*
		constexpr auto ThermalVisionExtraParticlesComp = 0x108; // UParticleSystemComponent*
		constexpr auto K2Node_Event_NewState = 0x110; // EModViewModeState
		constexpr auto K2Node_SwitchEnum_CmpSuccess = 0x111; // bool
		constexpr auto K2Node_Event_EndPlayReason = 0x112; // EEndPlayReason
		constexpr auto K2Node_DynamicCast_AsKSCharacter_Base = 0x118; // AKSCharacterBase*
		constexpr auto K2Node_DynamicCast_bSuccess = 0x120; // bool
		constexpr auto K2Node_CustomEvent_HeatSource = 0x128; // UKSHeatSourceComponent*
		constexpr auto K2Node_CustomEvent_NewTemperature = 0x130; // float
		constexpr auto K2Node_DynamicCast_AsKSCharacter = 0x138; // AKSCharacter*
		constexpr auto K2Node_DynamicCast_bSuccess_2 = 0x140; // bool
		constexpr auto K2Node_CreateDelegate_OutputDelegate = 0x144; // FDelegate
		constexpr auto CallFunc_GetFloat_Priority = 0x154; // int32_t
		constexpr auto CallFunc_GetParticleSystem_Priority = 0x158; // int32_t
	}

	namespace n_UKSOutOfBoundsManager {
		constexpr auto OutOfBoundsWarningTime = 0xc4; // float
		constexpr auto OutOfBoundsTickDamageTime = 0xc8; // float
		constexpr auto OutOfBoundsTickDamage = 0xcc; // float
		constexpr auto TimeSpentGroundedAllowedBeforeSave = 0xd0; // float
		constexpr auto OutOfBoundsDamageType = 0xd8; // UDamageType*
		constexpr auto bAllowSaving = 0xe0; // bool
		constexpr auto AnnouncerLineOnSaved = 0xe8; // UAkAudioEvent*
		constexpr auto AnnouncerLineOnEntered = 0xf0; // UAkAudioEvent*
		constexpr auto CharacterOverlaps = 0xf8; // int32_t
		constexpr auto CharacterWarningTimer = 0x100; // FTimerHandle
		constexpr auto CharacterDamageTickTimer = 0x108; // FTimerHandle
		constexpr auto VehicleOverlaps = 0x110; // int32_t
		constexpr auto VehicleWarningTimer = 0x118; // FTimerHandle
		constexpr auto VehicleDamageTickTimer = 0x120; // FTimerHandle
		constexpr auto OverlapCheckComponent = 0x128; // UPrimitiveComponent*
		constexpr auto TimeSpentGroundedTimerHandle = 0x130; // FTimerHandle
		constexpr auto DefaultRecoveryUseTime = 0x138; // float
	}

	namespace n_USpotLightComponent {
		constexpr auto InnerConeAngle = 0x368; // float
		constexpr auto OuterConeAngle = 0x36c; // float
		constexpr auto LightShaftConeAngle = 0x370; // float
		constexpr auto bCastShadowsOnLowEnd = 0x374; // char : 1
	}

	namespace n_APlayerController {
		constexpr auto Player = 0x298; // UPlayer*
		constexpr auto AcknowledgedPawn = 0x2a0; // APawn*
		constexpr auto ControllingDirTrackInst = 0x2a8; // UInterpTrackInstDirector*
		constexpr auto MyHud = 0x2b0; // AHUD*
		constexpr auto PlayerCameraManager = 0x2b8; // APlayerCameraManager*
		constexpr auto PlayerCameraManagerClass = 0x2c0; // APlayerCameraManager*
		constexpr auto bAutoManageActiveCameraTarget = 0x2c8; // bool
		constexpr auto TargetViewRotation = 0x2cc; // FRotator
		constexpr auto SmoothTargetViewRotationSpeed = 0x2e4; // float
		constexpr auto HiddenActors = 0x2f0; // TArray<AActor*>
		constexpr auto HiddenPrimitiveComponents = 0x300; // TArray<TWeakObjectPtr<UPrimitiveComponent>>
		constexpr auto LastSpectatorStateSynchTime = 0x314; // float
		constexpr auto LastSpectatorSyncLocation = 0x318; // FVector
		constexpr auto LastSpectatorSyncRotation = 0x324; // FRotator
		constexpr auto ClientCap = 0x330; // int32_t
		constexpr auto CheatManager = 0x338; // UCheatManager*
		constexpr auto CheatClass = 0x340; // UCheatManager*
		constexpr auto PlayerInputClass = 0x348; // UPlayerInput*
		constexpr auto PlayerInput = 0x350; // UPlayerInput*
		constexpr auto ActiveForceFeedbackEffects = 0x358; // TArray<FActiveForceFeedbackEffect>
		constexpr auto bPlayerIsWaiting = 0x3d8; // char : 1
		constexpr auto NetPlayerIndex = 0x3dc; // char
		constexpr auto PendingSwapConnection = 0x418; // UNetConnection*
		constexpr auto NetConnection = 0x420; // UNetConnection*
		constexpr auto InputYawScale = 0x440; // float
		constexpr auto InputPitchScale = 0x444; // float
		constexpr auto InputRollScale = 0x448; // float
		constexpr auto bShowMouseCursor = 0x44c; // char : 1
		constexpr auto bEnableClickEvents = 0x44c; // char : 1
		constexpr auto bEnableTouchEvents = 0x44c; // char : 1
		constexpr auto bEnableMouseOverEvents = 0x44c; // char : 1
		constexpr auto bEnableTouchOverEvents = 0x44c; // char : 1
		constexpr auto bForceFeedbackEnabled = 0x44c; // char : 1
		constexpr auto ForceFeedbackScale = 0x450; // float
		constexpr auto ClickEventKeys = 0x458; // TArray<FKey>
		constexpr auto DefaultMouseCursor = 0x468; // EMouseCursor
		constexpr auto CurrentMouseCursor = 0x469; // EMouseCursor
		constexpr auto DefaultClickTraceChannel = 0x46a; // ECollisionChannel
		constexpr auto CurrentClickTraceChannel = 0x46b; // ECollisionChannel
		constexpr auto HitResultTraceDistance = 0x46c; // float
		constexpr auto SeamlessTravelCount = 0x470; // uint16_t
		constexpr auto LastCompletedSeamlessTravelCount = 0x472; // uint16_t
		constexpr auto InactiveStateInputComponent = 0x4e8; // UInputComponent*
		constexpr auto bShouldPerformFullTickWhenPaused = 0x4f0; // char : 1
		constexpr auto CurrentTouchInterface = 0x508; // UTouchInterface*
		constexpr auto SpectatorPawn = 0x560; // ASpectatorPawn*
		constexpr auto bIsLocalPlayerController = 0x56c; // bool
		constexpr auto SpawnLocation = 0x570; // FVector
	}

	namespace n_UMaterial {
		constexpr auto PhysMaterial = 0x88; // UPhysicalMaterial*
		constexpr auto PhysMaterialMask = 0x90; // UPhysicalMaterialMask*
		constexpr auto PhysicalMaterialMap = 0x98; // UPhysicalMaterial* [0x8]
		constexpr auto Metallic = 0xd8; // FScalarMaterialInput
		constexpr auto Specular = 0xec; // FScalarMaterialInput
		constexpr auto Anisotropy = 0x100; // FScalarMaterialInput
		constexpr auto Normal = 0x114; // FVectorMaterialInput
		constexpr auto Tangent = 0x128; // FVectorMaterialInput
		constexpr auto EmissiveColor = 0x13c; // FColorMaterialInput
		constexpr auto MaterialDomain = 0x150; // EMaterialDomain
		constexpr auto BlendMode = 0x151; // EBlendMode
		constexpr auto DecalBlendMode = 0x152; // EDecalBlendMode
		constexpr auto MaterialDecalResponse = 0x153; // EMaterialDecalResponse
		constexpr auto ShadingModel = 0x154; // EMaterialShadingModel
		constexpr auto bCastDynamicShadowAsMasked = 0x155; // char : 1
		constexpr auto ShadingModels = 0x156; // FMaterialShadingModelField
		constexpr auto OpacityMaskClipValue = 0x158; // float
		constexpr auto WorldPositionOffset = 0x15c; // FVectorMaterialInput
		constexpr auto Refraction = 0x170; // FScalarMaterialInput
		constexpr auto MaterialAttributes = 0x184; // FMaterialAttributesInput
		constexpr auto PixelDepthOffset = 0x19c; // FScalarMaterialInput
		constexpr auto ShadingModelFromMaterialExpression = 0x1b0; // FShadingModelMaterialInput
		constexpr auto bEnableTranslucencyAfterRefraction = 0x1c4; // char : 1
		constexpr auto bEnableSeparateTranslucency = 0x1c8; // char : 1
		constexpr auto bEnableResponsiveAA = 0x1c8; // char : 1
		constexpr auto bScreenSpaceReflections = 0x1c8; // char : 1
		constexpr auto bContactShadows = 0x1c8; // char : 1
		constexpr auto TwoSided = 0x1c8; // char : 1
		constexpr auto DitheredLODTransition = 0x1c8; // char : 1
		constexpr auto DitherOpacityMask = 0x1c8; // char : 1
		constexpr auto bAllowNegativeEmissiveColor = 0x1c8; // char : 1
		constexpr auto TranslucencyLightingMode = 0x1c9; // ETranslucencyLightingMode
		constexpr auto bEnableMobileSeparateTranslucency = 0x1ca; // char : 1
		constexpr auto NumCustomizedUVs = 0x1cc; // int32_t
		constexpr auto TranslucencyDirectionalLightingIntensity = 0x1d0; // float
		constexpr auto TranslucentShadowDensityScale = 0x1d4; // float
		constexpr auto TranslucentSelfShadowDensityScale = 0x1d8; // float
		constexpr auto TranslucentSelfShadowSecondDensityScale = 0x1dc; // float
		constexpr auto TranslucentSelfShadowSecondOpacity = 0x1e0; // float
		constexpr auto TranslucentBackscatteringExponent = 0x1e4; // float
		constexpr auto TranslucentMultipleScatteringExtinction = 0x1e8; // FLinearColor
		constexpr auto TranslucentShadowStartOffset = 0x1f8; // float
		constexpr auto bDisableDepthTest = 0x1fc; // char : 1
		constexpr auto bShouldRenderTranslucentOutline = 0x1fc; // char : 1
		constexpr auto bWriteOnlyAlpha = 0x1fc; // char : 1
		constexpr auto bGenerateSphericalParticleNormals = 0x1fc; // char : 1
		constexpr auto bTangentSpaceNormal = 0x1fc; // char : 1
		constexpr auto bUseEmissiveForDynamicAreaLighting = 0x1fc; // char : 1
		constexpr auto bBlockGI = 0x1fc; // char : 1
		constexpr auto bUsedAsSpecialEngineMaterial = 0x1fc; // char : 1
		constexpr auto bUsedWithSkeletalMesh = 0x1fd; // char : 1
		constexpr auto bUsedWithVertexCurvature = 0x1fd; // char : 1
		constexpr auto bUsedWithBlurredNormals = 0x1fd; // char : 1
		constexpr auto bUsedWithEditorCompositing = 0x1fd; // char : 1
		constexpr auto bUsedWithParticleSprites = 0x1fd; // char : 1
		constexpr auto bUsedWithBeamTrails = 0x1fd; // char : 1
		constexpr auto bUsedWithMeshParticles = 0x1fd; // char : 1
		constexpr auto bUsedWithNiagaraSprites = 0x1fd; // char : 1
		constexpr auto bUsedWithNiagaraRibbons = 0x1fe; // char : 1
		constexpr auto bUsedWithNiagaraMeshParticles = 0x1fe; // char : 1
		constexpr auto bUsedWithGeometryCache = 0x1fe; // char : 1
		constexpr auto bUsedWithStaticLighting = 0x1fe; // char : 1
		constexpr auto bUsedWithMorphTargets = 0x1fe; // char : 1
		constexpr auto bUsedWithSplineMeshes = 0x1fe; // char : 1
		constexpr auto bUsedWithInstancedStaticMeshes = 0x1fe; // char : 1
		constexpr auto bUsedWithGeometryCollections = 0x1fe; // char : 1
		constexpr auto bUsesDistortion = 0x1ff; // char : 1
		constexpr auto bUsedWithClothing = 0x1ff; // char : 1
		constexpr auto bUsedWithWater = 0x200; // char : 1
		constexpr auto bUsedWithHairStrands = 0x200; // char : 1
		constexpr auto bUsedWithLidarPointCloud = 0x200; // char : 1
		constexpr auto bUsedWithUI = 0x204; // char : 1
		constexpr auto bAutomaticallySetUsageInEditor = 0x204; // char : 1
		constexpr auto bFullyRough = 0x204; // char : 1
		constexpr auto bUseFullPrecision = 0x204; // char : 1
		constexpr auto bUseLightmapDirectionality = 0x204; // char : 1
		constexpr auto bForwardRenderUsePreintegratedGFForSimpleIBL = 0x208; // char : 1
		constexpr auto bUseHalfRateCheckerboardRendering = 0x208; // char : 1
		constexpr auto bOnlyDirectionalLighting = 0x208; // char : 1
		constexpr auto bUseHQForwardReflections = 0x20c; // char : 1
		constexpr auto bUseHQForwardReflectionsOnLowEnd = 0x210; // char : 1
		constexpr auto bUsePlanarForwardReflections = 0x214; // char : 1
		constexpr auto bNormalCurvatureToRoughness = 0x214; // char : 1
		constexpr auto D3D11TessellationMode = 0x215; // EMaterialTessellationMode
		constexpr auto bEnableCrackFreeDisplacement = 0x216; // char : 1
		constexpr auto bEnableAdaptiveTessellation = 0x216; // char : 1
		constexpr auto AllowTranslucentCustomDepthWrites = 0x216; // char : 1
		constexpr auto Wireframe = 0x216; // char : 1
		constexpr auto ShadingRate = 0x217; // EMaterialShadingRate
		constexpr auto bCanMaskedBeAssumedOpaque = 0x218; // char : 1
		constexpr auto bIsMasked = 0x218; // char : 1
		constexpr auto bIsPreviewMaterial = 0x218; // char : 1
		constexpr auto bIsFunctionPreviewMaterial = 0x218; // char : 1
		constexpr auto bUseMaterialAttributes = 0x218; // char : 1
		constexpr auto bCastRayTracedShadows = 0x218; // char : 1
		constexpr auto bUseTranslucencyVertexFog = 0x218; // char : 1
		constexpr auto bIsSky = 0x218; // char : 1
		constexpr auto bComputeFogPerPixel = 0x219; // char : 1
		constexpr auto bOutputTranslucentVelocity = 0x219; // char : 1
		constexpr auto bAllowDevelopmentShaderCompile = 0x219; // char : 1
		constexpr auto bIsMaterialEditorStatsMaterial = 0x219; // char : 1
		constexpr auto BlendableLocation = 0x21a; // EBlendableLocation
		constexpr auto BlendableOutputAlpha = 0x21b; // char : 1
		constexpr auto bEnableStencilTest = 0x21b; // char : 1
		constexpr auto StencilCompare = 0x21c; // EMaterialStencilCompare
		constexpr auto StencilRefValue = 0x21d; // char
		constexpr auto RefractionMode = 0x21e; // ERefractionMode
		constexpr auto BlendablePriority = 0x220; // int32_t
		constexpr auto bIsBlendable = 0x224; // char : 1
		constexpr auto UsageFlagWarnings = 0x228; // uint32_t
		constexpr auto RefractionDepthBias = 0x22c; // float
		constexpr auto StateId = 0x230; // FGuid
		constexpr auto MaxDisplacement = 0x240; // float
		constexpr auto CachedExpressionData = 0x2d0; // FMaterialCachedExpressionData
	}

	namespace n_AKSSeasonalEventLoader {
		constexpr auto OnFinishedSublevelLoadEvent = 0x220; // FMulticastInlineDelegate
		constexpr auto SeasonalEventNamesAndSublevels = 0x230; // TMap<FString, FSeasonalSublevels>
	}

	namespace n_UWBP_VoucherRedemptionItem_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto DLCName = 0x240; // UTextBlock*
		constexpr auto NameTextWrapper = 0x248; // UBorder*
		constexpr auto WBP_AsyncIcon = 0x250; // UWBP_AsyncIcon_C*
		constexpr auto StoreItem = 0x258; // UPUMG_StoreItem*
	}

	namespace n_UMaterialExpressionTextureSample {
		constexpr auto Coordinates = 0x50; // FExpressionInput
		constexpr auto TextureObject = 0x64; // FExpressionInput
		constexpr auto MipValue = 0x78; // FExpressionInput
		constexpr auto CoordinatesDX = 0x8c; // FExpressionInput
		constexpr auto CoordinatesDY = 0xa0; // FExpressionInput
		constexpr auto AutomaticViewMipBiasValue = 0xb4; // FExpressionInput
		constexpr auto MipValueMode = 0xc8; // ETextureMipValueMode
		constexpr auto SamplerSource = 0xc9; // ESamplerSourceMode
		constexpr auto AutomaticViewMipBias = 0xca; // char : 1
		constexpr auto ConstCoordinate = 0xcb; // char
		constexpr auto ConstMipValue = 0xcc; // int32_t
	}

	namespace n_UParticleModuleLocationWorldOffset_Seeded {
		constexpr auto RandomSeedInfo = 0x80; // FParticleRandomSeedInfo
	}

	namespace n_UPInv_AssetManagerSettings {
		constexpr auto bQuickCook = 0x38; // bool
		constexpr auto PrimaryTypesToIgnoreQuickCook = 0x40; // TArray<FName>
		constexpr auto QuickCookTypeIgnoreSet = 0x50; // TSet<FName>
		constexpr auto PrimaryAssetsToIgnoreQuickCook = 0xa0; // TArray<FString>
		constexpr auto QuickCookAssetIgnoreSet = 0xb0; // TSet<FPrimaryAssetId>
		constexpr auto QuickCookAssetIngoreSetTypes = 0x100; // TSet<FPrimaryAssetType>
		constexpr auto PrimaryAssetsToIncludeQuickCook = 0x150; // TArray<FString>
	}

	namespace n_UBTDecorator_ConeCheck {
		constexpr auto ConeHalfAngle = 0x68; // float
		constexpr auto ConeOrigin = 0x70; // FBlackboardKeySelector
		constexpr auto ConeDirection = 0x98; // FBlackboardKeySelector
		constexpr auto Observed = 0xc0; // FBlackboardKeySelector
	}

	namespace n_UKSPollBase {
		constexpr auto PollAudience = 0x28; // EPollAudience
		constexpr auto PollTitle = 0x30; // FText
		constexpr auto PollSuccessfulMessage = 0x48; // FText
		constexpr auto PollUnsuccessfulMessage = 0x60; // FText
		constexpr auto AffirmativeOption = 0x78; // FText
		constexpr auto NegativeOption = 0x90; // FText
		constexpr auto AffirmativeOptionVoteCastMessage = 0xa8; // FText
		constexpr auto NegativeOptionVoteCastMessage = 0xc0; // FText
		constexpr auto PollLengthInSeconds = 0xd8; // float
	}

	namespace n_AKSSeasonalItemSpawnLocation {
		constexpr auto SceneRootComponent = 0x220; // USceneComponent*
		constexpr auto OnSpawnLocationCleared = 0x238; // FMulticastInlineDelegate
	}

	namespace n_AOnlineBeaconHost {
		constexpr auto ListenPort = 0x250; // int32_t
		constexpr auto ClientActors = 0x258; // TArray<AOnlineBeaconClient*>
	}

	namespace n_UTextureLODSettings {
		constexpr auto TextureLODGroups = 0x28; // TArray<FTextureLODGroup>
	}

	namespace n_UEnvQueryInstanceBlueprintWrapper {
		constexpr auto QueryID = 0x30; // int32_t
		constexpr auto ItemType = 0x58; // UEnvQueryItemType*
		constexpr auto OptionIndex = 0x60; // int32_t
		constexpr auto OnQueryFinishedEvent = 0x68; // FMulticastInlineDelegate
	}

	namespace n_USkinnableStaticMeshComponent {
		constexpr auto bDelaySkinUpdatesUntilTick = 0x4e8; // bool
		constexpr auto bSkinUpdateIsQueued = 0x4e9; // bool
		constexpr auto StaticMeshKeyword = 0x4ec; // FName
		constexpr auto FailSafeStaticMesh = 0x4f8; // UStaticMesh*
		constexpr auto SkinObject = 0x500; // UMultiSkinObject*
		constexpr auto bAllowMaterialSkinning = 0x508; // bool
		constexpr auto MaterialSkinningPrefixes = 0x510; // TSet<FName>
	}

	namespace n_UDatasmithPointLightComponentTemplate {
		constexpr auto IntensityUnits = 0x30; // ELightUnits
		constexpr auto SourceRadius = 0x34; // float
		constexpr auto SourceLength = 0x38; // float
		constexpr auto AttenuationRadius = 0x3c; // float
	}

	namespace n_AKSNeutralBombDrop {
		constexpr auto CurrentInteractionProgress = 0x940; // float
		constexpr auto CurrentInteractor = 0x948; // AKSCharacter*
		constexpr auto NeutralPickupTime = 0x950; // float
		constexpr auto NeutralPickupPrompt = 0x958; // FText
		constexpr auto NeutralPickupProgressText = 0x970; // FText
		constexpr auto DisarmTime = 0x988; // float
		constexpr auto DisarmPrompt = 0x990; // FText
		constexpr auto DisarmProgressText = 0x9a8; // FText
		constexpr auto DisarmInteractionType = 0x9c0; // UKSInteractionType*
		constexpr auto MaxDisarmInteractionDistance = 0x9c8; // float
		constexpr auto MinimapDisplayWidget = 0x9d0; // TSoftClassPtr<UObject>
		constexpr auto FullmapDisplayWidget = 0x9f8; // TSoftClassPtr<UObject>
		constexpr auto OverlayDisplayWidget = 0xa20; // TSoftClassPtr<UObject>
		constexpr auto DisarmCameraName = 0xa48; // FName
		constexpr auto DisarmCameraTransitionInTime = 0xa50; // float
		constexpr auto DisarmCameraTransitionOutTime = 0xa54; // float
		constexpr auto bDisarmForceCameraShoulder = 0xa58; // bool
		constexpr auto DisarmCameraShoulder = 0xa59; // ECameraShoulder
		constexpr auto DisarmCameraMaxRotation = 0xa5c; // float
		constexpr auto DisarmCameraRotationLockout = 0xa60; // bool
		constexpr auto bLockPitch = 0xa61; // bool
		constexpr auto bLockYaw = 0xa62; // bool
		constexpr auto bDisarmCameraShake = 0xa63; // bool
		constexpr auto DisarmCameraShake = 0xa68; // UCameraShake*
		constexpr auto TeamSpottingBitmask = 0xa74; // int32_t
		constexpr auto bShouldAutomaticallyBeSpotted = 0xa78; // bool
		constexpr auto MaxSpottingRange = 0xa7c; // float
		constexpr auto SpottingSweepRadius = 0xa80; // float
		constexpr auto GroundCheckDistance = 0xa84; // float
		constexpr auto SoundEventName = 0xa90; // FName
		constexpr auto SoundEventLoudness = 0xa98; // float
		constexpr auto RepeatTimeToNotifyBots = 0xa9c; // float
	}

	namespace n_AKSLobbyHUDNew {
		constexpr auto OnMinuteTimerUpdate = 0x628; // FMulticastInlineDelegate
		constexpr auto QueueDataFactory = 0x648; // UKSQueueDataFactory*
		constexpr auto FriendDataFactory = 0x650; // UKSFriendDataFactory*
		constexpr auto PlayerQueryDataFactory = 0x658; // UKSPlayerQueryDataFactory*
		constexpr auto EMODataFactory = 0x660; // UKSEMODataFactory*
		constexpr auto PlayerWhoDataFactory = 0x668; // UKSPlayerWhoDataFactory*
		constexpr auto CurrentMediaPlayerWidget = 0x670; // TWeakObjectPtr<UKSMediaPlayerWidget>
		constexpr auto OnTriggerBlockerChange = 0x680; // FMulticastInlineDelegate
		constexpr auto LobbyWidgetReady = 0x690; // FMulticastInlineDelegate
		constexpr auto LoadingScreenFadeInDelay = 0x6a4; // float
		constexpr auto LoadingScreenFadeInDuration = 0x6a8; // float
	}

	namespace n_UMaterialExpressionParticleSubUV {
		constexpr auto bBlend = 0xd0; // char : 1
	}

	namespace n_UWBP_WeaponMasteryBadgeLarge_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto LevelText = 0x240; // UTextBlock*
		constexpr auto Mastered = 0x248; // UImage*
		constexpr auto MasteryMax = 0x250; // UImage*
		constexpr auto Unmastered = 0x258; // UImage*
		constexpr auto WidgetSwitcher_88 = 0x260; // UWidgetSwitcher*
	}

	namespace n_UKSViewedPawnDamageDisplay {
		constexpr auto StackingWait = 0x550; // float
		constexpr auto TetherToEventLocation = 0x554; // bool
		constexpr auto MaxNumDamageWidgetsOnScreen = 0x558; // int32_t
		constexpr auto DamageNumberContainer = 0x560; // UCanvasPanel*
		constexpr auto SpecialDamageTypes = 0x568; // TMap<UDamageType*, FSpecialDamageColors>
		constexpr auto CurrentDamageNumbersOnScreen = 0x5b8; // TArray<UDamageNumberDisplayWidget*>
		constexpr auto DamageNumbersPool = 0x5c8; // TArray<UDamageNumberDisplayWidget*>
	}

	namespace n_UKSMilestoneCompletedSummary {
		constexpr auto MilestoneEntries = 0x28; // TArray<FKSMilestoneCompletedSummaryEntry>
		constexpr auto WeaponKeys = 0x38; // TArray<UKSWeaponAsset*>
		constexpr auto WeaponXpCounts = 0x48; // TMap<UKSWeaponAsset*, int32_t>
	}

	namespace n_AKSProp_Physical {
		constexpr auto StaticMesh = 0x220; // UStaticMeshComponent*
		constexpr auto CollisionAkEvent = 0x228; // UAkAudioEvent*
		constexpr auto ImpactSoundThreshold = 0x230; // float
	}

	namespace n_UWBP_CheckboxButton_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto CheckboxButtonWrapper = 0x528; // UButton*
		constexpr auto HoverBG = 0x530; // UImage*
		constexpr auto HoverFill = 0x538; // UImage*
		constexpr auto SizeBox_2 = 0x540; // USizeBox*
		constexpr auto Text = 0x548; // UTextBlock*
		constexpr auto WBP_Checkbox02 = 0x550; // UWBP_Checkbox02_C*
		constexpr auto LabelText = 0x558; // FText
		constexpr auto Width = 0x570; // float
		constexpr auto OnCheckChanged = 0x578; // FMulticastInlineDelegate
	}

	namespace n_UMovieSceneGeometryCollectionTrack {
		constexpr auto AnimationSections = 0x58; // TArray<UMovieSceneSection*>
	}

	namespace n_UMaterialExpression {
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UWBP_ProgressionCardSlot_Reputation_C {
		constexpr auto Category = 0x520; // UTextBlock*
		constexpr auto IconSwitcher = 0x528; // UWidgetSwitcher*
		constexpr auto Image_508 = 0x530; // UImage*
		constexpr auto PerkIcon = 0x538; // UImage*
		constexpr auto PointsEarned = 0x540; // UTextBlock*
		constexpr auto WBP_ProgressionTally_C_1 = 0x548; // UWBP_ProgressionTally_C*
	}

	namespace n_UKSHudEditor {
		constexpr auto CurrentHighlightedWidget = 0x520; // UKSHudEditableWidget*
		constexpr auto EditorPropertiesPanel = 0x528; // UKSEditorPropertiesPanel*
		constexpr auto DefaultHighlightedWidgetName = 0x530; // FName
	}

	namespace n_UEditableText {
		constexpr auto Text = 0x110; // FText
		constexpr auto TextDelegate = 0x128; // FDelegate
		constexpr auto HintText = 0x138; // FText
		constexpr auto HintTextDelegate = 0x150; // FDelegate
		constexpr auto WidgetStyle = 0x160; // FEditableTextStyle
		constexpr auto Style = 0x378; // USlateWidgetStyleAsset*
		constexpr auto BackgroundImageSelected = 0x380; // USlateBrushAsset*
		constexpr auto BackgroundImageComposing = 0x388; // USlateBrushAsset*
		constexpr auto CaretImage = 0x390; // USlateBrushAsset*
		constexpr auto Font = 0x398; // FSlateFontInfo
		constexpr auto ColorAndOpacity = 0x3e8; // FSlateColor
		constexpr auto IsReadOnly = 0x410; // bool
		constexpr auto IsPassword = 0x411; // bool
		constexpr auto MinimumDesiredWidth = 0x414; // float
		constexpr auto IsCaretMovedWhenGainFocus = 0x418; // bool
		constexpr auto SelectAllTextWhenFocused = 0x419; // bool
		constexpr auto RevertTextOnEscape = 0x41a; // bool
		constexpr auto ClearKeyboardFocusOnCommit = 0x41b; // bool
		constexpr auto SelectAllTextOnCommit = 0x41c; // bool
		constexpr auto AllowContextMenu = 0x41d; // bool
		constexpr auto KeyboardType = 0x41e; // EVirtualKeyboardType
		constexpr auto VirtualKeyboardOptions = 0x41f; // FVirtualKeyboardOptions
		constexpr auto VirtualKeyboardTrigger = 0x420; // EVirtualKeyboardTrigger
		constexpr auto VirtualKeyboardDismissAction = 0x421; // EVirtualKeyboardDismissAction
		constexpr auto Justification = 0x422; // ETextJustify
		constexpr auto ShapedTextOptions = 0x423; // FShapedTextOptions
		constexpr auto OnTextChanged = 0x428; // FMulticastInlineDelegate
		constexpr auto OnTextCommitted = 0x438; // FMulticastInlineDelegate
	}

	namespace n_UWBP_PurchaseConfirmationButton_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto OnGamepadHover = 0x528; // UWidgetAnimation*
		constexpr auto DiscountTag = 0x530; // UWBP_StoreDiscountTagPriceButton_C*
		constexpr auto GamepadPrompt = 0x538; // UWBP_KeyCallout_C*
		constexpr auto GamepadPromptHolder = 0x540; // UOverlay*
		constexpr auto MainButton = 0x548; // UWBP_ButtonStacked_C*
		constexpr auto PressAndHoldWrapper = 0x550; // UOverlay*
		constexpr auto PriceTag = 0x558; // UWBP_StorePriceTag_C*
		constexpr auto ProgressCircle = 0x560; // UImage*
		constexpr auto UnlockText = 0x568; // UTextBlock*
		constexpr auto InHoverState = 0x570; // bool
		constexpr auto PortalOffer = 0x578; // UPUMG_PortalOffer*
		constexpr auto StorePrice = 0x580; // UPUMG_StoreItemPrice*
		constexpr auto PurcaseItemWithPrice = 0x588; // FMulticastInlineDelegate
		constexpr auto PurcaseItemWithPortalOffer = 0x598; // FMulticastInlineDelegate
		constexpr auto IsHoldingConfirm = 0x5a8; // bool
		constexpr auto OnRawClick = 0x5b0; // FMulticastInlineDelegate
		constexpr auto PurchaseQuantity = 0x5c0; // int32_t
		constexpr auto StoreItem = 0x5c8; // UPUMG_StoreItem*
		constexpr auto IsSingleAction = 0x5d0; // bool
	}

	namespace n_UNewBackButton_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto WBP_ShearedButton = 0x528; // UWBP_ShearedButton_C*
		constexpr auto BackButtonClicked = 0x530; // FMulticastInlineDelegate
		constexpr auto PreviousViewRoute = 0x540; // FName
	}

	namespace n_UParticleModuleAccelerationDrag {
		constexpr auto DragCoefficient = 0x38; // UDistributionFloat*
		constexpr auto DragCoefficientRaw = 0x40; // FRawDistributionFloat
	}

	namespace n_UDatasmithLightComponentTemplate {
		constexpr auto bVisible = 0x30; // char : 1
		constexpr auto CastShadows = 0x34; // char : 1
		constexpr auto bUseTemperature = 0x34; // char : 1
		constexpr auto bUseIESBrightness = 0x34; // char : 1
		constexpr auto Intensity = 0x38; // float
		constexpr auto Temperature = 0x3c; // float
		constexpr auto IESBrightnessScale = 0x40; // float
		constexpr auto LightColor = 0x44; // FLinearColor
		constexpr auto LightFunctionMaterial = 0x58; // UMaterialInterface*
		constexpr auto IESTexture = 0x60; // UTextureLightProfile*
	}

	namespace n_AKSDropOffZone {
		constexpr auto POIState = 0x390; // EKSPOIState
		constexpr auto Team = 0x394; // int32_t
		constexpr auto FlipTeam = 0x398; // int32_t
		constexpr auto bActivated = 0x39c; // bool
		constexpr auto PointAreaComponentTag = 0x3a0; // FName
		constexpr auto PointAreaComponents = 0x3a8; // TArray<UPrimitiveComponent*>
		constexpr auto CurrentInteractionManager = 0x3b8; // UKSInteractionManager*
		constexpr auto CurrentInteractor = 0x3c0; // AKSCharacter*
		constexpr auto CurrentInteractionProgress = 0x3c8; // float
		constexpr auto MacGuffinEquipPoint = 0x3cc; // FGameplayTag
		constexpr auto DropOffDuration = 0x3d4; // float
		constexpr auto DropOffProgressText = 0x3d8; // FText
		constexpr auto DropOffPrompt = 0x3f0; // FText
		constexpr auto DropOffInteractionMode = 0x408; // FName
		constexpr auto InteractionBlockerManager = 0x410; // UKSInteractionBlockerManager*
		constexpr auto InteractableComponent = 0x428; // UKSInteractableComponent*
	}

	namespace n_AKSWayPointSet {
		constexpr auto WayPointSet = 0x220; // int32_t
		constexpr auto Waypoints = 0x228; // TArray<AKSWayPoint*>
		constexpr auto ForwardSides = 0x238; // TArray<int32_t>
		constexpr auto ReversingSides = 0x248; // TArray<int32_t>
	}

	namespace n_UBaseBrushTool {
		constexpr auto BrushProperties = 0xc0; // UBrushBaseProperties*
		constexpr auto bInBrushStroke = 0xc8; // bool
		constexpr auto LastBrushStamp = 0xcc; // FBrushStampData
		constexpr auto PropertyClass = 0x188; // TSoftClassPtr<UObject>
		constexpr auto BrushStampIndicator = 0x1b0; // UBrushStampIndicator*
	}

	namespace n_UKSAccoladeTracker {
		constexpr auto AccoladeDisplayInfo = 0x38; // FAccoladeDisplayInfo
	}

	namespace n_UKSAudioPlayerEventActionData {
		constexpr auto BanksToLoad = 0x30; // TArray<FString>
		constexpr auto BanksToUnload = 0x40; // TArray<FString>
		constexpr auto ContainersToPlay = 0x50; // TArray<FString>
		constexpr auto ContainersToStop = 0x60; // TArray<FString>
		constexpr auto TablesToLoad = 0x70; // TArray<FString>
		constexpr auto TablesToUnload = 0x80; // TArray<FString>
		constexpr auto EventsToPost = 0x90; // TArray<FString>
	}

	namespace n_UWBP_CallToAction_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto CTAAnim = 0x240; // UWidgetAnimation*
		constexpr auto AdditiveBlur_Pulse = 0x248; // UWBP_AdditiveImage_C*
		constexpr auto BlurFar = 0x250; // UImage*
		constexpr auto BlurNear = 0x258; // UImage*
		constexpr auto Square = 0x260; // UImage*
		constexpr auto Stroke = 0x268; // UImage*
	}

	namespace n_UKSJobSelectionPlayerStatusWidget {
		constexpr auto CachedCompletedTasks = 0x548; // TArray<FJobSelectionTask>
		constexpr auto CachedActiveTask = 0x558; // FJobSelectionTask
		constexpr auto bCachedActiveTaskPendingComplete = 0x5a0; // bool
		constexpr auto PlayerData = 0x5a8; // UKSPersistentPlayerData*
	}

	namespace n_UKSGameUserSettingsDefault {
		constexpr auto SettingsConfig = 0x28; // TArray<FSettingConfigPair>
	}

	namespace n_UKSPlayerMod_OnDownOtherEvent {
		constexpr auto MeleeChargeBonusModePairs = 0x330; // TMap<TSoftClassPtr<UObject>, int32_t>
		constexpr auto MeleeChargeBonusDefault = 0x380; // int32_t
		constexpr auto HeadshotChargeBonusModePairs = 0x388; // TMap<TSoftClassPtr<UObject>, int32_t>
		constexpr auto HeadshotChargeBonusDefault = 0x3d8; // int32_t
	}

	namespace n_UKSWeaponAttachment_AccuracyKick {
		constexpr auto bReplaceKickbackModule = 0x2f8; // bool
		constexpr auto KickbackModule = 0x300; // UKickbackModule*
		constexpr auto KickbackResetTime = 0x308; // float
		constexpr auto bModifyKickbackScale = 0x30c; // bool
		constexpr auto KickbackScale = 0x310; // float
		constexpr auto bModifyBaseAccuracy = 0x314; // bool
		constexpr auto BaseAccuracyMultiplier = 0x318; // float
	}

	namespace n_AInteractiveFoliageActor {
		constexpr auto CapsuleComponent = 0x230; // UCapsuleComponent*
		constexpr auto TouchingActorEntryPosition = 0x238; // FVector
		constexpr auto FoliageVelocity = 0x244; // FVector
		constexpr auto FoliageForce = 0x250; // FVector
		constexpr auto FoliagePosition = 0x25c; // FVector
		constexpr auto FoliageDamageImpulseScale = 0x268; // float
		constexpr auto FoliageTouchImpulseScale = 0x26c; // float
		constexpr auto FoliageStiffness = 0x270; // float
		constexpr auto FoliageStiffnessQuadratic = 0x274; // float
		constexpr auto FoliageDamping = 0x278; // float
		constexpr auto MaxDamageImpulse = 0x27c; // float
		constexpr auto MaxTouchImpulse = 0x280; // float
		constexpr auto MaxForce = 0x284; // float
		constexpr auto Mass = 0x288; // float
	}

	namespace n_ABP_GuavaSpider_C {
		constexpr auto UberGraphFrame = 0xf10; // FPointerToUberGraphFrame
		constexpr auto OutOfBoundsComponent = 0xf18; // UOutOfBoundsComponent_C*
		constexpr auto FX_Debris_Sparks = 0xf20; // UParticleSystemComponent*
		constexpr auto KSAimAssistAnchor = 0xf28; // UKSAimAssistAnchorComponent*
		constexpr auto AUD_ExplosionWithEcho_Grenade = 0xf30; // UAUD_ExplosionWithEcho_Grenade_C*
		constexpr auto FX_Sticky_Grenade_Blink = 0xf38; // UParticleSystemComponent*
		constexpr auto bWantsToBoost = 0xf40; // bool
		constexpr auto ElapsedBoostTick = 0xf44; // float
		constexpr auto BoostTickThreshold = 0xf48; // float
		constexpr auto SpawnTimerHandle = 0xf50; // FTimerHandle
		constexpr auto AllowBoostVo = 0xf58; // bool
		constexpr auto BoostTimerHandle = 0xf60; // FTimerHandle
		constexpr auto SpawnVOPlaying = 0xf68; // bool
		constexpr auto ExplosiveAsset = 0xf70; // UKSWeaponAsset_Grenade*
		constexpr auto bHasDetonated = 0xf78; // bool
		constexpr auto bDetonateOnKilled = 0xf79; // bool
		constexpr auto bDetonateOnDurationEnd = 0xf7a; // bool
		constexpr auto bDetonateOnEMP = 0xf7b; // bool
		constexpr auto bCanJump = 0xf7c; // bool
		constexpr auto JumpCooldownTime = 0xf80; // float
		constexpr auto JumpCooldownTimerHandle = 0xf88; // FTimerHandle
		constexpr auto GetTurnValue = 0xf90; // float
		constexpr auto TurnLeft = 0xf94; // bool
		constexpr auto TurnRight = 0xf95; // bool
		constexpr auto CurrentDamageEffect = 0xf98; // FDamageEffect
		constexpr auto QueuedDamageEffects = 0xfe8; // TArray<FDamageEffect>
		constexpr auto ExplosionPreviewDecalMaterial = 0xff8; // UMaterialInterface*
		constexpr auto ExplosionPreviewDecal = 0x1000; // UDecalComponent*
		constexpr auto bDisplayExplosionPreviewDecal = 0x1008; // bool
		constexpr auto Spark Loop = 0x100c; // int32_t
	}

	namespace n_UKSModInst_GiveItemOnActivation {
		constexpr auto bGiveItemOnNewCharacter = 0x478; // bool
		constexpr auto AsyncItemGiveDelegate = 0x47c; // FDelegate
		constexpr auto GivenItem = 0x490; // UObject*
	}

	namespace n_UWBP_WeaponCategoryButton_C {
		constexpr auto UberGraphFrame = 0x558; // FPointerToUberGraphFrame
		constexpr auto Anim_OnHover = 0x560; // UWidgetAnimation*
		constexpr auto BG = 0x568; // UImage*
		constexpr auto CategoryIcon = 0x570; // UWBP_AsyncIcon_C*
		constexpr auto CategoryNameText = 0x578; // UTextBlock*
		constexpr auto ClassMasteryBadge = 0x580; // UWBP_WeaponCategoryMasteryBadge_C*
		constexpr auto HitTarget = 0x588; // UButton*
		constexpr auto Image_126 = 0x590; // UImage*
		constexpr auto MasteredLabel = 0x598; // UTextBlock*
		constexpr auto ProgressFill = 0x5a0; // UImage*
		constexpr auto ProgressFill_BG = 0x5a8; // UImage*
		constexpr auto ProgressMask = 0x5b0; // USizeBox*
		constexpr auto ProgressText = 0x5b8; // UTextBlock*
		constexpr auto SimpleHoverFrame = 0x5c0; // UImage*
		constexpr auto Stroke = 0x5c8; // UImage*
		constexpr auto HoverWEPCatButtonSFX = 0x5d0; // UAkAudioEvent*
		constexpr auto ClickWEPCatButtonSFX = 0x5d8; // UAkAudioEvent*
		constexpr auto GamePadConfirm_WEPCatButtonSFX = 0x5e0; // UAkAudioEvent*
		constexpr auto GamePadConfirm_WEPCatButtonSFX_1 = 0x5e8; // UAkAudioEvent*
	}

	namespace n_UWBP_SubNavButton_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto NavTab = 0x528; // UWBP_subscreen_nav_tab_C*
		constexpr auto NewIndicator = 0x530; // UCanvasPanel*
		constexpr auto WBP_CallToAction = 0x538; // UWBP_CallToAction_C*
		constexpr auto Message = 0x540; // FText
		constexpr auto OnClicked = 0x558; // FMulticastInlineDelegate
		constexpr auto OnHovered = 0x568; // FMulticastInlineDelegate
		constexpr auto OnUnhovered = 0x578; // FMulticastInlineDelegate
		constexpr auto TargetViewState = 0x588; // FName
		constexpr auto RelatedViewStates = 0x590; // TArray<FName>
		constexpr auto OnNonRouteClicked = 0x5a0; // FMulticastInlineDelegate
		constexpr auto UsesBattlePassColoring = 0x5b0; // bool
	}

	namespace n_UWBP_RewardsTrackMeter_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto SegmentContainer = 0x528; // UHorizontalBox*
		constexpr auto SpacerL = 0x530; // USpacer*
		constexpr auto SpacerR = 0x538; // USpacer*
		constexpr auto WBP_RewardsTrackBarSegment = 0x540; // UWBP_RewardsTrackMeterSegment_C*
		constexpr auto WBP_RewardsTrackBarSegment_106 = 0x548; // UWBP_RewardsTrackMeterSegment_C*
		constexpr auto Progression = 0x550; // FPlayerProgression
		constexpr auto CurrentTierIndex = 0x6c0; // int32_t
		constexpr auto OnLevelUpEvent = 0x6c8; // FMulticastInlineDelegate
		constexpr auto OnLevelDownEvent = 0x6d8; // FMulticastInlineDelegate
		constexpr auto BaseColor = 0x6e8; // FSlateColor
		constexpr auto IncreaseColor = 0x710; // FSlateColor
		constexpr auto DecreaseColor = 0x738; // FSlateColor
		constexpr auto PlayRankProgressionSFX = 0x760; // UAkAudioEvent*
		constexpr auto StopRankProgressionSFX = 0x768; // UAkAudioEvent*
		constexpr auto BackgroundColor = 0x770; // FSlateColor
		constexpr auto Clamped Base Pct = 0x798; // float
		constexpr auto Clamped Delta Pct = 0x79c; // float
		constexpr auto BonusIncreaseColor = 0x7a0; // FSlateColor
		constexpr auto OnLerpUpdate = 0x7c8; // FMulticastInlineDelegate
		constexpr auto AnimTimeInitial = 0x7d8; // float
		constexpr auto AnimTimeFinal = 0x7dc; // float
		constexpr auto NumSegments = 0x7e0; // int32_t
		constexpr auto PageIndex = 0x7e4; // int32_t
	}

	namespace n_UWBP_HomeScreen_v2_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto FadeOut = 0x528; // UWidgetAnimation*
		constexpr auto ChallengeTimerDisplay = 0x530; // UWBP_Daily_Challenge_Timer_C*
		constexpr auto Content = 0x538; // UCanvasPanel*
		constexpr auto ContextMenu = 0x540; // UWBP_PlayerContextMenu_C*
		constexpr auto CrossplayLabel = 0x548; // UTextBlock*
		constexpr auto CrossplaySettingWrapper = 0x550; // UHorizontalBox*
		constexpr auto CrossplayValue = 0x558; // UTextBlock*
		constexpr auto FocusBlocker = 0x560; // UImage*
		constexpr auto InputTypeIcon = 0x568; // UWBP_AsyncIcon_C*
		constexpr auto InputTypeLabel = 0x570; // UTextBlock*
		constexpr auto InputTypeSettingWrapper = 0x578; // UHorizontalBox*
		constexpr auto InputTypeValue = 0x580; // UTextBlock*
		constexpr auto NewsRotator = 0x588; // UWBP_NewsRotatorWidget_C*
		constexpr auto NewsSection = 0x590; // UCanvasPanel*
		constexpr auto RegionLabel = 0x598; // UTextBlock*
		constexpr auto RegionValue = 0x5a0; // UTextBlock*
		constexpr auto WBP_BattlePassLobbyDisplay = 0x5a8; // UWBP_BattlePassLobbyDisplay_C*
		constexpr auto WBP_Challenge_Panel_v2 = 0x5b0; // UWBP_Challenge_Panel_v2_C*
		constexpr auto WBP_GameNotification = 0x5b8; // UWBP_GameNotification_C*
		constexpr auto WBP_Header3 = 0x5c0; // UWBP_Header3_C*
		constexpr auto WBP_HomeQuickPlay = 0x5c8; // UWBP_HomeQuickPlay_C*
		constexpr auto WBP_LobbyEventDisplay = 0x5d0; // UWBP_LobbyEventDisplay_C*
		constexpr auto WBP_PartyModule = 0x5d8; // UWBP_PartyModule_C*
		constexpr auto WBP_SimulmediaEntrypoint = 0x5e0; // UWBP_SimulmediaEntrypoint_C*
		constexpr auto XboxIcon = 0x5e8; // UImage*
		constexpr auto ShowEMOL = 0x5f0; // bool
		constexpr auto ViewManagerWidget = 0x5f8; // UObject*
		constexpr auto LoadoutRoutes = 0x600; // TArray<FName>
	}

	namespace n_UKSModInst_OnTakeDamage {
		constexpr auto TakeDamageTimer = 0x1b8; // UKSTimerComponent*
		constexpr auto MinimumDamage = 0x1c0; // float
		constexpr auto ValidDamageCategories = 0x1c8; // TArray<EDamageCategory>
	}

	namespace n_UWBP_CreateCustomGame_MapButton_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto OnHover = 0x528; // UWidgetAnimation*
		constexpr auto ActiveFrame = 0x530; // UImage*
		constexpr auto HitTarget = 0x538; // UButton*
		constexpr auto WBP_QuickPlay_MapThumbnail = 0x540; // UWBP_QuickPlay_MapThumbnail_C*
		constexpr auto OnMapSelected = 0x548; // FMulticastInlineDelegate
		constexpr auto MapInfo = 0x558; // FMapDetail
		constexpr auto MapId = 0x5a0; // int32_t
		constexpr auto OnMapHovered = 0x5a8; // FMulticastInlineDelegate
	}

	namespace n_UAnimStreamable {
		constexpr auto NumFrames = 0xa8; // int32_t
		constexpr auto Interpolation = 0xac; // EAnimInterpolationType
		constexpr auto RetargetSource = 0xb0; // FName
		constexpr auto BoneCompressionSettings = 0xc8; // UAnimBoneCompressionSettings*
		constexpr auto CurveCompressionSettings = 0xd0; // UAnimCurveCompressionSettings*
		constexpr auto bEnableRootMotion = 0xd8; // bool
		constexpr auto RootMotionRootLock = 0xd9; // ERootMotionRootLock
		constexpr auto bForceRootLock = 0xda; // bool
		constexpr auto bUseNormalizedRootMotionScale = 0xdb; // bool
	}

	namespace n_USoundNodeDoppler {
		constexpr auto DopplerIntensity = 0x48; // float
		constexpr auto bUseSmoothing = 0x4c; // bool
		constexpr auto SmoothingInterpSpeed = 0x50; // float
	}

	namespace n_UDistributionFloatConstant {
		constexpr auto Constant = 0x38; // float
	}

	namespace n_UAISense_Touch {
		constexpr auto RegisteredEvents = 0x80; // TArray<FAITouchEvent>
	}

	namespace n_UPartyMember {
		constexpr auto SocialUser = 0x68; // USocialUser*
	}

	namespace n_UAISystemBase {
		constexpr auto AISystemClassName = 0x28; // FSoftClassPath
		constexpr auto AISystemModuleName = 0x40; // FName
		constexpr auto bInstantiateAISystemOnClient = 0x50; // bool
	}

	namespace n_UNiagaraDataInterfaceCurveBase {
		constexpr auto ShaderLUT = 0x30; // TArray<float>
		constexpr auto LUTMinTime = 0x40; // float
		constexpr auto LUTMaxTime = 0x44; // float
		constexpr auto LUTInvTimeRange = 0x48; // float
		constexpr auto LUTNumSamplesMinusOne = 0x4c; // float
		constexpr auto bUseLUT = 0x50; // char : 1
	}

	namespace n_UMovieSceneSignedObject {
		constexpr auto Signature = 0x28; // FGuid
	}

	namespace n_UKSMultiDownsTracker {
		constexpr auto MultiDownAccolades = 0xa8; // TArray<FAccoladeMultiDownTracker>
		constexpr auto TrackPlayers = 0xb8; // TArray<FAccoladePlayerTrackers>
		constexpr auto MaxTrackerTimer = 0xc8; // float
	}

	namespace n_UMaterialExpressionSphericalParticleOpacity {
		constexpr auto Density = 0x40; // FExpressionInput
		constexpr auto ConstantDensity = 0x54; // float
	}

	namespace n_UKSHealthWidget {
		constexpr auto CachedHealth = 0x540; // float
		constexpr auto CachedArmor = 0x544; // float
		constexpr auto CachedMaxHealth = 0x548; // float
		constexpr auto CachedOverheal = 0x54c; // float
	}

	namespace n_UWBP_RogueMasteryPortrait_C {
		constexpr auto JobIcon = 0x238; // UKSAsyncImage*
		constexpr auto MasteryBorder_1to4 = 0x240; // UImage*
		constexpr auto MasteryBorder_5to9 = 0x248; // UImage*
		constexpr auto MasteryBorder_Max = 0x250; // UImage*
		constexpr auto MasteryFrameSwitcher = 0x258; // UWidgetSwitcher*
		constexpr auto MasteryIcon = 0x260; // UWBP_RogueMasteryIcon_C*
		constexpr auto PlayerOwner = 0x268; // AKSPlayerState*
		constexpr auto JobItem = 0x270; // UKSJobItem*
		constexpr auto PersistentPlayerOwner = 0x278; // UKSPersistentPlayerData*
	}

	namespace n_UStreamableRenderAsset {
		constexpr auto ForceMipLevelsToBeResidentTimestamp = 0x28; // double
		constexpr auto NumCinematicMipLevels = 0x30; // int32_t
		constexpr auto StreamingIndex = 0x34; // int32_t
		constexpr auto CachedCombinedLODBias = 0x38; // int32_t
		constexpr auto CachedNumResidentLODs = 0x3c; // char
		constexpr auto bCachedReadyForStreaming = 0x3d; // char : 1
		constexpr auto NeverStream = 0x3d; // char : 1
		constexpr auto bGlobalForceMipLevelsToBeResident = 0x3d; // char : 1
		constexpr auto bIsStreamable = 0x3d; // char : 1
		constexpr auto bHasStreamingUpdatePending = 0x3d; // char : 1
		constexpr auto bForceMiplevelsToBeResident = 0x3d; // char : 1
		constexpr auto bIgnoreStreamingMipBias = 0x3d; // char : 1
		constexpr auto bUseCinematicMipLevels = 0x3d; // char : 1
	}

	namespace n_UMaterialExpressionFrac {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UDataAsset {
		constexpr auto NativeClass = 0x28; // UDataAsset*
	}

	namespace n_UANotifyState_SFXAKEvent_C {
		constexpr auto AK Event Start = 0x30; // UAkAudioEvent*
		constexpr auto AK Event Stop = 0x38; // UAkAudioEvent*
		constexpr auto StartRowName = 0x40; // FName
		constexpr auto StopRowName = 0x48; // FName
		constexpr auto SpawnNewComponentAttachedToMesh = 0x50; // bool
		constexpr auto AttachPointName = 0x54; // FName
		constexpr auto Grab Emote Semaphore = 0x5c; // bool
	}

	namespace n_UPlayerHealthMeter_C {
		constexpr auto Pulseborder = 0x238; // UWidgetAnimation*
		constexpr auto DisableImmune = 0x240; // UWidgetAnimation*
		constexpr auto EnableImmune = 0x248; // UWidgetAnimation*
		constexpr auto BorderShimmer = 0x250; // UImage*
		constexpr auto ImmuneOverlay = 0x258; // UOverlay*
		constexpr auto OutlineBorder = 0x260; // UImage*
		constexpr auto PlayerHealthMeterPadding = 0x268; // UUserWidget*
		constexpr auto PlayerHealthMeterSegment = 0x270; // UUserWidget*
		constexpr auto SegmentContainer = 0x278; // UHorizontalBox*
		constexpr auto HealthSegmentWidth = 0x280; // int32_t
		constexpr auto ShouldUseDots = 0x284; // bool
		constexpr auto CurrentHealthMeterState = 0x288; // FPlayerHealthMeterState
		constexpr auto SegmentPadding = 0x2a0; // float
		constexpr auto ImmuneBorderColor = 0x2a4; // FLinearColor
		constexpr auto StandardBorderColor = 0x2b4; // FLinearColor
		constexpr auto bIsImmune = 0x2c4; // bool
		constexpr auto bIsEnemyHealth = 0x2c5; // bool
		constexpr auto bNameplateWidgetOptimizations = 0x2c6; // bool
		constexpr auto OriginalHealthSegmentWidth = 0x2c8; // int32_t
		constexpr auto ColorCorrection = 0x2cc; // EColorVisionDeficiency
		constexpr auto K2Node_CustomEvent_OutlineBorder_2 = 0x2d0; // UImage*
		constexpr auto K2Node_CustomEvent_OutlineBorder = 0x2d8; // UImage*
		constexpr auto Temp_int_Loop_Counter_Variable = 0x2e0; // int32_t
		constexpr auto Temp_int_Array_Index_Variable = 0x2e4; // int32_t
		constexpr auto K2Node_Event_IsDesignTime = 0x2e8; // bool
		constexpr auto K2Node_Event_HealthMeterState = 0x2ec; // FPlayerHealthMeterState
		constexpr auto CallFunc_GetAllChildren_ReturnValue = 0x308; // TArray<UWidget*>
		constexpr auto K2Node_MakeStruct_Margin = 0x318; // FMargin
		constexpr auto CallFunc_Array_Get_Item = 0x328; // UWidget*
		constexpr auto K2Node_DynamicCast_AsPlayer_Health_Meter_Segment = 0x330; // UUserWidget*
		constexpr auto K2Node_DynamicCast_bSuccess = 0x338; // bool
	}

	namespace n_AKSWeaponAssetDrop {
		constexpr auto OnProjectileSpawned = 0x3b8; // FMulticastInlineDelegate
		constexpr auto ReturnProjectile = 0x3e0; // AKSProjectile*
		constexpr auto WeaponComponent = 0x3f0; // UKSWeaponComponent*
		constexpr auto WeaponAsset = 0x3f8; // UKSWeaponAsset*
		constexpr auto WeaponComponentEquipmentId = 0x400; // FKSEquipmentId
		constexpr auto CachedWeaponAsset = 0x408; // UKSWeaponAsset*
		constexpr auto BundledAmmo = 0x4f8; // FBundledAmmoInfo
		constexpr auto AttachmentContainer = 0x518; // FKSWeaponDropAttachmentContainer
		constexpr auto bAttachWeaponComponentOnDrop = 0x640; // bool
		constexpr auto EquipmentContainer = 0x648; // FKSEquipmentContainer
		constexpr auto ReleasedCachedTimeSeconds = 0x870; // float
		constexpr auto CosmeticZOffset = 0x874; // float
	}

	namespace n_UBoneMaskFilter {
		constexpr auto BlendPoses = 0x28; // TArray<FInputBlendPose>
	}

	namespace n_UWBP_PlayerCustomizeScreen_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto BG = 0x528; // UImage*
		constexpr auto KeyboardBackButton = 0x530; // UWBP_KeyboardBackButton_C*
	}

	namespace n_AGamePlayerController_C {
		constexpr auto UberGraphFrame = 0xed8; // FPointerToUberGraphFrame
	}

	namespace n_UPawnAction {
		constexpr auto ChildAction = 0x28; // UPawnAction*
		constexpr auto ParentAction = 0x30; // UPawnAction*
		constexpr auto OwnerComponent = 0x38; // UPawnActionsComponent*
		constexpr auto Instigator = 0x40; // UObject*
		constexpr auto BrainComp = 0x48; // UBrainComponent*
		constexpr auto bAllowNewSameClassInstance = 0x80; // char : 1
		constexpr auto bReplaceActiveSameClassInstance = 0x80; // char : 1
		constexpr auto bShouldPauseMovement = 0x80; // char : 1
		constexpr auto bAlwaysNotifyOnFinished = 0x80; // char : 1
	}

	namespace n_UGeneralProjectSettings {
		constexpr auto CompanyName = 0x28; // FString
		constexpr auto CompanyDistinguishedName = 0x38; // FString
		constexpr auto CopyrightNotice = 0x48; // FString
		constexpr auto Description = 0x58; // FString
		constexpr auto Homepage = 0x68; // FString
		constexpr auto LicensingTerms = 0x78; // FString
		constexpr auto PrivacyPolicy = 0x88; // FString
		constexpr auto ProjectID = 0x98; // FGuid
		constexpr auto ProjectName = 0xa8; // FString
		constexpr auto ProjectVersion = 0xb8; // FString
		constexpr auto SupportContact = 0xc8; // FString
		constexpr auto ProjectDisplayedTitle = 0xd8; // FText
		constexpr auto ProjectDebugTitleInfo = 0xf0; // FText
		constexpr auto bShouldWindowPreserveAspectRatio = 0x108; // bool
		constexpr auto bUseBorderlessWindow = 0x109; // bool
		constexpr auto bStartInVR = 0x10a; // bool
		constexpr auto bStartInAR = 0x10b; // bool
		constexpr auto bSupportAR = 0x10c; // bool
		constexpr auto bAllowWindowResize = 0x10d; // bool
		constexpr auto bAllowClose = 0x10e; // bool
		constexpr auto bAllowMaximize = 0x10f; // bool
		constexpr auto bAllowMinimize = 0x110; // bool
	}

	namespace n_UMovieSceneEventSection {
		constexpr auto Events = 0xe0; // FNameCurve
		constexpr auto EventData = 0x158; // FMovieSceneEventSectionData
	}

	namespace n_URestrictedGameplayTagsList {
		constexpr auto ConfigFileName = 0x28; // FString
		constexpr auto RestrictedGameplayTagList = 0x38; // TArray<FRestrictedGameplayTagTableRow>
	}

	namespace n_ULevelSequencePlayer {
		constexpr auto OnCameraCut = 0x888; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionWorldPosition {
		constexpr auto WorldPositionShaderOffset = 0x40; // EWorldPositionIncludedOffsets
	}

	namespace n_UScrollBoxSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UAnimBoneCompressionCodec_ACL {
		constexpr auto SafetyFallbackCodec = 0x38; // UAnimBoneCompressionCodec*
	}

	namespace n_USub_Hero_ABP_Locomotion_C {
		constexpr auto AnimGraphNode_SaveCachedPose_8 = 0x10f0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SeqCurveEvalSkinned_30 = 0x11b8; // FAnimNode_SeqCurveEvalSkinned
		constexpr auto AnimGraphNode_BlendListByBool_55 = 0x1338; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_54 = 0x13e8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose_7 = 0x1498; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SeqCurveEvalSkinned_29 = 0x1560; // FAnimNode_SeqCurveEvalSkinned
		constexpr auto AnimGraphNode_BlendListByBool_53 = 0x16e0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SeqCurveEvalSkinned_28 = 0x1790; // FAnimNode_SeqCurveEvalSkinned
		constexpr auto AnimGraphNode_SeqCurveEvalSkinned_27 = 0x1910; // FAnimNode_SeqCurveEvalSkinned
		constexpr auto AnimGraphNode_SeqCurveEvalSkinned_26 = 0x1a90; // FAnimNode_SeqCurveEvalSkinned
		constexpr auto AnimGraphNode_SeqCurveEvalSkinned_25 = 0x1c10; // FAnimNode_SeqCurveEvalSkinned
		constexpr auto AnimGraphNode_SeqCurveEvalSkinned_24 = 0x1d90; // FAnimNode_SeqCurveEvalSkinned
		constexpr auto AnimGraphNode_SeqCurveEvalSkinned_23 = 0x1f10; // FAnimNode_SeqCurveEvalSkinned
		constexpr auto AnimGraphNode_SaveCachedPose_6 = 0x2090; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_52 = 0x2158; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_51 = 0x2208; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_50 = 0x22b8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose_5 = 0x2368; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_TransitionResult_149 = 0x2430; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_148 = 0x2468; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_147 = 0x24a0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_146 = 0x24d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_145 = 0x2510; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_144 = 0x2548; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_143 = 0x2580; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_142 = 0x25b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_141 = 0x25f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_140 = 0x2628; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_139 = 0x2660; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_138 = 0x2698; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_137 = 0x26d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_136 = 0x2708; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_135 = 0x2740; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_134 = 0x2778; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_133 = 0x27b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_132 = 0x27e8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_131 = 0x2820; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_130 = 0x2858; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_129 = 0x2890; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_128 = 0x28c8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_127 = 0x2900; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_126 = 0x2938; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_125 = 0x2970; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_124 = 0x29a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_123 = 0x29e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_122 = 0x2a18; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_121 = 0x2a50; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_120 = 0x2a88; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_119 = 0x2ac0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_118 = 0x2af8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_117 = 0x2b30; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_116 = 0x2b68; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_115 = 0x2ba0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_114 = 0x2bd8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_113 = 0x2c10; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_112 = 0x2c48; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_111 = 0x2c80; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_110 = 0x2cb8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_109 = 0x2cf0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_108 = 0x2d28; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_107 = 0x2d60; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_106 = 0x2d98; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_105 = 0x2dd0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_104 = 0x2e08; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_103 = 0x2e40; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_102 = 0x2e78; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_101 = 0x2eb0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_100 = 0x2ee8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_99 = 0x2f20; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_98 = 0x2f58; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_97 = 0x2f90; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_96 = 0x2fc8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_95 = 0x3000; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_94 = 0x3038; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_93 = 0x3070; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_92 = 0x30a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_91 = 0x30e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_90 = 0x3118; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_89 = 0x3150; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_88 = 0x3188; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_87 = 0x31c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_86 = 0x31f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_85 = 0x3230; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_84 = 0x3268; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_83 = 0x32a0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_82 = 0x32d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_81 = 0x3310; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_80 = 0x3348; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_79 = 0x3380; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_78 = 0x33b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_77 = 0x33f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_76 = 0x3428; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_75 = 0x3460; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_74 = 0x3498; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_73 = 0x34d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_72 = 0x3508; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_71 = 0x3540; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_70 = 0x3578; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_69 = 0x35b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_68 = 0x35e8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_67 = 0x3620; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_66 = 0x3658; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_65 = 0x3690; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_191 = 0x36c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_145 = 0x3750; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_190 = 0x38b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_144 = 0x3938; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_UseCachedPose_11 = 0x3a98; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByEnum_62 = 0x3ad0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_189 = 0x3b90; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_188 = 0x3c18; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_187 = 0x3ca0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_186 = 0x3d28; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_185 = 0x3db0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_184 = 0x3e38; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_183 = 0x3ec0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_182 = 0x3f48; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_181 = 0x3fd0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_180 = 0x4058; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_179 = 0x40e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_178 = 0x4168; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_143 = 0x41f0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_142 = 0x4350; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_141 = 0x44b0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_140 = 0x4610; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_139 = 0x4770; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_138 = 0x48d0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_137 = 0x4a30; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_136 = 0x4b90; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_135 = 0x4cf0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_134 = 0x4e50; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_133 = 0x4fb0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_132 = 0x5110; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_LayeredBoneBlend_8 = 0x5270; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByEnum_61 = 0x5340; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_60 = 0x5400; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_59 = 0x54c0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_58 = 0x5580; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_57 = 0x5640; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_TwoWayBlend_21 = 0x5700; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_49 = 0x57d8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TwoWayBlend_20 = 0x5888; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_48 = 0x5960; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TwoWayBlend_19 = 0x5a10; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_47 = 0x5ae8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TwoWayBlend_18 = 0x5b98; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_46 = 0x5c70; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_177 = 0x5d20; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_176 = 0x5da8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_175 = 0x5e30; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_174 = 0x5eb8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_173 = 0x5f40; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_172 = 0x5fc8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_171 = 0x6050; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_170 = 0x60d8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_169 = 0x6160; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_168 = 0x61e8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_167 = 0x6270; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_166 = 0x62f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_131 = 0x6380; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_130 = 0x64e0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_129 = 0x6640; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_128 = 0x67a0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_127 = 0x6900; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_126 = 0x6a60; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_125 = 0x6bc0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_124 = 0x6d20; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_123 = 0x6e80; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_122 = 0x6fe0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_121 = 0x7140; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_120 = 0x72a0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_BlendListByEnum_56 = 0x7400; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_55 = 0x74c0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_54 = 0x7580; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_53 = 0x7640; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_TwoWayBlend_17 = 0x7700; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_45 = 0x77d8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TwoWayBlend_16 = 0x7888; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_44 = 0x7960; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TwoWayBlend_15 = 0x7a10; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_43 = 0x7ae8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TwoWayBlend_14 = 0x7b98; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_42 = 0x7c70; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByEnum_52 = 0x7d20; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_41 = 0x7de0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_37 = 0x7e90; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequenceSkinned_119 = 0x7ed0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_BlendSpacePlayer_26 = 0x8030; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpaceSkinned_23 = 0x8120; // FAnimNode_BlendSpacePlayerSkinned
		constexpr auto AnimGraphNode_BlendSpacePlayer_25 = 0x8320; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpaceSkinned_22 = 0x8410; // FAnimNode_BlendSpacePlayerSkinned
		constexpr auto AnimGraphNode_BlendSpacePlayer_24 = 0x8610; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_23 = 0x8700; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_22 = 0x87f0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpaceSkinned_21 = 0x88e0; // FAnimNode_BlendSpacePlayerSkinned
		constexpr auto AnimGraphNode_BlendSpaceSkinned_20 = 0x8ae0; // FAnimNode_BlendSpacePlayerSkinned
		constexpr auto AnimGraphNode_BlendSpaceSkinned_19 = 0x8ce0; // FAnimNode_BlendSpacePlayerSkinned
		constexpr auto AnimGraphNode_BlendListByEnum_51 = 0x8ee0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_40 = 0x8fa0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_21 = 0x9050; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_20 = 0x9140; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_19 = 0x9230; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpaceSkinned_18 = 0x9320; // FAnimNode_BlendSpacePlayerSkinned
		constexpr auto AnimGraphNode_BlendSpaceSkinned_17 = 0x9520; // FAnimNode_BlendSpacePlayerSkinned
		constexpr auto AnimGraphNode_BlendSpaceSkinned_16 = 0x9720; // FAnimNode_BlendSpacePlayerSkinned
		constexpr auto AnimGraphNode_BlendListByEnum_50 = 0x9920; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_UseCachedPose_10 = 0x99e0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_39 = 0x9a18; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_165 = 0x9ac8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_UseCachedPose_9 = 0x9b50; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_8 = 0x9b88; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_7 = 0x9bc0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_38 = 0x9bf8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LayeredBoneBlend_7 = 0x9ca8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoWayBlend_13 = 0x9d78; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_LocalToComponentSpace_17 = 0x9e50; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_17 = 0x9e80; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto KSAnimGraphNode_SpeedWarp_4 = 0x9eb0; // FKSAnimNode_SpeedWarp
		constexpr auto AnimGraphNode_BlendListByBool_37 = 0x9fe0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_36 = 0xa090; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_ComponentToLocalSpace_16 = 0xa0d0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LookAt_6 = 0xa100; // FAnimNode_LookAt
		constexpr auto KSAnimGraphNode_OrientationWarp_14 = 0xa2c0; // FKSAnimNode_OrientationWarp
		constexpr auto AnimGraphNode_LocalToComponentSpace_16 = 0xa3e0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_SequencePlayer_164 = 0xa410; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LookAt_5 = 0xa4a0; // FAnimNode_LookAt
		constexpr auto AnimGraphNode_LookAt_4 = 0xa660; // FAnimNode_LookAt
		constexpr auto AnimGraphNode_StateResult_35 = 0xa820; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_163 = 0xa860; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SeqCurveEvalSkinned_22 = 0xa8e8; // FAnimNode_SeqCurveEvalSkinned
		constexpr auto AnimGraphNode_SequencePlayer_162 = 0xaa68; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_161 = 0xaaf0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_160 = 0xab78; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SeqCurveEvalSkinned_21 = 0xac00; // FAnimNode_SeqCurveEvalSkinned
		constexpr auto AnimGraphNode_SeqCurveEvalSkinned_20 = 0xad80; // FAnimNode_SeqCurveEvalSkinned
		constexpr auto AnimGraphNode_SeqCurveEvalSkinned_19 = 0xaf00; // FAnimNode_SeqCurveEvalSkinned
		constexpr auto AnimGraphNode_BlendListByEnum_49 = 0xb080; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_StateResult_34 = 0xb140; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequenceSkinned_118 = 0xb180; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_117 = 0xb2e0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_116 = 0xb440; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_115 = 0xb5a0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_114 = 0xb700; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_113 = 0xb860; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_112 = 0xb9c0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_111 = 0xbb20; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_110 = 0xbc80; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_109 = 0xbde0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_108 = 0xbf40; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_107 = 0xc0a0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_BlendListByEnum_48 = 0xc200; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_47 = 0xc2c0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_46 = 0xc380; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_45 = 0xc440; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_159 = 0xc500; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_158 = 0xc588; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_157 = 0xc610; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_156 = 0xc698; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_12 = 0xc720; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_36 = 0xc7f8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TwoWayBlend_11 = 0xc8a8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_35 = 0xc980; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TwoWayBlend_10 = 0xca30; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_34 = 0xcb08; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TwoWayBlend_9 = 0xcbb8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_33 = 0xcc90; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_155 = 0xcd40; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_154 = 0xcdc8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_153 = 0xce50; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_152 = 0xced8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_151 = 0xcf60; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_150 = 0xcfe8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_149 = 0xd070; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_148 = 0xd0f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TransitionResult_64 = 0xd180; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_63 = 0xd1b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_62 = 0xd1f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_61 = 0xd228; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_60 = 0xd260; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_59 = 0xd298; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_58 = 0xd2d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_57 = 0xd308; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_56 = 0xd340; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_55 = 0xd378; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_54 = 0xd3b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_53 = 0xd3e8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_52 = 0xd420; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_51 = 0xd458; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_50 = 0xd490; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_49 = 0xd4c8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_147 = 0xd500; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_106 = 0xd588; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_StateResult_33 = 0xd6e8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_146 = 0xd728; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_145 = 0xd7b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_144 = 0xd838; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_105 = 0xd8c0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_104 = 0xda20; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_103 = 0xdb80; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_BlendListByEnum_44 = 0xdce0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_StateResult_32 = 0xdda0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_143 = 0xdde0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_142 = 0xde68; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_141 = 0xdef0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_102 = 0xdf78; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_101 = 0xe0d8; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_100 = 0xe238; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_BlendListByEnum_43 = 0xe398; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_StateResult_31 = 0xe458; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_140 = 0xe498; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_139 = 0xe520; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_138 = 0xe5a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_99 = 0xe630; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_98 = 0xe790; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_97 = 0xe8f0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_BlendListByEnum_42 = 0xea50; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_StateResult_30 = 0xeb10; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_137 = 0xeb50; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_136 = 0xebd8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_135 = 0xec60; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_96 = 0xece8; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_95 = 0xee48; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_94 = 0xefa8; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_BlendListByEnum_41 = 0xf108; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_StateResult_29 = 0xf1c8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_6 = 0xf208; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_BlendListByEnum_40 = 0xf2c8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_32 = 0xf388; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_28 = 0xf438; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_134 = 0xf478; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_27 = 0xf500; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_18 = 0xf540; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpaceSkinned_15 = 0xf630; // FAnimNode_BlendSpacePlayerSkinned
		constexpr auto AnimGraphNode_ApplyAdditive_3 = 0xf830; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_BlendSpacePlayer_17 = 0xf908; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_LookAt_3 = 0xfa00; // FAnimNode_LookAt
		constexpr auto KSAnimGraphNode_OrientationWarp_13 = 0xfbc0; // FKSAnimNode_OrientationWarp
		constexpr auto AnimGraphNode_LookAt_2 = 0xfce0; // FAnimNode_LookAt
		constexpr auto AnimGraphNode_ComponentToLocalSpace_15 = 0xfea0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto KSAnimGraphNode_SpeedWarp_3 = 0xfed0; // FKSAnimNode_SpeedWarp
		constexpr auto AnimGraphNode_LookAt = 0x10000; // FAnimNode_LookAt
		constexpr auto AnimGraphNode_LocalToComponentSpace_15 = 0x101c0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_StateResult_26 = 0x101f0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequenceEvaluator_2 = 0x10230; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator = 0x10288; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByBool_31 = 0x102e0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_25 = 0x10390; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_133 = 0x103d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_93 = 0x10458; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_132 = 0x105b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_92 = 0x10640; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_131 = 0x107a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_130 = 0x10828; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_91 = 0x108b0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_90 = 0x10a10; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_BlendListByEnum_39 = 0x10b70; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_StateResult_24 = 0x10c30; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_129 = 0x10c70; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SeqCurveEvalSkinned_18 = 0x10cf8; // FAnimNode_SeqCurveEvalSkinned
		constexpr auto AnimGraphNode_SequencePlayer_128 = 0x10e78; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_127 = 0x10f00; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_126 = 0x10f88; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SeqCurveEvalSkinned_17 = 0x11010; // FAnimNode_SeqCurveEvalSkinned
		constexpr auto AnimGraphNode_SeqCurveEvalSkinned_16 = 0x11190; // FAnimNode_SeqCurveEvalSkinned
		constexpr auto AnimGraphNode_SeqCurveEvalSkinned_15 = 0x11310; // FAnimNode_SeqCurveEvalSkinned
		constexpr auto AnimGraphNode_BlendListByEnum_38 = 0x11490; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_StateResult_23 = 0x11550; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_UseCachedPose_6 = 0x11590; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_125 = 0x115c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_30 = 0x11650; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LayeredBoneBlend_6 = 0x11700; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_124 = 0x117d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_UseCachedPose_5 = 0x11858; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_29 = 0x11890; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_123 = 0x11940; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_5 = 0x119c8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_122 = 0x11a98; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_121 = 0x11b20; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_120 = 0x11ba8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_28 = 0x11c30; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_27 = 0x11ce0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_26 = 0x11d90; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_119 = 0x11e40; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_118 = 0x11ec8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_25 = 0x11f50; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_4 = 0x12000; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_3 = 0x12038; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_4 = 0x12070; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_LayeredBoneBlend_3 = 0x12140; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0x12210; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose = 0x12248; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_2 = 0x12280; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_LayeredBoneBlend = 0x12350; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_117 = 0x12420; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_116 = 0x124a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_115 = 0x12530; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_114 = 0x125b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_113 = 0x12640; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_112 = 0x126c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_37 = 0x12750; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_36 = 0x12810; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_24 = 0x128d0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_22 = 0x12980; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequenceSkinned_89 = 0x129c0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_111 = 0x12b20; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_88 = 0x12ba8; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_87 = 0x12d08; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_86 = 0x12e68; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_110 = 0x12fc8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_109 = 0x13050; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_108 = 0x130d8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_35 = 0x13160; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_StateResult_21 = 0x13220; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_107 = 0x13260; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_106 = 0x132e8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_105 = 0x13370; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_104 = 0x133f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_103 = 0x13480; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_102 = 0x13508; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_101 = 0x13590; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_100 = 0x13618; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_99 = 0x136a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_98 = 0x13728; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_97 = 0x137b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_96 = 0x13838; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_95 = 0x138c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_94 = 0x13948; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_93 = 0x139d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_92 = 0x13a58; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_91 = 0x13ae0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_90 = 0x13b68; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_89 = 0x13bf0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_88 = 0x13c78; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_87 = 0x13d00; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_86 = 0x13d88; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_85 = 0x13e10; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_84 = 0x13e98; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_85 = 0x13f20; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_84 = 0x14080; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_83 = 0x141e0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_82 = 0x14340; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_81 = 0x144a0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_80 = 0x14600; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_79 = 0x14760; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_78 = 0x148c0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_77 = 0x14a20; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_76 = 0x14b80; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_75 = 0x14ce0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_74 = 0x14e40; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_73 = 0x14fa0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_72 = 0x15100; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_71 = 0x15260; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_70 = 0x153c0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_69 = 0x15520; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_68 = 0x15680; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_67 = 0x157e0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_66 = 0x15940; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_65 = 0x15aa0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_64 = 0x15c00; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_63 = 0x15d60; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_62 = 0x15ec0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_BlendListByEnum_34 = 0x16020; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_33 = 0x160e0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_32 = 0x161a0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_31 = 0x16260; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_30 = 0x16320; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_29 = 0x163e0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_28 = 0x164a0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_27 = 0x16560; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_TwoWayBlend_8 = 0x16620; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_23 = 0x166f8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TwoWayBlend_7 = 0x167a8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_22 = 0x16880; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TwoWayBlend_6 = 0x16930; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_21 = 0x16a08; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TwoWayBlend_5 = 0x16ab8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_20 = 0x16b90; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TwoWayBlend_4 = 0x16c40; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_19 = 0x16d18; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TwoWayBlend_3 = 0x16dc8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_18 = 0x16ea0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TwoWayBlend_2 = 0x16f50; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_17 = 0x17028; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TwoWayBlend = 0x170d8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_16 = 0x171b0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByEnum_26 = 0x17260; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_25 = 0x17320; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_15 = 0x173e0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_20 = 0x17490; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_16 = 0x174d0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_15 = 0x175c0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_14 = 0x176b0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpaceSkinned_14 = 0x177a0; // FAnimNode_BlendSpacePlayerSkinned
		constexpr auto AnimGraphNode_BlendSpaceSkinned_13 = 0x179a0; // FAnimNode_BlendSpacePlayerSkinned
		constexpr auto AnimGraphNode_BlendSpaceSkinned_12 = 0x17ba0; // FAnimNode_BlendSpacePlayerSkinned
		constexpr auto AnimGraphNode_BlendListByEnum_24 = 0x17da0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_14 = 0x17e60; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_13 = 0x17f10; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_12 = 0x18000; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_11 = 0x180f0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpaceSkinned_11 = 0x181e0; // FAnimNode_BlendSpacePlayerSkinned
		constexpr auto AnimGraphNode_BlendSpaceSkinned_10 = 0x183e0; // FAnimNode_BlendSpacePlayerSkinned
		constexpr auto AnimGraphNode_BlendSpaceSkinned_9 = 0x185e0; // FAnimNode_BlendSpacePlayerSkinned
		constexpr auto AnimGraphNode_BlendListByEnum_23 = 0x187e0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_ApplyAdditive_2 = 0x188a0; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_BlendSpacePlayer_10 = 0x18978; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_TransitionResult_48 = 0x18a68; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_47 = 0x18aa0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_46 = 0x18ad8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_45 = 0x18b10; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_44 = 0x18b48; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_43 = 0x18b80; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_42 = 0x18bb8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_41 = 0x18bf0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_40 = 0x18c28; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_39 = 0x18c60; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_38 = 0x18c98; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_37 = 0x18cd0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_36 = 0x18d08; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_35 = 0x18d40; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_34 = 0x18d78; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_33 = 0x18db0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_83 = 0x18de8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_61 = 0x18e70; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_StateResult_19 = 0x18fd0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequenceSkinned_60 = 0x19010; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_59 = 0x19170; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_58 = 0x192d0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_82 = 0x19430; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_81 = 0x194b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_80 = 0x19540; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ComponentToLocalSpace_14 = 0x195c8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_14 = 0x195f8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto KSAnimGraphNode_OrientationWarp_12 = 0x19628; // FKSAnimNode_OrientationWarp
		constexpr auto AnimGraphNode_BlendListByEnum_22 = 0x19748; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_StateResult_18 = 0x19808; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequenceSkinned_57 = 0x19848; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_56 = 0x199a8; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_55 = 0x19b08; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_79 = 0x19c68; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_78 = 0x19cf0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_77 = 0x19d78; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ComponentToLocalSpace_13 = 0x19e00; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_13 = 0x19e30; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto KSAnimGraphNode_OrientationWarp_11 = 0x19e60; // FKSAnimNode_OrientationWarp
		constexpr auto AnimGraphNode_BlendListByEnum_21 = 0x19f80; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_StateResult_17 = 0x1a040; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequenceSkinned_54 = 0x1a080; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_53 = 0x1a1e0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_52 = 0x1a340; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_76 = 0x1a4a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_75 = 0x1a528; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_74 = 0x1a5b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ComponentToLocalSpace_12 = 0x1a638; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_12 = 0x1a668; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto KSAnimGraphNode_OrientationWarp_10 = 0x1a698; // FKSAnimNode_OrientationWarp
		constexpr auto AnimGraphNode_BlendListByEnum_20 = 0x1a7b8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_StateResult_16 = 0x1a878; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequenceSkinned_51 = 0x1a8b8; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_50 = 0x1aa18; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_49 = 0x1ab78; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_73 = 0x1acd8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_72 = 0x1ad60; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_71 = 0x1ade8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ComponentToLocalSpace_11 = 0x1ae70; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_11 = 0x1aea0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto KSAnimGraphNode_OrientationWarp_9 = 0x1aed0; // FKSAnimNode_OrientationWarp
		constexpr auto AnimGraphNode_BlendListByEnum_19 = 0x1aff0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_StateResult_15 = 0x1b0b0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_5 = 0x1b0f0; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_BlendListByBool_13 = 0x1b1b0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LocalToComponentSpace_10 = 0x1b260; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto KSAnimGraphNode_SpeedWarp_2 = 0x1b290; // FKSAnimNode_SpeedWarp
		constexpr auto AnimGraphNode_ComponentToLocalSpace_10 = 0x1b3c0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_StateResult_14 = 0x1b3f0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpaceSkinned_8 = 0x1b430; // FAnimNode_BlendSpacePlayerSkinned
		constexpr auto AnimGraphNode_BlendSpaceSkinned_7 = 0x1b630; // FAnimNode_BlendSpacePlayerSkinned
		constexpr auto AnimGraphNode_BlendSpaceSkinned_6 = 0x1b830; // FAnimNode_BlendSpacePlayerSkinned
		constexpr auto AnimGraphNode_BlendListByEnum_18 = 0x1ba30; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendSpacePlayer_9 = 0x1baf0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_8 = 0x1bbe0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_7 = 0x1bcd0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_12 = 0x1bdc0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByEnum_17 = 0x1be70; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendSpaceSkinned_5 = 0x1bf30; // FAnimNode_BlendSpacePlayerSkinned
		constexpr auto AnimGraphNode_BlendSpaceSkinned_4 = 0x1c130; // FAnimNode_BlendSpacePlayerSkinned
		constexpr auto AnimGraphNode_BlendSpaceSkinned_3 = 0x1c330; // FAnimNode_BlendSpacePlayerSkinned
		constexpr auto AnimGraphNode_BlendSpacePlayer_6 = 0x1c530; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_5 = 0x1c620; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_4 = 0x1c710; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpaceSkinned_2 = 0x1c800; // FAnimNode_BlendSpacePlayerSkinned
		constexpr auto AnimGraphNode_BlendSpacePlayer_3 = 0x1ca00; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpaceSkinned = 0x1caf0; // FAnimNode_BlendSpacePlayerSkinned
		constexpr auto AnimGraphNode_BlendSpacePlayer_2 = 0x1ccf0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_ApplyAdditive = 0x1cde0; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_BlendSpacePlayer = 0x1ceb8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_TransitionResult_32 = 0x1cfa8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_31 = 0x1cfe0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_30 = 0x1d018; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_29 = 0x1d050; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_28 = 0x1d088; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_27 = 0x1d0c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_26 = 0x1d0f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_25 = 0x1d130; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_24 = 0x1d168; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_23 = 0x1d1a0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_22 = 0x1d1d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_21 = 0x1d210; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_20 = 0x1d248; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_19 = 0x1d280; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_18 = 0x1d2b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_17 = 0x1d2f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_70 = 0x1d328; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_48 = 0x1d3b0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_StateResult_13 = 0x1d510; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_69 = 0x1d550; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_47 = 0x1d5d8; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_68 = 0x1d738; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_67 = 0x1d7c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_66 = 0x1d848; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_46 = 0x1d8d0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_45 = 0x1da30; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_44 = 0x1db90; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_BlendListByEnum_16 = 0x1dcf0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_LocalToComponentSpace_9 = 0x1ddb0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto KSAnimGraphNode_OrientationWarp_8 = 0x1dde0; // FKSAnimNode_OrientationWarp
		constexpr auto AnimGraphNode_ComponentToLocalSpace_9 = 0x1df00; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_StateResult_12 = 0x1df30; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_65 = 0x1df70; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_43 = 0x1dff8; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_64 = 0x1e158; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_63 = 0x1e1e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_62 = 0x1e268; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_42 = 0x1e2f0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_41 = 0x1e450; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_40 = 0x1e5b0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_BlendListByEnum_15 = 0x1e710; // FAnimNode_BlendListByEnum
		constexpr auto KSAnimGraphNode_OrientationWarp_7 = 0x1e7d0; // FKSAnimNode_OrientationWarp
		constexpr auto AnimGraphNode_LocalToComponentSpace_8 = 0x1e8f0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_8 = 0x1e920; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_StateResult_11 = 0x1e950; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_61 = 0x1e990; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_39 = 0x1ea18; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_60 = 0x1eb78; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_59 = 0x1ec00; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_58 = 0x1ec88; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_38 = 0x1ed10; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_37 = 0x1ee70; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_36 = 0x1efd0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_BlendListByEnum_14 = 0x1f130; // FAnimNode_BlendListByEnum
		constexpr auto KSAnimGraphNode_OrientationWarp_6 = 0x1f1f0; // FKSAnimNode_OrientationWarp
		constexpr auto AnimGraphNode_LocalToComponentSpace_7 = 0x1f310; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_7 = 0x1f340; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_StateResult_10 = 0x1f370; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_57 = 0x1f3b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_35 = 0x1f438; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_56 = 0x1f598; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_55 = 0x1f620; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_54 = 0x1f6a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_34 = 0x1f730; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_33 = 0x1f890; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_32 = 0x1f9f0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_BlendListByEnum_13 = 0x1fb50; // FAnimNode_BlendListByEnum
		constexpr auto KSAnimGraphNode_OrientationWarp_5 = 0x1fc10; // FKSAnimNode_OrientationWarp
		constexpr auto AnimGraphNode_ComponentToLocalSpace_6 = 0x1fd30; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_6 = 0x1fd60; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_StateResult_9 = 0x1fd90; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_4 = 0x1fdd0; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_StateResult_8 = 0x1fe90; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_3 = 0x1fed0; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_LocalToComponentSpace_5 = 0x1ff90; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_5 = 0x1ffc0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto KSAnimGraphNode_SpeedWarp = 0x1fff0; // FKSAnimNode_SpeedWarp
		constexpr auto AnimGraphNode_BlendListByBool_11 = 0x20120; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_7 = 0x201d0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendListByEnum_12 = 0x20210; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_10 = 0x202d0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SeqCurveEvalSkinned_14 = 0x20380; // FAnimNode_SeqCurveEvalSkinned
		constexpr auto AnimGraphNode_SequencePlayer_53 = 0x20500; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SeqCurveEvalSkinned_13 = 0x20588; // FAnimNode_SeqCurveEvalSkinned
		constexpr auto AnimGraphNode_SequencePlayer_52 = 0x20708; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_11 = 0x20790; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_9 = 0x20850; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_8 = 0x20900; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_51 = 0x209b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_50 = 0x20a38; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SeqCurveEvalSkinned_12 = 0x20ac0; // FAnimNode_SeqCurveEvalSkinned
		constexpr auto AnimGraphNode_SeqCurveEvalSkinned_11 = 0x20c40; // FAnimNode_SeqCurveEvalSkinned
		constexpr auto AnimGraphNode_BlendListByEnum_10 = 0x20dc0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_49 = 0x20e80; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_48 = 0x20f08; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SeqCurveEvalSkinned_10 = 0x20f90; // FAnimNode_SeqCurveEvalSkinned
		constexpr auto AnimGraphNode_SeqCurveEvalSkinned_9 = 0x21110; // FAnimNode_SeqCurveEvalSkinned
		constexpr auto AnimGraphNode_BlendListByEnum_9 = 0x21290; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_7 = 0x21350; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SeqCurveEvalSkinned_8 = 0x21400; // FAnimNode_SeqCurveEvalSkinned
		constexpr auto AnimGraphNode_SequencePlayer_47 = 0x21580; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SeqCurveEvalSkinned_7 = 0x21608; // FAnimNode_SeqCurveEvalSkinned
		constexpr auto AnimGraphNode_SequencePlayer_46 = 0x21788; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_8 = 0x21810; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_6 = 0x218d0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_45 = 0x21980; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_31 = 0x21a08; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_44 = 0x21b68; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_30 = 0x21bf0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_43 = 0x21d50; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_29 = 0x21dd8; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_42 = 0x21f38; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_28 = 0x21fc0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_BlendListByBool_5 = 0x22120; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_41 = 0x221d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_40 = 0x22258; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SeqCurveEvalSkinned_6 = 0x222e0; // FAnimNode_SeqCurveEvalSkinned
		constexpr auto AnimGraphNode_SeqCurveEvalSkinned_5 = 0x22460; // FAnimNode_SeqCurveEvalSkinned
		constexpr auto AnimGraphNode_BlendListByEnum_7 = 0x225e0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_39 = 0x226a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_38 = 0x22728; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SeqCurveEvalSkinned_4 = 0x227b0; // FAnimNode_SeqCurveEvalSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_27 = 0x22930; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_26 = 0x22a90; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SeqCurveEvalSkinned_3 = 0x22bf0; // FAnimNode_SeqCurveEvalSkinned
		constexpr auto AnimGraphNode_SequencePlayer_37 = 0x22d70; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_36 = 0x22df8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_35 = 0x22e80; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_25 = 0x22f08; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_34 = 0x23068; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_24 = 0x230f0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_BlendListByEnum_6 = 0x23250; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_5 = 0x23310; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_4 = 0x233d0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_6 = 0x23480; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_2 = 0x234c0; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_TransitionResult_16 = 0x23580; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_15 = 0x235b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_14 = 0x235f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_13 = 0x23628; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_12 = 0x23660; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_11 = 0x23698; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_10 = 0x236d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_9 = 0x23708; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_8 = 0x23740; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_7 = 0x23778; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_6 = 0x237b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_5 = 0x237e8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_4 = 0x23820; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_3 = 0x23858; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x23890; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult = 0x238c8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_33 = 0x23900; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_23 = 0x23988; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_StateResult_5 = 0x23ae8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_32 = 0x23b28; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_22 = 0x23bb0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_31 = 0x23d10; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_21 = 0x23d98; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_30 = 0x23ef8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_29 = 0x23f80; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_20 = 0x24008; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_19 = 0x24168; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_BlendListByEnum_4 = 0x242c8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_LocalToComponentSpace_4 = 0x24388; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto KSAnimGraphNode_OrientationWarp_4 = 0x243b8; // FKSAnimNode_OrientationWarp
		constexpr auto AnimGraphNode_ComponentToLocalSpace_4 = 0x244d8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_StateResult_4 = 0x24508; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_28 = 0x24548; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_18 = 0x245d0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_27 = 0x24730; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_17 = 0x247b8; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_26 = 0x24918; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_25 = 0x249a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_16 = 0x24a28; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_15 = 0x24b88; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_BlendListByEnum_3 = 0x24ce8; // FAnimNode_BlendListByEnum
		constexpr auto KSAnimGraphNode_OrientationWarp_3 = 0x24da8; // FKSAnimNode_OrientationWarp
		constexpr auto AnimGraphNode_LocalToComponentSpace_3 = 0x24ec8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_3 = 0x24ef8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_StateResult_3 = 0x24f28; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_24 = 0x24f68; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_14 = 0x24ff0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_23 = 0x25150; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_13 = 0x251d8; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_22 = 0x25338; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_21 = 0x253c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_12 = 0x25448; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_11 = 0x255a8; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_BlendListByEnum_2 = 0x25708; // FAnimNode_BlendListByEnum
		constexpr auto KSAnimGraphNode_OrientationWarp_2 = 0x257c8; // FKSAnimNode_OrientationWarp
		constexpr auto AnimGraphNode_LocalToComponentSpace_2 = 0x258e8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_2 = 0x25918; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_StateResult_2 = 0x25948; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_20 = 0x25988; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_10 = 0x25a10; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_19 = 0x25b70; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_9 = 0x25bf8; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_18 = 0x25d58; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_17 = 0x25de0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_8 = 0x25e68; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequenceSkinned_7 = 0x25fc8; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_BlendListByEnum = 0x26128; // FAnimNode_BlendListByEnum
		constexpr auto KSAnimGraphNode_OrientationWarp = 0x261e8; // FKSAnimNode_OrientationWarp
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x26308; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x26338; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_StateResult = 0x26368; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x263a8; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SaveCachedPose_4 = 0x26468; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_3 = 0x26530; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceSkinned_6 = 0x265e0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_16 = 0x26740; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_5 = 0x267c8; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_15 = 0x26928; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SaveCachedPose_3 = 0x269b0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SequenceSkinned_4 = 0x26a78; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_14 = 0x26bd8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_13 = 0x26c60; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned_3 = 0x26ce8; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x26e48; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose_2 = 0x26ef8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_12 = 0x26fc0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SeqCurveEvalSkinned_2 = 0x27048; // FAnimNode_SeqCurveEvalSkinned
		constexpr auto AnimGraphNode_SeqCurveEvalSkinned = 0x271c8; // FAnimNode_SeqCurveEvalSkinned
		constexpr auto AnimGraphNode_Root = 0x27348; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer_11 = 0x27388; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_10 = 0x27410; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_9 = 0x27498; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_8 = 0x27520; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_7 = 0x275a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_6 = 0x27630; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0x276b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x27740; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x277c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Inertialization = 0x27850; // FAnimNode_Inertialization
		constexpr auto AnimGraphNode_BlendListByBool = 0x278d0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceSkinned_2 = 0x27980; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x27ae0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceSkinned = 0x27b68; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SequencePlayer = 0x27cc8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SaveCachedPose = 0x27d50; // FAnimNode_SaveCachedPose
		constexpr auto MaxMantleHt = 0x27e18; // float
		constexpr auto Max2StoryMantleHt = 0x27e1c; // float
		constexpr auto StringMantlesTogether = 0x27e20; // bool
		constexpr auto Starting a Pivot = 0x27e21; // bool
		constexpr auto Dodge Rolling BP = 0x27e22; // bool
		constexpr auto InitialDistanceFromJumpLand = 0x27e24; // float
		constexpr auto Cached Stop Angle = 0x27e28; // float
		constexpr auto Turn Eng Crouch = 0x27e30; // UAnimSequenceBase*
		constexpr auto TurnCrouch = 0x27e38; // UAnimSequenceBase*
		constexpr auto Turn Eng = 0x27e40; // UAnimSequenceBase*
		constexpr auto Turn = 0x27e48; // UAnimSequenceBase*
		constexpr auto Hero ABP = 0x27e50; // UKSCharacterAnimInst*
		constexpr auto Character = 0x27e58; // AKSCharacter*
		constexpr auto bConfirmedStopping = 0x27e60; // bool
		constexpr auto LocomotionDirectionBlendTime = 0x27e64; // float
		constexpr auto TurnNonComCrouch = 0x27e68; // UAnimSequenceBase*
		constexpr auto TurnNonCom = 0x27e70; // UAnimSequenceBase*
		constexpr auto bStartUsesPivotLocation = 0x27e78; // bool
		constexpr auto CachedPivotAngle = 0x27e7c; // float
		constexpr auto TESTSprintIntro = 0x27e80; // bool
		constexpr auto MasterWeaponIsGrenade = 0x27e81; // bool
		constexpr auto LocomotionThreshold = 0x27e84; // float
		constexpr auto bUseWalkStop = 0x27e88; // bool
		constexpr auto PrototypeLocomotionGraphEnable = 0x27e89; // bool
		constexpr auto DisableUpperBodyTurnInPlace = 0x27e8a; // bool
		constexpr auto CachedPivotDirection = 0x27e8b; // EKSMovementDirection
		constexpr auto Turn Buildup Crouch = 0x27e90; // UAnimSequenceBase*
		constexpr auto Turn Buildup = 0x27e98; // UAnimSequenceBase*
		constexpr auto bExitingMantleBP = 0x27ea0; // bool
		constexpr auto bPlayingJumpLandingBP = 0x27ea1; // bool
		constexpr auto CallFunc_BreakVector_X = 0x27ea4; // float
		constexpr auto CallFunc_BreakVector_Y = 0x27ea8; // float
		constexpr auto CallFunc_BreakVector_Z = 0x27eac; // float
		constexpr auto CallFunc_BreakVector_X_2 = 0x27eb0; // float
		constexpr auto CallFunc_BreakVector_Y_2 = 0x27eb4; // float
		constexpr auto CallFunc_BreakVector_Z_2 = 0x27eb8; // float
		constexpr auto CallFunc_BreakVector_X_3 = 0x27ebc; // float
		constexpr auto CallFunc_BreakVector_Y_3 = 0x27ec0; // float
		constexpr auto CallFunc_BreakVector_Z_3 = 0x27ec4; // float
		constexpr auto CallFunc_BreakVector_X_4 = 0x27ec8; // float
		constexpr auto CallFunc_BreakVector_Y_4 = 0x27ecc; // float
		constexpr auto CallFunc_BreakVector_Z_4 = 0x27ed0; // float
		constexpr auto Temp_bool_Variable = 0x27ed4; // bool
		constexpr auto CallFunc_BreakVector_X_5 = 0x27ed8; // float
		constexpr auto CallFunc_BreakVector_Y_5 = 0x27edc; // float
		constexpr auto CallFunc_BreakVector_Z_5 = 0x27ee0; // float
		constexpr auto CallFunc_BreakVector_X_6 = 0x27ee4; // float
		constexpr auto CallFunc_BreakVector_Y_6 = 0x27ee8; // float
		constexpr auto CallFunc_BreakVector_Z_6 = 0x27eec; // float
		constexpr auto K2Node_Select_Default = 0x27ef0; // float
		constexpr auto Temp_float_Variable = 0x27ef4; // float
		constexpr auto Temp_float_Variable_2 = 0x27ef8; // float
		constexpr auto Temp_bool_Variable_2 = 0x27efc; // bool
		constexpr auto K2Node_Select_Default_2 = 0x27f00; // float
		constexpr auto K2Node_DynamicCast_AsKSCharacter = 0x27f08; // AKSCharacter*
		constexpr auto K2Node_DynamicCast_bSuccess = 0x27f10; // bool
		constexpr auto K2Node_Event_InMantleHeight = 0x27f14; // float
		constexpr auto K2Node_Event_bInVault = 0x27f18; // bool
		constexpr auto K2Node_Event_InVaultDrop = 0x27f1c; // float
		constexpr auto K2Node_Event_InUpDuration = 0x27f20; // float
		constexpr auto K2Node_Event_InAcrossDuration = 0x27f24; // float
		constexpr auto K2Node_Event_InDownDuration = 0x27f28; // float
		constexpr auto K2Node_Event_InMantleName = 0x27f2c; // FName
		constexpr auto K2Node_Event_DeltaTimeX = 0x27f34; // float
		constexpr auto K2Node_Event_AnimationVariant = 0x27f38; // EKSTurnInPlaceAnimationVariant
		constexpr auto K2Node_Event_DelayTime = 0x27f3c; // float
		constexpr auto K2Node_DynamicCast_AsKSCharacter_Anim_Inst = 0x27f40; // UKSCharacterAnimInst*
		constexpr auto K2Node_DynamicCast_bSuccess_2 = 0x27f48; // bool
		constexpr auto K2Node_SwitchEnum_CmpSuccess = 0x27f49; // bool
		constexpr auto CallFunc_GetSkinnedAnimSequence_bHasOverride = 0x27f4a; // bool
		constexpr auto CallFunc_GetSkinnedAnimSequence_bHasOverride_2 = 0x27f4b; // bool
		constexpr auto CallFunc_GetSkinnedAnimSequence_bHasOverride_3 = 0x27f4c; // bool
		constexpr auto CallFunc_GetSkinnedAnimSequence_bHasOverride_4 = 0x27f4d; // bool
		constexpr auto CallFunc_GetSkinnedAnimSequence_bHasOverride_5 = 0x27f4e; // bool
		constexpr auto CallFunc_GetSkinnedAnimSequence_bHasOverride_6 = 0x27f4f; // bool
		constexpr auto CallFunc_GetSkinnedAnimSequence_bHasOverride_7 = 0x27f50; // bool
		constexpr auto CallFunc_GetSkinnedAnimSequence_bHasOverride_8 = 0x27f51; // bool
		constexpr auto CallFunc_GetSkinnedAnimSequence_bHasOverride_9 = 0x27f52; // bool
		constexpr auto CallFunc_GetSkinnedAnimSequence_bHasOverride_10 = 0x27f53; // bool
		constexpr auto CallFunc_GetSkinnedAnimSequence_bHasOverride_11 = 0x27f54; // bool
		constexpr auto CallFunc_GetSkinnedAnimSequence_bHasOverride_12 = 0x27f55; // bool
		constexpr auto K2Node_Event_StopLocation = 0x27f58; // FVector
		constexpr auto K2Node_Event_PivotLocation = 0x27f64; // FVector
		constexpr auto K2Node_DynamicCast_AsKSCharacter_2 = 0x27f70; // AKSCharacter*
		constexpr auto K2Node_DynamicCast_bSuccess_3 = 0x27f78; // bool
		constexpr auto CallFunc_GetSkinnedAnimSequence_bHasOverride_13 = 0x27f79; // bool
		constexpr auto CallFunc_GetSkinnedAnimSequence_bHasOverride_14 = 0x27f7a; // bool
		constexpr auto CallFunc_GetSkinnedAnimSequence_bHasOverride_15 = 0x27f7b; // bool
		constexpr auto CallFunc_GetSkinnedAnimSequence_bHasOverride_16 = 0x27f7c; // bool
	}

	namespace n_UWBP_ProgressionCardSlot_RankedXP_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto RankDownAnim = 0x240; // UWidgetAnimation*
		constexpr auto RankUpAnim = 0x248; // UWidgetAnimation*
		constexpr auto BadgeMaterialize = 0x250; // UImage*
		constexpr auto Block01 = 0x258; // UImage*
		constexpr auto Block02 = 0x260; // UImage*
		constexpr auto Block03 = 0x268; // UImage*
		constexpr auto Block04 = 0x270; // UImage*
		constexpr auto Block05 = 0x278; // UImage*
		constexpr auto Block06 = 0x280; // UImage*
		constexpr auto Block07 = 0x288; // UImage*
		constexpr auto Block08 = 0x290; // UImage*
		constexpr auto Category = 0x298; // UTextBlock*
		constexpr auto Chevron1 = 0x2a0; // UWBP_AdditiveImage_C*
		constexpr auto Chevron2 = 0x2a8; // UWBP_AdditiveImage_C*
		constexpr auto Chevron3 = 0x2b0; // UWBP_AdditiveImage_C*
		constexpr auto Flare01 = 0x2b8; // UImage*
		constexpr auto Flare02 = 0x2c0; // UImage*
		constexpr auto Flare03 = 0x2c8; // UImage*
		constexpr auto Flare04 = 0x2d0; // UImage*
		constexpr auto Flare05 = 0x2d8; // UImage*
		constexpr auto Flare06 = 0x2e0; // UImage*
		constexpr auto Glow01 = 0x2e8; // UImage*
		constexpr auto Glow02 = 0x2f0; // UImage*
		constexpr auto GrandMasterPoints = 0x2f8; // UWBP_LerpingNumberWidget_C*
		constexpr auto GrandMasterPointsWrapper = 0x300; // UCanvasPanel*
		constexpr auto Particles01 = 0x308; // UImage*
		constexpr auto PointsEarned = 0x310; // UTextBlock*
		constexpr auto RankBadge = 0x318; // UWBP_RankedIcon_C*
		constexpr auto RankChangeText = 0x320; // UTextBlock*
		constexpr auto RankedProgressSwitcher = 0x328; // UWidgetSwitcher*
		constexpr auto Scanlines01 = 0x330; // UImage*
		constexpr auto TextGlow01 = 0x338; // UImage*
		constexpr auto WBP_ProgressionTally_C_1 = 0x340; // UWBP_ProgressionTally_C*
		constexpr auto XPProgressEarnedBar = 0x348; // UWBP_ProgressEarnedBar_C*
	}

	namespace n_UWrapBox {
		constexpr auto InnerSlotPadding = 0x128; // FVector2D
		constexpr auto WrapWidth = 0x130; // float
		constexpr auto bExplicitWrapWidth = 0x134; // bool
	}

	namespace n_UComboBox {
		constexpr auto Items = 0x110; // TArray<UObject*>
		constexpr auto OnGenerateWidgetEvent = 0x120; // FDelegate
		constexpr auto bIsFocusable = 0x130; // bool
	}

	namespace n_UWBP_NewsRotatorWidget_C {
		constexpr auto UberGraphFrame = 0x538; // FPointerToUberGraphFrame
		constexpr auto Anim_OnHover = 0x540; // UWidgetAnimation*
		constexpr auto Anim_ChangeNewsImage = 0x548; // UWidgetAnimation*
		constexpr auto ActionButton = 0x550; // UStandardButtonNoArt_C*
		constexpr auto LeftNavPrompt = 0x558; // UWBP_ControllerPrompt_C*
		constexpr auto NewsImage = 0x560; // UKSAsyncImage*
		constexpr auto NewsImageAnimateOut = 0x568; // UKSAsyncImage*
		constexpr auto RightNavPrompt = 0x570; // UWBP_ControllerPrompt_C*
		constexpr auto RotatorButtons = 0x578; // UHorizontalBox*
		constexpr auto SlideTitle = 0x580; // UTextBlock*
		constexpr auto SlideTitle_AnimOut = 0x588; // UTextBlock*
		constexpr auto SpacerText = 0x590; // UTextBlock*
		constexpr auto SpacerText_AnimOut = 0x598; // UTextBlock*
		constexpr auto SpacerTextWrapper = 0x5a0; // UScaleBox*
		constexpr auto SpacerTextWrapper_AnimOut = 0x5a8; // UScaleBox*
		constexpr auto TextField_2 = 0x5b0; // UTextBlock*
		constexpr auto TextField_AnimOut = 0x5b8; // UTextBlock*
		constexpr auto TextGroupAnimateOut = 0x5c0; // UOverlay*
		constexpr auto TextGroupWrapper = 0x5c8; // UOverlay*
		constexpr auto WBP_Header3_C_1 = 0x5d0; // UWBP_Header3_C*
		constexpr auto WBP_NewsRotatorButton = 0x5d8; // UWBP_NewsRotatorButton_C*
		constexpr auto TickTimer = 0x5e0; // float
		constexpr auto CurrentPanelIndex = 0x5e4; // int32_t
		constexpr auto IsAnimating = 0x5e8; // bool
		constexpr auto NewsRotatorObjects = 0x5f0; // TArray<UKSNewsRotatorData*>
		constexpr auto NewsVisibilityUpdated = 0x600; // FMulticastInlineDelegate
		constexpr auto InputRouteName = 0x610; // FName
	}

	namespace n_UWBP_CreateCustomGame_C {
		constexpr auto UberGraphFrame = 0x558; // FPointerToUberGraphFrame
		constexpr auto PopulateMaps = 0x560; // UWidgetAnimation*
		constexpr auto Image_112 = 0x568; // UImage*
		constexpr auto MapScrollBox = 0x570; // UKSScrollBox*
		constexpr auto MapSelectionPanel = 0x578; // UUniformGridPanel*
		constexpr auto WBP_CustomGameConfirmation = 0x580; // UWBP_CustomGameConfirmation_C*
		constexpr auto WBP_GameModeInfoPanel = 0x588; // UWBP_GameModeInfoPanel_C*
		constexpr auto WBP_Header1 = 0x590; // UWBP_Header1_C*
		constexpr auto WBP_NavBar = 0x598; // UWBP_NavBar_C*
		constexpr auto CustomQueues = 0x5a0; // TArray<FClientQueueInfo>
		constexpr auto CurrentTabIndex = 0x5b0; // int32_t
		constexpr auto MapButtons = 0x5b8; // TArray<UWBP_CreateCustomGame_MapButton_C*>
		constexpr auto TabCount = 0x5c8; // int32_t
		constexpr auto QueueDataFactory = 0x5d0; // UKSQueueDataFactory*
		constexpr auto DTCustomQueues = 0x5d8; // UDataTable*
	}

	namespace n_UEnvQueryGenerator_ActorsOfClass {
		constexpr auto SearchedActorClass = 0x50; // AActor*
		constexpr auto GenerateOnlyActorsInRadius = 0x58; // FAIDataProviderBoolValue
		constexpr auto SearchRadius = 0x90; // FAIDataProviderFloatValue
		constexpr auto SearchCenter = 0xc8; // UEnvQueryContext*
	}

	namespace n_UKSActivityRewardCondition_ItemTagPurchased {
		constexpr auto MatchingItemTags = 0x30; // TArray<FGameplayTag>
	}

	namespace n_UMovieSceneParticleTrack {
		constexpr auto ParticleSections = 0x58; // TArray<UMovieSceneSection*>
	}

	namespace n_UWBP_AppliedEvents_C {
		constexpr auto UberGraphFrame = 0x528; // FPointerToUberGraphFrame
		constexpr auto ActiveEvents = 0x530; // UVerticalBox*
	}

	namespace n_UButtonWidgetStyle {
		constexpr auto ButtonStyle = 0x30; // FButtonStyle
	}

	namespace n_AKSAgentBase {
		constexpr auto OnAgentRefund = 0x270; // FMulticastInlineDelegate
		constexpr auto BeginMissionOnPlay = 0x280; // bool
		constexpr auto MovementComponent = 0x288; // UInterpToMovementComponent*
		constexpr auto CollisionBox = 0x290; // UBoxComponent*
		constexpr auto OwningPlayer = 0x298; // TWeakObjectPtr<AController>
		constexpr auto MeshComponent = 0x2a0; // USkinnableMergedMeshComponent*
		constexpr auto SkinObject = 0x2a8; // UMultiSkinObject*
		constexpr auto ApparelObjectsToListenTo = 0x2b0; // TArray<FName>
		constexpr auto FullKeywordList = 0x2c0; // TArray<FName>
		constexpr auto MaxHealth = 0x2d0; // float
		constexpr auto RefundMethod = 0x2d4; // EAgentRefundMethod
		constexpr auto AssociatedWeaponAsset = 0x2d8; // UKSWeaponAsset*
		constexpr auto CurrentHealth = 0x2e0; // float
		constexpr auto OnHealthUpdate = 0x2e8; // FMulticastInlineDelegate
		constexpr auto OnAgentMissionBegin = 0x2f8; // FMulticastInlineDelegate
		constexpr auto OriginalOwnerId = 0x308; // int32_t
		constexpr auto ItemTags = 0x310; // TArray<FGameplayTag>
	}

	namespace n_UModelComponent {
		constexpr auto ModelBodySetup = 0x448; // UBodySetup*
	}

	namespace n_UKSPlayerHealthWidgetBase {
		constexpr auto CurrentHealthMeterState = 0x568; // FPlayerHealthMeterState
	}

	namespace n_UJobSelectionEntryDetails {
		constexpr auto JobEntry = 0x28; // FJobSelectionEntry
		constexpr auto StoreItem = 0x50; // UPUMG_StoreItem*
		constexpr auto AllowIfUnowned = 0x58; // bool
	}

	namespace n_UJobLoadout {
		constexpr auto JobItem = 0x28; // UKSJobItem*
		constexpr auto SlotItems = 0x30; // TMap<EJobLoadoutSlot, UKSItem*>
	}

	namespace n_UKSPlayerMod_Accuracy {
		constexpr auto BaseAccuracyMultiplier = 0x330; // float
	}

	namespace n_UComboButtonWidgetStyle {
		constexpr auto ComboButtonStyle = 0x30; // FComboButtonStyle
	}

	namespace n_UKSApparelAsset_CustomComponent {
		constexpr auto CustomComponentClass = 0x2e0; // TSoftClassPtr<UObject>
	}

	namespace n_AKSArmorAssetDrop {
		constexpr auto RemainingDurability = 0x878; // float
		constexpr auto bCanReplaceBetterArmor = 0x87c; // bool
	}

	namespace n_UBountyDisplayIcon_C {
		constexpr auto BountyIconContainer = 0x4c0; // UHorizontalBox*
		constexpr auto CrownAmountTextDisplay = 0x4c8; // UTextBlock*
		constexpr auto CrownSwitcher = 0x4d0; // UWidgetSwitcher*
		constexpr auto BountyLevel = 0x4d8; // int32_t
	}

	namespace n_UEdGraphNode {
		constexpr auto DeprecatedPins = 0x38; // TArray<UEdGraphPin_Deprecated*>
		constexpr auto NodePosX = 0x48; // int32_t
		constexpr auto NodePosY = 0x4c; // int32_t
		constexpr auto NodeWidth = 0x50; // int32_t
		constexpr auto NodeHeight = 0x54; // int32_t
		constexpr auto AdvancedPinDisplay = 0x58; // ENodeAdvancedPins
		constexpr auto EnabledState = 0x59; // ENodeEnabledState
		constexpr auto bDisplayAsDisabled = 0x5b; // char : 1
		constexpr auto bUserSetEnabledState = 0x5b; // char : 1
		constexpr auto bIsNodeEnabled = 0x5b; // char : 1
		constexpr auto bHasCompilerMessage = 0x5b; // char : 1
		constexpr auto NodeComment = 0x60; // FString
		constexpr auto ErrorType = 0x70; // int32_t
		constexpr auto ErrorMsg = 0x78; // FString
		constexpr auto NodeGuid = 0x88; // FGuid
	}

	namespace n_UKSCharacterSocketComponent {
		constexpr auto SocketLookupName = 0x208; // FName
		constexpr auto OffsetType = 0x210; // EKSSocketOffsetType
		constexpr auto CrouchingHandlingType = 0x211; // EKSSocketCrouchHandling
		constexpr auto AdditiveCrouchOffset = 0x214; // FVector
	}

	namespace n_UAnimNotifyState_Trail {
		constexpr auto PSTemplate = 0x30; // UParticleSystem*
		constexpr auto FirstSocketName = 0x38; // FName
		constexpr auto SecondSocketName = 0x40; // FName
		constexpr auto WidthScaleMode = 0x48; // ETrailWidthMode
		constexpr auto WidthScaleCurve = 0x4c; // FName
		constexpr auto bRecycleSpawnedSystems = 0x54; // char : 1
	}

	namespace n_UAkMusicSyncCallbackInfo {
		constexpr auto PlayingID = 0x30; // int32_t
		constexpr auto SegmentInfo = 0x34; // FAkSegmentInfo
		constexpr auto MusicSyncType = 0x58; // EAkCallbackType
		constexpr auto UserCueName = 0x60; // FString
	}

	namespace n_UNiagaraPreviewAxis_InterpParamBase {
		constexpr auto Param = 0x28; // FName
		constexpr auto Count = 0x30; // int32_t
	}

	namespace n_UNiagaraDataInterfaceExport {
		constexpr auto CallbackHandlerParameter = 0x30; // FNiagaraUserParameterBinding
	}

	namespace n_AKSTeamState_Control {
		constexpr auto ControlScore = 0x6f0; // int32_t
	}

	namespace n_UKSRogueDetailsWidget {
		constexpr auto WeaponHubHelper = 0x520; // UKSWeaponHubHelper*
		constexpr auto RogueDetailsScreen = 0x568; // FName
		constexpr auto ViewedJobItem = 0x570; // TSoftObjectPtr<UKSJobItem>
		constexpr auto GuidedMenuCalloutRedirectorClass = 0x598; // UGuidedMenuCalloutsViewRedirector*
		constexpr auto GuidedMenuCalloutRedirector = 0x5a0; // UGuidedMenuCalloutsViewRedirector*
	}

	namespace n_UQuitMatchCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UInterpTrackInstSound {
		constexpr auto LastUpdatePosition = 0x28; // float
		constexpr auto PlayAudioComp = 0x30; // UAudioComponent*
	}

	namespace n_UPlayMontageCallbackProxy {
		constexpr auto OnCompleted = 0x28; // FMulticastInlineDelegate
		constexpr auto OnBlendOut = 0x38; // FMulticastInlineDelegate
		constexpr auto OnInterrupted = 0x48; // FMulticastInlineDelegate
		constexpr auto OnNotifyBegin = 0x58; // FMulticastInlineDelegate
		constexpr auto OnNotifyEnd = 0x68; // FMulticastInlineDelegate
	}

	namespace n_UWBP_HolidayBundleItem_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto background_image = 0x528; // UImage*
		constexpr auto BonusProgressWrapper = 0x530; // UCanvasPanel*
		constexpr auto Bundle_FREEOverlay = 0x538; // UOverlay*
		constexpr auto Image = 0x540; // UImage*
		constexpr auto Image_91 = 0x548; // UImage*
		constexpr auto Image_410 = 0x550; // UImage*
		constexpr auto Overlay_1 = 0x558; // UOverlay*
		constexpr auto PrimaryStoreItem = 0x560; // UWBP_StoreItemInterior_C*
		constexpr auto ProgressFill = 0x568; // UImage*
		constexpr auto ProgressFillWrapper = 0x570; // UOverlay*
		constexpr auto UnlockedPercent = 0x578; // UTextBlock*
		constexpr auto WBP_AdditiveImage = 0x580; // UWBP_AdditiveImage_C*
		constexpr auto WBP_AdditiveImage_C_2 = 0x588; // UWBP_AdditiveImage_C*
		constexpr auto WBP_StorePanelButton = 0x590; // UWBP_StorePanelButton_C*
		constexpr auto OnBundleItemClicked = 0x598; // FMulticastInlineDelegate
		constexpr auto StoreItem = 0x5a8; // UKSStoreItem*
		constexpr auto bIsCollectionReward = 0x5b0; // bool
		constexpr auto UnlockProgress = 0x5b4; // float
	}

	namespace n_UUMGSequencePlayer {
		constexpr auto Animation = 0x408; // UWidgetAnimation*
	}

	namespace n_UKSSettingsPage {
		constexpr auto SettingsSections = 0x520; // TArray<UKSSettingsSection*>
		constexpr auto SettingsSectionClass = 0x530; // UKSSettingsSection*
		constexpr auto PageConfigAsset = 0x538; // UKSSettingsPageConfigAsset*
	}

	namespace n_UWidgetSwitcherSlot {
		constexpr auto Padding = 0x40; // FMargin
		constexpr auto HorizontalAlignment = 0x50; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x51; // EVerticalAlignment
	}

	namespace n_AAmbientSound {
		constexpr auto AudioComponent = 0x220; // UAudioComponent*
	}

	namespace n_UParticleModuleSizeScaleBySpeed {
		constexpr auto SpeedScale = 0x30; // FVector2D
		constexpr auto MaxScale = 0x38; // FVector2D
	}

	namespace n_UEditableTextBox {
		constexpr auto Text = 0x110; // FText
		constexpr auto TextDelegate = 0x128; // FDelegate
		constexpr auto WidgetStyle = 0x138; // FEditableTextBoxStyle
		constexpr auto Style = 0x928; // USlateWidgetStyleAsset*
		constexpr auto HintText = 0x930; // FText
		constexpr auto HintTextDelegate = 0x948; // FDelegate
		constexpr auto Font = 0x958; // FSlateFontInfo
		constexpr auto ForegroundColor = 0x9a8; // FLinearColor
		constexpr auto BackgroundColor = 0x9b8; // FLinearColor
		constexpr auto ReadOnlyForegroundColor = 0x9c8; // FLinearColor
		constexpr auto IsReadOnly = 0x9d8; // bool
		constexpr auto IsPassword = 0x9d9; // bool
		constexpr auto MinimumDesiredWidth = 0x9dc; // float
		constexpr auto Padding = 0x9e0; // FMargin
		constexpr auto IsCaretMovedWhenGainFocus = 0x9f0; // bool
		constexpr auto SelectAllTextWhenFocused = 0x9f1; // bool
		constexpr auto RevertTextOnEscape = 0x9f2; // bool
		constexpr auto ClearKeyboardFocusOnCommit = 0x9f3; // bool
		constexpr auto SelectAllTextOnCommit = 0x9f4; // bool
		constexpr auto AllowContextMenu = 0x9f5; // bool
		constexpr auto KeyboardType = 0x9f6; // EVirtualKeyboardType
		constexpr auto VirtualKeyboardOptions = 0x9f7; // FVirtualKeyboardOptions
		constexpr auto VirtualKeyboardTrigger = 0x9f8; // EVirtualKeyboardTrigger
		constexpr auto VirtualKeyboardDismissAction = 0x9f9; // EVirtualKeyboardDismissAction
		constexpr auto Justification = 0x9fa; // ETextJustify
		constexpr auto ShapedTextOptions = 0x9fb; // FShapedTextOptions
		constexpr auto OnTextChanged = 0xa00; // FMulticastInlineDelegate
		constexpr auto OnTextCommitted = 0xa10; // FMulticastInlineDelegate
	}

	namespace n_UKSAnimNotifyState_Trail {
		constexpr auto SkinTableRowName = 0x58; // FName
	}

	namespace n_UKSDurationBarContainer {
		constexpr auto DurationBarClass = 0x550; // UKSActiveDurationBar*
		constexpr auto DurationBars = 0x558; // TArray<UKSActiveDurationBar*>
	}

	namespace n_URendererOverrideSettings {
		constexpr auto bSupportAllShaderPermutations = 0x38; // char : 1
		constexpr auto bForceRecomputeTangents = 0x38; // char : 1
	}

	namespace n_UAnimNotify_PlayMontageNotify {
		constexpr auto NotifyName = 0x38; // FName
	}

	namespace n_UGeometryCollection {
		constexpr auto Materials = 0x30; // TArray<UMaterialInterface*>
		constexpr auto CollisionType = 0x40; // ECollisionTypeEnum
		constexpr auto ImplicitType = 0x41; // EImplicitTypeEnum
		constexpr auto MinLevelSetResolution = 0x44; // int32_t
		constexpr auto MaxLevelSetResolution = 0x48; // int32_t
		constexpr auto MinClusterLevelSetResolution = 0x4c; // int32_t
		constexpr auto MaxClusterLevelSetResolution = 0x50; // int32_t
		constexpr auto CollisionObjectReductionPercentage = 0x54; // float
		constexpr auto bMassAsDensity = 0x58; // bool
		constexpr auto Mass = 0x5c; // float
		constexpr auto MinimumMassClamp = 0x60; // float
		constexpr auto CollisionParticlesFraction = 0x64; // float
		constexpr auto MaximumCollisionParticles = 0x68; // int32_t
		constexpr auto SizeSpecificData = 0x70; // TArray<FGeometryCollectionSizeSpecificData>
		constexpr auto EnableRemovePiecesOnFracture = 0x80; // bool
		constexpr auto RemoveOnFractureMaterials = 0x88; // TArray<UMaterialInterface*>
		constexpr auto PersistentGuid = 0x98; // FGuid
		constexpr auto StateGuid = 0xa8; // FGuid
		constexpr auto BoneSelectedMaterialIndex = 0xb8; // int32_t
	}

	namespace n_UOutOfBoundsComponent_C {
		constexpr auto Temp_struct_Variable = 0x170; // TArray<FAkExternalSourceInfo>
		constexpr auto Temp_delegate_Variable = 0x180; // FDelegate
		constexpr auto Temp_delegate_Variable_2 = 0x190; // FDelegate
		constexpr auto Temp_struct_Variable_2 = 0x1a0; // TArray<FAkExternalSourceInfo>
		constexpr auto Temp_struct_Variable_3 = 0x1b0; // TArray<FAkExternalSourceInfo>
		constexpr auto Temp_delegate_Variable_3 = 0x1c0; // FDelegate
	}

	namespace n_UWBP_LerpingNumberWidget_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto AnimBump = 0x268; // UWidgetAnimation*
		constexpr auto Text = 0x270; // UTextBlock*
		constexpr auto RepeatThreshold = 0x278; // float
		constexpr auto CurrentTextDisplay = 0x27c; // int32_t
	}

	namespace n_UWBP_CustomizeTitle_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto ShowAnim = 0x528; // UWidgetAnimation*
		constexpr auto ItemContainer = 0x530; // UKSSortableGridPanel*
		constexpr auto ScrollBox_1 = 0x538; // UScrollBox*
		constexpr auto WBP_CosmeticItem_Title_C_1 = 0x540; // UWBP_CosmeticItem_Title_C*
		constexpr auto WBP_CosmeticItem_Title_C_2 = 0x548; // UWBP_CosmeticItem_Title_C*
		constexpr auto WBP_CosmeticItem_Title_C_3 = 0x550; // UWBP_CosmeticItem_Title_C*
		constexpr auto WBP_CosmeticItem_Title_C_4 = 0x558; // UWBP_CosmeticItem_Title_C*
		constexpr auto WBP_CosmeticItem_Title_C_5 = 0x560; // UWBP_CosmeticItem_Title_C*
		constexpr auto WBP_CosmeticItem_Title_C_6 = 0x568; // UWBP_CosmeticItem_Title_C*
		constexpr auto WBP_CosmeticItem_Title_C_7 = 0x570; // UWBP_CosmeticItem_Title_C*
		constexpr auto WBP_CosmeticItem_Title_C_8 = 0x578; // UWBP_CosmeticItem_Title_C*
		constexpr auto WBP_CosmeticItem_Title_C_9 = 0x580; // UWBP_CosmeticItem_Title_C*
		constexpr auto WBP_CosmeticItem_Title_C_10 = 0x588; // UWBP_CosmeticItem_Title_C*
		constexpr auto WBP_PlayerIDCustomize = 0x590; // UWBP_PlayerIDCustomize_C*
		constexpr auto EntryPadding = 0x598; // FMargin
		constexpr auto TitleItems = 0x5a8; // TArray<UWBP_CosmeticItem_Title_C*>
		constexpr auto EquippedTitle = 0x5b8; // UWBP_CosmeticItem_Title_C*
		constexpr auto LoadoutDataFactory = 0x5c0; // UKSLoadoutDataFactory*
		constexpr auto HoveredItem = 0x5c8; // UPlatformInventoryItem*
		constexpr auto VisibleGridRows = 0x5d0; // int32_t
		constexpr auto VisibleGridColumns = 0x5d4; // int32_t
	}

	namespace n_UKSExperiments {
		constexpr auto ExperimentConfigRow = 0x28; // TArray<FKSExperimentConfig>
	}

	namespace n_UInterpTrackVectorBase {
		constexpr auto VectorTrack = 0x70; // FInterpCurveVector
		constexpr auto CurveTension = 0x88; // float
	}

	namespace n_UVariantObjectBinding {
		constexpr auto CachedActorLabel = 0x28; // FString
		constexpr auto ObjectPtr = 0x38; // FSoftObjectPath
		constexpr auto LazyObjectPtr = 0x50; // LazyObjectProperty
		constexpr auto CapturedProperties = 0x70; // TArray<UPropertyValue*>
		constexpr auto FunctionCallers = 0x80; // TArray<FFunctionCaller>
	}

	namespace n_UDestructibleFractureSettings {
		constexpr auto CellSiteCount = 0x28; // int32_t
		constexpr auto FractureMaterialDesc = 0x2c; // FFractureMaterial
		constexpr auto RandomSeed = 0x50; // int32_t
		constexpr auto VoronoiSites = 0x58; // TArray<FVector>
		constexpr auto OriginalSubmeshCount = 0x68; // int32_t
		constexpr auto Materials = 0x70; // TArray<UMaterialInterface*>
		constexpr auto ChunkParameters = 0x80; // TArray<FDestructibleChunkParameters>
	}

	namespace n_UAnimBlueprint {
		constexpr auto TargetSkeleton = 0xa8; // USkeleton*
		constexpr auto Groups = 0xb0; // TArray<FAnimGroupInfo>
		constexpr auto bUseMultiThreadedAnimationUpdate = 0xc0; // bool
		constexpr auto bWarnAboutBlueprintUsage = 0xc1; // bool
	}

	namespace n_UWheeledVehicleMovementComponent {
		constexpr auto bDeprecatedSpringOffsetMode = 0x140; // char : 1
		constexpr auto bReverseAsBrake = 0x140; // char : 1
		constexpr auto bUseRVOAvoidance = 0x140; // char : 1
		constexpr auto bRawHandbrakeInput = 0x140; // char : 1
		constexpr auto bRawGearUpInput = 0x140; // char : 1
		constexpr auto bRawGearDownInput = 0x140; // char : 1
		constexpr auto bWasAvoidanceUpdated = 0x144; // char : 1
		constexpr auto Mass = 0x148; // float
		constexpr auto WheelSetups = 0x150; // TArray<FWheelSetup>
		constexpr auto DragCoefficient = 0x160; // float
		constexpr auto ChassisWidth = 0x164; // float
		constexpr auto ChassisHeight = 0x168; // float
		constexpr auto DragArea = 0x16c; // float
		constexpr auto EstimatedMaxEngineSpeed = 0x170; // float
		constexpr auto MaxEngineRPM = 0x174; // float
		constexpr auto DebugDragMagnitude = 0x178; // float
		constexpr auto InertiaTensorScale = 0x17c; // FVector
		constexpr auto MinNormalizedTireLoad = 0x188; // float
		constexpr auto MinNormalizedTireLoadFiltered = 0x18c; // float
		constexpr auto MaxNormalizedTireLoad = 0x190; // float
		constexpr auto MaxNormalizedTireLoadFiltered = 0x194; // float
		constexpr auto ThresholdLongitudinalSpeed = 0x198; // float
		constexpr auto LowForwardSpeedSubStepCount = 0x19c; // int32_t
		constexpr auto HighForwardSpeedSubStepCount = 0x1a0; // int32_t
		constexpr auto Wheels = 0x1a8; // TArray<UVehicleWheel*>
		constexpr auto RVOAvoidanceRadius = 0x1d0; // float
		constexpr auto RVOAvoidanceHeight = 0x1d4; // float
		constexpr auto AvoidanceConsiderationRadius = 0x1d8; // float
		constexpr auto RVOSteeringStep = 0x1dc; // float
		constexpr auto RVOThrottleStep = 0x1e0; // float
		constexpr auto AvoidanceUID = 0x1e4; // int32_t
		constexpr auto AvoidanceGroup = 0x1e8; // FNavAvoidanceMask
		constexpr auto GroupsToAvoid = 0x1ec; // FNavAvoidanceMask
		constexpr auto GroupsToIgnore = 0x1f0; // FNavAvoidanceMask
		constexpr auto AvoidanceWeight = 0x1f4; // float
		constexpr auto PendingLaunchVelocity = 0x1f8; // FVector
		constexpr auto ReplicatedState = 0x204; // FReplicatedVehicleState
		constexpr auto RawSteeringInput = 0x21c; // float
		constexpr auto RawThrottleInput = 0x220; // float
		constexpr auto RawBrakeInput = 0x224; // float
		constexpr auto SteeringInput = 0x228; // float
		constexpr auto ThrottleInput = 0x22c; // float
		constexpr auto BrakeInput = 0x230; // float
		constexpr auto HandbrakeInput = 0x234; // float
		constexpr auto IdleBrakeInput = 0x238; // float
		constexpr auto StopThreshold = 0x23c; // float
		constexpr auto WrongDirectionThreshold = 0x240; // float
		constexpr auto ThrottleInputRate = 0x244; // FVehicleInputRate
		constexpr auto BrakeInputRate = 0x24c; // FVehicleInputRate
		constexpr auto HandbrakeInputRate = 0x254; // FVehicleInputRate
		constexpr auto SteeringInputRate = 0x25c; // FVehicleInputRate
		constexpr auto OverrideController = 0x288; // AController*
	}

	namespace n_UMovieSceneLevelVisibilitySection {
		constexpr auto Visibility = 0xe0; // ELevelVisibility
		constexpr auto LevelNames = 0xe8; // TArray<FName>
	}

	namespace n_UTextureLightProfile {
		constexpr auto Brightness = 0xe8; // float
		constexpr auto TextureMultiplier = 0xec; // float
	}

	namespace n_UAsyncActionHandleSaveGame {
		constexpr auto Completed = 0x30; // FMulticastInlineDelegate
		constexpr auto SaveGameObject = 0x60; // USaveGame*
	}

	namespace n_AEmitter {
		constexpr auto ParticleSystemComponent = 0x220; // UParticleSystemComponent*
		constexpr auto bDestroyOnSystemFinish = 0x228; // char : 1
		constexpr auto bPostUpdateTickGroup = 0x228; // char : 1
		constexpr auto bCurrentlyActive = 0x228; // char : 1
		constexpr auto OnParticleSpawn = 0x230; // FMulticastInlineDelegate
		constexpr auto OnParticleBurst = 0x240; // FMulticastInlineDelegate
		constexpr auto OnParticleDeath = 0x250; // FMulticastInlineDelegate
		constexpr auto OnParticleCollide = 0x260; // FMulticastInlineDelegate
	}

	namespace n_UWBP_Social_Search_Tab_C {
		constexpr auto UberGraphFrame = 0x5c8; // FPointerToUberGraphFrame
		constexpr auto Results = 0x5d0; // UKSTreeView*
		constexpr auto SearchBar = 0x5d8; // UWBP_Social_Search_bar_C*
		constexpr auto LastSelectedItem = 0x5e0; // UObject*
		constexpr auto ClickSocialSearchTabSFX = 0x5e8; // UAkAudioEvent*
	}

	namespace n_UStaticMesh {
		constexpr auto MinLOD = 0x60; // FPerPlatformInt
		constexpr auto LpvBiasMultiplier = 0x64; // float
		constexpr auto StaticMaterials = 0x68; // TArray<FStaticMaterial>
		constexpr auto LightmapUVDensity = 0x78; // float
		constexpr auto LightMapResolution = 0x7c; // int32_t
		constexpr auto LightMapCoordinateIndex = 0x80; // int32_t
		constexpr auto DistanceFieldSelfShadowBias = 0x84; // float
		constexpr auto BodySetup = 0x88; // UBodySetup*
		constexpr auto DefaultCreationCollisionProfileName = 0x90; // FName
		constexpr auto LODForCollision = 0x98; // int32_t
		constexpr auto bGenerateMeshDistanceField = 0x9c; // char : 1
		constexpr auto bStripComplexCollisionForConsole = 0x9c; // char : 1
		constexpr auto bHasNavigationData = 0x9c; // char : 1
		constexpr auto bSupportUniformlyDistributedSampling = 0x9c; // char : 1
		constexpr auto bSupportPhysicalMaterialMasks = 0x9c; // char : 1
		constexpr auto bIsBuiltAtRuntime = 0x9c; // char : 1
		constexpr auto bAllowCPUAccess = 0x9c; // char : 1
		constexpr auto bSupportGpuUniformlyDistributedSampling = 0x9d; // char : 1
		constexpr auto Sockets = 0xc0; // TArray<UStaticMeshSocket*>
		constexpr auto PositiveBoundsExtension = 0xe0; // FVector
		constexpr auto NegativeBoundsExtension = 0xec; // FVector
		constexpr auto ExtendedBounds = 0xf8; // FBoxSphereBounds
		constexpr auto ElementToIgnoreForTexFactor = 0x114; // int32_t
		constexpr auto AssetUserData = 0x118; // TArray<UAssetUserData*>
		constexpr auto EditableMesh = 0x130; // UObject*
		constexpr auto NavCollision = 0x138; // UNavCollisionBase*
	}

	namespace n_UAkCheckBox {
		constexpr auto CheckedState = 0x548; // ECheckBoxState
		constexpr auto CheckedStateDelegate = 0x54c; // FDelegate
		constexpr auto WidgetStyle = 0x560; // FCheckBoxStyle
		constexpr auto HorizontalAlignment = 0xae0; // EHorizontalAlignment
		constexpr auto IsFocusable = 0xae1; // bool
		constexpr auto ThePropertyToControl = 0xae8; // FAkBoolPropertyToControl
		constexpr auto ItemToControl = 0xaf8; // FAkWwiseItemToControl
		constexpr auto AkOnCheckStateChanged = 0xb38; // FMulticastInlineDelegate
		constexpr auto OnItemDropped = 0xb48; // FMulticastInlineDelegate
		constexpr auto OnPropertyDropped = 0xb58; // FMulticastInlineDelegate
	}

	namespace n_AAkSpatialAudioVolume {
		constexpr auto SurfaceReflectorSet = 0x258; // UAkSurfaceReflectorSetComponent*
		constexpr auto LateReverb = 0x260; // UAkLateReverbComponent*
		constexpr auto Room = 0x268; // UAkRoomComponent*
	}

	namespace n_UKSPlayerMod_GiveItemOnEvent {
		constexpr auto ItemToGive = 0x330; // TSoftObjectPtr<UKSItem>
	}

	namespace n_UKSEasyAntiCheatSettings {
		constexpr auto AbilityEACWeaponTypeId = 0x38; // uint16_t
		constexpr auto WeaponTypeToAntiCheatId = 0x40; // TArray<FWeaponTypeToAntiCheatId>
		constexpr auto WeaponTypeToAntiCheatIdMap = 0x50; // TMap<FGameplayTag, uint16_t>
	}

	namespace n_UKSBTD_HasSwappedEquipment {
		constexpr auto CachedWeaponClassKey = 0x68; // FBlackboardKeySelector
	}

	namespace n_UKSKillCam {
		constexpr auto KillCamControllerClass = 0x28; // AKSKillCamController*
		constexpr auto KillCamWorld = 0x30; // UWorld*
		constexpr auto KillCamWorldPackage = 0x38; // UPackage*
		constexpr auto KillCamSpectatorController = 0x40; // AKSKillCamController*
		constexpr auto OriginalWorldMutedAudio = 0x48; // TMap<UAkComponent*, float>
		constexpr auto OnKillCamEnabled = 0xd8; // FMulticastInlineDelegate
		constexpr auto OnKillCamViewPawn = 0x100; // FMulticastInlineDelegate
		constexpr auto OnKillCamViewProjectile = 0x128; // FMulticastInlineDelegate
		constexpr auto OnPrepareKillCamPlayback = 0x150; // FMulticastInlineDelegate
		constexpr auto OnFinishKillCamPlayback = 0x178; // FMulticastInlineDelegate
	}

	namespace n_UKSEquipAllWidget {
		constexpr auto EquipAllData = 0x520; // UKSEquipAllData*
	}

	namespace n_UKSLootSiteMarkerWidget {
		constexpr auto MarkedLootSite = 0x318; // AKSLootSiteBase*
		constexpr auto MaxDisplayDistance = 0x320; // float
		constexpr auto bViewedPawnHasEndedFreeFall = 0x324; // bool
		constexpr auto TagsToHide = 0x328; // TArray<ELootSiteRarity>
	}

	namespace n_UWBP_RadialMenuEntry_Divider_Highlight_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto WBP_AsyncIcon = 0x240; // UWBP_AsyncIcon_C*
	}

	namespace n_UKSModInst_DetectEnemy {
		constexpr auto OnDetectEnemy = 0x1b8; // FMulticastInlineDelegate
		constexpr auto WidgetClass = 0x1c8; // TSoftClassPtr<UObject>
		constexpr auto bIsDetectingEnemy = 0x1f0; // bool
	}

	namespace n_UMaterialExpressionTangentOutput {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UWBP_ScoreboardDisconnectedSection_Lobby_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto animOnHover = 0x528; // UWidgetAnimation*
		constexpr auto Arrow = 0x530; // UImage*
		constexpr auto ArrowBg_Default = 0x538; // UImage*
		constexpr auto ArrowBG_Over = 0x540; // UImage*
		constexpr auto ArrowContainer = 0x548; // UOverlay*
		constexpr auto ArrowContainer_2 = 0x550; // UOverlay*
		constexpr auto Background_Default = 0x558; // UImage*
		constexpr auto Background_Over = 0x560; // UImage*
		constexpr auto CountLabel = 0x568; // UTextBlock*
		constexpr auto DisconnectedLabel = 0x570; // UTextBlock*
		constexpr auto HitArea = 0x578; // UButton*
		constexpr auto PlayerContainer = 0x580; // UVerticalBox*
		constexpr auto Prompt_2 = 0x588; // UWBP_ControllerPrompt_C*
		constexpr auto PromptContainer_2 = 0x590; // USizeBox*
		constexpr auto ScoreboardPlayerStats_Lobby = 0x598; // UScoreboardPlayerStats_Lobby_C*
		constexpr auto ScoreboardPlayerStats_Lobby_2 = 0x5a0; // UScoreboardPlayerStats_Lobby_C*
		constexpr auto IsExpanded = 0x5a8; // bool
		constexpr auto Players = 0x5b0; // TArray<UScoreboardPlayerStats_Lobby_C*>
		constexpr auto OnClicked = 0x5c0; // FMulticastInlineDelegate
		constexpr auto playerStats = 0x5d0; // TArray<FPlayerEntryStats>
		constexpr auto DiscPlayerStats = 0x5e0; // TArray<FPlayerEntryStats>
		constexpr auto OnPlayersChanged = 0x5f0; // FMulticastInlineDelegate
		constexpr auto PlayerDataFactory = 0x600; // UPUMG_PlayerDataFactory*
	}

	namespace n_UCamMod_JumpStart_C {
		constexpr auto UberGraphFrame = 0x68; // FPointerToUberGraphFrame
	}

	namespace n_UWBP_ItemInfoPanel_C {
		constexpr auto ItemDescription = 0x520; // UTextBlock*
		constexpr auto PreviewImage = 0x528; // UKSAsyncImage*
		constexpr auto PreviewImageBox = 0x530; // UBorder*
		constexpr auto PreviewSizeBox = 0x538; // USizeBox*
		constexpr auto WBP_ItemInfoContainer = 0x540; // UWBP_ItemInfoContainer_C*
		constexpr auto WBP_PanelDefault = 0x548; // UWBP_PanelDefault_C*
	}

	namespace n_UParticleModuleRotationRateMultiplyLife {
		constexpr auto LifeMultiplier = 0x30; // FRawDistributionFloat
	}

	namespace n_UWBP_RegionSelect_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto OnShow = 0x528; // UWidgetAnimation*
		constexpr auto Decro = 0x530; // UImage*
		constexpr auto RegionScrollBox = 0x538; // UScrollBox*
		constexpr auto Title = 0x540; // UTextBlock*
		constexpr auto Title_3 = 0x548; // UTextBlock*
		constexpr auto WBP_ModalPopupContainer = 0x550; // UWBP_ModalPopupContainer_C*
		constexpr auto OnRegionSelected = 0x558; // FMulticastInlineDelegate
		constexpr auto OnRegionSelectEntriesCreated = 0x568; // FMulticastInlineDelegate
		constexpr auto Region Select Array = 0x578; // TArray<UWBP_RegionSelect_Entry_C*>
		constexpr auto bForceSelection = 0x588; // bool
		constexpr auto ShowSFX = 0x590; // UAkAudioEvent*
		constexpr auto NewVar_1 = 0x598; // int32_t
	}

	namespace n_AKSProjectile {
		constexpr auto EquipmentContainer = 0x2d8; // FKSEquipmentContainer
		constexpr auto WeaponComponent = 0x500; // UKSWeaponComponent*
		constexpr auto WeaponComponentEquipmentId = 0x508; // FKSEquipmentId
		constexpr auto CachedWeaponAsset = 0x510; // UKSWeaponAsset*
		constexpr auto WeaponComponentType = 0x518; // EProjectileWeaponComponentType
		constexpr auto ApparelObjectsToListenTo = 0x520; // TArray<FName>
		constexpr auto SkinTagContainer = 0x530; // FGameplayTagContainer
		constexpr auto HorizontalThrowSpeed = 0x568; // float
		constexpr auto MaxSpeed = 0x56c; // float
		constexpr auto bModifyInitialSpeedWithPitch = 0x570; // bool
		constexpr auto bDeadOrDownedDrop = 0x571; // bool
		constexpr auto bCanBeIntercepted = 0x572; // bool
		constexpr auto CollisionComponent0 = 0x578; // USceneComponent*
		constexpr auto ProjectileMovementComponent = 0x580; // UProjectileMovementComponent*
		constexpr auto ProjectileHit = 0x588; // FHitResult
		constexpr auto LifeSpanAfterDeactivate = 0x610; // float
		constexpr auto bShouldHideOnDeactivate = 0x614; // bool
		constexpr auto bStopped = 0x615; // bool
		constexpr auto NumBounces = 0x618; // int32_t
		constexpr auto NumPenetrations = 0x61c; // int32_t
		constexpr auto AdditionalPredictionTimeLenience = 0x630; // float
		constexpr auto AdditionalPredictionArcTime = 0x634; // float
		constexpr auto HitValidationLenience = 0x638; // float
		constexpr auto bValidateHitsWithCollision = 0x63c; // bool
		constexpr auto StoppingHit = 0x640; // FHitResult
		constexpr auto bAttachWhenStopped = 0x6c8; // bool
		constexpr auto bDetachWhenBumped = 0x6c9; // bool
		constexpr auto bSimulatePhysicsWhenStopped = 0x6ca; // bool
		constexpr auto bFreezeProjectileOnStop = 0x6cb; // bool
		constexpr auto bDeflectOffShield = 0x6cc; // bool
		constexpr auto bDealPointDamageAfterDetach = 0x6e0; // bool
		constexpr auto DebugDrawLifetime = 0x6e4; // float
		constexpr auto bCreateClusterSegmentsOnStopped = 0x6e8; // bool
		constexpr auto bCreateClusterSegmentsOnExplode = 0x6e9; // bool
		constexpr auto OnWeaponAssetSet = 0x6f0; // FMulticastInlineDelegate
		constexpr auto WeaponAsset = 0x710; // UKSWeaponAsset*
		constexpr auto ParentWeaponAsset = 0x718; // UKSWeaponAsset*
		constexpr auto DamageWeaponAssetOverride = 0x720; // UKSWeaponAsset*
		constexpr auto SpawningWeapon = 0x728; // AKSWeapon*
		constexpr auto TimeCooked = 0x730; // float
		constexpr auto SpawnLocation = 0x734; // FVector
		constexpr auto SpawnRotation = 0x740; // FRotator
		constexpr auto PrimitiveCollisionComponent = 0x750; // UPrimitiveComponent*
		constexpr auto LocationLastFrame = 0x758; // FVector
		constexpr auto bActive = 0x764; // bool
		constexpr auto DeactivateExplosionType = 0x765; // EProjectileExplosionType
		constexpr auto bDeactivateInWater = 0x766; // bool
		constexpr auto OnProjectileDeactivated = 0x768; // FMulticastInlineDelegate
		constexpr auto bCanBeKilled = 0x77c; // bool
		constexpr auto MaxHealth = 0x780; // float
		constexpr auto bSetInstigatorToKiller = 0x784; // bool
		constexpr auto CurrentHealth = 0x788; // float
		constexpr auto LifeSpanAfterKilled = 0x78c; // float
		constexpr auto bExplodeOnKilled = 0x790; // bool
		constexpr auto FriendlyKiller = 0x798; // AController*
		constexpr auto bProjectileKillPending = 0x7a0; // bool
		constexpr auto OnProjectileKilled = 0x7a8; // FMulticastInlineDelegate
		constexpr auto bAffectsFriendly = 0x7b8; // bool
		constexpr auto bAllowFriendlyPlayersToDamage = 0x7b9; // bool
		constexpr auto bPenetratesFriendly = 0x7ba; // bool
		constexpr auto bAffectsEnemy = 0x7bb; // bool
		constexpr auto bPenetratesEnemy = 0x7bc; // bool
		constexpr auto bHasPlayedExplosion = 0x7bd; // bool
		constexpr auto OnPlayExplosion = 0x7c0; // FMulticastInlineDelegate
		constexpr auto DefaultSpang = 0x7d0; // UParticleSystem*
		constexpr auto SurfaceSpangs = 0x7d8; // TMap<EPhysicalSurface, UParticleSystem*>
		constexpr auto SpinsPerSecond = 0x828; // float
		constexpr auto SpeedToReachSpinsPerSecond = 0x82c; // float
		constexpr auto SpinAxis = 0x830; // FVector
		constexpr auto bSpinAfterDetaching = 0x83c; // bool
		constexpr auto bCanBreakDestructibles = 0x83d; // bool
		constexpr auto InteractionBlockerManager = 0x840; // UKSInteractionBlockerManager*
		constexpr auto InteractableComponent = 0x848; // UKSInteractableComponent*
		constexpr auto bCanReclaim = 0x850; // bool
		constexpr auto bDestroyOnReclaim = 0x851; // bool
		constexpr auto InteractionDistanceOffset = 0x854; // float
		constexpr auto ReclaimPermissions = 0x858; // EProjectileReclaimPermission
		constexpr auto bShouldRestoreWeaponAssetOnReclaim = 0x859; // bool
		constexpr auto ReclaimTime = 0x85c; // float
		constexpr auto ReclaimInteractionType = 0x860; // UKSInteractionType*
		constexpr auto Reclaimer = 0x868; // AKSCharacter*
		constexpr auto bReclaimPending = 0x870; // bool
		constexpr auto ReclaimStock = 0x874; // int32_t
		constexpr auto OnReclaim = 0x878; // FMulticastInlineDelegate
		constexpr auto bShouldModifyVisibilityChecks = 0x888; // bool
		constexpr auto VisibilityDistance = 0x88c; // float
		constexpr auto bShowOnHud = 0x890; // bool
		constexpr auto WidgetIcon = 0x898; // UObject*
		constexpr auto MinimapDisplayWidget = 0x8a0; // TSoftClassPtr<UObject>
		constexpr auto FullmapDisplayWidget = 0x8c8; // TSoftClassPtr<UObject>
		constexpr auto OverlayDisplayWidget = 0x8f0; // TSoftClassPtr<UObject>
		constexpr auto WidgetIconAudience = 0x918; // EProjectileVisibilityType
		constexpr auto OverlayIconAudience = 0x919; // EProjectileVisibilityType
		constexpr auto WidgetInfos = 0x920; // TArray<FProjectileWidgetInfo>
		constexpr auto OriginalOwnerId = 0x930; // int32_t
		constexpr auto ItemTags = 0x938; // TArray<FGameplayTag>
	}

	namespace n_UWBP_RogueStatsScreen_RogueEntry_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto FadeIn = 0x240; // UWidgetAnimation*
		constexpr auto BarWrapper = 0x248; // UOverlay*
		constexpr auto BottomDivider = 0x250; // UKSAsyncImage*
		constexpr auto GlowTip = 0x258; // USizeBox*
		constexpr auto Image_426 = 0x260; // UImage*
		constexpr auto MercIcon = 0x268; // UWBP_AsyncIcon_C*
		constexpr auto MercName = 0x270; // UTextBlock*
		constexpr auto PnlMain = 0x278; // UCanvasPanel*
		constexpr auto StatValue = 0x280; // UTextBlock*
		constexpr auto TopDivider = 0x288; // UKSAsyncImage*
		constexpr auto MaxStatValue = 0x290; // float
		constexpr auto TargetMaxXAnchor = 0x294; // float
		constexpr auto AnchorAnimTimer = 0x298; // float
		constexpr auto AnchorAnimDuration = 0x29c; // float
		constexpr auto AnchorAnimStartPerc = 0x2a0; // float
		constexpr auto MyStatValue = 0x2a4; // float
		constexpr auto RogueStat = 0x2a8; // UKSStatWrapper*
		constexpr auto JobId = 0x2b0; // int32_t
	}

	namespace n_ADatasmithAreaLightActor {
		constexpr auto LightType = 0x220; // EDatasmithAreaLightActorType
		constexpr auto LightShape = 0x221; // EDatasmithAreaLightActorShape
		constexpr auto Dimensions = 0x224; // FVector2D
		constexpr auto Intensity = 0x22c; // float
		constexpr auto IntensityUnits = 0x230; // ELightUnits
		constexpr auto Color = 0x234; // FLinearColor
		constexpr auto Temperature = 0x244; // float
		constexpr auto IESTexture = 0x248; // UTextureLightProfile*
		constexpr auto bUseIESBrightness = 0x250; // bool
		constexpr auto IESBrightnessScale = 0x254; // float
		constexpr auto Rotation = 0x258; // FRotator
		constexpr auto SourceRadius = 0x264; // float
		constexpr auto SourceLength = 0x268; // float
		constexpr auto AttenuationRadius = 0x26c; // float
		constexpr auto SpotlightInnerAngle = 0x270; // float
		constexpr auto SpotlightOuterAngle = 0x274; // float
	}

	namespace n_USourceEffectStereoDelayPreset {
		constexpr auto Settings = 0x7c; // FSourceEffectStereoDelaySettings
	}

	namespace n_UMasterAudioSubmixCaptureProtocol {
		constexpr auto Filename = 0x58; // FString
	}

	namespace n_UCamMod_Master_C {
		constexpr auto bIsActive = 0x48; // bool
		constexpr auto AddViewLocation = 0x4c; // FVector
		constexpr auto AddViewRotation = 0x58; // FRotator
		constexpr auto AddFOV = 0x64; // float
	}

	namespace n_UWBP_StandardButtonInner_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto ShowButton = 0x528; // UWidgetAnimation*
		constexpr auto OnClick = 0x530; // UWidgetAnimation*
		constexpr auto Highlight = 0x538; // UWidgetAnimation*
		constexpr auto BtnBkg = 0x540; // UImage*
		constexpr auto BtnBkgHover = 0x548; // UImage*
		constexpr auto BtnClickImage = 0x550; // UImage*
		constexpr auto BtnEdge = 0x558; // UImage*
		constexpr auto BtnEdgeHover = 0x560; // UImage*
		constexpr auto BtnFrame = 0x568; // UImage*
		constexpr auto BtnFrameHover = 0x570; // UImage*
		constexpr auto BtnStandardWrapper = 0x578; // UOverlay*
		constexpr auto ButtonText = 0x580; // UTextBlock*
		constexpr auto HitTarget = 0x588; // UButton*
		constexpr auto HoverWrapper = 0x590; // UOverlay*
		constexpr auto KeyPrompt = 0x598; // UWBP_KeyCallout_C*
		constexpr auto KeyPromptSizeBox = 0x5a0; // USizeBox*
		constexpr auto SizeWrapper = 0x5a8; // USizeBox*
		constexpr auto OnClicked = 0x5b0; // FMulticastInlineDelegate
		constexpr auto OnHovered = 0x5c0; // FMulticastInlineDelegate
		constexpr auto OnUnhovered = 0x5d0; // FMulticastInlineDelegate
		constexpr auto ClickStandardBtnInnerSFX = 0x5e0; // UAkAudioEvent*
		constexpr auto DefaultButtonText = 0x5e8; // FText
		constexpr auto DefaultWidth = 0x600; // float
		constexpr auto ShowPromptOnFocus = 0x604; // bool
		constexpr auto GamepadAction = 0x608; // FName
		constexpr auto DefaultHeight = 0x610; // float
		constexpr auto HoverStandardBtnInnerSFX = 0x618; // UAkAudioEvent*
	}

	namespace n_UWBP_RoguePanelHeader_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto Text = 0x240; // UTextBlock*
		constexpr auto HeaderText = 0x248; // FText
	}

	namespace n_UBTTask_RunEQSQuery {
		constexpr auto QueryTemplate = 0x98; // UEnvQuery*
		constexpr auto QueryParams = 0xa0; // TArray<FEnvNamedValue>
		constexpr auto QueryConfig = 0xb0; // TArray<FAIDynamicParam>
		constexpr auto RunMode = 0xc0; // EEnvQueryRunMode
		constexpr auto EQSQueryBlackboardKey = 0xc8; // FBlackboardKeySelector
		constexpr auto bUseBBKey = 0xf0; // bool
		constexpr auto EQSRequest = 0xf8; // FEQSParametrizedQueryExecutionRequest
	}

	namespace n_UBTTask_PlaySound {
		constexpr auto SoundToPlay = 0x70; // USoundCue*
	}

	namespace n_UCheckBox {
		constexpr auto CheckedState = 0x128; // ECheckBoxState
		constexpr auto CheckedStateDelegate = 0x12c; // FDelegate
		constexpr auto WidgetStyle = 0x140; // FCheckBoxStyle
		constexpr auto Style = 0x6c0; // USlateWidgetStyleAsset*
		constexpr auto UncheckedImage = 0x6c8; // USlateBrushAsset*
		constexpr auto UncheckedHoveredImage = 0x6d0; // USlateBrushAsset*
		constexpr auto UncheckedPressedImage = 0x6d8; // USlateBrushAsset*
		constexpr auto CheckedImage = 0x6e0; // USlateBrushAsset*
		constexpr auto CheckedHoveredImage = 0x6e8; // USlateBrushAsset*
		constexpr auto CheckedPressedImage = 0x6f0; // USlateBrushAsset*
		constexpr auto UndeterminedImage = 0x6f8; // USlateBrushAsset*
		constexpr auto UndeterminedHoveredImage = 0x700; // USlateBrushAsset*
		constexpr auto UndeterminedPressedImage = 0x708; // USlateBrushAsset*
		constexpr auto HorizontalAlignment = 0x710; // EHorizontalAlignment
		constexpr auto Padding = 0x714; // FMargin
		constexpr auto BorderBackgroundColor = 0x728; // FSlateColor
		constexpr auto IsFocusable = 0x750; // bool
		constexpr auto OnCheckStateChanged = 0x758; // FMulticastInlineDelegate
	}

	namespace n_UKSPlayerMod_HideFromTeam {
		constexpr auto bHideFriendlyStencil = 0x330; // bool
		constexpr auto bNoFriendlyDrone = 0x331; // bool
	}

	namespace n_UStereoLayerComponent {
		constexpr auto bLiveTexture = 0x208; // char : 1
		constexpr auto bSupportsDepth = 0x208; // char : 1
		constexpr auto bNoAlphaChannel = 0x208; // char : 1
		constexpr auto Texture = 0x210; // UTexture*
		constexpr auto LeftTexture = 0x218; // UTexture*
		constexpr auto bQuadPreserveTextureRatio = 0x220; // char : 1
		constexpr auto QuadSize = 0x224; // FVector2D
		constexpr auto UVRect = 0x22c; // FBox2D
		constexpr auto CylinderRadius = 0x240; // float
		constexpr auto CylinderOverlayArc = 0x244; // float
		constexpr auto CylinderHeight = 0x248; // int32_t
		constexpr auto EquirectProps = 0x24c; // FEquirectProps
		constexpr auto StereoLayerType = 0x294; // EStereoLayerType
		constexpr auto StereoLayerShape = 0x295; // EStereoLayerShape
		constexpr auto Shape = 0x298; // UStereoLayerShape*
		constexpr auto Priority = 0x2a0; // int32_t
	}

	namespace n_UNiagaraDataInterfaceVectorField {
		constexpr auto Field = 0x30; // UVectorField*
		constexpr auto bTileX = 0x38; // bool
		constexpr auto bTileY = 0x39; // bool
		constexpr auto bTileZ = 0x3a; // bool
	}

	namespace n_UKSBTD_CompareMatchPhaseTimeLeft {
		constexpr auto Time = 0x68; // float
		constexpr auto ArithmeticOperation = 0x6c; // EArithmeticKeyOperation
	}

	namespace n_URuntimeVirtualTextureComponent {
		constexpr auto VirtualTexture = 0x208; // URuntimeVirtualTexture*
		constexpr auto bUseStreamingLowMipsInEditor = 0x210; // bool
		constexpr auto BoundsSourceActor = 0x218; // AActor*
	}

	namespace n_UKSWingSuitCosmeticComponent {
		constexpr auto SocketAttachPoint = 0x1b0; // FName
		constexpr auto AssetPrefix = 0x1b8; // FString
		constexpr auto bShouldDodgeRollOnLanding = 0x1c8; // bool
		constexpr auto bShouldUseFootIKDuringFreefall = 0x1c9; // bool
		constexpr auto BaseAssetDataTables = 0x1d0; // TArray<FDataTableInfo>
		constexpr auto ViewModelScale = 0x1e0; // FVector
		constexpr auto ViewModelRotation = 0x1ec; // FRotator
		constexpr auto ViewModelLocationOffset = 0x1f8; // FVector
		constexpr auto WingSuitVFXList = 0x208; // TArray<UParticleSystemComponent*>
		constexpr auto StartSFX = 0x218; // UAkAudioEvent*
		constexpr auto LoopSFX = 0x220; // UAkAudioEvent*
		constexpr auto StopSFX = 0x228; // UAkAudioEvent*
	}

	namespace n_APawn {
		constexpr auto bUseControllerRotationPitch = 0x228; // char : 1
		constexpr auto bUseControllerRotationYaw = 0x228; // char : 1
		constexpr auto bUseControllerRotationRoll = 0x228; // char : 1
		constexpr auto bCanAffectNavigationGeneration = 0x228; // char : 1
		constexpr auto BaseEyeHeight = 0x22c; // float
		constexpr auto AutoPossessPlayer = 0x230; // EAutoReceiveInput
		constexpr auto AutoPossessAI = 0x231; // EAutoPossessAI
		constexpr auto RemoteViewPitch = 0x232; // char
		constexpr auto AIControllerClass = 0x238; // AController*
		constexpr auto PlayerState = 0x240; // APlayerState*
		constexpr auto LastHitBy = 0x250; // AController*
		constexpr auto Controller = 0x258; // AController*
		constexpr auto ControlInputVector = 0x264; // FVector
		constexpr auto LastControlInputVector = 0x270; // FVector
	}

	namespace n_UBlendSpace1D {
		constexpr auto bScaleAnimation = 0x148; // bool
	}

	namespace n_UBTService_BlueprintBase {
		constexpr auto AIOwner = 0x70; // AAIController*
		constexpr auto ActorOwner = 0x78; // AActor*
		constexpr auto bShowPropertyDetails = 0x90; // char : 1
		constexpr auto bShowEventDetails = 0x90; // char : 1
	}

	namespace n_UKSSocialFriendsPanel {
		constexpr auto CategoryData = 0x580; // TArray<UKSDataSocialCategory*>
		constexpr auto Parent = 0x590; // UKSSocialOverlay*
	}

	namespace n_UGizmoConstantFrameAxisSource {
		constexpr auto Origin = 0x30; // FVector
		constexpr auto Direction = 0x3c; // FVector
		constexpr auto TangentX = 0x48; // FVector
		constexpr auto TangentY = 0x54; // FVector
	}

	namespace n_UInterpData {
		constexpr auto InterpLength = 0x28; // float
		constexpr auto PathBuildTime = 0x2c; // float
		constexpr auto InterpGroups = 0x30; // TArray<UInterpGroup*>
		constexpr auto CurveEdSetup = 0x40; // UInterpCurveEdSetup*
		constexpr auto EdSectionStart = 0x48; // float
		constexpr auto EdSectionEnd = 0x4c; // float
		constexpr auto bShouldBakeAndPrune = 0x50; // char : 1
		constexpr auto CachedDirectorGroup = 0x58; // UInterpGroupDirector*
		constexpr auto AllEventNames = 0x60; // TArray<FName>
	}

	namespace n_UAkAudioType {
		constexpr auto ShortID = 0x28; // uint32_t
		constexpr auto UserData = 0x30; // TArray<UObject*>
	}

	namespace n_UKSWeaponAttachment_ExtMagPercent {
		constexpr auto ClipSizeIncreaseMultiplier = 0x2f8; // float
		constexpr auto RoundingType = 0x2fc; // EExtendedMagazineRounding
	}

	namespace n_UKSDataSocialPlayer {
		constexpr auto OnDataUpdate = 0x28; // FMulticastInlineDelegate
		constexpr auto Info = 0x38; // UKSPlayerInfo*
	}

	namespace n_UMaterialExpressionTransform {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto TransformSourceType = 0x54; // EMaterialVectorCoordTransformSource
		constexpr auto TransformType = 0x55; // EMaterialVectorCoordTransform
	}

	namespace n_URuntimeVirtualTexture {
		constexpr auto MaterialType = 0x28; // ERuntimeVirtualTextureMaterialType
		constexpr auto bCompressTextures = 0x29; // bool
		constexpr auto bEnable = 0x2a; // bool
		constexpr auto bClearTextures = 0x2b; // bool
		constexpr auto bSinglePhysicalSpace = 0x2c; // bool
		constexpr auto bPrivateSpace = 0x2d; // bool
		constexpr auto bEnableScalability = 0x2e; // bool
		constexpr auto Size = 0x30; // int32_t
		constexpr auto TileCount = 0x34; // int32_t
		constexpr auto TileSize = 0x38; // int32_t
		constexpr auto TileBorderSize = 0x3c; // int32_t
		constexpr auto StreamLowMips = 0x40; // int32_t
		constexpr auto StreamingTexture = 0x48; // URuntimeVirtualTextureStreamingProxy*
		constexpr auto bEnableCompressCrunch = 0x50; // bool
		constexpr auto RemoveLowMips = 0x54; // int32_t
	}

	namespace n_UKSActivityRewardCondition_CachedValue {
		constexpr auto MinValue = 0x30; // float
		constexpr auto MaxValue = 0x34; // float
		constexpr auto Key = 0x38; // FString
		constexpr auto CheckPlayerCache = 0x48; // bool
	}

	namespace n_UKSActivityRewardCondition_DownsAchieved {
		constexpr auto MinDownsAchieved = 0x30; // int32_t
		constexpr auto MaxDownsAchieved = 0x34; // int32_t
	}

	namespace n_ABandwidthTestActor {
		constexpr auto BandwidthGenerator = 0x220; // FBandwidthTestGenerator
	}

	namespace n_UKSDebugMenu {
		constexpr auto DebugCommands = 0x520; // TArray<FDebugMenuCommandInfo>
	}

	namespace n_UAnimNotify_PlayMontageNotifyWindow {
		constexpr auto NotifyName = 0x30; // FName
	}

	namespace n_UWBP_RogueDetailsNew_C {
		constexpr auto UberGraphFrame = 0x5a8; // FPointerToUberGraphFrame
		constexpr auto AnimNameLoop = 0x5b0; // UWidgetAnimation*
		constexpr auto AnimEnableBlur = 0x5b8; // UWidgetAnimation*
		constexpr auto AnimShowPanel = 0x5c0; // UWidgetAnimation*
		constexpr auto ArmoryButton = 0x5c8; // UWBP_RogueDetailsPanelButton_C*
		constexpr auto ArmoryPanel = 0x5d0; // UWBP_RogueArmoryPanel_C*
		constexpr auto BioButton = 0x5d8; // UWBP_RogueDetailsPanelButton_C*
		constexpr auto BioPanel = 0x5e0; // UWBP_RogueBioPanel_C*
		constexpr auto BlurPanel = 0x5e8; // UBackgroundBlur*
		constexpr auto BorderBackground = 0x5f0; // UImage*
		constexpr auto CustomizeButton = 0x5f8; // UWBP_RogueDetailsPanelButton_C*
		constexpr auto CustomizePanel = 0x600; // UWBP_RogueCustomizationPanel_C*
		constexpr auto DetailPanels = 0x608; // UWidgetSwitcher*
		constexpr auto MasteryButton = 0x610; // UWBP_RogueDetailsPanelButton_C*
		constexpr auto MasteryPanel = 0x618; // UWBP_RogueMasteryPanel_C*
		constexpr auto PerksButton = 0x620; // UWBP_RogueDetailsPanelButton_C*
		constexpr auto PerksPanel = 0x628; // UWBP_RoguePerksPanel_C*
		constexpr auto PrimarySelectPanel = 0x630; // UWBP_RoguePrimaryWeaponSelectPanel_C*
		constexpr auto RogueIcon = 0x638; // UWBP_RogueMasteryPortrait_C*
		constexpr auto RogueName = 0x640; // UTextBlock*
		constexpr auto RogueName_Shadow = 0x648; // UTextBlock*
		constexpr auto TabButtons = 0x650; // TArray<UWBP_RogueDetailsPanelButton_C*>
		constexpr auto SelectedTab = 0x660; // UWBP_RogueDetailsPanelButton_C*
		constexpr auto ActionArmorySeen = 0x668; // FName
		constexpr auto ActionSwapClicked = 0x670; // FName
	}

	namespace n_UDistributionVectorUniformCurve {
		constexpr auto ConstantCurve = 0x38; // FInterpCurveTwoVectors
		constexpr auto bLockAxes1 = 0x50; // char : 1
		constexpr auto bLockAxes2 = 0x50; // char : 1
		constexpr auto LockedAxes = 0x54; // EDistributionVectorLockFlags [0x2]
		constexpr auto MirrorFlags = 0x56; // EDistributionVectorMirrorFlags [0x3]
		constexpr auto bUseExtremes = 0x5c; // char : 1
	}

	namespace n_UMaterialExpressionAtmosphericFogColor {
		constexpr auto WorldPosition = 0x40; // FExpressionInput
	}

	namespace n_UParticleModuleParameterDynamic {
		constexpr auto DynamicParams = 0x30; // TArray<FEmitterDynamicParameter>
		constexpr auto UpdateFlags = 0x40; // int32_t
		constexpr auto bUsesVelocity = 0x44; // char : 1
	}

	namespace n_UParticleModule {
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x29; // char : 1
		constexpr auto LODDuplicate = 0x29; // char : 1
		constexpr auto bSupportsRandomSeed = 0x29; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x29; // char : 1
		constexpr auto LODValidity = 0x2a; // char
	}

	namespace n_UPhysicsAsset {
		constexpr auto BoundsBodies = 0x30; // TArray<int32_t>
		constexpr auto SkeletalBodySetups = 0x40; // TArray<USkeletalBodySetup*>
		constexpr auto ConstraintSetup = 0x50; // TArray<UPhysicsConstraintTemplate*>
		constexpr auto SolverIterations = 0x60; // FSolverIterations
		constexpr auto bNotForDedicatedServer = 0x78; // char : 1
		constexpr auto ThumbnailInfo = 0x120; // UThumbnailInfo*
		constexpr auto BodySetup = 0x128; // TArray<UBodySetup*>
	}

	namespace n_AKSProjectile_Grenade {
		constexpr auto OverlayWarningDisplayWidget = 0x960; // TSoftClassPtr<UObject>
		constexpr auto OnGrenadeProximity = 0x988; // FMulticastInlineDelegate
		constexpr auto MarkerTeamVisibility = 0x998; // EMarkerTeamVisibility
		constexpr auto bTakeOverOnStopped = 0x999; // bool
		constexpr auto RepFuseTimeRemaining = 0x99c; // float
		constexpr auto CurrentFuseTime = 0x9a4; // float
		constexpr auto FuseTimerHandle = 0x9a8; // FTimerHandle
		constexpr auto FuseCookPauseTimerHandle = 0x9b0; // FTimerHandle
		constexpr auto ProximityWarningDelay = 0x9b8; // float
		constexpr auto bSetFuseOnBounce = 0x9c8; // bool
		constexpr auto BounceFuseTime = 0x9cc; // float
		constexpr auto bSetFuseOnStopped = 0x9d0; // bool
		constexpr auto StoppedFuseTime = 0x9d4; // float
		constexpr auto bExplodesOnStopped = 0x9d8; // bool
		constexpr auto DetectionSphere = 0x9e0; // USphereComponent*
		constexpr auto bGeneratesTouchSenseEvents = 0x9e9; // bool
		constexpr auto StimuliSourceComponent = 0x9f0; // UKSItemStimuliSourceComponent*
	}

	namespace n_UUniformVector {
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto Direction = 0xb4; // FVector
	}

	namespace n_UParticleModuleMeshRotationRate_Seeded {
		constexpr auto RandomSeedInfo = 0x78; // FParticleRandomSeedInfo
	}

	namespace n_UKSGameShopItemComponent {
		constexpr auto Category = 0xb0; // FName
		constexpr auto ID = 0xb8; // int32_t
		constexpr auto InitialItems = 0xc0; // TArray<UKSItem*>
		constexpr auto OnItemsChanged = 0xd0; // FMulticastInlineDelegate
		constexpr auto Items = 0xe0; // TArray<UKSItem*>
		constexpr auto OnShopItemPurchased = 0xf0; // FMulticastInlineDelegate
		constexpr auto OnShopItemRefunded = 0x100; // FMulticastInlineDelegate
		constexpr auto AuthoratativeIndex = 0x110; // int32_t
		constexpr auto AppliedIndex = 0x118; // int32_t
	}

	namespace n_UKSBTD_BlackboardPerceived {
		constexpr auto SensesToUse = 0x90; // TArray<UAISense*>
		constexpr auto PerceptionEvent = 0xa0; // FName
	}

	namespace n_AKSCharacter {
		constexpr auto bTapRadialButtonToUseLastSelectedItem = 0x1532; // bool
		constexpr auto ReleasedInputsOnOpenUI = 0x1608; // TArray<FName>
		constexpr auto ExcludedReleasedInputsOnOpenRadialMenu = 0x1618; // TArray<FName>
		constexpr auto ExcludedReleasedInputsOnOpenEscapeMenu = 0x1628; // TArray<FName>
		constexpr auto ExcludedReleasedInputsOnOpenScoreboard = 0x1638; // TArray<FName>
		constexpr auto ExcludedReleasedInputsOnOpenMap = 0x1648; // TArray<FName>
		constexpr auto ReleasedInputsOnCloseRadialMenu = 0x1658; // TArray<FName>
		constexpr auto OnPossessedBy = 0x1668; // FMulticastInlineDelegate
		constexpr auto OnUnpossessed = 0x1678; // FMulticastInlineDelegate
		constexpr auto CachedKSPlayerController = 0x1688; // AKSPlayerController*
		constexpr auto InteractionBlockerManager = 0x1690; // UKSInteractionBlockerManager*
		constexpr auto InteractionType = 0x1698; // UKSInteractionType*
		constexpr auto InteractableComponent = 0x16a0; // UKSInteractableComponent*
		constexpr auto ObjectiveInfo = 0x16a8; // FKSObjectiveInfo
		constexpr auto ObjectiveTimerInfo = 0x1710; // FKSObjectiveTimerInfo
		constexpr auto ObjectiveCaptureInfo = 0x1748; // FKSObjectiveCaptureInfo
		constexpr auto AutoPickupComponent = 0x1760; // UKSAutoPickupComponent*
		constexpr auto bProcessingReverseFriendlyFireDamageEvent = 0x1768; // bool
		constexpr auto RumbleDamageAudioEvent = 0x1788; // UAkAudioEvent*
		constexpr auto RumbleJumpAudioEvent = 0x1790; // UAkAudioEvent*
		constexpr auto RumbleReviveAudioEvent = 0x1798; // UAkAudioEvent*
		constexpr auto RumbleReviveAudioEventEnd = 0x17a0; // UAkAudioEvent*
		constexpr auto RumbleDownedAudioEvent = 0x17a8; // UAkAudioEvent*
		constexpr auto RumbleDownedAudioEventEnd = 0x17b0; // UAkAudioEvent*
		constexpr auto MinimumFlinchHeight = 0x17c0; // float
		constexpr auto MinimumFlinchDamage = 0x17c4; // float
		constexpr auto MaximumFlinchHeight = 0x17c8; // float
		constexpr auto MaximumFlinchDamage = 0x17cc; // float
		constexpr auto FlinchDuration = 0x17d0; // float
		constexpr auto FlinchRecoveryRate = 0x17d4; // float
		constexpr auto bFlinchSnipersOnly = 0x17d8; // bool
		constexpr auto DamageRecord = 0x17e0; // TMap<AKSPlayerState*, FKSDamageRecord>
		constexpr auto DamageRecordResetTime = 0x1830; // float
		constexpr auto DamageRecordResetTimer = 0x1838; // FTimerHandle
		constexpr auto ReplicatedShotgunHits = 0x1840; // FKSShotgunHitChangeList
		constexpr auto OnNewShotgunHit = 0x18c8; // FMulticastInlineDelegate
		constexpr auto KillCamHitRecordTime = 0x1928; // float
		constexpr auto OnLocalViewChanged = 0x1948; // FMulticastInlineDelegate
		constexpr auto LocalViewers = 0x1958; // TArray<TWeakObjectPtr<APlayerController>>
		constexpr auto RepossessState = 0x1968; // FKSRepossessState
		constexpr auto OnCanRemoveBackPackChanged = 0x1980; // FMulticastInlineDelegate
		constexpr auto OnCharacterFreeFallStartedDel = 0x1990; // FMulticastInlineDelegate
		constexpr auto OnCharacterFreeFallCompletedDel = 0x19a0; // FMulticastInlineDelegate
		constexpr auto RemoveBackpackInteractionPromptText = 0x19b8; // FText
		constexpr auto SkyDiveMaxPitch = 0x19d0; // float
		constexpr auto SkyDiveMinPitch = 0x19d4; // float
		constexpr auto SkyDiveExitDistance = 0x19d8; // float
		constexpr auto SkyDiveExitThreshold = 0x19dc; // float
		constexpr auto SkyDiveForceExitDistance = 0x19e0; // float
		constexpr auto bLeftHandMantleIK = 0x19e4; // bool
		constexpr auto bRightHandMantleIK = 0x19e5; // bool
		constexpr auto LeftHandMantleIKLocation = 0x19e8; // FVector
		constexpr auto RightHandMantleIKLocation = 0x19f4; // FVector
		constexpr auto LeftHandMantleIKAlpha = 0x1a00; // float
		constexpr auto RightHandMantleIKAlpha = 0x1a04; // float
		constexpr auto bFadeOutLeftHandMantleIK = 0x1a08; // bool
		constexpr auto bFadeOutRightHandMantleIK = 0x1a09; // bool
		constexpr auto SmoothedComponents = 0x1a10; // TArray<FSmoothedComponentInfo>
		constexpr auto RegisteredSmoothingComponents = 0x1a20; // TArray<UKSSmoothingComponent*>
		constexpr auto SprintImpulseCurve = 0x1ac8; // UCurveFloat*
		constexpr auto SprintPressLeeway = 0x1ad4; // float
		constexpr auto SprintLeewayExpire = 0x1ad8; // float
		constexpr auto bFacingVaultWall = 0x1adc; // bool
		constexpr auto bWantsToAutoSprint = 0x1add; // bool
		constexpr auto bAutoSprintTimerComplete = 0x1ade; // bool
		constexpr auto AutoSprintDelay = 0x1ae0; // float
		constexpr auto LeftHandMantleIKOffset = 0x1af0; // float
		constexpr auto RightHandMantleIKOffset = 0x1af4; // float
		constexpr auto HandMantleIKFadeTime = 0x1af8; // float
		constexpr auto MantleIKHandsToWallForwardOffset = 0x1afc; // float
		constexpr auto RiseFromCrouchDelayTime = 0x1b00; // float
		constexpr auto bUsingEmoteCamera = 0x1b08; // bool
		constexpr auto EmoteFinishedDisableFireTimeSeconds = 0x1b0c; // float
		constexpr auto ActiveEmoteActionRestrictorID = 0x1b10; // int32_t
		constexpr auto RemoveEmoteActionRestrictorTimerHandle = 0x1b18; // FTimerHandle
		constexpr auto OnCrouchStartedDel = 0x1b68; // FMulticastInlineDelegate
		constexpr auto OnCrouchEndedDel = 0x1b78; // FMulticastInlineDelegate
		constexpr auto GamepadInput = 0x1b88; // float
		constexpr auto HasGamepadInput = 0x1b8c; // bool
		constexpr auto bZiplineActive = 0x1b8d; // bool
		constexpr auto AbilityMovementMod = 0x1b90; // UKSModInst_Activated*
		constexpr auto ZiplineMeshHeightAdjust = 0x1b98; // float
		constexpr auto DrownDamagePeriod = 0x1b9c; // float
		constexpr auto DrownPerTickDamage = 0x1ba0; // float
		constexpr auto DrownDamageType = 0x1ba8; // UDamageType*
		constexpr auto PositionHistoryComponent = 0x1bb8; // UPGame_PositionHistoryComponent*
		constexpr auto ReplicatedEMPLockoutTimer = 0x1bc0; // FPGame_ReplicatedTimer
		constexpr auto bIsEMPLocked = 0x1c10; // bool
		constexpr auto OnEMPLocked = 0x1c18; // FMulticastInlineDelegate
		constexpr auto OnEMPLockoutTick = 0x1c28; // FMulticastInlineDelegate
		constexpr auto bIsOnFire = 0x1c50; // bool
		constexpr auto CameraHandler = 0x1c58; // UKSCharacterCameraHandler*
		constexpr auto CameraRootComponent = 0x1c60; // UKSSmoothingComponent*
		constexpr auto MainCameraBoom = 0x1c68; // UKSSpringArmComponent*
		constexpr auto MainCameraComponent = 0x1c70; // UCameraComponent*
		constexpr auto SprintCameraBoom = 0x1c78; // UKSSpringArmComponent*
		constexpr auto SprintCameraComponent = 0x1c80; // UCameraComponent*
		constexpr auto TransitionCameraBoom = 0x1c88; // UKSSpringArmComponent*
		constexpr auto TransitionCameraComponent = 0x1c90; // UCameraComponent*
		constexpr auto ShoulderCameraBoom = 0x1c98; // UKSSpringArmComponent*
		constexpr auto ShoulderCameraComponent = 0x1ca0; // UCameraComponent*
		constexpr auto FirstPersonCameraComponent = 0x1ca8; // UCameraComponent*
		constexpr auto TabletCameraBoom = 0x1cb0; // UKSSpringArmComponent*
		constexpr auto TabletCameraComponent = 0x1cb8; // UCameraComponent*
		constexpr auto ActionCameraBoom1 = 0x1cc0; // UKSSpringArmComponent*
		constexpr auto ActionCameraComponent = 0x1cc8; // UCameraComponent*
		constexpr auto SwimCameraBoom = 0x1cd0; // UKSSpringArmComponent*
		constexpr auto SwimCameraComponent = 0x1cd8; // UCameraComponent*
		constexpr auto MountedCameraBoom = 0x1ce0; // UKSSpringArmComponent*
		constexpr auto MountedCameraComponent = 0x1ce8; // UCameraComponent*
		constexpr auto ActiveCameraComponent = 0x1cf0; // UCameraComponent*
		constexpr auto PendingCameraComponent = 0x1cf8; // UCameraComponent*
		constexpr auto CrouchAOSAimVertOffset = 0x1d04; // float
		constexpr auto CrouchAOSCamVertOffsetBlendTime = 0x1d08; // float
		constexpr auto CrouchAimingCapsuleHeightAdjustment = 0x1d0c; // float
		constexpr auto AimSnapThrottleTime = 0x1d28; // float
		constexpr auto LockoutCameraCooldownSpeed = 0x1d30; // float
		constexpr auto AutoShoulderSwapExtent = 0x1d50; // FVector
		constexpr auto AutoShoulderSwapForwardCheckDist = 0x1d5c; // float
		constexpr auto AutoShoulderSwapRightCheckDist = 0x1d60; // float
		constexpr auto AutoShoulderSwapRightForwardCheckDist = 0x1d64; // float
		constexpr auto LockedAutoShoulderSwapTimeThreshold = 0x1d68; // float
		constexpr auto LockedAutoShoulderSwapWeaponFireTime = 0x1d6c; // float
		constexpr auto LockedAutoShoulderSwapDistance = 0x1d70; // float
		constexpr auto AimState = 0x1d88; // EKSCharacterAimMode
		constexpr auto DesiredAimState = 0x1d89; // EKSCharacterAimMode
		constexpr auto bAimPressed = 0x1d8a; // bool
		constexpr auto bWasAimDownSightsWhenAimPressed = 0x1d8b; // bool
		constexpr auto bWasAimAlternateWhenAimPressed = 0x1d8c; // bool
		constexpr auto AimHoldTime = 0x1d90; // float
		constexpr auto AimOverShoulderHoldTime = 0x1d94; // float
		constexpr auto MaterialHideTypeMap = 0x1d98; // TMap<EKSMaterialHideType, UMaterial*>
		constexpr auto MaterialIndexesToHide = 0x1de8; // TMap<int32_t, EKSMaterialHideType>
		constexpr auto HiddenMaterials = 0x1e38; // TMap<int32_t, UMaterialInterface*>
		constexpr auto bIsAimLocked = 0x1e88; // bool
		constexpr auto OnAimLockedChangedDel = 0x1e90; // FMulticastInlineDelegate
		constexpr auto bIsCrosshairHidden = 0x1ea0; // bool
		constexpr auto OnCrosshairHiddenChangedDel = 0x1ea8; // FMulticastInlineDelegate
		constexpr auto OnCannonBonusAmmoRecieved = 0x1eb8; // FMulticastInlineDelegate
		constexpr auto AvailableEquipPoints_New = 0x1f28; // FGameplayTagContainer
		constexpr auto InitialInventory = 0x1f48; // TArray<FKSInitialInventoryItem>
		constexpr auto InitialAmmo = 0x1f58; // TArray<FKSInitialAmmo>
		constexpr auto EquipmentManagerComponent = 0x1f68; // UKSEquipmentManagerComponent*
		constexpr auto bDropAmmoOnDeath = 0x1f70; // bool
		constexpr auto WeaponSlotsToDropOnDeath = 0x1f78; // FGameplayTagContainer
		constexpr auto WeaponSlotsToDropOnDowned = 0x1f98; // FGameplayTagContainer
		constexpr auto ActiveWeaponSlotTiers = 0x1fb8; // TArray<FGameplayTagContainer>
		constexpr auto GrenadeSlotTiers = 0x1fc8; // TArray<FGameplayTagContainer>
		constexpr auto LootLockerInventory = 0x1fd8; // TArray<FKSLootLockerItem>
		constexpr auto StartingActiveWeaponEquipPoint = 0x1fe8; // FGameplayTag
		constexpr auto MainSwapHandlerProfile = 0x1ff0; // UKSSwapHandlerProfile*
		constexpr auto GadgetSwapHandlerProfile = 0x1ff8; // UKSSwapHandlerProfile*
		constexpr auto MedpackSwapHandlerProfile = 0x2000; // UKSSwapHandlerProfile*
		constexpr auto PassiveSwapHandlerProfile = 0x2008; // UKSSwapHandlerProfile*
		constexpr auto QuickMeleeSwapHandlerProfile = 0x2010; // UKSSwapHandlerProfile*
		constexpr auto EmergencyWeaponAsset = 0x2018; // UKSWeaponAsset*
		constexpr auto ObjectiveWeaponDropPrompt = 0x2028; // FText
		constexpr auto ObjectiveWeaponDropProgressText = 0x2040; // FText
		constexpr auto DropObjectiveWeaponInteractTime = 0x2058; // float
		constexpr auto OnCharacterStartedWeaponFireNativeDel = 0x2060; // FMulticastInlineDelegate
		constexpr auto bSelfDestruct = 0x2070; // bool
		constexpr auto SubTypeComponentIndexMap = 0x20e8; // TMap<FName, int32_t>
		constexpr auto MeleeHoldTime = 0x2138; // float
		constexpr auto PrimaryTier = 0x213c; // int32_t
		constexpr auto SecondaryTier = 0x2140; // int32_t
		constexpr auto MeleeTier = 0x2144; // int32_t
		constexpr auto WeaponDropHoldTime = 0x2148; // float
		constexpr auto WeaponDoubleTapTime = 0x214c; // float
		constexpr auto LastActiveWeaponFireTimestamp = 0x2150; // float
		constexpr auto OnActiveWeaponChangedDel = 0x2158; // FMulticastInlineDelegate
		constexpr auto OnActiveGrenadeChangedDel = 0x2180; // FMulticastInlineDelegate
		constexpr auto OnActiveMedPackChangedDel = 0x21a8; // FMulticastInlineDelegate
		constexpr auto MeleeHoldTimer = 0x21d0; // FTimerHandle
		constexpr auto DoubleTapTimer = 0x21d8; // FTimerHandle
		constexpr auto DropHoldTimer = 0x21e0; // FTimerHandle
		constexpr auto WeaponSwapThrottleExpire = 0x21e8; // float
		constexpr auto WeaponSwapThrottlePeriod = 0x21ec; // float
		constexpr auto QuickMeleeHoldTime = 0x21f0; // float
		constexpr auto CurrentQuickMeleeWeapon = 0x21f8; // AKSWeapon_Melee*
		constexpr auto bQuickMeleeHoldCompleted = 0x2200; // bool
		constexpr auto bSwapOffQuickMeleeAfterFire = 0x2201; // bool
		constexpr auto OnStartFireFailed = 0x2220; // FMulticastInlineDelegate
		constexpr auto bNoFire = 0x2230; // bool
		constexpr auto IsFireWeaponHeld = 0x2250; // bool
		constexpr auto bStartFireAfterAnimFinish = 0x2251; // bool
		constexpr auto bIsThrowGrenadeHeld = 0x2252; // bool
		constexpr auto IsAimDownSightsHeld = 0x2253; // bool
		constexpr auto SwingMontageSection = 0x2258; // FString
		constexpr auto OnWeaponInventoryChanged = 0x2278; // FMulticastInlineDelegate
		constexpr auto OnGadgetResupplied = 0x2288; // FMulticastInlineDelegate
		constexpr auto OnMeleeHoldStart = 0x2298; // FMulticastInlineDelegate
		constexpr auto OnMeleeHoldEnd = 0x22a8; // FMulticastInlineDelegate
		constexpr auto ActiveWeaponComponent = 0x22b8; // UKSWeaponComponent* [0xb]
		constexpr auto ActiveEquipmentId = 0x2310; // uint16_t [0xb]
		constexpr auto EquipmentContainer = 0x2338; // FKSEquipmentContainer
		constexpr auto PendingWeaponStateUpdates = 0x2560; // TMap<uint16_t, FKSPendingWeaponStateUpdates>
		constexpr auto OnEquipmentAddedDel = 0x25b0; // FMulticastInlineDelegate
		constexpr auto OnEquipmentRemovedDel = 0x25d8; // FMulticastInlineDelegate
		constexpr auto OnEquipmentBecomeActiveDel = 0x2600; // FMulticastInlineDelegate
		constexpr auto OnEquipmentEndActiveDel = 0x2628; // FMulticastInlineDelegate
		constexpr auto OnSpecialAmmoEvent = 0x2650; // FMulticastInlineDelegate
		constexpr auto AmmoDropAssets = 0x2660; // TMap<EAmmoType, UKSAmmoDropAsset*>
		constexpr auto AmmoManager = 0x26b0; // FKSAmmoManager
		constexpr auto OutOfSightWeaponPickupRange = 0x27f8; // float
		constexpr auto WeaponPickupRange = 0x27fc; // float
		constexpr auto PickUpSphereComponent = 0x2800; // USphereComponent*
		constexpr auto LabelPickupRange = 0x2808; // float
		constexpr auto OnItemPickedUp = 0x2810; // FMulticastInlineDelegate
		constexpr auto OutOfRangePickups = 0x2820; // TMap<AActor*, float>
		constexpr auto ReloadTapThreshold = 0x2870; // float
		constexpr auto ContextualPressTime = 0x2874; // float
		constexpr auto bWantsToInteract = 0x2878; // bool
		constexpr auto CachedMaxHealth = 0x287c; // float
		constexpr auto DownedHealth = 0x2880; // float
		constexpr auto RevivedHealth = 0x2884; // float
		constexpr auto ArmorHelmetLevel = 0x2888; // int32_t
		constexpr auto ArmorVestLevel = 0x288c; // int32_t
		constexpr auto ArmorDurabilityPercent = 0x2890; // float
		constexpr auto CurrentArmorDurability = 0x2894; // float
		constexpr auto MaxHealthBonus = 0x2898; // float
		constexpr auto MaxMaxHealthBonus = 0x289c; // float
		constexpr auto LocalMaxHealthBonus = 0x28a0; // float
		constexpr auto OnMaxHealthBonusChanged = 0x28a8; // FMulticastInlineDelegate
		constexpr auto bDowned = 0x28b9; // bool
		constexpr auto GiveUpTimer = 0x28c0; // UKSTimerComponent*
		constexpr auto GiveUpHoldTime = 0x28c8; // float
		constexpr auto OnGiveUpTimerActive = 0x28d0; // FMulticastInlineDelegate
		constexpr auto OnGiveUpTimerTick = 0x28e0; // FMulticastInlineDelegate
		constexpr auto OnGiveUpAllowed = 0x28f0; // FMulticastInlineDelegate
		constexpr auto DownedImmuneTime = 0x2900; // float
		constexpr auto DownedImmuneTimeStamp = 0x2904; // float
		constexpr auto bAllowGiveUp = 0x290c; // bool
		constexpr auto BleedPeriod = 0x2910; // float
		constexpr auto BleedDamage = 0x2914; // float
		constexpr auto BleedDamageType = 0x2918; // UDamageType*
		constexpr auto DownInstigator = 0x2928; // AController*
		constexpr auto DownDamageType = 0x2930; // UDamageType*
		constexpr auto DownDamageCauser = 0x2938; // AActor*
		constexpr auto OnCharacterDownedChangedDel = 0x2958; // FMulticastInlineDelegate
		constexpr auto DownSpree = 0x2968; // int32_t
		constexpr auto DownSpreeSounds = 0x2970; // TArray<UAkAudioEvent*>
		constexpr auto DefaultAssistDuration = 0x2980; // float
		constexpr auto DownAssistTagQueue = 0x2988; // TArray<FAssistTag>
		constexpr auto DownAssists = 0x2998; // TArray<APlayerState*>
		constexpr auto KillInstigator = 0x29a8; // AController*
		constexpr auto EliminationAssists = 0x29b0; // TArray<APlayerState*>
		constexpr auto PlayersWithEliminationCredit = 0x29c0; // TArray<APlayerState*>
		constexpr auto ReviveInteractionProgressText = 0x29d8; // FText
		constexpr auto ReviveInteractionPromptText = 0x29f0; // FText
		constexpr auto InteractionCameraShake = 0x2a08; // UCameraShake*
		constexpr auto TimeToRevive = 0x2a10; // float
		constexpr auto bForceCrouchOnRevive = 0x2a14; // float
		constexpr auto ReviveInfo = 0x2a18; // FReviveInfo
		constexpr auto bCanMoveWhileRevivingOther = 0x2a48; // bool
		constexpr auto ActorTargetingMeForRevive = 0x2ab0; // TWeakObjectPtr<AActor>
		constexpr auto OnStartReviveDel = 0x2ab8; // FMulticastInlineDelegate
		constexpr auto OnStartReviveOtherDel = 0x2ae0; // FMulticastInlineDelegate
		constexpr auto OnReviveInterruptedDel = 0x2b08; // FMulticastInlineDelegate
		constexpr auto OnReviveOtherInterruptedDel = 0x2b30; // FMulticastInlineDelegate
		constexpr auto OnReviveCompletedDel = 0x2b58; // FMulticastInlineDelegate
		constexpr auto OnReviveOtherCompletedDel = 0x2b80; // FMulticastInlineDelegate
		constexpr auto NumOngoingRemoteRevives = 0x2ba8; // int32_t
		constexpr auto OnShoulderSwapChanged = 0x2c10; // FMulticastInlineDelegate
		constexpr auto InteractionManager = 0x2c20; // UKSInteractionManager*
		constexpr auto ReceivedInteractionManager = 0x2c28; // UKSInteractionManager*
		constexpr auto InteractionHoverTarget = 0x2c30; // TWeakObjectPtr<AActor>
		constexpr auto bHoverTargetPress = 0x2c38; // bool
		constexpr auto bHoverTargetHold = 0x2c39; // bool
		constexpr auto InteractionTarget = 0x2c40; // AActor*
		constexpr auto IsInInteraction = 0x2c48; // bool
		constexpr auto MostRecentInteractionType = 0x2c50; // UKSInteractionType*
		constexpr auto MostRecentInteractionResult = 0x2c58; // EKSInteractionResult
		constexpr auto MostRecentInteractionStartLocation = 0x2c5c; // FVector
		constexpr auto InteractionFacesRotation = 0x2c68; // bool
		constexpr auto InteractionCameraTransition = 0x2c70; // FKSInteractableCameraTransition
		constexpr auto DefaultInteractionType = 0x2ca0; // UKSInteractionType*
		constexpr auto InteractionDistance = 0x2ca8; // float
		constexpr auto MaxInteractionAngle = 0x2cac; // float
		constexpr auto InteractionHoldTime = 0x2cb0; // float
		constexpr auto InteractionPriorityBaseModifier = 0x2cb4; // float
		constexpr auto bUncrouchAfterInteraction = 0x2cb8; // bool
		constexpr auto bInteractionCrouchLock = 0x2cb9; // bool
		constexpr auto InstantInteractHandle = 0x2cd8; // FTimerHandle
		constexpr auto InstantInteractCooldownTime = 0x2ce0; // float
		constexpr auto OnHoveredInteractableChanged = 0x2ce8; // FMulticastInlineDelegate
		constexpr auto OnInteractStart = 0x2cf8; // FMulticastInlineDelegate
		constexpr auto OnRemotePlayerInteractStart = 0x2d08; // FMulticastInlineDelegate
		constexpr auto OnInteractEnd = 0x2d18; // FMulticastInlineDelegate
		constexpr auto OnRemotePlayerInteractEnd = 0x2d28; // FMulticastInlineDelegate
		constexpr auto OnInteractSuccess = 0x2d38; // FMulticastInlineDelegate
		constexpr auto OnInteractFailed = 0x2d48; // FMulticastInlineDelegate
		constexpr auto OnInteractInterrupted = 0x2d58; // FMulticastInlineDelegate
		constexpr auto OnChargingActionStart = 0x2d68; // FMulticastInlineDelegate
		constexpr auto OnChargingActionEnd = 0x2d78; // FMulticastInlineDelegate
		constexpr auto BaseLocalDropLocation = 0x2d88; // FVector
		constexpr auto TierToDropYawMap = 0x2d98; // TMap<int32_t, float>
		constexpr auto EquipPointToDropYawMap = 0x2de8; // TMap<FGameplayTag, float>
		constexpr auto AmmoDropYaw = 0x2e38; // float
		constexpr auto DropLateralSpeed = 0x2e3c; // float
		constexpr auto DropLateralSpeedVariance = 0x2e40; // float
		constexpr auto CompanionAmmoHeightShift = 0x2e44; // float
		constexpr auto DropAngleVariance = 0x2e48; // float
		constexpr auto bInRagdoll = 0x2e60; // bool
		constexpr auto bInPreRagdoll = 0x2e61; // bool
		constexpr auto TryToStopRagdollInterval = 0x2e7c; // float
		constexpr auto RagdollFreezeSpeed = 0x2e80; // float
		constexpr auto DeathDisplayLifespan = 0x2e9c; // float
		constexpr auto DeathWidgetPoolName = 0x2ea0; // TArray<FString>
		constexpr auto bGodMode = 0x2f98; // bool
		constexpr auto FlashBangRecords = 0x2fa0; // TArray<FKSFlashBangRecord>
		constexpr auto FlashBangEffectMod = 0x2fb8; // UKSPlayerMod*
		constexpr auto FlashBangEffectModInstance = 0x2fc0; // UKSPlayerModInstance*
		constexpr auto OnLightBombHitCount = 0x2fc8; // FMulticastInlineDelegate
		constexpr auto OnAbleToMountChanged = 0x2fd8; // FMulticastInlineDelegate
		constexpr auto OnCamouflageChangedDel = 0x2fe8; // FMulticastInlineDelegate
		constexpr auto OnCamouflageLevelChangedDel = 0x2ff8; // FMulticastInlineDelegate
		constexpr auto bCachedCamouflaged = 0x3008; // bool
		constexpr auto CurrentCamouflageLevel = 0x3009; // EKSCamouflageLevel
		constexpr auto bScrambled = 0x3018; // bool
		constexpr auto bMedPackPressed = 0x3019; // bool
		constexpr auto OnStickDel = 0x3020; // FMulticastInlineDelegate
		constexpr auto OnMedPackFailed = 0x3030; // FMulticastInlineDelegate
		constexpr auto OnGrenadeFailed = 0x3040; // FMulticastInlineDelegate
		constexpr auto OnWeaponPickupInventoryFull = 0x3050; // FMulticastInlineDelegate
		constexpr auto OnItemPickupSuccess = 0x3060; // FMulticastInlineDelegate
		constexpr auto bReplicatedActivatingMod = 0x3070; // bool
		constexpr auto OnModsUpdated = 0x3078; // FMulticastInlineDelegate
		constexpr auto OnActivatableModsUpdated = 0x3088; // FMulticastInlineDelegate
		constexpr auto bRotationInputAllowsAimAssist = 0x3098; // bool
		constexpr auto MinimumRotationInputForAimAssist = 0x309c; // float
		constexpr auto OnGamepadAbilityCycle = 0x30a0; // FMulticastInlineDelegate
		constexpr auto OnAbilityActivatedEvent = 0x30b0; // FMulticastInlineDelegate
		constexpr auto OnAbilityUsedEvent = 0x30c0; // FMulticastInlineDelegate
		constexpr auto ChordDelay = 0x30d4; // float
		constexpr auto HoldDelay = 0x30d8; // float
		constexpr auto DamageForMaxForceFeedback = 0x30dc; // float
		constexpr auto DamageForceFeedbackScale = 0x30e0; // float
		constexpr auto DamageForceFeedbackDuration = 0x30e4; // float
		constexpr auto bDamageForceFeedbackUsesSmallMotors = 0x30e8; // bool
		constexpr auto ForceFeedbackOnErrorMagnitude = 0x30ec; // float
		constexpr auto ForceFeedbackOnErrorDuration = 0x30f0; // float
		constexpr auto LandingSpeedForMaxForceFeedback = 0x30f4; // float
		constexpr auto LandForceFeedbackComponent = 0x30f8; // UForceFeedbackComponent*
		constexpr auto JumpForceFeedbackEffect = 0x3100; // UForceFeedbackEffect*
		constexpr auto DownedForceFeedbackEffect = 0x3108; // UForceFeedbackEffect*
		constexpr auto BeingRevivedForceFeedbackEffect = 0x3110; // UForceFeedbackEffect*
		constexpr auto ReplicatedFootstepOverrides = 0x3118; // TArray<TScriptInterface<IKSFootstepOverrideInterface>>
		constexpr auto AutonomousProxyFootstepOverrides = 0x3128; // TArray<TScriptInterface<IKSFootstepOverrideInterface>>
		constexpr auto FootprintLifetimeSeconds = 0x3138; // float
		constexpr auto FootprintStartFadeOutTimeSeconds = 0x313c; // float
		constexpr auto FootprintDecalSize = 0x3140; // FVector
		constexpr auto LeftFootprintDecalMaterial = 0x3150; // UMaterialInterface*
		constexpr auto RightFootprintDecalMaterial = 0x3158; // UMaterialInterface*
		constexpr auto FootprintMeshSize = 0x3160; // FVector
		constexpr auto FootprintMesh = 0x3170; // UStaticMesh*
		constexpr auto Footprints = 0x3178; // TArray<FKSFootprintInfo>
		constexpr auto FootprintInstancedMeshComponent = 0x3188; // UInstancedStaticMeshComponent*
		constexpr auto MovingNavAreaClass = 0x3198; // UNavArea*
		constexpr auto StillNavAreaClass = 0x31a0; // UNavArea*
		constexpr auto KSNavModifierComponent = 0x31a8; // UKSNavModifierComponent*
		constexpr auto NavModificationUpdateTimerPeriod = 0x31b0; // float
		constexpr auto DamagedHearingEventTag = 0x31c0; // FName
		constexpr auto DamageForDefaultLoudness = 0x31c8; // float
		constexpr auto FireHearingEventTag = 0x31cc; // FName
		constexpr auto FireRangeForDefaultLoudness = 0x31d4; // float
		constexpr auto FootstepHearingEventTag = 0x31d8; // FName
		constexpr auto MovementSpeedForDefaultLoudness = 0x31e0; // float
		constexpr auto TeamEventRange = 0x31e4; // float
		constexpr auto BotName = 0x31f4; // FName
		constexpr auto BotADSAccuracy = 0x31fc; // float
		constexpr auto bRandomBotName = 0x3200; // bool
		constexpr auto bBot = 0x3201; // bool
		constexpr auto CurrentBehaviorState = 0x3202; // ECharacterBehaviorState
		constexpr auto OnBehaviorStateChanged = 0x3208; // FMulticastInlineDelegate
		constexpr auto VOComponentClass = 0x3218; // UKSVOComponent*
		constexpr auto VOComponent = 0x3220; // UKSVOComponent*
		constexpr auto PossibleVOTables = 0x3228; // TArray<UDataTable*>
		constexpr auto DownOtherVOEvent = 0x323c; // FGameplayTag
		constexpr auto NameplateZOffset = 0x3244; // float
		constexpr auto CurrentNameplateZOffset = 0x3248; // float
		constexpr auto CurrentNameplateAimZOffset = 0x324c; // float
		constexpr auto NameplateAimZOffset = 0x3250; // float
		constexpr auto NameplateAimZOffsetBlendTime = 0x3254; // float
		constexpr auto TargetNameplateAimZOffset = 0x3258; // float
		constexpr auto CurrentNameplateCrouchZOffset = 0x325c; // float
		constexpr auto NameplateCrouchZOffset = 0x3260; // float
		constexpr auto NameplateCrouchZOffsetBlendTime = 0x3264; // float
		constexpr auto TargetNameplateCrouchZOffset = 0x3268; // float
		constexpr auto VehicleState = 0x326c; // EKSVehicleState
		constexpr auto CurrentVehicle = 0x3270; // AKSVehicle*
		constexpr auto OnVehicleStateChanged = 0x3288; // FMulticastInlineDelegate
		constexpr auto OnDestructibleSpeedOverlap = 0x3298; // FMulticastInlineDelegate
		constexpr auto bDoDrawDebugLines = 0x32a8; // bool
		constexpr auto BaseVisibilityBone = 0x32ac; // FName
		constexpr auto LeftElbowBone = 0x32b4; // FName
		constexpr auto LeftWristBone = 0x32bc; // FName
		constexpr auto RightElbowBone = 0x32c4; // FName
		constexpr auto RightWristBone = 0x32cc; // FName
		constexpr auto HiddenArmScale = 0x32d4; // float
		constexpr auto LeftArmScaleAlpha = 0x32d8; // float
		constexpr auto RightArmScaleAlpha = 0x32dc; // float
		constexpr auto bShowWeaponWhenArmVisible = 0x32e0; // bool
		constexpr auto MaxDistancePenetrationCheck = 0x32e4; // float
		constexpr auto LeftArmVisibility = 0x37e8; // EKSArmVisibilityType
		constexpr auto RightArmVisibility = 0x37e9; // EKSArmVisibilityType
		constexpr auto PelvisBone = 0x37ec; // FName
		constexpr auto DefaultApparelSetup = 0x37f8; // TArray<UKSApparelAsset*>
		constexpr auto AppliedApparelMap = 0x3808; // TMap<FAppliedApparelKey, UKSApparelAsset*>
		constexpr auto SlotToApparelKeyMap = 0x3858; // TMap<FName, FAppliedApparelKey>
		constexpr auto ApparelAssets = 0x38a8; // TArray<UKSApparelAsset*>
		constexpr auto bNoApparel = 0x38b8; // bool
		constexpr auto LocalApparelAssets = 0x38c0; // TArray<TWeakObjectPtr<UKSApparelAsset>>
		constexpr auto bApparelAssetMapDirty = 0x38d0; // bool
		constexpr auto ApparelTimeoutHandle = 0x38d8; // FTimerHandle
		constexpr auto ApparelTimeoutTime = 0x38e0; // float
		constexpr auto bFirstApparelApplicationSuccess = 0x38e4; // bool
		constexpr auto OnNewApparelApplicationFinishedDel = 0x3948; // FMulticastInlineDelegate
		constexpr auto bApparelInstancesAreLoaded = 0x3958; // bool
		constexpr auto ApparelLockCount = 0x3968; // int32_t
		constexpr auto bApparelDirtiedAndLocked = 0x396c; // bool
		constexpr auto TranslucencyMaterialInfos = 0x39c0; // TArray<FKSTranslucencyMaterialInfo>
		constexpr auto Gender = 0x39d0; // FKSCharacterGender
		constexpr auto LocalGender = 0x39d2; // FKSCharacterGender
		constexpr auto OnGenderChangedDel = 0x39d8; // FMulticastInlineDelegate
		constexpr auto SkinsManager = 0x3a00; // USkinObjectManagerComponent*
		constexpr auto DefaultBodyApparelSkinObject = 0x3a08; // UMultiSkinObject*
		constexpr auto SkinTagContainer = 0x3a10; // FGameplayTagContainer
		constexpr auto DefaultApparelSkinTables = 0x3a30; // TArray<FDataTableInfo>
		constexpr auto bUseCameraProximityFading = 0x3a58; // bool
		constexpr auto CameraFadeStartDistance = 0x3a5c; // float
		constexpr auto CameraFadeEndDistance = 0x3a60; // float
		constexpr auto FadeAlphaParamName = 0x3a64; // FName
		constexpr auto LastCameraProximityAlpha = 0x3a6c; // float
		constexpr auto Emotion = 0x3a70; // EKSEmotion
		constexpr auto LocalEmotion = 0x3a71; // EKSEmotion
		constexpr auto LastEmotion = 0x3a72; // EKSEmotion
		constexpr auto EmotionFloat = 0x3a74; // float
		constexpr auto OnEmotionChangedDel = 0x3a78; // FMulticastInlineDelegate
		constexpr auto ActiveEmotePropInfos = 0x3a88; // TArray<FKSActiveEmotePropInfo>
		constexpr auto CurrentEmotePhysicsProp = 0x3a98; // TWeakObjectPtr<AKSProp_Physical>
		constexpr auto CurrentEmoteDecalComponent = 0x3aa0; // TWeakObjectPtr<UDecalComponent>
		constexpr auto AnimationAuditComponent = 0x3aa8; // UKSAnimationAuditComponent*
		constexpr auto ADSBlurMID = 0x3ab0; // UMaterialInstanceDynamic*
		constexpr auto TimeToRepairArmor = 0x3ab8; // float
		constexpr auto DurabilityASecond = 0x3abc; // float
		constexpr auto bRepairAllArmorAtOnce = 0x3ac0; // bool
		constexpr auto ArmorRepairProgressText = 0x3ac8; // FText
		constexpr auto ArmorRepairPromptText = 0x3ae0; // FText
		constexpr auto bCanRepairArmor = 0x3af8; // bool
		constexpr auto bRepairableArmorEquipped = 0x3af9; // bool
		constexpr auto bIsRepairingArmor = 0x3afa; // bool
		constexpr auto OnRepairableArmorEquippedDel = 0x3b00; // FMulticastInlineDelegate
		constexpr auto OnArmorInteractAvailableDel = 0x3b10; // FMulticastInlineDelegate
		constexpr auto NudgingActors = 0x3b20; // TArray<TWeakObjectPtr<AActor>>
		constexpr auto NudgeComponent = 0x3b30; // UKSNudgeComponent*
		constexpr auto NudgeComponentClass = 0x3b38; // UKSNudgeComponent*
		constexpr auto WeaponPropManagerComponent = 0x3b40; // UKSWeaponPropManagerComponent*
		constexpr auto SkinnableSkelPropManagerComponent = 0x3b48; // USkelPropManagerComponent*
		constexpr auto SkinnableStaticPropManagerComponent = 0x3b50; // UStaticPropManagerComponent*
		constexpr auto SkinMap = 0x3b58; // TMap<UKSItem*, UKSItem*>
		constexpr auto bTouchModeAutoSprintActive = 0x3c18; // bool
		constexpr auto bPreventingAutoSprint = 0x3c19; // bool
	}

	namespace n_UWBP_CosmeticItem_AvatarEmpty_C {
		constexpr auto Image_76 = 0x520; // UImage*
	}

	namespace n_UMovieSceneSequence {
		constexpr auto PrecompiledEvaluationTemplate = 0x50; // FMovieSceneEvaluationTemplate
		constexpr auto DefaultCompletionMode = 0x340; // EMovieSceneCompletionMode
		constexpr auto bParentContextsAreSignificant = 0x341; // bool
		constexpr auto bPlayableDirectly = 0x342; // bool
	}

	namespace n_UWBP_PlayerIdentity_Banner_C {
		constexpr auto BannerIcon = 0x520; // UWBP_AsyncIcon_C*
		constexpr auto BorderIcon = 0x528; // UWBP_AsyncIcon_C*
	}

	namespace n_UMaterialExpressionRound {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_ALandscapeProxy {
		constexpr auto SplineComponent = 0x220; // ULandscapeSplinesComponent*
		constexpr auto LandscapeGuid = 0x228; // FGuid
		constexpr auto LandscapeSectionOffset = 0x238; // FIntPoint
		constexpr auto MaxLODLevel = 0x240; // int32_t
		constexpr auto LODDistanceFactor = 0x244; // float
		constexpr auto LODFalloff = 0x248; // ELandscapeLODFalloff
		constexpr auto ComponentScreenSizeToUseSubSections = 0x24c; // float
		constexpr auto LOD0ScreenSize = 0x250; // float
		constexpr auto LOD0DistributionSetting = 0x254; // float
		constexpr auto LODDistributionSetting = 0x258; // float
		constexpr auto TessellationComponentScreenSize = 0x25c; // float
		constexpr auto UseTessellationComponentScreenSizeFalloff = 0x260; // bool
		constexpr auto TessellationComponentScreenSizeFalloff = 0x264; // float
		constexpr auto OccluderGeometryLOD = 0x268; // int32_t
		constexpr auto StaticLightingLOD = 0x26c; // int32_t
		constexpr auto DefaultPhysMaterial = 0x270; // UPhysicalMaterial*
		constexpr auto StreamingDistanceMultiplier = 0x278; // float
		constexpr auto LandscapeMaterial = 0x280; // UMaterialInterface*
		constexpr auto LandscapeHoleMaterial = 0x2a8; // UMaterialInterface*
		constexpr auto LandscapeMaterialsOverride = 0x2b0; // TArray<FLandscapeProxyMaterialOverride>
		constexpr auto bMeshHoles = 0x2c0; // bool
		constexpr auto MeshHolesMaxLod = 0x2c1; // char
		constexpr auto RuntimeVirtualTextures = 0x2c8; // TArray<URuntimeVirtualTexture*>
		constexpr auto VirtualTextureNumLods = 0x2d8; // int32_t
		constexpr auto VirtualTextureLodBias = 0x2dc; // int32_t
		constexpr auto VirtualTextureRenderPassType = 0x2e0; // ERuntimeVirtualTextureMainPassType
		constexpr auto NegativeZBoundsExtension = 0x2e4; // float
		constexpr auto PositiveZBoundsExtension = 0x2e8; // float
		constexpr auto LandscapeComponents = 0x2f0; // TArray<ULandscapeComponent*>
		constexpr auto CollisionComponents = 0x300; // TArray<ULandscapeHeightfieldCollisionComponent*>
		constexpr auto FoliageComponents = 0x310; // TArray<UHierarchicalInstancedStaticMeshComponent*>
		constexpr auto bHasLandscapeGrass = 0x384; // bool
		constexpr auto StaticLightingResolution = 0x388; // float
		constexpr auto bCastStaticShadow = 0x38c; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x38c; // char : 1
		constexpr auto bCastFarShadow = 0x38c; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x390; // char : 1
		constexpr auto LightingChannels = 0x391; // FLightingChannels
		constexpr auto bUseMaterialPositionOffsetInStaticLighting = 0x394; // char : 1
		constexpr auto bRenderCustomDepth = 0x394; // char : 1
		constexpr auto CustomDepthStencilValue = 0x398; // int32_t
		constexpr auto LDMaxDrawDistance = 0x39c; // float
		constexpr auto LightmassSettings = 0x3a0; // FLightmassPrimitiveSettings
		constexpr auto CollisionMipLevel = 0x3bc; // int32_t
		constexpr auto SimpleCollisionMipLevel = 0x3c0; // int32_t
		constexpr auto CollisionThickness = 0x3c4; // float
		constexpr auto BodyInstance = 0x3c8; // FBodyInstance
		constexpr auto bGenerateOverlapEvents = 0x4d8; // char : 1
		constexpr auto bBakeMaterialPositionOffsetIntoCollision = 0x4d8; // char : 1
		constexpr auto ComponentSizeQuads = 0x4dc; // int32_t
		constexpr auto SubsectionSizeQuads = 0x4e0; // int32_t
		constexpr auto NumSubsections = 0x4e4; // int32_t
		constexpr auto bUsedForNavigation = 0x4e8; // char : 1
		constexpr auto bFillCollisionUnderLandscapeForNavmesh = 0x4e8; // char : 1
		constexpr auto bUseDynamicMaterialInstance = 0x4ec; // bool
		constexpr auto NavigationGeometryGatheringMode = 0x4ed; // ENavDataGatheringMode
		constexpr auto bUseLandscapeForCullingInvisibleHLODVertices = 0x4ee; // bool
		constexpr auto bHasLayersContent = 0x4ef; // bool
		constexpr auto WeightmapUsageMap = 0x4f0; // TMap<UTexture2D*, ULandscapeWeightmapUsage*>
	}

	namespace n_UGranularSynth {
		constexpr auto GranulatedSoundWave = 0x6e0; // USoundWave*
	}

	namespace n_UBuildPatchManifest {
		constexpr auto ManifestFileVersion = 0x28; // char
		constexpr auto bIsFileData = 0x29; // bool
		constexpr auto AppID = 0x2c; // uint32_t
		constexpr auto AppName = 0x30; // FString
		constexpr auto BuildVersion = 0x40; // FString
		constexpr auto LaunchExe = 0x50; // FString
		constexpr auto LaunchCommand = 0x60; // FString
		constexpr auto PrereqIds = 0x70; // TSet<FString>
		constexpr auto PrereqName = 0xc0; // FString
		constexpr auto PrereqPath = 0xd0; // FString
		constexpr auto PrereqArgs = 0xe0; // FString
		constexpr auto FileManifestList = 0xf0; // TArray<FFileManifestData>
		constexpr auto ChunkList = 0x100; // TArray<FChunkInfoData>
		constexpr auto CustomFields = 0x110; // TArray<FCustomFieldData>
	}

	namespace n_UMovieSceneVectorSection {
		constexpr auto Curves = 0xe0; // FMovieSceneFloatChannel [0x4]
		constexpr auto ChannelsUsed = 0x360; // int32_t
	}

	namespace n_UDebugBaseCommandHeader_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto HeaderText = 0x240; // UTextBlock*
		constexpr auto HeaderString = 0x248; // FString
	}

	namespace n_UPCom_SimpleTimecodeProvider {
		constexpr auto FrameRate = 0x30; // FFrameRate
	}

	namespace n_UMagicLeapARPinComponent {
		constexpr auto ObjectUID = 0x208; // FString
		constexpr auto UserIndex = 0x218; // int32_t
		constexpr auto AutoPinType = 0x21c; // EMagicLeapAutoPinType
		constexpr auto bShouldPinActor = 0x21d; // bool
		constexpr auto PinDataClass = 0x220; // UMagicLeapARPinSaveGame*
		constexpr auto OnPersistentEntityPinned = 0x228; // FMulticastInlineDelegate
		constexpr auto OnPersistentEntityPinLost = 0x238; // FMulticastInlineDelegate
		constexpr auto PinnedCFUID = 0x248; // FGuid
		constexpr auto PinnedSceneComponent = 0x258; // USceneComponent*
		constexpr auto PinData = 0x260; // UMagicLeapARPinSaveGame*
	}

	namespace n_UWBP_StoreItemInterior_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto BannerContainer = 0x528; // UVerticalBox*
		constexpr auto BannerSwitcher = 0x530; // UWidgetSwitcher*
		constexpr auto BaseCount = 0x538; // UTextBlock*
		constexpr auto BonusCount = 0x540; // UTextBlock*
		constexpr auto BonusCurrencyWrapper = 0x548; // UVerticalBox*
		constexpr auto BtnBkg = 0x550; // UImage*
		constexpr auto CornerHighlight = 0x558; // UImage*
		constexpr auto CornerHighlightWrapper = 0x560; // UOverlay*
		constexpr auto DescriptionSwitcher = 0x568; // UWidgetSwitcher*
		constexpr auto DiscountTag = 0x570; // UWBP_StoreDiscountTag_C*
		constexpr auto DLCDesc = 0x578; // UTextBlock*
		constexpr auto DLCName = 0x580; // UTextBlock*
		constexpr auto DLCNameWrapper = 0x588; // UVerticalBox*
		constexpr auto FoundersLabel = 0x590; // UVerticalBox*
		constexpr auto FoundersName = 0x598; // UTextBlock*
		constexpr auto GradientBG = 0x5a0; // UImage*
		constexpr auto ItemImage = 0x5a8; // UWBP_AsyncIcon_C*
		constexpr auto ItemName = 0x5b0; // UTextBlock*
		constexpr auto ItemName_Currency = 0x5b8; // UTextBlock*
		constexpr auto OwnedCheckmark = 0x5c0; // UImage*
		constexpr auto OwnedText = 0x5c8; // UTextBlock*
		constexpr auto PriceDisplay = 0x5d0; // UWBP_StorePriceDisplay_C*
		constexpr auto PriceSwitcher = 0x5d8; // UWidgetSwitcher*
		constexpr auto RarityDecro = 0x5e0; // UImage*
		constexpr auto RarityDecro_2 = 0x5e8; // UImage*
		constexpr auto RarityInfo = 0x5f0; // UVerticalBox*
		constexpr auto RarityRichText = 0x5f8; // URichTextBlock*
		constexpr auto RefundTotal_2 = 0x600; // UTextBlock*
		constexpr auto RepRefund = 0x608; // UBorder*
		constexpr auto ThinStrokeHighlightWrapper = 0x610; // UBorder*
		constexpr auto WBP_NewTag = 0x618; // UWBP_NewTag_C*
		constexpr auto WBP_StoreCalloutBanner = 0x620; // UWBP_StoreCalloutBanner_C*
		constexpr auto EPanelSize = 0x628; // E_StorePanelSize
	}

	namespace n_UKSFriendDataFactory {
		constexpr auto OnUpdateRecentlyPlayedPlayers = 0x128; // FMulticastInlineDelegate
	}

	namespace n_UTestMovieSceneSequence {
		constexpr auto MovieScene = 0x348; // UMovieScene*
	}

	namespace n_UWBP_CustomizeAvatar_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto ShowAnim = 0x528; // UWidgetAnimation*
		constexpr auto ItemContainer = 0x530; // UKSSortableGridPanel*
		constexpr auto ScrollBox_1 = 0x538; // UScrollBox*
		constexpr auto WBP_CosmeticItem_Avatar = 0x540; // UWBP_CosmeticItem_Avatar_C*
		constexpr auto WBP_CosmeticItem_Avatar_2 = 0x548; // UWBP_CosmeticItem_Avatar_C*
		constexpr auto WBP_CosmeticItem_Avatar_3 = 0x550; // UWBP_CosmeticItem_Avatar_C*
		constexpr auto WBP_CosmeticItem_Avatar_4 = 0x558; // UWBP_CosmeticItem_Avatar_C*
		constexpr auto WBP_CosmeticItem_Avatar_5 = 0x560; // UWBP_CosmeticItem_Avatar_C*
		constexpr auto WBP_CosmeticItem_Avatar_6 = 0x568; // UWBP_CosmeticItem_Avatar_C*
		constexpr auto WBP_CosmeticItem_Avatar_7 = 0x570; // UWBP_CosmeticItem_Avatar_C*
		constexpr auto WBP_CosmeticItem_Avatar_8 = 0x578; // UWBP_CosmeticItem_Avatar_C*
		constexpr auto WBP_CosmeticItem_Avatar_9 = 0x580; // UWBP_CosmeticItem_Avatar_C*
		constexpr auto WBP_PlayerIDCustomize = 0x588; // UWBP_PlayerIDCustomize_C*
		constexpr auto AvatarItems = 0x590; // TArray<UWBP_CosmeticItem_Avatar_C*>
		constexpr auto EquippedAvatar = 0x5a0; // UWBP_CosmeticItem_Avatar_C*
		constexpr auto LoadoutDataFactory = 0x5a8; // UKSLoadoutDataFactory*
		constexpr auto HoveredItem = 0x5b0; // UPlatformInventoryItem*
		constexpr auto VisibleGridRows = 0x5b8; // int32_t
		constexpr auto VisibleGridColumns = 0x5bc; // int32_t
	}

	namespace n_UCircularThrobber {
		constexpr auto NumberOfPieces = 0x110; // int32_t
		constexpr auto Period = 0x114; // float
		constexpr auto Radius = 0x118; // float
		constexpr auto PieceImage = 0x120; // USlateBrushAsset*
		constexpr auto Image = 0x128; // FSlateBrush
		constexpr auto bEnableRadius = 0x1b0; // bool
	}

	namespace n_UTablet_Animinstance_C {
		constexpr auto UberGraphFrame = 0x360; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x368; // FAnimNode_Root
		constexpr auto AnimGraphNode_TransitionResult_4 = 0x3a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_3 = 0x3e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x418; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult = 0x450; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x488; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_4 = 0x510; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x550; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_3 = 0x5d8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x618; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_2 = 0x6a0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer = 0x6e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult = 0x768; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x7a8; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_ModifyBone = 0x868; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x980; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x9b0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto Is Fully Opened = 0x9e0; // bool
		constexpr auto Is Fully Closed = 0x9e1; // bool
	}

	namespace n_UMaterialExpressionGIReplace {
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto StaticIndirect = 0x54; // FExpressionInput
		constexpr auto DynamicIndirect = 0x68; // FExpressionInput
	}

	namespace n_UUniformGridSlot {
		constexpr auto HorizontalAlignment = 0x38; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x39; // EVerticalAlignment
		constexpr auto Row = 0x3c; // int32_t
		constexpr auto column = 0x40; // int32_t
	}

	namespace n_USteamNetConnection {
		constexpr auto bIsPassthrough = 0x1b20; // bool
	}

	namespace n_UMaterialExpressionSign {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UBTTask_WaitBlackboardTime {
		constexpr auto BlackboardKey = 0x78; // FBlackboardKeySelector
	}

	namespace n_UKSWeaponHubBase {
		constexpr auto TotalWeaponMasteryMeter = 0x520; // UKSWeaponProgressMeter*
		constexpr auto RelatedRogues = 0x528; // UKSRelatedRoguesGroup*
	}

	namespace n_UKSEmote {
		constexpr auto bFlushKeysOnPlay = 0x2b8; // bool
		constexpr auto EmoteCosmeticComponentClass = 0x2c0; // TSoftClassPtr<UObject>
		constexpr auto EmoteCameraPosition = 0x2e8; // EEmoteCameraPositionType
		constexpr auto EmotePreviewLocationOffset = 0x2ec; // FVector
		constexpr auto EmotePreviewScaleOverride = 0x2f8; // float
		constexpr auto bMovingEmote = 0x2fc; // bool
		constexpr auto ApparelObjectsToInfluence = 0x300; // TArray<FName>
		constexpr auto WeaponPropsToPreload = 0x310; // TArray<FSoftObjectPath>
	}

	namespace n_UWBP_text_button_C {
		constexpr auto Image_69 = 0x238; // UImage*
	}

	namespace n_UFirstTimeTutorialWidget_C {
		constexpr auto UberGraphFrame = 0x4c0; // FPointerToUberGraphFrame
		constexpr auto Show = 0x4c8; // UWidgetAnimation*
		constexpr auto Blocker = 0x4d0; // UImage*
		constexpr auto Decro = 0x4d8; // UImage*
		constexpr auto Image_134 = 0x4e0; // UImage*
		constexpr auto TextBlock_295 = 0x4e8; // UTextBlock*
		constexpr auto WBP_ModalPopupContainer = 0x4f0; // UWBP_ModalPopupContainer_C*
		constexpr auto WBP_StandardButtonLarge = 0x4f8; // UWBP_StandardButtonLarge_C*
		constexpr auto WBP_StandardButtonMedium = 0x500; // UWBP_StandardButtonMedium_C*
		constexpr auto ShowTutorialWidgetSFX = 0x508; // UAkAudioEvent*
	}

	namespace n_UWBP_RogueMasteryPanelTrack_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto CurrentXp = 0x528; // UTextBlock*
		constexpr auto GamepadPageLeft = 0x530; // UWBP_KeyCallout_C*
		constexpr auto GamepadPageRight = 0x538; // UWBP_KeyCallout_C*
		constexpr auto MasteryLevel = 0x540; // UTextBlock*
		constexpr auto Pagination = 0x548; // UHorizontalBox*
		constexpr auto PaginationLabel = 0x550; // UTextBlock*
		constexpr auto RewardsSectionContainer = 0x558; // UKSScrollBox*
		constexpr auto ScrollLeftButton = 0x560; // UWBP_ButtonArrow_C*
		constexpr auto ScrollLeftIndicator = 0x568; // UHorizontalBox*
		constexpr auto ScrollRightButton = 0x570; // UWBP_ButtonArrow_C*
		constexpr auto ScrollRightIndicator = 0x578; // UHorizontalBox*
		constexpr auto Section0 = 0x580; // UWBP_RogueMasteryTrackSection_C*
		constexpr auto Section1 = 0x588; // UWBP_RogueMasteryTrackSection_C*
		constexpr auto Section2 = 0x590; // UWBP_RogueMasteryTrackSection_FinalPrestige_C*
		constexpr auto Slash = 0x598; // UTextBlock*
		constexpr auto TotalXp = 0x5a0; // UTextBlock*
		constexpr auto XPWrapper = 0x5a8; // UHorizontalBox*
		constexpr auto CurrentIndex = 0x5b0; // int32_t
		constexpr auto OnMasteryLevelSelectedEvent = 0x5b8; // FMulticastInlineDelegate
		constexpr auto OnPrestiegeSelected = 0x5c8; // FMulticastInlineDelegate
		constexpr auto LAST_SECTION_INDEX = 0x5d8; // int32_t
		constexpr auto SelectedTierNumber = 0x5dc; // int32_t
		constexpr auto HasGamepadFocus = 0x5e0; // bool
		constexpr auto OnViewPreviousMasteryLevelFailed = 0x5e8; // FMulticastInlineDelegate
	}

	namespace n_UBlendProfile {
		constexpr auto OwningSkeleton = 0x30; // USkeleton*
		constexpr auto ProfileEntries = 0x38; // TArray<FBlendProfileBoneEntry>
	}

	namespace n_UNiagaraDataInterfaceVector2DCurve {
		constexpr auto XCurve = 0x58; // FRichCurve
		constexpr auto YCurve = 0xd8; // FRichCurve
	}

	namespace n_UMasterWeapon_ABP_C {
		constexpr auto AnimGraphNode_Root = 0x3f0; // FAnimNode_Root
		constexpr auto AnimGraphNode_ModifyBone_18 = 0x430; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_7 = 0x548; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_Slot_2 = 0x578; // FAnimNode_Slot
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x5d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult = 0x608; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_LocalRefPose_5 = 0x640; // FAnimNode_RefPose
		constexpr auto AnimGraphNode_SequenceSkinned_7 = 0x668; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_BlendListByBool_8 = 0x7c8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceSkinned_6 = 0x878; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_LocalRefPose_4 = 0x9d8; // FAnimNode_RefPose
		constexpr auto AnimGraphNode_SequenceSkinned_5 = 0xa00; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_StateResult_3 = 0xb60; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_LocalRefPose_3 = 0xba0; // FAnimNode_RefPose
		constexpr auto AnimGraphNode_SequenceSkinned_4 = 0xbc8; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_StateResult_2 = 0xd28; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_2 = 0xd68; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SaveCachedPose_8 = 0xe28; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_ModifyBone_17 = 0xef0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_16 = 0x1008; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_15 = 0x1120; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_14 = 0x1238; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_13 = 0x1350; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_BlendListByBool_7 = 0x1468; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_7 = 0x1518; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_SaveCachedPose_7 = 0x1548; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_ComponentToLocalSpace_6 = 0x1610; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_UseCachedPose_14 = 0x1640; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LocalToComponentSpace_6 = 0x1678; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_UseCachedPose_13 = 0x16a8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequenceSkinned_3 = 0x16e0; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_LocalRefPose_2 = 0x1840; // FAnimNode_RefPose
		constexpr auto AnimGraphNode_SequenceSkinned_2 = 0x1868; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_StateResult = 0x19c8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x1a08; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_BlendListByBool_6 = 0x1ac8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ModifyBone_12 = 0x1b78; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_11 = 0x1c90; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_10 = 0x1da8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_UseCachedPose_12 = 0x1ec0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LocalToComponentSpace_5 = 0x1ef8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_BlendListByBool_5 = 0x1f28; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_5 = 0x1fd8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_UseCachedPose_11 = 0x2008; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ModifyBone_9 = 0x2040; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_SequenceSkinned = 0x2158; // FAnimNode_SequenceSkinned
		constexpr auto AnimGraphNode_SaveCachedPose_6 = 0x22b8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_10 = 0x2380; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_4 = 0x23b8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_9 = 0x2468; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive = 0x24a0; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_LocalRefPose = 0x2580; // FAnimNode_RefPose
		constexpr auto AnimGraphNode_ModifyBone_8 = 0x25a8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_7 = 0x26c0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_6 = 0x27d8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_5 = 0x28f0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_BlendListByBool_3 = 0x2a08; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_4 = 0x2ab8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_4 = 0x2ae8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_SaveCachedPose_5 = 0x2b18; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_8 = 0x2be0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LocalToComponentSpace_3 = 0x2c18; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_UseCachedPose_7 = 0x2c48; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ModifyBone_4 = 0x2c80; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_3 = 0x2d98; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_SaveCachedPose_4 = 0x2dc8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_6 = 0x2e90; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x2ec8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_Slot = 0x2f78; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SaveCachedPose_3 = 0x2fd0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_5 = 0x3098; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_4 = 0x30d0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ModifyBone_3 = 0x3108; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_2 = 0x3220; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_SaveCachedPose_2 = 0x3338; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_3 = 0x3400; // FAnimNode_UseCachedPose
		constexpr auto KSAnimGraphNode_Mirror = 0x3438; // FKSAnimNode_Mirror
		constexpr auto AnimGraphNode_LocalToComponentSpace_2 = 0x3558; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_2 = 0x3588; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_SaveCachedPose = 0x35b8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0x3680; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ModifyBone = 0x36b8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x37d0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_BlendListByBool = 0x3800; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x38b0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_UseCachedPose = 0x38e0; // FAnimNode_UseCachedPose
		constexpr auto HideMagazineAlpha = 0x3918; // float
		constexpr auto Weapon ABP Idle = 0x3920; // UAnimSequence*
		constexpr auto Weapon ABP Holster = 0x3928; // UAnimSequence*
		constexpr auto Shell Housing Spin = 0x3930; // FRotator
		constexpr auto Missing Shell Count = 0x393c; // int32_t
		constexpr auto Shell Loading = 0x3940; // bool
		constexpr auto Target Shell Housing Spin = 0x3944; // FRotator
		constexpr auto ShellE_Hidden = 0x3950; // bool
		constexpr auto Revolver Index = 0x3954; // int32_t
		constexpr auto Turn Directional Amount = 0x3958; // float
		constexpr auto Scope Scale Alpha = 0x395c; // float
		constexpr auto Is Revolver = 0x3960; // bool
		constexpr auto Is Multi Stage Reload = 0x3961; // bool
		constexpr auto Multi Stage Reload Alpha = 0x3964; // float
		constexpr auto Is Holstered = 0x3968; // bool
		constexpr auto Revolver Chamber = 0x396c; // FRotator
		constexpr auto Prevent Scope Scaling Override = 0x3978; // bool
		constexpr auto Alt Scope Scale Alpha = 0x397c; // float
		constexpr auto UnspentShellAlphaA = 0x3980; // float
		constexpr auto UnspentShellAlphaB = 0x3984; // float
		constexpr auto UnspentShellAlphaC = 0x3988; // float
		constexpr auto UnspentShellAlphaD = 0x398c; // float
		constexpr auto UnspentShellAlphaE = 0x3990; // float
		constexpr auto UnspentShellAlphaF = 0x3994; // float
		constexpr auto SpentShellAlphaA = 0x3998; // float
		constexpr auto SpentShellAlphaB = 0x399c; // float
		constexpr auto SpentShellAlphaC = 0x39a0; // float
		constexpr auto SpentShellAlphaD = 0x39a4; // float
		constexpr auto SpentShellAlphaE = 0x39a8; // float
		constexpr auto SpentShellAlphaF = 0x39ac; // float
		constexpr auto Is in Lobby Viewer? = 0x39b0; // bool
		constexpr auto Is Stock Folded = 0x39b4; // float
		constexpr auto Stock Rotation Target = 0x39b8; // FRotator
		constexpr auto Stock Alt Rotation Target = 0x39c4; // FRotator
		constexpr auto ADS_ScopeLocationModifier = 0x39d0; // FVector
		constexpr auto UseAdditive = 0x39dc; // bool
		constexpr auto is reloading = 0x39dd; // bool
		constexpr auto Disable Alternate Mirroring = 0x39de; // bool
		constexpr auto Temp_bool_Variable = 0x39df; // bool
		constexpr auto Temp_bool_Variable_2 = 0x39e0; // bool
		constexpr auto Temp_bool_Variable_3 = 0x39e1; // bool
		constexpr auto Temp_bool_Variable_4 = 0x39e2; // bool
		constexpr auto Temp_bool_Variable_5 = 0x39e3; // bool
		constexpr auto Temp_bool_Variable_6 = 0x39e4; // bool
		constexpr auto K2Node_Event_NewAlpha_2 = 0x39e8; // float
		constexpr auto K2Node_Event_bIsRevolver = 0x39ec; // bool
		constexpr auto K2Node_Event_bIsMultiStageReload = 0x39ed; // bool
		constexpr auto K2Node_Event_NewWeaponState = 0x39ee; // EWeaponStateNew
		constexpr auto K2Node_Event_bIsStockFolded = 0x39ef; // bool
		constexpr auto K2Node_Event_StockRotationTarget = 0x39f0; // FRotator
		constexpr auto K2Node_Event_StockAltRotationTarget = 0x39fc; // FRotator
		constexpr auto K2Node_Event_bUseAdditive = 0x3a08; // bool
		constexpr auto K2Node_Event_HideMagazineAlpha = 0x3a0c; // float
		constexpr auto Temp_bool_Variable_7 = 0x3a10; // bool
		constexpr auto Temp_bool_Variable_8 = 0x3a11; // bool
		constexpr auto K2Node_Event_bSetIsShieldActive = 0x3a12; // bool
		constexpr auto K2Node_Event_NewAlpha = 0x3a14; // float
		constexpr auto K2Node_Event_NewRevolverChamberRot = 0x3a18; // FRotator
		constexpr auto K2Node_Event_OwningWeaponComponent = 0x3a28; // UKSWeaponComponent*
		constexpr auto K2Node_Event_OldState = 0x3a30; // EWeaponStateNew
		constexpr auto K2Node_Event_NewState = 0x3a31; // EWeaponStateNew
		constexpr auto K2Node_SwitchEnum_CmpSuccess = 0x3a32; // bool
		constexpr auto Temp_byte_Variable = 0x3a33; // EWeaponStateNew
		constexpr auto Temp_bool_Variable_9 = 0x3a34; // bool
		constexpr auto Temp_bool_Variable_10 = 0x3a35; // bool
		constexpr auto Temp_bool_Variable_11 = 0x3a36; // bool
		constexpr auto K2Node_Select_Default = 0x3a37; // bool
	}

	namespace n_UKSCommunication {
		constexpr auto PingType = 0x2b8; // EPingType
		constexpr auto PingMessage = 0x2b9; // EPingMessage
	}

	namespace n_UInterpTrackInstAnimControl {
		constexpr auto LastUpdatePosition = 0x28; // float
	}

	namespace n_UKSBTD_EquipmentState {
		constexpr auto EquipPoint = 0x68; // FGameplayTag
		constexpr auto bCheckIsEquipped = 0x70; // bool
		constexpr auto IsEquipped = 0x71; // EBasicKeyOperation
		constexpr auto bCheckIsActiveWeapon = 0x72; // bool
		constexpr auto IsActiveWeapon = 0x73; // EBasicKeyOperation
		constexpr auto bCheckIsReloading = 0x74; // bool
		constexpr auto IsReloading = 0x75; // EBasicKeyOperation
		constexpr auto bCheckEquipmentType = 0x76; // bool
		constexpr auto EquipmentType = 0x77; // EBasicKeyOperation
		constexpr auto ComparedEquipmentTypes = 0x78; // FGameplayTagContainer
		constexpr auto bCheckEquipmentClass = 0x98; // bool
		constexpr auto EquipmentClassComparison = 0x99; // EBasicKeyOperation
		constexpr auto ComparedEquipmentClass = 0xa0; // TSoftClassPtr<UObject>
		constexpr auto bCheckComponentClass = 0xc8; // bool
		constexpr auto ComponentClassComparison = 0xc9; // EBasicKeyOperation
		constexpr auto ComparedComponentClass = 0xd0; // TSoftClassPtr<UObject>
	}

	namespace n_UMaterialInstanceConstant {
		constexpr auto PhysMaterialMask = 0x408; // UPhysicalMaterialMask*
	}

	namespace n_UBrushComponent {
		constexpr auto Brush = 0x430; // UModel*
		constexpr auto BrushBodySetup = 0x438; // UBodySetup*
	}

	namespace n_UDistributionVectorParameterBase {
		constexpr auto ParameterName = 0x50; // FName
		constexpr auto MinInput = 0x58; // FVector
		constexpr auto MaxInput = 0x64; // FVector
		constexpr auto MinOutput = 0x70; // FVector
		constexpr auto MaxOutput = 0x7c; // FVector
		constexpr auto ParamModes = 0x88; // DistributionParamMode [0x3]
	}

	namespace n_UPUMG_ContextBar {
		constexpr auto PromptWidgetClass = 0x4c0; // UPUMG_ContextBarPrompt*
		constexpr auto LeftPromptMargin = 0x4c8; // FMargin
		constexpr auto CenterPromptMargin = 0x4d8; // FMargin
		constexpr auto RightPromptMargin = 0x4e8; // FMargin
		constexpr auto LeftContainer = 0x4f8; // UHorizontalBox*
		constexpr auto CenterContainer = 0x500; // UHorizontalBox*
		constexpr auto RightContainer = 0x508; // UHorizontalBox*
		constexpr auto PromptPool = 0x510; // TArray<UPUMG_ContextBarPrompt*>
	}

	namespace n_UInGameAdManager {
		constexpr auto bShouldPauseWhileAdOpen = 0x38; // char : 1
		constexpr auto ClickedBannerDelegates = 0x40; // TArray<FDelegate>
		constexpr auto ClosedAdDelegates = 0x50; // TArray<FDelegate>
	}

	namespace n_UBorder {
		constexpr auto HorizontalAlignment = 0x128; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x129; // EVerticalAlignment
		constexpr auto bShowEffectWhenDisabled = 0x12a; // char : 1
		constexpr auto ContentColorAndOpacity = 0x12c; // FLinearColor
		constexpr auto ContentColorAndOpacityDelegate = 0x13c; // FDelegate
		constexpr auto Padding = 0x14c; // FMargin
		constexpr auto background = 0x160; // FSlateBrush
		constexpr auto BackgroundDelegate = 0x1e8; // FDelegate
		constexpr auto BrushColor = 0x1f8; // FLinearColor
		constexpr auto BrushColorDelegate = 0x208; // FDelegate
		constexpr auto DesiredSizeScale = 0x218; // FVector2D
		constexpr auto bFlipForRightToLeftFlowDirection = 0x220; // bool
		constexpr auto OnMouseButtonDownEvent = 0x224; // FDelegate
		constexpr auto OnMouseButtonUpEvent = 0x234; // FDelegate
		constexpr auto OnMouseMoveEvent = 0x244; // FDelegate
		constexpr auto OnMouseDoubleClickEvent = 0x254; // FDelegate
	}

	namespace n_UNiagaraDataInterfaceNeighborGrid3D {
		constexpr auto MaxNeighborsPerVoxel = 0xf0; // uint32_t
	}

	namespace n_UKSCharacterCameraShake {
		constexpr auto ADSShakeScale = 0x158; // float
		constexpr auto AttachedCharacterFoundation = 0x160; // AKSCharacterFoundation*
	}

	namespace n_AKSPersistentDataReplicator {
		constexpr auto StatsReplicator = 0x220; // FAccountJobStatReplicator
	}

	namespace n_AKSWeapon_RemoteTrigger {
		constexpr auto OnRemoteThrowEquipped = 0x6d8; // FMulticastInlineDelegate
		constexpr auto AttachedCharges = 0x708; // TArray<TWeakObjectPtr<AKSProjectile_RemoteTrigger>>
		constexpr auto MaxDetonationRange = 0x718; // float
		constexpr auto OnDetonationReady = 0x720; // FMulticastInlineDelegate
		constexpr auto RemoteThrowAsset = 0x730; // TWeakObjectPtr<UKSWeaponAsset>
	}

	namespace n_UWBP_YellowButton_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto OnClick_Inactive = 0x528; // UWidgetAnimation*
		constexpr auto Highlight_Inactive = 0x530; // UWidgetAnimation*
		constexpr auto OnClick = 0x538; // UWidgetAnimation*
		constexpr auto Highlight = 0x540; // UWidgetAnimation*
		constexpr auto BtnEdge = 0x548; // UImage*
		constexpr auto BtnFill = 0x550; // UImage*
		constexpr auto BtnFillGradient = 0x558; // UImage*
		constexpr auto BtnFrame = 0x560; // UImage*
		constexpr auto BtnShimmer = 0x568; // UImage*
		constexpr auto BtnStandardWrapper = 0x570; // UOverlay*
		constexpr auto ButtonContent = 0x578; // UNamedSlot*
		constexpr auto ButtonText = 0x580; // UTextBlock*
		constexpr auto HitTarget = 0x588; // UButton*
		constexpr auto KeyPrompt = 0x590; // UWBP_KeyCallout_C*
		constexpr auto KeyPromptContainer = 0x598; // UCanvasPanel*
		constexpr auto SizeWrapper = 0x5a0; // USizeBox*
		constexpr auto OnClicked = 0x5a8; // FMulticastInlineDelegate
		constexpr auto OnHovered = 0x5b8; // FMulticastInlineDelegate
		constexpr auto OnUnhovered = 0x5c8; // FMulticastInlineDelegate
		constexpr auto ClickMedBtnSFX = 0x5d8; // UAkAudioEvent*
		constexpr auto DefaultButtonText = 0x5e0; // FText
		constexpr auto DefaultWidth = 0x5f8; // float
		constexpr auto ShowPromptOnFocus = 0x5fc; // bool
		constexpr auto PromptKey = 0x600; // FKey
		constexpr auto HoverMedBtnSFX = 0x618; // UAkAudioEvent*
		constexpr auto IsConfirm = 0x620; // bool
		constexpr auto IsCancel = 0x621; // bool
		constexpr auto IsInActiveState = 0x622; // bool
	}

	namespace n_UMovieSceneParameterSection {
		constexpr auto BoolParameterNamesAndCurves = 0xe0; // TArray<FBoolParameterNameAndCurve>
		constexpr auto ScalarParameterNamesAndCurves = 0xf0; // TArray<FScalarParameterNameAndCurve>
		constexpr auto Vector2DParameterNamesAndCurves = 0x100; // TArray<FVector2DParameterNameAndCurves>
		constexpr auto VectorParameterNamesAndCurves = 0x110; // TArray<FVectorParameterNameAndCurves>
		constexpr auto ColorParameterNamesAndCurves = 0x120; // TArray<FColorParameterNameAndCurves>
		constexpr auto TransformParameterNamesAndCurves = 0x130; // TArray<FTransformParameterNameAndCurves>
	}

	namespace n_ULevelSequence {
		constexpr auto MovieScene = 0x348; // UMovieScene*
		constexpr auto ObjectReferences = 0x350; // FLevelSequenceObjectReferenceMap
		constexpr auto BindingReferences = 0x3a0; // FLevelSequenceBindingReferences
		constexpr auto PossessedObjects = 0x440; // TMap<FString, FLevelSequenceObject>
		constexpr auto DirectorClass = 0x490; // UObject*
	}

	namespace n_UOverlaySlot {
		constexpr auto Padding = 0x40; // FMargin
		constexpr auto HorizontalAlignment = 0x50; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x51; // EVerticalAlignment
	}

	namespace n_USub_Hero_ABP_Face_C {
		constexpr auto AnimGraphNode_Root = 0x10f0; // FAnimNode_Root
		constexpr auto AnimGraphNode_SeqEvalSkinned_7 = 0x1130; // FAnimNode_SeqEvalSkinned
		constexpr auto AnimGraphNode_SequenceEvaluator_7 = 0x12a0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_LayeredBoneBlend_3 = 0x12f8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_LayeredBoneBlend_2 = 0x13c8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SeqEvalSkinned_6 = 0x1498; // FAnimNode_SeqEvalSkinned
		constexpr auto AnimGraphNode_SequenceEvaluator_6 = 0x1608; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SeqEvalSkinned_5 = 0x1660; // FAnimNode_SeqEvalSkinned
		constexpr auto AnimGraphNode_SeqEvalSkinned_4 = 0x17d0; // FAnimNode_SeqEvalSkinned
		constexpr auto AnimGraphNode_SeqEvalSkinned_3 = 0x1940; // FAnimNode_SeqEvalSkinned
		constexpr auto AnimGraphNode_SeqEvalSkinned_2 = 0x1ab0; // FAnimNode_SeqEvalSkinned
		constexpr auto AnimGraphNode_SeqEvalSkinned = 0x1c20; // FAnimNode_SeqEvalSkinned
		constexpr auto AnimGraphNode_SequenceEvaluator_5 = 0x1d90; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_4 = 0x1de8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_3 = 0x1e40; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_2 = 0x1e98; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator = 0x1ef0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByEnum = 0x1f48; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_StateResult = 0x2008; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x2048; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_LinkedInputPose = 0x2108; // FAnimNode_LinkedInputPose
		constexpr auto AnimGraphNode_LayeredBoneBlend = 0x2190; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByBool_3 = 0x2260; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendByLOD = 0x2310; // FAnimNode_BlendByLOD
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x23c0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendPoseSkinned = 0x2470; // FAnimNode_BlendPoseNodeSkinned
		constexpr auto AnimGraphNode_SaveCachedPose_2 = 0x2548; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_6 = 0x2610; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_5 = 0x2648; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_4 = 0x2680; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool = 0x26b8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_3 = 0x2768; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose = 0x27a0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0x2868; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose = 0x28a0; // FAnimNode_UseCachedPose
		constexpr auto emotionTest = 0x28d8; // EKSEmotion
		constexpr auto bIsServer = 0x28d9; // bool
		constexpr auto bIsLobby = 0x28da; // bool
	}

	namespace n_UMaterialExpressionIf {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto AGreaterThanB = 0x68; // FExpressionInput
		constexpr auto AEqualsB = 0x7c; // FExpressionInput
		constexpr auto ALessThanB = 0x90; // FExpressionInput
		constexpr auto EqualsThreshold = 0xa4; // float
		constexpr auto ConstB = 0xa8; // float
		constexpr auto ConstAEqualsB = 0xac; // float
	}

	namespace n_UMovieSceneAkAudioEventSection {
		constexpr auto Event = 0x120; // UAkAudioEvent*
		constexpr auto RetriggerEvent = 0x128; // bool
		constexpr auto ScrubTailLengthMs = 0x12c; // int32_t
		constexpr auto StopAtSectionEnd = 0x130; // bool
		constexpr auto EventName = 0x138; // FString
		constexpr auto MaxSourceDuration = 0x168; // float
		constexpr auto MaxDurationSourceID = 0x170; // FString
	}

	namespace n_UTextRenderComponent {
		constexpr auto Text = 0x430; // FText
		constexpr auto TextMaterial = 0x448; // UMaterialInterface*
		constexpr auto Font = 0x450; // UFont*
		constexpr auto HorizontalAlignment = 0x458; // EHorizTextAligment
		constexpr auto VerticalAlignment = 0x459; // EVerticalTextAligment
		constexpr auto TextRenderColor = 0x45c; // FColor
		constexpr auto XScale = 0x460; // float
		constexpr auto YScale = 0x464; // float
		constexpr auto WorldSize = 0x468; // float
		constexpr auto InvDefaultSize = 0x46c; // float
		constexpr auto HorizSpacingAdjust = 0x470; // float
		constexpr auto VertSpacingAdjust = 0x474; // float
		constexpr auto bAlwaysRenderAsText = 0x478; // char : 1
	}

	namespace n_USkyAtmosphereComponent {
		constexpr auto TransformMode = 0x208; // ESkyAtmosphereTransformMode
		constexpr auto BottomRadius = 0x20c; // float
		constexpr auto GroundAlbedo = 0x210; // FColor
		constexpr auto AtmosphereHeight = 0x214; // float
		constexpr auto MultiScatteringFactor = 0x218; // float
		constexpr auto RayleighScatteringScale = 0x21c; // float
		constexpr auto RayleighScattering = 0x220; // FLinearColor
		constexpr auto RayleighExponentialDistribution = 0x230; // float
		constexpr auto MieScatteringScale = 0x234; // float
		constexpr auto MieScattering = 0x238; // FLinearColor
		constexpr auto MieAbsorptionScale = 0x248; // float
		constexpr auto MieAbsorption = 0x24c; // FLinearColor
		constexpr auto MieAnisotropy = 0x25c; // float
		constexpr auto MieExponentialDistribution = 0x260; // float
		constexpr auto OtherAbsorptionScale = 0x264; // float
		constexpr auto OtherAbsorption = 0x268; // FLinearColor
		constexpr auto OtherTentDistribution = 0x278; // FTentDistribution
		constexpr auto SkyLuminanceFactor = 0x284; // FLinearColor
		constexpr auto AerialPespectiveViewDistanceScale = 0x294; // float
		constexpr auto HeightFogContribution = 0x298; // float
		constexpr auto TransmittanceMinLightElevationAngle = 0x29c; // float
		constexpr auto bStaticLightingBuiltGUID = 0x2c4; // FGuid
	}

	namespace n_UMovieScene2DTransformSection {
		constexpr auto TransformMask = 0xe0; // FMovieScene2DTransformMask
		constexpr auto Translation = 0xe8; // FMovieSceneFloatChannel [0x2]
		constexpr auto Rotation = 0x228; // FMovieSceneFloatChannel
		constexpr auto Scale = 0x2c8; // FMovieSceneFloatChannel [0x2]
		constexpr auto Shear = 0x408; // FMovieSceneFloatChannel [0x2]
	}

	namespace n_UPUMG_ViewLayer {
		constexpr auto DisplayTarget = 0x28; // UCanvasPanel*
		constexpr auto MyManager = 0x30; // UPUMG_ViewManager*
		constexpr auto CurrentTransitionState = 0x38; // EViewManagerTransitionState
		constexpr auto CurrentRouteStack = 0x40; // TArray<FName>
		constexpr auto CurrentTransitionRouteStack = 0x50; // TArray<FName>
		constexpr auto RouteWidgetMap = 0x60; // TMap<FName, UPUMG_Widget*>
		constexpr auto DefaultRoute = 0xb0; // FName
		constexpr auto PendingRouteData = 0xc0; // TMap<FName, UObject*>
		constexpr auto Routes = 0x110; // UDataTable*
	}

	namespace n_URendererSettings {
		constexpr auto bMobileDisableVertexFog = 0x38; // char : 1
		constexpr auto MaxMobileCascades = 0x3c; // int32_t
		constexpr auto MobileMSAASampleCount = 0x40; // EMobileMSAASampleCount
		constexpr auto bMobileUseLegacyShadingModel = 0x44; // char : 1
		constexpr auto bMobileAllowDitheredLODTransition = 0x44; // char : 1
		constexpr auto bMobileAllowSoftwareOcclusionCulling = 0x44; // char : 1
		constexpr auto bMobileVirtualTextures = 0x44; // char : 1
		constexpr auto bDiscardUnusedQualityLevels = 0x44; // char : 1
		constexpr auto bOcclusionCulling = 0x44; // char : 1
		constexpr auto MinScreenRadiusForLights = 0x48; // float
		constexpr auto MinScreenRadiusForEarlyZPass = 0x4c; // float
		constexpr auto MinScreenRadiusForCSMdepth = 0x50; // float
		constexpr auto bPrecomputedVisibilityWarning = 0x54; // char : 1
		constexpr auto bTextureStreaming = 0x54; // char : 1
		constexpr auto bUseDXT5NormalMaps = 0x54; // char : 1
		constexpr auto bVirtualTextures = 0x54; // char : 1
		constexpr auto bVirtualTexturedLightmaps = 0x54; // char : 1
		constexpr auto VirtualTextureTileSize = 0x58; // uint32_t
		constexpr auto VirtualTextureTileBorderSize = 0x5c; // uint32_t
		constexpr auto VirtualTextureFeedbackFactor = 0x60; // uint32_t
		constexpr auto bVirtualTextureEnableCompressZlib = 0x64; // char : 1
		constexpr auto bVirtualTextureEnableCompressCrunch = 0x64; // char : 1
		constexpr auto bClearCoatEnableSecondNormal = 0x64; // char : 1
		constexpr auto bAnisotropicBRDF = 0x64; // char : 1
		constexpr auto ReflectionCaptureResolution = 0x68; // int32_t
		constexpr auto ReflectionEnvironmentLightmapMixBasedOnRoughness = 0x6c; // char : 1
		constexpr auto bForwardShading = 0x6c; // char : 1
		constexpr auto bVertexFoggingForOpaque = 0x6c; // char : 1
		constexpr auto bAllowStaticLighting = 0x6c; // char : 1
		constexpr auto bUseNormalMapsForStaticLighting = 0x6c; // char : 1
		constexpr auto bGenerateMeshDistanceFields = 0x6c; // char : 1
		constexpr auto bEightBitMeshDistanceFields = 0x6c; // char : 1
		constexpr auto bGenerateLandscapeGIData = 0x6c; // char : 1
		constexpr auto bCompressMeshDistanceFields = 0x6d; // char : 1
		constexpr auto TessellationAdaptivePixelsPerTriangle = 0x70; // float
		constexpr auto bSeparateTranslucency = 0x74; // char : 1
		constexpr auto TranslucentSortPolicy = 0x78; // ETranslucentSortPolicy
		constexpr auto TranslucentSortAxis = 0x7c; // FVector
		constexpr auto CustomDepthStencil = 0x88; // ECustomDepthStencil
		constexpr auto bCustomDepthTaaJitter = 0x8c; // char : 1
		constexpr auto bEnableAlphaChannelInPostProcessing = 0x90; // EAlphaChannelMode
		constexpr auto NGXAppId = 0x98; // FString
		constexpr auto bDefaultFeatureBloom = 0xa8; // char : 1
		constexpr auto bDefaultFeatureAmbientOcclusion = 0xa8; // char : 1
		constexpr auto bDefaultFeatureAmbientOcclusionStaticFraction = 0xa8; // char : 1
		constexpr auto bDefaultFeatureAutoExposure = 0xa8; // char : 1
		constexpr auto DefaultFeatureAutoExposure = 0xac; // EAutoExposureMethodUI
		constexpr auto DefaultFeatureAutoExposureBias = 0xb0; // float
		constexpr auto bExtendDefaultLuminanceRangeInAutoExposureSettings = 0xb4; // char : 1
		constexpr auto bUsePreExposure = 0xb4; // char : 1
		constexpr auto bEnablePreExposureOnlyInTheEditor = 0xb4; // char : 1
		constexpr auto bDefaultFeatureMotionBlur = 0xb4; // char : 1
		constexpr auto bDefaultFeatureLensFlare = 0xb4; // char : 1
		constexpr auto bTemporalUpsampling = 0xb4; // char : 1
		constexpr auto bSSGI = 0xb4; // char : 1
		constexpr auto DefaultFeatureAntiAliasing = 0xb8; // EAntiAliasingMethod
		constexpr auto DefaultLightUnits = 0xb9; // ELightUnits
		constexpr auto DefaultBackBufferPixelFormat = 0xba; // EDefaultBackBufferPixelFormat
		constexpr auto bRenderUnbuiltPreviewShadowsInGame = 0xbc; // char : 1
		constexpr auto bStencilForLODDither = 0xbc; // char : 1
		constexpr auto EarlyZPass = 0xc0; // EEarlyZPass
		constexpr auto bEarlyZPassOnlyMaterialMasking = 0xc4; // char : 1
		constexpr auto bDBuffer = 0xc4; // char : 1
		constexpr auto ClearSceneMethod = 0xc8; // EClearSceneOptions
		constexpr auto bBasePassOutputsVelocity = 0xcc; // char : 1
		constexpr auto bVertexDeformationOutputsVelocity = 0xcc; // char : 1
		constexpr auto bSelectiveBasePassOutputs = 0xcc; // char : 1
		constexpr auto bDefaultParticleCutouts = 0xcc; // char : 1
		constexpr auto GPUSimulationTextureSizeX = 0xd0; // int32_t
		constexpr auto GPUSimulationTextureSizeY = 0xd4; // int32_t
		constexpr auto bGlobalClipPlane = 0xd8; // char : 1
		constexpr auto GBufferFormat = 0xdc; // EGBufferFormat
		constexpr auto bUseGPUMorphTargets = 0xe0; // char : 1
		constexpr auto bNvidiaAftermathEnabled = 0xe0; // char : 1
		constexpr auto bMultiView = 0xe0; // char : 1
		constexpr auto bMobilePostProcessing = 0xe0; // char : 1
		constexpr auto bMobileMultiView = 0xe0; // char : 1
		constexpr auto bMobileUseHWsRGBEncoding = 0xe0; // char : 1
		constexpr auto bRoundRobinOcclusion = 0xe0; // char : 1
		constexpr auto bODSCapture = 0xe0; // char : 1
		constexpr auto bMeshStreaming = 0xe1; // char : 1
		constexpr auto WireframeCullThreshold = 0xe4; // float
		constexpr auto bEnableRayTracing = 0xe8; // char : 1
		constexpr auto bEnableRayTracingTextureLOD = 0xe8; // char : 1
		constexpr auto bSupportStationarySkylight = 0xe8; // char : 1
		constexpr auto bSupportLowQualityLightmaps = 0xe8; // char : 1
		constexpr auto bSupportPointLightWholeSceneShadows = 0xe8; // char : 1
		constexpr auto bSupportAtmosphericFog = 0xe8; // char : 1
		constexpr auto bSupportSkyAtmosphere = 0xe8; // char : 1
		constexpr auto bSupportSkyAtmosphereAffectsHeightFog = 0xe8; // char : 1
		constexpr auto bSupportSkinCacheShaders = 0xe9; // char : 1
		constexpr auto DefaultSkinCacheBehavior = 0xec; // ESkinCacheDefaultBehavior
		constexpr auto SkinCacheSceneMemoryLimitInMB = 0xf0; // float
		constexpr auto bMobileEnableStaticAndCSMShadowReceivers = 0xf4; // char : 1
		constexpr auto bMobileEnableMovableLightCSMShaderCulling = 0xf4; // char : 1
		constexpr auto bMobileAllowDistanceFieldShadows = 0xf4; // char : 1
		constexpr auto bMobileAllowMovableDirectionalLights = 0xf4; // char : 1
		constexpr auto MobileNumDynamicPointLights = 0xf8; // uint32_t
		constexpr auto bMobileDynamicPointLightsUseStaticBranch = 0xfc; // char : 1
		constexpr auto bMobileAllowMovableSpotlights = 0xfc; // char : 1
		constexpr auto bSupport16BitBoneIndex = 0xfc; // char : 1
		constexpr auto bGPUSkinLimit2BoneInfluences = 0xfc; // char : 1
		constexpr auto bSupportDepthOnlyIndexBuffers = 0xfc; // char : 1
		constexpr auto bSupportReversedIndexBuffers = 0xfc; // char : 1
		constexpr auto bSupportMaterialLayers = 0xfc; // char : 1
		constexpr auto bLPV = 0xfc; // char : 1
	}

	namespace n_UMaterialExpressionChannelMaskParameter {
		constexpr auto MaskChannel = 0x70; // EChannelMaskParameterColor
		constexpr auto Input = 0x74; // FExpressionInput
	}

	namespace n_UKSBTObjective {
		constexpr auto ObjectiveName = 0x30; // FString
		constexpr auto ObjectiveTargetKeyName = 0x40; // FString
		constexpr auto RequiredActions = 0x50; // TArray<UKSBTAction*>
		constexpr auto RequiredAbilities = 0x60; // TArray<TSoftObjectPtr<UKSPlayerMod>>
	}

	namespace n_UMovieSceneWidgetMaterialTrack {
		constexpr auto BrushPropertyNamePath = 0x68; // TArray<FName>
		constexpr auto TrackName = 0x78; // FName
	}

	namespace n_UKSActivityRewardCondition_Ziplining {
		constexpr auto IsZipLining = 0x30; // bool
		constexpr auto CheckInstigator = 0x31; // bool
		constexpr auto CheckTarget = 0x32; // bool
	}

	namespace n_UWBP_CustomGameConfirmation_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto buttonwrapper = 0x528; // UHorizontalBox*
		constexpr auto CancelButton = 0x530; // UPopupButton_C*
		constexpr auto CreateButton = 0x538; // UPopupButton_C*
		constexpr auto CustomMatchMsg = 0x540; // UTextBlock*
		constexpr auto Decro = 0x548; // UImage*
		constexpr auto Image_114 = 0x550; // UImage*
		constexpr auto MapImage = 0x558; // UKSAsyncImage*
		constexpr auto MapImageContainer = 0x560; // USizeBox*
		constexpr auto Title = 0x568; // UTextBlock*
		constexpr auto WBP_ModalPopupContainer = 0x570; // UWBP_ModalPopupContainer_C*
		constexpr auto OnCancelLobby = 0x578; // FMulticastInlineDelegate
		constexpr auto OnCreateLobby = 0x588; // FMulticastInlineDelegate
		constexpr auto QueueDataFactory = 0x598; // UKSQueueDataFactory*
		constexpr auto QueueId = 0x5a0; // int32_t
		constexpr auto MapId = 0x5a4; // int32_t
	}

	namespace n_UBloodEffectCurveComponent_C {
		constexpr auto UberGraphFrame = 0x138; // FPointerToUberGraphFrame
	}

	namespace n_UMenuAnchor {
		constexpr auto MenuClass = 0x128; // UUserWidget*
		constexpr auto OnGetMenuContentEvent = 0x130; // FDelegate
		constexpr auto Placement = 0x140; // EMenuPlacement
		constexpr auto bFitInWindow = 0x141; // bool
		constexpr auto ShouldDeferPaintingAfterWindowContent = 0x142; // bool
		constexpr auto UseApplicationMenuStack = 0x143; // bool
		constexpr auto OnMenuOpenChanged = 0x148; // FMulticastInlineDelegate
	}

	namespace n_UUpdateManager {
		constexpr auto HotfixCheckCompleteDelay = 0x88; // float
		constexpr auto UpdateCheckCompleteDelay = 0x8c; // float
		constexpr auto HotfixAvailabilityCheckCompleteDelay = 0x90; // float
		constexpr auto UpdateCheckAvailabilityCompleteDelay = 0x94; // float
		constexpr auto bCheckPlatformOSSForUpdate = 0x98; // bool
		constexpr auto bCheckOSSForUpdate = 0x99; // bool
		constexpr auto AppSuspendedUpdateCheckTimeSeconds = 0x9c; // int32_t
		constexpr auto bPlatformEnvironmentDetected = 0xa8; // bool
		constexpr auto bInitialUpdateFinished = 0xa9; // bool
		constexpr auto bCheckHotfixAvailabilityOnly = 0xaa; // bool
		constexpr auto CurrentUpdateState = 0xab; // EUpdateState
		constexpr auto WorstNumFilesPendingLoadViewed = 0xac; // int32_t
		constexpr auto LastPatchCheckResult = 0xb0; // EPatchCheckResult
		constexpr auto LastHotfixResult = 0xb1; // EHotfixResult
		constexpr auto LastUpdateCheck = 0xe0; // FDateTime [0x2]
		constexpr auto LastCompletionResult = 0xf0; // EUpdateCompletionStatus [0x2]
		constexpr auto UpdateStateEnum = 0x108; // UEnum*
		constexpr auto UpdateCompletionEnum = 0x110; // UEnum*
	}

	namespace n_UInterpTrackInstMove {
		constexpr auto ResetLocation = 0x28; // FVector
		constexpr auto ResetRotation = 0x34; // FRotator
	}

	namespace n_UMeshSimplificationSettings {
		constexpr auto MeshReductionModuleName = 0x38; // FName
	}

	namespace n_UMaterialExpressionRuntimeVirtualTextureSample {
		constexpr auto Coordinates = 0x40; // FExpressionInput
		constexpr auto WorldPosition = 0x54; // FExpressionInput
		constexpr auto MipValue = 0x68; // FExpressionInput
		constexpr auto VirtualTexture = 0x80; // URuntimeVirtualTexture*
		constexpr auto MaterialType = 0x88; // ERuntimeVirtualTextureMaterialType
		constexpr auto bSinglePhysicalSpace = 0x89; // bool
		constexpr auto MipValueMode = 0x8a; // ERuntimeVirtualTextureMipValueMode
	}

	namespace n_UMaterialExpressionSkyAtmosphereLightIlluminance {
		constexpr auto LightIndex = 0x40; // int32_t
		constexpr auto WorldPosition = 0x44; // FExpressionInput
	}

	namespace n_UProgressBar {
		constexpr auto WidgetStyle = 0x110; // FProgressBarStyle
		constexpr auto Style = 0x2b0; // USlateWidgetStyleAsset*
		constexpr auto BackgroundImage = 0x2b8; // USlateBrushAsset*
		constexpr auto FillImage = 0x2c0; // USlateBrushAsset*
		constexpr auto MarqueeImage = 0x2c8; // USlateBrushAsset*
		constexpr auto Percent = 0x2d0; // float
		constexpr auto BarFillType = 0x2d4; // EProgressBarFillType
		constexpr auto bIsMarquee = 0x2d5; // bool
		constexpr auto BorderPadding = 0x2d8; // FVector2D
		constexpr auto PercentDelegate = 0x2e0; // FDelegate
		constexpr auto FillColorAndOpacity = 0x2f0; // FLinearColor
		constexpr auto FillColorAndOpacityDelegate = 0x300; // FDelegate
	}

	namespace n_UAkAudioBank {
		constexpr auto AutoLoad = 0x58; // bool
		constexpr auto LocalizedPlatformAssetDataMap = 0x60; // TMap<FString, TSoftObjectPtr<UAkAssetPlatformData>>
		constexpr auto CurrentLocalizedPlatformAssetData = 0xb0; // UAkAssetPlatformData*
	}

	namespace n_UKSPlayerCardModuleBase {
		constexpr auto AssignedPlayerInfo = 0x520; // UPUMG_PlayerInfo*
	}

	namespace n_UAREnvironmentCaptureProbeTexture {
		constexpr auto TextureType = 0x110; // EARTextureType
		constexpr auto Timestamp = 0x114; // float
		constexpr auto ExternalTextureGuid = 0x118; // FGuid
		constexpr auto Size = 0x128; // FVector2D
	}

	namespace n_UCamMod_JumpLanding_C {
		constexpr auto UberGraphFrame = 0x68; // FPointerToUberGraphFrame
		constexpr auto WasJumping = 0x70; // bool
	}

	namespace n_UKSSwapHandlerProfile {
		constexpr auto EquipPointDefinitions = 0x28; // TArray<FEquipPointDefinition>
	}

	namespace n_UARTrackedObject {
		constexpr auto DetectedObject = 0xe8; // UARCandidateObject*
	}

	namespace n_ATaskBeacon_C {
		constexpr auto UberGraphFrame = 0x2e0; // FPointerToUberGraphFrame
		constexpr auto ParticleSystem = 0x2e8; // UParticleSystemComponent*
		constexpr auto PingColor = 0x2f0; // FLinearColor
		constexpr auto PingTypesDT  = 0x300; // FDataTableInfo
	}

	namespace n_APGame_Character {
		constexpr auto m_EffectManager = 0x4c8; // UPGame_EffectManagerComponent*
		constexpr auto r_TweenInfo = 0x4d0; // FTweenInfo
		constexpr auto r_ChargeInfo = 0x4e4; // FChargeInfo
	}

	namespace n_UKSMapWidgetBase {
		constexpr auto MapDisplayType = 0x520; // EDisplayType
		constexpr auto bWasVisible = 0x521; // bool
		constexpr auto LastUpdateFrame = 0x528; // uint64_t
		constexpr auto MapIconWidgetsToPool = 0x530; // TArray<FMapIconWidgetConfig>
		constexpr auto MapIconWidgetPool = 0x540; // TArray<UKSMapIconWidgetPool*>
		constexpr auto MapIconWidgetPoolShown = 0x550; // TArray<UKSMapIconWidgetBase*>
		constexpr auto PlayerIconMap = 0x5b0; // TMap<AKSPlayerState*, UKSMapIconWidgetBase*>
		constexpr auto AbsoluteRotation = 0x640; // bool
		constexpr auto CanBeScrambled = 0x641; // bool
		constexpr auto IsScrambled = 0x642; // bool
		constexpr auto bAffectedByScramble = 0x643; // bool
	}

	namespace n_UWBP_TopNavBar_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto BattlePassNav = 0x528; // UWBP_TopNavButton_C*
		constexpr auto DisableOverlay = 0x530; // UImage*
		constexpr auto EventNav = 0x538; // UWBP_TopNavButton_C*
		constexpr auto GamepadLeftBumperSwitcher = 0x540; // UWidgetSwitcher*
		constexpr auto GamepadRightBumperSwitcher = 0x548; // UWidgetSwitcher*
		constexpr auto HomeNav = 0x550; // UWBP_TopNavButton_C*
		constexpr auto LoadoutNav = 0x558; // UWBP_TopNavButton_C*
		constexpr auto logo = 0x560; // UImage*
		constexpr auto LogoContainer = 0x568; // USizeBox*
		constexpr auto NavigationContainer = 0x570; // UHorizontalBox*
		constexpr auto ProfileNav = 0x578; // UWBP_TopNavButton_C*
		constexpr auto RightBumperIcon = 0x580; // UWBP_KeyCallout_C*
		constexpr auto StoreNav = 0x588; // UWBP_TopNavButton_C*
		constexpr auto TopBarContainer = 0x590; // UOverlay*
		constexpr auto WeaponsNav = 0x598; // UWBP_TopNavButton_C*
		constexpr auto IsDisable = 0x5a0; // bool
		constexpr auto HideAnimName = 0x5a4; // FName
		constexpr auto ShowAnimName = 0x5ac; // FName
		constexpr auto ArmoryTabSeen = 0x5b4; // FName
		constexpr auto CurrentEventSeen = 0x5bc; // FName
	}

	namespace n_AKSAudioPlayer {
		constexpr auto GameplayEventActionMap = 0x220; // TMap<EGameplayAudioEvent, UKSAudioPlayerEventActionData*>
		constexpr auto MapLevelStartEventActionMap = 0x270; // TMap<FString, UKSAudioPlayerEventActionData*>
		constexpr auto MapLevelEndEventActionMap = 0x2c0; // TMap<FString, UKSAudioPlayerEventActionData*>
		constexpr auto GameModeStartEventActionMap = 0x310; // TMap<FString, UKSAudioPlayerEventActionData*>
		constexpr auto GameModeEndEventActionMap = 0x360; // TMap<FString, UKSAudioPlayerEventActionData*>
		constexpr auto PlayerCharacterStartEventActionMap = 0x3b0; // TMap<FString, UKSAudioPlayerEventActionData*>
		constexpr auto PlayerCharacterEndEventActionMap = 0x400; // TMap<FString, UKSAudioPlayerEventActionData*>
		constexpr auto MusicPackStartEventActionMap = 0x450; // TMap<FString, UKSAudioPlayerEventActionData*>
		constexpr auto MusicPackEndEventActionMap = 0x4a0; // TMap<FString, UKSAudioPlayerEventActionData*>
		constexpr auto AudioPlayerBeginPlayEventActionData = 0x4f0; // UKSAudioPlayerEventActionData*
		constexpr auto AudioPlayerEndPlayEventActionData = 0x4f8; // UKSAudioPlayerEventActionData*
	}

	namespace n_AGeometryCollectionDebugDrawActor {
		constexpr auto WarningMessage = 0x220; // FGeometryCollectionDebugDrawWarningMessage
		constexpr auto SelectedRigidBody = 0x228; // FGeometryCollectionDebugDrawActorSelectedRigidBody
		constexpr auto bDebugDrawWholeCollection = 0x240; // bool
		constexpr auto bDebugDrawHierarchy = 0x241; // bool
		constexpr auto bDebugDrawClustering = 0x242; // bool
		constexpr auto HideGeometry = 0x243; // EGeometryCollectionDebugDrawActorHideGeometry
		constexpr auto bShowRigidBodyId = 0x244; // bool
		constexpr auto bShowRigidBodyCollision = 0x245; // bool
		constexpr auto bCollisionAtOrigin = 0x246; // bool
		constexpr auto bShowRigidBodyTransform = 0x247; // bool
		constexpr auto bShowRigidBodyInertia = 0x248; // bool
		constexpr auto bShowRigidBodyVelocity = 0x249; // bool
		constexpr auto bShowRigidBodyForce = 0x24a; // bool
		constexpr auto bShowRigidBodyInfos = 0x24b; // bool
		constexpr auto bShowTransformIndex = 0x24c; // bool
		constexpr auto bShowTransform = 0x24d; // bool
		constexpr auto bShowParent = 0x24e; // bool
		constexpr auto bShowLevel = 0x24f; // bool
		constexpr auto bShowConnectivityEdges = 0x250; // bool
		constexpr auto bShowGeometryIndex = 0x251; // bool
		constexpr auto bShowGeometryTransform = 0x252; // bool
		constexpr auto bShowBoundingBox = 0x253; // bool
		constexpr auto bShowFaces = 0x254; // bool
		constexpr auto bShowFaceIndices = 0x255; // bool
		constexpr auto bShowFaceNormals = 0x256; // bool
		constexpr auto bShowSingleFace = 0x257; // bool
		constexpr auto SingleFaceIndex = 0x258; // int32_t
		constexpr auto bShowVertices = 0x25c; // bool
		constexpr auto bShowVertexIndices = 0x25d; // bool
		constexpr auto bShowVertexNormals = 0x25e; // bool
		constexpr auto bUseActiveVisualization = 0x25f; // bool
		constexpr auto PointThickness = 0x260; // float
		constexpr auto LineThickness = 0x264; // float
		constexpr auto bTextShadow = 0x268; // bool
		constexpr auto TextScale = 0x26c; // float
		constexpr auto NormalScale = 0x270; // float
		constexpr auto AxisScale = 0x274; // float
		constexpr auto ArrowScale = 0x278; // float
		constexpr auto RigidBodyIdColor = 0x27c; // FColor
		constexpr auto RigidBodyTransformScale = 0x280; // float
		constexpr auto RigidBodyCollisionColor = 0x284; // FColor
		constexpr auto RigidBodyInertiaColor = 0x288; // FColor
		constexpr auto RigidBodyVelocityColor = 0x28c; // FColor
		constexpr auto RigidBodyForceColor = 0x290; // FColor
		constexpr auto RigidBodyInfoColor = 0x294; // FColor
		constexpr auto TransformIndexColor = 0x298; // FColor
		constexpr auto TransformScale = 0x29c; // float
		constexpr auto LevelColor = 0x2a0; // FColor
		constexpr auto ParentColor = 0x2a4; // FColor
		constexpr auto ConnectivityEdgeThickness = 0x2a8; // float
		constexpr auto GeometryIndexColor = 0x2ac; // FColor
		constexpr auto GeometryTransformScale = 0x2b0; // float
		constexpr auto BoundingBoxColor = 0x2b4; // FColor
		constexpr auto FaceColor = 0x2b8; // FColor
		constexpr auto FaceIndexColor = 0x2bc; // FColor
		constexpr auto FaceNormalColor = 0x2c0; // FColor
		constexpr auto SingleFaceColor = 0x2c4; // FColor
		constexpr auto VertexColor = 0x2c8; // FColor
		constexpr auto VertexIndexColor = 0x2cc; // FColor
		constexpr auto VertexNormalColor = 0x2d0; // FColor
		constexpr auto SpriteComponent = 0x2d8; // UBillboardComponent*
	}

	namespace n_USkeletalMeshComponentBudgeted {
		constexpr auto bAutoRegisterWithBudgetAllocator = 0xba8; // char : 1
		constexpr auto bAutoCalculateSignificance = 0xba8; // char : 1
		constexpr auto bShouldUseActorRenderedFlag = 0xba8; // char : 1
	}

	namespace n_UPUMG_PlayerInfo {
		constexpr auto OnFilteredNameSetDel = 0x28; // FMulticastInlineDelegate
	}

	namespace n_UKSChargeRuleComponent {
		constexpr auto bDefaultChargeOnRoundStarted = 0xc8; // bool
		constexpr auto ChargePerRound = 0xcc; // float
		constexpr auto bDefaultChargePerSecond = 0xd0; // bool
		constexpr auto ChargePerSecond = 0xd4; // float
		constexpr auto ChargePerDown = 0xd8; // float
		constexpr auto ChargePerElimination = 0xdc; // float
		constexpr auto ChargePerAssist = 0xe0; // float
		constexpr auto ChargePerRevive = 0xe4; // float
	}

	namespace n_USkinObjectManagerComponent {
		constexpr auto SkinObjects = 0xb0; // TMap<FName, UMultiSkinObject*>
		constexpr auto SkinObjectsSet = 0x100; // TSet<UMultiSkinObject*>
	}

	namespace n_UCommandlet {
		constexpr auto HelpDescription = 0x28; // FString
		constexpr auto HelpUsage = 0x38; // FString
		constexpr auto HelpWebLink = 0x48; // FString
		constexpr auto HelpParamNames = 0x58; // TArray<FString>
		constexpr auto HelpParamDescriptions = 0x68; // TArray<FString>
		constexpr auto IsServer = 0x78; // char : 1
		constexpr auto IsClient = 0x78; // char : 1
		constexpr auto IsEditor = 0x78; // char : 1
		constexpr auto LogToConsole = 0x78; // char : 1
		constexpr auto ShowErrorCount = 0x78; // char : 1
		constexpr auto ShowProgress = 0x78; // char : 1
	}

	namespace n_UKSEventChallengesManager {
		constexpr auto OnEventChallengeActivitiesReady = 0x228; // FMulticastInlineDelegate
		constexpr auto OnSelectedChallengeChanged = 0x238; // FMulticastInlineDelegate
		constexpr auto EventChallengesReady = 0x248; // bool
	}

	namespace n_UKSSocialPanelBase {
		constexpr auto OnDataReady = 0x520; // FMulticastInlineDelegate
		constexpr auto OnPlayerCardClicked = 0x530; // FMulticastInlineDelegate
		constexpr auto OnSocialHeaderClicked = 0x540; // FMulticastInlineDelegate
		constexpr auto TreeView = 0x550; // UTreeView*
		constexpr auto DataSource = 0x558; // UKSSocialOverlay*
		constexpr auto CategoriesList = 0x570; // TArray<UKSDataSocialCategory*>
	}

	namespace n_UInterpTrackBoolProp {
		constexpr auto BoolTrack = 0x70; // TArray<FBoolTrackKey>
		constexpr auto PropertyName = 0x80; // FName
	}

	namespace n_UKSCustomApparelComponent {
		constexpr auto bLinkLocalSkinObjectToBodyApparel = 0xb0; // bool
		constexpr auto CharacterOwner = 0xb8; // AKSCharacter*
		constexpr auto ApparelAsset = 0xc0; // UKSApparelAsset_CustomComponent*
		constexpr auto SkinObject = 0xc8; // UMultiSkinObject*
	}

	namespace n_UInterpTrackFloatBase {
		constexpr auto FloatTrack = 0x70; // FInterpCurveFloat
		constexpr auto CurveTension = 0x88; // float
	}

	namespace n_UInterpTrackInstColorProp {
		constexpr auto ResetColor = 0x60; // FColor
	}

	namespace n_UMovieSceneByteSection {
		constexpr auto ByteCurve = 0xe0; // FMovieSceneByteChannel
	}

	namespace n_UPhysicsSettings {
		constexpr auto DefaultGravityZ = 0x38; // float
		constexpr auto DefaultTerminalVelocity = 0x3c; // float
		constexpr auto DefaultFluidFriction = 0x40; // float
		constexpr auto SimulateScratchMemorySize = 0x44; // int32_t
		constexpr auto RagdollAggregateThreshold = 0x48; // int32_t
		constexpr auto TriangleMeshTriangleMinAreaThreshold = 0x4c; // float
		constexpr auto bEnableShapeSharing = 0x50; // bool
		constexpr auto bEnablePCM = 0x51; // bool
		constexpr auto bEnableStabilization = 0x52; // bool
		constexpr auto bWarnMissingLocks = 0x53; // bool
		constexpr auto bEnable2DPhysics = 0x54; // bool
		constexpr auto PhysicErrorCorrection = 0x58; // FRigidBodyErrorCorrection
		constexpr auto LockedAxis = 0x8c; // ESettingsLockedAxis
		constexpr auto DefaultDegreesOfFreedom = 0x8d; // ESettingsDOF
		constexpr auto BounceThresholdVelocity = 0x90; // float
		constexpr auto FrictionCombineMode = 0x94; // EFrictionCombineMode
		constexpr auto RestitutionCombineMode = 0x95; // EFrictionCombineMode
		constexpr auto MaxAngularVelocity = 0x98; // float
		constexpr auto MaxDepenetrationVelocity = 0x9c; // float
		constexpr auto ContactOffsetMultiplier = 0xa0; // float
		constexpr auto MinContactOffset = 0xa4; // float
		constexpr auto MaxContactOffset = 0xa8; // float
		constexpr auto bSimulateSkeletalMeshOnDedicatedServer = 0xac; // bool
		constexpr auto DefaultShapeComplexity = 0xad; // ECollisionTraceFlag
		constexpr auto bDefaultHasComplexCollision = 0xae; // bool
		constexpr auto bSuppressFaceRemapTable = 0xaf; // bool
		constexpr auto bSupportUVFromHitResults = 0xb0; // bool
		constexpr auto bDisableActiveActors = 0xb1; // bool
		constexpr auto bDisableKinematicStaticPairs = 0xb2; // bool
		constexpr auto bDisableKinematicKinematicPairs = 0xb3; // bool
		constexpr auto bDisableCCD = 0xb4; // bool
		constexpr auto bEnableEnhancedDeterminism = 0xb5; // bool
		constexpr auto AnimPhysicsMinDeltaTime = 0xb8; // float
		constexpr auto bSimulateAnimPhysicsAfterReset = 0xbc; // bool
		constexpr auto MaxPhysicsDeltaTime = 0xc0; // float
		constexpr auto bSubstepping = 0xc4; // bool
		constexpr auto bSubsteppingAsync = 0xc5; // bool
		constexpr auto MaxSubstepDeltaTime = 0xc8; // float
		constexpr auto MaxSubsteps = 0xcc; // int32_t
		constexpr auto SyncSceneSmoothingFactor = 0xd0; // float
		constexpr auto InitialAverageFrameRate = 0xd4; // float
		constexpr auto PhysXTreeRebuildRate = 0xd8; // int32_t
		constexpr auto PhysicalSurfaces = 0xe0; // TArray<FPhysicalSurfaceName>
		constexpr auto DefaultBroadphaseSettings = 0xf0; // FBroadphaseSettings
		constexpr auto ChaosSettings = 0x130; // FChaosPhysicsSettings
	}

	namespace n_UMaterialExpressionCollectionParameter {
		constexpr auto Collection = 0x40; // UMaterialParameterCollection*
		constexpr auto ParameterName = 0x48; // FName
		constexpr auto ParameterId = 0x50; // FGuid
	}

	namespace n_UMovieSceneColorSection {
		constexpr auto RedCurve = 0xe0; // FMovieSceneFloatChannel
		constexpr auto GreenCurve = 0x180; // FMovieSceneFloatChannel
		constexpr auto BlueCurve = 0x220; // FMovieSceneFloatChannel
		constexpr auto AlphaCurve = 0x2c0; // FMovieSceneFloatChannel
	}

	namespace n_UAnimNotifyState_SkinnedSkelProp {
		constexpr auto AnimClassSkinKeyword = 0x88; // FName
		constexpr auto ActivationMontage = 0x90; // UAnimMontage*
	}

	namespace n_UKSSettingsInfo_Generic {
		constexpr auto KSSettingType = 0x108; // EKSSettingType
		constexpr auto Name = 0x10c; // FName
	}

	namespace n_UCameraModifier_CameraShake {
		constexpr auto ActiveShakes = 0x48; // TArray<FActiveCameraShakeInfo>
		constexpr auto ExpiredPooledShakesMap = 0x58; // TMap<UCameraShake*, FPooledCameraShakes>
		constexpr auto SplitScreenShakeScale = 0xa8; // float
	}

	namespace n_UPInv_AssetManager {
		constexpr auto bHasCompletedInitialAssetScan = 0x4e0; // bool
		constexpr auto bIsQuickCook = 0x6d0; // bool
		constexpr auto AdditionalQuickCookPrimaryAssets = 0x6d8; // TArray<FString>
	}

	namespace n_UMovieSceneLiveLinkSection {
		constexpr auto SubjectPreset = 0xe0; // FLiveLinkSubjectPreset
		constexpr auto ChannelMask = 0x118; // TArray<bool>
		constexpr auto SubSections = 0x128; // TArray<UMovieSceneLiveLinkSubSection*>
		constexpr auto SubjectName = 0x148; // FName
		constexpr auto TemplateToPush = 0x150; // FLiveLinkFrameData
		constexpr auto RefSkeleton = 0x1e0; // FLiveLinkRefSkeleton
		constexpr auto CurveNames = 0x200; // TArray<FName>
		constexpr auto PropertyFloatChannels = 0x210; // TArray<FMovieSceneFloatChannel>
	}

	namespace n_UKSModInst_OnShotAtAndDodgeRollEnd {
		constexpr auto WillToSurviveModState = 0x1d8; // EWillToSurviveModState
	}

	namespace n_USceneCaptureComponentCube {
		constexpr auto TextureTarget = 0x2a0; // UTextureRenderTargetCube*
		constexpr auto bCaptureRotation = 0x2a8; // bool
		constexpr auto TextureTargetLeft = 0x2b0; // UTextureRenderTargetCube*
		constexpr auto TextureTargetRight = 0x2b8; // UTextureRenderTargetCube*
		constexpr auto TextureTargetODS = 0x2c0; // UTextureRenderTarget2D*
		constexpr auto IPD = 0x2c8; // float
	}

	namespace n_UKSModInst_OnShotAt {
		constexpr auto MinimumDamage = 0x1b8; // float
		constexpr auto ValidDamageCategories = 0x1c0; // TArray<EDamageCategory>
	}

	namespace n_UGameplayTagsList {
		constexpr auto ConfigFileName = 0x28; // FString
		constexpr auto GameplayTagList = 0x38; // TArray<FGameplayTagTableRow>
	}

	namespace n_UWBP_panel_bevel_C {
		constexpr auto Image_72 = 0x238; // UImage*
		constexpr auto Image_148 = 0x240; // UImage*
		constexpr auto Image_150 = 0x248; // UImage*
	}

	namespace n_UMaterialExpressionDistanceFieldGradient {
		constexpr auto Position = 0x40; // FExpressionInput
	}

	namespace n_UAITask_MoveTo {
		constexpr auto OnRequestFailed = 0x70; // FMulticastInlineDelegate
		constexpr auto OnMoveFinished = 0x80; // FMulticastInlineDelegate
		constexpr auto MoveRequest = 0x90; // FAIMoveRequest
	}

	namespace n_USoundNodeConcatenator {
		constexpr auto InputVolume = 0x48; // TArray<float>
	}

	namespace n_UParticleModuleColor {
		constexpr auto StartColor = 0x30; // FRawDistributionVector
		constexpr auto StartAlpha = 0x78; // FRawDistributionFloat
		constexpr auto bClampAlpha = 0xa8; // char : 1
	}

	namespace n_USpectatorPawnMovement {
		constexpr auto bIgnoreTimeDilation = 0x150; // char : 1
	}

	namespace n_UModularSynthPresetBank {
		constexpr auto Presets = 0x28; // TArray<FModularSynthPresetBankEntry>
	}

	namespace n_UPlaneFalloff {
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto MinRange = 0xb4; // float
		constexpr auto MaxRange = 0xb8; // float
		constexpr auto Default = 0xbc; // float
		constexpr auto Distance = 0xc0; // float
		constexpr auto Position = 0xc4; // FVector
		constexpr auto Normal = 0xd0; // FVector
		constexpr auto Falloff = 0xdc; // EFieldFalloffType
	}

	namespace n_UDialogueWave {
		constexpr auto bMature = 0x28; // char : 1
		constexpr auto bOverride_SubtitleOverride = 0x28; // char : 1
		constexpr auto SpokenText = 0x30; // FString
		constexpr auto SubtitleOverride = 0x40; // FString
		constexpr auto ContextMappings = 0x50; // TArray<FDialogueContextMapping>
		constexpr auto LocalizationGUID = 0x60; // FGuid
	}

	namespace n_AKSRoyaleSafeZone {
		constexpr auto ValidityZone = 0x220; // UBoxComponent*
		constexpr auto ZoneDamageAsset = 0x228; // UKSWeaponAsset*
		constexpr auto StartingRadius = 0x230; // float
		constexpr auto OldParams = 0x234; // FSafeZoneParams
		constexpr auto NewParams = 0x244; // FSafeZoneParams
		constexpr auto ZoneLerpVelocity = 0x254; // float
		constexpr auto ZoneLerpAlpha = 0x258; // float
		constexpr auto CurrentCenter = 0x25c; // FVector
		constexpr auto CurrentRadius = 0x268; // float
		constexpr auto ZoneActive = 0x26c; // bool
		constexpr auto IsShrinking = 0x26d; // bool
		constexpr auto Sound = 0x278; // UKSAkComponent*
		constexpr auto SoundStart = 0x280; // UAkAudioEvent*
		constexpr auto SoundStop = 0x288; // UAkAudioEvent*
	}

	namespace n_UKSAimAssistComponent {
		constexpr auto PlayerOwner = 0xb0; // AKSPlayerController*
		constexpr auto AssistTargetStack = 0xb8; // TArray<FRankedAimAssistTarget>
		constexpr auto CurrentTargetWeightStickiness = 0xc8; // float
		constexpr auto ProjectionSpaceStackBoundary = 0xcc; // float
		constexpr auto bUseStackBoundaryFovScaling = 0xd0; // bool
		constexpr auto FovBaseline = 0xd4; // float
		constexpr auto AimAssistEffectivenessCurve = 0xd8; // UCurveFloat*
		constexpr auto ActivationType = 0xe0; // EKSAimAssistActivationType
		constexpr auto FrictionAllowedInputMode = 0xe1; // EKSAimAssistInputFlag
		constexpr auto LockAllowedInputMode = 0xe2; // EKSAimAssistInputFlag
		constexpr auto SnapAllowedInputMode = 0xe3; // EKSAimAssistInputFlag
		constexpr auto CorrectionAllowedInputMode = 0xe4; // EKSAimAssistInputFlag
		constexpr auto bAssistGadgets = 0xec; // bool
		constexpr auto bAimLockUsesTargetVelocity = 0xed; // bool
		constexpr auto bAimLockMeshSmoothCompensation = 0xee; // bool
		constexpr auto bAimLockUsesOwnVelocity = 0xef; // bool
		constexpr auto bComplexAimLockDeltaRotCalculation = 0xf0; // bool
		constexpr auto bComplexLookLocationCalculation = 0xf1; // bool
		constexpr auto MaxAimLockEvaluationInterval = 0xf4; // float
		constexpr auto KickbackIgnoreFactor = 0xf8; // float
		constexpr auto CrossAxisWeaknessPoint = 0xfc; // float
		constexpr auto bOldLockValid = 0x100; // bool
		constexpr auto OldLockRelativeLocation = 0x104; // FVector
		constexpr auto OldInputRot = 0x110; // FRotator
		constexpr auto LastAimAssistTarget = 0x120; // UObject*
		constexpr auto bLastTargetCrouching = 0x128; // bool
		constexpr auto bLastSelfCrouching = 0x129; // bool
		constexpr auto LastLockAssistPosition = 0x12c; // FVector2D
		constexpr auto LastAnchorScreenLocation = 0x134; // FVector2D
		constexpr auto AimAssistVisibilityUpdatePeriod = 0x13c; // float
		constexpr auto CrouchAnimTimeLength = 0x140; // float
		constexpr auto CrouchAnimTimeLengthRemaining = 0x144; // float
		constexpr auto ScaledScreenSpaceJukeDistanceThreshold = 0x148; // FVector2D
	}

	namespace n_UReportMenu_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto CheatingButton = 0x528; // UWBP_ButtonStacked_C*
		constexpr auto CommentField = 0x530; // UWBP_ReportMenuCommentField_C*
		constexpr auto DarkBanner = 0x538; // UImage*
		constexpr auto HarassmentButton = 0x540; // UWBP_ButtonStacked_C*
		constexpr auto IntentionalFeedingButton = 0x548; // UWBP_ButtonStacked_C*
		constexpr auto LeavingButton = 0x550; // UWBP_ButtonStacked_C*
		constexpr auto MuteText = 0x558; // UTextBlock*
		constexpr auto MuteText_2 = 0x560; // UTextBlock*
		constexpr auto MuteText_3 = 0x568; // UTextBlock*
		constexpr auto MuteText_4 = 0x570; // UTextBlock*
		constexpr auto MuteText_5 = 0x578; // UTextBlock*
		constexpr auto MuteText_6 = 0x580; // UTextBlock*
		constexpr auto OtherButton = 0x588; // UWBP_ButtonStacked_C*
		constexpr auto ReasonLabelSelected = 0x590; // UTextBlock*
		constexpr auto ReasonLabelSwitcher = 0x598; // UWidgetSwitcher*
		constexpr auto StreamSnipingButton = 0x5a0; // UWBP_ButtonStacked_C*
		constexpr auto SubmitNew = 0x5a8; // UWBP_StandardButtonLarge_C*
		constexpr auto WBP_Header1 = 0x5b0; // UWBP_Header1_C*
		constexpr auto WBP_ModalPopupContainer = 0x5b8; // UWBP_ModalPopupContainer_C*
		constexpr auto OnCloseTabScreen = 0x5c0; // FMulticastInlineDelegate
		constexpr auto OnPlayerReported = 0x5d0; // FMulticastInlineDelegate
		constexpr auto CachedReport = 0x5e0; // FReportPlayerParams
		constexpr auto OnTabPressed = 0x630; // FMulticastInlineDelegate
		constexpr auto LastSelectedReason = 0x640; // EReportPlayerReason
	}

	namespace n_UGizmoCircleComponent {
		constexpr auto Normal = 0x450; // FVector
		constexpr auto Radius = 0x45c; // float
		constexpr auto Thickness = 0x460; // float
		constexpr auto NumSides = 0x464; // int32_t
		constexpr auto bViewAligned = 0x468; // bool
		constexpr auto bOnlyAllowFrontFacingHits = 0x469; // bool
	}

	namespace n_UWBP_PurchasedTransition_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto PurchasedIntro = 0x528; // UWidgetAnimation*
		constexpr auto BackgroundFlare = 0x530; // UImage*
		constexpr auto BackgroundFlare_ColorWrapper = 0x538; // UBorder*
		constexpr auto BannerFlare = 0x540; // UImage*
		constexpr auto BoxBack = 0x548; // UImage*
		constexpr auto CenterGradient = 0x550; // UImage*
		constexpr auto CenterShimmer = 0x558; // UImage*
		constexpr auto DiamondBase = 0x560; // UImage*
		constexpr auto DiamondBlur = 0x568; // UImage*
		constexpr auto DiamondInterior_ColorWrapper = 0x570; // UBorder*
		constexpr auto EdgeGlow = 0x578; // UImage*
		constexpr auto EdgeGlow_2 = 0x580; // UImage*
		constexpr auto Glitch_Center = 0x588; // UImage*
		constexpr auto GlitchCenter_ColorWrapper = 0x590; // UBorder*
		constexpr auto GlowBanner_ColorWrapper = 0x598; // UBorder*
		constexpr auto glowLine = 0x5a0; // UWBP_AdditiveImage_C*
		constexpr auto glowLine_3 = 0x5a8; // UWBP_AdditiveImage_C*
		constexpr auto PrimaryBannerShade = 0x5b0; // UImage*
		constexpr auto PrimaryBannerText = 0x5b8; // UTextBlock*
		constexpr auto ScanLines = 0x5c0; // UWBP_AdditiveImage_C*
		constexpr auto ScanLines_3 = 0x5c8; // UWBP_AdditiveImage_C*
		constexpr auto Section1 = 0x5d0; // UImage*
		constexpr auto Section2 = 0x5d8; // UImage*
		constexpr auto Section3 = 0x5e0; // UImage*
		constexpr auto Section4 = 0x5e8; // UImage*
		constexpr auto Section5 = 0x5f0; // UImage*
		constexpr auto Section6 = 0x5f8; // UImage*
		constexpr auto SheenLeft = 0x600; // UImage*
		constexpr auto SheenRight = 0x608; // UImage*
		constexpr auto ShieldLogo_2 = 0x610; // UImage*
		constexpr auto VictoryDefeatGlow = 0x618; // UImage*
		constexpr auto VictoryDefeatGlow_2 = 0x620; // UImage*
		constexpr auto VictoryDefeatGlow_Pulse = 0x628; // UImage*
		constexpr auto VictoryDefeatGlow_Pulse_2 = 0x630; // UImage*
		constexpr auto TickTime = 0x638; // float
		constexpr auto TransitionFinished = 0x640; // FMulticastInlineDelegate
		constexpr auto Acquisition = 0x650; // UKSAcquisition*
	}

	namespace n_UMaterialExpressionThinTranslucentMaterialOutput {
		constexpr auto TransmittanceColor = 0x40; // FExpressionInput
	}

	namespace n_UWBP_RelatedRogueEntry_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto BG = 0x528; // UImage*
		constexpr auto Bg_Gradient = 0x530; // UImage*
		constexpr auto Image_102 = 0x538; // UImage*
		constexpr auto LockWrapper = 0x540; // UBorder*
		constexpr auto RogueIcon = 0x548; // UKSAsyncImage*
		constexpr auto bIsLocked = 0x550; // bool
	}

	namespace n_AGamePlayerControllerNoHUD_C {
		constexpr auto PlayerControllerThreatComponent = 0xec0; // UPlayerControllerThreatComponent_C*
		constexpr auto ControllerAkComponent = 0xec8; // UAkComponent*
		constexpr auto DefaultEnvironmentListener = 0xed0; // UDefaultEnvironmentListener_C*
	}

	namespace n_AKSJobSelector {
		constexpr auto SelectionRules = 0x220; // UKSJobSelectionRules*
		constexpr auto PersonalActiveTask = 0x228; // FJobSelectionTask
		constexpr auto LocalPersonalActiveTask = 0x270; // FJobSelectionTask
		constexpr auto bLocalPersonalTaskPendingComplete = 0x2b8; // bool
		constexpr auto Choices = 0x2c0; // TArray<FJobSelectionChoice>
		constexpr auto CompletedTasks = 0x2d0; // FJobSelectionTaskList
		constexpr auto ActiveTasks = 0x400; // FJobSelectionTaskList
		constexpr auto PendingTasks = 0x530; // FJobSelectionTaskList
		constexpr auto bAllPersonalTasksAreComplete = 0x660; // bool
		constexpr auto bLocalAllPersonalTasksAreComplete = 0x661; // bool
		constexpr auto bSelectionHasEnded = 0x662; // bool
		constexpr auto OnRequestSelectSuccessful = 0x668; // FMulticastInlineDelegate
		constexpr auto OnRequestSelectFailed = 0x678; // FMulticastInlineDelegate
		constexpr auto OnRequestCompleteSuccessful = 0x688; // FMulticastInlineDelegate
		constexpr auto OnRequestCompleteFailed = 0x698; // FMulticastInlineDelegate
		constexpr auto OnJobSelectionChoicesChanged = 0x6a8; // FMulticastInlineDelegate
		constexpr auto OnTasksChanged = 0x6b8; // FMulticastInlineDelegate
		constexpr auto OnPendingTasksChanged = 0x6c8; // FMulticastInlineDelegate
		constexpr auto OnTaskCompleted = 0x6d8; // FMulticastInlineDelegate
		constexpr auto OnPersonalActiveTaskChanged = 0x6e8; // FMulticastInlineDelegate
		constexpr auto OnAllPersonalTasksCompleted = 0x6f8; // FMulticastInlineDelegate
		constexpr auto OnEndJobSelection = 0x708; // FMulticastInlineDelegate
		constexpr auto SelectionAuthority = 0x718; // TWeakObjectPtr<AKSJobSelectionAuthority>
		constexpr auto JobSelectorId = 0x720; // int32_t
		constexpr auto CachedPersistentPlayerId = 0x728; // FKSPersistentPlayerId
		constexpr auto TimerManager = 0x738; // FPGame_ReplicatedTimerManagerSlave
		constexpr auto bChoicesAreDirty = 0x8b8; // bool
		constexpr auto bTasksAreDirty = 0x8b9; // bool
		constexpr auto bPendingTasksAreDirty = 0x8ba; // bool
		constexpr auto bPersonalTaskIsDirty = 0x8bb; // bool
		constexpr auto bAllPersonTasksCompleteIsDirty = 0x8bc; // bool
		constexpr auto bOwnerIsDirty = 0x8bd; // bool
		constexpr auto BroadcastedTasks = 0x8c0; // TSet<FJobSelectionTaskId>
		constexpr auto JobToChoiceIndexMap = 0x910; // TMap<UKSJobItem*, int32_t>
		constexpr auto OwningPlayerController = 0x9b0; // APlayerController*
		constexpr auto PrevLocalSelectedJob = 0x9b8; // TWeakObjectPtr<UKSJobItem>
		constexpr auto PrevLockedJobForLocalPlayer = 0x9c0; // TWeakObjectPtr<UKSJobItem>
	}

	namespace n_AKSGameMode_TutorialBase {
		constexpr auto OnTutorialComplete = 0xf88; // FMulticastInlineDelegate
		constexpr auto TutorialEnding = 0xf98; // FMulticastInlineDelegate
	}

	namespace n_ULandscapeSplinesComponent {
		constexpr auto ControlPoints = 0x430; // TArray<ULandscapeSplineControlPoint*>
		constexpr auto Segments = 0x440; // TArray<ULandscapeSplineSegment*>
		constexpr auto CookedForeignMeshComponents = 0x450; // TArray<UMeshComponent*>
	}

	namespace n_UAppleImageUtilsBaseAsyncTaskBlueprintProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
		constexpr auto ConversionResult = 0x60; // FAppleImageUtilsImageConversionResult
	}

	namespace n_UNiagaraParameterCollectionInstance {
		constexpr auto Collection = 0x28; // UNiagaraParameterCollection*
		constexpr auto OverridenParameters = 0x30; // TArray<FNiagaraVariable>
		constexpr auto ParameterStorage = 0x40; // FNiagaraParameterStore
	}

	namespace n_UAnimCompress_RemoveLinearKeys {
		constexpr auto MaxPosDiff = 0x40; // float
		constexpr auto MaxAngleDiff = 0x44; // float
		constexpr auto MaxScaleDiff = 0x48; // float
		constexpr auto MaxEffectorDiff = 0x4c; // float
		constexpr auto MinEffectorDiff = 0x50; // float
		constexpr auto EffectorDiffSocket = 0x54; // float
		constexpr auto ParentKeyScale = 0x58; // float
		constexpr auto bRetarget = 0x5c; // char : 1
		constexpr auto bActuallyFilterLinearKeys = 0x5c; // char : 1
	}

	namespace n_UKSActivityRewardCondition_AimModeUsed {
		constexpr auto MatchingAimModes = 0x30; // TArray<EKSCharacterAimMode>
	}

	namespace n_UKSPlayerMod_Gadget {
		constexpr auto GadgetThrowSpeedMutliplier = 0x330; // float
		constexpr auto GadgetInnerRadiusMultiplier = 0x334; // float
		constexpr auto GadgetOuterRadiusMutliplier = 0x338; // float
		constexpr auto GadgetFXSizeMultiplier = 0x33c; // float
	}

	namespace n_UKSWeaponAttachment_LongBarrel {
		constexpr auto FalloffRangeMultiplier = 0x2f8; // float
	}

	namespace n_UAkInitBank {
		constexpr auto AvailableAudioCultures = 0x58; // TArray<FString>
		constexpr auto DefaultLanguage = 0x68; // FString
	}

	namespace n_UMovieSceneEasingExternalCurve {
		constexpr auto Curve = 0x30; // UCurveFloat*
	}

	namespace n_UHapticFeedbackEffect_Curve {
		constexpr auto HapticDetails = 0x28; // FHapticFeedbackDetails_Curve
	}

	namespace n_UNameplateWidget_C {
		constexpr auto BountyIcon = 0x240; // UPUMG_Widget*
		constexpr auto BountyState = 0x248; // USizeBox*
		constexpr auto CanvasPanel_1 = 0x250; // UCanvasPanel*
		constexpr auto CrackedState = 0x258; // USizeBox*
		constexpr auto DownedArrow = 0x260; // UImage*
		constexpr auto DownedPlayer = 0x268; // UWidgetSwitcher*
		constexpr auto ObjectiveIcon = 0x270; // UImage*
		constexpr auto ObjectiveWrapper = 0x278; // USizeBox*
		constexpr auto PlayerHealthMeter = 0x280; // UPlayerHealthMeter_C*
		constexpr auto PlayerName = 0x288; // UTextBlock*
		constexpr auto RogueIcon = 0x290; // UUserWidget*
		constexpr auto Nameplate_PlayerState = 0x298; // APlayerState*
		constexpr auto Nameplate_Character = 0x2a0; // AKSCharacter*
		constexpr auto Killcam_Enabled = 0x2a8; // bool
		constexpr auto HoverState = 0x2ac; // FName
		constexpr auto ResidualFadeAlpha = 0x2b4; // float
		constexpr auto ResidualFadeDelayTime = 0x2b8; // float
		constexpr auto DamageLerpEndpoints = 0x2bc; // FVector2D
		constexpr auto ResidualFadeTime = 0x2c4; // float
		constexpr auto Manual Tick Delta Time = 0x2c8; // float
		constexpr auto ResidualFadeDelayTimer = 0x2cc; // float
		constexpr auto DamageLerpAlpha = 0x2d0; // float
		constexpr auto ResidualFadePower = 0x2d4; // float
		constexpr auto DamageLerpPower = 0x2d8; // float
		constexpr auto DamageLerpTime = 0x2dc; // float
		constexpr auto PreviousHealth = 0x2e0; // float
		constexpr auto CurrentMeterState = 0x2e4; // FPlayerHealthMeterState
		constexpr auto HasDeferredUpdate = 0x2fc; // bool
		constexpr auto ShowObjective = 0x2fd; // bool
		constexpr auto ForceAlwaysShowObjectivePlayer = 0x2fe; // bool
		constexpr auto ColorCorrection = 0x2ff; // EColorVisionDeficiency
		constexpr auto bIsNameSet = 0x300; // bool
		constexpr auto K2Node_DynamicCast_AsKSPlayer_State = 0x308; // AKSPlayerState*
		constexpr auto K2Node_DynamicCast_bSuccess = 0x310; // bool
		constexpr auto K2Node_CreateDelegate_OutputDelegate = 0x314; // FDelegate
		constexpr auto K2Node_CustomEvent_Character_2 = 0x328; // AKSCharacterFoundation*
		constexpr auto K2Node_DynamicCast_AsKSCharacter_Base = 0x330; // AKSCharacterBase*
		constexpr auto K2Node_DynamicCast_bSuccess_2 = 0x338; // bool
		constexpr auto K2Node_DynamicCast_AsKSGame_State = 0x340; // AKSGameState*
		constexpr auto K2Node_DynamicCast_bSuccess_3 = 0x348; // bool
		constexpr auto K2Node_CreateDelegate_OutputDelegate_2 = 0x34c; // FDelegate
		constexpr auto K2Node_CustomEvent_PlayerState = 0x360; // AKSPlayerState*
		constexpr auto K2Node_DynamicCast_AsKSGame_State_2 = 0x368; // AKSGameState*
		constexpr auto K2Node_DynamicCast_bSuccess_4 = 0x370; // bool
		constexpr auto K2Node_CustomEvent_Mod_2 = 0x378; // UKSPlayerMod*
		constexpr auto K2Node_CustomEvent_ModInstance_2 = 0x380; // UKSPlayerModInstance*
		constexpr auto K2Node_CustomEvent_Mod = 0x388; // UKSPlayerMod*
		constexpr auto K2Node_CustomEvent_ModInstance = 0x390; // UKSPlayerModInstance*
		constexpr auto K2Node_CustomEvent_PlayerState_2 = 0x398; // AKSPlayerState*
		constexpr auto K2Node_CreateDelegate_OutputDelegate_3 = 0x3a0; // FDelegate
		constexpr auto K2Node_CreateDelegate_OutputDelegate_4 = 0x3b0; // FDelegate
		constexpr auto CallFunc_BindToObjectiveStateChanged_self_CastInput = 0x3c0; // TScriptInterface<IKSObjective>
		constexpr auto K2Node_Event_IsDesignTime = 0x3d0; // bool
		constexpr auto K2Node_CustomEvent_GameObjective = 0x3d8; // TScriptInterface<IKSObjective>
		constexpr auto K2Node_DynamicCast_AsKSGame_User_Settings = 0x3e8; // UKSGameUserSettings*
		constexpr auto K2Node_DynamicCast_bSuccess_5 = 0x3f0; // bool
		constexpr auto K2Node_CreateDelegate_OutputDelegate_5 = 0x3f4; // FDelegate
		constexpr auto K2Node_CreateDelegate_OutputDelegate_6 = 0x404; // FDelegate
		constexpr auto K2Node_CustomEvent_Character = 0x418; // AKSCharacter*
		constexpr auto CallFunc_GetModInstancesByModAsset_OutMods = 0x420; // TArray<UKSPlayerModInstance*>
		constexpr auto CallFunc_Array_Get_Item = 0x430; // UKSPlayerModInstance*
		constexpr auto K2Node_CreateDelegate_OutputDelegate_7 = 0x438; // FDelegate
		constexpr auto K2Node_CustomEvent_PlayerState_3 = 0x448; // AKSPlayerState*
		constexpr auto K2Node_CustomEvent_IsEnabled = 0x450; // bool
		constexpr auto K2Node_CreateDelegate_OutputDelegate_8 = 0x454; // FDelegate
		constexpr auto K2Node_DynamicCast_AsKSPlayer_Controller = 0x468; // AKSPlayerController*
		constexpr auto K2Node_DynamicCast_bSuccess_6 = 0x470; // bool
		constexpr auto K2Node_CreateDelegate_OutputDelegate_9 = 0x474; // FDelegate
		constexpr auto K2Node_CustomEvent_Controller = 0x488; // AKSPlayerController*
		constexpr auto K2Node_CustomEvent_OldViewTarget = 0x490; // AActor*
		constexpr auto K2Node_CustomEvent_NewViewTarget = 0x498; // AActor*
		constexpr auto K2Node_CreateDelegate_OutputDelegate_10 = 0x4a0; // FDelegate
		constexpr auto K2Node_DynamicCast_AsKSPlayer_Controller_2 = 0x4b0; // AKSPlayerController*
		constexpr auto K2Node_DynamicCast_bSuccess_7 = 0x4b8; // bool
		constexpr auto K2Node_CreateDelegate_OutputDelegate_11 = 0x4bc; // FDelegate
		constexpr auto K2Node_DynamicCast_AsKSLocal_Player = 0x4d0; // UKSLocalPlayer*
		constexpr auto K2Node_DynamicCast_bSuccess_8 = 0x4d8; // bool
		constexpr auto Temp_bool_Has_Been_Initd_Variable = 0x4d9; // bool
		constexpr auto K2Node_CustomEvent_Character_3 = 0x4e0; // AKSCharacterFoundation*
		constexpr auto K2Node_DynamicCast_AsKSCharacter = 0x4e8; // AKSCharacter*
		constexpr auto K2Node_DynamicCast_bSuccess_9 = 0x4f0; // bool
		constexpr auto K2Node_Event_PlayerState = 0x4f8; // APlayerState*
		constexpr auto K2Node_Event_Character = 0x500; // AKSCharacter*
		constexpr auto K2Node_DynamicCast_AsKSPlayer_State_2 = 0x508; // AKSPlayerState*
		constexpr auto K2Node_DynamicCast_bSuccess_10 = 0x510; // bool
		constexpr auto K2Node_CreateDelegate_OutputDelegate_12 = 0x514; // FDelegate
		constexpr auto K2Node_CreateDelegate_OutputDelegate_13 = 0x524; // FDelegate
		constexpr auto K2Node_CreateDelegate_OutputDelegate_14 = 0x534; // FDelegate
		constexpr auto K2Node_CreateDelegate_OutputDelegate_15 = 0x544; // FDelegate
		constexpr auto K2Node_CreateDelegate_OutputDelegate_16 = 0x554; // FDelegate
		constexpr auto K2Node_CreateDelegate_OutputDelegate_17 = 0x564; // FDelegate
		constexpr auto K2Node_DynamicCast_AsKSPlayer_State_3 = 0x578; // AKSPlayerState*
		constexpr auto K2Node_DynamicCast_bSuccess_11 = 0x580; // bool
		constexpr auto K2Node_CreateDelegate_OutputDelegate_18 = 0x584; // FDelegate
		constexpr auto Temp_bool_IsClosed_Variable = 0x594; // bool
		constexpr auto K2Node_CreateDelegate_OutputDelegate_19 = 0x598; // FDelegate
		constexpr auto K2Node_CreateDelegate_OutputDelegate_20 = 0x5a8; // FDelegate
		constexpr auto K2Node_CreateDelegate_OutputDelegate_21 = 0x5b8; // FDelegate
		constexpr auto Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable = 0x5c8; // bool
		constexpr auto K2Node_CreateDelegate_OutputDelegate_22 = 0x5cc; // FDelegate
		constexpr auto K2Node_DynamicCast_AsKSPlayer_State_4 = 0x5e0; // AKSPlayerState*
		constexpr auto K2Node_DynamicCast_bSuccess_12 = 0x5e8; // bool
	}

	namespace n_UKSEquipmentCosmeticComponent {
		constexpr auto bHasBeenUnequipped = 0xb0; // bool
		constexpr auto EquipmentContainerOwner = 0xb8; // TScriptInterface<IKSEquipmentContainerOwner>
		constexpr auto EquipmentId = 0xc8; // FKSEquipmentId
		constexpr auto AuthorityEquipmentId = 0xcc; // FKSEquipmentId
		constexpr auto EquipPoint = 0xd0; // FGameplayTag
		constexpr auto bNoEquipPoint = 0xd8; // bool
		constexpr auto Rarity = 0xd9; // EKSRarity
		constexpr auto SkinTagAssetOwner = 0xe0; // TScriptInterface<ISkinTagAssetInterface>
		constexpr auto CharacterOwner = 0xf8; // AKSCharacter*
		constexpr auto bPropSpawner = 0x118; // bool
	}

	namespace n_UMovieSceneVectorTrack {
		constexpr auto NumChannelsUsed = 0x88; // int32_t
	}

	namespace n_UParticleModuleKillBox {
		constexpr auto LowerLeftCorner = 0x30; // FRawDistributionVector
		constexpr auto UpperRightCorner = 0x78; // FRawDistributionVector
		constexpr auto bAbsolute = 0xc0; // char : 1
		constexpr auto bKillInside = 0xc0; // char : 1
		constexpr auto bAxisAlignedAndFixedSize = 0xc0; // char : 1
	}

	namespace n_UKSSettingsPreview {
		constexpr auto OnPreviewValueChanged = 0x520; // FMulticastInlineDelegate
		constexpr auto SettingsInfo = 0x530; // UKSSettingsInfoBase*
	}

	namespace n_UGameplayTaskResource {
		constexpr auto ManualResourceID = 0x28; // int32_t
		constexpr auto AutoResourceID = 0x2c; // int8_t
		constexpr auto bManuallySetID = 0x30; // char : 1
	}

	namespace n_UMaterialExpressionBlackBody {
		constexpr auto Temp = 0x40; // FExpressionInput
	}

	namespace n_UGeometryCollectionCache {
		constexpr auto RecordedData = 0x28; // FRecordedTransformTrack
		constexpr auto SupportedCollection = 0x38; // UGeometryCollection*
		constexpr auto CompatibleCollectionState = 0x40; // FGuid
	}

	namespace n_UPoseAsset {
		constexpr auto PoseContainer = 0x80; // FPoseDataContainer
		constexpr auto bAdditivePose = 0x110; // bool
		constexpr auto BasePoseIndex = 0x114; // int32_t
		constexpr auto RetargetSource = 0x118; // FName
	}

	namespace n_UKSBTD_WillActiveGrenadeHitTarget {
		constexpr auto OverrideMinRadius = 0x90; // float
	}

	namespace n_AMagicLeapSharedWorldGameState {
		constexpr auto SharedWorldData = 0x290; // FMagicLeapSharedWorldSharedData
		constexpr auto AlignmentTransforms = 0x2a0; // FMagicLeapSharedWorldAlignmentTransforms
		constexpr auto OnSharedWorldDataUpdated = 0x2b0; // FMulticastInlineDelegate
		constexpr auto OnAlignmentTransformsUpdated = 0x2c0; // FMulticastInlineDelegate
	}

	namespace n_UKSProgressionTallyWidget {
		constexpr auto PlayerProgressionData = 0x520; // FPlayerProgression
	}

	namespace n_UKSBTD_ItemDropState {
		constexpr auto ItemDropStateFilter = 0x90; // FKSItemDropStateFilter
	}

	namespace n_UAkAssetDataWithMedia {
		constexpr auto MediaList = 0x68; // TArray<TSoftObjectPtr<UAkMediaAsset>>
	}

	namespace n_UParticleModuleRotation {
		constexpr auto StartRotation = 0x30; // FRawDistributionFloat
	}

	namespace n_UHitDecalConfig_C {
		constexpr auto Info = 0x28; // FHitDecalInfo
	}

	namespace n_UWBP_CosmeticItemTags_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto TagsContainer = 0x528; // UWrapBox*
		constexpr auto WBP_CosmeticItemTagEntry = 0x530; // UWBP_CosmeticItemTagEntry_C*
		constexpr auto WBP_CosmeticItemTagEntry_2 = 0x538; // UWBP_CosmeticItemTagEntry_C*
		constexpr auto WBP_CosmeticItemTagEntry_3 = 0x540; // UWBP_CosmeticItemTagEntry_C*
		constexpr auto WBP_CosmeticItemTagEntry_4 = 0x548; // UWBP_CosmeticItemTagEntry_C*
		constexpr auto WBP_CosmeticItemTagEntry_5 = 0x550; // UWBP_CosmeticItemTagEntry_C*
		constexpr auto WBP_CosmeticItemTagEntry_6 = 0x558; // UWBP_CosmeticItemTagEntry_C*
		constexpr auto Alignment = 0x560; // ETextJustify
	}

	namespace n_UInputSettings {
		constexpr auto AxisConfig = 0x28; // TArray<FInputAxisConfigEntry>
		constexpr auto bAltEnterTogglesFullscreen = 0x38; // char : 1
		constexpr auto bF11TogglesFullscreen = 0x38; // char : 1
		constexpr auto bUseMouseForTouch = 0x38; // char : 1
		constexpr auto bEnableMouseSmoothing = 0x38; // char : 1
		constexpr auto bEnableFOVScaling = 0x38; // char : 1
		constexpr auto bCaptureMouseOnLaunch = 0x38; // char : 1
		constexpr auto bDefaultViewportMouseLock = 0x38; // char : 1
		constexpr auto bAlwaysShowTouchInterface = 0x38; // char : 1
		constexpr auto bShowConsoleOnFourFingerTap = 0x39; // char : 1
		constexpr auto bEnableGestureRecognizer = 0x39; // char : 1
		constexpr auto bUseAutocorrect = 0x3a; // bool
		constexpr auto ExcludedAutocorrectOS = 0x40; // TArray<FString>
		constexpr auto ExcludedAutocorrectCultures = 0x50; // TArray<FString>
		constexpr auto ExcludedAutocorrectDeviceModels = 0x60; // TArray<FString>
		constexpr auto DefaultViewportMouseCaptureMode = 0x70; // EMouseCaptureMode
		constexpr auto DefaultViewportMouseLockMode = 0x71; // EMouseLockMode
		constexpr auto FOVScale = 0x74; // float
		constexpr auto DoubleClickTime = 0x78; // float
		constexpr auto ActionMappings = 0x80; // TArray<FInputActionKeyMapping>
		constexpr auto AxisMappings = 0x90; // TArray<FInputAxisKeyMapping>
		constexpr auto SpeechMappings = 0xa0; // TArray<FInputActionSpeechMapping>
		constexpr auto DefaultTouchInterface = 0xb0; // FSoftObjectPath
		constexpr auto ConsoleKey = 0xc8; // FKey
		constexpr auto ConsoleKeys = 0xe0; // TArray<FKey>
	}

	namespace n_UMaterialExpressionSquareRoot {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UMaterialParameterCollectionInstance {
		constexpr auto Collection = 0x30; // UMaterialParameterCollection*
	}

	namespace n_UKSWeaponAttachmentCosmeticInst {
		constexpr auto DefaultAssetDataTable = 0x138; // UDataTable*
		constexpr auto DefaulAssetDataTablePriority = 0x140; // int32_t
		constexpr auto SkinDetailsPtr = 0x148; // TSoftObjectPtr<UKSWeaponAttachmentSkinDetails>
		constexpr auto AttachmentAsset = 0x180; // UKSWeaponAttachment*
		constexpr auto AttachPoint = 0x188; // FGameplayTag
		constexpr auto ParentComponent = 0x190; // UKSWeaponComponent*
		constexpr auto ParentEquipmentId = 0x198; // FKSEquipmentId
		constexpr auto ParentWeaponAsset = 0x1a0; // UKSWeaponAsset*
		constexpr auto bInitialized = 0x1a8; // bool
	}

	namespace n_UKSModInst_MovementAbility {
		constexpr auto Distance = 0x478; // float
	}

	namespace n_UTrendedKick_C {
		constexpr auto KickTrendProfiles = 0x28; // TArray<FKickTrendProfile>
		constexpr auto TrendRepeatIndex = 0x38; // int32_t
	}

	namespace n_USubUVAnimation {
		constexpr auto SubUVTexture = 0x28; // UTexture2D*
		constexpr auto SubImages_Horizontal = 0x30; // int32_t
		constexpr auto SubImages_Vertical = 0x34; // int32_t
		constexpr auto BoundingMode = 0x38; // ESubUVBoundingVertexCount
		constexpr auto OpacitySourceMode = 0x39; // EOpacitySourceMode
		constexpr auto AlphaThreshold = 0x3c; // float
	}

	namespace n_UGridSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
		constexpr auto Row = 0x4c; // int32_t
		constexpr auto RowSpan = 0x50; // int32_t
		constexpr auto column = 0x54; // int32_t
		constexpr auto ColumnSpan = 0x58; // int32_t
		constexpr auto Layer = 0x5c; // int32_t
		constexpr auto Nudge = 0x60; // FVector2D
	}

	namespace n_UWBP_PlayerProfileScreen_AwardEntry_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto OnHover = 0x240; // UWidgetAnimation*
		constexpr auto FadeIn = 0x248; // UWidgetAnimation*
		constexpr auto AwardPanelWrapper = 0x250; // UOverlay*
		constexpr auto AwardSizeControl = 0x258; // USizeBox*
		constexpr auto BarWrapper = 0x260; // UOverlay*
		constexpr auto BundleItem1 = 0x268; // UWBP_KSCosmeticItemDisplay_C*
		constexpr auto Fill = 0x270; // UImage*
		constexpr auto Glow = 0x278; // UWBP_AdditiveImage_C*
		constexpr auto GlowFIll = 0x280; // UImage*
		constexpr auto HitTarget = 0x288; // UButton*
		constexpr auto IconSizeBox = 0x290; // USizeBox*
		constexpr auto Image_232 = 0x298; // UImage*
		constexpr auto Image_825 = 0x2a0; // UImage*
		constexpr auto ImgIcon = 0x2a8; // UWBP_AsyncIcon_C*
		constexpr auto PanelBG = 0x2b0; // UImage*
		constexpr auto PanelHighlight = 0x2b8; // UImage*
		constexpr auto PercentComplete = 0x2c0; // USizeBox*
		constexpr auto PnlMain = 0x2c8; // UCanvasPanel*
		constexpr auto RewardItemWrapper = 0x2d0; // UOverlay*
		constexpr auto RewardNameWrapper = 0x2d8; // UHorizontalBox*
		constexpr auto TextBlock_160 = 0x2e0; // UTextBlock*
		constexpr auto TextSwitcher = 0x2e8; // UWidgetSwitcher*
		constexpr auto TxtActivityDesc = 0x2f0; // UTextBlock*
		constexpr auto TxtActivityName = 0x2f8; // UTextBlock*
		constexpr auto TxtDate = 0x300; // UTextBlock*
		constexpr auto TxtProgress = 0x308; // UTextBlock*
		constexpr auto WBP_ProgressEarnedBar = 0x310; // UWBP_ProgressEarnedBar_C*
		constexpr auto ActivityInstance = 0x318; // FPlayerAwardsPanelData
		constexpr auto Activity = 0x328; // UKSActivity*
		constexpr auto CompactMode = 0x330; // bool
		constexpr auto HoverAwardEntrySFX = 0x338; // UAkAudioEvent*
	}

	namespace n_UWBP_SettingsCarousel_C {
		constexpr auto UberGraphFrame = 0x578; // FPointerToUberGraphFrame
		constexpr auto Right_Hover = 0x580; // UWidgetAnimation*
		constexpr auto Left_Hover = 0x588; // UWidgetAnimation*
		constexpr auto Button_Text_Anim_Reset = 0x590; // UWidgetAnimation*
		constexpr auto Left_Button_Text_Anim = 0x598; // UWidgetAnimation*
		constexpr auto Right_Button_Text_Anim = 0x5a0; // UWidgetAnimation*
		constexpr auto Hover = 0x5a8; // UWidgetAnimation*
		constexpr auto AnimatedTextBlock = 0x5b0; // UTextBlock*
		constexpr auto Carousel_Button = 0x5b8; // UButton*
		constexpr auto DisplayTextBlock = 0x5c0; // UTextBlock*
		constexpr auto Left_Button = 0x5c8; // UButton*
		constexpr auto LightInicationBox = 0x5d0; // UHorizontalBox*
		constexpr auto Right_Button = 0x5d8; // UButton*
		constexpr auto Indicator Lights = 0x5e0; // TArray<UWBP_SettingsCarousel_Light_Indicator_C*>
		constexpr auto HoverSettingsCarouselSFX = 0x5f0; // UAkAudioEvent*
		constexpr auto ClickSettingsCarouselSFX = 0x5f8; // UAkAudioEvent*
	}

	namespace n_AKSProjectile_ClusterGrenade {
		constexpr auto ProjectileClusterComponent = 0x9f8; // UKSProjectileClusterComponent*
		constexpr auto bInflictDamageOnExplosion = 0xa00; // bool
		constexpr auto ClusterExplosionEffect = 0xa08; // UParticleSystem*
		constexpr auto ClusterExplosionDecalMaterial = 0xa10; // UMaterialInterface*
		constexpr auto ClusterDecalScale = 0xa18; // FVector
		constexpr auto StopMesh = 0xa28; // UStaticMesh*
	}

	namespace n_UHapticFeedbackEffect_Buffer {
		constexpr auto Amplitudes = 0x28; // TArray<char>
		constexpr auto SampleRate = 0x38; // int32_t
	}

	namespace n_UMaterialExpressionFunctionInput {
		constexpr auto Preview = 0x40; // FExpressionInput
		constexpr auto InputName = 0x54; // FName
		constexpr auto Description = 0x60; // FString
		constexpr auto ID = 0x70; // FGuid
		constexpr auto InputType = 0x80; // EFunctionInputType
		constexpr auto PreviewValue = 0x90; // FVector4
		constexpr auto bUsePreviewValueAsDefault = 0xa0; // char : 1
		constexpr auto SortPriority = 0xa4; // int32_t
		constexpr auto bCompilingFunctionPreview = 0xa8; // char : 1
	}

	namespace n_UKSStoreItemHelper {
		constexpr auto StoreVendorGroupId = 0x290; // int32_t
		constexpr auto StoreVendorsLoaded = 0x294; // bool
		constexpr auto OnStoreItemNewStatusChange = 0x298; // FMulticastInlineDelegate
		constexpr auto ActiveStoreItems = 0x2a8; // TMap<int32_t, TSoftObjectPtr<UPUMG_StoreItem>>
		constexpr auto StoreHasUnseenItems = 0x300; // bool
	}

	namespace n_AKSDropLocation {
		constexpr auto WayPointSet = 0x258; // AKSWayPointSet*
		constexpr auto ReverseWayPointSetDirection = 0x260; // bool
		constexpr auto FlightDistanceModifier = 0x264; // float
		constexpr auto FreefallXYDistance = 0x268; // float
		constexpr auto FreefallHeight = 0x26c; // float
	}

	namespace n_UKSWrapSelectionEntry {
		constexpr auto OnWrapEquip = 0x520; // FMulticastInlineDelegate
		constexpr auto OnWrapPreview = 0x530; // FMulticastInlineDelegate
		constexpr auto OnStoreWrapSelect = 0x540; // FMulticastInlineDelegate
	}

	namespace n_UKSWeaponAttachmentInstance {
		constexpr auto WeaponOwner = 0xd0; // AKSWeapon*
		constexpr auto AttachmentCosmeticComponent = 0xd8; // UKSWeaponAttachmentCosmeticInst*
		constexpr auto AttachPoint = 0xf8; // FKSEquipRepInfo
		constexpr auto AttachmentAsset = 0x120; // UKSWeaponAttachment*
		constexpr auto bPersistsOnWeaponDrop = 0x128; // bool
	}

	namespace n_UAkHololensInitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettingsWithSampleRate
		constexpr auto CommunicationSettings = 0x90; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xb8; // FAkHololensAdvancedInitializationSettings
	}

	namespace n_UDatasmithVREDSceneImportData {
		constexpr auto bMergeNodes = 0x48; // bool
		constexpr auto bOptimizeDuplicatedNodes = 0x49; // bool
		constexpr auto bImportMats = 0x4a; // bool
		constexpr auto MatsPath = 0x50; // FString
		constexpr auto bImportVar = 0x60; // bool
		constexpr auto bCleanVar = 0x61; // bool
		constexpr auto VarPath = 0x68; // FString
		constexpr auto bImportLightInfo = 0x78; // bool
		constexpr auto LightInfoPath = 0x80; // FString
		constexpr auto bImportClipInfo = 0x90; // bool
		constexpr auto ClipInfoPath = 0x98; // FString
	}

	namespace n_UNiagaraPreviewAxis_InterpParamLinearColor {
		constexpr auto Min = 0x38; // FLinearColor
		constexpr auto Max = 0x48; // FLinearColor
	}

	namespace n_UWBP_RoguePerksPanel_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto WBP_PerkDescSlot = 0x528; // UWBP_PerkDescSlot_C*
		constexpr auto WBP_PerkDescSlot_2 = 0x530; // UWBP_PerkDescSlot_C*
		constexpr auto WBP_PerkDescSlot_3 = 0x538; // UWBP_PerkDescSlot_C*
		constexpr auto WBP_PerkDescSlot_4 = 0x540; // UWBP_PerkDescSlot_C*
		constexpr auto WBP_PerkDescSlot_5 = 0x548; // UWBP_PerkDescSlot_C*
		constexpr auto WBP_PerkDescSlot_6 = 0x550; // UWBP_PerkDescSlot_C*
		constexpr auto WBP_PerkTierHeader = 0x558; // UWBP_PerkTierHeader_C*
		constexpr auto WBP_PerkTierHeader_2 = 0x560; // UWBP_PerkTierHeader_C*
		constexpr auto WBP_PerkTierHeader_3 = 0x568; // UWBP_PerkTierHeader_C*
		constexpr auto WBP_RoguePanelHeader = 0x570; // UWBP_RoguePanelHeader_C*
		constexpr auto RogueDetailsWidget = 0x578; // UKSRogueDetailsWidget*
		constexpr auto StoreItem = 0x580; // UPUMG_StoreItem*
	}

	namespace n_UTextureRenderTarget2D {
		constexpr auto SizeX = 0xc0; // int32_t
		constexpr auto SizeY = 0xc4; // int32_t
		constexpr auto ClearColor = 0xc8; // FLinearColor
		constexpr auto AddressX = 0xd8; // TextureAddress
		constexpr auto AddressY = 0xd9; // TextureAddress
		constexpr auto bForceLinearGamma = 0xda; // char : 1
		constexpr auto bHDR = 0xda; // char : 1
		constexpr auto bGPUSharedFlag = 0xda; // char : 1
		constexpr auto RenderTargetFormat = 0xdb; // ETextureRenderTargetFormat
		constexpr auto bAutoGenerateMips = 0xdc; // char : 1
		constexpr auto MipsSamplerFilter = 0xdd; // TextureFilter
		constexpr auto MipsAddressU = 0xde; // TextureAddress
		constexpr auto MipsAddressV = 0xdf; // TextureAddress
		constexpr auto OverrideFormat = 0xe0; // EPixelFormat
	}

	namespace n_AKSSpreadProjectile {
		constexpr auto CollisionComponent = 0x260; // USceneComponent*
		constexpr auto ProjectileMovementComponent = 0x268; // UProjectileMovementComponent*
	}

	namespace n_UGizmoComponentWorldTransformSource {
		constexpr auto Component = 0x48; // USceneComponent*
		constexpr auto bModifyComponentOnTransform = 0x50; // bool
	}

	namespace n_UNiagaraDataInterfaceCurve {
		constexpr auto Curve = 0x58; // FRichCurve
	}

	namespace n_UKSEncounterWave {
		constexpr auto SpawnTable = 0x30; // UDataTable*
		constexpr auto nMaxSpawnsPerPlayer = 0x38; // TMap<int32_t, int32_t>
		constexpr auto WaveRevealParameters = 0x88; // FKSRevealInfo
	}

	namespace n_UWBP_ToastNotifcation_Entry_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto OffsetY = 0x528; // UWidgetAnimation*
		constexpr auto Outro = 0x530; // UWidgetAnimation*
		constexpr auto Wait = 0x538; // UWidgetAnimation*
		constexpr auto Intro = 0x540; // UWidgetAnimation*
		constexpr auto AnimFade = 0x548; // UImage*
		constexpr auto AnimSwatch = 0x550; // UImage*
		constexpr auto ColorSwatch = 0x558; // UImage*
		constexpr auto Glow = 0x560; // UImage*
		constexpr auto Icon = 0x568; // UImage*
		constexpr auto Message = 0x570; // UTextBlock*
		constexpr auto ToastData = 0x578; // FToastData
		constexpr auto OnRemoveToastNotification = 0x5d0; // FMulticastInlineDelegate
		constexpr auto FinishedIntroAnimation = 0x5e0; // FMulticastInlineDelegate
		constexpr auto SFXErrorToast = 0x5f0; // UAkAudioEvent*
		constexpr auto SFXFriendToast = 0x5f8; // UAkAudioEvent*
		constexpr auto SFXInfoToast = 0x600; // UAkAudioEvent*
		constexpr auto SFXPartyToast = 0x608; // UAkAudioEvent*
		constexpr auto SFXBoostActivationToast = 0x610; // UAkAudioEvent*
	}

	namespace n_UScoreboardPlayerStats_Lobby_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto Hover = 0x528; // UWidgetAnimation*
		constexpr auto avatar = 0x530; // UWBP_PlayerIdentity_Avatar_C*
		constexpr auto AvatarWrapper = 0x538; // USizeBox*
		constexpr auto DamageScore = 0x540; // UTextBlock*
		constexpr auto DeathScore = 0x548; // UTextBlock*
		constexpr auto DownScore = 0x550; // UTextBlock*
		constexpr auto EliminationScore = 0x558; // UTextBlock*
		constexpr auto HitTarget = 0x560; // UButton*
		constexpr auto Image_302 = 0x568; // UImage*
		constexpr auto JobIcon = 0x570; // UWBP_AsyncIcon_C*
		constexpr auto NameBackground = 0x578; // UImage*
		constexpr auto ObjectiveScore = 0x580; // UTextBlock*
		constexpr auto PlayerLevel = 0x588; // UWBP_PlayerIdentity_PlayerLevel_C*
		constexpr auto PlayerName = 0x590; // UTextBlock*
		constexpr auto PointScore = 0x598; // UTextBlock*
		constexpr auto ReviveScore = 0x5a0; // UTextBlock*
		constexpr auto ScoreBackground = 0x5a8; // UImage*
		constexpr auto SelfIndicator = 0x5b0; // UImage*
		constexpr auto WBP_BoxStroke = 0x5b8; // UWBP_BoxStroke_C*
		constexpr auto WBP_BoxStroke_272 = 0x5c0; // UWBP_BoxStroke_C*
		constexpr auto playerStats = 0x5c8; // FPlayerEntryStats
		constexpr auto EMODataFactory = 0x690; // UKSEMODataFactory*
		constexpr auto OnClicked = 0x698; // FMulticastInlineDelegate
		constexpr auto HasHovered = 0x6a8; // bool
		constexpr auto HoverScoreboardPlayerStatsSFX = 0x6b0; // UAkAudioEvent*
		constexpr auto ClickScoreboardPlayerStatsSFX = 0x6b8; // UAkAudioEvent*
	}

	namespace n_UKSBTTask_PlayVO {
		constexpr auto VOEvent = 0x70; // FGameplayTag
		constexpr auto ChanceToPlay = 0x78; // float
	}

	namespace n_UPlayer {
		constexpr auto PlayerController = 0x30; // APlayerController*
		constexpr auto CurrentNetSpeed = 0x38; // int32_t
		constexpr auto ConfiguredInternetSpeed = 0x3c; // int32_t
		constexpr auto ConfiguredLanSpeed = 0x40; // int32_t
	}

	namespace n_UTextureRenderTarget {
		constexpr auto TargetGamma = 0xb8; // float
	}

	namespace n_UPUMG_SettingsDataFactory {
		constexpr auto OnPopulateUserSettings = 0x38; // FMulticastInlineDelegate
		constexpr auto OnPopulateUserBindings = 0x48; // FMulticastInlineDelegate
		constexpr auto OnPopulateUserGPBindings = 0x58; // FMulticastInlineDelegate
		constexpr auto OnPostLogin = 0x68; // FMulticastInlineDelegate
		constexpr auto OnPostLogoff = 0x78; // FMulticastInlineDelegate
		constexpr auto OnSettingValueChanged = 0x88; // FMulticastInlineDelegate
	}

	namespace n_UWorldComposition {
		constexpr auto TilesStreaming = 0x48; // TArray<ULevelStreaming*>
		constexpr auto TilesStreamingTimeThreshold = 0x58; // double
		constexpr auto bLoadAllTilesDuringCinematic = 0x60; // bool
		constexpr auto bRebaseOriginIn3DSpace = 0x61; // bool
		constexpr auto RebaseOriginDistance = 0x64; // float
	}

	namespace n_USubmixEffectTapDelayPreset {
		constexpr auto Settings = 0x80; // FSubmixEffectTapDelaySettings
	}

	namespace n_UEnvQueryGenerator_Donut {
		constexpr auto InnerRadius = 0x80; // FAIDataProviderFloatValue
		constexpr auto OuterRadius = 0xb8; // FAIDataProviderFloatValue
		constexpr auto NumberOfRings = 0xf0; // FAIDataProviderIntValue
		constexpr auto PointsPerRing = 0x128; // FAIDataProviderIntValue
		constexpr auto ArcDirection = 0x160; // FEnvDirection
		constexpr auto ArcAngle = 0x180; // FAIDataProviderFloatValue
		constexpr auto bUseSpiralPattern = 0x1b8; // bool
		constexpr auto Center = 0x1c0; // UEnvQueryContext*
		constexpr auto bDefineArc = 0x1c8; // char : 1
	}

	namespace n_UKSAudioManager {
		constexpr auto AudioPlayerStateParameters = 0x28; // UKSAudioPlayerStateParameterData*
		constexpr auto LoadedAudioDataTables = 0x50; // TMap<FString, UDataTable*>
		constexpr auto WeakGameInstance = 0x120; // TWeakObjectPtr<UKSGameInstance>
	}

	namespace n_UKSKillLeaderTracker {
		constexpr auto CurrentLeader = 0xa0; // FTrackedPlayers
		constexpr auto TempNewLeader = 0xb8; // FTrackedPlayers
		constexpr auto HighestKillCount = 0xd0; // int32_t
		constexpr auto TrackedPlayers = 0xd8; // TArray<FTrackedPlayers>
	}

	namespace n_UGeometryCacheTrack {
		constexpr auto Duration = 0x28; // float
	}

	namespace n_UKSModInst_ProximityComponent {
		constexpr auto OnProximityActorAddedDel = 0x1b8; // FMulticastInlineDelegate
		constexpr auto OnProximityActorRemovedDel = 0x1c8; // FMulticastInlineDelegate
		constexpr auto SphereRadius = 0x1d8; // float
		constexpr auto ProximityFilter = 0x1e0; // FKSProximityFilter
		constexpr auto bDebugShowSphere = 0x208; // bool
		constexpr auto ManagedSphereComponent = 0x210; // USphereComponent*
		constexpr auto ManagedProximityComponent = 0x218; // UKSProximityComponent*
		constexpr auto RepOverlappedActors = 0x230; // TArray<TWeakObjectPtr<AActor>>
	}

	namespace n_UKSNavModifierComponent {
		constexpr auto ComponentBoundsOffset = 0x140; // FVector
	}

	namespace n_AEmitterCameraLensEffectBase {
		constexpr auto PS_CameraEffect = 0x270; // UParticleSystem*
		constexpr auto PS_CameraEffectNonExtremeContent = 0x278; // UParticleSystem*
		constexpr auto BaseCamera = 0x280; // APlayerCameraManager*
		constexpr auto RelativeTransform = 0x290; // FTransform
		constexpr auto BaseFOV = 0x2c0; // float
		constexpr auto bAllowMultipleInstances = 0x2c4; // char : 1
		constexpr auto bResetWhenRetriggered = 0x2c4; // char : 1
		constexpr auto EmittersToTreatAsSame = 0x2c8; // TArray<AEmitterCameraLensEffectBase*>
		constexpr auto DistFromCamera = 0x2d8; // float
	}

	namespace n_UKSAssetQueryHelperComponent {
		constexpr auto PrimaryAssetQuery = 0xb0; // FGameplayTagQuery
		constexpr auto AssetIds = 0xf8; // TArray<FPrimaryAssetId>
		constexpr auto LastResolvedIndex = 0x108; // int32_t
		constexpr auto bHasInitalizedAssetIdList = 0x10c; // bool
	}

	namespace n_UDebugCameraControllerSettings {
		constexpr auto CycleViewModes = 0x38; // TArray<FDebugCameraControllerSettingsViewModeIndex>
	}

	namespace n_UKSRadialMenuManager {
		constexpr auto CachedOwner = 0xb0; // AKSPlayerController*
		constexpr auto bThrottleQuipsAndComms = 0xb8; // bool
		constexpr auto QuipsAndCommsAllowedBeforeThrottle = 0xbc; // int32_t
		constexpr auto QuipAndCommThrottleDetectionPeriod = 0xc0; // float
		constexpr auto QuipAndCommThrottleCooldown = 0xc4; // float
		constexpr auto CurrentQuipsAndCommsBeforeThrottle = 0xc8; // int32_t
		constexpr auto bQuipsAndCommsCurrentlyThrottled = 0xcc; // bool
	}

	namespace n_ULevelSequenceBurnIn {
		constexpr auto FrameInformation = 0x238; // FLevelSequencePlayerSnapshot
		constexpr auto LevelSequenceActor = 0x2f0; // ALevelSequenceActor*
	}

	namespace n_AKSZipLine {
		constexpr auto ZipLiners = 0x230; // TArray<AKSCharacter*>
		constexpr auto ZipStart = 0x240; // FVector
		constexpr auto ZipEnd = 0x24c; // FVector
		constexpr auto ZipHangOffset = 0x258; // FVector
		constexpr auto ZipSpeed = 0x264; // float
		constexpr auto bReadyToRide = 0x268; // bool
		constexpr auto CooldownTime = 0x26c; // float
		constexpr auto MinimumInteractTime = 0x270; // float
		constexpr auto InteractTime = 0x274; // float
		constexpr auto LengthToEndToIgnore = 0x278; // float
		constexpr auto bUpline = 0x27c; // bool
		constexpr auto bGrabFromBehind = 0x27d; // bool
		constexpr auto bForgivingInteractionAngle = 0x27e; // bool
		constexpr auto InteractionType = 0x280; // UKSInteractionType*
		constexpr auto AutoReleaseDistance = 0x288; // float
		constexpr auto AutoReleaseSpeed = 0x28c; // float
		constexpr auto AutoReleasePitchAngle = 0x290; // float
		constexpr auto bSupportsPreHold = 0x294; // bool
		constexpr auto InteractionBlockerManager = 0x298; // UKSInteractionBlockerManager*
		constexpr auto InteractableComponent = 0x2a0; // UKSInteractableComponent*
	}

	namespace n_AKSSeasonalItemSpawnLocationManager {
		constexpr auto bShouldSpawnAtSetup = 0x220; // bool
		constexpr auto bShouldSpawnPeriodically = 0x221; // bool
		constexpr auto SpawnIntervalSeconds = 0x224; // float
		constexpr auto SeasonalSpawningInfos = 0x2b0; // TMap<FString, FSeasonalItemSpawnInfo>
	}

	namespace n_UParticleModuleMeshRotationRateOverLife {
		constexpr auto RotRate = 0x30; // FRawDistributionVector
		constexpr auto bScaleRotRate = 0x78; // char : 1
	}

	namespace n_AKSRadialMenuItemInstance {
		constexpr auto RadialMenuItemAsset = 0x2d8; // UKSRadialMenuItem*
	}

	namespace n_UWBP_news_screen_C {
		constexpr auto UberGraphFrame = 0x538; // FPointerToUberGraphFrame
		constexpr auto CloseButton = 0x540; // UWBP_StandardButtonLarge_C*
		constexpr auto FeaturedImage = 0x548; // UImage*
		constexpr auto FooterBackground = 0x550; // USizeBox*
		constexpr auto HeaderBlock = 0x558; // UVerticalBox*
		constexpr auto HeaderBreak = 0x560; // UImage*
		constexpr auto HeaderOverlay = 0x568; // UOverlay*
		constexpr auto HeaderText = 0x570; // UTextBlock*
		constexpr auto HorizontalContainer = 0x578; // UHorizontalBox*
		constexpr auto SubheaderText = 0x580; // UTextBlock*
		constexpr auto VerticalLeftContainer = 0x588; // UVerticalBox*
		constexpr auto VerticalRightContainer = 0x590; // UVerticalBox*
		constexpr auto LoginState = 0x598; // EPUMG_LoginState
		constexpr auto CachedPanels = 0x5a0; // TArray<UKSWhatsNewPanel*>
	}

	namespace n_AOnlineBeacon {
		constexpr auto BeaconConnectionInitialTimeout = 0x228; // float
		constexpr auto BeaconConnectionTimeout = 0x22c; // float
		constexpr auto NetDriver = 0x230; // UNetDriver*
	}

	namespace n_UChildActorComponent {
		constexpr auto ChildActorClass = 0x208; // AActor*
		constexpr auto ChildActor = 0x210; // AActor*
		constexpr auto ChildActorTemplate = 0x218; // AActor*
	}

	namespace n_UMovieScene3DPathSection {
		constexpr auto TimingCurve = 0x108; // FMovieSceneFloatChannel
		constexpr auto FrontAxisEnum = 0x1a8; // MovieScene3DPathSection_Axis
		constexpr auto UpAxisEnum = 0x1a9; // MovieScene3DPathSection_Axis
		constexpr auto bFollow = 0x1ac; // char : 1
		constexpr auto bReverse = 0x1ac; // char : 1
		constexpr auto bForceUpright = 0x1ac; // char : 1
	}

	namespace n_UKSModInst_RevealAreaToTeam {
		constexpr auto bAppliesScrambleEffectToEnemies = 0x508; // bool
		constexpr auto RevealAreaRevealParameters = 0x510; // FKSRevealInfo
	}

	namespace n_UMaterialExpressionPanner {
		constexpr auto Coordinate = 0x40; // FExpressionInput
		constexpr auto Time = 0x54; // FExpressionInput
		constexpr auto Speed = 0x68; // FExpressionInput
		constexpr auto SpeedX = 0x7c; // float
		constexpr auto SpeedY = 0x80; // float
		constexpr auto ConstCoordinate = 0x84; // uint32_t
		constexpr auto bFractionalPart = 0x88; // bool
	}

	namespace n_USourceEffectFoldbackDistortionPreset {
		constexpr auto Settings = 0x74; // FSourceEffectFoldbackDistortionSettings
	}

	namespace n_UMaterialExpressionMapARPassthroughCameraUV {
		constexpr auto Coordinates = 0x40; // FExpressionInput
	}

	namespace n_UButtonStyleAsset {
		constexpr auto ButtonStyle = 0x28; // FButtonStyle
	}

	namespace n_UWBP_CustomGameActionLog_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto Container = 0x240; // UVerticalBox*
		constexpr auto ScrollContainer = 0x248; // UScrollBox*
		constexpr auto ScrolledToBottom = 0x250; // bool
	}

	namespace n_UMovieSceneGeometryCacheTrack {
		constexpr auto AnimationSections = 0x58; // TArray<UMovieSceneSection*>
	}

	namespace n_UKSAimCorrectionData {
		constexpr auto AllowAimCorrection = 0x38; // TMap<EControllerInputType, bool>
		constexpr auto AimCorrectionOffset = 0x88; // TMap<EControllerInputType, float>
		constexpr auto AimCorrectionRange = 0xd8; // TMap<EControllerInputType, float>
		constexpr auto AllowOverride = 0x128; // TArray<FKSAimAssistPropertyBool>
		constexpr auto OffsetOverride = 0x138; // TArray<FKSAimAssistPropertyFloat>
		constexpr auto RangeOverride = 0x148; // TArray<FKSAimAssistPropertyFloat>
		constexpr auto FullAllowAimCorrection = 0x158; // TMap<EControllerInputType, bool>
		constexpr auto FullAimCorrectionOffset = 0x1a8; // TMap<EControllerInputType, float>
		constexpr auto FullAimCorrectionRange = 0x1f8; // TMap<EControllerInputType, float>
	}

	namespace n_UWBP_navtab_C {
		constexpr auto UberGraphFrame = 0x560; // FPointerToUberGraphFrame
		constexpr auto Unhover = 0x568; // UWidgetAnimation*
		constexpr auto Selected = 0x570; // UWidgetAnimation*
		constexpr auto Hovered = 0x578; // UWidgetAnimation*
		constexpr auto BackFill = 0x580; // UImage*
		constexpr auto BackFill_Free = 0x588; // UImage*
		constexpr auto BackFill_Holiday = 0x590; // UImage*
		constexpr auto BackFill_Premium = 0x598; // UImage*
		constexpr auto BottomEdge = 0x5a0; // UImage*
		constexpr auto BottomEdge_Free = 0x5a8; // UImage*
		constexpr auto BottomEdge_Holiday = 0x5b0; // UImage*
		constexpr auto BottomEdge_Premium = 0x5b8; // UImage*
		constexpr auto Container = 0x5c0; // UOverlay*
		constexpr auto DividerLeft = 0x5c8; // UImage*
		constexpr auto DividerRight = 0x5d0; // UImage*
		constexpr auto LockIcon = 0x5d8; // UImage*
		constexpr auto LockIcon_2 = 0x5e0; // UImage*
		constexpr auto LockIcon_3 = 0x5e8; // UImage*
		constexpr auto LockIcon_4 = 0x5f0; // UImage*
		constexpr auto SelectedGradient = 0x5f8; // UImage*
		constexpr auto SelectedGradient_Free = 0x600; // UImage*
		constexpr auto SelectedGradient_Holiday = 0x608; // UImage*
		constexpr auto SelectedGradient_Premium = 0x610; // UImage*
		constexpr auto SnowMaterial = 0x618; // UImage*
		constexpr auto TabButton = 0x620; // UButton*
		constexpr auto TabColorSwitcher = 0x628; // UWidgetSwitcher*
		constexpr auto text_TabFree = 0x630; // UTextBlock*
		constexpr auto text_TabHoliday = 0x638; // UTextBlock*
		constexpr auto text_TabPremium = 0x640; // UTextBlock*
		constexpr auto text_TabStandard = 0x648; // UTextBlock*
		constexpr auto CalloutClass = 0x650; // TSoftClassPtr<UObject>
		constexpr auto CalloutWidget = 0x678; // UWidget*
		constexpr auto CalloutWidget_HorizontalAlignment = 0x680; // EHorizontalAlignment
		constexpr auto CalloutWidget_VerticalAlignment = 0x681; // EVerticalAlignment
		constexpr auto CalloutWidget_Padding = 0x684; // FMargin
		constexpr auto HoverSubscreenNavTabSFX = 0x698; // UAkAudioEvent*
		constexpr auto ClickSubscreenNavTabSFX = 0x6a0; // UAkAudioEvent*
		constexpr auto UsesBattlePassColoring = 0x6a8; // bool
		constexpr auto UsesHolidayColoring = 0x6a9; // bool
	}

	namespace n_UWBP_KSCosmeticItemDisplay_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto Button = 0x528; // UWBP_ButtonSlot_Cosmetic_C*
		constexpr auto CornerIcon = 0x530; // USizeBox*
		constexpr auto CornerIconImage = 0x538; // UWBP_AsyncIcon_C*
		constexpr auto CornerIconRarityBorder = 0x540; // UBorder*
		constexpr auto DisabledIcon = 0x548; // UWBP_DisabledIcon_C*
		constexpr auto EmptyIcon = 0x550; // UImage*
		constexpr auto FreeLabel = 0x558; // UBorder*
		constexpr auto FreeText = 0x560; // UTextBlock*
		constexpr auto HeaderSlot = 0x568; // UNamedSlot*
		constexpr auto IconWrapper = 0x570; // UHorizontalBox*
		constexpr auto Image_443 = 0x578; // UImage*
		constexpr auto Image_538 = 0x580; // UImage*
		constexpr auto Image_1022 = 0x588; // UImage*
		constexpr auto ItemIconWrapper = 0x590; // UScaleBox*
		constexpr auto MaterialUnderlay = 0x598; // UWBP_AsyncIcon_C*
		constexpr auto NullWrapBorder = 0x5a0; // UBorder*
		constexpr auto OwnedCheck = 0x5a8; // UOverlay*
		constexpr auto PriceWrapper = 0x5b0; // UBorder*
		constexpr auto QuantityText = 0x5b8; // UTextBlock*
		constexpr auto WBP_AsyncIcon = 0x5c0; // UWBP_AsyncIcon_C*
		constexpr auto WBP_StorePriceDisplay = 0x5c8; // UWBP_StorePriceDisplay_C*
		constexpr auto WrapTypeGradient = 0x5d0; // UImage*
		constexpr auto WrapTypeIconSwitcher = 0x5d8; // UWidgetSwitcher*
		constexpr auto WrapTypeIconWrapper = 0x5e0; // USizeBox*
		constexpr auto WeaponSlotHeadingText = 0x5e8; // FText
		constexpr auto OnHover = 0x600; // FMulticastInlineDelegate
		constexpr auto OnUnhover = 0x610; // FMulticastInlineDelegate
		constexpr auto OnCosmeticClicked = 0x620; // FMulticastInlineDelegate
		constexpr auto SlotType = 0x630; // EMercCosmeticSlot
		constexpr auto SlotIndex = 0x634; // int32_t
		constexpr auto bShowCornerIcon = 0x638; // bool
		constexpr auto WeaponSlotType = 0x639; // EWeaponSlot
		constexpr auto bIsSelector = 0x63a; // bool
		constexpr auto CosmeticDetails = 0x640; // FCosmeticSlotDetails
		constexpr auto StoreItem = 0x658; // UPUMG_StoreItem*
		constexpr auto ClickCosmeticItemDisplaySFX = 0x660; // UAkAudioEvent*
		constexpr auto HoverCosmeticItemDisplaySFX = 0x668; // UAkAudioEvent*
		constexpr auto bDisableLockIcon = 0x670; // bool
		constexpr auto bShowPrice = 0x671; // bool
		constexpr auto bUseHeaderSlot = 0x672; // bool
		constexpr auto bAlwaysHideCornerIcon = 0x673; // bool
	}

	namespace n_UDamageResistModInst_C {
		constexpr auto UberGraphFrame = 0x1b8; // FPointerToUberGraphFrame
	}

	namespace n_UKSBotDefinition {
		constexpr auto FriendlySearchName = 0x30; // FString
		constexpr auto Info = 0x40; // FBotSpawnTableRow
	}

	namespace n_UWBP_PlayerStatus_ContextMenuOption_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto Hover = 0x528; // UWidgetAnimation*
		constexpr auto GamepadIconWRapper = 0x530; // USizeBox*
		constexpr auto OptionText = 0x538; // UTextBlock*
		constexpr auto SelectGamepadIcon = 0x540; // UImage*
		constexpr auto WBP_ButtonStacked = 0x548; // UWBP_ButtonStacked_C*
		constexpr auto Assigned Context Option = 0x550; // EPlayerStatusOption
		constexpr auto OnContextOptionSelected = 0x558; // FMulticastInlineDelegate
		constexpr auto IsActiveInMenu = 0x568; // bool
		constexpr auto Current Input State = 0x569; // PGAME_INPUT_STATE
		constexpr auto Is Hovered = 0x56a; // bool
	}

	namespace n_UAnimSequence {
		constexpr auto NumFrames = 0xa8; // int32_t
		constexpr auto TrackToSkeletonMapTable = 0xb0; // TArray<FTrackToSkeletonMap>
		constexpr auto BoneCompressionSettings = 0xd0; // UAnimBoneCompressionSettings*
		constexpr auto CurveCompressionSettings = 0xd8; // UAnimCurveCompressionSettings*
		constexpr auto AdditiveAnimType = 0x150; // EAdditiveAnimationType
		constexpr auto RefPoseType = 0x151; // EAdditiveBasePoseType
		constexpr auto RefPoseSeq = 0x158; // UAnimSequence*
		constexpr auto RefFrameIndex = 0x160; // int32_t
		constexpr auto RetargetSource = 0x164; // FName
		constexpr auto Interpolation = 0x16c; // EAnimInterpolationType
		constexpr auto bEnableRootMotion = 0x16d; // bool
		constexpr auto RootMotionRootLock = 0x16e; // ERootMotionRootLock
		constexpr auto bForceRootLock = 0x16f; // bool
		constexpr auto bUseNormalizedRootMotionScale = 0x170; // bool
		constexpr auto bRootMotionSettingsCopiedFromMontage = 0x171; // bool
		constexpr auto AuthoredSyncMarkers = 0x178; // TArray<FAnimSyncMarker>
	}

	namespace n_UMaterialExpressionFloor {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UAkPS4InitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettings
		constexpr auto CommunicationSettings = 0x88; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xb0; // FAkPS4AdvancedInitializationSettings
	}

	namespace n_UKSPingManager {
		constexpr auto OnPingFailureDel = 0xb0; // FMulticastInlineDelegate
		constexpr auto OnPingAdded = 0xc0; // FMulticastInlineDelegate
		constexpr auto OnPingRemoved = 0xd0; // FMulticastInlineDelegate
		constexpr auto OnPingChanged = 0xe0; // FMulticastInlineDelegate
		constexpr auto OnSentVoiceLineOnly = 0xf0; // FMulticastInlineDelegate
		constexpr auto OnSelfPingAdded = 0x100; // FMulticastInlineDelegate
		constexpr auto OnSelfPingRemoved = 0x110; // FMulticastInlineDelegate
		constexpr auto OnSelfPingChanged = 0x120; // FMulticastInlineDelegate
		constexpr auto OnHoveredActorChanged = 0x130; // FMulticastInlineDelegate
		constexpr auto ReplicatedPings = 0x140; // FPingInfoChangeList
		constexpr auto LocallyPredictedPings = 0x260; // TArray<FPingInfo>
		constexpr auto PingLifetimes = 0x270; // TMap<EPingType, float>
		constexpr auto PingBeaconTypes = 0x2c0; // TMap<EPingType, AKSPingBeaconBase*>
		constexpr auto MaxPingsForType = 0x310; // TMap<EPingType, int32_t>
		constexpr auto PingIconOffsets = 0x360; // TMap<EPingType, FVector_NetQuantize>
		constexpr auto ObjectPingMessage = 0x3b0; // EPingMessage
		constexpr auto ContextualPingTypesDT = 0x3b8; // UDataTable*
		constexpr auto ContextualPingMessagesDT = 0x3c0; // UDataTable*
		constexpr auto bDisplaySelfPingsOnNameplate = 0x3c8; // bool
		constexpr auto bWorldSelfPingsFollowPlayer = 0x3c9; // bool
		constexpr auto MaxPingDistance = 0x418; // float
		constexpr auto ActiveBeacons = 0x420; // TArray<AKSPingBeaconBase*>
		constexpr auto bAllowPingRemoval = 0x430; // bool
		constexpr auto PingAudioCues = 0x438; // TMap<EPingType, UAkAudioEvent*>
		constexpr auto CachedRoundState = 0x490; // AKSGameState_RoundGame*
		constexpr auto CachedOwner = 0x498; // AKSPlayerController*
		constexpr auto CachedTeam = 0x4a0; // AKSTeamState*
		constexpr auto CachedHoveredActor = 0x4d0; // TWeakObjectPtr<AActor>
		constexpr auto MinimapDisplayWidget = 0x4e0; // TSoftClassPtr<UObject>
		constexpr auto FullmapDisplayWidget = 0x508; // TSoftClassPtr<UObject>
		constexpr auto OverlayDisplayWidget = 0x530; // TSoftClassPtr<UObject>
	}

	namespace n_UWBP_CustomKickButton_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto Hovered = 0x240; // UWidgetAnimation*
		constexpr auto KickButton = 0x248; // UButton*
		constexpr auto OnClicked = 0x250; // FMulticastInlineDelegate
	}

	namespace n_UKSBTTask_SelectBlackboardTarget {
		constexpr auto BlackboardKey = 0x70; // FBlackboardKeySelector
		constexpr auto SensesToUse = 0x98; // TArray<UAISense*>
		constexpr auto PerceptionFilter = 0xa8; // FKSPerceptionFilter
		constexpr auto SelectClosestTarget = 0x298; // bool
		constexpr auto SelectFurthestTarget = 0x299; // bool
		constexpr auto SelectRandomTarget = 0x29a; // bool
	}

	namespace n_UKSBTTask_MoveToBlackboard {
		constexpr auto SpeedMultiplier = 0xb0; // float
		constexpr auto bSprint = 0xb4; // bool
		constexpr auto MoveAction = 0xb8; // UKSBTAction*
		constexpr auto SprintAction = 0xc0; // UKSBTAction*
		constexpr auto AcceptableRadiusOverrideKey = 0xc8; // FBlackboardKeySelector
	}

	namespace n_ULevelStreamingDynamic {
		constexpr auto bInitiallyLoaded = 0x150; // char : 1
		constexpr auto bInitiallyVisible = 0x150; // char : 1
	}

	namespace n_UPUMG_UISoundTheme {
		constexpr auto SoundEventBindings = 0x28; // TMap<FName, FPUMG_SoundThemeEventMapping>
	}

	namespace n_UAkEventCallbackInfo {
		constexpr auto PlayingID = 0x30; // int32_t
		constexpr auto EventID = 0x34; // int32_t
	}

	namespace n_UPanelSlot {
		constexpr auto Parent = 0x28; // UPanelWidget*
		constexpr auto Content = 0x30; // UWidget*
	}

	namespace n_UKSBTD_CompareGrenadeFuseTimeLeft {
		constexpr auto Time = 0x68; // float
		constexpr auto ArithmeticOperation = 0x6c; // EArithmeticKeyOperation
	}

	namespace n_UProxyLODMeshSimplificationSettings {
		constexpr auto ProxyLODMeshReductionModuleName = 0x38; // FName
	}

	namespace n_UHierarchicalInstancedStaticMeshComponent {
		constexpr auto SortedInstances = 0x5a0; // TArray<int32_t>
		constexpr auto NumBuiltInstances = 0x5b0; // int32_t
		constexpr auto BuiltInstanceBounds = 0x5b8; // FBox
		constexpr auto UnbuiltInstanceBounds = 0x5d4; // FBox
		constexpr auto UnbuiltInstanceBoundsList = 0x5f0; // TArray<FBox>
		constexpr auto bEnableDensityScaling = 0x600; // char : 1
		constexpr auto OcclusionLayerNumNodes = 0x608; // int32_t
		constexpr auto CacheMeshExtendedBounds = 0x60c; // FBoxSphereBounds
		constexpr auto bDisableCollision = 0x628; // bool
		constexpr auto InstanceCountToRender = 0x62c; // int32_t
	}

	namespace n_UGameEngine {
		constexpr auto MaxDeltaTime = 0xe58; // float
		constexpr auto ServerFlushLogInterval = 0xe5c; // float
		constexpr auto GameInstance = 0xe60; // UGameInstance*
	}

	namespace n_UDistributionFloat {
		constexpr auto bCanBeBaked = 0x30; // char : 1
		constexpr auto bBakedDataSuccesfully = 0x30; // char : 1
	}

	namespace n_UInterpTrackLinearColorBase {
		constexpr auto LinearColorTrack = 0x70; // FInterpCurveLinearColor
		constexpr auto CurveTension = 0x88; // float
	}

	namespace n_USoundNodeGroupControl {
		constexpr auto GroupSizes = 0x48; // TArray<int32_t>
	}

	namespace n_USpinBox {
		constexpr auto Value = 0x110; // float
		constexpr auto ValueDelegate = 0x114; // FDelegate
		constexpr auto WidgetStyle = 0x128; // FSpinBoxStyle
		constexpr auto Style = 0x410; // USlateWidgetStyleAsset*
		constexpr auto MinFractionalDigits = 0x418; // int32_t
		constexpr auto MaxFractionalDigits = 0x41c; // int32_t
		constexpr auto bAlwaysUsesDeltaSnap = 0x420; // bool
		constexpr auto Delta = 0x424; // float
		constexpr auto SliderExponent = 0x428; // float
		constexpr auto Font = 0x430; // FSlateFontInfo
		constexpr auto Justification = 0x480; // ETextJustify
		constexpr auto MinDesiredWidth = 0x484; // float
		constexpr auto ClearKeyboardFocusOnCommit = 0x488; // bool
		constexpr auto SelectAllTextOnCommit = 0x489; // bool
		constexpr auto ForegroundColor = 0x490; // FSlateColor
		constexpr auto OnValueChanged = 0x4b8; // FMulticastInlineDelegate
		constexpr auto OnValueCommitted = 0x4c8; // FMulticastInlineDelegate
		constexpr auto OnBeginSliderMovement = 0x4d8; // FMulticastInlineDelegate
		constexpr auto OnEndSliderMovement = 0x4e8; // FMulticastInlineDelegate
		constexpr auto bOverride_MinValue = 0x4f8; // char : 1
		constexpr auto bOverride_MaxValue = 0x4f8; // char : 1
		constexpr auto bOverride_MinSliderValue = 0x4f8; // char : 1
		constexpr auto bOverride_MaxSliderValue = 0x4f8; // char : 1
		constexpr auto MinValue = 0x4fc; // float
		constexpr auto MaxValue = 0x500; // float
		constexpr auto MinSliderValue = 0x504; // float
		constexpr auto MaxSliderValue = 0x508; // float
	}

	namespace n_ACableActor {
		constexpr auto CableComponent = 0x220; // UCableComponent*
	}

	namespace n_UKSActivityRewardCondition_WeaponTagEquippedByVictim {
		constexpr auto MatchingWeaponTags = 0x30; // TArray<FGameplayTag>
	}

	namespace n_ANiagaraActor {
		constexpr auto NiagaraComponent = 0x220; // UNiagaraComponent*
		constexpr auto bDestroyOnSystemFinish = 0x228; // char : 1
	}

	namespace n_UPGame_PositionHistoryComponent {
		constexpr auto PositionRecordMode = 0xb0; // EPositionHistoryRecordMode
		constexpr auto ExtrapolateFromLastEntry = 0xb1; // bool
		constexpr auto bAutoPopulateOnBeginPlay = 0xb2; // bool
		constexpr auto TrackedPrimitives = 0xc8; // TArray<FPrimitivePriority>
	}

	namespace n_UWBP_StandardButton_02_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto OnClick = 0x528; // UWidgetAnimation*
		constexpr auto Highlight = 0x530; // UWidgetAnimation*
		constexpr auto BackgroundImage = 0x538; // UImage*
		constexpr auto ButtonText = 0x540; // UTextBlock*
		constexpr auto Click = 0x548; // UImage*
		constexpr auto Image_1 = 0x550; // UImage*
		constexpr auto LoadoutButton = 0x558; // UButton*
		constexpr auto TextSizeWrapper = 0x560; // USizeBox*
		constexpr auto OnClicked = 0x568; // FMulticastInlineDelegate
		constexpr auto OnHovered = 0x578; // FMulticastInlineDelegate
		constexpr auto OnUnhovered = 0x588; // FMulticastInlineDelegate
		constexpr auto ClickStandardButton_02SFX = 0x598; // UAkAudioEvent*
		constexpr auto DefaultButtonText = 0x5a0; // FText
		constexpr auto DefaultWidth = 0x5b8; // float
		constexpr auto HoverStandardButton_02SFX = 0x5c0; // UAkAudioEvent*
		constexpr auto ButtonFontStyle = 0x5c8; // E_ButtonFontStyle
	}

	namespace n_ABP_LobbyMode_C {
		constexpr auto DefaultSceneRoot = 0x3c8; // USceneComponent*
	}

	namespace n_UKSAIObjectivePriorityComponent {
		constexpr auto ObjectivePriorityTable = 0xb0; // UDataTable*
		constexpr auto ObjectivePriorities = 0xb8; // TMap<FName, FKSBTObjectivePriorityTableRow>
		constexpr auto SortedPriorities = 0x108; // TArray<FKSBTObjectivePriorityTableRow>
	}

	namespace n_UAIDataProvider_Random {
		constexpr auto Min = 0x40; // float
		constexpr auto Max = 0x44; // float
		constexpr auto bInteger = 0x48; // char : 1
	}

	namespace n_AKSVehicle_Remote {
		constexpr auto OwningCharacter = 0x620; // AKSCharacter*
		constexpr auto JumpVector = 0x628; // FVector
		constexpr auto JumpGroundTraceVector = 0x634; // FVector
		constexpr auto JumpCooldown = 0x640; // float
		constexpr auto TotalBatteryDuration = 0x650; // float
		constexpr auto UpdateReplicatedBatteryTimerPeriod = 0x654; // float
		constexpr auto ReplicatedBatteryTimer = 0x668; // FPGame_ReplicatedTimer
		constexpr auto RevealHoldDuration = 0x6a0; // float
		constexpr auto RevealConeAngle = 0x6a4; // float
		constexpr auto RevealMaxDistance = 0x6a8; // float
		constexpr auto RevealEffectDuration = 0x6ac; // float
	}

	namespace n_UMovieSceneSubTrack {
		constexpr auto Sections = 0x58; // TArray<UMovieSceneSection*>
	}

	namespace n_AKSBuildPreview {
		constexpr auto ValidBuildMaterial = 0x220; // UMaterialInterface*
		constexpr auto InvalidBuildMaterial = 0x228; // UMaterialInterface*
		constexpr auto Box = 0x230; // UBoxComponent*
		constexpr auto MeshComponent = 0x238; // USkinnableMergedMeshComponent*
		constexpr auto SkinObject = 0x240; // UMultiSkinObject*
		constexpr auto ApparelObjectsToListenTo = 0x248; // TArray<FName>
		constexpr auto FullKeywordList = 0x258; // TArray<FName>
	}

	namespace n_UWBP_Player_Card_Social_Entry_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto Header = 0x528; // UWBP_Social_Accordian_Header_C*
		constexpr auto MainSwitcher = 0x530; // UWidgetSwitcher*
		constexpr auto PlayerCard = 0x538; // UWBP_player_card_module_C*
		constexpr auto PlayerCardContainer = 0x540; // USizeBox*
		constexpr auto OnClicked = 0x548; // FMulticastInlineDelegate
		constexpr auto CurrentData = 0x558; // UKSDataSocialPlayer*
	}

	namespace n_UWBP_EventMissionItem_C {
		constexpr auto UberGraphFrame = 0x4c0; // FPointerToUberGraphFrame
		constexpr auto animHover = 0x4c8; // UWidgetAnimation*
		constexpr auto animClick = 0x4d0; // UWidgetAnimation*
		constexpr auto animSelected = 0x4d8; // UWidgetAnimation*
		constexpr auto ActiveMission_Bar = 0x4e0; // UImage*
		constexpr auto Btn_BkgPress = 0x4e8; // UImage*
		constexpr auto Btn_Fill = 0x4f0; // UImage*
		constexpr auto Btn_HoverFill = 0x4f8; // UImage*
		constexpr auto Btn_HoverStroke = 0x500; // UImage*
		constexpr auto Btn_Stroke = 0x508; // UImage*
		constexpr auto ButtonBackground = 0x510; // UOverlay*
		constexpr auto Completed = 0x518; // UImage*
		constexpr auto HitTarget = 0x520; // UButton*
		constexpr auto IconSwitcher = 0x528; // UWidgetSwitcher*
		constexpr auto IconSwitcherSB = 0x530; // USizeBox*
		constexpr auto Image_110 = 0x538; // UImage*
		constexpr auto Locked = 0x540; // USizeBox*
		constexpr auto MissionProgress = 0x548; // UWBP_ProgressEarnedBar_C*
		constexpr auto Star_Active = 0x550; // UImage*
		constexpr auto Star_Inactive = 0x558; // UImage*
		constexpr auto Text_MissionObjective = 0x560; // URichTextBlock*
		constexpr auto Text_RewardAmount = 0x568; // UTextBlock*
		constexpr auto CurrentVisualState = 0x570; // EChallengeEntry_Card_State
		constexpr auto IsPremium = 0x571; // bool
		constexpr auto IsActive = 0x572; // bool
		constexpr auto OnButtonFocused = 0x578; // FMulticastInlineDelegate
		constexpr auto ActivityInstance = 0x588; // UKSActivityInstance*
		constexpr auto MissionItemHoverSound = 0x590; // UAkAudioEvent*
		constexpr auto MissionItemClickSound = 0x598; // UAkAudioEvent*
	}

	namespace n_AWindDirectionalSource {
		constexpr auto Component = 0x220; // UWindDirectionalSourceComponent*
	}

	namespace n_UKSBTTask_GetNavigationInteractTarget {
		constexpr auto InteractTarget = 0x70; // FBlackboardKeySelector
	}

	namespace n_UKSAIActorCollection_Extraction {
		constexpr auto DefensePoints = 0xe0; // TArray<AKSDefensePoint*>
	}

	namespace n_AARSharedWorldGameState {
		constexpr auto PreviewImageData = 0x290; // TArray<char>
		constexpr auto ARWorldData = 0x2a0; // TArray<char>
		constexpr auto PreviewImageBytesTotal = 0x2b0; // int32_t
		constexpr auto ARWorldBytesTotal = 0x2b4; // int32_t
		constexpr auto PreviewImageBytesDelivered = 0x2b8; // int32_t
		constexpr auto ARWorldBytesDelivered = 0x2bc; // int32_t
	}

	namespace n_UMovieSceneAudioTrack {
		constexpr auto AudioSections = 0x58; // TArray<UMovieSceneSection*>
	}

	namespace n_APartyBeaconHost {
		constexpr auto State = 0x248; // UPartyBeaconState*
		constexpr auto bLogoutOnSessionTimeout = 0x2b0; // bool
		constexpr auto SessionTimeoutSecs = 0x2b4; // float
		constexpr auto TravelSessionTimeoutSecs = 0x2b8; // float
	}

	namespace n_UKSWeaponMasteryRewardsScreen {
		constexpr auto CurrentDisplayedMasteryType = 0x520; // EKSWeaponMasteryType
		constexpr auto CurrentProgressActivityInstance = 0x528; // UKSActivityInstance*
		constexpr auto PopulatedWeaponAsset = 0x530; // UKSWeaponAsset*
		constexpr auto PopulatedWeaponCategory = 0x538; // UKSWeaponCategoryAsset*
	}

	namespace n_UKSActivityRewardCondition_Operator_Or {
		constexpr auto SubConditions = 0x30; // TArray<UKSActivityRewardCondition*>
	}

	namespace n_UWBP_JobGeneralButton_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto Hover = 0x528; // UWidgetAnimation*
		constexpr auto background = 0x530; // UImage*
		constexpr auto BackgroundDecro = 0x538; // UImage*
		constexpr auto FavoriteHitBox = 0x540; // UButton*
		constexpr auto FreeRotationIcon = 0x548; // UImage*
		constexpr auto HighlightFrame = 0x550; // UImage*
		constexpr auto HitTarget = 0x558; // UButton*
		constexpr auto ItemIcon = 0x560; // UWBP_AsyncIcon_C*
		constexpr auto JobIcon = 0x568; // UWBP_AsyncIcon_C*
		constexpr auto LockIcon = 0x570; // UImage*
		constexpr auto NameplateBG = 0x578; // UImage*
		constexpr auto NameplateDecroBar = 0x580; // UImage*
		constexpr auto NewRogueCalloutSwitcher = 0x588; // UWidgetSwitcher*
		constexpr auto NewTagWrapper = 0x590; // UScaleBox*
		constexpr auto RogueMasteryBadgeWrapper = 0x598; // UScaleBox*
		constexpr auto RogueName = 0x5a0; // UTextBlock*
		constexpr auto Starred = 0x5a8; // UImage*
		constexpr auto Unstarred = 0x5b0; // UImage*
		constexpr auto WBP_MercMasteryIcon = 0x5b8; // UWBP_RogueMasteryIcon_C*
		constexpr auto WBP_NewTag = 0x5c0; // UWBP_NewTag_C*
		constexpr auto OnClicked = 0x5c8; // FMulticastInlineDelegate
		constexpr auto OnHovered = 0x5d8; // FMulticastInlineDelegate
		constexpr auto OnUnhovered = 0x5e8; // FMulticastInlineDelegate
		constexpr auto JobItem = 0x5f8; // UKSJobItem*
		constexpr auto MainButtonHovered = 0x600; // bool
		constexpr auto SubButtonHovered = 0x601; // bool
		constexpr auto NeedsUnhovering = 0x602; // bool
		constexpr auto LockedPortraitTint = 0x608; // FSlateColor
		constexpr auto OnFavorited = 0x630; // FMulticastInlineDelegate
		constexpr auto ClickJobGenButton = 0x640; // UAkAudioEvent*
		constexpr auto HoverJobGenButton = 0x648; // UAkAudioEvent*
		constexpr auto ClickJobGenFavoriteButton = 0x650; // UAkAudioEvent*
		constexpr auto HoverJobGenFavoriteButton = 0x658; // UAkAudioEvent*
		constexpr auto SubButtonHovered_1 = 0x660; // bool
	}

	namespace n_UKSGamepadLookSpeedManager {
		constexpr auto PlayerController = 0x28; // AKSPlayerController*
	}

	namespace n_UCloudStorageBase {
		constexpr auto LocalCloudFiles = 0x38; // TArray<FString>
		constexpr auto bSuppressDelegateCalls = 0x48; // char : 1
	}

	namespace n_UIntSerialization {
		constexpr auto UnsignedInt16Variable = 0x28; // uint16_t
		constexpr auto UnsignedInt32Variable = 0x2c; // uint32_t
		constexpr auto UnsignedInt64Variable = 0x30; // uint64_t
		constexpr auto SignedInt8Variable = 0x38; // int8_t
		constexpr auto SignedInt16Variable = 0x3a; // int16_t
		constexpr auto SignedInt64Variable = 0x40; // int64_t
		constexpr auto UnsignedInt8Variable = 0x48; // char
		constexpr auto SignedInt32Variable = 0x4c; // int32_t
	}

	namespace n_UCompositeDataTable {
		constexpr auto ParentTables = 0xc8; // TArray<UDataTable*>
		constexpr auto OldParentTables = 0xd8; // TArray<UDataTable*>
	}

	namespace n_UMovieSceneMediaSection {
		constexpr auto MediaSource = 0xe0; // UMediaSource*
		constexpr auto bLooping = 0xe8; // bool
		constexpr auto StartFrameOffset = 0xec; // FFrameNumber
		constexpr auto MediaTexture = 0xf0; // UMediaTexture*
		constexpr auto MediaSoundComponent = 0xf8; // UMediaSoundComponent*
		constexpr auto bUseExternalMediaPlayer = 0x100; // bool
		constexpr auto ExternalMediaPlayer = 0x108; // UMediaPlayer*
	}

	namespace n_AKSDestructibleBase {
		constexpr auto bRenderTrueCollisionUntilDestruction = 0x228; // bool
		constexpr auto SceneRoot = 0x230; // USceneComponent*
		constexpr auto VisualMesh = 0x238; // UDestructibleComponent*
		constexpr auto TrueCollision = 0x240; // UStaticMeshComponent*
		constexpr auto SpeedOverlap = 0x248; // UBoxComponent*
		constexpr auto bAllowDestructibleMeshSimulation = 0x250; // bool
		constexpr auto bAllowPlayerToWalkOnSurface = 0x251; // bool
		constexpr auto bAllowDestructionAudio = 0x252; // bool
		constexpr auto DefaultDestructionEvent = 0x258; // UAkAudioEvent*
		constexpr auto bSpawnBreakParticleAtActorLocation = 0x260; // bool
		constexpr auto BreakParticles = 0x268; // UParticleSystem*
		constexpr auto ImpactParticles = 0x270; // UParticleSystem*
		constexpr auto FakeHitDecalParticle = 0x278; // UParticleSystem*
		constexpr auto CharacterSpeedOverlapCameraShake = 0x280; // UCameraShake*
		constexpr auto OnDestructibleDestroyed = 0x288; // FMulticastInlineDelegate
		constexpr auto MaxHealth = 0x298; // float
		constexpr auto Health = 0x29c; // float
		constexpr auto LocalHealth = 0x2a0; // float
		constexpr auto bResetOnRoundChange = 0x2a4; // bool
		constexpr auto bAllowsWeaponPenetration = 0x2a5; // bool
		constexpr auto bCanBreakWithSpeed = 0x2a6; // bool
		constexpr auto bAllProjectilesInstantBreak = 0x2a7; // bool
		constexpr auto SpeedBreakThreshold = 0x2a8; // float
		constexpr auto bTransparentDestructible = 0x2ac; // bool
		constexpr auto DamageTypeMultipliers = 0x2b0; // TMap<EDamageCategory, float>
		constexpr auto BreakingDamage = 0x300; // float
		constexpr auto BreakingImpulse = 0x304; // float
		constexpr auto bUseRadialDestruction = 0x308; // bool
		constexpr auto BreakingRadius = 0x30c; // float
		constexpr auto ImpactImpulseOffset = 0x310; // float
		constexpr auto bIgnoreCharacterVerticalSpeed = 0x314; // bool
		constexpr auto BadDestroyCheckTime = 0x318; // float
		constexpr auto EventlessDestroyWaitTime = 0x31c; // float
		constexpr auto MeshDestroyed = 0x320; // bool
		constexpr auto PhysicalMaterialOverride = 0x328; // UPhysicalMaterial*
		constexpr auto MeshAsset = 0x330; // UDestructibleMesh*
		constexpr auto LastHitLocation = 0x338; // FVector
		constexpr auto LastHitDirection = 0x344; // FVector
		constexpr auto LastHitNormal = 0x350; // FVector
		constexpr auto FakeHitDecals = 0x360; // TArray<UParticleSystemComponent*>
		constexpr auto StimuliSourceComponent = 0x380; // UKSItemStimuliSourceComponent*
	}

	namespace n_UWheeledVehicleMovementComponent4W {
		constexpr auto EngineSetup = 0x290; // FVehicleEngineData
		constexpr auto DifferentialSetup = 0x330; // FVehicleDifferential4WData
		constexpr auto AckermannAccuracy = 0x34c; // float
		constexpr auto TransmissionSetup = 0x350; // FVehicleTransmissionData
		constexpr auto SteeringCurve = 0x380; // FRuntimeFloatCurve
	}

	namespace n_UMaterialExpressionFmod {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_UDecalPoolComponent {
		constexpr auto PooledDecalComponentClass = 0xd8; // UPoolableDecalComponent*
		constexpr auto UnusedComponentsArray = 0xe0; // TArray<UPoolableDecalComponent*>
		constexpr auto UsedComponentsSet = 0xf0; // TSet<UPoolableDecalComponent*>
		constexpr auto PeekedDecalComponent = 0x140; // UPoolableDecalComponent*
	}

	namespace n_UWBP_Guided_Tutorial_Card_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto DescriptionText = 0x240; // URichTextBlock*
		constexpr auto Image_111 = 0x248; // UImage*
		constexpr auto Image_113 = 0x250; // UImage*
		constexpr auto Image_114 = 0x258; // UImage*
		constexpr auto Image_115 = 0x260; // UImage*
		constexpr auto WBP_AsyncIcon = 0x268; // UWBP_AsyncIcon_C*
		constexpr auto WBP_Header2 = 0x270; // UWBP_Header2_C*
	}

	namespace n_USkelPropManagerComponent {
		constexpr auto ActiveNamelessProps = 0x188; // TArray<FActiveSkelProp>
		constexpr auto ActiveProps = 0x198; // TMap<FPropIdentifier, FActiveSkelProp>
		constexpr auto bAllowSpawnerPooling = 0x1e8; // bool
		constexpr auto SpawnerPoolingLifespan = 0x1ec; // float
	}

	namespace n_UKSBTTask_SetBoolOnBlackboard {
		constexpr auto BoolValue = 0x98; // bool
	}

	namespace n_UMaterialExpressionRayTracingQualitySwitch {
		constexpr auto Normal = 0x40; // FExpressionInput
		constexpr auto RayTraced = 0x54; // FExpressionInput
	}

	namespace n_UMaterialExpressionSine {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Period = 0x54; // float
	}

	namespace n_UParticleModuleRotationRate {
		constexpr auto StartRotationRate = 0x30; // FRawDistributionFloat
	}

	namespace n_ASceneCapture {
		constexpr auto MeshComp = 0x220; // UStaticMeshComponent*
		constexpr auto SceneComponent = 0x228; // USceneComponent*
	}

	namespace n_UKSActivityRewardCondition_Elimination {
		constexpr auto IsElimination = 0x30; // bool
	}

	namespace n_UButtonSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_AKSBuild {
		constexpr auto PointDamageMultiplier = 0x290; // float
		constexpr auto RadialDamageMultiplier = 0x294; // float
		constexpr auto MaxHealth = 0x298; // float
		constexpr auto Health = 0x29c; // float
		constexpr auto SelfDestructDelay = 0x2a0; // float
		constexpr auto KillDestructionDelay = 0x2a4; // float
		constexpr auto Box = 0x2b8; // UBoxComponent*
		constexpr auto MeshComponent = 0x2c0; // USkinnableMergedMeshComponent*
		constexpr auto SkinObject = 0x2c8; // UMultiSkinObject*
		constexpr auto ApparelObjectsToListenTo = 0x2d0; // TArray<FName>
		constexpr auto FullKeywordList = 0x2e0; // TArray<FName>
		constexpr auto KSNavModifierComponent = 0x2f0; // UKSNavModifierComponent*
		constexpr auto OnBuildComponentDestroyedDel = 0x2f8; // FMulticastInlineDelegate
		constexpr auto InteractionBlockerManager = 0x308; // UKSInteractionBlockerManager*
		constexpr auto InteractableComponent = 0x310; // UKSInteractableComponent*
		constexpr auto Interactors = 0x318; // TArray<AKSCharacter*>
		constexpr auto OnBuildReclaim = 0x328; // FMulticastInlineDelegate
		constexpr auto bCanReclaim = 0x338; // bool
		constexpr auto RelativeInteractionPoint = 0x33c; // FVector
		constexpr auto ReclaimTime = 0x348; // float
		constexpr auto bRestoreWeaponOnReclaim = 0x34c; // bool
		constexpr auto WeaponToRestore = 0x350; // UKSWeaponAsset_Build*
		constexpr auto ReclaimItemName = 0x358; // FText
		constexpr auto ReclaimInteractionType = 0x370; // UKSInteractionType*
		constexpr auto StimuliSourceComponent = 0x378; // UKSItemStimuliSourceComponent*
		constexpr auto OriginalOwnerId = 0x388; // int32_t
		constexpr auto ItemTags = 0x390; // TArray<FGameplayTag>
	}

	namespace n_UMaterialExpressionLandscapeLayerBlend {
		constexpr auto Layers = 0x40; // TArray<FLayerBlendInput>
		constexpr auto ExpressionGUID = 0x50; // FGuid
	}

	namespace n_AKSCombatLogVisualizer {
		constexpr auto Characters = 0x230; // TMap<FString, FCharacterArray>
	}

	namespace n_AChaosSolverActor {
		constexpr auto TimeStepMultiplier = 0x220; // float
		constexpr auto CollisionIterations = 0x224; // int32_t
		constexpr auto PushOutIterations = 0x228; // int32_t
		constexpr auto PushOutPairIterations = 0x22c; // int32_t
		constexpr auto ClusterConnectionFactor = 0x230; // float
		constexpr auto ClusterUnionConnectionType = 0x234; // EClusterConnectionTypeEnum
		constexpr auto DoGenerateCollisionData = 0x235; // bool
		constexpr auto CollisionFilterSettings = 0x238; // FSolverCollisionFilterSettings
		constexpr auto DoGenerateBreakingData = 0x248; // bool
		constexpr auto BreakingFilterSettings = 0x24c; // FSolverBreakingFilterSettings
		constexpr auto DoGenerateTrailingData = 0x25c; // bool
		constexpr auto TrailingFilterSettings = 0x260; // FSolverTrailingFilterSettings
		constexpr auto bHasFloor = 0x270; // bool
		constexpr auto FloorHeight = 0x274; // float
		constexpr auto MassScale = 0x278; // float
		constexpr auto bGenerateContactGraph = 0x27c; // bool
		constexpr auto ChaosDebugSubstepControl = 0x27d; // FChaosDebugSubstepControl
		constexpr auto SpriteComponent = 0x280; // UBillboardComponent*
		constexpr auto GameplayEventDispatcherComponent = 0x2a0; // UChaosGameplayEventDispatcher*
	}

	namespace n_UMaterialExpressionStaticSwitch {
		constexpr auto DefaultValue = 0x40; // char : 1
		constexpr auto A = 0x44; // FExpressionInput
		constexpr auto B = 0x58; // FExpressionInput
		constexpr auto Value = 0x6c; // FExpressionInput
	}

	namespace n_UCrowdFollowingComponent {
		constexpr auto CharacterMovement = 0x260; // UCharacterMovementComponent*
		constexpr auto CrowdAgentMoveDirection = 0x268; // FVector
	}

	namespace n_USettingsInfo_GlobalQuality_C {
		constexpr auto UberGraphFrame = 0x118; // FPointerToUberGraphFrame
		constexpr auto QualityNames = 0x120; // TArray<FName>
	}

	namespace n_UMovieScene3DTransformSection {
		constexpr auto TransformMask = 0xe0; // FMovieSceneTransformMask
		constexpr auto Translation = 0xe8; // FMovieSceneFloatChannel [0x3]
		constexpr auto Rotation = 0x2c8; // FMovieSceneFloatChannel [0x3]
		constexpr auto Scale = 0x4a8; // FMovieSceneFloatChannel [0x3]
		constexpr auto ManualWeight = 0x688; // FMovieSceneFloatChannel
		constexpr auto bUseQuaternionInterpolation = 0x72c; // bool
	}

	namespace n_UPhysicalAnimationComponent {
		constexpr auto StrengthMultiplyer = 0xb0; // float
		constexpr auto SkeletalMeshComponent = 0xb8; // USkeletalMeshComponent*
	}

	namespace n_UWBP_VoiceActivityIcon_C {
		constexpr auto ActivityIndicator = 0x520; // UImage*
		constexpr auto Mic = 0x528; // UImage*
		constexpr auto MuteSymbol = 0x530; // UImage*
	}

	namespace n_UMovieSceneEnumTrack {
		constexpr auto Enum = 0x88; // UEnum*
	}

	namespace n_UBlueprint {
		constexpr auto ParentClass = 0x50; // UObject*
		constexpr auto BlueprintType = 0x58; // EBlueprintType
		constexpr auto bRecompileOnLoad = 0x59; // char : 1
		constexpr auto bHasBeenRegenerated = 0x59; // char : 1
		constexpr auto bIsRegeneratingOnLoad = 0x59; // char : 1
		constexpr auto BlueprintSystemVersion = 0x5c; // int32_t
		constexpr auto SimpleConstructionScript = 0x60; // USimpleConstructionScript*
		constexpr auto ComponentTemplates = 0x68; // TArray<UActorComponent*>
		constexpr auto Timelines = 0x78; // TArray<UTimelineTemplate*>
		constexpr auto ComponentClassOverrides = 0x88; // TArray<FBPComponentClassOverride>
		constexpr auto InheritableComponentHandler = 0x98; // UInheritableComponentHandler*
	}

	namespace n_UNiagaraParameterCollection {
		constexpr auto Namespace = 0x28; // FName
		constexpr auto Parameters = 0x30; // TArray<FNiagaraVariable>
		constexpr auto DefaultInstance = 0x40; // UNiagaraParameterCollectionInstance*
		constexpr auto CompileId = 0x48; // FGuid
	}

	namespace n_ULightmassPortalComponent {
		constexpr auto PreviewBox = 0x208; // UBoxComponent*
	}

	namespace n_UWBP_TopNavButton_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto NewIndicator = 0x528; // UCanvasPanel*
		constexpr auto WBP_CallToAction = 0x530; // UWBP_CallToAction_C*
		constexpr auto WBP_main_nav_tab = 0x538; // UWBP_navtab_C*
		constexpr auto Message = 0x540; // FText
		constexpr auto OnClicked = 0x558; // FMulticastInlineDelegate
		constexpr auto OnHovered = 0x568; // FMulticastInlineDelegate
		constexpr auto OnUnhovered = 0x578; // FMulticastInlineDelegate
		constexpr auto TargetViewState = 0x588; // FName
		constexpr auto RelatedViewStates = 0x590; // TArray<FName>
		constexpr auto OnNonRouteClicked = 0x5a0; // FMulticastInlineDelegate
		constexpr auto UsesBattlePassColoring = 0x5b0; // bool
		constexpr auto bIsFirstTab = 0x5b1; // bool
		constexpr auto BattlePassCTAName = 0x5b4; // FName
		constexpr auto UsesHolidayColoring = 0x5bc; // bool
	}

	namespace n_USingleClickInputBehavior {
		constexpr auto HitTestOnRelease = 0xc0; // bool
	}

	namespace n_AOnlineBeaconClient {
		constexpr auto BeaconOwner = 0x250; // AOnlineBeaconHostObject*
		constexpr auto BeaconConnection = 0x258; // UNetConnection*
		constexpr auto ConnectionState = 0x260; // EBeaconConnectionState
	}

	namespace n_ULevelVariantSets {
		constexpr auto DirectorClass = 0x28; // UObject*
		constexpr auto VariantSets = 0x30; // TArray<UVariantSet*>
	}

	namespace n_UKSSmoothingComponent {
		constexpr auto bSmoothTranslation = 0x208; // bool
		constexpr auto bSmoothRotation = 0x209; // bool
		constexpr auto TranslationOffset = 0x20c; // FVector
		constexpr auto RotationOffset = 0x220; // FQuat
		constexpr auto CharacterOwner = 0x230; // AKSCharacter*
	}

	namespace n_UKSWeaponAsset_Melee {
		constexpr auto MeleeSphereOffset = 0x988; // FVector
		constexpr auto MeleeSphereRadius = 0x994; // float
		constexpr auto MeleeSwingActiveTimeSeconds = 0x998; // float
		constexpr auto OverlapObjectTypes = 0x9a0; // TArray<EObjectTypeQuery>
		constexpr auto TraceChannel = 0x9b0; // ETraceTypeQuery
		constexpr auto MaxLungeDistance = 0x9b4; // float
		constexpr auto MaxLungeDistanceCorrectionMultiplier = 0x9b8; // float
		constexpr auto MaxLungeDuration = 0x9bc; // float
		constexpr auto LungeConeHalfAngle = 0x9c0; // float
		constexpr auto LungeConeOriginDistanceOffset = 0x9c4; // float
	}

	namespace n_UKSWeaponCategoryAsset {
		constexpr auto CategoryTag = 0x98; // FGameplayTag
		constexpr auto WrapTag = 0xa0; // FGameplayTag
		constexpr auto bExcludeUpgrades = 0xa8; // bool
		constexpr auto bRequireItemId = 0xa9; // bool
		constexpr auto DisplayName = 0xb0; // FText
		constexpr auto DisplayNameSingular = 0xc8; // FText
		constexpr auto DisplayNameCategory = 0xe0; // FText
		constexpr auto SoftSymbolIcon = 0xf8; // TSoftObjectPtr<UTexture2D>
		constexpr auto SoftFlatSymbolIcon = 0x120; // TSoftObjectPtr<UTexture2D>
		constexpr auto SoftMasteryIcon = 0x148; // TSoftObjectPtr<UTexture2D>
		constexpr auto SoftVerticalSplash = 0x170; // TSoftObjectPtr<UTexture2D>
		constexpr auto SoftHorizontalSplash = 0x198; // TSoftObjectPtr<UTexture2D>
		constexpr auto ShowsMasteryUI = 0x1c0; // bool
		constexpr auto ShowsWeaponUnlockUI = 0x1c1; // bool
		constexpr auto ShowsRelatedJobsUI = 0x1c2; // bool
		constexpr auto DefaultPreviewWeapon = 0x1d8; // TSoftObjectPtr<UKSWeaponAsset>
	}

	namespace n_UKSSortableGridPanel {
		constexpr auto Orientation = 0x158; // EOrientation
		constexpr auto OnSortCompareChildrenEvent = 0x15c; // FDelegate
	}

	namespace n_UChaosClothSharedSimConfig {
		constexpr auto IterationCount = 0x28; // int32_t
		constexpr auto SubdivisionCount = 0x2c; // int32_t
		constexpr auto SelfCollisionThickness = 0x30; // float
		constexpr auto CollisionThickness = 0x34; // float
		constexpr auto bUseDampingOverride = 0x38; // bool
		constexpr auto Damping = 0x3c; // float
		constexpr auto bUseGravityOverride = 0x40; // bool
		constexpr auto GravityScale = 0x44; // float
		constexpr auto Gravity = 0x48; // FVector
		constexpr auto bUseLocalSpaceSimulation = 0x54; // bool
		constexpr auto bUseXPBDConstraints = 0x55; // bool
	}

	namespace n_UKSActivityRequirement_AiPvp {
		constexpr auto RequireEnabled = 0x30; // bool
	}

	namespace n_AWaypointBeaconLarge_C {
		constexpr auto UberGraphFrame = 0x2e0; // FPointerToUberGraphFrame
		constexpr auto ParticleSystem = 0x2e8; // UParticleSystemComponent*
	}

	namespace n_UKSBTTask_SetBehaviorState {
		constexpr auto BehaviorState = 0x70; // ECharacterBehaviorState
	}

	namespace n_UEditableGameplayTagQueryExpression_AnyTagsMatch {
		constexpr auto Tags = 0x28; // FGameplayTagContainer
	}

	namespace n_UDistributionVectorConstantCurve {
		constexpr auto ConstantCurve = 0x38; // FInterpCurveVector
		constexpr auto bLockAxes = 0x50; // char : 1
		constexpr auto LockedAxes = 0x54; // EDistributionVectorLockFlags
	}

	namespace n_UScaleBoxSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UKSPhaseRuleComponent {
		constexpr auto PhaseCompletedDel = 0xb0; // FMulticastInlineDelegate
		constexpr auto ScoringScalar = 0xd0; // float
		constexpr auto LastInitiatedPhaseTime = 0xd4; // float
		constexpr auto bRejectPhaseTimerExpiredForPostRound = 0xd8; // bool
		constexpr auto bUseInitialSpawnPoints = 0xd9; // bool
		constexpr auto LastPhaseName = 0xdc; // FName
		constexpr auto bPhaseActive = 0xe4; // bool
	}

	namespace n_UWBP_RewardsTrack_C {
		constexpr auto UberGraphFrame = 0x548; // FPointerToUberGraphFrame
		constexpr auto GamepadScrollLeft = 0x550; // UKSAsyncImage*
		constexpr auto GamepadScrollRight = 0x558; // UKSAsyncImage*
		constexpr auto PageLabel = 0x560; // UTextBlock*
		constexpr auto RewardsContainer = 0x568; // UHorizontalBox*
		constexpr auto ScrollLeftButton = 0x570; // UWBP_ButtonArrow_C*
		constexpr auto ScrollLeftIndicator = 0x578; // UHorizontalBox*
		constexpr auto ScrollRightButton = 0x580; // UWBP_ButtonArrow_C*
		constexpr auto ScrollRightIndicator = 0x588; // UHorizontalBox*
		constexpr auto WBP_RewardListEntrySTUB = 0x590; // UWBP_RewardListEntry_C*
		constexpr auto WBP_RewardListEntrySTUB_2 = 0x598; // UWBP_RewardListEntry_C*
		constexpr auto WBP_RewardListEntrySTUB_3 = 0x5a0; // UWBP_RewardListEntry_C*
		constexpr auto WBP_RewardListEntrySTUB_4 = 0x5a8; // UWBP_RewardListEntry_C*
		constexpr auto WBP_RewardListEntrySTUB_5 = 0x5b0; // UWBP_RewardListEntry_C*
		constexpr auto WBP_RewardListEntrySTUB_7 = 0x5b8; // UWBP_RewardListEntry_C*
		constexpr auto WBP_RewardsTrackBar = 0x5c0; // UWBP_RewardsTrackMeter_C*
		constexpr auto SelectedReward = 0x5c8; // UWBP_RewardListEntry_C*
		constexpr auto OnPageNavigated = 0x5d0; // FMulticastInlineDelegate
		constexpr auto StoreItems = 0x5e0; // TArray<UPUMG_StoreItem*>
	}

	namespace n_UAkWindowsInitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettingsWithSampleRate
		constexpr auto CommunicationSettings = 0x90; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xb8; // FAkWindowsAdvancedInitializationSettings
	}

	namespace n_UKSBotJobConfigMap {
		constexpr auto JobConfigs = 0x30; // TMap<TSoftObjectPtr<UKSJobItem>, FKSBotJobConfig>
	}

	namespace n_UWBP_StoreCalloutBanner_C {
		constexpr auto background = 0x238; // UImage*
		constexpr auto Background_Dimmer = 0x240; // UImage*
		constexpr auto EndDecro = 0x248; // UImage*
		constexpr auto GradientImage = 0x250; // UImage*
		constexpr auto Text = 0x258; // UTextBlock*
	}

	namespace n_UMaterialExpressionAbs {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UWBP_StoreButtonLarge_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto CompareHover = 0x528; // UWidgetAnimation*
		constexpr auto ShowCompare = 0x530; // UWidgetAnimation*
		constexpr auto SlideLeftToPrimary = 0x538; // UWidgetAnimation*
		constexpr auto SlideLeftToSecondary = 0x540; // UWidgetAnimation*
		constexpr auto CompareBG = 0x548; // UImage*
		constexpr auto CompareButton = 0x550; // UButton*
		constexpr auto ComparePrompt = 0x558; // UImage*
		constexpr auto PrimaryStoreItem = 0x560; // UWBP_StoreItemInterior_C*
		constexpr auto SecondaryStoreItem = 0x568; // UWBP_StoreItemInterior_C*
		constexpr auto StoreItemRotator = 0x570; // UWBP_StoreItemRotator_C*
		constexpr auto WBP_StorePanelButton = 0x578; // UWBP_StorePanelButton_C*
		constexpr auto MySection = 0x580; // UKSStoreSectionItem*
		constexpr auto CurrentStoreIndex = 0x588; // int32_t
		constexpr auto IsRotating = 0x58c; // bool
		constexpr auto TimeVisible = 0x590; // float
		constexpr auto CanCompare = 0x594; // bool
		constexpr auto MaxTimeVisible = 0x598; // float
		constexpr auto ROTATION_TIMER_INTERVAL = 0x59c; // float
	}

	namespace n_UKSWeaponAttachmentInst_Reactive {
		constexpr auto PersistentStateData = 0x140; // uint16_t
	}

	namespace n_UWBP_InWorld_ReticleComponents_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto InvalidationBox_1 = 0x240; // UInvalidationBox*
		constexpr auto WBP_AbilityDurationBar = 0x248; // UWBP_AbilityDurationBar_C*
		constexpr auto WBP_AmmoWrapper = 0x250; // UWBP_AmmoWrapper_C*
		constexpr auto ModInstances = 0x258; // TArray<UKSModInst_Activated*>
	}

	namespace n_UWBP_WeaponMilestones_C {
		constexpr auto UberGraphFrame = 0x528; // FPointerToUberGraphFrame
		constexpr auto EntryContainer = 0x530; // UUniformGridPanel*
		constexpr auto Milestone01 = 0x538; // UWBP_WeaponMilestoneEntry_C*
		constexpr auto Milestone02 = 0x540; // UWBP_WeaponMilestoneEntry_C*
		constexpr auto Milestone03 = 0x548; // UWBP_WeaponMilestoneEntry_C*
		constexpr auto Milestone04 = 0x550; // UWBP_WeaponMilestoneEntry_C*
	}

	namespace n_UMovieSceneNiagaraTrack {
		constexpr auto Sections = 0x58; // TArray<UMovieSceneSection*>
	}

	namespace n_UWBP_Social_Snapshot_C {
		constexpr auto UberGraphFrame = 0x528; // FPointerToUberGraphFrame
		constexpr auto Click = 0x530; // UWidgetAnimation*
		constexpr auto Hover = 0x538; // UWidgetAnimation*
		constexpr auto Btn_BkgHoverGradient = 0x540; // UImage*
		constexpr auto Btn_BkgPress = 0x548; // UImage*
		constexpr auto Btn_Fill = 0x550; // UImage*
		constexpr auto Btn_HoverStroke = 0x558; // UImage*
		constexpr auto Btn_Stroke = 0x560; // UImage*
		constexpr auto ButtonBackground = 0x568; // UOverlay*
		constexpr auto CTAWrapper = 0x570; // UScaleBox*
		constexpr auto FriendsOnlineIcon = 0x578; // UImage*
		constexpr auto FriendsOnlineText = 0x580; // UTextBlock*
		constexpr auto GamepadPrompt = 0x588; // UWBP_ControllerPrompt_C*
		constexpr auto HitTarget = 0x590; // UButton*
		constexpr auto PartyIcon = 0x598; // UImage*
		constexpr auto PartyList = 0x5a0; // UHorizontalBox*
		constexpr auto PartyText = 0x5a8; // UTextBlock*
		constexpr auto PromptWrapper = 0x5b0; // USizeBox*
		constexpr auto WBP_CallToAction = 0x5b8; // UWBP_CallToAction_C*
		constexpr auto HoverSocialSnapshotSFX = 0x5c0; // UAkAudioEvent*
		constexpr auto ClickSocialSnapshotSFX = 0x5c8; // UAkAudioEvent*
	}

	namespace n_UWBP_PartyModuleCardSlot_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto Addbutton_Fill = 0x528; // UImage*
		constexpr auto AddButton_Hover = 0x530; // UOverlay*
		constexpr auto Addbutton_HoverGradient = 0x538; // UImage*
		constexpr auto Addbutton_Stroke = 0x540; // UImage*
		constexpr auto AddButton_Up = 0x548; // UOverlay*
		constexpr auto AddButtonHover = 0x550; // UImage*
		constexpr auto AddButtonPlus = 0x558; // UImage*
		constexpr auto EmptySlotGroup = 0x560; // UButton*
		constexpr auto Image_355 = 0x568; // UImage*
		constexpr auto PlayBtn_HoverStroke = 0x570; // UImage*
		constexpr auto PlayerCard = 0x578; // UWBP_player_card_module_C*
		constexpr auto SuggestionGroup = 0x580; // UOverlay*
		constexpr auto Switcher = 0x588; // UWidgetSwitcher*
		constexpr auto HoverPartyModuleCardSlotSFX = 0x590; // UAkAudioEvent*
		constexpr auto ClickPartyModuleCardSlotSFX = 0x598; // UAkAudioEvent*
	}

	namespace n_ULiveLinkDrivenComponent {
		constexpr auto SubjectName = 0xb0; // FLiveLinkSubjectName
		constexpr auto ActorTransformBone = 0xb8; // FName
		constexpr auto bModifyActorTransform = 0xc0; // bool
		constexpr auto bSetRelativeLocation = 0xc1; // bool
	}

	namespace n_AFriendlyLobbyCharacter_C {
		constexpr auto UberGraphFrame = 0x3ec8; // FPointerToUberGraphFrame
		constexpr auto WidgetNameplate = 0x3ed0; // UWidgetComponent*
		constexpr auto NeedsToSetNameplate = 0x3ed8; // bool
		constexpr auto PendingPlayerInfo = 0x3ee0; // UKSPlayerInfo*
	}

	namespace n_UWBP_BattlePass_Upsell_Button_C {
		constexpr auto UberGraphFrame = 0x580; // FPointerToUberGraphFrame
		constexpr auto Elite_Button_Focus = 0x588; // UWidgetAnimation*
		constexpr auto Base_Button_Focus = 0x590; // UWidgetAnimation*
		constexpr auto Confirmation_Elite_Button_Focus = 0x598; // UWidgetAnimation*
		constexpr auto GamepadPrompt = 0x5a0; // UWBP_KeyCallout_C*
		constexpr auto HitTarget = 0x5a8; // UButton*
		constexpr auto PressAndHoldWrapper = 0x5b0; // UOverlay*
		constexpr auto ProgressCircle = 0x5b8; // UImage*
		constexpr auto SizeBox_2 = 0x5c0; // USizeBox*
		constexpr auto Throbber_117 = 0x5c8; // UThrobber*
		constexpr auto ButtonLayoutIndex = 0x5d0; // int32_t
		constexpr auto OnClickedEvt = 0x5d8; // FMulticastInlineDelegate
		constexpr auto MyStoreItem = 0x5e8; // UPUMG_StoreItem*
		constexpr auto IsHoldingConfirm = 0x5f0; // bool
		constexpr auto Click Upsell Button SFX = 0x5f8; // UAkAudioEvent*
		constexpr auto Hover Upsell Button SFX = 0x600; // UAkAudioEvent*
		constexpr auto Confirm Purchase Active Enabled = 0x608; // bool
		constexpr auto Click Purchase Upsell Button SFX = 0x610; // UAkAudioEvent*
		constexpr auto Text Width = 0x618; // float
	}

	namespace n_UWBP_WrapSelectionEntry_C {
		constexpr auto UberGraphFrame = 0x560; // FPointerToUberGraphFrame
		constexpr auto Root = 0x568; // USizeBox*
		constexpr auto WBP_KSCosmeticItemDisplay = 0x570; // UWBP_KSCosmeticItemDisplay_C*
		constexpr auto IsSelected = 0x578; // bool
	}

	namespace n_UKSRangeEvaluator {
		constexpr auto bShouldConsiderMaxDistance = 0x28; // bool
		constexpr auto MaxDistance = 0x2c; // float
		constexpr auto bShouldConsiderMinDistance = 0x30; // bool
		constexpr auto MinDistance = 0x34; // float
	}

	namespace n_UWBP_SettingsSection_C {
		constexpr auto UberGraphFrame = 0x540; // FPointerToUberGraphFrame
		constexpr auto Image_176 = 0x548; // UImage*
		constexpr auto SectionSettings = 0x550; // UVerticalBox*
		constexpr auto SettingSectionDisplayName = 0x558; // UTextBlock*
	}

	namespace n_UCompositionGraphCaptureProtocol {
		constexpr auto IncludeRenderPasses = 0x58; // FCompositionGraphCapturePasses
		constexpr auto bCaptureFramesInHDR = 0x68; // bool
		constexpr auto HDRCompressionQuality = 0x6c; // int32_t
		constexpr auto CaptureGamut = 0x70; // EHDRCaptureGamut
		constexpr auto PostProcessingMaterial = 0x78; // FSoftObjectPath
		constexpr auto bDisableScreenPercentage = 0x90; // bool
		constexpr auto PostProcessingMaterialPtr = 0x98; // UMaterialInterface*
	}

	namespace n_UWBP_StandardButtonMedium_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto OnClick = 0x528; // UWidgetAnimation*
		constexpr auto Highlight = 0x530; // UWidgetAnimation*
		constexpr auto BtnBkg = 0x538; // UImage*
		constexpr auto BtnBkgHover = 0x540; // UImage*
		constexpr auto BtnBkgRedButton = 0x548; // UImage*
		constexpr auto BtnClickImage = 0x550; // UImage*
		constexpr auto BtnEdge = 0x558; // UImage*
		constexpr auto BtnEdgeHover = 0x560; // UImage*
		constexpr auto BtnFrame = 0x568; // UImage*
		constexpr auto BtnFrameHover = 0x570; // UImage*
		constexpr auto BtnStandardWrapper = 0x578; // UOverlay*
		constexpr auto ButtonText = 0x580; // UTextBlock*
		constexpr auto HitTarget = 0x588; // UButton*
		constexpr auto HoverWrapper = 0x590; // UOverlay*
		constexpr auto KeyPrompt = 0x598; // UWBP_KeyCallout_C*
		constexpr auto KeyPromptContainer = 0x5a0; // UCanvasPanel*
		constexpr auto SizeWrapper = 0x5a8; // USizeBox*
		constexpr auto OnClicked = 0x5b0; // FMulticastInlineDelegate
		constexpr auto OnHovered = 0x5c0; // FMulticastInlineDelegate
		constexpr auto OnUnhovered = 0x5d0; // FMulticastInlineDelegate
		constexpr auto ClickMedBtnSFX = 0x5e0; // UAkAudioEvent*
		constexpr auto DefaultButtonText = 0x5e8; // FText
		constexpr auto DefaultWidth = 0x600; // float
		constexpr auto ShowPromptOnFocus = 0x604; // bool
		constexpr auto PromptKey = 0x608; // FKey
		constexpr auto HoverMedBtnSFX = 0x620; // UAkAudioEvent*
		constexpr auto IsConfirm = 0x628; // bool
		constexpr auto IsCancel = 0x629; // bool
		constexpr auto IsRedButton = 0x62a; // bool
	}

	namespace n_UEnvQueryGenerator_OnCircle {
		constexpr auto CircleRadius = 0x80; // FAIDataProviderFloatValue
		constexpr auto SpaceBetween = 0xb8; // FAIDataProviderFloatValue
		constexpr auto NumberOfPoints = 0xf0; // FAIDataProviderIntValue
		constexpr auto PointOnCircleSpacingMethod = 0x128; // EPointOnCircleSpacingMethod
		constexpr auto ArcDirection = 0x130; // FEnvDirection
		constexpr auto ArcAngle = 0x150; // FAIDataProviderFloatValue
		constexpr auto AngleRadians = 0x188; // float
		constexpr auto CircleCenter = 0x190; // UEnvQueryContext*
		constexpr auto bIgnoreAnyContextActorsWhenGeneratingCircle = 0x198; // bool
		constexpr auto CircleCenterZOffset = 0x1a0; // FAIDataProviderFloatValue
		constexpr auto TraceData = 0x1d8; // FEnvTraceData
		constexpr auto bDefineArc = 0x208; // char : 1
	}

	namespace n_UKSNewsRotatorWidget {
		constexpr auto JsonSection = 0x520; // FString
		constexpr auto TimePerSection = 0x530; // float
	}

	namespace n_UKSEditorPropertiesPanel {
		constexpr auto SettingsInfoList = 0x520; // TArray<UKSHudEditorSettingsInfo*>
		constexpr auto SelectedHudEditableWidget = 0x530; // UKSHudEditableWidget*
	}

	namespace n_AAkReverbVolume {
		constexpr auto bEnabled = 0x258; // char : 1
		constexpr auto AuxBus = 0x260; // UAkAuxBus*
		constexpr auto AuxBusName = 0x268; // FString
		constexpr auto SendLevel = 0x278; // float
		constexpr auto FadeRate = 0x27c; // float
		constexpr auto Priority = 0x280; // float
		constexpr auto LateReverbComponent = 0x288; // UAkLateReverbComponent*
	}

	namespace n_UKSAIDifficultyComponent {
		constexpr auto Difficulty = 0xb0; // UKSBTDifficulty*
		constexpr auto DifficultyTable = 0xb8; // UDataTable*
		constexpr auto AllowDynamicDifficulty = 0xc0; // bool
		constexpr auto DifficultySpawnConfig = 0xc8; // FKSBTDifficultyConfig
		constexpr auto AccuracyMultiplierStandard = 0x140; // float
		constexpr auto AccuracyMultiplierThrownMelee = 0x144; // float
		constexpr auto AccuracyMultiplierThrownGrenade = 0x148; // float
		constexpr auto AccuracyMultiplierWhenBlinded = 0x14c; // float
		constexpr auto AccuracyMultiplierWhenCrosshairHidden = 0x150; // float
		constexpr auto NewTargetAccuracyMultiplier = 0x154; // float
		constexpr auto NewTargetTime = 0x158; // float
		constexpr auto AttackDelayClipPercentMin = 0x15c; // float
		constexpr auto AttackDelayClipPercentMax = 0x160; // float
		constexpr auto AttackDelay = 0x164; // float
		constexpr auto DamageDealtMultiplier = 0x168; // float
		constexpr auto HeadshotDamageDealtMultiplier = 0x16c; // float
		constexpr auto DamageTakenMultiplier = 0x170; // float
		constexpr auto HeadshotDamageTakenMultiplier = 0x174; // float
		constexpr auto AimForHeadshotProbability = 0x178; // float
		constexpr auto DodgeRollProbability = 0x17c; // float
		constexpr auto StrafeProbability = 0x180; // float
		constexpr auto ThrowGrenadeProbability = 0x184; // float
		constexpr auto ThrowMeleeProbability = 0x188; // float
		constexpr auto PerceptionStrengthMin = 0x18c; // float
		constexpr auto PerceptionStrengthMax = 0x190; // float
		constexpr auto PerceptionStrength = 0x194; // float
		constexpr auto AllowedActions = 0x198; // TArray<UKSBTAction*>
		constexpr auto DisallowedActions = 0x1a8; // TArray<UKSBTAction*>
		constexpr auto SpeedMultiplier = 0x1b8; // float
		constexpr auto LastFiredWeapon = 0x1bc; // TWeakObjectPtr<AKSWeapon>
		constexpr auto AttacksSinceLastAttackDelay = 0x1c4; // int32_t
		constexpr auto AttacksNeededToTriggerAttackDelay = 0x1c8; // int32_t
	}

	namespace n_AKSWeaponAssetDrop_MacGuffin {
		constexpr auto ObjectiveInfo = 0x880; // FKSObjectiveInfo
		constexpr auto ObjectiveTimerInfo = 0x8e8; // FKSObjectiveTimerInfo
		constexpr auto ObjectiveCaptureInfo = 0x920; // FKSObjectiveCaptureInfo
		constexpr auto PointOfInterest = 0x938; // AActor*
	}

	namespace n_UKSJobSelectionRules_Casual {
		constexpr auto TimeToPick = 0xd8; // float
	}

	namespace n_UTextLayoutWidget {
		constexpr auto ShapedTextOptions = 0x110; // FShapedTextOptions
		constexpr auto Justification = 0x113; // ETextJustify
		constexpr auto WrappingPolicy = 0x114; // ETextWrappingPolicy
		constexpr auto AutoWrapText = 0x115; // char : 1
		constexpr auto WrapTextAt = 0x118; // float
		constexpr auto Margin = 0x11c; // FMargin
		constexpr auto LineHeightPercentage = 0x12c; // float
	}

	namespace n_UKSCharacterMovementComponent {
		constexpr auto OnMoveModeChangedDynamic = 0x698; // FMulticastInlineDelegate
		constexpr auto LastNetUpdateTime = 0x6a8; // float
		constexpr auto MaxProxyForwardPredictionTime = 0x6ac; // float
		constexpr auto bCanEverSkipProxyPrediction = 0x6b2; // bool
		constexpr auto SkipProxyPredictionLOD = 0x6b4; // int32_t
		constexpr auto SkipProxySkydivePredictionDist = 0x6b8; // float
		constexpr auto bSkipProxyPredictionAfterSkydive = 0x6bc; // bool
		constexpr auto LastFloor = 0x6c0; // FFindFloorResult
		constexpr auto SlowToCrouchTime = 0x760; // float
		constexpr auto PostCrouchSlowTime = 0x76c; // float
		constexpr auto CrouchCooldownTime = 0x778; // float
		constexpr auto TeaBagPreventionCrouchCooldownTime = 0x77c; // float
		constexpr auto SimulatedProxyVelocity = 0x784; // FVector
		constexpr auto bCanEverPowerSlide = 0x790; // bool
		constexpr auto PowerSlideTurnFrictionMinAngle = 0x794; // float
		constexpr auto PowerSlideTurnFrictionMaxAngle = 0x798; // float
		constexpr auto MinimumStartPowerSlideSpeed = 0x79c; // float
		constexpr auto MinimumPowerSlideSpeed = 0x7a0; // float
		constexpr auto PowerSlideInitialSpeedBoost = 0x7a4; // float
		constexpr auto PowerSlideLockoutTime = 0x7a8; // float
		constexpr auto MinimumPowerSlideTime = 0x7ac; // float
		constexpr auto PowerSlideMaxStepHeight = 0x7b0; // float
		constexpr auto PowerSlideTurnDecelerationCurve = 0x7c0; // FInterpCurveFloat
		constexpr auto PowerSlideDecelerationCurve = 0x7d8; // FInterpCurveFloat
		constexpr auto PowerSlideResistDeceleration = 0x7f0; // float
		constexpr auto FallAimForgivenessPeriod = 0x808; // float
		constexpr auto FallAimForgivenessEndTime = 0x80c; // float
		constexpr auto MinWalkingAcceleration = 0x810; // float
		constexpr auto MaxSprintingSpeed = 0x814; // float
		constexpr auto MaxWalkSpeedProne = 0x818; // float
		constexpr auto AimOverShoulderSpeedModifier = 0x81c; // float
		constexpr auto AimDownSightsSpeedModifier = 0x820; // float
		constexpr auto StrafingSpeedFactor = 0x824; // float
		constexpr auto ReverseSpeedFactor = 0x828; // float
		constexpr auto bWantsToSprint = 0x82c; // char : 1
		constexpr auto bSprintIsHeld = 0x82c; // char : 1
		constexpr auto bSprintIsToggledOn = 0x82c; // char : 1
		constexpr auto bSprintInterrupted = 0x82c; // char : 1
		constexpr auto bIsJumping = 0x82c; // char : 1
		constexpr auto bCachedCharacterAllowSprintingRightNow = 0x82c; // char : 1
		constexpr auto bCachedCharacterAllowPowerSlideRightNow = 0x82c; // char : 1
		constexpr auto CachedWeaponWalkSpeedModifier = 0x830; // float
		constexpr auto ReducedJumpZVelocity = 0x834; // float
		constexpr auto ReducedJumpHeightWindow = 0x838; // float
		constexpr auto bSprinting = 0x83c; // char : 1
		constexpr auto MinHardLandingHeight = 0x848; // float
		constexpr auto HardLandingLockoutTime = 0x84c; // float
		constexpr auto FreefallLandingLockoutTime = 0x850; // float
		constexpr auto AimState = 0x854; // EKSCharacterAimMode
		constexpr auto KSCharacterOwner = 0x858; // AKSCharacterBase*
		constexpr auto MaxSprintingSwimSpeed = 0x860; // float
		constexpr auto MaxSubmergedSwimSpeed = 0x864; // float
		constexpr auto SwimSurfaceAcceleration = 0x868; // float
		constexpr auto SwimSubmergedAcceleration = 0x86c; // float
		constexpr auto MaxDownedSwimSpeed = 0x870; // float
		constexpr auto SwimStrafingSpeedFactor = 0x874; // float
		constexpr auto SwimReverseSpeedFactor = 0x878; // float
		constexpr auto MaxSwimZSpeed = 0x87c; // float
		constexpr auto SwimZAcceleration = 0x880; // float
		constexpr auto SurfaceSwimDepth = 0x884; // float
		constexpr auto SubmergedSwimDepth = 0x888; // float
		constexpr auto HardMaxSwimDepth = 0x88c; // float
		constexpr auto FallSpeedWaterDeflectionFactor = 0x890; // float
		constexpr auto CrouchToSwimDepth = 0x894; // float
		constexpr auto MantleConfigs = 0x898; // TArray<FMantleConfig>
		constexpr auto m_fLedgeGrabDistance = 0x8b8; // float
		constexpr auto m_fSprintLedgeGrabDistance = 0x8bc; // float
		constexpr auto m_fLedgeGrabbableWallZ = 0x8c0; // float
		constexpr auto m_fMaxLedgeCheckHeight = 0x8c4; // float
		constexpr auto m_fMinLedgeCheckHeight = 0x8c8; // float
		constexpr auto m_fSwimHeightBoost = 0x8cc; // float
		constexpr auto m_fLedgeGrabbableZ = 0x8d0; // float
		constexpr auto m_fVaultZSpeed = 0x8d4; // float
		constexpr auto m_fEnhancedZSpeed = 0x8d8; // float
		constexpr auto m_fVaultLateralSpeed = 0x8dc; // float
		constexpr auto m_fVaultFacingThreshold = 0x8e0; // float
		constexpr auto m_fVaultVerticalCheckInterval = 0x8e4; // float
		constexpr auto m_fVaultHeadClearance = 0x8e8; // float
		constexpr auto m_fMantleDownDistance = 0x8ec; // float
		constexpr auto m_fVaultForwardDistance = 0x8f0; // float
		constexpr auto m_fMantleMaxDistance = 0x8f4; // float
		constexpr auto m_vMantleLaunchVelocity = 0x8f8; // FVector
		constexpr auto m_fVaultErrorForgiveness = 0x904; // float
		constexpr auto m_fVaultStepFactor = 0x908; // float
		constexpr auto MantleStepHeightProxy = 0x90c; // float
		constexpr auto bRequireJumpForVault = 0x910; // bool
		constexpr auto MaximumVelocityPreserveHeight = 0x914; // float
		constexpr auto MinimumSpeedForFromJumpMantles = 0x918; // float
		constexpr auto bAllowMantleEarlyOutOnFire = 0x91c; // bool
		constexpr auto bRestrictVaultingIntoCrouch = 0x91d; // bool
		constexpr auto VaultFromGroundTraceHeightAdjust = 0x920; // float
		constexpr auto bVaultDebugPrinting = 0x95c; // bool
		constexpr auto CurrentMantleConfig = 0x960; // FMantleConfig
		constexpr auto MantleClothSimCurve = 0xa50; // FInterpCurveFloat
		constexpr auto m_fPostSprintLockoutTime = 0xa78; // float
		constexpr auto m_fRemainingPostSprintLockoutTime = 0xa7c; // float
		constexpr auto FreeFallClearanceHeight = 0xa80; // float
		constexpr auto MinFreeFallSpeedZ = 0xa84; // float
		constexpr auto DefaultFreeFallSpeedZ = 0xa88; // float
		constexpr auto MaxFreeFallSpeedZ = 0xa8c; // float
		constexpr auto MinFreeFallForwardSpeed = 0xa90; // float
		constexpr auto DefaultFreeFallForwardSpeed = 0xa94; // float
		constexpr auto MaxFreeFallForwardSpeed = 0xa98; // float
		constexpr auto MaxDiveForwardSpeed = 0xa9c; // float
		constexpr auto MaxFreeFallLateralSpeed = 0xaa0; // float
		constexpr auto MaxFreeFallLateralAcceleration = 0xaa4; // float
		constexpr auto MaxFreeFallReverseAcceleration = 0xaa8; // float
		constexpr auto FreeFallAirControl = 0xaac; // float
		constexpr auto FreeFallDelay = 0xab0; // float
		constexpr auto bInFreeFall = 0xab4; // bool
		constexpr auto bWingsuitHasBeenDisabled = 0xab5; // bool
		constexpr auto FreeFallBrakingAcceleration = 0xab8; // float
		constexpr auto FreeFallDiveThresholdAngle = 0xabc; // float
		constexpr auto FreeFallDiveForwardInputThreshold = 0xac0; // float
		constexpr auto bWantsToEndFreeFallEarly = 0xac4; // bool
		constexpr auto bIsFreeFallDiving = 0xad8; // bool
		constexpr auto LastYawRotation = 0xadc; // FRotator
		constexpr auto FreeFallYawAccumDeltaTime = 0xae8; // float
		constexpr auto FreeFallYawTotalDeltaTime = 0xaec; // float
		constexpr auto FreeFallDelayProgress = 0xaf0; // float
		constexpr auto FreeFallHeightActor = 0xaf4; // TWeakObjectPtr<AActor>
		constexpr auto bUseFreeFallStartHeight = 0xafc; // bool
		constexpr auto FreeFallNetSmoothTime = 0xb00; // float
		constexpr auto PostFreeFallNetSmoothTimeRecoveryRate = 0xb04; // float
		constexpr auto bWingsuitControls = 0xb09; // bool
		constexpr auto WingsuitGlideDragCoefficient = 0xb0c; // float
		constexpr auto WingsuitDiveDragCoefficient = 0xb10; // float
		constexpr auto WingsuitGlideSurfaceArea = 0xb14; // float
		constexpr auto WingsuitDiveSurfaceArea = 0xb18; // float
		constexpr auto bCachedCharacterAllowDodgeRollRightNow = 0xb1c; // char : 1
		constexpr auto bStartDodgeRoll = 0xb1c; // char : 1
		constexpr auto bWantsToDodgeRollOnLanding = 0xb20; // bool
		constexpr auto bShouldDodgeRollOnLanding = 0xb21; // bool
		constexpr auto MidairDodgeRollCountSinceLastGrounded = 0xb24; // uint32_t
		constexpr auto MaxDodgeRollSpeed = 0xb28; // float
		constexpr auto DodgeRollDistance = 0xb2c; // float
		constexpr auto bCanDodgeRollFromAimDownSights = 0xb30; // bool
		constexpr auto DodgeRollCooldownTime = 0xb34; // float
		constexpr auto DodgeRollForgivenessPeriod = 0xb3c; // float
		constexpr auto DodgeRollForgivenessEndTime = 0xb40; // float
		constexpr auto DodgeRollAcceleration = 0xb58; // float
		constexpr auto BrakingDecelerationPostDodgeRoll = 0xb5c; // float
		constexpr auto bEnableBrakingDecelerationPostDodgeRoll = 0xb60; // bool
		constexpr auto DodgeRollVelocityCurve = 0xb68; // FInterpCurveFloat
		constexpr auto DodgeRollClothSimCurve = 0xb80; // FInterpCurveFloat
		constexpr auto bCachedCharacterAllowLungeRightNow = 0xb98; // char : 1
		constexpr auto CurrentLungeDistance = 0xb9c; // float
		constexpr auto MaxLungeDistance = 0xba0; // float
		constexpr auto LungeTarget = 0xba8; // AActor*
		constexpr auto CurrentLungeDuration = 0xbb0; // float
		constexpr auto MaxLungeDuration = 0xbb4; // float
		constexpr auto LungeAcceleration = 0xbb8; // float
		constexpr auto MaxLungeSpeed = 0xbbc; // float
		constexpr auto LungeStopLateralDistance = 0xbc0; // float
		constexpr auto LungeStopVerticalDistance = 0xbc4; // float
		constexpr auto LungeAirControl = 0xbc8; // float
		constexpr auto FlightRecoverySplineComponent = 0xbe8; // USplineComponent*
		constexpr auto FlightRecoverySpeed = 0xbf4; // float
		constexpr auto bCachedCharacterAllowAbilityMoveRightNow = 0xbf8; // char : 1
		constexpr auto bStartAbilityMovement = 0xbf8; // char : 1
		constexpr auto bCachedCharacterAllowZipLineRightNow = 0xc00; // char : 1
		constexpr auto bZiplineEndsEnforceDirection = 0xc08; // bool
		constexpr auto bAllowDodgeRollIntoZipline = 0xc09; // bool
		constexpr auto bRequireJumpForZipline = 0xc0a; // bool
		constexpr auto bRequireDownwardMovementToZipline = 0xc0b; // bool
		constexpr auto bAllowZiplineReverseViaDodgeRoll = 0xc0c; // bool
		constexpr auto ZiplineAcceleration = 0xc10; // float
		constexpr auto bEnableFriendlyNudging = 0xc15; // bool
		constexpr auto MaxEmoteInterruptDistance = 0xc1c; // float
		constexpr auto MaxEmoteMovingInterruptDistance = 0xc20; // float
		constexpr auto CachedMaxEmoteInteruptDistance = 0xc24; // float
		constexpr auto bClientManuallyShoulderSwappedNearby = 0xc28; // bool
	}

	namespace n_UKSMasteryMiscReward {
		constexpr auto Name = 0x30; // FText
		constexpr auto Description = 0x48; // FText
		constexpr auto SoftIcon = 0x60; // TSoftObjectPtr<UTexture2D>
		constexpr auto RarityTag = 0x88; // FGameplayTag
		constexpr auto ItemTypeText = 0x90; // FText
		constexpr auto RewardPreviewType = 0xa8; // EWeaponMasteryRewardPreviewType
	}

	namespace n_UMaterialExpressionLandscapeLayerCoords {
		constexpr auto MappingType = 0x40; // ETerrainCoordMappingType
		constexpr auto CustomUVType = 0x41; // ELandscapeCustomizedCoordType
		constexpr auto MappingScale = 0x44; // float
		constexpr auto MappingRotation = 0x48; // float
		constexpr auto MappingPanU = 0x4c; // float
		constexpr auto MappingPanV = 0x50; // float
	}

	namespace n_UMaterialExpressionSaturate {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UNavModifierComponent {
		constexpr auto AreaClass = 0xe0; // UNavArea*
		constexpr auto FailsafeExtent = 0xe8; // FVector
		constexpr auto bIncludeAgentHeight = 0xf4; // char : 1
	}

	namespace n_UWBP_PlayerContextMenu_C {
		constexpr auto UberGraphFrame = 0x570; // FPointerToUberGraphFrame
		constexpr auto ShowAnim = 0x578; // UWidgetAnimation*
		constexpr auto AliasContainer = 0x580; // UOverlay*
		constexpr auto Image_160 = 0x588; // UImage*
		constexpr auto MenuContainer = 0x590; // UVerticalBox*
		constexpr auto OptionsBgA = 0x598; // UImage*
		constexpr auto OptionsBgB = 0x5a0; // UImage*
		constexpr auto OptionsContainerA = 0x5a8; // UVerticalBox*
		constexpr auto OptionsContainerB = 0x5b0; // UVerticalBox*
		constexpr auto OuterMenuContainer = 0x5b8; // USizeBox*
		constexpr auto PlayerCard = 0x5c0; // UWBP_player_card_module_C*
		constexpr auto ScreenCanvas = 0x5c8; // UCanvasPanel*
		constexpr auto VerticalBox_1 = 0x5d0; // UVerticalBox*
		constexpr auto WBP_Social_Platform_ID = 0x5d8; // UWBP_Social_Platform_ID_C*
		constexpr auto WBP_Social_Platform_ID_2 = 0x5e0; // UWBP_Social_Platform_ID_C*
		constexpr auto WBP_Social_Platform_ID_3 = 0x5e8; // UWBP_Social_Platform_ID_C*
		constexpr auto WBP_Social_Platform_ID_4 = 0x5f0; // UWBP_Social_Platform_ID_C*
		constexpr auto WBP_Social_Platform_ID_5 = 0x5f8; // UWBP_Social_Platform_ID_C*
		constexpr auto WBP_Social_Platform_ID_6 = 0x600; // UWBP_Social_Platform_ID_C*
		constexpr auto WBP_VoiceActivityContainer = 0x608; // UWBP_VoiceActivityContainer_C*
		constexpr auto OnReadyForNavigation = 0x610; // FMulticastInlineDelegate
		constexpr auto OnMenuHidden = 0x620; // FMulticastInlineDelegate
		constexpr auto OnMenuStart = 0x630; // FMulticastInlineDelegate
		constexpr auto KeysToAllow = 0x640; // TArray<FKey>
		constexpr auto Last Interacted Target = 0x650; // TScriptInterface<IIKSContextMenuTarget_C>
		constexpr auto OnReportPlayer_1 = 0x660; // FMulticastInlineDelegate
	}

	namespace n_UKSWrapCustomizationContext {
		constexpr auto WeaponAsset = 0x28; // UKSWeaponAsset*
		constexpr auto SelectedWrap = 0x30; // UKSWeaponAttachment*
		constexpr auto SelectedStoreItem = 0x38; // UPUMG_StoreItem*
	}

	namespace n_UVariantSet {
		constexpr auto DisplayText = 0x28; // FText
		constexpr auto bExpanded = 0x58; // bool
		constexpr auto Variants = 0x60; // TArray<UVariant*>
	}

	namespace n_UParticleModuleAttractorPointGravity {
		constexpr auto Position = 0x30; // FVector
		constexpr auto Radius = 0x3c; // float
		constexpr auto Strength = 0x40; // UDistributionFloat*
		constexpr auto StrengthRaw = 0x48; // FRawDistributionFloat
	}

	namespace n_UWidget {
		constexpr auto Slot = 0x28; // UPanelSlot*
		constexpr auto bIsEnabledDelegate = 0x30; // FDelegate
		constexpr auto ToolTipText = 0x40; // FText
		constexpr auto ToolTipTextDelegate = 0x58; // FDelegate
		constexpr auto ToolTipWidget = 0x68; // UWidget*
		constexpr auto ToolTipWidgetDelegate = 0x70; // FDelegate
		constexpr auto VisibilityDelegate = 0x80; // FDelegate
		constexpr auto RenderTransform = 0x90; // FWidgetTransform
		constexpr auto RenderTransformPivot = 0xac; // FVector2D
		constexpr auto bIsVariable = 0xb4; // char : 1
		constexpr auto bCreatedByConstructionScript = 0xb4; // char : 1
		constexpr auto bIsEnabled = 0xb4; // char : 1
		constexpr auto bOverride_Cursor = 0xb4; // char : 1
		constexpr auto AccessibleWidgetData = 0xb8; // USlateAccessibleWidgetData*
		constexpr auto bIsVolatile = 0xc0; // char : 1
		constexpr auto bAllowRenderInterpolation = 0xc0; // char : 1
		constexpr auto bIssueGlobalInvalidateOnVisible = 0xc0; // char : 1
		constexpr auto DebugWidgetIndex = 0xc1; // char
		constexpr auto Cursor = 0xc2; // EMouseCursor
		constexpr auto Clipping = 0xc3; // EWidgetClipping
		constexpr auto Visibility = 0xc4; // ESlateVisibility
		constexpr auto RenderOpacity = 0xc8; // float
		constexpr auto Navigation = 0xd0; // UWidgetNavigation*
		constexpr auto FlowDirectionPreference = 0xd8; // EFlowDirectionPreference
		constexpr auto NativeBindings = 0x100; // TArray<UPropertyBinding*>
	}

	namespace n_UMovieSceneGeometryCacheSection {
		constexpr auto Params = 0xe0; // FMovieSceneGeometryCacheParams
	}

	namespace n_UPawnAction_Sequence {
		constexpr auto ActionSequence = 0x98; // TArray<UPawnAction*>
		constexpr auto ChildFailureHandlingMode = 0xa8; // EPawnActionFailHandling
		constexpr auto RecentActionCopy = 0xb0; // UPawnAction*
	}

	namespace n_UCollisionProfile {
		constexpr auto Profiles = 0x38; // TArray<FCollisionResponseTemplate>
		constexpr auto DefaultChannelResponses = 0x48; // TArray<FCustomChannelSetup>
		constexpr auto EditProfiles = 0x58; // TArray<FCustomProfile>
		constexpr auto ProfileRedirects = 0x68; // TArray<FRedirector>
		constexpr auto CollisionChannelRedirects = 0x78; // TArray<FRedirector>
	}

	namespace n_UTileView {
		constexpr auto EntryHeight = 0x380; // float
		constexpr auto EntryWidth = 0x384; // float
		constexpr auto TileAlignment = 0x388; // EListItemAlignment
		constexpr auto bWrapHorizontalNavigation = 0x389; // bool
	}

	namespace n_UKneeCrawlingNotify_C {
		constexpr auto StepType = 0x38; // StepType
		constexpr auto BoneName = 0x3c; // FName
	}

	namespace n_UKSPlayerShopWidgetBase {
		constexpr auto PlayerShop = 0x528; // AKSPlayerShop*
	}

	namespace n_UKSQueuesSettingsDefault {
		constexpr auto QueueConfigRow = 0x28; // TArray<FKSQueueRow>
		constexpr auto MapListBaseConfigRow = 0x88; // TArray<FKSMapListRow>
		constexpr auto MapBaseConfigRow = 0xe8; // TArray<FKSMapRow>
		constexpr auto BonusProgressionBaseConfigRow = 0x148; // TArray<FKSBonusProgressionRow>
		constexpr auto SurrenderBaseConfigRow = 0x1a8; // TArray<FKSSurrenderRow>
		constexpr auto QueueGroupBaseConfigRow = 0x208; // TArray<FKSQueueGroupRow>
		constexpr auto RankedProgressionBaseConfigRow = 0x268; // TArray<FKSRankedProgressionRow>
		constexpr auto LimitedTimeEventBaseConfigRow = 0x2c8; // TArray<FKSLimitedTimeEventRow>
		constexpr auto RankedSeasonBaseConfigRow = 0x328; // TArray<FKSRankedSeasonRow>
		constexpr auto ActiveLimitedTimeEventNames = 0x388; // TArray<FString>
		constexpr auto ActiveRankedSeasonKey = 0x398; // FString
		constexpr auto QueueSectionSortConfigRow = 0x3a8; // TArray<FKSQueueSectionSort>
		constexpr auto QueuePlatformFilter = 0x3b8; // TArray<FKSQueuePlatformFilter>
	}

	namespace n_UKSSettingsSection {
		constexpr auto SettingsGroups = 0x520; // TArray<UKSSettingsGroup*>
		constexpr auto SettingsGroupClass = 0x530; // UKSSettingsGroup*
		constexpr auto SectionConfigAsset = 0x538; // UKSSettingsSectionConfigAsset*
	}

	namespace n_UWBP_LerpingBar_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto BarImage = 0x268; // UImage*
		constexpr auto BarColor = 0x270; // FLinearColor
	}

	namespace n_AKSOutOfBoundsVolume {
		constexpr auto TickDamage = 0x258; // float
		constexpr auto WarningDuration = 0x25c; // float
	}

	namespace n_UWBP_PostMatchNavButton_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto Hover = 0x528; // UWidgetAnimation*
		constexpr auto WBP_subscreen_nav_tab = 0x530; // UWBP_subscreen_nav_tab_C*
		constexpr auto OnClicked = 0x538; // FMulticastInlineDelegate
		constexpr auto ButtonTextMsg = 0x548; // FText
	}

	namespace n_UMaterialExpressionMaterialFunctionCall {
		constexpr auto MaterialFunction = 0x40; // UMaterialFunctionInterface*
		constexpr auto FunctionParameterInfo = 0x48; // FMaterialParameterInfo
	}

	namespace n_UKSPlayerMod_Activated {
		constexpr auto bIsCharacterAbility = 0x330; // bool
		constexpr auto RequiredCharge = 0x334; // int32_t
		constexpr auto MaximumCharge = 0x338; // int32_t
		constexpr auto DefaultCharge = 0x33c; // int32_t
		constexpr auto bRemoveIfExhausted = 0x340; // bool
		constexpr auto RefundFactor = 0x344; // float
		constexpr auto bHasLockout = 0x348; // bool
		constexpr auto LockoutTime = 0x34c; // float
		constexpr auto bCanActivateBeforeRoundStart = 0x350; // bool
		constexpr auto bIgnoreNoFireZone = 0x351; // bool
		constexpr auto bIgnoreWeaponFireCheck = 0x352; // bool
		constexpr auto bEndOnDown = 0x353; // bool
		constexpr auto bEndOnDeath = 0x354; // bool
		constexpr auto BuffsGivenOnActivation = 0x358; // TArray<TSoftObjectPtr<UKSPlayerMod>>
		constexpr auto bKeepsTeamAliveIfUsable = 0x368; // bool
		constexpr auto bKeepsTeamAliveIfActive = 0x369; // bool
		constexpr auto AbilitySetupDuration = 0x36c; // float
		constexpr auto bSetupLagCompensation = 0x370; // bool
		constexpr auto AbilityDuration = 0x374; // float
		constexpr auto MaximumBonusDuration = 0x378; // float
		constexpr auto bCapBonusDuration = 0x37c; // bool
		constexpr auto AbilityEndWarningTime = 0x380; // float
		constexpr auto AbilityRecoveryDuration = 0x384; // float
		constexpr auto bSelectableNormally = 0x388; // bool
		constexpr auto bSelectableWhileDowned = 0x389; // bool
		constexpr auto ChargePerSecond = 0x38c; // float
		constexpr auto ChargePerHundredPoints = 0x390; // float
		constexpr auto CameraShake = 0x398; // UCameraShake*
		constexpr auto ActivateWhileDownedPromptText = 0x3a0; // FText
	}

	namespace n_UKSStoreSectionItemWithPurchaseData {
		constexpr auto StoreSectionItem = 0x58; // UKSStoreSectionItem*
	}

	namespace n_USoundNodeBranch {
		constexpr auto BoolParameterName = 0x48; // FName
	}

	namespace n_UWBP_TextChat_ChatWindow_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto LoseFocus = 0x528; // UWidgetAnimation*
		constexpr auto GainFocus = 0x530; // UWidgetAnimation*
		constexpr auto Backer = 0x538; // UImage*
		constexpr auto BackerWrapper = 0x540; // UOverlay*
		constexpr auto CloseBtn = 0x548; // UButton*
		constexpr auto MessageList = 0x550; // UVerticalBox*
		constexpr auto Scroll = 0x558; // UScrollBox*
		constexpr auto ScrollToBottomFrameDelay = 0x560; // int32_t
		constexpr auto IsCollapsed = 0x564; // bool
		constexpr auto TextChatWidget = 0x568; // UWBP_TextChat_C*
		constexpr auto OnCloseButtonClicked = 0x570; // FMulticastInlineDelegate
	}

	namespace n_UAkWwiseTree {
		constexpr auto OnSelectionChanged = 0x110; // FMulticastInlineDelegate
		constexpr auto OnItemDragged = 0x120; // FMulticastInlineDelegate
	}

	namespace n_UInAppPurchaseCallbackProxy2 {
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UKSModInst_BuffWeaponOnActivation {
		constexpr auto AssetsToBuff = 0x500; // TArray<UKSWeaponAsset*>
		constexpr auto EquipPointToBuff = 0x510; // FGameplayTag
		constexpr auto EquipPointOfBuff = 0x518; // FGameplayTag
		constexpr auto bRequireBaseToActivate = 0x520; // bool
		constexpr auto bSyncAmmo = 0x521; // bool
		constexpr auto BaseWeapon = 0x524; // TWeakObjectPtr<AKSWeapon>
		constexpr auto BaseWeaponComponent = 0x52c; // TWeakObjectPtr<UKSWeaponComponent>
		constexpr auto BuffWeaponComponent = 0x534; // TWeakObjectPtr<UKSWeaponComponent>
	}

	namespace n_UParticleModuleEventGenerator {
		constexpr auto Events = 0x30; // TArray<FParticleEvent_GenerateInfo>
	}

	namespace n_UKSPlayerMod_DamageTaken {
		constexpr auto ValidDamageTypes = 0x330; // TArray<UDamageType*>
		constexpr auto ValidHitLocations = 0x340; // TArray<EHitLocationType>
		constexpr auto DamageTakenMultiplier = 0x350; // float
		constexpr auto DamageTakenParticle = 0x358; // TSoftObjectPtr<UParticleSystem>
		constexpr auto ImmuneToNonDamageEffects = 0x380; // bool
		constexpr auto NotifyDamageReduction = 0x381; // bool
		constexpr auto HitBodyAudioEvent = 0x388; // TSoftObjectPtr<UAkAudioEvent>
		constexpr auto HitHeadAudioEvent = 0x3b0; // TSoftObjectPtr<UAkAudioEvent>
		constexpr auto HitByAudioEvent = 0x3d8; // TSoftObjectPtr<UAkAudioEvent>
	}

	namespace n_ULiveLinkVirtualSubjectSourceSettings {
		constexpr auto SourceName = 0x98; // FName
	}

	namespace n_UPanelWidget {
		constexpr auto Slots = 0x110; // TArray<UPanelSlot*>
	}

	namespace n_UWBP_AcquistionItem_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto CosmeticItem = 0x528; // UWBP_KSCosmeticItemDisplay_C*
		constexpr auto AcquisitionItem = 0x530; // UAcquisitionItemData*
		constexpr auto OnSlotSelected = 0x538; // FMulticastInlineDelegate
		constexpr auto OnSlotHover = 0x548; // FMulticastInlineDelegate
	}

	namespace n_UKSHUDAnnouncementComponent {
		constexpr auto OnEndOfMatch = 0xb0; // FMulticastInlineDelegate
		constexpr auto OwningPlayer = 0xc0; // AKSPlayerController*
		constexpr auto OnAnnouncement = 0xc8; // FMulticastInlineDelegate
		constexpr auto OnResultAnnouncement = 0xd8; // FMulticastInlineDelegate
	}

	namespace n_UKSViewItemData {
		constexpr auto StoreItems = 0x520; // TArray<TSoftObjectPtr<UPUMG_StoreItem>>
		constexpr auto InventoryItem = 0x530; // UPlatformInventoryItem*
		constexpr auto SceneCamera = 0x538; // FName
		constexpr auto SceneViewModel = 0x540; // FName
		constexpr auto LobbyCharacterIndex = 0x548; // ELobbyCharacterIndex
	}

	namespace n_UDatasmithPostProcessVolumeTemplate {
		constexpr auto Settings = 0x30; // FDatasmithPostProcessSettingsTemplate
		constexpr auto bEnabled = 0x70; // char : 1
		constexpr auto bUnbound = 0x70; // char : 1
	}

	namespace n_UFoliageType_InstancedStaticMesh {
		constexpr auto Mesh = 0x360; // UStaticMesh*
		constexpr auto OverrideMaterials = 0x368; // TArray<UMaterialInterface*>
		constexpr auto ComponentClass = 0x378; // UFoliageInstancedStaticMeshComponent*
	}

	namespace n_UEdGraph {
		constexpr auto Schema = 0x28; // UEdGraphSchema*
		constexpr auto Nodes = 0x30; // TArray<UEdGraphNode*>
		constexpr auto bEditable = 0x40; // char : 1
		constexpr auto bAllowDeletion = 0x40; // char : 1
		constexpr auto bAllowRenaming = 0x40; // char : 1
	}

	namespace n_UBTTask_RunBehaviorDynamic {
		constexpr auto InjectionTag = 0x70; // FGameplayTag
		constexpr auto DefaultBehaviorAsset = 0x78; // UBehaviorTree*
		constexpr auto BehaviorAsset = 0x80; // UBehaviorTree*
	}

	namespace n_UVerticalBoxSlot {
		constexpr auto Size = 0x38; // FSlateChildSize
		constexpr auto Padding = 0x40; // FMargin
		constexpr auto HorizontalAlignment = 0x58; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x59; // EVerticalAlignment
	}

	namespace n_AKSGameState {
		constexpr auto RandomSessionSeed = 0x2a8; // int32_t
		constexpr auto OnTeamCinematicSequenceSkippedDel = 0x2d0; // FMulticastInlineDelegate
		constexpr auto PlayerIdentitiesContainer = 0x2f0; // FKSPlayerIdentitiesContainer
		constexpr auto PredictedActors = 0x410; // TMap<uint64_t, TWeakObjectPtr<AKSLagCompensatedActor>>
		constexpr auto KillCamStatus = 0x470; // EKillCamStatus
		constexpr auto KillCamRecordingSecondsToKeep = 0x474; // float
		constexpr auto KillCamFocusPawn = 0x478; // APawn*
		constexpr auto KillCamSecondaryFocusPawn = 0x488; // APawn*
		constexpr auto KillCamFocusSpecial = 0x498; // AActor*
		constexpr auto KillCamTime = 0x4a4; // float
		constexpr auto OnGameDisplayInfo = 0x4c0; // FMulticastInlineDelegate
		constexpr auto OnRemoveGameDisplayInfo = 0x4d0; // FMulticastInlineDelegate
		constexpr auto OnPhaseChangeDel = 0x548; // FMulticastInlineDelegate
		constexpr auto OnSetupStartDel = 0x558; // FMulticastInlineDelegate
		constexpr auto OnSetupEndDel = 0x568; // FMulticastInlineDelegate
		constexpr auto OnExpectedPhaseCountChanged = 0x578; // FMulticastInlineDelegate
		constexpr auto OnTimerSecondTick = 0x588; // FMulticastInlineDelegate
		constexpr auto MatchPhase = 0x598; // FMatchPhase
		constexpr auto ExpectedPhaseCount = 0x5ac; // int32_t
		constexpr auto ExpectedTimeForRemainingPhases = 0x5b0; // float
		constexpr auto PreviousPhase = 0x5b4; // FMatchPhase
		constexpr auto bHasProcessedMatchStarted = 0x5c8; // bool
		constexpr auto ReplicatedMatchTimer = 0x618; // FPGame_ReplicatedTimer
		constexpr auto bCharacterBodiesPersistAfterDeath = 0x65c; // bool
		constexpr auto SecondsForCharacterBodiesToPersistAfterDeath = 0x660; // float
		constexpr auto SecondsToViewBodyAfterDeath = 0x664; // float
		constexpr auto OnPlayerDeath = 0x668; // FMulticastInlineDelegate
		constexpr auto OnPlayerDown = 0x678; // FMulticastInlineDelegate
		constexpr auto OnRadialMenuItemUse = 0x688; // FMulticastInlineDelegate
		constexpr auto OnPlayerSpawn = 0x698; // FMulticastInlineDelegate
		constexpr auto OnPlayerRevive = 0x6a8; // FMulticastInlineDelegate
		constexpr auto OnWinnerSet = 0x6b8; // FMulticastInlineDelegate
		constexpr auto OnPlayerAssist = 0x6c8; // FMulticastInlineDelegate
		constexpr auto OnLastManStanding = 0x6d8; // FMulticastInlineDelegate
		constexpr auto OnUIRelevantPlayerStateChangedDel = 0x6e8; // FMulticastInlineDelegate
		constexpr auto DefaultMinimapWidth = 0x6f8; // float
		constexpr auto OnTeamAdded = 0x700; // FMulticastInlineDelegate
		constexpr auto OnTeamRemoved = 0x710; // FMulticastInlineDelegate
		constexpr auto OnTeamCelebrateDel = 0x720; // FMulticastInlineDelegate
		constexpr auto AccoladeTrackerClasses = 0x730; // TArray<UKSAccoladeTracker*>
		constexpr auto MiniMapAssistant = 0x758; // AKSMiniMapAssistant*
		constexpr auto teams = 0x760; // TMap<int32_t, AKSTeamState*>
		constexpr auto CombatEventList = 0x7b8; // FCombatEventList
		constexpr auto RadialMenuItemEventList = 0x840; // FRadialMenuItemEventList
		constexpr auto AssistEventList = 0x8c8; // FAssistEventList
		constexpr auto ReviveEventList = 0x950; // FReviveEventList
		constexpr auto OnTeamEliminatedDel = 0x9d8; // FMulticastInlineDelegate
		constexpr auto OnTeamEliminatedOrDownedDel = 0x9e8; // FMulticastInlineDelegate
		constexpr auto OnPlayerEliminatedDel = 0x9f8; // FMulticastInlineDelegate
		constexpr auto OnPlayerDownedChangedDel = 0xa08; // FMulticastInlineDelegate
		constexpr auto OnAttackingTeamUpdated = 0xa18; // FMulticastInlineDelegate
		constexpr auto OnDisplayCashChanged = 0xa28; // FMulticastInlineDelegate
		constexpr auto bDisplayCash = 0xa38; // bool
		constexpr auto CashPerDown = 0xa3c; // int32_t
		constexpr auto DownDescription = 0xa40; // FText
		constexpr auto CashPerAssist = 0xa58; // int32_t
		constexpr auto AssistDescription = 0xa60; // FText
		constexpr auto CashPerRevive = 0xa78; // int32_t
		constexpr auto ReviveDescription = 0xa80; // FText
		constexpr auto CashPerElim = 0xa98; // int32_t
		constexpr auto EliminationDescription = 0xaa0; // FText
		constexpr auto CashPerSuicide = 0xab8; // int32_t
		constexpr auto SuicideDescription = 0xac0; // FText
		constexpr auto CashPerDeployableDestroyed = 0xad8; // TMap<UKSDamageTypeBase*, int32_t>
		constexpr auto MercSelectSubLevel = 0xb28; // FString
		constexpr auto ActiveCinematicSubLevelNames = 0xb38; // TArray<FString>
		constexpr auto ActiveCinematicSequenceManager = 0xb48; // AKSCinematicSequenceManager*
		constexpr auto OnTeamSidesFlipped = 0xb50; // FMulticastInlineDelegate
		constexpr auto TierUnlockThresholds = 0xb60; // TArray<int32_t>
		constexpr auto MaxMarkerDistanceForCommonLoot = 0xb70; // float
		constexpr auto ObjectiveTicketDisplayType = 0xb74; // EKSGameTicketDisplayType
		constexpr auto WorldLootSites = 0xe18; // TArray<AKSLootSiteBase*>
		constexpr auto WorldObjectives = 0xe28; // TArray<AKSObjectiveBase*>
		constexpr auto WorldFlightPoints = 0xe38; // TArray<AKSFlightPoint*>
		constexpr auto WorldDestructibles = 0xe48; // TArray<AKSDestructibleBase*>
		constexpr auto WorldDrops = 0xe58; // TArray<AKSItemDrop*>
		constexpr auto WorldProjectiles = 0xe68; // TArray<AKSProjectile*>
		constexpr auto WorldCharacters = 0xe78; // TArray<AKSCharacter*>
		constexpr auto WorldHeatSources = 0xe88; // TArray<UKSHeatSourceComponent*>
		constexpr auto WorldHazards = 0xe98; // TArray<TScriptInterface<IKSDestroyableHazard>>
		constexpr auto WorldWayPointSets = 0xea8; // TArray<AKSWayPointSet*>
		constexpr auto WorldRecoveryPoints = 0xeb8; // TArray<AKSOutOfBoundsRecoveryPoint*>
		constexpr auto WorldAnnouncers = 0xec8; // TArray<AKSAnnouncer*>
		constexpr auto WorldPlayerShops = 0xed8; // TArray<AKSPlayerShop*>
		constexpr auto WorldRoyaleZones = 0xee8; // TArray<AKSRoyaleSafeZone*>
		constexpr auto InitialGameObjectiveInfos = 0xef8; // TArray<FInitialGameObjectiveInfo>
		constexpr auto OnHUDTimerPrioritiesChangedDel = 0xf08; // FMulticastInlineDelegate
		constexpr auto OnMarkerTimerPrioritiesChangedDel = 0xf18; // FMulticastInlineDelegate
		constexpr auto HUDTimerPriorityConfig = 0xf28; // FKSTimerPriorityConfig
		constexpr auto HUDTimerPriorityMap = 0xf30; // TMap<EGameTimerType, EKSPriority>
		constexpr auto MarkerTimerPriorityConfig = 0xf80; // FKSTimerPriorityConfig
		constexpr auto MarkerTimerPriorityMap = 0xf88; // TMap<EGameTimerType, EKSPriority>
		constexpr auto OnGameObjectiveRegistered = 0xfd8; // FMulticastInlineDelegate
		constexpr auto OnGameObjectiveTransfered = 0xfe8; // FMulticastInlineDelegate
		constexpr auto OnGameObjectiveUnregistered = 0xff8; // FMulticastInlineDelegate
		constexpr auto OnGameObjectiveStateChanged = 0x1008; // FMulticastInlineDelegate
		constexpr auto OnGameObjectiveTimerActive = 0x1018; // FMulticastInlineDelegate
		constexpr auto OnGameObjectiveTimerComplete = 0x1028; // FMulticastInlineDelegate
		constexpr auto OnGameObjectiveTimerTick = 0x1038; // FMulticastInlineDelegate
		constexpr auto GameObjectives = 0x1058; // TMap<int32_t, TScriptInterface<IKSObjective>>
		constexpr auto OnHeatSourceAdded = 0x10a8; // FMulticastInlineDelegate
		constexpr auto OnHeatSourceRemoved = 0x10b8; // FMulticastInlineDelegate
		constexpr auto WorldDeployables = 0x10c8; // TArray<AActor*>
		constexpr auto bDestroyDeployableOnInstigatorDeath = 0x10d8; // bool
		constexpr auto OnItemDropAdded = 0x10e0; // FMulticastInlineDelegate
		constexpr auto ItemDropLifeSpan = 0x10f0; // float
		constexpr auto bShouldOffsetWeaponDrops = 0x10f4; // bool
		constexpr auto ProjectileLifeSpan = 0x10f8; // float
		constexpr auto SkyDiveListeners = 0x1100; // TArray<TScriptInterface<IKSSkyDiveListener>>
		constexpr auto SkyDivers = 0x1110; // TArray<AKSCharacter*>
		constexpr auto PresenceDisplayText = 0x11a8; // FText
		constexpr auto PresenceKey = 0x11c0; // FString
		constexpr auto WaveRespawnTimer = 0x11d8; // UKSTimerComponent*
		constexpr auto LootRarityTimerPairs = 0x11e0; // TArray<FKSLootRarityTimerPair>
		constexpr auto LootRarityTimerMap = 0x11f0; // TMap<ELootSiteRarity, UKSTimerComponent*>
		constexpr auto OnLootRespawnTimerTick = 0x1240; // FMulticastInlineDelegate
		constexpr auto OnLootRespawnTimerActive = 0x1250; // FMulticastInlineDelegate
		constexpr auto OnAccoladeDisplay = 0x1260; // FMulticastInlineDelegate
		constexpr auto AccoladeEventList = 0x1270; // FAccoladeEventList
		constexpr auto bBlockWeaponFiring = 0x12f8; // bool
		constexpr auto HealthGate = 0x12fc; // float
		constexpr auto bPreserveReserveAmmo = 0x1300; // bool
		constexpr auto bInfiniteAmmo = 0x1301; // bool
		constexpr auto bShowHUDObjectiveRoles = 0x1302; // bool
		constexpr auto bShowHUDObjectiveRoleBeforeJobSelect = 0x1303; // bool
		constexpr auto bInvertHUDObjectiveRoles = 0x1304; // bool
		constexpr auto GameModeHUDSettings = 0x1308; // FKSGameHUDSettings
		constexpr auto bPlayersShouldSpectateDefaultCamera = 0x1320; // bool
		constexpr auto bShowingPreviewActorSubLevel = 0x1321; // bool
		constexpr auto bPreviewActorsEnabled = 0x1322; // bool
		constexpr auto OnDynamicDestroyPreviewActorsDel = 0x1370; // FMulticastInlineDelegate
		constexpr auto OnDynamicDisablePreviewActorsDel = 0x1380; // FMulticastInlineDelegate
		constexpr auto OnDynamicEnablePreviewActorsDel = 0x1390; // FMulticastInlineDelegate
		constexpr auto OnCinematicSubLevelEnabled = 0x13a0; // FMulticastInlineDelegate
		constexpr auto OnCinematicSubLevelDisabled = 0x13b0; // FMulticastInlineDelegate
		constexpr auto OnSetNumDebugCinematicRogues = 0x13c0; // FMulticastInlineDelegate
		constexpr auto NumDebugCinematicRogues = 0x13d4; // int32_t
		constexpr auto AlwaysIncludedClientBundles = 0x13d8; // TArray<FName>
		constexpr auto AlwaysIncludedServerBundles = 0x13e8; // TArray<FName>
		constexpr auto Preloader = 0x13f8; // FReplicatedPreloader
		constexpr auto bPostSelectionCinematicDisabled = 0x15d8; // bool
		constexpr auto bForceAllowLeaveMatchButton = 0x15d9; // bool
		constexpr auto PersistentPlayerDataContainer = 0x15e0; // FKSPersistentMinPlayerDataContainer
		constexpr auto OnPersistentPlayerDataCreatedDel = 0x17f0; // FMulticastInlineDelegate
		constexpr auto PersistentDataReplicator = 0x1868; // AKSPersistentDataReplicator*
		constexpr auto FriendlyFireKillPenalty = 0x1870; // int32_t
		constexpr auto FriendlyFireDownPenalty = 0x1874; // int32_t
		constexpr auto bCanToggleScoreboard = 0x1890; // bool
		constexpr auto bMatchEndedInSurrender = 0x18a8; // bool
		constexpr auto SurrenderWinningTeam = 0x18b0; // AKSTeamState*
		constexpr auto StimulusSourceObjects = 0x18b8; // TArray<TWeakObjectPtr<AActor>>
		constexpr auto HUDComponentPropMap = 0x18c8; // TMap<FName, FString>
		constexpr auto HUDAnnouncementComponentClass = 0x1918; // UKSHUDAnnouncementComponent*
		constexpr auto EmoteMusicManagerClass = 0x1920; // AKSEmoteMusicManager*
		constexpr auto EmoteMusicManager = 0x1928; // AKSEmoteMusicManager*
		constexpr auto ActiveCinematicState = 0x1930; // TArray<FName>
		constexpr auto CinematicDataContainer = 0x1968; // UKSCinematicDataContainer*
		constexpr auto MVPDeterminant = 0x1970; // UKSMVPDeterminant*
		constexpr auto WayPointSetCollection = 0x1978; // UKSWayPointSetCollection*
		constexpr auto OnJobSelectionTypeChanged = 0x1980; // FMulticastInlineDelegate
		constexpr auto bAllowPlayersToReselectJob = 0x1990; // bool
		constexpr auto JobSelectionType = 0x1991; // EJobSelectionType
		constexpr auto ActivityBehaviorCache = 0x1998; // TMap<FString, float>
	}

	namespace n_UKSCustomizationSelection {
		constexpr auto RogueCustomizationRelatedInfos = 0x528; // TArray<FRogueCustomizationRelatedInfo>
		constexpr auto ActiveCosmeticSlots = 0x538; // TArray<EMercCosmeticSlot>
		constexpr auto TabIndex = 0x548; // int32_t
	}

	namespace n_UDistributionVectorConstant {
		constexpr auto Constant = 0x38; // FVector
		constexpr auto bLockAxes = 0x44; // char : 1
		constexpr auto LockedAxes = 0x48; // EDistributionVectorLockFlags
	}

	namespace n_AKSWeapon_DirectTarget {
		constexpr auto ActiveTarget = 0x6d8; // AActor*
		constexpr auto TargeterConfig = 0x6e0; // FKSTargeterConfig
	}

	namespace n_UMovieSceneParticleParameterTrack {
		constexpr auto Sections = 0x58; // TArray<UMovieSceneSection*>
	}

	namespace n_UKSAimAssistDebugWidget {
		constexpr auto bDrawAimAssistBoundary = 0x238; // bool
		constexpr auto bDrawHeadAimCorrectionBoundary = 0x239; // bool
		constexpr auto bDrawTargetInfo = 0x23a; // bool
	}

	namespace n_UWBP_SeasonalChallengePanel_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto ButtonSwitcher = 0x528; // UWidgetSwitcher*
		constexpr auto chevron = 0x530; // UImage*
		constexpr auto chevron_2 = 0x538; // UImage*
		constexpr auto ChooseActiveMissionWrapper = 0x540; // UHorizontalBox*
		constexpr auto GamepadButton = 0x548; // USizeBox*
		constexpr auto WBP_ChallengeEntry_CardHorizontal = 0x550; // UWBP_ChallengeEntry_CardHorizontal_C*
		constexpr auto WBP_KeyCallout_4 = 0x558; // UWBP_KeyCallout_C*
	}

	namespace n_UKSLootSiteIconWidget {
		constexpr auto MarkedLootSite = 0x318; // AKSLootSiteBase*
	}

	namespace n_ULandscapeMaterialInstanceConstant {
		constexpr auto TextureStreamingInfo = 0x410; // TArray<FLandscapeMaterialTextureStreamingInfo>
		constexpr auto bIsLayerThumbnail = 0x420; // char : 1
		constexpr auto bDisableTessellation = 0x420; // char : 1
		constexpr auto bMobile = 0x420; // char : 1
		constexpr auto bEditorToolUsage = 0x420; // char : 1
	}

	namespace n_UWBP_TextInputButton_C {
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto EmailInputButtonWrapper = 0x528; // UButton*
		constexpr auto HoverBG = 0x530; // UImage*
		constexpr auto InputField = 0x538; // UEditableTextBox*
		constexpr auto HintText = 0x540; // FText
		constexpr auto OnTextChanged = 0x558; // FMulticastInlineDelegate
	}

	namespace n_ARogueScreenLobbyCharacter_C {
		constexpr auto UberGraphFrame = 0x3ee8; // FPointerToUberGraphFrame
	}

	namespace n_UWBP_PerkTierHeader_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto Image = 0x240; // UImage*
		constexpr auto Image_215 = 0x248; // UImage*
		constexpr auto TextBlock_116 = 0x250; // UTextBlock*
		constexpr auto PerkTier = 0x258; // int32_t
	}

	namespace n_UKSBTD_CheckUniqueAbilityType {
		constexpr auto AbilityValidatorTable = 0x68; // UDataTable*
		constexpr auto AbilityExecutionType = 0x70; // EAbilityExecutionType
	}

	namespace n_UBTNode {
		constexpr auto NodeName = 0x30; // FString
		constexpr auto TreeAsset = 0x40; // UBehaviorTree*
		constexpr auto ParentNode = 0x48; // UBTCompositeNode*
	}

	namespace n_UKSDamageTypeEMP {
		constexpr auto EMPDuration = 0x138; // float
	}

}