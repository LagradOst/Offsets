// Created by BlueFire1337
// Updated 2022-01-26
// Generated 2022-02-02

namespace off {
	constexpr auto GNames = 0x6654950;
	constexpr auto GObjects = 0x665ceb0;
	constexpr auto GWorld = 0x6754ad0;

	namespace n_UFriendListEntry { // : URootWidget
		constexpr auto m_GrayOutTextValue = 0x46c; // float
	}

	namespace n_UGuildViewBase { // : UWindowRoot
		constexpr auto m_LeaveGuildButton = 0x398; // UFCButton*
		constexpr auto m_ShowOffline = 0x3a0; // UFCButton*
		constexpr auto m_ButtonEditName = 0x3a8; // UFCButton*
		constexpr auto m_ShowOfflineMembersContainer = 0x3b0; // UWidget*
		constexpr auto m_GamepadCreateText = 0x3b8; // UActionTutorial*
		constexpr auto m_MouseCreateText = 0x3c0; // UTextBlock*
		constexpr auto m_TextGuildName = 0x3c8; // UFCEditableTextBox*
		constexpr auto m_Switcher = 0x3d0; // UWidgetSwitcher*
		constexpr auto m_GuildMembersList = 0x3d8; // UGuildMembersBase*
		constexpr auto m_GuildLog = 0x3e0; // UGuildLogBase*
		constexpr auto m_GuildBoard = 0x3e8; // UGuildBoardBase*
		constexpr auto BlockGuildInvitesButton = 0x3f0; // UFCButton*
		constexpr auto BlockGuildInvitesContainer = 0x3f8; // UWidget*
		constexpr auto m_Guild = 0x400; // AGuild*
		constexpr auto m_InviteMessageBox = 0x420; // UMessageBoxWidget*
		constexpr auto m_OwnedBuildings = 0x428; // UTextBlock*
		constexpr auto m_OwnedPlaceables = 0x430; // UTextBlock*
		constexpr auto m_OwnedBuildingsThrobber = 0x438; // UCircularThrobber*
		constexpr auto m_OwnedPlaceablesThrobber = 0x440; // UCircularThrobber*
	}

	namespace n_UBoxComponent { // : UShapeComponent
		constexpr auto BoxExtent = 0x6e0; // FVector
	}

	namespace n_UMaterialExpressionPreSkinnedPosition { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto Desc = 0x38; // FString
		constexpr auto BorderColor = 0x48; // FColor
		constexpr auto bRealtimePreview = 0x4c; // char : 1
		constexpr auto bNeedToUpdatePreview = 0x4c; // char : 1
		constexpr auto bIsParameterExpression = 0x4c; // char : 1
		constexpr auto bCommentBubbleVisible = 0x4c; // char : 1
		constexpr auto bShowOutputNameOnPin = 0x4c; // char : 1
		constexpr auto bHidePreviewWindow = 0x4c; // char : 1
		constexpr auto bCollapsed = 0x4c; // char : 1
		constexpr auto bShaderInputData = 0x4c; // char : 1
		constexpr auto bShowInputs = 0x4c; // char : 1
		constexpr auto bShowOutputs = 0x4c; // char : 1
		constexpr auto Outputs = 0x50; // TArray<FExpressionOutput>
	}

	namespace n_UInGameAdManager { // : UPlatformInterfaceBase
		constexpr auto bShouldPauseWhileAdOpen = 0x38; // char : 1
		constexpr auto ClickedBannerDelegates = 0x40; // TArray<DelegateProperty>
		constexpr auto ClosedAdDelegates = 0x50; // TArray<DelegateProperty>
	}

	namespace n_UAnimNotifyState_Trail { // : UAnimNotifyState
		constexpr auto PSTemplate = 0x30; // UParticleSystem*
		constexpr auto FirstSocketName = 0x38; // FName
		constexpr auto SecondSocketName = 0x40; // FName
		constexpr auto WidthScaleMode = 0x48; // ETrailWidthMode
		constexpr auto WidthScaleCurve = 0x50; // FName
		constexpr auto bRecycleSpawnedSystems = 0x58; // char : 1
	}

	namespace n_UEmoteController { // : UActorComponent
		constexpr auto CurrentEmote = 0xf8; // ECharacterEmotes
		constexpr auto CurrentEmoteAnimMontage = 0x100; // UAnimMontage*
		constexpr auto CurrentEmoteFlags = 0x108; // int32_t
		constexpr auto SignalEmoteStarted = 0x110; // FScriptMulticastDelegate
		constexpr auto m_ReplicatedEmote = 0x120; // int32_t
	}

	namespace n_UWebSocketConnection { // : UNetConnection
		constexpr auto Children = 0x48; // TArray<UChildConnection*>
		constexpr auto Driver = 0x58; // UNetDriver*
		constexpr auto PackageMap = 0x60; // UPackageMap*
		constexpr auto OpenChannels = 0x68; // TArray<UChannel*>
		constexpr auto SentTemporaries = 0x78; // TArray<AActor*>
		constexpr auto ViewTarget = 0x88; // AActor*
		constexpr auto OwningActor = 0x90; // AActor*
		constexpr auto MaxPacket = 0x98; // int32_t
		constexpr auto InternalAck = 0x9c; // char : 1
		constexpr auto AsyncLoadedObjects = 0xa0; // TArray<UObject*>
		constexpr auto PlayerId = 0x170; // FUniqueNetIdRepl
		constexpr auto LastReceiveTime = 0x200; // double
		constexpr auto ActorChannels = 0x334e0; // TMap<AActor*, UActorChannel*>
		constexpr auto ChannelsToTick = 0x33730; // TArray<UChannel*>
	}

	namespace n_UMaterialExpressionObjectBounds { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto Desc = 0x38; // FString
		constexpr auto BorderColor = 0x48; // FColor
		constexpr auto bRealtimePreview = 0x4c; // char : 1
		constexpr auto bNeedToUpdatePreview = 0x4c; // char : 1
		constexpr auto bIsParameterExpression = 0x4c; // char : 1
		constexpr auto bCommentBubbleVisible = 0x4c; // char : 1
		constexpr auto bShowOutputNameOnPin = 0x4c; // char : 1
		constexpr auto bHidePreviewWindow = 0x4c; // char : 1
		constexpr auto bCollapsed = 0x4c; // char : 1
		constexpr auto bShaderInputData = 0x4c; // char : 1
		constexpr auto bShowInputs = 0x4c; // char : 1
		constexpr auto bShowOutputs = 0x4c; // char : 1
		constexpr auto Outputs = 0x50; // TArray<FExpressionOutput>
	}

	namespace n_UAutomationTestSettings { // : UObject
		constexpr auto AutomationTestmap = 0x28; // FStringAssetReference
		constexpr auto EditorPerformanceTestMaps = 0x38; // TArray<FEditorMapPerformanceTestDefinition>
		constexpr auto BuildPromotionTest = 0x48; // FBuildPromotionTestSettings
		constexpr auto MaterialEditorPromotionTest = 0x238; // FMaterialEditorPromotionSettings
		constexpr auto ParticleEditorPromotionTest = 0x268; // FParticleEditorPromotionSettings
		constexpr auto BlueprintEditorPromotionTest = 0x278; // FBlueprintEditorPromotionSettings
		constexpr auto EngineTestModules = 0x2a8; // TArray<FString>
		constexpr auto EditorTestModules = 0x2b8; // TArray<FString>
		constexpr auto TestLevelFolders = 0x2c8; // TArray<FString>
		constexpr auto TestAssetsToOpen = 0x2d8; // TArray<FOpenTestAsset>
		constexpr auto ExternalTools = 0x2e8; // TArray<FExternalToolDefinition>
		constexpr auto ImportExportTestDefinitions = 0x2f8; // TArray<FEditorImportExportTestDefinition>
		constexpr auto LaunchOnSettings = 0x308; // TArray<FLaunchOnTestSettings>
		constexpr auto DefaultScreenshotResolution = 0x318; // FIntPoint
	}

	namespace n_URejoinCheck { // : UObject
		constexpr auto LastKnownStatus = 0x28; // ERejoinStatus
		constexpr auto bRejoinAfterCheck = 0x29; // bool
		constexpr auto bAttemptingRejoin = 0x2a; // bool
	}

	namespace n_UModDetailsRequest { // : UObject
		constexpr auto OnModDetailsRecieved = 0x28; // FScriptMulticastDelegate
	}

	namespace n_UMaterialExpressionDistanceToNearestSurface { // : UMaterialExpression
		constexpr auto Position = 0x60; // FExpressionInput
	}

	namespace n_UMaterialExpressionSetMaterialAttributes { // : UMaterialExpression
		constexpr auto Inputs = 0x60; // TArray<FExpressionInput>
		constexpr auto AttributeSetTypes = 0x70; // TArray<FGuid>
	}

	namespace n_UGameUserSettings { // : UObject
		constexpr auto bUseVSync = 0x28; // bool
		constexpr auto ResolutionSizeX = 0x80; // uint32_t
		constexpr auto ResolutionSizeY = 0x84; // uint32_t
		constexpr auto LastUserConfirmedResolutionSizeX = 0x88; // uint32_t
		constexpr auto LastUserConfirmedResolutionSizeY = 0x8c; // uint32_t
		constexpr auto WindowPosX = 0x90; // int32_t
		constexpr auto WindowPosY = 0x94; // int32_t
		constexpr auto FullscreenMode = 0x98; // int32_t
		constexpr auto LastConfirmedFullscreenMode = 0x9c; // int32_t
		constexpr auto PreferredFullscreenMode = 0xa0; // int32_t
		constexpr auto Version = 0xa4; // uint32_t
		constexpr auto AudioQualityLevel = 0xa8; // int32_t
		constexpr auto FrameRateLimit = 0xac; // float
		constexpr auto DesiredScreenWidth = 0xb4; // int32_t
		constexpr auto bUseDesiredScreenHeight = 0xb8; // bool
		constexpr auto DesiredScreenHeight = 0xbc; // int32_t
		constexpr auto LastRecommendedScreenWidth = 0xc0; // float
		constexpr auto LastRecommendedScreenHeight = 0xc4; // float
		constexpr auto LastCPUBenchmarkResult = 0xc8; // float
		constexpr auto LastGPUBenchmarkResult = 0xcc; // float
		constexpr auto LastCPUBenchmarkSteps = 0xd0; // TArray<float>
		constexpr auto LastGPUBenchmarkSteps = 0xe0; // TArray<float>
		constexpr auto LastGPUBenchmarkMultiplier = 0xf0; // float
		constexpr auto bUseHDRDisplayOutput = 0xf4; // bool
		constexpr auto HDRDisplayOutputNits = 0xf8; // int32_t
		constexpr auto OnGameUserSettingsUINeedsUpdate = 0x110; // FScriptMulticastDelegate
	}

	namespace n_UEnvQueryGenerator_Cone { // : UEnvQueryGenerator_ProjectedPoints
		constexpr auto AlignedPointsDistance = 0x80; // FAIDataProviderFloatValue
		constexpr auto ConeDegrees = 0xb0; // FAIDataProviderFloatValue
		constexpr auto AngleStep = 0xe0; // FAIDataProviderFloatValue
		constexpr auto range = 0x110; // FAIDataProviderFloatValue
		constexpr auto CenterActor = 0x140; // UEnvQueryContext*
		constexpr auto bIncludeContextLocation = 0x148; // char : 1
	}

	namespace n_UBTTask_MoveTo { // : UBTTask_BlackboardBase
		constexpr auto AcceptableRadius = 0x98; // float
		constexpr auto FilterClass = 0xa0; // UNavigationQueryFilter*
		constexpr auto ObservedBlackboardValueTolerance = 0xa8; // float
		constexpr auto bObserveBlackboardValue = 0xac; // char : 1
		constexpr auto bAllowStrafe = 0xac; // char : 1
		constexpr auto bAllowPartialPath = 0xac; // char : 1
		constexpr auto bTrackMovingGoal = 0xac; // char : 1
		constexpr auto bProjectGoalLocation = 0xac; // char : 1
		constexpr auto bStopOnOverlap = 0xac; // char : 1
	}

	namespace n_UExternalInventoryView { // : URootWidget
		constexpr auto CanItemBeDropedOn = 0x318; // bool
		constexpr auto SignalCouldNotDrop = 0x320; // FScriptMulticastDelegate
		constexpr auto DelegateGetTargetInventory = 0x330; // DelegateProperty
		constexpr auto m_Actor = 0x370; // AActor*
		constexpr auto m_Inventory = 0x378; // UItemInventory*
		constexpr auto m_TargetInventory = 0x380; // UItemInventory*
	}

	namespace n_UParticleModuleVectorFieldBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x28; // char : 1
		constexpr auto LODDuplicate = 0x28; // char : 1
		constexpr auto bSupportsRandomSeed = 0x28; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x28; // char : 1
		constexpr auto LODValidity = 0x2c; // char
	}

	namespace n_AOnlineBeacon { // : AActor
		constexpr auto BeaconConnectionInitialTimeout = 0x3d8; // float
		constexpr auto BeaconConnectionTimeout = 0x3dc; // float
		constexpr auto NetDriver = 0x3e0; // UNetDriver*
	}

	namespace n_UDialogueWave { // : UObject
		constexpr auto bMature = 0x28; // char : 1
		constexpr auto bOverride_SubtitleOverride = 0x28; // char : 1
		constexpr auto SpokenText = 0x30; // FString
		constexpr auto SubtitleOverride = 0x40; // FString
		constexpr auto ContextMappings = 0x50; // TArray<FDialogueContextMapping>
		constexpr auto LocalizationGUID = 0x60; // FGuid
	}

	namespace n_UW_RatingWidget_C { // : URatingWidgetBase
		constexpr auto RatingCategory = 0x338; // ERatingCategory
		constexpr auto CanBeChanged = 0x339; // bool
	}

	namespace n_USettingsKeyBindingsBase { // : USubSettingsMaster
		constexpr auto m_CategoryClass = 0x3a0; // UUserWidget*
		constexpr auto m_CategoriesTable = 0x3a8; // UDataTable*
	}

	namespace n_USiegeWeaponInventoryView { // : URootWidget
		constexpr auto CounterWeightInventory = 0x318; // UItemInventory*
		constexpr auto ProjectileInventory = 0x320; // UItemInventory*
	}

	namespace n_USkippableMovieBase { // : UWindowRoot
		constexpr auto SignalMovieFinished = 0x398; // FScriptMulticastDelegate
		constexpr auto m_MediaSound = 0x3a8; // UConanAudioComponent*
		constexpr auto m_MediaPlayer = 0x3c8; // UMediaPlayer*
	}

	namespace n_UParticleModuleBeamModifier { // : UParticleModuleBeamBase
		constexpr auto ModifierType = 0x30; // BeamModifierType
		constexpr auto PositionOptions = 0x34; // FBeamModifierOptions
		constexpr auto Position = 0x38; // FRawDistributionVector
		constexpr auto TangentOptions = 0x88; // FBeamModifierOptions
		constexpr auto Tangent = 0x90; // FRawDistributionVector
		constexpr auto bAbsoluteTangent = 0xe0; // char : 1
		constexpr auto StrengthOptions = 0xe4; // FBeamModifierOptions
		constexpr auto Strength = 0xe8; // FRawDistributionFloat
	}

	namespace n_AVaultManager { // : AActor
		constexpr auto OnVaultRefreshTimerStartedDelegate = 0x3d0; // FScriptMulticastDelegate
		constexpr auto OnVaultRefreshTimerEndedDelegate = 0x3e0; // FScriptMulticastDelegate
		constexpr auto OnVaultEnteredDelegate = 0x3f0; // FScriptMulticastDelegate
		constexpr auto OnVaultLockedDelegate = 0x400; // FScriptMulticastDelegate
		constexpr auto OnVaultUnlockedDelegate = 0x410; // FScriptMulticastDelegate
		constexpr auto VaultData = 0x420; // TArray<FVaultData>
		constexpr auto vaultsRefreshing = 0x430; // TArray<FVaultData>
		constexpr auto vaultActorsExhaustedStates = 0x440; // TArray<FVaultActorData>
		constexpr auto m_actorPersistenceComponent = 0x4f0; // UActorPersistenceComponent*
	}

	namespace n_UAnimCompress_RemoveTrivialKeys { // : UAnimCompress
		constexpr auto MaxPosDiff = 0x40; // float
		constexpr auto MaxAngleDiff = 0x44; // float
		constexpr auto MaxScaleDiff = 0x48; // float
	}

	namespace n_UHoudiniAssetComponent { // : UPrimitiveComponent
		constexpr auto bGeneratedDoubleSidedGeometry = 0x6c8; // char : 1
		constexpr auto GeneratedPhysMaterial = 0x6d0; // UPhysicalMaterial*
		constexpr auto GeneratedCollisionTraceFlag = 0x6d8; // ECollisionTraceFlag
		constexpr auto GeneratedLightMapResolution = 0x6dc; // int32_t
		constexpr auto GeneratedLpvBiasMultiplier = 0x6e0; // float
		constexpr auto GeneratedDistanceFieldResolutionScale = 0x6e4; // float
		constexpr auto GeneratedWalkableSlopeOverride = 0x6e8; // FWalkableSlopeOverride
		constexpr auto GeneratedLightMapCoordinateIndex = 0x6f8; // int32_t
		constexpr auto bGeneratedUseMaximumStreamingTexelRatio = 0x6fc; // char : 1
		constexpr auto GeneratedStreamingDistanceMultiplier = 0x700; // float
		constexpr auto GeneratedFoliageDefaultSettings = 0x708; // UFoliageType_InstancedStaticMesh*
		constexpr auto GeneratedAssetUserData = 0x710; // TArray<UAssetUserData*>
		constexpr auto BakeFolder = 0xb98; // FText
		constexpr auto TempCookFolder = 0xbb0; // FText
	}

	namespace n_UParticleModuleOrbitBase { // : UParticleModule
		constexpr auto bUseEmitterTime = 0x30; // char : 1
	}

	namespace n_UMapMarkerItem { // : UGameItem
		constexpr auto Icon = 0x248; // UTexture2D*
	}

	namespace n_UWrapBoxSlot { // : UPanelSlot
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto bFillEmptySpace = 0x48; // bool
		constexpr auto FillSpanWhenLessThan = 0x4c; // float
		constexpr auto HorizontalAlignment = 0x50; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x51; // EVerticalAlignment
	}

	namespace n_UInterpFilter_Custom { // : UInterpFilter
		constexpr auto Caption = 0x28; // FString
	}

	namespace n_UUpSellButtonbase { // : URootWidget
		constexpr auto m_DLCs = 0x318; // TArray<FDLCEntry>
		constexpr auto m_SavegameLoadedTimer = 0x328; // FTimerHandle
		constexpr auto m_SettingsGUIModule = 0x340; // UGUIModule*
	}

	namespace n_ALootContainer { // : AActor
		constexpr auto SpawnerID = 0x3e0; // UUniqueID*
		constexpr auto ContainerOwnerID = 0x3e8; // UUniqueID*
		constexpr auto bDecayed = 0x3f0; // bool
		constexpr auto m_InventoryMonitor = 0x3f8; // UItemInventoryClientMonitor*
		constexpr auto m_Inventory = 0x400; // UItemInventory*
	}

	namespace n_UPawnMovementComponent { // : UNavMovementComponent
		constexpr auto PawnOwner = 0x188; // APawn*
	}

	namespace n_UParticleModuleVectorFieldScaleOverLife { // : UParticleModuleVectorFieldBase
		constexpr auto VectorFieldScaleOverLife = 0x30; // UDistributionFloat*
		constexpr auto VectorFieldScaleOverLifeRaw = 0x38; // FRawDistributionFloat
	}

	namespace n_UW_HUD_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x240; // FPointerToUberGraphFrame
		constexpr auto HitConfirm = 0x248; // UWidgetAnimation*
		constexpr auto Crosshair = 0x250; // UImage*
		constexpr auto HitConfrim = 0x258; // UImage*
		constexpr auto LootLog = 0x260; // UW_HUD_LootLog_C*
		constexpr auto NotificationList = 0x268; // UW_HUD_NotificationList_C*
		constexpr auto LootLogPositionX = 0x270; // float
		constexpr auto LootLogPositionY = 0x274; // float
	}

	namespace n_AGameState { // : AGameStateBase
		constexpr auto MatchState = 0x410; // FName
		constexpr auto PreviousMatchState = 0x418; // FName
		constexpr auto ElapsedTime = 0x420; // int32_t
	}

	namespace n_UBlendSpaceBase { // : UAnimationAsset
		constexpr auto bRotationBlendInMeshSpace = 0x80; // bool
		constexpr auto AnimLength = 0x84; // float
		constexpr auto PerBoneBlend = 0x88; // TArray<FPerBoneInterpolation>
		constexpr auto InterpolationParam = 0x98; // FInterpolationParameter [0x3]
		constexpr auto TargetWeightInterpolationSpeedPerSec = 0xb0; // float
		constexpr auto NotifyTriggerMode = 0xb4; // ENotifyTriggerMode
		constexpr auto SampleIndexWithMarkers = 0xb8; // int32_t
		constexpr auto SampleData = 0xc0; // TArray<FBlendSample>
		constexpr auto GridSamples = 0xd0; // TArray<FEditorElement>
		constexpr auto BlendParameters = 0xe0; // FBlendParameter [0x3]
	}

	namespace n_AHoudiniAssetActor { // : AActor
		constexpr auto HoudiniAssetComponent = 0x3d0; // UHoudiniAssetComponent*
	}

	namespace n_UFloatBinding { // : UPropertyBinding
		constexpr auto SourceObject = 0x28; // TWeakObjectPtr<UObject>
		constexpr auto SourcePath = 0x30; // FDynamicPropertyPath
		constexpr auto DestinationProperty = 0x40; // FName
	}

	namespace n_UParticleModuleLocationEmitterDirect { // : UParticleModuleLocationBase
		constexpr auto EmitterName = 0x30; // FName
	}

	namespace n_UContextMenuBase { // : UWindowRoot
		constexpr auto SignalMenuClosed = 0x398; // FScriptMulticastDelegate
		constexpr auto m_ButtonClass = 0x3a8; // UFCButton*
		constexpr auto m_ButtonList = 0x3b0; // TArray<UFCButton*>
		constexpr auto NormalHovered = 0x3c0; // FSlateColor
		constexpr auto NormalColor = 0x3e8; // FSlateColor
		constexpr auto NormalPressedHovered = 0x410; // FSlateColor
		constexpr auto NormalPressed = 0x438; // FSlateColor
		constexpr auto m_MenuList = 0x460; // UNavigatableVerticalBox*
	}

	namespace n_UHUDCharacterStatIndicators { // : UWindowRoot
		constexpr auto m_Owner = 0x3e0; // AConanCharacter*
		constexpr auto m_Mount = 0x3e8; // AConanCharacter*
	}

	namespace n_UPlatformInterfaceWebResponse { // : UObject
		constexpr auto OriginalURL = 0x28; // FString
		constexpr auto ResponseCode = 0x38; // int32_t
		constexpr auto Tag = 0x3c; // int32_t
		constexpr auto StringResponse = 0x40; // FString
		constexpr auto BinaryResponse = 0x50; // TArray<char>
	}

	namespace n_UProgressionSystem { // : UConanCharacterComponent
		constexpr auto SignalUndistributedPointsChanged = 0x168; // FScriptMulticastDelegate
		constexpr auto SignalDistributedPointsChanged = 0x178; // FScriptMulticastDelegate
		constexpr auto SignalTotalPointsChanged = 0x188; // FScriptMulticastDelegate
	}

	namespace n_UNavigatableGridPanel { // : UNavigatableWidgetBase
		constexpr auto RowLength = 0x3a8; // int32_t
		constexpr auto ColumnFill = 0x3b0; // TArray<float>
		constexpr auto RowFill = 0x3c0; // TArray<float>
	}

	namespace n_UMaterialExpressionLandscapeGrassOutput { // : UMaterialExpressionCustomOutput
		constexpr auto GrassTypes = 0x60; // TArray<FGrassInput>
	}

	namespace n_UAsyncSpawnNPCProxy { // : UBlueprintAsyncActionBase
		constexpr auto SpawnSucceeded = 0x28; // FScriptMulticastDelegate
		constexpr auto SpawnFailed = 0x38; // FScriptMulticastDelegate
		constexpr auto SpawnTableId = 0x50; // FName
		constexpr auto SpawnTransform = 0x60; // FTransform
		constexpr auto bOverrideDefaultLOD = 0x90; // bool
		constexpr auto bForceLOD0 = 0x91; // bool
		constexpr auto IsWeightedTable = 0x9c; // bool
	}

	namespace n_UPerkSystemComponent { // : UActorComponent
		constexpr auto CombatStaminaRegenModifier = 0xf8; // float
	}

	namespace n_UMovieSceneCameraCutSection { // : UMovieSceneSection
		constexpr auto CameraGuid = 0xc8; // FGuid
	}

	namespace n_UGraniteTexture { // : UObject
		constexpr auto StreamingBias = 0x28; // float
		constexpr auto TileSet = 0x30; // UGraniteTileSet*
		constexpr auto StreamingTexture = 0x38; // FString
		constexpr auto LODBias = 0x48; // float
		constexpr auto lightMapFlags = 0x4c; // FGraniteLightmapFlags
		constexpr auto GTSFileName = 0xf0; // FString
		constexpr auto Guid = 0x100; // FGuid
	}

	namespace n_UParticleModuleOrbit { // : UParticleModuleOrbitBase
		constexpr auto ChainMode = 0x38; // EOrbitChainMode
		constexpr auto OffsetAmount = 0x40; // FRawDistributionVector
		constexpr auto OffsetOptions = 0x90; // FOrbitOptions
		constexpr auto RotationAmount = 0x98; // FRawDistributionVector
		constexpr auto RotationOptions = 0xe8; // FOrbitOptions
		constexpr auto RotationRateAmount = 0xf0; // FRawDistributionVector
		constexpr auto RotationRateOptions = 0x140; // FOrbitOptions
	}

	namespace n_UCharacterCustomizationComponent { // : UActorComponent
		constexpr auto Layout = 0xf8; // FCharacterLayout
		constexpr auto LayoutHash = 0x230; // int32_t
		constexpr auto Meshes = 0x238; // FCharacterResolvedMeshes
		constexpr auto MaterialParams = 0x288; // FCharacterMaterialParams
		constexpr auto Master = 0x3a0; // USkeletalMeshComponent*
		constexpr auto UseBoundsFromMaster = 0x3a8; // bool
		constexpr auto SkeletalMeshes = 0x3b0; // TArray<USkeletalMeshComponent*>
		constexpr auto Enabled = 0x3c0; // bool
	}

	namespace n_UEdGraphPin_Deprecated { // : UObject
		constexpr auto PinName = 0x28; // FString
		constexpr auto PinToolTip = 0x38; // FString
		constexpr auto Direction = 0x48; // EEdGraphPinDirection
		constexpr auto PinType = 0x50; // FEdGraphPinType
		constexpr auto DefaultValue = 0xd0; // FString
		constexpr auto AutogeneratedDefaultValue = 0xe0; // FString
		constexpr auto DefaultObject = 0xf0; // UObject*
		constexpr auto DefaultTextValue = 0xf8; // FText
		constexpr auto LinkedTo = 0x110; // TArray<UEdGraphPin_Deprecated*>
		constexpr auto SubPins = 0x120; // TArray<UEdGraphPin_Deprecated*>
		constexpr auto ParentPin = 0x130; // UEdGraphPin_Deprecated*
		constexpr auto ReferencePassThroughConnection = 0x138; // UEdGraphPin_Deprecated*
	}

	namespace n_UWmfMediaSettings { // : UObject
		constexpr auto AllowNonStandardCodecs = 0x28; // bool
		constexpr auto NativeAudioOut = 0x29; // bool
	}

	namespace n_UParticleModuleBeamNoise { // : UParticleModuleBeamBase
		constexpr auto bLowFreq_Enabled = 0x30; // char : 1
		constexpr auto Frequency = 0x34; // int32_t
		constexpr auto Frequency_LowRange = 0x38; // int32_t
		constexpr auto NoiseRange = 0x40; // FRawDistributionVector
		constexpr auto NoiseRangeScale = 0x90; // FRawDistributionFloat
		constexpr auto bNRScaleEmitterTime = 0xc8; // char : 1
		constexpr auto NoiseSpeed = 0xd0; // FRawDistributionVector
		constexpr auto bSmooth = 0x120; // char : 1
		constexpr auto NoiseLockRadius = 0x124; // float
		constexpr auto bNoiseLock = 0x128; // char : 1
		constexpr auto bOscillate = 0x128; // char : 1
		constexpr auto NoiseLockTime = 0x12c; // float
		constexpr auto NoiseTension = 0x130; // float
		constexpr auto bUseNoiseTangents = 0x134; // char : 1
		constexpr auto NoiseTangentStrength = 0x138; // FRawDistributionFloat
		constexpr auto NoiseTessellation = 0x170; // int32_t
		constexpr auto bTargetNoise = 0x174; // char : 1
		constexpr auto FrequencyDistance = 0x178; // float
		constexpr auto bApplyNoiseScale = 0x17c; // char : 1
		constexpr auto NoiseScale = 0x180; // FRawDistributionFloat
	}

	namespace n_UDragDropOperation { // : UObject
		constexpr auto Tag = 0x28; // FString
		constexpr auto Payload = 0x38; // UObject*
		constexpr auto DefaultDragVisual = 0x40; // UWidget*
		constexpr auto Pivot = 0x48; // EDragPivot
		constexpr auto Offset = 0x4c; // FVector2D
		constexpr auto OnDrop = 0x58; // FScriptMulticastDelegate
		constexpr auto OnDragCancelled = 0x68; // FScriptMulticastDelegate
		constexpr auto OnDragged = 0x78; // FScriptMulticastDelegate
	}

	namespace n_AInstancedFoliageActor { // : AActor
		constexpr auto ReplicatedRespawnParamsEncoded = 0x458; // TArray<char>
		constexpr auto FoliageComponents = 0x468; // TArray<UFoliageInstancedStaticMeshComponent*>
	}

	namespace n_UParticleModuleMeshRotationRateOverLife { // : UParticleModuleRotationRateBase
		constexpr auto RotRate = 0x30; // FRawDistributionVector
		constexpr auto bScaleRotRate = 0x80; // char : 1
	}

	namespace n_UMaterialExpressionLandscapeVisibilityMask { // : UMaterialExpression
		constexpr auto ExpressionGUID = 0x60; // FGuid
	}

	namespace n_USimpleWheeledVehicleMovementComponent { // : UWheeledVehicleMovementComponent
		constexpr auto bDeprecatedSpringOffsetMode = 0x198; // char : 1
		constexpr auto WheelSetups = 0x1a0; // TArray<FWheelSetup>
		constexpr auto Mass = 0x1b0; // float
		constexpr auto DragCoefficient = 0x1b4; // float
		constexpr auto ChassisWidth = 0x1b8; // float
		constexpr auto ChassisHeight = 0x1bc; // float
		constexpr auto bReverseAsBrake = 0x1c0; // bool
		constexpr auto DragArea = 0x1c4; // float
		constexpr auto EstimatedMaxEngineSpeed = 0x1c8; // float
		constexpr auto MaxEngineRPM = 0x1cc; // float
		constexpr auto DebugDragMagnitude = 0x1d0; // float
		constexpr auto InertiaTensorScale = 0x1d4; // FVector
		constexpr auto MinNormalizedTireLoad = 0x1e0; // float
		constexpr auto MinNormalizedTireLoadFiltered = 0x1e4; // float
		constexpr auto MaxNormalizedTireLoad = 0x1e8; // float
		constexpr auto MaxNormalizedTireLoadFiltered = 0x1ec; // float
		constexpr auto ThresholdLongitudinalSpeed = 0x1f0; // float
		constexpr auto LowForwardSpeedSubStepCount = 0x1f4; // int32_t
		constexpr auto HighForwardSpeedSubStepCount = 0x1f8; // int32_t
		constexpr auto Wheels = 0x200; // TArray<UVehicleWheel*>
		constexpr auto bUseRVOAvoidance = 0x228; // char : 1
		constexpr auto RVOAvoidanceRadius = 0x22c; // float
		constexpr auto RVOAvoidanceHeight = 0x230; // float
		constexpr auto AvoidanceConsiderationRadius = 0x234; // float
		constexpr auto RVOSteeringStep = 0x238; // float
		constexpr auto RVOThrottleStep = 0x23c; // float
		constexpr auto AvoidanceUID = 0x240; // int32_t
		constexpr auto AvoidanceGroup = 0x244; // FNavAvoidanceMask
		constexpr auto GroupsToAvoid = 0x248; // FNavAvoidanceMask
		constexpr auto GroupsToIgnore = 0x24c; // FNavAvoidanceMask
		constexpr auto AvoidanceWeight = 0x250; // float
		constexpr auto PendingLaunchVelocity = 0x254; // FVector
		constexpr auto ReplicatedState = 0x260; // FReplicatedVehicleState
		constexpr auto RawSteeringInput = 0x278; // float
		constexpr auto RawThrottleInput = 0x27c; // float
		constexpr auto RawBrakeInput = 0x280; // float
		constexpr auto bRawHandbrakeInput = 0x284; // char : 1
		constexpr auto bRawGearUpInput = 0x284; // char : 1
		constexpr auto bRawGearDownInput = 0x284; // char : 1
		constexpr auto SteeringInput = 0x288; // float
		constexpr auto ThrottleInput = 0x28c; // float
		constexpr auto BrakeInput = 0x290; // float
		constexpr auto HandbrakeInput = 0x294; // float
		constexpr auto IdleBrakeInput = 0x298; // float
		constexpr auto StopThreshold = 0x29c; // float
		constexpr auto WrongDirectionThreshold = 0x2a0; // float
		constexpr auto ThrottleInputRate = 0x2a4; // FVehicleInputRate
		constexpr auto BrakeInputRate = 0x2ac; // FVehicleInputRate
		constexpr auto HandbrakeInputRate = 0x2b4; // FVehicleInputRate
		constexpr auto SteeringInputRate = 0x2bc; // FVehicleInputRate
		constexpr auto bWasAvoidanceUpdated = 0x2c4; // char : 1
	}

	namespace n_UBTDecorator_BlackboardBase { // : UBTDecorator
		constexpr auto BlackboardKey = 0x68; // FBlackboardKeySelector
	}

	namespace n_UGraniteCookedModSettings { // : UObject
		constexpr auto DeletedTexturesInCookedBuild = 0x28; // TArray<FName>
	}

	namespace n_UMaterialExpressionPreSkinnedNormal { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto Desc = 0x38; // FString
		constexpr auto BorderColor = 0x48; // FColor
		constexpr auto bRealtimePreview = 0x4c; // char : 1
		constexpr auto bNeedToUpdatePreview = 0x4c; // char : 1
		constexpr auto bIsParameterExpression = 0x4c; // char : 1
		constexpr auto bCommentBubbleVisible = 0x4c; // char : 1
		constexpr auto bShowOutputNameOnPin = 0x4c; // char : 1
		constexpr auto bHidePreviewWindow = 0x4c; // char : 1
		constexpr auto bCollapsed = 0x4c; // char : 1
		constexpr auto bShaderInputData = 0x4c; // char : 1
		constexpr auto bShowInputs = 0x4c; // char : 1
		constexpr auto bShowOutputs = 0x4c; // char : 1
		constexpr auto Outputs = 0x50; // TArray<FExpressionOutput>
	}

	namespace n_UMovieSceneAudioTrack { // : UMovieSceneNameableTrack
		constexpr auto AudioSections = 0xb8; // TArray<UMovieSceneSection*>
	}

	namespace n_UParticleModuleCameraBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x28; // char : 1
		constexpr auto LODDuplicate = 0x28; // char : 1
		constexpr auto bSupportsRandomSeed = 0x28; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x28; // char : 1
		constexpr auto LODValidity = 0x2c; // char
	}

	namespace n_UMaterialExpressionFeatureLevelSwitch { // : UMaterialExpression
		constexpr auto Default = 0x60; // FExpressionInput
		constexpr auto Inputs = 0x98; // FExpressionInput [0x4]
	}

	namespace n_UMovieSceneVisibilityTrack { // : UMovieSceneBoolTrack
		constexpr auto PropertyName = 0xb8; // FName
		constexpr auto PropertyPath = 0xc0; // FString
		constexpr auto Sections = 0xd0; // TArray<UMovieSceneSection*>
	}

	namespace n_UMaterialFunction { // : UObject
		constexpr auto StateId = 0x28; // FGuid
		constexpr auto Description = 0x38; // FString
		constexpr auto bExposeToLibrary = 0x48; // char : 1
		constexpr auto FunctionExpressions = 0x50; // TArray<UMaterialExpression*>
		constexpr auto bReentrantFlag = 0x60; // char : 1
	}

	namespace n_UAISenseConfig_Damage { // : UAISenseConfig
		constexpr auto Implementation = 0x48; // UAISense_Damage*
	}

	namespace n_UNavLinkComponent { // : UPrimitiveComponent
		constexpr auto Links = 0x6c8; // TArray<FNavigationLink>
	}

	namespace n_UConanCharacterComponent { // : UActorComponent
		constexpr auto PrimaryComponentTick = 0x30; // FActorComponentTickFunction
		constexpr auto ComponentTags = 0x88; // TArray<FName>
		constexpr auto AssetUserData = 0x98; // TArray<UAssetUserData*>
		constexpr auto bReplicates = 0xa8; // char : 1
		constexpr auto bIsClientOnly = 0xa8; // char : 1
		constexpr auto bNetAddressable = 0xa8; // char : 1
		constexpr auto bAllowAnyoneToDestroyMe = 0xa8; // char : 1
		constexpr auto bCreatedByConstructionScript = 0xa8; // char : 1
		constexpr auto bInstanceComponent = 0xa8; // char : 1
		constexpr auto bAutoActivate = 0xa8; // char : 1
		constexpr auto bIsActive = 0xa8; // char : 1
		constexpr auto bEditableWhenInherited = 0xa8; // char : 1
		constexpr auto bCanEverAffectNavigation = 0xa8; // char : 1
		constexpr auto bIsEditorOnly = 0xa8; // char : 1
		constexpr auto CreationMethod = 0xb1; // EComponentCreationMethod
		constexpr auto UCSModifiedProperties = 0xc0; // TArray<FSimpleMemberReference>
		constexpr auto OnComponentActivated = 0xd0; // FScriptMulticastDelegate
		constexpr auto OnComponentDeactivated = 0xe0; // FScriptMulticastDelegate
	}

	namespace n_UFeatResultRecipeInfoView { // : URootWidget
		constexpr auto m_Item = 0x318; // URecipeItem*
	}

	namespace n_UEnvQueryNode { // : UObject
		constexpr auto VerNum = 0x28; // int32_t
	}

	namespace n_UInputActionDelegateBinding { // : UInputDelegateBinding
		constexpr auto InputActionDelegateBindings = 0x28; // TArray<FBlueprintInputActionDelegateBinding>
	}

	namespace n_UConanBTTask_ConanMoveTo { // : UBTTask_MoveTo
		constexpr auto MoveSpeedPercentageRange = 0xb0; // FVector2D
		constexpr auto bIntermediatePathsIfCantReachTarget = 0xb8; // bool
	}

	namespace n_USoundNodeBranch { // : USoundNode
		constexpr auto BoolParameterName = 0x38; // FName
	}

	namespace n_UWorldComposition { // : UObject
		constexpr auto TilesStreaming = 0x48; // TArray<ULevelStreaming*>
		constexpr auto TilesStreamingTimeThreshold = 0x58; // double
		constexpr auto bLoadAllTilesDuringCinematic = 0x60; // bool
		constexpr auto bRebaseOriginIn3DSpace = 0x61; // bool
		constexpr auto RebaseOriginDistance = 0x64; // float
	}

	namespace n_UMaterialSwapComponent { // : UActorComponent
		constexpr auto highQualityMaterial = 0x100; // UMaterialInterface*
		constexpr auto lowQualityMaterial = 0x120; // UMaterialInterface*
	}

	namespace n_UHotkeyIcon { // : URootWidget
		constexpr auto GamepadKey = 0x318; // FKey
		constexpr auto BindingLabel = 0x330; // FText
		constexpr auto BindingLabelFormat = 0x348; // FText
		constexpr auto InputActionName = 0x360; // FName
		constexpr auto ShowOnlyGamepadIcon = 0x368; // bool
		constexpr auto IconSize = 0x36c; // float
		constexpr auto Font = 0x370; // FSlateFontInfo
	}

	namespace n_UMovieScene3DPathSection { // : UMovieScene3DConstraintSection
		constexpr auto TimingCurve = 0xd8; // FRichCurve
		constexpr auto FrontAxisEnum = 0x148; // MovieScene3DPathSection_Axis
		constexpr auto UpAxisEnum = 0x149; // MovieScene3DPathSection_Axis
		constexpr auto bFollow = 0x14c; // char : 1
		constexpr auto bReverse = 0x14c; // char : 1
		constexpr auto bForceUpright = 0x14c; // char : 1
	}

	namespace n_UMaterialExpressionSpriteTextureSampler { // : UMaterialExpressionTextureSampleParameter2D
		constexpr auto bSampleAdditionalTextures = 0x1b8; // bool
		constexpr auto AdditionalSlotIndex = 0x1bc; // int32_t
		constexpr auto SlotDisplayName = 0x1c0; // FText
	}

	namespace n_UPatchNotesEntryView { // : URootWidget
		constexpr auto TextColorDate = 0x318; // FLinearColor
		constexpr auto TextColorTitle = 0x328; // FLinearColor
		constexpr auto TextColorNote = 0x338; // FLinearColor
		constexpr auto AnimationSelected = 0x348; // UWidgetAnimation*
		constexpr auto AnimationDeselected = 0x350; // UWidgetAnimation*
	}

	namespace n_UMovieSceneComponentMaterialTrack { // : UMovieSceneMaterialTrack
		constexpr auto MaterialIndex = 0xc8; // int32_t
	}

	namespace n_AEmitter { // : AActor
		constexpr auto ParticleSystemComponent = 0x3d0; // UParticleSystemComponent*
		constexpr auto bDestroyOnSystemFinish = 0x3d8; // char : 1
		constexpr auto bPostUpdateTickGroup = 0x3d8; // char : 1
		constexpr auto bCurrentlyActive = 0x3d8; // char : 1
		constexpr auto OnParticleSpawn = 0x3e0; // FScriptMulticastDelegate
		constexpr auto OnParticleBurst = 0x3f0; // FScriptMulticastDelegate
		constexpr auto OnParticleDeath = 0x400; // FScriptMulticastDelegate
		constexpr auto OnParticleCollide = 0x410; // FScriptMulticastDelegate
	}

	namespace n_UPawnAction_Sequence { // : UPawnAction
		constexpr auto ActionSequence = 0xd0; // TArray<UPawnAction*>
		constexpr auto ChildFailureHandlingMode = 0xe0; // EPawnActionFailHandling
		constexpr auto RecentActionCopy = 0xe8; // UPawnAction*
	}

	namespace n_UPasswordDialogBase { // : UWindowRoot
		constexpr auto SignalBack = 0x398; // FScriptMulticastDelegate
		constexpr auto SignalOk = 0x3a8; // FScriptMulticastDelegate
		constexpr auto m_Session = 0x430; // FBlueprintSessionResult
	}

	namespace n_UTimelineTemplate { // : UObject
		constexpr auto TimelineLength = 0x28; // float
		constexpr auto LengthMode = 0x2c; // ETimelineLengthMode
		constexpr auto bAutoPlay = 0x30; // char : 1
		constexpr auto bLoop = 0x30; // char : 1
		constexpr auto bReplicated = 0x30; // char : 1
		constexpr auto bValidatedAsWired = 0x30; // char : 1
		constexpr auto bIgnoreTimeDilation = 0x30; // char : 1
		constexpr auto EventTracks = 0x38; // TArray<FTTEventTrack>
		constexpr auto FloatTracks = 0x48; // TArray<FTTFloatTrack>
		constexpr auto VectorTracks = 0x58; // TArray<FTTVectorTrack>
		constexpr auto LinearColorTracks = 0x68; // TArray<FTTLinearColorTrack>
		constexpr auto MetaDataArray = 0x78; // TArray<FBPVariableMetaDataEntry>
		constexpr auto TimelineGuid = 0x88; // FGuid
	}

	namespace n_ULevelScriptBlueprint { // : UBlueprint
		constexpr auto bRecompileOnLoad = 0x50; // char : 1
		constexpr auto ParentClass = 0x58; // UObject*
		constexpr auto PRIVATE_InnermostPreviousCDO = 0x60; // UObject*
		constexpr auto bHasBeenRegenerated = 0x68; // char : 1
		constexpr auto bIsRegeneratingOnLoad = 0x68; // char : 1
		constexpr auto SimpleConstructionScript = 0x70; // USimpleConstructionScript*
		constexpr auto ComponentTemplates = 0x78; // TArray<UActorComponent*>
		constexpr auto Timelines = 0x88; // TArray<UTimelineTemplate*>
		constexpr auto InheritableComponentHandler = 0x98; // UInheritableComponentHandler*
		constexpr auto BlueprintType = 0xa0; // EBlueprintType
		constexpr auto BlueprintSystemVersion = 0xa4; // int32_t
		constexpr auto bNativize = 0x190; // bool
	}

	namespace n_UW_ServerSetting_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x240; // FPointerToUberGraphFrame
		constexpr auto Dot = 0x248; // UImage*
		constexpr auto setting = 0x250; // UTextBlock*
	}

	namespace n_UParticleModuleKillHeight { // : UParticleModuleKillBase
		constexpr auto Height = 0x30; // FRawDistributionFloat
		constexpr auto bAbsolute = 0x68; // char : 1
		constexpr auto bFloor = 0x68; // char : 1
		constexpr auto bApplyPSysScale = 0x68; // char : 1
	}

	namespace n_UDestructibleMesh { // : USkeletalMesh
		constexpr auto DefaultDestructibleParameters = 0x2c0; // FDestructibleParameters
		constexpr auto FractureEffects = 0x348; // TArray<FFractureEffect>
	}

	namespace n_UTargetDistributionComponent { // : UActorComponent
		constexpr auto OnTargetChanged = 0xf8; // FScriptMulticastDelegate
		constexpr auto OnTargetAcquired = 0x108; // FScriptMulticastDelegate
		constexpr auto OnTargetLost = 0x118; // FScriptMulticastDelegate
		constexpr auto IgnoreCommunities = 0x128; // TArray<int32_t>
		constexpr auto AttackCommunities = 0x138; // TArray<int32_t>
		constexpr auto FriendlyCommunities = 0x148; // TArray<int32_t>
		constexpr auto HateData = 0x158; // TMap<EHateType, FHateData>
		constexpr auto HateList = 0x1a8; // TArray<FTargetData>
		constexpr auto IgnoreCharactersList = 0x1b8; // TArray<AConanCharacter*>
		constexpr auto OwnerController = 0x1c8; // AConanBasicAIController*
		constexpr auto OwnerAttackerController = 0x1d0; // AConanAttackerAIController*
		constexpr auto OwnerCharacter = 0x1d8; // AConanCharacter*
		constexpr auto InitialProxHateForBuildings = 0x1e0; // float
		constexpr auto InitialOrderHate = 0x1e4; // float
		constexpr auto CachedTarget = 0x1e8; // FTargetWrapper
	}

	namespace n_UUserDefinedEnum { // : UEnum
		constexpr auto DisplayNameMap = 0x60; // TMap<FName, FText>
	}

	namespace n_AAILODSystem { // : AActor
		constexpr auto ActiveLODComponents = 0x4b8; // TArray<UAILODComponent*>
		constexpr auto m_AILODComponents = 0x4c8; // TArray<UAILODComponent*>
		constexpr auto MarkedForAdd = 0x4d8; // TSet<UAILODComponent*>
		constexpr auto m_SuspendCallbacks = 0x578; // TMap<UAILODComponent*, FSuspendCallbackComponentEntry>
		constexpr auto m_LODCounter = 0x6a0; // TArray<int32_t>
		constexpr auto m_DebugAILODs = 0x6b0; // TArray<FAILODInfo>
		constexpr auto m_ShowAILOD = 0x6c0; // char : 1
	}

	namespace n_URendererOverrideSettings { // : UDeveloperSettings
		constexpr auto bSupportAllShaderPermutations = 0x38; // char : 1
	}

	namespace n_UAsyncLineTraceByChannelProxy { // : UBlueprintAsyncActionBase
		constexpr auto OnCompletion = 0x28; // FScriptMulticastDelegate
	}

	namespace n_UInvalidationBox { // : UContentWidget
		constexpr auto bCanCache = 0x130; // bool
		constexpr auto CacheRelativeTransforms = 0x131; // bool
	}

	namespace n_ULandscapeMeshProxyComponent { // : UStaticMeshComponent
		constexpr auto LandscapeGuid = 0x828; // FGuid
		constexpr auto ProxyComponentBases = 0x838; // TArray<FIntPoint>
		constexpr auto ProxyLOD = 0x848; // uint8_t
	}

	namespace n_APointLight { // : ALight
		constexpr auto PointLightComponent = 0x3e0; // UPointLightComponent*
	}

	namespace n_UMovieSceneCameraCutTrack { // : UMovieSceneNameableTrack
		constexpr auto Sections = 0xb8; // TArray<UMovieSceneSection*>
	}

	namespace n_UWindowTitleBarArea { // : UContentWidget
		constexpr auto bDoubleClickTogglesFullscreen = 0x130; // bool
	}

	namespace n_UAdjustableCameraComponent { // : UCameraComponent
		constexpr auto PerspectiveNearClipPlane = 0x850; // float
	}

	namespace n_UMovementComponent { // : UActorComponent
		constexpr auto UpdatedComponent = 0xf8; // USceneComponent*
		constexpr auto UpdatedPrimitive = 0x100; // UPrimitiveComponent*
		constexpr auto Velocity = 0x10c; // FVector
		constexpr auto AngularVelocity = 0x118; // FVector
		constexpr auto bConstrainToPlane = 0x124; // char : 1
		constexpr auto bSnapToPlaneAtStart = 0x124; // char : 1
		constexpr auto PlaneConstraintAxisSetting = 0x128; // EPlaneConstraintAxisSetting
		constexpr auto PlaneConstraintNormal = 0x12c; // FVector
		constexpr auto PlaneConstraintOrigin = 0x138; // FVector
		constexpr auto bUpdateOnlyIfRendered = 0x144; // char : 1
		constexpr auto bAutoUpdateTickRegistration = 0x144; // char : 1
		constexpr auto bTickBeforeOwner = 0x144; // char : 1
		constexpr auto bAutoRegisterUpdatedComponent = 0x144; // char : 1
	}

	namespace n_UInterpTrackInstDirector { // : UInterpTrackInst
		constexpr auto OldViewTarget = 0x28; // AActor*
	}

	namespace n_UHungerSystem { // : UConanCharacterComponent
		constexpr auto SignalHungerChanged = 0x100; // FScriptMulticastDelegate
		constexpr auto SignalThirstChanged = 0x110; // FScriptMulticastDelegate
		constexpr auto IsFoodDepleted = 0x120; // bool
		constexpr auto IsDrinkDepleted = 0x121; // bool
	}

	namespace n_AGameplayScheduler { // : AActor
		constexpr auto PrePhysics = 0x3d0; // UGameplayTickGroupScheduler*
		constexpr auto DuringPhysics = 0x3d8; // UGameplayTickGroupScheduler*
		constexpr auto PostPhysics = 0x3e0; // UGameplayTickGroupScheduler*
		constexpr auto PostUpdateWork = 0x3e8; // UGameplayTickGroupScheduler*
		constexpr auto LastDemotable = 0x3f0; // UGameplayTickGroupScheduler*
	}

	namespace n_ULightComponent { // : ULightComponentBase
		constexpr auto Temperature = 0x328; // float
		constexpr auto MaxDrawDistance = 0x32c; // float
		constexpr auto MaxDistanceFadeRange = 0x330; // float
		constexpr auto bUseTemperature = 0x334; // char : 1
		constexpr auto ShadowMapChannel = 0x338; // int32_t
		constexpr auto MinRoughness = 0x340; // float
		constexpr auto ShadowResolutionScale = 0x344; // float
		constexpr auto ShadowBias = 0x348; // float
		constexpr auto ShadowSharpen = 0x34c; // float
		constexpr auto ContactShadowLength = 0x350; // float
		constexpr auto InverseSquaredFalloff = 0x354; // char : 1
		constexpr auto CastTranslucentShadows = 0x354; // char : 1
		constexpr auto bCastShadowsFromCinematicObjectsOnly = 0x354; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x354; // char : 1
		constexpr auto LightingChannels = 0x358; // FLightingChannels
		constexpr auto LightFunctionMaterial = 0x360; // UMaterialInterface*
		constexpr auto LightFunctionScale = 0x368; // FVector
		constexpr auto IESTexture = 0x378; // UTextureLightProfile*
		constexpr auto bUseIESBrightness = 0x380; // char : 1
		constexpr auto IESBrightnessScale = 0x384; // float
		constexpr auto LightFunctionFadeDistance = 0x388; // float
		constexpr auto DisabledBrightness = 0x38c; // float
		constexpr auto bEnableLightShaftBloom = 0x390; // char : 1
		constexpr auto BloomScale = 0x394; // float
		constexpr auto BloomThreshold = 0x398; // float
		constexpr auto BloomTint = 0x39c; // FColor
		constexpr auto bUseRayTracedDistanceFieldShadows = 0x3a0; // bool
		constexpr auto RayStartOffsetDepthScale = 0x3a4; // float
	}

	namespace n_APurgeSystem { // : AActor
		constexpr auto OnPurgeMeterUpdated = 0x3d0; // FScriptMulticastDelegate
		constexpr auto OnPurgeStarted = 0x3e0; // FScriptMulticastDelegate
		constexpr auto OnPurgeFailed = 0x3f0; // FScriptMulticastDelegate
		constexpr auto OnPurgeEnded = 0x400; // FScriptMulticastDelegate
		constexpr auto OnPurgeWindowUpdated = 0x410; // FScriptMulticastDelegate
		constexpr auto PurgeVolume = 0x428; // APurgeVolume*
		constexpr auto PurgableBuildings = 0x4b8; // TArray<ABuildingBase*>
		constexpr auto ClanPurgeValues = 0x4c8; // TMap<int64_t, FClanData>
		constexpr auto CurrentPurgeBuilding = 0x520; // ABuildingBase*
	}

	namespace n_UCircularProgressbar { // : URootWidget
		constexpr auto progress = 0x318; // float
		constexpr auto SegmentSpacing = 0x31c; // float
		constexpr auto StartAngle = 0x320; // float
		constexpr auto AngleSpan = 0x324; // float
		constexpr auto InnerRadius = 0x328; // float
		constexpr auto OuterRadius = 0x32c; // float
		constexpr auto IconBrush = 0x330; // FSlateBrush
		constexpr auto IconColorAndOpacity = 0x3c0; // FLinearColor
		constexpr auto TextureEmpty = 0x3d0; // UTexture2D*
		constexpr auto ColorAndOpacityEmpty = 0x3d8; // FLinearColor
		constexpr auto Segments = 0x3e8; // TArray<FCircularProgressbarSegment>
	}

	namespace n_ADestructibleActor { // : AActor
		constexpr auto DestructibleComponent = 0x3d0; // UDestructibleComponent*
		constexpr auto bAffectNavigation = 0x3d8; // char : 1
		constexpr auto OnActorFracture = 0x3e0; // FScriptMulticastDelegate
	}

	namespace n_UGuildBoardBase { // : URootWidget
		constexpr auto m_GuildMembersList = 0x318; // UGuildMembersBase*
		constexpr auto m_GuildLog = 0x320; // UGuildLogBase*
	}

	namespace n_UAIDataProvider_Random { // : UAIDataProvider_QueryParams
		constexpr auto Min = 0x40; // float
		constexpr auto Max = 0x44; // float
		constexpr auto bInteger = 0x48; // char : 1
	}

	namespace n_UGeometryCacheTrack_FlipbookAnimation { // : UGeometryCacheTrack
		constexpr auto NumMeshSamples = 0x50; // uint32_t
	}

	namespace n_UMovieScenePropertyTrack { // : UMovieSceneNameableTrack
		constexpr auto PropertyName = 0xb8; // FName
		constexpr auto PropertyPath = 0xc0; // FString
		constexpr auto Sections = 0xd0; // TArray<UMovieSceneSection*>
	}

	namespace n_UConanAudioComponent { // : UAudioComponent
		constexpr auto SoundAsset = 0x5b0; // USoundBase*
		constexpr auto CachedMaxAudibleDistance = 0x5d0; // float
		constexpr auto bUseAttachParentMobility = 0x5d4; // char : 1
		constexpr auto bUsesTimeOfDay = 0x5d4; // char : 1
	}

	namespace n_UGameplayTasksComponent { // : UActorComponent
		constexpr auto SimulatedTasks = 0x100; // TArray<UGameplayTask*>
		constexpr auto TaskPriorityQueue = 0x110; // TArray<UGameplayTask*>
		constexpr auto TickingTasks = 0x130; // TArray<UGameplayTask*>
		constexpr auto OnClaimedResourcesChange = 0x148; // FScriptMulticastDelegate
	}

	namespace n_ULevelActorContainer { // : UObject
		constexpr auto Actors = 0x28; // TArray<AActor*>
	}

	namespace n_USoundNodeDistanceCrossFade { // : USoundNode
		constexpr auto CrossFadeInput = 0x38; // TArray<FDistanceDatum>
	}

	namespace n_UGridSlot { // : UPanelSlot
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
		constexpr auto Row = 0x4c; // int32_t
		constexpr auto RowSpan = 0x50; // int32_t
		constexpr auto Column = 0x54; // int32_t
		constexpr auto ColumnSpan = 0x58; // int32_t
		constexpr auto Layer = 0x5c; // int32_t
		constexpr auto Nudge = 0x60; // FVector2D
	}

	namespace n_URetainerBox { // : UContentWidget
		constexpr auto Phase = 0x130; // int32_t
		constexpr auto PhaseCount = 0x134; // int32_t
		constexpr auto EffectMaterial = 0x138; // UMaterialInterface*
		constexpr auto TextureParameter = 0x140; // FName
	}

	namespace n_UParticleModuleAccelerationConstant { // : UParticleModuleAccelerationBase
		constexpr auto Acceleration = 0x38; // FVector
	}

	namespace n_UConanAITask_Move { // : UAITask_MoveTo
		constexpr auto OnRequestFailed = 0x70; // FScriptMulticastDelegate
		constexpr auto OnMoveFinished = 0x80; // FScriptMulticastDelegate
		constexpr auto MoveRequest = 0x90; // FAIMoveRequest
	}

	namespace n_ANavigationData { // : AActor
		constexpr auto RenderingComp = 0x3d0; // UPrimitiveComponent*
		constexpr auto NavDataConfig = 0x3d8; // FNavDataConfig
		constexpr auto bEnableDrawing = 0x428; // char : 1
		constexpr auto bForceRebuildOnLoad = 0x428; // char : 1
		constexpr auto bCanBeMainNavData = 0x428; // char : 1
		constexpr auto bCanSpawnOnRebuild = 0x428; // char : 1
		constexpr auto bRebuildAtRuntime = 0x428; // char : 1
		constexpr auto RuntimeGeneration = 0x42c; // ERuntimeGenerationType
		constexpr auto ObservedPathsTickInterval = 0x430; // float
		constexpr auto DataVersion = 0x434; // uint32_t
		constexpr auto SupportedAreas = 0x508; // TArray<FSupportedAreaData>
	}

	namespace n_UMaterialExpressionAtmosphericLightColor { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto Desc = 0x38; // FString
		constexpr auto BorderColor = 0x48; // FColor
		constexpr auto bRealtimePreview = 0x4c; // char : 1
		constexpr auto bNeedToUpdatePreview = 0x4c; // char : 1
		constexpr auto bIsParameterExpression = 0x4c; // char : 1
		constexpr auto bCommentBubbleVisible = 0x4c; // char : 1
		constexpr auto bShowOutputNameOnPin = 0x4c; // char : 1
		constexpr auto bHidePreviewWindow = 0x4c; // char : 1
		constexpr auto bCollapsed = 0x4c; // char : 1
		constexpr auto bShaderInputData = 0x4c; // char : 1
		constexpr auto bShowInputs = 0x4c; // char : 1
		constexpr auto bShowOutputs = 0x4c; // char : 1
		constexpr auto Outputs = 0x50; // TArray<FExpressionOutput>
	}

	namespace n_UThrallHungerSystemComponent { // : UHungerSystem
		constexpr auto StrongBuffThreshold = 0x128; // float
		constexpr auto HasStrongBuffFood = 0x12c; // char : 1
		constexpr auto HasWeakBuffFood = 0x12c; // char : 1
		constexpr auto HasFood = 0x12c; // char : 1
	}

	namespace n_UGameItemSpawner { // : UBlueprintFunctionLibrary
		constexpr auto m_PreLoadedItemClasses = 0x28; // TMap<FString, UObject*>
		constexpr auto m_RewardsTable = 0x118; // UDataTable*
		constexpr auto m_RecipeLookup = 0x2b8; // URecipeLookup*
		constexpr auto m_ItemTableAccessor = 0x2c0; // UTemplateIdTableAccessor*
		constexpr auto m_RecipeTableAccessor = 0x2c8; // UTemplateIdTableAccessor*
		constexpr auto m_EmoteTableAccessor = 0x2d0; // UTemplateIdTableAccessor*
		constexpr auto m_FeatTableAccessor = 0x2d8; // UTemplateIdTableAccessor*
		constexpr auto m_CraftingStationTableAccessor = 0x2e0; // UTemplateIdTableAccessor*
		constexpr auto m_DyeItemTableAccessor = 0x2e8; // UTemplateIdTableAccessor*
		constexpr auto m_EquipmentVariationTableAccessor = 0x2f0; // UTemplateIdTableAccessor*
		constexpr auto m_ItemStatModificationTableAccessor = 0x2f8; // UTemplateIdTableAccessor*
		constexpr auto m_ArtisanItemStatModTableAccessor = 0x300; // UTemplateIdTableAccessor*
		constexpr auto m_GameItemVersionDataTableAccessor = 0x308; // UTemplateIdTableAccessor*
		constexpr auto m_ExilesJourneyTableAccessor = 0x310; // UTemplateIdTableAccessor*
		constexpr auto m_SaddleTableAccessor = 0x318; // UTemplateIdTableAccessor*
	}

	namespace n_AAtmosphericFog { // : AInfo
		constexpr auto AtmosphericFogComponent = 0x3d0; // UAtmosphericFogComponent*
	}

	namespace n_UPartyGameState { // : UObject
		constexpr auto PartyStateRefDef = 0x28; // UScriptStruct*
		constexpr auto OwningUserId = 0x38; // FUniqueNetIdRepl
		constexpr auto bDebugAcceptingMembers = 0x168; // bool
		constexpr auto bStayWithPartyOnDisconnect = 0x181; // bool
		constexpr auto PartyMemberStateClass = 0x188; // UPartyMemberState*
		constexpr auto ReservationBeaconClientClass = 0x2c8; // APartyBeaconClient*
		constexpr auto ReservationBeaconClient = 0x2d0; // APartyBeaconClient*
	}

	namespace n_UParticleModuleVelocityOverLifetime { // : UParticleModuleVelocityBase
		constexpr auto VelOverLife = 0x38; // FRawDistributionVector
		constexpr auto Absolute = 0x88; // char : 1
	}

	namespace n_AEnergyReceiverRegistry { // : AActor
		constexpr auto EnergyListeners = 0x3d0; // TArray<UEnergyReceiverComponent*>
	}

	namespace n_UW_RadialMenuSegment_C { // : URadialMenuSegment
		constexpr auto EndCapRenderer = 0x360; // UImage*
		constexpr auto IconView = 0x368; // UImage*
		constexpr auto IconWidgetContainer = 0x370; // UNamedSlot*
		constexpr auto PieRenderer = 0x378; // UPieRenderWidget*
		constexpr auto StartCapRenderer = 0x380; // UImage*
	}

	namespace n_UIpNetDriver { // : UNetDriver
		constexpr auto LogPortUnreach = 0x4f8; // char : 1
		constexpr auto AllowPlayerPortUnreach = 0x4f8; // char : 1
		constexpr auto MaxPortCountToTry = 0x4fc; // uint32_t
	}

	namespace n_UEditableGameplayTagQueryExpression_NoExprMatch { // : UEditableGameplayTagQueryExpression
		constexpr auto Expressions = 0x28; // TArray<UEditableGameplayTagQueryExpression*>
	}

	namespace n_UPointLightComponent { // : ULightComponent
		constexpr auto Radius = 0x430; // float
		constexpr auto AttenuationRadius = 0x434; // float
		constexpr auto bUseInverseSquaredFalloff = 0x438; // char : 1
		constexpr auto LightFalloffExponent = 0x43c; // float
		constexpr auto SourceRadius = 0x440; // float
		constexpr auto SourceLength = 0x444; // float
		constexpr auto LightmassSettings = 0x448; // FLightmassPointLightSettings
	}

	namespace n_UFCEditableTextBase { // : URootWidget
		constexpr auto KeyNavOnSelectedEvent = 0x240; // FScriptMulticastDelegate
		constexpr auto KeyNavLeft = 0x250; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavRight = 0x258; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavAbove = 0x260; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavBelow = 0x268; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavTab = 0x270; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildLeft = 0x278; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildRight = 0x280; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildAbove = 0x288; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildBelow = 0x290; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildTab = 0x298; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildren = 0x2a0; // TWeakObjectPtr<URootWidget>
		constexpr auto TooltipWidgetClass = 0x2a8; // UTooltipWidget*
		constexpr auto KeyNavIndicatorClass = 0x2b0; // UKeyNavIndicator*
		constexpr auto PositiveFeedbackColor = 0x2b8; // FLinearColor
		constexpr auto NegativeFeedbackColor = 0x2c8; // FLinearColor
		constexpr auto NeutralFeedbackColor = 0x2d8; // FLinearColor
		constexpr auto KeyNavFocusOnClick = 0x2e8; // bool
		constexpr auto KeyNavAutoSetBack = 0x2e9; // bool
		constexpr auto m_Window = 0x2f0; // UWindowRoot*
		constexpr auto m_Parent = 0x2f8; // TWeakObjectPtr<URootWidget>
		constexpr auto m_KeyNavIndicator = 0x300; // UKeyNavIndicator*
	}

	namespace n_UMaterialExpressionActorPositionWS { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto Desc = 0x38; // FString
		constexpr auto BorderColor = 0x48; // FColor
		constexpr auto bRealtimePreview = 0x4c; // char : 1
		constexpr auto bNeedToUpdatePreview = 0x4c; // char : 1
		constexpr auto bIsParameterExpression = 0x4c; // char : 1
		constexpr auto bCommentBubbleVisible = 0x4c; // char : 1
		constexpr auto bShowOutputNameOnPin = 0x4c; // char : 1
		constexpr auto bHidePreviewWindow = 0x4c; // char : 1
		constexpr auto bCollapsed = 0x4c; // char : 1
		constexpr auto bShaderInputData = 0x4c; // char : 1
		constexpr auto bShowInputs = 0x4c; // char : 1
		constexpr auto bShowOutputs = 0x4c; // char : 1
		constexpr auto Outputs = 0x50; // TArray<FExpressionOutput>
	}

	namespace n_UMovieScene2DTransformTrack { // : UMovieScenePropertyTrack
		constexpr auto PropertyName = 0xb8; // FName
		constexpr auto PropertyPath = 0xc0; // FString
		constexpr auto Sections = 0xd0; // TArray<UMovieSceneSection*>
	}

	namespace n_UMaterialExpressionSquareRoot { // : UMaterialExpression
		constexpr auto Input = 0x60; // FExpressionInput
	}

	namespace n_UPlayerMarkerDialog { // : UWindowRoot
		constexpr auto Icons = 0x398; // TArray<UTexture2D*>
	}

	namespace n_APrecomputedVisibilityVolume { // : AVolume
		constexpr auto BrushType = 0x3d0; // EBrushType
		constexpr auto BrushColor = 0x3d4; // FColor
		constexpr auto PolyFlags = 0x3d8; // int32_t
		constexpr auto bColored = 0x3dc; // char : 1
		constexpr auto bSolidWhenSelected = 0x3dc; // char : 1
		constexpr auto bPlaceableFromClassBrowser = 0x3dc; // char : 1
		constexpr auto bNotForClientOrServer = 0x3dc; // char : 1
		constexpr auto Brush = 0x3e0; // UModel*
		constexpr auto BrushComponent = 0x3e8; // UBrushComponent*
		constexpr auto bInManipulation = 0x3f0; // char : 1
		constexpr auto SavedSelections = 0x3f8; // TArray<FGeomSelection>
	}

	namespace n_UMaterialExpressionTextureSampleParameter { // : UMaterialExpressionTextureSample
		constexpr auto ParameterName = 0x198; // FName
		constexpr auto ExpressionGUID = 0x1a0; // FGuid
		constexpr auto Group = 0x1b0; // FName
	}

	namespace n_UAISense_Damage { // : UAISense
		constexpr auto RegisteredEvents = 0x120; // TArray<FAIDamageEvent>
	}

	namespace n_UEnvQueryInstanceBlueprintWrapper { // : UObject
		constexpr auto QueryID = 0x30; // int32_t
		constexpr auto ItemType = 0x58; // UEnvQueryItemType*
		constexpr auto OptionIndex = 0x60; // int32_t
		constexpr auto OnQueryFinishedEvent = 0x68; // FScriptMulticastDelegate
	}

	namespace n_UModMenuBase { // : UWindowRoot
		constexpr auto CloseOnClick = 0x318; // bool
		constexpr auto BlockPlayerInput = 0x319; // bool
		constexpr auto OpeningSlateSound = 0x320; // FSlateSound
		constexpr auto ClosingSlateSound = 0x338; // FSlateSound
		constexpr auto SignalClosing = 0x350; // FScriptMulticastDelegate
		constexpr auto SignalOpened = 0x360; // FScriptMulticastDelegate
		constexpr auto m_WindowHotkeys = 0x370; // TArray<FGamepadHotkeyHelp>
		constexpr auto m_InputComponent = 0x380; // UInputComponent*
		constexpr auto m_GUIModule = 0x388; // UGUIModule*
	}

	namespace n_UParticleModuleVelocity { // : UParticleModuleVelocityBase
		constexpr auto StartVelocity = 0x38; // FRawDistributionVector
		constexpr auto StartVelocityRadial = 0x88; // FRawDistributionFloat
	}

	namespace n_UPanelSlot { // : UVisual
		constexpr auto Parent = 0x28; // UPanelWidget*
		constexpr auto Content = 0x30; // UWidget*
	}

	namespace n_UAvoidanceComponent { // : UActorComponent
		constexpr auto NotifyApproachRange = 0xf8; // float
	}

	namespace n_UAdminPanelBase { // : UWindowRoot
		constexpr auto CloseOnClick = 0x318; // bool
		constexpr auto BlockPlayerInput = 0x319; // bool
		constexpr auto OpeningSlateSound = 0x320; // FSlateSound
		constexpr auto ClosingSlateSound = 0x338; // FSlateSound
		constexpr auto SignalClosing = 0x350; // FScriptMulticastDelegate
		constexpr auto SignalOpened = 0x360; // FScriptMulticastDelegate
		constexpr auto m_WindowHotkeys = 0x370; // TArray<FGamepadHotkeyHelp>
		constexpr auto m_InputComponent = 0x380; // UInputComponent*
		constexpr auto m_GUIModule = 0x388; // UGUIModule*
	}

	namespace n_UPaperTerrainSplineComponent { // : USplineComponent
		constexpr auto SplineCurves = 0x6c0; // FSplineCurves
		constexpr auto SplineInfo = 0x720; // FInterpCurveVector
		constexpr auto SplineRotInfo = 0x738; // FInterpCurveQuat
		constexpr auto SplineScaleInfo = 0x750; // FInterpCurveVector
		constexpr auto SplineReparamTable = 0x768; // FInterpCurveFloat
		constexpr auto bAllowSplineEditingPerInstance = 0x780; // bool
		constexpr auto ReparamStepsPerSegment = 0x784; // int32_t
		constexpr auto Duration = 0x788; // float
		constexpr auto bStationaryEndpoints = 0x78c; // bool
		constexpr auto bSplineHasBeenEdited = 0x78d; // bool
		constexpr auto bModifiedByConstructionScript = 0x78e; // bool
		constexpr auto bInputSplinePointsToConstructionScript = 0x78f; // bool
		constexpr auto bDrawDebug = 0x790; // bool
		constexpr auto bClosedLoop = 0x791; // bool
		constexpr auto bLoopPositionOverride = 0x792; // bool
		constexpr auto LoopPosition = 0x794; // float
		constexpr auto DefaultUpVector = 0x798; // FVector
	}

	namespace n_UNavArea_Obstacle { // : UNavArea
		constexpr auto DefaultCost = 0x28; // float
		constexpr auto FixedAreaEnteringCost = 0x2c; // float
		constexpr auto DrawColor = 0x30; // FColor
		constexpr auto SupportedAgents = 0x34; // FNavAgentSelector
		constexpr auto bSupportsAgent0 = 0x38; // char : 1
		constexpr auto bSupportsAgent1 = 0x38; // char : 1
		constexpr auto bSupportsAgent2 = 0x38; // char : 1
		constexpr auto bSupportsAgent3 = 0x38; // char : 1
		constexpr auto bSupportsAgent4 = 0x38; // char : 1
		constexpr auto bSupportsAgent5 = 0x38; // char : 1
		constexpr auto bSupportsAgent6 = 0x38; // char : 1
		constexpr auto bSupportsAgent7 = 0x38; // char : 1
		constexpr auto bSupportsAgent8 = 0x38; // char : 1
		constexpr auto bSupportsAgent9 = 0x38; // char : 1
		constexpr auto bSupportsAgent10 = 0x38; // char : 1
		constexpr auto bSupportsAgent11 = 0x38; // char : 1
		constexpr auto bSupportsAgent12 = 0x38; // char : 1
		constexpr auto bSupportsAgent13 = 0x38; // char : 1
		constexpr auto bSupportsAgent14 = 0x38; // char : 1
		constexpr auto bSupportsAgent15 = 0x38; // char : 1
	}

	namespace n_UAnimCompress_RemoveEverySecondKey { // : UAnimCompress
		constexpr auto MinKeys = 0x40; // int32_t
		constexpr auto bStartAtSecondKey = 0x44; // char : 1
	}

	namespace n_UMaterialExpressionParticleRelativeTime { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto Desc = 0x38; // FString
		constexpr auto BorderColor = 0x48; // FColor
		constexpr auto bRealtimePreview = 0x4c; // char : 1
		constexpr auto bNeedToUpdatePreview = 0x4c; // char : 1
		constexpr auto bIsParameterExpression = 0x4c; // char : 1
		constexpr auto bCommentBubbleVisible = 0x4c; // char : 1
		constexpr auto bShowOutputNameOnPin = 0x4c; // char : 1
		constexpr auto bHidePreviewWindow = 0x4c; // char : 1
		constexpr auto bCollapsed = 0x4c; // char : 1
		constexpr auto bShaderInputData = 0x4c; // char : 1
		constexpr auto bShowInputs = 0x4c; // char : 1
		constexpr auto bShowOutputs = 0x4c; // char : 1
		constexpr auto Outputs = 0x50; // TArray<FExpressionOutput>
	}

	namespace n_UMaterialExpressionMultiply { // : UMaterialExpression
		constexpr auto A = 0x60; // FExpressionInput
		constexpr auto B = 0x98; // FExpressionInput
		constexpr auto ConstA = 0xd0; // float
		constexpr auto ConstB = 0xd4; // float
	}

	namespace n_UEditableGameplayTagQueryExpression_AnyTagsMatch { // : UEditableGameplayTagQueryExpression
		constexpr auto Tags = 0x28; // FGameplayTagContainer
	}

	namespace n_UBookMark { // : UObject
		constexpr auto Location = 0x28; // FVector
		constexpr auto Rotation = 0x34; // FRotator
		constexpr auto HiddenLevels = 0x40; // TArray<FString>
	}

	namespace n_UMovieSceneCinematicShotSection { // : UMovieSceneSubSection
		constexpr auto DisplayName = 0x130; // FText
	}

	namespace n_UConanGameViewportClient { // : UGameViewportClient
		constexpr auto ViewportConsole = 0x38; // UConsole*
		constexpr auto DebugProperties = 0x40; // TArray<FDebugDisplayProperty>
		constexpr auto World = 0x90; // UWorld*
		constexpr auto GameInstance = 0x98; // UGameInstance*
	}

	namespace n_UAnimComposite { // : UAnimCompositeBase
		constexpr auto AnimationTrack = 0xa0; // FAnimTrack
	}

	namespace n_UFCEditableMultiLineText { // : UFCEditableTextBase
		constexpr auto Text = 0x338; // FText
		constexpr auto KeyboardTitle = 0x350; // FText
		constexpr auto KeyboardDescription = 0x368; // FText
		constexpr auto KeyboardLayout = 0x380; // EVirtualKeyboardLayout
		constexpr auto WidgetStyle = 0x388; // FTextBlockStyle
		constexpr auto HintText = 0x590; // FText
		constexpr auto HintTextDelegate = 0x5a8; // DelegateProperty
		constexpr auto IsReadOnly = 0x5b8; // bool
		constexpr auto IsPassword = 0x5b9; // bool
		constexpr auto MinimumDesiredWidth = 0x5bc; // float
		constexpr auto TextMaxLength = 0x5c0; // int32_t
		constexpr auto IsCaretMovedWhenGainFocus = 0x5c4; // bool
		constexpr auto SelectAllTextWhenFocused = 0x5c5; // bool
		constexpr auto RevertTextOnEscape = 0x5c6; // bool
		constexpr auto ClearKeyboardFocusOnCommit = 0x5c7; // bool
		constexpr auto SelectAllTextOnCommit = 0x5c8; // bool
		constexpr auto AllowContextMenu = 0x5c9; // bool
		constexpr auto ShapedTextOptions = 0x5cc; // FShapedTextOptions
		constexpr auto Justification = 0x5d4; // ETextJustify
		constexpr auto AutoWrapText = 0x5d5; // bool
		constexpr auto WrapTextAt = 0x5d8; // float
		constexpr auto WrappingPolicy = 0x5dc; // ETextWrappingPolicy
		constexpr auto Margin = 0x5e0; // FMargin
		constexpr auto LineHeightPercentage = 0x5f0; // float
		constexpr auto PressedSound = 0x5f8; // USoundBase*
		constexpr auto HoveredSound = 0x618; // USoundBase*
		constexpr auto OnTextChanged = 0x638; // FScriptMulticastDelegate
		constexpr auto OnTextCommitted = 0x648; // FScriptMulticastDelegate
		constexpr auto OnMaxLengthExceeded = 0x658; // FScriptMulticastDelegate
		constexpr auto OnTextReceivedFocus = 0x668; // FScriptMulticastDelegate
	}

	namespace n_ADWGameState { // : AGameState
		constexpr auto SoundStageClassName = 0x430; // FStringClassReference
		constexpr auto ListenServerHostPlayer = 0x440; // APlayerState*
		constexpr auto SoundStage = 0x448; // ASoundStage*
		constexpr auto m_ServiceActors = 0x450; // TMap<UObject*, AActor*>
		constexpr auto CacheModule = 0x4a0; // ACacheModule*
	}

	namespace n_UMaterialExpressionTruncate { // : UMaterialExpression
		constexpr auto Input = 0x60; // FExpressionInput
	}

	namespace n_UMaterialExpressionFunctionOutput { // : UMaterialExpression
		constexpr auto OutputName = 0x60; // FString
		constexpr auto Description = 0x70; // FString
		constexpr auto SortPriority = 0x80; // int32_t
		constexpr auto A = 0x88; // FExpressionInput
		constexpr auto bLastPreviewed = 0xc0; // char : 1
		constexpr auto ID = 0xc4; // FGuid
	}

	namespace n_AConanBaseAIController { // : AAIController
		constexpr auto NavMeshIgnoreComponentUpdate = 0x528; // bool
		constexpr auto NavMeshIgnoreChildComponentUpdate = 0x529; // bool
		constexpr auto DeferredBTAsset = 0x530; // UBehaviorTree*
	}

	namespace n_AServerSettings { // : AInfo
		constexpr auto BlueprintConfigVersion = 0x3e8; // int32_t
		constexpr auto ConfigVersion = 0x3ec; // int32_t
		constexpr auto serverRegion = 0x3f0; // EServerRegion
		constexpr auto PVPEnabled = 0x3f1; // bool
		constexpr auto RestrictPVPTime = 0x3f2; // bool
		constexpr auto RestrictPVPBuildingDamageTime = 0x3f3; // bool
		constexpr auto PVPTimeMondayStart = 0x3f4; // int32_t
		constexpr auto PVPTimeTuesdayStart = 0x3f8; // int32_t
		constexpr auto PVPTimeWednesdayStart = 0x3fc; // int32_t
		constexpr auto PVPTimeThursdayStart = 0x400; // int32_t
		constexpr auto PVPTimeFridayStart = 0x404; // int32_t
		constexpr auto PVPTimeSaturdayStart = 0x408; // int32_t
		constexpr auto PVPTimeSundayStart = 0x40c; // int32_t
		constexpr auto PVPTimeMondayEnd = 0x410; // int32_t
		constexpr auto PVPTimeTuesdayEnd = 0x414; // int32_t
		constexpr auto PVPTimeWednesdayEnd = 0x418; // int32_t
		constexpr auto PVPTimeThursdayEnd = 0x41c; // int32_t
		constexpr auto PVPTimeFridayEnd = 0x420; // int32_t
		constexpr auto PVPTimeSaturdayEnd = 0x424; // int32_t
		constexpr auto PVPTimeSundayEnd = 0x428; // int32_t
		constexpr auto PVPEnabledMonday = 0x42c; // bool
		constexpr auto PVPEnabledTuesday = 0x42d; // bool
		constexpr auto PVPEnabledWednesday = 0x42e; // bool
		constexpr auto PVPEnabledThursday = 0x42f; // bool
		constexpr auto PVPEnabledFriday = 0x430; // bool
		constexpr auto PVPEnabledSaturday = 0x431; // bool
		constexpr auto PVPEnabledSunday = 0x432; // bool
		constexpr auto PVPBuildingDamageTimeMondayStart = 0x434; // int32_t
		constexpr auto PVPBuildingDamageTimeTuesdayStart = 0x438; // int32_t
		constexpr auto PVPBuildingDamageTimeWednesdayStart = 0x43c; // int32_t
		constexpr auto PVPBuildingDamageTimeThursdayStart = 0x440; // int32_t
		constexpr auto PVPBuildingDamageTimeFridayStart = 0x444; // int32_t
		constexpr auto PVPBuildingDamageTimeSaturdayStart = 0x448; // int32_t
		constexpr auto PVPBuildingDamageTimeSundayStart = 0x44c; // int32_t
		constexpr auto PVPBuildingDamageTimeMondayEnd = 0x450; // int32_t
		constexpr auto PVPBuildingDamageTimeTuesdayEnd = 0x454; // int32_t
		constexpr auto PVPBuildingDamageTimeWednesdayEnd = 0x458; // int32_t
		constexpr auto PVPBuildingDamageTimeThursdayEnd = 0x45c; // int32_t
		constexpr auto PVPBuildingDamageTimeFridayEnd = 0x460; // int32_t
		constexpr auto PVPBuildingDamageTimeSaturdayEnd = 0x464; // int32_t
		constexpr auto PVPBuildingDamageTimeSundayEnd = 0x468; // int32_t
		constexpr auto PVPBuildingDamageEnabledMonday = 0x46c; // bool
		constexpr auto PVPBuildingDamageEnabledTuesday = 0x46d; // bool
		constexpr auto PVPBuildingDamageEnabledWednesday = 0x46e; // bool
		constexpr auto PVPBuildingDamageEnabledThursday = 0x46f; // bool
		constexpr auto PVPBuildingDamageEnabledFriday = 0x470; // bool
		constexpr auto PVPBuildingDamageEnabledSaturday = 0x471; // bool
		constexpr auto PVPBuildingDamageEnabledSunday = 0x472; // bool
		constexpr auto DisableBuildingDuringTimeRestrictedPVP = 0x473; // bool
		constexpr auto VocalVisibilityDurationInMinutes = 0x474; // int32_t
		constexpr auto CombatModeModifier = 0x478; // ECombatModeModifier
		constexpr auto NoOwnership = 0x479; // bool
		constexpr auto ContainersIgnoreOwnership = 0x47a; // bool
		constexpr auto LandClaimRadiusMultiplier = 0x47c; // float
		constexpr auto DisableLandclaimNotifications = 0x480; // bool
		constexpr auto BuildingPreloadRadius = 0x484; // float
		constexpr auto CanDamagePlayerOwnedStructures = 0x488; // bool
		constexpr auto DynamicBuildingDamage = 0x489; // bool
		constexpr auto DynamicBuildingDamagePeriod = 0x48c; // int32_t
		constexpr auto ServerPassword = 0x490; // FString
		constexpr auto AdminPassword = 0x4a0; // FString
		constexpr auto ServerMessageOfTheDay = 0x4b0; // FString
		constexpr auto LogoutCharactersRemainInTheWorld = 0x4c0; // bool
		constexpr auto KickAFKPercentage = 0x4c4; // int32_t
		constexpr auto KickAFKTime = 0x4c8; // int32_t
		constexpr auto OfflinePlayersUnconsciousBodiesHours = 0x4cc; // int32_t
		constexpr auto DurabilityMultiplier = 0x4d0; // float
		constexpr auto DropEquipmentOnDeath = 0x4d4; // bool
		constexpr auto EverybodyCanLootCorpse = 0x4d5; // bool
		constexpr auto CorpsesPerPlayer = 0x4d8; // int32_t
		constexpr auto PlayerCorpseLifeTime = 0x4dc; // float
		constexpr auto NPCCorpseLifeTime = 0x4e0; // float
		constexpr auto MaxPlayerCorpsesInArea = 0x4e4; // int32_t
		constexpr auto PlayerCorpsesAreaRadiusCheckedOnDeath = 0x4e8; // float
		constexpr auto ItemConvertionMultiplier = 0x4ec; // float
		constexpr auto ThrallConversionMultiplier = 0x4f0; // float
		constexpr auto FuelBurnTimeMultiplier = 0x4f4; // float
		constexpr auto CraftingCostMultiplier = 0x4f8; // float
		constexpr auto TetheringMinLimit = 0x4fc; // float
		constexpr auto TetheringMaxLimit = 0x500; // float
		constexpr auto CoopTetheringLimit = 0x504; // float
		constexpr auto TetheringRangeDelta = 0x508; // float
		constexpr auto DayCycleSpeedScale = 0x50c; // float
		constexpr auto DayTimeSpeedScale = 0x510; // float
		constexpr auto NightTimeSpeedScale = 0x514; // float
		constexpr auto DawnDuskSpeedScale = 0x518; // float
		constexpr auto ClientCatchUpTime = 0x51c; // float
		constexpr auto UseClientCatchUpTime = 0x520; // bool
		constexpr auto PlayerHealthMultiplier = 0x524; // float
		constexpr auto PlayerStaminaMultiplier = 0x528; // float
		constexpr auto StaminaCostMultiplier = 0x52c; // float
		constexpr auto StaminaRegenerationTime = 0x530; // float
		constexpr auto StaminaExhaustionTime = 0x534; // float
		constexpr auto StaminaStaticRegenRateMultiplier = 0x538; // float
		constexpr auto StaminaMovingRegenRateMultiplier = 0x53c; // float
		constexpr auto PlayerStaminaRegenSpeedScale = 0x540; // float
		constexpr auto StaminaOnConsumeRegenPause = 0x544; // float
		constexpr auto StaminaOnExhaustionRegenPause = 0x548; // float
		constexpr auto ThrallScoutingTimeMinutes = 0x54c; // float
		constexpr auto ThrallMinDistanceAwayFromHome = 0x550; // float
		constexpr auto ThrallTeleportingCooldown = 0x554; // float
		constexpr auto MinionPopulationBaseValue = 0x558; // int32_t
		constexpr auto MinionPopulationPerPlayer = 0x55c; // int32_t
		constexpr auto MinionOverpopulationCleanup = 0x560; // int32_t
		constexpr auto MinionOverpopulationAllowed = 0x564; // int32_t
		constexpr auto UseMinionPopulationLimit = 0x568; // bool
		constexpr auto EnableFollowerRescueOnLandClaimOnly = 0x569; // bool
		constexpr auto EnableFollowerRescueInBuildExclusionZone = 0x56a; // bool
		constexpr auto FollowerRescueCooldown = 0x56c; // int32_t
		constexpr auto DamageCooldownBeforeRescue = 0x570; // int32_t
		constexpr auto ThrallCorruptionRemovalMultiplier = 0x574; // float
		constexpr auto PlayerCorruptionGainMultiplier = 0x578; // float
		constexpr auto AnimalPenCraftingTimeMultiplier = 0x57c; // float
		constexpr auto FeedBoxRangeMultiplier = 0x580; // float
		constexpr auto ItemSpoilRateScale = 0x584; // float
		constexpr auto HarvestAmountMultiplier = 0x588; // float
		constexpr auto ResourceRespawnSpeedMultiplier = 0x58c; // float
		constexpr auto BuildingDamageMultiplier = 0x590; // float
		constexpr auto PlayerBuildingDamageMultiplier = 0x594; // float
		constexpr auto NPCMindReadingMode = 0x598; // ENPCMindReadingMode
		constexpr auto PathFollowingSendsAngularVelocity = 0x599; // bool
		constexpr auto UnconsciousTimeSeconds = 0x59c; // float
		constexpr auto ConciousnessDamageMultiplier = 0x5a0; // float
		constexpr auto ThrallDamageToPlayersMultiplier = 0x5a4; // float
		constexpr auto ThrallDamageToNPCsMultiplier = 0x5a8; // float
		constexpr auto DisableBuildingAbandonment = 0x5ac; // bool
		constexpr auto OverrideDecayMaxBuildingPieces = 0x5b0; // int32_t
		constexpr auto OverrideDecayTime = 0x5b4; // int32_t
		constexpr auto MaxBuildingDecayTime = 0x5b8; // float
		constexpr auto MaxDecayTimeToAutoDemolish = 0x5bc; // float
		constexpr auto ThrallDecayTime = 0x5c0; // float
		constexpr auto DisableThrallDecay = 0x5c4; // bool
		constexpr auto BuildingDecayTimePerScore = 0x5c8; // float
		constexpr auto BuildingDecayTimeMultiplier = 0x5cc; // float
		constexpr auto DecayCleanupTimeMultiplier = 0x5d0; // float
		constexpr auto DecayBonusTimeRate = 0x5d4; // float
		constexpr auto DecayShowBuildingScore = 0x5d8; // bool
		constexpr auto EnableAutoFacingOnAttack = 0x5d9; // bool
		constexpr auto EnableTargetLock = 0x5da; // bool
		constexpr auto CachedPVPEnabled = 0x5db; // bool
		constexpr auto CachedDisableBuildingAbandonment = 0x5dc; // bool
		constexpr auto CachedNoOwnership = 0x5dd; // bool
		constexpr auto CachedLandClaimRadiusMultiplier = 0x5e0; // float
		constexpr auto ValidatePhysNavWalkWithRaycast = 0x5e4; // bool
		constexpr auto LocalNavMeshVisualizationFrequency = 0x5e8; // float
		constexpr auto LocalLandClaimVisualizationFrequency = 0x5ec; // float
		constexpr auto LocalLandClaimVisualizationRadius = 0x5f0; // int32_t
		constexpr auto LocalLandClaimVisualizationChannel = 0x5f4; // ClaimChannel
		constexpr auto UseLocalQuadraticAngularVelocityPrediction = 0x5f5; // bool
		constexpr auto LQAVPUseTime = 0x5f8; // float
		constexpr auto LQAVPFadeTime = 0x5fc; // float
		constexpr auto LQAVPMethod = 0x600; // ELQAVPMethod
		constexpr auto NetworkSimulatedSmoothRotationTimeWithLQAVP = 0x604; // float
		constexpr auto MaxNudity = 0x608; // ENudity
		constexpr auto ServerCommunity = 0x609; // EServerCommunity
		constexpr auto clanMaxSize = 0x60c; // int32_t
		constexpr auto EnableClanMarkers = 0x610; // bool
		constexpr auto IsLoadErrorsFatal = 0x611; // bool
		constexpr auto ValidatePlayerStats = 0x612; // bool
		constexpr auto AllowedTimeUndermesh = 0x614; // float
		constexpr auto AllowedDistanceUndermeshSquared = 0x618; // float
		constexpr auto CapCharacterLayoutScalarParams = 0x61c; // bool
		constexpr auto FeatsBlacklist = 0x620; // TArray<FString>
		constexpr auto ServerBlacklistedFeatIDs = 0x630; // TArray<int32_t>
		constexpr auto BuildingPVPWhitelist = 0x640; // TArray<FString>
		constexpr auto ServerBuildingPVPWhitelistIDs = 0x650; // TArray<int32_t>
		constexpr auto ChatHasGlobal = 0x660; // bool
		constexpr auto ChatLocalRadius = 0x664; // float
		constexpr auto ChatMaxMessageLength = 0x668; // int32_t
		constexpr auto ChatFloodControlAheadCounter = 0x66c; // int32_t
		constexpr auto EventLogCauserPrivacy = 0x670; // EGameEventCauserPrivacy
		constexpr auto serverVoiceChat = 0x671; // EServerVoiceChat
		constexpr auto EnableSandStorm = 0x672; // bool
		constexpr auto AvatarsDisabled = 0x673; // bool
		constexpr auto RestrictAvatarSummoningTime = 0x674; // bool
		constexpr auto AvatarSummoningTimeWeekdayStart = 0x678; // int32_t
		constexpr auto AvatarSummoningTimeWeekdayEnd = 0x67c; // int32_t
		constexpr auto AvatarSummoningTimeWeekendStart = 0x680; // int32_t
		constexpr auto AvatarSummoningTimeWeekendEnd = 0x684; // int32_t
		constexpr auto AvatarLifetime = 0x688; // float
		constexpr auto AvatarSummonTime = 0x68c; // float
		constexpr auto MaxDeathMapMarkers = 0x690; // int32_t
		constexpr auto IsBattlEyeEnabled = 0x694; // bool
		constexpr auto IsVACEnabled = 0x695; // bool
		constexpr auto ServerTransferEnabled = 0x696; // bool
		constexpr auto CanImportDirectlyFromSameServer = 0x697; // bool
		constexpr auto ServerTransferServersWhitelist = 0x698; // TArray<FString>
		constexpr auto MaxAllowedPing = 0x6ac; // int32_t
		constexpr auto EnableWhitelist = 0x6b0; // bool
		constexpr auto EnableBanCheck = 0x6b1; // bool
		constexpr auto AllowFamilySharedAccount = 0x6b2; // bool
		constexpr auto RegionAllowAfrica = 0x6b3; // bool
		constexpr auto RegionAllowAsia = 0x6b4; // bool
		constexpr auto RegionAllowCentralEurope = 0x6b5; // bool
		constexpr auto RegionAllowEasternEurope = 0x6b6; // bool
		constexpr auto RegionAllowWesternEurope = 0x6b7; // bool
		constexpr auto RegionAllowNorthAmerica = 0x6b8; // bool
		constexpr auto RegionAllowOceania = 0x6b9; // bool
		constexpr auto RegionAllowSouthAmerica = 0x6ba; // bool
		constexpr auto RegionBlockList = 0x6c0; // FString
		constexpr auto ServerModList = 0x6d0; // FString
		constexpr auto IPBlackList = 0x6e0; // TArray<FString>
		constexpr auto PurgeLevel = 0x7b0; // int32_t
		constexpr auto PurgeDelay = 0x7b4; // int32_t
		constexpr auto RestrictPurgeTime = 0x7b8; // bool
		constexpr auto PurgeRestrictionWeekdayStart = 0x7bc; // int32_t
		constexpr auto PurgeRestrictionWeekdayEnd = 0x7c0; // int32_t
		constexpr auto PurgeRestrictionWeekendStart = 0x7c4; // int32_t
		constexpr auto PurgeRestrictionWeekendEnd = 0x7c8; // int32_t
		constexpr auto PurgePreparationTime = 0x7cc; // float
		constexpr auto PurgeDuration = 0x7d0; // float
		constexpr auto MinPurgeOnlinePlayers = 0x7d4; // int32_t
		constexpr auto AllowBuilding = 0x7d8; // bool
		constexpr auto ClanPurgeTrigger = 0x7dc; // float
		constexpr auto InitialPurgeDelay = 0x7e0; // float
		constexpr auto ClanScoreUpateFrequency = 0x7e4; // float
		constexpr auto EnablePurge = 0x7e8; // bool
		constexpr auto PurgeNPCBuildingDamageMultiplier = 0x7f0; // TArray<float>
		constexpr auto StormEnabled = 0x800; // bool
		constexpr auto ElderThingsEnabled = 0x801; // bool
		constexpr auto ElderThingsIdleLifespan = 0x804; // float
		constexpr auto SiegeElderThingsEnabled = 0x808; // bool
		constexpr auto StormCooldown = 0x80c; // float
		constexpr auto StormAccumulationTime = 0x810; // float
		constexpr auto StormDuration = 0x814; // float
		constexpr auto StormDissipationTime = 0x818; // float
		constexpr auto StormEnduranceDrainMultiplier = 0x81c; // float
		constexpr auto ElderThingSpawnRate = 0x820; // float
		constexpr auto StormTimeWeekdayStart = 0x824; // int32_t
		constexpr auto StormTimeWeekdayEnd = 0x828; // int32_t
		constexpr auto StormTimeWeekendStart = 0x82c; // int32_t
		constexpr auto StormTimeWeekendEnd = 0x830; // int32_t
		constexpr auto StormMinimumOnlinePlayers = 0x834; // int32_t
		constexpr auto StormBuildingAllowed = 0x838; // bool
		constexpr auto StormMapBlocker = 0x839; // bool
		constexpr auto ElderThingSiegeDamageMultiplier = 0x83c; // float
		constexpr auto MinimumBuildingSizeToBeSieged = 0x840; // int32_t
		constexpr auto AmbientElderThingRespawnRate = 0x844; // float
		constexpr auto SiegeElderThingRespawnRate = 0x848; // float
		constexpr auto StormBuildingDamageRateMultiplier = 0x84c; // float
		constexpr auto MaxAmbientElderThings = 0x850; // int32_t
		constexpr auto MaxSiegeElderThings = 0x854; // int32_t
		constexpr auto MaxAmbushElderThings = 0x858; // int32_t
		constexpr auto ElderThingSiegeBuildingSizeMultiplier = 0x85c; // float
		constexpr auto StormBuildingDamageEnabled = 0x860; // bool
		constexpr auto SiegeElderThingMapMarkers = 0x861; // bool
		constexpr auto MinimumStormDamageBuildingPieces = 0x864; // int32_t
		constexpr auto StormBuildingDamageMultiplier = 0x868; // float
		constexpr auto VaultRefreshTime = 0x86c; // int32_t
		constexpr auto VaultRefreshDeviation = 0x870; // int32_t
		constexpr auto SurgeSacrificeRequirementMultiplier = 0x874; // float
		constexpr auto SurgeDespawnTimer = 0x878; // int32_t
		constexpr auto AltarModuleActiveTimeMultiplier = 0x87c; // float
		constexpr auto DecoupleSurgeFromStorm = 0x880; // bool
		constexpr auto DecoupledSurgeCooldown = 0x884; // int32_t
		constexpr auto EnableBuildingDestructionCapsules = 0x888; // bool
		constexpr auto BuildingPickupEnabled = 0x889; // bool
		constexpr auto PoiProtectionEnabled = 0x88a; // bool
		constexpr auto EventSystemEnabled = 0x88b; // bool
		constexpr auto ServerMergeOutgoingTime = 0x88c; // int32_t
		constexpr auto ServerMergeDestination = 0x890; // FString
		constexpr auto DisableChatFormatting = 0x8a0; // bool
		constexpr auto EnableLoginQueue = 0x8a1; // bool
		constexpr auto DisconnectionGraceTime = 0x8a4; // int32_t
	}

	namespace n_ADocumentationActor { // : AActor
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto CustomTimeDilation = 0x80; // float
		constexpr auto bHidden = 0x84; // char : 1
		constexpr auto bNetTemporary = 0x84; // char : 1
		constexpr auto bNetStartup = 0x84; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x84; // char : 1
		constexpr auto bAlwaysRelevant = 0x84; // char : 1
		constexpr auto bReplicateMovement = 0x84; // char : 1
		constexpr auto bTearOff = 0x84; // char : 1
		constexpr auto bExchangedRoles = 0x84; // char : 1
		constexpr auto bPendingNetUpdate = 0x85; // char : 1
		constexpr auto bNetLoadOnClient = 0x85; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x85; // char : 1
		constexpr auto bBlockInput = 0x85; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x85; // char : 1
		constexpr auto bActorEnableCollision = 0x86; // char : 1
		constexpr auto bReplicates = 0x86; // char : 1
		constexpr auto bLostRelevancy = 0x86; // char : 1
		constexpr auto NetDriverName = 0x88; // FName
		constexpr auto bCanBeInCluster = 0x90; // char : 1
		constexpr auto RemoteRole = 0x91; // ENetRole
		constexpr auto Owner = 0x98; // AActor*
		constexpr auto ReplicatedMovement = 0xa0; // FRepMovement
		constexpr auto AttachmentReplication = 0xd8; // FRepAttachment
		constexpr auto Role = 0x118; // ENetRole
		constexpr auto AutoReceiveInput = 0x11a; // EAutoReceiveInput
		constexpr auto InputPriority = 0x11c; // int32_t
		constexpr auto InputComponent = 0x120; // UInputComponent*
		constexpr auto InputConsumeOption = 0x128; // EInputConsumeOptions
		constexpr auto NetCullDistanceSquared = 0x12c; // float
		constexpr auto ViewTargetNetCullDistanceSquared = 0x130; // float
		constexpr auto NetTag = 0x134; // int32_t
		constexpr auto NetUpdateTime = 0x138; // float
		constexpr auto NetUpdateFrequency = 0x13c; // float
		constexpr auto MinNetUpdateFrequency = 0x140; // float
		constexpr auto NetPriority = 0x144; // float
		constexpr auto LastNetUpdateTime = 0x148; // float
		constexpr auto bAutoDestroyWhenFinished = 0x14c; // char : 1
		constexpr auto bCanBeDamaged = 0x14c; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x14c; // char : 1
		constexpr auto bCollideWhenPlacing = 0x14c; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x14c; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x14c; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x14c; // char : 1
		constexpr auto SpawnCollisionHandlingMethod = 0x14d; // ESpawnActorCollisionHandlingMethod
		constexpr auto Instigator = 0x158; // APawn*
		constexpr auto Children = 0x160; // TArray<AActor*>
		constexpr auto RootComponent = 0x170; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x178; // TArray<AMatineeActor*>
		constexpr auto InitialLifeSpan = 0x188; // float
		constexpr auto Layers = 0x198; // TArray<FName>
		constexpr auto ParentComponentActor = 0x1a8; // TWeakObjectPtr<AActor>
		constexpr auto ParentComponent = 0x1b0; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x1b8; // char : 1
		constexpr auto bUseExtendedRelevancyTimeout = 0x1b8; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x1b8; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x1b8; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x1b8; // char : 1
		constexpr auto Tags = 0x1c0; // TArray<FName>
		constexpr auto HiddenEditorViews = 0x1d0; // uint64_t
		constexpr auto OnTakeAnyDamage = 0x1d8; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x1e8; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x1f8; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x208; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x218; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x228; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x238; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x248; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x258; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x268; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x278; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x288; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x298; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x2a8; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x2b8; // FScriptMulticastDelegate
		constexpr auto BlueprintCreatedComponents = 0x3a8; // TArray<UActorComponent*>
		constexpr auto InstanceComponents = 0x3b8; // TArray<UActorComponent*>
	}

	namespace n_UAISenseBlueprintListener { // : UUserDefinedStruct
		constexpr auto Guid = 0x98; // FGuid
	}

	namespace n_UNetConnection { // : UPlayer
		constexpr auto Children = 0x48; // TArray<UChildConnection*>
		constexpr auto Driver = 0x58; // UNetDriver*
		constexpr auto PackageMap = 0x60; // UPackageMap*
		constexpr auto OpenChannels = 0x68; // TArray<UChannel*>
		constexpr auto SentTemporaries = 0x78; // TArray<AActor*>
		constexpr auto ViewTarget = 0x88; // AActor*
		constexpr auto OwningActor = 0x90; // AActor*
		constexpr auto MaxPacket = 0x98; // int32_t
		constexpr auto InternalAck = 0x9c; // char : 1
		constexpr auto AsyncLoadedObjects = 0xa0; // TArray<UObject*>
		constexpr auto PlayerId = 0x170; // FUniqueNetIdRepl
		constexpr auto LastReceiveTime = 0x200; // double
		constexpr auto ActorChannels = 0x334e0; // TMap<AActor*, UActorChannel*>
		constexpr auto ChannelsToTick = 0x33730; // TArray<UChannel*>
	}

	namespace n_UInterpTrackInstLinearColorProp { // : UInterpTrackInstProperty
		constexpr auto ResetColor = 0x40; // FLinearColor
	}

	namespace n_UBehaviorTree { // : UObject
		constexpr auto RootNode = 0x28; // UBTCompositeNode*
		constexpr auto BlackboardAsset = 0x30; // UBlackboardData*
		constexpr auto RootDecorators = 0x38; // TArray<UBTDecorator*>
		constexpr auto RootDecoratorOps = 0x48; // TArray<FBTDecoratorLogic>
	}

	namespace n_UGameInstance { // : UObject
		constexpr auto LocalPlayers = 0x38; // TArray<ULocalPlayer*>
		constexpr auto OnlineSession = 0x50; // UOnlineSession*
	}

	namespace n_UDrawFrustumComponent { // : UPrimitiveComponent
		constexpr auto FrustumColor = 0x6c0; // FColor
		constexpr auto FrustumAngle = 0x6c4; // float
		constexpr auto FrustumAspectRatio = 0x6c8; // float
		constexpr auto FrustumStartDist = 0x6cc; // float
		constexpr auto FrustumEndDist = 0x6d0; // float
		constexpr auto Texture = 0x6d8; // UTexture*
	}

	namespace n_UBookMark2D { // : UObject
		constexpr auto Zoom2D = 0x28; // float
		constexpr auto Location = 0x2c; // FIntPoint
	}

	namespace n_UParticleModulePivotOffset { // : UParticleModuleLocationBase
		constexpr auto PivotOffset = 0x30; // FVector2D
	}

	namespace n_UInterpTrackDirector { // : UInterpTrack
		constexpr auto CutTrack = 0x70; // TArray<FDirectorTrackCut>
		constexpr auto bSimulateCameraCutsOnClients = 0x80; // char : 1
	}

	namespace n_UCheckedStateBinding { // : UPropertyBinding
		constexpr auto SourceObject = 0x28; // TWeakObjectPtr<UObject>
		constexpr auto SourcePath = 0x30; // FDynamicPropertyPath
		constexpr auto DestinationProperty = 0x40; // FName
	}

	namespace n_UInteractableFoliageBase { // : UFoliageInstancedStaticMeshComponent
		constexpr auto DestructibleMesh = 0x9e0; // UDestructibleMesh*
		constexpr auto OnInstanceTakePointDamage = 0xa00; // FScriptMulticastDelegate
		constexpr auto OnInstanceTakeRadialDamage = 0xa10; // FScriptMulticastDelegate
		constexpr auto DestructibleMeshPtr = 0xa20; // UDestructibleMesh*
	}

	namespace n_UMapData { // : UBlueprintFunctionLibrary
		constexpr auto m_MapData = 0x28; // TMap<FString, FMapDataRow>
		constexpr auto m_MapDataTable = 0x78; // UDataTable*
	}

	namespace n_UMaterialExpressionTextureSampleParameterCube { // : UMaterialExpressionTextureSampleParameter
		constexpr auto ParameterName = 0x198; // FName
		constexpr auto ExpressionGUID = 0x1a0; // FGuid
		constexpr auto Group = 0x1b0; // FName
	}

	namespace n_ATestBeaconClient { // : AOnlineBeaconClient
		constexpr auto BeaconOwner = 0x3f0; // AOnlineBeaconHostObject*
		constexpr auto BeaconConnection = 0x3f8; // UNetConnection*
		constexpr auto ConnectionState = 0x400; // EBeaconConnectionState
	}

	namespace n_UMaterialExpressionVertexNormalWS { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto Desc = 0x38; // FString
		constexpr auto BorderColor = 0x48; // FColor
		constexpr auto bRealtimePreview = 0x4c; // char : 1
		constexpr auto bNeedToUpdatePreview = 0x4c; // char : 1
		constexpr auto bIsParameterExpression = 0x4c; // char : 1
		constexpr auto bCommentBubbleVisible = 0x4c; // char : 1
		constexpr auto bShowOutputNameOnPin = 0x4c; // char : 1
		constexpr auto bHidePreviewWindow = 0x4c; // char : 1
		constexpr auto bCollapsed = 0x4c; // char : 1
		constexpr auto bShaderInputData = 0x4c; // char : 1
		constexpr auto bShowInputs = 0x4c; // char : 1
		constexpr auto bShowOutputs = 0x4c; // char : 1
		constexpr auto Outputs = 0x50; // TArray<FExpressionOutput>
	}

	namespace n_ABuildingBlockerVolumeBase { // : ASpecialPropertiesVolume
		constexpr auto AllowUndermeshing = 0x3d0; // bool
		constexpr auto AllowBuildingUnderHeightmap = 0x3d1; // bool
		constexpr auto Whitelist = 0x3d8; // TArray<UClass*>
	}

	namespace n_UPlayFabProfilesAPI { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnPlayFabResponse = 0x28; // FScriptMulticastDelegate
		constexpr auto CallAuthenticationContext = 0x110; // UPlayFabAuthenticationContext*
		constexpr auto RequestJsonObj = 0x118; // UPlayFabJsonObject*
		constexpr auto ResponseJsonObj = 0x120; // UPlayFabJsonObject*
	}

	namespace n_UStringEnumDataTableDataprovider { // : UStringEnumDataprovider
		constexpr auto m_TableRef = 0x30; // UDataTable*
		constexpr auto m_Table = 0x50; // UDataTable*
	}

	namespace n_UParticleModuleLocationEmitter { // : UParticleModuleLocationBase
		constexpr auto EmitterName = 0x30; // FName
		constexpr auto SelectionMethod = 0x38; // ELocationEmitterSelectionMethod
		constexpr auto InheritSourceVelocity = 0x3c; // char : 1
		constexpr auto InheritSourceVelocityScale = 0x40; // float
		constexpr auto bInheritSourceRotation = 0x44; // char : 1
		constexpr auto InheritSourceRotationScale = 0x48; // float
	}

	namespace n_UAvfMediaSettings { // : UObject
		constexpr auto NativeAudioOut = 0x28; // bool
	}

	namespace n_UAsyncTaskDownloadImage { // : UBlueprintAsyncActionBase
		constexpr auto onSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto OnFail = 0x38; // FScriptMulticastDelegate
	}

	namespace n_AInfo { // : AActor
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto CustomTimeDilation = 0x80; // float
		constexpr auto bHidden = 0x84; // char : 1
		constexpr auto bNetTemporary = 0x84; // char : 1
		constexpr auto bNetStartup = 0x84; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x84; // char : 1
		constexpr auto bAlwaysRelevant = 0x84; // char : 1
		constexpr auto bReplicateMovement = 0x84; // char : 1
		constexpr auto bTearOff = 0x84; // char : 1
		constexpr auto bExchangedRoles = 0x84; // char : 1
		constexpr auto bPendingNetUpdate = 0x85; // char : 1
		constexpr auto bNetLoadOnClient = 0x85; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x85; // char : 1
		constexpr auto bBlockInput = 0x85; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x85; // char : 1
		constexpr auto bActorEnableCollision = 0x86; // char : 1
		constexpr auto bReplicates = 0x86; // char : 1
		constexpr auto bLostRelevancy = 0x86; // char : 1
		constexpr auto NetDriverName = 0x88; // FName
		constexpr auto bCanBeInCluster = 0x90; // char : 1
		constexpr auto RemoteRole = 0x91; // ENetRole
		constexpr auto Owner = 0x98; // AActor*
		constexpr auto ReplicatedMovement = 0xa0; // FRepMovement
		constexpr auto AttachmentReplication = 0xd8; // FRepAttachment
		constexpr auto Role = 0x118; // ENetRole
		constexpr auto AutoReceiveInput = 0x11a; // EAutoReceiveInput
		constexpr auto InputPriority = 0x11c; // int32_t
		constexpr auto InputComponent = 0x120; // UInputComponent*
		constexpr auto InputConsumeOption = 0x128; // EInputConsumeOptions
		constexpr auto NetCullDistanceSquared = 0x12c; // float
		constexpr auto ViewTargetNetCullDistanceSquared = 0x130; // float
		constexpr auto NetTag = 0x134; // int32_t
		constexpr auto NetUpdateTime = 0x138; // float
		constexpr auto NetUpdateFrequency = 0x13c; // float
		constexpr auto MinNetUpdateFrequency = 0x140; // float
		constexpr auto NetPriority = 0x144; // float
		constexpr auto LastNetUpdateTime = 0x148; // float
		constexpr auto bAutoDestroyWhenFinished = 0x14c; // char : 1
		constexpr auto bCanBeDamaged = 0x14c; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x14c; // char : 1
		constexpr auto bCollideWhenPlacing = 0x14c; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x14c; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x14c; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x14c; // char : 1
		constexpr auto SpawnCollisionHandlingMethod = 0x14d; // ESpawnActorCollisionHandlingMethod
		constexpr auto Instigator = 0x158; // APawn*
		constexpr auto Children = 0x160; // TArray<AActor*>
		constexpr auto RootComponent = 0x170; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x178; // TArray<AMatineeActor*>
		constexpr auto InitialLifeSpan = 0x188; // float
		constexpr auto Layers = 0x198; // TArray<FName>
		constexpr auto ParentComponentActor = 0x1a8; // TWeakObjectPtr<AActor>
		constexpr auto ParentComponent = 0x1b0; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x1b8; // char : 1
		constexpr auto bUseExtendedRelevancyTimeout = 0x1b8; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x1b8; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x1b8; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x1b8; // char : 1
		constexpr auto Tags = 0x1c0; // TArray<FName>
		constexpr auto HiddenEditorViews = 0x1d0; // uint64_t
		constexpr auto OnTakeAnyDamage = 0x1d8; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x1e8; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x1f8; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x208; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x218; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x228; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x238; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x248; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x258; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x268; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x278; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x288; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x298; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x2a8; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x2b8; // FScriptMulticastDelegate
		constexpr auto BlueprintCreatedComponents = 0x3a8; // TArray<UActorComponent*>
		constexpr auto InstanceComponents = 0x3b8; // TArray<UActorComponent*>
	}

	namespace n_UParticleModuleTypeDataAnimTrail { // : UParticleModuleTypeDataBase
		constexpr auto bDeadTrailsOnDeactivate = 0x30; // char : 1
		constexpr auto bEnablePreviousTangentRecalculation = 0x30; // char : 1
		constexpr auto bTangentRecalculationEveryFrame = 0x30; // char : 1
		constexpr auto TilingDistance = 0x34; // float
		constexpr auto DistanceTessellationStepSize = 0x38; // float
		constexpr auto TangentTessellationStepSize = 0x3c; // float
		constexpr auto WidthTessellationStepSize = 0x40; // float
	}

	namespace n_UBuildingSocketComponent { // : UInstancedStaticMeshComponent
		constexpr auto PerInstanceStaticSocketData = 0x8c8; // TArray<FSocketStaticData>
	}

	namespace n_UCraftingPanel { // : URootWidget
		constexpr auto MinRecipeIconSize = 0x360; // float
		constexpr auto MaxRecipeIconSize = 0x364; // float
		constexpr auto m_ActiveMessageBoxWidget = 0x448; // UMessageBoxWidget*
		constexpr auto m_CancelCraftingWarningDlg = 0x450; // UMessageBoxWidget*
		constexpr auto m_StationInventory = 0x458; // UItemInventory*
		constexpr auto m_ShortcutBar = 0x460; // UItemInventory*
		constexpr auto m_RecipeIngredientsInventory = 0x468; // UItemInventory*
		constexpr auto m_CraftingStation = 0x470; // APlaceableBase*
		constexpr auto m_CraftingQueue = 0x478; // UCraftingQueue*
		constexpr auto m_ArtisanThrallInventory = 0x480; // UItemInventory*
		constexpr auto m_ArtisanRecipeInventory = 0x488; // UItemInventory*
		constexpr auto m_CurrentlySelectedRecipe = 0x490; // URecipeItem*
		constexpr auto m_RecipeToConfirmIndex = 0x498; // FVirtualIndex
		constexpr auto m_CraftingItemIconPool = 0x4a0; // UObjectPool*
		constexpr auto m_CraftingItemSlotPool = 0x4a8; // UObjectPool*
	}

	namespace n_UW_FCSlider_C { // : UFCSlider
		constexpr auto Value = 0x318; // float
		constexpr auto WidgetStyle = 0x320; // FSliderStyle
		constexpr auto Orientation = 0x570; // EOrientation
		constexpr auto SliderBarColor = 0x574; // FLinearColor
		constexpr auto SliderHandleColor = 0x584; // FLinearColor
		constexpr auto IndentHandle = 0x594; // bool
		constexpr auto Locked = 0x595; // bool
		constexpr auto StepSize = 0x598; // float
		constexpr auto OnValueChanged = 0x5a0; // FScriptMulticastDelegate
		constexpr auto HoveredSound = 0x5b0; // USoundBase*
	}

	namespace n_UNavCollision { // : UObject
		constexpr auto CylinderCollision = 0x78; // TArray<FNavCollisionCylinder>
		constexpr auto BoxCollision = 0x88; // TArray<FNavCollisionBox>
		constexpr auto AreaClass = 0x98; // UNavArea*
		constexpr auto OverrrideBoxCollisionAreaClass = 0xa0; // UNavArea*
		constexpr auto bIsDynamicObstacle = 0xa8; // char : 1
		constexpr auto bGatherConvexGeometry = 0xa8; // char : 1
	}

	namespace n_UMaterialExpressionParticleMacroUV { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto Desc = 0x38; // FString
		constexpr auto BorderColor = 0x48; // FColor
		constexpr auto bRealtimePreview = 0x4c; // char : 1
		constexpr auto bNeedToUpdatePreview = 0x4c; // char : 1
		constexpr auto bIsParameterExpression = 0x4c; // char : 1
		constexpr auto bCommentBubbleVisible = 0x4c; // char : 1
		constexpr auto bShowOutputNameOnPin = 0x4c; // char : 1
		constexpr auto bHidePreviewWindow = 0x4c; // char : 1
		constexpr auto bCollapsed = 0x4c; // char : 1
		constexpr auto bShaderInputData = 0x4c; // char : 1
		constexpr auto bShowInputs = 0x4c; // char : 1
		constexpr auto bShowOutputs = 0x4c; // char : 1
		constexpr auto Outputs = 0x50; // TArray<FExpressionOutput>
	}

	namespace n_ABuildingBase { // : ABuildableBase
		constexpr auto InstancedBuildingMesh = 0x568; // UInstancedBuildingComponent*
		constexpr auto IsFoundation = 0x570; // bool
		constexpr auto IsPillar = 0x571; // bool
		constexpr auto IsPurgeTarget = 0x572; // bool
		constexpr auto ShelterTemperature = 0x574; // float
		constexpr auto Stability = 0x578; // int32_t
		constexpr auto MyBuildingTags = 0x580; // FGameplayTagContainer
		constexpr auto CanUpgradeFromTagList = 0x5a0; // FGameplayTagContainer
		constexpr auto m_InstancedBuildingMeshes = 0x5c0; // TArray<UInstancedBuildingComponent*>
		constexpr auto m_Buildings = 0x5d0; // TMap<uint64_t, ABuildingBase*>
		constexpr auto m_IsLoading = 0x620; // bool
		constexpr auto m_NextBuilding = 0x630; // ABuildingBase*
		constexpr auto m_PrevBuilding = 0x638; // ABuildingBase*
		constexpr auto m_BuildingKey = 0x640; // uint64_t
		constexpr auto m_NumTotalPieces = 0x658; // int32_t
		constexpr auto m_InitialReplicationCompletedForConnection = 0x660; // TMap<UNetConnection*, bool>
		constexpr auto m_BuildingEventManager = 0x6c8; // FOrderedServerBuildingEventManager
		constexpr auto m_MonitoringPlayers = 0x890; // TArray<AController*>
		constexpr auto m_PlayersWhoNeedStability = 0x8a0; // TSet<AController*>
		constexpr auto BuildingUniqueID = 0x8f8; // UUniqueID*
	}

	namespace n_UMaterialExpressionViewProperty { // : UMaterialExpression
		constexpr auto Property = 0x60; // EMaterialExposedViewProperty
	}

	namespace n_UFriendListGame { // : UWindowRoot
		constexpr auto FriendsWindowBase = 0x398; // UFriendsGame*
		constexpr auto EntryViewClass = 0x3a0; // UFriendListEntry*
		constexpr auto NumOnlineFriends = 0x3a8; // int32_t
		constexpr auto NumOfflineFriends = 0x3ac; // int32_t
	}

	namespace n_UConnectingDialogBase { // : UWindowRoot
		constexpr auto CloseOnClick = 0x318; // bool
		constexpr auto BlockPlayerInput = 0x319; // bool
		constexpr auto OpeningSlateSound = 0x320; // FSlateSound
		constexpr auto ClosingSlateSound = 0x338; // FSlateSound
		constexpr auto SignalClosing = 0x350; // FScriptMulticastDelegate
		constexpr auto SignalOpened = 0x360; // FScriptMulticastDelegate
		constexpr auto m_WindowHotkeys = 0x370; // TArray<FGamepadHotkeyHelp>
		constexpr auto m_InputComponent = 0x380; // UInputComponent*
		constexpr auto m_GUIModule = 0x388; // UGUIModule*
	}

	namespace n_UWidgetSwitcherSlot { // : UPanelSlot
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UPhysicsHandleComponent { // : UActorComponent
		constexpr auto GrabbedComponent = 0xf8; // UPrimitiveComponent*
		constexpr auto bSoftAngularConstraint = 0x10c; // char : 1
		constexpr auto bSoftLinearConstraint = 0x10c; // char : 1
		constexpr auto bInterpolateTarget = 0x10c; // char : 1
		constexpr auto LinearDamping = 0x110; // float
		constexpr auto LinearStiffness = 0x114; // float
		constexpr auto AngularDamping = 0x118; // float
		constexpr auto AngularStiffness = 0x11c; // float
		constexpr auto InterpolationSpeed = 0x180; // float
	}

	namespace n_UMaterialExpressionDivide { // : UMaterialExpression
		constexpr auto A = 0x60; // FExpressionInput
		constexpr auto B = 0x98; // FExpressionInput
		constexpr auto ConstA = 0xd0; // float
		constexpr auto ConstB = 0xd4; // float
	}

	namespace n_UEmoteInventory { // : UItemInventory
		constexpr auto SignalEmoteLearned = 0x348; // FScriptMulticastDelegate
	}

	namespace n_UEditableText { // : UWidget
		constexpr auto Text = 0x118; // FText
		constexpr auto TextDelegate = 0x130; // DelegateProperty
		constexpr auto HintText = 0x140; // FText
		constexpr auto HintTextDelegate = 0x158; // DelegateProperty
		constexpr auto WidgetStyle = 0x168; // FEditableTextStyle
		constexpr auto Style = 0x3b0; // USlateWidgetStyleAsset*
		constexpr auto BackgroundImageSelected = 0x3b8; // USlateBrushAsset*
		constexpr auto BackgroundImageComposing = 0x3c0; // USlateBrushAsset*
		constexpr auto CaretImage = 0x3c8; // USlateBrushAsset*
		constexpr auto Font = 0x3d0; // FSlateFontInfo
		constexpr auto ColorAndOpacity = 0x438; // FSlateColor
		constexpr auto IsReadOnly = 0x460; // bool
		constexpr auto IsPassword = 0x461; // bool
		constexpr auto MinimumDesiredWidth = 0x464; // float
		constexpr auto IsCaretMovedWhenGainFocus = 0x468; // bool
		constexpr auto SelectAllTextWhenFocused = 0x469; // bool
		constexpr auto RevertTextOnEscape = 0x46a; // bool
		constexpr auto ClearKeyboardFocusOnCommit = 0x46b; // bool
		constexpr auto SelectAllTextOnCommit = 0x46c; // bool
		constexpr auto AllowContextMenu = 0x46d; // bool
		constexpr auto KeyboardType = 0x46e; // EVirtualKeyboardType
		constexpr auto ShapedTextOptions = 0x470; // FShapedTextOptions
		constexpr auto OnTextChanged = 0x478; // FScriptMulticastDelegate
		constexpr auto OnTextCommitted = 0x488; // FScriptMulticastDelegate
	}

	namespace n_UConanGameInstance { // : UDWGameInstance
		constexpr auto OnlineSessionCreationTimeout = 0x158; // float
		constexpr auto m_ShowLoadingScreens = 0x1e0; // bool
		constexpr auto ServerSettings = 0x880; // AServerSettings*
		constexpr auto SignalServerConnectionFailure = 0x8a0; // FScriptMulticastDelegate
		constexpr auto SignalOtherConnectionFalure = 0x8b0; // FScriptMulticastDelegate
		constexpr auto SignalGamepadChanged = 0x8c0; // FScriptMulticastDelegate
		constexpr auto SignalLiveConnectionLost = 0x8d0; // FScriptMulticastDelegate
		constexpr auto SignalLiveConnectionRestored = 0x8e0; // FScriptMulticastDelegate
		constexpr auto SignalTrailStatusChanged = 0x8f0; // FScriptMulticastDelegate
		constexpr auto SignalClientStateChanged = 0x900; // FScriptMulticastDelegate
		constexpr auto m_GameStartedOffline = 0x910; // bool
		constexpr auto m_ActiveUserIsGuestAccount = 0x911; // bool
		constexpr auto Ticker = 0x918; // UConanTicker*
		constexpr auto m_ConsoleSettingsHelper = 0x998; // UConsoleSettingsHelper*
		constexpr auto m_GUIModuleController = 0x9a0; // UGUIModuleController*
		constexpr auto m_SettingsBPClass = 0xaa8; // UClass*
		constexpr auto m_NextMapName = 0xac8; // FString
		constexpr auto m_BenchmarkFrameRateReporter = 0xaf8; // UFrameRateReporter*
		constexpr auto m_ShowLoginUIProxy = 0xc50; // UShowLoginUICallbackProxy*
		constexpr auto m_OnlineEventsLibrary = 0xc60; // UConanOnlineEventsLibrary*
		constexpr auto m_InGameJoinOrInvite = 0xc68; // UInGameJoinOrInvite*
		constexpr auto m_InviteParing = 0xc70; // UInviteControllerParing*
		constexpr auto ErrorMessageBoxStack = 0xca0; // TArray<UMessageBoxWidget*>
		constexpr auto PreloadedGraniteTilesets = 0xd20; // TArray<UGraniteTileSet*>
		constexpr auto ActiveDeviceProfileChanged = 0xda8; // FScriptMulticastDelegate
		constexpr auto m_SpawnProfessionTable = 0xdb8; // UDataTable*
		constexpr auto m_SpawnThrallTierTable = 0xdc0; // UDataTable*
	}

	namespace n_UNativeWidgetHost { // : UWidget
		constexpr auto bIsVariable = 0x28; // bool
		constexpr auto bCreatedByConstructionScript = 0x29; // bool
		constexpr auto Slot = 0x30; // UPanelSlot*
		constexpr auto bIsEnabled = 0x38; // bool
		constexpr auto bIsEnabledDelegate = 0x40; // DelegateProperty
		constexpr auto ToolTipText = 0x50; // FText
		constexpr auto ToolTipTextDelegate = 0x68; // DelegateProperty
		constexpr auto TooltipWidget = 0x78; // UWidget*
		constexpr auto ToolTipWidgetDelegate = 0x80; // DelegateProperty
		constexpr auto Visiblity = 0x90; // ESlateVisibility
		constexpr auto Visibility = 0x91; // ESlateVisibility
		constexpr auto VisibilityDelegate = 0x98; // DelegateProperty
		constexpr auto bOverride_Cursor = 0xa8; // char : 1
		constexpr auto Cursor = 0xac; // EMouseCursor
		constexpr auto bIsVolatile = 0xad; // bool
		constexpr auto RenderTransform = 0xb0; // FWidgetTransform
		constexpr auto RenderTransformPivot = 0xcc; // FVector2D
		constexpr auto Navigation = 0xd8; // UWidgetNavigation*
		constexpr auto NativeBindings = 0x108; // TArray<UPropertyBinding*>
	}

	namespace n_UW_LevelUpFIFOMessageView_C { // : UFIFOMessageView
		constexpr auto UberGraphFrame = 0x358; // FPointerToUberGraphFrame
		constexpr auto FadeOut = 0x360; // UWidgetAnimation*
		constexpr auto FadeIn = 0x368; // UWidgetAnimation*
		constexpr auto textView = 0x370; // UTextBlock*
	}

	namespace n_UMovieSceneTrack { // : UMovieSceneSignedObject
		constexpr auto EvalOptions = 0xb0; // FMovieSceneTrackEvalOptions
	}

	namespace n_UMovieSceneSequencePlayer { // : UObject
		constexpr auto OnPlay = 0x380; // FScriptMulticastDelegate
		constexpr auto OnStop = 0x390; // FScriptMulticastDelegate
		constexpr auto OnPause = 0x3a0; // FScriptMulticastDelegate
		constexpr auto bIsPlaying = 0x3b0; // char : 1
		constexpr auto bReversePlayback = 0x3b0; // char : 1
		constexpr auto bPendingFirstUpdate = 0x3b0; // char : 1
		constexpr auto Sequence = 0x3b8; // UMovieSceneSequence*
		constexpr auto TimeCursorPosition = 0x3c0; // float
		constexpr auto StartTime = 0x3c4; // float
		constexpr auto EndTime = 0x3c8; // float
		constexpr auto CurrentNumLoops = 0x3cc; // int32_t
		constexpr auto PlaybackSettings = 0x3e0; // FMovieSceneSequencePlaybackSettings
	}

	namespace n_UW_GamepadHelpOverlay_C { // : UGamepadHelpOverlayBase
		constexpr auto LeftHelp = 0x3c0; // UHorizontalBox*
		constexpr auto RightHelp = 0x3c8; // UHorizontalBox*
	}

	namespace n_UTextureRenderTarget { // : UTexture
		constexpr auto TargetGamma = 0xc8; // float
	}

	namespace n_UParticleModuleLight { // : UParticleModuleLightBase
		constexpr auto bUseInverseSquaredFalloff = 0x30; // bool
		constexpr auto bAffectsTranslucency = 0x31; // bool
		constexpr auto bPreviewLightRadius = 0x32; // bool
		constexpr auto SpawnFraction = 0x34; // float
		constexpr auto ColorScaleOverLife = 0x38; // FRawDistributionVector
		constexpr auto BrightnessOverLife = 0x88; // FRawDistributionFloat
		constexpr auto RadiusScale = 0xc0; // FRawDistributionFloat
		constexpr auto LightExponent = 0xf8; // FRawDistributionFloat
		constexpr auto LightingChannels = 0x130; // FLightingChannels
		constexpr auto VolumetricScatteringIntensity = 0x134; // float
		constexpr auto bHighQualityLights = 0x138; // bool
		constexpr auto bShadowCastingLights = 0x139; // bool
	}

	namespace n_USteamNetDriver { // : UIpNetDriver
		constexpr auto LogPortUnreach = 0x4f8; // char : 1
		constexpr auto AllowPlayerPortUnreach = 0x4f8; // char : 1
		constexpr auto MaxPortCountToTry = 0x4fc; // uint32_t
	}

	namespace n_UAISense_Prediction { // : UAISense
		constexpr auto RegisteredEvents = 0x120; // TArray<FAIPredictionEvent>
	}

	namespace n_UInterpTrackFloatProp { // : UInterpTrackFloatBase
		constexpr auto PropertyName = 0x90; // FName
	}

	namespace n_UConanAISystem { // : UAISystem
		constexpr auto PerceptionSystemClassName = 0x48; // FStringClassReference
		constexpr auto HotSpotManagerClassName = 0x58; // FStringClassReference
		constexpr auto AcceptanceRadius = 0x68; // float
		constexpr auto PathfollowingRegularPathPointAcceptanceRadius = 0x6c; // float
		constexpr auto PathfollowingNavLinkAcceptanceRadius = 0x70; // float
		constexpr auto bFinishMoveOnGoalOverlap = 0x74; // bool
		constexpr auto bAcceptPartialPaths = 0x75; // bool
		constexpr auto bAllowStrafing = 0x76; // bool
		constexpr auto bEnableBTAITasks = 0x77; // bool
		constexpr auto bAllowControllersAsEQSQuerier = 0x78; // bool
		constexpr auto bEnableDebuggerPlugin = 0x79; // bool
		constexpr auto DefaultSightCollisionChannel = 0x7a; // ECollisionChannel
		constexpr auto BehaviorTreeManager = 0x80; // UBehaviorTreeManager*
		constexpr auto EnvironmentQueryManager = 0x88; // UEnvQueryManager*
		constexpr auto PerceptionSystem = 0x90; // UAIPerceptionSystem*
		constexpr auto AllProxyObjects = 0x98; // TArray<UAIAsyncTaskBlueprintProxy*>
		constexpr auto HotSpotManager = 0xa8; // UAIHotSpotManager*
		constexpr auto NavLocalGrids = 0xb0; // UNavLocalGridManager*
	}

	namespace n_UDebugEntryItem { // : UFCButton
		constexpr auto templateID = 0xca0; // int32_t
		constexpr auto ItemName = 0xca8; // FName
		constexpr auto m_ItemIcon = 0xcb0; // UImage*
		constexpr auto m_ItemDynamicMaterialInstance = 0xcb8; // UMaterialInstanceDynamic*
		constexpr auto m_IconAssetPtrs = 0xcc0; // TArray<UTexture2D*>
		constexpr auto m_ParentList = 0xcd0; // UAdminPanelInventoryCheats*
	}

	namespace n_UMaterialExpressionSphereMask { // : UMaterialExpression
		constexpr auto A = 0x60; // FExpressionInput
		constexpr auto B = 0x98; // FExpressionInput
		constexpr auto Radius = 0xd0; // FExpressionInput
		constexpr auto Hardness = 0x108; // FExpressionInput
		constexpr auto AttenuationRadius = 0x140; // float
		constexpr auto HardnessPercent = 0x144; // float
	}

	namespace n_AConanAttackerAIController { // : AConanBasicAIController
		constexpr auto ShouldChangeRotationRateFromCode = 0x678; // bool
		constexpr auto PickRandomWeaponAfterAttack = 0x679; // bool
		constexpr auto PickBestWeapon = 0x67a; // bool
		constexpr auto PickBestWeaponAfterAttack = 0x67b; // bool
		constexpr auto PickBestWeaponDelay = 0x67c; // float
		constexpr auto MaxArcherRange = 0x680; // float
		constexpr auto WeaponInventory = 0x698; // UItemInventory*
		constexpr auto CurrentWeapon = 0x6a0; // UGameItem*
		constexpr auto CachedStopOrderTarget = 0x6c0; // UStaticTarget*
		constexpr auto TargetingComponent = 0x6d8; // UTargetDistributionComponent*
		constexpr auto StatrSprintDistance = 0x6e0; // float
		constexpr auto StopSprintDistance = 0x6e4; // float
		constexpr auto OptimalShootingDistance = 0x6e8; // float
		constexpr auto BlockActionMinDuration = 0x6ec; // float
		constexpr auto BlockOnAttackedMinDuration = 0x6f0; // float
		constexpr auto BlockMaxDuration = 0x6f4; // float
		constexpr auto BlockChance = 0x6f8; // float
		constexpr auto BlockChanceWhenAttacked = 0x6fc; // float
		constexpr auto TimeAtBlockStart = 0x700; // float
		constexpr auto CurrentBlockMinDuration = 0x704; // float
		constexpr auto AttackAngleCone = 0x708; // float
		constexpr auto CurrentPurgeVolume = 0x710; // APurgeVolume*
		constexpr auto HateListTargetsThresholdForBuildingDetection = 0x724; // int32_t
		constexpr auto DidLastMovementSucceed = 0x728; // bool
		constexpr auto DidLastAttackSucceed = 0x729; // bool
		constexpr auto EndLeashingDistanceFromHomeSqr = 0x72c; // float
		constexpr auto DefaultRotationRate = 0x730; // float
		constexpr auto PassiveRotationRate = 0x734; // float
	}

	namespace n_UNavMeshRenderingComponent { // : UPrimitiveComponent
		constexpr auto MinDrawDistance = 0x308; // float
		constexpr auto LDMaxDrawDistance = 0x30c; // float
		constexpr auto CachedMaxDrawDistance = 0x310; // float
		constexpr auto DepthPriorityGroup = 0x314; // ESceneDepthPriorityGroup
		constexpr auto ViewOwnerDepthPriorityGroup = 0x315; // ESceneDepthPriorityGroup
		constexpr auto bAlwaysCreatePhysicsState = 0x318; // char : 1
		constexpr auto bGenerateOverlapEvents = 0x318; // char : 1
		constexpr auto bForceGenerateOverlapEvents = 0x318; // char : 1
		constexpr auto bMultiBodyOverlap = 0x318; // char : 1
		constexpr auto bCheckAsyncSceneOnMove = 0x318; // char : 1
		constexpr auto bTraceComplexOnMove = 0x318; // char : 1
		constexpr auto bReturnMaterialOnMove = 0x318; // char : 1
		constexpr auto bUseViewOwnerDepthPriorityGroup = 0x318; // char : 1
		constexpr auto bAllowCullDistanceVolume = 0x318; // char : 1
		constexpr auto bHasMotionBlurVelocityMeshes = 0x318; // char : 1
		constexpr auto bVisibleInReflectionCaptures = 0x318; // char : 1
		constexpr auto bRenderInMainPass = 0x318; // char : 1
		constexpr auto bRenderInMono = 0x318; // char : 1
		constexpr auto bReceivesDecals = 0x318; // char : 1
		constexpr auto bOwnerNoSee = 0x318; // char : 1
		constexpr auto bOnlyOwnerSee = 0x318; // char : 1
		constexpr auto bTreatAsBackgroundForOcclusion = 0x318; // char : 1
		constexpr auto bHeightOutputReferenceSand = 0x318; // char : 1
		constexpr auto bHeightOutputReferenceWater = 0x318; // char : 1
		constexpr auto bHeightOutputIgnoreSand = 0x318; // char : 1
		constexpr auto bHeightOutputIgnoreWater = 0x318; // char : 1
		constexpr auto bCullFromDistantShadowCascades = 0x318; // char : 1
		constexpr auto bUseAsOccluder = 0x318; // char : 1
		constexpr auto bSelectable = 0x318; // char : 1
		constexpr auto bForceMipStreaming = 0x318; // char : 1
		constexpr auto bHasPerInstanceHitProxies = 0x318; // char : 1
		constexpr auto CastShadow = 0x318; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x318; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x318; // char : 1
		constexpr auto bCastDynamicShadow = 0x318; // char : 1
		constexpr auto bCastStaticShadow = 0x318; // char : 1
		constexpr auto bCastVolumetricTranslucentShadow = 0x318; // char : 1
		constexpr auto bSelfShadowOnly = 0x31c; // char : 1
		constexpr auto bCastFarShadow = 0x31c; // char : 1
		constexpr auto bCastInsetShadow = 0x31c; // char : 1
		constexpr auto bCastCinematicShadow = 0x31c; // char : 1
		constexpr auto bCastHiddenShadow = 0x31c; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x31c; // char : 1
		constexpr auto bLightAsIfStatic = 0x31c; // char : 1
		constexpr auto bLightAttachmentsAsGroup = 0x31c; // char : 1
		constexpr auto bReceiveCombinedCSMAndStaticShadowsFromStationaryLights = 0x31c; // char : 1
		constexpr auto bSingleSampleShadowFromStationaryLights = 0x31c; // char : 1
		constexpr auto bIgnoreRadialImpulse = 0x31c; // char : 1
		constexpr auto bIgnoreRadialForce = 0x31c; // char : 1
		constexpr auto AlwaysLoadOnClient = 0x31c; // char : 1
		constexpr auto AlwaysLoadOnServer = 0x31c; // char : 1
		constexpr auto bUseEditorCompositing = 0x31c; // char : 1
		constexpr auto bRenderCustomDepth = 0x31c; // char : 1
		constexpr auto IndirectLightingCacheQuality = 0x320; // EIndirectLightingCacheQuality
		constexpr auto bHasCustomNavigableGeometry = 0x321; // EHasCustomNavigableGeometry
		constexpr auto CanCharacterStepUpOn = 0x323; // ECanBeCharacterBase
		constexpr auto LightingChannels = 0x324; // FLightingChannels
		constexpr auto CustomDepthStencilValue = 0x328; // int32_t
		constexpr auto TranslucencySortPriority = 0x32c; // int32_t
		constexpr auto VisibilityId = 0x330; // int32_t
		constexpr auto LpvBiasMultiplier = 0x338; // float
		constexpr auto BodyInstance = 0x340; // FBodyInstance
		constexpr auto BoundsScale = 0x574; // float
		constexpr auto LastSubmitTime = 0x578; // float
		constexpr auto LastRenderTime = 0x57c; // float
		constexpr auto LastRenderTimeOnScreen = 0x580; // float
		constexpr auto MoveIgnoreActors = 0x588; // TArray<AActor*>
		constexpr auto MoveIgnoreComponents = 0x598; // TArray<UPrimitiveComponent*>
		constexpr auto OnComponentHit = 0x5b8; // FScriptMulticastDelegate
		constexpr auto OnComponentBeginOverlap = 0x5c8; // FScriptMulticastDelegate
		constexpr auto OnComponentEndOverlap = 0x5d8; // FScriptMulticastDelegate
		constexpr auto OnComponentWake = 0x5e8; // FScriptMulticastDelegate
		constexpr auto OnComponentSleep = 0x5f8; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x608; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x618; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x628; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x638; // FScriptMulticastDelegate
		constexpr auto LODParentPrimitive = 0x660; // UPrimitiveComponent*
		constexpr auto PostPhysicsComponentTick = 0x668; // FPrimitiveComponentPostPhysicsTickFunction
	}

	namespace n_UInterpTrackMove { // : UInterpTrack
		constexpr auto PosTrack = 0x70; // FInterpCurveVector
		constexpr auto EulerTrack = 0x88; // FInterpCurveVector
		constexpr auto LookupTrack = 0xa0; // FInterpLookupTrack
		constexpr auto LookAtGroupName = 0xb0; // FName
		constexpr auto LinCurveTension = 0xb8; // float
		constexpr auto AngCurveTension = 0xbc; // float
		constexpr auto bUseQuatInterpolation = 0xc0; // char : 1
		constexpr auto bShowArrowAtKeys = 0xc0; // char : 1
		constexpr auto bDisableMovement = 0xc0; // char : 1
		constexpr auto bShowTranslationOnCurveEd = 0xc0; // char : 1
		constexpr auto bShowRotationOnCurveEd = 0xc0; // char : 1
		constexpr auto bHide3DTrack = 0xc0; // char : 1
		constexpr auto RotMode = 0xc4; // EInterpTrackMoveRotMode
	}

	namespace n_UEnvQueryGenerator_ActorsOfClass { // : UEnvQueryGenerator
		constexpr auto SearchedActorClass = 0x50; // AActor*
		constexpr auto GenerateOnlyActorsInRadius = 0x58; // FAIDataProviderBoolValue
		constexpr auto SearchRadius = 0x88; // FAIDataProviderFloatValue
		constexpr auto SearchCenter = 0xb8; // UEnvQueryContext*
	}

	namespace n_UMaterialExpressionMaterialProxyReplace { // : UMaterialExpression
		constexpr auto realTime = 0x60; // FExpressionInput
		constexpr auto MaterialProxy = 0x98; // FExpressionInput
	}

	namespace n_UAINavigationComponent { // : UActorComponent
		constexpr auto TileGenerationRadius = 0xf8; // float
		constexpr auto TileRemovalRadius = 0xfc; // float
		constexpr auto NavDataConfigName = 0x100; // FName
		constexpr auto npcLOD0NavmeshTileGenerationRadius = 0x108; // float
		constexpr auto npcLOD0NavmeshTileRemovalRadius = 0x10c; // float
		constexpr auto npcLOD1NavmeshTileGenerationRadius = 0x110; // float
		constexpr auto npcLOD1NavmeshTileRemovalRadius = 0x114; // float
		constexpr auto npcLOD2NavmeshTileGenerationRadius = 0x118; // float
		constexpr auto npcLOD2NavmeshTileRemovalRadius = 0x11c; // float
		constexpr auto npcLOD3NavmeshTileGenerationRadius = 0x120; // float
		constexpr auto npcLOD3NavmeshTileRemovalRadius = 0x124; // float
	}

	namespace n_AHarvestFoliageSystem { // : AActor
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto CustomTimeDilation = 0x80; // float
		constexpr auto bHidden = 0x84; // char : 1
		constexpr auto bNetTemporary = 0x84; // char : 1
		constexpr auto bNetStartup = 0x84; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x84; // char : 1
		constexpr auto bAlwaysRelevant = 0x84; // char : 1
		constexpr auto bReplicateMovement = 0x84; // char : 1
		constexpr auto bTearOff = 0x84; // char : 1
		constexpr auto bExchangedRoles = 0x84; // char : 1
		constexpr auto bPendingNetUpdate = 0x85; // char : 1
		constexpr auto bNetLoadOnClient = 0x85; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x85; // char : 1
		constexpr auto bBlockInput = 0x85; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x85; // char : 1
		constexpr auto bActorEnableCollision = 0x86; // char : 1
		constexpr auto bReplicates = 0x86; // char : 1
		constexpr auto bLostRelevancy = 0x86; // char : 1
		constexpr auto NetDriverName = 0x88; // FName
		constexpr auto bCanBeInCluster = 0x90; // char : 1
		constexpr auto RemoteRole = 0x91; // ENetRole
		constexpr auto Owner = 0x98; // AActor*
		constexpr auto ReplicatedMovement = 0xa0; // FRepMovement
		constexpr auto AttachmentReplication = 0xd8; // FRepAttachment
		constexpr auto Role = 0x118; // ENetRole
		constexpr auto AutoReceiveInput = 0x11a; // EAutoReceiveInput
		constexpr auto InputPriority = 0x11c; // int32_t
		constexpr auto InputComponent = 0x120; // UInputComponent*
		constexpr auto InputConsumeOption = 0x128; // EInputConsumeOptions
		constexpr auto NetCullDistanceSquared = 0x12c; // float
		constexpr auto ViewTargetNetCullDistanceSquared = 0x130; // float
		constexpr auto NetTag = 0x134; // int32_t
		constexpr auto NetUpdateTime = 0x138; // float
		constexpr auto NetUpdateFrequency = 0x13c; // float
		constexpr auto MinNetUpdateFrequency = 0x140; // float
		constexpr auto NetPriority = 0x144; // float
		constexpr auto LastNetUpdateTime = 0x148; // float
		constexpr auto bAutoDestroyWhenFinished = 0x14c; // char : 1
		constexpr auto bCanBeDamaged = 0x14c; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x14c; // char : 1
		constexpr auto bCollideWhenPlacing = 0x14c; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x14c; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x14c; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x14c; // char : 1
		constexpr auto SpawnCollisionHandlingMethod = 0x14d; // ESpawnActorCollisionHandlingMethod
		constexpr auto Instigator = 0x158; // APawn*
		constexpr auto Children = 0x160; // TArray<AActor*>
		constexpr auto RootComponent = 0x170; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x178; // TArray<AMatineeActor*>
		constexpr auto InitialLifeSpan = 0x188; // float
		constexpr auto Layers = 0x198; // TArray<FName>
		constexpr auto ParentComponentActor = 0x1a8; // TWeakObjectPtr<AActor>
		constexpr auto ParentComponent = 0x1b0; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x1b8; // char : 1
		constexpr auto bUseExtendedRelevancyTimeout = 0x1b8; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x1b8; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x1b8; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x1b8; // char : 1
		constexpr auto Tags = 0x1c0; // TArray<FName>
		constexpr auto HiddenEditorViews = 0x1d0; // uint64_t
		constexpr auto OnTakeAnyDamage = 0x1d8; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x1e8; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x1f8; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x208; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x218; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x228; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x238; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x248; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x258; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x268; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x278; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x288; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x298; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x2a8; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x2b8; // FScriptMulticastDelegate
		constexpr auto BlueprintCreatedComponents = 0x3a8; // TArray<UActorComponent*>
		constexpr auto InstanceComponents = 0x3b8; // TArray<UActorComponent*>
	}

	namespace n_UMaterialExpressionAtmosphericFogColor { // : UMaterialExpression
		constexpr auto WorldPosition = 0x60; // FExpressionInput
	}

	namespace n_UBuffTracker { // : UActorComponent
		constexpr auto OnBuffRegisteredOnServer = 0xf8; // FScriptMulticastDelegate
		constexpr auto OnBuffUnregisteredOnServer = 0x108; // FScriptMulticastDelegate
	}

	namespace n_UParticleModuleBeamTarget { // : UParticleModuleBeamBase
		constexpr auto TargetMethod = 0x30; // Beam2SourceTargetMethod
		constexpr auto TargetName = 0x38; // FName
		constexpr auto Target = 0x40; // FRawDistributionVector
		constexpr auto bTargetAbsolute = 0x90; // char : 1
		constexpr auto bLockTarget = 0x90; // char : 1
		constexpr auto TargetTangentMethod = 0x94; // Beam2SourceTargetTangentMethod
		constexpr auto TargetTangent = 0x98; // FRawDistributionVector
		constexpr auto bLockTargetTangent = 0xe8; // char : 1
		constexpr auto TargetStrength = 0xf0; // FRawDistributionFloat
		constexpr auto bLockTargetStength = 0x128; // char : 1
		constexpr auto LockRadius = 0x12c; // float
	}

	namespace n_UPlayFabLeaderboardsAPI { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnPlayFabResponse = 0x28; // FScriptMulticastDelegate
		constexpr auto CallAuthenticationContext = 0x120; // UPlayFabAuthenticationContext*
		constexpr auto RequestJsonObj = 0x128; // UPlayFabJsonObject*
		constexpr auto ResponseJsonObj = 0x130; // UPlayFabJsonObject*
	}

	namespace n_UPatchNotesView { // : URootWidget
		constexpr auto PatchNotesXMLURL = 0x318; // FString
		constexpr auto PatchNotesPageURL = 0x328; // FString
		constexpr auto NoteViewClass = 0x338; // UPatchNotesEntryView*
		constexpr auto B_LinkTwitchButton = 0x340; // UPatchNotesEntryView*
		constexpr auto m_NotesContainerView = 0x348; // UVerticalBox*
		constexpr auto m_MoreButton = 0x350; // UFCButton*
		constexpr auto m_SettingsGUIModule = 0x368; // UGUIModule*
	}

	namespace n_ADWLevelScriptActor { // : ALevelScriptActor
		constexpr auto bInputEnabled = 0x3d0; // char : 1
	}

	namespace n_UBTComposite_Sequence { // : UBTCompositeNode
		constexpr auto Children = 0x58; // TArray<FBTCompositeChild>
		constexpr auto Services = 0x68; // TArray<UBTService*>
	}

	namespace n_UTextBlockWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto TextBlockStyle = 0x30; // FTextBlockStyle
	}

	namespace n_ASceneCapture { // : AActor
		constexpr auto MeshComp = 0x3d0; // UStaticMeshComponent*
	}

	namespace n_UMaterialExpressionDotProduct { // : UMaterialExpression
		constexpr auto A = 0x60; // FExpressionInput
		constexpr auto B = 0x98; // FExpressionInput
	}

	namespace n_UGameplayTagsSettings { // : UGameplayTagsList
		constexpr auto ImportTagsFromConfig = 0x48; // bool
		constexpr auto WarnOnInvalidTags = 0x49; // bool
		constexpr auto FastReplication = 0x4a; // bool
		constexpr auto GameplayTagTableList = 0x50; // TArray<FStringAssetReference>
		constexpr auto GameplayTagRedirects = 0x60; // TArray<FGameplayTagRedirect>
		constexpr auto CommonlyReplicatedTags = 0x70; // TArray<FName>
		constexpr auto NumBitsForContainerSize = 0x80; // int32_t
		constexpr auto NetIndexFirstBitSegment = 0x84; // int32_t
	}

	namespace n_UMaterialExpression { // : UObject
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto Desc = 0x38; // FString
		constexpr auto BorderColor = 0x48; // FColor
		constexpr auto bRealtimePreview = 0x4c; // char : 1
		constexpr auto bNeedToUpdatePreview = 0x4c; // char : 1
		constexpr auto bIsParameterExpression = 0x4c; // char : 1
		constexpr auto bCommentBubbleVisible = 0x4c; // char : 1
		constexpr auto bShowOutputNameOnPin = 0x4c; // char : 1
		constexpr auto bHidePreviewWindow = 0x4c; // char : 1
		constexpr auto bCollapsed = 0x4c; // char : 1
		constexpr auto bShaderInputData = 0x4c; // char : 1
		constexpr auto bShowInputs = 0x4c; // char : 1
		constexpr auto bShowOutputs = 0x4c; // char : 1
		constexpr auto Outputs = 0x50; // TArray<FExpressionOutput>
	}

	namespace n_UConnectionCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto onSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto onFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_UParticleModuleAttractorPoint { // : UParticleModuleAttractorBase
		constexpr auto Position = 0x30; // FRawDistributionVector
		constexpr auto range = 0x80; // FRawDistributionFloat
		constexpr auto Strength = 0xb8; // FRawDistributionFloat
		constexpr auto StrengthByDistance = 0xf0; // char : 1
		constexpr auto bAffectBaseVelocity = 0xf0; // char : 1
		constexpr auto bOverrideVelocity = 0xf0; // char : 1
		constexpr auto bUseWorldSpacePosition = 0xf0; // char : 1
		constexpr auto Positive_X = 0xf0; // char : 1
		constexpr auto Positive_Y = 0xf0; // char : 1
		constexpr auto Positive_Z = 0xf0; // char : 1
		constexpr auto Negative_X = 0xf0; // char : 1
		constexpr auto Negative_Y = 0xf0; // char : 1
		constexpr auto Negative_Z = 0xf0; // char : 1
	}

	namespace n_UMaterialExpressionPixelDepth { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto Desc = 0x38; // FString
		constexpr auto BorderColor = 0x48; // FColor
		constexpr auto bRealtimePreview = 0x4c; // char : 1
		constexpr auto bNeedToUpdatePreview = 0x4c; // char : 1
		constexpr auto bIsParameterExpression = 0x4c; // char : 1
		constexpr auto bCommentBubbleVisible = 0x4c; // char : 1
		constexpr auto bShowOutputNameOnPin = 0x4c; // char : 1
		constexpr auto bHidePreviewWindow = 0x4c; // char : 1
		constexpr auto bCollapsed = 0x4c; // char : 1
		constexpr auto bShaderInputData = 0x4c; // char : 1
		constexpr auto bShowInputs = 0x4c; // char : 1
		constexpr auto bShowOutputs = 0x4c; // char : 1
		constexpr auto Outputs = 0x50; // TArray<FExpressionOutput>
	}

	namespace n_UParticleModuleLocationWorldOffset_Seeded { // : UParticleModuleLocationWorldOffset
		constexpr auto RandomSeedInfo = 0x88; // FParticleRandomSeedInfo
	}

	namespace n_UConanAnimMetaData { // : UAnimMetaData
		constexpr auto MontageType = 0x28; // EMontageType
		constexpr auto BlockOtherSimilarMontages = 0x29; // bool
		constexpr auto BlockMountMovement = 0x2a; // bool
	}

	namespace n_AInventoryItemBase { // : AActor
		constexpr auto EquipSocketName = 0x3e0; // FName
		constexpr auto CanUseInWater = 0x3e8; // bool
		constexpr auto OwnerItem = 0x3f0; // UGameItem*
		constexpr auto MeshType = 0x3f8; // VisualMeshType
	}

	namespace n_UBTDecorator_TimeLimit { // : UBTDecorator
		constexpr auto TimeLimit = 0x68; // float
	}

	namespace n_ASpecialPropertiesVolume { // : AActor
		constexpr auto AllowUndermeshing = 0x3d0; // bool
		constexpr auto AllowBuildingUnderHeightmap = 0x3d1; // bool
		constexpr auto Whitelist = 0x3d8; // TArray<UClass*>
	}

	namespace n_UPlayerInput { // : UObject
		constexpr auto DebugExecBindings = 0x188; // TArray<FKeyBind>
		constexpr auto InvertedAxis = 0x1c8; // TArray<FName>
	}

	namespace n_ULandscapeLayerInfoObject { // : UObject
		constexpr auto LayerName = 0x28; // FName
		constexpr auto PhysMaterial = 0x30; // UPhysicalMaterial*
		constexpr auto Hardness = 0x38; // float
		constexpr auto LayerUsageDebugColor = 0x3c; // FLinearColor
	}

	namespace n_UMaterialExpressionDynamicParameter { // : UMaterialExpression
		constexpr auto ParamNames = 0x60; // TArray<FString>
		constexpr auto DefaultValue = 0x70; // FLinearColor
	}

	namespace n_UPlanarReflectionComponent { // : USceneCaptureComponent
		constexpr auto PreviewBox = 0x3e0; // UBoxComponent*
		constexpr auto NormalDistortionStrength = 0x3e8; // float
		constexpr auto PrefilterRoughness = 0x3ec; // float
		constexpr auto PrefilterRoughnessDistance = 0x3f0; // float
		constexpr auto ScreenPercentage = 0x3f4; // int32_t
		constexpr auto ExtraFOV = 0x3f8; // float
		constexpr auto DistanceFromPlaneFadeStart = 0x3fc; // float
		constexpr auto DistanceFromPlaneFadeEnd = 0x400; // float
		constexpr auto DistanceFromPlaneFadeoutStart = 0x404; // float
		constexpr auto DistanceFromPlaneFadeoutEnd = 0x408; // float
		constexpr auto AngleFromPlaneFadeStart = 0x40c; // float
		constexpr auto AngleFromPlaneFadeEnd = 0x410; // float
		constexpr auto bRenderSceneTwoSided = 0x414; // bool
	}

	namespace n_URadialMenuEntry { // : UObject
		constexpr auto Label = 0x28; // FText
		constexpr auto subtitle = 0x40; // FText
		constexpr auto Icon = 0x58; // UObject*
		constexpr auto IconWidget = 0x60; // URootWidget*
		constexpr auto UserCategory = 0x68; // int32_t
		constexpr auto UserValue = 0x6c; // int32_t
		constexpr auto SubmenuTable = 0x70; // UDataTable*
		constexpr auto UserObject = 0x78; // UObject*
		constexpr auto KeyShortcutName = 0x80; // FName
		constexpr auto UserTag = 0x88; // FName
		constexpr auto SignalClicked = 0x90; // FScriptMulticastDelegate
		constexpr auto m_ChildEntries = 0xa8; // TArray<URadialMenuEntry*>
		constexpr auto m_Parent = 0xb8; // URadialMenuEntry*
	}

	namespace n_UMovieSceneSpawnSection { // : UMovieSceneBoolSection
		constexpr auto DefaultValue = 0xd0; // bool
		constexpr auto BoolCurve = 0xd8; // FIntegralCurve
	}

	namespace n_UParticleModuleParameterDynamic_Seeded { // : UParticleModuleParameterDynamic
		constexpr auto RandomSeedInfo = 0x48; // FParticleRandomSeedInfo
	}

	namespace n_ALobbyBeaconHost { // : AOnlineBeaconHostObject
		constexpr auto LobbyStateClass = 0x400; // UClass*
		constexpr auto LobbyState = 0x420; // ALobbyBeaconState*
	}

	namespace n_UW_GamepadHelpEntry_C { // : UGamepadHelpEntryBase
		constexpr auto HotkeyDescription = 0x3a0; // UTextBlock*
		constexpr auto IconsContainer = 0x3a8; // UHorizontalBox*
	}

	namespace n_UBTComposite_SimpleParallel { // : UBTCompositeNode
		constexpr auto FinishMode = 0xc8; // EBTParallelMode
	}

	namespace n_UMaterialExpressionRound { // : UMaterialExpression
		constexpr auto Input = 0x60; // FExpressionInput
	}

	namespace n_UParticleModuleColorOverLife { // : UParticleModuleColorBase
		constexpr auto ColorOverLife = 0x30; // FRawDistributionVector
		constexpr auto AlphaOverLife = 0x80; // FRawDistributionFloat
		constexpr auto bClampAlpha = 0xb8; // char : 1
	}

	namespace n_UNavLinkRenderingComponent { // : UPrimitiveComponent
		constexpr auto MinDrawDistance = 0x308; // float
		constexpr auto LDMaxDrawDistance = 0x30c; // float
		constexpr auto CachedMaxDrawDistance = 0x310; // float
		constexpr auto DepthPriorityGroup = 0x314; // ESceneDepthPriorityGroup
		constexpr auto ViewOwnerDepthPriorityGroup = 0x315; // ESceneDepthPriorityGroup
		constexpr auto bAlwaysCreatePhysicsState = 0x318; // char : 1
		constexpr auto bGenerateOverlapEvents = 0x318; // char : 1
		constexpr auto bForceGenerateOverlapEvents = 0x318; // char : 1
		constexpr auto bMultiBodyOverlap = 0x318; // char : 1
		constexpr auto bCheckAsyncSceneOnMove = 0x318; // char : 1
		constexpr auto bTraceComplexOnMove = 0x318; // char : 1
		constexpr auto bReturnMaterialOnMove = 0x318; // char : 1
		constexpr auto bUseViewOwnerDepthPriorityGroup = 0x318; // char : 1
		constexpr auto bAllowCullDistanceVolume = 0x318; // char : 1
		constexpr auto bHasMotionBlurVelocityMeshes = 0x318; // char : 1
		constexpr auto bVisibleInReflectionCaptures = 0x318; // char : 1
		constexpr auto bRenderInMainPass = 0x318; // char : 1
		constexpr auto bRenderInMono = 0x318; // char : 1
		constexpr auto bReceivesDecals = 0x318; // char : 1
		constexpr auto bOwnerNoSee = 0x318; // char : 1
		constexpr auto bOnlyOwnerSee = 0x318; // char : 1
		constexpr auto bTreatAsBackgroundForOcclusion = 0x318; // char : 1
		constexpr auto bHeightOutputReferenceSand = 0x318; // char : 1
		constexpr auto bHeightOutputReferenceWater = 0x318; // char : 1
		constexpr auto bHeightOutputIgnoreSand = 0x318; // char : 1
		constexpr auto bHeightOutputIgnoreWater = 0x318; // char : 1
		constexpr auto bCullFromDistantShadowCascades = 0x318; // char : 1
		constexpr auto bUseAsOccluder = 0x318; // char : 1
		constexpr auto bSelectable = 0x318; // char : 1
		constexpr auto bForceMipStreaming = 0x318; // char : 1
		constexpr auto bHasPerInstanceHitProxies = 0x318; // char : 1
		constexpr auto CastShadow = 0x318; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x318; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x318; // char : 1
		constexpr auto bCastDynamicShadow = 0x318; // char : 1
		constexpr auto bCastStaticShadow = 0x318; // char : 1
		constexpr auto bCastVolumetricTranslucentShadow = 0x318; // char : 1
		constexpr auto bSelfShadowOnly = 0x31c; // char : 1
		constexpr auto bCastFarShadow = 0x31c; // char : 1
		constexpr auto bCastInsetShadow = 0x31c; // char : 1
		constexpr auto bCastCinematicShadow = 0x31c; // char : 1
		constexpr auto bCastHiddenShadow = 0x31c; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x31c; // char : 1
		constexpr auto bLightAsIfStatic = 0x31c; // char : 1
		constexpr auto bLightAttachmentsAsGroup = 0x31c; // char : 1
		constexpr auto bReceiveCombinedCSMAndStaticShadowsFromStationaryLights = 0x31c; // char : 1
		constexpr auto bSingleSampleShadowFromStationaryLights = 0x31c; // char : 1
		constexpr auto bIgnoreRadialImpulse = 0x31c; // char : 1
		constexpr auto bIgnoreRadialForce = 0x31c; // char : 1
		constexpr auto AlwaysLoadOnClient = 0x31c; // char : 1
		constexpr auto AlwaysLoadOnServer = 0x31c; // char : 1
		constexpr auto bUseEditorCompositing = 0x31c; // char : 1
		constexpr auto bRenderCustomDepth = 0x31c; // char : 1
		constexpr auto IndirectLightingCacheQuality = 0x320; // EIndirectLightingCacheQuality
		constexpr auto bHasCustomNavigableGeometry = 0x321; // EHasCustomNavigableGeometry
		constexpr auto CanCharacterStepUpOn = 0x323; // ECanBeCharacterBase
		constexpr auto LightingChannels = 0x324; // FLightingChannels
		constexpr auto CustomDepthStencilValue = 0x328; // int32_t
		constexpr auto TranslucencySortPriority = 0x32c; // int32_t
		constexpr auto VisibilityId = 0x330; // int32_t
		constexpr auto LpvBiasMultiplier = 0x338; // float
		constexpr auto BodyInstance = 0x340; // FBodyInstance
		constexpr auto BoundsScale = 0x574; // float
		constexpr auto LastSubmitTime = 0x578; // float
		constexpr auto LastRenderTime = 0x57c; // float
		constexpr auto LastRenderTimeOnScreen = 0x580; // float
		constexpr auto MoveIgnoreActors = 0x588; // TArray<AActor*>
		constexpr auto MoveIgnoreComponents = 0x598; // TArray<UPrimitiveComponent*>
		constexpr auto OnComponentHit = 0x5b8; // FScriptMulticastDelegate
		constexpr auto OnComponentBeginOverlap = 0x5c8; // FScriptMulticastDelegate
		constexpr auto OnComponentEndOverlap = 0x5d8; // FScriptMulticastDelegate
		constexpr auto OnComponentWake = 0x5e8; // FScriptMulticastDelegate
		constexpr auto OnComponentSleep = 0x5f8; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x608; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x618; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x628; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x638; // FScriptMulticastDelegate
		constexpr auto LODParentPrimitive = 0x660; // UPrimitiveComponent*
		constexpr auto PostPhysicsComponentTick = 0x668; // FPrimitiveComponentPostPhysicsTickFunction
	}

	namespace n_UKeyBindingsCommandBase { // : URootWidget
		constexpr auto KeyNavOnSelectedEvent = 0x240; // FScriptMulticastDelegate
		constexpr auto KeyNavLeft = 0x250; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavRight = 0x258; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavAbove = 0x260; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavBelow = 0x268; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavTab = 0x270; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildLeft = 0x278; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildRight = 0x280; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildAbove = 0x288; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildBelow = 0x290; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildTab = 0x298; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildren = 0x2a0; // TWeakObjectPtr<URootWidget>
		constexpr auto TooltipWidgetClass = 0x2a8; // UTooltipWidget*
		constexpr auto KeyNavIndicatorClass = 0x2b0; // UKeyNavIndicator*
		constexpr auto PositiveFeedbackColor = 0x2b8; // FLinearColor
		constexpr auto NegativeFeedbackColor = 0x2c8; // FLinearColor
		constexpr auto NeutralFeedbackColor = 0x2d8; // FLinearColor
		constexpr auto KeyNavFocusOnClick = 0x2e8; // bool
		constexpr auto KeyNavAutoSetBack = 0x2e9; // bool
		constexpr auto m_Window = 0x2f0; // UWindowRoot*
		constexpr auto m_Parent = 0x2f8; // TWeakObjectPtr<URootWidget>
		constexpr auto m_KeyNavIndicator = 0x300; // UKeyNavIndicator*
	}

	namespace n_UNiagaraComponent { // : UPrimitiveComponent
		constexpr auto Asset = 0x6c0; // UNiagaraEffect*
	}

	namespace n_UMovieSceneCapture { // : UObject
		constexpr auto CaptureType = 0x38; // FCaptureProtocolID
		constexpr auto ProtocolSettings = 0x40; // UMovieSceneCaptureProtocolSettings*
		constexpr auto Settings = 0x48; // FMovieSceneCaptureSettings
		constexpr auto bUseSeparateProcess = 0x98; // bool
		constexpr auto bCloseEditorWhenCaptureStarts = 0x99; // bool
		constexpr auto AdditionalCommandLineArguments = 0xa0; // FString
		constexpr auto InheritedCommandLineArguments = 0xb0; // FString
	}

	namespace n_ASpatialHashSystem { // : AInfo
		constexpr auto UpdateInterval = 0x3d0; // float
		constexpr auto Components = 0x3e0; // TMap<uint32_t, FSpatialObjectSet>
		constexpr auto ComponentMaxRadius = 0x430; // TMap<USceneComponent*, float>
	}

	namespace n_UProgressBar { // : UWidget
		constexpr auto WidgetStyle = 0x118; // FProgressBarStyle
		constexpr auto Style = 0x2d0; // USlateWidgetStyleAsset*
		constexpr auto BackgroundImage = 0x2d8; // USlateBrushAsset*
		constexpr auto FillImage = 0x2e0; // USlateBrushAsset*
		constexpr auto MarqueeImage = 0x2e8; // USlateBrushAsset*
		constexpr auto Percent = 0x2f0; // float
		constexpr auto BarFillType = 0x2f4; // EProgressBarFillType
		constexpr auto bIsMarquee = 0x2f5; // bool
		constexpr auto PercentDelegate = 0x2f8; // DelegateProperty
		constexpr auto FillColorAndOpacity = 0x308; // FLinearColor
		constexpr auto FillColorAndOpacityDelegate = 0x318; // DelegateProperty
	}

	namespace n_UFCBloodBlitzButton { // : UFCButton
		constexpr auto StonePlateTexture = 0xc20; // UTexture2D*
		constexpr auto StonePlateHoverTexture = 0xc28; // UTexture2D*
		constexpr auto TextureIcon = 0xc30; // UTexture2D*
		constexpr auto TextureBlood1 = 0xc50; // UTexture2D*
		constexpr auto TextureBlood2 = 0xc70; // UTexture2D*
		constexpr auto TextureBlood3 = 0xc90; // UTexture2D*
		constexpr auto TextureBlood4 = 0xcb0; // UTexture2D*
	}

	namespace n_UMapMarkerView { // : URootWidget
		constexpr auto MapMarkerImage = 0x328; // UImage*
		constexpr auto mapMarkerId = 0x330; // int32_t
		constexpr auto WorldLocation = 0x334; // FVector
		constexpr auto Location2D = 0x340; // FVector2D
	}

	namespace n_USoundNodeMature { // : USoundNode
		constexpr auto ChildNodes = 0x28; // TArray<USoundNode*>
	}

	namespace n_UPlayerListEntry { // : URootWidget
		constexpr auto KeyNavOnSelectedEvent = 0x240; // FScriptMulticastDelegate
		constexpr auto KeyNavLeft = 0x250; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavRight = 0x258; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavAbove = 0x260; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavBelow = 0x268; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavTab = 0x270; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildLeft = 0x278; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildRight = 0x280; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildAbove = 0x288; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildBelow = 0x290; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildTab = 0x298; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildren = 0x2a0; // TWeakObjectPtr<URootWidget>
		constexpr auto TooltipWidgetClass = 0x2a8; // UTooltipWidget*
		constexpr auto KeyNavIndicatorClass = 0x2b0; // UKeyNavIndicator*
		constexpr auto PositiveFeedbackColor = 0x2b8; // FLinearColor
		constexpr auto NegativeFeedbackColor = 0x2c8; // FLinearColor
		constexpr auto NeutralFeedbackColor = 0x2d8; // FLinearColor
		constexpr auto KeyNavFocusOnClick = 0x2e8; // bool
		constexpr auto KeyNavAutoSetBack = 0x2e9; // bool
		constexpr auto m_Window = 0x2f0; // UWindowRoot*
		constexpr auto m_Parent = 0x2f8; // TWeakObjectPtr<URootWidget>
		constexpr auto m_KeyNavIndicator = 0x300; // UKeyNavIndicator*
	}

	namespace n_UNamedSlot { // : UContentWidget
		constexpr auto Slots = 0x118; // TArray<UPanelSlot*>
	}

	namespace n_USkeletalMeshComponent { // : USkinnedMeshComponent
		constexpr auto AnimationMode = 0x948; // EAnimationMode
		constexpr auto AnimClass = 0x950; // UAnimInstance*
		constexpr auto AnimScriptInstance = 0x958; // UAnimInstance*
		constexpr auto SubInstances = 0x960; // TArray<UAnimInstance*>
		constexpr auto PostProcessAnimInstance = 0x970; // UAnimInstance*
		constexpr auto AnimationData = 0x978; // FSingleAnimationPlayData
		constexpr auto CachedBoneSpaceTransforms = 0x9c0; // TArray<FTransform>
		constexpr auto CachedComponentSpaceTransforms = 0x9d0; // TArray<FTransform>
		constexpr auto GlobalAnimRateScale = 0xa00; // float
		constexpr auto bHasValidBodies = 0xa04; // char : 1
		constexpr auto KinematicBonesUpdateType = 0xa08; // EKinematicBonesUpdateToPhysics
		constexpr auto PhysicsTransformUpdateMode = 0xa09; // EPhysicsTransformUpdateMode
		constexpr auto bBlendPhysics = 0xa0c; // char : 1
		constexpr auto bEnablePhysicsOnDedicatedServer = 0xa0c; // char : 1
		constexpr auto bUpdateJointsFromAnimation = 0xa0c; // char : 1
		constexpr auto bDisableClothSimulation = 0xa0c; // char : 1
		constexpr auto bCollideWithEnvironment = 0xa0c; // char : 1
		constexpr auto bCollideWithAttachedChildren = 0xa0c; // char : 1
		constexpr auto bLocalSpaceSimulation = 0xa0c; // char : 1
		constexpr auto bClothMorphTarget = 0xa0c; // char : 1
		constexpr auto bResetAfterTeleport = 0xa0c; // char : 1
		constexpr auto TeleportDistanceThreshold = 0xa10; // float
		constexpr auto TeleportRotationThreshold = 0xa14; // float
		constexpr auto ClothBlendWeight = 0xa18; // float
		constexpr auto RootBoneTranslation = 0xa20; // FVector
		constexpr auto bNoSkeletonUpdate = 0xa2c; // char : 1
		constexpr auto bPauseAnims = 0xa2c; // char : 1
		constexpr auto bUseRefPoseOnInitAnim = 0xa30; // bool
		constexpr auto bEnablePerPolyCollision = 0xa34; // char : 1
		constexpr auto BodySetup = 0xa38; // UBodySetup*
		constexpr auto bOnlyAllowAutonomousTickPose = 0xa40; // char : 1
		constexpr auto bIsAutonomousTickPose = 0xa40; // char : 1
		constexpr auto bForceRefpose = 0xa40; // char : 1
		constexpr auto bOldForceRefPose = 0xa40; // char : 1
		constexpr auto bShowPrePhysBones = 0xa40; // char : 1
		constexpr auto bRequiredBonesUpToDate = 0xa40; // char : 1
		constexpr auto bAnimTreeInitialised = 0xa40; // char : 1
		constexpr auto bIncludeComponentLocationIntoBounds = 0xa40; // char : 1
		constexpr auto bEnableLineCheckWithBounds = 0xa40; // char : 1
		constexpr auto CachedAnimCurveUidVersion = 0xa44; // uint16_t
		constexpr auto LineCheckBoundsScale = 0xa48; // FVector
		constexpr auto OnConstraintBroken = 0xa58; // FScriptMulticastDelegate
		constexpr auto OnAnimInstanceClassChanged = 0xa68; // FScriptMulticastDelegate
		constexpr auto PhysMaterialOverrideForBodies = 0xaa0; // TMap<int32_t, UPhysicalMaterial*>
		constexpr auto SequenceToPlay = 0xe80; // UAnimSequence*
		constexpr auto AnimToPlay = 0xe88; // UAnimationAsset*
		constexpr auto bDefaultLooping = 0xe90; // char : 1
		constexpr auto bDefaultPlaying = 0xe90; // char : 1
		constexpr auto DefaultPosition = 0xe94; // float
		constexpr auto DefaultPlayRate = 0xe98; // float
		constexpr auto LastPoseTickTime = 0xe9c; // float
		constexpr auto SynchronizedSkeletalComponent = 0xf10; // USkeletalMeshComponent*
		constexpr auto bIsBeingSynchronized = 0xf18; // char : 1
	}

	namespace n_UMaterialExpressionStaticBoolParameter { // : UMaterialExpressionParameter
		constexpr auto DefaultValue = 0x80; // char : 1
	}

	namespace n_UDistributionVectorUniform { // : UDistributionVector
		constexpr auto Max = 0x38; // FVector
		constexpr auto Min = 0x44; // FVector
		constexpr auto bLockAxes = 0x50; // char : 1
		constexpr auto LockedAxes = 0x54; // EDistributionVectorLockFlags
		constexpr auto MirrorFlags = 0x55; // EDistributionVectorMirrorFlags [0x3]
		constexpr auto bUseExtremes = 0x58; // char : 1
	}

	namespace n_UMaterialExpressionSpeedTree { // : UMaterialExpression
		constexpr auto GeometryType = 0x60; // ESpeedTreeGeometryType
		constexpr auto WindType = 0x61; // ESpeedTreeWindType
		constexpr auto LODType = 0x62; // ESpeedTreeLODType
		constexpr auto BillboardThreshold = 0x64; // float
		constexpr auto bAccurateWindVelocities = 0x68; // bool
	}

	namespace n_UConanOnlineEventsLibrary { // : UObject
		constexpr auto m_richPresenceTextTable = 0xf8; // UDataTable*
	}

	namespace n_USphereComponent { // : UShapeComponent
		constexpr auto SphereRadius = 0x6e0; // float
	}

	namespace n_UMaterial { // : UMaterialInterface
		constexpr auto PhysMaterial = 0x70; // UPhysicalMaterial*
		constexpr auto DiffuseColor = 0x78; // FColorMaterialInput
		constexpr auto SpecularColor = 0xb8; // FColorMaterialInput
		constexpr auto BaseColor = 0xf8; // FColorMaterialInput
		constexpr auto Metallic = 0x138; // FScalarMaterialInput
		constexpr auto Specular = 0x178; // FScalarMaterialInput
		constexpr auto Roughness = 0x1b8; // FScalarMaterialInput
		constexpr auto Normal = 0x1f8; // FVectorMaterialInput
		constexpr auto EmissiveColor = 0x240; // FColorMaterialInput
		constexpr auto Opacity = 0x280; // FScalarMaterialInput
		constexpr auto OpacityMask = 0x2c0; // FScalarMaterialInput
		constexpr auto MaterialDomain = 0x300; // EMaterialDomain
		constexpr auto BlendMode = 0x301; // EBlendMode
		constexpr auto DecalBlendMode = 0x302; // EDecalBlendMode
		constexpr auto MaterialDecalResponse = 0x303; // EMaterialDecalResponse
		constexpr auto ShadingModel = 0x304; // EMaterialShadingModel
		constexpr auto OpacityMaskClipValue = 0x308; // float
		constexpr auto WorldPositionOffset = 0x310; // FVectorMaterialInput
		constexpr auto WorldDisplacement = 0x358; // FVectorMaterialInput
		constexpr auto TessellationMultiplier = 0x3a0; // FScalarMaterialInput
		constexpr auto SubsurfaceColor = 0x3e0; // FColorMaterialInput
		constexpr auto ClearCoat = 0x420; // FScalarMaterialInput
		constexpr auto ClearCoatRoughness = 0x460; // FScalarMaterialInput
		constexpr auto AmbientOcclusion = 0x4a0; // FScalarMaterialInput
		constexpr auto Refraction = 0x4e0; // FScalarMaterialInput
		constexpr auto CustomizedUVs = 0x520; // FVector2MaterialInput [0x8]
		constexpr auto MaterialAttributes = 0x760; // FMaterialAttributesInput
		constexpr auto PixelDepthOffset = 0x7a0; // FScalarMaterialInput
		constexpr auto bEnableSeparateTranslucency = 0x7e0; // char : 1
		constexpr auto bEnableMobileSeparateTranslucency = 0x7e0; // char : 1
		constexpr auto bEnableResponsiveAA = 0x7e0; // char : 1
		constexpr auto bScreenSpaceReflections = 0x7e0; // char : 1
		constexpr auto TwoSided = 0x7e0; // char : 1
		constexpr auto DitheredLODTransition = 0x7e0; // char : 1
		constexpr auto DitherOpacityMask = 0x7e0; // char : 1
		constexpr auto bAllowNegativeEmissiveColor = 0x7e0; // char : 1
		constexpr auto NumCustomizedUVs = 0x7e4; // int32_t
		constexpr auto TranslucencyLightingMode = 0x7e8; // ETranslucencyLightingMode
		constexpr auto TranslucencyDirectionalLightingIntensity = 0x7ec; // float
		constexpr auto AllowTranslucentCustomDepthWrites = 0x7f0; // char : 1
		constexpr auto TranslucentShadowDensityScale = 0x7f4; // float
		constexpr auto TranslucentSelfShadowDensityScale = 0x7f8; // float
		constexpr auto TranslucentSelfShadowSecondDensityScale = 0x7fc; // float
		constexpr auto TranslucentSelfShadowSecondOpacity = 0x800; // float
		constexpr auto TranslucentBackscatteringExponent = 0x804; // float
		constexpr auto TranslucentMultipleScatteringExtinction = 0x808; // FLinearColor
		constexpr auto TranslucentShadowStartOffset = 0x818; // float
		constexpr auto bDisableDepthTest = 0x81c; // char : 1
		constexpr auto bGenerateSphericalParticleNormals = 0x81c; // char : 1
		constexpr auto bTangentSpaceNormal = 0x81c; // char : 1
		constexpr auto bUseEmissiveForDynamicAreaLighting = 0x81c; // char : 1
		constexpr auto bBlockGI = 0x81c; // char : 1
		constexpr auto bUsedAsSpecialEngineMaterial = 0x81c; // char : 1
		constexpr auto bUsedWithSkeletalMesh = 0x81c; // char : 1
		constexpr auto bUsedWithEditorCompositing = 0x81c; // char : 1
		constexpr auto bUsedWithParticleSprites = 0x81c; // char : 1
		constexpr auto bUsedWithBeamTrails = 0x81c; // char : 1
		constexpr auto bUsedWithMeshParticles = 0x81c; // char : 1
		constexpr auto bUsedWithStaticLighting = 0x81c; // char : 1
		constexpr auto bUsedWithMorphTargets = 0x81c; // char : 1
		constexpr auto bUsedWithSplineMeshes = 0x81c; // char : 1
		constexpr auto bUsedWithInstancedStaticMeshes = 0x81c; // char : 1
		constexpr auto bUsesDistortion = 0x81c; // char : 1
		constexpr auto bUsedWithClothing = 0x81c; // char : 1
		constexpr auto bUsedWithUI = 0x81c; // char : 1
		constexpr auto bAutomaticallySetUsageInEditor = 0x81c; // char : 1
		constexpr auto bFullyRough = 0x81c; // char : 1
		constexpr auto bUseFullPrecision = 0x81c; // char : 1
		constexpr auto bUseLightmapDirectionality = 0x81c; // char : 1
		constexpr auto bUseHQForwardReflections = 0x81c; // char : 1
		constexpr auto bUsePlanarForwardReflections = 0x81c; // char : 1
		constexpr auto bNormalCurvatureToRoughness = 0x81c; // char : 1
		constexpr auto D3D11TessellationMode = 0x820; // EMaterialTessellationMode
		constexpr auto bEnableCrackFreeDisplacement = 0x824; // char : 1
		constexpr auto bEnableAdaptiveTessellation = 0x824; // char : 1
		constexpr auto MaxDisplacement = 0x828; // float
		constexpr auto Wireframe = 0x82c; // char : 1
		constexpr auto bOutputVelocityOnBasePass = 0x82c; // char : 1
		constexpr auto EditorX = 0x830; // int32_t
		constexpr auto EditorY = 0x834; // int32_t
		constexpr auto EditorPitch = 0x838; // int32_t
		constexpr auto EditorYaw = 0x83c; // int32_t
		constexpr auto Expressions = 0x840; // TArray<UMaterialExpression*>
		constexpr auto MaterialFunctionInfos = 0x850; // TArray<FMaterialFunctionInfo>
		constexpr auto MaterialParameterCollectionInfos = 0x860; // TArray<FMaterialParameterCollectionInfo>
		constexpr auto bCanMaskedBeAssumedOpaque = 0x870; // char : 1
		constexpr auto bIsMasked = 0x870; // char : 1
		constexpr auto bIsPreviewMaterial = 0x870; // char : 1
		constexpr auto bUseMaterialAttributes = 0x870; // char : 1
		constexpr auto bUseTranslucencyVertexFog = 0x870; // char : 1
		constexpr auto bComputeFogPerPixel = 0x870; // char : 1
		constexpr auto bAllowDevelopmentShaderCompile = 0x870; // char : 1
		constexpr auto bIsMaterialEditorStatsMaterial = 0x870; // char : 1
		constexpr auto UsageFlagWarnings = 0x874; // uint32_t
		constexpr auto BlendableLocation = 0x878; // EBlendableLocation
		constexpr auto BlendablePriority = 0x87c; // int32_t
		constexpr auto BlendableOutputAlpha = 0x880; // bool
		constexpr auto RefractionMode = 0x881; // ERefractionMode
		constexpr auto RefractionDepthBias = 0x884; // float
		constexpr auto StateId = 0x888; // FGuid
		constexpr auto ExpressionGraniteTextureReferences = 0x900; // TArray<UGraniteTexture*>
		constexpr auto ExpressionTextureReferences = 0x988; // TArray<UTexture*>
	}

	namespace n_UBuildingRecordingRebuilderProxy { // : UBlueprintAsyncActionBase
		constexpr auto BuildingCreated = 0x28; // FScriptMulticastDelegate
		constexpr auto BuildingFailed = 0x38; // FScriptMulticastDelegate
		constexpr auto BuildingProgressUpdate = 0x48; // FScriptMulticastDelegate
		constexpr auto m_RealTimeModifier = 0xb8; // double
		constexpr auto m_FixedIntervalTime = 0xc0; // double
		constexpr auto m_StopAtSanityError = 0xc8; // bool
		constexpr auto m_EnforceExpensiveSanityCheck = 0xc9; // bool
		constexpr auto m_OwnerUniqueID = 0xd0; // UUniqueID*
		constexpr auto m_BuildingUniqueID = 0xd8; // UUniqueID*
		constexpr auto m_ReplayBuildingRecord = 0xe0; // TArray<FBuildingRecordEntry>
		constexpr auto m_ServerRuntimeStart = 0xf0; // double
		constexpr auto m_ServerRuntimeLast = 0xf8; // double
		constexpr auto m_ServerRuntimeNext = 0x100; // double
		constexpr auto m_ExecutedInstructions = 0x108; // int32_t
		constexpr auto m_NumInstructionsToExecute = 0x10c; // int32_t
	}

	namespace n_UBuildingMasterActorComponent { // : UActorComponent
		constexpr auto PrimaryComponentTick = 0x30; // FActorComponentTickFunction
		constexpr auto ComponentTags = 0x88; // TArray<FName>
		constexpr auto AssetUserData = 0x98; // TArray<UAssetUserData*>
		constexpr auto bReplicates = 0xa8; // char : 1
		constexpr auto bIsClientOnly = 0xa8; // char : 1
		constexpr auto bNetAddressable = 0xa8; // char : 1
		constexpr auto bAllowAnyoneToDestroyMe = 0xa8; // char : 1
		constexpr auto bCreatedByConstructionScript = 0xa8; // char : 1
		constexpr auto bInstanceComponent = 0xa8; // char : 1
		constexpr auto bAutoActivate = 0xa8; // char : 1
		constexpr auto bIsActive = 0xa8; // char : 1
		constexpr auto bEditableWhenInherited = 0xa8; // char : 1
		constexpr auto bCanEverAffectNavigation = 0xa8; // char : 1
		constexpr auto bIsEditorOnly = 0xa8; // char : 1
		constexpr auto CreationMethod = 0xb1; // EComponentCreationMethod
		constexpr auto UCSModifiedProperties = 0xc0; // TArray<FSimpleMemberReference>
		constexpr auto OnComponentActivated = 0xd0; // FScriptMulticastDelegate
		constexpr auto OnComponentDeactivated = 0xe0; // FScriptMulticastDelegate
	}

	namespace n_APartyBeaconClient { // : AOnlineBeaconClient
		constexpr auto DestSessionId = 0x520; // FString
		constexpr auto PendingReservation = 0x530; // FPartyReservation
		constexpr auto RequestType = 0x560; // EClientRequestType
		constexpr auto bPendingReservationSent = 0x561; // bool
		constexpr auto bCancelReservation = 0x562; // bool
	}

	namespace n_UNavigationPath { // : UObject
		constexpr auto PathUpdatedNotifier = 0x28; // FScriptMulticastDelegate
		constexpr auto PathPoints = 0x38; // TArray<FVector>
		constexpr auto RecalculateOnInvalidation = 0x48; // ENavigationOptionFlag
	}

	namespace n_UAttributesBase { // : UWindowRoot
		constexpr auto m_MouseControlBox = 0x398; // UWidget*
		constexpr auto m_ProgressionSystem = 0x3a0; // UProgressionSystem*
		constexpr auto GetPerkSound = 0x3a8; // USoundBase*
		constexpr auto ResetPointsSound = 0x3c8; // USoundBase*
		constexpr auto m_AttributeSelected = 0x3e8; // ECharIntStatID
		constexpr auto m_CanBuyPerks = 0x3e9; // bool
	}

	namespace n_UMaterialExpressionScalarParameter { // : UMaterialExpressionParameter
		constexpr auto DefaultValue = 0x80; // float
		constexpr auto SliderMin = 0x84; // float
		constexpr auto SliderMax = 0x88; // float
	}

	namespace n_UBTDecorator_ForceSuccess { // : UBTDecorator
		constexpr auto bInverseCondition = 0x60; // char : 1
		constexpr auto FlowAbortMode = 0x64; // EBTFlowAbortMode
	}

	namespace n_UMaterialExpressionLogarithm2 { // : UMaterialExpression
		constexpr auto X = 0x60; // FExpressionInput
	}

	namespace n_UInputSettings { // : UObject
		constexpr auto Version = 0x28; // uint32_t
		constexpr auto AxisConfig = 0x30; // TArray<FInputAxisConfigEntry>
		constexpr auto bAltEnterTogglesFullscreen = 0x40; // char : 1
		constexpr auto bF11TogglesFullscreen = 0x40; // char : 1
		constexpr auto bUseMouseForTouch = 0x40; // char : 1
		constexpr auto bEnableMouseSmoothing = 0x40; // char : 1
		constexpr auto bEnableFOVScaling = 0x40; // char : 1
		constexpr auto FOVScale = 0x44; // float
		constexpr auto DoubleClickTime = 0x48; // float
		constexpr auto bCaptureMouseOnLaunch = 0x4c; // bool
		constexpr auto DefaultViewportMouseCaptureMode = 0x4d; // EMouseCaptureMode
		constexpr auto bDefaultViewportMouseLock = 0x4e; // bool
		constexpr auto DefaultViewportMouseLockMode = 0x4f; // EMouseLockMode
		constexpr auto ActionMappings = 0x50; // TArray<FInputActionKeyMapping>
		constexpr auto ActionMappings_PS4_Japan = 0x60; // TArray<FInputActionKeyMapping>
		constexpr auto AxisMappings = 0x70; // TArray<FInputAxisKeyMapping>
		constexpr auto bAlwaysShowTouchInterface = 0x80; // bool
		constexpr auto bShowConsoleOnFourFingerTap = 0x81; // bool
		constexpr auto DefaultTouchInterface = 0x88; // FStringAssetReference
		constexpr auto ConsoleKey = 0x98; // FKey
		constexpr auto ConsoleKeys = 0xb0; // TArray<FKey>
	}

	namespace n_UParticleModuleSubUVBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x28; // char : 1
		constexpr auto LODDuplicate = 0x28; // char : 1
		constexpr auto bSupportsRandomSeed = 0x28; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x28; // char : 1
		constexpr auto LODValidity = 0x2c; // char
	}

	namespace n_UMovieSceneParticleTrack { // : UMovieSceneNameableTrack
		constexpr auto ParticleSections = 0xb8; // TArray<UMovieSceneSection*>
	}

	namespace n_UMaterialExpressionAntialiasedTextureMask { // : UMaterialExpressionTextureSampleParameter2D
		constexpr auto Threshold = 0x1b8; // float
		constexpr auto Channel = 0x1bc; // ETextureColorChannel
	}

	namespace n_UNavModifierComponent { // : UNavRelevantComponent
		constexpr auto AreaClass = 0x128; // UNavArea*
		constexpr auto FailsafeExtent = 0x130; // FVector
	}

	namespace n_UAnimBlueprintGeneratedClass { // : UBlueprintGeneratedClass
		constexpr auto BakedStateMachines = 0x360; // TArray<FBakedAnimationStateMachine>
		constexpr auto TargetSkeleton = 0x370; // USkeleton*
		constexpr auto AnimNotifies = 0x378; // TArray<FAnimNotifyEvent>
		constexpr auto RootAnimNodeIndex = 0x388; // int32_t
		constexpr auto OrderedSavedPoseIndices = 0x390; // TArray<int32_t>
		constexpr auto SyncGroupNames = 0x3b8; // TArray<FName>
	}

	namespace n_UDeviceProfile { // : UTextureLODSettings
		constexpr auto DeviceType = 0x38; // FString
		constexpr auto BaseProfileName = 0x48; // FString
		constexpr auto Parent = 0x58; // UObject*
		constexpr auto CVars = 0x68; // TArray<FString>
		constexpr auto AdaptiveSystemSettings = 0xc0; // TArray<FAdaptiveSystemSettings>
		constexpr auto AdaptiveSystemCullDistanceSizePairs = 0xd0; // TArray<FAdaptiveSystemCullDistanceSizePair>
	}

	namespace n_UKeyBindingsEntryBase { // : URootWidget
		constexpr auto KeyNavOnSelectedEvent = 0x240; // FScriptMulticastDelegate
		constexpr auto KeyNavLeft = 0x250; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavRight = 0x258; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavAbove = 0x260; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavBelow = 0x268; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavTab = 0x270; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildLeft = 0x278; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildRight = 0x280; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildAbove = 0x288; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildBelow = 0x290; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildTab = 0x298; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildren = 0x2a0; // TWeakObjectPtr<URootWidget>
		constexpr auto TooltipWidgetClass = 0x2a8; // UTooltipWidget*
		constexpr auto KeyNavIndicatorClass = 0x2b0; // UKeyNavIndicator*
		constexpr auto PositiveFeedbackColor = 0x2b8; // FLinearColor
		constexpr auto NegativeFeedbackColor = 0x2c8; // FLinearColor
		constexpr auto NeutralFeedbackColor = 0x2d8; // FLinearColor
		constexpr auto KeyNavFocusOnClick = 0x2e8; // bool
		constexpr auto KeyNavAutoSetBack = 0x2e9; // bool
		constexpr auto m_Window = 0x2f0; // UWindowRoot*
		constexpr auto m_Parent = 0x2f8; // TWeakObjectPtr<URootWidget>
		constexpr auto m_KeyNavIndicator = 0x300; // UKeyNavIndicator*
	}

	namespace n_UFindTurnBasedMatchCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto onSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto onFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_UInterpTrackFloatAnimBPParam { // : UInterpTrackFloatBase
		constexpr auto AnimBlueprintClass = 0x90; // UObject*
		constexpr auto AnimClass = 0x98; // UAnimInstance*
		constexpr auto ParamName = 0xa0; // FName
	}

	namespace n_UPlayFabMultiplayerAPI { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnPlayFabResponse = 0x28; // FScriptMulticastDelegate
		constexpr auto CallAuthenticationContext = 0x400; // UPlayFabAuthenticationContext*
		constexpr auto RequestJsonObj = 0x408; // UPlayFabJsonObject*
		constexpr auto ResponseJsonObj = 0x410; // UPlayFabJsonObject*
	}

	namespace n_UVoiceChatWindow { // : UWindowRoot
		constexpr auto ChatLineClass = 0x398; // UUserWidget*
	}

	namespace n_UBTTask_RotateToFaceBBEntry { // : UBTTask_BlackboardBase
		constexpr auto Precision = 0x98; // float
	}

	namespace n_ALandscapeProxy { // : AActor
		constexpr auto SplineComponent = 0x3d0; // ULandscapeSplinesComponent*
		constexpr auto LandscapeGuid = 0x3d8; // FGuid
		constexpr auto LandscapeSectionOffset = 0x3e8; // FIntPoint
		constexpr auto MaxLodLevel = 0x3f0; // int32_t
		constexpr auto LODDistanceFactor = 0x3f4; // float
		constexpr auto LODFalloff = 0x3f8; // ELandscapeLODFalloff
		constexpr auto StaticLightingLOD = 0x3fc; // int32_t
		constexpr auto DefaultPhysMaterial = 0x400; // UPhysicalMaterial*
		constexpr auto StreamingDistanceMultiplier = 0x408; // float
		constexpr auto LandscapeMaterial = 0x410; // UMaterialInterface*
		constexpr auto LandscapeHoleMaterial = 0x418; // UMaterialInterface*
		constexpr auto NegativeZBoundsExtension = 0x420; // float
		constexpr auto PositiveZBoundsExtension = 0x424; // float
		constexpr auto LandscapeComponents = 0x428; // TArray<ULandscapeComponent*>
		constexpr auto CollisionComponents = 0x438; // TArray<ULandscapeHeightfieldCollisionComponent*>
		constexpr auto FoliageComponents = 0x448; // TArray<UHierarchicalInstancedStaticMeshComponent*>
		constexpr auto bHasLandscapeGrass = 0x4b8; // bool
		constexpr auto StaticLightingResolution = 0x4bc; // float
		constexpr auto bCastStaticShadow = 0x4c0; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x4c0; // char : 1
		constexpr auto bCastFarShadow = 0x4c0; // char : 1
		constexpr auto bUseMaterialPositionOffsetInStaticLighting = 0x4c0; // char : 1
		constexpr auto LightmassSettings = 0x4c4; // FLightmassPrimitiveSettings
		constexpr auto CollisionMipLevel = 0x4dc; // int32_t
		constexpr auto SimpleCollisionMipLevel = 0x4e0; // int32_t
		constexpr auto CollisionThickness = 0x4e4; // float
		constexpr auto BodyInstance = 0x4f0; // FBodyInstance
		constexpr auto bGenerateOverlapEvents = 0x720; // char : 1
		constexpr auto bBakeMaterialPositionOffsetIntoCollision = 0x720; // char : 1
		constexpr auto ComponentSizeQuads = 0x724; // int32_t
		constexpr auto SubsectionSizeQuads = 0x728; // int32_t
		constexpr auto NumSubsections = 0x72c; // int32_t
		constexpr auto bUsedForNavigation = 0x730; // char : 1
		constexpr auto NavigationGeometryGatheringMode = 0x734; // ENavDataGatheringMode
		constexpr auto bUseLandscapeForCullingInvisibleHLODVertices = 0x735; // bool
	}

	namespace n_ULevelStreamingAlwaysLoaded { // : ULevelStreaming
		constexpr auto PackageName = 0x28; // FName
		constexpr auto WorldAsset = 0x30; // UWorld*
		constexpr auto PackageNameToLoad = 0x50; // FName
		constexpr auto LODPackageNames = 0x58; // TArray<FName>
		constexpr auto LevelTransform = 0x80; // FTransform
		constexpr auto bShouldBeVisibleInEditor = 0xb0; // char : 1
		constexpr auto bLocked = 0xb0; // char : 1
		constexpr auto bShouldBeLoaded = 0xb0; // char : 1
		constexpr auto bShouldBeVisible = 0xb0; // char : 1
		constexpr auto bIsStatic = 0xb0; // char : 1
		constexpr auto bShouldBlockOnLoad = 0xb0; // char : 1
		constexpr auto LevelLODIndex = 0xb4; // int32_t
		constexpr auto bDisableDistanceStreaming = 0xb8; // char : 1
		constexpr auto bDrawOnLevelStatusMap = 0xb8; // char : 1
		constexpr auto DrawColor = 0xbc; // FColor
		constexpr auto LevelColor = 0xc0; // FLinearColor
		constexpr auto EditorStreamingVolumes = 0xd0; // TArray<ALevelStreamingVolume*>
		constexpr auto MinTimeBetweenVolumeUnloadRequests = 0xe0; // float
		constexpr auto Keywords = 0xe8; // TArray<FString>
		constexpr auto OnLevelLoaded = 0xf8; // FScriptMulticastDelegate
		constexpr auto OnLevelUnloaded = 0x108; // FScriptMulticastDelegate
		constexpr auto OnLevelShown = 0x118; // FScriptMulticastDelegate
		constexpr auto OnLevelHidden = 0x128; // FScriptMulticastDelegate
		constexpr auto LoadedLevel = 0x138; // ULevel*
		constexpr auto PendingUnloadLevel = 0x140; // ULevel*
	}

	namespace n_UCollisionStaticMeshComponent { // : UStaticMeshComponent
		constexpr auto ForcedLodModel = 0x7c8; // int32_t
		constexpr auto PreviousLODLevel = 0x7cc; // int32_t
		constexpr auto StaticMesh = 0x7d0; // UStaticMesh*
		constexpr auto MinLOD = 0x7d8; // int32_t
		constexpr auto SubDivisionStepSize = 0x7dc; // int32_t
		constexpr auto bOverrideMinLOD = 0x7e0; // char : 1
		constexpr auto bOverrideNavigationExport = 0x7e0; // char : 1
		constexpr auto bForceNavigationObstacle = 0x7e0; // char : 1
		constexpr auto bDisallowMeshPaintPerInstance = 0x7e0; // char : 1
		constexpr auto bUseDefaultCollision = 0x7e0; // char : 1
		constexpr auto bUseSubDivisions = 0x7e0; // char : 1
		constexpr auto bIgnoreInstanceForTextureStreaming = 0x7e0; // char : 1
		constexpr auto bOverrideLightMapRes = 0x7e0; // char : 1
		constexpr auto bCastDistanceFieldIndirectShadow = 0x7e0; // char : 1
		constexpr auto OverriddenLightMapRes = 0x7e4; // int32_t
		constexpr auto DistanceFieldIndirectShadowMinVisibility = 0x7e8; // float
		constexpr auto StreamingDistanceMultiplier = 0x7ec; // float
		constexpr auto LODData = 0x7f0; // TArray<FStaticMeshComponentLODInfo>
		constexpr auto StreamingTextureData = 0x800; // TArray<FStreamingTextureBuildInfo>
		constexpr auto LightmassSettings = 0x810; // FLightmassPrimitiveSettings
	}

	namespace n_UNiagaraSpriteRendererProperties { // : UNiagaraEffectRendererProperties
		constexpr auto SubImageInfo = 0x30; // FVector2D
		constexpr auto bBVelocityAligned = 0x38; // bool
	}

	namespace n_AStaticMeshActor { // : AActor
		constexpr auto StaticMeshComponent = 0x3d0; // UStaticMeshComponent*
		constexpr auto bStaticMeshReplicateMovement = 0x3d8; // bool
		constexpr auto NavigationGeometryGatheringMode = 0x3d9; // ENavDataGatheringMode
	}

	namespace n_ALevelBounds { // : AActor
		constexpr auto bAutoUpdateBounds = 0x3d0; // bool
	}

	namespace n_UStreamingProxyUntyped { // : UBlueprintAsyncActionBase
		constexpr auto OnLoaded = 0x28; // FScriptMulticastDelegate
		constexpr auto Assets = 0x40; // TArray<FStringAssetReference>
	}

	namespace n_UMaterialExpressionArctangent2Fast { // : UMaterialExpression
		constexpr auto Y = 0x60; // FExpressionInput
		constexpr auto X = 0x98; // FExpressionInput
	}

	namespace n_UGeometryCacheComponent { // : UMeshComponent
		constexpr auto GeometryCache = 0x7c8; // UGeometryCache*
		constexpr auto bRunning = 0x7d0; // bool
		constexpr auto bLooping = 0x7d1; // bool
		constexpr auto StartTimeOffset = 0x7d4; // float
		constexpr auto PlaybackSpeed = 0x7d8; // float
		constexpr auto NumTracks = 0x7dc; // int32_t
		constexpr auto ElapsedTime = 0x7e0; // float
	}

	namespace n_UMaterialExpressionTangentOutput { // : UMaterialExpressionCustomOutput
		constexpr auto Input = 0x60; // FExpressionInput
	}

	namespace n_UWindowTitleBarAreaSlot { // : UPanelSlot
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_APaperTerrainActor { // : AActor
		constexpr auto DummyRoot = 0x3d0; // USceneComponent*
		constexpr auto SplineComponent = 0x3d8; // UPaperTerrainSplineComponent*
		constexpr auto RenderComponent = 0x3e0; // UPaperTerrainComponent*
	}

	namespace n_ACameraBlockingVolume { // : AVolume
		constexpr auto BrushType = 0x3d0; // EBrushType
		constexpr auto BrushColor = 0x3d4; // FColor
		constexpr auto PolyFlags = 0x3d8; // int32_t
		constexpr auto bColored = 0x3dc; // char : 1
		constexpr auto bSolidWhenSelected = 0x3dc; // char : 1
		constexpr auto bPlaceableFromClassBrowser = 0x3dc; // char : 1
		constexpr auto bNotForClientOrServer = 0x3dc; // char : 1
		constexpr auto Brush = 0x3e0; // UModel*
		constexpr auto BrushComponent = 0x3e8; // UBrushComponent*
		constexpr auto bInManipulation = 0x3f0; // char : 1
		constexpr auto SavedSelections = 0x3f8; // TArray<FGeomSelection>
	}

	namespace n_UIntSerialization { // : UObject
		constexpr auto UnsignedInt16Variable = 0x28; // uint16_t
		constexpr auto UnsignedInt32Variable = 0x2c; // uint32_t
		constexpr auto UnsignedInt64Variable = 0x30; // uint64_t
		constexpr auto SignedInt8Variable = 0x38; // uint8_t
		constexpr auto SignedInt16Variable = 0x3a; // int16_t
		constexpr auto SignedInt64Variable = 0x40; // int64_t
		constexpr auto UnsignedInt8Variable = 0x48; // char
		constexpr auto SignedInt32Variable = 0x4c; // int32_t
	}

	namespace n_UBTDecorator_CheckGameplayTagsOnActor { // : UBTDecorator
		constexpr auto ActorToCheck = 0x68; // FBlackboardKeySelector
		constexpr auto TagsToMatch = 0x90; // EGameplayContainerMatchType
		constexpr auto GameplayTags = 0x98; // FGameplayTagContainer
		constexpr auto CachedDescription = 0xb8; // FString
	}

	namespace n_UChatroom { // : UObject
		constexpr auto CurrentChatRoomId = 0x28; // FString
		constexpr auto MaxChatRoomRetries = 0x38; // int32_t
		constexpr auto NumChatRoomRetries = 0x3c; // int32_t
	}

	namespace n_UW_KeyBindings_Entry_C { // : UKeyBindingsEntryBase
		constexpr auto ActionMapping = 0x460; // UTextBlock*
		constexpr auto B_ClearFirst = 0x468; // UW_ButtonNormal_C*
		constexpr auto B_ClearSecond = 0x470; // UW_ButtonNormal_C*
		constexpr auto B_ResetFirst = 0x478; // UW_ButtonNormal_C*
		constexpr auto B_ResetSecond = 0x480; // UW_ButtonNormal_C*
		constexpr auto FirstButton = 0x488; // UW_KeyBindings_Button_C*
		constexpr auto SecondButton = 0x490; // UW_KeyBindings_Button_C*
	}

	namespace n_UW_HUD_LootLogElement_C { // : ULootLogElementBase
		constexpr auto UberGraphFrame = 0x280; // FPointerToUberGraphFrame
		constexpr auto Animation_Fade = 0x288; // UWidgetAnimation*
		constexpr auto AddTexture_1 = 0x290; // UTexture2D*
		constexpr auto RemoveTexture_1 = 0x298; // UTexture2D*
		constexpr auto ImageLayers = 0x2a0; // TArray<UTexture2D*>
	}

	namespace n_UMaterialShaderQualitySettings { // : UObject
		constexpr auto ForwardSettingMap = 0x28; // TMap<FName, UShaderPlatformQualitySettings*>
	}

	namespace n_UMaterialExpressionGraniteTexture { // : UMaterialExpressionGraniteTextureBase
		constexpr auto Coordinates = 0x70; // FExpressionInput
		constexpr auto TextureObject = 0xa8; // FExpressionInput
		constexpr auto MipValue = 0xe0; // FExpressionInput
		constexpr auto CoordinatesDX = 0x118; // FExpressionInput
		constexpr auto CoordinatesDY = 0x150; // FExpressionInput
		constexpr auto MipValueMode = 0x188; // ETextureMipValueMode
		constexpr auto AnisotropyRatio = 0x189; // EGraniteAnisotropyRatio
		constexpr auto SampleQuality = 0x18a; // EGraniteSampleQuality
	}

	namespace n_UMaterialExpressionGIReplace { // : UMaterialExpression
		constexpr auto Default = 0x60; // FExpressionInput
		constexpr auto StaticIndirect = 0x98; // FExpressionInput
		constexpr auto DynamicIndirect = 0xd0; // FExpressionInput
	}

	namespace n_UListMenu { // : UContextMenuBase
		constexpr auto SignalLeaveGuild = 0x478; // FScriptMulticastDelegate
		constexpr auto GuildMasterHovered = 0x488; // FSlateColor
		constexpr auto GuildMasterColor = 0x4b0; // FSlateColor
		constexpr auto GuildMasterPressedHovered = 0x4d8; // FSlateColor
		constexpr auto GuildMasterPressed = 0x500; // FSlateColor
	}

	namespace n_ATestActor { // : AActor
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto CustomTimeDilation = 0x80; // float
		constexpr auto bHidden = 0x84; // char : 1
		constexpr auto bNetTemporary = 0x84; // char : 1
		constexpr auto bNetStartup = 0x84; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x84; // char : 1
		constexpr auto bAlwaysRelevant = 0x84; // char : 1
		constexpr auto bReplicateMovement = 0x84; // char : 1
		constexpr auto bTearOff = 0x84; // char : 1
		constexpr auto bExchangedRoles = 0x84; // char : 1
		constexpr auto bPendingNetUpdate = 0x85; // char : 1
		constexpr auto bNetLoadOnClient = 0x85; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x85; // char : 1
		constexpr auto bBlockInput = 0x85; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x85; // char : 1
		constexpr auto bActorEnableCollision = 0x86; // char : 1
		constexpr auto bReplicates = 0x86; // char : 1
		constexpr auto bLostRelevancy = 0x86; // char : 1
		constexpr auto NetDriverName = 0x88; // FName
		constexpr auto bCanBeInCluster = 0x90; // char : 1
		constexpr auto RemoteRole = 0x91; // ENetRole
		constexpr auto Owner = 0x98; // AActor*
		constexpr auto ReplicatedMovement = 0xa0; // FRepMovement
		constexpr auto AttachmentReplication = 0xd8; // FRepAttachment
		constexpr auto Role = 0x118; // ENetRole
		constexpr auto AutoReceiveInput = 0x11a; // EAutoReceiveInput
		constexpr auto InputPriority = 0x11c; // int32_t
		constexpr auto InputComponent = 0x120; // UInputComponent*
		constexpr auto InputConsumeOption = 0x128; // EInputConsumeOptions
		constexpr auto NetCullDistanceSquared = 0x12c; // float
		constexpr auto ViewTargetNetCullDistanceSquared = 0x130; // float
		constexpr auto NetTag = 0x134; // int32_t
		constexpr auto NetUpdateTime = 0x138; // float
		constexpr auto NetUpdateFrequency = 0x13c; // float
		constexpr auto MinNetUpdateFrequency = 0x140; // float
		constexpr auto NetPriority = 0x144; // float
		constexpr auto LastNetUpdateTime = 0x148; // float
		constexpr auto bAutoDestroyWhenFinished = 0x14c; // char : 1
		constexpr auto bCanBeDamaged = 0x14c; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x14c; // char : 1
		constexpr auto bCollideWhenPlacing = 0x14c; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x14c; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x14c; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x14c; // char : 1
		constexpr auto SpawnCollisionHandlingMethod = 0x14d; // ESpawnActorCollisionHandlingMethod
		constexpr auto Instigator = 0x158; // APawn*
		constexpr auto Children = 0x160; // TArray<AActor*>
		constexpr auto RootComponent = 0x170; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x178; // TArray<AMatineeActor*>
		constexpr auto InitialLifeSpan = 0x188; // float
		constexpr auto Layers = 0x198; // TArray<FName>
		constexpr auto ParentComponentActor = 0x1a8; // TWeakObjectPtr<AActor>
		constexpr auto ParentComponent = 0x1b0; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x1b8; // char : 1
		constexpr auto bUseExtendedRelevancyTimeout = 0x1b8; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x1b8; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x1b8; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x1b8; // char : 1
		constexpr auto Tags = 0x1c0; // TArray<FName>
		constexpr auto HiddenEditorViews = 0x1d0; // uint64_t
		constexpr auto OnTakeAnyDamage = 0x1d8; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x1e8; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x1f8; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x208; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x218; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x228; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x238; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x248; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x258; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x268; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x278; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x288; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x298; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x2a8; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x2b8; // FScriptMulticastDelegate
		constexpr auto BlueprintCreatedComponents = 0x3a8; // TArray<UActorComponent*>
		constexpr auto InstanceComponents = 0x3b8; // TArray<UActorComponent*>
	}

	namespace n_UListView { // : UTableViewBase
		constexpr auto ItemHeight = 0x118; // float
		constexpr auto Items = 0x120; // TArray<UObject*>
		constexpr auto SelectionMode = 0x130; // ESelectionMode
		constexpr auto OnGenerateRowEvent = 0x138; // DelegateProperty
	}

	namespace n_USoundNodeConcatenator { // : USoundNode
		constexpr auto InputVolume = 0x38; // TArray<float>
	}

	namespace n_UComboBoxString { // : UWidget
		constexpr auto DefaultOptions = 0x118; // TArray<FString>
		constexpr auto SelectedOption = 0x128; // FString
		constexpr auto WidgetStyle = 0x138; // FComboBoxStyle
		constexpr auto ItemStyle = 0x588; // FTableRowStyle
		constexpr auto ContentPadding = 0xca0; // FMargin
		constexpr auto MaxListHeight = 0xcb0; // float
		constexpr auto HasDownArrow = 0xcb4; // bool
		constexpr auto EnableGamepadNavigationMode = 0xcb5; // bool
		constexpr auto Font = 0xcb8; // FSlateFontInfo
		constexpr auto ForegroundColor = 0xd20; // FSlateColor
		constexpr auto bIsFocusable = 0xd48; // bool
		constexpr auto OnGenerateWidgetEvent = 0xd50; // DelegateProperty
		constexpr auto OnSelectionChanged = 0xd60; // FScriptMulticastDelegate
		constexpr auto OnOpening = 0xd70; // FScriptMulticastDelegate
	}

	namespace n_AFunctionalTest { // : AActor
		constexpr auto SpriteComponent = 0x3d0; // UBillboardComponent*
		constexpr auto bIsEnabled = 0x3d8; // char : 1
		constexpr auto bWarningsAsErrors = 0x3d8; // char : 1
		constexpr auto Description = 0x3e0; // FString
		constexpr auto ObservationPoint = 0x3f0; // AActor*
		constexpr auto RandomNumbersStream = 0x3f8; // FRandomStream
		constexpr auto Result = 0x400; // EFunctionalTestResult
		constexpr auto PreparationTimeLimit = 0x404; // float
		constexpr auto TimeLimit = 0x408; // float
		constexpr auto TimesUpMessage = 0x410; // FText
		constexpr auto TimesUpResult = 0x428; // EFunctionalTestResult
		constexpr auto OnTestStart = 0x430; // FScriptMulticastDelegate
		constexpr auto OnTestFinished = 0x440; // FScriptMulticastDelegate
		constexpr auto AutoDestroyActors = 0x450; // TArray<AActor*>
		constexpr auto bIsRunning = 0x4d0; // bool
	}

	namespace n_UBTAuxiliaryNode { // : UBTNode
		constexpr auto NodeName = 0x30; // FString
		constexpr auto TreeAsset = 0x40; // UBehaviorTree*
		constexpr auto ParentNode = 0x48; // UBTCompositeNode*
	}

	namespace n_UMovieSceneCameraShakeTrack { // : UMovieSceneNameableTrack
		constexpr auto CameraShakeSections = 0xb8; // TArray<UMovieSceneSection*>
	}

	namespace n_UTabButtonBase { // : UFCButton
		constexpr auto SwitcherIndex = 0xc20; // int32_t
	}

	namespace n_UHighlightsConfigureAsync { // : UBlueprintAsyncActionBase
		constexpr auto onSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto onFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_UEnvQueryGenerator_ProjectedPoints { // : UEnvQueryGenerator
		constexpr auto ProjectionData = 0x50; // FEnvTraceData
	}

	namespace n_UW_HUD_LootLog_C { // : ULootLogBase
		constexpr auto UberGraphFrame = 0x268; // FPointerToUberGraphFrame
		constexpr auto LogScrollBox = 0x270; // UScrollBox*
		constexpr auto LootLog = 0x278; // UVerticalBox*
	}

	namespace n_UMediaTexture { // : UTexture
		constexpr auto AddressX = 0xd0; // TextureAddress
		constexpr auto AddressY = 0xd1; // TextureAddress
		constexpr auto ClearColor = 0xd4; // FLinearColor
		constexpr auto MediaPlayer = 0xe8; // UMediaPlayer*
		constexpr auto VideoTrackIndex = 0xf0; // int32_t
	}

	namespace n_UInputVectorAxisDelegateBinding { // : UInputAxisKeyDelegateBinding
		constexpr auto InputAxisKeyDelegateBindings = 0x28; // TArray<FBlueprintInputAxisKeyDelegateBinding>
	}

	namespace n_UDistributionVector { // : UDistribution
		constexpr auto bCanBeBaked = 0x30; // char : 1
		constexpr auto bIsDirty = 0x30; // char : 1
		constexpr auto bBakedDataSuccesfully = 0x30; // char : 1
	}

	namespace n_UConanAITask_MoveDirectlyToward { // : UBTTask_MoveDirectlyToward
		constexpr auto ShouldProjectVectorGoalToNavigation = 0xb8; // char : 1
	}

	namespace n_UFIFOWindow { // : UWindowRoot
		constexpr auto CloseOnClick = 0x318; // bool
		constexpr auto BlockPlayerInput = 0x319; // bool
		constexpr auto OpeningSlateSound = 0x320; // FSlateSound
		constexpr auto ClosingSlateSound = 0x338; // FSlateSound
		constexpr auto SignalClosing = 0x350; // FScriptMulticastDelegate
		constexpr auto SignalOpened = 0x360; // FScriptMulticastDelegate
		constexpr auto m_WindowHotkeys = 0x370; // TArray<FGamepadHotkeyHelp>
		constexpr auto m_InputComponent = 0x380; // UInputComponent*
		constexpr auto m_GUIModule = 0x388; // UGUIModule*
	}

	namespace n_AProceduralFoliageBlockingVolume { // : AVolume
		constexpr auto ProceduralFoliageVolume = 0x408; // AProceduralFoliageVolume*
	}

	namespace n_UHoudiniInstancedActorComponent { // : USceneComponent
		constexpr auto InstancedAsset = 0x300; // UObject*
		constexpr auto Instances = 0x308; // TArray<AActor*>
	}

	namespace n_USoundNodeAttenuation { // : USoundNode
		constexpr auto AttenuationSettings = 0x38; // USoundAttenuation*
		constexpr auto AttenuationOverrides = 0x40; // FSoundAttenuationSettings
		constexpr auto bOverrideAttenuation = 0x158; // char : 1
	}

	namespace n_UBillboardComponent { // : UPrimitiveComponent
		constexpr auto Sprite = 0x6c0; // UTexture2D*
		constexpr auto bIsScreenSizeScaled = 0x6c8; // char : 1
		constexpr auto ScreenSize = 0x6cc; // float
		constexpr auto U = 0x6d0; // float
		constexpr auto UL = 0x6d4; // float
		constexpr auto V = 0x6d8; // float
		constexpr auto VL = 0x6dc; // float
	}

	namespace n_UPushOutCapsuleComponent { // : UCapsuleComponent
		constexpr auto PushingCapsuleScale = 0x6f0; // float
		constexpr auto PushingCapsule = 0x6f8; // UCapsuleComponent*
		constexpr auto CharactersToPushAway = 0x700; // TArray<AConanCharacter*>
	}

	namespace n_AInteractiveFoliageActor { // : AStaticMeshActor
		constexpr auto CapsuleComponent = 0x3e0; // UCapsuleComponent*
		constexpr auto TouchingActorEntryPosition = 0x3e8; // FVector
		constexpr auto FoliageVelocity = 0x3f4; // FVector
		constexpr auto FoliageForce = 0x400; // FVector
		constexpr auto FoliagePosition = 0x40c; // FVector
		constexpr auto FoliageDamageImpulseScale = 0x418; // float
		constexpr auto FoliageTouchImpulseScale = 0x41c; // float
		constexpr auto FoliageStiffness = 0x420; // float
		constexpr auto FoliageStiffnessQuadratic = 0x424; // float
		constexpr auto FoliageDamping = 0x428; // float
		constexpr auto MaxDamageImpulse = 0x42c; // float
		constexpr auto MaxTouchImpulse = 0x430; // float
		constexpr auto MaxForce = 0x434; // float
		constexpr auto Mass = 0x438; // float
	}

	namespace n_UGameplayTask_WaitDelay { // : UGameplayTask
		constexpr auto OnFinish = 0x68; // FScriptMulticastDelegate
	}

	namespace n_UNavLinkCustomComponent { // : UNavRelevantComponent
		constexpr auto NavLinkUserId = 0x130; // uint32_t
		constexpr auto EnabledAreaClass = 0x138; // UNavArea*
		constexpr auto DisabledAreaClass = 0x140; // UNavArea*
		constexpr auto LinkRelativeStart = 0x148; // FVector
		constexpr auto LinkRelativeEnd = 0x154; // FVector
		constexpr auto LinkDirection = 0x160; // ENavLinkDirection
		constexpr auto bLinkEnabled = 0x164; // char : 1
		constexpr auto bNotifyWhenEnabled = 0x164; // char : 1
		constexpr auto bNotifyWhenDisabled = 0x164; // char : 1
		constexpr auto bCreateBoxObstacle = 0x164; // char : 1
		constexpr auto ObstacleOffset = 0x168; // FVector
		constexpr auto ObstacleExtent = 0x174; // FVector
		constexpr auto ObstacleAreaClass = 0x180; // UNavArea*
		constexpr auto BroadcastRadius = 0x188; // float
		constexpr auto BroadcastInterval = 0x18c; // float
		constexpr auto BroadcastChannel = 0x190; // ECollisionChannel
	}

	namespace n_UInterpTrackInstFloatParticleParam { // : UInterpTrackInst
		constexpr auto ResetFloat = 0x28; // float
	}

	namespace n_USubDSurface { // : UObject
		constexpr auto VertexCountPerFace = 0x28; // TArray<uint32_t>
		constexpr auto IndicesPerFace = 0x38; // TArray<uint32_t>
		constexpr auto VertexAttributeStreams = 0x48; // TArray<UVertexAttributeStream*>
		constexpr auto Materials = 0x68; // TArray<UMaterialInterface*>
	}

	namespace n_UPlayFabCloudScriptAPI { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnPlayFabResponse = 0x28; // FScriptMulticastDelegate
		constexpr auto CallAuthenticationContext = 0x150; // UPlayFabAuthenticationContext*
		constexpr auto RequestJsonObj = 0x158; // UPlayFabJsonObject*
		constexpr auto ResponseJsonObj = 0x160; // UPlayFabJsonObject*
	}

	namespace n_UApplicationLifecycleComponent { // : UActorComponent
		constexpr auto ApplicationWillDeactivateDelegate = 0xf8; // FScriptMulticastDelegate
		constexpr auto ApplicationHasReactivatedDelegate = 0x108; // FScriptMulticastDelegate
		constexpr auto ApplicationWillEnterBackgroundDelegate = 0x118; // FScriptMulticastDelegate
		constexpr auto ApplicationHasEnteredForegroundDelegate = 0x128; // FScriptMulticastDelegate
		constexpr auto ApplicationWillTerminateDelegate = 0x138; // FScriptMulticastDelegate
	}

	namespace n_USoundNodeRandom { // : USoundNode
		constexpr auto Weights = 0x38; // TArray<float>
		constexpr auto PreselectAtLevelLoad = 0x48; // int32_t
		constexpr auto bRandomizeWithoutReplacement = 0x4c; // char : 1
		constexpr auto HasBeenUsed = 0x50; // TArray<bool>
		constexpr auto NumRandomUsed = 0x60; // int32_t
	}

	namespace n_UParticleModuleRotationRate { // : UParticleModuleRotationRateBase
		constexpr auto StartRotationRate = 0x30; // FRawDistributionFloat
	}

	namespace n_UCraftingGUIBase { // : UWindowRoot
		constexpr auto ChestInventoryViewClass = 0x398; // UExternalInventoryView*
		constexpr auto CraftingStationInventoryViewClass = 0x3a0; // UCraftingStationInventoryView*
		constexpr auto DismantlingStationInventoryViewClass = 0x3a8; // UCraftingStationInventoryView*
		constexpr auto AnimalPenInventoryViewClass = 0x3b0; // UAnimalPenInventoryView*
		constexpr auto SiegeWeaponInventoryViewClass = 0x3b8; // USiegeWeaponInventoryView*
		constexpr auto PaperDollViewClass = 0x3c0; // UPaperdollPanel*
		constexpr auto PlayerInventoryViewClass = 0x3c8; // UUserWidget*
		constexpr auto NPCBackpackInventoryViewClass = 0x3d0; // UExternalInventoryView*
		constexpr auto PetInventoryViewClass = 0x3d8; // UPetInventoryView*
		constexpr auto CraftingPanelClass = 0x3e0; // UCraftingManagerGUI*
		constexpr auto NPCPaperDollViewClass = 0x3e8; // UPaperdollPanel*
		constexpr auto PetPaperDollViewClass = 0x3f0; // UPaperdollPanel*
		constexpr auto FeedingTrayPanelClass = 0x3f8; // UFeedingTrayPanel*
		constexpr auto CarouselModePadding = 0x400; // FMargin
		constexpr auto m_CurrentCenterPanel = 0x468; // URootWidget*
		constexpr auto m_CurrentRightPanel = 0x470; // URootWidget*
	}

	namespace n_UPartyMemberState { // : UObject
		constexpr auto UniqueID = 0x28; // FUniqueNetIdRepl
		constexpr auto DisplayName = 0x40; // FText
		constexpr auto MemberStateRefDef = 0x58; // UScriptStruct*
		constexpr auto bHasAnnouncedJoin = 0x70; // bool
	}

	namespace n_UParticleModuleSize { // : UParticleModuleSizeBase
		constexpr auto StartSize = 0x30; // FRawDistributionVector
	}

	namespace n_UBattleStandardZoneComponent { // : UBoxComponent
		constexpr auto OnSetBattleZoneVisualization = 0x6f0; // FScriptMulticastDelegate
		constexpr auto NearbyZoneVisualizationRadius = 0x700; // float
		constexpr auto m_RegisteredCharacters = 0x708; // TArray<AConanCharacter*>
		constexpr auto m_VisualizedComponents = 0x718; // TArray<UBattleStandardZoneComponent*>
	}

	namespace n_UExilesJourneyInfoPanel { // : URootWidget
		constexpr auto KeyNavOnSelectedEvent = 0x240; // FScriptMulticastDelegate
		constexpr auto KeyNavLeft = 0x250; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavRight = 0x258; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavAbove = 0x260; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavBelow = 0x268; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavTab = 0x270; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildLeft = 0x278; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildRight = 0x280; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildAbove = 0x288; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildBelow = 0x290; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildTab = 0x298; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildren = 0x2a0; // TWeakObjectPtr<URootWidget>
		constexpr auto TooltipWidgetClass = 0x2a8; // UTooltipWidget*
		constexpr auto KeyNavIndicatorClass = 0x2b0; // UKeyNavIndicator*
		constexpr auto PositiveFeedbackColor = 0x2b8; // FLinearColor
		constexpr auto NegativeFeedbackColor = 0x2c8; // FLinearColor
		constexpr auto NeutralFeedbackColor = 0x2d8; // FLinearColor
		constexpr auto KeyNavFocusOnClick = 0x2e8; // bool
		constexpr auto KeyNavAutoSetBack = 0x2e9; // bool
		constexpr auto m_Window = 0x2f0; // UWindowRoot*
		constexpr auto m_Parent = 0x2f8; // TWeakObjectPtr<URootWidget>
		constexpr auto m_KeyNavIndicator = 0x300; // UKeyNavIndicator*
	}

	namespace n_UEquipmentInventory { // : UItemInventoryReplicateToAll
		constexpr auto SignalUnequipAllWeapons = 0x348; // FScriptMulticastDelegate
		constexpr auto SignalUnequipWeaponInSlot = 0x358; // FScriptMulticastDelegate
		constexpr auto SignalUnequipWeaponToSlot = 0x368; // FScriptMulticastDelegate
		constexpr auto SignalEquipPreviouslyEquippedWeapons = 0x378; // FScriptMulticastDelegate
		constexpr auto m_SheathedWeapons = 0x390; // TArray<UGameItem*>
		constexpr auto m_SheathedWeaponsUniqueIDs = 0x3a0; // TArray<uint32_t>
		constexpr auto m_WeaponInventory = 0x3b0; // UItemInventory*
	}

	namespace n_USafeZoneSettingBase { // : UWindowRoot
		constexpr auto PressSpeed = 0x398; // float
		constexpr auto RepeatSpeed = 0x39c; // float
	}

	namespace n_UW_FCEditableTextBlock_C { // : UFCEditableTextBox
		constexpr auto UberGraphFrame = 0xce8; // FPointerToUberGraphFrame
		constexpr auto mEditableTextBox = 0xcf0; // UEditableTextBox*
		constexpr auto LastEnteredValue = 0xcf8; // FText
		constexpr auto OnlyNumeric = 0xd10; // bool
		constexpr auto lastcommitted = 0xd18; // FText
	}

	namespace n_UParticleModuleMeshRotationRate_Seeded { // : UParticleModuleMeshRotationRate
		constexpr auto RandomSeedInfo = 0x80; // FParticleRandomSeedInfo
	}

	namespace n_UParticleModuleLocationDirect { // : UParticleModuleLocationBase
		constexpr auto Location = 0x30; // FRawDistributionVector
		constexpr auto LocationOffset = 0x80; // FRawDistributionVector
		constexpr auto ScaleFactor = 0xd0; // FRawDistributionVector
		constexpr auto Direction = 0x120; // FRawDistributionVector
	}

	namespace n_UCharacterEncumbranceBar { // : URootWidget
		constexpr auto Character = 0x318; // AConanCharacter*
	}

	namespace n_APlayerController { // : AController
		constexpr auto Player = 0x438; // UPlayer*
		constexpr auto AcknowledgedPawn = 0x448; // APawn*
		constexpr auto ControllingDirTrackInst = 0x450; // UInterpTrackInstDirector*
		constexpr auto MyHUD = 0x460; // AHUD*
		constexpr auto PlayerCameraManager = 0x468; // APlayerCameraManager*
		constexpr auto PlayerCameraManagerClass = 0x470; // APlayerCameraManager*
		constexpr auto bAutoManageActiveCameraTarget = 0x478; // bool
		constexpr auto TargetViewRotation = 0x47c; // FRotator
		constexpr auto SmoothTargetViewRotationSpeed = 0x494; // float
		constexpr auto HiddenActors = 0x498; // TArray<AActor*>
		constexpr auto LastSpectatorStateSynchTime = 0x4a8; // float
		constexpr auto LastSpectatorSyncLocation = 0x4ac; // FVector
		constexpr auto LastSpectatorSyncRotation = 0x4b8; // FRotator
		constexpr auto ClientCap = 0x4c4; // int32_t
		constexpr auto CheatManager = 0x4c8; // UCheatManager*
		constexpr auto CheatClass = 0x4d0; // UCheatManager*
		constexpr auto PlayerInput = 0x4d8; // UPlayerInput*
		constexpr auto ActiveForceFeedbackEffects = 0x4e0; // TArray<FActiveForceFeedbackEffect>
		constexpr auto bPlayerIsWaiting = 0x580; // char : 1
		constexpr auto NetPlayerIndex = 0x584; // char
		constexpr auto PendingSwapConnection = 0x588; // UNetConnection*
		constexpr auto NetConnection = 0x590; // UNetConnection*
		constexpr auto InputYawScale = 0x5a8; // float
		constexpr auto InputPitchScale = 0x5ac; // float
		constexpr auto InputRollScale = 0x5b0; // float
		constexpr auto bShowMouseCursor = 0x5b4; // char : 1
		constexpr auto bEnableClickEvents = 0x5b4; // char : 1
		constexpr auto bEnableTouchEvents = 0x5b4; // char : 1
		constexpr auto bEnableMouseOverEvents = 0x5b4; // char : 1
		constexpr auto bEnableTouchOverEvents = 0x5b4; // char : 1
		constexpr auto bForceFeedbackEnabled = 0x5b4; // char : 1
		constexpr auto bKeepPawnAliveOnControllerDeath = 0x5b4; // char : 1
		constexpr auto ClickEventKeys = 0x5b8; // TArray<FKey>
		constexpr auto DefaultMouseCursor = 0x5c8; // EMouseCursor
		constexpr auto CurrentMouseCursor = 0x5c9; // EMouseCursor
		constexpr auto DefaultClickTraceChannel = 0x5ca; // ECollisionChannel
		constexpr auto CurrentClickTraceChannel = 0x5cb; // ECollisionChannel
		constexpr auto HitResultTraceDistance = 0x5cc; // float
		constexpr auto InactiveStateInputComponent = 0x650; // UInputComponent*
		constexpr auto CurrentTouchInterface = 0x670; // UTouchInterface*
		constexpr auto SpectatorPawn = 0x6b8; // ASpectatorPawn*
		constexpr auto SpawnLocation = 0x6c0; // FVector
		constexpr auto bIsLocalPlayerController = 0x6d0; // bool
		constexpr auto SeamlessTravelCount = 0x6d2; // uint16_t
		constexpr auto LastCompletedSeamlessTravelCount = 0x6d4; // uint16_t
	}

	namespace n_UComboBox { // : UWidget
		constexpr auto Items = 0x118; // TArray<UObject*>
		constexpr auto OnGenerateWidgetEvent = 0x128; // DelegateProperty
		constexpr auto bIsFocusable = 0x138; // bool
	}

	namespace n_UCameraAnimInst { // : UObject
		constexpr auto CamAnim = 0x28; // UCameraAnim*
		constexpr auto InterpGroupInst = 0x30; // UInterpGroupInst*
		constexpr auto PlayRate = 0x50; // float
		constexpr auto MoveTrack = 0x68; // UInterpTrackMove*
		constexpr auto MoveInst = 0x70; // UInterpTrackInstMove*
		constexpr auto PlaySpace = 0x78; // ECameraAnimPlaySpace
	}

	namespace n_UEnvQueryTest_Project { // : UEnvQueryTest
		constexpr auto ProjectionData = 0x1c0; // FEnvTraceData
	}

	namespace n_UCapsuleComponent { // : UShapeComponent
		constexpr auto CapsuleHalfHeight = 0x6e0; // float
		constexpr auto CapsuleRadius = 0x6e4; // float
		constexpr auto CapsuleHeight = 0x6e8; // float
	}

	namespace n_UBaseVoiceTransmissionIndicator { // : UWindowRoot
		constexpr auto CloseOnClick = 0x318; // bool
		constexpr auto BlockPlayerInput = 0x319; // bool
		constexpr auto OpeningSlateSound = 0x320; // FSlateSound
		constexpr auto ClosingSlateSound = 0x338; // FSlateSound
		constexpr auto SignalClosing = 0x350; // FScriptMulticastDelegate
		constexpr auto SignalOpened = 0x360; // FScriptMulticastDelegate
		constexpr auto m_WindowHotkeys = 0x370; // TArray<FGamepadHotkeyHelp>
		constexpr auto m_InputComponent = 0x380; // UInputComponent*
		constexpr auto m_GUIModule = 0x388; // UGUIModule*
	}

	namespace n_UStreamInstallBase { // : UWindowRoot
		constexpr auto CloseOnClick = 0x318; // bool
		constexpr auto BlockPlayerInput = 0x319; // bool
		constexpr auto OpeningSlateSound = 0x320; // FSlateSound
		constexpr auto ClosingSlateSound = 0x338; // FSlateSound
		constexpr auto SignalClosing = 0x350; // FScriptMulticastDelegate
		constexpr auto SignalOpened = 0x360; // FScriptMulticastDelegate
		constexpr auto m_WindowHotkeys = 0x370; // TArray<FGamepadHotkeyHelp>
		constexpr auto m_InputComponent = 0x380; // UInputComponent*
		constexpr auto m_GUIModule = 0x388; // UGUIModule*
	}

	namespace n_UMovieSceneIntegerSection { // : UMovieSceneSection
		constexpr auto IntegerCurve = 0xd0; // FIntegralCurve
	}

	namespace n_UW_ButtonNormal_C { // : UW_FCButton_C
		constexpr auto ButtonOverlay = 0xc28; // UNamedSlot*
		constexpr auto CheckboxOverlay = 0xc30; // UNamedSlot*
		constexpr auto HotkeyIcon = 0xc38; // UW_HotkeyIcon_C*
	}

	namespace n_UChildConnection { // : UNetConnection
		constexpr auto Parent = 0x33760; // UNetConnection*
	}

	namespace n_UEnergyReceiverComponent { // : UActorComponent
		constexpr auto ListeningToTypes = 0x180; // int32_t
		constexpr auto Energies = 0x188; // TArray<float>
		constexpr auto CurrentHeatmapForce = 0x198; // TArray<float>
		constexpr auto EnergyDataTable = 0x1a8; // UDataTable*
		constexpr auto EnergyEventTable = 0x1b0; // UDataTable*
	}

	namespace n_UWidgetNavigation { // : UObject
		constexpr auto Up = 0x28; // FWidgetNavigationData
		constexpr auto Down = 0x40; // FWidgetNavigationData
		constexpr auto Left = 0x58; // FWidgetNavigationData
		constexpr auto Right = 0x70; // FWidgetNavigationData
		constexpr auto Next = 0x88; // FWidgetNavigationData
		constexpr auto Previous = 0xa0; // FWidgetNavigationData
	}

	namespace n_UCharacterStatsWindow { // : UWindowRoot
		constexpr auto m_Character = 0x398; // AConanCharacter*
	}

	namespace n_UInventoryIconViewBase { // : URootWidget
		constexpr auto AllowItemDrag = 0x318; // bool
		constexpr auto DragSound = 0x320; // USoundCue*
		constexpr auto RepairFinishedSound = 0x328; // USoundBase*
		constexpr auto EquipAmmoSound = 0x348; // USoundBase*
		constexpr auto RiddleOfSteelSound = 0x368; // USoundBase*
		constexpr auto HoveredSound = 0x388; // USoundBase*
		constexpr auto EnabledColor = 0x3a8; // FLinearColor
		constexpr auto DisabledColor = 0x3b8; // FLinearColor
		constexpr auto DimmedColor = 0x3c8; // FLinearColor
		constexpr auto AnimationMarkedForMove = 0x3d8; // UWidgetAnimation*
		constexpr auto AnimationFilterSelected = 0x3e0; // UWidgetAnimation*
		constexpr auto AnimationInRepairState = 0x3e8; // UWidgetAnimation*
		constexpr auto AnimationCannotMove = 0x3f0; // UWidgetAnimation*
		constexpr auto TextureBlendMatInst = 0x400; // UMaterialInstance*
		constexpr auto m_GameItem = 0x408; // UGameItem*
		constexpr auto IconBackground = 0x418; // UBorder*
		constexpr auto IconFrameView = 0x420; // UBorder*
		constexpr auto IconBorder = 0x428; // UBorder*
		constexpr auto RiddleOfSteelIndicator = 0x430; // UBorder*
		constexpr auto IconOverlay = 0x438; // UOverlay*
		constexpr auto BitmapView = 0x440; // UImage*
		constexpr auto ActiveAmmo = 0x448; // UImage*
		constexpr auto RepairIcon = 0x450; // UWidget*
		constexpr auto DragView = 0x458; // UWidget*
		constexpr auto StackSizeTextView = 0x460; // UTextBlock*
		constexpr auto ProgressBar = 0x468; // UProgressBar*
		constexpr auto ProgressBarContainer = 0x470; // UWidget*
		constexpr auto DLCLockedIcon = 0x478; // UImage*
	}

	namespace n_UW_ExilesJourneyTrial_C { // : UExilesJourneyTrial
		constexpr auto UberGraphFrame = 0x3b0; // FPointerToUberGraphFrame
		constexpr auto Anim_Update = 0x3b8; // UWidgetAnimation*
		constexpr auto Image_1 = 0x3c0; // UImage*
		constexpr auto W_HotkeyIcon = 0x3c8; // UW_HotkeyIcon_C*
	}

	namespace n_UMaterialExpressionCollectionParameter { // : UMaterialExpression
		constexpr auto Collection = 0x60; // UMaterialParameterCollection*
		constexpr auto ParameterName = 0x68; // FName
		constexpr auto ParameterId = 0x70; // FGuid
	}

	namespace n_UDestructibleComponent { // : USkinnedMeshComponent
		constexpr auto bFractureEffectOverride = 0x940; // char : 1
		constexpr auto FractureEffects = 0x948; // TArray<FFractureEffect>
		constexpr auto bEnableHardSleeping = 0x958; // bool
		constexpr auto LargeChunkThreshold = 0x95c; // float
		constexpr auto OnComponentFracture = 0x970; // FScriptMulticastDelegate
	}

	namespace n_UAvatarItem { // : UGameItem
		constexpr auto AvatarMapMarkerIcon = 0x248; // FStringAssetReference
		constexpr auto m_AvatarType = 0x258; // AAvatarCharacter*
	}

	namespace n_UBTDecorator_ReachedMoveGoal { // : UBTDecorator
		constexpr auto bInverseCondition = 0x60; // char : 1
		constexpr auto FlowAbortMode = 0x64; // EBTFlowAbortMode
	}

	namespace n_UVisibilityBinding { // : UPropertyBinding
		constexpr auto SourceObject = 0x28; // TWeakObjectPtr<UObject>
		constexpr auto SourcePath = 0x30; // FDynamicPropertyPath
		constexpr auto DestinationProperty = 0x40; // FName
	}

	namespace n_UEditableGameplayTagQuery { // : UObject
		constexpr auto UserDescription = 0x28; // FString
		constexpr auto RootExpression = 0x48; // UEditableGameplayTagQueryExpression*
		constexpr auto TagQueryExportText_Helper = 0x50; // FGameplayTagQuery
	}

	namespace n_UHoudiniAttributeDataComponent { // : UActorComponent
		constexpr auto PrimaryComponentTick = 0x30; // FActorComponentTickFunction
		constexpr auto ComponentTags = 0x88; // TArray<FName>
		constexpr auto AssetUserData = 0x98; // TArray<UAssetUserData*>
		constexpr auto bReplicates = 0xa8; // char : 1
		constexpr auto bIsClientOnly = 0xa8; // char : 1
		constexpr auto bNetAddressable = 0xa8; // char : 1
		constexpr auto bAllowAnyoneToDestroyMe = 0xa8; // char : 1
		constexpr auto bCreatedByConstructionScript = 0xa8; // char : 1
		constexpr auto bInstanceComponent = 0xa8; // char : 1
		constexpr auto bAutoActivate = 0xa8; // char : 1
		constexpr auto bIsActive = 0xa8; // char : 1
		constexpr auto bEditableWhenInherited = 0xa8; // char : 1
		constexpr auto bCanEverAffectNavigation = 0xa8; // char : 1
		constexpr auto bIsEditorOnly = 0xa8; // char : 1
		constexpr auto CreationMethod = 0xb1; // EComponentCreationMethod
		constexpr auto UCSModifiedProperties = 0xc0; // TArray<FSimpleMemberReference>
		constexpr auto OnComponentActivated = 0xd0; // FScriptMulticastDelegate
		constexpr auto OnComponentDeactivated = 0xe0; // FScriptMulticastDelegate
	}

	namespace n_USlateDataSheet { // : UObject
		constexpr auto DataTexture = 0x28; // UTexture2D*
	}

	namespace n_UUtilityMatrix { // : UObject
		constexpr auto Bounds = 0x28; // FBoxBounds
		constexpr auto UnitsPerCell = 0x40; // float
	}

	namespace n_UParticleModuleSubUVMovie { // : UParticleModuleSubUV
		constexpr auto bUseEmitterTime = 0x78; // char : 1
		constexpr auto FrameRate = 0x80; // FRawDistributionFloat
		constexpr auto StartingFrame = 0xb8; // int32_t
	}

	namespace n_URadialMenu { // : URootWidget
		constexpr auto AnimTime = 0x318; // float
		constexpr auto AnimFullRadiusThreshold = 0x31c; // float
		constexpr auto StartAngle = 0x320; // float
		constexpr auto CenterAroundStart = 0x324; // bool
		constexpr auto InnerRadius = 0x328; // float
		constexpr auto OuterRadius = 0x32c; // float
		constexpr auto IconCenterRadius = 0x330; // float
		constexpr auto StartCapOffset = 0x334; // FVector2D
		constexpr auto EndCapOffset = 0x33c; // FVector2D
		constexpr auto StartCapScale = 0x344; // FVector2D
		constexpr auto EndCapScale = 0x34c; // FVector2D
		constexpr auto SegmentSpacing = 0x354; // float
		constexpr auto SelectedScale = 0x358; // float
		constexpr auto HoverScale = 0x35c; // float
		constexpr auto SegmentViewClass = 0x360; // URadialMenuSegment*
		constexpr auto SegmentTextureUnselected = 0x368; // UTexture2D*
		constexpr auto SegmentTextureSelected = 0x370; // UTexture2D*
		constexpr auto SegmentTextureHovered = 0x378; // UTexture2D*
		constexpr auto StartCapTextureUnselected = 0x380; // UTexture2D*
		constexpr auto StartCapTextureSelected = 0x388; // UTexture2D*
		constexpr auto StartCapTextureHovered = 0x390; // UTexture2D*
		constexpr auto EndCapTextureUnselected = 0x398; // UTexture2D*
		constexpr auto EndCapTextureSelected = 0x3a0; // UTexture2D*
		constexpr auto EndCapTextureHovered = 0x3a8; // UTexture2D*
		constexpr auto InputAxisDeadZone = 0x3b0; // float
		constexpr auto PressedSlateSound = 0x3b8; // FSlateSound
		constexpr auto HoveredSlateSound = 0x3d0; // FSlateSound
		constexpr auto SignalEntryClicked = 0x3e8; // FScriptMulticastDelegate
		constexpr auto SignalEntryHighlighted = 0x3f8; // FScriptMulticastDelegate
		constexpr auto SignalFadingDone = 0x408; // FScriptMulticastDelegate
		constexpr auto EnableLeftGamepadStick = 0x418; // bool
		constexpr auto bShouldActivateOnEscape = 0x419; // bool
		constexpr auto m_InputComponent = 0x420; // UInputComponent*
		constexpr auto m_CurrentSubMenu = 0x4c0; // URadialMenuEntry*
		constexpr auto m_RootEntries = 0x4c8; // TArray<URadialMenuEntry*>
		constexpr auto m_ShortcutsInputComponent = 0x4e0; // UInputComponent*
	}

	namespace n_UMaterialExpressionTextureSampleParameter2D { // : UMaterialExpressionTextureSampleParameter
		constexpr auto ParameterName = 0x198; // FName
		constexpr auto ExpressionGUID = 0x1a0; // FGuid
		constexpr auto Group = 0x1b0; // FName
	}

	namespace n_UParticleModuleLocationPrimitiveTriangle { // : UParticleModuleLocationBase
		constexpr auto StartOffset = 0x30; // FRawDistributionVector
		constexpr auto Height = 0x80; // FRawDistributionFloat
		constexpr auto Angle = 0xb8; // FRawDistributionFloat
		constexpr auto Thickness = 0xf0; // FRawDistributionFloat
	}

	namespace n_UProceduralMeshComponent { // : UMeshComponent
		constexpr auto bUseComplexAsSimpleCollision = 0x7d0; // bool
		constexpr auto ProcMeshBodySetup = 0x7d8; // UBodySetup*
		constexpr auto ProcMeshSections = 0x7e0; // TArray<FProcMeshSection>
		constexpr auto CollisionConvexElems = 0x7f0; // TArray<FKConvexElem>
		constexpr auto LocalBounds = 0x800; // FBoxSphereBounds
	}

	namespace n_AFunctionalTestLevelScript { // : ALevelScriptActor
		constexpr auto bInputEnabled = 0x3d0; // char : 1
	}

	namespace n_UHighlightsCloseGroupAsync { // : UBlueprintAsyncActionBase
		constexpr auto onSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto onFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_UAnimCompositeBase { // : UAnimSequenceBase
		constexpr auto Notifies = 0x78; // TArray<FAnimNotifyEvent>
		constexpr auto SequenceLength = 0x88; // float
		constexpr auto RateScale = 0x8c; // float
		constexpr auto RawCurveData = 0x90; // FRawCurveTracks
	}

	namespace n_ACharacterCreationActorBase { // : AActor
		constexpr auto OnCharacterSelected = 0x3d0; // FScriptMulticastDelegate
		constexpr auto m_Spotlight = 0x3e0; // USpotLightComponent*
		constexpr auto m_Voice = 0x3e8; // UAudioComponent*
		constexpr auto MaxIntensity = 0x3f0; // float
		constexpr auto DefaultIntensity = 0x3f4; // float
		constexpr auto m_MeshComponents = 0x460; // USkeletalMeshComponent* [0xa]
		constexpr auto m_CharacterBase = 0x4b0; // USkeletalMeshComponent*
	}

	namespace n_UGraniteTextureCube { // : UGraniteTexture
		constexpr auto StreamingBias = 0x28; // float
		constexpr auto TileSet = 0x30; // UGraniteTileSet*
		constexpr auto StreamingTexture = 0x38; // FString
		constexpr auto LODBias = 0x48; // float
		constexpr auto lightMapFlags = 0x4c; // FGraniteLightmapFlags
		constexpr auto GTSFileName = 0xf0; // FString
		constexpr auto Guid = 0x100; // FGuid
	}

	namespace n_USoundClass { // : UObject
		constexpr auto Properties = 0x28; // FSoundClassProperties
		constexpr auto ChildClasses = 0x58; // TArray<USoundClass*>
		constexpr auto PassiveSoundMixModifiers = 0x68; // TArray<FPassiveSoundMixModifier>
		constexpr auto ParentClass = 0x78; // USoundClass*
	}

	namespace n_UAudioComponent { // : USceneComponent
		constexpr auto Sound = 0x300; // USoundBase*
		constexpr auto InstanceParameters = 0x308; // TArray<FAudioComponentParam>
		constexpr auto SoundClassOverride = 0x318; // USoundClass*
		constexpr auto bAutoDestroy = 0x320; // char : 1
		constexpr auto bStopWhenOwnerDestroyed = 0x320; // char : 1
		constexpr auto bShouldRemainActiveIfDropped = 0x320; // char : 1
		constexpr auto bAllowSpatialization = 0x320; // char : 1
		constexpr auto bOverrideAttenuation = 0x320; // char : 1
		constexpr auto bOverrideSubtitlePriority = 0x324; // char : 1
		constexpr auto bIsUISound = 0x328; // char : 1
		constexpr auto bEnableLowPassFilter = 0x328; // char : 1
		constexpr auto bOverridePriority = 0x328; // char : 1
		constexpr auto bSuppressSubtitles = 0x328; // char : 1
		constexpr auto PitchModulationMin = 0x330; // float
		constexpr auto PitchModulationMax = 0x334; // float
		constexpr auto VolumeModulationMin = 0x338; // float
		constexpr auto VolumeModulationMax = 0x33c; // float
		constexpr auto VolumeMultiplier = 0x340; // float
		constexpr auto Priority = 0x344; // float
		constexpr auto SubtitlePriority = 0x348; // float
		constexpr auto VolumeWeightedPriorityScale = 0x34c; // float
		constexpr auto PitchMultiplier = 0x350; // float
		constexpr auto HighFrequencyGainMultiplier = 0x354; // float
		constexpr auto LowPassFilterFrequency = 0x358; // float
		constexpr auto AttenuationSettings = 0x360; // USoundAttenuation*
		constexpr auto AttenuationOverrides = 0x368; // FSoundAttenuationSettings
		constexpr auto ConcurrencySettings = 0x480; // USoundConcurrency*
		constexpr auto OnAudioFinished = 0x490; // FScriptMulticastDelegate
		constexpr auto OnAudioPlaybackPercent = 0x510; // FScriptMulticastDelegate
		constexpr auto OnQueueSubtitles = 0x590; // DelegateProperty
	}

	namespace n_UBodySetup { // : UObject
		constexpr auto AggGeom = 0x28; // FKAggregateGeom
		constexpr auto BoneName = 0x70; // FName
		constexpr auto PhysicsType = 0x78; // EPhysicsType
		constexpr auto bAlwaysFullAnimWeight = 0x7c; // char : 1
		constexpr auto bConsiderForBounds = 0x7c; // char : 1
		constexpr auto bMeshCollideAll = 0x7c; // char : 1
		constexpr auto bDoubleSidedGeometry = 0x7c; // char : 1
		constexpr auto bIgnoredForUndermeshDetection = 0x7c; // char : 1
		constexpr auto bGenerateNonMirroredCollision = 0x7c; // char : 1
		constexpr auto bSharedCookedData = 0x7c; // char : 1
		constexpr auto bGenerateMirroredCollision = 0x7c; // char : 1
		constexpr auto PhysMaterial = 0x80; // UPhysicalMaterial*
		constexpr auto CollisionReponse = 0x88; // EBodyCollisionResponse
		constexpr auto CollisionTraceFlag = 0x89; // ECollisionTraceFlag
		constexpr auto BothComplexAndDefaultCollision = 0x8a; // bool
		constexpr auto DefaultInstance = 0x90; // FBodyInstance
		constexpr auto WalkableSlopeOverride = 0x2c0; // FWalkableSlopeOverride
		constexpr auto BuildScale = 0x2d0; // float
		constexpr auto BuildScale3D = 0x2d4; // FVector
	}

	namespace n_ULevelSequenceBurnIn { // : UUserWidget
		constexpr auto FrameInformation = 0x240; // FLevelSequencePlayerSnapshot
		constexpr auto LevelSequenceActor = 0x290; // ALevelSequenceActor*
	}

	namespace n_UW_HUD_NotificationList_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x240; // FPointerToUberGraphFrame
		constexpr auto Notifications = 0x248; // UVerticalBox*
		constexpr auto SessionInvitesNotifications = 0x250; // TArray<UW_HUD_FriendsNotificationEntry_C*>
		constexpr auto FriendRequestsNotifications = 0x260; // TArray<UW_HUD_FriendsNotificationEntry_C*>
	}

	namespace n_UMovieSceneSubTrack { // : UMovieSceneNameableTrack
		constexpr auto Sections = 0xb8; // TArray<UMovieSceneSection*>
	}

	namespace n_UOnlineHotfixManager { // : UObject
		constexpr auto OSSName = 0x380; // FString
		constexpr auto HotfixManagerClassName = 0x390; // FString
		constexpr auto DebugPrefix = 0x3a0; // FString
	}

	namespace n_ALobbyBeaconPlayerState { // : AInfo
		constexpr auto DisplayName = 0x3d0; // FText
		constexpr auto UniqueID = 0x3e8; // FUniqueNetIdRepl
		constexpr auto PartyOwnerUniqueId = 0x400; // FUniqueNetIdRepl
		constexpr auto bInLobby = 0x418; // bool
		constexpr auto ClientActor = 0x420; // AOnlineBeaconClient*
	}

	namespace n_AConanPlayerController { // : ADWPlayerController
		constexpr auto SignalCharacterTransferError = 0x6f8; // FScriptMulticastDelegate
		constexpr auto SignalSelectionChanged = 0x708; // FScriptMulticastDelegate
		constexpr auto SignalItemMarkedForMove = 0x718; // FScriptMulticastDelegate
		constexpr auto SignalSelectionRequestMoveItem = 0x728; // FScriptMulticastDelegate
		constexpr auto BlueprintCommandsDataTable = 0x738; // UDataTable*
		constexpr auto SignalPetGrowthDataReceived = 0x7c0; // FScriptMulticastDelegate
		constexpr auto NpcDebugWidgetClass = 0x850; // UNpcDebugWindow*
		constexpr auto m_SpawnComplete = 0x858; // bool
		constexpr auto CharacterRecustomizationModuleName = 0x860; // FName
		constexpr auto m_ClientWorldLoaded = 0x86a; // bool
		constexpr auto EventTeleportDone = 0x870; // FScriptMulticastDelegate
		constexpr auto EventSpawnTeleportDone = 0x880; // FScriptMulticastDelegate
		constexpr auto EventLevelStreamingFinished = 0x890; // FScriptMulticastDelegate
		constexpr auto OverridenStreamingLocations = 0x8a0; // TArray<FVector>
		constexpr auto CachedConnectionPing = 0x8c0; // int32_t
		constexpr auto DebugHudBitMask = 0x8c4; // int32_t
		constexpr auto DebugHudBitMaskUpdated = 0x8c8; // FScriptMulticastDelegate
		constexpr auto EventClientReady = 0x9a0; // FScriptMulticastDelegate
		constexpr auto SignalCharacterReady = 0x9b0; // FScriptMulticastDelegate
		constexpr auto SignalCharacterReadyClient = 0x9c0; // FScriptMulticastDelegate
		constexpr auto SignalInventoryReplicated = 0x9d0; // FScriptMulticastDelegate
		constexpr auto SignalFloatingNamesChanged = 0x9e0; // FScriptMulticastDelegate
		constexpr auto SignalClientReceivePurgeData = 0x9f0; // FScriptMulticastDelegate
		constexpr auto SignalInteractionRadialMenuOpened = 0xa00; // FScriptMulticastDelegate
		constexpr auto m_OwnedCameraComponents = 0xa10; // TArray<UCameraComponent*>
		constexpr auto InitialPlayerStart = 0xa20; // AActor*
		constexpr auto CanBypassBuildingBlockerVolumes = 0xa28; // bool
		constexpr auto UserIDFromURLOptions = 0xa70; // FString
		constexpr auto SignalCheatStatus = 0xa80; // FScriptMulticastDelegate
		constexpr auto bDebugIgnoreBuildingCosts = 0xa90; // bool
		constexpr auto NetConnectionLostTimeout = 0xa94; // float
		constexpr auto NetConnectionLostForcedKickTimeout = 0xa98; // float
		constexpr auto SignalPlayerListDataReady = 0xaa0; // FScriptMulticastDelegate
		constexpr auto SignalBannedPlayerListReady = 0xab0; // FScriptMulticastDelegate
		constexpr auto SignalWhiteListChanged = 0xac0; // FScriptMulticastDelegate
		constexpr auto ConanCheatManager = 0xad0; // UConanCheatManager*
		constexpr auto AllowInteraction = 0xad8; // bool
		constexpr auto CorpseToFreeze = 0xae0; // ACorpseBase*
		constexpr auto PullFollowerMessage = 0xb80; // UMessageBoxWidget*
		constexpr auto ForcedNetRelevantActors = 0xb88; // TArray<TWeakObjectPtr<AConanCharacter>>
		constexpr auto m_NearbyNPCs = 0xd28; // TArray<AConanCharacter*>
		constexpr auto m_PendingNPCStreamOperations = 0xd38; // TSet<FPendingStreamOperation>
		constexpr auto m_PendingInventoryRequests = 0xd88; // TArray<FPendingInventoryUpdate>
		constexpr auto m_PendingInventoryUnregisterRequests = 0xd98; // TMap<int32_t, FPendingInventoryUnregistration>
		constexpr auto m_UniqueIDToInventoryItemMap = 0xe08; // TMap<int32_t, UGameItem*>
		constexpr auto m_bShowDebugText = 0xeb8; // bool
		constexpr auto m_IsAdmin = 0xeb9; // bool
		constexpr auto m_PropertyDestructionHistory = 0xf60; // FPropertyDestructionHistory
		constexpr auto m_RandomDLCKey = 0x10b0; // FString
		constexpr auto m_RandomRewardsKey = 0x10c0; // FString
		constexpr auto m_HasRequestedDLCs = 0x10d0; // bool
		constexpr auto m_HasRequestedRewards = 0x10d1; // bool
		constexpr auto m_HasOngoingDLCRequest = 0x10d2; // bool
		constexpr auto m_HasOngoingRewardsRequest = 0x10d3; // bool
		constexpr auto m_OwnedDLCs = 0x10d8; // TSet<FName>
		constexpr auto m_OwnedRewards = 0x1128; // TSet<FName>
		constexpr auto m_RandomBuildingGenerator = 0x1280; // URandomBuildingGeneratorProxy*
		constexpr auto m_BuildingStressTester = 0x1288; // UBuildingStressTesterProxy*
		constexpr auto m_BuildingRecordingRebuilder = 0x1290; // UBuildingRecordingRebuilderProxy*
		constexpr auto TargetingComponent = 0x12a0; // UTargetingSystemComponent*
		constexpr auto m_BuildingReplicationComponent = 0x12a8; // UBuildingReplicationComponent*
	}

	namespace n_AExponentialHeightFog { // : AInfo
		constexpr auto Component = 0x3d0; // UExponentialHeightFogComponent*
		constexpr auto bEnabled = 0x3d8; // char : 1
	}

	namespace n_UW_RadialMenu_C { // : URadialMenu
		constexpr auto Image_1 = 0x4f0; // UImage*
		constexpr auto Image_2 = 0x4f8; // UImage*
	}

	namespace n_UActionTutorial { // : URootWidget
		constexpr auto TutorialText = 0x318; // FText
		constexpr auto IconSize = 0x330; // float
		constexpr auto WrapPreTextAt = 0x334; // float
		constexpr auto WrapPostTextAt = 0x338; // float
		constexpr auto ActionMapping = 0x340; // FName
		constexpr auto TextFont = 0x348; // FSlateFontInfo
		constexpr auto TextColor = 0x3b0; // FSlateColor
	}

	namespace n_UMaterialExpressionBlendMaterialAttributes { // : UMaterialExpression
		constexpr auto A = 0x60; // FMaterialAttributesInput
		constexpr auto B = 0xa0; // FMaterialAttributesInput
		constexpr auto Alpha = 0xe0; // FExpressionInput
		constexpr auto PixelAttributeBlendType = 0x118; // EMaterialAttributeBlend
		constexpr auto VertexAttributeBlendType = 0x119; // EMaterialAttributeBlend
	}

	namespace n_UMaterialExpressionDistanceCullFade { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto Desc = 0x38; // FString
		constexpr auto BorderColor = 0x48; // FColor
		constexpr auto bRealtimePreview = 0x4c; // char : 1
		constexpr auto bNeedToUpdatePreview = 0x4c; // char : 1
		constexpr auto bIsParameterExpression = 0x4c; // char : 1
		constexpr auto bCommentBubbleVisible = 0x4c; // char : 1
		constexpr auto bShowOutputNameOnPin = 0x4c; // char : 1
		constexpr auto bHidePreviewWindow = 0x4c; // char : 1
		constexpr auto bCollapsed = 0x4c; // char : 1
		constexpr auto bShaderInputData = 0x4c; // char : 1
		constexpr auto bShowInputs = 0x4c; // char : 1
		constexpr auto bShowOutputs = 0x4c; // char : 1
		constexpr auto Outputs = 0x50; // TArray<FExpressionOutput>
	}

	namespace n_USoundEffectLowPassFilterPreset { // : USoundEffectSourcePreset
		constexpr auto Settings = 0x40; // FSoundEffectLowPassFilterSettings
	}

	namespace n_UPlayFabLocalizationAPI { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnPlayFabResponse = 0x28; // FScriptMulticastDelegate
		constexpr auto CallAuthenticationContext = 0x90; // UPlayFabAuthenticationContext*
		constexpr auto RequestJsonObj = 0x98; // UPlayFabJsonObject*
		constexpr auto ResponseJsonObj = 0xa0; // UPlayFabJsonObject*
	}

	namespace n_UW_PvPSelection_C { // : URootWidget
		constexpr auto UberGraphFrame = 0x318; // FPointerToUberGraphFrame
		constexpr auto Description = 0x320; // UTextBlock*
		constexpr auto PvEButton = 0x328; // UW_CommunityButton_C*
		constexpr auto PvPButton = 0x330; // UW_CommunityButton_C*
		constexpr auto PvPConflictButton = 0x338; // UW_BlitzButton_C*
		constexpr auto CombatModeSelected = 0x340; // FScriptMulticastDelegate
	}

	namespace n_UHoudiniAssetParameterRampCurveFloat { // : UCurveFloat
		constexpr auto FloatCurve = 0x30; // FRichCurve
		constexpr auto bIsEventCurve = 0xa0; // bool
	}

	namespace n_URadialShortcutBar { // : UWindowRoot
		constexpr auto ItemIconSlotClass = 0x398; // UShortcutIconBase*
		constexpr auto cancelIcon = 0x3a0; // UTexture2D*
		constexpr auto backIcon = 0x3a8; // UTexture2D*
		constexpr auto m_Inventory = 0x3b0; // UShortcutBarInventory*
	}

	namespace n_AAmbientSound { // : AActor
		constexpr auto AudioComponent = 0x3d0; // UAudioComponent*
	}

	namespace n_UDistributionFloatConstant { // : UDistributionFloat
		constexpr auto Constant = 0x38; // float
	}

	namespace n_UParticleModuleLocationPrimitiveCylinder { // : UParticleModuleLocationPrimitiveBase
		constexpr auto RadialVelocity = 0xc0; // char : 1
		constexpr auto StartRadius = 0xc8; // FRawDistributionFloat
		constexpr auto StartHeight = 0x100; // FRawDistributionFloat
		constexpr auto HeightAxis = 0x138; // CylinderHeightAxis
	}

	namespace n_AGuild { // : AInfo
		constexpr auto m_GuildId = 0x610; // UUniqueID*
		constexpr auto m_NameLastChangedBy = 0x618; // int64_t
		constexpr auto m_MOTDLastChangedBy = 0x620; // int64_t
		constexpr auto m_GuildName = 0x628; // FString
		constexpr auto m_MessageOfTheDay = 0x638; // FText
		constexpr auto m_GuildMasterPlayerId = 0x650; // int64_t
		constexpr auto m_GuildMembers = 0x658; // TArray<FPlayerInfo>
		constexpr auto m_LastFollowerRescueTimestamp = 0x678; // FDateTime
	}

	namespace n_UMovieSceneStringSection { // : UMovieSceneSection
		constexpr auto StringCurve = 0xd0; // FStringCurve
	}

	namespace n_UBTDecorator_Loop { // : UBTDecorator
		constexpr auto NumLoops = 0x68; // int32_t
		constexpr auto bInfiniteLoop = 0x6c; // bool
		constexpr auto InfiniteLoopTimeoutTime = 0x70; // float
	}

	namespace n_UStreamMediaSource { // : UBaseMediaSource
		constexpr auto StreamUrl = 0x38; // FString
	}

	namespace n_ABP_ServerSettings_C { // : AServerSettings
		constexpr auto UberGraphFrame = 0x930; // FPointerToUberGraphFrame
		constexpr auto PlayerWaterMultiplier = 0x938; // float
		constexpr auto PlayerIdleThirstMultiplier = 0x93c; // float
		constexpr auto PlayerActiveThirstMultiplier = 0x940; // float
		constexpr auto PlayerOfflineThirstMultiplier = 0x944; // float
		constexpr auto PlayerIdleHungerMultiplier = 0x948; // float
		constexpr auto PlayerActiveHungerMultiplier = 0x94c; // float
		constexpr auto PlayerOfflineHungerMultiplier = 0x950; // float
		constexpr auto ShieldDurabilityMultiplier = 0x954; // float
		constexpr auto PlayerKnockbackMultiplier = 0x958; // float
		constexpr auto NPCKnockbackMultiplier = 0x95c; // float
		constexpr auto StructureDamageMultiplier = 0x960; // float
		constexpr auto StructureHealthMultiplier = 0x964; // float
		constexpr auto NPCRespawnMultiplier = 0x968; // float
		constexpr auto NPCHealthMultiplier = 0x96c; // float
		constexpr auto PlayerDamageMultiplier = 0x970; // float
		constexpr auto PlayerDamageTakenMultiplier = 0x974; // float
		constexpr auto MinionDamageMultiplier = 0x978; // float
		constexpr auto MinionDamageTakenMultiplier = 0x97c; // float
		constexpr auto NPCDamageMultiplier = 0x980; // float
		constexpr auto NPCDamageTakenMultiplier = 0x984; // float
		constexpr auto PlayerEncumbranceMultiplier = 0x988; // float
		constexpr auto PlayerEncumbrancePenaltyMultiplier = 0x98c; // float
		constexpr auto PlayerMovementSpeedScale = 0x990; // float
		constexpr auto PlayerStaminaCostSprintMultiplier = 0x994; // float
		constexpr auto PlayerSprintSpeedScale = 0x998; // float
		constexpr auto PlayerStaminaCostMultiplier = 0x99c; // float
		constexpr auto PlayerHealthRegenSpeedScale = 0x9a0; // float
		constexpr auto PlayerXPRateMultiplier = 0x9a4; // float
		constexpr auto PlayerXPKillMultiplier = 0x9a8; // float
		constexpr auto PlayerXPHarvestMultiplier = 0x9ac; // float
		constexpr auto PlayerXPCraftMultiplier = 0x9b0; // float
		constexpr auto PlayerXPTimeMultiplier = 0x9b4; // float
		constexpr auto DogsOfTheDesertSpawnWithDogs = 0x9b8; // bool
		constexpr auto CrossDesertOnce = 0x9b9; // bool
		constexpr auto WeaponEffectBoundsShorteningFraction = 0x9bc; // float
		constexpr auto OldVersion = 0x9c0; // int32_t
		constexpr auto NewVersion = 0x9c4; // int32_t
		constexpr auto ThrallExclusionRadius = 0x9c8; // float
		constexpr auto MaxAggroRange = 0x9cc; // float
		constexpr auto FriendlyFireDamageMultiplier = 0x9d0; // float
		constexpr auto CampsIgnoreLandclaim = 0x9d4; // bool
		constexpr auto AvatarDomeDurationMultiplier = 0x9d8; // float
		constexpr auto AvatarDomeDamageMultiplier = 0x9dc; // float
		constexpr auto DodgeStaminaCost = 0x9e0; // float
		constexpr auto NPCMaxSpawnCapMultiplier = 0x9e4; // float
		constexpr auto AttackRotationMultiplier = 0x9e8; // float
		constexpr auto EnableThrallHungerSystem = 0x9ec; // bool
		constexpr auto PlayerMovementAccelerationMultiplier = 0x9f0; // float
		constexpr auto SigilDamageMultiplier = 0x9f4; // float
		constexpr auto SigilPercentageToKeep = 0x9f8; // float
		constexpr auto SigilPercentageToDrop = 0x9fc; // float
		constexpr auto WildSurgeDuration = 0xa00; // float
		constexpr auto BlockStaminaMitigationMultiplier = 0xa04; // float
		constexpr auto BlockHealthMitigationMultiplier = 0xa08; // float
		constexpr auto DodgeInvulnerabilityDuration = 0xa0c; // float
		constexpr auto StaminaLightArmorNoLoadRegenMultiplier = 0xa10; // float
		constexpr auto StaminaLightArmorLightLoadRegenMultiplier = 0xa14; // float
		constexpr auto StaminaLightArmorMediumLoadRegenMultiplier = 0xa18; // float
		constexpr auto StaminaLightArmorHeavyLoadRegenMultiplier = 0xa1c; // float
		constexpr auto StaminaLightArmorOverLoadRegenMultiplier = 0xa20; // float
		constexpr auto StaminaMediumArmorNoLoadRegenMultiplier = 0xa24; // float
		constexpr auto StaminaMediumArmorLightLoadRegenMultiplier = 0xa28; // float
		constexpr auto StaminaMediumArmorMediumLoadRegenMultiplier = 0xa2c; // float
		constexpr auto StaminaMediumArmorHeavyLoadRegenMultiplier = 0xa30; // float
		constexpr auto StaminaMediumArmorOverLoadRegenMultiplier = 0xa34; // float
		constexpr auto StaminaHeavyArmorNoLoadRegenMultiplier = 0xa38; // float
		constexpr auto StaminaHeavyArmorLightLoadRegenMultiplier = 0xa3c; // float
		constexpr auto StaminaHeavyArmorMediumLoadRegenMultiplier = 0xa40; // float
		constexpr auto StaminaHeavyArmorHeavyLoadRegenMultiplier = 0xa44; // float
		constexpr auto StaminaHeavyArmorOverLoadRegenMultiplier = 0xa48; // float
		constexpr auto CampCleanupDestroyFullBuilding = 0xa4c; // bool
	}

	namespace n_UAISenseConfig_Sight { // : UAISenseConfig
		constexpr auto Implementation = 0x48; // UAISense_Sight*
		constexpr auto SightRadius = 0x50; // float
		constexpr auto LoseSightRadius = 0x54; // float
		constexpr auto PeripheralVisionAngleDegrees = 0x58; // float
		constexpr auto DetectionByAffiliation = 0x5c; // FAISenseAffiliationFilter
		constexpr auto AutoSuccessRangeFromLastSeenLocation = 0x60; // float
	}

	namespace n_UW_RadialShortcutBar_C { // : URadialShortcutBar
		constexpr auto Image_1 = 0x408; // UImage*
		constexpr auto InventoryGridSlotView = 0x410; // UInventoryGridSlotView_C*
		constexpr auto ItemInfoPanel = 0x418; // UW_RadialSBItemInfoPanel_C*
		constexpr auto ItemToMoveIconView = 0x420; // UInventoryIconView_C*
		constexpr auto menu = 0x428; // UW_RadialMenu_C*
	}

	namespace n_UEditableGameplayTagQueryExpression_AllTagsMatch { // : UEditableGameplayTagQueryExpression
		constexpr auto Tags = 0x28; // FGameplayTagContainer
	}

	namespace n_UPlaceableInfoBase { // : UWindowRoot
		constexpr auto CloseOnClick = 0x318; // bool
		constexpr auto BlockPlayerInput = 0x319; // bool
		constexpr auto OpeningSlateSound = 0x320; // FSlateSound
		constexpr auto ClosingSlateSound = 0x338; // FSlateSound
		constexpr auto SignalClosing = 0x350; // FScriptMulticastDelegate
		constexpr auto SignalOpened = 0x360; // FScriptMulticastDelegate
		constexpr auto m_WindowHotkeys = 0x370; // TArray<FGamepadHotkeyHelp>
		constexpr auto m_InputComponent = 0x380; // UInputComponent*
		constexpr auto m_GUIModule = 0x388; // UGUIModule*
	}

	namespace n_UMovieSceneSlomoSection { // : UMovieSceneFloatSection
		constexpr auto FloatCurve = 0xd0; // FRichCurve
	}

	namespace n_UMovieSceneFolder { // : UObject
		constexpr auto FolderName = 0x28; // FName
		constexpr auto ChildFolders = 0x30; // TArray<UMovieSceneFolder*>
		constexpr auto ChildMasterTracks = 0x40; // TArray<UMovieSceneTrack*>
		constexpr auto ChildObjectBindingStrings = 0x50; // TArray<FString>
	}

	namespace n_UPanelWidget { // : UWidget
		constexpr auto Slots = 0x118; // TArray<UPanelSlot*>
	}

	namespace n_AAudioVolume { // : AVolume
		constexpr auto Priority = 0x408; // float
		constexpr auto bEnabled = 0x40c; // char : 1
		constexpr auto Settings = 0x410; // FReverbSettings
		constexpr auto AmbientZoneSettings = 0x428; // FInteriorSettings
	}

	namespace n_UQosEvaluator { // : UObject
		constexpr auto CurrentSearchPass = 0x28; // FQosSearchPass
		constexpr auto ControllerId = 0xd8; // int32_t
		constexpr auto bInProgress = 0xdc; // bool
		constexpr auto bCancelOperation = 0xdd; // bool
		constexpr auto Datacenters = 0xe0; // TArray<FQosRegionInfo>
	}

	namespace n_UW_ShortcutIcon_C { // : UShortcutIconBase
		constexpr auto UberGraphFrame = 0x490; // FPointerToUberGraphFrame
		constexpr auto ActionMappingDisplay = 0x498; // UTextBlock*
		constexpr auto DurabilityContainer = 0x4a0; // UBorder*
		constexpr auto HotkeyIcon = 0x4a8; // UW_HotkeyIcon_C*
		constexpr auto IconSlotView = 0x4b0; // UInventoryGridSlotView_C*
		constexpr auto IconView = 0x4b8; // UInventoryIconView_C*
		constexpr auto IsActiveView = 0x4c0; // UImage*
		constexpr auto PB_Durabilty = 0x4c8; // UProgressBar*
	}

	namespace n_ANavMeshBoundsVolume { // : AVolume
		constexpr auto SupportedAgents = 0x408; // FNavAgentSelector
	}

	namespace n_USkyLightComponent { // : ULightComponentBase
		constexpr auto SourceType = 0x328; // ESkyLightSourceType
		constexpr auto Cubemap = 0x330; // UTextureCube*
		constexpr auto SourceCubemapAngle = 0x338; // float
		constexpr auto CubemapResolution = 0x33c; // int32_t
		constexpr auto SkyDistanceThreshold = 0x340; // float
		constexpr auto bLowerHemisphereIsBlack = 0x344; // bool
		constexpr auto LowerHemisphereColor = 0x348; // FLinearColor
		constexpr auto OcclusionMaxDistance = 0x358; // float
		constexpr auto Contrast = 0x35c; // float
		constexpr auto MinOcclusion = 0x360; // float
		constexpr auto OcclusionTint = 0x364; // FColor
		constexpr auto BlendDestinationCubemap = 0x418; // UTextureCube*
	}

	namespace n_UEditableTextWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto EditableTextStyle = 0x30; // FEditableTextStyle
	}

	namespace n_UContentWidget { // : UPanelWidget
		constexpr auto Slots = 0x118; // TArray<UPanelSlot*>
	}

	namespace n_UMovieSceneSkeletalAnimationTrack { // : UMovieSceneNameableTrack
		constexpr auto AnimationSections = 0xb8; // TArray<UMovieSceneSection*>
	}

	namespace n_UObjectPool { // : UObject
		constexpr auto m_ObjectPool = 0x28; // TArray<UObject*>
	}

	namespace n_UFeedingTrayEntryView { // : URootWidget
		constexpr auto m_Pet = 0x328; // AConanCharacter*
		constexpr auto m_HungerSystem = 0x330; // UThrallHungerSystemComponent*
	}

	namespace n_UDistributionFloatConstantCurve { // : UDistributionFloat
		constexpr auto ConstantCurve = 0x38; // FInterpCurveFloat
	}

	namespace n_UEnemyHealthBar { // : URootWidget
		constexpr auto BorderBoss = 0x318; // FSlateBrush
		constexpr auto BorderUniqueThrall = 0x3a8; // FSlateBrush
	}

	namespace n_UPhysicsConstraintComponent { // : USceneComponent
		constexpr auto ConstraintActor1 = 0x300; // AActor*
		constexpr auto ComponentName1 = 0x308; // FConstrainComponentPropName
		constexpr auto ConstraintActor2 = 0x310; // AActor*
		constexpr auto ComponentName2 = 0x318; // FConstrainComponentPropName
		constexpr auto ConstraintSetup = 0x330; // UPhysicsConstraintTemplate*
		constexpr auto OnConstraintBroken = 0x338; // FScriptMulticastDelegate
		constexpr auto ConstraintInstance = 0x350; // FConstraintInstance
	}

	namespace n_ULogoutCallbackProxy { // : UBlueprintAsyncActionBase
		constexpr auto onSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto onFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_UParticleModuleAttractorParticle { // : UParticleModuleAttractorBase
		constexpr auto EmitterName = 0x30; // FName
		constexpr auto range = 0x38; // FRawDistributionFloat
		constexpr auto bStrengthByDistance = 0x70; // char : 1
		constexpr auto Strength = 0x78; // FRawDistributionFloat
		constexpr auto bAffectBaseVelocity = 0xb0; // char : 1
		constexpr auto SelectionMethod = 0xb4; // EAttractorParticleSelectionMethod
		constexpr auto bRenewSource = 0xb8; // char : 1
		constexpr auto bInheritSourceVel = 0xb8; // char : 1
		constexpr auto LastSelIndex = 0xbc; // int32_t
	}

	namespace n_UFCButton { // : URootWidget
		constexpr auto Label = 0x318; // FText
		constexpr auto LabelJustification = 0x330; // ETextJustify
		constexpr auto KeyShortcutName = 0x338; // FName
		constexpr auto GamepadKeyShortcutName = 0x340; // FName
		constexpr auto GamepadIconKey = 0x348; // FKey
		constexpr auto ShowOnlyGamepadIcon = 0x360; // bool
		constexpr auto Style = 0x368; // FFCButtonStyle
		constexpr auto IsCheckable = 0xa28; // bool
		constexpr auto ToggleWhenClicked = 0xa29; // bool
		constexpr auto ToggleAction = 0xa2a; // EFCButtonToggleAction
		constexpr auto IsChecked = 0xa2b; // bool
		constexpr auto LabelFont = 0xa30; // FSlateFontInfo
		constexpr auto HoveredFontColor = 0xa98; // FSlateColor
		constexpr auto PressedFontColor = 0xac0; // FSlateColor
		constexpr auto PressedHoveredFontColor = 0xae8; // FSlateColor
		constexpr auto FontColor = 0xb10; // FSlateColor
		constexpr auto SignalClicked = 0xb50; // FScriptMulticastDelegate
		constexpr auto SignalPressed = 0xb60; // FScriptMulticastDelegate
		constexpr auto SignalReleased = 0xb70; // FScriptMulticastDelegate
		constexpr auto SignalToggled = 0xb80; // FScriptMulticastDelegate
		constexpr auto SignalMouseEnter = 0xb90; // FScriptMulticastDelegate
		constexpr auto SignalMouseLeave = 0xba0; // FScriptMulticastDelegate
		constexpr auto m_MenuAnchor = 0xbe0; // UMenuAnchor*
		constexpr auto m_SubButtons = 0xc00; // TArray<UFCButton*>
	}

	namespace n_USettingsVideoBase { // : USubSettingsMaster
		constexpr auto ShowConfirmDialog = 0x328; // FScriptMulticastDelegate
		constexpr auto IsVideoModeDirty = 0x338; // bool
	}

	namespace n_USaveLevelCallProxy { // : UBlueprintAsyncActionBase
		constexpr auto onSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto onFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_UGameMapsSettings { // : UObject
		constexpr auto EditorStartupMap = 0x28; // FStringAssetReference
		constexpr auto LocalMapOptions = 0x38; // FString
		constexpr auto TransitionMap = 0x48; // FStringAssetReference
		constexpr auto bUseSplitscreen = 0x58; // bool
		constexpr auto TwoPlayerSplitscreenLayout = 0x59; // ETwoPlayerSplitScreenType
		constexpr auto ThreePlayerSplitscreenLayout = 0x5a; // EThreePlayerSplitScreenType
		constexpr auto bOffsetPlayerGamepadIds = 0x5b; // bool
		constexpr auto GameInstanceClass = 0x60; // FStringClassReference
		constexpr auto GameDefaultMap = 0x70; // FStringAssetReference
		constexpr auto ServerDefaultMap = 0x80; // FStringAssetReference
		constexpr auto GlobalDefaultGameMode = 0x90; // FStringClassReference
		constexpr auto GlobalDefaultServerGameMode = 0xa0; // FStringClassReference
		constexpr auto GameModeMapPrefixes = 0xb0; // TArray<FGameModeName>
		constexpr auto GameModeClassAliases = 0xc0; // TArray<FGameModeName>
	}

	namespace n_UNavMovementComponent { // : UMovementComponent
		constexpr auto NavAgentProps = 0x150; // FNavAgentProperties
		constexpr auto FixedPathBrakingDistance = 0x170; // float
		constexpr auto bUpdateNavAgentWithOwnersCollision = 0x174; // char : 1
		constexpr auto bUseAccelerationForPaths = 0x174; // char : 1
		constexpr auto bUseFixedBrakingDistanceForPaths = 0x174; // char : 1
		constexpr auto MovementState = 0x178; // FMovementProperties
	}

	namespace n_UDeviceProfileManager { // : UObject
		constexpr auto Profiles = 0x28; // TArray<UObject*>
	}

	namespace n_UGuildLogBase { // : URootWidget
		constexpr auto ListEntryClass = 0x328; // UUserWidget*
	}

	namespace n_UParticleModuleColor { // : UParticleModuleColorBase
		constexpr auto StartColor = 0x30; // FRawDistributionVector
		constexpr auto StartAlpha = 0x80; // FRawDistributionFloat
		constexpr auto bClampAlpha = 0xb8; // char : 1
	}

	namespace n_UNavigationSystem { // : UBlueprintFunctionLibrary
		constexpr auto MainNavData = 0x28; // ANavigationData*
		constexpr auto AbstractNavData = 0x30; // ANavigationData*
		constexpr auto bAutoCreateNavigationData = 0x38; // char : 1
		constexpr auto bAllowClientSideNavigation = 0x38; // char : 1
		constexpr auto bSupportRebuilding = 0x38; // char : 1
		constexpr auto bInitialBuildingLocked = 0x38; // char : 1
		constexpr auto bSkipAgentHeightCheckWhenPickingNavData = 0x38; // char : 1
		constexpr auto DataGatheringMode = 0x3c; // ENavDataGatheringModeConfig
		constexpr auto bGenerateNavigationOnlyAroundNavigationInvokers = 0x40; // char : 1
		constexpr auto ActiveTilesUpdateInterval = 0x44; // float
		constexpr auto SupportedAgents = 0x48; // TArray<FNavDataConfig>
		constexpr auto DirtyAreasUpdateFreq = 0x58; // float
		constexpr auto NavDataSet = 0x60; // TArray<ANavigationData*>
		constexpr auto NavDataRegistrationQueue = 0x70; // TArray<ANavigationData*>
		constexpr auto OnNavDataRegisteredEvent = 0xe0; // FScriptMulticastDelegate
		constexpr auto OnNavigationGenerationFinishedDelegate = 0xf0; // FScriptMulticastDelegate
		constexpr auto OperationMode = 0x224; // FNavigationSystemRunMode
	}

	namespace n_ALandscapeStreamingProxy { // : ALandscapeProxy
		constexpr auto LandscapeActor = 0x800; // ALandscape*
	}

	namespace n_UAnimMontage { // : UAnimCompositeBase
		constexpr auto BlendIn = 0xa0; // FAlphaBlend
		constexpr auto BlendInTime = 0xd8; // float
		constexpr auto BlendOut = 0xe0; // FAlphaBlend
		constexpr auto BlendOutTime = 0x118; // float
		constexpr auto BlendOutTriggerTime = 0x11c; // float
		constexpr auto SyncGroup = 0x120; // FName
		constexpr auto SyncSlotIndex = 0x128; // int32_t
		constexpr auto MarkerData = 0x130; // FMarkerSyncData
		constexpr auto CompositeSections = 0x150; // TArray<FCompositeSection>
		constexpr auto SlotAnimTracks = 0x160; // TArray<FSlotAnimationTrack>
		constexpr auto BranchingPoints = 0x170; // TArray<FBranchingPoint>
		constexpr auto bEnableRootMotionTranslation = 0x180; // bool
		constexpr auto bEnableRootMotionRotation = 0x181; // bool
		constexpr auto RootMotionRootLock = 0x182; // ERootMotionRootLock
		constexpr auto BranchingPointMarkers = 0x188; // TArray<FBranchingPointMarker>
		constexpr auto BranchingPointStateNotifyIndices = 0x198; // TArray<int32_t>
	}

	namespace n_UParticleModuleVelocity_Seeded { // : UParticleModuleVelocity
		constexpr auto RandomSeedInfo = 0xc0; // FParticleRandomSeedInfo
	}

	namespace n_UInterpTrackFloatParticleParam { // : UInterpTrackFloatBase
		constexpr auto ParamName = 0x90; // FName
	}

	namespace n_UInterpTrackInstToggle { // : UInterpTrackInst
		constexpr auto Action = 0x28; // ETrackToggleAction
		constexpr auto LastUpdatePosition = 0x2c; // float
		constexpr auto bSavedActiveState = 0x30; // char : 1
	}

	namespace n_UWeaponCollisionAnimNotifyState { // : UAnimNotifyState
		constexpr auto bDefaultTriggerOnDedicatedServer = 0x28; // bool
	}

	namespace n_UBTTask_PushPawnAction { // : UBTTask_PawnActionBase
		constexpr auto Action = 0x70; // UPawnAction*
	}

	namespace n_UGraniteCookedSettings { // : UObject
		constexpr auto DeletedTexturesInCookedBuild = 0x28; // TArray<FName>
	}

	namespace n_UDemoNetDriver { // : UNetDriver
		constexpr auto RollbackNetStartupActors = 0x640; // TMap<FString, FRollbackNetStartupActorInfo>
	}

	namespace n_UBTDecorator_IsAtLocation { // : UBTDecorator_BlackboardBase
		constexpr auto AcceptableRadius = 0x90; // float
		constexpr auto ParametrizedAcceptableRadius = 0x98; // FAIDataProviderFloatValue
		constexpr auto bUseParametrizedRadius = 0xc8; // char : 1
		constexpr auto bUseNavAgentGoalLocation = 0xc8; // char : 1
	}

	namespace n_UMaterialExpressionParameter { // : UMaterialExpression
		constexpr auto ParameterName = 0x60; // FName
		constexpr auto ExpressionGUID = 0x68; // FGuid
		constexpr auto Group = 0x78; // FName
	}

	namespace n_UPaperdollIconSlot { // : URootWidget
		constexpr auto KeyNavOnSelectedEvent = 0x240; // FScriptMulticastDelegate
		constexpr auto KeyNavLeft = 0x250; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavRight = 0x258; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavAbove = 0x260; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavBelow = 0x268; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavTab = 0x270; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildLeft = 0x278; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildRight = 0x280; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildAbove = 0x288; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildBelow = 0x290; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildTab = 0x298; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildren = 0x2a0; // TWeakObjectPtr<URootWidget>
		constexpr auto TooltipWidgetClass = 0x2a8; // UTooltipWidget*
		constexpr auto KeyNavIndicatorClass = 0x2b0; // UKeyNavIndicator*
		constexpr auto PositiveFeedbackColor = 0x2b8; // FLinearColor
		constexpr auto NegativeFeedbackColor = 0x2c8; // FLinearColor
		constexpr auto NeutralFeedbackColor = 0x2d8; // FLinearColor
		constexpr auto KeyNavFocusOnClick = 0x2e8; // bool
		constexpr auto KeyNavAutoSetBack = 0x2e9; // bool
		constexpr auto m_Window = 0x2f0; // UWindowRoot*
		constexpr auto m_Parent = 0x2f8; // TWeakObjectPtr<URootWidget>
		constexpr auto m_KeyNavIndicator = 0x300; // UKeyNavIndicator*
	}

	namespace n_UParticleModuleLifetime { // : UParticleModuleLifetimeBase
		constexpr auto LifeTime = 0x30; // FRawDistributionFloat
	}

	namespace n_UMaterialExpressionTextureBase { // : UMaterialExpression
		constexpr auto Texture = 0x60; // UTexture*
		constexpr auto SamplerType = 0x68; // EMaterialSamplerType
		constexpr auto IsDefaultMeshpaintTexture = 0x6c; // char : 1
	}

	namespace n_AGlobalMarkerRegistry { // : AActor
		constexpr auto m_PlayerMapMarkerComponents = 0x3e0; // TArray<UCharacterMapMarkerComponent*>
		constexpr auto m_GlobalMarkers = 0x3f0; // TArray<FMapMarker>
	}

	namespace n_UDistributionVectorParticleParameter { // : UDistributionVectorParameterBase
		constexpr auto ParameterName = 0x50; // FName
		constexpr auto MinInput = 0x58; // FVector
		constexpr auto MaxInput = 0x64; // FVector
		constexpr auto MinOutput = 0x70; // FVector
		constexpr auto MaxOutput = 0x7c; // FVector
		constexpr auto ParamModes = 0x88; // DistributionParamMode [0x3]
	}

	namespace n_UTimeInputBox { // : URootWidget
		constexpr auto KeyNavOnSelectedEvent = 0x240; // FScriptMulticastDelegate
		constexpr auto KeyNavLeft = 0x250; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavRight = 0x258; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavAbove = 0x260; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavBelow = 0x268; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavTab = 0x270; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildLeft = 0x278; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildRight = 0x280; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildAbove = 0x288; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildBelow = 0x290; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildTab = 0x298; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildren = 0x2a0; // TWeakObjectPtr<URootWidget>
		constexpr auto TooltipWidgetClass = 0x2a8; // UTooltipWidget*
		constexpr auto KeyNavIndicatorClass = 0x2b0; // UKeyNavIndicator*
		constexpr auto PositiveFeedbackColor = 0x2b8; // FLinearColor
		constexpr auto NegativeFeedbackColor = 0x2c8; // FLinearColor
		constexpr auto NeutralFeedbackColor = 0x2d8; // FLinearColor
		constexpr auto KeyNavFocusOnClick = 0x2e8; // bool
		constexpr auto KeyNavAutoSetBack = 0x2e9; // bool
		constexpr auto m_Window = 0x2f0; // UWindowRoot*
		constexpr auto m_Parent = 0x2f8; // TWeakObjectPtr<URootWidget>
		constexpr auto m_KeyNavIndicator = 0x300; // UKeyNavIndicator*
	}

	namespace n_UNetworkSettings { // : UDeveloperSettings
		constexpr auto bVerifyPeer = 0x38; // char : 1
		constexpr auto bEnableMultiplayerWorldOriginRebasing = 0x38; // char : 1
		constexpr auto MaxRepArraySize = 0x3c; // int32_t
		constexpr auto MaxRepArrayMemory = 0x40; // int32_t
	}

	namespace n_UPlayFabRuntimeSettings { // : UObject
		constexpr auto ProductionEnvironmentURL = 0x28; // FString
		constexpr auto TitleId = 0x38; // FString
		constexpr auto DeveloperSecretKey = 0x48; // FString
	}

	namespace n_UMediaPlayer { // : UObject
		constexpr auto OnEndReached = 0x40; // FScriptMulticastDelegate
		constexpr auto OnMediaClosed = 0x50; // FScriptMulticastDelegate
		constexpr auto OnMediaOpened = 0x60; // FScriptMulticastDelegate
		constexpr auto OnMediaOpenFailed = 0x70; // FScriptMulticastDelegate
		constexpr auto OnPlaybackResumed = 0x80; // FScriptMulticastDelegate
		constexpr auto OnPlaybackSuspended = 0x90; // FScriptMulticastDelegate
		constexpr auto PlayOnOpen = 0xa0; // bool
		constexpr auto Shuffle = 0xa4; // char : 1
		constexpr auto Loop = 0xa4; // char : 1
		constexpr auto Overlays = 0xa8; // UMediaOverlays*
		constexpr auto Playlist = 0xb0; // UMediaPlaylist*
		constexpr auto PlaylistIndex = 0xb8; // int32_t
		constexpr auto SoundWave = 0xc0; // UMediaSoundWave*
		constexpr auto VideoTexture = 0xc8; // UMediaTexture*
	}

	namespace n_USoundAttenuation { // : UObject
		constexpr auto Attenuation = 0x28; // FSoundAttenuationSettings
	}

	namespace n_UInheritableComponentHandler { // : UObject
		constexpr auto Records = 0x28; // TArray<FComponentOverrideRecord>
		constexpr auto UnnecessaryComponents = 0x38; // TArray<UActorComponent*>
	}

	namespace n_UPendingNetGame { // : UObject
		constexpr auto NetDriver = 0x30; // UNetDriver*
		constexpr auto DemoNetDriver = 0x38; // UDemoNetDriver*
	}

	namespace n_AGameStateBase { // : AInfo
		constexpr auto GameModeClass = 0x3d0; // AGameModeBase*
		constexpr auto AuthorityGameMode = 0x3d8; // AGameModeBase*
		constexpr auto SpectatorClass = 0x3e0; // ASpectatorPawn*
		constexpr auto PlayerArray = 0x3e8; // TArray<APlayerState*>
		constexpr auto bReplicatedHasBegunPlay = 0x3f8; // bool
		constexpr auto ReplicatedWorldTimeSeconds = 0x3fc; // float
		constexpr auto ServerWorldTimeSecondsDelta = 0x400; // float
		constexpr auto ServerWorldTimeSecondsUpdateFrequency = 0x404; // float
	}

	namespace n_AHUD { // : AActor
		constexpr auto PlayerOwner = 0x3d0; // APlayerController*
		constexpr auto bLostFocusPaused = 0x3d8; // char : 1
		constexpr auto bShowHUD = 0x3d8; // char : 1
		constexpr auto bShowDebugInfo = 0x3d8; // char : 1
		constexpr auto bShowHitBoxDebugInfo = 0x3d8; // char : 1
		constexpr auto bShowOverlays = 0x3d8; // char : 1
		constexpr auto bEnableDebugTextShadow = 0x3d8; // char : 1
		constexpr auto PostRenderedActors = 0x3e0; // TArray<AActor*>
		constexpr auto DebugDisplay = 0x3f8; // TArray<FName>
		constexpr auto ToggledDebugCategories = 0x408; // TArray<FName>
		constexpr auto Canvas = 0x418; // UCanvas*
		constexpr auto DebugCanvas = 0x420; // UCanvas*
		constexpr auto DebugTextList = 0x428; // TArray<FDebugTextInfo>
		constexpr auto ShowDebugTargetDesiredClass = 0x438; // AActor*
		constexpr auto ShowDebugTargetActor = 0x440; // AActor*
	}

	namespace n_UCanvasRenderTarget2D { // : UTextureRenderTarget2D
		constexpr auto OnCanvasRenderTargetUpdate = 0xf8; // FScriptMulticastDelegate
		constexpr auto World = 0x108; // TWeakObjectPtr<UWorld>
		constexpr auto bShouldClearRenderTargetOnReceiveUpdate = 0x110; // bool
	}

	namespace n_UMaterialExpressionMax { // : UMaterialExpression
		constexpr auto A = 0x60; // FExpressionInput
		constexpr auto B = 0x98; // FExpressionInput
		constexpr auto ConstA = 0xd0; // float
		constexpr auto ConstB = 0xd4; // float
	}

	namespace n_UTextBlock { // : UTextLayoutWidget
		constexpr auto Text = 0x148; // FText
		constexpr auto TextDelegate = 0x160; // DelegateProperty
		constexpr auto ColorAndOpacity = 0x170; // FSlateColor
		constexpr auto ColorAndOpacityDelegate = 0x198; // DelegateProperty
		constexpr auto Font = 0x1a8; // FSlateFontInfo
		constexpr auto ShadowOffset = 0x210; // FVector2D
		constexpr auto ShadowColorAndOpacity = 0x218; // FLinearColor
		constexpr auto ShadowColorAndOpacityDelegate = 0x228; // DelegateProperty
		constexpr auto MinDesiredWidth = 0x238; // float
		constexpr auto bWrapWithInvalidationPanel = 0x23c; // bool
	}

	namespace n_UMaterialExpressionEyeAdaptation { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto Desc = 0x38; // FString
		constexpr auto BorderColor = 0x48; // FColor
		constexpr auto bRealtimePreview = 0x4c; // char : 1
		constexpr auto bNeedToUpdatePreview = 0x4c; // char : 1
		constexpr auto bIsParameterExpression = 0x4c; // char : 1
		constexpr auto bCommentBubbleVisible = 0x4c; // char : 1
		constexpr auto bShowOutputNameOnPin = 0x4c; // char : 1
		constexpr auto bHidePreviewWindow = 0x4c; // char : 1
		constexpr auto bCollapsed = 0x4c; // char : 1
		constexpr auto bShaderInputData = 0x4c; // char : 1
		constexpr auto bShowInputs = 0x4c; // char : 1
		constexpr auto bShowOutputs = 0x4c; // char : 1
		constexpr auto Outputs = 0x50; // TArray<FExpressionOutput>
	}

	namespace n_UParticleModuleOrientationBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x28; // char : 1
		constexpr auto LODDuplicate = 0x28; // char : 1
		constexpr auto bSupportsRandomSeed = 0x28; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x28; // char : 1
		constexpr auto LODValidity = 0x2c; // char
	}

	namespace n_UEnvQueryGenerator_PathingGrid { // : UEnvQueryGenerator_SimpleGrid
		constexpr auto PathToItem = 0xe8; // FAIDataProviderBoolValue
		constexpr auto NavigationFilter = 0x118; // UNavigationQueryFilter*
		constexpr auto ScanRangeMultiplier = 0x120; // FAIDataProviderFloatValue
	}

	namespace n_UMaterialExpressionDeriveNormalZ { // : UMaterialExpression
		constexpr auto InXY = 0x60; // FExpressionInput
	}

	namespace n_UPaperTileLayer { // : UObject
		constexpr auto LayerName = 0x28; // FText
		constexpr auto LayerWidth = 0x40; // int32_t
		constexpr auto LayerHeight = 0x44; // int32_t
		constexpr auto bHiddenInGame = 0x48; // char : 1
		constexpr auto bLayerCollides = 0x48; // char : 1
		constexpr auto bOverrideCollisionThickness = 0x48; // char : 1
		constexpr auto bOverrideCollisionOffset = 0x48; // char : 1
		constexpr auto CollisionThicknessOverride = 0x4c; // float
		constexpr auto CollisionOffsetOverride = 0x50; // float
		constexpr auto LayerColor = 0x54; // FLinearColor
		constexpr auto AllocatedWidth = 0x64; // int32_t
		constexpr auto AllocatedHeight = 0x68; // int32_t
		constexpr auto AllocatedCells = 0x70; // TArray<FPaperTileInfo>
		constexpr auto TileSet = 0x80; // UPaperTileSet*
		constexpr auto AllocatedGrid = 0x88; // TArray<int32_t>
	}

	namespace n_UMaterialExpressionVectorParameter { // : UMaterialExpressionParameter
		constexpr auto DefaultValue = 0x80; // FLinearColor
	}

	namespace n_USoundNodeEnveloper { // : USoundNode
		constexpr auto LoopStart = 0x38; // float
		constexpr auto LoopEnd = 0x3c; // float
		constexpr auto DurationAfterLoop = 0x40; // float
		constexpr auto LoopCount = 0x44; // int32_t
		constexpr auto bLoopIndefinitely = 0x48; // char : 1
		constexpr auto bLoop = 0x48; // char : 1
		constexpr auto VolumeInterpCurve = 0x50; // UDistributionFloatConstantCurve*
		constexpr auto PitchInterpCurve = 0x58; // UDistributionFloatConstantCurve*
		constexpr auto VolumeCurve = 0x60; // FRuntimeFloatCurve
		constexpr auto PitchCurve = 0xd8; // FRuntimeFloatCurve
		constexpr auto PitchMin = 0x150; // float
		constexpr auto PitchMax = 0x154; // float
		constexpr auto VolumeMin = 0x158; // float
		constexpr auto VolumeMax = 0x15c; // float
	}

	namespace n_UMovieSceneAudioSection { // : UMovieSceneSection
		constexpr auto Sound = 0xc8; // USoundBase*
		constexpr auto StartOffset = 0xd0; // float
		constexpr auto AudioStartTime = 0xd4; // float
		constexpr auto AudioDilationFactor = 0xd8; // float
		constexpr auto AudioVolume = 0xdc; // float
		constexpr auto SoundVolume = 0xe0; // FRichCurve
		constexpr auto PitchMultiplier = 0x150; // FRichCurve
		constexpr auto bSuppressSubtitles = 0x1c0; // bool
	}

	namespace n_ATriggerBase { // : AActor
		constexpr auto CollisionComponent = 0x3d0; // UShapeComponent*
		constexpr auto SpriteComponent = 0x3d8; // UBillboardComponent*
	}

	namespace n_UHealthBarBase { // : URootWidget
		constexpr auto AnimSpeed = 0x318; // float
		constexpr auto BarSizeImpact = 0x31c; // float
		constexpr auto CatchUpOnRegen = 0x320; // bool
		constexpr auto ClearOnZero = 0x321; // bool
		constexpr auto MainBarBrush = 0x328; // FSlateBrush
		constexpr auto HitBarBrush = 0x3b8; // FSlateBrush
		constexpr auto CorruptionBarBrush = 0x448; // FSlateBrush
		constexpr auto BackgroundBrush = 0x4d8; // FSlateBrush
		constexpr auto OverlayBrush = 0x568; // FSlateBrush
		constexpr auto EdgeBrush = 0x5f8; // FSlateBrush
		constexpr auto bValueTextEnabled = 0x688; // bool
	}

	namespace n_UMovieSceneBindingOverrides { // : UObject
		constexpr auto BindingData = 0x30; // TArray<FMovieSceneBindingOverrideData>
	}

	namespace n_UW_ActionTutorial_C { // : UActionTutorial
		constexpr auto Icon = 0x3f0; // UW_HotkeyIcon_C*
		constexpr auto PostText = 0x3f8; // UTextBlock*
		constexpr auto PreText = 0x400; // UTextBlock*
	}

	namespace n_UCharacterListBase { // : URootWidget
		constexpr auto ListEntryClass = 0x318; // UCharacterListEntryBase*
		constexpr auto ContextMenuModule = 0x320; // FName
		constexpr auto m_EntryList = 0x328; // UNavigatableVerticalBox*
		constexpr auto m_ContextMenu = 0x330; // UContextMenuBase*
		constexpr auto m_ScrollBox = 0x338; // UScrollBox*
		constexpr auto m_KeyNavAnchor = 0x340; // URootWidget*
		constexpr auto m_SelectedEntry = 0x348; // UCharacterListEntryBase*
	}

	namespace n_UScrollBoxSlot { // : UPanelSlot
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
	}

	namespace n_APlayerStartPIE { // : APlayerStart
		constexpr auto PlayerStartTag = 0x3f8; // FName
	}

	namespace n_UCurveVector { // : UCurveBase
		constexpr auto FloatCurves = 0x30; // FRichCurve [0x3]
	}

	namespace n_ATargetPoint { // : AActor
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto CustomTimeDilation = 0x80; // float
		constexpr auto bHidden = 0x84; // char : 1
		constexpr auto bNetTemporary = 0x84; // char : 1
		constexpr auto bNetStartup = 0x84; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x84; // char : 1
		constexpr auto bAlwaysRelevant = 0x84; // char : 1
		constexpr auto bReplicateMovement = 0x84; // char : 1
		constexpr auto bTearOff = 0x84; // char : 1
		constexpr auto bExchangedRoles = 0x84; // char : 1
		constexpr auto bPendingNetUpdate = 0x85; // char : 1
		constexpr auto bNetLoadOnClient = 0x85; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x85; // char : 1
		constexpr auto bBlockInput = 0x85; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x85; // char : 1
		constexpr auto bActorEnableCollision = 0x86; // char : 1
		constexpr auto bReplicates = 0x86; // char : 1
		constexpr auto bLostRelevancy = 0x86; // char : 1
		constexpr auto NetDriverName = 0x88; // FName
		constexpr auto bCanBeInCluster = 0x90; // char : 1
		constexpr auto RemoteRole = 0x91; // ENetRole
		constexpr auto Owner = 0x98; // AActor*
		constexpr auto ReplicatedMovement = 0xa0; // FRepMovement
		constexpr auto AttachmentReplication = 0xd8; // FRepAttachment
		constexpr auto Role = 0x118; // ENetRole
		constexpr auto AutoReceiveInput = 0x11a; // EAutoReceiveInput
		constexpr auto InputPriority = 0x11c; // int32_t
		constexpr auto InputComponent = 0x120; // UInputComponent*
		constexpr auto InputConsumeOption = 0x128; // EInputConsumeOptions
		constexpr auto NetCullDistanceSquared = 0x12c; // float
		constexpr auto ViewTargetNetCullDistanceSquared = 0x130; // float
		constexpr auto NetTag = 0x134; // int32_t
		constexpr auto NetUpdateTime = 0x138; // float
		constexpr auto NetUpdateFrequency = 0x13c; // float
		constexpr auto MinNetUpdateFrequency = 0x140; // float
		constexpr auto NetPriority = 0x144; // float
		constexpr auto LastNetUpdateTime = 0x148; // float
		constexpr auto bAutoDestroyWhenFinished = 0x14c; // char : 1
		constexpr auto bCanBeDamaged = 0x14c; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x14c; // char : 1
		constexpr auto bCollideWhenPlacing = 0x14c; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x14c; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x14c; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x14c; // char : 1
		constexpr auto SpawnCollisionHandlingMethod = 0x14d; // ESpawnActorCollisionHandlingMethod
		constexpr auto Instigator = 0x158; // APawn*
		constexpr auto Children = 0x160; // TArray<AActor*>
		constexpr auto RootComponent = 0x170; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x178; // TArray<AMatineeActor*>
		constexpr auto InitialLifeSpan = 0x188; // float
		constexpr auto Layers = 0x198; // TArray<FName>
		constexpr auto ParentComponentActor = 0x1a8; // TWeakObjectPtr<AActor>
		constexpr auto ParentComponent = 0x1b0; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x1b8; // char : 1
		constexpr auto bUseExtendedRelevancyTimeout = 0x1b8; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x1b8; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x1b8; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x1b8; // char : 1
		constexpr auto Tags = 0x1c0; // TArray<FName>
		constexpr auto HiddenEditorViews = 0x1d0; // uint64_t
		constexpr auto OnTakeAnyDamage = 0x1d8; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x1e8; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x1f8; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x208; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x218; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x228; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x238; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x248; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x258; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x268; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x278; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x288; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x298; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x2a8; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x2b8; // FScriptMulticastDelegate
		constexpr auto BlueprintCreatedComponents = 0x3a8; // TArray<UActorComponent*>
		constexpr auto InstanceComponents = 0x3b8; // TArray<UActorComponent*>
	}

	namespace n_USettingsEventDispatchers { // : UObject
		constexpr auto OnNudityChanged = 0x28; // FScriptMulticastDelegate
		constexpr auto OnSignVisibilityChanged = 0x38; // FScriptMulticastDelegate
		constexpr auto OnEnableClanMarkesChanged = 0x48; // FScriptMulticastDelegate
		constexpr auto OnOwnVoiceIndicatorChanged = 0x58; // FScriptMulticastDelegate
		constexpr auto OnOtherVoiceIndicatorChanged = 0x68; // FScriptMulticastDelegate
		constexpr auto OnShowHUDBuffsChanged = 0x78; // FScriptMulticastDelegate
		constexpr auto OnHUDBuffScaleChanged = 0x88; // FScriptMulticastDelegate
		constexpr auto OnHUDShowBarValuesChanged = 0x98; // FScriptMulticastDelegate
		constexpr auto OnShowHealthValueThrallsChanged = 0xa8; // FScriptMulticastDelegate
		constexpr auto OnShowHealthValueNPCsChanged = 0xb8; // FScriptMulticastDelegate
		constexpr auto OnAlwaysShowHealthBarsChanged = 0xc8; // FScriptMulticastDelegate
		constexpr auto OnDifferentBarColorClanMembersChanged = 0xd8; // FScriptMulticastDelegate
	}

	namespace n_UEditableTextBox { // : UWidget
		constexpr auto Text = 0x118; // FText
		constexpr auto TextDelegate = 0x130; // DelegateProperty
		constexpr auto WidgetStyle = 0x140; // FEditableTextBoxStyle
		constexpr auto Style = 0x9b0; // USlateWidgetStyleAsset*
		constexpr auto HintText = 0x9b8; // FText
		constexpr auto HintTextDelegate = 0x9d0; // DelegateProperty
		constexpr auto Font = 0x9e0; // FSlateFontInfo
		constexpr auto ForegroundColor = 0xa48; // FLinearColor
		constexpr auto BackgroundColor = 0xa58; // FLinearColor
		constexpr auto ReadOnlyForegroundColor = 0xa68; // FLinearColor
		constexpr auto IsReadOnly = 0xa78; // bool
		constexpr auto IsPassword = 0xa79; // bool
		constexpr auto MinimumDesiredWidth = 0xa7c; // float
		constexpr auto Padding = 0xa80; // FMargin
		constexpr auto IsCaretMovedWhenGainFocus = 0xa90; // bool
		constexpr auto SelectAllTextWhenFocused = 0xa91; // bool
		constexpr auto RevertTextOnEscape = 0xa92; // bool
		constexpr auto ClearKeyboardFocusOnCommit = 0xa93; // bool
		constexpr auto SelectAllTextOnCommit = 0xa94; // bool
		constexpr auto AllowContextMenu = 0xa95; // bool
		constexpr auto KeyboardType = 0xa96; // EVirtualKeyboardType
		constexpr auto ShapedTextOptions = 0xa98; // FShapedTextOptions
		constexpr auto OnTextChanged = 0xaa0; // FScriptMulticastDelegate
		constexpr auto OnTextCommitted = 0xab0; // FScriptMulticastDelegate
		constexpr auto OnFocusReceived = 0xac0; // FScriptMulticastDelegate
	}

	namespace n_UVideoCaptureSettings { // : UFrameGrabberProtocolSettings
		constexpr auto bUseCompression = 0x30; // bool
		constexpr auto CompressionQuality = 0x34; // float
		constexpr auto VideoCodec = 0x38; // FString
	}

	namespace n_UW_SettingsGamepadPreset_C { // : USettingsGamepadPresetBase
		constexpr auto UberGraphFrame = 0x3d0; // FPointerToUberGraphFrame
		constexpr auto B_Default = 0x3d8; // UW_TabButton_C*
		constexpr auto B_PresetA = 0x3e0; // UW_TabButton_C*
		constexpr auto B_PresetB = 0x3e8; // UW_TabButton_C*
		constexpr auto One_Gamepad_DPad_Down = 0x3f0; // UTextBlock*
		constexpr auto One_Gamepad_DPad_Left = 0x3f8; // UTextBlock*
		constexpr auto One_Gamepad_DPad_Right = 0x400; // UTextBlock*
		constexpr auto One_Gamepad_DPad_Up = 0x408; // UTextBlock*
		constexpr auto One_Gamepad_FaceButton_Bottom = 0x410; // UTextBlock*
		constexpr auto One_Gamepad_FaceButton_Left = 0x418; // UTextBlock*
		constexpr auto One_Gamepad_FaceButton_Right = 0x420; // UTextBlock*
		constexpr auto One_Gamepad_FaceButton_Top = 0x428; // UTextBlock*
		constexpr auto One_Gamepad_LeftShoulder = 0x430; // UTextBlock*
		constexpr auto One_Gamepad_LeftThumbstick = 0x438; // UTextBlock*
		constexpr auto One_Gamepad_LeftTrigger = 0x440; // UTextBlock*
		constexpr auto One_Gamepad_RightShoulder = 0x448; // UTextBlock*
		constexpr auto One_Gamepad_RightThumbstick = 0x450; // UTextBlock*
		constexpr auto One_Gamepad_RightTrigger = 0x458; // UTextBlock*
		constexpr auto One_Gamepad_Special_Left = 0x460; // UTextBlock*
		constexpr auto One_Gamepad_Special_Right = 0x468; // UTextBlock*
		constexpr auto PS_Gamepad_DPad_Down = 0x470; // UTextBlock*
		constexpr auto PS_Gamepad_DPad_Left = 0x478; // UTextBlock*
		constexpr auto PS_Gamepad_DPad_Right = 0x480; // UTextBlock*
		constexpr auto PS_Gamepad_DPad_Up = 0x488; // UTextBlock*
		constexpr auto PS_Gamepad_FaceButton_Bottom = 0x490; // UTextBlock*
		constexpr auto PS_Gamepad_FaceButton_Left = 0x498; // UTextBlock*
		constexpr auto PS_Gamepad_FaceButton_Right = 0x4a0; // UTextBlock*
		constexpr auto PS_Gamepad_FaceButton_Top = 0x4a8; // UTextBlock*
		constexpr auto PS_Gamepad_LeftShoulder = 0x4b0; // UTextBlock*
		constexpr auto PS_Gamepad_LeftThumbstick = 0x4b8; // UTextBlock*
		constexpr auto PS_Gamepad_LeftTrigger = 0x4c0; // UTextBlock*
		constexpr auto PS_Gamepad_RightShoulder = 0x4c8; // UTextBlock*
		constexpr auto PS_Gamepad_RightThumbstick = 0x4d0; // UTextBlock*
		constexpr auto PS_Gamepad_RightTrigger = 0x4d8; // UTextBlock*
		constexpr auto PS_Gamepad_Special_Left = 0x4e0; // UTextBlock*
		constexpr auto PS_Gamepad_Special_Right = 0x4e8; // UTextBlock*
		constexpr auto PS_Overlay = 0x4f0; // UOverlay*
		constexpr auto Xbox_Overlay = 0x4f8; // UOverlay*
	}

	namespace n_UInterpTrackAudioMaster { // : UInterpTrackVectorBase
		constexpr auto VectorTrack = 0x70; // FInterpCurveVector
		constexpr auto CurveTension = 0x88; // float
	}

	namespace n_ABaseGameState_C { // : AConanGameState
		constexpr auto UberGraphFrame = 0x1300; // FPointerToUberGraphFrame
		constexpr auto DefaultSceneRoot = 0x1308; // USceneComponent*
		constexpr auto GlobalImpulseMultiplier = 0x1310; // float
		constexpr auto SummonedAvatarTypes = 0x1318; // TArray<AAvatarCharacter*>
		constexpr auto SummonedAvatarSummoners = 0x1328; // TArray<AConanCharacter*>
		constexpr auto AllowBuildingOutsideSplines = 0x1338; // bool
	}

	namespace n_UConanProjectileMovementComponent { // : UProjectileMovementComponent
		constexpr auto InitialSpeed = 0x150; // float
		constexpr auto MaxSpeed = 0x154; // float
		constexpr auto bRotationFollowsVelocity = 0x158; // char : 1
		constexpr auto bShouldBounce = 0x158; // char : 1
		constexpr auto bInitialVelocityInLocalSpace = 0x158; // char : 1
		constexpr auto bForceSubStepping = 0x158; // char : 1
		constexpr auto bIsHomingProjectile = 0x158; // char : 1
		constexpr auto bBounceAngleAffectsFriction = 0x158; // char : 1
		constexpr auto bIsSliding = 0x158; // char : 1
		constexpr auto PreviousHitTime = 0x15c; // float
		constexpr auto PreviousHitNormal = 0x160; // FVector
		constexpr auto ProjectileGravityScale = 0x16c; // float
		constexpr auto Buoyancy = 0x170; // float
		constexpr auto Bounciness = 0x174; // float
		constexpr auto Friction = 0x178; // float
		constexpr auto BounceVelocityStopSimulatingThreshold = 0x17c; // float
		constexpr auto OnProjectileBounce = 0x180; // FScriptMulticastDelegate
		constexpr auto OnProjectileStop = 0x190; // FScriptMulticastDelegate
		constexpr auto HomingAccelerationMagnitude = 0x1a0; // float
		constexpr auto HomingTargetComponent = 0x1a4; // TWeakObjectPtr<USceneComponent>
		constexpr auto MaxSimulationTimeStep = 0x1ac; // float
		constexpr auto MaxSimulationIterations = 0x1b0; // int32_t
	}

	namespace n_UFCBloodCommunityButton { // : UFCButton
		constexpr auto TextureBlood1 = 0xc20; // UTexture2D*
		constexpr auto TextureBlood2 = 0xc40; // UTexture2D*
		constexpr auto TextureBlood3 = 0xc60; // UTexture2D*
		constexpr auto TextureBlood4 = 0xc80; // UTexture2D*
	}

	namespace n_UColorBinding { // : UPropertyBinding
		constexpr auto SourceObject = 0x28; // TWeakObjectPtr<UObject>
		constexpr auto SourcePath = 0x30; // FDynamicPropertyPath
		constexpr auto DestinationProperty = 0x40; // FName
	}

	namespace n_UEscapeStackNode { // : UObject
		constexpr auto SignalActivated = 0x28; // DelegateProperty
		constexpr auto SignalActivatedBP = 0x38; // DelegateProperty
		constexpr auto ShouldEatInput = 0x48; // bool
	}

	namespace n_UMaterialExpressionPower { // : UMaterialExpression
		constexpr auto Base = 0x60; // FExpressionInput
		constexpr auto Exponent = 0x98; // FExpressionInput
		constexpr auto ConstExponent = 0xd0; // float
	}

	namespace n_UAnimNotify_PlayParticleEffect { // : UAnimNotify
		constexpr auto PSTemplate = 0x38; // UParticleSystem*
		constexpr auto LocationOffset = 0x40; // FVector
		constexpr auto RotationOffset = 0x4c; // FRotator
		constexpr auto Attached = 0x70; // char : 1
		constexpr auto SocketName = 0x78; // FName
	}

	namespace n_ADirectionalLight { // : ALight
		constexpr auto LightComponent = 0x3d0; // ULightComponent*
		constexpr auto bEnabled = 0x3d8; // char : 1
	}

	namespace n_UAnimCompress_RemoveLinearKeys { // : UAnimCompress
		constexpr auto MaxPosDiff = 0x40; // float
		constexpr auto MaxAngleDiff = 0x44; // float
		constexpr auto MaxScaleDiff = 0x48; // float
		constexpr auto MaxEffectorDiff = 0x4c; // float
		constexpr auto MinEffectorDiff = 0x50; // float
		constexpr auto EffectorDiffSocket = 0x54; // float
		constexpr auto ParentKeyScale = 0x58; // float
		constexpr auto bRetarget = 0x5c; // char : 1
		constexpr auto bActuallyFilterLinearKeys = 0x5c; // char : 1
	}

	namespace n_UServerInfoBase { // : URootWidget
		constexpr auto m_Session = 0x318; // FBlueprintSessionResult
		constexpr auto m_IsBattlEyeEnabled = 0x400; // bool
		constexpr auto m_ServerTransferEnabled = 0x401; // bool
		constexpr auto m_ServerModList = 0x408; // FServerModList
		constexpr auto m_IsValid = 0x420; // bool
		constexpr auto HoveredSound = 0x428; // USoundBase*
		constexpr auto SignalServerEntrySelected = 0x458; // FScriptMulticastDelegate
		constexpr auto SignalServerListDeselected = 0x468; // FScriptMulticastDelegate
		constexpr auto SignalServerEntryInvoked = 0x478; // FScriptMulticastDelegate
	}

	namespace n_UInterpTrackInstFloatAnimBPParam { // : UInterpTrackInst
		constexpr auto AnimScriptInstance = 0x28; // UAnimInstance*
		constexpr auto ResetFloat = 0x30; // float
	}

	namespace n_UMaterialExpressionTextureSampleParameterSubUV { // : UMaterialExpressionTextureSampleParameter2D
		constexpr auto bBlend = 0x1b8; // char : 1
	}

	namespace n_UImage { // : UWidget
		constexpr auto Image = 0x118; // USlateBrushAsset*
		constexpr auto Brush = 0x120; // FSlateBrush
		constexpr auto BrushDelegate = 0x1b0; // DelegateProperty
		constexpr auto ColorAndOpacity = 0x1c0; // FLinearColor
		constexpr auto ColorAndOpacityDelegate = 0x1d0; // DelegateProperty
		constexpr auto OnMouseButtonDownEvent = 0x1e0; // DelegateProperty
	}

	namespace n_UPawnAction_Move { // : UPawnAction
		constexpr auto GoalActor = 0xd0; // AActor*
		constexpr auto GoalLocation = 0xd8; // FVector
		constexpr auto AcceptableRadius = 0xe4; // float
		constexpr auto FilterClass = 0xe8; // UNavigationQueryFilter*
		constexpr auto bAllowStrafe = 0xf0; // char : 1
		constexpr auto bFinishOnOverlap = 0xf0; // char : 1
		constexpr auto bUsePathfinding = 0xf0; // char : 1
		constexpr auto bAllowPartialPath = 0xf0; // char : 1
		constexpr auto bProjectGoalToNavigation = 0xf0; // char : 1
		constexpr auto bUpdatePathToGoal = 0xf0; // char : 1
		constexpr auto bAbortChildActionOnPathChange = 0xf0; // char : 1
	}

	namespace n_UEQSRenderingComponent { // : UPrimitiveComponent
		constexpr auto MinDrawDistance = 0x308; // float
		constexpr auto LDMaxDrawDistance = 0x30c; // float
		constexpr auto CachedMaxDrawDistance = 0x310; // float
		constexpr auto DepthPriorityGroup = 0x314; // ESceneDepthPriorityGroup
		constexpr auto ViewOwnerDepthPriorityGroup = 0x315; // ESceneDepthPriorityGroup
		constexpr auto bAlwaysCreatePhysicsState = 0x318; // char : 1
		constexpr auto bGenerateOverlapEvents = 0x318; // char : 1
		constexpr auto bForceGenerateOverlapEvents = 0x318; // char : 1
		constexpr auto bMultiBodyOverlap = 0x318; // char : 1
		constexpr auto bCheckAsyncSceneOnMove = 0x318; // char : 1
		constexpr auto bTraceComplexOnMove = 0x318; // char : 1
		constexpr auto bReturnMaterialOnMove = 0x318; // char : 1
		constexpr auto bUseViewOwnerDepthPriorityGroup = 0x318; // char : 1
		constexpr auto bAllowCullDistanceVolume = 0x318; // char : 1
		constexpr auto bHasMotionBlurVelocityMeshes = 0x318; // char : 1
		constexpr auto bVisibleInReflectionCaptures = 0x318; // char : 1
		constexpr auto bRenderInMainPass = 0x318; // char : 1
		constexpr auto bRenderInMono = 0x318; // char : 1
		constexpr auto bReceivesDecals = 0x318; // char : 1
		constexpr auto bOwnerNoSee = 0x318; // char : 1
		constexpr auto bOnlyOwnerSee = 0x318; // char : 1
		constexpr auto bTreatAsBackgroundForOcclusion = 0x318; // char : 1
		constexpr auto bHeightOutputReferenceSand = 0x318; // char : 1
		constexpr auto bHeightOutputReferenceWater = 0x318; // char : 1
		constexpr auto bHeightOutputIgnoreSand = 0x318; // char : 1
		constexpr auto bHeightOutputIgnoreWater = 0x318; // char : 1
		constexpr auto bCullFromDistantShadowCascades = 0x318; // char : 1
		constexpr auto bUseAsOccluder = 0x318; // char : 1
		constexpr auto bSelectable = 0x318; // char : 1
		constexpr auto bForceMipStreaming = 0x318; // char : 1
		constexpr auto bHasPerInstanceHitProxies = 0x318; // char : 1
		constexpr auto CastShadow = 0x318; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x318; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x318; // char : 1
		constexpr auto bCastDynamicShadow = 0x318; // char : 1
		constexpr auto bCastStaticShadow = 0x318; // char : 1
		constexpr auto bCastVolumetricTranslucentShadow = 0x318; // char : 1
		constexpr auto bSelfShadowOnly = 0x31c; // char : 1
		constexpr auto bCastFarShadow = 0x31c; // char : 1
		constexpr auto bCastInsetShadow = 0x31c; // char : 1
		constexpr auto bCastCinematicShadow = 0x31c; // char : 1
		constexpr auto bCastHiddenShadow = 0x31c; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x31c; // char : 1
		constexpr auto bLightAsIfStatic = 0x31c; // char : 1
		constexpr auto bLightAttachmentsAsGroup = 0x31c; // char : 1
		constexpr auto bReceiveCombinedCSMAndStaticShadowsFromStationaryLights = 0x31c; // char : 1
		constexpr auto bSingleSampleShadowFromStationaryLights = 0x31c; // char : 1
		constexpr auto bIgnoreRadialImpulse = 0x31c; // char : 1
		constexpr auto bIgnoreRadialForce = 0x31c; // char : 1
		constexpr auto AlwaysLoadOnClient = 0x31c; // char : 1
		constexpr auto AlwaysLoadOnServer = 0x31c; // char : 1
		constexpr auto bUseEditorCompositing = 0x31c; // char : 1
		constexpr auto bRenderCustomDepth = 0x31c; // char : 1
		constexpr auto IndirectLightingCacheQuality = 0x320; // EIndirectLightingCacheQuality
		constexpr auto bHasCustomNavigableGeometry = 0x321; // EHasCustomNavigableGeometry
		constexpr auto CanCharacterStepUpOn = 0x323; // ECanBeCharacterBase
		constexpr auto LightingChannels = 0x324; // FLightingChannels
		constexpr auto CustomDepthStencilValue = 0x328; // int32_t
		constexpr auto TranslucencySortPriority = 0x32c; // int32_t
		constexpr auto VisibilityId = 0x330; // int32_t
		constexpr auto LpvBiasMultiplier = 0x338; // float
		constexpr auto BodyInstance = 0x340; // FBodyInstance
		constexpr auto BoundsScale = 0x574; // float
		constexpr auto LastSubmitTime = 0x578; // float
		constexpr auto LastRenderTime = 0x57c; // float
		constexpr auto LastRenderTimeOnScreen = 0x580; // float
		constexpr auto MoveIgnoreActors = 0x588; // TArray<AActor*>
		constexpr auto MoveIgnoreComponents = 0x598; // TArray<UPrimitiveComponent*>
		constexpr auto OnComponentHit = 0x5b8; // FScriptMulticastDelegate
		constexpr auto OnComponentBeginOverlap = 0x5c8; // FScriptMulticastDelegate
		constexpr auto OnComponentEndOverlap = 0x5d8; // FScriptMulticastDelegate
		constexpr auto OnComponentWake = 0x5e8; // FScriptMulticastDelegate
		constexpr auto OnComponentSleep = 0x5f8; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x608; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x618; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x628; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x638; // FScriptMulticastDelegate
		constexpr auto LODParentPrimitive = 0x660; // UPrimitiveComponent*
		constexpr auto PostPhysicsComponentTick = 0x668; // FPrimitiveComponentPostPhysicsTickFunction
	}

	namespace n_UCreateSessionCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto onSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto onFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_UDistributionVectorUniformCurve { // : UDistributionVector
		constexpr auto ConstantCurve = 0x38; // FInterpCurveTwoVectors
		constexpr auto bLockAxes1 = 0x50; // char : 1
		constexpr auto bLockAxes2 = 0x50; // char : 1
		constexpr auto LockedAxes = 0x54; // EDistributionVectorLockFlags [0x2]
		constexpr auto MirrorFlags = 0x56; // EDistributionVectorMirrorFlags [0x3]
		constexpr auto bUseExtremes = 0x5c; // char : 1
	}

	namespace n_UInputAxisKeyDelegateBinding { // : UInputDelegateBinding
		constexpr auto InputAxisKeyDelegateBindings = 0x28; // TArray<FBlueprintInputAxisKeyDelegateBinding>
	}

	namespace n_UPaperTerrainComponent { // : UPrimitiveComponent
		constexpr auto TerrainMaterial = 0x6c0; // UPaperTerrainMaterial*
		constexpr auto bClosedSpline = 0x6c8; // bool
		constexpr auto bFilledSpline = 0x6c9; // bool
		constexpr auto AssociatedSpline = 0x6d0; // UPaperTerrainSplineComponent*
		constexpr auto RandomSeed = 0x6d8; // int32_t
		constexpr auto SegmentOverlapAmount = 0x6dc; // float
		constexpr auto TerrainColor = 0x6e0; // FLinearColor
		constexpr auto ReparamStepsPerSegment = 0x6f0; // int32_t
		constexpr auto SpriteCollisionDomain = 0x6f4; // ESpriteCollisionMode
		constexpr auto CollisionThickness = 0x6f8; // float
		constexpr auto CachedBodySetup = 0x700; // UBodySetup*
	}

	namespace n_UBlackboardKeyType_Enum { // : UBlackboardKeyType
		constexpr auto EnumType = 0x30; // UEnum*
		constexpr auto EnumName = 0x38; // FString
		constexpr auto bIsEnumNameValid = 0x48; // char : 1
	}

	namespace n_UDestroySessionCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto onSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto onFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_UMaterialExpressionDDY { // : UMaterialExpression
		constexpr auto Value = 0x60; // FExpressionInput
	}

	namespace n_UNavFilter_AIControllerDefault { // : UNavigationQueryFilter
		constexpr auto Areas = 0x28; // TArray<FNavigationFilterArea>
		constexpr auto IncludeFlags = 0x38; // FNavigationFilterFlags
		constexpr auto ExcludeFlags = 0x3c; // FNavigationFilterFlags
	}

	namespace n_UNiagaraEventReceiverEmitterAction_SpawnParticles { // : UNiagaraEventReceiverEmitterAction
		constexpr auto NumParticles = 0x28; // uint32_t
	}

	namespace n_USoundNodeDoppler { // : USoundNode
		constexpr auto DopplerIntensity = 0x38; // float
	}

	namespace n_UInterpGroup { // : UObject
		constexpr auto InterpTracks = 0x30; // TArray<UInterpTrack*>
		constexpr auto GroupName = 0x40; // FName
		constexpr auto GroupColor = 0x48; // FColor
		constexpr auto bCollapsed = 0x4c; // char : 1
		constexpr auto bVisible = 0x4c; // char : 1
		constexpr auto bIsFolder = 0x4c; // char : 1
		constexpr auto bIsParented = 0x4c; // char : 1
		constexpr auto bIsSelected = 0x4c; // char : 1
	}

	namespace n_UExilesJourneyItem { // : UGameItem
		constexpr auto TemplateName = 0x248; // FName
	}

	namespace n_AMaterialInstanceActor { // : AActor
		constexpr auto TargetActors = 0x3d0; // TArray<AActor*>
	}

	namespace n_USceneCaptureComponentCube { // : USceneCaptureComponent
		constexpr auto TextureTarget = 0x3e0; // UTextureRenderTargetCube*
	}

	namespace n_UFontFace { // : UObject
		constexpr auto SourceFilename = 0x30; // FString
		constexpr auto Hinting = 0x40; // EFontHinting
		constexpr auto LoadingPolicy = 0x41; // EFontLoadingPolicy
	}

	namespace n_UBodySetup2D { // : UBodySetup
		constexpr auto AggGeom2D = 0x398; // FAggregateGeometry2D
	}

	namespace n_UChestInventoryView { // : UExternalInventoryView
		constexpr auto CanItemBeDropedOn = 0x318; // bool
		constexpr auto SignalCouldNotDrop = 0x320; // FScriptMulticastDelegate
		constexpr auto DelegateGetTargetInventory = 0x330; // DelegateProperty
		constexpr auto m_Actor = 0x370; // AActor*
		constexpr auto m_Inventory = 0x378; // UItemInventory*
		constexpr auto m_TargetInventory = 0x380; // UItemInventory*
	}

	namespace n_USizeBoxSlot { // : UPanelSlot
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_AOnlineBeaconHostObject { // : AActor
		constexpr auto BeaconTypeName = 0x3d0; // FString
		constexpr auto ClientBeaconActorClass = 0x3e0; // AOnlineBeaconClient*
		constexpr auto ClientActors = 0x3e8; // TArray<AOnlineBeaconClient*>
	}

	namespace n_UGameEngine { // : UEngine
		constexpr auto MaxDeltaTime = 0xd98; // float
		constexpr auto ServerFlushLogInterval = 0xd9c; // float
		constexpr auto GameInstance = 0xda0; // UGameInstance*
	}

	namespace n_UInterpTrackColorScale { // : UInterpTrackVectorBase
		constexpr auto VectorTrack = 0x70; // FInterpCurveVector
		constexpr auto CurveTension = 0x88; // float
	}

	namespace n_UKeyBindingsKeyBase { // : URootWidget
		constexpr auto KeyNavOnSelectedEvent = 0x240; // FScriptMulticastDelegate
		constexpr auto KeyNavLeft = 0x250; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavRight = 0x258; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavAbove = 0x260; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavBelow = 0x268; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavTab = 0x270; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildLeft = 0x278; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildRight = 0x280; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildAbove = 0x288; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildBelow = 0x290; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildTab = 0x298; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildren = 0x2a0; // TWeakObjectPtr<URootWidget>
		constexpr auto TooltipWidgetClass = 0x2a8; // UTooltipWidget*
		constexpr auto KeyNavIndicatorClass = 0x2b0; // UKeyNavIndicator*
		constexpr auto PositiveFeedbackColor = 0x2b8; // FLinearColor
		constexpr auto NegativeFeedbackColor = 0x2c8; // FLinearColor
		constexpr auto NeutralFeedbackColor = 0x2d8; // FLinearColor
		constexpr auto KeyNavFocusOnClick = 0x2e8; // bool
		constexpr auto KeyNavAutoSetBack = 0x2e9; // bool
		constexpr auto m_Window = 0x2f0; // UWindowRoot*
		constexpr auto m_Parent = 0x2f8; // TWeakObjectPtr<URootWidget>
		constexpr auto m_KeyNavIndicator = 0x300; // UKeyNavIndicator*
	}

	namespace n_UDirectionalLightComponent { // : ULightComponent
		constexpr auto bEnableLightShaftOcclusion = 0x430; // char : 1
		constexpr auto OcclusionMaskDarkness = 0x434; // float
		constexpr auto OcclusionDepthRange = 0x438; // float
		constexpr auto LightShaftOverrideDirection = 0x43c; // FVector
		constexpr auto WholeSceneDynamicShadowRadius = 0x448; // float
		constexpr auto DynamicShadowDistanceMovableLight = 0x44c; // float
		constexpr auto DynamicShadowDistanceStationaryLight = 0x450; // float
		constexpr auto DynamicShadowCascades = 0x454; // int32_t
		constexpr auto CascadeDistributionExponent = 0x458; // float
		constexpr auto CascadeTransitionFraction = 0x45c; // float
		constexpr auto ShadowDistanceFadeoutFraction = 0x460; // float
		constexpr auto bUseInsetShadowsForMovableObjects = 0x464; // char : 1
		constexpr auto FarShadowCascadeCount = 0x468; // int32_t
		constexpr auto FarShadowDistance = 0x46c; // float
		constexpr auto DistanceFieldShadowDistance = 0x470; // float
		constexpr auto LightSourceAngle = 0x474; // float
		constexpr auto traceDistance = 0x478; // float
		constexpr auto LightmassSettings = 0x47c; // FLightmassDirectionalLightSettings
		constexpr auto bCastModulatedShadows = 0x48c; // char : 1
		constexpr auto ModulatedShadowColor = 0x490; // FColor
		constexpr auto bUsedAsAtmosphereSunLight = 0x494; // char : 1
	}

	namespace n_UInterpGroupInstDirector { // : UInterpGroupInst
		constexpr auto Group = 0x28; // UInterpGroup*
		constexpr auto GroupActor = 0x30; // AActor*
		constexpr auto TrackInst = 0x38; // TArray<UInterpTrackInst*>
	}

	namespace n_UCharacterTransferBase { // : UWindowRoot
		constexpr auto CBS_MapSelect = 0x398; // UFCComboBoxString*
		constexpr auto UnlocalizedMapNames = 0x3a0; // TArray<FString>
		constexpr auto DbTransfer = 0x3b0; // UDbTransfer*
		constexpr auto TimeoutTimer = 0x3b8; // FTimerHandle
	}

	namespace n_UStringEnumDataprovider { // : UObject
		constexpr auto m_TargetEnum = 0x28; // FName
	}

	namespace n_UInterpTrackAnimControl { // : UInterpTrackFloatBase
		constexpr auto SlotName = 0x90; // FName
		constexpr auto AnimSeqs = 0x98; // TArray<FAnimControlTrackKey>
		constexpr auto bSkipAnimNotifiers = 0xa8; // char : 1
	}

	namespace n_UBTDecorator_ConditionalLoop { // : UBTDecorator_Blackboard
		constexpr auto IntValue = 0x90; // int32_t
		constexpr auto FloatValue = 0x94; // float
		constexpr auto StringValue = 0x98; // FString
		constexpr auto CachedDescription = 0xa8; // FString
		constexpr auto OperationType = 0xb8; // char
		constexpr auto NotifyObserver = 0xb9; // EBTBlackboardRestart
	}

	namespace n_UMaterialParameterCollection { // : UObject
		constexpr auto StateId = 0x28; // FGuid
		constexpr auto ScalarParameters = 0x38; // TArray<FCollectionScalarParameter>
		constexpr auto VectorParameters = 0x48; // TArray<FCollectionVectorParameter>
	}

	namespace n_UPawnNoiseEmitterComponent { // : UActorComponent
		constexpr auto bAIPerceptionSystemCompatibilityMode = 0xf8; // char : 1
		constexpr auto LastRemoteNoisePosition = 0xfc; // FVector
		constexpr auto NoiseLifetime = 0x108; // float
		constexpr auto LastRemoteNoiseVolume = 0x10c; // float
		constexpr auto LastRemoteNoiseTime = 0x110; // float
		constexpr auto LastLocalNoiseVolume = 0x114; // float
		constexpr auto LastLocalNoiseTime = 0x118; // float
	}

	namespace n_AComboRulesLookup { // : AActor
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto CustomTimeDilation = 0x80; // float
		constexpr auto bHidden = 0x84; // char : 1
		constexpr auto bNetTemporary = 0x84; // char : 1
		constexpr auto bNetStartup = 0x84; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x84; // char : 1
		constexpr auto bAlwaysRelevant = 0x84; // char : 1
		constexpr auto bReplicateMovement = 0x84; // char : 1
		constexpr auto bTearOff = 0x84; // char : 1
		constexpr auto bExchangedRoles = 0x84; // char : 1
		constexpr auto bPendingNetUpdate = 0x85; // char : 1
		constexpr auto bNetLoadOnClient = 0x85; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x85; // char : 1
		constexpr auto bBlockInput = 0x85; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x85; // char : 1
		constexpr auto bActorEnableCollision = 0x86; // char : 1
		constexpr auto bReplicates = 0x86; // char : 1
		constexpr auto bLostRelevancy = 0x86; // char : 1
		constexpr auto NetDriverName = 0x88; // FName
		constexpr auto bCanBeInCluster = 0x90; // char : 1
		constexpr auto RemoteRole = 0x91; // ENetRole
		constexpr auto Owner = 0x98; // AActor*
		constexpr auto ReplicatedMovement = 0xa0; // FRepMovement
		constexpr auto AttachmentReplication = 0xd8; // FRepAttachment
		constexpr auto Role = 0x118; // ENetRole
		constexpr auto AutoReceiveInput = 0x11a; // EAutoReceiveInput
		constexpr auto InputPriority = 0x11c; // int32_t
		constexpr auto InputComponent = 0x120; // UInputComponent*
		constexpr auto InputConsumeOption = 0x128; // EInputConsumeOptions
		constexpr auto NetCullDistanceSquared = 0x12c; // float
		constexpr auto ViewTargetNetCullDistanceSquared = 0x130; // float
		constexpr auto NetTag = 0x134; // int32_t
		constexpr auto NetUpdateTime = 0x138; // float
		constexpr auto NetUpdateFrequency = 0x13c; // float
		constexpr auto MinNetUpdateFrequency = 0x140; // float
		constexpr auto NetPriority = 0x144; // float
		constexpr auto LastNetUpdateTime = 0x148; // float
		constexpr auto bAutoDestroyWhenFinished = 0x14c; // char : 1
		constexpr auto bCanBeDamaged = 0x14c; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x14c; // char : 1
		constexpr auto bCollideWhenPlacing = 0x14c; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x14c; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x14c; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x14c; // char : 1
		constexpr auto SpawnCollisionHandlingMethod = 0x14d; // ESpawnActorCollisionHandlingMethod
		constexpr auto Instigator = 0x158; // APawn*
		constexpr auto Children = 0x160; // TArray<AActor*>
		constexpr auto RootComponent = 0x170; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x178; // TArray<AMatineeActor*>
		constexpr auto InitialLifeSpan = 0x188; // float
		constexpr auto Layers = 0x198; // TArray<FName>
		constexpr auto ParentComponentActor = 0x1a8; // TWeakObjectPtr<AActor>
		constexpr auto ParentComponent = 0x1b0; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x1b8; // char : 1
		constexpr auto bUseExtendedRelevancyTimeout = 0x1b8; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x1b8; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x1b8; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x1b8; // char : 1
		constexpr auto Tags = 0x1c0; // TArray<FName>
		constexpr auto HiddenEditorViews = 0x1d0; // uint64_t
		constexpr auto OnTakeAnyDamage = 0x1d8; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x1e8; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x1f8; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x208; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x218; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x228; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x238; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x248; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x258; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x268; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x278; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x288; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x298; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x2a8; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x2b8; // FScriptMulticastDelegate
		constexpr auto BlueprintCreatedComponents = 0x3a8; // TArray<UActorComponent*>
		constexpr auto InstanceComponents = 0x3b8; // TArray<UActorComponent*>
	}

	namespace n_UAnimInstance { // : UObject
		constexpr auto DeltaTime = 0x28; // float
		constexpr auto CurrentSkeleton = 0x30; // USkeleton*
		constexpr auto RootMotionMode = 0x38; // ERootMotionMode
		constexpr auto bRunUpdatesInWorkerThreads = 0x39; // bool
		constexpr auto bCanUseParallelUpdateAnimation = 0x3a; // bool
		constexpr auto bUseMultiThreadedAnimationUpdate = 0x3b; // bool
		constexpr auto bWarnAboutBlueprintUsage = 0x3c; // bool
		constexpr auto OnMontageBlendingOut = 0x40; // FScriptMulticastDelegate
		constexpr auto OnMontageStarted = 0x50; // FScriptMulticastDelegate
		constexpr auto OnMontageEnded = 0x60; // FScriptMulticastDelegate
		constexpr auto OnAllMontageInstancesEnded = 0x70; // FScriptMulticastDelegate
		constexpr auto bQueueMontageEvents = 0xe0; // bool
		constexpr auto NotifyQueue = 0x110; // FAnimNotifyQueue
		constexpr auto ActiveAnimNotifyState = 0x180; // TArray<FAnimNotifyEvent>
	}

	namespace n_UAttributeSystem { // : UConanCharacterComponent
		constexpr auto BonusDamageMeleePercentagePerAttribute = 0x100; // float
		constexpr auto BonusArmorPerAttribute = 0x104; // float
		constexpr auto BonusHealthPercentagePerAttribute = 0x108; // float
		constexpr auto BonusDamageRangedPercentagePerAttribute = 0x10c; // float
		constexpr auto BonusStaminaPerAttribute = 0x110; // float
		constexpr auto BonusEncumbrancePerAttribute = 0x114; // float
	}

	namespace n_UW_NudityOption_C { // : URootWidget
		constexpr auto UberGraphFrame = 0x318; // FPointerToUberGraphFrame
		constexpr auto CBS_MaxNudity = 0x320; // UW_FCComboBoxString_C*
		constexpr auto MaximumNudityText = 0x328; // UTextBlock*
		constexpr auto SignalSelectionChanged = 0x330; // FScriptMulticastDelegate
		constexpr auto SignalScrollToMe = 0x340; // FScriptMulticastDelegate
		constexpr auto MaximumAlolwedNudity = 0x350; // ENudity
	}

	namespace n_UPathFollowingComponent { // : UActorComponent
		constexpr auto MovementComp = 0x220; // UNavMovementComponent*
		constexpr auto MyNavData = 0x230; // ANavigationData*
	}

	namespace n_UNavArea_LowHeight { // : UNavArea
		constexpr auto DefaultCost = 0x28; // float
		constexpr auto FixedAreaEnteringCost = 0x2c; // float
		constexpr auto DrawColor = 0x30; // FColor
		constexpr auto SupportedAgents = 0x34; // FNavAgentSelector
		constexpr auto bSupportsAgent0 = 0x38; // char : 1
		constexpr auto bSupportsAgent1 = 0x38; // char : 1
		constexpr auto bSupportsAgent2 = 0x38; // char : 1
		constexpr auto bSupportsAgent3 = 0x38; // char : 1
		constexpr auto bSupportsAgent4 = 0x38; // char : 1
		constexpr auto bSupportsAgent5 = 0x38; // char : 1
		constexpr auto bSupportsAgent6 = 0x38; // char : 1
		constexpr auto bSupportsAgent7 = 0x38; // char : 1
		constexpr auto bSupportsAgent8 = 0x38; // char : 1
		constexpr auto bSupportsAgent9 = 0x38; // char : 1
		constexpr auto bSupportsAgent10 = 0x38; // char : 1
		constexpr auto bSupportsAgent11 = 0x38; // char : 1
		constexpr auto bSupportsAgent12 = 0x38; // char : 1
		constexpr auto bSupportsAgent13 = 0x38; // char : 1
		constexpr auto bSupportsAgent14 = 0x38; // char : 1
		constexpr auto bSupportsAgent15 = 0x38; // char : 1
	}

	namespace n_UGameplayTask_ClaimResource { // : UGameplayTask
		constexpr auto InstanceName = 0x30; // FName
		constexpr auto ChildTask = 0x60; // UGameplayTask*
	}

	namespace n_UMaterialExpressionConstantBiasScale { // : UMaterialExpression
		constexpr auto Input = 0x60; // FExpressionInput
		constexpr auto Bias = 0x98; // float
		constexpr auto Scale = 0x9c; // float
	}

	namespace n_UEnvQueryTest_Random { // : UEnvQueryTest
		constexpr auto TestOrder = 0x30; // int32_t
		constexpr auto TestPurpose = 0x34; // EEnvTestPurpose
		constexpr auto TestComment = 0x38; // FString
		constexpr auto MultipleContextFilterOp = 0x48; // EEnvTestFilterOperator
		constexpr auto MultipleContextScoreOp = 0x49; // EEnvTestScoreOperator
		constexpr auto FilterType = 0x4a; // EEnvTestFilterType
		constexpr auto BoolValue = 0x50; // FAIDataProviderBoolValue
		constexpr auto FloatValueMin = 0x80; // FAIDataProviderFloatValue
		constexpr auto FloatValueMax = 0xb0; // FAIDataProviderFloatValue
		constexpr auto ScoringEquation = 0xe1; // EEnvTestScoreEquation
		constexpr auto ClampMinType = 0xe2; // EEnvQueryTestClamping
		constexpr auto ClampMaxType = 0xe3; // EEnvQueryTestClamping
		constexpr auto NormalizationType = 0xe4; // EEQSNormalizationType
		constexpr auto ScoreClampMin = 0xe8; // FAIDataProviderFloatValue
		constexpr auto ScoreClampMax = 0x118; // FAIDataProviderFloatValue
		constexpr auto ScoringFactor = 0x148; // FAIDataProviderFloatValue
		constexpr auto ReferenceValue = 0x178; // FAIDataProviderFloatValue
		constexpr auto bDefineReferenceValue = 0x1a8; // bool
		constexpr auto bWorkOnFloatValues = 0x1b8; // char : 1
	}

	namespace n_UWindDirectionalSourceComponent { // : USceneComponent
		constexpr auto Strength = 0x300; // float
		constexpr auto Speed = 0x304; // float
		constexpr auto MinGustAmount = 0x308; // float
		constexpr auto MaxGustAmount = 0x30c; // float
		constexpr auto Radius = 0x310; // float
		constexpr auto bPointWind = 0x314; // char : 1
	}

	namespace n_UEditableLabeledSlider { // : URootWidget
		constexpr auto Value = 0x318; // float
		constexpr auto MinValue = 0x31c; // float
		constexpr auto MaxValue = 0x320; // float
		constexpr auto SliderStepType = 0x324; // ESliderStepType
		constexpr auto StepValue = 0x328; // float
		constexpr auto MinFractionalDigits = 0x32c; // int32_t
		constexpr auto MaxFractionalDigits = 0x330; // int32_t
		constexpr auto DisplayValueScale = 0x334; // float
		constexpr auto SliderWidgetStyle = 0x338; // FSliderStyle
		constexpr auto TextWidgetStyle = 0x588; // FEditableTextBoxStyle
		constexpr auto HoveredSound = 0xdf8; // USoundBase*
		constexpr auto SignalSliderRealValueChanged = 0xe18; // FScriptMulticastDelegate
	}

	namespace n_UPlayerListGameEntry { // : URootWidget
		constexpr auto KeyNavOnSelectedEvent = 0x240; // FScriptMulticastDelegate
		constexpr auto KeyNavLeft = 0x250; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavRight = 0x258; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavAbove = 0x260; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavBelow = 0x268; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavTab = 0x270; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildLeft = 0x278; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildRight = 0x280; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildAbove = 0x288; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildBelow = 0x290; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildTab = 0x298; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildren = 0x2a0; // TWeakObjectPtr<URootWidget>
		constexpr auto TooltipWidgetClass = 0x2a8; // UTooltipWidget*
		constexpr auto KeyNavIndicatorClass = 0x2b0; // UKeyNavIndicator*
		constexpr auto PositiveFeedbackColor = 0x2b8; // FLinearColor
		constexpr auto NegativeFeedbackColor = 0x2c8; // FLinearColor
		constexpr auto NeutralFeedbackColor = 0x2d8; // FLinearColor
		constexpr auto KeyNavFocusOnClick = 0x2e8; // bool
		constexpr auto KeyNavAutoSetBack = 0x2e9; // bool
		constexpr auto m_Window = 0x2f0; // UWindowRoot*
		constexpr auto m_Parent = 0x2f8; // TWeakObjectPtr<URootWidget>
		constexpr auto m_KeyNavIndicator = 0x300; // UKeyNavIndicator*
	}

	namespace n_UW_LoadingProgress_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x240; // FPointerToUberGraphFrame
		constexpr auto ProgressBar_1 = 0x248; // UProgressBar*
		constexpr auto GameInstance = 0x250; // UConanGameInstance*
	}

	namespace n_UMaterialExpressionCeil { // : UMaterialExpression
		constexpr auto Input = 0x60; // FExpressionInput
	}

	namespace n_UMovieSceneNameableTrack { // : UMovieSceneTrack
		constexpr auto EvalOptions = 0xb0; // FMovieSceneTrackEvalOptions
	}

	namespace n_UMovieScene3DPathTrack { // : UMovieScene3DConstraintTrack
		constexpr auto ConstraintSections = 0xb8; // TArray<UMovieSceneSection*>
	}

	namespace n_UGameplayTagsList { // : UObject
		constexpr auto ConfigFileName = 0x28; // FString
		constexpr auto GameplayTagList = 0x38; // TArray<FGameplayTagTableRow>
	}

	namespace n_ULandscapeComponent { // : UPrimitiveComponent
		constexpr auto SectionBaseX = 0x6c0; // int32_t
		constexpr auto SectionBaseY = 0x6c4; // int32_t
		constexpr auto ComponentSizeQuads = 0x6c8; // int32_t
		constexpr auto SubsectionSizeQuads = 0x6cc; // int32_t
		constexpr auto NumSubsections = 0x6d0; // int32_t
		constexpr auto OverrideMaterial = 0x6d8; // UMaterialInterface*
		constexpr auto OverrideHoleMaterial = 0x6e0; // UMaterialInterface*
		constexpr auto MaterialInstances = 0x6e8; // TArray<UMaterialInstanceConstant*>
		constexpr auto WeightmapLayerAllocations = 0x6f8; // TArray<FWeightmapLayerAllocationInfo>
		constexpr auto WeightmapTextures = 0x708; // TArray<UTexture2D*>
		constexpr auto XYOffsetmapTexture = 0x718; // UTexture2D*
		constexpr auto WeightmapScaleBias = 0x720; // FVector4
		constexpr auto WeightmapSubsectionOffset = 0x730; // float
		constexpr auto HeightmapScaleBias = 0x740; // FVector4
		constexpr auto HeightmapTexture = 0x750; // UTexture2D*
		constexpr auto CachedLocalBox = 0x758; // FBox
		constexpr auto CollisionComponent = 0x774; // ULandscapeHeightfieldCollisionComponent*
		constexpr auto MapBuildDataId = 0x790; // FGuid
		constexpr auto IrrelevantLights = 0x7a0; // TArray<FGuid>
		constexpr auto CollisionMipLevel = 0x7b0; // int32_t
		constexpr auto SimpleCollisionMipLevel = 0x7b4; // int32_t
		constexpr auto NegativeZBoundsExtension = 0x7b8; // float
		constexpr auto PositiveZBoundsExtension = 0x7bc; // float
		constexpr auto StaticLightingResolution = 0x7c0; // float
		constexpr auto ForcedLOD = 0x7c4; // int32_t
		constexpr auto LODBias = 0x7c8; // int32_t
		constexpr auto StateId = 0x7cc; // FGuid
		constexpr auto BakedTextureMaterialGuid = 0x7dc; // FGuid
		constexpr auto GIBakedBaseColorTexture = 0x7f0; // UTexture2D*
		constexpr auto MobileBlendableLayerMask = 0x7f8; // char
		constexpr auto MobileMaterialInterface = 0x800; // UMaterialInterface*
		constexpr auto MobileWeightNormalmapTexture = 0x808; // UTexture2D*
	}

	namespace n_UW_FCComboBoxString_C { // : UFCComboBoxString
		constexpr auto ComboBox = 0x3d0; // UComboBoxString*
	}

	namespace n_APaperGroupedSpriteActor { // : AActor
		constexpr auto RenderComponent = 0x3d0; // UPaperGroupedSpriteComponent*
	}

	namespace n_UPhysicalMaterial { // : UObject
		constexpr auto Friction = 0x28; // float
		constexpr auto FrictionCombineMode = 0x2c; // EFrictionCombineMode
		constexpr auto bOverrideFrictionCombineMode = 0x2d; // bool
		constexpr auto Restitution = 0x30; // float
		constexpr auto RestitutionCombineMode = 0x34; // EFrictionCombineMode
		constexpr auto bOverrideRestitutionCombineMode = 0x35; // bool
		constexpr auto Density = 0x38; // float
		constexpr auto RaiseMassToPower = 0x3c; // float
		constexpr auto DestructibleDamageThresholdScale = 0x40; // float
		constexpr auto PhysicalMaterialProperty = 0x48; // UPhysicalMaterialPropertyBase*
		constexpr auto SurfaceType = 0x50; // EPhysicalSurface
		constexpr auto GatherMaterialTypeID = 0x54; // int32_t
		constexpr auto SoundEmitterType = 0x58; // int32_t
		constexpr auto CanBeClimbed = 0x5c; // bool
		constexpr auto ClimbingStaminaCostMultiplier = 0x60; // float
		constexpr auto DamageToClimbingPlayer = 0x64; // float
		constexpr auto DamageToTouchingCharacter = 0x68; // float
		constexpr auto TireFrictionScale = 0x6c; // float
		constexpr auto TireFrictionScales = 0x70; // TArray<FTireFrictionScalePair>
	}

	namespace n_UComboBoxWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto ComboBoxStyle = 0x30; // FComboBoxStyle
	}

	namespace n_UCompositionGraphCaptureSettings { // : UMovieSceneCaptureProtocolSettings
		constexpr auto IncludeRenderPasses = 0x28; // FCompositionGraphCapturePasses
		constexpr auto bCaptureFramesInHDR = 0x38; // bool
		constexpr auto HDRCompressionQuality = 0x3c; // int32_t
		constexpr auto CaptureGamut = 0x40; // EHDRCaptureGamut
		constexpr auto PostProcessingMaterial = 0x48; // FStringAssetReference
	}

	namespace n_UNavArea { // : UObject
		constexpr auto DefaultCost = 0x28; // float
		constexpr auto FixedAreaEnteringCost = 0x2c; // float
		constexpr auto DrawColor = 0x30; // FColor
		constexpr auto SupportedAgents = 0x34; // FNavAgentSelector
		constexpr auto bSupportsAgent0 = 0x38; // char : 1
		constexpr auto bSupportsAgent1 = 0x38; // char : 1
		constexpr auto bSupportsAgent2 = 0x38; // char : 1
		constexpr auto bSupportsAgent3 = 0x38; // char : 1
		constexpr auto bSupportsAgent4 = 0x38; // char : 1
		constexpr auto bSupportsAgent5 = 0x38; // char : 1
		constexpr auto bSupportsAgent6 = 0x38; // char : 1
		constexpr auto bSupportsAgent7 = 0x38; // char : 1
		constexpr auto bSupportsAgent8 = 0x38; // char : 1
		constexpr auto bSupportsAgent9 = 0x38; // char : 1
		constexpr auto bSupportsAgent10 = 0x38; // char : 1
		constexpr auto bSupportsAgent11 = 0x38; // char : 1
		constexpr auto bSupportsAgent12 = 0x38; // char : 1
		constexpr auto bSupportsAgent13 = 0x38; // char : 1
		constexpr auto bSupportsAgent14 = 0x38; // char : 1
		constexpr auto bSupportsAgent15 = 0x38; // char : 1
	}

	namespace n_UDismantlerInventory { // : UItemInventory
		constexpr auto SignalItemsRequestedFromClient = 0x170; // FScriptMulticastDelegate
		constexpr auto SignalInventoryRecivedOnClient = 0x180; // FScriptMulticastDelegate
		constexpr auto SignalItemAdded = 0x190; // FScriptMulticastDelegate
		constexpr auto SignalItemRemoved = 0x1a0; // FScriptMulticastDelegate
		constexpr auto SignalItemIntStatChanged = 0x1b0; // FScriptMulticastDelegate
		constexpr auto SignalItemFloatStatChanged = 0x1c0; // FScriptMulticastDelegate
		constexpr auto DelegateCanBeDropped = 0x1d0; // DelegateProperty
		constexpr auto SignalCannotMoveItem = 0x1e0; // FScriptMulticastDelegate
		constexpr auto ItemList = 0x1f0; // TArray<UGameItem*>
		constexpr auto bReplicatesToEveryone = 0x200; // bool
		constexpr auto inventoryType = 0x201; // EInventoryType
		constexpr auto MaxItemCount = 0x204; // int32_t
		constexpr auto PerishModifier = 0x208; // float
		constexpr auto ItemPerishModifiers = 0x210; // TMap<int32_t, float>
		constexpr auto UseWhiteList = 0x260; // bool
		constexpr auto BlackWhiteList = 0x268; // TArray<int32_t>
		constexpr auto LootContainerClass = 0x2c8; // ALootContainer*
		constexpr auto m_ConfigCategoryName = 0x2d0; // FString
	}

	namespace n_UTwitchAuthBase { // : UWindowRoot
		constexpr auto MainCanvasPanel = 0x398; // UCanvasPanel*
		constexpr auto InGameAuthBox = 0x3a0; // USizeBox*
		constexpr auto BarBox = 0x3a8; // UVerticalBox*
		constexpr auto TokenAuthBox = 0x3b0; // UVerticalBox*
		constexpr auto DisconnectBox = 0x3b8; // USizeBox*
		constexpr auto B_CopyWebpage = 0x3c0; // UFCButton*
		constexpr auto B_CopyDisconnectWebpage = 0x3c8; // UFCButton*
		constexpr auto B_AuthAuto = 0x3d0; // UFCButton*
		constexpr auto B_AuthToken = 0x3d8; // UFCButton*
		constexpr auto B_Disconnect = 0x3e0; // UFCButton*
		constexpr auto B_Cancel = 0x3e8; // UFCButton*
		constexpr auto T_LinkingWebpageText = 0x3f0; // UFCRichTextBlock*
		constexpr auto T_Token = 0x3f8; // UFCEditableTextBox*
		constexpr auto T_DisconnectWebpageText = 0x400; // UFCRichTextBlock*
		constexpr auto T_UpperText = 0x408; // UTextBlock*
		constexpr auto T_LowerText = 0x410; // UTextBlock*
	}

	namespace n_UBP_ConanGameInstance_C { // : UConanGameInstance
		constexpr auto UberGraphFrame = 0xdd0; // FPointerToUberGraphFrame
		constexpr auto SignalStreamingFinished = 0xdd8; // FScriptMulticastDelegate
		constexpr auto LoadingProgress = 0xde8; // FTimerHandle
		constexpr auto Timeout = 0xdf0; // float
		constexpr auto Message_Disconnecting = 0xdf8; // UMessageBoxWidget*
		constexpr auto JoiningSession = 0xe00; // FBlueprintSessionResult
		constexpr auto JoiningPlayerController = 0xee8; // APlayerController*
		constexpr auto NoConnectionError = 0xef0; // bool
	}

	namespace n_UParticleModule { // : UObject
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x28; // char : 1
		constexpr auto LODDuplicate = 0x28; // char : 1
		constexpr auto bSupportsRandomSeed = 0x28; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x28; // char : 1
		constexpr auto LODValidity = 0x2c; // char
	}

	namespace n_USoundCue { // : USoundBase
		constexpr auto bOverrideAttenuation = 0x90; // char : 1
		constexpr auto FirstNode = 0x98; // USoundNode*
		constexpr auto VolumeMultiplier = 0xa0; // float
		constexpr auto PitchMultiplier = 0xa4; // float
		constexpr auto AttenuationOverrides = 0xa8; // FSoundAttenuationSettings
	}

	namespace n_UW_DiscoveryFIFOMessageView_C { // : UFIFOMessageView
		constexpr auto UberGraphFrame = 0x358; // FPointerToUberGraphFrame
		constexpr auto FadeInOut = 0x360; // UWidgetAnimation*
		constexpr auto ASSIGNED_IN_CODE__fifo_blood_3 = 0x368; // UImage*
		constexpr auto ASSIGNED_IN_CODE__fifo_blood_4 = 0x370; // UImage*
		constexpr auto Header = 0x378; // UTextBlock*
		constexpr auto Text = 0x380; // UMultiLineEditableTextBox*
	}

	namespace n_AConanGameMode { // : ADWGameMode
		constexpr auto SpawnTableSystem = 0x660; // USpawnTableComponent*
		constexpr auto m_DatabaseOK = 0x668; // bool
		constexpr auto RunInsideCollisionCheckOnLoad = 0x669; // bool
		constexpr auto PurgeVolumeClass = 0x670; // APurgeVolume*
		constexpr auto SharedDebugInfoClass = 0x678; // ASharedDebugInfo*
		constexpr auto ConanProjectileRegistry = 0x6c0; // UConanProjectileRegistry*
		constexpr auto CountryBlackList = 0x6e8; // TArray<FString>
		constexpr auto BlockVPNConnections = 0x6f8; // bool
		constexpr auto MaxPeriodicBackupsToKeep = 0x6fc; // uint32_t
		constexpr auto PeriodicBackupInterval = 0x700; // float
		constexpr auto MaxUpgradeBackupstoKeep = 0x704; // int32_t
		constexpr auto m_ServerFrameRateReporter = 0x708; // UFrameRateReporter*
		constexpr auto CorpsesHarvestTimeLockSeconds = 0x8dc; // float
		constexpr auto m_TickServerPopulationTimer = 0x900; // FTimerHandle
		constexpr auto m_VerifyAttributesTimer = 0x908; // FTimerHandle
		constexpr auto m_GetServerRatingRetryTimer = 0x910; // FTimerHandle
		constexpr auto m_RatingServerConnection = 0x918; // URatingServerRequestConnection*
		constexpr auto m_GuildMemberCountReportTimer = 0x920; // FTimerHandle
		constexpr auto m_GuildThrallCountReportTimer = 0x928; // FTimerHandle
		constexpr auto m_AttributeDistributionReportTimer = 0x930; // FTimerHandle
		constexpr auto m_ServerMergeExportTimer = 0x938; // FTimerHandle
		constexpr auto m_BuildingsBeingRecorded = 0xa10; // TArray<ABuildingBase*>
		constexpr auto m_BuildingRecordingPieceTypesIdToClass = 0xa20; // TMap<int32_t, UObject*>
		constexpr auto m_BuildingRecordingPieceTypesClassToId = 0xa70; // TMap<UObject*, int32_t>
		constexpr auto m_BuildingsNeedingReplicationRebuild = 0xb68; // TSet<ABuildingBase*>
		constexpr auto m_LoadOfflineCharacterCallbacks = 0xbb8; // TMap<int64_t, ULoadCharacterCallProxy*>
		constexpr auto m_LoadOfflineInventoryCallbacks = 0xc08; // TMap<int64_t, ULoadInventoryCallProxy*>
		constexpr auto m_LoadOfflineInventoryActiveUIDs = 0xc58; // TArray<UUniqueID*>
		constexpr auto m_PlaceablesForValidation = 0xd08; // TSet<APlaceableBase*>
		constexpr auto m_PlaceablesForStabilityCheck = 0xd58; // TArray<APlaceableBase*>
		constexpr auto m_BuildingsForValidation = 0xd68; // TSet<ABuildingBase*>
		constexpr auto m_AllMasterBuildings = 0xe08; // TSet<ABuildingBase*>
		constexpr auto DbTransfer = 0xe58; // UDbTransfer*
	}

	namespace n_UMaterialExpressionSubtract { // : UMaterialExpression
		constexpr auto A = 0x60; // FExpressionInput
		constexpr auto B = 0x98; // FExpressionInput
		constexpr auto ConstA = 0xd0; // float
		constexpr auto ConstB = 0xd4; // float
	}

	namespace n_UWidgetTree { // : UObject
		constexpr auto RootWidget = 0x28; // UWidget*
		constexpr auto AllWidgets = 0x30; // TArray<UWidget*>
	}

	namespace n_UPlatformGameInstance { // : UGameInstance
		constexpr auto ApplicationWillDeactivateDelegate = 0xf8; // FScriptMulticastDelegate
		constexpr auto ApplicationHasReactivatedDelegate = 0x108; // FScriptMulticastDelegate
		constexpr auto ApplicationWillEnterBackgroundDelegate = 0x118; // FScriptMulticastDelegate
		constexpr auto ApplicationHasEnteredForegroundDelegate = 0x128; // FScriptMulticastDelegate
		constexpr auto ApplicationWillTerminateDelegate = 0x138; // FScriptMulticastDelegate
		constexpr auto ApplicationRegisteredForRemoteNotificationsDelegate = 0x148; // FScriptMulticastDelegate
		constexpr auto ApplicationRegisteredForUserNotificationsDelegate = 0x158; // FScriptMulticastDelegate
		constexpr auto ApplicationFailedToRegisterForRemoteNotificationsDelegate = 0x168; // FScriptMulticastDelegate
		constexpr auto ApplicationReceivedRemoteNotificationDelegate = 0x178; // FScriptMulticastDelegate
		constexpr auto ApplicationReceivedLocalNotificationDelegate = 0x188; // FScriptMulticastDelegate
		constexpr auto ApplicationReceivedScreenOrientationChangedNotificationDelegate = 0x198; // FScriptMulticastDelegate
	}

	namespace n_UMaterialExpressionArccosineFast { // : UMaterialExpression
		constexpr auto Input = 0x60; // FExpressionInput
	}

	namespace n_UPhysicsCollisionHandler { // : UObject
		constexpr auto ImpactThreshold = 0x28; // float
		constexpr auto ImpactReFireDelay = 0x2c; // float
		constexpr auto DefaultImpactSound = 0x30; // USoundBase*
		constexpr auto LastImpactSoundTime = 0x38; // float
	}

	namespace n_UNPCProgressionSystem { // : UConanCharacterComponent
		constexpr auto m_ExperiencePoints = 0x100; // int32_t
		constexpr auto m_RidingExperiencePerTick = 0x104; // int32_t
		constexpr auto m_MinimumDistanceRidden = 0x108; // int32_t
		constexpr auto m_XPCurveID = 0x110; // FName
		constexpr auto m_GrowthID = 0x118; // FName
		constexpr auto m_PerkType = 0x120; // FName
		constexpr auto m_OwnedPerks = 0x128; // TSet<FName>
		constexpr auto m_lastRegisteredPosition = 0x178; // FVector
		constexpr auto m_ProgressionInfo = 0x188; // FNPCGrowthContainer
	}

	namespace n_UFCSlider { // : URootWidget
		constexpr auto Value = 0x318; // float
		constexpr auto WidgetStyle = 0x320; // FSliderStyle
		constexpr auto Orientation = 0x570; // EOrientation
		constexpr auto SliderBarColor = 0x574; // FLinearColor
		constexpr auto SliderHandleColor = 0x584; // FLinearColor
		constexpr auto IndentHandle = 0x594; // bool
		constexpr auto Locked = 0x595; // bool
		constexpr auto StepSize = 0x598; // float
		constexpr auto OnValueChanged = 0x5a0; // FScriptMulticastDelegate
		constexpr auto HoveredSound = 0x5b0; // USoundBase*
	}

	namespace n_UBTDecorator_Cooldown { // : UBTDecorator
		constexpr auto CoolDownTime = 0x68; // float
	}

	namespace n_UEnvQueryGenerator_CurrentLocation { // : UEnvQueryGenerator
		constexpr auto QueryContext = 0x50; // UEnvQueryContext*
	}

	namespace n_ULevelSequence { // : UMovieSceneSequence
		constexpr auto MovieScene = 0x2d8; // UMovieScene*
		constexpr auto ObjectReferences = 0x2e0; // FLevelSequenceObjectReferenceMap
		constexpr auto PossessedObjects = 0x330; // TMap<FString, FLevelSequenceObject>
	}

	namespace n_USCS_Node { // : UObject
		constexpr auto ComponentClass = 0x28; // UObject*
		constexpr auto ComponentTemplate = 0x30; // UActorComponent*
		constexpr auto CookedComponentInstancingData = 0x38; // FBlueprintCookedComponentInstancingData
		constexpr auto VariableName = 0x88; // FName
		constexpr auto AttachToName = 0x90; // FName
		constexpr auto ParentComponentOrVariableName = 0x98; // FName
		constexpr auto ParentComponentOwnerClassName = 0xa0; // FName
		constexpr auto bIsParentComponentNative = 0xa8; // bool
		constexpr auto ChildNodes = 0xb0; // TArray<USCS_Node*>
		constexpr auto MetaDataArray = 0xc0; // TArray<FBPVariableMetaDataEntry>
		constexpr auto VariableGuid = 0xd0; // FGuid
		constexpr auto bIsFalseRoot = 0xe0; // bool
		constexpr auto bIsNative = 0xe1; // bool
		constexpr auto NativeComponentName = 0xe8; // FName
		constexpr auto bVariableNameAutoGenerated = 0xf0; // bool
		constexpr auto InternalVariableName = 0xf8; // FName
	}

	namespace n_UBlendSpace1D { // : UBlendSpaceBase
		constexpr auto bScaleAnimation = 0x140; // bool
	}

	namespace n_UMaterialExpressionComment { // : UMaterialExpression
		constexpr auto SizeX = 0x60; // int32_t
		constexpr auto SizeY = 0x64; // int32_t
		constexpr auto Text = 0x68; // FString
		constexpr auto CommentColor = 0x78; // FLinearColor
	}

	namespace n_UMaterialExpressionGetMaterialAttributes { // : UMaterialExpression
		constexpr auto MaterialAttributes = 0x60; // FMaterialAttributesInput
		constexpr auto AttributeGetTypes = 0xa0; // TArray<FGuid>
	}

	namespace n_UInventoryItemActionBar { // : URootWidget
		constexpr auto m_ButtonListLeft = 0x330; // TArray<UFCButton*>
		constexpr auto m_ButtonListRight = 0x340; // TArray<UFCButton*>
		constexpr auto m_ButtonListShortcutsLeft = 0x350; // TArray<EInventoryActionShortcuts>
		constexpr auto m_ButtonListShortcutsRight = 0x360; // TArray<EInventoryActionShortcuts>
		constexpr auto m_MoreButton = 0x370; // UFCButton*
	}

	namespace n_UFileMediaSource { // : UBaseMediaSource
		constexpr auto FilePath = 0x38; // FString
		constexpr auto PrecacheFile = 0x48; // bool
	}

	namespace n_UW_ServerList_C { // : UServerListBase
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto ASSIGNED_IN_CODE__I_CommunityBackground = 0x528; // UImage*
		constexpr auto B_Back = 0x530; // UW_ButtonNormal_C*
		constexpr auto B_ClearPing = 0x538; // UW_ButtonCustom_C*
		constexpr auto B_ClearServerSearch = 0x540; // UW_ButtonCustom_C*
		constexpr auto B_DConnectBack = 0x548; // UW_ButtonNormal_C*
		constexpr auto B_DConnectOk = 0x550; // UW_ButtonNormal_C*
		constexpr auto B_DirectConnect = 0x558; // UW_ButtonNormal_C*
		constexpr auto B_Level = 0x560; // UW_ButtonCustom_C*
		constexpr auto B_MainBack = 0x568; // UW_ButtonNormal_C*
		constexpr auto B_MainFavorite = 0x570; // UW_ButtonNormal_C*
		constexpr auto B_MainGPortal = 0x578; // UW_ButtonNormal_C*
		constexpr auto B_MainJoin = 0x580; // UW_ButtonNormal_C*
		constexpr auto B_MainRefresh = 0x588; // UW_ButtonNormal_C*
		constexpr auto B_MainUnfavorite = 0x590; // UW_ButtonNormal_C*
		constexpr auto B_ServerRating = 0x598; // UW_ButtonCustom_C*
		constexpr auto B_ServerSettings = 0x5a0; // UW_ButtonCustom_C*
		constexpr auto B_SkipToList = 0x5a8; // UW_ButtonNormal_C*
		constexpr auto B_SortOnAge = 0x5b0; // UW_ButtonCustom_C*
		constexpr auto B_SortOnBattleye = 0x5b8; // UW_ButtonCustom_C*
		constexpr auto B_SortOnMap = 0x5c0; // UW_ButtonCustom_C*
		constexpr auto B_SortOnName = 0x5c8; // UW_ButtonCustom_C*
		constexpr auto B_SortOnOfficial = 0x5d0; // UW_ButtonCustom_C*
		constexpr auto B_SortOnPing = 0x5d8; // UW_ButtonCustom_C*
		constexpr auto B_SortOnPlayers = 0x5e0; // UW_ButtonCustom_C*
		constexpr auto B_SortOnRegion = 0x5e8; // UW_ButtonCustom_C*
		constexpr auto B_SortOnType = 0x5f0; // UW_ButtonCustom_C*
		constexpr auto Brd_SelectBackground = 0x5f8; // UBorder*
		constexpr auto Brd_ServerList = 0x600; // UBorder*
		constexpr auto CB_FullServersFilter = 0x608; // UW_ButtonNormal_C*
		constexpr auto CB_ModsEnabledFilter = 0x610; // UW_ButtonNormal_C*
		constexpr auto CB_ModsVacEnabledFilter = 0x618; // UW_ButtonNormal_C*
		constexpr auto CB_NEVERAGAIN = 0x620; // UW_ButtonNormal_C*
		constexpr auto CB_ShowInvalidServersFilter = 0x628; // UW_ButtonNormal_C*
		constexpr auto CB_ShowPrivateServersFilter = 0x630; // UW_ButtonNormal_C*
		constexpr auto CBS_CombatTypeFilter = 0x638; // UW_FCComboBoxString_C*
		constexpr auto CBS_CommunityFilter = 0x640; // UW_FCComboBoxString_C*
		constexpr auto CBS_MapFilter = 0x648; // UW_FCComboBoxString_C*
		constexpr auto CBS_Population = 0x650; // UW_FCComboBoxString_C*
		constexpr auto CBS_RegionFilter = 0x658; // UW_FCComboBoxString_C*
		constexpr auto CBS_SteamFilter = 0x660; // UW_FCComboBoxString_C*
		constexpr auto GPortalLabel = 0x668; // UTextBlock*
		constexpr auto HB_MapFilter = 0x670; // UHorizontalBox*
		constexpr auto I_GPortalLogo = 0x678; // UImage*
		constexpr auto I_SortArrowAge = 0x680; // UImage*
		constexpr auto I_SortArrowBattleye = 0x688; // UImage*
		constexpr auto I_SortArrowLevel = 0x690; // UImage*
		constexpr auto I_SortArrowMap = 0x698; // UImage*
		constexpr auto I_SortArrowMode = 0x6a0; // UImage*
		constexpr auto I_SortArrowName = 0x6a8; // UImage*
		constexpr auto I_SortArrowOfficial = 0x6b0; // UImage*
		constexpr auto I_SortArrowPing = 0x6b8; // UImage*
		constexpr auto I_SortArrowPlayers = 0x6c0; // UImage*
		constexpr auto I_SortArrowRegion = 0x6c8; // UImage*
		constexpr auto Image_1 = 0x6d0; // UImage*
		constexpr auto Image_382 = 0x6d8; // UImage*
		constexpr auto Image_383 = 0x6e0; // UImage*
		constexpr auto InputT_NameSearchFilter = 0x6e8; // UW_FCEditableTextBlock_C*
		constexpr auto InputT_PingFilter = 0x6f0; // UW_FCEditableTextBlock_C*
		constexpr auto ListUpdateProgressView = 0x6f8; // UTextBlock*
		constexpr auto ServerList = 0x700; // UW_ServerListView_C*
		constexpr auto ServerListScrollBox = 0x708; // UScrollBox*
		constexpr auto ServerMods = 0x710; // UVerticalBox*
		constexpr auto ServerModsTrobber = 0x718; // UThrobber*
		constexpr auto ServerSettings = 0x720; // UVerticalBox*
		constexpr auto SteamOptions = 0x728; // UVerticalBox*
		constexpr auto T_DConnectIP = 0x730; // UW_FCEditableTextBlock_C*
		constexpr auto T_DConnectPassword = 0x738; // UW_FCEditableTextBlock_C*
		constexpr auto T_NonSteamMods = 0x740; // UTextBlock*
		constexpr auto T_SteamMods = 0x748; // UTextBlock*
		constexpr auto Throbber_SeacrhIndicator = 0x750; // UThrobber*
		constexpr auto VB_Mods = 0x758; // UVerticalBox*
		constexpr auto W_CombatModePicker = 0x760; // UW_PvPSelection_C*
		constexpr auto W_DirectConnect = 0x768; // UBorder*
		constexpr auto W_MainWindow = 0x770; // UBorder*
		constexpr auto ServerTypeOptions = 0x778; // TArray<FString>
		constexpr auto CombatTypeOptions = 0x788; // TArray<FString>
		constexpr auto CommunityOptions = 0x798; // TArray<FString>
		constexpr auto ConnectTimeOutHandle = 0x7a8; // FTimerHandle
		constexpr auto FindOffical = 0x7b0; // bool
		constexpr auto DeselectedColor = 0x7b4; // FLinearColor
		constexpr auto SelectedColor = 0x7c4; // FLinearColor
		constexpr auto JoiningSession = 0x7d8; // FBlueprintSessionResult
		constexpr auto ModDetailsRequest = 0x8c0; // UModDetailsRequest*
		constexpr auto ClientIsAmerican = 0x8c8; // bool
		constexpr auto LastSelection = 0x8cc; // int32_t
		constexpr auto ValidJoiningSession = 0x8d0; // bool
		constexpr auto ScrollOffset = 0x8d4; // float
		constexpr auto NextWidget = 0x8d8; // URootWidget*
		constexpr auto GPortalTransformDefault = 0x8e0; // FWidgetTransform
		constexpr auto GPortalTransformController = 0x8fc; // FWidgetTransform
		constexpr auto CombatTypeIndexes = 0x918; // TArray<EServerType>
	}

	namespace n_ALightmassCharacterIndirectDetailVolume { // : AVolume
		constexpr auto BrushType = 0x3d0; // EBrushType
		constexpr auto BrushColor = 0x3d4; // FColor
		constexpr auto PolyFlags = 0x3d8; // int32_t
		constexpr auto bColored = 0x3dc; // char : 1
		constexpr auto bSolidWhenSelected = 0x3dc; // char : 1
		constexpr auto bPlaceableFromClassBrowser = 0x3dc; // char : 1
		constexpr auto bNotForClientOrServer = 0x3dc; // char : 1
		constexpr auto Brush = 0x3e0; // UModel*
		constexpr auto BrushComponent = 0x3e8; // UBrushComponent*
		constexpr auto bInManipulation = 0x3f0; // char : 1
		constexpr auto SavedSelections = 0x3f8; // TArray<FGeomSelection>
	}

	namespace n_UBorder { // : UContentWidget
		constexpr auto ContentColorAndOpacity = 0x130; // FLinearColor
		constexpr auto ContentColorAndOpacityDelegate = 0x140; // DelegateProperty
		constexpr auto Padding = 0x150; // FMargin
		constexpr auto HorizontalAlignment = 0x160; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x161; // EVerticalAlignment
		constexpr auto Background = 0x168; // FSlateBrush
		constexpr auto BackgroundDelegate = 0x1f8; // DelegateProperty
		constexpr auto BrushColor = 0x208; // FLinearColor
		constexpr auto BrushColorDelegate = 0x218; // DelegateProperty
		constexpr auto DesiredSizeScale = 0x228; // FVector2D
		constexpr auto bShowEffectWhenDisabled = 0x230; // bool
		constexpr auto OnMouseButtonDownEvent = 0x238; // DelegateProperty
		constexpr auto OnMouseButtonUpEvent = 0x248; // DelegateProperty
		constexpr auto OnMouseMoveEvent = 0x258; // DelegateProperty
		constexpr auto OnMouseDoubleClickEvent = 0x268; // DelegateProperty
		constexpr auto Brush = 0x288; // USlateBrushAsset*
	}

	namespace n_UScrollBox { // : UPanelWidget
		constexpr auto WidgetStyle = 0x130; // FScrollBoxStyle
		constexpr auto WidgetBarStyle = 0x378; // FScrollBarStyle
		constexpr auto Style = 0x890; // USlateWidgetStyleAsset*
		constexpr auto BarStyle = 0x898; // USlateWidgetStyleAsset*
		constexpr auto Orientation = 0x8a0; // EOrientation
		constexpr auto ScrollBarVisibility = 0x8a1; // ESlateVisibility
		constexpr auto ConsumeMouseWheel = 0x8a2; // EConsumeMouseWheel
		constexpr auto ScrollbarThickness = 0x8a4; // FVector2D
		constexpr auto AlwaysShowScrollbar = 0x8ac; // bool
	}

	namespace n_UCameraModifier_CameraShake { // : UCameraModifier
		constexpr auto ActiveShakes = 0x48; // TArray<UCameraShake*>
		constexpr auto SplitScreenShakeScale = 0x58; // float
	}

	namespace n_UStatIntArray { // : UObject
		constexpr auto Key = 0x28; // FName
		constexpr auto Stats = 0x30; // TArray<FStatIntEntry>
	}

	namespace n_UCameraComponent { // : USceneComponent
		constexpr auto FieldOfView = 0x300; // float
		constexpr auto OrthoWidth = 0x304; // float
		constexpr auto OrthoNearClipPlane = 0x308; // float
		constexpr auto OrthoFarClipPlane = 0x30c; // float
		constexpr auto AspectRatio = 0x310; // float
		constexpr auto bConstrainAspectRatio = 0x314; // char : 1
		constexpr auto bUseFieldOfViewForLOD = 0x314; // char : 1
		constexpr auto bLockToHmd = 0x314; // char : 1
		constexpr auto bUsePawnControlRotation = 0x314; // char : 1
		constexpr auto ProjectionMode = 0x318; // ECameraProjectionMode
		constexpr auto PostProcessBlendWeight = 0x31c; // float
		constexpr auto PostProcessSettings = 0x320; // FPostProcessSettings
		constexpr auto bUseControllerViewRotation = 0x848; // char : 1
	}

	namespace n_ANavigationObjectBase { // : AActor
		constexpr auto CapsuleComponent = 0x3d8; // UCapsuleComponent*
		constexpr auto GoodSprite = 0x3e0; // UBillboardComponent*
		constexpr auto BadSprite = 0x3e8; // UBillboardComponent*
		constexpr auto bIsPIEPlayerStart = 0x3f0; // char : 1
	}

	namespace n_UMaterialExpressionReflectionVectorWS { // : UMaterialExpression
		constexpr auto CustomWorldNormal = 0x60; // FExpressionInput
		constexpr auto bNormalizeCustomWorldNormal = 0x98; // char : 1
	}

	namespace n_UGameplayTaskResource { // : UObject
		constexpr auto ManualResourceID = 0x28; // int32_t
		constexpr auto AutoResourceID = 0x2c; // uint8_t
		constexpr auto bManuallySetID = 0x30; // char : 1
	}

	namespace n_ARecastNavMesh { // : ANavigationData
		constexpr auto bDrawTriangleEdges = 0x570; // char : 1
		constexpr auto bDrawPolyEdges = 0x570; // char : 1
		constexpr auto bDrawFilledPolys = 0x570; // char : 1
		constexpr auto bDrawNavMeshEdges = 0x570; // char : 1
		constexpr auto bDrawTileBounds = 0x570; // char : 1
		constexpr auto bDrawPathCollidingGeometry = 0x570; // char : 1
		constexpr auto bDrawTileLabels = 0x570; // char : 1
		constexpr auto bDrawPolygonLabels = 0x570; // char : 1
		constexpr auto bDrawDefaultPolygonCost = 0x570; // char : 1
		constexpr auto bDrawLabelsOnPathNodes = 0x570; // char : 1
		constexpr auto bDrawNavLinks = 0x570; // char : 1
		constexpr auto bDrawFailedNavLinks = 0x570; // char : 1
		constexpr auto bDrawClusters = 0x570; // char : 1
		constexpr auto bDrawOctree = 0x570; // char : 1
		constexpr auto bDistinctlyDrawTilesBeingBuilt = 0x570; // char : 1
		constexpr auto bDrawNavMesh = 0x570; // char : 1
		constexpr auto DrawOffset = 0x574; // float
		constexpr auto bFixedTilePoolSize = 0x578; // char : 1
		constexpr auto TilePoolSize = 0x57c; // int32_t
		constexpr auto TileSizeUU = 0x580; // float
		constexpr auto CellSize = 0x584; // float
		constexpr auto CellHeight = 0x588; // float
		constexpr auto AgentRadius = 0x58c; // float
		constexpr auto AgentHeight = 0x590; // float
		constexpr auto AgentMaxHeight = 0x594; // float
		constexpr auto AgentMaxSlope = 0x598; // float
		constexpr auto AgentMaxStepHeight = 0x59c; // float
		constexpr auto MinRegionArea = 0x5a0; // float
		constexpr auto MergeRegionSize = 0x5a4; // float
		constexpr auto MaxSimplificationError = 0x5a8; // float
		constexpr auto MaxSimultaneousTileGenerationJobsCount = 0x5ac; // int32_t
		constexpr auto TileNumberHardLimit = 0x5b0; // int32_t
		constexpr auto PolyRefTileBits = 0x5b4; // int32_t
		constexpr auto PolyRefNavPolyBits = 0x5b8; // int32_t
		constexpr auto PolyRefSaltBits = 0x5bc; // int32_t
		constexpr auto DefaultDrawDistance = 0x5c0; // float
		constexpr auto DefaultMaxSearchNodes = 0x5c4; // float
		constexpr auto DefaultMaxHierarchicalSearchNodes = 0x5c8; // float
		constexpr auto RegionPartitioning = 0x5cc; // ERecastPartitioning
		constexpr auto LayerPartitioning = 0x5cd; // ERecastPartitioning
		constexpr auto RegionChunkSplits = 0x5d0; // int32_t
		constexpr auto LayerChunkSplits = 0x5d4; // int32_t
		constexpr auto bSortNavigationAreasByCost = 0x5d8; // char : 1
		constexpr auto bPerformVoxelFiltering = 0x5d8; // char : 1
		constexpr auto bMarkLowHeightAreas = 0x5d8; // char : 1
		constexpr auto bDoFullyAsyncNavDataGathering = 0x5d8; // char : 1
		constexpr auto bUseBetterOffsetsFromCorners = 0x5d8; // char : 1
		constexpr auto bStoreEmptyTileLayers = 0x5d8; // char : 1
		constexpr auto bUseVirtualFilters = 0x5d8; // char : 1
		constexpr auto bUseVoxelCache = 0x5d8; // char : 1
		constexpr auto TileSetUpdateInterval = 0x5dc; // float
		constexpr auto HeuristicScale = 0x5e0; // float
		constexpr auto VerticalDeviationFromGroundCompensation = 0x5e4; // float
	}

	namespace n_UMaterialExpressionWorldPosition { // : UMaterialExpression
		constexpr auto WorldPositionShaderOffset = 0x60; // EWorldPositionIncludedOffsets
	}

	namespace n_UCharHealthStaminaThirstHungerViewer { // : URootWidget
		constexpr auto EnableHungerAndThirst = 0x318; // bool
		constexpr auto EnableExperience = 0x319; // bool
		constexpr auto EnableHealth = 0x31a; // bool
		constexpr auto EnableStamina = 0x31b; // bool
		constexpr auto m_CharacterToInspect = 0x320; // AConanCharacter*
	}

	namespace n_UAssetMappingTable { // : UObject
		constexpr auto MappedAssets = 0x28; // TArray<FAssetMapping>
	}

	namespace n_ULandscapeSplineSegment { // : UObject
		constexpr auto Connections = 0x28; // FLandscapeSplineSegmentConnection [0x2]
		constexpr auto SplineInfo = 0x58; // FInterpCurveVector
		constexpr auto Points = 0x70; // TArray<FLandscapeSplineInterpPoint>
		constexpr auto Bounds = 0x80; // FBox
		constexpr auto LocalMeshComponents = 0xa0; // TArray<USplineMeshComponent*>
	}

	namespace n_UAnimNotifyState_TimedParticleEffect { // : UAnimNotifyState
		constexpr auto PSTemplate = 0x30; // UParticleSystem*
		constexpr auto SocketName = 0x38; // FName
		constexpr auto LocationOffset = 0x40; // FVector
		constexpr auto RotationOffset = 0x4c; // FRotator
		constexpr auto bDestroyAtEnd = 0x58; // bool
	}

	namespace n_UBTTask_BlackboardBase { // : UBTTaskNode
		constexpr auto BlackboardKey = 0x70; // FBlackboardKeySelector
	}

	namespace n_UW_TabButton_C { // : UTabButtonBase
		constexpr auto UberGraphFrame = 0xc28; // FPointerToUberGraphFrame
		constexpr auto CheckboxOverlay = 0xc30; // UNamedSlot*
		constexpr auto LabelView = 0xc38; // UTextBlock*
		constexpr auto Size = 0xc40; // USizeBox*
		constexpr auto SizeOverride = 0xc48; // FVector2D
	}

	namespace n_ARadialForceActor { // : ARigidBodyBase
		constexpr auto ForceComponent = 0x3d0; // URadialForceComponent*
	}

	namespace n_UDecalComponent { // : USceneComponent
		constexpr auto DecalMaterial = 0x300; // UMaterialInterface*
		constexpr auto SortOrder = 0x308; // int32_t
		constexpr auto FadeScreenSize = 0x30c; // float
		constexpr auto FadeStartDelay = 0x310; // float
		constexpr auto FadeDuration = 0x314; // float
		constexpr auto bDestroyOwnerAfterFade = 0x318; // char : 1
		constexpr auto DecalSize = 0x31c; // FVector
	}

	namespace n_UCharacterCreationBase { // : UWindowRoot
		constexpr auto CanRandomize = 0x398; // bool
	}

	namespace n_UParticleEmitter { // : UObject
		constexpr auto EmitterName = 0x28; // FName
		constexpr auto SubUVDataOffset = 0x30; // int32_t
		constexpr auto EmitterRenderMode = 0x34; // EEmitterRenderMode
		constexpr auto LODLevels = 0x38; // TArray<UParticleLODLevel*>
		constexpr auto ConvertedModules = 0x48; // char : 1
		constexpr auto PeakActiveParticles = 0x4c; // int32_t
		constexpr auto InitialAllocationCount = 0x50; // int32_t
		constexpr auto MediumDetailSpawnRateScale = 0x54; // float
		constexpr auto QualityLevelSpawnRateScale = 0x58; // float
		constexpr auto DetailMode = 0x5c; // EDetailMode
		constexpr auto bIsSoloing = 0x60; // char : 1
		constexpr auto bCookedOut = 0x60; // char : 1
		constexpr auto bDisabledLODsKeepEmitterAlive = 0x60; // char : 1
		constexpr auto bDisableWhenInsignficant = 0x60; // char : 1
		constexpr auto SignificanceLevel = 0x64; // EParticleSignificanceLevel
	}

	namespace n_UInputAxisDelegateBinding { // : UInputDelegateBinding
		constexpr auto InputAxisDelegateBindings = 0x28; // TArray<FBlueprintInputAxisDelegateBinding>
	}

	namespace n_ULocalPlayer { // : UPlayer
		constexpr auto ViewportClient = 0x58; // UGameViewportClient*
		constexpr auto AspectRatioAxisConstraint = 0x7c; // EAspectRatioAxisConstraint
		constexpr auto PendingLevelPlayerControllerClass = 0x80; // APlayerController*
		constexpr auto bSentSplitJoin = 0x88; // char : 1
	}

	namespace n_UGUIModule { // : UObject
		constexpr auto ModuleName = 0x28; // FName
		constexpr auto ToggleActionName = 0x30; // FName
		constexpr auto ToggleActionSound = 0x38; // FSlateSound
		constexpr auto bForceHideShortcutBar = 0x50; // bool
		constexpr auto CloseOnShortcutRelease = 0x51; // bool
		constexpr auto CloseOnESC = 0x52; // bool
		constexpr auto CloseOnEndPlay = 0x53; // bool
		constexpr auto PreloadOnStartup = 0x54; // bool
		constexpr auto NonBlockingLoad = 0x55; // bool
		constexpr auto IsPersistent = 0x56; // bool
		constexpr auto m_ShowWhenDead = 0x57; // bool
		constexpr auto MustBeBasePlayerChar = 0x58; // bool
		constexpr auto Category = 0x59; // EGUIModuleCategory
		constexpr auto WidgetClass = 0x60; // UClass*
		constexpr auto RootWidget = 0x80; // UWindowRoot*
		constexpr auto IsFullscreen = 0x88; // bool
		constexpr auto DisableShortcutWhenPlayerInputBlocked = 0x89; // bool
		constexpr auto TieToBasePlayerCharInput = 0x8a; // bool
		constexpr auto SignalActivated = 0x90; // FScriptMulticastDelegate
		constexpr auto OnActivate = 0xa0; // FScriptMulticastDelegate
		constexpr auto OnBeginLoad = 0xb0; // FScriptMulticastDelegate
		constexpr auto m_ModuleController = 0xc0; // UGUIModuleController*
	}

	namespace n_ANavigationGraph { // : ANavigationData
		constexpr auto RenderingComp = 0x3d0; // UPrimitiveComponent*
		constexpr auto NavDataConfig = 0x3d8; // FNavDataConfig
		constexpr auto bEnableDrawing = 0x428; // char : 1
		constexpr auto bForceRebuildOnLoad = 0x428; // char : 1
		constexpr auto bCanBeMainNavData = 0x428; // char : 1
		constexpr auto bCanSpawnOnRebuild = 0x428; // char : 1
		constexpr auto bRebuildAtRuntime = 0x428; // char : 1
		constexpr auto RuntimeGeneration = 0x42c; // ERuntimeGenerationType
		constexpr auto ObservedPathsTickInterval = 0x430; // float
		constexpr auto DataVersion = 0x434; // uint32_t
		constexpr auto SupportedAreas = 0x508; // TArray<FSupportedAreaData>
	}

	namespace n_AStaticSpawnPoint { // : AActor
		constexpr auto Root = 0x3d8; // USceneComponent*
		constexpr auto OwningSpawnerComponent = 0x3e0; // UNpcSpawnerComponent*
		constexpr auto OptionalAiLodComp = 0x3e8; // UAILODComponent*
	}

	namespace n_UTwitterIntegrationBase { // : UPlatformInterfaceBase
		constexpr auto AllDelegates = 0x28; // TArray<FDelegateArray>
	}

	namespace n_UFollowersEntryBase { // : UCharacterListEntryBase
		constexpr auto OnTrackToggled = 0x390; // FScriptMulticastDelegate
		constexpr auto TrackToolTipText = 0x3a8; // FText
		constexpr auto m_OnlineStatusIconOnline = 0x3c0; // UTexture2D*
		constexpr auto m_OnlineStatusIconOffline = 0x3c8; // UTexture2D*
		constexpr auto m_OfflineColor = 0x3d0; // FSlateColor
		constexpr auto m_FollowerName = 0x3f8; // UTextBlock*
		constexpr auto m_FollowerClass = 0x400; // UTextBlock*
		constexpr auto m_FollowerStatus = 0x408; // UTextBlock*
		constexpr auto m_FollowerLevel = 0x410; // UTextBlock*
		constexpr auto m_TrackFollower = 0x418; // UFCButton*
		constexpr auto m_RelevantStatusIcon = 0x420; // UImage*
	}

	namespace n_AWorldSettings { // : AInfo
		constexpr auto bEnableWorldBoundsChecks = 0x3d8; // char : 1
		constexpr auto bEnableNavigationSystem = 0x3d8; // char : 1
		constexpr auto bEnableAISystem = 0x3d8; // char : 1
		constexpr auto bEnableWorldComposition = 0x3d8; // char : 1
		constexpr auto bUseClientSideLevelStreamingVolumes = 0x3d8; // char : 1
		constexpr auto bEnableWorldOriginRebasing = 0x3d8; // char : 1
		constexpr auto bWorldGravitySet = 0x3d8; // char : 1
		constexpr auto bGlobalGravitySet = 0x3d8; // char : 1
		constexpr auto KillZ = 0x3dc; // float
		constexpr auto KillZDamageType = 0x3e0; // UDamageType*
		constexpr auto WorldGravityZ = 0x3e8; // float
		constexpr auto GlobalGravityZ = 0x3ec; // float
		constexpr auto DefaultPhysicsVolumeClass = 0x3f0; // ADefaultPhysicsVolume*
		constexpr auto PhysicsCollisionHandlerClass = 0x3f8; // UPhysicsCollisionHandler*
		constexpr auto DefaultGameMode = 0x400; // AGameModeBase*
		constexpr auto GameNetworkManagerClass = 0x408; // AGameNetworkManager*
		constexpr auto WorldCompositionClass = 0x410; // UWorldComposition*
		constexpr auto PackedLightAndShadowMapTextureSize = 0x418; // int32_t
		constexpr auto bMinimizeBSPSections = 0x41c; // char : 1
		constexpr auto DefaultColorScale = 0x420; // FVector
		constexpr auto DefaultMaxDistanceFieldOcclusionDistance = 0x42c; // float
		constexpr auto GlobalDistanceFieldViewDistance = 0x430; // float
		constexpr auto DynamicIndirectShadowsSelfShadowingIntensity = 0x434; // float
		constexpr auto bPrecomputeVisibility = 0x438; // char : 1
		constexpr auto bPlaceCellsOnlyAlongCameraTracks = 0x438; // char : 1
		constexpr auto VisibilityCellSize = 0x43c; // int32_t
		constexpr auto VisibilityAggressiveness = 0x440; // EVisibilityAggressiveness
		constexpr auto bForceNoPrecomputedLighting = 0x444; // char : 1
		constexpr auto LightmassSettings = 0x448; // FLightmassWorldInfoSettings
		constexpr auto DefaultReverbSettings = 0x490; // FReverbSettings
		constexpr auto DefaultAmbientZoneSettings = 0x4a8; // FInteriorSettings
		constexpr auto DefaultBaseSoundMix = 0x4d0; // USoundMix*
		constexpr auto WorldToMeters = 0x4d8; // float
		constexpr auto MonoCullingDistance = 0x4dc; // float
		constexpr auto BookMarks = 0x4e0; // UBookMark* [0xa]
		constexpr auto TimeDilation = 0x530; // float
		constexpr auto MatineeTimeDilation = 0x534; // float
		constexpr auto DemoPlayTimeDilation = 0x538; // float
		constexpr auto MinGlobalTimeDilation = 0x53c; // float
		constexpr auto MaxGlobalTimeDilation = 0x540; // float
		constexpr auto MinUndilatedFrameTime = 0x544; // float
		constexpr auto MaxUndilatedFrameTime = 0x548; // float
		constexpr auto Pauser = 0x550; // APlayerState*
		constexpr auto bHighPriorityLoading = 0x558; // char : 1
		constexpr auto bHighPriorityLoadingLocal = 0x558; // char : 1
		constexpr auto ReplicationViewers = 0x560; // TArray<FNetViewer>
		constexpr auto AssetUserData = 0x570; // TArray<UAssetUserData*>
	}

	namespace n_UCurveFloat { // : UCurveBase
		constexpr auto FloatCurve = 0x30; // FRichCurve
		constexpr auto bIsEventCurve = 0xa0; // bool
	}

	namespace n_UInterpTrackMoveAxis { // : UInterpTrackFloatBase
		constexpr auto MoveAxis = 0x90; // EInterpMoveAxis
		constexpr auto LookupTrack = 0x98; // FInterpLookupTrack
	}

	namespace n_UPetInventoryView { // : UExternalInventoryView
		constexpr auto CanItemBeDropedOn = 0x318; // bool
		constexpr auto SignalCouldNotDrop = 0x320; // FScriptMulticastDelegate
		constexpr auto DelegateGetTargetInventory = 0x330; // DelegateProperty
		constexpr auto m_Actor = 0x370; // AActor*
		constexpr auto m_Inventory = 0x378; // UItemInventory*
		constexpr auto m_TargetInventory = 0x380; // UItemInventory*
	}

	namespace n_UQuitMatchCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto onSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto onFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_UW_NavigatableVerticalBox_C { // : UNavigatableVerticalBox
		constexpr auto VerticalNavBox = 0x3a8; // UVerticalBox*
	}

	namespace n_UMaterialExpressionParticleSubUV { // : UMaterialExpressionTextureSample
		constexpr auto bBlend = 0x198; // char : 1
	}

	namespace n_ALandClaim { // : AActor
		constexpr auto CellSize = 0x3d0; // int32_t
		constexpr auto Cells = 0x3d8; // TMap<uint32_t, FLandClaimCellData>
		constexpr auto Channel = 0x428; // ClaimChannel
		constexpr auto RadiusCoefficient = 0x42c; // float
		constexpr auto ScaledCellSize = 0x430; // int32_t
		constexpr auto NoOwnership = 0x434; // bool
	}

	namespace n_AConanWorldSettings { // : AWorldSettings
		constexpr auto BuildingGridSize = 0x580; // int32_t
		constexpr auto FoliageGridSize = 0x584; // int32_t
		constexpr auto FoliagePhysicsRangeClient = 0x588; // float
		constexpr auto FoliagePhysicsRangeServer = 0x58c; // float
		constexpr auto AILODBoundary = 0x590; // float
		constexpr auto AILODMaxRaycastDistance = 0x594; // float
		constexpr auto BuildingStabilityDecrease = 0x598; // int32_t
		constexpr auto NetCullDistanceScaling = 0x59c; // float
		constexpr auto StaticNavigation = 0x5a0; // UStaticNavigation*
		constexpr auto SpawnDesertBounds = 0x5a8; // TArray<float>
		constexpr auto SpatialHashSystem = 0x5b8; // ASpatialHashSystem* [0x2]
		constexpr auto SpawnProbabilityBands = 0x5c8; // TArray<FSpawnProbabilityBand>
		constexpr auto SpawnProbabilityBandsListenServer = 0x5d8; // TArray<FSpawnProbabilityBand>
		constexpr auto m_NPCRegistry = 0x5e8; // ANPCRegistry*
		constexpr auto m_PurgeSystem = 0x5f0; // APurgeSystem*
		constexpr auto m_PlayerPawnRegistry = 0x5f8; // APlayerPawnRegistry*
		constexpr auto LandClaim = 0x600; // TArray<ALandClaim*>
		constexpr auto m_EnergyReceiverRegistry = 0x610; // AEnergyReceiverRegistry*
		constexpr auto SoundRegistry = 0x618; // ASoundRegistry*
		constexpr auto m_GlobalMarkerRegistry = 0x620; // AGlobalMarkerRegistry*
		constexpr auto m_PurgeConfigTable = 0x628; // UDataTable*
	}

	namespace n_USoundNodeSoundClass { // : USoundNode
		constexpr auto SoundClassOverride = 0x38; // USoundClass*
	}

	namespace n_USoundNodeDelay { // : USoundNode
		constexpr auto DelayMin = 0x38; // float
		constexpr auto DelayMax = 0x3c; // float
	}

	namespace n_UGuildInviteBase { // : UWindowRoot
		constexpr auto ListEntryClass = 0x3e0; // UUserWidget*
		constexpr auto m_GuildId = 0x410; // UUniqueID*
	}

	namespace n_UInterpTrackToggle { // : UInterpTrack
		constexpr auto ToggleTrack = 0x70; // TArray<FToggleTrackKey>
		constexpr auto bActivateSystemEachUpdate = 0x80; // char : 1
		constexpr auto bActivateWithJustAttachedFlag = 0x80; // char : 1
		constexpr auto bFireEventsWhenForwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenJumpingForwards = 0x80; // char : 1
	}

	namespace n_UFollowersViewBase { // : UWindowRoot
		constexpr auto m_FollowersBoard = 0x398; // UFollowersBoardBase*
		constexpr auto m_RefreshWindow = 0x3a0; // UFCButton*
		constexpr auto m_UntrackAll = 0x3a8; // UFCButton*
		constexpr auto m_BottomContainer = 0x3b0; // UWidget*
	}

	namespace n_UDWGameInstance { // : UGameInstance
		constexpr auto LocalPlayers = 0x38; // TArray<ULocalPlayer*>
		constexpr auto OnlineSession = 0x50; // UOnlineSession*
	}

	namespace n_UBTService { // : UBTAuxiliaryNode
		constexpr auto Interval = 0x60; // float
		constexpr auto RandomDeviation = 0x64; // float
		constexpr auto bCallTickOnSearchStart = 0x68; // char : 1
		constexpr auto bRestartTimerOnEachActivation = 0x68; // char : 1
	}

	namespace n_UAISense_Hearing { // : UAISense
		constexpr auto NoiseEvents = 0x120; // TArray<FAINoiseEvent>
		constexpr auto SpeedOfSoundSq = 0x130; // float
	}

	namespace n_UFunctionalTestingManager { // : UBlueprintFunctionLibrary
		constexpr auto TestsLeft = 0x28; // TArray<AFunctionalTest*>
		constexpr auto AllTests = 0x38; // TArray<AFunctionalTest*>
		constexpr auto OnSetupTests = 0x48; // FScriptMulticastDelegate
		constexpr auto OnTestsComplete = 0x58; // FScriptMulticastDelegate
		constexpr auto OnTestsBegin = 0x68; // FScriptMulticastDelegate
	}

	namespace n_UHudSettings { // : UObject
		constexpr auto bShowHUD = 0x28; // char : 1
		constexpr auto DebugDisplay = 0x30; // TArray<FName>
	}

	namespace n_UEnvQueryGenerator_OnCircle { // : UEnvQueryGenerator_ProjectedPoints
		constexpr auto CircleRadius = 0x80; // FAIDataProviderFloatValue
		constexpr auto SpaceBetween = 0xb0; // FAIDataProviderFloatValue
		constexpr auto NumberOfPoints = 0xe0; // FAIDataProviderIntValue
		constexpr auto PointOnCircleSpacingMethod = 0x110; // EPointOnCircleSpacingMethod
		constexpr auto ArcDirection = 0x118; // FEnvDirection
		constexpr auto ArcAngle = 0x138; // FAIDataProviderFloatValue
		constexpr auto AngleRadians = 0x168; // float
		constexpr auto CircleCenter = 0x170; // UEnvQueryContext*
		constexpr auto bIgnoreAnyContextActorsWhenGeneratingCircle = 0x178; // bool
		constexpr auto CircleCenterZOffset = 0x180; // FAIDataProviderFloatValue
		constexpr auto TraceData = 0x1b0; // FEnvTraceData
		constexpr auto bDefineArc = 0x1e0; // char : 1
	}

	namespace n_APurgeVolume { // : AActor
		constexpr auto PurgeEventConfigTable = 0x3e0; // UDataTable*
		constexpr auto PurgeActors = 0x3e8; // TArray<AConanCharacter*>
		constexpr auto PurgeBoss = 0x3f8; // AConanCharacter*
		constexpr auto PurgeCollision = 0x400; // TArray<UNavCollision*>
		constexpr auto NavigationQueryType = 0x410; // UNavigationQueryFilter*
		constexpr auto SpawnQueryType = 0x418; // UNavigationQueryFilter*
		constexpr auto CandidateList = 0x570; // TArray<ABuildingBase*>
		constexpr auto SelectedBase = 0x580; // ABuildingBase*
	}

	namespace n_UParticleModuleLightBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x28; // char : 1
		constexpr auto LODDuplicate = 0x28; // char : 1
		constexpr auto bSupportsRandomSeed = 0x28; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x28; // char : 1
		constexpr auto LODValidity = 0x2c; // char
	}

	namespace n_UMaterialExpressionParticleMotionBlurFade { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto Desc = 0x38; // FString
		constexpr auto BorderColor = 0x48; // FColor
		constexpr auto bRealtimePreview = 0x4c; // char : 1
		constexpr auto bNeedToUpdatePreview = 0x4c; // char : 1
		constexpr auto bIsParameterExpression = 0x4c; // char : 1
		constexpr auto bCommentBubbleVisible = 0x4c; // char : 1
		constexpr auto bShowOutputNameOnPin = 0x4c; // char : 1
		constexpr auto bHidePreviewWindow = 0x4c; // char : 1
		constexpr auto bCollapsed = 0x4c; // char : 1
		constexpr auto bShaderInputData = 0x4c; // char : 1
		constexpr auto bShowInputs = 0x4c; // char : 1
		constexpr auto bShowOutputs = 0x4c; // char : 1
		constexpr auto Outputs = 0x50; // TArray<FExpressionOutput>
	}

	namespace n_UTemplateIdTableAccessor { // : UTableAccessor
		constexpr auto table = 0x28; // UDataTable*
	}

	namespace n_UBehaviorTreeComponent { // : UBrainComponent
		constexpr auto NodeInstances = 0x178; // TArray<UBTNode*>
	}

	namespace n_UBTDecorator_BlueprintBase { // : UBTDecorator
		constexpr auto AIOwner = 0x68; // AAIController*
		constexpr auto ActorOwner = 0x70; // AActor*
		constexpr auto ObservedKeyNames = 0x78; // TArray<FName>
		constexpr auto bShowPropertyDetails = 0x98; // char : 1
		constexpr auto bCheckConditionOnlyBlackBoardChanges = 0x98; // char : 1
		constexpr auto bIsObservingBB = 0x98; // char : 1
	}

	namespace n_UNiagaraEffectRendererProperties { // : UObject
		constexpr auto Dummy = 0x28; // FName
	}

	namespace n_UProceduralFoliageTile { // : UObject
		constexpr auto FoliageSpawner = 0x28; // UProceduralFoliageSpawner*
		constexpr auto InstancesArray = 0xd0; // TArray<FProceduralFoliageInstance>
	}

	namespace n_UMapWithMarkerWidget { // : URootWidget
		constexpr auto MinimumZoom = 0x318; // int32_t
		constexpr auto ZoomSteps = 0x31c; // int32_t
		constexpr auto ZoomFactor = 0x320; // float
		constexpr auto MapMarkerView = 0x328; // UMapMarkerView*
		constexpr auto MapTexture = 0x330; // UTexture2D*
		constexpr auto MapMaskBitmap = 0x338; // UTexture2D*
		constexpr auto ThrallIcon = 0x340; // UTexture2D*
		constexpr auto IllegalPosTintColor = 0x348; // FLinearColor
		constexpr auto SignalMarkerIsHovered = 0x358; // FScriptMulticastDelegate
		constexpr auto GamepadCursorOffset = 0x38c; // FVector2D
		constexpr auto m_MapCoordinateValues = 0x394; // FMapCoordinatesAndSpans
		constexpr auto FrictionMultiplier = 0x3c4; // float
		constexpr auto m_HScrollBox = 0x3c8; // UScrollBox*
		constexpr auto m_VScrollBox = 0x3d0; // UScrollBox*
		constexpr auto m_Overlay = 0x3d8; // UOverlay*
		constexpr auto m_MasterOverlay = 0x3e0; // UOverlay*
		constexpr auto m_MapSizeBox = 0x3e8; // USizeBox*
		constexpr auto m_MapImage = 0x3f0; // UImage*
		constexpr auto m_GamepadCursor = 0x3f8; // UImage*
		constexpr auto m_Markers = 0x400; // TMap<int64_t, UMapMarkerView*>
		constexpr auto m_ThrallMarkers = 0x450; // TMap<int64_t, UMapMarkerView*>
		constexpr auto m_PlayerMarkerDialog = 0x4a0; // UPlayerMarkerDialog*
		constexpr auto m_DebugEnergyMapSizeBox = 0x4a8; // USizeBox*
		constexpr auto m_DebugEnergyMapImage = 0x4b0; // UImage*
		constexpr auto m_DebugImageTopLeft = 0x4b8; // FVector2D
		constexpr auto m_DebugImageBottomRight = 0x4c0; // FVector2D
		constexpr auto m_UpdatedDelegate = 0x5b0; // DelegateProperty
	}

	namespace n_UInventoryGridSlotViewBase { // : URootWidget
		constexpr auto BackgrundBrush = 0x318; // FSlateBrush
		constexpr auto BackgrundColor = 0x3a8; // FLinearColor
		constexpr auto IconSize = 0x3b8; // float
		constexpr auto IconPadding = 0x3bc; // FMargin
		constexpr auto IconSlotPadding = 0x3cc; // FMargin
		constexpr auto m_HideWhenEmpty = 0x3dc; // bool
		constexpr auto AnimationSelect = 0x3e0; // UWidgetAnimation*
		constexpr auto AnimationMouseOver = 0x3e8; // UWidgetAnimation*
		constexpr auto IconView = 0x3f0; // UInventoryIconViewBase*
		constexpr auto DropSound = 0x3f8; // USoundCue*
		constexpr auto HoveredSlateSound = 0x400; // FSlateSound
		constexpr auto m_IconSlot = 0x418; // UNamedSlot*
		constexpr auto m_SizeBox = 0x630; // USizeBox*
	}

	namespace n_UAIDataProvider_QueryParams { // : UAIDataProvider
		constexpr auto ParamName = 0x28; // FName
		constexpr auto FloatValue = 0x30; // float
		constexpr auto IntValue = 0x34; // int32_t
		constexpr auto BoolValue = 0x38; // bool
	}

	namespace n_UW_Settings_Audio_C { // : USettingsAudioBase
		constexpr auto CB_PushToTalk = 0x3b0; // UW_ButtonNormal_C*
		constexpr auto CB_ShowOtherVoiceIndicator = 0x3b8; // UW_ButtonNormal_C*
		constexpr auto CB_ShowOwnVoiceIndicator = 0x3c0; // UW_ButtonNormal_C*
		constexpr auto CB_SubtitlesEnabled = 0x3c8; // UW_ButtonNormal_C*
		constexpr auto S_MasterVolume = 0x3d0; // UW_EditableLabeledSlider_C*
		constexpr auto S_MusicVolume = 0x3d8; // UW_EditableLabeledSlider_C*
		constexpr auto S_SFXVolume = 0x3e0; // UW_EditableLabeledSlider_C*
		constexpr auto S_VoiceChatVolume = 0x3e8; // UW_EditableLabeledSlider_C*
		constexpr auto S_VoiceVolume = 0x3f0; // UW_EditableLabeledSlider_C*
	}

	namespace n_UPlayFabClientAPI { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnPlayFabResponse = 0x28; // FScriptMulticastDelegate
		constexpr auto CallAuthenticationContext = 0xa80; // UPlayFabAuthenticationContext*
		constexpr auto RequestJsonObj = 0xa88; // UPlayFabJsonObject*
		constexpr auto ResponseJsonObj = 0xa90; // UPlayFabJsonObject*
	}

	namespace n_UConsole { // : UObject
		constexpr auto ConsoleTargetPlayer = 0x38; // ULocalPlayer*
		constexpr auto DefaultTexture_Black = 0x40; // UTexture2D*
		constexpr auto DefaultTexture_White = 0x48; // UTexture2D*
		constexpr auto HistoryBuffer = 0x68; // TArray<FString>
	}

	namespace n_UW_FIFOMessageView_C { // : UFIFOMessageView
		constexpr auto UberGraphFrame = 0x358; // FPointerToUberGraphFrame
		constexpr auto FadeOut = 0x360; // UWidgetAnimation*
		constexpr auto FadeIn = 0x368; // UWidgetAnimation*
		constexpr auto textView = 0x370; // UTextBlock*
	}

	namespace n_UInterpTrackFloatBase { // : UInterpTrack
		constexpr auto FloatTrack = 0x70; // FInterpCurveFloat
		constexpr auto CurveTension = 0x88; // float
	}

	namespace n_UCableComponent { // : UMeshComponent
		constexpr auto bAttachStart = 0x7c8; // bool
		constexpr auto bAttachEnd = 0x7c9; // bool
		constexpr auto AttachEndTo = 0x7d0; // FComponentReference
		constexpr auto AttachEndToSocketName = 0x7e8; // FName
		constexpr auto EndLocation = 0x7f0; // FVector
		constexpr auto CableLength = 0x7fc; // float
		constexpr auto NumSegments = 0x800; // int32_t
		constexpr auto SubstepTime = 0x804; // float
		constexpr auto SolverIterations = 0x808; // int32_t
		constexpr auto bEnableStiffness = 0x80c; // bool
		constexpr auto bEnableCollision = 0x80d; // bool
		constexpr auto CollisionFriction = 0x810; // float
		constexpr auto CableForce = 0x814; // FVector
		constexpr auto CableGravityScale = 0x820; // float
		constexpr auto CableWidth = 0x824; // float
		constexpr auto NumSides = 0x828; // int32_t
		constexpr auto TileMaterial = 0x82c; // float
	}

	namespace n_UParticleSystem { // : UObject
		constexpr auto SystemUpdateMode = 0x28; // EParticleSystemUpdateMode
		constexpr auto UpdateTime_FPS = 0x2c; // float
		constexpr auto UpdateTime_Delta = 0x30; // float
		constexpr auto WarmupTime = 0x34; // float
		constexpr auto WarmupTickRate = 0x38; // float
		constexpr auto Emitters = 0x40; // TArray<UParticleEmitter*>
		constexpr auto PreviewComponent = 0x50; // UParticleSystemComponent*
		constexpr auto CurveEdSetup = 0x58; // UInterpCurveEdSetup*
		constexpr auto bOrientZAxisTowardCamera = 0x60; // char : 1
		constexpr auto LODDistanceCheckTime = 0x64; // float
		constexpr auto LODMethod = 0x68; // ParticleSystemLODMethod
		constexpr auto LODDistances = 0x70; // TArray<float>
		constexpr auto bRegenerateLODDuplicate = 0x80; // char : 1
		constexpr auto LODSettings = 0x88; // TArray<FParticleSystemLOD>
		constexpr auto bUseFixedRelativeBoundingBox = 0x98; // char : 1
		constexpr auto FixedRelativeBoundingBox = 0x9c; // FBox
		constexpr auto SecondsBeforeInactive = 0xb8; // float
		constexpr auto bShouldResetPeakCounts = 0xbc; // char : 1
		constexpr auto bHasPhysics = 0xbc; // char : 1
		constexpr auto bUseRealtimeThumbnail = 0xbc; // char : 1
		constexpr auto ThumbnailImageOutOfDate = 0xbc; // char : 1
		constexpr auto Delay = 0xc0; // float
		constexpr auto DelayLow = 0xc4; // float
		constexpr auto bUseDelayRange = 0xc8; // char : 1
		constexpr auto bAutoDeactivate = 0xcc; // bool
		constexpr auto MinTimeBetweenTicks = 0xd0; // uint32_t
		constexpr auto InsignificantReaction = 0xd4; // EParticleSystemInsignificanceReaction
		constexpr auto InsignificanceDelay = 0xd8; // float
		constexpr auto MaxSignificanceLevel = 0xdc; // EParticleSignificanceLevel
		constexpr auto MacroUVPosition = 0xe0; // FVector
		constexpr auto MacroUVRadius = 0xec; // float
		constexpr auto OcclusionBoundsMethod = 0xf0; // EParticleSystemOcclusionBoundsMethod
		constexpr auto CustomOcclusionBounds = 0xf4; // FBox
		constexpr auto SoloTracking = 0x110; // TArray<FLODSoloTrack>
		constexpr auto NamedMaterialSlots = 0x120; // TArray<FNamedEmitterMaterial>
	}

	namespace n_UAnimalPenInventoryView { // : URootWidget
		constexpr auto m_CraftingStation = 0x318; // APlaceableBase*
		constexpr auto m_CraftingQueue = 0x320; // UCraftingQueue*
		constexpr auto m_ArtisanThrallInventory = 0x328; // UItemInventory*
		constexpr auto m_Inventory = 0x380; // UItemInventory*
		constexpr auto m_PetInventory = 0x388; // UItemInventory*
		constexpr auto m_TargetInventory = 0x390; // UItemInventory*
	}

	namespace n_UParticleModuleVectorFieldScale { // : UParticleModuleVectorFieldBase
		constexpr auto VectorFieldScale = 0x30; // UDistributionFloat*
		constexpr auto VectorFieldScaleRaw = 0x38; // FRawDistributionFloat
	}

	namespace n_UParticleModuleRequired { // : UParticleModule
		constexpr auto Material = 0x30; // UMaterialInterface*
		constexpr auto EmitterOrigin = 0x38; // FVector
		constexpr auto EmitterRotation = 0x44; // FRotator
		constexpr auto ScreenAlignment = 0x50; // EParticleScreenAlignment
		constexpr auto MinFacingCameraBlendDistance = 0x54; // float
		constexpr auto MaxFacingCameraBlendDistance = 0x58; // float
		constexpr auto bUseLocalSpace = 0x5c; // char : 1
		constexpr auto bKillOnDeactivate = 0x5c; // char : 1
		constexpr auto bKillOnCompleted = 0x5c; // char : 1
		constexpr auto SortMode = 0x60; // EParticleSortMode
		constexpr auto bUseLegacyEmitterTime = 0x64; // char : 1
		constexpr auto bRemoveHMDRoll = 0x64; // char : 1
		constexpr auto EmitterDuration = 0x68; // float
		constexpr auto EmitterDurationLow = 0x6c; // float
		constexpr auto bEmitterDurationUseRange = 0x70; // char : 1
		constexpr auto bDurationRecalcEachLoop = 0x70; // char : 1
		constexpr auto EmitterLoops = 0x74; // int32_t
		constexpr auto SpawnRate = 0x78; // FRawDistributionFloat
		constexpr auto ParticleBurstMethod = 0xb0; // EParticleBurstMethod
		constexpr auto BurstList = 0xb8; // TArray<FParticleBurst>
		constexpr auto EmitterDelay = 0xc8; // float
		constexpr auto EmitterDelayLow = 0xcc; // float
		constexpr auto bEmitterDelayUseRange = 0xd0; // char : 1
		constexpr auto bDelayFirstLoopOnly = 0xd0; // char : 1
		constexpr auto InterpolationMethod = 0xd4; // EParticleSubUVInterpMethod
		constexpr auto SubImages_Horizontal = 0xd8; // int32_t
		constexpr auto SubImages_Vertical = 0xdc; // int32_t
		constexpr auto bScaleUV = 0xe0; // char : 1
		constexpr auto RandomImageTime = 0xe4; // float
		constexpr auto RandomImageChanges = 0xe8; // int32_t
		constexpr auto bOverrideSystemMacroUV = 0xec; // char : 1
		constexpr auto MacroUVPosition = 0xf0; // FVector
		constexpr auto MacroUVRadius = 0xfc; // float
		constexpr auto bUseMaxDrawCount = 0x100; // char : 1
		constexpr auto MaxDrawCount = 0x104; // int32_t
		constexpr auto UVFlippingMode = 0x108; // EParticleUVFlipMode
		constexpr auto CutoutTexture = 0x110; // UTexture2D*
		constexpr auto BoundingMode = 0x118; // ESubUVBoundingVertexCount
		constexpr auto OpacitySourceMode = 0x119; // EOpacitySourceMode
		constexpr auto AlphaThreshold = 0x11c; // float
		constexpr auto EmitterNormalsMode = 0x120; // EEmitterNormalsMode
		constexpr auto NormalsSphereCenter = 0x124; // FVector
		constexpr auto NormalsCylinderDirection = 0x130; // FVector
		constexpr auto bOrbitModuleAffectsVelocityAlignment = 0x13c; // char : 1
		constexpr auto NamedMaterialOverrides = 0x140; // TArray<FName>
	}

	namespace n_UMaterialExpressionLightmassReplace { // : UMaterialExpression
		constexpr auto realTime = 0x60; // FExpressionInput
		constexpr auto Lightmass = 0x98; // FExpressionInput
	}

	namespace n_UCreditsBase { // : UWindowRoot
		constexpr auto CloseOnClick = 0x318; // bool
		constexpr auto BlockPlayerInput = 0x319; // bool
		constexpr auto OpeningSlateSound = 0x320; // FSlateSound
		constexpr auto ClosingSlateSound = 0x338; // FSlateSound
		constexpr auto SignalClosing = 0x350; // FScriptMulticastDelegate
		constexpr auto SignalOpened = 0x360; // FScriptMulticastDelegate
		constexpr auto m_WindowHotkeys = 0x370; // TArray<FGamepadHotkeyHelp>
		constexpr auto m_InputComponent = 0x380; // UInputComponent*
		constexpr auto m_GUIModule = 0x388; // UGUIModule*
	}

	namespace n_UParticleModuleSpawnPerUnit { // : UParticleModuleSpawnBase
		constexpr auto UnitScalar = 0x38; // float
		constexpr auto SpawnPerUnit = 0x40; // FRawDistributionFloat
		constexpr auto bIgnoreSpawnRateWhenMoving = 0x78; // char : 1
		constexpr auto MovementTolerance = 0x7c; // float
		constexpr auto MaxFrameDistance = 0x80; // float
		constexpr auto bIgnoreMovementAlongX = 0x84; // char : 1
		constexpr auto bIgnoreMovementAlongY = 0x84; // char : 1
		constexpr auto bIgnoreMovementAlongZ = 0x84; // char : 1
	}

	namespace n_UMovieSceneLevelVisibilitySection { // : UMovieSceneSection
		constexpr auto Visibility = 0xc8; // ELevelVisibility
		constexpr auto LevelNames = 0xd0; // TArray<FName>
	}

	namespace n_USlateVectorArtData { // : UObject
		constexpr auto VertexData = 0x28; // TArray<FSlateMeshVertex>
		constexpr auto IndexData = 0x38; // TArray<uint32_t>
		constexpr auto Material = 0x48; // UMaterialInterface*
		constexpr auto ExtentMin = 0x50; // FVector2D
		constexpr auto ExtentMax = 0x58; // FVector2D
	}

	namespace n_UBlackboardKeyType_NativeEnum { // : UBlackboardKeyType
		constexpr auto EnumName = 0x30; // FString
		constexpr auto EnumType = 0x40; // UEnum*
	}

	namespace n_UStatFloatArray { // : UObject
		constexpr auto Key = 0x28; // FName
		constexpr auto Stats = 0x30; // TArray<FStatFloatEntry>
	}

	namespace n_UHoudiniHandleComponent { // : USceneComponent
		constexpr auto HandleType = 0x3b0; // EHoudiniHandleType
	}

	namespace n_ULeaderboardFlushCallbackProxy { // : UObject
		constexpr auto onSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto onFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_UMovieSceneByteTrack { // : UMovieScenePropertyTrack
		constexpr auto Enum = 0xe0; // UEnum*
	}

	namespace n_UPropertyBinding { // : UObject
		constexpr auto SourceObject = 0x28; // TWeakObjectPtr<UObject>
		constexpr auto SourcePath = 0x30; // FDynamicPropertyPath
		constexpr auto DestinationProperty = 0x40; // FName
	}

	namespace n_UAdminPanelNPCCheats { // : URootWidget
		constexpr auto DebugEntryClass = 0x318; // UDebugEntryNPC*
		constexpr auto m_ScrollBox = 0x320; // UScrollBox*
		constexpr auto m_VirtualizationBox = 0x328; // USizeBox*
		constexpr auto m_VirtualizationCanvas = 0x330; // UCanvasPanel*
		constexpr auto m_WidgetContainer = 0x338; // UNavigatableVerticalBox*
		constexpr auto m_WidgetList = 0x388; // TArray<UDebugEntryNPC*>
	}

	namespace n_UJoinSessionCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto onSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto onFailure = 0x38; // FScriptMulticastDelegate
		constexpr auto WorldContextObject = 0x188; // UObject*
	}

	namespace n_UHotkeyIconPlatforms_C { // : UHotkeyIconPlatforms
		constexpr auto Platforms = 0x28; // TArray<FHotkeyIconPlatform>
	}

	namespace n_UNamedInterfaces { // : UObject
		constexpr auto NamedInterfaces = 0x28; // TArray<FNamedInterface>
		constexpr auto NamedInterfaceDefs = 0x38; // TArray<FNamedInterfaceDef>
	}

	namespace n_UW_SubtitleEntryView_C { // : USubtitleEntryView
		constexpr auto UberGraphFrame = 0x328; // FPointerToUberGraphFrame
		constexpr auto textView = 0x330; // UTextBlock*
	}

	namespace n_UNavArea_Default { // : UNavArea
		constexpr auto DefaultCost = 0x28; // float
		constexpr auto FixedAreaEnteringCost = 0x2c; // float
		constexpr auto DrawColor = 0x30; // FColor
		constexpr auto SupportedAgents = 0x34; // FNavAgentSelector
		constexpr auto bSupportsAgent0 = 0x38; // char : 1
		constexpr auto bSupportsAgent1 = 0x38; // char : 1
		constexpr auto bSupportsAgent2 = 0x38; // char : 1
		constexpr auto bSupportsAgent3 = 0x38; // char : 1
		constexpr auto bSupportsAgent4 = 0x38; // char : 1
		constexpr auto bSupportsAgent5 = 0x38; // char : 1
		constexpr auto bSupportsAgent6 = 0x38; // char : 1
		constexpr auto bSupportsAgent7 = 0x38; // char : 1
		constexpr auto bSupportsAgent8 = 0x38; // char : 1
		constexpr auto bSupportsAgent9 = 0x38; // char : 1
		constexpr auto bSupportsAgent10 = 0x38; // char : 1
		constexpr auto bSupportsAgent11 = 0x38; // char : 1
		constexpr auto bSupportsAgent12 = 0x38; // char : 1
		constexpr auto bSupportsAgent13 = 0x38; // char : 1
		constexpr auto bSupportsAgent14 = 0x38; // char : 1
		constexpr auto bSupportsAgent15 = 0x38; // char : 1
	}

	namespace n_UConanWorldComposition { // : UWorldComposition
		constexpr auto TilesStreaming = 0x48; // TArray<ULevelStreaming*>
		constexpr auto TilesStreamingTimeThreshold = 0x58; // double
		constexpr auto bLoadAllTilesDuringCinematic = 0x60; // bool
		constexpr auto bRebaseOriginIn3DSpace = 0x61; // bool
		constexpr auto RebaseOriginDistance = 0x64; // float
	}

	namespace n_UPlayFabServerAPI { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnPlayFabResponse = 0x28; // FScriptMulticastDelegate
		constexpr auto CallAuthenticationContext = 0x8c0; // UPlayFabAuthenticationContext*
		constexpr auto RequestJsonObj = 0x8c8; // UPlayFabJsonObject*
		constexpr auto ResponseJsonObj = 0x8d0; // UPlayFabJsonObject*
	}

	namespace n_UW_PatchNotesView_C { // : UPatchNotesView
		constexpr auto MoreButton = 0x378; // UW_ButtonCustom_C*
	}

	namespace n_AMeshMergeCullingVolume { // : AVolume
		constexpr auto BrushType = 0x3d0; // EBrushType
		constexpr auto BrushColor = 0x3d4; // FColor
		constexpr auto PolyFlags = 0x3d8; // int32_t
		constexpr auto bColored = 0x3dc; // char : 1
		constexpr auto bSolidWhenSelected = 0x3dc; // char : 1
		constexpr auto bPlaceableFromClassBrowser = 0x3dc; // char : 1
		constexpr auto bNotForClientOrServer = 0x3dc; // char : 1
		constexpr auto Brush = 0x3e0; // UModel*
		constexpr auto BrushComponent = 0x3e8; // UBrushComponent*
		constexpr auto bInManipulation = 0x3f0; // char : 1
		constexpr auto SavedSelections = 0x3f8; // TArray<FGeomSelection>
	}

	namespace n_UPoseWatch { // : UObject
		constexpr auto Node = 0x28; // UEdGraphNode*
		constexpr auto PoseWatchColour = 0x30; // FColor
	}

	namespace n_UMaterialExpressionVertexColor { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto Desc = 0x38; // FString
		constexpr auto BorderColor = 0x48; // FColor
		constexpr auto bRealtimePreview = 0x4c; // char : 1
		constexpr auto bNeedToUpdatePreview = 0x4c; // char : 1
		constexpr auto bIsParameterExpression = 0x4c; // char : 1
		constexpr auto bCommentBubbleVisible = 0x4c; // char : 1
		constexpr auto bShowOutputNameOnPin = 0x4c; // char : 1
		constexpr auto bHidePreviewWindow = 0x4c; // char : 1
		constexpr auto bCollapsed = 0x4c; // char : 1
		constexpr auto bShaderInputData = 0x4c; // char : 1
		constexpr auto bShowInputs = 0x4c; // char : 1
		constexpr auto bShowOutputs = 0x4c; // char : 1
		constexpr auto Outputs = 0x50; // TArray<FExpressionOutput>
	}

	namespace n_UForceFeedbackAttenuation { // : UObject
		constexpr auto Attenuation = 0x28; // FForceFeedbackAttenuationSettings
	}

	namespace n_UMeshComponent { // : UPrimitiveComponent
		constexpr auto OverrideMaterials = 0x6c0; // TArray<UMaterialInterface*>
	}

	namespace n_UCurveLinearColor { // : UCurveBase
		constexpr auto FloatCurves = 0x30; // FRichCurve [0x4]
	}

	namespace n_ACableActor { // : AActor
		constexpr auto CableComponent = 0x3d0; // UCableComponent*
	}

	namespace n_UBTTask_Wait { // : UBTTaskNode
		constexpr auto WaitTime = 0x70; // float
		constexpr auto RandomDeviation = 0x74; // float
	}

	namespace n_UFCEditableTextBox { // : UFCEditableTextBase
		constexpr auto Text = 0x338; // FText
		constexpr auto RequiresCommunicationPrivileges = 0x350; // bool
		constexpr auto TextDelegate = 0x358; // DelegateProperty
		constexpr auto KeyboardTitle = 0x368; // FText
		constexpr auto KeyboardDescription = 0x380; // FText
		constexpr auto KeyboardLayout = 0x398; // EVirtualKeyboardLayout
		constexpr auto WidgetStyle = 0x3a0; // FEditableTextBoxStyle
		constexpr auto HintText = 0xc10; // FText
		constexpr auto HintTextDelegate = 0xc28; // DelegateProperty
		constexpr auto IsReadOnly = 0xc38; // bool
		constexpr auto IsPassword = 0xc39; // bool
		constexpr auto MinimumDesiredWidth = 0xc3c; // float
		constexpr auto TextMaxLength = 0xc40; // int32_t
		constexpr auto TextMaxSize = 0xc44; // float
		constexpr auto IsCaretMovedWhenGainFocus = 0xc48; // bool
		constexpr auto SelectAllTextWhenFocused = 0xc49; // bool
		constexpr auto RevertTextOnEscape = 0xc4a; // bool
		constexpr auto ClearKeyboardFocusOnCommit = 0xc4b; // bool
		constexpr auto SelectAllTextOnCommit = 0xc4c; // bool
		constexpr auto AllowContextMenu = 0xc4d; // bool
		constexpr auto ShapedTextOptions = 0xc50; // FShapedTextOptions
		constexpr auto PressedSound = 0xc58; // USoundBase*
		constexpr auto HoveredSound = 0xc78; // USoundBase*
		constexpr auto OnTextChanged = 0xc98; // FScriptMulticastDelegate
		constexpr auto OnTextCommitted = 0xca8; // FScriptMulticastDelegate
		constexpr auto OnMaxLengthExceeded = 0xcb8; // FScriptMulticastDelegate
		constexpr auto SignalActivated = 0xcc8; // FScriptMulticastDelegate
	}

	namespace n_UMainMenuBase { // : UWindowRoot
		constexpr auto m_MediaPlayer = 0x398; // UMediaPlayer*
		constexpr auto m_MediaSource = 0x3a0; // UMediaSource*
		constexpr auto m_MediaMaterial = 0x3a8; // UMaterialInterface*
		constexpr auto m_KeyNavWidgets = 0x3b0; // TArray<UWidget*>
		constexpr auto m_WidgetVisibilities = 0x3c0; // TArray<ESlateVisibility>
		constexpr auto TextureOldBackground = 0x3d0; // UTexture2D*
		constexpr auto TextureSiptahBackground = 0x3f0; // UTexture2D*
		constexpr auto TextureOldBackgroundOverlay = 0x410; // UTexture2D*
		constexpr auto TextureSiptahBackgroundOverlay = 0x430; // UTexture2D*
		constexpr auto m_CheckingPermissionsMessageBox = 0x458; // UMessageBoxWidget*
		constexpr auto RequestedCoopMapPath = 0x490; // FString
		constexpr auto m_WarningText = 0x530; // FText
		constexpr auto m_SignInInputComponent = 0x548; // UInputComponent*
		constexpr auto m_GUIModuleController = 0x550; // UGUIModuleController*
		constexpr auto m_InviteMessageBox = 0x558; // UMessageBoxWidget*
	}

	namespace n_URateServerBase { // : UWindowRoot
		constexpr auto m_ServerConnection = 0x400; // URatingServerRequestConnection*
		constexpr auto m_ErrorDialog = 0x408; // UMessageBoxWidget*
	}

	namespace n_UNavArea_Null { // : UNavArea
		constexpr auto DefaultCost = 0x28; // float
		constexpr auto FixedAreaEnteringCost = 0x2c; // float
		constexpr auto DrawColor = 0x30; // FColor
		constexpr auto SupportedAgents = 0x34; // FNavAgentSelector
		constexpr auto bSupportsAgent0 = 0x38; // char : 1
		constexpr auto bSupportsAgent1 = 0x38; // char : 1
		constexpr auto bSupportsAgent2 = 0x38; // char : 1
		constexpr auto bSupportsAgent3 = 0x38; // char : 1
		constexpr auto bSupportsAgent4 = 0x38; // char : 1
		constexpr auto bSupportsAgent5 = 0x38; // char : 1
		constexpr auto bSupportsAgent6 = 0x38; // char : 1
		constexpr auto bSupportsAgent7 = 0x38; // char : 1
		constexpr auto bSupportsAgent8 = 0x38; // char : 1
		constexpr auto bSupportsAgent9 = 0x38; // char : 1
		constexpr auto bSupportsAgent10 = 0x38; // char : 1
		constexpr auto bSupportsAgent11 = 0x38; // char : 1
		constexpr auto bSupportsAgent12 = 0x38; // char : 1
		constexpr auto bSupportsAgent13 = 0x38; // char : 1
		constexpr auto bSupportsAgent14 = 0x38; // char : 1
		constexpr auto bSupportsAgent15 = 0x38; // char : 1
	}

	namespace n_ATestBeaconHost { // : AOnlineBeaconHostObject
		constexpr auto BeaconTypeName = 0x3d0; // FString
		constexpr auto ClientBeaconActorClass = 0x3e0; // AOnlineBeaconClient*
		constexpr auto ClientActors = 0x3e8; // TArray<AOnlineBeaconClient*>
	}

	namespace n_UAIAsyncTaskBlueprintProxy { // : UObject
		constexpr auto onSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto OnFail = 0x38; // FScriptMulticastDelegate
	}

	namespace n_UTwitchPatchNotesEntryView { // : UPatchNotesEntryView
		constexpr auto TextColorDate = 0x318; // FLinearColor
		constexpr auto TextColorTitle = 0x328; // FLinearColor
		constexpr auto TextColorNote = 0x338; // FLinearColor
		constexpr auto AnimationSelected = 0x348; // UWidgetAnimation*
		constexpr auto AnimationDeselected = 0x350; // UWidgetAnimation*
	}

	namespace n_UInterpData { // : UObject
		constexpr auto InterpLength = 0x28; // float
		constexpr auto PathBuildTime = 0x2c; // float
		constexpr auto InterpGroups = 0x30; // TArray<UInterpGroup*>
		constexpr auto CurveEdSetup = 0x40; // UInterpCurveEdSetup*
		constexpr auto EdSectionStart = 0x48; // float
		constexpr auto EdSectionEnd = 0x4c; // float
		constexpr auto bShouldBakeAndPrune = 0x50; // char : 1
		constexpr auto CachedDirectorGroup = 0x58; // UInterpGroupDirector*
		constexpr auto AllEventNames = 0x60; // TArray<FName>
	}

	namespace n_UInventoryFilterSelector { // : URootWidget
		constexpr auto ShowEncumbrance = 0x318; // bool
		constexpr auto ShowDLCFilter = 0x319; // bool
		constexpr auto AllowedSortModes = 0x31c; // int32_t
		constexpr auto SignalFilterToggled = 0x320; // FScriptMulticastDelegate
		constexpr auto SignalSearchStringChanged = 0x330; // FScriptMulticastDelegate
		constexpr auto SignalSortTypeChanged = 0x340; // FScriptMulticastDelegate
		constexpr auto SignalDLCFilterChanged = 0x350; // FScriptMulticastDelegate
		constexpr auto SortButtonPressedSound = 0x360; // FSlateSound
		constexpr auto FilterButtonPressedSound = 0x378; // FSlateSound
		constexpr auto DLCFilterList = 0x390; // TArray<FDLCFilterEntry>
	}

	namespace n_UAISenseConfig_Blueprint { // : UAISenseConfig
		constexpr auto Implementation = 0x48; // UAISense_Blueprint*
	}

	namespace n_UFoliageInstancedStaticMeshComponent { // : UHierarchicalInstancedStaticMeshComponent
		constexpr auto DestructibleMesh = 0x9e0; // UDestructibleMesh*
		constexpr auto OnInstanceTakePointDamage = 0xa00; // FScriptMulticastDelegate
		constexpr auto OnInstanceTakeRadialDamage = 0xa10; // FScriptMulticastDelegate
		constexpr auto DestructibleMeshPtr = 0xa20; // UDestructibleMesh*
	}

	namespace n_UParticleModuleVectorFieldLocal { // : UParticleModuleVectorFieldBase
		constexpr auto VectorField = 0x30; // UVectorField*
		constexpr auto RelativeTranslation = 0x38; // FVector
		constexpr auto RelativeRotation = 0x44; // FRotator
		constexpr auto RelativeScale3D = 0x50; // FVector
		constexpr auto Intensity = 0x5c; // float
		constexpr auto Tightness = 0x60; // float
		constexpr auto bIgnoreComponentTransform = 0x64; // char : 1
		constexpr auto bTileX = 0x64; // char : 1
		constexpr auto bTileY = 0x64; // char : 1
		constexpr auto bTileZ = 0x64; // char : 1
		constexpr auto bUseFixDT = 0x64; // char : 1
	}

	namespace n_USoundNodeSwitch { // : USoundNode
		constexpr auto IntParameterName = 0x38; // FName
	}

	namespace n_UMultiLineEditableTextBox { // : UTextLayoutWidget
		constexpr auto Text = 0x148; // FText
		constexpr auto HintText = 0x160; // FText
		constexpr auto HintTextDelegate = 0x178; // DelegateProperty
		constexpr auto WidgetStyle = 0x188; // FEditableTextBoxStyle
		constexpr auto TextStyle = 0x9f8; // FTextBlockStyle
		constexpr auto AllowContextMenu = 0xc00; // bool
		constexpr auto Style = 0xc08; // USlateWidgetStyleAsset*
		constexpr auto Font = 0xc10; // FSlateFontInfo
		constexpr auto ForegroundColor = 0xc78; // FLinearColor
		constexpr auto BackgroundColor = 0xc88; // FLinearColor
		constexpr auto ReadOnlyForegroundColor = 0xc98; // FLinearColor
		constexpr auto OnTextChanged = 0xca8; // FScriptMulticastDelegate
		constexpr auto OnTextCommitted = 0xcb8; // FScriptMulticastDelegate
		constexpr auto IsReadOnly = 0xcc8; // bool
	}

	namespace n_UW_IngameLoadingScreen_C { // : UConanIngameLoadingScreen
		constexpr auto TextTemplate = 0x520; // UTextBlock*
	}

	namespace n_UBuildPatchManifest { // : UObject
		constexpr auto ManifestFileVersion = 0x28; // char
		constexpr auto bIsFileData = 0x29; // bool
		constexpr auto AppId = 0x2c; // uint32_t
		constexpr auto AppName = 0x30; // FString
		constexpr auto BuildVersion = 0x40; // FString
		constexpr auto LaunchExe = 0x50; // FString
		constexpr auto LaunchCommand = 0x60; // FString
		constexpr auto PrereqName = 0x70; // FString
		constexpr auto PrereqPath = 0x80; // FString
		constexpr auto PrereqArgs = 0x90; // FString
		constexpr auto FileManifestList = 0xa0; // TArray<FFileManifestData>
		constexpr auto ChunkList = 0xb0; // TArray<FChunkInfoData>
		constexpr auto CustomFields = 0xc0; // TArray<FCustomFieldData>
	}

	namespace n_UControlChannel { // : UChannel
		constexpr auto Connection = 0x28; // UNetConnection*
	}

	namespace n_UW_Settings_KeyBindings_C { // : USettingsKeyBindingsBase
		constexpr auto Commands = 0x3c8; // UW_KeyBindings_Commands_C*
		constexpr auto MappingsScrollBox = 0x3d0; // UScrollBox*
		constexpr auto VB_KeyBindingsList = 0x3d8; // UVerticalBox*
	}

	namespace n_UMaterialExpressionCosine { // : UMaterialExpression
		constexpr auto Input = 0x60; // FExpressionInput
		constexpr auto Period = 0x98; // float
	}

	namespace n_ATriggerSphere { // : ATriggerBase
		constexpr auto CollisionComponent = 0x3d0; // UShapeComponent*
		constexpr auto SpriteComponent = 0x3d8; // UBillboardComponent*
	}

	namespace n_UInterpTrackVectorProp { // : UInterpTrackVectorBase
		constexpr auto PropertyName = 0x90; // FName
	}

	namespace n_UMapBuildDataRegistry { // : UObject
		constexpr auto LevelLightingQuality = 0x28; // ELightingBuildQuality
	}

	namespace n_USoundNode { // : UObject
		constexpr auto ChildNodes = 0x28; // TArray<USoundNode*>
	}

	namespace n_ANavigationTestingActor { // : AActor
		constexpr auto CapsuleComponent = 0x3e0; // UCapsuleComponent*
		constexpr auto InvokerComponent = 0x3e8; // UNavigationInvokerComponent*
		constexpr auto bActAsNavigationInvoker = 0x3f0; // char : 1
		constexpr auto NavAgentProps = 0x3f8; // FNavAgentProperties
		constexpr auto QueryingExtent = 0x418; // FVector
		constexpr auto MyNavData = 0x428; // ANavigationData*
		constexpr auto ProjectedLocation = 0x430; // FVector
		constexpr auto bProjectedLocationValid = 0x43c; // char : 1
		constexpr auto bSearchStart = 0x43c; // char : 1
		constexpr auto bUseHierarchicalPathfinding = 0x43c; // char : 1
		constexpr auto bGatherDetailedInfo = 0x43c; // char : 1
		constexpr auto bDrawDistanceToWall = 0x43c; // char : 1
		constexpr auto bShowNodePool = 0x43c; // char : 1
		constexpr auto bShowBestPath = 0x43c; // char : 1
		constexpr auto bShowDiffWithPreviousStep = 0x43c; // char : 1
		constexpr auto bShouldBeVisibleInGame = 0x43c; // char : 1
		constexpr auto CostDisplayMode = 0x440; // ENavCostDisplay
		constexpr auto TextCanvasOffset = 0x444; // FVector2D
		constexpr auto bPathExist = 0x44c; // char : 1
		constexpr auto bPathIsPartial = 0x44c; // char : 1
		constexpr auto bPathSearchOutOfNodes = 0x44c; // char : 1
		constexpr auto PathfindingTime = 0x450; // float
		constexpr auto PathCost = 0x454; // float
		constexpr auto PathfindingSteps = 0x458; // int32_t
		constexpr auto OtherActor = 0x460; // ANavigationTestingActor*
		constexpr auto FilterClass = 0x468; // UNavigationQueryFilter*
		constexpr auto ShowStepIndex = 0x470; // int32_t
		constexpr auto OffsetFromCornersDistance = 0x474; // float
	}

	namespace n_ULocalPlayerNameCallProxy { // : UBlueprintAsyncActionBase
		constexpr auto onSuccess = 0x28; // FScriptMulticastDelegate
	}

	namespace n_UWidgetSwitcher { // : UPanelWidget
		constexpr auto ActiveWidgetIndex = 0x130; // int32_t
	}

	namespace n_UNavLinkTrivial { // : UNavLinkDefinition
		constexpr auto Links = 0x28; // TArray<FNavigationLink>
		constexpr auto SegmentLinks = 0x38; // TArray<FNavigationSegmentLink>
	}

	namespace n_UKeyBindingsCategoryBase { // : URootWidget
		constexpr auto m_EntryClass = 0x4b0; // UUserWidget*
	}

	namespace n_ULootLogBase { // : UUserWidget
		constexpr auto LogEntryClassTemplate = 0x240; // UUserWidget*
		constexpr auto LogVerticalBox = 0x248; // UVerticalBox*
		constexpr auto LogEntryPool = 0x250; // TArray<UWidget*>
	}

	namespace n_UNiagaraMeshRendererProperties { // : UNiagaraEffectRendererProperties
		constexpr auto ParticleMesh = 0x30; // UStaticMesh*
	}

	namespace n_UBoneMaskFilter { // : UObject
		constexpr auto BlendPoses = 0x28; // TArray<FInputBlendPose>
	}

	namespace n_UMovieSceneMaterialTrack { // : UMovieSceneNameableTrack
		constexpr auto Sections = 0xb8; // TArray<UMovieSceneSection*>
	}

	namespace n_USettingsGameplayBase { // : USubSettingsMaster
		constexpr auto SignalOnSettingsChanged = 0x328; // FScriptMulticastDelegate
		constexpr auto m_LastNudity = 0x338; // ENudity
		constexpr auto English = 0x340; // FText
		constexpr auto German = 0x358; // FText
		constexpr auto Italian = 0x370; // FText
		constexpr auto Spanish = 0x388; // FText
		constexpr auto French = 0x3a0; // FText
		constexpr auto Russian = 0x3b8; // FText
		constexpr auto Polish = 0x3d0; // FText
		constexpr auto Brazilian = 0x3e8; // FText
		constexpr auto Korean = 0x400; // FText
		constexpr auto Japanese = 0x418; // FText
		constexpr auto SimplifiedChinese = 0x430; // FText
		constexpr auto TraditionalChinese = 0x448; // FText
	}

	namespace n_UEndTurnCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto onSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto onFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_UEngine { // : UObject
		constexpr auto TinyFont = 0x30; // UFont*
		constexpr auto TinyFontName = 0x38; // FStringAssetReference
		constexpr auto SmallFont = 0x48; // UFont*
		constexpr auto SmallFontName = 0x50; // FStringAssetReference
		constexpr auto MediumFont = 0x60; // UFont*
		constexpr auto MediumFontName = 0x68; // FStringAssetReference
		constexpr auto LargeFont = 0x78; // UFont*
		constexpr auto LargeFontName = 0x80; // FStringAssetReference
		constexpr auto SubtitleFont = 0x90; // UFont*
		constexpr auto SubtitleFontName = 0x98; // FStringAssetReference
		constexpr auto AdditionalFonts = 0xa8; // TArray<UFont*>
		constexpr auto AdditionalFontNames = 0xc0; // TArray<FString>
		constexpr auto ConsoleClass = 0xd0; // UConsole*
		constexpr auto ConsoleClassName = 0xd8; // FStringClassReference
		constexpr auto GameViewportClientClass = 0xe8; // UGameViewportClient*
		constexpr auto GameViewportClientClassName = 0xf0; // FStringClassReference
		constexpr auto LocalPlayerClass = 0x100; // ULocalPlayer*
		constexpr auto LocalPlayerClassName = 0x108; // FStringClassReference
		constexpr auto WorldSettingsClass = 0x118; // AWorldSettings*
		constexpr auto WorldSettingsClassName = 0x120; // FStringClassReference
		constexpr auto NavigationSystemClassName = 0x130; // FStringClassReference
		constexpr auto NavigationSystemClass = 0x140; // UNavigationSystem*
		constexpr auto AvoidanceManagerClassName = 0x148; // FStringClassReference
		constexpr auto AvoidanceManagerClass = 0x158; // UAvoidanceManager*
		constexpr auto PhysicsCollisionHandlerClass = 0x160; // UPhysicsCollisionHandler*
		constexpr auto PhysicsCollisionHandlerClassName = 0x168; // FStringClassReference
		constexpr auto GameUserSettingsClassName = 0x178; // FStringClassReference
		constexpr auto GameUserSettingsClass = 0x188; // UGameUserSettings*
		constexpr auto AIControllerClassName = 0x190; // FStringClassReference
		constexpr auto GameUserSettings = 0x1a0; // UGameUserSettings*
		constexpr auto LevelScriptActorClass = 0x1a8; // ALevelScriptActor*
		constexpr auto LevelScriptActorClassName = 0x1b0; // FStringClassReference
		constexpr auto DefaultBlueprintBaseClassName = 0x1c0; // FStringClassReference
		constexpr auto GameSingletonClassName = 0x1d0; // FStringClassReference
		constexpr auto GameSingleton = 0x1e0; // UObject*
		constexpr auto PlayOnConsoleSaveDir = 0x1e8; // FString
		constexpr auto DefaultTexture = 0x1f8; // UTexture2D*
		constexpr auto DefaultTextureName = 0x200; // FStringAssetReference
		constexpr auto DefaultDiffuseTexture = 0x210; // UTexture*
		constexpr auto DefaultDiffuseTextureName = 0x218; // FStringAssetReference
		constexpr auto DefaultBSPVertexTexture = 0x228; // UTexture2D*
		constexpr auto DefaultBSPVertexTextureName = 0x230; // FStringAssetReference
		constexpr auto HighFrequencyNoiseTexture = 0x240; // UTexture2D*
		constexpr auto HighFrequencyNoiseTextureName = 0x248; // FStringAssetReference
		constexpr auto DefaultBokehTexture = 0x258; // UTexture2D*
		constexpr auto DefaultBokehTextureName = 0x260; // FStringAssetReference
		constexpr auto WireframeMaterial = 0x270; // UMaterial*
		constexpr auto WireframeMaterialName = 0x278; // FString
		constexpr auto DebugMeshMaterial = 0x288; // UMaterial*
		constexpr auto DebugMeshMaterialName = 0x290; // FStringAssetReference
		constexpr auto LevelColorationLitMaterial = 0x2a0; // UMaterial*
		constexpr auto LevelColorationLitMaterialName = 0x2a8; // FString
		constexpr auto LevelColorationUnlitMaterial = 0x2b8; // UMaterial*
		constexpr auto LevelColorationUnlitMaterialName = 0x2c0; // FString
		constexpr auto LightingTexelDensityMaterial = 0x2d0; // UMaterial*
		constexpr auto LightingTexelDensityName = 0x2d8; // FString
		constexpr auto ShadedLevelColorationLitMaterial = 0x2e8; // UMaterial*
		constexpr auto ShadedLevelColorationLitMaterialName = 0x2f0; // FString
		constexpr auto ShadedLevelColorationUnlitMaterial = 0x300; // UMaterial*
		constexpr auto ShadedLevelColorationUnlitMaterialName = 0x308; // FString
		constexpr auto RemoveSurfaceMaterial = 0x318; // UMaterial*
		constexpr auto RemoveSurfaceMaterialName = 0x320; // FStringAssetReference
		constexpr auto VertexColorMaterial = 0x330; // UMaterial*
		constexpr auto VertexColorMaterialName = 0x338; // FString
		constexpr auto VertexColorViewModeMaterial_ColorOnly = 0x348; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_ColorOnly = 0x350; // FString
		constexpr auto VertexColorViewModeMaterial_AlphaAsColor = 0x360; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_AlphaAsColor = 0x368; // FString
		constexpr auto VertexColorViewModeMaterial_RedOnly = 0x378; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_RedOnly = 0x380; // FString
		constexpr auto VertexColorViewModeMaterial_GreenOnly = 0x390; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_GreenOnly = 0x398; // FString
		constexpr auto VertexColorViewModeMaterial_BlueOnly = 0x3a8; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_BlueOnly = 0x3b0; // FString
		constexpr auto ConstraintLimitMaterial = 0x3c0; // UMaterial*
		constexpr auto ConstraintLimitMaterialX = 0x3c8; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialXAxis = 0x3d0; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialY = 0x3d8; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialYAxis = 0x3e0; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialZ = 0x3e8; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialZAxis = 0x3f0; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialPrismatic = 0x3f8; // UMaterialInstanceDynamic*
		constexpr auto InvalidLightmapSettingsMaterial = 0x400; // UMaterial*
		constexpr auto InvalidLightmapSettingsMaterialName = 0x408; // FStringAssetReference
		constexpr auto PreviewShadowsIndicatorMaterial = 0x418; // UMaterial*
		constexpr auto PreviewShadowsIndicatorMaterialName = 0x420; // FStringAssetReference
		constexpr auto ArrowMaterial = 0x430; // UMaterial*
		constexpr auto ArrowMaterialName = 0x438; // FStringAssetReference
		constexpr auto LightingOnlyBrightness = 0x448; // FLinearColor
		constexpr auto ShaderComplexityColors = 0x458; // TArray<FLinearColor>
		constexpr auto QuadComplexityColors = 0x468; // TArray<FLinearColor>
		constexpr auto LightComplexityColors = 0x478; // TArray<FLinearColor>
		constexpr auto StationaryLightOverlapColors = 0x488; // TArray<FLinearColor>
		constexpr auto LODColorationColors = 0x498; // TArray<FLinearColor>
		constexpr auto HLODColorationColors = 0x4a8; // TArray<FLinearColor>
		constexpr auto StreamingAccuracyColors = 0x4b8; // TArray<FLinearColor>
		constexpr auto MaxPixelShaderAdditiveComplexityCount = 0x4c8; // float
		constexpr auto MaxES2PixelShaderAdditiveComplexityCount = 0x4cc; // float
		constexpr auto MinLightMapDensity = 0x4d0; // float
		constexpr auto IdealLightMapDensity = 0x4d4; // float
		constexpr auto MaxLightMapDensity = 0x4d8; // float
		constexpr auto bRenderLightMapDensityGrayscale = 0x4dc; // char : 1
		constexpr auto RenderLightMapDensityGrayscaleScale = 0x4e0; // float
		constexpr auto RenderLightMapDensityColorScale = 0x4e4; // float
		constexpr auto LightMapDensityVertexMappedColor = 0x4e8; // FLinearColor
		constexpr auto LightMapDensitySelectedColor = 0x4f8; // FLinearColor
		constexpr auto StatColorMappings = 0x508; // TArray<FStatColorMapping>
		constexpr auto DefaultPhysMaterial = 0x518; // UPhysicalMaterial*
		constexpr auto DefaultPhysMaterialName = 0x520; // FStringAssetReference
		constexpr auto ActiveGameNameRedirects = 0x530; // TArray<FGameNameRedirect>
		constexpr auto ActiveClassRedirects = 0x540; // TArray<FClassRedirect>
		constexpr auto ActivePluginRedirects = 0x550; // TArray<FPluginRedirect>
		constexpr auto ActiveStructRedirects = 0x560; // TArray<FStructRedirect>
		constexpr auto PreIntegratedSkinBRDFTexture = 0x570; // UTexture2D*
		constexpr auto PreIntegratedSkinBRDFTextureName = 0x578; // FStringAssetReference
		constexpr auto MiniFontTexture = 0x588; // UTexture2D*
		constexpr auto MiniFontTextureName = 0x590; // FStringAssetReference
		constexpr auto WeightMapPlaceholderTexture = 0x5a0; // UTexture*
		constexpr auto WeightMapPlaceholderTextureName = 0x5a8; // FStringAssetReference
		constexpr auto LightMapDensityTexture = 0x5b8; // UTexture2D*
		constexpr auto LightMapDensityTextureName = 0x5c0; // FStringAssetReference
		constexpr auto GameViewport = 0x5d8; // UGameViewportClient*
		constexpr auto DeferredCommands = 0x5e0; // TArray<FString>
		constexpr auto TickCycles = 0x5f0; // int32_t
		constexpr auto GameCycles = 0x5f4; // int32_t
		constexpr auto ClientCycles = 0x5f8; // int32_t
		constexpr auto NearClipPlane = 0x5fc; // float
		constexpr auto bHardwareSurveyEnabled = 0x600; // char : 1
		constexpr auto bSubtitlesEnabled = 0x600; // char : 1
		constexpr auto bSubtitlesForcedOff = 0x600; // char : 1
		constexpr auto MaximumLoopIterationCount = 0x604; // int32_t
		constexpr auto bCanBlueprintsTickByDefault = 0x608; // char : 1
		constexpr auto bOptimizeAnimBlueprintMemberVariableAccess = 0x608; // char : 1
		constexpr auto bAllowMultiThreadedAnimationUpdate = 0x608; // char : 1
		constexpr auto bEnableEditorPSysRealtimeLOD = 0x608; // char : 1
		constexpr auto bSmoothFrameRate = 0x608; // char : 1
		constexpr auto bUseFixedFrameRate = 0x608; // char : 1
		constexpr auto FixedFrameRate = 0x60c; // float
		constexpr auto SmoothedFrameRateRange = 0x610; // FFloatRange
		constexpr auto bCheckForMultiplePawnsSpawnedInAFrame = 0x620; // char : 1
		constexpr auto NumPawnsAllowedToBeSpawnedInAFrame = 0x624; // int32_t
		constexpr auto bShouldGenerateLowQualityLightmaps = 0x628; // char : 1
		constexpr auto C_WorldBox = 0x62c; // FColor
		constexpr auto C_BrushWire = 0x630; // FColor
		constexpr auto C_AddWire = 0x634; // FColor
		constexpr auto C_SubtractWire = 0x638; // FColor
		constexpr auto C_SemiSolidWire = 0x63c; // FColor
		constexpr auto C_NonSolidWire = 0x640; // FColor
		constexpr auto C_WireBackground = 0x644; // FColor
		constexpr auto C_ScaleBoxHi = 0x648; // FColor
		constexpr auto C_VolumeCollision = 0x64c; // FColor
		constexpr auto C_BSPCollision = 0x650; // FColor
		constexpr auto C_OrthoBackground = 0x654; // FColor
		constexpr auto C_Volume = 0x658; // FColor
		constexpr auto C_BrushShape = 0x65c; // FColor
		constexpr auto StreamingDistanceFactor = 0x660; // float
		constexpr auto TransitionType = 0x664; // ETransitionType
		constexpr auto TransitionDescription = 0x668; // FString
		constexpr auto TransitionGameMode = 0x678; // FString
		constexpr auto MeshLODRange = 0x688; // float
		constexpr auto bAllowMatureLanguage = 0x68c; // char : 1
		constexpr auto CameraRotationThreshold = 0x690; // float
		constexpr auto CameraTranslationThreshold = 0x694; // float
		constexpr auto PrimitiveProbablyVisibleTime = 0x698; // float
		constexpr auto MaxOcclusionPixelsFraction = 0x69c; // float
		constexpr auto bPauseOnLossOfFocus = 0x6a0; // char : 1
		constexpr auto MaxParticleResize = 0x6a4; // int32_t
		constexpr auto MaxParticleResizeWarn = 0x6a8; // int32_t
		constexpr auto PendingDroppedNotes = 0x6b0; // TArray<FDropNoteInfo>
		constexpr auto PhysicErrorCorrection = 0x6c0; // FRigidBodyErrorCorrection
		constexpr auto NetClientTicksPerSecond = 0x6dc; // float
		constexpr auto DisplayGamma = 0x6e0; // float
		constexpr auto MinDesiredFrameRate = 0x6e4; // float
		constexpr auto DefaultSelectedMaterialColor = 0x6e8; // FLinearColor
		constexpr auto SelectedMaterialColor = 0x6f8; // FLinearColor
		constexpr auto SelectionOutlineColor = 0x708; // FLinearColor
		constexpr auto SubduedSelectionOutlineColor = 0x718; // FLinearColor
		constexpr auto SelectedMaterialColorOverride = 0x728; // FLinearColor
		constexpr auto bIsOverridingSelectedColor = 0x738; // bool
		constexpr auto bEnableOnScreenDebugMessages = 0x750; // char : 1
		constexpr auto bEnableOnScreenDebugMessagesDisplay = 0x750; // char : 1
		constexpr auto bSuppressMapWarnings = 0x750; // char : 1
		constexpr auto bDisableAILogging = 0x750; // char : 1
		constexpr auto bEnableVisualLogRecordingOnStart = 0x754; // uint32_t
		constexpr auto ScreenSaverInhibitorSemaphore = 0x75c; // int32_t
		constexpr auto bLockReadOnlyLevels = 0x760; // char : 1
		constexpr auto ParticleEventManagerClassPath = 0x768; // FString
		constexpr auto SelectionHighlightIntensity = 0x788; // float
		constexpr auto SelectionMeshSectionHighlightIntensity = 0x78c; // float
		constexpr auto BSPSelectionHighlightIntensity = 0x790; // float
		constexpr auto HoverHighlightIntensity = 0x794; // float
		constexpr auto SelectionHighlightIntensityBillboards = 0x798; // float
		constexpr auto NetDriverDefinitions = 0xbf0; // TArray<FNetDriverDefinition>
		constexpr auto ServerActors = 0xc00; // TArray<FString>
		constexpr auto RuntimeServerActors = 0xc10; // TArray<FString>
		constexpr auto bStartedLoadMapMovie = 0xc20; // char : 1
		constexpr auto NextWorldContextHandle = 0xc38; // int32_t
		constexpr auto KeepAliveAdditionalComponentClasses = 0xd00; // TArray<UObject*>
	}

	namespace n_UParticleModuleRotationRateBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x28; // char : 1
		constexpr auto LODDuplicate = 0x28; // char : 1
		constexpr auto bSupportsRandomSeed = 0x28; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x28; // char : 1
		constexpr auto LODValidity = 0x2c; // char
	}

	namespace n_UConanIpConnection { // : UIpConnection
		constexpr auto Children = 0x48; // TArray<UChildConnection*>
		constexpr auto Driver = 0x58; // UNetDriver*
		constexpr auto PackageMap = 0x60; // UPackageMap*
		constexpr auto OpenChannels = 0x68; // TArray<UChannel*>
		constexpr auto SentTemporaries = 0x78; // TArray<AActor*>
		constexpr auto ViewTarget = 0x88; // AActor*
		constexpr auto OwningActor = 0x90; // AActor*
		constexpr auto MaxPacket = 0x98; // int32_t
		constexpr auto InternalAck = 0x9c; // char : 1
		constexpr auto AsyncLoadedObjects = 0xa0; // TArray<UObject*>
		constexpr auto PlayerId = 0x170; // FUniqueNetIdRepl
		constexpr auto LastReceiveTime = 0x200; // double
		constexpr auto ActorChannels = 0x334e0; // TMap<AActor*, UActorChannel*>
		constexpr auto ChannelsToTick = 0x33730; // TArray<UChannel*>
	}

	namespace n_AGameModeBase { // : AInfo
		constexpr auto OptionsString = 0x3d0; // FString
		constexpr auto GameSessionClass = 0x3e0; // AGameSession*
		constexpr auto GameStateClass = 0x3e8; // AGameStateBase*
		constexpr auto PlayerControllerClass = 0x3f0; // APlayerController*
		constexpr auto PlayerStateClass = 0x3f8; // APlayerState*
		constexpr auto HUDClass = 0x400; // AHUD*
		constexpr auto DefaultPawnClass = 0x408; // APawn*
		constexpr auto SpectatorClass = 0x410; // ASpectatorPawn*
		constexpr auto ReplaySpectatorPlayerControllerClass = 0x418; // APlayerController*
		constexpr auto GameSession = 0x420; // AGameSession*
		constexpr auto GameState = 0x428; // AGameStateBase*
		constexpr auto DefaultPlayerName = 0x430; // FText
		constexpr auto bUseSeamlessTravel = 0x448; // char : 1
		constexpr auto bStartPlayersAsSpectators = 0x448; // char : 1
		constexpr auto bPauseable = 0x448; // char : 1
		constexpr auto LoginQueueTimer = 0x480; // FTimerHandle
		constexpr auto DisconnectionGraceTimer = 0x488; // FTimerHandle
	}

	namespace n_UMaterialExpressionSceneTexelSize { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto Desc = 0x38; // FString
		constexpr auto BorderColor = 0x48; // FColor
		constexpr auto bRealtimePreview = 0x4c; // char : 1
		constexpr auto bNeedToUpdatePreview = 0x4c; // char : 1
		constexpr auto bIsParameterExpression = 0x4c; // char : 1
		constexpr auto bCommentBubbleVisible = 0x4c; // char : 1
		constexpr auto bShowOutputNameOnPin = 0x4c; // char : 1
		constexpr auto bHidePreviewWindow = 0x4c; // char : 1
		constexpr auto bCollapsed = 0x4c; // char : 1
		constexpr auto bShaderInputData = 0x4c; // char : 1
		constexpr auto bShowInputs = 0x4c; // char : 1
		constexpr auto bShowOutputs = 0x4c; // char : 1
		constexpr auto Outputs = 0x50; // TArray<FExpressionOutput>
	}

	namespace n_UMovieSceneEventTrack { // : UMovieSceneNameableTrack
		constexpr auto bFireEventsWhenForwards = 0xb8; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0xb8; // char : 1
		constexpr auto Sections = 0xc0; // TArray<UMovieSceneSection*>
	}

	namespace n_AVectorFieldVolume { // : AActor
		constexpr auto VectorFieldComponent = 0x3d0; // UVectorFieldComponent*
	}

	namespace n_UGetGuildMembersListCallProxy { // : UBlueprintAsyncActionBase
		constexpr auto onSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto onFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_ALightmassImportanceVolume { // : AVolume
		constexpr auto BrushType = 0x3d0; // EBrushType
		constexpr auto BrushColor = 0x3d4; // FColor
		constexpr auto PolyFlags = 0x3d8; // int32_t
		constexpr auto bColored = 0x3dc; // char : 1
		constexpr auto bSolidWhenSelected = 0x3dc; // char : 1
		constexpr auto bPlaceableFromClassBrowser = 0x3dc; // char : 1
		constexpr auto bNotForClientOrServer = 0x3dc; // char : 1
		constexpr auto Brush = 0x3e0; // UModel*
		constexpr auto BrushComponent = 0x3e8; // UBrushComponent*
		constexpr auto bInManipulation = 0x3f0; // char : 1
		constexpr auto SavedSelections = 0x3f8; // TArray<FGeomSelection>
	}

	namespace n_UW_HotkeyIcon_C { // : UHotkeyIcon
		constexpr auto IconView = 0x428; // UImage*
	}

	namespace n_UMaterialExpressionCrossProduct { // : UMaterialExpression
		constexpr auto A = 0x60; // FExpressionInput
		constexpr auto B = 0x98; // FExpressionInput
	}

	namespace n_UIntStatChangeSignalNode { // : UObject
		constexpr auto SignalStatChanged = 0x28; // FScriptMulticastDelegate
	}

	namespace n_UUniformGridPanel { // : UPanelWidget
		constexpr auto SlotPadding = 0x130; // FMargin
		constexpr auto MinDesiredSlotWidth = 0x140; // float
		constexpr auto MinDesiredSlotHeight = 0x144; // float
	}

	namespace n_UGameplayTagsManager { // : UObject
		constexpr auto TagSources = 0xa8; // TArray<FGameplayTagSource>
		constexpr auto GameplayTagTables = 0x120; // TArray<UDataTable*>
	}

	namespace n_UEnvQuery { // : UDataAsset
		constexpr auto QueryName = 0x28; // FName
		constexpr auto Options = 0x30; // TArray<UEnvQueryOption*>
	}

	namespace n_UReflectionCaptureComponent { // : USceneComponent
		constexpr auto CaptureOffsetComponent = 0x300; // UBillboardComponent*
		constexpr auto ReflectionSourceType = 0x308; // EReflectionSourceType
		constexpr auto Cubemap = 0x310; // UTextureCube*
		constexpr auto SourceCubemapAngle = 0x318; // float
		constexpr auto Brightness = 0x31c; // float
		constexpr auto CaptureOffset = 0x320; // FVector
		constexpr auto StateId = 0x350; // FGuid
	}

	namespace n_UInterpTrackInstVectorProp { // : UInterpTrackInstProperty
		constexpr auto ResetVector = 0x40; // FVector
	}

	namespace n_URig { // : UObject
		constexpr auto TransformBases = 0x28; // TArray<FTransformBase>
		constexpr auto Nodes = 0x38; // TArray<FNode>
	}

	namespace n_UEnvQueryGenerator_Composite { // : UEnvQueryGenerator
		constexpr auto Generators = 0x50; // TArray<UEnvQueryGenerator*>
		constexpr auto bHasMatchingItemType = 0x60; // bool
	}

	namespace n_UProceduralFoliageSpawner { // : UObject
		constexpr auto RandomSeed = 0x28; // int32_t
		constexpr auto TileSize = 0x2c; // float
		constexpr auto NumUniqueTiles = 0x30; // int32_t
		constexpr auto MinimumQuadTreeSize = 0x34; // float
		constexpr auto FoliageTypes = 0x40; // TArray<FFoliageTypeObject>
		constexpr auto bNeedsSimulation = 0x50; // bool
	}

	namespace n_UImageCaptureSettings { // : UFrameGrabberProtocolSettings
		constexpr auto CompressionQuality = 0x30; // int32_t
	}

	namespace n_ALobbyBeaconClient { // : AOnlineBeaconClient
		constexpr auto LobbyState = 0x458; // ALobbyBeaconState*
		constexpr auto PlayerState = 0x460; // ALobbyBeaconPlayerState*
	}

	namespace n_UW_CommunityButton_C { // : UFCBloodCommunityButton
		constexpr auto UberGraphFrame = 0xca0; // FPointerToUberGraphFrame
		constexpr auto Anim_Blood = 0xca8; // UWidgetAnimation*
		constexpr auto Anim_Fade = 0xcb0; // UWidgetAnimation*
		constexpr auto Button = 0xcb8; // UImage*
		constexpr auto CommunityLabel = 0xcc0; // UTextBlock*
		constexpr auto Icon = 0xcc8; // UImage*
		constexpr auto CommunityIcon = 0xcd0; // UTexture2D*
		constexpr auto Description = 0xcd8; // FText
		constexpr auto SignalDescription = 0xcf0; // FScriptMulticastDelegate
	}

	namespace n_UGeometryCache { // : UObject
		constexpr auto Materials = 0x30; // TArray<UMaterialInterface*>
		constexpr auto Tracks = 0x40; // TArray<UGeometryCacheTrack*>
	}

	namespace n_UPathPoints { // : UObject
		constexpr auto PathPoints = 0x28; // TArray<FVector>
	}

	namespace n_UDistributionFloatUniform { // : UDistributionFloat
		constexpr auto Min = 0x38; // float
		constexpr auto Max = 0x3c; // float
	}

	namespace n_UMovieSceneColorSection { // : UMovieSceneSection
		constexpr auto RedCurve = 0xd0; // FRichCurve
		constexpr auto GreenCurve = 0x140; // FRichCurve
		constexpr auto BlueCurve = 0x1b0; // FRichCurve
		constexpr auto AlphaCurve = 0x220; // FRichCurve
	}

	namespace n_UShortcutBarBase { // : UWindowRoot
		constexpr auto m_ShortcutInventory = 0x398; // UShortcutBarInventory*
		constexpr auto m_BackpackInventory = 0x3a0; // UItemInventory*
		constexpr auto m_CharacterCratfingQ = 0x3a8; // UCraftingQueue*
		constexpr auto VisualDataPreload = 0x400; // TArray<FVisualData>
	}

	namespace n_UNiagaraEffect { // : UObject
		constexpr auto EmitterProps = 0x28; // TArray<UNiagaraEmitterProperties*>
	}

	namespace n_UMaterialExpressionStaticSwitch { // : UMaterialExpression
		constexpr auto DefaultValue = 0x60; // char : 1
		constexpr auto A = 0x68; // FExpressionInput
		constexpr auto B = 0xa0; // FExpressionInput
		constexpr auto Value = 0xd8; // FExpressionInput
	}

	namespace n_UMaterialExpressionBreakMaterialAttributes { // : UMaterialExpression
		constexpr auto MaterialAttributes = 0x60; // FMaterialAttributesInput
	}

	namespace n_APaperSpriteActor { // : AActor
		constexpr auto RenderComponent = 0x3d0; // UPaperSpriteComponent*
	}

	namespace n_AAvatarCharacter { // : AConanCharacter
		constexpr auto AvatarName = 0x16d8; // FText
		constexpr auto m_Summoner = 0x16f0; // AConanCharacter*
		constexpr auto m_AvatarTimerStarted = 0x16fc; // bool
	}

	namespace n_UWebSocketNetDriver { // : UNetDriver
		constexpr auto WebSocketPort = 0x4f8; // int32_t
	}

	namespace n_UDestructibleFractureSettings { // : UObject
		constexpr auto CellSiteCount = 0x28; // int32_t
		constexpr auto FractureMaterialDesc = 0x2c; // FFractureMaterial
		constexpr auto RandomSeed = 0x50; // int32_t
		constexpr auto VoronoiSites = 0x58; // TArray<FVector>
		constexpr auto OriginalSubmeshCount = 0x68; // int32_t
		constexpr auto Materials = 0x70; // TArray<UMaterialInterface*>
		constexpr auto ChunkParameters = 0x80; // TArray<FDestructibleChunkParameters>
	}

	namespace n_AMountInput { // : AActor
		constexpr auto Player = 0x3d0; // AConanCharacter*
		constexpr auto MaxForwardAngle = 0x3d8; // float
		constexpr auto MaxLeanTurnAngle = 0x3dc; // float
		constexpr auto MaxSteepTurnAngle = 0x3e0; // float
		constexpr auto MinSteerBackAngle = 0x3e4; // float
		constexpr auto MinStraightBackAngle = 0x3e8; // float
		constexpr auto SteepTurnAccelRateFactor = 0x3ec; // float
		constexpr auto TimeBeforeReleasingJoystickCounts = 0x3f0; // float
		constexpr auto IsDismounting = 0x3f4; // bool
		constexpr auto IsInputDisabled = 0x3f5; // bool
		constexpr auto EnableAutorun = 0x3f6; // bool
		constexpr auto IsInSteepTurn = 0x3f7; // bool
		constexpr auto CurrentToggleInput = 0x3f8; // EToggleInput
		constexpr auto Debug_Break = 0x3f9; // bool
	}

	namespace n_UControlPointMeshComponent { // : UStaticMeshComponent
		constexpr auto ForcedLodModel = 0x7c8; // int32_t
		constexpr auto PreviousLODLevel = 0x7cc; // int32_t
		constexpr auto StaticMesh = 0x7d0; // UStaticMesh*
		constexpr auto MinLOD = 0x7d8; // int32_t
		constexpr auto SubDivisionStepSize = 0x7dc; // int32_t
		constexpr auto bOverrideMinLOD = 0x7e0; // char : 1
		constexpr auto bOverrideNavigationExport = 0x7e0; // char : 1
		constexpr auto bForceNavigationObstacle = 0x7e0; // char : 1
		constexpr auto bDisallowMeshPaintPerInstance = 0x7e0; // char : 1
		constexpr auto bUseDefaultCollision = 0x7e0; // char : 1
		constexpr auto bUseSubDivisions = 0x7e0; // char : 1
		constexpr auto bIgnoreInstanceForTextureStreaming = 0x7e0; // char : 1
		constexpr auto bOverrideLightMapRes = 0x7e0; // char : 1
		constexpr auto bCastDistanceFieldIndirectShadow = 0x7e0; // char : 1
		constexpr auto OverriddenLightMapRes = 0x7e4; // int32_t
		constexpr auto DistanceFieldIndirectShadowMinVisibility = 0x7e8; // float
		constexpr auto StreamingDistanceMultiplier = 0x7ec; // float
		constexpr auto LODData = 0x7f0; // TArray<FStaticMeshComponentLODInfo>
		constexpr auto StreamingTextureData = 0x800; // TArray<FStreamingTextureBuildInfo>
		constexpr auto LightmassSettings = 0x810; // FLightmassPrimitiveSettings
	}

	namespace n_UMaterialInstanceDynamic { // : UMaterialInstance
		constexpr auto PhysMaterial = 0x70; // UPhysicalMaterial*
		constexpr auto Parent = 0x78; // UMaterialInterface*
		constexpr auto bHasStaticPermutationResource = 0x80; // char : 1
		constexpr auto bOverrideSubsurfaceProfile = 0x80; // char : 1
		constexpr auto FontParameterValues = 0x88; // TArray<FFontParameterValue>
		constexpr auto ScalarParameterValues = 0x98; // TArray<FScalarParameterValue>
		constexpr auto TextureParameterValues = 0xa8; // TArray<FTextureParameterValue>
		constexpr auto GraniteTextureParameterValues = 0xb8; // TArray<FGraniteTextureParameterValue>
		constexpr auto GraniteErrors = 0xc8; // TArray<FString>
		constexpr auto VectorParameterValues = 0xd8; // TArray<FVectorParameterValue>
		constexpr auto bOverrideBaseProperties = 0xe8; // bool
		constexpr auto BasePropertyOverrides = 0xec; // FMaterialInstanceBasePropertyOverrides
	}

	namespace n_UInterpTrack { // : UObject
		constexpr auto SubTracks = 0x38; // TArray<UInterpTrack*>
		constexpr auto TrackInstClass = 0x48; // UInterpTrackInst*
		constexpr auto ActiveCondition = 0x50; // ETrackActiveCondition
		constexpr auto TrackTitle = 0x58; // FString
		constexpr auto bOnePerGroup = 0x68; // char : 1
		constexpr auto bDirGroupOnly = 0x68; // char : 1
		constexpr auto bDisableTrack = 0x68; // char : 1
		constexpr auto bIsSelected = 0x68; // char : 1
		constexpr auto bIsAnimControlTrack = 0x68; // char : 1
		constexpr auto bSubTrackOnly = 0x68; // char : 1
		constexpr auto bVisible = 0x68; // char : 1
		constexpr auto bIsRecording = 0x68; // char : 1
	}

	namespace n_UForceFeedbackEffect { // : UObject
		constexpr auto ChannelDetails = 0x28; // TArray<FForceFeedbackChannelDetails>
		constexpr auto Duration = 0x38; // float
	}

	namespace n_UAnimNotify_PlaySound { // : UAnimNotify
		constexpr auto Sound = 0x38; // USoundBase*
		constexpr auto VolumeMultiplier = 0x40; // float
		constexpr auto PitchMultiplier = 0x44; // float
		constexpr auto bFollow = 0x48; // char : 1
		constexpr auto AttachName = 0x50; // FName
	}

	namespace n_AWindDirectionalSource { // : AInfo
		constexpr auto Component = 0x3d0; // UWindDirectionalSourceComponent*
	}

	namespace n_UStreamingSettings { // : UDeveloperSettings
		constexpr auto AsyncLoadingThreadEnabled = 0x38; // char : 1
		constexpr auto WarnIfTimeLimitExceeded = 0x38; // char : 1
		constexpr auto TimeLimitExceededMultiplier = 0x3c; // float
		constexpr auto TimeLimitExceededMinTime = 0x40; // float
		constexpr auto MinBulkDataSizeForAsyncLoading = 0x44; // int32_t
		constexpr auto AsyncIOBandwidthLimit = 0x48; // float
		constexpr auto UseBackgroundLevelStreaming = 0x4c; // char : 1
		constexpr auto AsyncLoadingUseFullTimeLimit = 0x4c; // char : 1
		constexpr auto AsyncLoadingTimeLimit = 0x50; // float
		constexpr auto PriorityAsyncLoadingExtraTime = 0x54; // float
		constexpr auto LevelStreamingActorsUpdateTimeLimit = 0x58; // float
		constexpr auto LevelStreamingComponentsRegistrationGranularity = 0x5c; // int32_t
		constexpr auto LevelStreamingUnregisterComponentsTimeLimit = 0x60; // float
		constexpr auto LevelStreamingComponentsUnregistrationGranularity = 0x64; // int32_t
		constexpr auto EventDrivenLoaderEnabled = 0x68; // char : 1
	}

	namespace n_UThrallItem { // : UGameItem
		constexpr auto ThrallCharLayout = 0x248; // FCharacterLayout
		constexpr auto EquipmentTemplateIDs = 0x380; // TArray<int32_t>
		constexpr auto BackpackTemplateIDs = 0x390; // TArray<int32_t>
		constexpr auto ThrallInfo = 0x3a0; // FThrallInfo
		constexpr auto SignalReceivedCharacterLayout = 0x420; // FScriptMulticastDelegate
		constexpr auto m_ThrallTable = 0x430; // UDataTable*
		constexpr auto m_bHasRequestedCharLayout = 0x438; // bool
	}

	namespace n_UItemStatView { // : URootWidget
		constexpr auto fontSize = 0x318; // int32_t
	}

	namespace n_UUserDefinedStruct { // : UScriptStruct
		constexpr auto Guid = 0x98; // FGuid
	}

	namespace n_UPawnSensingComponent { // : UActorComponent
		constexpr auto HearingThreshold = 0xf8; // float
		constexpr auto LOSHearingThreshold = 0xfc; // float
		constexpr auto SightRadius = 0x100; // float
		constexpr auto SensingInterval = 0x104; // float
		constexpr auto HearingMaxSoundAge = 0x108; // float
		constexpr auto bEnableSensingUpdates = 0x10c; // char : 1
		constexpr auto bOnlySensePlayers = 0x10c; // char : 1
		constexpr auto bSeePawns = 0x10c; // char : 1
		constexpr auto bHearNoises = 0x10c; // char : 1
		constexpr auto OnSeePawn = 0x118; // FScriptMulticastDelegate
		constexpr auto OnHearNoise = 0x128; // FScriptMulticastDelegate
		constexpr auto PeripheralVisionAngle = 0x138; // float
		constexpr auto PeripheralVisionCosine = 0x13c; // float
	}

	namespace n_ULandscapeMeshCollisionComponent { // : ULandscapeHeightfieldCollisionComponent
		constexpr auto MeshGuid = 0x7a0; // FGuid
	}

	namespace n_UW_LinkTwitchButton_C { // : UTwitchPatchNotesEntryView
		constexpr auto UberGraphFrame = 0x378; // FPointerToUberGraphFrame
		constexpr auto Deselect = 0x380; // UWidgetAnimation*
		constexpr auto Select = 0x388; // UWidgetAnimation*
		constexpr auto Border_1 = 0x390; // UBorder*
		constexpr auto Image_35 = 0x398; // UImage*
		constexpr auto Temp_OldHighlight = 0x3a0; // FSlateBrush
	}

	namespace n_USplineComponent { // : UPrimitiveComponent
		constexpr auto SplineCurves = 0x6c0; // FSplineCurves
		constexpr auto SplineInfo = 0x720; // FInterpCurveVector
		constexpr auto SplineRotInfo = 0x738; // FInterpCurveQuat
		constexpr auto SplineScaleInfo = 0x750; // FInterpCurveVector
		constexpr auto SplineReparamTable = 0x768; // FInterpCurveFloat
		constexpr auto bAllowSplineEditingPerInstance = 0x780; // bool
		constexpr auto ReparamStepsPerSegment = 0x784; // int32_t
		constexpr auto Duration = 0x788; // float
		constexpr auto bStationaryEndpoints = 0x78c; // bool
		constexpr auto bSplineHasBeenEdited = 0x78d; // bool
		constexpr auto bModifiedByConstructionScript = 0x78e; // bool
		constexpr auto bInputSplinePointsToConstructionScript = 0x78f; // bool
		constexpr auto bDrawDebug = 0x790; // bool
		constexpr auto bClosedLoop = 0x791; // bool
		constexpr auto bLoopPositionOverride = 0x792; // bool
		constexpr auto LoopPosition = 0x794; // float
		constexpr auto DefaultUpVector = 0x798; // FVector
	}

	namespace n_UNavArea_Doorway { // : UNavArea
		constexpr auto DefaultCost = 0x28; // float
		constexpr auto FixedAreaEnteringCost = 0x2c; // float
		constexpr auto DrawColor = 0x30; // FColor
		constexpr auto SupportedAgents = 0x34; // FNavAgentSelector
		constexpr auto bSupportsAgent0 = 0x38; // char : 1
		constexpr auto bSupportsAgent1 = 0x38; // char : 1
		constexpr auto bSupportsAgent2 = 0x38; // char : 1
		constexpr auto bSupportsAgent3 = 0x38; // char : 1
		constexpr auto bSupportsAgent4 = 0x38; // char : 1
		constexpr auto bSupportsAgent5 = 0x38; // char : 1
		constexpr auto bSupportsAgent6 = 0x38; // char : 1
		constexpr auto bSupportsAgent7 = 0x38; // char : 1
		constexpr auto bSupportsAgent8 = 0x38; // char : 1
		constexpr auto bSupportsAgent9 = 0x38; // char : 1
		constexpr auto bSupportsAgent10 = 0x38; // char : 1
		constexpr auto bSupportsAgent11 = 0x38; // char : 1
		constexpr auto bSupportsAgent12 = 0x38; // char : 1
		constexpr auto bSupportsAgent13 = 0x38; // char : 1
		constexpr auto bSupportsAgent14 = 0x38; // char : 1
		constexpr auto bSupportsAgent15 = 0x38; // char : 1
	}

	namespace n_UProceduralFoliageComponent { // : UActorComponent
		constexpr auto FoliageSpawner = 0xf8; // UProceduralFoliageSpawner*
		constexpr auto TileOverlap = 0x100; // float
		constexpr auto SpawningVolume = 0x108; // AVolume*
		constexpr auto ProceduralGuid = 0x110; // FGuid
	}

	namespace n_ANiagaraActor { // : AActor
		constexpr auto NiagaraComponent = 0x3d0; // UNiagaraComponent*
	}

	namespace n_AConanBasicAIController { // : AConanBaseAIController
		constexpr auto FleeRange = 0x568; // float
		constexpr auto MaxRoamingRange = 0x56c; // float
		constexpr auto CanRoam = 0x570; // bool
		constexpr auto PurgeShouldReturnHome = 0x571; // bool
		constexpr auto BehaviorParameters = 0x578; // UObject*
		constexpr auto CheckIfOffNavmeshInterval = 0x580; // float
		constexpr auto TotalTimeToCheckIfOffNavmesh = 0x584; // float
		constexpr auto bIsPatroling = 0x588; // bool
		constexpr auto FleeActor = 0x5b8; // AConanCharacter*
		constexpr auto bIsSuiciding = 0x600; // bool
		constexpr auto DefaultNavQueryFilterObject = 0x618; // UNavigationQueryFilter*
	}

	namespace n_UParticleModuleSizeScaleBySpeed { // : UParticleModuleSizeBase
		constexpr auto SpeedScale = 0x30; // FVector2D
		constexpr auto MaxScale = 0x38; // FVector2D
	}

	namespace n_UMaterialExpressionConstant { // : UMaterialExpression
		constexpr auto R = 0x60; // float
	}

	namespace n_UParticleModuleRotationBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x28; // char : 1
		constexpr auto LODDuplicate = 0x28; // char : 1
		constexpr auto bSupportsRandomSeed = 0x28; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x28; // char : 1
		constexpr auto LODValidity = 0x2c; // char
	}

	namespace n_UWorldPersistenceComponent { // : UPersistenceComponent
		constexpr auto SignalPossibleThrallOwnersFound = 0x160; // FScriptMulticastDelegate
		constexpr auto MinDirtySaveDelay = 0x254; // float
	}

	namespace n_ALight { // : AActor
		constexpr auto LightComponent = 0x3d0; // ULightComponent*
		constexpr auto bEnabled = 0x3d8; // char : 1
	}

	namespace n_UConsoleSettings { // : UObject
		constexpr auto MaxScrollbackSize = 0x28; // int32_t
		constexpr auto ManualAutoCompleteList = 0x30; // TArray<FAutoCompleteCommand>
		constexpr auto AutoCompleteMapPaths = 0x40; // TArray<FString>
		constexpr auto BackgroundOpacityPercentage = 0x50; // float
		constexpr auto bOrderTopToBottom = 0x54; // bool
		constexpr auto InputColor = 0x58; // FColor
		constexpr auto HistoryColor = 0x5c; // FColor
		constexpr auto AutoCompleteCommandColor = 0x60; // FColor
		constexpr auto AutoCompleteCVarColor = 0x64; // FColor
		constexpr auto AutoCompleteFadedColor = 0x68; // FColor
	}

	namespace n_ATextRenderActor { // : AActor
		constexpr auto TextRender = 0x3d0; // UTextRenderComponent*
	}

	namespace n_UNavigatableVerticalBox { // : UNavigatableWidgetBase
		constexpr auto SignalEntrySelected = 0x318; // FScriptMulticastDelegate
		constexpr auto SignalSelected = 0x328; // FScriptMulticastDelegate
		constexpr auto SignalNavigateVerticaly = 0x338; // FScriptMulticastDelegate
		constexpr auto SignalDeselected = 0x348; // FScriptMulticastDelegate
		constexpr auto HoveredSound = 0x358; // USoundBase*
		constexpr auto DisableContainerNavigation = 0x380; // bool
	}

	namespace n_UGamepadHelpEntryBase { // : URootWidget
		constexpr auto ActionTutorialClass = 0x318; // UActionTutorial*
		constexpr auto TextFont = 0x320; // FSlateFontInfo
		constexpr auto IconSize = 0x388; // float
	}

	namespace n_UW_EditableLabeledSlider_C { // : UEditableLabeledSlider
		constexpr auto UberGraphFrame = 0xe40; // FPointerToUberGraphFrame
		constexpr auto Image_13 = 0xe48; // UImage*
		constexpr auto S_Value = 0xe50; // UW_FCSlider_C*
		constexpr auto TXT_Value = 0xe58; // UW_FCEditableTextBlock_C*
		constexpr auto Value Change Sound = 0xe60; // USoundCue*
	}

	namespace n_UParticleModuleVectorFieldRotation { // : UParticleModuleVectorFieldBase
		constexpr auto MinInitialRotation = 0x30; // FVector
		constexpr auto MaxInitialRotation = 0x3c; // FVector
	}

	namespace n_AStartupGameMode_C { // : AGameMode
		constexpr auto DefaultSceneRoot = 0x4d0; // USceneComponent*
	}

	namespace n_USceneCaptureComponent { // : USceneComponent
		constexpr auto HiddenComponents = 0x300; // TArray<TWeakObjectPtr<UPrimitiveComponent>>
		constexpr auto HiddenActors = 0x310; // TArray<AActor*>
		constexpr auto HiddenClasses = 0x320; // TArray<AActor*>
		constexpr auto ShowOnlyComponents = 0x330; // TArray<TWeakObjectPtr<UPrimitiveComponent>>
		constexpr auto ShowOnlyActors = 0x340; // TArray<AActor*>
		constexpr auto bCaptureEveryFrame = 0x350; // bool
		constexpr auto bCaptureOnMovement = 0x351; // bool
		constexpr auto MaxViewDistanceOverride = 0x354; // float
		constexpr auto ShowFlagSettings = 0x358; // TArray<FEngineShowFlagsSetting>
		constexpr auto OrthoNearClipPlane = 0x37c; // float
		constexpr auto OrthoFarClipPlane = 0x380; // float
		constexpr auto AspectRatio = 0x384; // float
		constexpr auto ProjectionMode = 0x388; // ECameraProjectionMode
	}

	namespace n_ULightmappedSurfaceCollection { // : UObject
		constexpr auto SourceModel = 0x28; // UModel*
		constexpr auto Surfaces = 0x30; // TArray<int32_t>
	}

	namespace n_UParticleModuleSize_Seeded { // : UParticleModuleSize
		constexpr auto RandomSeedInfo = 0x80; // FParticleRandomSeedInfo
	}

	namespace n_ADWPlayerController { // : APlayerController
		constexpr auto Player = 0x438; // UPlayer*
		constexpr auto AcknowledgedPawn = 0x448; // APawn*
		constexpr auto ControllingDirTrackInst = 0x450; // UInterpTrackInstDirector*
		constexpr auto MyHUD = 0x460; // AHUD*
		constexpr auto PlayerCameraManager = 0x468; // APlayerCameraManager*
		constexpr auto PlayerCameraManagerClass = 0x470; // APlayerCameraManager*
		constexpr auto bAutoManageActiveCameraTarget = 0x478; // bool
		constexpr auto TargetViewRotation = 0x47c; // FRotator
		constexpr auto SmoothTargetViewRotationSpeed = 0x494; // float
		constexpr auto HiddenActors = 0x498; // TArray<AActor*>
		constexpr auto LastSpectatorStateSynchTime = 0x4a8; // float
		constexpr auto LastSpectatorSyncLocation = 0x4ac; // FVector
		constexpr auto LastSpectatorSyncRotation = 0x4b8; // FRotator
		constexpr auto ClientCap = 0x4c4; // int32_t
		constexpr auto CheatManager = 0x4c8; // UCheatManager*
		constexpr auto CheatClass = 0x4d0; // UCheatManager*
		constexpr auto PlayerInput = 0x4d8; // UPlayerInput*
		constexpr auto ActiveForceFeedbackEffects = 0x4e0; // TArray<FActiveForceFeedbackEffect>
		constexpr auto bPlayerIsWaiting = 0x580; // char : 1
		constexpr auto NetPlayerIndex = 0x584; // char
		constexpr auto PendingSwapConnection = 0x588; // UNetConnection*
		constexpr auto NetConnection = 0x590; // UNetConnection*
		constexpr auto InputYawScale = 0x5a8; // float
		constexpr auto InputPitchScale = 0x5ac; // float
		constexpr auto InputRollScale = 0x5b0; // float
		constexpr auto bShowMouseCursor = 0x5b4; // char : 1
		constexpr auto bEnableClickEvents = 0x5b4; // char : 1
		constexpr auto bEnableTouchEvents = 0x5b4; // char : 1
		constexpr auto bEnableMouseOverEvents = 0x5b4; // char : 1
		constexpr auto bEnableTouchOverEvents = 0x5b4; // char : 1
		constexpr auto bForceFeedbackEnabled = 0x5b4; // char : 1
		constexpr auto bKeepPawnAliveOnControllerDeath = 0x5b4; // char : 1
		constexpr auto ClickEventKeys = 0x5b8; // TArray<FKey>
		constexpr auto DefaultMouseCursor = 0x5c8; // EMouseCursor
		constexpr auto CurrentMouseCursor = 0x5c9; // EMouseCursor
		constexpr auto DefaultClickTraceChannel = 0x5ca; // ECollisionChannel
		constexpr auto CurrentClickTraceChannel = 0x5cb; // ECollisionChannel
		constexpr auto HitResultTraceDistance = 0x5cc; // float
		constexpr auto InactiveStateInputComponent = 0x650; // UInputComponent*
		constexpr auto CurrentTouchInterface = 0x670; // UTouchInterface*
		constexpr auto SpectatorPawn = 0x6b8; // ASpectatorPawn*
		constexpr auto SpawnLocation = 0x6c0; // FVector
		constexpr auto bIsLocalPlayerController = 0x6d0; // bool
		constexpr auto SeamlessTravelCount = 0x6d2; // uint16_t
		constexpr auto LastCompletedSeamlessTravelCount = 0x6d4; // uint16_t
	}

	namespace n_UGetUserUniqueIDCallProxy { // : UBlueprintAsyncActionBase
		constexpr auto onSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto onFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_UWidgetBlueprintGeneratedClass { // : UBlueprintGeneratedClass
		constexpr auto WidgetTree = 0x358; // UWidgetTree*
		constexpr auto bAllowTemplate = 0x360; // bool
		constexpr auto Bindings = 0x368; // TArray<FDelegateRuntimeBinding>
		constexpr auto Animations = 0x378; // TArray<UWidgetAnimation*>
		constexpr auto NamedSlots = 0x388; // TArray<FName>
		constexpr auto bValidTemplate = 0x398; // bool
		constexpr auto bTemplateInitialized = 0x399; // bool
		constexpr auto bCookedTemplate = 0x39a; // bool
		constexpr auto TemplateAsset = 0x3a0; // UUserWidget*
		constexpr auto Template = 0x3c0; // UUserWidget*
	}

	namespace n_AOnlineBeaconHost { // : AOnlineBeacon
		constexpr auto ListenPort = 0x3f0; // int32_t
		constexpr auto ClientActors = 0x3f8; // TArray<AOnlineBeaconClient*>
	}

	namespace n_UPaperFlipbook { // : UObject
		constexpr auto FramesPerSecond = 0x28; // float
		constexpr auto KeyFrames = 0x30; // TArray<FPaperFlipbookKeyFrame>
		constexpr auto DefaultMaterial = 0x40; // UMaterialInterface*
		constexpr auto CollisionSource = 0x48; // EFlipbookCollisionMode
	}

	namespace n_UDeleteCharacterCallProxy { // : UBlueprintAsyncActionBase
		constexpr auto onSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto onFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_UBTDecorator_DoesPathExist { // : UBTDecorator
		constexpr auto BlackboardKeyA = 0x68; // FBlackboardKeySelector
		constexpr auto BlackboardKeyB = 0x90; // FBlackboardKeySelector
		constexpr auto bUseSelf = 0xb8; // char : 1
		constexpr auto PathQueryType = 0xbc; // EPathExistanceQueryType
		constexpr auto FilterClass = 0xc0; // UNavigationQueryFilter*
	}

	namespace n_UMovieSceneFloatSection { // : UMovieSceneSection
		constexpr auto FloatCurve = 0xd0; // FRichCurve
	}

	namespace n_UNpcDebugWindow { // : URootWidget
		constexpr auto SpawnNameValue = 0x318; // UTextBlock*
		constexpr auto AiLodValue = 0x320; // UTextBlock*
		constexpr auto BtInfoValue = 0x328; // UTextBlock*
		constexpr auto BehaviourVal = 0x330; // UTextBlock*
		constexpr auto TacticVal = 0x338; // UTextBlock*
		constexpr auto TargetVal = 0x340; // UTextBlock*
		constexpr auto DistanceVal = 0x348; // UTextBlock*
		constexpr auto MoveTypeVal = 0x350; // UTextBlock*
		constexpr auto BlackboardVal = 0x358; // UTextBlock*
		constexpr auto SpawnNameBox = 0x360; // UBorder*
		constexpr auto AiLodBox = 0x368; // UBorder*
		constexpr auto BtInfoBox = 0x370; // UBorder*
		constexpr auto BehaviourBox = 0x378; // UBorder*
		constexpr auto TacticBox = 0x380; // UBorder*
		constexpr auto TargetBox = 0x388; // UBorder*
		constexpr auto DistanceBox = 0x390; // UBorder*
		constexpr auto MoveTypeBox = 0x398; // UBorder*
		constexpr auto BlackboardBox = 0x3a0; // UBorder*
	}

	namespace n_ULayer { // : UObject
		constexpr auto LayerName = 0x28; // FName
		constexpr auto bIsVisible = 0x30; // char : 1
		constexpr auto ActorStats = 0x38; // TArray<FLayerActorStats>
	}

	namespace n_AScreenshotFunctionalTest { // : AFunctionalTest
		constexpr auto ScreenshotCamera = 0x500; // UCameraComponent*
		constexpr auto ScreenshotOptions = 0x508; // FAutomationScreenshotOptions
	}

	namespace n_UEndUserSettings { // : UObject
		constexpr auto bSendAnonymousUsageDataToEpic = 0x30; // bool
		constexpr auto bSendMeanTimeBetweenFailureDataToEpic = 0x31; // bool
		constexpr auto bAllowUserIdInUsageData = 0x32; // bool
	}

	namespace n_UW_Settings_Video_C { // : USettingsVideoBase
		constexpr auto UberGraphFrame = 0x458; // FPointerToUberGraphFrame
		constexpr auto B_SafeZone = 0x460; // UW_ButtonCustom_C*
		constexpr auto CB_FilmGrain = 0x468; // UW_ButtonNormal_C*
		constexpr auto CB_LowEndLaptopMode = 0x470; // UW_ButtonNormal_C*
		constexpr auto CB_MotionBlur = 0x478; // UW_ButtonNormal_C*
		constexpr auto CB_VolumetricFog = 0x480; // UW_ButtonNormal_C*
		constexpr auto CB_Vsync = 0x488; // UW_ButtonNormal_C*
		constexpr auto CBS_AntiAliasing = 0x490; // UW_FCComboBoxString_C*
		constexpr auto CBS_ConsoleGraphicsPreset = 0x498; // UW_FCComboBoxString_C*
		constexpr auto CBS_EffectsQuality = 0x4a0; // UW_FCComboBoxString_C*
		constexpr auto CBS_FoliageQuality = 0x4a8; // UW_FCComboBoxString_C*
		constexpr auto CBS_GeneralShadows = 0x4b0; // UW_FCComboBoxString_C*
		constexpr auto CBS_GraphicsQuality = 0x4b8; // UW_FCComboBoxString_C*
		constexpr auto CBS_MaxFPS = 0x4c0; // UW_FCComboBoxString_C*
		constexpr auto CBS_PostProcessing = 0x4c8; // UW_FCComboBoxString_C*
		constexpr auto CBS_Resolution = 0x4d0; // UW_FCComboBoxString_C*
		constexpr auto CBS_ResolutionLabel = 0x4d8; // UTextBlock*
		constexpr auto CBS_TerrainShadows = 0x4e0; // UW_FCComboBoxString_C*
		constexpr auto CBS_TextureQuality = 0x4e8; // UW_FCComboBoxString_C*
		constexpr auto CBS_ViewDistance = 0x4f0; // UW_FCComboBoxString_C*
		constexpr auto CBS_WindowMode = 0x4f8; // UW_FCComboBoxString_C*
		constexpr auto GRID_CONSOLEPERFORMANCEMODE = 0x500; // UGridPanel*
		constexpr auto GRID_FOV = 0x508; // UGridPanel*
		constexpr auto GRID_FPS = 0x510; // UGridPanel*
		constexpr auto GRID_Gamma = 0x518; // UGridPanel*
		constexpr auto GRID_GRAPHICSQUALITY = 0x520; // UGridPanel*
		constexpr auto GRID_MotionBlur = 0x528; // UGridPanel*
		constexpr auto Grid_SafeZone = 0x530; // UGridPanel*
		constexpr auto GRID_VolumetricFog = 0x538; // UGridPanel*
		constexpr auto GRID_VSYNC = 0x540; // UGridPanel*
		constexpr auto GRID_WinRes = 0x548; // UGridPanel*
		constexpr auto Overlay_4 = 0x550; // UOverlay*
		constexpr auto S_FOV = 0x558; // UW_EditableLabeledSlider_C*
		constexpr auto S_Gamma = 0x560; // UW_EditableLabeledSlider_C*
		constexpr auto TextHFOVValue = 0x568; // UTextBlock*
	}

	namespace n_APlayerCameraManager { // : AActor
		constexpr auto PCOwner = 0x3d0; // APlayerController*
		constexpr auto TransformComponent = 0x3d8; // USceneComponent*
		constexpr auto DefaultFOV = 0x3e8; // float
		constexpr auto DefaultOrthoWidth = 0x3f0; // float
		constexpr auto DefaultAspectRatio = 0x3f8; // float
		constexpr auto CameraCache = 0x440; // FCameraCacheEntry
		constexpr auto LastFrameCameraCache = 0x970; // FCameraCacheEntry
		constexpr auto ViewTarget = 0xea0; // FTViewTarget
		constexpr auto PendingViewTarget = 0x13e0; // FTViewTarget
		constexpr auto ModifierList = 0x1938; // TArray<UCameraModifier*>
		constexpr auto DefaultModifiers = 0x1948; // TArray<UCameraModifier*>
		constexpr auto FreeCamDistance = 0x1958; // float
		constexpr auto FreeCamOffset = 0x195c; // FVector
		constexpr auto ViewTargetOffset = 0x1968; // FVector
		constexpr auto CameraLensEffects = 0x1988; // TArray<AEmitterCameraLensEffectBase*>
		constexpr auto CachedCameraShakeMod = 0x1998; // UCameraModifier_CameraShake*
		constexpr auto AnimInstPool = 0x19a0; // UCameraAnimInst* [0x8]
		constexpr auto PostProcessBlendCache = 0x19e0; // TArray<FPostProcessSettings>
		constexpr auto ActiveAnims = 0x1a00; // TArray<UCameraAnimInst*>
		constexpr auto FreeAnims = 0x1a10; // TArray<UCameraAnimInst*>
		constexpr auto AnimCameraActor = 0x1a20; // ACameraActor*
		constexpr auto bIsOrthographic = 0x1a28; // char : 1
		constexpr auto bUseClientSideCameraUpdates = 0x1a28; // char : 1
		constexpr auto ViewPitchMin = 0x1a2c; // float
		constexpr auto ViewPitchMax = 0x1a30; // float
		constexpr auto ViewYawMin = 0x1a34; // float
		constexpr auto ViewYawMax = 0x1a38; // float
		constexpr auto ViewRollMin = 0x1a3c; // float
		constexpr auto ViewRollMax = 0x1a40; // float
	}

	namespace n_UW_RootContainer_C { // : URootWidget
		constexpr auto Root = 0x318; // UNamedSlot*
	}

	namespace n_UMaterialExpressionAdd { // : UMaterialExpression
		constexpr auto A = 0x60; // FExpressionInput
		constexpr auto B = 0x98; // FExpressionInput
		constexpr auto ConstA = 0xd0; // float
		constexpr auto ConstB = 0xd4; // float
	}

	namespace n_UKeyNavIndicator { // : URootWidget
		constexpr auto KeyNavOnSelectedEvent = 0x240; // FScriptMulticastDelegate
		constexpr auto KeyNavLeft = 0x250; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavRight = 0x258; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavAbove = 0x260; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavBelow = 0x268; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavTab = 0x270; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildLeft = 0x278; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildRight = 0x280; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildAbove = 0x288; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildBelow = 0x290; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildTab = 0x298; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildren = 0x2a0; // TWeakObjectPtr<URootWidget>
		constexpr auto TooltipWidgetClass = 0x2a8; // UTooltipWidget*
		constexpr auto KeyNavIndicatorClass = 0x2b0; // UKeyNavIndicator*
		constexpr auto PositiveFeedbackColor = 0x2b8; // FLinearColor
		constexpr auto NegativeFeedbackColor = 0x2c8; // FLinearColor
		constexpr auto NeutralFeedbackColor = 0x2d8; // FLinearColor
		constexpr auto KeyNavFocusOnClick = 0x2e8; // bool
		constexpr auto KeyNavAutoSetBack = 0x2e9; // bool
		constexpr auto m_Window = 0x2f0; // UWindowRoot*
		constexpr auto m_Parent = 0x2f8; // TWeakObjectPtr<URootWidget>
		constexpr auto m_KeyNavIndicator = 0x300; // UKeyNavIndicator*
	}

	namespace n_UMaterialExpressionArccosine { // : UMaterialExpression
		constexpr auto Input = 0x60; // FExpressionInput
	}

	namespace n_USessionInviteEntry { // : URootWidget
		constexpr auto KeyNavOnSelectedEvent = 0x240; // FScriptMulticastDelegate
		constexpr auto KeyNavLeft = 0x250; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavRight = 0x258; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavAbove = 0x260; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavBelow = 0x268; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavTab = 0x270; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildLeft = 0x278; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildRight = 0x280; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildAbove = 0x288; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildBelow = 0x290; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildTab = 0x298; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildren = 0x2a0; // TWeakObjectPtr<URootWidget>
		constexpr auto TooltipWidgetClass = 0x2a8; // UTooltipWidget*
		constexpr auto KeyNavIndicatorClass = 0x2b0; // UKeyNavIndicator*
		constexpr auto PositiveFeedbackColor = 0x2b8; // FLinearColor
		constexpr auto NegativeFeedbackColor = 0x2c8; // FLinearColor
		constexpr auto NeutralFeedbackColor = 0x2d8; // FLinearColor
		constexpr auto KeyNavFocusOnClick = 0x2e8; // bool
		constexpr auto KeyNavAutoSetBack = 0x2e9; // bool
		constexpr auto m_Window = 0x2f0; // UWindowRoot*
		constexpr auto m_Parent = 0x2f8; // TWeakObjectPtr<URootWidget>
		constexpr auto m_KeyNavIndicator = 0x300; // UKeyNavIndicator*
	}

	namespace n_ASoundRegistry { // : AInfo
		constexpr auto TimeOfDayComponents = 0x3d8; // TSet<UConanAudioComponent*>
	}

	namespace n_UUniformGridSlot { // : UPanelSlot
		constexpr auto HorizontalAlignment = 0x38; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x39; // EVerticalAlignment
		constexpr auto Row = 0x3c; // int32_t
		constexpr auto Column = 0x40; // int32_t
	}

	namespace n_UPhysicsConstraintTemplate { // : UObject
		constexpr auto DefaultInstance = 0x30; // FConstraintInstance
		constexpr auto ProfileHandles = 0x220; // TArray<FPhysicsConstraintProfileHandle>
		constexpr auto DefaultProfile = 0x230; // FConstraintProfileProperties
	}

	namespace n_UCloudStorageBase { // : UPlatformInterfaceBase
		constexpr auto LocalCloudFiles = 0x38; // TArray<FString>
		constexpr auto bSuppressDelegateCalls = 0x48; // char : 1
	}

	namespace n_USplineMeshComponent { // : UStaticMeshComponent
		constexpr auto SplineParams = 0x830; // FSplineMeshParams
		constexpr auto SplineUpDir = 0x888; // FVector
		constexpr auto bAllowSplineEditingPerInstance = 0x894; // char : 1
		constexpr auto bSmoothInterpRollScale = 0x894; // char : 1
		constexpr auto ForwardAxis = 0x898; // ESplineMeshAxis
		constexpr auto SplineBoundaryMin = 0x89c; // float
		constexpr auto SplineBoundaryMax = 0x8a0; // float
		constexpr auto BodySetup = 0x8a8; // UBodySetup*
		constexpr auto CachedMeshBodySetupGuid = 0x8b0; // FGuid
		constexpr auto bMeshDirty = 0x8c0; // char : 1
	}

	namespace n_UServerRentalBase { // : UWindowRoot
		constexpr auto m_CurrentExpandedServerDetails = 0x398; // UServerRentalServerDetails*
		constexpr auto ServerRentalDetailClass = 0x3a0; // UServerRentalServerDetails*
		constexpr auto m_ServerRentalRequestConnection = 0x3a8; // UServerRentalRequestConnection*
	}

	namespace n_UOverlaySlot { // : UPanelSlot
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UMaterialExpressionParticleRadius { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto Desc = 0x38; // FString
		constexpr auto BorderColor = 0x48; // FColor
		constexpr auto bRealtimePreview = 0x4c; // char : 1
		constexpr auto bNeedToUpdatePreview = 0x4c; // char : 1
		constexpr auto bIsParameterExpression = 0x4c; // char : 1
		constexpr auto bCommentBubbleVisible = 0x4c; // char : 1
		constexpr auto bShowOutputNameOnPin = 0x4c; // char : 1
		constexpr auto bHidePreviewWindow = 0x4c; // char : 1
		constexpr auto bCollapsed = 0x4c; // char : 1
		constexpr auto bShaderInputData = 0x4c; // char : 1
		constexpr auto bShowInputs = 0x4c; // char : 1
		constexpr auto bShowOutputs = 0x4c; // char : 1
		constexpr auto Outputs = 0x50; // TArray<FExpressionOutput>
	}

	namespace n_UMaterialExpressionFresnel { // : UMaterialExpression
		constexpr auto ExponentIn = 0x60; // FExpressionInput
		constexpr auto Exponent = 0x98; // float
		constexpr auto BaseReflectFractionIn = 0xa0; // FExpressionInput
		constexpr auto BaseReflectFraction = 0xd8; // float
		constexpr auto Normal = 0xe0; // FExpressionInput
	}

	namespace n_UInt32Binding { // : UPropertyBinding
		constexpr auto SourceObject = 0x28; // TWeakObjectPtr<UObject>
		constexpr auto SourcePath = 0x30; // FDynamicPropertyPath
		constexpr auto DestinationProperty = 0x40; // FName
	}

	namespace n_UPlayerInventoryView { // : UChestInventoryView
		constexpr auto m_BackpackInventory = 0x388; // UItemInventory*
		constexpr auto m_ShortcutbarInventory = 0x390; // UItemInventory*
	}

	namespace n_USpacer { // : UWidget
		constexpr auto Size = 0x118; // FVector2D
	}

	namespace n_UAnimNotifyState { // : UObject
		constexpr auto bDefaultTriggerOnDedicatedServer = 0x28; // bool
	}

	namespace n_ABoxReflectionCapture { // : AReflectionCapture
		constexpr auto CaptureComponent = 0x3d0; // UReflectionCaptureComponent*
	}

	namespace n_UButtonStyleAsset { // : UObject
		constexpr auto ButtonStyle = 0x28; // FButtonStyle
	}

	namespace n_UChatWindow { // : UWindowRoot
		constexpr auto ChatLineClass = 0x398; // UUserWidget*
		constexpr auto SystemMessageColor = 0x3a0; // FColor
		constexpr auto GlobalMessageColor = 0x3a4; // FColor
		constexpr auto LocalMessageColor = 0x3a8; // FColor
		constexpr auto GuildMessageColor = 0x3ac; // FColor
		constexpr auto MeMessageColor = 0x3b0; // FColor
		constexpr auto GeneratedMessageColor = 0x3b4; // FColor
	}

	namespace n_UMovieSceneFadeSection { // : UMovieSceneFloatSection
		constexpr auto FadeColor = 0x140; // FLinearColor
		constexpr auto bFadeAudio = 0x150; // char : 1
	}

	namespace n_UPieRenderWidget { // : UCustomRenderWidget
		constexpr auto Texture = 0x128; // UTexture2D*
		constexpr auto ColorAndOpacity = 0x130; // FLinearColor
		constexpr auto StartAngle = 0x140; // float
		constexpr auto AngleSpan = 0x144; // float
		constexpr auto InnerRadius = 0x148; // float
		constexpr auto OuterRadius = 0x14c; // float
	}

	namespace n_AConanSoundStage { // : ASoundStage
		constexpr auto GroupDefinition = 0x3d0; // TArray<FGroupDefinition>
		constexpr auto AudioComponents = 0x3e0; // TArray<UConanAudioComponent*>
		constexpr auto AudioInfo = 0x3f0; // TArray<FSoundStageInfo>
	}

	namespace n_USubsurfaceProfile { // : UObject
		constexpr auto Settings = 0x28; // FSubsurfaceProfileStruct
	}

	namespace n_UAITask { // : UGameplayTask
		constexpr auto OwnerController = 0x68; // AAIController*
	}

	namespace n_UBlackboardKeyType_Object { // : UBlackboardKeyType
		constexpr auto BaseClass = 0x30; // UObject*
	}

	namespace n_UUserInterfaceSettings { // : UDeveloperSettings
		constexpr auto RenderFocusRule = 0x38; // ERenderFocusRule
		constexpr auto DefaultCursor = 0x40; // FStringClassReference
		constexpr auto TextEditBeamCursor = 0x50; // FStringClassReference
		constexpr auto CrosshairsCursor = 0x60; // FStringClassReference
		constexpr auto HandCursor = 0x70; // FStringClassReference
		constexpr auto GrabHandCursor = 0x80; // FStringClassReference
		constexpr auto GrabHandClosedCursor = 0x90; // FStringClassReference
		constexpr auto SlashedCircleCursor = 0xa0; // FStringClassReference
		constexpr auto ApplicationScale = 0xb0; // float
		constexpr auto UIScaleRule = 0xb4; // EUIScalingRule
		constexpr auto CustomScalingRuleClass = 0xb8; // FStringClassReference
		constexpr auto UIScaleCurve = 0xc8; // FRuntimeFloatCurve
		constexpr auto bLoadWidgetsOnDedicatedServer = 0x140; // bool
		constexpr auto CursorClasses = 0x148; // TArray<UObject*>
		constexpr auto CustomScalingRuleClassInstance = 0x158; // UObject*
		constexpr auto CustomScalingRule = 0x160; // UDPICustomScalingRule*
	}

	namespace n_UParticleModuleVelocityInheritParent { // : UParticleModuleVelocityBase
		constexpr auto Scale = 0x38; // FRawDistributionVector
	}

	namespace n_UMaterialExpressionCustom { // : UMaterialExpression
		constexpr auto code = 0x60; // FString
		constexpr auto OutputType = 0x70; // ECustomMaterialOutputType
		constexpr auto Description = 0x78; // FString
		constexpr auto Inputs = 0x88; // TArray<FCustomInput>
	}

	namespace n_UMaterialExpressionMaterialFunctionCall { // : UMaterialExpression
		constexpr auto MaterialFunction = 0x60; // UMaterialFunction*
		constexpr auto FunctionInputs = 0x68; // TArray<FFunctionExpressionInput>
		constexpr auto FunctionOutputs = 0x78; // TArray<FFunctionExpressionOutput>
	}

	namespace n_URotatingMovementComponent { // : UMovementComponent
		constexpr auto RotationRate = 0x150; // FRotator
		constexpr auto PivotTranslation = 0x15c; // FVector
		constexpr auto bRotationInLocalSpace = 0x168; // char : 1
	}

	namespace n_UInputTouchDelegateBinding { // : UInputDelegateBinding
		constexpr auto InputTouchDelegateBindings = 0x28; // TArray<FBlueprintInputTouchDelegateBinding>
	}

	namespace n_UQuickLootPanel { // : URootWidget
		constexpr auto m_HasOwnership = 0x318; // bool
		constexpr auto LootOneSound = 0x320; // USoundBase*
		constexpr auto LootAllSound = 0x340; // USoundBase*
		constexpr auto m_Actor = 0x360; // AActor*
	}

	namespace n_UW_DropDownText_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x240; // FPointerToUberGraphFrame
		constexpr auto Label = 0x248; // UTextBlock*
	}

	namespace n_UW_InputBox_C { // : UInputBoxWidget
		constexpr auto B_Cancel = 0x3e0; // UW_ButtonLarge_C*
		constexpr auto B_OK = 0x3e8; // UW_ButtonLarge_C*
		constexpr auto ETXT_Input = 0x3f0; // UW_FCEditableTextBlock_C*
		constexpr auto Image_1 = 0x3f8; // UImage*
		constexpr auto TXT_Description = 0x400; // UTextBlock*
	}

	namespace n_UGeneralProjectSettings { // : UObject
		constexpr auto CompanyName = 0x28; // FString
		constexpr auto CompanyDistinguishedName = 0x38; // FString
		constexpr auto CopyrightNotice = 0x48; // FString
		constexpr auto Description = 0x58; // FString
		constexpr auto Homepage = 0x68; // FString
		constexpr auto LicensingTerms = 0x78; // FString
		constexpr auto PrivacyPolicy = 0x88; // FString
		constexpr auto ProjectID = 0x98; // FGuid
		constexpr auto ProjectName = 0xa8; // FString
		constexpr auto ProjectVersion = 0xb8; // FString
		constexpr auto SupportContact = 0xc8; // FString
		constexpr auto ProjectDisplayedTitle = 0xd8; // FText
		constexpr auto ProjectDebugTitleInfo = 0xf0; // FText
		constexpr auto bShouldWindowPreserveAspectRatio = 0x108; // bool
		constexpr auto bUseBorderlessWindow = 0x109; // bool
		constexpr auto bStartInVR = 0x10a; // bool
		constexpr auto bAllowWindowResize = 0x10b; // bool
		constexpr auto bAllowClose = 0x10c; // bool
		constexpr auto bAllowMaximize = 0x10d; // bool
		constexpr auto bAllowMinimize = 0x10e; // bool
	}

	namespace n_UFriendRequestGame { // : UWindowRoot
		constexpr auto FriendsWindowBase = 0x398; // UFriendsGame*
		constexpr auto EntryViewClass = 0x3a0; // UFriendRequestEntry*
		constexpr auto NumReceivedFriendRequests = 0x3a8; // int32_t
		constexpr auto NumSentFriendRequests = 0x3ac; // int32_t
	}

	namespace n_UDemoPendingNetGame { // : UPendingNetGame
		constexpr auto NetDriver = 0x30; // UNetDriver*
		constexpr auto DemoNetDriver = 0x38; // UDemoNetDriver*
	}

	namespace n_UNavAreaMeta_SwitchByAgent { // : UNavAreaMeta
		constexpr auto Agent0Area = 0x40; // UNavArea*
		constexpr auto Agent1Area = 0x48; // UNavArea*
		constexpr auto Agent2Area = 0x50; // UNavArea*
		constexpr auto Agent3Area = 0x58; // UNavArea*
		constexpr auto Agent4Area = 0x60; // UNavArea*
		constexpr auto Agent5Area = 0x68; // UNavArea*
		constexpr auto Agent6Area = 0x70; // UNavArea*
		constexpr auto Agent7Area = 0x78; // UNavArea*
		constexpr auto Agent8Area = 0x80; // UNavArea*
		constexpr auto Agent9Area = 0x88; // UNavArea*
		constexpr auto Agent10Area = 0x90; // UNavArea*
		constexpr auto Agent11Area = 0x98; // UNavArea*
		constexpr auto Agent12Area = 0xa0; // UNavArea*
		constexpr auto Agent13Area = 0xa8; // UNavArea*
		constexpr auto Agent14Area = 0xb0; // UNavArea*
		constexpr auto Agent15Area = 0xb8; // UNavArea*
	}

	namespace n_UHighlightsSetVideoAsync { // : UBlueprintAsyncActionBase
		constexpr auto onSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto onFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_UW_Settings_Control_C { // : USettingsControlBase
		constexpr auto UberGraphFrame = 0x390; // FPointerToUberGraphFrame
		constexpr auto Category = 0x398; // UTextBlock*
		constexpr auto CB_InvertBowControls = 0x3a0; // UW_ButtonNormal_C*
		constexpr auto CB_MouseInvertY = 0x3a8; // UW_ButtonNormal_C*
		constexpr auto CB_RightAxisInvertY = 0x3b0; // UW_ButtonNormal_C*
		constexpr auto ControllerCategory = 0x3b8; // UTextBlock*
		constexpr auto MouseSettings = 0x3c0; // UGridPanel*
		constexpr auto S_AimSensitivity = 0x3c8; // UW_EditableLabeledSlider_C*
		constexpr auto S_LeftAxisDeadzone = 0x3d0; // UW_EditableLabeledSlider_C*
		constexpr auto S_RightAxisAimSensitivity = 0x3d8; // UW_EditableLabeledSlider_C*
		constexpr auto S_RightAxisDeadzone = 0x3e0; // UW_EditableLabeledSlider_C*
		constexpr auto S_RightAxisSensitivity = 0x3e8; // UW_EditableLabeledSlider_C*
		constexpr auto S_Sensitivity = 0x3f0; // UW_EditableLabeledSlider_C*
	}

	namespace n_UEngineMessage { // : ULocalMessage
		constexpr auto FailedPlaceMessage = 0x28; // FString
		constexpr auto MaxedOutMessage = 0x38; // FString
		constexpr auto EnteredMessage = 0x48; // FString
		constexpr auto LeftMessage = 0x58; // FString
		constexpr auto GlobalNameChange = 0x68; // FString
		constexpr auto SpecEnteredMessage = 0x78; // FString
		constexpr auto NewPlayerMessage = 0x88; // FString
		constexpr auto NewSpecMessage = 0x98; // FString
	}

	namespace n_ADynamicSkyBase { // : AActor
		constexpr auto TimeManager = 0x3d0; // AConanTimeOfDayManager*
		constexpr auto AnimateDayNight = 0x3d8; // bool
		constexpr auto TimeOfDay = 0x3dc; // float
	}

	namespace n_UVectorFieldStatic { // : UVectorField
		constexpr auto SizeX = 0x48; // int32_t
		constexpr auto SizeY = 0x4c; // int32_t
		constexpr auto SizeZ = 0x50; // int32_t
	}

	namespace n_UFCProgressbar { // : URootWidget
		constexpr auto progress = 0x318; // float
		constexpr auto Segments = 0x320; // TArray<FFCProgressbarSegment>
		constexpr auto m_ProgressBars = 0x338; // TArray<UProgressBar*>
	}

	namespace n_UInteractiveFoliageComponent { // : UStaticMeshComponent
		constexpr auto ForcedLodModel = 0x7c8; // int32_t
		constexpr auto PreviousLODLevel = 0x7cc; // int32_t
		constexpr auto StaticMesh = 0x7d0; // UStaticMesh*
		constexpr auto MinLOD = 0x7d8; // int32_t
		constexpr auto SubDivisionStepSize = 0x7dc; // int32_t
		constexpr auto bOverrideMinLOD = 0x7e0; // char : 1
		constexpr auto bOverrideNavigationExport = 0x7e0; // char : 1
		constexpr auto bForceNavigationObstacle = 0x7e0; // char : 1
		constexpr auto bDisallowMeshPaintPerInstance = 0x7e0; // char : 1
		constexpr auto bUseDefaultCollision = 0x7e0; // char : 1
		constexpr auto bUseSubDivisions = 0x7e0; // char : 1
		constexpr auto bIgnoreInstanceForTextureStreaming = 0x7e0; // char : 1
		constexpr auto bOverrideLightMapRes = 0x7e0; // char : 1
		constexpr auto bCastDistanceFieldIndirectShadow = 0x7e0; // char : 1
		constexpr auto OverriddenLightMapRes = 0x7e4; // int32_t
		constexpr auto DistanceFieldIndirectShadowMinVisibility = 0x7e8; // float
		constexpr auto StreamingDistanceMultiplier = 0x7ec; // float
		constexpr auto LODData = 0x7f0; // TArray<FStaticMeshComponentLODInfo>
		constexpr auto StreamingTextureData = 0x800; // TArray<FStreamingTextureBuildInfo>
		constexpr auto LightmassSettings = 0x810; // FLightmassPrimitiveSettings
	}

	namespace n_AGameNetworkManager { // : AInfo
		constexpr auto AdjustedNetSpeed = 0x3d0; // int32_t
		constexpr auto LastNetSpeedUpdateTime = 0x3d4; // float
		constexpr auto TotalNetBandwidth = 0x3d8; // int32_t
		constexpr auto MinDynamicBandwidth = 0x3dc; // int32_t
		constexpr auto MaxDynamicBandwidth = 0x3e0; // int32_t
		constexpr auto bIsStandbyCheckingEnabled = 0x3e4; // char : 1
		constexpr auto bHasStandbyCheatTriggered = 0x3e4; // char : 1
		constexpr auto StandbyRxCheatTime = 0x3e8; // float
		constexpr auto StandbyTxCheatTime = 0x3ec; // float
		constexpr auto BadPingThreshold = 0x3f0; // int32_t
		constexpr auto PercentMissingForRxStandby = 0x3f4; // float
		constexpr auto PercentMissingForTxStandby = 0x3f8; // float
		constexpr auto PercentForBadPing = 0x3fc; // float
		constexpr auto JoinInProgressStandbyWaitTime = 0x400; // float
		constexpr auto MoveRepSize = 0x404; // float
		constexpr auto MAXPOSITIONERRORSQUARED = 0x408; // float
		constexpr auto MAXLENIENTPOSITIONERRORSQUARED = 0x40c; // float
		constexpr auto MAXNEARZEROVELOCITYSQUARED = 0x410; // float
		constexpr auto CLIENTADJUSTUPDATECOST = 0x414; // float
		constexpr auto MAXCLIENTUPDATEINTERVAL = 0x418; // float
		constexpr auto MaxMoveDeltaTime = 0x41c; // float
		constexpr auto ClientAuthorativePosition = 0x420; // bool
		constexpr auto ClientErrorUpdateRateLimit = 0x424; // float
		constexpr auto bMovementTimeDiscrepancyDetection = 0x428; // bool
		constexpr auto bMovementTimeDiscrepancyResolution = 0x429; // bool
		constexpr auto MovementTimeDiscrepancyMaxTimeMargin = 0x42c; // float
		constexpr auto MovementTimeDiscrepancyMinTimeMargin = 0x430; // float
		constexpr auto MovementTimeDiscrepancyResolutionRate = 0x434; // float
		constexpr auto MovementTimeDiscrepancyDriftAllowance = 0x438; // float
		constexpr auto bMovementTimeDiscrepancyForceCorrectionsDuringResolution = 0x43c; // bool
		constexpr auto bUseDistanceBasedRelevancy = 0x43d; // bool
	}

	namespace n_UCrowdFollowingComponent { // : UPathFollowingComponent
		constexpr auto CrowdAgentMoveDirection = 0x3b0; // FVector
		constexpr auto CharacterMovement = 0x3c0; // UCharacterMovementComponent*
		constexpr auto AvoidanceGroup = 0x3c8; // FNavAvoidanceMask
		constexpr auto GroupsToAvoid = 0x3cc; // FNavAvoidanceMask
		constexpr auto GroupsToIgnore = 0x3d0; // FNavAvoidanceMask
	}

	namespace n_UParticleModuleAcceleration { // : UParticleModuleAccelerationBase
		constexpr auto Acceleration = 0x38; // FRawDistributionVector
		constexpr auto bApplyOwnerScale = 0x88; // char : 1
	}

	namespace n_UBTTask_WaitBlackboardTime { // : UBTTask_Wait
		constexpr auto BlackboardKey = 0x78; // FBlackboardKeySelector
	}

	namespace n_UPhysicsAsset { // : UObject
		constexpr auto BoundsBodies = 0x28; // TArray<int32_t>
		constexpr auto SkeletalBodySetups = 0x38; // TArray<USkeletalBodySetup*>
		constexpr auto ConstraintSetup = 0x48; // TArray<UPhysicsConstraintTemplate*>
		constexpr auto bUseAsyncScene = 0x58; // char : 1
		constexpr auto BodySetup = 0x100; // TArray<UBodySetup*>
	}

	namespace n_UCollisionProfile { // : UDeveloperSettings
		constexpr auto Profiles = 0x38; // TArray<FCollisionResponseTemplate>
		constexpr auto DefaultChannelResponses = 0x48; // TArray<FCustomChannelSetup>
		constexpr auto EditProfiles = 0x58; // TArray<FCustomProfile>
		constexpr auto ProfileRedirects = 0x68; // TArray<FRedirector>
		constexpr auto CollisionChannelRedirects = 0x78; // TArray<FRedirector>
	}

	namespace n_AMatineeActorCameraAnim { // : AMatineeActor
		constexpr auto CameraAnim = 0x478; // UCameraAnim*
	}

	namespace n_UScaleBox { // : UContentWidget
		constexpr auto Stretch = 0x130; // EStretch
		constexpr auto StretchDirection = 0x131; // EStretchDirection
		constexpr auto UserSpecifiedScale = 0x134; // float
		constexpr auto IgnoreInheritedScale = 0x138; // bool
		constexpr auto OnDesiredSizeChanged = 0x140; // FScriptMulticastDelegate
	}

	namespace n_UPreviewMeshCollection { // : UDataAsset
		constexpr auto Skeleton = 0x28; // USkeleton*
		constexpr auto SkeletalMeshes = 0x30; // TArray<FPreviewMeshCollectionEntry>
	}

	namespace n_UStaticMesh { // : UObject
		constexpr auto MinLOD = 0x40; // int32_t
		constexpr auto bUseConsoleMinLODOverride = 0x44; // bool
		constexpr auto ConsoleMinLODOverride = 0x48; // int32_t
		constexpr auto Materials = 0x50; // TArray<UMaterialInterface*>
		constexpr auto StaticMaterials = 0x60; // TArray<FStaticMaterial>
		constexpr auto LightmapUVDensity = 0x70; // float
		constexpr auto LightMapResolution = 0x74; // int32_t
		constexpr auto LightMapCoordinateIndex = 0x78; // int32_t
		constexpr auto bGenerateMeshDistanceField = 0x7c; // char : 1
		constexpr auto BodySetup = 0x80; // UBodySetup*
		constexpr auto LODForCollision = 0x88; // int32_t
		constexpr auto bStripComplexCollisionForConsole = 0x8c; // char : 1
		constexpr auto bHasNavigationData = 0x8c; // char : 1
		constexpr auto bLODsShareStaticLighting = 0x8c; // char : 1
		constexpr auto LpvBiasMultiplier = 0x90; // float
		constexpr auto bAllowCPUAccess = 0x94; // bool
		constexpr auto Sockets = 0xc8; // TArray<UStaticMeshSocket*>
		constexpr auto PositiveBoundsExtension = 0xe8; // FVector
		constexpr auto NegativeBoundsExtension = 0xf4; // FVector
		constexpr auto ExtendedBounds = 0x100; // FBoxSphereBounds
		constexpr auto ElementToIgnoreForTexFactor = 0x11c; // int32_t
		constexpr auto AssetUserData = 0x120; // TArray<UAssetUserData*>
		constexpr auto NavCollision = 0x130; // UNavCollision*
	}

	namespace n_UFeatWindow { // : UWindowRoot
		constexpr auto FeatResultRecipeInfoViewClass = 0x398; // UFeatResultRecipeInfoView*
		constexpr auto FeatGroupViewClass = 0x3a0; // UFeatGroupView*
		constexpr auto UpgradeSound = 0x3a8; // USoundBase*
		constexpr auto ResultListItemSpacing = 0x3c8; // float
		constexpr auto RecipeListPageScrollOffset = 0x3cc; // float
		constexpr auto BackgroundColorNotPurchaseable = 0x3d0; // FLinearColor
		constexpr auto BackgroundColorPurchaseable = 0x3e0; // FLinearColor
		constexpr auto BackgroundColorPurchased = 0x3f0; // FLinearColor
		constexpr auto FrameColorIsBlocking = 0x400; // FLinearColor
		constexpr auto FrameColorIsUnlocking = 0x410; // FLinearColor
		constexpr auto BorderOpen = 0x420; // UTexture2D*
		constexpr auto BorderNotPurchaseable = 0x428; // UTexture2D*
		constexpr auto BorderPurchaseable = 0x430; // UTexture2D*
		constexpr auto m_FeatGroupViews = 0x4e8; // TArray<UFeatGroupView*>
		constexpr auto m_FeatGroups = 0x4f8; // TArray<FFeatGroupNode>
		constexpr auto m_CornerStoneGroups = 0x508; // TArray<FFeatGroupNode>
		constexpr auto m_RewardList = 0x518; // TArray<UFeatResultRecipeInfoView*>
		constexpr auto m_DependencyInventory = 0x528; // UItemInventory*
		constexpr auto m_FeatsInventory = 0x530; // UItemInventory*
		constexpr auto m_FeatsItemIconPool = 0x538; // UObjectPool*
		constexpr auto m_FeatsItemSlotPool = 0x540; // UObjectPool*
		constexpr auto m_FeatList = 0x548; // TArray<UFeatItem*>
	}

	namespace n_UMovieSceneLevelVisibilityTrack { // : UMovieSceneNameableTrack
		constexpr auto Sections = 0xb8; // TArray<UMovieSceneSection*>
	}

	namespace n_UInterpTrackLinearColorBase { // : UInterpTrack
		constexpr auto LinearColorTrack = 0x70; // FInterpCurveLinearColor
		constexpr auto CurveTension = 0x88; // float
	}

	namespace n_UW_KeyBindings_Category_C { // : UKeyBindingsCategoryBase
		constexpr auto Bindings = 0x4c0; // UVerticalBox*
		constexpr auto Category = 0x4c8; // UTextBlock*
	}

	namespace n_UCraftingQueue { // : UItemInventory
		constexpr auto AcceptedFuels = 0x348; // TArray<int32_t>
		constexpr auto BurnTimeMultiplier = 0x358; // float
		constexpr auto CraftTimeMultiplier = 0x35c; // float
		constexpr auto CraftResultMultiplier = 0x360; // float
		constexpr auto MaterialUseMultiplier = 0x364; // float
		constexpr auto AutoScheduleRecipes = 0x368; // bool
		constexpr auto MachineRecipes = 0x370; // TArray<int32_t>
		constexpr auto MaxAutoCraftQueueSize = 0x380; // int32_t
		constexpr auto MachineBannerTexture = 0x388; // UTexture2D*
		constexpr auto MachineLabelVisibility = 0x3a8; // ESlateVisibility
		constexpr auto CanConvertThralls = 0x3a9; // bool
		constexpr auto DismantleObjects = 0x3aa; // bool
		constexpr auto DelveObjects = 0x3ab; // bool
		constexpr auto ConvertInParallel = 0x3ac; // bool
		constexpr auto RunByDefault = 0x3ad; // bool
		constexpr auto ThrallConversionRecipeIDs = 0x3b0; // TArray<int32_t>
		constexpr auto CraftingQueueHeaderText = 0x3c0; // FText
		constexpr auto CraftingQueueText = 0x3d8; // FText
		constexpr auto SignalFuelTypeChanged = 0x3f0; // FScriptMulticastDelegate
		constexpr auto SignalFuelConsumed = 0x400; // FScriptMulticastDelegate
		constexpr auto SignalRunningStateChanged = 0x410; // FScriptMulticastDelegate
		constexpr auto SignalArtisanSlotChanged = 0x420; // FScriptMulticastDelegate
		constexpr auto SignalRecipeCrafted = 0x430; // FScriptMulticastDelegate
		constexpr auto SignalItemCrafted = 0x440; // FScriptMulticastDelegate
		constexpr auto SignalPlaceableUpgraded = 0x450; // FScriptMulticastDelegate
		constexpr auto DelegateCanRecipeBeCrafted = 0x460; // DelegateProperty
		constexpr auto m_ResourceInventories = 0x470; // TArray<UItemInventory*>
		constexpr auto m_TargetInventories = 0x480; // TArray<UItemInventory*>
		constexpr auto m_EquipmentInventory = 0x490; // UEquipmentInventory*
		constexpr auto m_IngredientsInventory = 0x498; // UItemInventory*
		constexpr auto m_MachineRecipeList = 0x4a0; // TArray<URecipeItem*>
		constexpr auto m_ArtisanThrallInventory = 0x4b0; // UItemInventory*
		constexpr auto m_ArtisanRecipeInventory = 0x4b8; // UItemInventory*
		constexpr auto m_ArtisanItem = 0x4c0; // UThrallItem*
		constexpr auto m_ArtisanThrallInventoryMonitor = 0x4c8; // UItemInventoryClientMonitor*
		constexpr auto m_IngredientsInventoryMonitor = 0x4d0; // UItemInventoryClientMonitor*
		constexpr auto m_OwnerPersistence = 0x4e0; // UActorPersistenceComponent*
		constexpr auto m_IsStarted = 0x4e8; // bool
		constexpr auto m_IsDefaultRunStateInitialized = 0x4e9; // bool
		constexpr auto m_FuelTemplateID = 0x4ec; // int32_t
		constexpr auto m_CurrentBurnTimePerFuelItem = 0x4f0; // float
		constexpr auto m_RemainingBurnTime = 0x4f4; // float
		constexpr auto m_CurrentBurnTimePerFuelItemBase = 0x4f8; // float
		constexpr auto m_PendingUpgradeBuildingTemplateIDs = 0x570; // TArray<int32_t>
		constexpr auto RecipeDependencies = 0x580; // TMap<int32_t, FDependentRecipes>
	}

	namespace n_USceneCaptureComponentWater { // : USceneCaptureComponentImprints
		constexpr auto FluidNormalMap = 0x460; // UTextureRenderTarget2D*
		constexpr auto FlowTexture = 0x468; // UTexture*
		constexpr auto FlowTextureTiling = 0x470; // float
		constexpr auto VorticityAmount = 0x474; // float
		constexpr auto ColourDecay = 0x478; // float
		constexpr auto DensityDecay = 0x47c; // float
		constexpr auto VelocityDecay = 0x480; // float
		constexpr auto Wrapping = 0x484; // char : 1
		constexpr auto OutputNormals = 0x484; // char : 1
		constexpr auto UseUniqueTextureSet = 0x484; // char : 1
		constexpr auto WindA = 0x488; // FVector2D
		constexpr auto WindB = 0x490; // FVector2D
		constexpr auto InjectionColourA = 0x498; // FColor
		constexpr auto ColourScaleA = 0x49c; // float
		constexpr auto InjectionColourB = 0x4a0; // FColor
		constexpr auto ColourScaleB = 0x4a4; // float
		constexpr auto PressureScaleA = 0x4a8; // float
		constexpr auto PressureScaleB = 0x4ac; // float
		constexpr auto WindScale = 0x4b0; // float
		constexpr auto WindGustFactorA = 0x4b4; // float
		constexpr auto WindGustFactorB = 0x4b8; // float
	}

	namespace n_UPaperTileMap { // : UObject
		constexpr auto MapWidth = 0x28; // int32_t
		constexpr auto MapHeight = 0x2c; // int32_t
		constexpr auto TileWidth = 0x30; // int32_t
		constexpr auto TileHeight = 0x34; // int32_t
		constexpr auto PixelsPerUnrealUnit = 0x38; // float
		constexpr auto SeparationPerTileX = 0x3c; // float
		constexpr auto SeparationPerTileY = 0x40; // float
		constexpr auto SeparationPerLayer = 0x44; // float
		constexpr auto SelectedTileSet = 0x48; // UPaperTileSet*
		constexpr auto Material = 0x68; // UMaterialInterface*
		constexpr auto TileLayers = 0x70; // TArray<UPaperTileLayer*>
		constexpr auto CollisionThickness = 0x80; // float
		constexpr auto SpriteCollisionDomain = 0x84; // ESpriteCollisionMode
		constexpr auto ProjectionMode = 0x85; // ETileMapProjectionMode
		constexpr auto HexSideLength = 0x88; // int32_t
		constexpr auto BodySetup = 0x90; // UBodySetup*
		constexpr auto LayerNameIndex = 0x98; // int32_t
	}

	namespace n_ADefaultPhysicsVolume { // : APhysicsVolume
		constexpr auto TerminalVelocity = 0x408; // float
		constexpr auto Priority = 0x40c; // int32_t
		constexpr auto FluidFriction = 0x410; // float
		constexpr auto bWaterVolume = 0x414; // char : 1
		constexpr auto bPhysicsOnContact = 0x414; // char : 1
	}

	namespace n_UAutomatedLevelSequenceCapture { // : UMovieSceneCapture
		constexpr auto CaptureType = 0x38; // FCaptureProtocolID
		constexpr auto ProtocolSettings = 0x40; // UMovieSceneCaptureProtocolSettings*
		constexpr auto Settings = 0x48; // FMovieSceneCaptureSettings
		constexpr auto bUseSeparateProcess = 0x98; // bool
		constexpr auto bCloseEditorWhenCaptureStarts = 0x99; // bool
		constexpr auto AdditionalCommandLineArguments = 0xa0; // FString
		constexpr auto InheritedCommandLineArguments = 0xb0; // FString
	}

	namespace n_UThrallViewBase { // : UWindowRoot
		constexpr auto CloseOnClick = 0x318; // bool
		constexpr auto BlockPlayerInput = 0x319; // bool
		constexpr auto OpeningSlateSound = 0x320; // FSlateSound
		constexpr auto ClosingSlateSound = 0x338; // FSlateSound
		constexpr auto SignalClosing = 0x350; // FScriptMulticastDelegate
		constexpr auto SignalOpened = 0x360; // FScriptMulticastDelegate
		constexpr auto m_WindowHotkeys = 0x370; // TArray<FGamepadHotkeyHelp>
		constexpr auto m_InputComponent = 0x380; // UInputComponent*
		constexpr auto m_GUIModule = 0x388; // UGUIModule*
	}

	namespace n_UAISenseConfig_Prediction { // : UAISenseConfig
		constexpr auto DebugColor = 0x28; // FColor
		constexpr auto MaxAge = 0x2c; // float
		constexpr auto bStartsEnabled = 0x30; // char : 1
	}

	namespace n_UParticleModuleLocationBoneSocket { // : UParticleModuleLocationBase
		constexpr auto SourceType = 0x30; // ELocationBoneSocketSource
		constexpr auto UniversalOffset = 0x34; // FVector
		constexpr auto SourceLocations = 0x40; // TArray<FLocationBoneSocketInfo>
		constexpr auto SelectionMethod = 0x50; // ELocationBoneSocketSelectionMethod
		constexpr auto bUpdatePositionEachFrame = 0x54; // char : 1
		constexpr auto bOrientMeshEmitters = 0x54; // char : 1
		constexpr auto bInheritBoneVelocity = 0x54; // char : 1
		constexpr auto InheritVelocityScale = 0x58; // float
		constexpr auto SkelMeshActorParamName = 0x60; // FName
		constexpr auto NumPreSelectedIndices = 0x68; // int32_t
	}

	namespace n_UUpdateManager { // : UObject
		constexpr auto HotfixCheckCompleteDelay = 0x1f0; // float
		constexpr auto UpdateCheckCompleteDelay = 0x1f4; // float
		constexpr auto HotfixAvailabilityCheckCompleteDelay = 0x1f8; // float
		constexpr auto UpdateCheckAvailabilityCompleteDelay = 0x1fc; // float
		constexpr auto bPlatformEnvironmentDetected = 0x200; // bool
		constexpr auto bInitialUpdateFinished = 0x201; // bool
		constexpr auto bCheckHotfixAvailabilityOnly = 0x202; // bool
		constexpr auto CurrentUpdateState = 0x203; // EUpdateState
		constexpr auto WorstNumFilesPendingLoadViewed = 0x204; // int32_t
		constexpr auto LastPatchCheckResult = 0x208; // EPatchCheckResult
		constexpr auto LastHotfixResult = 0x209; // EHotfixResult
		constexpr auto LastUpdateCheck = 0x228; // FDateTime [0x2]
		constexpr auto LastCompletionResult = 0x238; // EUpdateCompletionStatus [0x2]
		constexpr auto UpdateStateEnum = 0x248; // UEnum*
		constexpr auto UpdateCompletionEnum = 0x250; // UEnum*
	}

	namespace n_UInterpTrackColorProp { // : UInterpTrackVectorBase
		constexpr auto PropertyName = 0x90; // FName
	}

	namespace n_AOnlineBeaconClient { // : AOnlineBeacon
		constexpr auto BeaconOwner = 0x3f0; // AOnlineBeaconHostObject*
		constexpr auto BeaconConnection = 0x3f8; // UNetConnection*
		constexpr auto ConnectionState = 0x400; // EBeaconConnectionState
	}

	namespace n_UPlayerSurveyDialog { // : UWindowRoot
		constexpr auto SurveyTitle = 0x398; // FText
		constexpr auto SurveyMessage = 0x3b0; // FText
		constexpr auto SurveyBaseURL = 0x3c8; // FString
		constexpr auto MessageBox = 0x3d8; // UMessageBoxWidget*
	}

	namespace n_UWeightedTableArray { // : UObject
		constexpr auto Key = 0x28; // FName
		constexpr auto TotalWeight = 0x30; // float
		constexpr auto Entries = 0x38; // TArray<FWeightedTableEntry>
	}

	namespace n_ULoadGuildsCallProxy { // : UBlueprintAsyncActionBase
		constexpr auto onSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto onFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_UConanBehaviorTreeComponent { // : UBehaviorTreeComponent
		constexpr auto NodeInstances = 0x178; // TArray<UBTNode*>
	}

	namespace n_UMaterialExpressionFunctionInput { // : UMaterialExpression
		constexpr auto Preview = 0x60; // FExpressionInput
		constexpr auto InputName = 0x98; // FString
		constexpr auto Description = 0xa8; // FString
		constexpr auto ID = 0xb8; // FGuid
		constexpr auto InputType = 0xc8; // EFunctionInputType
		constexpr auto PreviewValue = 0xd0; // FVector4
		constexpr auto bUsePreviewValueAsDefault = 0xe0; // char : 1
		constexpr auto SortPriority = 0xe4; // int32_t
		constexpr auto bCompilingFunctionPreview = 0xe8; // char : 1
	}

	namespace n_UThrallInfoComponent { // : UActorComponent
		constexpr auto ThrallInfo = 0xf8; // FThrallInfo
	}

	namespace n_ULightmassPrimitiveSettingsObject { // : UObject
		constexpr auto LightmassSettings = 0x28; // FLightmassPrimitiveSettings
	}

	namespace n_UCraftingManagerGUI { // : URootWidget
		constexpr auto KeyNavOnSelectedEvent = 0x240; // FScriptMulticastDelegate
		constexpr auto KeyNavLeft = 0x250; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavRight = 0x258; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavAbove = 0x260; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavBelow = 0x268; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavTab = 0x270; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildLeft = 0x278; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildRight = 0x280; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildAbove = 0x288; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildBelow = 0x290; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildTab = 0x298; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildren = 0x2a0; // TWeakObjectPtr<URootWidget>
		constexpr auto TooltipWidgetClass = 0x2a8; // UTooltipWidget*
		constexpr auto KeyNavIndicatorClass = 0x2b0; // UKeyNavIndicator*
		constexpr auto PositiveFeedbackColor = 0x2b8; // FLinearColor
		constexpr auto NegativeFeedbackColor = 0x2c8; // FLinearColor
		constexpr auto NeutralFeedbackColor = 0x2d8; // FLinearColor
		constexpr auto KeyNavFocusOnClick = 0x2e8; // bool
		constexpr auto KeyNavAutoSetBack = 0x2e9; // bool
		constexpr auto m_Window = 0x2f0; // UWindowRoot*
		constexpr auto m_Parent = 0x2f8; // TWeakObjectPtr<URootWidget>
		constexpr auto m_KeyNavIndicator = 0x300; // UKeyNavIndicator*
	}

	namespace n_UEdGraphNode { // : UObject
		constexpr auto DeprecatedPins = 0x38; // TArray<UEdGraphPin_Deprecated*>
		constexpr auto NodePosX = 0x48; // int32_t
		constexpr auto NodePosY = 0x4c; // int32_t
		constexpr auto NodeWidth = 0x50; // int32_t
		constexpr auto NodeHeight = 0x54; // int32_t
		constexpr auto bHasCompilerMessage = 0x58; // char : 1
		constexpr auto NodeComment = 0x60; // FString
		constexpr auto bCommentBubblePinned = 0x70; // bool
		constexpr auto bCommentBubbleVisible = 0x71; // bool
		constexpr auto errorType = 0x74; // int32_t
		constexpr auto ErrorMsg = 0x78; // FString
		constexpr auto NodeGuid = 0x88; // FGuid
		constexpr auto AdvancedPinDisplay = 0x98; // ENodeAdvancedPins
		constexpr auto EnabledState = 0x99; // ENodeEnabledState
		constexpr auto bUserSetEnabledState = 0x9a; // bool
		constexpr auto bIsNodeEnabled = 0x9b; // bool
	}

	namespace n_USpringArmComponent { // : USceneComponent
		constexpr auto TargetArmLength = 0x300; // float
		constexpr auto SocketOffset = 0x304; // FVector
		constexpr auto TargetOffset = 0x310; // FVector
		constexpr auto ProbeSize = 0x31c; // float
		constexpr auto ProbeChannel = 0x320; // ECollisionChannel
		constexpr auto bDoCollisionTest = 0x324; // char : 1
		constexpr auto bUsePawnControlRotation = 0x324; // char : 1
		constexpr auto bInheritPitch = 0x324; // char : 1
		constexpr auto bInheritYaw = 0x324; // char : 1
		constexpr auto bInheritRoll = 0x324; // char : 1
		constexpr auto bEnableCameraLag = 0x324; // char : 1
		constexpr auto bEnableCameraRotationLag = 0x324; // char : 1
		constexpr auto bUseCameraLagSubstepping = 0x324; // char : 1
		constexpr auto bDrawDebugLagMarkers = 0x324; // char : 1
		constexpr auto CameraLagSpeed = 0x328; // float
		constexpr auto CameraRotationLagSpeed = 0x32c; // float
		constexpr auto CameraLagMaxTimeStep = 0x330; // float
		constexpr auto CameraLagMaxDistance = 0x334; // float
	}

	namespace n_ALandscapeGizmoActiveActor { // : ALandscapeGizmoActor
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto CustomTimeDilation = 0x80; // float
		constexpr auto bHidden = 0x84; // char : 1
		constexpr auto bNetTemporary = 0x84; // char : 1
		constexpr auto bNetStartup = 0x84; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x84; // char : 1
		constexpr auto bAlwaysRelevant = 0x84; // char : 1
		constexpr auto bReplicateMovement = 0x84; // char : 1
		constexpr auto bTearOff = 0x84; // char : 1
		constexpr auto bExchangedRoles = 0x84; // char : 1
		constexpr auto bPendingNetUpdate = 0x85; // char : 1
		constexpr auto bNetLoadOnClient = 0x85; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x85; // char : 1
		constexpr auto bBlockInput = 0x85; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x85; // char : 1
		constexpr auto bActorEnableCollision = 0x86; // char : 1
		constexpr auto bReplicates = 0x86; // char : 1
		constexpr auto bLostRelevancy = 0x86; // char : 1
		constexpr auto NetDriverName = 0x88; // FName
		constexpr auto bCanBeInCluster = 0x90; // char : 1
		constexpr auto RemoteRole = 0x91; // ENetRole
		constexpr auto Owner = 0x98; // AActor*
		constexpr auto ReplicatedMovement = 0xa0; // FRepMovement
		constexpr auto AttachmentReplication = 0xd8; // FRepAttachment
		constexpr auto Role = 0x118; // ENetRole
		constexpr auto AutoReceiveInput = 0x11a; // EAutoReceiveInput
		constexpr auto InputPriority = 0x11c; // int32_t
		constexpr auto InputComponent = 0x120; // UInputComponent*
		constexpr auto InputConsumeOption = 0x128; // EInputConsumeOptions
		constexpr auto NetCullDistanceSquared = 0x12c; // float
		constexpr auto ViewTargetNetCullDistanceSquared = 0x130; // float
		constexpr auto NetTag = 0x134; // int32_t
		constexpr auto NetUpdateTime = 0x138; // float
		constexpr auto NetUpdateFrequency = 0x13c; // float
		constexpr auto MinNetUpdateFrequency = 0x140; // float
		constexpr auto NetPriority = 0x144; // float
		constexpr auto LastNetUpdateTime = 0x148; // float
		constexpr auto bAutoDestroyWhenFinished = 0x14c; // char : 1
		constexpr auto bCanBeDamaged = 0x14c; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x14c; // char : 1
		constexpr auto bCollideWhenPlacing = 0x14c; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x14c; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x14c; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x14c; // char : 1
		constexpr auto SpawnCollisionHandlingMethod = 0x14d; // ESpawnActorCollisionHandlingMethod
		constexpr auto Instigator = 0x158; // APawn*
		constexpr auto Children = 0x160; // TArray<AActor*>
		constexpr auto RootComponent = 0x170; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x178; // TArray<AMatineeActor*>
		constexpr auto InitialLifeSpan = 0x188; // float
		constexpr auto Layers = 0x198; // TArray<FName>
		constexpr auto ParentComponentActor = 0x1a8; // TWeakObjectPtr<AActor>
		constexpr auto ParentComponent = 0x1b0; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x1b8; // char : 1
		constexpr auto bUseExtendedRelevancyTimeout = 0x1b8; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x1b8; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x1b8; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x1b8; // char : 1
		constexpr auto Tags = 0x1c0; // TArray<FName>
		constexpr auto HiddenEditorViews = 0x1d0; // uint64_t
		constexpr auto OnTakeAnyDamage = 0x1d8; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x1e8; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x1f8; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x208; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x218; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x228; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x238; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x248; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x258; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x268; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x278; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x288; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x298; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x2a8; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x2b8; // FScriptMulticastDelegate
		constexpr auto BlueprintCreatedComponents = 0x3a8; // TArray<UActorComponent*>
		constexpr auto InstanceComponents = 0x3b8; // TArray<UActorComponent*>
	}

	namespace n_UW_ItemStatView_C { // : UItemStatView
		constexpr auto Description = 0x340; // UTextBlock*
		constexpr auto Icon = 0x348; // UImage*
		constexpr auto Name = 0x350; // UTextBlock*
	}

	namespace n_UFrameRateReporter { // : UFrameRateTracker
		constexpr auto ScopeName = 0x50; // FString
		constexpr auto Compact = 0x60; // bool
		constexpr auto DebugLevel = 0x61; // EDebugLevel
	}

	namespace n_UMaterialExpressionStaticComponentMaskParameter { // : UMaterialExpressionParameter
		constexpr auto Input = 0x80; // FExpressionInput
		constexpr auto DefaultR = 0xb8; // char : 1
		constexpr auto DefaultG = 0xb8; // char : 1
		constexpr auto DefaultB = 0xb8; // char : 1
		constexpr auto DefaultA = 0xb8; // char : 1
	}

	namespace n_USoundNodeGroupControl { // : USoundNode
		constexpr auto GroupSizes = 0x38; // TArray<int32_t>
	}

	namespace n_UInAppPurchaseQueryCallbackProxy { // : UObject
		constexpr auto onSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto onFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_UXbox1GraniteSettings { // : UObject
		constexpr auto CPUCaches = 0x30; // TArray<FGraniteCpuCache>
		constexpr auto GPUCaches = 0x40; // TArray<FGraniteGpuCache>
		constexpr auto MaximumTileDataUpload = 0x50; // int32_t
		constexpr auto MaximumResolves = 0x54; // int32_t
		constexpr auto GpuMemorySizeInMegabyte = 0x58; // int32_t
		constexpr auto CpuMemorySizeInMegabyte = 0x5c; // int32_t
		constexpr auto bAdvanced = 0x60; // char : 1
		constexpr auto ReservedRatio = 0x64; // float
	}

	namespace n_UInterpTrackVisibility { // : UInterpTrack
		constexpr auto VisibilityTrack = 0x70; // TArray<FVisibilityTrackKey>
		constexpr auto bFireEventsWhenForwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenJumpingForwards = 0x80; // char : 1
	}

	namespace n_UParticleModuleVelocityCone { // : UParticleModuleVelocityBase
		constexpr auto Angle = 0x38; // FRawDistributionFloat
		constexpr auto Velocity = 0x70; // FRawDistributionFloat
		constexpr auto Direction = 0xa8; // FVector
	}

	namespace n_UButtonSlot { // : UPanelSlot
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UMaterialExpressionDecalMipmapLevel { // : UMaterialExpression
		constexpr auto TextureSize = 0x60; // FExpressionInput
		constexpr auto ConstWidth = 0x98; // float
		constexpr auto ConstHeight = 0x9c; // float
	}

	namespace n_USoundNodeDialoguePlayer { // : USoundNode
		constexpr auto DialogueWaveParameter = 0x38; // FDialogueWaveParameter
		constexpr auto bLooping = 0x58; // char : 1
	}

	namespace n_UBTDecorator_CompareBBEntries { // : UBTDecorator
		constexpr auto Operator = 0x68; // EBlackBoardEntryComparison
		constexpr auto BlackboardKeyA = 0x70; // FBlackboardKeySelector
		constexpr auto BlackboardKeyB = 0x98; // FBlackboardKeySelector
	}

	namespace n_ABrush { // : AActor
		constexpr auto BrushType = 0x3d0; // EBrushType
		constexpr auto BrushColor = 0x3d4; // FColor
		constexpr auto PolyFlags = 0x3d8; // int32_t
		constexpr auto bColored = 0x3dc; // char : 1
		constexpr auto bSolidWhenSelected = 0x3dc; // char : 1
		constexpr auto bPlaceableFromClassBrowser = 0x3dc; // char : 1
		constexpr auto bNotForClientOrServer = 0x3dc; // char : 1
		constexpr auto Brush = 0x3e0; // UModel*
		constexpr auto BrushComponent = 0x3e8; // UBrushComponent*
		constexpr auto bInManipulation = 0x3f0; // char : 1
		constexpr auto SavedSelections = 0x3f8; // TArray<FGeomSelection>
	}

	namespace n_AResourceActorBase { // : AActor
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto CustomTimeDilation = 0x80; // float
		constexpr auto bHidden = 0x84; // char : 1
		constexpr auto bNetTemporary = 0x84; // char : 1
		constexpr auto bNetStartup = 0x84; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x84; // char : 1
		constexpr auto bAlwaysRelevant = 0x84; // char : 1
		constexpr auto bReplicateMovement = 0x84; // char : 1
		constexpr auto bTearOff = 0x84; // char : 1
		constexpr auto bExchangedRoles = 0x84; // char : 1
		constexpr auto bPendingNetUpdate = 0x85; // char : 1
		constexpr auto bNetLoadOnClient = 0x85; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x85; // char : 1
		constexpr auto bBlockInput = 0x85; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x85; // char : 1
		constexpr auto bActorEnableCollision = 0x86; // char : 1
		constexpr auto bReplicates = 0x86; // char : 1
		constexpr auto bLostRelevancy = 0x86; // char : 1
		constexpr auto NetDriverName = 0x88; // FName
		constexpr auto bCanBeInCluster = 0x90; // char : 1
		constexpr auto RemoteRole = 0x91; // ENetRole
		constexpr auto Owner = 0x98; // AActor*
		constexpr auto ReplicatedMovement = 0xa0; // FRepMovement
		constexpr auto AttachmentReplication = 0xd8; // FRepAttachment
		constexpr auto Role = 0x118; // ENetRole
		constexpr auto AutoReceiveInput = 0x11a; // EAutoReceiveInput
		constexpr auto InputPriority = 0x11c; // int32_t
		constexpr auto InputComponent = 0x120; // UInputComponent*
		constexpr auto InputConsumeOption = 0x128; // EInputConsumeOptions
		constexpr auto NetCullDistanceSquared = 0x12c; // float
		constexpr auto ViewTargetNetCullDistanceSquared = 0x130; // float
		constexpr auto NetTag = 0x134; // int32_t
		constexpr auto NetUpdateTime = 0x138; // float
		constexpr auto NetUpdateFrequency = 0x13c; // float
		constexpr auto MinNetUpdateFrequency = 0x140; // float
		constexpr auto NetPriority = 0x144; // float
		constexpr auto LastNetUpdateTime = 0x148; // float
		constexpr auto bAutoDestroyWhenFinished = 0x14c; // char : 1
		constexpr auto bCanBeDamaged = 0x14c; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x14c; // char : 1
		constexpr auto bCollideWhenPlacing = 0x14c; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x14c; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x14c; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x14c; // char : 1
		constexpr auto SpawnCollisionHandlingMethod = 0x14d; // ESpawnActorCollisionHandlingMethod
		constexpr auto Instigator = 0x158; // APawn*
		constexpr auto Children = 0x160; // TArray<AActor*>
		constexpr auto RootComponent = 0x170; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x178; // TArray<AMatineeActor*>
		constexpr auto InitialLifeSpan = 0x188; // float
		constexpr auto Layers = 0x198; // TArray<FName>
		constexpr auto ParentComponentActor = 0x1a8; // TWeakObjectPtr<AActor>
		constexpr auto ParentComponent = 0x1b0; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x1b8; // char : 1
		constexpr auto bUseExtendedRelevancyTimeout = 0x1b8; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x1b8; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x1b8; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x1b8; // char : 1
		constexpr auto Tags = 0x1c0; // TArray<FName>
		constexpr auto HiddenEditorViews = 0x1d0; // uint64_t
		constexpr auto OnTakeAnyDamage = 0x1d8; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x1e8; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x1f8; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x208; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x218; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x228; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x238; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x248; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x258; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x268; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x278; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x288; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x298; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x2a8; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x2b8; // FScriptMulticastDelegate
		constexpr auto BlueprintCreatedComponents = 0x3a8; // TArray<UActorComponent*>
		constexpr auto InstanceComponents = 0x3b8; // TArray<UActorComponent*>
	}

	namespace n_ADetourCrowdAIController { // : AAIController
		constexpr auto bStopAILogicOnUnposses = 0x470; // char : 1
		constexpr auto bLOSflag = 0x470; // char : 1
		constexpr auto bSkipExtraLOSChecks = 0x470; // char : 1
		constexpr auto bAllowStrafe = 0x470; // char : 1
		constexpr auto bWantsPlayerState = 0x470; // char : 1
		constexpr auto bSetControlRotationFromPawnOrientation = 0x470; // char : 1
		constexpr auto PathFollowingComponent = 0x478; // UPathFollowingComponent*
		constexpr auto BrainComponent = 0x480; // UBrainComponent*
		constexpr auto PerceptionComponent = 0x488; // UAIPerceptionComponent*
		constexpr auto ActionsComp = 0x490; // UPawnActionsComponent*
		constexpr auto Blackboard = 0x498; // UBlackboardComponent*
		constexpr auto CachedGameplayTasksComponent = 0x4a0; // UGameplayTasksComponent*
		constexpr auto DefaultNavigationFilterClass = 0x4a8; // UNavigationQueryFilter*
		constexpr auto ReceiveMoveCompleted = 0x4b0; // FScriptMulticastDelegate
	}

	namespace n_UPawnAction_Repeat { // : UPawnAction
		constexpr auto ActionToRepeat = 0xd0; // UPawnAction*
		constexpr auto RecentActionCopy = 0xd8; // UPawnAction*
		constexpr auto ChildFailureHandlingMode = 0xe0; // EPawnActionFailHandling
	}

	namespace n_ALandscape { // : ALandscapeProxy
		constexpr auto SplineComponent = 0x3d0; // ULandscapeSplinesComponent*
		constexpr auto LandscapeGuid = 0x3d8; // FGuid
		constexpr auto LandscapeSectionOffset = 0x3e8; // FIntPoint
		constexpr auto MaxLodLevel = 0x3f0; // int32_t
		constexpr auto LODDistanceFactor = 0x3f4; // float
		constexpr auto LODFalloff = 0x3f8; // ELandscapeLODFalloff
		constexpr auto StaticLightingLOD = 0x3fc; // int32_t
		constexpr auto DefaultPhysMaterial = 0x400; // UPhysicalMaterial*
		constexpr auto StreamingDistanceMultiplier = 0x408; // float
		constexpr auto LandscapeMaterial = 0x410; // UMaterialInterface*
		constexpr auto LandscapeHoleMaterial = 0x418; // UMaterialInterface*
		constexpr auto NegativeZBoundsExtension = 0x420; // float
		constexpr auto PositiveZBoundsExtension = 0x424; // float
		constexpr auto LandscapeComponents = 0x428; // TArray<ULandscapeComponent*>
		constexpr auto CollisionComponents = 0x438; // TArray<ULandscapeHeightfieldCollisionComponent*>
		constexpr auto FoliageComponents = 0x448; // TArray<UHierarchicalInstancedStaticMeshComponent*>
		constexpr auto bHasLandscapeGrass = 0x4b8; // bool
		constexpr auto StaticLightingResolution = 0x4bc; // float
		constexpr auto bCastStaticShadow = 0x4c0; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x4c0; // char : 1
		constexpr auto bCastFarShadow = 0x4c0; // char : 1
		constexpr auto bUseMaterialPositionOffsetInStaticLighting = 0x4c0; // char : 1
		constexpr auto LightmassSettings = 0x4c4; // FLightmassPrimitiveSettings
		constexpr auto CollisionMipLevel = 0x4dc; // int32_t
		constexpr auto SimpleCollisionMipLevel = 0x4e0; // int32_t
		constexpr auto CollisionThickness = 0x4e4; // float
		constexpr auto BodyInstance = 0x4f0; // FBodyInstance
		constexpr auto bGenerateOverlapEvents = 0x720; // char : 1
		constexpr auto bBakeMaterialPositionOffsetIntoCollision = 0x720; // char : 1
		constexpr auto ComponentSizeQuads = 0x724; // int32_t
		constexpr auto SubsectionSizeQuads = 0x728; // int32_t
		constexpr auto NumSubsections = 0x72c; // int32_t
		constexpr auto bUsedForNavigation = 0x730; // char : 1
		constexpr auto NavigationGeometryGatheringMode = 0x734; // ENavDataGatheringMode
		constexpr auto bUseLandscapeForCullingInvisibleHLODVertices = 0x735; // bool
	}

	namespace n_UParticleModuleTypeDataBeam2 { // : UParticleModuleTypeDataBase
		constexpr auto BeamMethod = 0x30; // EBeam2Method
		constexpr auto TextureTile = 0x34; // int32_t
		constexpr auto TextureTileDistance = 0x38; // float
		constexpr auto Sheets = 0x3c; // int32_t
		constexpr auto MaxBeamCount = 0x40; // int32_t
		constexpr auto Speed = 0x44; // float
		constexpr auto InterpolationPoints = 0x48; // int32_t
		constexpr auto bAlwaysOn = 0x4c; // char : 1
		constexpr auto UpVectorStepSize = 0x50; // int32_t
		constexpr auto BranchParentName = 0x58; // FName
		constexpr auto Distance = 0x60; // FRawDistributionFloat
		constexpr auto TaperMethod = 0x98; // EBeamTaperMethod
		constexpr auto TaperFactor = 0xa0; // FRawDistributionFloat
		constexpr auto TaperScale = 0xd8; // FRawDistributionFloat
		constexpr auto RenderGeometry = 0x110; // char : 1
		constexpr auto RenderDirectLine = 0x110; // char : 1
		constexpr auto RenderLines = 0x110; // char : 1
		constexpr auto RenderTessellation = 0x110; // char : 1
	}

	namespace n_UPetAttributeEntryView { // : URootWidget
		constexpr auto Icon = 0x318; // FSlateBrush
		constexpr auto Label = 0x3a8; // FText
		constexpr auto AttributeID = 0x3c0; // ECharIntStatID
	}

	namespace n_UMaterialExpressionArcsine { // : UMaterialExpression
		constexpr auto Input = 0x60; // FExpressionInput
	}

	namespace n_UBTService_DefaultFocus { // : UBTService_BlackboardBase
		constexpr auto FocusPriority = 0x98; // char
	}

	namespace n_UMaterialExpressionGraniteNoise { // : UMaterialExpressionNoise
		constexpr auto VarZ = 0xf8; // float
		constexpr auto UScale = 0xfc; // int32_t
		constexpr auto VScale = 0x100; // int32_t
	}

	namespace n_UW_ShortcutBar_C { // : UShortcutBarBase
		constexpr auto Image_10 = 0x420; // UImage*
		constexpr auto Slot0 = 0x428; // UW_ShortcutIcon_C*
		constexpr auto Slot1 = 0x430; // UW_ShortcutIcon_C*
		constexpr auto Slot2 = 0x438; // UW_ShortcutIcon_C*
		constexpr auto Slot3 = 0x440; // UW_ShortcutIcon_C*
		constexpr auto Slot4 = 0x448; // UW_ShortcutIcon_C*
		constexpr auto Slot5 = 0x450; // UW_ShortcutIcon_C*
		constexpr auto Slot6 = 0x458; // UW_ShortcutIcon_C*
		constexpr auto Slot7 = 0x460; // UW_ShortcutIcon_C*
	}

	namespace n_URandomWalkComponent { // : UActorComponent
		constexpr auto PrimaryComponentTick = 0x30; // FActorComponentTickFunction
		constexpr auto ComponentTags = 0x88; // TArray<FName>
		constexpr auto AssetUserData = 0x98; // TArray<UAssetUserData*>
		constexpr auto bReplicates = 0xa8; // char : 1
		constexpr auto bIsClientOnly = 0xa8; // char : 1
		constexpr auto bNetAddressable = 0xa8; // char : 1
		constexpr auto bAllowAnyoneToDestroyMe = 0xa8; // char : 1
		constexpr auto bCreatedByConstructionScript = 0xa8; // char : 1
		constexpr auto bInstanceComponent = 0xa8; // char : 1
		constexpr auto bAutoActivate = 0xa8; // char : 1
		constexpr auto bIsActive = 0xa8; // char : 1
		constexpr auto bEditableWhenInherited = 0xa8; // char : 1
		constexpr auto bCanEverAffectNavigation = 0xa8; // char : 1
		constexpr auto bIsEditorOnly = 0xa8; // char : 1
		constexpr auto CreationMethod = 0xb1; // EComponentCreationMethod
		constexpr auto UCSModifiedProperties = 0xc0; // TArray<FSimpleMemberReference>
		constexpr auto OnComponentActivated = 0xd0; // FScriptMulticastDelegate
		constexpr auto OnComponentDeactivated = 0xe0; // FScriptMulticastDelegate
	}

	namespace n_UW_RadialSBItemInfoPanel_C { // : UInventoryItemInfoPanel
		constexpr auto DurabilityBar = 0x3b0; // UProgressBar*
		constexpr auto DurabilityContainer = 0x3b8; // UHorizontalBox*
		constexpr auto Modifier1 = 0x3c0; // UW_ItemStatView_C*
		constexpr auto Modifier2 = 0x3c8; // UW_ItemStatView_C*
		constexpr auto Modifier3 = 0x3d0; // UW_ItemStatView_C*
		constexpr auto Modifier4 = 0x3d8; // UW_ItemStatView_C*
		constexpr auto TemperatureBar = 0x3e0; // UW_ItemTemperatureBar_C*
	}

	namespace n_UParticleModuleLocationPrimitiveBase { // : UParticleModuleLocationBase
		constexpr auto Positive_X = 0x30; // char : 1
		constexpr auto Positive_Y = 0x30; // char : 1
		constexpr auto Positive_Z = 0x30; // char : 1
		constexpr auto Negative_X = 0x30; // char : 1
		constexpr auto Negative_Y = 0x30; // char : 1
		constexpr auto Negative_Z = 0x30; // char : 1
		constexpr auto SurfaceOnly = 0x30; // char : 1
		constexpr auto Velocity = 0x30; // char : 1
		constexpr auto VelocityScale = 0x38; // FRawDistributionFloat
		constexpr auto StartLocation = 0x70; // FRawDistributionVector
	}

	namespace n_UAnimBlueprint { // : UBlueprint
		constexpr auto TargetSkeleton = 0x198; // USkeleton*
		constexpr auto Groups = 0x1a0; // TArray<FAnimGroupInfo>
		constexpr auto bUseMultiThreadedAnimationUpdate = 0x1b0; // bool
		constexpr auto bWarnAboutBlueprintUsage = 0x1b1; // bool
	}

	namespace n_UMaterialExpressionLandscapeLayerSample { // : UMaterialExpression
		constexpr auto ParameterName = 0x60; // FName
		constexpr auto PreviewWeight = 0x68; // float
		constexpr auto ExpressionGUID = 0x6c; // FGuid
	}

	namespace n_UW_ServerInfo_C { // : UServerInfoBase
		constexpr auto UberGraphFrame = 0x530; // FPointerToUberGraphFrame
		constexpr auto Anim_FavoriteAdded = 0x538; // UWidgetAnimation*
		constexpr auto B_SelectThis = 0x540; // UButton*
		constexpr auto Border_2 = 0x548; // UBorder*
		constexpr auto Brd_ActiveIndicator = 0x550; // UBorder*
		constexpr auto I_Battleye = 0x558; // UImage*
		constexpr auto I_Favorite = 0x560; // UImage*
		constexpr auto I_Password = 0x568; // UImage*
		constexpr auto I_Upload = 0x570; // UImage*
		constexpr auto T_Age = 0x578; // UTextBlock*
		constexpr auto T_CombatMode = 0x580; // UTextBlock*
		constexpr auto T_Level = 0x588; // UTextBlock*
		constexpr auto T_Map = 0x590; // UTextBlock*
		constexpr auto T_Name = 0x598; // UTextBlock*
		constexpr auto T_Ping = 0x5a0; // UTextBlock*
		constexpr auto T_Players = 0x5a8; // UTextBlock*
		constexpr auto T_Region = 0x5b0; // UTextBlock*
		constexpr auto TextBlock_1 = 0x5b8; // UTextBlock*
		constexpr auto ValidStyle = 0x5c0; // FButtonStyle
		constexpr auto InvalidStyle = 0x868; // FButtonStyle
	}

	namespace n_USoundNodeModulator { // : USoundNode
		constexpr auto PitchMin = 0x38; // float
		constexpr auto PitchMax = 0x3c; // float
		constexpr auto VolumeMin = 0x40; // float
		constexpr auto VolumeMax = 0x44; // float
	}

	namespace n_UServerListBase { // : UWindowRoot
		constexpr auto ScrollValue = 0x398; // float
		constexpr auto CommunityBackground = 0x3a0; // UTexture2D*
		constexpr auto DirectConnectTimeout = 0x3c0; // float
		constexpr auto m_ServerListHotkeys = 0x4d0; // TMap<EServerListHotkey, FGamepadHotkeyHelp>
	}

	namespace n_UMessageBoxWidget { // : UWindowRoot
		constexpr auto SignalUserActionPerformed = 0x398; // FScriptMulticastDelegate
		constexpr auto GamepadHelpEntryClass = 0x3a8; // UGamepadHelpEntryBase*
		constexpr auto CustomButtonClass = 0x3b0; // UFCButton*
		constexpr auto m_HotkeyHandlers = 0x438; // TArray<UMessageBoxHotkeyHandler*>
		constexpr auto m_MessageboxHotkeys = 0x448; // TArray<FGamepadHotkeyHelp>
	}

	namespace n_UPlayFabAuthenticationAPI { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnPlayFabResponse = 0x28; // FScriptMulticastDelegate
		constexpr auto CallAuthenticationContext = 0xf0; // UPlayFabAuthenticationContext*
		constexpr auto RequestJsonObj = 0xf8; // UPlayFabJsonObject*
		constexpr auto ResponseJsonObj = 0x100; // UPlayFabJsonObject*
	}

	namespace n_UVehicleAnimInstance { // : UAnimInstance
		constexpr auto WheeledVehicleMovementComponent = 0x760; // UWheeledVehicleMovementComponent*
	}

	namespace n_UBTTask_BlueprintBase { // : UBTTaskNode
		constexpr auto AIOwner = 0x70; // AAIController*
		constexpr auto ActorOwner = 0x78; // AActor*
		constexpr auto bShowPropertyDetails = 0x98; // char : 1
	}

	namespace n_USoundNodeQualityLevel { // : USoundNode
		constexpr auto ChildNodes = 0x28; // TArray<USoundNode*>
	}

	namespace n_UPhysicsThrusterComponent { // : USceneComponent
		constexpr auto ThrustStrength = 0x300; // float
	}

	namespace n_UItemDistributorComponent { // : UQuadtreeComponent
		constexpr auto ObjectTypesToTraceFor = 0x310; // TArray<EObjectTypeQuery>
		constexpr auto TraceRadius = 0x320; // float
		constexpr auto ItemRequesterActors = 0x328; // TArray<AActor*>
		constexpr auto QuantityToMovePerCycle = 0x338; // int32_t
	}

	namespace n_UVaultActorComponent { // : UActorComponent
		constexpr auto OnVaultInitialized = 0xf8; // FScriptMulticastDelegate
		constexpr auto OnExhaustedValueChanged = 0x108; // FScriptMulticastDelegate
		constexpr auto vaultName = 0x118; // FName
		constexpr auto bIsExhausted = 0x120; // bool
		constexpr auto vaultManagerPtr = 0x128; // AVaultManager*
	}

	namespace n_UAddGuildMemberCallProxy { // : UBlueprintAsyncActionBase
		constexpr auto onSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto onFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_ALandscapeGizmoActor { // : AActor
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto CustomTimeDilation = 0x80; // float
		constexpr auto bHidden = 0x84; // char : 1
		constexpr auto bNetTemporary = 0x84; // char : 1
		constexpr auto bNetStartup = 0x84; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x84; // char : 1
		constexpr auto bAlwaysRelevant = 0x84; // char : 1
		constexpr auto bReplicateMovement = 0x84; // char : 1
		constexpr auto bTearOff = 0x84; // char : 1
		constexpr auto bExchangedRoles = 0x84; // char : 1
		constexpr auto bPendingNetUpdate = 0x85; // char : 1
		constexpr auto bNetLoadOnClient = 0x85; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x85; // char : 1
		constexpr auto bBlockInput = 0x85; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x85; // char : 1
		constexpr auto bActorEnableCollision = 0x86; // char : 1
		constexpr auto bReplicates = 0x86; // char : 1
		constexpr auto bLostRelevancy = 0x86; // char : 1
		constexpr auto NetDriverName = 0x88; // FName
		constexpr auto bCanBeInCluster = 0x90; // char : 1
		constexpr auto RemoteRole = 0x91; // ENetRole
		constexpr auto Owner = 0x98; // AActor*
		constexpr auto ReplicatedMovement = 0xa0; // FRepMovement
		constexpr auto AttachmentReplication = 0xd8; // FRepAttachment
		constexpr auto Role = 0x118; // ENetRole
		constexpr auto AutoReceiveInput = 0x11a; // EAutoReceiveInput
		constexpr auto InputPriority = 0x11c; // int32_t
		constexpr auto InputComponent = 0x120; // UInputComponent*
		constexpr auto InputConsumeOption = 0x128; // EInputConsumeOptions
		constexpr auto NetCullDistanceSquared = 0x12c; // float
		constexpr auto ViewTargetNetCullDistanceSquared = 0x130; // float
		constexpr auto NetTag = 0x134; // int32_t
		constexpr auto NetUpdateTime = 0x138; // float
		constexpr auto NetUpdateFrequency = 0x13c; // float
		constexpr auto MinNetUpdateFrequency = 0x140; // float
		constexpr auto NetPriority = 0x144; // float
		constexpr auto LastNetUpdateTime = 0x148; // float
		constexpr auto bAutoDestroyWhenFinished = 0x14c; // char : 1
		constexpr auto bCanBeDamaged = 0x14c; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x14c; // char : 1
		constexpr auto bCollideWhenPlacing = 0x14c; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x14c; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x14c; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x14c; // char : 1
		constexpr auto SpawnCollisionHandlingMethod = 0x14d; // ESpawnActorCollisionHandlingMethod
		constexpr auto Instigator = 0x158; // APawn*
		constexpr auto Children = 0x160; // TArray<AActor*>
		constexpr auto RootComponent = 0x170; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x178; // TArray<AMatineeActor*>
		constexpr auto InitialLifeSpan = 0x188; // float
		constexpr auto Layers = 0x198; // TArray<FName>
		constexpr auto ParentComponentActor = 0x1a8; // TWeakObjectPtr<AActor>
		constexpr auto ParentComponent = 0x1b0; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x1b8; // char : 1
		constexpr auto bUseExtendedRelevancyTimeout = 0x1b8; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x1b8; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x1b8; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x1b8; // char : 1
		constexpr auto Tags = 0x1c0; // TArray<FName>
		constexpr auto HiddenEditorViews = 0x1d0; // uint64_t
		constexpr auto OnTakeAnyDamage = 0x1d8; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x1e8; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x1f8; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x208; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x218; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x228; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x238; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x248; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x258; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x268; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x278; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x288; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x298; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x2a8; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x2b8; // FScriptMulticastDelegate
		constexpr auto BlueprintCreatedComponents = 0x3a8; // TArray<UActorComponent*>
		constexpr auto InstanceComponents = 0x3b8; // TArray<UActorComponent*>
	}

	namespace n_UPurgeConfigData { // : UDataAsset
		constexpr auto CommunityDataTable = 0x28; // TArray<FName>
		constexpr auto SpawnCap = 0x38; // int32_t
		constexpr auto SpawnLocationCap = 0x3c; // int32_t
		constexpr auto PurgeSpawnDistance = 0x40; // float
		constexpr auto PurgeDuration = 0x44; // float
	}

	namespace n_UMovieSceneIntegerTrack { // : UMovieScenePropertyTrack
		constexpr auto PropertyName = 0xb8; // FName
		constexpr auto PropertyPath = 0xc0; // FString
		constexpr auto Sections = 0xd0; // TArray<UMovieSceneSection*>
	}

	namespace n_ACullDistanceVolume { // : AVolume
		constexpr auto CullDistances = 0x408; // TArray<FCullDistanceSizePair>
		constexpr auto bEnabled = 0x418; // char : 1
		constexpr auto bUnbound = 0x418; // char : 1
	}

	namespace n_UPaperRuntimeSettings { // : UObject
		constexpr auto bEnableSpriteAtlasGroups = 0x28; // bool
		constexpr auto bEnableTerrainSplineEditing = 0x29; // bool
		constexpr auto bResizeSpriteDataToMatchTextures = 0x2a; // bool
	}

	namespace n_UMovieSceneEventSection { // : UMovieSceneSection
		constexpr auto events = 0xc8; // FNameCurve
		constexpr auto EventData = 0x130; // FMovieSceneEventSectionData
	}

	namespace n_UBrainComponent { // : UActorComponent
		constexpr auto BlackboardComp = 0x100; // UBlackboardComponent*
		constexpr auto AIOwner = 0x108; // AAIController*
	}

	namespace n_UTireConfig { // : UDataAsset
		constexpr auto FrictionScale = 0x28; // float
		constexpr auto TireFrictionScales = 0x30; // TArray<FTireConfigMaterialFriction>
	}

	namespace n_UAchievementWriteCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto onSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto onFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_UBuildingItem { // : UGameItem
		constexpr auto BuildingObjectClass = 0x248; // UObject*
	}

	namespace n_URatingWidgetBase { // : URootWidget
		constexpr auto RatingCategory = 0x338; // ERatingCategory
		constexpr auto CanBeChanged = 0x339; // bool
	}

	namespace n_UMovieScene3DConstraintTrack { // : UMovieSceneTrack
		constexpr auto ConstraintSections = 0xb8; // TArray<UMovieSceneSection*>
	}

	namespace n_UGUIModuleController_Activate_CallProxy { // : UBlueprintAsyncActionBase
		constexpr auto OnActivate = 0x28; // FScriptMulticastDelegate
		constexpr auto OnNotActivated = 0x38; // FScriptMulticastDelegate
		constexpr auto OnBeginLoad = 0x48; // FScriptMulticastDelegate
		constexpr auto GUIModuleController = 0x58; // UGUIModuleController*
	}

	namespace n_UEnvQueryTest_GameplayTags { // : UEnvQueryTest
		constexpr auto TagQueryToMatch = 0x1c0; // FGameplayTagQuery
		constexpr auto bUpdatedToUseQuery = 0x208; // bool
		constexpr auto TagsToMatch = 0x209; // EGameplayContainerMatchType
		constexpr auto GameplayTags = 0x210; // FGameplayTagContainer
	}

	namespace n_UEnvQueryTest_Overlap { // : UEnvQueryTest
		constexpr auto OverlapData = 0x1c0; // FEnvOverlapData
	}

	namespace n_UCanvasPanel { // : UPanelWidget
		constexpr auto Slots = 0x118; // TArray<UPanelSlot*>
	}

	namespace n_UMaterialExpressionLandscapeLayerCoords { // : UMaterialExpression
		constexpr auto MappingType = 0x60; // ETerrainCoordMappingType
		constexpr auto CustomUVType = 0x61; // ELandscapeCustomizedCoordType
		constexpr auto MappingScale = 0x64; // float
		constexpr auto MappingRotation = 0x68; // float
		constexpr auto MappingPanU = 0x6c; // float
		constexpr auto MappingPanV = 0x70; // float
	}

	namespace n_UBlendSpace { // : UBlendSpaceBase
		constexpr auto AxisToScaleAnimation = 0x140; // EBlendSpaceAxis
	}

	namespace n_UMaterialExpressionSine { // : UMaterialExpression
		constexpr auto Input = 0x60; // FExpressionInput
		constexpr auto Period = 0x98; // float
	}

	namespace n_UTileView { // : UTableViewBase
		constexpr auto ItemWidth = 0x118; // float
		constexpr auto ItemHeight = 0x11c; // float
		constexpr auto Items = 0x120; // TArray<UObject*>
		constexpr auto SelectionMode = 0x130; // ESelectionMode
		constexpr auto OnGenerateTileEvent = 0x138; // DelegateProperty
	}

	namespace n_UAnimCompress_PerTrackCompression { // : UAnimCompress_RemoveLinearKeys
		constexpr auto MaxZeroingThreshold = 0x60; // float
		constexpr auto MaxPosDiffBitwise = 0x64; // float
		constexpr auto MaxAngleDiffBitwise = 0x68; // float
		constexpr auto MaxScaleDiffBitwise = 0x6c; // float
		constexpr auto AllowedRotationFormats = 0x70; // TArray<AnimationCompressionFormat>
		constexpr auto AllowedTranslationFormats = 0x80; // TArray<AnimationCompressionFormat>
		constexpr auto AllowedScaleFormats = 0x90; // TArray<AnimationCompressionFormat>
		constexpr auto bResampleAnimation = 0xa0; // char : 1
		constexpr auto ResampledFramerate = 0xa4; // float
		constexpr auto MinKeysForResampling = 0xa8; // int32_t
		constexpr auto bUseAdaptiveError = 0xac; // char : 1
		constexpr auto bUseOverrideForEndEffectors = 0xac; // char : 1
		constexpr auto TrackHeightBias = 0xb0; // int32_t
		constexpr auto ParentingDivisor = 0xb4; // float
		constexpr auto ParentingDivisorExponent = 0xb8; // float
		constexpr auto bUseAdaptiveError2 = 0xbc; // char : 1
		constexpr auto RotationErrorSourceRatio = 0xc0; // float
		constexpr auto TranslationErrorSourceRatio = 0xc4; // float
		constexpr auto ScaleErrorSourceRatio = 0xc8; // float
		constexpr auto MaxErrorPerTrackRatio = 0xcc; // float
		constexpr auto PerturbationProbeSize = 0xd0; // float
	}

	namespace n_UHorizontalBoxSlot { // : UPanelSlot
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto Size = 0x48; // FSlateChildSize
		constexpr auto HorizontalAlignment = 0x50; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x51; // EVerticalAlignment
	}

	namespace n_UFollowersListBase { // : UCharacterListBase
		constexpr auto m_IsBusyIndicator = 0x350; // UThrobber*
		constexpr auto m_FollowersContextMenu = 0x368; // UFollowersContextMenu*
	}

	namespace n_ACacheModule { // : AActor
		constexpr auto CachedItems = 0x3d0; // TMap<UObject*, float>
	}

	namespace n_UMaterialExpressionFrac { // : UMaterialExpression
		constexpr auto Input = 0x60; // FExpressionInput
	}

	namespace n_UMaterialExpressionTextureObjectParameter { // : UMaterialExpressionTextureSampleParameter
		constexpr auto ParameterName = 0x198; // FName
		constexpr auto ExpressionGUID = 0x1a0; // FGuid
		constexpr auto Group = 0x1b0; // FName
	}

	namespace n_UW_Friends_FriendRequests_C { // : UFriendRequestGame
		constexpr auto FriendRequestEntryList = 0x3c8; // UW_NavigatableVerticalBox_C*
	}

	namespace n_UStaticMeshSocket { // : UObject
		constexpr auto SocketName = 0x28; // FName
		constexpr auto RelativeLocation = 0x30; // FVector
		constexpr auto RelativeRotation = 0x3c; // FRotator
		constexpr auto RelativeScale = 0x48; // FVector
		constexpr auto Tag = 0x58; // FString
	}

	namespace n_UShadowMapTexture2D { // : UTexture2D
		constexpr auto ShadowmapFlags = 0x110; // EShadowMapFlags
		constexpr auto GraniteTexture = 0x118; // UGraniteTexture*
	}

	namespace n_UAnimSet { // : UObject
		constexpr auto bAnimRotationOnly = 0x28; // char : 1
		constexpr auto TrackBoneNames = 0x30; // TArray<FName>
		constexpr auto LinkupCache = 0x40; // TArray<FAnimSetMeshLinkup>
		constexpr auto BoneUseAnimTranslation = 0x50; // TArray<char>
		constexpr auto ForceUseMeshTranslation = 0x60; // TArray<char>
		constexpr auto UseTranslationBoneNames = 0x70; // TArray<FName>
		constexpr auto ForceMeshTranslationBoneNames = 0x80; // TArray<FName>
		constexpr auto PreviewSkelMeshName = 0x90; // FName
		constexpr auto BestRatioSkelMeshName = 0x98; // FName
	}

	namespace n_UW_MessageBox_C { // : UMessageBoxWidget
		constexpr auto B_Cancel = 0x458; // UW_ButtonLarge_C*
		constexpr auto B_No = 0x460; // UW_ButtonLarge_C*
		constexpr auto B_OK = 0x468; // UW_ButtonLarge_C*
		constexpr auto B_Yes = 0x470; // UW_ButtonLarge_C*
		constexpr auto ButtonContainer = 0x478; // UHorizontalBox*
		constexpr auto Image_1 = 0x480; // UImage*
		constexpr auto KeyNavAnchor = 0x488; // UW_TooltipOverlay_C*
		constexpr auto T_Message = 0x490; // UW_FCMultiLineEditableTextBox_C*
		constexpr auto Throbber_Waiting = 0x498; // UThrobber*
	}

	namespace n_UProperyDestructionHistoryBase { // : UWindowRoot
		constexpr auto MinProximity = 0x398; // float
		constexpr auto DefaultProximity = 0x39c; // float
		constexpr auto MaxProximity = 0x3a0; // float
		constexpr auto MinDaysPassed = 0x3a4; // int32_t
		constexpr auto DefaultDaysPassed = 0x3a8; // int32_t
		constexpr auto MaxDaysPassed = 0x3ac; // int32_t
		constexpr auto MaxLogLength = 0x3b0; // int32_t
		constexpr auto m_UpdatedDelegate = 0x448; // DelegateProperty
	}

	namespace n_APrecomputedVisibilityOverrideVolume { // : AVolume
		constexpr auto OverrideVisibleActors = 0x408; // TArray<AActor*>
		constexpr auto OverrideInvisibleActors = 0x418; // TArray<AActor*>
		constexpr auto OverrideInvisibleLevels = 0x428; // TArray<FName>
	}

	namespace n_USizeBox { // : UContentWidget
		constexpr auto bOverride_WidthOverride = 0x130; // char : 1
		constexpr auto bOverride_HeightOverride = 0x130; // char : 1
		constexpr auto bOverride_MinDesiredWidth = 0x130; // char : 1
		constexpr auto bOverride_MinDesiredHeight = 0x130; // char : 1
		constexpr auto bOverride_MaxDesiredWidth = 0x130; // char : 1
		constexpr auto bOverride_MaxDesiredHeight = 0x130; // char : 1
		constexpr auto bOverride_MaxAspectRatio = 0x130; // char : 1
		constexpr auto WidthOverride = 0x134; // float
		constexpr auto HeightOverride = 0x138; // float
		constexpr auto MinDesiredWidth = 0x13c; // float
		constexpr auto MinDesiredHeight = 0x140; // float
		constexpr auto MaxDesiredWidth = 0x144; // float
		constexpr auto MaxDesiredHeight = 0x148; // float
		constexpr auto MaxAspectRatio = 0x14c; // float
	}

	namespace n_UInventoryIconView_C { // : UInventoryIconViewBase
		constexpr auto UberGraphFrame = 0x480; // FPointerToUberGraphFrame
		constexpr auto Anim_CannotMove = 0x488; // UWidgetAnimation*
		constexpr auto Anim_Repair = 0x490; // UWidgetAnimation*
		constexpr auto Anim_Filter = 0x498; // UWidgetAnimation*
		constexpr auto Anim_Move = 0x4a0; // UWidgetAnimation*
	}

	namespace n_UBaseMediaSource { // : UMediaSource
		constexpr auto playerName = 0x30; // FName
	}

	namespace n_UStringEnumFixedListDataprovider { // : UStringEnumDataprovider
		constexpr auto m_Entries = 0x30; // TArray<FName>
	}

	namespace n_APlayerPawnRegistry { // : AActor
		constexpr auto m_ExtraPlayerPawns = 0x3d0; // TArray<APawn*>
		constexpr auto m_ExtraActors = 0x3e0; // TArray<AActor*>
	}

	namespace n_UHUDCraftingBase { // : UWindowRoot
		constexpr auto m_CratfingQueue = 0x398; // UCraftingQueue*
	}

	namespace n_UFIFOMessageView { // : URootWidget
		constexpr auto TextureFifoBlood2 = 0x318; // UTexture2D*
		constexpr auto TextureFifoBlood3 = 0x338; // UTexture2D*
	}

	namespace n_UMaterialExpressionLinearInterpolate { // : UMaterialExpression
		constexpr auto A = 0x60; // FExpressionInput
		constexpr auto B = 0x98; // FExpressionInput
		constexpr auto Alpha = 0xd0; // FExpressionInput
		constexpr auto ConstA = 0x108; // float
		constexpr auto ConstB = 0x10c; // float
		constexpr auto ConstAlpha = 0x110; // float
	}

	namespace n_UAIPerceptionStimuliSourceComponent { // : UActorComponent
		constexpr auto bAutoRegisterAsSource = 0xf8; // char : 1
		constexpr auto RegisterAsSourceForSenses = 0x100; // TArray<UAISense*>
	}

	namespace n_UMaterialExpressionParticleSpeed { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto Desc = 0x38; // FString
		constexpr auto BorderColor = 0x48; // FColor
		constexpr auto bRealtimePreview = 0x4c; // char : 1
		constexpr auto bNeedToUpdatePreview = 0x4c; // char : 1
		constexpr auto bIsParameterExpression = 0x4c; // char : 1
		constexpr auto bCommentBubbleVisible = 0x4c; // char : 1
		constexpr auto bShowOutputNameOnPin = 0x4c; // char : 1
		constexpr auto bHidePreviewWindow = 0x4c; // char : 1
		constexpr auto bCollapsed = 0x4c; // char : 1
		constexpr auto bShaderInputData = 0x4c; // char : 1
		constexpr auto bShowInputs = 0x4c; // char : 1
		constexpr auto bShowOutputs = 0x4c; // char : 1
		constexpr auto Outputs = 0x50; // TArray<FExpressionOutput>
	}

	namespace n_UConanBTDecorator_Base { // : UBTDecorator
		constexpr auto UpdateRate = 0x68; // float
	}

	namespace n_ULandscapeHeightfieldCollisionComponent { // : UPrimitiveComponent
		constexpr auto ComponentLayerInfos = 0x6c0; // TArray<ULandscapeLayerInfoObject*>
		constexpr auto SectionBaseX = 0x6d0; // int32_t
		constexpr auto SectionBaseY = 0x6d4; // int32_t
		constexpr auto CollisionSizeQuads = 0x6d8; // int32_t
		constexpr auto CollisionScale = 0x6dc; // float
		constexpr auto SimpleCollisionSizeQuads = 0x6e0; // int32_t
		constexpr auto CollisionQuadFlags = 0x6e8; // TArray<char>
		constexpr auto HeightfieldGuid = 0x6f8; // FGuid
		constexpr auto CachedLocalBox = 0x708; // FBox
		constexpr auto RenderComponent = 0x724; // ULandscapeComponent*
		constexpr auto CookedPhysicalMaterials = 0x750; // TArray<UPhysicalMaterial*>
	}

	namespace n_ASpotLight { // : ALight
		constexpr auto SpotLightComponent = 0x3e0; // USpotLightComponent*
	}

	namespace n_UBTDecorator_SetTagCooldown { // : UBTDecorator
		constexpr auto CooldownTag = 0x68; // FGameplayTag
		constexpr auto CooldownDuration = 0x70; // float
		constexpr auto bAddToExistingDuration = 0x74; // bool
	}

	namespace n_AEQSTestingPawn { // : ACharacter
		constexpr auto QueryTemplate = 0x7f8; // UEnvQuery*
		constexpr auto QueryParams = 0x800; // TArray<FEnvNamedValue>
		constexpr auto QueryConfig = 0x810; // TArray<FAIDynamicParam>
		constexpr auto TimeLimitPerStep = 0x820; // float
		constexpr auto StepToDebugDraw = 0x824; // int32_t
		constexpr auto HighlightMode = 0x828; // EEnvQueryHightlightMode
		constexpr auto bDrawLabels = 0x82c; // char : 1
		constexpr auto bDrawFailedItems = 0x82c; // char : 1
		constexpr auto bReRunQueryOnlyOnFinishedMove = 0x82c; // char : 1
		constexpr auto bShouldBeVisibleInGame = 0x82c; // char : 1
		constexpr auto bTickDuringGame = 0x82c; // char : 1
		constexpr auto QueryingMode = 0x830; // EEnvQueryRunMode
	}

	namespace n_UPawnActionsComponent { // : UActorComponent
		constexpr auto ControlledPawn = 0xf8; // APawn*
		constexpr auto ActionStacks = 0x100; // TArray<FPawnActionStack>
		constexpr auto ActionEvents = 0x110; // TArray<FPawnActionEvent>
		constexpr auto CurrentAction = 0x120; // UPawnAction*
	}

	namespace n_UMaterialExpressionAbs { // : UMaterialExpression
		constexpr auto Input = 0x60; // FExpressionInput
	}

	namespace n_APhysicsConstraintActor { // : ARigidBodyBase
		constexpr auto ConstraintComp = 0x3d0; // UPhysicsConstraintComponent*
		constexpr auto ConstraintActor1 = 0x3d8; // AActor*
		constexpr auto ConstraintActor2 = 0x3e0; // AActor*
		constexpr auto bDisableCollision = 0x3e8; // char : 1
	}

	namespace n_UPlayFabGroupsAPI { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnPlayFabResponse = 0x28; // FScriptMulticastDelegate
		constexpr auto CallAuthenticationContext = 0x210; // UPlayFabAuthenticationContext*
		constexpr auto RequestJsonObj = 0x218; // UPlayFabJsonObject*
		constexpr auto ResponseJsonObj = 0x220; // UPlayFabJsonObject*
	}

	namespace n_AStaticWaypoint { // : AActor
		constexpr auto NextWaypoint = 0x3d0; // AStaticWaypoint*
		constexpr auto Root = 0x3d8; // USceneComponent*
	}

	namespace n_UConanAIPerceptionComponent { // : UAIPerceptionComponent
		constexpr auto HearingUpdateInterval = 0x1d0; // float
		constexpr auto HearingRadius = 0x1d4; // float
	}

	namespace n_UParticleModuleTrailBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x28; // char : 1
		constexpr auto LODDuplicate = 0x28; // char : 1
		constexpr auto bSupportsRandomSeed = 0x28; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x28; // char : 1
		constexpr auto LODValidity = 0x2c; // char
	}

	namespace n_UExilesJourneyTrialStep { // : UWindowRoot
		constexpr auto CloseOnClick = 0x318; // bool
		constexpr auto BlockPlayerInput = 0x319; // bool
		constexpr auto OpeningSlateSound = 0x320; // FSlateSound
		constexpr auto ClosingSlateSound = 0x338; // FSlateSound
		constexpr auto SignalClosing = 0x350; // FScriptMulticastDelegate
		constexpr auto SignalOpened = 0x360; // FScriptMulticastDelegate
		constexpr auto m_WindowHotkeys = 0x370; // TArray<FGamepadHotkeyHelp>
		constexpr auto m_InputComponent = 0x380; // UInputComponent*
		constexpr auto m_GUIModule = 0x388; // UGUIModule*
	}

	namespace n_AConanPlayerCameraManager { // : APlayerCameraManager
		constexpr auto PCOwner = 0x3d0; // APlayerController*
		constexpr auto TransformComponent = 0x3d8; // USceneComponent*
		constexpr auto DefaultFOV = 0x3e8; // float
		constexpr auto DefaultOrthoWidth = 0x3f0; // float
		constexpr auto DefaultAspectRatio = 0x3f8; // float
		constexpr auto CameraCache = 0x440; // FCameraCacheEntry
		constexpr auto LastFrameCameraCache = 0x970; // FCameraCacheEntry
		constexpr auto ViewTarget = 0xea0; // FTViewTarget
		constexpr auto PendingViewTarget = 0x13e0; // FTViewTarget
		constexpr auto ModifierList = 0x1938; // TArray<UCameraModifier*>
		constexpr auto DefaultModifiers = 0x1948; // TArray<UCameraModifier*>
		constexpr auto FreeCamDistance = 0x1958; // float
		constexpr auto FreeCamOffset = 0x195c; // FVector
		constexpr auto ViewTargetOffset = 0x1968; // FVector
		constexpr auto CameraLensEffects = 0x1988; // TArray<AEmitterCameraLensEffectBase*>
		constexpr auto CachedCameraShakeMod = 0x1998; // UCameraModifier_CameraShake*
		constexpr auto AnimInstPool = 0x19a0; // UCameraAnimInst* [0x8]
		constexpr auto PostProcessBlendCache = 0x19e0; // TArray<FPostProcessSettings>
		constexpr auto ActiveAnims = 0x1a00; // TArray<UCameraAnimInst*>
		constexpr auto FreeAnims = 0x1a10; // TArray<UCameraAnimInst*>
		constexpr auto AnimCameraActor = 0x1a20; // ACameraActor*
		constexpr auto bIsOrthographic = 0x1a28; // char : 1
		constexpr auto bUseClientSideCameraUpdates = 0x1a28; // char : 1
		constexpr auto ViewPitchMin = 0x1a2c; // float
		constexpr auto ViewPitchMax = 0x1a30; // float
		constexpr auto ViewYawMin = 0x1a34; // float
		constexpr auto ViewYawMax = 0x1a38; // float
		constexpr auto ViewRollMin = 0x1a3c; // float
		constexpr auto ViewRollMax = 0x1a40; // float
	}

	namespace n_APlayerStart { // : ANavigationObjectBase
		constexpr auto PlayerStartTag = 0x3f8; // FName
	}

	namespace n_UGamemodeHintsBase { // : UWindowRoot
		constexpr auto LabelsTable = 0x398; // UDataTable*
		constexpr auto ActionMappings = 0x3a0; // TMap<EGamemode, FModeMappings>
		constexpr auto CombatHintsResetTime = 0x3f0; // float
	}

	namespace n_UWorld { // : UObject
		constexpr auto PersistentLevel = 0x30; // ULevel*
		constexpr auto NetDriver = 0x38; // UNetDriver*
		constexpr auto LineBatcher = 0x40; // ULineBatchComponent*
		constexpr auto PersistentLineBatcher = 0x48; // ULineBatchComponent*
		constexpr auto ForegroundLineBatcher = 0x50; // ULineBatchComponent*
		constexpr auto NetworkManager = 0x58; // AGameNetworkManager*
		constexpr auto PhysicsCollisionHandler = 0x60; // UPhysicsCollisionHandler*
		constexpr auto ExtraReferencedObjects = 0x68; // TArray<UObject*>
		constexpr auto PerModuleDataObjects = 0x78; // TArray<UObject*>
		constexpr auto StreamingLevels = 0x88; // TArray<ULevelStreaming*>
		constexpr auto StreamingLevelsPrefix = 0x98; // FString
		constexpr auto CurrentLevelPendingVisibility = 0xa8; // ULevel*
		constexpr auto CurrentLevelPendingInvisibility = 0xb0; // ULevel*
		constexpr auto DemoNetDriver = 0xb8; // UDemoNetDriver*
		constexpr auto MyParticleEventManager = 0xc0; // AParticleEventManager*
		constexpr auto DefaultPhysicsVolume = 0xc8; // APhysicsVolume*
		constexpr auto NavigationSystem = 0xe8; // UNavigationSystem*
		constexpr auto AuthorityGameMode = 0xf0; // AGameModeBase*
		constexpr auto GameState = 0xf8; // AGameStateBase*
		constexpr auto AISystem = 0x100; // UAISystemBase*
		constexpr auto AvoidanceManager = 0x108; // UAvoidanceManager*
		constexpr auto Levels = 0x110; // TArray<ULevel*>
		constexpr auto LevelCollections = 0x120; // TArray<FLevelCollection>
		constexpr auto CurrentLevel = 0x138; // ULevel*
		constexpr auto OwningGameInstance = 0x140; // UGameInstance*
		constexpr auto ParameterCollectionInstances = 0x148; // TArray<UMaterialParameterCollectionInstance*>
		constexpr auto CanvasForRenderingToTarget = 0x158; // UCanvas*
		constexpr auto CanvasForDrawMaterialToRenderTarget = 0x160; // UCanvas*
		constexpr auto WorldComposition = 0x938; // UWorldComposition*
		constexpr auto bAreConstraintsDirty = 0x988; // char : 1
	}

	namespace n_UExilesJourneyChapter { // : URootWidget
		constexpr auto Header = 0x318; // FText
		constexpr auto chapter = 0x330; // JourneyChapter
	}

	namespace n_ULevelStreamingKismet { // : ULevelStreaming
		constexpr auto bInitiallyLoaded = 0x158; // char : 1
		constexpr auto bInitiallyVisible = 0x158; // char : 1
	}

	namespace n_UW_FriendTabButton_C { // : UTabButtonBase
		constexpr auto UberGraphFrame = 0xc28; // FPointerToUberGraphFrame
		constexpr auto CheckboxOverlay = 0xc30; // UNamedSlot*
		constexpr auto Counter = 0xc38; // UTextBlock*
		constexpr auto LabelView = 0xc40; // UTextBlock*
		constexpr auto Size = 0xc48; // USizeBox*
		constexpr auto SizeOverride = 0xc50; // FVector2D
	}

	namespace n_AParticleEventManager { // : AActor
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto CustomTimeDilation = 0x80; // float
		constexpr auto bHidden = 0x84; // char : 1
		constexpr auto bNetTemporary = 0x84; // char : 1
		constexpr auto bNetStartup = 0x84; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x84; // char : 1
		constexpr auto bAlwaysRelevant = 0x84; // char : 1
		constexpr auto bReplicateMovement = 0x84; // char : 1
		constexpr auto bTearOff = 0x84; // char : 1
		constexpr auto bExchangedRoles = 0x84; // char : 1
		constexpr auto bPendingNetUpdate = 0x85; // char : 1
		constexpr auto bNetLoadOnClient = 0x85; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x85; // char : 1
		constexpr auto bBlockInput = 0x85; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x85; // char : 1
		constexpr auto bActorEnableCollision = 0x86; // char : 1
		constexpr auto bReplicates = 0x86; // char : 1
		constexpr auto bLostRelevancy = 0x86; // char : 1
		constexpr auto NetDriverName = 0x88; // FName
		constexpr auto bCanBeInCluster = 0x90; // char : 1
		constexpr auto RemoteRole = 0x91; // ENetRole
		constexpr auto Owner = 0x98; // AActor*
		constexpr auto ReplicatedMovement = 0xa0; // FRepMovement
		constexpr auto AttachmentReplication = 0xd8; // FRepAttachment
		constexpr auto Role = 0x118; // ENetRole
		constexpr auto AutoReceiveInput = 0x11a; // EAutoReceiveInput
		constexpr auto InputPriority = 0x11c; // int32_t
		constexpr auto InputComponent = 0x120; // UInputComponent*
		constexpr auto InputConsumeOption = 0x128; // EInputConsumeOptions
		constexpr auto NetCullDistanceSquared = 0x12c; // float
		constexpr auto ViewTargetNetCullDistanceSquared = 0x130; // float
		constexpr auto NetTag = 0x134; // int32_t
		constexpr auto NetUpdateTime = 0x138; // float
		constexpr auto NetUpdateFrequency = 0x13c; // float
		constexpr auto MinNetUpdateFrequency = 0x140; // float
		constexpr auto NetPriority = 0x144; // float
		constexpr auto LastNetUpdateTime = 0x148; // float
		constexpr auto bAutoDestroyWhenFinished = 0x14c; // char : 1
		constexpr auto bCanBeDamaged = 0x14c; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x14c; // char : 1
		constexpr auto bCollideWhenPlacing = 0x14c; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x14c; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x14c; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x14c; // char : 1
		constexpr auto SpawnCollisionHandlingMethod = 0x14d; // ESpawnActorCollisionHandlingMethod
		constexpr auto Instigator = 0x158; // APawn*
		constexpr auto Children = 0x160; // TArray<AActor*>
		constexpr auto RootComponent = 0x170; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x178; // TArray<AMatineeActor*>
		constexpr auto InitialLifeSpan = 0x188; // float
		constexpr auto Layers = 0x198; // TArray<FName>
		constexpr auto ParentComponentActor = 0x1a8; // TWeakObjectPtr<AActor>
		constexpr auto ParentComponent = 0x1b0; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x1b8; // char : 1
		constexpr auto bUseExtendedRelevancyTimeout = 0x1b8; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x1b8; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x1b8; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x1b8; // char : 1
		constexpr auto Tags = 0x1c0; // TArray<FName>
		constexpr auto HiddenEditorViews = 0x1d0; // uint64_t
		constexpr auto OnTakeAnyDamage = 0x1d8; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x1e8; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x1f8; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x208; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x218; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x228; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x238; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x248; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x258; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x268; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x278; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x288; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x298; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x2a8; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x2b8; // FScriptMulticastDelegate
		constexpr auto BlueprintCreatedComponents = 0x3a8; // TArray<UActorComponent*>
		constexpr auto InstanceComponents = 0x3b8; // TArray<UActorComponent*>
	}

	namespace n_UParticleModuleTypeDataRibbon { // : UParticleModuleTypeDataBase
		constexpr auto MaxTessellationBetweenParticles = 0x30; // int32_t
		constexpr auto SheetsPerTrail = 0x34; // int32_t
		constexpr auto MaxTrailCount = 0x38; // int32_t
		constexpr auto MaxParticleInTrailCount = 0x3c; // int32_t
		constexpr auto bDeadTrailsOnDeactivate = 0x40; // char : 1
		constexpr auto bDeadTrailsOnSourceLoss = 0x40; // char : 1
		constexpr auto bClipSourceSegement = 0x40; // char : 1
		constexpr auto bEnablePreviousTangentRecalculation = 0x40; // char : 1
		constexpr auto bTangentRecalculationEveryFrame = 0x40; // char : 1
		constexpr auto bSpawnInitialParticle = 0x40; // char : 1
		constexpr auto RenderAxis = 0x44; // ETrailsRenderAxisOption
		constexpr auto TangentSpawningScalar = 0x48; // float
		constexpr auto bRenderGeometry = 0x4c; // char : 1
		constexpr auto bRenderSpawnPoints = 0x4c; // char : 1
		constexpr auto bRenderTangents = 0x4c; // char : 1
		constexpr auto bRenderTessellation = 0x4c; // char : 1
		constexpr auto TilingDistance = 0x50; // float
		constexpr auto DistanceTessellationStepSize = 0x54; // float
		constexpr auto bEnableTangentDiffInterpScale = 0x58; // char : 1
		constexpr auto TangentTessellationScalar = 0x5c; // float
	}

	namespace n_UInGameJoinOrInvite { // : UObject
		constexpr auto m_MessageBox = 0x130; // UMessageBoxWidget*
	}

	namespace n_UEnergySourceComponent { // : UActorComponent
		constexpr auto TickInterval = 0xf8; // float
		constexpr auto RegisterAsSourceForEnergies = 0x100; // TArray<FBaseEnergy>
		constexpr auto EnergySourceRegisteredDelegate = 0x110; // FScriptMulticastDelegate
	}

	namespace n_UFoliageType { // : UObject
		constexpr auto UpdateGuid = 0x28; // FGuid
		constexpr auto DestructibleMesh = 0x38; // UDestructibleMesh*
		constexpr auto Density = 0x58; // float
		constexpr auto DensityAdjustmentFactor = 0x5c; // float
		constexpr auto Radius = 0x60; // float
		constexpr auto Scaling = 0x64; // EFoliageScaling
		constexpr auto ScaleX = 0x68; // FFloatInterval
		constexpr auto ScaleY = 0x70; // FFloatInterval
		constexpr auto ScaleZ = 0x78; // FFloatInterval
		constexpr auto VertexColorMaskByChannel = 0x80; // FFoliageVertexColorChannelMask [0x4]
		constexpr auto VertexColorMask = 0xb0; // FoliageVertexColorMask
		constexpr auto VertexColorMaskThreshold = 0xb4; // float
		constexpr auto VertexColorMaskInvert = 0xb8; // char : 1
		constexpr auto ZOffset = 0xbc; // FFloatInterval
		constexpr auto AlignToNormal = 0xc4; // char : 1
		constexpr auto AlignMaxAngle = 0xc8; // float
		constexpr auto RandomYaw = 0xcc; // char : 1
		constexpr auto RandomPitchAngle = 0xd0; // float
		constexpr auto GroundSlopeAngle = 0xd4; // FFloatInterval
		constexpr auto Height = 0xdc; // FFloatInterval
		constexpr auto LandscapeLayers = 0xe8; // TArray<FName>
		constexpr auto LandscapeLayer = 0xf8; // FName
		constexpr auto CollisionWithWorld = 0x100; // char : 1
		constexpr auto CollisionScale = 0x104; // FVector
		constexpr auto MinimumLayerWeight = 0x110; // float
		constexpr auto MeshBounds = 0x114; // FBoxSphereBounds
		constexpr auto LowBoundOriginRadius = 0x130; // FVector
		constexpr auto Mobility = 0x13c; // EComponentMobility
		constexpr auto CullDistance = 0x140; // FInt32Interval
		constexpr auto bEnableStaticLighting = 0x148; // char : 1
		constexpr auto CastShadow = 0x148; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x148; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x148; // char : 1
		constexpr auto bCastDynamicShadow = 0x148; // char : 1
		constexpr auto bCastStaticShadow = 0x148; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x148; // char : 1
		constexpr auto bReceivesDecals = 0x148; // char : 1
		constexpr auto bOverrideLightMapRes = 0x148; // char : 1
		constexpr auto OverriddenLightMapRes = 0x14c; // int32_t
		constexpr auto bUseAsOccluder = 0x150; // char : 1
		constexpr auto BodyInstance = 0x160; // FBodyInstance
		constexpr auto CustomNavigableGeometry = 0x390; // EHasCustomNavigableGeometry
		constexpr auto LightingChannels = 0x391; // FLightingChannels
		constexpr auto CollisionRadius = 0x394; // float
		constexpr auto ShadeRadius = 0x398; // float
		constexpr auto NumSteps = 0x39c; // int32_t
		constexpr auto InitialSeedDensity = 0x3a0; // float
		constexpr auto AverageSpreadDistance = 0x3a4; // float
		constexpr auto SpreadVariance = 0x3a8; // float
		constexpr auto SeedsPerStep = 0x3ac; // int32_t
		constexpr auto DistributionSeed = 0x3b0; // int32_t
		constexpr auto MaxInitialSeedOffset = 0x3b4; // float
		constexpr auto bCanGrowInShade = 0x3b8; // bool
		constexpr auto bSpawnsInShade = 0x3b9; // bool
		constexpr auto MaxInitialAge = 0x3bc; // float
		constexpr auto MaxAge = 0x3c0; // float
		constexpr auto OverlapPriority = 0x3c4; // float
		constexpr auto ProceduralScale = 0x3c8; // FFloatInterval
		constexpr auto ScaleCurve = 0x3d0; // FRuntimeFloatCurve
		constexpr auto ChangeCount = 0x448; // int32_t
		constexpr auto ReapplyDensity = 0x44c; // char : 1
		constexpr auto ReapplyRadius = 0x44c; // char : 1
		constexpr auto ReapplyAlignToNormal = 0x44c; // char : 1
		constexpr auto ReapplyRandomYaw = 0x44c; // char : 1
		constexpr auto ReapplyScaling = 0x44c; // char : 1
		constexpr auto ReapplyScaleX = 0x44c; // char : 1
		constexpr auto ReapplyScaleY = 0x44c; // char : 1
		constexpr auto ReapplyScaleZ = 0x44c; // char : 1
		constexpr auto ReapplyRandomPitchAngle = 0x44c; // char : 1
		constexpr auto ReapplyGroundSlope = 0x44c; // char : 1
		constexpr auto ReapplyHeight = 0x44c; // char : 1
		constexpr auto ReapplyLandscapeLayers = 0x44c; // char : 1
		constexpr auto ReapplyZOffset = 0x44c; // char : 1
		constexpr auto ReapplyCollisionWithWorld = 0x44c; // char : 1
		constexpr auto ReapplyVertexColorMask = 0x44c; // char : 1
		constexpr auto bEnableDensityScaling = 0x44c; // char : 1
	}

	namespace n_UAIPerceptionComponent { // : UActorComponent
		constexpr auto SensesConfig = 0xf8; // TArray<UAISenseConfig*>
		constexpr auto DominantSense = 0x108; // UAISense*
		constexpr auto AIOwner = 0x120; // AAIController*
		constexpr auto OnPerceptionUpdated = 0x1a8; // FScriptMulticastDelegate
		constexpr auto OnTargetPerceptionUpdated = 0x1b8; // FScriptMulticastDelegate
	}

	namespace n_UCustomMeshComponent { // : UMeshComponent
		constexpr auto OverrideMaterials = 0x6c0; // TArray<UMaterialInterface*>
	}

	namespace n_UW_MainMenuButton_C { // : UW_FCButton_C
		constexpr auto UberGraphFrame = 0xc28; // FPointerToUberGraphFrame
		constexpr auto LabelView = 0xc30; // UTextBlock*
		constexpr auto Label_1 = 0xc38; // FText
		constexpr auto HoverColor = 0xc50; // FSlateColor
		constexpr auto DefaultColor = 0xc78; // FSlateColor
	}

	namespace n_UEnvQueryManager { // : UObject
		constexpr auto InstanceCache = 0x98; // TArray<FEnvQueryInstanceCache>
		constexpr auto LocalContexts = 0xa8; // TArray<UEnvQueryContext*>
		constexpr auto GCShieldedWrappers = 0xb8; // TArray<UEnvQueryInstanceBlueprintWrapper*>
		constexpr auto MaxAllowedTestingTime = 0x120; // double
		constexpr auto bTestQueriesUsingBreadth = 0x128; // bool
		constexpr auto QueryCountWarningThreshold = 0x12c; // int32_t
		constexpr auto QueryCountWarningInterval = 0x130; // double
	}

	namespace n_UEnvQueryTest_Trace { // : UEnvQueryTest
		constexpr auto TraceData = 0x1c0; // FEnvTraceData
		constexpr auto TraceFromContext = 0x1f0; // FAIDataProviderBoolValue
		constexpr auto ItemHeightOffset = 0x220; // FAIDataProviderFloatValue
		constexpr auto ContextHeightOffset = 0x250; // FAIDataProviderFloatValue
		constexpr auto Context = 0x280; // UEnvQueryContext*
	}

	namespace n_USoundNodeParamCrossFade { // : USoundNodeDistanceCrossFade
		constexpr auto ParamName = 0x48; // FName
	}

	namespace n_ALevelScriptActor { // : AActor
		constexpr auto bInputEnabled = 0x3d0; // char : 1
	}

	namespace n_UInterpTrackInstSound { // : UInterpTrackInst
		constexpr auto LastUpdatePosition = 0x28; // float
		constexpr auto PlayAudioComp = 0x30; // UAudioComponent*
	}

	namespace n_USubmixEffectSubmixEQPreset { // : USoundEffectSubmixPreset
		constexpr auto Settings = 0x40; // FSubmixEffectSubmixEQSettings
	}

	namespace n_UBreakpoint { // : UObject
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto Node = 0x30; // UEdGraphNode*
		constexpr auto bStepOnce = 0x38; // char : 1
		constexpr auto bStepOnce_WasPreviouslyDisabled = 0x38; // char : 1
		constexpr auto bStepOnce_RemoveAfterHit = 0x38; // char : 1
	}

	namespace n_USoundGroups { // : UObject
		constexpr auto SoundGroupProfiles = 0x28; // TArray<FSoundGroup>
	}

	namespace n_UGUIModuleController { // : UObject
		constexpr auto SignalMouseEnabled = 0x28; // FScriptMulticastDelegate
		constexpr auto SignalGUIControlModeChanged = 0x38; // FScriptMulticastDelegate
		constexpr auto SignalGamepadKeyDown = 0x48; // FScriptMulticastDelegate
		constexpr auto SignalKeyBindingsChanged = 0x58; // FScriptMulticastDelegate
		constexpr auto SignalUserInactive = 0x68; // FScriptMulticastDelegate
		constexpr auto SignalResetGamepadOverlay = 0x78; // FScriptMulticastDelegate
		constexpr auto m_WindowList = 0x90; // TArray<UWindowRoot*>
		constexpr auto m_MouseBlockWindow = 0xa0; // UWindowRoot*
		constexpr auto m_HotkeyHelpOverlay = 0xa8; // UWindowRoot*
		constexpr auto m_Modules = 0xb0; // TArray<UGUIModule*>
		constexpr auto m_EscapeStack = 0xc0; // TArray<UEscapeStackNode*>
		constexpr auto m_GUIModuleTable = 0xd0; // UDataTable*
		constexpr auto m_KeyNavSelectedWidget = 0xe0; // URootWidget*
		constexpr auto m_LoadingScreenMessageBoxes = 0x170; // TArray<UMessageBoxWidget*>
		constexpr auto m_PlayerController = 0x1a8; // AConanPlayerController*
		constexpr auto m_InputComponent = 0x1b0; // UInputComponent*
	}

	namespace n_UInputKeyDelegateBinding { // : UInputDelegateBinding
		constexpr auto InputKeyDelegateBindings = 0x28; // TArray<FBlueprintInputKeyDelegateBinding>
	}

	namespace n_UPickupFoliage { // : UInteractableFoliageBase
		constexpr auto DestructibleMesh = 0x9e0; // UDestructibleMesh*
		constexpr auto OnInstanceTakePointDamage = 0xa00; // FScriptMulticastDelegate
		constexpr auto OnInstanceTakeRadialDamage = 0xa10; // FScriptMulticastDelegate
		constexpr auto DestructibleMeshPtr = 0xa20; // UDestructibleMesh*
	}

	namespace n_UEditableGameplayTagQueryExpression_NoTagsMatch { // : UEditableGameplayTagQueryExpression
		constexpr auto Tags = 0x28; // FGameplayTagContainer
	}

	namespace n_UParticleModuleLocationBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x28; // char : 1
		constexpr auto LODDuplicate = 0x28; // char : 1
		constexpr auto bSupportsRandomSeed = 0x28; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x28; // char : 1
		constexpr auto LODValidity = 0x2c; // char
	}

	namespace n_UProgressWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto ProgressBarStyle = 0x30; // FProgressBarStyle
	}

	namespace n_UPaperGroupedSpriteComponent { // : UMeshComponent
		constexpr auto InstanceMaterials = 0x7c8; // TArray<UMaterialInterface*>
		constexpr auto PerInstanceSpriteData = 0x7d8; // TArray<FSpriteInstanceData>
	}

	namespace n_UMovieSceneEnumTrack { // : UMovieScenePropertyTrack
		constexpr auto Enum = 0xe0; // UEnum*
	}

	namespace n_UMaterialExpressionObjectPositionWS { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto Desc = 0x38; // FString
		constexpr auto BorderColor = 0x48; // FColor
		constexpr auto bRealtimePreview = 0x4c; // char : 1
		constexpr auto bNeedToUpdatePreview = 0x4c; // char : 1
		constexpr auto bIsParameterExpression = 0x4c; // char : 1
		constexpr auto bCommentBubbleVisible = 0x4c; // char : 1
		constexpr auto bShowOutputNameOnPin = 0x4c; // char : 1
		constexpr auto bHidePreviewWindow = 0x4c; // char : 1
		constexpr auto bCollapsed = 0x4c; // char : 1
		constexpr auto bShaderInputData = 0x4c; // char : 1
		constexpr auto bShowInputs = 0x4c; // char : 1
		constexpr auto bShowOutputs = 0x4c; // char : 1
		constexpr auto Outputs = 0x50; // TArray<FExpressionOutput>
	}

	namespace n_AConanHeightmapLevelScriptActor { // : AConanLevelScriptActor
		constexpr auto bInputEnabled = 0x3d0; // char : 1
	}

	namespace n_APawn { // : AActor
		constexpr auto bUseControllerRotationPitch = 0x3d8; // char : 1
		constexpr auto bUseControllerRotationYaw = 0x3d8; // char : 1
		constexpr auto bUseControllerRotationRoll = 0x3d8; // char : 1
		constexpr auto bCanAffectNavigationGeneration = 0x3d8; // char : 1
		constexpr auto BaseEyeHeight = 0x3dc; // float
		constexpr auto AutoPossessPlayer = 0x3e0; // EAutoReceiveInput
		constexpr auto AutoPossessAI = 0x3e1; // EAutoPossessAI
		constexpr auto AIControllerClass = 0x3e8; // AController*
		constexpr auto PlayerState = 0x3f0; // APlayerState*
		constexpr auto RemoteViewPitch = 0x3f8; // char
		constexpr auto LastHitBy = 0x400; // AController*
		constexpr auto Controller = 0x408; // AController*
		constexpr auto ControlInputVector = 0x418; // FVector
		constexpr auto LastControlInputVector = 0x424; // FVector
	}

	namespace n_USkeletalMesh { // : UObject
		constexpr auto Skeleton = 0x48; // USkeleton*
		constexpr auto ImportedBounds = 0x50; // FBoxSphereBounds
		constexpr auto ExtendedBounds = 0x6c; // FBoxSphereBounds
		constexpr auto PositiveBoundsExtension = 0x88; // FVector
		constexpr auto NegativeBoundsExtension = 0x94; // FVector
		constexpr auto Materials = 0xa0; // TArray<FSkeletalMaterial>
		constexpr auto SkelMirrorTable = 0xb0; // TArray<FBoneMirrorInfo>
		constexpr auto SkelMirrorAxis = 0xc0; // EAxis
		constexpr auto SkelMirrorFlipAxis = 0xc1; // EAxis
		constexpr auto LODInfo = 0xc8; // TArray<FSkeletalMeshLODInfo>
		constexpr auto bUseFullPrecisionUVs = 0xd8; // char : 1
		constexpr auto bHasBeenSimplified = 0xd8; // char : 1
		constexpr auto bHasVertexColors = 0xd8; // char : 1
		constexpr auto bEnablePerPolyCollision = 0xd8; // char : 1
		constexpr auto BodySetup = 0xe0; // UBodySetup*
		constexpr auto PhysicsAsset = 0xe8; // UPhysicsAsset*
		constexpr auto ShadowPhysicsAsset = 0xf0; // UPhysicsAsset*
		constexpr auto MorphTargets = 0xf8; // TArray<UMorphTarget*>
		constexpr auto ClothingAssets = 0x270; // TArray<FClothingAssetData>
		constexpr auto PostProcessAnimBlueprint = 0x280; // UAnimInstance*
		constexpr auto AssetUserData = 0x288; // TArray<UAssetUserData*>
		constexpr auto Sockets = 0x2a0; // TArray<USkeletalMeshSocket*>
	}

	namespace n_UParticleModuleLocationPrimitiveSphere { // : UParticleModuleLocationPrimitiveBase
		constexpr auto StartRadius = 0xc0; // FRawDistributionFloat
	}

	namespace n_UExilesJourneyWindow { // : UWindowRoot
		constexpr auto CloseOnClick = 0x318; // bool
		constexpr auto BlockPlayerInput = 0x319; // bool
		constexpr auto OpeningSlateSound = 0x320; // FSlateSound
		constexpr auto ClosingSlateSound = 0x338; // FSlateSound
		constexpr auto SignalClosing = 0x350; // FScriptMulticastDelegate
		constexpr auto SignalOpened = 0x360; // FScriptMulticastDelegate
		constexpr auto m_WindowHotkeys = 0x370; // TArray<FGamepadHotkeyHelp>
		constexpr auto m_InputComponent = 0x380; // UInputComponent*
		constexpr auto m_GUIModule = 0x388; // UGUIModule*
	}

	namespace n_UGameplayTagsDeveloperSettings { // : UObject
		constexpr auto DeveloperConfigName = 0x28; // FString
	}

	namespace n_UW_ConanLogo_C { // : UConanLogoBase
		constexpr auto UberGraphFrame = 0x3a0; // FPointerToUberGraphFrame
		constexpr auto FadeIn = 0x3a8; // UWidgetAnimation*
	}

	namespace n_UW_KeyBindings_Button_C { // : UKeyBindingsKeyBase
		constexpr auto BoundKeyIcon = 0x4e0; // UW_HotkeyIcon_C*
		constexpr auto BoundKeyName = 0x4e8; // UTextBlock*
		constexpr auto MappingButton = 0x4f0; // UButton*
	}

	namespace n_UEncumbranceSystem { // : UConanCharacterComponent
		constexpr auto EncumbranceTierThresholds = 0x100; // TArray<float>
		constexpr auto CurrentEncumbranceTier = 0x110; // EEncumbranceTiers
	}

	namespace n_UParticleModuleSpawn { // : UParticleModuleSpawnBase
		constexpr auto Rate = 0x38; // FRawDistributionFloat
		constexpr auto RateScale = 0x70; // FRawDistributionFloat
		constexpr auto ParticleBurstMethod = 0xa8; // EParticleBurstMethod
		constexpr auto BurstList = 0xb0; // TArray<FParticleBurst>
		constexpr auto BurstScale = 0xc0; // FRawDistributionFloat
		constexpr auto bApplyGlobalSpawnRateScale = 0xf8; // char : 1
	}

	namespace n_UFeedingTrayPanel { // : URootWidget
		constexpr auto EntryViewClass = 0x318; // UFeedingTrayEntryView*
		constexpr auto m_TrayActor = 0x348; // AActor*
	}

	namespace n_UThrobber { // : UWidget
		constexpr auto NumberOfPieces = 0x118; // int32_t
		constexpr auto bAnimateHorizontally = 0x11c; // bool
		constexpr auto bAnimateVertically = 0x11d; // bool
		constexpr auto bAnimateOpacity = 0x11e; // bool
		constexpr auto PieceImage = 0x120; // USlateBrushAsset*
		constexpr auto Image = 0x128; // FSlateBrush
	}

	namespace n_USlider { // : UWidget
		constexpr auto Value = 0x118; // float
		constexpr auto ValueDelegate = 0x120; // DelegateProperty
		constexpr auto WidgetStyle = 0x130; // FSliderStyle
		constexpr auto Orientation = 0x380; // EOrientation
		constexpr auto SliderBarColor = 0x384; // FLinearColor
		constexpr auto SliderHandleColor = 0x394; // FLinearColor
		constexpr auto IndentHandle = 0x3a4; // bool
		constexpr auto Locked = 0x3a5; // bool
		constexpr auto StepSize = 0x3a8; // float
		constexpr auto IsFocusable = 0x3ac; // bool
		constexpr auto OnMouseCaptureBegin = 0x3b0; // FScriptMulticastDelegate
		constexpr auto OnMouseCaptureEnd = 0x3c0; // FScriptMulticastDelegate
		constexpr auto OnControllerCaptureBegin = 0x3d0; // FScriptMulticastDelegate
		constexpr auto OnControllerCaptureEnd = 0x3e0; // FScriptMulticastDelegate
		constexpr auto OnValueChanged = 0x3f0; // FScriptMulticastDelegate
	}

	namespace n_AAIController { // : AController
		constexpr auto bStopAILogicOnUnposses = 0x470; // char : 1
		constexpr auto bLOSflag = 0x470; // char : 1
		constexpr auto bSkipExtraLOSChecks = 0x470; // char : 1
		constexpr auto bAllowStrafe = 0x470; // char : 1
		constexpr auto bWantsPlayerState = 0x470; // char : 1
		constexpr auto bSetControlRotationFromPawnOrientation = 0x470; // char : 1
		constexpr auto PathFollowingComponent = 0x478; // UPathFollowingComponent*
		constexpr auto BrainComponent = 0x480; // UBrainComponent*
		constexpr auto PerceptionComponent = 0x488; // UAIPerceptionComponent*
		constexpr auto ActionsComp = 0x490; // UPawnActionsComponent*
		constexpr auto Blackboard = 0x498; // UBlackboardComponent*
		constexpr auto CachedGameplayTasksComponent = 0x4a0; // UGameplayTasksComponent*
		constexpr auto DefaultNavigationFilterClass = 0x4a8; // UNavigationQueryFilter*
		constexpr auto ReceiveMoveCompleted = 0x4b0; // FScriptMulticastDelegate
	}

	namespace n_UW_ButtonLarge_C { // : UW_FCButton_C
		constexpr auto ButtonOverlay = 0xc28; // UNamedSlot*
		constexpr auto CheckboxOverlay = 0xc30; // UNamedSlot*
		constexpr auto HotkeyIcon = 0xc38; // UW_HotkeyIcon_C*
		constexpr auto MenuAnchor = 0xc40; // UMenuAnchor*
	}

	namespace n_UMaterialExpressionSceneColor { // : UMaterialExpression
		constexpr auto InputMode = 0x60; // EMaterialSceneAttributeInputMode
		constexpr auto Input = 0x68; // FExpressionInput
		constexpr auto OffsetFraction = 0xa0; // FExpressionInput
		constexpr auto ConstInput = 0xd8; // FVector2D
	}

	namespace n_UAsyncTaskShowStoreForCensoredDlc { // : UBlueprintAsyncActionBase
		constexpr auto OnReturned = 0x28; // FScriptMulticastDelegate
	}

	namespace n_UInterpTrackLinearColorProp { // : UInterpTrackLinearColorBase
		constexpr auto PropertyName = 0x90; // FName
	}

	namespace n_UActorSequence { // : UMovieSceneSequence
		constexpr auto MovieScene = 0x2d8; // UMovieScene*
		constexpr auto ObjectReferences = 0x2e0; // FActorSequenceObjectReferenceMap
	}

	namespace n_UAITask_LockLogic { // : UAITask
		constexpr auto OwnerController = 0x68; // AAIController*
	}

	namespace n_UHoudiniAssetParameterRampCurveColor { // : UCurveLinearColor
		constexpr auto FloatCurves = 0x30; // FRichCurve [0x4]
	}

	namespace n_USkinnedMeshComponent { // : UMeshComponent
		constexpr auto SkeletalMesh = 0x7c8; // USkeletalMesh*
		constexpr auto MasterPoseComponent = 0x7d0; // TWeakObjectPtr<USkinnedMeshComponent>
		constexpr auto bUseBoundsFromMasterPoseComponent = 0x82c; // char : 1
		constexpr auto PhysicsAssetOverride = 0x850; // UPhysicsAsset*
		constexpr auto ForcedLodModel = 0x858; // int32_t
		constexpr auto MinLodModel = 0x85c; // int32_t
		constexpr auto LODInfo = 0x870; // TArray<FSkelMeshComponentLODInfo>
		constexpr auto StreamingDistanceMultiplier = 0x880; // float
		constexpr auto WireframeColor = 0x884; // FColor
		constexpr auto bForceWireframe = 0x888; // char : 1
		constexpr auto bDisplayBones = 0x888; // char : 1
		constexpr auto bDisableMorphTarget = 0x888; // char : 1
		constexpr auto bHideSkin = 0x888; // char : 1
		constexpr auto bPerBoneMotionBlur = 0x8a0; // char : 1
		constexpr auto bComponentUseFixedSkelBounds = 0x8a0; // char : 1
		constexpr auto bConsiderAllBodiesForBounds = 0x8a0; // char : 1
		constexpr auto MeshComponentUpdateFlag = 0x8a4; // EMeshComponentUpdateFlag
		constexpr auto bForceMeshObjectUpdate = 0x8a8; // char : 1
		constexpr auto bCanHighlightSelectedSections = 0x8a8; // char : 1
		constexpr auto bRecentlyRendered = 0x8a8; // char : 1
		constexpr auto CustomSortAlternateIndexMode = 0x8ac; // char
		constexpr auto bCastCapsuleDirectShadow = 0x8b0; // char : 1
		constexpr auto bCastCapsuleIndirectShadow = 0x8b0; // char : 1
		constexpr auto CapsuleIndirectShadowMinVisibility = 0x8b4; // float
		constexpr auto bCPUSkinning = 0x8b8; // char : 1
		constexpr auto CachedLocalBounds = 0x8cc; // FBoxSphereBounds
		constexpr auto bCachedLocalBoundsUpToDate = 0x8e8; // bool
		constexpr auto bEnableUpdateRateOptimizations = 0x8e9; // bool
		constexpr auto bDisplayDebugUpdateRateOptimizations = 0x8ea; // bool
	}

	namespace n_ARigidBodyBase { // : AActor
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto CustomTimeDilation = 0x80; // float
		constexpr auto bHidden = 0x84; // char : 1
		constexpr auto bNetTemporary = 0x84; // char : 1
		constexpr auto bNetStartup = 0x84; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x84; // char : 1
		constexpr auto bAlwaysRelevant = 0x84; // char : 1
		constexpr auto bReplicateMovement = 0x84; // char : 1
		constexpr auto bTearOff = 0x84; // char : 1
		constexpr auto bExchangedRoles = 0x84; // char : 1
		constexpr auto bPendingNetUpdate = 0x85; // char : 1
		constexpr auto bNetLoadOnClient = 0x85; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x85; // char : 1
		constexpr auto bBlockInput = 0x85; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x85; // char : 1
		constexpr auto bActorEnableCollision = 0x86; // char : 1
		constexpr auto bReplicates = 0x86; // char : 1
		constexpr auto bLostRelevancy = 0x86; // char : 1
		constexpr auto NetDriverName = 0x88; // FName
		constexpr auto bCanBeInCluster = 0x90; // char : 1
		constexpr auto RemoteRole = 0x91; // ENetRole
		constexpr auto Owner = 0x98; // AActor*
		constexpr auto ReplicatedMovement = 0xa0; // FRepMovement
		constexpr auto AttachmentReplication = 0xd8; // FRepAttachment
		constexpr auto Role = 0x118; // ENetRole
		constexpr auto AutoReceiveInput = 0x11a; // EAutoReceiveInput
		constexpr auto InputPriority = 0x11c; // int32_t
		constexpr auto InputComponent = 0x120; // UInputComponent*
		constexpr auto InputConsumeOption = 0x128; // EInputConsumeOptions
		constexpr auto NetCullDistanceSquared = 0x12c; // float
		constexpr auto ViewTargetNetCullDistanceSquared = 0x130; // float
		constexpr auto NetTag = 0x134; // int32_t
		constexpr auto NetUpdateTime = 0x138; // float
		constexpr auto NetUpdateFrequency = 0x13c; // float
		constexpr auto MinNetUpdateFrequency = 0x140; // float
		constexpr auto NetPriority = 0x144; // float
		constexpr auto LastNetUpdateTime = 0x148; // float
		constexpr auto bAutoDestroyWhenFinished = 0x14c; // char : 1
		constexpr auto bCanBeDamaged = 0x14c; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x14c; // char : 1
		constexpr auto bCollideWhenPlacing = 0x14c; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x14c; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x14c; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x14c; // char : 1
		constexpr auto SpawnCollisionHandlingMethod = 0x14d; // ESpawnActorCollisionHandlingMethod
		constexpr auto Instigator = 0x158; // APawn*
		constexpr auto Children = 0x160; // TArray<AActor*>
		constexpr auto RootComponent = 0x170; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x178; // TArray<AMatineeActor*>
		constexpr auto InitialLifeSpan = 0x188; // float
		constexpr auto Layers = 0x198; // TArray<FName>
		constexpr auto ParentComponentActor = 0x1a8; // TWeakObjectPtr<AActor>
		constexpr auto ParentComponent = 0x1b0; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x1b8; // char : 1
		constexpr auto bUseExtendedRelevancyTimeout = 0x1b8; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x1b8; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x1b8; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x1b8; // char : 1
		constexpr auto Tags = 0x1c0; // TArray<FName>
		constexpr auto HiddenEditorViews = 0x1d0; // uint64_t
		constexpr auto OnTakeAnyDamage = 0x1d8; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x1e8; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x1f8; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x208; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x218; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x228; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x238; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x248; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x258; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x268; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x278; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x288; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x298; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x2a8; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x2b8; // FScriptMulticastDelegate
		constexpr auto BlueprintCreatedComponents = 0x3a8; // TArray<UActorComponent*>
		constexpr auto InstanceComponents = 0x3b8; // TArray<UActorComponent*>
	}

	namespace n_UEdGraphNode_Documentation { // : UEdGraphNode
		constexpr auto Link = 0xa0; // FString
		constexpr auto Excerpt = 0xb0; // FString
	}

	namespace n_ULoadInventoryCallProxy { // : UBlueprintAsyncActionBase
		constexpr auto onSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto onFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_UParticleModuleVectorFieldRotationRate { // : UParticleModuleVectorFieldBase
		constexpr auto RotationRate = 0x30; // FVector
	}

	namespace n_UMenuAnchor { // : UContentWidget
		constexpr auto MenuClass = 0x130; // UUserWidget*
		constexpr auto OnGetMenuContentEvent = 0x138; // DelegateProperty
		constexpr auto Placement = 0x148; // EMenuPlacement
		constexpr auto ShouldDeferPaintingAfterWindowContent = 0x149; // bool
		constexpr auto UseApplicationMenuStack = 0x14a; // bool
		constexpr auto OnMenuOpenChanged = 0x150; // FScriptMulticastDelegate
	}

	namespace n_UDialogueSoundWaveProxy { // : USoundBase
		constexpr auto SoundClassObject = 0x28; // USoundClass*
		constexpr auto SoundSubmixObject = 0x30; // USoundSubmix*
		constexpr auto bDebug = 0x38; // char : 1
		constexpr auto bOverrideConcurrency = 0x38; // char : 1
		constexpr auto bIgnoreFocus = 0x38; // char : 1
		constexpr auto SoundConcurrencySettings = 0x40; // USoundConcurrency*
		constexpr auto ConcurrencyOverrides = 0x48; // FSoundConcurrencySettings
		constexpr auto MaxConcurrentResolutionRule = 0x58; // EMaxConcurrentResolutionRule
		constexpr auto MaxConcurrentPlayCount = 0x5c; // int32_t
		constexpr auto Duration = 0x60; // float
		constexpr auto AttenuationSettings = 0x68; // USoundAttenuation*
		constexpr auto Priority = 0x70; // float
		constexpr auto SourceEffectChain = 0x78; // TArray<USoundEffectSourcePreset*>
		constexpr auto DefaultMasterReverbSendAmount = 0x88; // float
	}

	namespace n_UInterpTrackVectorMaterialParam { // : UInterpTrackVectorBase
		constexpr auto TargetMaterials = 0x90; // TArray<UMaterialInterface*>
		constexpr auto ParamName = 0xa0; // FName
	}

	namespace n_UW_ServerSettingsPresets_C { // : URootWidget
		constexpr auto UberGraphFrame = 0x318; // FPointerToUberGraphFrame
		constexpr auto CB_Barbaric = 0x320; // UW_ButtonNormal_C*
		constexpr auto CB_Civilized = 0x328; // UW_ButtonNormal_C*
		constexpr auto CB_Decadent = 0x330; // UW_ButtonNormal_C*
		constexpr auto SignalSetDifficultyCivilized = 0x338; // FScriptMulticastDelegate
		constexpr auto CharacterCreation = 0x348; // bool
		constexpr auto ImageSize = 0x34c; // FVector2D
		constexpr auto CheckedTexture = 0x358; // UTexture2D*
		constexpr auto HoverTexture = 0x360; // UTexture2D*
		constexpr auto UncheckedTexture = 0x368; // UTexture2D*
		constexpr auto FontColorUnchecked = 0x370; // FSlateColor
		constexpr auto FontColorChecked = 0x398; // FSlateColor
		constexpr auto NudityButtonStyleCharacterCreation = 0x3c0; // FFCButtonStyle
		constexpr auto PreviouslyChecked = 0xa80; // UFCButton*
		constexpr auto SignalSetDifficultyDecadent = 0xa88; // FScriptMulticastDelegate
		constexpr auto SignalSetDifficultyBarbaric = 0xa98; // FScriptMulticastDelegate
		constexpr auto ScrollIntoView = 0xaa8; // FScriptMulticastDelegate
	}

	namespace n_UInventoryIconTooltipView { // : UTooltipWidget
		constexpr auto m_GameItem = 0x248; // UGameItem*
	}

	namespace n_USkeletalBodySetup { // : UBodySetup
		constexpr auto PhysicalAnimationData = 0x398; // TArray<FPhysicalAnimationProfile>
	}

	namespace n_UActorPersistenceComponent { // : UPersistenceComponent
		constexpr auto SaveOnSpawn = 0xf8; // bool
		constexpr auto SaveFrequency = 0xfc; // float
		constexpr auto SkipSaving = 0x100; // bool
		constexpr auto UID = 0x108; // UUniqueID*
		constexpr auto OnSignalDataLoaded = 0x110; // FScriptMulticastDelegate
		constexpr auto OnSignalPreSave = 0x120; // FScriptMulticastDelegate
		constexpr auto m_bWasLoadedFromDB = 0x130; // bool
	}

	namespace n_UBorderSlot { // : UPanelSlot
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UAISense_NewSight { // : UAISense
		constexpr auto MaxTracesPerTick = 0x248; // int32_t
		constexpr auto HighImportanceQueryDistanceThreshold = 0x24c; // float
		constexpr auto MaxQueryImportance = 0x254; // float
		constexpr auto SightLimitQueryImportance = 0x258; // float
	}

	namespace n_UCharacterStatsPanel { // : URootWidget
		constexpr auto KeyNavOnSelectedEvent = 0x240; // FScriptMulticastDelegate
		constexpr auto KeyNavLeft = 0x250; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavRight = 0x258; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavAbove = 0x260; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavBelow = 0x268; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavTab = 0x270; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildLeft = 0x278; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildRight = 0x280; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildAbove = 0x288; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildBelow = 0x290; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildTab = 0x298; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildren = 0x2a0; // TWeakObjectPtr<URootWidget>
		constexpr auto TooltipWidgetClass = 0x2a8; // UTooltipWidget*
		constexpr auto KeyNavIndicatorClass = 0x2b0; // UKeyNavIndicator*
		constexpr auto PositiveFeedbackColor = 0x2b8; // FLinearColor
		constexpr auto NegativeFeedbackColor = 0x2c8; // FLinearColor
		constexpr auto NeutralFeedbackColor = 0x2d8; // FLinearColor
		constexpr auto KeyNavFocusOnClick = 0x2e8; // bool
		constexpr auto KeyNavAutoSetBack = 0x2e9; // bool
		constexpr auto m_Window = 0x2f0; // UWindowRoot*
		constexpr auto m_Parent = 0x2f8; // TWeakObjectPtr<URootWidget>
		constexpr auto m_KeyNavIndicator = 0x300; // UKeyNavIndicator*
	}

	namespace n_UEnvQueryTest_Pathfinding { // : UEnvQueryTest
		constexpr auto TestMode = 0x1c0; // EEnvTestPathfinding
		constexpr auto Context = 0x1c8; // UEnvQueryContext*
		constexpr auto PathFromContext = 0x1d0; // FAIDataProviderBoolValue
		constexpr auto SkipUnreachable = 0x200; // FAIDataProviderBoolValue
		constexpr auto FilterClass = 0x230; // UNavigationQueryFilter*
	}

	namespace n_ADebugCameraController { // : APlayerController
		constexpr auto bShowSelectedInfo = 0x6e8; // char : 1
		constexpr auto bIsFrozenRendering = 0x6e8; // char : 1
		constexpr auto DrawFrustum = 0x6f0; // UDrawFrustumComponent*
		constexpr auto SpeedScale = 0x718; // float
		constexpr auto InitialMaxSpeed = 0x71c; // float
		constexpr auto InitialAccel = 0x720; // float
		constexpr auto InitialDecel = 0x724; // float
	}

	namespace n_USoundNodeLooping { // : USoundNode
		constexpr auto LoopCount = 0x38; // int32_t
		constexpr auto bLoopIndefinitely = 0x3c; // char : 1
	}

	namespace n_ULandscapeSplineControlPoint { // : UObject
		constexpr auto Location = 0x28; // FVector
		constexpr auto Rotation = 0x34; // FRotator
		constexpr auto Width = 0x40; // float
		constexpr auto SideFalloff = 0x44; // float
		constexpr auto EndFalloff = 0x48; // float
		constexpr auto ConnectedSegments = 0x50; // TArray<FLandscapeSplineConnection>
		constexpr auto Points = 0x60; // TArray<FLandscapeSplineInterpPoint>
		constexpr auto Bounds = 0x70; // FBox
		constexpr auto LocalMeshComponent = 0x90; // UControlPointMeshComponent*
	}

	namespace n_UDyeWindow { // : UWindowRoot
		constexpr auto DisplayedItem = 0x398; // TWeakObjectPtr<UGameItem>
		constexpr auto DyeIndices = 0x3a0; // TArray<int32_t>
		constexpr auto SavedDyeIndices = 0x3b0; // TArray<int32_t>
		constexpr auto SelectedTintChannel = 0x3c0; // int32_t
	}

	namespace n_UParticleModuleLocationWorldOffset { // : UParticleModuleLocation
		constexpr auto StartLocation = 0x30; // FRawDistributionVector
		constexpr auto DistributeOverNPoints = 0x80; // float
		constexpr auto DistributeThreshold = 0x84; // float
	}

	namespace n_UThirstIndicatorIcon { // : URootWidget
		constexpr auto KeyNavOnSelectedEvent = 0x240; // FScriptMulticastDelegate
		constexpr auto KeyNavLeft = 0x250; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavRight = 0x258; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavAbove = 0x260; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavBelow = 0x268; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavTab = 0x270; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildLeft = 0x278; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildRight = 0x280; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildAbove = 0x288; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildBelow = 0x290; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildTab = 0x298; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildren = 0x2a0; // TWeakObjectPtr<URootWidget>
		constexpr auto TooltipWidgetClass = 0x2a8; // UTooltipWidget*
		constexpr auto KeyNavIndicatorClass = 0x2b0; // UKeyNavIndicator*
		constexpr auto PositiveFeedbackColor = 0x2b8; // FLinearColor
		constexpr auto NegativeFeedbackColor = 0x2c8; // FLinearColor
		constexpr auto NeutralFeedbackColor = 0x2d8; // FLinearColor
		constexpr auto KeyNavFocusOnClick = 0x2e8; // bool
		constexpr auto KeyNavAutoSetBack = 0x2e9; // bool
		constexpr auto m_Window = 0x2f0; // UWindowRoot*
		constexpr auto m_Parent = 0x2f8; // TWeakObjectPtr<URootWidget>
		constexpr auto m_KeyNavIndicator = 0x300; // UKeyNavIndicator*
	}

	namespace n_AController { // : AActor
		constexpr auto Pawn = 0x3d8; // APawn*
		constexpr auto Character = 0x3e8; // ACharacter*
		constexpr auto PlayerState = 0x3f0; // APlayerState*
		constexpr auto TransformComponent = 0x3f8; // USceneComponent*
		constexpr auto ControlRotation = 0x400; // FRotator
		constexpr auto bAttachToPawn = 0x40c; // char : 1
		constexpr auto bIsPlayerController = 0x40c; // char : 1
		constexpr auto StateName = 0x420; // FName
		constexpr auto OnInstigatedAnyDamage = 0x428; // FScriptMulticastDelegate
	}

	namespace n_AGridPathAIController { // : AAIController
		constexpr auto bStopAILogicOnUnposses = 0x470; // char : 1
		constexpr auto bLOSflag = 0x470; // char : 1
		constexpr auto bSkipExtraLOSChecks = 0x470; // char : 1
		constexpr auto bAllowStrafe = 0x470; // char : 1
		constexpr auto bWantsPlayerState = 0x470; // char : 1
		constexpr auto bSetControlRotationFromPawnOrientation = 0x470; // char : 1
		constexpr auto PathFollowingComponent = 0x478; // UPathFollowingComponent*
		constexpr auto BrainComponent = 0x480; // UBrainComponent*
		constexpr auto PerceptionComponent = 0x488; // UAIPerceptionComponent*
		constexpr auto ActionsComp = 0x490; // UPawnActionsComponent*
		constexpr auto Blackboard = 0x498; // UBlackboardComponent*
		constexpr auto CachedGameplayTasksComponent = 0x4a0; // UGameplayTasksComponent*
		constexpr auto DefaultNavigationFilterClass = 0x4a8; // UNavigationQueryFilter*
		constexpr auto ReceiveMoveCompleted = 0x4b0; // FScriptMulticastDelegate
	}

	namespace n_UMovieSceneFloatTrack { // : UMovieScenePropertyTrack
		constexpr auto PropertyName = 0xb8; // FName
		constexpr auto PropertyPath = 0xc0; // FString
		constexpr auto Sections = 0xd0; // TArray<UMovieSceneSection*>
	}

	namespace n_ULocationServicesImpl { // : UObject
		constexpr auto OnLocationChanged = 0x28; // FScriptMulticastDelegate
	}

	namespace n_UPeerConnectionNetConnection { // : UIpConnection
		constexpr auto Children = 0x48; // TArray<UChildConnection*>
		constexpr auto Driver = 0x58; // UNetDriver*
		constexpr auto PackageMap = 0x60; // UPackageMap*
		constexpr auto OpenChannels = 0x68; // TArray<UChannel*>
		constexpr auto SentTemporaries = 0x78; // TArray<AActor*>
		constexpr auto ViewTarget = 0x88; // AActor*
		constexpr auto OwningActor = 0x90; // AActor*
		constexpr auto MaxPacket = 0x98; // int32_t
		constexpr auto InternalAck = 0x9c; // char : 1
		constexpr auto AsyncLoadedObjects = 0xa0; // TArray<UObject*>
		constexpr auto PlayerId = 0x170; // FUniqueNetIdRepl
		constexpr auto LastReceiveTime = 0x200; // double
		constexpr auto ActorChannels = 0x334e0; // TMap<AActor*, UActorChannel*>
		constexpr auto ChannelsToTick = 0x33730; // TArray<UChannel*>
	}

	namespace n_UW_Friends_FriendList_C { // : UFriendListGame
		constexpr auto FriendListEntryList = 0x3c8; // UW_NavigatableVerticalBox_C*
	}

	namespace n_UCharacterMovementComponent { // : UPawnMovementComponent
		constexpr auto CharacterOwner = 0x1a0; // ACharacter*
		constexpr auto GravityScale = 0x1a8; // float
		constexpr auto MaxStepHeight = 0x1ac; // float
		constexpr auto JumpZVelocity = 0x1b0; // float
		constexpr auto JumpOffJumpZFactor = 0x1b4; // float
		constexpr auto WalkableFloorAngle = 0x1bc; // float
		constexpr auto WalkableFloorZ = 0x1c0; // float
		constexpr auto MovementMode = 0x1c4; // EMovementMode
		constexpr auto CustomMovementMode = 0x1c5; // char
		constexpr auto bIsSwimmingOnSurface = 0x1c6; // bool
		constexpr auto GroundFriction = 0x1f0; // float
		constexpr auto MaxWalkSpeed = 0x1f4; // float
		constexpr auto MaxWalkSpeedCrouched = 0x1f8; // float
		constexpr auto MaxSwimSpeed = 0x1fc; // float
		constexpr auto MaxFlySpeed = 0x200; // float
		constexpr auto MaxCustomMovementSpeed = 0x204; // float
		constexpr auto MaxClimbSpeed = 0x208; // float
		constexpr auto MaxAcceleration = 0x20c; // float
		constexpr auto MaxDepthDefiningSurfaceSwimming = 0x210; // float
		constexpr auto TargetDepthWhenSurfaceSwimming = 0x214; // float
		constexpr auto TimeToReachTargetDepth = 0x218; // float
		constexpr auto MaxAllowedStabilizingVelocity = 0x21c; // float
		constexpr auto bIsCollidingWhileSwimming = 0x220; // bool
		constexpr auto bIsWading = 0x221; // bool
		constexpr auto bDisableBuoyancy = 0x222; // bool
		constexpr auto BrakingFrictionFactor = 0x224; // float
		constexpr auto BrakingFriction = 0x228; // float
		constexpr auto bUseSeparateBrakingFriction = 0x22c; // char : 1
		constexpr auto BrakingDecelerationWalking = 0x230; // float
		constexpr auto BrakingDecelerationFalling = 0x234; // float
		constexpr auto BrakingDecelerationSwimming = 0x238; // float
		constexpr auto BrakingDecelerationFlying = 0x23c; // float
		constexpr auto AirControl = 0x240; // float
		constexpr auto AirControlBoostMultiplier = 0x244; // float
		constexpr auto AirControlBoostVelocityThreshold = 0x248; // float
		constexpr auto FallingLateralFriction = 0x24c; // float
		constexpr auto CrouchedHalfHeight = 0x250; // float
		constexpr auto Buoyancy = 0x254; // float
		constexpr auto PerchRadiusThreshold = 0x258; // float
		constexpr auto PerchAdditionalHeight = 0x25c; // float
		constexpr auto RotationRate = 0x260; // FRotator
		constexpr auto bUseControllerDesiredRotation = 0x26c; // char : 1
		constexpr auto bOrientRotationToMovement = 0x26c; // char : 1
		constexpr auto bAllowPhysicsRotationDuringRootMotion = 0x270; // bool
		constexpr auto bMovementInProgress = 0x274; // char : 1
		constexpr auto bEnableScopedMovementUpdates = 0x274; // char : 1
		constexpr auto bForceMaxAccel = 0x274; // char : 1
		constexpr auto bRunPhysicsWithNoController = 0x274; // char : 1
		constexpr auto bForceNextFloorCheck = 0x274; // char : 1
		constexpr auto bShrinkProxyCapsule = 0x274; // char : 1
		constexpr auto bCanWalkOffLedges = 0x274; // char : 1
		constexpr auto bCanWalkOffLedgesWhenCrouching = 0x274; // char : 1
		constexpr auto bDeferUpdateMoveComponent = 0x274; // char : 1
		constexpr auto DeferredUpdatedMoveComponent = 0x278; // USceneComponent*
		constexpr auto MaxOutOfWaterStepHeight = 0x280; // float
		constexpr auto OutofWaterZ = 0x284; // float
		constexpr auto Mass = 0x288; // float
		constexpr auto bEnablePhysicsInteraction = 0x28c; // bool
		constexpr auto bTouchForceScaledToMass = 0x28d; // bool
		constexpr auto bPushForceScaledToMass = 0x28e; // bool
		constexpr auto bPushForceUsingZOffset = 0x28f; // bool
		constexpr auto bScalePushForceToVelocity = 0x290; // bool
		constexpr auto StandingDownwardForceScale = 0x294; // float
		constexpr auto InitialPushForceFactor = 0x298; // float
		constexpr auto PushForceFactor = 0x29c; // float
		constexpr auto PushForcePointZOffsetFactor = 0x2a0; // float
		constexpr auto TouchForceFactor = 0x2a4; // float
		constexpr auto MinTouchForce = 0x2a8; // float
		constexpr auto MaxTouchForce = 0x2ac; // float
		constexpr auto RepulsionForce = 0x2b0; // float
		constexpr auto bForceBraking = 0x2b4; // char : 1
		constexpr auto CrouchedSpeedMultiplier = 0x2b8; // float
		constexpr auto UpperImpactNormalScale = 0x2bc; // float
		constexpr auto Acceleration = 0x2c0; // FVector
		constexpr auto LastUpdateLocation = 0x2cc; // FVector
		constexpr auto LastUpdateRotation = 0x2e0; // FQuat
		constexpr auto LastUpdateVelocity = 0x2f0; // FVector
		constexpr auto ServerLastTransformUpdateTimeStamp = 0x2fc; // float
		constexpr auto PendingImpulseToApply = 0x300; // FVector
		constexpr auto PendingForceToApply = 0x30c; // FVector
		constexpr auto AnalogInputModifier = 0x318; // float
		constexpr auto MaxSimulationTimeStep = 0x324; // float
		constexpr auto MaxSimulationIterations = 0x328; // int32_t
		constexpr auto MaxDepenetrationWithGeometry = 0x32c; // float
		constexpr auto MaxDepenetrationWithGeometryAsProxy = 0x330; // float
		constexpr auto MaxDepenetrationWithPawn = 0x334; // float
		constexpr auto MaxDepenetrationWithPawnAsProxy = 0x338; // float
		constexpr auto NetworkSimulatedSmoothLocationTime = 0x33c; // float
		constexpr auto NetworkSimulatedSmoothLocationZTime = 0x340; // float
		constexpr auto NetworkSimulatedSmoothRotationTime = 0x344; // float
		constexpr auto ListenServerNetworkSimulatedSmoothLocationTime = 0x348; // float
		constexpr auto ListenServerNetworkSimulatedSmoothLocationZTime = 0x34c; // float
		constexpr auto ListenServerNetworkSimulatedSmoothRotationTime = 0x350; // float
		constexpr auto NetworkMaxSmoothUpdateDistance = 0x354; // float
		constexpr auto NetworkNoSmoothUpdateDistance = 0x358; // float
		constexpr auto NetworkSmoothingMode = 0x35c; // ENetworkSmoothingMode
		constexpr auto LedgeCheckThreshold = 0x360; // float
		constexpr auto JumpOutOfWaterPitch = 0x364; // float
		constexpr auto CurrentFloor = 0x368; // FFindFloorResult
		constexpr auto DefaultLandMovementMode = 0x400; // EMovementMode
		constexpr auto DefaultWaterMovementMode = 0x401; // EMovementMode
		constexpr auto NetMoveDeltaMultiplier = 0x404; // float
		constexpr auto SignalOnSurfaceTypeChanged = 0x408; // FScriptMulticastDelegate
		constexpr auto lastSurface = 0x418; // EPhysicalSurface
		constexpr auto GroundMovementMode = 0x419; // EMovementMode
		constexpr auto bMaintainHorizontalGroundVelocity = 0x41c; // char : 1
		constexpr auto bImpartBaseVelocityX = 0x41c; // char : 1
		constexpr auto bImpartBaseVelocityY = 0x41c; // char : 1
		constexpr auto bImpartBaseVelocityZ = 0x41c; // char : 1
		constexpr auto bImpartBaseAngularVelocity = 0x41c; // char : 1
		constexpr auto bJustTeleported = 0x41c; // char : 1
		constexpr auto bNetworkUpdateReceived = 0x41c; // char : 1
		constexpr auto bNetworkMovementModeChanged = 0x41c; // char : 1
		constexpr auto bIgnoreClientMovementErrorChecksAndCorrection = 0x41c; // char : 1
		constexpr auto bNotifyApex = 0x41c; // char : 1
		constexpr auto bCheatFlying = 0x41c; // char : 1
		constexpr auto bWantsToCrouch = 0x41c; // char : 1
		constexpr auto bCrouchMaintainsBaseLocation = 0x41c; // char : 1
		constexpr auto bIgnoreBaseRotation = 0x41c; // char : 1
		constexpr auto bFastAttachedMove = 0x41c; // char : 1
		constexpr auto bAlwaysCheckFloor = 0x41c; // char : 1
		constexpr auto bUseFlatBaseForFloorChecks = 0x41c; // char : 1
		constexpr auto bPerformingJumpOff = 0x41c; // char : 1
		constexpr auto bWantsToLeaveNavWalking = 0x41c; // char : 1
		constexpr auto bUseRVOAvoidance = 0x41c; // char : 1
		constexpr auto bRequestedMoveUseAcceleration = 0x41c; // char : 1
		constexpr auto bWantsToClimb = 0x41c; // char : 1
		constexpr auto bHasRequestedVelocity = 0x41c; // char : 1
		constexpr auto bRequestedMoveWithMaxSpeed = 0x41c; // char : 1
		constexpr auto bWasAvoidanceUpdated = 0x41c; // char : 1
		constexpr auto bProjectNavMeshWalking = 0x41c; // char : 1
		constexpr auto bSwitchToWalkingIfNoNavData = 0x41c; // char : 1
		constexpr auto bProjectNavMeshOnBothWorldChannels = 0x41c; // char : 1
		constexpr auto bForceSweepWhenNavWalking = 0x41c; // char : 1
		constexpr auto bAssumeServerIsNavWalkingInSimulateMovement = 0x420; // char : 1
		constexpr auto AvoidanceConsiderationRadius = 0x438; // float
		constexpr auto RequestedVelocity = 0x43c; // FVector
		constexpr auto AvoidanceUID = 0x448; // int32_t
		constexpr auto AvoidanceGroup = 0x44c; // FNavAvoidanceMask
		constexpr auto GroupsToAvoid = 0x450; // FNavAvoidanceMask
		constexpr auto GroupsToIgnore = 0x454; // FNavAvoidanceMask
		constexpr auto AvoidanceWeight = 0x458; // float
		constexpr auto PendingLaunchVelocity = 0x45c; // FVector
		constexpr auto NavMeshProjectionInterval = 0x508; // float
		constexpr auto NavMeshProjectionTimer = 0x50c; // float
		constexpr auto NavMeshProjectionInterpSpeed = 0x510; // float
		constexpr auto NavMeshProjectionHeightScaleUp = 0x514; // float
		constexpr auto NavMeshProjectionHeightScaleDown = 0x518; // float
		constexpr auto NavWalkingFloorDistTolerance = 0x51c; // float
		constexpr auto PostPhysicsTickFunction = 0x520; // FCharacterMovementComponentPostPhysicsTickFunction
		constexpr auto MinTimeBetweenTimeStampResets = 0x588; // float
		constexpr auto CurrentRootMotion = 0x590; // FRootMotionSourceGroup
		constexpr auto RootMotionParams = 0x720; // FRootMotionMovementParams
		constexpr auto AnimRootMotionVelocity = 0x760; // FVector
		constexpr auto bWasSimulatingRootMotion = 0x76c; // bool
	}

	namespace n_URconCommandObject { // : UObject
		constexpr auto RconCommandName = 0x28; // FName
		constexpr auto RconHelpString = 0x30; // FString
	}

	namespace n_UEnvQueryGenerator { // : UEnvQueryNode
		constexpr auto optionName = 0x30; // FString
		constexpr auto ItemType = 0x40; // UEnvQueryItemType*
		constexpr auto bAutoSortTests = 0x48; // char : 1
	}

	namespace n_UTextureRenderTarget2D { // : UTextureRenderTarget
		constexpr auto SizeX = 0xd0; // int32_t
		constexpr auto SizeY = 0xd4; // int32_t
		constexpr auto ClearColor = 0xd8; // FLinearColor
		constexpr auto AddressX = 0xe8; // TextureAddress
		constexpr auto AddressY = 0xe9; // TextureAddress
		constexpr auto bForceLinearGamma = 0xec; // char : 1
		constexpr auto bHDR = 0xec; // char : 1
		constexpr auto bGPUSharedFlag = 0xec; // char : 1
		constexpr auto bAutoGenerateMips = 0xec; // char : 1
		constexpr auto bForceUAVSupport = 0xec; // char : 1
		constexpr auto OverrideFormat = 0xf0; // EPixelFormat
	}

	namespace n_UBuffList { // : UWindowRoot
		constexpr auto ExpandedHealthbarOffset = 0x398; // FMargin
		constexpr auto m_Owner = 0x3a8; // TWeakObjectPtr<AConanCharacter>
	}

	namespace n_UEmotesMenu { // : UWindowRoot
		constexpr auto cancelIcon = 0x398; // UTexture2D*
		constexpr auto backIcon = 0x3a0; // UTexture2D*
		constexpr auto m_Inventory = 0x3a8; // UItemInventory*
	}

	namespace n_UMaterialExpressionConstant2Vector { // : UMaterialExpression
		constexpr auto R = 0x60; // float
		constexpr auto G = 0x64; // float
	}

	namespace n_UGamepadHelpOverlayBase { // : UWindowRoot
		constexpr auto GamepadHelpEntryClass = 0x398; // UGamepadHelpEntryBase*
	}

	namespace n_UExilesJourneyComponent { // : UActorComponent
		constexpr auto NewEventSound = 0xf8; // USoundBase*
		constexpr auto SignalNewJourneyEvent = 0x118; // FScriptMulticastDelegate
		constexpr auto SignalChapterComplete = 0x128; // FScriptMulticastDelegate
		constexpr auto m_JourneyEvents = 0x138; // TArray<FExilesJourneyEvent>
	}

	namespace n_UAISystemBase { // : UObject
		constexpr auto AISystemClassName = 0x28; // FStringClassReference
		constexpr auto AISystemModuleName = 0x38; // FName
		constexpr auto bInstantiateAISystemOnClient = 0x40; // bool
	}

	namespace n_UFriendRequestEntry { // : URootWidget
		constexpr auto KeyNavOnSelectedEvent = 0x240; // FScriptMulticastDelegate
		constexpr auto KeyNavLeft = 0x250; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavRight = 0x258; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavAbove = 0x260; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavBelow = 0x268; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavTab = 0x270; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildLeft = 0x278; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildRight = 0x280; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildAbove = 0x288; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildBelow = 0x290; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildTab = 0x298; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildren = 0x2a0; // TWeakObjectPtr<URootWidget>
		constexpr auto TooltipWidgetClass = 0x2a8; // UTooltipWidget*
		constexpr auto KeyNavIndicatorClass = 0x2b0; // UKeyNavIndicator*
		constexpr auto PositiveFeedbackColor = 0x2b8; // FLinearColor
		constexpr auto NegativeFeedbackColor = 0x2c8; // FLinearColor
		constexpr auto NeutralFeedbackColor = 0x2d8; // FLinearColor
		constexpr auto KeyNavFocusOnClick = 0x2e8; // bool
		constexpr auto KeyNavAutoSetBack = 0x2e9; // bool
		constexpr auto m_Window = 0x2f0; // UWindowRoot*
		constexpr auto m_Parent = 0x2f8; // TWeakObjectPtr<URootWidget>
		constexpr auto m_KeyNavIndicator = 0x300; // UKeyNavIndicator*
	}

	namespace n_UMovieSceneCameraAnimSection { // : UMovieSceneSection
		constexpr auto AnimData = 0xc8; // FMovieSceneCameraAnimSectionData
		constexpr auto CameraAnim = 0xe8; // UCameraAnim*
		constexpr auto PlayRate = 0xf0; // float
		constexpr auto PlayScale = 0xf4; // float
		constexpr auto BlendInTime = 0xf8; // float
		constexpr auto BlendOutTime = 0xfc; // float
		constexpr auto bLooping = 0x100; // bool
	}

	namespace n_UIpConnection { // : UNetConnection
		constexpr auto Children = 0x48; // TArray<UChildConnection*>
		constexpr auto Driver = 0x58; // UNetDriver*
		constexpr auto PackageMap = 0x60; // UPackageMap*
		constexpr auto OpenChannels = 0x68; // TArray<UChannel*>
		constexpr auto SentTemporaries = 0x78; // TArray<AActor*>
		constexpr auto ViewTarget = 0x88; // AActor*
		constexpr auto OwningActor = 0x90; // AActor*
		constexpr auto MaxPacket = 0x98; // int32_t
		constexpr auto InternalAck = 0x9c; // char : 1
		constexpr auto AsyncLoadedObjects = 0xa0; // TArray<UObject*>
		constexpr auto PlayerId = 0x170; // FUniqueNetIdRepl
		constexpr auto LastReceiveTime = 0x200; // double
		constexpr auto ActorChannels = 0x334e0; // TMap<AActor*, UActorChannel*>
		constexpr auto ChannelsToTick = 0x33730; // TArray<UChannel*>
	}

	namespace n_UMaterialExpressionParticlePositionWS { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto Desc = 0x38; // FString
		constexpr auto BorderColor = 0x48; // FColor
		constexpr auto bRealtimePreview = 0x4c; // char : 1
		constexpr auto bNeedToUpdatePreview = 0x4c; // char : 1
		constexpr auto bIsParameterExpression = 0x4c; // char : 1
		constexpr auto bCommentBubbleVisible = 0x4c; // char : 1
		constexpr auto bShowOutputNameOnPin = 0x4c; // char : 1
		constexpr auto bHidePreviewWindow = 0x4c; // char : 1
		constexpr auto bCollapsed = 0x4c; // char : 1
		constexpr auto bShaderInputData = 0x4c; // char : 1
		constexpr auto bShowInputs = 0x4c; // char : 1
		constexpr auto bShowOutputs = 0x4c; // char : 1
		constexpr auto Outputs = 0x50; // TArray<FExpressionOutput>
	}

	namespace n_USubtitleEntryView { // : URootWidget
		constexpr auto KeyNavOnSelectedEvent = 0x240; // FScriptMulticastDelegate
		constexpr auto KeyNavLeft = 0x250; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavRight = 0x258; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavAbove = 0x260; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavBelow = 0x268; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavTab = 0x270; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildLeft = 0x278; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildRight = 0x280; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildAbove = 0x288; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildBelow = 0x290; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildTab = 0x298; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildren = 0x2a0; // TWeakObjectPtr<URootWidget>
		constexpr auto TooltipWidgetClass = 0x2a8; // UTooltipWidget*
		constexpr auto KeyNavIndicatorClass = 0x2b0; // UKeyNavIndicator*
		constexpr auto PositiveFeedbackColor = 0x2b8; // FLinearColor
		constexpr auto NegativeFeedbackColor = 0x2c8; // FLinearColor
		constexpr auto NeutralFeedbackColor = 0x2d8; // FLinearColor
		constexpr auto KeyNavFocusOnClick = 0x2e8; // bool
		constexpr auto KeyNavAutoSetBack = 0x2e9; // bool
		constexpr auto m_Window = 0x2f0; // UWindowRoot*
		constexpr auto m_Parent = 0x2f8; // TWeakObjectPtr<URootWidget>
		constexpr auto m_KeyNavIndicator = 0x300; // UKeyNavIndicator*
	}

	namespace n_ADataActorCommand { // : AActor
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto CustomTimeDilation = 0x80; // float
		constexpr auto bHidden = 0x84; // char : 1
		constexpr auto bNetTemporary = 0x84; // char : 1
		constexpr auto bNetStartup = 0x84; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x84; // char : 1
		constexpr auto bAlwaysRelevant = 0x84; // char : 1
		constexpr auto bReplicateMovement = 0x84; // char : 1
		constexpr auto bTearOff = 0x84; // char : 1
		constexpr auto bExchangedRoles = 0x84; // char : 1
		constexpr auto bPendingNetUpdate = 0x85; // char : 1
		constexpr auto bNetLoadOnClient = 0x85; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x85; // char : 1
		constexpr auto bBlockInput = 0x85; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x85; // char : 1
		constexpr auto bActorEnableCollision = 0x86; // char : 1
		constexpr auto bReplicates = 0x86; // char : 1
		constexpr auto bLostRelevancy = 0x86; // char : 1
		constexpr auto NetDriverName = 0x88; // FName
		constexpr auto bCanBeInCluster = 0x90; // char : 1
		constexpr auto RemoteRole = 0x91; // ENetRole
		constexpr auto Owner = 0x98; // AActor*
		constexpr auto ReplicatedMovement = 0xa0; // FRepMovement
		constexpr auto AttachmentReplication = 0xd8; // FRepAttachment
		constexpr auto Role = 0x118; // ENetRole
		constexpr auto AutoReceiveInput = 0x11a; // EAutoReceiveInput
		constexpr auto InputPriority = 0x11c; // int32_t
		constexpr auto InputComponent = 0x120; // UInputComponent*
		constexpr auto InputConsumeOption = 0x128; // EInputConsumeOptions
		constexpr auto NetCullDistanceSquared = 0x12c; // float
		constexpr auto ViewTargetNetCullDistanceSquared = 0x130; // float
		constexpr auto NetTag = 0x134; // int32_t
		constexpr auto NetUpdateTime = 0x138; // float
		constexpr auto NetUpdateFrequency = 0x13c; // float
		constexpr auto MinNetUpdateFrequency = 0x140; // float
		constexpr auto NetPriority = 0x144; // float
		constexpr auto LastNetUpdateTime = 0x148; // float
		constexpr auto bAutoDestroyWhenFinished = 0x14c; // char : 1
		constexpr auto bCanBeDamaged = 0x14c; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x14c; // char : 1
		constexpr auto bCollideWhenPlacing = 0x14c; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x14c; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x14c; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x14c; // char : 1
		constexpr auto SpawnCollisionHandlingMethod = 0x14d; // ESpawnActorCollisionHandlingMethod
		constexpr auto Instigator = 0x158; // APawn*
		constexpr auto Children = 0x160; // TArray<AActor*>
		constexpr auto RootComponent = 0x170; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x178; // TArray<AMatineeActor*>
		constexpr auto InitialLifeSpan = 0x188; // float
		constexpr auto Layers = 0x198; // TArray<FName>
		constexpr auto ParentComponentActor = 0x1a8; // TWeakObjectPtr<AActor>
		constexpr auto ParentComponent = 0x1b0; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x1b8; // char : 1
		constexpr auto bUseExtendedRelevancyTimeout = 0x1b8; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x1b8; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x1b8; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x1b8; // char : 1
		constexpr auto Tags = 0x1c0; // TArray<FName>
		constexpr auto HiddenEditorViews = 0x1d0; // uint64_t
		constexpr auto OnTakeAnyDamage = 0x1d8; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x1e8; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x1f8; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x208; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x218; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x228; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x238; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x248; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x258; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x268; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x278; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x288; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x298; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x2a8; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x2b8; // FScriptMulticastDelegate
		constexpr auto BlueprintCreatedComponents = 0x3a8; // TArray<UActorComponent*>
		constexpr auto InstanceComponents = 0x3b8; // TArray<UActorComponent*>
	}

	namespace n_UAnimInstanceHumanMale { // : UAnimInstance
		constexpr auto ActorLocation = 0x358; // FVector
		constexpr auto HeadFOVAdjustments = 0x364; // FVector
		constexpr auto PawnVelocity = 0x370; // FVector
		constexpr auto AimOffsetRotation = 0x37c; // FRotator
		constexpr auto ActorRotation = 0x388; // FRotator
		constexpr auto ControlRotation = 0x394; // FRotator
		constexpr auto CurrentVelocityRotation = 0x3a0; // FRotator
		constexpr auto LastVelocityRotation = 0x3ac; // FRotator
		constexpr auto WeaponPrimaryUNSAFE = 0x3b8; // UBlendSpace*
		constexpr auto WeaponSecondaryUNSAFE = 0x3c0; // UBlendSpace*
		constexpr auto WeaponPrimaryIdle3rdUNSAFE = 0x3c8; // UAnimSequenceBase*
		constexpr auto WeaponSecondaryIdle3rdUNSAFE = 0x3d0; // UAnimSequenceBase*
		constexpr auto WeaponPrimaryIdle1stUNSAFE = 0x3d8; // UAnimSequenceBase*
		constexpr auto WeaponSecondaryIdle1stUNSAFE = 0x3e0; // UAnimSequenceBase*
		constexpr auto WeaponPrimaryCrouchUNSAFE = 0x3e8; // UBlendSpace*
		constexpr auto WeaponSecondaryCrouchUNSAFE = 0x3f0; // UBlendSpace*
		constexpr auto WeaponPrimary = 0x3f8; // UBlendSpace*
		constexpr auto WeaponSecondary = 0x400; // UBlendSpace*
		constexpr auto WeaponPrimaryIdle3rd = 0x408; // UAnimSequenceBase*
		constexpr auto WeaponSecondaryIdle3rd = 0x410; // UAnimSequenceBase*
		constexpr auto WeaponPrimaryIdle1st = 0x418; // UAnimSequenceBase*
		constexpr auto WeaponSecondaryIdle1st = 0x420; // UAnimSequenceBase*
		constexpr auto WeaponPrimaryCrouch = 0x428; // UBlendSpace*
		constexpr auto WeaponSecondaryCrouch = 0x430; // UBlendSpace*
		constexpr auto Pitch = 0x438; // float
		constexpr auto Yaw = 0x43c; // float
		constexpr auto SpeedXY = 0x440; // float
		constexpr auto Direction = 0x444; // float
		constexpr auto DirectionXY = 0x448; // float
		constexpr auto GroundPitch = 0x44c; // float
		constexpr auto ClimbDirection = 0x450; // float
		constexpr auto ClimbSpeed = 0x454; // float
		constexpr auto MaxWalkSpeed = 0x458; // float
		constexpr auto PenisRuntimeScale = 0x45c; // float
		constexpr auto CharacterLayoutHash = 0x460; // int32_t
		constexpr auto DeltaDirection = 0x464; // float
		constexpr auto LeanDirection = 0x468; // float
		constexpr auto LeanInterpSpeed = 0x46c; // float
		constexpr auto IsWeaponPrimaryIdleAnimValidFloat = 0x470; // float
		constexpr auto IsWeaponSecondaryIdleAnimValidFloat = 0x474; // float
		constexpr auto IsWeaponPrimaryBlendSpaceValidFloat = 0x478; // float
		constexpr auto IsWeaponSecondaryBlendSpaceValidFloat = 0x47c; // float
		constexpr auto ShouldRunIK = 0x480; // char : 1
		constexpr auto AnimHasBegunPlay = 0x480; // char : 1
		constexpr auto isPassive = 0x480; // char : 1
		constexpr auto IsAggressive = 0x480; // char : 1
		constexpr auto isEquipping = 0x480; // char : 1
		constexpr auto isDead = 0x480; // char : 1
		constexpr auto IsUnconscious = 0x480; // char : 1
		constexpr auto IsWalking = 0x480; // char : 1
		constexpr auto IsSwimming = 0x481; // char : 1
		constexpr auto IsFlying = 0x481; // char : 1
		constexpr auto IsCrouching = 0x481; // char : 1
		constexpr auto OldIsPassive = 0x481; // char : 1
		constexpr auto isThirdPerson = 0x481; // char : 1
		constexpr auto isClimbing = 0x481; // char : 1
		constexpr auto isClimbSliding = 0x481; // char : 1
		constexpr auto isNotSlidingAndNotClimbing = 0x481; // char : 1
		constexpr auto isHangingFromCeiling = 0x482; // char : 1
		constexpr auto isCurrentlySitting = 0x482; // char : 1
		constexpr auto ResetIK = 0x482; // char : 1
		constexpr auto IsWeaponPrimaryIdleAnimValid = 0x482; // char : 1
		constexpr auto IsWeaponSecondaryIdleAnimValid = 0x482; // char : 1
		constexpr auto IsWeaponPrimaryBlendSpaceValid = 0x482; // char : 1
		constexpr auto IsWeaponSecondaryBlendSpaceValid = 0x482; // char : 1
		constexpr auto IsWeaponPrimaryCrouchBlendSpaceValid = 0x482; // char : 1
		constexpr auto IsPrimaryAndSecondaryIdle = 0x483; // char : 1
		constexpr auto BlendWeaponIdleAnims = 0x483; // char : 1
		constexpr auto IsRunning = 0x483; // char : 1
		constexpr auto IsSprinting = 0x483; // char : 1
		constexpr auto HasFullBodyLocomotion = 0x483; // char : 1
		constexpr auto HasFullBodyCrouchLocomotion = 0x483; // char : 1
		constexpr auto BlockIdleFidgets = 0x483; // char : 1
	}

	namespace n_UVertexAttributeStream { // : UObject
		constexpr auto Usage = 0x28; // FName
		constexpr auto AttributeType = 0x30; // EVertexAttributeStreamType
		constexpr auto Data = 0x38; // TArray<char>
	}

	namespace n_UW_Keybindings_Command_C { // : UKeyBindingsCommandEntryBase
		constexpr auto UberGraphFrame = 0x3c0; // FPointerToUberGraphFrame
		constexpr auto ActionMapping = 0x3c8; // UW_KeyBindings_Button_C*
		constexpr auto ActionName = 0x3d0; // UTextBlock*
		constexpr auto B_Reset = 0x3d8; // UW_ButtonNormal_C*
		constexpr auto TextField = 0x3e0; // UW_FCEditableTextBlock_C*
		constexpr auto Name = 0x3e8; // FText
	}

	namespace n_AConanHumanAIController { // : AConanAttackerAIController
		constexpr auto ShouldChangeRotationRateFromCode = 0x678; // bool
		constexpr auto PickRandomWeaponAfterAttack = 0x679; // bool
		constexpr auto PickBestWeapon = 0x67a; // bool
		constexpr auto PickBestWeaponAfterAttack = 0x67b; // bool
		constexpr auto PickBestWeaponDelay = 0x67c; // float
		constexpr auto MaxArcherRange = 0x680; // float
		constexpr auto WeaponInventory = 0x698; // UItemInventory*
		constexpr auto CurrentWeapon = 0x6a0; // UGameItem*
		constexpr auto CachedStopOrderTarget = 0x6c0; // UStaticTarget*
		constexpr auto TargetingComponent = 0x6d8; // UTargetDistributionComponent*
		constexpr auto StatrSprintDistance = 0x6e0; // float
		constexpr auto StopSprintDistance = 0x6e4; // float
		constexpr auto OptimalShootingDistance = 0x6e8; // float
		constexpr auto BlockActionMinDuration = 0x6ec; // float
		constexpr auto BlockOnAttackedMinDuration = 0x6f0; // float
		constexpr auto BlockMaxDuration = 0x6f4; // float
		constexpr auto BlockChance = 0x6f8; // float
		constexpr auto BlockChanceWhenAttacked = 0x6fc; // float
		constexpr auto TimeAtBlockStart = 0x700; // float
		constexpr auto CurrentBlockMinDuration = 0x704; // float
		constexpr auto AttackAngleCone = 0x708; // float
		constexpr auto CurrentPurgeVolume = 0x710; // APurgeVolume*
		constexpr auto HateListTargetsThresholdForBuildingDetection = 0x724; // int32_t
		constexpr auto DidLastMovementSucceed = 0x728; // bool
		constexpr auto DidLastAttackSucceed = 0x729; // bool
		constexpr auto EndLeashingDistanceFromHomeSqr = 0x72c; // float
		constexpr auto DefaultRotationRate = 0x730; // float
		constexpr auto PassiveRotationRate = 0x734; // float
	}

	namespace n_UInstancedBuildingComponent { // : UInstancedStaticMeshComponent
		constexpr auto DestructibleMesh = 0x8d8; // UDestructibleMesh*
		constexpr auto MaxHealth = 0x8e0; // int32_t
		constexpr auto IsPurgeTarget = 0x8e4; // bool
		constexpr auto m_SourceClass = 0x8e8; // ABuildingBase*
		constexpr auto m_ReplicationData = 0x970; // FBuildingReplicationData
		constexpr auto m_HasReceivedSourceClass = 0xb60; // bool
		constexpr auto m_HasAttachedToParent = 0xb61; // bool
		constexpr auto OnBuildingSectionDestroyed = 0xb68; // FScriptMulticastDelegate
	}

	namespace n_UGameItem { // : UObject
		constexpr auto SignalIntStatChanged = 0x30; // FScriptMulticastDelegate
		constexpr auto SignalFloatStatChanged = 0x40; // FScriptMulticastDelegate
		constexpr auto SignalEnableStateChanged = 0x50; // FScriptMulticastDelegate
		constexpr auto SignalForceUnequip = 0x60; // FScriptMulticastDelegate
		constexpr auto SignalIconChanged = 0x70; // FScriptMulticastDelegate
		constexpr auto SignalIconLayersChanged = 0x80; // FScriptMulticastDelegate
		constexpr auto SignalColorChanged = 0x90; // FScriptMulticastDelegate
		constexpr auto SignalBorderChanged = 0xa0; // FScriptMulticastDelegate
		constexpr auto SignalVisualMeshLoaded = 0xb0; // FScriptMulticastDelegate
		constexpr auto SignalRepairCompleted = 0xc0; // FScriptMulticastDelegate
		constexpr auto SignalVisualObjectClassLoaded = 0xd0; // FScriptMulticastDelegate
		constexpr auto StatModifications = 0xe0; // TArray<FGameItemStatModification>
		constexpr auto ActualDestructibleMesh = 0x100; // UDestructibleMesh*
		constexpr auto VisualActor = 0x108; // AInventoryItemBase*
		constexpr auto OwnerActor = 0x110; // AActor*
		constexpr auto RepairPercentPerTick = 0x118; // float
		constexpr auto m_MapMarkerIconID = 0x11c; // int32_t
		constexpr auto templateID = 0x120; // int32_t
		constexpr auto m_ActualIcon = 0x130; // UTexture2D*
		constexpr auto m_ActualLayeredIcons = 0x138; // TArray<UTexture2D*>
		constexpr auto m_BorderIcon = 0x148; // UTexture2D*
		constexpr auto VisualObjectClass = 0x200; // UObject*
		constexpr auto m_OwnerInventory = 0x208; // UItemInventory*
		constexpr auto m_IsEnabled = 0x244; // bool
		constexpr auto CanUseWhileClimbing = 0x246; // bool
		constexpr auto TypeID = 0x247; // EGameItemType
	}

	namespace n_UFeatGroupView { // : URootWidget
		constexpr auto m_GroupInventory = 0x338; // UItemInventory*
	}

	namespace n_UDLCListBase { // : UWindowRoot
		constexpr auto DLCEntryClass = 0x398; // UDLCEntryViewBase*
	}

	namespace n_UBlueprintGeneratedClass { // : UClass
		constexpr auto NumReplicatedProperties = 0x250; // int32_t
		constexpr auto DynamicBindingObjects = 0x258; // TArray<UDynamicBlueprintBinding*>
		constexpr auto ComponentTemplates = 0x268; // TArray<UActorComponent*>
		constexpr auto Timelines = 0x278; // TArray<UTimelineTemplate*>
		constexpr auto SimpleConstructionScript = 0x288; // USimpleConstructionScript*
		constexpr auto InheritableComponentHandler = 0x290; // UInheritableComponentHandler*
		constexpr auto UberGraphFramePointerProperty = 0x298; // UStructProperty*
		constexpr auto UberGraphFunction = 0x2a0; // UFunction*
		constexpr auto FastCallPairs = 0x2a8; // TArray<FEventGraphFastCallPair>
		constexpr auto bHasInstrumentation = 0x2b8; // bool
		constexpr auto CookedComponentInstancingData = 0x2c0; // TMap<FName, FBlueprintCookedComponentInstancingData>
		constexpr auto bHasNativizedParent = 0x310; // bool
	}

	namespace n_ANavigationGraphNode { // : AActor
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto CustomTimeDilation = 0x80; // float
		constexpr auto bHidden = 0x84; // char : 1
		constexpr auto bNetTemporary = 0x84; // char : 1
		constexpr auto bNetStartup = 0x84; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x84; // char : 1
		constexpr auto bAlwaysRelevant = 0x84; // char : 1
		constexpr auto bReplicateMovement = 0x84; // char : 1
		constexpr auto bTearOff = 0x84; // char : 1
		constexpr auto bExchangedRoles = 0x84; // char : 1
		constexpr auto bPendingNetUpdate = 0x85; // char : 1
		constexpr auto bNetLoadOnClient = 0x85; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x85; // char : 1
		constexpr auto bBlockInput = 0x85; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x85; // char : 1
		constexpr auto bActorEnableCollision = 0x86; // char : 1
		constexpr auto bReplicates = 0x86; // char : 1
		constexpr auto bLostRelevancy = 0x86; // char : 1
		constexpr auto NetDriverName = 0x88; // FName
		constexpr auto bCanBeInCluster = 0x90; // char : 1
		constexpr auto RemoteRole = 0x91; // ENetRole
		constexpr auto Owner = 0x98; // AActor*
		constexpr auto ReplicatedMovement = 0xa0; // FRepMovement
		constexpr auto AttachmentReplication = 0xd8; // FRepAttachment
		constexpr auto Role = 0x118; // ENetRole
		constexpr auto AutoReceiveInput = 0x11a; // EAutoReceiveInput
		constexpr auto InputPriority = 0x11c; // int32_t
		constexpr auto InputComponent = 0x120; // UInputComponent*
		constexpr auto InputConsumeOption = 0x128; // EInputConsumeOptions
		constexpr auto NetCullDistanceSquared = 0x12c; // float
		constexpr auto ViewTargetNetCullDistanceSquared = 0x130; // float
		constexpr auto NetTag = 0x134; // int32_t
		constexpr auto NetUpdateTime = 0x138; // float
		constexpr auto NetUpdateFrequency = 0x13c; // float
		constexpr auto MinNetUpdateFrequency = 0x140; // float
		constexpr auto NetPriority = 0x144; // float
		constexpr auto LastNetUpdateTime = 0x148; // float
		constexpr auto bAutoDestroyWhenFinished = 0x14c; // char : 1
		constexpr auto bCanBeDamaged = 0x14c; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x14c; // char : 1
		constexpr auto bCollideWhenPlacing = 0x14c; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x14c; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x14c; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x14c; // char : 1
		constexpr auto SpawnCollisionHandlingMethod = 0x14d; // ESpawnActorCollisionHandlingMethod
		constexpr auto Instigator = 0x158; // APawn*
		constexpr auto Children = 0x160; // TArray<AActor*>
		constexpr auto RootComponent = 0x170; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x178; // TArray<AMatineeActor*>
		constexpr auto InitialLifeSpan = 0x188; // float
		constexpr auto Layers = 0x198; // TArray<FName>
		constexpr auto ParentComponentActor = 0x1a8; // TWeakObjectPtr<AActor>
		constexpr auto ParentComponent = 0x1b0; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x1b8; // char : 1
		constexpr auto bUseExtendedRelevancyTimeout = 0x1b8; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x1b8; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x1b8; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x1b8; // char : 1
		constexpr auto Tags = 0x1c0; // TArray<FName>
		constexpr auto HiddenEditorViews = 0x1d0; // uint64_t
		constexpr auto OnTakeAnyDamage = 0x1d8; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x1e8; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x1f8; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x208; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x218; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x228; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x238; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x248; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x258; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x268; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x278; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x288; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x298; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x2a8; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x2b8; // FScriptMulticastDelegate
		constexpr auto BlueprintCreatedComponents = 0x3a8; // TArray<UActorComponent*>
		constexpr auto InstanceComponents = 0x3b8; // TArray<UActorComponent*>
	}

	namespace n_UMaterialExpressionArcsineFast { // : UMaterialExpression
		constexpr auto Input = 0x60; // FExpressionInput
	}

	namespace n_UGetOwnerCallProxy { // : UObject
		constexpr auto onSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto onFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_UPlayFabMatchmakerAPI { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnPlayFabResponse = 0x28; // FScriptMulticastDelegate
		constexpr auto CallAuthenticationContext = 0xd0; // UPlayFabAuthenticationContext*
		constexpr auto RequestJsonObj = 0xd8; // UPlayFabJsonObject*
		constexpr auto ResponseJsonObj = 0xe0; // UPlayFabJsonObject*
	}

	namespace n_UParticleModuleColorScaleOverLife { // : UParticleModuleColorBase
		constexpr auto ColorScaleOverLife = 0x30; // FRawDistributionVector
		constexpr auto AlphaScaleOverLife = 0x80; // FRawDistributionFloat
		constexpr auto bEmitterTime = 0xb8; // char : 1
	}

	namespace n_USoundNodeWavePlayer { // : USoundNodeAssetReferencer
		constexpr auto SoundWaveAssetPtr = 0x38; // USoundWave*
		constexpr auto SoundWave = 0x58; // USoundWave*
		constexpr auto bLooping = 0x60; // char : 1
	}

	namespace n_UGridPathFollowingComponent { // : UPathFollowingComponent
		constexpr auto GridManager = 0x3a8; // UNavLocalGridManager*
	}

	namespace n_UAnimCompress_LeastDestructive { // : UAnimCompress
		constexpr auto Description = 0x28; // FString
		constexpr auto bNeedsSkeleton = 0x38; // char : 1
		constexpr auto TranslationCompressionFormat = 0x3c; // AnimationCompressionFormat
		constexpr auto RotationCompressionFormat = 0x3d; // AnimationCompressionFormat
		constexpr auto ScaleCompressionFormat = 0x3e; // AnimationCompressionFormat
	}

	namespace n_UDataTable { // : UObject
		constexpr auto RowStruct = 0x28; // UScriptStruct*
		constexpr auto OnDataTableModified = 0x80; // FScriptMulticastDelegate
	}

	namespace n_UConanBuildingPersistenceComponent { // : UActorPersistenceComponent
		constexpr auto BuildingsWithSocketlessConnections = 0x188; // TSet<ABuildingBase*>
	}

	namespace n_UPetStatsWindow { // : UWindowRoot
		constexpr auto InspectedCharacter = 0x398; // AConanCharacter*
	}

	namespace n_ASuspendableActor { // : AActor
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto CustomTimeDilation = 0x80; // float
		constexpr auto bHidden = 0x84; // char : 1
		constexpr auto bNetTemporary = 0x84; // char : 1
		constexpr auto bNetStartup = 0x84; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x84; // char : 1
		constexpr auto bAlwaysRelevant = 0x84; // char : 1
		constexpr auto bReplicateMovement = 0x84; // char : 1
		constexpr auto bTearOff = 0x84; // char : 1
		constexpr auto bExchangedRoles = 0x84; // char : 1
		constexpr auto bPendingNetUpdate = 0x85; // char : 1
		constexpr auto bNetLoadOnClient = 0x85; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x85; // char : 1
		constexpr auto bBlockInput = 0x85; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x85; // char : 1
		constexpr auto bActorEnableCollision = 0x86; // char : 1
		constexpr auto bReplicates = 0x86; // char : 1
		constexpr auto bLostRelevancy = 0x86; // char : 1
		constexpr auto NetDriverName = 0x88; // FName
		constexpr auto bCanBeInCluster = 0x90; // char : 1
		constexpr auto RemoteRole = 0x91; // ENetRole
		constexpr auto Owner = 0x98; // AActor*
		constexpr auto ReplicatedMovement = 0xa0; // FRepMovement
		constexpr auto AttachmentReplication = 0xd8; // FRepAttachment
		constexpr auto Role = 0x118; // ENetRole
		constexpr auto AutoReceiveInput = 0x11a; // EAutoReceiveInput
		constexpr auto InputPriority = 0x11c; // int32_t
		constexpr auto InputComponent = 0x120; // UInputComponent*
		constexpr auto InputConsumeOption = 0x128; // EInputConsumeOptions
		constexpr auto NetCullDistanceSquared = 0x12c; // float
		constexpr auto ViewTargetNetCullDistanceSquared = 0x130; // float
		constexpr auto NetTag = 0x134; // int32_t
		constexpr auto NetUpdateTime = 0x138; // float
		constexpr auto NetUpdateFrequency = 0x13c; // float
		constexpr auto MinNetUpdateFrequency = 0x140; // float
		constexpr auto NetPriority = 0x144; // float
		constexpr auto LastNetUpdateTime = 0x148; // float
		constexpr auto bAutoDestroyWhenFinished = 0x14c; // char : 1
		constexpr auto bCanBeDamaged = 0x14c; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x14c; // char : 1
		constexpr auto bCollideWhenPlacing = 0x14c; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x14c; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x14c; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x14c; // char : 1
		constexpr auto SpawnCollisionHandlingMethod = 0x14d; // ESpawnActorCollisionHandlingMethod
		constexpr auto Instigator = 0x158; // APawn*
		constexpr auto Children = 0x160; // TArray<AActor*>
		constexpr auto RootComponent = 0x170; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x178; // TArray<AMatineeActor*>
		constexpr auto InitialLifeSpan = 0x188; // float
		constexpr auto Layers = 0x198; // TArray<FName>
		constexpr auto ParentComponentActor = 0x1a8; // TWeakObjectPtr<AActor>
		constexpr auto ParentComponent = 0x1b0; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x1b8; // char : 1
		constexpr auto bUseExtendedRelevancyTimeout = 0x1b8; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x1b8; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x1b8; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x1b8; // char : 1
		constexpr auto Tags = 0x1c0; // TArray<FName>
		constexpr auto HiddenEditorViews = 0x1d0; // uint64_t
		constexpr auto OnTakeAnyDamage = 0x1d8; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x1e8; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x1f8; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x208; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x218; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x228; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x238; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x248; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x258; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x268; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x278; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x288; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x298; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x2a8; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x2b8; // FScriptMulticastDelegate
		constexpr auto BlueprintCreatedComponents = 0x3a8; // TArray<UActorComponent*>
		constexpr auto InstanceComponents = 0x3b8; // TArray<UActorComponent*>
	}

	namespace n_UAsyncGetBuildingsInAreaProxy { // : UBlueprintAsyncActionBase
		constexpr auto OnFinished = 0x28; // FScriptMulticastDelegate
		constexpr auto m_Center = 0x40; // FVector
		constexpr auto m_AreaRadius = 0x4c; // float
		constexpr auto m_MinNumBuildingPieces = 0x50; // int32_t
	}

	namespace n_UFindSessionsCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto onSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto onFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_UW_FriendListEntry_C { // : UFriendListEntry
		constexpr auto UberGraphFrame = 0x470; // FPointerToUberGraphFrame
		constexpr auto ActionsBox = 0x478; // UHorizontalBox*
		constexpr auto B_BlockFriend = 0x480; // UW_ButtonCustom_C*
		constexpr auto B_InviteToSession = 0x488; // UW_ButtonCustom_C*
		constexpr auto B_RemoveFriend = 0x490; // UW_ButtonCustom_C*
		constexpr auto Container = 0x498; // UBorder*
	}

	namespace n_UMovieScene2DTransformSection { // : UMovieSceneSection
		constexpr auto Translation = 0xd0; // FRichCurve [0x2]
		constexpr auto Rotation = 0x1b0; // FRichCurve
		constexpr auto Scale = 0x220; // FRichCurve [0x2]
		constexpr auto Shear = 0x300; // FRichCurve [0x2]
	}

	namespace n_UAsyncGetPlaceablesInAreaProxy { // : UBlueprintAsyncActionBase
		constexpr auto OnFinished = 0x28; // FScriptMulticastDelegate
		constexpr auto m_Center = 0x40; // FVector
		constexpr auto m_AreaRadius = 0x4c; // float
		constexpr auto m_Actors = 0x50; // TArray<AActor*>
	}

	namespace n_UWindowRoot { // : URootWidget
		constexpr auto CloseOnClick = 0x318; // bool
		constexpr auto BlockPlayerInput = 0x319; // bool
		constexpr auto OpeningSlateSound = 0x320; // FSlateSound
		constexpr auto ClosingSlateSound = 0x338; // FSlateSound
		constexpr auto SignalClosing = 0x350; // FScriptMulticastDelegate
		constexpr auto SignalOpened = 0x360; // FScriptMulticastDelegate
		constexpr auto m_WindowHotkeys = 0x370; // TArray<FGamepadHotkeyHelp>
		constexpr auto m_InputComponent = 0x380; // UInputComponent*
		constexpr auto m_GUIModule = 0x388; // UGUIModule*
	}

	namespace n_UAsyncTaskQueryPurchases { // : UBlueprintAsyncActionBase
		constexpr auto OnSucceeded = 0x28; // FScriptMulticastDelegate
		constexpr auto OnFailed = 0x38; // FScriptMulticastDelegate
	}

	namespace n_UItemInventoryReplicateToAll { // : UItemInventory
		constexpr auto SignalItemsRequestedFromClient = 0x170; // FScriptMulticastDelegate
		constexpr auto SignalInventoryRecivedOnClient = 0x180; // FScriptMulticastDelegate
		constexpr auto SignalItemAdded = 0x190; // FScriptMulticastDelegate
		constexpr auto SignalItemRemoved = 0x1a0; // FScriptMulticastDelegate
		constexpr auto SignalItemIntStatChanged = 0x1b0; // FScriptMulticastDelegate
		constexpr auto SignalItemFloatStatChanged = 0x1c0; // FScriptMulticastDelegate
		constexpr auto DelegateCanBeDropped = 0x1d0; // DelegateProperty
		constexpr auto SignalCannotMoveItem = 0x1e0; // FScriptMulticastDelegate
		constexpr auto ItemList = 0x1f0; // TArray<UGameItem*>
		constexpr auto bReplicatesToEveryone = 0x200; // bool
		constexpr auto inventoryType = 0x201; // EInventoryType
		constexpr auto MaxItemCount = 0x204; // int32_t
		constexpr auto PerishModifier = 0x208; // float
		constexpr auto ItemPerishModifiers = 0x210; // TMap<int32_t, float>
		constexpr auto UseWhiteList = 0x260; // bool
		constexpr auto BlackWhiteList = 0x268; // TArray<int32_t>
		constexpr auto LootContainerClass = 0x2c8; // ALootContainer*
		constexpr auto m_ConfigCategoryName = 0x2d0; // FString
	}

	namespace n_APurgeSpawnProbe { // : AActor
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto CustomTimeDilation = 0x80; // float
		constexpr auto bHidden = 0x84; // char : 1
		constexpr auto bNetTemporary = 0x84; // char : 1
		constexpr auto bNetStartup = 0x84; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x84; // char : 1
		constexpr auto bAlwaysRelevant = 0x84; // char : 1
		constexpr auto bReplicateMovement = 0x84; // char : 1
		constexpr auto bTearOff = 0x84; // char : 1
		constexpr auto bExchangedRoles = 0x84; // char : 1
		constexpr auto bPendingNetUpdate = 0x85; // char : 1
		constexpr auto bNetLoadOnClient = 0x85; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x85; // char : 1
		constexpr auto bBlockInput = 0x85; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x85; // char : 1
		constexpr auto bActorEnableCollision = 0x86; // char : 1
		constexpr auto bReplicates = 0x86; // char : 1
		constexpr auto bLostRelevancy = 0x86; // char : 1
		constexpr auto NetDriverName = 0x88; // FName
		constexpr auto bCanBeInCluster = 0x90; // char : 1
		constexpr auto RemoteRole = 0x91; // ENetRole
		constexpr auto Owner = 0x98; // AActor*
		constexpr auto ReplicatedMovement = 0xa0; // FRepMovement
		constexpr auto AttachmentReplication = 0xd8; // FRepAttachment
		constexpr auto Role = 0x118; // ENetRole
		constexpr auto AutoReceiveInput = 0x11a; // EAutoReceiveInput
		constexpr auto InputPriority = 0x11c; // int32_t
		constexpr auto InputComponent = 0x120; // UInputComponent*
		constexpr auto InputConsumeOption = 0x128; // EInputConsumeOptions
		constexpr auto NetCullDistanceSquared = 0x12c; // float
		constexpr auto ViewTargetNetCullDistanceSquared = 0x130; // float
		constexpr auto NetTag = 0x134; // int32_t
		constexpr auto NetUpdateTime = 0x138; // float
		constexpr auto NetUpdateFrequency = 0x13c; // float
		constexpr auto MinNetUpdateFrequency = 0x140; // float
		constexpr auto NetPriority = 0x144; // float
		constexpr auto LastNetUpdateTime = 0x148; // float
		constexpr auto bAutoDestroyWhenFinished = 0x14c; // char : 1
		constexpr auto bCanBeDamaged = 0x14c; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x14c; // char : 1
		constexpr auto bCollideWhenPlacing = 0x14c; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x14c; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x14c; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x14c; // char : 1
		constexpr auto SpawnCollisionHandlingMethod = 0x14d; // ESpawnActorCollisionHandlingMethod
		constexpr auto Instigator = 0x158; // APawn*
		constexpr auto Children = 0x160; // TArray<AActor*>
		constexpr auto RootComponent = 0x170; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x178; // TArray<AMatineeActor*>
		constexpr auto InitialLifeSpan = 0x188; // float
		constexpr auto Layers = 0x198; // TArray<FName>
		constexpr auto ParentComponentActor = 0x1a8; // TWeakObjectPtr<AActor>
		constexpr auto ParentComponent = 0x1b0; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x1b8; // char : 1
		constexpr auto bUseExtendedRelevancyTimeout = 0x1b8; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x1b8; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x1b8; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x1b8; // char : 1
		constexpr auto Tags = 0x1c0; // TArray<FName>
		constexpr auto HiddenEditorViews = 0x1d0; // uint64_t
		constexpr auto OnTakeAnyDamage = 0x1d8; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x1e8; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x1f8; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x208; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x218; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x228; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x238; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x248; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x258; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x268; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x278; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x288; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x298; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x2a8; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x2b8; // FScriptMulticastDelegate
		constexpr auto BlueprintCreatedComponents = 0x3a8; // TArray<UActorComponent*>
		constexpr auto InstanceComponents = 0x3b8; // TArray<UActorComponent*>
	}

	namespace n_UActorChannel { // : UChannel
		constexpr auto Actor = 0x68; // AActor*
	}

	namespace n_UMaterialExpressionPanner { // : UMaterialExpression
		constexpr auto Coordinate = 0x60; // FExpressionInput
		constexpr auto Time = 0x98; // FExpressionInput
		constexpr auto Speed = 0xd0; // FExpressionInput
		constexpr auto SpeedX = 0x108; // float
		constexpr auto SpeedY = 0x10c; // float
		constexpr auto ConstCoordinate = 0x110; // uint32_t
		constexpr auto bFractionalPart = 0x114; // bool
	}

	namespace n_UUIResourceSingleton { // : UObject
		constexpr auto MessageBoxWidgetClass = 0x28; // UMessageBoxWidget*
		constexpr auto MouseBlockWindowClass = 0x30; // UWindowRoot*
		constexpr auto LoadingScreenWidget = 0x38; // UWidget*
		constexpr auto InputBoxWidgetClass = 0x40; // UInputBoxWidget*
		constexpr auto GamepadHelpOverlayClass = 0x48; // UGamepadHelpOverlayBase*
		constexpr auto StartupSound = 0x50; // FSlateSound
		constexpr auto LoadingSound = 0x68; // FSlateSound
		constexpr auto RecipeBorderBitmapNormal = 0x80; // UTexture2D*
		constexpr auto RecipeBorderBitmapThrall = 0x88; // UTexture2D*
		constexpr auto SpawnDataTable = 0x90; // UDataTable*
	}

	namespace n_UBTService_BlueprintBase { // : UBTService
		constexpr auto AIOwner = 0x70; // AAIController*
		constexpr auto ActorOwner = 0x78; // AActor*
		constexpr auto bShowPropertyDetails = 0x90; // char : 1
		constexpr auto bShowEventDetails = 0x90; // char : 1
	}

	namespace n_UBuildingStressTesterProxy { // : UBlueprintAsyncActionBase
		constexpr auto BuildingStressTestAborted = 0x28; // FScriptMulticastDelegate
		constexpr auto DoneLoadingClasses = 0xa0; // bool
		constexpr auto SpawnLocation = 0xa4; // FVector
		constexpr auto spawnRotation = 0xb0; // FRotator
		constexpr auto spawnRadius = 0xbc; // float
		constexpr auto sortMethod = 0xc0; // ESocketDistanceSortMethod
		constexpr auto NumFoundations = 0xc4; // int32_t
		constexpr auto NumOtherPieces = 0xc8; // int32_t
		constexpr auto DestroyAtSameTime = 0xcc; // bool
		constexpr auto ListOfIDsToBuildWith = 0xd0; // FString
		constexpr auto m_FoundationBuilder = 0xe0; // URandomBuildingGeneratorProxy*
		constexpr auto m_RandomBuilder = 0xe8; // URandomBuildingGeneratorProxy*
		constexpr auto m_HasAborted = 0xf0; // bool
		constexpr auto m_IsBuilding = 0xf1; // bool
	}

	namespace n_AConanAIController { // : AConanBaseAIController
		constexpr auto PointOfInterestCollection = 0x568; // FPointOfInterestCollection
	}

	namespace n_UFollowerLimit { // : URootWidget
		constexpr auto NormalTextColor = 0x318; // FLinearColor
		constexpr auto AboveLimitTextColor = 0x328; // FLinearColor
		constexpr auto NormalBarColor = 0x338; // FLinearColor
		constexpr auto AboveLimitBarColor = 0x348; // FLinearColor
		constexpr auto m_CurrentFollowers = 0x358; // UTextBlock*
		constexpr auto m_FollowersLimitText = 0x360; // UTextBlock*
		constexpr auto m_FollowersLimitBar = 0x368; // UHealthBarBase*
	}

	namespace n_UTextLayoutWidget { // : UWidget
		constexpr auto ShapedTextOptions = 0x118; // FShapedTextOptions
		constexpr auto Justification = 0x120; // ETextJustify
		constexpr auto AutoWrapText = 0x121; // bool
		constexpr auto WrapTextAt = 0x124; // float
		constexpr auto WrappingPolicy = 0x128; // ETextWrappingPolicy
		constexpr auto Margin = 0x12c; // FMargin
		constexpr auto LineHeightPercentage = 0x13c; // float
		constexpr auto MaxCharacterLimit = 0x140; // int32_t
	}

	namespace n_UMovieSceneWidgetMaterialTrack { // : UMovieSceneMaterialTrack
		constexpr auto BrushPropertyNamePath = 0xc8; // TArray<FName>
		constexpr auto TrackName = 0xd8; // FName
	}

	namespace n_UParticleModuleSourceMovement { // : UParticleModuleLocationBase
		constexpr auto SourceMovementScale = 0x30; // FRawDistributionVector
	}

	namespace n_UUdpMessagingSettings { // : UObject
		constexpr auto EnableTransport = 0x28; // bool
		constexpr auto UnicastEndpoint = 0x30; // FString
		constexpr auto MulticastEndpoint = 0x40; // FString
		constexpr auto MulticastTimeToLive = 0x50; // char
		constexpr auto StaticEndpoints = 0x58; // TArray<FString>
		constexpr auto EnableTunnel = 0x68; // bool
		constexpr auto TunnelUnicastEndpoint = 0x70; // FString
		constexpr auto TunnelMulticastEndpoint = 0x80; // FString
		constexpr auto RemoteTunnelEndpoints = 0x90; // TArray<FString>
	}

	namespace n_ULineBatchComponent { // : UPrimitiveComponent
		constexpr auto MinDrawDistance = 0x308; // float
		constexpr auto LDMaxDrawDistance = 0x30c; // float
		constexpr auto CachedMaxDrawDistance = 0x310; // float
		constexpr auto DepthPriorityGroup = 0x314; // ESceneDepthPriorityGroup
		constexpr auto ViewOwnerDepthPriorityGroup = 0x315; // ESceneDepthPriorityGroup
		constexpr auto bAlwaysCreatePhysicsState = 0x318; // char : 1
		constexpr auto bGenerateOverlapEvents = 0x318; // char : 1
		constexpr auto bForceGenerateOverlapEvents = 0x318; // char : 1
		constexpr auto bMultiBodyOverlap = 0x318; // char : 1
		constexpr auto bCheckAsyncSceneOnMove = 0x318; // char : 1
		constexpr auto bTraceComplexOnMove = 0x318; // char : 1
		constexpr auto bReturnMaterialOnMove = 0x318; // char : 1
		constexpr auto bUseViewOwnerDepthPriorityGroup = 0x318; // char : 1
		constexpr auto bAllowCullDistanceVolume = 0x318; // char : 1
		constexpr auto bHasMotionBlurVelocityMeshes = 0x318; // char : 1
		constexpr auto bVisibleInReflectionCaptures = 0x318; // char : 1
		constexpr auto bRenderInMainPass = 0x318; // char : 1
		constexpr auto bRenderInMono = 0x318; // char : 1
		constexpr auto bReceivesDecals = 0x318; // char : 1
		constexpr auto bOwnerNoSee = 0x318; // char : 1
		constexpr auto bOnlyOwnerSee = 0x318; // char : 1
		constexpr auto bTreatAsBackgroundForOcclusion = 0x318; // char : 1
		constexpr auto bHeightOutputReferenceSand = 0x318; // char : 1
		constexpr auto bHeightOutputReferenceWater = 0x318; // char : 1
		constexpr auto bHeightOutputIgnoreSand = 0x318; // char : 1
		constexpr auto bHeightOutputIgnoreWater = 0x318; // char : 1
		constexpr auto bCullFromDistantShadowCascades = 0x318; // char : 1
		constexpr auto bUseAsOccluder = 0x318; // char : 1
		constexpr auto bSelectable = 0x318; // char : 1
		constexpr auto bForceMipStreaming = 0x318; // char : 1
		constexpr auto bHasPerInstanceHitProxies = 0x318; // char : 1
		constexpr auto CastShadow = 0x318; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x318; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x318; // char : 1
		constexpr auto bCastDynamicShadow = 0x318; // char : 1
		constexpr auto bCastStaticShadow = 0x318; // char : 1
		constexpr auto bCastVolumetricTranslucentShadow = 0x318; // char : 1
		constexpr auto bSelfShadowOnly = 0x31c; // char : 1
		constexpr auto bCastFarShadow = 0x31c; // char : 1
		constexpr auto bCastInsetShadow = 0x31c; // char : 1
		constexpr auto bCastCinematicShadow = 0x31c; // char : 1
		constexpr auto bCastHiddenShadow = 0x31c; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x31c; // char : 1
		constexpr auto bLightAsIfStatic = 0x31c; // char : 1
		constexpr auto bLightAttachmentsAsGroup = 0x31c; // char : 1
		constexpr auto bReceiveCombinedCSMAndStaticShadowsFromStationaryLights = 0x31c; // char : 1
		constexpr auto bSingleSampleShadowFromStationaryLights = 0x31c; // char : 1
		constexpr auto bIgnoreRadialImpulse = 0x31c; // char : 1
		constexpr auto bIgnoreRadialForce = 0x31c; // char : 1
		constexpr auto AlwaysLoadOnClient = 0x31c; // char : 1
		constexpr auto AlwaysLoadOnServer = 0x31c; // char : 1
		constexpr auto bUseEditorCompositing = 0x31c; // char : 1
		constexpr auto bRenderCustomDepth = 0x31c; // char : 1
		constexpr auto IndirectLightingCacheQuality = 0x320; // EIndirectLightingCacheQuality
		constexpr auto bHasCustomNavigableGeometry = 0x321; // EHasCustomNavigableGeometry
		constexpr auto CanCharacterStepUpOn = 0x323; // ECanBeCharacterBase
		constexpr auto LightingChannels = 0x324; // FLightingChannels
		constexpr auto CustomDepthStencilValue = 0x328; // int32_t
		constexpr auto TranslucencySortPriority = 0x32c; // int32_t
		constexpr auto VisibilityId = 0x330; // int32_t
		constexpr auto LpvBiasMultiplier = 0x338; // float
		constexpr auto BodyInstance = 0x340; // FBodyInstance
		constexpr auto BoundsScale = 0x574; // float
		constexpr auto LastSubmitTime = 0x578; // float
		constexpr auto LastRenderTime = 0x57c; // float
		constexpr auto LastRenderTimeOnScreen = 0x580; // float
		constexpr auto MoveIgnoreActors = 0x588; // TArray<AActor*>
		constexpr auto MoveIgnoreComponents = 0x598; // TArray<UPrimitiveComponent*>
		constexpr auto OnComponentHit = 0x5b8; // FScriptMulticastDelegate
		constexpr auto OnComponentBeginOverlap = 0x5c8; // FScriptMulticastDelegate
		constexpr auto OnComponentEndOverlap = 0x5d8; // FScriptMulticastDelegate
		constexpr auto OnComponentWake = 0x5e8; // FScriptMulticastDelegate
		constexpr auto OnComponentSleep = 0x5f8; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x608; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x618; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x628; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x638; // FScriptMulticastDelegate
		constexpr auto LODParentPrimitive = 0x660; // UPrimitiveComponent*
		constexpr auto PostPhysicsComponentTick = 0x668; // FPrimitiveComponentPostPhysicsTickFunction
	}

	namespace n_UConanCharacterPersistenceComponent { // : UCharacterPersistenceComponent
		constexpr auto SaveOnSpawn = 0xf8; // bool
		constexpr auto SaveFrequency = 0xfc; // float
		constexpr auto SkipSaving = 0x100; // bool
		constexpr auto UID = 0x108; // UUniqueID*
		constexpr auto OnSignalDataLoaded = 0x110; // FScriptMulticastDelegate
		constexpr auto OnSignalPreSave = 0x120; // FScriptMulticastDelegate
		constexpr auto m_bWasLoadedFromDB = 0x130; // bool
	}

	namespace n_UDialogueVoice { // : UObject
		constexpr auto Gender = 0x28; // EGrammaticalGender
		constexpr auto Plurality = 0x29; // EGrammaticalNumber
		constexpr auto LocalizationGUID = 0x2c; // FGuid
	}

	namespace n_UFloatingPawnMovement { // : UPawnMovementComponent
		constexpr auto MaxSpeed = 0x190; // float
		constexpr auto Acceleration = 0x194; // float
		constexpr auto Deceleration = 0x198; // float
		constexpr auto TurningBoost = 0x19c; // float
		constexpr auto bPositionCorrected = 0x1a0; // char : 1
	}

	namespace n_UInterpTrackInstVectorMaterialParam { // : UInterpTrackInst
		constexpr auto MaterialInstances = 0x28; // TArray<UMaterialInstanceDynamic*>
		constexpr auto ResetVectors = 0x38; // TArray<FVector>
		constexpr auto PrimitiveMaterialRefs = 0x48; // TArray<FPrimitiveMaterialRef>
		constexpr auto InstancedTrack = 0x58; // UInterpTrackVectorMaterialParam*
	}

	namespace n_UConanBTTask_Chase { // : UConanBTTask_ConanMoveTo
		constexpr auto MoveSpeedPercentageRange = 0xb0; // FVector2D
		constexpr auto bIntermediatePathsIfCantReachTarget = 0xb8; // bool
	}

	namespace n_UBTNode { // : UObject
		constexpr auto NodeName = 0x30; // FString
		constexpr auto TreeAsset = 0x40; // UBehaviorTree*
		constexpr auto ParentNode = 0x48; // UBTCompositeNode*
	}

	namespace n_UInventoryGridViewBase { // : URootWidget
		constexpr auto GridSlotViewClass = 0x318; // UInventoryGridSlotViewBase*
		constexpr auto ItemViewClass = 0x320; // UInventoryIconViewBase*
		constexpr auto ItemTooltipViewClass = 0x328; // UTooltipWidget*
		constexpr auto StackSplitDialogClass = 0x330; // UStackSplitValueDialog*
		constexpr auto ItemViewClassEnabledColor = 0x338; // FLinearColor
		constexpr auto ItemViewClassDisabledColor = 0x348; // FLinearColor
		constexpr auto inventory = 0x358; // UItemInventory*
		constexpr auto ColumnCount = 0x360; // int32_t
		constexpr auto RowCount = 0x364; // int32_t
		constexpr auto IconSlotSize = 0x368; // float
		constexpr auto IconSlotPadding = 0x36c; // FMargin
		constexpr auto IconSpacing = 0x37c; // FMargin
		constexpr auto IconSlotSpacing = 0x38c; // FMargin
		constexpr auto Orientation = 0x39c; // EOrientation
		constexpr auto EnableScrollBar = 0x39d; // bool
		constexpr auto SizeToFitVertically = 0x39e; // bool
		constexpr auto SizeToFitHorizontally = 0x39f; // bool
		constexpr auto ExpandingGrid = 0x3a0; // bool
		constexpr auto m_HideEmptySlots = 0x3a1; // bool
		constexpr auto ShowItemProgress = 0x3a2; // bool
		constexpr auto AllowItemDrag = 0x3a3; // bool
		constexpr auto AllowItemDrop = 0x3a4; // bool
		constexpr auto ItemsCombinedSound = 0x3a8; // FSlateSound
		constexpr auto HoveredSound = 0x3c0; // USoundBase*
		constexpr auto DelegateGetItemTooltip = 0x3e0; // DelegateProperty
		constexpr auto DelegateFilterItem = 0x3f0; // DelegateProperty
		constexpr auto DelegateDimItem = 0x400; // DelegateProperty
		constexpr auto DelegateShowGlowItem = 0x410; // DelegateProperty
		constexpr auto DelegateCompareItems = 0x420; // DelegateProperty
		constexpr auto SignalItemAdded = 0x660; // FScriptMulticastDelegate
		constexpr auto SignalItemRemoved = 0x670; // FScriptMulticastDelegate
		constexpr auto m_InventoryOnLeft = 0x6b8; // UInventoryGridViewBase*
		constexpr auto m_InventoryOnRight = 0x6c0; // UInventoryGridViewBase*
		constexpr auto m_InventoryOnTop = 0x6c8; // UInventoryGridViewBase*
		constexpr auto m_InventoryOnDown = 0x6d0; // UInventoryGridViewBase*
		constexpr auto m_SplitStackDialog = 0x6d8; // UStackSplitValueDialog*
		constexpr auto m_InventoryMonitor = 0x6e0; // UItemInventoryClientMonitor*
		constexpr auto m_ItemIconViewPool = 0x6e8; // UObjectPool*
		constexpr auto m_GridSlotViewPool = 0x6f0; // UObjectPool*
	}

	namespace n_UEditorStyleSettings { // : UObject
		constexpr auto SelectionColor = 0x28; // FLinearColor
		constexpr auto PressedSelectionColor = 0x38; // FLinearColor
		constexpr auto InactiveSelectionColor = 0x48; // FLinearColor
		constexpr auto KeyboardFocusColor = 0x58; // FLinearColor
		constexpr auto ColorVisionDeficiencyPreviewType = 0x68; // EColorVisionDeficiency
		constexpr auto bUseSmallToolBarIcons = 0x6c; // char : 1
		constexpr auto bUseGrid = 0x6c; // char : 1
		constexpr auto RegularColor = 0x70; // FLinearColor
		constexpr auto RuleColor = 0x80; // FLinearColor
		constexpr auto CenterColor = 0x90; // FLinearColor
		constexpr auto GridSnapSize = 0xa0; // uint32_t
		constexpr auto bEnableWindowAnimations = 0xa4; // char : 1
		constexpr auto bShowFriendlyNames = 0xa4; // char : 1
		constexpr auto bExpandConfigurationMenus = 0xa4; // char : 1
		constexpr auto bShowProjectMenus = 0xa4; // char : 1
		constexpr auto bShowLaunchMenus = 0xa4; // char : 1
		constexpr auto LogBackgroundColor = 0xa8; // FLinearColor
		constexpr auto LogSelectionBackgroundColor = 0xb8; // FLinearColor
		constexpr auto LogNormalColor = 0xc8; // FLinearColor
		constexpr auto LogCommandColor = 0xd8; // FLinearColor
		constexpr auto LogWarningColor = 0xe8; // FLinearColor
		constexpr auto LogErrorColor = 0xf8; // FLinearColor
		constexpr auto bShowAllAdvancedDetails = 0x108; // char : 1
		constexpr auto LogFontSize = 0x10c; // int32_t
		constexpr auto LogTimestampMode = 0x110; // ELogTimes
		constexpr auto bPromoteOutputLogWarningsDuringPIE = 0x111; // bool
		constexpr auto AssetEditorOpenLocation = 0x112; // EAssetEditorOpenLocation
	}

	namespace n_ALightmassPortal { // : AActor
		constexpr auto PortalComponent = 0x3d0; // ULightmassPortalComponent*
	}

	namespace n_UTooltipWidget { // : UUserWidget
		constexpr auto ColorAndOpacity = 0x120; // FLinearColor
		constexpr auto ColorAndOpacityDelegate = 0x130; // DelegateProperty
		constexpr auto ForegroundColor = 0x140; // FSlateColor
		constexpr auto ForegroundColorDelegate = 0x168; // DelegateProperty
		constexpr auto Padding = 0x178; // FMargin
		constexpr auto bSupportsKeyboardFocus = 0x188; // bool
		constexpr auto bIsFocusable = 0x189; // bool
		constexpr auto ActiveSequencePlayers = 0x190; // TArray<UUMGSequencePlayer*>
		constexpr auto StoppedSequencePlayers = 0x1a0; // TArray<UUMGSequencePlayer*>
		constexpr auto bStopAction = 0x1b0; // bool
		constexpr auto Priority = 0x1b4; // int32_t
		constexpr auto NamedSlotBindings = 0x1b8; // TArray<FNamedSlotBinding>
		constexpr auto SafeZonePadding = 0x1c8; // FMargin
		constexpr auto WidgetTree = 0x1d8; // UWidgetTree*
		constexpr auto bCanEverTick = 0x1e0; // char : 1
		constexpr auto bCanEverPaint = 0x1e0; // char : 1
		constexpr auto bCookedWidgetTree = 0x1e0; // char : 1
		constexpr auto InputComponent = 0x1e8; // UInputComponent*
	}

	namespace n_USpinBoxWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto SpinBoxStyle = 0x30; // FSpinBoxStyle
	}

	namespace n_UCharacterPersistenceComponent { // : UPersistenceComponent
		constexpr auto SaveOnSpawn = 0xf8; // bool
		constexpr auto SaveFrequency = 0xfc; // float
		constexpr auto SkipSaving = 0x100; // bool
		constexpr auto UID = 0x108; // UUniqueID*
		constexpr auto OnSignalDataLoaded = 0x110; // FScriptMulticastDelegate
		constexpr auto OnSignalPreSave = 0x120; // FScriptMulticastDelegate
		constexpr auto m_bWasLoadedFromDB = 0x130; // bool
	}

	namespace n_UParticleModuleAccelerationOverLifetime { // : UParticleModuleAccelerationBase
		constexpr auto AccelOverLife = 0x38; // FRawDistributionVector
	}

	namespace n_UServerReport { // : UObject
		constexpr auto IPv4 = 0x28; // FString
		constexpr auto SPort = 0x38; // int32_t
	}

	namespace n_UFont { // : UObject
		constexpr auto FontCacheType = 0x30; // EFontCacheType
		constexpr auto Characters = 0x38; // TArray<FFontCharacter>
		constexpr auto Textures = 0x48; // TArray<UTexture2D*>
		constexpr auto IsRemapped = 0x58; // int32_t
		constexpr auto EmScale = 0x5c; // float
		constexpr auto Ascent = 0x60; // float
		constexpr auto Descent = 0x64; // float
		constexpr auto Leading = 0x68; // float
		constexpr auto Kerning = 0x6c; // int32_t
		constexpr auto ImportOptions = 0x70; // FFontImportOptionsData
		constexpr auto NumCharacters = 0x120; // int32_t
		constexpr auto MaxCharHeight = 0x128; // TArray<int32_t>
		constexpr auto ScalingFactor = 0x138; // float
		constexpr auto LegacyFontSize = 0x13c; // int32_t
		constexpr auto LegacyFontName = 0x140; // FName
		constexpr auto CompositeFont = 0x148; // FCompositeFont
	}

	namespace n_UBTService_BlackboardBase { // : UBTService
		constexpr auto BlackboardKey = 0x70; // FBlackboardKeySelector
	}

	namespace n_UMaterialExpressionConstant3Vector { // : UMaterialExpression
		constexpr auto Constant = 0x60; // FLinearColor
	}

	namespace n_UInterpFilter_Classes { // : UInterpFilter
		constexpr auto Caption = 0x28; // FString
	}

	namespace n_USoundNodeMixer { // : USoundNode
		constexpr auto InputVolume = 0x38; // TArray<float>
	}

	namespace n_ULightmassPortalComponent { // : USceneComponent
		constexpr auto PreviewBox = 0x300; // UBoxComponent*
	}

	namespace n_UAimOffsetBlendSpace { // : UBlendSpace
		constexpr auto AxisToScaleAnimation = 0x140; // EBlendSpaceAxis
	}

	namespace n_UMaterialExpressionIf { // : UMaterialExpression
		constexpr auto A = 0x60; // FExpressionInput
		constexpr auto B = 0x98; // FExpressionInput
		constexpr auto AGreaterThanB = 0xd0; // FExpressionInput
		constexpr auto AEqualsB = 0x108; // FExpressionInput
		constexpr auto ALessThanB = 0x140; // FExpressionInput
		constexpr auto EqualsThreshold = 0x178; // float
		constexpr auto ConstB = 0x17c; // float
		constexpr auto ConstAEqualsB = 0x180; // float
	}

	namespace n_UAIResource_Movement { // : UGameplayTaskResource
		constexpr auto ManualResourceID = 0x28; // int32_t
		constexpr auto AutoResourceID = 0x2c; // uint8_t
		constexpr auto bManuallySetID = 0x30; // char : 1
	}

	namespace n_UChildActorComponent { // : USceneComponent
		constexpr auto ChildActorClass = 0x300; // AActor*
		constexpr auto ChildActor = 0x308; // AActor*
		constexpr auto ChildActorTemplate = 0x310; // AActor*
	}

	namespace n_UButton { // : UContentWidget
		constexpr auto Style = 0x130; // USlateWidgetStyleAsset*
		constexpr auto WidgetStyle = 0x138; // FButtonStyle
		constexpr auto ColorAndOpacity = 0x3e0; // FLinearColor
		constexpr auto BackgroundColor = 0x3f0; // FLinearColor
		constexpr auto ClickMethod = 0x400; // EButtonClickMethod
		constexpr auto TouchMethod = 0x401; // EButtonTouchMethod
		constexpr auto IsFocusable = 0x402; // bool
		constexpr auto OnClicked = 0x408; // FScriptMulticastDelegate
		constexpr auto OnPressed = 0x418; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x428; // FScriptMulticastDelegate
		constexpr auto OnHovered = 0x438; // FScriptMulticastDelegate
		constexpr auto OnUnhovered = 0x448; // FScriptMulticastDelegate
	}

	namespace n_APaperCharacter { // : ACharacter
		constexpr auto Sprite = 0x7f0; // UPaperFlipbookComponent*
	}

	namespace n_UPS4GraniteSettings { // : UObject
		constexpr auto CPUCaches = 0x30; // TArray<FGraniteCpuCache>
		constexpr auto GPUCaches = 0x40; // TArray<FGraniteGpuCache>
		constexpr auto MaximumTileDataUpload = 0x50; // int32_t
		constexpr auto MaximumResolves = 0x54; // int32_t
		constexpr auto GpuMemorySizeInMegabyte = 0x58; // int32_t
		constexpr auto CpuMemorySizeInMegabyte = 0x5c; // int32_t
		constexpr auto bAdvanced = 0x60; // char : 1
		constexpr auto ReservedRatio = 0x64; // float
	}

	namespace n_ASoundStage { // : AActor
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto CustomTimeDilation = 0x80; // float
		constexpr auto bHidden = 0x84; // char : 1
		constexpr auto bNetTemporary = 0x84; // char : 1
		constexpr auto bNetStartup = 0x84; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x84; // char : 1
		constexpr auto bAlwaysRelevant = 0x84; // char : 1
		constexpr auto bReplicateMovement = 0x84; // char : 1
		constexpr auto bTearOff = 0x84; // char : 1
		constexpr auto bExchangedRoles = 0x84; // char : 1
		constexpr auto bPendingNetUpdate = 0x85; // char : 1
		constexpr auto bNetLoadOnClient = 0x85; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x85; // char : 1
		constexpr auto bBlockInput = 0x85; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x85; // char : 1
		constexpr auto bActorEnableCollision = 0x86; // char : 1
		constexpr auto bReplicates = 0x86; // char : 1
		constexpr auto bLostRelevancy = 0x86; // char : 1
		constexpr auto NetDriverName = 0x88; // FName
		constexpr auto bCanBeInCluster = 0x90; // char : 1
		constexpr auto RemoteRole = 0x91; // ENetRole
		constexpr auto Owner = 0x98; // AActor*
		constexpr auto ReplicatedMovement = 0xa0; // FRepMovement
		constexpr auto AttachmentReplication = 0xd8; // FRepAttachment
		constexpr auto Role = 0x118; // ENetRole
		constexpr auto AutoReceiveInput = 0x11a; // EAutoReceiveInput
		constexpr auto InputPriority = 0x11c; // int32_t
		constexpr auto InputComponent = 0x120; // UInputComponent*
		constexpr auto InputConsumeOption = 0x128; // EInputConsumeOptions
		constexpr auto NetCullDistanceSquared = 0x12c; // float
		constexpr auto ViewTargetNetCullDistanceSquared = 0x130; // float
		constexpr auto NetTag = 0x134; // int32_t
		constexpr auto NetUpdateTime = 0x138; // float
		constexpr auto NetUpdateFrequency = 0x13c; // float
		constexpr auto MinNetUpdateFrequency = 0x140; // float
		constexpr auto NetPriority = 0x144; // float
		constexpr auto LastNetUpdateTime = 0x148; // float
		constexpr auto bAutoDestroyWhenFinished = 0x14c; // char : 1
		constexpr auto bCanBeDamaged = 0x14c; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x14c; // char : 1
		constexpr auto bCollideWhenPlacing = 0x14c; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x14c; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x14c; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x14c; // char : 1
		constexpr auto SpawnCollisionHandlingMethod = 0x14d; // ESpawnActorCollisionHandlingMethod
		constexpr auto Instigator = 0x158; // APawn*
		constexpr auto Children = 0x160; // TArray<AActor*>
		constexpr auto RootComponent = 0x170; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x178; // TArray<AMatineeActor*>
		constexpr auto InitialLifeSpan = 0x188; // float
		constexpr auto Layers = 0x198; // TArray<FName>
		constexpr auto ParentComponentActor = 0x1a8; // TWeakObjectPtr<AActor>
		constexpr auto ParentComponent = 0x1b0; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x1b8; // char : 1
		constexpr auto bUseExtendedRelevancyTimeout = 0x1b8; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x1b8; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x1b8; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x1b8; // char : 1
		constexpr auto Tags = 0x1c0; // TArray<FName>
		constexpr auto HiddenEditorViews = 0x1d0; // uint64_t
		constexpr auto OnTakeAnyDamage = 0x1d8; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x1e8; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x1f8; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x208; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x218; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x228; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x238; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x248; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x258; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x268; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x278; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x288; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x298; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x2a8; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x2b8; // FScriptMulticastDelegate
		constexpr auto BlueprintCreatedComponents = 0x3a8; // TArray<UActorComponent*>
		constexpr auto InstanceComponents = 0x3b8; // TArray<UActorComponent*>
	}

	namespace n_UMediaSubtitles { // : UObject
		constexpr auto Subtitles = 0x28; // TArray<FMediaSubtitle>
	}

	namespace n_UAISense_Touch { // : UAISense
		constexpr auto RegisteredEvents = 0x120; // TArray<FAITouchEvent>
	}

	namespace n_UParticleModuleLocationPrimitiveSphere_Seeded { // : UParticleModuleLocationPrimitiveSphere
		constexpr auto RandomSeedInfo = 0xf8; // FParticleRandomSeedInfo
	}

	namespace n_AModController { // : AInfo
		constexpr auto PersistenceComponent = 0x3d0; // UActorPersistenceComponent*
		constexpr auto AdditionalClassComponents = 0x3d8; // TArray<FAdditionalClassComponent>
	}

	namespace n_UHighlightsGetNumberAsync { // : UBlueprintAsyncActionBase
		constexpr auto onSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto onFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_UAnimationAsset { // : UObject
		constexpr auto Skeleton = 0x30; // USkeleton*
		constexpr auto MetaData = 0x58; // TArray<UAnimMetaData*>
		constexpr auto AssetUserData = 0x68; // TArray<UAssetUserData*>
	}

	namespace n_UConanBTTask_Wander { // : UConanBTTask_ConanMoveTo
		constexpr auto MaxWanderPath = 0xc0; // float
	}

	namespace n_ULoadGuildIdCallProxy { // : UBlueprintAsyncActionBase
		constexpr auto onSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto onFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_UBTCompositeNode { // : UBTNode
		constexpr auto Children = 0x58; // TArray<FBTCompositeChild>
		constexpr auto Services = 0x68; // TArray<UBTService*>
	}

	namespace n_ULightComponentBase { // : USceneComponent
		constexpr auto LightGuid = 0x300; // FGuid
		constexpr auto Brightness = 0x310; // float
		constexpr auto Intensity = 0x314; // float
		constexpr auto LightColor = 0x318; // FColor
		constexpr auto bAffectsWorld = 0x31c; // char : 1
		constexpr auto CastShadows = 0x31c; // char : 1
		constexpr auto CastStaticShadows = 0x31c; // char : 1
		constexpr auto CastDynamicShadows = 0x31c; // char : 1
		constexpr auto bAffectTranslucentLighting = 0x31c; // char : 1
		constexpr auto bCastVolumetricShadow = 0x31c; // char : 1
		constexpr auto IndirectLightingIntensity = 0x320; // float
		constexpr auto VolumetricScatteringIntensity = 0x324; // float
	}

	namespace n_UParticleModuleMeshRotationRate { // : UParticleModuleRotationRateBase
		constexpr auto StartRotationRate = 0x30; // FRawDistributionVector
	}

	namespace n_UMaterialExpressionCameraVectorWS { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto Desc = 0x38; // FString
		constexpr auto BorderColor = 0x48; // FColor
		constexpr auto bRealtimePreview = 0x4c; // char : 1
		constexpr auto bNeedToUpdatePreview = 0x4c; // char : 1
		constexpr auto bIsParameterExpression = 0x4c; // char : 1
		constexpr auto bCommentBubbleVisible = 0x4c; // char : 1
		constexpr auto bShowOutputNameOnPin = 0x4c; // char : 1
		constexpr auto bHidePreviewWindow = 0x4c; // char : 1
		constexpr auto bCollapsed = 0x4c; // char : 1
		constexpr auto bShaderInputData = 0x4c; // char : 1
		constexpr auto bShowInputs = 0x4c; // char : 1
		constexpr auto bShowOutputs = 0x4c; // char : 1
		constexpr auto Outputs = 0x50; // TArray<FExpressionOutput>
	}

	namespace n_UPaperSprite { // : UObject
		constexpr auto SourceUV = 0x38; // FVector2D
		constexpr auto SourceDimension = 0x40; // FVector2D
		constexpr auto SourceTexture = 0x48; // UTexture2D*
		constexpr auto AdditionalSourceTextures = 0x50; // TArray<UTexture*>
		constexpr auto BakedSourceUV = 0x60; // FVector2D
		constexpr auto BakedSourceDimension = 0x68; // FVector2D
		constexpr auto BakedSourceTexture = 0x70; // UTexture2D*
		constexpr auto DefaultMaterial = 0x78; // UMaterialInterface*
		constexpr auto AlternateMaterial = 0x80; // UMaterialInterface*
		constexpr auto Sockets = 0x88; // TArray<FPaperSpriteSocket>
		constexpr auto SpriteCollisionDomain = 0x98; // ESpriteCollisionMode
		constexpr auto PixelsPerUnrealUnit = 0x9c; // float
		constexpr auto BodySetup = 0xa0; // UBodySetup*
		constexpr auto AlternateMaterialSplitIndex = 0xa8; // int32_t
		constexpr auto BakedRenderData = 0xb0; // TArray<FVector4>
	}

	namespace n_UCrowdManager { // : UObject
		constexpr auto MyNavData = 0x28; // ANavigationData*
		constexpr auto AvoidanceConfig = 0x30; // TArray<FCrowdAvoidanceConfig>
		constexpr auto SamplingPatterns = 0x40; // TArray<FCrowdAvoidanceSamplingPattern>
		constexpr auto MaxAgents = 0x50; // int32_t
		constexpr auto MaxAgentRadius = 0x54; // float
		constexpr auto MaxAvoidedAgents = 0x58; // int32_t
		constexpr auto MaxAvoidedWalls = 0x5c; // int32_t
		constexpr auto NavmeshCheckInterval = 0x60; // float
		constexpr auto PathOptimizationInterval = 0x64; // float
		constexpr auto SeparationDirClamp = 0x68; // float
		constexpr auto bResolveCollisions = 0x6c; // char : 1
	}

	namespace n_USoundNodeOscillator { // : USoundNode
		constexpr auto bModulateVolume = 0x38; // char : 1
		constexpr auto bModulatePitch = 0x38; // char : 1
		constexpr auto AmplitudeMin = 0x3c; // float
		constexpr auto AmplitudeMax = 0x40; // float
		constexpr auto FrequencyMin = 0x44; // float
		constexpr auto FrequencyMax = 0x48; // float
		constexpr auto OffsetMin = 0x4c; // float
		constexpr auto OffsetMax = 0x50; // float
		constexpr auto CenterMin = 0x54; // float
		constexpr auto CenterMax = 0x58; // float
	}

	namespace n_UHapticFeedbackEffect_SoundWave { // : UHapticFeedbackEffect_Base
		constexpr auto SoundWave = 0x28; // USoundWave*
	}

	namespace n_ANote { // : AActor
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto CustomTimeDilation = 0x80; // float
		constexpr auto bHidden = 0x84; // char : 1
		constexpr auto bNetTemporary = 0x84; // char : 1
		constexpr auto bNetStartup = 0x84; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x84; // char : 1
		constexpr auto bAlwaysRelevant = 0x84; // char : 1
		constexpr auto bReplicateMovement = 0x84; // char : 1
		constexpr auto bTearOff = 0x84; // char : 1
		constexpr auto bExchangedRoles = 0x84; // char : 1
		constexpr auto bPendingNetUpdate = 0x85; // char : 1
		constexpr auto bNetLoadOnClient = 0x85; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x85; // char : 1
		constexpr auto bBlockInput = 0x85; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x85; // char : 1
		constexpr auto bActorEnableCollision = 0x86; // char : 1
		constexpr auto bReplicates = 0x86; // char : 1
		constexpr auto bLostRelevancy = 0x86; // char : 1
		constexpr auto NetDriverName = 0x88; // FName
		constexpr auto bCanBeInCluster = 0x90; // char : 1
		constexpr auto RemoteRole = 0x91; // ENetRole
		constexpr auto Owner = 0x98; // AActor*
		constexpr auto ReplicatedMovement = 0xa0; // FRepMovement
		constexpr auto AttachmentReplication = 0xd8; // FRepAttachment
		constexpr auto Role = 0x118; // ENetRole
		constexpr auto AutoReceiveInput = 0x11a; // EAutoReceiveInput
		constexpr auto InputPriority = 0x11c; // int32_t
		constexpr auto InputComponent = 0x120; // UInputComponent*
		constexpr auto InputConsumeOption = 0x128; // EInputConsumeOptions
		constexpr auto NetCullDistanceSquared = 0x12c; // float
		constexpr auto ViewTargetNetCullDistanceSquared = 0x130; // float
		constexpr auto NetTag = 0x134; // int32_t
		constexpr auto NetUpdateTime = 0x138; // float
		constexpr auto NetUpdateFrequency = 0x13c; // float
		constexpr auto MinNetUpdateFrequency = 0x140; // float
		constexpr auto NetPriority = 0x144; // float
		constexpr auto LastNetUpdateTime = 0x148; // float
		constexpr auto bAutoDestroyWhenFinished = 0x14c; // char : 1
		constexpr auto bCanBeDamaged = 0x14c; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x14c; // char : 1
		constexpr auto bCollideWhenPlacing = 0x14c; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x14c; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x14c; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x14c; // char : 1
		constexpr auto SpawnCollisionHandlingMethod = 0x14d; // ESpawnActorCollisionHandlingMethod
		constexpr auto Instigator = 0x158; // APawn*
		constexpr auto Children = 0x160; // TArray<AActor*>
		constexpr auto RootComponent = 0x170; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x178; // TArray<AMatineeActor*>
		constexpr auto InitialLifeSpan = 0x188; // float
		constexpr auto Layers = 0x198; // TArray<FName>
		constexpr auto ParentComponentActor = 0x1a8; // TWeakObjectPtr<AActor>
		constexpr auto ParentComponent = 0x1b0; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x1b8; // char : 1
		constexpr auto bUseExtendedRelevancyTimeout = 0x1b8; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x1b8; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x1b8; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x1b8; // char : 1
		constexpr auto Tags = 0x1c0; // TArray<FName>
		constexpr auto HiddenEditorViews = 0x1d0; // uint64_t
		constexpr auto OnTakeAnyDamage = 0x1d8; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x1e8; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x1f8; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x208; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x218; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x228; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x238; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x248; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x258; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x268; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x278; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x288; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x298; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x2a8; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x2b8; // FScriptMulticastDelegate
		constexpr auto BlueprintCreatedComponents = 0x3a8; // TArray<UActorComponent*>
		constexpr auto InstanceComponents = 0x3b8; // TArray<UActorComponent*>
	}

	namespace n_UMaterialExpressionPreviousFrameSwitch { // : UMaterialExpression
		constexpr auto CurrentFrame = 0x60; // FExpressionInput
		constexpr auto PreviousFrame = 0x98; // FExpressionInput
	}

	namespace n_USkeletalMeshReductionSettings { // : UObject
		constexpr auto Settings = 0x28; // TArray<FSkeletalMeshLODGroupSettings>
	}

	namespace n_UStatHolder { // : UPersistenceComponent
		constexpr auto SignalIntStatChanged = 0x168; // FScriptMulticastDelegate
		constexpr auto SignalFloatStatChanged = 0x178; // FScriptMulticastDelegate
		constexpr auto m_IntStatArray = 0x188; // FStatArrayInt32
		constexpr auto m_FloatStatArray = 0x258; // FStatArrayFloat
		constexpr auto m_IntStatChangeNodeList = 0x3b8; // TArray<UIntStatChangeSignalNode*>
		constexpr auto m_FloatStatChangeNodeList = 0x3c8; // TArray<UFloatStatChangeSignalNode*>
	}

	namespace n_UArrowComponent { // : UPrimitiveComponent
		constexpr auto ArrowColor = 0x6c0; // FColor
		constexpr auto ArrowSize = 0x6c4; // float
		constexpr auto bIsScreenSizeScaled = 0x6c8; // bool
		constexpr auto ScreenSize = 0x6cc; // float
		constexpr auto bTreatAsASprite = 0x6d0; // char : 1
	}

	namespace n_ULootLogElementBase { // : UUserWidget
		constexpr auto T_Total = 0x240; // UTextBlock*
		constexpr auto T_Quantity = 0x248; // UTextBlock*
		constexpr auto T_Type = 0x250; // UTextBlock*
		constexpr auto I_Icon = 0x258; // UInventoryIconViewBase*
		constexpr auto Brd_Background = 0x260; // UBorder*
		constexpr auto RemoveTexture = 0x268; // UTexture2D*
		constexpr auto AddTexture = 0x270; // UTexture2D*
		constexpr auto DefaultFontSize = 0x278; // int32_t
	}

	namespace n_UBTDecorator_KeepInCone { // : UBTDecorator
		constexpr auto ConeHalfAngle = 0x68; // float
		constexpr auto ConeOrigin = 0x70; // FBlackboardKeySelector
		constexpr auto Observed = 0x98; // FBlackboardKeySelector
		constexpr auto bUseSelfAsOrigin = 0xc0; // char : 1
		constexpr auto bUseSelfAsObserved = 0xc0; // char : 1
	}

	namespace n_UCanvasPanelSlot { // : UPanelSlot
		constexpr auto LayoutData = 0x38; // FAnchorData
		constexpr auto bAutoSize = 0x60; // bool
		constexpr auto ZOrder = 0x64; // int32_t
	}

	namespace n_UPhysicsSpringComponent { // : USceneComponent
		constexpr auto SpringStiffness = 0x300; // float
		constexpr auto SpringDamping = 0x304; // float
		constexpr auto SpringLengthAtRest = 0x308; // float
		constexpr auto SpringRadius = 0x30c; // float
		constexpr auto SpringChannel = 0x310; // ECollisionChannel
		constexpr auto bIgnoreSelf = 0x311; // bool
		constexpr auto SpringCompression = 0x314; // float
	}

	namespace n_UFriendsGame { // : UWindowRoot
		constexpr auto m_bIsPromptOpen = 0x3ac; // bool
		constexpr auto m_FriendListHotkeys = 0x8d0; // TMap<EFriendListHotkey, FGamepadHotkeyHelp>
	}

	namespace n_UW_ItemIconTooltipView_C { // : UInventoryIconTooltipView
		constexpr auto NameView = 0x258; // UTextBlock*
	}

	namespace n_UViewport { // : UContentWidget
		constexpr auto BackgroundColor = 0x130; // FLinearColor
	}

	namespace n_UHierarchicalInstancedStaticMeshComponent { // : UInstancedStaticMeshComponent
		constexpr auto SortedInstances = 0x930; // TArray<int32_t>
		constexpr auto NumBuiltInstances = 0x940; // int32_t
		constexpr auto BuiltInstanceBounds = 0x948; // FBox
		constexpr auto UnbuiltInstanceBounds = 0x964; // FBox
		constexpr auto UnbuiltInstanceBoundsList = 0x980; // TArray<FBox>
		constexpr auto bEnableDensityScaling = 0x990; // char : 1
		constexpr auto OcclusionLayerNumNodes = 0x9b8; // int32_t
		constexpr auto bDisableCollision = 0x9bf; // bool
	}

	namespace n_UMaterialExpressionPerInstanceFadeAmount { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto Desc = 0x38; // FString
		constexpr auto BorderColor = 0x48; // FColor
		constexpr auto bRealtimePreview = 0x4c; // char : 1
		constexpr auto bNeedToUpdatePreview = 0x4c; // char : 1
		constexpr auto bIsParameterExpression = 0x4c; // char : 1
		constexpr auto bCommentBubbleVisible = 0x4c; // char : 1
		constexpr auto bShowOutputNameOnPin = 0x4c; // char : 1
		constexpr auto bHidePreviewWindow = 0x4c; // char : 1
		constexpr auto bCollapsed = 0x4c; // char : 1
		constexpr auto bShaderInputData = 0x4c; // char : 1
		constexpr auto bShowInputs = 0x4c; // char : 1
		constexpr auto bShowOutputs = 0x4c; // char : 1
		constexpr auto Outputs = 0x50; // TArray<FExpressionOutput>
	}

	namespace n_UMovieSceneSkeletalAnimationSection { // : UMovieSceneSection
		constexpr auto Params = 0xc8; // FMovieSceneSkeletalAnimationParams
		constexpr auto AnimSequence = 0x158; // UAnimSequence*
		constexpr auto Animation = 0x160; // UAnimSequenceBase*
		constexpr auto StartOffset = 0x168; // float
		constexpr auto EndOffset = 0x16c; // float
		constexpr auto PlayRate = 0x170; // float
		constexpr auto bReverse = 0x174; // char : 1
		constexpr auto SlotName = 0x178; // FName
	}

	namespace n_UHighlightsOpenGroupAsync { // : UBlueprintAsyncActionBase
		constexpr auto onSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto onFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_UParticleModuleRotationRate_Seeded { // : UParticleModuleRotationRate
		constexpr auto RandomSeedInfo = 0x68; // FParticleRandomSeedInfo
	}

	namespace n_UMovieSceneCinematicShotTrack { // : UMovieSceneSubTrack
		constexpr auto Sections = 0xb8; // TArray<UMovieSceneSection*>
	}

	namespace n_UKeyBindingsCommandEntryBase { // : URootWidget
		constexpr auto KeyNavOnSelectedEvent = 0x240; // FScriptMulticastDelegate
		constexpr auto KeyNavLeft = 0x250; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavRight = 0x258; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavAbove = 0x260; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavBelow = 0x268; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavTab = 0x270; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildLeft = 0x278; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildRight = 0x280; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildAbove = 0x288; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildBelow = 0x290; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildTab = 0x298; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildren = 0x2a0; // TWeakObjectPtr<URootWidget>
		constexpr auto TooltipWidgetClass = 0x2a8; // UTooltipWidget*
		constexpr auto KeyNavIndicatorClass = 0x2b0; // UKeyNavIndicator*
		constexpr auto PositiveFeedbackColor = 0x2b8; // FLinearColor
		constexpr auto NegativeFeedbackColor = 0x2c8; // FLinearColor
		constexpr auto NeutralFeedbackColor = 0x2d8; // FLinearColor
		constexpr auto KeyNavFocusOnClick = 0x2e8; // bool
		constexpr auto KeyNavAutoSetBack = 0x2e9; // bool
		constexpr auto m_Window = 0x2f0; // UWindowRoot*
		constexpr auto m_Parent = 0x2f8; // TWeakObjectPtr<URootWidget>
		constexpr auto m_KeyNavIndicator = 0x300; // UKeyNavIndicator*
	}

	namespace n_UGameplayTickGroupScheduler { // : UActorComponent
		constexpr auto Scheduler = 0xf8; // AGameplayScheduler*
	}

	namespace n_UTextBinding { // : UPropertyBinding
		constexpr auto SourceObject = 0x28; // TWeakObjectPtr<UObject>
		constexpr auto SourcePath = 0x30; // FDynamicPropertyPath
		constexpr auto DestinationProperty = 0x40; // FName
	}

	namespace n_UParticleModuleTypeDataGpu { // : UParticleModuleTypeDataBase
		constexpr auto EmitterInfo = 0x30; // FGPUSpriteEmitterInfo
		constexpr auto ResourceData = 0x2f0; // FGPUSpriteResourceData
		constexpr auto CameraMotionBlurAmount = 0x450; // float
		constexpr auto bClearExistingParticlesOnInit = 0x454; // char : 1
	}

	namespace n_UInterpTrackInstVisibility { // : UInterpTrackInst
		constexpr auto Action = 0x28; // EVisibilityTrackAction
		constexpr auto LastUpdatePosition = 0x2c; // float
	}

	namespace n_UMovieSceneParameterSection { // : UMovieSceneSection
		constexpr auto ScalarParameterNamesAndCurves = 0xc8; // TArray<FScalarParameterNameAndCurve>
		constexpr auto VectorParameterNamesAndCurves = 0xd8; // TArray<FVectorParameterNameAndCurves>
		constexpr auto ColorParameterNamesAndCurves = 0xe8; // TArray<FColorParameterNameAndCurves>
	}

	namespace n_UCheckBoxStyleAsset { // : UObject
		constexpr auto CheckBoxStyle = 0x28; // FCheckBoxStyle
	}

	namespace n_UMaterialExpressionTransformPosition { // : UMaterialExpression
		constexpr auto Input = 0x60; // FExpressionInput
		constexpr auto TransformSourceType = 0x98; // EMaterialPositionTransformSource
		constexpr auto TransformType = 0x99; // EMaterialPositionTransformSource
	}

	namespace n_ULicenseInfoBase { // : UWindowRoot
		constexpr auto PressSpeed = 0x398; // float
		constexpr auto RepeatSpeed = 0x39c; // float
	}

	namespace n_ASceneCaptureSand { // : ASceneCapture
		constexpr auto CaptureComponentSand = 0x3d8; // USceneCaptureComponentSand*
		constexpr auto DrawBox = 0x3e0; // UBoxComponent*
		constexpr auto ImprintReceiver = 0x3e8; // UImprintReceiverComponent*
	}

	namespace n_UFeatInventory { // : UItemInventory
		constexpr auto SignalItemsRequestedFromClient = 0x170; // FScriptMulticastDelegate
		constexpr auto SignalInventoryRecivedOnClient = 0x180; // FScriptMulticastDelegate
		constexpr auto SignalItemAdded = 0x190; // FScriptMulticastDelegate
		constexpr auto SignalItemRemoved = 0x1a0; // FScriptMulticastDelegate
		constexpr auto SignalItemIntStatChanged = 0x1b0; // FScriptMulticastDelegate
		constexpr auto SignalItemFloatStatChanged = 0x1c0; // FScriptMulticastDelegate
		constexpr auto DelegateCanBeDropped = 0x1d0; // DelegateProperty
		constexpr auto SignalCannotMoveItem = 0x1e0; // FScriptMulticastDelegate
		constexpr auto ItemList = 0x1f0; // TArray<UGameItem*>
		constexpr auto bReplicatesToEveryone = 0x200; // bool
		constexpr auto inventoryType = 0x201; // EInventoryType
		constexpr auto MaxItemCount = 0x204; // int32_t
		constexpr auto PerishModifier = 0x208; // float
		constexpr auto ItemPerishModifiers = 0x210; // TMap<int32_t, float>
		constexpr auto UseWhiteList = 0x260; // bool
		constexpr auto BlackWhiteList = 0x268; // TArray<int32_t>
		constexpr auto LootContainerClass = 0x2c8; // ALootContainer*
		constexpr auto m_ConfigCategoryName = 0x2d0; // FString
	}

	namespace n_UQuadtreeComponent { // : USceneComponent
		constexpr auto TreeName = 0x308; // FName
	}

	namespace n_UMovieScene3DConstraintSection { // : UMovieSceneSection
		constexpr auto ConstraintId = 0xc8; // FGuid
	}

	namespace n_UTcpMessagingSettings { // : UObject
		constexpr auto EnableTransport = 0x28; // bool
		constexpr auto ListenEndpoint = 0x30; // FString
		constexpr auto ConnectToEndpoints = 0x40; // TArray<FString>
		constexpr auto ConnectionRetryDelay = 0x50; // int32_t
	}

	namespace n_UInterpTrackInstFloatProp { // : UInterpTrackInstProperty
		constexpr auto ResetFloat = 0x40; // float
	}

	namespace n_ALoreMeshActor { // : AStaticMeshActor
		constexpr auto LoreId = 0x3e8; // int32_t
	}

	namespace n_APhasedAutomationActorBase { // : AActor
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto CustomTimeDilation = 0x80; // float
		constexpr auto bHidden = 0x84; // char : 1
		constexpr auto bNetTemporary = 0x84; // char : 1
		constexpr auto bNetStartup = 0x84; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x84; // char : 1
		constexpr auto bAlwaysRelevant = 0x84; // char : 1
		constexpr auto bReplicateMovement = 0x84; // char : 1
		constexpr auto bTearOff = 0x84; // char : 1
		constexpr auto bExchangedRoles = 0x84; // char : 1
		constexpr auto bPendingNetUpdate = 0x85; // char : 1
		constexpr auto bNetLoadOnClient = 0x85; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x85; // char : 1
		constexpr auto bBlockInput = 0x85; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x85; // char : 1
		constexpr auto bActorEnableCollision = 0x86; // char : 1
		constexpr auto bReplicates = 0x86; // char : 1
		constexpr auto bLostRelevancy = 0x86; // char : 1
		constexpr auto NetDriverName = 0x88; // FName
		constexpr auto bCanBeInCluster = 0x90; // char : 1
		constexpr auto RemoteRole = 0x91; // ENetRole
		constexpr auto Owner = 0x98; // AActor*
		constexpr auto ReplicatedMovement = 0xa0; // FRepMovement
		constexpr auto AttachmentReplication = 0xd8; // FRepAttachment
		constexpr auto Role = 0x118; // ENetRole
		constexpr auto AutoReceiveInput = 0x11a; // EAutoReceiveInput
		constexpr auto InputPriority = 0x11c; // int32_t
		constexpr auto InputComponent = 0x120; // UInputComponent*
		constexpr auto InputConsumeOption = 0x128; // EInputConsumeOptions
		constexpr auto NetCullDistanceSquared = 0x12c; // float
		constexpr auto ViewTargetNetCullDistanceSquared = 0x130; // float
		constexpr auto NetTag = 0x134; // int32_t
		constexpr auto NetUpdateTime = 0x138; // float
		constexpr auto NetUpdateFrequency = 0x13c; // float
		constexpr auto MinNetUpdateFrequency = 0x140; // float
		constexpr auto NetPriority = 0x144; // float
		constexpr auto LastNetUpdateTime = 0x148; // float
		constexpr auto bAutoDestroyWhenFinished = 0x14c; // char : 1
		constexpr auto bCanBeDamaged = 0x14c; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x14c; // char : 1
		constexpr auto bCollideWhenPlacing = 0x14c; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x14c; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x14c; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x14c; // char : 1
		constexpr auto SpawnCollisionHandlingMethod = 0x14d; // ESpawnActorCollisionHandlingMethod
		constexpr auto Instigator = 0x158; // APawn*
		constexpr auto Children = 0x160; // TArray<AActor*>
		constexpr auto RootComponent = 0x170; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x178; // TArray<AMatineeActor*>
		constexpr auto InitialLifeSpan = 0x188; // float
		constexpr auto Layers = 0x198; // TArray<FName>
		constexpr auto ParentComponentActor = 0x1a8; // TWeakObjectPtr<AActor>
		constexpr auto ParentComponent = 0x1b0; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x1b8; // char : 1
		constexpr auto bUseExtendedRelevancyTimeout = 0x1b8; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x1b8; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x1b8; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x1b8; // char : 1
		constexpr auto Tags = 0x1c0; // TArray<FName>
		constexpr auto HiddenEditorViews = 0x1d0; // uint64_t
		constexpr auto OnTakeAnyDamage = 0x1d8; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x1e8; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x1f8; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x208; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x218; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x228; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x238; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x248; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x258; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x268; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x278; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x288; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x298; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x2a8; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x2b8; // FScriptMulticastDelegate
		constexpr auto BlueprintCreatedComponents = 0x3a8; // TArray<UActorComponent*>
		constexpr auto InstanceComponents = 0x3b8; // TArray<UActorComponent*>
	}

	namespace n_UPrimitiveComponent { // : USceneComponent
		constexpr auto MinDrawDistance = 0x308; // float
		constexpr auto LDMaxDrawDistance = 0x30c; // float
		constexpr auto CachedMaxDrawDistance = 0x310; // float
		constexpr auto DepthPriorityGroup = 0x314; // ESceneDepthPriorityGroup
		constexpr auto ViewOwnerDepthPriorityGroup = 0x315; // ESceneDepthPriorityGroup
		constexpr auto bAlwaysCreatePhysicsState = 0x318; // char : 1
		constexpr auto bGenerateOverlapEvents = 0x318; // char : 1
		constexpr auto bForceGenerateOverlapEvents = 0x318; // char : 1
		constexpr auto bMultiBodyOverlap = 0x318; // char : 1
		constexpr auto bCheckAsyncSceneOnMove = 0x318; // char : 1
		constexpr auto bTraceComplexOnMove = 0x318; // char : 1
		constexpr auto bReturnMaterialOnMove = 0x318; // char : 1
		constexpr auto bUseViewOwnerDepthPriorityGroup = 0x318; // char : 1
		constexpr auto bAllowCullDistanceVolume = 0x318; // char : 1
		constexpr auto bHasMotionBlurVelocityMeshes = 0x318; // char : 1
		constexpr auto bVisibleInReflectionCaptures = 0x318; // char : 1
		constexpr auto bRenderInMainPass = 0x318; // char : 1
		constexpr auto bRenderInMono = 0x318; // char : 1
		constexpr auto bReceivesDecals = 0x318; // char : 1
		constexpr auto bOwnerNoSee = 0x318; // char : 1
		constexpr auto bOnlyOwnerSee = 0x318; // char : 1
		constexpr auto bTreatAsBackgroundForOcclusion = 0x318; // char : 1
		constexpr auto bHeightOutputReferenceSand = 0x318; // char : 1
		constexpr auto bHeightOutputReferenceWater = 0x318; // char : 1
		constexpr auto bHeightOutputIgnoreSand = 0x318; // char : 1
		constexpr auto bHeightOutputIgnoreWater = 0x318; // char : 1
		constexpr auto bCullFromDistantShadowCascades = 0x318; // char : 1
		constexpr auto bUseAsOccluder = 0x318; // char : 1
		constexpr auto bSelectable = 0x318; // char : 1
		constexpr auto bForceMipStreaming = 0x318; // char : 1
		constexpr auto bHasPerInstanceHitProxies = 0x318; // char : 1
		constexpr auto CastShadow = 0x318; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x318; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x318; // char : 1
		constexpr auto bCastDynamicShadow = 0x318; // char : 1
		constexpr auto bCastStaticShadow = 0x318; // char : 1
		constexpr auto bCastVolumetricTranslucentShadow = 0x318; // char : 1
		constexpr auto bSelfShadowOnly = 0x31c; // char : 1
		constexpr auto bCastFarShadow = 0x31c; // char : 1
		constexpr auto bCastInsetShadow = 0x31c; // char : 1
		constexpr auto bCastCinematicShadow = 0x31c; // char : 1
		constexpr auto bCastHiddenShadow = 0x31c; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x31c; // char : 1
		constexpr auto bLightAsIfStatic = 0x31c; // char : 1
		constexpr auto bLightAttachmentsAsGroup = 0x31c; // char : 1
		constexpr auto bReceiveCombinedCSMAndStaticShadowsFromStationaryLights = 0x31c; // char : 1
		constexpr auto bSingleSampleShadowFromStationaryLights = 0x31c; // char : 1
		constexpr auto bIgnoreRadialImpulse = 0x31c; // char : 1
		constexpr auto bIgnoreRadialForce = 0x31c; // char : 1
		constexpr auto AlwaysLoadOnClient = 0x31c; // char : 1
		constexpr auto AlwaysLoadOnServer = 0x31c; // char : 1
		constexpr auto bUseEditorCompositing = 0x31c; // char : 1
		constexpr auto bRenderCustomDepth = 0x31c; // char : 1
		constexpr auto IndirectLightingCacheQuality = 0x320; // EIndirectLightingCacheQuality
		constexpr auto bHasCustomNavigableGeometry = 0x321; // EHasCustomNavigableGeometry
		constexpr auto CanCharacterStepUpOn = 0x323; // ECanBeCharacterBase
		constexpr auto LightingChannels = 0x324; // FLightingChannels
		constexpr auto CustomDepthStencilValue = 0x328; // int32_t
		constexpr auto TranslucencySortPriority = 0x32c; // int32_t
		constexpr auto VisibilityId = 0x330; // int32_t
		constexpr auto LpvBiasMultiplier = 0x338; // float
		constexpr auto BodyInstance = 0x340; // FBodyInstance
		constexpr auto BoundsScale = 0x574; // float
		constexpr auto LastSubmitTime = 0x578; // float
		constexpr auto LastRenderTime = 0x57c; // float
		constexpr auto LastRenderTimeOnScreen = 0x580; // float
		constexpr auto MoveIgnoreActors = 0x588; // TArray<AActor*>
		constexpr auto MoveIgnoreComponents = 0x598; // TArray<UPrimitiveComponent*>
		constexpr auto OnComponentHit = 0x5b8; // FScriptMulticastDelegate
		constexpr auto OnComponentBeginOverlap = 0x5c8; // FScriptMulticastDelegate
		constexpr auto OnComponentEndOverlap = 0x5d8; // FScriptMulticastDelegate
		constexpr auto OnComponentWake = 0x5e8; // FScriptMulticastDelegate
		constexpr auto OnComponentSleep = 0x5f8; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x608; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x618; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x628; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x638; // FScriptMulticastDelegate
		constexpr auto LODParentPrimitive = 0x660; // UPrimitiveComponent*
		constexpr auto PostPhysicsComponentTick = 0x668; // FPrimitiveComponentPostPhysicsTickFunction
	}

	namespace n_UComboButtonWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto ComboButtonStyle = 0x30; // FComboButtonStyle
	}

	namespace n_UParticleModuleTypeDataBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x28; // char : 1
		constexpr auto LODDuplicate = 0x28; // char : 1
		constexpr auto bSupportsRandomSeed = 0x28; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x28; // char : 1
		constexpr auto LODValidity = 0x2c; // char
	}

	namespace n_UMaterialInstanceConstant { // : UMaterialInstance
		constexpr auto PhysMaterial = 0x70; // UPhysicalMaterial*
		constexpr auto Parent = 0x78; // UMaterialInterface*
		constexpr auto bHasStaticPermutationResource = 0x80; // char : 1
		constexpr auto bOverrideSubsurfaceProfile = 0x80; // char : 1
		constexpr auto FontParameterValues = 0x88; // TArray<FFontParameterValue>
		constexpr auto ScalarParameterValues = 0x98; // TArray<FScalarParameterValue>
		constexpr auto TextureParameterValues = 0xa8; // TArray<FTextureParameterValue>
		constexpr auto GraniteTextureParameterValues = 0xb8; // TArray<FGraniteTextureParameterValue>
		constexpr auto GraniteErrors = 0xc8; // TArray<FString>
		constexpr auto VectorParameterValues = 0xd8; // TArray<FVectorParameterValue>
		constexpr auto bOverrideBaseProperties = 0xe8; // bool
		constexpr auto BasePropertyOverrides = 0xec; // FMaterialInstanceBasePropertyOverrides
	}

	namespace n_UApplyRadialDamageWithFalloffProxy { // : UBlueprintAsyncActionBase
		constexpr auto OnComplete = 0x28; // FScriptMulticastDelegate
		constexpr auto IgnoreActors = 0x60; // TArray<AActor*>
		constexpr auto DamageCauser = 0x70; // AActor*
		constexpr auto InstigatedByController = 0x78; // AController*
		constexpr auto OverlapComponentMap = 0xa0; // TMap<AActor*, FHitList>
	}

	namespace n_UHoudiniRuntimeSettings { // : UObject
		constexpr auto SessionType = 0x28; // EHoudiniRuntimeSettingsSessionType
		constexpr auto ServerHost = 0x30; // FString
		constexpr auto ServerPort = 0x40; // int32_t
		constexpr auto ServerPipeName = 0x48; // FString
		constexpr auto bStartAutomaticServer = 0x58; // bool
		constexpr auto AutomaticServerTimeout = 0x5c; // float
		constexpr auto bShowMultiAssetDialog = 0x60; // bool
		constexpr auto bEnableCooking = 0x61; // bool
		constexpr auto bUploadTransformsToHoudiniEngine = 0x62; // bool
		constexpr auto bTransformChangeTriggersCooks = 0x63; // bool
		constexpr auto bDisplaySlateCookingNotifications = 0x64; // bool
		constexpr auto bCookCurvesOnMouseRelease = 0x65; // bool
		constexpr auto TemporaryCookFolder = 0x68; // FText
		constexpr auto bTreatRampParametersAsMultiparms = 0x80; // bool
		constexpr auto CollisionGroupNamePrefix = 0x88; // FString
		constexpr auto RenderedCollisionGroupNamePrefix = 0x98; // FString
		constexpr auto UCXCollisionGroupNamePrefix = 0xa8; // FString
		constexpr auto UCXRenderedCollisionGroupNamePrefix = 0xb8; // FString
		constexpr auto SimpleCollisionGroupNamePrefix = 0xc8; // FString
		constexpr auto SimpleRenderedCollisionGroupNamePrefix = 0xd8; // FString
		constexpr auto MarshallingAttributeMaterial = 0xe8; // FString
		constexpr auto MarshallingAttributeMaterialHole = 0xf8; // FString
		constexpr auto MarshallingAttributeInstanceOverride = 0x108; // FString
		constexpr auto MarshallingAttributeFaceSmoothingMask = 0x118; // FString
		constexpr auto MarshallingAttributeLightmapResolution = 0x128; // FString
		constexpr auto MarshallingAttributeGeneratedMeshName = 0x138; // FString
		constexpr auto MarshallingAttributeInputMeshName = 0x148; // FString
		constexpr auto MarshallingSplineResolution = 0x158; // float
		constexpr auto MarshallingLandscapesUseFullResolution = 0x15c; // bool
		constexpr auto GeneratedGeometryScaleFactor = 0x160; // float
		constexpr auto TransformScaleFactor = 0x164; // float
		constexpr auto ImportAxis = 0x168; // EHoudiniRuntimeSettingsAxisImport
		constexpr auto bDoubleSidedGeometry = 0x16c; // char : 1
		constexpr auto PhysMaterial = 0x170; // UPhysicalMaterial*
		constexpr auto CollisionTraceFlag = 0x178; // ECollisionTraceFlag
		constexpr auto LightMapResolution = 0x17c; // int32_t
		constexpr auto LpvBiasMultiplier = 0x180; // float
		constexpr auto GeneratedDistanceFieldResolutionScale = 0x184; // float
		constexpr auto WalkableSlopeOverride = 0x188; // FWalkableSlopeOverride
		constexpr auto LightMapCoordinateIndex = 0x198; // int32_t
		constexpr auto bUseMaximumStreamingTexelRatio = 0x19c; // char : 1
		constexpr auto StreamingDistanceMultiplier = 0x1a0; // float
		constexpr auto FoliageDefaultSettings = 0x1a8; // UFoliageType_InstancedStaticMesh*
		constexpr auto AssetUserData = 0x1b0; // TArray<UAssetUserData*>
		constexpr auto bUseFullPrecisionUVs = 0x1c0; // bool
		constexpr auto SrcLightmapIndex = 0x1c4; // int32_t
		constexpr auto DstLightmapIndex = 0x1c8; // int32_t
		constexpr auto MinLightmapResolution = 0x1cc; // int32_t
		constexpr auto bRemoveDegenerates = 0x1d0; // bool
		constexpr auto GenerateLightmapUVsFlag = 0x1d1; // EHoudiniRuntimeSettingsRecomputeFlag
		constexpr auto RecomputeNormalsFlag = 0x1d2; // EHoudiniRuntimeSettingsRecomputeFlag
		constexpr auto RecomputeTangentsFlag = 0x1d3; // EHoudiniRuntimeSettingsRecomputeFlag
		constexpr auto bUseMikkTSpace = 0x1d4; // bool
		constexpr auto bUseCustomHoudiniLocation = 0x1d5; // bool
		constexpr auto CustomHoudiniLocation = 0x1d8; // FDirectoryPath
	}

	namespace n_UParticleModuleSizeScale { // : UParticleModuleSizeBase
		constexpr auto SizeScale = 0x30; // FRawDistributionVector
		constexpr auto EnableX = 0x80; // char : 1
		constexpr auto EnableY = 0x80; // char : 1
		constexpr auto EnableZ = 0x80; // char : 1
	}

	namespace n_UBTTaskNode { // : UBTNode
		constexpr auto Services = 0x58; // TArray<UBTService*>
		constexpr auto bIgnoreRestartSelf = 0x68; // char : 1
	}

	namespace n_UDmgTypeBP_Environmental_C { // : UDamageType
		constexpr auto bCausedByWorld = 0x28; // char : 1
		constexpr auto bScaleMomentumByMass = 0x28; // char : 1
		constexpr auto bRadialDamageVelChange = 0x28; // char : 1
		constexpr auto DamageImpulse = 0x2c; // float
		constexpr auto DestructibleImpulse = 0x30; // float
		constexpr auto DestructibleDamageSpreadScale = 0x34; // float
		constexpr auto DamageFalloff = 0x38; // float
	}

	namespace n_ACameraRig_Rail { // : AActor
		constexpr auto CurrentPositionOnRail = 0x3d0; // float
		constexpr auto TransformComponent = 0x3d8; // USceneComponent*
		constexpr auto RailSplineComponent = 0x3e0; // USplineComponent*
		constexpr auto RailCameraMount = 0x3e8; // USceneComponent*
		constexpr auto PreviewMesh_Rail = 0x3f0; // USplineMeshComponent*
		constexpr auto PreviewRailMeshSegments = 0x3f8; // TArray<USplineMeshComponent*>
		constexpr auto PreviewRailStaticMesh = 0x408; // UStaticMesh*
		constexpr auto PreviewMesh_Mount = 0x410; // UStaticMeshComponent*
	}

	namespace n_UInterpTrackInstBoolProp { // : UInterpTrackInstProperty
		constexpr auto BoolProperty = 0x40; // UBoolProperty*
		constexpr auto ResetBool = 0x48; // bool
	}

	namespace n_UPoseableMeshComponent { // : USkinnedMeshComponent
		constexpr auto SkeletalMesh = 0x7c8; // USkeletalMesh*
		constexpr auto MasterPoseComponent = 0x7d0; // TWeakObjectPtr<USkinnedMeshComponent>
		constexpr auto bUseBoundsFromMasterPoseComponent = 0x82c; // char : 1
		constexpr auto PhysicsAssetOverride = 0x850; // UPhysicsAsset*
		constexpr auto ForcedLodModel = 0x858; // int32_t
		constexpr auto MinLodModel = 0x85c; // int32_t
		constexpr auto LODInfo = 0x870; // TArray<FSkelMeshComponentLODInfo>
		constexpr auto StreamingDistanceMultiplier = 0x880; // float
		constexpr auto WireframeColor = 0x884; // FColor
		constexpr auto bForceWireframe = 0x888; // char : 1
		constexpr auto bDisplayBones = 0x888; // char : 1
		constexpr auto bDisableMorphTarget = 0x888; // char : 1
		constexpr auto bHideSkin = 0x888; // char : 1
		constexpr auto bPerBoneMotionBlur = 0x8a0; // char : 1
		constexpr auto bComponentUseFixedSkelBounds = 0x8a0; // char : 1
		constexpr auto bConsiderAllBodiesForBounds = 0x8a0; // char : 1
		constexpr auto MeshComponentUpdateFlag = 0x8a4; // EMeshComponentUpdateFlag
		constexpr auto bForceMeshObjectUpdate = 0x8a8; // char : 1
		constexpr auto bCanHighlightSelectedSections = 0x8a8; // char : 1
		constexpr auto bRecentlyRendered = 0x8a8; // char : 1
		constexpr auto CustomSortAlternateIndexMode = 0x8ac; // char
		constexpr auto bCastCapsuleDirectShadow = 0x8b0; // char : 1
		constexpr auto bCastCapsuleIndirectShadow = 0x8b0; // char : 1
		constexpr auto CapsuleIndirectShadowMinVisibility = 0x8b4; // float
		constexpr auto bCPUSkinning = 0x8b8; // char : 1
		constexpr auto CachedLocalBounds = 0x8cc; // FBoxSphereBounds
		constexpr auto bCachedLocalBoundsUpToDate = 0x8e8; // bool
		constexpr auto bEnableUpdateRateOptimizations = 0x8e9; // bool
		constexpr auto bDisplayDebugUpdateRateOptimizations = 0x8ea; // bool
	}

	namespace n_ULeaderboardQueryCallbackProxy { // : UObject
		constexpr auto onSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto onFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_UInterpTrackBoolProp { // : UInterpTrack
		constexpr auto BoolTrack = 0x70; // TArray<FBoolTrackKey>
		constexpr auto PropertyName = 0x80; // FName
	}

	namespace n_ULightMapTexture2D { // : UTexture2D
		constexpr auto GraniteTexture = 0x118; // UGraniteTexture*
	}

	namespace n_UAnimCompress_BitwiseCompressOnly { // : UAnimCompress
		constexpr auto Description = 0x28; // FString
		constexpr auto bNeedsSkeleton = 0x38; // char : 1
		constexpr auto TranslationCompressionFormat = 0x3c; // AnimationCompressionFormat
		constexpr auto RotationCompressionFormat = 0x3d; // AnimationCompressionFormat
		constexpr auto ScaleCompressionFormat = 0x3e; // AnimationCompressionFormat
	}

	namespace n_UInventoryViewBase { // : URootWidget
		constexpr auto inventory = 0x358; // UItemInventory*
		constexpr auto SplitStackSound = 0x360; // USoundBase*
		constexpr auto ColumnCount = 0x380; // int32_t
		constexpr auto RowCount = 0x384; // int32_t
		constexpr auto FilterButtonSpacing = 0x388; // float
	}

	namespace n_UAudioCurveSourceComponent { // : UAudioComponent
		constexpr auto CurveSourceBindingName = 0x5b8; // FName
	}

	namespace n_UParticleModuleCameraOffset { // : UParticleModuleCameraBase
		constexpr auto CameraOffset = 0x30; // FRawDistributionFloat
		constexpr auto bSpawnTimeOnly = 0x68; // char : 1
		constexpr auto UpdateMethod = 0x6c; // EParticleCameraOffsetUpdateMethod
	}

	namespace n_UEditableGameplayTagQueryExpression_AnyExprMatch { // : UEditableGameplayTagQueryExpression
		constexpr auto Expressions = 0x28; // TArray<UEditableGameplayTagQueryExpression*>
	}

	namespace n_UPawnAction_BlueprintBase { // : UPawnAction
		constexpr auto ChildAction = 0x28; // UPawnAction*
		constexpr auto ParentAction = 0x30; // UPawnAction*
		constexpr auto OwnerComponent = 0x38; // UPawnActionsComponent*
		constexpr auto Instigator = 0x40; // UObject*
		constexpr auto BrainComp = 0x48; // UBrainComponent*
		constexpr auto bAllowNewSameClassInstance = 0xb8; // char : 1
		constexpr auto bReplaceActiveSameClassInstance = 0xb8; // char : 1
		constexpr auto bShouldPauseMovement = 0xb8; // char : 1
		constexpr auto bAlwaysNotifyOnFinished = 0xb8; // char : 1
	}

	namespace n_UParticleModuleEventReceiverBase { // : UParticleModuleEventBase
		constexpr auto EventGeneratorType = 0x30; // EParticleEventType
		constexpr auto EventName = 0x38; // FName
	}

	namespace n_UAdminPanelInventoryCheats { // : UWindowRoot
		constexpr auto TransparentTexture = 0x398; // UTexture2D*
		constexpr auto DebugEntryClass = 0x3a0; // UDebugEntryItem*
		constexpr auto m_Items = 0x3a8; // TArray<UDebugEntryItem*>
		constexpr auto m_ScrollBox = 0x3b8; // UScrollBox*
		constexpr auto m_VirtualizationBox = 0x3c0; // USizeBox*
		constexpr auto m_VirtualizationCanvas = 0x3c8; // UCanvasPanel*
		constexpr auto m_WidgetContainer = 0x3d0; // UNavigatableVerticalBox*
		constexpr auto m_ItemGearList = 0x400; // TArray<FDebugEntryItemData>
		constexpr auto m_ItemResourceList = 0x410; // TArray<FDebugEntryItemData>
		constexpr auto m_ItemBuildingList = 0x420; // TArray<FDebugEntryItemData>
		constexpr auto m_ItemOtherList = 0x430; // TArray<FDebugEntryItemData>
		constexpr auto m_ItemFilteredList = 0x440; // TArray<FDebugEntryItemData>
	}

	namespace n_APoiProtection { // : AActor
		constexpr auto MinCheckRate = 0x3d8; // FTimespan
		constexpr auto CheckRadius = 0x3e0; // float
		constexpr auto CheckAngle = 0x3e4; // float
		constexpr auto CheckHeight = 0x3e8; // float
		constexpr auto DegreesBetweenTraces = 0x3ec; // float
		constexpr auto HeightBetweenTraces = 0x3f0; // float
		constexpr auto MaxPercentageThreshold = 0x3f4; // float
		constexpr auto ShowDebugTraces = 0x3f8; // bool
		constexpr auto AiLodComp = 0x400; // UAILODComponent*
		constexpr auto AllBuildingsInArea = 0x408; // TSet<ABuildableBase*>
	}

	namespace n_UPetInventory { // : UItemInventory
		constexpr auto SignalItemsRequestedFromClient = 0x170; // FScriptMulticastDelegate
		constexpr auto SignalInventoryRecivedOnClient = 0x180; // FScriptMulticastDelegate
		constexpr auto SignalItemAdded = 0x190; // FScriptMulticastDelegate
		constexpr auto SignalItemRemoved = 0x1a0; // FScriptMulticastDelegate
		constexpr auto SignalItemIntStatChanged = 0x1b0; // FScriptMulticastDelegate
		constexpr auto SignalItemFloatStatChanged = 0x1c0; // FScriptMulticastDelegate
		constexpr auto DelegateCanBeDropped = 0x1d0; // DelegateProperty
		constexpr auto SignalCannotMoveItem = 0x1e0; // FScriptMulticastDelegate
		constexpr auto ItemList = 0x1f0; // TArray<UGameItem*>
		constexpr auto bReplicatesToEveryone = 0x200; // bool
		constexpr auto inventoryType = 0x201; // EInventoryType
		constexpr auto MaxItemCount = 0x204; // int32_t
		constexpr auto PerishModifier = 0x208; // float
		constexpr auto ItemPerishModifiers = 0x210; // TMap<int32_t, float>
		constexpr auto UseWhiteList = 0x260; // bool
		constexpr auto BlackWhiteList = 0x268; // TArray<int32_t>
		constexpr auto LootContainerClass = 0x2c8; // ALootContainer*
		constexpr auto m_ConfigCategoryName = 0x2d0; // FString
	}

	namespace n_UInventoryItemInfoPanel { // : URootWidget
		constexpr auto m_GameItem = 0x3a0; // UGameItem*
	}

	namespace n_UIngameMenuBase { // : UWindowRoot
		constexpr auto TextureOldBackground = 0x3b0; // UTexture2D*
		constexpr auto TextureSiptahBackground = 0x3d0; // UTexture2D*
	}

	namespace n_UInterpTrackParticleReplay { // : UInterpTrack
		constexpr auto TrackKeys = 0x70; // TArray<FParticleReplayTrackKey>
	}

	namespace n_UMovieSceneSlomoTrack { // : UMovieSceneFloatTrack
		constexpr auto PropertyName = 0xb8; // FName
		constexpr auto PropertyPath = 0xc0; // FString
		constexpr auto Sections = 0xd0; // TArray<UMovieSceneSection*>
	}

	namespace n_UW_SessionInviteEntry_C { // : USessionInviteEntry
		constexpr auto UberGraphFrame = 0x490; // FPointerToUberGraphFrame
		constexpr auto ActionsBox = 0x498; // UHorizontalBox*
		constexpr auto B_AcceptSessionInvite = 0x4a0; // UW_ButtonCustom_C*
		constexpr auto B_BlockFriend = 0x4a8; // UW_ButtonCustom_C*
		constexpr auto B_DeclineSessionInvite = 0x4b0; // UW_ButtonCustom_C*
		constexpr auto B_RevokeSessionInvite = 0x4b8; // UW_ButtonCustom_C*
		constexpr auto Container = 0x4c0; // UBorder*
	}

	namespace n_UDamageType { // : UObject
		constexpr auto bCausedByWorld = 0x28; // char : 1
		constexpr auto bScaleMomentumByMass = 0x28; // char : 1
		constexpr auto bRadialDamageVelChange = 0x28; // char : 1
		constexpr auto DamageImpulse = 0x2c; // float
		constexpr auto DestructibleImpulse = 0x30; // float
		constexpr auto DestructibleDamageSpreadScale = 0x34; // float
		constexpr auto DamageFalloff = 0x38; // float
	}

	namespace n_UBTDecorator_Blackboard { // : UBTDecorator_BlackboardBase
		constexpr auto IntValue = 0x90; // int32_t
		constexpr auto FloatValue = 0x94; // float
		constexpr auto StringValue = 0x98; // FString
		constexpr auto CachedDescription = 0xa8; // FString
		constexpr auto OperationType = 0xb8; // char
		constexpr auto NotifyObserver = 0xb9; // EBTBlackboardRestart
	}

	namespace n_AConanGameSession { // : AGameSession
		constexpr auto m_serverStatReporter = 0x3e8; // UServerStatReporter*
	}

	namespace n_UParticleModuleCollisionGPU { // : UParticleModuleCollisionBase
		constexpr auto Resilience = 0x30; // FRawDistributionFloat
		constexpr auto ResilienceScaleOverLife = 0x68; // FRawDistributionFloat
		constexpr auto Friction = 0xa0; // float
		constexpr auto RandomSpread = 0xa4; // float
		constexpr auto RandomDistribution = 0xa8; // float
		constexpr auto RadiusScale = 0xac; // float
		constexpr auto RadiusBias = 0xb0; // float
		constexpr auto Response = 0xb4; // EParticleCollisionResponse
		constexpr auto CollisionMode = 0xb5; // EParticleCollisionMode
	}

	namespace n_UMaterialExpressionDepthFade { // : UMaterialExpression
		constexpr auto InOpacity = 0x60; // FExpressionInput
		constexpr auto FadeDistance = 0x98; // FExpressionInput
		constexpr auto OpacityDefault = 0xd0; // float
		constexpr auto FadeDistanceDefault = 0xd4; // float
	}

	namespace n_UInterpToMovementComponent { // : UMovementComponent
		constexpr auto Duration = 0x150; // float
		constexpr auto bPauseOnImpact = 0x154; // char : 1
		constexpr auto BehaviourType = 0x158; // EInterpToBehaviourType
		constexpr auto bForceSubStepping = 0x15c; // char : 1
		constexpr auto OnInterpToReverse = 0x160; // FScriptMulticastDelegate
		constexpr auto OnInterpToStop = 0x170; // FScriptMulticastDelegate
		constexpr auto OnWaitBeginDelegate = 0x180; // FScriptMulticastDelegate
		constexpr auto OnWaitEndDelegate = 0x190; // FScriptMulticastDelegate
		constexpr auto OnResetDelegate = 0x1a0; // FScriptMulticastDelegate
		constexpr auto MaxSimulationTimeStep = 0x1b0; // float
		constexpr auto MaxSimulationIterations = 0x1b4; // int32_t
		constexpr auto ControlPoints = 0x1b8; // TArray<FInterpControlPoint>
	}

	namespace n_UPaperTileMapComponent { // : UMeshComponent
		constexpr auto MapWidth = 0x7c8; // int32_t
		constexpr auto MapHeight = 0x7cc; // int32_t
		constexpr auto TileWidth = 0x7d0; // int32_t
		constexpr auto TileHeight = 0x7d4; // int32_t
		constexpr auto DefaultLayerTileSet = 0x7d8; // UPaperTileSet*
		constexpr auto Material = 0x7e0; // UMaterialInterface*
		constexpr auto TileLayers = 0x7e8; // TArray<UPaperTileLayer*>
		constexpr auto TileMapColor = 0x7f8; // FLinearColor
		constexpr auto UseSingleLayerIndex = 0x808; // int32_t
		constexpr auto bUseSingleLayer = 0x80c; // bool
		constexpr auto TileMap = 0x810; // UPaperTileMap*
	}

	namespace n_UReverbEffect { // : UObject
		constexpr auto Density = 0x28; // float
		constexpr auto Diffusion = 0x2c; // float
		constexpr auto Gain = 0x30; // float
		constexpr auto GainHF = 0x34; // float
		constexpr auto DecayTime = 0x38; // float
		constexpr auto DecayHFRatio = 0x3c; // float
		constexpr auto ReflectionsGain = 0x40; // float
		constexpr auto ReflectionsDelay = 0x44; // float
		constexpr auto LateGain = 0x48; // float
		constexpr auto LateDelay = 0x4c; // float
		constexpr auto AirAbsorptionGainHF = 0x50; // float
		constexpr auto RoomRolloffFactor = 0x54; // float
	}

	namespace n_UMaterialExpressionMin { // : UMaterialExpression
		constexpr auto A = 0x60; // FExpressionInput
		constexpr auto B = 0x98; // FExpressionInput
		constexpr auto ConstA = 0xd0; // float
		constexpr auto ConstB = 0xd4; // float
	}

	namespace n_UStackSplitValueDialog { // : UWindowRoot
		constexpr auto GamepadHelpEntryClass = 0x398; // UGamepadHelpEntryBase*
		constexpr auto ValueView = 0x3a0; // UEditableTextBox*
		constexpr auto ValueSlider = 0x3a8; // UFCSlider*
		constexpr auto ButtonContainer = 0x3b0; // UHorizontalBox*
		constexpr auto GamepadIconContainer = 0x3b8; // UHorizontalBox*
		constexpr auto OkButton = 0x3c0; // UFCButton*
		constexpr auto CancelButton = 0x3c8; // UFCButton*
		constexpr auto SubtractTenButton = 0x3d0; // UFCButton*
		constexpr auto AddTenButton = 0x3d8; // UFCButton*
		constexpr auto SubtractHundredButton = 0x3e0; // UFCButton*
		constexpr auto AddHundredButton = 0x3e8; // UFCButton*
		constexpr auto m_SrcInventory = 0x3f8; // UItemInventory*
		constexpr auto m_DstInventory = 0x400; // UItemInventory*
		constexpr auto m_LocalInputComponent = 0x408; // UInputComponent*
	}

	namespace n_UGrassOcclusionComponent { // : UActorComponent
		constexpr auto BuildableQueue = 0x218; // TArray<ABuildableBase*>
	}

	namespace n_UAISenseConfig_Hearing { // : UAISenseConfig
		constexpr auto Implementation = 0x48; // UAISense_Hearing*
		constexpr auto HearingRange = 0x50; // float
		constexpr auto LoSHearingRange = 0x54; // float
		constexpr auto bUseLoSHearing = 0x58; // char : 1
		constexpr auto DetectionByAffiliation = 0x5c; // FAISenseAffiliationFilter
	}

	namespace n_UMaterialExpressionStaticBool { // : UMaterialExpression
		constexpr auto Value = 0x60; // char : 1
	}

	namespace n_ADefaultPawn { // : APawn
		constexpr auto BaseTurnRate = 0x430; // float
		constexpr auto BaseLookUpRate = 0x434; // float
		constexpr auto MovementComponent = 0x438; // UPawnMovementComponent*
		constexpr auto CollisionComponent = 0x440; // USphereComponent*
		constexpr auto MeshComponent = 0x448; // UStaticMeshComponent*
		constexpr auto bAddDefaultMovementBindings = 0x450; // char : 1
	}

	namespace n_UEnvQueryTest_Dot { // : UEnvQueryTest
		constexpr auto LineA = 0x1c0; // FEnvDirection
		constexpr auto LineB = 0x1e0; // FEnvDirection
		constexpr auto TestMode = 0x200; // EEnvTestDot
		constexpr auto bAbsoluteValue = 0x201; // bool
	}

	namespace n_USphereReflectionCaptureComponent { // : UReflectionCaptureComponent
		constexpr auto InfluenceRadius = 0x390; // float
		constexpr auto CaptureDistanceScale = 0x394; // float
		constexpr auto PreviewInfluenceRadius = 0x398; // UDrawSphereComponent*
	}

	namespace n_UVehicleWheel { // : UObject
		constexpr auto CollisionMesh = 0x28; // UStaticMesh*
		constexpr auto bDontCreateShape = 0x30; // bool
		constexpr auto bAutoAdjustCollisionSize = 0x31; // bool
		constexpr auto Offset = 0x34; // FVector
		constexpr auto ShapeRadius = 0x40; // float
		constexpr auto ShapeWidth = 0x44; // float
		constexpr auto Mass = 0x48; // float
		constexpr auto DampingRate = 0x4c; // float
		constexpr auto SteerAngle = 0x50; // float
		constexpr auto bAffectedByHandbrake = 0x54; // bool
		constexpr auto TireType = 0x58; // UTireType*
		constexpr auto TireConfig = 0x60; // UTireConfig*
		constexpr auto LatStiffMaxLoad = 0x68; // float
		constexpr auto LatStiffValue = 0x6c; // float
		constexpr auto LongStiffValue = 0x70; // float
		constexpr auto SuspensionForceOffset = 0x74; // float
		constexpr auto SuspensionMaxRaise = 0x78; // float
		constexpr auto SuspensionMaxDrop = 0x7c; // float
		constexpr auto SuspensionNaturalFrequency = 0x80; // float
		constexpr auto SuspensionDampingRatio = 0x84; // float
		constexpr auto MaxBrakeTorque = 0x88; // float
		constexpr auto MaxHandBrakeTorque = 0x8c; // float
		constexpr auto VehicleSim = 0x90; // UWheeledVehicleMovementComponent*
		constexpr auto WheelIndex = 0x98; // int32_t
		constexpr auto DebugLongSlip = 0x9c; // float
		constexpr auto DebugLatSlip = 0xa0; // float
		constexpr auto DebugNormalizedTireLoad = 0xa4; // float
		constexpr auto DebugWheelTorque = 0xac; // float
		constexpr auto DebugLongForce = 0xb0; // float
		constexpr auto DebugLatForce = 0xb4; // float
		constexpr auto Location = 0xb8; // FVector
		constexpr auto OldLocation = 0xc4; // FVector
		constexpr auto Velocity = 0xd0; // FVector
	}

	namespace n_UW_HUD_FriendsNotificationEntry_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x240; // FPointerToUberGraphFrame
		constexpr auto Anim_Fade = 0x248; // UWidgetAnimation*
		constexpr auto Anim_SlideIn = 0x250; // UWidgetAnimation*
		constexpr auto Message = 0x258; // UTextBlock*
		constexpr auto OtherWidget = 0x260; // UNamedSlot*
		constexpr auto SlideProgress = 0x268; // float
		constexpr auto ID = 0x270; // FText
	}

	namespace n_UAISenseEvent_Damage { // : UAISenseEvent
		constexpr auto Event = 0x28; // FAIDamageEvent
	}

	namespace n_USpinBox { // : UWidget
		constexpr auto Value = 0x118; // float
		constexpr auto ValueDelegate = 0x120; // DelegateProperty
		constexpr auto WidgetStyle = 0x130; // FSpinBoxStyle
		constexpr auto Style = 0x440; // USlateWidgetStyleAsset*
		constexpr auto Delta = 0x448; // float
		constexpr auto SliderExponent = 0x44c; // float
		constexpr auto Font = 0x450; // FSlateFontInfo
		constexpr auto MinDesiredWidth = 0x4b8; // float
		constexpr auto ClearKeyboardFocusOnCommit = 0x4bc; // bool
		constexpr auto SelectAllTextOnCommit = 0x4bd; // bool
		constexpr auto ForegroundColor = 0x4c0; // FSlateColor
		constexpr auto OnValueChanged = 0x4e8; // FScriptMulticastDelegate
		constexpr auto OnValueCommitted = 0x4f8; // FScriptMulticastDelegate
		constexpr auto OnBeginSliderMovement = 0x508; // FScriptMulticastDelegate
		constexpr auto OnEndSliderMovement = 0x518; // FScriptMulticastDelegate
		constexpr auto bOverride_MinValue = 0x528; // char : 1
		constexpr auto bOverride_MaxValue = 0x528; // char : 1
		constexpr auto bOverride_MinSliderValue = 0x528; // char : 1
		constexpr auto bOverride_MaxSliderValue = 0x528; // char : 1
		constexpr auto MinValue = 0x52c; // float
		constexpr auto MaxValue = 0x530; // float
		constexpr auto MinSliderValue = 0x534; // float
		constexpr auto MaxSliderValue = 0x538; // float
	}

	namespace n_UBrushComponent { // : UPrimitiveComponent
		constexpr auto Brush = 0x6c0; // UModel*
		constexpr auto BrushBodySetup = 0x6c8; // UBodySetup*
		constexpr auto PrePivot = 0x6d0; // FVector
	}

	namespace n_UWidgetAnimation { // : UMovieSceneSequence
		constexpr auto OnAnimationStarted = 0x2d8; // FScriptMulticastDelegate
		constexpr auto OnAnimationFinished = 0x2e8; // FScriptMulticastDelegate
		constexpr auto MovieScene = 0x2f8; // UMovieScene*
		constexpr auto AnimationBindings = 0x300; // TArray<FWidgetAnimationBinding>
	}

	namespace n_UGUIModule_Activate_CallProxy { // : UBlueprintAsyncActionBase
		constexpr auto OnActivate = 0x28; // FScriptMulticastDelegate
		constexpr auto OnBeginLoad = 0x38; // FScriptMulticastDelegate
		constexpr auto GUIModule = 0x48; // UGUIModule*
	}

	namespace n_USoundWave { // : USoundBase
		constexpr auto CompressionQuality = 0x90; // int32_t
		constexpr auto bLooping = 0x94; // char : 1
		constexpr auto bStreaming = 0x94; // char : 1
		constexpr auto StreamingPriority = 0x98; // int32_t
		constexpr auto bMature = 0x9c; // char : 1
		constexpr auto bManualWordWrap = 0x9c; // char : 1
		constexpr auto bSingleLine = 0x9c; // char : 1
		constexpr auto bVirtualizeWhenSilent = 0x9c; // char : 1
		constexpr auto SoundGroup = 0xa0; // ESoundGroup
		constexpr auto SpokenText = 0xa8; // FString
		constexpr auto SubtitlePriority = 0xb8; // float
		constexpr auto Volume = 0xbc; // float
		constexpr auto Pitch = 0xc0; // float
		constexpr auto NumChannels = 0xc4; // int32_t
		constexpr auto SampleRate = 0xc8; // int32_t
		constexpr auto RawPCMDataSize = 0xcc; // int32_t
		constexpr auto Subtitles = 0xd0; // TArray<FSubtitleCue>
		constexpr auto LocalizedSubtitles = 0xe0; // TArray<FLocalizedSubtitle>
		constexpr auto Curves = 0xf0; // UCurveTable*
		constexpr auto InternalCurves = 0xf8; // UCurveTable*
	}

	namespace n_UCheatManager { // : UObject
		constexpr auto DebugCameraControllerRef = 0x28; // ADebugCameraController*
		constexpr auto DebugCameraControllerClass = 0x30; // ADebugCameraController*
	}

	namespace n_UDistributionFloatUniformCurve { // : UDistributionFloat
		constexpr auto ConstantCurve = 0x38; // FInterpCurveVector2D
	}

	namespace n_ADecalActor { // : AActor
		constexpr auto Decal = 0x3d0; // UDecalComponent*
	}

	namespace n_UW_Friends_BlockedPlayers_C { // : UBlockedPlayerGame
		constexpr auto BlockedPlayerEntryList = 0x3c8; // UW_NavigatableVerticalBox_C*
	}

	namespace n_UConanWidgetComponent { // : UWidgetComponent
		constexpr auto Space = 0x7c8; // EWidgetSpace
		constexpr auto WidgetClass = 0x7d0; // UUserWidget*
		constexpr auto DrawSize = 0x7d8; // FIntPoint
		constexpr auto bManuallyRedraw = 0x7e0; // bool
		constexpr auto bRedrawRequested = 0x7e1; // bool
		constexpr auto RedrawTime = 0x7e4; // float
		constexpr auto CurrentDrawSize = 0x7f0; // FIntPoint
		constexpr auto bDrawAtDesiredSize = 0x7f8; // bool
		constexpr auto Pivot = 0x7fc; // FVector2D
		constexpr auto bReceiveHardwareInput = 0x804; // bool
		constexpr auto bWindowFocusable = 0x805; // bool
		constexpr auto ownerPlayer = 0x808; // ULocalPlayer*
		constexpr auto BackgroundColor = 0x810; // FLinearColor
		constexpr auto TintColorAndOpacity = 0x820; // FLinearColor
		constexpr auto OpacityFromTexture = 0x830; // float
		constexpr auto BlendMode = 0x834; // EWidgetBlendMode
		constexpr auto bIsTwoSided = 0x835; // bool
		constexpr auto TickWhenOffscreen = 0x836; // bool
		constexpr auto Widget = 0x838; // UUserWidget*
		constexpr auto BodySetup = 0x860; // UBodySetup*
		constexpr auto TranslucentMaterial = 0x868; // UMaterialInterface*
		constexpr auto TranslucentMaterial_OneSided = 0x870; // UMaterialInterface*
		constexpr auto OpaqueMaterial = 0x878; // UMaterialInterface*
		constexpr auto OpaqueMaterial_OneSided = 0x880; // UMaterialInterface*
		constexpr auto MaskedMaterial = 0x888; // UMaterialInterface*
		constexpr auto MaskedMaterial_OneSided = 0x890; // UMaterialInterface*
		constexpr auto RenderTarget = 0x898; // UTextureRenderTarget2D*
		constexpr auto MaterialInstance = 0x8a0; // UMaterialInstanceDynamic*
		constexpr auto bAddedToScreen = 0x8a8; // bool
		constexpr auto bEditTimeUsable = 0x8a9; // bool
		constexpr auto SharedLayerName = 0x8b0; // FName
		constexpr auto LayerZOrder = 0x8b8; // int32_t
		constexpr auto GeometryMode = 0x8bc; // EWidgetGeometryMode
		constexpr auto CylinderArcAngle = 0x8c0; // float
	}

	namespace n_UMaterialExpressionGraniteTextureBase { // : UMaterialExpression
		constexpr auto Texture = 0x60; // UGraniteTexture*
		constexpr auto PreviewLayer = 0x68; // int32_t
	}

	namespace n_UFollowersBoardBase { // : URootWidget
		constexpr auto m_FollowersList = 0x318; // UFollowersListBase*
		constexpr auto m_FollowersLimit = 0x320; // UFollowerLimit*
		constexpr auto m_UpdatedDelegate = 0x328; // DelegateProperty
	}

	namespace n_ULoadCharacterCallProxy { // : UBlueprintAsyncActionBase
		constexpr auto onSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto onFailure = 0x38; // FScriptMulticastDelegate
		constexpr auto UID = 0x58; // UUniqueID*
		constexpr auto IsNPC = 0x88; // bool
	}

	namespace n_UParticleModuleKillBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x28; // char : 1
		constexpr auto LODDuplicate = 0x28; // char : 1
		constexpr auto bSupportsRandomSeed = 0x28; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x28; // char : 1
		constexpr auto LODValidity = 0x2c; // char
	}

	namespace n_UMaterialExpressionLandscapeLayerBlend { // : UMaterialExpression
		constexpr auto Layers = 0x60; // TArray<FLayerBlendInput>
		constexpr auto ExpressionGUID = 0x70; // FGuid
	}

	namespace n_UMaterialExpressionGraniteTextureObjectParameter { // : UMaterialExpressionGraniteTextureParameter
		constexpr auto ParameterName = 0x190; // FName
		constexpr auto ExpressionGUID = 0x198; // FGuid
		constexpr auto Group = 0x1a8; // FName
	}

	namespace n_UMaterialExpressionArctangentFast { // : UMaterialExpression
		constexpr auto Input = 0x60; // FExpressionInput
	}

	namespace n_UBackgroundBlur { // : UContentWidget
		constexpr auto Padding = 0x130; // FMargin
		constexpr auto HorizontalAlignment = 0x140; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x141; // EVerticalAlignment
		constexpr auto bApplyAlphaToBlur = 0x142; // bool
		constexpr auto BlurStrength = 0x144; // float
		constexpr auto bOverrideAutoRadiusCalculation = 0x148; // bool
		constexpr auto BlurRadius = 0x14c; // int32_t
		constexpr auto LowQualityFallbackBrush = 0x150; // FSlateBrush
	}

	namespace n_UMovieSceneSpawnTrack { // : UMovieSceneTrack
		constexpr auto Sections = 0xb8; // TArray<UMovieSceneSection*>
		constexpr auto ObjectGuid = 0xc8; // FGuid
	}

	namespace n_UW_FCButton_C { // : UFCButton
		constexpr auto NameTag = 0xc20; // FName
	}

	namespace n_UFindSessionsInExternalDirectoryCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto onSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto onFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_AAbstractNavData { // : ANavigationData
		constexpr auto RenderingComp = 0x3d0; // UPrimitiveComponent*
		constexpr auto NavDataConfig = 0x3d8; // FNavDataConfig
		constexpr auto bEnableDrawing = 0x428; // char : 1
		constexpr auto bForceRebuildOnLoad = 0x428; // char : 1
		constexpr auto bCanBeMainNavData = 0x428; // char : 1
		constexpr auto bCanSpawnOnRebuild = 0x428; // char : 1
		constexpr auto bRebuildAtRuntime = 0x428; // char : 1
		constexpr auto RuntimeGeneration = 0x42c; // ERuntimeGenerationType
		constexpr auto ObservedPathsTickInterval = 0x430; // float
		constexpr auto DataVersion = 0x434; // uint32_t
		constexpr auto SupportedAreas = 0x508; // TArray<FSupportedAreaData>
	}

	namespace n_AMatineeActor { // : AActor
		constexpr auto MatineeData = 0x3d0; // UInterpData*
		constexpr auto MatineeControllerName = 0x3d8; // FName
		constexpr auto PlayRate = 0x3e0; // float
		constexpr auto bPlayOnLevelLoad = 0x3e4; // char : 1
		constexpr auto bForceStartPos = 0x3e4; // char : 1
		constexpr auto ForceStartPosition = 0x3e8; // float
		constexpr auto bLooping = 0x3ec; // char : 1
		constexpr auto bRewindOnPlay = 0x3ec; // char : 1
		constexpr auto bNoResetOnRewind = 0x3ec; // char : 1
		constexpr auto bRewindIfAlreadyPlaying = 0x3ec; // char : 1
		constexpr auto bDisableRadioFilter = 0x3ec; // char : 1
		constexpr auto bClientSideOnly = 0x3ec; // char : 1
		constexpr auto bSkipUpdateIfNotVisible = 0x3ec; // char : 1
		constexpr auto bIsSkippable = 0x3ec; // char : 1
		constexpr auto PreferredSplitScreenNum = 0x3f0; // int32_t
		constexpr auto bDisableMovementInput = 0x3f4; // char : 1
		constexpr auto bDisableLookAtInput = 0x3f4; // char : 1
		constexpr auto bHidePlayer = 0x3f4; // char : 1
		constexpr auto bHideHud = 0x3f4; // char : 1
		constexpr auto GroupActorInfos = 0x3f8; // TArray<FInterpGroupActorInfo>
		constexpr auto bShouldShowGore = 0x408; // char : 1
		constexpr auto GroupInst = 0x410; // TArray<UInterpGroupInst*>
		constexpr auto CameraCuts = 0x420; // TArray<FCameraCutInfo>
		constexpr auto bIsPlaying = 0x430; // char : 1
		constexpr auto bReversePlayback = 0x430; // char : 1
		constexpr auto bPaused = 0x430; // char : 1
		constexpr auto bPendingStop = 0x430; // char : 1
		constexpr auto InterpPosition = 0x434; // float
		constexpr auto ReplicationForceIsPlaying = 0x43c; // char
		constexpr auto OnPlay = 0x440; // FScriptMulticastDelegate
		constexpr auto OnStop = 0x450; // FScriptMulticastDelegate
		constexpr auto OnPause = 0x460; // FScriptMulticastDelegate
	}

	namespace n_UParticleModuleCollisionBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x28; // char : 1
		constexpr auto LODDuplicate = 0x28; // char : 1
		constexpr auto bSupportsRandomSeed = 0x28; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x28; // char : 1
		constexpr auto LODValidity = 0x2c; // char
	}

	namespace n_UMaterialExpressionTextureSample { // : UMaterialExpressionTextureBase
		constexpr auto Coordinates = 0x70; // FExpressionInput
		constexpr auto TextureObject = 0xa8; // FExpressionInput
		constexpr auto MipValue = 0xe0; // FExpressionInput
		constexpr auto CoordinatesDX = 0x118; // FExpressionInput
		constexpr auto CoordinatesDY = 0x150; // FExpressionInput
		constexpr auto MipValueMode = 0x188; // ETextureMipValueMode
		constexpr auto SamplerSource = 0x189; // ESamplerSourceMode
		constexpr auto ConstCoordinate = 0x18c; // uint32_t
		constexpr auto ConstMipValue = 0x190; // int32_t
	}

	namespace n_UTextureLightProfile { // : UTexture2D
		constexpr auto Brightness = 0x110; // float
		constexpr auto TextureMultiplier = 0x114; // float
	}

	namespace n_UConanIngameLoadingScreen { // : UWindowRoot
		constexpr auto m_HotkeyIconClass = 0x398; // UUserWidget*
		constexpr auto m_HintSlateFontInfo = 0x3a0; // FSlateFontInfo
		constexpr auto m_HintSlateColor = 0x408; // FSlateColor
		constexpr auto m_HintShadowColor = 0x430; // FLinearColor
		constexpr auto m_HintShadowffset = 0x440; // FVector2D
		constexpr auto m_HintHotKeyTextSlateFontInfo = 0x448; // FSlateFontInfo
		constexpr auto m_HintHotKeyTextSlateColor = 0x4b0; // FSlateColor
		constexpr auto m_HintIconSize = 0x4d8; // float
	}

	namespace n_UShowVirtualKeyboardCallProxy { // : UBlueprintAsyncActionBase
		constexpr auto OnConfirm = 0x28; // FScriptMulticastDelegate
		constexpr auto OnStringVertifiedFailed = 0x38; // FScriptMulticastDelegate
		constexpr auto OnCanceled = 0x48; // FScriptMulticastDelegate
	}

	namespace n_UParticleModuleSizeMultiplyLife { // : UParticleModuleSizeBase
		constexpr auto LifeMultiplier = 0x30; // FRawDistributionVector
		constexpr auto MultiplyX = 0x80; // char : 1
		constexpr auto MultiplyY = 0x80; // char : 1
		constexpr auto MultiplyZ = 0x80; // char : 1
	}

	namespace n_UActorSequencePlayer { // : UMovieSceneSequencePlayer
		constexpr auto OnPlay = 0x380; // FScriptMulticastDelegate
		constexpr auto OnStop = 0x390; // FScriptMulticastDelegate
		constexpr auto OnPause = 0x3a0; // FScriptMulticastDelegate
		constexpr auto bIsPlaying = 0x3b0; // char : 1
		constexpr auto bReversePlayback = 0x3b0; // char : 1
		constexpr auto bPendingFirstUpdate = 0x3b0; // char : 1
		constexpr auto Sequence = 0x3b8; // UMovieSceneSequence*
		constexpr auto TimeCursorPosition = 0x3c0; // float
		constexpr auto StartTime = 0x3c4; // float
		constexpr auto EndTime = 0x3c8; // float
		constexpr auto CurrentNumLoops = 0x3cc; // int32_t
		constexpr auto PlaybackSettings = 0x3e0; // FMovieSceneSequencePlaybackSettings
	}

	namespace n_USceneCaptureComponent2D { // : USceneCaptureComponent
		constexpr auto ProjectionType = 0x3e0; // ECameraProjectionMode
		constexpr auto FOVAngle = 0x3e4; // float
		constexpr auto OrthoWidth = 0x3e8; // float
		constexpr auto TextureTarget = 0x3f0; // UTextureRenderTarget2D*
		constexpr auto CaptureSource = 0x3f8; // ESceneCaptureSource
		constexpr auto CompositeMode = 0x3f9; // ESceneCaptureCompositeMode
		constexpr auto PostProcessSettings = 0x400; // FPostProcessSettings
		constexpr auto PostProcessBlendWeight = 0x8d0; // float
		constexpr auto bUseCustomProjectionMatrix = 0x8d4; // bool
		constexpr auto CustomProjectionMatrix = 0x8e0; // FMatrix
		constexpr auto bEnableClipPlane = 0x920; // bool
		constexpr auto ClipPlaneBase = 0x924; // FVector
		constexpr auto ClipPlaneNormal = 0x930; // FVector
	}

	namespace n_UAISenseConfig { // : UObject
		constexpr auto DebugColor = 0x28; // FColor
		constexpr auto MaxAge = 0x2c; // float
		constexpr auto bStartsEnabled = 0x30; // char : 1
	}

	namespace n_UPlayFabDataAPI { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnPlayFabResponse = 0x28; // FScriptMulticastDelegate
		constexpr auto CallAuthenticationContext = 0xf0; // UPlayFabAuthenticationContext*
		constexpr auto RequestJsonObj = 0xf8; // UPlayFabJsonObject*
		constexpr auto ResponseJsonObj = 0x100; // UPlayFabJsonObject*
	}

	namespace n_AVolume { // : ABrush
		constexpr auto BrushType = 0x3d0; // EBrushType
		constexpr auto BrushColor = 0x3d4; // FColor
		constexpr auto PolyFlags = 0x3d8; // int32_t
		constexpr auto bColored = 0x3dc; // char : 1
		constexpr auto bSolidWhenSelected = 0x3dc; // char : 1
		constexpr auto bPlaceableFromClassBrowser = 0x3dc; // char : 1
		constexpr auto bNotForClientOrServer = 0x3dc; // char : 1
		constexpr auto Brush = 0x3e0; // UModel*
		constexpr auto BrushComponent = 0x3e8; // UBrushComponent*
		constexpr auto bInManipulation = 0x3f0; // char : 1
		constexpr auto SavedSelections = 0x3f8; // TArray<FGeomSelection>
	}

	namespace n_UParticleModuleSubUV { // : UParticleModuleSubUVBase
		constexpr auto Animation = 0x30; // USubUVAnimation*
		constexpr auto SubImageIndex = 0x38; // FRawDistributionFloat
		constexpr auto bUseRealTime = 0x70; // char : 1
	}

	namespace n_UTexture2D { // : UTexture
		constexpr auto RequestedMips = 0xc8; // int32_t
		constexpr auto ResidentMips = 0xcc; // int32_t
		constexpr auto StreamingIndex = 0xd0; // int32_t
		constexpr auto LevelIndex = 0xd4; // int32_t
		constexpr auto FirstResourceMemMip = 0xd8; // int32_t
		constexpr auto ImportedSize = 0xdc; // FIntPoint
		constexpr auto ForceMipLevelsToBeResidentTimestamp = 0xe8; // double
		constexpr auto bTemporarilyDisableStreaming = 0xf0; // char : 1
		constexpr auto bIsStreamable = 0xf0; // char : 1
		constexpr auto bHasStreamingUpdatePending = 0xf0; // char : 1
		constexpr auto bHasCancelationPending = 0xf0; // char : 1
		constexpr auto bForceMiplevelsToBeResident = 0xf0; // char : 1
		constexpr auto bIgnoreStreamingMipBias = 0xf0; // char : 1
		constexpr auto bGlobalForceMipLevelsToBeResident = 0xf0; // char : 1
		constexpr auto AddressX = 0xf4; // TextureAddress
		constexpr auto AddressY = 0xf5; // TextureAddress
	}

	namespace n_APlayerState { // : AInfo
		constexpr auto score = 0x3d0; // float
		constexpr auto Ping = 0x3d4; // char
		constexpr auto playerName = 0x3d8; // FString
		constexpr auto PlayerId = 0x3f8; // int32_t
		constexpr auto bIsSpectator = 0x3fc; // char : 1
		constexpr auto bOnlySpectator = 0x3fc; // char : 1
		constexpr auto bIsABot = 0x3fc; // char : 1
		constexpr auto bIsInactive = 0x3fc; // char : 1
		constexpr auto bFromPreviousLevel = 0x3fc; // char : 1
		constexpr auto StartTime = 0x400; // int32_t
		constexpr auto EngineMessageClass = 0x408; // ULocalMessage*
		constexpr auto SavedNetworkAddress = 0x418; // FString
		constexpr auto UniqueID = 0x428; // FUniqueNetIdRepl
	}

	namespace n_UCameraShake { // : UObject
		constexpr auto bSingleInstance = 0x28; // char : 1
		constexpr auto OscillationDuration = 0x2c; // float
		constexpr auto OscillationBlendInTime = 0x30; // float
		constexpr auto OscillationBlendOutTime = 0x34; // float
		constexpr auto RotOscillation = 0x38; // FROscillator
		constexpr auto LocOscillation = 0x5c; // FVOscillator
		constexpr auto FOVOscillation = 0x80; // FFOscillator
		constexpr auto AnimPlayRate = 0x8c; // float
		constexpr auto AnimScale = 0x90; // float
		constexpr auto AnimBlendInTime = 0x94; // float
		constexpr auto AnimBlendOutTime = 0x98; // float
		constexpr auto RandomAnimSegmentDuration = 0x9c; // float
		constexpr auto anim = 0xa0; // UCameraAnim*
		constexpr auto bRandomAnimSegment = 0xa8; // char : 1
		constexpr auto CameraOwner = 0xc0; // APlayerCameraManager*
		constexpr auto ShakeScale = 0x148; // float
		constexpr auto OscillatorTimeRemaining = 0x14c; // float
		constexpr auto AnimInst = 0x150; // UCameraAnimInst*
	}

	namespace n_AServerBlacklist { // : AInfo
		constexpr auto Blacklist = 0x3d0; // TArray<FBlacklistedUser>
	}

	namespace n_UW_PurgeFIFOMessageView_C { // : UFIFOMessageView
		constexpr auto UberGraphFrame = 0x358; // FPointerToUberGraphFrame
		constexpr auto FadeInOut = 0x360; // UWidgetAnimation*
		constexpr auto Message = 0x368; // UTextBlock*
		constexpr auto NewVar_1 = 0x370; // USoundConcurrency*
	}

	namespace n_UPhysicsSettings { // : UDeveloperSettings
		constexpr auto DefaultGravityZ = 0x38; // float
		constexpr auto DefaultTerminalVelocity = 0x3c; // float
		constexpr auto DefaultFluidFriction = 0x40; // float
		constexpr auto SimulateScratchMemorySize = 0x44; // int32_t
		constexpr auto RagdollAggregateThreshold = 0x48; // int32_t
		constexpr auto TriangleMeshTriangleMinAreaThreshold = 0x4c; // float
		constexpr auto bEnableAsyncScene = 0x50; // bool
		constexpr auto bEnableShapeSharing = 0x51; // bool
		constexpr auto bEnablePCM = 0x52; // bool
		constexpr auto bForceMultithread = 0x53; // bool
		constexpr auto bWarnMissingLocks = 0x54; // bool
		constexpr auto bEnable2DPhysics = 0x55; // bool
		constexpr auto LockedAxis = 0x56; // ESettingsLockedAxis
		constexpr auto DefaultDegreesOfFreedom = 0x57; // ESettingsDOF
		constexpr auto BounceThresholdVelocity = 0x58; // float
		constexpr auto FrictionCombineMode = 0x5c; // EFrictionCombineMode
		constexpr auto RestitutionCombineMode = 0x5d; // EFrictionCombineMode
		constexpr auto MaxAngularVelocity = 0x60; // float
		constexpr auto MaxDepenetrationVelocity = 0x64; // float
		constexpr auto ContactOffsetMultiplier = 0x68; // float
		constexpr auto MinContactOffset = 0x6c; // float
		constexpr auto MaxContactOffset = 0x70; // float
		constexpr auto bSimulateSkeletalMeshOnDedicatedServer = 0x74; // bool
		constexpr auto DefaultShapeComplexity = 0x75; // ECollisionTraceFlag
		constexpr auto bDefaultHasComplexCollision = 0x76; // bool
		constexpr auto bSuppressFaceRemapTable = 0x77; // bool
		constexpr auto bSupportUVFromHitResults = 0x78; // bool
		constexpr auto bDisableActiveActors = 0x79; // bool
		constexpr auto bDisableCCD = 0x7a; // bool
		constexpr auto MaxPhysicsDeltaTime = 0x7c; // float
		constexpr auto bSubstepping = 0x80; // bool
		constexpr auto bSubsteppingAsync = 0x81; // bool
		constexpr auto MaxSubstepDeltaTime = 0x84; // float
		constexpr auto MaxSubsteps = 0x88; // int32_t
		constexpr auto SyncSceneSmoothingFactor = 0x8c; // float
		constexpr auto AsyncSceneSmoothingFactor = 0x90; // float
		constexpr auto InitialAverageFrameRate = 0x94; // float
		constexpr auto PhysicalSurfaces = 0x98; // TArray<FPhysicalSurfaceName>
	}

	namespace n_ACameraRig_Crane { // : AActor
		constexpr auto CranePitch = 0x3d0; // float
		constexpr auto CraneYaw = 0x3d4; // float
		constexpr auto CraneArmLength = 0x3d8; // float
		constexpr auto bLockMountPitch = 0x3dc; // bool
		constexpr auto bLockMountYaw = 0x3dd; // bool
		constexpr auto TransformComponent = 0x3e0; // USceneComponent*
		constexpr auto CraneYawControl = 0x3e8; // USceneComponent*
		constexpr auto CranePitchControl = 0x3f0; // USceneComponent*
		constexpr auto CraneCameraMount = 0x3f8; // USceneComponent*
		constexpr auto PreviewMesh_CraneArm = 0x400; // UStaticMeshComponent*
		constexpr auto PreviewMesh_CraneBase = 0x408; // UStaticMeshComponent*
		constexpr auto PreviewMesh_CraneMount = 0x410; // UStaticMeshComponent*
		constexpr auto PreviewMesh_CraneCounterWeight = 0x418; // UStaticMeshComponent*
	}

	namespace n_UPostProcessComponent { // : USceneComponent
		constexpr auto Settings = 0x310; // FPostProcessSettings
		constexpr auto Priority = 0x7e0; // float
		constexpr auto BlendRadius = 0x7e4; // float
		constexpr auto BlendWeight = 0x7e8; // float
		constexpr auto bEnabled = 0x7ec; // char : 1
		constexpr auto bUnbound = 0x7ec; // char : 1
	}

	namespace n_UW_BlitzButton_C { // : UFCBloodBlitzButton
		constexpr auto UberGraphFrame = 0xcd0; // FPointerToUberGraphFrame
		constexpr auto Anim_Blood = 0xcd8; // UWidgetAnimation*
		constexpr auto Anim_Fade = 0xce0; // UWidgetAnimation*
		constexpr auto ASSIGNED_IN_CODE__Icon = 0xce8; // UImage*
		constexpr auto Button = 0xcf0; // UImage*
		constexpr auto CommunityLabel = 0xcf8; // UTextBlock*
		constexpr auto Description = 0xd00; // FText
		constexpr auto SignalDescription = 0xd18; // FScriptMulticastDelegate
	}

	namespace n_UInputComponent { // : UActorComponent
		constexpr auto PrimaryComponentTick = 0x30; // FActorComponentTickFunction
		constexpr auto ComponentTags = 0x88; // TArray<FName>
		constexpr auto AssetUserData = 0x98; // TArray<UAssetUserData*>
		constexpr auto bReplicates = 0xa8; // char : 1
		constexpr auto bIsClientOnly = 0xa8; // char : 1
		constexpr auto bNetAddressable = 0xa8; // char : 1
		constexpr auto bAllowAnyoneToDestroyMe = 0xa8; // char : 1
		constexpr auto bCreatedByConstructionScript = 0xa8; // char : 1
		constexpr auto bInstanceComponent = 0xa8; // char : 1
		constexpr auto bAutoActivate = 0xa8; // char : 1
		constexpr auto bIsActive = 0xa8; // char : 1
		constexpr auto bEditableWhenInherited = 0xa8; // char : 1
		constexpr auto bCanEverAffectNavigation = 0xa8; // char : 1
		constexpr auto bIsEditorOnly = 0xa8; // char : 1
		constexpr auto CreationMethod = 0xb1; // EComponentCreationMethod
		constexpr auto UCSModifiedProperties = 0xc0; // TArray<FSimpleMemberReference>
		constexpr auto OnComponentActivated = 0xd0; // FScriptMulticastDelegate
		constexpr auto OnComponentDeactivated = 0xe0; // FScriptMulticastDelegate
	}

	namespace n_UBrushBuilder { // : UObject
		constexpr auto BitmapFilename = 0x28; // FString
		constexpr auto Tooltip = 0x38; // FString
		constexpr auto NotifyBadParams = 0x48; // char : 1
		constexpr auto Vertices = 0x50; // TArray<FVector>
		constexpr auto Polys = 0x60; // TArray<FBuilderPoly>
		constexpr auto Layer = 0x70; // FName
		constexpr auto MergeCoplanars = 0x78; // char : 1
	}

	namespace n_UBTTask_SetTagCooldown { // : UBTTaskNode
		constexpr auto CooldownTag = 0x70; // FGameplayTag
		constexpr auto bAddToExistingDuration = 0x78; // bool
		constexpr auto CooldownDuration = 0x7c; // float
	}

	namespace n_UInterpTrackSound { // : UInterpTrackVectorBase
		constexpr auto Sounds = 0x90; // TArray<FSoundTrackKey>
		constexpr auto bPlayOnReverse = 0xa0; // char : 1
		constexpr auto bContinueSoundOnMatineeEnd = 0xa0; // char : 1
		constexpr auto bSuppressSubtitles = 0xa0; // char : 1
		constexpr auto bTreatAsDialogue = 0xa0; // char : 1
		constexpr auto bAttach = 0xa0; // char : 1
	}

	namespace n_UEnvQueryTest_Distance { // : UEnvQueryTest
		constexpr auto TestMode = 0x1c0; // EEnvTestDistance
		constexpr auto DistanceTo = 0x1c8; // UEnvQueryContext*
	}

	namespace n_AQosBeaconClient { // : AOnlineBeaconClient
		constexpr auto BeaconOwner = 0x3f0; // AOnlineBeaconHostObject*
		constexpr auto BeaconConnection = 0x3f8; // UNetConnection*
		constexpr auto ConnectionState = 0x400; // EBeaconConnectionState
	}

	namespace n_UMaterialExpressionPixelNormalWS { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto Desc = 0x38; // FString
		constexpr auto BorderColor = 0x48; // FColor
		constexpr auto bRealtimePreview = 0x4c; // char : 1
		constexpr auto bNeedToUpdatePreview = 0x4c; // char : 1
		constexpr auto bIsParameterExpression = 0x4c; // char : 1
		constexpr auto bCommentBubbleVisible = 0x4c; // char : 1
		constexpr auto bShowOutputNameOnPin = 0x4c; // char : 1
		constexpr auto bHidePreviewWindow = 0x4c; // char : 1
		constexpr auto bCollapsed = 0x4c; // char : 1
		constexpr auto bShaderInputData = 0x4c; // char : 1
		constexpr auto bShowInputs = 0x4c; // char : 1
		constexpr auto bShowOutputs = 0x4c; // char : 1
		constexpr auto Outputs = 0x50; // TArray<FExpressionOutput>
	}

	namespace n_UParticleModuleEventReceiverSpawn { // : UParticleModuleEventReceiverBase
		constexpr auto SpawnCount = 0x40; // FRawDistributionFloat
		constexpr auto bUseParticleTime = 0x78; // char : 1
		constexpr auto bUsePSysLocation = 0x78; // char : 1
		constexpr auto bInheritVelocity = 0x78; // char : 1
		constexpr auto InheritVelocityScale = 0x80; // FRawDistributionVector
		constexpr auto PhysicalMaterials = 0xd0; // TArray<UPhysicalMaterial*>
		constexpr auto bBanPhysicalMaterials = 0xe0; // char : 1
	}

	namespace n_UCensoredContentHelper { // : UObject
		constexpr auto DlcProductId = 0x28; // FString
	}

	namespace n_UMaterialExpressionCameraPositionWS { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto Desc = 0x38; // FString
		constexpr auto BorderColor = 0x48; // FColor
		constexpr auto bRealtimePreview = 0x4c; // char : 1
		constexpr auto bNeedToUpdatePreview = 0x4c; // char : 1
		constexpr auto bIsParameterExpression = 0x4c; // char : 1
		constexpr auto bCommentBubbleVisible = 0x4c; // char : 1
		constexpr auto bShowOutputNameOnPin = 0x4c; // char : 1
		constexpr auto bHidePreviewWindow = 0x4c; // char : 1
		constexpr auto bCollapsed = 0x4c; // char : 1
		constexpr auto bShaderInputData = 0x4c; // char : 1
		constexpr auto bShowInputs = 0x4c; // char : 1
		constexpr auto bShowOutputs = 0x4c; // char : 1
		constexpr auto Outputs = 0x50; // TArray<FExpressionOutput>
	}

	namespace n_UHarvestFoliage { // : UInteractableFoliageBase
		constexpr auto HarvestSystem = 0xb80; // AHarvestFoliageSystem*
	}

	namespace n_UPlatformMediaSource { // : UMediaSource
		constexpr auto MediaSource = 0x30; // UMediaSource*
	}

	namespace n_UServerStatusReport { // : UServerReport
		constexpr auto PlayerCount = 0x50; // int32_t
		constexpr auto FrameRate = 0x58; // FString
		constexpr auto Uptime = 0x68; // uint32_t
		constexpr auto MemoryUsage = 0x70; // FString
		constexpr auto CpuTime = 0x80; // FString
		constexpr auto NPCAILODs = 0x90; // FString
		constexpr auto BuildingAILODs = 0xa0; // FString
		constexpr auto PlaceablesAILODs = 0xb0; // FString
	}

	namespace n_URendererSettings { // : UDeveloperSettings
		constexpr auto bMobileHDR = 0x38; // char : 1
		constexpr auto bMobileDisableVertexFog = 0x38; // char : 1
		constexpr auto MaxMobileCascades = 0x3c; // int32_t
		constexpr auto MobileMSAASampleCount = 0x40; // EMobileMSAASampleCount
		constexpr auto bDiscardUnusedQualityLevels = 0x44; // char : 1
		constexpr auto bOcclusionCulling = 0x44; // char : 1
		constexpr auto MinScreenRadiusForLights = 0x48; // float
		constexpr auto MinScreenRadiusForEarlyZPass = 0x4c; // float
		constexpr auto MinScreenRadiusForCSMdepth = 0x50; // float
		constexpr auto bPrecomputedVisibilityWarning = 0x54; // char : 1
		constexpr auto bTextureStreaming = 0x54; // char : 1
		constexpr auto bUseDXT5NormalMaps = 0x54; // char : 1
		constexpr auto bClearCoatEnableSecondNormal = 0x54; // char : 1
		constexpr auto ReflectionCaptureResolution = 0x58; // int32_t
		constexpr auto ReflectionEnvironmentLightmapMixBasedOnRoughness = 0x5c; // char : 1
		constexpr auto bForwardShading = 0x5c; // char : 1
		constexpr auto bVertexFoggingForOpaque = 0x5c; // char : 1
		constexpr auto bAllowStaticLighting = 0x5c; // char : 1
		constexpr auto bUseNormalMapsForStaticLighting = 0x5c; // char : 1
		constexpr auto bGenerateMeshDistanceFields = 0x5c; // char : 1
		constexpr auto bGenerateLandscapeGIData = 0x5c; // char : 1
		constexpr auto TessellationAdaptivePixelsPerTriangle = 0x60; // float
		constexpr auto bSeparateTranslucency = 0x64; // char : 1
		constexpr auto TranslucentSortPolicy = 0x68; // ETranslucentSortPolicy
		constexpr auto TranslucentSortAxis = 0x6c; // FVector
		constexpr auto CustomDepthStencil = 0x78; // ECustomDepthStencil
		constexpr auto bCustomDepthTaaJitter = 0x7c; // char : 1
		constexpr auto bDefaultFeatureBloom = 0x7c; // char : 1
		constexpr auto bDefaultFeatureAmbientOcclusion = 0x7c; // char : 1
		constexpr auto bDefaultFeatureAmbientOcclusionStaticFraction = 0x7c; // char : 1
		constexpr auto bDefaultFeatureAutoExposure = 0x7c; // char : 1
		constexpr auto DefaultFeatureAutoExposure = 0x80; // EAutoExposureMethodUI
		constexpr auto bDefaultFeatureMotionBlur = 0x84; // char : 1
		constexpr auto bDefaultFeatureLensFlare = 0x84; // char : 1
		constexpr auto DefaultFeatureAntiAliasing = 0x88; // EAntiAliasingMethod
		constexpr auto bStencilForLODDither = 0x8c; // char : 1
		constexpr auto EarlyZPass = 0x90; // EEarlyZPass
		constexpr auto bEarlyZPassMovable = 0x94; // char : 1
		constexpr auto bEarlyZPassOnlyMaterialMasking = 0x94; // char : 1
		constexpr auto bDBuffer = 0x94; // char : 1
		constexpr auto ClearSceneMethod = 0x98; // EClearSceneOptions
		constexpr auto bBasePassOutputsVelocity = 0x9c; // char : 1
		constexpr auto bSelectiveBasePassOutputs = 0x9c; // char : 1
		constexpr auto bDefaultParticleCutouts = 0x9c; // char : 1
		constexpr auto bGlobalClipPlane = 0x9c; // char : 1
		constexpr auto GBufferFormat = 0xa0; // EGBufferFormat
		constexpr auto bUseGPUMorphTargets = 0xa4; // char : 1
		constexpr auto bInstancedStereo = 0xa4; // char : 1
		constexpr auto bMultiView = 0xa4; // char : 1
		constexpr auto bMobileMultiView = 0xa4; // char : 1
		constexpr auto bMonoscopicFarField = 0xa4; // char : 1
		constexpr auto WireframeCullThreshold = 0xa8; // float
		constexpr auto bSupportStationarySkylight = 0xac; // char : 1
		constexpr auto bSupportLowQualityLightmaps = 0xac; // char : 1
		constexpr auto bSupportPointLightWholeSceneShadows = 0xac; // char : 1
		constexpr auto bSupportAtmosphericFog = 0xac; // char : 1
		constexpr auto bSupportSkinCacheShaders = 0xac; // char : 1
		constexpr auto bMobileEnableStaticAndCSMShadowReceivers = 0xac; // char : 1
		constexpr auto bMobileAllowDistanceFieldShadows = 0xac; // char : 1
		constexpr auto bMobileAllowMovableDirectionalLights = 0xac; // char : 1
		constexpr auto MobileNumDynamicPointLights = 0xb0; // uint32_t
		constexpr auto bMobileDynamicPointLightsUseStaticBranch = 0xb4; // char : 1
	}

	namespace n_UMaterialExpressionViewSize { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto Desc = 0x38; // FString
		constexpr auto BorderColor = 0x48; // FColor
		constexpr auto bRealtimePreview = 0x4c; // char : 1
		constexpr auto bNeedToUpdatePreview = 0x4c; // char : 1
		constexpr auto bIsParameterExpression = 0x4c; // char : 1
		constexpr auto bCommentBubbleVisible = 0x4c; // char : 1
		constexpr auto bShowOutputNameOnPin = 0x4c; // char : 1
		constexpr auto bHidePreviewWindow = 0x4c; // char : 1
		constexpr auto bCollapsed = 0x4c; // char : 1
		constexpr auto bShaderInputData = 0x4c; // char : 1
		constexpr auto bShowInputs = 0x4c; // char : 1
		constexpr auto bShowOutputs = 0x4c; // char : 1
		constexpr auto Outputs = 0x50; // TArray<FExpressionOutput>
	}

	namespace n_UCharacterRecustomizationBase { // : UWindowRoot
		constexpr auto CanRandomize = 0x398; // bool
	}

	namespace n_UPlayerlistBase { // : UWindowRoot
		constexpr auto PlayerListEntryClass = 0x398; // UPlayerListEntry*
		constexpr auto m_BannedUsers = 0x3c0; // TArray<FBlacklistedUser>
		constexpr auto m_WhiteListedUsers = 0x3d0; // TArray<FBlacklistedUser>
	}

	namespace n_UBTTask_MakeNoise { // : UBTTaskNode
		constexpr auto Loudnes = 0x70; // float
	}

	namespace n_UPaperTileSet { // : UObject
		constexpr auto TileSize = 0x28; // FIntPoint
		constexpr auto TileSheet = 0x30; // UTexture2D*
		constexpr auto BorderMargin = 0x38; // FIntMargin
		constexpr auto PerTileSpacing = 0x48; // FIntPoint
		constexpr auto DrawingOffset = 0x50; // FIntPoint
		constexpr auto WidthInTiles = 0x58; // int32_t
		constexpr auto HeightInTiles = 0x5c; // int32_t
		constexpr auto AllocatedWidth = 0x60; // int32_t
		constexpr auto AllocatedHeight = 0x64; // int32_t
		constexpr auto PerTileData = 0x68; // TArray<FPaperTileMetadata>
		constexpr auto Terrains = 0x78; // TArray<FPaperTileSetTerrain>
		constexpr auto TileWidth = 0x88; // int32_t
		constexpr auto TileHeight = 0x8c; // int32_t
		constexpr auto Margin = 0x90; // int32_t
		constexpr auto Spacing = 0x94; // int32_t
	}

	namespace n_UNavAreaMeta { // : UNavArea
		constexpr auto DefaultCost = 0x28; // float
		constexpr auto FixedAreaEnteringCost = 0x2c; // float
		constexpr auto DrawColor = 0x30; // FColor
		constexpr auto SupportedAgents = 0x34; // FNavAgentSelector
		constexpr auto bSupportsAgent0 = 0x38; // char : 1
		constexpr auto bSupportsAgent1 = 0x38; // char : 1
		constexpr auto bSupportsAgent2 = 0x38; // char : 1
		constexpr auto bSupportsAgent3 = 0x38; // char : 1
		constexpr auto bSupportsAgent4 = 0x38; // char : 1
		constexpr auto bSupportsAgent5 = 0x38; // char : 1
		constexpr auto bSupportsAgent6 = 0x38; // char : 1
		constexpr auto bSupportsAgent7 = 0x38; // char : 1
		constexpr auto bSupportsAgent8 = 0x38; // char : 1
		constexpr auto bSupportsAgent9 = 0x38; // char : 1
		constexpr auto bSupportsAgent10 = 0x38; // char : 1
		constexpr auto bSupportsAgent11 = 0x38; // char : 1
		constexpr auto bSupportsAgent12 = 0x38; // char : 1
		constexpr auto bSupportsAgent13 = 0x38; // char : 1
		constexpr auto bSupportsAgent14 = 0x38; // char : 1
		constexpr auto bSupportsAgent15 = 0x38; // char : 1
	}

	namespace n_UW_PatchNotesEntryView_C { // : UPatchNotesEntryView
		constexpr auto UberGraphFrame = 0x378; // FPointerToUberGraphFrame
		constexpr auto Deselect = 0x380; // UWidgetAnimation*
		constexpr auto Select = 0x388; // UWidgetAnimation*
		constexpr auto Border_1 = 0x390; // UBorder*
		constexpr auto Temp_OldHighlight = 0x398; // FSlateBrush
	}

	namespace n_UPlaneReflectionCaptureComponent { // : UReflectionCaptureComponent
		constexpr auto InfluenceRadiusScale = 0x390; // float
		constexpr auto PreviewInfluenceRadius = 0x398; // UDrawSphereComponent*
		constexpr auto PreviewCaptureBox = 0x3a0; // UBoxComponent*
	}

	namespace n_UParticleModuleRotation { // : UParticleModuleRotationBase
		constexpr auto StartRotation = 0x30; // FRawDistributionFloat
	}

	namespace n_URecastFilter_UseDefaultArea { // : UNavigationQueryFilter
		constexpr auto Areas = 0x28; // TArray<FNavigationFilterArea>
		constexpr auto IncludeFlags = 0x38; // FNavigationFilterFlags
		constexpr auto ExcludeFlags = 0x3c; // FNavigationFilterFlags
	}

	namespace n_APlanarReflection { // : ASceneCapture
		constexpr auto PlanarReflectionComponent = 0x3d8; // UPlanarReflectionComponent*
		constexpr auto bShowPreviewPlane = 0x3e0; // bool
	}

	namespace n_UEditableTextBoxWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto EditableTextBoxStyle = 0x30; // FEditableTextBoxStyle
	}

	namespace n_UMaterialInstance { // : UMaterialInterface
		constexpr auto PhysMaterial = 0x70; // UPhysicalMaterial*
		constexpr auto Parent = 0x78; // UMaterialInterface*
		constexpr auto bHasStaticPermutationResource = 0x80; // char : 1
		constexpr auto bOverrideSubsurfaceProfile = 0x80; // char : 1
		constexpr auto FontParameterValues = 0x88; // TArray<FFontParameterValue>
		constexpr auto ScalarParameterValues = 0x98; // TArray<FScalarParameterValue>
		constexpr auto TextureParameterValues = 0xa8; // TArray<FTextureParameterValue>
		constexpr auto GraniteTextureParameterValues = 0xb8; // TArray<FGraniteTextureParameterValue>
		constexpr auto GraniteErrors = 0xc8; // TArray<FString>
		constexpr auto VectorParameterValues = 0xd8; // TArray<FVectorParameterValue>
		constexpr auto bOverrideBaseProperties = 0xe8; // bool
		constexpr auto BasePropertyOverrides = 0xec; // FMaterialInstanceBasePropertyOverrides
	}

	namespace n_UMaterialExpressionTextureObject { // : UMaterialExpressionTextureBase
		constexpr auto Texture = 0x60; // UTexture*
		constexpr auto SamplerType = 0x68; // EMaterialSamplerType
		constexpr auto IsDefaultMeshpaintTexture = 0x6c; // char : 1
	}

	namespace n_ULevel { // : UObject
		constexpr auto OwningWorld = 0xc0; // UWorld*
		constexpr auto Model = 0xc8; // UModel*
		constexpr auto ModelComponents = 0xd0; // TArray<UModelComponent*>
		constexpr auto ActorCluster = 0xe0; // ULevelActorContainer*
		constexpr auto NumTextureStreamingUnbuiltComponents = 0xe8; // int32_t
		constexpr auto NumTextureStreamingDirtyResources = 0xec; // int32_t
		constexpr auto LevelScriptActor = 0xf0; // ALevelScriptActor*
		constexpr auto NavListStart = 0xf8; // ANavigationObjectBase*
		constexpr auto NavListEnd = 0x100; // ANavigationObjectBase*
		constexpr auto NavDataChunks = 0x108; // TArray<UNavigationDataChunk*>
		constexpr auto LightmapTotalSize = 0x118; // float
		constexpr auto ShadowmapTotalSize = 0x11c; // float
		constexpr auto StaticNavigableGeometry = 0x120; // TArray<FVector>
		constexpr auto StreamingTextureGuids = 0x130; // TArray<FGuid>
		constexpr auto bIsLightingScenario = 0x1d0; // bool
		constexpr auto LevelBuildDataId = 0x1d4; // FGuid
		constexpr auto MapBuildData = 0x1e8; // UMapBuildDataRegistry*
		constexpr auto LightBuildLevelOffset = 0x1f0; // FIntVector
		constexpr auto bTextureStreamingRotationChanged = 0x1fc; // char : 1
		constexpr auto bIsVisible = 0x1fc; // char : 1
		constexpr auto bLocked = 0x1fc; // char : 1
		constexpr auto WorldSettings = 0x300; // AWorldSettings*
		constexpr auto AssetUserData = 0x310; // TArray<UAssetUserData*>
		constexpr auto RouteActorInitialize_ActorsToBeginPlay = 0x330; // TArray<TWeakObjectPtr<AActor>>
	}

	namespace n_UTestPhaseComponent { // : USceneComponent
		constexpr auto AttachParent = 0xf8; // USceneComponent*
		constexpr auto AttachChildren = 0x100; // TArray<USceneComponent*>
		constexpr auto ClientAttachedChildren = 0x110; // TSet<USceneComponent*>
		constexpr auto AttachSocketName = 0x160; // FName
		constexpr auto bWorldToComponentUpdated = 0x168; // char : 1
		constexpr auto bAbsoluteLocation = 0x168; // char : 1
		constexpr auto bAbsoluteRotation = 0x168; // char : 1
		constexpr auto bAbsoluteScale = 0x168; // char : 1
		constexpr auto bVisible = 0x168; // char : 1
		constexpr auto bHiddenInGame = 0x168; // char : 1
		constexpr auto bShouldUpdatePhysicsVolume = 0x168; // char : 1
		constexpr auto bBoundsChangeTriggersStreamingDataRebuild = 0x168; // char : 1
		constexpr auto bUseAttachParentBound = 0x168; // char : 1
		constexpr auto bShouldDisregardChildComponentsForNavigationUpdates = 0x168; // char : 1
		constexpr auto bShouldDisregardAttachedActorsForNavigationUpdates = 0x168; // char : 1
		constexpr auto Mobility = 0x16d; // EComponentMobility
		constexpr auto DetailMode = 0x16e; // EDetailMode
		constexpr auto PhysicsVolume = 0x170; // TWeakObjectPtr<APhysicsVolume>
		constexpr auto RelativeLocation = 0x1f0; // FVector
		constexpr auto RelativeRotation = 0x1fc; // FRotator
		constexpr auto RelativeScale3D = 0x230; // FVector
		constexpr auto ComponentVelocity = 0x258; // FVector
		constexpr auto PhysicsVolumeChangedDelegate = 0x268; // FScriptMulticastDelegate
	}

	namespace n_UAISystem { // : UAISystemBase
		constexpr auto PerceptionSystemClassName = 0x48; // FStringClassReference
		constexpr auto HotSpotManagerClassName = 0x58; // FStringClassReference
		constexpr auto AcceptanceRadius = 0x68; // float
		constexpr auto PathfollowingRegularPathPointAcceptanceRadius = 0x6c; // float
		constexpr auto PathfollowingNavLinkAcceptanceRadius = 0x70; // float
		constexpr auto bFinishMoveOnGoalOverlap = 0x74; // bool
		constexpr auto bAcceptPartialPaths = 0x75; // bool
		constexpr auto bAllowStrafing = 0x76; // bool
		constexpr auto bEnableBTAITasks = 0x77; // bool
		constexpr auto bAllowControllersAsEQSQuerier = 0x78; // bool
		constexpr auto bEnableDebuggerPlugin = 0x79; // bool
		constexpr auto DefaultSightCollisionChannel = 0x7a; // ECollisionChannel
		constexpr auto BehaviorTreeManager = 0x80; // UBehaviorTreeManager*
		constexpr auto EnvironmentQueryManager = 0x88; // UEnvQueryManager*
		constexpr auto PerceptionSystem = 0x90; // UAIPerceptionSystem*
		constexpr auto AllProxyObjects = 0x98; // TArray<UAIAsyncTaskBlueprintProxy*>
		constexpr auto HotSpotManager = 0xa8; // UAIHotSpotManager*
		constexpr auto NavLocalGrids = 0xb0; // UNavLocalGridManager*
	}

	namespace n_UServerListView { // : URootWidget
		constexpr auto SignalServerSearchDone = 0x318; // FScriptMulticastDelegate
		constexpr auto SignalServerSelected = 0x328; // FScriptMulticastDelegate
		constexpr auto SignalServerInvoked = 0x338; // FScriptMulticastDelegate
		constexpr auto SignalServerListDeselected = 0x348; // FScriptMulticastDelegate
		constexpr auto SignalServerListSelected = 0x358; // FScriptMulticastDelegate
		constexpr auto SignalWidgetsUpdated = 0x368; // FScriptMulticastDelegate
		constexpr auto m_CurrentSteamFilter = 0x378; // EFindSessionServerSet
		constexpr auto m_CurrentOfficialFilter = 0x379; // EFindSessionOfficial
		constexpr auto FirstWidget = 0x380; // URootWidget*
		constexpr auto NavOutWidget = 0x388; // URootWidget*
		constexpr auto m_ServerInfoClass = 0x420; // UUserWidget*
		constexpr auto m_ListUpdateProgressView = 0x428; // UTextBlock*
		constexpr auto m_UnusedListEntryWidgets = 0x438; // TArray<UServerInfoBase*>
		constexpr auto m_ListViewEntries = 0x448; // TArray<FServerListViewEntry>
	}

	namespace n_UVectorFieldAnimated { // : UVectorField
		constexpr auto Texture = 0x48; // UTexture2D*
		constexpr auto ConstructionOp = 0x50; // EVectorFieldConstructionOp
		constexpr auto VolumeSizeX = 0x54; // int32_t
		constexpr auto VolumeSizeY = 0x58; // int32_t
		constexpr auto VolumeSizeZ = 0x5c; // int32_t
		constexpr auto SubImagesX = 0x60; // int32_t
		constexpr auto SubImagesY = 0x64; // int32_t
		constexpr auto FrameCount = 0x68; // int32_t
		constexpr auto FramesPerSecond = 0x6c; // float
		constexpr auto bLoop = 0x70; // char : 1
		constexpr auto NoiseField = 0x78; // UVectorFieldStatic*
		constexpr auto NoiseScale = 0x80; // float
		constexpr auto NoiseMax = 0x84; // float
	}

	namespace n_USubmixEffectTestPreset { // : USoundEffectSubmixPreset
		constexpr auto Settings = 0x40; // FSubmixEffectTestSettings
	}

	namespace n_USoundConcurrency { // : UObject
		constexpr auto Concurrency = 0x28; // FSoundConcurrencySettings
	}

	namespace n_UInterpTrackInstEvent { // : UInterpTrackInst
		constexpr auto LastUpdatePosition = 0x28; // float
	}

	namespace n_UGridPanel { // : UPanelWidget
		constexpr auto ColumnFill = 0x130; // TArray<float>
		constexpr auto RowFill = 0x140; // TArray<float>
	}

	namespace n_UMovieScene3DTransformTrack { // : UMovieScenePropertyTrack
		constexpr auto PropertyName = 0xb8; // FName
		constexpr auto PropertyPath = 0xc0; // FString
		constexpr auto Sections = 0xd0; // TArray<UMovieSceneSection*>
	}

	namespace n_UGarbageCollectionSettings { // : UDeveloperSettings
		constexpr auto TimeBetweenPurgingPendingKillObjects = 0x38; // float
		constexpr auto FlushStreamingOnGC = 0x3c; // char : 1
		constexpr auto AllowParallelGC = 0x3c; // char : 1
		constexpr auto CreateGCClusters = 0x3c; // char : 1
		constexpr auto MergeGCClusters = 0x3c; // char : 1
		constexpr auto ActorClusteringEnabled = 0x3c; // char : 1
		constexpr auto BlueprintClusteringEnabled = 0x3c; // char : 1
		constexpr auto MinGCClusterSize = 0x40; // int32_t
		constexpr auto NumRetriesBeforeForcingGC = 0x44; // int32_t
		constexpr auto MaxObjectsNotConsideredByGC = 0x48; // int32_t
		constexpr auto SizeOfPermanentObjectPool = 0x4c; // int32_t
		constexpr auto MaxObjectsInGame = 0x50; // int32_t
		constexpr auto MaxObjectsInEditor = 0x54; // int32_t
	}

	namespace n_UMovieSceneMarginTrack { // : UMovieScenePropertyTrack
		constexpr auto PropertyName = 0xb8; // FName
		constexpr auto PropertyPath = 0xc0; // FString
		constexpr auto Sections = 0xd0; // TArray<UMovieSceneSection*>
	}

	namespace n_APhysicsThruster { // : ARigidBodyBase
		constexpr auto ThrusterComponent = 0x3d0; // UPhysicsThrusterComponent*
	}

	namespace n_UCineCameraComponent { // : UCameraComponent
		constexpr auto FilmbackSettings = 0x850; // FCameraFilmbackSettings
		constexpr auto LensSettings = 0x85c; // FCameraLensSettings
		constexpr auto FocusSettings = 0x870; // FCameraFocusSettings
		constexpr auto CurrentFocalLength = 0x8a0; // float
		constexpr auto CurrentAperture = 0x8a4; // float
		constexpr auto CurrentFocusDistance = 0x8a8; // float
		constexpr auto FilmbackPresets = 0x8b8; // TArray<FNamedFilmbackPreset>
		constexpr auto LensPresets = 0x8c8; // TArray<FNamedLensPreset>
		constexpr auto DefaultFilmbackPresetName = 0x8d8; // FString
		constexpr auto DefaultLensPresetName = 0x8e8; // FString
		constexpr auto DefaultLensFocalLength = 0x8f8; // float
		constexpr auto DefaultLensFStop = 0x8fc; // float
	}

	namespace n_UWheeledVehicleMovementComponent4W { // : UWheeledVehicleMovementComponent
		constexpr auto EngineSetup = 0x2e8; // FVehicleEngineData
		constexpr auto DifferentialSetup = 0x378; // FVehicleDifferential4WData
		constexpr auto TransmissionSetup = 0x398; // FVehicleTransmissionData
		constexpr auto SteeringCurve = 0x3c8; // FRuntimeFloatCurve
		constexpr auto AckermannAccuracy = 0x440; // float
	}

	namespace n_UBTTask_PlaySound { // : UBTTaskNode
		constexpr auto SoundToPlay = 0x70; // USoundCue*
	}

	namespace n_USafeZone { // : UContentWidget
		constexpr auto PadLeft = 0x130; // bool
		constexpr auto PadRight = 0x131; // bool
		constexpr auto PadTop = 0x132; // bool
		constexpr auto PadBottom = 0x133; // bool
	}

	namespace n_UNiagaraRibbonRendererProperties { // : UNiagaraEffectRendererProperties
		constexpr auto Dummy = 0x28; // FName
	}

	namespace n_APreCullTrianglesVolume { // : AVolume
		constexpr auto BrushType = 0x3d0; // EBrushType
		constexpr auto BrushColor = 0x3d4; // FColor
		constexpr auto PolyFlags = 0x3d8; // int32_t
		constexpr auto bColored = 0x3dc; // char : 1
		constexpr auto bSolidWhenSelected = 0x3dc; // char : 1
		constexpr auto bPlaceableFromClassBrowser = 0x3dc; // char : 1
		constexpr auto bNotForClientOrServer = 0x3dc; // char : 1
		constexpr auto Brush = 0x3e0; // UModel*
		constexpr auto BrushComponent = 0x3e8; // UBrushComponent*
		constexpr auto bInManipulation = 0x3f0; // char : 1
		constexpr auto SavedSelections = 0x3f8; // TArray<FGeomSelection>
	}

	namespace n_UMaterialExpressionParticleColor { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto Desc = 0x38; // FString
		constexpr auto BorderColor = 0x48; // FColor
		constexpr auto bRealtimePreview = 0x4c; // char : 1
		constexpr auto bNeedToUpdatePreview = 0x4c; // char : 1
		constexpr auto bIsParameterExpression = 0x4c; // char : 1
		constexpr auto bCommentBubbleVisible = 0x4c; // char : 1
		constexpr auto bShowOutputNameOnPin = 0x4c; // char : 1
		constexpr auto bHidePreviewWindow = 0x4c; // char : 1
		constexpr auto bCollapsed = 0x4c; // char : 1
		constexpr auto bShaderInputData = 0x4c; // char : 1
		constexpr auto bShowInputs = 0x4c; // char : 1
		constexpr auto bShowOutputs = 0x4c; // char : 1
		constexpr auto Outputs = 0x50; // TArray<FExpressionOutput>
	}

	namespace n_UAnimSequencerInstance { // : UAnimInstance
		constexpr auto DeltaTime = 0x28; // float
		constexpr auto CurrentSkeleton = 0x30; // USkeleton*
		constexpr auto RootMotionMode = 0x38; // ERootMotionMode
		constexpr auto bRunUpdatesInWorkerThreads = 0x39; // bool
		constexpr auto bCanUseParallelUpdateAnimation = 0x3a; // bool
		constexpr auto bUseMultiThreadedAnimationUpdate = 0x3b; // bool
		constexpr auto bWarnAboutBlueprintUsage = 0x3c; // bool
		constexpr auto OnMontageBlendingOut = 0x40; // FScriptMulticastDelegate
		constexpr auto OnMontageStarted = 0x50; // FScriptMulticastDelegate
		constexpr auto OnMontageEnded = 0x60; // FScriptMulticastDelegate
		constexpr auto OnAllMontageInstancesEnded = 0x70; // FScriptMulticastDelegate
		constexpr auto bQueueMontageEvents = 0xe0; // bool
		constexpr auto NotifyQueue = 0x110; // FAnimNotifyQueue
		constexpr auto ActiveAnimNotifyState = 0x180; // TArray<FAnimNotifyEvent>
	}

	namespace n_UModMismatchDelegates { // : UObject
		constexpr auto ModMismatchList = 0x28; // FServerModMismatchList
		constexpr auto OnModNameChange = 0x48; // FScriptMulticastDelegate
		constexpr auto OnModStateChange = 0x58; // FScriptMulticastDelegate
	}

	namespace n_UW_BlockedEntry_C { // : UBlockedPlayerEntry
		constexpr auto UberGraphFrame = 0x3d0; // FPointerToUberGraphFrame
		constexpr auto ActionsBox = 0x3d8; // UHorizontalBox*
		constexpr auto B_UnblockPlayer = 0x3e0; // UW_ButtonCustom_C*
		constexpr auto Container = 0x3e8; // UBorder*
	}

	namespace n_UParticleModuleSizeBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x28; // char : 1
		constexpr auto LODDuplicate = 0x28; // char : 1
		constexpr auto bSupportsRandomSeed = 0x28; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x28; // char : 1
		constexpr auto LODValidity = 0x2c; // char
	}

	namespace n_UMovieSceneParticleSection { // : UMovieSceneSection
		constexpr auto ParticleKeys = 0xc8; // FIntegralCurve
	}

	namespace n_UInputBoxWidget { // : UWindowRoot
		constexpr auto SignalInputUserActionPerformed = 0x398; // FScriptMulticastDelegate
	}

	namespace n_ASharedDebugInfo { // : AActor
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto CustomTimeDilation = 0x80; // float
		constexpr auto bHidden = 0x84; // char : 1
		constexpr auto bNetTemporary = 0x84; // char : 1
		constexpr auto bNetStartup = 0x84; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x84; // char : 1
		constexpr auto bAlwaysRelevant = 0x84; // char : 1
		constexpr auto bReplicateMovement = 0x84; // char : 1
		constexpr auto bTearOff = 0x84; // char : 1
		constexpr auto bExchangedRoles = 0x84; // char : 1
		constexpr auto bPendingNetUpdate = 0x85; // char : 1
		constexpr auto bNetLoadOnClient = 0x85; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x85; // char : 1
		constexpr auto bBlockInput = 0x85; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x85; // char : 1
		constexpr auto bActorEnableCollision = 0x86; // char : 1
		constexpr auto bReplicates = 0x86; // char : 1
		constexpr auto bLostRelevancy = 0x86; // char : 1
		constexpr auto NetDriverName = 0x88; // FName
		constexpr auto bCanBeInCluster = 0x90; // char : 1
		constexpr auto RemoteRole = 0x91; // ENetRole
		constexpr auto Owner = 0x98; // AActor*
		constexpr auto ReplicatedMovement = 0xa0; // FRepMovement
		constexpr auto AttachmentReplication = 0xd8; // FRepAttachment
		constexpr auto Role = 0x118; // ENetRole
		constexpr auto AutoReceiveInput = 0x11a; // EAutoReceiveInput
		constexpr auto InputPriority = 0x11c; // int32_t
		constexpr auto InputComponent = 0x120; // UInputComponent*
		constexpr auto InputConsumeOption = 0x128; // EInputConsumeOptions
		constexpr auto NetCullDistanceSquared = 0x12c; // float
		constexpr auto ViewTargetNetCullDistanceSquared = 0x130; // float
		constexpr auto NetTag = 0x134; // int32_t
		constexpr auto NetUpdateTime = 0x138; // float
		constexpr auto NetUpdateFrequency = 0x13c; // float
		constexpr auto MinNetUpdateFrequency = 0x140; // float
		constexpr auto NetPriority = 0x144; // float
		constexpr auto LastNetUpdateTime = 0x148; // float
		constexpr auto bAutoDestroyWhenFinished = 0x14c; // char : 1
		constexpr auto bCanBeDamaged = 0x14c; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x14c; // char : 1
		constexpr auto bCollideWhenPlacing = 0x14c; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x14c; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x14c; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x14c; // char : 1
		constexpr auto SpawnCollisionHandlingMethod = 0x14d; // ESpawnActorCollisionHandlingMethod
		constexpr auto Instigator = 0x158; // APawn*
		constexpr auto Children = 0x160; // TArray<AActor*>
		constexpr auto RootComponent = 0x170; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x178; // TArray<AMatineeActor*>
		constexpr auto InitialLifeSpan = 0x188; // float
		constexpr auto Layers = 0x198; // TArray<FName>
		constexpr auto ParentComponentActor = 0x1a8; // TWeakObjectPtr<AActor>
		constexpr auto ParentComponent = 0x1b0; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x1b8; // char : 1
		constexpr auto bUseExtendedRelevancyTimeout = 0x1b8; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x1b8; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x1b8; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x1b8; // char : 1
		constexpr auto Tags = 0x1c0; // TArray<FName>
		constexpr auto HiddenEditorViews = 0x1d0; // uint64_t
		constexpr auto OnTakeAnyDamage = 0x1d8; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x1e8; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x1f8; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x208; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x218; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x228; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x238; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x248; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x258; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x268; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x278; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x288; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x298; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x2a8; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x2b8; // FScriptMulticastDelegate
		constexpr auto BlueprintCreatedComponents = 0x3a8; // TArray<UActorComponent*>
		constexpr auto InstanceComponents = 0x3b8; // TArray<UActorComponent*>
	}

	namespace n_UMaterialExpressionComponentMask { // : UMaterialExpression
		constexpr auto Input = 0x60; // FExpressionInput
		constexpr auto R = 0x98; // char : 1
		constexpr auto G = 0x98; // char : 1
		constexpr auto B = 0x98; // char : 1
		constexpr auto A = 0x98; // char : 1
	}

	namespace n_UHapticFeedbackEffect_Buffer { // : UHapticFeedbackEffect_Base
		constexpr auto Amplitudes = 0x28; // TArray<char>
		constexpr auto SampleRate = 0x38; // int32_t
	}

	namespace n_UParticleModuleAttractorPointGravity { // : UParticleModuleAttractorBase
		constexpr auto Position = 0x30; // FVector
		constexpr auto Radius = 0x3c; // float
		constexpr auto Strength = 0x40; // UDistributionFloat*
		constexpr auto StrengthRaw = 0x48; // FRawDistributionFloat
	}

	namespace n_AStartup_C { // : ALevelScriptActor
		constexpr auto UberGraphFrame = 0x3d8; // FPointerToUberGraphFrame
	}

	namespace n_UHapticFeedbackEffect_Curve { // : UHapticFeedbackEffect_Base
		constexpr auto HapticDetails = 0x28; // FHapticFeedbackDetails_Curve
	}

	namespace n_ADomeBase { // : AActor
		constexpr auto SavedRadius = 0x3d8; // float
	}

	namespace n_UNavArea_Walls { // : UNavArea
		constexpr auto DefaultCost = 0x28; // float
		constexpr auto FixedAreaEnteringCost = 0x2c; // float
		constexpr auto DrawColor = 0x30; // FColor
		constexpr auto SupportedAgents = 0x34; // FNavAgentSelector
		constexpr auto bSupportsAgent0 = 0x38; // char : 1
		constexpr auto bSupportsAgent1 = 0x38; // char : 1
		constexpr auto bSupportsAgent2 = 0x38; // char : 1
		constexpr auto bSupportsAgent3 = 0x38; // char : 1
		constexpr auto bSupportsAgent4 = 0x38; // char : 1
		constexpr auto bSupportsAgent5 = 0x38; // char : 1
		constexpr auto bSupportsAgent6 = 0x38; // char : 1
		constexpr auto bSupportsAgent7 = 0x38; // char : 1
		constexpr auto bSupportsAgent8 = 0x38; // char : 1
		constexpr auto bSupportsAgent9 = 0x38; // char : 1
		constexpr auto bSupportsAgent10 = 0x38; // char : 1
		constexpr auto bSupportsAgent11 = 0x38; // char : 1
		constexpr auto bSupportsAgent12 = 0x38; // char : 1
		constexpr auto bSupportsAgent13 = 0x38; // char : 1
		constexpr auto bSupportsAgent14 = 0x38; // char : 1
		constexpr auto bSupportsAgent15 = 0x38; // char : 1
	}

	namespace n_UMovieSceneBoolSection { // : UMovieSceneSection
		constexpr auto DefaultValue = 0xd0; // bool
		constexpr auto BoolCurve = 0xd8; // FIntegralCurve
	}

	namespace n_UUniqueID { // : UObject
		constexpr auto UID = 0x30; // int64_t
	}

	namespace n_ALobbyBeaconState { // : AInfo
		constexpr auto MaxPlayers = 0x3d0; // int32_t
		constexpr auto LobbyBeaconPlayerStateClass = 0x3d8; // ALobbyBeaconPlayerState*
		constexpr auto bLobbyStarted = 0x3e8; // bool
		constexpr auto WaitForPlayersTimeRemaining = 0x3ec; // float
		constexpr auto Players = 0x3f0; // FLobbyPlayerStateInfoArray
	}

	namespace n_UW_Friends_SessionInvites_C { // : USessionInviteGame
		constexpr auto SessionInviteEntryList = 0x3c8; // UW_NavigatableVerticalBox_C*
	}

	namespace n_UConsoleUserSettingsSave { // : USaveGame
		constexpr auto MotionBlur = 0x28; // int32_t
		constexpr auto VolumetricFog = 0x2c; // int32_t
		constexpr auto FilmGrain = 0x30; // float
		constexpr auto GammaValue = 0x34; // float
		constexpr auto FOV = 0x38; // float
		constexpr auto SafeZonePadding = 0x3c; // FVector2D
		constexpr auto ConsoleGraphicsPreset = 0x44; // int32_t
		constexpr auto SoundVolumeMaster = 0x48; // float
		constexpr auto SoundVolumeMusic = 0x4c; // float
		constexpr auto SoundVolumeVoice = 0x50; // float
		constexpr auto SoundVolumeVoiceChat = 0x54; // float
		constexpr auto SoundVolumeSFX = 0x58; // float
		constexpr auto SubtitlesEnabled = 0x5c; // bool
		constexpr auto PushToTalk = 0x5d; // bool
		constexpr auto ShowOwnVoiceIndicator = 0x5e; // bool
		constexpr auto ShowOtherVoiceIndicator = 0x5f; // bool
		constexpr auto AreFloatingNamesEnabled = 0x60; // bool
		constexpr auto Language = 0x68; // FString
		constexpr auto nudity = 0x78; // ENudity
		constexpr auto ShowHUDDot = 0x79; // bool
		constexpr auto EnableCameraShake = 0x7a; // bool
		constexpr auto showBuildingHelp = 0x7b; // bool
		constexpr auto DisableAutomaticWield = 0x7c; // bool
		constexpr auto ShowJourneySteps = 0x7d; // bool
		constexpr auto ShowWeaponTrails = 0x7e; // bool
		constexpr auto AllowFirstPersonCameraInCombat = 0x7f; // bool
		constexpr auto EnableAutoFacingOnAttack = 0x80; // bool
		constexpr auto SendNewItemsToShorcutsWheel = 0x81; // bool
		constexpr auto AutoFocusRecipeSearchBar = 0x82; // bool
		constexpr auto SignVisibility = 0x83; // ESignVisibility
		constexpr auto UseGamepadStyleMovement = 0x84; // EGamepadStyleMovement
		constexpr auto RotatableStationaryCamera = 0x85; // bool
		constexpr auto EnableStreamerMode = 0x86; // bool
		constexpr auto ToggleAssignmentRadial = 0x87; // bool
		constexpr auto showContextualControls = 0x88; // bool
		constexpr auto ShowLandClaimNotification = 0x89; // bool
		constexpr auto BattleStandardJoinSetting = 0x8a; // EBattleStandardJoinSetting
		constexpr auto ShowHUDBuffs = 0x8b; // bool
		constexpr auto HUDBuffScale = 0x8c; // float
		constexpr auto HUDShowBarValues = 0x90; // bool
		constexpr auto ShowHealthValueThralls = 0x91; // bool
		constexpr auto ShowHealthValueNPCs = 0x92; // bool
		constexpr auto AlwaysShowHealthBars = 0x93; // bool
		constexpr auto HealthBarMaxDisplayRange = 0x94; // float
		constexpr auto DifferentBarColorClanMembers = 0x98; // bool
		constexpr auto InvertY = 0x99; // bool
		constexpr auto RightAxisSensitivity = 0x9c; // float
		constexpr auto RightAxisAimSensitivity = 0xa0; // float
		constexpr auto LeftAxisDeadzone = 0xa4; // float
		constexpr auto RightAxisDeadzone = 0xa8; // float
		constexpr auto LeftTriggerDeadzone = 0xac; // float
		constexpr auto RightTriggerDeadzone = 0xb0; // float
		constexpr auto RightAxisInvertY = 0xb4; // bool
		constexpr auto GamepadPreset = 0xb8; // FName
		constexpr auto ShowUIGamma = 0xc0; // FString
		constexpr auto SavePasswords = 0xd0; // bool
		constexpr auto HideCommunityPicker = 0xd1; // bool
		constexpr auto CharacterLevels = 0xd8; // TMap<FString, int32_t>
		constexpr auto SavedServers = 0x128; // TMap<FString, FString>
		constexpr auto LastConnected = 0x178; // FString
		constexpr auto LastDLC = 0x188; // FString
		constexpr auto FavoriteServers = 0x198; // TArray<FFavoriteServer>
		constexpr auto HistoricServers = 0x1a8; // TArray<FHistoricServer>
		constexpr auto ServerSettings_3 = 0x1b8; // TMap<FString, FString>
		constexpr auto ActionMappings = 0x208; // TArray<FInputActionKeyMapping>
		constexpr auto AxisMappings = 0x218; // TArray<FInputAxisKeyMapping>
		constexpr auto MuteVoiceEncryptedIds = 0x228; // TSet<FString>
		constexpr auto MuteChatEncryptedIds = 0x278; // TSet<FString>
	}

	namespace n_UParticleModuleLight_Seeded { // : UParticleModuleLight
		constexpr auto RandomSeedInfo = 0x140; // FParticleRandomSeedInfo
	}

	namespace n_UW_Settings_Gameplay_C { // : USettingsGameplayBase
		constexpr auto UberGraphFrame = 0x650; // FPointerToUberGraphFrame
		constexpr auto CB_AllowFirstPersonCamera = 0x658; // UW_ButtonNormal_C*
		constexpr auto CB_AlwaysShowHealthBars = 0x660; // UW_ButtonNormal_C*
		constexpr auto CB_AutoFocusRecipeSearchBar = 0x668; // UW_ButtonNormal_C*
		constexpr auto CB_DifferentBarColorClanMembers = 0x670; // UW_ButtonNormal_C*
		constexpr auto CB_DisableAutomaticWield = 0x678; // UW_ButtonNormal_C*
		constexpr auto CB_EnableAutoFacingOnAttack = 0x680; // UW_ButtonNormal_C*
		constexpr auto CB_EnableCameraShake = 0x688; // UW_ButtonNormal_C*
		constexpr auto CB_EnableStreamerMode = 0x690; // UW_ButtonNormal_C*
		constexpr auto CB_FloatingNames = 0x698; // UW_ButtonNormal_C*
		constexpr auto CB_HUDShowBarValues = 0x6a0; // UW_ButtonNormal_C*
		constexpr auto CB_LandClaimNotification = 0x6a8; // UW_ButtonNormal_C*
		constexpr auto CB_RotatableStationaryCamera = 0x6b0; // UW_ButtonNormal_C*
		constexpr auto CB_SendNewItemsToShortcutsWheel = 0x6b8; // UW_ButtonNormal_C*
		constexpr auto CB_ShowBuldingHelp = 0x6c0; // UW_ButtonNormal_C*
		constexpr auto CB_ShowContextualControls = 0x6c8; // UW_ButtonNormal_C*
		constexpr auto CB_ShowHealthBarValueNPCs = 0x6d0; // UW_ButtonNormal_C*
		constexpr auto CB_ShowHealthBarValueThralls = 0x6d8; // UW_ButtonNormal_C*
		constexpr auto CB_ShowHUDBuffs = 0x6e0; // UW_ButtonNormal_C*
		constexpr auto CB_ShowJourneySteps = 0x6e8; // UW_ButtonNormal_C*
		constexpr auto CB_ShowWeaponTrails = 0x6f0; // UW_ButtonNormal_C*
		constexpr auto CB_ToggleAssignmentRadial = 0x6f8; // UW_ButtonNormal_C*
		constexpr auto CB_ToggleDodge = 0x700; // UW_ButtonNormal_C*
		constexpr auto CB_ToggleShowHUDDot = 0x708; // UW_ButtonNormal_C*
		constexpr auto CBS_BattleStandardJoinSetting = 0x710; // UW_FCComboBoxString_C*
		constexpr auto CBS_BioAccess = 0x718; // UW_FCComboBoxString_C*
		constexpr auto CBS_BioSharing = 0x720; // UW_FCComboBoxString_C*
		constexpr auto CBS_ChatVisibility = 0x728; // UW_FCComboBoxString_C*
		constexpr auto CBS_GamepadStyleMovement = 0x730; // UW_FCComboBoxString_C*
		constexpr auto CBS_Language = 0x738; // UW_FCComboBoxString_C*
		constexpr auto CBS_SignVisibility = 0x740; // UW_FCComboBoxString_C*
		constexpr auto CBS_VisibleSheathedWeapons = 0x748; // UW_FCComboBoxString_C*
		constexpr auto ChatLabel = 0x750; // UTextBlock*
		constexpr auto DoubleTapLabel = 0x758; // UTextBlock*
		constexpr auto LanguageLabel = 0x760; // UTextBlock*
		constexpr auto Mods_AutoConnect = 0x768; // UW_ButtonNormal_C*
		constexpr auto Mods_SubscribeAndDownload = 0x770; // UW_ButtonNormal_C*
		constexpr auto NudityLabel = 0x778; // UTextBlock*
		constexpr auto NudityOption = 0x780; // UW_NudityOption_C*
		constexpr auto S_HealthBarMaxDisplayRange = 0x788; // UW_EditableLabeledSlider_C*
		constexpr auto S_HUDBuffScale = 0x790; // UW_EditableLabeledSlider_C*
		constexpr auto T_AllowFirstPersonCamera = 0x798; // UTextBlock*
		constexpr auto T_EnableAutoFacingOnAttack = 0x7a0; // UTextBlock*
		constexpr auto T_Mods_AutoConnect = 0x7a8; // UTextBlock*
		constexpr auto T_Mods_SubscribeAndDownload = 0x7b0; // UTextBlock*
		constexpr auto T_ShowBuldingHelp = 0x7b8; // UTextBlock*
		constexpr auto T_ShowContextualControls = 0x7c0; // UTextBlock*
		constexpr auto T_ShowJourneySteps = 0x7c8; // UTextBlock*
		constexpr auto T_ShowWeaponTrails = 0x7d0; // UTextBlock*
		constexpr auto TextBlock_361 = 0x7d8; // UTextBlock*
		constexpr auto TextBlock_1216 = 0x7e0; // UTextBlock*
		constexpr auto ToolTip_RotatableCamera = 0x7e8; // UW_RootContainer_C*
		constexpr auto TXT_DisableAutomaticWield = 0x7f0; // UTextBlock*
		constexpr auto TXT_GamepadStyleMovement = 0x7f8; // UTextBlock*
		constexpr auto TextColor = 0x800; // FSlateColor
	}

	namespace n_UW_SkippableMovie_C { // : USkippableMovieBase
		constexpr auto UberGraphFrame = 0x3d0; // FPointerToUberGraphFrame
		constexpr auto Anim_Fade = 0x3d8; // UWidgetAnimation*
	}

	namespace n_UPawnAction_Wait { // : UPawnAction
		constexpr auto TimeToWait = 0xd0; // float
	}

	namespace n_UBoxReflectionCaptureComponent { // : UReflectionCaptureComponent
		constexpr auto BoxTransitionDistance = 0x390; // float
		constexpr auto PreviewInfluenceBox = 0x398; // UBoxComponent*
		constexpr auto PreviewCaptureBox = 0x3a0; // UBoxComponent*
	}

	namespace n_UConanLocalPlayer { // : ULocalPlayer
		constexpr auto ViewportClient = 0x58; // UGameViewportClient*
		constexpr auto AspectRatioAxisConstraint = 0x7c; // EAspectRatioAxisConstraint
		constexpr auto PendingLevelPlayerControllerClass = 0x80; // APlayerController*
		constexpr auto bSentSplitJoin = 0x88; // char : 1
	}

	namespace n_ULightPropagationVolumeBlendable { // : UObject
		constexpr auto Settings = 0x30; // FLightPropagationVolumeSettings
		constexpr auto BlendWeight = 0x68; // float
	}

	namespace n_USpotLightComponent { // : UPointLightComponent
		constexpr auto InnerConeAngle = 0x458; // float
		constexpr auto OuterConeAngle = 0x45c; // float
		constexpr auto LightShaftConeAngle = 0x460; // float
	}

	namespace n_UMovieSceneVectorSection { // : UMovieSceneSection
		constexpr auto Curves = 0xd0; // FRichCurve [0x4]
		constexpr auto ChannelsUsed = 0x290; // int32_t
	}

	namespace n_UExponentialHeightFogComponent { // : USceneComponent
		constexpr auto FogDensity = 0x300; // float
		constexpr auto FogInscatteringColor = 0x304; // FLinearColor
		constexpr auto InscatteringColorCubemap = 0x318; // UTextureCube*
		constexpr auto InscatteringColorCubemapAngle = 0x320; // float
		constexpr auto InscatteringTextureTint = 0x324; // FLinearColor
		constexpr auto FullyDirectionalInscatteringColorDistance = 0x334; // float
		constexpr auto NonDirectionalInscatteringColorDistance = 0x338; // float
		constexpr auto DirectionalInscatteringExponent = 0x33c; // float
		constexpr auto DirectionalInscatteringStartDistance = 0x340; // float
		constexpr auto DirectionalInscatteringColor = 0x344; // FLinearColor
		constexpr auto FogHeightFalloff = 0x354; // float
		constexpr auto FogMaxOpacity = 0x358; // float
		constexpr auto StartDistance = 0x35c; // float
		constexpr auto FogCutoffDistance = 0x360; // float
		constexpr auto bEnableVolumetricFog = 0x364; // bool
		constexpr auto VolumetricFogScatteringDistribution = 0x368; // float
		constexpr auto VolumetricFogAlbedo = 0x36c; // FColor
		constexpr auto VolumetricFogEmissive = 0x370; // FLinearColor
		constexpr auto VolumetricFogExtinctionScale = 0x380; // float
		constexpr auto VolumetricFogDistance = 0x384; // float
		constexpr auto bOverrideLightColorsWithFogInscatteringColors = 0x388; // bool
	}

	namespace n_UInterpTrackEvent { // : UInterpTrack
		constexpr auto EventTrack = 0x70; // TArray<FEventTrackKey>
		constexpr auto bFireEventsWhenForwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenJumpingForwards = 0x80; // char : 1
		constexpr auto bUseCustomEventName = 0x80; // char : 1
	}

	namespace n_UConanProjectileRegistry { // : UObject
		constexpr auto RegisteredComponents = 0x28; // TSet<UConanProjectileMovementComponent*>
	}

	namespace n_UNavigationDataChunk { // : UObject
		constexpr auto NavigationDataName = 0x28; // FName
	}

	namespace n_ULevelCapture { // : UMovieSceneCapture
		constexpr auto bAutoStartCapture = 0x250; // bool
		constexpr auto PrerequisiteActorId = 0x25c; // FGuid
	}

	namespace n_UPaperdollPanel { // : URootWidget
		constexpr auto m_EquipmentInventory = 0x318; // UEquipmentInventory*
		constexpr auto m_InventoryMonitor = 0x320; // UItemInventoryClientMonitor*
		constexpr auto m_CharacterToInspect = 0x328; // AConanCharacter*
	}

	namespace n_ANavLinkProxy { // : AActor
		constexpr auto PointLinks = 0x3e0; // TArray<FNavigationLink>
		constexpr auto SegmentLinks = 0x3f0; // TArray<FNavigationSegmentLink>
		constexpr auto SmartLinkComp = 0x400; // UNavLinkCustomComponent*
		constexpr auto bSmartLinkIsRelevant = 0x408; // bool
		constexpr auto OnSmartLinkReached = 0x410; // FScriptMulticastDelegate
	}

	namespace n_UAISenseConfig_Team { // : UAISenseConfig
		constexpr auto DebugColor = 0x28; // FColor
		constexpr auto MaxAge = 0x2c; // float
		constexpr auto bStartsEnabled = 0x30; // char : 1
	}

	namespace n_UMoviePlayerSettings { // : UObject
		constexpr auto bWaitForMoviesToComplete = 0x28; // bool
		constexpr auto bMoviesAreSkippable = 0x29; // bool
		constexpr auto StartupMovies = 0x30; // TArray<FString>
	}

	namespace n_URadialMenuSegment { // : URootWidget
		constexpr auto m_StartCapTexture = 0x348; // UTexture2D*
		constexpr auto m_EndCapTexture = 0x350; // UTexture2D*
	}

	namespace n_UPaperSpriteComponent { // : UMeshComponent
		constexpr auto SourceSprite = 0x7c8; // UPaperSprite*
		constexpr auto MaterialOverride = 0x7d0; // UMaterialInterface*
		constexpr auto SpriteColor = 0x7d8; // FLinearColor
	}

	namespace n_UBTDecorator_TagCooldown { // : UBTDecorator
		constexpr auto CooldownTag = 0x68; // FGameplayTag
		constexpr auto CooldownDuration = 0x70; // float
		constexpr auto bAddToExistingDuration = 0x74; // bool
		constexpr auto bActivatesCooldown = 0x75; // bool
	}

	namespace n_UMaterialExpressionFontSample { // : UMaterialExpression
		constexpr auto Font = 0x60; // UFont*
		constexpr auto FontTexturePage = 0x68; // int32_t
	}

	namespace n_UMaterialExpressionLightmapUVs { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto Desc = 0x38; // FString
		constexpr auto BorderColor = 0x48; // FColor
		constexpr auto bRealtimePreview = 0x4c; // char : 1
		constexpr auto bNeedToUpdatePreview = 0x4c; // char : 1
		constexpr auto bIsParameterExpression = 0x4c; // char : 1
		constexpr auto bCommentBubbleVisible = 0x4c; // char : 1
		constexpr auto bShowOutputNameOnPin = 0x4c; // char : 1
		constexpr auto bHidePreviewWindow = 0x4c; // char : 1
		constexpr auto bCollapsed = 0x4c; // char : 1
		constexpr auto bShaderInputData = 0x4c; // char : 1
		constexpr auto bShowInputs = 0x4c; // char : 1
		constexpr auto bShowOutputs = 0x4c; // char : 1
		constexpr auto Outputs = 0x50; // TArray<FExpressionOutput>
	}

	namespace n_UMaterialExpressionTextureProperty { // : UMaterialExpression
		constexpr auto TextureObject = 0x60; // FExpressionInput
		constexpr auto Property = 0x98; // EMaterialExposedTextureProperty
	}

	namespace n_UTableViewBase { // : UWidget
		constexpr auto bIsVariable = 0x28; // bool
		constexpr auto bCreatedByConstructionScript = 0x29; // bool
		constexpr auto Slot = 0x30; // UPanelSlot*
		constexpr auto bIsEnabled = 0x38; // bool
		constexpr auto bIsEnabledDelegate = 0x40; // DelegateProperty
		constexpr auto ToolTipText = 0x50; // FText
		constexpr auto ToolTipTextDelegate = 0x68; // DelegateProperty
		constexpr auto TooltipWidget = 0x78; // UWidget*
		constexpr auto ToolTipWidgetDelegate = 0x80; // DelegateProperty
		constexpr auto Visiblity = 0x90; // ESlateVisibility
		constexpr auto Visibility = 0x91; // ESlateVisibility
		constexpr auto VisibilityDelegate = 0x98; // DelegateProperty
		constexpr auto bOverride_Cursor = 0xa8; // char : 1
		constexpr auto Cursor = 0xac; // EMouseCursor
		constexpr auto bIsVolatile = 0xad; // bool
		constexpr auto RenderTransform = 0xb0; // FWidgetTransform
		constexpr auto RenderTransformPivot = 0xcc; // FVector2D
		constexpr auto Navigation = 0xd8; // UWidgetNavigation*
		constexpr auto NativeBindings = 0x108; // TArray<UPropertyBinding*>
	}

	namespace n_UMaterialExpressionScreenPosition { // : UMaterialExpression
		constexpr auto mapping = 0x60; // EMaterialExpressionScreenPositionMapping
	}

	namespace n_UDistributionVectorConstantCurve { // : UDistributionVector
		constexpr auto ConstantCurve = 0x38; // FInterpCurveVector
		constexpr auto bLockAxes = 0x50; // char : 1
		constexpr auto LockedAxes = 0x54; // EDistributionVectorLockFlags
	}

	namespace n_UParticleModuleLifetime_Seeded { // : UParticleModuleLifetime
		constexpr auto RandomSeedInfo = 0x68; // FParticleRandomSeedInfo
	}

	namespace n_ULoginQueueBase { // : UWindowRoot
		constexpr auto CancelButton = 0x398; // UFCButton*
		constexpr auto QueuePosition = 0x3a0; // UTextBlock*
	}

	namespace n_UMovieSceneParticleParameterTrack { // : UMovieSceneNameableTrack
		constexpr auto Sections = 0xb8; // TArray<UMovieSceneSection*>
	}

	namespace n_ULevelSequenceBurnInOptions { // : UObject
		constexpr auto bUseBurnIn = 0x28; // bool
		constexpr auto BurnInClass = 0x30; // FStringClassReference
		constexpr auto Settings = 0x40; // ULevelSequenceBurnInInitSettings*
	}

	namespace n_UAnimationSettings { // : UDeveloperSettings
		constexpr auto CompressCommandletVersion = 0x38; // int32_t
		constexpr auto KeyEndEffectorsMatchNameArray = 0x40; // TArray<FString>
		constexpr auto DefaultCompressionAlgorithm = 0x50; // UAnimCompress*
		constexpr auto RotationCompressionFormat = 0x58; // AnimationCompressionFormat
		constexpr auto TranslationCompressionFormat = 0x59; // AnimationCompressionFormat
		constexpr auto AlternativeCompressionThreshold = 0x5c; // float
		constexpr auto ForceRecompression = 0x60; // bool
		constexpr auto bOnlyCheckForMissingSkeletalMeshes = 0x61; // bool
		constexpr auto bForceBelowThreshold = 0x62; // bool
		constexpr auto bFirstRecompressUsingCurrentOrDefault = 0x63; // bool
		constexpr auto bRaiseMaxErrorToExisting = 0x64; // bool
		constexpr auto bTryFixedBitwiseCompression = 0x65; // bool
		constexpr auto bTryPerTrackBitwiseCompression = 0x66; // bool
		constexpr auto bTryLinearKeyRemovalCompression = 0x67; // bool
		constexpr auto bTryIntervalKeyRemoval = 0x68; // bool
		constexpr auto bEnablePerformanceLog = 0x69; // bool
		constexpr auto bStripAnimationDataOnDedicatedServer = 0x6a; // bool
	}

	namespace n_UW_RadialShortcutbarIconSlot_C { // : UShortcutIconBase
		constexpr auto UberGraphFrame = 0x490; // FPointerToUberGraphFrame
		constexpr auto DurabilityContainer = 0x498; // UBorder*
		constexpr auto IconSlotView = 0x4a0; // UInventoryGridSlotView_C*
		constexpr auto IconView = 0x4a8; // UInventoryIconView_C*
		constexpr auto IsActiveView = 0x4b0; // UImage*
		constexpr auto PB_Durabilty = 0x4b8; // UProgressBar*
	}

	namespace n_UMotionControllerComponent { // : UPrimitiveComponent
		constexpr auto PlayerIndex = 0x6c0; // int32_t
		constexpr auto Hand = 0x6c4; // EControllerHand
		constexpr auto bDisableLowLatencyUpdate = 0x6c8; // char : 1
		constexpr auto CurrentTrackingStatus = 0x6cc; // ETrackingStatus
	}

	namespace n_UFuncTestRenderingComponent { // : UPrimitiveComponent
		constexpr auto MinDrawDistance = 0x308; // float
		constexpr auto LDMaxDrawDistance = 0x30c; // float
		constexpr auto CachedMaxDrawDistance = 0x310; // float
		constexpr auto DepthPriorityGroup = 0x314; // ESceneDepthPriorityGroup
		constexpr auto ViewOwnerDepthPriorityGroup = 0x315; // ESceneDepthPriorityGroup
		constexpr auto bAlwaysCreatePhysicsState = 0x318; // char : 1
		constexpr auto bGenerateOverlapEvents = 0x318; // char : 1
		constexpr auto bForceGenerateOverlapEvents = 0x318; // char : 1
		constexpr auto bMultiBodyOverlap = 0x318; // char : 1
		constexpr auto bCheckAsyncSceneOnMove = 0x318; // char : 1
		constexpr auto bTraceComplexOnMove = 0x318; // char : 1
		constexpr auto bReturnMaterialOnMove = 0x318; // char : 1
		constexpr auto bUseViewOwnerDepthPriorityGroup = 0x318; // char : 1
		constexpr auto bAllowCullDistanceVolume = 0x318; // char : 1
		constexpr auto bHasMotionBlurVelocityMeshes = 0x318; // char : 1
		constexpr auto bVisibleInReflectionCaptures = 0x318; // char : 1
		constexpr auto bRenderInMainPass = 0x318; // char : 1
		constexpr auto bRenderInMono = 0x318; // char : 1
		constexpr auto bReceivesDecals = 0x318; // char : 1
		constexpr auto bOwnerNoSee = 0x318; // char : 1
		constexpr auto bOnlyOwnerSee = 0x318; // char : 1
		constexpr auto bTreatAsBackgroundForOcclusion = 0x318; // char : 1
		constexpr auto bHeightOutputReferenceSand = 0x318; // char : 1
		constexpr auto bHeightOutputReferenceWater = 0x318; // char : 1
		constexpr auto bHeightOutputIgnoreSand = 0x318; // char : 1
		constexpr auto bHeightOutputIgnoreWater = 0x318; // char : 1
		constexpr auto bCullFromDistantShadowCascades = 0x318; // char : 1
		constexpr auto bUseAsOccluder = 0x318; // char : 1
		constexpr auto bSelectable = 0x318; // char : 1
		constexpr auto bForceMipStreaming = 0x318; // char : 1
		constexpr auto bHasPerInstanceHitProxies = 0x318; // char : 1
		constexpr auto CastShadow = 0x318; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x318; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x318; // char : 1
		constexpr auto bCastDynamicShadow = 0x318; // char : 1
		constexpr auto bCastStaticShadow = 0x318; // char : 1
		constexpr auto bCastVolumetricTranslucentShadow = 0x318; // char : 1
		constexpr auto bSelfShadowOnly = 0x31c; // char : 1
		constexpr auto bCastFarShadow = 0x31c; // char : 1
		constexpr auto bCastInsetShadow = 0x31c; // char : 1
		constexpr auto bCastCinematicShadow = 0x31c; // char : 1
		constexpr auto bCastHiddenShadow = 0x31c; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x31c; // char : 1
		constexpr auto bLightAsIfStatic = 0x31c; // char : 1
		constexpr auto bLightAttachmentsAsGroup = 0x31c; // char : 1
		constexpr auto bReceiveCombinedCSMAndStaticShadowsFromStationaryLights = 0x31c; // char : 1
		constexpr auto bSingleSampleShadowFromStationaryLights = 0x31c; // char : 1
		constexpr auto bIgnoreRadialImpulse = 0x31c; // char : 1
		constexpr auto bIgnoreRadialForce = 0x31c; // char : 1
		constexpr auto AlwaysLoadOnClient = 0x31c; // char : 1
		constexpr auto AlwaysLoadOnServer = 0x31c; // char : 1
		constexpr auto bUseEditorCompositing = 0x31c; // char : 1
		constexpr auto bRenderCustomDepth = 0x31c; // char : 1
		constexpr auto IndirectLightingCacheQuality = 0x320; // EIndirectLightingCacheQuality
		constexpr auto bHasCustomNavigableGeometry = 0x321; // EHasCustomNavigableGeometry
		constexpr auto CanCharacterStepUpOn = 0x323; // ECanBeCharacterBase
		constexpr auto LightingChannels = 0x324; // FLightingChannels
		constexpr auto CustomDepthStencilValue = 0x328; // int32_t
		constexpr auto TranslucencySortPriority = 0x32c; // int32_t
		constexpr auto VisibilityId = 0x330; // int32_t
		constexpr auto LpvBiasMultiplier = 0x338; // float
		constexpr auto BodyInstance = 0x340; // FBodyInstance
		constexpr auto BoundsScale = 0x574; // float
		constexpr auto LastSubmitTime = 0x578; // float
		constexpr auto LastRenderTime = 0x57c; // float
		constexpr auto LastRenderTimeOnScreen = 0x580; // float
		constexpr auto MoveIgnoreActors = 0x588; // TArray<AActor*>
		constexpr auto MoveIgnoreComponents = 0x598; // TArray<UPrimitiveComponent*>
		constexpr auto OnComponentHit = 0x5b8; // FScriptMulticastDelegate
		constexpr auto OnComponentBeginOverlap = 0x5c8; // FScriptMulticastDelegate
		constexpr auto OnComponentEndOverlap = 0x5d8; // FScriptMulticastDelegate
		constexpr auto OnComponentWake = 0x5e8; // FScriptMulticastDelegate
		constexpr auto OnComponentSleep = 0x5f8; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x608; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x618; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x628; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x638; // FScriptMulticastDelegate
		constexpr auto LODParentPrimitive = 0x660; // UPrimitiveComponent*
		constexpr auto PostPhysicsComponentTick = 0x668; // FPrimitiveComponentPostPhysicsTickFunction
	}

	namespace n_UParticleModuleMeshMaterial { // : UParticleModuleMaterialBase
		constexpr auto MeshMaterials = 0x30; // TArray<UMaterialInterface*>
	}

	namespace n_UMaterialExpressionOneMinus { // : UMaterialExpression
		constexpr auto Input = 0x60; // FExpressionInput
	}

	namespace n_UMaterialExpressionBumpOffset { // : UMaterialExpression
		constexpr auto Coordinate = 0x60; // FExpressionInput
		constexpr auto Height = 0x98; // FExpressionInput
		constexpr auto HeightRatioInput = 0xd0; // FExpressionInput
		constexpr auto HeightRatio = 0x108; // float
		constexpr auto ReferencePlane = 0x10c; // float
		constexpr auto ConstCoordinate = 0x110; // uint32_t
	}

	namespace n_UMovieSceneEnumSection { // : UMovieSceneSection
		constexpr auto EnumCurve = 0xd0; // FIntegralCurve
	}

	namespace n_UMaterialExpressionSaturate { // : UMaterialExpression
		constexpr auto Input = 0x60; // FExpressionInput
	}

	namespace n_UNiagaraSequence { // : UMovieSceneSequence
		constexpr auto MovieScene = 0x2d8; // UMovieScene*
	}

	namespace n_UEditableGameplayTagQueryExpression_AllExprMatch { // : UEditableGameplayTagQueryExpression
		constexpr auto Expressions = 0x28; // TArray<UEditableGameplayTagQueryExpression*>
	}

	namespace n_UMovieSceneCameraAnimTrack { // : UMovieSceneNameableTrack
		constexpr auto CameraAnimSections = 0xb8; // TArray<UMovieSceneSection*>
	}

	namespace n_UConanBTService_ChangeBBBool { // : UBTService_BlackboardBase
		constexpr auto BlackboardKey = 0x70; // FBlackboardKeySelector
	}

	namespace n_UParticleModuleLifetimeBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x28; // char : 1
		constexpr auto LODDuplicate = 0x28; // char : 1
		constexpr auto bSupportsRandomSeed = 0x28; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x28; // char : 1
		constexpr auto LODValidity = 0x2c; // char
	}

	namespace n_UParticleModuleParameterBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x28; // char : 1
		constexpr auto LODDuplicate = 0x28; // char : 1
		constexpr auto bSupportsRandomSeed = 0x28; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x28; // char : 1
		constexpr auto LODValidity = 0x2c; // char
	}

	namespace n_UInterpGroupCamera { // : UInterpGroup
		constexpr auto CameraAnimInst = 0x50; // UCameraAnim*
		constexpr auto CompressTolerance = 0x58; // float
	}

	namespace n_UGameplayTask_SpawnActor { // : UGameplayTask
		constexpr auto Success = 0x68; // FScriptMulticastDelegate
		constexpr auto DidNotSpawn = 0x78; // FScriptMulticastDelegate
		constexpr auto ClassToSpawn = 0xa0; // AActor*
	}

	namespace n_ADebugCameraHUD { // : AHUD
		constexpr auto PlayerOwner = 0x3d0; // APlayerController*
		constexpr auto bLostFocusPaused = 0x3d8; // char : 1
		constexpr auto bShowHUD = 0x3d8; // char : 1
		constexpr auto bShowDebugInfo = 0x3d8; // char : 1
		constexpr auto bShowHitBoxDebugInfo = 0x3d8; // char : 1
		constexpr auto bShowOverlays = 0x3d8; // char : 1
		constexpr auto bEnableDebugTextShadow = 0x3d8; // char : 1
		constexpr auto PostRenderedActors = 0x3e0; // TArray<AActor*>
		constexpr auto DebugDisplay = 0x3f8; // TArray<FName>
		constexpr auto ToggledDebugCategories = 0x408; // TArray<FName>
		constexpr auto Canvas = 0x418; // UCanvas*
		constexpr auto DebugCanvas = 0x420; // UCanvas*
		constexpr auto DebugTextList = 0x428; // TArray<FDebugTextInfo>
		constexpr auto ShowDebugTargetDesiredClass = 0x438; // AActor*
		constexpr auto ShowDebugTargetActor = 0x440; // AActor*
	}

	namespace n_UBuildingBoundsComponent { // : USceneComponent
		constexpr auto AttachParent = 0xf8; // USceneComponent*
		constexpr auto AttachChildren = 0x100; // TArray<USceneComponent*>
		constexpr auto ClientAttachedChildren = 0x110; // TSet<USceneComponent*>
		constexpr auto AttachSocketName = 0x160; // FName
		constexpr auto bWorldToComponentUpdated = 0x168; // char : 1
		constexpr auto bAbsoluteLocation = 0x168; // char : 1
		constexpr auto bAbsoluteRotation = 0x168; // char : 1
		constexpr auto bAbsoluteScale = 0x168; // char : 1
		constexpr auto bVisible = 0x168; // char : 1
		constexpr auto bHiddenInGame = 0x168; // char : 1
		constexpr auto bShouldUpdatePhysicsVolume = 0x168; // char : 1
		constexpr auto bBoundsChangeTriggersStreamingDataRebuild = 0x168; // char : 1
		constexpr auto bUseAttachParentBound = 0x168; // char : 1
		constexpr auto bShouldDisregardChildComponentsForNavigationUpdates = 0x168; // char : 1
		constexpr auto bShouldDisregardAttachedActorsForNavigationUpdates = 0x168; // char : 1
		constexpr auto Mobility = 0x16d; // EComponentMobility
		constexpr auto DetailMode = 0x16e; // EDetailMode
		constexpr auto PhysicsVolume = 0x170; // TWeakObjectPtr<APhysicsVolume>
		constexpr auto RelativeLocation = 0x1f0; // FVector
		constexpr auto RelativeRotation = 0x1fc; // FRotator
		constexpr auto RelativeScale3D = 0x230; // FVector
		constexpr auto ComponentVelocity = 0x258; // FVector
		constexpr auto PhysicsVolumeChangedDelegate = 0x268; // FScriptMulticastDelegate
	}

	namespace n_UGraniteTileSet { // : UObject
		constexpr auto GTSFileName = 0x28; // FString
		constexpr auto LODBias = 0x38; // float
		constexpr auto TranscoderQuality = 0x3c; // EGraniteTranscoderQuality
		constexpr auto NumberOfMipsToPrefetch = 0x40; // int32_t
		constexpr auto NumberOfMipsToPin = 0x44; // int32_t
		constexpr auto NumLayers = 0x48; // uint32_t
		constexpr auto NumTextures = 0x4c; // uint32_t
		constexpr auto gpuCacheGroup = 0x50; // EGraniteGPUCacheGroup
	}

	namespace n_UAIResource_Logic { // : UGameplayTaskResource
		constexpr auto ManualResourceID = 0x28; // int32_t
		constexpr auto AutoResourceID = 0x2c; // uint8_t
		constexpr auto bManuallySetID = 0x30; // char : 1
	}

	namespace n_UGameSessionSettings { // : UObject
		constexpr auto MaxSpectators = 0x28; // int32_t
		constexpr auto MaxPlayers = 0x2c; // int32_t
		constexpr auto bRequiresPushToTalk = 0x30; // char : 1
	}

	namespace n_UNavigationQueryFilter { // : UObject
		constexpr auto Areas = 0x28; // TArray<FNavigationFilterArea>
		constexpr auto IncludeFlags = 0x38; // FNavigationFilterFlags
		constexpr auto ExcludeFlags = 0x3c; // FNavigationFilterFlags
	}

	namespace n_UParticleModuleAttractorBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x28; // char : 1
		constexpr auto LODDuplicate = 0x28; // char : 1
		constexpr auto bSupportsRandomSeed = 0x28; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x28; // char : 1
		constexpr auto LODValidity = 0x2c; // char
	}

	namespace n_UBTTask_PlayAnimation { // : UBTTaskNode
		constexpr auto AnimationToPlay = 0x70; // UAnimationAsset*
		constexpr auto bLooping = 0x78; // char : 1
		constexpr auto bNonBlocking = 0x78; // char : 1
		constexpr auto MyOwnerComp = 0x80; // UBehaviorTreeComponent*
		constexpr auto CachedSkelMesh = 0x88; // USkeletalMeshComponent*
	}

	namespace n_UMaterialExpressionLandscapeLayerSwitch { // : UMaterialExpression
		constexpr auto LayerUsed = 0x60; // FExpressionInput
		constexpr auto LayerNotUsed = 0x98; // FExpressionInput
		constexpr auto ParameterName = 0xd0; // FName
		constexpr auto PreviewUsed = 0xd8; // char : 1
		constexpr auto ExpressionGUID = 0xdc; // FGuid
	}

	namespace n_UServerRentalRequestConnection { // : UObject
		constexpr auto OnRequestCreateServerComplete = 0x98; // FScriptMulticastDelegate
	}

	namespace n_UBlackboardKeyType_Class { // : UBlackboardKeyType
		constexpr auto BaseClass = 0x30; // UObject*
	}

	namespace n_UMovieSceneByteSection { // : UMovieSceneSection
		constexpr auto ByteCurve = 0xd0; // FIntegralCurve
	}

	namespace n_ACorpseBase { // : AActor
		constexpr auto DisplayName = 0x3f0; // FText
		constexpr auto DeadPlayerID = 0x408; // UUniqueID*
		constexpr auto CorpseOwnerID = 0x410; // UUniqueID*
		constexpr auto ItemEquipSlotMap = 0x418; // FItemEquipSlotMap
	}

	namespace n_UCharacterInventoryView { // : UExternalInventoryView
		constexpr auto CanItemBeDropedOn = 0x318; // bool
		constexpr auto SignalCouldNotDrop = 0x320; // FScriptMulticastDelegate
		constexpr auto DelegateGetTargetInventory = 0x330; // DelegateProperty
		constexpr auto m_Actor = 0x370; // AActor*
		constexpr auto m_Inventory = 0x378; // UItemInventory*
		constexpr auto m_TargetInventory = 0x380; // UItemInventory*
	}

	namespace n_UActorSequenceComponent { // : UActorComponent
		constexpr auto PlaybackSettings = 0xf8; // FMovieSceneSequencePlaybackSettings
		constexpr auto Sequence = 0x120; // UActorSequence*
		constexpr auto SequencePlayer = 0x128; // UActorSequencePlayer*
		constexpr auto bAutoPlay = 0x130; // bool
	}

	namespace n_UHorizontalBox { // : UPanelWidget
		constexpr auto Slots = 0x118; // TArray<UPanelSlot*>
	}

	namespace n_UActorComponent { // : UObject
		constexpr auto PrimaryComponentTick = 0x30; // FActorComponentTickFunction
		constexpr auto ComponentTags = 0x88; // TArray<FName>
		constexpr auto AssetUserData = 0x98; // TArray<UAssetUserData*>
		constexpr auto bReplicates = 0xa8; // char : 1
		constexpr auto bIsClientOnly = 0xa8; // char : 1
		constexpr auto bNetAddressable = 0xa8; // char : 1
		constexpr auto bAllowAnyoneToDestroyMe = 0xa8; // char : 1
		constexpr auto bCreatedByConstructionScript = 0xa8; // char : 1
		constexpr auto bInstanceComponent = 0xa8; // char : 1
		constexpr auto bAutoActivate = 0xa8; // char : 1
		constexpr auto bIsActive = 0xa8; // char : 1
		constexpr auto bEditableWhenInherited = 0xa8; // char : 1
		constexpr auto bCanEverAffectNavigation = 0xa8; // char : 1
		constexpr auto bIsEditorOnly = 0xa8; // char : 1
		constexpr auto CreationMethod = 0xb1; // EComponentCreationMethod
		constexpr auto UCSModifiedProperties = 0xc0; // TArray<FSimpleMemberReference>
		constexpr auto OnComponentActivated = 0xd0; // FScriptMulticastDelegate
		constexpr auto OnComponentDeactivated = 0xe0; // FScriptMulticastDelegate
	}

	namespace n_UParticleModuleColor_Seeded { // : UParticleModuleColor
		constexpr auto RandomSeedInfo = 0xc0; // FParticleRandomSeedInfo
	}

	namespace n_UMaterialExpressionDecalDerivative { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto Desc = 0x38; // FString
		constexpr auto BorderColor = 0x48; // FColor
		constexpr auto bRealtimePreview = 0x4c; // char : 1
		constexpr auto bNeedToUpdatePreview = 0x4c; // char : 1
		constexpr auto bIsParameterExpression = 0x4c; // char : 1
		constexpr auto bCommentBubbleVisible = 0x4c; // char : 1
		constexpr auto bShowOutputNameOnPin = 0x4c; // char : 1
		constexpr auto bHidePreviewWindow = 0x4c; // char : 1
		constexpr auto bCollapsed = 0x4c; // char : 1
		constexpr auto bShaderInputData = 0x4c; // char : 1
		constexpr auto bShowInputs = 0x4c; // char : 1
		constexpr auto bShowOutputs = 0x4c; // char : 1
		constexpr auto Outputs = 0x50; // TArray<FExpressionOutput>
	}

	namespace n_UTexture2DDynamic { // : UTexture
		constexpr auto Format = 0xd0; // EPixelFormat
	}

	namespace n_UMaterialExpressionTwoSidedSign { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto Desc = 0x38; // FString
		constexpr auto BorderColor = 0x48; // FColor
		constexpr auto bRealtimePreview = 0x4c; // char : 1
		constexpr auto bNeedToUpdatePreview = 0x4c; // char : 1
		constexpr auto bIsParameterExpression = 0x4c; // char : 1
		constexpr auto bCommentBubbleVisible = 0x4c; // char : 1
		constexpr auto bShowOutputNameOnPin = 0x4c; // char : 1
		constexpr auto bHidePreviewWindow = 0x4c; // char : 1
		constexpr auto bCollapsed = 0x4c; // char : 1
		constexpr auto bShaderInputData = 0x4c; // char : 1
		constexpr auto bShowInputs = 0x4c; // char : 1
		constexpr auto bShowOutputs = 0x4c; // char : 1
		constexpr auto Outputs = 0x50; // TArray<FExpressionOutput>
	}

	namespace n_AFunctionalTestGameMode { // : AGameModeBase
		constexpr auto OptionsString = 0x3d0; // FString
		constexpr auto GameSessionClass = 0x3e0; // AGameSession*
		constexpr auto GameStateClass = 0x3e8; // AGameStateBase*
		constexpr auto PlayerControllerClass = 0x3f0; // APlayerController*
		constexpr auto PlayerStateClass = 0x3f8; // APlayerState*
		constexpr auto HUDClass = 0x400; // AHUD*
		constexpr auto DefaultPawnClass = 0x408; // APawn*
		constexpr auto SpectatorClass = 0x410; // ASpectatorPawn*
		constexpr auto ReplaySpectatorPlayerControllerClass = 0x418; // APlayerController*
		constexpr auto GameSession = 0x420; // AGameSession*
		constexpr auto GameState = 0x428; // AGameStateBase*
		constexpr auto DefaultPlayerName = 0x430; // FText
		constexpr auto bUseSeamlessTravel = 0x448; // char : 1
		constexpr auto bStartPlayersAsSpectators = 0x448; // char : 1
		constexpr auto bPauseable = 0x448; // char : 1
		constexpr auto LoginQueueTimer = 0x480; // FTimerHandle
		constexpr auto DisconnectionGraceTimer = 0x488; // FTimerHandle
	}

	namespace n_UEnergyHeatmapData { // : UObject
		constexpr auto SourceTexture = 0x28; // UTexture2D*
		constexpr auto HeatmapData = 0x48; // TArray<char>
		constexpr auto Width = 0x58; // int32_t
		constexpr auto Height = 0x5c; // int32_t
		constexpr auto TileWidth = 0x60; // int32_t
		constexpr auto TileHeight = 0x64; // int32_t
		constexpr auto NeighborsPrefetchDepth = 0x68; // int32_t
		constexpr auto SecondsBeforeUnloadingTile = 0x6c; // int32_t
	}

	namespace n_URecipeManager { // : UItemInventory
		constexpr auto SignalItemCrafted = 0x348; // FScriptMulticastDelegate
		constexpr auto SignalRecipeExecuted = 0x358; // FScriptMulticastDelegate
	}

	namespace n_ATriggerVolume { // : AVolume
		constexpr auto BrushType = 0x3d0; // EBrushType
		constexpr auto BrushColor = 0x3d4; // FColor
		constexpr auto PolyFlags = 0x3d8; // int32_t
		constexpr auto bColored = 0x3dc; // char : 1
		constexpr auto bSolidWhenSelected = 0x3dc; // char : 1
		constexpr auto bPlaceableFromClassBrowser = 0x3dc; // char : 1
		constexpr auto bNotForClientOrServer = 0x3dc; // char : 1
		constexpr auto Brush = 0x3e0; // UModel*
		constexpr auto BrushComponent = 0x3e8; // UBrushComponent*
		constexpr auto bInManipulation = 0x3f0; // char : 1
		constexpr auto SavedSelections = 0x3f8; // TArray<FGeomSelection>
	}

	namespace n_UBlackboardKeyType_String { // : UBlackboardKeyType
		constexpr auto StringValue = 0x30; // FString
	}

	namespace n_UNavigationGraphNodeComponent { // : USceneComponent
		constexpr auto Node = 0x300; // FNavGraphNode
		constexpr auto NextNodeComponent = 0x318; // UNavigationGraphNodeComponent*
		constexpr auto PrevNodeComponent = 0x320; // UNavigationGraphNodeComponent*
	}

	namespace n_AConanGameState { // : ADWGameState
		constexpr auto CharacterLodSystem = 0x4b0; // ACharacterLodSystem*
		constexpr auto ServerGameTweaks = 0x4b8; // TArray<FServerGameTweakValue>
		constexpr auto SignalGuildReplicated = 0x510; // FScriptMulticastDelegate
		constexpr auto IsServerDedicated = 0x520; // bool
		constexpr auto IsServerOfficial = 0x521; // bool
		constexpr auto ServerTimezoneHours = 0x524; // int32_t
		constexpr auto PlayerHealthMultiplier = 0x528; // float
		constexpr auto PlayerStaminaMultiplier = 0x52c; // float
		constexpr auto KickAFKPlayersEnabled = 0x530; // bool
		constexpr auto UseListenServerHostPlayerLocation = 0x531; // char : 1
		constexpr auto ListenServerHostPlayerLocation = 0x534; // FVector
		constexpr auto UserSettingsEventDispatcher = 0x540; // USettingsEventDispatchers*
		constexpr auto CharactersSecondTick = 0x548; // TArray<AConanCharacter*>
		constexpr auto FloatServerRuntime = 0x600; // float
		constexpr auto m_ChatCommandHelper = 0x608; // UChatCommandHelper*
		constexpr auto GuildList = 0x610; // TArray<AGuild*>
		constexpr auto m_PendingMinionCleanups = 0x620; // TMap<int64_t, FTimerHandle>
		constexpr auto m_SpawnDataTable = 0x688; // UDataTable*
		constexpr auto m_AIDataTable = 0x690; // UDataTable*
		constexpr auto m_DungeonLocations = 0x698; // UDataTable*
		constexpr auto m_MountMovementRates = 0x6a0; // UDataTable*
		constexpr auto m_CachedEmoteCategories = 0x6a8; // TMap<EEmoteCategories, FEmotesMenuCategoryNode>
		constexpr auto ServerSettingsClass = 0x6f8; // AServerSettings*
		constexpr auto ReplicatedIds = 0x700; // TArray<UUniqueID*>
		constexpr auto ServerSettings = 0x710; // AServerSettings*
		constexpr auto m_VaultManager = 0x10b0; // AVaultManager*
		constexpr auto ListenServerWorldIsLoaded = 0x10c8; // char : 1
		constexpr auto SecondTickingCharacters = 0x1258; // TArray<AConanCharacter*>
	}

	namespace n_UNavRelevantComponent { // : UActorComponent
		constexpr auto bAttachToOwnersRoot = 0x11c; // char : 1
		constexpr auto CachedNavParent = 0x120; // UObject*
	}

	namespace n_UParticleLODLevel { // : UObject
		constexpr auto Level = 0x28; // int32_t
		constexpr auto bEnabled = 0x2c; // char : 1
		constexpr auto RequiredModule = 0x30; // UParticleModuleRequired*
		constexpr auto Modules = 0x38; // TArray<UParticleModule*>
		constexpr auto TypeDataModule = 0x48; // UParticleModuleTypeDataBase*
		constexpr auto SpawnModule = 0x50; // UParticleModuleSpawn*
		constexpr auto EventGenerator = 0x58; // UParticleModuleEventGenerator*
		constexpr auto SpawningModules = 0x60; // TArray<UParticleModuleSpawnBase*>
		constexpr auto SpawnModules = 0x70; // TArray<UParticleModule*>
		constexpr auto UpdateModules = 0x80; // TArray<UParticleModule*>
		constexpr auto OrbitModules = 0x90; // TArray<UParticleModuleOrbit*>
		constexpr auto EventReceiverModules = 0xa0; // TArray<UParticleModuleEventReceiverBase*>
		constexpr auto ConvertedModules = 0xb0; // char : 1
		constexpr auto PeakActiveParticles = 0xb4; // int32_t
	}

	namespace n_UCheckBox { // : UContentWidget
		constexpr auto CheckedState = 0x130; // ECheckBoxState
		constexpr auto CheckedStateDelegate = 0x138; // DelegateProperty
		constexpr auto WidgetStyle = 0x148; // FCheckBoxStyle
		constexpr auto Style = 0x728; // USlateWidgetStyleAsset*
		constexpr auto UncheckedImage = 0x730; // USlateBrushAsset*
		constexpr auto UncheckedHoveredImage = 0x738; // USlateBrushAsset*
		constexpr auto UncheckedPressedImage = 0x740; // USlateBrushAsset*
		constexpr auto CheckedImage = 0x748; // USlateBrushAsset*
		constexpr auto CheckedHoveredImage = 0x750; // USlateBrushAsset*
		constexpr auto CheckedPressedImage = 0x758; // USlateBrushAsset*
		constexpr auto UndeterminedImage = 0x760; // USlateBrushAsset*
		constexpr auto UndeterminedHoveredImage = 0x768; // USlateBrushAsset*
		constexpr auto UndeterminedPressedImage = 0x770; // USlateBrushAsset*
		constexpr auto HorizontalAlignment = 0x778; // EHorizontalAlignment
		constexpr auto Padding = 0x77c; // FMargin
		constexpr auto BorderBackgroundColor = 0x790; // FSlateColor
		constexpr auto IsFocusable = 0x7b8; // bool
		constexpr auto OnCheckStateChanged = 0x7c0; // FScriptMulticastDelegate
	}

	namespace n_UAnimSequenceBase { // : UAnimationAsset
		constexpr auto Notifies = 0x78; // TArray<FAnimNotifyEvent>
		constexpr auto SequenceLength = 0x88; // float
		constexpr auto RateScale = 0x8c; // float
		constexpr auto RawCurveData = 0x90; // FRawCurveTracks
	}

	namespace n_USmokeTestCommandlet { // : UCommandlet
		constexpr auto HelpDescription = 0x28; // FString
		constexpr auto HelpUsage = 0x38; // FString
		constexpr auto HelpWebLink = 0x48; // FString
		constexpr auto HelpParamNames = 0x58; // TArray<FString>
		constexpr auto HelpParamDescriptions = 0x68; // TArray<FString>
		constexpr auto IsServer = 0x78; // char : 1
		constexpr auto IsClient = 0x78; // char : 1
		constexpr auto IsEditor = 0x78; // char : 1
		constexpr auto LogToConsole = 0x78; // char : 1
		constexpr auto ShowErrorCount = 0x78; // char : 1
	}

	namespace n_ABuildableBase { // : AActor
		constexpr auto SourceItemTemplateID = 0x3e8; // int32_t
		constexpr auto IsABrush = 0x3ec; // bool
		constexpr auto CanBypassBuildingBlockerVolumes = 0x3ed; // bool
		constexpr auto IsSnappedToSocket = 0x3ee; // bool
		constexpr auto RequiresForcedGhostRefresh = 0x3ef; // bool
		constexpr auto m_PlacementHelper = 0x3f0; // ABuildableBase*
		constexpr auto BuildSockets = 0x3f8; // UBuildingSocketComponent*
		constexpr auto TargetSocketTypes = 0x400; // TArray<EBuildingSocketType>
		constexpr auto MaxHealth = 0x410; // int32_t
		constexpr auto CurrentHealth = 0x414; // int32_t
		constexpr auto AffectedByDamageTiers = 0x418; // int32_t
		constexpr auto ClaimRadiusBuilding = 0x41c; // float
		constexpr auto ClaimRadiusFoliage = 0x420; // float
		constexpr auto EnforceLandclaim = 0x424; // bool
		constexpr auto ClaimLocation = 0x428; // FVector
		constexpr auto templateID = 0x434; // int32_t
		constexpr auto ConanWorldSettings = 0x438; // AConanWorldSettings*
		constexpr auto OwnerUniqueID = 0x440; // UUniqueID*
		constexpr auto SignalBuildableNameChanged = 0x448; // FScriptMulticastDelegate
		constexpr auto m_MasterBuildable = 0x458; // ABuildableBase*
		constexpr auto BuildingPieceScore = 0x470; // int32_t
		constexpr auto BuildingScore = 0x474; // int32_t
		constexpr auto m_SocketlessConnections = 0x478; // TArray<FSocketlessConnection>
		constexpr auto bIsStabilityLostDelayed = 0x488; // bool
		constexpr auto m_IsStaticBuildable = 0x489; // bool
		constexpr auto DecayDisabled = 0x48c; // bool
		constexpr auto DecayState = 0x490; // int32_t
		constexpr auto DecayTimestamp = 0x498; // float
		constexpr auto SignalReceivedOwnerUniqueID = 0x4a0; // FScriptMulticastDelegate
		constexpr auto m_HealthPool = 0x4b0; // TArray<FBuildableHealthEntry>
		constexpr auto LastCanBePlacedOverlapResults = 0x4c0; // TArray<FHitResult>
		constexpr auto ValidSocketRotations = 0x4d0; // TArray<ESocketConfiguration>
		constexpr auto TargetSocketTypesMask = 0x4e0; // int32_t
		constexpr auto m_OwnerId = 0x4e8; // FUniqueNetIdRepl
		constexpr auto m_OwnerName = 0x500; // FText
		constexpr auto m_BuildableName = 0x518; // FText
		constexpr auto m_AILODComponent = 0x530; // UAILODComponent*
	}

	namespace n_UConanCharacterMovementComponent { // : UCharacterMovementComponent
		constexpr auto DoubleJumpZVelocity = 0x7a8; // float
		constexpr auto CurrentWall = 0x7b0; // FFindFloorResult
		constexpr auto ClimbDirection = 0x848; // float
		constexpr auto ClimbingDamageClass = 0x850; // UDamageType*
		constexpr auto ClimbingDamageCooldown = 0x858; // float
		constexpr auto SlidingPassiveFriction = 0x85c; // float
		constexpr auto SlidingActiveFriction = 0x860; // float
		constexpr auto IsInSlidingMode = 0x864; // bool
		constexpr auto HangingFromCeiling = 0x865; // bool
		constexpr auto MaxReachUpHeight = 0x868; // float
		constexpr auto HoldToClimb = 0x86c; // bool
		constexpr auto HoldingClimbButtonTime = 0x870; // float
		constexpr auto SignalClimbingFromCeilingChanged = 0x878; // FScriptMulticastDelegate
		constexpr auto SignalEdgeTransitionTriggered = 0x888; // FScriptMulticastDelegate
		constexpr auto SignalKnockbackRagdollingStart = 0x898; // FScriptMulticastDelegate
		constexpr auto ServerKnockbackFloorTraceDist = 0x8a8; // float
		constexpr auto ClientKnockbackFloorTraceDist = 0x8ac; // float
		constexpr auto KnockbackAnimationMaxDuration = 0x8b0; // float
		constexpr auto KnockdownSlideSqrVelocityThreshold = 0x8b4; // float
		constexpr auto KnockdownSlideFrictionFactor = 0x8b8; // float
		constexpr auto SignalCanGetUpFromKnockback = 0x8c0; // FScriptMulticastDelegate
		constexpr auto CanGetUpFromKnockback = 0x8d0; // bool
		constexpr auto KnockbackEndMinDelay = 0x8d4; // float
		constexpr auto KnockbackDuration = 0x8d8; // float
		constexpr auto FallOnKnockbackEnd = 0x8dc; // bool
		constexpr auto KnockbackAllowRagdolling = 0x8dd; // bool
		constexpr auto UseSteering = 0x8de; // bool
		constexpr auto m_KnockbackStage = 0x8df; // EKnockbackStage
		constexpr auto MovementDetectionThreshold = 0x8e0; // float
	}

	namespace n_UMovieSceneBoolTrack { // : UMovieScenePropertyTrack
		constexpr auto PropertyName = 0xb8; // FName
		constexpr auto PropertyPath = 0xc0; // FString
		constexpr auto Sections = 0xd0; // TArray<UMovieSceneSection*>
	}

	namespace n_ABlockingVolume { // : AVolume
		constexpr auto BrushType = 0x3d0; // EBrushType
		constexpr auto BrushColor = 0x3d4; // FColor
		constexpr auto PolyFlags = 0x3d8; // int32_t
		constexpr auto bColored = 0x3dc; // char : 1
		constexpr auto bSolidWhenSelected = 0x3dc; // char : 1
		constexpr auto bPlaceableFromClassBrowser = 0x3dc; // char : 1
		constexpr auto bNotForClientOrServer = 0x3dc; // char : 1
		constexpr auto Brush = 0x3e0; // UModel*
		constexpr auto BrushComponent = 0x3e8; // UBrushComponent*
		constexpr auto bInManipulation = 0x3f0; // char : 1
		constexpr auto SavedSelections = 0x3f8; // TArray<FGeomSelection>
	}

	namespace n_UShortcutBarInventory { // : UItemInventory
		constexpr auto SignalItemsRequestedFromClient = 0x170; // FScriptMulticastDelegate
		constexpr auto SignalInventoryRecivedOnClient = 0x180; // FScriptMulticastDelegate
		constexpr auto SignalItemAdded = 0x190; // FScriptMulticastDelegate
		constexpr auto SignalItemRemoved = 0x1a0; // FScriptMulticastDelegate
		constexpr auto SignalItemIntStatChanged = 0x1b0; // FScriptMulticastDelegate
		constexpr auto SignalItemFloatStatChanged = 0x1c0; // FScriptMulticastDelegate
		constexpr auto DelegateCanBeDropped = 0x1d0; // DelegateProperty
		constexpr auto SignalCannotMoveItem = 0x1e0; // FScriptMulticastDelegate
		constexpr auto ItemList = 0x1f0; // TArray<UGameItem*>
		constexpr auto bReplicatesToEveryone = 0x200; // bool
		constexpr auto inventoryType = 0x201; // EInventoryType
		constexpr auto MaxItemCount = 0x204; // int32_t
		constexpr auto PerishModifier = 0x208; // float
		constexpr auto ItemPerishModifiers = 0x210; // TMap<int32_t, float>
		constexpr auto UseWhiteList = 0x260; // bool
		constexpr auto BlackWhiteList = 0x268; // TArray<int32_t>
		constexpr auto LootContainerClass = 0x2c8; // ALootContainer*
		constexpr auto m_ConfigCategoryName = 0x2d0; // FString
	}

	namespace n_UParticleModuleVectorFieldGlobal { // : UParticleModuleVectorFieldBase
		constexpr auto bOverrideGlobalVectorFieldTightness = 0x30; // char : 1
		constexpr auto GlobalVectorFieldScale = 0x34; // float
		constexpr auto GlobalVectorFieldTightness = 0x38; // float
	}

	namespace n_USlateBrushAsset { // : UObject
		constexpr auto Brush = 0x28; // FSlateBrush
	}

	namespace n_ABrushShape { // : ABrush
		constexpr auto BrushType = 0x3d0; // EBrushType
		constexpr auto BrushColor = 0x3d4; // FColor
		constexpr auto PolyFlags = 0x3d8; // int32_t
		constexpr auto bColored = 0x3dc; // char : 1
		constexpr auto bSolidWhenSelected = 0x3dc; // char : 1
		constexpr auto bPlaceableFromClassBrowser = 0x3dc; // char : 1
		constexpr auto bNotForClientOrServer = 0x3dc; // char : 1
		constexpr auto Brush = 0x3e0; // UModel*
		constexpr auto BrushComponent = 0x3e8; // UBrushComponent*
		constexpr auto bInManipulation = 0x3f0; // char : 1
		constexpr auto SavedSelections = 0x3f8; // TArray<FGeomSelection>
	}

	namespace n_ALODActor { // : AActor
		constexpr auto StaticMeshComponent = 0x3d0; // UStaticMeshComponent*
		constexpr auto SubActors = 0x3d8; // TArray<AActor*>
		constexpr auto LODDrawDistance = 0x3e8; // float
		constexpr auto LodLevel = 0x3ec; // int32_t
		constexpr auto SubObjects = 0x3f0; // TArray<UObject*>
	}

	namespace n_UProjectileMovementComponent { // : UMovementComponent
		constexpr auto InitialSpeed = 0x150; // float
		constexpr auto MaxSpeed = 0x154; // float
		constexpr auto bRotationFollowsVelocity = 0x158; // char : 1
		constexpr auto bShouldBounce = 0x158; // char : 1
		constexpr auto bInitialVelocityInLocalSpace = 0x158; // char : 1
		constexpr auto bForceSubStepping = 0x158; // char : 1
		constexpr auto bIsHomingProjectile = 0x158; // char : 1
		constexpr auto bBounceAngleAffectsFriction = 0x158; // char : 1
		constexpr auto bIsSliding = 0x158; // char : 1
		constexpr auto PreviousHitTime = 0x15c; // float
		constexpr auto PreviousHitNormal = 0x160; // FVector
		constexpr auto ProjectileGravityScale = 0x16c; // float
		constexpr auto Buoyancy = 0x170; // float
		constexpr auto Bounciness = 0x174; // float
		constexpr auto Friction = 0x178; // float
		constexpr auto BounceVelocityStopSimulatingThreshold = 0x17c; // float
		constexpr auto OnProjectileBounce = 0x180; // FScriptMulticastDelegate
		constexpr auto OnProjectileStop = 0x190; // FScriptMulticastDelegate
		constexpr auto HomingAccelerationMagnitude = 0x1a0; // float
		constexpr auto HomingTargetComponent = 0x1a4; // TWeakObjectPtr<USceneComponent>
		constexpr auto MaxSimulationTimeStep = 0x1ac; // float
		constexpr auto MaxSimulationIterations = 0x1b0; // int32_t
	}

	namespace n_UWidget { // : UVisual
		constexpr auto bIsVariable = 0x28; // bool
		constexpr auto bCreatedByConstructionScript = 0x29; // bool
		constexpr auto Slot = 0x30; // UPanelSlot*
		constexpr auto bIsEnabled = 0x38; // bool
		constexpr auto bIsEnabledDelegate = 0x40; // DelegateProperty
		constexpr auto ToolTipText = 0x50; // FText
		constexpr auto ToolTipTextDelegate = 0x68; // DelegateProperty
		constexpr auto TooltipWidget = 0x78; // UWidget*
		constexpr auto ToolTipWidgetDelegate = 0x80; // DelegateProperty
		constexpr auto Visiblity = 0x90; // ESlateVisibility
		constexpr auto Visibility = 0x91; // ESlateVisibility
		constexpr auto VisibilityDelegate = 0x98; // DelegateProperty
		constexpr auto bOverride_Cursor = 0xa8; // char : 1
		constexpr auto Cursor = 0xac; // EMouseCursor
		constexpr auto bIsVolatile = 0xad; // bool
		constexpr auto RenderTransform = 0xb0; // FWidgetTransform
		constexpr auto RenderTransformPivot = 0xcc; // FVector2D
		constexpr auto Navigation = 0xd8; // UWidgetNavigation*
		constexpr auto NativeBindings = 0x108; // TArray<UPropertyBinding*>
	}

	namespace n_UMovieSceneStringTrack { // : UMovieScenePropertyTrack
		constexpr auto PropertyName = 0xb8; // FName
		constexpr auto PropertyPath = 0xc0; // FString
		constexpr auto Sections = 0xd0; // TArray<UMovieSceneSection*>
	}

	namespace n_UEmoteItem { // : UGameItem
		constexpr auto SignalIntStatChanged = 0x30; // FScriptMulticastDelegate
		constexpr auto SignalFloatStatChanged = 0x40; // FScriptMulticastDelegate
		constexpr auto SignalEnableStateChanged = 0x50; // FScriptMulticastDelegate
		constexpr auto SignalForceUnequip = 0x60; // FScriptMulticastDelegate
		constexpr auto SignalIconChanged = 0x70; // FScriptMulticastDelegate
		constexpr auto SignalIconLayersChanged = 0x80; // FScriptMulticastDelegate
		constexpr auto SignalColorChanged = 0x90; // FScriptMulticastDelegate
		constexpr auto SignalBorderChanged = 0xa0; // FScriptMulticastDelegate
		constexpr auto SignalVisualMeshLoaded = 0xb0; // FScriptMulticastDelegate
		constexpr auto SignalRepairCompleted = 0xc0; // FScriptMulticastDelegate
		constexpr auto SignalVisualObjectClassLoaded = 0xd0; // FScriptMulticastDelegate
		constexpr auto StatModifications = 0xe0; // TArray<FGameItemStatModification>
		constexpr auto ActualDestructibleMesh = 0x100; // UDestructibleMesh*
		constexpr auto VisualActor = 0x108; // AInventoryItemBase*
		constexpr auto OwnerActor = 0x110; // AActor*
		constexpr auto RepairPercentPerTick = 0x118; // float
		constexpr auto m_MapMarkerIconID = 0x11c; // int32_t
		constexpr auto templateID = 0x120; // int32_t
		constexpr auto m_ActualIcon = 0x130; // UTexture2D*
		constexpr auto m_ActualLayeredIcons = 0x138; // TArray<UTexture2D*>
		constexpr auto m_BorderIcon = 0x148; // UTexture2D*
		constexpr auto VisualObjectClass = 0x200; // UObject*
		constexpr auto m_OwnerInventory = 0x208; // UItemInventory*
		constexpr auto m_IsEnabled = 0x244; // bool
		constexpr auto CanUseWhileClimbing = 0x246; // bool
		constexpr auto TypeID = 0x247; // EGameItemType
	}

	namespace n_UOverlay { // : UPanelWidget
		constexpr auto Slots = 0x118; // TArray<UPanelSlot*>
	}

	namespace n_AEmitterCameraLensEffectBase { // : AEmitter
		constexpr auto PS_CameraEffect = 0x420; // UParticleSystem*
		constexpr auto PS_CameraEffectNonExtremeContent = 0x428; // UParticleSystem*
		constexpr auto BaseCamera = 0x430; // APlayerCameraManager*
		constexpr auto RelativeTransform = 0x440; // FTransform
		constexpr auto BaseFOV = 0x470; // float
		constexpr auto bAllowMultipleInstances = 0x474; // char : 1
		constexpr auto bResetWhenRetriggered = 0x474; // char : 1
		constexpr auto EmittersToTreatAsSame = 0x478; // TArray<AEmitterCameraLensEffectBase*>
		constexpr auto DistFromCamera = 0x488; // float
	}

	namespace n_UParticleModuleAccelerationDragScaleOverLife { // : UParticleModuleAccelerationBase
		constexpr auto DragScale = 0x38; // UDistributionFloat*
		constexpr auto DragScaleRaw = 0x40; // FRawDistributionFloat
	}

	namespace n_AWheeledVehicle { // : APawn
		constexpr auto Mesh = 0x430; // USkeletalMeshComponent*
		constexpr auto VehicleMovement = 0x438; // UWheeledVehicleMovementComponent*
	}

	namespace n_UAIPerceptionSystem { // : UObject
		constexpr auto Senses = 0x80; // TArray<UAISense*>
		constexpr auto PerceptionAgingRate = 0x90; // float
	}

	namespace n_UWidgetInteractionComponent { // : USceneComponent
		constexpr auto OnHoveredWidgetChanged = 0x300; // FScriptMulticastDelegate
		constexpr auto VirtualUserIndex = 0x320; // int32_t
		constexpr auto PointerIndex = 0x324; // float
		constexpr auto TraceChannel = 0x328; // ECollisionChannel
		constexpr auto InteractionDistance = 0x32c; // float
		constexpr auto InteractionSource = 0x330; // EWidgetInteractionSource
		constexpr auto bEnableHitTesting = 0x331; // bool
		constexpr auto bShowDebug = 0x332; // bool
		constexpr auto DebugColor = 0x334; // FLinearColor
		constexpr auto CustomHitResult = 0x3c0; // FHitResult
		constexpr auto LocalHitLocation = 0x448; // FVector2D
		constexpr auto LastLocalHitLocation = 0x450; // FVector2D
		constexpr auto HoveredWidgetComponent = 0x458; // UWidgetComponent*
		constexpr auto LastHitResult = 0x460; // FHitResult
		constexpr auto bIsHoveredWidgetInteractable = 0x4e8; // bool
		constexpr auto bIsHoveredWidgetFocusable = 0x4e9; // bool
		constexpr auto bIsHoveredWidgetHitTestVisible = 0x4ea; // bool
	}

	namespace n_UBTTask_RunBehavior { // : UBTTaskNode
		constexpr auto BehaviorAsset = 0x70; // UBehaviorTree*
	}

	namespace n_UMaterialExpressionMakeMaterialAttributes { // : UMaterialExpression
		constexpr auto BaseColor = 0x60; // FExpressionInput
		constexpr auto Metallic = 0x98; // FExpressionInput
		constexpr auto Specular = 0xd0; // FExpressionInput
		constexpr auto Roughness = 0x108; // FExpressionInput
		constexpr auto EmissiveColor = 0x140; // FExpressionInput
		constexpr auto Opacity = 0x178; // FExpressionInput
		constexpr auto OpacityMask = 0x1b0; // FExpressionInput
		constexpr auto Normal = 0x1e8; // FExpressionInput
		constexpr auto WorldPositionOffset = 0x220; // FExpressionInput
		constexpr auto WorldDisplacement = 0x258; // FExpressionInput
		constexpr auto TessellationMultiplier = 0x290; // FExpressionInput
		constexpr auto SubsurfaceColor = 0x2c8; // FExpressionInput
		constexpr auto ClearCoat = 0x300; // FExpressionInput
		constexpr auto ClearCoatRoughness = 0x338; // FExpressionInput
		constexpr auto AmbientOcclusion = 0x370; // FExpressionInput
		constexpr auto Refraction = 0x3a8; // FExpressionInput
		constexpr auto CustomizedUVs = 0x3e0; // FExpressionInput [0x8]
		constexpr auto PixelDepthOffset = 0x5a0; // FExpressionInput
	}

	namespace n_UImprintReceiverComponent { // : USceneComponent
		constexpr auto QualityLevel = 0x300; // int32_t
		constexpr auto QualityLevelMeshes = 0x308; // TArray<UStaticMesh*>
		constexpr auto QualityLevelMaterials = 0x318; // TArray<UMaterial*>
		constexpr auto MaskTextureParameterName = 0x328; // FName
		constexpr auto MaskParamsParameterName = 0x330; // FName
		constexpr auto Meshes = 0x338; // UStaticMeshComponent* [0x9]
	}

	namespace n_UCraftingIngredientsInventory { // : UItemInventory
		constexpr auto SignalItemsRequestedFromClient = 0x170; // FScriptMulticastDelegate
		constexpr auto SignalInventoryRecivedOnClient = 0x180; // FScriptMulticastDelegate
		constexpr auto SignalItemAdded = 0x190; // FScriptMulticastDelegate
		constexpr auto SignalItemRemoved = 0x1a0; // FScriptMulticastDelegate
		constexpr auto SignalItemIntStatChanged = 0x1b0; // FScriptMulticastDelegate
		constexpr auto SignalItemFloatStatChanged = 0x1c0; // FScriptMulticastDelegate
		constexpr auto DelegateCanBeDropped = 0x1d0; // DelegateProperty
		constexpr auto SignalCannotMoveItem = 0x1e0; // FScriptMulticastDelegate
		constexpr auto ItemList = 0x1f0; // TArray<UGameItem*>
		constexpr auto bReplicatesToEveryone = 0x200; // bool
		constexpr auto inventoryType = 0x201; // EInventoryType
		constexpr auto MaxItemCount = 0x204; // int32_t
		constexpr auto PerishModifier = 0x208; // float
		constexpr auto ItemPerishModifiers = 0x210; // TMap<int32_t, float>
		constexpr auto UseWhiteList = 0x260; // bool
		constexpr auto BlackWhiteList = 0x268; // TArray<int32_t>
		constexpr auto LootContainerClass = 0x2c8; // ALootContainer*
		constexpr auto m_ConfigCategoryName = 0x2d0; // FString
	}

	namespace n_USoundWaveVoiceChat { // : USoundWaveProcedural
		constexpr auto CompressionQuality = 0x90; // int32_t
		constexpr auto bLooping = 0x94; // char : 1
		constexpr auto bStreaming = 0x94; // char : 1
		constexpr auto StreamingPriority = 0x98; // int32_t
		constexpr auto bMature = 0x9c; // char : 1
		constexpr auto bManualWordWrap = 0x9c; // char : 1
		constexpr auto bSingleLine = 0x9c; // char : 1
		constexpr auto bVirtualizeWhenSilent = 0x9c; // char : 1
		constexpr auto SoundGroup = 0xa0; // ESoundGroup
		constexpr auto SpokenText = 0xa8; // FString
		constexpr auto SubtitlePriority = 0xb8; // float
		constexpr auto Volume = 0xbc; // float
		constexpr auto Pitch = 0xc0; // float
		constexpr auto NumChannels = 0xc4; // int32_t
		constexpr auto SampleRate = 0xc8; // int32_t
		constexpr auto RawPCMDataSize = 0xcc; // int32_t
		constexpr auto Subtitles = 0xd0; // TArray<FSubtitleCue>
		constexpr auto LocalizedSubtitles = 0xe0; // TArray<FLocalizedSubtitle>
		constexpr auto Curves = 0xf0; // UCurveTable*
		constexpr auto InternalCurves = 0xf8; // UCurveTable*
	}

	namespace n_UMouseBlockWindowBase { // : UWindowRoot
		constexpr auto dropItemSound = 0x398; // USoundBase*
	}

	namespace n_AReflectionCapture { // : AActor
		constexpr auto CaptureComponent = 0x3d0; // UReflectionCaptureComponent*
	}

	namespace n_UUMGSequencePlayer { // : UObject
		constexpr auto Animation = 0x380; // UWidgetAnimation*
	}

	namespace n_USettingsAudioBase { // : USubSettingsMaster
		constexpr auto MasterClass = 0x328; // USoundClass*
		constexpr auto MusicClass = 0x330; // USoundClass*
		constexpr auto VoiceClass = 0x338; // USoundClass*
		constexpr auto VoiceChatClass = 0x340; // USoundClass*
		constexpr auto SFXClass = 0x348; // USoundClass*
		constexpr auto maxVolume = 0x350; // float
	}

	namespace n_UPeerConnectionNetDriver { // : UIpNetDriver
		constexpr auto LogPortUnreach = 0x4f8; // char : 1
		constexpr auto AllowPlayerPortUnreach = 0x4f8; // char : 1
		constexpr auto MaxPortCountToTry = 0x4fc; // uint32_t
	}

	namespace n_UEnvQueryTest { // : UEnvQueryNode
		constexpr auto TestOrder = 0x30; // int32_t
		constexpr auto TestPurpose = 0x34; // EEnvTestPurpose
		constexpr auto TestComment = 0x38; // FString
		constexpr auto MultipleContextFilterOp = 0x48; // EEnvTestFilterOperator
		constexpr auto MultipleContextScoreOp = 0x49; // EEnvTestScoreOperator
		constexpr auto FilterType = 0x4a; // EEnvTestFilterType
		constexpr auto BoolValue = 0x50; // FAIDataProviderBoolValue
		constexpr auto FloatValueMin = 0x80; // FAIDataProviderFloatValue
		constexpr auto FloatValueMax = 0xb0; // FAIDataProviderFloatValue
		constexpr auto ScoringEquation = 0xe1; // EEnvTestScoreEquation
		constexpr auto ClampMinType = 0xe2; // EEnvQueryTestClamping
		constexpr auto ClampMaxType = 0xe3; // EEnvQueryTestClamping
		constexpr auto NormalizationType = 0xe4; // EEQSNormalizationType
		constexpr auto ScoreClampMin = 0xe8; // FAIDataProviderFloatValue
		constexpr auto ScoreClampMax = 0x118; // FAIDataProviderFloatValue
		constexpr auto ScoringFactor = 0x148; // FAIDataProviderFloatValue
		constexpr auto ReferenceValue = 0x178; // FAIDataProviderFloatValue
		constexpr auto bDefineReferenceValue = 0x1a8; // bool
		constexpr auto bWorkOnFloatValues = 0x1b8; // char : 1
	}

	namespace n_UMaterialExpressionVectorNoise { // : UMaterialExpression
		constexpr auto Position = 0x60; // FExpressionInput
		constexpr auto NoiseFunction = 0x98; // EVectorNoiseFunction
		constexpr auto quality = 0x9c; // int32_t
		constexpr auto bTiling = 0xa0; // char : 1
		constexpr auto TileSize = 0xa4; // uint32_t
	}

	namespace n_UBTTask_GameplayTaskBase { // : UBTTaskNode
		constexpr auto bWaitForGameplayTask = 0x70; // char : 1
	}

	namespace n_UInterpTrackFloatMaterialParam { // : UInterpTrackFloatBase
		constexpr auto TargetMaterials = 0x90; // TArray<UMaterialInterface*>
		constexpr auto ParamName = 0xa0; // FName
	}

	namespace n_UTableAccessor { // : UObject
		constexpr auto table = 0x28; // UDataTable*
	}

	namespace n_UTireType { // : UDataAsset
		constexpr auto FrictionScale = 0x28; // float
	}

	namespace n_UParticleModuleLocationSkelVertSurface { // : UParticleModuleLocationBase
		constexpr auto SourceType = 0x30; // ELocationSkelVertSurfaceSource
		constexpr auto UniversalOffset = 0x34; // FVector
		constexpr auto bUpdatePositionEachFrame = 0x40; // char : 1
		constexpr auto bOrientMeshEmitters = 0x40; // char : 1
		constexpr auto bInheritBoneVelocity = 0x40; // char : 1
		constexpr auto InheritVelocityScale = 0x44; // float
		constexpr auto SkelMeshActorParamName = 0x48; // FName
		constexpr auto ValidAssociatedBones = 0x50; // TArray<FName>
		constexpr auto bEnforceNormalCheck = 0x60; // char : 1
		constexpr auto NormalToCompare = 0x64; // FVector
		constexpr auto NormalCheckToleranceDegrees = 0x70; // float
		constexpr auto NormalCheckTolerance = 0x74; // float
		constexpr auto ValidMaterialIndices = 0x78; // TArray<int32_t>
		constexpr auto bInheritVertexColor = 0x88; // char : 1
		constexpr auto bInheritUV = 0x88; // char : 1
		constexpr auto InheritUVChannel = 0x8c; // uint32_t
	}

	namespace n_UVectorFieldComponent { // : UPrimitiveComponent
		constexpr auto VectorField = 0x6c0; // UVectorField*
		constexpr auto Intensity = 0x6c8; // float
		constexpr auto Tightness = 0x6cc; // float
		constexpr auto bPreviewVectorField = 0x6d0; // char : 1
	}

	namespace n_UPlayerMarkerComponent { // : UActorComponent
		constexpr auto PrimaryComponentTick = 0x30; // FActorComponentTickFunction
		constexpr auto ComponentTags = 0x88; // TArray<FName>
		constexpr auto AssetUserData = 0x98; // TArray<UAssetUserData*>
		constexpr auto bReplicates = 0xa8; // char : 1
		constexpr auto bIsClientOnly = 0xa8; // char : 1
		constexpr auto bNetAddressable = 0xa8; // char : 1
		constexpr auto bAllowAnyoneToDestroyMe = 0xa8; // char : 1
		constexpr auto bCreatedByConstructionScript = 0xa8; // char : 1
		constexpr auto bInstanceComponent = 0xa8; // char : 1
		constexpr auto bAutoActivate = 0xa8; // char : 1
		constexpr auto bIsActive = 0xa8; // char : 1
		constexpr auto bEditableWhenInherited = 0xa8; // char : 1
		constexpr auto bCanEverAffectNavigation = 0xa8; // char : 1
		constexpr auto bIsEditorOnly = 0xa8; // char : 1
		constexpr auto CreationMethod = 0xb1; // EComponentCreationMethod
		constexpr auto UCSModifiedProperties = 0xc0; // TArray<FSimpleMemberReference>
		constexpr auto OnComponentActivated = 0xd0; // FScriptMulticastDelegate
		constexpr auto OnComponentDeactivated = 0xe0; // FScriptMulticastDelegate
	}

	namespace n_UW_TimeInputBox_C { // : UTimeInputBox
		constexpr auto UberGraphFrame = 0x350; // FPointerToUberGraphFrame
		constexpr auto Overlay_14 = 0x358; // UOverlay*
		constexpr auto TXT_ColonSeparator = 0x360; // UW_FCEditableTextBlock_C*
		constexpr auto TXT_Hours = 0x368; // UW_FCEditableTextBlock_C*
		constexpr auto TXT_Minutes = 0x370; // UW_FCEditableTextBlock_C*
		constexpr auto SignalTimeInputSelected = 0x378; // FScriptMulticastDelegate
	}

	namespace n_UDebugEntryNPC { // : UFCButton
		constexpr auto NpcName = 0xc20; // FName
	}

	namespace n_USettingsControlBase { // : USubSettingsMaster
		constexpr auto ShowRestoreDefaults = 0x318; // bool
		constexpr auto ShowClearKeyBinding = 0x319; // bool
		constexpr auto ShowScroll = 0x31a; // bool
		constexpr auto IsDirty = 0x31b; // bool
	}

	namespace n_UParticleModuleMeshRotation_Seeded { // : UParticleModuleMeshRotation
		constexpr auto RandomSeedInfo = 0x88; // FParticleRandomSeedInfo
	}

	namespace n_ASplineMeshActor { // : AActor
		constexpr auto SplineMeshComponent = 0x3d0; // USplineMeshComponent*
	}

	namespace n_UMaterialExpressionGraniteBake { // : UMaterialExpressionGraniteBakeBase
		constexpr auto Originals = 0x1b0; // FExpressionInput [0x4]
		constexpr auto SizeInput = 0x290; // FExpressionInput
		constexpr auto bUseBaked = 0x2c8; // char : 1
		constexpr auto bIsBakeDirty = 0x2c8; // char : 1
		constexpr auto ShaderGraphHash = 0x2d0; // uint64_t [0x4]
		constexpr auto UniformExpressionHash = 0x2f0; // uint64_t [0x4]
		constexpr auto BakedShaderGraphHash = 0x310; // uint64_t [0x4]
		constexpr auto BakedUniformExpressionHash = 0x330; // uint64_t [0x4]
		constexpr auto bAlwaysUseMaxSize = 0x350; // char : 1
		constexpr auto Size = 0x354; // FIntPoint
		constexpr auto Tiling = 0x35c; // EGraniteBakerTilingMethod
		constexpr auto LayerPreset = 0x360; // FGraniteBakerLayerLayout
		constexpr auto IndexList = 0x3d8; // int32_t [0x4]
		constexpr auto BakeCallStack = 0x3e8; // TArray<UMaterialExpressionMaterialFunctionCall*>
	}

	namespace n_UThrallComponent { // : UActorComponent
		constexpr auto ClaimRadiusBuilding = 0x100; // float
		constexpr auto ClaimRadiusFoliage = 0x104; // float
		constexpr auto ClaimLocation = 0x110; // FVector
		constexpr auto ThrallInfo = 0x120; // FThrallInfo
		constexpr auto OwnerUniqueID = 0x1a0; // UUniqueID*
		constexpr auto ThrallUniqueID = 0x1a8; // UUniqueID*
		constexpr auto IsABrush = 0x1b0; // bool
		constexpr auto DecayStartingTime = 0x1b4; // float
		constexpr auto OnThrallAIStateChanged = 0x1b8; // FScriptMulticastDelegate
		constexpr auto OnThrallStoppedFollowingPlayer = 0x1c8; // FScriptMulticastDelegate
		constexpr auto SignalReceivedBreakBondResult = 0x1d8; // FScriptMulticastDelegate
		constexpr auto ThrallAIState = 0x272; // EThrallAIState
		constexpr auto InteractingPlayer = 0x280; // AConanCharacter*
		constexpr auto OwnerCharacter = 0x288; // AConanCharacter*
		constexpr auto SavedHomeLocation = 0x290; // FVector
		constexpr auto CurrentHomeLocation = 0x29c; // FVector
		constexpr auto m_BreakBondMessageBox = 0x2a8; // UMessageBoxWidget*
	}

	namespace n_UPartyBeaconState { // : UObject
		constexpr auto SessionName = 0x28; // FName
		constexpr auto NumConsumedReservations = 0x30; // int32_t
		constexpr auto MaxReservations = 0x34; // int32_t
		constexpr auto NumTeams = 0x38; // int32_t
		constexpr auto NumPlayersPerTeam = 0x3c; // int32_t
		constexpr auto TeamAssignmentMethod = 0x40; // FName
		constexpr auto ReservedHostTeamNum = 0x48; // int32_t
		constexpr auto ForceTeamNum = 0x4c; // int32_t
		constexpr auto Reservations = 0x50; // TArray<FPartyReservation>
	}

	namespace n_UScaleBoxSlot { // : UPanelSlot
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UInterpGroupDirector { // : UInterpGroup
		constexpr auto InterpTracks = 0x30; // TArray<UInterpTrack*>
		constexpr auto GroupName = 0x40; // FName
		constexpr auto GroupColor = 0x48; // FColor
		constexpr auto bCollapsed = 0x4c; // char : 1
		constexpr auto bVisible = 0x4c; // char : 1
		constexpr auto bIsFolder = 0x4c; // char : 1
		constexpr auto bIsParented = 0x4c; // char : 1
		constexpr auto bIsSelected = 0x4c; // char : 1
	}

	namespace n_ALevelStreamingVolume { // : AVolume
		constexpr auto StreamingLevelNames = 0x408; // TArray<FName>
		constexpr auto bEditorPreVisOnly = 0x418; // char : 1
		constexpr auto bDisabled = 0x418; // char : 1
		constexpr auto StreamingUsage = 0x41c; // EStreamingVolumeUsage
	}

	namespace n_UDistributionVectorParameterBase { // : UDistributionVectorConstant
		constexpr auto ParameterName = 0x50; // FName
		constexpr auto MinInput = 0x58; // FVector
		constexpr auto MaxInput = 0x64; // FVector
		constexpr auto MinOutput = 0x70; // FVector
		constexpr auto MaxOutput = 0x7c; // FVector
		constexpr auto ParamModes = 0x88; // DistributionParamMode [0x3]
	}

	namespace n_UCharacterMapMarkerComponent { // : UActorComponent
		constexpr auto OnAllMarkersDiscovered = 0x180; // FScriptMulticastDelegate
		constexpr auto OnMarkerDiscovered = 0x190; // FScriptMulticastDelegate
		constexpr auto m_PlayerLocationMarker = 0x1a0; // FMapMarker
		constexpr auto DeathMarkerIcon = 0x208; // FStringAssetReference
		constexpr auto DeathMarkerIconLooted = 0x218; // FStringAssetReference
		constexpr auto m_NumDeathMarkerIDsAssigned = 0x22c; // int32_t
		constexpr auto m_LastLootedDeathMarkerID = 0x230; // int32_t
		constexpr auto m_DiscoveredMarkers = 0x238; // TArray<int32_t>
		constexpr auto m_AllMapsDiscoveredMarkers = 0x248; // TMap<FString, FMapMarkerContainer>
		constexpr auto m_DynamicMarkers = 0x298; // TArray<FMapMarker>
		constexpr auto m_PlayerMarkers = 0x2a8; // TArray<FMapMarker>
		constexpr auto m_DeathMarkers = 0x2b8; // TArray<FMapMarker>
		constexpr auto TransientIcons = 0x2e0; // TMap<ETransientMarkerType, FStringAssetReference>
		constexpr auto m_CorrespondingCorpses = 0x330; // TMap<int32_t, AActor*>
		constexpr auto m_StaticMapMarkers = 0x380; // UDataTable*
	}

	namespace n_UVerticalBoxSlot { // : UPanelSlot
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto Size = 0x48; // FSlateChildSize
		constexpr auto HorizontalAlignment = 0x50; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x51; // EVerticalAlignment
	}

	namespace n_UPlayFabAdminAPI { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnPlayFabResponse = 0x28; // FScriptMulticastDelegate
		constexpr auto CallAuthenticationContext = 0x780; // UPlayFabAuthenticationContext*
		constexpr auto RequestJsonObj = 0x788; // UPlayFabJsonObject*
		constexpr auto ResponseJsonObj = 0x790; // UPlayFabJsonObject*
	}

	namespace n_UNpcSpawnerComponent { // : UActorComponent
		constexpr auto PrimaryComponentTick = 0x30; // FActorComponentTickFunction
		constexpr auto ComponentTags = 0x88; // TArray<FName>
		constexpr auto AssetUserData = 0x98; // TArray<UAssetUserData*>
		constexpr auto bReplicates = 0xa8; // char : 1
		constexpr auto bIsClientOnly = 0xa8; // char : 1
		constexpr auto bNetAddressable = 0xa8; // char : 1
		constexpr auto bAllowAnyoneToDestroyMe = 0xa8; // char : 1
		constexpr auto bCreatedByConstructionScript = 0xa8; // char : 1
		constexpr auto bInstanceComponent = 0xa8; // char : 1
		constexpr auto bAutoActivate = 0xa8; // char : 1
		constexpr auto bIsActive = 0xa8; // char : 1
		constexpr auto bEditableWhenInherited = 0xa8; // char : 1
		constexpr auto bCanEverAffectNavigation = 0xa8; // char : 1
		constexpr auto bIsEditorOnly = 0xa8; // char : 1
		constexpr auto CreationMethod = 0xb1; // EComponentCreationMethod
		constexpr auto UCSModifiedProperties = 0xc0; // TArray<FSimpleMemberReference>
		constexpr auto OnComponentActivated = 0xd0; // FScriptMulticastDelegate
		constexpr auto OnComponentDeactivated = 0xe0; // FScriptMulticastDelegate
	}

	namespace n_UMovieSceneMarginSection { // : UMovieSceneSection
		constexpr auto TopCurve = 0xd0; // FRichCurve
		constexpr auto LeftCurve = 0x140; // FRichCurve
		constexpr auto RightCurve = 0x1b0; // FRichCurve
		constexpr auto BottomCurve = 0x220; // FRichCurve
	}

	namespace n_UStreamingProxy { // : UBlueprintAsyncActionBase
		constexpr auto OnLoaded = 0x28; // FScriptMulticastDelegate
		constexpr auto Assets = 0x40; // TArray<UObject*>
		constexpr auto Classes = 0x50; // TArray<UClass*>
	}

	namespace n_USmoketestFrameworkWorldDataObject { // : UObject
		constexpr auto m_World = 0x28; // UWorld*
	}

	namespace n_UBuildingReplicationComponent { // : UActorComponent
		constexpr auto SignalReceivedBuildingHealthState = 0xf8; // FScriptMulticastDelegate
		constexpr auto m_PendingRepBuildings = 0x180; // TArray<ABuildingBase*>
		constexpr auto m_PendingRepBuildingsStability = 0x190; // TArray<ABuildingBase*>
		constexpr auto m_PendingRepBuildingsHealthAdd = 0x1a0; // TArray<ABuildingBase*>
		constexpr auto m_PendingRepBuildingsHealthRemove = 0x1b0; // TArray<ABuildingBase*>
		constexpr auto m_CurrentlyWatchedBuildingHealths = 0x1c0; // TSet<ABuildingBase*>
		constexpr auto m_DelayedBuildEvents = 0x210; // TArray<FOrderedServerBuildingEventManager>
	}

	namespace n_UParty { // : UObject
		constexpr auto DefaultMaxPartySize = 0x88; // int32_t
		constexpr auto bLeavingPersistentParty = 0x8c; // bool
	}

	namespace n_UCharacterStatsStatBar { // : URootWidget
		constexpr auto Icon = 0x318; // FSlateBrush
		constexpr auto BarSegments = 0x3a8; // TArray<FFCProgressbarSegment>
	}

	namespace n_UBTTask_RunEQSQuery { // : UBTTask_BlackboardBase
		constexpr auto QueryTemplate = 0x98; // UEnvQuery*
		constexpr auto QueryParams = 0xa0; // TArray<FEnvNamedValue>
		constexpr auto QueryConfig = 0xb0; // TArray<FAIDynamicParam>
		constexpr auto RunMode = 0xc0; // EEnvQueryRunMode
		constexpr auto EQSQueryBlackboardKey = 0xc8; // FBlackboardKeySelector
		constexpr auto bUseBBKey = 0xf0; // bool
		constexpr auto EQSRequest = 0xf8; // FEQSParametrizedQueryExecutionRequest
	}

	namespace n_UMaterialExpressionAppendVector { // : UMaterialExpression
		constexpr auto A = 0x60; // FExpressionInput
		constexpr auto B = 0x98; // FExpressionInput
	}

	namespace n_USubDSurfaceComponent { // : UPrimitiveComponent
		constexpr auto Mesh = 0x6c0; // USubDSurface*
		constexpr auto DebugLevel = 0x6c8; // int32_t
		constexpr auto DisplayMeshComponent = 0x6d0; // UStaticMeshComponent*
	}

	namespace n_UMaterialExpressionBlackBody { // : UMaterialExpression
		constexpr auto Temp = 0x60; // FExpressionInput
	}

	namespace n_UInterpTrackVectorBase { // : UInterpTrack
		constexpr auto VectorTrack = 0x70; // FInterpCurveVector
		constexpr auto CurveTension = 0x88; // float
	}

	namespace n_UW_SubtitleRenderer_C { // : USubtitleRenderer
		constexpr auto EntryViewClass = 0x398; // USubtitleEntryView*
		constexpr auto m_PendingEntryList = 0x3a0; // TArray<USubtitleEntryView*>
		constexpr auto m_ActiveEntry = 0x3b0; // USubtitleEntryView*
	}

	namespace n_USettingsServerBase { // : USubSettingsMaster
		constexpr auto m_CoopTetheringLimitIsPlayerModifiable = 0x328; // bool
		constexpr auto MaxPasswordLength = 0x32c; // float
		constexpr auto m_LastSelectedCatButton = 0x330; // UFCButton*
	}

	namespace n_UMaterialExpressionPrecomputedAOMask { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto Desc = 0x38; // FString
		constexpr auto BorderColor = 0x48; // FColor
		constexpr auto bRealtimePreview = 0x4c; // char : 1
		constexpr auto bNeedToUpdatePreview = 0x4c; // char : 1
		constexpr auto bIsParameterExpression = 0x4c; // char : 1
		constexpr auto bCommentBubbleVisible = 0x4c; // char : 1
		constexpr auto bShowOutputNameOnPin = 0x4c; // char : 1
		constexpr auto bHidePreviewWindow = 0x4c; // char : 1
		constexpr auto bCollapsed = 0x4c; // char : 1
		constexpr auto bShaderInputData = 0x4c; // char : 1
		constexpr auto bShowInputs = 0x4c; // char : 1
		constexpr auto bShowOutputs = 0x4c; // char : 1
		constexpr auto Outputs = 0x50; // TArray<FExpressionOutput>
	}

	namespace n_UConanLogoBase { // : URootWidget
		constexpr auto OutcastLogo = 0x318; // UTexture2D*
		constexpr auto ExilesLogo = 0x338; // UTexture2D*
		constexpr auto ExilesLogo_Old = 0x358; // UTexture2D*
		constexpr auto OutcastLogo_Old = 0x378; // UTexture2D*
	}

	namespace n_UMaterialExpressionQualitySwitch { // : UMaterialExpression
		constexpr auto Default = 0x60; // FExpressionInput
		constexpr auto Inputs = 0x98; // FExpressionInput [0x3]
		constexpr auto XBoxOne = 0x140; // FExpressionInput
	}

	namespace n_UFuncomSkeletalMeshComponent { // : USkeletalMeshComponent
		constexpr auto bHasCachedPose = 0xf20; // bool
		constexpr auto CachedPose = 0xf28; // FFuncomPoseSnapshot
		constexpr auto ShouldPlayAnimation = 0xf38; // bool
	}

	namespace n_UBackgroundBlurSlot { // : UPanelSlot
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UStaticMeshComponent { // : UMeshComponent
		constexpr auto ForcedLodModel = 0x7c8; // int32_t
		constexpr auto PreviousLODLevel = 0x7cc; // int32_t
		constexpr auto StaticMesh = 0x7d0; // UStaticMesh*
		constexpr auto MinLOD = 0x7d8; // int32_t
		constexpr auto SubDivisionStepSize = 0x7dc; // int32_t
		constexpr auto bOverrideMinLOD = 0x7e0; // char : 1
		constexpr auto bOverrideNavigationExport = 0x7e0; // char : 1
		constexpr auto bForceNavigationObstacle = 0x7e0; // char : 1
		constexpr auto bDisallowMeshPaintPerInstance = 0x7e0; // char : 1
		constexpr auto bUseDefaultCollision = 0x7e0; // char : 1
		constexpr auto bUseSubDivisions = 0x7e0; // char : 1
		constexpr auto bIgnoreInstanceForTextureStreaming = 0x7e0; // char : 1
		constexpr auto bOverrideLightMapRes = 0x7e0; // char : 1
		constexpr auto bCastDistanceFieldIndirectShadow = 0x7e0; // char : 1
		constexpr auto OverriddenLightMapRes = 0x7e4; // int32_t
		constexpr auto DistanceFieldIndirectShadowMinVisibility = 0x7e8; // float
		constexpr auto StreamingDistanceMultiplier = 0x7ec; // float
		constexpr auto LODData = 0x7f0; // TArray<FStaticMeshComponentLODInfo>
		constexpr auto StreamingTextureData = 0x800; // TArray<FStreamingTextureBuildInfo>
		constexpr auto LightmassSettings = 0x810; // FLightmassPrimitiveSettings
	}

	namespace n_UGraniteSettings { // : UObject
		constexpr auto CPUCaches = 0x30; // TArray<FGraniteCpuCache>
		constexpr auto GPUCaches = 0x40; // TArray<FGraniteGpuCache>
		constexpr auto MaximumTileDataUpload = 0x50; // int32_t
		constexpr auto MaximumResolves = 0x54; // int32_t
		constexpr auto GpuMemorySizeInMegabyte = 0x58; // int32_t
		constexpr auto CpuMemorySizeInMegabyte = 0x5c; // int32_t
		constexpr auto bAdvanced = 0x60; // char : 1
		constexpr auto ReservedRatio = 0x64; // float
		constexpr auto TileSetDirectories = 0x68; // TArray<FDirectoryPath>
		constexpr auto bGraniteStreamLightMaps = 0x78; // char : 1
		constexpr auto bGraniteNoTrilinear = 0x78; // char : 1
		constexpr auto bGraniteSourceControlEnabled = 0x78; // char : 1
		constexpr auto bCachesNeedRestart = 0x7c; // bool
	}

	namespace n_UFeatItem { // : UGameItem
		constexpr auto ShowInFeatWindow = 0x248; // bool
	}

	namespace n_UExporter { // : UObject
		constexpr auto SupportedClass = 0x28; // UObject*
		constexpr auto ExportRootScope = 0x30; // UObject*
		constexpr auto FormatExtension = 0x38; // TArray<FString>
		constexpr auto FormatDescription = 0x48; // TArray<FString>
		constexpr auto PreferredFormatIndex = 0x58; // int32_t
		constexpr auto TextIndent = 0x5c; // int32_t
		constexpr auto bText = 0x60; // char : 1
		constexpr auto bSelectedOnly = 0x60; // char : 1
		constexpr auto bForceFileOperations = 0x60; // char : 1
	}

	namespace n_UBehaviorTreeManager { // : UObject
		constexpr auto MaxDebuggerSteps = 0x28; // int32_t
		constexpr auto LoadedTemplates = 0x30; // TArray<FBehaviorTreeTemplateInfo>
		constexpr auto ActiveComponents = 0x40; // TArray<UBehaviorTreeComponent*>
	}

	namespace n_UParticleModuleTypeDataMesh { // : UParticleModuleTypeDataBase
		constexpr auto Mesh = 0x30; // UStaticMesh*
		constexpr auto CastShadows = 0x38; // char : 1
		constexpr auto DoCollisions = 0x38; // char : 1
		constexpr auto MeshAlignment = 0x3c; // EMeshScreenAlignment
		constexpr auto bOverrideMaterial = 0x40; // char : 1
		constexpr auto bOverrideDefaultMotionBlurSettings = 0x40; // char : 1
		constexpr auto bEnableMotionBlur = 0x40; // char : 1
		constexpr auto Pitch = 0x44; // float
		constexpr auto Roll = 0x48; // float
		constexpr auto Yaw = 0x4c; // float
		constexpr auto RollPitchYawRange = 0x50; // FRawDistributionVector
		constexpr auto AxisLockOption = 0xa8; // EParticleAxisLock
		constexpr auto bCameraFacing = 0xac; // char : 1
		constexpr auto CameraFacingUpAxisOption = 0xb0; // EMeshCameraFacingUpAxis
		constexpr auto CameraFacingOption = 0xb1; // EMeshCameraFacingOptions
		constexpr auto bApplyParticleRotationAsSpin = 0xb4; // char : 1
		constexpr auto bFaceCameraDirectionRatherThanPosition = 0xb4; // char : 1
		constexpr auto bCollisionsConsiderPartilceSize = 0xb4; // char : 1
	}

	namespace n_AConanTimeOfDayManager { // : AActor
		constexpr auto DayLength = 0x3d0; // float
		constexpr auto StartTimeOfDay = 0x3d4; // float
		constexpr auto TimeEnabled = 0x3d8; // bool
		constexpr auto TimeOfDay = 0x3dc; // float
	}

	namespace n_UMovieScene3DAttachTrack { // : UMovieScene3DConstraintTrack
		constexpr auto ConstraintSections = 0xb8; // TArray<UMovieSceneSection*>
	}

	namespace n_UFloatingNameBase { // : URootWidget
		constexpr auto MaxPlayerNameLength = 0x318; // uint32_t
		constexpr auto DefaultColor = 0x31c; // FLinearColor
		constexpr auto GuildColor = 0x32c; // FLinearColor
	}

	namespace n_UBlockedPlayerEntry { // : URootWidget
		constexpr auto KeyNavOnSelectedEvent = 0x240; // FScriptMulticastDelegate
		constexpr auto KeyNavLeft = 0x250; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavRight = 0x258; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavAbove = 0x260; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavBelow = 0x268; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavTab = 0x270; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildLeft = 0x278; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildRight = 0x280; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildAbove = 0x288; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildBelow = 0x290; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildTab = 0x298; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildren = 0x2a0; // TWeakObjectPtr<URootWidget>
		constexpr auto TooltipWidgetClass = 0x2a8; // UTooltipWidget*
		constexpr auto KeyNavIndicatorClass = 0x2b0; // UKeyNavIndicator*
		constexpr auto PositiveFeedbackColor = 0x2b8; // FLinearColor
		constexpr auto NegativeFeedbackColor = 0x2c8; // FLinearColor
		constexpr auto NeutralFeedbackColor = 0x2d8; // FLinearColor
		constexpr auto KeyNavFocusOnClick = 0x2e8; // bool
		constexpr auto KeyNavAutoSetBack = 0x2e9; // bool
		constexpr auto m_Window = 0x2f0; // UWindowRoot*
		constexpr auto m_Parent = 0x2f8; // TWeakObjectPtr<URootWidget>
		constexpr auto m_KeyNavIndicator = 0x300; // UKeyNavIndicator*
	}

	namespace n_APhysicsVolume { // : AVolume
		constexpr auto TerminalVelocity = 0x408; // float
		constexpr auto Priority = 0x40c; // int32_t
		constexpr auto FluidFriction = 0x410; // float
		constexpr auto bWaterVolume = 0x414; // char : 1
		constexpr auto bPhysicsOnContact = 0x414; // char : 1
	}

	namespace n_UInterpTrackInstColorProp { // : UInterpTrackInstProperty
		constexpr auto ResetColor = 0x40; // FColor
	}

	namespace n_ULoginCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto onSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto onFailure = 0x38; // FScriptMulticastDelegate
		constexpr auto m_ErrorMessage = 0x48; // FString
		constexpr auto m_WorldContextObject = 0xa8; // UObject*
	}

	namespace n_UMaterialExpressionStaticSwitchParameter { // : UMaterialExpressionStaticBoolParameter
		constexpr auto A = 0x88; // FExpressionInput
		constexpr auto B = 0xc0; // FExpressionInput
	}

	namespace n_UParticleModuleColorBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x28; // char : 1
		constexpr auto LODDuplicate = 0x28; // char : 1
		constexpr auto bSupportsRandomSeed = 0x28; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x28; // char : 1
		constexpr auto LODValidity = 0x2c; // char
	}

	namespace n_UAITask_MoveTo { // : UAITask
		constexpr auto OnRequestFailed = 0x70; // FScriptMulticastDelegate
		constexpr auto OnMoveFinished = 0x80; // FScriptMulticastDelegate
		constexpr auto MoveRequest = 0x90; // FAIMoveRequest
	}

	namespace n_USceneCaptureComponentSand { // : USceneCaptureComponentImprints
		constexpr auto FluidColourMap = 0x460; // UTextureRenderTarget2D*
		constexpr auto FluidNormalMap = 0x468; // UTextureRenderTarget2D*
		constexpr auto ForcesTexture = 0x470; // UTexture*
		constexpr auto ForcesTextureTiling = 0x478; // float
		constexpr auto VorticityAmount = 0x47c; // float
		constexpr auto ColourDecay = 0x480; // float
		constexpr auto DensityDecay = 0x484; // float
		constexpr auto VelocityDecay = 0x488; // float
		constexpr auto Wrapping = 0x48c; // char : 1
		constexpr auto OutputNormals = 0x48c; // char : 1
		constexpr auto OutputColour = 0x48c; // char : 1
		constexpr auto UseUniqueTextureSet = 0x48c; // char : 1
		constexpr auto WindA = 0x490; // FVector2D
		constexpr auto WindB = 0x498; // FVector2D
		constexpr auto InjectionColourA = 0x4a0; // FColor
		constexpr auto ColourScaleA = 0x4a4; // float
		constexpr auto InjectionColourB = 0x4a8; // FColor
		constexpr auto ColourScaleB = 0x4ac; // float
		constexpr auto PressureScaleA = 0x4b0; // float
		constexpr auto PressureScaleB = 0x4b4; // float
		constexpr auto WindScale = 0x4b8; // float
		constexpr auto WindGustFactorA = 0x4bc; // float
		constexpr auto WindGustFactorB = 0x4c0; // float
	}

	namespace n_UMaterialExpressionLightVector { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto Desc = 0x38; // FString
		constexpr auto BorderColor = 0x48; // FColor
		constexpr auto bRealtimePreview = 0x4c; // char : 1
		constexpr auto bNeedToUpdatePreview = 0x4c; // char : 1
		constexpr auto bIsParameterExpression = 0x4c; // char : 1
		constexpr auto bCommentBubbleVisible = 0x4c; // char : 1
		constexpr auto bShowOutputNameOnPin = 0x4c; // char : 1
		constexpr auto bHidePreviewWindow = 0x4c; // char : 1
		constexpr auto bCollapsed = 0x4c; // char : 1
		constexpr auto bShaderInputData = 0x4c; // char : 1
		constexpr auto bShowInputs = 0x4c; // char : 1
		constexpr auto bShowOutputs = 0x4c; // char : 1
		constexpr auto Outputs = 0x50; // TArray<FExpressionOutput>
	}

	namespace n_UObjectReferencer { // : UObject
		constexpr auto ReferencedObjects = 0x28; // TArray<UObject*>
	}

	namespace n_UCheckBoxWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto CheckBoxStyle = 0x30; // FCheckBoxStyle
	}

	namespace n_UForceFeedbackComponent { // : USceneComponent
		constexpr auto ForceFeedbackEffect = 0x300; // UForceFeedbackEffect*
		constexpr auto bAutoDestroy = 0x308; // char : 1
		constexpr auto bStopWhenOwnerDestroyed = 0x308; // char : 1
		constexpr auto bLooping = 0x308; // char : 1
		constexpr auto bOverrideAttenuation = 0x308; // char : 1
		constexpr auto IntensityMultiplier = 0x30c; // float
		constexpr auto AttenuationSettings = 0x310; // UForceFeedbackAttenuation*
		constexpr auto AttenuationOverrides = 0x318; // FForceFeedbackAttenuationSettings
		constexpr auto OnForceFeedbackFinished = 0x3c0; // FScriptMulticastDelegate
	}

	namespace n_UMediaPlaylist { // : UObject
		constexpr auto Items = 0x28; // TArray<UMediaSource*>
	}

	namespace n_UMaterialBillboardComponent { // : UPrimitiveComponent
		constexpr auto Elements = 0x6c0; // TArray<FMaterialSpriteElement>
	}

	namespace n_USafeZoneSlot { // : UPanelSlot
		constexpr auto bIsTitleSafe = 0x38; // bool
		constexpr auto SafeAreaScale = 0x3c; // FMargin
		constexpr auto HAlign = 0x4c; // EHorizontalAlignment
		constexpr auto VAlign = 0x4d; // EVerticalAlignment
		constexpr auto Padding = 0x50; // FMargin
	}

	namespace n_UFCRichTextBlock { // : URichTextBlock
		constexpr auto Text = 0x148; // FText
		constexpr auto TextDelegate = 0x160; // DelegateProperty
		constexpr auto Font = 0x170; // FSlateFontInfo
		constexpr auto Color = 0x1d8; // FLinearColor
		constexpr auto Decorators = 0x1e8; // TArray<URichTextBlockDecorator*>
	}

	namespace n_UW_FIFOWindow_C { // : UFIFOWindow
		constexpr auto UberGraphFrame = 0x398; // FPointerToUberGraphFrame
		constexpr auto MessageListView = 0x3a0; // UVerticalBox*
		constexpr auto MessageListViewBottom = 0x3a8; // UVerticalBox*
		constexpr auto PendingMessages = 0x3b0; // TArray<FWidgetFIFOData>
	}

	namespace n_UMaterialExpressionGraniteStreamTextures { // : UMaterialExpressionGraniteBakeBase
		constexpr auto Originals = 0x1b0; // FExpressionInput [0x4]
		constexpr auto SizeInput = 0x290; // FExpressionInput
		constexpr auto bUseBaked = 0x2c8; // char : 1
		constexpr auto bIsBakeDirty = 0x2c8; // char : 1
		constexpr auto ShaderGraphHash = 0x2d0; // uint64_t [0x4]
		constexpr auto UniformExpressionHash = 0x2f0; // uint64_t [0x4]
		constexpr auto BakedShaderGraphHash = 0x310; // uint64_t [0x4]
		constexpr auto BakedUniformExpressionHash = 0x330; // uint64_t [0x4]
		constexpr auto bAlwaysUseMaxSize = 0x350; // char : 1
		constexpr auto Size = 0x354; // FIntPoint
		constexpr auto Tiling = 0x35c; // EGraniteBakerTilingMethod
		constexpr auto LayerPreset = 0x360; // FGraniteBakerLayerLayout
		constexpr auto IndexList = 0x3d8; // int32_t [0x4]
		constexpr auto BakeCallStack = 0x3e8; // TArray<UMaterialExpressionMaterialFunctionCall*>
	}

	namespace n_APaperTileMapActor { // : AActor
		constexpr auto RenderComponent = 0x3d0; // UPaperTileMapComponent*
	}

	namespace n_UInterpCurveEdSetup { // : UObject
		constexpr auto Tabs = 0x28; // TArray<FCurveEdTab>
		constexpr auto ActiveTab = 0x38; // int32_t
	}

	namespace n_UMovieSceneSection { // : UMovieSceneSignedObject
		constexpr auto EvalOptions = 0xb0; // FMovieSceneSectionEvalOptions
		constexpr auto StartTime = 0xb4; // float
		constexpr auto EndTime = 0xb8; // float
		constexpr auto RowIndex = 0xbc; // int32_t
		constexpr auto OverlapPriority = 0xc0; // int32_t
		constexpr auto bIsActive = 0xc4; // char : 1
		constexpr auto bIsLocked = 0xc4; // char : 1
		constexpr auto bIsInfinite = 0xc4; // char : 1
	}

	namespace n_USoundMix { // : UObject
		constexpr auto bApplyEQ = 0x28; // char : 1
		constexpr auto EQPriority = 0x2c; // float
		constexpr auto EQSettings = 0x30; // FAudioEQEffect
		constexpr auto SoundClassEffects = 0x68; // TArray<FSoundClassAdjuster>
		constexpr auto InitialDelay = 0x78; // float
		constexpr auto FadeInTime = 0x7c; // float
		constexpr auto Duration = 0x80; // float
		constexpr auto FadeOutTime = 0x84; // float
	}

	namespace n_ATriggerCapsule { // : ATriggerBase
		constexpr auto CollisionComponent = 0x3d0; // UShapeComponent*
		constexpr auto SpriteComponent = 0x3d8; // UBillboardComponent*
	}

	namespace n_UGameViewportClient { // : UScriptViewportClient
		constexpr auto ViewportConsole = 0x38; // UConsole*
		constexpr auto DebugProperties = 0x40; // TArray<FDebugDisplayProperty>
		constexpr auto World = 0x90; // UWorld*
		constexpr auto GameInstance = 0x98; // UGameInstance*
	}

	namespace n_UItemInventory { // : UPersistenceComponent
		constexpr auto SignalItemsRequestedFromClient = 0x170; // FScriptMulticastDelegate
		constexpr auto SignalInventoryRecivedOnClient = 0x180; // FScriptMulticastDelegate
		constexpr auto SignalItemAdded = 0x190; // FScriptMulticastDelegate
		constexpr auto SignalItemRemoved = 0x1a0; // FScriptMulticastDelegate
		constexpr auto SignalItemIntStatChanged = 0x1b0; // FScriptMulticastDelegate
		constexpr auto SignalItemFloatStatChanged = 0x1c0; // FScriptMulticastDelegate
		constexpr auto DelegateCanBeDropped = 0x1d0; // DelegateProperty
		constexpr auto SignalCannotMoveItem = 0x1e0; // FScriptMulticastDelegate
		constexpr auto ItemList = 0x1f0; // TArray<UGameItem*>
		constexpr auto bReplicatesToEveryone = 0x200; // bool
		constexpr auto inventoryType = 0x201; // EInventoryType
		constexpr auto MaxItemCount = 0x204; // int32_t
		constexpr auto PerishModifier = 0x208; // float
		constexpr auto ItemPerishModifiers = 0x210; // TMap<int32_t, float>
		constexpr auto UseWhiteList = 0x260; // bool
		constexpr auto BlackWhiteList = 0x268; // TArray<int32_t>
		constexpr auto LootContainerClass = 0x2c8; // ALootContainer*
		constexpr auto m_ConfigCategoryName = 0x2d0; // FString
	}

	namespace n_ACharacterLodSystem { // : AInfo
		constexpr auto SimultaneousIK = 0x3d0; // int32_t
		constexpr auto IKLodUpdateInterval = 0x3d4; // float
		constexpr auto IKRange = 0x3d8; // float
		constexpr auto SimultaneousHighQualityHair = 0x3dc; // int32_t
		constexpr auto HairLodUpdateInterval = 0x3e0; // float
		constexpr auto IKActors = 0x3f0; // TArray<AActor*>
		constexpr auto HighQualityHairComponents = 0x408; // TArray<UCharacterCustomizationComponent*>
		constexpr auto m_EnabledClothSimActors = 0x430; // TMap<AActor*, FEmpty>
		constexpr auto m_AllClothSimActors = 0x480; // TMap<AActor*, FEmpty>
	}

	namespace n_ADWGameMode { // : AGameMode
		constexpr auto DatabaseHost = 0x4d0; // FString
		constexpr auto DatabasePort = 0x4e0; // int32_t
		constexpr auto DatabaseVerbose = 0x4e4; // bool
		constexpr auto WorldPersistence = 0x4e8; // UWorldPersistenceComponent*
	}

	namespace n_AConanHUD { // : AHUD
		constexpr auto LoadingScreenText = 0x4b8; // FText
		constexpr auto AreNotificationsMuted = 0x4d0; // bool
	}

	namespace n_ULevelSequencePlayer { // : UMovieSceneSequencePlayer
		constexpr auto OnPlay = 0x380; // FScriptMulticastDelegate
		constexpr auto OnStop = 0x390; // FScriptMulticastDelegate
		constexpr auto OnPause = 0x3a0; // FScriptMulticastDelegate
		constexpr auto bIsPlaying = 0x3b0; // char : 1
		constexpr auto bReversePlayback = 0x3b0; // char : 1
		constexpr auto bPendingFirstUpdate = 0x3b0; // char : 1
		constexpr auto Sequence = 0x3b8; // UMovieSceneSequence*
		constexpr auto TimeCursorPosition = 0x3c0; // float
		constexpr auto StartTime = 0x3c4; // float
		constexpr auto EndTime = 0x3c8; // float
		constexpr auto CurrentNumLoops = 0x3cc; // int32_t
		constexpr auto PlaybackSettings = 0x3e0; // FMovieSceneSequencePlaybackSettings
	}

	namespace n_UW_RatingResultView_C { // : URatingResultViewBase
		constexpr auto KeyNavOnSelectedEvent = 0x240; // FScriptMulticastDelegate
		constexpr auto KeyNavLeft = 0x250; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavRight = 0x258; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavAbove = 0x260; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavBelow = 0x268; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavTab = 0x270; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildLeft = 0x278; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildRight = 0x280; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildAbove = 0x288; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildBelow = 0x290; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildTab = 0x298; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildren = 0x2a0; // TWeakObjectPtr<URootWidget>
		constexpr auto TooltipWidgetClass = 0x2a8; // UTooltipWidget*
		constexpr auto KeyNavIndicatorClass = 0x2b0; // UKeyNavIndicator*
		constexpr auto PositiveFeedbackColor = 0x2b8; // FLinearColor
		constexpr auto NegativeFeedbackColor = 0x2c8; // FLinearColor
		constexpr auto NeutralFeedbackColor = 0x2d8; // FLinearColor
		constexpr auto KeyNavFocusOnClick = 0x2e8; // bool
		constexpr auto KeyNavAutoSetBack = 0x2e9; // bool
		constexpr auto m_Window = 0x2f0; // UWindowRoot*
		constexpr auto m_Parent = 0x2f8; // TWeakObjectPtr<URootWidget>
		constexpr auto m_KeyNavIndicator = 0x300; // UKeyNavIndicator*
	}

	namespace n_UArchVisCharMovementComponent { // : UCharacterMovementComponent
		constexpr auto RotationalAcceleration = 0x7a8; // FRotator
		constexpr auto RotationalDeceleration = 0x7b4; // FRotator
		constexpr auto MaxRotationalVelocity = 0x7c0; // FRotator
		constexpr auto MinPitch = 0x7cc; // float
		constexpr auto MaxPitch = 0x7d0; // float
		constexpr auto WalkingFriction = 0x7d4; // float
		constexpr auto WalkingSpeed = 0x7d8; // float
		constexpr auto WalkingAcceleration = 0x7dc; // float
	}

	namespace n_USubSettingsMaster { // : URootWidget
		constexpr auto ShowRestoreDefaults = 0x318; // bool
		constexpr auto ShowClearKeyBinding = 0x319; // bool
		constexpr auto ShowScroll = 0x31a; // bool
		constexpr auto IsDirty = 0x31b; // bool
	}

	namespace n_UCommandlet { // : UObject
		constexpr auto HelpDescription = 0x28; // FString
		constexpr auto HelpUsage = 0x38; // FString
		constexpr auto HelpWebLink = 0x48; // FString
		constexpr auto HelpParamNames = 0x58; // TArray<FString>
		constexpr auto HelpParamDescriptions = 0x68; // TArray<FString>
		constexpr auto IsServer = 0x78; // char : 1
		constexpr auto IsClient = 0x78; // char : 1
		constexpr auto IsEditor = 0x78; // char : 1
		constexpr auto LogToConsole = 0x78; // char : 1
		constexpr auto ShowErrorCount = 0x78; // char : 1
	}

	namespace n_UMaterialExpressionGraniteTextureParameter { // : UMaterialExpressionGraniteTexture
		constexpr auto ParameterName = 0x190; // FName
		constexpr auto ExpressionGUID = 0x198; // FGuid
		constexpr auto Group = 0x1a8; // FName
	}

	namespace n_APlaneReflectionCapture { // : AReflectionCapture
		constexpr auto CaptureComponent = 0x3d0; // UReflectionCaptureComponent*
	}

	namespace n_USubmixEffectReverbPreset { // : USoundEffectSubmixPreset
		constexpr auto Settings = 0x40; // FSubmixEffectReverbSettings
	}

	namespace n_UMaterialExpressionObjectOrientation { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto Desc = 0x38; // FString
		constexpr auto BorderColor = 0x48; // FColor
		constexpr auto bRealtimePreview = 0x4c; // char : 1
		constexpr auto bNeedToUpdatePreview = 0x4c; // char : 1
		constexpr auto bIsParameterExpression = 0x4c; // char : 1
		constexpr auto bCommentBubbleVisible = 0x4c; // char : 1
		constexpr auto bShowOutputNameOnPin = 0x4c; // char : 1
		constexpr auto bHidePreviewWindow = 0x4c; // char : 1
		constexpr auto bCollapsed = 0x4c; // char : 1
		constexpr auto bShaderInputData = 0x4c; // char : 1
		constexpr auto bShowInputs = 0x4c; // char : 1
		constexpr auto bShowOutputs = 0x4c; // char : 1
		constexpr auto Outputs = 0x50; // TArray<FExpressionOutput>
	}

	namespace n_UButtonWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto ButtonStyle = 0x30; // FButtonStyle
	}

	namespace n_UParticleModuleEventBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x28; // char : 1
		constexpr auto LODDuplicate = 0x28; // char : 1
		constexpr auto bSupportsRandomSeed = 0x28; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x28; // char : 1
		constexpr auto LODValidity = 0x2c; // char
	}

	namespace n_UNavigatableWidgetBase { // : URootWidget
		constexpr auto SignalEntrySelected = 0x318; // FScriptMulticastDelegate
		constexpr auto SignalSelected = 0x328; // FScriptMulticastDelegate
		constexpr auto SignalNavigateVerticaly = 0x338; // FScriptMulticastDelegate
		constexpr auto SignalDeselected = 0x348; // FScriptMulticastDelegate
		constexpr auto HoveredSound = 0x358; // USoundBase*
		constexpr auto DisableContainerNavigation = 0x380; // bool
	}

	namespace n_UInterpGroupInst { // : UObject
		constexpr auto Group = 0x28; // UInterpGroup*
		constexpr auto GroupActor = 0x30; // AActor*
		constexpr auto TrackInst = 0x38; // TArray<UInterpTrackInst*>
	}

	namespace n_UPaperTerrainMaterial { // : UDataAsset
		constexpr auto Rules = 0x28; // TArray<FPaperTerrainMaterialRule>
		constexpr auto InteriorFill = 0x38; // UPaperSprite*
	}

	namespace n_UPoseAsset { // : UAnimationAsset
		constexpr auto PoseContainer = 0x78; // FPoseDataContainer
		constexpr auto bAdditivePose = 0x108; // bool
		constexpr auto BasePoseIndex = 0x10c; // int32_t
		constexpr auto RetargetSource = 0x110; // FName
	}

	namespace n_UTexture { // : UObject
		constexpr auto LightingGuid = 0x30; // FGuid
		constexpr auto LODBias = 0x40; // int32_t
		constexpr auto NumCinematicMipLevels = 0x44; // int32_t
		constexpr auto SRGB = 0x48; // char : 1
		constexpr auto NeverStream = 0x48; // char : 1
		constexpr auto bNoTiling = 0x48; // char : 1
		constexpr auto bUseCinematicMipLevels = 0x48; // char : 1
		constexpr auto AssetUserData = 0x50; // TArray<UAssetUserData*>
		constexpr auto CachedCombinedLODBias = 0x60; // int32_t
		constexpr auto bAsyncResourceReleaseHasBeenStarted = 0x64; // char : 1
		constexpr auto CompressionSettings = 0x68; // TextureCompressionSettings
		constexpr auto Filter = 0x69; // TextureFilter
		constexpr auto LODGroup = 0x6a; // TextureGroup
	}

	namespace n_UMaterialExpressionNoise { // : UMaterialExpression
		constexpr auto Position = 0x60; // FExpressionInput
		constexpr auto FilterWidth = 0x98; // FExpressionInput
		constexpr auto Scale = 0xd0; // float
		constexpr auto quality = 0xd4; // int32_t
		constexpr auto NoiseFunction = 0xd8; // ENoiseFunction
		constexpr auto bTurbulence = 0xdc; // char : 1
		constexpr auto Levels = 0xe0; // int32_t
		constexpr auto OutputMin = 0xe4; // float
		constexpr auto OutputMax = 0xe8; // float
		constexpr auto LevelScale = 0xec; // float
		constexpr auto bTiling = 0xf0; // char : 1
		constexpr auto RepeatSize = 0xf4; // uint32_t
	}

	namespace n_UMultiLineEditableText { // : UTextLayoutWidget
		constexpr auto Text = 0x148; // FText
		constexpr auto HintText = 0x160; // FText
		constexpr auto HintTextDelegate = 0x178; // DelegateProperty
		constexpr auto WidgetStyle = 0x188; // FTextBlockStyle
		constexpr auto Font = 0x390; // FSlateFontInfo
		constexpr auto AllowContextMenu = 0x3f8; // bool
		constexpr auto IsReadOnly = 0x3f9; // bool
		constexpr auto OnTextChanged = 0x400; // FScriptMulticastDelegate
		constexpr auto OnTextCommitted = 0x410; // FScriptMulticastDelegate
		constexpr auto OnFocusReceived = 0x420; // FScriptMulticastDelegate
	}

	namespace n_UTextRenderComponent { // : UPrimitiveComponent
		constexpr auto Text = 0x6c0; // FText
		constexpr auto TextMaterial = 0x6d8; // UMaterialInterface*
		constexpr auto Font = 0x6e0; // UFont*
		constexpr auto HorizontalAlignment = 0x6e8; // EHorizTextAligment
		constexpr auto VerticalAlignment = 0x6e9; // EVerticalTextAligment
		constexpr auto TextRenderColor = 0x6ec; // FColor
		constexpr auto XScale = 0x6f0; // float
		constexpr auto YScale = 0x6f4; // float
		constexpr auto WorldSize = 0x6f8; // float
		constexpr auto InvDefaultSize = 0x6fc; // float
		constexpr auto HorizSpacingAdjust = 0x700; // float
		constexpr auto VertSpacingAdjust = 0x704; // float
		constexpr auto bAlwaysRenderAsText = 0x708; // char : 1
	}

	namespace n_ANPCRegistry { // : AActor
		constexpr auto m_ActiveSpawners = 0x3d0; // TArray<TScriptInterface<Class>>
	}

	namespace n_ACineCameraActor { // : ACameraActor
		constexpr auto LookatTrackingSettings = 0x8d0; // FCameraLookatTrackingSettings
	}

	namespace n_UItemTemperatureBar { // : URootWidget
		constexpr auto NumBars = 0x370; // int32_t
		constexpr auto ColdIcon = 0x378; // UTexture2D*
		constexpr auto ColdBar = 0x398; // UTexture2D*
		constexpr auto HeatIcon = 0x3b8; // UTexture2D*
		constexpr auto HeatBar = 0x3d8; // UTexture2D*
		constexpr auto EmptyBar = 0x3f8; // UTexture2D*
		constexpr auto m_GameItem = 0x420; // UGameItem*
	}

	namespace n_UThrallRecipeItem { // : URecipeItem
		constexpr auto SourceThrallItem = 0x2c0; // UThrallItem*
		constexpr auto SourceThrallItemIndex = 0x2c8; // int32_t
		constexpr auto SourceThrallInventoryType = 0x2cc; // EInventoryType
		constexpr auto Name = 0x2d0; // FText
		constexpr auto Icon = 0x2e8; // UTexture2D*
	}

	namespace n_UMovieSceneVectorTrack { // : UMovieScenePropertyTrack
		constexpr auto NumChannelsUsed = 0xe0; // int32_t
	}

	namespace n_UTextureLODSettings { // : UObject
		constexpr auto TextureLODGroups = 0x28; // TArray<FTextureLODGroup>
	}

	namespace n_UFullscreenMap { // : UWindowRoot
		constexpr auto m_MapWithMarkersWidget = 0x398; // UMapWithMarkerWidget*
		constexpr auto m_ZoomIn = 0x3a0; // UFCButton*
		constexpr auto m_ZoomOut = 0x3a8; // UFCButton*
		constexpr auto m_MouseControlBox = 0x3b0; // UWidget*
	}

	namespace n_ATowerOfSiptah_SurgeSpawnHolder { // : AActor
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto CustomTimeDilation = 0x80; // float
		constexpr auto bHidden = 0x84; // char : 1
		constexpr auto bNetTemporary = 0x84; // char : 1
		constexpr auto bNetStartup = 0x84; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x84; // char : 1
		constexpr auto bAlwaysRelevant = 0x84; // char : 1
		constexpr auto bReplicateMovement = 0x84; // char : 1
		constexpr auto bTearOff = 0x84; // char : 1
		constexpr auto bExchangedRoles = 0x84; // char : 1
		constexpr auto bPendingNetUpdate = 0x85; // char : 1
		constexpr auto bNetLoadOnClient = 0x85; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x85; // char : 1
		constexpr auto bBlockInput = 0x85; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x85; // char : 1
		constexpr auto bActorEnableCollision = 0x86; // char : 1
		constexpr auto bReplicates = 0x86; // char : 1
		constexpr auto bLostRelevancy = 0x86; // char : 1
		constexpr auto NetDriverName = 0x88; // FName
		constexpr auto bCanBeInCluster = 0x90; // char : 1
		constexpr auto RemoteRole = 0x91; // ENetRole
		constexpr auto Owner = 0x98; // AActor*
		constexpr auto ReplicatedMovement = 0xa0; // FRepMovement
		constexpr auto AttachmentReplication = 0xd8; // FRepAttachment
		constexpr auto Role = 0x118; // ENetRole
		constexpr auto AutoReceiveInput = 0x11a; // EAutoReceiveInput
		constexpr auto InputPriority = 0x11c; // int32_t
		constexpr auto InputComponent = 0x120; // UInputComponent*
		constexpr auto InputConsumeOption = 0x128; // EInputConsumeOptions
		constexpr auto NetCullDistanceSquared = 0x12c; // float
		constexpr auto ViewTargetNetCullDistanceSquared = 0x130; // float
		constexpr auto NetTag = 0x134; // int32_t
		constexpr auto NetUpdateTime = 0x138; // float
		constexpr auto NetUpdateFrequency = 0x13c; // float
		constexpr auto MinNetUpdateFrequency = 0x140; // float
		constexpr auto NetPriority = 0x144; // float
		constexpr auto LastNetUpdateTime = 0x148; // float
		constexpr auto bAutoDestroyWhenFinished = 0x14c; // char : 1
		constexpr auto bCanBeDamaged = 0x14c; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x14c; // char : 1
		constexpr auto bCollideWhenPlacing = 0x14c; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x14c; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x14c; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x14c; // char : 1
		constexpr auto SpawnCollisionHandlingMethod = 0x14d; // ESpawnActorCollisionHandlingMethod
		constexpr auto Instigator = 0x158; // APawn*
		constexpr auto Children = 0x160; // TArray<AActor*>
		constexpr auto RootComponent = 0x170; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x178; // TArray<AMatineeActor*>
		constexpr auto InitialLifeSpan = 0x188; // float
		constexpr auto Layers = 0x198; // TArray<FName>
		constexpr auto ParentComponentActor = 0x1a8; // TWeakObjectPtr<AActor>
		constexpr auto ParentComponent = 0x1b0; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x1b8; // char : 1
		constexpr auto bUseExtendedRelevancyTimeout = 0x1b8; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x1b8; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x1b8; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x1b8; // char : 1
		constexpr auto Tags = 0x1c0; // TArray<FName>
		constexpr auto HiddenEditorViews = 0x1d0; // uint64_t
		constexpr auto OnTakeAnyDamage = 0x1d8; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x1e8; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x1f8; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x208; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x218; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x228; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x238; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x248; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x258; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x268; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x278; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x288; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x298; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x2a8; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x2b8; // FScriptMulticastDelegate
		constexpr auto BlueprintCreatedComponents = 0x3a8; // TArray<UActorComponent*>
		constexpr auto InstanceComponents = 0x3b8; // TArray<UActorComponent*>
	}

	namespace n_ASplineBuildLimit { // : AActor
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto CustomTimeDilation = 0x80; // float
		constexpr auto bHidden = 0x84; // char : 1
		constexpr auto bNetTemporary = 0x84; // char : 1
		constexpr auto bNetStartup = 0x84; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x84; // char : 1
		constexpr auto bAlwaysRelevant = 0x84; // char : 1
		constexpr auto bReplicateMovement = 0x84; // char : 1
		constexpr auto bTearOff = 0x84; // char : 1
		constexpr auto bExchangedRoles = 0x84; // char : 1
		constexpr auto bPendingNetUpdate = 0x85; // char : 1
		constexpr auto bNetLoadOnClient = 0x85; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x85; // char : 1
		constexpr auto bBlockInput = 0x85; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x85; // char : 1
		constexpr auto bActorEnableCollision = 0x86; // char : 1
		constexpr auto bReplicates = 0x86; // char : 1
		constexpr auto bLostRelevancy = 0x86; // char : 1
		constexpr auto NetDriverName = 0x88; // FName
		constexpr auto bCanBeInCluster = 0x90; // char : 1
		constexpr auto RemoteRole = 0x91; // ENetRole
		constexpr auto Owner = 0x98; // AActor*
		constexpr auto ReplicatedMovement = 0xa0; // FRepMovement
		constexpr auto AttachmentReplication = 0xd8; // FRepAttachment
		constexpr auto Role = 0x118; // ENetRole
		constexpr auto AutoReceiveInput = 0x11a; // EAutoReceiveInput
		constexpr auto InputPriority = 0x11c; // int32_t
		constexpr auto InputComponent = 0x120; // UInputComponent*
		constexpr auto InputConsumeOption = 0x128; // EInputConsumeOptions
		constexpr auto NetCullDistanceSquared = 0x12c; // float
		constexpr auto ViewTargetNetCullDistanceSquared = 0x130; // float
		constexpr auto NetTag = 0x134; // int32_t
		constexpr auto NetUpdateTime = 0x138; // float
		constexpr auto NetUpdateFrequency = 0x13c; // float
		constexpr auto MinNetUpdateFrequency = 0x140; // float
		constexpr auto NetPriority = 0x144; // float
		constexpr auto LastNetUpdateTime = 0x148; // float
		constexpr auto bAutoDestroyWhenFinished = 0x14c; // char : 1
		constexpr auto bCanBeDamaged = 0x14c; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x14c; // char : 1
		constexpr auto bCollideWhenPlacing = 0x14c; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x14c; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x14c; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x14c; // char : 1
		constexpr auto SpawnCollisionHandlingMethod = 0x14d; // ESpawnActorCollisionHandlingMethod
		constexpr auto Instigator = 0x158; // APawn*
		constexpr auto Children = 0x160; // TArray<AActor*>
		constexpr auto RootComponent = 0x170; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x178; // TArray<AMatineeActor*>
		constexpr auto InitialLifeSpan = 0x188; // float
		constexpr auto Layers = 0x198; // TArray<FName>
		constexpr auto ParentComponentActor = 0x1a8; // TWeakObjectPtr<AActor>
		constexpr auto ParentComponent = 0x1b0; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x1b8; // char : 1
		constexpr auto bUseExtendedRelevancyTimeout = 0x1b8; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x1b8; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x1b8; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x1b8; // char : 1
		constexpr auto Tags = 0x1c0; // TArray<FName>
		constexpr auto HiddenEditorViews = 0x1d0; // uint64_t
		constexpr auto OnTakeAnyDamage = 0x1d8; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x1e8; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x1f8; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x208; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x218; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x228; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x238; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x248; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x258; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x268; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x278; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x288; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x298; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x2a8; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x2b8; // FScriptMulticastDelegate
		constexpr auto BlueprintCreatedComponents = 0x3a8; // TArray<UActorComponent*>
		constexpr auto InstanceComponents = 0x3b8; // TArray<UActorComponent*>
	}

	namespace n_URecastNavMeshDataChunk { // : UNavigationDataChunk
		constexpr auto NavigationDataName = 0x28; // FName
	}

	namespace n_UParticleSpriteEmitter { // : UParticleEmitter
		constexpr auto EmitterName = 0x28; // FName
		constexpr auto SubUVDataOffset = 0x30; // int32_t
		constexpr auto EmitterRenderMode = 0x34; // EEmitterRenderMode
		constexpr auto LODLevels = 0x38; // TArray<UParticleLODLevel*>
		constexpr auto ConvertedModules = 0x48; // char : 1
		constexpr auto PeakActiveParticles = 0x4c; // int32_t
		constexpr auto InitialAllocationCount = 0x50; // int32_t
		constexpr auto MediumDetailSpawnRateScale = 0x54; // float
		constexpr auto QualityLevelSpawnRateScale = 0x58; // float
		constexpr auto DetailMode = 0x5c; // EDetailMode
		constexpr auto bIsSoloing = 0x60; // char : 1
		constexpr auto bCookedOut = 0x60; // char : 1
		constexpr auto bDisabledLODsKeepEmitterAlive = 0x60; // char : 1
		constexpr auto bDisableWhenInsignficant = 0x60; // char : 1
		constexpr auto SignificanceLevel = 0x64; // EParticleSignificanceLevel
	}

	namespace n_UMovieScene { // : UMovieSceneSignedObject
		constexpr auto Spawnables = 0xb0; // TArray<FMovieSceneSpawnable>
		constexpr auto Possessables = 0xc0; // TArray<FMovieScenePossessable>
		constexpr auto ObjectBindings = 0xd0; // TArray<FMovieSceneBinding>
		constexpr auto MasterTracks = 0xe0; // TArray<UMovieSceneTrack*>
		constexpr auto CameraCutTrack = 0xf0; // UMovieSceneTrack*
		constexpr auto SelectionRange = 0xf8; // FFloatRange
		constexpr auto PlaybackRange = 0x108; // FFloatRange
		constexpr auto bForceFixedFrameIntervalPlayback = 0x118; // bool
		constexpr auto FixedFrameInterval = 0x11c; // float
		constexpr auto InTime = 0x120; // float
		constexpr auto OutTime = 0x124; // float
		constexpr auto StartTime = 0x128; // float
		constexpr auto EndTime = 0x12c; // float
	}

	namespace n_ABaseHUD_C { // : AConanHUD
		constexpr auto UberGraphFrame = 0x4d8; // FPointerToUberGraphFrame
		constexpr auto DefaultSceneRoot = 0x4e0; // USceneComponent*
		constexpr auto HudWidget = 0x4e8; // UW_HUD_C*
	}

	namespace n_UMaterialExpressionTime { // : UMaterialExpression
		constexpr auto bIgnorePause = 0x60; // char : 1
		constexpr auto bOverride_Period = 0x60; // char : 1
		constexpr auto Period = 0x64; // float
	}

	namespace n_UParticleModuleKillBox { // : UParticleModuleKillBase
		constexpr auto LowerLeftCorner = 0x30; // FRawDistributionVector
		constexpr auto UpperRightCorner = 0x80; // FRawDistributionVector
		constexpr auto bAbsolute = 0xd0; // char : 1
		constexpr auto bKillInside = 0xd0; // char : 1
		constexpr auto bAxisAlignedAndFixedSize = 0xd0; // char : 1
	}

	namespace n_UShortcutRefItem { // : UGameItem
		constexpr auto m_TargetItem = 0x260; // UGameItem*
	}

	namespace n_USoundSubmix { // : UObject
		constexpr auto ChildSubmixes = 0x28; // TArray<USoundSubmix*>
		constexpr auto ParentSubmix = 0x38; // USoundSubmix*
		constexpr auto SubmixEffectChain = 0x40; // TArray<USoundEffectSubmixPreset*>
		constexpr auto OutputWetLevel = 0x50; // float
	}

	namespace n_UAISense_Team { // : UAISense
		constexpr auto RegisteredEvents = 0x120; // TArray<FAITeamStimulusEvent>
	}

	namespace n_UInitHighlights { // : UBlueprintAsyncActionBase
		constexpr auto onSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto onFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_UConanAdaptiveSystemComponent { // : UActorComponent
		constexpr auto PrimaryComponentTick = 0x30; // FActorComponentTickFunction
		constexpr auto ComponentTags = 0x88; // TArray<FName>
		constexpr auto AssetUserData = 0x98; // TArray<UAssetUserData*>
		constexpr auto bReplicates = 0xa8; // char : 1
		constexpr auto bIsClientOnly = 0xa8; // char : 1
		constexpr auto bNetAddressable = 0xa8; // char : 1
		constexpr auto bAllowAnyoneToDestroyMe = 0xa8; // char : 1
		constexpr auto bCreatedByConstructionScript = 0xa8; // char : 1
		constexpr auto bInstanceComponent = 0xa8; // char : 1
		constexpr auto bAutoActivate = 0xa8; // char : 1
		constexpr auto bIsActive = 0xa8; // char : 1
		constexpr auto bEditableWhenInherited = 0xa8; // char : 1
		constexpr auto bCanEverAffectNavigation = 0xa8; // char : 1
		constexpr auto bIsEditorOnly = 0xa8; // char : 1
		constexpr auto CreationMethod = 0xb1; // EComponentCreationMethod
		constexpr auto UCSModifiedProperties = 0xc0; // TArray<FSimpleMemberReference>
		constexpr auto OnComponentActivated = 0xd0; // FScriptMulticastDelegate
		constexpr auto OnComponentDeactivated = 0xe0; // FScriptMulticastDelegate
	}

	namespace n_UTimelineComponent { // : UActorComponent
		constexpr auto TheTimeline = 0x100; // FTimeline
		constexpr auto bIgnoreTimeDilation = 0x1e0; // char : 1
	}

	namespace n_UW_UpsellButton_C { // : UUpSellButtonbase
		constexpr auto UberGraphFrame = 0x358; // FPointerToUberGraphFrame
		constexpr auto Anim_Shine = 0x360; // UWidgetAnimation*
	}

	namespace n_UBoolBinding { // : UPropertyBinding
		constexpr auto SourceObject = 0x28; // TWeakObjectPtr<UObject>
		constexpr auto SourcePath = 0x30; // FDynamicPropertyPath
		constexpr auto DestinationProperty = 0x40; // FName
	}

	namespace n_UModelComponent { // : UPrimitiveComponent
		constexpr auto ModelBodySetup = 0x6d8; // UBodySetup*
	}

	namespace n_UMovieScene3DTransformSection { // : UMovieSceneSection
		constexpr auto Translation = 0xd0; // FRichCurve [0x3]
		constexpr auto Rotation = 0x220; // FRichCurve [0x3]
		constexpr auto Scale = 0x370; // FRichCurve [0x3]
	}

	namespace n_UW_JourneyStepFIFOMessageView2_C { // : UFIFOMessageView
		constexpr auto UberGraphFrame = 0x358; // FPointerToUberGraphFrame
		constexpr auto FadeInOut = 0x360; // UWidgetAnimation*
		constexpr auto Header = 0x368; // UTextBlock*
		constexpr auto Image_1 = 0x370; // UImage*
		constexpr auto Image_8 = 0x378; // UImage*
		constexpr auto Image_9 = 0x380; // UImage*
		constexpr auto Image_10 = 0x388; // UImage*
		constexpr auto Image_11 = 0x390; // UImage*
		constexpr auto Image_12 = 0x398; // UImage*
		constexpr auto Image_13 = 0x3a0; // UImage*
		constexpr auto Text = 0x3a8; // UMultiLineEditableTextBox*
	}

	namespace n_URichTextBlockDecorator { // : UObject
		constexpr auto bReveal = 0x28; // bool
		constexpr auto RevealedIndex = 0x2c; // int32_t
	}

	namespace n_UItemInfoPopup { // : UWindowRoot
		constexpr auto PressSpeed = 0x398; // float
		constexpr auto ItemStatViewClass = 0x3a0; // UItemStatView*
		constexpr auto TextureBlendMatInst = 0x3a8; // UMaterialInstance*
	}

	namespace n_UInputKeySelector { // : UWidget
		constexpr auto SelectedKey = 0x118; // FInputChord
		constexpr auto Font = 0x138; // FSlateFontInfo
		constexpr auto Margin = 0x1a0; // FMargin
		constexpr auto ColorAndOpacity = 0x1b0; // FLinearColor
		constexpr auto KeySelectionText = 0x1c0; // FText
		constexpr auto bAllowModifierKeys = 0x1d8; // bool
		constexpr auto OnKeySelected = 0x1e0; // FScriptMulticastDelegate
		constexpr auto OnIsSelectingKeyChanged = 0x1f0; // FScriptMulticastDelegate
	}

	namespace n_UAvoidanceManager { // : UObject
		constexpr auto DefaultTimeToLive = 0x30; // float
		constexpr auto LockTimeAfterAvoid = 0x34; // float
		constexpr auto LockTimeAfterClean = 0x38; // float
		constexpr auto DeltaTimeToPredict = 0x3c; // float
		constexpr auto ArtificialRadiusExpansion = 0x40; // float
		constexpr auto TestHeightDifference = 0x44; // float
		constexpr auto HeightCheckMargin = 0x48; // float
	}

	namespace n_UCarouselWindow { // : UWindowRoot
		constexpr auto CarouselWindowNames = 0x398; // TArray<FName>
		constexpr auto CarouselButtonSound = 0x3a8; // USoundBase*
		constexpr auto CarouselHiddenSound = 0x3c8; // USoundBase*
		constexpr auto m_ActivatedWindow = 0x430; // UWindowRoot*
		constexpr auto m_ActiveInputComponent = 0x460; // UInputComponent*
	}

	namespace n_UBTComposite_Selector { // : UBTCompositeNode
		constexpr auto Children = 0x58; // TArray<FBTCompositeChild>
		constexpr auto Services = 0x68; // TArray<UBTService*>
	}

	namespace n_UW_ItemTemperatureBar_C { // : UItemTemperatureBar
		constexpr auto TemperatureBar1 = 0x428; // UImage*
		constexpr auto TemperatureBar10 = 0x430; // UImage*
		constexpr auto TemperatureBar2 = 0x438; // UImage*
		constexpr auto TemperatureBar3 = 0x440; // UImage*
		constexpr auto TemperatureBar4 = 0x448; // UImage*
		constexpr auto TemperatureBar5 = 0x450; // UImage*
		constexpr auto TemperatureBar6 = 0x458; // UImage*
		constexpr auto TemperatureBar7 = 0x460; // UImage*
		constexpr auto TemperatureBar8 = 0x468; // UImage*
		constexpr auto TemperatureBar9 = 0x470; // UImage*
		constexpr auto TemperatureIcon = 0x478; // UImage*
	}

	namespace n_UParticleModuleEventGenerator { // : UParticleModuleEventBase
		constexpr auto events = 0x30; // TArray<FParticleEvent_GenerateInfo>
	}

	namespace n_AArchVisCharacter { // : ACharacter
		constexpr auto LookUpAxisName = 0x7f0; // FString
		constexpr auto LookUpAtRateAxisName = 0x800; // FString
		constexpr auto TurnAxisName = 0x810; // FString
		constexpr auto TurnAtRateAxisName = 0x820; // FString
		constexpr auto MoveForwardAxisName = 0x830; // FString
		constexpr auto MoveRightAxisName = 0x840; // FString
		constexpr auto MouseSensitivityScale_Pitch = 0x850; // float
		constexpr auto MouseSensitivityScale_Yaw = 0x854; // float
	}

	namespace n_UMaterialExpressionCustomOutput { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto Desc = 0x38; // FString
		constexpr auto BorderColor = 0x48; // FColor
		constexpr auto bRealtimePreview = 0x4c; // char : 1
		constexpr auto bNeedToUpdatePreview = 0x4c; // char : 1
		constexpr auto bIsParameterExpression = 0x4c; // char : 1
		constexpr auto bCommentBubbleVisible = 0x4c; // char : 1
		constexpr auto bShowOutputNameOnPin = 0x4c; // char : 1
		constexpr auto bHidePreviewWindow = 0x4c; // char : 1
		constexpr auto bCollapsed = 0x4c; // char : 1
		constexpr auto bShaderInputData = 0x4c; // char : 1
		constexpr auto bShowInputs = 0x4c; // char : 1
		constexpr auto bShowOutputs = 0x4c; // char : 1
		constexpr auto Outputs = 0x50; // TArray<FExpressionOutput>
	}

	namespace n_UMovieSceneCameraShakeSection { // : UMovieSceneSection
		constexpr auto ShakeData = 0xc8; // FMovieSceneCameraShakeSectionData
		constexpr auto ShakeClass = 0xe8; // UCameraShake*
		constexpr auto PlayScale = 0xf0; // float
		constexpr auto PlaySpace = 0xf4; // ECameraAnimPlaySpace
		constexpr auto UserDefinedPlaySpace = 0xf8; // FRotator
	}

	namespace n_UMaterialExpressionFontSampleParameter { // : UMaterialExpressionFontSample
		constexpr auto ParameterName = 0x70; // FName
		constexpr auto ExpressionGUID = 0x78; // FGuid
		constexpr auto Group = 0x88; // FName
	}

	namespace n_UWrapBox { // : UPanelWidget
		constexpr auto InnerSlotPadding = 0x130; // FVector2D
		constexpr auto WrapWidth = 0x138; // float
		constexpr auto bExplicitWrapWidth = 0x13c; // bool
	}

	namespace n_ULoreInteractorBase { // : UActorComponent
		constexpr auto PickedupLoreItems = 0xf8; // TArray<int32_t>
	}

	namespace n_UMovieSceneActorReferenceTrack { // : UMovieScenePropertyTrack
		constexpr auto PropertyName = 0xb8; // FName
		constexpr auto PropertyPath = 0xc0; // FString
		constexpr auto Sections = 0xd0; // TArray<UMovieSceneSection*>
	}

	namespace n_UInterpGroupInstCamera { // : UInterpGroupInst
		constexpr auto Group = 0x28; // UInterpGroup*
		constexpr auto GroupActor = 0x30; // AActor*
		constexpr auto TrackInst = 0x38; // TArray<UInterpTrackInst*>
	}

	namespace n_ULevelStreamingPersistent { // : ULevelStreaming
		constexpr auto PackageName = 0x28; // FName
		constexpr auto WorldAsset = 0x30; // UWorld*
		constexpr auto PackageNameToLoad = 0x50; // FName
		constexpr auto LODPackageNames = 0x58; // TArray<FName>
		constexpr auto LevelTransform = 0x80; // FTransform
		constexpr auto bShouldBeVisibleInEditor = 0xb0; // char : 1
		constexpr auto bLocked = 0xb0; // char : 1
		constexpr auto bShouldBeLoaded = 0xb0; // char : 1
		constexpr auto bShouldBeVisible = 0xb0; // char : 1
		constexpr auto bIsStatic = 0xb0; // char : 1
		constexpr auto bShouldBlockOnLoad = 0xb0; // char : 1
		constexpr auto LevelLODIndex = 0xb4; // int32_t
		constexpr auto bDisableDistanceStreaming = 0xb8; // char : 1
		constexpr auto bDrawOnLevelStatusMap = 0xb8; // char : 1
		constexpr auto DrawColor = 0xbc; // FColor
		constexpr auto LevelColor = 0xc0; // FLinearColor
		constexpr auto EditorStreamingVolumes = 0xd0; // TArray<ALevelStreamingVolume*>
		constexpr auto MinTimeBetweenVolumeUnloadRequests = 0xe0; // float
		constexpr auto Keywords = 0xe8; // TArray<FString>
		constexpr auto OnLevelLoaded = 0xf8; // FScriptMulticastDelegate
		constexpr auto OnLevelUnloaded = 0x108; // FScriptMulticastDelegate
		constexpr auto OnLevelShown = 0x118; // FScriptMulticastDelegate
		constexpr auto OnLevelHidden = 0x128; // FScriptMulticastDelegate
		constexpr auto LoadedLevel = 0x138; // ULevel*
		constexpr auto PendingUnloadLevel = 0x140; // ULevel*
	}

	namespace n_UPurgeTimer { // : URootWidget
		constexpr auto PurgeHappening = 0x318; // bool
	}

	namespace n_UPawnAction { // : UObject
		constexpr auto ChildAction = 0x28; // UPawnAction*
		constexpr auto ParentAction = 0x30; // UPawnAction*
		constexpr auto OwnerComponent = 0x38; // UPawnActionsComponent*
		constexpr auto Instigator = 0x40; // UObject*
		constexpr auto BrainComp = 0x48; // UBrainComponent*
		constexpr auto bAllowNewSameClassInstance = 0xb8; // char : 1
		constexpr auto bReplaceActiveSameClassInstance = 0xb8; // char : 1
		constexpr auto bShouldPauseMovement = 0xb8; // char : 1
		constexpr auto bAlwaysNotifyOnFinished = 0xb8; // char : 1
	}

	namespace n_UParticleModuleLocation_Seeded { // : UParticleModuleLocation
		constexpr auto RandomSeedInfo = 0x88; // FParticleRandomSeedInfo
	}

	namespace n_UBlackboardComponent { // : UActorComponent
		constexpr auto BrainComp = 0xf8; // UBrainComponent*
		constexpr auto BlackboardAsset = 0x100; // UBlackboardData*
		constexpr auto KeyInstances = 0x128; // TArray<UBlackboardKeyType*>
	}

	namespace n_UDemoNetConnection { // : UNetConnection
		constexpr auto Children = 0x48; // TArray<UChildConnection*>
		constexpr auto Driver = 0x58; // UNetDriver*
		constexpr auto PackageMap = 0x60; // UPackageMap*
		constexpr auto OpenChannels = 0x68; // TArray<UChannel*>
		constexpr auto SentTemporaries = 0x78; // TArray<AActor*>
		constexpr auto ViewTarget = 0x88; // AActor*
		constexpr auto OwningActor = 0x90; // AActor*
		constexpr auto MaxPacket = 0x98; // int32_t
		constexpr auto InternalAck = 0x9c; // char : 1
		constexpr auto AsyncLoadedObjects = 0xa0; // TArray<UObject*>
		constexpr auto PlayerId = 0x170; // FUniqueNetIdRepl
		constexpr auto LastReceiveTime = 0x200; // double
		constexpr auto ActorChannels = 0x334e0; // TMap<AActor*, UActorChannel*>
		constexpr auto ChannelsToTick = 0x33730; // TArray<UChannel*>
	}

	namespace n_UBuildSystemComponent { // : UActorComponent
		constexpr auto isBuilding = 0xf8; // bool
		constexpr auto developerMode = 0xf9; // bool
		constexpr auto CurrentBuildBrushClass = 0x100; // ABuildableBase*
		constexpr auto SourceBuildItem = 0x108; // UBuildingItem*
		constexpr auto buildingMode = 0x110; // EBuildingMode
		constexpr auto ValidSocketResults = 0x118; // TArray<FPotentialBuildGhost>
		constexpr auto CurrentSocketResultIndex = 0x138; // int32_t
		constexpr auto BuildingBrushBase = 0x140; // ABuildableBase*
		constexpr auto PlacementGhostRadius = 0x148; // float
		constexpr auto PlacementGhostObjectType = 0x14c; // ECollisionChannel
		constexpr auto PlacementGhostLineTraceChannel = 0x14d; // ECollisionChannel
		constexpr auto PlacementGhostMaterial = 0x150; // UMaterialInterface*
		constexpr auto PlacementUpgradeGhostMaterial = 0x158; // UMaterialInterface*
		constexpr auto PlacementInvalidGhostMaterial = 0x160; // UMaterialInterface*
		constexpr auto ShowBuildingSockets = 0x168; // bool
		constexpr auto IconDismantle = 0x170; // UTexture2D*
		constexpr auto IconReturnToInventory = 0x178; // UTexture2D*
		constexpr auto m_BuildRange = 0x180; // float
		constexpr auto BuildingTextWidgetComponentClass = 0x188; // UWidgetComponent*
		constexpr auto DebugMaterial = 0x190; // UMaterialInterface*
		constexpr auto debugArrowMesh = 0x198; // UStaticMesh*
		constexpr auto m_GhostBuildingComponent = 0x1a0; // UInstancedStaticMeshComponent*
		constexpr auto m_GhostBuildingUpgradeablesComponent = 0x1a8; // UInstancedStaticMeshComponent*
		constexpr auto m_InvalidGhostBuildingComponent = 0x1b0; // UInstancedStaticMeshComponent*
		constexpr auto m_GhostSocketIndexedResults = 0x1b8; // TArray<FPotentialBuildGhost>
		constexpr auto m_GhostUpgradeSocketIndexedResults = 0x1c8; // TArray<FPotentialBuildGhost>
		constexpr auto m_GhostInvalidSocketIndexedResults = 0x1d8; // TArray<FPotentialBuildGhost>
		constexpr auto m_DistanceSortedQueuedPotentialGhosts = 0x1e8; // TArray<FPotentialBuildGhost>
		constexpr auto m_SocketComponentToModules = 0x278; // TMap<UBuildingSocketComponent*, FBuildingModulesArray>
		constexpr auto m_LastGhostOrigin = 0x2cc; // FVector
		constexpr auto m_bDirtyGhosts = 0x2d8; // bool
		constexpr auto m_bStillDirtyGhosts = 0x2f4; // bool
		constexpr auto m_BuildingTextWidgetComponent = 0x3d0; // UWidgetComponent*
	}

	namespace n_UWidgetComponent { // : UMeshComponent
		constexpr auto Space = 0x7c8; // EWidgetSpace
		constexpr auto WidgetClass = 0x7d0; // UUserWidget*
		constexpr auto DrawSize = 0x7d8; // FIntPoint
		constexpr auto bManuallyRedraw = 0x7e0; // bool
		constexpr auto bRedrawRequested = 0x7e1; // bool
		constexpr auto RedrawTime = 0x7e4; // float
		constexpr auto CurrentDrawSize = 0x7f0; // FIntPoint
		constexpr auto bDrawAtDesiredSize = 0x7f8; // bool
		constexpr auto Pivot = 0x7fc; // FVector2D
		constexpr auto bReceiveHardwareInput = 0x804; // bool
		constexpr auto bWindowFocusable = 0x805; // bool
		constexpr auto ownerPlayer = 0x808; // ULocalPlayer*
		constexpr auto BackgroundColor = 0x810; // FLinearColor
		constexpr auto TintColorAndOpacity = 0x820; // FLinearColor
		constexpr auto OpacityFromTexture = 0x830; // float
		constexpr auto BlendMode = 0x834; // EWidgetBlendMode
		constexpr auto bIsTwoSided = 0x835; // bool
		constexpr auto TickWhenOffscreen = 0x836; // bool
		constexpr auto Widget = 0x838; // UUserWidget*
		constexpr auto BodySetup = 0x860; // UBodySetup*
		constexpr auto TranslucentMaterial = 0x868; // UMaterialInterface*
		constexpr auto TranslucentMaterial_OneSided = 0x870; // UMaterialInterface*
		constexpr auto OpaqueMaterial = 0x878; // UMaterialInterface*
		constexpr auto OpaqueMaterial_OneSided = 0x880; // UMaterialInterface*
		constexpr auto MaskedMaterial = 0x888; // UMaterialInterface*
		constexpr auto MaskedMaterial_OneSided = 0x890; // UMaterialInterface*
		constexpr auto RenderTarget = 0x898; // UTextureRenderTarget2D*
		constexpr auto MaterialInstance = 0x8a0; // UMaterialInstanceDynamic*
		constexpr auto bAddedToScreen = 0x8a8; // bool
		constexpr auto bEditTimeUsable = 0x8a9; // bool
		constexpr auto SharedLayerName = 0x8b0; // FName
		constexpr auto LayerZOrder = 0x8b8; // int32_t
		constexpr auto GeometryMode = 0x8bc; // EWidgetGeometryMode
		constexpr auto CylinderArcAngle = 0x8c0; // float
	}

	namespace n_AGameSession { // : AInfo
		constexpr auto MaxSpectators = 0x3d0; // int32_t
		constexpr auto MaxPlayers = 0x3d4; // int32_t
		constexpr auto MaxPartySize = 0x3d8; // int32_t
		constexpr auto MaxSplitscreensPerConnection = 0x3dc; // char
		constexpr auto bRequiresPushToTalk = 0x3dd; // bool
		constexpr auto SessionName = 0x3e0; // FName
	}

	namespace n_ULandscapeMaterialInstanceConstant { // : UMaterialInstanceConstant
		constexpr auto bIsLayerThumbnail = 0x1e0; // char : 1
		constexpr auto bDisableTessellation = 0x1e0; // char : 1
	}

	namespace n_UFontImportOptions { // : UObject
		constexpr auto Data = 0x28; // FFontImportOptionsData
	}

	namespace n_UW_Settings_C { // : USettingsBase
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto B_Apply = 0x528; // UW_ButtonLarge_C*
		constexpr auto B_Back = 0x530; // UW_ButtonLarge_C*
		constexpr auto B_ConfirmDialog_Accept = 0x538; // UW_ButtonLarge_C*
		constexpr auto B_ConfirmDialog_Revert = 0x540; // UW_ButtonLarge_C*
		constexpr auto B_Cross = 0x548; // UW_ButtonNormal_C*
		constexpr auto B_RestoreDefaults = 0x550; // UW_ButtonLarge_C*
		constexpr auto B_Submenu_Audio = 0x558; // UW_TabButton_C*
		constexpr auto B_Submenu_Control = 0x560; // UW_TabButton_C*
		constexpr auto B_Submenu_GamepadPresets = 0x568; // UW_TabButton_C*
		constexpr auto B_Submenu_Gameplay = 0x570; // UW_TabButton_C*
		constexpr auto B_Submenu_KeyBindings = 0x578; // UW_TabButton_C*
		constexpr auto B_Submenu_ServerSettings = 0x580; // UW_TabButton_C*
		constexpr auto B_Submenu_Video = 0x588; // UW_TabButton_C*
		constexpr auto Brd_GameWindow = 0x590; // UBorder*
		constexpr auto ConfirmSettings = 0x598; // UBorder*
		constexpr auto LeftNavigationIcon = 0x5a0; // UW_HotkeyIcon_C*
		constexpr auto MenuSwitcher = 0x5a8; // UWidgetSwitcher*
		constexpr auto RightNavigationIcon = 0x5b0; // UW_HotkeyIcon_C*
		constexpr auto T_RestoreDefaultLabel = 0x5b8; // UTextBlock*
		constexpr auto Timer = 0x5c0; // UTextBlock*
		constexpr auto W_Settings_Audio = 0x5c8; // UW_Settings_Audio_C*
		constexpr auto W_Settings_Control = 0x5d0; // UW_Settings_Control_C*
		constexpr auto W_Settings_Gameplay = 0x5d8; // UW_Settings_Gameplay_C*
		constexpr auto W_Settings_KeyBindings = 0x5e0; // UW_Settings_KeyBindings_C*
		constexpr auto W_Settings_Server = 0x5e8; // UW_Settings_Server_C*
		constexpr auto W_Settings_Video = 0x5f0; // UW_Settings_Video_C*
		constexpr auto W_SettingsGamepadPreset = 0x5f8; // UW_SettingsGamepadPreset_C*
		constexpr auto TimerValue = 0x600; // int32_t
		constexpr auto OnClose = 0x608; // FScriptMulticastDelegate
		constexpr auto ConfirmVideoDialogTimerHandle = 0x618; // FTimerHandle
		constexpr auto SlotESCPressed = 0x620; // FScriptMulticastDelegate
		constexpr auto VideoConfirmESCStackNode = 0x630; // UEscapeStackNode*
	}

	namespace n_UW_ServerListView_C { // : UServerListView
		constexpr auto UberGraphFrame = 0x620; // FPointerToUberGraphFrame
		constexpr auto ServerList = 0x628; // UW_NavigatableGridPanel_C*
		constexpr auto ScrollToMe = 0x630; // FScriptMulticastDelegate
	}

	namespace n_AConanStaticEmitter { // : AEmitter
		constexpr auto ParticleSystemComponent = 0x3d0; // UParticleSystemComponent*
		constexpr auto bDestroyOnSystemFinish = 0x3d8; // char : 1
		constexpr auto bPostUpdateTickGroup = 0x3d8; // char : 1
		constexpr auto bCurrentlyActive = 0x3d8; // char : 1
		constexpr auto OnParticleSpawn = 0x3e0; // FScriptMulticastDelegate
		constexpr auto OnParticleBurst = 0x3f0; // FScriptMulticastDelegate
		constexpr auto OnParticleDeath = 0x400; // FScriptMulticastDelegate
		constexpr auto OnParticleCollide = 0x410; // FScriptMulticastDelegate
	}

	namespace n_AKillZVolume { // : APhysicsVolume
		constexpr auto TerminalVelocity = 0x408; // float
		constexpr auto Priority = 0x40c; // int32_t
		constexpr auto FluidFriction = 0x410; // float
		constexpr auto bWaterVolume = 0x414; // char : 1
		constexpr auto bPhysicsOnContact = 0x414; // char : 1
	}

	namespace n_USkeletalMeshSocket { // : UObject
		constexpr auto SocketName = 0x28; // FName
		constexpr auto BoneName = 0x30; // FName
		constexpr auto RelativeLocation = 0x38; // FVector
		constexpr auto RelativeRotation = 0x44; // FRotator
		constexpr auto RelativeScale = 0x50; // FVector
		constexpr auto bForceAlwaysAnimated = 0x5c; // bool
	}

	namespace n_URequestPermissionsAsync { // : UBlueprintAsyncActionBase
		constexpr auto onSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto onFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_AConanAmbientSound { // : AActor
		constexpr auto AudioComponent = 0x3d0; // UConanAudioComponent*
	}

	namespace n_UPlayFabAuthenticationContext { // : UObject
		constexpr auto ClientSessionTicket = 0x28; // FString
		constexpr auto EntityToken = 0x38; // FString
		constexpr auto DeveloperSecretKey = 0x48; // FString
		constexpr auto PlayFabId = 0x58; // FString
	}

	namespace n_ULevelStreaming { // : UObject
		constexpr auto PackageName = 0x28; // FName
		constexpr auto WorldAsset = 0x30; // UWorld*
		constexpr auto PackageNameToLoad = 0x50; // FName
		constexpr auto LODPackageNames = 0x58; // TArray<FName>
		constexpr auto LevelTransform = 0x80; // FTransform
		constexpr auto bShouldBeVisibleInEditor = 0xb0; // char : 1
		constexpr auto bLocked = 0xb0; // char : 1
		constexpr auto bShouldBeLoaded = 0xb0; // char : 1
		constexpr auto bShouldBeVisible = 0xb0; // char : 1
		constexpr auto bIsStatic = 0xb0; // char : 1
		constexpr auto bShouldBlockOnLoad = 0xb0; // char : 1
		constexpr auto LevelLODIndex = 0xb4; // int32_t
		constexpr auto bDisableDistanceStreaming = 0xb8; // char : 1
		constexpr auto bDrawOnLevelStatusMap = 0xb8; // char : 1
		constexpr auto DrawColor = 0xbc; // FColor
		constexpr auto LevelColor = 0xc0; // FLinearColor
		constexpr auto EditorStreamingVolumes = 0xd0; // TArray<ALevelStreamingVolume*>
		constexpr auto MinTimeBetweenVolumeUnloadRequests = 0xe0; // float
		constexpr auto Keywords = 0xe8; // TArray<FString>
		constexpr auto OnLevelLoaded = 0xf8; // FScriptMulticastDelegate
		constexpr auto OnLevelUnloaded = 0x108; // FScriptMulticastDelegate
		constexpr auto OnLevelShown = 0x118; // FScriptMulticastDelegate
		constexpr auto OnLevelHidden = 0x128; // FScriptMulticastDelegate
		constexpr auto LoadedLevel = 0x138; // ULevel*
		constexpr auto PendingUnloadLevel = 0x140; // ULevel*
	}

	namespace n_UBTService_RunEQS { // : UBTService_BlackboardBase
		constexpr auto EQSRequest = 0x98; // FEQSParametrizedQueryExecutionRequest
	}

	namespace n_UAddMemberBase { // : UWindowRoot
		constexpr auto ListEntryClass = 0x3e0; // UUserWidget*
	}

	namespace n_USignWidgetComponent { // : UWidgetComponent
		constexpr auto Space = 0x7c8; // EWidgetSpace
		constexpr auto WidgetClass = 0x7d0; // UUserWidget*
		constexpr auto DrawSize = 0x7d8; // FIntPoint
		constexpr auto bManuallyRedraw = 0x7e0; // bool
		constexpr auto bRedrawRequested = 0x7e1; // bool
		constexpr auto RedrawTime = 0x7e4; // float
		constexpr auto CurrentDrawSize = 0x7f0; // FIntPoint
		constexpr auto bDrawAtDesiredSize = 0x7f8; // bool
		constexpr auto Pivot = 0x7fc; // FVector2D
		constexpr auto bReceiveHardwareInput = 0x804; // bool
		constexpr auto bWindowFocusable = 0x805; // bool
		constexpr auto ownerPlayer = 0x808; // ULocalPlayer*
		constexpr auto BackgroundColor = 0x810; // FLinearColor
		constexpr auto TintColorAndOpacity = 0x820; // FLinearColor
		constexpr auto OpacityFromTexture = 0x830; // float
		constexpr auto BlendMode = 0x834; // EWidgetBlendMode
		constexpr auto bIsTwoSided = 0x835; // bool
		constexpr auto TickWhenOffscreen = 0x836; // bool
		constexpr auto Widget = 0x838; // UUserWidget*
		constexpr auto BodySetup = 0x860; // UBodySetup*
		constexpr auto TranslucentMaterial = 0x868; // UMaterialInterface*
		constexpr auto TranslucentMaterial_OneSided = 0x870; // UMaterialInterface*
		constexpr auto OpaqueMaterial = 0x878; // UMaterialInterface*
		constexpr auto OpaqueMaterial_OneSided = 0x880; // UMaterialInterface*
		constexpr auto MaskedMaterial = 0x888; // UMaterialInterface*
		constexpr auto MaskedMaterial_OneSided = 0x890; // UMaterialInterface*
		constexpr auto RenderTarget = 0x898; // UTextureRenderTarget2D*
		constexpr auto MaterialInstance = 0x8a0; // UMaterialInstanceDynamic*
		constexpr auto bAddedToScreen = 0x8a8; // bool
		constexpr auto bEditTimeUsable = 0x8a9; // bool
		constexpr auto SharedLayerName = 0x8b0; // FName
		constexpr auto LayerZOrder = 0x8b8; // int32_t
		constexpr auto GeometryMode = 0x8bc; // EWidgetGeometryMode
		constexpr auto CylinderArcAngle = 0x8c0; // float
	}

	namespace n_UGuildMembersBase { // : UCharacterListBase
		constexpr auto m_GuildContextMenu = 0x360; // UListMenu*
	}

	namespace n_UMediaSoundWave { // : USoundWave
		constexpr auto AudioTrackIndex = 0x270; // int32_t
		constexpr auto MediaPlayer = 0x278; // UMediaPlayer*
	}

	namespace n_URecipeItem { // : UGameItem
		constexpr auto BuildingModuleClass = 0x248; // UObject*
		constexpr auto CraftingCharacterUID = 0x250; // UUniqueID*
		constexpr auto Ingredients = 0x258; // TArray<FIngredientEntry>
		constexpr auto Results = 0x268; // TArray<FIngredientEntry>
		constexpr auto PlayerContext = 0x278; // FGameMetricsPlayerContext
	}

	namespace n_UEnvQueryGenerator_SimpleGrid { // : UEnvQueryGenerator_ProjectedPoints
		constexpr auto GridSize = 0x80; // FAIDataProviderFloatValue
		constexpr auto SpaceBetween = 0xb0; // FAIDataProviderFloatValue
		constexpr auto GenerateAround = 0xe0; // UEnvQueryContext*
	}

	namespace n_UConanBTDecorator_WeaponStatus { // : UConanBTDecorator_Base
		constexpr auto UpdateRate = 0x68; // float
	}

	namespace n_UCharacterUploadBase { // : UWindowRoot
		constexpr auto CloseOnClick = 0x318; // bool
		constexpr auto BlockPlayerInput = 0x319; // bool
		constexpr auto OpeningSlateSound = 0x320; // FSlateSound
		constexpr auto ClosingSlateSound = 0x338; // FSlateSound
		constexpr auto SignalClosing = 0x350; // FScriptMulticastDelegate
		constexpr auto SignalOpened = 0x360; // FScriptMulticastDelegate
		constexpr auto m_WindowHotkeys = 0x370; // TArray<FGamepadHotkeyHelp>
		constexpr auto m_InputComponent = 0x380; // UInputComponent*
		constexpr auto m_GUIModule = 0x388; // UGUIModule*
	}

	namespace n_UMaterialExpressionSceneDepth { // : UMaterialExpression
		constexpr auto InputMode = 0x60; // EMaterialSceneAttributeInputMode
		constexpr auto Input = 0x68; // FExpressionInput
		constexpr auto Coordinates = 0xa0; // FExpressionInput
		constexpr auto ConstInput = 0xd8; // FVector2D
	}

	namespace n_UParticleModuleMeshRotation { // : UParticleModuleRotationBase
		constexpr auto StartRotation = 0x30; // FRawDistributionVector
		constexpr auto bInheritParent = 0x80; // char : 1
	}

	namespace n_UMaterialExpressionTextureCoordinate { // : UMaterialExpression
		constexpr auto CoordinateIndex = 0x60; // int32_t
		constexpr auto UTiling = 0x64; // float
		constexpr auto VTiling = 0x68; // float
		constexpr auto UnMirrorU = 0x6c; // char : 1
		constexpr auto UnMirrorV = 0x6c; // char : 1
	}

	namespace n_UW_MouseBlockWindow_C { // : UMouseBlockWindowBase
		constexpr auto MouseBlocker = 0x3b8; // USpacer*
	}

	namespace n_UTargetingSystemComponent { // : UActorComponent
		constexpr auto NumHealthBars = 0xf8; // int32_t
		constexpr auto HealthBarFadeout = 0xfc; // float
		constexpr auto HealthbarWidgetClass = 0x100; // UUserWidget*
		constexpr auto HealthbarMaterial = 0x108; // UMaterialInterface*
		constexpr auto TargetLockWidgetClass = 0x110; // UUserWidget*
		constexpr auto TargetLockMaterial = 0x118; // UMaterialInterface*
		constexpr auto Healthbars = 0x120; // TArray<FTargetingWidgetStatus>
		constexpr auto TargetLock = 0x130; // FTargetingWidgetStatus
	}

	namespace n_UInAppPurchaseCallbackProxy { // : UObject
		constexpr auto onSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto onFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_USign3DText { // : URootWidget
		constexpr auto SignalSignNeedsRedraw = 0x318; // FScriptMulticastDelegate
	}

	namespace n_UServerMOTDBase { // : UWindowRoot
		constexpr auto OriginalText = 0x398; // FText
	}

	namespace n_USoundNodeAssetReferencer { // : USoundNode
		constexpr auto ChildNodes = 0x28; // TArray<USoundNode*>
	}

	namespace n_UCollisionSystemComponent { // : UActorComponent
		constexpr auto OnHitActor = 0xf8; // FScriptMulticastDelegate
		constexpr auto DefendingActors = 0x108; // TArray<AActor*>
		constexpr auto SweepAttackGroupsHit = 0x118; // TMap<AActor*, int32_t>
		constexpr auto HasDoneLineTrace = 0x168; // bool
		constexpr auto LineTraceHitResult = 0x170; // FHitResult
		constexpr auto SweepHitResults = 0x1f8; // TArray<FHitResult>
		constexpr auto VisitedFeedbackResults = 0x208; // TArray<FHitResult>
		constexpr auto FinishedFeedbackResults = 0x218; // TArray<FHitResult>
		constexpr auto HasSweepHitAnything = 0x228; // bool
		constexpr auto LineTraceWasAHit = 0x229; // bool
	}

	namespace n_UFoliageType_InstancedStaticMesh { // : UFoliageType
		constexpr auto Mesh = 0x450; // UStaticMesh*
		constexpr auto OverrideMaterials = 0x458; // TArray<UMaterialInterface*>
		constexpr auto ComponentClass = 0x468; // UFoliageInstancedStaticMeshComponent*
	}

	namespace n_UWritableNoteBase { // : UWindowRoot
		constexpr auto SignalPlacableNoteTextChange = 0x398; // FScriptMulticastDelegate
	}

	namespace n_UMaterialExpressionArctangent2 { // : UMaterialExpression
		constexpr auto Y = 0x60; // FExpressionInput
		constexpr auto X = 0x98; // FExpressionInput
	}

	namespace n_UParticleModuleMaterialBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x28; // char : 1
		constexpr auto LODDuplicate = 0x28; // char : 1
		constexpr auto bSupportsRandomSeed = 0x28; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x28; // char : 1
		constexpr auto LODValidity = 0x2c; // char
	}

	namespace n_UInterpTrackInstFloatMaterialParam { // : UInterpTrackInst
		constexpr auto MaterialInstances = 0x28; // TArray<UMaterialInstanceDynamic*>
		constexpr auto ResetFloats = 0x38; // TArray<float>
		constexpr auto PrimitiveMaterialRefs = 0x48; // TArray<FPrimitiveMaterialRef>
		constexpr auto InstancedTrack = 0x58; // UInterpTrackFloatMaterialParam*
	}

	namespace n_ULandscapeSplinesComponent { // : UPrimitiveComponent
		constexpr auto ControlPoints = 0x6c0; // TArray<ULandscapeSplineControlPoint*>
		constexpr auto Segments = 0x6d0; // TArray<ULandscapeSplineSegment*>
		constexpr auto CookedForeignMeshComponents = 0x6e0; // TArray<UMeshComponent*>
	}

	namespace n_UW_HUD_NotificationEntry_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x240; // FPointerToUberGraphFrame
		constexpr auto Anim_Fade = 0x248; // UWidgetAnimation*
		constexpr auto Anim_SlideIn = 0x250; // UWidgetAnimation*
		constexpr auto Message = 0x258; // UTextBlock*
		constexpr auto OtherWidget = 0x260; // UNamedSlot*
		constexpr auto SlideProgress = 0x268; // float
		constexpr auto ID = 0x270; // FText
	}

	namespace n_URandomBuildingGeneratorProxy { // : UBlueprintAsyncActionBase
		constexpr auto BuildingCreated = 0x28; // FScriptMulticastDelegate
		constexpr auto BuildingFailed = 0x38; // FScriptMulticastDelegate
		constexpr auto BuildingProgressUpdate = 0x48; // FScriptMulticastDelegate
		constexpr auto DoneLoadingClasses = 0xc0; // bool
		constexpr auto SpawnLocation = 0xc4; // FVector
		constexpr auto spawnRotation = 0xd0; // FRotator
		constexpr auto spawnRadius = 0xdc; // float
		constexpr auto sortMethod = 0xe0; // ESocketDistanceSortMethod
		constexpr auto NumFoundations = 0xe4; // int32_t
		constexpr auto NumOtherPieces = 0xe8; // int32_t
		constexpr auto NumRemainingFoundations = 0xec; // int32_t
		constexpr auto NumRemainingOtherPieces = 0xf0; // int32_t
		constexpr auto ListOfIDsToBuildWith = 0xf8; // FString
		constexpr auto m_FoundationClasses = 0x108; // TArray<UObject*>
		constexpr auto m_BuildingClasses = 0x118; // TArray<UObject*>
		constexpr auto m_FoundationClass = 0x128; // UObject*
		constexpr auto m_CreatedBuildingMaster = 0x130; // ABuildingBase*
		constexpr auto m_LastUpdateEventTime = 0x138; // float
		constexpr auto m_LastAddedPieceTime = 0x13c; // float
		constexpr auto m_LastBuildingClassUsed = 0x140; // UObject*
		constexpr auto m_CurrentBuildingClass = 0x148; // UObject*
		constexpr auto m_DistanceSortedQueuedPotentialGhosts = 0x150; // TArray<FPotentialBuildGhost>
		constexpr auto m_AwaitingPhysicsStateComponent = 0x198; // UInstancedBuildingComponent*
	}

	namespace n_UCustomRenderWidget { // : UWidget
		constexpr auto bIsVariable = 0x28; // bool
		constexpr auto bCreatedByConstructionScript = 0x29; // bool
		constexpr auto Slot = 0x30; // UPanelSlot*
		constexpr auto bIsEnabled = 0x38; // bool
		constexpr auto bIsEnabledDelegate = 0x40; // DelegateProperty
		constexpr auto ToolTipText = 0x50; // FText
		constexpr auto ToolTipTextDelegate = 0x68; // DelegateProperty
		constexpr auto TooltipWidget = 0x78; // UWidget*
		constexpr auto ToolTipWidgetDelegate = 0x80; // DelegateProperty
		constexpr auto Visiblity = 0x90; // ESlateVisibility
		constexpr auto Visibility = 0x91; // ESlateVisibility
		constexpr auto VisibilityDelegate = 0x98; // DelegateProperty
		constexpr auto bOverride_Cursor = 0xa8; // char : 1
		constexpr auto Cursor = 0xac; // EMouseCursor
		constexpr auto bIsVolatile = 0xad; // bool
		constexpr auto RenderTransform = 0xb0; // FWidgetTransform
		constexpr auto RenderTransformPivot = 0xcc; // FVector2D
		constexpr auto Navigation = 0xd8; // UWidgetNavigation*
		constexpr auto NativeBindings = 0x108; // TArray<UPropertyBinding*>
	}

	namespace n_UW_FCMultiLineEditableTextBox_C { // : UFCEditableMultiLineText
		constexpr auto mMultiLineEditableText = 0x680; // UMultiLineEditableText*
	}

	namespace n_UHoudiniAsset { // : UObject
		constexpr auto AssetFileName = 0x28; // FString
		constexpr auto ThumbnailInfo = 0x38; // UThumbnailInfo*
	}

	namespace n_UW_ExilesJourneyTrialStep_C { // : UExilesJourneyTrialStep
		constexpr auto Anim_Completed = 0x3a8; // UWidgetAnimation*
		constexpr auto Background = 0x3b0; // UImage*
		constexpr auto ItemIcon = 0x3b8; // UInventoryIconView_C*
		constexpr auto Label = 0x3c0; // UTextBlock*
	}

	namespace n_UPaperdollGUIBase { // : UWindowRoot
		constexpr auto CloseOnClick = 0x318; // bool
		constexpr auto BlockPlayerInput = 0x319; // bool
		constexpr auto OpeningSlateSound = 0x320; // FSlateSound
		constexpr auto ClosingSlateSound = 0x338; // FSlateSound
		constexpr auto SignalClosing = 0x350; // FScriptMulticastDelegate
		constexpr auto SignalOpened = 0x360; // FScriptMulticastDelegate
		constexpr auto m_WindowHotkeys = 0x370; // TArray<FGamepadHotkeyHelp>
		constexpr auto m_InputComponent = 0x380; // UInputComponent*
		constexpr auto m_GUIModule = 0x388; // UGUIModule*
	}

	namespace n_UThrallSystemComponent { // : UActorComponent
		constexpr auto IsPlacingThrall = 0xf8; // bool
		constexpr auto ThrallPlacementMode = 0xf9; // EThrallPlacementMode
		constexpr auto CurrentThrallBrushClass = 0x100; // AActor*
		constexpr auto CurrentThrallItem = 0x108; // UThrallItem*
		constexpr auto CurrentThrallComponent = 0x110; // UThrallComponent*
		constexpr auto SignalOnBondBroken = 0x118; // FScriptMulticastDelegate
		constexpr auto LootContainerClass = 0x1a0; // ALootContainer*
		constexpr auto m_FollowingThralls = 0x1a8; // TArray<UUniqueID*>
		constexpr auto m_PacifistFollower = 0x1b8; // UUniqueID*
		constexpr auto m_bHasThallLimitBeenExceeded = 0x238; // bool
	}

	namespace n_UW_NavigatableGridPanel_C { // : UNavigatableGridPanel
		constexpr auto RowLength = 0x3a8; // int32_t
		constexpr auto ColumnFill = 0x3b0; // TArray<float>
		constexpr auto RowFill = 0x3c0; // TArray<float>
	}

	namespace n_UIconGridBase { // : UWindowRoot
		constexpr auto CloseOnClick = 0x318; // bool
		constexpr auto BlockPlayerInput = 0x319; // bool
		constexpr auto OpeningSlateSound = 0x320; // FSlateSound
		constexpr auto ClosingSlateSound = 0x338; // FSlateSound
		constexpr auto SignalClosing = 0x350; // FScriptMulticastDelegate
		constexpr auto SignalOpened = 0x360; // FScriptMulticastDelegate
		constexpr auto m_WindowHotkeys = 0x370; // TArray<FGamepadHotkeyHelp>
		constexpr auto m_InputComponent = 0x380; // UInputComponent*
		constexpr auto m_GUIModule = 0x388; // UGUIModule*
	}

	namespace n_UHungerIndicatorIcon { // : URootWidget
		constexpr auto KeyNavOnSelectedEvent = 0x240; // FScriptMulticastDelegate
		constexpr auto KeyNavLeft = 0x250; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavRight = 0x258; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavAbove = 0x260; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavBelow = 0x268; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavTab = 0x270; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildLeft = 0x278; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildRight = 0x280; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildAbove = 0x288; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildBelow = 0x290; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildTab = 0x298; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildren = 0x2a0; // TWeakObjectPtr<URootWidget>
		constexpr auto TooltipWidgetClass = 0x2a8; // UTooltipWidget*
		constexpr auto KeyNavIndicatorClass = 0x2b0; // UKeyNavIndicator*
		constexpr auto PositiveFeedbackColor = 0x2b8; // FLinearColor
		constexpr auto NegativeFeedbackColor = 0x2c8; // FLinearColor
		constexpr auto NeutralFeedbackColor = 0x2d8; // FLinearColor
		constexpr auto KeyNavFocusOnClick = 0x2e8; // bool
		constexpr auto KeyNavAutoSetBack = 0x2e9; // bool
		constexpr auto m_Window = 0x2f0; // UWindowRoot*
		constexpr auto m_Parent = 0x2f8; // TWeakObjectPtr<URootWidget>
		constexpr auto m_KeyNavIndicator = 0x300; // UKeyNavIndicator*
	}

	namespace n_UHotkeyIconPlatforms { // : UObject
		constexpr auto Platforms = 0x28; // TArray<FHotkeyIconPlatform>
	}

	namespace n_UMaterialExpressionClearCoatNormalCustomOutput { // : UMaterialExpressionCustomOutput
		constexpr auto Input = 0x60; // FExpressionInput
	}

	namespace n_UBTDecorator { // : UBTAuxiliaryNode
		constexpr auto bInverseCondition = 0x60; // char : 1
		constexpr auto FlowAbortMode = 0x64; // EBTFlowAbortMode
	}

	namespace n_UVoiceChannel { // : UChannel
		constexpr auto Connection = 0x28; // UNetConnection*
	}

	namespace n_UPlatformEventsComponent { // : UActorComponent
		constexpr auto PlatformChangedToLaptopModeDelegate = 0xf8; // FScriptMulticastDelegate
		constexpr auto PlatformChangedToTabletModeDelegate = 0x108; // FScriptMulticastDelegate
	}

	namespace n_USteamNetConnection { // : UIpConnection
		constexpr auto bIsPassthrough = 0x33780; // bool
	}

	namespace n_UTouchInterface { // : UObject
		constexpr auto Controls = 0x28; // TArray<FTouchInputControl>
		constexpr auto ActiveOpacity = 0x38; // float
		constexpr auto InactiveOpacity = 0x3c; // float
		constexpr auto TimeUntilDeactive = 0x40; // float
		constexpr auto TimeUntilReset = 0x44; // float
		constexpr auto ActivationDelay = 0x48; // float
		constexpr auto bPreventRecenter = 0x4c; // bool
		constexpr auto StartupDelay = 0x50; // float
	}

	namespace n_AFunctionalAITest { // : AFunctionalTest
		constexpr auto SpawnSets = 0x500; // TArray<FAITestSpawnSet>
		constexpr auto SpawnLocationRandomizationRange = 0x510; // float
		constexpr auto SpawnedPawns = 0x518; // TArray<APawn*>
		constexpr auto PendingDelayedSpawns = 0x528; // TArray<FPendingDelayedSpawn>
		constexpr auto OnAISpawned = 0x550; // FScriptMulticastDelegate
		constexpr auto OnAllAISPawned = 0x560; // FScriptMulticastDelegate
		constexpr auto bWaitForNavMesh = 0x570; // char : 1
	}

	namespace n_UAISense_Sight { // : UAISense
		constexpr auto MaxTracesPerTick = 0x1d0; // int32_t
		constexpr auto MinQueriesPerTimeSliceCheck = 0x1d4; // int32_t
		constexpr auto MaxTimeSlicePerTick = 0x1d8; // double
		constexpr auto HighImportanceQueryDistanceThreshold = 0x1e0; // float
		constexpr auto MaxQueryImportance = 0x1e8; // float
		constexpr auto SightLimitQueryImportance = 0x1ec; // float
	}

	namespace n_ANavModifierVolume { // : AVolume
		constexpr auto AreaClass = 0x410; // UNavArea*
		constexpr auto PriorityOverride = 0x418; // char
	}

	namespace n_UEnvQueryGenerator_Donut { // : UEnvQueryGenerator_ProjectedPoints
		constexpr auto InnerRadius = 0x80; // FAIDataProviderFloatValue
		constexpr auto OuterRadius = 0xb0; // FAIDataProviderFloatValue
		constexpr auto NumberOfRings = 0xe0; // FAIDataProviderIntValue
		constexpr auto PointsPerRing = 0x110; // FAIDataProviderIntValue
		constexpr auto ArcDirection = 0x140; // FEnvDirection
		constexpr auto ArcAngle = 0x160; // FAIDataProviderFloatValue
		constexpr auto bUseSpiralPattern = 0x190; // bool
		constexpr auto Center = 0x198; // UEnvQueryContext*
		constexpr auto bDefineArc = 0x1a0; // char : 1
	}

	namespace n_UShaderPlatformQualitySettings { // : UObject
		constexpr auto QualityOverrides = 0x28; // FMaterialQualityOverrides [0x3]
	}

	namespace n_UBrushBinding { // : UPropertyBinding
		constexpr auto SourceObject = 0x28; // TWeakObjectPtr<UObject>
		constexpr auto SourcePath = 0x30; // FDynamicPropertyPath
		constexpr auto DestinationProperty = 0x40; // FName
	}

	namespace n_ACharacter { // : APawn
		constexpr auto Mesh = 0x430; // USkeletalMeshComponent*
		constexpr auto CharacterMovement = 0x438; // UCharacterMovementComponent*
		constexpr auto CapsuleComponent = 0x440; // UCapsuleComponent*
		constexpr auto BasedMovement = 0x448; // FBasedMovementInfo
		constexpr auto ReplicatedBasedMovement = 0x478; // FBasedMovementInfo
		constexpr auto AnimRootMotionTranslationScale = 0x4a8; // float
		constexpr auto BaseTranslationOffset = 0x4ac; // FVector
		constexpr auto BaseRotationOffset = 0x4c0; // FQuat
		constexpr auto ReplicatedServerLastTransformUpdateTimeStamp = 0x4d0; // float
		constexpr auto ReplicatedMovementMode = 0x4d4; // char
		constexpr auto bInBaseReplication = 0x4d5; // bool
		constexpr auto CrouchedEyeHeight = 0x4d8; // float
		constexpr auto bIsCrouched = 0x4dc; // char : 1
		constexpr auto bIsClimbing = 0x4dc; // char : 1
		constexpr auto bPressedJump = 0x4dc; // char : 1
		constexpr auto bClientUpdating = 0x4dc; // char : 1
		constexpr auto bClientWasFalling = 0x4dc; // char : 1
		constexpr auto bClientResimulateRootMotion = 0x4dc; // char : 1
		constexpr auto bClientResimulateRootMotionSources = 0x4dc; // char : 1
		constexpr auto bSimGravityDisabled = 0x4dc; // char : 1
		constexpr auto bClientCheckEncroachmentOnNetUpdate = 0x4dc; // char : 1
		constexpr auto bServerMoveIgnoreRootMotion = 0x4dc; // char : 1
		constexpr auto JumpKeyHoldTime = 0x4e0; // float
		constexpr auto JumpMaxHoldTime = 0x4e4; // float
		constexpr auto JumpMaxCount = 0x4e8; // int32_t
		constexpr auto JumpCurrentCount = 0x4ec; // int32_t
		constexpr auto bWasJumping = 0x4f0; // char : 1
		constexpr auto OnReachedJumpApex = 0x4f8; // FScriptMulticastDelegate
		constexpr auto MovementModeChangedDelegate = 0x518; // FScriptMulticastDelegate
		constexpr auto OnCharacterMovementUpdated = 0x528; // FScriptMulticastDelegate
		constexpr auto SavedRootMotion = 0x538; // FRootMotionSourceGroup
		constexpr auto ClientRootMotionParams = 0x640; // FRootMotionMovementParams
		constexpr auto RootMotionRepMoves = 0x680; // TArray<FSimulatedRootMotionReplicatedMove>
		constexpr auto RepRootMotion = 0x690; // FRepRootMotionMontage
	}

	namespace n_ASkyLight { // : AInfo
		constexpr auto LightComponent = 0x3d0; // USkyLightComponent*
		constexpr auto bEnabled = 0x3d8; // char : 1
	}

	namespace n_UPetAttributeView { // : URootWidget
		constexpr auto KeyNavOnSelectedEvent = 0x240; // FScriptMulticastDelegate
		constexpr auto KeyNavLeft = 0x250; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavRight = 0x258; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavAbove = 0x260; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavBelow = 0x268; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavTab = 0x270; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildLeft = 0x278; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildRight = 0x280; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildAbove = 0x288; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildBelow = 0x290; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildTab = 0x298; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildren = 0x2a0; // TWeakObjectPtr<URootWidget>
		constexpr auto TooltipWidgetClass = 0x2a8; // UTooltipWidget*
		constexpr auto KeyNavIndicatorClass = 0x2b0; // UKeyNavIndicator*
		constexpr auto PositiveFeedbackColor = 0x2b8; // FLinearColor
		constexpr auto NegativeFeedbackColor = 0x2c8; // FLinearColor
		constexpr auto NeutralFeedbackColor = 0x2d8; // FLinearColor
		constexpr auto KeyNavFocusOnClick = 0x2e8; // bool
		constexpr auto KeyNavAutoSetBack = 0x2e9; // bool
		constexpr auto m_Window = 0x2f0; // UWindowRoot*
		constexpr auto m_Parent = 0x2f8; // TWeakObjectPtr<URootWidget>
		constexpr auto m_KeyNavIndicator = 0x300; // UKeyNavIndicator*
	}

	namespace n_UAtmosphericFogComponent { // : USceneComponent
		constexpr auto SunMultiplier = 0x300; // float
		constexpr auto FogMultiplier = 0x304; // float
		constexpr auto DensityMultiplier = 0x308; // float
		constexpr auto DensityOffset = 0x30c; // float
		constexpr auto DistanceScale = 0x310; // float
		constexpr auto AltitudeScale = 0x314; // float
		constexpr auto DistanceOffset = 0x318; // float
		constexpr auto GroundOffset = 0x31c; // float
		constexpr auto StartDistance = 0x320; // float
		constexpr auto SunDiscScale = 0x324; // float
		constexpr auto DefaultBrightness = 0x328; // float
		constexpr auto DefaultLightColor = 0x32c; // FColor
		constexpr auto bDisableSunDisk = 0x330; // char : 1
		constexpr auto bDisableGroundScattering = 0x330; // char : 1
		constexpr auto PrecomputeParams = 0x334; // FAtmospherePrecomputeParameters
		constexpr auto TransmittanceTexture = 0x360; // UTexture2D*
		constexpr auto IrradianceTexture = 0x368; // UTexture2D*
	}

	namespace n_UInterpTrackInstAnimControl { // : UInterpTrackInst
		constexpr auto LastUpdatePosition = 0x28; // float
	}

	namespace n_UShapeComponent { // : UPrimitiveComponent
		constexpr auto ShapeColor = 0x6c0; // FColor
		constexpr auto ShapeBodySetup = 0x6c8; // UBodySetup*
		constexpr auto bDrawOnlyIfSelected = 0x6d0; // char : 1
		constexpr auto bShouldCollideWhenPlacing = 0x6d0; // char : 1
		constexpr auto bDynamicObstacle = 0x6d0; // char : 1
		constexpr auto AreaClass = 0x6d8; // UNavArea*
	}

	namespace n_APaperFlipbookActor { // : AActor
		constexpr auto RenderComponent = 0x3d0; // UPaperFlipbookComponent*
	}

	namespace n_AGeometryCacheActor { // : AActor
		constexpr auto GeometryCacheComponent = 0x3d0; // UGeometryCacheComponent*
	}

	namespace n_URootWidget { // : UUserWidget
		constexpr auto KeyNavOnSelectedEvent = 0x240; // FScriptMulticastDelegate
		constexpr auto KeyNavLeft = 0x250; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavRight = 0x258; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavAbove = 0x260; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavBelow = 0x268; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavTab = 0x270; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildLeft = 0x278; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildRight = 0x280; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildAbove = 0x288; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildBelow = 0x290; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildTab = 0x298; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildren = 0x2a0; // TWeakObjectPtr<URootWidget>
		constexpr auto TooltipWidgetClass = 0x2a8; // UTooltipWidget*
		constexpr auto KeyNavIndicatorClass = 0x2b0; // UKeyNavIndicator*
		constexpr auto PositiveFeedbackColor = 0x2b8; // FLinearColor
		constexpr auto NegativeFeedbackColor = 0x2c8; // FLinearColor
		constexpr auto NeutralFeedbackColor = 0x2d8; // FLinearColor
		constexpr auto KeyNavFocusOnClick = 0x2e8; // bool
		constexpr auto KeyNavAutoSetBack = 0x2e9; // bool
		constexpr auto m_Window = 0x2f0; // UWindowRoot*
		constexpr auto m_Parent = 0x2f8; // TWeakObjectPtr<URootWidget>
		constexpr auto m_KeyNavIndicator = 0x300; // UKeyNavIndicator*
	}

	namespace n_UAnimCompress { // : UObject
		constexpr auto Description = 0x28; // FString
		constexpr auto bNeedsSkeleton = 0x38; // char : 1
		constexpr auto TranslationCompressionFormat = 0x3c; // AnimationCompressionFormat
		constexpr auto RotationCompressionFormat = 0x3d; // AnimationCompressionFormat
		constexpr auto ScaleCompressionFormat = 0x3e; // AnimationCompressionFormat
	}

	namespace n_UDLCEntryViewBase { // : URootWidget
		constexpr auto KeyNavOnSelectedEvent = 0x240; // FScriptMulticastDelegate
		constexpr auto KeyNavLeft = 0x250; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavRight = 0x258; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavAbove = 0x260; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavBelow = 0x268; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavTab = 0x270; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildLeft = 0x278; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildRight = 0x280; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildAbove = 0x288; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildBelow = 0x290; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildTab = 0x298; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildren = 0x2a0; // TWeakObjectPtr<URootWidget>
		constexpr auto TooltipWidgetClass = 0x2a8; // UTooltipWidget*
		constexpr auto KeyNavIndicatorClass = 0x2b0; // UKeyNavIndicator*
		constexpr auto PositiveFeedbackColor = 0x2b8; // FLinearColor
		constexpr auto NegativeFeedbackColor = 0x2c8; // FLinearColor
		constexpr auto NeutralFeedbackColor = 0x2d8; // FLinearColor
		constexpr auto KeyNavFocusOnClick = 0x2e8; // bool
		constexpr auto KeyNavAutoSetBack = 0x2e9; // bool
		constexpr auto m_Window = 0x2f0; // UWindowRoot*
		constexpr auto m_Parent = 0x2f8; // TWeakObjectPtr<URootWidget>
		constexpr auto m_KeyNavIndicator = 0x300; // UKeyNavIndicator*
	}

	namespace n_ASiptahStormController { // : AActor
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto CustomTimeDilation = 0x80; // float
		constexpr auto bHidden = 0x84; // char : 1
		constexpr auto bNetTemporary = 0x84; // char : 1
		constexpr auto bNetStartup = 0x84; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x84; // char : 1
		constexpr auto bAlwaysRelevant = 0x84; // char : 1
		constexpr auto bReplicateMovement = 0x84; // char : 1
		constexpr auto bTearOff = 0x84; // char : 1
		constexpr auto bExchangedRoles = 0x84; // char : 1
		constexpr auto bPendingNetUpdate = 0x85; // char : 1
		constexpr auto bNetLoadOnClient = 0x85; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x85; // char : 1
		constexpr auto bBlockInput = 0x85; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x85; // char : 1
		constexpr auto bActorEnableCollision = 0x86; // char : 1
		constexpr auto bReplicates = 0x86; // char : 1
		constexpr auto bLostRelevancy = 0x86; // char : 1
		constexpr auto NetDriverName = 0x88; // FName
		constexpr auto bCanBeInCluster = 0x90; // char : 1
		constexpr auto RemoteRole = 0x91; // ENetRole
		constexpr auto Owner = 0x98; // AActor*
		constexpr auto ReplicatedMovement = 0xa0; // FRepMovement
		constexpr auto AttachmentReplication = 0xd8; // FRepAttachment
		constexpr auto Role = 0x118; // ENetRole
		constexpr auto AutoReceiveInput = 0x11a; // EAutoReceiveInput
		constexpr auto InputPriority = 0x11c; // int32_t
		constexpr auto InputComponent = 0x120; // UInputComponent*
		constexpr auto InputConsumeOption = 0x128; // EInputConsumeOptions
		constexpr auto NetCullDistanceSquared = 0x12c; // float
		constexpr auto ViewTargetNetCullDistanceSquared = 0x130; // float
		constexpr auto NetTag = 0x134; // int32_t
		constexpr auto NetUpdateTime = 0x138; // float
		constexpr auto NetUpdateFrequency = 0x13c; // float
		constexpr auto MinNetUpdateFrequency = 0x140; // float
		constexpr auto NetPriority = 0x144; // float
		constexpr auto LastNetUpdateTime = 0x148; // float
		constexpr auto bAutoDestroyWhenFinished = 0x14c; // char : 1
		constexpr auto bCanBeDamaged = 0x14c; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x14c; // char : 1
		constexpr auto bCollideWhenPlacing = 0x14c; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x14c; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x14c; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x14c; // char : 1
		constexpr auto SpawnCollisionHandlingMethod = 0x14d; // ESpawnActorCollisionHandlingMethod
		constexpr auto Instigator = 0x158; // APawn*
		constexpr auto Children = 0x160; // TArray<AActor*>
		constexpr auto RootComponent = 0x170; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x178; // TArray<AMatineeActor*>
		constexpr auto InitialLifeSpan = 0x188; // float
		constexpr auto Layers = 0x198; // TArray<FName>
		constexpr auto ParentComponentActor = 0x1a8; // TWeakObjectPtr<AActor>
		constexpr auto ParentComponent = 0x1b0; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x1b8; // char : 1
		constexpr auto bUseExtendedRelevancyTimeout = 0x1b8; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x1b8; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x1b8; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x1b8; // char : 1
		constexpr auto Tags = 0x1c0; // TArray<FName>
		constexpr auto HiddenEditorViews = 0x1d0; // uint64_t
		constexpr auto OnTakeAnyDamage = 0x1d8; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x1e8; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x1f8; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x208; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x218; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x228; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x238; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x248; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x258; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x268; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x278; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x288; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x298; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x2a8; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x2b8; // FScriptMulticastDelegate
		constexpr auto BlueprintCreatedComponents = 0x3a8; // TArray<UActorComponent*>
		constexpr auto InstanceComponents = 0x3b8; // TArray<UActorComponent*>
	}

	namespace n_UParticleModuleRotationOverLifetime { // : UParticleModuleRotationBase
		constexpr auto RotationOverLife = 0x30; // FRawDistributionFloat
		constexpr auto Scale = 0x68; // char : 1
	}

	namespace n_ASceneCaptureWater { // : ASceneCapture
		constexpr auto CaptureComponentWater = 0x3d8; // USceneCaptureComponentWater*
		constexpr auto DrawBox = 0x3e0; // UBoxComponent*
	}

	namespace n_UNPCProgressionData { // : UBlueprintFunctionLibrary
		constexpr auto m_LevelCurveTable = 0x28; // UDataTable*
		constexpr auto m_NPCGrowthRatesTable = 0x48; // UDataTable*
		constexpr auto m_NPCPerksTable = 0x68; // UDataTable*
	}

	namespace n_ASceneCapture2D { // : ASceneCapture
		constexpr auto CaptureComponent2D = 0x3d8; // USceneCaptureComponent2D*
		constexpr auto DrawFrustum = 0x3e0; // UDrawFrustumComponent*
	}

	namespace n_UChestInventoryGUI { // : UWindowRoot
		constexpr auto m_ChestInventory = 0x3a8; // UItemInventory*
	}

	namespace n_UAISenseConfig_NewSight { // : UAISenseConfig
		constexpr auto Implementation = 0x48; // UAISense_NewSight*
		constexpr auto SightRadius = 0x50; // float
		constexpr auto LoseSightRadius = 0x54; // float
		constexpr auto PeripheralVisionAngleDegrees = 0x58; // float
		constexpr auto DetectionByAffiliation = 0x5c; // FAISenseAffiliationFilter
		constexpr auto AutoSuccessRangeFromLastSeenLocation = 0x60; // float
	}

	namespace n_UExilesJourneyTrial { // : UWindowRoot
		constexpr auto m_JourneyStepClass = 0x3a8; // UUserWidget*
	}

	namespace n_UFastTravelHandler { // : UActorComponent
		constexpr auto AllMapsDiscoveredTravelPoints = 0xf8; // TMap<FString, FTravelPointsContainer>
	}

	namespace n_UAILODComponent { // : UActorComponent
		constexpr auto pausedComponents = 0x100; // TArray<FPausedComponent>
		constexpr auto EventAILOD = 0x120; // FScriptMulticastDelegate
		constexpr auto AILOD2DistanceOverride = 0x140; // float
		constexpr auto AILOD1Distance = 0x144; // float
		constexpr auto AILOD2Distance = 0x148; // float
		constexpr auto AILOD3Distance = 0x14c; // float
		constexpr auto AILOD = 0x1b4; // char
		constexpr auto TargetAILODWithOutstandingConfirmation = 0x1b5; // char
		constexpr auto SuspendAtMaxAILOD = 0x1bb; // bool
	}

	namespace n_UDrawSphereComponent { // : USphereComponent
		constexpr auto SphereRadius = 0x6e0; // float
	}

	namespace n_AGeneratedMeshAreaLight { // : ASpotLight
		constexpr auto SpotLightComponent = 0x3e0; // USpotLightComponent*
	}

	namespace n_ACameraActor { // : AActor
		constexpr auto AutoActivateForPlayer = 0x3d0; // EAutoReceiveInput
		constexpr auto CameraComponent = 0x3d8; // UCameraComponent*
		constexpr auto SceneComponent = 0x3e0; // USceneComponent*
		constexpr auto bConstrainAspectRatio = 0x3f0; // char : 1
		constexpr auto AspectRatio = 0x3f4; // float
		constexpr auto FOVAngle = 0x3f8; // float
		constexpr auto PostProcessBlendWeight = 0x3fc; // float
		constexpr auto PostProcessSettings = 0x400; // FPostProcessSettings
	}

	namespace n_APainCausingVolume { // : APhysicsVolume
		constexpr auto bPainCausing = 0x418; // char : 1
		constexpr auto DamagePerSec = 0x41c; // float
		constexpr auto DamageType = 0x420; // UDamageType*
		constexpr auto PainInterval = 0x428; // float
		constexpr auto bEntryPain = 0x42c; // char : 1
		constexpr auto BACKUP_bPainCausing = 0x42c; // char : 1
		constexpr auto DamageInstigator = 0x430; // AController*
	}

	namespace n_UMicroTransactionBase { // : UPlatformInterfaceBase
		constexpr auto AvailableProducts = 0x38; // TArray<FPurchaseInfo>
		constexpr auto LastError = 0x48; // FString
		constexpr auto LastErrorSolution = 0x58; // FString
	}

	namespace n_UW_FriendRequestEntry_C { // : UFriendRequestEntry
		constexpr auto UberGraphFrame = 0x470; // FPointerToUberGraphFrame
		constexpr auto ActionsBox = 0x478; // UHorizontalBox*
		constexpr auto B_AcceptFriendRequest = 0x480; // UW_ButtonCustom_C*
		constexpr auto B_BlockPlayer = 0x488; // UW_ButtonCustom_C*
		constexpr auto B_DeclineFriendRequest = 0x490; // UW_ButtonCustom_C*
		constexpr auto B_RevokeFriendRequest = 0x498; // UW_ButtonCustom_C*
		constexpr auto Container = 0x4a0; // UBorder*
	}

	namespace n_UMeshSimplificationSettings { // : UDeveloperSettings
		constexpr auto MeshReductionModuleName = 0x38; // FName
	}

	namespace n_UMaterialExpressionParticleSize { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto Desc = 0x38; // FString
		constexpr auto BorderColor = 0x48; // FColor
		constexpr auto bRealtimePreview = 0x4c; // char : 1
		constexpr auto bNeedToUpdatePreview = 0x4c; // char : 1
		constexpr auto bIsParameterExpression = 0x4c; // char : 1
		constexpr auto bCommentBubbleVisible = 0x4c; // char : 1
		constexpr auto bShowOutputNameOnPin = 0x4c; // char : 1
		constexpr auto bHidePreviewWindow = 0x4c; // char : 1
		constexpr auto bCollapsed = 0x4c; // char : 1
		constexpr auto bShaderInputData = 0x4c; // char : 1
		constexpr auto bShowInputs = 0x4c; // char : 1
		constexpr auto bShowOutputs = 0x4c; // char : 1
		constexpr auto Outputs = 0x50; // TArray<FExpressionOutput>
	}

	namespace n_UParticleModuleBeamSource { // : UParticleModuleBeamBase
		constexpr auto SourceMethod = 0x30; // Beam2SourceTargetMethod
		constexpr auto SourceName = 0x38; // FName
		constexpr auto bSourceAbsolute = 0x40; // char : 1
		constexpr auto Source = 0x48; // FRawDistributionVector
		constexpr auto bLockSource = 0x98; // char : 1
		constexpr auto SourceTangentMethod = 0x9c; // Beam2SourceTargetTangentMethod
		constexpr auto SourceTangent = 0xa0; // FRawDistributionVector
		constexpr auto bLockSourceTangent = 0xf0; // char : 1
		constexpr auto SourceStrength = 0xf8; // FRawDistributionFloat
		constexpr auto bLockSourceStength = 0x130; // char : 1
	}

	namespace n_UParticleModuleParameterDynamic { // : UParticleModuleParameterBase
		constexpr auto DynamicParams = 0x30; // TArray<FEmitterDynamicParameter>
		constexpr auto UpdateFlags = 0x40; // int32_t
		constexpr auto bUsesVelocity = 0x44; // char : 1
	}

	namespace n_UListEntryBase { // : UCharacterListEntryBase
		constexpr auto m_RankIconRecruit = 0x390; // UTexture2D*
		constexpr auto m_RankIconMember = 0x398; // UTexture2D*
		constexpr auto m_RankIconGuildMaster = 0x3a0; // UTexture2D*
		constexpr auto m_RankIconOfficer = 0x3a8; // UTexture2D*
		constexpr auto m_OnlineStatusIconOnline = 0x3b0; // UTexture2D*
		constexpr auto m_OnlineStatusIconOffline = 0x3b8; // UTexture2D*
		constexpr auto m_CharacterName = 0x3c0; // UTextBlock*
		constexpr auto m_PlayerNickname = 0x3c8; // UTextBlock*
		constexpr auto m_OnlineStatus = 0x3d0; // UTextBlock*
		constexpr auto m_Level = 0x3d8; // UTextBlock*
		constexpr auto m_Date = 0x3e0; // UTextBlock*
		constexpr auto m_Event = 0x3e8; // UTextBlock*
		constexpr auto m_OnlineStatusIcon = 0x3f0; // UImage*
		constexpr auto m_Rank = 0x3f8; // UImage*
		constexpr auto m_OfflineColor = 0x400; // FSlateColor
		constexpr auto m_PlayerNetId = 0x430; // FUniqueNetIdRepl
		constexpr auto m_GuildId = 0x448; // UUniqueID*
	}

	namespace n_UVRNotificationsComponent { // : UActorComponent
		constexpr auto HMDTrackingInitializingAndNeedsHMDToBeTrackedDelegate = 0xf8; // FScriptMulticastDelegate
		constexpr auto HMDTrackingInitializedDelegate = 0x108; // FScriptMulticastDelegate
		constexpr auto HMDRecenteredDelegate = 0x118; // FScriptMulticastDelegate
		constexpr auto HMDLostDelegate = 0x128; // FScriptMulticastDelegate
		constexpr auto HMDReconnectedDelegate = 0x138; // FScriptMulticastDelegate
		constexpr auto HMDConnectCanceledDelegate = 0x148; // FScriptMulticastDelegate
		constexpr auto HMDPutOnHeadDelegate = 0x158; // FScriptMulticastDelegate
		constexpr auto HMDRemovedFromHeadDelegate = 0x168; // FScriptMulticastDelegate
	}

	namespace n_UParticleModuleLocation { // : UParticleModuleLocationBase
		constexpr auto StartLocation = 0x30; // FRawDistributionVector
		constexpr auto DistributeOverNPoints = 0x80; // float
		constexpr auto DistributeThreshold = 0x84; // float
	}

	namespace n_UShortcutIconBase { // : URootWidget
		constexpr auto KeyNavOnSelectedEvent = 0x240; // FScriptMulticastDelegate
		constexpr auto KeyNavLeft = 0x250; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavRight = 0x258; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavAbove = 0x260; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavBelow = 0x268; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavTab = 0x270; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildLeft = 0x278; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildRight = 0x280; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildAbove = 0x288; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildBelow = 0x290; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildTab = 0x298; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildren = 0x2a0; // TWeakObjectPtr<URootWidget>
		constexpr auto TooltipWidgetClass = 0x2a8; // UTooltipWidget*
		constexpr auto KeyNavIndicatorClass = 0x2b0; // UKeyNavIndicator*
		constexpr auto PositiveFeedbackColor = 0x2b8; // FLinearColor
		constexpr auto NegativeFeedbackColor = 0x2c8; // FLinearColor
		constexpr auto NeutralFeedbackColor = 0x2d8; // FLinearColor
		constexpr auto KeyNavFocusOnClick = 0x2e8; // bool
		constexpr auto KeyNavAutoSetBack = 0x2e9; // bool
		constexpr auto m_Window = 0x2f0; // UWindowRoot*
		constexpr auto m_Parent = 0x2f8; // TWeakObjectPtr<URootWidget>
		constexpr auto m_KeyNavIndicator = 0x300; // UKeyNavIndicator*
	}

	namespace n_UPlayFabEventsAPI { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnPlayFabResponse = 0x28; // FScriptMulticastDelegate
		constexpr auto CallAuthenticationContext = 0xa0; // UPlayFabAuthenticationContext*
		constexpr auto RequestJsonObj = 0xa8; // UPlayFabJsonObject*
		constexpr auto ResponseJsonObj = 0xb0; // UPlayFabJsonObject*
	}

	namespace n_UPlayFabEconomyAPI { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnPlayFabResponse = 0x28; // FScriptMulticastDelegate
		constexpr auto CallAuthenticationContext = 0x5a0; // UPlayFabAuthenticationContext*
		constexpr auto RequestJsonObj = 0x5a8; // UPlayFabJsonObject*
		constexpr auto ResponseJsonObj = 0x5b0; // UPlayFabJsonObject*
	}

	namespace n_UWidgetBinding { // : UPropertyBinding
		constexpr auto SourceObject = 0x28; // TWeakObjectPtr<UObject>
		constexpr auto SourcePath = 0x30; // FDynamicPropertyPath
		constexpr auto DestinationProperty = 0x40; // FName
	}

	namespace n_UAISenseConfig_Touch { // : UAISenseConfig
		constexpr auto DebugColor = 0x28; // FColor
		constexpr auto MaxAge = 0x2c; // float
		constexpr auto bStartsEnabled = 0x30; // char : 1
	}

	namespace n_UScrollBoxWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto ScrollBoxStyle = 0x30; // FScrollBoxStyle
	}

	namespace n_UGammaBase { // : UWindowRoot
		constexpr auto maxGamma = 0x3a8; // float
		constexpr auto minGamma = 0x3ac; // float
	}

	namespace n_UW_ButtonCustom_C { // : UW_FCButton_C
		constexpr auto ButtonOverlay = 0xc28; // UNamedSlot*
		constexpr auto CheckboxOverlay = 0xc30; // UNamedSlot*
		constexpr auto HotkeyIcon = 0xc38; // UW_HotkeyIcon_C*
	}

	namespace n_UParticleModuleAccelerationBase { // : UParticleModule
		constexpr auto bAlwaysInWorldSpace = 0x30; // char : 1
	}

	namespace n_UAnimSingleNodeInstance { // : UAnimInstance
		constexpr auto CurrentAsset = 0x358; // UAnimationAsset*
		constexpr auto PostEvaluateAnimEvent = 0x360; // DelegateProperty
	}

	namespace n_UPluginCommandlet { // : UCommandlet
		constexpr auto HelpDescription = 0x28; // FString
		constexpr auto HelpUsage = 0x38; // FString
		constexpr auto HelpWebLink = 0x48; // FString
		constexpr auto HelpParamNames = 0x58; // TArray<FString>
		constexpr auto HelpParamDescriptions = 0x68; // TArray<FString>
		constexpr auto IsServer = 0x78; // char : 1
		constexpr auto IsClient = 0x78; // char : 1
		constexpr auto IsEditor = 0x78; // char : 1
		constexpr auto LogToConsole = 0x78; // char : 1
		constexpr auto ShowErrorCount = 0x78; // char : 1
	}

	namespace n_UMaterialExpressionAtmosphericLightVector { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto Desc = 0x38; // FString
		constexpr auto BorderColor = 0x48; // FColor
		constexpr auto bRealtimePreview = 0x4c; // char : 1
		constexpr auto bNeedToUpdatePreview = 0x4c; // char : 1
		constexpr auto bIsParameterExpression = 0x4c; // char : 1
		constexpr auto bCommentBubbleVisible = 0x4c; // char : 1
		constexpr auto bShowOutputNameOnPin = 0x4c; // char : 1
		constexpr auto bHidePreviewWindow = 0x4c; // char : 1
		constexpr auto bCollapsed = 0x4c; // char : 1
		constexpr auto bShaderInputData = 0x4c; // char : 1
		constexpr auto bShowInputs = 0x4c; // char : 1
		constexpr auto bShowOutputs = 0x4c; // char : 1
		constexpr auto Outputs = 0x50; // TArray<FExpressionOutput>
	}

	namespace n_UWheeledVehicleMovementComponent { // : UPawnMovementComponent
		constexpr auto bDeprecatedSpringOffsetMode = 0x198; // char : 1
		constexpr auto WheelSetups = 0x1a0; // TArray<FWheelSetup>
		constexpr auto Mass = 0x1b0; // float
		constexpr auto DragCoefficient = 0x1b4; // float
		constexpr auto ChassisWidth = 0x1b8; // float
		constexpr auto ChassisHeight = 0x1bc; // float
		constexpr auto bReverseAsBrake = 0x1c0; // bool
		constexpr auto DragArea = 0x1c4; // float
		constexpr auto EstimatedMaxEngineSpeed = 0x1c8; // float
		constexpr auto MaxEngineRPM = 0x1cc; // float
		constexpr auto DebugDragMagnitude = 0x1d0; // float
		constexpr auto InertiaTensorScale = 0x1d4; // FVector
		constexpr auto MinNormalizedTireLoad = 0x1e0; // float
		constexpr auto MinNormalizedTireLoadFiltered = 0x1e4; // float
		constexpr auto MaxNormalizedTireLoad = 0x1e8; // float
		constexpr auto MaxNormalizedTireLoadFiltered = 0x1ec; // float
		constexpr auto ThresholdLongitudinalSpeed = 0x1f0; // float
		constexpr auto LowForwardSpeedSubStepCount = 0x1f4; // int32_t
		constexpr auto HighForwardSpeedSubStepCount = 0x1f8; // int32_t
		constexpr auto Wheels = 0x200; // TArray<UVehicleWheel*>
		constexpr auto bUseRVOAvoidance = 0x228; // char : 1
		constexpr auto RVOAvoidanceRadius = 0x22c; // float
		constexpr auto RVOAvoidanceHeight = 0x230; // float
		constexpr auto AvoidanceConsiderationRadius = 0x234; // float
		constexpr auto RVOSteeringStep = 0x238; // float
		constexpr auto RVOThrottleStep = 0x23c; // float
		constexpr auto AvoidanceUID = 0x240; // int32_t
		constexpr auto AvoidanceGroup = 0x244; // FNavAvoidanceMask
		constexpr auto GroupsToAvoid = 0x248; // FNavAvoidanceMask
		constexpr auto GroupsToIgnore = 0x24c; // FNavAvoidanceMask
		constexpr auto AvoidanceWeight = 0x250; // float
		constexpr auto PendingLaunchVelocity = 0x254; // FVector
		constexpr auto ReplicatedState = 0x260; // FReplicatedVehicleState
		constexpr auto RawSteeringInput = 0x278; // float
		constexpr auto RawThrottleInput = 0x27c; // float
		constexpr auto RawBrakeInput = 0x280; // float
		constexpr auto bRawHandbrakeInput = 0x284; // char : 1
		constexpr auto bRawGearUpInput = 0x284; // char : 1
		constexpr auto bRawGearDownInput = 0x284; // char : 1
		constexpr auto SteeringInput = 0x288; // float
		constexpr auto ThrottleInput = 0x28c; // float
		constexpr auto BrakeInput = 0x290; // float
		constexpr auto HandbrakeInput = 0x294; // float
		constexpr auto IdleBrakeInput = 0x298; // float
		constexpr auto StopThreshold = 0x29c; // float
		constexpr auto WrongDirectionThreshold = 0x2a0; // float
		constexpr auto ThrottleInputRate = 0x2a4; // FVehicleInputRate
		constexpr auto BrakeInputRate = 0x2ac; // FVehicleInputRate
		constexpr auto HandbrakeInputRate = 0x2b4; // FVehicleInputRate
		constexpr auto SteeringInputRate = 0x2bc; // FVehicleInputRate
		constexpr auto bWasAvoidanceUpdated = 0x2c4; // char : 1
	}

	namespace n_USubtitleRenderer { // : UWindowRoot
		constexpr auto EntryViewClass = 0x398; // USubtitleEntryView*
		constexpr auto m_PendingEntryList = 0x3a0; // TArray<USubtitleEntryView*>
		constexpr auto m_ActiveEntry = 0x3b0; // USubtitleEntryView*
	}

	namespace n_UEnvQueryOption { // : UObject
		constexpr auto Generator = 0x28; // UEnvQueryGenerator*
		constexpr auto Tests = 0x30; // TArray<UEnvQueryTest*>
	}

	namespace n_UParticleModuleEventReceiverKillParticles { // : UParticleModuleEventReceiverBase
		constexpr auto bStopSpawning = 0x40; // char : 1
	}

	namespace n_UComponentDelegateBinding { // : UDynamicBlueprintBinding
		constexpr auto ComponentDelegateBindings = 0x28; // TArray<FBlueprintComponentDelegateBinding>
	}

	namespace n_UTextureCube { // : UTexture
		constexpr auto LightingGuid = 0x30; // FGuid
		constexpr auto LODBias = 0x40; // int32_t
		constexpr auto NumCinematicMipLevels = 0x44; // int32_t
		constexpr auto SRGB = 0x48; // char : 1
		constexpr auto NeverStream = 0x48; // char : 1
		constexpr auto bNoTiling = 0x48; // char : 1
		constexpr auto bUseCinematicMipLevels = 0x48; // char : 1
		constexpr auto AssetUserData = 0x50; // TArray<UAssetUserData*>
		constexpr auto CachedCombinedLODBias = 0x60; // int32_t
		constexpr auto bAsyncResourceReleaseHasBeenStarted = 0x64; // char : 1
		constexpr auto CompressionSettings = 0x68; // TextureCompressionSettings
		constexpr auto Filter = 0x69; // TextureFilter
		constexpr auto LODGroup = 0x6a; // TextureGroup
	}

	namespace n_UConanCheatManager { // : UCheatManager
		constexpr auto DebugCameraControllerRef = 0x28; // ADebugCameraController*
		constexpr auto DebugCameraControllerClass = 0x30; // ADebugCameraController*
	}

	namespace n_UParticleModuleMeshRotationRateMultiplyLife { // : UParticleModuleRotationRateBase
		constexpr auto LifeMultiplier = 0x30; // FRawDistributionVector
	}

	namespace n_UHighlightsSetScreenshotAsync { // : UBlueprintAsyncActionBase
		constexpr auto onSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto onFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_UParticleModuleAttractorLine { // : UParticleModuleAttractorBase
		constexpr auto EndPoint0 = 0x30; // FVector
		constexpr auto EndPoint1 = 0x3c; // FVector
		constexpr auto range = 0x48; // FRawDistributionFloat
		constexpr auto Strength = 0x80; // FRawDistributionFloat
	}

	namespace n_UInterpTrackInstSlomo { // : UInterpTrackInst
		constexpr auto OldTimeDilation = 0x28; // float
	}

	namespace n_UCraftingStationInventoryView { // : UExternalInventoryView
		constexpr auto m_CraftingStation = 0x388; // APlaceableBase*
		constexpr auto m_CraftingQueue = 0x390; // UCraftingQueue*
		constexpr auto m_DismantlerInventory = 0x398; // UItemInventory*
		constexpr auto m_ArtisanThrallInventory = 0x3a0; // UItemInventory*
	}

	namespace n_UInventoryGridSlotView_C { // : UInventoryGridSlotViewBase
		constexpr auto UberGraphFrame = 0x660; // FPointerToUberGraphFrame
		constexpr auto AnimSelect = 0x668; // UWidgetAnimation*
		constexpr auto AnimMouseOver = 0x670; // UWidgetAnimation*
		constexpr auto IconSlot = 0x678; // UNamedSlot*
		constexpr auto SlotImage = 0x680; // UImage*
	}

	namespace n_UAISenseEvent_Hearing { // : UAISenseEvent
		constexpr auto Event = 0x28; // FAINoiseEvent
	}

	namespace n_UEnvQueryGenerator_BlueprintBase { // : UEnvQueryGenerator
		constexpr auto GeneratorsActionDescription = 0x50; // FText
		constexpr auto Context = 0x68; // UEnvQueryContext*
		constexpr auto GeneratedItemType = 0x70; // UEnvQueryItemType*
	}

	namespace n_UW_Friends_C { // : UFriendsGame
		constexpr auto UberGraphFrame = 0x920; // FPointerToUberGraphFrame
		constexpr auto B_AddFriend = 0x928; // UW_ButtonLarge_C*
		constexpr auto B_AddFriendAdd = 0x930; // UW_ButtonNormal_C*
		constexpr auto B_AddFriendCancel = 0x938; // UW_ButtonNormal_C*
		constexpr auto B_BlockFriendBlock = 0x940; // UW_ButtonNormal_C*
		constexpr auto B_BlockFriendCancel = 0x948; // UW_ButtonNormal_C*
		constexpr auto B_BlockPlayerBlock = 0x950; // UW_ButtonNormal_C*
		constexpr auto B_BlockPlayerCancel = 0x958; // UW_ButtonNormal_C*
		constexpr auto B_BlockSessionInviteBlock = 0x960; // UW_ButtonNormal_C*
		constexpr auto B_Close = 0x968; // UW_ButtonLarge_C*
		constexpr auto B_CopyFuncomId = 0x970; // UW_ButtonLarge_C*
		constexpr auto B_CopyFuncomIdold = 0x978; // UW_ButtonLarge_C*
		constexpr auto B_Cross = 0x980; // UW_ButtonNormal_C*
		constexpr auto B_PasswordDialogBack = 0x988; // UW_ButtonNormal_C*
		constexpr auto B_PasswordDialogOk = 0x990; // UW_ButtonNormal_C*
		constexpr auto B_RefreshLists = 0x998; // UW_ButtonLarge_C*
		constexpr auto B_RefreshListsOld = 0x9a0; // UW_ButtonLarge_C*
		constexpr auto B_RemoveFriendCancel = 0x9a8; // UW_ButtonNormal_C*
		constexpr auto B_RemoveFriendRemove = 0x9b0; // UW_ButtonNormal_C*
		constexpr auto B_Submenu_Blocked = 0x9b8; // UW_FriendTabButton_C*
		constexpr auto B_Submenu_Blocked_old = 0x9c0; // UW_TabButton_C*
		constexpr auto B_Submenu_FriendList = 0x9c8; // UW_FriendTabButton_C*
		constexpr auto B_Submenu_FriendList_old = 0x9d0; // UW_TabButton_C*
		constexpr auto B_Submenu_FriendRequests = 0x9d8; // UW_FriendTabButton_C*
		constexpr auto B_Submenu_FriendRequests_old = 0x9e0; // UW_TabButton_C*
		constexpr auto B_Submenu_SessionInvites = 0x9e8; // UW_FriendTabButton_C*
		constexpr auto B_Submenu_SessionInvites_old = 0x9f0; // UW_TabButton_C*
		constexpr auto BaseBorderImage = 0x9f8; // UImage*
		constexpr auto BaseBorderImage2 = 0xa00; // UImage*
		constexpr auto BlockFriendPopUp = 0xa08; // UBorder*
		constexpr auto BlockFriendText = 0xa10; // UFCRichTextBlock*
		constexpr auto BlockPlayerPopUp = 0xa18; // UBorder*
		constexpr auto BlockPlayerText = 0xa20; // UFCRichTextBlock*
		constexpr auto FriendListTitle = 0xa28; // UTextBlock*
		constexpr auto FriendName = 0xa30; // UTextBlock*
		constexpr auto FriendsMenu = 0xa38; // UBorder*
		constexpr auto HB_PlayerInfoContainer = 0xa40; // UHorizontalBox*
		constexpr auto Image_4 = 0xa48; // UImage*
		constexpr auto Image_5 = 0xa50; // UImage*
		constexpr auto Image_6 = 0xa58; // UImage*
		constexpr auto Image_7 = 0xa60; // UImage*
		constexpr auto Image_382 = 0xa68; // UImage*
		constexpr auto Image_383 = 0xa70; // UImage*
		constexpr auto LeftNavigationIcon = 0xa78; // UW_HotkeyIcon_C*
		constexpr auto MenuSwitcher = 0xa80; // UWidgetSwitcher*
		constexpr auto Platform = 0xa88; // UTextBlock*
		constexpr auto RemoveFriendPopUp = 0xa90; // UBorder*
		constexpr auto RemoveFriendText = 0xa98; // UFCRichTextBlock*
		constexpr auto RightNavigationIcon = 0xaa0; // UW_HotkeyIcon_C*
		constexpr auto Status = 0xaa8; // UTextBlock*
		constexpr auto T_AddFriendFuncomId = 0xab0; // UW_FCEditableTextBlock_C*
		constexpr auto T_PasswordDialogPassword = 0xab8; // UW_FCEditableTextBlock_C*
		constexpr auto T_PlayerFuncomId = 0xac0; // UFCRichTextBlock*
		constexpr auto TitleImage = 0xac8; // UImage*
		constexpr auto TitleImage2 = 0xad0; // UImage*
		constexpr auto TopBorderImage = 0xad8; // UImage*
		constexpr auto TopBorderImage2 = 0xae0; // UImage*
		constexpr auto W_AddFriend = 0xae8; // UBorder*
		constexpr auto W_Friends_BlockedPlayers = 0xaf0; // UW_Friends_BlockedPlayers_C*
		constexpr auto W_Friends_FriendList = 0xaf8; // UW_Friends_FriendList_C*
		constexpr auto W_Friends_FriendRequests = 0xb00; // UW_Friends_FriendRequests_C*
		constexpr auto W_Friends_SessionInvites = 0xb08; // UW_Friends_SessionInvites_C*
		constexpr auto ActiveListWidget = 0xb10; // URootWidget*
	}

	namespace n_UMaterialExpressionRotator { // : UMaterialExpression
		constexpr auto Coordinate = 0x60; // FExpressionInput
		constexpr auto Time = 0x98; // FExpressionInput
		constexpr auto CenterX = 0xd0; // float
		constexpr auto CenterY = 0xd4; // float
		constexpr auto Speed = 0xd8; // float
		constexpr auto ConstCoordinate = 0xdc; // uint32_t
	}

	namespace n_ULandscapeGrassType { // : UObject
		constexpr auto GrassVarieties = 0x28; // TArray<FGrassVariety>
		constexpr auto GrassMesh = 0x38; // UStaticMesh*
		constexpr auto GrassDensity = 0x40; // float
		constexpr auto PlacementJitter = 0x44; // float
		constexpr auto StartCullDistance = 0x48; // int32_t
		constexpr auto EndCullDistance = 0x4c; // int32_t
		constexpr auto RandomRotation = 0x50; // bool
		constexpr auto AlignToSurface = 0x51; // bool
	}

	namespace n_UW_TooltipOverlay_C { // : URootWidget
		constexpr auto KeyNavOnSelectedEvent = 0x240; // FScriptMulticastDelegate
		constexpr auto KeyNavLeft = 0x250; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavRight = 0x258; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavAbove = 0x260; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavBelow = 0x268; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavTab = 0x270; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildLeft = 0x278; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildRight = 0x280; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildAbove = 0x288; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildBelow = 0x290; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildTab = 0x298; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildren = 0x2a0; // TWeakObjectPtr<URootWidget>
		constexpr auto TooltipWidgetClass = 0x2a8; // UTooltipWidget*
		constexpr auto KeyNavIndicatorClass = 0x2b0; // UKeyNavIndicator*
		constexpr auto PositiveFeedbackColor = 0x2b8; // FLinearColor
		constexpr auto NegativeFeedbackColor = 0x2c8; // FLinearColor
		constexpr auto NeutralFeedbackColor = 0x2d8; // FLinearColor
		constexpr auto KeyNavFocusOnClick = 0x2e8; // bool
		constexpr auto KeyNavAutoSetBack = 0x2e9; // bool
		constexpr auto m_Window = 0x2f0; // UWindowRoot*
		constexpr auto m_Parent = 0x2f8; // TWeakObjectPtr<URootWidget>
		constexpr auto m_KeyNavIndicator = 0x300; // UKeyNavIndicator*
	}

	namespace n_UMovieSceneFadeTrack { // : UMovieSceneFloatTrack
		constexpr auto PropertyName = 0xb8; // FName
		constexpr auto PropertyPath = 0xc0; // FString
		constexpr auto Sections = 0xd0; // TArray<UMovieSceneSection*>
	}

	namespace n_UDistributionFloatParameterBase { // : UDistributionFloatConstant
		constexpr auto ParameterName = 0x40; // FName
		constexpr auto MinInput = 0x48; // float
		constexpr auto MaxInput = 0x4c; // float
		constexpr auto MinOutput = 0x50; // float
		constexpr auto MaxOutput = 0x54; // float
		constexpr auto ParamMode = 0x58; // DistributionParamMode
	}

	namespace n_UMorphTarget { // : UObject
		constexpr auto BaseSkelMesh = 0x28; // USkeletalMesh*
	}

	namespace n_USpawnTableComponent { // : UActorComponent
		constexpr auto m_StatIntTable = 0xf8; // TArray<UStatIntArray*>
		constexpr auto m_StatIntModifierTable = 0x108; // TArray<UStatIntArray*>
		constexpr auto m_StatFloatTable = 0x118; // TArray<UStatFloatArray*>
		constexpr auto m_StatFloatModifierTable = 0x128; // TArray<UStatFloatArray*>
		constexpr auto m_WeightedSpawnTable = 0x138; // TArray<UWeightedTableArray*>
		constexpr auto m_FallbackComboPresets = 0x148; // TMap<WeaponItemTypes, int32_t>
		constexpr auto m_LoadedComboPresets = 0x198; // TMap<WeaponItemTypes, FComboPresetTableRow>
		constexpr auto m_ThrallTypes = 0x1e8; // TArray<UObject*>
		constexpr auto m_SpawnTable = 0x1f8; // UDataTable*
		constexpr auto m_EquipmentTable = 0x200; // UDataTable*
		constexpr auto m_ProfessionTable = 0x208; // UDataTable*
		constexpr auto m_RaceTable = 0x210; // UDataTable*
		constexpr auto m_ThrallTierTable = 0x218; // UDataTable*
		constexpr auto m_ComboPresetsTable = 0x220; // UDataTable*
		constexpr auto m_ThrallDataTable = 0x228; // UDataTable*
	}

	namespace n_UExpandableArea { // : UWidget
		constexpr auto Style = 0x120; // FExpandableAreaStyle
		constexpr auto BorderBrush = 0x250; // FSlateBrush
		constexpr auto BorderColor = 0x2e0; // FSlateColor
		constexpr auto bIsExpanded = 0x308; // bool
		constexpr auto MaxHeight = 0x30c; // float
		constexpr auto HeaderPadding = 0x310; // FMargin
		constexpr auto AreaPadding = 0x320; // FMargin
		constexpr auto OnExpansionChanged = 0x330; // FScriptMulticastDelegate
		constexpr auto HeaderContent = 0x340; // UWidget*
		constexpr auto BodyContent = 0x348; // UWidget*
	}

	namespace n_UBTDecorator_ConeCheck { // : UBTDecorator
		constexpr auto ConeHalfAngle = 0x68; // float
		constexpr auto ConeOrigin = 0x70; // FBlackboardKeySelector
		constexpr auto ConeDirection = 0x98; // FBlackboardKeySelector
		constexpr auto Observed = 0xc0; // FBlackboardKeySelector
	}

	namespace n_AProceduralFoliageVolume { // : AVolume
		constexpr auto ProceduralComponent = 0x408; // UProceduralFoliageComponent*
	}

	namespace n_ULandscapeInfo { // : UObject
		constexpr auto LandscapeActor = 0x28; // ALandscape*
		constexpr auto LandscapeGuid = 0x44; // FGuid
		constexpr auto ComponentSizeQuads = 0x54; // int32_t
		constexpr auto SubsectionSizeQuads = 0x58; // int32_t
		constexpr auto ComponentNumSubsections = 0x5c; // int32_t
		constexpr auto DrawScale = 0x60; // FVector
		constexpr auto Proxies = 0xc0; // TSet<ALandscapeStreamingProxy*>
	}

	namespace n_USettingsGamepadPresetBase { // : USubSettingsMaster
		constexpr auto TextureControllerPS4 = 0x328; // UTexture2D*
		constexpr auto TextureControllerXBOX = 0x348; // UTexture2D*
		constexpr auto m_PresetTable = 0x390; // UDataTable*
		constexpr auto m_LabelsTable = 0x398; // UDataTable*
	}

	namespace n_UMaterialExpressionTangent { // : UMaterialExpression
		constexpr auto Input = 0x60; // FExpressionInput
		constexpr auto Period = 0x98; // float
	}

	namespace n_UParticleModuleCollision { // : UParticleModuleCollisionBase
		constexpr auto DampingFactor = 0x30; // FRawDistributionVector
		constexpr auto DampingFactorRotation = 0x80; // FRawDistributionVector
		constexpr auto MaxCollisions = 0xd0; // FRawDistributionFloat
		constexpr auto CollisionCompletionOption = 0x108; // EParticleCollisionComplete
		constexpr auto CollisionTypes = 0x110; // TArray<EObjectTypeQuery>
		constexpr auto bApplyPhysics = 0x128; // char : 1
		constexpr auto bIgnoreTriggerVolumes = 0x128; // char : 1
		constexpr auto ParticleMass = 0x130; // FRawDistributionFloat
		constexpr auto DirScalar = 0x168; // float
		constexpr auto bPawnsDoNotDecrementCount = 0x16c; // char : 1
		constexpr auto bOnlyVerticalNormalsDecrementCount = 0x16c; // char : 1
		constexpr auto VerticalFudgeFactor = 0x170; // float
		constexpr auto DelayAmount = 0x178; // FRawDistributionFloat
		constexpr auto bDropDetail = 0x1b0; // char : 1
		constexpr auto bCollideOnlyIfVisible = 0x1b0; // char : 1
		constexpr auto bIgnoreSourceActor = 0x1b0; // char : 1
		constexpr auto MaxCollisionDistance = 0x1b4; // float
	}

	namespace n_UPersistenceComponent { // : UActorComponent
		constexpr auto SaveOnSpawn = 0xf8; // bool
		constexpr auto SaveFrequency = 0xfc; // float
		constexpr auto SkipSaving = 0x100; // bool
		constexpr auto UID = 0x108; // UUniqueID*
		constexpr auto OnSignalDataLoaded = 0x110; // FScriptMulticastDelegate
		constexpr auto OnSignalPreSave = 0x120; // FScriptMulticastDelegate
		constexpr auto m_bWasLoadedFromDB = 0x130; // bool
	}

	namespace n_UMaterialExpressionNormalize { // : UMaterialExpression
		constexpr auto VectorInput = 0x60; // FExpressionInput
	}

	namespace n_UBlueprintCore { // : UObject
		constexpr auto SkeletonGeneratedClass = 0x28; // UObject*
		constexpr auto GeneratedClass = 0x30; // UObject*
		constexpr auto bLegacyNeedToPurgeSkelRefs = 0x38; // bool
		constexpr auto bLegacyGeneratedClassIsAuthoritative = 0x39; // bool
		constexpr auto BlueprintGuid = 0x3c; // FGuid
	}

	namespace n_UServerRentalServerSetupBase { // : UWindowRoot
		constexpr auto OnShowPopup = 0x398; // FScriptMulticastDelegate
		constexpr auto OnRecievedAllData = 0x3a8; // FScriptMulticastDelegate
		constexpr auto OnSetupClosing = 0x3c0; // FScriptMulticastDelegate
		constexpr auto m_ServerRentalRequestConnection = 0x3d0; // UServerRentalRequestConnection*
		constexpr auto m_SetupType = 0x3d8; // EServerRentalSetupType
	}

	namespace n_UNavTestRenderingComponent { // : UPrimitiveComponent
		constexpr auto MinDrawDistance = 0x308; // float
		constexpr auto LDMaxDrawDistance = 0x30c; // float
		constexpr auto CachedMaxDrawDistance = 0x310; // float
		constexpr auto DepthPriorityGroup = 0x314; // ESceneDepthPriorityGroup
		constexpr auto ViewOwnerDepthPriorityGroup = 0x315; // ESceneDepthPriorityGroup
		constexpr auto bAlwaysCreatePhysicsState = 0x318; // char : 1
		constexpr auto bGenerateOverlapEvents = 0x318; // char : 1
		constexpr auto bForceGenerateOverlapEvents = 0x318; // char : 1
		constexpr auto bMultiBodyOverlap = 0x318; // char : 1
		constexpr auto bCheckAsyncSceneOnMove = 0x318; // char : 1
		constexpr auto bTraceComplexOnMove = 0x318; // char : 1
		constexpr auto bReturnMaterialOnMove = 0x318; // char : 1
		constexpr auto bUseViewOwnerDepthPriorityGroup = 0x318; // char : 1
		constexpr auto bAllowCullDistanceVolume = 0x318; // char : 1
		constexpr auto bHasMotionBlurVelocityMeshes = 0x318; // char : 1
		constexpr auto bVisibleInReflectionCaptures = 0x318; // char : 1
		constexpr auto bRenderInMainPass = 0x318; // char : 1
		constexpr auto bRenderInMono = 0x318; // char : 1
		constexpr auto bReceivesDecals = 0x318; // char : 1
		constexpr auto bOwnerNoSee = 0x318; // char : 1
		constexpr auto bOnlyOwnerSee = 0x318; // char : 1
		constexpr auto bTreatAsBackgroundForOcclusion = 0x318; // char : 1
		constexpr auto bHeightOutputReferenceSand = 0x318; // char : 1
		constexpr auto bHeightOutputReferenceWater = 0x318; // char : 1
		constexpr auto bHeightOutputIgnoreSand = 0x318; // char : 1
		constexpr auto bHeightOutputIgnoreWater = 0x318; // char : 1
		constexpr auto bCullFromDistantShadowCascades = 0x318; // char : 1
		constexpr auto bUseAsOccluder = 0x318; // char : 1
		constexpr auto bSelectable = 0x318; // char : 1
		constexpr auto bForceMipStreaming = 0x318; // char : 1
		constexpr auto bHasPerInstanceHitProxies = 0x318; // char : 1
		constexpr auto CastShadow = 0x318; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x318; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x318; // char : 1
		constexpr auto bCastDynamicShadow = 0x318; // char : 1
		constexpr auto bCastStaticShadow = 0x318; // char : 1
		constexpr auto bCastVolumetricTranslucentShadow = 0x318; // char : 1
		constexpr auto bSelfShadowOnly = 0x31c; // char : 1
		constexpr auto bCastFarShadow = 0x31c; // char : 1
		constexpr auto bCastInsetShadow = 0x31c; // char : 1
		constexpr auto bCastCinematicShadow = 0x31c; // char : 1
		constexpr auto bCastHiddenShadow = 0x31c; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x31c; // char : 1
		constexpr auto bLightAsIfStatic = 0x31c; // char : 1
		constexpr auto bLightAttachmentsAsGroup = 0x31c; // char : 1
		constexpr auto bReceiveCombinedCSMAndStaticShadowsFromStationaryLights = 0x31c; // char : 1
		constexpr auto bSingleSampleShadowFromStationaryLights = 0x31c; // char : 1
		constexpr auto bIgnoreRadialImpulse = 0x31c; // char : 1
		constexpr auto bIgnoreRadialForce = 0x31c; // char : 1
		constexpr auto AlwaysLoadOnClient = 0x31c; // char : 1
		constexpr auto AlwaysLoadOnServer = 0x31c; // char : 1
		constexpr auto bUseEditorCompositing = 0x31c; // char : 1
		constexpr auto bRenderCustomDepth = 0x31c; // char : 1
		constexpr auto IndirectLightingCacheQuality = 0x320; // EIndirectLightingCacheQuality
		constexpr auto bHasCustomNavigableGeometry = 0x321; // EHasCustomNavigableGeometry
		constexpr auto CanCharacterStepUpOn = 0x323; // ECanBeCharacterBase
		constexpr auto LightingChannels = 0x324; // FLightingChannels
		constexpr auto CustomDepthStencilValue = 0x328; // int32_t
		constexpr auto TranslucencySortPriority = 0x32c; // int32_t
		constexpr auto VisibilityId = 0x330; // int32_t
		constexpr auto LpvBiasMultiplier = 0x338; // float
		constexpr auto BodyInstance = 0x340; // FBodyInstance
		constexpr auto BoundsScale = 0x574; // float
		constexpr auto LastSubmitTime = 0x578; // float
		constexpr auto LastRenderTime = 0x57c; // float
		constexpr auto LastRenderTimeOnScreen = 0x580; // float
		constexpr auto MoveIgnoreActors = 0x588; // TArray<AActor*>
		constexpr auto MoveIgnoreComponents = 0x598; // TArray<UPrimitiveComponent*>
		constexpr auto OnComponentHit = 0x5b8; // FScriptMulticastDelegate
		constexpr auto OnComponentBeginOverlap = 0x5c8; // FScriptMulticastDelegate
		constexpr auto OnComponentEndOverlap = 0x5d8; // FScriptMulticastDelegate
		constexpr auto OnComponentWake = 0x5e8; // FScriptMulticastDelegate
		constexpr auto OnComponentSleep = 0x5f8; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x608; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x618; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x628; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x638; // FScriptMulticastDelegate
		constexpr auto LODParentPrimitive = 0x660; // UPrimitiveComponent*
		constexpr auto PostPhysicsComponentTick = 0x668; // FPrimitiveComponentPostPhysicsTickFunction
	}

	namespace n_UW_TooltipWidget_C { // : UTooltipWidget
		constexpr auto textView = 0x248; // UTextBlock*
	}

	namespace n_ASubDSurfaceActor { // : AActor
		constexpr auto SubDSurface = 0x3d0; // USubDSurfaceComponent*
		constexpr auto DisplayMeshComponent = 0x3d8; // UStaticMeshComponent*
	}

	namespace n_UMaterialExpressionDecalLifetimeOpacity { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto Desc = 0x38; // FString
		constexpr auto BorderColor = 0x48; // FColor
		constexpr auto bRealtimePreview = 0x4c; // char : 1
		constexpr auto bNeedToUpdatePreview = 0x4c; // char : 1
		constexpr auto bIsParameterExpression = 0x4c; // char : 1
		constexpr auto bCommentBubbleVisible = 0x4c; // char : 1
		constexpr auto bShowOutputNameOnPin = 0x4c; // char : 1
		constexpr auto bHidePreviewWindow = 0x4c; // char : 1
		constexpr auto bCollapsed = 0x4c; // char : 1
		constexpr auto bShaderInputData = 0x4c; // char : 1
		constexpr auto bShowInputs = 0x4c; // char : 1
		constexpr auto bShowOutputs = 0x4c; // char : 1
		constexpr auto Outputs = 0x50; // TArray<FExpressionOutput>
	}

	namespace n_UInstancedStaticMeshComponent { // : UStaticMeshComponent
		constexpr auto PerInstanceSMData = 0x828; // TArray<FInstancedStaticMeshInstanceData>
		constexpr auto InstancingRandomSeed = 0x838; // int32_t
		constexpr auto InstanceStartCullDistance = 0x83c; // int32_t
		constexpr auto InstanceEndCullDistance = 0x840; // int32_t
		constexpr auto InstanceReorderTable = 0x848; // TArray<int32_t>
		constexpr auto RemovedInstances = 0x858; // TArray<int32_t>
		constexpr auto PhysicsSerializer = 0x898; // UPhysicsSerializer*
		constexpr auto NumPendingLightmaps = 0x8b4; // int32_t
		constexpr auto CachedMappings = 0x8b8; // TArray<FInstancedStaticMeshMappingInfo>
	}

	namespace n_UTextureRenderTargetCube { // : UTextureRenderTarget
		constexpr auto SizeX = 0xd0; // int32_t
		constexpr auto ClearColor = 0xd4; // FLinearColor
		constexpr auto OverrideFormat = 0xe4; // EPixelFormat
		constexpr auto bHDR = 0xe8; // char : 1
		constexpr auto bForceLinearGamma = 0xe8; // char : 1
	}

	namespace n_UAnimClassData { // : UObject
		constexpr auto BakedStateMachines = 0x30; // TArray<FBakedAnimationStateMachine>
		constexpr auto TargetSkeleton = 0x40; // USkeleton*
		constexpr auto AnimNotifies = 0x48; // TArray<FAnimNotifyEvent>
		constexpr auto RootAnimNodeIndex = 0x58; // int32_t
		constexpr auto OrderedSavedPoseIndices = 0x60; // TArray<int32_t>
		constexpr auto RootAnimNodeProperty = 0x70; // UStructProperty*
		constexpr auto AnimNodeProperties = 0x78; // TArray<UStructProperty*>
		constexpr auto SyncGroupNames = 0x88; // TArray<FName>
	}

	namespace n_UMaterialExpressionPerInstanceRandom { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto Desc = 0x38; // FString
		constexpr auto BorderColor = 0x48; // FColor
		constexpr auto bRealtimePreview = 0x4c; // char : 1
		constexpr auto bNeedToUpdatePreview = 0x4c; // char : 1
		constexpr auto bIsParameterExpression = 0x4c; // char : 1
		constexpr auto bCommentBubbleVisible = 0x4c; // char : 1
		constexpr auto bShowOutputNameOnPin = 0x4c; // char : 1
		constexpr auto bHidePreviewWindow = 0x4c; // char : 1
		constexpr auto bCollapsed = 0x4c; // char : 1
		constexpr auto bShaderInputData = 0x4c; // char : 1
		constexpr auto bShowInputs = 0x4c; // char : 1
		constexpr auto bShowOutputs = 0x4c; // char : 1
		constexpr auto Outputs = 0x50; // TArray<FExpressionOutput>
	}

	namespace n_USkeleton { // : UObject
		constexpr auto BoneTree = 0x28; // TArray<FBoneNode>
		constexpr auto RefLocalPoses = 0x38; // TArray<FTransform>
		constexpr auto VirtualBoneGuid = 0x158; // FGuid
		constexpr auto VirtualBones = 0x168; // TArray<FVirtualBone>
		constexpr auto LinkupCache = 0x178; // TArray<FSkeletonToMeshLinkup>
		constexpr auto Sockets = 0x188; // TArray<USkeletalMeshSocket*>
		constexpr auto SmartNames = 0x1e8; // FSmartNameContainer
		constexpr auto BlendProfiles = 0x250; // TArray<UBlendProfile*>
		constexpr auto SlotGroups = 0x260; // TArray<FAnimSlotGroup>
	}

	namespace n_UMaterialExpressionGraniteTextureObject { // : UMaterialExpressionGraniteTextureBase
		constexpr auto Texture = 0x60; // UGraniteTexture*
		constexpr auto PreviewLayer = 0x68; // int32_t
	}

	namespace n_USoundBase { // : UObject
		constexpr auto SoundClassObject = 0x28; // USoundClass*
		constexpr auto SoundSubmixObject = 0x30; // USoundSubmix*
		constexpr auto bDebug = 0x38; // char : 1
		constexpr auto bOverrideConcurrency = 0x38; // char : 1
		constexpr auto bIgnoreFocus = 0x38; // char : 1
		constexpr auto SoundConcurrencySettings = 0x40; // USoundConcurrency*
		constexpr auto ConcurrencyOverrides = 0x48; // FSoundConcurrencySettings
		constexpr auto MaxConcurrentResolutionRule = 0x58; // EMaxConcurrentResolutionRule
		constexpr auto MaxConcurrentPlayCount = 0x5c; // int32_t
		constexpr auto Duration = 0x60; // float
		constexpr auto AttenuationSettings = 0x68; // USoundAttenuation*
		constexpr auto Priority = 0x70; // float
		constexpr auto SourceEffectChain = 0x78; // TArray<USoundEffectSourcePreset*>
		constexpr auto DefaultMasterReverbSendAmount = 0x88; // float
	}

	namespace n_AConanLevelScriptActor { // : ADWLevelScriptActor
		constexpr auto bInputEnabled = 0x3d0; // char : 1
	}

	namespace n_UCameraModifier { // : UObject
		constexpr auto bDebug = 0x28; // char : 1
		constexpr auto bExclusive = 0x28; // char : 1
		constexpr auto Priority = 0x2c; // char
		constexpr auto CameraOwner = 0x30; // APlayerCameraManager*
		constexpr auto AlphaInTime = 0x38; // float
		constexpr auto AlphaOutTime = 0x3c; // float
		constexpr auto Alpha = 0x40; // float
	}

	namespace n_UBlackboardData { // : UDataAsset
		constexpr auto Parent = 0x28; // UBlackboardData*
		constexpr auto Keys = 0x30; // TArray<FBlackboardEntry>
		constexpr auto bHasSynchronizedKeys = 0x40; // char : 1
	}

	namespace n_UMaterialExpressionClamp { // : UMaterialExpression
		constexpr auto Input = 0x60; // FExpressionInput
		constexpr auto Min = 0x98; // FExpressionInput
		constexpr auto Max = 0xd0; // FExpressionInput
		constexpr auto ClampMode = 0x108; // EClampMode
		constexpr auto MinDefault = 0x10c; // float
		constexpr auto MaxDefault = 0x110; // float
	}

	namespace n_UMaterialExpressionSphericalParticleOpacity { // : UMaterialExpression
		constexpr auto Density = 0x60; // FExpressionInput
		constexpr auto ConstantDensity = 0x98; // float
	}

	namespace n_UMaterialExpressionRotateAboutAxis { // : UMaterialExpression
		constexpr auto NormalizedRotationAxis = 0x60; // FExpressionInput
		constexpr auto RotationAngle = 0x98; // FExpressionInput
		constexpr auto PivotPoint = 0xd0; // FExpressionInput
		constexpr auto Position = 0x108; // FExpressionInput
		constexpr auto Period = 0x140; // float
	}

	namespace n_ASkeletalMeshActor { // : AActor
		constexpr auto bShouldDoAnimNotifies = 0x3d8; // char : 1
		constexpr auto bWakeOnLevelStart = 0x3d8; // char : 1
		constexpr auto SkeletalMeshComponent = 0x3e0; // USkeletalMeshComponent*
		constexpr auto ReplicatedMesh = 0x3e8; // USkeletalMesh*
		constexpr auto ReplicatedPhysAsset = 0x3f0; // UPhysicsAsset*
		constexpr auto ReplicatedMaterial0 = 0x3f8; // UMaterialInterface*
		constexpr auto ReplicatedMaterial1 = 0x400; // UMaterialInterface*
	}

	namespace n_UMaterialParameterCollectionInstance { // : UObject
		constexpr auto Collection = 0x30; // UMaterialParameterCollection*
		constexpr auto World = 0x38; // UWorld*
	}

	namespace n_UFloatStatChangeSignalNode { // : UObject
		constexpr auto SignalStatChanged = 0x28; // FScriptMulticastDelegate
	}

	namespace n_UEgocentricParticleSpawnerComponent { // : UActorComponent
		constexpr auto MinSpawnInterval = 0xf8; // float
		constexpr auto MaxRadius = 0xfc; // float
		constexpr auto TraceStartZ = 0x100; // float
		constexpr auto TraceEndZ = 0x104; // float
		constexpr auto MaxSpawnCount = 0x108; // int32_t
		constexpr auto m_SpawnedParticles = 0x110; // TArray<AActor*>
	}

	namespace n_UEnvQueryTest_PathfindingBatch { // : UEnvQueryTest_Pathfinding
		constexpr auto ScanRangeMultiplier = 0x238; // FAIDataProviderFloatValue
	}

	namespace n_UInterpTrackInstProperty { // : UInterpTrackInst
		constexpr auto InterpProperty = 0x28; // UProperty*
		constexpr auto PropertyOuterObjectInst = 0x30; // UObject*
	}

	namespace n_APlaceableBase { // : ABuildableBase
		constexpr auto MapMarkerIcon = 0x548; // UTexture2D*
		constexpr auto DestroyActorOnZeroHealth = 0x56c; // bool
		constexpr auto DropInventoryContentOnDestroyed = 0x56d; // bool
		constexpr auto CraftingGroups = 0x570; // TArray<int32_t>
		constexpr auto DestructibleMesh = 0x580; // UDestructibleMesh*
		constexpr auto LootContainerClass = 0x588; // ALootContainer*
		constexpr auto UpgradeTargets = 0x590; // TArray<APlaceableBase*>
		constexpr auto HasHitGround = 0x5a0; // bool
		constexpr auto HasStability = 0x5a1; // bool
		constexpr auto CanProvideStabilityTo = 0x5a8; // TArray<APlaceableBase*>
		constexpr auto DoNotRespectOwnership = 0x5b8; // bool
		constexpr auto CanTakeDamage = 0x5b9; // bool
		constexpr auto IgnoreCanDamagePlayerOwnedStucture = 0x5ba; // bool
		constexpr auto ReturnableToInventory = 0x5bb; // bool
		constexpr auto OccludesGrass = 0x5bc; // bool
		constexpr auto WasPlacedAsUpgrade = 0x5bd; // bool
		constexpr auto DisableDecayWhenOnGround = 0x5be; // bool
		constexpr auto returningToInventoryCharacter = 0x5c0; // AConanCharacter*
	}

	namespace n_UAISense_Blueprint { // : UAISense
		constexpr auto ListenerDataType = 0x120; // UUserDefinedStruct*
		constexpr auto ListenerContainer = 0x128; // TArray<UAIPerceptionComponent*>
		constexpr auto UnprocessedEvents = 0x138; // TArray<UAISenseEvent*>
	}

	namespace n_UAISense { // : UObject
		constexpr auto DefaultExpirationAge = 0x28; // float
		constexpr auto notifyType = 0x2c; // EAISenseNotifyType
		constexpr auto bWantsNewPawnNotification = 0x30; // char : 1
		constexpr auto bAutoRegisterAllPawnsAsSources = 0x30; // char : 1
		constexpr auto PerceptionSystemInstance = 0x38; // UAIPerceptionSystem*
	}

	namespace n_UScrollBar { // : UWidget
		constexpr auto WidgetStyle = 0x118; // FScrollBarStyle
		constexpr auto Style = 0x630; // USlateWidgetStyleAsset*
		constexpr auto bAlwaysShowScrollbar = 0x638; // bool
		constexpr auto Orientation = 0x639; // EOrientation
		constexpr auto Thickness = 0x63c; // FVector2D
	}

	namespace n_UAchievementQueryCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto onSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto onFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_UNavigationInvokerComponent { // : UActorComponent
		constexpr auto TileGenerationRadius = 0xf8; // float
		constexpr auto TileRemovalRadius = 0xfc; // float
		constexpr auto NavDataConfigName = 0x100; // FName
	}

	namespace n_UMaterialExpressionTransform { // : UMaterialExpression
		constexpr auto Input = 0x60; // FExpressionInput
		constexpr auto TransformSourceType = 0x98; // EMaterialVectorCoordTransformSource
		constexpr auto TransformType = 0x99; // EMaterialVectorCoordTransform
	}

	namespace n_UMaterialExpressionParticleRandom { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto Desc = 0x38; // FString
		constexpr auto BorderColor = 0x48; // FColor
		constexpr auto bRealtimePreview = 0x4c; // char : 1
		constexpr auto bNeedToUpdatePreview = 0x4c; // char : 1
		constexpr auto bIsParameterExpression = 0x4c; // char : 1
		constexpr auto bCommentBubbleVisible = 0x4c; // char : 1
		constexpr auto bShowOutputNameOnPin = 0x4c; // char : 1
		constexpr auto bHidePreviewWindow = 0x4c; // char : 1
		constexpr auto bCollapsed = 0x4c; // char : 1
		constexpr auto bShaderInputData = 0x4c; // char : 1
		constexpr auto bShowInputs = 0x4c; // char : 1
		constexpr auto bShowOutputs = 0x4c; // char : 1
		constexpr auto Outputs = 0x50; // TArray<FExpressionOutput>
	}

	namespace n_UInterpTrackFade { // : UInterpTrackFloatBase
		constexpr auto bPersistFade = 0x90; // char : 1
		constexpr auto bFadeAudio = 0x90; // char : 1
		constexpr auto FadeColor = 0x94; // FLinearColor
	}

	namespace n_UHostLocalBase { // : UWindowRoot
		constexpr auto m_MapLocked = 0x398; // bool
		constexpr auto TextureExiledCivilized = 0x3a0; // UTexture2D*
		constexpr auto TextureExiledDecadent = 0x3c0; // UTexture2D*
		constexpr auto TextureExiledBarbaric = 0x3e0; // UTexture2D*
		constexpr auto TextureSiptahCivilized = 0x400; // UTexture2D*
		constexpr auto TextureSiptahDecadent = 0x420; // UTexture2D*
		constexpr auto TextureSiptahBarbaric = 0x440; // UTexture2D*
		constexpr auto ServerSettingsClass = 0x508; // AServerSettings*
	}

	namespace n_AConanCritterAIController { // : AConanBasicAIController
		constexpr auto FleeRange = 0x568; // float
		constexpr auto MaxRoamingRange = 0x56c; // float
		constexpr auto CanRoam = 0x570; // bool
		constexpr auto PurgeShouldReturnHome = 0x571; // bool
		constexpr auto BehaviorParameters = 0x578; // UObject*
		constexpr auto CheckIfOffNavmeshInterval = 0x580; // float
		constexpr auto TotalTimeToCheckIfOffNavmesh = 0x584; // float
		constexpr auto bIsPatroling = 0x588; // bool
		constexpr auto FleeActor = 0x5b8; // AConanCharacter*
		constexpr auto bIsSuiciding = 0x600; // bool
		constexpr auto DefaultNavQueryFilterObject = 0x618; // UNavigationQueryFilter*
	}

	namespace n_UInAppPurchaseRestoreCallbackProxy { // : UObject
		constexpr auto onSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto onFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_ULandscapeGizmoRenderComponent { // : UPrimitiveComponent
		constexpr auto MinDrawDistance = 0x308; // float
		constexpr auto LDMaxDrawDistance = 0x30c; // float
		constexpr auto CachedMaxDrawDistance = 0x310; // float
		constexpr auto DepthPriorityGroup = 0x314; // ESceneDepthPriorityGroup
		constexpr auto ViewOwnerDepthPriorityGroup = 0x315; // ESceneDepthPriorityGroup
		constexpr auto bAlwaysCreatePhysicsState = 0x318; // char : 1
		constexpr auto bGenerateOverlapEvents = 0x318; // char : 1
		constexpr auto bForceGenerateOverlapEvents = 0x318; // char : 1
		constexpr auto bMultiBodyOverlap = 0x318; // char : 1
		constexpr auto bCheckAsyncSceneOnMove = 0x318; // char : 1
		constexpr auto bTraceComplexOnMove = 0x318; // char : 1
		constexpr auto bReturnMaterialOnMove = 0x318; // char : 1
		constexpr auto bUseViewOwnerDepthPriorityGroup = 0x318; // char : 1
		constexpr auto bAllowCullDistanceVolume = 0x318; // char : 1
		constexpr auto bHasMotionBlurVelocityMeshes = 0x318; // char : 1
		constexpr auto bVisibleInReflectionCaptures = 0x318; // char : 1
		constexpr auto bRenderInMainPass = 0x318; // char : 1
		constexpr auto bRenderInMono = 0x318; // char : 1
		constexpr auto bReceivesDecals = 0x318; // char : 1
		constexpr auto bOwnerNoSee = 0x318; // char : 1
		constexpr auto bOnlyOwnerSee = 0x318; // char : 1
		constexpr auto bTreatAsBackgroundForOcclusion = 0x318; // char : 1
		constexpr auto bHeightOutputReferenceSand = 0x318; // char : 1
		constexpr auto bHeightOutputReferenceWater = 0x318; // char : 1
		constexpr auto bHeightOutputIgnoreSand = 0x318; // char : 1
		constexpr auto bHeightOutputIgnoreWater = 0x318; // char : 1
		constexpr auto bCullFromDistantShadowCascades = 0x318; // char : 1
		constexpr auto bUseAsOccluder = 0x318; // char : 1
		constexpr auto bSelectable = 0x318; // char : 1
		constexpr auto bForceMipStreaming = 0x318; // char : 1
		constexpr auto bHasPerInstanceHitProxies = 0x318; // char : 1
		constexpr auto CastShadow = 0x318; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x318; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x318; // char : 1
		constexpr auto bCastDynamicShadow = 0x318; // char : 1
		constexpr auto bCastStaticShadow = 0x318; // char : 1
		constexpr auto bCastVolumetricTranslucentShadow = 0x318; // char : 1
		constexpr auto bSelfShadowOnly = 0x31c; // char : 1
		constexpr auto bCastFarShadow = 0x31c; // char : 1
		constexpr auto bCastInsetShadow = 0x31c; // char : 1
		constexpr auto bCastCinematicShadow = 0x31c; // char : 1
		constexpr auto bCastHiddenShadow = 0x31c; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x31c; // char : 1
		constexpr auto bLightAsIfStatic = 0x31c; // char : 1
		constexpr auto bLightAttachmentsAsGroup = 0x31c; // char : 1
		constexpr auto bReceiveCombinedCSMAndStaticShadowsFromStationaryLights = 0x31c; // char : 1
		constexpr auto bSingleSampleShadowFromStationaryLights = 0x31c; // char : 1
		constexpr auto bIgnoreRadialImpulse = 0x31c; // char : 1
		constexpr auto bIgnoreRadialForce = 0x31c; // char : 1
		constexpr auto AlwaysLoadOnClient = 0x31c; // char : 1
		constexpr auto AlwaysLoadOnServer = 0x31c; // char : 1
		constexpr auto bUseEditorCompositing = 0x31c; // char : 1
		constexpr auto bRenderCustomDepth = 0x31c; // char : 1
		constexpr auto IndirectLightingCacheQuality = 0x320; // EIndirectLightingCacheQuality
		constexpr auto bHasCustomNavigableGeometry = 0x321; // EHasCustomNavigableGeometry
		constexpr auto CanCharacterStepUpOn = 0x323; // ECanBeCharacterBase
		constexpr auto LightingChannels = 0x324; // FLightingChannels
		constexpr auto CustomDepthStencilValue = 0x328; // int32_t
		constexpr auto TranslucencySortPriority = 0x32c; // int32_t
		constexpr auto VisibilityId = 0x330; // int32_t
		constexpr auto LpvBiasMultiplier = 0x338; // float
		constexpr auto BodyInstance = 0x340; // FBodyInstance
		constexpr auto BoundsScale = 0x574; // float
		constexpr auto LastSubmitTime = 0x578; // float
		constexpr auto LastRenderTime = 0x57c; // float
		constexpr auto LastRenderTimeOnScreen = 0x580; // float
		constexpr auto MoveIgnoreActors = 0x588; // TArray<AActor*>
		constexpr auto MoveIgnoreComponents = 0x598; // TArray<UPrimitiveComponent*>
		constexpr auto OnComponentHit = 0x5b8; // FScriptMulticastDelegate
		constexpr auto OnComponentBeginOverlap = 0x5c8; // FScriptMulticastDelegate
		constexpr auto OnComponentEndOverlap = 0x5d8; // FScriptMulticastDelegate
		constexpr auto OnComponentWake = 0x5e8; // FScriptMulticastDelegate
		constexpr auto OnComponentSleep = 0x5f8; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x608; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x618; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x628; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x638; // FScriptMulticastDelegate
		constexpr auto LODParentPrimitive = 0x660; // UPrimitiveComponent*
		constexpr auto PostPhysicsComponentTick = 0x668; // FPrimitiveComponentPostPhysicsTickFunction
	}

	namespace n_UParticleModuleOrientationAxisLock { // : UParticleModuleOrientationBase
		constexpr auto LockAxisFlags = 0x30; // EParticleAxisLock
	}

	namespace n_UPaperFlipbookComponent { // : UMeshComponent
		constexpr auto SourceFlipbook = 0x7c8; // UPaperFlipbook*
		constexpr auto Material = 0x7d0; // UMaterialInterface*
		constexpr auto PlayRate = 0x7d8; // float
		constexpr auto bLooping = 0x7dc; // char : 1
		constexpr auto bReversePlayback = 0x7dc; // char : 1
		constexpr auto bPlaying = 0x7dc; // char : 1
		constexpr auto AccumulatedTime = 0x7e0; // float
		constexpr auto CachedFrameIndex = 0x7e4; // int32_t
		constexpr auto SpriteColor = 0x7e8; // FLinearColor
		constexpr auto CachedBodySetup = 0x7f8; // UBodySetup*
		constexpr auto OnFinishedPlaying = 0x800; // FScriptMulticastDelegate
	}

	namespace n_USlateSettings { // : UObject
		constexpr auto bVirtualKeyboardSendsTextChanged = 0x28; // bool
		constexpr auto bVirtualKeyboardDisplayOnFocus = 0x29; // bool
		constexpr auto bExplicitCanvasChildZOrder = 0x2a; // bool
	}

	namespace n_USoundWaveProcedural { // : USoundWave
		constexpr auto CompressionQuality = 0x90; // int32_t
		constexpr auto bLooping = 0x94; // char : 1
		constexpr auto bStreaming = 0x94; // char : 1
		constexpr auto StreamingPriority = 0x98; // int32_t
		constexpr auto bMature = 0x9c; // char : 1
		constexpr auto bManualWordWrap = 0x9c; // char : 1
		constexpr auto bSingleLine = 0x9c; // char : 1
		constexpr auto bVirtualizeWhenSilent = 0x9c; // char : 1
		constexpr auto SoundGroup = 0xa0; // ESoundGroup
		constexpr auto SpokenText = 0xa8; // FString
		constexpr auto SubtitlePriority = 0xb8; // float
		constexpr auto Volume = 0xbc; // float
		constexpr auto Pitch = 0xc0; // float
		constexpr auto NumChannels = 0xc4; // int32_t
		constexpr auto SampleRate = 0xc8; // int32_t
		constexpr auto RawPCMDataSize = 0xcc; // int32_t
		constexpr auto Subtitles = 0xd0; // TArray<FSubtitleCue>
		constexpr auto LocalizedSubtitles = 0xe0; // TArray<FLocalizedSubtitle>
		constexpr auto Curves = 0xf0; // UCurveTable*
		constexpr auto InternalCurves = 0xf8; // UCurveTable*
	}

	namespace n_UAttributeEntry { // : URootWidget
		constexpr auto KeyNavOnSelectedEvent = 0x240; // FScriptMulticastDelegate
		constexpr auto KeyNavLeft = 0x250; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavRight = 0x258; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavAbove = 0x260; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavBelow = 0x268; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavTab = 0x270; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildLeft = 0x278; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildRight = 0x280; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildAbove = 0x288; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildBelow = 0x290; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildTab = 0x298; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildren = 0x2a0; // TWeakObjectPtr<URootWidget>
		constexpr auto TooltipWidgetClass = 0x2a8; // UTooltipWidget*
		constexpr auto KeyNavIndicatorClass = 0x2b0; // UKeyNavIndicator*
		constexpr auto PositiveFeedbackColor = 0x2b8; // FLinearColor
		constexpr auto NegativeFeedbackColor = 0x2c8; // FLinearColor
		constexpr auto NeutralFeedbackColor = 0x2d8; // FLinearColor
		constexpr auto KeyNavFocusOnClick = 0x2e8; // bool
		constexpr auto KeyNavAutoSetBack = 0x2e9; // bool
		constexpr auto m_Window = 0x2f0; // UWindowRoot*
		constexpr auto m_Parent = 0x2f8; // TWeakObjectPtr<URootWidget>
		constexpr auto m_KeyNavIndicator = 0x300; // UKeyNavIndicator*
	}

	namespace n_UParticleModuleRotation_Seeded { // : UParticleModuleRotation
		constexpr auto RandomSeedInfo = 0x68; // FParticleRandomSeedInfo
	}

	namespace n_UBTTask_MoveDirectlyToward { // : UBTTask_MoveTo
		constexpr auto bDisablePathUpdateOnGoalLocationChange = 0xb0; // char : 1
		constexpr auto bProjectVectorGoalToNavigation = 0xb0; // char : 1
		constexpr auto bUpdatedDeprecatedProperties = 0xb0; // char : 1
	}

	namespace n_USimpleConstructionScript { // : UObject
		constexpr auto RootNodes = 0x28; // TArray<USCS_Node*>
		constexpr auto AllNodes = 0x38; // TArray<USCS_Node*>
		constexpr auto DefaultSceneRootNode = 0x48; // USCS_Node*
		constexpr auto RootNode = 0x50; // USCS_Node*
		constexpr auto ActorComponentNodes = 0x58; // TArray<USCS_Node*>
	}

	namespace n_UW_MainMenu_MainMenu_C { // : UMainMenuBase
		constexpr auto UberGraphFrame = 0x570; // FPointerToUberGraphFrame
		constexpr auto B_ContinueMapSelectCancel = 0x578; // UW_ButtonNormal_C*
		constexpr auto B_ContinueMapSelectConfirm = 0x580; // UW_ButtonNormal_C*
		constexpr auto B_Credits = 0x588; // UW_MainMenuButton_C*
		constexpr auto B_Exit = 0x590; // UW_MainMenuButton_C*
		constexpr auto B_FriendList = 0x598; // UW_MainMenuButton_C*
		constexpr auto B_GetFullGame = 0x5a0; // UW_MainMenuButton_C*
		constexpr auto B_Help = 0x5a8; // UW_MainMenuButton_C*
		constexpr auto B_HostLocal = 0x5b0; // UW_MainMenuButton_C*
		constexpr auto B_Mods = 0x5b8; // UW_MainMenuButton_C*
		constexpr auto B_Options = 0x5c0; // UW_MainMenuButton_C*
		constexpr auto B_PCHelp = 0x5c8; // UW_MainMenuButton_C*
		constexpr auto B_PlayOnline = 0x5d0; // UW_MainMenuButton_C*
		constexpr auto B_ServerRental = 0x5d8; // UW_MainMenuButton_C*
		constexpr auto B_StartTrial = 0x5e0; // UW_MainMenuButton_C*
		constexpr auto B_Sub_Continue = 0x5e8; // UW_MainMenuButton_C*
		constexpr auto B_Sub_NewGame = 0x5f0; // UW_MainMenuButton_C*
		constexpr auto CBS_ContinueMapSelect = 0x5f8; // UW_FCComboBoxString_C*
		constexpr auto ContinueMapSelectDialog = 0x600; // UBorder*
		constexpr auto DWInfo = 0x608; // UTextBlock*
		constexpr auto HB_PlayerInfoContainer = 0x610; // UHorizontalBox*
		constexpr auto Image_1 = 0x618; // UImage*
		constexpr auto KeyNavAnchor = 0x620; // UW_TooltipOverlay_C*
		constexpr auto PatchNotesView = 0x628; // UW_PatchNotesView_C*
		constexpr auto SiglePlayerMenu = 0x630; // UVerticalBox*
		constexpr auto SiptahBGContainer = 0x638; // UCanvasPanel*
		constexpr auto T_OfflineMode = 0x640; // UTextBlock*
		constexpr auto T_PlayerNickname = 0x648; // UW_FCEditableTextBlock_C*
		constexpr auto Temp_OldBGContainer = 0x650; // UCanvasPanel*
		constexpr auto UpsellButton = 0x658; // UW_UpsellButton_C*
		constexpr auto VideoPlayer = 0x660; // UImage*
		constexpr auto DefaultMap = 0x668; // FName
		constexpr auto Settings = 0x670; // UW_Settings_C*
		constexpr auto userName = 0x678; // FText
		constexpr auto CanContinue = 0x690; // bool
		constexpr auto ViewingCredits = 0x691; // bool
		constexpr auto MediaPlayer = 0x698; // UMediaPlayer*
		constexpr auto UnlocalizedMapNames = 0x6a0; // TArray<FString>
		constexpr auto ChosenStartMap = 0x6b0; // FString
	}

	namespace n_AConanPlayerState { // : APlayerState
		constexpr auto MasterAccountId = 0x468; // FString
	}

	namespace n_UMaterialExpressionDepthOfFieldFunction { // : UMaterialExpression
		constexpr auto FunctionValue = 0x60; // EDepthOfFieldFunctionValue
		constexpr auto Depth = 0x68; // FExpressionInput
	}

	namespace n_UInterpFilter { // : UObject
		constexpr auto Caption = 0x28; // FString
	}

	namespace n_UServerStartupReport { // : UServerReport
		constexpr auto MacAddress = 0x50; // FString
		constexpr auto RevisionNumber = 0x60; // int32_t
		constexpr auto SnapshotID = 0x64; // int32_t
		constexpr auto QPort = 0x68; // int32_t
		constexpr auto PlayerSlotCount = 0x6c; // int32_t
		constexpr auto serverRegion = 0x70; // int32_t
		constexpr auto serverType = 0x74; // int32_t
		constexpr auto StartupTime = 0x78; // int32_t
		constexpr auto ServerName = 0x80; // FString
		constexpr auto ServerMapName = 0x90; // FString
		constexpr auto Platform = 0xa0; // FString
		constexpr auto IsOfficial = 0xb0; // int32_t
	}

	namespace n_ABasePlayerState_C { // : AConanPlayerState
		constexpr auto UberGraphFrame = 0x560; // FPointerToUberGraphFrame
		constexpr auto DefaultSceneRoot = 0x568; // USceneComponent*
		constexpr auto CharacterCreationLoaded = 0x570; // FScriptMulticastDelegate
		constexpr auto MainMenu = 0x580; // UW_MainMenu_MainMenu_C*
		constexpr auto ServerList = 0x588; // UW_ServerList_C*
		constexpr auto PlayerIndex = 0x590; // int32_t
		constexpr auto ServerSettingDurabilityModifier = 0x594; // float
		constexpr auto PreparingWorld = 0x598; // FText
		constexpr auto CharacterCreationActor = 0x5b0; // AActor*
	}

	namespace n_UMovieSceneSubSection { // : UMovieSceneSection
		constexpr auto Parameters = 0xc8; // FMovieSceneSectionParameters
		constexpr auto StartOffset = 0xd8; // float
		constexpr auto TimeScale = 0xdc; // float
		constexpr auto PrerollTime = 0xe0; // float
		constexpr auto SubSequence = 0xe8; // UMovieSceneSequence*
		constexpr auto ActorToRecord = 0xf0; // AActor*
		constexpr auto TargetSequenceName = 0x110; // FString
		constexpr auto TargetPathToRecordTo = 0x120; // FDirectoryPath
	}

	namespace n_UFCButtonSubMenu_C { // : UUserWidget
		constexpr auto ColorAndOpacity = 0x120; // FLinearColor
		constexpr auto ColorAndOpacityDelegate = 0x130; // DelegateProperty
		constexpr auto ForegroundColor = 0x140; // FSlateColor
		constexpr auto ForegroundColorDelegate = 0x168; // DelegateProperty
		constexpr auto Padding = 0x178; // FMargin
		constexpr auto bSupportsKeyboardFocus = 0x188; // bool
		constexpr auto bIsFocusable = 0x189; // bool
		constexpr auto ActiveSequencePlayers = 0x190; // TArray<UUMGSequencePlayer*>
		constexpr auto StoppedSequencePlayers = 0x1a0; // TArray<UUMGSequencePlayer*>
		constexpr auto bStopAction = 0x1b0; // bool
		constexpr auto Priority = 0x1b4; // int32_t
		constexpr auto NamedSlotBindings = 0x1b8; // TArray<FNamedSlotBinding>
		constexpr auto SafeZonePadding = 0x1c8; // FMargin
		constexpr auto WidgetTree = 0x1d8; // UWidgetTree*
		constexpr auto bCanEverTick = 0x1e0; // char : 1
		constexpr auto bCanEverPaint = 0x1e0; // char : 1
		constexpr auto bCookedWidgetTree = 0x1e0; // char : 1
		constexpr auto InputComponent = 0x1e8; // UInputComponent*
	}

	namespace n_UNiagaraScript { // : UObject
		constexpr auto ByteCode = 0x28; // TArray<char>
		constexpr auto ConstantData = 0x38; // FNiagaraScriptConstantData
		constexpr auto Attributes = 0x98; // TArray<FNiagaraVariableInfo>
		constexpr auto EventReceivers = 0xa8; // TArray<FNiagaraDataSetProperties>
		constexpr auto EventGenerators = 0xb8; // TArray<FNiagaraDataSetProperties>
		constexpr auto Usage = 0xc8; // FNiagaraScriptUsageInfo
	}

	namespace n_UOnlineSessionClient { // : UOnlineSession
		constexpr auto bIsFromInvite = 0x2c0; // bool
		constexpr auto bHandlingDisconnect = 0x2c1; // bool
	}

	namespace n_UOnlinePIESettings { // : UDeveloperSettings
		constexpr auto bOnlinePIEEnabled = 0x38; // bool
		constexpr auto Logins = 0x40; // TArray<FPIELoginSettingsInternal>
	}

	namespace n_USceneComponent { // : UActorComponent
		constexpr auto AttachParent = 0xf8; // USceneComponent*
		constexpr auto AttachChildren = 0x100; // TArray<USceneComponent*>
		constexpr auto ClientAttachedChildren = 0x110; // TSet<USceneComponent*>
		constexpr auto AttachSocketName = 0x160; // FName
		constexpr auto bWorldToComponentUpdated = 0x168; // char : 1
		constexpr auto bAbsoluteLocation = 0x168; // char : 1
		constexpr auto bAbsoluteRotation = 0x168; // char : 1
		constexpr auto bAbsoluteScale = 0x168; // char : 1
		constexpr auto bVisible = 0x168; // char : 1
		constexpr auto bHiddenInGame = 0x168; // char : 1
		constexpr auto bShouldUpdatePhysicsVolume = 0x168; // char : 1
		constexpr auto bBoundsChangeTriggersStreamingDataRebuild = 0x168; // char : 1
		constexpr auto bUseAttachParentBound = 0x168; // char : 1
		constexpr auto bShouldDisregardChildComponentsForNavigationUpdates = 0x168; // char : 1
		constexpr auto bShouldDisregardAttachedActorsForNavigationUpdates = 0x168; // char : 1
		constexpr auto Mobility = 0x16d; // EComponentMobility
		constexpr auto DetailMode = 0x16e; // EDetailMode
		constexpr auto PhysicsVolume = 0x170; // TWeakObjectPtr<APhysicsVolume>
		constexpr auto RelativeLocation = 0x1f0; // FVector
		constexpr auto RelativeRotation = 0x1fc; // FRotator
		constexpr auto RelativeScale3D = 0x230; // FVector
		constexpr auto ComponentVelocity = 0x258; // FVector
		constexpr auto PhysicsVolumeChangedDelegate = 0x268; // FScriptMulticastDelegate
	}

	namespace n_ATriggerBox { // : ATriggerBase
		constexpr auto CollisionComponent = 0x3d0; // UShapeComponent*
		constexpr auto SpriteComponent = 0x3d8; // UBillboardComponent*
	}

	namespace n_UMaterialExpressionObjectRadius { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto Desc = 0x38; // FString
		constexpr auto BorderColor = 0x48; // FColor
		constexpr auto bRealtimePreview = 0x4c; // char : 1
		constexpr auto bNeedToUpdatePreview = 0x4c; // char : 1
		constexpr auto bIsParameterExpression = 0x4c; // char : 1
		constexpr auto bCommentBubbleVisible = 0x4c; // char : 1
		constexpr auto bShowOutputNameOnPin = 0x4c; // char : 1
		constexpr auto bHidePreviewWindow = 0x4c; // char : 1
		constexpr auto bCollapsed = 0x4c; // char : 1
		constexpr auto bShaderInputData = 0x4c; // char : 1
		constexpr auto bShowInputs = 0x4c; // char : 1
		constexpr auto bShowOutputs = 0x4c; // char : 1
		constexpr auto Outputs = 0x50; // TArray<FExpressionOutput>
	}

	namespace n_URatingResultViewBase { // : URootWidget
		constexpr auto KeyNavOnSelectedEvent = 0x240; // FScriptMulticastDelegate
		constexpr auto KeyNavLeft = 0x250; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavRight = 0x258; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavAbove = 0x260; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavBelow = 0x268; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavTab = 0x270; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildLeft = 0x278; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildRight = 0x280; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildAbove = 0x288; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildBelow = 0x290; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildTab = 0x298; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildren = 0x2a0; // TWeakObjectPtr<URootWidget>
		constexpr auto TooltipWidgetClass = 0x2a8; // UTooltipWidget*
		constexpr auto KeyNavIndicatorClass = 0x2b0; // UKeyNavIndicator*
		constexpr auto PositiveFeedbackColor = 0x2b8; // FLinearColor
		constexpr auto NegativeFeedbackColor = 0x2c8; // FLinearColor
		constexpr auto NeutralFeedbackColor = 0x2d8; // FLinearColor
		constexpr auto KeyNavFocusOnClick = 0x2e8; // bool
		constexpr auto KeyNavAutoSetBack = 0x2e9; // bool
		constexpr auto m_Window = 0x2f0; // UWindowRoot*
		constexpr auto m_Parent = 0x2f8; // TWeakObjectPtr<URootWidget>
		constexpr auto m_KeyNavIndicator = 0x300; // UKeyNavIndicator*
	}

	namespace n_UBlendProfile { // : UObject
		constexpr auto OwningSkeleton = 0x30; // USkeleton*
		constexpr auto ProfileEntries = 0x38; // TArray<FBlendProfileBoneEntry>
	}

	namespace n_URichTextBlock { // : UTextLayoutWidget
		constexpr auto Text = 0x148; // FText
		constexpr auto TextDelegate = 0x160; // DelegateProperty
		constexpr auto Font = 0x170; // FSlateFontInfo
		constexpr auto Color = 0x1d8; // FLinearColor
		constexpr auto Decorators = 0x1e8; // TArray<URichTextBlockDecorator*>
	}

	namespace n_USoundNodeModulatorContinuous { // : USoundNode
		constexpr auto PitchModulationParams = 0x38; // FModulatorContinuousParams
		constexpr auto VolumeModulationParams = 0x58; // FModulatorContinuousParams
	}

	namespace n_UW_Settings_Server_C { // : USettingsServerBase
		constexpr auto UberGraphFrame = 0xab0; // FPointerToUberGraphFrame
		constexpr auto AnimalPenCraftingTimeMultiplier = 0xab8; // UW_EditableLabeledSlider_C*
		constexpr auto B_Abandonment = 0xac0; // UW_TabButton_C*
		constexpr auto B_Chat = 0xac8; // UW_TabButton_C*
		constexpr auto B_ClearAdminPassword = 0xad0; // UW_ButtonCustom_C*
		constexpr auto B_ClearServerpassword = 0xad8; // UW_ButtonCustom_C*
		constexpr auto B_Combat = 0xae0; // UW_TabButton_C*
		constexpr auto B_Crafting = 0xae8; // UW_TabButton_C*
		constexpr auto B_DayAndNight = 0xaf0; // UW_TabButton_C*
		constexpr auto B_General = 0xaf8; // UW_TabButton_C*
		constexpr auto B_Harvesting = 0xb00; // UW_TabButton_C*
		constexpr auto B_MakeMeAdmin = 0xb08; // UW_ButtonCustom_C*
		constexpr auto B_PetAndHunger = 0xb10; // UW_TabButton_C*
		constexpr auto B_Progression = 0xb18; // UW_TabButton_C*
		constexpr auto B_Purge = 0xb20; // UW_TabButton_C*
		constexpr auto B_RegionalAccessControl = 0xb28; // UW_TabButton_C*
		constexpr auto B_Siptah = 0xb30; // UW_TabButton_C*
		constexpr auto B_Survival = 0xb38; // UW_TabButton_C*
		constexpr auto CategorySwitcher = 0xb40; // UWidgetSwitcher*
		constexpr auto CB_AllowBuilding = 0xb48; // UW_ButtonNormal_C*
		constexpr auto CB_AllowFamilySharedAccount = 0xb50; // UW_ButtonNormal_C*
		constexpr auto CB_AvatarsDisabled = 0xb58; // UW_ButtonNormal_C*
		constexpr auto CB_CanDamagePlayerStructures = 0xb60; // UW_ButtonNormal_C*
		constexpr auto CB_ChatHasGlobal = 0xb68; // UW_ButtonNormal_C*
		constexpr auto CB_ContainersIgnoreOwnership = 0xb70; // UW_ButtonNormal_C*
		constexpr auto CB_DisableBuildingAbandonment = 0xb78; // UW_ButtonNormal_C*
		constexpr auto CB_DisableBuildingDuringTimeRestrictedPVP = 0xb80; // UW_ButtonNormal_C*
		constexpr auto CB_DisableLandclaimNotifications = 0xb88; // UW_ButtonNormal_C*
		constexpr auto CB_DisableThrallDecay = 0xb90; // UW_ButtonNormal_C*
		constexpr auto CB_DropEquipmentOnDeath = 0xb98; // UW_ButtonNormal_C*
		constexpr auto CB_DynamicBuildingDamage = 0xba0; // UW_ButtonNormal_C*
		constexpr auto CB_ElderThingsEnabled = 0xba8; // UW_ButtonNormal_C*
		constexpr auto CB_EnableAutoFacingOnAttack = 0xbb0; // UW_ButtonNormal_C*
		constexpr auto CB_EnableCatchUpTime = 0xbb8; // UW_ButtonNormal_C*
		constexpr auto CB_EnableClanMarkers = 0xbc0; // UW_ButtonNormal_C*
		constexpr auto CB_EnablePurge = 0xbc8; // UW_ButtonNormal_C*
		constexpr auto CB_EnableSandStorm = 0xbd0; // UW_ButtonNormal_C*
		constexpr auto CB_EnableStorm = 0xbd8; // UW_ButtonNormal_C*
		constexpr auto CB_EnableTargetLock = 0xbe0; // UW_ButtonNormal_C*
		constexpr auto CB_EnableWhitelist = 0xbe8; // UW_ButtonNormal_C*
		constexpr auto CB_EverybodyCanLootCorpse = 0xbf0; // UW_ButtonNormal_C*
		constexpr auto CB_IsBattlEyeEnabled = 0xbf8; // UW_ButtonNormal_C*
		constexpr auto CB_IsLoadErrorsFatal = 0xc00; // UW_ButtonNormal_C*
		constexpr auto CB_LogoutCharactersRemainInTheWorld = 0xc08; // UW_ButtonNormal_C*
		constexpr auto CB_NoOwnership = 0xc10; // UW_ButtonNormal_C*
		constexpr auto CB_PurgeRestrictToTime = 0xc18; // UW_ButtonNormal_C*
		constexpr auto CB_PVPBuildingDamageFridayEnabled = 0xc20; // UW_ButtonNormal_C*
		constexpr auto CB_PVPBuildingDamageMondayEnabled = 0xc28; // UW_ButtonNormal_C*
		constexpr auto CB_PVPBuildingDamageSaturdayEnabled = 0xc30; // UW_ButtonNormal_C*
		constexpr auto CB_PVPBuildingDamageSundayEnabled = 0xc38; // UW_ButtonNormal_C*
		constexpr auto CB_PVPBuildingDamageThursdayEnabled = 0xc40; // UW_ButtonNormal_C*
		constexpr auto CB_PVPBuildingDamageTuesdayEnabled = 0xc48; // UW_ButtonNormal_C*
		constexpr auto CB_PVPBuildingDamageWednesdayEnabled = 0xc50; // UW_ButtonNormal_C*
		constexpr auto CB_PVPEnabled = 0xc58; // UW_ButtonNormal_C*
		constexpr auto CB_PVPFridayEnabled = 0xc60; // UW_ButtonNormal_C*
		constexpr auto CB_PVPMondayEnabled = 0xc68; // UW_ButtonNormal_C*
		constexpr auto CB_PVPRestrictToTime = 0xc70; // UW_ButtonNormal_C*
		constexpr auto CB_PVPSaturdayEnabled = 0xc78; // UW_ButtonNormal_C*
		constexpr auto CB_PVPSundayEnabled = 0xc80; // UW_ButtonNormal_C*
		constexpr auto CB_PVPThursdayEnabled = 0xc88; // UW_ButtonNormal_C*
		constexpr auto CB_PVPTuesdayEnabled = 0xc90; // UW_ButtonNormal_C*
		constexpr auto CB_PVPWednesdayEnabled = 0xc98; // UW_ButtonNormal_C*
		constexpr auto CB_RegionAllowAfrica = 0xca0; // UW_ButtonNormal_C*
		constexpr auto CB_RegionAllowAsia = 0xca8; // UW_ButtonNormal_C*
		constexpr auto CB_RegionAllowCentralEurope = 0xcb0; // UW_ButtonNormal_C*
		constexpr auto CB_RegionAllowEasternEurope = 0xcb8; // UW_ButtonNormal_C*
		constexpr auto CB_RegionAllowNorthAmerica = 0xcc0; // UW_ButtonNormal_C*
		constexpr auto CB_RegionAllowOceania = 0xcc8; // UW_ButtonNormal_C*
		constexpr auto CB_RegionAllowSouthAmerica = 0xcd0; // UW_ButtonNormal_C*
		constexpr auto CB_RegionAllowWesternEurope = 0xcd8; // UW_ButtonNormal_C*
		constexpr auto CB_SiegeElderThingMapMarkers = 0xce0; // UW_ButtonNormal_C*
		constexpr auto CB_SiegeElderThingsEnabled = 0xce8; // UW_ButtonNormal_C*
		constexpr auto CB_StormBuildingAllowed = 0xcf0; // UW_ButtonNormal_C*
		constexpr auto CB_StormBuildingDamageEnabled = 0xcf8; // UW_ButtonNormal_C*
		constexpr auto CB_StormMapBlocker = 0xd00; // UW_ButtonNormal_C*
		constexpr auto CB_TimeRestrictAvatarSummoning = 0xd08; // UW_ButtonNormal_C*
		constexpr auto CB_TimeRestrictPVPBuildingDamage = 0xd10; // UW_ButtonNormal_C*
		constexpr auto CBS_Community = 0xd18; // UW_FCComboBoxString_C*
		constexpr auto CBS_EventLogCauserPrivacy = 0xd20; // UW_FCComboBoxString_C*
		constexpr auto CBS_MapName = 0xd28; // UW_FCComboBoxString_C*
		constexpr auto CBS_MaxNudity = 0xd30; // UW_FCComboBoxString_C*
		constexpr auto CBS_ServerVoiceChat = 0xd38; // UW_FCComboBoxString_C*
		constexpr auto DifficultyPresets = 0xd40; // UGridPanel*
		constexpr auto ETXT_AdminPW = 0xd48; // UW_FCEditableTextBlock_C*
		constexpr auto ETXT_MOTD = 0xd50; // UW_FCMultiLineEditableTextBox_C*
		constexpr auto ETXT_RegionBlockList = 0xd58; // UW_FCEditableTextBlock_C*
		constexpr auto ETXT_ServerPW = 0xd60; // UW_FCEditableTextBlock_C*
		constexpr auto FeedBoxRangeMultiplier = 0xd68; // UW_EditableLabeledSlider_C*
		constexpr auto GRID_Abandonment = 0xd70; // UGridPanel*
		constexpr auto GRID_CHAT = 0xd78; // UGridPanel*
		constexpr auto Grid_Combat = 0xd80; // UGridPanel*
		constexpr auto GRID_Crafting = 0xd88; // UGridPanel*
		constexpr auto Grid_DAY_NIGHT_Cycle = 0xd90; // UGridPanel*
		constexpr auto Grid_GENERAL = 0xd98; // UGridPanel*
		constexpr auto Grid_HARVESTING = 0xda0; // UGridPanel*
		constexpr auto Grid_Progression = 0xda8; // UGridPanel*
		constexpr auto GRID_PurgeOptions = 0xdb0; // UGridPanel*
		constexpr auto Grid_PurgeTimeRestriction = 0xdb8; // UGridPanel*
		constexpr auto Grid_PVPbuildingDamage = 0xdc0; // UGridPanel*
		constexpr auto Grid_PVPtime-restrict = 0xdc8; // UGridPanel*
		constexpr auto Grid_REGIONAL_ACCESS_CONTROL = 0xdd0; // UGridPanel*
		constexpr auto Grid_RestrictAvatarSummoningTime = 0xdd8; // UGridPanel*
		constexpr auto Grid_SURVIVAL = 0xde0; // UGridPanel*
		constexpr auto GridPanel_4 = 0xde8; // UGridPanel*
		constexpr auto Image_1 = 0xdf0; // UImage*
		constexpr auto Image_2 = 0xdf8; // UImage*
		constexpr auto Image_10 = 0xe00; // UImage*
		constexpr auto Image_12 = 0xe08; // UImage*
		constexpr auto MapNameContainer = 0xe10; // UOverlay*
		constexpr auto MapNameLabel = 0xe18; // UOverlay*
		constexpr auto Overlay_24 = 0xe20; // UOverlay*
		constexpr auto Overlay_60 = 0xe28; // UOverlay*
		constexpr auto S_AltarModuleActiveTimeMultiplier = 0xe30; // UW_EditableLabeledSlider_C*
		constexpr auto S_AmbientElderThingRespawnRate = 0xe38; // UW_EditableLabeledSlider_C*
		constexpr auto S_AvatarLifeTime = 0xe40; // UW_EditableLabeledSlider_C*
		constexpr auto S_BuildingDamageMultiplier = 0xe48; // UW_EditableLabeledSlider_C*
		constexpr auto S_BuildingDecayTimeMultiplier = 0xe50; // UW_EditableLabeledSlider_C*
		constexpr auto S_ChatLocalRadius = 0xe58; // UW_EditableLabeledSlider_C*
		constexpr auto S_ChatMaxMessageLength = 0xe60; // UW_EditableLabeledSlider_C*
		constexpr auto S_ClanMaxSize = 0xe68; // UW_EditableLabeledSlider_C*
		constexpr auto S_ClanPurgeTrigger = 0xe70; // UW_EditableLabeledSlider_C*
		constexpr auto S_ClanScoreUpateFrequency = 0xe78; // UW_EditableLabeledSlider_C*
		constexpr auto S_ClientCatchUpTime = 0xe80; // UW_EditableLabeledSlider_C*
		constexpr auto S_CoopTetheringLimit = 0xe88; // UW_EditableLabeledSlider_C*
		constexpr auto S_CraftingCostMultiplier = 0xe90; // UW_EditableLabeledSlider_C*
		constexpr auto S_DawnDuskTimeSpeedScale = 0xe98; // UW_EditableLabeledSlider_C*
		constexpr auto S_DayCycleSpeedScale = 0xea0; // UW_EditableLabeledSlider_C*
		constexpr auto S_DayTimeSpeedScale = 0xea8; // UW_EditableLabeledSlider_C*
		constexpr auto S_DurabilityMultiplier = 0xeb0; // UW_EditableLabeledSlider_C*
		constexpr auto S_DynamicBuildingDamagePeriod = 0xeb8; // UW_EditableLabeledSlider_C*
		constexpr auto S_ElderThingsIdleLifespan = 0xec0; // UW_EditableLabeledSlider_C*
		constexpr auto S_ElderThingSiegeBuildingSizeMultiplier = 0xec8; // UW_EditableLabeledSlider_C*
		constexpr auto S_ElderThingSiegeDamageMultiplier = 0xed0; // UW_EditableLabeledSlider_C*
		constexpr auto S_ElderThingSpawnRate = 0xed8; // UW_EditableLabeledSlider_C*
		constexpr auto S_FriendlyFireDamageMultiplier = 0xee0; // UW_EditableLabeledSlider_C*
		constexpr auto S_FuelBurnTimeMultiplier = 0xee8; // UW_EditableLabeledSlider_C*
		constexpr auto S_HarvestAmountMultiplier = 0xef0; // UW_EditableLabeledSlider_C*
		constexpr auto S_InitialPurgeDelay = 0xef8; // UW_EditableLabeledSlider_C*
		constexpr auto S_ItemConvertionMultiplier = 0xf00; // UW_EditableLabeledSlider_C*
		constexpr auto S_ItemSpoilRateScale = 0xf08; // UW_EditableLabeledSlider_C*
		constexpr auto S_LandClaimRadiusMultiplier = 0xf10; // UW_EditableLabeledSlider_C*
		constexpr auto S_MaxAmbientElderThings = 0xf18; // UW_EditableLabeledSlider_C*
		constexpr auto S_MaxAmbushElderThings = 0xf20; // UW_EditableLabeledSlider_C*
		constexpr auto S_MaxSiegeElderThings = 0xf28; // UW_EditableLabeledSlider_C*
		constexpr auto S_MinimumBuildingSizeToBeSieged = 0xf30; // UW_EditableLabeledSlider_C*
		constexpr auto S_MinimumStormDamageBuildingPieces = 0xf38; // UW_EditableLabeledSlider_C*
		constexpr auto S_MinPurgeOnlinePlayers = 0xf40; // UW_EditableLabeledSlider_C*
		constexpr auto S_NightTimeSpeedScale = 0xf48; // UW_EditableLabeledSlider_C*
		constexpr auto S_NPCDamageMultiplier = 0xf50; // UW_EditableLabeledSlider_C*
		constexpr auto S_NPCDamageTakenMultiplier = 0xf58; // UW_EditableLabeledSlider_C*
		constexpr auto S_NPCRespawnMultiplier = 0xf60; // UW_EditableLabeledSlider_C*
		constexpr auto S_PlayerActiveHungerMultiplier = 0xf68; // UW_EditableLabeledSlider_C*
		constexpr auto S_PlayerActiveThirstMultiplier = 0xf70; // UW_EditableLabeledSlider_C*
		constexpr auto S_PlayerCorruptionGainMultiplier = 0xf78; // UW_EditableLabeledSlider_C*
		constexpr auto S_PlayerDamageMultiplier = 0xf80; // UW_EditableLabeledSlider_C*
		constexpr auto S_PlayerDamageTakenMultiplier = 0xf88; // UW_EditableLabeledSlider_C*
		constexpr auto S_PlayerIdleHungerMultiplier = 0xf90; // UW_EditableLabeledSlider_C*
		constexpr auto S_PlayerIdleThirstMultiplier = 0xf98; // UW_EditableLabeledSlider_C*
		constexpr auto S_PlayerXPCraftMultiplier = 0xfa0; // UW_EditableLabeledSlider_C*
		constexpr auto S_PlayerXPHarvestMultiplier = 0xfa8; // UW_EditableLabeledSlider_C*
		constexpr auto S_PlayerXPKillMultiplier = 0xfb0; // UW_EditableLabeledSlider_C*
		constexpr auto S_PlayerXPRateMultiplier = 0xfb8; // UW_EditableLabeledSlider_C*
		constexpr auto S_PlayerXPTimeMultiplier = 0xfc0; // UW_EditableLabeledSlider_C*
		constexpr auto S_PurgeDelay = 0xfc8; // UW_EditableLabeledSlider_C*
		constexpr auto S_PurgeDuration = 0xfd0; // UW_EditableLabeledSlider_C*
		constexpr auto S_PurgeLevel = 0xfd8; // UW_EditableLabeledSlider_C*
		constexpr auto S_PurgePreparationTime = 0xfe0; // UW_EditableLabeledSlider_C*
		constexpr auto S_ResourceRespawnSpeedMultiplier = 0xfe8; // UW_EditableLabeledSlider_C*
		constexpr auto S_SiegeElderThingRespawnRate = 0xff0; // UW_EditableLabeledSlider_C*
		constexpr auto S_StaminaCostMultiplier = 0xff8; // UW_EditableLabeledSlider_C*
		constexpr auto S_StormAccumulationTime = 0x1000; // UW_EditableLabeledSlider_C*
		constexpr auto S_StormBuildingDamageMultiplier = 0x1008; // UW_EditableLabeledSlider_C*
		constexpr auto S_StormBuildingDamageRateMultiplier = 0x1010; // UW_EditableLabeledSlider_C*
		constexpr auto S_StormCooldown = 0x1018; // UW_EditableLabeledSlider_C*
		constexpr auto S_StormDissipationTime = 0x1020; // UW_EditableLabeledSlider_C*
		constexpr auto S_StormDuration = 0x1028; // UW_EditableLabeledSlider_C*
		constexpr auto S_StormEnduranceDrainMultiplier = 0x1030; // UW_EditableLabeledSlider_C*
		constexpr auto S_StormMinimumOnlinePlayers = 0x1038; // UW_EditableLabeledSlider_C*
		constexpr auto S_SurgeDespawnTimer = 0x1040; // UW_EditableLabeledSlider_C*
		constexpr auto S_SurgeSacrificeRequirementMultiplier = 0x1048; // UW_EditableLabeledSlider_C*
		constexpr auto S_ThrallConversionMultiplier = 0x1050; // UW_EditableLabeledSlider_C*
		constexpr auto S_ThrallCorruptionRemovalMultiplier = 0x1058; // UW_EditableLabeledSlider_C*
		constexpr auto S_ThrallDamageToNPCsMultiplier = 0x1060; // UW_EditableLabeledSlider_C*
		constexpr auto S_ThrallDamageToPlayersMultiplier = 0x1068; // UW_EditableLabeledSlider_C*
		constexpr auto S_ThrallDecayTime = 0x1070; // UW_EditableLabeledSlider_C*
		constexpr auto S_UnconsciousTimeSeconds = 0x1078; // UW_EditableLabeledSlider_C*
		constexpr auto S_VaultRefreshDeviation = 0x1080; // UW_EditableLabeledSlider_C*
		constexpr auto S_VaultRefreshTime = 0x1088; // UW_EditableLabeledSlider_C*
		constexpr auto S_VocalVisibilityDurationInMinutes = 0x1090; // UW_EditableLabeledSlider_C*
		constexpr auto SB_MainScrollBox = 0x1098; // UScrollBox*
		constexpr auto SideMenu = 0x10a0; // UBorder*
		constexpr auto StormGridPanel = 0x10a8; // UGridPanel*
		constexpr auto TextBlock_4 = 0x10b0; // UTextBlock*
		constexpr auto TextBlock_37 = 0x10b8; // UTextBlock*
		constexpr auto TIME_AvatarSummoningRestrictionWeekdayEnd = 0x10c0; // UW_TimeInputBox_C*
		constexpr auto TIME_AvatarSummoningRestrictionWeekdayStart = 0x10c8; // UW_TimeInputBox_C*
		constexpr auto TIME_AvatarSummoningRestrictionWeekendEnd = 0x10d0; // UW_TimeInputBox_C*
		constexpr auto TIME_AvatarSummoningRestrictionWeekendStart = 0x10d8; // UW_TimeInputBox_C*
		constexpr auto TIME_PurgeRestrictionWeekdayEnd = 0x10e0; // UW_TimeInputBox_C*
		constexpr auto TIME_PurgeRestrictionWeekdayStart = 0x10e8; // UW_TimeInputBox_C*
		constexpr auto TIME_PurgeRestrictionWeekendEnd = 0x10f0; // UW_TimeInputBox_C*
		constexpr auto TIME_PurgeRestrictionWeekendStart = 0x10f8; // UW_TimeInputBox_C*
		constexpr auto TIME_PVPBuildingDamageRestrictionFridayEnd = 0x1100; // UW_TimeInputBox_C*
		constexpr auto TIME_PVPBuildingDamageRestrictionFridayStart = 0x1108; // UW_TimeInputBox_C*
		constexpr auto TIME_PVPBuildingDamageRestrictionMondayEnd = 0x1110; // UW_TimeInputBox_C*
		constexpr auto TIME_PVPBuildingDamageRestrictionMondayStart = 0x1118; // UW_TimeInputBox_C*
		constexpr auto TIME_PVPBuildingDamageRestrictionSaturdayEnd = 0x1120; // UW_TimeInputBox_C*
		constexpr auto TIME_PVPBuildingDamageRestrictionSaturdayStart = 0x1128; // UW_TimeInputBox_C*
		constexpr auto TIME_PVPBuildingDamageRestrictionSundayEnd = 0x1130; // UW_TimeInputBox_C*
		constexpr auto TIME_PVPBuildingDamageRestrictionSundayStart = 0x1138; // UW_TimeInputBox_C*
		constexpr auto TIME_PVPBuildingDamageRestrictionThursdayEnd = 0x1140; // UW_TimeInputBox_C*
		constexpr auto TIME_PVPBuildingDamageRestrictionThursdayStart = 0x1148; // UW_TimeInputBox_C*
		constexpr auto TIME_PVPBuildingDamageRestrictionTuesdayEnd = 0x1150; // UW_TimeInputBox_C*
		constexpr auto TIME_PVPBuildingDamageRestrictionTuesdayStart = 0x1158; // UW_TimeInputBox_C*
		constexpr auto TIME_PVPBuildingDamageRestrictionWednesdayEnd = 0x1160; // UW_TimeInputBox_C*
		constexpr auto TIME_PVPBuildingDamageRestrictionWednesdayStart = 0x1168; // UW_TimeInputBox_C*
		constexpr auto TIME_PVPRestrictionFridayEnd = 0x1170; // UW_TimeInputBox_C*
		constexpr auto TIME_PVPRestrictionFridayStart = 0x1178; // UW_TimeInputBox_C*
		constexpr auto TIME_PVPRestrictionMondayEnd = 0x1180; // UW_TimeInputBox_C*
		constexpr auto TIME_PVPRestrictionMondayStart = 0x1188; // UW_TimeInputBox_C*
		constexpr auto TIME_PVPRestrictionSaturdayEnd = 0x1190; // UW_TimeInputBox_C*
		constexpr auto TIME_PVPRestrictionSaturdayStart = 0x1198; // UW_TimeInputBox_C*
		constexpr auto TIME_PVPRestrictionSundayEnd = 0x11a0; // UW_TimeInputBox_C*
		constexpr auto TIME_PVPRestrictionSundayStart = 0x11a8; // UW_TimeInputBox_C*
		constexpr auto TIME_PVPRestrictionThursdayEnd = 0x11b0; // UW_TimeInputBox_C*
		constexpr auto TIME_PVPRestrictionThursdayStart = 0x11b8; // UW_TimeInputBox_C*
		constexpr auto TIME_PVPRestrictionTuesdayEnd = 0x11c0; // UW_TimeInputBox_C*
		constexpr auto TIME_PVPRestrictionTuesdayStart = 0x11c8; // UW_TimeInputBox_C*
		constexpr auto TIME_PVPRestrictionWednesdayEnd = 0x11d0; // UW_TimeInputBox_C*
		constexpr auto TIME_PVPRestrictionWednesdayStart = 0x11d8; // UW_TimeInputBox_C*
		constexpr auto TIME_StormWeekdayEnd = 0x11e0; // UW_TimeInputBox_C*
		constexpr auto TIME_StormWeekdayStart = 0x11e8; // UW_TimeInputBox_C*
		constexpr auto TIME_StormWeekendEnd = 0x11f0; // UW_TimeInputBox_C*
		constexpr auto TIME_StormWeekendStart = 0x11f8; // UW_TimeInputBox_C*
		constexpr auto TXT_AvatarLifeTime = 0x1200; // UTextBlock*
		constexpr auto TXT_CategoryAbandonment = 0x1208; // UTextBlock*
		constexpr auto TXT_CategoryChat = 0x1210; // UTextBlock*
		constexpr auto TXT_CategoryCombat = 0x1218; // UTextBlock*
		constexpr auto TXT_CategoryCrafting = 0x1220; // UTextBlock*
		constexpr auto TXT_CategoryDayNightCycle = 0x1228; // UTextBlock*
		constexpr auto TXT_CategoryGeneral = 0x1230; // UTextBlock*
		constexpr auto TXT_CategoryHarvesting = 0x1238; // UTextBlock*
		constexpr auto TXT_CategoryPresets = 0x1240; // UTextBlock*
		constexpr auto TXT_CategoryProgression = 0x1248; // UTextBlock*
		constexpr auto TXT_CategoryRegionAccessControl = 0x1250; // UTextBlock*
		constexpr auto TXT_CategorySurvival = 0x1258; // UTextBlock*
		constexpr auto TXT_CoopTetheringLimit = 0x1260; // UTextBlock*
		constexpr auto TXT_IsBattlEyeEnabled = 0x1268; // UTextBlock*
		constexpr auto TXT_MapName = 0x1270; // UTextBlock*
		constexpr auto TXT_MaxNudity = 0x1278; // UTextBlock*
		constexpr auto TXT_PurgeTitle = 0x1280; // UTextBlock*
		constexpr auto TXT_ServerLocalTime = 0x1288; // UTextBlock*
		constexpr auto W_ServerSettingsPresets = 0x1290; // UW_ServerSettingsPresets_C*
		constexpr auto W_TooltipOverlay = 0x1298; // UW_TooltipOverlay_C*
		constexpr auto W_TooltipOverlay_1 = 0x12a0; // UW_TooltipOverlay_C*
		constexpr auto W_TooltipOverlay_2 = 0x12a8; // UW_TooltipOverlay_C*
		constexpr auto W_TooltipOverlay_3 = 0x12b0; // UW_TooltipOverlay_C*
		constexpr auto W_TooltipOverlay_4 = 0x12b8; // UW_TooltipOverlay_C*
		constexpr auto W_TooltipOverlay_5 = 0x12c0; // UW_TooltipOverlay_C*
		constexpr auto W_TooltipOverlay_6 = 0x12c8; // UW_TooltipOverlay_C*
		constexpr auto W_TooltipOverlay_7 = 0x12d0; // UW_TooltipOverlay_C*
		constexpr auto W_TooltipOverlay_8 = 0x12d8; // UW_TooltipOverlay_C*
		constexpr auto W_TooltipOverlay_C_15 = 0x12e0; // UW_TooltipOverlay_C*
		constexpr auto W_TooltipOverlay_C_69 = 0x12e8; // UW_TooltipOverlay_C*
		constexpr auto W_TooltipOverlay_C_70 = 0x12f0; // UW_TooltipOverlay_C*
		constexpr auto W_TooltipOverlay_C_71 = 0x12f8; // UW_TooltipOverlay_C*
		constexpr auto W_TooltipOverlay_C_80 = 0x1300; // UW_TooltipOverlay_C*
		constexpr auto W_TooltipOverlay_C_81 = 0x1308; // UW_TooltipOverlay_C*
		constexpr auto W_TooltipOverlay_C_82 = 0x1310; // UW_TooltipOverlay_C*
		constexpr auto W_TooltipOverlay_C_83 = 0x1318; // UW_TooltipOverlay_C*
		constexpr auto W_TooltipOverlay_C_84 = 0x1320; // UW_TooltipOverlay_C*
		constexpr auto W_TooltipOverlay_C_85 = 0x1328; // UW_TooltipOverlay_C*
		constexpr auto W_TooltipOverlay_C_86 = 0x1330; // UW_TooltipOverlay_C*
		constexpr auto W_TooltipOverlay_C_87 = 0x1338; // UW_TooltipOverlay_C*
		constexpr auto W_TooltipOverlay_C_88 = 0x1340; // UW_TooltipOverlay_C*
		constexpr auto W_TooltipOverlay_C_89 = 0x1348; // UW_TooltipOverlay_C*
		constexpr auto W_TooltipOverlay_C_90 = 0x1350; // UW_TooltipOverlay_C*
		constexpr auto W_TooltipOverlay_C_92 = 0x1358; // UW_TooltipOverlay_C*
		constexpr auto W_TooltipOverlay_C_94 = 0x1360; // UW_TooltipOverlay_C*
		constexpr auto W_TooltipOverlay_C_95 = 0x1368; // UW_TooltipOverlay_C*
		constexpr auto W_TooltipOverlay_C_96 = 0x1370; // UW_TooltipOverlay_C*
		constexpr auto W_TooltipOverlay_C_97 = 0x1378; // UW_TooltipOverlay_C*
		constexpr auto W_TooltipOverlay_C_98 = 0x1380; // UW_TooltipOverlay_C*
		constexpr auto W_TooltipOverlay_C_99 = 0x1388; // UW_TooltipOverlay_C*
		constexpr auto W_TooltipOverlay_C_100 = 0x1390; // UW_TooltipOverlay_C*
		constexpr auto W_TooltipOverlay_C_101 = 0x1398; // UW_TooltipOverlay_C*
		constexpr auto W_TooltipOverlay_C_102 = 0x13a0; // UW_TooltipOverlay_C*
		constexpr auto W_TooltipOverlay_C_103 = 0x13a8; // UW_TooltipOverlay_C*
		constexpr auto W_TooltipOverlay_C_104 = 0x13b0; // UW_TooltipOverlay_C*
		constexpr auto W_TooltipOverlay_C_105 = 0x13b8; // UW_TooltipOverlay_C*
		constexpr auto W_TooltipOverlay_C_106 = 0x13c0; // UW_TooltipOverlay_C*
		constexpr auto W_TooltipOverlay_C_107 = 0x13c8; // UW_TooltipOverlay_C*
		constexpr auto W_TooltipOverlay_C_108 = 0x13d0; // UW_TooltipOverlay_C*
		constexpr auto W_TooltipOverlay_C_109 = 0x13d8; // UW_TooltipOverlay_C*
		constexpr auto W_TooltipOverlay_C_110 = 0x13e0; // UW_TooltipOverlay_C*
		constexpr auto W_TooltipOverlay_C_111 = 0x13e8; // UW_TooltipOverlay_C*
		constexpr auto W_TooltipOverlay_C_113 = 0x13f0; // UW_TooltipOverlay_C*
		constexpr auto W_TooltipOverlay_C_114 = 0x13f8; // UW_TooltipOverlay_C*
		constexpr auto W_TooltipOverlay_C_115 = 0x1400; // UW_TooltipOverlay_C*
		constexpr auto CommunityOptions = 0x1408; // TArray<FString>
		constexpr auto RegionOpstions = 0x1418; // TArray<FString>
		constexpr auto nudityOptions = 0x1428; // TArray<FString>
		constexpr auto ServerDayName = 0x1438; // FString
		constexpr auto W_HostLocalParent = 0x1448; // TScriptInterface<BlueprintGeneratedClass>
		constexpr auto SelectedCategory = 0x1458; // UFCButton*
		constexpr auto VisibleWidgets = 0x1460; // TArray<UWidget*>
	}

	namespace n_UFCComboBoxString { // : URootWidget
		constexpr auto OnSelectionChanged = 0x318; // FScriptMulticastDelegate
		constexpr auto PressedSound = 0x328; // USoundBase*
		constexpr auto HoveredSound = 0x348; // USoundBase*
		constexpr auto m_ComboBox = 0x368; // UComboBoxString*
	}

	namespace n_UDialogue { // : UDataAsset
		constexpr auto DisplayIdleSplines = 0x28; // bool
		constexpr auto Name = 0x30; // FText
		constexpr auto Data = 0x48; // TArray<FDialogueNode>
		constexpr auto NextNodeId = 0x58; // int32_t
	}

	namespace n_ASpectatorPawn { // : ADefaultPawn
		constexpr auto BaseTurnRate = 0x430; // float
		constexpr auto BaseLookUpRate = 0x434; // float
		constexpr auto MovementComponent = 0x438; // UPawnMovementComponent*
		constexpr auto CollisionComponent = 0x440; // USphereComponent*
		constexpr auto MeshComponent = 0x448; // UStaticMeshComponent*
		constexpr auto bAddDefaultMovementBindings = 0x450; // char : 1
	}

	namespace n_USoundNodeWaveParam { // : USoundNode
		constexpr auto WaveParameterName = 0x38; // FName
	}

	namespace n_UPlayerListGame { // : UWindowRoot
		constexpr auto EntryViewClass = 0x398; // UPlayerListGameEntry*
	}

	namespace n_UMaterialExpressionParticleDirection { // : UMaterialExpression
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto Desc = 0x38; // FString
		constexpr auto BorderColor = 0x48; // FColor
		constexpr auto bRealtimePreview = 0x4c; // char : 1
		constexpr auto bNeedToUpdatePreview = 0x4c; // char : 1
		constexpr auto bIsParameterExpression = 0x4c; // char : 1
		constexpr auto bCommentBubbleVisible = 0x4c; // char : 1
		constexpr auto bShowOutputNameOnPin = 0x4c; // char : 1
		constexpr auto bHidePreviewWindow = 0x4c; // char : 1
		constexpr auto bCollapsed = 0x4c; // char : 1
		constexpr auto bShaderInputData = 0x4c; // char : 1
		constexpr auto bShowInputs = 0x4c; // char : 1
		constexpr auto bShowOutputs = 0x4c; // char : 1
		constexpr auto Outputs = 0x50; // TArray<FExpressionOutput>
	}

	namespace n_UAudioSettings { // : UDeveloperSettings
		constexpr auto DefaultSoundClassName = 0x38; // FStringAssetReference
		constexpr auto DefaultSoundConcurrencyName = 0x48; // FStringAssetReference
		constexpr auto DefaultBaseSoundMix = 0x58; // FStringAssetReference
		constexpr auto VoiPSoundClass = 0x68; // FStringAssetReference
		constexpr auto LowPassFilterResonance = 0x78; // float
		constexpr auto MaximumConcurrentStreams = 0x7c; // int32_t
		constexpr auto QualityLevels = 0x80; // TArray<FAudioQualitySettings>
		constexpr auto bAllowVirtualizedSounds = 0x90; // char : 1
		constexpr auto bDisableMasterEQ = 0x90; // char : 1
		constexpr auto bDisableMasterReverb = 0x90; // char : 1
		constexpr auto bAllowCenterChannel3DPanning = 0x90; // char : 1
		constexpr auto DialogueFilenameFormat = 0x98; // FString
	}

	namespace n_UBTTask_RunBehaviorDynamic { // : UBTTaskNode
		constexpr auto InjectionTag = 0x70; // FGameplayTag
		constexpr auto DefaultBehaviorAsset = 0x78; // UBehaviorTree*
		constexpr auto BehaviorAsset = 0x80; // UBehaviorTree*
	}

	namespace n_UCharacterListEntryBase { // : URootWidget
		constexpr auto OnSelected = 0x318; // FScriptMulticastDelegate
		constexpr auto OnShowOptions = 0x328; // FScriptMulticastDelegate
		constexpr auto m_HighlightedColor = 0x338; // FSlateColor
		constexpr auto m_BaseColor = 0x360; // FSlateColor
		constexpr auto m_Highlight = 0x388; // UImage*
	}

	namespace n_UUICharacterDisplay { // : URootWidget
		constexpr auto KeyNavOnSelectedEvent = 0x240; // FScriptMulticastDelegate
		constexpr auto KeyNavLeft = 0x250; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavRight = 0x258; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavAbove = 0x260; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavBelow = 0x268; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavTab = 0x270; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildLeft = 0x278; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildRight = 0x280; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildAbove = 0x288; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildBelow = 0x290; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildTab = 0x298; // TWeakObjectPtr<URootWidget>
		constexpr auto KeyNavChildren = 0x2a0; // TWeakObjectPtr<URootWidget>
		constexpr auto TooltipWidgetClass = 0x2a8; // UTooltipWidget*
		constexpr auto KeyNavIndicatorClass = 0x2b0; // UKeyNavIndicator*
		constexpr auto PositiveFeedbackColor = 0x2b8; // FLinearColor
		constexpr auto NegativeFeedbackColor = 0x2c8; // FLinearColor
		constexpr auto NeutralFeedbackColor = 0x2d8; // FLinearColor
		constexpr auto KeyNavFocusOnClick = 0x2e8; // bool
		constexpr auto KeyNavAutoSetBack = 0x2e9; // bool
		constexpr auto m_Window = 0x2f0; // UWindowRoot*
		constexpr auto m_Parent = 0x2f8; // TWeakObjectPtr<URootWidget>
		constexpr auto m_KeyNavIndicator = 0x300; // UKeyNavIndicator*
	}

	namespace n_UAnimSequence { // : UAnimSequenceBase
		constexpr auto NumFrames = 0xa0; // int32_t
		constexpr auto TrackToSkeletonMapTable = 0xa8; // TArray<FTrackToSkeletonMap>
		constexpr auto AdditiveAnimType = 0x148; // EAdditiveAnimationType
		constexpr auto RefPoseType = 0x149; // EAdditiveBasePoseType
		constexpr auto RefPoseSeq = 0x150; // UAnimSequence*
		constexpr auto RefFrameIndex = 0x158; // int32_t
		constexpr auto EncodingPkgVersion = 0x15c; // int32_t
		constexpr auto RetargetSource = 0x160; // FName
		constexpr auto Interpolation = 0x168; // EAnimInterpolationType
		constexpr auto bEnableRootMotion = 0x169; // bool
		constexpr auto RootMotionRootLock = 0x16a; // ERootMotionRootLock
		constexpr auto bForceRootLock = 0x16b; // bool
		constexpr auto bRootMotionSettingsCopiedFromMontage = 0x16c; // bool
		constexpr auto AuthoredSyncMarkers = 0x170; // TArray<FAnimSyncMarker>
	}

	namespace n_UMaterialInterface { // : UObject
		constexpr auto SubsurfaceProfile = 0x30; // USubsurfaceProfile*
		constexpr auto LightmassSettings = 0x40; // FLightmassMaterialInterfaceSettings
		constexpr auto TextureStreamingData = 0x58; // TArray<FMaterialTextureInfo>
	}

	namespace n_UCameraAnim { // : UObject
		constexpr auto CameraInterpGroup = 0x28; // UInterpGroup*
		constexpr auto AnimLength = 0x30; // float
		constexpr auto BoundingBox = 0x34; // FBox
		constexpr auto bRelativeToInitialTransform = 0x50; // char : 1
		constexpr auto bRelativeToInitialFOV = 0x50; // char : 1
		constexpr auto BaseFOV = 0x54; // float
		constexpr auto BasePostProcessSettings = 0x60; // FPostProcessSettings
		constexpr auto BasePostProcessBlendWeight = 0x530; // float
	}

	namespace n_UConanPathFollowingComponent { // : UPathFollowingComponent
		constexpr auto PathWidth = 0x3a8; // float
		constexpr auto BreakAngle = 0x3ac; // float
		constexpr auto AccelerationFactor = 0x3b0; // float
		constexpr auto AccelerationMinSpeed = 0x3b4; // float
		constexpr auto NavMeshSearchExtent = 0x3b8; // float
		constexpr auto AvoidanceMaxTimeHorizonSeconds = 0x3bc; // float
		constexpr auto AvoidanceMinTimeHorizonSeconds = 0x3c0; // float
		constexpr auto AvoidanceMinDistance = 0x3c4; // float
		constexpr auto AvoidanceSearchRadius = 0x3c8; // float
		constexpr auto InitialAvoidanceYawSearchRange = 0x3cc; // float
		constexpr auto AvoidanceMinSpeed = 0x3d0; // float
		constexpr auto SecondsUntilFullAvoidanceYawSearchRange = 0x3d4; // float
		constexpr auto AvoidPlayerCharacters = 0x3d8; // char : 1
		constexpr auto PredictedObstacles = 0x3e0; // TArray<FPredictedObstacle>
		constexpr auto YawAngleWeights = 0x3f0; // FPolarUtilityVector
		constexpr auto m_CandidateObstacles = 0x4b0; // TArray<AActor*>
	}

	namespace n_ALandscapeMeshProxyActor { // : AActor
		constexpr auto LandscapeMeshProxyComponent = 0x3d0; // ULandscapeMeshProxyComponent*
	}

	namespace n_UBTTask_PawnActionBase { // : UBTTaskNode
		constexpr auto Services = 0x58; // TArray<UBTService*>
		constexpr auto bIgnoreRestartSelf = 0x68; // char : 1
	}

	namespace n_UUserWidget { // : UWidget
		constexpr auto ColorAndOpacity = 0x120; // FLinearColor
		constexpr auto ColorAndOpacityDelegate = 0x130; // DelegateProperty
		constexpr auto ForegroundColor = 0x140; // FSlateColor
		constexpr auto ForegroundColorDelegate = 0x168; // DelegateProperty
		constexpr auto Padding = 0x178; // FMargin
		constexpr auto bSupportsKeyboardFocus = 0x188; // bool
		constexpr auto bIsFocusable = 0x189; // bool
		constexpr auto ActiveSequencePlayers = 0x190; // TArray<UUMGSequencePlayer*>
		constexpr auto StoppedSequencePlayers = 0x1a0; // TArray<UUMGSequencePlayer*>
		constexpr auto bStopAction = 0x1b0; // bool
		constexpr auto Priority = 0x1b4; // int32_t
		constexpr auto NamedSlotBindings = 0x1b8; // TArray<FNamedSlotBinding>
		constexpr auto SafeZonePadding = 0x1c8; // FMargin
		constexpr auto WidgetTree = 0x1d8; // UWidgetTree*
		constexpr auto bCanEverTick = 0x1e0; // char : 1
		constexpr auto bCanEverPaint = 0x1e0; // char : 1
		constexpr auto bCookedWidgetTree = 0x1e0; // char : 1
		constexpr auto InputComponent = 0x1e8; // UInputComponent*
	}

	namespace n_UCanvas { // : UObject
		constexpr auto OrgX = 0x28; // float
		constexpr auto OrgY = 0x2c; // float
		constexpr auto ClipX = 0x30; // float
		constexpr auto ClipY = 0x34; // float
		constexpr auto DrawColor = 0x38; // FColor
		constexpr auto bCenterX = 0x3c; // char : 1
		constexpr auto bCenterY = 0x3c; // char : 1
		constexpr auto bNoSmooth = 0x3c; // char : 1
		constexpr auto SizeX = 0x40; // int32_t
		constexpr auto SizeY = 0x44; // int32_t
		constexpr auto ColorModulate = 0x50; // FPlane
		constexpr auto DefaultTexture = 0x60; // UTexture2D*
		constexpr auto GradientTexture0 = 0x68; // UTexture2D*
		constexpr auto ReporterGraph = 0x70; // UReporterGraph*
	}

	namespace n_UMaterialExpressionDDX { // : UMaterialExpression
		constexpr auto Value = 0x60; // FExpressionInput
	}

	namespace n_UShowLoginUICallbackProxy { // : UBlueprintAsyncActionBase
		constexpr auto onSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto onFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_APostProcessVolume { // : AVolume
		constexpr auto Settings = 0x410; // FPostProcessSettings
		constexpr auto Priority = 0x8e0; // float
		constexpr auto BlendRadius = 0x8e4; // float
		constexpr auto BlendWeight = 0x8e8; // float
		constexpr auto bEnabled = 0x8ec; // char : 1
		constexpr auto bUnbound = 0x8ec; // char : 1
	}

	namespace n_UMaterialExpressionArctangent { // : UMaterialExpression
		constexpr auto Input = 0x60; // FExpressionInput
	}

	namespace n_UPlayer { // : UObject
		constexpr auto PlayerController = 0x30; // APlayerController*
		constexpr auto CurrentNetSpeed = 0x38; // int32_t
		constexpr auto ConfiguredInternetSpeed = 0x3c; // int32_t
		constexpr auto ConfiguredLanSpeed = 0x40; // int32_t
	}

	namespace n_ASceneCaptureCube { // : ASceneCapture
		constexpr auto CaptureComponentCube = 0x3d8; // USceneCaptureComponentCube*
		constexpr auto DrawFrustum = 0x3e0; // UDrawFrustumComponent*
	}

	namespace n_UNetDriver { // : UObject
		constexpr auto NetConnectionClassName = 0x30; // FString
		constexpr auto MaxDownloadSize = 0x40; // int32_t
		constexpr auto bClampListenServerTickRate = 0x44; // char : 1
		constexpr auto NetServerMaxTickRate = 0x48; // int32_t
		constexpr auto MaxInternetClientRate = 0x4c; // int32_t
		constexpr auto MaxClientRate = 0x50; // int32_t
		constexpr auto ServerTravelPause = 0x54; // float
		constexpr auto SpawnPrioritySeconds = 0x58; // float
		constexpr auto RelevantTimeout = 0x5c; // float
		constexpr auto ExtendedRelevantTimeout = 0x60; // float
		constexpr auto KeepAliveTime = 0x64; // float
		constexpr auto InitialConnectTimeout = 0x68; // float
		constexpr auto ConnectionTimeout = 0x6c; // float
		constexpr auto bNoTimeouts = 0x70; // bool
		constexpr auto ServerConnection = 0x78; // UNetConnection*
		constexpr auto ClientConnections = 0x80; // TArray<UNetConnection*>
		constexpr auto World = 0xa8; // UWorld*
		constexpr auto NetConnectionClass = 0xd0; // UObject*
		constexpr auto RoleProperty = 0xd8; // UProperty*
		constexpr auto RemoteRoleProperty = 0xe0; // UProperty*
		constexpr auto NetDriverName = 0xe8; // FName
		constexpr auto Time = 0xf8; // float
	}

	namespace n_UMovieSceneActorReferenceSection { // : UMovieSceneSection
		constexpr auto ActorGuidIndexCurve = 0xd0; // FIntegralCurve
		constexpr auto ActorGuidStrings = 0x150; // TArray<FString>
	}

	namespace n_UMaterialExpressionFloor { // : UMaterialExpression
		constexpr auto Input = 0x60; // FExpressionInput
	}

	namespace n_ALevelSequenceActor { // : AActor
		constexpr auto bAutoPlay = 0x3d8; // bool
		constexpr auto PlaybackSettings = 0x3e0; // FMovieSceneSequencePlaybackSettings
		constexpr auto SequencePlayer = 0x408; // ULevelSequencePlayer*
		constexpr auto LevelSequence = 0x410; // FStringAssetReference
		constexpr auto BurnInOptions = 0x420; // ULevelSequenceBurnInOptions*
		constexpr auto BindingOverrides = 0x428; // UMovieSceneBindingOverrides*
		constexpr auto SignalSequencePlayerReady = 0x430; // FScriptMulticastDelegate
		constexpr auto BurnInInstance = 0x440; // ULevelSequenceBurnIn*
	}

	namespace n_UBTDecorator_IsBBEntryOfClass { // : UBTDecorator_BlackboardBase
		constexpr auto TestClass = 0x90; // UObject*
	}

	namespace n_UHoudiniSplineComponent { // : USceneComponent
		constexpr auto AttachParent = 0xf8; // USceneComponent*
		constexpr auto AttachChildren = 0x100; // TArray<USceneComponent*>
		constexpr auto ClientAttachedChildren = 0x110; // TSet<USceneComponent*>
		constexpr auto AttachSocketName = 0x160; // FName
		constexpr auto bWorldToComponentUpdated = 0x168; // char : 1
		constexpr auto bAbsoluteLocation = 0x168; // char : 1
		constexpr auto bAbsoluteRotation = 0x168; // char : 1
		constexpr auto bAbsoluteScale = 0x168; // char : 1
		constexpr auto bVisible = 0x168; // char : 1
		constexpr auto bHiddenInGame = 0x168; // char : 1
		constexpr auto bShouldUpdatePhysicsVolume = 0x168; // char : 1
		constexpr auto bBoundsChangeTriggersStreamingDataRebuild = 0x168; // char : 1
		constexpr auto bUseAttachParentBound = 0x168; // char : 1
		constexpr auto bShouldDisregardChildComponentsForNavigationUpdates = 0x168; // char : 1
		constexpr auto bShouldDisregardAttachedActorsForNavigationUpdates = 0x168; // char : 1
		constexpr auto Mobility = 0x16d; // EComponentMobility
		constexpr auto DetailMode = 0x16e; // EDetailMode
		constexpr auto PhysicsVolume = 0x170; // TWeakObjectPtr<APhysicsVolume>
		constexpr auto RelativeLocation = 0x1f0; // FVector
		constexpr auto RelativeRotation = 0x1fc; // FRotator
		constexpr auto RelativeScale3D = 0x230; // FVector
		constexpr auto ComponentVelocity = 0x258; // FVector
		constexpr auto PhysicsVolumeChangedDelegate = 0x268; // FScriptMulticastDelegate
	}

	namespace n_UW_KeyBindings_Commands_C { // : UKeyBindingsCommandBase
		constexpr auto Category = 0x3d0; // UTextBlock*
		constexpr auto Five = 0x3d8; // UW_Keybindings_Command_C*
		constexpr auto Four = 0x3e0; // UW_Keybindings_Command_C*
		constexpr auto One = 0x3e8; // UW_Keybindings_Command_C*
		constexpr auto Three = 0x3f0; // UW_Keybindings_Command_C*
		constexpr auto Two = 0x3f8; // UW_Keybindings_Command_C*
	}

	namespace n_UParticleModuleBeamBase { // : UParticleModule
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x28; // char : 1
		constexpr auto LODDuplicate = 0x28; // char : 1
		constexpr auto bSupportsRandomSeed = 0x28; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x28; // char : 1
		constexpr auto LODValidity = 0x2c; // char
	}

	namespace n_UMaterialExpressionGraniteBakeBase { // : UMaterialExpressionGraniteTextureParameter
		constexpr auto Originals = 0x1b0; // FExpressionInput [0x4]
		constexpr auto SizeInput = 0x290; // FExpressionInput
		constexpr auto bUseBaked = 0x2c8; // char : 1
		constexpr auto bIsBakeDirty = 0x2c8; // char : 1
		constexpr auto ShaderGraphHash = 0x2d0; // uint64_t [0x4]
		constexpr auto UniformExpressionHash = 0x2f0; // uint64_t [0x4]
		constexpr auto BakedShaderGraphHash = 0x310; // uint64_t [0x4]
		constexpr auto BakedUniformExpressionHash = 0x330; // uint64_t [0x4]
		constexpr auto bAlwaysUseMaxSize = 0x350; // char : 1
		constexpr auto Size = 0x354; // FIntPoint
		constexpr auto Tiling = 0x35c; // EGraniteBakerTilingMethod
		constexpr auto LayerPreset = 0x360; // FGraniteBakerLayerLayout
		constexpr auto IndexList = 0x3d8; // int32_t [0x4]
		constexpr auto BakeCallStack = 0x3e8; // TArray<UMaterialExpressionMaterialFunctionCall*>
	}

	namespace n_UStaticNavigation { // : UObject
		constexpr auto m_SpawnerIndices = 0x28; // TArray<FSpawnerIndex>
		constexpr auto m_SampledSpawnPoints = 0x38; // TArray<FVector>
		constexpr auto m_SampledRoamingPaths = 0x48; // TArray<FRoamingPath>
	}

	namespace n_UChannel { // : UObject
		constexpr auto Connection = 0x28; // UNetConnection*
	}

	namespace n_UEdGraph { // : UObject
		constexpr auto Schema = 0x28; // UEdGraphSchema*
		constexpr auto Nodes = 0x30; // TArray<UEdGraphNode*>
		constexpr auto bEditable = 0x40; // char : 1
		constexpr auto bAllowDeletion = 0x40; // char : 1
		constexpr auto bAllowRenaming = 0x40; // char : 1
	}

	namespace n_UPhysicalAnimationComponent { // : UActorComponent
		constexpr auto StrengthMultiplyer = 0xf8; // float
		constexpr auto SkeletalMeshComponent = 0x100; // USkeletalMeshComponent*
	}

	namespace n_USettingsBase { // : UWindowRoot
		constexpr auto SettingsButtonSound = 0x398; // USoundBase*
		constexpr auto ApplySettingsSound = 0x3b8; // USoundBase*
		constexpr auto SettingsBackSound = 0x3d8; // USoundBase*
		constexpr auto RestoreDefaultsSound = 0x3f8; // USoundBase*
		constexpr auto m_AccessWarning = 0x470; // UMessageBoxWidget*
		constexpr auto m_WaitingForServer = 0x478; // UMessageBoxWidget*
		constexpr auto m_DialogInputComponent = 0x4b8; // UInputComponent*
		constexpr auto m_RestoreDefaultText = 0x4c0; // FText
		constexpr auto m_ClearKeyBinidngText = 0x4d8; // FText
		constexpr auto m_ScrollText = 0x4f0; // FText
		constexpr auto m_ApplyText = 0x508; // FText
	}

	namespace n_AQosBeaconHost { // : AOnlineBeaconHostObject
		constexpr auto BeaconTypeName = 0x3d0; // FString
		constexpr auto ClientBeaconActorClass = 0x3e0; // AOnlineBeaconClient*
		constexpr auto ClientActors = 0x3e8; // TArray<AOnlineBeaconClient*>
	}

	namespace n_UInterpTrackInstMove { // : UInterpTrackInst
		constexpr auto ResetLocation = 0x28; // FVector
		constexpr auto ResetRotation = 0x34; // FRotator
	}

	namespace n_UMaterialExpressionConstant4Vector { // : UMaterialExpression
		constexpr auto Constant = 0x60; // FLinearColor
	}

	namespace n_UMaterialExpressionDistance { // : UMaterialExpression
		constexpr auto A = 0x60; // FExpressionInput
		constexpr auto B = 0x98; // FExpressionInput
	}

	namespace n_UVectorField { // : UObject
		constexpr auto Bounds = 0x28; // FBox
		constexpr auto Intensity = 0x44; // float
	}

	namespace n_UMovieScene3DAttachSection { // : UMovieScene3DConstraintSection
		constexpr auto AttachSocketName = 0xd8; // FName
		constexpr auto AttachComponentName = 0xe0; // FName
		constexpr auto bConstrainTx = 0xe8; // char : 1
		constexpr auto bConstrainTy = 0xe8; // char : 1
		constexpr auto bConstrainTz = 0xe8; // char : 1
		constexpr auto bConstrainRx = 0xe8; // char : 1
		constexpr auto bConstrainRy = 0xe8; // char : 1
		constexpr auto bConstrainRz = 0xe8; // char : 1
	}

	namespace n_UW_KeyNavIndicator_C { // : UKeyNavIndicator
		constexpr auto Content = 0x320; // UNamedSlot*
	}

	namespace n_AGameMode { // : AGameModeBase
		constexpr auto MatchState = 0x490; // FName
		constexpr auto bDelayedStart = 0x498; // char : 1
		constexpr auto NumSpectators = 0x49c; // int32_t
		constexpr auto NumPlayers = 0x4a0; // int32_t
		constexpr auto NumBots = 0x4a4; // int32_t
		constexpr auto MinRespawnDelay = 0x4a8; // float
		constexpr auto NumTravellingPlayers = 0x4ac; // int32_t
		constexpr auto EngineMessageClass = 0x4b0; // ULocalMessage*
		constexpr auto InactivePlayerArray = 0x4b8; // TArray<APlayerState*>
		constexpr auto InactivePlayerStateLifeSpan = 0x4c8; // float
		constexpr auto bHandleDedicatedServerReplays = 0x4cc; // bool
	}

	namespace n_UMainRadialMenu { // : UWindowRoot
		constexpr auto ActionKeyName = 0x398; // FName
		constexpr auto m_Menu = 0x3a0; // URadialMenu*
	}

	namespace n_UDistributionFloatParticleParameter { // : UDistributionFloatParameterBase
		constexpr auto ParameterName = 0x40; // FName
		constexpr auto MinInput = 0x48; // float
		constexpr auto MaxInput = 0x4c; // float
		constexpr auto MinOutput = 0x50; // float
		constexpr auto MaxOutput = 0x54; // float
		constexpr auto ParamMode = 0x58; // DistributionParamMode
	}

	namespace n_APartyBeaconHost { // : AOnlineBeaconHostObject
		constexpr auto State = 0x3f8; // UPartyBeaconState*
		constexpr auto bLogoutOnSessionTimeout = 0x540; // bool
		constexpr auto SessionTimeoutSecs = 0x544; // float
		constexpr auto TravelSessionTimeoutSecs = 0x548; // float
	}

	namespace n_UBlockedPlayerGame { // : UWindowRoot
		constexpr auto FriendsWindowBase = 0x398; // UFriendsGame*
		constexpr auto EntryViewClass = 0x3a0; // UBlockedPlayerEntry*
		constexpr auto NumBlockedPlayers = 0x3a8; // int32_t
	}

	namespace n_UMaterialExpressionDistanceFieldGradient { // : UMaterialExpression
		constexpr auto Position = 0x60; // FExpressionInput
	}

	namespace n_UParticleModuleSpawnBase { // : UParticleModule
		constexpr auto bProcessSpawnRate = 0x30; // char : 1
		constexpr auto bProcessBurstList = 0x30; // char : 1
	}

	namespace n_UBP_UIResourceSingleton_C { // : UUIResourceSingleton
		constexpr auto MessageBoxWidgetClass = 0x28; // UMessageBoxWidget*
		constexpr auto MouseBlockWindowClass = 0x30; // UWindowRoot*
		constexpr auto LoadingScreenWidget = 0x38; // UWidget*
		constexpr auto InputBoxWidgetClass = 0x40; // UInputBoxWidget*
		constexpr auto GamepadHelpOverlayClass = 0x48; // UGamepadHelpOverlayBase*
		constexpr auto StartupSound = 0x50; // FSlateSound
		constexpr auto LoadingSound = 0x68; // FSlateSound
		constexpr auto RecipeBorderBitmapNormal = 0x80; // UTexture2D*
		constexpr auto RecipeBorderBitmapThrall = 0x88; // UTexture2D*
		constexpr auto SpawnDataTable = 0x90; // UDataTable*
	}

	namespace n_UHighlightsSummaryAsync { // : UBlueprintAsyncActionBase
		constexpr auto onSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto onFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_UMovieSceneSequence { // : UMovieSceneSignedObject
		constexpr auto EvaluationTemplate = 0xb0; // FCachedMovieSceneEvaluationTemplate
		constexpr auto TemplateParameters = 0x2d0; // FMovieSceneTrackCompilationParams
		constexpr auto bParentContextsAreSignificant = 0x2d1; // bool
	}

	namespace n_UDistributionVectorConstant { // : UDistributionVector
		constexpr auto Constant = 0x38; // FVector
		constexpr auto bLockAxes = 0x44; // char : 1
		constexpr auto LockedAxes = 0x48; // EDistributionVectorLockFlags
	}

	namespace n_UParticleSystemComponent { // : UPrimitiveComponent
		constexpr auto Template = 0x6c0; // UParticleSystem*
		constexpr auto EmitterMaterials = 0x6c8; // TArray<UMaterialInterface*>
		constexpr auto SkelMeshComponents = 0x6d8; // TArray<USkeletalMeshComponent*>
		constexpr auto bResetOnDetach = 0x6e8; // char : 1
		constexpr auto bUpdateOnDedicatedServer = 0x6e8; // char : 1
		constexpr auto bAllowRecycling = 0x6e8; // char : 1
		constexpr auto bAutoManageAttachment = 0x6e8; // char : 1
		constexpr auto RequiredSignificance = 0x6ec; // EParticleSignificanceLevel
		constexpr auto InstanceParameters = 0x6f8; // TArray<FParticleSysParam>
		constexpr auto OnParticleSpawn = 0x708; // FScriptMulticastDelegate
		constexpr auto OnParticleBurst = 0x718; // FScriptMulticastDelegate
		constexpr auto OnParticleDeath = 0x728; // FScriptMulticastDelegate
		constexpr auto OnParticleCollide = 0x738; // FScriptMulticastDelegate
		constexpr auto OldPosition = 0x748; // FVector
		constexpr auto PartSysVelocity = 0x754; // FVector
		constexpr auto WarmupTime = 0x760; // float
		constexpr auto WarmupTickRate = 0x764; // float
		constexpr auto bWarmingUp = 0x768; // char : 1
		constexpr auto SecondsBeforeInactive = 0x774; // float
		constexpr auto MaxTimeBeforeForceUpdateTransform = 0x780; // float
		constexpr auto bOverrideLODMethod = 0x788; // char : 1
		constexpr auto LODMethod = 0x78c; // ParticleSystemLODMethod
		constexpr auto bSkipUpdateDynamicDataDuringTick = 0x790; // char : 1
		constexpr auto ReplayClips = 0x7b0; // TArray<UParticleSystemReplay*>
		constexpr auto CustomTimeDilation = 0x820; // float
		constexpr auto OnSystemFinished = 0x828; // FScriptMulticastDelegate
		constexpr auto AutoAttachParent = 0x838; // TWeakObjectPtr<USceneComponent>
		constexpr auto AutoAttachSocketName = 0x840; // FName
		constexpr auto AutoAttachLocationType = 0x848; // EAttachLocation
		constexpr auto AutoAttachLocationRule = 0x849; // EAttachmentRule
		constexpr auto AutoAttachRotationRule = 0x84a; // EAttachmentRule
		constexpr auto AutoAttachScaleRule = 0x84b; // EAttachmentRule
	}

	namespace n_UAimOffsetBlendSpace1D { // : UBlendSpace1D
		constexpr auto bScaleAnimation = 0x140; // bool
	}

	namespace n_UBlueprint { // : UBlueprintCore
		constexpr auto bRecompileOnLoad = 0x50; // char : 1
		constexpr auto ParentClass = 0x58; // UObject*
		constexpr auto PRIVATE_InnermostPreviousCDO = 0x60; // UObject*
		constexpr auto bHasBeenRegenerated = 0x68; // char : 1
		constexpr auto bIsRegeneratingOnLoad = 0x68; // char : 1
		constexpr auto SimpleConstructionScript = 0x70; // USimpleConstructionScript*
		constexpr auto ComponentTemplates = 0x78; // TArray<UActorComponent*>
		constexpr auto Timelines = 0x88; // TArray<UTimelineTemplate*>
		constexpr auto InheritableComponentHandler = 0x98; // UInheritableComponentHandler*
		constexpr auto BlueprintType = 0xa0; // EBlueprintType
		constexpr auto BlueprintSystemVersion = 0xa4; // int32_t
		constexpr auto bNativize = 0x190; // bool
	}

	namespace n_UParticleModuleLocationPrimitiveCylinder_Seeded { // : UParticleModuleLocationPrimitiveCylinder
		constexpr auto RandomSeedInfo = 0x140; // FParticleRandomSeedInfo
	}

	namespace n_AActor { // : UObject
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto CustomTimeDilation = 0x80; // float
		constexpr auto bHidden = 0x84; // char : 1
		constexpr auto bNetTemporary = 0x84; // char : 1
		constexpr auto bNetStartup = 0x84; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x84; // char : 1
		constexpr auto bAlwaysRelevant = 0x84; // char : 1
		constexpr auto bReplicateMovement = 0x84; // char : 1
		constexpr auto bTearOff = 0x84; // char : 1
		constexpr auto bExchangedRoles = 0x84; // char : 1
		constexpr auto bPendingNetUpdate = 0x85; // char : 1
		constexpr auto bNetLoadOnClient = 0x85; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x85; // char : 1
		constexpr auto bBlockInput = 0x85; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x85; // char : 1
		constexpr auto bActorEnableCollision = 0x86; // char : 1
		constexpr auto bReplicates = 0x86; // char : 1
		constexpr auto bLostRelevancy = 0x86; // char : 1
		constexpr auto NetDriverName = 0x88; // FName
		constexpr auto bCanBeInCluster = 0x90; // char : 1
		constexpr auto RemoteRole = 0x91; // ENetRole
		constexpr auto Owner = 0x98; // AActor*
		constexpr auto ReplicatedMovement = 0xa0; // FRepMovement
		constexpr auto AttachmentReplication = 0xd8; // FRepAttachment
		constexpr auto Role = 0x118; // ENetRole
		constexpr auto AutoReceiveInput = 0x11a; // EAutoReceiveInput
		constexpr auto InputPriority = 0x11c; // int32_t
		constexpr auto InputComponent = 0x120; // UInputComponent*
		constexpr auto InputConsumeOption = 0x128; // EInputConsumeOptions
		constexpr auto NetCullDistanceSquared = 0x12c; // float
		constexpr auto ViewTargetNetCullDistanceSquared = 0x130; // float
		constexpr auto NetTag = 0x134; // int32_t
		constexpr auto NetUpdateTime = 0x138; // float
		constexpr auto NetUpdateFrequency = 0x13c; // float
		constexpr auto MinNetUpdateFrequency = 0x140; // float
		constexpr auto NetPriority = 0x144; // float
		constexpr auto LastNetUpdateTime = 0x148; // float
		constexpr auto bAutoDestroyWhenFinished = 0x14c; // char : 1
		constexpr auto bCanBeDamaged = 0x14c; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x14c; // char : 1
		constexpr auto bCollideWhenPlacing = 0x14c; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x14c; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x14c; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x14c; // char : 1
		constexpr auto SpawnCollisionHandlingMethod = 0x14d; // ESpawnActorCollisionHandlingMethod
		constexpr auto Instigator = 0x158; // APawn*
		constexpr auto Children = 0x160; // TArray<AActor*>
		constexpr auto RootComponent = 0x170; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x178; // TArray<AMatineeActor*>
		constexpr auto InitialLifeSpan = 0x188; // float
		constexpr auto Layers = 0x198; // TArray<FName>
		constexpr auto ParentComponentActor = 0x1a8; // TWeakObjectPtr<AActor>
		constexpr auto ParentComponent = 0x1b0; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x1b8; // char : 1
		constexpr auto bUseExtendedRelevancyTimeout = 0x1b8; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x1b8; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x1b8; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x1b8; // char : 1
		constexpr auto Tags = 0x1c0; // TArray<FName>
		constexpr auto HiddenEditorViews = 0x1d0; // uint64_t
		constexpr auto OnTakeAnyDamage = 0x1d8; // FScriptMulticastDelegate
		constexpr auto OnTakePointDamage = 0x1e8; // FScriptMulticastDelegate
		constexpr auto OnActorBeginOverlap = 0x1f8; // FScriptMulticastDelegate
		constexpr auto OnActorEndOverlap = 0x208; // FScriptMulticastDelegate
		constexpr auto OnBeginCursorOver = 0x218; // FScriptMulticastDelegate
		constexpr auto OnEndCursorOver = 0x228; // FScriptMulticastDelegate
		constexpr auto OnClicked = 0x238; // FScriptMulticastDelegate
		constexpr auto OnReleased = 0x248; // FScriptMulticastDelegate
		constexpr auto OnInputTouchBegin = 0x258; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnd = 0x268; // FScriptMulticastDelegate
		constexpr auto OnInputTouchEnter = 0x278; // FScriptMulticastDelegate
		constexpr auto OnInputTouchLeave = 0x288; // FScriptMulticastDelegate
		constexpr auto OnActorHit = 0x298; // FScriptMulticastDelegate
		constexpr auto OnDestroyed = 0x2a8; // FScriptMulticastDelegate
		constexpr auto OnEndPlay = 0x2b8; // FScriptMulticastDelegate
		constexpr auto BlueprintCreatedComponents = 0x3a8; // TArray<UActorComponent*>
		constexpr auto InstanceComponents = 0x3b8; // TArray<UActorComponent*>
	}

	namespace n_USubUVAnimation { // : UObject
		constexpr auto SubUVTexture = 0x28; // UTexture2D*
		constexpr auto SubImages_Horizontal = 0x30; // int32_t
		constexpr auto SubImages_Vertical = 0x34; // int32_t
		constexpr auto BoundingMode = 0x38; // ESubUVBoundingVertexCount
		constexpr auto OpacitySourceMode = 0x39; // EOpacitySourceMode
		constexpr auto AlphaThreshold = 0x3c; // float
	}

	namespace n_UGamemodeHintBase { // : URootWidget
		constexpr auto Label = 0x318; // FText
		constexpr auto keyboardLabel = 0x330; // FText
		constexpr auto InputActionName = 0x348; // FName
		constexpr auto keyboardActionName = 0x350; // FName
		constexpr auto KeyboardShowHold = 0x358; // bool
		constexpr auto GamepadShowHold = 0x359; // bool
		constexpr auto MirrorWidget = 0x35a; // bool
		constexpr auto KeyboardOnly = 0x35b; // bool
		constexpr auto GamepadOnly = 0x35c; // bool
	}

	namespace n_USessionInviteGame { // : UWindowRoot
		constexpr auto FriendsWindowBase = 0x398; // UFriendsGame*
		constexpr auto EntryViewClass = 0x3a0; // USessionInviteEntry*
		constexpr auto NumReceivedSessionInvites = 0x3a8; // int32_t
		constexpr auto NumSentSessionInvites = 0x3ac; // int32_t
	}

	namespace n_USlateWidgetStyleAsset { // : UObject
		constexpr auto CustomStyle = 0x28; // USlateWidgetStyleContainerBase*
	}

	namespace n_UNiagaraEmitterProperties { // : UObject
		constexpr auto EmitterName = 0x28; // FString
		constexpr auto bIsEnabled = 0x38; // bool
		constexpr auto SpawnRate = 0x3c; // float
		constexpr auto Material = 0x40; // UMaterial*
		constexpr auto RenderModuleType = 0x48; // EEmitterRenderModuleType
		constexpr auto StartTime = 0x4c; // float
		constexpr auto EndTime = 0x50; // float
		constexpr auto RendererProperties = 0x58; // UNiagaraEffectRendererProperties*
		constexpr auto NumLoops = 0x60; // int32_t
		constexpr auto UpdateScriptProps = 0x68; // FNiagaraEmitterScriptProperties
		constexpr auto SpawnScriptProps = 0xc0; // FNiagaraEmitterScriptProperties
	}

	namespace n_UMaterialExpressionFmod { // : UMaterialExpression
		constexpr auto A = 0x60; // FExpressionInput
		constexpr auto B = 0x98; // FExpressionInput
	}

	namespace n_UGetUserCharacterListCallProxy { // : UBlueprintAsyncActionBase
		constexpr auto onSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto onFailure = 0x38; // FScriptMulticastDelegate
		constexpr auto idList = 0x70; // TArray<UUniqueID*>
		constexpr auto CharacterListData = 0x80; // TArray<FCharacterListData>
	}

	namespace n_UMouseCursorBinding { // : UPropertyBinding
		constexpr auto SourceObject = 0x28; // TWeakObjectPtr<UObject>
		constexpr auto SourcePath = 0x30; // FDynamicPropertyPath
		constexpr auto DestinationProperty = 0x40; // FName
	}

	namespace n_UCircularThrobber { // : UWidget
		constexpr auto NumberOfPieces = 0x118; // int32_t
		constexpr auto Period = 0x11c; // float
		constexpr auto Radius = 0x120; // float
		constexpr auto PieceImage = 0x128; // USlateBrushAsset*
		constexpr auto Image = 0x130; // FSlateBrush
		constexpr auto bEnableRadius = 0x1c0; // bool
	}

	namespace n_UParticleModuleTrailSource { // : UParticleModuleTrailBase
		constexpr auto SourceMethod = 0x30; // ETrail2SourceMethod
		constexpr auto SourceName = 0x38; // FName
		constexpr auto SourceStrength = 0x40; // FRawDistributionFloat
		constexpr auto bLockSourceStength = 0x78; // char : 1
		constexpr auto SourceOffsetCount = 0x7c; // int32_t
		constexpr auto SourceOffsetDefaults = 0x80; // TArray<FVector>
		constexpr auto SelectionMethod = 0x90; // EParticleSourceSelectionMethod
		constexpr auto bInheritRotation = 0x94; // char : 1
	}

	namespace n_USignTextInputBase { // : UWindowRoot
		constexpr auto CloseOnClick = 0x318; // bool
		constexpr auto BlockPlayerInput = 0x319; // bool
		constexpr auto OpeningSlateSound = 0x320; // FSlateSound
		constexpr auto ClosingSlateSound = 0x338; // FSlateSound
		constexpr auto SignalClosing = 0x350; // FScriptMulticastDelegate
		constexpr auto SignalOpened = 0x360; // FScriptMulticastDelegate
		constexpr auto m_WindowHotkeys = 0x370; // TArray<FGamepadHotkeyHelp>
		constexpr auto m_InputComponent = 0x380; // UInputComponent*
		constexpr auto m_GUIModule = 0x388; // UGUIModule*
	}

	namespace n_UW_CC_KeyNavIndicator_C { // : UKeyNavIndicator
		constexpr auto Content = 0x320; // UNamedSlot*
	}

	namespace n_UW_HostLocal_C { // : UHostLocalBase
		constexpr auto UberGraphFrame = 0x518; // FPointerToUberGraphFrame
		constexpr auto AcceptAndBack = 0x520; // UHorizontalBox*
		constexpr auto ASSIGNED_IN_CODE__Difficulty_Barbaric = 0x528; // UImage*
		constexpr auto ASSIGNED_IN_CODE__Difficulty_Civilized = 0x530; // UImage*
		constexpr auto ASSIGNED_IN_CODE__Difficulty_Decadent = 0x538; // UImage*
		constexpr auto ASSIGNED_IN_CODE__Difficulty_Siptah_Barbaric = 0x540; // UImage*
		constexpr auto ASSIGNED_IN_CODE__Difficulty_Siptah_Civilized = 0x548; // UImage*
		constexpr auto ASSIGNED_IN_CODE__Difficulty_Siptah_Decadent = 0x550; // UImage*
		constexpr auto B_Abandonment = 0x558; // UW_TabButton_C*
		constexpr auto B_Back = 0x560; // UW_ButtonLarge_C*
		constexpr auto B_Barbarian = 0x568; // UW_TabButton_C*
		constexpr auto B_BarbarianSiptah = 0x570; // UW_TabButton_C*
		constexpr auto B_Chat = 0x578; // UW_TabButton_C*
		constexpr auto B_Combat = 0x580; // UW_TabButton_C*
		constexpr auto B_Crafting = 0x588; // UW_TabButton_C*
		constexpr auto B_Custom = 0x590; // UW_TabButton_C*
		constexpr auto B_DayAndNight = 0x598; // UW_TabButton_C*
		constexpr auto B_ExiledLands = 0x5a0; // UW_TabButton_C*
		constexpr auto B_General = 0x5a8; // UW_TabButton_C*
		constexpr auto B_Harvesting = 0x5b0; // UW_TabButton_C*
		constexpr auto B_Host = 0x5b8; // UW_ButtonLarge_C*
		constexpr auto B_Peasant = 0x5c0; // UW_TabButton_C*
		constexpr auto B_PeasantSiptah = 0x5c8; // UW_TabButton_C*
		constexpr auto B_PetAndHunger = 0x5d0; // UW_TabButton_C*
		constexpr auto B_Progression = 0x5d8; // UW_TabButton_C*
		constexpr auto B_Purge = 0x5e0; // UW_TabButton_C*
		constexpr auto B_RegionalAccessControl = 0x5e8; // UW_TabButton_C*
		constexpr auto B_ResetDefault = 0x5f0; // UW_ButtonLarge_C*
		constexpr auto B_Siptah = 0x5f8; // UW_TabButton_C*
		constexpr auto B_SIptahSettings = 0x600; // UW_TabButton_C*
		constexpr auto B_Soldier = 0x608; // UW_TabButton_C*
		constexpr auto B_SoldierSiptah = 0x610; // UW_TabButton_C*
		constexpr auto B_Survival = 0x618; // UW_TabButton_C*
		constexpr auto Brd_GameWindow = 0x620; // UBorder*
		constexpr auto CustomMenu = 0x628; // UVerticalBox*
		constexpr auto DescriptionSwitcher = 0x630; // UWidgetSwitcher*
		constexpr auto DifficultyPresets = 0x638; // UVerticalBox*
		constexpr auto I_Background = 0x640; // UImage*
		constexpr auto Image_13 = 0x648; // UImage*
		constexpr auto Image_34 = 0x650; // UImage*
		constexpr auto Image_35 = 0x658; // UImage*
		constexpr auto Image_36 = 0x660; // UImage*
		constexpr auto Image_37 = 0x668; // UImage*
		constexpr auto Image_38 = 0x670; // UImage*
		constexpr auto Image_39 = 0x678; // UImage*
		constexpr auto Image_41 = 0x680; // UImage*
		constexpr auto Image_42 = 0x688; // UImage*
		constexpr auto Image_43 = 0x690; // UImage*
		constexpr auto Image_154 = 0x698; // UImage*
		constexpr auto KeyNavAnchor = 0x6a0; // UW_TooltipOverlay_C*
		constexpr auto ServerSettings = 0x6a8; // UW_Settings_Server_C*
		constexpr auto SiptahDifficultyPresets = 0x6b0; // UVerticalBox*
		constexpr auto VerticalBox_Settings = 0x6b8; // UVerticalBox*
		constexpr auto Map = 0x6c0; // FName
		constexpr auto LocalDBFileExist = 0x6c8; // bool
		constexpr auto DefaultMapName = 0x6d0; // FName
		constexpr auto ContinueGame = 0x6d8; // bool
		constexpr auto SelectedButton = 0x6e0; // UFCButton*
		constexpr auto LastSelectedDifficultyOrCustomButton = 0x6e8; // UFCButton*
		constexpr auto BlockedPermission = 0x6f0; // EConanOnlinePermissions
		constexpr auto SiptahMapNape = 0x6f8; // FName
		constexpr auto FriendlyMapName = 0x700; // FString
		constexpr auto FocusedButtonBeforePrompt = 0x710; // UFCButton*
	}

	namespace n_URecipeLookup { // : UTableAccessor
		constexpr auto table = 0x28; // UDataTable*
	}

	namespace n_UMovieSceneSignedObject { // : UObject
		constexpr auto Signature = 0x28; // FGuid
	}

	namespace n_UStereoLayerComponent { // : USceneComponent
		constexpr auto bLiveTexture = 0x300; // char : 1
		constexpr auto bSupportsDepth = 0x300; // char : 1
		constexpr auto bNoAlphaChannel = 0x300; // char : 1
		constexpr auto Texture = 0x308; // UTexture*
		constexpr auto LeftTexture = 0x310; // UTexture*
		constexpr auto bQuadPreserveTextureRatio = 0x318; // char : 1
		constexpr auto QuadSize = 0x31c; // FVector2D
		constexpr auto UVRect = 0x324; // FBox2D
		constexpr auto CylinderRadius = 0x338; // float
		constexpr auto CylinderOverlayArc = 0x33c; // float
		constexpr auto CylinderHeight = 0x340; // int32_t
		constexpr auto StereoLayerType = 0x344; // EStereoLayerType
		constexpr auto StereoLayerShape = 0x345; // EStereoLayerShape
		constexpr auto Priority = 0x348; // int32_t
	}

	namespace n_UObjectLibrary { // : UObject
		constexpr auto ObjectBaseClass = 0x28; // UObject*
		constexpr auto bHasBlueprintClasses = 0x30; // bool
		constexpr auto Objects = 0x38; // TArray<UObject*>
		constexpr auto WeakObjects = 0x48; // TArray<TWeakObjectPtr<UObject>>
		constexpr auto bUseWeakReferences = 0x58; // bool
		constexpr auto bIsFullyLoaded = 0x59; // bool
	}

	namespace n_UInterpTrackSlomo { // : UInterpTrackFloatBase
		constexpr auto FloatTrack = 0x70; // FInterpCurveFloat
		constexpr auto CurveTension = 0x88; // float
	}

	namespace n_UParticleModuleVelocityBase { // : UParticleModule
		constexpr auto bInWorldSpace = 0x30; // char : 1
		constexpr auto bApplyOwnerScale = 0x30; // char : 1
	}

	namespace n_ABuildableSpawner { // : AActor
		constexpr auto SignalOnBuildingSpawned = 0x3d0; // FScriptMulticastDelegate
		constexpr auto InstanceClass = 0x3e0; // UClass*
		constexpr auto BuildingID = 0x408; // UUniqueID*
	}

	namespace n_UMaterialExpressionSceneTexture { // : UMaterialExpression
		constexpr auto Coordinates = 0x60; // FExpressionInput
		constexpr auto SceneTextureId = 0x98; // ESceneTextureId
		constexpr auto bClampUVs = 0x99; // bool
		constexpr auto bFiltered = 0x9a; // bool
	}

	namespace n_UAnimCompress_Automatic { // : UAnimCompress
		constexpr auto MaxEndEffectorError = 0x40; // float
		constexpr auto bTryFixedBitwiseCompression = 0x44; // char : 1
		constexpr auto bTryPerTrackBitwiseCompression = 0x44; // char : 1
		constexpr auto bTryLinearKeyRemovalCompression = 0x44; // char : 1
		constexpr auto bTryIntervalKeyRemoval = 0x44; // char : 1
		constexpr auto bRunCurrentDefaultCompressor = 0x44; // char : 1
		constexpr auto bAutoReplaceIfExistingErrorTooGreat = 0x44; // char : 1
		constexpr auto bRaiseMaxErrorToExisting = 0x44; // char : 1
	}

	namespace n_UEndMatchCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto onSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto onFailure = 0x38; // FScriptMulticastDelegate
	}

	namespace n_UQosRegionManager { // : UObject
		constexpr auto bUseOldQosServers = 0x28; // bool
		constexpr auto NumTestsPerRegion = 0x2c; // int32_t
		constexpr auto PingTimeout = 0x30; // float
		constexpr auto Datacenters = 0x38; // TArray<FQosDatacenterInfo>
		constexpr auto LastCheckTimestamp = 0x48; // FDateTime
		constexpr auto Evaluator = 0x50; // UQosEvaluator*
		constexpr auto QosEvalResult = 0x58; // EQosCompletionResult
		constexpr auto RegionOptions = 0x60; // TArray<FQosRegionInfo>
		constexpr auto ForceRegionId = 0x70; // FString
		constexpr auto SelectedRegionId = 0x80; // FString
	}

	namespace n_USceneCaptureComponentImprints { // : USceneCaptureComponent
		constexpr auto TextureTarget = 0x3e0; // UTextureRenderTarget2D*
		constexpr auto TextureTargetOutput = 0x3e8; // ETextureTargetOutput
		constexpr auto ReferenceHeightMap = 0x3f0; // UTextureRenderTarget2D*
		constexpr auto ImprintsMap = 0x3f8; // UTextureRenderTarget2D*
		constexpr auto MaterialParams = 0x400; // UMaterialParameterCollection*
		constexpr auto MaterialParameterName = 0x408; // FName
		constexpr auto MaterialParameterName2 = 0x410; // FName
		constexpr auto MaterialParameterName3 = 0x418; // FName
		constexpr auto CameraHeightOffset = 0x420; // float
		constexpr auto ImprintHeight = 0x424; // float
		constexpr auto ImprintFade = 0x42c; // float
		constexpr auto QualitySettings = 0x430; // TArray<FImprintQualitySettings>
		constexpr auto MaskTexture = 0x440; // UTexture*
		constexpr auto MaskResolution = 0x448; // FVector2D
		constexpr auto MaskUVOffset = 0x450; // FVector2D
	}

	namespace n_AConanSandboxLevelScriptActor { // : AConanLevelScriptActor
		constexpr auto bInputEnabled = 0x3d0; // char : 1
	}

	namespace n_UMaterialExpressionLandscapeLayerWeight { // : UMaterialExpression
		constexpr auto Base = 0x60; // FExpressionInput
		constexpr auto Layer = 0x98; // FExpressionInput
		constexpr auto ParameterName = 0xd0; // FName
		constexpr auto PreviewWeight = 0xd8; // float
		constexpr auto ConstBase = 0xdc; // FVector
		constexpr auto ExpressionGUID = 0xe8; // FGuid
	}

	namespace n_UScrollBarWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto ScrollBarStyle = 0x30; // FScrollBarStyle
	}

	namespace n_UMaterialExpressionReroute { // : UMaterialExpression
		constexpr auto Input = 0x60; // FExpressionInput
	}

	namespace n_UGameplayTask { // : UObject
		constexpr auto InstanceName = 0x30; // FName
		constexpr auto ChildTask = 0x60; // UGameplayTask*
	}

	namespace n_UNavLinkDefinition { // : UObject
		constexpr auto Links = 0x28; // TArray<FNavigationLink>
		constexpr auto SegmentLinks = 0x38; // TArray<FNavigationSegmentLink>
	}

	namespace n_UParticleModuleRotationRateMultiplyLife { // : UParticleModuleRotationRateBase
		constexpr auto LifeMultiplier = 0x30; // FRawDistributionFloat
	}

	namespace n_UTextPropertyTestObject { // : UObject
		constexpr auto DefaultedText = 0x28; // FText
		constexpr auto UndefaultedText = 0x40; // FText
		constexpr auto TransientText = 0x58; // FText
	}

	namespace n_UPlayFabExperimentationAPI { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnPlayFabResponse = 0x28; // FScriptMulticastDelegate
		constexpr auto CallAuthenticationContext = 0x110; // UPlayFabAuthenticationContext*
		constexpr auto RequestJsonObj = 0x118; // UPlayFabJsonObject*
		constexpr auto ResponseJsonObj = 0x120; // UPlayFabJsonObject*
	}

	namespace n_UServerRentalServerDetails { // : URootWidget
		constexpr auto SignalSelected = 0x318; // FScriptMulticastDelegate
		constexpr auto OnRequestServerStart = 0x328; // FScriptMulticastDelegate
		constexpr auto OnRequestServerStop = 0x338; // FScriptMulticastDelegate
		constexpr auto OnRequestServerRestart = 0x348; // FScriptMulticastDelegate
		constexpr auto OnRequestServerExtend = 0x358; // FScriptMulticastDelegate
		constexpr auto OnRequestServerEdit = 0x368; // FScriptMulticastDelegate
		constexpr auto OnSetExpanded = 0x378; // FScriptMulticastDelegate
		constexpr auto m_GameServer = 0x388; // FServerRentalGameServer
		constexpr auto m_ServerRentalBase = 0x400; // UServerRentalBase*
		constexpr auto m_ServerRentalRequestConnection = 0x408; // UServerRentalRequestConnection*
		constexpr auto ButtonClass = 0x410; // UFCButton*
	}

	namespace n_UDistributionFloat { // : UDistribution
		constexpr auto bCanBeBaked = 0x30; // char : 1
		constexpr auto bBakedDataSuccesfully = 0x30; // char : 1
	}

	namespace n_UVerticalBox { // : UPanelWidget
		constexpr auto Slots = 0x118; // TArray<UPanelSlot*>
	}

	namespace n_UPlatformInterfaceBase { // : UObject
		constexpr auto AllDelegates = 0x28; // TArray<FDelegateArray>
	}

	namespace n_URadialForceComponent { // : USceneComponent
		constexpr auto Radius = 0x300; // float
		constexpr auto Falloff = 0x304; // ERadialImpulseFalloff
		constexpr auto ImpulseStrength = 0x308; // float
		constexpr auto bImpulseVelChange = 0x30c; // char : 1
		constexpr auto bIgnoreOwningActor = 0x30c; // char : 1
		constexpr auto ForceStrength = 0x310; // float
		constexpr auto DestructibleDamage = 0x314; // float
		constexpr auto ObjectTypesToAffect = 0x318; // TArray<EObjectTypeQuery>
	}

	namespace n_UParticleSystemReplay { // : UObject
		constexpr auto ClipIDNumber = 0x28; // int32_t
	}

	namespace n_UPurgeTargetComponent { // : UActorComponent
		constexpr auto WallPathingFilterClass = 0xf8; // UNavigationQueryFilter*
		constexpr auto DefaultPathingFilterClass = 0x100; // UNavigationQueryFilter*
		constexpr auto PurgeCallRange = 0x108; // int32_t
		constexpr auto PathProbeRange = 0x10c; // float
		constexpr auto NavGenerationRange = 0x110; // float
		constexpr auto PurgeCommunity = 0x118; // TArray<int32_t>
		constexpr auto PurgeSlots = 0x128; // int32_t
		constexpr auto EventTime = 0x12c; // float
		constexpr auto PurgeCollision = 0x180; // TArray<UNavCollision*>
		constexpr auto CurrentAttackers = 0x190; // TArray<UTargetDistributionComponent*>
	}

	namespace n_UQueryLiveStreamsCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnQueriedLiveStreams = 0x28; // FScriptMulticastDelegate
	}

	namespace n_UFollowersContextMenu { // : UContextMenuBase
		constexpr auto SignalMenuClosed = 0x398; // FScriptMulticastDelegate
		constexpr auto m_ButtonClass = 0x3a8; // UFCButton*
		constexpr auto m_ButtonList = 0x3b0; // TArray<UFCButton*>
		constexpr auto NormalHovered = 0x3c0; // FSlateColor
		constexpr auto NormalColor = 0x3e8; // FSlateColor
		constexpr auto NormalPressedHovered = 0x410; // FSlateColor
		constexpr auto NormalPressed = 0x438; // FSlateColor
		constexpr auto m_MenuList = 0x460; // UNavigatableVerticalBox*
	}

	namespace n_UConanNewPathFollowingComponent { // : UConanPathFollowingComponent
		constexpr auto PathWidth = 0x3a8; // float
		constexpr auto BreakAngle = 0x3ac; // float
		constexpr auto AccelerationFactor = 0x3b0; // float
		constexpr auto AccelerationMinSpeed = 0x3b4; // float
		constexpr auto NavMeshSearchExtent = 0x3b8; // float
		constexpr auto AvoidanceMaxTimeHorizonSeconds = 0x3bc; // float
		constexpr auto AvoidanceMinTimeHorizonSeconds = 0x3c0; // float
		constexpr auto AvoidanceMinDistance = 0x3c4; // float
		constexpr auto AvoidanceSearchRadius = 0x3c8; // float
		constexpr auto InitialAvoidanceYawSearchRange = 0x3cc; // float
		constexpr auto AvoidanceMinSpeed = 0x3d0; // float
		constexpr auto SecondsUntilFullAvoidanceYawSearchRange = 0x3d4; // float
		constexpr auto AvoidPlayerCharacters = 0x3d8; // char : 1
		constexpr auto PredictedObstacles = 0x3e0; // TArray<FPredictedObstacle>
		constexpr auto YawAngleWeights = 0x3f0; // FPolarUtilityVector
		constexpr auto m_CandidateObstacles = 0x4b0; // TArray<AActor*>
	}

	namespace n_UMaterialExpressionDesaturation { // : UMaterialExpression
		constexpr auto Input = 0x60; // FExpressionInput
		constexpr auto Fraction = 0x98; // FExpressionInput
		constexpr auto LuminanceFactors = 0xd0; // FLinearColor
	}

	namespace n_USetUserLoginStatusCallProxy { // : UBlueprintAsyncActionBase
		constexpr auto onSuccess = 0x28; // FScriptMulticastDelegate
		constexpr auto AlreadyOnline = 0x38; // FScriptMulticastDelegate
		constexpr auto onFailure = 0x48; // FScriptMulticastDelegate
	}

	namespace n_UInterpTrackInstParticleReplay { // : UInterpTrackInst
		constexpr auto LastUpdatePosition = 0x28; // float
	}

	namespace n_ASphereReflectionCapture { // : AReflectionCapture
		constexpr auto DrawCaptureRadius = 0x3d8; // UDrawSphereComponent*
	}

	namespace n_UParticleModuleAccelerationDrag { // : UParticleModuleAccelerationBase
		constexpr auto DragCoefficient = 0x38; // UDistributionFloat*
		constexpr auto DragCoefficientRaw = 0x40; // FRawDistributionFloat
	}

	namespace n_UGameNetworkManagerSettings { // : UObject
		constexpr auto MinDynamicBandwidth = 0x28; // int32_t
		constexpr auto MaxDynamicBandwidth = 0x2c; // int32_t
		constexpr auto TotalNetBandwidth = 0x30; // int32_t
		constexpr auto BadPingThreshold = 0x34; // int32_t
		constexpr auto bIsStandbyCheckingEnabled = 0x38; // char : 1
		constexpr auto StandbyRxCheatTime = 0x3c; // float
		constexpr auto StandbyTxCheatTime = 0x40; // float
		constexpr auto PercentMissingForRxStandby = 0x44; // float
		constexpr auto PercentMissingForTxStandby = 0x48; // float
		constexpr auto PercentForBadPing = 0x4c; // float
		constexpr auto JoinInProgressStandbyWaitTime = 0x50; // float
	}

	namespace n_AConanCharacter { // : ACharacter
		constexpr auto NPCWasSpawnedByAPlayer = 0x818; // bool
		constexpr auto BlockIdleFidgets = 0x820; // bool
		constexpr auto NPCAttacksBuildings = 0x821; // bool
		constexpr auto OnCharacterNameChanged = 0x910; // FScriptMulticastDelegate
		constexpr auto OnCharacterSpawnTableIDset = 0x990; // FScriptMulticastDelegate
		constexpr auto AttributeSystem = 0x9a0; // UAttributeSystem*
		constexpr auto PreferCurrentWeaponWhenSwapping = 0x9a8; // bool
		constexpr auto GrassOcclusionComponent = 0x9b0; // UGrassOcclusionComponent*
		constexpr auto bThrallAsyncLoadDone = 0x9d0; // bool
		constexpr auto OnSecondTick = 0x9d8; // FScriptMulticastDelegate
		constexpr auto m_InteractingActor = 0x9e8; // AActor*
		constexpr auto WeaponChangeDisabled = 0x9f8; // bool
		constexpr auto FreezeAllItems = 0x9f9; // bool
		constexpr auto m_IsReparing = 0x9fa; // bool
		constexpr auto HasTimeCatchedUp = 0x9fb; // bool
		constexpr auto FeatVersion = 0x9fc; // int32_t
		constexpr auto m_CurrentTarget = 0xa00; // UObject*
		constexpr auto m_CurrentSubTargetIndex = 0xa08; // int32_t
		constexpr auto CharacterUniqueID = 0xa10; // UUniqueID*
		constexpr auto CharacterGuildID = 0xa18; // UUniqueID*
		constexpr auto CharacterIDOverride = 0xa20; // UUniqueID*
		constexpr auto m_LastEnteredLandClaimOwnerId = 0xa28; // int64_t
		constexpr auto SourceSpawnTable = 0xa30; // FName
		constexpr auto ComboPresetsMap = 0xa38; // TMap<WeaponArcheTypes, FComboPresetTableRow>
		constexpr auto isAlive = 0xa88; // bool
		constexpr auto community = 0xa8c; // int32_t
		constexpr auto IsAggressive = 0xa90; // bool
		constexpr auto IsThrall = 0xa91; // bool
		constexpr auto IsPet = 0xa92; // bool
		constexpr auto IsDialogNPC = 0xa93; // bool
		constexpr auto MinEmoteTime = 0xa94; // float
		constexpr auto MaxEmoteTime = 0xa98; // float
		constexpr auto EmoteChance = 0xa9c; // float
		constexpr auto HasCombatTarget = 0xaa0; // bool
		constexpr auto WaypointAcceptanceRange = 0xaa4; // float
		constexpr auto CombatTargetLocation = 0xab4; // FVector
		constexpr auto EmoteController = 0xac0; // UEmoteController*
		constexpr auto TargetingComponent = 0xac8; // UTargetDistributionComponent*
		constexpr auto AvoidanceComponent = 0xad0; // UAvoidanceComponent*
		constexpr auto LastFollowerRescueTimestamp = 0xae8; // FDateTime
		constexpr auto WalkSpeed = 0xaf0; // int32_t
		constexpr auto RunSpeed = 0xaf4; // int32_t
		constexpr auto MaxKnockbackChainTime = 0xaf8; // FTimespan
		constexpr auto KnockbackImmunityPeriod = 0xb00; // FTimespan
		constexpr auto IsInStunBreakWindow = 0xb08; // bool
		constexpr auto CurrentRotationMultiplier = 0xb0c; // float
		constexpr auto SteeringRotationRate = 0xb10; // float
		constexpr auto DefaultRotationRate = 0xb14; // float
		constexpr auto DoubleJumpTimeoutTime = 0xb18; // float
		constexpr auto isDoubleJumpTimoutTimerActive = 0xb1c; // bool
		constexpr auto HasDoubleJumped = 0xb1d; // bool
		constexpr auto currentSurfaceType = 0xb1e; // EPhysicalSurface
		constexpr auto CachedHitResultForGroundSurface = 0xb20; // FHitResult
		constexpr auto OnActionStart = 0xba8; // FScriptMulticastDelegate
		constexpr auto OnActionEnd = 0xbb8; // FScriptMulticastDelegate
		constexpr auto SprintNoCost = 0xbe0; // bool
		constexpr auto SenseDetection = 0xbe1; // bool
		constexpr auto PlayerInvisibility = 0xbe2; // bool
		constexpr auto IsDemiGod = 0xbe3; // bool
		constexpr auto OnCharacterStateChanged = 0xbe8; // FScriptMulticastDelegate
		constexpr auto AdditionalInteractionExtent = 0xc70; // float
		constexpr auto LastDamageCauserCharacter = 0xc78; // AConanCharacter*
		constexpr auto DisengagementDistance = 0xc80; // float
		constexpr auto EngagementDistance = 0xc84; // float
		constexpr auto SignalClientOnDamageTaken = 0xc88; // FScriptMulticastDelegate
		constexpr auto SignalOnKilled = 0xc98; // FScriptMulticastDelegate
		constexpr auto CarriedPeople = 0xea0; // TArray<AConanCharacter*>
		constexpr auto BeingCarriedWeight = 0xeb0; // float
		constexpr auto EnableFloorTilt = 0xeb4; // bool
		constexpr auto EnableTiltRoll = 0xebc; // bool
		constexpr auto TiltAdjust = 0xec0; // float
		constexpr auto MaxTiltPitch = 0xec4; // float
		constexpr auto MaxTiltRoll = 0xec8; // float
		constexpr auto bRootMotionAutoFreeze = 0xecc; // bool
		constexpr auto OnRootMotionAutoFrozen = 0xed0; // FScriptMulticastDelegate
		constexpr auto ClimbingBlockingVolumeCount = 0xee0; // int32_t
		constexpr auto CharacterIKCollection = 0xef0; // FCharacterIKCollection
		constexpr auto ReplicatedHangingFromCeiling = 0x1180; // bool
		constexpr auto ReplicatedIsInSlidingMode = 0x1181; // bool
		constexpr auto NavMeshIgnoreComponentUpdate = 0x1182; // bool
		constexpr auto NavMeshIgnoreChildComponentUpdate = 0x1183; // bool
		constexpr auto OnCharacterPossessedOnClient = 0x1188; // FScriptMulticastDelegate
		constexpr auto LastCryForHelp = 0x1198; // float
		constexpr auto AllowCryForHelp = 0x119c; // bool
		constexpr auto AllowTargetSpottedCry = 0x119d; // bool
		constexpr auto CryForHelpRange = 0x11a0; // float
		constexpr auto TargetSpottedCryRange = 0x11a4; // float
		constexpr auto AdditionalFollowingDistance = 0x11a8; // float
		constexpr auto SignalCharacterIsBuilding = 0x11b0; // FScriptMulticastDelegate
		constexpr auto SignalCharacterIsBuildingThrall = 0x11c0; // FScriptMulticastDelegate
		constexpr auto SignalMountReplicated = 0x11d0; // FScriptMulticastDelegate
		constexpr auto SecondTickRate = 0x11e0; // float
		constexpr auto m_CreatedFromCharacterCreation = 0x11e4; // bool
		constexpr auto WasKilledByItself = 0x11e5; // bool
		constexpr auto HungerEnabled = 0x11e6; // bool
		constexpr auto ThirstEnabled = 0x11e7; // bool
		constexpr auto OnCharacterMoved = 0x11e8; // FScriptMulticastDelegate
		constexpr auto OnMountStaggered = 0x11f8; // FScriptMulticastDelegate
		constexpr auto HeightToSaddle = 0x1208; // float
		constexpr auto MountCameraOrientation = 0x120c; // FRotator
		constexpr auto IsMount = 0x1218; // bool
		constexpr auto MountedNPCID = 0x1220; // int64_t
		constexpr auto IsSpeaking = 0x1270; // bool
		constexpr auto OnCharacterOverridePvPChanged = 0x12f0; // FScriptMulticastDelegate
		constexpr auto m_TetheringController = 0x1300; // UConanTetheringController*
		constexpr auto ForcedNetRelevantObservers = 0x1308; // TSet<TWeakObjectPtr<AConanPlayerController>>
		constexpr auto EngagementBehavior = 0x1358; // EAIEngagementBehavior
		constexpr auto FollowerTactic = 0x1359; // EAIFollowerTacticType
		constexpr auto m_PendingStreams = 0x1368; // TSet<UObject*>
		constexpr auto m_CharacterBio = 0x13b8; // FText
		constexpr auto m_AllowedBioAccess = 0x13d0; // EBiographyAccess
		constexpr auto m_AllowedBioSharing = 0x13d1; // EBiographySharing
		constexpr auto CharacterLayoutSanitized = 0x13d2; // bool
		constexpr auto m_CharacterState = 0x1428; // ECharacterState
		constexpr auto m_KillerName = 0x1440; // FText
		constexpr auto m_KillerId = 0x1458; // FUniqueNetIdRepl
		constexpr auto m_StatHolder = 0x1470; // UStatHolder*
		constexpr auto m_GameState = 0x1478; // AConanGameState*
		constexpr auto m_HungerSystem = 0x1480; // UHungerSystem*
		constexpr auto m_EnduranceData = 0x14a0; // FEnduranceData
		constexpr auto m_ActorPersistence = 0x14b0; // UActorPersistenceComponent*
		constexpr auto m_EmoteInventory = 0x14b8; // UEmoteInventory*
		constexpr auto m_BuildSystem = 0x14c0; // UBuildSystemComponent*
		constexpr auto m_CharacterName = 0x14c8; // FText
		constexpr auto m_GUIControlMode = 0x14e8; // EGUIControlMode
		constexpr auto m_OverridePvP = 0x1500; // char : 1
		constexpr auto m_BlockGuildInvites = 0x1500; // char : 1
		constexpr auto m_BattleStandardDialog = 0x1508; // UMessageBoxWidget*
		constexpr auto SprintStaminacost = 0x1688; // float
		constexpr auto SwimStaminacost = 0x168c; // float
		constexpr auto MaxLoadingInvulnerabilityTime = 0x16b0; // float
		constexpr auto LoadingInvulnerabilityGraceTime = 0x16b4; // float
		constexpr auto IsLoadingInvulnerable = 0x16b8; // bool
		constexpr auto IsCombatConcussiveRegenInterrupted = 0x16b9; // bool
		constexpr auto CombatConcussiveRegen = 0x16bc; // float
		constexpr auto CombatConcussiveAccumulation = 0x16c0; // float
		constexpr auto CombatStaminaRegenMod = 0x16c4; // float
		constexpr auto IsCombatPossessed = 0x16c8; // bool
		constexpr auto PerkSystemComponent = 0x16d0; // UPerkSystemComponent*
	}

	namespace n_UMovieSceneColorTrack { // : UMovieScenePropertyTrack
		constexpr auto bIsSlateColor = 0xe0; // bool
	}

	namespace n_USpectatorPawnMovement { // : UFloatingPawnMovement
		constexpr auto bIgnoreTimeDilation = 0x1a8; // char : 1
	}

}